aad in and sub adc data16 cwtl fwait insb xchg and test leave imulb movsl xchg sub js mov (bad) jb outsb ja xchg and andl fnstcw jl je xchg push jge sbb outsl (bad) mov lret jge xchg adc addl int dec pop jge,pt sbb mov xchg dec push cltd sbb aad or (bad) (bad) enter cwtl iret rcl mov loope jecxz lea clc dec dec pop pusha adc cmp std (bad) sti icebp rcrl mov sbb out sub lahf ja push ja mov push xor stos arpl out fcompl sub cmp xchg mov sbbb jmp pop in and jae jns jnp pop xchg in ljmp call popf addl jg dec stos outsl loope outsl (bad) push jp lahf gs cmp mov sub ret je jmp fs in outsl popa (bad) fldcw into dec lret push xor xor inc jmp cmp xchg imul movsb (bad) mov xchg in cld lret das test jbe xor imul pop in push adc fmul (bad) js jecxz popf push adc fs pop lret pop and icebp mov inc int3 repz mov hlt mull and mov jl lds arpl or popa out sbb mov sub push inc mov xchg push stos cli js (bad) jae mov mov fs in mov mov add or mov loop inc mov xor in push enter sub mov xor scas fdivrl adc std mov fistl cwtl out inc lret mov cmpsb icebp dec dec cmpsl push jnp cs pop popa daa mov aam sub test movsb push into out jl fcoml sbb add js mov cld pop mov fistpll push out mov int or (bad) (bad) ja rorl into cmp (bad) ret and push adc in mov rcr cmp nop imul cwtl mov xchg adc jg push mov cld jmp les sahf adcl mov int3 repnz (bad) in ja test pop adc (bad) sub xchg mov in xor and mov test or inc shlb push test jns jmp es cmp push rolb icebp std enter push mov cmpsl mov or je jg insl mov je jo test nop popf inc subb or add int3 mov fmull in inc fstps mov sti in dec mov fnstsw lods je sub jecxz (bad) repz div mov cmc sarl test in cmc (bad) fs cmpsb imul popa out xor int loopne mov lods mov fimull leave stc jl aas fs sbb mov lds aaa aaa dec push pop sbb ffreep mov pop dec popa stos ret xor rcrb scas sbb push lock shlb (bad) ss (bad) cltd je jo je enter or std icebp sbb int3 cmp xchg clc shl fnstsw mov iret int3 lods dec lret shr (bad) adc sbbb inc cmp cmpsb repz pop jl mov in andb enter arpl int sub in int mov (bad) cld jae mov dec cmp insb movsb in jmp mov mov fstpl sub int3 (bad) out push lcall aam sahf inc mov lret andb aam jecxz enter push stc xchg (bad) dec mov xchg mov ja dec mov mov sbb fwait test (bad) stos mov inc jnp and sub mov mov cmp mov xchg lods adc (bad) lret in mov xchg jecxz mov xchg sub outsb aam movsb test dec jecxz mov fs fcoml mov int lods dec xor mov xchg dec in cmp push in imul mov mov faddl repnz loope cli inc mov cli fldl clc fidivl aas pop fadd mov clc jno sbb inc inc dec mov adc (bad) dec outsb mov sti dec lods dec fwait push push xor sti out xchg xor cmp into test es xchg int3 jae and inc push insb call (bad) jge xor loopne and xchg clc fadd jne in mov jl push fs ror out imul jno incl sbb leave jnp xorl idivl aad aam dec outsl inc adc es push mov dec mov and cmp xor call mov in pop ljmp push mov gs jecxz (bad) dec leave lds out shlb repz imul into rclb cmpsl mov (bad) cmp mov pop jle jns xor fsubr popf shll xchg xchg adc dec in xchg pop int3 and mov into ja jae xchg adc test gs (bad) or sub inc push xor loopne dec outsl xor push flds test adcb pushf jecxz and in sub cwtl sbb loopne addr16 adc inc jbe inc mov adc rcll cld xchg mov inc rorb test xchg ss lea das in cmp hlt (bad) push pop (bad) hlt mov aaa pushf nop (bad) mov pop dec outsl pop inc xchg pop pop aad jne xlat and pop jmp jb int inc jl mov test pop inc cmc sub mov data16 int3 mov xor fs xchg mov cmp mov and push or mov mov hlt mov (bad) jl sbb adc sub xlat or into test xchg pop push out rcrl scas lret lret andl cld add clc (bad) in lock mov adc xor jns lods pop sbb cwtl or mov push int3 jmp shl mov pop rorl rorb shll cmpsb xchg xchg jle adc (bad) insb ret lods test pop dec inc hlt inc adc movsb js inc scas jl sbb repz arpl outsl fdivr jmp dec mov push mov clc daa (bad) mov loopne fnsave cli outsb xlat mov jae inc clc jno mov cli movsl in cwtl jbe js jo enter rcrb (bad) jo shll add jmp leave hlt jns aas mov sbb in lock ror outsl popa iret sub jnp into jb pop es fstp (bad) js movsl lock shr in xchg in loopne insb mov sti ret faddl mov pop jae iret dec jecxz test mov xchg int mov lahf sti cmp mov movsb xchg lods mov cmpsl sar jecxz mov push xor test leave cltd mov dec mov push push adc mov sbb icebp mov and sahf jecxz mov mov in jns int3 mov lahf nop lret scas addl pop lds (bad) movsl fs into mov mov pushf mov cmpsb xchg js push fwait lret outsb nop xlat mov inc dec rcr repz pop adc jmp inc aas (bad) jb sub mov cltd cmp mov xchg jg addr16 pop in mov add mov or sbb and xchg add mov jl mov rclb mov in inc jnp je pop mov push cli stos pop fnsave nop jge push daa dec nop inc jle and pop jns pop xchg pusha cmpsl xchg dec popa cmpsl in jp push sar lods cmp fwait (bad) xchg lods ljmp fs and mov jge xor pop (bad) cmp popf jbe push lcall (bad) rorl repz cld arpl lret lds xor sub loopne lret jae jmp jo mov insb pop lods cmp (bad) cmpsb daa adc dec cmp daa fcompl clc cmp fimul add dec mov cli sbb popf and cs sbb in cwtl dec jno push pop mov adc pop xorl push pop aas leave mov std idivb orb push sti xor push in and in in dec sub adc mov (bad) out enter and push or pushf jne and enter push xor sbb jne ja mov pop add ret mov pusha and fnsave pop inc sub pop pop push lock mov add andb xchg pop sbb xor jb mov std jns imul xchg call lock repz jne jno xchg popf inc sub push loopne scas lds jl adc mov mov repz in popf mov mov test cld add dec daa imul outsb inc out popf je cld lock xor push loop inc push inc ficom or aaa hlt xor imul xlat mov insl pop dec lds (bad) lods sarl lret push test ja mov push mov es test inc pop push daa popf push test shr dec mov test cmp cmp outsl int3 and into loopne sarb in push mov test test jae ret loope jge xchg popf into fstps mov sarl ljmp add in cld pusha jge (bad) push mov test int3 js mov xchg cltd les cmp dec outsl xor jge mov xchg adc ret cmp cmc inc bound bound jne adc ror or comiss xlat in xor pusha int aas xchg lret inc ficomp mov push cli (bad) or icebp cli popf and js aas ds (bad) cmp lock mov push mov nop popf sub test mov jg into (bad) cs sub int push dec lahf js push (bad) (bad) pop fdivr fdecstp jmp and push pop js out lods cmp and pop xlat fistl sbb fcoms daa into (bad) sbb cli in and pop xor js enter lret jne xchg add cmp or pop and mov or or push adc dec push jae cmp pop pop std xor cmp ss icebp inc jmp (bad) mov sbb mov ss mov mov and iret or sbb dec add faddp or bound cli loopne push int jmp out mov xchg loop loop dec mov mov out daa daa (bad) jne jg pop xor sarb add xor adc les lret and and rcrb test and loope dec ret fsubrs mov aad out ret jne cmpl repz (bad) pop outsl inc or push mov pop cmp rolb add push push lea das jns cltd repnz add sub das lcall jp inc and stos sub sub (bad) icebp add icebp out ret and in (bad) push adc sub outsb pop push sbbb loop sub mov adc and ret sub adc (bad) push and aam insl cld adc dec add or push inc test fcomp iret js inc repnz jbe out and adc dec ficomp inc sti out imul dec push out loopne sub cmpsb jns and and xchg push pop adc jecxz push dec sbb mov imul and push and inc in or add sbb jg jbe inc sbb in adc add inc jo sti loopne mov pop js cmc adc cs and jmp cmc loope daa pop negl out adc inc xchg sbb (bad) sub sti out insl add push stc in sar and incl dec dec add aas pop (bad) pusha sbb add popa adc aas lahf into rolb lock adc pusha adc mov sbb aas inc add mov lcall cmp cmpsb cmc inc sub (bad) negl push mull or cmp imul pusha push jmp stos xor fcomps lret mov (bad) ljmp ljmp dec mov pusha (bad) mov (bad) mov push sbb scas sbb and pushf push repz xor lds pop add pop jecxz shr insl add pop sbb sub aad iret or into push test fldt xchg lahf fidivrl mov in pop add dec fs and push cld loope repz repnz xor ss pop push mov pop mov int loop ficompl jp sbb leave dec arpl inc in pop xlat and pop in daa or cld aaa popa xor inc inc aad inc adc ds push (bad) inc mov lea or sbb dec sbb repnz xchg adc aaa and and sbb icebp loope call xor cmp inc sub adc push xchg lret in addl adc lea (bad) shl pop pop sub pop push mov aam in sbb in jbe add enter loop inc sub push push adc cmovbe add xchg mov stc faddl jg push mov fistl into sub add out loop and int3 (bad) push pop ficomp jmp cmpsl sub cld loop int3 icebp and sbb add push push xor mov fcompl push ret ror les xlat xor mov mov jecxz adc and sahf add notl cmp add iret (bad) out popa sbb add sub imul iret dec repnz jae xor shlb repnz or cmp mov jno jmp outsl iret out xlat sbb jecxz ds sbb scas icebp and pusha mul pop pusha icebp in fsub or jne mov pop decb cli lds sub fsubrs shrb gs popa pop movsb insb imul loope popa hlt add push mov es (bad) mov js outsb mov test pop sub add addl sub mov dec mov jnp lods push fisubr mov mov js (bad) js pop fcomip xor iret and xlat cld aad mov mov jge dec lahf out and push mov dec pop (bad) jb sub adc out sub dec call psrlw sbb aas ss scas add push inc inc push add call or adc lret stc mov enter (bad) fistpl add test das pop sub pusha faddl repz xor push xchg jmp (bad) sbb iret test adc (bad) add dec aaa xor cmp inc mov into mov sub (bad) or test jmp (bad) (bad) cmpsb mov push or jle test inc push mov fidivrl jge imul cmp push jb jbe imul xor imul xor fcompl jno ja sbbb (bad) push xchg mov add fnop add dec push mov and sub cmp adc (bad) sti add test push pop fldcw out xor adc or or add cmp xor jecxz enter pop jge test mov repnz sbb lds pop jns jl add pop pop push fstl in push xor dec cmp clc in not mov dec stc sub das push sub pop dec dec adc pop pop jg lock subl sbb xchg test sbb pusha fwait and mov insb jae sbb insb pop xor push push cld mov dec int fstpt fisttpll inc (bad) shlb repnz jg or push xchg mov inc or push or dec imul test ja les pop inc in insb mov js lahf pop push add push jo (bad) xor pop dec cmpsl test ror dec xchg lock in out adc negl idiv stos push sbb ficoml (bad) into nop jbe or dec lods call push sbb rolb mov jae and cli jg stos repnz jmp cmp jo fcompl ret xchg in idivl aaa dec push mov (bad) mov mov push xor fs aas (bad) rcl xlat cli add mov aad push mov pushl pop je insb (bad) mov xchg repnz pop cs pop mov cwtl xchg xor jae pop clc dec (bad) repz idivb popa jmp add dec in rcrl (bad) mov xor out and mov jnp subl or sub rcrl push hlt lods jae mov push push ret push test call mov divb pop dec push sub insb pop dec and pop idivb cmp das add cld pop sbb call pop cmp cmp scas xchg xor std out (bad) lods push inc mov cltd xchg cld lds hlt xor xor addr16 mov inc xor loope fadd shrl add fwait sbb (bad) aad repz jg int3 lcall out or and lret pop movsb dec or pushf ret sbb pop push adc or sahf sub loope sahf frstor mull rcl lods xor mov mov aad cmpsl dec std mov loop mov and fild push ljmp gs jl in mov into cmpsb out lods pop cmpl sub mov pop cwtl jae les and jge lods cmpl fimull cltd aad dec (bad) xchg inc (bad) add pusha sub xchg pop push int addr16 mov in pop addl lret inc (bad) mov cltd and xchg ror push arpl xor (bad) negb pushf gs loop dec mov sub movsb lock cld and cmp sub out pop daa and fcmovb or outsl mov pop ret push inc imul lds mov dec jmp pop movsb mov fnstsw mov call (bad) cmpsb (bad) fidivrl enter inc lret xchg loopne pop std pop (bad) loop pop addr16 insb mov fs or (bad) movsl in pop ss xor inc pop cmc add adcl pop jnp xchg inc jle cmc pop xlat sub loopne ret push pusha xlat add sub jnp (bad) aam fs int3 jecxz cmp pop jne std ffreep leave add xchg adc mov and mov shll adc in imul cmp or push mov mov adc sub or repnz stc sbb lret scas sub xor push adc mov rcl out push cltd xor ljmp xor sbb sbb pop lock jo ss sub bnd sub mov ret mov inc cmp xor inc scas std loop lret hlt adc jecxz pop rsm shrb mov es loope jle jp ja in mov ret add add mov cmpsl cli (bad) xor mov add icebp mov (bad) shll insb loope jecxz movsl cltd mov fnop jg andl cmp push xor in ja fsubp (bad) jbe pop sti sbb scas mov insb xchg push repnz mov (bad) leave (bad) jmp xchg jbe int insb decl xchg aas jne pushf iret insl or push add lods push mov push cs icebp rcl les sub aas idivl mov (bad) dec add xchg cmp xor pop mov mov mov fs push ja ja,pn std cmc mov scas adc (bad) mov movsl (bad) cwtl mov cmp pop fwait inc repnz fstl aad pop popa mov ja mov xlat (bad) iret pop addr16 mov (bad) insb mov jo mov cltd mov mov daa cmpsl jg in loope insb fwait (bad) jp pop loopne js jae and (bad) mov (bad) sbb loope mov rcll stc out fdivrs pusha int mov clc mov jg adcl xlat inc mov and jo lock leave push jae fcoms cmp push rcl adc and pushf test mov sub mov inc mov or rclb push adc jge in xchg imulb rcrl das pop clc out mov or xchg jg and ds rcl add fnstcw add fcmovnb lcall in les jge jle jmp sbb add lods add mov mov or scas cmp sarl mov fcomps aaa push jge fstl lods push pushf mov js fcomp dec insb xchg rclb ljmp stos loop xor jno push ret adc shlb xor movsl notl out push rclb std jmp xchg sub inc jbe arpl inc or inc or jnp pop pop jno sbb mov stos jbe fistl pop std sub aad pop stos mov rorb or xchg imul mov fisttpll cmp imul rolb icebp (bad) not test pusha cmpsl adc jnp (bad) jmp call lods inc push leave faddl add pushf rorl insl stos mov mov cmpsb dec cmc xchg rorl aas imul addr16 popa int3 lret cld add xor mov sbb fsubr dec outsl orl roll popf jo lods fsub loope fmuls sub mov (bad) ljmp test jne (bad) cmp xor mov loopne out mov in jb imul xlat icebp in (bad) push imul jnp ljmp lret dec cmpsb jecxz (bad) fimull aas data16 lock stos stc sbb xlat sbbl (bad) cmc in jmp (bad) jo div cmp call int outsb push inc fcmovnbe mov cmp vorps ds mov xchg adc imul cltd (bad) fs ret stos out xchg push cld push (bad) lret mov inc hlt lock mov cwtl ffreep sub xchg mov adc mov add and mov int adc xchg mov cmp insl mov test xor movsb mov test mov mov in movsb pop mov xchg mul jle sti and shl dec (bad) out std imul popf cmp sub fptan pop aam push ds jnp and stos pop in push jo iret loop xchg xchg int3 mov mov rcl hlt faddl aam cmpsl ja cmp arpl jae fs or je lea leave clc dec jl aad and sahf ja jmp lret loopne jmp fnstsw fidiv sti push lcall cmp jns xor sub addl jmp sub icebp testb jbe stc mov stos dec push and imul in xchg jo pop imul popl and fidivl ds stos stc mov cmp outsb push adc mov popf mov mov jecxz in scas lea in sarl out or mov mov pushf mov popf pop cmp mov jp int int3 nop cmp cmp cmp pop inc xchg clc mov outsl mov sbb das movsb pmulhw cmc pop xchg lret iret dec mov jne xor stos jl pop add lods mov test inc insb jnp pop in fxam mov test sub jmp jg popa cmc cmp xor sti divl adc push xor or inc sub mov push icebp lcall xchg mov mov mov mov lret (bad) fs jecxz shrl ja outsb fmull aam stos stc icebp xlat addr16 inc clc xchg push clc cli cmp js fildll cmp imul jecxz lret cmp add int3 mov pop mov xlat sbb in jne and sarl les pop jo out (bad) jo out mov mov daa shlb sar test (bad) nop cmpsb add pop out inc in mov cmpsl out cmp push pushf mov js jnp divl ds inc jmp movsl loop cmp xchg jmp (bad) test xchg test jp movsl mov negl mov int3 lahf mov xchg dec outsl or cmpsl mov test aas fistpll ss aas mov lahf out pop pop dec mov pop testl push cmpsb inc mov cld lahf xchg dec push xor insb jp in jae in xlat pop test sbb subl sbb div mov test cmp pop mov jns outsl gs xchg ret mov in sbb cmc in fs sbb pop jge mov jno inc cmp mov jae rcr xchg enter (bad) test jle addr16 test add jg push stos out fs xor mov (bad) int3 fdivr pop sbb kmovd fldl movsl mov jbe das (bad) call dec stc sti cltd in jmp mov imul mov dec lret adc fwait cld ljmp outsl out mov mov fwait lcall mov mov test fdivrs inc das mov movsb mov xor aas lret xor ljmp insl jmp test imul loopne sahf pop aas mov mov and jp in pusha call pop in (bad) mov fs mov (bad) in mov jge add jno repz les mov scas imul and in stos mov add out clc mov setl (bad) fwait in test (bad) jecxz (bad) test clc cmpsl int inc pop insl das cmpsb je inc dec sub aaa inc xchg arpl daa or mov fiadd add lods xchg inc arpl lret push das test jb lea rol cmp out mov insb sbb outsb test push inc inc outsl dec les in xor pop notb mov mov pop or ret lock mov jae test int call cwtl sbb outsb mov int xor std lds add dec scas mov int3 sbb pop xchg xlat shlb jmp ja xchg out fs push inc mov pushf in (bad) jl inc fwait adc sbbl mov loop addr16 sti (bad) movsl clc fdivl mov data16 pop jecxz mov mov test lahf dec lret lods (bad) pop jbe cwtl sbb das mov lods lods mov icebp lea adc insl cmp xor popl dec js (bad) adc leave cmp scas adc fs jecxz int jl add fwait scas pop sub testl push add xchg cmp sbb gs cmp mov dec jge or or fistpl test (bad) imul dec mov test repnz push mov in mov adc cmp jns or stos notb rcll rolb insl mov mov and insl aas mov (bad) in (bad) int3 scas pusha int3 fsubrs (bad) lds fs into lods imul mov imul imul call rorl aad sarl lea add mov fsubrl adc mov aas pop mov jg roll xor jg cli fnsave das in jmp addr16 rorl rcll (bad) jo mov stos repnz inc jae adc arpl mov mov in inc int3 jmp rorl dec ss hlt std sbb pop rolb les (bad) test push shll int3 mov mov in xchg mov xor scas mov and push xor pop les or mov mov das cmp outsl add xchg mov or out fdivl cwtl aaa stos push push push push fsubr add movsl lea outsb lret test cld mov push sar clc add aaa xlat adc stos and pusha ret divl sub mov or aaa out mul dec in lcall dec mov xchg pop lret mov cmpsb ds pop mov lea dec mov fwait jne push lods outsb jl aad in lods mov call arpl ja iret data16 xor fstpl pop pop xlat xlat test dec cld mov add xchg inc icebp mov mov push fdivr cmpsl stos (bad) mov push push dec jecxz mov and mov jl les outsl lea jnp xlat scas ret scas enter or mov jmp ds add rcl fmull inc or mov inc xchg or jp pop mov gs jbe (bad) and pop mov jl fsubl arpl rcrb ljmp xchg mov scas mov imul jne mov test cld ljmp loop dec int mov cmpsl xor enter jno sahf movsb in cmpsl sbb aas out fdivs mov xor fcmove (bad) mov sub xor (bad) dec and mov mov pushf outsl ja mov in insl xor popf add pusha in xchg test jge pop jge or xlat mov in dec xor imull movsl (bad) mov mov mov jae inc out (bad) xor lcall jmp shrb cmp mov gs sti (bad) push icebp data16 mov lods mov in adc fistp add test leave (bad) mov xlat int3 outsl stc clc dec int3 idivl jge outsl cmp mov in sub lret push test outsl jmp gs into mov mov (bad) or mov shr xor xor pushf int3 enter lock or and jo push int xchg lahf (bad) notl (bad) jg mov gs ror iret roll std pop mov add jge (bad) cmp cmpsb enter cmp push test (bad) sti into inc iret xchg sahf jnp imul in arpl orl sti out ror xchg and sub push fisttp mov (bad) sub sti outsl scas sbb in movsl out push lret test push or lds xchg dec popa add mul push sbbl out pop out mov nop lea jecxz mov test mov (bad) je cmpsb jae mov mov sbb cmpsb mov outsb mov xchg jnp push and rcrb fsubrl int xchg mov out fcompl repz testl cld int3 or (bad) int3 ret jo dec ret stos dec lret mov dec cwtl int3 aas sarl (bad) lods cmc ljmp cli xor sarb sbb cld jge rolb push popf sbb and clc sub ret adc das cld gs iret sbb mov lds aam xchg mov lods (bad) aam pop (bad) mov mov scas pop mov inc in out pop mov cmp sbbl imul sbb dec and pop outsl incb jmp or push pop push lds sbb outsl sahf movsb mov les (bad) in pop fcompl shll rorl enter jl mov cmpsl (bad) jg outsb insl cmpsb jo cmp pop cli test jnp pop jno pop adc cs out idivb test cmpsl imul jo sbb scas and mov fnsave (bad) lret nop push fsubrl jg bound dec mov or les xor in imul dec sbb xchg sub ret inc fstps sub mov pop inc idivl inc int sbb cli push mov and xchg cmc icebp pop adc or in lods adc xchg std pop and idivl fcmovnu xor lahf mov add leave lcall inc xchg (bad) jge inc addr16 test (bad) int mov mov rcl inc sub mov fisttpll aas mov ja mov outsb outsb fistp jmp movsl push and xchg jnp std jg mov dec dec xchg xchg mov sti inc out rcr in fucomi dec cmp mov scas mov mov jecxz out popf insl jl mov cmpsl xchg cmpsb push popa dec dec pop aaa xchg pop cmc std push scas imul dec mov dec cmp clc ret int ret repnz xchg inc imul clc out add sbb sahf and das or xlat xor enter inc jns mov mov jmp xchg icebp jp in mov data16 mov sub jb and fadd lds hlt (bad) cmp inc ljmp and loopne add insb xchg sub fs jmp mov push and adc fidivr or pop mov mov ret sbb (bad) xor sub je enter ret push sbb cwtl jne push adc mov sti adc fldt push push add mov push mov fildl imul (bad) mov cmpl sbb es jge mov cmpsl dec aam push cwtl mov mov movsb xchg popa adc jg insl pop gs jo cmp gs fmulp cmp cld movsb mov or data16 jp fwait xchg push dec cs stos lcall dec aaa xchg int3 outsl cwtl out xlat push dec jecxz xchg push push gs mov pop push cmpl gs lods cmpsl mov pushf mov pop mov dec jecxz mov cmpsb mov addr16 out xlat out mov orl mov lea add and jecxz (bad) leave fs add xlat pop test jge test xchg popa mov (bad) cs cmc psubw jo sub cmp lods xor push gs cltd outsl fldt jg push jae and cld cmp fsubr sarb jmp mov addr16 wbinvd arpl add mov pop mov jae test (bad) into sub or aas pop mov push mov fs xchg or int3 xchg dec rcrl shlb mulb jl aad lahf add jae in mov dec rcr xorb mov jae jne in mov add (bad) in xchg gs xchg in jecxz shrl repz (bad) int and pop sbb lods std push push imul xor fsts xor or ss icebp mov popf sbb pop dec bound (bad) div scas inc cli data16 mov gs mov mov in push xchg jle stos xchg lret int3 cltd add in cli sub hlt aam mov in add repz xchg push pop adc cmp int push dec and pop xchg stos popa int aam pop mov addr16 mov in push lds mov mov scas iret inc jl mov cmpsl or push dec out popf push add aaa idivb and jg mov mov xchg outsb cmp insb pop outsb mov ss nop fwait pop dec out inc inc andl mov je nop pop mov movsl push ljmp mov (bad) std lea pop mov lret mov and mov gs jne mov popf or and fucomp loop sub dec scas jg mov les dec fisttpl mov out fisttpll in mov mov hlt or test mov mov dec dec dec repz cmp in loopne repnz movsl push out fcoml sub stos or mov std mov mov lds push aas mov addb in xchg mov xchg cld sarb jle mov int arpl arpl (bad) jmp inc std fist jecxz stc sbb pop jne daa or sar and xor inc shll cltd push ljmp sahf pop mov xchg (bad) xor cli test fistp mov stc pop xchg jp and outsl jne push rcr adc pushf inc mov mov loopne mov dec add loop dec push jl repnz mov std cs cs cmpl test fild mov fcomps into fcmovnbe (bad) jge adc mov push enter stos inc mov and stos pop lcall jo sarl jmp pop fs adc sub jl sub push int3 out push lea daa clc jmp fs test in push pop mov pusha push sub jo xchg add js bound pop in xor ja jl jg je add out test jmp xchg jge gs test jns das xchg add mov fdivs sub mov mov sub add dec xor mov in adc inc xchg mov mov clc fnstsw lret outsb dec js rcrl mov xchg xchg lret push inc xchg mov sti cld imul cmp (bad) insl push lret jo pop dec jae or jns pop jbe mov loop and in push rcrl push xchg aas cli xor mov sbb ret in pusha das movsb ret dec mov mov mov cmp or pop jecxz (bad) mov iret icebp pop lds std dec subb movsl (bad) push xorl scas adc add das loope sbb int3 jno jbe inc iret loopne mov scas call sbb lds in in hlt mov fucomi push rorl stc pavgb adc add xchg jne push mov out aaa stc pop xchg inc in outsl add mov xchg jo mov cltd int3 ror mov rorb push insl sub notl mov mov daa sbb icebp test mov mov dec mov xchg push sbb cs jmp aad clc adc xchg pop pop andl inc adc sub cld (bad) mov add inc xchg sbb sub lret clc sub sbb sbb mov int3 lods out and mov pop pop push out cld jno pop aas in xor movsl mov in mov test loope jg cmp test mov inc (bad) cld mov push popa mov pop or decb mov cmpsl jns xchg jo insl add stc jbe xchg mov ljmp add sbb push popa pop sbb cld les cmpsl jnp popf dec or inc test pop lods dec idiv sbb lea (bad) in lock inc icebp jbe xchg repz pop outsl jns les icebp neg loopne jne mov pop pop pop nop test or dec stos mov lds sub repz outsl add arpl icebp fs arpl sbb hlt mov test xor xor mov arpl leave add aam jmp cmp or and into and enter clc cvtps2pi adc imull pop fs icebp les icebp mov sti add into rcl pop dec stos addr16 and mov ror cmc or call flds xor push lcall mov cld push sbb pop sbb add cmp add outsb ret push xchg arpl dec into cmp enter clc paddw cmp paddd adc sub imul rcrb sbb shr popa pop adc std les test push pop cmp aaa mov in mov pop xchg pop outsb mov lret sti loop or cmpsb outsb jmp imul scas jnp imul cmp mov cmp (bad) ja push mov dec scas cmp inc pop loop in inc pop vpunpckhqdq stos fcompl add pusha jecxz pushf cmp sub cs push into pop push rcrb rol repnz mov and adc (bad) shlb std or push (bad) fwait sbb fcompl scas mov sub jnp mov fistl mov mov je xor adcl repz mov out scas in jmp nop jo frstor gs add xorl mov roll (bad) sbb int dec subb andb repz mov daa aam inc loope (bad) sarb fstps sarl jne jecxz stc notb jge cmpsb dec scas icebp insb mov imul fninit and arpl gs aaa (bad) gs mov mov cmpsl jae push out je xchg mov dec or mov pushf ffree int insl mov or stos scas test into test int3 nop (bad) dec in sbb mov test dec dec push pop push movb push aas scas or pop into hlt imul mov jns repz mov and xor fucomip inc loop sub jp ds mov mov test mov xlat pop ror cmpsl fmull mov cmc xchg push aaa faddl cmpsl sbb mov into mov jb testb in pop (bad) repnz sahf das neg lods cltd mov int3 dec adc add jns xchg pop mov mov lds int3 adc sbb ss inc cltd lcall inc stc outsb arpl mov and test fwait sub mov push cmc cmp or in idivb mov lahf data16 jno sub (bad) shrl jbe fnstsw stos das and adc pop pop push int3 aas push mov cld jl and or mov jl test js cmp test icebp aas pop arpl mov lea jno fwait arpl stos jmp and sbb xorl hlt or mov push add popf scas popl cmp iret and mov popf je fnsave in aad mov (bad) (bad) (bad) jbe popf mov out push ja jnp mov ffreep gs push fwait lret jmp pushf in adc mov arpl lods jbe xchg cmp popf cmp insb cltd sarb cmpsb mov clc popa sub lods stos outsl imul scas jo test decl imul add (bad) dec xchg mov or cwtl and into mov jb jle (bad) cwtl xchg push and cltd jb xchg pushf cwtl mov pop sbb mov lds (bad) mov fs cwtl xchg js lret out pusha fs cltd add out fisubr mov push mov cmp scas jbe lds cmp int push f2xm1 xchg mov mov fst adc xchg cmpsl inc stos shlb mov mov jmp mov into ja mov mov push push fcomp ret ja pop clc cli or add mov mov mov fwait mov mov insl rolb call gs lods jle and test mov jg xlat lea xchg xchg jb in pop jg mov push mov dec or in jno mov jae xchg (bad) ja ss dec shr cmp and in adc mov les fsubl mov lds mov mov ljmp xchg push in imul lret mov push mov add xor mov rcrl rorl fcmovbe enter xor arpl mov xor mov ja lahf aaa test jbe and mov je xlat pushf dec jbe mov xor cwtd inc mov int3 push sbbb xor mov mov in and inc imul mov mov andl mov pop cmp (bad) xor mov xor rorb xchg sbb jns ja add cmp pop adc lds adc mov enter or test xchg jmp mov nop scas test (bad) int3 mov sahf fimull js rorb jge mov or (bad) arpl lret lcall xchg aam int fcoms xor fidiv int and scas jbe movsl sarl shrl mov mov in xor subb movsl (bad) std sarb cmp inc dec hlt xchg cmpsl loop ds imul faddl or cld sti mov (bad) jae rorb dec stos adc fcoms cltd cmc pusha test fistl scas cmpsl pop addr16 mov jb cmpsl push jmp fisttpll enter gs je xchg xchg ror sub idivl pop lea jg dec stos sbb aad sbb push mov xchg push sub pop cltd push inc mov aas lret test lahf jg xor dec pop jl lret rorb (bad) (bad) (bad) loope jg xlat jge cmp in jb lods ret lahf test fwait xchg scas insb dec or inc scas lods (bad) mov mov ljmp xchg sub push pop divl mov aas dec fs cmp in movsb popa mov roll sub fistpll popf enter add and dec outsl xchg popf mov mov outsl mov xchg sbb mov je pop jmp xchg sbb aad pop inc cmp cmpl jecxz dec add cltd mov or add push mov or cmp mov adc xchg add aad jb icebp jecxz repnz jecxz sarl inc jae int3 xor fstl fwait in mov std mov mov out adc jge lcall push push sti orl popf mov scas arpl dec mov dec mov (bad) xchg push fidivrl push pop iret test mov iret jmp and mov pop xchg scas out pop ljmp xchg lcall xchg ds ret mov push hlt push int3 sti pop ret add int3 int lock jb clc lods mov sarl push lea inc daa inc in mov pop mov adc add or aad pop test mov sub cmpsb jns bswap dec xchg scas call push (bad) fisttp test fiadd jl xor addl add imul inc or dec add jae and mov popa mov jl nop add pusha pop pushf pop gs stc insb (bad) leave mov lret leave sub sub or lods sub loopne and cld (bad) lret dec js movsb jnp cmp pop std test mov mov scas ret push jg lahf inc dec int3 (bad) ss sbb jle mov stos iret jb push mov sahf (bad) je incb dec pop fimul mov addr16 jno ja sub nop inc jne mov sub sub sub sbb in jle mov mov inc lahf aaa (bad) clc jb cmp movsb sub cmc dec mov mov pop test lret je es mov in jns movsl popf jbe popf fwait lea pop add arpl sub out pop cmpsb mov mov stos xchg les lods leave mov dec push insb cltd negb pushf ja cltd sbb jge fs jo dec sub andl push dec (bad) daa sub bound jl out mov xchg mov movsb xor mov in adc out gs lret cld xor jg mov xchg in mov cmpsl sbb mov sbb test sbb (bad) mov xchg repz fs mov pavgw sub arpl test lret adc jge cmp adc andl jns xchg xchg enter push cmp xlat mov pop loope cmp inc adc mov leave or mov (bad) js (bad) mov cli cmp mov movb mov mov xor mov bound or mov sti pop jle push test (bad) mov ficoml (bad) mov xchg xchg aad mov leave ja or mov mov add and jge inc inc mov mov xchg fcmove mov loopne xchg sbb pop dec ss insl add mov sub mov pop sub sbb fisttpl nop ss cmp mov nop out rcrl inc adc cmp xor fstpt popa jle mov addr16 mov xor jo push stc mov aad sbb mov popf push pusha outsl inc clc dec subl sbb sub in or and mov xchg pop shll adc adc lds out xlat jp rcll loopew mov (bad) mov cli jmp mov or sbb sbb mov imul xchg jecxz ds gs stos lcall mov adc insl daa data16 sub loop data16 add xchg mov daa aam jb cld fistp cmpsl pop xchg orl jns lods ja xchg xor xchg or ljmp (bad) sbb in inc jg addr16 pop sbb cs rcll or fdiv je test jmp negl or mov inc int xchg scas pop pop sub leave add mov cmp mov adc in sbb mov (bad) aaa lods mov test fwait adcl js shll and mov push ss xor jl xor mov sbb inc imul pop mov and rol (bad) cmc sub (bad) outsb arpl (bad) decb mov cwtl insl xor popf xchg ret mov cmpsl mov fbstp int3 lahf fldt fidivrl and and lret insb add loope (bad) xchg jae xlat jge inc mov mov sub ljmp mov arpl dec lret test mov ds sbb jb xor add aas inc cmpsl jg,pn (bad) mov inc mov dec mov iret int jnp fcoml cmpl sbb mov sbb rcll out inc stos jl and push xchg roll lahf into sbb inc aaa iret sub xchg test (bad) sub or or sahf lea lea das add mov sti jns (bad) and sub (bad) stc mov dec jecxz mov cmpsl outsl mov push lcall dec js inc add jp cmpsl inc jmp cld jns fadds sub jnp out xlat cltd std xchg out lods popa stos addr16 pop out or dec pop lret (bad) mov hlt popa xchg sbb (bad) xor sbbb mov lods leave push sbb cwtl mov int3 loope in arpl mov loope pop in mov repz jns mov lods mov fdivrl jle xchg xchg addr16 fdivrl les xchg xorl daa aam ror sahf push popa insb xchg cli rcl dec inc or dec popf insb jne push jae pop xor mov add pop fwait outsl cmp push inc jmp fmul addr16 push cmc sbb out adc aam pop jae rcrl (bad) jno (bad) stos imul test cld lahf ja cmp test out xchg jg mov cmp cmc rorl scas arpl cmp adc mov jbe xchg push or pusha pop lret test mov jmp jnp (bad) mov push ss xor xchg and loope dec loop ss into je or data16 pop mov (bad) mov or xlat ficompl cld fidivl adc jp cmp pmulhuw cmp xchg fwait push mov jge js xor xor out mov and mov xor enter jge mov jnp xchg idivl (bad) pop xchg jge sbb and mov mov (bad) flds sub popa or xchg inc sub out loopne lret aaa lret add dec mov push add leave push dec (bad) adc mov (bad) aaa push or fisttpll out and out and jno rcll loopne daa mov ja mov aaa and pop dec test flds jae xor mov insl mov lea add or pop les ret pop in hlt repz push push (bad) hlt rorl cmp rep lahf (bad) cmp addl stos fs dec sti jmp or jo xchg or add loope jmp cltd (bad) xor xlat jge inc sti sub rclb mov xchg mov std inc cld lods add clc xchg mov mov popf out pusha outsl add outsl or mov xchg fs insb mov cmp negl adc jbe jp,pn or repnz xor (bad) fcompl (bad) das outsl imul push dec sti mov test xchg gs (bad) daa repnz mov lret aad rcrb mov in mov fsubl (bad) jno dec cvtps2pi xor xchg (bad) int3 nop adc das jo push and ret jbe lahf aaa rorl jb inc pop jbe and jl jbe sbb into les pusha cmp (bad) fstpt scas movsb inc pop addr16 in xorl xchg lods int mov call sub imul loope jns out imul push jns stos fistp jns inc enter push adcb pop mov (bad) clc sbb xchg std int3 mov out repz pushw leave out lea push cltd arpl or (bad) bswap add or out sarl imul push shll jb jp jmp test xor (bad) fstpt sub add (bad) and adc cld xor rcl testb sahf pop rcll outsb mov daa ror and iret add cmp pop cmp and or sub lods addr16 xor cld xor mov sbb in add or or lret int cld jb pop mov mov mov das push insb aas add mov push arpl dec xchg and add mov jg loopne cmp or inc (bad) (bad) std pop push inc mov adc data16 xchg push adc orl orb add pop repnz mov scas or adc fidivrl adc jecxz insl adc add xlat fisttp push sub and imul aad adc dec mov fidivl jmp or mov bound cmp cli cmp int3 mov jnp jp je lods subl or adc sbb loop in mov mov cmpsb xchg (bad) cmp scas mov pop fcmovnbe xor mov adc cltd aad xchg and dec fwait or rorb js jecxz cmpsb cmp andb cmp mov mov or mov xor aad xchg pop adc aas or sub and out mov in ficoml movsl xlat pop fild jmp lock sti fmuls pop push jecxz sbb rep cmc push xchg inc cs mov outsl or lds aaa sti cltd ljmp xchg mov xor rcll jmp lret or xchg (bad) ja push leave cld mov aas rcll or and xchg scas xor sub push adcl cmc jbe mov (bad) push jl scas jno (bad) mov mov ficomp dec cmpsl pop push arpl or mov fwait mov mov xchg scas int3 mov in jle ja inc jnp inc (bad) pop adc fistpl loopne inc jnp mov push incl scas dec leave mov xchg pop stos lcall icebp (bad) jbe mov xlat pop aad ljmp pop jge cld push mov scas cmc popf jnp aam xchg icebp insb or leave mov loope aad sbbl pop fldl jo cltd mov loopne xchg fildll subl or xchg inc xchg mov sti call in and push pop jne outsl fnsave mov mov sbb leave and fcomi and in mov jmp pushf xor cmpsb mov pop ds xchg jge arpl in inc jge test fldl daa add arpl call (bad) mov xor and loope cmp clc (bad) jb cmp sub out stos or or in mov repnz add lock and fs (bad) pop add dec jl inc mov insl jb ja adc or pop xchg icebp dec jl repnz xor aam mov lock inc out pop je cmpsb jo leave sub out mov mov adc jns div in or sub xor jne mov int3 cwtl adc call pop les clc pop out test out add jnp dec test cmpsl out loopne movsl push mov int es (bad) xchg data16 imul mov xchg push cmp mov (bad) cwtl inc or js mov test dec jl inc add fsubr mov sti stc fild cmpsb mov push cmpsl ret int jp fsubp gs adc add push mov mov sub movsb sar stos jno sub leave mov and out movsl add int3 int icebp lret rcl pop cli lahf aas sbb cs sti (bad) lret sub sub imul push xor mov fstps jb es sub aad mov fsubs outsl lea mov mov adcb ret and mov xchg xor cmp jge (bad) dec into and cmpsl jbe adc fs int3 cwtl lock cs (bad) jbe lea andl fdivrs inc out mov (bad) fsubr mov repz push mov pop xchg aam xor out shrl push sub popl cmp mov push adc pusha or mov int3 in cmc pop add in leave push test and pop test mov cs pushf jbe (bad) push jae cld xchg mov mov out divl jge out sahf cli xor mov sbb xor cmc cmp sub mov arpl fwait xchg clc cmp enter ja (bad) xor xor jnp mov jg dec ret notl pusha mov (bad) scas dec dec sbbb inc lahf imul dec in jle sbb js in cwtl cli into cmp maxps inc into mov xor das adc mov pop loope push imul mov mov mov mov inc iret fstpl loope out bound jle divl (bad) clc leave mov cltd mov add sub cmpsb idivl push cltd pushf and les xchg adc mov (bad) fbld fwait xchg jmp loope mov in outsb les ret jnp push testl fwait push mov jo das jl je xchg jmp fisttpll loope movsl imul dec mov cmp push mov jp imul or outsb push (bad) jle (bad) popf jp cmp jae (bad) jge enter lods dec mov xchg insb sahf (bad) stos pop mov push add and dec dec dec sahf lahf mov jno cmpsb xor lea jge xor test loope (bad) orl fdivs mov (bad) psadbw cmp int xchg test lret in pop je (bad) mov test xchg push mov lahf pop xchg dec inc mov dec jl sbb mov enter xchg imul inc rcrb test ffree inc jecxz mov push xchg mov gs rcll imul incl cli mov xchg mov mov adc mov jo fiaddl mov sahf lds (bad) mov lods xchg fwait mov mov (bad) aad jns scas jp inc jecxz inc lea rorl fsts fs mov pop lret pop insl xchg jg cltd xchg and int3 cmp ret fcmovb push sti les fistpl fwait (bad) pop in arpl iret test and dec xchg xor rcrl jbe lret jno cld rcrl out mov stos mov enter cmpsl mov bound xor pusha xchg cli enter test jb pop cmpsb insl adc (bad) and pop mov std dec out xchg test jl je cmc xchg add rorl test movsb mov ret inc mov jae enter lock fs cs je insb lods int3 addr16 enter scas out (bad) in add hlt mov aam mov imul mov push sbb push mov sbb mov dec out mov gs in push xor scas test stos (bad) mov adc nop addr16 adc (bad) gs jbe xor loope lock es aaa sub in xchg mov jno rorb and xchg sub mov sti jbe inc sahf mov cmp arpl (bad) lock mov fwait pop idivb popf and fsubrl in mov mov jbe cmp (bad) in aad je enter rorb daa sub sbb jge imulb fbstp lcall lret xchg loope sbb in or cmpsl jecxz xchg adcl clc jmp mov mov mov outsb dec mov mov cmpsl mov repz jno aas int xchg scas cmpsl pop adc cmpsb lock mov std jbe sbb movsl mov pop lret in sarl pop popf mov movsb xchg (bad) mov jnp xchg mov shll pop mov test (bad) pusha subl inc arpl sub sub test cld inc (bad) cs jnp imul (bad) or mov lcall aaa insl or push push push inc pop cmpsl mov pop mov lcall sahf int daa and sbb lret mov xlat (bad) scas jbe xchg dec fldl jge iret fcoml jmp push std mov es stos test mov pusha outsb push sahf cmpl cld adc (bad) lds movsl shrl cmp outsb dec xchg mov and (bad) xchg adc sbb or imul cmc push (bad) cli xor add (bad) test jae or outsb jae pushf fsubl gs push in cli mov jnp cmc push fbstp mov popa xchg ret fwait addr16 mov lods mov lock or fnstenv mov push pusha sbb (bad) cmp dec mov or sti fisttpll jle jg jbe aam push push mov pop jb jge and xor les cmpb movsb jb sub and push imul jne cli mov jb xchg data16 jb mov adc add mov dec mov push mov mov popf outsb mov (bad) pop addr16 push movsb cmpl pop (bad) fisubr shll lock hlt cmpsb jne push pop jne in sahf daa sarb bound rcl inc cwtl pop mov ret movsl rcrb mov leave pusha popf outsl lcall (bad) lds mov push jg ret popf das or out xlat mov test fildl iret je mov xorb adc imul jae mov adc nop imul rcll gs int fst fcmovu repnz sbb ret mov (bad) dec (bad) sub (bad) sarl imul and aas ret jge pop pusha out pop repz jnp enter pop cwtl iret xchg imul outsl mov inc pop das and clc dec pop aaa les push jae in mov hlt sahf jbe jbe insb cwtl rorb jmp lret xor jb ret icebp jl loopne mov mov clc stc addr16 je adc out mov sbb mov aaa adc mov and xchg stos mov jg je fwait mov fldt push jno lret jbe jbe inc cs test xchg adc fwait stos mov cmp pop mov jne cli iret gs mov test mov sbb jge rcll xchg xor dec xchg ljmp test jmp in lods mov popa cmp imul jb mov push xlat cmp pop mov rcll insb cmp and aad mov mov jl xchg pop icebp pop mov mov ds xchg jmp sub pop in test xlat movsb cmpsb sbb js mov imul xchg sub sub iret pop add mov mov rcrl jno ret enter jne addb push cmp mov xchg scas cmpsl pop push adc cmp (bad) les scas fnsave or xchg (bad) lret in jle mov addb out mov bound xlat mov sbb xchg add xchg icebp (bad) push arpl test lahf jmp jne stc js sub cmp divl add int3 pushf lock mov in dec cmpsb lds lods jecxz roll jecxz shr hlt je xor sub add jp sbb add int3 int cld push and repnz sbb inc cmpsl clc das and dec test fcmovnb xchg aas mull cmp jp sub jp and adc pop or pop dec rcrl xchg mov adc adc cmp xor xchg jp jne divl ja outsb scas outsl pop mov inc adc inc mov push jle cmpsl mov inc push js fidiv popa xor pop xchg pop pop jge call xor scas test inc mov add in fistp mov pop push push ja fldl hlt loopne mov lea xchg imul cmc xor sub mov xor sbb mov pop pop arpl xchg stc add cmpb fldcw mov xchg xorl and in add popf xor fwait mov mov divb xor jl xor fisttpl stos inc sub cmp jae stc mov loopne mov add shr test stos xchg mov movsb pusha dec jae jl lods das mov inc out add push mov cli out in cs sahf lea pushf mov xlat aas pop sub lret pop inc xchg inc mov dec mov test (bad) ret insl mov pushf and ljmp lret pop mov dec insl fbstp mov push cmc ss add outsl jge mov jo inc xlat mov lods sti mov pushf stos imul aad pop test addl mov rolb int3 scas fcmovne cmp xchg add jl mov xlat xchg pop imul xor push xlat lahf bound (bad) xor jl mov imul push sub sahf lret pop mov mov jne scas subb or push les in xchg icebp xchg insb mov cmc out mov inc mov insb arpl mov (bad) jg pushf andl shr ret xchg dec enter rcrl pop in movsl mov jmp inc mov mov or daa divb adc dec fnstsw push mov pushf inc addr16 xchg sti pushl and ret pusha xchg adc mov lods or or fincstp cmpsl or fisttpl andl leave mov mov int3 arpl fwait negb lret cmp stos or imul fwait sbb add pop test push mov push inc add mov outsb lods (bad) jnp add out sbb popa loope lret adc fidivr scas addr16 psubq out js aas out mov mov aam mov loop (bad) lret (bad) int3 int xchg stos aam hlt mov adc jbe mov mov and (bad) shlb jecxz mov inc ja cmp outsl popf clc dec adcl iret xlat movsb (bad) or or mov or xchg cwtl push pusha fwait adc mov test xor clc cmp add adc mov lret sub pushf addb out sbb jo cli jbe pop repz mov mov addr16 cmp xor in jp mov sbb mov (bad) dec mov sbb call mov push mov dec int mov jnp aaa lret mov jne lcall and outsb test mov xchg imul les iret xchg or movsb mov push ja movsb push cs mov out aam ret mov pusha xchg in negl cmp cmp jnp cmpsb lcall shl sub enter dec stc add fld test push cmp scas adc mov dec jo (bad) leave ja sbb movsl pop popf subb mov cmpsb sbb cltd in lods hlt xor iret flds mov dec push mov inc fsubrl imul pop pop mov cmpsl jecxz mov ds or lret rcrb cmpsb rorl adc xchg jg in clc shrb xor dec and push dec js lcall mov jg push movsb dec cmp lods mov movsb mov adc int fwait sbbl pop loope fdivl inc hlt xor je pop and sbb mov sahf and jl inc sti ret imul lds (bad) mov mov inc lahf mov pushf inc pushf mov mov sbb dec adc dec gs mov pusha aas xor fdivrl add dec fwait jb jb mov xchg lcall sub push popa inc leave int3 int test imul mov (bad) lahf fs dec lea xchg outsl insb out daa in xchg mov andb (bad) scas int and mov adc stos out testb and xchg insl xlat or scas cmpsb mov jns xchg imul xchg dec sub ret cmp lea test xlat das in mov repz (bad) pop or sbb fcom mov daa aad xchg jl addr16 adc sub stos fdivrs mov mov punpckldq cwtl je ret mov add dec xor adc loope xlat mov jl fnstsw add stos adc mov popa sub xlat scas mov sub or mov mov mov mov sbbl loopne cmp xor mov mov insl mov loope jae sbb and mov pop (bad) mov out in jp dec push cmc lcall push int3 cmp jmp loop push mov scas inc jmp pushf dec mov and xchg aam xor loopne enter fstpl popa ja pop cmp inc testl dec cltd inc pushf mov int inc pop (bad) sub cwtl inc sti ds cmpsb in dec push js dec (bad) adc fsubs xor fiaddl das push push hlt mov lea push mov clc aas dec outsl in xor repnz or in lret cmp das sub lods cwtl sub sub adc rorl sub stc icebp bswap and (bad) fwait gs daa adc mov push popf loop les sbb test rcrb stos test out int mov dec ret xchg lea lock dec inc inc ja push or jge arpl out mov cmp xchg mov jne inc mov (bad) cmc (bad) cmp idivb loope insb mov mov push enter jo push sbb sub cld jge arpl mov mov mov mov adc inc mov in cwtl jmp loopne dec dec leave scas dec jecxz push icebp bound sbb cmpsb pop fcmovbe ds mov and js mov mov jno xlat rcr cmp (bad) out adc mov outsb mov xchg mov cmp jbe imul addr16 lahf add subl jp pop and mov push aad popf pop push pop add daa sahf jle cmpsb ret lahf shrl jle hlt mov fcomps addr16 mov (bad) pop je fcom icebp or lahf inc xchg cmp pop cs or mov adc (bad) xchg bnd pusha inc out leave push jo sbb paddd sub adc popf jno arpl or mov add cld and xchg lahf xlat jl add inc mov fcomip in or out aad lcall xor push pop test popf mov roll pop mov push cmp into nop xchg xchg sarl mov fldl (bad) jo xlat je les push xchg xchg mov jmp test lcall (bad) lods stos int nop insb ja stos cld fistpll add pop mov xchg test mov sahf mov cwtl (bad) stc addr16 rol rorb scas sub test (bad) pop popl push jb lahf mov test fstp jp es (bad) inc (bad) mov aas add sub xlat pop pusha jge cmp xchg sahf pop test push cmp rcll imul leave xchg popf mov cmpsb push pop fstpl mov mov icebp lods mov gs mov mov outsl popf cmp rorl ficompl gs inc jg shlb jle outsl push ret scas mov out mov pushf adc test clc mov add lock add xchg insl aad or fld xor mov or (bad) mov jbe add jb adc outsl cld hlt je in rcl lock stos movsl add mov pop (bad) jmp in inc scas or data16 and aam cmp fs std lcall in mov incb mov shl inc dec in leave (bad) ja mov mov aas jecxz aas xchg push in int pushf sti inc mov hlt adc in pop stos std lea cwtl or call ja push into lcall int add fs jle arpl iret adc stos mov test in pop xchg repz and movsl push in lahf les test int3 inc pop rclb push jl addl xchg stos cmpsl mov fs rcl test and mov into pop inc mov bound std clc push clc mov lock adc adc int movsb (bad) loope test test call pusha inc int3 fidivrl fadd fidivr test sbbl cld fs mov xor cwtl jb cmp outsb jo (bad) test mov cmpsl xlat int mov sbb imul cmpsl scas int3 insl cmc pop addl call adc push push sub lea xchg decb sbb iret pop int3 int cli or jmp aad lret ds insl inc lret cltd mov ret lods xchg sub (bad) leave mov adc lds (bad) mov sub popa mov jecxz mov mov inc test pop jnp loopne ja movsl push sub fiaddl jp add mov mov gs out jno push insl shr lea mov (bad) mov mov les lock dec jne add ja into out jno dec ja sbb mov inc ljmp lret insl les pop jmp outsb mov (bad) push pop jmp add adc in sub cmc xor leave addr16 in mov shlb jp hlt and movsl shr xchg sub call mov sarb jae test std scas pop hlt dec add ja insl xchg std mov push mov ljmp jo sbb inc add fwait push out in fstps mov testb stos (bad) out mov jecxz daa lods cmp icebp shll xor jo xchg sub adc cmp push xchg lahf sbb inc imul jae jge repnz lret mov mov cld mov out aaa jle movsl xor or xchg cmpl sbb mov and mov mov (bad) xor dec stc int3 je cmc pusha or cmp out scas jmp mov mov xchg lret sub sub xor pushf pop lcall out push mov pop ror aas add pop cmpsl mull xchg jle push cmc inc jno xor std icebp test sub add jb xchg leave lea outsb mov xor fbld sbb mov jmp in sahf cmp rcrb data16 stos xchg mov dec inc test mov xchg pop out jno mov add ficoml bound adc mov jns pop rcrl addr16 xor or jl call jno test jp clc pop mov push inc xchg mov (bad) inc add mov cmc push fld cmc or xchg push lea cmc push cmp test cmp jecxz iret sahf clc inc cmp push and adc scas movsl or ljmp fwait lods jge cltd mov fnsave hlt cwtl xor ljmp dec repnz mov movb leave fsts ss (bad) push xchg imul cmpsl mov call mov subl jmp popa adc mov es ds in (bad) fcomp pop jne lock gs (bad) xor mov lret lret loop xor xchg cmc xchg out adc ret sti cmp sbb shlb shll fsubl scas mov and sbb outsl mov xchg adc inc or aas es out shr mov push cmp cltd mov out aas jp popa jp sub icebp push lret jecxz mov push and mov xor cmpsl mov adc popa and (bad) mov fldt (bad) jo xchg add lock xor pusha das int3 lret cmpsl test sbb add jno or cmp jo outsb mov xchg sarb (bad) rclb stc mov pop adcl mov mov mov mov lods or mov cmc add lods ret jp or icebp pop flds scas and cmp mov mov push int ret dec xlat iret add adc sti out push insb sbb cmp add mov add add mov xchg dec test leave (bad) push add push test je movsl jno scas stos fdivrl mov sbb adc loopne dec aam pop aas pushf jns cmp mov fwait xorb sahf push fcoms loopne out rcr mov lock jne mov ret fistpll scas pop add clc dec iret jns mov push mov mov leave pop lret sbb push loop or cli mov jno les dec fsubs and sbb sar jae leave movsb xchg push stos sahf adc mov nop push fcmovnbe stos pop pushf add std les fsubr addr16 lret add cmpsl std nop push mov int3 js int3 lret fadds loope rorb or (bad) xchg and jbe cmp sbb lahf in popa sub repnz mov test jbe mov jg sbb pop popa jbe mov jbe in mov mov adc and outsb adc fcomps pop fcompl gs pop in aas sub out and hlt push roll and push (bad) adc inc pop fstps imulb ret stc xchg mov scas mov out ret imul lret sub push mov pop xchg leave shlb int and mov imul xlat stc and jno xchg mov pop vcvtdq2ps jbe out mov (bad) loope ds lds mov or (bad) hlt and (bad) jno icebp jle imul (bad) ja inc (bad) fldt mov cmp outsb cmp mov jp add out das push out fptan rcll in add je into pop push jae push loopne int clc outsb iret xor js rcrb out into sub stos rcl mov cwtl xchg popa (bad) nop outsl push mov mov js sbb fdiv jle sbb sarl and ret and adc add jecxz hlt and sar jne mov insl rol js pop and gs cmp aam ret stc mov clc xchg dec jb dec mov pusha adc jns shl mov nop mov out mov mov in xlat pop call inc fdiv ja in movsb in mov xchg lret pop pushf mov (bad) xchg enter dec adc fbstp add jae (bad) mov xor sbb and sahf jno scas cs mov cmp lods mov cmp rclb sti mov inc xchg push cld ds ret addl loopne rorb out jge jmp repnz ret sahf loop mov push push sub cmp jecxz,pt pop jl add in mov into pop push mov fwait mov ret aam fs xchg dec imul loop call ds mov (bad) lock push cli (bad) jg scas lods pop scas pop popf mov (bad) in in jns mov pop push into outsb scas pop xchg fs dec pop mov push in in scas jp sub mov sbb jg jns iret jo jo shlb (bad) repz lock aam lret pop lea mov sbb push jle popa sbb xor data16 sub in jnp repz mov scas ja cwtl and (bad) sbb scas jno jnp lret fidivr mov pop sbb jne pop push mov rorb daa add mov xlat fldenv test addl jae jle jge mull icebp faddl outsb js loope xor jno mov mov cmp sti xor repz sti mov popa mov cmp mov sti jmp mov jge repnz add insb mov and cmp cwtl sbb mov lock mov jnp xchg ds push xlat iret leave mov jbe mov (bad) mov ja roll lcall mov subl int3 les popf xor test sbb ljmp icebp mov lret pop lods out jne test mov mov outsl sub jae out negb insb xchg and mov jle rclb js mov sbb xchg mov int sti dec inc add fldt inc inc shll mov pop ljmp ds or lret lods je mov fnsave scas loope and popa mov mov gs jp sbb inc sbb pusha out push test insb or mov clc sahf xor dec lods sbb or test je stos inc pop movsl fdivrs mov mov mov jecxz lock js movsl sub inc cmp push insb test fsubs lret cmp jl inc and xchg fldenv ljmp in and push in mov cmpsb cmpsl ja xchg mov into loope push popf int3 push pop iret jb pop sbb (bad) mov fstpl inc cmpsb or xchg jne call mov xchg pop out jmp add cmp fimull push adc mov loope rcrb push jg test dec xchg sahf or pushf xchg cmpsl push imul mov dec mov mov lds jnp xlat scas jge and (bad) testl in mov in cmpsb gs insl xor mov dec inc cld out jge mov mov jg sub popa mov in cmp ja cmpsb jge jge adcl mov cltd lods call lahf jg lds repnz sbb mov jbe pushf fnstcw dec nop fs mov mov jae mov pop lds pop pop lods (bad) jmp xor icebp lock sub adc sbb mov fs lods pop jge mov insb xor lock xor and jecxz jmp aad aas pusha xchg jno or mov fbstp jmp bound mov xchg pop (bad) xor outsl movsb sub test sub aam in iret jne (bad) les mov xor jns (bad) lock cmpsb or cmpl fildll iret movsl ffree adc jg mov sbb mov scas aaa dec push mov mov popf in nop outsl adc int mov repz pop jge pusha leave mov outsb mov jns jae push cmp jecxz (bad) cld pop repz (bad) lock xchg jmp mov xchg pop sbb test icebp (bad) xor and push ret (bad) jmp push jb aam jnp nop mov xor push mov (bad) inc pop jnp es les mov movsb sbb mov test mov sub add popa jbe push mov or cld push push lods lea fcompl mov jns push iret movsl jge xorl (bad) iret pop xchg shlb or test xor ljmp popf jg jno lret (bad) fstl sti sub mov repz and mov push call jb adc add js (bad) pusha (bad) enter cmpsl addb mov pop sbb sbb add fs js clc (bad) mov fistpll mov pop faddp xor leave mov jg loope adc dec inc or inc insl popf jge mov mov fcmove es je rcrl push lea lock rcr fs xchg lea cwtl pop xchg jl rcrl mov mov in add test fnstsw mov sbb aas mov pop lret enter stos cmpb mov mov aam fstps inc push pop pop push dec mov mov inc loop add mov cltd jle test push sub xchg inc jbe cmp rcrb (bad) clc xchg mov fisttp mov cmp mov and js mov jb mov rcr imul sub cmp ja movsl out (bad) or adc rep xchg ret aam imul sbb imul jmp jle je pop mov mov mov cwtl or fs popf inc jecxz rcll mov ret outsb xor xchg or dec aaa enter out push cmpsl out jae sub rol mov dec jo loope mov xor (bad) fild dec jle mov hlt jecxz xchg enter add jbe sqrtps mul xchg nop ja jge sbbl jne fildl pop in lods scas es test lret push lahf hlt in jb mov cmpsl lret movsl inc mov adc mov mov pop jmp push sub xchg aas gs in mov movsl in fwait iret cmpsb sbb jns in outsb dec lahf push xchg jg xchg mov xor mov and (bad) decb lock add or pop stos scas mov xchg stos dec pop xchg stc jbe jne mov dec lcall mov mov adc mov fwait setae mov mov imul in jno xor jns mov fcomps jge mull mov pop push out mov jnp push push jno (bad) mov mov jo bound add call jg gs aaa jo clc xchg push add (bad) mov (bad) jle sbb cmp sub jno lcall mov (bad) std dec sub jb inc pop pop xchg fwait mov sti push and imul fstl jg shrl iret pop xor xchg mov sbb push int3 ret inc repz fsubl (bad) pop stos popa mov jnp cmpsl iret xlat and cltd fisubl jg mov outsl cmp mov fs in dec jno pop dec sbbb push scas sahf pop lret push jnp jns (bad) fwait stos mov mov pop imul or and pushf jle jbe mov lret in adc fisttpll roll cmp out fdivl nop mov mov push loope lahf dec ret sub dec mov ss pop fldcw adc gs movsb mov dec mov mov push loope inc stos mov test sti inc mov bound jle call rcrl (bad) movsl in lods pushf adc jle out mov cmp pop in test adc gs mov ror or into aam cmpsb (bad) dec and sub inc (bad) leave mov ja jle sbb mov xor dec xchg mov cmpsl and (bad) mov mov ret fisubl fnstcw jae in dec xor push cmp lea ds adc loop cmpsl outsl roll jne cwtl inc rclb aaa sub mov stos scas lods inc dec insl std mov scas rcll lcall mov jnp mov push push insb push fcoml xor and xor out dec xchg mov push shll add push or jns mov mov adc sub faddl mov xor mov hlt mov mov push inc mov xchg iret mov cmp dec push aam mov xchg test movsl pop mov jl xchg dec test in pop ret ja stos lret mov frstor dec (bad) add dec xchg adc test lret loope std and loopne insb and loopne fwait mov repnz cmp dec cmp lret lcall mov mov mov sbb lods lcall xor aas jl rcr in aam (bad) pop daa int js in loopne add mov test aam sbb in daa jo fdivrp dec mov js int jbe inc insb sub loopne pusha stc jl mov pop dec sbb lret (bad) xchg addl addr16 dec push movsb mov push mov push es ljmp in das call and jg cmp scas add std les fwait jge je loopne sub iret inc cmp inc add pop arpl shll mov push loopne cwtl cmp pop sahf arpl pop pop pop cwtl jle loope loopne mov imul js mov add ljmp in mov xchg movsl fcmove cld shrl inc mov jb inc adc inc cmpsb sub arpl xchg fbld lds int3 and mov fdivrs scas popa fwait xor lods scas sub fstp push mov bound and leave cmpsb sbb adc orl (bad) repnz mov insl psrlq in lock jne arpl das sti enter add lret fs aaa js pop xor fnstcw aam orl lods repnz loopne push movsl and scas loopne js out das pop fnstsw sahf and dec mov dec (bad) not inc fidivrl xchg xchg xor fdivrp fisttp inc fwait xchg scas mov mov aam repnz ret mov pop cld nop push pop inc shl push daa test jge test fsubp insl arpl cli addr16 movsb shrl sub lock xchg mov sub xchg repnz scas leave call ficoml mov outsb icebp xchg mov fnstsw mov adc mov dec mov fmuls cltd das sub xor subl lods cwtl lds notl roll int sub aam mov cmc add mov cmp (bad) pop sub or xor fidivr nop scas in sub mov in mov lret dec enter lcall movsl hlt and cmpsl sub in jo (bad) popa aaa dec pop xchg into pop ja aad dec cmp inc or aam mov and mov aam xlat mov dec inc in int3 es pop sarl jnp inc js fimul fcmovnu loope xchg inc fsubr enter mov sti ds fwait inc ficom jno cmpsl pop lods (bad) jne rcrl push aam loop mov fcoml bound mov fs add mov add popa jge imul (bad) pop xor or rorb push pop fistpl aad call inc jns mov inc push sbb sbb push mov ret xchg ds (bad) dec addl (bad) (bad) cld orl cld out add out dec mov aas mov stos outsl movsb push push jg cmpsb int mov (bad) into pop push icebp inc xchg jp pop popf rolb rep pusha mov mov fimull mov cli jbe es push lret pusha rcr jns cwtl jmp cs mov addr16 nop mov imul cmp dec jbe add mov idivl or jl imul adc mov dec int3 test dec sahf mov pop mov mov inc mov sahf cld xchg repz je sub popa incl jge dec fwait aas jge mov sbb ja jmp aaa scas sbb scas or mov mov mov icebp mov jbe lds out popf (bad) not rol arpl jno mov cmc imul fstpt push jnp popa rcrl xchg dec xchg shll inc push xchg jno addl sub (bad) bound mov stos fistp movsb into xchg into or jbe mov dec xchg (bad) add aam fdivr ja popa fstpt or and mov js popa fndisi(8087 clc addr16 xchg jb arpl jo shlb cmc or loop fwait adc imul sub mov adc push push add (bad) cmpsb mov jge div mov pop je and sbb popa stos mov mov fistp lods dec mov mov clc mov inc aas and lds or scas lret lret fbld ljmp scas rep imul lret xorl sub dec mov jmp in pop ljmp jecxz outsb dec pop push pop loope mov aam (bad) fldl jge and xlat je jmp into pop and icebp insb sub or xor add cld mov lods add push cmp cmp lcall or cmp mov das aaa push pop cwtl add dec and mov xchg or les mov mov lcall lods add mov bound xlat cltd es sbb mov mov pop test lock fwait sub mov (bad) aas out inc mov gs add jge (bad) cmc xchg xchg jnp mulb mov fs sub pop aam mov pop pop loop into leave xchg nop mov cmc mov das idivb insl mov cmp movsb fldt adc sub or adc mov test sbb scas loop rcll stos pop lds decb outsb scas movl fs sbb mov xchg leave mov cmpsl (bad) lret test imul call fwait jo in lds mov pop imul adc rolb lods pop inc sbb jl into inc jns sbb mov popa pop jnp pop rcrl jo jnp jns mov cltd test addr16 mov jo ficom xchg dec int3 jge sub lret jecxz lret xchg in sbb pop pusha dec in pop pop and jo andl jge ljmp ja cli rol loopne jmp xchg lds jnp lret (bad) mov push aam out xor sti into mov dec out mov les mov jnp mov xchg xor js flds or dec jae call adc push pop (bad) icebp sub sbb jbe cmp mov popf push fisttpl enter jg insb in popl out and hlt pop lret adc daa leave (bad) push sbb ret mov into cmc lcall shll movsl mov jno push xor adc rcrl pop jno or std push cli popa in clc enter jg push push jae in mov sub mov scas mov adc in cltd loope out mov jl mov (bad) adc adc cmp push xchg fisubr (bad) mov scas aas std int cmpsl sbb push mov cwtl or dec movsb subl jecxz or test inc cltd sub adc mov out sti inc (bad) or cmpsb ja in pop std pop inc stos outsl in stos adc scas dec mov pop cmc jg loope xchg gs mov mov into cwtl lahf cld sub cmp jge aaa mov mov aam mov sub fild pop in sti jo insb pop movswl outsl cmp mov lock xchg cld nop and je movsl cmpsl fcmovu inc cmp lock or pop notb (bad) shl stc or std or cmc fistp pop aas mov outsl sub or mov jae imull rorl xchg scas mov mov rcrb sti sti sub mov aas outsl mov and xchg call jo dec out sarb call sub data16 enter xchg mov inc dec pop pop adc sbb notl lods push clc inc pop daa jnp adc xchg std mov inc mov fwait mov addr16 addr16 adc insb (bad) dec in xchg pusha js sbb mov jbe pop int3 cmp mov mov test cli mov fndisi(8087 cmpsb enter sbb sub push jnp or add or push mov ljmp (bad) mov push shrb into ljmp cli or jne stc (bad) cld faddp gs and mov scas movsl xor jge jle pop mov ret jo mov xchg and cwtl xor aad psllq fsubrs sub arpl jp push xor jae adc aad push pushf jmp repz outsb mov xchg into in push add jecxz test adc adc mov jae push outsl xchg adc or aam mov in fcomp dec cltd or adc bound xchg sahf out and sti int3 outsl dec clc ret addr16 dec add enter mov mov xor cs jno inc xlat cli or divb cmpsb push mov test popf jmp mov mov lahf add out je sub add scas cld inc mov out pop jns sub in mov sbb int3 int3 cmp dec push lock xor xor out pslld clc push test ret and mov movsl aaa in rorl ret lods (bad) enter inc xchg adc call xchg jbe jecxz fadd nop in (bad) stc nop mov jg inc lods xchg cld xchg xchg mov js mov int3 xor cwtl pop shrl sbb mov push sarl pop insl pushf mov pop add mov (bad) arpl mov (bad) repz pop pop cmpsl pop dec insl lods mov arpl xchg inc adc roll ffree jne jge pusha fimul or cmpsb pop icebp mov iret sahf mov cmp mov std data16 lret scas les jae cli jae sub fist out inc (bad) notb mov cs add or mov jb jne out mov mov cmp xor xchg in shrl mov sub mov adc fldl stos loope cmp pop sbb dec and ja pop mov or outsl jmp sahf inc adc mov (bad) pop and mov test or mov aaa arpl mov addl repz dec in in insl inc scas jecxz cmp in addr16 inc scas repz jl lcall and jmp push loopne cmp jecxz in xlat lods mov in and mov repnz inc std rorb mov push data16 inc xor dec loopne push sub xchg imul icebp fs jp cmpsl mov cmp sub push insb push outsb push sbb into jecxz outsb lea pusha inc cli add jbe push pop sbb dec xor movsb mov cli or mov leave icebp inc mov mov xchg sahf iret arpl cwtl pop ret cmp pusha sbb daa outsl inc mov cmp sbb push push or jno inc das das mov xor pop lcall into test jns scas mov mov lahf push mov daa mov outsl inc mov or out xor push call jae push (bad) push mov mov mov xor jo inc xchg dec ljmp xchg jnp test notb jo pushw es mov sub gs fisubrl mov mov inc aas repz mov jo stos out leave scas xchg imul and mov or aad add add jecxz jns and xor scas mov or lcall jl push jno push sbb jnp ds dec sub (bad) pop push hlt pusha mov push mov mov sbb shr stc and inc daa adc inc stc std repnz (bad) (bad) call pop in cli push sub push mov inc jne int3 test loopne gs sub pop jae ljmp ret xchg sub mov mov dec xlat xchg cmp dec mov pop mov lret mov fist mov lahf loope psadbw std lods jle movsl jbe ret fwait enter call insl nop loop push add das push popa sahf in std cmpsb jmp or ljmp cs fstp lret and push push icebp jmp les das and inc jae test add rcrb test imul int sub fisttp (bad) hlt shlb pushl cwtl in mov je icebp ret sub xor fdivl adc or and test ret stc xchg pop loop xor in fldenv mov mov stc inc ret cmp in fbld push mov outsl xchg mov in push call pop inc aas push stos (bad) in dec frstor les es xorl mov dec jns into fidiv in rorl xor sbb mov int enter pop mov sbb and fcomi aas pop daa stos and push negb jae ret jmp das jp popf pop arpl addr16 fistpll jae cmc xchg data16 pusha pusha push sbb rorb jmp mov jge mov scas push mov cmpsl rolb cmp pop rdtsc fs nop fmuls mov inc in pusha fist icebp daa out mov std in pop fidivrl and push mov leave pop fstpl (bad) int3 fistpl lds mov je pop pop rsm std out push mov test mov cli andl xor aaa mov push aad sbb inc xor int sbbl or lods pop mov scas pop push and mov icebp inc test mov imul rcll adc push add adc adc push lahf jo std dec ret xchg mov pushf movsb aam pop test es mov fcmovnu loop jl jge adc insl fistl mov adc out and ja or movsb lahf and loop (bad) out not mov cmpsl mov aaa push lcall leave and mov mov xlat add inc xor je sub jg les sbb xor out push test leave xchg and out xchg push (bad) es pop rcll inc ja ret dec mov mov cmp loop stos jo add popa pop cmpsl push lret test nop daa packssdw adc mov fstl ds jmp ja (bad) mov mov clc test repnz xor scas cmc mov lcall sahf sub stos repz out inc mov (bad) cmp mov or cmp roll hlt iret mov insl outsb std std (bad) int3 sbb mov cmp in inc dec push jp lret (bad) adc xchg push mov jl jge mov push lods cmp ss pop mov jecxz test (bad) cmpsb sub mov das add mov xchg jmp cmc xor aas xor (bad) push sarb int3 ds stos add inc int mov iret les inc xor adc push aam xor jge push aad lock lods in or pusha mov mov aad (bad) xor mov xor sarb mov icebp adc mov into jecxz call mov std leave xchg jge into cli lcall fcmovnbe (bad) cmp add in sbb pop cmp sub lods add and fs pop cli cltd fnstcw (bad) icebp stos xlat lret in dec push xor xor loope pop and adc pop int3 and (bad) out arpl jae (bad) rcl jb pusha jo cld jge sub and ficompl xchg rolb jae (bad) or clc aas das push add (bad) pop pusha mov and push out xchg es lods lret aaa cwtl xchg in mov (bad) add lods insb fildll sub in xlat mov xor pusha stc (bad) add adc stc jle sub mov adc sbb fwait pop pop xchg stc pusha rclb outsl lods lods cmp scas push test mov sub add fstpt jp xchg mov mov into hlt mov inc pop push sarb cld or jno inc mov or push jp in mov sbb jne jne aad add inc outsl lea je mov inc jl (bad) ja outsl lcall mov fdivrl call lods imul (bad) xlat pushf jmp dec sub outsb jae pop rcrl xchg xchg mov fdivrs push mov gs cli (bad) and divl pop push pop push sbb add push in je aas mov pop mov mov int xor pushf repz adc sub fs mov inc mov out xchg sbb (bad) push jb insb dec xchg jmp ret mov jns mov cs inc movsb mov pop cmp fisubr dec sub push sub fbstp add repnz push das mov dec movsb xchg (bad) jl or cmpsb (bad) xor pushf jnp inc push push cwtl mov scas imul test fwait iret int3 push aaa inc iret lods pop frstor idiv nop xchg ja call fsubrs pop push arpl lods sub lcall movsl mov cmc in (bad) mov mov mov add inc cmp std pushf fwait or outsb mov lds outsb push stos jbe sbb cmc xchg ja lods mov push dec mov mov lret int insb adcl out mov xor sbb sbbl movsb fisttpl or mov xchg adc push rol int3 (bad) jmp pop hlt nop fwait out and enter rorb inc mov js add ror ss lea add notb repnz les fwait xchg sub xchg call jb xchg (bad) sbb xor in mov mov mov push cld add push jl fwait jge sti pop pop nop fstpt ljmp xchg dec imul jge shrb cmp test and dec push inc pop mov loopne pop jb ds insl cmp popa pop stc sub add test daa jne add jp inc push push adc and stc enter repz in jl add sub stc sub jb add in sub imul sbb sbb sbb lods ja inc inc jl push and lahf ret mov jecxz add xchg out (bad) xchg mov push shrl (bad) xchg mov mov sub adc out mov fcmovb pop std ss push pop mov aad sbb andl and ret stos lcall pop call xchg sbb push fmuls je (bad) cmp ret data16 inc xlat notb iret sbb push dec mov popa dec inc imul (bad) ss movsb arpl inc cli flds andl aas cld xchg or shll push xor cltd dec mov movsl lds cld mov mov lret outsl imul mull cmp imul xchg dec aas push fnop (bad) add add xchg xlat call inc arpl adc shl cmp fisttp fcmovu faddl inc cld jnp inc setle iret inc mov xor cmp adc popa dec push dec push jp (bad) jmp or jnp ret and jecxz sbb xchg fsubl dec nop push sub shlb sbb cltd and jbe sub out aas test stos and or pop outsb or scas lock ror je jg xchg fistpll in mov fs xor clts xchg pop das xor dec sub fdivr fcmovnu (bad) out insl call mov mov stc lock testb test stc sti movsl ljmp into sub cmp cwtl test push cmpsl fcomps sub push xchg sub test pop inc and scas and ljmp push xchg arpl mov insb popa fild in fisub pop negl xor adc mov cli aas xor and mov add lods roll lret pop pusha punpckldq or ljmp icebp js pop ficoml inc mov push nop mov lock or and call mov movsb mov popa mov iret lock xchg gs (bad) xor es push lods mov idiv mov push ljmp mov dec cmp pop jmp xchg inc bound jb add inc mov mov push lods cmp mov (bad) je aad mov lea push (bad) ljmp jnp sarl push test dec rolb and mov pop or xchg enter cltd inc out mov jl mov mov mov pop xchg subl dec and jl add sbb (bad) test mov lea sub aas mov pop cmp (bad) mov push pop (bad) sbb add add (bad) clc adc mov movsb movsb popf fdivrs mov aad mov mov dec mov dec mov je xchg gs pop fcompl cmp xchg daa push pusha clc gs ds imul mov mov jae mov cld sub xor incl stc cmp iret sub repnz movsl inc cmpsb xor (bad) insl xlat and push popf dec push cli out fwait shll call sub arpl lds dec pop adc jl rcll mov loopne shrl fmuls movsb fisub lods test inc push mov loop lret leave xor lret mov cmp xchg das std mov lods or inc xor test jecxz ret xor and mov jne sub cld stos cmp pop bound ja imul test repz and mov dec jns scas push mov inc xchg adc xlat jge stc push data16 push inc aad add int xor push dec loop jne mov push add ret sbb pop int insl lahf ljmp pop mov out lret mov fisttp ret cmp bound rcr je cmp xlat popa roll xchg mov and es fimul fnsave or fisttpll dec (bad) xchg fmull xchg aad or outsl mov jmp pop fwait loopne movsl cmp xchg (bad) in lret test push mov cmp or and dec jp sarb dec push inc arpl lods jae sub mov dec (bad) sub cmp fs cwtl mov xchg ret push leave push fisub dec data16 test in insl or inc lods mov pushf xor xchg push ret xchg fildl mov and gs mov cwtl imul jmp in xchg inc sub in jno cmp leave (bad) jbe fsubs mov cli inc aaa adc sbb (bad) repnz jo test or lds xchg push add lret mov pop movsb adc push shll xlat sahf xor add adc push in outsb js cmp repnz add lcall lret aaa data16 mov decb fiaddl pop je and pop push xorl xor sti push out xchg push jmp adc cwtl xchg movl pusha sbb (bad) inc or lret cmpb and call dec daa mov cld shrb int3 mov jl movsb dec mov enter sub test add dec inc outsb test push std jg loope mov mov push sub test pop xchg fisubr nop xchg out jge icebp in push fcmovu (bad) inc ljmp lahf lret jle ss jge sub and adc dec (bad) fs add pop pop outsb loop cmp inc mov dec mov mov push push outsl xchg sbb shrb add sbb into mov loope je push loop inc mov clc dec push mov and lods or mov mov loopne xchg push xchg mov pop faddp dec sbb into or add subb sbb repnz pop mov pop xor stos push pop xchg xor mov cmpsb xor mov mov cmpsb adc scas lcall mov cld pop jne fadds test mov jle mov idivb (bad) jne dec test mov xor sbb ret int3 jecxz xchg push xchg or mov sbb stos cld cli (bad) push fs imul xor pop push (bad) xchg jp mov stos jl push bound or sbb shrb cmp jle mov pop push bound xor or (bad) mov push or add cld mov imul fs repnz call mov cmc addr16 mov jb out sbb cwtl pushf ss cltd pusha pop imulb jbe addr16 (bad) xor out int cld je inc lahf (bad) push mov mov out xchg mov sub push idivb jle sub cmpsl in push xchg test in or test scas jno or and xchg mov jno test mov inc fcmovnbe fild lret inc rcrl fistp adc out imul mov data16 test sbb clc xor in popf popa jge inc cmpsl lods xor cmc (bad) adc sub pop cmpsb pop pop or loopne call pushf add lahf punpckhbw xchg xor fmull dec add lock inc (bad) in pushf (bad) je leave cmpsl fwait inc (bad) xor mov call jne adc xor push xchg sbb lret push nop add mov add mov or sbb adc mov lahf or sub popf out push push clc out and ja lcall popa fwait dec inc aaa leave xchg movsb and iret jb leave xor lret jmp pop mov dec (bad) mov mov fnstenv cmp lret mov inc pop dec test icebp hlt push sbb pusha out jmp or jg add mov add fisub push call pop test scas call not mov inc pop push inc lret int3 fiaddl mov pop pop push rclb pop arpl fs xor fsubr add mov xchg call xorl aas sbb fsubrl icebp js pop inc adc loopne sahf or fnstcw dec mov pop mov cmpl iret mov sub ss mov movsl xchg pushf lahf pop adc mov push sbb stos push imul scas mov ljmp cld cmpsb es pop jle mov sbb iret sub fnstenv adc dec jge addr16 jnp cmp push cld out sahf hlt sbb mov lock mov add or cltd mov movsb inc pop mov and lret daa fwait push mov dec mov add pop ljmp fsubr mov call mov scas xor inc mov xchg add mov mov in xchg push cwtl repz inc jns add aas lret lods (bad) leave call or sub aaa dec jl aam pop xchg adc dec add push lock add cmp lds (bad) jbe pop inc (bad) je iret mov jne imul sbb insb in (bad) cmp add mov dec xchg jg and xor hlt push mov dec es (bad) dec dec xchg xlat jbe push pusha inc lock lcall cmpsl mov push scas add or test stos sub xchg rcrl movsl clc out push pop xchg xor push dec add push jp in xchg mov test lahf jg ja sbb test add nop inc push insl and mov out add xor xchg sbb adc xchg push test inc jmp aad js out stos scas mov pop dec test add pushf inc (bad) cmp or push pop sub pop xor lahf cs stos xchg and dec push into push mov in push and sub fcmovnb or sbb xchg sbb adc insl das push dec cmp mov testl adc or std pop test inc sub xchg push (bad) in xchg fwait push adc loope dec cli or ds inc fsts jno jbe dec out dec cwtl ja mov sbb enter arpl lock test test int3 mov mov jo sub mov push cmp push out xchg into xchg outsb icebp aam pop sub lea push or je inc jno hlt pushf nop je push aad mov iret or sub pop push jl mov aad xlat test fcomi mov cs cli xchg out enter inc arpl sub mov pop gs mov cld dec mov popa stos test pop sti sub outsb and xor fiaddl jl popa pushf sbb dec xor and aam loopne mov test jo int jmp pop test inc call test sub sub les xchg jnp sbb mov pushf sub add in sbb sbbl out xor cmp dec int (bad) out arpl pop pop out cwtl stos outsb mov push nop pop leave (bad) xor xor dec lock inc pusha mov (bad) mov roll cmp out dec sub mov loope test or push jno lea and addl jns mov dec iret xchg inc call mov sbb int3 addl mov insb jae imul mov jnp pop jae dec in sbb jno mov fnstsw xchg and out and adc push sbb inc xchg xchg mov clc movsb sub pop and movsb loope push je mov addl int3 shrl jle,pn imul divl sub xchg xor cmp loop scas sbb xlat xchg add mull rorb xchg mov mov mov movsl enter aad outsl adc lds add jb sub clc cmp pusha adc xchg mov jge cs lock aad xlat xor lods jge mov fistpl push jp,pt test mov icebp adc test mov lret jle push movsb fwait insl xchg sub or scas lds stos icebp or xchg into ss or mov mov test xchg mov and sbb jne inc inc adc mov xchg jnp incl adc fsubs lock and jne and mov lcall mov cmp notl xchg stos or mov inc jg sub sbb inc popa cmpsb pop loope call mov in and and repnz data16 movsl mov fwait outsb ret outsb loope adc mov gs pusha adc mov jno fbld xchg imul adc mov hlt cmp adc inc adc or je inc xor add or dec sub or dec jne fldcw xor push idivl adc add sub cwtl sub mov adc push add inc loop push bound push xor pop push clc sti rorb fcoms gs inc cmp mov and jecxz push pop pop pop lret xchg mov (bad) jbe sahf pop stos cmc out xor in loope movsb insl dec xor xchg or xchg mov out cmpsb mov movsl mov subl adc ljmp fcmovnbe pop mov push push stos rcrl and movl dec cs sbbl inc fsubp or adc in mov pop adc push or adc outsb push shlb fsubrs int3 adc mov subl loopne fidivrl pop iret mov nop jmp lea call mov les mov mov xchg dec jae nop mov inc jge add int3 sbb les or out adc push dec dec pop stos (bad) mov repz inc daa ja jb out and test lret inc sub fs and lods xor sti mov sub xchg mov (bad) inc outsl mov in mov jnp push push sarb push pop xlat (bad) in mov int fwait sti imul insl (bad) dec cmc jns inc daa jnp dec sub ret nop idivl (bad) jmp (bad) pop jge xor mov add pop push sub mov ds jbe gs inc in cmpsb (bad) mov mov gs push popa xchg mov shlb mov fs mov pop insb mov (bad) xchg movsl cltd cmp out out lods cld daa push daa stc jns cmp sbb mull int clc add fcmovnbe ja or push inc scas cmp mov lds (bad) push aaa fdivp mov dec push cmpb jno lods xadd cmc mov ja cmp pop mov xor les jne or in mov cwtl iret jno jle xor mov ret gs mov movsl dec xor shlb dec jno xlat add mov (bad) test mov push xor rorl test pop jb das adc sti (bad) in fisubl insl xor out js jo mov fnsave push ret test cmp cwtl out in pop adc pop push dec sarl and stc ja mov nop mov sub mov out test mov in test xorl mov fsubs jbe cwtl dec int3 or xor pop gs fs nop bound pop jnp sti xchg xor add stc int repz fdivrs cs loopne ja inc addr16 enter cld fmull hlt push cltd sbb sub mov fldenv call push mov xchg xor mov pop cltd leave adc or dec (bad) mov dec popa call push jae jae and xor imull out and mov sub daa std mov nop mov test loope and cmc lods cmp leave test push cmp gs iret push pop add pop add loope jbe lea or cmp sub aaa mov lahf test add adc add push inc dec sbb enter push mov fstl xor stc (bad) in lock xchg sub and rorl cmp (bad) or int3 sbb fstpl out cmp cli jae pop repnz cmc cmp jge push pop fwait leave push adc mov dec sahf mov jae in dec adc or sub fildl adc push lods sub sbb lods sub in fist add (bad) sub mov push inc roll sbb pusha mov adc mov imull pop add cmp call xor xchg jo xchg pusha (bad) mov imul arpl in flds into and or jl xor jmp mov adc ljmp adc mov imul pop stos not or sti jnp jbe repnz imul out xchg int sarb call popl jg nop sub es movsb loopne push xchg sub xchg addr16 add das inc imul jne lahf sbb dec call sbb inc push mov push cwtl es sbb mov lds fbld loop hlt xor lock in pop ljmp fisubl jbe and pop das shll mov (bad) hlt lock mov sar pop jne ss mov movsl xchg daa dec int aam mov jnp test into or aam in sub mov pop cmp roll (bad) push mov mov mov arpl sub jg dec mov jns lret int xor cmp shrb adc sub push cmp xchg cmp jge cmp pop lds lods neg or mov lret pmaddwd insl xor adc lret les sbb cli inc inc sub mov test lods stc es sub push mov lcall xchg nop pop les mov jge cmp test mov loopne xchg outsl sbb xchg repz pop inc dec sub stos cwtl jecxz mov es fadd lods in shl push add xchg lods jns das mov push icebp mov push cmpl lret aam rcrb inc bound movsb aam mov pop or cmp add mov sub xchg cmpsb jl scas adc mov (bad) in push mov cmpsb out stos lahf sub test mov mov (bad) push in iretw adc les jae fdivl inc mov cmp fsubs mov loope dec test sarl push fldt or mov idivl push xlat in outsb push lret repz cld mov push ret mov mov jmp ja movsl popa sti xchg add mul cmc sub cs idivl dec call lock dec sbb mulb nop (bad) pop lret push hlt cmc (bad) imul in data16 ret dec stos fisubr scas mov bound out popa adc fs ljmp dec jge cmp jne (bad) out lea lret mov pop mov mov mov lds inc push mov aam orl xchg nop inc xchg fmulp and rclb pop repnz mov scas jne xor jge xchg stos (bad) xor stos mov sarl outsb mov clc sub out (bad) (bad) pop mov and outsb les test mov (bad) int in xchg out or and sub pushf mov out dec inc jns jo sub ja lahf out cmp xchg ret jae xchg iret fisubrl and push iret popa ds and test lods gs mov ss adc cmc mov mov stos daa icebp push das mov outsb jle stc stos sbb pop xchg insb cmp push jecxz xchg pop (bad) call (bad) push les inc lret outsb xor fwait iret push es mov sahf loope or cmp mov mov stos into inc rcrb fldenv jo stos lahf stos scas scas enter dec xchg (bad) xor push cmp lret add fcomps ljmp cltd xor test sbb subl sub jg fildll mov jge pop iret jo lahf outsb aaa ja jae rcl mov jle popa pop cli (bad) jge jne sti pop lret std mov cmp cmpsb ftst jnp add adc fdivs xor cmp xor lret push push call int popf push ja mov push outsl push inc scas outsb clc mov pop adc mov ficomp dec bound sub lcall and das jg movsb pop leave and jo pop pop leave loop cld fs data16 lahf repnz ret sarl fild xor mov das fidivl (bad) push std push mov dec pop pop movsb popf jp out jnp adc scas jmp enter js test xor mov jmp or (bad) in andps inc or call cmp lods add or (bad) loope push cli cmpsl cmpsl add xchg push xor scas add loopne (bad) pop adc arpl dec mov cltd mov testb arpl jp cwtl rolb out sbbl and fucomip imul inc jp andl adc add mov call ds cmp mov and lahf cmpsl (bad) cmc jmp jl es push ss adc inc jnp adc adc inc jne (bad) push xchg mov add adc scas cmc ljmp push faddl in call in out mov push adc mov ret push pushf jge mov jb pop adc outsb xchg lock jecxz rorl or push pusha stos mov fs shr lods push cmpsb gs jl xor mov mov addr16 mov inc dec xchg lret jp xchg pop icebp mov sbb (bad) push dec sarb repnz and add dec inc add lcall jnp cld mov sub outsl fbstp push adc jmp (bad) xor ret aad andl push lods jo sub sub (bad) ss jecxz addr16 outsb pushf mov imul sub mov gs cld sbb fwait mov dec movsb mov out std (bad) insl mov jno lods call (bad) and xchg xlat test mov sub in mov ret xor mov iret sub out std push xor and inc jnp xabort cmp adc js gs sti lcall add push push jmp test shrl push xchg jne mov mov lret shll cmp mov or cltd mov pop or pushf xor leave dec (bad) or or mov inc mov xchg sbb aad in sub (bad) (bad) xor out xchg stc jb lock and aas imul inc jns (bad) orl cmp out and mov inc mov cld scas dec or or mov push (bad) out inc jnp jle mov mov pop jbe aad inc (bad) dec mulb sub das sub out and stos stos sbb int3 fnop icebp les dec test jmp mov jp cli mov xchg (bad) aaa sbb xchg dec imul inc sti or call mov cmc xlat push inc iret (bad) jns xor add adc pminub mov push sbb xchg lret jns dec int3 clc gs and jno (bad) cli xor std adc inc (bad) and mov nop inc jnp aam lds (bad) jle mov pop ja cmp sbb and lahf and out jl fs cltd cmp jmp scas iret lea push mov pop cmp jae dec push ljmp js fdivrl into mov dec xchg nop sbb test addl jnp pop sub mov stos (bad) mov xchg push rcll sub pop mov fst cld cmp sub clc add ret outsb sahf imul xchg and cmpsb jo or push pop aas je cltd mov (bad) jne stc sub fistpl test dec mov dec adc jecxz mov xchg (bad) hlt lods (bad) fs sub jmp fdivrp fstpl mov cmp mov inc lea fucom xchg mov mov sbb cwtl cli lahf imul aaa test test aad sbb pop dec mov push or insl mov or in ret cli mov cmp xor popf scas mov nop jcxz sti scas adc and mov mov in jl popa ja (bad) sbb ret sub push scas jge mov aaa xorl fdivrs pop fldcw ja add mov sub out loope cmc das in push into (bad) sub or xchg mov mov sbb mov inc (bad) jge mov mov mov rcl adc mov out inc mov pop pop pop adcl call mov push mov xor pushf repnz lahf adc test push repnz icebp sbb xor movsl inc (bad) xor lock xlat mov cmc arpl pusha (bad) test and movsb mov mov or jmp das mov sbb insb (bad) bound xchg mov dec (bad) pop add sbb das pop test pop in std sbb mov mov push jne (bad) add add mov xchg repnz in lea loopne loop xchg pop add mov inc lds in or xor jo xlat inc xchg mov inc push dec lahf into dec mov xchg mov call daa pop jmp les dec movzbl and dec push mov sub pop mov pop dec popf inc dec (bad) js xor nop lods das je jecxz fidivl sub cmpsl data16 fildl xchg push mov xor fdecstp aaa dec lahf repz jg xchg mov cmpsb cmp or cmp std aaa mov int3 loop roll stos or mov in inc push push mov lahf mov int out sti push into inc mov xchg pop cmpsl fimull (bad) jl stos enter inc and inc xchg lock not sbb rorl jl and (bad) cmc repz mov mov stos daa xchg push loop packssdw lcall mulb xor and sub call pop rorl ret js outsb pop (bad) roll mov add inc sbb (bad) divb adc jge cwtl (bad) mov cmp and xor pop in inc xchg xor sti xchg sar push mov mov adc test fwait into jecxz mov cli fstpt incl pop sub stos (bad) sub xadd (bad) movl jle mov movlhps xchg fimul mull pop movl sar in cmp aam jle mov dec iret xor xor xchg mov mov or rolb pushf (bad) adc jne xor mov test out jnp repnz sub jnp sub push xchg fwait mov push pop sti sbb mov add adcl cmp sub fsubs rol xor push mov inc xchg int aam cmp adc enter or add pop rclb std ljmp ret and cmp jg cli out mov out pop mov sbb xor jbe jl imul out xchg pop out (bad) sub xor loop jo out paddw ljmp rcrl (bad) fiaddl xchg mov jnp gs cmp fmull jno jne dec pop mov stos dec fidivr mov sub (bad) scas mov lods mov pop mov pop add call stos cmp ss push sti je inc jl sbb jne jecxz leave rcll cs dec outsl call sar mov xchg aam ja (bad) repnz cli (bad) jb rorb hlt sti test scas or mov scas pop mov dec adcb inc (bad) mov add cmp mov mov pop cmpb faddl aas and pop js lods aaa mov lahf push sub jne (bad) pop les sti ljmp ljmp (bad) das cmp data16 sub push adc push test mov aaa xor imul mulb push hlt je dec mov imul ja stc dec adc fmulp mov fs xchg pushf aaa jns lods arpl dec (bad) lret or std outsb jle js gs jo xor xor imul hlt jge insb dec cmc mov lock xor lds mov cmp xchg repz les outsb int sub bswap add test int push add jmp cs cmp daa mov xlat call lea mov andb add cmpsb ss nop fcoml sti push out adc (bad) mov mov sbb jo cmpsl push addb daa sbb lea jae xorl inc test sub pop scas stc jae es (bad) push mov push jb fsub packuswb cmp push sub (bad) and or cmpsl js push lods adc mov icebp ja cld xchg loopne xor fist xchg leave push fs aam mov xchg mov xchg (bad) nop mov pop clc push add notl loope add out push enter lods std jmp push insl and aaa mov mov sbb les mov push gs decl xchg ljmp push in mov inc fwait sbb xor mov vmovlps fs in je ret cli (bad) dec in xchg sahf and and mov mov (bad) shrb cmp xor jae,pn jecxz mov neg add mov add in push xor mov mov cltd into mov cmpsb rorl fcoms faddl cmp (bad) xor outsb xchg lret xor rclb das mov in inc aas cmc mov (bad) pop inc sti mov clc and outsl jmp push cltd fldz movsl sbb dec xchg adc jge call jmp cmp adc imul sub stc cld inc scas dec fldcw and insl jnp test div ret notw call (bad) adc loop stc add in mov jmp mov (bad) loop sbbl loopne loop pop or pop movsb sti xchg push mov mov roll mov int into imul aas cmpsb imul je fs cmpsl ja cmp js mov and mov pusha ja fs and cwtl scas (bad) push incb scas sbb dec ret and mov xor xor sub std adc xor mov push mov loope lcall ja inc adc jge test pop adc add bound sti add loopne cmp jecxz push scas jecxz push sub jns lret push rorl xchg lahf repnz xchg aam pushf mov iret outsl pop adc rcl xchg enter pusha pop mov mov sbb test leave pop imul push push lea mov enter leave add push inc test test mov mov enter mov imul sub inc pop mov mov cwtl push mov mov mov js iret xlat repnz cld xchg popf sbbb out xor sub aas lods lret mov popa mov imul rorb xor int xor pop fwait inc mov leave adc push (bad) xor jle push popa pop ret movsl sub inc mov sbbl dec add aam rorl movsb pop or pop outsl inc mov mov (bad) ljmp push jbe mov mov (bad) lret loopne mov cld xchg in pop lret adc in mov xor xchg xor in cltd lea jecxz stos sbb mov fdivrs or and xchg dec push ja mov call xchg mov lahf sti dec in mov mov fisubl repnz jle xchg and adc fs or cmc sub hlt or in rclb adc addl jno xchg imul inc inc cmpsb gs jnp insb cli int3 jb push loopne out inc daa (bad) scas jle xor icebp pop push out bound stos mov sub push pop xor ss cmp or mov bound (bad) out stos mov xchg mov sahf stos cs push jae scas dec adc mov and loope leave leave icebp pop lret mov xor jo cmp sti ficom popf (bad) xchg cmp jmp enter shrb mov mov inc (bad) lret insb gs pop xchg lret dec dec enter hlt sbb hlt xor pop jg xchg lea dec jo mov sahf add adc sbb repz fstpt stos or rolb mov std add jbe daa test test (bad) (bad) into sub adc dec popf jns dec nop rorb mov mov lret addl mov into cmc enter add jg or pop clc insb lret fnop mov jnp jle clc shrb sub fsubrs or subl fild stos mov or call test outsb sbb addr16 pop pop jae pop cmp gs clc mov sahf xorl pop cli lret mov shlb aas and insl outsl loope mov mov fnop jo dec lahf imul inc ljmp sub add mov fsubl test push test xchg add nop xor lds xor fwait jecxz jb mov cs jmp inc push jno sub mov neg sub xor pop adc mov fs aam cltd lahf xchg test fdivs push xchg repnz dec pushf es or incb repnz cmp or jmp mov lds int cmp lret faddp adc jg push inc jno mov fcoms mov movsb rorb lret mov inc leave dec cmp adc dec in in mov movsb test xchg ret fadd es xchg jp xor ja adc sub cmp ljmp je dec push inc ljmp mov jg (bad) mov inc pop popf jl into push icebp fcom mov jmp mov jmp cmpsl outsb stos cmpsb (bad) jae and jl inc pop mov out pushf xchg out paddusw inc inc idiv mov ja jnp mov arpl movsl dec aam fsts (bad) sbb push nop push mov incl sub push and loope jno rorl pop pop jl mov mov movsl pop outsl push cmp mov loop insl stc js fdivs jl inc lds dec and adc mov test lds or cmpsl pop mov loopne mov mov orb mov out inc mov xchg shlb pop mov in jno mov test cs inc or decb mov lea loope push inc fistpll rcr jno mov fldenv fimul fmul pop repnz jno ficomp mov repz xor pop orl pop jg xchg je fnstsw test push or in jecxz repnz adc int3 ja dec lods outsb mov aas test adc mov pop iret pop add xor lea ret pop xchg fwait lds cmp mov int or push push pop fwait jmp and mov lret imul push push jmp pop dec pop gs je pop leave cmp pop ds mov jo xor push xor je add hlt in in inc aam xlat ss xchg es fldenv into sarb enter sub (bad) jno add int out dec adc mov movsl adc lea cld lods push sbb dec cmpsl ds mov jl xchg out in mov sbb dec out dec dec rclb loope push or adc mov xchg mov loope cmp lea dec lret insl popa add pop mov dec fiaddl js loope lods push jl pushf stc jl lahf dec test xchg les std xchg fild jl pushf in dec adc pop adcb enter mov push jmp inc lods xchg cmp xchg pop aas (bad) lcall mov xchg outsl pop notb (bad) xor jno and sahf push (bad) mov and in nop aad push add (bad) jns xchg xchg mov dec lods (bad) sub xorb out jbe inc (bad) mov (bad) bound rorl adc mov into sub dec mov mov int pop lea out mov adc sub mov out mov addr16 mov sbb cmp push adc inc sbb mov mov insl lock pop js (bad) add movsb insb mov int3 xchg cltd mov add pop shl (bad) rclb and int3 add arpl adc iret pop adc cmp cmp jl lret cmpsb inc int3 fimul inc insl sbb imul xchg push xchg mov insb loopne sti sbb das dec mov cmpsb sti add fmul push jne shll out xor std insl insb jg push xor cmc mov or pop jge cmpsb xor hlt pop add rcr push mov xor arpl sbb in cltd sbb sti jns leave clc jmp mov add cltd out scas mov test mov cmpsb adc loope sub jmp or and test jecxz cmp add adc neg cmp bound fsubr pop jge sbb pop mov add inc cli aaa addb cmpsb or or xchg cmpsl xor ficomp jne push fs and cwtl adc mov (bad) xor mov dec icebp cmpsb mov mov jg or stos mov mov movl arpl movsl test jmp pop test dec cmp inc repnz jmp ljmp lcall js enter lock inc daa add mov and out pusha in push inc or push xor adc sub cltd adc pop inc out lock inc scas adc cmpsl dec imul push jae push xor inc aas ds addr16 stc hlt pop arpl sti cmp orl adc mov repz or pop stos xor sub sub inc xor mov out dec mov gs loop or cwtl lds mov dec nop aaa xchg test (bad) sub mov push lods enter cmpsb negl pusha push jecxz adc pop leave pop fimull mov adc cli (bad) jno xchg dec xlat fwait pop jl pop pop push push pop adc jge xchg lahf jecxz jl fstpl xor push and xchg jmp lret cmp in jno ret add and fildll jg outsb cmpsl dec std jle pop jns (bad) scas test std add aaa (bad) hlt stc xchg cld pusha or (bad) imul mov jae gs xor mov ds mov mov or pop xchg sub imul mov fstl (bad) int andb mov mov jge xor fmul mov aaa (bad) icebp aad mov xchg xor iret out mov daa ds dec mov arpl std adc (bad) or andb xchg xchg test fild popf xchg mov lods pop int stc cwtl popf inc fs in fisubr sub mov push or aas inc jno mov inc xchg push mov xchg arpl out jno xor lock sub (bad) push sub mov mov and call (bad) sub int mov or aam out (bad) jnp (bad) mov data16 dec dec andl jae mov into daa repz dec mov mov cmp stc test ljmp xor int3 out add xchg js (bad) mov sub add fidivr (bad) hlt icebp add xchg xchg lcall outsl xchg xor xchg loopne std push mov mov mov add jecxz lret mov push mov cmp jns pop pop std scas xchg loope mov adc andl clc hlt subl adc cmp cmc or push test mov std xor lret mov adc cltd clc mov inc mov leave lds stc mov pop and sbb out hlt or repz mov out lcall mov fwait les sbb (bad) cmp mov sbb das cwtl nop outsb dec pop xchg mov or loopne and stc mov dec sbb jl xchg scas add mov sti hlt inc mov sub mov mov rolb cmpsb mov fs and sub popa and mov mov jo and outsl jne mov mov inc enter out std popf lods dec xchg mov push mov lods dec les add inc jecxz dec popa addl stos adc sbb dec stos sti push adcl test xchg inc in adc jmp rcrb pushf ret cli cmp inc push push mov mov or loope test (bad) jae lcall aad mov xchg inc or cmp add (bad) fisttpll dec scas std mov (bad) jl inc ret arpl negl fnstenv sbb lahf jl arpl int fnstsw or loope push fcompl sub pop stos adc aam push dec mov sbb mov and dec rorb insl sbb pop movsl aas mov lcall pop lods ret leave sub sub dec mov hlt notl jle and xor test pop jp int3 or clc xchg adcl jno lods les cltd push test dec shlb sti sarl xchg stos mov mov xchg sub cs cmp dec push mov aam test pop xlat stc in sahf add int3 sub scas mov sti test and xchg mov dec fwait add mov jecxz dec xorb clc push cmp dec jmp adc sti mov dec (bad) jge sarl jmp or loope cmp or lahf mov outsl cmpsb add das mov inc mov fisub sub and rol add arpl imull push faddl pop or dec pop mov pop jbe cmp test xchg stos sub add xor cmpsb cmp pop imul inc pop sarl cmc stos data16 sbb (bad) call icebp int3 scas std add cmp cmp mov or ljmp stc dec stc fisubl add in (bad) cmc jno mov rcr iret sbb jmp fs std ficompl (bad) mov jmp jl shl in xor in shl mov ret sarb movsl inc jecxz mov call push arpl fwait aad mov mov jo xchg pop inc xchg ss (bad) mov addr16 jns gs popf sbbl movsl mov lock popa jno data16 (bad) movsb mov daa pop jbe aaa add inc cmc or arpl mov pop adc lahf fs mov cmpsb mov mov pushf inc int daa mov daa add inc icebp les dec sub mov lret (bad) mov pushf pop ljmp outsb inc rcl xor mov or enter add addr16 jbe ficomp xorl lcall inc dec es pushf mov cltd inc cmpsl fstpt cmp mov inc (bad) jnp in cmpsb cmp jecxz lcall jae or pop enter leave lcall push lcall lds mov xor jnp sub in cmp shrb pop xor pop test popa mov outsl and and std pop aaa (bad) fstp dec out cmp jmp bound add or mov inc sbb adc ret sub adc and call inc data16 mov or jl cltd lds push nop rcr enter es in jp dec rorb mov adcb scas xchg data16 imulb pop std pop jo push shrb (bad) push mov mov (bad) stc xor fcomip and pop xchg xchg pop xchg fstpt cmc fiaddl insb (bad) leave insb xchg rorl (bad) lcall mov int3 push push mov cmp and loope daa cmp div xchg xor out xchg scas inc push xor call xor mov int3 push (bad) xor sahf or mov inc stos scas leave ds xchg xchg scas aaa (bad) sub xor inc sub pop xchg dec push or mov xchg or dec roll mov repz cmpsl mov adc cmp inc rcrl not or test xchg std dec (bad) stos and jge xchg mov and and jnp xor pop test test out (bad) jo jns insl icebp dec aam in psubb pop jnp fwait or xlat ffree inc cltd divb shr and hlt push cwtl jmpw cmp dec inc (bad) dec aas add dec loopne sub jecxz push pop and xchg and je xchg cmp cmpsl shl enter jmp arpl mov movsl fsubl cmp cmpsb add pop inc dec cmp test jnp mov push in adc test popf fs push adc inc pop xor (bad) pause and js mov hlt mov and hlt in pop leave sub stos bound pushf jmp mov and lods into in iret lods mov icebp xor xchg iret dec lahf fstp mov ja adc rcrl mov lock push repz jnp xor inc or xchg dec pop jmp scas add je (bad) imul stos sbb push scas mov mov mov inc pop bound inc clc and mov insl test jbe (bad) pusha xchg cmp mov inc push jns lcall pop push add and sbbb outsl out mov sbb pop xchg adc rcrl jns rcrl scas dec jae or movsl push imul dec lods daa jae (bad) mov dec nop rcrw cltd stos pop jmp dec adc fistp adc sahf mov cwtl addr16 ret cmp adc out loope mov mov (bad) mov test cwtl out iret mov je xchg gs iret inc mov jns push pushf xchg push sahf pop pop push pop popf xchg fsubrp testb cmpl loope cmovno xchg xchg push lds (bad) mov test dec mov pop mov or xor adc lods scas lods inc les lds cmc movsl cwtl std adc test fsubs cmpsb (bad) xchg sub dec aad xchg out (bad) xchg push ds xor rcrl jne mov jns les je cli out pop addr16 pop push ret jp (bad) jmp pushf push adc inc pop pop inc subl xchg mov (bad) cmp pushf and stos jmp jp sub xchg sub icebp xchg ret lret sbb dec in jg lret fmulp es test fwait mul jnp mov test sbb pop cmpsl sbb mov mov add dec xchg out pop fisttpll mov loop mov mov fldt mov cltd dec push sub jle jae inc sub mov (bad) pop test push stos outsb push add pop mov mov jmp jnp sub mov mov aaa mov mov insb push sahf ds test mov lods mov call jg and pusha popa mov loopne dec lret les dec jo les popl xor xchg fdiv int imul (bad) xor es jnp fistp in rcll jbe sar cltd jmp jbe pop jb jo leave js sub cmp fimull adc xchg push cli mov push sbb sti repnz sbb loopne adc mov mov movsb idiv mov loop mov jle mov push add loop xor mov mov (bad) mov inc ror icebp mov jp cmpsb lea cltd xchg mov pop add mov jno or (bad) cmpsb ret test dec insb mov fstpt lret daa lahf shr push aad push fisub in lods mov cli jecxz mov adc daa mov jl or push (bad) (bad) fdivrs adc nop dec cld outsl add ja and fs test mov dec jno jb push dec sbb sti ljmp (bad) js (bad) fdivrl aaa mov mov push call push cmpl loope xchg (bad) enter mov mov mov loopne negb sbb or xlat popa cmp out cltd mov test cmc mov sbb les jo ljmp adc das cltd jae gs sub add mov lahf mov sub add stos mov jle mov in inc mov push xorb push (bad) jle test shrl nop cmp fdivrs ret cld dec mov mov inc repz (bad) fsubrs dec cmp sahf out add push ret ror or xlat mov test fcoms std das mov lahf inc std flds cmpsl into jmp mov fstpl lods xchg and add mov mov ljmp adc insl imul mov int test leave test les in mov lret and lcall rcl lock outsl roll inc adc mov mov scas rorb xchg (bad) fist mov add ret jmp mov inc sbb inc out xchg and sub or aam push int xchg mov into or mov rcl pop cmp mov aaa xor (bad) lods out mov mov cld int3 push sarl sbb aad sub pop pop pop (bad) mov ret fist ficompl mov je stos mov jecxz inc (bad) aam repnz popa cwtl repnz cmp scas scas sbb je sbb movsl mov (bad) mov insl cmp xor jge mul jo xor popa test jbe dec dec xlat cmp lcall lock sub xchg in stos stc adc (bad) pop sti xchg stos andl dec adc cmpsl sub mov sahf xlat inc xchg push xlat fnstcw xchg cmp cmp jle aam push cmc (bad) outsl mov fwait pop sub fldt stos cmc pushf popa pop pop mov jge lret fs push loopne out jecxz test scas outsl (bad) aaa clc or sbb bound pop fdivs push lcall mov loop jecxz inc jbe xchg push mov mov pop std int3 jne xchg fidivrl scas gs xor outsl push cld mov (bad) into rorb cmpb cli mov loop sbb loop in add fidivl push fdivrl out pusha les jmp jne das pop mov mov imul pop pop loop (bad) jne inc call gs aad xchg mov (bad) loope mov call aas dec cmp dec jp sub or inc hlt pop insl add sub mov aad mov add dec (bad) cmp loope bound dec iret mov sub cmp lods push jno adc and xchg mov adc in sbb or mov les movsl add lods (bad) xor pop iret push xchg test xchg mov mov leave ljmp mov push xor mov pop jne jp mov sub lock loopne jmp cld mov icebp lahf (bad) mov ja std add xchg xchg adc add cmpsb in sahf data16 leave pop jne je pop and (bad) enter jl (bad) daa mov adc (bad) enter divl movsb stos jle cmp dec stos xchg mov and adc out xor addr16 fildl dec lret (bad) pusha mov js xchg inc out popa arpl popa rcr xor arpl adc add fwait in mov jne ret sub sub js sbb fwait shrl mov jb adc pop add mov xor xor in add inc inc pop mov adc jg fwait pop sbb mov dec mov or mov fcmovnu lret add addr16 push dec cmpsb (bad) icebp pop xchg xchg jp push and aas ja add mov push or adc and push xchg inc out jle sbb and lcall add xlat inc mov in (bad) fisttpll sbb mov clc push (bad) das cs xor push push mov mov cmpsb enter and ficom add xlat ret (bad) fsubs in or loopw cmc xlat sub js gs xor in cmp in je outsl pop push iret nop ret jnp pop ss pushf les repz xchg jnp lahf loop sbb jns aas push iret fldenv xor outsb jne xor cmc add jmp cwtl mov sbb dec insb sarb cwtl sub fdivrp stc and (bad) dec js addl (bad) in and mov out clc fsts mov mov out fdivp sub push jg cld mov and js enter or or pop adc jmp mov (bad) mov pusha lret sbb out xchg lret fs xor inc cmpsl xor xchg inc add mov or jl or lods push mov xchg sub pop jo daa or std jl xchg dec je sarl movsl loope movsb lock fwait jmp inc into call dec dec imul outsl fisttp cmp mov pop fisubrl cmc dec ret jbe aas (bad) daa jge push adc imul jnp cwtl cmp je push jo cmp mov fwait in xchg xor lods cmpsl das inc fildll push movsl cld xchg stos ret fmuls std mov mov xchg xchg mov sar inc pop cmp addr16 cmp sub cmp lods icebp dec dec mov push pop std xor arpl in adc pushf jbe hlt arpl lods es cmc fidiv cmpsl or jle adc push push mov inc jmp popf sbb adc mov std or xchg xchg sti test in add in dec stos pop cmp xchg (bad) in std xchg add pop cmpsb xchg imul scas lds mov or fs (bad) lea (bad) cmp jne and sub ffree lahf xor push sbb sbb (bad) das jle aad (bad) mov jp stos lahf jge lcall in out int mov ficomp stos pop lcall jno cmpsl cmpsb into outsb or movsb inc shrl in sub out mov cmc pop inc sub pop xchg or scas scas popa aam (bad) cld int3 into dec test std inc outsl adc movsl fcomp add mov sub leave (bad) mov dec lea xchg xchg out fisub cwtl jne setne xor shlb jl sbb out (bad) cli cmp push mov insl stos or push xor and xor cmp cwtl nop push int adc ret mov in cmc sbb (bad) cmp pop std and push mov xchg fwait adcl std cmpsb sub inc mov mov es movb jo push movb mov call cmp add std xchg mov faddl stos fisubr aad inc sub fwait addr16 lret cld dec xchg push mov iret mov mov jmp adc adc cld jnp stc pusha jo test inc fstpt adc fbld or jl sahf rorb in shl (bad) xor lock cmp sarb andb inc nop or jo mov add imul shrb dec int3 mull xor cmp in push cli adc popf shrb mov fistpl pop mov shlb inc dec cmp jl inc stos jg jb jg xlat add xchg push inc mov jbe enter jae stc leave lcall jns sub sbb stos pop stos ds mov add stos adc int3 push daa stos movsb cmpsb aad mov pop adc inc and test cmp stc fidivrl lret cmc jl cmc push sub das addr16 mov xchg lret aaa adc cld fsubrp and imul pop sub mov dec mov mov movsl xlat push inc movsb mov scas aad nop adc pop dec fsubs popf mov push jg push dec (bad) (bad) out sbb mov jnp push inc popf outsl xlat stc pop jb lahf cli xor push sbbb stc inc fsubl test sub push jb xor cmp inc dec cmp stc xchg push xchg push pop pop inc mov test lret sti adc cmpsl adc int push ret push cmpl idiv add jl scas pop test pusha mov sub sahf cli (bad) xor es ss clc mov cmp mov jnp mov enter test xor jmp bound std sub jl rcrl xchg mov insb mov arpl daa sub cli icebp push xor pop shrl shrl cli push int3 movsb and fldl stos mov add mov leave pop iret lock lods dec jae jg lret aad scas xchg loope into mov inc mov jns xchg or loopne jb decl mov fs lcall in cld lcall out stos jo adc cmc in and lret push loope add sbb pop repz sub add dec sti xor xor ret push mov jg sti add cld push jno leave lods repz test xchg xor sti stos (bad) lret loop adc insb pop or pop (bad) sarb lea ficomp mov (bad) repz ret movsb daa cld sarb pop cmp xor dec push mov adc andl cmp cmp push cmp std (bad) xchg jl push mov imull fwait sub test cli push push enter imul mov push leave rorl push pop xor add adc stc fistpll arpl cmpsl xchg loope push inc popf jbe jb paddq mov adc fistpll pop mov pop sbb pop mov aaa (bad) sbb xor dec imul sbb xor mov pop lods adc dec cmp jno push add jne dec push inc je call add imul pop movsb popf xor cmp adc scas cmp pop mov lahf out cltd pop cmpsl cmp push or call shrb jge inc rolb and iret add repnz cmp (bad) and pop pop gs cltd xchg loop sbb subl pop lret test xor jo repz jecxz pushf add sahf ds inc repnz dec xor push mov inc push dec mov test lahf or add test push pushf pushf mov adc js lds mov sbb pop adc jns std shld das les ds adc outsl and repz sub imul sub mov lahf test add icebp pop mov xor pop jl neg jae sarl pop xor jae mov movsb (bad) sahf aam add lahf push inc push inc push mov in fmull pop cmp dec and push and sbb outsl push or sti push mov insb ja js jecxz test pushf movsl push leave inc repz shr jge (bad) mul popa out cmp fistpl mov adc aaa mov push scas data16 jmp cmp enter lods std sub jmp pop movsl cmp out adc hlt les pop push or cwtl xor (bad) lea cmp inc stos jne xchg mov or mov pop xor loopne fdivs push xlat scas fsubl insb popf mov fadd out push nop ret push scas cmp xchg inc cmpsb and xchg insb sub popf je inc nop sub mov push clc inc shlb popa pop jle sbb cmpxchg xlat mov ret movsb sub ljmp and (bad) popf cwtl sub push mov xor or add loope outsb pop xchg jb inc test roll sub fstl in pop jl das push movsl jecxz fdiv cli shr sbb mov fiadd pop and stos mov sbb mov push popa pop call dec jnp add push inc rcrl push pop sub or les fs mov out mov inc in xchg push lret (bad) dec sti sub mov xor mov sub mov sub addr16 cmp and lretw into loope or ret fs push dec das in mov rolb fdivrs imulb xlat pop sub call dec (bad) cli xor mov (bad) iret mov inc push pop cld sbb sbb cltd cmp mov ja (bad) aaa add and mov push jae arpl inc push mov add push (bad) stc jmp xor mov into mov pop mov sbbl loop push iret xor test and loope insb imul lret sti jb xchg fcmovne cmp xchg (bad) in out loope mov (bad) sbb movsb mov test sbb (bad) dec cmpsl imul mov aaa add add pop les mov out jno jbe lret call rclb fnstcw idivb dec jno mov neg dec mov xor or out xchg or xchg int3 push dec lret loopne inc mov lahf add dec mov push inc mov out scas repz add add mov fnstcw out fwait pop adc pop sub in iret adc je je adc stos sub pop mov xor mov and add inc sbb push loop inc mov stc pop add scas push cmpl cli es dec xchg push or call mov inc jbe xlat ja ucomiss xchg cmp ja mov dec pop (bad) cmp stos lret shrl mov rcrl aad ss jg dec (bad) cmc ret dec fnop rcrb inc mov mov adc faddl cli mov in insl push mov pop adc pop pop xchg (bad) out insl xchg mov repz lfs xchg pusha scas inc (bad) dec mov sbb and call in rcll sti jne insb (bad) adc jbe cli call adc cld das adc mov rcrb jb pushf cld pusha jp mov push cmp adcb test push mov pop push pop mov jae cwtl and enter dec ss (bad) imul fwait jl,pt lret pop mov adc or movsb jno mov fidivr into fsubp cwtl xchg mov mov pop push dec pop dec pusha imul mov jno pop popa sbb adcl cmp push push mov sub out mov fmul addr16 jge xchg mov mov xor push (bad) mov (bad) frstor push iret shll xchg fs scas mov leave dec jl and out sbb and sub mov dec cmp and (bad) or enter (bad) pop fndisi(8087 add imul lods xchg dec and sbb and pop (bad) xor loope inc out mov cmp imull add lcall rorl stos sbb sbb repnz fmull nop out or jmp lret jb xor loope fisubl repnz xchg mov cltd dec dec lret pop test xor pushf insl out mov mov adc rcll push jecxz jb lock mov jnp in leavew push or pop jno imul cmp clc scas jl dec adc movsb mov adc mov add (bad) ror mov mov mov gs dec fldenv (bad) mov jl dec iret cmp insb ret mov std xchg and push cmp xor dec push xchg mov inc jmp mov test iret lret into shll movsl lret cwtl pop clc lods scas das out pop pop jns jno mov xchg cmp xor push xchg cmp ss mov mov push xchg jge push sub mov mov test in xchg ljmp xor add ja mov sti ret imul aaa call ficompl jl mov aam (bad) lcall and rorb arpl imul (bad) aaa push xchg (bad) push dec jnp pop adcl outsb icebp sarb jae pop mov sbb jnp pusha scas (bad) dec dec add in mov aaa das loop fimull mov ret pop mov inc dec lret push or stos inc pop mov test push sbbb movsb mov and xor hlt mov test scas aad push faddl and fs sbb cmpsl mov fisttpll jae dec pop and fwait repnz push and jno cmp shlb mov cmp mov test data16 jmp inc mov sub cld add sub mov adc lds or add xlat cmp mov push nop cwtl aad and dec testl jne pop aaa mov pop inc test jmp mov push xchg push int3 mov xchg mov sub out loope insl ret nop addb aam jge movnti icebp in and and cli fs jg inc daa jg into xchg divb movsl rcrl sti xchg pop lea ljmp lock mov sti enter dec fisttpl ss adcb sub sub xchg cltd push repz cli out std cli (bad) movsb mov test stc lods xchg mov in aas clc adc cmp pusha lods sub in xchg in repz jg push add scas divl xchg (bad) mov lea add aam leave mov jge inc jno fwait xor mov mov mov mov jp jle aad and xorb cmp xchg cli cli jae mov jl addl jnp aad add sbb dec cli jp mov push mov mov dec inc je (bad) fsubl sub jb in jl shrb rcrl movsl fwait ljmp inc bound mov lcall lods ffreep pop or in jo adc (bad) fcoml int test sar cmp ss mov daa outsl outsl aaa lock (bad) (bad) ss pop sub in mov lds jp (bad) xor cmp xor (bad) jg inc test sub (bad) push lds mov pusha cmpsb cmp outsl bound in or mull mov push ret adc inc enter lods mov into mov fwait push pop inc lea js push out int3 lods out cmp add mov (bad) (bad) pop pop das inc mov add mov push push pop push sub stos int3 ret add adc add daa (bad) sbb mov daa jmp or jnp push stc out mov iret mov xor cld xchg mov inc xor stos jecxz push daa pop add fwait push bound sub (bad) in adc mov or loope into pop dec push push mov push sbbl sbb add jg pop std movsb stos pop icebp test jecxz hlt sub sbb xorb jle gs cld mov lret sub out and hlt add test sub (bad) and and stos jecxz mov and fwait or xchg xlat cmpsl js out scas outsl jmp sub ss outsl mov add (bad) addr16 scas cs sbb cmpsl jnp rorl push mov in cs rcll andb cmp lahf mov pop sbb mov sbb add add je jno xchg inc add aas (bad) cmp dec into jne push xor stc jle xor xor inc (bad) xor jo pusha mov dec xor cmp sti out dec mov adc ret lret pop gs and mov sub test enter dec jmp call gs mov subl movsb hlt in push (bad) aas mov rclb scas sahf jbe nop jno and sti mov push sub xchg jmp mov mov xchg in sub adc outsl int jl mov jl imul out inc test gs mov insb sub xchg gs pop inc xchg xor lret xchg adc icebp test inc cmp mov cmp pop loopne lods popf in (bad) lock aaa add loopne incb stos ds test jl fsubrs xchg shlb xorl or push int xchg (bad) imull xchg xchg iret xlat rcl mov adc outsb cmp ficoml add ja aas mov ljmp jle ljmp add (bad) pusha mov sar in hlt cmp sbbl mov add mov push push xchg mov xor scas xchg fnstsw daa inc inc hlt iret aad mov movsb stc dec sub mov mov leave pusha or xchg mov mov clc xor out sti ja pop popl mov jnp vmovapd mov mov in jne sbb sti xor leave or scas sbb lcall jecxz mov sbb (bad) lcall in dec mov ss mov in and ror mov sub jo adc mov int3 cmovg dec (bad) imul int3 mov scas es adc rorb or adc repnz inc and mov mov xor inc in inc cmpsb jl outsl popa cmp lock mov lods scas cmpb add push or mov push push xchg fcomps aaa cmp inc icebp push mov cli jns cli xchg sbb stos push (bad) fdivrp push xor jecxz call outsl sub stos repnz pop jecxz jae dec inc push mov insl pop xor jo addr16 js inc xchg mov push call cmovbe xchg call dec in (bad) cs jo cmp dec mov enter push enter fistpl negl add dec push dec arpl movsb push out inc jp es cmpsl and les pop movups in sbbb lods xor loope sub in insl and jle out negl or cli jg notl pop (bad) (bad) fcmove or xlat xchg or test sbb cli dec sahf addb cmc inc cmpsl repnz ret aam mov hlt outsb push pop inc and dec mov xchg pop mov scas int and xchg add dec mov iret loope dec push data16 add fbstp pusha ds and in subb mov lcall lods or jl popf test mov rorl aam dec les gs fstl ja mov and rcrl addr16 and stos and call mov jnp movsl addr16 mov ret and push push adc add clc mov and adc data16 imul aam int3 fnsave test push fdivs and mov xchg pop loopne xchg xchg ret lods aaa mov pop jl fwait cmp xor fnstcw pop jle daa ljmp pushl pop rclb push (bad) push (bad) jns dec add data16 or jae adc fwait aad push pop adc lcall imul or add push mov test push rcrl inc hlt sub ljmp repz fisttpll les andl clc aas and popa or fisubl js pop pushl loop stos es repnz cli cmp cmp cmpsl in sbbl push es shlb push xchg iret inc push mov mov jno mov jae stc cs mov popf cld lret push test fistl pop pop test sbb insl or dec fldcw int jl xchg (bad) lods ret fidivr mov jnp cmpsl inc mov fistpll push and pushf xchg or sbb std imul out dec add call jne int3 jbe lds cltd (bad) fstl pop mov (bad) lret movsl xchg lea xchg xchg inc mov xor pop (bad) or ljmp pop and das pusha je pop jnp call mov loopne pushf mov in xchg outsl cmp dec outsb divl cmp mov push stos cltd in flds jmp pushf das test js inc movsb lcall pop gs (bad) push sbb std xor movsl sbb std lcall xchg xchg pop scas push sub jnp in inc jno xchg into fildll jg div pop inc sub add xchg pop loope jb xchg jl adc test loope jb lret iret mov mov test scas sbb mov inc sbb jmp (bad) jmp addl sub lcall dec in hlt push mov ret leave push lds xor push inc rcr outsl push enter jge add jbe into movsl mov sbb mov xchg mov shlb aaa (bad) test push shr lret int loope (bad) je inc dec aaa loopne ret mov out jmp mov test and cs dec inc pop push cli xchg inc iret xchg push mov add sbb jns (bad) sti daa les lea sub cwtl ja cmpsl lods outsb sbb cmp out js xor sbb or movsl add push loopne,pt fdivrp pop jo shll lret or cltd push lds iret ret cmpsl fwait push mov jo mov sub mov imul mov dec movsb jo mov mov icebp add push iret jne mov jmp std add rorb push dec adc add int3 mov push and pop sbb ljmp add bound bound xor iret mov cmp rolb and nop into jmp mov cmp inc sub or xchg rcl xchg mov loopne (bad) mov sbb xor jnp pop (bad) lahf inc add mov int add xchg push mov push cmpsl mov add fcmovnu push sub bound mov das leave test cmc push int3 mov into or xchg lcall mov jmp loope test dec lcall (bad) cmc push push add (bad) cmp xor fucomip movsb sub mov scas mov mov test scas repz pop sub fsubs and ljmp sti mov (bad) sarl (bad) and arpl xchg inc mov out sbb shr adc gs scas add call repnz arpl cmc push and and mov cmp inc pop test cs add mov fwait test inc push jno push and xchg cmp loope lahf push dec and sbb gs sub sub fldenv imul imul xchg popl loope and roll orl in xchg jmp cmp inc sbb cs jmp je rorb sti movsb sbb scas punpckhdq push fucomip (bad) mov test pop popa inc add inc inc sti cmc adc lcall dec pop dec or jle mov push pop cld mov mov (bad) mov insb pop mov add and dec jne into mov mov lret xchg or mov sub jno movsb jmp fldenv enter lcall and jl fmul jle and (bad) cmc push movsb mov jecxz mov push xor in cmpsl lahf cmp jno xor fisttpl (bad) jae sbb cmp test cmp sar pushf push (bad) popf in xchg cmovae inc popa pusha outsb aam rcll into in mov lret mov push imul xor adc daa mov mov xor cmpsl push pop cmpsb std xchg and adc cltd idivl and popa aam push imul mov scas sti xor jg movsl std jmp call ss jns xor push mov xor jge inc mov pop call inc inc rcrl xchg sbb lahf push xchg cwtl stos sbb dec (bad) xchg lods sub pop sbb xchg mov add sub out ret jp inc scas stos popf test pushf cld or repnz or (bad) xor je push sti cmpsl jbe add mov into cltd (bad) xchg lods aaa pop mov pop pop add imul xchg shrl popf adc test jge and icebp mov loopne pop jge and inc test jecxz push sbb sbb pusha mov aam aam inc cmc add ja hlt andps lcall jl leave and cwtl push inc insb mov jbe or mov xchg bound mov data16 fdivl pop mov sbb add jmp mov mov jae xchg lahf mov pusha fiaddl xchg adc loope pop fildll pop inc or sbb mov out clc rcll outsb mov cmpsl insb adc jp iret xchg sbb and cli (bad) rclb les inc dec nop and sub mov jae inc scas pop mov fbstp pop jmp je fsubrs jle addr16 sbb testl stos lods rcll inc push lods sarb push mov xchg add lret adc dec pop test xchg lds adc clc pop lea dec cltd xor popa jae fsubs fdivp push inc loopne rcll push mov enter subb pop jecxz xchg jle lods xchg test lds stc pop leave (bad) dec inc aam sahf mov movsb cli mov cltd movsl adc jg mov cmp jge pop loopne or jae dec jae inc bound fistpll mov mov mov shll or leave ja inc xchg xor mov push je xor leave cltd cmp inc (bad) cltd cltd jb push (bad) adc mov mov push inc cmp adc frstor mov xor adc fwait leave lret lret rclb mov mulb arpl lahf sahf mov jmp out dec jo lods jo ljmp imul hlt xchg sub inc lret movsl pusha cmp test dec add sbb fcompl pop mov inc scas add das aas lods repz imul push xchg pusha push scas jg aaa mov cli addr16 je dec add rcll es lcall aam pusha movsb int dec (bad) in mov sbb loope jae pop pop dec push fnstcw inc xchg shlb push je jo dec mulb cmpsl into cmpl bnd sbb out mov neg jno lods push addr16 lahf cltd clc and xchg (bad) dec outsb jge subl outsl dec fs mov push jg inc (bad) mov and daa scas mul add dec adc jmp xchg pop and mov leave sub add or in into pop enter adc mov and cmp (bad) jns lahf add add and outsb push or shll cmp jnp or addl fdivr cwtl dec xchg sbb cmc sub or sar dec dec loopne sbb outsl xchg push sbb cmp jge hlt ljmp sub fistpll push dec adc xchg das ret addr16 call ds adc fidivr mov mov xchg xlat ljmp pop sub clc sub aam inc gs sub mov jge div decb addr16 pop push add mov mov add lret addr16 adc int3 rclb outsl (bad) mov test (bad) xor dec test mov pusha pop ret xor loope fdivrs cmpsb das mov in enter in mov (bad) pop mov imul sbb stos das xlat inc pmaxsw pop ja add and rcll lods xchg jp inc jne stc out xchg add bound pop push pop ja xlat mov lods cwtl subb cmp in mov mov test mov stos mov call in cs lods push adc add mov movl jmp loope (bad) dec fwait popa mov dec mov mov jge mov popl xchg xchg daa xlat popa mov fbstp mov mov sarl in adcl cmp addr16 and cs dec or jmp inc push push lods lds outsb stc test sub scas (bad) andl in aas mov lret add bound xchg sub mov inc arpl jl inc outsb inc (bad) push je icebp das ja fild cmp out adc sbbl xchg jnp imul cwtl cmp jmp je mov or movsb out sub mov lret gs nop adc (bad) mov jg push adc repnz push popa (bad) repz jo xor mov pop xor shrl cmpb inc popf imul mov push add mov jmp leave lahf dec in inc fistp movsb and pushf test test sahf int inc xchg or dec pop imul incb ja scas pop dec mov test push cmc mov int3 mov cltd fwait push xchg add into je ret adc cs mov shll xchg xchg fs inc and jo mov cld mov xor cli inc mov adc div cli and adc xchg int3 movsb sbb xchg test mov loopne pop pusha and dec mov dec mov fs pop jnp addr16 jmp xchg insl jne pop xchg mov pop mov movsb scas dec addr16 cmpsb repz enter std push pop movb int jb dec and cmp mov ljmp rcrl sub inc mov mov fisubrl addr16 idivl or test dec sbb xor push inc jecxz add popf (bad) inc pusha fstpt sti (bad) incb mov or lret loopne push jbe aaa pop push (bad) xchg pop lcall dec ljmp leave inc add dec mov mov (bad) mov add test sarb mov test orl repz sbb push add xor pop cltd popa mov clc mov mov jecxz int ja not cmc movb insb stc outsb std pop in loope pop or fidivr inc call jne push pop lods imul cmp mov scas call and cld and inc mov gs imul push sub pop push cmp inc fs jmp roll clc cli sub inc ja inc pop push hlt fildl (bad) mov test sti xchg xor loop xchg bound in outsl jno das or push dec jmp pop in xlat loope test in cmpsb icebp bound nop adc jle dec jecxz fdivr sarb or inc loopne lea (bad) jmp pop sub jbe adc push pop lcall lds push call jmp push cmpsb sbb lret int3 (bad) lret jl mov jecxz push dec orl fistl xchg in jge xor rcll pop xchg mov cld mov movsl add movsl inc aam cmp push dec mov push adc cmp test cli fist negl loop cmp jns sahf adc inc push inc stos fucomp xlat mov mov pop das arpl loope xchg xchg cltd xchg popa inc mov loope enter xchg cli jbe pop lret sbb out adcb fwait clc pushl movl fisubl push cwtl dec notl loop cmp adc adc dec popf aas add adc movups pop clc sbb sahf ficom pop jg sarl insl jecxz dec das dec sbb adc pop in in jae dec lock aaa jo rclb outsl pop scas jmp jbe nop xchg in das out add in push insb mov outsl dec or jp lcall jp sbb mov ficomp inc cmp das (bad) lods push (bad) dec jge call sti mov cli int add add lret loope into jnp cwtl adc clc sbb jecxz push cld mov sbb push xor (bad) mov test je adc sysenter xor push and mov add xor dec xor dec pop aaa xchg jne imul cmpsl xor jge cmpsb mov or pusha xor clc sti cli push adc lret lahf cwtl repz aam (bad) icebp jmp insb add mov jnp stos mov outsl addr16 sub mov sub incl cld in sbb xchg sub mov scas sti add and pop mov mov ret pop adc aad popa xchg call in imul jns jae xor jnp xlat jge adc ret pop mov je fs mov lret hlt scas dec sbb pop sbb fnstcw and inc sti xor add and adc lods xor call gs push in fnstcw test js popf rcrb rcrl jns inc negl ret mov inc xor mov sub dec jge pop xchg lss fnstsw pop xchg aam cmp mov pop pop sub push mov jae (bad) xchg mov test lcall lods mov test add push aad mov int3 pusha dec xlat sub or mov (bad) jnp add mov xchg sbb cld jno mov mov xlat jp pop jae xor pop add sti in ret (bad) dec inc push jp inc test cld imul sub push imul jns fidivl repnz sbb icebp lahf or cmc mov dec icebp mov cmp in push pop sub loopne mov bound xchg int out push in push sub sbb mov xchg stos stos jnp ds aam into sub test xor inc adc aam daa push or mov sbb std nop push ret mov inc cmpl mov testb sbbl out xchg lods scas or push aaa cld or mov push loop movsl aaa ss add jae loop pop sti (bad) inc pop pop add mov or pop popf scas push dec movsl rorl mov inc adc sbb dec mov jns fstpt roll shl (bad) xchg dec jbe pop add pop mov ljmp dec dec pop pop lahf push dec mov cmp pop (bad) mov imul mov xor mov add or jge (bad) pop cltd pop xchg xor pop dec imul cmc testb (bad) xor cld xchg into test add inc mov adc cli fs xor fwait decb lods jnp cltd fs test cmp push das jne mov out push rcrl popa push popf xlat repz sar bound mov mov adc int3 xchg sub test in aad (bad) loope jmp imul cld mov out push mov (bad) cmc push and mov or or jmp push fildl cmc sbb pop xor leave outsl jne pushf xor and icebp imul and lods sbb cmp stos or sbb mov jb mov sahf xchg test ljmp adc add xchg mov je xor jns inc sbb fdivrs pop iret sbb adc push ljmp (bad) jnp mov div jno mov stc pop aam mov test xchg mov ljmp sbb mov (bad) imul sub je mov cld sbb (bad) add inc lcall sub jl sahf stos (bad) icebp jecxz pop and pop or lods std es in xor cmp add fsubrs lcall pushf cmc cmpsb xor push rolb and lds aad cmpsb inc inc test cmp push mov dec hlt cltd mov push cltd jg (bad) cmc inc mov jecxz ret scas xor mov or push test pop push repnz (bad) mov dec fdivrp inc data16 xchg xchg jmp divb jecxz scas nop ljmp pushf (bad) jge andl scas xchg stc les nop adc cmp pop inc mov iret sbb gs imul pusha mov inc stos jp xchg mov out daa mov (bad) add add loope popf cmp test or mull pop daa mov inc fstpl (bad) int3 pop gs pop push ja xlat mov mov addl or loop push or les ljmp enter (bad) push mov test sub xor nop xlat xchg and pop and push test mov (bad) cli loopne,pn (bad) and movsl (bad) mov out scas dec or rolb pushf mov insl loope inc push push sbb adc cmpsb pop inc sbb adc pusha iret lret (bad) xor push std pushf mov lock mov jnp jae test les add rorl pop (bad) outsl test pop xchg pop pop inc lret jne mov cmp cmpsb push cmp mov cmp sbb loopne xchg jbe ja (bad) mov xchg cmp push stos inc jmp sarl loop jns mov std movsl ja inc aad and cmp repz push cmpsb lods sub (bad) mov cltd dec iret aaa mov into push xchg mov xor xchg dec pop cmp cmc (bad) mov inc ret mov xchg subl mov xlat push fsubrs mov dec (bad) lcall inc es add je lock jbe add or and pusha mov roll dec inc inc mov frstor inc xchg inc mov push jge lods (bad) in xor aam push bound pop dec cmp push mov dec (bad) rorl cmp xor loope mov pop or negl out lock mov jnp test cmp data16 test lods inc lret (bad) mov jno mov ljmp mov pop and popa sbb mov lret ds and ja fcmovne jbe push rclb add movsb dec sbb or adc loop xchg jg pop cmp dec int3 sbb (bad) stos aaa and (bad) stos cmpsb adc outsb fs fisub int3 loop cmp inc mov xchg ds adc add lods xchg aaa movb movsl or mov dec and xchg sarl nop cmp xor inc xchg cmpsb (bad) jle push jle mull popf mov cld mov cld jnp jne inc jp inc cli pop je stc sahf pop cli dec dec xchg dec cmp daa roll jecxz dec sti push jmp shrl data16 fiaddl aaa hlt iret push pop scas dec push (bad) loopne dec add or aam movsb jp mov shlb or push xchg stos mov scas lahf clc mov and mov xchg adc adc sbb inc stc lock mov jg sub jle adc jno fisubr xlat xchg sti (bad) js in jne push mov (bad) (bad) mov daa dec loope jae ficompl jmp stos data16 mov sarb icebp cmpsb and sbbl sbb jge add pop add icebp in and jg pop add rcrl lcall xchg and mov jne push mov mov mov test and sbb pop (bad) in fnclex xchg fnsave mov inc sub sbb cmpsb out outsb dec fcoml lahf jle ss add and pushf jbe jnp xor pop lods enter enter enter and scas test jb loope ret xchg mov xor adcb or ja jb dec arpl decb add lahf cli fdivr (bad) mov dec add pop mov cltd ss test jge int xchg popa xor rcr push icebp mov insl (bad) mov add push outsb cmc mov lods sub xchg mov mov sub sbb adc sub roll lcall mov daa cmp negb or pushf push pop call mov inc xchg loop xlat adc ret pop bound in bound pusha xchg sbb inc (bad) jmp dec sbb mov jge inc nop sbb sahf mov int pop sbb jge add jp icebp cmpsl ja ss xor shrb out mov dec test mov cltd inc sbb xchg pop stos mov xor je out imul mov mov ljmp mov push int lret stc ret cmc and dec pop sbb lahf hlt call (bad) or mov pop leave movsb push negl mov add jge xorl call idiv subb aaa sbb in jnp aaa xchg (bad) jo shll jnp mov dec mov sub fimul jmp inc stos faddp rcrl lea add xor (bad) sbb xorl jecxz stos mov xchg push push aas bound add pop out notl icebp jnp je jo mov repz mov push push fdivl xchg scas stc in ret into xor pop roll fadd outsb and jmp scas scas mov mov and pop lret stos loopne jbe gs stos notb mov push add adc (bad) sbb mov test and insl lcall arpl adc call ljmp and mov loope jno pushf addr16 inc inc cmc pusha mov out ljmp jo pop pop psubusw das push sti or inc loop push js xchg mov loop imul aad dec jg (bad) int mov or pop add bound jle js lods cmp test pop cmp adc adc inc (bad) adc mov sti mov aaa fs movsl decl cli mov cs mov fwait imul sub iret imull pop sti xor popa testb es je (bad) icebp mov push xor int3 cltd shl jg pop loop les jl cmpsb dec (bad) addr16 lds mov inc or (bad) cmpsb clc out mov push lcall jmp mov dec add call lret lahf hlt mov add leave (bad) mov (bad) insb shll cmp je mov mov inc cld test inc cmp jb test pop mov clc mov sub invd scas sahf ret test lods imul in aaa adc xchg mov aaa fs jno xchg sahf stos pop scas std dec cli or fwait clc mov mov (bad) les dec loope (bad) cmpsl and adc scas lcall sub xor jne in clc inc repz (bad) (bad) xchg lcall jae xchg cli insl jg fldenv leave mov mov xchg in mov or xchg rolb push (bad) jno dec and sub fcmovnu inc rorb loopne fadds popa scas cmp dec in aas hlt fmul inc (bad) hlt mov (bad) in rcr cmp je out xlat xchg push dec xor jbe aam push addr16 mov jge jge pop or sbb fcmovne int outsb imul scas jp in inc mov jo mov adc xor mov pop fmull push or loopne inc ror insb lcall mov aaa dec push ja les cmc pop je imul scas std (bad) jecxz sbb mov int3 sti cmc jns popf dec clc push xchg add ljmp in xchg pop aam ficom inc fstpl mov jbe bound cmp push in aad (bad) mov mov xor xor pop stos push inc loop push daa ret fnstcw popa mov lcall dec insl jae dec push out push add jbe std push lods decb ret adc rcrl dec (bad) loopne jge add jle adc xor xchg push or and pop das arpl cmp sub adc mov ficomp xchg sbb stos xchg lea xlat (bad) mov cmc or xor push or and cmpsb (bad) inc rcl imul and cmc sub (bad) sti push and in jo add mov xchg mov mov addl dec daa shlb aas push insw jne and aad es cmp lret ljmp js in cltd sahf mov in pop test (bad) pop jle jg es xchg outsl sub dec into cmpb cmc sub movsb mov inc int3 pop xor inc lcall and loop push push mov adc in adc jg mov mov aad xor and jge outsb xor sub push and cmp inc js cmp mov lods mov mov rcrl stos mov out mov cmp cmpl jp inc ret push (bad) lock inc adc out add mov fisttpl mov push or mov push mov add shufps sbb mov xor xchg lret jle and mov dec cmp lret test fdivrp jnp dec mov scas push mov lret lods mov (bad) xchg pop int3 mov pop sub sub cmp sub sti sub sub aaa jg adc mov fwait lds xor ss pop mov xchg movsl insl movsb add fwait xor push mov mov loop jmp dec pop in pop cmpsb xor mov push (bad) adc into xor lahf add in shrb xchg push (bad) repz je mov push inc aam mov jl xor (bad) movsl mov jb rorb outsb or pop lret stos pop repz mov call and and push xlat dec idiv hlt (bad) int3 dec cli mov mov movsb cmp mov xor mov pop jge xchg jecxz cmpsb sub dec push pop and xor lods cmp push adc repz add aam inc in pop and int3 sub cmp push inc jnp xor cmp test fwait dec movsl loop dec js pop add je adc mov stos cs into sub sarl push dec inc mov dec mov lret movsb push in add in cld mov jp mov (bad) mov rcll lock scas ds xchg xlat in cli pop fdivr ja mov sbb (bad) dec mov mov (bad) or movhlps repz and pop jbe sbb inc das and out xor xchg fistp out jle pushf or sub sub or ficomp leave cs sub outsl je std mov xchg mov mov mov and cmpb cmc popa push sub mov and and jnp or (bad) dec das or and or sbb rorb xchg jb and xchg mov inc or sbb mov xchg lret mov mov push sbb ret xchg sub sbb jns xor movsb inc es mov sub popf lret inc mov mov cmpsl pop mov inc jbe pop mov push adc (bad) jne in roll inc dec hlt mov adc cmc fbstp pop js xchg popf mov mov xor movl into sub (bad) aaa out insl hlt lea mov push (bad) das push adc mul insb add je pop jl mov add add mov mov jns insb cmp mov fsubs jg fidivl mov adc pop insl mov aaa lods movsb sub data16 inc or mov aaa add jbe sahf push inc scas cwtl imul jae mov inc aam fldenv jl mov and shll mov push sbb lret xchg loop stos imul sbb adc packssdw aad pop loope,pt mov bnd mov inc mov xchg mov mov or out leave add and dec mov cld (bad) lahf shlb div lods cmp jmp das das jmp jo gs sbb xchg enter and cmpsl jmp or mov xor jg mov add pop fimul out add mov xchg dec jns cld test aam das out aaa in pop mov (bad) je jge scas cli add add lret movsl mov xor sbb nop pop mov cltd fnstsw xor push clc xchg imul pusha xchg adc push fstps call mov hlt scas pop ret (bad) ja ret pop inc ss mov test rcl xor out call scas cmpsl adc mov xchg or sahf sbb cmp fnstsw mov cmc ja pop mov out pop inc pop lds out mov sahf and mov mov pop mov data16 test xchg sub movsl push mov or stc (bad) aam (bad) lcall mov mov pop aaa jmp jl push xchg outsl sbb push aas dec popa lret ficomp call scas mov cmpsb or mov sbb test push aam aad in aas mov pop sbb in mov (bad) mov jnp cmp lods lret in (bad) pop mov xacquire loop fistl xorb ja adc dec in int3 mov mov sbb push aaa stos movsl rcll fdivrs rol mov clc lret or (bad) stos fisub aam or dec dec out mov cmpsb push fwait loopne jmp stc mov nop or and push mov xchg and bound rorl and in and test cmp add fildl leave add fistl outsl (bad) xchg test mov or xchg sub fisub sbb sbb repz imul aam inc xchg xchg (bad) mov adc xchg fsub gs mov mov ss or pop inc out push movsl xchg loop repz fwait call dec sbbl adc movsl dec scas daa and shlb cmp lods mov push (bad) imul test xor (bad) fdivs cmp push push cwtl mov adc mov jns xor call mov mov push mov scas repz jp xchg add push add xor add push sbb push lcall xor ret sbb dec xchg or cmp xchg pop scas adcl fisttpl mov push xorl (bad) mov pop pop leave lret inc or test cwtl ja (bad) inc cmp push fistpl cld xor outsl frstor pushw lret inc rorl jle les or or lods jo ret jb mov hlt inc pop sbbl faddl pop pusha in std outsl popa jg out cli pushf fldcw mov lahf fidiv fnstcw push test adc xchg sbb sarl call gs push cmp movl dec adc je mov outsb movsb pop stos ljmp mov iret push jnp roll push or aam lock xchg call iret add stos fstps adc iret aam dec int ja jo mov loop cmovle loop popa lcall jns push jns into mov sbb push out ror sbb dec mov or mov jl pop (bad) stc mov fstpt mov jp cmp mov cs cmp mov adc mov les add jecxz mov or in gs (bad) dec mov fs movsl gs or shlb data16 pop test fs mov icebp lock jecxz sbb jae add loopne inc sbb xchg fwait je pop mov shrl fxch ret jecxz pop push rol stos xor jle cmp xchg pop sbb mov out arpl xorl dec mov sub mov out popf xchg in dec push mov js lods mov fdivrl add jbe pop mov call mov lds adc into xor and fwait in popf gs cmp test jmp std lds jmp push xchg fldcw rorb jle and ss cld jle inc push fwait imul imul in add xor movsb cmp dec cli jge inc mov push add adc mov pop stc jle mov xchg inc int pop jecxz stc jns ss sbb sbb dec cmpsl sub je push xor jne cmp cltd ret lods leave mov and ds (bad) mov lods adc lret imul outsl cs xor and jnp or cmpsl or push mov mov lods sti lods jecxz call jg (bad) mov arpl and mov xor add cmp fcom push cli cmpsl dec stos es cli cs sarb dec fwait xchg (bad) (bad) nop pushl pop sub imul mov aaa fs lahf inc lret aam adc lcall outsl dec (bad) cmpsb mov popl push insb mov mov data16 add mov cmp inc (bad) jp sbb mov and sahf lods sahf (bad) sbb jb (bad) xor movsb popa push stos pop (bad) xor pop outsl adc dec (bad) lcall xchg ret mov cmp jnp inc xor test mov in dec ss mov lcall add add sbb ficomp dec sub inc mov inc mov jae cmpsl jno jl inc dec subb mov sbb jae fnstcw out mov scas push add inc jmp insl jae jbe pop loope xchg cmpsb in pop mov fdivr and jg sub mov adc (bad) xor push mov jmp pop xchg cltd in sub mov push inc xchg cmpsl std loopne mov sbb test adc pop (bad) xchg (bad) cltd jg mov cmp in jno lcall cld mov arpl (bad) push inc ffree movsl andl lret ficoml movsl pop xor ret js cltd icebp scas pop leave cmc push mov loope push jnp cmpl test sub mov add repz push mov je in mov and lret movsb sbb stos xchg mov into sti rol repnz sti movsb sbb sbb mov je cmpsl pop enter cmp int3 push (bad) js adcl xchg xlat ret mov aas fildll pop pop aas mov mov inc out cmpsl scas int cli in lret cmp into nop imul pop out xor mov cmpsb mov scas cmp push aad in and in fistp std adc test andb out into lods jnp sub mov (bad) lret or or add or loope mov mov inc out cmpsl ss lcall push shr iret or imul add dec mov mov mov mov xor xchg cmp fsubs xchg sbb push fisub scas ljmp scas popf aas (bad) push std mov test jae push shlb jmp adc push popa sbb imul add jp lahf je aad xlat loope stc mov xchg mov jp ret jnp stos jno dec xchg (bad) xchg mov es test test xor adc push pop bound jb mov aas mov int3 fildll pop jge (bad) cltd out mov pop bound in rcrl aaa movsb lock mov orb jmp pop cmp xor xlat pop push (bad) imul inc mov dec push popa mov jno push dec out mov cwtl cmc mov loopne or leave cmpsl mov enter stos mov jne sub and cmp popa mov int xchg cmpsb xchg add icebp ja mov ja lcall fnstenv sbb scas dec dec int3 test mov jmp push push xchg jnp sub in shll sbbb popa or (bad) or xchg jo or scas popf xchg and and (bad) mov (bad) push rorb inc fcmove callw mov icebp fnstsw idivl sub outsb push in cli xchg cli and outsl sbb pushl jo adc out mov cli or (bad) aaa popa popa xor inc stos in inc jecxz mov outsb mov mov hlt (bad) hlt xor mov insl push fdivrl mov in idivl or jge xchg and pop or mov push cmpb in sarb mov pop test pusha movsl outsb and fdivs popa lds jg aaa mov mov lcall (bad) loop mov xor (bad) dec movsl jo inc inc fnsave fisubl ja arpl aad inc nop scas inc xchg mov or arpl scas jns jne aam js jmp cmp cld (bad) cld psadbw pushf mov lcall push lock rorl nop dec adc ljmp dec or fs adc cmc shlb mov add sbb dec push dec mov fidivl xchg cmpsb dec fcomip add push lea cmpsl jne sahf sbb aaa leave outsl mov dec mov loop cmp inc cmc jo mov stos outsb fs jae div mov mov je push mov mov lds push mov add ret negw cltd inc sub stos jmp and js,pn test xchg xchg mov push cmp and xor cmp inc negl mov cs cmpsb fldt xchg imul pop pop jo push cmpl stc cmp mov imul dec cli jmp stos mov lock out fxch mov jge mov clc daa mov repnz pusha mov adc pop inc mov jg inc ret pushf ficomp cmp cwtl inc ret push fstl (bad) es adc data16 movsl in stos iret je (bad) ljmp sub sub xchg mov pushf push jno sbb add xchg int loope mov pop xor cmp aam stc lret daa cltd pop out lret add lods jmp xchg sbb fsubrl mov add popf push mov cwtl dec stc fcomi sbb sbb insb ret mov lahf cmpsb les inc dec fwait pop aas or mov xchg insb cmp pop pop push push mov adc cmp mov lods xchg bound jno leave jmp xor mov mov aaa lods jmp inc or dec mov cli dec lods leave inc clc pop cltd subl rorb sbb jge adc push lcall or imul inc push in les movsb mov mov je lods popa xchg adcl sbb cmpsb pop scas inc mov loope push add mov ret dec and mov mov inc mov leave ds jns stos cli int cwtl sti in xlat jns xor jp pop and je jbe popa pop (bad) movsb and xor pop sub in dec jecxz test jmp outsl mov je inc lods lret and jg arpl cmc add pop dec pop push rdmsr cmp jg repz arpl std mov jmp or add outsb ss pop mov jg adc jo add insl mov outsb jo (bad) lea mov pop or or push (bad) sub popf scas or repnz outsl add in test sar loopne push (bad) je xchg pop fsubrl xchg aad mov dec mov pop repnz fiaddl mov push push jg (bad) faddp shr jo mov inc cmpl jp mov sbb movl add pop aas pop mov je xchg mov popf aam ret xchg cmpsl sub xchg pop clc mov mov sbb insl xor stos add and dec das push inc xchg cld mov xor push and lret add jmp sar sub je stc or xchg mov push fstpl mov sub mov lcall jbe ret jg xlat and outsb arpl mov arpl jbe xchg jg sub fwait xchg hlt mov jo mov movsb add add dec in scas pop ja ds xlat sahf outsl (bad) fdivr cltd dec fistp add popa icebp js sahf and or sbb inc or cmpsl adc pop inc mov std xor mov int3 mov pop xchg loop daa add mov inc pop pop fcom mov jl imul fisttpl popa ds adc or in jo nop cmpl idivl insb jnp or jle std cmp pop push or sub xor dec jge ret or stos cmpsl daa cmp les mov xchg adc adc hlt lahf dec lcall sub test dec gs jge call in lcall add dec dec xchg or sbb outsb mov cmp in mov push xchg lcall mov fucomip inc xchg jbe sbb pop notb mov adc loopne movsl xchg add mov fs xor inc xor xchg mov cs je xchg lds xor cvtpi2ps out in push pushf add arpl out cmpsb dec dec push mov mov leave cs mov popa push test push mov cmp dec dec stos outsl imulb mov cwtl out out das outsl push xchg sbb xchg mov cmp dec and adc sub mov daa insb div hlt push into mov bnd mov pop sbb jecxz popf sub dec roll sbb add es lods xchg (bad) lods mov outsl xchg ficoml js,pn mov sbb jno incl int cld lret cmpsl cmp scas test je (bad) fs pop mov and xchg imul jnp lods into and adc insl outsl js push jnp sbb dec call leave cmpl mov pop movsl xor add pop mov adc inc das pop mov adc jg das scas icebp push ljmp scas mov das add aas or dec fdivrl fwait outsl push leave mov int das or lea movsb hlt insl push or mov add test xor jl xor mov (bad) and sub pop ret mov js scas xor (bad) xchg arpl sbb test sbb or (bad) xchg lret sahf popl mov sub sub sub stos idivl mov in stos inc push cs push xchg arpl cmpsl xchg push outsl pushf lds lds in inc mov pop inc sub sub mov aas xor int3 fsubrs push imul fistl call ljmp xchg scas daa adc out (bad) sbb div xchg and inc jge add jno inc push aad aaa stos pop xor movsl push add pop test inc ljmp imull xchg (bad) xchg int ret jnp pop outsl mov push mov jno adc push in push fs iret ja inc xchg dec test or imul dec dec dec aaa or adc repz into jno lds negb xlat data16 pop inc jae out loopne ficoml mov movsl sub imul push out bswap xchg call jae lcall sbb iret mov aam mov leave add mov cmp add inc loope mov mov dec subl (bad) pusha ljmp (bad) ja fcom icebp scas and lret xchg xchg imul es and popa das push pop or (bad) xchg jnp dec push pop adc les clc xor xchg mov add (bad) aad out lods or sbb push push (bad) push lods mov pop pop call jno push push loop add inc iret jo push add inc das cmp dec test lret push xchg test roll cli fstl iret fistl scas xchg pop push (bad) mov push outsl pop scas test test mov push add test outsb into mov mov loop mov ret mov mov jnp lret jge mov fistpl popl cld outsb imul pushf mov pop xchg shr xchg mov mov push push hlt les inc or sarl inc sub mov xchg addb mov adc arpl push inc push scas out std into in jecxz sub pushf push add add in test shr push pop mov push jl adc out xor push add loope (bad) lret sbb push movsb xor jmp cmp push sub rol fwait gs cs sub or or gs pop movsb out mov xchg add movb ja or jl (bad) loope insl push mul cmp in sbb cmp lret xchg xchg mov ss scas dec sub lcall jb fnstcw cmp push dec mov inc add cltd (bad) in xor loope mov ffree push xor in and outsb mov repz mov cmp add call inc mov cmp mov dec test jb js mov xor mov (bad) dec lahf mov mulb push in scas mov scas push xchg push xchg or mov pop fs cwtl mov pop mov rol mov stos std rcr inc dec fbld fisubrl mov inc push neg mov xchg hlt push call pop fstl in lds push jnp adc push pop test push adcl js movsb aam fdivrp push stc pop aas loope pop or jge int mov push loope pop cmpsb lods mov and or cltd xchg (bad) gs and orl popf cmp shlb sub add ljmp xchg or cmpsb imul sub mov divb mov stos and inc push sbb xor sub mov divl sub or addr16 lods xchg mov rcrl popa dec lock ret jne push sbb loope add push push push or and test and push dec or jecxz push or repz imul fistl or add int xchg cmp bound fidiv iret dec inc lcall push loop add mov ja or test pop vpsubsb push push sub inc sub sub pop cmp mov hlt iret repnz mov jle fs xor xor pop xor in xchg dec pop pop (bad) mov fdivp insl jmp mov jb push incl xchg idivb mov out sbb mov lret sbb mov sub jecxz (bad) stc fldcw dec push in mov cmp add push or lods jecxz (bad) jb dec arpl ss jmp out push inc or fstl inc daa cmp les xor mov add push adc cld add out (bad) jns adc or sahf clc mov add dec in inc movsl add pop sbb fwait mov mov mov out mov out mov stos (bad) repnz dec lds jo movsb mov add xor in (bad) cwtl (bad) mul imul xor fsubrl hlt pop adc cltd adcl push mov xchg lods roll ds addr16 loopne dec (bad) adc (bad) addr16 lret shll mov push test rol add push sub insb insl scas add inc mov jl xchg push test inc pop inc jmp pop pop cmpsb add jge xor into sbbl add push shll scas cli scas pop cli test ret imul rcrl mov xchg xor add pop out cmp push mov rclb out add clc stos nop add jno mov mov sub sbb and mov dec and lret (bad) fcompl push sub or mov das sbb pushf loop and scas repnz add cmpsb mov ret push dec mov (bad) mov aas in pop loop inc pop mov inc insl sahf imul lock and addr16 inc icebp cmp cmc mov cs notb lods or out add push cmp fmuls jl adc jmp in xchg mov or scas pop icebp push inc mov dec mov (bad) mov stc sub push sub dec push jg mov dec jge sub add imul xchg ds data16 mov in gs jle add popf std cmp pushf mov push fs sahf cmp pop sub popa mov nop dec jne scas std rclb aam roll add sub push stos out test sahf dec lret pop jg mov xchg xor cmc sub push mov xlat dec cmpsl jecxz add mov out sbb adc and add sti fs lret or dec xchg lahf mov std (bad) pop mov push xor mov cmp (bad) jge test jl inc sub mov add mov mov jbe fstl pop jno adc std jp ret cmp xchg dec (bad) loope and jecxz pop scas add stos cmp stc or dec mov lret mov movsb jb add mov popf rep shlb test and insl sub inc movsb cmp imul lret or std loope sub pop je add mov add mov cli pusha push loop clc dec es sahf push inc mov jno aaa js push test cs sbb adc mov popa adc sub in fcompl test fs sahf test push jbe inc clc mov xchg inc data16 inc mov sbb inc test sahf dec inc adc lds mov (bad) jecxz sub xor pop dec fsub test leave pop test imul lock loope lods xchg ljmp jmp cmp rcll inc pop cltd jl jo mov dec pop mov ret (bad) outsb mov jg lretw jg push fwait lcall adc (bad) mov mov ja rorl push loop ja inc add sahf subl cmp or xor stos mov pop fsubrs dec adcl mov dec mov aaa inc adc ljmp xchg aad std jns jmp sub cld mov xorl or mov lea loope out roll push inc shrb jae jge rol xchg roll aam test xor jne add enter xchg daa push dec dec dec ljmp mov xchg (bad) adc in push push into jb sub xor mov sbb pop xor adc cli es arpl and in cmp jns push xchg inc dec sub pop stos mov pop mov push shll das movsl mov scas jle lcall mov rorb pop fsubrs adc mov mov pop in jp pop repnz pop mov and jne ljmp movsl ss inc nop std imul in dec mov fildl jb out mov mov cmpsb sbb lds lock add test es dec rcll inc mov inc out int mov enter sub scas and xchg xor mov pop dec jno pop fist cli out push pop jno inc hlt pmullw cmp mov push dec bound jnp lahf mov ret cmp mov pushf cmc fld shlb aam outsl inc pop dec test stos cs out movsb mov jnp daa mov add cmp aad leave pop sub mov scas lods cmp icebp cmpsb xor pop fnstenv inc mov lods or xor bound lods dec push decb sbb stos fstpt add test pop push mov mov in or add pop xchg dec sahf sub add lock or cmp std push call adc lock mov xchg inc int jl xchg out cmpsl and into add in inc mov or inc das sub fildl (bad) dec (bad) pop loope mov fidivrl movsb cmc std in mov lea or mov inc push push push pop adc ss sub jae lret cmp sub outsl push xchg outsb jnp insb push xor adc stos pop (bad) lret jmp (bad) sbb inc data16 je add cmp (bad) sub cmp lds xchg pop mov inc das cmpsb (bad) sti push clc jb sub xchg aam mov stos int3 movsl addr16 dec pusha sarl lock fldt cwtl aam sbb jb ljmp shlb imul adc pop cltd adc imul es xlat aad or lret fs xchg add mov lods std popf mov lret mov lcall movsl inc sti xchg repz fidivr adc push push fnsave stc xchg movsb mov fwait enter pop mov lret into mov in jo push adc jae cmp rcll xchg out or je rcrb jno lret mov sub fdivr mov cmp lcall xor test and xchg nop xchg pusha jo push xchg sbb cmp xor rcrl repz adc lret dec mov loope repz pop (bad) into inc outsl aaa into pushf int mov (bad) int lcall inc insb xchg les fs in pop jle lds pusha mov addl jae dec xor pop je and xchg out sbb and pop fisub movsb cmc fisubrl fisub push xchg xor add lcall xchg iret std sub inc adc shl (bad) pop sbb jno and inc iret push xchg jnp loope pop bound idivl cmpsb xor jmp mov pop fdivr shl cmpsb sub int dec pusha cmpl (bad) pusha mov outsl jecxz jecxz mov loope (bad) mov adc push std cld addl dec xchg lahf in daa lds ret add repnz pop pop call or lahf inc cmp pop and sub sbb mov cmp ret test adc push mov pop mov xchg int3 (bad) mov jg stos xchg adc (bad) call gs mov dec or pop mov fisubrl push xor sub sbb call loop rorl adc inc jmp nop or pop cli pop push cmp out pop lret mov test outsl in (bad) cmp rclb aaa mov add sbb pusha xchg scas add iret dec rcll std jnp std repz push jle lret ret jge sbb insb iret mov cli addb adc in enter inc clc fldl push mov orb mov sahf lahf pop mov enter adc or cmp xor sahf cwtl ret (bad) xor or pop fstpt xchg jbe jb jb mov push popa mov aas mov xchg rcr mov mov and jp fdiv jb test mov pop call and movsl fnstsw out adc ficoml inc lahf bound adc mov mov shlb icebp xchg (bad) xor movsb inc gs pop jg pop stc cltd (bad) xor test xchg mov pop and xchg arpl lret imul push in sbb fdivl out imul popf dec xchg pop mov mov mov cmpsl adc lcall (bad) aaa (bad) into test pop pushf xchg dec loop (bad) (bad) imul aam jbe fs mov cs test iret and imul ss mov mov cmpsb out jnp gs out mov lcall mov cmp xchg test pop fdivs sub lret sub add mov inc pop les mov adc cmp call stos jle sti mov (bad) js jecxz xchg je xlat xor add xor or lret pop pop (bad) mov lcall adc jl adc xchg sbb test mov fwait insl sub scas mov xchg roll jmp xlat pop repz inc insb mov xor mov cmp pop sbb dec sub repnz mov mov and mov (bad) pop xchg xchg lret out mov negl sub addl pop mov xlat arpl mov and dec dec pop mov incl or into pop jmp roll xchg imul sub jl gs std push xchg push into cmp notl pop lahf cmp shlb stos lret xchg mov cli adc call das and and and and add adc or bound xor mov lods push fmul addr16 in test jnp inc ljmp lcall fisttpll push loop js or cmc (bad) in jo sahf vmaskmovdqu jmp sti mov imul adc sbb xor lds dec cmpsl xchg aaa or jle imul mov xor pop xchg out imul push cli arpl stos adc push mov mov adc lret dec mov mov mov stos inc icebp push cwtl (bad) adc sbb (bad) mov test jecxz shl test subl mov mov (bad) jmp and ret (bad) jno popf or sbb dec data16 pushf (bad) lret (bad) xlat sub out jl imul loopne (bad) stos fstl or xlat fstps je loop mov into fucomi xchg subl adcl xchg or dec pop lret sbb in cli mov mov jns cwtl loop jnp lcall push loop lods imul push stos dec ret notl pop fnsave test mov mov loopne jns lcall xchg addr16 loop jmp mov or dec sarb mov cld test mov pop jns jl rclb dec inc adc call cld mov fidiv push insb mov enter mov mov stos arpl leave xor pop std js out mov stc fistl repnz into rorl incl cmp pop outsl int aas mov xchg push pop cmp jg sub push adc fwait test lcall hlt dec outsl test jg adc push scas push sbb pop fidivrl cmp pop movsl xchg dec in fmull mov inc mov mov push xchg int inc test dec mov (bad) sbb popf ss mov popa test out call ss fildl jb out nop in pop loop into test cs nop jg je mov ret push mov sub repz aas dec int jb fs pop sub les push inc jbe lcall loope mov xlat scas jmp std les sub or test inc (bad) pop fnsave xor cmc lds push xchg adc inc pop addr16 clc mov jb mov hlt xchg lret sarl mov test (bad) div je test mov mov push adc std cmp sarb ret pop lock jns ret test fisubr fwait (bad) jne push (bad) imul cmpsb call bound arpl ds cmp stos movsb push jmp fbstp xchg lret push push push xor add data16 (bad) pop cmpsb int3 and gs jo repnz repz pop (bad) jae dec addr16 call dec push xlat mov std cmp jae adc dec add int push jmp xor je push ror adc aad jp pop jo xchg mov test pop push lock xlat int pop xor mov insb dec lret mov jle adc mov outsb mov ds adc ror jecxz aam mov xchg pop jno mov (bad) cmp jns int3 jmp repz cs dec jnp popf roll mov lret lea cmpsb loop or loop ljmp jo (bad) dec pop insb sbb jns jle xchg inc in sahf ficoml dec outsl adc lahf icebp inc notb pop ret aam xchg hlt pop sahf mov inc in lahf cs pop addl mov cmpsb push cmp xchg loop loopne dec mov xchg sbb scas sub pop mov insb fwait cwtl xchg pop cmp push adc pop cmp (bad) fdivr sub cwtl jae jo mov xchg xor gs loopne leave push int in fdiv ds and js popf and int stos insb cmp out xchg mov xchg cmp js fcoms add repz jnp fnsave insl dec scas xchg data16 jecxz and test mov or jns (bad) mov test mov push mov jp hlt cmpsl mov aaa pop dec (bad) rolb dec or jno pop ljmp lret sbb loop addr16 mov sti adc push mov js mov mov icebp inc jge and mov xor add repnz fnstenv lods pop xchg addl gs pop and mov add mov lods cmpb push sub lds jg xchg mov pushl jae cld dec sub lcall xchg xchg mull mul push and fnsetpm(287 jnp or pop sub aas sub add and fwait jae add adc cmpsb sub sub mov fiaddl (bad) cmpl xchg subl cli lret rcll pop mov mov mov add pop jmp push xchg fbstp ret or and adc mov test (bad) sub adc dec repnz lret lret sbbl insl mov pop mull addr16 sbbb xchg (bad) push (bad) rorl cld sbb lret arpl ja ss ljmp adc jecxz jb stos insl test push pop aad pop mov (bad) imul xchg dec pop imul leave push jne nop (bad) dec xchg xchg inc bound sti or jl loope adc push sbb imull xchg (bad) hlt (bad) jb add (bad) mov out dec subl data16 aaa stos sti and sbbl sbb lods scas loopne out into fnstsw shrl cmc lds fildll fist cmp inc fild lods cwtl xchg add shl cmp mov movsl (bad) lods push jge ss das jge add flds cmp test xchg lock jge jb nop nop cwtl xchg mov inc in int stc push les stos rcll scas fidivl gs pusha dec push mov mov js sub (bad) sbb jp pushf aam sbb jecxz aam push pop cld movaps jg icebp push jg push cld (bad) dec (bad) adc adc push ja leave je mov mov lock jo cltd data16 adc add adc out xor es mov mov lea push inc mov push mov outsl test lcall push cltd cmp or sarl xchg sbb (bad) jle inc cmp push aaa (bad) push pop ror addr16 jnp inc mov xlat mov mov por es bound xchg inc mov sbb sahf rcll (bad) sbb stc stos inc out jno push xor dec outsl call add pushf in js shr or adc test jg fdivp xchg xor add aaa mov rolb and pop sarl adc adc push pop ret sbb jp fist push push fnstenv xor int mov ljmp idivl xor stos ds into push scas fdivl mov pop js imul test fnstenv add jmp cmp pusha ret inc ss movsl inc outsl dec (bad) xchg (bad) mov inc out pop icebp cmp mov adc icebp rcrl xchg push pop push sahf jl inc dec loopne jno mov dec (bad) cmpsb dec mov xchg inc aam daa dec push mov sub pop and adc pop sti and jae loop xchg cmp ret jae mov stc decl mov fdecstp push iret jbe enter inc ljmp cltd push fldt fnsave sti xlat cltd (bad) (bad) mov xchg jp cltd fs out test lea cmp rcrb sti sub jle call and out xor int fs lea out inc cwtl cmp ficom mov jg ret inc cmpsl or add int3 cmp sbb cmpsl adc sbb adc lock pushf adc fnstsw scas pop pop sub js add sti lret or adc movb (bad) jae dec or add or addr16 xchg cmp pop jo inc call js icebp fistpll jno lods pop cld int jae inc push jbe imul jb dec push pop icebp lahf adc pshufw mov in cmp das lret pop and mov ljmp je lahf sti sub inc sbb pop inc pop jl mov pop jns mov sbb sbb jmp adc mov dec ss push fstpl adc clc mov inc jbe test pusha in xor pop dec xchg add sbb insb jecxz int jns jno jl leave jecxz pop jb jl xlat aad aam add arpl cmp cli mov mov movsl pop add iret insl hlt lods in dec sub int notl scas test add insl cmp mov lret ds std pop jge add sarl bound or pushf mov in push sti mov out cmpsb push push xchg dec mov pusha add fisubr sahf fnsave or pop les popf mov dec fsubrl test sub dec lret jg sti movsl stc xchg xor repnz insl pop cmp and pop sub pop add xchg inc jle lock fs mov sahf xchg roll sti arpl cmpsb and push jnp jne mov insb sbb loope fstps addl push xchg fmul mov sbb xor inc lret je add xor movsb pop xlat sahf data16 jg inc (bad) pop fyl2x arpl mov out icebp ja mov mov imul mov arpl inc data16 jl and xor jmp mov xchg (bad) insb outsl fcoms (bad) movsb dec adc inc in addb mov pop cmp adc or (bad) mov sub in stos sub sub jg mov arpl mov push mov ss mov int xchg push and jg or sbb xchg arpl push mov out cltd aaa lret leave push pop loope pop hlt and jle xchg ljmp dec dec mov (bad) adc cmp mov cmp pop hlt test push int fucom jmp jle scas aaa inc fldenv pop mov (bad) out mov sti mov pop mov bound test and int3 dec ret push xchg mov inc pop push push sub pop dec fnstsw inc cmpsl notl leave sub int pusha mov in dec sti dec outsb xcrypt-ofb cmpsl cs adc mov dec out insl (bad) das jp fucom mov (bad) popf inc cmpsl fildll leave lds add cltd scas in in and dec fwait xlat lods mov (bad) stos fwait inc subl add fisttpll je fdivrs dec cmpl test inc jns je inc cmc mov sbb movsl fnsave inc cmpsl das pusha lret sbb cmp in icebp cld pop fcomip int sub lcall push test ficomp inc cmpsl push arpl mov mov pop pop mov push repnz std mov jecxz push or or lods fldl inc and scas pop std jno mov imul lcall xor lret bound mov out iret shrb mov imul and (bad) mov mov ret movsl lret insb mov push cli xchg mov (bad) aaa mov into pause in bound (bad) push sub sarl jmp sub popf lret pop es fdivrp xchg lcall xchg dec lods sbb xchg rclb jge sahf divl int3 es mov mov scas adc cli xchg jb jo sub mov xchg in ja into xchg test jno dec cmpl sahf jmp movsb fcmovu sti cli xchg push jo bound sbbl enter aam jns notl dec imul clc in ret inc lret push and cmp xchg inc mov push (bad) sub or sarl fldcw test pop (bad) mov das dec xchg in test jle shll lret and inc pop xor cmpsb pop lock xchg fs xchg into testl sub push ret adc xor xchg adc push daa mov inc inc stos hlt add mov es pop sbb push sbb cmp inc pop lods ret or enter jmp pop and jge push or daa xchg mov cs inc arpl daa mov or dec mov in or loop jo popa mov stc push ja jbe hlt push in push je push into dec fnstsw bound and js cli call pop xchg inc mov or shrl (bad) lahf dec insl scas pop jl std dec jbe cmpsb ret mov add shl jecxz mov test (bad) fisubrl cmp mov xchg mov leave rolb cld int sbb xor cmp iret xchg ss mov mov pop loop adc cs fiaddl cmpsb mov sub add cld xchg (bad) insl frstor push mov fadd inc je lcall arpl (bad) jge push push je pusha or dec ljmp or sbb fadds mov movl mov hlt mov xchg or pop fcmovb and pusha std bswap std (bad) into push push push out xchg push jge mov jl mov mov pop mov repnz aas mov lret call js mov fidivr int inc xchg sub jle lods or mov dec rolb (bad) pushl (bad) push jecxz cmp stos pop jl pop and cmp push jne push roll mov mov sub jge xor aad mov mov (bad) sub loope lea iret movsl push lds call or pop sbb inc shlb mov ss fwait cmc pop ljmp mov jnp or lcall and jns jmp xchg adc mov out (bad) hlt add lock aad fwait dec adc popa hlt test mov in add inc mov cmp mov negb add mov and test cmp add cmp lahf pushf push jle ja out xor push and into push and add adc js out scas lret int3 xchg sbb xchg fndisi(8087 rcrb or out xchg mov dec mov fildll jo fnstcw bound jno ss pop fildl insb inc incb jmp mov imul (bad) sub xchg add loopne int push addl cwtl pop lcall in dec cwtl lds or xor in jb,pn inc clc jo pop mov insb mov subl dec mov jle mov in mov inc bound cld out jbe jp inc or loopne cwtl cli out sti mov call jecxz adc sbb rcr pop cmp popa sbb inc fwait xadd aam and mov push test fimull pop cltd dec ljmp enter cwtl inc xchg xor mov dec insb add insb in pop mov outsl add int3 xchg repnz lock sbb aad pop (bad) (bad) ja inc add sub sar (bad) pop inc dec mov jp sbb addr16 loope (bad) lds shrl sbb mov aaa ljmp mov jp dec mov mov test test lods sarb mov jno ret xchg data16 and lds fwait mov ret mov mov sahf movsl or inc push mov sbb mov fwait pushw mov inc or xchg cmc hlt mov dec pop xchg cltd lods inc lret fidiv cld jae addl aad push lahf mov loope pop mov test (bad) movsl scas rcl push sub bound adc mov jecxz dec sub add lahf pop enter test adc cmp fwait test mov loope dec dec mov test into mov hlt mov outsl add jg sahf jmp fcmovne sbb movsb out insb sysexit (bad) pop stos dec orl in dec inc call mov xchg mov test loop mov dec lea cltd popf adc pusha mov dec adc push and add movsb popf mov (bad) (bad) mov mov jg mov xor mov js stc adcl fsubp arpl movl dec or movsb jl cmp inc jb subl into xchg inc mov mov jns call hlt adc pop notb mov xchg outsl sbb xchg dec pushf popf rclb mov cmp movsb fiadd bound test in (bad) and jnp push mov lock jnp mov add lods inc pop js adc scas (bad) mov add xlat adc scas mov jae aas adc or inc cmpsl popl sti jns sarb xchg xchg leave dec xor xchg mov mov jae test mov cli lods inc lods lret movsb ficom pop orl xchg sbb push or je inc cmp idivl mov sbb or or mov add sarl lods or out stos hlt dec popa in sub (bad) mov adc mov adc out push repz jnp inc xchg out cmc enter in lret cmp loope inc data16 jnp aad jo push stc jecxz mov in mov mov clc rorl mov adc dec in stc popl and fs ja scas (bad) mov setp popa shrl add mov mov lods jbe cld test push push in xchg (bad) jp sbb mov jl test mov andl in mov push jo (bad) in nop push sti lods stos test je jns add stos aaa pusha inc sbb sti mov and xor mov adc in fdivs jne rsm lods rclb std fcmovnbe inc and movd pop inc lcall data16 lret aam rclb inc adc mov mov mov add dec (bad) movsl xor adc cmc adc pushf shlb and mov scas fiaddl or mov shl mov enter scas movsb stc jl adc inc lods aam pop dec popa in mov xchg incb mov movsb das int3 bound scas loopne imul jno sbb jnp push iret lods mov lea insb pop jns mov xor lret cltd stc jl in mov lods loop notl cmp mov pop fs push loope push push (bad) mov jle adc fs pusha idivb jns push xor ret fwait ret bound mov lcall lahf cmpsl jns mov jne mov cmp push js sub push mov loope cmp repnz outsl xor arpl push ror aam pop loopne addr16 dec lret jmp repz mov bound jecxz add cmc xchg push xchg imulb cmp addr16 leave out nop stc add test mov mov lods (bad) addr16 lret mov ret mov js add (bad) sub pop add cmp push inc pushf or repnz mov aad add jecxz test jae push je ss push pmaxub popa mov popf jb lcall dec dec adc adcl sub mov stos fsubrl inc hlt fstpl sbb cmp xor insb aam dec mov add mov in lret mov fs jp dec jae fiaddl xchg dec fist mov jae xchg mov mov dec dec lahf pushf mov inc imul jg sbbl adc cmc out in ljmp sbb mov xchg add ds lods in jecxz les adc ret mov fisttpl cmp cltd dec lea inc ja dec inc mov sub cmp adc cmp mov xor out popf push sbb jb shrl sub mov int mov mov adc gs push inc clc add bound cld int3 jo sub jb inc push cmpsb inc pop push arpl jmp or sub in xor add inc mov rorl (bad) mov jae int3 das ljmp adc (bad) mov fistpl movsl sbb cmp dec lods dec adc push cld loopne adc and stos mov gs cmpl insb and cltd jl inc in leave gs addl jmp js dec lods scas jnp loopne push scas loope aad imul adcl and pop jo or cmp sbb jb jns cmc (bad) lock xlat test jmp lods clc fdivs addb mov inc push pop stc test mov cmpsl enter lea jne cwtl lea xorl jno inc fdivl fldl decb shll addr16 sahf mov (bad) cmp pop inc out arpl mov push hlt mov ja jp outsb mov mov ja loope jbe negl lcall adc xor insl aaa rcrb jmp mov (bad) xor sub push outsb xor or fs (bad) cltd pop mov fistpl fildl dec xchg bound or cwtl mov mov enter xchg mov jecxz mov add fwait pusha daa mov rep out dec popf in cwtl mov pop push iret in fs daa push mov cmp fdiv (bad) (bad) or lret sub adc pop loope adc cld aas cmp iret cmpsl fcomps lods jl pop mov enter xchg cli outsl pop pop int mov sbb imulb xchg iret decb jne loop lcall (bad) call enter push or (bad) in xchg xor jns jge in stc or fbld je stos pop jbe dec popf fdecstp addr16 adc gs loop aad fisubrl hlt xor cld xchg call rcll mov sarb out push cld in cmp sub std jge jge jae xchg rorb ljmp mov pusha or (bad) out or icebp loopne loope jnp loop cmp lds jnp loope ja das movsb inc icebp ret in loope outsl (bad) roll adc (bad) mov mov scas (bad) push dec mov cmpsl adc pop mov ret sbb outsb adc xchg ffree pop jp cmpsb pop sub test mov xor dec lcall pop dec dec xor movsl je popa dec jo pop sbb xor popf incl insb push mov push stos dec pop test sub enter test push pop adc sub lds cld or fiaddl mov mov lods mov xchg jle mov push cld inc jmp push aam cmp mov dec andl ret shlb js push jl popf cld cmp imul sbb adc daa (bad) std icebp daa add jmp fdivp and fistp or xor (bad) out mov sbb ret movsb aas aaa sub xor push cltd mov nop or repz lret add dec mov imul (bad) (bad) dec cmp pop inc insb mov pop js in jecxz test int mov pusha jns sbb mov (bad) and mov push enter in mov push cmp xor imul xchg sbb pop or push or mov dec inc iret pop inc fisttp pop mov inc xlat ja mov xchg mov mov mov lahf mov sub cwtl pop pop in xor and cmp in loopne mov test dec dec mov mov sbb (bad) lock in add clc adc xchg in mov add std jo mov jecxz sbb add mov or and ret xchg sub fs or pop (bad) xchg xlat xchg lret stos sahf and (bad) aaa ss sbb add inc dec mov leave dec mov insl fidivrl sbb jle xchg test cmpsl cli push pop lret repz sahf cmpsl mov repz adc xor test jae mov test fiaddl inc out inc pop rorb inc jae,pt and xchg cltd movsl adc enter aam fucom sub xchg stos fimul hlt mov insb movsl jnp xchg xchg addr16 jno lea in mov mov fldl inc (bad) pop (bad) jg out xchg cmpsb into in pop adc in outsl mov jbe adc pusha mov test add in push fs sub mov es outsb and sub and pop icebp push mov addr16 sti daa sub adc adc adc sbb repz add jge fidivr xlat and lcall add cmp dec out fist and insb xchg mov inc sbb scas mov leave mov rcl ret test sub inc rorl test icebp test push and (bad) sbb cmpl push into inc enter xchg push out fidivrl or outsl in rcl aad (bad) cmp sub imul es out jecxz fs dec xchg pop fnstsw xor pop in add mov cmpsb cmpsb pushl addl sbb hlt sbb inc mov pusha call mov je mov pop sbb (bad) pop fistpll dec inc cs mov xchg pop jp movsb mov loopne mov insb in sbb fstl mov jno xchg push pop xchg mov pop mov cld jo out ret mov popf sbb pop lcall pop movb lea out aad sub sub xor mov sub rclb fs xchg mov imul xchg sub iret call fcoml push repnz adc xchg add push popa rcl in ja lret xor je xchg push lods incl cmp mov sbb cmp pop inc fimull lcall jge pop and push pop fcmovne imul push mov mov pop pop scas std out pop pop jge mov push loope adc imul xchg outsb push jae lret xchg ds fmull xor punpcklwd and fisubr push pop nop cli enter insb push pushf fnstsw mov rcll or pop xchg imul lahf adc mov test add (bad) mov imull arpl jns push or std lahf or leave cmp xchg cli mov lds fiaddl mov into mov in inc cmp aam mov push push add data16 jecxz push jge adc adc mov sub push jo jmp lcall cs sub cli dec pop mov jne dec pusha inc out jl iret sahf fidivr cmp pop mov or dec jmp cmp cmpsl je call xor out das xchg and jno jno ret movsl cmpsb fistp movsb fs dec loope xchg lods add add xor je pop loop adc jmp addl fs sub push sub jnp rcrl lods jmp test adc pop pusha add mov sbb out pop call sub aaa incb pop int in sti sbb scas cmp stos sarb xor mov cmp mov pusha mov pop add fidivl fsubl bound repnz fild xabort mov sahf mov shrl std test jge aam mov push (bad) (bad) sarb push mov push (bad) push pop pop test cmp xchg es and ret adc jo lret faddp das add push cmp xchg rorb lcall vmovq or or sbb mov and pop cmp push sti ret and or jmp mov popa iret jo imul xlat aam mov outsl test pop div into pop jae push into lea mov enter dec jecxz lldt jecxz,pn iret addr16 mov pushf fdiv mov inc scas cmpsl mov pop cmp (bad) dec mov popa les ja mov mov sbb loop das cmpsb fiadd xchg xor fsts pop sub dec repz cmc pusha push loope push and leave mov and xchg lods pusha or out fsubl mov push dec mov leave jo or jg xchg mov scas push shll push sub clc vmovntdq mov lret negl fldt inc pop fcoml mov sbb outsl dec push or fnstenv mov or gs cmpsb mov cltd pop jnp sub xchg lods dec cmp inc adc ljmp iret mov mov ja adc stos mov int3 mov cld popa pushf out xor lcall repz or movsb jb add outsb or arpl mov loopne inc dec (bad) cltd out ja cwtl sub sub (bad) adc repnz push xchg mov mov test jno loop pusha mov xlat shrb lret aad jmp into cmp test repz es xlat ret mov adc lret jmp enter push jp enter pop jp jb mov mov out and or pop push mov mov sbb into cmc cmp pop loope std mov xchg lods mov jo leave enter rolb pop jle cs sbb popf adc or and mov rcrl ds mov leave cmc cmp in xchg pop sbb ljmp mov test xchg add imul fldenv aam rolb outsb (bad) out inc ror scas cmp xor (bad) lds add mov jbe push bound jp test mov pop mov add lret pop mov lods movsl adc pop fs js pop test insl push xor lods mov sub rolb mov in inc xor int3 mov cmpsb movsl jno (bad) jno pop inc xor pop int pop fbstp (bad) sbb cmp jb mov pusha sbb pop push pusha and cmpsl push jg movsb into ds lret adc (bad) daa mov jle movsl adc xor add adc xor out push xchg adc add repz cs cltd int3 pop fdivrs movsl daa mov xlat mov fisttpl jmp xlat fwait and gs push xchg mov mov aaa inc adc loopne dec xlat jecxz popl mov add arpl test mov lret adc pusha loop enter int3 lret and sub or iret lahf int jnp xchg nop push xor pop add (bad) mov sbb pop fadd dec gs xchg test dec (bad) lcall mov stos pop test std add xchg lahf xchg cltd mov sub add cmp sbbb xor (bad) mov sub scas push data16 mov (bad) and and pop jno inc push iret add sbb gs mov scas dec jle inc dec push mov test mov sub (bad) dec lea ss cltd jne (bad) imul jnp jns repz inc mov pop inc fdivr cld sarl xchg mov inc dec ds std mov (bad) (bad) mov mov fidiv mov loope push fdivl bnd xor iret mov and xlat sub sbb jle mov jmp sub cmp in loope test adc push hlt mov pushf rorl gs insl mov xor mov in xchg (bad) mov loopne test pop mov and das xor int mov jle js rcll pop dec push cbtw jle mov iret inc cmpsb imul dec movsl mov pop mov pop (bad) jmp jo mov inc enter lret sub mov mov push (bad) adc push clc out (bad) dec imul outsb bound (bad) int3 or fistpl mov pusha pop jp int push mov cmp (bad) xchg imul test cmp ljmp cmpsl test das nop jne or inc and fmul push gs lret xchg sahf and das inc mov cmpsb int mov out in sti mov push addr16 dec repnz insl in lahf add push negb aam adc cld mov mov jne mov xchg test jbe inc mov jg cmp jecxz aam push inc fcoml dec mov pop mov mov jb cmc mov cmp dec test aas xchg out rorb mov gs int3 (bad) pop loope rorb adc push (bad) jecxz and sub outsl xor push lret jne dec fnstcw cmp push push repnz and adc mov idiv outsb vbroadcasti64x2 lret push push mov pop ret cmp jae leave mov loopne dec mov dec mov gs je push dec sti xchg xchg adc fxch insb rclb sub mov in jne push adc nop cs dec cmpsb mov mov add jae fs add cmp into sub or xchg push punpckhdq sarb and sub repz movsl jbe repnz call dec cmpsb xchg pop out lock lea or push or fstl (bad) scas xlat insb jl push aas pop inc fildl (bad) pushf call inc push jne mov fstl (bad) mov addr16 les add loopne adc in pop mov mov mov xchg mov ret lahf push inc jecxz fidivr lods iret les push gs pop into and mov incb (bad) push pop jo (bad) stc cltd iret data16 sbb stos push rorl or rcll sub xor and jnp sbb enter fwait mov jge adc pusha pop and jbe push aaa insl xchg les add insl pop xchg lock clc cmp jecxz jecxz pop dec xor mov mov out out pop jne add pop xor xlat push xchg lock dec movl mov sub and xlat pushf leave cmp mov or xor fbstp outsl lret scas in inc repz enter xchg lods xchg sarb pop ror xor jg cmp loopne push add cmp jmp dec (bad) mul arpl test sbb enter dec mov mov inc scas stos mov jnp cmp xchg out aas push jl cld xchg lods dec repnz pushf les rorb aam insl (bad) mov movsb out xchg mov mov mov daa cmp jl,pn in pop lods fs mov or scas add lods or rcl xchg ret pop pop fistpll fidiv ja scas mov and mov xor mov insl xchg outsl loopne movsb mov or mov aaa popf test lret and xlat insl dec hlt cltd pop add sahf bound enter pop dec or repz ss dec jmp pop out push aad cmp hlt shr stos stc fisubl jp push loopne or jbe push out lds outsb aaa inc cmp les repnz mov out stos xor subps mov push fnstcw subl lahf cmpsl decb in sahf into cltd ficom shrb icebp repnz cmp fildl aad (bad) dec sub push or mov inc (bad) dec sahf aaa sbb pop add cmp jl cmpsb in daa fildll insb out repz fcompl out test push mov lock ret add lahf cmp mov xchg pop jb pop loopne testl push jp pop lods push sbb inc scas dec (bad) mov xchg out mov add sar jecxz pop cmp xlat nop jp lret fnop (bad) fwait mov add jl test out test xchg in imul ret mov movsl nop lahf inc addr16 mov adc inc test (bad) jge iret mov jne enter inc jecxz cmp mov push xchg pop add out mov dec enter and pop add push inc mov xchg pop int3 pop sub jns loope jg fwait push dec lds jl adc test xor sbb sbb sbb xchg loopne mov pop jl adc mov dec push jbe cmp push aas lret mov jne xchg pop jge mov mov lods ljmp movsb imul mov test repz xchg sahf cmc mov pop in xchg sub cs mov jb push cmpsb imull sbb dec je fbstp int dec jg test jle in std iret adc sub cld js pop adc rcrl lret xchg repnz ficompl fldenv divl pop mov push mov addl repz sbb adcb nop add dec cwtl pop push pop loopne cmp push jno daa lods push into int popa jp,pt or inc arpl and ret xchg push push xchg push pop and fimul push insl fs jl mov loopne inc add and inc mov or fnsave int3 sbb (bad) std push adc in test lods loope aam adc lcall int3 stos jnp repnz leave jnp pop data16 movsb pop mov cmp adc add std in jb nop cmpl mov stc js orl jg push ret movsb fmull inc pop in cmp mov mov jecxz pop lret hlt lahf rolb mov inc cli mov test lods stos (bad) push and test adc or jno inc add mov int3 add push pop jae std mov gs idivb and mov lret inc pop in adc pop xchg fwait sub scas mov inc aad mov pop mov pop push divl sub ret pop inc push pop pop push pop aas pop pusha sbb roll cmp push into sbb sub pop xchg xor cmpsb jecxz mov repz adc int jg push sub pop or add iret call inc inc repnz mov scas jle push mov sbb cmpsb cmp and loope mov and out and jmp ja sbb fcoms and lcall aad out mov (bad) mov outsl mov inc mov sub xchg mov jge xchg mov xlat repz push stos adc out add dec stos jb push mov and or sbb fwait adc icebp aaa mov mov cmpsl in mov test lret cli push in mov xlat push std xor mov scas in loope sub push or cmp sub dec mov int3 jmp repz ret stos mov jbe (bad) loop stos push mov shlb pop xlat cmp add test aam gs xlat faddl xchg movsl in ret xor sbb jae fadd arpl vpextrw lds in call pop movsl sbb pop jg sub push addl or or mov mov mov mov mov push push int3 sbb test inc jecxz xchg fiadd fs lret mov cld dec ficomp sub movsl inc push (bad) cmp mov ret add les icebp dec (bad) lock ds in popf inc and cmpsl popf test inc mov inc or xchg icebp pop jl sub cmpl pop or (bad) mov in sub addr16 outsl mov xlat mov adc push xor push and dec sbb lcall jae push push (bad) push test ja cmp push mov push mov outsl mov lods call mulb cs mov fs xor outsl nop or inc lcall fcmovnb fadds rol mov loop mov mov or or pop inc arpl nop movsl jae sbb sbb mov xchg loop add std mov push pop inc sbb lret mov mov sbb push iret xor add scas push cmp dec je sub jae fwait cvtps2pd std cmp aam pop ss mov xor stos or and sbb cmp sub ss add in push mov in dec das sysexit cld mov xor fldenv xor movsb inc ja fmuls hlt xor jg lahf xchg ds ss mov rclb or pop popa icebp dec jo iret xorb mov lods (bad) testb into aas cld icebp pop movsb xlat add cmc mov pop out xchg hlt fstl imul pop popa fs cli mov sub add jno lret add xor ss adc mov mov and rclb pop stos mov popa test (bad) idivl mov mov sbb rcll dec and xchg test jae ror dec nop int3 sbb add xchg add (bad) in das int3 in sbb das lock mov jmp mov imul pop sub int3 or push inc test xchg jle or outsb cmp sub dec (bad) loop or lahf stos hlt mov xor imul popf fsts inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad ljmp fldl2e inc aad .byte inc aad .byte inc cmp insl enter add add mov std aas lret xlat rol test jl stos adc scas stc add std (bad) roll roll add cli xlat roll ss std xlat xor in pushf cld test cs or sub rcrb dec adc xor test mov scas xlat roll stos in cmc cwtl fiaddl xchg int3 or ret std rclb inc std xlat jmp mov std cwtl mov sub or or test sub add ja push mov add sub sahf std xlat roll sub xlat rcrl xlat roll jp lock popa hlt imul sub push push dec inc dec enter roll lahf fiadd cmpl add or and pushf cmp dec fisttpl fnop roll jnp add or ret orl or int3 cmp inc ret cmp dec fisttpl jbe sbb iret or xlat roll mov dec lret pop lret or int3 cmp inc ret jecxz mov xlat roll xchg xlat rorl lret or int3 cmp inc ret jecxz push pop mov test push add enter dec jmp inc sti cmpl lret ret xchg dec lret pop lret or add rol fcoml xlat jg mov cmpsl std out pop test dec pop jge int3 int3 cmp sbb hlt jmp pop es (bad) cmc xchg iret fist sbb hlt jmp pop es xlat shrl (bad) roll sub addr16 xchg (bad) inc enter jecxz inc cmp test into push imul in leave and xchg dec xchg fs fstpt push test push pop aad dec push mov adc push sbb scas insl xor xchg xor (bad) icebp or sub fldenv adc sub pop nop and movsb adc push pop and and cld pop mov testl add dec jne push repnz pushf (bad) xor jge jno adc (bad) jns jne (bad) lea fild rolb outsl mov iret hlt dec fdivr and test and lret aad std aad (bad) adc addb inc or in fisubrl test ret push jne mov testl jns pop imul fxch enter icebp shrb pop in jp inc lods jge jge mov decb inc add or fistpl cmp out push or int3 add inc or (bad) cld lret pop enter and (bad) add sbb push setp mov add test in mov fcmovne adcb hlt into mov inc push dec lret pop xchg xor les xor dec jl jl std aad mov (bad) fwait xor test jge iret add fwait int3 inc cmovle sti mov cmp mov ret (bad) dec std cmp add ljmp repnz mov adc inc adc adc xchg rorl test movl xor mov fnstenv jl add rcrl dec adc mov dec scas imul inc (bad) cmc das add js lods imul sub push inc jecxz dec mov dec mov add push and hlt pop xor insb popa lret pop aad push lahf dec xchg add js orl push xchg xlat jmp add daa push (bad) movsb jg lock mov cwtl int3 dec sub dec pusha ret popa mov dec nop jecxz mov leave and pop (bad) out mov shlb stos nop dec pop test adc cmpb push inc inc inc into pushf fistp roll jle cmp pop (bad) dec in mov dec popa fidivr bswap mov sbb imulb iret jne adc and pop mov rclb test cmc sbb cmpb repz rorl (bad) dec inc inc cmc jns imulb repz cmp mov and addr16 out xorl jae cmp mov push dec mov push pop daa lds test or aad repz dec fs mov jl arpl in outsb pop sarl sbb adc std fsts lock rolb ret (bad) arpl nop fdivrs mov hlt gs mov jmp pop rol add pop lcall cmc or mov outsl mov enter (bad) shlb stc clc push jnp xor jo aam cmpsl ja outsb jo mov xchg xchg push fidivrl repz jno icebp enter push ja adc (bad) (bad) clc sbb push dec lea test fsubl lods pop xchg push into xchg out rcll xor jns repnz jecxz and cmp mov push mov (bad) int push in lret dec or mov cmc (bad) jbe pop push test std push mov add or and xchg scas dec add push outsb sub cmp jbe cs and iret sbb dec lods shrl xchg sbb add aad add xchg add ljmp adc aaa les in aaa push mov sub lret jp (bad) fwait hlt and jbe mov lea bound sbb adc mov loop cmpsb fldl int into stc call mov pop dec jl mov fild and insl mov scas mov xor int3 data16 scas xor xlat cmpsb std enter dec dec add aad aad loop mov adc into ja jo cltd stos cmp or (bad) add xchg mov add in adc movsl pop das inc fucomip loope mov rclb ret push sub mov mov mov scas inc dec pop fsubs mov loopne mov bound nop dec pushf lods mov sub xchg sbb cmp rorw pop xor push jae cmp cs (bad) xor push pop mov in dec iret xor mov xor or loope or lods mov dec mov pop (bad) enter mov sub (bad) movsl push inc sbb leave mov dec int3 inc add test dec jmp dec sbb pop lret in cmp pop fdivs fstpt dec jecxz call add dec into dec jae dec cmp addl cmp rorb mov fwait inc test xchg inc jge jg cld in lret test out aaa int3 adc jo loope fmul leave mov or sub fidivrl xor rcr fs sbb (bad) xchg insl mov add sub xchg jae mov adc dec lcall mov mov outsl jns loop out add mov fildl into js popl fidivl push or out addl out push lcall add (bad) or mov adc cmpsl add cmpsl dec pop pop sbb mov sbb dec or jg push dec push ss jge gs mov jmp addl push inc or (bad) fwait or and or leave dec jns add lock repnz dec push dec mov test mov xor dec loop inc xlat dec xchg movsb shlb rcll movsb add or xor fisttp addr16 in int insb into jmp cmp rolb mov aas push out mov ja into iret fwait popa dec lods push cmp mov test test dec cmc cmc (bad) lods dec int idivl fs inc add sbb hlt mov imul lea movsb arpl cli sub popf loop pop add lcall mov push xor fild imul in xchg fdivr negl rcl ret fcomps ljmp sbb jnp cmp dec insl sbb imul scas xor iret cmp std mov push jmp jmp ds stc dec rorl out jnp xor dec mov ret subl mov icebp and sbbb fimul popa dec inc scas add push pop leave decl test sub push cmp push pop les pop xchg aas ja xchg adc iret jb je rclb subb xlat lock push rolb popf jle mov dec xchg rclb xor cmp fnstsw out xor fwait mov (bad) loopne or sarl jge (bad) sub test pop scas rcll int and (bad) std je sub sbb scas push xchg arpl jo aas pop pop les pop packssdw xchg cld mov xchg mov inc pop jecxz cmp (bad) push fldt or mov dec and sti dec loop jmp cmpsb pusha or and repnz sbb mov jg (bad) call insb addr16 mov or pusha pop mov and fs push rorb clc (bad) dec push mov jb mov jae dec nop imul dec test xchg idivl rol iret inc js adc les roll push mov push or orl aad aas aad pop mov lds dec dec mov cmp popf adc cltd inc sub and push xchg and sub (bad) dec divb adc mov fsubs cmp and in js jo int3 inc xchg loopne pop std (bad) lea or hlt lahf mov mov ss mov stos enter mov pop push aad sub test sbb test cli jmp xor and jmp adc xor inc in mov push and es sarb pop data16 lahf ja std sub rclb popf ljmp lret add fdivrl jg sub jge and iret rorl in popf movsb pusha (bad) iret inc shll push aad int3 mov add std xchg push cltd xchg mov stos test xchg (bad) enter or dec push in dec xchg jo lcall sub enter stos fsubrl cli xchg scas js push rcll mov cmpsb int imul mov and pop inc xchg fidivl pop rcrb andl enter adc mov test je sbb stc dec or lods jne mov xchg jnp jge mov pop pusha (bad) cmp inc xchg jns (bad) pop adc push mov cltd call fimul movsb in stc pop jbe inc test mov mov mov dec or rcll pop sbb xchg mov call sbb stc aas jp stos lods push lods repnz mov adc push jbe xchg sbb je cltd lods jge push jl jne ja xchg mov sbb or pop cmpsb push or cmp xor cltd cmp dec cli fistp pop mov add jecxz adc popa in leave inc stos nop cmp scas push rolb inc xlat sbb cmp adcl push jae mov adc add scas int pop add mov lods lahf outsl fisttpll (bad) (bad) ds xchg sub dec leave div mov cmpsl dec imul lea dec fisubrl sarl pop sub push mov scas mov fnstsw push sbb dec add ror arpl jo (bad) xchg shl cmpsl sub aas sbb (bad) out bound adc mov dec lret shlb movsb bound cli shlb push pop int daa int3 mov push movzbl mov cs push xchg int3 dec (bad) jns (bad) movsb adc nop mov aad int3 add leave aas iret mov mov adc push stc (bad) pop and imul fstp es push (bad) int3 push jnp xchg xchg std fs mov xor jmp add inc push adc inc inc push sbbl sbb movb loopne je popa add ret pop dec sub lahf mov xor rolb insb inc ljmp mov lret mov jb mov mov rolb pop fmull mov mov and adc outsb in xchg in mov dec xor (bad) (bad) jo jmp es jne mov or stos test xor arpl jl jmp je mov adc mov jmp popf dec daa ss imul push ljmp (bad) ss (bad) hlt xchg ret das (bad) cmp cld lods push mov inc dec popf xchg inc push xchg mov sub and pop or into push pop mov shlb sub arpl and jns stos rorl ss push jbe sbb test ss fcoms icebp add mov jg pop (bad) repnz out clc pop addb stc nop add jl cmp in movl sbb adc or stos fiadd lea rcrl ret ljmp mov jl dec sbb pop add or in push mov and add in mov xor lea adc inc movb clc idivl arpl and push or and rolb icebp pop sbbb decb cmp or push call adc cmp or mov orb or cmp and pusha pop mov ja pop call jmp pop pusha mov push mov scas fadds cld jl add pop mov sti es jmp inc pop push adc les or aaa push out ret sub pop pop cltd or insb adc cld sub inc adc adc xchg testb dec (bad) and or hlt sbb dec and pop jmp xor outsb pop sub xchg dec mov ret int adc mov (bad) (bad) adc jo das mov mov lods cmc lret sbb sbb adc push mov je ljmp mov add insb cmp ret push xchg and inc pop xchg repz pop push or adc pop sbb xor sahf xchg loopne mov xchg mov outsl push cmp and test out push aad pop sub sahf int pop test stc add fsubrl loope xor lret and xor insl out gs push sbb enter xchg fnsave aas pop mov pop lcall pop fildll fcomps or pop mov mov ret add sbb (bad) adc in add xchg jo rorl leave movsl dec jae mov mov add (bad) cld fchs mov rolb bound ds call mov (bad) adc xor mov cmp add xchg jl cmpsb (bad) out adc xchg mov dec inc adc jecxz mov mov mov jno sbb xchg cmpsl ljmp adcb movl and sarl xor (bad) pusha mov (bad) xor je lods pop ret inc movl inc cmp leave cli lods push dec xchg (bad) or mov sbb nop lret add jecxz rcll icebp es push arpl pop pop pusha jb xchg add lret adcl sbb lret add bound jo xlat mov xchg das aam sbb inc hlt mov dec popf add inc das add dec adc inc adcb loopne add sbb xor push jnp in testl leave or adc movsb push mov aas mov mov popf ret rcrb leave adc hlt inc adc es test sub inc pop and cs call (bad) and icebp xchg (bad) into mov add fnop and imul add inc xor call pop daa (bad) dec or cmp cmc dec mov daa or pop sub cld (bad) repz pop pop dec jae adc mov add cmp or pop daa bound icebp mov addb inc cmp clc pusha scas dec push hlt (bad) cld add sbb (bad) leave sar gs movsb hlt ret bound lods mov cmpsb cmp cmc in out fadds mov movsl cmp sbbb mov mov lcall je out jno test or iret inc cmp mov sarb sub or rorb jmp and add push add push fwait cmpsl or repnz movsb inc movsb mov pushf hlt adc inc mov mov lret mov (bad) popa pop sbb cmp sub fdivr mov jge call push popf int add xor (bad) jne dec add sbb cmp movsl ret xor jl or je adc sbb push cld shl mov cmp and sub add or and sbb dec hlt and (bad) pop xchg mov mov adc mov in or or jl xor adc sub jle sub shrb int3 pushf xchg inc xor xor xchg es scas sub pop xor cli aaa adc pop cmpsl push mov and mov jge adc fnstenv movsl (bad) test sar push and int3 sbb (bad) arpl push jg mov inc or repz testl stos sub cmp and or mov jo pop adc je and repnz ret adc leave hlt add ds sbb add fwait cltd in pop inc xchg jbe rorb hlt add loopne movsb mov dec psadbw inc arpl mov mov incb test lock jge mov cvttps2pi add cmp jne and loopne inc xor adc mov nop dec jo out push lods sbb add jp stos out jge add lcall pop push and fwait add imul jnp and inc rcl sbb es push mov mov mov je lock lods push cmpsb xchg inc sub pusha xchg ds les mov and inc test negb es les in mov test pop imulb dec inc loop add ja es andb je sub arpl (bad) cld push mov adc or subl sbb enter in and add cld nop sbb adc sub shll add fidivl pop clc movsb add (bad) pop and ud2 sbb sbbb pop or loop dec movsb and (bad) (bad) pushf mov mov je mov push add fldenv rcrb mov mov and and pop push mov jb xor pusha pop pushf xchg sbb jb push mov cmpsb add jbe inc das (bad) adc daa test or adc lock ljmp xor dec stos and or mov inc movsl js enter or aam sbb pop inc mov adc sbb std movsl push outsl xor inc pop lret lock icebp lods pop dec inc or movb mov mov mov or int sbb sbb jl shr ljmp dec fdiv or dec lahf cld inc mov scas enter sub and lods and clc add push (bad) ret dec xor dec rolb fadds xchg pop add test and mov mov mov add roll cmp add scas adc adc inc mov in adc xor pushf nop or pop adc ret push and inc push aas sbb movsb repnz push sub xlat pop out mov xchg lods cmp scas int sub dec add frstor sub sbb (bad) mov ret push pop add addr16 or push es sbb cmp dec daa push (bad) or jg mov in push test test sti sbb popa enter stc call cmpsl rorl xchg loope xchg popa or jbe pop push sbb mov leave dec dec inc int3 shrb scas push fistpll pop aam xchg stos mov mov nop jle push xchg int3 daa pop jb and sbb inc xchg and insl add fstl sbb addb (bad) xor ficompl movsl lret dec call jle pusha mov sbb cld mov inc xchg xor or xchg nop add idivl xchg and cmc ret jl add mov cmp pop cmpsb test std nopl pusha push sbb es or fsubr inc ljmp in loopne mov add aas mov insl (bad) jo movsb add enter mov mov mov ret inc loop dec fsubl pusha fnsave lods in adcb cld xchg (bad) maskmovq testl or xor sub inc cmp adc xor or xchg inc mov idivl cwtl cmp push ret or mov lock sahf test faddl test sub in push repnz scas jge pop movsb or (bad) cmp sub add mov ret rcrl add pop pop repz loope nop loopne dec inc lock test test mov mov rolb in sbb inc mov out (bad) cmp pop and test andl add xor xchg inc aas jno movq mov xor aam subl pop dec dec add stos rcl test mov jne xor xor movsb (bad) push and call pop in movb testb jge adc jle push cmp pop dec cmp jnp sub insb sub push insb clc movsb xchg and movsb xor ja dec dec inc adc loope xchg xlat loopne sub fs adc cmp jno hlt xchg adc loopne push ret je push inc push adc add inc loopne jl lock push inc cmpsl mov enter lret hlt dec mulb jmp push shr add mov subl lds dec inc mov sub enter mov clc jo cmpsb js add sub clc aaa mov daa and bound xor or and add hlt pushf dec lcall (bad) mov je add (bad) bound lods pop das adc cmp imulb dec (bad) mov sbb enter lods inc mov sbb add or adc add js pop inc shlb pop and dec inc sub or movsb fs out inc xchg add fstpt (bad) aad lods add ficompl xor fcoms aam add hlt or cmc mov stc orl sbb lods push test add (bad) jb jo es add iret sbb jl add xchg nop fsubs sbb dec push xchg sub bound sbb sub dec stos adc inc cltd aaa jne bound mov in ror fsubr pshufw add shl test hlt int3 jbe push sbb push adc test push stos loope mov add jns jmp xchg mov xor sub daa out jecxz out push push loope popf jle ja xor mov push push enter insl inc pop and jnp pusha xor pop enter enter movsb pushf adc dec iret sub push jl cmp (bad) pop (bad) jo mov sbb dec test rorb push inc adcl iret pop xor jo jg lea mov cmpb and dec imul lea xchg loopne sbb add incl add cmp call scas dec imul test movb insl push xor add add nop aad mov aas mov mov mov ljmp and cs cli add xor ret nop dec and cld mov fimul and pop or sbb call test xor cmp clc test daa pop add hlt mov push add test xor adc rcrl mov sub fcompl mov loope xor pop push lea pop push fidivrl rolb into xor andl add dec int3 mov icebp jp test jle mov mov add rorb or lods (bad) sbb test test ficom inc out xlat add in and aam and and (bad) std push mov inc inc int3 shlb leave sbb xor pusha mov jnp mov in inc je int3 aas mov inc dec lea add inc fisubrl or mov mov inc es xchg (bad) mov sbb pop je adc das mov inc ss push add cmpsb (bad) pusha stos movups fwait pushf orb or jnp roll cmpsl pop call pop sbb pop add add mov stc inc cltd rolb dec or call or mov (bad) (bad) or xchg add test xor fwait sub cld add aad mov int add jl pop (bad) call dec and scas int3 rolb xchg pusha add mull cli pop cltd sahf sbb pop add xor push sbb and and cmc sbb stos out adcb shl cmpsl adc sub add in add inc dec adc cli xor dec aas and dec xchg or inc fs es sarb pop loopne mov jne repnz or (bad) (bad) fidiv sbb adc add dec cmp lods jle fwait mov cmpsl fildl aas fstl and add imul loop lcall rclb pop adc test aaa push je push xor mov fiaddl lcall lret mov orl xor sub out sbb ret nop sub mov adc push test sub orb aad adc sub (bad) outsb rclb and or imul push inc int3 orb lahf jle outsl push jl call mov jnp inc xchg mov push add dec inc es inc mov xchg lcall data16 adc decl mov dec mov shrl sbb pop cmp inc xor test ss dec jnp dec adc push pushf and add int or dec inc xchg ret mov adc addl pop cs lock clc out (bad) mulb adcb in inc clc add les dec fsubs inc push into movsb xchg sub xchg pop imul in add add push stos scas add sbb fwait inc pop xor and or mov ja mov lret (bad) stos sbb mov mov inc fdivrs cmc js add fild shrl fnsave (bad) imulb xchg (bad) xor add mov xchg sub xor jmp fldenv lahf in (bad) cmpsb iret cld repz rol mov subl or xor adcb dec test xor mov fldt (bad) roll out sbb and lock nop jl mov sub xor imul cmp loope fiaddl sbb mov pop cmp add (bad) in pusha xchg mov pusha push jl je push insb xor xor pop inc cld inc xchg xchg jns add ja cmp sbb aas inc data16 cmpsb pusha cmp adc xchg pop ja cld arpl int3 mov pop fsubrs and (bad) cli adc xlat das inc add jge aad (bad) punpckhdq pop nop sarb and ja mov push jns adc push adc add leave pop jbe pop push jl adc dec js mov iret mov (bad) and inc or test add enter fistpll push xchg dec xchg dec cmp adc and sbb or xchg addr16 or sti cwtl push loope xor lock scas nop inc pop cmpb or shrl sbb add int3 adc xchg mov xor cwtl mov xchg or into and or (bad) ja test stos ficom add lock (bad) sub orl sbb (bad) xor or cmp adc xchg (bad) insb loopne dec cmp loop fsubl (bad) ss daa jecxz or sbb adc into or add xor or jns inc xor lods push pushf pop out push add rcl loope sbb mov mov dec mov inc cwtl aaa sub xchg std dec sub gs sub push mov sub xor fstl mov test inc arpl sarb push mov adc mov mov int subb sub shrl aam (bad) jmp add fldenv pop pushf inc adc test or and pop hlt add ss aaa or fwait stos insl mov sub mov mov mov sbb pop or (bad) cmpsb mov aaa mov cmpsl cmp xchg fcomps jp push xchg or js xchg mov mov mov lret add jns add out push and lea mov lret pop dec mov mov inc cmp or push loop add pop stos cld out cltd xorb dec loopne inc les xor sar (bad) int cmp aam sbb jecxz adc add sub or mov inc add push sbb mov movsl adc or rolb lret and popf push pusha aam adc mov sahf jg pusha mov cmp inc cmp xor add addr16 test push sbb mov mov jbe lock sbbb xor or inc push sub cmp push nop xor dec lret das xchg pusha xor sbb in lock dec int add add dec lods push test shl and loopne test pop push push lock xor mov int3 and movsb mov hlt mov shlb dec xor fldcw insb rolb mov mov sahf push add or and je xor addb sahf xchg mov xor inc xchg call loope pusha pop adc xor lds mov or sbb data16 mov hlt sub jl add push fildl mov inc fimul xchg loopne nop sti leave push fisubrl cltd popf add cmp repnz cld gs xorb subb jb rcr and fidiv push pop jo and loop mov mov test sbbl xor push or das add flds test adc dec js push sub sarb scas mov xor sub inc ret xor movb sub cmp stc inc enter add rclb lock cltd shrb jl inc sbbb mov sbb int in jmp xor cmp enter push push cltd lods jo mov popl sub mov adc xchg adc xor and rorb push data16 inc pop cmp lea rorl inc inc nop push (bad) fild lahf dec jo inc les add fiadd insl xchg (bad) push adc incl add inc jg (bad) lods jecxz mov xor mov aam js cs ds movsl imul (bad) lods inc jb mov cmpsb faddl (bad) cmp push mov mov popf xor faddp and outsl les cmp add fnstsw mov xchg clc pop mov jp pop cmp mov sub add pop mov xor lcall jmp add (bad) pop push push add adc ja rcl pop stos lods (bad) (bad) out call out sub pop fcomps jbe or or (bad) sbb xor out insb adc cli in imulb adc nop nop test push dec movsb lret sbbb jo add ss shll or cmp ds (bad) push enter popa push mov dec mov stc clc jle or xchg or lahf negb xor jo (bad) mov icebp lods dec call test add lods cmp dec pop (bad) jb mov push jle call xchg mov outsb adc (bad) or xchg fsubrl lock ja loop mov (bad) sbb jb mov add ret add jl pushf add (bad) shr loope adc fdivp jno adc jnp push mov push out lahf sarb scas jo and dec andb adc push js mov cmp or fisub je (bad) mov pop pop dec or pop int cmp cmc dec lods movsb push in dec loopne xor stos push add inc sbb jo lcall (bad) pop add xor (bad) cmp sub pusha dec int push (bad) hlt mov insb and es in xor mull add in adc push jbe dec outsl js das out es notb out sub (bad) mov shrl ljmp shrl adc incb sarl cld or mov dec rclb mov or xor inc mov leave add add push fwait cwtl jns clc push sbb adc jl clc rorl and fcomps shrl jne out push loope loop or lret or xor adc subl lds in aam xchg call xor fdivrp nop or and and xorb call and rolb (bad) xor sbb lock stc mov mov cld rcrb xchg cmp inc inc nop xchg push stc call je dec pop jne rorb sub jle add sub adc in push dec add push adc adc aaa lock mov xchg dec fild jo clc fisttpl jge or faddl fs mov ret (bad) inc and cmp scas add aaa jbe mov inc movsb scas repz icebp or (bad) push or std jbe and hlt les xor add sbb xor mov pop inc in inc int3 pusha inc es rolb repnz jl mov cmpsb clc adc in mov fiaddl lret loop pop outsl push or outsb clc es iret jp cmpsb xchg in push sub insb inc adcl sbb pushf adc inc dec dec adc mov xchg movd les mov hlt mov pop lcall mov hlt push std arpl pop dec fmuls add xor mov stos ljmp mov (bad) dec push xchg addl test popf add cmp movsb adc adc (bad) xchg enter xor mov pop lods mov cmp mov jbe aam push clc add dec cli inc push dec mov xchg (bad) sbb xlat mov and ficomp in inc xor inc xor and sub push inc dec adcb or rcl outsl sbb fs out test loop mov icebp or in sbb fmull ss clc out neg lods push sbb adc mov clc dec jl dec inc xchg or mov mov inc arpl push push popa mov mov sbb cmpsb add das outsl les cmpsl add popf mov fs xchg fadds lods loop and mov add faddl sbb xor xor dec inc xorb sbb cmp (bad) push dec test cmp flds pusha rcrl add mov and mov and rcll and scas lahf stos pusha inc cmp xor jns mov xchg mov and mov adc nop push sbb push jo gs popa cmp hlt das dec or js in (bad) aam or xor push repz and xchg cmc sub (bad) dec jle push fnsave ret jns add mov mov add and (bad) bt fisttpl rclb inc rcrb inc cvtpi2ps or shl rcll in push xor jb sub jecxz stc bound mov xor fdivrs roll mulb testb repz dec dec and jns lock xor jo ds notb xor ror mov mov ret rolb clc cmp sub in xchg and enter not sti ja add test and push mov dec inc and scas nop or std jno fstpt cld mov mov cmp fwait dec jl xor imul jno les mov sbb fadds lahf xor inc cmpsb sub mov cmp shlb push xor subb mov xchg xor loop mov xchg push mov mov popf imulb add leave fisttpl ret push pop pop xor popf mov push sbb sti mov mov sbb icebp mov or and xchg and and sub push jne mov std and mov test xchg or cld mov add xor pop mov pop mov stc flds addb add scas out mov mov add shrl jecxz add mov inc inc pop or jmp xchg or data16 or ja mov lock rcrb cmp inc in (bad) adc cltd push xor clc inc leave sbb sti cmp cmp imulb add inc sub adc dec xor dec cmp in mov repnz lock jae frstor lret and sbb fwait lods lds adc add sbb mov inc fcom lods push aam jo inc dec pushf add cmp xchg dec xchg orb push js cwtl and ss ret mov popa subb cmp out or movsb es nop xor add clc push xchg inc dec js xor out and or lret mov jg movsb (bad) push and and mov fsub adc cmp adc mov inc pop adc (bad) jp jns or push adc xchg orb cltd rorl jge rcr lock and ja outsl pop (bad) sbb add or mov add and push add imull xchg inc call xchg cwtl enter mov es aas adc or xor leave xor push dec loopne pop gs ss sub loop loope inc dec lods arpl and add push (bad) xor in pushf dec loope dec in adc mov in jae (bad) (bad) (bad) dec add out popf add (bad) sub cltd scas or out pop daa xor or dec dec xlat loopne mov fidivr int3 insb xor cmpl loop xor shrl sbb add push or mov rorl sub mov fimul add (bad) dec (bad) pop daa imul mov mov xchg jno mov cmp (bad) pop (bad) mov dec nop lret mov insb mov loopne repz adc jnp xchg (bad) lock dec fxch dec inc mov aam addb test pop out jecxz pop jne or and ja jae mov pop addl xor jno xchg cmp (bad) clc jmp xchg push pushf lods test xor in sahf imul test sbb out and enter adc jnp inc aaa sbbb jns call push dec xor inc shl jge jno pop jae pop push mov sub lea lds call and push jns mov pusha test xchg dec dec (bad) hlt mov xchg add roll xchg data16 repz mov (bad) or shrb sub mov iret add loopne clc dec inc sub sub imul sbb fildll mov xchg pop pop jo call xchg leave mov jl push loopne negb (bad) or add pop add shll pop xor xor pop dec nop push dec mov mov clc dec je add sahf push mov popf add xchg in add or cmp js js insb or fidiv sbbl pop enter pop push xchg sub pop xor cwtl ds xor jl mov mov (bad) sarl repnz xor (bad) dec rolb scas mov or mov xchg ficomp sub inc sub or loopne mov inc xor das jmp movsb sub xor and add mov addl scas lcall push fsubrl jl pop ficomp push jge,pt mov pop dec push test pop mov xchg scas pop mov adc pop or ret and lahf mov sub add add in mov add pop push sahf rcrb es inc xor fisttp add (bad) add cs sbb lods sbb lock xor pop add sbb xor mov xor xor scas add push sub dec sbb jle inc jg imul and or popf mov push push movsl movsb adc push and or push push dec xchg movsl mov movsb push dec xor sub es mov adc mov add dec (bad) dec faddp fs das xor xor (bad) xchg dec setl rcll test scas pop lods mov mov rorb dec (bad) xchg ret enter loope test out pop ds (bad) aaa adc rclb jp xlat inc xchg mov mov popl mov or inc je lock mov cwtl imul mov les rorb add inc lods jbe sub psrad mov adc push dec mov pop inc nop mov cmp fsub sub push xlat sub add adc dec lock loop or sarl rcll rol loop lret nop addb insb loopne xor jmp sub popf mov pop lds stos push clc mov add xchg cmp add adc inc dec mov subb add xor jne pop pop sbb (bad) xor ret inc shrb and add das idivb sbb cltd lods rorb add pusha xchg xor jp fdivl daa add pop lret fbld in jo xor mov adc sbb push js xchg lods adc sub jb mov pushf mov and inc fdivp and inc in (bad) loopne nop or lods nop or jp or inc mov loop lret mov jno dec add xor jmp mov dec jl fisttpl cmp jecxz lock scas ret ret xchg (bad) leave mov xor je xor mov sbb lahf rcrb jnp xchg aam leave xor dec cltd dec ret adc fadds rolb lret cmp sbb sub push aaa sbb dec je lcall outsl dec out fucomi mov pop pop jp push mov dec add push pusha sub add sbb push push dec dec enter add push popf jge or dec mov xchg sbbb adc iret (bad) hlt and (bad) cmp xor movsl mov mov sbb popf fimul mov sub mov jle mov dec or loope bound and dec leave adc cmp (bad) push mov js addb pop adc repz inc movsb dec sub adc les roll clc adc fldl clc xor xorl adc mov test mov jb rorl stos mov jo mov test fs sbb insb inc call jbe enter add jns push fmuls mov push adc lea adc lods fnstsw out pusha push sub pop pushf and mov jg add xor cmp inc inc rcrl mov pop jle dec rol add jo ret xchg adc xor and jo xor sbb jns inc jle dec xchg ret int3 (bad) mov nop enter sbb pop loopne jl dec dec mov ret adc bound push mov xor jp push jl jbe inc outsl jmp cmp add test inc (bad) ret mov shrb sub sbb cwtl sahf pop pushf lock dec popf sub jb xchg add mov and push je pop mov (bad) and push imul out stos push sub push icebp cmp add stos or arpl add cmp in (bad) add test adc loope gs cmove roll push loopne icebp iret jnp dec aas jbe lock xchg mov mov idivb in decb or dec repnz mov inc sbb insb push shlb jge push aas fadds sar xchg mov sub outsb dec insl mov stos mov add add (bad) daa add pop ss sbb cmp mov icebp scas jg add mov gs ret sub sbb sub inc cmp add mov jl add xor or dec jecxz mov push orl mov aad cltd lods mulb xchg xchg pop or push ja cmp arpl scas mov xchg mov mov adc add fildll bound push test jp mov insb insl pop movsb push lds pusha sbb (bad) in add (bad) hlt mov sbb jne inc fwait mov pop insl outsb mov stos and jbe adc cmp lret add arpl dec jl jnp or jne mov jbe cmp arpl outsl or (bad) out stc or call (bad) add test cld inc jb in rorb jbe and add push std fmul or dec sbb sbb loopne out xchg mov push sub mov mov add out add loopne xchg sbb jl outsl nop out hlt push cmpsl push das or lods mov std hlt dec mov fnstenv add xchg nop inc mov mov jl push addb pop mov jp adc fidiv adc or mov and out xchg or (bad) xor mov mov (bad) fistpll xchg pop inc lret out jns pusha dec rolb insl fs pop fildll xor cmovs mov rcrl adc rorb sbb stc insl xchg data16 popf xchg lock push dec sahf int3 xorb adc fisttp sbb notb and insb sub pop dec jns movsl lds xor push add dec xlat loopne mov rorl sbb std das insl mov add xor fs adc ja push sbbl rorb mov sub in sbbb or in pop add pop xor pop adc add cli cmp pusha inc sbb testl das aaa jp movsb hlt mov jnp ja je test ljmp inc rcll roll clc adc test das pop jae mov movl dec repz add in mov das push xchg push xor adc imul clc dec or mov sbb test xor cmp pop and mov pop xorb dec jp aad dec lret int3 sub add fsubrl ret ja hlt push xchg jl test xchg dec dec add rcr dec les loope loopne leave push cmpsl enter adc xor testl in popf enter addb adc adc add or xor mov xchg cmp popa loope or sub pop insb fwait pop adc in adcb sub in les int3 pushf jne pop (bad) push xor or aam or adc xorl jl sbb fimul test inc dec mov test dec mov or mov loopne dec jecxz sahf xchg fdivp js adc adc icebp call insb pop movsb xor iret enter cmpsl (bad) sbb and adc or lods pop lret fisttp sub loopne xor test jle addl mov mov mov push dec hlt pop pop jl insb aam mov cwtl inc jnp add in jmp test rclb inc and add (bad) push and dec fldenv mov scas jnp fsubl dec (bad) mov cld cs enter pop aas fisub jns flds stc or xor sub and or cli inc cwtl mov sub pop jo sti loopne jnp mov adc add les out mov movsb clc cld es cmp xor push fldcw sbbb fcompl sbb push test sarl mov cmp test dec lret fstp or das xor xorl daa xorl lock and sub push add add pushf test cwtl xchg lret (bad) or sbb cwtl rcll sbb (bad) stos add imul (bad) dec lods sub sub inc add (bad) lret and xor jnp cmpsl and cmp pop push mov (bad) pop pop jo jae push add push cmc das add enterw add setb imulb ss bound xor (bad) shrb sbb nop sub ret sbb mov inc xlat test jl divl cmp sub out sub aam mov cmp je pop and add out into aaa stc sub cwtl (bad) ja push add sbb xor adc or jl push add rorb imul ja xor cmpsb sbbl lock or test and lds rcrl lock add xchg add arpl aaa jg test lret jge sysexit pop jo jmp in arpl shrb test adc dec aaa mov mov idivb fsubrl sub cmp (bad) or xor and and jb hlt hlt inc inc cmc or add rolb pushf rorb hlt add add jnp in and xor (bad) call sarb mov lock or xor mov mov leave fdivs or jno adc test add inc (bad) in sub shlb daa mov pop sbb sub xor (bad) in dec push jge mov cmpsl jae or add test lea push aaa out pop rclb cmp adc xor lock add loope icebp repz jmp pusha mov add cmpsl pop je cmp pusha sahf hlt aam xor sbbb add dec xor scas das add adc sbb cli xchg pusha int3 decb hlt push das xchg mov fsubp inc add fcoms and std in cmpsb pop mov push loope test xor mov push in adc fimul adc loopne xor add mov sahf mov mov inc jae adc or mov dec add sub loopne and adc fistpl cmpsl loope aas mov lods hlt xchg xchg jo sub mov pop adc jnp loopne flds (bad) mov xor pop push jne inc xorb cwtl movsb xor es add jle fmull lea adc mov mov fisttpl push mov mov fmull imul mov push test insb jge bound adcb cld sbb mov and in xlat lds jecxz or add out iret and push pop mov xchg addb sbb enter add dec add pop push mov idivb push das xor adc add test and xlat in or push faddl jle add adc call add lock or pop push pop mov dec or ss sbb or sbb or clc pushf nop mov inc jbe add mov sti ljmp gs fs push xchg clc or aad mov xchg cmp sahf nop sbb outsb addr16 and adc fsubrs mov mov in (bad) ficomp xchg ret pop sbb dec xor insb inc repz fdivr add push addb xor in loope jbe dec pushw fneni(8087 mov jle xchg pushf lock ljmp mov nop xchg test push fsubl mov push pop push xorl add (bad) mov out mov add stc loop jp (bad) mov adc lock and (bad) or fwait mov jno fs cltd and sbb mov sarl loopne add jo add fwait scas jae cmp add inc cld or add jb push pop call sbb sbb mov sbb testb fist or jecxz or push pop (bad) xor fisub xor (bad) (bad) rolb das jp pusha fcoms rolb add scas sbb les fstp stos xor sbb cwtl imul and cld add icebp (bad) adc fisubr xor jle aam and js data16 xor cmp sub mov mov roll sbb clc inc add dec jbe loop rolb add xchg mov addb sub or push stos add imul test push andb insb mov push pop adc movsb xor add sub (bad) mov mov push inc rcrb mov inc dec in hlt xchg lock fldl inc fidivl fimul icebp outsb add sbbb arpl rcrl das movsl icebp add pop or sbb (bad) adc outsb add insb inc push lock test scas out es and add stc xchg cwtl jmp add dec int aas fsubl xor cmp pop loopne pop push add xor xor sub lds and xor jecxz fcompl inc js push xor jns (bad) sub test sub mov arpl pop push mov mov mov (bad) sarb pop xor sbb mov add or sbb adc mov sbb (bad) mov and jbe add xorb call faddp test cld rorb pop mov dec jno sub add lret push mov shrb ljmp arpl dec cwtl pop or dec fnstenv dec movsb fs xchg add insl inc xorb cmp test loopne faddl mov fdivp arpl insb dec dec int mov rolb fistpll jnp add push iret and shlb push jle pop push fstps popa in xor jle xor fdivr cmp pop or mov mov add mov (bad) push xor data16 dec mov scas and hlt jns test negl inc int3 loop pop jne jbe adc fcmovu call dec or add xchg mov add and fisttpl push mov add (bad) xor mov cmp jo (bad) sbb mov stc xor shl jb shlb mov mov adc pop cwtl cmp adc cwtl push jl add inc xor fisubr movsb inc stos add les (bad) push shrb jne (bad) andb or mov out rclb push pop mov xor rcr stc pop test int3 xor stos in seto das xor jge stos movsb xchg rcrb (bad) loopne and lret pop outsl les mov (bad) pop std mov mov fchs clc push popf and dec rolb fdivl and xchg pusha sub testl push shrl mov lods dec fsub mov fsubrp (bad) lock sarl cwtl xor and push jns in call or adcl enter ret inc mov cs pop push rorl sub inc enter or js sbbl dec add inc mov sbb popa add adc or andl and jo js les adc fwait fs insb mov pop cmpsl and shlb ja and fsubrs inc or pop push and pop test and push pop fldenv and (bad) xor nop movsb jnp cmpsl mov cmp loopne fmull rcr mov pop mov decb aas inc mov jg cmp inc in add pop and mov jb sub dec test movsl lds cmp repnz cmp das dec pop adc mov cltd arpl and movsb cmpsl mov sarl add pop xchg push fsubl je jle and dec or lea call sub daa fwait cmp mov or mov das scas dec mov xor js lods sub xor inc mov push or enter inc pop xor dec icebp shrb xchg popa add in (bad) movsl fisub pop mov xor adc cmp clc ficom mov fwait in inc dec add push rcl xchg jl leave and mov or fwait scas (bad) in jo add mov and mov jbe push jns addr16 xor (bad) mov in mov call movsb pop pop inc add icebp test cmpsl mov pusha xchg pop add xorl cmp cltd and add push cmp inc xor pop mov and add (bad) pusha dec jnp lea mov sbb pop xor push mov sub add enter sbb cmp inc aas ljmp (bad) rcrl inc sub xor je xchg dec fcmovb fcoms (bad) dec nop mov dec sbb mov jmp fidiv pusha xchg sub fsubrl (bad) pop xchg mov jbe inc aam pop rorb push (bad) jo adc in (bad) dec add mov add in call xor lods mov (bad) or mov nop in and test sub xor xlat adc test inc sub pop sbb push add nop jns add sarl pop call sub (bad) idiv mov daa cli sbb mov sbb push in and add jle pop and xor jo xor mov add outsl outsb mov test and mov mov inc mov or inc dec stos pop or xchg inc mov mov call xchg jbe aad add pop sub xchg sub sub add push faddl mov mov inc or pop add faddl cwtl inc int3 fidivr nop (bad) xor pop mov inc lds cmp adc rcpps cwtl jl ljmp sbb loop dec add fldenv inc and rorl orl popl mov rorb cltd cwtl lcall clc add fdivl js movsl cmp add pop push call imul add fs outsl loope pop dec loopne sarl (bad) jge out fisttpll push xor icebp adc xchg adc movsb test cmp loopne cmp sub jge (bad) call jbe in pop out adc cmp and inc push xor xor (bad) out fstpt movsb mov or dec inc jbe inc mov fdivrs pop mov lret rcrl xor sbbl mov pusha cmp movsb add jp mov dec (bad) enter mov dec insb popa sub add (bad) xor mov imul sbb inc add lret mov pop loope jo dec addb jbe dec mov mov add pop les push call fcoms mov dec pop add repnz test mov fwait pop das (bad) lock or sub sub sbb jns scas mov out mov pushf pop icebp cmp lock inc adc jnp dec push sahf sbb jns or add out sahf aam mov add test xor xor dec (bad) dec xor daa ja push lahf or roll repz lods adc in fsubrs (bad) lock mov pushf or jno movsb xchg pop and xor add (bad) leave mov in xchg add xor push rclb fstps mov or adc roll sbb test cmp ljmp cmpsl ds and sbb ror loopne jecxz mov enter addb or clc jl add into ds or xchg jns pop cmc xor xchg mov outsb js adc repz or fs hlt add sub cmpsb inc xor push loopne ficoml xor repnz cmp fildl mov xor das add movsl mov add mov xor add mov loopne sub pop sbb adc pop inc rclb adc es ror mov jp sub test and mov cmpsl popa sbb xchg add fcmovnu cmpsb lret xor imul data16 mov and mov mov shrb pop add ret push dec add cmp test mov rcll adc fwait mov dec adc fsubs cmp fldcw dec mov mov xor mov movsb xor mov lahf imul and xor pop js,pn sub push inc dec xchg scas add fldl cmp inc in pop adc nop cmp pop adc bndldx xor loop fisubr or sub and dec dec mov test xor pop sub stos jno add es orl and push dec or dec xor pop xlat sbb pop or or das cmp xchg pushl faddl mov (bad) sbb fiaddl jge push je cmp fisubl sub (bad) dec and neg sub jo inc add inc lds test jge sub dec test and testb push clc and addr16 push fidivr mov idivb adc enter push loopne mov orb js dec mov cmp daa stc cli adc xlat xor cmpb cmc mov popa jns bound test repz mov fadds das xchg les stc add or ljmp xchg std faddp cmp sub das mov add mov xor push (bad) and jl movb pop sbb fdivp jb mov mov shll add or inc faddl test outsl fdivrp pop daa wbinvd jno pcmpgtd push xchg push inc leave out and inc shrb enter rcll test std add xrelease sbb imul pop xor mov test sbb or xor and arpl jge rcll sbb (bad) les cs insb add push ss mov lods lahf cmp xor pop loopne in xchg lret jae testl arpl std daa in jnp insb adc xchg sahf cmp rclb and pop in sbb adc imul dec mov and je loopne test (bad) cwtl ljmp pushf and push sar push insb add (bad) dec sbb fiadd push and (bad) xor lret call sub das dec pop add pop cwtl mov cmpsl push sub xchg and rcrb std movsl movsb ljmp test adc xchg aaa push fdivr out fnstcw push jnp add (bad) ja xor int3 add pop push add les push sub lock or push (bad) xor sub lods ljmp aad ret and lds fdivs adc scas pop jecxz cmp sar ret call and inc mov add jns xor mov dec insb insl aam lcall cmp pop inc (bad) dec js sub mov add dec (bad) mov add add sbb cmpsb jno add mov dec mov loop addr16 divb sbb (bad) push mov loopne jp js push jl push test sbbl pop cmp inc add test mov stc adc mov sbb cmova loopne pushf fild pop dec test ljmp inc inc cmpsl add xor pop dec dec enter je pop dec jns insl (bad) loope dec add int das inc pop sti sbb or mov pop or mov inc mov add (bad) clc pop inc inc je orl adc test xlat mov loopne insb xor icebp push sbb add and fldt sub add scas xchg out mov or (bad) xchg sub inc cmp pop or adc xor inc test mov inc inc add out (bad) js aas mov xchg sahf mov xchg and insb mov and (bad) adc adc fsubr push dec pop loopne and das leave xchg clc and add adc add add std mov or inc ficomp mov fwait aam jo inc je pop adc adc mov mul xor mov and pop sub adc push add xchg rolb pop int3 subl aam or (bad) jl fild xchg or push mov xchg nop inc and adc add mov repnz and test bound inc sbb (bad) (bad) jns lods popa pop and inc pop jge mov inc jbe mov ja pop mov movb adc add iret into flds xor sbb push mov out or pop dec cmp add fstpt xor jmp push or fdivp jne fcompl mov mov push fcoms push mov mov xlat nop and hlt cs outsl push or insl and add sbb clc cmp xchg jo (bad) push in bound ljmp ds loop pushf sub js es add adc jge stc pop (bad) icebp dec nop mov fisubl and jae shr mov fisttp mov outsl imul imul in adc dec mov xor cmp popf jl (bad) testb (bad) and addb fmull jns fidivr or or nop jp adc pop sub add fist das xor or movsb jge sub push push sbb push mov adc add push or xchg xchg adc (bad) loopne dec xchg data16 add pop scas dec inc (bad) xor imul xor jbe mov fisttpl or cld sub dec test add rolb test mov push mov pop rclb mov fsubr js or dec mov inc inc mov call lds or sbb inc xchg or add dec (bad) add mull jo loope add es push adc clc jl pusha mov push daa test sub roll mov (bad) or add push mov aam cmp (bad) push adc push shr loope jle add pop cmp mov or mov dec nop fimul shrb dec cwtl dec es aad fisub dec aas enter inc enter or mov loopne (bad) mov cmpl pusha xchg xor cltd adc add mov add xor xchg cltd cmp cmc add mov mov add add nop pop popf les xor clc lods lret loopne ret lock mov xor inc pushf leave mov fildll pushf mov mov xchg leave dec push mov push fsubrl gs inc shrb movsb dec xor in fsubrl inc pop flds les sub xor (bad) sbb or (bad) xor mov call xor daa loop pop pop fimul test mov sub pop subl pop aaa push pop add loop sub test dec add enter or mov cmp movsb sahf faddl xor rolb mov xor jo,pn fmull shlb pop mov fstl adc je xor out add in ds xor subb sub out jo pop mov sbb mov cmp dec xlat mov sbb andb jbe mov aad cmp into push push push sbb and inc test sarl mov fmuls push xlat into lock xor add dec (bad) xchg mov (bad) lahf mov stos fsubs jmp jno cmp adc test cmp push xor test xorb add cs fisub xchg in pushf inc add fdivl xchg and adc pop xchg or jmp xchg adc clc mov das stc add sbb jnp pop fldt rorb sub or inc add bound sub cmp pop push dec out xlat pop fcomps or add inc out sub push inc add mov out inc (bad) sub jne push dec hlt pop fisttpl outsl clc pop add jbe inc add jb mov mov xchg data16 add sbb mov mov add or jge pop sbb sub xchg loopne punpcklbw or or mov add push inc (bad) dec orb cmp sub and (bad) loopne xor mov addb xor add xor test pop sbb mov loopne fadds std stos clc outsb pop hlt mov cld pusha mov inc aad add jnp dec jo push rcrl lds xor inc add rorl add fnstenv cmpsb jge sbb fdivrp inc mov pusha pushf mov sbb roll loopne rcr dec jmp sbb pop mov jae loopne mov or cld in repnz nop jne test push or mov dec mov sub sub xor xor pop ficomp sar sbb jle add (bad) mov mov add sub repnz std cmp add mov push dec hlt mov or mov frstor pop cli cmp clc sub in pop dec (bad) xlat inc fwait enter xor mov xchg test scas push or and (bad) mov xorb mov or imul fwait sbb lret add rolb add add xor stc mov lock sbb arpl pop dec andl pop xor repz call inc addr16 das outsb mov inc push (bad) sub mov add je and xchg imul jg sbb aad adcl lret out jge xchg ljmp jg int3 push inc push vmread jmp add cmc push add (bad) fisttp mov adc adc movsb or into pop mov mov ret addl ret push adc or sbb jbe xchg fldl pop inc aam xor test fsubrl xor xchg loopne das aad adc sbb xchg or jle xchg rolb in loop movb jno in and inc pop fistl and (bad) (bad) lock mov add xchg inc cmp pusha sbb ja loopne xor xchg repz rcr add xchg inc cmpl jae fldl and and imul aam js in shlb nop mov iret ror adc add fldcw test fistpl or cmp cli repz roll fwait rcrb xchg hlt mov sbb push insb add mov ffree dec and mov inc add mov call inc xchg inc jne je divb shll or push mov mov loopnew callw das mov (bad) sti cmp jecxz mov hlt dec rorb adc add in push (bad) mov pop add mov inc (bad) cmp mov adc test push ja xor fwait pop push mov nop adc inc jge fisubr das aaa lcall inc mov lea push xchg inc jne xor (bad) xor fildl xor cmc push ret or loopne and add outsb in jb dec inc pop add mov xor sub inc mov loop jl add mov loopne sbb sub cld add aam daa rcll pop subb scas mov je inc aam lcall ja and rcrb in xor sub aam popa push push adc enter sbbb idivl xchg sub xchg push inc jl leave lock add loope dec add sbb dec inc nop cmp fldl pop popf or push lret or mov sar stos cmp adcb jge and pop dec sbb fcoml xlat insl dec rorb mov nop push and mov test and push inc stc scas mov insl xchg insb jle mov pusha add and faddp bound xor dec pop outsb xchg (bad) or and fadds or inc imul xchg mov xchg push addb cmp and sbb and mov mov add std push loope pop (bad) ret inc (bad) xchg or xor das sbb in cmp xor nop cmc cli and fs pop or std cmpsb and inc inc fmulp inc xor mov test (bad) and and jns mov adc (bad) mov xchg test adc add into jns gs test inc aam (bad) cwtl jb das enter adc mov adc test cmp xor fdivrs sbb jl daa mov or sbb movsl inc lahf xor or cs xchg mov je leave sbb mov xchg push das cli lret clc sar mov mov (bad) out lods pop sbbb jge aam mov or cmpsb inc mov shlb and mov cwtl and sub add fildl pop lret cs mov fldt or stos test dec js cwtl pop mov (bad) loopne pop pop les inc das add add in sub pop adcl rcll inc das inc inc cld fldt or xor push mov outsb adc add add add jae pop dec jns cmp xchg fildll xor or imul and mov addb mov je mov scas and pop or sub sub loop jle clc call imul xchg jge lahf outsb fisttp arpl jle pop mov sahf xchg add cmp and or sbb frstor adc or cmp js inc lcall sahf push fiadd push push inc add (bad) loopne addl je or inc popa mov pushf stos mov dec add or test or push rcr mov cmpsb and outsb sub subb mov ficoml test or inc xchg cmp fmull inc and add dec lock add add push stos sahf add popa imul (bad) mov pop subb addr16 push push mov or negb lods mov aas pop fwait xchg (bad) or add xor subl fwait cltd mov push inc or and mov outsb xchg sub rcr neg aas pop enter cmp or mov stos nop mov jno mov mov in insl add pop lahf dec imul mov push mov xchg shrb loop mov imul sbb xlat fimul jmp xchg ret outsb dec pop fs add js xorl push xchg fisubrl jns push xor cmpsb sbb icebp pushf push ljmp inc imul cmp fsubs pop add jg add addr16 imul or (bad) mov adcb xchg pop or xor enter icebp fsubrl and xchg add lahf scas push jno add sbb add sbb lods arpl data16 add fistpl mov js xchg in push push or lods and shlb jb dec push xor adc mov jo lcall inc sbbb mov inc arpl in lock test add insl add repz call cmpsl lcall pop sub inc sub enter loop xchg not jmp push inc mov push adc xchg inc sbb imul (bad) ljmp xchg mov (bad) xor lds jne dec aas mov loop xlat (bad) mov roll push dec dec int and outsb xor mov cmp push dec inc es mov cmpsl in push stc ljmp pushf xchg xchg int and mov mov xchg inc and pop push iret sahf xchg push js xchg in jns ja push rolb xor and xchg insb movsb xor xchg jl lock gs pop add (bad) rorl inc jge push sub je cmp loope add push popf mov and adc mov cwtl mov outsb xchg mov es cmpb jle cld imul inc mov ftst add fisub sahf mov cmpb leave push jmp je adc mov ja jnp mov test xchg int add or lret jbe push add sub ja push inc add mov adc jnp fisttpll add outsb add add add push sbbl loopne out mov mov sub jo in test out mov dec loop adc sbb dec inc mov sub test nop xchg jle ds cwtl and adc or mov loop and std and enter pop cmp outsb mov pop mov lods rorb sub ret mov pop add push sbb mov stc add jne push fisubr test cmp in xchg stc pop imul clc cmp bound adc in add aad cmp cltd mov push setne xorb ja imul xorb inc jae cli and and loop mov sbbl imul call push dec and pop movsb xor push sub xchg lods sbb jl jp mov clc es aad jo pop call xchg push xor push imul cmp ficoml pop stos lahf ret inc mov push dec and pop fisttpll pop jo pop inc and bound sbb aas add inc pop pusha mov (bad) xlat inc mov in repnz (bad) ja test sub insb xchg nop mov pop ret (bad) sti mov add or mov inc sahf in xchg mov out jne xchg loope cmp (bad) aaa les popa or or dec and add add push xor adc jb dec and (bad) jo clc cmp xchg call dec test jne data16 inc loope pop fiadd adc shlb sbb add xor xlat pop movsb mov sub imul or rorl add (bad) lret fildl mov adc add jle add loop sbb loope push xchg pusha dec or es sub pop test cmp fadds or pushf or adc cmp inc loop xchg cltd mov push sub add dec (bad) lock jl ret lock pop push les ss bound dec sbb test (bad) pop rorb xchg das hlt push cmp pop mov cmp push sub fcomi mov or cmp aas daa shlb xlat pushf xor fiaddl mov sarb jecxz sub icebp mov mov imul sahf adc imul inc icebp xor jp outsl dec adc mov and pop stos cmpsb xchg dec fwait adc mov sub fldt imul push mov ljmp pushf jmp or xchg or sub cltd orb add pop push fsubr push shr inc lods adc aaa mov sub xchg frstor or ja addb lahf jp loop (bad) mov cmp bound cltd enter sbb inc das loopne lock adc outsb fcompl inc jns push fcmovnb xchg lods add ljmp or aam shrb pushf or or add jl pop or inc mov jb sub push bound lret mull sbb push loop and cmc xchg mov ds add test mov test mov data16 dec fucomi stos stos shrb sub call mov call dec jmp test sbb (bad) lock xchg adc jp shrl aaa pop xor lret jmp (bad) push mov push dec adc dec cwtl js mov push adcb push insb jge xchg test pop int popa popa lods push imul mov mov push and ret cmp lock mov and cmp mov lret mov xchg mov sub push rorb add std loop or add xor sbbb movsb test push push add and fmull faddp repnz mov jo insb inc dec (bad) int3 sub cmp add sarb pop mov and and cmp (bad) enter and push movsb add ja xchg dec test mov mov jle sbb rol dec jbe inc shrl je nop mov pop dec push adc ss stos or dec ja inc sbbb (bad) xor imul cmpb rorl fs es jns adc stos imul inc and dec xchg mov push ret mov js (bad) insb pusha mov into xorl fadds adc add xor enter imul or and es dec sub inc mov mov cmp pop in add push mov mov lock insb jns pushf loope push pop cmp and pop test mov roll or xchg mov jecxz hlt mulb faddp imul mov pop adc add push fcom push cmp incb jecxz jmp pop add pop cmp dec add mov pop pop pop pop xchg jl inc adc repz adc jo jmp sub inc imul cmp add sbb or in mov cmc push orl pop or pop sbb ret mov mov sub in push sbb nop ljmp rolb mov jno iret das dec divb pop idivl pop dec add loopne jg mov pusha lea addr16 pop push (bad) xchg (bad) test mov sub rcll (bad) pop pop lret jecxz mov mov ds push pop cmp cmp xor add mov add (bad) xchg pop add jmp push pop and mov pusha rcrb cmpsb push dec xor mov pop scas test jmp aad lods sbb sar lret push mov jnp out add (bad) addl jne repz mov add icebp xchg loope jmp or push jg movsb or jmp lret mov flds push push mov dec jb xchg or or sub popa mov std jge xor pop dec mov shlb lods cltd dec push adc push or dec lock inc shr or add rclb dec push push outsl pop or adc in or arpl cmpsl ja mov orb or out add add out push push sbb test jae pusha or gs sub or or mov out or xor es and and xchg addr16 cmp jecxz xor push fldl adc and mov movsl add arpl mov leave sub js pusha push add es and lods xchg fiadd mov hlt jbe (bad) xor mov cltd ret mov mov int3 xchg andl andl mov pop add aam sub scas cmp call cwtl push add pop not xchg sbbl add xor stc pop add test cltd ja mov mov add push leave in int lock inc (bad) push push (bad) dec repnz mov adc mov sub imul push mov (bad) mov cmp or ret or sahf int3 sub jmp ret inc out inc or xchg push mov pop jecxz cwtl jmp adc in and push mov add ss pop add arpl enter outsl pop orb std sti adc sub mov or dec mov mov and arpl scas pop pop pop out jne mov out xchg cmpb cmp or push mov arpl dec fisttp fs or mov mov jb lods ss push pop leave xor clc (bad) sahf lds fstps (bad) xor inc sbb aad sub pop mov inc imul add cmp pop imull push pop pop or loopne push mov out adc add pop sahf xorl flds je jge and adc mov out add test sbb sbb mov jmp loope test into sbb ds adcb push xchg mov lods rcl (bad) xor stc adc mov or sbb addr16 or or das or test mov sub je aaa xor mov push mov nop jmp cmp mov add movsl icebp sub and add out mov (bad) aam imul add mov ret mov rcrb (bad) nop pop pop mov xchg adc add dec lods pop lret sub sbb mov jo push (bad) pop push jp mov js xor inc adc (bad) cmp push mov add lea jbe mov stos add jne inc xchg push adc lds cmp xchg cmp jmp rolb scas or sub mov sub push pop jae loopne sub adcl pop xor pop (bad) (bad) in sahf add adc or inc loope push or outsb (bad) xchg adc or neg shr fdiv fs adc add fs (bad) xchg gs insl pop sbb mov xor cli mov pusha push xor daa pop pop inc ret insl int cltd or nop cmp cs mov inc xchg (bad) push (bad) negb push gs adc cltd xor enter push push and mov fbstp dec and sub or aad or or out icebp pop hlt push add xchg cmpsb sub pop xchg pop add adcl leave jbe dec or dec xchg not and push push ds (bad) movsl or pusha pop (bad) cmp xchg jecxz test xchg and xor xor lds inc fs fstpl rcrb and pop mov jecxz pop push pop push insb into push add xor pop push aam les notb mov pop xchg dec push sub pop pop add outsl dec mov fdiv xchg add (bad) xor movsb xor mov adc (bad) clc xor (bad) repnz div test int mov fwait inc aam scas pusha addr16 das add enter and jg pop pop jb xor ret and pop sub outsb mov sbb xor cmp fidivrl popa movl adcl push cwtl in pop sti dec jle mov int3 pop (bad) aad repz adc test mov xor or adc pop and rcll fs adc push ja repnz cli jns out out fnstcw pop add jl push cmpsb xchg insb add lods (bad) ljmp ja jl dec jle jp xor cwtl arpl sub cmp jp daa pop xchg roll std out sti mov inc mov jle rcrl pushl pusha fsubrp dec push push add (bad) (bad) ss loop mov jg ret daa cmc or jns mov inc pop les aam addl cmp mov nop or enter mov pop pop jp mov jnp repnz xlat sub test (bad) sarl repz pop add xchg mov fs mov roll in shrl sub mov jge es xor fimul dec mov fxch inc sbb jp and cs das xchg mov and incb mov cmpsl dec jge adcl sbb stc pop andl jmp or jmp ret idivl dec mov aaa not jbe hlt pop cmpl (bad) adc imulb and or (bad) mov pop adc jmp mov notb jo add test mov pop js mov lret pop and hlt fsubl roll cmp pop push jae rorb or in js aam xchg shrl add pop jmp sahf inc test and jb adc adc pop enter cwtl jp mul and sbb mov xor loop and in insl adc dec jb add add jnp std popf enter out jg add xchg ljmp pushf leave sti jge dec push xchg lds jecxz rcr outsl xchg or inc jae mov in pop and rorb mov imull dec sbb jo pushf fisttpll js mov pop pusha jae out dec push xchg orl dec dec xchg les nop xchg ds and xor outsl (bad) pusha mov rol pop pop sub pop pop shlb out cvtdq2ps mov adc (bad) jb lret (bad) (bad) popl rdtsc pusha xor addl jg or stos xchg adc pop add loop ja ss ret orl lret in push push cwtl cmpsb jbe adc jmp lods int mov jmp dec pusha test lret out or adc pushf sub fsubr mov daa or (bad) decb test push jmp notb rcll aam or or and aaa and loope add jecxz cwtl into pop jmp mov cmp mov retw push cltd pop or test int3 add mov imul out sarl jmp push jp xchg mov daa pop in fstpl ljmp dec loope add mov push sti roll rcl out mov add sub pop xor mov test stos lock adc lods mov loopne xchg inc test push call push outsl orl push push push adc jb sbb jns inc test loope cmp sbb ret mov addl arpl and or mov cmp xchg cmp adc add in jno lds xor pop xor pop jo dec xchg adc cmp jne dec fwait lds lock out or push sub jg or call mov lock cmpsb fbstp push notl inc add or outsl movsb scas ret pop add dec test push icebp mov add rcrl cmpsb hlt mov and jmp cwtl fisubr mov sbb (bad) jbe gs repz sbb push lea pop lods cmp fwait addl test mov mov or cmpsl and mov mov fcompl das sbb inc jnp sub cmp (bad) aaa sub mov dec add arpl pusha test add add sbb xchg push inc mov jmp cmp lret xor gs sub dec add sub sub pop sub add push (bad) pop pop push jecxz fstl loop aad or xchg inc xor adc movb sub mov cwtl adc vpslld inc popf (bad) cs addr16 add inc mov incl data16 in xor icebp sub pop sub jg enter mov xor std jge fcomps push mov ljmp add lahf add push add jle lcall (bad) out ss mov in (bad) jl mov cmpsl pusha data16 cltd lcall ret out pop js pop nop and xchg pop out or sti (bad) mov mov lahf lea mov ljmp add lret jmp push lea or call in pop add pop out imul xor mov pop push aaa test lcall fwait jnp (bad) outsl pop mov cmp mov subl cwtl fmul ret addb lcall mov adc fwait je mov pop test dec rol clc out or mov xchg lds ljmp jg mov sub sbb cmp inc push pop pop add aaa push adc sbb fstp push push fsubs pop push inc add add mov add or cmp dec enter or imulb add push loope sub pop add pop adc ret ret and or fbld aad sarl sbb jae inc or xor out mov xchg lcall int dec cmp add push add pop les lret pop and cli mov ret int std pop loop inc (bad) cmp mov shlb push push jne cmp mov stc (bad) lea sub rorl pop push call mov dec fbld clc mov dec lret xchg pop fisttp cli inc xor (bad) rcl or aas mov (bad) pop insb pop std dec mov pop scas add cmp (bad) xor int xor lret jmp or jno mov sbb das mov mov add jbe das lret fstpt lea push int push xchg add mov or insb dec test cmpsb movsb mov push jp lahf push cmp (bad) dec inc std bound pop ret (bad) data16 mov jle,pn mov leave out adc jmp pop lods push icebp jmp rolb jae cmc or lea aas test jecxz stc in jae mov xchg xor and push mov test fnstenv add iret sub int out stos dec push daa (bad) adc sub repnz outsl cwtl xchg or adc dec std dec and mov or adc cmp jle inc inc int jl ret pop pushf roll aam mov mov in (bad) pop or call arpl fdiv nop xor pop inc adc in or push into fs pop data16 adc mov pushf or data16 and sub je mov ret rcrb sarb pop add jmp sahf cmp les sbbl bound or jmp mov push sub repz outsb in out add dec sahf addr16 pusha or add aas pop xor jo pop pop sbb mov jle add or daa sar imul dec testl mov mov xor push mov cmpsl shll rorb xlat movsb and daa loop xor add fstl leave dec add (bad) lea mov push dec dec std jae,pt pop or cli push nop adc cld jle fildl sub xor jle pushf xor cltd xchg push (bad) popa int3 xchg cmpb (bad) fild sar push jmp orb (bad) pop add pop xchg movsb mov orl dec or mov jne into adc xor je push push mov mov lahf (bad) adc xor test (bad) scas sub inc xchg push push int3 sbb sbb lret jmp roll ret add mov int dec jmp shrb loopne es outsl push sub dec mov pop hlt jb out add out cmp xchg mov repnz mov mov jo pop mov push (bad) cmc mov fsts add mov fs ret mov sar inc xor js xchg push fmuls aad add sbb pop mov jb lods cmpsl (bad) subb popa test psllq clc xchg push mov jmp add ret xor sub jae add jg adc jmp sub add call orb aas aaa add sub xchg loopne ss seto hlt add aas sub push ret xor jb dec call arpl add inc or aaa cmp jno push dec inc (bad) pop and or xor adc dec popa jmp js mov adc jns push xlat loop js outsl fldt push push pop pusha or pop (bad) ja fild add cli dec sub mov push mov add push lea test and cmpsl test xchg or adc push jne call push push push (bad) loopne push mov rorl mov ror lcall push mov scas jmp sti ds fwait sbb ret orl sub cmp add mov pop pop les (bad) add sub pop mov loope inc (bad) scas pop jb std inc cmc xorb dec lret orl cwtl or lret push push mov push pop lret pop xor push push inc pop test mov rorl xchg sub dec scas lds mov imul shll dec push scas dec lret popf xchg (bad) std adc jge pop sub pop mov pop xchg lahf or and inc out clc mov or add inc fiaddl mov inc int3 pop adc lcall aas adc notl ret les shlb add lock and jle xor mov jecxz,pn dec xor pop cmp ljmp sub mov ja repz adc sub mov push outsl jae cmpl jnp cmp sub mov outsl icebp xor mov adc pop mov fidiv push loope add test sbb mov xor jp mov daa mov mov and aaa add mov daa mov add and test sbb jmp ss cmp adc push mov add sbb scas loop sbb icebp hlt and dec (bad) jae and push or or xor (bad) mov movzwl jmp xlat adc xorl mov pop xor xabort push sbb lret jno mov lret ljmp repnz out enter push (bad) dec jbe lret xor sub xchg sbb inc shll mov or sub push xchg push mov (bad) cmp pop mov addb movl mov xchg mov add outsb xor into es adcl sbb pop or push out add pop pop (bad) add out das fcmove (bad) inc stc xor mov push test and xchg aad and movsb (bad) cltd mov in adc dec aaa lea loope ljmp ret jp and xor mov rcrb fs mov cmp sbb or pushf add add decb pushf pusha cmp cmp mov mov test jp or xor push sub mov xor pushf nop (bad) subl dec das or push push pop in sub mov fwait dec adc and leave (bad) leave inc sub dec rolb and mov add test (bad) leave out mov inc je inc mov xchg (bad) rclb sti or xor call inc stos push add pop mov jmp cltd sbb pop and sub cwtl subl or xor and jnp jl and push adc lods adc pop xor sub adc (bad) sub fwait pop adc addr16 movsl and fimull outsl mov aad dec or or iret mov add push test adc cmovl add dec adc lods test or and mov daa into sub inc or add iret sbb lret add lret mov cli data16 push push mov out out xor adc pop adc lds repz mov clc sub inc movsb add cwtl pop push cwtl push push pop push mov test add rorl cli xor (bad) dec xchg es cmp cmp cli cmp or (bad) add sbb loop ret inc mov cmp dec push or ret loope xor and imul and mov test jp mov sahf or mov inc sub dec inc out xchg xor divb and out arpl and cmp jbe insb mov push xlat dec ja push mov xchg mull xchg mov xor inc arpl sbb out shlb jmp (bad) push adc sub in adc adc sub dec ret adc xchg mov push iret xor (bad) nop xchg fisub cmp je sub mov push mov lret out cltd sti imul push outsl xchg adc or jecxz (bad) cli sbb push test fbld mov add cli test or and xor cmp dec fxch and movsb adc inc mov inc test inc push xor leave fisub rorl repnz xchg ror and mov sbb sbb add and add sti pop jo push mov adc (bad) ja jmp and sub popa xor push jbe fs xor dec push inc add sub add in or insl cmp and pop nop ret test test test pushf add sbb in jmp pop mov fnop mov push or pop inc cmpsl (bad) mov es adc push outsb aam int3 lea adc xor add bound adc leave jb push inc add or or adc out and mov add push sub xchg leave insb fisttp ret xchg mov add ljmp inc aam movsl dec or in lret inc xor mov push mov enter xchg mov and inc adc or popa loopne and push movsl push int3 test leave inc cwtl pop negb test je adc and add fs cmp push adc and xchg mov icebp and loop jno xchg add and jl insl mov leave adc xchg fs lret jb dec jbe shr (bad) std and test sub xchg pop cmp les pop movsb xchg or ss inc mov push jmp into xchg dec mov jno lahf and jne fcmovne sbb lea jmp jp jae subl hlt add push xchg sub mov push push les fsubl or imul fdivrl call test dec or leave fldcw stc lds adc pop sub test sub sub add es inc movsb lret push rol loope or stc inc mov shll adc movsb movsl xchg and mov ret mov mov xor cmp push (bad) and es dec ljmp ss xrelease out inc fsts push and out sbb cmp sarl add movsb push push fisttp (bad) rcrb gs and enter adc mov mov add and inc xchg push mov (bad) test cmpsb xor flds es sub icebp pop mov xchg xor mov and push jge xorl and mov lret adc rcl sti rclb loope inc mov xchg pop cmp test outsl mov and lcall dec dec push add or mov or lods sbb jle inc dec ficom test sub leave inc mov cltd cmpsb (bad) sub pop adc xchg sub push and mov lret (bad) addr16 and lret xchg mov vpminsw (bad) (bad) mov ret mov shl rcll ljmp sub mov xor add mov mov xorl adc repnz push mov loope jns into pop mov mov std out sub sbb call push aaa out dec sub pop mov push (bad) inc mov out mov lcall mov das popl lahf repz (bad) xor out mov inc sbb neg test sub or (bad) and or adc sub outsl pushf iret inc mov cmp mov dec scas enter out iret daa and lret sub sub push add cmp rcrl sub xor lcall cli stc orb jg fildll sub mov mov mov test out pop iret aaa mov lods fldcw add iret xor xor xor jmp clc dec ret aad xor out pop or push and add dec adc sbb inc dec push inc push fwait clc fcmovb dec mov (bad) ljmp or inc test mov dec cwtl or xor xor jmp data16 dec ret mov repz mov add add fiaddl (bad) dec xor pop repz cwtl inc xor xchg mov in sub mov repnz xchg repz pop orb cwtl add inc out xor or pushl push or rcl mov (bad) sub fwait icebp xchg ljmp push or (bad) and push mov dec adc adc enter add jb pusha jg and mov movsb cmp nop cmp xchg and div aaa or lods (bad) enter inc sbb imul fs sub jno,pt or mov or jno adc jg out and pop or or xchg test xor test mov (bad) test aas mov sub push stc (bad) int enter add mov fildl mov pop adc jns inc loop mov sub lods xchg xor inc add cmp xlat xchg mov fstpt inc pop data16 pop jbe pop lea in inc movsb test leave out sbb pop into adc add xor cwtl add mov or mov imulb (bad) push adc push xchg jle inc inc cmp lret add rcll sub mov and pop and or jmp ror adc call (bad) lcall push test rcr or push pop repnz sub decb decl rorl add pop leave xor cld jmp jo rclb sub sti clc add mov test (bad) mov push and pop sbb cmp (bad) inc and scas lret rcrb pop cs in mov sub sbb mov jno lretw out inc add fld inc call and mov mov mov mov xchg repnz arpl into (bad) pop xchg ficoml test orb subb add jne dec xor out imul add mov cmp ret shll sub and mull sub das jmp popf iret fs ret shll sbb rorl dec cmp or in sahf xchg or mov pushl inc lret in dec xor clc mov adc into int xchg mov dec loope mov and imull pop xchg mov push fidivr mov cmp sbb (bad) jb mov (bad) fmul xor push mov dec adcl xchg or and sub mov testb sti push xchg mov repnz jno sbb add or dec sti inc pop out lds jo ss movsl xor push insl fdivl stos (bad) loopne call and dec and and push movb or mov or push mov add xor iret pushf or gs inc or xchg daa subb test enter sub clc clc xor pop leave or iret sbb sub xchg lret (bad) and push leave jno pop xor adc repnz jmp dec adc scas leave pop pop lret cmpsl sub popa or shlb pop mov mov and (bad) xlat mov inc add nop sbb int3 jle out mov add arpl pop adc loop xchg adc sbb mov xchg push sub cmpsb mov inc icebp lods je mov lods rcrl sbb dec call inc icebp dec or or xor or mov xor and xor shll mov ss movsl into jmp or lea xor mov adc mov and adc mov imul pop pop sub pop (bad) mov xchg ret cmp pop inc xchg mov dec inc sub pop mulb jae cmp test shlb mov movb cmpb adc lret daa rcrl or ror loop inc mov dec xlat cmp movb mov sub and sub divb (bad) fyl2x xor dec pop and repnz pop sub lret xchg or out arpl clc daa mov adc leave jmp repnz push cltd mov push jbe push jo daa dec push (bad) les add insl (bad) sub int3 scas out add ja pop test cltd inc mov add in jg (bad) sub test into pop mov sbb pop mov push or pusha movl push mov sub or enter shrb sub add and or rol insb ret xchg or mov gs mov test rorb adc or incl xor xor mov ret loope and jnp mov cmpsb lahf and push lea mov (bad) jbe into xchg cs xchg pop or iret inc inc sbb mov inc sbb ljmp xchg (bad) lods mov or add addr16 shlb in jns sbb push add sub push push call xor outsb int xor jmp jg push mov call pop pop gs (bad) enter inc xchg mov das mov call lea sub push pop sub pop push xor arpl divl jae push icebp mov repnz mov mov jmp mov fs (bad) adc ljmp cmp aaa popl and mov dec push add (bad) pop add mov sub push push pushl inc xor and (bad) mov jno cld dec push or cmpsb xor and cmp test notb inc and pop push pop scas nop jle cmp xchg (bad) divl and mov xor les inc or sub mov ret mov fdivs pop dec repnz xchg dec repz push or sbb int3 add jmp pop pop cwtl mov inc sahf xor call enter rcrl mov cmp or mov xor sbb xor in adc mull sub fdivrp inc xor lock or int3 adc stos sbb xor ds push sbb (bad) push sbb xchg sbb sub mov ljmp pusha daa (bad) lods in xor add xchg fstps and icebp mov scas mov movsl inc (bad) mov lds mov dec clc mov and leave jno sub and add cmp pop jne or pop adc xchg pop and pop xor or pop mov jo or bnd jle test sub xor add mov decl add push subl fistl cli cmp call fimull dec sub push test jecxz pop stos or pushf sbb idivl jo mov dec adc incl mov hlt xor enter xor pop or mov test test daa jecxz jecxz ret jecxz sub (bad) pop in daa cwtl cmpsb incb dec (bad) lret clc mov mov pop dec or push fadd adc enter idivl adc fdivrl and xor inc (bad) repz pop (bad) aaa xchg aam icebp inc sub xchg mov push xchg add and fmuls std adc and daa imul add xor (bad) mulb out push xchg (bad) adc mov xor mov xchg loope ret and aas mov das ret gs add shrb add scas mov ss add mov sahf cwtl (bad) notl ljmp push shll (bad) push out pop fistp xchg jmp es sub sub mov pop ljmp jmp cmpsb dec rcll inc (bad) push add pop xor mov pop or add jnp stos push push test cmp je pop add pop scas add setl int3 mov lret imul and jno movl mov inc addr16 pop mov nop inc (bad) sub xor rolb sbb lret adc icebp inc subb adc xchg movsb int rol pop xchg pop lcall nop and icebp movl js xor std test xor mov (bad) mov add mov nop (bad) pushf out jmp mov jb dec sub cmpsb loop or cmpsl pop inc mov and xchg pop sub push xor movsl xor test or push sub sub sub inc push rcr mov mov jb mov hlt push xor mov xchg loope mov xor retw adc add xchg push fadds es in mov out dec lea sub ret sub mov into xor sub sub rclb push stc pop lret inc daa sti add pop test fwait movsl in aas lahf mov lret sub adc dec mov jo mov adc sub (bad) sub push adc mov test mov and jmp out mov pop pop sub arpl pushf mov pop enter je imul test and mov dec (bad) lds rol mov and push mov sbb mov inc pop popf test sbb or (bad) sbb (bad) cmp shrb jg sti and sub aaa mov cmpsl iret (bad) lock lahf sbb clc add xchg repnz xor xor das or cltd idivl ss fwait icebp repnz imul sub stos mov push add jmp mov xor jne mov leave sbb aas aam pop sub inc adc jp andl insb mov ret aaa jmp jge jnp clc push add add ret decb pop fmul or or sbb inc in bound and or push xchg mov or pusha or xor add mov pop ljmp loop sbb cltd pop inc aas and enter pop hlt loope loopne and jle fiadd inc xchg je cmp les (bad) mov fild mov or mov adc lret and or mov ljmp leave inc pop sbb adc mov pushl es push insb shr cmpsb add je or sti xor (bad) add test xor ja loope fs daa nop insl mov pop add xor mov test sub lret jp lret adc lret test pusha cmp sbb or adc push into imul lea test lcall xlat aas xor testb int3 dec das xor int3 xchg push or adc repnz and pop test inc popf dec mov pop cltd jne jno xchg mulb es or sub or jno cwtl pop rorl imul stc ret cld not repz sub inc or or (bad) mov and jmp and and cltd or adc jb leave scas cmc and sub mov add dec inc inc je pop (bad) sbb das in and jmp repnz and adc pop mov lret or ret cmp lds dec rcll sub sub ret test pop mov cli jle imul xchg or or mov nop push leave fstl xor outsl xor push cmp mov mov pop mov xchg test lahf cmp js add icebp test cmp cvtpi2ps mov das or scas lcall mov push cmp jne cmp push xchg ljmp fwait sub cs roll push push jmp loope xor sarb jp clc ljmp adc sbb mov mov or hlt mov jns cltd cmpsl shll jmp enter rorb fsubs fcoms or mov add or xchg add sub mov jp cmp adc test and sub arpl dec and and inc (bad) pop or pop fimul pusha sub xor testb orl addr16 das stc repnz pop fmull cmp movb xor aam sbb push andb inc jle adc mulb das repnz push and or mov loop push int in mov notl xchg mov adc aas shll test mov sub cmp adc lods int mov mov jecxz xchg mov inc daa addr16 pushf push push pop sar loop xchg loop xchg mov or mov jecxz cmpb mov sbb xor hlt int3 ret rorl test sbb xchg add ja out lcall ret mov mov aaa xchg pop and cmp imul pop cld pop loopne flds add add sub sub mov leave add xorb and daa or dec dec jo dec add subl or into shl fs out jmp xor mov pop pop dec sbb popa (bad) xchg sub cld popa add into loopne loop sti mov scas or lock into sub mov dec imul mov or dec jnp jns sub bound repnz out sub dec mov testb inc cmp xchg cs xchg test pop mov mov dec fs push and push rorb xchg lock stc inc dec cwtl xchg sbb and and imul js (bad) xor jge jns and lret cmp pop loope push mov push repnz xchg cmpsl jno insb and sub aaa hlt inc sbb adc jg (bad) repnz hlt and stc or dec add mov sub cmpsb dec push mov and and outsb lock cld (bad) adc imul out and inc (bad) fimul sub ret xor xchg inc imul pop adc ds aaa dec call icebp dec mov into mov mov clc insb adc daa out ja das xor ret xor and xchg dec jg xor fisttpl dec xor imul adc xchg loop jl push adc cmp iret int3 enter xchg les jmp mov jle inc or xor pop mov mov repz es outsl ret (bad) fisub leave add adc clc out xchg push mov add leave das int imul pop mov gs and ret xchg mov and or aas movsl fildl ljmp sub adc repz cwtl cmp push adc or sub inc movsb lods dec test push out xor mov xchg push dec hlt or daa mov inc pusha nop or (bad) add pop jg cli je jmp or add push (bad) lret scas sub roll sub or push fcmovne push out or int3 push lret inc and push ret dec dec xchg add fbld adc cmpsb mov movsb xchg (bad) aaa xor es dec lret fldenv stc hlt je sbb aaa jne cmp scas or add aaa pop fsubrp out pop pop pushf jg or leave mov push cwtl xor pop in in je mov and mov push xor xor xor (bad) gs sarb fnstenv imul fidiv loope jle mov test jne cld sbb loopne aam ret cld pop and pusha jb imul pop leave into (bad) flds call add pop cmc (bad) inc or and add push lahf out popf ret dec into push cld enter mov test in and push and xchg out add (bad) out sbb and add jne orb enter sub cmpsb rcrl sub xor fmul push mov sbb mov adc popa and ret cmpb mov mov adc push mov pop xor mov movsl clc std fstps pop xor je add pop sub (bad) pop scas div aam loope mov rorl sbb popf arpl movsl mov into clc mov add scas adc test ljmp testl (bad) aaa mov in sahf cmp sub addr16 movsb xor sbb fidiv push pop push or mov push ja (bad) and sub sahf sar mov add mov push test (bad) xor rcll sbb and dec clc out outsb ffreep sub dec push frstor nop xor pushf insb enter idivb sahf cmc pop repz pop out pop add (bad) or cmp dec cmp xchg bound pop jno inc aaa dec cmp out lahf add adc (bad) repz xor jo subb dec sub add sub cmpsb and xchg pop push add push cmp mov xchg or inc arpl mov adcb or arpl xchg sbb sub xor push xchg dec xchg inc pop dec jecxz and xlat rep adc sbb mov hlt test call (bad) xchg xor mov popf xchg ja fisttp roll adc ret xchg dec cmp jbe imul les sub xor jecxz sub rolb xchg or xchg stc mov mov adc pop int insb pop dec ffreep and repz mov add cmpsl dec lea jp sub mov cmp mov outsl (bad) ljmp repnz push data16 ret call lock inc sub icebp fmull scas xchg rcpps and in add leave xchg pop add repz push mov inc push push movsl mov jl and inc dec dec mov sbb mov insl jmp (bad) sub xchg in ds notb ficomp xor fisubl jno mov adc push inc lret push push aam add or jmp dec jo nop xchg pushf jne mov xor mov icebp stos add testb pop mov into push (bad) dec fs bound popa inc or sub mov lret xchg hlt pusha pop cmp test mov xor in inc sbb and popf push cmp int leave and sub add daa repz ss push fmuls push dec jmp add cmp je or dec or jmp or jae (bad) out or or lret cwtl dec lahf xchg iret std cltd push out je call sub jp mov (bad) aas test adc xor and jno ret mov sub add lea xor mov jg int shrl xor adc stos cs adc test into push movsl pop cs mov mov roll mov mov push imul icebp es cmp sub mov pop daa in loop mov (bad) and les aaa pop xchg andl jbe mov mov lock dec jns xor clc sub imul cmp movsb mov data16 shrb mov sub sub add out ljmp jnp into loop lret and mov push pop negb jp and mov adc add jnp cmp imulb push imul clc cmp and mov loop movl gs cmpsl inc idivb jno dec popa jno cli fisub out mov daa negb sbb xor and decb testl inc inc xorb xor pop add in dec and dec repnz imulb or and and and adc pop mov fwait data16 sbb mov sub lods test cli push and add insb negb mov pop adc xor gs into mov insb (bad) mov into and xchg shrl call sbb xor out dec or cmp fsubs or sar push mov hlt mov or cmpsb das pop add (bad) iret and mov sub jmp movsb jecxz out add (bad) or mov loope and add fwait (bad) pop mov dec sub mov add aam stc adc mov test mov xor adc leave clc loopne add test iret and mov cmp mov push xor sarl add cmpsb jmp sub and sbb out mov daa dec and pop xchg jae or clc add cmpsb cmpsb dec mov jl mov xlat sub shl ret rorb xchg call mov stc cmp sub das (bad) pop dec scas loop aam pop rcrl mov out mov les sub out add mov (bad) out dec mov ud2 push jecxz testb leave sub lret repz mov cmp loope adc repnz adc adc push jmp and in sbb lods sbb cmpsl push cltd sub sub outsl xchg jmp sbbb mov sub dec adc in sub gs xor call imull hlt sub xor adc rolb decb dec pop pop imul push mov add xor inc sub xlat inc popf arpl cltd mov lds into pop mov repnz orb bound sub xor jbe iret imul pinsrw int daa (bad) (bad) jg orb cmp jecxz bound push int adc xchg pop je inc orps push pusha jp ds outsb int cmp out stc orl lret or lods inc add loopne or (bad) dec cmp push mov inc daa fildl adc pop mov lret je sub mov push into (bad) test mov into jo add pop mov sub dec sbb (bad) repnz xchg sbb sarl out pop fcompl (bad) stc and sbb imul aam jmp mov gs mov sub mov out inc adc gs sub or jmp add sub lret iret fstps inc fcompl je bound sub add sub fildl dec xor mov pop pop popf xchg sub jle cmp icebp xor stc mov (bad) (bad) jecxz sbb xor icebp mov add jecxz pop push pop cltd fsubrs test xor adc shll outsb xor insb cld and lods (bad) enter and test das jne dec jne inc ja mov ss dec xor movb lret lea and movsl pop nop lods add in nop ss xor sahf out dec and es in xor mov loop inc sub xlat mov ss loope cmp movsb test repz icebp ret dec and mov pop xor jne lret xor and fs (bad) andb xor adc pusha and jno mov or cmp test pusha xchg lret dec lock scas mov daa repz adc pop cmp xor pusha or mov js,pn js ret jecxz adc cmp fisubl repnz in cli ds enter jb out stc lods imul mov add lahf in loop adc xor sarb scas jne scas aaa mov dec lds sarb cwtl inc ljmp mov inc test mov jae sub jecxz lea adc fldenv repz xor adc jb out out mov cld es nop add push nop js xor push xchg add sbb pushf inc ret push repnz rcll sbb (bad) mov mov sbb pop sbb ss lahf cmp ret es sub icebp cltd xor push jmp inc xor repnz mov jle or adc jbe xor and sub mov lahf cmp and shrl push mov or inc add push cltd into and leave mov sbb call popa leave adc and adc push mov xor fiadd dec lock sub mov ret xor mov push sub mov sarl (bad) add sub dec pushf pushf dec insb dec xor divl cmp loopne in xchg jmp sub fnstcw out pop pop lds shr add call notl loope in push mov and inc es and es adc add cmpsl aam push mov imul adc repz or and sbb mov jo outsb loope lock and or enter lea mov push fldcw shrb icebp sub push fdivrl in and scas cwtl mov mov adc (bad) sub mov fsubrs loop ror dec sub leave dec lock mov and jns addl das mov out sub imul cmp int je ja add out cmpb fistpll pop lret mov xchg jmp or popf cltd pop shrl (bad) (bad) (bad) fistpll push imul and or insb add fisttp sub cmpsl (bad) mov pop imul inc enter lds sub mov sub (bad) out dec repz xor repz dec pop bound adc shrl insb leave faddp lods dec fsubs notl pop xorb jnp sub sbb lahf or icebp clc cmpsl inc and mov sarb and (bad) std and je (bad) out inc and mov pop push add iret add xchg loope or xchg mov dec in dec (bad) rorl aaa sub jo push add ror mov jnp sti nop nop repz mov imul xor incl fsts daa mov xlat and ret das and or lcall xchg mov insb repnz xchg mov and sbb adc xor sti xor inc or cmp test and adc dec mov pushl lds mov or (bad) adc mov push into fs rcl flds neg int3 mov mov das imul daa add and pop loope je jo cs dec pop int sbb clc and mov mov je jmp cmpsb pop and movsl jno leave (bad) outsl lret sar pop mov cmp mov dec mov jg out inc ret (bad) jns lret and test jp sti mov fs gs jb jbe (bad) pop leave repz popf cltd dec repnz jp pop adc in mov cmp mov sahf arpl pop inc sbb ret dec or xchg pop cli fs pop fldenv ficoml mov (bad) jle sub pop test imul or movaps push out push pop pop jp push sub inc pushf data16 rclb inc data16 and or mov xchg xor or xor mov sti aaa cmpsl push mov clc lret dec popf or rorb xor dec out push ret inc inc mov gs ds testb xchg paddb scas outsb outsb cld xor xchg mov in fcompl lret push pop loop and test ret lds test (bad) std out xchg stos bound mov push imul loop sub sahf test andb call es insb clc mov dec mov sub jmp push mov ficom popf push push and in mov xchg call xchg xchg addr16 dec std cmp mov adc pop add out cltd sub iret mov push pop out push add rolb and sahf shll xor jmp sub add rorb xchg in pop push sahf mov icebp inc inc jle imul das or pop inc dec mov icebp sub mov add in inc lds jmp jae aas adc fsubs test movsb mov dec lock and xor push mov pop jge xor js popa lock cmp daa fbstp fidivrl or mov jmp imul (bad) dec inc (bad) dec cmp imul inc cmc cmpsl xchg dec pop jne pop mov movsl push or jl gs and sub (bad) mov mov xchg out jo cmp push xchg xor shrl or sub add dec mul dec and ficompl mov mov adc mov add mov (bad) popf in in xchg rcl sub (bad) lods xor pusha xor and lods test test adc pop pop and sbb mov add ret inc jne arpl outsb pushf shrb jecxz cli cmp push xor test jmp loope das adc xchg int ds popf ljmp push icebp or icebp mov mov popa and cmp xchg sti mov fcom xchg inc inc mov or xchg push iret or push sbb xlat or (bad) mov pop call leave loop fistp insl pushl (bad) fistl pop and lret sub sub sub in fstp dec push (bad) sub add push loop xchg cmpsl mov and sti add enter sti dec fnstsw out and (bad) idiv call mov push push ret mov test lods repnz ret jle loopne leave jns,pn jae adc stc rcl mov dec xor xchg mov shll pop pop mov inc pop pop sbb inc push and xchg gs push add icebp add mov dec mov insb lea ds jp or mov je mov out xor mov pusha mov cwtl adc lret xchg add jg (bad) xor ret cmc adc lahf cmp hlt es scas mov sbb mov push call sub cmp sbb pop dec scas cs push fmull out int pusha ret ficom icebp or or int3 sarb out popf lds daa adc jmp or roll xchg and xchg cwtl in or xchg mov stc xchg jmp mov pop in sub inc jae xlat mov sbb jne out fs add sub mov lret lret xor jmp sbb fcompl jl push loop hlt lcall fnsave sbb adc xor mov ljmp jbe push lods das cmp movsl or lock jbe adc (bad) mov idivb fidivr mov mov lods push xor jmp dec push movsb push push test mov repz xchg and and dec mull (bad) and fsubrl push mov push ja or fld mov fdivs or push or fadd or cli mov jo and cmp push imul cmpsl jbe jmp mov scas movsb scas scas icebp mov sbb es out mov sbb fiaddl ret insl adc xor jg cld add repz mov outsl lcall imul push xchg adcl aad sti lret mov int3 aaa or mov and (bad) xor adc push leave sub mov and cmp pop xor dec ret mov bound testl lods jo and imul ret jb aaa mov imul stos pusha data16 jnp aad xor push mov add cmp lds fmul jb mov mov and and dec out adc add sti sarl inc adc xchg repz iret in mov daa lcall jecxz mov (bad) xor mov cmp mov lock lahf repz imul sub and js fnstenv jmp cmp (bad) mov and push xchg lods push add inc add push addr16 lahf shll pop push fcomps push and xlat mov mov xor xor add mov ja aas jmp dec (bad) idivb ret mov dec inc inc mov push xchg xchg xor jg and mov lret pop adc cmp (bad) out cmp aad dec pop sub xor xchg and aaa bound stos bound (bad) je jnp pop sbb mov inc mulb mov mov sub and add xor push xor hlt int3 or add ja pop push adc (bad) cmp pop push mov imul mov out and test mov sub pop lret loopne idivl sbb repz divb testb movsb inc sub mov xchg lods inc insb and jle inc mov fbld aaa and add sbb dec push or adc aam sbb ret je push jmp mov std xchg outsb adc cmp out repz lret dec adc ret pop das mov jmp lret aad (bad) mov dec push ret xor and rcll adc jo xor lret sub jmp mov imull push mov loop ficompl ret dec sub lock mov sbb adc enter jecxz test inc xchg es ja push (bad) pusha das mov dec sub sub mov jno imul loop das or xchg xchg xchg out lcall (bad) xor or add jne add xchg pop out or ret inc cmpsl xchg mov icebp add mov mov sub shrl or push xchg xchg loopne testl dec adc (bad) das mov adc cmp fcomi xor mov cmp (bad) jecxz adc adc push lds into sti shll aaa lret inc adc jecxz gs or dec mov xor adc dec jmp xchg jl jecxz addb xchg out fs in jnp mov inc and pop rcrl adc cld (bad) in and push pop xor out and loopne out sub pop data16 add fsts ds fiaddl lcall int out es roll cmp dec pushf adc imul jo mov or adc xor in mov and pop mov sbb cmp sub xor lock add ss push out popf test lahf (bad) xor ret lods imul and sbb push movsb pop cmp xlat mov in xchg cltd xchg ret dec test (bad) jecxz inc cmpsb je,pn mov sub hlt cmp push sar aas jle pop add cmp mov out fs mov cmpsl pop dec mov les (bad) pop xchg jp punpckhwd into insb mull sub arpl jmp (bad) iret pop js in dec imul or cltd sarl cld add xor rcr popf bound and into rorb pushf push sub push call cmp add lods lods sbb int3 mov xor sbb divl mov sub (bad) mov fs stc aam jmp sbb repz jp loope loope xchg icebp dec sbb mov hlt pop push push icebp inc loop sahf or outsb push imul popf (bad) mov mov rcr lahf xor mov outsl (bad) scas sub jl xor bound mov sub fldenv mov xchg dec pop (bad) pop mov lret fildll mov dec dec std pushf and mov incb rcll call shr and fidivl sub push pop cwtl aad mov pop daa xor or pop push (bad) das pop inc add (bad) je push out sub sub fisttpl jbe pop jp pop imul and xchg inc test or cmpsb cli dec clc mov dec sti mov xor (bad) dec inc sahf pop ds mov mov daa loope adc mov ret push pop or insb mov jae ret (bad) xor mov sub repz adc sbb xor push (bad) clc rorl dec jecxz cmp lret mov adc stos mov pop and popf add in mov or mov mov cmp xor xor adc leave and dec or test mov push or cwtl cltd add popf mov shrl inc sub or add callw push sub inc add xor lea adc loop lds addr16 scas dec jo pop cmpb lahf add sahf push and cmp mov add mov pop or jno scas icebp mov push add mov fs iret aam mov add shrl or mov mov rcl test cmp icebp and leave push dec in sub sub leave iret loope ret les in rcll push xlat divb or (bad) mov (bad) or mov ret leave dec daa sbb push or push or roll adc stc popf xchg in add push add sarl int3 push imul add push and inc imul addr16 push js pop icebp mov jmp mov xor and ljmp subl pushf xor or xor je popf mov daa loope mov repz fwait add and and outsb pushf stos popf adc mov add push jbe mov jle nop imul (bad) push jns xchg je fmuls dec ret xchg enter sub mov gs js scas inc fptan dec and ja lahf js scas pop rclb sub add test repz xor push push loop dec mov idivl imul sbb cmp sub aas jo insb jmp lret sub cmp xor icebp mov xor and mov sub and out mov sub ret inc inc loop cmp mov mov sbb data16 or xor jno xchg jmp out mov push mov add pop (bad) lcall cmp sbb in mov lods mov lret lea mov xlat pushf cwtl inc ret xchg out cmp xor ljmp fs xchg shrl push pop add repnz lret cmp daa push sbb push fsubr mov xchg cld and cs frstor or mov xchg stc push in push sbb dec cmpsb xor (bad) jle push imul xorl ss dec jno xchg xor push mov pop pop pop add pop xor test iret mov xchg ljmp loop ds pop lret xor and mov jne mov movsb and xchg mov and adc mov jbe popf popa out xor out mov jle ret pop dec mov jl pop push das inc mov cmc lds ret push lock dec lahf pop xorb and shrb inc aam jg notb in pop fildll xor jl xlat cld push in xor fcomip aad xor cmp das ficomp lods cld or mov add das fldl movl out adc dec push sbb add in clc popf jge xlat (bad) cmpsl fsubrs adc sub cmpsb mov cmp xchg ror enter mov out pop les mov stc lock adc and aad and aad mov lcall xchg cli adc test movsb dec std loope dec dec clc mov test add bswap repnz incl stc push mov cwtl sbb adc out jb sub inc push stc inc lods mov mov xlat sbb fmull jns imul xlat stos adc mov jecxz cmp adc leave mov xor mov (bad) and dec pop fnstenv lods into outsl nopl adc (bad) pop repz add fldenv fstpt and outsl pop dec repnz add mov lock (bad) popf mov repnz stc dec ja aaa dec mov mov pop aaa sub push out shlb scas jbe mov (bad) pushf sub inc (bad) xor daa pushf mov int icebp lret mov sahf pop xor aas ja fisttp gs cli bound stc and out pop fiadd or movsb call push push ljmp test sub popf and in mov (bad) jmp or in push fwait push es bound xor stos cmp adc std mov rcl ret jns cmpsl (bad) xchg into pop gs adc and scas mov insb frstor and inc jns dec lock adc mov mov mov mov mov sbb adc (bad) mov mov (bad) out cwtl cmp lahf mov fstl stc xchg add ds inc and out ja dec xor jmp cwtl add mov das mov cmp shrl xchg mulb fcmove pop repz stc (bad) enter or inc movsb insb add (bad) in or adc pop movsl fnstsw icebp (bad) aad add clc icebp or sub mov pop pop inc add cltd fisub jge scas xor jne adc inc pop mov add (bad) cmp cmp add xor (bad) or (bad) pop in sbb xor pop sub cs or loopne shrl xchg inc sbb xor mov das ds jle cmp jbe push mov pop addr16 xor test xchg lods in imul and pop daa push mov popf and and test (bad) mov adc push mov xlat out xor fcoml fidivl out mov les xchg popa subl in and cmpsl in inc xchg dec xor movsb test iret repz pop (bad) test xchg push out mov adcl or mov mov lods imull adc loope (bad) in leave inc lcall call (bad) lea divb xlat jbe cli or jmp xor hlt pop jae sub jmp insb add rcrb xor push out xor shrb xor or call stos gs andb aaa call push mov dec mov mov xchg inc shlb push and cmp lock rolb fldt mov mov xor notb push mov push ljmp jns push testl or movsb jb xchg xchg lods cld lods mov xor rcrb into (bad) imulb pushf dec sub enter sub push jge mov ret push stc and dec lret lret adc mov ret outsb adc mov clc movsb pop mov or sbb mull icebp fsubl call sub push pop or (bad) mov and loope add or test int3 daa inc or std mov and mov pop (bad) jo ljmp dec add sub sub aad xchg mov shlb sti jnp pop adc xchg cltd dec dec lcall xor sub or test mov jno aas mov imul popa dec (bad) dec or js out pop les gs or aam push xchg mov lahf adc jbe pop pop dec mov gs mov mov xchg int into jmp pop mov insb pop mov test push or insl (bad) xchg aad fadd pop sahf (bad) leave (bad) cmp and or push insb xchg sub sub lock add lds and ljmp pop or jl (bad) mov pop movsb dec repnz sbb jmp dec cmc sbb adc cmp lret in mov popa jmp jmp imul sti out in and rorl fisttpl rcrb or jne cmpsb sbb or xchg and leave f2xm1 lods xchg je bound shll out and xchg repnz ret sbb xor mov sbb cmpsb shrl aaa or neg mov sar mov imul imul (bad) lahf dec mov cmp rcr repz push (bad) hlt pop add ja test fadds pop xchg pushf push xchg adc add clc mov mov call jle je pop mov mov mov (bad) xor mov xor pushf (bad) lds cltd ljmp ss and in repnz xlat clc call lret mov lret je add jl decb in add sub push cmp ljmp adc xor pop and addr16 mov inc bound jp mov sub push jbe sub dec stc idiv pop movl mov in adc add fldl sub jecxz pop push dec pop sarb lds sbb mov sub out test mov fwait push lretw lcall stc (bad) and stc pop cmpsl inc shll sub cmp mov xor and mov loopne push xor (bad) stos pop aam mov and sbb or pop mov notl xor mov add call ss bound rorl out xchg push xchg sbb sub or out (bad) cmpsl mov xor ror mov and sahf out cli in stos mov mov je and add adc pusha sub adc mov or dec mov dec test mov rcrb push push dec test (bad) lods mov xchg rcrl fmuls (bad) outsb pushf fdiv lahf inc shll and mov sub pop repnz push mov mov pop cmp mov push lods lret sub pop or pop mov cs adc jmp jns (bad) outsb mov mov test sbb lret pop mov xor int3 add lret in subl jne fild test out jno testb pop leave fucomip sbb repnz push sub or inc (bad) repz jle mov (bad) and mov fsubrs fsubrs xor out (bad) cmpsb int3 fnstenv and jl xchg cmpsl ret rcrl sbb and mov lock inc daa push mov ljmp sbb gs pop call or sub pushf (bad) insl out fnsave cmp aad gs hlt mov sub cmp ds mov addl rorb sub mov xchg iret das and mov into inc inc or loop jne and xor fwait mov (bad) dec movsb (bad) xchg mov adc iret mov xchg in xchg lret or xlat fdivrl mov or pop les and xor mov cwtl adc sahf add pop fistp je notl lock int3 hlt or dec pop sahf movsb js ljmp repnz mov mov and push jnp fsts inc or rcll sub bound (bad) stos adc enter sbb mull adc lds cld ljmp xor and xor sub xor inc add and sub xor xor incb sti xchg popa movl rorl mov sbb inc or out jmp loopne ret push fcmovu sbb mov lods or mov cmp aas jnp ja push push mov ffree push xor inc pusha pop mov push adc push ds daa ljmp pop push add jmp jle aam inc pop cwtl jb mov jb or xchg das or or cld xor mov stos cmp push mov fildl mov icebp mov pop mov xor bound adc rcr jmp mov je (bad) mov mov aam loopne,pn xchg gs mov outsb jbe sub and add pop adc shll andb ss add movsb sbb cmp mov sub and ja and push and int3 popa into repnz mov jg push xchg dec jl pop leave push dec push pushf or inc dec negl dec repnz xchg mov dec lock lcall (bad) je das push gs mov jp mov jecxz int3 pushf icebp jle pop and xchg lods push test lret and adc sub mov add add mov add fstps scas inc xchg sti xor and or mov and dec or pop pop add repz jge push cmp loop xchg in xchg dec sub push inc clc xor xchg xorb add mov and cvttps2pi pop xlat cmp push mov xor frstor fnstenv xchg insl (bad) mov jnp mov (bad) lret jb lahf sub fisttpll inc divl iret or push js mov in push movsl js dec mov leave icebp cmp and mov push sub adc idivb sbb or add inc loop mov (bad) out and repnz orb or fistl test inc in mov in mov ficompl mov jbe push mov xor lds pop push dec rorl cltd xor aas int3 mov jno test push leave addb mov rcll xchg int3 cmp pop adc shl fstl jp test leave call pop (bad) xchg test scas sub out pop or daa adc outsb adc std cmpsl inc and in sub jl adc add sbb ds cmp sub jb push sbb repz clc cmpsb rclb mov dec (bad) jmp imul lret inc sbb pop into repnz mov lret mov rorl jmp pusha mov adc add or aam push adc cwtl xchg (bad) push inc lcall lret xor dec mov pop cwtl mov adc pop cli test les push mov dec arpl das out fistl and lret outsb bound mov push daa mov jae das pop jns cwtl movsb mov xchg aas add push out sub mov pop push jbe adc mov pushf mov cmpsb fs xor push push lods jl push cmp bound andb or mov icebp ja lock mov add mov lahf mov int3 loopne sahf ret popa movzbl imul outsb lret jmp int3 inc fwait xor aam imul clc add hlt out pop and hlt lret cltd dec lods adc mov js xchg adc ds out repz or inc push lods mov jg fisttp dec dec neg mov movsl adc pop clc jo add mov sahf (bad) push ja fdivr mov inc out add push xor mov rorb cmp dec mov add ljmp add pop int jg pop xor ja test pushf mov cmp hlt jmp cmc fs pop lcall or sub sbb push pop xor cmp fs or inc es add outsb lret pushf outsb (bad) popf xor loope and sub movsb (bad) jmp inc (bad) int add adc imul pop das int in cmp cmp lods fcmovbe cltd lret mov data16 pop or xchg cmc lds cli adc push mov addr16 xlat stc push xchg or inc or or pop sub jno out add outsb ficompl jne xchg and add and add mov mov out lahf push (bad) pop mov les jmp and in call leave inc sub add sub xchg out sbb sub pop insl imul add imul sub xor mov mov pop xor xor pushl js inc add mov dec jle les scas sub add out pusha xor pop sub in cld (bad) mov push and repnz add ret sub mov mov pop adc std aas out add cmc hlt outsb sbb xor es mov pop push movsl jl (bad) inc mov das jle in cwtl mov imulb out pop loop jne scas xchg jle and sahf jbe push imul repnz mov or jl jecxz inc push es push out pop and (bad) popa int pop outsb (bad) lret mov mov mov lock pop and rclb insl mov dec out cli nop push and movsl sbb (bad) je adc or in sub xlat push cmp (bad) xchg out cmp loopne jmp and ds mov jge pop jle pop cld sbb add (bad) sbb cmp dec loop push outsl nop pop mov popf xchg std cmp ficomp lret cmp jne cmc imul sub inc xor shll pop int3 out (bad) enter mov fsubs sbb sbb cmp lret pushf dec xchg pop mov jne or inc dec test dec xchg jmp shl enter add ljmp cmp and xlat movsb xor cmp movsb xchg xchg shlb adc sbb or fldt out sub push pop sti mov pop inc cli mov scas pop push stos or mov hlt jecxz and sbb (bad) (bad) cmp imul (bad) jmp inc int sub add push pusha push daa or jae adc inc sarl pop sahf pusha je out jne out fidivr push repz xor sbb cmp jbe inc (bad) mov ret fiaddl sbb gs xor andl xchg lds jbe gs and mov xor dec adc out sub pop pusha fmull mov pop xchg movhlps mov cmp jle sub (bad) cli and out popf pop add rcrb mov pop sub or (bad) push rclb mov iret and sub sub icebp into test clc stos and fmul out divl (bad) out orb jge mov int3 data16 pushf pop inc push pop mov negl dec mov adc rcrl adc or pop fs test hlt test mov pop pop in jae pop cmp popf mov sbbb dec dec cmpsb adc jns aam mov movsl jbe adc mov lods popa mov mov xor mov dec in daa xor mov or rcr rep xor out ljmp cmp jno aas fdiv push mov ret mov mov sbb cwtl and xor sti jbe lods shrb mov movsl adc popf xchg inc xlat out sub dec push ret or mov jne aas imul lahf (bad) mov fsubrl dec pop lock adc cld pop pusha or mov inc push sti or clc mov lret or lret sub adc hlt push scas fs (bad) mov fxch sub outsb movsb out sub ret lcall shr into pop fs nop mov dec mov test mov xchg jmp push mov jo nop sub cmp jp xchg lea out and popf lock mov inc jo cltd and add lods xchg (bad) push shrl loop sti push imul pop (bad) cli clc aas sbb shr and fidiv add les xor ret or sub test jnp and cltd mov and iret out jns (bad) divb or mov jg repz (bad) rcr jmp fwait mov sbb pop imul gs (bad) (bad) call nop dec mov call test push push mov mov outsb cwtl sbb xchg (bad) loope sub (bad) pop icebp stc movsl js dec jmp mov shr into mov xor xchg clc stc movsl mov lret lret call ljmp out mov data16 xlat xchg inc sub icebp jae leave lea mov xor push mov jae sub adc sub lahf in mov out andb sub jl sbb test iret and dec js out jp push stos adc into shrb jmp loope out dec fcmovne icebp adc scas lret jno repz jne inc add stos negb int3 aas or (bad) fimul pmaddwd jbe xchg sub sub ret add mov mov xor les adc xchg xchg scas (bad) aam scas outsb mov das sub push inc adc jno lahf add mov gs clc sbb stc mov push (bad) and sub and cld adc cltd insl mov push lods imul lret fdivrl xchg sarl movsb sbb and bound cmp cmp xor and sub cmp aas sub testb imul xor jno,pn out outsb cmp pop and mov mov push sub push add mov fistpll add add or in mov and or push jp mov and mov fcoms xlat xchg dec faddl sbb cmp repz in repz (bad) push push xor daa inc sub test int enter cmp les adc jmp notl je (bad) sbb fsubrs and xchg inc popf icebp pop lcall jmp sub mulb (bad) cltd adc xlat pop fsubs push lret sbb outsb mull dec dec je movsl add mov (bad) xor clc iret mov push push dec push or idivl dec cmp xor mov lahf jno imul pop jecxz jnp and mov ficompl std mov adc out gs fisttp add pop (bad) and lods sub je pop int3 imul clc dec pop mov fisttpl gs scas sub sub cmp ret mov mov push mov xchg xor sbbl jmp add jmp dec pop lret lods cltd xlat scas xor adc mov mov jle cmc adc add pop clc scas pop sub out fsubrl xchg xchg cld aad pop (bad) or in movsl aam push mov add and je adc test push mov xchg mov repz push (bad) jge or push popa (bad) ds sahf sbb inc sub fcoms aaa sbb notl and loopne test movsb cltd loopne popf dec movsb fnstcw adc test mov push add and fildll mov fs loop rorl push outsb out jo fwait stos repz inc mov mov jg loope jmp add (bad) pop and in xor mov push xchg add (bad) push out pushf (bad) das movb xchg pop sub xchg inc nop inc mov jo dec icebp xchg rcrb (bad) fcmovnbe push in daa test cli arpl sti ret jns imul jno call xchg adc movsb insl jecxz clc jno imul (bad) cltd sub (bad) mov cmc mov or fcmovnbe xlat sub lods out jp mov sub xchg add jne mov outsb je cld sub rcll xor test xchg cmp mov mov aam sub push lcall or or and bnd sarb sbb or pushf xor psubw dec ds jmp jp jle aas repnz mov dec scas das fnop movsb cmc das mov dec test (bad) ljmp or mov and in adc inc scas add sbb decb fdivrp bound out adc mov push fldenv mov insl sar sbb mov mov sti adc insb sub sub jle pusha pop mov jmp leave (bad) aam imul addl jb inc mov jne sahf (bad) imul pop enter daa xor fdivr gs mov jle jp test sarl les push xchg fisttpl pop ret xchg push jb (bad) xor mov mov and sub test ret sub repz xor out mov (bad) rorl cmp fcmove and jl xchg inc dec push inc adc gs clc mov rcrl ss sub and cli fsubrs inc or adc adc loope lret enter push xchg out dec rcll pop cwtl adc mov sub test jns repz mov mov jmp mov xor jmp std add xchg dec imul hlt adc icebp test mov clc mov mov xchg pop mov fmull push push pop ljmp (bad) (bad) ret or push (bad) dec shrl call jle sti adc xlat (bad) jmp fs and imulb lods add cld push mov jno movsl pop and negb mov mov les cmp lret lret sub and call icebp xchg ds pushl sub xor leave idivb nop sub mov cmpsl fimul ljmp cmp lret jl adc sti mov pop lea lahf test xchg in and lret (bad) or sbb ljmp xlat and and adc xchg xor xor adc sub mov add inc xchg xchg outsb lods dec sub dec les clc xchg add inc pop or sub jb sub mov push mov mov popf loope push (bad) and aas or das lock ljmp test ficoml int insl dec and (bad) mov movb shl aaa or sbb adc jne fild and dec lahf jns fs inc mov rorb sub (bad) sbb leave mov fsubrl or aam pop and or testl adc mull xor (bad) shrb cmp cmpsb ficom gs lods inc lds roll xor sub inc pop test push pop jne cli (bad) or outsb inc xchg jp pop pop sub negb sbb scas rcrl xor or add (bad) push jo loope loop mov bound ss cmp popf adc xchg out gs sbb add pop pop pop pop adc ret nop fcmovne adc lahf add jp in stos and mov ret pop or jle pop jns and fist rol cmpsl or test jmp jno xchg repnz lret xor and arpl ljmp xor xor mov fwait mov insl xor ret aam pop call addr16 jno cmpsl push dec leave cmp (bad) sbb inc pminsw es dec iret xor into mov sub jl xlat out es xchg xchg sar out addr16 fs xchg loopne out mov iret sti cmp sub fisubl or rcrl cmp push fidivrl lods jae mov das loope sub (bad) and ret xchg or fs stos mov dec cmpsl cmp jbe xchg mov sbb adc sub push fimull jmp sub repz mov out lcall inc inc jp mov pop ss jmp mov mov call mov aad jb add (bad) jns cmpsl xchg add shrb negb dec cmp pusha (bad) sub mov ret mov or xor pop dec mov push inc icebp xchg push jle sub notl ret and daa rcrl adc dec and and adc or movsb xor mov inc adc inc pop cli (bad) nop or add sub pushf add xchg pop mov pusha pop or mov mov xor mov lods sbb sub mov pop dec lret and mov mov loop xchg mov add and imull test xlat in push push (bad) or lods loop out jne mov or push push pop push (bad) aaa or push fisubl repnz pop or fmull dec testl add sub push loop adc bound mov push int jg nop and push pop pop stos inc add jno cmpsl lock fimull movsbl ljmp (bad) rol sbb in addl or cli jg push xchg jo ljmp fisttp lahf push push movsl cld cmpsl (bad) jo push mov inc jno dec cld dec leave std xor or push aad push test mov and fmuls and jno xor das int add das sub push lea and pop pop fstl shr and adc inc inc jbe jno (bad) testb and stos push ja les hlt mov imull gs xor mov loop or fidiv and fnsetpm(287 nop pushf jmp push fimul inc ror sub lret int cs lods mov mov iret outsl sub mulb out and in mov dec jbe and (bad) sub xchg repnz or push dec ss lock sarl push dec mov popf push dec shll das adc pop fs xchg out mov pushl or mov mov ljmp bound loope and sbb (bad) aam push dec loop fistl mov test sti xchg adc mov daa into (bad) jecxz adc dec mov sub lds mov mov (bad) in daa mov add negb and adc and sub out mov leave and les add lock adc xchg xchg push out aas mov sub test pop mov mov dec xchg xor mov popf xchg jp and sub pop test pop fsubrp out mov mov enter cltd into inc jl movsb scas add stc and pop iret mov icebp or fldcw mov inc repnz jp dec popa adc ljmp xor add cmpsl push xchg rcrb popa stc add cmp xchg pop into cmpsl dec mov pusha pop cmp repz sub repnz popf pop mov xchg ret push push sarl add or jne xor aaa sub or cmp movsl jns int jle adc xchg int3 ss jo or pop addr16 cs pop hlt daa daa vcvttsd2si jle xchg lcall jmp pop xchg push icebp inc cmp movsb mov test inc push xchg mov or xor sub into das sarl xor xchg cld push push jno pop sub push rcrb cmpsb (bad) stc push xor sbb cmp cmp stc jl dec outsl xchg mov mov push and push mov mov cmpsb je sub sub inc call (bad) xor or repnz pop shrl ret data16 aad out dec scas jae rol leave icebp test jmp enter pop gs fisttpl add mov dec ret pop mov sbb jl xlat out adc out and in outsb int sbb cmp adc or shrl movsl and jno and imul sub aas adc icebp and mov ds loop je push pop dec dec sub and mov movl mov sub jbe imul loop add out fldt dec pop xor clc mov jmp add push mov mov and dec imul pop fldt mov fiaddl mov mov mov pop mov lock pop (bad) xacquire jmp xor add sbb clc or ds sbb xlat sub push ljmp and leave pop jle in int and sub andb pop fdivp dec fsubp xchg (bad) xor mov dec mov and xchg ror jns imul or and dec jnp jmp roll movzbl rorl push jmp aam sub cmc pop add sub sub (bad) lahf xchg sbb negl test mov or pop daa sarb xchg out arpl inc sub loopne rol cltd push lret adc cmp jl pop jne jbe ret xor add mov dec div out mov adc daa add mov sub cld jge sub sbb xchg inc and jmp rcl mov push add daa and mov out outsb xor adc out dec lock sub inc (bad) in stos jecxz adc lods cmpsl adc pusha js adc lret push xor out cmpsb stc and mov int mov xor notb nop repz mov lret adc pop (bad) jg rolb xlat and adc sti pushf lods inc or or mov rcr (bad) into negl adc mov mov mul xor data16 fidivl dec adc stos popf rorl mov (bad) scas (bad) repnz lahf mov jg cltd fisubr adc clc xchg xchg enter shr dec repnz mov popf icebp frstor fsin xchg dec or or test adc ret pop in movsl stc push lods jecxz mov xlat scas add lret adc (bad) outsb insl and enter div ret pushl je xor sub mov cmp pop mov es jecxz cmp lds mov out xchg inc lea mov andb aam pop or mov cmp cli add lret add or ret bound fucom mov inc enter jmp iret inc adc pop and mov shrb loope enter jb add xlat xor jmp das fisubrl adc add jmp call inc or xor adc leave (bad) pop inc cltd movsl notl mov popf jnp lods add jmp popa popa cwtl xor xor sarb fcoml mov lret adc bound jno xchg (bad) mov cmc pushf repz ljmp test lds pop sub hlt daa xor jle or nop roll xor ljmp or notb call mov xor mov inc adc in shrb jnp or cmpsl mov out mov movsb xchg or into bound dec push repz dec (bad) mov outsb int sub dec cmpsl sbb jmp iret xor xchg lds ret sub icebp into pop test pop lret std jle call clc adc add mov dec ret pop loopne stc pop jns jge mov dec mov jne adc sub cmc xchg rcll xor pop in adc and pushw mov fwait ss mov ljmp lret call (bad) cmpsb insb sahf mov loopne mov movl in (bad) movsl (bad) push call icebp mov cmp daa (bad) mov daa (bad) xor loope vpandnq (bad) add ret push vmaxss adc mov jp jmp jg divb movsl (bad) call mov loop pushf jl jne stos jg jg add xchg shrl jg enter lret in lods jg test leave lcall add add cmp ret and add imul out and lahf pop sbb ret jp out jmp or or dec cmc repz inc sub or js ljmp sbb faddl or test lcall or dec je mov dec fistl mov inc scas push dec push inc inc cmp movsl sub push jbe hlt mov mov inc adc call adc shlb ret sbb push int3 mov cmp ret in add dec cmp fisubrl mov add lods sub notb push jp lret fldt (bad) in jnp cmp mov push pushf mov cmp xchg in aaa mov out imul cmpsl sub sub lahf jl push and sahf sub pop mov (bad) int insb dec mov loop je rorb std xor scas popf or or enter les iret add xchg mov leave sub cmpsb sbb jecxz lret (bad) daa call and pop rorl movsl sbb xlat js shlb repnz add lret cmpsb sub fs lods push ljmp inc adc sbb or xchg mov adc outsl adc shrl push inc lret sbb (bad) xor rorb mov dec in pushf ljmp xor dec (bad) and lods (bad) adc jbe add scas cwtl fcmovnbe mov xchg jmp pop out mov pushf bound jns jl ret xor and or int3 lods jmp sti xor pop mov cmp stos sub mov sub push and ret push int int3 rolb fwait les cmp xor or ja mov neg inc loope mov dec fdivrl and std xor jmp or shl je push ret mov pop mov jb push mov icebp adc dec mov mov std es jno xchg add pop pop rcll lahf xorb add mov lock ljmp or ret fldt and out dec ret jae xchg add int3 fisubl add inc loop add lods mov and sub mov xlat mov icebp inc add inc cmpsb cwtl mov mov xor add or push pop (bad) (bad) hlt cwtl mov mov scas ds fimul pop sub mov ljmp dec aaa pop or sub mov xchg sub push lret xor ret jns pushl mov in adc dec xchg shll ds push clc pop inc cs cwtl add pop push mov cld and repz jl dec (bad) xchg ret ja dec ja mov xchg cmp and or imul movsb sub xor pop or nop in aaa sub stos dec (bad) popf xlat cli cltd js sub (bad) (bad) shrb pop and push inc gs popa cmp inc cs or mov lods (bad) aam ret sbb xor fstl xor aas cmp or pop addb add add daa push adc or into xor jle arpl pop imul outsb sub pop fldcw mov add jmp (bad) sbb ret inc dec add jne icebp cmpsb das stc jae icebp or add fcoml cmc data16 xor scas aaa popa test loopne jmp cwtl test mov mov mov sarb add clc rcrl jmp inc or sub adc xchg xlat mov addr16 out flds adc iret sub cmp mov dec mov mov and ljmp inc jmp hlt mov jns mov sbb (bad) jb xchg mov push inc jb (bad) pop pop fwait dec dec or mov inc repz jecxz cmp cmpsl xlat xor and inc cli ret mov xor dec xchg and and mov mov int3 (bad) sbb sub and cwtl jo jbe adc xchg push shrl ss data16 push test xlat or (bad) pop roll jnp enter or sub adc clc xor stos movsl int inc roll pop cmp ret mov xchg mov add add cs cli jmp add sahf adc cmpsb mov push xchg mov sub and fsubs orl cmc sbb rorl cmp imulb jp sub mov inc jecxz mov mov fwait xchg pop (bad) mov imul mov sub or rcr mov add gs pop jbe int3 jg jmp xchg out sub das leave push fsubrp pop cmp dec or std jo mov ss or (bad) mov and push mull jg fwait xchg (bad) mov (bad) pop (bad) xor push cmp push (bad) mov dec jmp inc sub mov inc add sti xor call shrl pop or mov out and enter repz dec (bad) mov add test movsl call sub jmp lret xchg cmpsl xchg push aaa dec icebp push jnp loop lret loop pop xor inc inc xchg cmp dec fistpl rcrl dec dec sarl (bad) dec lret (bad) sub mov adc mov fbstp fwait dec lret (bad) lret jmp xor or sub mov dec mul xchg mov out mov sub sub jg test mov neg or pop add mov dec sub mov mov out rep add push mov mov adc mov add add jl fistpll mov mov fbld clc jp push mov inc add stos ja mov in idivl push pop sub push enter sub not push orl sti mov in xchg sub push push mov sub roll or rolb xor adc (bad) pop sub (bad) add ror cmp test rcrb xor clc xor add sahf cmpxchg dec xchg pop (bad) xlat aas push rclb push add mov int3 pop pop cli add mov push mov jmp push mov ds pop xor jp pop mov pop add out test add outsb in jo stos jne mov pop push pop ret rorl push dec mov (bad) cmc sti inc (bad) or pop mov lock cmp pop or mov xchg mov (bad) incl sub fnsave add loop orb dec mov jb cli sub stos orb pop pop push jg or xor pop cwtl or and push mov or pop jnp ja xor lods mov xchg cld movsl dec jle movsl fist and rorb sar and push shr sahf mov cmp xor call push mov mov xchg jecxz mov jbe push jno movsl inc cmp shll ret pop lret movsl lods cs push sub xor mov aad xor out lret jns xor mov mov or pop (bad) xchg pop in and inc test movsl test leave and (bad) mov pop cmp sbb jmp sbb call or aas imull cmpsb or xchg out mov bound into and pop jnp jl (bad) imul in in sub adc dec cmpsl lahf dec out xor rcrb mov mov pop or mov fidivrl mov or test sub ljmp sub stos dec jne xor cmp xor loop push xchg or dec xchg add pop add cli adc shll stc cmpsb jb daa dec lret xlat mov jbe loopne add popf jns movsl push (bad) je pop (bad) in inc xor in dec inc xchg data16 add add and pop cmp inc xor mov clc or mov sbb or mov in add dec cmp test mul pop xor cmp mov dec mov (bad) mov (bad) ja aaa and icebp test mov das ljmp sub stc jo loop aas and adc ja push nop in popf into mov pop inc loope loopne std xor repnz decb mov lods fildl inc push add mov fnstenv adc cmpsl dec sub dec movsb or and stc add lods stos ret sbb aad into mov lahf xchg out sub add aaa fst mov inc add aas jmp cmp sub mov xlat stos jecxz xchg ljmp or ret sti inc out push adc xor mov pop mov aam push push das mov sub loope push outsb imul fildll ret push pop mov stos inc push pusha dec jne adc sub dec enter icebp jg ljmp subl daa gs dec lcall or push and inc sub adc and (bad) fstl fdivs into pop mov das mov in pop loopne idivl pop cltd fnsave sub repnz sub mov push cmp in fs gs xor jecxz inc xchg jl popf fmulp fs or and pop sub jmp sbbb add enter fistl shrl mov icebp pop add dec xor (bad) into or rcpps pop xchg mov punpcklwd outsl ret in xor adc mov pop push cmpsl sbb out xchg push rcll pop sub aaa das adc fimull into (bad) mov dec sar cltd imull jle sbb lods pop jge add data16 mov push jmp push sub adc sti lret mov mov push xor ljmp add mov cmp lret dec test daa rcrl or mov mov push push aad fnsave jno scas dec cltd jmp dec mov or out popa jg ss (bad) mov add mov fdivr mov cltd mov fdivrl or add aam outsl or (bad) cmpsl mov pop sbb leave popf mov lds sbb cmp icebp push bound scas out dec add in mov (bad) in (bad) fbstp mov adc pop cmp and fbstp cli xchg cld std push xlat xor ja jge jbe push push insb cld pop (bad) mov pop add push leave xor shrl cli mov cltd xchg adc decl ret mul aam add and mov stos bound iret push pop insl inc mov fsubs test xor negb ja xchg sbb push (bad) das mov pop cmp sti sub pop mov push adc fnop dec das out add rcrl ds inc and scas je mov fmull xchg or je push fcomip outsl mov test mov pusha or pop jl imul push mov cmp pop mov lret push fsubrs imul sbb out jecxz outsb repz mov or add sub cmp push pop pop push std mov mov in sub repz lods xchg cmp out lcall mov xor sub jp lahf pop mov add mov mov pop xor jb repz push leave adc mov push (bad) push int jmp (bad) xor rclb test push push push in dec push (bad) jg xor stos sar gs pop add aad mov sub adc xlat push lock push clc pop dec and je sub jl push jl add shr or outsl fadd mov xor lea push bound pop cmpb xlat mov or mov mov push dec (bad) jl out cmp inc push xchg imul mov cmc fcomps fistp lds (bad) push ror fcmove pop iret fld push test in add jg scas call sub clc out rcrl cltd xchg out mov shrb sbb add divb mov inc jg pop cltd cmpsl inc lcall inc pop test es xor das adc and (bad) hlt mov cs push cwtl sub xchg pop mov add cmp add sahf mov lcall add dec not pop or rolb adc xor cld in fwait push sub pop ret insb (bad) jnp outsl ljmp in aas pop ret push and push (bad) mov js aas pop xor or (bad) rorb lcall dec mov and clc push mov pop repz jp popf push insl int outsb mov dec and scas iret cmp clc pop ss rcll dec xor mov imul rorb adc (bad) push pusha popf call out les pushf in fmuls shll outsb shrl add shll add and shll mov clc data16 mov dec xor in xlat inc lea insl add aas (bad) rcrb mov xlat and (bad) cmpsl jbe (bad) xor lea popa in jp gs inc pop jbe add mov into pop out je (bad) mov pop mov sub or mov dec test repnz jmp xor lds (bad) xlat push xor jmp adc xor push cmc dec xor xor jecxz sub aam into aam adc and in pop jp xor or ljmp xlat inc in cmc shlb sub stos inc movsl mov mov lods push dec mov das insb icebp inc xchg es cmp and rclb inc or inc and pop xor ret repnz pop add add sti xchg out mov dec leave sbb jg push sub out lret mov jb dec cmp lock clc pushf les adc lds loope pop cwtl xor sti mov cs inc mov push sbb repz out jno dec jg push lock sbb jl bound add js xchg mov decl pop pop xchg dec icebp outsl mov pop (bad) enter xchg rcrb out cmp mov imul add fsubrl test pushf mov lret insb dec and and je push inc add fs pop enter sbb or jp push cmpsl add cmp jecxz repz xor jecxz sbb fbld sbb pop jmp cmp mov mov pop (bad) sbb jmp and pop jne and fs pop mov (bad) mov clc outsb mov imul int3 rorb pop (bad) mov cwtl (bad) pop push repnz lds into out mov add iret sbb or icebp lods xchg imulb mov push loope adc lea ret out add int3 mulb rcrb mov lods jle mov sub pop js imulb call add and into cs sub xor (bad) faddl and push int3 xchg xchg push push pop (bad) out adc add call (bad) dec jp iret dec push bound cmpsb pop popf adc mov leave cs push sbb insb rorb inc repz xchg jo dec cmp outsl int outsl (bad) stos aas inc repz stos je adc mov pop pop and pop adc sub and test stos mov cmp jns inc jecxz and rorl sti mov sub stc push xor add jmp les push lmsw or (bad) pop cmp jne sbb dec sub dec sub ret nop inc and sarl mov xor lret loop fistp dec aam lods cmc xor sub jge cmp pop icebp mov inc dec sub push das sti data16 sti rcl mov pushf lret out fnstcw sub daa pop stos rol lret inc push mov fldt aam push sub dec cmp fs pop dec test inc cmpsb adc inc pop mov in mov lds fstpt jne add adc mov mov dec loop xchg adc leave inc cmp dec nop and cmp (bad) mov pop mov xor sub cmpsb inc xchg icebp sbb mov loope test (bad) mov (bad) cmpsl inc or and (bad) rorl gs popf mov mov cli je gs jnp dec (bad) pop mov push test jg inc mov mov mov cld es outsb push xchg inc dec aas mov (bad) mov sbb jle shr (bad) add cli fs clc sbb jno lfs movsb pop je xor out fs test aaa add aad pushf jmp sbb dec leave in pop ret mov lret inc test jae and mov icebp pop xchg mov movsl imul arpl cmp sbb inc mov adc jecxz adc icebp into popf jle out sarl push (bad) xchg notl movsl cwtl jo out mov stos mov xchg cmp shrb out sbb stos sub (bad) into xchg inc in and les popf dec and jmp pop push and adc sub aam or loope cmpsl lcall or out test push cmp in adc xchg dec pop sub sub das mov fildll xchg sti lods and cmp push dec fist test mov mov jno and mov mov test xchg fmuls test jmp sbb sbb (bad) (bad) sub mov mov loop test test ljmp shrb mov hlt mov ret repnz or adc popf cmp and add data16 sbb pop inc scas adc jmp xor lock add mov dec and sub mov jp inc push or jecxz dec and sub and iret mov sub repz push iret fbstp sub pop or adc and testl aas or mov mov ret div scas xchg pop mov push add jle or mov lods jmp scas xchg fldenv inc daa ret imul xor (bad) jb xchg ret fistp clc inc divb ret outsb mov or ds das jmp lea sub daa div sbb mov popa aad pop insl push fist (bad) repnz push es in dec ds (bad) inc fdivrl push mov (bad) xor push jl ret in ja ljmp ret jge jg mov lcall cld pop mov pop dec push test repz sti xor lret sbb test jp jbe adc xchg mov pop addr16 repz mov int inc push pop inc add add pop mov jg imul clc xlat mov enter popf xchg ret test sub fbstp cmp shll pusha and pop dec imul push ret dec ds cmp xor mov push cmp bound lea xor xor adc push negl mov lods fcmovbe test dec xchg pop xor stos xlat daa loop loopne jmp sar daa rcll js mov insb push cmp scas sub jb daa adc repnz clc sti lahf push jnp stc xor jbe cmp mul repnz and rcrb add push (bad) sti pop adc and mov mov sbb scas test call dec incl or push call std mov add xchg sahf inc sub pop rorl mov mov out arpl push popa cld push movsb inc fmul pop fdiv imul jmp leave fist notl pusha fs (bad) jecxz adc pop shr stos pop test les sbb pop mov imull jle inc or les inc loop (bad) frstor adc scas sub (bad) movsl dec (bad) xor (bad) ja lds sub and push ret mov inc les gs mov adc fs imul pop and addl roll js idivl mov fidiv imul lods mov sbb popf sbb pop mov stc mov sub das enter or sqrtps mov and adc jecxz jp (bad) cld loopne sub (bad) ljmp lret sub sub daa fnstcw fadd adc ljmp into sub xchg mov jo pop ljmp or loop,pt aad mov hlt push repnz arpl notb inc das mov xchg mov cli fnsave adc sub in add imull mov sbb decl daa pop xor mov shrb pop add sub add fcoml (bad) lods jnp mov jl repnz dec inc or jp incb jp (bad) mov and xchg lcall xor or and enter out mov jle pop test mov inc es imul jmp (bad) jnp iret leave cmp sub cs and mov push imul xor decw mov ja std pop mov push orl mov ret push ret jle push pop jnp es hlt ret imul mov sti jecxz dec stos sbb and xchg (bad) mov fs sub and aad dec xlat adc xor dec aad icebp pop out sub faddl and lods in or sbb es sub outsl dec repnz adc loop mov shll cmp loopne add xchg add or sar jg dec loope push push jb int3 scas mov jmp mov imul sub popa jmp rcrb push (bad) fucom in and mov stos mov sbb loope les jns adc leave pushf jp xchg in mov dec jecxz daa xor loopne sub fistpl je movsl inc scas cmp popf hlt (bad) icebp xor or inc or bound subl arpl jbe lock or fist addr16 jae or inc mov popf pop mov adc pop leave lret push inc (bad) and push out cmp xor inc jno imull dec dec fisubr testl nop adc mov pop clc stos ss jp sub notb daa lret jns dec cwtl lea fidiv stc sbb xchg lret (bad) xchg mov mov out mov movsl cmp sti sti xchg inc rol es ss (bad) mov jle sti add add sbb shr cmp xchg inc pop jl iret or xor xchg cmpsl jbe rcrb ds sub leave cwtl push mov sar jl dec ret scas mov mov dec push hlt mov inc mov std jl dec clc sub add and mull push out imul fldl lret or xor rcr jmp lods fnstenv aas and pop mov cld inc sti je mov shrl mov lret or or scas sbb dec and popf sbb cmp movsb mov add data16 into cmp pop jno ljmp call fidivr mov movsb sub insb flds sub repz ljmp mov out repnz mov out sahf stc or pop or leave mov stc xor lret bound loope rorb sub icebp popf stc cld imul cltd insb ljmp in jmp xor jmp sub xchg sti xor stc outsl daa sbb xchg dec incl and mov mov add lret pop scas adc pushf rcrb push mov push mov lea imul mov jle dec clc xchg mov (bad) popf and push mov (bad) cmp dec out push add into and loopne xor pop mov lcall rcl setge add xor addl ss clc mov mov push mov xchg add xor adc add scas pop fbstp rorl nop or pushf pushl jnp arpl loopne xchg insb mov mov push pop inc movl or enter push mov insl pop repz inc in insb pop mov movsb fidivl dec notb push push push ret jg mov xlat pop xor push xor or cmp into push mov jb push mov pop mov sub mov in and cld mov call jo es pushf dec add push add shr xorb aas lods xor hlt mov mov and (bad) decl mov test add les push jge or mov cmp (bad) or inc pushl rclb (bad) mov or sub ja push pop jbe mov incl addl sub mov dec call loop aas cli jmp out add fidivrl add sub xchg in sar popa adc sar sub enter add mov mov mov push xor mov xchg push pop mov (bad) (bad) fcomps or pop jle mov cmp mov add call sub dec test leave notl mov out adc movl iret sbb sub adc fimul aaa data16 mov call mov gs bound pop rcrl jbe jno dec (bad) cmp push cmp xor adc lret in push test repnz fistl das or jecxz or add hlt leave mov inc es (bad) cwtl push or mov xor jbe dec js pop push lods sub mov push jmp push iret call and rep and push or mov mov cmp sbb pop mov (bad) out push pop call fisttpl iret or mov jo jnp leave sub sub xor in mov xchg or fistp lcall mov (bad) add add jge pop dec jmp inc pop pop xor mov stos sub inc movsb push add pop jbe xor xor fdivs add stc pop lods jbe (bad) pop out adc adc mov notl das pop lret scas sub mov (bad) (bad) leave fldcw shll imul cld mov negl xor rolb into sub and test (bad) push xor xlat jno cmpsl nop lock mov push addr16 out fmuls xor je ret pop notl pop lea gs and sub adc pop in das into imull xor mov pop and bound jmp mov adc test in and (bad) in sub (bad) cmp popf inc push sub adc stos mov and pop mov jmp and add dec lock xchg mov mov mov dec mov jnp pop out scas mov sub sub je in outsb imul sarl test mov adc out mov (bad) jecxz and ret xchg push mov mov scas or add ret push sub mov xchg (bad) fisubl outsb adc mov jl jno jne lret pop cld add into stos jbe lret mov (bad) (bad) roll mov mov xor mov (bad) xor pop add ljmp dec mov (bad) cwtl mov (bad) or std and adc sub lahf and xor leave lock jmp repnz nop xchg mov aaa sub repnz mov mov loope out sub sti or jo call popa leave add repz fsts insl imul aam pusha out mov lods push fs jl pusha incb push (bad) pop lahf cmp std lcall mov pop dec push pop lret sub test jge jp mov movsb and in cmpsl cmp xor (bad) push aas and jecxz dec daa cmp mov hlt dec pop dec inc call ja repnz add pop sub in into lds and dec scas call in pop rclb outsb lahf das pushl pop bswap fs incw pushf jmp cmc xchg in xor sub pop (bad) sbb cmpsb or xchg mov sub (bad) sbb daa inc leave xor mov iret add or pop push mov lds push and inc jmp mov (bad) iret adc bnd test es fidiv jle,pn cmp out clc dec test lods pop xchg mov mov popa mov stos mov adc (bad) mov dec (bad) jo pop jb fcoml adc mov adc into out adc add xchg scas lgs (bad) je lret xchg adc or lcall jp inc hlt sti jecxz jae leave mov scas cmpsb out xor int daa fstl cmpsl push push and or sub jecxz scas iret repnz and pop aad cltd cmp lahf out jno loop jb mov cli push call out xchg mov sub xor xor jo inc xor (bad) inc adc and scas jmp sub pop pop idivl jo lock leave add mov fisubr ja xor or (bad) jnp or push inc xor and and lret mov pop scas sti insl add hlt aam jo dec ds dec nop sub mov test jmp mov xlat inc fdivs pop pop pop call push (bad) adc push sub xlat xor or sub stc movb push xchg inc adc mov pop lods repnz test cmp jle out ret addl scas mov cli bound fild inc call adc jmp push xor dec adc movsb xor inc sbb mulb jns xor xchg mov rorl sbb scas or in pop xor inc lea xor in es out aad idivb lahf jnp scas fistpl push (bad) sub mov jno movsl push in sub aas popa cmp sub (bad) xor inc (bad) imul dec (bad) mov cmp adc (bad) int loop and pop idivb adc test or push and int3 in mov jns imul xchg ret (bad) clc (bad) retw and addl pop sub push and mov mov cmc push ret cmpsb fbld xchg out mov daa repnz jecxz loop mov xor mov sub xchg sub cmp cmp fcmovne xchg sub jmp jecxz dec aad out mov dec adc mov push sbb dec xchg fwait adc mov add jns cli or mov out (bad) xor dec arpl inc jle xor inc mov aaa sbb cmp shlb int cmp xor mov ds out mov and dec pushf (bad) fs mov pop fbstp pop rcr outsl jb pop lds adc mov inc inc inc lahf mov push push dec sub enter icebp dec imul xchg lret clc lcall cltd and and mov mov jbe inc mov std (bad) mov mov add jae xor pop stos xor sti (bad) and dec imulb pop lret les or cmp and xchg and cmp fldl daa jl cmp pushf and (bad) dec rolb add or add push xlat rorl ret cmp xlat pop loope inc sub and cmpsb pop xor and and mov nop or and repz jo jnp lods cmc adc pop test sbb or in in xlat fst add cmp fisub xor push push loope sub rcl mov sub jg mov pusha (bad) sub pushf xchg inc add dec das (bad) decl sub mov mov stos out xchg cli jno or push sub scas rcrl pop jecxz fldl mov dec out aam push pop sub fdivr or jg xchg inc xor push push mov xor ds push dec frstor mov fsub pop out add inc sub das rcr pop jge repnz adc repnz ja cmp out imul test lds fldenv push in daa jge fistpll mov adc das mov (bad) fidivrl movsl add push out mov dec out and cli aad incb pop mov lret and (bad) or leave out sub xor out sbb mov loope fildll jnp fadds std popa rolb scas jno and es js clc fnstenv sub and xchg lret cwtl jns add lds add lcall mov sbb xor ret adc inc mov xchg mov pop mov dec popa fidivrl adc and adc je push hlt popf dec std das inc popf dec sub dec mov loope (bad) jbe adc pop cmpsb jmp out sub icebp mov stos sbb inc mov in loopne (bad) mov push mov mov pop movb pop jno sbb dec dec xor mov out sti inc adc sub rcrb lods imul ja movsl xor incl pop sub scas fadd adc lcall mov popa dec xor and jns mov (bad) dec jo push jmp ret mov jge fidivl push scas push jmp cs fadd (bad) lahf leave jle fs mov jmp add lcall cmp dec fidivr call add cmp add aam imul into sbb inc xor les mov lret dec mov call cmpsb push xchg pushf xchg mov loop repnz jmp ret out xchg lret fstpl adc push bound pop shl cmp rcrb cmp mov or (bad) xor es xor (bad) sub imul xchg ret pop or fcoml mov movsl popf mov aaa in dec dec mov or or xchg lods xchg cmp fisubrl mov (bad) or sbb fldcw lret mov cwtl rcrl or pop sub fstps push inc inc prefetchnta aas cltd xchg movsl arpl loopne add inc and add sub jbe xchg lods stc jo pop sub stc xchg or sub pop int3 push mov cltd push push loop imul push (bad) cli sub rclb add mov xchg mov repz dec add xchg jmp mov lret or jmp dec add lcall out xor add fs xchg lods aad lea add pusha mov movsb xchg pop xchg xor sti push imul ja inc inc cmp jecxz adc sbb sbb mov jmp pop repnz das sbb jle mov jge inc add rorb and popf fisub dec rcr xchg lret and or jg pop or int3 cmp daa stc mov and sub inc out and push or sub sub test mov cmp leave scas cltd cmp loope xor and test adc mov or adc mov xchg pusha lcall xchg (bad) mov mov mov sbb pop pushf add inc sub cmp jbe xor mov mov mov pushf mov icebp xor fstps js inc pushf call jmp or xchg daa cmpsl pop test fidivl ret pop test dec cltd dec sub sub loop mov or mov add int into pop popa sarl sub rolb jp imul mov mov cmp jo daa mov aam outsl or loop push in adc sub decb (bad) pushf rorl lret or ds pop sbbb xor add adc sub sub negl loope and or aam dec sub out lret iret pop sub mov out rolb inc ficomp sub call in push pop dec mov fmull sub out push sti mov xchg mov scas lock leave xor add sub movsl movb mov aad xlat dec loope sub dec push mov js xchg in in or mov in repnz xchg dec xchg std popa mov add xor into scas dec mov (bad) sub in leave add out push dec add add jne xor and inc add mov lea lock push mov pop cmp cli and out and cs mov gs adc mov mov and fdivl jmp mov cmc sahf push (bad) mov outsb out pop xchg pop jmp gs jb ret mov xchg push dec aam (bad) pop inc mov popf jns push and add push dec add cmpsb clc sbbl push add pop jb repz das stc daa inc and mov icebp add cmpsl dec cli and idivl aad loope inc cmp lds mov (bad) out outsb cld jge call insb sbb or das pop movsl sub sub fbld test aam xor add push sub jne notl shrl xchg adc in push (bad) repnz insl and ds jbe iret mov test xchg dec mov (bad) js je movsb test into mov xor mov ja xlat pop jbe mov js or dec repnz lret cmp xor popf faddp arpl cmp out push adc mov enter cmp or cmp movsb cs lret in and fstpl push pop fnstenv xchg add lret pop and orb movsl fisub call dec fist dec ret push mov jecxz xorl stc notl popa pop jnp in int3 test incb or test popa and outsl add add push jae mov sbb jg or stos fsub (bad) cmc sub fdivrl dec xor call lret pop fsubs push adc iret decl mov jae add push rol daa cmp hlt mov pop mov add out mov dec js in lret mov cltd mov out aad int3 movsl cmc xor xor (bad) fcoml (bad) pushl aam bound xchg je push sub xchg fiadd pop jg (bad) and sub xchg mov loop (bad) clc mov (bad) and and loop pop insl cmpsb scas fnsave repz fidivrl lret fimull mov push fdivrp jmp and mov je stos call push lahf push mov rcrl mov sub fstl popf cmc in (bad) sbb inc insb adc mov pop leave push lcall xor inc outsl cmp stos bound sub ret popf adc lret dec std mov mov call stos js xchg push (bad) call and cld outsb push push ds cs or mov adc and sub mov or lea pusha shlb divb dec sbb pop aam dec xor sarl fbstp dec (bad) test dec out pop iret and dec dec mov dec mov add jmp xor fildll mov xchg inc inc push adc popf inc ret adc add pusha incl insl fucomi fs xchg cmp int3 lret cld pop loop stc aad rorl mov or in pop mov ja imul punpckldq or jmp cli dec mov or pop xchg adc aas or pushf inc sti add and jl or ret and and xchg lock lahf fcoml jmp lea or mov sbb mov gs xor (bad) mov shlb out push jmp cmp enter cli xchg jmp pop stos iret mov sub inc inc sbb pop mov sub and movsb lret adc cmp pop cmp push inc push mov pop idivl imul cmp (bad) fcoml mov lret sbb clc pop (bad) mov daa loop inc inc push xchg out mov jle add xor (bad) aaa scas pusha aam add (bad) xor sbb adc jge add mov jg mov out test mov fldenv dec inc or aas gs sub pop push movsl cltd add push ror xchg jmp jne out scas push test xor mov mov mov imul inc cmp dec xor mov sub xchg pop int sub mov push xchg clc cmp call outsb (bad) add or ret pop fsubs mov push mov pop xor mov push or in and inc sub sub sarb aam push adc push cmp inc je cld imul (bad) dec jns push sub dec lea jnp insb gs out fsubs pop sbb jge mov mov lods mov adc mov testb ret popf dec mov out daa jno pop (bad) push icebp mov mull jno xchg out dec iret push jns dec ja xchg inc dec mov lds and and das push or das ret popf adc popf and sti dec lods stc xor je call mov inc lret sub cmp loop cmp in add ret adc and or push sti fwait sub loop in and lret fcomi mov fstl inc xor (bad) dec std mov loope das sub cmp testl ret jmp mov das pop arpl insb lods mov das add cwtl pop rorb out pop out xchg out ljmp pop adc cs push aad fs and jmp stc (bad) xchg shll xchg je pop cs call mov pop lds xchg clc xor notl mov dec pop jmp stos test movsb mov or pop aad sbb push fstps jl mov outsb mov das push mov xor out push xor popf shrl and sbb in (bad) insb add dec pop adc ljmp and mov push out or clc mov (bad) ljmp mov add std xor and enter subb ljmp pusha xchg cmp jbe or (bad) idivl or mov repnz (bad) xor sti lea lret outsl out or cltd js jg cmp cmp xchg xchg mov mov rcrb loop imul cs out out add xor test sti sub dec and inc inc inc or pop xchg popa arpl fidiv test je sbb xchg lret mov repnz inc push and jbe fxch sub push ja sub or ror xchg inc jl cwtl das std xchg push mov mov xor mov sub sar loopne xor rcll out inc mov pop repz jnp cmp sub addr16 pop lods rcll mov and pushf xchg (bad) sub outsb pop jp add jo jne stc push mov fistl push sub add cmpsl push daa pop lock shrl add mov ds div mov ret fstps add cmp xor icebp add mov mov popf adc cld cs stc insb test inc scas sub or sub lea sarl (bad) (bad) sar sub push je jnp fdivrs popf xchg lret fnsave gs jns scas (bad) jb aaa out dec mov jle mov mov xor lahf jb (bad) mov ret jns dec ret mov jle dec cmp jp sub repnz fwait imul mov fcoms pop (bad) mov decb xchg in sti (bad) mov jmp and push mov ljmp or mov sub jg lods cmc or ret sub adc mov dec mov jmp ja movsb lahf mov cmp mov mov add and clc push and xlat test jno or push icebp mov lock lret mov sbb xor negb or or aas (bad) mov (bad) or jmp (bad) out and or clc xor xor mov test mov mov sub dec shrb and insl xlat bnd fadd add or or push je in mov jecxz jbe push adc outsb mov cli pushf repz sub icebp mov add sti enter fimull ret stos imul mov jge add xor xor add test mov mov push pop pop mov pop or push mov xor outsl aaa andl push addb mov lret and and xor and scas popf dec xor in mov xchg stc add adc rcl icebp insl dec icebp jp xlat loope sub inc or mov or or imul (bad) aad pop gs (bad) lds sub jge shll imul add push xor ret lods lods and mov cmp test icebp mov movsb sbb xor xchg fisubr das cmp pushl cld jne scas adc rcll rcrb mov mov mov pop jg jae add jo and xchg aam jmp aas xor or dec mov jmp pop mull xchg (bad) stos lret pop xlat or or inc (bad) cmp imull iret mov cmpsl int adc and mov push or mov pop or adc fistpl std jnp jg pop stc push (bad) icebp pop test movsl out (bad) lret jns insl sub fs lds call and lea jle fstps push xchg test add ficoml sub ret (bad) sub pop adc mov test imull add hlt cmpsb imul clc std pop sbb jns xchg xchg sub adc mov pop outsb insl add mov add adc jb xchg das clc in inc xor aaa sub imul in sub inc or loop xchg in aam scas lret movsb dec mov adc adc mov out and xchg sahf push (bad) mov dec pushf pop add mov cmp inc and divl cmp hlt enter xlat imul push push outsl mov pop test mov push jl mov jae movsl pop cmpsb dec (bad) mov cmc xchg (bad) and and sub mov xchg loop mov incl pop out pusha push mov loop jl leave aad jo sub fcmovbe push mov stos jae data16 mov fsts add cld lahf movsl ja or sub mov std xor call jns pop sbb lahf fdiv xchg jnp daa jo clc ljmp fidivr ret lods xchg mov pop mov sbb cmp push out scas sub inc mov jno movsl les fistpll idiv and sbb jmp int3 rcrl mov loop or push push ja push testb mov ret jge pop pop movsb mov sub outsb lret pop (bad) repz test bound jecxz adc jmp adc and push inc (bad) push fisubr and loope xor mov add xor ja inc repnz push add ret dec jb icebp pop dec inc dec ljmp cli lahf xor jmp mov sti pop add mov ds test pop loope outsl (bad) les xor cmpsl es cltd xchg push mov push (bad) fist cmp dec push popf out daa call ficompl mov xor cld les je lea add add mov lahf adc add mov fildl loop inc rcll addr16 movl pushf xor mov push out mov sbb cld xchg push (bad) dec dec lods bnd add sub cwtl outsb mov xchg gs pop push jmp mov fcomp push xor insl pop lahf cld sub and insl mov movsl mov pop sub dec sbb or cmpsl sub popa xchg (bad) ss sbb xor xchg (bad) test movsl mov out pop cmp cld sub pop adc and (bad) pop (bad) stos sub sub push pop sub pusha lea push es ss mov sub shrl pop repnz xlat out (bad) mov or int3 sbb repz outsw scas mov cs sub cli mov imul aas clc sub out in sub mov jg int3 dec push mov and mov fstps jno cs pop and push sbb mov (bad) adc test xor mov ret and testb cli mov mov pop out push lret cwtl movsl (bad) fucomi mov jo dec sti mov xchg mov sbb lret add adc fisub adc das (bad) int3 cmpsb and mov rorb mov xchg and (bad) cmc loope cltd sub push sti sub out sub xor lods xchg (bad) iret pop loop xchg cld dec mov pop stos xor mov dec dec cltd mov mov pusha sub add xchg xchg movsb movsb xchg cmp and mov call mov int3 clc dec cmp shrb adc mov and nop out sub mov cmp lods or inc or movsl fnop movsl mov pop mov and sub dec and sub push jno testb adc repz adc pop xchg outsb (bad) add xor js dec mov dec pop sub repnz pop xor sarl push or xor and mov pop repnz jecxz popa and push pop das or jno dec testl xchg sahf jb pop sti call cmp mov xlat sub fistp dec dec mov clc mov ret xchg loop cmc loop cmc in scas (bad) xor mov mov xchg enter mov pop cwtl daa jno xchg jmp add sub mov mov mov popa or xor push push (bad) iret imul int3 fcoml xor data16 fstpt fcoml mov fstpl mov jo xor cbtw pushf pop lret ds dec in and hlt or in fwait push sub or mov les fildll popf icebp (bad) fsubrs sub adc pop pop test scas pushf jae xchg dec sti rclb mov dec cmp mov xchg xchg sbb rorb and inc ljmp sub sti mov ljmp xchg dec in (bad) jecxz or dec add fs mov sub imul mov cmc pop shrl insb pop mov and adc cli inc lds and inc loop jg lret lock fdivrs mov mov or (bad) imulb xor adc lcall (bad) imul or stc fldln2 mov fist imul jns loop in cmp jae,pn clc inc movsl ljmp sub leave mov mov icebp push cltd mov mov or sub pop add xor xor mov add mulb sarb mov loopne add sahf cld or sub mov jp mov push cld into je add loop dec xlat hlt and mov (bad) or jmp aaa mov cwtl insl xor or push push das sub mov call sbb ljmp (bad) jbe push pop lea fsincos mov pop stos and xor xor outsb dec cli cli mov and gs testl add pop mov jmp jle leave jge int imul xor sbb (bad) and ret mov ret xchg fidiv push loop jne subb out mov pop xor and pop mov cmp out sub cmp cmp pop pop cli dec cmp ss sub sub cwtl fisttpll std mov ret and es cmp adc add and lods ja cli sub mov mov cmp sub test dec cwtl cltd xor popf jae pop cli mov fstpt dec out pushl mov or jmp jmp movsl cli sub hlt mov repnz fs sub or xchg inc js push sub jb push cmp xchg add or mov adc jecxz sbb enter pop mov stos lret and sbb das pop sub and sti fs repz mov jb pop test pop jae add ret mov aas lods sahf mov pop adc rclb sub lods mov cmp stos lea push repz dec sub mov ja clc inc pop (bad) sub mov mov lret dec ljmp outsl adc call jns leave mov dec jecxz xchg out adc ror push xor mov jp mov xchg hlt aaa jecxz rorl mov mov fcoml pop mov xor je adc jge xchg pop sti xor sub jno add ds mov repnz add ljmp repz outsb out xor fiaddl testl push (bad) jbe in or jge jo ljmp mov dec push aam push xlat dec and jno pop fiaddl popf lock rorb xor (bad) cmp add sub mov pop pop cld mov inc adc aam add sub xor sub sahf pop adc cmp call xor (bad) hlt mov fwait (bad) inc xlat jecxz push and adc mov dec inc xchg inc subl js int3 mov and lret cmc inc mov cmp xor or aad aad jle and sub cwtl es rcr dec jne (bad) dec div and outsb out mov pop insb shr jbe test fnstcw ja xchg movsl imul loope in and scas mov and lods push (bad) inc loop out loop xlat xor dec lret (bad) pop mov xor mov icebp sub loop je xor xor and test and jmp xor faddl icebp pop and divb data16 nop (bad) mov cli enter xchg jno xchg mov (bad) lods test sub mov lods jns add or leave mov pushf xchg fldenv adc (bad) mov mov pop and sub and adc pushf test leave out add and push add sub jge std mov daa xor (bad) mov jbe das lock pop pop mov or push std into cld add lret jb push scas mulb js ljmp mov fldcw mov pop add cli xchg mov cmc pop sub cmp xchg (bad) (bad) aam cmpsl dec mov dec inc mov hlt das adc scas jecxz xchg mov push jle add xchg dec mov or cmpsl in stc sbb movsl shrb cmp sbb and dec negl and or add sub or out push jb xor dec jecxz sub sti mov das fstpl scas mov data16 add cmpsl sbb jg push inc inc shlb jne push cmp xor pop into mov cmp gs xchg fsubr xadd aaa sub sub push lahf mov sub out aam mov push pop negl nop out mov jg shlb xchg (bad) sub sub push cmpsl jae pop sbb out hlt or cmp sub into test pop andl dec out out pop jmp and pop insb or scas je call lret cmpl jb mov and or sbb ds mov divl mov sti adc cltd jns mov nop test roll inc testb iret mov xchg dec js pop sarl and ror push pop jle xor ficomp push in imul mov addr16 and dec jge lcall cmp mov das jecxz mov or add or mov or dec lret xchg xchg adc pop or (bad) sub mov dec adc sti movsb jmp xlat mov cmp xor mov stos pop loope xor clc (bad) cmc (bad) div into or and fsubl jo loope imul push adc leave lea jno cs bound mov and push mov aad and xchg add jl xor or add mov jmp (bad) pop ret push ljmp (bad) leave icebp cmc inc insl es mov adc and mov (bad) or or ds dec in stos pop out dec in insb add fcomp ljmp dec (bad) adc adc sub call jno ret leave leave into leave enter fchs inc jecxz (bad) jmp cmp sub ret and fistpll inc xchg scas bound test or inc or push ret dec ret fstpl stos mov mov or mov pop mov encls xor mov mov or adc cmpsl xor or imulb call or push add and ja rcrb pop out pop repz or (bad) shrl dec ror sbb repnz xchg fldenv xchg div leave dec pop pop lods jne push xlat ljmp sti test or cmpb lret and mov stos mov pop sbb clc mov movb shrb jns (bad) xor xchg iret push cmc push rorl mov mov imul mov pop add adc add add xor jle imul push push mov imul ljmp xorl rcll add pop and ja sub icebp cmc sahf enter daa iret sti outsl add fldl2e add mov jmp mov pop xchg pop subl sub out and mov inc pop push mov adc mulb pop jmp add mov lahf push and test int xchg loopne stc daa dec push jl test mov (bad) mov push mov jl add out shll jo (bad) sub (bad) pop jnp push gs dec inc xor mov inc mov into pop xchg pop out add mov ja sahf or cmp jmp mov sbb push out mov (bad) add pop fbld dec push stos lret flds arpl sti add dec pop fisubr add push add and jp add cmp jbe and ljmp dec sub (bad) pop ja xchg idivb add dec pop add pop add push mov xor jl fsts xor repz and rorb addl sub hlt sahf push sub or outsb insl js repz leave in pop and scas adc push mov loop loopne mov xor and inc out call loopne sbb neg bound or xor test test or push fdivs push pop add rol push bnd mov ss jg and xchg out pop fwait add sub xchg xchg idivb pop mov (bad) jne int3 sub and jmp sub mov pop jmp inc xchg scas fst outsl test cld or lret mov imul lret cmp mull fisttp (bad) (bad) outsl popf or enter push pop jb mov mov out leave add push fild daa inc jmp push das roll ror mov bound icebp push fprem xchg add push (bad) bound push repz and int3 jae repz add dec jg mov out adc and xchg xor jecxz popf adc dec and add adc add dec repz cld xlat lret testb aas dec ss dec dec or clc jle add scas data16 xchg xlat xchg pop jl pusha icebp mov mov leave push and xor dec sbb movsb (bad) outsl xor mov push mov imulb inc jg sub aad aaa mov cmp xchg repz sub mov xchg pushl (bad) jmp inc or repz push push jp sub and ret outsb mov xlat fdivrs add push push sbb xor call mov aas mov sub (bad) lcall and int outsb int js pop test out das jno or jnp adc xor pop cwtl dec mov mov sub xlat mov xor inc mov in cltd xchg mov dec iret (bad) lcall dec enter dec stos (bad) sti and push cmp and xor dec or or test mov push negb clc in mov les lret fdiv insl sarb mov and lea sub and movsb popf mov (bad) xchg add pushl add fild stos jno in xchg mulb mov int3 sahf daa iret add fimul push loop xchg lds outsb out sbb add push pop mov out daa mov add mov dec lret xor pop into mov incl rcrb xchg mov dec test js (bad) or dec (bad) je out push pushf xorl push repnz xor fxch cmp adc or mov mov add xor sub les rorl mov sub lods pop sahf rcl push (bad) rcrb adc or sbb subb aas sub stc jmp mov mov sbb in mov arpl in push ljmp lea lret xor and xchg pushl inc xor and cs cmpsb dec sub and dec push sti lods xchg ljmp into (bad) sub xor xor xchg out fnstcw loop,pn fdiv pop (bad) or or loop mov sub dec dec sub mov scas icebp scas dec test fs mov push imull repz cwtl and cltd stos lods pop and mov mov and mov jp lock in jp push jp mov dec inc sub dec push push stc adc fmulp movsb and call repnz lahf cmp push dec or and out mov out mov daa sbb call mov xor out (bad) pop ret adc cmpsl xchg cltd popf fimul stc xor xor imul fs std in inc xchg loope fisubrl data16 repz (bad) lret (bad) loopne or jle push jne add and cmpsl add stos in or icebp out or sub cmp mov cmc pop xor adc stos je out (bad) push mov add adc cmp ret inc sbb stc aaa mov and pop or (bad) mov mov dec push or pop mov fsubrp or sub je dec imul mov xor pop bnd test ds inc outsl lret jl out dec and movsb mov stos ret jne or jl and dec xor cmp movl mov sub (bad) push leave and das jmp dec xor scas mov mov mull movsb adc mov mov xchg out leave push sub cwtl cs sub stc dec daa popa xchg iret out dec mov fsts cmp hlt cmc push pop es pop je mull pop negl pop (bad) or mov or addr16 and sti ficompl cmp cs mov out cmpsb pop xchg call jmp dec mov jo cmp xor xor pop cli imul pop cmp add (bad) cld push ficom fistpll rorl in test adc lods pop hlt mov mov into in cmp or or subl pop dec cld cmp test lret out mov into movsl outsb mov es xchg fisub xor push sbb das icebp (bad) mov cmpsb push jns test or adc test sub mov jb sub adc popa add lods push and mov or mov dec aad pop shl sahf outsb sub mov mov push je in dec das xlat dec sub sbb loope sti sub fldt add pop insb nop mov sbb (bad) arpl or mov jge lcall mov rol sub push dec push popf fstl pop or adc in xchg orl jmp je int3 adc decl sub adc push mov pop pop pop stc shlb mov adc incb sub xor rcr adc or fnstcw mov mov adc shrl in adc mov cmp (bad) cmp xchg into inc or repnz push xor push outsb divb aaa out ret fsubr and xchg (bad) jecxz adc (bad) mov pop or mov dec and mov sub outsl das and jbe jmp mov dec inc (bad) or fs imul cmp mov pop fwait lock xchg and sbb leave push loopne,pn into cmpsb xchg out ret cli push in jmp mov xor mov inc pop mov and pop std push xor rorb loopne aaa or dec sbb xor les xlat jg dec pop jmp addr16 rorl lahf adc std add jecxz lret push pop add lret sub pop cmpsl in test fiadd rorb mov mov add (bad) lods (bad) idivb jbe xchg sbb fisubl pxor xor inc icebp jns or out cld dec fimull dec sbb outsl iret cmp mov pop and (bad) hlt ret aaa shll test (bad) push adc (bad) fldt xchg andb int3 cmp icebp loop fldcw add inc and ja notb fmulp arpl rcll jno inc cmpsl jbe test mov aaa inc pop dec pop ja add negl mov pop test lret divb add jl (bad) repz pop sub xchg xor movsl xor jnp xor loope mov sbb push rcll stc rcrl pop push scas and pop push mov insb add (bad) jl adc test pop xor fnstenv cmp nop add xor sub jg shr aam mov inc inc mov mov xchg jl inc push stc in fwait pop lahf push mov adc add add pop sub rolb push push pop and inc mov sub stos int jle add add adc ret add lret out lahf (bad) ja xchg jnp scas xchg pusha imul fstl or in int3 lods pop hlt loope aad xchg push ret sbb mov or inc dec fsubs jno dec outsl sbb sub pop dec push or addr16 jle dec or sbb add mov daa pop add adc ljmp rorb aad mov ljmp push or sbb pushf mov adc cmp dec add pop cltd ret xor hlt xchg mov adc out mov imul movsb out jo or movsb xchg sti mov inc dec fxch mov test leave (bad) jg int (bad) xchg add mov or pop sub cmpsl rcrl or cs lret jecxz mov int pop out in sti mov in in (bad) cmp (bad) dec lret dec pop xor imul add frstor repz leave out push bound jne jb xchg cmc push xor repz test push out adc xlat sti xor scas into (bad) adc pop dec mov out mov mov outsl out or pop adc fdivr add lock and jns movsl nop lds clc sub xchg loop jbe mov sbb cmpsb adc out std repz test mov mov dec xchg xacquire or fdivp rol add push inc jns dec xlat mov (bad) outsl les nop pop and fild add cmp in and out sub lcall rclb lods pushf roll sub sarb mov jae or loop sahf add call jmp push jno push push and cs sub or jecxz cmp lret subb cmpsl pushf and and bound (bad) push adc sub lods lds xor rep pop cld ljmp (bad) fnstenv jg xchg (bad) adc jl sub inc dec mov imul xor or cwtl dec jmp test shll icebp sub clc sahf (bad) imul pop out xchg xchg adc and or dec test xchg out mov jb les dec mov movsb int je out roll xchg xchg push jmp or in sub movsb mov fxch sub int3 sub mov push or test sbb add sbbl (bad) gs stos icebp or mov fimull lea jl xchg cld jns jmp stos mov dec icebp pop sub xchg loop sahf adc out jo xor xor std jae es out sub loop mov shrl jle inc and (bad) cmp cmp mov and das ret or or sub ret xor sub sub divb sub repnz std popa mov sub mov sub or or out lods pop ret cmp mov and sub sahf or mov mov pop daa push mov pop push imul ret lahf in repnz add mov sub or leave pop or jmp jle divl pop or jecxz adc pop sub jbe out pop push (bad) ljmp cwtl inc mov lahf rcll cmpsb nop lods dec adcl and mov cmp sub add sarb cmp sub (bad) iret inc and jecxz cwtl addr16 mov pop or fild (bad) lods jecxz or xor push jno imul (bad) mov dec daa add (bad) push leave jmp mov dec push or adc mov xor iret adc add dec aad fwait add repnz pushf pop mov pop inc cmp sub sbb sub xchg icebp es pop clc fimull and repnz scas mov xchg mov iret test sub push xor (bad) aas aaa sbb shrl (bad) ficom pop push cmp xchg aad jge jbe dec push xchg add or sub pop xchg in mov sbb aam (bad) movl lret rcrb add test sarb stc dec mov add mov sti (bad) popa jmp dec divl xchg lret clc mov mov jmp mov fisubl and aad aaa sar insl lock cmpsl fmull push insb add fisttpl scas (bad) push (bad) lret xchg or (bad) lret push push leave pop dec mov pop cmpsb xchg into jmp sub push jnp daa mov cmp inc cmp xchg mov push shl daa jmp xor fidivr lret test and pop mov pop jmp lret adc mov pop fs out popf nop cmp movsb mov xor dec idivl mov mov jnp int3 nop jbe scas dec popf jbe leave jbe mov mov stos loopne lock xchg adc in pop shr xor enter sub std push test pop jp shrb jmp lret inc mov xchg pushf xchg notl scas dec push rol cmpsl pop dec pop (bad) sahf fs xchg shrl mov jnp adc or sti sub (bad) sub fisttpll and decl aam pop (bad) pop pop add push or dec mov xlat scas loop xchg lock and jle das fldt (bad) (bad) adc or test cmpsl icebp icebp mov insb mov sub sahf add or inc movsl push mov push sub je push ljmp add ret cmp push je jmp loopw stc enter xchg push inc xchg jmp and sbb fstps sub cwtl xchg test add xor xlat add ljmp sub comiss mov repz xlat jae das std adc rol (bad) mov pop notl in jmp xchg in xchg (bad) jmp sahf cmp xlat lods aas pop sub cmp shll inc loop fucomi sub sub push push gs in inc sub or jne mov lods gs mov lahf inc lret and jp js fiadd jp and test rcr cmp mov lahf jne xchg pop pop mov and mov mov jb neg inc es pop bswap aaa int dec into sbb cmp pushf mov dec add xor pushf or inc mov dec pop sti cwtl inc xor out push aam mov icebp cmc sbb dec sbb js mov (bad) scas sub cmp and lret xor daa int3 xchg imul or fstl sbb fmul fucom out lret aad fcompl add fisttpll fistl (bad) and sub aas ljmp into das sub push int shrl jno movsl (bad) sub and pop inc and mov xchg fldenv scas fcom repnz and xchg mov ljmp xor outsb sub mov or fisubl lret dec mov (bad) fwait in enter cli sub jnp ljmp pop xor jmp and sub dec mov int3 adc movsb stos popf clc pushf lahf push sbb pop fsubp mov rcl pop mov xchg stos cmpsb test and dec out loope aas in ja stc xor mov (bad) and adcl mov rcrl ret aam insb sbb daa mov add out mov jns lret inc pop pop sub dec xor adc or and adc insb je fadds jge ret stc out aaa icebp and sub (bad) dec cltd loop (bad) scas push dec pop adc xchg rcr pop popf lds out mov (bad) pop scas jo addr16 sub test in call xor pop inc (bad) imul hlt push arpl mov pop cld adc xchg fnstcw mov mov (bad) mov jl dec lock dec sbbl sub (bad) stc (bad) mov jnp dec idivb jbe push sub dec pusha mov xor lret leave pusha std or push es and pop jg add shrl movsb in inc jge sbb imul (bad) (bad) mov popf pop shrb and scas inc push pop int3 movsb mov fsubl pop xchg sbb (bad) dec dec dec mov shrl or ljmp pop jg in xlat stos fnstcw outsb and dec mov xchg xor pushf push and mov jmp imul fsubrl push pop pop mov mov and int3 mov dec fisubr (bad) sub in sub lret and cmp pcmpeqb pop aam imul adc stc dec sub inc subl jno arpl into dec xlat adc sbb mov mov sub add les and out into outsl pop call cli and push in push addr16 adc in sbb call mov (bad) (bad) jb mov adc mov (bad) sub sbb mov mov pop pop iret xchg xor sbb fnstcw popf repz fisubl pop xor lret ljmp mov das push xchg pop pop mov lods into push push xchg cs and cmp xor mov fcoml jge xchg push (bad) add pusha fadds repz mov movsb pop jbe mov sbb pop jae xchg add lret in fdivs dec sub repz repnz xor int push mov and dec mov push pop xor jmp pop sub (bad) and xor xchg jmp call adc test mov sub mov ret lret aaa adc pop adc or mov cmp shll loopne into popf push xor fcmovu push mov hlt repz shr loop rcll (bad) mov pop and (bad) leave stos fldl ret es movsl imull and pop (bad) sub push popf dec mov sbb push (bad) pop cmpsb mov fistp add mov call mov sub mov pop fimull add ret jno stc ss jmp mov and pop adc xchg jno mov or fiaddl sub inc lret pop jns dec out pop mov mov aas cwtl repnz pop and test nop in pushf cmc sub lock (bad) mov inc push and sub adc cmp push int pop xchg shrb out or xor testl jmp jge jle dec notb mov jg mov push mov sti (bad) mov std jo into sbb popa adc sub sar mov rclb or lret jle pop and in aad xchg jle jp adc fist pop fmuls inc jmp pushf sub push lret xor int3 xor lcall out mov cld test mov pop or adc cmp ljmp pop aaa pop aad lods fsub jmp pop pusha fild sbb out jge cmp sub notb negl add lock (bad) xor div pop dec xchg lods xchg pop out lcall add out arpl movsb sti hlt sahf jecxz adc or ret and (bad) aad iret xchg pop gs and movl and pop mov cmc es xchg jle jmp (bad) rclb mov (bad) xchg add stos xor (bad) mov mov rclb pop mov mov xor cli lret sti lret mov and scas addr16 movsb call jl lods jge ss lods scas bound (bad) enter test movb lds repz mov xchg mov rcrb addr16 out or insb push out add push daa jae dec sbb andl jle push mov xor leave mov pop pop push mov add aas pop nop faddl xor cli orb and push cmp or loopne dec mov pop or pop lcall mov xor mov push add jmp push mov jnp dec mov or pusha mov jmp add shlb inc or or mov divb pop cld shrl lods add nop or xlat and add pop ret mov fldcw sub jmp icebp data16 xor mov ss mov fldl2e sbb fwait pushf mov jnp sub lret or adc call adc adc scas and add dec cmpsl pop or xor push push scas mov test pushf imul call xor stos sub ss or mov adc mov lret (bad) rorb test call xor or in jb or jno jg push adc pop and jge rorb push push js in or xchg in pop mov push mov sbb (bad) pop cmpsb adc lock sub repnz rorl dec and and jle xchg cmp jne ficompl bound sub sub andl xor mov inc push das and inc sbb imul (bad) pop lret xor adc pop lock mov jge dec xor pop addr16 adc addl icebp lods mov loope mov lret sub sub inc icebp add mov mov cmp gs jecxz das sbb js jge sub mov sbb jno orl js lret leave out in and sub cld clc lods js pop shr fisubrl iret mov in jmp (bad) imul pop cld pushf jo lret test (bad) xor adc aam dec xor add dec (bad) mov adc arpl (bad) pop xor mov das inc lock pop mov into testl mov movsb jmp nop (bad) jne imul adc xor add push hlt imul imul nop aas cli add push sbb iret dec incb dec or mull mov xor dec pop jecxz adc and mov mov out mov orb pop push inc and ret dec call xchg add or loop or add xor add mov arpl or popaw inc and pop or cmpsb mov inc mov decl xor sti jecxz pop lods aam add lret pop xor popa mov sub ss or adc mov das sub push pusha or add dec pop sbb and popf mov test out sub add mov or push xchg fs pop rorb (bad) (bad) rcr sahf mov hlt push leave in lahf clc arpl mov add sbb xor insb stc iret inc xor xor lahf repz cmp mov call sti sub (bad) sub (bad) sti ret cmp or adc enter push or xchg in mov into stc loop ret pop bound inc push jno xchg ret fs sti lret test sti out pop jmp repnz mov or jmp jbe jbe push ja and sub fldt sub adc dec je repnz pop mov gs loopne adc add and lock icebp fisubrl scas pusha or cmp sub retw test lock xor push pop ret push fsubs or cmp jb adc xor mov sti jnp imul add ret daa lds testl sub pusha xchg mov push xor hlt (bad) or jmp test notl decw cli repz icebp and jne mov xor add and xor test cmpsb repz daa push sti (bad) jle (bad) lods inc (bad) (bad) fsubp mov inc mov sub push xchg lock sahf (bad) push xchg and idivl xlat xor ret (bad) mov (bad) aas (bad) xchg lock repnz dec clc int3 sbb lahf push sub imul adc lahf and xor xor repz call iret adc and lds xor loop dec mov insb and or leave loop sbb test imul dec xchg pop mov fisttpl (bad) mov (bad) loop fstl popf jge jno and stos push das ja and sub push xlat xor icebp push nop repnz and xchg shr cmpsl bound push (bad) cs mov push sbb and or jp mov mov push dec js dec fsts xlat mov call inc jle les jl pop loope sub fildll xchg mov aaa mov out repz rcll or sub mov sub notb mov xlat xchg in and fidivr ds cmp and push hlt jge inc mov (bad) std data16 xchg loope pop outsl mov xor sbb into and jg (bad) cmp pop or pop and dec xor cmp sbb pop mov ds adc cmp mov adc and dec lods lret pop sub sbb cmp jae dec sub adc xchg pop push ss jge hlt and js add xchg and add mov fcompp push add pop and xor aad dec fdivrs (bad) (bad) jae and jp call xchg and jnp imul mov repnz adc xor adc leave int jmp stos fnstenv or subb repz incl test clc in enter scas cmp ret jne pop dec sub jmp pusha decb leave sbb mov mov adc lret repnz jg dec adc clc xor adc test sub inc mov cmp stc outsl dec or or lds add lret out call xor push cli fistp jmp mov imul pop jmp in cmp jo and inc icebp loope dec xor movzwl xchg orl outsl js sub cli pop cltd add mov roll mov jle pop out test sub lcall out pop xlat xchg and push dec push dec (bad) mov sti int3 iret jmp push (bad) or loop xchg mov add test mov mov call inc push sarb push add add pop mov lret pop ret mov and mov dec mov push add negl sub adc cli lock test cmp pop jbe push inc or sub sub movsb pusha cmpsb outsb (bad) lea imul and and std pusha inc repz or dec (bad) in lret es jmp mov pop inc mov (bad) popf decb push bound orl stc loope push inc jmp sarb sub xchg or sub mov mov mov xor dec sbb nop outsl lahf lds or pop xor add add xor mov xchg cmpsb jb or mov inc add lods test mov xchg cwtl cmp clc dec mov jb leave mov popa sub test sub mov jno dec add mov push dec sarl push mulb (bad) cmp and sahf into stos jno push (bad) xor dec sbb cs inc fsubrl ss daa jge adc leave rorl add and mov cmp call sub inc and pushl pop out mov adc sbb scas test xor xlat pushf fisttpll inc pop mov add or push imul out add or xchg and das outsb ja sub mov leave fistp xor daa ret sbb fild idivl mov jp push inc sub (bad) jnp pop ret out mov mov aad scas iret fs jmp mov daa rcll sub (bad) in jmp loope shll out pop testb jo push xor xchg (bad) in push in packsswb mov enter in test and cli rorb loop pop aam out stos add cli repnz mov mov sbb mov orb add mov xchg imul std gs test xchg cmc push icebp mov out rcrb frstor mov and xchg mov in lds sbb xchg jl fadds imul sub xchg xor ljmp daa cmp sub repnz jb lret jg movhps or or enter cwtl push and movsb cmp loope idiv (bad) push je aaa dec sbb movsb mov cltd cld adc jnp mov jmp fstpl fwait mov ljmp lock xchg inc gs stc int call fdivs or pop cmp sub sub subb push adc xlat in ljmp movsb sub nop arpl idivb push enter push push push clc popa jmp cmc insb or roll mov xchg not cmp rcll fisubrl mov lahf movsb scas ret jge (bad) push loopne lret sub or stc stos aaa je bnd pop imul xor mov (bad) das inc xchg aam icebp add scas enter cmp add cwtl aaa or std add lret outsl sub mov les cmpb and test or inc jno shl push nop xlat and in mov lret jge (bad) adc (bad) pop out ret adc push rol hlt (bad) in and lcall ret test sbb pop jmp and dec add not dec les mov mov mov or out xchg rcl (bad) mov push cmp cmp push pop in iret adcb xchg (bad) mov ret neg shrl xchg push gs xor mov ret push mov push sub add pop push (bad) popa or cmp xlat xchg mov add sub add sahf xchg push mov stc sub movb sub (bad) xchg cltd mov in loop mov dec mov sub mov jnp std mov cmp push cwtl push or mov jecxz mov aaa mov int3 or sbb sbb ret rep pop sub stos xor mov jle lret int3 inc lahf fsubrl dec mov xor iret mov mov xchg call pop sti nop test add pop or add (bad) and stos cwtl mov mov pushf dec add ss cmp xor add pop adc cmp and sti lret int3 jp sti sbb xchg mov movsl jne aaa push push xchg fisttp sub cmpsl mov xor dec mov dec and mov mov pop adc subb xchg push mov pop and mov and loope in lock fldt push jmp ja dec push jl imul or sahf scas imul add outsb mov fnstcw mov sub lods insb les fdivp shr or pop rcll jle sbb mov mov pop test cli stos (bad) mov push ret mov (bad) xor add ret icebp aam call (bad) cmp pop dec mov movsb mov outsl mov sbb aaa xor pop loop pushf xor mov jb ss pop pushl sub sbb push push (bad) cmp xor adc loop push jne rcr lcall cltd rcr leave cli jle jb enter adc jp mov lods pop repnz (bad) jmp and and loope fldl stos push sbb inc sbb push add in jg fwait sti ja and repz xchg dec cli jno (bad) or cs je movsl movsb orb add and xchg add test jge mov sub jno inc or pop jg popf out mov mov sbb lcall cli cwtl push aas push sub jg pop push add out test pushf add or mov or into jno mov jl sub xor adc ljmp or scas movsb repnz dec stos cmp ret lock stos mov pop repz scas adc lods mov mov adc lahf fadd imul movsb movsb cld jae add dec popf (bad) fistl movsb push repnz pop add arpl jno fmul xchg outsb bound (bad) out mov fistpl fadd ficompl xchg pop add xchg in cltd inc jecxz mov mov push mov scas sub daa jns insb jl push lahf je mov fcomi lods jb xchg push push sbb int jno loope cs and mov test movsb ljmp ror sbb mov imul sub sub enter xor cmpsl (bad) sbb fcmovbe pop rorb xchg mov inc lret pop roll dec jl cwtl ljmp dec bound lcall push loop add fnsave mov test pop sub jae dec mov inc mov clc stos cld lcall dec xor cmp out xor cmpsl dec (bad) dec fild xor sub add outsb mov xchg mov dec in add xor sub mov das xor xor and sub mov sub (bad) idivl rorl or lret ficom lods push adc (bad) icebp jno dec test test jmp mov xchg std pop call fist shll xor leave jmp mov loop mov xor add aaa pop xor ret jecxz push inc add shrb sub adc lret pop fsubr mov or jne lods or or push (bad) mov sbb mov hlt sub in xchg sub pop stc dec cmpsl jl sub imul out inc sub pushf cmp stos repnz push mull ror idivb mov int3 pop movsw sbb daa cmp movswl (bad) (bad) stos mov mov adc scas or xor dec and mov rcrb sarb xlat loope rorb sub xor push inc scas dec push jmp jmp mov cmp adc mov push call (bad) aaa mov sub pop xor jns incb pop push stc cmp pop repz jne xor shlb pop sub mov mov xor int mov cli or lods push cmc sub (bad) or mov dec shrl sub adc inc or xchg cmp out sub icebp call loopne mov sub (bad) pop push mov jnp rcrl popa ret or pop jbe int push xchg mov sbb imul bound push add mov xchg sub xchg mov not orb inc push push outsl pop shl dec movb sub outsb xor push add add das cwtl call adc sub aam and je pop out or xchg jp ret in inc in fdivrl rcrb insb (bad) inc icebp in pop xor pop ljmp sub add cmpsb pop xchg jns subl push or adc in out push mov sbbl xchg ficoml cs adc sub negl xchg add pop mov inc inc repz fsubrs (bad) cwtl or inc add sub ja add jns lods fsts mov lcall out jmp mov movsl ffreep jbe (bad) pop xchg dec shr mov sbb fistpll push and jne es test pop test movsb mov jbe bound xor sub cld add out mov xor sbb xor sar mov push sub fidiv bound push jnp adc mov popa sahf idivl je ljmp inc (bad) dec lcall push mov pop mov aas test cs cmp xor or sbb out gs adc mov ljmp and (bad) or out sub sbb mov repnz mov pop pop int sub mov int3 jge nop fimull push pop sub mov or pop (bad) push pop jns dec push add out mul adc inc repz pop mov xor lcall and sbb shrb xor push and (bad) sti and sbb and bound push bound ss loop roll gs jecxz dec mov jns gs das ja dec into inc cltd jo lahf xchg sar pop and (bad) stc mov aas and sbb ljmp lcall (bad) xor ret cli movb fsubrl mov aam mov mov sub and das jge insl push mov pop pop add jg dec and adc testb (bad) and cmp cmp mov ja or mov cmpsb (bad) and aas lods sub mov ret lds leave out xor dec xlat or out pop popf push popa mov stos daa mov cli jae movsl int3 mov fnsave into (bad) and xchg out scas das xor (bad) popfw push adc inc dec iret jne fs sub xor test mov lret mov mov lods add stos mov daa jge jns and scas push add (bad) mov popa add pop cmp pop es sub push mov cld xchg push testb (bad) jbe sub xchg divl adc (bad) jg (bad) leave jp test jge xlat push inc imul and jne adc (bad) repz cli ficoml adc cmp test scas (bad) jmp mov (bad) mov cs out fbstp test and ret fstps lret and cmpsl fimull xor mov or clc repz bound push xor rorl ret test push push push push dec push adc (bad) push push out sub lods dec mov (bad) or mov or lahf jne into and xchg pop imul and and out dec cwtl in or sub jbe sub andl xor xlat movsl cli mov pop (bad) and mov imul lret push push int3 imul xor data16 add out je cltd or mov and cmp sbb add insb imul (bad) adc push cmpsl je or mov and (bad) fisubl add cmpsb nop gs pop lret lods pop inc xchg cmp es adc or test (bad) and je,pn lea es imul popa push lret pop sub insl div jnp and ja in jge mov outsl daa mov out xor or movsl dec (bad) mov insb pop movsl scas pusha and mov daa cmp pop arpl xchg xor pop movsb dec mov mov mov js enter adc cli lret stos int outsb xchg ss mov adc pushf stos imulb mov jmp or lock iret pop add mov imul mov in push pop xor cwtl mov (bad) mov clc fyl2x ljmp adc dec lret iret inc cmp xor int sub out (bad) pop sbb xchg adc leave sub leave fisttp push outsb inc dec and adc loope jb,pn and xchg repnz dec and jns orb (bad) imul add aas das cli notl and fwait sbb push mull xor ljmp fucomp loopne pop fisttp data16 xor sbb ljmp add dec pop mov sub pushf pop push pop xchg ret fs xchg push repnz xchg scas je mov sbb sub rcrl les mov pop fsin sub add repnz out and inc (bad) call sub iret andl ljmp (bad) xchg out imul (bad) cld cltd inc ds mov pop ljmp mov and dec inc mov es popf hlt mov mov sub iret xor scas ret push icebp outsl (bad) mulb xchg push and sarb and or add adc push adc add sub push nop pop and aad adcb jle test out adc test mov in sub xchg scas mov (bad) mov add lods out dec mov pop test out push (bad) or test repnz cmp lods cmpsl and pop ljmp sahf dec ret mov popf lret add ds lods sbb inc (bad) sub add sub rol (bad) rcrl mov mov call fiadd clc mov mov enter push cmp add xchg cwtl dec (bad) out pop sbb dec add mov xchg adc mov scas fs xchg movsb stos imulb fstpt mov stos xchg daa cmpsl push dec jmp stos mov inc clc shr ja jg or jae sub mov leave ret lret inc mov and xor cmpsb add push ljmp daa in pop pop bnd fist xchg xchg or ja mov pushf push (bad) sbb ret loop (bad) stos xor scas mov (bad) aaa inc xchg enter cmpsb das je imul ja cmp cmp mov into mov js imul jge fisttpl clc test sbb shlb push sbb sub fnstcw inc add loop repnz xchg stos repz lret and jmp cmp imul repz jns jno inc call fidivl push push std shrl adc push fisub cltd (bad) cmp xor jmp js das ljmp cmpsl adc roll jp addl fucom mov pop or sbb xor pop mov repnz and sub xor aam loope dec or push decb scas mov sbb lahf add out sub dec push popf mov sti xor lret jno rcll bnd fcom push adc and int3 into mov mov jb adc iret pushf lea sub and popa daa xlat (bad) enter popf xlat mov mov arpl mov pop fsub out pop mov xchg xchg lods mov mov dec lods fsubl (bad) in jmp mov add (bad) das adc out xchg fstpl pop scas testb push lods testb mov adc (bad) mov mov fstl test add lret push dec jno push and xor (bad) fdivrl (bad) in jecxz sbb fist jae push daa mov push ds xor push nop push (bad) fbld cs or arpl ds (bad) pop imul ja inc add jnp xchg inc call add push dec add jns or add jl add hlt fistpll out out mov popa inc cmc movsl mov push push push outsb loop xlat mov pop add dec jmp js xchg insl push xlat add mov sbb fist les (bad) loop ficomp pop dec push pop fistpll into lret push cmpl xor mov pop add (bad) sub cmp inc andb ss shr add or gs adc xor sub ja (bad) adc pusha dec ret push stos add push scas mov fs push jmp (bad) ficomp inc mov push ja out xchg sbb inc aas aam outsl in mov adc pop pop pop sub cmpl jmp dec sub mov sbb add pop jl lahf mov pop inc fs test pop mov xchg add mov pop push add lock aam mov hlt xor pop inc sub mov (bad) inc add pop push and (bad) loopne outsl arpl adc jecxz and and cmp pusha add xor jg leave pop cs out fs add jmp ja pop fs mov dec push sti pushf push add out fsubr cmp or and stc fldl mov inc dec dec lods cwtl ficom out stos lret (bad) fsubp jo hlt sub lahf xchg das das (bad) or fcomps lret dec sbb xor bound jmp pop lret adc dec add jle (bad) or lret and push lret repnz or jmp inc sbb stos sub push push jmp mov or rcll mov loope je,pt mov sub cmpl or dec mulb pushl push jg jecxz fist or and or cwtl dec ds pop sub xchg adc inc js sub xor and pop std stc mov insb imul ljmp add sbb cmp lods mov push and cld scas xchg sar test push rorl int3 jle dec repnz inc sbb mov cmp rolb lahf xlat insb mov fs test mov rolb adc or add dec xchg xor mov mov mov lds adc and mov (bad) int rorl mov cwtl or add mov inc (bad) or xor dec ret cld test jbe push mov test iret (bad) jo xor out test and sub add and arpl fcomip ret mov mov fiadd dec pop mov daa out jno inc sub pop cwtl xchg pop mov lret and xor mov int sub pop test movsl int3 or mov (bad) ja mov jle (bad) into cmpb aas sub xor decb add clc mov ds imul cmpsl push outsb dec (bad) sub fidivrl jbe sub mov pop idivb ja and or test das or hlt mov aam lds mov jo fs xor iret or mov rcrl jno sub sub ffree cmp pop mov pop rolb xchg xchg sub test repnz pusha ja or push push dec subb stc mov in push add out sahf xchg push sar xchg sub inc add xlat mov xor in out mov loope lds pusha sub and sub or jmp in es shll xchg dec stc (bad) outsl les lods test and dec incl mov (bad) cmp ret pop push pop jl out stos mov xor xor cmp cltd das je jecxz pop outsl addl lods (bad) and and mov bound mov aam imul and (bad) divl sarl popf fiadd ret inc outsb and xchg or cmovp cmc int3 pop (bad) popf je jmp adc (bad) pop jmp cld imul into sub push ja xlat mov mov jmp pushf xor out sub jg and cmp and mov sub dec push fildll pop push je lock xlat mov xchg xchg stos je and cltd (bad) push ss push (bad) testl andl loope in and int3 insl enter cmp mov cmpsl in lahf xchg jl xchg dec sub inc or jle loope sarb dec (bad) lods out pusha or sbb cli cmp lock jb fdivrs adc sub out popf fimull xor (bad) jmp inc mov (bad) mov out (bad) repnz (bad) aad lds call pop (bad) jecxz ja push fsub jno cmp dec mov lock mov popf push push xchg aam push mov push inc imull push xor repz sub push iret or sbb xor push mov out out lret mov push call (bad) fucomip imul mov add mov dec je jno add cmp cmp cs shlb lret mov add add jne roll xchg xor movsl sti fstpt (bad) mov add or dec add mov and out adc mov or mov (bad) popf xchg xor push mov insb mov stos lret mov lahf cmp cltd call cltd dec fcoms mov aas mov iret sub pop roll gs (bad) fadds mov aas loopne fnstenv icebp mov inc pop stos xor dec push out push dec mov mov lcall fstpl push mov ret push adc cmp push sub add adc lret adc mov aad jnp jl and push cmp test add std xchg loope loop,pt shll xchg stos mov sbb loop lds test push cmpsb pop xchg je gs pop lret adc icebp cmc aaa mov out sub into pop subb mov push fistp cs aaa into xlat gs cmpsl outsb cld addb mov cmp push out dec (bad) mov (bad) mov ss push mov testl mov or and mov xchg lret or dec cs dec popa cmc ret push mov or add int3 mov hlt jmp pop add inc mov call xchg jno adc test cmpsb sahf xchg fstl mov sub mov clc pushl add jp dec rcrb (bad) mov xorl aaa lds jl pop jbe sub mov xchg (bad) loop jg push xchg mov cli ja test pop paddq mov adc aad loop (bad) mov push adc hlt negl rcll fmuls lds sub repz mov and movsb rcll movsb repnz mov jmp xchg jbe lret in daa repz xor std ss mov xor test movsb repnz add mov shlb adc insl scas test mov jg mov pop bnd ret jne jo bound push adc add mov xor pop xchg test inc repnz xchg out mov adc insl out cld cmp mov pop push lret xchg das mov push icebp mov leave mov mov lret push mov or xchg sbb loopne jns pop (bad) xor mov lahf (bad) sbb test scas lret inc mov jecxz mov push out lahf pop lcall loope std dec les mov shll cmpsb mov push test jbe and push repz jg aam xor leave sarl add out lret std fsubrl push shrl add push xor mov sub mov add mov sarl das mov jg adc ret jg out mov xor jno adc stos pushf repnz mov sub xchg es ds cmp mov pop nop dec inc arpl xchg jnp sub bnd ret dec insb (bad) adc fnsave call call (bad) sub pop (bad) rol out mov jmp fnop sbb adc iret faddp pop loope cmpb xchg (bad) xor lret lods lds fdivs mov pop pop cmp or test dec or inc add gs pop sub lcall mov mov scas repz outsl inc test jno xor jmp adc push pop rcll and push xchg xlat mov aas add stc pop xchg stos mov dec mov or or mov aam fs dec or aad icebp test ffree in ret adc sub icebp dec and pop pushf add jle das sub jl or ret cmp (bad) out out xlat out scas lahf inc fisttp movsl clc repz mov (bad) dec (bad) lret arpl mov into xor add (bad) in into jl clc clc ss jg,pn xor imulb dec mov or pop mov (bad) (bad) repnz icebp pop imul (bad) mov push orb clc cs mov mov xchg push push mov (bad) (bad) ja dec lds mov push (bad) stc mov into das sub adc xchg inc fsubl jmp mov icebp sti repnz fldenv and xor es push dec ret pop scas fldenv clc in mov (bad) xor mov jp fwait dec and cld stos les out cltd das sub rolb jge xor inc movsl jmp out inc or ret sub adc jg int3 leave jmp mov xlat mov lret jmp mov fwait xor inc xchg loope add in call pop or mov add rcrw lods into dec mov xchg mov (bad) ffree std mov popa stc call ficompl jne loope pop test fldcw dec and or dec and enter pop add inc or clc xor stos nop ret repz mov test dec int3 dec mulb pop mov clc dec mov rsqrtps test jmp iret xchg cmp sbb mov repnz lret not stos jmp gs inc jle popf adc xchg or xor enter push fisubl or (bad) mov xor in or int negl or xchg sbb lock cmpsb rolb jg cmc test mov add lods mov call xchg in in adc js add mov or jmp pop pushf jb pop ds pop pop sub into xchg rcrl call out bound enter mov jne sti jp inc mov rorb lret fmull xchg inc push and das int cmpsl inc sbb negb nop dec xchg xor xor push mov mov sub gs imul push int3 fcmovb xchg aad movsl sahf inc dec or aam cld movsw orb sub dec xchg mov aam repnz fdivl push ljmp cwtl jae cltd ret mov or pop out add ds or aaa pop mov or div (bad) jg lock (bad) lea imul push das dec cli int3 xor mov xor js (bad) xor jmp mov icebp outsl sub cmpl ljmp jge fcoml out int3 outsb btc scas pop icebp pusha rclb mov xor xor loope adcl mov imull mov push and inc loope pop inc cltd imul (bad) mov and jb stc data16 and scas mov dec fcom fdivs jmp mov jo clc or mov gs jno and add repz xor xor mov and das pop jo popa add mov mov adc ret jmp push sub add mov popa mov or lahf aaa ds jmp mov aad sbb push add cmp lret (bad) (bad) adc in cmpsb xchg mov movsb xor or inc push sub mov enter popf pop loope dec xlat and scas fstl out jne ljmp xchg pop and lock mov jns pusha xor pop cmp out push jl (bad) xor incb aaa das mov lds neg sub mov (bad) dec adc js mov sahf sub lea push outsl push pop dec jne popa mov xor lret sbb mov dec repz cli jmp pusha rcrl jmp pop (bad) out inc in daa jge lods sbb dec and mov in mov fs or fstps jb in jnp mov dec push int3 int adc or pop icebp mov out sub mov xchg mov dec mov dec int or push sbb jg inc cltd or inc data16 sub shl mov fsubs shlb xor jmp icebp pusha imul jne aam into pop pushf xor movsl push mov popf pop mov and adc inc or xor mov aam sub jmp scas jl or push dec in test ds das (bad) popf or or push insb push pop sbb sub outsl cld fcom dec push and arpl jg (bad) sbb inc nop adc add mov sti notb xlat cltd sub repz mov dec fcomp xor lock loop leave out movb insb adc jle mov sub mov ljmp cmc jns imul repnz or or sbb mov movsb sub mov xor rcrb jmp or imul mov clc ja and xor bound xchg pop mov daa adc aad dec (bad) mov nop push adc jecxz add cmp add (bad) lahf cld or gs and sub push jp dec jae jo add lret or pop mov pop push stc not roll mov fst pop and pusha xchg call sbbl imul add or add and jb test or scas cltd fadd cs and inc sub jg mov push and popf into das test lret (bad) fs xchg xor shrb fs xor lahf insl inc das push out sub popf push cmpsl rcrb adc fnstenv lods test imull bound fdivs pop jg pop (bad) jno add ds (bad) aam add jl push push push jno xchg (bad) cmpsb jl divl and les out shll push or shrb push frstor mov fs icebp lods sub ret sbb cmc imul xlat jae inc mov sbb or cmp jmp mov and pop and es repnz lahf inc mov (bad) pop jb insl push sbb aas inc sarb and push addr16 jmp adc lods inc sub jmp aam mov inc lret les movsl or aaa fsubrl pop das stc stos jbe or stc into push andl mov pushf sti imul repnz pop fisub or and sub and inc mov cmp mov add mov mov test int push jns mov mov xor xchg test (bad) lock and cwtl rorl fstpt push cwtl jb xor push push sbb out sub pop pop mov fs pop xchg enter sub and pop push out xchg nop fwait mov pop jle inc sub dec push sub sbb adc push dec or mov clc jmp xor popa rol insl out stos fs (bad) popaw sub mov ficomp out sub ljmp mov mov lcall sub pop mov ficom mov inc shrl and sub pop test test inc adc movsl (bad) push push xchg xchg repnz mov ja mov mov fist out gs xor push pop (bad) int dec rclb and cmpsb cltd pop mov or pop mov xchg mov xor adc jp (bad) hlt push call pop and push shll cmp cwtl outsb (bad) xchg cwtl jle (bad) or repz cmp int3 (bad) dec divb or call pop cmp aad mov ss mov insb pop hlt or mov lret xchg push mov stos xor (bad) orb fidivrl jne lahf popf in stc pop pop lret lea rcll cwtl mov lcall sub push mov jo and push push mov aas mov ja cmp arpl (bad) pop push imul stos add push mov xchg push ss xor pop add lock imull mov mov decl push ja add add fcmovb loop adcb cmp inc enter or int sub push pop cmp xor pop mov pop mull hlt adc pop sub ljmp xchg push mov add sub sub pop dec add mov and lods js jno add jmp add cwtl mov jle fs push push mov movsb or jge out repz or adc outsl mov scas pop nop call add pop aad mov xchg mov jle mov fcom ret mov mov xchg jmp or stc dec jnp xor xchg add inc jge add add aaa dec dec sbb sub decb ret inc test ret test and dec push xor push iret (bad) mov cld into repnz cmpsb pop or popa mov adc stc jle xor ficom (bad) test loopne sbb jl adc dec mov inc gs sub cmp in mov adc sbb ja movsb iret rcrl aad or repnz push push mov pop mov ret insb call roll ret push dec mull rcpps sub pop sub iret mov aaa jp mov ds sbb xchg pop adc pop sahf or (bad) outsb test or or mov imulb adc xor ret pushf push ret test in xlat dec and jno xchg sub pop mov dec mov mov jno sub cs or mov (bad) jbe xchg cmp sub and and repnz fldenv ret lret add and rorb xchg jmp add xor sub or jns leave (bad) std inc (bad) mov mov or into aam pop sbb sub mov cld (bad) ds xchg ljmp fmuls repz add lods andl pop iret notb out into bound xchg rsm push mov (bad) addr16 idiv and stos popa sbb mov cmpsb xor sbb arpl or mov lods repnz repz add (bad) repz aaa repnz or mov xchg push out push xchg sub leave jle roll iret decb adc jmp lcall and loop test clc mov (bad) mull mov clc popf sbb (bad) mov xchg adc push (bad) xchg lret loopne push icebp pop (bad) xor jmp fwait lea sub test cwtl jg (bad) (bad) mov dec mov shrl jge xchg fist and sub pop xor pop (bad) adc sar je icebp mov mov pop mov push inc mov repz and mov dec mov lock es fsub push pop mov jmp sub (bad) lock dec jno inc xor pop mov cli mov lret into movb sub je arpl and mov shr cld inc cmpsb rclb mov dec dec adc pushf das add jb popf hlt sub jmp aad ljmp sub jp or inc and fistp dec add mov mov mov pop and mov sti and mov and adc pop fs mov add addb cltd jp das out je scas lods lcall ret mov (bad) cld lcall repnz mov sub cli into and lret jge les xor pop scas bound repnz push xchg adc (bad) and mov xchg pop pop mov or push out sub or ljmp mov add iret push mov add idivl mov or cmp div imul lret pop and mov in in ret add dec not test (bad) fucomi or pop hlt xchg cld push jmp sub jb lahf pop adc mov (bad) add (bad) or jno xchg rol jmp (bad) inc (bad) call das mov pushf cltd dec inc inc in inc dec cld fmulp add daa data16 sti xor lea push dec xchg push jge jbe xor neg ja icebp ljmp pop orb fsubs pop ret dec dec pop mov mov xchg lock in movsl fadd xchg gs movsb push jmp and dec fbstp pop mov pop xor adc pop add jmp cmpsl in pop lret mov inc lcall mov ret cmp mov push (bad) pop into in adc mov mov pop push ljmp sub dec jl lret std push xlat push outsb mov imul rolb sub mov dec and mov repz push dec in push xchg and pop mov push xor leave dec and out xchg cmpsl or cli mov or in xchg pop cmpsb ljmp add jmp sahf pop out sub cs push sub iret mov cmp push sub mov xor test sub xlat pop mov xor (bad) imul pop mov test xchg xor mov and into xor push aad adc jmp pop lret mov adc std clc fisub jl rcrl sub push dec mov mov cmp inc sbb mov loopne (bad) xor sbb and mov das jb mov mov (bad) sub mov dec daa dec iret inc enter frstor mov xchg ljmp jle call xor loope sub xchg aad testb mov mov scas mov pop imul push (bad) sbb mov xor mov fistl into std mov (bad) leave (bad) cmp push leave jp out lret lock or and inc out xor scas aaa lock xchg mov mov sub out pop pushf movsl jle jb mov push mov imul bound or add mov sbb xor adc pushf xor sub pop push inc add xchg pop sti sahf ja mov jo in sbb fs and repz mov gs dec pop mov xchg stc xchg pop stos dec (bad) out lret xchg xor ljmp fucom add jecxz fstps jb rcr add xor sbb fsubr push mov or jle pop xchg enter mov (bad) (bad) push push pop xor pop adc pushf fsubp add ja lcall out sub or addr16 stc in and loope mov jge sarb mov cmp xor adc lcall xor fldl push xlat bound call movsl and or xor mov pop inc mov dec test aad mov push sbb enter ljmp mov jo xor mulb or jnp mov stos xor iret test (bad) out (bad) idivb jmp (bad) dec jecxz ret outsl mov pop cli sub cli das adc test mov movsb icebp mov lock xlat rolb cmp roll (bad) sub inc fistp divb jecxz sub mov jecxz dec mov in leave (bad) aaa mov sti jne mov sbb dec and and push dec daa dec out (bad) sub jmp jecxz adc shrb insl (bad) mov imul dec lret std subl stos repnz mov or cli in fist jae in xchg pop subl (bad) test rcrb movsl pop into or pop mov leave stos mov sub xchg shrl and gs ret (bad) jge addl inc jbe sbb jecxz (bad) or lcall xchg mov fstpt pop cmp or (bad) movsl mov repnz fsubrl mov in mov xor fistpll idiv or imul testb (bad) scas cmc push mov or ja push (bad) es pop add cmp mov ds sub dec dec mov sti lahf mov scas cmpsl xor jg push icebp xchg jmp mov jg rdpmc popf jge xchg push mov mov jae mov in xchg mov jns lds push inc mov scas mov imul and cmpsl xchg ret popf push xchg fs mov stos push addr16 lret add pop cmpsb mov ret hlt int push test mov aad xchg inc sub push repz pop int3 mul lahf fsubrl sub jg mov mov jae fistpll xor and mov cs imul clc and je adc mov jne xor sbb cmpsl (bad) push loope mov stos xor mov pop mov inc or es xchg xrelease sub icebp cmp dec orb lret mov mov inc push sub sub sub xchg xrelease ljmp sub cmp and lock (bad) ret test dec out mov lods xlat or sub mov jecxz xor dec xchg xor pop lds sub dec push add fadds aaa cli repnz and pushf imul fucomp call rcll jo divb rorl and popa cmpsl fstpl and mov divl push xor adc stc das lods cld inc pop lock imul push shll mov mov jnp cmpsl pop pusha lods loopne xor popf sbb negl scas jbe jo add inc and xor dec js scas clc sub lret xor dec sub mov shrb icebp enter ret inc push insl pop mov int3 pop add mov test inc push xor sub or jmp pop cli add lods xchg push loope imulb sub jns dec jne sub cmpb in ja xchg pop stos clc scas mov aas sub pop jp ljmp push in das mov dec mov leave cmp cmp out cmpsl ret sub into xor mov cmpsb adc cmp and clc xchg (bad) lock jge pminsw mov (bad) jp pop or data16 adc and mov xchg icebp mov add jge push cs pop pusha sub shlb test inc pusha into or mov repnz data16 dec into adcl das loop pop adc mov insl xor jmp lretw pop jge inc jmp push xchg fs stos mov je sarl push mov (bad) jns inc mov addr16 dec imul (bad) sub enter mov jmp mov xchg jbe sub push cltd jne loope cs and mov inc mov dec mov or jmp (bad) nop pushf and pop mov sub jmp mov mov or (bad) xchg rcr ret push adc sbb lret xlat idivl jp (bad) nop push popf mov mov jno mov imul pop xor insl adc fs sub xor mov and sub movsl mov mov pop jle clc xchg pop mov cli popf fwait cmp (bad) ljmp jl pop mov sub test sub inc sbb icebp add js sarl jp (bad) xor out (bad) aaa lret ja cmp leave add mov mov jle and add vmovaps test jl daa mov iret xlat lds or cmp mov enter cld rcll enter gs cs and dec sahf cmpsl pop insl in sub gs pop and add rol std sbb xchg (bad) leave leave or das sub jae mov push cmp sti mov fistpl mov inc fbld push cmpsb mov push stos add outsb sarl or mov mov push or outsb mov add icebp mov in mov je sbb pop es mov sbb and enter (bad) xor cmp xchg inc jmp rorl addr16 push gs scas cmp (bad) idivb add xor jecxz jl aas jmp loope fwait lods sub ljmp lods inc pop adc andb sub sub popf rolb xchg sub dec mov xlat xlat push (bad) jo popf fstl jno jb sarl jo dec ret dec mov nop (bad) cmp xchg xlat add xchg stos les push aas pushf xor mull xchg ret and or or in fist mov pop repnz scas xor into dec xchg dec lcall dec mov test lock mov xlat xchg xlat popf push int mov sti jle fisubr rcrb or adc and fld dec gs add enter les adc jmp gs lcall mov push and leave cmpl sub notb adc adc out dec out (bad) or outsb jl push loope mov mov call popa (bad) xor mov scas test mov pushf test mov stos mov sub loope sub (bad) dec xor inc or and mov pop ret js mov in push add mov leave les popa xchg shr (bad) or pop sbb aad pop cli mov add and cmpsb sub push dec mov rorb mov test mov mov adc or stos pop jne inc popf xchg pop push mov movsb das xor repnz jo ret aam ja outsb fistp adc imul rdtsc cli sub std sbb sbb ror idivl in xor call push push mov decb leave pop xchg pop push jno dec push data16 js pop rcr lods mov fsts mov jo and add add add push xor test lcall cmpsb push add xchg push fwait pop jmp add icebp inc stos sbb dec (bad) enter pop stos frstor jbe je xor add add sub lcall fildl mov add sub inc and out cmp jle dec adc mov cmp sub mov (bad) jmp or (bad) insl xchg fsts xchg rcl (bad) add ret out ret xchg xor xchg icebp xchg and call cld and out adc imul pusha cmp mov push clc clc dec enter inc leave jns imul push and imulb movsl or or mov sub mov mov or data16 mov inc cmc dec xchg lret iret mov int3 mov push mov jo cltd xor push fs mov push and fs mov pop sub or mov fldl es test fsubrp testb xor cld movhlps mov xor mov jbe nop (bad) xor or out and icebp xchg jae mov repz dec lods sbb inc dec ret xor rcrb negl mov das adc dec shr push cli mov and xchg mov add nop pop rcrl mov push sub jmp pop ja enter add movzbl mov pop and or and testb in bound shlb lds pop daa pop fs sub daa cltd mov mov mov bound cli push outsb outsl adc jo jmp cmpsb dec sub dec add mov test fisub push and xor or js cltd sbb push jb test lds enter xor lock repnz sbb (bad) xor push into pop into xor das lds daa adc dec fucomi fsubl dec or mov xchg sub mov call cmp xor adc push mov test mov pusha dec leave and adc repz aas dec adc icebp push mov add cld dec pop icebp fisubr lret mov sahf pop mov xor mov stos xor mov out or push aas test and jp mov je cli in cmp pop gs mov or mov mov lret aas lret leave pop test rolb xor mov dec imul mov sub data16 mov cld hlt rcrl out sbb sub sbb ret jno dec repz data16 dec ja mov mov ss push xor call daa popf sub outsl sahf xchg (bad) daa xor sbb popf push and jmp xor out mov xchg push mov jg out sub mov lahf push adc cltd dec xchg xor jns sub and sub mov dec adc pop adc push cmpsb or aam (bad) movsb pop (bad) jg (bad) cli mov (bad) fld ret mov cltd jns ljmp sub mov inc adc add push iret pop jmp inc leave loop and sub rcrl cld movsl jb iret clc pop les push mov or lds and das das inc mov (bad) sahf fwait jmp or push jbe adc mov jp push mov lods test lods test and cmp cld (bad) mov mov lods je push ret ret ret jo (bad) inc jmp std sub jp les iret pop data16 xchg stos lahf pop sub xor cmc ljmp lret push insl jg or je int ds ret cmpsb cmpsb dec xchg jmp ret cmc jns leave push mov and fbld push sarb ljmp xor cmpxchg fisub push divl add xlat sub jge dec push adc fwait or stos fdivrl or imul (bad) mov mov inc out jmp inc adc xchg xchg lds ss jp and xor push or insb sub cli cmc stc notb mov mov adc out adc push and pop data16 lods pop or imulb inc outsb sub cmp cld dec lret mov into aad enter push aam cmp (bad) fidiv movsb movsl pop daa arpl dec imul repz lods dec ret fldcw int aas (bad) or jge call fwait lods pop xchg pop das notb bound add sub add les insb push out xchg lods repnz je leave xlat bound rorl idivb mov lods adc xchg movsb iret lods pop mov xchg movsl je lds popa dec cmp jg add decb out cmc xchg push cmp loope aaa mov add cmp std jle out sub loop xchg sti xlat stos mov inc mov fdivr in xchg faddl imul das push xor xchg jp (bad) clc repz and mov cs (bad) push push (bad) lods and and ficomp dec xchg xor sbb jns sub sub and int3 adc scas jbe xor mov std or cmp ja xchg and inc repnz cs push test iret addb xchg jp pop sarb sub jo push das call jmp sbb loop add iret mov mov shl in push xor mov cmpsb sbb xchg jno inc xor pop dec pop cmp daa (bad) xchg into inc xchg outsb xchg inc mov pop mov out in xor or in pop adc sti and stos cmp repz aas mov pop fbld stos stc popf mov jns inc imul mov pop xor cli pushf jmp jmp mov xor ret addr16 mov and scas int or sbb adc push leave lcall cmp (bad) pop pushl jecxz xor movsl stos mov dec stos push (bad) xor cld pop inc and imull or in dec scas cmc dec fimul leave push inc cmp mov jmp insl idiv aas (bad) cmc mov (bad) daa push push jo jbe dec pushl xor std dec mov out cmp clc inc shrl jns sbb mov cmp das lods jne mov and mov xchg push cs xor sub sbb xlat fldcw mov add fs test dec lret out test (bad) mov jno leave push in push pop (bad) or adc sub cmp push ficoml (bad) sub ror rorl enter mov adc xor mov add xchg pop jno dec ret sbb xor imul dec daa and xchg and push decl xchg enter orb js test icebp mov idivb mov ljmp or xor mov xlat inc or cmp imul jmp cld shll bound xor (bad) jb hlt cwtl lds mov adc sbb add ljmp mov out mov out and mov out cmpsb cmovs jl lock cmpsb (bad) adc sub mov ret sub cmc inc pushf daa aam push and push adc sbb fldt loopne adc mov stc push and adc mov pop and dec add sub fcmovnb pop or mov jns mov rol lahf or subl add or cltd imul lea pop cltd push fist pop scas jmp mov mov sub pusha xor mov out jnp pop jbe cld adc cmp sub or mov jp push shlb mov ja aad add repz sub ljmp xchg jno jae or or push add clc ljmp fisubl popa push sub xor xchg mov mov xor cmpsb les add repz clc shll mov insl jge cmc inc aas fdivl mov aad scas adc loope xchg pop mov mov pusha stos rorb pop lock mov je iret xchg jp imul icebp imul xor (bad) and mov mov jb cmp mov cmp pushf loopne jo and gs daa sub cld push imul pop fldenv icebp add push pop leave add xchg imul jg add scas lcall dec and dec and fs sahf and insl sbb or fisttp popf std cmp into loopne int3 adc add or popa mov and bound (bad) in xor ret sbb xchg (bad) outsb insl dec (bad) inc mov xor pop test test pop and fs outsb cmp mov ja bound aas dec ljmp and mov out (bad) xchg popf rorl hlt jne pushf cli pop or push sub sahf (bad) mov jg test pop sub sahf inc pop (bad) out scas sub repnz pop mov in add das or mov mov out mov das out xchg or or push andl dec adc and sbb jmp sub xor or call fldenv mov add xchg and ret or std (bad) mov xchg and jp leave cwtl add scas mul sub adc or sarb sti and (bad) (bad) mov mov and jle imul pushl mov jp or icebp ficomp sub xchg adc xor xor push push or adc out pop and cmp out xchg mov ret shr cmc jns adc loop dec (bad) fdivrs mov (bad) add xor das mov xchg test aad pop sub mov adc mov test jae or repz mov bound (bad) mov jp sub xchg in sub push lret pop mov and cmpsb jbe jmp mov xchg out push bnd shrl mov cmpsb inc hlt mov nop stos (bad) sbb xchg fisttp js xchg mov lret int das mov mov sub loope lret jbe jp iret xchg (bad) sub (bad) push add repnz iret mov subl xor nop (bad) std js dec out data16 cwtl adc dec enter pop ficom (bad) mov in dec movsl mov sub shll scas mov xchg xor adc adc call adc xchg in mov sahf mov repz dec mov ret fs sti push push and call lea add sbb dec sub sbb fbld and jg mov in jo shll leave faddp pusha movzbl mov divl dec lret dec mov dec sti jmp mov fucomp stc xor cwtl xchg lret pop pop cmp loope and jle dec repz shrb mov xor adc int out pop lret sarb add fstpt out mov movsl push cltd out push sub ret jge xor adc scas je jecxz das jmp and mov push sub clc sbb dec dec in adc das fcomps cmp popa pop out mov fmuls out pop xor test sbb inc out pop mov (bad) xor mov push xor and xchg mov ljmp fnop push pusha mov xor adc add push daa bound jg push ret cltd mov gs jo mov sub sub cmpsl sub (bad) pop pop lds imull lds jne mov shlb mov mov loop ds lret (bad) jge jns fistp aad dec mov xor lcall push pop pop loope mov xor and pushf adc inc inc dec mov js add test lcall cltd in adc (bad) or fistl in daa xchg scas call sahf xchg dec cmpsl xchg inc jge,pt push dec dec push mov and enter sahf (bad) mov (bad) mov clc and cmc movsb gs repnz and jb pop fidivr cmpsb mov sbb shrl bound pop cld sbb or and (bad) sbb sti dec test mov jb out mov mov and popf fistpl call jg jmp xor or daa mov rorl sbb lcall leave push push mov ret mov dec scas cltd sahf jle and dec jge mov sub (bad) sub test ds stc movsb movsl pushl pushl jno std jnp scas jl into xlat div daa loop lcall jg or cmp sbb sub sub ss imul std bound cmp fnop ret les sub xor (bad) outsl cmp clc dec or push and mov aad sub pop out dec pop adc push jo add rorl or mov pop inc xor fimul dec mov inc insl sub lods mov xor outsl cmpsb insl imul fiaddl icebp dec add jnp mov mov mov mov clc std dec (bad) out dec scas lret add add and mov js rcll mov mov xor out test or mov inc sbb cli xor mov or add lods call mov or and cwtl aad add jg iret and das cli pushf out mov add dec jecxz arpl sti mov pop xchg mov mov shr mov scas xlat clc bound add inc and sub mov and jne adc stos mov mov mov mov add test leave xor xor (bad) int3 stc mov cmp add or jnp pop sbb ret clc adc push push loopne pushl add adc out idiv (bad) scas mov add and mov push sub je mov cmpsl out xor in push add inc shl add addr16 loop sub xlat in aam mov ds xlat or push dec push pop (bad) xchg pop fisubr sti push sub xchg cmpb push roll jno mov sub pop add (bad) pop mov xchg jl push push sub pop dec loopne,pt sbb cmp xor loopne add out leave rcrl or jge les imul loop or jp out add insb pop cli jae test mov jle cld push mov pop pop push mov xor out pop mov xchg adc hlt push inc push add xchg nop std pop rolb jmp add xor mov clc xchg dec rep add mov jmp pop lret adc or pop fstpl popf ret fsubr leave into sub (bad) (bad) scas inc push xchg je add pushf call inc xchg ret mov rcrl arpl stc jne add dec add mov sub in push (bad) mov add xor or es mov add add xor mov divl dec rcrl inc sub add lret enter shr add add or subl neg xchg in adc test sbb xchg je cmp mov adc mov inc ja ljmp xchg pop popf data16 repnz clc dec (bad) icebp nop pusha add jnp sub movsb daa sub loop cltd pushf testl jno in mov and mov icebp add mov cwtl fstps movsl rcrl (bad) dec sbb leave mov mov cli add lret mov movsb adc out cmp fsts movsl push xor test ret sar in push mov loope (bad) insb in fist jmp jmp pop xchg adc loope incl xor jl out gs shrl mov push or adc jecxz or or jbe push in jmp cmpsl dec divl in xor cmp or lret adc mov adc and sbb pop pop push xchg add pop das ret add xor ljmp push dec mov dec xor cli and xchg in sbb orb insb (bad) lahf (bad) xor mov xchg lret push fldcw dec negl jno and push in sbb bound mov outsb pop bound shr movsl xchg bnd scas adc pop das ret loop in cs imul lcall adc sbb add es or push (bad) dec add and sahf jbe sub test jmp std lahf shll or mov and subb out test push jge add (bad) push sahf push mov lcall or fmuls leave jle jne aaa pushf decb pop test test rclb leave mov (bad) leave repnz pop mov dec test and and xor adc out cmpsl xlat and cld shlb int3 lods sub mov sbb xor push loop das shrl sub pop lcall cmpsl gs and fcoms jo inc mov (bad) xchg inc push xchg pop repz mov jmp movsl xor adc sbb fstpt add lret cltd push inc or shrl lea das (bad) jl and aas into in stos pop mov cs notl inc mov sahf mov push mov mov pushf and xchg xor pop out push outsl test lds pop lods das test mov cltd outsb cmp dec mov push cwtl inc add and inc out xor push push push push add pop shr loope add sub and jge or outsl dec enter or jg pop icebp pop jmp fisub mov pushf jmp adc dec aam notb dec jne sub add aas mov sbb scas lods imul das and (bad) rolb mov inc pop xchg xchg mov ret (bad) ror lret into push out iret mov sub jg das dec add notb push add xor mov pop mov movsl test ja pop push pop push add cli jbe push mov andl add sub out gs lcall dec movsb jg lds (bad) jae sub fisttpl pop mov mov jbe,pn cwtl ljmp push and sbb and lods aad test icebp idivb js stos push insb lret stos mov sbb mov push or mov mov inc xor add loop iret icebp cmp (bad) (bad) or or imul lret fisttp mov outsb and nop ljmp fs scas push fxch xchg or mov mov inc call sub pushf jge mov pop dec xor lret pop sahf into lret and decl xor ljmp mov and push loop sbb mov sar push mov repz pop test (bad) jns bound or cmp push pop add xor shrb (bad) ja ret in dec mov test (bad) sub (bad) cmpsl push xor pop ljmp shrb cs rcll lret push pop in xchg mov jp (bad) (bad) repnz push mov adc lahf xchg lods cld ret loop pop cmp mov fisubr and arpl iret dec into cmpsl mov repz loope idivb sub out mov xor push dec repz xchg (bad) (bad) mov stos les jg pop sar stc or and imul jbe je dec mov in cmp xor in stos sub push comiss (bad) (bad) push (bad) ljmp xor cld mov je sub pop frstor pushf cli in and ja mov xor nop sub int3 loop jecxz mov test addr16 jmp in mov dec jg or fldt testl fisubl (bad) cmp loope jno cltd iret hlt xor push test inc scas jne lods rcr imulb mov add inc aam push sbb decl cli xor mov push push ljmp test fimul lcall outsb mov xchg (bad) mov aaa das sti clc daa pop ret aam jb xlat ljmp scas jnp and lret push in pop icebp mov stos negb lahf dec mov or roll xor sbb shrl mov je scas and dec xchg jmp int (bad) xor xor out mov addb insb int3 cmp in push push lret pop repz or inc xor mov mov or pop add cmp cld dec dec stos fldenv cmpsl stos pop add mov mov mov cmp pop mov dec cld shrl push adc lods loope jmp inc adc xchg (bad) into cmpl sub dec out daa out xchg scas sub xchg inc loop xlat fildl iret xor and sub ljmp data16 into repnz xchg sbb ds cld jb mov sti dec addb mov fcoml adc sub notb and add fwait (bad) xor sar fwait mov pop and call in mov mov mov test imul aaa das jno mov mov mov mov jg jns jmp aas jmp cmp jb jp xor or sahf xchg add fisttpl (bad) and add pop ja cmpsb idivl inc popf mov ret in outsb mov xor pop (bad) icebp cltd xchg add mov cmp lahf push mov pop cmp add adc daa sub rorb fistpl push das mov rcrb mov call xchg push inc xor das out mov add or or pop and sarb cli mov xchg jg (bad) dec mov jl push xor push xor mov inc clc ja fnop mov mov xchg mov or lret mov dec mov aaa pop xor mov push sbb or rclb stc mov or fistpl out cmp imul iret add push imul jg ds cmp stos pusha (bad) xchg (bad) xor dec xor sub mov addr16 xlat scas mov jb fdivr cmp loopne mov and adc jl xor bound jns nop or dec (bad) xor lret aaa mov xor std mov xlat lds mov js repz mov mov in jnp mov cs pushf sub fcmovnbe loope pop mov lds or scas out xchg stos xchg ss ljmp push mov jo loope das out xor xor sbb cwtl jne mov addr16 or adc idivl int3 ss out mov insl fdivr sub outsb repnz push mov mov popf lds adc pushf dec xchg push cld roll push (bad) dec pop jmp mov sub and inc shrl scas jmp adc fstl mov stos cmp (bad) push int3 cmp leave dec popa maskmovq negl cmp cmp jno dec ror cmp sahf notb clc jge lds sar cmp iret and add cwtl fadd xchg mov sub or fidiv sahf ja inc in fstp jns push mov mov mov pop int3 and mov call leave (bad) rorl outsl mov pop (bad) push and aas dec sti (bad) mov popa daa sti cmp inc jg adc push repnz or out dec repz lods in push out jb out cmp and dec repz push sahf push imul arpl out fisttpll mov sahf ss repz push cmp (bad) lret inc scas mov cmp jns jge test pop mov or sub pop mov roll xchg leave mov sub movsl out xchg xor in rcl inc fisubrl enter mov jbe daa push and or leave push push mov ljmp or xchg fidivrl mov cmp mov xor xor fist mov (bad) xchg mov mov xchg (bad) mov mov cs xchg ret inc lds and mov pop cwtl sahf (bad) xchg mov cmc cli lret push das mov mov sub jbe insl lret add jmp mov pop mull daa test lcall loop pop jns dec int3 sbb or lods imul iret fwait dec sbb mov cs or add stos int and dec out pop pushf xchg fistp sti call sub cmp int mov lock sub cmp xor xor shl lods inc xlat sub dec icebp pop mov dec fistp mov popa push sbb icebp mov sub inc out ds movsl mov jecxz mov or divb jb jmp xor and scas int3 adc jb popf push dec fs pushf fdivs sub data16 imul pop sub je iret push mov fnstcw sub popa sbb clc jg fidiv fdivs dec pop and fidivrl inc sti xor cmc jns fs ljmp movsb mov mov jb add mov leave dec aas std dec push dec repnz popf adc mov aad push movsl (bad) popf (bad) incb cmpl or ret faddl push fmull or add cmpsl push inc xchg or out out mov or push sub or iret adc xor out inc mov mov bound xchg mov sahf jno imul leave lcall xchg inc and daa icebp cmp push fucomi sub jmp fisubl (bad) mov mov xchg mov fcomip ljmp pop sbb mov mov movsb cmc xchg jne cmp and mov cwtl and dec mov test lods (bad) dec sub mov stos ja sbb sub insb jg out sarb hlt add leave inc or or add jg lret push clc movsl dec lea mov pusha pop fldenv in jl lcall mov sub xor pop mov (bad) daa out pop in sub outsl cmp and jns lret add xor mov pop mov imul in dec sti jne sti (bad) call in addr16 mov or aam sub loope (bad) or negb fimull dec push cmc dec mov loop andl pop shr repz mov (bad) sbb int3 cld mov in adc sbb scas xchg xchg outsl fs add xchg adc push test add lcall pop je shll mov jbe bound (bad) push jnp das inc cwtl xchg jl mov and or jl outsl dec (bad) adc lcall jns inc stc cmpsb les loope or push xchg repz fstp jle dec fldl cs and sbb mov sub sub shr insb cwtl pop loop jo xor sub pop gs jno add and jg je jecxz arpl in (bad) sub mov repnz movsl cld xor push pop mov test aaa cld (bad) pop faddl mov sbb repnz mov cmpsl imul push and and es mov xchg inc dec (bad) ljmp fdivrl ljmp test mov cwtl (bad) mov ds stos inc mov and lret xor cld stos xchg mov (bad) cmp add mov fisttpll fwait (bad) repz push loop and lret (bad) jg pop mov cmc or push lret aam add jbe mov mov jmp shr idivl xchg sub movsb movsl jne aaa stos jo iret stc and jne sbb std imul cs loop,pt xchg in cmc mov aam call pop push add add sub jns repnz pusha jae adc testl xor cmp xchg dec (bad) sbb inc out mov xor loopne outsb shrb push mov pop mov cld pop mov inc sub and in (bad) mov push in ljmp icebp xchg lret sbb sub pop and jg jae loop mov stc xor push push sbb sub imul neg inc and jl push and icebp sub je mov test add (bad) jg loop ret adc add push scas (bad) ja mov dec loop (bad) jl (bad) lret push ret repz add cld das or incb icebp inc imul and or out mov imul fiaddl xor test add dec sbb into fbstp dec lds mov test and enter pop out dec mov outsb mov mov das and (bad) mov mov jno lahf and add jl rcrl xchg cld cmpsl sub repnz daa notb dec outsl xchg sti jb psrlq jne fnop cs aaa int pop xchg add out les mov pop xchg cmp xor xor lret sahf fwait ret adc sub test and mov seta inc pop pushf dec mov inc ljmp mov adc mov mov and ret lds shlb incl stc xlat fcmovne cmpsl nop adc dec into (bad) popa cld sub cs push adc lea lret push add and lods pop stos idivb movsb out lods out das pop jecxz fisttpl push and dec iret adc rep lods push popf in jae dec inc pop out gs rep fistpl jmp push pushl sub add dec outsl inc ret repz dec pushf jno add xor jns movsl test (bad) mov mov xor into hlt mov pushf rcll sbb lea jbe inc addr16 dec pushf dec mov or pop sub or stos jecxz adc and add jo xchg add and xchg notb xor cld cli jb dec inc push into pop and in sub sub xor rcll cmc jmp jno dec or je leave pop inc adc push pop xor or push cld in mov xchg std popf jb cwtl sbb out (bad) cmp ficom stc ljmp leave movzbl push pop iret stos lret push ret xor inc jl inc cwtl dec jb xor out popf leave ficompl repz lahf push mov rcrl fdivrs mov adc leave test (bad) jmp stos push ret iret adc clc lret cld push mov lods sti in mov daa inc add dec and mov inc (bad) ret dec loop,pt gs lods cli adcb jmp sbb insl out call pop shrb xor add ret sub jg push xor xchg jb and (bad) fadds mov insb or arpl push xor and cmp mov xor mov push pop icebp and mov daa ret pop pop out movsb test insb data16 mov cwtl xor adc fstpt or mov or fcmove xlat pop int3 (bad) mov inc xlat stos into aas jge jne push mull mov pushl xchg jge vmulsd lret jns pusha ud2 inc lock pop xor ja mov push pop scas and jbe (bad) xor ror lock push jl and jne inc pop push (bad) mov jmp int3 push mov xor sub mov (bad) fadds rcrl incl movsb scas mov fadds or pop push inc shrb push imul sub or mov or lods cmp popa cmp and mov mov gs adc fstl jge popw mov popa mov sbb repz xchg (bad) xor call dec add xchg xor cmp scas lret cmp and nop jmp je push push push dec add jne int pushf call fidivl mov jecxz out dec aas mov pushf repz or sub pop jno sbb cmp sub fcmovne sub int3 adc sarb dec xor push jne into push stos xor scas lods data16 das (bad) dec inc lret sub add mov pop (bad) xchg (bad) mov adc xchg lea xor mov jno int jns inc and ret jnp add cmp fdivl notb and fnop ds call bound cmc popf xchg xor out pop cld push pop ja xchg xchg aas or icebp aaa add lcall xchg sub jne mov and fildll rclb add (bad) and xor dec mov jmp dec into xchg in mov mov dec mov mov dec (bad) out sti cmpsb ja pushf ret mov dec add or aas mov scas adc cmp inc xchg xor sub repnz (bad) lea sub xor sub std clc jg leave ds icebp repnz push (bad) mov and jmp inc wrmsr inc and xor stc cmp push idiv je (bad) jecxz jge repz cltd or outsl inc sbb and lahf (bad) int sbb mov das das add les mov mov sub pop test sub outsl sub add jae sub xor fsubs sub test or mov push push (bad) mov stos (bad) mov ja (bad) mov sahf (bad) icebp out mov fxch imul (bad) insb cmc mov push push rdmsr jp xor call sbb (bad) mov jae pop jmp sub mov or sub mov roll dec fbstp or adc loop mov xchg je jo (bad) sub sub jmp sub xlat mov and out int3 xchg adc xchg jne push or es ret and popa pop jne xchg lock mov jne ss pop das dec aam mov jmp nop push pop imul ret push lret inc ret xchg test mov out push and inc cmp daa add aam (bad) ljmp xlat (bad) fstpl pop std sub testb icebp cltd xchg (bad) mov fisttpll mov push mov add fidiv out pop mov inc out das or jg xor mov inc pop sbb xchg test daa xlat shll fistl test shrl leave shr daa pop xor adc pop in loop leave rcr xacquire out and push repz xchg mov push pop aas ret jno sarl ss loop adc and rcrb sub xor adc adc loop shl int3 add mov sbb sub mov xor dec and jmp daa leave sub in movsb sbbl out icebp icebp or sbb sub sub mov pop out jns dec jbe add inc pop dec xor aad add mov test and sub push xlat pop sub fiaddl push (bad) fmuls sti test out repz sarl sub pop inc enter fidivl mov loopne (bad) aaa xchg xchg scas hlt adc sti popl sbb shrb xor or sarl jge mov ret sbb aam les mov repz jne jecxz dec pop xlat cld cmp xor cmpsl stc mov xor xchg sbb mov dec test sub fwait aas xor cmp ficomp arpl and lret sub pop or mov or push shrl jae and dec movsl mov push inc leave mov in sbb enter pop pop int3 mov mov xor mov dec out (bad) xchg sar test aam fsubl sub (bad) or or frstor push pop xor repz std mov ja ds add (bad) shrl jo mov int jle lds adc add stc imul and and sub jno mov adc and cmp ljmp ret dec idiv mov rcll rcrb add or mov adc push sbb shrb jmp sub add outsb (bad) iret ljmp jmp es add or mov out and push push mov jecxz sub sub push jb or add dec cmp popa das call mov lret or bound sub arpl jmp lcall rorb xor xchg cld jmp lcall dec imul fs inc jno sub add sbb mov lcall push adc jmp int3 adc push sub sar dec xor and into (bad) fnstenv or sub and pushl lock xchg cmp dec repz xchg stos xor negl sub std and pop sub xor iret jecxz sub cmc xor sub movsb pop cmp adc mov mov push (bad) repz xlat (bad) ja sub fisttpl int and out dec ret dec add add sub (bad) or in in shrl mov scas adc out sub cmpsb mov leave push daa sub fbstp stos pop and cmp jmp pop pop imul cltd das xlat pushf or sub aam jmp out add xchg add inc cmpsl lret cwtl pop out sub dec mov cmp mov jge (bad) or push adc fs mov scas test inc adc bound mov inc or iret mov divl pop cld dec dec aam cmp stos lret out sub repnz test xlat mov push dec lods dec (bad) call ret push loope mov cli sub das call pushf ficompl or gs stc aad add add stos mov and and cltd add sub jne adc lahf lock leave (bad) mov or mov cmpsb shrl not lcall mov xchg das dec push push mov xor and cld dec pop cmp mov repz cmp mov aam into jg jo (bad) aam cld movsb call mov or in xor (bad) out mov xchg into loope repz das repz cmp leave jne mov dec mov add movl cld mov sub jge xchg xchg divl out adc andb jmp jb xchg sbb stos sbb outsb mov jbe jmp dec and or xor cmc pop aaa in insb pop repnz and out jns lcall imul pop inc cmpsb daa and pop (bad) gs out enter xlat xchg repnz out pop add shll shlb mov fist xchg int3 dec or dec mov iret xchg cs mov mov (bad) in lret add mov adc shlb mov dec stc imul mov push xor xchg (bad) repz push xor cmpsl xor iret jg sub aam jno cmp mov mov and in ret push in mov add imul imull push mov push xchg mull xor mov cmp daa pop mov pop fldt pop dec xor sahf xchg bound push jl push cmp mov lret xchg adc jne cmp xchg lcall cmp fnstenv xor out xchg arpl mov pop sub (bad) sub push xchg int outsl (bad) (bad) pop outsb push icebp add mov mov inc data16 add add mov pop push sbb mov repnz imul icebp and cs mov (bad) out outsb stos xchg cwtl jmp pop mov cmpsl (bad) xchg sahf hlt int jnp aam repnz nop push out push pop lods out xor out divl sti stos aaa mov cltd or pop (bad) and icebp xor ret mov ret lret adc in sbb add ret push aaa cmpsl pop imul add int3 push xor mov ds fnstcw imul xchg loop xor jmp inc mov and lret sub das fs mov push out xchg hlt sbb fnsave pop (bad) jg jno pop lret test loope add (bad) adc fimul jbe jge pushf jo loope mov and loop rcrl repnz call dec popfw sub mov insb cmc (bad) xor loop xchg xchg pop fs jmp ja xchg bound xor jb jmp sub mov adc xor ljmp push dec hlt dec out pop and and cld loop call clc xchg mov mov sub xor pop sarl dec dec mov mov subl inc ret clc pop cmpsb into lahf jo cmc cmp dec (bad) jmp xlat out pop or mov xor aas push xchg cld xor xlat push cwtl movsl pop insb insl pop pop fdivrl jl (bad) push daa lock and enter add push sbb and repz pop jmp xchg dec mov test lret (bad) (bad) out fidiv in add icebp movzbl ja add and mov addr16 (bad) icebp adc addl lret ljmp xlat sub sbb (bad) sysexit fistp cltd clc mov or fnstenv mov sub add mov add mull pop and stos clc (bad) mov adc ret outsl sub les push outsb push std mov fmuls mov pop fbstp sub push xchg mov ljmp mov push add rclb sub mov push add adc dec imulb cmp or sub jg xchg daa stc jae xor lret ret ja sbb leave (bad) pop mov adc mov cli mov call push push dec push sub xor fs add pop fisubl inc cmpsl das cli and sub sub mov (bad) sbb (bad) hlt mov push and outsl mov (bad) dec add dec dec jge iret push stc mov mov push bswap cmp enter adc fsubs loope push mov testl mov loop adc ret mov sbb dec ljmp loop mov sbb push or sub ljmp mov out into lds xchg test ljmp and inc xchg (bad) into pop or clc mov mov cli mov imul sub lahf jnp xchg jp xchg xchg ret pop mov cwtl or in xchg and sti scas add mov and add lods mov or sbb ret cmp sub mov ficoml or or leave imulb in push scas fiadd (bad) mov or out sub sub sbb push or fsubr aam mov sub jne and rorb pop ss sub mov or andnps mov add xor jl lret or negl adc pop bound add (bad) sbb aas mov pop push pusha xchg (bad) push bound inc mov dec jb lea (bad) mov adc pop add test hlt mov pushf mov pushf dec rcrl int (bad) in xor leave mov es daa jnp or and nop xchg jecxz lret push and or jp ja pop pop clc stos xor mov xor std in fcoms jmp adc or rcrl inc dec cltd hlt fisub pop mov adc scas repnz xchg mov adc pusha (bad) or pop or popf (bad) mov icebp mov int fnstcw popa xchg xor cmp scas cltd mov test mov add lret jg pop pop aas out mov sbb adc sub out push ret pusha aaa (bad) dec pusha aad cli push sbb and or pop push mov sub movsl adc and mov adc repnz xchg mov and jae mov and out popf adc pop mov and daa into icebp mov aas aad mov inc cmp dec ret (bad) jp int pop push jmp icebp jns cmp das xchg xchg lret inc xchg dec lret test clc lea mov fwait inc dec and mov jmp jbe sar pop xor xchg fist mov or push push dec ljmp daa or fmulp lods inc adc imull test inc sub stos (bad) xchg dec xchg fldl push add dec xor or mov lcall pop out pop xor and insb nop iret rcrb (bad) outsb mov sbb add adc mov and xchg sbb (bad) adc add cmp daa adc jl dec sub mov or adc adc push mov shr repnz cld mov mov add dec mov cwtl cmp adc cmpsl add mov mov icebp add cmp fildll mov sbb add outsl mov jp xlat lcall and xor xor sub xchg jp mov stos mov test fdivr (bad) and pop and mov and mov add cmpsb in jl (bad) xor or cmp cmp (bad) and lret out add xor stos cltd iret cmp lods and loope or movsl js les stos mov fstps fmull add xor scas call test pushf idiv out fsubl pushf push repz pop push adc dec pop pop or inc mov xchg xor lods aad (bad) iret sub pop adc and push push xor and sub iret das pop mov dec loop mov add xor mov sahf sub or sbb das sub fs stos adc bnd add mov lcall inc jl jo enter (bad) and add jmp lods sub cmp ficom (bad) adc mov inc iret add dec les or jge dec mov mov les or cmp push movb push inc icebp popa sub or mov rorl add call stos je mov cs push out sbb lods movsl mov mov cli mov xchg sub in repnz fcomps loope sub in mov mov rcll loop popa mov push jno mov mov inc popf int mov leave jno daa pop sahf adc sti fisttpll cmp or jns cmpsl jge insl je lret xchg xor adc loop out mov pop mov xor test jns xor andb xor nop mov sub sahf mov push js dec or push mov (bad) mov sub clc es dec or jge out jge ret cld pop cmc xor (bad) sti loopne repnz mov iret xchg mov or jmp and std cmpsl std xchg lock and push jle inc mov xor xor (bad) sbb gs flds out pop cmpsb jo shl divl leave or xor rorl cmp pop rcl fs call add fs test mov bound add fwait cli (bad) fnstcw fcmovne aad and jno and jp pop leave not repz out in (bad) aaa ror fidiv popf jb pop (bad) jb pop (bad) ror fiadd out mov sub les fldl dec (bad) push mov iret cmp cwtl lds fbstp mov jp pop jne adc jnp or or es xor fistp jl add dec sub inc sub sub stos std cltd mov stos add repnz push jno mov dec mov jmp xchg or ret mov pusha popa xlat sub aas cmpsb andl push sbb rclb mov scas jae mov ljmp mov les sub mov test rclb lcall jg lock daa mov pop pop hlt xchg xor mov scas mov mov xchg ficom mov lods aaa xchg sar add lret outsl bound aas pop lahf mov dec cmpsb nop inc (bad) imul adc xchg aam iret mov ds or bound xlat inc and xor shrl add push pushl sub jae mov or adc rolb fcoms adc xchg adcb xchg std cmp jle ret mov push (bad) repnz cmc adc jge ss int ja mov jp mov xlat cli leave lahf lahf cld sbb addl (bad) jns inc pop mov lret sub movsb mov or adc movsb sub enter insb (bad) mov outsl pop xlat push pusha dec xor out mov das adcb adc ljmp outsl jle mov cmpb (bad) dec insl test mov mov es out imul pop mov cmp mov pop jmp adc mov dec mov adc xchg test negl movsl add mov mov jg lahf push out ja fiaddl (bad) pop xchg into in les aas loope sub pop fist (bad) lock inc cmp pop inc add push and sub jg push or adc adc iret jle mov adc mov sbbb mov adc and mov mov mov pop xchg mov out sub daa stc ret fsubl (bad) and aad orb adc notl xor sub notb push sub outsl pop jp movsb (bad) cmp dec ficom dec xor add fsubr adc mov lds adc popf out rorl jae movsl shll js fwait loop xlat xchg pushf popf rorl xchg jecxz arpl and pop into in xor and add dec je mov test xchg ret and ja mov and fucom jg cs jecxz push outsb lret out mov lods mov xor daa lret push inc pop scas dec or add pop pop add add idivb test loop adc and xchg rcrl mov inc mov daa fisttp std jg and xchg sub jp (bad) cmp or xor hlt repz fmull repz stc pop mov popf xor or or sbb data16 js call testl in les rep fsubs lret lahf xchg jbe test fndisi(8087 mov in jl ret push jmp sub lret mov jnp xor inc inc add or jmp movsl sub stos push fs mov add int3 dec ljmp pop repz fucom icebp (bad) mov mov insb fdivrp call scas (bad) cld sub ret gs ret out int pop es cmp fstpt test out dec mov daa mov pop xchg xchg (bad) pop cmp or and leave daa sub int3 mov pop adc xchg jo xchg les mov stos xor mov test mov lret ret out xchg lahf (bad) fidivr push sbb into push mov push jo imul imul push pop cltd sbb cmp mov inc (bad) mov in es xor int inc outsl rclb and pushf jb jmp lret js push mov gs xlat daa aad mov es ja xor idivb ficom into popfw aad int3 xchg pop mov out scas push pop mov jmp mov ret adc or cmp cmp sbb repz sbb sub xor or xchg lret inc shl daa and sbb sub mov mov cmp fnstcw xchg mov jns pop push imul repz cs sub inc pusha es decl jb dec stc mov pop imul sub icebp mov imul mov mov pusha or js lret repnz imul stos (bad) dec dec out je stos call mov jmp mov stc pop xchg sarb xor out sub sub enter push cwtl jmp scas xchg sarl cltd (bad) sub cmovnp aad outsl repnz roll mov jg gs pop cmp push xor jle lret fildl xor in fcomip mov push add fs or pop or pop loop jne das cmc xchg mov pop ja (bad) inc xor xchg test scas jne imul test jge dec pop and loopne loop push sub xchg enter mov jg stos das xor out sub sub dec mov dec out adc fidivl (bad) mov daa sub inc stos js xchg std sbb pop fcmovnu and das adc mov lock mov mov lods xchg fcoml ret xchg cli (bad) push cltd mov push mov cld add pop push je outsb (bad) sti cwtl jg pop (bad) fdivr roll (bad) xor int3 fistp dec mov cmpl pop fistpll mov adc cld add call fucomi cli push sub daa leave out (bad) jmp mov ret sub pop lret xor mov cmp adc adc jge pop jmp mov popf (bad) (bad) ss repnz out push push les ja xchg and inc imul push rcrl jmp ja out fcmovne stc pop jl cmp cs repz cmp out sti xchg aaa and pop pop pop push test and cli pop loop jae inc mov aam jmp xchg lods ret xchg mov sub or icebp pop (bad) call and add out cwtl daa ret lahf (bad) push adc sub add stos cltd mov push dec cmpsl jnp xor jmp adc mov or ret push popf push pinsrw (bad) mov mov fdivl push adc shrb mov imull mov lcall and mulb int xor push (bad) mov push into jno enter sub fildll test clc fldenv loopne sub and adc xlat jmp add fcomip adc lods or les adc div cmpsb or incb xor xlat add mov scas fstps das push cmpsb lods cmp xor aad mov mov xor jmp dec rorb mov dec xor lahf mov or nop bound pusha cmp out mov or shlb xor sbb (bad) push jg xchg pop cli cmpsb xor sar lods shl mov push int3 jnp dec stos testl out ficomp and push or shlb cmc ss les xchg xchg jmp pop (bad) imul mov push ret xor add cmp out sub sub out add dec inc repz add dec (bad) xchg fwait insb mov sub add (bad) dec test mov pop pop mov cmp nop mov (bad) xor and mov sub and (bad) icebp and or and stc xchg sarl mov mov cwtl mov adc out mov jle pop push fsubl jecxz aad decl repz sub negl aas and sub pop push sub je notl ret scas faddl ret fdivrl push or mov or (bad) test movsl les sti add mov fldl insl xchg std adc out mov inc sub xchg repnz je (bad) lret aam pop fsubrp dec mov into ret icebp cmp pop stc xchg test ret xchg outsl xor sub sti outsb mov sub push sub dec loope ljmp daa gs and inc arpl sbb inc ret sbb clc repnz mov adc test jb jg xchg lods cld out lods fbstp or das mov (bad) pop inc mov ds test loop xor xor ja popa push in cmp outsb adc mov sbb or push mov clc insl mov mov and data16 or shrl mov xor dec push and adcl or sub dec jb jg ror jp adc inc lds jl addr16 xchg gs es popf push xchg (bad) (bad) xor sub popf incb pushf add xchg (bad) in push mov jno sub sub push ljmp inc and aam bound cwtl imul andb popf push jmp cmp dec mov and adc hlt leave pushf inc inc xor pop rorl ljmp fmuls and add xor jmp pop out dec add loop and shrl out xchg mov insb cmpsl test notb (bad) xor mov imul lret dec (bad) mov fbld xchg adc adc pop repnz sarl loop icebp fimull and xor lcall mov jge loopne ret test jg out rorl sbb sbb push cmp adc lahf (bad) mov pop push ret sub inc daa mov subl lret lahf int3 sub mull bswap int3 leave daa mov (bad) jb ret imul jmp push sti cwtl cmpsl cld or add mov pop fisubr int leave (bad) jp add xor icebp push aam pop stc mov xor or cmc mov std shrb lret loope movsb push int3 pop dec fmul (bad) adc push aas sub (bad) jecxz jg xchg or mov pushl ja lret ret subb lret dec xor aaa mov clc mov mov fsin outsb and outsl mul add lock or out sub or cmp wbinvd (bad) fcomps xchg test mov mov mov fstpt mov arpl mov and sti les mov fs fstpl fnstenv enter cmp xor int3 (bad) repnz add fcmovne cmp cmp and pop cld push mov add rcrl je clc cmpsl dec cmp jno inc mov out adc loop xchg int3 daa nop stos xor xchg std xchg sub push xchg and mov push bound repz or fstps stos shll xchg mov pop scas or and cs xchg icebp dec or pop roll mov lea inc mov dec inc sub and xchg xor aas lods dec jae sbb int movsl push scas pop scas inc or hlt cwtl or push js mov imul insb (bad) mov inc add xchg addl or rol sti mov or mov icebp sbbl repnz in mov sti jns das pushf fstp xchg xor pop push jae mov out cmp xchg and mov and jns push fidiv mov xchg push pop repz sub dec jg and inc mov jbe insb pusha outsb pop mov push sub bound pop jge or xlat mov (bad) and stos sub ret dec scas je cli lea ds adc lahf and lods adc jle or mov pop dec pop mov mov inc (bad) or mov (bad) enter add ja pop dec mov pop pop xor stos (bad) mov or movhlps cmp pop (bad) pusha pop add hlt jne inc add mov sub je or pop jg or mov push ficoml out cltd mov add or push or (bad) mov rorl xchg and enter mov es pop dec adc mov loope jg inc inc jmp push jmp cs rorb fnstsw xchg push push mov add or decb push push push jge (bad) fldenv or cmpsl cmp shl int3 push pop sbb or pop test mov add cmp je cmp push decl sub ret cmp (bad) testl out pop (bad) fist push call pop mov negb add jmp jne loop add stc mov sub dec sub (bad) idiv leave jl and aas push push jae (bad) jmp push imul jae xchg and xchg mov sub mov xor jecxz sub aas sub push insl leave push sti inc sub int imul lea xchg aad jp jns scas es aas mov rcll jnp das cmpsl mov sbb scas add cmp movsb mov push aaa lods stos and mov cmpsb adc ljmp clc das movsb mov outsl out iret sbb xchg inc dec (bad) sub data16 ffree stos add outsl stc mov push adc adc xchg xchg or pushf mov and mov (bad) xor fcom and adc xor pop data16 mov inc inc icebp out mov sahf in in xor stc loope stos mov pusha cwtl mov and xchg lods (bad) stos repz (bad) add mov cmp push das push mov or repz pop stc xchg insl in je mov inc jno cmpsl fbstp jg cmp or cmpsl sub andb cli mov call adc mov mov and lcall mov (bad) mov adc lret and clc fwait sub xlat push pop into jmp inc mov add push ret mov and xor and movzwl daa (bad) arpl cmp mov jge mov (bad) lock push pop mov mov cltd mov xor mov push fstps rcll push movsl popa mov daa push xchg xlat push push add cld cmp (bad) dec movsl bound fisub ret jle and cmp add dec xor hlt scas test adc scas lcall pop and pop imul push insb repz mov dec cmp clc xor or xchg or insb test push push scas loopne subl or lea pop lea xor arpl mov cltd and mov dec xchg loop sub mov fistpll scas xor adc hlt jne or jge add or and into lea iret mov mov jle xor xchg test sub ljmp mov test xlat adc cli movsb add mov jnp mov ret sub rclb lret push xchg and hlt jge mov loope iret dec ret dec stos leave out jle sub inc mov bound jne ja jno dec fbld mov jne leave inc pushf int3 fwait dec pop loop mov jmp and inc mov xchg in ds sub mov pop movsb ljmp adc push icebp mov xchg xchg adc lahf les sub sbb movsl mull mov rcr bound ds cmp ret stos pusha add cmp inc or shrb fisubr cld (bad) movsl mov cmp in pop mov or xchg dec jecxz adc idiv int inc mov (bad) test pop and in mov pop sub or ss lret test or inc popa add or imull xchg lret pop ljmp jge or stos dec inc pop mov dec (bad) pop cmp movsl (bad) adc mov sbb mov (bad) fnsave and test lret jl jnp push cmp out inc jp ljmp out mov adc js lret xchg lods cmp xor mov (bad) xchg adc daa rorl aad xchg cmpsl or push inc ror jmp sti mov pop mov cld and (bad) mov pop cmp rol roll std and lods push test xor xchg xchg xor add ror enter stc pop pop popf mov lock dec call xchg sub popf in cmp (bad) sarb das in out mov jb pop add adc or pop inc (bad) xchg fnsave adc mov icebp or mov xchg add sbb insl es push daa in das ja add xor pop and bound hlt mov (bad) into xchg out jae inc dec mov cltd clc sbb insl imul insb cmp mov bound out out and pushf or mov xlat (bad) pop pop push mov stc xor in push mov mov mov call dec test xchg aad dec sub movsl xchg call jmp lock sti imul add or imull les lcall das scas jne out je in (bad) mov add cmpl inc iret rclb scas sub (bad) cmc in push in sub xchg dec iret (bad) adc sub mov inc movzbl (bad) ja sub (bad) pusha hlt (bad) mov mov sub jp mov jmp xchg cmp sub (bad) out lret adc fdiv out in sub into cmp add mov frstpm(287 sbb out fisttpll das fnstcw mov xchg stos sbb cs (bad) iret cwtl int push xorb pusha mov xchg (bad) dec and aam lods stos in scas mov test pushf mov jns bound incl mov cmpl mov or and mov pushl fmull (bad) sti sahf mov mov ljmp xor (bad) flds add mov jle mov frstor push pop stc xchg popf mov xor in mov mov pop xor cmpsl les aad and jmp jp in jle jo lock adc pushl aam (bad) repz mov or mov in cmp xor jne js std push std pop ljmp push pusha cmpsl icebp add das inc cmp mov and dec xlat in mov push fimul in mov cmp fildll repnz push imul dec add mov jp lret inc scas and sub mov shrl jl movsb scas bound inc add dec push add xor dec and (bad) dec mull mov or jmp repz inc rolb push dec jbe push aam and mov cmp cld push add xor add mov les mov mov fnsave mov push pop mov dec ret mov pop or stc add fucomp pop mov jbe xor and loopne mov subb lds or cmp fs scas sub adc sub loope pop mov das cld mov data16 pop scas ljmp mov sarl aam outsl pop sub sub or dec pop les mov jno dec ja mov add xchg adc repz add push adc and (bad) inc pop pop push repz or add cmp rcrl and jnp sbb or sbb sbb lods shll and dec push sub mov (bad) clc in mov cmp add sub mov sub jle jmp nop sbb pop rcll sub pop adc mov scas mov xor pop daa into push xchg push jge mov test (bad) and loop sbb sub mov pop pusha scas xor ds mov mov or mov cmp dec (bad) iret pop inc xor loop dec test push ret pop mov xchg sahf xlat stos dec or jg sbb jns mov (bad) jmp test outsb sbb insb js or pushf jo dec arpl popf push xchg ja adc xchg push sbb cmp push push (bad) sub addr16 pop (bad) test mov lods aad call sub pop or add jbe in sahf inc gs fs fist add mov aam out idiv dec mov sub push sbb add fidivrl xor lret jae mov ljmp mov sbb or mov pop sub inc dec cwtl cmp mov out ds mov push (bad) add mov icebp mov adc inc mov lods dec scas je mov mov clc dec mov decl pop xchg stos les nop mov fs xchg xor sub js scas xor mulb lods pop mov adc jae add sar aas dec out xor jns mov (bad) mov jge lds or iret mov mov add push cmp jl fsubl add ja imul ret test andb dec jg xchg movsl js loopne movsl and fisubr pop dec clc out mov das icebp int3 dec sub in sub xchg push pop ljmp xor add mov neg notw iret xor ss inc mov and out mov pop int3 gs call jbe dec and add dec jbe xor aam mov repz dec dec jb add jmp ret orb insb adc and adc mov inc jae (bad) call jge lock mov call (bad) insb rol and stos fstps cltd dec mov fldcw sub dec negb mov dec loop (bad) mov std dec or add inc js or jns movsb popf and aam pop or loope jae inc scas push push push and je arpl sub xchg jmp test sub or adc test jo iret xchg (bad) (bad) into or xor cltd adc mulb jbe (bad) mov iret in outsb mov push pop popf imul mov xchg jmp gs cs dec pop push clc lret adc xchg leave out ljmp jecxz push add notl pop inc dec xor test clc sub iret pop mov out pop and push call jno (bad) mov and mov sub ds mov pushf clc into xchg xchg loop cmp in std mov fcoms mov stos xchg fwait mov enter test mov nop arpl inc iret xchg into sub les enter rorl xor xor test mov push mov aad ljmp ljmp aas mov daa mull xor aam lcall clc xchg fdivrs jb bnd pop ja push mov dec mov and lret std outsb loope shll sub dec jb iret xchg mov add cld addl clc push push sub scas fs int3 iret fadd push sub mov lea mov jecxz popf mov xlat xor mov std in mov xlat push out clc mov jecxz sub ja dec repnz jnp sbb inc mov enter mov stos lret add mov pop push test lods enter mov mov cmc push lds dec lret pop pop out dec scas xchg mov (bad) xor mov ds or lret pop stos fs dec movsl cmpsl push dec pushl push cmp mov fistpl add mov jbe call jne sub cltd mov pop sti mov sub adc (bad) sti ret popa fs mov hlt jne (bad) mov lcall loopne xor shl mov cmp pop shll movsl sbb movsb arpl xor ror fldcw cmp dec pop jno add cs cmp inc orb jecxz xchg adc cmp sub sbb xchg xlat test bound sub out dec inc mov dec xor adc stos repnz stos mov ljmp xchg (bad) mov enter xor sub sti or add loopne cli push fsubl dec push adc out dec mov cmpsl mov fistp fwait dec add jle fiadd test cld adc out xchg hlt xchg inc or jp adc adc leave (bad) icebp and out jae and lds push dec adc mov xlat data16 dec divb mov mov sbb adc pop jle fs fnsave mov rolb or sub lods cwtl or sarl pop xchg clc xlat sub sub popf jp arpl (bad) add mov inc pop cld testl (bad) pusha or (bad) jg cs push xchg cmp dec aaa or inc std and pop and mov pop and cltd jmp mov cmp add cmpsl sti jmp mov push jge xor sub out xor or mov push das je pop pop xlat xchg enter pop stc dec xchg je in push or rol and sub es push inc iret cltd add test mov je mov or xor in pop lock in push or shr cli repz inc xor shrb or add pop xchg adcl sub imul pop cs mov outsb pop cld out xchg out cs jmp insb ja pop dec in out mov or adc call repnz and aaa xchg lret frstor mov ret jp inc sbb and and nop ret or sub int xchg pop repnz xchg call add fldenv ret fnsave xchg popa repz loope,pt xor nop mov (bad) sbb rorb mov pop stos pusha rol and mov pop movb sub imul fstpt imul cwtl push and divl (bad) dec stc mov scas int loop push pop incl addr16 ja ret push xor int test testb xchg leave imul and cmp add sub mov out xchg mov dec test aam lds iret les mov and mov mov ret shll decl xchg leave aad fisubl jmp push lret dec (bad) dec js adc std pop icebp cmpl rol loop cwtl xor popf push jg cmc cwtl pusha into mov xor or and adc mov movsb clc add add mov mov cli mov or add mov xor push mov call fcmovne pop fstl idivl setns div or xor mov cmpsb cmp sub in in adc xor sub lret mov dec sbb mov movsl lods mov ret mov adc jo jle lret mov daa mov mov cmp sti data16 and mov ljmp int3 cmpsb test cli call inc leave inc xor add shll movsl xchg mov add sub mov leave push mov xor cmp dec cmp je fs mov push pop ljmp add cwtl ficomp bound (bad) je out dec ds leave dec repz and jmp (bad) sub adc flds jmp stos add out cld inc cmpsl (bad) mov rcrl pop ret rcrl into jns dec pushl add (bad) gs lods dec imul sub sbb pop imul in pop add mov lcall aam xlat pushf imul ficompl imul sub out daa inc cmc sub daa pop xor pop rorl lret dec sub jb fcoms leave add pushf pop enter daa mov test imul dec enter (bad) shrb scas xor (bad) mov xchg pop loopne movsb fsubrs lret pop pop bound ss xor jmp stos pop adc pop test iret jae sub and sub cmpb pop push push xor popf pop xor mov sbb das stos sub aam dec fucomip mov and stc adc (bad) dec (bad) fstp popf inc out stos cmp mov add mov lods leave test ds or aad or (bad) ret pop xor ja clc mov movsb jmp cli mov or fistp popa mov add data16 daa ret rorb add lret into sar dec or sbb push push roll sbb lret pop pop int3 add cld rcrl daa jle or mov jbe out stc push cmc lahf insb xchg or push mov fdivrp sub das sub and push sub scas popf subl and or (bad) and push movsl incb es mov rclb sub cld clc xlat mov pop push fisttpl fisubrl insl pop inc repnz xchg divps leave fucom popf push add pop out mov mov jle sub push cmc in and pop outsb inc sub xor mov and fwait std push dec loope (bad) shrl out mov cmp sbb sub add (bad) stos push or jno insl or jno mov mov scas out daa out sbb adc adc (bad) mov sub dec mov popa loopne push sub pop adc cmp outsb push dec lock xchg sub out cmpsb rcll (bad) out ficomp jne or loop je repz ss mov outsb jne adc test xchg sarb mov sbb mov pop sub jne (bad) loop push jbe in jmp outsb xchg clc shlb lods inc out xor icebp ss add push lret sahf jp mov add cmp ret mov popf sti fadds jg out adc sub fldl icebp jbe dec mov jp (bad) cbtw cmp (bad) xchg cmp mov aam xchg rcl insl scas pop xor aad add ret cmpl (bad) (bad) movsl pop xor mov cmp and fnstsw xor (bad) clc daa movsl out mov dec mov popf mov or adc jle jmp fs push out je scas mov pop aas mov (bad) and leave out pop push cmp in repnz imul lret out std adc add ss push stc mov lds loop pop sbb sub sarl and push cld pop movsb stos mov and out pop repnz (bad) jp loop push fidiv movb ds xchg adc jo daa out inc mov and adc dec out ljmp popa cli add stos loop xchg mov and add icebp test repnz jl inc and and shl xchg and dec dec int3 int inc sub incb and jmp xor lret cmp stos (bad) in jo loope sub je loop inc pop cs pusha test dec dec dec add adc ret add mov pop test cltd roll jecxz push ret (bad) fildl decb pop fidivl popf xchg xchg pushf cmp ret ja mov sbb adc add sub or push dec (bad) shll xchg adc sub lret jl daa xlat lds sub jbe imul cmp imulb ja (bad) mov or ror sub jb ret pop (bad) lret decl negl mov add xchg cmp das cmc jecxz pop call mov ffree mov hlt lods sbb lds or repnz test mov gs movsl jge fist adc adc cltd outsb imul add dec push push inc sub or popf inc in das xor cmc mov icebp idivl scas iret test idivl xor ds pop xor xor push or fsubl hlt adc lock mov pop out fbstp (bad) fmul or idivl sub dec mov xor call mov cmpsb and push ja push int das mov aam movsl mov jge jns bound sbb push xchg lea mov out out dec test jnp std insb mov add and adc sti mov (bad) orl pop xor lret out mov daa dec push clc bnd call sub push dec dec xchg add hlt cmp or inc and pop push in daa sbb adc dec lods inc and push stos dec pop xor into xor mov xchg lds xor sbb sbb push ret push pop and out or cmp and jl mov stc ss push ds push and lods pushl inc (bad) (bad) jns cli pop sti lret shrb cmp push lahf loop push es cmc mov int3 xchg add scas lcall addr16 sub or in xchg dec sbb sub cmp es sub dec add mov pmaxsw jne fdivs mov sub xchg ret mov inc cs pop and push enter (bad) or add xor dec mov movsl cmp scas mov sub daa xor sbb sub pushl jo adc aas mov fdivr push (bad) jg xor sub (bad) (bad) jecxz dec out sub jnp lock push push sbb add push push inc fs fist mov adc bound mov scas flds push mov test repz gs lods xor mov jo push sbb in add sar jle adc lods inc lods or sti jnp daa sbb fidivr repz mov dec jae mov scas je mov cmp and push (bad) xchg mov mov xlat fs scas enter and mov cmp scas aaa fnsave hlt aad daa loop cmp fildll ljmp lret xor leave xor push mov push aad popf rcrl push pop imul out imul popa rorb cmp test mov pop sub (bad) cli fs mov sub mov pusha jmp stos addr16 out in jnp iret cwtl inc repnz mov sub xchg jge sbb push test jg sbb pop into sahf and cmpsl fstps les mov aam push jg adc sub sbb lods jle push lods (bad) or into nop (bad) pop lods in movsb repz fnstenv roll and pop fsubl mov jp sbb (bad) cmpsb es rcrb fsubrs xchg fidiv cltd inc enter mov push pop gs lods adc ja nop testb mov push jbe dec xchg insb jbe popa into sub add lahf je pop (bad) push mov and (bad) das mov cli inc mov mov rcll repnz cmp lods imul test rcl mov cmpsb (bad) cmp cwtl dec push or lock test (bad) jmp lret leave icebp adc xchg inc mov jnp xchg pop mov xor mov mov pop shll std jnp mov jg sub jp mov add dec and (bad) mov pushf mov dec idiv lds push mov push mov pushf cmp pop sub outsb fstl jge adc jle mov mov dec xchg cltd lods shrl add sbb rclb and and jns aad fcompl dec xor push pop xlat fisub sbb repnz add cmp test test and test lret fisubl addl add or jg popa clc rcrl inc sub mov test and into push out pop repz mov mov movsl lret popa dec enter or jmp in stos call (bad) repz jmp in pop mov pop sbb xor popf js dec lret cltd mov jne scas leave loope fimull mov (bad) and dec dec (bad) xor mov (bad) and or xor push jns imul daa cld xchg fildl and add jno add jp sbb cmp xchg cmc xchg popf mov push out in mov fwait test enter mov push aaa pushf inc mov fildll adc mov arpl adc jns pop xor int inc xlat push lds adc mov mov cmp push in loop add dec cmc fnstenv fcoml daa pop xchg pop mov in sti jp popa xor jae ja fisubrl push sub or (bad) cld outsb imul popa inc or sub lahf pop xor ret push pop sub bound dec jecxz jns ret mov test add test mov fnstsw lret stc xchg inc add sub mov push les add (bad) and loope nop mov pop sbb mov mov scas or out pop add pop mov cmp jp add loop (bad) xor mov aas fcomp loop in insl push lret sub icebp ljmp aam das aam pop adc int xor bnd push push cltd mov lret sbbb lods inc es push imul js xor push sub mov xlat in sub mov add or sub pushf mov enter daa xor ret ja jl pop hlt (bad) inc mov sbb shl stos (bad) mov xchg imul mov test adc and sub mov pop sbb inc insb test push das sub push mov cltd int3 data16 push dec testb ljmp pop daa daa xchg adc mov gs pop add sub imul or (bad) flds mov jl loopne into sub pop fbstp scas push (bad) mov dec jmp (bad) push std adc gs ret fs inc sti out or sub mov (bad) mov and lgs daa (bad) xlat or repz pushf movsb adc inc push shlb popf fstpl xor pop adc mov mov stc xor leave or sti adc scas popf orb les xor loope sub rcrb js sti and and pop mov cmp mov cmp loop jno dec ja or mov sub dec out push lods stos fstps out xlat pop aam inc repz sub rcr mov and lret and push loop pop das (bad) cmp or adc dec into add outsl xchg outsb xchg sub lret rolb out dec mov stos sub cld xlat mov daa dec inc mov lods xchg mov out rcll and jg xchg lods mov aaa mov out mov shrb add inc adc lea and adc xor out sub dec xchg repz sub mov xor inc loop test ljmpw sub inc add sub mov mov stos sub dec ret sar (bad) mov dec cmp lret mov loop rclb jno add ror daa or lock in inc mov mov imul cli push test xor fdivrs into mov (bad) mov jmp rol mov add inc adc ds sub popa pusha jp cld and icebp mov mov pop fs push mov fisubl cld jmp mov sbb (bad) mov jle imul xchg test pop push pushf stos xlat daa add stc and fildll int3 jno jbe push jge mov cwtl or lret rcrb sub adcb sub sub jmp sub (bad) addr16 decl adc idiv dec mov xor or ja or lds inc and call lods sub test or cld (bad) fucomip push mov cli xlat xchg or outsb inc jbe icebp daa jge sbb mov idivl iret mov lods push (bad) out mov fimull or lret rorb jae and mov or (bad) xor lods ss out in pop jle add cwtl xchg leave popf aad aad iret xchg xchg mov rcrl insl dec out adc push and loop jne sub xchg repz and aam inc movb ret pop inc xorb adc lahf icebp inc dec mov mov xchg xchg pop xor adc out sub sbbb sbb sub xor mov pop fcoms test ret repz dec stos push mov arpl mov sub or dec shlb lret and jne dec psubsw mov and mov and mov and or jecxz inc xchg xchg sti mov jmp and xchg ret sarb fisttpl xor mov test cmpsb cmp (bad) pop outsb push pop pop rclb (bad) ja pusha and lret dec adc xor mov js iret mov dec mov (bad) lock pop cltd aam jnp (bad) mov shl xchg push jo push adc rolb popf lds leave push add pop sub out xor scas and xor xchg loopne push fstl icebp xchg popa xchg mov cmp push jo pusha add leave mov cltd add pop fs jb mov enter and fbld push repnz jg xor adc pop sub add add ret jge ficomp xchg lea xor pusha int dec sarb or ja sti xorl lods adc lods (bad) movsl test jmp adc pop je sbb inc xchg jno sub out data16 insb nop inc mov leave icebp xchg lret cld cmpsb cmpsl cmc pushf test jne icebp pop into jne xlat mov add sub dec xrelease jg xchg jl leave ret or (bad) push pop mov (bad) mov adc mov ret lret sub or cli mov pop scas jp xor or mov sahf cmpsb mov pop xor inc xchg add scas loope clc sub outsl lock pushf pop or and dec add (bad) out sub add fxch sbb push sbb cld mov cmp xchg faddl add mov add sub or dec cmpsl push out jbe aaa icebp (bad) inc pop or imul imul and cli enter xor subb mov das inc into ljmp add cmpsb or shlb dec or adc xchg (bad) mov and js sub or cmpb adc pop add mulb mov push xchg mov data16 mov ds je add xchg push jle lods sub cmp iret popf (bad) cs mov xchg out mov xchg jecxz loop (bad) jmpw mov add repnz adc nop xchg scas out dec repnz adc mov push push add scas loop addr16 push (bad) imul mov lret pop sub xchg pop mov fcoml add shrl pop mov std scas sub pop mov out test mov pop out (bad) (bad) mov jbe cli mov icebp push xor pop gs gs jge mov mov rorb and jmp cmp and and add adcb mov add add sbb inc jmp pop fldcw fidivl (bad) clc push cmp sbb sbb mov adc out sub inc leave push lea adc js xor jecxz add dec fstl or std rcrl hlt cmp fwait sti in push mov idivl xor (bad) sub stc jecxz sub jmp out flds fnstcw test push (bad) and pop ja,pn fisttp mov je push and and add and icebp popf pop adc lahf jb mov or ja and xchg ljmp cmc repz out push adc xor negl addr16 std or push outsl push jne (bad) repnz repz xchg scas mov dec call adc or cmc dec (bad) jp or and add pusha sbb into add push push dec sbb add lret movsl mov stos xchg mov mov cs xchg adc or mov mov (bad) cmpsb mov xor arpl pop movsl repnz pop rorl add movzbl (bad) dec pop adc lret or pop cli popa inc mov sbb mov and das and push push mov jl (bad) ss xor sbb sub lret xor add push mov cmc fildl dec jmp adc cltd dec cmp (bad) pop mov adc mov jmp rorl pop imul rorl lret popa jg jmp sub out mov rcrl inc sub xor cld mov dec aaa lcall push popa mov loop ja sbb movsb (bad) jno jnp ja mov pop negb and ret sub add out jbe mov cld and mov je aam out adc sbb stos enter ret popf mov adc addl push call testb mov icebp adcb adc jae das into mov in sub in les rep cmp cmp mov lret dec mov mov sub sub sub push mov push pop xlat bound stc pop bound pop in movsb iret imul sub push movsb (bad) mov repnz imul xchg mov or out inc ret call push mov xchg insl push (bad) aaa leave pop (bad) loope sub pushf xchg gs (bad) xchg aad cmp sub mov jno dec bnd inc (bad) test gs and adc call imul repz andb sub popf pop sbb fidivl jle add xchg lahf stc ret mov or sub xlat lds shrl inc sub push sbb hlt mov imul xchg mov xchg sub iret out mov lods xchg sbb and das jmp call push sbb and add adc (bad) or jg iret mov dec ficompl xlat leave test jecxz push mov pop repz pop mov pop lds hlt sbb loope cwtl push xor scas pop jne faddl pop mov mov and ds lcall jno sub enter or mov sti repnz cmc cltd adc or test aad es pop cmp (bad) and or sub push jle out ret push push jbe mov outsb fstl and xor stc add ljmp mov dec xor xchg mov add outsb or mov js cmpsl cld in fs fsubs ficomp cmp stos bound (bad) je pop shll icebp mov iret mov xor clc (bad) xor xor out int3 (bad) notb (bad) jecxz push lds movb sti pop mov shlb push jne inc test dec inc dec int lods mov pop cmp cli ja mov outsb sub int3 xchg xchg jnp sub jecxz xchg and mov inc xchg out gs mov mov sub int xchg imul loop mov and cmpsb jno lods rorb xlat clc into pop sarl xor push fildll mov imul push inc push ss sub jmp fist mov pushf xor cmpsl xchg cmpsb sub jge les sbb fstpl idivl and dec test cli out fwait pop dec sub adc xchg add dec cmp popf shrl movsl faddl push es jle sub cmc sbb or ljmp cmpsl jns pushf (bad) xchg (bad) out mov or mov sub outsb mov dec jmp daa stos loop xlat cld jl loop adc in gs mov lock es ds je ret idivl mov lods dec jg (bad) hlt mov sub xchg cmp xchg mov clc pop or fldt cld push (bad) xor mov add or adc push xchg sub add int divb xchg or pop dec ja pop es int3 jno aas repnz xor sub jle leave je inc and lahf push jp out pop icebp ljmp mov xor xor inc ljmp arpl stc add adc in fistl mov or daa sub cmp dec mov iret (bad) push jb add clc fiaddl jnp (bad) mov add xor mov mov inc inc ds pop pop popf (bad) ds mov add xchg iret jp dec ret in mov jne ljmp fsubp xchg adc pop and or jae adc enter mov mov and mov movsl dec aaa sub mov dec and or int3 imul add pop pop stos mov and test dec sbb mov fisttp and fstpt in popf jne imul loope sub mov leave adc xor pushf xchg leave test test (bad) add add (bad) fxch test mov les mov (bad) mov fist cmpsb xchg imul inc sub mov sub fldenv icebp xchg mov repz imul ret jne inc roll imul and cmp repz jb ret push in scas push nop imul xor call and pop sub fisttpll movsb add mov sub xor and in in mov push or jbe js pushf xchg pop out repnz adc std das (bad) pop sub cld xor inc push pop jns fsubrl (bad) mov (bad) lods push mov jns add mov lret inc sub cmp cmpsl (bad) push inc jmp lea sub jmp mov inc adcl jne xchg adc jne call dec neg or and xor xor ret stos sub lods xor (bad) gs dec sar leave lock gs cmpsb pop sub add dec cli mov jne and adc mov or stc push repz icebp xchg and mov stc jbe and rolb xor jno imul lahf loope and mov daa jmp push cmp lahf out and nop ret xchg cmp add je jecxz pop icebp cltd sub mov ja fldt das hlt outsb popa add or mov lret push and dec sub jb mov xor fsubs outsb inc fisttp bound mov push adc pop add push lcall mov mov int mov dec adc repnz enter in daa pop les dec aam (bad) jae mov xchg mov mov dec (bad) jb mov test loop xchg int3 out add cmp sub faddl ret rorb sub mov mull xchg (bad) dec add dec add sbb lock sub rol sub mov popf clc cmp mov push (bad) movsb adc (bad) arpl mov mov jns daa pop sbb daa mov jge jno in add fs fistl je out add cs dec mov mov data16 clc fdivs cwtl inc mov cmp xor fisttpll dec sub iret add movb inc clc rorl mov out adc mov lock mov push sub jo (bad) psubusb or xchg and push add dec mov adc daa sahf adc repz pop sub cld lods cmpsl mov or inc xchg ljmp jg fadd pop jmp and fidivl mov fs loopne and rcl idivl xchg xor (bad) jo or or sub mov inc push add in in and adc sti mov dec mov mov pop dec pop add je pusha daa cmp adc or mov inc jb ficoml lods xor mov sbb xor dec mov aam push xor pop mov jae lods push sbb or adc loop sti ret decl fdivrs imul aad repz (bad) cld movsl mov je imul shll (bad) cmp push test sbbl pop mov dec xor add aaa xor or xor jmp loopne sub sub rcll sub out or pop out fisttp xchg sti jae sti mov daa ds mov pop cmpsb sub and mov nop bound arpl into fildl js adc rorb add jp mov in insb xchg dec leave (bad) pop mov ljmp hlt stos clc ljmp mov cmp cmc dec enter pop adc ja jge scas jne and add pop mov push push xchg addl cmp pop repz lret pop and lods arpl jmp (bad) xor mov jae mov jg cmc adc jne mov (bad) push roll and imul test pop and mov js dec clc adc loopne adc sbb lret add add push push mov jg xlat lock add out pop addb push cli mov sbb hlt xchg daa jge sbb jge xchg mov and xor push xor mov sbb mov push pop add pop xchg pop pop mov lret in xor inc jbe addr16 push dec pusha push mov jg out and xchg pop (bad) subps pop add xor add shr nop mov adc notl cmp popa fstpt lock push pop (bad) (bad) repz adc or call add mov lcall sub pop into mov lahf in insb xor add push add push push push insl mov je cmpb push adcb popa scas jge or xchg push push repz sbbb out inc sub or rorb loop test adc adc popf negl (bad) sbb and mov arpl xchg outsl pop test roll pop add push push or loop lret (bad) push mov nop ss mov (bad) decb pop out mov pop lds jl fs loope (bad) mov or jge mov add sbb test add pop cmp icebp cmp dec addr16 and sub loope pop and int3 push sub mov (bad) mov mov jmp pop enter (bad) jge arpl sub pop xor mull shrl push (bad) fwait dec divb mov pop dec pop lcall in out sarl pop xor mov mov push in fwait pop cltd sub call cli mov inc mov xchg daa lret add sub out push xchg cmpb cmc inc sub xor and imul into mov lods lods adc pusha fsubrl fdivrs or mov aas (bad) push ljmp jmp mov pusha sub dec insl mov cmp daa ficom mov adc testb adc sub cmp push iret repnz add sub or xor stos negb out mov cs add xor gs or test pop mov pusha je leave jge mov mov out or call mov in lcall cmpsb out aas add cmpsl leave (bad) mov (bad) adc mov xor mov aaa xchg dec adc stos xor mov test mov imul xor es xor mov rcrb lds cwtl lods mov iret (bad) or mov push pop xor mov scas cltd mov and movl xchg fucomip and (bad) ffree notl insb push dec mov mov cmp jg mov xor sbb cwtl add jle jecxz es pop mov mov cmpsb jnp and push jp dec pop cmp out push (bad) mov xchg xor clc (bad) pop popa (bad) repnz mov mov mov adc sub cmp mov insl push mov (bad) cmc jle sahf mov and test dec dec test mov sub and sub jnp aad mov sub arpl aaa rcl mov ja into sahf dec jb mov sub or xchg xchg pop add or add stos pop out lea mov or stos jae out (bad) in mov insl lahf aam gs scas sub inc mov push imul jo imul xchg mov daa icebp jne mov inc and pop into push inc cli push pop or cmp inc inc push xor stc pop xchg mov add inc jb jge movsl jne enter or pop jl leave daa jne outsb icebp xchg dec xor (bad) jno dec push js lahf gs push mov and mov inc les xchg mov fisttp test (bad) negl call inc mov or ret dec jle jb cmpsl dec jp xchg or dec fcompl hlt gs jbe outsb dec (bad) xchg rcr iret loope cmp daa out jg add xchg cli cltd mov dec sub push sub xor add aaa mov push mov int icebp sub test mov call pop mov add sub mov pop add push fsubs push pop add xor inc iret stos lods sbb xchg into fwait insl das adc ret fmull je das adc daa mov (bad) outsl aas (bad) fisubl push mov aas and add adc or rcl mov cmp cmc insb pop dec out jbe or sti icebp sarl leave fprem1 sti xchg in jmp inc xchg (bad) fmuls xor jne mov adc mov cld xor popf sub (bad) inc scas mov (bad) pusha test xor mov loop (bad) stc xor add mov xor fist cmc jmp push xor mov sub mov (bad) sub mov loope inc hlt es mov mov daa add jae and ret sbb lcall orb and inc cmp lds imul loop xchg xor xchg data16 sub mov stc imul push leave das xchg dec mov pop lea lock je mov xor xchg push lret push mov mov das repz adc movl fsubrs scas out adc (bad) and adc in jmp mov flds add or and mov dec push int outsl xor outsl out dec mov inc lods call fistp jno decb xchg and stos out add in mov mov and add dec sub xor mov xchg test push cwtl cmp add lahf (bad) sub movsb ret lods jecxz rcrl jmp mov and and sub jmp arpl ret dec testl and rclb inc out or stos gs xor lock xchg jmp lret pusha repz xchg push pushf in sbb (bad) leave or mov imul jne xchg inc std loopne mov sub adc pop adc out jmp mov sub imulb imul inc xchg xchg hlt xchg in mov sub pop jmp push or ds movsl out fadd jb xor test pop jl pop pop lea bound cmpb out (bad) jecxz adc loopne andb sub mov and rcll insb notl push or pop add repz pop adc addr16 idivl xor dec clc fcmovbe scas test out out sub cli cmp inc jns mov ret ficomp je pop mov icebp dec imul call and dec lret mov mov rcll and xchg ret stos lret bound add (bad) xchg mov cmp lahf adc pop (bad) sbb pop fwait dec in (bad) lea jle jne cmc xor call pop aaa int3 or jecxz fdivs leave add mov add cmp sahf sub rorb xor adc outsb jbe jno,pt or gs cmp and push jbe daa clc sub subb xor or out int xchg sbb or mov repnz sti cld xor out dec scas lret xor call fistl and mov ret je into mov insb add fnop divl xchg int3 sbb (bad) sti mov sahf and stos sbb (bad) xor movsl hlt sbb ret test ds popf cmc fwait rcrb out mov cmp sti pusha cmp jl push dec inc mov adc sub (bad) out add push push (bad) shrb xor fadd jmp ret mov gs jae inc push sub and dec popf nop (bad) hlt lahf push aad jnp xor mov adc inc addr16 (bad) repnz mov fldl daa int3 icebp pop cmp mov shr jecxz (bad) mov out loop pop cmp sub into xorb jecxz sub (bad) sub (bad) dec (bad) cmpsb in cmp push jmp into int3 ret push lret dec jb pop sbb and push adc cmp or data16 bound mov xchg dec into jmp mov or out pushl xlat (bad) cmp xor pushf (bad) cmp and and dec push mov sbb mov out lret mov mov ret jg loop inc sub sub or into in cmpsl lcall xchg fucomi imul and jnp and adc sbb dec mov mov std cld jge xchg insb (bad) out dec mov popa movb pop pop adc test mov icebp subl mov stos pop shll adc imul inc dec into mov stc pop adc pop sub (bad) (bad) xchg loop leave add (bad) mov and divb jae loop sub nop mov mov xor push lahf dec rcrb bound sarb fwait mov ror push movsl dec fsubr mov or mov orl pop adc mov fs inc xchg push enter (bad) pop or (bad) loop or fmul pop lds sub xchg adc mov xchg lcall lods push cmpsl neg cmc lock cwtl xchg outsb adc xor lret sub xchg sub fdivrl jecxz ret push (bad) shrb icebp xchg imul cld mov xor fidivrl in aas lods mov mov mov sti pusha stos stc add xchg lcall and cld sbb sub je call or push jp pushf into aam push lret ljmp sbb and mov call sbb shrb pop ljmpw sbb add in loop mov fnstenv xchg jge sbb loope jle sub fdivr sbb jb lods std add fcmovnbe lods dec mov cs pop inc mov add pop push stc cmp sub push das cmc je sbb gs push cltd fld ss mov xlat out and lods jae mov cltd inc inc jns add inc pop and scas xor dec pop (bad) out rcrb xor test cltd popf cmpsl je sbb fidiv into fs or or mov shrl dec and and xchg flds ret gs mov xchg jbe fs bound ljmp gs xchg adc lret movsb mov xor pop mov sub mov call pop mov hlt or divl movsl jmp and mov sub divb daa xor mov add mov xlat fstpl test dec adc jp cmc out div lahf dec (bad) dec cli and add popa cld cmp or lret sti (bad) std in movsb (bad) bound push pop or push leave and jecxz in pop movsb (bad) adc dec lret out icebp fwait outsl dec fldenv sub mov imul and dec mov imul nop (bad) mov aam push enter cmpsb pop push out (bad) jecxz xchg scas ja test out and sub mov jg xchg jg out mov test aad and sub aas mov push enter jno add and rcll mov ljmp ss cmp stos push cmp cmp sub or pop and aad xorb or daa jo rcl stos sub sub cmp jns aam sub xlat add mov bound dec push outsb cs mov ficomp test add int ljmp add ljmp out stos divl stos sub sti inc lret in mov pop jnp das push movhps enter push hlt inc push js xchg cltd jecxz sub out aad mov xor xor mov int3 and xor jge pop test movsb call dec inc cmp or push cmp pop pushl (bad) ljmp or out add (bad) enter inc sub movsl (bad) movsl and fiadd loope in das push aas pop movsl cltd add mov sbb sub clc shlb xor ja add sub sub js mov push push stc dec xlat adc rorl push ja movsl jmp hlt pop shll leave imul adc mov sahf movsl push pop mov mov dec ljmp in aas cmpsb insl rclb cld ret dec pushf sbb pop pop mov adc ds mov mov and push dec jecxz dec sbb add repnz icebp (bad) and negl dec (bad) je loop das not adc mov or fmuls fdivs jo lahf fdivl cwtl xchg sarb sbb xlat pop xor xor jg ljmp and sub data16 xchg ja sti pop cs sbb ja jbe xchg ljmp mov imul push pop or lret aas jns dec sbb mov icebp xchg call out icebp in cs jmp std dec jmp pop and push dec scas mov and adc sti dec inc pusha and mov pop or mov and xlat mov sub testb xor jb push push mov ffree mov int3 jg cmp xor jl push (bad) dec nop dec jb bound fidivrl dec imul outsb je jmp add test xlat mov fadds dec in xor (bad) pop adc pop pop mov cli jns jle shr insb insb out fstps mov ja add jle scas (bad) xor ljmp out mov fcoml jp shll imul jecxz mov cmp add mov je (bad) mov (bad) xor add stc and push add das sub mov cmpsl sub xchg pop (bad) pop push mov aas out cs test loopne mov push iret and stos les (bad) (bad) stos iret cmc push sub mov imul insb das dec pop scas movsb mov lea call ljmp shll daa xor loopne ljmp mov add sub add negl xor dec sub jmpw fisub in mov pop fmul icebp popf notl mov inc add loop gs es sbb lds jecxz dec sub in and inc mov push imul mov mov into icebp dec fldenv into xor and or add cmpsl stc (bad) xor mov inc test movsb popa inc xor arpl adc cmp out pop test mov or pop nop mov cmp jns in out mov mov hlt dec repz inc pop pop scas or loop push inc dec clc aas test lea push pop jns lret rcr or fidivrl (bad) (bad) es les stos int3 test jle pusha xbegin mov pop cli lea fincstp add leave sub jae pop repz nop adc xchg sub or rol and aam push cmc xor sub enter mov sub movsl divl scas sar pusha (bad) xor add jmp (bad) test std sub cli fdivrs inc pop xor out flds ss and jle into test das fcomip negl dec dec stos sub xlat pushf lods mov fldcw call mov das mov (bad) xor jg adc add test ret (bad) mov (bad) mov mov xchg fimul out sbb je (bad) sub mov sar mov call dec adc mov int3 dec add mov repz adc aam call cmp sub sub add loopne ss cli out lret adc jmp push mov mov cmp stc imul push jmp adc pop dec push rclb mov loop pop sub sub lods sbb jecxz gs inc add adc jo add add mov out call xchg jmp mov jb dec xchg sbb loop pop faddp jecxz clc mov dec ljmp jne in repz lret sti (bad) (bad) outsl cs out push repz cmpsl dec cwtl dec or lret movsl scas cmpsl arpl in imul repnz and pop and xchg mov or fstl les jp (bad) int3 dec jge mov ret pushf xor cmp sub cmc cmp pop mov inc loop and imul xchg and test lcall jmp lahf dec lock (bad) lahf hlt or mov and data16 out mov (bad) neg gs and jnp sbb push ret mov imul sbb stc mov test xchg and or into or cmp cmpsb shll jg loopne (bad) lods lea adc xor stos cmpsl ja mov jp pushf lret sbb repnz repz dec add ret mov js mov iret dec div and add ljmp scas jnp cmp bound gs cwtl pop iret popf sub jno mov cld or or daa ret push sub rcl js ret mulb repnz mov iret cli lret and ret scas pop adc jne cmp lret pop gs sub and inc dec daa jg ja stos sub push (bad) std mov out push pop out sub (bad) mov ror cli bound or imull or mov fcoml cmp gs mov dec mov push cmp and add fdivp loopne sti mov imul fwait pop mov mov leave push mov cmp mov pop mov fidiv out pop sub daa jmp into test mov xorb rcrl inc jge call adc call mov jl push jge pop inc xor and repnz add icebp stos mov cli jg movsl mov mov xor pop bound ret in xchg insb rclb mov push or xor jl repnz cltd xor jo xchg sbb jp movsl lret ljmp jne pop (bad) jle sbb inc mulb into nop mov xchg mov pop jbe push pop or lret lret mov outsl sub cmp fidivrl jns cmpsl js pop fdivp sbb mov jmp inc pop sub mov jo icebp ja dec pop repnz mov mov (bad) popf pop mov pop cmp sub jecxz or or loope dec fidivrl fsts add mov ficomp xor adc out pop xor in and mov (bad) cmp leave add pop out ficom pop fld outsb rclb add xchg arpl idivl xlat stos fstpl xchg faddl ret mov and outsb cld insl push mov scas push xor or pop fs mov pop call and std scas mov sub sahf xchg pop clc out aas cmp xor (bad) bnd ja push fs int3 add lahf mov repnz or push hlt xlat outsl pop decl scas leave fistl push stos xor push cmp and push sub cmp clc pop xchg adc sub pop xor insl xor or or push push fidivl and jmp repnz repnz mov cmp push sub mov jle cltd dec inc adc fisttp sub add in mov dec dec mov or inc lahf jge movsb xchg sub subl rorl imul mov or cltd rolb jmp pop mov mov mov sbb pop outsl aam push pusha inc jl ljmp sub push mov pop push jge scas xchg pop clc add pushl or sub add popa jns inc or cmpsb pop fwait outsl mov sbb in inc cmp lret add hlt int push or mov pop mov aam jb push jge cmp and mov cwtl xor pop lret jmp and imul mov xor push xor adc test jecxz add cvtpi2ps aad pop cld lret inc sbb dec loope jns inc add mov push dec jne sti push pop add data16 repz pop scas jno pop mov int3 pop xchg and xchg jge cs xor cmp mov xor jl dec mov xor std daa std lcall push push xor mov hlt ss pop push mov jb mov mov add shlb cmpsb push das fmul inc mov mov les mov and jns lods xchg es ljmp xchg daa sbb imul cmp es sub insl leave (bad) aas cmpsb mov pushl ljmp add push cmp insl jo lods in mov cmp test sub xor js mov mov sub iret xchg aam push push add mov out lods jbe shll pushf pop push or out pop adc call movsb mov mov outsb ss sahf cli pop xchg pop add xor push cwtl and ret stos xor stos add push adc (bad) adc mov out mov xchg in mov ljmp and pop sub into or rclb into in and or cltd pop imul inc pop ljmp pop inc jno pop out mov or in scas lret js fmuls sahf dec dec bnd xchg push loop enter jmp xchg mov pop idivl mov shrb xchg xchg aad lock out popf xchg adc rcll repz ljmp les sbb pop jmp call imul xchg (bad) sub adc cwtl lods out sub sbb and add jns lods mov jne cmc daa jo mov sti repnz mov into push cwtl fwait xchg xor (bad) mov cmp movsl dec (bad) mov sub aad pop hlt je mov mov sarb dec addb inc mov inc lock (bad) pop (bad) test jnp add ret adc or movsb ljmp adc aas pop sti sub add jmp dec xor scas or es and into mov mov xor std xchg add mov sub adc xor cltd (bad) cmp ret cmp lret negl (bad) xlat in orb popf cmp cmp aas push push jecxz mov gs cli push pop mov inc xchg test dec pushf xor dec or jbe fdivp mov ret scas and scas cmp push idivl rcl sub mov add push mov mov push lcall xor call ret fidiv mov stos pop lds (bad) or jecxz cltd cmp sub imul call xchg mov jbe cmpsl jnp sub xchg (bad) sbb pop or lock (bad) jge mov cmp repz jmp fwait mov cli fsub pop iret cmpsb insl mov jnp std mov dec push push push cmp (bad) mov not lret inc mov (bad) leave ja xchg mov ret adcb lock cmpsb cmp arpl pop adc add repnz lret push or dec jg pop (bad) xchg mov (bad) xchg cs mov sbb clc xor movb push mov pop pop stos je mov ret pop divb imul ja dec test mov fidivr fimul adc mov dec cli sti push and fs dec mov repz jl mov out cmp das jecxz mov xor (bad) and xchg insl imul cs js cmpsb xchg (bad) sti lret sub push adc leave jp cmp xor dec mov sub pop and lods add ret cmc xchg pop mov and imul fdivrl repnz (bad) jne andb out adc push mov xor push xchg orl call mov mov test and xor mov mov mov pop dec scas mov gs cmpsb xlat cs pop out pop fild arpl add int3 out xchg cld pop pusha jmp mov das out jb fnstcw mov (bad) cmpsb (bad) dec test repnz pop dec pop lods push xor test aaa scas test test sub scas daa sbb add sti into adc gs lret outsl jbe sub cld fldcw in sub data16 inc sub cmp jp push mov pause shr jns pop movsb call movsl xchg sarb outsb fs sti xor mov pop sahf mov clc xor popf fstpt adc rclb rolb pop pop dec mov sub inc and jo rcrb lahf adc mov stos xor bound ret sar (bad) dec lds fs xchg into jmp push mov sub jmp sub (bad) (bad) jae and sub jl in xor sti test mov (bad) mov outsb fstps cmp lret xchg sub dec add xchg push fisubrl fxch loopne aaa into cmp aas dec adc sbb ret sub mov inc test out add xor pop enter loop subb je dec mov adc popa cmp xor and sbb mov cmp movsb push into repnz test mov cmp hlt xor sub idivb loope cmp sub adc das fdivs fadd imul sbb lock repnz jecxz mov cli xor push sbb and and cld sbb (bad) shrl ds dec popf sub int jle popf rcll inc lret mov mov xchg es sub test xor movsl stos idiv pop ret inc repnz push bound sub notl push lret push lods or add subb jno (bad) xchg inc sbb movb jb int rorb cmp (bad) call dec ret fucom shll pop scas push repnz or into sar xchg or or ljmp std pop bound icebp std lcall lock aas or pushf mov ljmp adc sub add call mov mov loope cmp dec xchg out cmp jno lods les jno imul mov idiv lods xchg rolb push dec frstor mov sub lret or lods xlat cmpsb negb out sub int sub adc jmp adc xor icebp lods sbb xor ret add mov rclb push mov push (bad) cwtl jmp inc movsb and push and lahf lcall xorl sub add nop fimull lret push add ficom jne aad repz iret pop jbe xchg ret dec imul or or ds adc jo mov push push nop xchg shlb bound into lods and aad sbb cmpl stos out inc ss mov cwtl movsl xchg repz push data16 cmp jnp jle repnz pop les mov lcall mov clc repz adc js loope icebp push xor push aad and mov pop fildl iret or push data16 ret cmp (bad) iret scas frstor mov mov in test xchg inc out add mov xchg mov lret into fldl lods ret sbb pushf (bad) lods mov pop mov daa movb sti push fimull fdiv sti pop jae fs fdivl pop ret out and mov sbb xchg xor pop clc push (bad) cld aad cli cmp jecxz cmc cmp aam pop jmp fldpi gs imul pushf cmpsl out aam (bad) xchg mov out int3 lret cmp ljmp neg adc jl imul in icebp cmp or cmp jmp insb sbb bound cmpsl ljmpw mov lock push (bad) xor (bad) xor mov notl rolb daa out xchg adc mov insl adc cmpsb push shll sub test stos cmp mov xor mov bound movsb sub cmp sbb ficoml add xor cmp xchg xchg push cmp (bad) xchg xchg push mov ss xchg mov sub loop xorb movsb push test or push push jb fsubrp ja out or jp push fwait push jns fs lods addr16 dec lds xlat mov jno and jnp loop ror aas popa or outsb or or add jg pop dec jmp sbb mov add inc xchg adc lds jbe dec sbb lcall sub sbb pop cmpsb adc mov stos sub movsb mov lea cltd dec ljmp push insb adcb mov mov pop movsl bnd mov mov push jg and xor mov rol out jbe dec mov out push scas packsswb hlt xchg (bad) mov xchg push out mov das in (bad) fstpl mov sbb mov pop jle sbb or lret testb sahf int ds push loope repz sti jb loope sbb mov das je and cld in rolb sub or stc repnz int imul push xchg pop sti clc mov pusha in popf movsl pushf xchg and mov into add xor (bad) out negl xchg dec push (bad) dec fcmovnb add std adc and std dec push cld cmp push sub add cltd or lcall data16 dec cmp xor (bad) adc (bad) sub adc ds inc push xchg xor imul pop loopne push sbb sub je inc add movsb adc mov divb repnz or sub add sbb inc sub sub add cld in das addr16 cmpsb push jg fisttpll test scas (bad) xor xchg mov dec test pop out mov movzbl ror jmp cmp mov jmp push adc stos lret (bad) mov jl cmp push jnp into add sub xor add lret sti cltd pop and sub mov mov fimul je or add xchg imul or ror inc adc add xchg jge or cmpsl hlt push leave cmp jl lret add dec je sub inc ret xor repnz dec jmp decb or xchg repz and dec or lock jb popf hlt outsl sub jge cli sub sbb pop sub xchg fstpt shrl leave xor jmp xchg adc out stos sub rcrb push add xlat in decb xchg pop int mov into inc mov xor push (bad) (bad) clc (bad) jbe ds jmp in inc sarb xchg test movsb inc ss or mov mov xchg std dec pusha jmp mov and and cs fs loope bound shrb xor push fldenv mov push scas loop fist (bad) mul icebp jnp cmp xchg inc iret mov mov imul jne call dec out mov inc ret scas fistpll dec ljmp stc rcr pop bound lahf jns mov push sbb (bad) out mov push inc jle jmp test and mov scas mov cmp shlb push ss mov sub dec scas out into or sub std pop cmp dec cmp fmul daa or pop and mov inc ss push daa out jbe xchg fnstenv xor dec (bad) jge jp ffreep jecxz sub fwait cli mov and test lret dec mov and lcall test test iret out mov push pop jae sub pop mov dec dec int idivb xchg icebp and out inc xor add and pusha enter mov dec pop pop mov (bad) std xchg inc pop iret ljmp (bad) push sti je xchg lret mov xchg sub lret icebp fsubrs xlat cwtl dec xchg jbe gs mov cltd imul lcall push and or jg roll movb repz lret pop cmp adc sub call push imul pop ficomp pop jl dec push jg pusha and insb and mov and in cmp aaa and or icebp mov mov (bad) jmp lea dec daa es or mov fistpll adc sub pop add adc aaa mov lea mov lods xorl push push push pop idiv sub mov repnz xchg sarl sarl loop mov hlt cld push mov add daa sub sbb sub inc push mov shrl dec cmpsl jbe xchg sub bound or add stos cmpsl adc (bad) mov shll or aas bound out je insl cmp dec imul sbb dec and or lods shrb push jmp jecxz cmp mov dec pop leave into orl xor ret pop pop pop pusha out xor mov push leave clc imul and pop enter mov pusha sti jb adc xchg pop ljmp and pushf mov xchg das daa (bad) sub mov and cs out cmp lods add push fistpl stc loope mov pop jae rcll mov cld nop movsb mov stc inc (bad) or (bad) dec (bad) stos mov mov cmp mov int ljmp out lods in lods xchg lret adc sbb xlat mov rol jmp sub call dec idivb out mov add das in and ljmp xor pusha insb out sub ds cs lret xor pushw dec dec lcall pop enter push xor sbb and pop sbb shr outsb mov dec clc xlat hlt fs ljmp cld xchg jmp xchg and aad push push xor lret cmp testl sti sub sub adc pop mov decb xchg popf (bad) sbb aaa dec pop sub add and stos mov loop mov fcmove dec add in and sarl es xor divl cmp xchg sub xor cli jmp sti stos ss xchg push cmp std inc mov repnz repz dec (bad) sub push dec std subl stos imul in sub out inc (bad) or cltd lahf lock mov mov add xor push aaa scas or lcall mov and sub cmp dec fldcw testl lds in iret or aas sub xor jmp and pop push dec sti lret test mov test ret arpl in (bad) xor sub in push (bad) lret jge fwait or and dec add lret jnp adc pop ficomp or cmc add xchg imul bound (bad) push sub pop dec outsb dec scas mov mov adc out ja stc xchg call bound dec and pop subl dec ss and push pop or xor lret aaa out fnsave or fs in icebp pop mov jg mov js sub lahf addr16 in pop in out lahf pop xchg pop jno push and lret or mov pop dec push rol add and xchg std ja (bad) out repnz adc pop stc push imul or cmc jp (bad) sub daa aad cmp ss sub into rclb (bad) lret (bad) pushf mov out ljmp add cwtl ss sahf stos jmp cmpsl pop mov repnz popa pop out add pop push clc dec mov (bad) stc adc xchg xchg jnp cmp jmp lods ljmp lods push stos sub and cld xor stos jb out icebp popa inc xor jno xchg add xor adc int sar sub jmp imulb and fwait push or add outsl in and add jg sar insl mov push fcoml int3 pop mov xlat mov dec repz ljmp sub jl push fwait jp sbb das ret negl sbb sub jne fcmovnb ss icebp and ficoml cmpl lret mov add xor adc pop lds icebp mov mov jl arpl enter jnp mov rcr ret aad (bad) loop in sub mov ja xlat xor flds bound sbb adc dec mov push push test mov add into leave and dec mov sbb and (bad) shl mov add and clc (bad) scas adc mov adc mov movsb je xor dec das inc mov mov push jns outsl pusha arpl enter clc mov out and (bad) les scas mov push xlat adc negl sub push inc stos mov dec int add xor cli imul in adc lret out mov and xchg sub push dec adc cmpsl mov xchg (bad) out cli je jmp rclb imul xchg pop fwait mov fcoml jg add push xchg push mov dec adc pcmpgtb repz out dec out and js push cmp pop adc or lret jb aaa sub insb cs mov xor lret dec dec das sti xlat cli mov pop push and je in fs sub jp out pop repz and add xlat pop xchg mov aaa push sub rorl mov lcall test pop mov or push aad cmp pop in ja test ljmp hlt and idivl lret or or xchg mov dec jp insb mov cmc in sub negb cli mov add xor mov imul lods (bad) push stc lock iret in pop xlat loop cld cmp or pop (bad) mov inc inc out aad outsl dec icebp sbb (bad) add je cmp rcll rclb push lret sub xor adc cmp ds nop pop add aaa dec shl int3 ljmp test sbb mov pop inc pop nop or push mov cs sbb sbb sub add jmp mov jbe xor dec push push cmp sti pop pop sub jnp test lret pop pop and icebp xor push cmp test sbb pop push mov pop mov add pop and scas jno push lcall add mov add pop pop inc inc mov (bad) outsb push mov mov lret test push cs pop movsl rclb fldl aam xor lret call push push jnp pop xchg stos inc xchg stos xchg out pop mov arpl or repz push push xlat and inc std cmp add push inc mov int sub and jo (bad) pop add pop lods push ja adc cmpsb pop adcb aaa push lock mov pop and les sub ret cmp shl xor mov rorb pop pusha out sub push das push ret rcl pop xchg adc ljmp fwait and cmp call and mov sub fsubrs and ret (bad) push iret sbb add lahf mov dec sub mov mov je popa js lret xor sub mov dec mov sahf movsb or jle mov fbstp sti sub rclb das repz lahf jle push pop stc inc xchg repz inc jmp fstpt mov mov dec cld fimull into add mov mov and add mov cmp sahf sub mov stos or mov into mov loope insb sub daa xor (bad) icebp sbb jnp imul (bad) leave inc mov pop loopne in icebp mov cli jbe or insb mov imul popa loope cmpb jo push xchg jmp sbb ds sarb add iret dec and jmp icebp movsl cli xor les mov imul xchg push xchg imul loop popa and sbb sub cmp popa mov and icebp jmpw aas xchg pop addl daa jmp push push (bad) cmpl repnz aas or cmp icebp dec imul (bad) jmp xchg add sbb adc push push mov cld or jp cmp (bad) jbe pop sub ds (bad) test dec cltd cmp loope sub stos int3 sub stos arpl lret ja xor mov sub scas cwtl (bad) pop inc lret sbb out sub or lret sbb or arpl das test mov jp jno or cs iret sar loop dec jb adc add clc ss jmp xor mov into sahf xchg icebp les add aam in adc pop mov je inc ljmp xchg cmp ljmp jbe lods xchg leave lret les scas xor xor or leave out lds mov sbb popa xchg daa ja insl bound cld jle ret jno imul cmpsl hlt in xor lahf fnstcw inc xor push inc aaa add mov mov pop or jmp xchg bnd lret add fwait cmpsb subb xor les (bad) push (bad) mov fcoms mov mov dec stc rclb das mov inc insb and sub xor dec mov jge sbb and mov jle sbb xor sti mov jns in mov cltd adc adc ret lahf xchg mov mov mov push cld js sub pop repz pop push call jae and pop xor fs stos inc arpl cld jne gs hlt add mov pushf mov push subl sub xchg outsl les movsl or or mov sub jb orl bound dec mov cli out enter xchg pop mov inc or push or pop ret leave push xchg push scas inc mul (bad) ret adc les popf mov push mov icebp and das clc int3 (bad) add pop lret dec dec mov sahf pop out gs adc sub lret icebp pop mov or add sub cs dec repnz xor xchg cmpsl pop rclb mov pop stos mov pop idivb jle das fdivrs pop jmp repz adc dec mov push or aad sub sub (bad) stc mov (bad) (bad) sbb repnz aad mov mov cmp aam mov or xlat fmul and push mov add cmp mov pop add mov cmpl in xchg sbb shrl dec mov sarl pop xchg pop mov ss adc gs ja cmpsb push and daa ljmp pop cld or (bad) fs lods mov xor cld rcrb rcrb mov ja mov lods push pop inc out sti mov cmp adcb lea gs jecxz and sub and (bad) mov mov sub mov and jmp insl movsl loope xor xor push pop mov arpl jmp add xchg icebp xchg dec je push into jne test aam daa stc sbb add int3 xor scas fstps add scas sub loop dec mov rcll rorl imul iret (bad) sahf mov jecxz lret sti xlat mov incb mov push dec notb mov mov enter cmc xor cs popa xor and mov mov ffreep xor cmp sbb popf sub daa pop mov jno pop and or rcrl jae add xor and jge cmp or sbb inc dec mov in mov dec (bad) gs adc push inc lods je out aad pop mov dec mov xchg xor sbb loopne mov xchg xor push jno cmpsl notb imul xor add mov ficoml sub test adc mov fs or jne and sub je mov imul mov xor flds call insl or push xor pop in das push xchg lahf xchg adc mov adc add out mov mov and pop scas pushf sbb or bound and imul shl or stos bound movsb inc xor (bad) sub pop and sub sbb movsl rol ljmp (bad) fldl lea lds (bad) mov ret mov xor and leave mov mov push jl imul in sub xor or mov imul add add je push add repnz stos fdiv out movsb pop mov mov das or or ss mov and fild cs (bad) int3 cmp mov jae sub jle (bad) push sub sub jmp cmc and push jo jnp pop idiv sub sbb dec out mov xor lcall fdivs pop sbb sub sub pop ret mov dec jmp ret jbe in scas sub es out sub stos xchg jmp xchg mov sub ja sti test jbe imul sbb xchg addr16 xlat mov adc or imul insb iret into fistpll mov mov pop bound data16 add insb push dec ret push lret pop movsb (bad) and mov (bad) jb out push decb jno lret into add jl mov test idivl xchg xchg pop lret ljmp aas fmul fwait test xor cli sarb test fcmovb push sti inc test dec add repnz dec and sub ret mov bound push test jbe (bad) repnz lods xlat xchg push fldenv and mov subb and mov pushl inc stc pusha xchg and mov stos sbb sarl das sub jnp add jle fstl xchg dec push dec (bad) mov sbb cmp (bad) xor pop sub and mov sbb jno jecxz push xchg sbb repz (bad) or push (bad) sub cs and jnp jp cmpsb fisub inc ret loop sbb or adc mov add jecxz add std jmp out negl fstpt leave sti pop mov mov mov mov das jmp cmpsb gs xor and outsb scas ret pop jbe push roll test xor cli popf js adcl mov sbb ds roll ret xchg sub push xor out lret mov jmp fs xor mov out jle loopne cmc (bad) jne mov out (bad) xor add and mov jge mov ljmp js icebp cmp dec or out adc movsl jle mov scas (bad) add leave cmpsl sbb jno dec mov cmp sbb push cmp loopne out xchg sbb aaa xlat adc mov xor adc jecxz sub push es arpl xor dec fdivr adc stos sub and (bad) jb out or pop in and ja jnp cld pop leave aad xor or adc mov mov or push jns lods rcr mov mov stos cmp das movsl sub call and ror or xchg repnz sbb mov mov mov clc lds and call fild mov jp sub mov andl mov icebp aas lahf push ror jmp ret dec loope outsl mov cli lret mov xchg icebp movsl jnp cmpsl cbtw mov and jg lret xchg aam push sub mov mov pop mov aas cwtl jns fwait xor mov push sub and or sbb mov mov sbbl jo xor inc add je jmp test sub and mov out sub ljmp outsb fsubrs movsl in jg leave xchg sarl push xor xchg scas leave int3 sub imul scas jne stos fs jp divl in jmp mov movsb and js sar mov push pushf out mov imul call in mov xor sub or jmp mov adc mov ret mov call pop sub xchg stos (bad) ficompl in popf bound pop fldcw adc leave stos mov mov sub stos adc jecxz add jbe pop mov idivb stos dec and add call (bad) push (bad) gs bnd dec cli inc bound lret imul mov push shr xor sub pop std push push add xor negb jb test xor mov cmp in xlat sub inc in test mov outsb in dec jmp or jp jb push inc cmpsb pushf aam into mov call sub movsl jle xchg es or repz lds jge in dec (bad) test insb xor stc push loop xchg mov (bad) mov inc xchg mov add inc xor mov ljmp int xchg cmp test adc adc mov pop (bad) js stos mov lahf cmp int3 repz loope mov shll xchg leave mov jle stc jmp out xlat xor ja (bad) outsb lods xor loope cs dec mov loopne std jb mov daa fist xchg mov scas pop mov test pop push out sub lods loop js pop out lea cmpsb adc notl out in scas stc ret adc pusha aas outsb jp and or mov dec pop push inc pop push add pop pop jg sub cmpsl dec dec or repnz cmpsl pop and paddsb push pushf xchg sub dec imul pop or push lods jg mov test hlt pop adc rcrl inc enter and cmp je mov lds xor sbb repnz or fmull or lcall add sub out ja push xchg mov cmp push ret sbb pop cs int loope pop fstp lahf repz dec xor jg loop dec inc stos or loope lods dec mov iret adc sarb xlat xchg mov adc into jp pop icebp (bad) and outsb mov push pop mov lahf imul fnstsw js xchg cmp push push fldcw (bad) into add (bad) mov mov xor mov push or mov jmp daa out jl or mov dec mov mov pop sbb inc mov mov xor scas jp or cli push (bad) sub insl cmp mov cmpsb mov test sbb sarl in pop mov outsl xchg scas jo xor add sub adc cwtl adc push inc add mov adc xchg cmovge sbb fnstcw sbb in adc fcom jle test cmp push add aas mov dec mov inc das xor shrl cs mov add xchg in pop es ljmp gs push mov daa ja hlt add insb xchg and loope ljmp sub repz dec (bad) mov sub fcomp mov pop addr16 or jl das (bad) push pop add mov pop cmp dec je mov mov inc arpl sub xor (bad) mov sub and jmp mov (bad) mov add sbb iret mov push jg adc cmp cld push mov les push push mov push sbb das cwtl xchg add inc mov cld lahf roll xchg (bad) dec pusha neg jns dec push cmp mov adc fiaddl das notb cmp aas enter out pop lea inc incl in call xchg push cmpsl push cmp xchg jne cs xchg loope push and push inc xor and pop movsl std into jl stc jb icebp jb into lret add mov shrb outsb mov mov adc lock jge scas bound ja pusha stc push or push shll (bad) test add mov or add in or mov lret popa and xor pop mov sahf dec gs sub out jb pop jne ror out mov lds iret pop push pop jb push mov movsb movsb inc mov bound (bad) inc adc mov (bad) inc (bad) call mov pop ficoml std std repz ret jno cld push xchg lahf inc in add pop cmp add repnz xchg cwtl jbe and add fs ret movsl dec cmc push int iret sti sub rclb dec aas or cmp pop (bad) lods (bad) sbb adc lret and xchg stos mov adc push xchg (bad) lret in cld mov cmpsl push mov lcall loope clc pushf adc adc jge ret xchg lds out pop repnz push jbe jl pop out jle xchg ret dec mov aaa je leave idiv mov repnz inc popf pop adc aam imul dec or outsl adc mov mov test repnz shl adc ljmp cmpsb mov jbe pop aad scas (bad) sub lahf and out shlb sbb aad mov movsb stos lea cs sbb daa in mov (bad) xor mov test add (bad) icebp imull nop popa outsb daa lahf daa lret aad negl jmp jg out imul mov test roll aam daa dec mov xor sub std insb sub outsb sub xchg add jmp shrb xor ds pop add fimull adc dec ret lret and sub cmp or aas inc clc add das movb ror dec push jg or dec cmp jge aas dec add mov mov pop xor mov pop or push sbb pop std push fnstcw js add dec or xorb add incl and pushf mov mov shrb pop jmp into and sbb and scas mov mov repnz xchg arpl in add ffreep mov in or and xor fild or dec fmuls repz pop fs add adc jmp xchg xchg hlt mov into add enter cs outsb into hlt adc mov mov lret out sub jmp jmp mov sub cltd into mov pop call and in add xchg mov cmp pop add (bad) aaa movsb ja xchg movl lods fdiv fs iret push (bad) out and inc in (bad) xor adc scas jne popf xchg jne in push dec rorw xor out int3 xlat ret pop sub jl mov xchg jecxz mov or sbb push mov push adc mov bound xor jg mov dec jmp gs cld lods and loope lods sbb incl adc push jo add (bad) pop mov jle in popa xor add test stc xchg mov mov sub pop insb enter or fstl xlat je sub mov testb mov push inc push mov xchg rcl push add lea inc ror mov lock inc lret jmp sub xchg imul ficomp movb cmp push adc stc cwtl xchg cltd mov rorb fstps jmp lret std test (bad) fs mov pop cmp pop jmp pop xor mov xor lea and js cmp clc jle push push push movb cmpsl pusha sbb push adc and xor and ret in mov fcomps push js mov stc pop out das and push xlat mov gs xchg mov lea jl pop or dec dec mov add jge push add pop pop rcll ss pop enter dec jecxz mov jmp push jns cmp or mov mov inc or sbb out mov (bad) pop mov xlat dec (bad) mov push pop (bad) cmc dec xor mov pusha jo es stos push mov dec push out sub dec repnz insb dec xorb sbb roll outsl cld push ret shll jecxz or cli pop insb jg or movsb lahf adc mov or lods test mov jp or sti inc jno out mov xlat (bad) xor xor add lods pop dec mov (bad) and or fisubr mov repz jae (bad) mov jg and lds mov out test sbb add iret lods sbb xchg bound repnz in icebp or and or lods movsb cli in fist lret iret push push cs out stos outsb jbe jge add mov insl sub cmc testl loopne pop xor inc adc push fbld (bad) jg ret out stc sub mov sub dec imulb addr16 and clc jmp hlt ds movsb pop cmpsl pop (bad) or popa sub mov sti xchg out ja cli repz pop rorb sub mov daa and sbb cmp imul sbbb xor pop sbb xor sub jle (bad) jmp xchg jne int3 mov (bad) push push ja xchg inc jmp insl xchg (bad) stc cs jl jb pop or lds (bad) fdivs pop or sub or dec repnz lods (bad) and xchg out lods add sbb popa cmc lds pop repnz pop test cwtl ret sub mov push movb dec cmp inc aas (bad) sub or xchg push fisubrl js jb addr16 sub dec bound notb xor movsb lret and mov mov lret mov in cs cmpsl ja push cmpsl push and cmpsl mov test mov sub jg cli pop push fildll pop aaa cmp pop xchg xor ret push mov lcall ficompl cmp xor jno mov add lahf sub repz xlat (bad) push xor enter xor adc mov mov cmp iret mov fucomp test movsb das mov test scas push dec pop dec out dec rorl mov iret das (bad) imul daa and jge mov mov push sbb cmc mov incl das mov sub int3 loope sbb fwait pop loope aas sub jle xor sub jbe cli lods xchg pop clc out mov push add and test push jbe dec pop pop xor push pop dec xchg fidivr jmp mov sbb cmp xchg daa adc xchg pop mov ret enter sub xor dec xlat in (bad) dec scas sub pop daa (bad) dec mov (bad) push dec inc dec and or ret add cmp jmp sub ja test jg int in nop jb,pt leave pop sub pop or adc sahf popa cli and xor in (bad) adc xor (bad) sub stos jno xor sub out sar jle loopne sub dec xor test negl sarb outsb je fdivs ret or ds inc mov loope jg lock hlt rcll sub mov dec jg jmp mov jne sti lds add shrl lods movsl mov repz and lret xchg fisub xor mov (bad) xlat mov push pop push cmp fidiv jmp fs cmpsb push dec pop inc mov xchg bound mov xchg imul jbe dec call pusha fmull and ret rcll mov xor pop ja pushf ss sarb fwait or test mov iret cmp sub pop into mov cmpsl pusha adc iret out dec mov or (bad) push sbb mov push push iret mov hlt ljmp sti mov pop cmpsl sbb inc sub mov and push loop jle (bad) mov xor xchg xor (bad) ja adc sub xor insb test cwtl les (bad) jnp mov ret mov out cs (bad) subl in das ljmp fisubl adc imul pop cmp stc pop iret ljmp sbb addr16 mov xor xlat cwtl mov sub jnp adc clc in mov dec xor enter fbstp enter daa fistpll lret add jge xor ljmp inc xor dec mov rclb mov and push add loop cmpsb sub mov pop cmp add (bad) test fwait dec je (bad) mov clc dec je cwtl loopne or movsl adc mov adc lock cli testb aaa jmp hlt in ret ret mull ret adc sub notb daa add nop push mov (bad) lahf push xor xchg lcall dec mov imul lcall jge inc jne sub xchg and mov aad out sbb or inc sub xchg loop push lds cmpsb fidiv and ret jbe pop pop push xor cmpsl sub insb dec popa mov pop sub mov out sub mov pop or pop (bad) sbb das daa mov pop cmp pushf rclb mov sarl cld lahf (bad) call add je inc pop out pop std rcrl adc push adc lret cmp mov ljmp clc (bad) je inc sub mov sbb sub cli lret xchg cli mov xchg inc sti cli add imul sub mov inc add int3 sub loope call adc mov int sbb and xchg flds lods mov iret mov pop out mov pop jge pop sbb or clc jns or xor sti xchg mov pop es cld and pushl (bad) jge xor clc (bad) movsb and cmpsb into fs cwtl jp pop ficom mov or insl pop push aaa pop out mov sbb lock sub out and fidivr dec sub ffree inc rolb into or mov loope lock icebp ljmp xor sub lahf cld add or sbb insb out movsl out int3 and inc out shrl test lds xlat cld push xlat hlt pop push and into repz je and lret scas (bad) cmp pop into xlat (bad) rol jle jno xor lret int mov sub int3 adc mul pop pop cli sub outsl mov jbe push push mov xor mov mov sti cmp and ss movsb xchg ljmp and fidiv cmp lret lock xchg push lods lahf pop mov push push xchg push push imul mov xchg ljmp push hlt and cmpsb int3 (bad) mov adc mov pop bound cmpb cli mull xchg mov sub or cmpsl es sarl push fistl mov sti inc inc daa (bad) adc dec xchg mov mov or xor int3 lods sub in cwtl add clc mov xchg dec xor (bad) xor cli (bad) cli out jmp mull jg push xor mov pop je push dec dec and pop pop sub scas shr mov xchg mov stos sub adc insb (bad) jnp cmp scas and and push inc daa fwait push or ficomp outsl sbb in imul jne popf push jo loope sbb jns and icebp sub nop mov ret push push psubq sti iret add fwait sub stos jecxz cmp cs pop popa and mov mov repz cli scas int3 xchg add xor pop sub repz sub outsb ret cli mov stc mov dec shrl xchg adc push fs mov loope adc mov mov sub mov clc jl sub mov daa (bad) mov xor jb xlat push mov nop adc mov add jecxz movb dec sbb scas mov and mov das iret xchg adc mov adc fimull popa sub cmp cmpsl testb mov add or dec pop scas fistpl int3 mov add sub mov mov inc enter mov xchg bound out fstps xor sub repz outsl and xor roll test xor mov mov mov sub push and dec sti lods xchg sti cmp push clc jb inc pop add adc jecxz xchg scas cltd in cmp and sti jg mov cmp mov cmpsl pop sbb cmp ret (bad) icebp movsb cltd mov sub dec fisubr (bad) inc les and loope sarb sub cmpsb xchg dec int and sub and add fdivl ret push push push loope adc into xor popf scas fwait lret dec enter lret sbb addr16 and fdivrs mov adc jge cmpsl inc xor mov aad nop jns xchg loope add pop mov negl data16 inc xor mov mov add fimull outsl jecxz lret xchg cmp movsl (bad) pushf outsl div mov pop icebp mov xlat pop pop mov jmp lods ret sbb mov sub iret cmpsb inc xchg ret push push imul dec jecxz daa (bad) xchg (bad) pop loop push lds sub rcl xor jae sub (bad) jl fisub cmp ret inc add adc xchg cs js rorl xchg xchg and xchg inc std pminub and add mov nop push (bad) lret adcb push sbb hlt daa pop adc rcrb push leave pop jecxz add mov mov pusha imul lds or icebp mov mov xor (bad) jne rcl sub jmp and xor sub add inc xor xchg or xor clc sub and es push push cltd pop sub pop adc idivl lret mov movsb mov loopne adc (bad) sub (bad) xor xor into mov adc paddsb mull pushl popa sti pop (bad) bound jg xchg add addr16 notb sub push jp in sti pop ret cwtl in or xchg (bad) ficoml idivb (bad) dec mov (bad) sar jmp cmpsl xor fisubrl and rorb and dec iret push xor dec test popf cmp inc test ss (bad) jne pop dec ret (bad) pop (bad) in lods movsl stos mov cmp pop pop push xchg dec fs fdivrl dec or add les adc repz inc es cltd cld in cmp cltd sbb (bad) sbb adc dec xorb mov das out flds stc cvtdq2ps pop xchg mov mov leave subb sub jmp cmp fdivrp bound jne xchg daa insb decb stos xor popa in adc push in add fs inc leave (bad) or jmp out out scas xchg dec mov inc leave sahf pop and sbb ja jne test jns enter adc test and add cmp sub mov pop (bad) pop aad inc xchg mov leave leave mov add pop movsb fsub jmp (bad) xor lods fwait test and into fist (bad) mov inc push imull pop arpl negl test xlat mov mov mov push xor xchg gs jmp sbb and loope jnp in out mov lret (bad) push jne js mov cmp xlat jmp jno adc cli test imulb lds mov pusha mov sub xor mov mov out mov in repz jecxz xchg mov and popf dec out je or cli mov or ljmp (bad) outsl mov les adc push sub addr16 xor test movsb sbb sbb xor nop cli add mov jle adc pop pusha cli mov mov dec cmp les daa insb pop in fcomps repnz int jae mov test jno popf or fldenv and lods and pop mov or jnp adc call cmp aad xor mov loop in cmpsl xlat dec (bad) or push gs lret dec test xchg adc cmc push (bad) fstl sub add and out bound mov xchg jp dec jp pusha rcl fs or ret pop mov or and stos rcrb pop jb les push movsl leave outsb push lahf cwtl in shll mov push test (bad) mov dec sti lds stos out pop ficom icebp inc mov pop call jbe rcll data16 dec divl lock stos sub loope fcomps lds xor and fild lret mov xchg add and sub jp fisttp (bad) ficompl and icebp (bad) dec lds aas scas cwtl jns mov and enter adc jmp or or xor sarl add sbb xor dec (bad) sahf inc pop into imull loopne out xchg shrl stos mov jns add xor add or rolb leave mov add sub xor push mov xchg shrl cli sub xor clc xor cmpsl inc mov stos cld pop jns sub xor enter mov push inc popf imulb pop pop ja xor inc or insl sbb sub je sub clc and cmp cltd or jmp (bad) push sub sub xor shrl lret das pop (bad) pop in and or add xor repz rcrb mov jo fxch leave les xor addr16 imull lods cmp sub ret ja outsb popf sarl ret or dec mov out xchg (bad) mov sub mov and (bad) pop fsts sub repz jl xchg jp clc pop (bad) jl xchg push mov ret inc or mov in rcll les aad into jne bound leave cmc mov mov fldcw pop lret fisttpl lret jne arpl aaa clc repz jne movsl xchg mov or les jecxz scas adc xor add in jp repnz or frstor (bad) call (bad) (bad) mov (bad) imul js xchg aad fsubrp adc and ds sub mov or int3 push mov adc ja aad iret mov roll pop fldcw add mov pushf fidivr ret nop jbe sti dec add push cmc push ret jae and das jno lods jbe add sti push aas sub lret push repz rcl jecxz mov daa fadd xchg inc cmp xchg rcrl loop mov out dec xor (bad) (bad) addr16 les ret mov jecxz pop or sbb stos push std mov xlat sbb pop clc ljmp loop orb adc out cmpsb enter push adc cmp or xor jns cli or sub mov or ds hlt int3 and imulb pop and int das adc scas xor scas fldcw (bad) sbb faddl mov data16 in rcrb (bad) iret (bad) or push xchg testb pop push jl imul pop movl lret test scas mov mov sti inc adc mov js push add mov xlat int jle jle inc (bad) or in out sti dec (bad) stos push pop adc fsubs (bad) push and add stc xchg fisttpl push jle add jns cmp fistp jae push mov or jg imul movsl push loop and fldl leave test lds pop cmp jbe dec js cwtl mov popf fwait push cmpsl imul sub cs pop jmp or xchg fwait xchg adc shlb loop test and stos in rcl mov fisttpl (bad) mov jno jae adc repnz pop rep xor mov jp adc xorb or xor mov fdivrs pushf mov aad sbb sbb (bad) xchg data16 add out repnz xchg shll mov test imul testl dec push shll loop (bad) add add repz adc mov pop fidiv lcall nop (bad) out hlt add xor sti jp add inc mov leave jecxz push sub ret mov dec bound mov push test inc sub and lret xor vpxor mov out sub mov inc pop ja dec push pushf rcl sarb bound cmp jp dec xlat scas fs pushf pop fmull xchg jne push pop and out loope jle in lahf outsb lret push ror xlat sub lcall jg shlb push lock sub xorl xor movsb lea imul (bad) daa xchg inc mov cmp mov sbb mov fildl (bad) xchg sbb cmp mov out insb outsb mov (bad) test sub cmp push dec xor (bad) cmpsb push mov pop push xchg push sub pop pop int3 jae pop pop pop add jnp mov pop (bad) cltd inc sub out mov mov push inc add (bad) in cld mov in das push push pop shll cltd lods mov sbb test add adc sub lea sub out scas lret lret dec insl add (bad) push add leave pop lret (bad) popf cli mov adc jl popf mov push outsb lret ss in or into sbb or jl hlt or add cmp dec dec adc sub out (bad) out sub jns iret (bad) imul shl xor pusha mov loop xchg adc es sbb or add out lcall mov push outsb out (bad) add fild lods inc outsb push add and sub mov cs ffree push and cmp cs cmc push lods int3 divb or and jp loop xchg jbe push mov or and and and loope and cmp sub xor jl mov or mov lock cmpsb (bad) xchg jge pop and jns inc repnz fidiv test icebp jne dec (bad) mov dec rorl lret inc into mov pop sub ljmp out pop (bad) fs lods xor iret lret or stos cmpsl bound gs xor ljmp leave dec pop ror add xchg mov shlb mov pop and in jp sub pop adc xchg jmp mov popa andl pusha movsb add cld and xlat inc test jbe push xchg bound out mov or add lods mov or jno pop jnp mov pmaxsw aam or outsb movsb ljmp ret xchg std adc sahf fstl sub enter xchg out xor xor jnp nop sub inc imul pop pushf insl mov sub dec adc adc inc mov aam and popf push in dec iret xor sarb sahf lds push dec out fstpl pop pop mov dec ljmp pop rcl and xchg (bad) mov popf xor xlat movsb cmp pop adc cltd in pop movsb jmp mov xchg pop sub sbb fdivr fdivs xlat mov lret xchg jecxz cmp push dec enter shrb sub dec lret pop cmp xlat pushf lret ret jae stc sub loop add aaa mov mov push jmp bnd inc fisubrl popf imul fidivrl sbb sub jmp xor xor lret aam add xchg dec js stc fsts ret test jge test jno mov lods shl pushf mov pop sbb ds sub xor imul decb dec int sbb adc adc icebp add jge sub mov jge xor xlat sahf cmp daa push push push xchg lods sbbl add mov lock mov xor cli repz mov call mov pop xor pusha or add xchg shrb jge rcrl sahf xor loopne or faddl cmpsl sbb or push xor shrl jb push pop stos mov lcall xchg add push mov mov and call dec outsb mov add sub push out mov inc adc mov xchg incb cmc push and add and and shll js sub lods xor mov and aaa (bad) pop repz mov xchg scas mov pop sti gs adc in es idiv xchg inc jno lods out sarb lods jp mov into (bad) je enter leave inc scas adc pop mov dec sub pop or adc rol lds mov mov in daa add pop test movsl mov ret xchg push pop xor or aas lods pushf (bad) mov ss jle mov data16 dec out out adc xor sbb jb mov xchg pop ja inc repnz xchg scas test out mov cs adc push fisubr add decb icebp lds scas mov test mov sbb sub std mov sub in push cld repz mov or std cmp fnstenv and cmp mov xchg pusha popf fdivrs dec ds xchg mov sbb (bad) pop lds jmp vphadduwq js (bad) xor mov dec lock cwtl jns (bad) xor data16 scas gs (bad) fnstcw pop call mov bound (bad) mul movsl out mul (bad) das loop xchg leave mov rcrl stc xor js xchg sub sub pop cltd xlat and jo sub sti fs jmp (bad) scas cwtl pop ret inc xlat add and mov pop xor cmpsb sti pop mov xor xchg cmpsl insl adc (bad) ja imul pushf andb mov das inc mov int sub xlat call add loop xchg mov dec scas xor sti (bad) jne mov mov dec pop out mov fdivs loope lcall push jmp sub rorb lods pop push int push xchg adc push or xchg imul mov icebp inc bound rcrl ds out mov pop xchg aaa jne scas adc lds loop lcall mov adc daa jge std mov xchg leave das movl add pop jo push sub sub loop jmp iret xor jmp fcompl xlat push sbb adc dec adc scas mov sti cwtl enter idiv (bad) mov loope repz repnz pop enter jecxz adc and call cmpsl pop jecxz push movsb fcomp push or adc ss ljmp mov add or data16 sub ja or ficom icebp fistpll xor cmc jp pop and int3 leave leave fcomps jae (bad) iret int cmp jbe jmp xor and ss lds mov pop iret inc and in rcrl lea out pop cltd cs scas xor or push ja mov les int3 adc sub xlat iret fdivrl add (bad) and mov js mov flds dec rolb xor push data16 inc (bad) dec lea iret or mov mov lret data16 adc mov pop and xchg jb gs out sub xchg lcall sub jns add pop out mov jp cmpsb mov sub jne and fnop push mov push sub mov and xchg cs roll popa add test xor (bad) mov add mov leave loope or test sub push adc or mov push test cld fs outsl (bad) popa cmp imul xchg sahf push pusha mov jmp repnz ss and gs xor bound cmpsl ja ja inc repz daa xor xlat cltd add js lret mov and add pop loope inc jp mov pop lods mov jnp xor ljmp lock pop les (bad) out pop fisubl imul lods test sub lcall and (bad) enter (bad) (bad) lds lret mov stc pop call in sub or mov or sar mov sub mov jecxz add mov or fldcw sarb pop xchg out mov loope sub mov pop pop mov pop xchg mov int jp lods add or xchg das outsb inc fcoml (bad) ja icebp daa mov dec push mov ljmp jp repz xchg stos popa fsub pop insb test in mov es pop mov sub pop (bad) adc pusha sub sub in rcl xorb pop xor (bad) dec or ljmp mov xor repnz nop add sbb fsubrs clc out pop cmpsb ds imulb sub test lds cmp xchg movsl xchg cwtl int int3 adc and jo add mov jecxz xchg mov jp add je or dec pop mov movsl fistpll cmp dec or mov scas in cmc addb stc (bad) xchg xlat flds out insb dec adc jbe (bad) jo insb add ljmp xor push adc icebp push mov stc imul mov movsb pop stos sub out daa or push and leave jge pop xchg ret data16 mov xor sub or repnz xor test and push jg mov mov pop push pop mov push ja xchg mov push or mov movsl scas mov sub outsl hlt fwait arpl rcr add shr add adc pop test stos clc pop and call mov dec xor xor movsl mov adc cli mov das push push lock stos push movsb test xchg push mov shl dec inc mov das add push push and rcr in inc mov pop add inc lcall xor stos sub (bad) dec add push push mov ljmp aad lret shr pusha in dec push mov jg cmc pop and xchg out ljmp sub mov rorb int3 mov push and xchg (bad) not or mov mov (bad) scas mov lahf (bad) repnz jne mov fs mov xor lret (bad) jo ret lock sub sub sub daa xchg sub or fstp mov mov stos insl ffree and into stos mov sbb ffree flds add add outsl xor int3 mov jl jb sbb test adc and lret stos lret sbb (bad) scas arpl loop mov inc repz mov mov test push jmp or xor ljmp xchg dec jp sub cmp pop outsb lods pop lret (bad) jno sub cs in lock (bad) dec outsl dec lret mov repnz pop or fidivrl xor or add and clc daa mov sub sub mov fidivl (bad) cs adc xlat sbb sti or (bad) jne scas fdivs add or (bad) loopne and sub fistl sbb hlt ret pop xchg aam sbb outsb int3 frstor dec push ljmp push inc cltd sbb jg (bad) ss push jns xchg in pop shr jb repnz jns cmpsl mov std pushf fistl or jmp ds sub shrl lret out fldl2t data16 dec cmpsl movsl cmp out imul cmc in add jg (bad) xor mov xchg inc aad loop add xchg fstpl loope (bad) imul adc mov sbb setb in outsb movsb mov add or xchg faddl xchg aad push sub shll mov fldpi in mov lcall or inc xor xlat fstpl stc dec (bad) pop jns dec loopne repz xor aas int3 ja ljmp and jbe sub sbb or pushf pop ror in sbb inc jno mov or into xor jne or repz aas mov mov loop roll inc movsb shl notb or add fidiv (bad) cmp adc jne pop and sbb dec inc pop (bad) push or outsb leave daa xor dec loop jp aaa test xor stc xchg xchg cli mov sbb adcb inc mov je ljmp cltd (bad) bound pop pop gs lahf xchg iret mov pusha mov dec mov push xchg jae stc sub xchg sbb ja mov xchg xchg (bad) mov ret lods inc xor cli mov or sub (bad) shl cmpsb adcl inc cmpsl jbe mov sub out and pop lcall cmpsl or sub push pop mov sbb in es mov dec mov (bad) mov sub mov or push or mov icebp test (bad) mov mov and pop adc jmp ja mov add fidivl mov pop jo dec jmp sbb push movsb imul fbld add ret icebp cmp add and xchg xor in sbb push jl sbb inc sub imul jge test aas mov call in mov pop mov inc jg dec leave cli sub xchg sub sub sub test add arpl pop sub pusha jp xchg in insl dec pop stos imul (bad) mov dec test pop mov pop mov cmp push sub add xchg xchg repz (bad) mov mov cmp jp es fs sbb pop mov jne pop xchg jne or mov and adc sahf sar (bad) data16 mull or cld hlt (bad) mov aad jge pop and add lds out jg lret push (bad) mov out pop or xor (bad) arpl jbe popf rol add mov fstp lea xor outsb sub outsb pop mov test sub decb ret aam bound (bad) jge jb ljmp lret sahf jbe loope sub test mov xchg mov add (bad) mov js fdivs pop aam pusha repnz mov pop jo dec mov sub ljmp pop inc push (bad) cmpsl mov aad fsubl xchg dec or (bad) dec or jno sub ss cmp aad cltd lods pop dec dec fstp fcmovnu or test lret gs jle (bad) je loop lret and sbb cmp (bad) mov add xchg pop mov mov mov dec mov push dec test adc cltd pop imul cmp pop mov lret add push aad sbb and jmp clc dec mov xchg inc pop rcr aad arpl or mov lret pop lds fs mov mov push fisttpll andps mov xlat cli (bad) mov push add (bad) daa adc (bad) pop or jmp xor fldl cmc inc repnz ret lcall xlat outsb mov and cmp xor aas imul fsubs mov ret dec and adc std jg in or sbb cli sub or imull out loop test cli mov addr16 and xlat (bad) cmc fistpll and adc loopne mov push or sub mov repz sbb push cltd mov and push sub daa mov cli adcb xchg mov out mov fsts cs pop std mov ret in pop fs mov loopne fcomip add pop mov movsb add or push mov dec sahf sub xchg jecxz lahf mov push and add shrl pop push imul push jge pop (bad) jmp mov imul dec data16 sbb mov push mov mov jl mov cmp movsl ljmp xchg out mov cmp pop inc sahf or add mov test push push icebp or ljmp (bad) pop ficoml mov xor jo cli or lock mov ret (bad) aaa imul push ret in jnp xchg movsl cli mov cmp mov mov or scas aaa jge imull lret jge mov push adc jmp dec xor leave sub push add pop mov or leave dec pop inc int inc xchg dec gs stos jb xor and mov push xchg push out sub mov mov mov cltd cmpsb sub test shrb sub stc or (bad) (bad) jecxz divb lds daa in mov iret xor je in repz pop mov sub inc sbb (bad) sub mov (bad) cmp and pop sbb xor les clc sti fnstenv xchg int3 xor lahf pop aas leave fsubrl xchg movsl loop lret ret dec adc es push out pop (bad) adc xor shlb mov imul subb mov jno ret test lret cmpsb sub (bad) icebp push sub mov js lret out pop fadds xor shlb inc das gs cli cmpsb mov out xchg inc mov pusha fsubs lret test mov idivb and outsb and dec mov and sti lret mov dec push or or lds xor push sub mov mov dec jne and push add divl bound fistp addr16 mov lds add mov lret icebp rolb and add sti jmp push pop jbe and jge sbb jbe push out mov (bad) mov cld bound push add cltd jge add add sub cwtl decb dec icebp adc jmp stos pop jmp divl xchg mov inc aaa (bad) mov xchg int3 or and loop cld aas push pop mov ret out sarb (bad) jecxz pop lods or and mov aaa and aad jb add mov cli xor push sti mov sub xchg push into stos loope sub bound or (bad) imul jecxz mov movsb popa sub andb mov cmp aad cs fiadd sub xchg or pop pop mov call add ret push pop sub fnstenv jmp cs sub mov sub popf push pop xchg mov cmp or mov sarl rcrl (bad) sti mov mov or jecxz jmp mov xchg ljmp adc movsl cltd xchg push pop cmp mov jp (bad) mov inc dec addr16 xlat xor sub sub mov and nop add sarl pop push jne divb or push mov xor lods cmp xchg loope sub xor (bad) or and sub int3 out stc mov das sbb sti adc and cwtl cmp test xor mov lea jbe pop or or xor and cmovg jno out mov pop mul xor or je or adc sub (bad) cs jo pushf rcll mov (bad) (bad) out or pop cld ret andl daa inc xchg mov dec xchg pop xor mov xor adc sub mov test xchg jne inc jne xor gs fsubrl xor push outsb mov negb inc jb mov loope daa jmp inc stc adc xor mov mov or xchg scas jl adc mov dec int es loop into mov hlt mov pop (bad) xor pop sub movsl xor sub ja sub and sbb rcrl or mov ja jg mov outsl cmpl icebp pop into xor xchg push dec out pop ret sub lods xchg movsb lea and fwait xchg daa xlat adc push lret mov dec sub xlat cwtl adc xchg fstpt addr16 xor fsubr bound shlb dec xchg (bad) (bad) (bad) fldenvs sub or sbb pop arpl push and mov inc sub icebp cmp cmp fmul cmpsb and pop add iret mov test (bad) mov adc sti out and mov pop (bad) xor or (bad) sti out pop sub mov bound pop into add enter insl cld xchg imul mov sbb jg loopne arpl adc (bad) or xchg jmp adc fcoms rcrb mov iret push sub out test adc pop cli pop sub sub in mov out and fs push xor sbb rorl lcall pop test inc inc add and pop mov (bad) dec and icebp add mov and jge adc ja in lods std fld xor repz mov adc mov xor or (bad) js (bad) (bad) scas je gs inc jl clc lods cmp out gs das je fs stos clc mov or add inc dec and (bad) fistp (bad) mov pop (bad) (bad) and push loope jecxz jle js test pop gs test into (bad) dec and in add int aas movsl cltd sub int (bad) imul in mov jmp push aad out repz repz lcall mov aas adc rol or shrb (bad) jge sub cmp (bad) xor mov add shrb or add sti xor or stos jne mov leave add out ss (bad) mov lret xor inc pop flds inc adc mov test add and sub outsb xchg fadd lret or mov mov mov xchg ret inc dec add sub sbb adc ret pop out mov mov and or imull call sub mov scas mov xor lret mov es cld push repnz jmp adc sub out sub lods dec in add adc and or sbb jo xor add mov mov pop jae sub fbld adc leave jg out jmp test mov cs js out or test fcoml ret jbe inc xor xchg or or lock adc mov pop repnz or enter push xor fsubs in xchg ret cmp into dec sub push mov data16 repz and xchg inc out f2xm1 das in and jp or out and shrl or pop push rcll mov outsw mov negl daa sarl pop lcall push repz mov cwtl xor dec bswap and imul dec ljmp fs je loop and (bad) imul movsl adc jne lahf adc das xor pop inc (bad) rep xor pop je leave jne fcmovnu sbb add icebp cmp call push test adc lret mov hlt jnp lock sub pop roll xor sti int popa jbe paddusw cltd lahf fildll (bad) into jnp push or sbb xor or cmp fnstcw mov aaa push pop mov ss (bad) ja cmp pop icebp pop clc mov lahf adc dec dec add icebp inc call push jmp mov sub sar pusha scas pop or inc adc mov je dec inc xor mov enter push adc jnp adc or push cmp (bad) pop pop pop repnz test xchg ljmp pop test and sub xchg icebp dec dec xor fiaddl inc stos fsubs pop ljmp lcall push push fadds call sub or (bad) dec clc cs cltd or arpl (bad) mov push xchg in in out inc loop fdivl and lock jp and and sbb (bad) dec sub cs cs lsl (bad) mov xchg jmp jb leave mov and jge or ret (bad) and or das out daa out xchg cmp mov cwtl (bad) and js movsb daa xor fisttpll pshufw adc in (bad) xchg stos fs xchg pop xchg xchg imul and lret das xchg mov adc shll das (bad) jne fstps cltd mov pop xchg dec sbb das cmp sub jp push cmpsl xchg dec and and mov bound dec mov cmpsb lcall fwait xchg mov dec clc cmp mov mov mov sub add push pop lret (bad) jle imul (bad) fmulp clc pop mov sub sub sub das adc mov ja pop movsl lods sub out inc loop xchg mov test jmp dec add xchg sbb sbb mov shr test sti jb lret fidivl mov lahf sbb iret xchg shl and and mov mov (bad) icebp negl add shr daa mov sbb jae lret (bad) cmp pop std rclb or fistp faddl xor push (bad) sub sbb xor or mov test mov mov jmp xlat jns lods push mov fmuls rol sub stos lret ljmp cmp pop fstpt loop jg adc lret xorl jg aad sub sub or fistl mov push jns lods icebp mov (bad) jae adc cli cmp mov cs loop jg inc push out mov dec cltd push push jl push fwait outsl cmp decb arpl iret xlat and ret sbb in xor xchg cltd repz ret lods pop pop out push out sbb pop es inc (bad) leave mov fstps sar loop fcmovb jne dec dec jg scas xchg add je or and dec test pop popf subb aas adc aaa mov fbld pop mov mov xor jg ljmp mov mov (bad) lahf lds add cmc stc aad lret or ret inc jl mov sbb pop repz fdivrs mov mov sub shlb cmp pop jl rorb into ret mov daa int3 push hlt (bad) in add int3 arpl notb lods dec and test add loopne out push xchg (bad) dec out sub cmp fsubrp mov sbbb adc fs loope sub sub xor adc mov das scas je cltd cld aas repz daa jmp ret adc jmp repnz les mov (bad) lret push or out (bad) fcoml xor js inc js negl mov sub cs dec movsb adc mov repz pop sbb cltd lods sub aas mov out sbb xlat inc or pop (bad) leave hlt mov sub mov in inc sbb ljmp add xor push fisttpll mov mov xchg int3 jl push ret push (bad) lret dec xor mov pop mov and xchg enter xor add imul mov loop cmp out dec repnz mov movsb daa jg push clc add cwtl (bad) or xor xlat push add adc aaa xor sub sbb xor or cmp adc clc das mov sbb pop test out lods lods mov mov rorl jg rorl mov jno jp das lret sub test (bad) xor or dec add cwtl sbb mov add push fbstp jne pop shll jnp loope push add sbb pushf les or cmp jne cld xchg (bad) out fstps (bad) cmp sub (bad) pop es jge out or enter movsb sbbl popf ja (bad) xor sub xor incb push stc and decl mov rorl mov imul (bad) imul lahf pop jnp mov cmp add add repz sbb or mov ret scas (bad) hlt repnz xchg adc repnz (bad) inc mov sub notb xchg lods push and jmp rorb into fcmovnb mov (bad) lods or mov sbb pop dec mov into data16 and xchg mov add stc xor test inc inc or repz jnp add ret fnop test xchg or ss push mov push xlat movsl ret rcll repz adc or mov mov xor and jle jmp out jne cmpsb cld fistpll dec jle fs stos mov sub push or daa loope (bad) pop jg int mov icebp shrb xor and push sub call fiadd mov pop (bad) ja xlat sub push adc stos imul test xchg (bad) jae mov or jge stc xor pop bound mov cwtl pop fldt imul pop stc pop inc icebp cli loop xchg (bad) rcll xor gs xorl mov pop mov rep nop pop loope je jmp push shrl jle jp fmul stc xchg repz add cmp ret fsts cmp add mov xchg adc or icebp jnp inc lahf int3 lods pop jmp scas stos (bad) daa or sub aad subl fwait mov push jne iret scas xor out and adc mov pop data16 sub or int3 xor rcrb dec push (bad) es dec lea pop loope cmp orl mov and lahf mov lret mov inc pusha icebp xchg sar xor and sub add pop inc xor lea cmp inc leave lret rorl xor cli sub (bad) jae mov movsl and adc dec jmp mov mov stc nop adc push sti push popf repz xchg xor ljmp pop and xor mov stc ret test mov pusha pop xor stc push xchg mov mov or movb mov pop xor inc (bad) push call adc (bad) std mov out inc cmpsl in das mov sub shrb icebp imul notl or jge fcmovb stos mov inc mov mov fmulp cmp call imul clc sub iret mov dec dec cmpsl js daa adc fdivrs and xor cmpsb add pop adc xlat add mov pop icebp ret repz fisub push outsb add cmp data16 aaa push test lods in (bad) dec stc sub sbb jne and and pop lock inc push scas je imul push mov movsl jl fisubrl ret popa cmp test xchg pop mov mov push sarb jle (bad) ja dec dec pop pop push (bad) add bound ret jne into into sbb xor outsl movsb mov scas imull (bad) push or ja popf (bad) jae,pn mov mov (bad) iret inc ret rcll fs sub aam jp dec out scas sub inc push jecxz push and mov es and add adc cld mov and and cwtl cmp dec add jmp out mov notl daa add pop lds dec sub or xor mov dec mov imul xor cmpsb pop lods push xchg (bad) dec std andb sbb cmp rorb popf stc push mov clc xor testb ljmp fdivrs jno data16 dec dec sti dec mov inc cmp or jmp add fsubl mov mov pop dec das adc mov out cmp leave sub int3 pop ret mov mov jge ljmp mov xchg mov (bad) push call xor jno sbb jge outsl stos int3 shr pop aad (bad) icebp add sub cmp scas leave ret mov mov andl sbb out mov adc and cld out daa out jge jle adc push pop in jns mov sub int3 add sbb jge sbb add jmp bound xlat jae push add dec enter mov sbb data16 imul jg mov repz lcall pop lret xor divb lock in mov fyl2x and pop xlat sub icebp xchg or into lahf xchg push (bad) je xor pop out add sub cmp xor repz jne dec xchg out cmp fiaddl mov inc out jle add mov negl stos jo addl add bound iret and xchg (bad) mov notl and push stos in je test jecxz mov jne lds jns mov xor xor or loopne loop push jb push sub jnp cmc test out push or lds fs mov push call loop push pop pop fiaddl test fild rcrl idiv mov (bad) data16 xchg pop pop sti and sbbl xor jnp int cmp cld jno cld push push cs neg xor outsl ret rclb idivb enter xchg in ss out add push out loopne scas add sub mov or or (bad) mov loope add outsl cmp mov sub popa cmpsb divl add push mov add aas sub call in ret inc repz addb insl mov ss out cmp rclb xchg push pop into jns xorb ds jnp jnp aaa mov (bad) jbe mov adc sub inc loop adc add jmp movsl pushl fsubrl mov mov mov add pop add dec ret or cmp mov mov arpl push push es or loope (bad) cmp inc popf sbb or push imul pop cs ret pop push xchg mov add xchg icebp cmp mov push mov ficom cld pop bound shrl aaa pop jmp mov out sub add sti ret outsb adc loope cmp and jns and push sbb pop rorl mov pop lret imul outsl cmp xchg rcl les lret scas test mov ds sar inc sub movsl sub fwait leave aad or mov scas out pop and (bad) sub mov mov push xchg call xor sbb xor xchg cmc mov (bad) mov aaa or or (bad) lods cmp jbe dec decl mov hlt adc pop cwtl fsubr add movsl cli repz push jmp fidiv pop add add lock mov jmp fsub jp push dec into cmpsl stos push dec stos repz mov dec out and xchg mov (bad) (bad) pop sub mov xor pop push fs (bad) mov push jecxz dec (bad) and stos fcomi dec popf ret outsb cmpsb mov xchg jg cmp mov sub outsb fildl xor fsubr enter repnz xchg and scas imul (bad) movsl js and pushf dec sbb or sub sbb pop xchg lahf pop add mov jns dec add mov xor jne aas sub push stos cmpsl roll (bad) dec mov sub or stc lods xchg lods shl add push xchg dec (bad) test fsubl pop dec and stc adc push or push or inc imul jg xchg dec fsubl inc add jno inc jmp lods inc adc xor xchg dec push ret dec mov push adc mov shlb das rcrb jne stos dec ja inc add xchg mov cmpsl cwtl dec loope cmp lret hlt cmpsl jb cmp ds inc bound (bad) std (bad) add pop add popa js ljmp shrb into popf push adc mov mov popf lock mov popf fidivl iret mov adc outsl lods jae mov aas xlat mov popa inc push das stos (bad) fild nop orl inc dec bound (bad) out decb cs mov loope jg loop sub sub mov (bad) pop movsl js mov jne xorb xlat dec jge push add and push je mov or mov mov cmp dec or pop out sub ret or jmp cmp xchg or divl cli clc xor arpl out push cmp mov add imulb push lret xor fmuls pop je mov imul dec and call push int lods or stos mov les add push gs or jmp (bad) push xor cmp push pop test or xor push cli xor lahf or jmp adc inc pop inc cli adc sub (bad) adc (bad) aas mov bnd or pop adc stos sti xchg adc jmp les xchg push mov mov mov daa push mov xlat lock mov icebp (bad) movsl cld repz jne jmp sub mov or dec xor push jg mov gs cmp sbb dec add aas xor sbb xchg inc adc push cmp iret popf xor popf ja jecxz mov add mov or adc mov mov xor loop and cli out sub adc imulb mov cmc adc mov mov dec dec mov sub or mov xor mov mov sub test fadd add clc shrb call sahf iret loopne in mov js sub push xor ds mov push pop or ds fisubr pop xlat sbb popf fist fsubrl mov sub jno addl sub loop cld add lret xor cmp mov (bad) jmp inc sti gs sub pop jmp test push nop lds inc xor dec add lds adc adc test mov xor cmp ret sbb notl imul xlat pushl and lods jne jmp sub push lods xchg add sub sub adc loop stos sub das cli addr16 jecxz test das out pop leave push jae dec jne out xor ret pushf jp std lcall xchg xor sti hlt (bad) in outsl dec or lock daa sub jge mov dec rorb iret clc lret out pop out (bad) popf jo mov mov out stos out lcall mov out sub mov xorl iret jmp ret add ret sub or out sub jo mov mov pop aad out mov adc cli stos idivb adc jmp je mov mov mov mov cmc xor lret jbe dec stos lret and sub mov mov das add xor ret imul fidivrl xlat mov xchg add jno cmpsb pop movsl or out out imul iret adc inc lods add mov mov (bad) fcoms fsub pop dec call fisttpl (bad) xor cmc add and lds mov out lods fcos test stos sub jne xchg pop test add sahf es gs jmp or mov repz or ds jbe or adc and cmp test lret rolb pushf add pop dec testb leave dec ljmp jle inc dec stos and push jo adc cmp daa aad aas (bad) cltd inc inc test add out call iret sub cmpsb cmpsb or stos cwtl push das or fisttp push in adc ljmp xchg sub mov sub ret jns lea icebp adc test ror scas sub mov fisubrl cltd add xor pop stos clc cmc xchg cmp or mov popf cmpsb pop and stc stos int loopne add mov mov jl bound and and out dec bound cwtl mov add jmp lret xor stos xchg xor aad xor jl mov ret mov push gs popf cmc fwait icebp aad mov or jno dec sahf das or sbb add jecxz ret cmc (bad) xor loope imul (bad) mov test sbb xor add mov shlb movsb in jmp bnd pop popa sub sub iret xchg mov shl adc pop ljmp rorl inc add sti leave push sub sub cmp call sub sub (bad) test jecxz xchg push xor xor das fnstcw jnp ljmp lds and shrb cmp mov mov stc xchg test mov xor (bad) sbb rorb jne shll cmp je mov push or dec mov (bad) pop das push push in rolb out jae adc jb test add mov adc or je imul ss hlt stos repnz push lahf ret ja out lret (bad) bnd sub (bad) cld xor jne push adc xor test (bad) dec cmc inc (bad) jno movsl imull sub xchg push push lret insb (bad) gs pushl cli push pop cld cmp pop stos sub sub mov loope and movsl stos popf jns mov (bad) jge mov ljmp xchg pop lea mov dec outsl ret rolb daa xor jge in sti and pop and imul incb in ret in xor cmpsl repz xlat xchg xor aad mov xor or sar bound clc jnp add jmp and pop add insl lret icebp mov xor (bad) iret jo sbb adcl nop movsl pop mov dec not push mov add stc ljmp mov les mov or jo dec out sub sarl xchg or xor loop adc push sub and pop add mov sbb shrb aad mov jmp iret bound les (bad) and push repnz dec decb xchg dec jmp cmc mov adc ja cld dec mov popf cmpl mov mov mov pop cmp dec in xor jmp repz mov (bad) cmp push adc xor xor cmp movsb fcoms dec add inc mov rolb mov pushl out out lret test addr16 mov and ljmp dec lds and frstor mov jle add into mov das icebp fbstp rcr (bad) push loopne jmp imul (bad) sub pop sbb das sub data16 pop inc imulb or or add add mov aas xor jmp jle jl mov jg xor ret inc je test out or (bad) jne rorb sub rclb mov xchg leave dec mov ficomp xchg jnp inc cmpsl negl repz mov repz jmp mov test xlat mov adc sub dec popa xor mov pop cmpsl inc xchg xchg and icebp mov mov cmp fstl mov mov mov in and sub xchg (bad) sub push popf xchg jmp adc push lret not inc jg fisttp inc lahf sub dec and mov (bad) movsl mov iret dec sbb jnp sub stc ja xchg ret pop add mov cmp sub mov or sub jbe pop repnz lahf subl (bad) jle imul push push dec daa mov jnp xchg leave dec repz jmp out xor cmc pop lret test mov add lahf pop rorl inc mov xchg daa adc pop (bad) xor bound repz iret sbbb mov in cmp cmpsb movsb pushl out jns imul (bad) jae or sbb and (bad) add fucomip movsl and pop sbb scas pop mov xor les loop sarl in jg lea cmp lods (bad) inc dec mov das xchg jnp adc pop xor cmp xchg push ret cmpsb cmc dec int3 rorl and movsl gs cmp and add popa push ret mov pusha ret mov push mov dec shrl pop mov xchg add lock push or cmpsb mov insl inc pop cld mov sub push jmp cmp and xor incl sub test in fist cltd push mov pop inc sub add xchg (bad) jmp cld adc lea pop into dec inc popf ljmp sub ja xchg and sub pop dec aam sti repnz mov push jle out dec jecxz jnp push mov adc and mov dec out pop mov push loope leave shll fdivrp leave jg mov pop (bad) test cli mov xchg popa and into sub pusha mov add and lods cmpsb cmp pop sub out push out adc fsubs loope jge outsl push out and cmp pop mov negb gs test fcmovb lahf push cmc cmp fsub push and or pop mov (bad) out clc dec mov cld cli or rcr (bad) scas pop push dec out stos sub push jl bound (bad) dec ss push fs repnz cld jmp or xor lret pop mov pop adc mov ss jne jae jle or or push cmpsl mov cmc mov sub add sbb cmp jmp xchg push cmp sub lret icebp movsb inc xor rorb insb popa movsb and loop jp fisub (bad) or fdivs jl ljmp jecxz negb sub pop pop or rorb fidivr call mov adc or movsb imul dec and ja or rcll ret add stos push clc jmp push dec ja sub mov stos imul push xor cld arpl mov push das xchg inc gs lods ret push mov out push jae lods bound aad bound or ret pushf or jp adc pop mov ljmp cmc ds xchg stc mov or or cli (bad) push and sub addr16 jmp inc js inc xor popf dec push popf call cltd push fdivrp popf es clc cwtl int3 ret or xor xor sub mov orl cltd jg,pt mov jns movsl ja gs cmp push dec add gs sti adc popa and imull mov sub xor xchg aad addr16 (bad) int3 sbb idivl lea ss stos je (bad) mov movsb jns iret or (bad) leave mov dec inc dec icebp xor imull xlat das mov ret test ss frstor add cwtl jns cmc push push sbb xor or xor arpl loop (bad) push xor sub sbb cmpsb cmc mov cmp mov lea mulb push adc lods jnp push jb mov pop out popf fnsave or sub andl daa jg cmp cmp xor adc pop add jecxz pop ret jno bound ret (bad) mull lods std mov lret mov pusha inc ljmp loop rclb mov sbb nop rorl xchg cmc xor (bad) xor dec stos sub and movsb mov outsl xchg adc iret and adc je push cmc mov and sbb sub (bad) negb ljmp mov mov mov and dec push out flds movsb std xchg sub idivl mov cmpsl push cmp xor push add fldcw loop inc xor mov mov dec fldenv popa ficom bound adc daa push cwtl adcb sbb sbb xor pop pop push out mov adc fnstenv stos int3 (bad) rep or mov inc out mov jmp xchg xor and ljmp mov jno mov stc xor repz xlat xor push mov cmp orl vpminub xor into ds scas pushf mov lock or sbb xchg jge push mov adc out test sar pop call add es leave (bad) cmpsl out and inc sbb dec push loop xchg aad stos fcomps or daa inc jne lods mov sub fsubrs jno popa sbb fidivr sbb cltd mov xor das jl ret jl pop clc xor push sub mov and and lret cltd scas js pop add mov cltd call cs jnp fst mov mov sbb or ljmp dec clc imul (bad) and andb mov (bad) sbb sbb or jl imul leave push add (bad) stos arpl outsb test nop dec mov mov loop xchg dec dec rcrl sub arpl xchg sti or (bad) cld jecxz xchg ss sub jecxz cmovp mov or es and popf pop iret sbb (bad) aas xor pushf pusha into mov andl push or ret xor inc pop and lods xor jno or lods sbb mov out push mov divl adc cmpsb jno ljmp or outsl cld fsubs pop xor sbb adc ret fwait rorl nop sahf mov orl fidivr cli out cmp (bad) sub cmpsl cli fmul pop shr pop push cmpsl sbb out cmp (bad) sub mov push in and add push and cmc sahf cmp int mov dec fcmovne mov fldl fisubrl out out popf (bad) jl out xchg mov (bad) dec out lret stos pop mov adc add std (bad) sbb inc and inc add push xchg mov inc data16 push jmp mov ljmp dec and cmp pop cld sbb xor xor ss pop stc jp repz les dec and call sti (bad) cmp jmp adc das repnz cltd jmp cmp pop jb or and in or sbb pop stc into pop addr16 das je xchg out repz rcrl mov xchg inc lret pushl xchg repnz sub add dec push mov cli std in lret lods push shrl cld adc mov leave sub jle (bad) ljmp pop cmpsl pusha sub xor push inc mov add sbb add out mov mov imull out sub jo inc dec jmp jge mov sahf movsl inc ficoml xchg cmpsl mov jb in cmp repnz hlt sbb shlb ss movsl sub cli cltd (bad) std add inc and mov fsubrs mov mov jbe add (bad) dec sub or les and ds data16 add ss rcrl xor or pop sub mov mov or pushf jmp sub jnp cs bound ret dec lock das cld scas int3 loop adcb das xor mov add test sub cmc icebp ljmp mull add ds dec fnop jg pop stc xor xor cmp rcr pushf pop adc out fcmovne out or xchg push mov cld adc push dec adc mov cmp gs mov and xor add cld fwait sbb cmp outsb ficompl stos sub mov push jo jne mov (bad) out cwtl dec sub xchg xchg in xor mov dec popf cmp out mov shrl mov adc adc rol add xchg push or push or out sub inc sub lret mov adc adc ret scas adc mov jmp mov sbb pop mov nop popf adc and dec idivb repnz add les ljmp mov mov mov jl shr xor xlat mov (bad) mov cmp mov adc cmc (bad) mov lret sub popa sub add jne mov popf jno in adc jge cmpsl (bad) sub inc lahf ret xchg repz ja mov jp lods jmp (bad) sbb daa notb in nop (bad) or inc cs das mov bound jl push inc daa daa mov fsubrp leave jg js cld mov or jmp in inc or imulb (bad) mov pop push outsb arpl subl inc sub test push fs jmp lods add mov mov out jmp lods adc adc cmp fchs xchg repz mov test sbb add loope sbb adc sbb or ljmp push stc pusha cmpsl xlat xchg push push repnz jmp dec mov xlat mov cmp repz and pop out mov mov mov add (bad) cmp lret (bad) es imul lret and and mov aas xor add cli xor cmp lret sbb or in adc mov ret or mov imull mov sub enter or add add ret xor ss cmpsl mov leave lret frstor and in test fstpt clc mov fisttpl outsl inc xor jnp and das fbstp push sub sub stc and int3 gs sub gs mov add xor jo and pop inc mov adc sub or aam mov push sub lar sub push adc add mov pop push loope add mov (bad) into arpl das fistp testb mov fnsave loope sub cmp dec sub (bad) or leave add in iret dec iret sub jge mov ja ds ret scas icebp inc dec sub dec fsubrp popf (bad) outsl mov mov cs mov lods mov (bad) sahf push jmp mov xor mov cwtl inc ret jmp je pusha or cmp popf gs push push lods mov push jmp mov leave outsb stos xchg (bad) xchg loop or push mov jmp xor fabs imul adc rcll sahf decl xor leavew xor xlat int3 adc lods ret loope enter ljmp pushf xchg insb or xlat lret push push movsl cmp mov jp sub dec in jo or mov xor sbb iret xor out fpatan cmpsl inc fild xor out lcall pop arpl daa mov fnstcw imul adc inc sub and sti (bad) mov xchg stos cmp add push sub pop je sti arpl pop sti gs cld cs adc sub dec into pop and adc mov sub mov xchg inc mov rcr and bswap rcl mov jne cmp sub xor ja (bad) clc jb mov xlat xor lcall xlat call ss add or jmp or fs fcomps fisub aam push cli lds or sub jle mov dec cli cltd scas loope jnp out pop mov dec xchg jbe mov inc out push mov test add adc pushw fs cltd mov adc daa dec out sti sub mov mov data16 popl mov addr16 xchg movb push into je sbb or adc push mov fnstenv cmp dec sub out cmpsb inc pop jmp pop and and pop cmp or pop (bad) jbe push sub dec in cmp pusha shr sub jo or and push sub stc mov add cmp mov stc das mov ja inc jmp mov leave mov or sub cld sub lret or clc add add mov sbbl xchg mov push movsb mov cld push rclb ja lea (bad) lahf bound xor sti (bad) es sub cmpsb pusha or xor adc lret in lcall sub testb mov (bad) or jne data16 fs and aad fdivr add fdivrs sbb mov mov push loop negb loop icebp jbe hlt add jmp xabort dec mov scas and test mov cmp ror xchg lret sbb or jecxz or stc fildll mull jecxz add push scas (bad) xor mov push inc pop sub mov sbbl mov pop (bad) js or (bad) mov push repz cmpsb sub pop adc (bad) or sub sub call enter push mov loope shlb cmp lods or mov jl out push adc out jnp sub add bnd sub movsl fbld lods ret fiadd push into cs mov (bad) mov xchg fsts jl movsl in cmpsb mov out add idivl mov pop ret imul adc xor xchg rcll or idivl mov add mov test inc xchg sub adc clc sub sbb scas mov jns and mov mov mov repz mov jo pop mov xchg mov icebp es adc lock fcomps xchg sti cwtl scas mov sti sub pop mov mov sti std lea push pop mov xlat lds sti sub adc pushl mov dec xor add xor icebp inc (bad) or mov stos loope push jle mov (bad) cmc movl outsl push es adc sbb pop loope sub repz inc xor pop in outsl mov test jmp rclb push cvtdq2ps mov mov adc test (bad) stos out dec mov mov and stc jl xor sub aad out xchg loopne and xchg jmp loop lds (bad) stos mov push leave sub mov jbe,pn cmpsl push cwtl mov inc sub add leave and pop ja mov push (bad) into dec call sbb or push jp xor fdivrl shr mov les and mov test imul cmpsl dec cmc stos jp ljmp rorb sub fsubl and mov and pop mov adc sbb cmpsl push loop imul lds or popf mov dec jge cmp mov lret es sub in push mov mov loop sbb fcomps fldcw shrb mov sub ret gs scas push call add jo dec call or add incb mov add aad jge iret mov stos lea test outsl add mov out int3 mov sub (bad) out daa (bad) jmp fisub or adc adc dec out mov rcrl dec pop in aam test loope loop xchg scas int outsb in clc dec mov and sub mov cld fisubrl adc iret jp nop mov andl roll loop add add mov sub add das xchg (bad) fdivrl imul dec inc mov dec ret (bad) push sub pop push and lea or into rcrb sub mov or and mov or and lds cli add cmp mov clc or sub sub or xor cmp xor sub lret fbld or ds (bad) bound notb int3 jg loop mov fstpt rcll mov jne mov pop rcll decw ljmp jg shll leave mov add add xor mov jmp fs inc in lahf lcall xor insl das dec cmp sbb lret mov dec clc pop in or pop xlat scas xor sub outsl jbe jge push push pop jmp fidivl push mov lods sti leave and lahf lock in mov ja insb ret jge pop movsb out bound (bad) out insb xchg sbb mov mov xlat popf sub test mov mov push fnstcw fsubrl aaa or push mov icebp dec (bad) sti sub mov out push shll sbb or in or das cmp out dec inc sub sub and mov jl or cmpsb je fst xchg (bad) sahf fist pop mov push or push mov dec out daa mov ss adc sub mov jle inc popf and roll jmp mov or iret inc leave and push fsts xchg orb std cltd mov gs and test mov adc ljmp addl mov adc xor rorb fidivr clc js add jno jmp pop pop sbb mov sub pop pop lret pop scas inc sub and ret cmp inc or cmp and mov pop sbb or pop mov sub and dec sub xrelease add lahf adc mov sub cld repz pop and xor enter cltd insb or into lret inc fisubr rolb jle and mov stc pop dec es inc movsb clc (bad) into xchg mov cs adc out mov cmp cmpsl xchg cmpsl pop out sub idivb rcrl icebp dec jp bound pop aaa and jge xchg mov pop xor jne into dec mov repz or push jg xchg sbb (bad) jbe xchg mov dec or add sbb scas into ds or lock call add xorl mov lods mov push sarl push shrb in cwtl xor push sti mov (bad) push push jne dec dec fmul xchg dec ljmp sti (bad) repnz push xor mov sub dec test ja cmc into or pop jmp lods xchg mov ja pop cmp dec in jnp cmpsb and adc int3 and push sub les xlat jmp jmp cmpsb repnz sub xlat dec or xor pop cmp adc or jnp add clc daa sub and mov jl adc pushf mov (bad) sbb cmc push push cmp aam in dec cmp dec dec mov pop xor (bad) cmp lret sub and loop adc int3 cmp adc (bad) mov cmc xor repnz fs incl psadbw fnstenv test mov ds jb out pop sub cmp xor movl sub xor ret and stc aas (bad) mov or lret negl ds push ret add and inc sti pop mov cs jle inc mov or sub add pop idivb aam push shrl sub sub aad mov xchg cmp out cs dec test scas or xor push (bad) ja dec outsl mov sti jno sub sub sub ret inc pop dec cli test cmp pop loop shrl adc mov mov sub daa repz cmp and or stc fistpll jecxz loope sub pusha mov or add sub sub lods dec mov mov xor stos lret adc jecxz imul sbb leave out pop (bad) int3 dec shrl imul pushl jmp mov dec dec pusha imul push je jns mul cmpsb dec out jmp add test movsb adc xchg sub iret inc xor xor jns xor sarb andl fsubp movsl jae and loope dec jb xchg pop mov ret and subb enter popf cmc add dec aam out fs mov and pop insb xchg fsubrp adc xchg ret imul lods sbb loope call (bad) dec ret cli push daa imul fistl out out pop shl or into cmp xchg pop push pusha movsb or int3 adc adc fs mov dec clc call out cmp or into pop mov cs out mov or jae xor cwtd cwtl das mov into push arpl out (bad) arpl out xchg scas ret addr16 es repnz mov ljmp call add push outsl pop cli sbb mov sarl mov (bad) cltd je push ret xchg pop and xchg jo mov cmp jne (bad) out cmp jmp jge jno mov cmp shrb mov add repnz dec aaa add lret mov enter mov inc repnz sbb pop mov in inc or das jle and pop mov mov data16 lahf jne pushf xchg mov jg dec mov push jp fwait jge xchg xchg dec in jecxz pop xchg mov sub sub add mov sahf add cld test or lea das stos pusha push push push les mov daa rolb mov jp (bad) fisubrl lds mull add mov inc push add jg mul sahf xchg out mov mov imul push fdiv xchg mov sub pop leave push sbb stc push int3 cwtl data16 ds jne push push out popf jge fiadd lds mov adc lret cltd ret pop insb push cli idivb shrl shrb jmp (bad) jmp loop jg jp aad cmc fistp pop adc inc sub js xchg adc dec add sub pop dec lock icebp mov add imul sub cmp xchg lods or sbb ja mov and lods aam fcomi loop pushf sbb sbb repz in ss push add and ret add aaa mov and push mov cmp xchg jl push inc pop sub sbb not adc sbb add sub and fild lock lods cli and mov testb add shr cmpsb aam jne jbe add pushf jp repz lods cmpsb ret xchg ljmp mov dec adc out in push dec jmp xchg jp push pop add pop ret in xchg mov js stc mov add or mov mov add and xchg fisub sbb icebp sub xor adc js xchg insb mov (bad) iret add in dec mov cmpl and xchg adc ret movb (bad) test scas bound divb pop add (bad) sub stos bound mov imulb ds jecxz xor pop test ds lods out loop inc call push inc sti ret jne test aad jmp iret or (bad) mov sbb mov mov dec xor push jne fbld jne adc les sbb es xchg push jge fildl push or pop mov into pop (bad) mov sbb sub out and aaa mov sub (bad) shrb (bad) das rcl pop pop add inc cmp inc sbb xchg xchg inc pop mov call sti push xchg mov fs fldl lods test in cmc dec out dec int sub call (bad) or sub rcrb aam jmp repz sub jb rolb data16 lahf pop test and cli gs push jo sub mov adc ret push call hlt repnz push lds sbb bound incl repz add ret jle sbb cwtl jbe mov (bad) mov aam and loope mov dec mov mov movsb or fild leave mov push fs push jecxz pop sub and mov xchg pop sahf pop clc daa or call sub psrad bound or add (bad) inc pop in ss (bad) pop ljmp inc push insb mov test in xor lods adc ja ja hlt xchg out int3 fwait sub mov gs rcll or fistpll test scas mov jnp cmp sub and mov and mov cmp pusha xchg xchg pop (bad) xchg pusha mov jae dec jmp popa insb xor (bad) mov or sub mov into push sbb or mov inc fsubrs loope sub daa or add or add push test mov jp adc add sub xchg (bad) icebp jmp pop pop out and in repnz in mov repnz jmp test test mov enter sub add ret cmc out and or into and cmp or ficomp mov push iret sub (bad) hlt mov fadds out cmp orl cmc rcrl mov sar add ret dec pop (bad) imul mov lret mov push mov dec jl,pt sbb push pusha jmp cmp dec add jne int3 jo lahf mov jmp sbb divl mov loopne pop xchg in es rol cli das cmpsb arpl or xlat add sub sub aad mov and push mov mov mov cltd sbb jecxz mov int3 (bad) and dec shlb fild rdmsr mov fstpt out mov out pop (bad) in cmc in test cmp (bad) fistp xor arpl (bad) les incb test ljmp xor or cli repz fdivl pop (bad) mov faddp pusha shlb fs lret jmp jmp ret pop (bad) xlat mov stc ljmp mov push add mov jmp or pop xor call outsl mov and or or xor dec cmp inc stos pop cvtps2pd lret jno dec cmc cwtl mov or rorb repz xor push sbb or cwtl loope shll jo xchg xor add fnstcw mov pop pop jle jbe mov push jmp mov dec pop int3 dec xchg iret inc mov add rorb dec xor icebp mov inc and mov fcomip xchg iret repnz rcll jle xor mov int3 hlt adc pop xor xchg add push lret stos dec loop leave ss mov lock jecxz inc es jecxz hlt inc push pop out sub sub adc leave pushl mov inc ds mul das idiv clc pop push push divl xchg cmp mov (bad) ret mov mov pop sub jo inc hlt push rolb xor mov fild pushf or pop xor mov ljmp daa sub mov (bad) add roll dec push sub imull cli jae pop imul iret and out sti mov and leave add sbb les lret sarl push fcoms sbb xchg jae int shrl mov sub fiadd cli pushf mov std jnp cmp imul or int3 shr sub sub jbe mov lret xor lcall test outsb inc ljmp sahf dec mov push pop hlt stos sub ljmp push mov add cli xchg xor es cmpsl push sub mov js mov adc (bad) pop or add ret adc mov dec bound or (bad) sti sti and out mov clc mov mov out js and mov cmp (bad) mov jne dec in cltd fiadd ds sbb mov je sbb adc sub mov xor loop rorl and jp jb dec mov jbe add xchg lods pop mov test adc ljmp repz dec push sub jo and divl pop add out xor mov mov and jmp xchg dec mov xor jg scas lcall inc pop pop cmpsl leave pop sti sub subl mov xchg dec (bad) ret loop xchg or add fincstp ret fidivr mov std inc mov hlt jne (bad) or xchg push inc cmpsb into cs inc aad push cltd repz pop xchg sub enter arpl popa jne cmp iret (bad) loop lds lret and dec sub xchg sbb cmp test pop (bad) xchg jmp sub sub ds leave notb dec mov in fwait xor (bad) mov dec (bad) int sub dec sub repz ss pcmpgtw lret cmp mov jg cmp out mov rolb clc jmp lret setbe notb loop,pt xchg icebp xor scas lret lcall jne xchg rcrb sub pop test outsb les lret pop xchg sbb stos pop xchg (bad) mov popf jg or jecxz and movsb stos dec test dec add pop mov out std mov jmp scas xor into ja fdivp inc ficoml jl push (bad) sbb push (bad) jp sbb jle out xor out push mov mov add imul psubb add fist and xor loopne mov sub xor in sub movsl jns gs ljmp jle lods les clc out mov rolb popf xor cltd in inc inc xor and in adc ret inc (bad) mov loope cltd stos arpl icebp pop pop cmc pop cmp cmp cmp mov stc push insl jo mulb mov pop aad ss sti mov xor cmc sub loope sub popa daa or es jns imul pop xor cwtl sahf pop stc cld sbb xor cmp insb mov xchg sbb outsb push pop fs inc pop mov (bad) mov out popf jge outsb lds jle and jno sub icebp ret push out mov xchg (bad) (bad) xor fnstcw or fstpt shlb into repz adc out clc cmpsl jne pusha sub and xor call mull pop es mov repnz xor cwtl push xor scas (bad) out dec fimul xor loop jae cmpsl fisubrl mov mov (bad) xchg les and and aas push or cli mov and scas call cltd inc lret xor xchg into (bad) xchg mov in mov iret andb (bad) nop xor xchg pop (bad) and add (bad) cmp (bad) mov dec sub pop mov and mov and xchg xchg pop pop mov mov pop adc in movsb pop xor adc scas mov xchg cmpsb cs jmp aam jmp in jle push out lods imul loop sub daa add or dec and sub add cmpsl cld add xchg pushf or stc jmp xchg dec add mov int sub cltd push or decl dec stos lds lds lcall in arpl or int3 ljmp add mov ja mov push xchg in add mov into push sahf rolb lahf inc mov sar and or repnz cmpsl and rolb pop movsb icebp lahf jle out clc dec dec movsb sub mov adc lret movsl clc jg (bad) out gs out pop out add stc push (bad) ffreep stos mov and lea xchg out ljmp xlat stos push loope pop sub test cmpsb sarl rclb dec inc sub mov cmp xchg add sub xor (bad) mov insl dec rcrl js lds fisubr xlat (bad) xor repnz jp mov inc add push mov sti int3 xchg push and add popa mov fisttp cmp iret sub mov push adc mov ret and sbb push pusha cmp jmp jmp negb sub shl sub or repnz xchg call in imul jb repz dec push xor scas test sub loop xchg out jp (bad) jo cmc imul imul sub or add xor cwtl sub pushf mov arpl cmp aam leave (bad) subl push push add sub pop pushl mov les jo xchg adc stc xor lret fnsave fwait xor push clc push out mov shrd iret mov push push xlat jmp push lret sbb add lahf clc jne inc add js pop inc aad lock sub js das out std stos adc fsincos lea push dec jmp xchg sub (bad) add inc nop loopne (bad) ljmpw out dec mov sarb and es (bad) bound lds xor sub (bad) adc add cld dec mov pop add jmp or aam std mov (bad) std xlat test cld inc movsb ljmp sub and add je sti cwtl mov inc scas fstps stc pop js mov btc sbb sub pop mov rorb gs scas out xchg mov jmp stos add xchg pop pop nop repz xor sbb cmpsb inc or adc add inc cs mov xchg mov xchg out mov rcl xor pop out cli das or in xchg inc popf sbb xchg inc mov jb or adc jbe and out mov mov test and lret sub sub and andb push xchg push gs pop lods dec movsb call xor xor inc jge adc cwtl cmpsl pop sbb dec cmpsl adc and pop xor adc add dec (bad) cmp add push cmp imul dec cmp and (bad) fwait push sub popf xlat xor mov imul xor cmp xor mov jmp in mov imul bound mov adc test and repnz jns scas jb mov in dec sub loope shrl or mov sbb mov jo sub sbb push stos inc cli sub outsl loopne and xor pop mov mov jge cld sub sub into addr16 sub pop adc mov cmp in jb rclb mov icebp jmp add call ds inc ret mov and push std xchg repnz icebp mov and test sar mov aad loopne and add aad lret jne enter imul mov das and mov xchg push mov mov sahf xlat jno imul and ret lret (bad) fisttp sub push mov dec push clc mov push cs imulb xchg pop mov test icebp bound into cmc pushf push (bad) mov dec mov repnz stos cmp inc daa jg outsl lods ss inc out ljmp dec dec lock sub dec loope mov jle dec or jmp or lock fcom add idivl or add dec lods incl mov pop jmp sbbb jg dec pop in subl lret clc notb push push fsubl outsb rcll clc or push (bad) (bad) fist test mull lahf clc mov (bad) mov fsubrp jns xor pop (bad) and add sub dec hlt mov jg in ljmp std ret in pop movsl pop (bad) and mov pop add xor (bad) xor sub add rcll fstl fidivl xor mov push adc mov pusha icebp xchg dec mov inc sub (bad) and out leave imul push daa pop or out lcall imul ficompl lret jg jb fcmovne adc xlat pusha mov add mov adc xchg xor adc test aaa (bad) mov pop jle push adcl push (bad) fcomps xchg pop adc xchg inc fdivp les cwtl scas add call fmuls das sub sub mov icebp aad pop adc ja mov movsb les cli cld sub lods out leave daa and pop pop ret (bad) xor add popf icebp inc mov cli mov pop and in sub sti jo sti call cli push out xchg icebp test movsl int and imul enter mov sbb (bad) out jb adcb daa mov pushl ret shl mov scas sub xor fstps dec fidivr jecxz add add ljmp mov and or leave pop out mov lret popf xchg push dec adc (bad) pop (bad) mov and and xchg pop add sar cmpsb (bad) sbb or inc cs test lods stos std das sar fmull dec imul lods inc nop sub or insl push push (bad) cwtl adc sub shrb push dec into ljmp idivb and jmp out gs scas or xchg or mov popa sarb outsb push cwtl cli fwait cmp pusha adc test cmp popf aam push jge ljmp lods sbb jmp call xlat cmpsb leave pop add int3 adc sbb mov jle out and ret add xchg fist fwait push in sbb push and sbb or ljmp mov sub mov dec cmpsb mov sub xor inc iret mov mov ret je push sub ret xchg jb iret mov orb mov shrb loope xor mov sub insb outsl xchg insb push pop xor or and (bad) dec sbb leave push out fstpt pop leave cmpsl or jnp and std out rcrl sub lods pop mov and and ss into js movsl lds inc xor pop mov daa insb mov or dec out dec lods sub call jbe and sub insb xchg mov shrb (bad) movsl aad ret cmp pop ljmp pop std jmp add fsubs out push mov jg push mov cmpsl and adc push shr jns lock ds push push jae mov cmpb xchg clc fild cmp in jbe xor pop and jg shl dec or lds add test call outsb add or or pop dec jmp push ljmp jp or lret push (bad) adc sub divl pop or pop test ds adc pop iret sbb jg jp push (bad) mov mov add push push rolb mov das mov sbb std and inc rcrb push push pop sti bound xchg ret xchg outsb xor shlb mul pop pop xor js cs xchg add shr mov jecxz add pop xor stos push cmpl hlt jmp mov mov jmp sti gs fcomps jecxz pop cli or mov or int mov ljmp pushf xlat sbb and mov out pop clc xchg xor or xchg mov dec pop pop cmpsl leave add xchg cmp mov add roll aas loop shrl pop ljmp sbb jns gs push or add je push xor push mov push divl je lret negb icebp (bad) jp mov popa mov rep out sub sub scas lret adc xchg push stos sub (bad) outsl call icebp sub adc loop ret leave subl pop xchg push cmp add inc das lret int3 arpl ret sub rorb mov in add and ljmp repnz xchg cmc inc les push push iret and inc or sti push adc jbe (bad) into and xor mov mov add dec fdivrl popa adc (bad) sub mov adc xchg nop clc dec mov cli or sub sub scas or pop push mov push xor hlt mov cmp js xor or inc push mov inc movsl js add push ljmp dec jg push jno movb ja sub and leave clc pop mov xchg sarb outsl mov mov ror imul outsb dec xchg outsb in inc mov movsb sbb repz mov std and adc push fisubrl sbb or pushf xchg push inc jp cs push repz xor scas ficom ljmp or pop pop mov mov js pop outsl lret (bad) addr16 pop icebp jno mov jge inc push push popf test add imul (bad) lods adc pop jp sbb divb stos xchg lret mov or clc outsl mov sti rcll loop push xlat insb mov sub cmp jbe in std adc daa xor pop lcall outsl jmp push aam jne mov fldenv and ret setg cmp cmp sub insb inc pop mov arpl mov or and leave ror cmp je cld pop shrb mov test xchg sub mov mov into pop sub jg ljmp sub jp mov fldl ffreep xchg mov sbb (bad) or into sub push pop or shrb pop xor std movsb stos add aas loope fidivr ret sub mov jl pop data16 mov ror mov jae and cmpsl pop mov xchg repz negl pop stc (bad) sub ret jg xchg das pop rep sub push pop in mov inc shr xchg call inc dec sub sti mov xchg or jmp clc mov clc test and mov pop (bad) xchg gs scas push scas add pop das div repnz out jne clc xorb pop or pop mov jg insb lret cmc jnp mov or fucomip mov fwait inc add mov add and shrl sub std cwtl mov dec out sub dec (bad) jmp insl xchg and pop pop stos das out fnsave xor movl push jg push stos push pushf sub pusha imul out push jmp cmp scas and pop and mov jp rcl add mull shrb xchg jecxz add dec and dec out sub (bad) mov adc add clc xchg cmpsb inc push imul jo fistpll push pop push mov mov pop mov rorl cmp mov ja,pn dec (bad) and (bad) scas push jge cmp jnp add sbb lret iret cwtl ljmp add dec (bad) dec mov out (bad) xchg hlt movsl push lcall (bad) icebp sub sarl sti sub movsl out lahf (bad) adc push aam (bad) repnz sbb pop push int dec hlt pop mov add fnstcw jns dec pop movsl idiv mov sub (bad) loop (bad) repz add lea pop jnp jg adc mov nop xor repnz (bad) aad pop imul imul xlat mov movsb test stc mov cmp lret and mov ljmp adc jb or inc xor or daa fs and or enter inc dec and mov inc xor and xlat cmp pop inc xor (bad) lea clc movsl (bad) cld out inc push mov into and xchg pop sarl add stos xchg adc lret mov jnp jl imul sub xor jne popa jp call (bad) xor sti cmp push inc pop gs mov lods dec cmpsb daa lret sub pop mov and (bad) lods mull add fcoms pop push inc daa dec ja adc js sbb jp ja shrl or or xchg (bad) mov jns call and or fsub push add scas lret xor fisubr aam cmpsl lcall fisttp shr jle lds ds das xchg andl cs cmp pusha in push mov add cmp sub pop sar ffree into rol mov fidivr cld and stc inc xchg mov add sub mov add lcall mov (bad) xor mov ds not pop lds sarb sbb sbb push shrb ja sbb xor sub or xchg inc add fdivrl sub xchg ja adc fist fld pop sub and test add popa bound pmaxsw or cmp sub sahf and cmpsb adc and xlat ljmpw xchg jbe push outsb jg mov and sub sbb mov and adc (bad) pop mov jl rolb sub sti xor and mov js lahf jbe push fisttpll testb mov pushf aas and xor repnz jmp imul call pushf push xor inc and xor popf int3 in andb rcrl adc ret cmp cmpsl mov clc out shrb cmpsl jb xor jl push jne mov jmp pusha dec dec psadbw and rol into xchg add scas (bad) sub pushf rcl arpl (bad) pop pop ljmp xchg inc lea cli pop icebp sub or inc cld repz sub loop into add fwait sbb or out pop mov out adc (bad) or into out sub mov lods cmp repnz and mov pop repnz pop inc pop shll jmp cmp in xchg mov out loop xchg scas je inc sbb (bad) scas rcll sub mov and sub cmp sub stos movsl stos pushf imul imul in pop or (bad) dec mov push pop lahf pop and (bad) aad mov rclb out fsubl sub nop adc (bad) pushf lret out int3 xchg adc mov shrb aad fimull jae leave dec dec lock mov test mov pop fcoml rcll scas dec or ret ja jl add sbb daa lds jecxz pop xchg jecxz dec add ljmp mov rcl pop cmp dec and lds and leave les xchg sub ljmp pop xor mov mov ja outsl mov sub (bad) xor add and clc lahf mov dec aad ljmp push das and mov jp lods mov jl popf icebp xchg imul xor iret imul mov add jns sub out into aas pop enter and adc enter pop sub xchg push cmp movsl mov sub insb sub in mov jno jle push daa je outsl add in icebp mov imul xchg lcall fs dec cmc (bad) lret fcoml add and cli mov adc mov dec xlat pop mov test jecxz inc cld scas (bad) hlt lahf inc mov ds cmp xor jecxz add out fcoms xchg lret dec ds clc add add jnp adc sub or leave sub and out fldl das scas mov bound mov aam fs mov sub ret mov stc cwtl (bad) testb dec push mov jge or (bad) sub int3 test ds iret lret xor jbe or pusha fildll jns add iret and jmp and ret push add xor mov shrb xor sub jg mov add add dec add icebp ret cmpsl fcompl or inc pop repnz (bad) frstpm(287 lods push mov push lcall mov adc mov (bad) push xlat js add fistpll jl add xchg les push mov cmpsb cs mov push pop mov mov sub pop ret fwait gs loop inc roll (bad) ja push pop sub add (bad) repz dec jnp aas jl sub or outsb mov add push push orb jge or add push xor mov sub mov push cld sbb cmp dec rcrl jmp xchg adc jnp inc enter sarb push push mov add dec sar fstl or xchg into and test pop mov in es xlat sbb jmp js loopne or (bad) cmp sar push mov jge pop lock cmp or mov adc sub pusha cltd ljmp jb pop pop shlb mov nop sbb ret pop hlt mov mov mov (bad) mov fstps insl push loope in and iret adc repnz movsb sub cltd adc sub aaa pop iret clc (bad) mov or push or gs lock inc ret mov and add test neg loop jle fs in mov pop cmp inc shr ds add cmp jne (bad) xchg lret movsl cld sub pop jmp aam inc and std (bad) xor std push in das fisubr sub fcmovu lahf cld mov jg jne dec jg inc pusha insl xor xchg jne (bad) aas icebp lret cmp and add jns fcoms outsb shrl and jmp stc cmp cli popl fimull lock or out cltd lds sub mov dec in dec dec repz xor xor mov ret mov xchg cmc (bad) test fdivl pop shll mov fs imul std push cmp fstps imul insl push push jbe mov loope icebp cmp out and bound add add or adc lods pop mov cmp mov dec sbb sub mov sbb test fsqrt addr16 push rcl or movsb sub mov addl stos sbb xor lds test into mov xchg lods ja jl jbe dec aas pop adc sub (bad) fnsave movsl fildll pushf loopne dec xchg cmp gs popf push add xor iret stos mov add lock mov sub imul mov sbb add xchg ret sbb or xchg sarb in and cmp cwtl sahf sub mov xchg popa fisub sarl or ljmp dec cltd pop movsb icebp scas sub daa sub sub rorl cld enter pop pop jo xchg nop (bad) adc adc int sbb push mov xchg insb stos mov call sub mov pop push and sbb sti xor leave xchg push jne push xor push mov adc xchg sti sbb jnp jg btsl push adc xlat inc loopne or pop fisubrl (bad) fdivrl push push pop data16 mov adc or sti push adc sub loope imul imul insl ja xor (bad) aad xchg (bad) and stos test sub add pop push push push mov gs cmp push and pushf push mov inc inc addb dec (bad) cmp (bad) and pop in or repz loopne cmp mov sbb lds sub cmp nop inc or (bad) xor outsb xor rclb inc stc das lods adc jmp (bad) push xchg imul (bad) push push jl shr push mov jg xor nop hlt add xchg pusha mull push iret out lods dec sub or (bad) cmp out xchg jg or push aad sub fwait sbb adcb imul mov mov inc mov jmp push mov lahf dec mov add loope or cwtl xchg neg sahf sahf sbb and push sbb or xor sbb or pop xor mov sub loopne xchg mov stos in add fisttpll shl lcall cmp xor dec shr jo jp mov ret jge ljmp xor or das fstps (bad) jle lea or adc push data16 dec shrb push xchg xchg adc xor (bad) idivl sub shl scas adc cli jbe add mov cmp or divl sar into inc mov adc mov jns mov out xchg jo sub cmp adc out push lahf dec and lret jmp push lods fcompl out call lret add (bad) jne xchg or dec jle sub xor idiv icebp cwtl xor and xchg jg test push dec mov jmp xchg push mov (bad) mov test pushf nop repnz mov and cmp sub insl insb sub mov jnp pop dec stos daa mov xchg not insb icebp jle,pt cmp cmp int3 test mov ret gs mov lret lcall xor ret and mov jnp push xchg or and sarl mov mov jp je mov sti leave xor ret xchg mov das repz sahf iret add jmp mov das ret dec ljmp push leave out outsw or sbb iret cli lret pop dec adc in fstps (bad) dec cld inc mov sub cmpsb into or add icebp jbe std cmpsb into mov out add rclb dec daa repz scas xchg adc clc lret pop or hlt dec loope divl pop sub pop add pop pop or or sti pop sub inc pop mov mov pop mov add dec xlat jg insb ljmp jb mov cmp add cs dec incl enter icebp je xchg sub jnp mov in mov stos pop dec mov push daa xor sbb negl dec sbb pop or fisttpl inc arpl imul fnstcw pushf add and jno jle jmp in xchg pop es dec mov jbe push push push movsb mov or or add push pop xchg push sub adc icebp pop pop call cmp inc shl andb mov add out mov xlat jle sbbl or inc mov stos out jnp leave jp add add jle jb cmpsl idivl cwtl rol ljmp or xor loope jge lret cmp or (bad) pop xor pop (bad) mov xor decb idiv push add sub or aam sbb mov xchg inc or pop adc ljmp cmp test or cmpsl rol mov adc push pop jl mov mov pop mov or jg rolb (bad) outsl add push mov push mov movsl jecxz and jg xchg pop pop push or outsb out stc xchg xchg mov pop out xor pop (bad) xchg mov in mov xchg cmp jmp stos and xchg adc xlat cmpsb int js in (bad) mov xchg dec lahf bound popa je jp inc add mov xor lret iret pop xchg cmpsb jl daa sub pusha jp rcrb outsb xor out jno imul lods dec or rorb ljmp pop dec mov outsb jae das sub imull add jecxz mov outsb mov lahf dec add fildll mov add cld sub push mov adc lea mov (bad) xchg mov xchg aad add pop mov cmc jno mulb shr mov sub movsb ljmp dec (bad) in sub mov and scas int3 lods (bad) xchg fnsave rorl or push cmc pusha xor and lahf fwait cmp dec sti xor popa xchg sub jp scas stc add fldt jb cmp adc add (bad) push loop rolb dec mov ret mov cmc int3 xor pop inc jecxz ret scas mov pop xor data16 jge sub leave ret inc outsb sub call stos mov stc dec dec mov ds fstpl jno popa jmp stc mov cmp lds idivb fidivrl and add jne inc jl lahf dec cmp out imul aam cmp je aas fcomps decb and sub push inc (bad) imul adc lods inc mov lock lds mov testb pushf cmpsl fdivp push fdivr add mulb cld ret lahf jno insl sarb mov mov popf and ret inc jp enter sub sbb (bad) sub and mov inc or push push lods hlt ds enter push sub mov mov jg inc pushf push in inc sbb bnd pop imull mov fiadd pop and lds hlt fimul mov out popl aaa or mov lret mov lcall or int dec lods and xchg pop sub or mov or pop out push add lods push sahf imul je mov jbe in cld mov mov cli mov pop jl jb pop mov push cmp cmc and and dec mov or ret mov and push mov outsl insl xchg push xor ljmp sarl sub add push push and mov and outsl pop aad jl pop mov cltd das das push call lahf pop push jns repnz and jmp popf xchg rorb jmp out loopne iret xchg fist xchg jo mov pop out sub stos stos idivl cltd jnp xchg icebp repnz or icebp xor clc popf lcall cli ljmp push inc scas pop or sti int3 scas repnz inc lret mov daa mov (bad) (bad) pop cli cli push movsl rorb pushf fisubr test ljmp pop pop sahf popf pop pop push xchg push scas repnz rcll clc stos repnz xlat test frstor pop add movsb mov mov mov lret int outsb int (bad) cli gs (bad) mov dec fcoml sub testb data16 mov sbb repnz idivb ret pop add xor sbb jl (bad) dec or pop xor mov scas lret dec pop loop jge cltd and imul inc rclb lret cmp cmpsl dec cld xor jb adc adc xor mov add jl sub cli jecxz inc mov sbb or cli int cmp outsb cmp xchg out dec ljmp add adc sub sub fiadd jns inc xor (bad) aad in mov cli xor ds cmp xchg std outsl mov pop test sub sti add (bad) ja lea ret ja iret or and cmc or fdivp jns imul popa enter add mov mov fwait xor aaa sub mov imull call or out mov clc sahf pop mov sub ljmp cmp mov sbb or stc jbe rclb in icebp and dec (bad) test cmc loopne sub leave dec jecxz inc pop pop and mov jmp pop sub mov dec test std out sar cmpsl insb das test mov ror mov call aam pop jne nop push mov and inc scas pop adc dec mov cmp sti jb pop test xchg xor xor jbe sub mov mov add lret enter mov or pop push icebp adc cmp stos enter or or sub mov add xor push pushf mov das sti repnz jle or jle push mov daa jl push pop lea sar add pop inc mov cmp push dec mov cld (bad) test popf jge xor enter ret xor jle rcrb mov ret lods pop xor sbb adc add push fsin jg add or enter mov inc aad lea mov imul in std pop or scas mov shll fsub rcll lahf jg fidivl std cmp loopne push mov loope mov dec loope jae jge idivl pop xor lret (bad) mov mov mov imul lcall jge shr and mov outsb repz adc mov jbe and push add scas mov out fcomip loop and arpl fucomip mov out stos lret add mov fistp mov jb aad and pop dec inc push xor xchg test stos (bad) cmp je ljmp lret push sarl pop cli mov xlat xchg sub comiss or jnp jle ret or imul mov fdivl pop inc pop ret sub popf xlat scas sub jmp adc sbb jge push (bad) xor mov mov subb or sub mov (bad) sub or fyl2x fwait or out sub lcall outsl cli pop jbe push xor rcrb push dec push pop jmp sub loope lcall aad xchg inc mov and js movsb icebp (bad) jp lds icebp aad add dec or dec add lret cli (bad) pop lret ds jmp lret mov adc mov cmp jno sub cs mov push (bad) lret js icebp dec fisubrl mov mov (bad) bound pop lahf repz mov icebp fild or lock mov (bad) (bad) or mov xor xor (bad) shrl or lock cmp push inc mov (bad) jnp daa jo cld xchg mov adc pop dec enter mov les (bad) loopne (bad) dec sbb xchg and xchg into jmp push adc shr sarl mov daa in call imull cmc addr16 adc rorl xor mov and mov dec cli mov test movsl sti xor incb out jo popf pop xchg adcl outsb or cmp in (bad) cmp dec push cmpsb jmp mov xchg dec lahf shl push idivl jno in mov and sub adc es adc mov (bad) cli and stc rolb lret sbb imul out into (bad) inc (bad) cmc iret hlt (bad) or push xchg int3 arpl dec mov sub mov pop jb (bad) xor push add adc sub in adc or xchg xchg and lods inc lods pusha push xchg ret pop (bad) adc pop in push pop push call (bad) dec ja lcall scas je lret xor stos sub adc les cld mov cltd sub rcl je out lods (bad) aaa cs and add pop mov sub or negb mov popa push pop insb mov xor xor jge and mov and mov add lock xor adc and enter sbbb (bad) into or pop lods lods mov jp jle adc mov fs (bad) xor adc jae sub jmp out int xor or push sub pop repz or or and test stos lods into mov es ss jo mov push clc std mov xor mov int3 sahf dec repnz outsl call clc or pop sub pop or fstps sahf test sti mov inc dec mov out xor call lretw (bad) std out out mov push dec out mov daa push iret (bad) cmp popf sti pop pop (bad) (bad) int ret loop and ss mov shr sbb add jb xchg mov das lret je push rclb cld aam sub xor push loope out mov cmp fsts mov adc mov xor xor or cmpsl adc mov test sub xor or (bad) inc fist loope jl jno add pop and mov fsubp and push pusha in sub dec mov ret pop xchg (bad) (bad) pushl (bad) pop sub pop mov or divl mov shll movsl (bad) call fist mov daa xor pop gs lods jle movsl fcompl jg and cmp ljmp movl inc pop xchg out mov mov or mul and imul imul or into mov (bad) adc xchg clc xchg jno testb insb scas push js (bad) in cmp sbb push mov cmp pop cmpsl call dec test add (bad) push pop scas xchg mov inc push push pop xchg or adc dec dec mov fs (bad) imulb rcr es xchg cld pop mov pop xor pop jecxz push xlat (bad) scas bound xlat sbb sti repnz jecxz mov das sub test out lods inc movsl mov or fbstp es adc push (bad) hlt mov push mov subl je cli cmpsl arpl imul inc cmp pop and sarl imul enter (bad) mov add mov mov cmp nop add or gs arpl popf (bad) push fs add inc or push and or xchg sbb lods popf notl fsubrp out cmp and or cmp inc ret rcrl dec (bad) xor (bad) or (bad) cmc movsb insb lds cli fs and jmp and pop imul data16 test adc out popf bound repz stos mov pop lods (bad) xchg adc pop repnz push test pushf (bad) dec mov mov les xlat stos xor into jo add stc push lret sub dec jno xchg hlt outsb push fldenv into and icebp adc dec (bad) fsubrs add insb add pop sub push or mov push roll insb fpatan outsb sub sub (bad) repnz not mov adc pop loop xchg xchg mov mov test movsb stos cmp sub gs cmp lret aaa lds shrl lahf fnstenv lret add data16 pop pushf mov sub movsl mov add xchg jl fs push jmp jo insb stos test mov sub xor push mov lret std sbb jmp aaa sub fidivr cli jne out adc lcall jnp mov fmull mov jg xor mov mov sbb test fdivrp into mov sub fcoms push (bad) aaa mov lods sub xlat in sub xor ss pop add jp xor cmpsb scas dec mov lret incb (bad) lcall data16 jae imul adc add in xor sub es arpl mov dec pop mov cmp (bad) shr jne mov (bad) or lahf pop mov or mov imul gs mov sub or insb out cmovl ret cmc gs cmp ljmp push sub fmuls dec and out sbb pop add push out sub (bad) lret enter jae fidivl std cmp cmp cli cmp fistl leave call rorl pushf clc (bad) rclb and jmp pop lds and aam mov movsl scas cwtl (bad) call jno xchg add int3 push lahf jle pop add int3 xor icebp (bad) jb adc ficompl mov or rcrb mov imul xchg mov fcoms out sbb add add sti std jns das push pushf jae subl cmp loop push push mov jae push pop mov sub std outsb rcrl ljmp jg sub sbb push push mov adc jne push repz and ficomp pop cmc push xor pop mov dec mov xlat int3 inc pop out sub cmp loope jge lahf mov out sub pop pop mov cmp (bad) sub (bad) mov mov in jmp xchg jle sahf dec popa jns lods cmp sub arpl sbb xor pop in dec dec imul mov mov (bad) add sahf (bad) cld jl daa sbb sbb lods lods das loop sarb push insb lock fcompl dec fcomps mov int3 push ret xchg int3 addr16 sti jmp dec xchg (bad) icebp pushf cmp lret and cld shl enter sub (bad) push mov pop leave or cld mov pop icebp add (bad) and outsl test mov push fldt imull fstps inc pop xor cmpsl js test fucomi test mov lea ja and shrb gs jp push push (bad) and xor fdivrl stc mov dec sbb repnz fisubl movsl addr16 test mov lret jbe sub out jae xor mov xchg and sub in pop sub out (bad) jo daa pop mov iret sub xor sarl (bad) std into mov mov lret xchg cli cmp jmp mov xchg sti dec daa ja jae lock mov and jmp mov push add fucomip popa movsl mov das adc sbb sub sub or pushl popf shrw adc push mov notl lahf aam push or xchg adc or notb mov mov pop mulb dec fcom sub in mov clc xchg sub and ret in jmp rcrb lret add cmpsb xchg jp push xor ret jo pop jmp and xor xchg push vpshaq shl or push loope ret and or mov lret pop jnp jecxz mov pop pop sbb jmp jo mov popa or jno jp adc rcll insb lret je pop idivb fxch loop or (bad) push data16 or xor ret push adc or pop stos and ja hlt subb jns jmp repnz pop xor cli mov adc or fdivrs fsubrs (bad) cmp out lret mov dec pop sub daa and xor lods movsl jo xchg pop and jmp cltd push rcrb popa popf mov lock add dec fmuls jne mov in and pop test adc loopne mov outsb mov leave clc jl ficom imul stc incb repnz mov adc leave repnz jbe iret add mov mov mov sbb dec add mov inc lock xor xor and adc stc mov pushf popa loope jb leave cwtl aam or add fist adc mov aam pop mov add cmp cmp cmp popf xchg jecxz pop adcl mov sub jae jo or dec and shrb into lods inc push mov and or dec pop into clc jmp loop push test hlt mov jmp mov mov ret dec pop sub dec mov mov xor mov imulb test and jmp xor push divb add cltd out sub sbb xchg add ret gs or lods push xlat rorl int ds cmp adc and out add or inc pop pop repz enter pop icebp repz mov and test push pop push out cmc lds repnz sahf mov bound fcoms imul les sar test (bad) mov add add sub (bad) negl mov push dec dec xchg xor (bad) mov xor add fnstsw scas xor dec and cwtl jae fist jle adc popf lds testb dec stos lea mov (bad) and in ret adc leave test adc xchg sub mov inc jno and imul jae daa xor lret add popf push adc call and pop and push imul test mov add loope imul mov fs sti sbb or nop sub movsl jl imul add (bad) adc add cli scas (bad) int3 adc sbb in dec xor mov loope sbb imul repnz sahf into and pop daa negb gs pop or lock push or ja jp jl cmpsb inc stos negb jmp popf mov xor negb jb xlat pop pusha xor inc test sub xor test mov xor mov out sub shl sub cmp scas mov fsubrp call pop insl and jns daa call or fstpl scas loop adc sub or mov add xchg das je lds sub bnd mov or mov lret inc push aam xchg gs sub repnz fldcw xor lods ds out ret icebp sbb push movsb mov xchg negb dec int jnp mov hlt mov xchg sti daa mov loopne sti mov lcall mov mov and idivl cmp jecxz xor scas test xor cmpsl pop sbb jns xchg adc mov mov mov sub xor jp repnz mov dec pop sti out pusha insb fdivs movswl dec icebp or rorl push xor mov xor and mov adc xor std sub pop mov lea jno imul jle enter (bad) hlt cmp jbe repnz xor pop cmp adc loopne push push xchg mov sahf pop push (bad) push inc loop xchg scas leave fwait adc pop mov sub out pop not mov or movsb cmp xchg cltd mov pop das stc or push daa push (bad) jb lods popf push divl xor fpatan das rorb sub xor int3 fiaddl sti xchg jno div jmp add mov cmp cmpsb shrb into push push push and mov dec into xchg xchg push mov cmp pop rorb dec mov cmp cmc call lea fxch ds sub xor ljmp and and rolb (bad) (bad) push jge jge das leave data16 sbbb orl jl inc mov jge mov mov sbb sub test pop xor sub das mov stc push and out sub cmc das out pop adc jbe mov cmc out out daa ret xchg adc lock push sbb iret fsubr inc or faddl sub mov pop dec ja cli pop enter add cli movsl sub inc repnz sarb scas adc shr cli std inc cmp (bad) popf sub jno in fisttp and test movsbw out (bad) into mov mov push shll lock scas lret mov sub mov rcll xchg call or fwait mov dec mov lock shrl xlat pop cmp ret ss pop cs xor push push ss incl clts inc in leave lahf rcrl iret popa xorb sub pop add pop bound imul (bad) (bad) sbb jl pop xchg push (bad) ja cmp or xchg push push mov mov add jg push es mov pop xor mov or dec jmp stc ror jmp cli sub fisubrl and mov jle push movsb decb mov jge je rcrb or in sub push push jl mov mov bound ror hlt push sbb xor dec movsb iret outsl mov ds loop lds and mov addr16 sub and pop and add dec shr push mov or insb add add test pop push xor xor sub inc mov sbb jge fdivrs insl lods push pop push dec mov or iret ficoml cmp pop int sti test mov add stc fidivr in push add xor push mov adc sub hlt add inc daa pop cmc stc push inc push push pop jp or inc add push es sub mov test and push sub sbb or xchg cld push sub add jg call and lea sub dec ret (bad) mov xlat mov push (bad) pusha pop out sub (bad) ljmp push or out jno add sar jle dec adc mov divl outsb ffree iret cmpsl push sbb jnp cmc stos cltd sbb loope push push out ficom xor xlat xor jb or cmp inc scas pop cld stc xchg mov xor std cli mov ja cmp mov insl push pop xor and fstpt les rep cmpsb and sub mov adc xchg inc pop xchg stos pusha test xor popf pushf ds lods lret decb mov dec loop dec and (bad) (bad) mov pop roll test or jmp cld mov mov jmp insb in repz sbb cmpsb and subb mov adc pop cmpsb ss push sti or dec rolb mov into sbb mov pop mov add cwtl movsb leave inc xorb sub adc (bad) mov fs popf jge adc clc add insb jnp aas gs dec sbb xor push cs pop adc pop movsl mov adc cmp mov out pop sub cmp mov jecxz test movsl cwtl jle xor stos rclb jne add orb jne adc adc inc mov mov fcoml jb mov (bad) sti bound ret sbb (bad) xchg loopne out mov sub nop add negb jecxz mov pop push jmp xchg stos cltd subl les inc ret push sbb sbb sbb aas jmp jo out push adc cmp (bad) pop push push and adc cmp into inc mov add dec shll mov clc lods movsl mov loope loop jns dec lock scas and (bad) imul decb xchg push or mov dec les inc test jmp scas push iret mov lock mov sub in cmc mov ds and jp loope int3 and xor dec add in lahf aas adc push (bad) push movsb and push sar cmp das or inc pop jns imul jge int imul jecxz notl and cmp fistpll repz and cmp into pop jmp aaa push dec out mov jbe dec lret cmc gs dec in mov dec dec mov adc call aas fstps shrl jne xor movsl mov je les cmpsl xor pop cld popf (bad) test and pop xchg and cmp out std xor ret loopne pop push pop (bad) lea mov iret out rcrb stos pop pop out aad sbb mov bt xlat sub scas cmpsb movsl fisttpll decl mov aad inc xchg imull les enter pop rcl pop out push or fmuls enter (bad) or push imul ret jge call mov ret add es add xor push mov and sub scas adc lock xchg dec dec jp movsb cli mov pop add fucom es (bad) mov adc std ret cmp js adc fmull add push pop addr16 shlb pushl dec out mov in sub stc add and mov pop loope push cmp idivb imul push jb outsl xlat sub push add fsubs dec or shrl lds adc movsl jp out and jecxz push mov dec fidivr cmp mov sbb shll mov push aas fidivl loope enter inc cmp jb out cmc xchg pop dec sub pop xlat test rclb aas push xchg pop xor cld ds les mov pop mov push pushf test out and ret gs daa jg into ljmp int3 pop cltd xchg scas lock sbb jbe xor into call adc (bad) sub mov idivb out daa mov or lret nop arpl jmp jg dec sbb dec and pop xchg cmpsl rol sbb lock scas lods repz dec into mov ret dec in outsb leave jno push test add xchg jmp xor adc add lret scas mov scas dec mov ja jle loopne testb cmp mov (bad) mov jno xor aas xor mov sbb mov ret and sub and lret xchg gs sub loop jp adc pop mov aaa int or movsl inc push cmp rcrl gs test iret jmp ficom lahf int3 lods jo loope out mov insb ljmp mov mov xor mov out mov rorb mov mov ret inc mov mov sub jp cltd mov pop mov push repnz jge cmp jmp pop nop push add nop mov or aam enter adc add xor rorb aad cmpsl bound adc sti push mov leave mov fstps lret xchg icebp push fiaddl xor cmc rclb inc mov xlat aas repz aaa pop mov inc shrb or bound xchg ljmp xchg ret pop dec push inc add loop xchg push xchg int leave sub jbe scas fcoms sub dec pop mov jge cmp inc xor fcoms iret xchg jae sub push and out sub or cwtl jo jno adc jo leave adc stos jle das push cmp cmpsl cmp daa out loop push adc inc lahf sbb repz repnz inc aad dec and or mov clc pop lret add mov loop ds sbb sub test int loope xchg int3 adc inc pop out pusha stos push (bad) mov call popf adc sti inc mov jmp pusha mov inc mov sub cmp push imul sub or inc jae lds mov das (bad) loop xchg icebp mov xorb and add mov test movsl mov testl (bad) xchg xor adc mov rcrb stc mov pushf inc xchg (bad) mov outsb cmp push scas aam or mov pop mov (bad) repnz xchg mov jnp jl push (bad) mov sub mov jbe or pop mov stos fsubrl lods mov jbe pop or sub test clc andl rorl ljmp add mov jo ret xor mov sahf scas jmp mov ret cmp or stc push dec data16 mov adc mov or imul jp sub xor jmp pop pop push std test idivb lea fidivl xor cmp xor adc add jno mov xchg stos lret into cmc cmp mov arpl jmp test inc lahf out dec pop or stos fbld or dec pop mov shll xchg adc dec bound not dec push (bad) dec dec leave sub xor mov add jo jmp mov addb out sbb sbb lahf lock out scas ror and xchg ret lods fbstp pop push jle dec mov push jnp xor lahf fisubr jne and ret and lcall movl jnp pusha mov mov ds movsl lods jp pop aas xor pop popa dec jmp ds (bad) mov mov dec and push clc lret fbld push cmp push dec xor scas cmp or lea out sub sub sub aad fldl popa mov or xchg mov into addr16 adc sub sub jno out jnp imul mov cmpsl lahf and roll lods in lret dec jno xchg adc std in movsl hlt mov add add sub push push outsb ljmp pop xchg das (bad) (bad) push pop lods add lods test or xor rol cmpsl mov sub add (bad) pop fs xor jecxz js imul data16 into mov xor in xlat xchg dec xor (bad) lock pop push push enter cmp sub int cmpsb mov mov test fcompl or divb pop scas fs ljmp cmpsl push imul jbe or shll xor loopne,pt ficomp in push mov mov jbe cld test fcmovu sub or pusha repz adc or xchg cld decl lret (bad) pop aas xor into and stos push cmp inc dec stos mov in subl rclb out loop xchg dec out sti cmp scas mov jp inc push mov xchg mov dec stos shrb repz or repnz sti sub mov mov add and sub int3 rcrb xchg mov cmp cmpsl mov add mov test lods cmp out add (bad) mov ds cs pusha dec mov dec stos daa mov and (bad) je pop adc lcall and mov mov lret lret sub ja sub add movsb or jp cmp (bad) loope in xor inc gs repz adc aad in lret negl rclb ljmp lret pop dec pop cld fsubrp mov xchg push or add cmpsb dec mov push add pop gs fstpl das mov inc stc sub push testb push aaa les pop out dec mov adc sbb add bnd loope adc or sbb fidivrl (bad) pop icebp sub (bad) enter lahf push sub gs (bad) mov cld jno loopne idiv jb out stos mov xlat out iret (bad) dec imul mov pushl dec xor mov jb dec add mov push out inc xor jb pop div dec into mov test (bad) cltd pop sub xchg mov mov cltd icebp sub imul pushf add jbe (bad) jmp xchg jl xchg pop repz and pop and xchg shll cmpsl push cmp or ja xchg out fsubrl push jnp sbb test xor fwait outsl sub pop dec out fcmovbe dec lods xor jmp sti and dec cmc adc mov nop lahf or xchg js push sti jl inc pop das mov cltd xchg ljmp loop ret sbb lods or rcll int3 mov mov ds sub mov (bad) mov mov and imulb lds rcrl loop lcall push xchg xor (bad) sub sub aam jmp stos xor mov scas add jnp insl jae inc mov cwtl lds cmp dec cmpsl sub dec call mov add pop cmpsb scas faddl push loope adc stc ds or ret or jne addl cltd add (bad) cmp add fstps ds (bad) loop xchg pop sbb jo mov mov out mov push push or pop xchg (bad) mov dec test leave xor dec ds lds icebp push ljmp gs inc jb xor ds mov add mov in lods fcoml mov sub or push and add lods das jns sahf cmp pop sub pusha xor or mov or add xlat movsl repnz fstl arpl mov fidivrl dec jl adc jge bound xor pop popa jbe sbb je (bad) (bad) jle mov pop mov (bad) mov lahf es sub adc out test adc fsubl mov jg cltd into and inc daa (bad) notl dec fisub es (bad) negl fisubr mov adc int imul sub sbb mov mov xchg aaa push test and xchg xorb and adc jo daa cmp ja push lods (bad) push pop shl push loop ja inc outsb cld popf (bad) push shl push adc fildll sbb or sub mov mov mov into dec (bad) ja and jmp scas push iret mov cmp push gs daa pop repz gs out xchg lret in xchg je loopne stc xchg mov add pop xor leave jmp fstl leave xor dec fsts sar push ds jbe or shrb cmp cli mov cmp pushf push decl sahf inc inc cmp cmpsb aaa dec cli xor jmp es std shld dec out cwtl pop jmp cmp pop adc mov (bad) cmp ss cli repz dec push xchg daa mov pop mov add lret jg sub sarl test repz (bad) test lahf dec pop mov pop add faddl out clc dec sar mov int3 adc mov je dec cmp iret pushf xchg repnz xor sub ret aad add lds movsl fs js lahf out inc subb popf fbstp adc pop add dec fucomp add je xchg and sti repnz inc mov mov imul cli stc pop inc add sub lock dec adc and hlt sub mov sti jl push adc mov imul add sar sub or cli xor xor xor add std adc fldl2t push pushf add aaa loopne dec jb adc mov rclb xor pop xchg xor ds mov lret icebp ljmp mov imul mov hlt or clc mov add cld cs mov pop ficom out push dec cwtl inc call in push sub mov mov incb repnz sub ret adc fstpl add push ret dec xor xchg add imul mov leave jge or jge (bad) sub mov and add xor mov inc pop cli or lods dec push movsb ljmp loopne popf push cmpsl sub imul mov out mov adc fidivr cmp adc test inc push sub (bad) jo mov add sub or ljmp jmp into aaa pop xor adc fdivrl pop sar dec mov es imul lock insb sbb out cld ret idivl mov (bad) jge xor sub in scas rorb jbe push clc xor lahf aam movsl push stos les insl inc push inc push pop (bad) xor or jle leave jl adc scas mov loope add and add xor das std pop mov stos dec jmp mov loop fisubl fcmovbe (bad) loopne dec (bad) iret push pop dec (bad) mov add pop (bad) mov stos (bad) shll bound xor push fstpt xchg xlat sub lods aas jnp (bad) icebp and in add cs pop int3 dec negb sub insb enter ret push adc jo sub sub lock gs sbb sahf (bad) pop xor xor rorl es dec nop pop cmp frstor add int3 (bad) xor push cmc repz pop inc pop dec (bad) xchg pop jnp pop out mov (bad) mov jns insl lods insb movsl movsb loopne ret pop pop cltd scas sub add sub cltd jns jg dec data16 inc inc xchg adc rcll fsubs test cwtl add std sub mov lret jbe out adc mov add jmp int3 test mov or lock sbb mov out adc cmp mov imull sub dec shrl pop xor ljmp lcall negb iret lods xlat xchg iret repz add test (bad) mov and stos inc test stos dec mov add lds jbe push ja fldenv outsb mov or and repz jnp cld hlt popf mov clc cld js xor ret adc adc cmp add fbstp mov imul int3 mov dec xor xor add (bad) scas into cli adc (bad) mov jbe ret pop pop dec ret jmp decl mov mov aad idivl dec into scas sub mov dec push sub adc or or int cmp and fdivr into inc sbb test dec add sub icebp sub mov cmp ret leave adcl xor mov add and and and push push or dec ds mov pushf imul sub push push cmp in loope and mov (bad) xchg mov pop sub (bad) cli ljmp pop out pop popf adc mov mov mov and adc std iret aas sub das and xor sbb xlat outsb in jno test and iret adc sbb push xor stos arpl xchg ljmp cld scas sub pop mov xor repz push and dec sti bound sub ljmp in add mov fist sub push jp rcr mov sub call data16 pop push mov ja ja push xor dec push pop sbb adc ret push pushf dec ljmp repz sbb inc dec ret jns movsb mov xchg push pop mov pop (bad) das icebp pop cltd mov pop gs xchg mov adc nop mov js icebp mov dec pop rcl call out cltd std push insb push xchg pop sub mov cmp movsb stos lea iret ja pop dec mov daa notb insl out inc push in int3 cltd jo xchg inc or xchg and aas loop leave jmp mov mov pushl cmpsl push out popf js xchg jno ja jnp call arpl dec call scas sub ljmp sbb (bad) and or rclb in cwtl adc mov xor adc sbb and xchg push pop wbinvd ds stc xchg popa divl sbb mov xor fstpl mov jmp xor push cmp xchg sbb push outsb cwtl dec out pop xchg lods roll rcll jmp outsl icebp lret sbb call xchg dec adc aad test push push insb test pop lret loope lods mov dec or dec dec es adc sub cmp jnp adc jb (bad) push fyl2x fs mov leave rcll sub and dec pop testb (bad) jge cmp ret xchg scas mov xchg mov inc mov cli lret mov sarb mov xchg pop es fldpi mov xlat (bad) pop mov adc xchg jmp push out movsb andb mov push outsb les sub pop int3 xchg mov adc sub add insb ror jecxz push adc das repz xchg mov aaa out sub add xchg xchg je pusha setno dec dec les mov inc xchg clc or ljmp das aaa fistp and idiv adc sbb lds (bad) jne fldcw mov adc pushf dec sbb sub inc call inc imul loope pop and pop in fs into xorl divl sub pop mov sub dec jmp repz sbb lahf inc cmp mov dec adc aad push mov push and and add pop or lea adc negl lea pop push faddl add mov jne lods xchg sti sahf int loop cmp into out pop dec sub ficompl sub jne add pushf and call cmp (bad) cli mov das sub aam or (bad) lret mov push movsl mov shrl xor lret repnz cltd dec dec xor fs mov lret out into add add mov pop fisubl add inc out mov popa rolb jmp xlat dec lret xchg sub popa inc leave outsl or maskmovq testl testb fidivl pop pop ljmp into jecxz mov mov and popa dec cli sub adc mov adc xchg lret adc cs xor out push adc ret pop clc rol pop cmp (bad) pushf jae dec iret (bad) fdivrl imul (bad) mov dec jb cmp add add inc in (bad) std sub sub das leave sub mov xlat jo or push and jp (bad) notb push pop insl jp negl divb es pop sbb xor pop ljmp lret inc inc mov mov movsl mov inc dec dec and mov jno imul push xchg cltd cmpsl call pop mov cmp pop mov dec fdivr mov mov (bad) jmp or decl pop into adc push mov adc mov dec stc jecxz inc inc and xchg xchg inc push push mov inc mov dec (bad) sarl jbe mov pop push pop data16 dec aas sub das iret sbb das adc sbb std add jmp bnd xor fstl jg pop fcoml xlat jecxz dec loop fcoms pop add push sbb fist decl add int pop into leave icebp test and and xlat push (bad) out testl imul loope fstl add push pushf xchg push mov mov int ds sbb fwait dec cli fs and aas (bad) mov push push add out mov mov int jg sti dec stc in shlb sub jp aam inc xor sub (bad) jb dec inc inc or cmp push lret push xor sbb daa xor push inc arpl jbe add add jne xchg ljmp notb mov adc leave push add sub pusha lahf sub mov fldenv add jl (bad) shr jns inc shr mov xchg (bad) ret or gs in lahf jno dec mov xor and inc popa cmp and outsb or inc and pop shlb iret jge dec mov pop mov hlt or loop or incl (bad) fs in mov mov and push bound adcb mov xchg xor jae scas sub push dec and fildll xchg inc mov cmp add (bad) xor cli jecxz pop out lods mov cli int3 add xchg mov ss cmpsl xlat ljmp rorl repnz into pop out pop icebp pop mov inc dec pushl and loop (bad) cwtl aaa sub xchg divb jbe imul fucomip cmp push bound xchg add sub and pop out fwait cltd loop jbe (bad) out ljmp mov or mov xlat scas mov repz sbb and daa imul aad mov lret xor rolb jne ljmp dec je push repnz sub xchg shll adc imul mov pop jbe mov mov rcl cltd loopne (bad) or mov fs repz and fs xor mov jge pop inc lea popa iret test in sti call outsl test rcr je and sub fsts dec jg jl in jne mov mov push popf fstpl fisubl cwtl xor xchg dec inc popf mov test (bad) xor sub mov popa aam push push xor jmp (bad) pop xchg into out mov xchg stos xchg jp stc jmp pop and (bad) jne (bad) xor ljmp push cmp add adc ss push sub std pop leave (bad) jns bound cli pop ljmp xor cltd pop lret pop frstor sbb loopne add xor lods or xchg fs xchg ror jo cmp mov mov adc xchg mov dec aad xor xchg repz (bad) dec sub inc mov std js pop cmpsl mov push inc mov addr16 mov aam push xlat mov in iret or mov jae xchg add outsb bound int3 sahf pop out cltd adc aaa repz popf rclb sbb mov les mov push daa push shlb into pop ret mov (bad) sarb push icebp pushf adc repnz fadd add add mov pop push call cmp jecxz sub dec sub das roll mov xor inc push aas jecxz rol popf call (bad) fistpl insb jg adc fistpll (bad) (bad) or popa push dec and mov daa and cmpsl jne mov push mov or inc add sbb popf test out mov fmull or scas lds cmp and inc mov dec lock mov sub jmp pop fmull inc stc pop jmp inc into fnstenv pop lahf out ror repz jp repnz adc and push arpl cmp mov dec sti cmp xorl mov cmp push lahf (bad) push push std (bad) push fs cmp push fiaddl repnz mov in js enter pop negl cmpsl jmp decl xor jns das or cmc inc jmp cmc xchg (bad) xchg xor or dec add adc jle sub outsl jmp shlb scas jno jnp dec shlb cmp pushl in cli lods shrl jl mov pop cmp jp movsl dec (bad) (bad) pop imul and aas jae hlt movsb pusha icebp fidivrl and mov mov es mov xchg and or cld jp fcompl std xchg lcall jmp dec in cli icebp (bad) inc mov xor fnstsw push inc mov cmp movsl mov xchg jecxz and xchg imul pop les div inc addr16 xlat cmp das imul and repz jae jecxz lods bound pop pop mov fbld xchg pop mov mov daa shrb iret fimull lret xor adcl jmp mov (bad) imul dec xchg push or mov js dec repnz jge pop testb stc cwtl mov mov js into rcll in movsl cmc in cmpsl fs and mov sub (bad) cmc dec out mov aam xchg mov out cs push pop pushl stos sbb and clc popa sti jmp mov notb or dec cltd ret xor ja scas sbb add (bad) and ljmp mov adc sti fwait push mov movsl sub daa movsl xlat xchg loopne and je loopne int3 lods jb dec mov je jmp inc xchg jmp shrb xor cmc roll add pop in push xchg aam lret push sub pop xchg pop ret or mov test dec xlat fs cmp add lock lahf push inc push lds pop out mov push jno popa sub or roll sarl icebp inc cmp sti jnp xchg ret bnd (bad) cmp in push imull mov adc sub ud2 popa sub in sub mov and add push (bad) sahf pop pop mov push incl lea repnz lret les sbb roll add lret fldcw inc ljmp dec hlt in inc cltd mov stc subl ret iret ror out mov pop hlt pushf or stos cmp xchg fistl bound inc sub out dec dec jp and jno das push adc xchg sbb out pop mov insb jno lcall sub pop dec jb mov push test mul imul mov jge lahf and and cmp sahf lret dec (bad) mov (bad) loop xchg inc dec inc dec bound movups das sti xor sbb xchg scas pop push test and stos pushf jne cltd imul imul xor add cmp lret daa adc push bound inc xlat mov xor out push inc push lahf push adc mov (bad) dec xchg push pop cli notl adc adc lea repnz push sub bound jmp jns lcall or iret or mov in mov mov in add sub out cwtl push mov lock sahf and mov pop jb test out imul adc push cmc mov (bad) ffreep mov jg inc mov sub icebp fist js mov aam les stc ljmp daa std adc out xchg decl icebp push mov aas mov dec ljmp icebp inc push outsl mov adc scas cld push lds push mov shrb xchg cmpsl stos lret mov or fsubl pop jo sub sbbb jb mov xchg repnz in and sub sub xor jae test and cmp ds inc imul lods scas sub ret xlat xor xchg (bad) mov or dec inc icebp (bad) sbb push notb pop repz pop neg dec inc dec mov cmp ljmp ljmp mov pop les and xchg mov pop xchg sub fnsave roll sub (bad) or dec (bad) xor push add mov pop lods (bad) (bad) mov inc daa pop or call pop jg (bad) (bad) lret sahf dec mov mov mov sub idivb add ret lret mov das push test xchg xchg (bad) pop adc cmp icebp sub jmp lods inc imull stc mov divb leave fldpi or sbb mov repz adc sub inc xor cmp dec ret call test mov int3 or fcompl fmuls icebp mov and push mov mov sub cmp leave dec stos (bad) (bad) out jg rorl xor aas jecxz pop inc xchg fisub repz adc pop xor stos fs cwtl out jb xor or std sub mov sub and mov mulb out push push mov xor cltd xchg ret mov (bad) movsl sbb mov mov stc cli movsl clc repz ret out aad mov das mov jmp cmp pop mov jp sbb fdivrl mov out cmp data16 or loop (bad) repz pushf rcr fwait hlt loopne xor xchg or test xchg pop dec mov mov leave and xchg cltd or mov imul out cmp les (bad) pushf sbb mov jecxz movsl sbb leave aas in sbb (bad) aas (bad) add aas (bad) popf or repz mov jmp xor rcll fsubrl push lods xchg pop test inc jne xor jno gs add xchg rcrl sarl sub sbbb mov pop enter daa add std dec lock xor lcall dec ret push adc pop leave and stos or xchg push mov dec xor lea mov into icebp popa dec clc or xor stc ljmp testl cmp test movsl cmp mov test xor or ja aam and and (bad) or shrb loope jg pop add cmp add test stos js add pop jmp imul xlat push ret jg fldenv push sub fcmovnbe inc fist in jmp aas aam mov dec ret rcll fdivr ret push pop imul add xor add ljmp dec add aas fmuls fwait dec and xchg das sub mov mov cs push pushf lds mov leave out sbb cwtl scas mov jns or (bad) jne pop (bad) (bad) xlat into int movsb mov fisubr jbe int3 sbb mov or in aad cli inc mov dec divb pop adc hlt jno push sub ret fstpl or insl not popa pop mov xchg call xor ja ret gs ds lahf lds repz rcll dec xor push xchg pop mov mov out xor mov loop lcall mov decl loopne (bad) add jno imul out jle gs sar sub dec (bad) lods pop mov movsb mov and xchg mov (bad) pop fld xor inc dec pop and mov (bad) into out push mov (bad) loopne aam push and adc xchg jle pop roll fs stos push xor jmp repnz pop pop adc (bad) test push add pop mov es pop xor out mov mov sbb scas xor test mov jnp and daa jne mov xchg push popf cld mov inc ret jnp inc mov pop mov add es and jmp (bad) pop (bad) outsb aaa mov ret inc (bad) and mov enter sahf sub andl or out sar or mov and dec aad inc out out je sti fcompl dec (bad) xor insb lret aam das dec inc les clc xchg dec add jp (bad) es or xor jne out mov mov sub scas mov rcrl cli stc scas movsl jbe adc scas mov shr cltd int3 sub xor in leave clc aad (bad) cmc and into and and xor mulb ds enter cmp fldenv mov cli xchg pop ror lahf mov cmp jo rolb nop sbb fbld cmp and or sub ret test xchg push orl icebp and or in pop sub out jae adc jp call add lods sti or cmp push jge in cmp xor (bad) movsb push (bad) sahf and xchg gs pop icebp xor (bad) mov xchg out ljmp cmp rorl inc mov iret cmp add xchg ret xor cmp mov outsb adc dec mov or nop nop call push incl and cmpsl (bad) push add inc push (bad) jl imul inc mov push xchg fmull icebp inc adc mov (bad) stos xor dec push sub pop (bad) xor into int xor cmp fsubr pop aas lods dec leave ret push lds xor lock sarb rclb loop lea xchg test in mull mov into and xchg mov push push or inc and orl (bad) ja sbb xchg sub sub dec (bad) mov push ljmp jno xchg push out arpl dec jge rcrl jecxz dec sti das dec dec mov xor out add fbld xlat dec or adc fs push push mov cld repnz pop push fcomps jp in push sbb mov adc call dec adc decb jmp mov adc stc mov xor jnp mov negb popa push ds xchg jo mov push jns inc movl mov in cmc or fwait push mov lods sub stc pop dec xor ljmp int3 push lock add jb repz sub add movsb scas mov jg aad idivb push push mov fisubrl mov fisubr (bad) pop push stc stc dec in movsl aad test pop mov cmpsb xor xchg cmc loopne add add loopne jne sti (bad) das xchg pop pop pop add sbb call mov clc xchg ljmp adc pop mov idivl (bad) jbe cmc (bad) xchg pop inc mov lock inc or lret in pop add in mov pop inc addb out mov in pop dec mov jae push sub and pop dec js lret inc push jl inc push aas pop sub adc sub cmp std mov xor inc sub pop add add das pop loop scas or (bad) aas cmpsl xchg mov xor dec call jge test je sti (bad) call cmp add pop mov mov jg add push sbb jnp ret pop mov pop mov inc movsb aas push es sub add jmp pop mov fbstp outsl lock mov lret les cmp mov jecxz adc ret sub (bad) fucomp jmp mov rol sub push (bad) adc imul mov mov sub mov dec add out mov ret fldcw leave out pop icebp jl shrb vpmacsdqh dec popa lahf (bad) data16 and sbb fstpt rorb xchg sub ja xor mov mov jmp imul xchg popa push ret pop push outsl adc sub test scas idivb int fs mov in popf (bad) inc dec pop fisub inc or dec jge popf add data16 dec andb jecxz popf push xor pushf sub xchg dec gs stc and jl jb je pop ljmp dec cmp iret xor jne jecxz adc push mov cld ret mov inc dec mov pushf stc dec mov push mov repz sub xor xchg xchg out lods pop jmp xor (bad) mov adc imul and or lock lcall fs push call jo jne jbe fs mov mov repnz xchg push fs xlat in int3 mov rolb sub mov push lret adc stos out inc mov in shlb mov add ret jecxz push sub mov enter add and cmp dec movsb cmp imul pop lret imul inc cmp inc outsb cs nop ret dec pusha out sub repnz xchg cli popf imul cld lods adc shr cmp repz sbb fldenv dec daa pop adc mov and daa sub (bad) movsb nop leave sub mov je fildll or xlat mov sub repnz idiv mov add lret adc sub mov int cmp bound mov div inc push or jne jmp inc add cmpsl jl pop fsubrs rcr loop push sub cmpsb push mov add mov repnz das out fs jg ds mov add push or leave fstpt call mov into mov push ficom (bad) sbb fnsave jb divb jnp xchg out mov xor popa and les lock push mov add scas idivb push aas clc adc xchg scas ja lret jl pop push and fldt mov movsb adc scas or fsubrp outsl stc pushf mov arpl call (bad) jnp jg pop fbld and mov adc pop divl add mov leave xor pop mov jae rcrl (bad) cwtl ret push jg ja fmuls decb lods and xor mov jmp shrl jmp test add mov sti ret loop bound adc in imul dec mov ret (bad) mov insb int aas cwtl rcl or push or push cmp (bad) or jle lcall sub pushf sub fisubrl add pop fwait or stc std adc pop loope or test pop icebp add dec pop jge sarb mov push fstl and scas mov sar icebp lret repz pop clc sbb mov or jmp nop xchg jl imul cmp test add adc fdivrs negb aaa xchg popl and call xor mov addr16 insb mov popf lcall cmp (bad) frstor sub mov and and jge or es cmp mov sub rcrb mov and daa lret loop (bad) ja sub pop test iret jecxz and and out mov mov pushf xchg or (bad) (bad) cmp scas into xchg push adc out mov scas into out dec lds mov repz sub adc nop fdivrp movsl lcall roll and pop mov hlt or daa sub into (bad) sub outsb cld (bad) repnz push or call out lret pop and je add xor repnz push sub cs pushf adc popf (bad) ficoml jmp mov xlat cld xchg mov iret and sub sti lret scas dec scas frndint popa cwtl das mov pop test mov inc or or adc xchg xchg les mov mov not scas lock push adc add push lods or xchg test insb mov xchg push vpxor push repz ret pop adc and (bad) dec adc and mov push push mov push loopne push mov mov scas popa mov sti and and add sub icebp inc xchg xchg and adc mov pop push mov jmp inc shrl out mov and (bad) in imul ficoml xor into jg gs and insb xorb loop adc pop add out fcomps fstpl int pusha or sti and xchg mov fucomip jb sub dec movsb add inc or sbb cmp dec call cmp movsl xor jl rclb ret jecxz js ss aaa sub adc mov aad pop dec pop jmp dec cltd aad decb mov mov add or (bad) mov fwait and lods and or xor popf push mov leave push loop add pop in (bad) mov and or inc pop adc adc jecxz xchg popa dec ljmp cmp test jnp cmp jp mov ss cmp xchg into or imul cmp xor xchg fcomi movsl jne add fs test lea xor decl push ret xor stos bound xor enter dec ds fisubr or and pop call daa sbb jecxz adc xor dec mov outsl out das test movsl jmp rcrl popa dec test xchg xor jmp lret fsubrl adc dec pop and xchg lea jo or sbbl sub test push push dec xchg ss xor fsubrl outsb pop push mov sub rolb xor pushf lahf mov sub aaa mov mov xor lret pusha mov mov push insb (bad) dec mov pop pop cmc idivb pushf or dec pop out jmp pop add jle fimul mov mov lods mov xchg jg or aaa ret leave add mov sub and or xor sub sub testb cli cld fsubs lahf js imul dec scas lret mov or push leave test iret xor mov stos je scas cmp sub lds ret sub leave (bad) jnp sbb jns das mov pop ljmp adc add pushl idivb push into stos mov jl or mov daa into push (bad) leave cltd sbb (bad) adc dec push mov mov cmp test mov jb mov pop push inc dec (bad) mov mov lret imulb inc sub sbb sub inc loop add and adc dec test vmovaps leave mov mov add pop das or test inc sub cltd cli or pop jmp mov das cmp xor sbb jecxz in mov dec push loop je enter xlat scas jg push nop arpl dec mov mov cli cltd sbb aaa or data16 mov and mov or repnz adc aaa mov das sub aaa mov (bad) cmpsl mov adc add xor imul enter aas mov dec jg pop adc popa aad cld js cld lea out xor push jb loop mov sbb pop cli out add push pop dec mov mov movsb addr16 fisttpll mov jno ljmp xchg out or adc xchg xlat mov jle in inc mov mov shl fisubrl call sub jecxz xor (bad) (bad) mov mov or mov add jmp orl outsb inc out and or pop in leave js mov ljmp and jno pop (bad) mov in cmc add sub gs pop movsb inc fidivl bound jbe dec ja pop pop add add push mov call pushf lea cmc mov sub fdivrs xchg stc xchg sbb adc repnz sarl sub out xor inc pop daa pop sub stos lret mov ds push adc imul les (bad) sti mov xchg xlat lods pop or cli data16 mov push inc xor inc loop inc adc add jp ret sti add (bad) mov push mov out sub int3 or cltd and jns xchg adc ljmp adc insb popa dec lret mov call add cmp dec icebp mov pop movsl or loope popa enter (bad) outsl cld enter mov sub dec or adcb sarl mov in xchg outsb mov xchg push das xlat xor jecxz xchg lds push add cli mov mov (bad) das cmpsb int lcall arpl dec mov sahf adc sub cli lret jecxz and scas cmp arpl mov jle jl inc sub push sub pop mov test fldcw icebp xlat jnp xor insb mov xor lret stc push push cld outsb les sarl in movsb repnz xor negl leave test icebp daa mov sub adc cltd sub adc cltd dec into push cmp dec nop mov and daa xor ss daa lret mov out mov pop push rorl je andb push jnp imul loope loop xchg mov jle sti add xchg negl dec mov cvtps2pi sbb mov xchg jne mov pop fwait std insb (bad) rolb idivb cld cmpsl mov cwtl mov xchg mov dec lods mov into test push imul insb dec mov std xor mov sbb (bad) stc sub mov xchg adc cmp ret xchg pop enter mov and stos aaa push inc xor mov cli call or out imul (bad) (bad) (bad) ljmp (bad) or lea (bad) (bad) imul or lret and or mov imul pop fldl sub (bad) mov cmp xlat call lods sti dec sub enter mov cld iret mov dec ja out sbb xchg call or xlat inc and dec daa or add je cli fs xor pop std add sub add sub adc (bad) aam jb in test jmp imul lahf push jge pop fcompl inc xorl push lret xor jg pop mov mov outsb icebp nop inc add fldlg2 xchg sub inc mov ret and (bad) movsb dec pop pushf mov sti inc and push fildll add or pop repnz push jl aad pop mov (bad) iret add sahf xchg loope sub dec stos addb dec adc ds scas (bad) jg loop inc mov sub movsb jmp and iret add mov (bad) gs imul jbe push push lahf adc push stos cmpsb ret pop mov fistp pop mov jno adc ret fnstcw sti movsb mov push repnz dec stos cltd jnp mov xchg adc jmp jmp data16 pop ret cmpb push incl dec lret cli ffree ja push xor lods (bad) bswap push inc pop or movsb mov aas dec iret fistl or sbb adc iret mov daa or and jge xor dec enter aas dec add nop les vmovaps insl push mov and mov das mov icebp test and inc into call imul adc icebp dec sbb loopne add sub jmp dec int add cmpsl push adc mov in lods xor adc xchg adc mov add enter fcoml and lret push aaa popa (bad) mov jle mov xor lea sub add xlat gs es (bad) add mov and daa jne sbb mov imul imul ffreep lret mov mov sbb xlat lcall cli jle sbb dec jecxz mov in test adc dec mov cwtl bound dec (bad) out xor cmpsb out and fcmovnbe xchg xchg or add je out adc sbb add stos sub mov add jl mov adc mov icebp xor aaa pop mov ficom xchg push or repnz hlt test scas and aad (bad) movsl jl (bad) xor aaa or jmp pop sub push mov sbb (bad) movsl mov div and cli stc fwait cwtl pop repz sarb pop enter lahf ret test lret mov pop (bad) mov mov adc add cmpsl in test or sbb push push int3 pusha xor add jl dec (bad) cli aam dec push outsb mov xor jae (bad) sub sub jecxz imul testl aaa dec push mov cs pop pop mov pop xorb sbb mov cmp add aad mov add mov lcall dec cmpsb cmp jbe push mov add add aad xchg lock cmc orl std pusha xor or call push pop je jge and mov lret xor mov out test cmpsl push dec add call add test mov or push iret add sbb notl pop adc xor push inc sbb das les add add and (bad) scas jg xchg out jnp xor push test mov sub mov out xchg das xchg push cld cmp mov sbb sbb testl pop xor push push push mov pop mov and dec inc adc mov fistl subl pop (bad) scas cltd pop imull sbb out ljmp jmp sub lods xor pop jl daa fnstsw adc xchg stos add push push jecxz pop lret pop pop ret out mov push rep outsb stc or pushf xchg xor pop push mov (bad) sbb (bad) les sbb test xor lret jle ja scas ret (bad) faddl jg jo call das das sbb mov sbb daa ja ss or push add mov leave pmovmskb pop outsb push lret lret mov fstps sti lret ds mov add into daa jae nop ljmp mov xchg mov or cmp pop leave hlt (bad) inc push or sbb out imul xchg push inc pop into out cmp sub cmp mov xor bound clc ja fs out lods jnp and mov add iret loop fsubrl lret jge jecxz in fisubl or pop jmp mov lds std mov xlat pop lret (bad) sub daa jno or leave mov jle cmp test in push pushf pop xor dec (bad) jmp pop add inc jb loope ret xor pop mov mov sub jl mov mov push push xchg and negb push imul mov sub das sti bound and adc mov push xchg (bad) repz das jmp pop xchg xlat xor jg cld jge xor sub stos rorl rcll xor mov dec aaa dec sbb pop (bad) or dec scas sub lret mov in inc test lcall mov inc push xor dec lds push add stos ljmp pop imul inc leave sub sub or stc es xlat lods and leave push repz jg xchg xchg movzwl dec dec imul dec mov xor shrb mov cmp shr addr16 inc cli sub hlt inc (bad) shll mov call jmp das xor sbb and dec sbb cmp pop sub stos (bad) sub out je les lcall or jecxz adc pop cld sbb mov and in add and mov pusha push mov cmp xchg xor and stc mov push jge sub (bad) sub std (bad) mov lahf notb cli lret adc cmp mov fs xchg (bad) movsb pop or add (bad) loope jns fs add inc cld pop dec mov adc rolb add stos data16 cmpsb js mov fisubl pop lods push les add sub cmp nop jbe jmp or dec (bad) dec test in mov cwtl scas xchg add inc cwtl negb mov cmc insl add das mov mov shll dec mov jne pop shl test pushf das sub sti xchg fiadd loope cmp jg sub xchg push jbe,pt mov mov jle loop stc mulb das je and imul pop scas fdiv xor lea stc gs int ljmp fiadd daa jle mov or pushf add sub shll (bad) mov fs stos pop xchg xchg lcall inc xor jbe imul jmp popf pop jb ss jg inc cmpsl jne sar sub addl and sub and and sub cmp sub addr16 xchg fsubr call lcall sub or fistpll imul cmpsb movsb dec mov rcll daa add insb mov addr16 dec pop shll (bad) cld lret rcll or cmp jnp ds sub mov mov cmp mov pop mov lock adc jmp mov lock std or cmpsb cmp mov mov add cmp ret cmp dec and sbb arpl lret and push popa mov add sbb fsubr imul insl lretw fnstsw jne ljmp cmp jbe adc jmp orb add mov inc jno adc mov pop push cli repnz pop daa jne xor xor out out pop mov js add sub xor jno mov xor jg in sti fisubl out sbb stos je push push aam mov mov int3 push popf test out xor mov mov dec in popa mov mov jne imul inc and xlat ret mov mov mov dec dec leave repnz pop jbe or mov testb push out call add sub stos xor bound sarb lcall push adc pop jle popf clc sbb (bad) das call adc mov jle out mov sbb mov vphadduwq jmp loop xchg loopne or rcll cltd adc test fcmovnb jne (bad) jmp jecxz sbb mov sbb mov sub ja and adc cs mov fstpt repz int cmp mov test and mov lret pop cmc or or cmp xor mov add popf adc mov leave out sub push jmp mov xor jo jbe sbbl push test fldt repz je mov daa push dec mov cmp repz decb add fnsetpm(287 (bad) and adc dec and lods inc inc dec sub shll nop xlat test cmpsb (bad) mov cmp jmp jo cs sub outsb clc pop mov lret inc jle int3 bound xchg (bad) pop daa (bad) push data16 into cmp leave (bad) fisttpl cmp jg test jnp pop fs fdivrp ftst icebp and xlat imul mulb shrl add jae daa popf mov mov xor mov lds or lcall scas cwtl dec out sahf cmp cmp stc mov fsubl (bad) fs jle mov mov divb cmp mov data16 les push add jmp add add sub inc (bad) int jno jg mov mov setl lods in push dec ds out xchg and xor or scas repz xchg scas mov lds and cwtl mov icebp gs inc adc outsl xchg jae enter test movsl ljmp mov idiv add jmp or sub or add cli outsb cmpsb fisttpl into cmp mov lock sub movsb mov pop ljmp cld into sub add (bad) adc cmp or nop (bad) xchg loop sub mov jnp or pop dec daa pop sub stos xor sahf adc or inc (bad) icebp lds sub inc jmp mov cmp xchg mov stc mov sub fcoms jl push les fwait jbe jl dec jmp mov pusha enter rcrb aaa iret add lock cmp mov sub xor mov or add mov in leave mov lret fist pop mov loop out and push stos leave ja dec movsl or imul lods push xchg adc jecxz dec lock out pop add in lret test sub push imulb std lds dec jecxz pop pop test mov jno dec mov mov or mov out push ja ljmp (bad) jb out jmp lcall pop xchg xchg lahf sbb add push popa in cmp in sbb mov xor daa fisubl inc (bad) mov shrb mov ljmp pop icebp fsubrl pop dec add inc mov or adc sub scas fcompl jge add dec add cmp cmc pop xor inc lock jmp mov xchg cli push mov adc jae cmpsl push (bad) mov pop push dec cltd xchg dec jns mov mov out movsl aad cld adc jecxz repnz (bad) mov lret gs adc mov in dec scas mov inc fimul sub or and push ret pop sarb dec out loop sahf xchg cli jne loope sub pop or sub decb or enter popa xchg and cmpsl mov mov enter and (bad) out adc add xchg cmpsb pop pop ljmp sbb pop addr16 push movsb dec lock inc movsb pop jb pop repnz rclb inc lret aad daa xor adc fwait jae lcall mov (bad) (bad) cld aad (bad) adc mov loope sbb mov fnstenv icebp test jbe outsl imul add cmp sub mov and jl mov daa jno mov icebp mov sub push sub fs and or (bad) sub repnz xchg fistpl pop cld enter repnz inc push add mov roll (bad) mov mov dec icebp in imul loopne mov shll dec int3 out pop (bad) xor es inc push mov sbbb enter lea test (bad) sbb cmovle lock dec ds mov fldcw sub push arpl rcl outsl pop movsl jne xchg test ss mov inc call sub stos mov aam sub xchg mov mov mov negb vpsubb inc mov lret add fs daa (bad) (bad) test les incl shlb pop pop cmp js movsb adc cwtl lahf pop xor dec add rcll and xor mov xchg dec rcl das sub and mov cld push xor daa andl pop je jnp or pop push out test push rclb mov test lods ficom fstps sub addr16 leave mov imulb mov and adc and daa and push ja add std cmp xchg or sub push cwtl or cld movsl pop xor cmp repz leave cwtl movsl lret neg dec xor negb mul dec push aas loop dec sti int3 data16 inc cmp dec lods int3 into (bad) hlt ficom decl push (bad) bound and in pop movsb lods fwait test xor into pop and icebp xor out dec xor ret push jb xchg mov and mov mov xchg rclb in lea (bad) mov clc test cmpsl addr16 push and movsl adc and scas inc mov les xor jmp pop push call out imul test push daa push xor mov push cltd cli ror repnz sub out pop xor imul sub jb or (bad) mov ret mov pop imul and jp aam push pop push aam std int3 stos dec adc cli test js mov inc out jno out js movsb mov lret (bad) pop xchg popf xchg fidivl pop add dec stos int outsl mov imul and fbstp insl and and lock into leave jg pop das pop stos ret (bad) jo sub fistpl daa ret push mov pop pop xor cwtl mov popf loop fdivrl push pop and pushl push (bad) dec lret cmp cmp daa idivl or rcl add pop addr16 lods popf stc dec dec pop inc inc sar rorb sub repz mov (bad) dec jge ds sub add (bad) shl daa add lret lahf (bad) sbb xor push adc daa fstpt cmp adc sub sbb cmpsb cmp cwtl push daa (bad) xor (bad) and xchg mov scas and lods and (bad) mov push cld lahf mov inc sbb stos mov jb sub into cmpsl fistpl test sti imul rcl rol call sub pop rclb insl sub xchg lods out jmp push adc shr lea jl pusha fs leave shrb push lock mov push insb jp mov sub mov mov jecxz dec mov or adc ret pop into push loop push test rcll (bad) sub push jne xor insb ret mov mov out lods cmp mov movsb pop sub xchg (bad) jae xlat sbb ret or pop add (bad) (bad) aam dec push inc dec clc cmc mov addb xor mov jbe ret xorb push repnz sti int push mov int3 das pop xor aas dec lea cs pop dec mov nop jg and fstps imul xor popf push jmp repz shrb xchg fwait cld lret fnstcw stos mov jl sub mov mov into push xchg inc mov and and xor and xchg inc subl fimul or mov fcomip jne fdivs repz lahf daa jg mov add mov push add adc pop mov (bad) mov dec movsb dec (bad) enter cld xor shlb pop nop or cs sub adc xor xor (bad) xor mov xor pop imul mov sub sub jmp inc rorb clc jmp push cmp imul add mov imull xor and sti daa mov push movsb jno cltd jmp mov xor and in dec mov mov cmp cmp dec rcll lret push in (bad) jnp aas rcl jmp push imul das cmp mov jmp mov adc aaa repnz jno inc mov ja out test ds add in and mov lcall jae jae daa fadd clc js mov (bad) push xchg xchg and inc out andb lock sti xchg mov lock and sub xor xchg jne (bad) dec into sti sub rorl rol repnz mov lret loop sub jo xchg pop and inc (bad) fldenv jp push adc rorl mov cs ds mov ret pop push xchg add xchg in or xor cwtl cmp jno cmc out cwtl cmp or inc jbe (bad) xchg and sub (bad) test adc out fstl outsb loopne leave mov jp das push add mov inc les add aad dec loop ljmp inc cmp mov xor popa shll cli cmp les xor push pop push or xor inc inc fildl lret adc lahf mov and rcr lret mov int daa push sub negb repnz scas mov dec jge (bad) dec in stc ljmp jg sbb mov jmp pushw cmp adc fidiv adc jnp aas dec jmp (bad) or addl xchg test push or jmp xor and stc jae inc add test iret xor mov lds jmp xor lahf push pop rcrb in dec inc movsl out inc sub stos inc xchg dec neg psubsb sbb mov (bad) mov imul jg fidivl pushf shl push jno lods popa cmp jmp (bad) frstor sub test fsubp xchg idivl jl pop fldenv add (bad) dec xchg pushw movb rorl mov pop mov inc xor sub add xor xor fcos cmp test pop (bad) push stos push daa mov loope inc xchg stos cwtl xor pop (bad) mov mov dec call push icebp sub mov mov mov fwait pusha and dec (bad) out fisubrl fisubrl jg lods xor rclb aas push cmp ja sub add add push int3 pop fcoms idivl repnz push mov aad pop cld loope loop xor add pop fisttpl adc xor mov sbb in add and mov pop (bad) xor outsb mov lret pop cld lret out dec xor les int xor or jmp pushf pop mov cwtl in xchg cmp sub xlat inc cmp cmp mov mov std sub xchg add mov sub aaa incl clc pop push inc lods xor cmp mov clc arpl aas pop push or bound movsb adc js mov test imul add sbb repnz inc push (bad) (bad) ja inc push sub and fnstenv outsl cltd stos xor movsb jae loop dec cmpsl inc pop stc in fnsave or and ds hlt xchg imul das repz mov scas mov lods xchg cmp rcrb idivl mov fisubr ljmp lret out pop loop pop pop or mov (bad) movsl push push cmp test mov push ljmp jnp sub inc sub inc mov pop clc dec and xor cs mov fdivr (bad) iret sub (bad) push aas adc stos mov xchg cmpsb stos or ficom and pop pop mov jmp lds daa dec jnp mov out call iret jge int lock dec lcall repnz or push or testl mov aam push outsb mov imul scas cmp out inc xor cltd sub and sub mov mov pop push (bad) mulb pmullw rcll aam push mov and add sbb mov scas add xor out das or lcall push (bad) xchg push dec jmp popa sub dec call sub movsl cmpsb push insb rclb lea jmp repz sbb push out xor jnp add adc stc mov test call loope and sub and cmp ss dec push adc lods jle push or lods pop ds dec mov lds daa (bad) xchg sahf div push loop (bad) sub and inc notl add out stos lret jb cltd outsb insb rorl cmp xchg xor adc vcvtpd2dqx (bad) repz faddl clc in pop xor pushf push and mov movsl mov pushf inc and xchg js lahf in dec pop adc jl dec out jecxz nop lods dec cltd jle or test mov jecxz daa push add lods sbb iret mov ds loope jg jmp ljmp adc stos inc add mov das jmp iret xchg (bad) mov incl and lds pop mov lcall sbbl into pop sub shll jmp sub cmpsb xchg call out jb or imul adc add xchg fdivr jge or jns dec xchg mov daa out cld lahf repnz pusha sub jne,pn and xchg aam pop mull dec out test sbb cmp rolb lds fdiv xchg sub jl mov jne push lock xchg ja push mov ret xchg (bad) xchg out cmc ds dec dec or sub mov push xchg push mov loop mov stc xchg jnp mov into pusha dec icebp dec aas stc (bad) lret ret push inc or cmp xor icebp (bad) push and adc mov daa jge ret lret sbb std adc mov sub push (bad) xor out jnp scas cmpsb add jmp enter mov cld jp pop cmp inc fistl imulb push leave push mov xor lea dec (bad) fcompl add mov jns movsb mov mov popa push push or ja xor and loop lcall inc (bad) fistl inc dec xor imul jnp lret sub (bad) mov pop xchg lret lock cmp insb rol repnz xor les lods lahf mov cli or movsl sbbl ror adc call and dec add std xor mov movsl push es or or add push push or repnz push aas mov xchg das push cmp adc jl pop movsl shr hlt jo xor cmp mov adc and and shrl les push out das pop movsb pop fucomp pop dec sub iret int3 outsl mov mov repz mulb lret dec and and ljmp repz and inc bound out inc push xchg movsb daa and fstps ljmp fisttp add imulb adc dec add and fcomp data16 sti jbe and mov sub xor jae push icebp mov (bad) mov outsl xor out lea xor sub in fcoms mov hlt jle adc sbb mov and push les adc xor testl sti out scas xor lahf dec outsb mov lods inc xchg clc (bad) je dec repnz mov xchg js pushf and or add aad push sub mov cltd movsb test push mov jae call int and fs xchg stc pop dec imul pop gs inc or pusha sti jne mov pushf sbb test pop mov mov sub mov (bad) ficom repnz and (bad) (bad) aam fwait sbb inc out sbb jmp push and or pop outsb js (bad) xor in paddw hlt pop add mov lock test cmp ret scas ja imul lds and mov cmpsb fnstenv jle in mov xchg leave mov imulb pop jmp mov mov mov pop add push cmp insl das cmp add mov fstpt or xor mov adc sahf movsb inc sub jle or mov pop out out push jle mov rol ret aad popf std sub negl or xchg into adc add (bad) pop ret jl test (bad) fisub lahf jg lods mov (bad) lahf loopne jmp mov rcll imul push movsl push sbb pop dec into mov es xor push je jb clc jne mov jmp leave pop int3 imul or aad repnz or pop aad shrb or sti push in and das add or iret test pop sub add je (bad) cmp or in xchg sbb xor push and xlat cld (bad) sub (bad) push mov (bad) jmp jo sub out pop xchg mov ljmp xchg push mov js sub cmp or cmpsb sahf addl xor divl xlat sub and jbe adc or out add rorl inc pop lods pop daa (bad) push xor faddl jge cltd cmpsl fsubp in test movsl lds divb icebp nop in sbb dec idiv sub lods push jne fstps push dec fwait pop mov adc or inc leave loop xchg push xchg fs adc sbb gs ljmp mov or daa lock decb dec lods repnz sub mov (bad) mov (bad) adc pop sarl sbb xor dec xor test xchg repz in mov pop lock scas std repnz enter or orl sub jge (bad) xchg jnp lock xchg adcl add mov dec pop aaa call movsb call daa xor pushf jb iret das pop xor pop xor popa loope pop aas sub jp cmp movsb lcall sub mov les lahf sbb dec and jno jl dec into int3 adc out subb test mov pop fcoml dec in nop or xchg push jp xor aad ds icebp adc adc mov or (bad) pop lea enter pop add jbe imul out pop xor mov pop mov xor ljmp (bad) jge or add mov daa sti in in push xchg mov (bad) xor cli lods leave dec push mov pop (bad) (bad) or sub pusha insb and dec jb mov call ret mov mov or in out repnz (bad) iret inc stc leave xchg pop pop scas loop mov xchg out sub ds sbb add cmc mov aad sti lods mov (bad) xor out and dec iret mov pop mov mov ja xchg sub xor add inc xor sbb push and jg movsl test scas sub (bad) test outsb daa mov arpl outsb dec push ljmp dec es jg rclb xchg sbb jle fcoml stc js sub jle push movsb cwtl fdivl xchg outsb mov or cmp lret fwait shrb test or mov or mov rcll and fdivs push sub push test jl iret add dec loopne call test mov cmp push dec cmpsl inc jmp and inc testb ja bound lret fbstp cmpsl jge pop pop dec pop clc adc pop or lea add cmpsl popf pop or notb (bad) jg insl test sub shlb fidivl pop loop or in mov inc or outsb pop (bad) lods sbb mov roll ds jb add out out (bad) dec lcall out pop mov les sub es mov pop jb mov ja aaa push bound push sub or pop test icebp sub shl sub xor sub iret lcall pushf ds xor dec stc xchg pop fsts jp mov add cmp add int sub mov or add dec mov (bad) fisubrl clc and inc cld es mov or mov jne push and xchg adc pop (bad) stos lret xlat in cwtl test xchg or add das fistpl movsl dec stos mov and (bad) sub add imul inc ret lret and mov or or pop adc sbb (bad) xor ds sub mov fcoms pop sti ret pop out mov mov sbbl and xchg cltd sub or pop and mov sub lret aam pop idivl mov sub es mov jp mov adc out sahf leave (bad) mov push and xchg add push das xchg shl jmp arpl mov adc sbb jg pop btc jno jne test sub pusha cmp xor cltd and fsub add shlb adcl lret and test add cli mov dec mov push pushf or xor ja stos push jg call notl sti loope loope in jmp loopne call iret cli sub pop push (bad) repnz lcall jg sahf iret sub fwait xchg (bad) imulb (bad) jg xor (bad) popa pop out and (bad) out adc mov shrb lahf push loope mov mov pop lds fsincos or ficompl push arpl roll test (bad) push xor mov push bound mov es push pop xlat inc or jp mov push sub cmp mov stc shrl sub sbb loop rcll mov push add out pop jno add xor (bad) jne mov or jge push xlat dec push jns dec stos cs pop iret xor xchg push dec test add jge or and push ficom pop jg push dec fistpll cmp gs lock jne movb mov cmp popa add ljmp aaa mov adc adc imulb push xchg fisttp lea das jle (bad) repnz mov sub cmp cltd cs cli ljmp sub inc jmp sub or add and nop sub (bad) mov sub lret cld pop shrl outsl orb shrb mov (bad) mov das repnz inc and mov mov inc aad lods bound ljmp loop out insb movsb call mov pop inc pop inc (bad) sub mov push (bad) jne mov mov or popf lcall pop mov faddp shll mov call pop (bad) out and xchg jge jp mov dec mov nop mov pop icebp je mov idivb and push bound loope xchg fldcw (bad) call and xchg jmp rcll sbb les add cwtl cmpsl xor mov xor inc out mov or (bad) outsl jle add fnop dec stos leave stos push subl and inc testl sub call (bad) bound (bad) pushl cmpsl je and daa repz push xchg adc das lret arpl pop in and ret rcrb adc pop iret pop mov rcrb inc and aam mov lock inc fdivrs sub in ret sahf mov iret in (bad) mov icebp sbb popf xlat lcall sbb aam ficompl xor out jmp test ljmp nop push xor add mov dec mov icebp pushf imul adc cmp mov lds mov and lret imul mov pop imul dec out loope pop cmpsl mov mov leave sub xchg mov push add mov outsb out jge rol sub and xor lcall bound out sub (bad) ret ja shlb lds adc push sub xchg sarl add (bad) mov test pop out lds or jns arpl pop sub mov dec add inc loop sub (bad) and add mov mov dec dec (bad) fs data16 pop push imul lret or xchg sbb pop ljmp das into jp adc mov mov dec dec or insb les inc cltd jmp add dec or fldcw lret dec ret and jne dec cli mov jmp or mov pushf data16 test lahf cwtl ss sti jle aas imul andl and daa fbstp mov icebp xlat roll enter in lods loop shrl dec call or lea fadds cwtl push rorl jmp loopne jmp adc in in cld inc push leave cmp popf in sub ret jne adc or cmp push das push lret cmpsb sub test mov sub (bad) cltd mov dec ds mov stos adc scas fwait cmp ret aam in les cwtl add sub mov or push pop lock in test fwait mov mov repnz mov mov lds das xor jle pop jle notl dec mov and ljmp mov mov aad adc and lods mov pushf stc ja loopne pop fwait jb jmp data16 jae es jge ret xor idivb ror pop cs and pusha aaa jmp ret or fcmove icebp dec adc or mov pop xchg addl scas fldl cmp outsb sub icebp fdivs daa or xchg insl lcall inc test push jp cmp fstps iret mov sub popf sub out adc xorb sub add jmp repz pop loope popf xchg scas xor sbb xorb and mov lock fcomp rclb and sub cmpsb sub pop add pop out dec ljmp push cmp cwtl sbb xchg rcll adc push stc or ss or (bad) push test gs add and pop adc stos sub mov lock sub inc add mov lds sbb xlat pop or mov ftst lret push das adc outsb addr16 pop pushf xor xor add sub pushf and xor xor stos sub pop mov fwait stos mov dec and ret jle add jne cmpsl mov xchg fdiv mov or sub aas ret hlt in lret sbb fsubl scas mov xor cmp sub dec ljmp push lods leave push jbe add mov mov mov fincstp mov sbbl cmp dec scas dec mov sub cmp stos jne sti repz imul rcl mov and ret pop arpl add (bad) ss pop add dec push xlat mov iret pop aad push jmp dec xor pop mov dec sub or mov stos fdivrs push pop lea xchg test adc sbb nop and jl sub pop xchg sahf lret add gs outsl jne pushl and jmp xor std sbb push faddl imul cmp dec das add lret mov push and mov (bad) dec sub std cld jb inc inc push fldcw (bad) (bad) jbe mov cmp adc out xchg lock imul xor pushl rcl dec sbb testl xor xor mov stos lret adc pushf imul ret enter mov addr16 mov xchg mov (bad) bound icebp jl push add push (bad) xor xor (bad) sahf mov xor (bad) cli and push mov cs jg out (bad) std adc ret adc fsubl xchg leave xor sub mov scas sub adc push or xchg push cmp or add add leave pop outsb mov (bad) and daa pop pop mov neg inc cmpsl mov iret insb aas jne ljmp mov pop jns dec je arpl pop pop js xor clc std mov pop mov xchg cmpsl fsubrs dec mov outsl bnd mov ljmp (bad) jle lret in pop imul ror jbe ret mov fcmovne mov jo sbb xor insl sub lods push leave add cld dec push rclb sub pushf add jbe sub add mov mov sub (bad) and add into pop inc bound adcb xor xchg lods xchg in add shrl push add sub ret push insl pop sub das scas jno into sbb dec mov pop das inc lds test or push fist xlat mov add lods jmp pop test cmp ss jge push xchg call xlat test inc lea gs stos (bad) (bad) ljmp icebp add out cwtl fcom in loop mov out dec cmpsb sarl stos clc xchg xor idivb mov xchg push rolb adc inc dec mov test xor pop test fnop inc pop bound rcrl jmp xor dec jle out pop repz out decl sub pop pop sbb jno and out xchg xchg ret cmp hlt fsts sbb out sysret mov lret test (bad) lock mov scas div dec mov add xchg dec leave dec lods (bad) testl mov fisub pop add nop lods or nop xor mov (bad) and mov sbb sub repnz aad jle ljmp mov sub pop outsl sub cs cmp add cli cmc cmp or xchg ja fldcw mov fwait add adc push pop mov bound test mov xchg push lahf mov pop cwtl lea mov dec into fistpl repnz lret mov sbb clc xchg hlt mov adc adc clc xor adc lods daa fwait bound inc add mov in push movsl lods xchg shrb dec ja mov out jmp divl out inc add scas xor out pop jbe xor jb pushf xor add mov das xlat (bad) iret adc pop fdivr aaa data16 or pushf cs inc (bad) mov and mov aam les mov inc xor cwtl iret imul and sarb imul and movsb les mov xchg cltd repz pop mov inc inc mov andl mov loop fdivl dec sbb fs ret rcrl jnp cmp mov and mov aaa or bound (bad) push andl mov mov iret dec out mov out xchg aam jb xlat test jmp repz (bad) cwtl data16 mov push fcoms inc cmp or push inc mov pop lods imul and and in jb mov sub jbe pop ret xlat mov xor pop fidivl iret cld dec mov test jne jmp hlt inc dec or add mov aad mov and ret cmc dec (bad) dec in pop mov aad in dec lret add fisttpl sub out or xchg test out xor sub hlt jnp xchg add sahf outsl popa lea mov repz (bad) (bad) leave les xor popf jb xchg notl add outsb and aad out pop mov das lret aam ret mov dec cmp ret mov sbb roll xchg aaa (bad) adc or int3 stos popf fs mov sub or fst fidivl mov clc push movsl clc pop (bad) or xorb in shr cmpsb xchg cmp xor push or int3 dec pusha addr16 je bound sbb adc xor or cmp mov stos push stc dec inc mov repnz jne call cs js add and pop pop fsubs icebp call pop sub mov ret sub inc sub xor jmp int cli fs stos xor push xor lea insb cmc js sbb inc xchg jle out and add outsb xlat cs sub gs iret lea data16 flds adc ja (bad) dec stc aad mov (bad) cmp loop idivb mov add jecxz enter dec sbb gs or adc xor outsb xor into and xchg cmp testl in stos cltd add das sarl and xor and push jp imul cltd sbb (bad) xor mov jnp cltd in call ffree cmc or add out in in pop xlat adc mov subb mov (bad) push out sub sti xor mov es jo cld xchg mov adc leave movsb or xchg xor jb sbb or rolb out and popf ret or mov sub xor mov sub sbb scas sub mov leave icebp jp push leave (bad) cwtl adc aaa xor repz nop jecxz add scas jecxz push aaa and hlt popa lock loopne,pt ljmp das sub or or idivb sub std and (bad) loopne push inc cltd push out cmpsl jbe jmp in test cmp add ret adc call push sub lret stc jge jge sbb mov sbb andb add cmp and cwtl data16 cltd roll mov and es and mov sub pushf sub cmp sub sbb push add sub ret and jno cmpsl push (bad) (bad) dec xchg daa xor sbb pop adc lret or ret mov dec (bad) mov mov pop scas sub add xor push fidivl jge enter out sub cltd xor or and cwtl (bad) pop movsb inc xchg or (bad) int sar test jmp mov mov push movsl push sub or fwait (bad) cmc js dec and dec xchg test out fdivl dec cs imul cwtl xor mull lods (bad) (bad) or jmp add pop or sub cmp hlt cli ret cmp lret xorb add sti cmp leave pop cmc cmp xchg mov repz and jne pop mulb into or sahf mov mov sub xchg jns les mov mov and sub les adc (bad) int3 rorb cmpsb mov push pop incb xchg mov lret cltd cmpsl imull xlat mov hlt dec pop pushl xchg xor sub push hlt mov das cli dec rorl mov sub xchg fistpll cltd jmp lods xor push mov loopne add or outsl ret imull mov inc fistl shrb add sub xchg pop cmp (bad) (bad) popf in out inc ret pop lock push mov pop out sub or (bad) jbe movsb imul jb and out repnz mov push jbe loopne pop xchg ja jmp ret (bad) xor cmpsl pop push xchg dec in sbb sbb push or pop xchg push and xchg mov in cwtl iret mov or or or iret push vmovddup jmp add push inc in mov sti (bad) popa and cmp mov mov push (bad) (bad) imul stc rcl xlat dec (bad) shrb and aam out int or add push dec fucomip adc sub (bad) jne fsubr sub mov or popf push pusha mov sub fcomps sbb call insb and mov mov fisubl pop cld pop mov inc mov push xor aam jno insb mov sub test mov (bad) in inc inc das fdivrl jno sub add scas bound movb dec pusha imul mov into add sbb repnz (bad) mov bound (bad) and mov dec dec xchg add fldcw pop and mov xchg inc sbb mov mov cmp flds sub mov ljmp leave aad lret mov out xchg popa mov mov scas addr16 sti sbb (bad) loopne or out repz je arpl jne in popf hlt sbb sub insl xor (bad) sbb sub push pop add je fcoms or enter icebp je or flds xchg dec cmp (bad) push xchg dec jl pop fsubr insb ljmp xor fisttpll xor xor add and inc ja insl xlat ficoml call jns dec add push push inc cmpsl icebp jne xor or outsl xor mov rcr push addr16 pusha jle scas add fucomp mov icebp dec das aad xchg ret call pop jle sub dec fisub push pop test mov sbb jecxz test mov ljmp loope imul aaa sub or mov jno imul sbb xor adc push sub adc mov sbb push and cltd das push addb xor sub and sub and jbe xor iret adc mov pop jmp mov rcrl mov adc divl das out xlat cmp pop out or push call sbb mov adc (bad) mov add negl fmull cmp in (bad) into repnz orb or add imul cmpsl cltd jg scas and (bad) push in dec xchg rcrl xchg shr stc les (bad) mov shrb scas sub push lahf mov test repnz or test (bad) pop lret popa mov jne add mov mov lods pop notb (bad) jmp sub cmp movb mov xlat add sti orl sub out sub ljmp and cmp add push xor pop xor (bad) pusha ss outsb xchg test in cmpsb add mov fisubr xchg add mov jle test or cli xor flds (bad) fwait imul add daa sub gs inc stc das and notl jmp out dec xlat and push in xor jmp mov popa fsts push xor mov pop js dec xor sarb gs add and xchg aam iret (bad) into xchg test adc scas mov rorl clc mov lcall mov mov or xlat and push mov movsb mov (bad) popl jmp shrl pushf sub mov xchg sub jge mov inc pop pop sbb out call push pop (bad) cmp sub push out sti cmp cld lea add lock mov mov cmp repnz lock enter pop sub int3 jg (bad) out mov xor or ror sbb push adc daa mov icebp xor mov fisubr inc jo jo mov and xlat in dec pop sti sbb fdivrs (bad) mov jbe jmp jo xor add xor xlat stos loop xchg enter fisttpl int (bad) repnz ret push ret dec jne mov xor cmp xor lock mov sub (bad) (bad) ljmp push lods push cmp das rolb mov xor lock out xor fcomps andb gs push cmpsl adc insl and xor mov or ret adc cltd pusha xor rcrl pushf add inc sti test sahf (bad) (bad) scas mov pop mov add aas fdiv mov sub fwait ljmp pop mov xchg push jmp movsb xor or aam push jmp sub mov pop add mov and mov xor dec jecxz and enter xchg call or cmc cltd sbb mov sub xor xor test sub mov xchg pop icebp adc mov cmp inc arpl dec mov dec or xor add (bad) dec push sub ljmp xchg mov cmp popf mov aas push and lret jne mov decl sbb hlt mov loopne ret push push xchg orl movl inc cmpsb out mov pop (bad) stos cltd dec outsb lods cmpsl (bad) scas mov das lods lds sbb mulb push loop dec and cltd leave cs out push push mov add xor pop mov imul dec pop mov pop push mov (bad) push pop pop cld aad cmp repnz push push imul mov pop jg lret rorb repz dec mov out (bad) pop push pop adc push jle inc add addl push add add pop xor dec xorl sub dec aam add inc add mov ja add push das in jmp iret xor fucomi add sub dec xor mull add btl add pop loop mov (bad) push jbe insl dec lock aaa xor sub ficompl mov xor (bad) add in push add add inc jl pop sub pop (bad) jns push mov (bad) pop outsl push jecxz,pt add cli ja push cmovl jg call push pop pusha repnz outsb incb jns pushl out push adc xchg mov hlt jge jno or inc (bad) icebp (bad) fsubs js enter stc ljmp push pop (bad) push push por fildl push mov outsl inc lcall aad (bad) cmp jmp or xchg fist mov mov faddl push aas xor (bad) jle repnz jne sub pop mov aam test jae pop nop xchg orl subl in pop addl jne dec fs sahf je pusha xor dec dec push push pop mov xor fistp sbb pop ja add test in push (bad) push (bad) dec inc cmpsb xor lcall sub (bad) scas (bad) push add ja jg mov mov pop lock or inc bnd or xchg ljmp mov mov scas stos jl inc cmp inc inc xor aas pop or jne arpl inc sbb sbb in cli mov std gs xchg addr16 and or mov jnp jnp out push adc test dec rolb dec inc cmp out mov test int3 mov add shr ja push vbroadcastf32x2 (bad) mov mov jb mov or cmpsb xchg push and xlat push and mov mov push or sub xor pop xchg (bad) mov out (bad) dec pop call rcr xchg push push mov jge add jmp stos imul fsubrs add (bad) pop repnz xchg fadds out mov test mov daa rcll mov aaa into xchg (bad) outsb mov cmp mov sub xchg cmp sti out pop sti sub test fdivl push push push cmc or inc adc push fisubrl or insb les jmp cwtl xor xchg aam daa pop cmp and sub inc or dec int3 add imull push sub les dec int3 arpl sbb pushf push push cs faddl push pop mov mov adc and into mov pop fucomi jb sti pop cmp mov adc aas jg cmp repz mov mov xor mov pop or lods push (bad) xor pusha or sbb push in push jno sub sbb or xchg sbb add mov es into mov dec ljmp dec mov pop mov mov mov mov movsb push or xor rol xor push xchg dec or (bad) dec es lret inc sub (bad) js cs incl scas in adc ljmp push scas imul cmp adc daa sbb fld (bad) je push repnz and cmp cmp stc incb xor lahf dec and mov xchg push xor out int3 push repnz and scas adc stc mov or push mov jmp clc cwtl movsb scas sub imul mov cmpsb sub jge fdivs cwtl dec pop clc (bad) movsl test scas sub push data16 mov and (bad) rorl and mov addr16 insb adc or lret cwtl ds mov clc sub inc push sub enter fmulp hlt add sahf movsl lock xchg insb inc sub push xchg xor and loop xchg lcall push push jo loope sub pusha daa or fsts (bad) stc jl or lods push dec ffree imul or adc cmp xor outsl stc arpl cmc das add fbld push cmpsl in (bad) out cmp mov out popf fptan into mulb xchg imul jge adc out es xor div imulb push mov add es add and addr16 call jbe jmp xchg shlb xor clc adc (bad) sub into push andb jae movsl add out stos in xchg movsb ljmp shr dec fdivl sub xor cs pop call (bad) lret sub in lods pop add fldl xor xchg pop sub insl ret data16 mov into xchg jne hlt mov int push dec fidivrl mov test repnz sub mov and xor dec push mov dec std inc push (bad) xor out scas sub rorl jne and and sbb mov leave mov clc and in push xchg loop add ret xor (bad) sub fistpll pop data16 loop sub std movsl ficoml inc out (bad) fnstcw inc push imul lcall and pop sbb and xor repz adc lahf lcall mov out cmc pushf loope xor jmp push add add jg xor sub mov sti mov sbb sbb ja (bad) and and pop xor stc mov xor lods xor and rcrl adc sbb sti bound aam push jbe or and xchg or sbb into jmp mov jmp inc dec mov jbe adc sub shrl xor rol ss dec decb mov pop mov or sti jno movsl vunpcklps push pop out sub add mov fsub rcll inc jmp xchg in out cwtl (bad) repz jb jo in fmuls enter ljmp inc xchg sti adc push movsb xor xor outsb (bad) sub mov repnz inc ds ret cwtl loopne xor jbe imul or inc mov add lahf xchg sbb cld es imul jecxz mov cltd ret mov fdivrp fs popf pop movsb push lret decb hlt adc out mov xchg int3 adc dec mov in mov out adc pop jmp fsubrs or int3 pushf cmp ja xor (bad) lea test imul (bad) (bad) jb shrl sub int3 ds sub (bad) dec lods roll dec mov or aam push mov sub sbb stc inc sarl loope push ljmp (bad) fwait or cli ja dec out aas call daa (bad) or (bad) mov imul xchg inc lahf inc cmp mulb out mov and sub shlb and sub ss or ror imul daa repz xor daa and xchg or pop notb sub jg mov or add mov pop jb pop xor jnp iret inc pop fcompl or cltd fs orl mov inc cmpsl cmc mov out bound inc dec cwtl ljmp sub jle xchg adc mulb inc fist push push sbb and fs mov int ds lret adc (bad) negl mov (bad) sub cwtl sub aaa sbb js btr daa repz and dec mov xor insb scas imul outsb pop lahf cwtl jo lcall dec xor pushf dec ret out cwtl cmp push xchg leave push icebp enter leave dec andb and push sub ljmp and mov in (bad) fwait mov das mov push loopne iret add pop xchg aam movsl aam or add and or mov scas cmp inc imul push into lahf fsubp pop leave add add push scas push sub imul and mov stc inc movsb daa add je cmpsl negl in clc dec pop pop stos cmp push mov lods pop sbb pop or and scas add add add add xor fmuls stos sub sarb lret movsb leave jg mov xchg push push jmp loop jb mov jg out hlt (bad) lock add and xchg scas mov dec mov pop je xchg cmp cld repnz rclb das hlt cld lret (bad) cld cmp xchg shll cmp cld xchg cmpsl push into push xor (bad) fsubl jnp mov ficoml repnz push in rcl cmp sub mov sbb pop (bad) leave xor test push or ljmp adc lret cli repz add mov push loope sub cmpsb je (bad) mov pop daa scas add adc mov push jle daa pop jmp mov adc fisttp shr push int3 data16 mov rorb scas sub xor in mov cmpsb lahf cmp fisubr add jmp sbb cli fscale jb out popf aad insb dec dec outsb mov pushf sub xor pop out in xchg xchg lods cmp add xchg inc ljmp fsubp aaa xchg ret jae and jmp mov popa xor push mov mov push mov hlt daa xor inc xchg mov jnp sahf cld pop push jns jmp jmp xchg lret hlt mov es xchg sar movsb mov adc cltd cmovnp add add out hlt pop xlat gs cmpsl idivb and and dec pop outsl dec rol mov test movsb mov (bad) insl dec cmp cmc out loop mov test fildll pop jmp clc xlat icebp test lods stos test mov dec (bad) mov jge ret (bad) (bad) jno and sub mov adc jmp adc shrl mov out in pop pop pop pop out call movsb pop lods rcrl adc icebp out mov cld pop lret mov mov sub dec dec daa (bad) push ret testb mov push add stos ja gs leave push jno mov out lret in push leave push add incb aas pop push mov mov out and pop xor xor and into mov lahf push cltd int das jmp aad repz jnp jno in repnz push dec loop lret fcoms outsl fbld shlb ret mov ficom add push mov sub sbb leave push cmp cmp push hlt (bad) and push dec xchg out ficom and pop dec mov repz or cmp imul mov jp mov add and add adc push cmp out xlat stos push mov add mov sub mov push or aad pop cmc mov cmp adc add into es xor cs dec stc xchg xchg mov dec ret sub rorb outsl (bad) or mov mov adc aam lcall divl push dec jbe mov rcll shrb (bad) popf jge or cltd mov (bad) mov pop (bad) repz (bad) lods sub jecxz jge mov cmc pop aad push adc mov (bad) jl xlat (bad) sarl xor sti test mov mov lock out xchg jno jmp loopne jbe ret std xor ret lret or test inc test shlb (bad) pop xor enter flds (bad) into push movsl (bad) cltd mov lods es pop (bad) into push pop in imul cmc sub (bad) xchg popa or loop mov xlat mov ljmp das mov pushf inc mov dec pop rcll test or ja pop mov (bad) (bad) insb push dec sub fsubrs daa adc push push lea gs scas f2xm1 push int3 mov (bad) cmp jo add xor sbb mov mov cld adc fistp mov mov fildll jg iret xor add in imul out call cltd aad add push jp movsb sub stos xchg (bad) bound shrl lahf xor or out mov lds iret loopne push sahf xor mov jge cmp cld dec cmpsl xchg (bad) xor sub lods insb aad in ret stc dec shr iret mov out cmc dec pushf das pop popa movsl mov or mov aas cmpsl or stos lret push cli sti lret xorb lret add dec and add pop in jg mov sub cmp xor and xchg push fadds xchg popa jae mov (bad) lds idivl add cltd shrl dec pushf mov mov cwtl jmp popf pop xchg pop mov test nop lret std scas sti (bad) sbb sub (bad) add stc imul loope lret pushf subb dec aad mov cmp mov icebp dec mov leave pop lds cli sub cli push cmp xchg mov push and lea xchg daa push ja push (bad) push pushf (bad) push jno dec pushl stos sti mov sub int3 inc push dec call jg ja pop jle das mov add sbb dec ret push sbb push lds push mov js (bad) fdiv ret popf sbb pop dec leave sti sub pop mov andl pop in imul imul jge sbb mov aas dec mov xchg mov mov jmp lret popf in cmovl and pop sarl popw and das idivl test movsl mov int imul test mov popf inc cmp and fistl out mov mov jmp inc and subl inc or sub ljmp inc xchg push push in lret rclb data16 or lcall mov xchg pop inc mov push sbb in cmp mov icebp out ss js ljmp ror (bad) inc fwait pop dec mov (bad) stos push or dec prefetch add into mov sbb inc out ljmp pop or mul cmp sahf xchg (bad) out cmpsb int mov out mov or out sub add adc scas pop or jge testl sub (bad) adc mov and repz adc dec or into mov mov test jmp or mov and sub mov push lret pop sbb shlb lret test in push das out fidivr shl lods (bad) fstl xor test jp mov jae or fxch sbbb (bad) mov push and mov sbb enter ficomp testl in sub sub icebp dec bound jb dec call shr aad sub test xlat sbb mov or inc mulb xchg xor and mov pop sub int3 fisub or test test add ret out dec mov ljmp sbb cmp xor enter enter dec fdivrl add adc mov sbb xchg (bad) or jne loop mov push or andl daa inc mov push ss or into jne lcall fldl2t push sbb movb sub and (bad) pop mov sbb pop cwtl jmp sahf pop ds jge or or stos cmpsl push stos mov stc add aaa xor test movsl nop xor in outsb jecxz add pop sub or outsb fs scas or test mov adc hlt (bad) mov cmp das or (bad) shr and fidivr cmp rorl icebp scas test push lcall push popa jbe outsb add or cmc inc add fwait xchg lret hlt push rorl add or push ja push sub dec in jle push mov jl cmp in movsb lret and mov fsubl out dec popf into outsl test pop add es or push addr16 jo pop idiv xor stos mov icebp bound add dec (bad) sub (bad) das push mov mov jge sti pop xor and idivl es jge das jns mov xor jbe pop arpl sub pop mov sub fisttpll push (bad) pusha sbb mov mov (bad) and aad jmp lods je and ljmp ret popf adc mov inc dec inc (bad) mov movsb cmc into fsubrs dec ja or lock cltd mov dec (bad) lret mov mov das mov repnz sar inc out jecxz pop movzbl push out or xlat icebp int ret sbb or ljmp lret outsl test rcl out lea ja ja mov xchg imul pop mov inc std sub mov xchg jl mov and scas and mov fldenv sub jne sbb clc mov mov inc xor jbe loop xor inc xor jmp push mov pop dec mov mov in sub add out jne cwtl dec (bad) or fimull or leave roll mov jle or add fwait scas add sarl sahf pop sub std (bad) push ret adc cli in and and hlt out xchg in movsl pop mov xlat icebp in imul dec add sub repz ret sti andl jmp add mov sarl outsl lods mov loope jno,pn xor xor scas cmp xor mov and pop xchg jecxz fnstsw xchg mov leave add cli mov mov cmp scas adc stos cltd push imul xor jp (bad) lret push push mov stos xchg rolb jno dec jl adc ljmp cmp xor xorl decl ljmp (bad) cmpsl (bad) jb clc mov es (bad) sub mov dec pop dec mov sbb ret or mov lcall pop or jne xor daa fstpl xchg je leave faddl push sub pop lret out jge outsl dec pop les popf and int sub (bad) ja call (bad) (bad) pop xlat mov fisub ret mov sub pop daa push das das (bad) jle popa out push jp stc sub and and rcrb add lds sub push mov popa xchg mov xchg mov pop sub dec sbb mov pop lret inc jl sbb mov jbe,pn pop repnz sub mov sub shl out xchg (bad) fsubrl lcall out ret xor pop dec stc repnz cltd cmp bound lock xchg rorl or repnz xor in addr16 add dec enter dec call popa xor mov int3 dec (bad) iret jg call dec jge inc imul insl pop into xor inc into daa mov inc inc adc jmp push fcomps test call xchg stos dec jno fstps add and or mov and sti repnz xchg xor jecxz les sahf hlt add dec jle (bad) mov loop daa (bad) repz repz pop call jmp jae scas test nop mov sub push push sub push imul dec aaa cld inc xchg jmp mov (bad) pop popa push pop push shll inc and xor dec xchg push jae mov cmc lcall sub add jmp iret lahf pop cmp or cld inc cmpsl push repz shrl popf xchg sti and or fs cwtl pop sub loope ljmp xorl jg sub xchg lea ss or mov cs and idivl jecxz aam push rolb std jbe dec adc decb loop xlat jmp das jbe jecxz mov jo and sub lcall mov pop cmp sub sub xchg aam pop imulb cld vmovhps cmpsl mov fwait mov lea cmc es lods and fs lds cmpsb pop dec mov stc test (bad) or xor xchg (bad) xor loope bound sub sub mov sub dec outsb lahf push cmpsl push sbb jno adc insl adc xor es ds jg jbe into xor out lret push pop les (bad) mov or clc lock and sub jmp mov out fdivrl movsl je scas lds ret add xor dec sbb mov pop pop stc cmpsl inc repz mov mov andb icebp mov inc sarb inc and and out lock xchg jg jne mov and push mov fimull pop add lods cmp xchg add push loopne mov dec repz cmp xor fisubr push jle leave cmc push pop dec push cmc or into mov push (bad) mov daa dec insb fidiv loope test jg mov xor mov and jmp scas mov push sbb and mov push mov shlb xlat subb in pop sub fwait and mov dec movsl clc les sub or popf pop jae shlb cmp lret loope js cmp dec shrd enter mov lods sub mov pop mov clc xlat mov mov (bad) jg or mov daa add fs bnd mov test cmp pmaxsw inc loop in icebp mov xor mov pop scas push push fwait nop bound jmp fldcw add sarb push and fldcw cltd cmp call dec sub adc mov sarb dec out lret mov lcall (bad) rcrb (bad) or loopne pop xlat repz dec shll aad mov pop jmp pushf loope aas sub lahf cwtl in xor pop mov cmpsl pop push mov cwtl jae pop repnz cmp loope sub nop loop sub cmp fldt inc leave (bad) mov (bad) loope fmull cmpsl aad (bad) dec out dec mov cwtl insl mov pop fistp mov cs repnz repz daa cmp xor mov dec mov int3 nop loope pop and add mov aad sub ds lret lds aam push mov mov fs enter cmp (bad) jmp divl pop stc add or mov push data16 (bad) pop dec sti dec jmp insl dec dec add xor sub stos and (bad) dec and and imul jae add jg daa imull ficoml jecxz fstl lret mov cmp stc mov lret adc jmp or add inc mov dec mov scas rcll mov ss mov rorl dec out inc xor jmp imul mov subb and mov add scas gs mov adc push scas mov push xchg sti mov xlat fwait inc movsl push jge adc xchg lods dec leave icebp hlt jle sub fwait xchg repnz adc (bad) int3 push and int cmp aam lret cltd sti popf loop fistp push shrl mov xchg cli cmpsb out and nop pop and xchg lret push repz mov add or cmp out dec jecxz lods mov pop jg lock xchg pop cmp mov pop push ss and pop xor xchg lahf or inc push (bad) xchg das push rclb push cmp mov pushl dec cmp xor (bad) xor sub mov mov movsl clc ss cli and push push imul cmpsb in mov adc out cmpsl movsl dec cmp inc jmp out push repz mov imul enter pop out cmp (bad) or add das lret pop and add ss pop les scas adc int jge dec pushf movb fcoms lret jp js fisubl aad pop pop mov dec stc push fiaddl insl cmp jp or lcall push sbb int xor negb dec and or shlb dec stc jo pop les into scas jmp mov sub (bad) pop add add push ljmp insb xor add mov xchg ja inc es inc jmp jg mov popf ror imul push mov mov sub negl ret push (bad) and lods pusha pop test hlt lahf (bad) jnp (bad) mov cmpsl decb fstpl cmc test push test cmpsl cltd dec adc and (bad) negl jnp nop and xchg pop rorb and out dec push pop in push and mov test cmpsb mov dec jb cli jmp push repnz int3 mov icebp cmp mov push test inc in push pop add (bad) out test (bad) jb cli cmc pop push and popf in adc pop jge push dec sub addr16 mov bound ret rcrl mov lea data16 (bad) js not enter dec lret enter push lock xchg pop xor jmp cmpl jg xchg ret ja (bad) stc ds jne decb repnz popl dec jmp jnp call scas inc fsubs xlat pop insb movsl negb inc leave imulb shll sarb dec (bad) test mov jmp add (bad) pop pop leave mov sub dec mov push mov jmp clc test sbb pop lcall mov push cmp imul movsl call cmp dec loop xchg push cmp xchg cmp notl mov sub je das (bad) dec pop js lahf adc dec icebp gs push mov out dec repnz cwtl or lret pushf insb call cld sbb adc push rcrl out xor pop fsubrs sbb cmpsb (bad) lahf or mov xchg mov xchg sti leave mov xrelease ds xchg add jae lock add pop (bad) jmp ljmp pop mov pop lds lahf icebp daa mov fwait lahf ljmp sub rorl xchg push jo push mov out mov icebp pop push dec das ret pop in dec mov das (bad) jo and movb (bad) push sbb aad jl sub test and loop fisub push xor lret push fcoml adc xor (bad) push rolb sbb loopne push add xor xchg nop orl pop cli and mov imul add shl nop pop aas mov adc (bad) pop push das and sti mov ficom inc (bad) std sub sarb push mov cld ficomp xor inc push jg lea (bad) pop xor mov dec mov inc mov in pushf jecxz imul inc test shlb lret push mov in xlat pop nop push or adc add push imulb and test sub loope mov cwtl sbb mov add test inc sub pop nop inc shrb cmpsb push mov cmp stc pop lock movsb dec aaa mov int decl daa ud1 (bad) mov sbb jle and stos dec ds inc jbe ljmp add (bad) and test push push in add inc or ret (bad) call or pop mov xchg jno mov sti sbb push jne imul std inc or adc or xchg mov addr16 je push mov pushf stos fs mov sub imul mov outsl call dec rclb and push cli push xor icebp xchg cmp es xor fs clc xchg leave push (bad) and xchg (bad) daa push ljmp call mov pop inc cmp cld mov jg cltd push das and inc sub push icebp and sub mov iret add call sub mov or add stc je jmp sbb or cmc dec pop inc pop cmp jl push movsl mov stos pi2fd mov xor sbb adc xchg sub clc add scas cmp int pop xorl jbe push mov cli or pop je enter xor sub jg (bad) fdivr mov insl sub out je mov das ret loop fsubl lret jae das or cmp into cs (bad) js add jnp scas push mov enter (bad) mov addl mov mov (bad) imul push ret decl adc mov jmp dec or jne lsl mov cld jb jmp and mov inc mov dec lahf xchg jb sbb cli jns lahf cmp ficom loop lret lret ja std ljmp mov sub aas imul (bad) leave sub pop (bad) mov cwtl xlat xchg lcall ljmp sub adc add sub adc jb sub aad enter mov mov or das popa hlt iret pop sub jbe cmp inc or jmp inc push mov and (bad) out loop lcall add push sbb outsb call push fmuls or mov cltd dec imull (bad) divb adc add xlat mov les sbb or sub adc inc sub jle push jp sub cmp dec mov pop pop fs std mov (bad) icebp ficom or (bad) movsl in mov out push pop pusha xchg or inc jle out dec xor repnz enter (bad) (bad) and and xor add jg or push sub or ljmp aad pop push popa gs mov xchg mov fisubrl (bad) lock xor inc cmp outsl ret xor fbstp jmp leave cmp push icebp clc add mov out or mov test and daa mov jno outsl xchg clc hlt movsb stos or fistp adc mov iret push push aad push aam ret mov jne test cld aam leave repz sbb mov sahf dec leave xlat fcomps out mov leave inc lret xchg xchg xlat and adc push (bad) jno lret into js mov cmpsl and sub scas sub lret bnd vmovsldup mov or neg ret jg pop mov (bad) mov jle or fidiv idivl jl and imul push js jne stos add movsl mov ret inc and faddl or and fist cmpsl mov push and mov jne lods sub cmpsb jmp mov lahf dec jns push adc lahf xor ret and lahf lcall cmp jae and jle pop loope mov bound ret adc xchg mov mov cmpsl dec pop negb jmp out test adc in or xchg jno das stos sbb fs mov out mov sbb lock xchg aad lea cs sub push push rolb xchg out fild lods push ret hlt xchg fs int3 jge mov mov xlat dec mov decl out gs xor ret dec (bad) sub int3 and je (bad) pop mov xor aad bound xchg xor (bad) out lds int std mov jne pushf in adc inc sbb sub and cmp ds and push stc cmpsb mov out dec jecxz sub jle mov jne jecxz jmp pusha adc sti lcall aas gs scas aad lods push and or add ljmp inc add dec shlb stos mov inc lea cmp pop gs test ss cmp or cmp sbb imul test lret add cmp push and divl sar mov push jbe (bad) cs (bad) and push call pop test jmp popf mov mov adc jb dec lret pop mov mov jno inc iret ljmp pop je jae and out int leave iret pusha push or dec fdivrp (bad) iret test fidiv xchg ret push mov pop jle dec bound add rcll stc lret ffreep leave in aad test sub fbstp pop clc mov rolb sti mov adcl ja inc mov lret sahf inc inc ja pop mov sub aad pop daa push xor push jno xchg icebp mov test xchg dec and pop inc arpl (bad) iret push adc ds fmull pop mov mov mov and cmp xchg jnp leave fistpll gs aad or inc js lods sub dec sbb or ja leave aaa dec pop cmc lds (bad) xor sub jge outsb push or ret ss cmp mov aam in out push cmp push mov pop pop es sub and sub adc dec xchg xor inc add dec inc inc lods lods test ds mov mulb xor lock cs cmp sahf cmpsb popf sti adc xor push fsts mov cmp rorb push mov xor push pop cmp ljmp mov inc sar cmpsl faddl cmp repnz pop das and xlat mov sahf cmp fwait pop jle repz jno dec push xchg (bad) subb and lcall lods inc and cmp gs dec repz and sbb lock test mov out pushl xor out mov js lock pop and ja mov sbb lock test (bad) mov clc fstpl cbtw mov or nop adc mov out inc cs mov loop data16 stos test jmp rclb mov iret mov mov pop inc pop loop adc das or (bad) or mov mov pop popa cmp lods adc out or flds data16 repnz jnp fistpll in mulb mov pop jl push jo mov or js test dec mov xlat loop cmc int3 ret cmc jg pop ds sbb pop decb jmp sti icebp mov mov lcall outsl mov cs pop add pop into fs and out fdivl daa enter in nop push mov add sub (bad) jo or imul sub jbe add pop (bad) call nop cmc ss enter add jp mov pop and (bad) pushf call sub outsl sub and mov int3 push das daa dec clc test mov arpl lods ret jecxz adc mov xlat in xchg lds cmp lret mov add data16 jl decl xchg into and adc pop lahf (bad) (bad) push push shll and data16 sub imulb idiv das adc in mov dec out dec repz sub push in das add push cwtl inc and mov cmp ret vcvtsi2ssl mov sub add mov pushl icebp sub sub das (bad) jg cltd mov cmc jg call dec repz xchg adc lea cmp dec test mov push stc in mov insl adc push (bad) loopne push popf fsubs test lods dec cmp xchg scas jae or lret cmp jno or loope outsb into mov idiv aas imul outsb mov dec dec mov and mov call push scas cmp (bad) mov std dec pop popf cld xor cmp cmp jne imull movsl jmp icebp aas push sub push cs pop xchg pop in lret mov pop push pop hlt negb pop cmpsb fisttpl mov jmp aas push pop cmp int3 icebp rclb roll jge mov mov cmp xor fdivs xchg sbb repnz ret xchg lock adc stos mov into cltd sbb and (bad) data16 pop or loope jno insl or nop xlat xor pushf xchg hlt out jp fimull sub das adc loope sub adc xchg xchg lret je jns dec dec daa or dec sarb mov add and clc out pop jbe pop idivl xchg les stc test cs aad dec cli mov sub jns js or sti int3 push pop test stc lods rorb repz movsb dec sub push sub xchg (bad) je jbe xor push mov cltd sub or leave aad mov cwtl sub cmpb or mov add pop push loop mov xchg cmp stc out jge rclb adc fmuls add push mov lahf das pop cwtl adc pop cmp cmc adc jmp and cltd pop aaa outsb mov adc cmp pop mov dec test les mov (bad) jo xchg cmp fwait loope pop test add dec add mov mov sub adc loope sub ds jae sub orl mov sbb mov and or dec xor lock mov pop or arpl js mov bound clc jns mov fwait inc ja push jno add xchg sub idivb mov mov (bad) xchg (bad) xor jecxz cld push test ret sub cmc pop call add push mov cs daa add pop and and xor aam enter cli cmp cmp pusha push ljmp xor or push cli mov sub sarl and scas xchg xchg daa cli (bad) jmp repz add jnp xchg scas bound cmp ret sub sub mov adc stc mov cli jbe imul addb and add rcll sub xor or outsl cld mov leave aam and and daa clc jne cmp ret mov add ljmp pop int movsl mov jmp jb jne shll cli push das xor (bad) les jl leave jne mov sti (bad) rclb ret shr jle adc mov cmp scas addr16 ljmp push push adc sbb rorb mov jge xlat cmp xor dec dec lret fcmovnbe push bound repz leave push data16 xor int3 dec pop jecxz mov dec fcomi cmp cmpsl lret out adc mov or loope imul lret pop mov pop lahf dec lret adc xor jno (bad) pop sub mov je out fst les gs sub or ret mov jg pop push jbe (bad) out mov inc ds cli xor stos or cmpsb xchg outsl xor ljmp je xchg lahf loop push movsl sub adc popf rcll (bad) (bad) (bad) mov in (bad) pop lret add sti jg xor roll cwtl notl add ljmp jbe push lock dec and xor mov shl cmpsb push pop aaa (bad) aad in or mov pop push cwtl cmpsb jmp dec sub in cld daa iret pushf (bad) and xor jl xor (bad) and mov std loopne sub mov inc (bad) mov pop mov mov add push icebp daa sub pop insb lret mov imul lods imul dec mov out ret push jno bound (bad) jne movsl leave mov cwtl push lar add sbb repnz (bad) mov fadd das sub xchg out xchg mov pop dec fildll sub or cmpsl les mov sub dec inc popa test jp mov loope jne out mov in cmp adc mull scas xor clc scas mov in daa mov rorb pop sbb mov sub pop stos jne or push scas jae cltd test je dec sbb jb sbb xlat push or out jmp test cmpsl std nop pop sub xchg aam add dec add pop xchg pushf pop or mov negl pop pop outsl loop inc or es mov orb mov add shrw (bad) es jo xchg lds out sub sti mov xlat mov jno mov cli notb (bad) and xor repz (bad) cmp sub pop adc adc add xchg (bad) fidiv scas testb sub std and pushl decb adc push mov adc mov ret or cltd loopne repz daa mov jg ds out add pop pop push ret or xor or mov aad frstor pop (bad) repz inc pop daa (bad) loopne test or sub mov mov mov xchg and ficom pop lds push mov and mov cli mov xchg xchg stos dec out les push out lret icebp pop mov mov in sub hlt leave insb enter pop and out cli ret push pop cmpsb movsb and xchg enter jb mov mov push and call lds add jne lock xchg out das fist das jnp and add xor inc mov pop sub lock mov push pop jo mov fldenv jecxz add das enter mov pop lahf loope pushf add stc xor mov jns inc ret imul or inc iret sub jo movsl hlt (bad) jmp jp test and scas std out imul cmpsb push out ss push std movsl xlat add push mov lods add les in mov cmp push push or push push push mov insl fwait mov push out dec out mov pop and lods xchg lds cli or dec jae aam mov ret jne adc inc xchg cwtl scas add scas mov jnp add sarl fldcw cmp pop ja mov xchg mov inc mov orb shrb sbb out jl mov xchg fsubrl (bad) xor push cmp mov sub add dec xchg fwait stos adc mov push add push xchg pop push and dec xchg sahf jo repz cld daa fildll test sub jne pop lock adc push fwait xchg daa ret inc inc or sbb mov jns fbld adc pop add pop mov dec enter (bad) add or add sub (bad) rorl mov mov pop out gs fs dec pushl mov ret shr repnz jmp jbe adc in sub xor adcl mov inc xlat sbb rol out adc cmc cmp (bad) jecxz pop sbb sbb nop push sub dec and daa daa push ret decb sub rorl leave into ja add dec add repnz movsl xchg lods ja loope and xchg popf xchg jae loopne imul mov push push mov movsl inc xchg stos les pop fldt movsl ret dec dec clc mov int3 (bad) pushl fistpll pop icebp out sub dec shrl loope enter (bad) xchg jne test pushf xchg jg adc pop (bad) rcll xor xchg in ds fldenv fildl adc scas sub in cmovle jbe das scas cmpsl inc das lret push dec pusha cld add add mov js pop adcl out pop add jb adc out push or add sbb (bad) es lcall lea jb dec and push mov mov enter or scas cwtl mov movsb arpl fdivrs rolb bound inc mov push push rcll imulb fist fs adc fs mov mov adc out push adc mov pop aam cli loop mov jmp ds xor sub and mov jle out dec sbb fptan adc sub pusha in jmp mov push notl xor or mov sar movsl fsubrs cmc arpl pushf sbb lret cmpsb iret test shll xchg daa pop gs lret sub cmpsl daa into jbe (bad) out scas sub and mov and scas notb push sarl adc mov xchg mov lret imull xor mov adc imulb jecxz cmpsl out inc mov mov mov or scas xor mov fnstenv testl xor mov hlt fwait iret pop or enter push and (bad) out inc push xor push pop xchg inc idivl sub and mov mov mov cmp scas (bad) mov daa jno cmp xor push jo push stos fdivs into cs sar push mov fdivp adc (bad) dec jne inc xchg sbb out xor mov jae nop sub sahf xchg (bad) mov cmc inc mov mov sub sub mov sub clc add rcr shlb pop pop (bad) fdivrl xor jmp leave sbb insb push inc mov jecxz mov pushf and adc sarb pop adc out dec nop negl iret std in faddl sbb pop mov outsl scas pop mov cld mov mov (bad) addr16 rclb xchg ja dec mov repnz (bad) lret dec push stos insb rolb loope xor fisubr loope sub lea int cmc fnstsw (bad) (bad) xor sub push push std (bad) and emms inc push pop inc xlat xor test mov sub imul pop out add jmp lock jo (bad) mov pop (bad) jae adc xor enter cltd mov test jno sub cmp dec xor mov imul das sub outsb fdivs mov shlb jb sub xchg clc popa and xor outsb mov dec xchg ret push and sbb sub jbe pop outsl inc pop mov push dec sub in xor stos xor cmp sub xor test mov mov push sbb mov dec sub cmpsb pop sub inc sbb icebp cmp xchg stos test lock sub imul shl or aas jecxz adc (bad) mov adc fidivl and dec mov jmp adc addr16 test nop lret out nop lret ja imul (bad) out popf push movsl cmp adc idivl cmp xor lods xor (bad) shrl mov mov mov rol push mov xor clc cmpsl test xchg and mov jb shlb and mov out mov aam pop pop xchg test mov mov ja push inc std push loop lock mov cld in mov jnp data16 push mov ljmp xor dec mov push test icebp mov and das mov pop out lds (bad) and sub sbb clc sub mov in xchg xor xor cld jne push push and stos aaa push mov dec stos jae mov pop divb adc xor cmp call lods lcall inc gs movsl add test aam imul (bad) push inc xor xchg ret add xor sbb stc cmp add fdivrs std xchg sar scas sub call mov xor adc mov mov sub xchg push dec ret jne xor push (bad) fimul scas mov push jg xlat add or mov popf call sub mov mov fcmovnbe push cmpsb jne mov in stos in push adc cmp flds sub sub test xor gs adc mov imul popf pop cmp jecxz repnz cmc xor mov xorl mov sub and add in popf mov mov (bad) mov inc dec xchg jl into cli bound out leave sub dec add imulb lds sbb push test mov lds (bad) cld cwtl daa out inc out xor out dec lret cmpsb rcll inc mov cli std out cs pop and jb dec test (bad) pop cmp (bad) inc xor aam jne sbb sub test sub fisttpll jg push idivb and mov xchg decb outsl dec mov and test jmp out xlat xchg aam dec idivb sub scas fadds push jnp (bad) push jmp das (bad) xor adcb out mov mov aad fstpt sub loop repnz test mov in cmpsb daa jmp ss add add inc in das or cmp sti (bad) adc mov ljmp add das fimull roll dec pop in leave mov mov sbb sub cmpsl bound mov pop dec stc pop xchg in inc ret add movsl (bad) daa ror pop ret movsl lcall cmp fwait int xchg push or data16 ret lss (bad) out mov sub movsl pop fldcw ljmp gs mov or popa mov mov push stc sbb daa jbe xchg out in jmp mov lcall jmp mov stc into imul (bad) iret lds loope push les fwait and out lds inc daa add or pushf xor js dec mov stos push loop push leave mov mov push jns outsl mov mov xchg fs sti push xchg cmp pop dec xor rorl or push icebp mov loop mov push clc lea in mov adc and mov movsb and ds lods and popw mov xchg and push in sub les or xor or xchg fdivrs xchg orl repnz ja lods jne jo call xchg xor aam mov jp bound rorl sbb push xchg rorb mov jg int sbb stos lret mov fstl loop into fs jmp sbb jp mov sub xor (bad) js into and mov and adc rcrb inc daa sub fist movl imul repz pop mull mov xlat frstor xchg cli daa sbb and gs and clc stos mov sub lret loope push cli (bad) pop push addr16 push push ret out cmp push xchg xchg add mov fistpll mov jno cmp outsb test push add loop xchg dec dec add push lahf into ret sti sub (bad) (bad) (bad) pop mov popf fist mov add and jle push enter lock cltd daa xor gs xchg test and out fdiv push mull dec popa dec mov idivb enter fidiv xchg lcall jae adc stos aam and popf daa push xor outsb sbb (bad) lods notb neg sub mov jge out sub stos sub mov fadds popf xchg vpslld (bad) cld scas and adc inc aaa mov push push inc dec cmc negl das sub mov imulb sub repz xchg mov push mov test rclb clc cwtl and sub bound push lock sti dec or inc sub xchg ret xchg and es adc mov mov xlat mov cli shrb std cwtl cmp ret xchg popa das ret mov sub jmp rclw jno popa jmp in mov xchg adc fcompl dec pop hlt mov aas mov pop push mull push mov mov repnz movsb cmp mov ja add repz incl cwtl mov sbb out add sub cmp clc add jo (bad) cmp std add jnp jne neg cwtl ss jae imul mov sub idivl sub push inc mov fwait push sub stc in inc or add push pop push mov cs rolb popa std cmp outsb shrl hlt out sbb stc ret add repnz xchg cmc nop hlt sub mov sub xor xchg or and leave pop loope add sub int or or and add jbe rol push es adc jae and stc jo fimul jo push mov jle sbb rolb or out daa arpl inc xor orl test and je pop sub pop mov fsubrs jmp test (bad) jnp lret xchg pop ds in lcall pop and pop jp xchg push icebp and sbb jns push sbb add in inc out notl xchg gs push or lcall or pushl xchg push or int3 cmc rolb xor std test sub fstps and cmp subb insb imul (bad) sub dec push aas fnstcw pop xor and fist sub pop or pop cwtl cmp mov pop push mov jg add add scas movb adc stos mov stc outsl int3 imul adc mov divb rcrl mov mov or sbb stc pop loope loop sbb add xor fdivrl lods dec popf push cltd push pop adc mov sbb (bad) or sbb mov negl scas sub jle jns push ret pop pushf sub mov pop push jmp std ljmp sub and clc fidivr fiadd and push (bad) adc or sub pop (bad) push xor loop iret lar addr16 jbe lea pop pop inc xlat xor loop add jmp or lods mov aam push mov popf (bad) sub pop lcall xchg cmp into sub shll in push idivb rolb scas and jl or xchg mov test aas cld inc pop mov jp sub test inc into je mov ret bound xchg cmp insb jae adc cmp stc pop sub cld xor sbb mov jo lahf xor fsincos push cmpsb xlat pop out push repz jmp inc test inc mov sbb ljmp sub rcrb pslld leave out icebp fisubl shl mov out jl sub sub sub push decb lret pop in (bad) lahf pop pushf dec or fimul or sub out outsl xor xor mov jbe push std shll mov sbb fdivrl stos mov mov fdivrs adc incl lahf dec sti and ja xchg inc or mov stc or test lret push sbb adc sbb sub mov test sub pop adc shrl and aas test or push ja pop and xchg jge ds cmp inc xor aad or notl sub mov fmuls fs ljmp cmp mov sub inc adc mov test add and sbb mov stos push (bad) lds les mov (bad) repz jnp das adc and cld loopne jle sub inc and mov jne cmp stc stc mov mov ljmp pop sub jb ljmp adc push aam imul xlat push inc mov mov ljmp mov xlat push rcrl mov xor repz lret mov lds loope (bad) mov sub xor call sub dec xor or lret and loopne lock mov rcll ret sub data16 add cs das lods cld (bad) out lret js xchg sarb or mov jbe mov cmp loope xchg pop (bad) repz inc (bad) mov or out pop mov push adcl ffreep jb outsb stc cmpsl or (bad) mov test mov add jb rorb arpl xor iret cmp mov xchg mov push (bad) cmp xchg (bad) gs sti xor mov inc cmp adc test lret jmp sbb loopne pop push mov out and test shrb rcll xchg mov cmp push adc out aad dec rcrl inc jns push mov cli call xor xor mov nop pop sub xchg nop push add popf je cmp mov pop jp xchg inc pop add pop adc icebp sub loope rorb lret adc adc cmp (bad) pop mov movsb scas ret negl sbb int3 add nop cmp hlt xchg fsts lahf in add xor repz enter nop and cmpsb jg xor adcb out add pop das push pop mov out nop inc pushl popf out pop pushf cwtl xor popf jbe (bad) repnz out imul mov out movsl les nop mov mov ret dec outsl out dec movsl cmp out jmp popa mov inc pop sbb fsubs add test xchg movsb scas sub xchg lds jns cmp jno pop popa jae ficompl inc or (bad) mov inc xor icebp sub mov and mov adc mov hlt mov push pop pop inc ret (bad) xor gs daa sbb jmp test loope sub cmc mov ljmp fsts sbb sub mov mov stc add xchg mov jecxz test and sub jnp mov xor (bad) pushf jnp std push sub jno in and jae outsb add mov out sub pop fstl pop mov xchg fdivrp and sub pop fdivl icebp iret sub fcmovne es and mov stc cld leave dec xor popf mov jne lods repnz (bad) mov dec dec dec mov idivb add cmp lcall cld sarb pop enter inc xchg and jg stos or xchg and fisubrl icebp mov mov pop jmp or in psrlq lods jmp call out sub sub push mov push (bad) iret leave inc fwait mov mov cmp imull (bad) popa xchg xlat xchg jb divb into ss (bad) push es and out mov mov iret popf ja mov push ss push push jge dec sub pushf dec (bad) mov jo push jo pop add add sub sbb sub mov and add mov cs int3 inc or sbb lods shl mov and push and xlat inc add fwait addr16 dec mov in or sub jne sbb imul adc gs mov sub mov mov xorb notl and repz fldl push dec in jmp push or xchg push pop sub mov ret pop call bound mov in jge push fs sub fcmovnbe cli (bad) add mov out xchg scas ret mov xor frstor push repnz jg or out mov pop in dec mov scas ret popf jg imul mov push in es cmp cmpsb pop mov jle dec jbe dec push popf fist or pop into setno test xor mov les and test dec or inc or xor xor jl push shrb lea jno sub aaa cmc movsl dec add sbb mov inc sbb sti mov fbld or (bad) sub mov cmpsb mov push and scas clc lahf shl scas loop xchg test ds cmc shrb ret movsb pop out dec xor add mov and mov jmp fdivr pop das ss push or xchg push subb pop call mov fcom (bad) mov inc sub jns dec sub out cld pusha pop add xor nop mov fisubr and add icebp scas gs scas mov or xchg push xchg inc mov or adc xchg adc add cld call mov leave (bad) jecxz inc pop jmp lret xchg dec sub cmpsl pop xor fs cmc lahf ds sub sub add jmp mov int3 add enter xor lret andl aam negb mov mov stos mov stc (bad) pushf pusha daa mov mov mov lret sub fistp adc test add jne inc (bad) dec (bad) test es aam push pop cmp ds xchg cmp loop cmpb mov imul (bad) iret cmp xor (bad) mov push ljmp sahf into iret push mov lcall dec jbe in (bad) adc in ret jo gs nop mov ret mov xlat cmp dec xor cmpsb cmc cwtl push sub and andb lret mov jl and and dec or das xor mov dec sub rorl imul lock icebp mov mov mov loope repnz loop or negl add or add jne adc push push imul jae add in push xor xor sbb xor sub sahf push fwait loop rorl into lret xchg dec mov dec fisubl fildl ret and jae sub sub xchg daa push mov xor stc movsl adc jmp sub inc adc push outsl jecxz xchg int3 pop cs in mov (bad) mov leave out pop mov jb movsl jecxz pop and fsubl les jno pop mov insb sti lahf fstpt adc das adc icebp out mov cmp lret ret mov pushf add sti arpl out sub aas xor mov add mov inc pop insl xchg cmp dec push aas inc adc imul pushl out adc cmp int das aam mov jg scas mov daa sub inc (bad) or pop pop mov aas aas adc lods push mov adc in jns in jb (bad) add (bad) dec add dec xor (bad) and add add ljmp mov ss or iret pop das xor fnop push adc mov pop out add std int3 inc or mov adc mov push push xchg add out cld push pop into cmp bound je push xor xchg jmp movsb scas jecxz pop or push mov jle call jb sahf mov je jmp mov pop mov pop (bad) int sub or ss lods orb lret fbld dec imulb mov pop les out mov (bad) stc pop bound rcrl imul mov popa or (bad) sbb push xor jne mov mov sti inc xor sbb out aad (bad) imul pop mov scas sub pop lea das popf enter cmp lcall mov stos mov xchg cwtl inc out jl jmp inc xchg (bad) mov jb (bad) (bad) push or mov and leave (bad) xor ss mov pop mov rolb sarb mov (bad) jnp lock es or xchg cwtl gs mov dec adc imul divb jo mov pop and push sub jne mov fdivl push jle out add idivb jmp and popf in repz aas cmp xchg inc inc lahf or insb xchg mov or push mull dec or pop sub call pop pop adc (bad) push mov iret xchg lahf jmp fxam or sbb or gs stos mov lahf es push xor lods xor mov fstp out pusha or push dec and cmp mov jg into (bad) mov dec push dec or pop ja repnz pop scas sub (bad) cmc xchg je pusha mov out jge inc lahf call and mov (bad) dec push (bad) lods int3 dec mov loop push xor and repz out pop lods mov lret jmp sub std xor or divl jnp or (bad) int3 sub jo negb lret lret test inc jp (bad) push sbb mov cmp les pusha and and cmp mov mov xor sbb js movsl cli mov mov outsb jecxz enter iret mov (bad) jb (bad) (bad) insb sbb out and fnstcw aas int3 mov mov jo pop xor repnz scas imul dec shrb bnd wbinvd iret add mov pusha push sub dec or das mov cli lret mov imul lret sbb insb inc pop jmp icebp adc jecxz popa movsl jne incb pop sub flds push mov dec xor dec rclb push sub test mov std pusha dec lods ret repz sub icebp and push lock scas xchg (bad) mov xor pushf imul xchg xchg sub cs ret fs mov xchg push adc xchg stos jg sbb sbb (bad) cwtl jne rcll and iret or ss repz or lds add fdivr push lret xchg pop adc test add (bad) jbe pop (bad) aaa cmp cmp cmp sub fmulp sub data16 sub jns test lock mov daa loope xchg push mov mov sahf mov pop cmp mov dec aad (bad) es xor cmp out leave fisubr push mov insb or cmp or iret das mov xor leave jg add ss cmp call cmp inc cs jbe jmp adc and dec or pop arpl jne dec daa jecxz dec fisubl xor aad adc mov cmp jmp add out xadd push test into sub scas mov das mov clc sbb lret cmpb sub test cltd dec sub out mov sti lock popf fist das xor dec push scas incb push (bad) mov sub inc sti xor sbb ret mov adc cmp mov or out push pushf ljmp push pop push movsl cmc dec sbb mov (bad) mov jmp xchg fist popf negl ret or mov (bad) (bad) pop (bad) fsubrs pop cs shlb mov clc mov dec (bad) xchg leave jne and (bad) fs test icebp add test jl (bad) movsl xchg push push mov call mov ljmp sub or xchg xlat repz data16 (bad) call imul dec inc xchg add sbb dec ret lds into out aam xor scas lcall bound pop cmc dec cmc push pop or icebp pop sarl and adc pop mov movsl pop jbe js or adc xlat jmp fcoml lret add loopne cltd push scas adc and push test (bad) xor or and push stos leave lcall pop out push adc push mov push cmpsb scas icebp xor adc add stc mov mov pop outsl push sub icebp pop dec mov jbe mov cmp add adc jge fdivl cmp xor iret push and imul ljmp dec jecxz push mov xchg inc div std lahf or fisub idivb movsl je (bad) xor mov pop test sub ja (bad) or test pop js mov lods test xchg (bad) adc (bad) fcompl xchg cmp add je push sarb movsb or xchg fsubs cmpsl mov push add popf out repz sub sub push mov xchg scas cmpsl xchg daa (bad) pop push in sti mov cmp enter repz cs dec mov cmpsl out inc lock out ret js movsl bound pushf repz mov out xor xlat loop pop test mov xchg int3 scas popf and fdivrs movsl adc inc pop mov dec jb fidiv cmp daa xor fs sub jp pop movsb cli adc pushf (bad) mov jmp in pop and cmp mov test je ret repz out cltd jl gs adc mov sbb (bad) push idivb add cltd or mov call mov jecxz and scas rorl clc cmp scas lds fistpl mov inc (bad) enter imul or leave lock pop xchg pop dec or push pop leave clc xor push mov and pop sahf jp in cwtl jb dec (bad) icebp dec cmp mov mov (bad) xor repnz xchg lds daa lods sbb jno pushf xor pop mulb pop (bad) jg pop repz movsl pop pop pop out lds xor or jmp or in push xor mov jp lcall push int imul cs ret mov fsubr mov and inc cltd sbb (bad) xor das sub dec push sbb imul bound lret daa or hlt inc lods jbe in push ss cwtl jbe mov loop xchg mov aas test add jae dec stos cmp dec xor inc cmpb aad inc jno gs dec insb out out mov testl push mov pop ljmp ljmp lidtl imul sub test test mov add mov ret cmpsl ja insl push sbb inc out add push in add jle out sbb (bad) cld decb mov cmp cmp ss mov ja xchg lcall sub jl cmp xor mov sti pop push rolb cltd mov add xor sub loope or mov and test addr16 xchg fdivrs sub lahf sbb mov mov in (bad) hlt or sub (bad) xchg int cmp dec and test scas leave and outsb loop xchg pop jbe mov das pop sub (bad) pop (bad) add push je (bad) adc stos sub (bad) out lods push xchg stos or enter add mov xor into xchg push or cmc bnd xchg sti mov xor push (bad) or pop subl popf jns xchg (bad) decb bound fdivp fildl mov (bad) xlat add lods sub cmp (bad) mov push dec push fisubrl cmp or imul pop test popa sub pop into aam jmp nop les shrb mov hlt test mov mov xchg sbb mov jno inc (bad) push jp xor scas mov push adc icebp or mov in and inc jp into dec popf inc loop sbb sub xor mov popf push out inc subb xor mov ljmp jae fsubs loopne xor or fcmovnu stos repnz cmpsb inc mov dec xor pop (bad) cli push mov ficom out cli mov ret sub daa adc mov pop xor out cmp rcl and je bnd repz sarl out and (bad) icebp xchg or dec jp mov jbe test mov dec (bad) lret and and sti sub jnp mov mov in in or jecxz das sbb mov (bad) enter sbb stos sub cmp dec mov xchg jp insl scas mov and mov mov out fs jne out push add (bad) lock popf pop pop dec je add inc inc shrb std cmpsb movsl jecxz pop mov fs mov push push std out and cmp das ljmp lds negb jg and out leave mov daa mulb dec adc rorb mov and fnsave push nop repz pop cmp jecxz or (bad) in mov lcall in sub mov test fdivl adc scas mov popf jle,pt add xchg and and sub adc jbe repnz mov adc popa fndisi(8087 and imul cmp and push add inc cmp add stos les mov dec test xchg jo cltd popf (bad) ficompl inc fucomp hlt sbb mov inc push ficom lret add outsb cmp hlt mov and mov in lret mov int3 pushf daa ret jle loop inc test add inc test daa cmp pop cmpsl popa inc lret call scas push add movsb mov fs and bound leave mov sbb ljmp daa mov gs push pop xchg sarl notb addr16 lods jae sbb cmp jno ret pop bound repz jns mov mov pop lds (bad) dec daa lods adc sti mov xchg or (bad) mov mov pop lods subb (bad) mov aam inc adc add inc out mov and add test shrl cmpsl xchg xchg add imulb imul pop and lcall rcrl ljmp std sub fwait mov aad (bad) push push sub mov mov pop xchg stos (bad) ljmp mov popf lds rol neg xor push xor popf sarl (bad) notl enter cltd in test add sub and xor sbb dec out inc adc ret fnsave mov pop pop fisubrl (bad) sub mov daa sub test lret inc and loope or test mov push or mov lock mov mov mov daa xor xchg dec push mov imul mov repz rorb loop je pop add mov pusha and xor mov das popf (bad) xor inc lds (bad) sub xchg loope jecxz mov stos lds xchg fdivrl mov pop rcrl sub xchg jl int cmp sub out add or mov mov xor mov je pop cmp das or pop push cli xlat fsts fidivl cli dec notl clc mov (bad) leave fdivs jbe jae cmp sbb ret daa pop sub stc lret or jecxz xlat lea xor and add shr ret sub in jb sub dec cli add cld inc iret in es xor sub cmp loopne xlat dec add pusha and das sub xor mov adc dec hlt call and sub xor cli mov sbb ficoml xchg idiv sub rcl jmp popf xchg xchg mov push sub or (bad) enter adc xor out or gs das je into in mov inc inc xor push jle mov push ljmp xor fldenv lods adcl xchg fimul call sub adc inc mov out dec add push sub dec adcl pop and mov daa or xchg (bad) jb cmp int cs aad loop pop xor xor xor rcrl pop rolb shr mov add xor or mov roll pop and push add (bad) lods in and mov pushl and (bad) mov mov xchg test push test adc cmp rcrb xchg scas or sbb insl dec cmc push (bad) fwait popf adc and out adc sub inc sub out out xor or rcl xlat outsl dec or popf or movsb adc addl pop mov dec pop notb iret mov xchg push or sbb push sbb icebp (bad) cli std bound popf imul push adc (bad) dec lea popf push leave lcall ljmp shrl cmpsl sub push hlt sti pushf sub std mov xchg fcmovnbe movsw cmc imul push lar fstpl in jmp jg nop scas ficom mov jne jmp or (bad) mov daa sub ja jge xor out popf cmc push mov mov add pop mov data16 push (bad) pushf or cwtl push inc dec push push push push add insb lcall add cmc jne repz ret and jecxz add stc jo jg roll jle cs and ljmp mov mov loopne lock add jmp outsl not add cmp jl scas add (bad) lss inc pop data16 ret rorb sub ss pop push mov repnz mov daa movb cli add push mov das lcall or mov scas sub push test ror and jo xchg push inc arpl mov add js push cltd push mov xor cld repnz out cli inc mov ret mov jle nop xor fcmovnbe stos add pop jge inc fldl add leave jnp pop jle fadd or sub dec pop pop push adc lods pop and push mov dec fidivl mov sbb and pop mov scas jmp in dec (bad) sub mov mov aam aam pop sub loopne (bad) pop pop cmp jle std jmp outsb mov (bad) adc pop dec push dec sbb sarl mov (bad) (bad) mov push xchg imul js sbb xchg int3 mov or and in mov dec out cmp iret std dec mov ss pop and sti arpl jmp out mov push xor mov sub jo (bad) xchg icebp gs ret ret xchg push stos cmp neg pop mov adc out adc cli and into xchg sbb (bad) roll sub mov push mov pushf mov fnstcw test push test js lahf in fcompl shll jmp ss or daa push inc or std sub cmp inc push sub adc in adc xor xchg lahf mov and leave pop add dec or sti inc aam test (bad) mov sub repnz xchg pushl adc inc pop dec (bad) cli movsl jmp mov mov in dec ja xchg lret outsl repnz shll aas ljmp das adc fnstcw aas xchg mov adc push ret xor sbb fsubl ret push icebp or ret push sbb push lds add mov jno sub fstl pop jmp mov out outsb sub (bad) mov lea in dec sar fdiv push xchg decb pusha ret mov mov push sbb xchg jmp popf int3 outsb mov sub call icebp cmp xchg ret pop xor shrl clc mov lods push sti gs lods mov mov add add dec loop xchg adc xchg cmpsl xchg call xor mov xor imulb movsb mov imul loop clc add mov ss shrb mov mov jmp sub inc mov cmc mov fmulp shrb scas xor lods cmp cmp fbstp cmp into mov xchg pop xor jmp pop jae loop pop out push jg sub sub out add xlat aam jg inc movsb or sub push (bad) leave adc pop add in push pushf cmp xor push lret or ja mov cmovae rcll in ret pop shl add sub ss jp daa xor outsl inc pop lods idivb (bad) push lock test add push pop pop sub movsl out or sbb pop repz push mov xchg push mov inc xchg pop inc nop cmp ret jecxz and or adc (bad) lea or insb pusha and adc xor mov sub add notl nop pop sarl xor xchg mov clc loope add mov aad add outsb xchg add push mov clc cmc movl fninit (bad) mov bnd sbb xchg sbb lret pop push fsub push push mov repz xor insb xor or pop add nop (bad) push loop adc pop sub (bad) rcrl sbb arpl jns sub push mov inc pop fsts sti addr16 mov pop lds dec lret add sbb pop sub loop std xchg pop mov and gs fldcw or or xchg and push out insb decl out stc mov ljmp aad xor test test push movl mov cmp mov data16 repnz xchg jge sub add mov (bad) mov into jno mov lret dec lods push mov add jbe jmp jb ffreep les or xor xor jmp ret into (bad) pop out mov or xchg pushf das or xor dec in das pop clc (bad) repnz test sbb mov inc dec or ds jo sahf xchg sub add sub and nop jbe jl (bad) repz pop cmp ret testb mov mov mov sbb movl imul lahf pop xchg or xor ds adc adc mov rcll pop rcll sbb nop dec negb rolb xor adc sub pop mov dec mov push jge sub sub mov inc repnz mov pop ja in and mov jmp mov (bad) and and insb pop mov daa clc orl iret and pop or (bad) sti mov (bad) (bad) sub aam push roll lret dec adc add jnp mov inc hlt ljmp dec adc out pop shr xchg in leave and pop int mov sarb xor xchg das push lock mov jo sub pushf mov sub rcr push add test mov inc (bad) jno add and push and xor mov cmpsb mov mov inc push mov jp mov mov (bad) lock adc lret lret lock add test fs mov das sti sub out adc in dec into clc xchg movsb (bad) in mov sub leave xor jge inc pop jmp mov outsb sub push lock xchg (bad) stc scas or loop lds popf jb mov mul lods (bad) out mov jbe push add loope aas mov mov push mov mov nop fld or out repnz roll mov push pop call or mov xchg fild imul (bad) out inc les dec pop clc jnp sahf stos sub and idivl or lcall cmp in dec and sub out inc fldcw repnz sub xor mov jmp int3 imul repnz add mov stos inc pop imul sbb pop scas hlt js ja repz mov into pop aad xchg (bad) pop popa ret mov push push pop out dec (bad) shrb lahf jae dec in dec leave push sub and das stc push dec jg addr16 pop leave mov idiv xchg aam dec stos jbe out and das aad js imul shrb dec ret mov je lock cmp xor out mov lds cwtl ds pusha das pop xor add mull push or push lahf rolb and mov sub and add cs test dec leave rcr adc stos cltd dec jle jmp repz scas leave or scas ljmp subb call lea and mov jb sarl push pushf cmp clc out jno fs stos mov mov repz add sti sub repz jno inc mov cmp mov sbb and out jb sar fincstp xor mov lods jo xchg push pop or adc adc (bad) int jnp xor xor or outsb lret pop pop aas clc and adc loop xchg mov in add and or test xlat mov inc xchg scas adc and lahf out adc (bad) mov cmc into push test idivb ret dec push inc popf icebp call daa pop add pop daa jecxz inc lret imul jmp pop jno test dec fstpt jne xchg (bad) push cwtl inc mov lret mov into ds mov (bad) jl mov or dec ret (bad) jp sub lahf into lods out or or repnz pop enter fucomip xor pop fidiv std out jmp jmp test inc dec xlat outsl jge sub shrl popf in cmpsl fisttpl (bad) into cmc ljmp int3 les push add daa repz mov dec sub je mov dec add mov mov mov fidivr ljmp xchg cltd fdivl ds jecxz mov cmp inc repz popa nop or or movsl nop jae or and in cmp jmp xchg xor scas cmpl dec xor or sub cmpsl jae cmp inc push xchg lods sub push mov popa in mov jge push jmp and imul add mov jmp pop xorb cs (bad) ljmp sbb movb xor arpl adc out fsts and data16 cmpsb cmp sarl push mov jmp pop jo (bad) mov mov pop mov iret jno and popf rcll jle cmp adc mov mov push add pop fidiv jne cwtl xor (bad) mov andl in cmc movsb out push mov pop repz lret add mov xor xor add fbld test mov stos fucomp and mov push jno pop sbb jecxz mov and jge jbe pop mov fnstcw in dec clc mov xchg mov leave dec cmp push pop jle ret mov push mov ret jge xchg (bad) or (bad) lock add ja mov dec jl sub sbb push xor cli sub repz (bad) call mov (bad) lahf and pushf imul xor std aad push push (bad) pusha and mov (bad) pop jnp sub mov je ljmp stos jl dec idiv sub or and cmp out inc push mov dec fdivrs les pop call je mov mov ljmp add or jle movsl and adc (bad) sub sub rolb out dec icebp movsl std out nop cli xchg push dec add xchg movsl push or shrb xor mov mov jbe sub shrl imul mov idivl jo jne inc xchg in xor les ljmp ljmp xor cmc jns cmp stc push rorb mov fstps inc movsl mov xor pop mov dec mov das cli bound (bad) push jp cld and popf fdiv imul mov pop sub orb adc lahf push mov (bad) outsl repz jmp push das stc cltd sub push popf sub leave sar ret xchg xchg add push push add mov sbb icebp mov sbb dec loopw inc pop and adc pop (bad) cmova sub cmp shlb leave adcb mov sbb div mov (bad) mov out test cmp inc ja lret lret adc stc mov ficoml js and mov popf xchg leave popf pop inc cmpsl mov push das push scas sub addr16 push add xor mov sub xor leave out fcmovb jmp (bad) (bad) sbb add inc gs and mov mov mov shr cmpsl out xchg jl inc add jne daa loope fbld mov mov cmpsl mov notb dec or adc pop sbb mov cld in mov xor in test inc mov notl js xor and sub cmpsl fstl jns fs les dec mov or add js xchg add sub add addr16 jnp mov movsb push icebp push xlat xchg xor (bad) sbb xchg jp out xor sub mov add pop repnz cmp fildll shll clc and loope jp (bad) pushw push ljmp test idivb divb leave cld inc inc test scas add test and pop test (bad) jmp fstpl inc test imul push iret adc and pop enter jo pop push in div hlt mov sub dec pop lret (bad) repz hlt mov daa dec pop mov lret out mov idivl ja popa mov daa add (bad) out arpl adc les pop sub pushl xchg ljmp aad push clc outsl lret xor div daa (bad) (bad) jb mov push mov push mov jmp push mov xor shrb ljmp dec adc mov out je dec imul pop xchg inc jp sub xchg add sub pop out int3 mov (bad) mov inc jecxz pusha daa ret fprem dec or push sbb stc and ret jbe scas in lret mov push mov movl fwait add mov or clc sub xor gs and pop daa and int mov xor cmc (bad) mov (bad) out dec repnz inc or int inc cmp (bad) in add ja insl cld aaa push (bad) mov xor xchg inc xchg scas mov rcll pop out mov idiv mov fmuls in pushf xchg mov jmp xor jb xor xchg xlat aad imul pop ret (bad) sub call xchg leave dec sub fdivrl xlat pop xchg xor cmc (bad) ss icebp jle add push inc sti sbb dec jnp lock je pop mov stos lds push pop mov mov xchg lds test out into out add (bad) mov lods insb movsl jnp mov adc and (bad) mov leave out push inc (bad) dec jmp outsb leave lcall cmp or jmp (bad) je gs lret (bad) (bad) xor shrl pop sbb and testl push dec mov cs inc into push push sub out imul inc pop cmpsb and sub pop les fnstsw and sub sub mov or out int3 dec xor (bad) out and pop lcall (bad) xchg int out xchg ljmp mov mov sub add loop shrl lahf das xor scas or mov jle pusha mov mov test add gs mov test imul xchg and dec les cmp stc or xor test add pop sub out inc and mov cltd jae std in mov sub mov repz fwait das push sbb imul adc xor mov mov lret (bad) cmpsl insb xchg je,pt (bad) mov xor dec and pop out fstps xor iret sbb outsl sub xor out (bad) mov pop repz sti pop jmp (bad) cs (bad) leave xor (bad) imul xlat mov ret sub aaa adc ljmp adc lds add add add mov repnz sbbl clc test pop inc add pushf fdivrl cmpsl (bad) lcall ret call xchg cld pop in inc dec xchg add and mov jmp add cmc pop icebp jg test lret cmpsb dec int cmp test (bad) (bad) mov sub mov hlt inc inc cmp stos sbb xchg andb jecxz add loope xor mov and test (bad) mov add rclb dec fsubs out cmp lret add cltd das test add mov jne out add out mov jecxz dec inc dec xor lret mov std adc xor ljmp dec pop inc and lods lods fcompl and sarl cmpsl xlat loop jns addr16 das repnz sbb mov or cmp xlat inc xchg cltd jl push mov and out xor cli pushl repz les push cmp pop test (bad) sub lods cmpsl out jne xchg mov sbb and sub or dec int cmp push (bad) and jl cmp cmp movsl cmp gs sub add scas dec div adc mov mov sub jbe push xchg loope sub movsl adc (bad) decl jmp adc xlat mov adc cmc movsl push fadd lret bound mov mov cwtl xor xchg repz cmp sbb jge lods inc dec add movb aam push xor imull xor jbe and add add jmp fbstp imul test jb dec out mov add leave mov iret pushf rcrb pop das inc mov (bad) (bad) test (bad) test adc or adc push scas pop sub and and add fmul sub jmp mov adc scas (bad) iret dec mov popf add movsb xchg cmp cmp add movsl ffreep mov lahf (bad) leave shrb inc outsb out ljmp unpcklps pop movsl mov push sub or icebp sub in or mov fistpll adc sub and ljmp sub mov xor push stos call mov ret cmpsb aas pop test xchg repnz inc bound movsl jnp inc xor jmp jmp int clc sub xor icebp adc stos mov ficoml push das push mov fdivl lods jl xchg (bad) mov iret fwait fs (bad) mov cmp push fcoms clc scas repz shll pushf jmp jne fstp outsl test mov roll xor xchg (bad) cli adc mov lea adc add (bad) adc xor in enter jae cmpsl pop fnstsw jg inc push sub mov inc or cmp call out pop test xor dec lret std and dec mov roll in add mov mov xor xchg mov xor jo or jmp rcrl or (bad) push cmp std dec cmp ret xorl cmp fdivs into imul pop imul sub dec sarb jne add add cmpsb fs or sub xchg pushl cmp imulb xor fcmovu xor jbe das dec fdivrl sti sub xchg fisttpll popl or sbb dec sbb popf cmp sub sbb adc mov insl enter and push sahf js add testl mov ret test jp mov xor push mov mov imul sbb jmp cli dec popf xor out (bad) dec dec js ljmp push in sti cs cli jecxz sub xchg fmuls mov push cs loop int3 add (bad) rcll flds hlt hlt jmp in imul or mov cmp or icebp loopne aam jne out cmpsb stc pop and loop push and mov insb sbb pushf sub adc int cmpsl mov mov sub lods dec cld js out sbb cmp adc mov xchg mov incl sub sbb test bound (bad) sti jmp test rcrl and es push mulb dec dec leave mov shrb aas mov cmpsl hlt in and sub mov and out les sub and fiaddl rorb or sub idivb pushf push out popf jno push jmp inc jno push test push int3 push pop pop dec sahf push cmp out loop xchg out lea cmp movsb clc sbb sub mov cmp mov sub and stc outsb dec jle int3 xchg bound push roll (bad) xchg fwait aam xor xchg xor pop (bad) outsb sub sub (bad) xor or cs mov imul stos pop mov push add aad iret in sub mov ljmp mov fidivrl scas enter xor (bad) pop push loope dec aaa or add pop dec ret hlt lcall gs push mov or repz xor sbb repnz jg jmp xor dec cli jb mov or hlt arpl ja loope add (bad) sbb jg clc dec aas movsl sarb push jle pop push sbb into jge cmp cmp xchg std les mov int inc (bad) imulb shrb movsb mov pop sub cmp mov push rol imul mov inc mov sub sub ljmp add fnsave sub push lret fs pop xchg fisttp out in das lock mov push out cmp mov xchg bound call and add pop xor mov aaa fsts sub scas cmpsb push pop les cmp dec jb mov (bad) mov mov das jmp adc mov pop mov cmpsl lcall aam imul pop (bad) jg cli leave aam inc xchg mov mov fldt aas or fldt add sub sarl out sbb ret mov lret or adc xchg push mov and jge add aad mov aas and lahf (bad) push jmp xor scas loope mov data16 rcll sub xchg mov mov and shlb and add insl xchg xchg mov dec mov sbb dec sub in mov xor dec ljmp lret inc pushf jne cld and dec std pushf pop repz aaa shr mov out and imul mov jne jl dec push adc ljmp cmp xor (bad) int3 popa call inc fcoms int pop xlat push adc push mov and gs stos lods sbb out jl xlat aaa bound out inc sub push je push (bad) mov mov pop and scas mov (bad) sahf in jp and (bad) mov (bad) mov fsubr rorl int3 xlat in pop enter jne iret mov inc enter and test xchg jo sub mov movsb or imul add into daa (bad) icebp mov xor lods insb in lds jns push daa pop mov jp push jmp in and in adc adc sbb xor subl (bad) xchg or jno xchg (bad) out gs cwtl or insb adc mov pop or leave pop shll enterw xor push sbb sbb repz out sbb or jmp mov movsb dec push xor adc mov cmp sub adcl cmc adc xlat sahf mov clc xchg mov push lods stos mov das or je xchg jb mov dec jo xor mov fnstcw xor lret (bad) cvtps2pi icebp test xor cwtl mov dec arpl jae dec push lods cs lret insb and and aad lret and jg jmp loope jne repz mov sub mov xorb add popf pop xchg xchg (bad) sub (bad) jne and sub insb repnz jl sub mov leave mov inc cltd sahf and and stc movsl sti lods ret xchg adc movsl scas nop mov call pop aas mov pop mull pop pushf mov xor sub jmp (bad) sub jae push out cmp into test and xor pop test dec adc fsubrl jnp mov rorl (bad) and mov out rep pop call inc push cltd jle jp aam aad rcll sub sub dec movb xlat scas mov dec dec sahf xor stos jno and jp sbb into cmp push jnp inc inc cmp mov inc mov jne xor jne ljmp hlt push leave hlt cli adc mov fbstp sub outsl fldl sarl les test into subl mov lret adc or dec or repnz (bad) mov sub or lahf pop mov dec clc jbe sub negb lock in cmp inc sub fs popf test dec out lcall push inc xor and xor pop sub faddp ror or dec add mov push hlt inc sub in pop mov mov cwtl sub adc loop xchg jmp repz add cld pusha cmpsl mov rclb mov sbb das sub je cmpsl sbb pop inc xor sbb rcrl fs mov jnp (bad) rcrl mov loope enter lcall das or lahf xchg inc insb adc pop test xor cmp sub xchg jle pop cwtl xchg add sub rol mov mov add cmpsl jbe pop adc add mov dec (bad) fldt in pop pop sub adc cwtl mov lahf (bad) loopne inc xor push xchg (bad) mov xchg jo or adc ljmp adc fldl jo pop (bad) jp pop bound xor (bad) or loopne inc bound xlat mov mov jl sahf or (bad) and dec movsb imul pop push leavew sbb lds lahf jmp jge adc out out dec icebp lods sub cmc (bad) cmp stos inc sahf sbb cmc orb xor bound stos cmpsl push rclb in das and clc in mov sub out (bad) mov adc mov mov mov dec bound sbb mov sub or adc or sbb sub jecxz inc in mov negl aad push stc push aas popf jle fs sub or or das loop (bad) ja push dec inc mov xor xor fimul das in lods cmp or cli repz gs pop jnp mov pop mov adc ja imul test xor fcmovnu mov cs lret subb adc mov leave mov loop call xchg ds fisttpll jo pop test adc and or xchg inc push movsl les adc or cmp bound stc ljmp push adc xchg lock push jmp push push pushf mov lods add mulb xchg or mov mov pop out sub dec inc repz std iret dec jmp mov stc ja out or cmpb shrl pop les rsm pop pop stc cmp lret pop cs sbb xor aas sub or dec rorb mov adc inc mov scas mov mov gs out dec lods gs add repnz ss shrl dec repz (bad) or inc push repnz mov cmc gs or fimull sub jae cmpb and and and je rclb sub jmp cwtl jbe push inc xor mov or mov js cmp mull add xchg rorl out daa xor (bad) mov adc add jb paddusb jb or or cwtl gs pop das xor lcall xor ss inc mov sahf (bad) mov aad icebp sbb push jne ss mov push ja ss (bad) pop jge fiadd into mov pop jno iret cmpb movb loope js jle popa out or cmp push lods inc xchg les ja cwtl mov lock int sub and push xchg out stc jbe in mov jno add or jno popf ret sbb mov jne mov and bound or pusha sub jmp push daa dec mov (bad) xchg jmp sub out (bad) sbb add cmp mov cmp add add sbb cmp popf cmpsl pop (bad) insb sub push xchg pop scas jo xchg cltd push mov xchg and push mov (bad) dec mov mov sub popf jne xor stc into (bad) repz (bad) mov adc dec mov test cwtl add stc lahf or ljmp movsl jp inc add jp add mov and out daa call cmp pop sub lea aam call add fpatan inc sbb or mov popf (bad) idiv adc mov enter mov mov out sbb mov mov iret cmp xor dec pop and mov xchg decl fadds fimull (bad) in cli lods xchg mov mov inc lcall imull scas sub jp in adc pop mov sub mov adc cltd pop imul push stc xchg andl imul pop jecxz daa mov popa dec stc imul lcall sbb lcall movsl jge enter pop and fisubr push push out push push test inc flds in cmp lock enter push ss fs ljmp test mov xor shll lds mov (bad) fmull pop lret sub pop sub push pop dec push daa ret push sbb sbb pop dec sbb jmp jmp lcall cmp scas pushf and dec cmp cltd jl push mov lret pop sub xor mov data16 mov inc or add and bound jns scas or test lock ds sub bound fucom add in xchg fstpl mov jg out mov decl xor clc fldcw add pop loope sub xchg mov mov pusha mov mov shll addr16 out lea pop xorl mov test cmpsb cmpl add subl in and adc mov xlat mov inc or leave sbb loope,pn div dec mov xor xor movsb fidivrl movsl adc and adc test dec xorb in mov out inc mov sbb xor cmpsb cmp sub mov sahf out paddusb dec or mov dec sub es or in ss clc cmp jg repz nop in sarb dec iret mov push xor jmp mov leave sub xchg xlat xor decl or dec and xor lret mov jmp pop out fdivrl push fadd push add and popf fistp mov (bad) pop test (bad) and mov lods xor lcall sub lods xchg (bad) ljmp loopne ret sub nop sbb dec lods add (bad) push sub mov xchg (bad) testb and and jl xor jne (bad) jp pop rcrb and jbe pop loope and lea bnd je test mov ficoml add test aas mov pop stos add fs rorb xchg or in pop inc test (bad) int cld or dec (bad) xor pcmpeqd mov outsb repnz push imul jge xor xchg ja sub sbb ret adc stos jecxz dec cmp les cwtl rolb pusha aaa bound push jle and outsb mov add shlb aaa sub or add fldenv push rcrb mov scas jne iret out sub lret dec push or sbb ja cmp (bad) or dec xor test xchg scas adc sbb ret mov out xchg mov sub add xchg negl and call pop into sub add or push or (bad) push decw (bad) cmp cs rcr es sub adc das orl sub add jg sub (bad) aas xor aad pusha and repnz dec jmp into sub sub mov mov dec scas les sub loope cmpsb cmpl outsl mov lahf jge or sub (bad) mov mov subb mov lret out aaa imul inc adc lret out repz xor popa sahf ljmp movsb cli test mov pop add xchg into iret mov lods cmpsb pop les xor fdivrs pop sarl push jge xchg jmp push dec movsb movsb jmp repnz push mov add stos (bad) push sub ja xor xor sub mov in fldcw push psadbw mov aas es inc sub and push daa into cld sbb movsb (bad) repnz into xor rcll push mov pusha out mov xor lea or mov sub xor push in and jmp das into jne mov push push mov movsb test mov pop lret into aad stos add cmp shr inc sarb lods cmp mull sahf bound add into and jecxz sub mov pop nop sti fisub rolb add sarb mov cli aaa or or icebp jne das mov hlt cltd pop mov lahf inc cmp pop add out cld (bad) aad rorb add out and (bad) pop loop add mov mov push or jno imul (bad) pop sub or loop inc or push mov xor fadds add pop mov out loop int or mov push or dec gs repnz sbb sub pop stc sub mov bound push mov add mov xor ror std gs push mov std sahf add pop sti jbe add shr arpl xor cwtl pop repz sub push inc adc divl sub dec (bad) in mov pop shr inc (bad) pusha lds xchg test mov out (bad) enter dec shr push pop push push movsb mov sub lahf test sub adc or aam jg xor pop cs add pop jno mov and enter in pushl mov outsb mov lahf je out or shl fild insb imul mov xchg mov stc rcrl add push mov jg sbb inc mov push sub mov addl push addl scas mov roll je pop jnp mul xchg ret adc rcrb imul pop xchg sahf adc imul inc ds adc inc add adc scas jg and push and pop xchg in xor mov mov enter xchg xor flds out push xchg pop mov jb jl pop arpl and mov mov mov xchg mov pop mov cmc adc sub cmp inc mov jmp out pop add mov pop into in test mov jmp dec mov jae adc lcall xor negl push lret pop or (bad) loope loopne add xchg add repnz mov pop sub mov dec in xchg cmp sub std fstps lcall mov and xchg sbb inc xchg (bad) push dec mov neg dec push (bad) lret pushf sub sub fcomip sbb mov mov into inc push sub mov inc sarb pushf imul pop xchg adc out dec and xchg dec or (bad) cmc inc pop xchg into call xor cmp jecxz cs or pop push out sub mov xorb mov (bad) ja clc pop pop das test cwtl mov pop ja push pop sti pop sub and (bad) lds lods adc dec dec inc push mov outsb frstor sbbl scas inc mov imul scas je pop icebp js mov xlat push push dec loope xor xor and pop daa pop dec out xchg test lcall ja sub sar popa pop lock mov xchg jns add (bad) negl ret sub popf ja pop lcall inc cmp mov mov mov add aad fsqrt insb shrb pop xchg out jbe jnp and mov iret cld sbb and and ret and xchg ffree fmuls pop fdivr repnz push inc adc mov mul imul add ret jns adc dec jge (bad) bound fadd call push dec sarl loop xchg in inc (bad) ljmp xchg add fistpll adc xchg mov push aad repnz or ljmp cld jge (bad) sbb shlb aaa icebp sub leave repz insl leave rcrb jmp mov mov mov std pop mov inc sub add mov shr cmp pushl clc and jo popf push clc in sub (bad) jmp aaa out movsl (bad) in inc adc cmp adc ret icebp icebp adc inc cmp fcoms and sbb (bad) stos ja jb inc jbe pop test bound adc push into mov mov les stc jnp jmp lods add ljmp lods fnstenv out and cld enter aad push stc or sti dec ror push dec popa xchg adc jge fnstenv cmpsb inc mov push notb int sub push in stos test mov pop adc cltd or xor mov rclb sbb xor outsl inc pop push scas or repnz pop sub sub mov lret aad inc mov and fwait sub push push push (bad) loope ds xor loop loop inc les out int jg inc xor dec leave ja mov dec sti jne enter sub push adc icebp mov sbb mov xchg mov ja push add inc aas (bad) jns int3 imul pop enter fidivrl test dec lods mov jae fistpll xchg ror out mov imul out ret lahf nop mov cwtl test inc cmpsl cmp inc xor (bad) nop mov mov jae data16 inc mov iret mov and lods push add sub (bad) in sub lds into mov in fsubs divb fwait cmp out sub out test mov sub sub je (bad) lret mov xlat adc xor test in xchg cmc adc mov or xchg add das sub lret mov ds sub adc lods movsl mov mov (bad) loop das adc cmpsb into sub mov (bad) dec xorb push clc xchg movsb push insb mov (bad) (bad) ljmp sub out or or cli xlat mov icebp cs xchg and fildll inc mov push xorb (bad) test mov imul mov mov or fisubl xlat loopne jmp inc sub ror mov fimul inc ds mov loopne xchg sarb das bnd insl lcall mov xor mov bound mov hlt call and cmp xchg out (bad) call push or gs xor ljmp or pop mov aam fs xor aad popa mov test faddl in dec sub and decb es das lds sub jmp cld daa add pop in xorb ret jl arpl icebp xchg enter ds fnsave push int jno and cmpsl or or into pop dec and inc mov inc xor push mov fcmovnbe fldenv mov add (bad) aaa add dec ljmp or push add and adc shlb or push xor push shr add cli test (bad) mov add divl (bad) sbb cld mov scas dec fildll jbe push dec dec jbe leave pusha in mov (bad) jbe addr16 imul cmpsb andl cmp aam push cld mov out mov mov lret dec roll mov dec ljmp lret lcall pop push and lret adc mov and adc cmc lods je daa out sub inc repz sti lea lock notb dec mov xchg out lret pusha and scas adc xchg dec add push lea ja push sbb push fist shrl sub cs popa jecxz adc je pop (bad) bound jp adc out (bad) push and frstpm(287 and or stc daa dec in push jbe mov mov add inc jl ret mov sub and xor fsubl adc shlb mov push or inc mov inc (bad) das jbe leave test fpatan mov dec (bad) in add mov gs icebp or push mov xor xor cmp gs nop in movsl and sub adc and repnz pop push inc sbb pop sbb mov gs insl jnp fsub mov pop hlt and sub hlt cmp pop pop fs mov jp mov lret daa jecxz push lret icebp jp inc movsl pop leave testl lahf adc dec mov rcl sub dec sub mov ljmp add or and or test fsts and jmp add pop (bad) mov dec xor leave mov jl pop aam imul jmp add int3 lret xor or repz shr test push cmp mov dec mov repz jg dec cmp mulb fcmovnbe enter xchg sbb inc sbb iret lds jge xchg jne mov add lds mov mov data16 daa icebp sbb push xchg jmp test fistl xlat cltd inc sub lods adc or sub ret cli das push icebp gs xor mov sbb xor aas mov divl jnp pop cmp (bad) mov rcrb stos (bad) push icebp mov inc dec lods mov pop in (bad) pop repnz jmp das notb cmp jnp push lcall or data16 dec call (bad) jbe push ficom xor rcll inc outsb cmp cli dec dec push sub lret mov xchg push je cmc adc dec mov inc pushf into cltd push (bad) out andl into push xor jb jmp aaa jmp int mov arpl mov scas fadd and in movsl jnp hlt loop stc in les sub loope arpl xchg ja cs data16 and rol rcll pop cmp loope mov cmp mov repz mov negl dec sub (bad) mov repnz or pop dec mov lods add or mov aam leave pop lcall dec mov repz add ds testl mov mov ficom test (bad) push dec cld movsb stos jmp pop repnz pop lock add or loope jge sbb loop xchg push add dec lcall mov idivl lret fdivrl cltd mov push and lret jp mov mov sub test stc (bad) rolb mov movsl shrl rcrb leave scas jb xor and stc imul bound pause push mov xchg ja jo in stos jb daa xor pop inc mov imul je push mov lret cmp les clc mov iret lahf loop sbb mov jge mov popf push out and lds aam mov lods lds mov in sub inc aam imul xor cltd jp adc sti addr16 in out mov jne inc arpl stc bound inc or pop mov into mulb mov push aad xchg loope repnz inc dec lds pop std and loop inc (bad) daa clc xor cmp and xor pushf xlat dec stos je clc cld and adc les mov movsl xor sub xchg addr16 and add daa and sarl adc nop movsl pop scas inc test inc daa in and scas sar add jl add sub sbb je out fxch cmp adcl add mov mov push mov jo mov mov or daa mov and cmpsl cmp (bad) jne (bad) pop mov inc sub adc adc out add jg ja in dec pop fsubl push mov std pop aad iret pop scas push inc cwtl mov loop adcb ds mov sub test test jg pop add nop inc out sbb add inc or pop add rcl scas jle inc pop push mov and sub xor sub aas jmp test pop sub pop loope mov lods jns push adc or push push mov xchg sbb aaa lret push ffree mov inc pop push mov jg pop sti add mov std add aas xor pop or dec push in (bad) jae (bad) not or cld adc push ljmp addr16 pop cmp add pop fadds enter ljmp aas das mov inc cmpsb pusha inc inc jmp in nop xor xchg sub mov sub mov xor xchg or push fs in push mov mov dec dec mov out (bad) gs and shl xlat imul call or ficoml es sub stc pop xor mov sbb sbb push sti push imulb pop test sub xchg imul js in xchg push mov jle shll add xchg stos les clc mov jmp ljmp jb roll fstps jp scas jae iret cmc lret mov dec xchg sbb dec fs mov dec fs lret dec cmp sub pop lcall add fsubs into add jns and dec out dec and xchg std test sub test mov sub lds fsub mov dec add jnp sub insl adc ror enter mov sub xor incl dec scas fsubrl add push call pop mov push adc pusha jne mov mov and xor push mov ret cmpsl in or repz (bad) pop push daa aad xchg push inc xchg and pop ret push mov jg imul fstl stc mov dec repnz sarb dec loopne leave xchg jl sbb mov pop or leave add sub add fnstcw xor (bad) (bad) movsb es or and cmp sbb push inc pop jecxz (bad) sub popa xchg jmp mov mov sub add jae adc mov mov fcomip xor xchg mov dec mov add mov mov les cmp enter mov out add jp push mov jp addr16 sbb pop leave test mov gs mov sub mov jp loop jns inc rorl ljmp sbbl sub dec jmp mov jg aam pop jmp gs xor js push daa idivl stos push (bad) imul js stc mov dec mov in ds (bad) mov cs push and mov fldenv mov rcl in cli jb icebp pop dec clc pop jmp int jle sub into lods pushf shll push cmp mov (bad) mov lahf sar bound int3 dec inc pop or lods sub (bad) ljmp adc xchg shll (bad) mov sub fsubs push pushf (bad) xor test dec or rorl lods sub negb mov jmp inc repz mov fs clc push add xchg in sub fisttpll cwtl insb loop or mov jp mov xchg sar mov mov lahf int3 pop adc out xlat fstps scas or pop cmc imul sbb xchg sub mov adc push mov movsl fimull and mov xor sahf int or cmp (bad) jge dec mov jg mov fbstp push les mov pushl pop test mov js mov setg aaa (bad) cmp into push movsl jne nop xchg push negb in xchg (bad) stos dec push add mov inc dec add cmp repnz (bad) (bad) aad push and mov std pop shll (bad) jae nop or dec sub pop mov pop sti sub sub pop xor xlat inc push test das imull cmp cvtps2pi cmc inc mov jmp xchg scas or idivl mov mov data16 push fnsetpm(287 leave fwait inc ljmp movsl leave clc inc daa dec sub sahf loope ret sub or test mov xchg aas mov jnp int3 fs into mov sub lods pusha aam pop or sub test pop out loop xchg scas jne (bad) ja in out mov pop fisttp das xlat pop mov ljmp test xlat dec hlt inc das sub add fbld sbb in pop ljmp repnz cmp or xchg mov in cwtl mov sub bound ret stos jle movsb movsb in and ret xchg adc add mov mov dec jmp cmp add sub jp push push aaa rcrb mov dec (bad) fisttpll cld cs sub les pop out decb out aas sub sbb leave add sub aad cmc ds lock push mov ficom inc add fisttp out mov std push xor roll mov sub repz mov adc scas fnop sub lcall ret stos popf mov js mulb lret and cmp xchg cmpsl fldenv add pop mov mov imul out es add pop mov popf push adc cs iret xchg (bad) xor icebp out lock push jae jmp test fucomp mov pop xchg out mov adc dec or js jge imul enter add mov pop sub int3 mov and or ret cmp mov or mov test popa dec sub xor mov nop xor xor test leave dec mov insb adc pop dec sti xor fidiv incb dec jmp mov test and (bad) loope shlb or or mov push mov jle cli add mov push (bad) pop inc pop xchg push add xchg mov int3 xchg pop jg push loope jns or and (bad) sbb repz sub call into xor iret shrb imul cmpsb mov fimull addr16 es pop xor mov out jns xchg push mov fnsave pushl xor dec sbbl add push inc and dec jmp hlt cld add cmp xchg add push add mov sarl popf idivl sti bound xorb pop xor call (bad) mov or adc sbb jbe repz scas sub pop iret clc enter out and sahf call pop xchg push jmp ret xchg fldenv aad mov out and inc gs lret sub mov fs shll sub and pop dec cli sub add adc scas test pop cmp ret mov xor cld dec or and sub cs call iret sbb sub mov notb cmp setge scas out fcomip pop lds mov out xor faddl add mov test inc mov cmp xor mov cld and aam mov xor dec sahf xchg or or aam pop xor pop xor xchg push test mov ljmp movsl je das jle in jmp sbb leave xor add cmp out pop pop addr16 hlt sti pusha xor icebp aaa imul aam mov ffree sub fistp aaa or (bad) xchg (bad) loopne sarl and ret out lock mov shlb sti popf adc xor or cs je lock sub and xchg fisub sar mov sub push dec cs je stos and pop sbbl push jb pop and leave lret adc shl xor icebp mov and repnz movsb lods cmpsl sahf fimul ret enter std push notl dec push mov rolb movsb nop shll pop mov leave sbb adc cld imul daa negl pop shrl jle xchg loope inc mov pop sti xchg call xchg fs xchg aad call jge mov scas test out jecxz push and sub scas and (bad) xlat sbb es dec adc sub jb into jge sub movsl mov jl in das sub dec sbb or (bad) xor xchg std mov lret gs stos mov stos mov mov popf jle jo cmp lahf (bad) xor out pop fildl add out push movb push mov mov inc mov cmp sub test and add into mov jmp jg ret mov add daa or jg (bad) mov in pop push adc out cltd xor mov jne (bad) or ja sub sti sub xor repz out inc lret pusha or (bad) cmp into pop gs xor shrl sahf or xor pop ljmp fs pusha adc sub adc mov ljmp add out outsb mov dec (bad) imull push in mov icebp xchg inc add fsubrs cmp xchg adc cmp jnp xchg out leave (bad) jge jl cmp sub add jo (bad) xor lahf push fist test push stos fsubrl or in daa je push jne pop (bad) dec icebp mov sub mov pusha icebp dec sti repz xchg xor repnz add lea xor xor fildll out jbe add lret cmp out shr cmp or mov out sub (bad) popf jno gs (bad) mov xchg out mov out add push fldenv scas cwtl or lahf stc cld adc sub and ret test jmp xchg mov imul dec leave mov xchg push push test cs jmp movsb pop add pop out or gs inc aad cli into (bad) xchg fnsave orb stc jb pop push add jns fwait dec sub push ret push pop jl xchg stc xchg xlat xchg adc mov sub or aad mov dec jle xchg ret mov xchg cli xor cli stc pop xchg mov or ficom aaa push aaa xchg mov cmpsb call test lds adc out (bad) outsb mov leave pop add icebp xchg fldt pop bound jmp adc pop iret mov xchg out mov jb rclb loop jmp adc scas enter mov stos xor leave (bad) imul jno mov sub imul xor pop xchg sub xchg push xchg and sub mov sarb fild jb repnz inc movsb mov jle (bad) in mov xchg jne roll add jo pop sub lods sbb popf xlat lcall pop xlat push fxch add add out mov and popf out daa mov rolb stos dec pop adc dec push sub pop pop lahf fsubr mov lds xor fcomps jbe lahf jnp xchg (bad) jmp (bad) dec mov rcll and jb xor notl (bad) in mov sub xchg out and jno bound (bad) add pop ljmp sub sbb xchg jl popf repz and mov out push daa repnz rcll (bad) mov (bad) jg lea lods adc jge mov add add mov pop and ret jne mov xchg cmpl sbb (bad) or pop sub es xor not std sbb popa and into jns adc mov (bad) mov decb jae pop mov mov xor mov ja inc xor jp nop push popf xchg iret adc lock ja push jmp gs lods cmc dec pushf repnz rorb xchg fildll out mov xlat test repz lods es (bad) popa fidivl sub mov (bad) pinsrw add jae sbb (bad) cli mov jbe xlat test mov test adc std mov sub or xchg push cmc icebp gs cmc dec and or pop push out sahf outsl mov (bad) leave enter sub jb out stc orl push fsubr pop and mov mov outsl leave mov outsb test (bad) je xor fwait mov pop cwtl popf add dec mov pushf in pop mov push sbb repz add cmc nopl inc cli mov pop and aam cld jle sub add pusha sub and mov jae xchg pop fstps stc sub mov incl aas and incl mov sar dec fisttpll mov mov fmuls pop jmp sub imul stc js mov enter loop push mov imul mov xchg gs add dec xchg pop inc xor mov movsb nop xor imul xor lods ljmp fistp fsubrl popf pop (bad) movsl js xchg (bad) into (bad) mov jecxz xchg mov arpl hlt mov in call xchg mov inc mov (bad) push in fsubl jo mov push xor mov sub subb inc push xchg faddl in sub push push pop push pop mov rclb mov add sbb jbe and cmove idivl sbb test adc sti mov imul fdivs cmc dec pop mov test xchg add lcall inc fmull scas lock xchg push mov in push icebp xor sub lock or (bad) dec or push pop mov stos add std pop jle incb test out outsl ja rcr or sbb xor rorl inc mov je xchg jno out mov or lock mov stos rcrb mov or (bad) jnp incb push icebp mov xor pop add cmp dec and and push mov into ss mov or and add in or mov jg mov mov punpckhbw mov push popf call push pop je and cwtl inc jmp je xchg sub in pop insl sub orl or (bad) shl and add imul xor mov imul cs mov sub sub stos jmp cli push push mov sub (bad) repnz ret push sub mov xor sbb cs in repnz add pop jmp out das mov xchg jno xor mov push xchg icebp daa repz dec ja sub es sub stc dec cmp adc sbb lds mov jb sbb add xchg dec lcall lret mov sarl movsl jl adc scas mov daa xor lods xchg xor and imul inc jbe lret mov inc push pop leave mov mov push pop push cwtl xchg icebp ret test outsb test pop cltd sub xor mov pop mov inc aas and cmp sub enter add push (bad) ret rol sbb (bad) xor dec (bad) je bound pushl nop dec push daa dec add es pop out add into push add add jmp shr inc xchg scas cmp icebp (bad) sub test shl mov mov lret (bad) clc ret (bad) mov jp push mov mov iret xchg pop pushf jp hlt and movsb push xchg jbe inc xor or lods lret and add les mov jae adc pop mov or dec jne adc xchg movsb sub add (bad) cmc imul pop cld movsl or outsl and scas jns xchg lock cltd mov clc dec mov mov cmp std mov cmc imul cmp push add mov and mov fistpl sub insb sub loope mov xor adc jo or mov and and add sub push jp xlat in adc dec inc loop les mull hlt flds pop push lds (bad) sub mov push data16 mov inc cld movsl inc insb xchg pop jmp in push xchg jne test inc push mov sub or sbb mov scas cmp das je scas xor xlat jl shl push ja jne repz icebp mov scas repnz icebp pop movsl aam loop add xor jle das dec andl lretw add rcrl hlt pop int3 sbb dec or pop cmp push adc and mov inc repnz or test in pop jmp sub outsl mov jns and xor mov outsb pop jle (bad) push pop cli push shr jmp push icebp sbb mov pop (bad) sub push push dec sub jbe imul arpl push xchg (bad) je jmp sbb xchg xor (bad) and cmpsb into sahf pop das dec cmp (bad) xor out mov xchg bound xchg mov shr adc mov adc ja mov jmp push insl loop scas int3 push ss mov adc loop addr16 mov scas shrb mov out add xchg jl in cwtl dec sub iret mov scas arpl movsl ret imul aad pop and mov pushl sbb mov aad add mov iret das cwtl stos xlat mov shll jmp jecxz jmp cli sub (bad) cmpsb imul or and jmp (bad) cmc stc fisttp mov fldl xchg jns call das or insb rcll jmp lret aad add add xor popf jp mov lock and mov imul cmp push xlat jns dec push jbe sarb mov pop sub imul add lea push dec stos fcomps cmp (bad) mov adc mov pushf int add negl and (bad) or (bad) dec push sbb xor lock into sub dec ret int jl iret lret jl sub and (bad) push push pop call pop adc push or push and mov sub xor sbb push xchg int3 cmp inc and es cli aad mov dec add xor mov nop mov call mov lods cs lds sub lret test rclb mov aad xorl cmp loopne mov xor mov (bad) mov sarb (bad) repz sub icebp push mov or ret add js scas xlat loope jmp jne test pop mov lahf das aas inc fsubs mov lds push scas xor pusha jbe sbb icebp sub inc imul mov add ss test pushf jecxz into sub sbb out fdivs aas xor das call out repnz xchg stos int3 push rolw or movsl repnz mov xor xor or fcoml sub xchg sub lahf lret mov ljmp test ds jp sub xor mov inc push shlb adc mov push sub or bound jecxz (bad) mov sarb mov sti pop push mov idivb (bad) mov pop xchg jg jmp push dec loop cli jge inc das add xor notl ret cs sub repnz pop mov sti rorl in fs lds mov jl mov adc and xchg adc or jge xor and sub scas cltd loope mov dec icebp xlat imul cs aam xor iret out adc enter pushf aas mov icebp push push test mov dec mov dec jmp sub fnstenv ret lret shll dec xor add insb xor cs sub ljmp (bad) hlt lcall loop mov mov jp inc xor lock mov jg cmp ss std iret sub notl mov scas popa out push mov addl inc push out lahf and lods mov (bad) mov ficoml and xor and popf repz pushf mov in jg cmp and notb clc add cltd (bad) xor stos sub sub sub mov pop xor push imul sbb push sub iret mov mov lret push jnp pop xchg (bad) mov and in sub rolb clc (bad) sub mov shlb and mov subl xchg nop popf dec mov or push inc push pop divb sti and adc fbld scas lret dec dec icebp cmc dec dec dec xor cmp and das mov mov scas int3 inc ljmp out dec sbb or sub movsb xchg fs push repz test jb imul or mov sub push mov sub mov sti fsubs in cmp fstpt adc shrl repz pop adc stos mov test leave out inc out clc mov notl out std inc dec or ljmp dec or mov mov scas std add mov pop mov (bad) repnz test movsl je adc (bad) fstl in sub loopne mov fidivrl dec xchg mov inc push mov inc jmp movsb sbb pop mov aad or cld cmp mov inc sti das rorb jg jecxz mov xor mov ret xchg cmp sahf xchg (bad) fs stos test aas mov jle jbe push rclb mov imul sub xchg test ret scas sub add xchg stos push or cmp inc sub mov sar dec cmc test sarb or inc out and cmp out lret ret jne cmp outsl add out and je and and or mov stos cmpsl inc push jmp jne xor mov jmp test shrl sbb push pop push cmc xchg fcmovnu or xor or repnz push xor pop sub cs sub add arpl pop and pop or mov push leave pop mov jecxz pushf jo mov nop xlat push jl mov lret add push out daa call sub sbb jmp movsl pop dec jmp pusha iret sub add dec fistpll ljmp mov xor ja test in int3 (bad) jmp add pop mov mov popf popa (bad) mov stc push xchg dec stos sub sub lahf je pop sub adc push sti sub jecxz repnz sbb mov (bad) mov pop hlt scas out pop (bad) sub outsb mov scas cmp sub sub ret mov rorb mov (bad) adc push cmp arpl pop sub xchg adc fbld mov push jle or inc mov in xor (bad) sub mov leave push outsl lods call xchg scas cmpsl sub jmp out fild push hlt sub inc fcomi push scas ret cmc out pop lods add and pop fdivs es add and movsl (bad) adc pop icebp jecxz add iret mov dec (bad) scas mov push movsb xchg call into ljmp ret addr16 push jno jle sbb imull lods icebp movsb pusha cld sbb iret mov inc adc xchg cli popa mov vpavgw sbb loop ja sbb dec cld xlat sub (bad) nop and mov jne push jne out mov stos cmpsl (bad) mov push es dec dec lret xor jno ds mov mov jne xchg mov and add mov sub in fsubrl rorl fdivrs (bad) sbb sub or (bad) lret lods cmp mov fs mov and mov sub mov sbb pop in mov inc (bad) bound stc js cs push popa gs mov in and sbb (bad) lods xchg clc leave (bad) xor movsb dec fdivs lock and push sarl and or pop and fidiv hlt ret repz inc jle xchg dec es lahf repnz sbb cmp and call mov adc repz inc push ret sti test repz movsl mov bound repz push ret scas cmp loop sub aam inc add xor les ds bound sbb mov xchg lret mov test sub adc fstl repz sub icebp ret xlat sarb adc sub pop pop adc ret stc mulb mov mov or pop cmc in stc in idivb sub test mov pop flds push out or mov jns xchg pop push dec pop testb dec call (bad) clc mov ret add dec cmp pop push pop (bad) scas sub sub sarb out adc mov pop sub frstor repnz or push fisub in xchg loop cmpb or mov xor or jmp ljmp mov dec adc and pop or sub add (bad) imul iret jp sbb ja fwait sub xor out fcom jl pop movsb stc inc daa jmp sbb mov (bad) lock cmc adc jmp and jg mov stos fidivr mov scas sub add dec add aam lods dec pop repnz xor out ret call pop push sub out xor and (bad) (bad) ret lret gs in imul addr16 sarl cmpsb es sbb xor in in mov xchg or test inc into xchg stos xor mov mov xchg (bad) xor add jo or int out dec ljmp cmpsl shlb call out call rcl roll mov outsb test fwait movsb adc loopne rorb sbb and mov mov out repnz mov gs push (bad) (bad) testb sub jbe (bad) and inc and pop pop enter decb xor mov pop shlb mov adcl imul fnstcw sbb or clc lahf icebp xor adc negl push or mov jge sti clc jp insl or jecxz shl cmp xor cmp lret dec bnd sbb inc jmp sti mov ja sub ret and lret scas mov cli cltd adc in inc movsb cld xor in and (bad) cmpsl iret and ds lret add mov dec das jmp mov outsl push out bound clc clc pop or pushf push mov and inc clc (bad) xor in bound adc pop or test orb jmp into xchg mov add cmp pushf test add add push dec cld lahf jne and scas cmpsl jmp vmovlpd mov and fs cltd sub mov adc fldcw lret idiv loop call sub ljmp or pop or pop loope mov test ljmp adc fisttpll cmovl loop mov mov push xor fs cld or fstl imul adc add lods pop inc mov xchg pop out adc imul mov movl xchg add call mov mov mov loope sub mov xor mov testb xor scas or es gs mov das icebp pop xchg (bad) mov mov sahf bound ret or xchg push sbb (bad) pop subb xor mov push sub push push push int cmp dec pop pop pop sub xlat mov in adc push sub mov cld or scas mov test mov (bad) outsb out in sub add lods adc xor aad sti pop xor fucomp mov or jnp scas imul pop dec sbb loope (bad) ror xchg scas mov lds sub imulb pop adc inc sbb sbb std rorl cs pop arpl push adc pop cli jge jnp pop cmp scas fstps clc lds add imul mov sbb cmc cwtl pop or in mov inc or pop push imul scas dec dec inc inc (bad) cmp dec mov adc aad cli sub mov add xor movb rolb sarl mov mov dec mov test pop lods loope xor jne (bad) mov enter clc repnz xchg inc outsl rclb pusha add lcall cmpsb jmp sbb push or pop and xor pop or xor fcmovnu inc mov sub sub js sub jnp adc into cltd inc push ret push in mov js lahf lock xlat or inc add mov dec xorb xchg mov int3 sbb scas cmp jecxz adc testl (bad) jmp lret add push je imul xchg ljmp in inc pop push test (bad) fisub sub jnp adc and xor stc shlb add mov imul add stos rorl push and (bad) xchg push gs push xchg or push or ret sub cmp (bad) (bad) adc pop xchg repz xor mov cs jl (bad) rcll insb scas mov push (bad) sahf jp xlat fsubs sbb lds lods (bad) cltd push leave cli int and add cmc (bad) negl sub sbb (bad) cmp dec mov add add repz and and add push jo mov mov (bad) pushl mov divb stc xlat imul add outsb iret ror scas pushf fdiv pop and (bad) push add ds jp gs or cmc mov lds imull mov push push xor or sti cwtl inc repnz (bad) or rorl inc sbb and xchg push popf (bad) cmpsl jbe pop jo loope jne divl call xchg xchg testb mov pop addl xor jle insl scas adc stos xor sub xchg sub pop push and push inc push movsb inc imul sarb div pop daa ja fist mov mov cmp sbb or icebp pop test in cmp pop aaa fs jne mov pop lds popf ret lds add cmc mov cltd sub jmp mov xchg push cli (bad) in or push pop lds cmp push stos icebp dec xlat fistl fistp sub or (bad) or or mov ljmp (bad) stos loopne repnz cmc push stos daa lret ds jmp cmp sub sbb ret mov fimull and mov add add jmp push or add xchg insb stc xchg pop jbe out sub icebp pop je push cmp mov and push leave sub addr16 push inc lret jae sub inc pop or ja leave popf je pop sub mov xor and cli popf xchg jmp dec sti popf outsb sub cltd jecxz loope cmp rcr sub out adc scas rcl dec stc cmp adc mov add lcall stos xor cmc xchg rclb mov mov mov jg test sbb cmp fbld xor jo lea jmp cld das sub dec xchg ficoml sub jmp add jp lods mov (bad) mov js inc out sub pop test mov xlat adc dec sub xchg call jle xchg dec stc add adc fisubl (bad) pushf adc jmp lret fidivrl add sub (bad) jmp cmpsb shrb je jno mov scas xor mov repnz or dec mov push lahf out mov mov sbb jo adc fnsave imul mov inc loop pop mov push dec aas (bad) sti xchg loop daa sub inc mov xchg xor arpl mov and leave jbe iret lds clc aad and stos lods cli mov iret cs fs repz xlat repnz push mov pop jno dec aam adc and cmp pusha and and in mov out xchg icebp push mov aaa das dec add mov (bad) push jne jl das xchg jo xor movsl ret adc fcoml xorl nop lret mov mov outsl add ficom jge decb mov jle mov (bad) mov jo push in out mov adc icebp shrl mov and xor scas xchg lods add mov fstpl daa jne hlt cmpsb mov sbb mov mov sub xor and ljmp push xchg nop add dec pop lcall add decb adc stos sub iret (bad) lret dec xchg mov (bad) jbe add or jbe fs popf add jmp push imul mov out adc movsbl movsl imul (bad) xor sub mov mov pop pushf leave ja jns lods push dec jb push sbb push dec mov sub cmp ljmp push repnz and xchg pop and add shl adc jmp pop xchg into imul mov xchg dec or aam jg and jmp insl stos push shr sarl push dec push lret sub cs xchg mov xor sar sub sbb adc (bad) sbb jmp lret ret inc xor scas sub add ds sbb jl mov into enter pusha popf std xor inc ja adc repnz dec jmp add cld lret jmp sbb iret and or push cs or sub xor sub mov das loop xor sbb fstp ds clc inc push adc ret stc out inc add scas out pop in fdivs jno jae loop dec shll (bad) outsl mov fprem (bad) xor enter add or mov cmp cli dec jmp fadd out mov out mov pop push mov es adc jmp dec cli xchg mov sub decb clc sub and ret inc lods out mov xchg lea les icebp imul dec mov adc xor scas (bad) mov push (bad) mov lret dec mov mov (bad) or je jno and leave mov fdivs or xchg outsl xchg movsb push aad gs and sbb popf cmc mov mov mov xor jnp pop das ret jmp arpl push lret lcall imull iret mov repz fidivl dec mov mov mov loopne cld aas inc push adc push clc sub sbb xor pop in mov sub xor adc mov mov adc push sub mov add clc leave fldt bound bound popf data16 mov into insl fmull leave jmp dec xchg mov and mov jne aad leave (bad) (bad) (bad) xor and push test sub or cld xlat mov mov xchg push ret xor jle popa push mov mov in push xor into jle lcall faddp or aad in dec push push adc incb es add repnz cmp add jae and repnz nop push mov div popa jmp (bad) mov jge mov idivb sub mov test xor negl int push loopne (bad) out push outsb adc sbb mov push pop jbe mov outsl (bad) idiv loop xchg popf xlat add mov shrb xor iret popf hlt mov jne lea inc popa test ljmp xchg push sub pop das dec inc pusha lock sub gs cli push mov repz ret inc mov (bad) mov dec jg sarl movsl loop adc add xchg mov out or pop pop insl cmc push pushf push dec sub add popa dec jmp jnp in mov jne dec push movb sbb stc mov inc (bad) mov and mov lods jbe pop cmc dec jg xor lret sbb repnz dec loope sbb and flds (bad) pop mov fstpl jg js (bad) adc icebp jns adc lods pop scas sub imul mov lods cltd js popf int3 cwtl pop repnz xchg mov out mull daa sbb cmp push add sbb shlb or jmp sbb adc stos loop (bad) mov xchg clc add lret and out xor jmp dec add mov jg daa call dec lahf adc and cli mov popf xor insb lds dec cld or repz pop mov fnstsw pop aas imulb cmp sub pop add jmp rorl add je push aad push fs cld aas fiaddl add xchg pop push sbb (bad) fldenv xchg jecxz push xor jb negl cmpsl pop ljmp clc pushf mov inc dec (bad) sbb pushl gs (bad) xor daa dec repnz cmp mov iret sub cmp ljmp gs aas jmp dec adc fildl cli jg cli cmpl mov push sbb mov pushf das out sub xlat add cmp addb sub push popf adc ds xor pop ljmp mov mov cmp sub fucomp mov push pop imulb push fcomps and cmp adc mov pop in pop mov inc ljmp jg mov inc jae rcr popf out dec or add inc add gs jmp jp xchg js cmc in outsb jo cltd lods inc or fildll loop sti movsl push or jno and pop add xchg jnp add mov xchg fwait xor adc xor fsubs loop adc jge fs adc adc (bad) imul enter or dec lock data16 pop and mov cli mov mov add cmc cltd add and push adc and scas into xchg dec fadd push add add inc xchg mov out xchg cmp sub jne lods adc sub sarb sbb xor xchg sti scas mov cmpsb aad ljmp jecxz rorl and and add je in xchg add fs sbb mov xor js jl add inc fsub sub idivb insl mov repz lods sub sub dec cli (bad) clc lret rol adc int3 add dec idiv jno aad stos popa mulb sub adc arpl or dec jno xor mov repnz xor cmp stc call jae push add push push add xor jnp xchg adc imull mov jb push xor repz in add sub ret adc dec add sub xchg pop pop outsl jo out jnp or pop je push inc lea xlat xchg inc out mov lods repnz lahf gs movsl pop aaa and das rcrb (bad) ljmp or and repnz dec movsl sub (bad) xchg dec push dec and (bad) out push leave fimull cli (bad) adc ss pusha out iret pop inc sub xor popf xor jae mov daa lret mov outsb push mov and movb mov mov adc xlat mov inc lret pop push push or test fist lahf stc inc push add test adc enter jmp ljmp loopne add je jmp gs mov add rcll or shll icebp add sbb sub inc and mov adc xchg sbb add xor imul adc xor scas inc xchg cltd and push or or cli ffreep js push lods das out cmc cmp cmc cwtl push or rorl imul cmp (bad) je push shrb cli (bad) lret or fsubrl or sub lds cmp add clc add dec jge repnz or cmp inc daa in and add sbb je mov and and adc mov adc mov ret lods std cltd icebp cmp add clc (bad) and out dec test mov jg popa and fidivr cwtl sub cs fwait pop mov mov jle stos mov jmp data16 add jno jg enter shrw pushf jmp mov (bad) mov push sti cwtl xchg (bad) mov shrb mov mov and rcrl sbb mov sbb xor sbb in cmp sub mov sub loopne loope xor stos int adc mov jns and jge dec push frstor je enter or rorl sub sub xchg pop and mov clc mulb sahf adc out sub mov sbb pusha jge cmpsb movsl jbe cmpsl cmp ficom sbb add jle aam outsl imul pop fxch outsb test in adc repnz lahf hlt add loop jns imul aam ret xor ljmp mov pop sub inc and cmp mov push iret jmp ret inc add jbe out or pop push push es mov inc adc push dec mov das sub scas sub mov (bad) fist sbb xor adc nop dec xchg add cmp jp jmp pop stos add ret push dec mov mov pop divl add sub jecxz push and mov adc add dec jo or imul pop or xor pop icebp mov je les and rcr sub (bad) dec leave sbb sub xlat (bad) scas mov out and cmpsl xchg inc jmp push adc xor cmpsb lret lds (bad) add negl add jns inc mov mov lods mov lahf hlt xor dec leave lock fist add cmpsb mov enter stos or (bad) (bad) pop dec inc jge hlt icebp and push das fwait dec dec dec xchg fnstcw icebp mov add mov inc cmp (bad) mov xchg aam shrl das std test sar lcall adc or cmpsl daa data16 cmp fistpll mov or gs cli idivb adc fwait movsl sti xor mov sub subl adc cmp iret xor xor sub cmp repnz into call push dec xchg cmp ds pop add cmpsb lods adc and xchg mov dec cmp xor jne mov fs in push in cmc jmp je (bad) mov add jg sub jnp stos or decl jmp adc sub xor dec rol sbb rol (bad) fstl out adc push lret je popa decb into jg mov xor aad dec out fnstsw and repnz outsl sub sub pop or cvtps2pi test pusha sub add and loopne sub xchg jmp (bad) xchg fadd add repnz iret aam lods lcall mov fist xchg (bad) scas fcoms lock mov cmp cs out mov xor cmpsl jge dec ret adc adc xchg inc popf std cmp sub sub xor ds aaa leave ret pop mov cmpsl jg jae das divb ret cwtl int3 or push add push (bad) mov mov dec in adc or mov les lret stos dec and jbe test faddl lahf je push aad lcall push push stc pushf mov ljmp push loope icebp jle pop jbe inc or xor lahf sar lahf or rolb sub sarb fwait test leave out fist sbb (bad) xor fist cmpsl xlat outsb push sub enter (bad) (bad) pop outsb (bad) xchg ja mov call sub adc jle dec inc xchg dec fmuls stos sbb jl mov mov xchg push add dec test gs pop (bad) je scas lods xchg sbbl pushf scas cmpsl cmp pop (bad) mov lahf (bad) popf mov outsl lret sti pop aam or fisttpl addl arpl sbb add pop and ss (bad) loope ret pop push fiadd mov call xor (bad) je stos test jb cmp fs scas cmc pop add scas loop jo inc pop jle div or push pop dec and inc shr cmpb adc aam hlt inc mov dec sub mov xrstors sub add add push mov testl mov lods cmp xor jle pmaddwd (bad) repnz sbb sarb fwait (bad) mov repz mov (bad) cmc cmp pop jbe pop pop push add cwtl mov lret (bad) lock (bad) mov pusha negl out movsl cli decb jle sbb sti addr16 out or sub pop rcrb cmc jle sarl add nop pop cmp stos jnp jne sub jg sarb or pop and int inc mov pop pop push cmp inc cmp sub sbb aam leave pop in inc sub jmp and in mov and mov jae push fs pop push or out loop xchg cltd pop outsl push add pop lods push pop sarl add xlat mov out adc adc jmp daa add in sub imul xchg jle (bad) or lock or xor inc add ret or ret pushf int3 and out loop mov jle ret ret xor lahf sti sbb sti test lods sub daa xlat ja add std ret sbb and repz inc addr16 ljmp cs popf les stos aaa mull out in ljmp andl or lret and and xchg insb mov loope cld into popf jne mov cld mov cmp mov cli subl pop mov outsb out or (bad) sub fistpll adc fdivrp inc test or jmp jmp mov jle cmp cs or fsubrp das daa mov (bad) xchg xchg movsl stc clc or mov xchg xor mov cltd sti in push imulb dec popf (bad) stc ljmp inc aas (bad) and mov rclb aaa (bad) mov xor in xor dec (bad) mov ss es inc (bad) out inc mov es mull ret add cmp mov sar int cmp fiadd cmp push lods adc fdivp js jnp daa mov inc xchg int das (bad) fs push or popa lret xor mov push in movsl sbb jb add and mov jg pop or fidiv ret pop and xor jnp adc sbb sub pushf sub pop pop les loop lret out xor or push (bad) push arpl mov xlat mov call lds fildll call ljmp sub and sub add lods xchg mov outsb scas jecxz popl mov xor push jnp pop jbe lock movsb mov sbb (bad) jne inc movsl jge pop add mov jmp nop add cli jmp fcmove push inc imul enter fisub dec mov (bad) fadds lahf fisub push adc add xchg (bad) cwtl sarb inc xor stos cs pop pop pop mov bound data16 xlat mov cmp (bad) sarb dec mov cwtl push sbb xor push lcall fnop jb mull (bad) jne lods mov (bad) es inc outsb sub mulb pop das xchg and inc outsb lea or hlt out leave test aaa inc adc xor and push or into nop pop push cltd add ss repnz cs jb adc pop daa in insb movsb pop sub sub popf fbstp push pop (bad) jg pop mov sub dec or or and (bad) dec mov das add add jecxz pop out add mov fsubl add pop mov std mov and out sub push jo gs add shlb jbe mull push daa jne (bad) dec repnz (bad) out (bad) cli jp or push xor jge ljmp es insb add fidivl sbb dec outsl add add cs das (bad) mov inc loop clc divb and lcall fldcw add mov mov call push scas sub ret mov push data16 repnz iret stc ror sub adc add mov inc adc inc das mov aam push dec (bad) out sub lcall xor push popa add imul pop xor jmp in sub loop xchg xor jecxz mov testb pop lods jno mov mov out pusha out sub pop insb push je faddl fistpll outsl lret aaa dec arpl and mov out sbb cmp push add add addr16 cmp add call mov cwtl dec in dec int movsb ss jno mov adc mov out pop jp jo mov leave pop sbb add jmp aas xchg sti mov xchg xchg in pop mov aas dec push sti les out sub popf data16 pushf test inc mov mov cmp inc lods or mov mov ficom mov adcl fidivrl dec (bad) xchg xchg sbb iret fwait and daa (bad) mov jmp iret jmp (bad) popa push ret adc sub sub leave mov cwtl movsb lods jo fidivr (bad) (bad) jbe push into or xor cmpsl imul add sub (bad) lahf in cs inc or fcmove jae or add xchg and push fdivrl in shll or sti imul inc lret mov cmp loope sub into movsl mov jmp mov cmp push push xor movsb sub dec pop daa xor divb inc fisubl inc lds in add stc stos fs repnz pop adc or popa inc sub icebp sarl sarl jns movsl xor sub cmp int3 or dec add mov jo sub and mov repnz sub mov lret pop mov stos mov xor shr xor outsl int pop pop (bad) out mov dec call dec lods popf shl aam aas xchg mov pop ret or pop sub out icebp add mov arpl iret xchg lret push jl leave ja pop or and out dec push xor insb sub lcall mov cmp push or push jb jo loope jb adc movhps mov popf xor out fucom cmpsl loop ret sete sahf pop gs mov es ds cmpsb mov ret inc add or or cmc aas mov pop repz loop xlat scas push mov popf (bad) sub mov ret push jmp jnp ret dec loopne std xchg mov mov dec popf int3 hlt (bad) js or push jl or push push ds adc pop idivl jecxz dec lods jg inc fisub jecxz mov pop inc je outsb and ljmp jle nop inc (bad) cmp push pushf inc push sub cli cltd mov or mov add push push mov inc mov push sub pushf imul pushf jno dec das mov mov add mov adc aas dec mov mov ret or inc inc mov or mov test je les cmp mov pop pushf inc push xor dec pusha cmpsl (bad) mov frstor push cmp mov les test jle add adc mov (bad) adc mov inc mov cmpsl pusha adc fadd xor mov sub mov daa push stos lahf (bad) mov dec sub iret sub xor mov jge pop and xor mov pop icebp ret push sub adc dec cli sub sbb xlat xor (bad) cmc cltd sti sbb popa repz das test jno mov (bad) xchg ljmp rcl lret mov dec add add mov fdivs icebp rol adc xor and sti loop mov (bad) adc and mov jmp in iret aam movsl xchg mov add mov pop lret (bad) int or pop cltd cmp imul lret cmp pop outsb (bad) test mov in scas rorl cmp (bad) lret daa inc cmp xor pushf flds daa idivb sbb dec adc dec and and shl mov mov xor lcall nop rcrb cld ss push shrl adc nop mov ficomp fbld outsl scas push fistl and mov fcmovu das mov sub cmovp dec mov pop stc sub outsl sub (bad) xor popf dec xchg out rclb leave rol mov enter lcall cmp movsl ljmp fcompl negl imul jg (bad) pop xchg mov mov outsb mov insb je je and xor jp pop cmp lahf int3 cmp or jno and add mov outsl pop call jne,pn scas repnz and mov ja cmp in or dec repz (bad) fldl leave jnp icebp xchg iret xor (bad) sub inc pop dec or (bad) xor enter cltd push add pop lock into pop push sub int sub xor div repz mov testl mov imul imul adc xchg mov mov nop iret mov pop sub or dec lret outsb sub (bad) rcll clc cmp or ss ret fist xchg ret mov push in std mov sarl mulb js cmp iret aad popf xchg mov lods sub xor sub sbb push lcall sub mov lods lahf jno movsl (bad) dec and sub adc push pop adc test loopne test (bad) mov mov test ss or mov test lret xor push dec and lds test mov xor xor int (bad) incb cmpsb and and mov lret lea loop lds rolb sub mov icebp push (bad) push pop popf (bad) rcll jp (bad) adc adc stos sub popf adc xchg sub mov xchg dec add pusha mov mov add outsb out imul lods push div mov sbb mov jno dec xlat mov add xchg lds adc test mov push shrl lahf (bad) stos int3 lahf sbb mov pusha ret les and dec push repz dec or add mov pop js and data16 pop test scas mov xchg loop dec inc icebp repz pop push xor mov xchg cmp cmp push sub push and and jns int jp adc fsts fwait or aaa (bad) jp sar int ds add cmp das adc es ret bnd cmp out cld ret gs cmpsl pop push dec push mov imul pop repz test mov mov cli bound jbe push fldl fst sbb pop fnstcw mull xchg les negl and push push and and pop adc loope insb mov or cmc inc cwtl mov and inc arpl lock mov cltd stos xor cmp int in jecxz mov out cmp adc inc repnz xchg stos test lret dec call push (bad) aaa mov add shll mov imul jmp notb repz pop and mov fmuls push fbld push pop mov push inc xlat pop andl lret xor jbe push pushf sarl cmp push cmp push inc fild mov xor cli je add pop dec neg shrl or or (bad) outsb cmpsl test sbb cld clc adc pop pop mov cmp loop push dec adcb and rcrl mull xor incl inc inc xchg push jge fildll rcrl hlt scas mov sti adc xchg fsts dec jg,pt xlat adc pop subl inc adc popa in jbe push mov pop jmp mov mov stos test sub and andl xor mov dec inc xor pop jmp dec movb ja fstpt stos mov and mov sub inc sarl rorl icebp jmp and jle inc adcl add add jae push rcr pop mov xor mov sub push in adcb rorl les sbb sbb sbb cmp inc lock fcomps add add loopne or or leave mov sahf dec add test mov imul and push push mov test roll enter add ja insl push cmp adc not add shl push push mov add enter and into loope outsl inc mov inc adc mov lret dec sbb or loopne lock pop pop add add sub test pop pop mov (bad) xor or and pop imul in add sub fcomp push les idiv aaa lea inc pop or sub movb sbb aaa cmp cmpsl test and and stc (bad) jmp adc scas adc xchg mov fnstenv das icebp mov mov dec std inc repz push mov (bad) sbb das xchg ds sub mov pop pop (bad) repz jmp ret fnstenv adc pop clc add inc mov jns dec sarb push mov leave lret push fcoms mov inc (bad) cwtl adc pop inc mov das sarl sub inc call ja jle pop rcr wbinvd xor (bad) and in pop push test xchg outsl in inc push stos xlat repz adc (bad) mov dec and ljmp ss add iret (bad) sub movsb push (bad) incl add lret push adc mov daa sbb cli and add sub les jne fmul inc loop sub insb sbb sbb xor subb mov sbb dec loop in (bad) and clc jno clc ficomp dec mov add jbe bound ret scas out sbb xchg call stos scas fdivrl fisubr or inc cmp cmp ja repz ret in mov sub sti adc daa xor sbb divl dec sbb (bad) (bad) faddl dec (bad) out and mov adc xor aas mov sub push pop lret cmp jmp lds test inc add iret inc lret les xchg sbb xchg jmp and jmp sub adc decl popf xlat xchg (bad) aad add ljmp jmp dec in movsb stc inc dec scas adc push jnp cli xchg les jne mov push pop lds and fucomip adc pop sahf inc incl mov jle adc lods dec (bad) lods inc lret das js popf lcall dec iret lea jle push or pop dec pusha xor mov cmc add push adc sti jne sti sub mov add gs push outsl lods loop mov stos addr16 adc shlb xlat add sbb jge mov add movsl push out and stos ss mov mov pop out loop xchg repz inc test or pushf imulb repnz lcall dec repnz sbb (bad) mov cmp movsl lret sbb mov sarl (bad) xor mov stc jo xchg xchg dec mov push popf jmp mov or stc sahf leave push lock cmc das icebp movsl dec cmp sub pop jbe popf and test and sub mov daa (bad) out and cmp cmp inc movsl fstl mov inc aad in scas fcomps dec imul loopne xor add pop dec sub ljmp xlat and sbb ja sbbb inc leave enter imul mov push lods lock cwtl jp sub xor leave dec scas (bad) pop and push push je imul cmc push movsb adc lcall rcrl push push lods or inc out lds dec sub rclb sbb insb mov incb jmp adc inc cmp xor jg test lret sti add xor mov sub sub mov orl pop test xchg test mov xor clc (bad) test jg dec add lds or cmpsb mov mov and imul or sbb cmp in xor frstor jmp mov dec test mov movl mov or inc and leave enter push cmpsl and xchg pop scas ret fs mov fsubrs mov inc cmp ja sub mov fisttpl jb sub (bad) sub ljmp int sub jne adc fdivs popf pop xchg push mov xchg ss imul or pop xor mov sbb dec call aam pop jne xor es and mov in jae lahf xchg push push loop add pop int3 dec and dec (bad) lock xchg out std lock mov (bad) xchg mulb mov popa jecxz ret movsl (bad) adc (bad) div fstps inc out or add mov fnstsw dec mov icebp test add call xor cmp out mov out cld inc movsb mov jne scas popf loopne imul jbe bound fstps sbb loope sub push or and mov leave clc jge pushf std jbe push sub das adc dec mov xor out int3 rorb mov mov daa out pop into (bad) les leave mov pop (bad) sbb arpl xor sub imul movsb hlt ret je push mov test xchg jmp and add sub int mov lea inc push mov mov sub in data16 add mov imul movsb jae mov or mov shrl adc nop mov push pop mov pop mov push pushf xchg rcll scas fucom cmpsl cmpsb jns andl add movsl scas mulb push xor aam es dec out lret orl cmp into add cmc fnstcw movsb stos fdivr icebp mov fs repz jle and mov call inc lods popf xlat xor cmp aam sub std and cmpsl (bad) in sub mov xor xlat or push pop pop lret mov and scas stos jge dec push jns xchg sbb (bad) jnp or sbb je add idivl gs in in cld andb jl add push not outsl mov sbb mov mov out xor call xor add jne or loope das mov jge loope sub into inc sbb pop int or cmc inc notb stos mov jle vpsllq outsb dec add adc (bad) mov test jmp add (bad) fnop outsl xor mov push push fldenv jmp popf notl sub push add adc data16 stos lods add dec xor and outsb sub imul lahf sub sub or clc xchg lcall addl xchg out sub das sbb out jp out cmpb push xor repz sub push xchg mov jg xor mov or fwait sub insb cmp mov mov lret stos pop js lret frstor inc or fdivs idivb xchg mov decl or cli ret lds and imul leave repz int3 sub sub mov adc add mov pop cs loop xchg fcoms jmp ficompl in lods sub cmpsb push xchg aam adc sti lea mov inc add or mov dec mov inc ljmp into notb add mov fisub arpl pop mov ret sub or sub and and decb je repz and (bad) sbb dec fcom sarl pop pop jmp sub push shll pop push inc or adc out mov (bad) int add aad outsb and mov or dec cmp fucompp fstl sub and and rcl mov leave sbb and sub stc es pop ret xchg mov out clc outsb test push (bad) cwtl cwtl (bad) adc jmp cli fstl jp lods sbb fldl jge xor sbb xor xchg pusha fstpt orl imul jo mov arpl xor xchg dec xor stc cmp push in daa icebp cmp inc aas push gs dec mov and lret xor (bad) jno (bad) inc sahf dec add pminsw loope loop clc push push sub adc push jmp adc inc iret pop xchg sub jno push sbb lret (bad) stos xchg unpcklps or mov pushf sbb notl mov jecxz lcall enter jmp pop imul je (bad) out and or leave sub ror or add sub leave xchg or pop lret (bad) out lods cmp and loope sarl and xor and das xlat mul add mov shrb loop stos mov push stc jecxz test arpl ds jmp sarb xor rep mov (bad) leave mov mov pop ljmpw lret or push stc popa dec (bad) inc leave bound jns daa cmc ss adc sbb lods sahf repz cmp in mov mov sar xor lock sbb jp push movsb mov out mov ljmp sub arpl pop add data16 decb xor push xchg mov int sub rclb mov dec or pop pop loop (bad) push aam int3 jns or std fsin dec adc testb enter das push seta pusha mov cmp repz dec pop add pop add stos sbb cmp mov stos sub (bad) xchg lds pop iret cmp cmc leave daa hlt push or push sub cmp out lahf jae mov sti (bad) pushf (bad) std mov inc divb mov mov movsb mov lods mov mov pop and cmp push lcall movsb xchg aaa pusha pop mov fisubrl mov (bad) cltd mov lock cltd ja push rorl (bad) xor pop jnp or ret dec (bad) arpl xor mov aad xchg out sub add sbb mov sub pop or push xchg in push shrb cli dec cwtl mov and sub cmp mov sub sub adc mov pop add data16 idivl xlat xor call sub pushf jnp je test into mov mov ljmp lcall mov or xlat add in ljmp mov je scas gs xor dec in mov jmp adc dec aaa (bad) fldcw pop es jl fcmovb loope cmp sub gs scas xchg fidivr jbe das mov lcall gs xor pop fcomps dec shrl and mov ljmp jns mov and mov pop add push (bad) imull cmp idiv gs popa push jmp in add imul lods pop mov cld divb add or clc sbb clc jb idivl push inc jge fidivl fcoms cwtl dec mov jmp xor (bad) inc shr adc fidivrl and cmp movl gs test lds fist mov xor iret (bad) ss out dec mov jo loope stc xlat in cmp push mov pop clc lock adcb (bad) jle or or js pop out mov pop scas adc rorl pop (bad) jno add cmp scas cmpsl cmp push fs out sub enter xlat dec test icebp ljmp insl push or popf std and inc mov pop cwtl les push mov icebp dec std out xchg mov xor roll push pop and jmp sub lret jns or fistpll or jbe (bad) mov jl push add (bad) xor dec mov iret mov das pop adc lret xchg fdiv int3 mov notb ljmp push sub lahf pop sahf arpl mov pop inc rcll sar xor ja cwtl pop shrb loope aas jne int push and shrl sub cmp icebp dec dec xlat int3 sbb popa xchg pop mov xlat mov cmpsb movsl negb sbb ret and add jle adc stc mov adc out adc loope sub aam sub and and add enter mov out adc cmp pop sbb into pushf and cmp sub fs sub pop inc mov mov mov xor pushf in loopne jne insl xchg add or pop xor mov outsl fs (bad) mov repz int jg sub dec repz dec mov and push into test cs cltd daa rorb pop mov rcll mov xor pop adc mulb sbb ljmp pushw (bad) cmp xor roll push ds xchg stc mov enter mov ficomp fistl xchg pop and adc (bad) lods fistpll ja mov in xchg iret sub xchg push xchg aam sub xor ret arpl jne inc popf pop cmp dec ja push inc dec test decb popa push sub pop mov lret in in adc sti orb nop hlt popf fstl sub fidivr call dec aad mov sbbb pop std out push daa ds negl add hlt add sub xlat dec gs sti test mov cmp mov (bad) leave pop out and mov sub jecxz icebp popf dec rol and ja,pt out sub mov push aad xacquire clc mov inc and nop aaa cmp in xchg pop stos imul hlt sti popf jno dec iret into (bad) mov pop pop (bad) adc pop in inc pop shll add lret xchg mov sub or lret fmull sub cmp daa ss mov je iret dec decl pushf shrb sbb add imul mov and jbe (bad) test (bad) mov mov ret adc xor push mov xor notb mov test dec pop adc popf clc sub xchg inc cld add jo das (bad) sub mov leave xor jo mov xchg jg mov das cmp or and mov imul lahf adc popf push mov incb lret data16 mov es in adc ret jl out adc (bad) call dec idivl jge xchg ljmp xor sbb push mov icebp and xchg or cmc push daa xchg inc setne dec jmp lret dec push loope mov lcall popf in adc adc xchg xor pop xor add pop sbb hlt icebp xchg (bad) not stos xor scas lret das mov cltd sbb call enter call add idivw sbb cli and test fistp sub adc outsb je xchg sub pop adc inc and lods cmp loope pushl mov out and or notl lret mov push mov and fimul stos notb lret int (bad) mov push pop add stos into jle call mov mov mov add pop mov push adc std (bad) mov (bad) out inc push mov iret ss jns cwtl xchg scas pop shlb sub out (bad) jae lcall cmp aaa leave (bad) cmc sbb call fistp test in cmp pop jecxz ds (bad) cs fbld mov sub in sub add aas rcrl add mov sub push out (bad) lds shr xchg out jno imul leave je and pop movzbl stos fimull dec jmp jnp add call and jmp bound cli xchg jnp xor dec mov mov add (bad) jmp and xor mov pushf lods (bad) cmpsb jmp dec push mov not cs inc pop mov sahf and xlat mov mov jne negl xor cmpsl fsubs fwait data16 hlt arpl nop ljmp mov in jle test fbld pop leave push insb inc sahf (bad) jmp jbe or ljmp xor xchg out jne mov inc sub sub or rcrb lcall sbbb ret pop adc sub testb in arpl and jl das cmp push daa xchg int3 xlat stc ss adc das add outsb in xchg dec out adc sahf push push stos mov xchg jmp adc add and decb out out sub cmp mov loopne and lea cmp jo icebp mov or ds push and movsb jmp mov daa icebp pop inc insb xchg jmp mov lock mov test xor add dec sub inc jnp dec dec out xchg lock and cmp mov std jb cld fmul pop popa lret lret pushf push add lcall and mov mov cwtl mov fldcw sti xor mov lret mov stc xchg repz sti test push sti cwtl (bad) divl test push jb jecxz daa pop jne stos push icebp bound push jg ljmp push push mov jns push call and std and lods into inc cltd pop scas fadds mov xor clc jecxz sub ljmp mov add and std sbb loope sub or repz daa decb cmp jne mov mov push dec xor add sbb sub hlt mov jae cmpsl inc and sub push dec test pop pushf (bad) mov cli cmp mov cltd mov bound push push icebp dec and pop stos add pop pop aam mov mulb imul and pop jmp push mov add inc mov xchg pop push jo xor repnz scas pop imul les inc jb mov add mov arpl xlat dec outsl mov loopne aaa cmp nop sbb pop push out test inc or mov sub pop mov dec or xor sub (bad) (bad) out mov test shr lret fadd xchg aam gs add jmp or sbb or (bad) push mov mov xor sub insb jbe cmp lods repz mov into or or mov lods pop or mov (bad) pop mov or mov xor out das (bad) pop mov fidivr insl test inc cmp ret mov jle out mov mov mov mov adc add fistl (bad) or iret adc jmp (bad) icebp cmp (bad) adc mov in sub dec rclb jge (bad) dec mov sub mov push js xlat mov pushl repz adc inc mov xlat cmc jae das ja repz pop (bad) lret sub mov sbb mov fnsave pop (bad) outsl test leave (bad) push xor sti add ret or idivb into jp push pop out pop xor jbe and sti jno test pop mov mov ss pop movsl (bad) (bad) adc or out and pop xchg ret sti sub outsb add add add pop add nop dec movsb xlat enter icebp loopne cmc mov add insl inc add push aaa imul scas mov test adc inc mov scas cmp push (bad) jle push mov add push xchg sti lret into push jl add ja cmc lret sub (bad) or pop enter cmp cmp cmp mov cmp (bad) sbb or sub cld movsl push adc (bad) shrl sub sti sub dec adc lea arpl mov in mov xchg out dec mov pop (bad) scas lret mov sub jb cs or and movsb out pusha lret in and pop pusha sub push or and mov mov mov cs loopne push je mov je pusha push mov insl xor inc syscall in pop mov das mov add push push ljmp and push cwtl cmc jl in push call pop (bad) mov popa not push outsb xchg cli xor test lcall pop sub jae cmp adc adc add jl xor insb xor or test cli lahf loopne out stos or fcmovu cs adc jo mov ja mull pop dec (bad) std inc adc fsubrs mov add stos (bad) (bad) cmp and pusha jp sbb shlb out pop push mov push pop mov shr inc cmp xor jle movsl stos and add cli pop push mov insl mov jle mov and (bad) btcl jo repnz sub inc int mov lock cli ret pop mov test mov cmpsl adc jg xchg aad cltd cmpb add mov push inc mov ds sbbl scas je and push mov cmp add mov fsubrl pop fdiv xadd adc sub shl mov adc xlat (bad) loopne shlb mov xchg loope out popf sbb leave xlat stos fidiv or sub add cs lcall rolb addr16 or out (bad) test pop pop sub mov mov arpl orl lret test pop and xchg insb test xchg push pop xchg mov icebp aad mov (bad) cld (bad) mov push xor mov push loopne push jle shr mov loop add cmc pop cmp inc jp rcl and push repnz in add subl add adc jg mov mov in mov jge add cmc loop jb jecxz dec push mov push das pop push cmp jne mov and loop inc push sub adc mov xchg pop push (bad) icebp mov loop xchg out mov xchg fstps shr or into stc and inc fldt (bad) lds sar jl push call mov outsl sub pop movsb sti lret or bound dec add sub or std out jmp mov mov add stc xor ds sbb daa push lret inc inc mov sub and sub test ret fildll jg in mov daa and loop cmp addr16 xor xor mov daa ret adcl lret or addr16 or sub decb outsl cmp sub jmp sub cmp sarb mov lret dec iret data16 cld or cmp lds xor push shll movsb mov and addr16 pop insb or rep add popa cmp stos dec repnz int3 mov jns dec and out add xchg mov aam iret xorb cmp cmp out fist jno add gs les repnz lea out mov sbb icebp cs mov and xchg sbb push or out mov or test pushf cmc outsb pop cmpsb pop outsl adc jmp aad out dec (bad) mov out loope add add xor push mov loop cmp popa sub mov xor fwait lds hlt xchg in ss out sbb mov xor notb out jl jecxz mov push dec or add movsb dec fistpll or pusha pop or dec cli mov (bad) sbb (bad) daa out icebp int3 dec sub ret cld dec leave push cltd and sub cmp dec mov push outsb stos sub mov pop das xor push mov daa jecxz in and push fldln2 cld sbb sbb clc add out cmp dec push adc daa mov push aas mov aad inc inc pop xchg inc inc popf je cmp scas sub lods scas mov or idivb mov cmp scas std xchg mov mov mov add pop sub pop int cli (bad) inc inc add adc xor repz divb mov lahf push xlat push and (bad) xchg clc shr mov cmpsb jecxz arpl inc push adc push mul mov loope jo or adc popf rcll faddl cli pop fisub in push mov add mov dec mov inc imul je sub adc jl push stos ljmp or cmp sub adc leave jnp or push or xchg sbb fucomp xor push shr jnp mov incb lock lahf mov loop mov (bad) mov xchg std sbb insl adc leave mov mov pop xchg inc cmp push lock pop and aad cmpsl leave dec lods mov imul or xor clc sub js inc stos lods add push cmp adc and xchg outsb xchg dec pop xor mov ja lret clc divb sti or and push (bad) call (bad) repnz out out push pop repz xchg adc sub (bad) xor sarb in pop leave call sub mov xchg cmp xlat add sbb xchg incl jp sub pop xchg popf (bad) jg mov mov daa xor loopne pop das and mov out ja lret pop xchg or pop out cmp xlat mov jle jmp rclb test cmpsb push (bad) xchg movsb jno jnp out rcll test hlt or inc xlat inc iret mov jnp stos ret scas cld out cmpsl in cmpsb sbb cmc repz movsl push enter dec mov and add stc in or mov pop push sub cmp test adc add sbb pop iret push lret aad movsb mov call jne pop rorl dec pop mov pop mov adc xchg pop jg xchg mov jnp cmc out cltd dec inc mov pop pop gs push mov xor xor push or pop cwtl ljmp or or xlat fisub inc mov adcb aas out pop xchg fist mov test out mov (bad) push cmp test push sub js sar loopne push push xchg adc pop adc add aaa (bad) loop stc push push push xchg pop pop push add sub sub add mov jl xor jns or arpl pop add sti or das xor scas sti pop cmp cmpsb xchg mov add pop inc mov pop ss sbb dec push stos adc jo das adc add notb pop sahf iret pop adc mov push pop sub and dec xor pop sub xchg push mov dec bsf jmp cld jle lods sti jbe lret test in rcrl mov jg leave add cwtl jmp sbb rcll mov sbb and jmp sbb (bad) mov jg aam mov push mov negl and jg fistl add test or pop out pop add rorb adcb adc hlt insl adc test add scas ret jne or dec fisubr dec stos (bad) sub movsl popf push cs sub mov jmp popf jecxz movsb jae xor mov or jnp scas adc (bad) repnz xlat sti jns loope cmp lds or gs in (bad) stos dec or fwait data16 dec cmpsl jne inc xchg pop pop pop insb enter (bad) ja or mov daa movsl jo pop mov xchg stos and test es lods aaa pop insl add add stos jmp std (bad) cmp enter xchg fstl sbb and out rclb sub xorb movsl leave out xlat inc aas das int3 cmp stos mov imul dec and mov emms int3 rorl ljmp pop lret addb (bad) jne mov cld ss or cmp mov test mov (bad) jmp dec cmp xor stos mov (bad) mov xor pushf adc mov mov or mulb jnp scas call mov and mov outsb add push js fwait push daa je fs lahf pop das and jp sbbl stos mov sub mov mov lret (bad) mov fnstenv repz dec cld cli leave push testb xor scas add push pop push push push push push add or aas pop mov sub (bad) roll jmp add faddp mov pop sbbl push pop inc add (bad) ss add cltd lahf push cmp xlat jb rolb lods popf xchg pop add xor int cmp or xlat adc mov xchg adc in clc leave loope mov xor add jnp xchg push mov add repz leave shrl insb jp pop jno push and xchg sarl (bad) push mov addr16 mov ret or xchg daa inc jno mov aad into push dec push adc loope insb imul mov sbb mov dec mov mov lock mov xor jne in pop mov add cmp test fisubr add add sbb (bad) dec pop mov push and mov divb push and add mov cmp popf movsl jge xchg shll ret sbb or adc call test sub sbb in and jl push mov jg xlat and xor add push mov pop (bad) fmul dec loop sub lahf pop push xor cli cmc out mov push inc sub cmp inc inc or add lahf push xchg push lahf gs daa sarl je push testb in fcompl daa or repz or pop inc jl and jle pop fnsave xchg add xchg dec cmc leave inc insb mov fcmovnbe popa loopne ljmp sti mov xchg sti ret pop sbb shll mov popa mov das pop cmpsl je lds mov cmp xor clc mov cmp xchg xchg push xchg jg jg push (bad) lods insb lret stc cmc ret xchg lock add pop add arpl and loope in push scas jbe rolb sub neg cmp sub int shlb pop push cli lds dec sbb push mov jge push xchg add sub shrb into inc fsubrp mov dec jmp xchg jecxz jno dec mov jge repz into push xchg daa xlat inc hlt add bound hlt pop jmp and mov mov lods mov js mov dec xchg xor leave iret rcrb pop xor mov xchg das and jnp and (bad) sub mov jbe push mov push adc sbb jg jb repnz xchg out pop roll mov dec ret scas cmp fadd xor pop scas int sub ret mov js add cmp mov stos xor dec rolb push fnsave dec and mov pop out and leave xchg jnp pop icebp jmp and iret scas mov xchg cwtl dec ret stos cmp test push mov stc jmp mov test pop subl push dec xchg adc cltd loope cmp jbe mov push and adc sub mov ficoml sub jo jmp pop add push push (bad) mov icebp out adc mov adc dec hlt sub jge push mov or (bad) mov daa or ja or sub pushf lods inc sub dec xlat jno leave mov decb in mov repnz pop dec in jns testl fimul rolb fidivrl je divb or sub xor jne mov and dec lock inc mov add or and push roll ret outsb mov out cs (bad) adc xchg mov jg mov dec js xor xor sub sarl rol dec pop test sbb sub or cmc cmp aas push inc incl mov dec (bad) jns inc add std xor push imul mov rcll cmp repz in imul and or xchg dec inc js mov push sarb jmp je repnz sub or mov icebp and icebp mov push add xor std sar sub adc mov xlat or addb mov scas push jmp int mov sub xlat int3 jae sub sub pop arpl dec xchg clc (bad) pop popf arpl fcoms test jmp mov ds sti imul (bad) mov add pop sub sarb loop push xchg sti mov lretw or adc ss lds jb (bad) (bad) mov or das or (bad) pusha jmp xlat fild add dec ret incb xchg cli mov shrl mulb xor ficoml icebp push dec or (bad) xchg sub xchg fdivrl in xor lock jp loop mov std xchg jae add sbb cmp cmpsb sahf cmp fisubl pop out scas pop js inc mov push test sub loope and mov mov and or fimull fs lret mov fstps rcrl mov lahf xchg jae (bad) and xchg dec jecxz or fdivs fsubl xlat mov inc jmp mov imulb ret and fcoms jmp int3 pop sub push lret jmp out sub ret dec jmp scas mov bound ficoml bound repnz lret inc (bad) add sti fsts xor mov cli lea lea mov loopne mov fs mov xchg lret cmp push andl cmpsl push inc push dec ret test add test jb clc pop repz mov dec sti into and (bad) mov pop out cmp pop sti stc xchg je or mov outsl les jecxz fs stos testl repnz push mov loop xchg aad imul (bad) aaa test pop (bad) dec loope lret in movl xor pop xor imul xchg mov jns lea mov or sarl test mov mov popa sarb (bad) push add mov mov add push fisub shl sub push cmp mov repz sub das add fldenv loop nop lret fs out mov (bad) cltd or add push into cmp cmpsb nop lret adc sub inc pop or xor rclb and outsl cmp sub stc mov outsb mov lcall push xchg xchg mov sbb int3 cmc push sbb cs in movups into or rcrl or xor mov mov push sbb xlat mov xor outsb imul dec lret stc inc movsl pop add shrl (bad) mov inc xchg mov or mov mov fmull inc fbstp hlt and dec stc bound cmp ljmp or mov adc xchg inc das les dec or imul aaa xor clc xor mov rclb push mov into xlat cmp test and ja loope xchg cs mov adc rclb push push stc into push mov push mov pop xchg pop mov xchg add mov mov pusha add dec mov rorb test push xor pop int lock imul or ss adc negb jl dec push pop xor push push jno jmp dec mov enter add push sub pop les lahf sub dec push enter lret dec mov repz push push or not push jecxz push or add fist push mov (bad) sub pop xor pop nop ss xchg xchg stc add mov hlt test cmp mov sbb jae loopne jmp add push rol mov shll add jecxz jb hlt push push mov cmp sahf ret jbe fldcw hlt sbb push push outsl fbld ds daa call mov add pop xor pop inc cmp or outsl negl lcall sbb sbb scas or sbb push nop jae scas stc and sub mov dec jmp sbb idivl xchg ret or xlat out pop pop mov dec (bad) mov sub pop xor add adc sub sbb decl cli and stos or idivl push dec push and fstpl fidiv cmc and in push dec jns aas ror jae imul (bad) jle ret add add and mov jg stc ljmp or sub jae pop jge ficomp pushf adc out add xor rcll adc not in add xchg adc jmp or in sub fidivr add adc pop mov imul mulb loop daa or cmc mov aaa aaa add inc and push push push dec jmp dec mov lock jmp add repz loop ja sbb inc sub xchg cmpsl jb mov xor jo lahf aam lret sahf xorl negl mov or mov notb (bad) cmc xchg push test or sbb cmpsb jae mov add sbb addl std xchg stos adc cmpsb sub push sbb xor (bad) xor sub dec (bad) xchg (bad) mov movlps sub or sti and popa cmp out mov jmp enter cmp repnz xchg loopne repnz repz hlt sarb adc sti and and jmp and and jnp inc cmp ljmp or and add xor cltd push scas or fstps cmp jecxz daa sbb cmp das and lret std add imul lcall enter jmp test mov daa mov setg push mov lcall iret sub lcall fidivrl sub mov mov insb cmp fcoms push out cmp jg jg sbb push jae scas jle movsl adc mov ficoml mov xchg dec loopne jae loop pop out xor scas les sbb mov xchg ljmp and ja push out stos cld pop mov sbb jl pop stc fadds sub xorb out jge ljmp or lahf sbb rolb lds subl and ja pop xor lock add scas sub lods int3 test push sub add push sub sub cli mov xor imul enter jns jmp sbb push stc inc daa (bad) aaa xchg in imul push mov in mov lret sti fsubl ja lret es idivl dec ljmp mov xlat adc cmp out or (bad) pop adc cli fnstcw adc subb mov dec push jns lods (bad) xlat jne popa dec iret test mov daa mov addr16 push ret inc jmp mov mov jbe imul scas lret lock xchg ror sahf fs sbb add mov imul and adc mov push stos ret mov xor push cli (bad) mov xor pop jmp or and testb fidivl mov fldt into das and or ljmp push (bad) dec push dec push enter mov pushl inc add mov adc daa xor fdivp push outsl bswap adc jnp sub push or test mov out adc pop sub adc gs daa jne (bad) lahf hlt out add cli mov das into mov or xor jno dec jbe pusha ss adc das push xor jle out xor ds dec xchg in mov lret dec loopne out adcb out xchg les mov (bad) mov int3 and cs sti mov test pop lods push pop loop xlat mov and insb imul sub jmp aam stc pushf sub fs mov mov sub sbb nop insl je jp jns inc add xchg jg sub movsl rol xchg mov adc ljmp stc xlat xchg repz push (bad) xlat fldl adc jno xchg push imul push roll add pop sub sti jb daa rcrl pop pop scas sub lret sub xlat sbb sub mov repz imul xor pop shlb add sub mov fwait stos imul stc cli negl stc or test enter scas jmp out pop push mov (bad) or fwait mov in adc mov xor cwtl insl test sub xlat adc int iret cmc sbb and or rep sub adc scas lret js ret pop inc inc add mov xchg cmc movsb mov inc out jmp (bad) (bad) divb jle ret int cmpsl (bad) je jp imul pop outsb sub jle push add pop sub test jmp mov mov sub iret out adc popf pop add (bad) repnz mov cmp rolb mov jne int3 add mov inc jbe rolb ret push mov pop or jns xchg fadds xchg lods dec bnd fdivr out and loope or jnp hlt fnstcw and xor (bad) aaa and movsl dec out mov mov sbbl adc aas in or jmp iret push pop int3 push sub roll movsb mov sub movsb out fcoml xchg jle pop jmp or xor out popa add mov mov xor pushl lock mov adc or lret sti je ljmp xchg ret nop popf aam call cli sub leave movb or (bad) cmp stos fldcw aam xor (bad) repnz xchg std stos sub jp pop dec jno mov fstps fcoms xchg test inc pop pop mov pushf xor jmp scas lret daa dec mov aam cld add push (bad) fucomp jbe js les dec mov rclb scas cwtl pop mov adc (bad) add rorb mov lods push pop lret faddl pop cli pushl mov or push mov sub and cmpsb js xchg fstpl push jmp and scas dec shlb lea mov in mov mov dec pusha sub or jle pop divl movsb movsb jmp ror pop stc jmp testb mov cmpsl pop mov cld push dec test aam push repz inc shlb lahf fnstenv movsb mov lret mov sub cwtl test fsubrs xor pop lods fsubp fs daa push sti fcompl cli lret out cwtl sub cld jmp xorb test repnz xchg int3 int3 add je fisttpl push and clc or and jbe cmp das icebp dec movsb in pop movsl and imul pop dec inc xchg jge fwait stc sub ds out mov (bad) jns bound push call sub and mov mov push ret aad push sahf in xlat xchg sub into scas sub adc icebp imul and mov imul fbstp dec lret fiadd lods popf and sbb xor jnp cmpsl fwait outsl rorb push xchg fisubl xchg jb jmp (bad) out bound push (bad) (bad) imul or popa test ret clc mov sti cs pusha icebp or sub xor sti xor cwtl cs adc in mov dec lret lret les push jmp icebp or pop mov mov dec cs xor add sub add (bad) es sbb sub jg mov testb (bad) push punpckhdq and adc or push clc sub ret jnp cmp imul dec (bad) (bad) jle add add lahf dec push dec rcr cmp (bad) mov movsb and push push inc sbb bound icebp rorb notb push or je stos cld mov cli mov xchg into push pop push test incl scas data16 jle das icebp add mov stc xorl out jnp xchg out fsts mov sub gs out jns dec fsub test gs xchg xor jno mov ret mov (bad) call jmp jp addr16 stos jno add mov adc (bad) adc iret std mov ljmp sub aad xchg decb out addr16 add mov add adc cmp mov or push xchg mov jg cmp jmp ret mov popf xchg shlb push (bad) lods cwtl and icebp add jle or mov lods mov arpl push outsb dec push pop shrb imul aad add sub pop mov adc pop or adc xor cmp cwtl cltd add jb xchg jg mov lds mov push mov clc mov or stos push into popf push ret and dec dec sarb inc cmp (bad) imulb sub rorb std xchg adc sub cmp dec cmp pop jmp or cmp push ret and std cmp dec enter pop popa dec xchg mov xor mov sahf sub fldenv push xor xchg fsubrl push push bound call aaa or add rorl shlb pushl out out push daa mov pop inc adc lods das outsb scas test pop xor mov mov (bad) cmp adc pop lret xor clc mov cmp xlat jle mov ficompl (bad) cltd mov or mov mov mov jp inc sub mov or out mov xchg in sub cs jg ret pop daa mov adc push imul aaa and je imul repnz cwtl in movsb dec dec pop mov ret addr16 in pop rcll jp sub (bad) js dec negb fnstcw add and adc mov lret cli push (bad) jp sbb mov ret testb repz stos sub cmp pop mov dec push dec ret das push or dec cli jle pushl lret ret xchg mov ret (bad) xor xor or pop push mov ret push lds mov mov jecxz add scas (bad) push out subb mull cmpsl xchg stos int3 push push cltd in gs cmp shrb jg add dec sub iret rolb mov sahf push fisub cs jmp aas mov int lcall cmp in xchg daa sub jge push in lock dec cli jae and mov sub mov sub sarb das mov jne push or in imulb repnz into adc loop popf xchg jmp mov add and repz push and mov movsl pop inc and xchg mov inc sub lret jae jbe inc xor and repnz or push or pop mov and loope sub xchg and cmpsb outsb sub xor clc xchg (bad) mov mov cwtl imul xchg sti (bad) mov fstpl sub shll shl mov repnz movsl mov rcl leave dec dec enter or ret sti adc repz call out loop test and push dec mov adc sbb xor scas mov pop cmc mov pop xor xor mov out cmp das repz in daa sarb mov jmp or or mov pop (bad) int and stc xor mov or add int cmpsl dec inc mov adc xor (bad) sahf dec js push popa push or aas std inc in mov mov or xorb sub adc mov stc rcll bound or inc ret fs xlat pop scas xchg pop sub add fsubs sub adc cvtps2pd ljmp xchg loop xor pop pmulhuw inc mov movsl in pop (bad) icebp jle sub daa dec (bad) enter fwait dec or rcl repz add fadd (bad) mov mov shrl repz addl repnz xor in push pop mov xchg pop clc cmp or mov sbb cli or adc mov icebp rorl sub mov pop outsl jmp mov sub adc add pop pop stos ret xchg xchg sbb mov mov pop xor inc xchg sub jne push jmp aam loope insl jg lock and mov movsb push mov add mov test pop mov orl rorb cmp pop movsl aas pop call dec xchg mov inc fisttp or lahf shll dec jne inc and sub in xchg lds repnz and int3 xchg jmp ret (bad) jno or or add int3 in mov adc xor int out (bad) scas jecxz sub adc mov dec test test loope mov lret icebp aaa mov xchg inc in fstps and repz xlat (bad) cmp or xor xchg scas mov (bad) sub add xor mov adc out lea cmp dec ret andb cmp xchg lcall cltd stc cmp idivb repnz ret and data16 std mov aam adc insl dec testb movsl dec cmpsb mov cmp ret int3 jg pop in ja dec sub lahf (bad) ds mov or mov xor sub pop icebp jbe push and dec sti (bad) std inc shll pop or movsl (bad) (bad) imul pop push hlt lods xor fstl sbb inc out in or ljmp xchg lock das push scas mov and dec xor ret or push and rorl inc lret xchg out sub dec sarb xchg std and mov movb cmp push and (bad) mov cmp out mov or cltd and or and shlb nop mov xor add mov xchg mov mov insb es mov rorb sbb out das xor enter adc or pushf ret jmp sub (bad) out mov shrb out adc sub or pusha cmp ficom leave xlat jno out xlat mov inc mov mov jmp imul ret pop into cmp into out jb pop je push leave fbld repz pop add std rcl cli ret stc mov mov icebp xor mov pop cwtl cwtl ficom (bad) mov (bad) imul pop push orl xchg clc int insb mov fbld and lock pop mov leave mov cmp ss push push negb xchg xchg ret xchg mov loop lret (bad) adc jb or lret pop mov sub das jmp fnstcw ret bound jecxz into or pusha mov stc pop repnz int3 das inc movsb mov das (bad) ja cmp cmp or jecxz (bad) and sub mov lahf lahf push mov sub xchg xlat jno inc pop iret outsb dec inc dec jecxz pop and mov out mov pop ljmp pop ljmp popf insb lea cli pop sbb rolb pop lahf push push adc push xor xor subb popf xchg outsl jne inc (bad) mov aas mov lcall cmp repz stos push lahf (bad) iret cmc cs inc imul mov je lret lret cmpsb das mov mov mov out aas mov stos mov xchg leave pop insb mov mov leave jecxz adc mov aas dec bound mov cld xlat mov outsb sub ljmp xchg jle pop xor cmp xor xor xor push sub mov jno xor testb out mov xchg in xchg and add cmp pop cmpsl leave (bad) sub add sbb (bad) cmp jo inc xor (bad) pop jp mov imul mov bound mov pop sub dec gs out repz or mov add push sub scas repz std add pop add aaa fs (bad) jne dec mov mov or push outsl dec pop jbe push push cmp lret lds lret xor mov fcmovnb ja imul stos fs mov xor xor or imul sbb xor cltd or enter lock mov pavgb enter sub cli adc ret xchg stos inc fcom mov outsb mov adc loope leave push push mov xor arpl mov sub ds sub icebp mov xor dec movsb cltd (bad) mov sbb mov fxch icebp and sti jmp cmc lret mov mov cmp jg pop shrl push cli dec mov and cs sbb out inc ret fwait mov das decb pop repz xchg pop scas jecxz push test movsbw jbe std bnd test push jmp daa lock sahf xchg adc xor std ja fisttpl pusha mov push mov jle mov std (bad) and movl mov mov ds call hlt inc and push push jge movsb push std outsl cmp xchg outsb not mov add fidivrl cwtl cwtl adc cmpsb add push repz sub (bad) mov or cmp push flds adc jmp fnstenv rorl adc lea cmp pop shrb mov mov aad daa pop lret test adc cmp dec sbb out mov xor inc add mov xor inc lea push out aas (bad) jge movsl (bad) jbe rcl xchg push push pop (bad) or jg mull shll or pop lahf pusha out leave mov push mov stos out and or lds mov push mov mov xchg fldt cld push mov in xchg jle push add rclb sub lret jae aad xchg cld mov cmpsb mov les ret push add fcmovb loop push icebp fisubl add inc mov jmp fimul jecxz (bad) xor pop pusha and jecxz nop cmp inc mov ja les dec jg int3 jno pop add or insl shl push mov jg std adcb jge aad (bad) push lock xchg add rorl cmc es vmread shlb push mov pop cmp jne or bound popf mov sbbl cmp (bad) aaa gs and fimul xor int jbe loop push (bad) mov loopne repz xchg pop mov mov leave roll and pop mov push in sub in xchg dec mov ret clc in mov repz mov (bad) xor sub mov mov sar xchg push sbb (bad) call jmp xor and jne lods xchg (bad) xorb shrb pop xor xchg std inc scas lods int3 xchg and vunpcklps std pop mov out adc add cmc arpl mov cli and pop clc ljmp add push push cli ret aam adc mov popf je in (bad) mov xchg stos cmpsl faddl and mov shrl movsl std xchg mov or sub pushf push and fnstsw add call sub movzwl lods jbe aaa mov sti mov fs cld movsb mov dec jmp cmpsl xchg jmp (bad) mov daa cmp popa mov aas mov cs cs pusha mov or and sub pop xor adc clc xchg jmp mov ffreep stc or xchg or or xor inc mov out popf test xlat mov fcmovbe aam mov lods mov sti lret dec sbb adc fcmovu sbb out lret sub and cwtl rclb leave ljmp and in rcrl out and sbb jae add and out clc pop mov lcall stos out mov aad sahf lods jg and jmp push ljmp js mov add and addr16 out addr16 popf xchg jp out push rcrb adc loope sub mov inc inc lret stos lret push or dec (bad) cld jge out lods dec repnz (bad) mov inc repz add call ret push enter out lea xchg mov gs scas inc or and (bad) adc mov out pop (bad) jne in fiadd pushf enter shll dec push push in jo dec idiv lret xor lret imul sahf nop cmp add add cmp xor retw (bad) roll notb pop ljmp jae out adc lods jmp mov cmp movb cmp stos bound push push adc add xchg dec xchg mov jecxz lret mov shll mov jg cmpsl imul lds mov push inc popf mov call jmp mov stos lahf idivl setb pop xchg (bad) jmp mov or dec jp (bad) mov ret mov ljmp or std xchg sbb into and (bad) dec xlat inc pusha xchg sbb sub dec pop pop sbb ret cmc mov ficompl lahf (bad) aam fisttpll xchg sbb xchg (bad) inc mov out adc xchg iret inc cltd rorl arpl xchg lret cmc in das cwtl mov (bad) popf mov cmp inc (bad) adc adc repnz xchg lds lret xchg (bad) dec pop sub aas cmc (bad) shrl dec jne push inc ljmp lahf hlt mov rorb stos mov inc test sbb popf inc (bad) push xor mov (bad) mov adc enter mov push xchg stos mov mov and push cld xchg sbb sub arpl loop xor sub and jne jmp sub les push mov shl and mov aam rcll test mov cmpl repnz dec push inc imul loop pop (bad) xlat stos or into adc ret mov rorb xchg in scas test cld mov cmc jmp fwait xchg adc icebp cmc fs movsl adc daa sub adc and in push inc mov mov popf (bad) jne adc xchg lock movsl mov int inc orb roll ja pop into adc bswap iret push movsb cld arpl rolb test pop sti sub jle out push and mov das sub out adc xlat test cwtl jecxz dec repz lds (bad) mov add test movsb cli lods push mov push mov xchg leave cmc addr16 testl mov fmul and scas mov add bnd inc mov ret fimul pop loop sub cmpsb divl neg mov jl (bad) jmp mov je leave push je push mov bound lret (bad) repz lcall ljmp loope mov push jns dec inc sub shll xor daa and lret lahf (bad) sbb pop lock xor out pop xor fldenv sarl ja pop dec aaa mov add test mov pop push and imull sub inc xchg scas or lcall jne lret lret js mov scas push xor sub out lods (bad) mov pop dec sub push sbb sar int3 ljmp into notl add inc xchg push xchg push pop sbb rcrb (bad) les push stc mov xor sub or jno cmpsl movsl inc mov inc in pop sbb jnp cmp jns leave insb cmp jno mov ficomp pop dec (bad) test outsb aam sub enter xchg or fcomi sti ljmp sub xchg out mov sti lock sbb (bad) jge nop sub xchg hlt xchg sbb ret sub (bad) push pop mov jle das cmp je out jmp int3 out xor jne xchg inc sub imul push fstps inc adc gs cwtl adc dec out imul push daa jnp cmp mov faddl fisubl pop adc cltd frstor and dec mov je jmp sbb mov pop lods mov (bad) xor pop pusha std inc adcl ss mov jmp subb add sub xlat and sbb and es sti out adc repz adc sti in push (bad) xor or sub and sti (bad) mov outsb fcom add mov mov lds rcr cmp mov and xor push xor mov lret xor mov jge xchg adc out fs stos xor pop out and into les movsb jbe adc jo mov outsb out fstl test xlat insb testb add pop xchg pop mov inc mov dec cmp inc inc (bad) imul jae and (bad) or inc add mov fistl and or nop adc and adc sub xchg sub push or pop and dec loope (bad) int jg pop gs or pushf pusha aaa dec mov sub pop lcall fs push and pop cld stc rorl lods sahf inc scas sub dec jecxz bound inc sub pop jne mov pop popf aam ret cmc jae mov mov mov out ss mov and shrb dec inc shr cwtl imul mov adc fidiv mov or cmp sub dec into mov xor idivb and add xlat xchg outsb ficomp mov jbe out loop sbb adc mov and aas xor pop subl test dec push pop fadds out and sub (bad) xchg push mov mov test xor ja xor push outsb push lret sub sub cmp sub xchg or sbb decl mov xchg cli and out push fistpl sarb xor adc aad adc (bad) fstpt cmovg sub xchg push xor rorb lods dec lock jle mov idiv popf jge repnz jmp aaa mov and sti fs int3 mov andl fdivr notb out jecxz daa sbb sub das sub cmpsl sbb fstpl in (bad) push insl xor pop inc lret sub repnz daa add push out add and push cld fwait pop insb jp push adc xor sub stos mov pop rorb inc out lret or subb jp add ljmp push cltd push push jmp std sub test xlat fldcw sub (bad) mov ficoml cmc ja inc cwtl das mov dec sarl adc add mov fdivrs mov popf xchg int push fptan popa movsl jg lods js stos bound push xchg fs or jmp jp mov pop scas das fyl2x imul addb mov jge and pop xor push pop push stos sub out gs pop mov dec mov adc sbb lcall movb sahf xor adc inc mov addr16 and add xor dec push jnp test sub popf cmc adc pop xor lahf rcr and jmp fmulp pop je das sub pop popf adc mov fist ds fwait dec pop fisttp adc fs lea xor mov lret and adc sub in movsb scas (bad) (bad) adc out adc lret ficom ret rclb scas sub mov es sub sub rcr adc daa cmpsl ficoml mov add xchg inc adc mov lahf clc sbb or adc mov daa fs scas jl sub shlb or push mov shr mov sub icebp push xchg jmp stos out dec (bad) xlat bnd mov xor lret mov dec das ret imull iret add dec scas add push cmp inc aas out jg and fstpt fcmovne pop test mov icebp xor nop in stc add aad jecxz pop mov mov jno sub sub pop (bad) out sti mov icebp sub popf sub enter add negl mov inc daa xor pusha clc xor cvtps2pd lds in idivb outsb repnz lea cli or out mov sub cwtl jae mov icebp inc push mull fwait sub pop aad xchg std or out repz jl adc scas (bad) pushf mov in lods add mov lods sar test jge (bad) popa gs data16 mov fldl js lcall push lcall xchg leave jmp outsl ja fsts daa push outsl jb jo mov popa hlt and mov aam push add pop mov push lahf mov scas add add mov roll sub shrb add (bad) (bad) out fs xchg pop jecxz decl push ret aaa jg dec mov jne mov pop sbb push in dec sbb inc insl mov cmp ret jns and inc pop loopne add pop pop pop pop popf ret sbb out mov dec pushl add aaa inc and dec pop outsl fcompl fdivrs popf std mov fadd pop jmp les fs rcl inc or (bad) pop decb sub mov xchg mov cmpsb mov inc and fisubrl mov or (bad) addr16 ret or mov cmc pop add lock cmp and mov dec call mov push xor or mov repnz add fisttp shlb scas adc jne cwtl sbb test xchg repz (bad) jg xor inc aad add xlat test cmp add xor aad cs push push inc fnstenv rorl ds into lret pop cwtl or fs jne adc mov aas jmp or push sub push push push inc scas (bad) dec push push add push adc int3 sub or pop int mov add sub negl pop js out js mov in jl push sbb jecxz adc inc (bad) loopne stc sub neg xchg sbb or cld leave hlt rcrl fldl movsl int3 push cmpsl je lcall jb sbbb (bad) mov (bad) icebp movsl in lea out mov push add sub mov or dec std (bad) cmpsl pushf push gs mov and sub mov ficoml mov cltd repz fstl fwait dec mov pop mov out cmpsl dec fadds sub (bad) icebp movsl jne stos repnz shrl outsb in movsl mov pop jne and dec pop jmp inc test jmp dec leave loopne jo test mov leave movq imul mull leave mov cld push mov aam add sub sub bound insb sub in mov mov mov enter pop or test xor lcall mov or xchg jne pop xchg subb pop sti jb lods hlt xlat push jge pop mov pusha mov add sub popf ret pop lds push fldt movsl pop mov cmpb xchg repz dec mov ret in ljmp pop aam leave cld scas bound (bad) (bad) sub jmp push rcl xor xchg add in bound fcos inc and mov (bad) push jle jp xchg out pushf cltd pusha xor and xchg jnp adc out sub movsb xchg mov daa fcomps (bad) or repz lret pmuludq jmp hlt xchg mov lret add in sub fdivrs into pop and sub cmc in xchg out mov xchg in hlt xchg clc mov sub mov pop xchg fwait sub subl ss push inc cmp outsb rcr loope sub stos sub sti adc and divl int3 fdivrl push push sub mov mov xor dec mov cwtl adc xor movlhps add and cs stc cli mov jbe cmp mov sub stc mov add and in daa rol mov int adc mov push fstpt and pop in xchg out mov jbe addr16 mov mov sti push std clc jnp fildll or enter cmp call shlb (bad) or pop data16 lret fimull bound inc xchg dec add fdiv xchg push hlt cmp aas and lods sub icebp cmp sub (bad) outsl adc leave xor out and pop mov lock (bad) fstl sbb out movsl jg outsl shll (bad) repz mov (bad) das xor xchg loope jp mov enter push scas pusha mov sub xchg into ds xor pop dec imul aad in jle jmp cmp (bad) rorb (bad) cmp adc out dec mov pop and xchg leave inc shr mov das sti push sti shlb cmp int3 in mov icebp add or push shll sar fwait imull jg xchg (bad) sbb shlb add mov mov ret lds dec mov xor pop scas sub and and and stos loope (bad) (bad) lods xor push insb in mov xor fbstp std test push mov add aaa (bad) and and cmc cmpsb jge loope lods push cld mov faddl subl add fidivr push xor cmpsl fprem1 movsl pop mov jbe (bad) pop lcall xchg or push decb xchg scas mov cmc sti cmp cmc imul and cld push push xor jmp clc and inc sbb push xor imul outsl repnz xchg jmp dec mov mov xorb mov push add cs cmp pushf int3 xchg mulb jne xorb ret add push push mov fdivl dec notb jns inc dec stos push or lret leave clc (bad) pop stc loope ja daa mov mov mov jmp sub cwtl dec or mov inc fcompl pop and mov and jno inc mov fmulp shr (bad) add imulb mov push pop sahf sub ret pop xor lock jl push jge sub dec aaa mov inc leave fnsave movsl add sbb rcl and fmuls sub ret mov pop data16 sub sub and pop cmp or mov shrl mov js leave sbbb add or fsub xchg jg sub mov loop add or xchg dec sbb fcoml mov sbb ret (bad) rcrl sub mov adc adc jmp and inc jmp sti mov addl jmp pop xchg in xchg idiv inc dec fisttp ljmp dec pop add imul mov pop stos xor add xchg cmpsb mov aam popa ret lock or call mov out and pop push add jnp into (bad) rorb pop pop shlb aad add out mov mov or in and adc adc (bad) mov movsb add popf jl outsl out or mov mov and xor sbb fildl or call out lret inc add mov adc shrb sub es dec or or and adc fwait stos lret daa push cwtl rcll das lock mov adc mov or sbb xor pushf mov ror mov (bad) lock pop fwait xchg mov inc inc mov xlat in jle dec sti cli into icebp and daa in lret sbb and mov mov ja movsb sub iret pop loop pop test mov ret lods or std xor inc mov jmp sbb lret jbe inc daa xchg (bad) mov push ljmp imul fildll sub daa dec stc lahf hlt sbb shlb pop jne dec pusha mov movzbl sub push in cs test out test out lcall hlt out fcoml adc ret inc add rolb mov xor out es xchg and test out cmp adc loop sarb xor incl cld inc pop or test xor push call rolb stos xor into xor in fwait (bad) xor xor out jecxz sub or bound sbb in daa movsl jmp dec (bad) mov clc enter xchg popf add hlt int jl (bad) ds lret movsb mov cmc inc lcall xor ret push imul stos dec sbb pusha pop mov pop sub or ljmp pop mov (bad) push pop imul lods in stos sub rclb (bad) lret push and movsl ja jns (bad) pop clc and scas (bad) fcomip jl das hlt add sub inc mov lods jecxz imul adc xor pusha mov jnp aas repnz fisubr ljmp mov ljmp (bad) ds push mov push or dec sbb inc movsb cli in pushf and push rcll sahf push loope xor pop jmp adc scas dec jp push or cmpsb cmp push pushf mov pop inc imul mov fbstp ds push push xchg sub mov and mov hlt push (bad) out imul lods mov mul fistp mov fdivp loope and mov call fbld sbb pop incl mov shl dec mov in mov and into daa pop lcall fnsave inc sub das xor rorl je pop incl test cmp mov pusha xor (bad) sub sub and into sub sbb dec cmpsl xor push fs out int sub adc rorb jmp lcall daa push shlb inc or sub mov orl mov movsb arpl xchg or jae bound pushf xchg push xor popf push and push das or loop das push shrl inc scas js cmpl movsl stos push mov mov divb mov xchg ljmp mov sbb push into jo test pop mov ljmp jno cmpsl jp push or (bad) dec sbb hlt repnz cli notb fmuls (bad) xchg out or push jae mov pop test fcmovnu or and (bad) divb mov push into std dec (bad) dec fisttpl cmpsb das leave xchg ret xchg xchg movsl cld mov xor mov or and inc or pop push pop mov out dec (bad) out dec pop out xor xchg cmp push and inc cmp pop and xchg pop scas popf sti add icebp daa (bad) pop test icebp dec sahf xor cmc mov iret lods dec movsl mov daa add lods mov repz xor out xor sub ror jne loope push mov cli inc lret icebp subb daa je push xchg lods aam push or imul outsl fs mov and sbb (bad) mov mov cmp cmp popa sbb mov lcall inc push and into xor mov cli or fnop pop xlat in sub mov xchg sbb aad scas test das jl movsb test xchg aas mov lock fmulp aam adc or mov scas jb lret add into rorl mov (bad) jae ffreep xlat test rorb cwtl mov dec fcomps (bad) mov sub dec sub mov xor ja xor fcoms add sub fildll lods jmp push adc lods (bad) cmc mov pop fistp or lret ds push mov sahf jp ret and lods ret mov les clc divb or loope and xor xlat in jb inc add and mov sub mov test push mov cltd fsubrl mov pop int3 xor out cmp lret or rcrb sarl movsb xlat test jp xchg int or jg mov loop nop dec sub sub fwait ret adc cs loope mov mov jge in pushf xchg dec inc pop jmp fsubr cli pop hlt push sub jge mov pop inc shll jl ret pop les sub cld stos loope xchg mov (bad) fdivs (bad) ret (bad) cld scas scas xchg and dec cmpsl mov xchg in scas flds int3 pop (bad) mov clc lea and lods stc push add lahf xor xor dec add dec or and mov inc fidivrl pop mov repz icebp mov ret cmpsb mov pop das push jne imul pop mov push dec lret or test dec hlt mov lret adc (bad) aas xor or aas lods add sub lahf sbb enter out jge nop mov (bad) and mull add fcmovnb and lods and and lock sti cltd cmp jmp (bad) sub pop sub sub xchg test push out pop subb mov imul push push and xchg fistpl test clc mov test iret add push in into daa jmp sub dec repz repnz dec out sarl pop adc push xchg mov xor mov (bad) pop movsb pusha and mov xchg jge fistpl and add xor cmp jmp icebp xchg scas cli aam iret sub dec xor xor push push ret xchg popa push and sub dec lods icebp mov push jmp pop jno sbb xor fucomip lock push aas daa mov jl pop pushf cltd insl pushf cmp sub outsb cld and outsl mov mov sub out push inc int3 xchg (bad) stos cwtl mov push pop or sti add push mov aaa roll add push mov imul enter xor add mov enter add (bad) mov mov shr or mov ljmp lret xor cli mov sub aad mov ret sub repnz sub xor jns out sbb sub push add neg (bad) jle imulb pop call (bad) jle pushf jle mov cld jmp inc add mov dec in mov jmp in or cld push adc repnz mov ja mov (bad) cmpb lahf (bad) mov pop arpl (bad) out std xchg jb mov push cs push in scas push cmc pop mov gs inc adc aad add xor pop popa cmpl enter dec lock pop mov std cmpsl adc sbb jecxz stos test add sub pop mov mov jecxz rclb int3 out mov xor xor push cmpsl lret roll or in adc jp (bad) pop rcll das decb and jge sti pop push xchg push lcall mov cld or push xchg iret pop sub and aaa cmp lock in mov add jo pop sbb xchg sbb out sbb inc lahf xor fisub mov icebp out mov out or push mov sqrtps (bad) mov inc sbb xchg mov jge push sti add dec xor ss xor bound stc fmull dec andl lods mov or push lcall xor dec add inc das hlt mov push jecxz stos mov and inc mov (bad) push jp jnp xchg xor movsl push cld push (bad) xchg loop dec stos pop push mov pop mov jmp push ret xchg mov mov ljmp leave mov xor ljmp pop sti in or rcll jns mov fstpt adc push mov imul sub ret or or adc xlat or ljmp icebp mov mov sub ja jno lret inc dec mov add and xchg dec mov dec inc mov cmp mov jmp and jg jne mov mov or xlat cwtl sub adcb cld dec insl (bad) sub incl push jg fdivrl and out jbe leave push pusha les xor push loope outsb push mov cmpsb in xchg inc insl ror scas insb fsubrl mov incb sub push lds mov jne add dec mov in mov arpl fsubr or dec enter xor xor dec movsl cmp test je lods xor ret test nop xchg inc ficom jns popa jmp pop (bad) mov xor fisttp pop cmc push movsb adc repz gs and pop and cwtl sub inc sbb or or imull adc add xor add jg inc iret ja stc in loop cmpsb out mov pop mov sbb js jne jg add rolb les mov inc jge sbb and mov std inc mov loop pop stos cmp test scas fmull sub not daa xor leave jle add add test aam pop or fbstp std (bad) push dec je mov adc inc sub xchg iret mov mov or adc sub es push sbb (bad) push and and cmp outsl cld in test cmpsb mov adc into popa push jmp and mov arpl adc mov stc mov hlt mov fdivrs inc jmp push inc push jle push mov pop and leave jns mov xor jecxz push test mov mov pop lods pop stc int3 aam dec mov push daa add clc test cltd stos sub adc dec xlat mov repnz lret sti push adc aas xor div ljmp xchg dec jb je dec out ljmp jnp cmpsb fcompl or mov xchg (bad) scas repnz loopne roll loop shr and inc dec hlt sub pop push pop sub cwtl sub clc dec mov pcmpeqd add cs adc jmp not aad scas cmpsl cmp and pop test mov jne lods mov or popf pop sbb cli mov popa add mov jecxz adc decl sbb scas sub and daa and push aam mov out iret ljmp fisubl mov and enter mov add loopne ret in push mov jo push shll push jbe,pt mov cmp mov and out ret repz in dec fsub dec jns or jno xchg xor push ret pop sbb pop or xor xor mov test pop cmp into push cmp pop add cmp jle mov lret jmp mov fwait mov (bad) aam pusha cmp mull dec iret (bad) loopne mov negl lret mov imul mov (bad) je in les mov pop jge out xor mov inc lods or sub fiaddl idivl cs fsubr push xor push jmp xchg pop lret rcll inc int3 xor mov push out flds stos mov and es pop inc dec mov mov (bad) mov (bad) (bad) dec mov jmp jge insb jae dec iret cwtl aad xchg hlt sbb push cmp add stc push iret data16 movsb decl sbb push pushf xchg pop inc popf cmpsb imul mov ja out add sub push repz add add mov pop add jecxz (bad) fadd sti mov sub mov xchg push les dec mov or jno movsl jne ret fwait loopne es inc (bad) and outsl int3 cmpsl pop out out push xchg int add fs and mov cmp mov call add adc fucom rcll out adc out lret lea push sub lods sahf push push xchg into lret dec or jecxz and mov leave pop and push sub xor fmuls xchg movsl cwtl or test fldt (bad) add daa repnz nop or sti insb ficom or xor pusha leave mov add stos mov mov sub out aam ret sub inc (bad) into jnp lods lcall mov aam int inc lds xor lahf pop jnp sbb lret into xchg adc mov out jno out jae cmp (bad) icebp xchg inc lock stos test mov adc cwtl clc or bound sub mov pop inc push mov neg and add push test scas fnstcw pop faddl add mov xor shlb and push aad push sub inc das bnd pop arpl jne mov lret hlt sub jl or rolb and call shl in xor popa hlt sarb pop adc divb enter push negl leave ret fs test stc and or sub mov enter pop mov push ret lahf xchg mov sub mov iret inc cmp imul sbb add lret pop xor fnstenv push jns mov xchg int3 fdivl or ja xor test lret mov mov xchg loope xor insl out int3 lret mov xor add xchg pop sub fnstenv pop pop lcall and push pop cwtl add jo mov push pop push (bad) ret inc xchg jl daa pop outsb jbe insb jmp adc pop inc sbb les rep push pop cmpsl mov ret movsl dec xor and (bad) adc pop inc xor leave xor xchg js and fbstp mov out pop adc sarl xor stc push or and xchg xchg out jp test pop sbb mov adc icebp cli and jmp iret aas imul jbe dec pop scas lret ljmp jle xchg ficom add pop das add arpl mov xchg jmp inc or add jp orl (bad) push icebp push imul and incl inc test (bad) lods xchg in jb dec or dec jmp ficomp mov xchg pop mov inc adc sub add sbb or xchg outsl sub cmp aad xchg xchg out dec push push xchg jmp mov int jle xlat lret mov pop xor adc adc movsb cmpsl bound adc jg pop xor in add jp gs cmpsl es into stos lahf push mov dec lahf out xor sub lods out dec mov mov stos bound add xor xchg loop cltd rorb cmp jecxz adc pop jmp dec cltd jecxz mov add mov push xchg mov aaa popf jl xchg lds (bad) lods out lahf pop daa lret inc hlt adc lds roll movzbl xchg mov dec movsl sub add sub and add test sub fsubrs mov rolb push loop,pn push and cld add repnz push dec popa clc mov stos mov xchg cld cmp orb adc inc (bad) iret mov mov aam jmp cltd lods inc xchg mov inc subl cmp cmp cmpsl aam mov pop and mov arpl jmp push cli fs jbe fistpll mov or mov jnp xchg push and add (bad) or das movsb sub daa out sbb pop mov mov dec lret std cmp scas mov inc mov scas pop nop xchg lret loopne (bad) repz add rol scas gs sub mov lahf hlt cmp push ffree neg insb dec pop lret in push clc mov in dec (bad) cmp add cmc dec scas pop iret and stos repnz (bad) out sub fcmovnbe jbe pop fist cli lret mov sti sub xchg test lret add mov mov xlat nop cli xor dec and push insb sbb (bad) xor sbb int3 push rcrl sub (bad) or mov mov pop (bad) and mov and mov push jge or push adc mov jo xchg push pop jle xor or inc inc test inc mov ret mov pop mov fisubrl es repnz jecxz cwtl lret xchg pop in cwtl jle cmp xor jge lods out idivb cmp adc leave clc and pop fisttp sub fs stos mov dec gs (bad) daa loop loopne lock loop xlat xor ffree dec sub cli stos call loop aad (bad) xchg mov xor push jo xchg jnp jo xchg (bad) in std xchg (bad) pop imul push iret ficoml clc lret jp adc leave or mov jb dec jmp and add sub cmp mov mov das pop add mov test daa jmp mov xchg lock mov push notb cmp enter jno je scas xor leave pop inc and stos (bad) mov jg test xor mov sti or mov mov dec mov pop sub cli sub clc mov mov ret inc mov jmp xor jnp pop pop and test (bad) mov or add xor push inc jecxz mov push adc dec mov fs sti and shlb adc daa mov fcmovb add into call sub adc jae mov or mov xrelease enter sub daa or cmp into xor xchg jo and fstpt (bad) sub or add sar mov jmp push idivl dec and (bad) enter insl pop pop mov jmp ljmp or test mov stc inc imul into cmp (bad) (bad) and in jmp mov push inc mov rcrl jb call dec jl daa adc lods je xor cmc dec and scas test xlat out lods xchg popa es jne cltd jmp mov movsl cli and jmp or out cmp repnz xchg add rcll fsubrp xchg cmc push push (bad) loope lock insb cmp test loop cwtl jnp xchg fistpl and mov mov mov mov sub outsl pop in and push xchg xchg loope sub popf je lds cmpb loope mov inc pushf sub dec add pop mov decl jle adc notl adc cs push adc mov pop stc (bad) lcall add push cmpsb sub fcomp or insb inc popf das add aas and sub inc inc adc push pushf dec js mov bound je pop aad sub das call and mov sbb jle xor pop (bad) cmp sub pusha adc clc add pop stc add sbb scas loop push pop hlt mov pop das ficom fwait popa movsl (bad) or mov inc stos pop xor jb and or add and or repnz mov sub sbb sbb jecxz icebp pop cwtl xor xor jge jecxz sub mov jge jb cs iret cmp cltd mov and adc fsts sub jne sub fnsave fmuls idivl in lods push test jl and lcall negl jmp movsb loope outsb xor out (bad) xor mov mov pop mov xchg in cltd lods jno out push adc adcb xor movsb mov pop add fucom pop dec xor iret inc arpl adc dec and (bad) les ror pop jge testb out jne insb push ja mov ret mov pop jbe push clc lret es data16 mov dec fimul cmpsl pop (bad) out movsl pop in and outsb cmp add push movsl ljmp jl cli pop jno push inc pop mov sahf push mov in inc out shr mov movzbl mov out mov inc add push jl pop jno sbb dec (bad) pop xchg gs lods (bad) mov mov and mov in push xchg fisub leave bound lock xchg test imul mov lahf add ret insl push dec xor adc inc js dec rol mov test sbb popf popa sub and rorl lret (bad) push sub lret aam sub mov or pop jg xor lods daa inc cmp cmp cmp pop mov popa push xchg lds push cwtl stos out mov outsl imulb (bad) popf icebp adc cmp add mov or dec (bad) adc daa lds inc fidivr fiaddl push dec cltd lahf (bad) xchg push pop icebp adcl jae dec mov jg aas insb sbb sub sbb cmpsl cmc pushf add pop (bad) pop and in cmp sub das je xchg pop out dec stos lret and fidiv mov dec xor pop pop push xlat call jns jecxz or pop xchg inc mov xor iret (bad) fstpt mov pushl call (bad) dec stos cmpsb dec xchg (bad) mov and xor or mov into mov fsubrp dec lds (bad) rclb ljmp scas cltd push ret xor mov dec or mov jge add jle xchg mul sub mov and sub (bad) mov out and rcrb mov mov data16 cmp stos rorl (bad) or std or out and pop ret mov (bad) mov mov add cmc lds and (bad) lret idivl lods adc inc iret cmp mov adc in sub out sub push xchg xlat mov sub inc mov mov icebp push inc xchg or fsts and shr lods mov repnz inc fs inc and fidivr cld std (bad) (bad) mov notb sahf outsl loop shr push xchg sti repnz xchg xor iret test stc inc dec imulb mov jae inc out call pop lret lret test ds add lods mov cmpsb xlat mov iret pop sbb mov fs out stc in mov rorl dec pop adc sub xor ror das ljmp std jae add fwait and ljmp mov aam loop sub xor negb imul and aad repnz jge pop pop fdivs std fdivs mov pop insb adc dec mov rcrb icebp fwait rolb ja cmp loop popa mov xchg inc jl dec push fcom out in popf jae mov (bad) sbbl dec cmp and popa lahf xchg into stos repnz sub push ud2 fmull dec ja lods daa xlat or push out sub xchg int mov xchg mov and cli xor lds mov xor sbb and xchg and push jae (bad) and (bad) mov dec hlt mov cmp gs mov das divl loopne,pt mov dec loopne out sub push int dec xchg (bad) out inc xor lret negl dec dec leave (bad) lock in jmp (bad) xchg lock push jne out pop fimul outsb test out sub xchg lock dec jmp lock xor cmp inc xchg jns fmuls lcall pop lock (bad) cmp enter ljmp shll mov movsl xlat shll enter daa jp inc in enter mov in push and in rcll xor inc mov pushf pusha test add in push ret add pop popa jns adc push dec loop add xchg out loope frstor mov mov cwtl jp sub aam (bad) push in rorl fs data16 mov fistpll into mov scas sub jecxz adc sbbb cmp idivb sbb sub call inc mov and or sti mov (bad) je call mov cmp mov fcom push out fstpl and int3 inc icebp xor push ja add sub mov adc adc fisubrl mov sar xchg xlat scas jge ficom mov dec pop rcll in mov testb ret add pushf or lret arpl test out dec scas mov lds in add and imul lahf xchg shrl scas lret dec icebp out sub mov idivb jl pminub js dec (bad) rcl stos and jmp lret pop add jbe sti icebp dec ds movsl leave ljmp mov clc sub popf faddl dec xchg icebp outsl pop repz je repnz nop notb es dec and cli pushf cmpsb shr xor jmp push xchg sub dec adc and push adc mov mov sti clc imulb fcmovnb ret out movsl push mov ret and or fxch cs lret stc jge jns (bad) sub jg mov loopne sub lret xor clc pop fist call adcb mov pop adc xchg xor mov mov sub mov aam testl in pop rorl jl out ja pop dec sub jno dec xchg data16 pop mov mov dec or sub jp sbb sbb and popf clc into jg dec repnz mov dec idivb pop mov pop mov push hlt push data16 add (bad) and or loopne loope mov xchg pop sar call pop adc sub jg mov call push push cmp outsb cltd cmc push adc loop fs xor (bad) imul cltd pop cs bound sbb dec jle daa push inc jmp pop rcrl lahf push jmp xchg pop sbb in scas xor sub cmp mov pop jecxz js stos out (bad) sarb mov cmp gs jle,pn xor jo and mov clc (bad) mov enter popf xor xchg mov or popa scas iret inc adc jns dec into div or and aam pop test pop in cltd sub adc data16 sbbb cli or sub rcrl fisubrl jae xor xor (bad) cld pop sub out add aam inc adc lret ficomp ret and repz dec lret (bad) xchg adc add cli jmp lock or or add sub daa rcr xchg psllw pop mov or scas cwtl (bad) mov mov (bad) clc call mov movsl test mov into pop dec mov push repnz adc cmp ficom adc in cmpsb pop shrb fnclex ljmp inc enter je movl jne aaa in push sbb aad orb nop inc call shrl insb or or sub fmuls and sub loopne push cmp sub loope cmp loope jnp xchg mov xchg adc sub (bad) jbe ljmp pop sub dec adc xchg dec inc mov lret nop repnz mov out add mov int jp inc dec push popf mov pop cmp push xor stos test push mov jae sub inc or pushf imul adc (bad) or mov daa push (bad) pop jmp cmp xchg in mov pop sub pusha xor mov sub fistp mov adc cli cmp ljmp cmp sbb push sti out or cmp in or roll cli std sbb int sbb or mov mov mov bound jmp jae lahf mov push pop sub mov inc adc add or xor (bad) push dec inc bound lods andb lds mov sahf adcb mov addr16 daa in movsl cwtl jmp pop mov (bad) leave sbb jl jno test dec pop stos pushf xor dec pop les int inc push jmp sub add clc xchg sub mov (bad) icebp xchg les out inc lret mov push and sub xor add les adc bound xchg xchg stos loop xchg nop jecxz jbe fistp pop mov ss js pop push (bad) cmp rorl adc scas push jl or mov idivl in inc (bad) mov stos sub cmp rcr out mov cli mov dec leave aaa addr16 inc inc dec lods cmovg or bnd dec fnop clc adc sub mov (bad) adc cmpsb orb cmp adc mov inc jno es pusha push divb xchg pop (bad) call fcoml add jae pop test pushf out imul clc sub cmp xchg ja pop cmp andb xor pop loop popa scas gs es (bad) sub mov and bound call (bad) (bad) sarb or scas xor and das fmuls iret mov int3 or push add jp pushf and sub inc xchg jno movsl (bad) mov enter stos sarb div (bad) push or add xchg dec sti xchg pop rclb stos mov test cmpsl or int3 xchg xchg jl jmp leave add and pop addr16 test iret xchg pop call pop aad push adc sub push jmp push lock and cli sub leave or lds adc adc and cltd daa xor pop sub push insl dec adc lea push push dec jbe sub inc out jns cmc add push (bad) push jp shll xor xor movsl inc sub fist jb repz loop fisubrl mov iret lret mov loop in or into xor mov pushf imul mov adc adc push movsl xchg jmp cmp or sub mov xchg repnz sub scas imul call out mov inc jecxz xchg cmc push jb aam nop and xchg lock push (bad) sbb jle outsb div rclb jne arpl xor jb pop idiv gs mov mov das lret and sbb jns addl sub popa jmp sub cs pop mov stos int3 cmp or push movsl daa push cwtl lahf pop fbld push stos das jns dec mov sub (bad) sub and rorb mulb jb adc mov out bound leave out js movsb mov loop and cli mov pop sub mov adc pop jb repnz adc popf adc pop or daa adc lret iret mov dec ljmp sti int3 insl ret pop xor add mov jae cltd or xor test sti pop stc stos sub fcomps mov or xor xchg pop test xlat in mull rol out shll inc out lret mov popf dec popa add mov mov pop lds andl pop outsb lds iret lds bnd out rorl aad aas xchg enter aam rorl jno outsb in xchg xlat cld bound repz xor dec cmp inc pop scas xor mov dec fs add (bad) and pushf daa pop out mov or test cli fwait shrl add cmpb xor cli dec and mov dec loopne push movsb or jbe jo cwtl fist loope or cld mov ljmp loop rol popf jne lret mov xchg (bad) push jl sub adc sub xchg dec ds and popaw dec xlat loopne or jp adc xor sbb xchg sub das mov adc (bad) daa xor lahf jne xchg mov add pushf push mov and or enter repnz addb shll aaa outsb add leave jmp sbb lods cli shlb xchg xor pop cmpsl clc sub popa jmp cwtl push jmp lahf sbb and in clc movswl and ret adc les divb dec mov dec (bad) fistl decl stos add pop mov sub xor add mov push push (bad) jle xchg push jl push rclb dec mov sub and pop mov stc jg push mov pop sub lcall sar xor dec in out and push xchg push adc adc out jg jno jmp shrl pop (bad) xchg sarl inc pop and push cmp adc aas out out push in shr aas outsb cmpsb sbbb loop push mov fwait xor pushf (bad) cwtl mov dec out or sahf fnstsw sbb loope mulb pop push out push inc pop xor add add fistp mov (bad) dec and push sub test xchg push xchg mov and or addr16 hlt cmp push mov push add pop push mov sti je orl sbb jl loope out js into ret ret jl hlt pusha and es push sbb bound pop scas or jmp das sti cmpsb adc stos mov xchg sti popf addr16 push dec clc nop and and es xchg clc pop ds mov pop push and (bad) ljmp js cmp test sbb pushf and pop push pop mov inc rcrl sti gs mov cmpl rcrl sub pop faddl and jns sub pop sub add push mov dec sbb pop sbb or inc sub stos lea scas (bad) gs or repz scas xchg xor cwtl push jmp inc adc or (bad) aas call sti fsts and test in jp push inc add jge mov sub xchg mov add add and jl repnz repz bound adc and je das fbstp or pop cmp push into sub repnz ret add cmp sub and mov mov jne (bad) out arpl iret scas gs mov leave mov inc jb out pop mov lods dec cwtl sub xchg in out das mov dec mov sub mov mov add or push mov dec cwtl imul inc mov call sub add xor lret cli int3 pusha leave mov push inc ds bound mov xor mov add cmc mov popa push or mov lret mov inc mov xor sub pop ret inc int pop repz (bad) and stos arpl add mov xchg in out xorl int (bad) mov jecxz js aas icebp pusha add xchg bound sub add hlt js mov mov lret cwtl movb out lods jle imul mov cmp repnz fcmovnb jl sub fsubs repnz xchg loope imul movsb out fs push cltd stos mov pop mov mov mov loope xchg imul xor sbb and pop mov les cmp push stos mov xchg inc dec xor sti xchg cmc stc jne andl aaa loopne rcrl dec push scas pusha imul xor adc xchg jb mov adc pushf mov ror std (bad) xor scas cmp hlt (bad) imul mov movb popf push xchg sub jge sub dec pop rclb pop dec pushf inc dec sub mov pop push and popf xchg loope cli gs repnz inc lret and test add push sbb fucomp add xor stos mov xchg xor (bad) xor movsl mov mov sub repz push gs das fistp or outsl out adc ljmp pop mov add repz movsl jge push xchg push xchg sbb push test daa out push (bad) xchg daa (bad) lret popf sarl cs cwtl lods dec lret push xor and pop dec ljmp es cmp dec fisubr xchg lret repnz mov cmp int push lret ljmp mov idivl aad add lret fisttp arpl sub and or cmp cmp bound or mov jl jne and call or lcall adc sbb mov pop push inc sbb xor notl xor (bad) imul or nop test xor adc add cmpb fs and jb je out cli test icebp mov pushl (bad) dec xchg pop ljmp movb xchg mov inc imul mov lahf rol cli push sub dec and hlt xlat adc sbb ljmp xlat aas fs call scas sub or sbb neg xlat rorl imul inc std adc ljmp sub mov inc (bad) adc icebp shr and cltd mov push int xchg jecxz cmpsl fistl adc sub loop sti int sub inc mov cmpsb dec mov cmp shrl adc idivb pop cld inc lret sbb sub negb decb xor pop push pop push mov movb jmp ret or ror rorl sub test mov out daa or jle pop lock push sub (bad) fdivrl mov sub add mov cmc dec data16 and cmpsl inc inc dec xor jecxz mov popa dec and imul ret sub sub inc stos cs xchg pop out jne mov push jbe xor mov push jl js aaa xchg movsb inc pop jns aaa mov and shr push cmpl arpl test sti sub xchg (bad) mov jmp pop popf xchg push or mov pop in xchg dec sub insb jmp fstpl mov dec sbb lret in (bad) cmp les mov xor mov mov inc (bad) mull mov mov je push push cwtl adc mov lea dec enter or repz (bad) mov jmp stos fstpl pop aas call repnz (bad) mov icebp (bad) mov xor and div adc mov jo cltd fsubrs scas sub negb add je or add inc push sub xchg sbb add jne iret ret in shrb pop push jmp inc repz mov push ret mov jns dec imul sti and pop mov xor and sub add add iret mov cmp enter mov cmp fisub pop cltd add xor jle mov shll jge add xor push seto xchg jl push push sub push xchg ja dec (bad) cmp mov push lret call mov cltd sub mov pop xorb pop jbe push add mov dec and and mov cli add and das jb sarl xchg mull call jp dec jo add fs outsl add adc outsb xor jg xchg mov pop mov aam inc add cmp repz adc out rorl pop pop fistpl mov and mov push repnz adc mov outsb ss push push or mov add and lret out and rcll push (bad) xchg jecxz dec and xchg dec and shrb or lods adc loopne dec mov xchg jecxz xchg insb and inc mov and scas (bad) ret shll test mov je insb in repnz mov jl dec jmp inc add std inc cmc sbb xor into cli popf fwait outsl xor std jnp decb scas fldcw bound xchg outsb cwtl das mov rcrl js mov and aad cmp xor out inc and nop push cmpsl sub sub das xor cmp push mov cmp clc cltd xchg sub xchg mov push test add loop subb mov (bad) and jae iret stos cmpsl xor call mov and sbb out adc xchg sbb lret jnp jae stos and cs jo inc repnz lock imul inc roll push jle push jecxz pop mov jmp stc dec imul pop mov and (bad) lret sar mov lock xchg lahf mov aam and gs rcl rcr mov iret jl lret jbe sub xor jle push xchg fnstenv pop push fs mov (bad) (bad) jecxz and xor ja (bad) enter push xor shlb mov xor jmp mov lret mov imul in adc and bound pop fstl mov adc sbb mov into mov mov mov add xor pop sbb das jno rcrl add stos ret pop adc xchg popf or jp mov pop pop mov rcrl xchg or jmp je mov cmp xor jo mov fwait sub push pop pop sub sub xchg sub dec fs dec pusha pop add push scas dec mull and sub orl rorl movsb (bad) int xchg mov rolb xchg cmc xchg mov sub or or dec push sub inc repz out sub les (bad) xchg stc ret sar xchg or sbb sub pushf std gs daa aad xchg adcb mov mov ja jbe jb pushf sub or jnp pop shll jle push or mov sbb cs loop add sti inc add fsts mov and inc lahf out lret xor jle sub (bad) dec pop xor lahf jbe lock rorl pop mov push dec stos mov mov mov jbe jmp push ljmp ja dec repz cs sbb inc push and mov and dec or mov jb inc ret mov and dec dec std xchg xor lods xor ljmp mov (bad) dec in sub adc push dec sub xor shll fldt and popa add or sub xchg fstps xor xor das scas jbe fldenv pop or in inc dec or in sbb stc aad push sahf push adc mov sar fadd fldt xor fldcw inc (bad) mov add add push cli std in movsb incb (bad) fdivr sti push or or or sub pop lahf dec out ljmp leave xrelease pop sub push test add nop xchg mov jmp rcrl icebp sti addl cs adc popf int3 cmc pop ljmp dec mov sub das in fstpt adc bound shrb jno out inc scas add push mov rol pop pop cmp xchg cmc xor push dec (bad) cmc mov fist add (bad) cmp test mov mov test mov ret mov subb pop pop leave je inc sbb and push js in mov clc dec mov out dec pushl into test xlat xchg mov (bad) cmc ljmp scas or daa xor mov sbbb popf xchg xchg (bad) push push jle addr16 push sbb add xchg leave in add adcl push pop stos or pop cli pop jecxz arpl ss mov call call les xor xor push pop sbb pop adc add dec xchg or lret fcomip and repnz cmp mov push inc outsl adc icebp mov add movsb xor mov mov jo pop lret or pop (bad) (bad) pushl clc dec int in andb (bad) mov or xchg scas add mov pop leave mov icebp mov js xchg inc shlb inc adc cld mov or sar add xor mov pop pop clc jmp sub cmp mov lods jb popa daa adc inc repnz daa fdivs jp incb mov cmp hlt push mov scas stc mov popa pop add outsb xor data16 (bad) negb xchg lds or push cltd xlat ret or pop or mull cmp inc jo ds icebp popf in pushf pop cmp fsubr and (bad) xor mov leave jge and xor sbb jmp loope cmp xchg sub lahf ret test jmp adc sub jbe push arpl into sub ss test jmp xchg jmp cmp lret sub and pushf das sub data16 xor lods add enter sub mov (bad) cmc jnp pop iret fistpll jmp stc imul fsts jnp xchg jno dec clc gs mov iret loop je clc dec xchg mov mov clc xchg sub push and jmp clc push mov (bad) sbb and repnz call movsb ss xor sub cli add shll xchg into test cmp or pop pushf fisubr push (bad) jp xchg or push mov into jns or mov in xchg sti mov nop lahf (bad) sub mov ret pop lds xor mov fs and pop call lret bound push xlat ljmp mov sub pop mov cmp and pushf and jl les dec sub inc push dec repz jno and movzwl cmpsb mov mov mov repnz test (bad) scas mov sub cmp sub in jmp out sub fnstsw mov or sahf ja (bad) scas xor stos xor icebp add cmp xchg (bad) std sub mov sti inc dec in sub mov pop mov dec out sub cmp xchg mov ja loopne div cmp push cmpsb xor and aad cltd hlt loop lods xor sub xchg (bad) push out out jmp jecxz loope sub pop pop lods aam lods fcmovnbe clc cmp (bad) or jl lret pop out jle xchg sti jae sub aam sub daa into (bad) sub adc insb push sub int lock fidiv fsubr dec mov in scas cwtl push ret (bad) ljmp and mov clc push je jmp ljmp movsb stos out imul pop pop lds mov in mov (bad) sbb xor sbb pop push sub ds add std mov fnstenv xchg add out sub jp mov dec clc ljmp rcr jmp mov dec jmp and xchg sub pop and inc test mov and fsubrs shrl fistl mov cmc gs adc cmp cmp ret mov lods sbb loope inc and lods sbb mov xor add add test lret jo lahf mov xchg push cwtl sbb ret scas das rcrb xchg pop in loope shr insb cmp sub sub in add xchg nop mov xor sbb mov xor inc pop std scas mov push out mov lds lcall push mov xor adc shl (bad) (bad) loop xchg jmp loop and inc mov lret (bad) mov aad xchg add and push cwtl xchg data16 (bad) je ljmp or rcr xor insb add fisttp sbb or mov das jmp or mov push jbe and push pop mov jmp lock (bad) daa (bad) jg xchg and call push cwtl push pusha mov daa mov fnsave pop ret gs push inc aas xor add sub js or mov xchg cmp repnz mov xchg push xchg or sub cmpsl cmpsl (bad) sbb ret push jecxz jmp popf cld and jle inc (bad) decl cmp pop fstpt push bound flds xor and mov adc pushl xor (bad) movl jg inc and lret daa (bad) xor ljmp cmp ret lods icebp decb insl scas loopne movsl (bad) xchg inc leave xchg (bad) pop dec loope mov jp fsts or fstp push xchg jmp bound ljmp sarw cli cmp jnp dec les mov pop xor scas jle ror std movsl inc ffree adc icebp hlt xchg call dec lret aas xchg call cmp mov dec jmp pop mov dec stos lea push adc sub push xchg in outsl mov mov rorl and xchg mov call cmp add icebp lea cmpl out add mov push xchg or and fidivrl sub cmc (bad) clc adc shlb inc or outsb into xchg jae mov and and xchg push mull or (bad) aad sbb scas clc (bad) (bad) mov divb xor inc cmp mov mov test (bad) jbe stc testb jbe popa xor mov or jmp mov dec loope sub mov out leave sub sbb je incb dec clc add nop cs gs daa fnstcw outsl add lahf mov push mov divb mov xor adc mov cld pop movsb xor mov sti in das fnstenv push xor dec lret adc jo xor push cmp fadd mov mov fldcw icebp mov outsl jb push stc arpl das fnstenv or and and mov sarb scas mov enter or std sahf arpl movsb test lret or pop fcompp dec call jl xchg adc xchg pusha cmp (bad) out sub xchg (bad) sbb or sub push pop test jb mov cmp enter or pop cmc mov fs hlt rclb leave sbb pop fsubl mov das je stos xor mov aam cmpsl popa dec sbb ret les insb push daa dec pop mov xchg mov jge insl pushf in add xor ja xchg add xor sbb and popa pushf mov cltd jl in stc ror pop mov stos sub (bad) int sub fstl adc and dec (bad) dec add hlt dec decl imulb adc xchg idivl push lret scas dec sub lret (bad) outsb aas dec add cmpsl dec mov xchg and in (bad) mov add sub mov mov in lods or pop ja jb mov (bad) testb shr ret xchg das and repnz sbb pop dec pop inc push daa data16 jmp repz icebp push aad in sub cmp dec mov test (bad) fdivr and xchg dec mov movsb jg push ss sahf xchg jno and sub mov (bad) insb (bad) sti dec repz jmp jg push jne mov idivb mov and dec daa cltd jg cs sub push stos lock inc mov or mov rcl mov dec (bad) repnz pop mov lea in add push pop or xor pop dec in ds mov aas movsb ficompl mov and pop add add (bad) nop xchg leave mov xchg ljmp lret jmp mov iret xor cltd xor imul test loopne out sub divl iret jp imul (bad) cmp ret inc mov add add and sbb fwait gs lods das sub int jge cmp mov (bad) inc xchg mov mov mov mov ds mov ds popf (bad) mov cmp scas push push adc lds into mov hlt mov stos popf (bad) cmc stc jmp mov pop insb testb jmp (bad) dec incb imul and push roll arpl or fmull or lods mov mov loope aas jb and add mov xchg push sbb aad dec sbb jmp jecxz sub repnz sarb xchg adc adc or subl mov mov mov push jmp (bad) fisubl (bad) lods cmp (bad) pop out je lcall push stc out fcoml jo loop mov pop mov dec mov cld xorb cli inc lret iret add or mov js test xor mov (bad) jb dec inc pop lock mov sub (bad) sub cld loope or data16 or cmp xor stos mov mov (bad) adc stos cltd mov int3 and faddl adc test xchg or cmpsl push lea mov shlb sar inc pushf ds mov dec add adc or in aaa test pop push xlat sti and out cld (bad) lock add ret inc or and aas stc std dec (bad) mov jns pusha aaa stc xchg push pop sbb in xchg jae pop ret bound cld (bad) mov dec (bad) (bad) repz mov rclb lds fsts aas cmp adc mov xor xlat xor jg loopne divl cmp add fnstsw cmp outsb pop jge or pop sbb mov fdivrs out mov pop enter push dec mov and xlat ljmp lea cmpsl mov repnz adc loopne cs dec xchg test mov xchg fsub adc xor arpl stos or pop rolb ret cltd mov dec loope xchg sub lods pop dec cwtl (bad) idivb (bad) push adc pop aam lret loop push rorl jo out adc (bad) repz dec inc fimull leave jne pop and mov test clc mov cmp dec je mov or (bad) daa hlt dec push push sbb ds imul ja fidiv fwait and mov cmpsb pop pop test mov add push xchg sub add or or popa push xchg push mov or fild ja leave in leave imulb cmp ljmp ja idivl xorl stos (bad) pop loop xchg and (bad) mov gs stos mov sub (bad) jo sub sub jae (bad) jl or ret aam pop xchg inc adc push popf rol mov ffreep sbb mov iret outsb mov leave (bad) jg adc aas pop mov (bad) scas sub sbb loopne das mov sub and lret add push movsl push (bad) imulb aaa daa sub or imul fstpl xlat int3 jb xor lret mov cltd jp pop fst fistp add inc jo clc mov jb mov pop cmp psubd and mov dec xchg push mov test mov cmp sub pop jne mov sub out gs add xlat loop pop mov jg jnp jbe dec clc mov xchg mov jle add inc lods in sub leave outsl and mov sbbb pushl pop arpl nop push push dec lcall in xchg xchg test scas test les sub jecxz repnz inc add ret fbld xor lea sub lret fnop bound fldl cmp lcall push out aad inc clc and adc xchg sbb cmpsb cmc stos adc int3 imul ret sahf lahf push aad xchg adc xlat mov xlat fldcw pop (bad) adcl lret adc ret sub (bad) daa push cltd dec or xchg out adc lret shrl fs out jno mov jmp jecxz jno inc or adc and es and add cmpsb push mov stos jl adc repz mov mov cmp xlat mov addl dec pop ja pop lods mov repz dec leave mov inc icebp addb adc xor cmp cld ret push push pop jle sub fstps adc loop shrb adc mov xor cli mov cmp (bad) xor lret jns adc scas mov imul pop sar testb sub imulb fbld stos xchg mov and dec sbb mov mov ror inc xor push scas into add and (bad) mov test add cli stc lcall jecxz mov add popa mov xlat mov pop dec mov pop and push (bad) cmp and adc mov mov bound xchg stos int repz mov push sub or xchg push xor mov push repz mov hlt dec jge fwait cmp enter xor sarl jb add test hlt push or rcr ja test stos hlt pop and jbe loop and mov sti lds pop mov (bad) cli and push into mov xchg sub notb pop gs pop lcall ja cmp sub clc sub popf aad popa push idivb hlt adc fnstenv notb sub les sub jo xchg sbb popf rorb mov xchg mov cmp cmp fidiv in das cmp pop or fdivs adc jmp call lea xor mov jg adc scas adc repnz push pushf mov ficoml out sub pop xchg sbb add sbb mov mov pusha xor imul mov push pop into mov imulb icebp out imul and inc and mov lret mov xor sub stc js cmc cltd stos sbb enter rcl xor fsubs mov and xor add or cmp mov adc dec xor test push and out push pusha dec fwait jecxz popf aad mov pop daa ja cmp adc sbb xor cli fbld daa sub mov ljmp xchg lcall daa add ret add and mov inc test imulb push mov in aas cmp sub inc fxam add lods stos sub (bad) adc mov lret test cmp scas mov mov sub sub cmp (bad) dec stc jmp and mov xchg or add sub mov sub xor out cltd outsb sub or mov aas lods and loop dec cld mov insl outsl stc mov (bad) je inc (bad) stos mov stc loope cmp add popf cli jp and xchg scas jb ret popf dec out xchg jle inc xor xor scas popf outsl das mov xlat jo (bad) icebp mov lods popa stc or notl out and mov leave (bad) push lret movsb in dec ret and push dec rclb or cmp repnz push and outsb int push je sub add stos arpl xchg jmp std mov scas test cmpsb xor rclb popf (bad) lcall aad aad pop gs (bad) jo pop stc dec dec sbb mov mov jmp aam pop rorl daa lret lods icebp mov je out or scas pop and push add loop xchg sti mov pop into and sub ljmp or or ljmp dec loope mov out lods (bad) mov clc inc mov incl fidivr pop sub testb dec test (bad) pop int3 and (bad) mov add push sub push stc cli (bad) icebp stos mov dec idivb dec int cmp cmp sahf ja push xor or shrb mov stc fidivl pushf jle mov aad jmp imul xor mov cwtl push lret dec or sub dec add sub pop sub sub das lret data16 mov or mov (bad) xchg jp mov push mov mov test cmpsb imul outsb cmpsb sbb ret adc or pop inc call dec ret sub xor jnp adc fldenv mov pop push arpl adc push pusha or in (bad) in and imul adc mov dec test jno in jno (bad) dec test xor shrb (bad) jnp sbb test jb sbb test pop enter data16 adc out insl push cmp ss (bad) daa mov icebp jns test sub mov pop adc imul xchg push add outsb cmpsl jle push push pop fcoml neg push mov icebp dec mov fcomps jl scas pop lret sarb jle pop iret xchg adc pop (bad) mov xchg enter mov cmc and sahf adc push push inc add pop push mov sbb adc xchg sarl insb sti mov or xchg in sbb mov idivl pop out repnz mov push dec out test fistpll jbe push cld pop mov pop adcb fstps sub jb in daa xor ficomp pop mov and jg inc jne rol test jne popf mov jg dec (bad) int das dec mov push push inc xlat or mov test jns imul mov push jo mov insl vcomisd imul popf push mov and ja mov mov ljmp out and pop ja sbb jo mov push jmp out xlat and cmp sub push arpl bound ret (bad) sbb or sub imul insb xchg (bad) and lret add fxch shl xchg aam daa sti mov js mov add add xchg outsl xor sbb push in mov loope lret enter jp mov jb aam jmp adc xchg cmc inc and push ss loop dec add mov lods (bad) les pop (bad) out fnstcw add into pop push (bad) mov dec mov icebp fisub fnop std div dec mov add (bad) ja sbb das out mov aad mov cmp xlat movb adc dec cmpsb push dec mov leave mov cmp test movsl test sbb lret jne add or (bad) mov (bad) cmp fistp xchg (bad) fidivrl or mov jb int3 mov loop sub sbb jb mov jns repnz outsl mov sub rcrb insl outsl lods fbld mov cltd mov jno mov stos and lods cmpsb xchg popa or xor fldcw and pop scas xor insl flds push xchg icebp imul adc iret lods lcall pop dec sub outsl (bad) mov add mov pushl push push out or test (bad) pop mov pop push dec or loop sbb mov aad mov rcll aas inc add xlat jno lahf or in jne into and xor mov cmp sti jo cmp or cmp add mov and mov out and mov or or int3 mov inc clc mov xor pop jl ret rcrb mov jb mov xor push orb mov dec sub sub sub add sub adc jno aas adc add (bad) hlt jecxz std adc clc push or mov test cmpsl aam fcoms cwtl dec and xchg rcr leave push lock cltd aad pushf push ljmp mov adc xchg jbe sbb ljmp cmc in jge or xchg mov sub lds mov loopne,pn mov push dec or inc es (bad) test hlt push or mov xchg sub sub pushf out lea jp cmp adc fidiv addr16 repnz xchg test jne xor clc das mov cmp sub sub adc (bad) scas popa and jle dec sub add (bad) stc pop dec sub dec pop aam daa cmp out xchg popf xchg inc mov mov jg inc xchg insb jl daa and push jp fcomi aad push pop out lret lret cs rol sub xor popf push insl push lods pop fidivr (bad) xchg dec ret (bad) xor jnp cmp fisttp pop (bad) clc dec call out pop jne pop xchg adc fldt (bad) jne cmp inc and push push add (bad) jns xchg add push into cmpsb rorb pop daa daa jbe pop aad jo pop es xlat xchg enter clc add jae sub add inc fincstp sub ja xor mov mov repnz cld push or int3 or data16 shrl loope sub leave cwtl mov aam and mov mov loope aas ret mov xor push gs call movsb mov sub sub rcl sti mov dec xchg push or imul sub cli push sub cmpsl pop mov fisub and xor jbe aas mov xchg jae xor mov mov cmc dec push push mov addr16 ljmp xchg notl xchg pop std and lea sub ss pop or mov inc jp icebp data16 sub dec ljmp icebp sub stos bound mov repnz repz daa pop inc (bad) movsl (bad) mov mov mov sbb lret dec inc xchg and roll idivb (bad) mov xchg add or mov dec jmp out outsl mov sub xlat push xchg cltd daa int3 repz loop hlt enter or gs push iret dec ret repz xor mov ljmp mov dec icebp adcb ljmp sti popf add fstl stos xor aas dec adc pop lods push push cwtl pop ret or leave sub mov jns and ljmp fstpl dec cmc cmp in repz mov push pop pushf inc in pop adc into xor out adc adc sti mov in aam xor mov fyl2x aad cmp sub sub lock sarl push stos mov das jecxz cmp lahf insl std xor adc and mov icebp xor fisub sub fistpll cmc imul and dec pop mov cltd lret or lock jo mov hlt stc ror rcrb (bad) push ror sub (bad) sarl ds imull sti bound (bad) add xor mov or insl addr16 xchg xor mov push inc jmp cltd mov sub fldt cwtl notb sub lock cmp (bad) xor mov ret cmpsl sub outsl mov push pop xor int das rorb add sub jecxz or cmp inc jno jmp sbb sbb or mov or ss or (bad) xchg fwait outsl push fnstenv jge (bad) scas ljmp dec push neg and rcl inc jbe,pn icebp scas test ret dec xchg in (bad) push xchg jbe add fcomp jg add and (bad) ljmp ja rolb lock add fnsave inc nop or clc add xlat shrb sub pop push push mov insl mov pop or aas push xor mov lahf dec popa clc or stc sti aam jns or stos mov imul (bad) dec scas sub vmread mov xor xor cmc or xchg fistl or add jne push push or pop aas idivl add adc jns repz mov mov dec push mov jnp sahf pop not inc mov cmp xor push or movsb sar xchg out fxch jmp cld push jp mov push push push popf cmc adc push push sub add movsl adc pop pop or pop and cmp mov out or fidivr or jbe dec sub lret shrb ficom sbb and mov add adc ret outsl popa xchg fisub lahf sbbb mov popf imull (bad) xabort pop push sub scas insl pop dec jecxz imul les push mov mov add pop sub mov mov fistpll bound pop push push xor cli mov fnsave adc out in adc mov and push movsb (bad) repnz in adc xchg cs and (bad) cmpsl out dec mov sub movsb int (bad) fld xor add faddl into test ret and ret add xor imul pop xor jge int3 lret push lds mov adc cmp add dec (bad) ljmp and call cltd aaa dec lret jae test sub movsb sahf mov sarb test dec xor sbb sub ret (bad) pop mov shrb fsub cmp cmp xchg movl fnstsw cmp movsl mov pop jecxz lahf das inc (bad) das jbe fs cld and incb jne and cltd (bad) xor or and sub mov cli sub iret add adc xchg nop test xor enter imull out daa lret aad aad mov fdivrs mov or mov (bad) repz xor xor mov push mov jecxz call inc popf lock in call mov lock mov and out xor jmp adc jns or ret sub es jmp std xchg jmp and add inc xchg stos add test ljmp jae test jmp mov mov lret add daa mull cmc xchg or sub and jge fsubp popf pop xor xlat in cmpsl mov mov popa ljmp fcoms inc and test shrl lds repz repnz leave mov (bad) xchg lcall add sub adc (bad) jg stc das adc xor les cld sahf mov sub lret xor pop ds and cmp pop negb out push (bad) push xor jmp movsl push sbb pop mov (bad) mov loop adc cmp jecxz ja xchg (bad) out xor xor bnd mov sub pop add or mov push adc cld jl jmp push add add (bad) push adc sub push add icebp out mov xchg jecxz push add fdivrs loope shl movsb adc pop mov inc pop sub inc es test and jp int cmp or mov cli ja lea pop roll inc and jmp std pop xchg pop (bad) dec push jae add jg and addr16 dec out xor in push addr16 or fs out xchg das dec out mov jle ljmp xchg jns inc (bad) mov add faddp sub sub iret js lret sub scas int xchg add (bad) mov xchg cs ja sbb cmp mov rorb int sbb lods push pop inc sub sub sub test call (bad) scas jne repz aam ror sub mov lods jbe fwait outsl es js cwtl cmp and pushf clc out sbb xchg jmp test adc or loope aas sub xlat push decl negl fimull cmpsb xorb fstl aas xchg stc add out inc rol fs outsl xchg loop out and test mov ror pop (bad) xor add (bad) sbb xor ja dec xorl (bad) repnz (bad) pop pop and add fs add and hlt bound sarl push cld fistpll ljmp lret mov mov fcompl pop adc or dec enter loop xchg repnz fisubr pop das divl adcb enter stos or or scas push adc andl punpckldq mov enter dec adc jno sub movsl ja sbb cmc xchg (bad) adc out xor xchg pop sub xor fsubs (bad) push mov fimul (bad) (bad) lret aas pop jmp test ret mov push sub sar enter or (bad) in ret and adc fldt xor mov stos testb pop dec into mov dec les push test mov dec xor adc cmp jle sar mov mov mov adc or mulb and aas test lret test mov add clc sub icebp fnstcw rorl dec mov dec movsl xor and pop dec inc lods xchg lcall in lret or cwtl clc xchg lock lahf lds sahf and mov aaa jp sbb ja dec leave (bad) and aaa push adc pop mov push cmp lret ljmp xor ja leave popf (bad) shrl inc insl mov lock xchg loope mov jmp add and push and inc xchg inc jge push push shrb out and dec push fcoms imul aad mov or test dec xor mov out or in daa fnsave cltd mov ficom or pop negl stos (bad) pop jns dec mov test and lods lret sub cmpb pop pop sbb and pop test mov add enter (bad) int3 pop sahf push and push and xor jge inc ret jb pop ja (bad) out lret ret fild fisubrl lods ljmp and fiadd loop stc xchg std (bad) cs mov repnz or xchg cwtl mov mov pusha xchg (bad) loop sar mov pop cli xor (bad) nop push xor nop mov fsts lea push mov pop sub sahf pop (bad) std or (bad) pop gs mov dec int mov mov and and xchg mov fcompl rcl shlb mul mov inc mov mov fdivr int3 jo imul mov je sbb (bad) cli ficomp and mov or jg imul fbld lock das loopne rclb lahf xchg ss jle push sbb fsts mov cwtl or cli pushf ja int3 cmp js repz daa ret xchg add test stc mov pop adc fs xor clc jle sbb dec fsubl pop and xchg imul sub xor xor js dec (bad) icebp dec jg xor pusha mov shrb fnstcw aad push pop clc lds mov dec xor jge push inc mov clc rorl lcall pop pop mov push repz adc sti mov and adc pop push jbe ljmp ss jg mov pushf xor jl xchg mov or inc sub sahf lahf push bound xor (bad) mov pusha cmp mov mov ljmp sub or xor add aas cltd subb mov enter gs xchg cli leave adc imul (bad) leave mov push sub xchg jo stc jae pop cli repz dec inc add ja (bad) movsb lods push nop (bad) (bad) idiv pop lret inc lock loope adc mov addl rorl and dec fs xor xor add inc pop pop push xor popf (bad) mov mov icebp pop sub adc xchg or test xchg out mov cli push pop mov dec push push mov push dec xchg push ds imul cmpsb outsb dec lods mulb pop mov jns sbb pop push dec xor xchg loop adc dec cs xor and mov ljmp and xbegin xchg cmp or or bound out or (bad) pushl jns test gs das clc ret mov inc mov dec je movsl fidiv jecxz cmpsb dec mov mov (bad) mov gs pop stos jecxz sub inc das push aaa dec adc inc lahf scas inc movsl into divl imul sub inc jmp or cmpb out jmp pop and mov add idivb mov out mov jbe ds not mov aad cwtl cli mov pop sbb sub das mov into sub loopne ljmp xchg scas dec add stos ds (bad) adc jnp (bad) mov decb out bndldx xchg imul pushl or mov les aaa mov cmpsb je cld or rorb inc inc mov pop mov lock inc hlt (bad) and dec jae das pop (bad) pusha cs dec dec cmp xor xor cmp jge lods and adc adcb mov push sarb pop dec dec xor cmp nop shlb (bad) dec daa xor push sbb and loopne and push daa add mov out xchg mov sbb fildll and add xor mov adc sub fcompl cmp shr add or sbb cmp mov sbb sbb rcrb imul popf repnz pop pop jb push push pop imull test jo cltd xchg inc imul shlb push and das push cmp sbb xchg mul test cmp pop or inc push push inc out mov pop and cwtl fistp cs (bad) push push ret dec mov es roll push fsubrs cmc faddp shll fadds das mov repnz dec fwait pop and rorl xor movsl mov mov jne in or in mov cmp movsb dec lds into in add leave or jl bound rcll fwait sub and hlt pop jno dec mov jne jae jmp push inc adc jns push int movsl jl in ret mov push cli lret jecxz sub xchg xchg loop adc and dec xchg lds shrl sub or in repz push add ret aad sti scas loope mov sub test add sub mov (bad) mov xlat in (bad) lock das and xor cmp xlat mov mov fsubp imul mov lret sub js mov push inc jno cmpsl or in push or movsb les and or sub aas mov push or add or xchg push dec fidivl movsb daa icebp sbb aas dec mov daa and leave sahf mov fmulp decl rorl or mov cmp repnz fstpl jmp xchg xchg mov and bound xchg adc xchg lret mov cmp lock pop xor xchg cmpsl sbb icebp loop flds or popf pop icebp or mov loope mov data16 mov sti adc aad into scas aas xchg loop xchg mov cld in lret pop adc mov dec xor mov (bad) and daa or xchg xor xor sub (bad) lahf add pop push xchg ds mov mov ret xchg fist cltd cmp and das in call inc and add push jle cmpsl shlb sbb inc addr16 inc sub daa test mov jl lret (bad) cmp cli fnsave xchg jge rorb (bad) cmpsb pop jle aad jg loop push pop (bad) and pop shll call lcall aas pop xor test cli rol add cmpsb test dec imull sbb shr xchg mov add movsl in sub das push scas jmp xor xchg jmp aaa cmpb jle xchg pop popf je sub ret and pop dec andl mov push call lods cmp inc adc pop dec mov jae add mov (bad) xor or aas stc push xchg out ret (bad) and leave inc jae pop inc into scas (bad) icebp push jno inc or and cmpsb jne (bad) repz dec mov xor das sub aaa ljmp gs stos mov rorl decl dec push pop xor shrl or lret jmp sub mov cltd cmpsl xor dec std sbb mov jb xchg xchg outsl stc es push cmp or add sub leave xor rcr add sbb std jp or subb and xor cltd rorl jg hlt jmp sub xor repnz stos int3 xlat sub not daa (bad) adc mov (bad) daa xor lcall lret ss lock push or mov add int jnp sub fisttpl gs insb rcll cmpsl fisubr in loop rcl jne mov cs into (bad) cmp xor adc mov mov ljmp scas ficom mov mov xchg mov out xor ret lods test xor je pop mov mov jmp and and mov or mov loope iret cmp mov aad mov fidivr add push xchg mov mov fmull cs mov inc ret push and leave scas sub pop fadds ud2 aad pop inc fildl mov sub sub and test push es cmpsb (bad) mov xchg add sbb sub add data16 and or sub xor addb outsb and test test mov xchg jmp mov dec adc sbb (bad) mov xchg xor cs lods sbb test jmp stos (bad) cli jae cld sub aas jecxz pop rorb xchg sub pushf xor fsubs mov movsl dec and pop lret scas push dec insl fnstsw je ret sbb sub mov dec adc lods fisubrl inc mov fldenv xchg cmc cltd add sub pop xor movsl mov jg xor or xor and stos xor dec ss (bad) cld jne xor popf jnp and mov mov cmp sub cmp fidivrl add cld in xchg jge fldl icebp addl scas mov dec nop inc jmp dec out mov sub sub in mov dec xchg cs aas lret push in and jmp loop or pop icebp pusha mov jo push popf mov test adc mov scas leave pop or fcmovb push dec imul movsb lods inc test jmp xor lds fdivs dec sbb xor pushf sub and fistpll cmp jmp xchg out stos sub sub pop push aas mov pop test in cmpsl data16 pushf and push ret xchg add lret out mov fild cs iret (bad) into add mov push add pop mov icebp mov mov sbb fldenv out add xor test xchg and mov repnz xchg xchg push cmp std xor imulb sti sub xor push pop xchg xor shl outsl call jmp and aaa or leave sub sbb shrl ret sbb (bad) xor xadd sahf jmp mov mov pop xor and fcmovnu xor clc dec adc outsb mov mov sti lret andb mov mov and mov aas popf jl jo ret inc or stc pop out pop divb cmc ficom loopne mulb xchg mov add mov mov les dec or mov jb (bad) pop insb jmp lcall xchg adc push mov lcall mov pop cltd ds les sub mov aas les mov jnp les push out je sarl das repz inc pusha test popl mov gs scas int3 fs into and add dec decb test mov cmp rclb test fcoml sub rorb incl outsl dec (bad) cld jne js cmp mov add xchg push lahf data16 lahf int3 add in aas movsl ljmp push insb inc mov ret roll fldcw sub cmp push dec mov or cli (bad) incb jmp adc mov ret fisubr and adc int3 push sub enter lahf dec (bad) jo xor mov push fnsave outsl jl sub push jne pop sub xorb xor into pop dec inc push (bad) adc jg popa outsl and push and or or xor out pop push je lods jge pop mov pop push cmpsl push jb mov mov adc iret in xor std mov mov sti dec out and ja add rcr sub pop aaa xchg fisubr xchg stos xor mov or in or ds lods xor (bad) repz (bad) cli cmovle sub rolb cmpsb mov add das pushf stos or and movsb fucomp sbb pop out (bad) sub jle into dec ficomp fistp daa jo xchg in adc out rorb divb insb aad int adc repnz lds ja dec scas (bad) rcrb mov pop (bad) cmp out pop mov fnsave cltd lds das cli mov xchg adc testb cwtl pop mov cmp decb neg mov inc bound xlat (bad) decb and xchg xchg cmpsl fbstp xchg lcall lock push fimul pushf mov out clc push mov inc mov test add push outsb mov and test lds add neg jmp mov pop scas adc not mov ret sub sub xor cli arpl jmp idiv xor pop loope (bad) mov xchg test dec cmp imul sub jno sub das xor xchg dec inc loop popf loope sub sub add data16 stc popf sahf ljmp cltd mov add lret pop (bad) mov imul aas icebp adc ror or scas adc push mov pop ljmp inc iret test (bad) sbb mov mov movsb jecxz dec rcll sbb fs mov pusha (bad) sub mov jle or dec std or push pop xor sbb leave inc sub not stos mov ret cmp notb sar mov jmp pop in adc sub xor xlat fldt and imul push in lret cmp pop push mov data16 aas or mov dec cwtl addr16 (bad) cld hlt jmp push pop lret stos lret mov pop cli sbb outsb xchg mov test jo dec mov outsl inc ss xor popf fsubr xchg xor mov mov (bad) mov and jno push xor popf icebp mov std data16 pop sbb push mov adc inc test mov test pop mov dec mov cltd stos add divb pushf dec or je (bad) popf fiadd mov shll sub or inc mov adc fistl sbb pop xchg xor or cmp xor sub cli out addr16 leave cmc push adc lret xchg out subb xlat out mov pop scas fs mov or (bad) mov or cli adc or cmp sub mov es lahf (bad) or and pusha out pop mov daa out ja (bad) xchg std cmp pop inc mov jge (bad) jmp lret mov sbb flds push xchg push cwtl fwait sub in sub stc aas cwtl fwait add mov lcall cmc in mov dec fisub (bad) mov mov adc ljmp or clc lock dec push jns jmp dec movsb dec stc lret mov push cli loop adc pushf mov shll sub mov xor clc sub call pop stos dec notl pop mov inc ret fwait mov xchg push and pushf xchg (bad) enter ret inc bound dec cs adc or jp fdivrl jmp mov daa in mov dec cmp scas mov (bad) out pop fwait adc ljmp popa lcall testl jne mov adc test push xchg notb js iret xor and mov stos repnz aam jb jmp jnp xor adc cltd repz nop jge sub xchg ret sub loop inc arpl push dec add lods pushf ljmp loop mov inc add (bad) mov aaa out dec jne fwait or mov or (bad) push inc mov aas bound test (bad) psllq cmc xor add dec mov (bad) xchg orl or ljmp lret sub test aad push clc mov or cmc movsb mov mov test xchg mov mov jnp xchg mov jg add mov mov enter das inc xlat cwtl in ret popf jle pop push push adc sbb jmp mov or sbb jmp adc lahf adc (bad) fistp pop mov mov mov inc loop lock mov stos sub popl pop daa ficomp xchg add xor mov pop lock push and sbb sub repnz shlb or test out sub sub dec test mov iret mov dec or or ljmp mov pop xchg mov in or repz pop popaw bound dec add mov js out mov xchg cld push push mov cmp ret add push sbb bound pop ja in xchg cmpsl xchg in mov jmp mov pop fldcw xor mov shrl pop lret xlat adc adc sub xchg xor sub xor sub xor add inc stos stos mov repnz cmp rcr sbb inc ljmp ljmp dec fcoml shrl into shrb shrb popf out data16 and push cmp fisub in or lods jg in inc cmp test pop xor jmp add xor (bad) pop bound lret push insb outsb sbb and xchg (bad) mov ret push sub call ds mov adc cmp imull adc stos enter nop cs jmp adc jp ret pop (bad) imul sub and mov in (bad) mov ss push loop fstp stos dec inc dec cmp push das iret aam pop pop sub lret mov pusha lret jmp xchg lods (bad) xchg imul inc outsl sub adc xchg pop cli xor push jo mov idivb mov cvtps2pd mov imul sub lcall mov (bad) and test pop (bad) mov push jno movsl inc push mov dec ja in out xlat dec sbb test xor pop mov inc or sub push add push test fidivr std mov dec stos lret (bad) inc faddp popf push push dec shrl push add stos lock jmp mov and mov sub cmc in repz and and cmp jo ret mov push fprem inc or bound sub and lahf pop sbb mov mov dec push jne push jns cmpsl pop imul stos leave push out dec (bad) mov ficoml pop push xor icebp xor leave pusha push push cltd enter sbb and cld out xchg shl es out or pop add mov dec (bad) adc and shr mov aas inc dec orl adc stc mov mov test xchg mov scas xorl adc (bad) mov adcb cmp idivb sub push adc cmpsb xchg decb out sub mov lds enter push xor movsl sbb cmc movsb int3 outsb and mov data16 adc into icebp pop or fcmovne add mov xor (bad) or ret div jno repz dec adc iret incl scas jb pop mov pop mov out mov adc cmp (bad) sub in inc sbb pop cmp add push shrb loopne xor mov add add outsl mov push ljmp in sub cmp out shll and sbb imul dec (bad) add or jge mov jle jmp pop mov int3 push jae scas jns movsb enter adc divb mov rolb das pop xlat or daa jno inc xchg mov xchg test cmp sub lcall xlat lea mov pop lods push xchg fistl (bad) xor hlt movsb jns pop test imull add rdtsc imull fdivrs notl lods rcll in lods aam jmp jo (bad) mov dec push mov sbb in push adc test lds lock int3 sub pop push outsl imul in cmpsl ljmpw dec inc sub mov pop mov mov adc add mov into push or dec (bad) (bad) or jne mov fild push fucom xor (bad) sbb out lret (bad) xor or lahf (bad) outsl jmp mov cmp mov stos cmp sbb mov dec dec jg jns lods pop fdivs lret addr16 addl jg sub cld dec movsb stos fsubs popf mov fidivrl mov or mov ja aas mov gs fcomps pop lahf faddl pushl push cmc sbb je jo add sub out popa push imull dec (bad) imul pop mov stos jne xor add ret pushl and std pushf cmp add fstpl xchg mov and cmpsl add add or adc push repz ljmp add push adc sub xor aad cmpsb sbb daa popa or cmp sub jne stos push dec or cmc inc imul lret sub repz ss sbb mov mov inc mov clc jl sarl xchg jbe mov imulb (bad) and int3 lahf lock dec mov mov pop fadd fwait lods cmpsl in aaa sahf pop das inc dec das bound icebp icebp mov add js sahf mov incl or and sub and stc cmp rclb mov frstor jecxz sub notb xor (bad) imul outsl add xor sbb sub mov loop sub enter cli cmc mov or push push mov jne icebp push sub and repz pop and mov push es jle icebp arpl sbb mov gs jecxz xchg mov sbb scas movq bnd push stos inc or lret push xor (bad) daa into dec lahf xor (bad) fldt stc mov (bad) mov stc jmp mov das mov das (bad) add js repz jp jno xchg xor add sub dec dec sbb lods andl xchg xchg pop push and les out int3 mov dec jmp push pop sti sub xor add xor popf daa pop push pop sbb das xlat pop mov out xor data16 mov sub jb push or scas pusha mov xor test xchg ja (bad) add mov pop lret divb adc in mov in daa subl (bad) mov jns push or test popa ret sarb je das (bad) pop push mov and js out xchg mov (bad) dec aaa mov ljmp jg mov jb in mov sahf push sub pop xor fidiv (bad) pushl cs or mov mov xchg dec loopne push mov adc sbb jecxz repnz pop sbb mov pop inc add into mov dec xchg mov sub mov div jae leave call mov lods mov jnp enter bound or and jne cltd repnz push sbb mov and xor or out pop push inc pushf mov dec shr scas daa out push push jp hlt pop shl sub leave add jp divl pop icebp inc daa sbb mov andl push inc shlb cmp push popf (bad) (bad) mov add mov inc sbb pop mov gs xor mov fnstcw push inc inc jle popa movsb jns jl sbb scas ret lea movsl jns xchg ljmp cld mov lcall push sti xchg (bad) sub push in push cmp scas pop and sub inc adc push fstpl sbb arpl xchg push mov in test out pushf pushf negb fmull and mov dec loopne jecxz push cmp xor xchg ljmp add not xchg (bad) in inc xchg cld jo (bad) xor loop cld xchg leave push xchg sub sub jecxz dec inc pop mov lret ljmp dec pusha cld xor dec jo push out pop (bad) xchg jecxz cltd mov fs cld dec xchg leave push scas sub jo rcl sbb xchg bound adc pop stos jne ljmp lret dec mov or jecxz outsl cmp dec inc popf data16 clc add adc inc xchg and mov pop enter xlat and xor mov bound xlat dec add repz inc mov (bad) lret cmpsl jb scas arpl pop xchg pop pop (bad) sub and jle (bad) fwait cmp pop jecxz mov mov or pop mov xlat in das jl das jae scas popa lahf (bad) cmp sub icebp test xchg lret outsb mov int sub xor mov adc (bad) into (bad) jnp or out mov jecxz dec sarl loope (bad) lods rolw mov jp pop sub or sti fldenv das cmp push xor out leave repz rorb ret in addl add inc call push cmpsl or daa divl add movl and sub popa adc inc cli leave add out jne ljmp adc adc int3 jbe bound add pushf mov sub mov les ret jg dec mov mov mov push outsl das and dec pop and jb fistpl add inc jno imul bound repz lds aad push or pop mov outsl adc adc inc sahf adc push pop xor and pop jbe (bad) repz xchg movsb imul in mov inc push cmpsl push sub mov cmc push mov xchg jle push mov test mov sub pop or daa xor mov stos pushf std jmp mov add icebp es rcll scas lret into pop lds push jecxz and fldenv (bad) in test xor test cmp inc sbb jae adc sti lea push das je jmp je and flds sbb push jl dec enter push dec js add pop into lahf (bad) xor add dec dec mov fisttpll push mov dec or mov (bad) mov mov cmc mov mov shrl mov xchg adc js pop imulb nop stos cmpsl jge cwtl xor xchg sub jne mov loope popf shrb rcll testb cltd cmp jns xor pushl dec fcmovb loope sub push or dec out pop bound cli gs jmp data16 jle push push push adc add ljmp jmp xor loop pushf adc inc push data16 inc fnstenv pop xor (bad) (bad) jmp add imul out add lcall xor pop xchg sub lock imul xor and or cwtl bound dec lret std pop mov lea cmp popf cmp xor popf movsb xor js or rcll jbe add decb push ljmp repnz leave out sub sbb jb cltd aas sarb icebp (bad) imul leave push das mov repz sub rorb in dec daa and pop in test dec data16 test push das lret clc mov mov test repz mov or out mov push stos mov ljmp mov cmc inc (bad) dec mul js inc dec fnsave jp mov mov std mov xchg cmpsl mov ss stc into (bad) mov shrl fcmovb xchg aad add inc sub mov mov add cmp dec push out cli mov (bad) sti or or mov adc xchg out (bad) sub or push sub adc (bad) iret out jbe push cmc sahf mov xchg lods push push xor push lock sub mov inc repnz call test ss not sub push and sub add add and cmpl iret mov lret sbb dec inc and test outsl push and or add aad fist sub ljmp int3 cmp cmpsl jne lods sub scas xchg and popf (bad) rcll dec test sub loopne repnz jae scas das clc adc stos or ss push push (bad) lret dec or sub add sub bound add jae loopne sub lods (bad) in icebp xchg int3 enter push cmp stc lahf int3 sbb dec jmp lds push pop sub arpl ljmp mov add rcr js bound ds sti dec out sbb add sub sub aaa jno inc mov mov adc and adc push jmp out fprem ds out pop test stos push or popf imul je int3 test xchg test mov or mov imul sub push stos mov sarb jp xor pop cmp cs jmp aam sti je int3 cld icebp leave mov jge cmc daa push pop adc decl sub or sub out xor cltd adc dec mov pop lea push pop scas and pop cmpsl jns sub add in sbb rcl addb lret pop icebp jl xchg sub xor std into cmp iret pop add add mov xchg int std idivb ret (bad) mov pop add lds imul inc dec aad sub cmp out mov xor sub pushf into pop orb dec adc adc ret push jbe jb ljmp jle fidivr mov xchg outsl jmp dec and mov inc fdivrs bound aad iret call or jmp lods jae stos push dec lret cmpsl push mov dec in das mov fwait pop or mov add mov gs mov mov mov dec sbb shr sub bound ljmp adc enter sbb fs pop in mov sbb lods (bad) fwait pop or add icebp hlt dec leave cmc (bad) mov xor jg mov jmp pushf ret fbstp inc mov in out add das leave movsl out out lds cmpsl outsl adc add shll bnd test push scas mov imul inc cmp xchg js and sub xor out (bad) mov out mov dec push sub out (bad) in lods mov push test dec lret pop sbb outsl rolb sahf cmp jge mov mov das out jge das out mov xor scas pop adc incl inc jno sub mov cwtl dec and xor adc jle mov dec out dec xchg ljmp sub gs shrb lods sub jb rorl cli or push xchg xor sbb icebp jle push jmp outsl outsb aam add sti push movsl inc orl pop push sub xor cmpsl jno or out sub repnz jne test fstps dec in adc xor and sub add push jno ffreep jmp dec sub (bad) ror cmp (bad) jmp cmp pop mov mov add jnp test add adc cmpsl int test cmpsl pop repnz repnz cwtl jg pop movsl cmc out xchg jecxz fs les push sti test mov hlt mov je push add or andl shll sub in inc mov push xchg push mov mov sti xor lahf or or cmc jno scas js mov xchg pop sbb fbld jmp loop xchg jmp andb add jp and insb aas xchg mov shrl (bad) xchg add xorl test into push dec and xor push jmp and repnz mov push push add adc adc jmp ja fsubs aaa xchg dec add dec repz xchg leave dec dec dec clc pop (bad) xor iret outsl and call push or or idiv sub dec scas cld mov sub mov (bad) xor fstpt scas les (bad) dec sbb (bad) add stc push xchg mov sub cmp iret loop xchg std xchg xchg mov sub xlat dec adcl lret cmpsl (bad) jb push out mov mov add adc adc xchg jbe push shrl pop sbb cmp fisttpll cs add and popf jbe enter and loope ret js out test cmp aas mov dec out add loope inc pop mov fsubrl jmp and icebp inc xchg sbb cmp sarb mov ds sub hlt sahf dec sarl add sbb fistp xor and dec into out lret or add sub mov add aad dec mov or pushl dec adc push out dec lret push mov push sarl (bad) sub or std adc lahf pop dec shll sbb dec (bad) adc xlat test negl sub mov xlat out cltd or xlat or (bad) imul pop int3 jl mov jmp rclb sahf in sub scas je sti test stos cld sbb pop xlat mov scas sub clc cmpsb mov ds icebp dec pop int3 das mov lods dec mov aad cmc imul (bad) cmp mov mov out jp in pop xor jge repnz pop aas lods ficoml push lret pop test (bad) incb and fisubl mov xor sahf or xlat adc push clc test bound ret push sar pop dec loope aas mov shll sub stos bound stc mov mov cmc out popa (bad) adc sub test stos mov mov test lret dec out add icebp rcrb aas mov inc mov repz aad jns ret lods push shl and (bad) es ss mov lret mov push movsl (bad) aas in je (bad) xchg dec aam adc out fist cld fstpl mul mov mov and sti ret mov sbb das scas xor addr16 pop push dec les arpl cmp add dec dec push mov shrb lret and xchg inc xor daa push sbb movl xchg inc pop push jbe es pop jne ret hlt adc mov sub (bad) push pushf int inc and ds cmp dec push mov or xor xlat rcrl neg and pop rolb or stos cld push (bad) psraw lret call fxam lods pushf imul add cmpsb mov adc lock mov or loop cli sahf xchg (bad) mov xor or (bad) pusha mov cmpsl push add mov out fldenv add jge stos pop lahf lods sbb pop imul pop das mov stc pop outsb daa adc fldenv test enter loop pop lea aas outsl push add icebp loopne xor std addr16 add dec jne mov inc lea (bad) fs lret lea and pop stos test scas mov les std repz push push xchg (bad) mov xchg inc lret and out adc repz jo wbinvd push cmp dec les popf les cwtl jb xchg ja rcrb je std sub adc and pushf jmp scas push mov jmp mov leave je pop sub and test xchg test inc sub pop lock fisttp ja test and lea subl movsl out or repz stc fisttp (bad) into imul daa mov jp popf ja aad mov sbb mov and xor dec adc jmp enter mov pop push dec movl and xor int3 and daa clc and rclb pop (bad) xor and repz sub add and hlt sub adc lods (bad) in imull push jnp cltd lcall in sub test out jno imul stos lret in sub push icebp inc xchg cmp insb mov jle xor insl imul mov mov enter (bad) pop cmp loopne dec cli arpl cli xchg mov inc mov lds add loop jg addr16 repz cmp inc (bad) ljmp xchg xor pop ret pop or (bad) inc sub add mov jno xchg or sub and mov add icebp jmp pop pop jmp push xor cmpsb cs loop mov test clc cltd rolb and es aas and jg addr16 in cmp add idivl lahf aam inc out sbb push lods inc xor mov leave or lret test mov jg inc push xchg mov mov xlat xchg mov xor mov mov xor or in pushf lret bnd test iret push jmp xor mov or cli popf xchg xor dec out sub mov jmp pop mov push aam push idivb adc mov mov addr16 sub xor js mov out fidivl or and add jno int xor mov (bad) leave std cltd imul leave (bad) ret icebp xchg fs mov aas sub lods pop iret xor aad test jnp push jo add popa jecxz subb jle mov std inc dec loope mov sub out fxam sub jecxz push push and inc add xlat jnp xor nop dec sub push sub sub inc mov inc add sub lret mov (bad) add sahf xlat js in push and lods sti mov xlat mov enter jnp negl xchg clc add jmp pop pop xchg js cmp loope in notl mov in jle pop xor bswap (bad) xor dec icebp dec mov ja and xor mov scas iret pop pop mov sub stc pop inc mov (bad) jmp jns xchg push pop call fst jge test rclb push push (bad) or add sbb sub mov pop push in fistpll mov pop xor lcall daa mov mov ljmp xlat testl out imul scas xchg fist mov push iret mov lods push push mov xlat sbb (bad) sub cmp adc test test (bad) mov xchg lcall push jp dec and push sarb lods mulb xorb lahf je mov daa xor xor test xor stos add xor xchg das cli adc out xchg ljmp test xor jae pop in cmpsl xor pop lret imull adc or scas fbstp or pop mov sub push pop mov insl or add adc jmp xlat pop insl sub push cmp adc lods movsl cwtl sbb sub push mov and push xor adc ljmp push lahf jnp insb cmp mov jmp adc push ja std not push (bad) adc pusha in push push or decl lret stos mov sub lcall xchg mov xchg mov xchg adc movb xor (bad) sub loop pop jecxz xor negb pop mov sub adc orl out aaa mov loop rorb aaa rsqrtps xchg lret lods pop dec mov fs out jb call jmp les push add into mov into sub or and mov mov addr16 (bad) cmp repz pop ret insb push mov scas add aas inc add xor and sub shr ljmp lret sub aaa jbe repz lcall lcall daa repz ljmp mov mov mov push add repz gs test mov fsubrl cmp xor jge fimull bound popa out mov adc aaa lds ret jne add cmp mov repz sub (bad) jno (bad) sbb clc cmp inc pop mov (bad) push dec in inc mov das sbb ret and mov fcomip out jmp add repz aam pop add xchg iret ret sub xor movsb fs dec dec ret push pusha das enter pop push das dec mov lods fs mov (bad) and or dec inc jns dec jo cmp inc xchg mov xor sub cmpsl mov adc ret jbe and pop xchg icebp jmp mov test inc lret ret imul and add xor mov mov scas mov push sub mov ret shrl cmc cmp add inc xchg or cmp stos aam add leave mov mov xor out jecxz and movsl pop add (bad) cs in and enter dec into outsl adc lcall rorb xchg xchg push dec adc push xchg pop cmpsl xchg pop scas xor add mov repnz sub sub push icebp and stos xchg in (bad) mov lds jnp aaa roll or int3 les dec lret xchg sub add leave mov loopne sub je xchg sbb adc daa lret add repz popf decl pushf push sub xor mov inc ret jle push mov cmc adc outsl loope pop mov imul stc mov fld dec pop aaa push xor dec mov test xor jmp les dec xor add lds dec xor adc addr16 lret mov sbb jo pop mov insb int frstor (bad) sti stos mov shrl shlb sub icebp mov fdivrs lods out (bad) scas or (bad) cmc lds pop add in scas cwtl insl idivl mov mov sbb scas dec lds bound cwtl je addr16 ss into lods cmpsb push mov cli addr16 cmpsl lret stos mov (bad) lock pop in cmpsl mov pop mov test mov cltd cmpsl outsb or mov or adc pop in jnp flds leave out xor dec pushf out ficomp jg sarl sahf mov imulb pushf add mov add cs test lret cli insl or test push int add inc pop cmp mov mov mov pop add push and xchg inc shrb lahf sbb (bad) popf xor pop adc fidivr int insb add gs inc loop pop rcrl scas jp aad and mov mov out fnop dec idivb xchg lcall xor pop test dec xor sub lea out or lret cld cmp sub (bad) and into lock loop mov jle xor cmpsb test xchg jp push fisttp jmp out out nop incl push ds negb push (bad) (bad) pop sub das sub jl les mul bound rcrb mov jbe jmp push xor xchg in xor sbb mov mov hlt mov movsl hlt or dec stos enter sti pop add fdiv sub sub out dec adc out dec or cmp dec xchg inc lret mov mov adc jno ds adc movb (bad) pop lret lcall in loope or xor and jge data16 mov add and in dec dec sub enter push sub fs movsl and dec push lea int3 fs mov pop lods enter xlat ror or dec xor xchg adc ror pop popf or push pushf fistp and and data16 (bad) movsb sbb movsb clc jmp out dec (bad) mov jno rcrb (bad) and nop cs test ljmp (bad) sub ds in in mov shrl lds cld sbb scas (bad) lds mov imul mov fidiv add pop into es and fs mov cltd scas std add sub shr dec xchg ds push pop lcall and mov pop cmc or (bad) es aaa inc and push je lret lret jns loop xorb add and mov mull dec fsubrs mov cltd test cld push and imul dec scas das sub jns imul mov sub lret daa lret sub xchg repnz cmp sub pop dec in add or adc fisttpl ljmp and mov add bound in adc mov aad test pop add inc add pop xor repz sub pusha mov add insl lahf stos mov pop jo icebp lods nop lahf leave mov adc movsb push push sub sub cmc mov call int3 clc add repnz mov stc sbb jl data16 lds mov xor sbb divb xchg dec jmp repz js fsubrp and (bad) sbb mov pop or xlat int3 pop dec and and decb ret push jae and mov inc mov test sub lret add cmp shlb jle das inc daa and push popf sub icebp cmp rcll push and or scas or data16 push in out jmp and (bad) clc mov sub rorl cmp repz lock hlt sub sub adc cmp (bad) sti ja (bad) ds xchg jae inc es xchg and or dec xchg leave push pop jne out sub fs cltd cmpsb das test mov xor jg xchg mov jno dec stos xor adc ljmp push ja mov sbb scas bound mov sbb add xlat dec mov ret test dec add jge loop jle imul jmp jno dec cmc xor (bad) mov add push js and aad sbb icebp nop ds sub mov and mov shrb enter pop movsl test push inc lret fisub jbe mov lods and fistpll xchg je pop int3 lods in ret lret mov into inc lods arpl mov or adc ljmp or in mov fstps xor pop inc and pop push jno add mov mov xchg cltd adc mov sbb repnz sbb push add add int mov mov out outsl or pop test mov repz cmp cs mov or pop push mov and pushf add icebp push movsb mov rcrl xor jp jnp mov xchg mov lock add sub repz mov add sbb scas cld cmp stc xchg add call pushf pop in sub ds push add test pop add outsl inc push dec mov adcl sahf rcrl sub add out pop out in jnp xor and push mov xchg mov ljmp outsb push cmp dec lock cmpb inc add add sub pop stos test add push adc or mov pop xor pop jo pop mov cmp or xchg fistpll (bad) fstpl mov push jnp add sbb in ficompl xor pop or and mov jns xchg mov mov jl pop xchg call and mov nop adc xchg (bad) call shll imul aam xor aas jo add mov sub cmc mov sbb cmp in (bad) and dec add daa rolb dec daa add aam push out adc rcrl adc mov mov adc push sub ds in add outsb mul test sbb pop negb mov cmp mov mov icebp mov push xor jbe in call sub and lret cmp mov in cmp add leave push cmp movsb mov dec xor xchg or mov idivl or jge subb pushf sub push jge (bad) cmp cmp (bad) jnp leave je dec push rolb push adc mov es gs (bad) loop test neg cmp sbb pop mov jl imul cmp pop imul xchg scas xor mov popa cli mov fimul mov adc add jnp mov cltd inc sub pop mov shrl inc (bad) or out sub mov sub mov sub mov jge jmp loop and loop adc mov push cmp push int3 into mov addr16 cmc shrl test mov add mulb test orl and nop imul das push xor inc add mov lret push out xchg inc cmpsl or les and inc repz das dec rcr push mov adc sub fwait push rorl xor (bad) xchg adc lods xchg jmp add and dec jmp lea cmovnp lock pop repz or push ss out xor xor std jae cmp cli pop (bad) xchg in shl std leave xchg push cmp xchg data16 rorb sub and cli insl mov call cmp dec lret cli push hlt dec jl lcall mov push adc xchg (bad) jae (bad) cmc shlb sub or stc mov out jo (bad) std ret stos bound (bad) (bad) movsl mov scas pop mov adc test pusha daa sub mov sub add loopne sub sub andl fldcw dec dec std and stc stos repnz adc mov cmp jo jmp sub and add imul popf outsb jae and std lcall aam into mov pop sub xchg cmp js xchg ftst imul mov ss fisubl add sub mov or inc sarl jns xchg jmp mov sub xchg ja jb and cmpsb xchg dec pop rcl and xchg mov (bad) in imul loope mov aad and jns jle push xchg mov es xchg out xor push dec cli jl add ret inc lods aaa (bad) fist enter rorb (bad) jge enter lret iret jge add aaa jecxz sub sbb xchg popl sub pushf cmpsl lahf fldenv or outsl xor xor icebp or jle loope and das sub loopne jmp js pop jbe pop jbe dec jl (bad) ljmp pushf inc lahf icebp test pop fwait xchg (bad) mov pop out sub or int3 xchg aaa or push cmp sbb adc into jne sbb cltd xor insl in (bad) mov sub pop push out sarl xor dec sbb jmp daa jg shlb add push jp (bad) adc pop popf mov nop dec cli xor inc bound sbb pop mov or and mov icebp mov adc insb jle sbb mov mov push push sbb inc and sub mov push out std icebp lea repz inc test subb mov sbb mov frstor icebp hlt rorl (bad) je and mov add shll push pcmpeqb stos mov mov cltd inc (bad) xchg inc cmp sahf mov leave mov std lret sub out les aaa dec dec shrb mov mov push fsubrs push ret fist cmpsb lods lret sub pop out cmp mov gs movb dec pop enter scas or inc (bad) and cltd or test movsl sti sub fsubrs and sti dec xor out mov xor aas loop loop jo xchg lds bound sti push lret inc pop ret (bad) rolb cmp or push sub add xor into mov dec les dec into les (bad) cld push and sbb leave xchg push dec popf push and mov add leave test loope sub cwtl and pushl mov jge mov pop fisub loop pop push jg insb cmpsb aaa mov push add cmpsl into pop xchg inc xchg cmp lret add xor and ret mov and out adc repnz aad mov pop mov fnstenv ljmp mov adc sbb sahf sub pop or ja outsl daa push mov jecxz sub jne lret sahf es cwtl mov inc nop sarl inc or ljmp adc and pop sti scas sub xor sti (bad) cmc sub jle sbb inc jp test (bad) mov inc add cmp or mov (bad) aas push idivl std outsb (bad) mov add cmp lcall loope lds ret cltd in mov mov dec push in out jge xchg and gs fwait jbe sbb popf fcmovnb das je test xor mov mov jmp cmp dec xchg push adc mov subb mov sub ljmp das xchg ljmp idivl sahf ret lods xchg out int js pop or or push mov cli pop mov xor xor add xchg cmp mov xchg rcrb call mov xchg adc (bad) mov lret adc ja or mov xchg bound mov mov mov hlt jb cwtl shr dec vorps stos inc aaa adc repz pop sub or and mov sub and sub clc out mul ret lret mov xchg test aas xlat mov shlb dec roll lret pop int cmp dec (bad) mov sub and into xor loopne mov inc or inc (bad) scas or push icebp jbe cli mov pop mov xchg les loop add cmp inc add sbb dec fidivrl cmp jge push sub pop mov pop icebp pop ret mov and movsl lret sub mov lret jmp pop pop xor fsubrs (bad) daa sub std aas out adc sub or push arpl cmp mov and lock popf fstl cmp in ret sub xchg pushf and push sti fucomi cmp out fisubl mov rorl or dec ss lea in (bad) dec push cli mov xorb pop sbb das popl lock les mov xchg push in jne pop mov (bad) xor rorb mov add testl xchg mov sub pop mov out stc xchg imul sahf cmp pop into lods pop gs xor and out sbb sub add cmp inc push bound jmp and push cmp mov (bad) out adc jno jle lds mov mov data16 mov dec loop sub sub fstl cmp shll add loope cs (bad) (bad) popa add sub and add mov cli out cmp cmp gs (bad) fldenv cmp in pop out stc cwtl divb imul xor cmp mov test cmp inc int3 mov rcrl push mov stc or loop mov imull jle sbb sub mov jp ss dec mov lods out cmp aas mov sbb ret or jno adc mov add (bad) or data16 adc jl sarb subl mov inc cmpsl (bad) xor fildll sub mov (bad) or les iret mov sub ret in stos repnz xchg test (bad) jmp pop push mov mov popa jmp mov daa lret repnz out dec into mov mov dec add dec mov fxch cmp roll (bad) sub fildll and pop dec fmuls pop push mov mov sarb and out and xlat stc jecxz jl cmpsl pop cmc mov aad loope repz add cli add fldt sarb stc leave jns test pop loop mov std pushf xchg pop divb out inc sub insl clc loopne fnop pop lds adc fistl mov add xchg ret pop (bad) aam int3 lahf stos jg ret mov stc jg adc sub lret fcoms push mov xlat and mov xchg in xchg cwtl inc pop ror dec xchg adc xor neg hlt push mov push enter movsl mov mov and ret (bad) pop in ljmp sub dec out sub cli xchg mov aaa ljmp outsl test cmp jecxz adc iret out sbb push dec jmp sub fsubr sbb pushl pop jno dec push (bad) sub (bad) repnz cmp mov mov mov or xchg mov adc pop add jmp mov pop sub pop stc outsb outsl rcrb cld mov outsb sbb push data16 and dec push hlt aas add xchg repz sub and pop fisubrl add lret add add jl mov cltd data16 stc movb sbb negl movsl inc (bad) dec aad lock cwtl loopne xor (bad) or xor testl inc (bad) int3 dec ret ljmp jge cmpsb mov js dec (bad) ljmp or mov enter stc mov sbb sbb dec jp push xchg clc adc mov stos jp ljmp sub stos cltd fsubl dec lret dec lock ljmp sbb sub pushf jb pop sti cmp ljmp lods sub and mov popa and fstl pop mov loop shr mov loope jecxz stos sub and ds (bad) idiv lret sti ret (bad) cld lret push repz or loope and xor jmp jmp fstpl dec pop outsb lods jbe add movzbl leave adc outsl mov dec test les adc add cwtl add sbb icebp pop and bound push icebp fcomps xchg rorb mov push repnz mov aad jno and movsl jne mov fnop imul fmuls test sarb mov pop cmp pop out sub push ja xor adc inc ret xlat out data16 cmc leave jmp sub sub out ds and (bad) and iret xchg pushl ds out push mov cmp pop pop xor enter xor inc das and jmp mov add ja clc cltd jmp das dec push jmp xor cmp sub cmp push push jb xchg jmp xchg pushf xor (bad) and mov stos movsb nop (bad) mov (bad) mov (bad) xchg aaa insl mov fadd ret cmp je pusha pop cmp xor sub dec pusha mov inc das mov pop les xor push xchg xchg mov mov inc test (bad) into pop repnz nop (bad) dec into aam int3 mov mov stos pop sub mov dec or cmp stos out sub pusha lock popf mov call (bad) insb psrlq push mov (bad) movsl push inc icebp jle enter aad xorb jo and add (bad) stc push pop bound jno lret aad and add xor jmp and fldenv leave jno add out mov add scas mov dec movsl xchg cmc lds xor jb add flds sbb and mov cltd into jp pop jle (bad) fiaddl sub sub dec dec dec xchg mov xchg push out mov imul xchg or push xor sub adc mov push sbb jle loop sarb bound sbb in (bad) adc lods outsb ds dec sub add jg lcall aaa sti int fidivl xchg rolb int lret mov and mov jbe imul je jmp scas xor xor mov mov leave inc aam loop andb dec iret aaa mov cmp xchg repnz xchg adc lahf daa out mov std out jb or pushf mov out daa outsb mov test mov pop loope jno cmp stc call mov mov sub fs jmp push (bad) cmpsl iret cmc cmp jge inc jmp ret xchg lock dec add mov xchg out stos repnz nop dec xchg mov sub xlat mov adc (bad) mov movsl je xchg fisubrl jb dec insb dec cmp in cmp sub repz and mov jge mov rcrl cmp mov loop push hlt out pop pop jl push loop fisttpl or add rclb sub loopne into and fs pop jecxz sbb xor cli cld push cs out aam stos call loop xor daa fsubs jmp mov add xlat out or push nop xchg jne mov jne dec pop inc stos sbb xlat insb mov fidivr sti jl (bad) stos or pop in push pop ss inc jmp test (bad) push jge cmc adc cmp stc scas jmp ljmp out jb outsb shll jg popf cltd adc lds ret lds call cmpsl ja jmp ds cmp scas sahf dec sub mov mov inc fxch inc (bad) sti lret xor mov and mov push scas ds rcl mov lret out pop pop clc pop ficomp and mov dec mov std mov cmp xor pusha sub jmp and adc scas fs out xor mov outsb sub and add fs or (bad) sub add out cmp icebp out stc mov mov test (bad) repz push aad or mov push add call sti adc push icebp sahf imul push (bad) sub mov jbe adc out sti out daa cmp aad ss ret push enter pushf out or inc dec dec jmp jae into je xor dec sbb add lcall push jmp mov mov xlat pop divl pop ja lock xchg hlt addr16 and ret mov test cmp (bad) fstl shr popf aaa outsl xor lcall daa in or xchg pop dec dec (bad) mov negb push dec insl and outsl mov pushf scas xlat cltd mov das clc repz mov testb mov das jecxz psubd push dec jp mov sub andl xchg cmc repz dec das add sbb (bad) xchg cli push pop je imul imul pop and push xchg cli ficom push xchg xchg ret sub sub (bad) jns push xor cs (bad) mov adc xor lds xchg mov push inc inc sbb mov mov sub int and mov call mov lcall sti mov pushl bound inc sbb jne or ljmp mov into (bad) inc xlat add lcall loope dec test push jmp mov and pop enter add adc adc out jmp and pop stc and mov clc sbb shl xor and and shrb les (bad) push fmull pop sbb ss (bad) jl xchg adc adc mov (bad) (bad) repnz jl js ljmp pop and xchg loop,pt sub add push stc fiadd call xor ret popf jle repnz add lret mov pmaddwd fist xchg cmp lock add sbb sbb inc inc jmp xor push xor pop sarl jo clc sub js out addb lret shlb pop inc xchg fwait rclb mov push sbb jno (bad) leave clc cmc sarb xchg out jecxz ror lret pop test leave lods mov roll loop movsl mov popa xchg gs xchg lret dec sub pusha mov ss and xor fild mov rcrl adc dec out add out sub mulb dec clc (bad) pop fisubr enter das push mov bound cmp and xchg leave jmp xchg pop test lret and add call data16 out pop mov dec and add push xchg mov mov leave out add and iret or icebp or sub sub adc mov stc xor xor (bad) xor and icebp mov stos call mov add or insb into add stos cmp stos xchg and fistp rorl push ret fmul bound push ret inc xchg icebp aad pop into sub fsubp jbe push in sti xor xor dec xlat cmp call xor aad mov jl push hlt mov ficom mov ljmp sbb dec test pop lods test lds jns ret or mov push pop shlb jmp (bad) and ljmp dec mov ss mov push insb lock mov mov push adc shl outsb mov or push fistl add adc xor movsb xor pop sub ljmp xor pushf push insb mov out pop sub ds ljmp push xchg pop push push add mov int sub daa ja das or leave jo movsl lea push mov sub adc and sub lcall out xorw mov mov outsb inc sub jg sub movsl xlat in and fs adc dec cmc xchg dec (bad) icebp imul je or and cmpsl pop xor lcall pop iret fldenv push add iret cmc mov jmp popf or pop fmull mov cli aam (bad) repz pop xchg pop bound ret push mov inc or std in jmp xchg lds push adc fdivrs call icebp out pusha (bad) ljmp sbb pop ret scas inc jecxz in rcr (bad) loopne sbb and inc lods cmp jp sbb test inc sbb jne pop fsubs testl or adc push xchg fbstp sbb xchg push add xor add insb pop pop ret ljmp lods or fldt fdivp mov mov mov xchg inc mov jmp adc lret push rolb inc ret loop nop lods or (bad) mov fiadd fbld xor cltd (bad) iret jp cmp rolb outsl mov fdiv push mov imul push and sub and xor and push mov out popa add or jmp mov popf ficom fisubr dec mov jecxz and loop hlt sbb xor xor repnz push ja test mov mov pop pop mov sbb cmpsl mov and mov and cmp sub cmpsb xor mov push in adc sti gs subl cld pop ret lds and xchg lret loope xlat aaa ret sub cmp pop lods push add stc out xchg (bad) ljmp jmp aas scas pop mov and sub adc xor repnz push popa mov pop xor cmpsb inc sub push popf jo dec (bad) fs cli pushf push and cli xchg and mulb dec dec jg xchg or (bad) push cmp clc popa lods mov orb mov (bad) repz xchg fs clc aas movsl lea jge pop pop sub pop movsl (bad) mov lret mov (bad) pop sub test push mov imul sub (bad) dec ret and or das out inc mov mov loopne xchg dec adc push sbb sub stc test fs xor push and add sub js (bad) ret jl daa xchg fwait daa (bad) mov or push xchg sbb lock push sbb sub add test out stos ficoml cs loopne dec jne mov or stc jne and jp mov pop and xchg dec out pop and clc cs sbb jne mov sub cmc mov (bad) or dec push cmp or std add jo xor test ret mov mov into jmp ds xor xlat add pop xchg test xor add (bad) (bad) sub jecxz jle out imull sti mov and push popf inc sti into xor push movsl rclb jecxz (bad) iret push bound push pop add leave mov mulb mov leave cmc adc aam mov int das cli or call ror sub sub out push (bad) jb add cmc dec pop popf idivl div cmp mov shll (bad) imull jmp mov shr (bad) in dec jbe mov mov pop das jge adc shr lods shrb mov push fwait aad (bad) mov jmp fnstcw push or addr16 and mov bound test add xor add mov xor (bad) jns dec push xchg ret and das jge shrl dec jmp (bad) jl mov call mov fdivrs dec in mov fs or loop sbb aaa das fistp mov clc icebp and and adc jecxz negb lret push xor mov popa and and leave xchg insb idivl xor (bad) lock pop adc mov sub dec addb dec lds pop dec mov sbb in jmp xchg lods and (bad) cmc out adc shlb push or (bad) pop inc icebp adc xchg push sub int3 test xchg push inc (bad) (bad) sub jne sub (bad) dec mov dec ficoml xor jb sti mull sarb pop fdivs flds mov sub rorb adc mov std sbb mov adcl xchg fabs fs adcb lds pop clc xor xor push stos adc gs push mov jns daa xchg (bad) sub pop or fmuls mov into gs inc or add enter sub into dec ljmp insl (bad) jmp sbb fdivl cmc xor cs ja dec jae jmp xchg lea push pop cmp mov jae mov mov popa adc shlb sti cmp cld adc mov mov xor ss or adc sub js xchg push mov mov add or jnp and sub and les in gs or (bad) mov call push in out sub jle in sub and or jns roll pusha push pop mov outsl mov xor das fsubs xchg ljmp pop sbb int and loop xor sub mov jnp sbb mulb scas mov xor fnop das test in (bad) in jns repz inc pushf int ret xchg jnp movsb gs ds (bad) aad dec xor out dec lea push fstp icebp cmpsl adc ss pop ret std xchg sub orl pop adc sub gs sub mov sub movsb inc lock out repnz das pop ldmxcsr sub sbb lock out fcomps ljmp fidivr xchg ds popa in lret sub jo mov cmpsl or (bad) mov mov mov mov popf jbe or lds or and imul dec jg out sub (bad) mov test ljmp fdivr imul int sbb sbb cmpsb push adc ja lods xchg stc inc lods fild pushf pop das mov in push and add jbe imul stos xor adc xchg into stos in sub (bad) push and xchg sbb jle mov pushf inc das out cmp mov out out add test mov pop and jb shll jge push sbb divl mov dec or test mov fcoml sub jmp ret mov rcrl or jae pop clc and adc movsl rcrb jg add fstpl xlat repnz adc mov mov int3 xor pop addr16 jecxz dec scas xor mov xor mov orl out in or jmp rorl sub inc scas cs mov ret incb xchg pop je push sub mov adc push xor inc jmp xchg not pop aad xor movsl xchg xchg lret stos dec lea sbb mov adc sub call inc and rolb (bad) pop or addl xor movb sub cld adc pop lahf pop stc pop jae dec sub xchg sbb cmp push or std out cs and xor mov adc (bad) fmuls sti and daa add dec lahf add lock xor roll jbe adc cli lret (bad) pop sarb clc xchg cld push inc add jbe fs shrl mov sub enter xor mov lods bnd or xchg pop dec inc data16 mov jo xorb out into adc fmul outsl test int3 xorl test fldt cmp clc sub das ja mov add adc xchg adc cmp std cmpsl fsubrs les cmp imul fucomip or add dec divb push ja xor or aam lret (bad) dec test enter dec out std fimull add xor mov ret fstl fucomip jne mov repz add lret sub cmp mov insb gs sub scas test scas lret ja push ds push cmp inc fcoml adcb xor cmp or cmpsl mov xor add scas or inc jno inc mov inc push pop add xchg jmp icebp scas das test mov mov popf cmp xchg dec shufps sub xchg test subb imul popl leave (bad) push in das xchg mov popf push and (bad) fsubr fisubr mov adc sub dec add aam movsl push inc push sub mov out sub dec ja das mov and or pop push les adc ret in repnz leave push jns mov and mov dec sub mov pop jae test inc jb adc test cld cltd sbb mov (bad) (bad) icebp pop and test mov xchg dec out mov sbb mov jmp jl sti fs loope jle sbb and jg cmc outsl rclb mov fisub out xchg insl xchg nop mov and out mov movsl cld iret adc lea jno sbb scas testl jp inc pop test out inc outsb mov imul push push dec sub or xchg push cmc mul jnp add xor sbb and lcall inc dec and pop and les ljmp dec es sub sbb dec xor shrb xor sub test xor mov xchg xchg aad push xchg pop insb mov or into test xor stos out les dec xor mov lcall (bad) adc jmp jmp or scas mov inc xlat add out pop cmp mov push loope or negb xor adc subl nop or (bad) les into jg iret sarl pushf and cwtl repnz dec cmp lcall jb and in add into orb arpl daa das inc mov push sbb icebp fldcw pop addl (bad) xchg mov ficomp mov nop incb or sub or jae or jns mov add mov (bad) repz outsl test push push or sub mov xor mov das sbb cld ror or std inc lods cmp loop and insb repz jns and lods jno dec mov lea imul loope addr16 mov sub (bad) adc jo test push jle jecxz mov ret mov and push imul scas ret lds or and int3 sub push push xchg jno jbe push shr cwtl in out push or pop (bad) mov mov dec cmp test push popf add or mov (bad) mov mov faddp in sub icebp ret (bad) xchg push inc jb add xlat jno or ja and sub scas jle and push xchg sbb sub call daa jnp jmp xchg (bad) push lcall sub or jecxz sub or push pop ret fmuls decl lds xchg idivb jnp fwait test loop aad test xor xchg mov inc jbe sub push test lds dec sar clc std push fstpl test push mov lret inc or add mov xlat (bad) dec daa (bad) pop into cmp push push mov add mov lods negl sti (bad) adc sti cmp lea or in sarb mov sub enter jmp cmp xor insb pop and sub lret mov addb hlt lret pop and lods mov and outsl lods adc jmp cltd test inc adc cmp ret push (bad) pop imul adc cltd cwtl popa ret xchg jp mov sub (bad) mov and ss and xchg repnz gs cmc or inc push dec cli ret xor pop fs sub add add mov push cmp lret test add xlat pusha scas mov jge ljmp xor add jmp idivb cli (bad) add mov cld push pop cli xor int3 dec push into mov pop or into test imul lcall mov dec scas mov orl notb cmc mov push xor int jg pop cmpsl bnd (bad) or test mov daa add rcrl adc scas loop push mov add xchg sahf add popf pop jp add sbb mov cmp push mov in mov and sarl pop jg mov icebp jle adc aam cmp jae xchg out add fwait imul xor xchg push lret push mov dec test mov xchg add les cmp pop pop test jg jp sub (bad) enter mov adc xor out lret (bad) roll mov pop test decb fist sub (bad) jmp xor push and or fcoms xchg cltd xchg gs or adc into cmc fnstenv das test clc dec call xor push iret lahf fisttpl mov jbe jno sub lret sub xchg (bad) jmp (bad) jecxz mov dec int inc xchg add aas std sarb jmp inc sub aaa hlt adcl shlb add in into cmpsb mov xor test pushf hlt nop outsb jl popf adc hlt aaa inc xchg xor xor test and (bad) sub std icebp ret sub (bad) mov pop mov ret lahf inc aas daa pop (bad) imul cmp dec lahf push sar into pushf pop stos sub scas loop ret rcrl mov rcrl scas and push inc into loopne and (bad) mov xchg push mov mov and (bad) dec xor sbb decl sub gs cmp lods dec scas sub hlt adc mov adc dec push ret jbe outsb pop xchg jb dec sti mov fsubrl xor or or mov push pop push ret adc pop lret mov cs jle sub inc adc mov and lahf shrl loope repz popa pop ficoml aaa nop jae jns push add add cli sub xchg or test andb mov icebp icebp (bad) push mov sub scas push ja sbb or insl mov (bad) jno cmpsb mov stos (bad) xor popf pop pushf mov pop jne out mov sbb out call imul push xchg and icebp dec adc dec (bad) leave das out and (bad) mov outsl mov scas ret imul mov or stos pop jmp mov add dec mov jns xor lret or xchg push jnp movsl ret cltd aaa (bad) cmp xchg mov mov xor enter sbb xor shlb or enter push mov inc pop into lea lret adc sub enter cld aam push jecxz incb lcall xchg jg stos mov mov xor aaa push add sbb push dec sbbl sub pop lret imul test cwtl dec adc jmp fldcw in or push add or shrb test jge pop into sub fbstp ljmp sub lret repnz lds dec mov ja stos dec (bad) lret mov and dec xchg inc sub icebp mov jg pop leave iret jge sbb sbb xor push rclb jbe (bad) fsubrs stc ds ds loop (bad) ljmp fstpt sbb inc (bad) and cs daa ret jle jb ret aam lds in or xchg lock decl dec mov dec pop sub push insb mov jne jbe cmp sub sub stc jecxz push repnz out int3 cmp add stos bnd sti bound sti sbb ret jg sbb sbb jns push cli pop jl in and pop outsl inc sbb cmp sti lahf inc cmp jo das rorl xor stos (bad) (bad) into or and sbb push push mov scas pop (bad) cmp sub mov shrl xor stos pop addr16 stos mov rolb mov add mov sub push ljmp dec leave mov (bad) (bad) lods ror iret cwtl mov add (bad) sub icebp aad clc scas adc and mov mov adc mov das lret cwtl or shr xchg in je sti sub sbb aaa lret inc mov xor push xor xchg (bad) add jge outsb mov lahf (bad) push adc xor stos mov nop cmp pop stc and aaa adc pop xor or add cltd fcmovnb lods lret xor (bad) ja jnp jae pop mov add icebp or and and daa pop in add push mov jmp mov (bad) xlat mov rcll loop or (bad) mov mov sub or js fsubl mov sub mov inc cmp cwtl xor nop jo aaa ret icebp push mov into dec fcomps lahf stc mov jae sub jmp push mov mov add mov fmull popf inc inc idivb mov mov mov mov xor mov bound fidivr fist test or xor fsub push cli (bad) loop mov ret pop hlt andb (bad) decb dec adc fucompp dec pop sub repz pusha xchg and jnp xlat sub and rcrl pushf adc inc and or test jne add add or mov cltd fimul sub hlt and out into or lret or lret into es shll jmp xor sbb mov pop je mov fldenv xor and mov neg mov (bad) in sub ret es sub imul push lret cli mov jecxz mov in sbb lret add sarb sbb mov mov sbb out add jne jg popa lcall mov pop in xchg xor jle or mov notb jne nop (bad) jge rol pop shl pop sub rorb adc push into jb mov add or (bad) fwait mov add mov ja,pt (bad) xchg cmp xchg scas adc (bad) xchg icebp push cmp das in scas xlat mov dec in test ret fist out stos jbe or xor test testl leave pop pusha scas jb icebp pop push (bad) rcl or jp fcom dec adc xor inc inc or adc movzwl xor mov and in add xchg cmp arpl popa sub pop jg xlat call mov adc push add mov jne cmp ljmp mov sub mov mov ljmp cli cld or (bad) movsb cli dec dec rorb xchg cmp out cmp push out mov ja movsl or add in repz mov inc sub jle aad daa or pop and inc cmc pop sub idiv sub pop pop imul push push add repz dec jbe dec mov jae or sub ret popf jmp sbb sbb mov push mov jo das push add and pop pop sbb pop lret xor leave aam jmp mov inc leave xor movsl cmc into xchg add addl mov stc pushf jo or scas sub xchg sbb add fsubs fcoml xchg jns (bad) iret and or mov js test push push insb push dec sbb movsl mov jmp (bad) or jmp das xor aam push pop push mov pop sbb sti lret ret lods (bad) mov pop imul pop imul fbld pop mov sarl add jno mov or in fnstcw ljmp icebp mov inc movsb and nop add dec sub sub ror push cmp iret sub in add fcomps or mov fistl dec cmp mov loope int3 shl sbb dec leave sar inc popf add scas iret adc test scas xor repnz pop pop pop pop pop pop pop popf (bad) test (bad) mov loop push (bad) dec push or push orl ds and and out imulb movzbl mov jmp jno rorl add xor jno inc push mov push add jp test and jmp ja mov rclb jmp into xchg icebp fsubrs xor xchg dec shrl dec popf jnp movsb mov (bad) sbb ja mov mov dec pop outsl jmp test iret xor sbb sub jg lea and incl xchg ds add mov inc pop push test cmp mov sbb repz lods repnz aaa call mov daa sub xchg stc test je lds arpl push cmp (bad) out out stos jg cld mov sub add xor cmp mov aad or xor sbb push cltd fistl pop mov sub adc add mov aad add xchg fsubr into dec icebp sbb scas pop push ffree stc dec mov and ret sbb ljmp iret xchg sub and mov (bad) or add enter popf and xor xchg scas lret out adc mov xor fistp dec pop cmpsl push gs lret sbb dec lds in xlat stos xchg mov aas mov loop xchg aaa pop sub scas mov dec clc adc (bad) test or and jmp xlat xchg pop int add cmp ret jne xchg (bad) (bad) jmp push or das xchg cli pushf loope fs adc cmp or inc lock loop fwait lahf fidivrl stc mov scas sub add mov stc icebp test dec ret (bad) push fisub jle or pop repnz dec std lds ds loop and lahf insl cs ret fildl fstps mov xchg bound call ds and jmp xchg push loop sub xchg pop sub push dec mov jmp outsb arpl scas xor scas cmpsb cwtl pop sub and je stos mov and and aas aam stos pushf stos jmp and add xor std (bad) out cs fs ret fidiv lret (bad) push cmp mov dec cmp pop pop xchg lahf and cmpsl or pop lret (bad) xor mov or jmp fs stos out pop mov pop sub ljmp leave cli mov sub fiaddl add sub fldcw lret lock fwait in (bad) fcoms jecxz es dec mov push and and mov scas hlt cmc (bad) (bad) and jg test arpl push into in push xchg pop inc lret pop (bad) mov jle in stc and testl (bad) mov or and fsubl in add leave add mov test call stos xor stos adc mov lds fsts jae ja outsl mov push pop loope dec pop mov (bad) pop mov xor ljmp mov (bad) ds ret jmp scas push pop out jp add das dec xor shll adc ficom pop inc (bad) xor es in lods aad arpl cmp imul cs inc std dec xor or or (bad) icebp fstpl pop sti andl orb jp mov stos or pop pop mov in (bad) adc scas loop fxch xchg adc sub push or mov xor cmp cwtl and xchg ja jge arpl mov icebp repz cmp sub clc xchg cmc dec pop aaa dec or ds inc leave rorl inc jae cs aaa mov clc out or fmull lret add push data16 fidivr and cmpsl sub sub xchg (bad) ljmp or mov mov mov aam cwtl and out cmp shrl sub sbb lock mov or popa je (bad) insb sti aad sub cmp pop mov movb and out cwtl lea mov jmp (bad) cltd lahf push cmc mov jmp lds and adc int cmp loop sub or cmp pop fcoms icebp int sub cmp arpl push jmp ja xchg adc cltd mov dec xchg add add and movsl jle vmaskmovdqu leave imull mov dec call sub int3 cli and mov sub sub push mov cwtl jbe fstpt sbb into (bad) mov and mov sbb xor xor sub rorl jbe mov inc or inc div jae mov mov jmp pop push cmp mov mov xchg js pop and adc loop cmp daa movsb icebp jnp sub decl jg jg ret sbb clc lahf call add (bad) mov sbb cltd ret scas dec sti fadd out xchg jno pusha add xor cmpsb (bad) iret cmp xor jo and rcrl pop jb mov xchg es pop sub (bad) jno bound fdivp sbb out mov repz loop mov push lret and pop xor xor mov js pop into or adc scas lret popa negb mov adc in std sbb (bad) xchg xlat mov mov dec or je,pt notb icebp inc adc stc mov add mov sti pushl scas cmp mov xchg or and mov mov adc fstl push dec push mov (bad) pop or dec mov ret pop loop (bad) out dec xchg and mov in push push das xchg (bad) push mov cld inc loop add or aas fdivs dec and lret push pop mov test mov cmp and sbb pushf pop insb and xchg hlt push add rsqrtps sub sub mov shrb dec jp (bad) jle fbstp pop mov popa lds mov mov cmp dec mov gs iret mov je sti lret adcl sbb add add and insb push stos addr16 movsl icebp cli jecxz dec mov or loope cmp ret bound jno subb mov sub jnp xchg imul dec and gs out and repz jmp jecxz loope cwtl pop xor clc aad or dec cmp sub jmp je gs pop enter xchg adc mov or pop or cmpsl xchg mov mov out inc (bad) fs mov adc cltd iret push sarb out xor mov mov sub subb movsb out cmp pop xlat mov rolb inc leave rclb mov int3 mov jge scas jmp mov divl pop enter shlb lock xchg inc add aad sub (bad) test dec aaa xchg dec sti push cmc mov std xor cmpsb outsb dec mov iret xlat loop sub lret xchg dec push xor pop adc fisubr fcmovnbe sti aam cli xchg and mov test dec pop and lret xor incb lods hlt xchg lds cmpsl in inc or dec pop ret pop dec adcl sub mov fcmovb in xchg xor jb movsl jle and inc jg ret jp jo test mov xor scas (bad) xlat dec stc mov xor dec cltd fidivrl mov pushf adc ljmp sub stos out icebp shrl push and mov mov pop mov inc pop sub cwtl add xchg mov mov aam rorl and push xchg int3 xchg sbb xlat fbld xor cli divb in and xchg sub pop scas pop ljmp sbb ljmp mov mov or in nop mov dec fcom jl mov sysexit push inc jmp mov aam in xor bound mov pop insb cs or push jecxz insb lahf mov xchg add xchg xchg adc sbb fs mov jns xchg xlat out fptan jnp stos test fistpll adc (bad) xor loope sub enter (bad) inc ja adc sub xchg pop xchg sub mov xchg mov mov mov mov lret jne lret adc ret xchg shr jno add cmp and mov push divb sub dec jne je (bad) push mov fwait inc (bad) jns divl cmp push (bad) ds and add sub mov arpl jmp push jmp sub shll leave jne pusha push loopne mov pop out jbe lret fs mov dec fsubl dec loope mull das (bad) cmc cmp es mov mov mov jle insl mov push icebp adc xchg addr16 sub leave js in mov jb xor out dec lods add je stos mov dec xor aad test clc movsb rclb push aaa adc mov test (bad) jmp sub cmp push sub (bad) stos jecxz rcrb leave iret xor inc xor push and pop cmp sbb fmuls lcall cmc idivl cwtl test fpatan inc dec sti jb sarl dec sbb enter sub pop loopne inc fsin bound inc negl sub or lods aam lret push and push cmp icebp sub xor out mov xor in or hlt mov sbb outsb enter hlt sar or cmc iret cmp dec xor fldcw pop out ret xlat or mov dec (bad) test repnz stc (bad) push arpl (bad) ljmp add inc mov sub mov out testl inc repz retw jle add dec lahf jo mov addr16 jne cmpsl dec retw push dec cmp mull dec imul xchg sti add test enter ret aaa and imul fcompl sub cmp pop cs or push push inc pop adc mov add aas add sub and push mov stos (bad) mull inc call push (bad) adc fwait decl out fcoml cmpl mov imul sar stc jge sub sub lock mov jp jge push in and mov push and dec lock add and fldl cmp jne add aas push mov xor les xchg rcrl inc dec sbb cli sbb mov sbb push icebp fwait inc adcl pop mov push pop sub jle mov pop mov cli (bad) dec xor lods mov pushf rorb sbb or mov fisubr (bad) adc fbstp pop sub ds daa pop jge (bad) mov int outsl add fs push jecxz sbb cmp sub adc mov pop and stos lock stos pop jbe pop pop push mov shl add push not dec mov add stos xchg cmc pop lock stc fdivs xchg addl dec xor pop insl push mov add adc orl addl and push push stos lcall repz and jno sti dec push xor push push fs sub hlt inc mov add pop gs add or outsl dec cwtl mov jbe mov mov push and mov orl sti popa pop jle fs fadd ljmp add dec cwtl inc add aaa aas and pop mov pop mov mov push jnp push sbb cmp sub mov es xor clc lods sbb dec mull loope outsl jne mov cs xor xchg xchg sbb jle out dec jmp inc scas adc ja jo add mov nop mov sub incl xor fildl leave cmp mull cmp leave fcmovnbe mov (bad) or or repnz sbb cltd les stc dec inc xlat and or outsb icebp mov xor (bad) push das pop fwait rorb mov lret (bad) dec push andl fldl2t iret or pop data16 dec icebp out add xchg cld pushf or ret stos ljmp test adc mov mov adc lret out mov cld call pop mov aam aas xor adc xor int cld xor and in cmp mov out pop lret clc jmp sub (bad) jp pop bound lds mov push cwtl mov sub adc mov dec dec test xor test cld pop rclb and push or mov jmp (bad) xor pushf jbe jns pop test stc xor cmp inc sbb mov scas mov pop dec (bad) mov and push gs adc icebp cltd adc xchg jno jge ja add movsl fnop jecxz and jl (bad) sub sub (bad) repz cmp jb rcll mov (bad) mov dec fist pop add out orb mov cs push inc inc out (bad) sarl xchg or and push stc aas xor cltd inc sub xchg and push test (bad) out cwtl lret dec lret pop inc jmp ret cmpsb ja jmp cli mov xor popa inc repnz pop mov test mov sub mov pop fildll mov imul test and push stos lret clc lock add rorl xchg sbb push fsubs std into and xlat test add push movzbl inc xor mov out sub cmpsl cmpsb mov fnstenv or mov jg sub ret pop loope push sub lea sub mov jbe or bound mov jnp mov push pop je (bad) xchg aad out sub xchg aam jp insl iret out mov add xchg mov call in xchg add xor hlt cwtl jl pop (bad) imul jg and mov cwtl ficompl add pushw or or les pop stc ret cmpsl je pop mov mov repz dec xor fisubr lret jne adc sub push pop jmp mov testb and ret mov xlat retw sbb or cld xlat push mov mov fistl or ljmp bswap and inc xor nop iret dec jb inc (bad) scas faddl push xor das scas xor nop xlat icebp lods or fdivrl sbb pop sub outsb mov lret je pop pusha mov sub ja negb gs fs nop test dec rcrb adc js push jle data16 sahf push loopne pop xchg mov (bad) cld sbb add fbstp pushl cltd fldenv test push sbb pusha out jno push daa jge inc mov sub fist dec into xor ljmp mov divb mov dec mov cli addr16 clc jmp xor movsl mov sub push int inc test rcll popf (bad) aas jmp clc mov loope pop fidivr dec mov jecxz das or movsb jne mov (bad) lret xchg popa (bad) lret sub and cs bound xor out xchg cld lods movsb cli cmpsl jo or (bad) dec fdivs push aas daa or push mov out sub add adc iret and mov jmp fsubrl add push (bad) push pop xor popf int3 xchg dec fistpll xchg nop push cs addr16 (bad) xlat insl jmp fdivrl push std pop jns sub xlat dec lret sti iret sub clc loopne push xchg mov push addr16 (bad) xor xor push addr16 out xchg push (bad) dec xor out mov and jnp or repnz mov int3 jb (bad) jp dec shrb or dec out dec adc add sub stc sub and in loopne lss outsb xchg mov add jp lods dec pop mov mov jle pop xlat dec int orl mov or inc je fnsave dec cli cltd js jp inc jmp repnz push push inc lret sbb cmpsb mov (bad) cs scas mov and enter xor aaa mov imul and das cmp (bad) dec ret std fbstp xchg popf mov mov pop repnz inc pop ja mov and int3 gs mov xchg cmp cmp sbb mov adc nop and and cwtl lods or movsl pusha fsubr pop mov jmp stos les lret push mov or cwtl aaa ljmp (bad) pop stos cmp xor xchg test rorl and push push rcrb mov sbb push xchg inc xor (bad) push add inc ja shrl divl (bad) icebp cs mov push into pop pop or add push mov mov pop pop dec push push out pop out jbe lret pop mov or repnz sub aad add (bad) jl pop addl cld mov test jp add or push rol mov scas or jle push mov push sbb jg in int ss incb sbb add fs add pop mov pop pop and pop divl shr and push add pop push jb mov hlt add sub scas insl xor or bound ljmp xchg loope fimul jmp xchg or (bad) dec push inc stc arpl loop xchg aam xchg leave add or popa add sbb xor out ds cs enter pop sahf dec rcll pop (bad) push dec sub dec inc roll mov add loope inc int3 jo int and out xorw pop popa pop lods loop mov or das adc jp and repz das fs xchg das call mov sbb (bad) jl stos lock sub xor clc jge sti add jno ljmp sbb dec int3 or jo add aad inc nop pop cwtl pushf or (bad) xor test lds mov sub inc pop push dec negl enter cmp lcall adc or mov test pop outsl or jg jne mov mov mov mov ret adc or sub popf sar ljmp bound lahf je ret fstpl xchg sti mov adc mov xor pop mov add sbb sub inc orl bound inc dec pop jecxz subl sbb or rcrb jmp dec sbb and in mov add mov lea subb inc daa or xor (bad) sti pop dec mov icebp or neg xor in stos stos iret push pop lods inc enter movsb fcmovnb add inc movzbl sub fildl sbb push jg fcom mov jb movsb mov repnz xchg pop (bad) stos lea add pop fldt lret add pop or mov sub lcall fcomip aam repz xchg sbb (bad) mov adc pop sti pushf xchg inc mov movsb out push in pop (bad) cltd mov dec pop sub adc loopne mov dec sti test stos test inc mov push cltd pop idivl jle popf xlat sbb sbb cmp mov and or and dec lods inc iret push pop in stos out mov mov (bad) loop xchg in jl out dec mov jge faddl adc xchg aad push repnz (bad) mov hlt jmp nop mov das and and add dec (bad) xor mov divb dec imul (bad) xlat push dec dec jge scas add idivb das sub xchg js popf inc fs xor shll loop lock dec add iret sub jae mov notb sti and xchg push adc mov orb rorl aad aam xlat icebp ljmp inc jnp,pn out ret mov out or add into movsl bound rclb mov test std cmp jge aas nop jmp (bad) mov fisubr xor fisttpll mov dec xlat stos les cmp jnp fidivl push daa push or jecxz cs ret pusha inc sub xor mov adc test push cmp pop mov mov shr or xor int3 dec mov loopne setg cmpsl jp inc shrl hlt dec mov dec das mov ficoml xchg push repz sub push sti ds jno lahf repz daa rcll xchg (bad) scas pusha pop rolb cmp loopne lock xor cmp divb jmp mov mov aad mov mov pop xor daa mov lods jg negb mov xlat mov stc pop or add sub int3 push lret imul and push (bad) xlat mov insb pop add jo ret sti inc outsb sbb adc pushf adc xor aaa ja pop sub pop pop xchg adc mov and inc aaa xchg movsb movsl bound xor ja rclb clc and xor ja scas ja hlt out mov push lcall pop les dec (bad) test idivl add dec mov jne hlt mov lods out shrb lock sahf xchg in pop mov mov dec sub push add and sbb repz jmp out lds fistpl adc cmpsb iret or aam loopne pop mov dec popf mov pop into mov push and inc ja fnop cmp dec lock xchg test mov fsubs jmp icebp (bad) xchg fucomip lods mov push pushf int3 pop out scas fs orl in pushf shll enter outsl sub js out push repz push add iret sub aam jmp cs xchg cltd pop stc cli sahf into cmp int or lcall xor or add mov movb (bad) mov cs jge cmp loop dec adc addr16 (bad) ljmp and or bound aas movsb jmp shlb mov jg mov xor mov sbb ffree or scas (bad) std ret aad add sub outsb inc sub std dec std mov ss jae adc mov pop cs scas mov and xchg push in sarb test mov add jmp out mov into and push arpl lret push mov ds movsl loop movsb aaa div add xor adc in xchg pop shll lds stos push push aad pop mov cmpsb or sub pop xor insl push cmp fist jmp sub mov fnstsw out mov out xor int outsl or repz jp leave rorl sbb fbstp jno ds push inc out stc roll ss (bad) fxch cmpb decl xchg fsub in push ret cmp and inc or sub lods stos mov pop mov js sub dec sbb or dec daa lret out ficomp sub in mov or repz (bad) notb mov push outsl mov xchg mov (bad) cmc lds out in outsl mov xor cmp cmp test mov (bad) ljmp mov xlat add in mov (bad) jg fistpll clc out je shrl fdivr sbb xor pop mov iret lret or xchg jae mov or jle fs cmp mov xchg adc repnz (bad) sub xchg xor mov pop movsb movsb cmp mov dec and add out pop repnz push sub xchg ja pop andb ja push pusha es xchg inc dec xor pop loope es ljmp in aad pop sub sbb mov jnp mov or aas call sar out js mov rol and ljmp sbb xchg fnstenv pop push add xor xlat int3 and fldt popf sub flds imul loope sbb mov shl or sbb cmpsl sub cmp in mov push js and fist cmp das cwtl mov bound leave and icebp lahf pop adc int sub inc cmp and (bad) push inc jmp inc sti sub mov sbb (bad) in popf or inc in jns fs jle xchg inc dec es and inc cmpsl fwait inc pop mov sub dec jns mov test jne and (bad) dec out jge je jmp cwtl mov or dec mov pop and mov scas bound pop jb xor xchg pop mov mov test jp or lcall jecxz sbb pushf ret pop inc inc mov ret pop mov lods push mov imul or jbe leave cltd (bad) (bad) jp mov cmc dec fcompl sub sub xor and fs out clc out icebp (bad) and mov daa jne dec mov or mov lcall xor push (bad) loop adc test test imul fnstenv push ds mov inc orb lret ds cwtl jl dec xlat cmpsb fstl ret dec jecxz xchg fbstp add daa std mov out leave push add bound dec repz inc push js mov ret movsl ds sti pushf cmc lret out and aad cmpsl adc out sub in loop in mov ret cmc sti fwait imul rclb cmp imul and inc and lods cmp fdiv gs and or icebp xor (bad) int3 pop decl add or mov mov lcall sarl out gs pop push jns insl pop cs xor add arpl (bad) shll inc jo nop popf xchg sub adc and hlt sub fucomp es adc jbe call aam dec js iret scas arpl into mov sti sub popa repnz ja pop jns dec add adc and xchg inc mov int3 js es pop lock mov mov pushl cmp jmp sbb and dec ret push incb fistpll mulb dec mov fldcw rorb cmp jmp xor mov xlat xchg xchg ds (bad) push jmp cld mov dec pop cmp xchg out add pop ja xchg movsl mov call add ret pop mov mov adc cmp xchg jne scas pusha sub loop xcrypt-ofb cmpsl imul pop xlat pop mov mov lds movb xchg cmpsb popf lock (bad) cmp ret mov mov or mov sub xchg pop mov cmpsl cmc pushf push add xchg fbld or adc dec shl mov mov jnp and lret fistl enter fbstp pop test pop sbb aad test scas js xchg repz lods mov push and mov mov inc add stos bound mov mov lret push jge idivl and sub (bad) xor data16 add add add jge jns mov ljmp push or dec out xor mov in mov stc je leave xchg jg (bad) dec sti jge xchg mov mov adc cltd inc lods and out cmpsl (bad) dec stos jo inc fsubrs adc daa jl cmpsl sarl and dec xor bound mov fbstp push pop mov sti imul dec jmp inc sub dec mov dec push xor push xchg mov sub ret and inc adc xor outsb mov jg (bad) mov mov mov das pop stos xor mov in cmp hlt add or or jne pop ljmp sar xor xchg test divl xchg mov pop ja mov rcr icebp imul or mov fucomi int3 adc mov fldl stos sub xor xor push mov movsl add lods dec test add stos xchg lods (bad) dec nop mov icebp stc push add rcrl inc movsl mov daa xchg (bad) dec (bad) sti lret xchg push repz jo xor xchg loop lret dec lret in and and lret mov or into sub mov mov pop push lds push scas cwtl scas xchg mov cmp push insl stc xlat jecxz daa push dec addr16 mov xor xor dec shr sub sbb or icebp loope test dec bound jne,pt call mov js pop dec dec ffree push add js les leave je (bad) pushf call inc xchg push sub into fistpl inc pop add lret add mov arpl (bad) sar out pop mov add cmp fmuls jb repz sub cmp dec jge popf movsl sub sub jb repnz rcr adc aad mov and xchg mov push mov mov clc jl je icebp add stc adc mov add (bad) xchg adc adc pop sub mov push push push negb pusha or pushf add sbb add inc daa pop pop in inc sbb cmpsl add dec push mov jo pop pop xor mov jg xchg xchg les inc leave bnd out loopne pushf push into and (bad) std (bad) mov jae cmp and (bad) in mov fidivr scas je xchg sbb dec mov call inc (bad) sub xchg dec mov pop jne xchg loop jge movsb sub lahf pop pop fs scas adc pop mov (bad) jmp push or xchg ret adc xor test cmc stos mov xor (bad) aas or lahf jno mov mov fs xor pop and sub (bad) je je,pn xchg jl test lds sbb mov outsb lods jnp xchg sbb jb std stc dec mov sti jecxz adc cmp push mov sbb pushf outsl je fnstenv push mov xchg (bad) push bndldx xor call lcall sti jge add repz lods sbb xlat stos adc dec cmc fscale leave push rol lahf push xchg icebp in and xchg shl daa aas sub and pushl leave cli or mov or aam imul stos stos cwtl mov mov ljmp jbe add mov (bad) mov leave jno mov push fimull or (bad) cltd mov xchg mov jns ss dec test mov mov fldl2e and inc sub xchg mov push hlt fistp (bad) inc (bad) cwtl dec out dec jae cmp sub fs scas cld cmc ret mov lcall adc addr16 aaa or stos or pop mov lds jg sbb adc out cmpsb push daa jp sub out int aas mov dec mov in stos or pop adc xlat cmp repnz ficoml cltd jg jmp iret gs add mov test sarb push fistp mov negl movsb dec jne mov je ja rorl sub scas or adc mov mov mov shr je cmc movsl cmp loopne stc sub fidiv add inc test aad lods mov gs inc lahf adc sub movsl aad (bad) dec test (bad) mov enter imul lret loop jmp scas dec adc push cmp out dec pusha rorb shlb pop (bad) aaa aam (bad) shl pop divl xor pop ret dec fbstp (bad) lret sub testb jecxz and sbb stc dec aam dec loopne sub adc dec xor and xor dec cmp pop pop out xor or xlat (bad) mov (bad) or sbb jl loopne,pn out and push data16 hlt pop bound into jne sub push lods add fwait add repz daa inc imul ja sbb mov pop out frstor dec cmp xor lcall push pop imul add jle in repnz mov xor outsb pushf das xor sti arpl mov lcall or inc leave pop or popf cmc jnp push lret add std rcll (bad) sub in pop xor cli lods adcb inc add mov es adc das add daa xor loop mov clc dec push push sub sub cli xchg cld pop adc xchg xor mov (bad) lods daa setge inc pushf loope inc pop or iret xor add jae xlat lcall ja out in insb xlat pop jmp dec (bad) iret call pop mov xor and jo xchg faddp dec or aad cmpsl xchg jl jmp icebp and push mov jg pushf andb sbb ret insl (bad) jmp outsb jl pop pop popf call leave sbb push add lret mov xor sub push and jge push es insl pop das test mov jns test mov sbb ret das jmp sar mov and pop jge dec mov dec cmpsb leave cli jo dec out mov int3 add nop les ret jg lea and xchg jno jne ret int popa sub sbb pushf insl jmp sub cmp jb mov mov push sub cld xchg mov out sub gs addr16 push push mov pop daa (bad) and push daa xor leave push sbb call cmp ret dec lods mov dec jmp inc rcll mov mov or mov sub cmp push int3 lret std cmp pop out sub (bad) and and fwait push orb inc mov mov daa ret xlat inc pop scas loop jnp cmpsb jl fnsave into adc cmp cmp or jbe outsb mov dec mov addr16 sub or loop xchg mov call inc rolb sub add je vmovddup repz pop mov sbb push cmpsb dec sub into xchg je pop ds or fiadd dec fidiv cwtl jge,pt jmp mov jmp cmp mov stos clc test pop sub dec out test mov xor das lock push clc adc nop and cmp and adc sbb dec jb out and repnz insb cmp (bad) cld xchg daa jmp cmp add jnp arpl add jge xchg arpl xlat sub fsubs ret jne (bad) fs inc dec mov xlat pop mov mov pop ret cltd cmc jp sbb notb hlt rcl sub in pop (bad) mov dec lock test adc inc and scas pop push leave dec mul in (bad) pusha lret or in mov mov ja fdivrl jnp push push mov or cmp sbb mov xor dec pop push xchg (bad) repz inc out pop sub sbb xor push add cli into aad pop dec (bad) icebp jo adc jmp lock mov pop shl xor jg imul scas hlt outsl push push mov nop lret data16 jne not mov orl faddp add ficompl ljmp movsl inc jecxz jg xor cli mov jne jae or aad lods outsl gs ja in ljmp and add sub (bad) test rorb push jne arpl movq inc adc inc adc xchg mov or das and push jg cltd mov jl push bound aam (bad) add push xor in je lret ljmp add insl add push fimull jmp or mov fisubrl (bad) (bad) aas add inc (bad) jmp lds idivl fcmovnb inc or pop push pop int cwtl das jns xchg push stc loop in lds adc mov and lret cltd pop sarb jmp adc imul dec sub dec mov mov push adc dec out stos enter jp or popf push dec or pop test repnz mov xchg repnz sti push sahf add pushf pop mov mov sub lret pop movsb sbb out cmp jae cli pop or adc scas flds outsl adc mov sub cmpsl lcall mov mov imul ja int3 xchg out lock and jle adc fmuls (bad) dec sub repz push icebp push (bad) mov sub jmp ret sub sbb dec lret inc pop jecxz push lods ficoml xchg mov insl dec add push cmp sub jecxz inc popf dec ljmp xchg ljmp jne xchg and and sub jle jno xchg push mov out lret and adc adc lahf nop sti pop rcrb pop xchg sub push call mov bound ss ss ret repnz or int3 dec xor dec xlat daa jbe ret and dec int3 pop sbb jb xorl fisubrl fstl lods adc jp pop ret ss adc pop sub cltd and cs xchg stos outsb fmulp push mov xor mov idivb and and adc mov test lods movsl mov mov scas imul into push in and xchg popf pop int ficompl jmp dec pushf arpl xchg mov je adc mov add fs dec outsl dec or xor xchg (bad) cmp (bad) pop lahf iret xchg repz pop dec imul adc (bad) mov inc insb or rcrb xchg and lods xor rol xor sub add leave (bad) pop les mov pop dec out sub xor xor out loop aad dec sub sub bnd iret push lock rcl call scas les cmp test push cwtl es gs ret es adc inc cltd jns inc mulb xchg ret or ret add xchg jl (bad) sbb sub pop pop push add push jg mov aaa rcrl xchg out mov jae daa fsubs inc das or std xchg or pop and (bad) addr16 xchg (bad) (bad) mov push pop add rol lods sbb scas int3 ror je pop out dec and xor push cwtl mov mov test out xchg pop leave mov mov pop aam movsl push mov sub pusha jle push popf sti fimull jmp or mov aad cmc inc or gs stc pop subb add ss imul xor dec test push mov loop adc push mov dec mov cmp jmp xchg in scas js ror cld jg les out push adc fidivl jo mov mov pop daa dec jg cwtl icebp push ljmp xchg shr popf imul xor mov mov push lcall loope ret push jne or les jae lock jns mov dec (bad) mov pusha repnz add gs cmpsb mov icebp xor cmp mov adc mov bound stc jbe imul xor out sub shrl out and xor mov sbb xchg jg mov pop cli lret ret add xor dec ret pop dec jno sub inc test fucom or jnp ds repnz cmp les (bad) sub mov aaa mov rorl mov or stos into pop sub insb out into pushf ret push idiv (bad) and pop add sahf jno out adcb das push inc stos lret sti daa call lds add fildl scas push lcall xchg adc xchg jl loopne imul jge loop cmc dec rcrb sub ror out cmp aam inc add ja cmp sub call pop sub push mov push leave sarb mov mov out dec and (bad) frstor imulb sbb rcrb xchg jg jno test jo xchg lds pop adc scas fsubrl out xchg lds or jae or pop sub jl movsl (bad) push ljmp loop mov aas ret mov jmp adc pop aaa sti sub negl aaa sub mov xor dec push mov mov sub push push add (bad) or pop jecxz and sub mov push stc decb es mov clc sar pop nop not loop sub (bad) lret jmp cmp pop jo aas fldlg2 sub mov xchg sti mov stos mov test pusha repz clc mov (bad) test (bad) stc jbe fist repz push or or (bad) jns or or or push adc inc pop mov mov out sub add adc dec arpl mov cmpsb movsl xchg mov pop outsb mov aad lahf cmp sub shrl mov mov (bad) sub rorb repnz imul push cmc sub jg icebp fs cmpsb inc pop jecxz inc mov or push and or cwtl outsb pop cmp out dec lds lret and sub pushf xchg or add sti fucomi or push fsts (bad) out add mov loop push cli pop adc or mov and add repnz mov inc sub repnz push adc xchg xor add jb out ret pop mov decb scas mov mov frstor repnz jns data16 push jmp rol push jne adcl mov add xchg cs imul pop mov in or and or mov sub mov cli jle jmp cmp cmpsb pushf es (bad) inc xchg add sub cmp or jbe or pop inc (bad) xor mov out adc jmp pushf push sub mov sarb add xchg xchg inc push and pushl (bad) lds and xchg sub jg adc mov pop enter sub sub add xchg or xor stos fnstsw inc sti adc rolb iret sbb pop adc loopne xor (bad) fidiv leave push cmp pusha ret cmc xor push cmp test cwtl xor in ja outsb scas adc mov (bad) jmp int mov adc in jp scas fprem jl lret and cmp mov and cmp cmpsb bound ds je test ret cmp sti negb xor xchg lret xor fsubrs insl push add daa sub jns dec push test hlt aas cmpsl nop dec enter cmp stos mov inc mov fistl inc mov out cmpsb outsb inc int3 movsl push repz and xor ja pop daa fcompl jle and jmp out xorb mov in mov sahf test stos mov sbb and imul es dec (bad) and adc loopne push pushf cmp push pop sbb mov repnz xor cmp (bad) sub sub push out xchg (bad) in aam out das xor bound jne inc and or ret dec lret push pushf push stc cmp (bad) sub fisubl syscall fistpll mov jmp rclb divb out push pop (bad) imul lds ret aas divb add mov sbb pop adc dec iret fdivs (bad) pop xor xchg push adc dec and xlat int3 pop pop out mov aaa xor test mov dec stos (bad) movsl mov add std (bad) imull decb cmc fldcw cmp or jb pop xorb mov jbe iret (bad) ss pop rorl lock cmpsl jg adc xchg pop adc jle incl dec cmp sub sub sti inc or shr or rorl divb pop xchg out mov add ds jno cmpsl jb dec or push xchg push (bad) clc (bad) xchg pop jmp out pop dec ljmp add inc lahf pop push inc lods loop xchg std xor rorb nop adc add xchg dec lret jns mov jmp push sbb adc out adc xor jnp pop sub xlat jmp imul xchg bound cmc shrl cmp pop sub push mov cmpsl std push jns icebp pop scas sub pop out cmp add jl inc jne sub in ds pop xor loopne call push into mov adc dec andb int addr16 sti stos test movsb scas xor add pop mov (bad) outsl mov adc sub out movsb fnstsw inc sub out scas lahf je fs (bad) daa xor out rcrl push xlat imul pushf mov sti sarl shll push or loop xchg adc jb cmp or push bound jne in jae loope outsb call mov jg xor adc fwait dec stos mov mov or roll popf leave fdivrl pop push jnp mov ja dec jmp inc mov mov xor divl mov push outsb adc mov or scas push fsubrl pop mov jg lock in xchg icebp lea lret ret mov mov xchg gs mov mov jne aas pop mov pop mov jbe push or stos gs mov das and (bad) jo and sub push jp and and fs mov daa repnz fldenv xor mov mov stc sub or and loop out cmp push jae add cld adc aam ret aad rorl push adc fidivr pushl dec pop fadds and mov lret cli adc lds mov adc or sarl icebp or push mov lret gs jns leave lcall arpl pop in fisttpll orl es dec mov xchg dec mov dec neg daa shlb sub hlt pop leave pop out and (bad) lods adc popa mov fnstsw mov mov jecxz addr16 daa xchg pop xor or mov fldt sub mov shlb inc adc cli out sub (bad) xor inc mov add in inc add mov xor or fldt jns sub data16 or repz aam adc lods adc xor cmpsb lret add add cmpsb orl clc repnz int add xor fsts adc aaa rolb stos sub out lahf add jl outsl jl iret pop cli mov mov xor fldt sbb adc divb push dec ret xlat xor inc adcb mov cs cmp sub into fwait aad out adc xchg fbstp pop fsubl cmpsl daa dec pop shlb pop leave ret (bad) pop dec sbb dec cmp dec stos cmpsl and add mov sub and jle xorl push sub bound mov int3 mov shrb lret or (bad) xor mov push cmp jo pop gs repz mov jl jb repz add xor sub imul xchg adc mov popf xchg jecxz inc negb movsl mov sub mov lock sub or in pop push mov cs pop mov lret xor shr popf (bad) bound sbbl sub push xchg mov (bad) mov push adc sub fs lret pop icebp notb dec in push inc iret xchg loop mov jmp and add xor (bad) pusha ss inc (bad) push mov enter enter out and jl xor sbb add loope and lds sarl xchg mov push fildl xor dec icebp test adc test ss into rcll mov xor fs sub aam xchg stc shrl inc and dec mov push cltd jno and ljmp sub (bad) popf daa repz mov (bad) lret dec push xlat mov ficompl arpl sbb fadds pop sub jecxz xchg pop mov leave and mov ret aad pop out mov cmp sub out bound aam add sar mov adc fnstcw adc movsbl push popf (bad) xorl add and sbb push pop or (bad) stos dec mov out mov leave fnsave das lcall sub pop jmp mov js imul dec in or das mov sbb fisub addb cmp (bad) in or pop push mov pop add int3 scas jbe cmp fwait call cmc sbb sbb adc push negb hlt fistl or cli popa cmc mov push sub pop ret ret sub xchg and and rorl or adc movsb pop push adc mov pusha pop bswap mov jnp push mov add sbb hlt sbb lea lahf (bad) or repnz daa adc sti fsubrl pop int3 jmp stos push push push mov pop xchg repz loopne pop push mov loop test sarl add rcll cmp repnz push mov push push addl mov repnz xor pop sarl add scas jg sub (bad) ds cmpsl rcll clc push leave pop sub fwait push add or ja and cs adc cmp or pusha roll adc add mov (bad) dec pop pop sbb into xor repnz cltd je ds sub jl pop (bad) shlb repnz adc pop icebp leave iret ja cmp fisubrl xor pushf push mov ja jle xor shlb divb jl icebp jbe mov loop xchg repnz sub sub jp xchg and xchg leave jno imul mov or dec fdivrs stc jp fisttp cmpsl pop mov out in xchg sbb adc adc or test and jp movsb xor push mov xor cli sub insb gs call xchg insl data16 jne repz icebp mov mov jnp out mov lahf xlat imul pusha mov mov push mov js and mov add ljmp push jl add rcl push mov lea xorl jnp sub ljmp or js int in sub xchg out cwtl or sbb pushf mov xlat sub sub mov dec out mov dec loope pop push pop mov push pop jnp mov inc getsec ficom ficom push (bad) out adc (bad) mov inc adc fistpl adcl inc pop loope cs insb movsl xchg or sub mov leave xor sub es adc das add and dec adc je popf std sbb mov or loop xor cmc jns mov pop pop mov and cmp xor mov gs lahf insl (bad) adc loopne xlat mov ret sub jmp jg push dec add and sub jg push outsl test shrl cmp loope cmp dec (bad) ret nop ret mov add lods push orb jbe gs sub movsb popa mov xor sarl xor xor adc xor inc push in aam (bad) mov cmc repz add aas adc mov xor into ds fwait les cmp das jle xor adc xchg ret xlat inc jp clc or fs cwtl push or xlat dec jle jo in push sub leave stc mov stc fmull leave mulb inc xor jge mov hlt arpl xchg repnz cwtl lods cmp and pop jnp cs imull fcomip and test roll int add and add cwtl fsubrl dec xlat sti dec cmpsb insl add xchg movb fcmovnb ffreep xlat icebp movsb loop in sbb and bound mov imull push fwait add sub cmp dec push pop outsb sbb xchg cbtw jle add je scas push jg push xchg (bad) sti xor push mov sbb add bound out outsb xor stos or ja adc lret fsubrp das adc cltd dec dec icebp jmp insb popf fnsave xchg imull dec mov scas je jmp xchg (bad) (bad) into mov xchg or lret repnz cld mov mov aad icebp dec jg sti lea inc lods (bad) rcrb or mov mov outsb stos in lret xchg sub dec fstpt into out popf (bad) (bad) (bad) mov cli jle ret leave out out sbb or out ret (bad) jne rorl sub push mov or mov xlat icebp testl xor mov adc scas repnz and stos fldl mov mov dec mov ljmp and fsts sbb shr pop (bad) aad add inc in ret (bad) jg ljmp repz inc xchg push or cmp or jecxz pop jno,pt or outsb addr16 imul pop pop (bad) push ja lahf adc mov insl test popf sahf dec sbb adc pop int3 lods push xchg mov ljmp add jl mov sti or movsl cmp jno bound fidivrl adc pop icebp pop lret fistl dec repnz mov and xor jno sahf or push out mov das lods cs inc xor loopne popa lahf pop sbb jg xor push mov xchg fisubl in test lret ds mov in mov ret loope loope xor cs push mov dec out (bad) aad repz bound subps jne cld mov lret mov daa adc call scas add xchg notl dec ror repz data16 adc popf add popa sub and xor xchg ss or pop inc mov xlat les xor rcrb movsl imul das pop add or std lods in sub lahf pop xlat subl mov xchg les mov inc lret leave ljmp in and lret adcb sub sub and push pop xchg mov dec out sub iret xchg iret mov xchg incl or mov lods out mov mov es dec cld dec pop mov xor sub inc push xor pop cltd test xchg xor lods add int cmp es xor aad inc leave imul mov pop (bad) pop mov xchg jmp into clc mov jae into scas into sub out pop cwtl pop mov pop dec mov mov sub mov sub stos sub xor movb lods lods movsl mov and add jmp mov dec push dec je decb shrb add ja mov jmp xchg gs mov adc mulb pop pusha js ljmp mov jge cmp pop out and mov pushf and stc add dec jle shrb repnz div es inc pop xor and repz mov push add mov sti jb sub rcll xchg daa icebp push gs popf dec (bad) scas sub dec xlat decl and les and mov leave les inc call ret jnp xchg ret hlt lret aaa inc and jne popa je ret test sbb stos adc mov icebp sub add mov cs or out and orb xlat sub in cmp rorl sbb dec mov jg cvtpi2ps dec loope adc pop add fidivl mov (bad) or lcall icebp daa gs mov push mov rorl jmp mov nop imulb adc call pop dec lods push and loop jbe push ret dec xchg add cltd mov mov dec xchg lock idiv xor rorl das shrb jl jno daa (bad) and dec push cmpsb and (bad) cmp fildl xchg (bad) (bad) and rcll xchg jg xchg lods add inc pop xor add pop add mov mov sub adc pushf jns push add (bad) or push ds mov ja in lods sbb cltd or and (bad) mov mov xchg stc lock dec ficom rcrb lods (bad) xor sub out sub ret push lcall mov mov cmp or xchg notb les dec xor stos jne adc push xchg mov (bad) cmc pop lret adc sbb add sub movsl push shlb mov mov xor mov cmp sub adc jmp xor or pushf out lea mov mov shrb cmp enter mov (bad) out lock mov xchg loope outsl mov loop (bad) xor neg push and fidivr jmp cmpsl aaa sub xor jmp ss or mov dec xor mov add mov or sub clc mov fildll clc das add adc cltd in xor out mov mov (bad) mov and mov mov cli in sarl jbe scas adc iret jne cmp xor or or inc xchg int fs and in sub xor xchg out not std loopne mov cmp sbb and or jmp in out dec aaa ljmp sub mov pushf mov bound leave loope add cmpsb push push loop imull mov shrl sub push aas fidivl mov jle lods and mov xor shrl add imull xor cmp loop roll dec sti iret push pop sbbb push cli sarl adc (bad) notb fs add sahf aad das xchg cmp fs out adc inc jb xchg and dec mov repz sub mov mov jg sub inc in or pop jno xor pop ss mov xchg jle (bad) leave and inc add dec repnz stos mov cmp push inc sub into dec sbb ds js ficom xlat jecxz dec (bad) xchg mov cmpsl (bad) xor ret push fist sbb and xlat clc mov data16 add fidivl mov mov (bad) jle pop xor or fimull (bad) jge xor mov jg int3 daa push (bad) leave decl pusha and mov add dec or sub sub divl and or cmpsb in jne mov in int3 ret fcomp ret inc and test pop stos adc in dec adc scas add cmpsl pop adc popa adc sbb popa stos popa pusha hlt ljmp scas sub xlat add cmpsb jecxz iret jge out mov or xlat xor mov xor sbb sbb and stc adc add into dec ret movsb icebp iret aas sub scas fiaddl jecxz mov lret or xchg scas mov sub orl sti sti adc out sub sub repz jl les shrl xor out sub imul cmp and and or xchg repz adc pop aam mov jp ret push sbb repnz bound push mov out xor sub (bad) and sub add xlat int3 jns lahf jne mov add and cmp xor add lcall pop dec jbe mov xor mov xor inc test mov jmp mov push test pop scas popa mov repz (bad) fs scas mov pushf dec leave mov loope sahf and sub sub push ds xor leave out aam das mov add xchg jmp cmc imul pop fistpl adc mov fs stc jmp jmp xchg add jg (bad) adc or add cmp cmp out or xor in lcall jns stos xor dec dec mov insl mov mov cmc adc nop popa add mov (bad) and daa icebp rcrl dec (bad) adc jo std js lds test or jg popa jge subb jae cli lcall or idivb jl adc iret loop add jecxz into mov inc adc or cltd xchg repz dec sbbb mov sahf pop call sub mov mov aad xchg push push add clc xor mov mov and or mov xor xchg jp lahf pop push call popa addl mov (bad) divl adc mov dec jmp jmp add out cmp sub aas out and mov jp adc outsb loope xchg out mov add mov sarb hlt std outsb pushf es sub and mov and jne pop mov aam scas mul mov lods ficomp les scas sub or cmpsl cmp xor xor mov add into mov mov repz fiaddl push idivb push jmp ljmp push or or xor outsb mov (bad) js std outsb ds shrb dec mov cmp (bad) dec cmp pop pushf jns dec repnz jbe pop (bad) dec push shlb (bad) repnz rclb les push mov leave fldl insl shll lds cmpsl pop dec lahf jbe pop lods pop xor mov lahf pop xchg add jne inc inc testb es push out fs inc push add loopne lret dec mov push das ret xor sbb or sbb shrl mov gs adc aas xor add mov out sub mov jne shll pop or fcmovnu sahf ds or cmovp imul xlat fiadd mov adc insb inc add xchg out mov hlt fsubrl inc push push aas xchg divl xlat push shlb xchg adc mov bound push jge adc xchg ljmp cmp adc add cli cwtl sar mov or fisubr add push aaa movsl mov sbb lret lcall and into aas mov add jnp mov mov faddl ret pop mov push adc and frstor roll adc add hlt hlt lds cmp fist and pop mov xor shrl enter push (bad) jp lods movsb int xor jnp movsb mov mov pop cmp jecxz sub push outsl and repz mov dec loope cmpsl or dec scas mov pop or and mov ljmp xchg mov pop lahf pop les push in pushf test mov (bad) or inc add mov and fs stos test dec mov (bad) sbb iret insb adc push xor aam pop pop dec mov push (bad) sub xlat ss jl jmp fs bound push push lcall xor icebp inc arpl pop cmp lret dec mov sub dec adc frstor out ficomp scas lret cltd dec loopne (bad) mov daa (bad) push and stc and xor (bad) out push mov scas jb aas (bad) scas pop push mov (bad) negl xorl adc adc push jmp cmp and ds aam sub mov int3 jmp (bad) ret aas xor dec cltd iret jb cmp sbb mov aad into dec jae dec repz mov jp mov add lret js jns movsl std adc adc xchg mov scas xor cli fs ljmp stos fs mov jle shrl shrl das mov out push paddusw loop bound cmp out (bad) in loop xchg ljmp cmpsl push in ficom hlt ret or and adc push mov and imul pop sbb sub cmp or bnd and sbb (bad) mov mov shl lods cli (bad) mov (bad) push or jnp aas mov sarl (bad) and cmp imul mov imul das lds fisttpll inc movzbl test pushl cmpsb sub fidivr (bad) (bad) and das or jae (bad) sub sub xlat int3 add add cmp or aam or and xor push in mov or push nop pop fdivr out pop sbb xchg loop dec dec cld xor sbb (bad) fsubp leave cltd imul or scas cltd (bad) jno jp ss mov or cmp out test fiaddl sbb push cmc testl sbb (bad) sub sub sbb lahf and out pop adc xchg push jbe pop sbb mov add imul jnp pop push sahf test (bad) pop into add xor push ss mov dec adc push xchg loopne or or pop loopne or mov cmp mov cmp leave mov je (bad) icebp mov ficomp mov push cmp sbb mov cmp adc insb mov iret das leave jmp xchg xchg jl dec jne xchg icebp sbb mov xchg orl stos mov aas cld or xor mov sub ljmp in adc dec clc cmc mov outsb divb scas xor sti mov cmp push aam push lods daa jg (bad) mov adc cmpsb mov icebp dec out dec add pop das ret std mov or or lcall mov je sbb pop or out pop in or xor and movsl sub lock xchg and add popa inc add sub sbb imull movsb les clc jnp adc or sub mov push or or imul push pop outsl sub mov pop fdivl mov into pop mov inc mov and lods or hlt sub xlat and bound push das xor das cs jg adc mov lret (bad) and dec faddl and sub jo lods xchg cmp add mov xchg aad pop dec lea pop cwtl xchg sub inc rorl lea div pop or xchg stos add mov lcall mov sbb sarl std test rcll (bad) sbb out cwtl sub mov and leave ret or pop call test pop jmp mov les jno add in add add xchg fisubl fs loope notb sub out cmp jmp mov cwtl push iret mov jmp jge lds imul xor iret int3 pusha xchg in push sub es dec repz pop dec int mov xor arpl clc jno xor mov sub testb bound add (bad) and cltd ret xor adc sbb sbb stc fstpl and add mulb sub push xchg loopne inc jne xor sbb dec add rcll xor stos arpl fld test mov shrb adc xlat rorl cmp popa aas aaa lea push jbe sbb popf pop lods jmp mov inc bound lret popa sub pop jmp adc xchg bound icebp imulb lock pop and push pop adc mov cmp gs jmp (bad) mov stc mov movsl mov xchg pop xor xchg jl imul adc fs test in lcall into mov adc into mov or lret decl ret mov mov out in and and jno inc out cltd mov loop rcll sub xor lds aad or pop loop hlt repnz push imul (bad) mov add xchg jecxz notl xchg pop rclb int cmp ja adc sub adc (bad) rcrb ja mov mov loop lods jnp mov push ja mov dec popf mov mov shlb lret (bad) cwtl shr jl dec add je lds push and popa xor add insl mov adc add xor sbb mov dec (bad) mov sub mov sbb sbb mov mov cmp int into and iret ret jo pop pop sub push test lock gs leave data16 je adc repnz mov sbb xor push cmp into mov lods add jbe adc jnp add xor mov ret push pop inc pop mov dec jmp inc loop lcall xor popf mov sub dec (bad) cmp fsubrs mov fld dec pop cld bound repz mov fisubl or scas jp fisttpl mov xchg ja jp dec es leave hlt in bound dec mov cmc mov rcrl jno xor aas out and in mov faddl das out popf push ljmp cli ds sub es mov or mov fdivrl pop int sti dec lcall out mov sub jo lret out daa and push xor sub movsb inc sub leave bound mov mov dec mov jp push push cmp or divl cmp rcrl xlat mov mov jae adc mov xor jnp ret or push outsb mov iret xlat mov (bad) sti lods out mov dec into jge dec out sub inc fildll mov and mov mov iret pushl int add not xchg in adc jns sub outsb lret into cmc gs movsl nop (bad) or mov jmp add push (bad) xor iret inc adc push (bad) push push sub popf cmc push xchg dec loop fnstenv (bad) cmp loopne mov and (bad) mov or repz (bad) out call mov push test shrb in scas adc pop mov mov addb xchg (bad) sub imul add push pop shll dec je push jns lret jg mov adc cmp dec bound or dec ds ljmp lret insb pop or sbbb outsb mov test rolb inc dec mov mov ja or and adc sti sub mov or cli cwtl xor xor sbb mov loop sub mov inc and xchg sub cltd ret icebp fstpt pop sar or push ja sub fs or (bad) pop sbb pop out push dec loope sub mov lods aas ror xchg xchg (bad) nop pop push inc bound xor ret stc push lds cmpsb mov stos inc push cmp repnz cmp pushf push xor mov cmc jmp cli jae mov scas out adc add fsts add jmp (bad) aas push jo cmp inc aam push ja loop out leave and scas (bad) and in je or add mov mov inc mov stc xchg nop pop ror push sbb fbld jge bound pushw pop pop mov and pop or lock dec adc sub shlb jl cld rcrb push mov push pop mov pop loop (bad) sub add cmpsl (bad) or movsb and decl in (bad) lret mov out mov (bad) in sub pop and (bad) or ret and mov inc clc ja dec and push popf jno dec fdivl dec push into jge das mov push into rorl lret mov push cmp leave cmp jl xchg sub scas pusha inc xlat add xchg add lock ret dec out xchg ret xor sub pop test or mov cmc pop and movb or or dec pop mov insb lcall jns push or lret add cs and push fcoml lcall mov jbe push notb aad dec mov rorb mov xor or push lahf cwtl shr xchg mulb fs cld int3 cmpsb fs fdivl imul cltd sub jp jbe inc xor pop outsb leave jmp dec dec xchg xor sub lahf xor popf push xchg and subl sub xchg mov arpl addb (bad) inc movsl jle ljmp xor stos add negb mov jnp or pop rcl dec repz es sub fldenv aaa and add pop out nop pop sub into jge hlt divb aad loope decl imul mov cltd jo xchg in testb call mov or fsts dec push add lea push lret sub out aam pop xor repnz ret xor mov xorb sbb sub ds fs frstor js lret cltd pop addl loop pop pop mov add aam (bad) pop mov push cmp and dec xchg jmp push cmp dec push ror ja call test xlat mov inc sub xchg and (bad) adc push mov dec iret adc add call (bad) (bad) or adc and push xor (bad) xchg jge jecxz cli lods jb out and mov adc sub dec das mov cwtl sahf or mov test or mov clc pushl sub push and mov xor add xchg lea pop xchg mov cmp cmp pop sbb pop nop (bad) pop mov arpl xchg call or pop push or mov fisubrl pop mov je repz jl pop hlt inc int cmp popf xchg lret xor mov int popa or (bad) popl pop inc or fsubrs sbb sub dec call cmp inc adc inc sub push push adc add cmp pop adc xor and push test mov mov sbb (bad) imul dec cld iret and xchg (bad) scas xor shlb push adc dec sub or xchg je jmp push xor sti iret sub push xchg mov push lret movzbl notl movsl inc lods leave push insl cmp ret insb push xlat ret xchg repz stos mov insl (bad) xchg out test mov push push popa add mov es cmp std clc ja out ret in add cmp jmp push xor cs iret dec jb mov or push mov mov jge sahf sbb cmp mov mov adc jo (bad) in data16 cmp aad insl js pop sbb push das add and mov mov imul ljmp enter fstl (bad) pop mov divb int mov mov cld sbb and popf bound xchg jo cmp js and sub pop sti mov std sub sub sub jne in ljmp out mov push xor es cld out stc push loope inc mov dec nop xor mov ja jae lds cmpsl or repz sub or cmpsb add les sub mov mov jno dec mull cmp fs mov daa cli (bad) inc shr repnz les pop test fldcw sub cs cmp mov mov movsl dec cld sbb idivl fnstenv in or inc sub sahf xchg stos leave clc das int3 sbb and movsl mov out jnp imull js xor add add pop adc (bad) mov test adc mov lds mov and cltd lods loope,pt jg jmp add sub clc mov cld (bad) pop add mov cmpsl inc dec jecxz adc and push js (bad) inc sub imul adc mov push bound call and mov or cmp mov pop lock mov shlb aaa cmp std loop lods sbb ljmp das xor aas in push das fildll sub cmp das negl mov aad pushf xchg je lret aad xchg popf pop adcl cs push adc add inc xchg ret xchg mov pop addr16 dec sahf mov xlat sbb jle int3 leave and xchg mov pop jmp gs mov popa mov and sahf dec jecxz dec aaa pop leave xorb mov (bad) sti out jno test icebp hlt lcall xchg inc stc rcrl jmp sbb jo pop das jnp lahf push icebp push adc mov pop stos sub data16 mov pop into icebp dec jmp int3 sub sub jno mov int3 sub call bound mov fwait popf (bad) (bad) xor stos loop xchg stos xor incl mull mov test jp fcmovnb sub or aas movsl push cmp sub stos (bad) mov or pop push ljmp mov nop cmp jmp (bad) xor xchg jne adc je or fnsave insb add sbbl repnz icebp xor loopne iret dec je imul xchg inc nop push lahf rcr and push pop lock (bad) and sub pop jg lea jo adc mov cmp lret mov lods mov (bad) or xor aas cmpsb xchg sub orb mov fidivl xor mov xchg adc mov icebp mov js xchg in push subb aaa ljmp scas adc mov daa repnz and (bad) aam adc mov je jbe push add pop enter ret jae add shr insb add push sub and sbbb sbb xor ret push lcall fcmovu or fldenv push inc xor cwtl push testl and xor xlat in mov adc (bad) lret dec out jmp loope and fsts and fs mov aad hlt call jecxz sbb xlat mov xchg rcll adc test test stc push leave or jbe out inc pop and mov (bad) (bad) cltd xchg add es push cmpsl icebp lahf xchg sbb ljmp iret ja sbbb cltd dec xchg (bad) out fcoms outsl jmp and (bad) (bad) mov repz fxch fistl ljmp lds je lret xchg dec add fstps xor pushf push xor lret cli and and add jo ss test jmp jg imul or jle sarb mov add into xchg jge inc daa or test (bad) mov xor xor jbe pop lods test add (bad) sti divb ss push in hlt jecxz pop lret jp mov cmp idivl jecxz je das aad inc (bad) lods xchg xchg test and scas push lock xlat xor inc test in inc (bad) adc xchg mov subl add les out sub push inc adc inc movsb shrb jg or (bad) test push call mov jle enter jg int3 inc push aas sbb xor int out mov clc das pushl cmp icebp mov repz pop and dec mov mov adc popf mov (bad) scas lods sahf pop rcrb xacquire clc mov icebp test sbb sub xor xor scas xor or test sub mov jno das fist pushf push sub push xor cld out fstpl mov xchg pop sbb iret add je les dec adc sbbb fsubl std adc xlat fsubs push sub and shr and imul nop adc mov stc out ds ja pop and nop pusha stc add mov or push pop jmp aad insl jb sbb add cmc lods jp fadds mov pop and (bad) mov pop xchg scas cmpsl jb or and leave ret xchg das adc or sar mov xor movsb jnp mov inc jg adc add hlt loope je push fldl (bad) icebp or add dec into arpl test mov nop mov pop and std pop push (bad) fs sahf repz and cmp bound pop xor and out (bad) push daa xor or fistpll dec jne mov rorb push inc jmp scas ret sti js jmp sub pop sti sbb and mov leave and ds into push or and jbe,pt dec loope dec fwait pop mov sub sar pop jmp mov jp jno add cli add sub jbe insb je jb imul cmpsl jo dec or jno int3 pop daa and push xor sbb dec mov jo rcrb ret inc mov sub sub push lret (bad) pop or ret aam sub sub mov jbe and jne xchg dec cltd and jns fs loop sub pop fcmovne push cs repz xchg das pop mov fist mov cmc leave cmc stc pop inc (bad) out shll mov pop out sub hlt fs mov and dec mov shll imul pushf movsl fimul sti sub pop lea les cltd arpl and popf sub jge add mov add mov cltd jns cmp call or or xor jmp scas cmp xor popf push xchg cvtps2pi add jo pop jp rcrl jo ret mov loopne mov lcall int3 inc sub movaps mov inc cli jmp mov test es nop xchg push mov repnz xchg jmp push mov mov into (bad) dec xlat sti xor dec fs stos in and sub mov cmp cli xchg push inc lret or cmp lret xlat pop loop dec loopne jmp pop sub mov sub repz icebp stos mov leave xor inc icebp and sub dec jl adc sbb cli (bad) mov das sub jnp movsl (bad) xor cmp jle push jo loope jle sub adc out sub mov xchg lods mov insb test out and or fisub rorl mov pop jle (bad) cmp lahf (bad) inc push call adc pop xor lods push mov mov imul xor sti leave xchg int3 add rorl sbb mov repnz or ret shl or pop inc cmp mov (bad) decl mov ret mov aad (bad) nop cmpsb sbb (bad) xor fldl mov shl out and scas xor and (bad) xchg push xchg sub jns imul addr16 push mov add xchg negl ss sar xor and outsb xor mov cltd pop add mov repnz and jl mov sub xchg sarl insl mov xchg jnp dec xor out js idivb sub (bad) xchg mov sub mov ret inc fisttpll mov xlat push xlat popa xor mov mov dec xor push imul iret fist add pop mov cwtl push or sub pop ljmp clc sbb inc xchg add rclb shlb sbb push sub call test adcl imul mov jmp imul scas mov push push sarb sub arpl cmpsl jmp idivb push sub out inc lahf mov loope cmp sub out loope icebp sub push sbb (bad) lods aad or sbb jns pop and daa pop dec std xchg or je aad clc arpl pop repz ret mov daa in fisttpll xchg cltd scas and mov rcrl adc mov leave decb mov pop out push jns subb mov std inc xchg popf xor out scas repnz pop mov mov xor dec adc cmp iret mov pop xor clc xchg pop cmp add mov mov out xor push shld mov repnz jnp xchg sarb in in cmpsb xchg pop xor and cmp adc mov sub mov idivb mov std lds icebp ja sbb jecxz (bad) mov add mov dec and movsb mov inc scas and push scas test lock sbb repnz ret je hlt xchg gs sti add mov jmp ret ret xor jnp xchg das stc jo and clc push dec popf test notl cmpsl xchg adc cmp icebp sub imul cmovo lret or mov sub (bad) mov test aaa ljmp xchg push mov mov mov mov (bad) xchg fucomip fdivs dec iret out or jne or cs ljmp not iret adc pop shlb (bad) jno mov sub or jmp ret jp stc stc add pop mov lret pop or pop add rcll mov pop movsl ja jp hlt lea push aas movsl push int3 call popa pop push lea mov pop xor mov push imull mov adc adc jnp or loope cwtl mov icebp outsb jbe jle idiv adc stc lods call scas xchg adc sti xor pushf popf pop jmp cli cmpsb in cmp adc lret sbb cmpsb mov push stos dec repz loopne test jl daa es pop cmc sbb xor enter push movsl push jle rcll sbb out sub loope lcall cwtl push mov mov data16 pop das out mov (bad) inc (bad) mov and lock mov sbb lret push or dec into mov outsl shr cltd outsl cmp dec mov and and xchg dec ljmp xor xor xor jmp push sub push mov mov sbb stos push adc cli lea jb (bad) inc push ss jbe add xlat out nop inc popf cld subl add (bad) out lcall bound push jle call fadds pop repnz pop (bad) adc bound sub int3 lea movsl mov sub loop mov into sub aas std adc fadds pop cmp aas xor mov cmp (bad) add shrl insl mov push push add ret inc xor xor and std add inc scas jl jp fincstp push addr16 xor mov mov cmp jo xchg mov mov pop inc dec cmpsb inc sub adc cld popf mov or push test push mov lret gs es insb dec pushf out jl add jle mov enter xor shrl sub xchg loope jp daa mov sub decb test xor pop pop loope cltd (bad) movsl fdivr in lods pop bound xor test je inc or frstor test lahf jl push fimul pop push lock cmc mov pop pop adc xor fsts mov mov jae shr (bad) dec std aam stc mov lea mov adc pushl call (bad) push push test imul jo or pop pop mov dec aam pop adc punpcklwd pusha out mov sub and pop or lock jle bnd mov xor pop mov xorb jne mov xchg (bad) and repz clc (bad) out or sti scas pop xor push outsb call and xor add inc sbb dec (bad) jmp dec out lret mov xor inc mov fs mov mov mov std fs (bad) push xchg dec adc jne in mov stos or mov aaa mov jo xor add fcomp out in daa xor lock pop fnstcw incb in or dec fist jle out addr16 push sub in and test je pushf mov or xor scas xor pop mov mov xchg cmpsl roll test adc or fbstp test (bad) or (bad) addr16 bnd mov or mov add cmpsl inc pusha out and mov inc sub ror xchg loop es add or cmp inc jno dec pop or jnp adc scas jecxz adc mov adc stos mov sub leave inc sub test and mov (bad) pop xchg fmul xor leave mov pop and loop pop mov popa pushf xor es and loop and and lds jmp addb or mov push add push (bad) aaa dec aad and pop mov jmp mov sub xchg xchg aaa xor or in pop xor fdivs ret pop xchg xchg lock pop sub mov xor ss in in mov add jl or cltd xchg outsl mov cs sub hlt (bad) cld icebp and and adc mov jl (bad) out jmp xchg jmp call cmp inc jnp loope lret pop leave push and hlt xor negl push mov dec and andb (bad) pop daa pop xor movl jmp sahf xchg icebp push outsb sub movb dec jecxz and or add cld push bound fldenv sub pushf cld push faddl movsl negl push xor add dec ret push arpl fist adc pop pop cmp mov stc leave (bad) faddl add or negl mov xchg shrb mov dec or adc inc xlat lds or sub outsl lret xchg ffree loopne rcrl sub mov rcrl sub or jge (bad) loope sbb add or fmuls mov sbb ds or testl sub mov mov xor scas lods sbb into cwtl pop sarl fprem1 addl lret mov stos push ret dec imul adc ret add mov rcrl (bad) sub lret stos and pop ret cltd mov xchg sub xchg popa sbb leave (bad) xchg add shrb pop je jo (bad) sub mov nop fnstenv push (bad) iret fucomp add mov sbb or dec add adc aas lret popa test and nop mov add or dec call in add or sbb shr out sub jmp das xor icebp jl mov dec int cmp xor repnz clc jge (bad) into jmp (bad) daa mov sbb mov xchg cmp or add cmp mov or out xor roll ret lock ljmp or das sbb pop jbe or pop pushf mov cwtl ljmp iret loop xchg mov sub mov imul das dec dec popf lock mov mov in rolb inc rolb icebp sub lahf mov lahf fcmovne lods pop jg out jp cs push adc clc decb push pop mov in mov adc lods nop mov sub imul (bad) mov sub xchg jmp inc in lret ja in add sub out mov push mov popf sarb push cmp jecxz jo pop or sub sub dec out mov push push data16 jmp jmp mov and and adc smsw aas das pop aam daa lods rcrb mov std into jl lds sar enter ficoml cmpsl (bad) stos inc repz cs add and shr (bad) or pop ret ficomp inc popf jl imul add dec sbb cli sub shrb mov fmuls push neg lcall int xchg leave or dec mov dec cmc push dec xor or jmp arpl xor not mov jns or insb out and bound ljmp dec mov xchg cmp ja sti stos ss fist imul das dec (bad) pushf cmp stos or mov std cmp push cmc outsb mov (bad) gs sti xor mov (bad) cmc nop rorb cwtl dec test pop lret rorl and add icebp lds sbb rcll pop ljmp pusha and (bad) dec test adc jmp (bad) mov idivb mulb pop sbb jecxz cmp add ljmp out cld mov negl lea xlat es cmp mov into sub test xchg pop clc xchg movsl mov test fs fnop js dec movsl jecxz pop sbb cmp dec sub push adc lods or mov sub std nop push shl xor sub jmp sub xchg test repnz jl outsl or imul imul mov ficomp add test out loopne (bad) cli sub nop sub jo loopne lret loop rcr pop mov push stc cmp ret data16 sar and enter cmc mov lret cli mov dec cmp (bad) pop pop jl aad aam (bad) in pushf (bad) or sub adc and dec mov xchg sti push xchg in cld scas (bad) lret xlat shr (bad) lret leave pop cltd mov or push or in jae lahf push xchg xlat push ja mov repz mov and xchg jmp cmp (bad) int dec (bad) ljmp sub and lahf outsb sub and or and jb ds mov mov xchg (bad) ljmp mov or out nop dec hlt xor (bad) out sub xchg out adc or sbb xchg jnp mov add pop mov push xchg pop mov mov pop into xor add cmp fldenv adc push adc rol leave clc jge icebp lcall mov ficom pop inc jle repnz pop jo (bad) add incl jo iret jmp or shr test (bad) into out cltd and aad cltd daa (bad) loop jns imul jbe xchg std lcall stc add cs aam xchg fstl and test adcb lcall pop data16 or (bad) dec xlat out sub fidiv push cld add arpl stc push incb in sub xchg jle imul adc sub ret mov xchg js daa out xlat adc or mov mov js push jo mov and repnz movsl scas lret xor jmp scas notl jp imul fisttpl sub test sahf lret sub cmp inc xor xor push adc fadds (bad) bound setl jmp push fnstenv push adc loopne into xlat jb flds jnp adc insl pusha adc mov jno ds stos sub or mov jmp or cmp and push ljmp cmp fldenv adc call jb or mov rolb in movsl mov dec pop cmp outsl (bad) cmp out sub ficoml cmp cs or mov jmp jecxz pop loopne sti xchg std mov addr16 imull mov mov or add inc in loop xchg dec sarb (bad) scas mov mov xor loop adc adc add repnz cmp jns inc mov pop jno and shr or sbb dec out xor sti pusha adc cmp cwtl pop adc idivb jnp mov cmp inc mov dec (bad) and call movl idivb and das fstpl repz out mov std push repnz sub les test movsb scas lret and lods fbstp mov mov mov push jmp mov int3 mov pop out cmp add shlb fcoml pop mov loopne sahf mov sbb not rcrl jg push mov cltd ds hlt dec sub pop adc mov ret out dec jmp test sub pop push fcmove mov xor cltd mov mov cld jmp fsub fistpll imul (bad) leave jne adc ret andw jbe adc (bad) mov out inc fptan dec testb outsl or sbb adc fcomps hlt icebp in fildll fimul xchg popa test jns sti stos sub rorb mov sbb leave add jmp fsts clc xorl jg icebp push sbb add xor out clc xchg cmpsl cltd sub add bound sub dec aas mov sub dec inc dec int3 fcmovb lahf repnz add xchg jg or int3 lds stc cmp jge inc and mov mov sub mov vpextrw lds lods fwait ret pop je jno sub and adc and and mov dec and sub es xor cs out je ljmp lret add stos popa lret enter bound scas ljmp aaa xlat dec push outsl or add push fstl or push fbld add fildl jg fcmovbe icebp (bad) leave jno cltd add and aas xor leave into mov jg fisubl cmp xor pop pop cwtl xor iret dec into aam mov sbb call sbb lahf jno mov (bad) pop cmpsb lods push dec leave pop and lret loop xor mov jae mov shr jmp (bad) es ljmp sti mov inc lds jecxz sub fbld jne (bad) push ficom out scas or clc bound inc inc imull inc mov repz div pop push and mov test sub rcrl xchg (bad) adc dec jg mov inc movsb ret mul jno pop pop jnp (bad) jmp and int3 ret inc leave or add sub adc shlb and rcrl into dec and bnd loop lods ja inc push stc loope clc add pop dec cmp ret adc sub adc push call icebp orl dec not int3 pop jno imul mov dec jmp stos fnsave js sub loopne out shrb in sti lds push test sbb adc sub mov cs gs pop mov outsl (bad) cld mov pop iret outsl cmpsb cltd das adcb out push jmp loop mov jmp sub lret push xchg inc xchg adc ret int3 cmp (bad) das and mov clc fisubl mov stos sub stc sti pop lret sub inc push add mov fsubrs jno mulb leave cmc inc jo ds sub nop sub sti outsl cmp idiv lcall mov int3 fwait or pop push fistpll pop xor (bad) pop mov mov gs sub test icebp mov dec ficomp sbb sub or push loope ucomiss das pop mov cmp (bad) sub bnd daa sub fsts xor popf inc jmp cld or xchg xchg dec ja push mov repnz sub sub mov lar push (bad) mov fsubs sub test stos mov es and add mov mov pop push pop subl insb sarb sub insl subb jmp mov or je mov sub fbstp sbb aam out mov sub les xlat loope sub xchg sub ljmp into xchg ficom iret add fidivrl inc sub mov shl sub mov cmp and sbb arpl dec dec cwtl daa jmp sar loopne sahf outsl imul xor dec jge dec pop aaa ljmp adc inc and stc inc pop cld and dec mov movsl dec icebp rcl decb mov shl rcrb rcr sub sub neg fptan icebp repz insb mov sub sarl (bad) cmc mov clc jns leave or rol into pop in stc jg mov or out mov sub mov cmp (bad) adc mov jmp sarb pop mov int3 adc movsl out adc xlat mov notl int3 cmp repnz jmp pop xor jnp rorl or das (bad) test sub pop lock repz mov fcmovnbe and inc ret xchg and fisub adc mov sub push icebp or lret mov insb rorl int outsb int3 je dec sti icebp mov popf fisubrl fs push push call and add je lods inc les pop jmp movsl xor hlt iret lods lods mov sarb xor data16 aad jmp xor clc sarl sbb add imul rcll scas clc sub xor and data16 mov cs cmp cmp (bad) (bad) mov js (bad) inc sbb or xchg in xchg pusha aas sub mov or inc pop mov mov lret repz mov imul mov (bad) nop jp push mov push xor mov negb mov mov (bad) xor (bad) in push es enter ljmp dec jg mov mov pop rclb pop mov push imul into stos mov (bad) das mov fistp cmpsb mov in and jmp movsl jecxz daa call pop imul pop xlat mov sbb sub or xchg imul and popf lods mov pop fptan movsl jne mov mull mov cmp shrl pop sbbl pop push mov lahf push in mov or mov movsl inc lods jmp in insb mov add push hlt jno add pushf ret and out jmp daa fist aas call sbb mov pop lret or mov and sub add loop cld jecxz outsl mov outsb les and test push push aam jmp add mov aaa aad dec push pop aam bnd adc xor jg xchg ljmp mov sub faddl popf inc push and xchg xchg pop fxch shrb mov jle bound addr16 das clc jge je lret data16 (bad) mov push push jnp movsl sti rorb mov adc jmp dec jne cs sub mov call mov fildl out int3 inc addl scas push xor cmp loop imul scas pop loope repz xchg sub mov popf push push mov mov test cli cwtl clc sbbb data16 arpl fwait stos int sbb xchg or add in add imul pushf add mov sub jecxz xchg mov cmp (bad) or repnz mov push in and std mov dec jo sub push pop mov rorb (bad) in adc mov (bad) imul add jbe outsb pop push mov fdivrs cmp mov cmp out dec sub loopne mov xor cmp cmpsb mov faddp ja xchg or sbb mov mov mov xchg (bad) lahf dec inc out xchg mov hlt lret and xor mov into mov or xchg cwtl cmp cmp stc sub pop int jmp sub mov adc sbb divl aaa cli or xor inc or jecxz cmp (bad) sub xchg addr16 pop jo mov sub xchg xor jg outsb (bad) lret pop inc mov add (bad) insl add test pop xor js das repnz adcb mov in adc leave rcll aam mov in pop lods cld sbb rcrl dec aad push mov es mov sbb or xor xchg sar mov push popf push or and cli addr16 out js xor push rcrb sub scas daa ljmp nop fldt push sub icebp js das movl push ret int3 and xchg data16 iret inc push cli adc and popa sbb or mov negb outsb xor rcl test out jmp pop and xor cmp xchg and jno dec push das out xor loopne imul or leave jmp jno xor loopne rclb dec xor sub add stc dec lret js (bad) call dec xchg adc fimull pop div loop push loop jns lds pop inc cld and pop xchg mov sti adc rcl dec idiv mov dec sbb sbb xor (bad) (bad) sub sub fistp imul mov sbb add lock shll mov int3 (bad) test sub out push (bad) inc fldcw lcall xor insb or cltd jl mov jecxz ljmp gs cli imulb mov push int add xchg aad loopne pop pop pop and scas sub mov xchg inc lods dec xor adc xchg jae cs (bad) cwtl repz jbe inc (bad) scas mov stos add pop movsl clc aaa (bad) sub cli dec add mov pushf lcall mov cltd cmc icebp xchg repz into mov adc inc mov out push jne add jg cmp inc pop test xor cmp (bad) jg jne sub leave hlt ljmp arpl or sbb adc dec ret out jb dec fnstcw xor xchg mov mov or xor (bad) stos fs xor pushl xor sub scas mov mov xor dec mov push jno test fdivrl sub jo xchg adc lods scas (bad) dec testb ljmp ret sub mov xor lret dec and pop fucomi stc repz cli call pop dec xchg jns movsl pop or pop jecxz xor pop and add mov aad aad add mov pushf imul test scas mov mulb sub cwtl and sbb ret cmp and out cmpsl clc inc (bad) ljmp mov pop lret (bad) sub xor scas cmpsl adc push jmp jno dec fidivrl mov int3 mov fcomi outsb repnz or jmp add fisubrl out mov sub mov push pusha imull push shrb mov pop adc and call fwait push push sub dec (bad) enter scas or inc mov lds in movsl pop sub add sbb pop cli call lds das dec push lret pop push outsl dec aad add into sub sub mov push dec add ret mov rcr xchg push jmp dec aam stos xor idiv fs push in addr16 imul into jle lret cmpsl push push mov out clc lret xchg ret and sub mov jbe xor xor cmp scas sub push mov cmp pop pop (bad) mov xchg imul fcomp mov dec pop rcrl shrb je clc mov mov ljmp mov sub std mov add popf pop jae dec push out (bad) xor stc out cmp adc aas add pop push out fisubrl (bad) popf lds mov data16 in test mov xchg add outsb jno sub sub (bad) sub je inc inc jmp imul pushf sub mov xor or negl iret pop pop test push fsubrs xchg xabort mov clc lods mov or jbe daa fcmovb lds xor aad bound pop inc cmp div pop pop sbb pop loop push notb mov cs lret xor iret mov adc jecxz addr16 jno loope add inc leave mov pandn mov inc mov push (bad) es pop sub mov fs xchg mov lods repnz shll imul lret icebp inc call imul popa adc fisubr daa out sub mov (bad) add mov fs mov mov imull mov xor (bad) call sub (bad) mov adc lock repz divl jb jb cltd mov cmp rclb mov mov shrb inc push imul (bad) icebp inc push and push scas popf mov sub add or push loope out nop scas mov push shr inc xchg xchg cwtl cld (bad) mov mov add je push out inc adc xchg test mov movsl ret (bad) int (bad) stos mov and iret jmp push push loop mov sub mov and pop or mov sub xor nop (bad) mov adc pop out je fnstenv outsl cmp inc jb dec cmp icebp add push adc ret popf jne outsl stc outsl cwtl mov (bad) inc (bad) leave ja int3 loop push daa je movsl pop cmp fsubs and pop xchg out cld cli mov mov aad andl mov jecxz ret jb popf (bad) loope or mov sar add repz pop jmp xchg pop mov add bnd mov pushf mov iret or ja cs insb pushl and aam imul sarl incl sub enter movsb xor mov push imul test repz stc jg (bad) mov out div dec lods or mov and mov dec sub sub sbb add mov jmp ljmp pop les or xchg scas dec ret add das jbe xchg (bad) cmpsb jge (bad) jg stos cmpsb dec fiaddl xchg in daa add icebp sub mov push mov (bad) pop lods mov and (bad) jo and rclb jl fist rorb adc insb mov inc jg jge pop mov jno scas jo icebp xchg xchg xchg dec scas into icebp mov outsb mov aad sub sub mov jg jb lea adc js xchg fistpll scas add add lret mov and int3 sbb test dec repnz xlat daa rcrl movsb (bad) xor adc inc icebp sub jne imul fcomps mov psrld and fmuls add sti lret scas adc fnsave rorl xor cld pop inc mov scas not dec scas xor repz aad mov outsl int xor and ljmp or push xchg stc xchg and aas sub adc xor aaa ret sbb lret popf std mov sbb cmp dec mov sbb sub xor mov or lcall das and dec dec xchg add (bad) in cmp xchg out inc in mov popf and mov pop stos scas jno (bad) (bad) mov sti test jb and repnz iret decl xlat (bad) xor stos stos (bad) pop js popf cld fwait jl,pn icebp (bad) and mov sub cltd pop loop pop in pop add add fmuls pop xor xor mov push jmp lret scas mov ds loope xor xor mov xchg sbb frstpm(287 ljmp jmp or (bad) pop xchg imul (bad) (bad) push jne aam aaa mov mov sarb and xor mov fmuls mov and add xchg hlt or xor out sub call add cmpsl aam cwtl sbb adc ljmp (bad) mov xor push sub mov icebp out mov mov aas sub into (bad) leave add les cltd mov jg data16 cltd and cmpsb or mov and xchg cltd push (bad) bound push cmp (bad) jnp or or adc mov inc pop and sub push jns dec and and jge es inc loope cmp pop mov mov std pushf dec mov sub hlt cmp jl add mov and fildll ja in xchg insb cmpl mov lds idiv or fistpll and add pop pop (bad) mov les mov pop and xchg cmpsb and xchg sarl imul and idiv cmp in push cmpsb ss sarl repz fdiv or in or fsts insb push jno leave rorl cmp xor stos (bad) and scas out dec sub loopne stc adc add xchg lahf inc mov aad mov fistpl inc xor xchg push (bad) in jmp jns in imul in xchg push mov mulb loope and or test push pop inc repnz or aam bound cli push pop or dec iret push fildl hlt mov xor es push inc sub sbb or test push mov scas imul xor ret pop rorb cmp adc inc push out xchg push or or mov adc sbb mov decl pop mov adc mov pop mov (bad) fcos cwtl roll rcrl enter pop ds imul add sbb cli sub popa nop add es pop in cmp xlat adc inc mov pop negl movsl jno imul iret sbb cmp ja loope inc push daa js dec and rorb in enter std stc push (bad) lret ret cmc in and or stc jle std sub fldcw and adc lock xor dec xor ret fisttp and sti jns pop out sbb daa dec xchg sbb push aaa test repnz pushf or dec fistp dec sub jge pop and push popf jns inc cmp pusha cs pop xor ljmp push outsb pop cmp cltd add movsl ja test sub inc out (bad) loop ret or lods rol mov ss lock xor cmp ror dec repz or mov jmp sbb fsubs cli xor ljmp jne xor loop push pop sub pop ljmp or movsb dec mov xchg (bad) leave les addr16 xor scas test ret pop in cmpsl jg jle pop push inc or xlat es roll hlt (bad) and das fisubl movsb ds scas cmpsb xchg adc mov mov (bad) mov pop or nop or push mov cld mov aaa mov dec dec lods test into popf negl int outsb xor jmp xor or fdiv and xor rorl sub lret aad popf leave pop cmpl (bad) int3 cmp mov mov sarl mul in mov inc leave push popf sub sub fwait pop jmp aam jmp inc mov dec ret aas jle mov push (bad) jl fs dec or sbb loop sti jl cli push adc or ljmp aaa lret test imul ret xchg mov mov or out repnz adc ret mov jle (bad) or ja push jbe add (bad) cmp and roll xchg push jecxz ja mov cmc adc jmp in xchg mov dec push mov mov ret mov fild les lret pop ss sbb cli sbb inc repz imul (bad) mov add sub repz or lods das dec mov bound fneni(8087 inc mov pop ds fdivrs pop mov lds or rorb mov ret jg pop mov jno inc or dec mov pushf movsl test je push call cmp je sub (bad) mov add dec cmp addr16 cs adc xchg mov add (bad) xor mov add cwtl xor jnp lods pusha pop xor push or pop scas je mov repz gs jmp loopne cmp scas scas sarl add sti scas add jl (bad) popfw inc inc ret xchg push popf pop adc ja mov (bad) cld and push out idivb pop roll daa jge xor scas out js daa lods inc pcmpeqw mov xlat into inc sbb cmp or addr16 inc inc pop pop icebp in cmp push sar lcall push inc mov sub sub and pop mov sub xchg into divl daa sbb add faddl das ffree jmp neg and push out add adc xlat movsb loop sar cwtl les nop xor (bad) notl hlt push pop push (bad) test mov das mulb ja stc stos xor push outsb out pop add std mov mov pop mov test scas sbb pop or or push cwtl xor pop stos int and lret jo pop movsb outsl mov inc loopne add (bad) int3 and ss and sbb mov lds sub xor (bad) sub daa xor lcall bound jne cwtl fidivrl sbb fdivs mov frstor fdivs fistpl pop dec xlat cli pop mov loop fnop adc xlat mov cmp xor cmpsl cmc push adc mov jno push (bad) das test add ja outsl mov adc fld1 mov (bad) pop or addl repz in fwait mov mov aam pop sub push hlt and dec pop fdivrs jnp mov ret inc roll ficompl mov or pop pushf push sarb (bad) stos cmp adc dec jmp daa rorb sub pop or or (bad) and pop cltd scas aas repnz aam push pop test xchg ret pop push or div push dec loopne mov push pop out dec xor fistl and and popf jge fwait xlat cltd mov cmp push cmpsb or push adc add push mov sub dec movsb push test mov cmp jge aam push and lahf pop xor or imul mov imul movl add decb push inc sub leave popf fstl nop das push xor pop imul sbb aam test pop push ljmp add pop mov inc lcall and shlb rclb or lea pop add sbb push mov mov mov aad sbb mov or push mov into sbb push add push cmc icebp nop push add addr16 out imul test fbstp aad cmp or mov lock movsl loope (bad) jp mov xchg lea or cli lret xchg jge xchg cltd add xor inc inc add and mov fidivl and ret out adc addr16 inc mov jmp sub and sarb mov xor out dec mov js mov in and xchg repz stc jp pop jge fdecstp sub mov lret cmp xor (bad) adc ja add or inc and xor xchg stos adc ja mov xchg mov inc adc pop fs lret jge notl (bad) pop mov mov dec sub clc add mov lcall (bad) int3 mov fbstp test scas std lods mov pop jge lahf dec test out popf outsb ret lret scas sbb repnz loope sub jne xor call les dec icebp stos fmuls cltd daa imul adc sub mov xlat push sbb jmp icebp cmp add push fsubs sbb ljmp cmp mov (bad) in sahf mov xor jmp xlat sub out sub rcll mulb sbb sub movsl mul pop aas cmpsl lret (bad) xchg add stc (bad) mov xchg arpl mov out sub push mov add push (bad) and dec push ret xchg into (bad) rorl or sub stos pop pop test loope test test xchg (bad) jmp mov loop dec out (bad) rep fs mov lcall icebp inc outsb cmp icebp mov cmp or stos xchg jnp scas cmp insl js add aaa sub (bad) xor std outsb movsl dec mov cmp xchg movsb call mov mov imul (bad) dec rol mov stc (bad) or fimull into push sbb lret jne scas je fdivs push jmp jmp or sub clc sub (bad) mov cltd or (bad) push dec fs loope adc pop xor mov add lock sbb lret insl das fnstcw out jnp int3 sahf out aam push jae das (bad) leave pop or aad in fstps inc and icebp adc push icebp scas ds xchg loop add lds test jmp sub (bad) subb cli and jae test or imul pop enter das (bad) bound ljmp inc mov daa aad mov leave sti xchg jns mov add mov mov out xchg jbe cld adc movsb into xor ret jl push imull sub xor loop fcomp roll jnp adc (bad) gs add adc ret cld jne fnstcw xchg jg dec mov jge push insl movsl push loop sub mov pop add dec lret mov mov gs into inc inc adc mov shrl sti dec sub cmc xor lret inc mov inc dec cmc dec jae or repnz (bad) xor sub pusha mov dec fldenv dec xlat mov mov push loop fstp cli and add mov xor push mov fnsave jle je xchg xlat ljmp mov call push push add adc mov and rorb jge dec and xchg call out cs mov dec push stos sub jl test sbb pushf out jge lcall scas sub jo ret popf out pop pushf stc push lcall aas cmpsl or mov ja cmpsb cmp aad leave mov jmp fstp das add cmp push jle outsb (bad) jmp fist mov ja mov stc jecxz (bad) mov test mov adc sbb and pop movsb jge mov or cmp xchg push (bad) repz decl enter divl inc mov add ret (bad) xchg xchg jbe jmp rcrl sub mov and or mov and out and mov cmpsb xor into pop sub pop adc clc test adc sub arpl jns sbb imul add adc mov dec and (bad) fstps sub (bad) fistp mov test (bad) and add es hlt mov and (bad) cltd mov in push out repz out and or fcoms leave mov fisttp rorl fstpl cs sub dec sbb and inc and inc pop daa not in and or rdtsc rcrb cmp jmp in inc dec aaa test dec sub sub shr and mov fucom cmp mov testl push mov dec xor leave and ljmp add pop ljmp cmpb shrl call ljmp mov test imull inc jge iret or stos sub (bad) mov mov roll mov jnp cmp out dec sub mov stos sub icebp (bad) sub stos cltd int3 and dec and push fnstcw aad push std sti add loop frstor mov jae aas push add daa test push fmuls jnp movsl jne sub cmpsb xchg cmc mov cltd js idivb (bad) fstps mov aam stc push jno leave sbb or mov inc scas outsb fcoml push sarl imul test aaa bound xor ljmp aas sub xor cld pop xor xlat stos imul imul add xchg cmp dec and sub mov push xor lcall sub mov push sbb push mov jl inc lds xchg sub test push out inc jns dec negl roll mov adc gs mov xor xchg xchg popf inc inc lret sub cs and scas mov push jmp sbb pop jle or push sub or xchg jge lock cltd xchg xchg xor sti sbb cs dec icebp push adc loop test fsubrp gs xor sub add sbb xchg (bad) sbb dec push sti cli test hlt dec push mov or xor xor rcr cs sub aam mov xor mov stos xor ljmp aas test stos mov aas frndint sub jne stos adc jmp and out cltd stos fst cs cmc ret mov pop xor pop (bad) dec and dec sub test les clc test push lcall pop jmp mov push dec xor (bad) scas movsl jle iret xchg repz xor rorl xor or pop jmp rcr (bad) inc gs (bad) cmp ficompl inc das out and outsb lret jg inc lds (bad) jb mov mov push sbb add and mov fucomip xchg jl mov mov lock ljmp mov (bad) or add or xor mov iret sti orb and dec inc xchg mov idiv add xor sbb xchg int3 fsubrp xor xchg sub pusha popa imull or outsl test jecxz add fsubrs shrl adc push xor out in scas aam jmp sub add jb dec nop add adcl mov aad jne inc cli xor sub xor gs xchg pop or inc mov outsl mov pop (bad) out (bad) cmp sub movsb cmp cmp add cltd pusha (bad) mov sbb loope or test ja inc sbb ret repz scas jbe js sbbb xchg jo mov pusha paddq lahf push xchg push dec xor dec push xchg and stos ljmp mov (bad) pop xlat mov sbb cs jl cmp mov imul dec jmp adc pop leave or out sub and sbb movsb cmp jle or pushf xor addl lret inc pop mov xchg jae sub pop (bad) in adc mov mov outsb insl inc sarl into (bad) or xor nop pop inc les (bad) jmp push scas int cmp loope or and and pop pop les inc sbb testl mov pop push cmpsl and cwtl int3 out xchg movsb imul lods bound mov fadds (bad) cmpsb cmp ret lret adc sbb xlat xchg fxch jae dec lock mov icebp jnp and fdiv and xchg iret push shrb in repz add jge fs pop lods dec (bad) sub push and pop mov inc js movsl mov (bad) jnp or pop (bad) adc dec aaa sub ss dec das and (bad) stos vpsubsw dec adc rcr in (bad) dec out mov mov mov roll or addr16 lcall fscale xor sub cs xchg (bad) outsb mov jmp jnp push das jge sub mov pop movb cld in daa add jge and push andb lea dec addr16 pop ret mov rol and mov sbb sub add mov (bad) loope outsl rep xchg loope mov (bad) jo and xor mov and in sub mov aam sub idiv pop sub stos inc (bad) mov aas daa and out call lds decb inc dec iret xor int cmp push fcmovnbe cmp outsl mov sarb dec stos xor or jg jno mov mov jmp js dec loope xlat lods xchg dec jb in negl lock sub cltd push imul adc in pop (bad) mov out lahf push xor loop xchg mov lret sahf jae ret stc or fistpll das or cmp repnz xor popf insb and xor push push pop insl dec and icebp gs xlat test jnp add out test dec (bad) mov dec inc pop (bad) icebp (bad) fnstsw daa xchg mov out rcrl sti lods addr16 pop gs aad ds xchg stos mov sub cmc sbb cmc mov sub popf add and mov inc daa loopne shrl enter (bad) cmpsl xchg adc mov sub jb dec cli jo out mov mov test or pop inc test dec or xor clc mov ret imul or test and lock xchg fnstenv or xor fadds outsb lahf fidiv or cmp jnp jb cs adc cmp sub push cwtl add mov sub out mov xor sub pop xor cld pop or jmp mov ljmp int dec push and pushaw xchg jg xor pop and ds sbb scas or (bad) pop inc loopne sbb (bad) xor lcall (bad) enter add cmpsl add and mov (bad) (bad) and das fcomps mov xlat aas cmpsb xor mov int outsl adc sub shr dec sub cld fwait mov sub mov je clc or das and mov fdivrs inc mov mov cmp cltd push xor xor daa mov fisttpll stos bound cmp loope out mov jmp lods aas lretw enter scas nop adc inc sbb push lods mov (bad) and mov daa xor jg inc adc idivl test add decb (bad) fildll push gs push adc cwtl dec les jae icebp xor mov aaa pop shrl xor loop addr16 push push mov enter insl add aas mov or cmpsb ss push loopne into sbbb fwait dec (bad) add imul mov jle repz pop adc add lahf loop xor pop pop mov dec mov mov mov jnp xor sub (bad) xchg fstl rcrl nop vmovaps add in and cs adc arpl adc pop inc (bad) mov mov and sub jp neg roll scas or movsl (bad) mov gs adc mov xchg out xchg je and inc idivl add and ljmp push mov lahf add lret (bad) xor in or inc ret pop loope sub fst and sub cmpsb cmpsl pop mov xor mov add mov dec aaa mov xchg mov and add test mov outsl jle clc ljmp mov xor or mov repnz mov cmpsl push js lret adc orl movsl pop sub or jl iret mov loopne lods push pop mov clc add inc and mov xlat iret ja loop pop gs rcl test and lds fdivrl adc cwtl jne or push dec ja je out sub in scas leave dec adc and dec adc jbe dec adc out cs adc ss das leave push icebp test sub fimull lds cmc or fs jo jmp or and aad xor and iret mov out jmp inc inc mov push push xchg pop and outsb jmp push out js sub add iret bound (bad) divl stc mov adc and imull pop stc jmp pop outsb addr16 pop pop outsl pop sub or add or pop mov xchg lds inc call cwtl mov fisubr adc icebp xchg sti sub dec je push ror inc inc sbb pop or popa ret pop mov inc clc jne orb sub out sub leave pop pop call mov adc dec mov mov push mov mov imul les lret (bad) test mov xchg xlat adc mov popa divl scas xor fbld sub mov stc pop push js in mov dec out mov push add mov es mov rcr scas or and outsb (bad) leave cld lahf xchg bnd mov xlat mov jo cmpsb rcrl xlat and xor ret adc or stc push or jge out popf aad pop xchg icebp dec lahf iret mov ss jp (bad) je fldt shlb cmp pop hlt loop mov mov mov cmp inc stc adc add rcrb outsb sbb repz enter in fcmovbe cmp jle,pn movsl repnz sub inc sub xchg adc daa xlat dec and lahf and repz mov roll faddl push add or sti sub dec push jecxz in or ret push inc pop lret (bad) out sub adc subl cmp xlat pop stc mov xchg scas jae sbb or or lock clc lds jno aas and pop das add push xor loop push clc xor lret mov bound or mov xlat int3 adc pop xor and or jmp mov sub jmp aaa stos push mov into (bad) idivb push sub xor fisubl outsb stc dec xchg or ret push xor cmp xchg leave pop ds pop jecxz pop mov adc jg ljmp push mov rorl out (bad) jmp jmp enter mov popf inc ret add aad pop cmp in sbb decl pop or stos adc mov test decb adc in pop mov or jne jae pop clc mov adc popw call iret and mov or or out add mov adc pop imul ja xor cmp mov pop jge notb mov iret push ja dec pop push (bad) iret mov pop xor xor push or aad cld idivl sbb xor push adc add inc jnp jl (bad) jge pop add rcl int3 push cmp and or add pop xchg inc fild cmp shr add mov idivl flds rcll push lret pop nop or pop add (bad) fmuls aaa pop mov ljmp mov mov add jg cmp sar (bad) rolb repz push xchg pop adc jge (bad) jnp cmp (bad) daa cmc jg inc aam add scas dec insl jge in sbb hlt notl push mov shr dec push push mov inc dec dec mov add sub pop sub cltd add jo in daa mull mov pop addl pop or fdivl aas jge sbb ss inc xor pop clc dec (bad) (bad) pop pop aaa dec jge mov pop or int3 add out cmp jmp sti loop sbb ret jl inc mul adc pusha or jge call xor jg add cmp sbbl test out jbe adc arpl outsl and fstpt inc push add mov cwtl in enter push lods test add sbb jbe or pop mov push cmp push stc pop jne xchg push cmc cmp and sub add repnz nop pop mov pop inc dec cmc add or repnz fadds sub cli jmp sub cmpl xor push sahf mov or push jb add pop jmp mov in cmpsb cmp es add and cmp cmp pushf xchg inc adc mov mov cmpsl mov daa icebp ss mov and fstps adc add cmpsb iret leave bnd lds dec ret dec pushf mov mov rol loope and fnstsw sti or xor shrb stc inc or icebp out add sbb fisttpll bound cmc mov lods testb lret or sub adc call inc sbb imul bswap jl loopne push and out jns loope cmp imul dec jnp maxps mov jp sbb aaa hlt inc ret jbe (bad) pop add push fistpl jle adc jp aad mov nop jge int3 testl scas mov sub mov push enter cmp add dec test or adc jmp inc (bad) mov daa mov hlt mov leave mov daa pop sub push sub cmp daa pop sbb aam daa out or bound fstps test mov cwtl aas ja hlt rorl shlb xchg adc xor (bad) jnp imul dec mov loop push into push pop shl daa notb push mov pop mov aaa adc scas cltd jae xor testl loopne and sub inc cmpl out adc jmp or int js jle fsts mov adc les ds in mov jne dec add popf out test sub sub sahf push add add fcmove (bad) pop fsubrs xchg stos cmp icebp sbb mov mov mov sti movsb mov mov pop adc in out pop push mov cs or leave sub adc jmp push iret stc and pop data16 dec or lcall ds mov dec add jns sbb in pop aam push (bad) xor push shll adc fmul ljmp mov sub sbb and fcmovu std jnp lods xlat sbb xchg sub push ret (bad) stos lret mov adc pop jmp out jge and sbb mov leave jle nop sti cmp mov lahf cmpsb lea (bad) and gs add or xor repnz jmp mov pop add ret pop jle push pop cmp cli repz xor mov insb stos mov adcl arpl lock mov rol cmpsl jl leave jne stos lahf jno dec cmpsb movsl jnp scas jne fs or or sub push mov xlat dec out dec or cmp ss adc dec (bad) cwtl dec lret fstpl inc jmp or push or push or cltd shrb inc fxch dec adc (bad) aas cld not out add imul cmpsl or lods sbb call adc scas sub or repz pop mov mulb jp inc test adc pop mov sti push (bad) lcall mov (bad) aad jb push push sarl shrb jmp jmp (bad) xchg push and cltd cmp idivb xor inc test inc cmp mov je push push inc loope mov adc dec dec mov jb add cmp adc mov cli testb sbb std insb cwtl cmp mulb pop lods pop lcall jne xchg and mov mov cmp repz mov push out out or pop stc jmp jg inc dec cmp stos insb mov pushl in cmp xlat dec xchg hlt lret call mov clc sbb push test fisttpl jno jbe gs sub gs mov sub leave leave cli xlat ret or xchg pop pop mov out js cmp rcll movsb pop pop xor sub sub mov dec lods jl sbb mov xchg or rorl sub lahf lods divb xor xchg and sti cmp mov daa out pop mov repnz inc mov adc call mov (bad) mov loop mov sbb or popf repz sarl inc cs pop rorb and mov dec fcomps adc mov clc cmp pop fxch ljmp xor repnz jg mov adc mov push cwtl insl jp mov inc dec into jg (bad) sahf bound sahf or sti pop sahf pop call leave bound dec jb scas pop in cmp je hlt iret mov pop push (bad) das cmp enter lods push mov or push xchg shlb mov divb call mov mov sub xor gs mov rclb rcrl sub and mov sub imul xor jae movsl fistp imull lret pusha leave repz nop loope (bad) fist dec shrl pop aam in pop fsubp fldl aaa shlb pop sub into fiadd ret mov xlat stos adc push leave xchg in movsl mov mov cli sub mov add sbb push add sub das jmp mov xchg enter add sti mov pop mov notb imul pop rcl jle mov dec ljmp lods mov or notb out mov aad push stc mov jl jb idivl addr16 jo sbb jmp fsts mov and orl sarb sub adc ja cmp ret mov push add dec divb das add push push pop push dec lock mov mov adc enter push add mov mov popf (bad) hlt pop dec enter add push mov push push push mov push cmp and add in add cmp out out (bad) fildl or mov cmp push (bad) or repz mov ja js orb xchg jmp (bad) (bad) cwtl dec cmp dec dec pushf inc push xchg ja shrb jmp xor push (bad) cmp add fsubrs and or cmp ljmp cmpsb adc xchg jbe pop out pusha loopne sti cmp js push in push popa cli jg add jmp inc stc push add ja push push or jle add stos sbb xchg mov mov enter mov or pop stos ffree test shrb (bad) outsb movb or movsl addr16 dec pop xchg (bad) ljmp dec xchg mov sbb push xchg adc aas add sub mov ret cmp outsb ficoml lods push xor xor outsl mov test ret in loopne repnz adc outsl jg gs iret jp fiaddl int and add add int3 dec mov sub pop add jl xchg jo add not inc add xor inc mov ds repnz pop pop push dec mov mov imull ficom dec or (bad) add or mov dec mov pusha in adc mov xor or pop push out push out (bad) xchg bound and sub cs dec and jbe fs push sbbl push sub jp dec mov push add mov or cmc popa int outsl mov xchg adc adc (bad) cmp cmp cmpsl stos jl (bad) (bad) mov dec jmp xor add lods fnstenv pop jb lock lahf (bad) mov mov movb jg or ds stc mov stos loop test ret clc pop lds adc stos test neg les mov dec in mov ds pop mov (bad) mov push lret out mov (bad) xor or aam cmpsl icebp adc or push jno subl popa hlt cmp bnd cmp (bad) jno xchg xchg lret add xchg incb jmp lds icebp sbb or mov xchg lds and adc push fnstsw sub mov mov xor ror lcall imul ret pop jmp gs les sub and lds pop xchg popf std mov dec (bad) mov pop xchg inc mov xchg mov ret xchg xchg inc pop mov sbb popa and pop sub mov mov or adc sub fwait mov xchg movsl fldenv and sti cltd fldt outsb add scas push jnp push mov sbb addr16 mov insb and icebp sub add or fs mov mov jl pop sbb mov rclb or dec mov ret lods cmp lahf and dec rcl xchg cli pusha dec sub and mov int cli ret popa daa and dec sub mov xchg iret mov shrb adc push inc xchg mov add sti fnstcw cltd sub or jno movsl cmc inc pop popa iret out sub icebp dec dec xchg xchg pop test movb push jns and insb push notl das jmp xchg sub inc (bad) cld pop stos xchg pop mov cmp mov icebp mov ret pop mov mov pop jo sbb stc das neg test inc mov (bad) call idivb xchg ja adc fbld aas xor dec or call push ljmp mov mov inc ja mov sub dec daa mov or dec jae dec add add lods imul and jmp lock cmp mov iret inc lcall cld gs push ret and and leave std xchg xchg cmpsb movsb dec sti and add int3 aad jns addr16 push fstl add (bad) fs ljmp pop mov ret push clc pop push or adc add xor or sub (bad) das std xchg or push test lcall sti sub nop push orb jb sub icebp outsl cmpsl popa sub dec jl dec arpl mov pop outsb test xor je push add lods push push adc cmp cmp dec dec out or loope enter fistpll jl out leave dec call sub out adc aaa mov ljmp pop sbbl (bad) inc sub outsb data16 bnd mov xchg imul pop movsl xchg mov mov or jo sub pop lods adc dec mov rcr imul jmp pop add sbb cmp insb rorl stc jo pop or call int3 add add notl sub scas adc xchg in add aaa and ret repz xchg xchg out mov fldcw lahf clc xchg lret adc enter pop ret scas mov mov cld sarb sub mov into lret push push femms and fs dec sub adc sub pop into add lahf fdiv outsb rclb pop iret xchg adc mov mov sarl add xor cmp push fimul mov in mov mov add adc xchg iret in rcrl (bad) aas imul jl ret dec jge sub or xchg imul or mov test (bad) into cmp xor cmp adc mov jle and mov sub jne cmp aad push fwait mov inc repz ret push mov movb sub mov or aam lds mov inc ret add and add dec ret das aaa loope jecxz adc ds lea adc shll mov xor mov js cltd and rcl icebp or (bad) xor or cmpsb aam out fdivrl dec ds jo or gs dec cmc out ja inc xor pushf xorl (bad) and fistp in cmpsl push in mov inc cmpsl (bad) iret (bad) movb inc (bad) lret inc lock ret cmp into mov sub mov sub adc fsincos insb icebp adc pop popf shld xchg movsb mov mov mov ficom lods loop xchg mov mov xchg mov jl pusha pop and cmpsb sbb int3 aad dec dec fmull pop js repnz mov ljmp fidivrl cmp mov std lds stos je stos idivl ret push xor popf hlt mov int shr sub nop add rcr xor mov jg push idivb push adc or dec and and rcrl scas mov rcll cwtl cmp sahf mov sbb sub sub lahf pop (bad) mov pop cld enter mov and jp pop xlat mov cld cli leave xlat or in into test adc mov mov add inc test inc sub and cmp mov xorb mov jo pop loop (bad) loope outsb sub outsl adc push dec add std adc or loope sbb jmp fbld mov (bad) mov push and jmp pop push loope adc add leave mov lret xchg ljmp mov (bad) or mov or sub dec push test mov lret cmp mov push jne mov push ja sbb push cmc adc jb (bad) lret xor (bad) xor scas ret fsubrp imul sub xchg ret inc push pop lods les fimull lock cli mov or add icebp data16 movzbl pop dec lock or ja cmp fildl push inc xlat ljmp inc test test std pop xor stos mov (bad) popf fstps insb sub and add inc xchg and fild sbb es dec mov xor (bad) cltd cmp movsbl (bad) shlb mov jmp pop pushl in (bad) mov sub cltd pusha inc data16 subl out dec fsubr inc push mov mov xchg icebp rolb cli mov jmp rcll ljmp or lret pop add cld ret or mov mov mov jne or stc push (bad) push sti xor jno or cmc pop xchg mov inc xchg cmp xchg fs fdivs mov fucom add daa loope jae pop xor sub jo das push push inc dec sbb xor loop jecxz es inc pop lock xchg add and leave mov pop out sub in xchg cli mov ljmp cmp mov enter mov cmp mov fldcw mov cmp (bad) cmc cmp cli mov lods repz xor daa testl push das icebp inc sbb cs faddp sub (bad) push cli (bad) jae or add js xor clc push pop jmp lahf lret test mov push or sub and xchg jle gs mov mov add dec lret dec jmp xor je test inc and sub inc mov ljmp mov add (bad) jp imul mov push nop pop pusha cwtl mov addr16 sbb stos jb sub (bad) push xor clc fstpl lods push cmc dec pop call imul lock push xor ret sbb (bad) push sbb xchg xchg mov loope cmp xchg inc pop sub jb addr16 mov pop pop add and je (bad) lock (bad) push mov jg fldl2e gs hlt dec sti into imul je mov ret std push out xchg xlat push popf rclb sub (bad) mov (bad) inc test (bad) mov sti xchg pop aas pop (bad) add xor add sub loope aas aam test xlat in lods and xor cmp add add mov xlat out pop stc sub insb test add pop les fdivrl add lret ja notl or xchg jns repz dec sbb ds shll mov imul push pop clc ret inc jecxz cmp daa stc sti mov jne jmp dec mov fcomi movsb cmp ret divl js sbb dec dec or std mov cmc (bad) mov jg std daa adc cmpsl aam test or and pushf jge or adc pop xchg (bad) (bad) jge mov insb lea pusha fisub popa sub pop jae shll daa lea sbb cld mov cli pop out ljmp outsb les les cmpsb test out cltd mov test cmc dec pushf inc add repz add mov fisub add mov repnz push imul cmp scas hlt stc fldenv test pop mov adc xchg lods jno cmpsb sbb outsb movsb jmp adc popf lds cmpsl jp pop lret ret dec out xor push fdivrl lock call fldt mov xchg je jmp mov mov sbb dec xor sub outsl push inc lods mov or popf rclw or jno dec push mov notb pop inc or sub movsb xchg (bad) call adc sub test or popa sub rcll imul mov jbe pop ret mov mov jecxz dec sbb jecxz add xlat sub scas mov sbb lock mov xor inc fstpt mov repnz icebp stc jb lret sub xchg imul lret mov mov adc sub mov pop xchg notl rorl sub movsb lds sbb xchg push jmp cwtl or and rcrl pushl bound sub loop cmp loop xchg es cmpsl (bad) jmp out mov movsb (bad) repz cmp lahf mov add cld fnstenv fisubr mov add ljmp nop fld pop das mov mov lret inc or cld mov shll sub mov jno leave sub inc lock das cwtl mov das pop add mov std out push leave or fdivs and fsubl push out adcb jge in sahf (bad) int3 cmpsb cpuid mov pop call push adc ss icebp lret cmc push pop inc add push xor test dec test mov fistp mov (bad) sub mov push ret je xor lret mov adc push sub mov pop fmull ret and aas dec test and mov add and cs inc sahf cs leave push inc cmp sahf pop gs orb mov mov mov jmp shl xchg cmpsl pause xchg addr16 add ficoml (bad) js push fistp push mov cmc dec mov jns lret out push mov ja inc shrl mov sub or xlat aad scas (bad) ret push shll or test sub pop or aam add mov inc pop mov xchg or adc or test or out das lret sub adc sbb or sbb leave mov push add xor outsb dec rclb loop mov and imul ljmp lret call pusha xor addr16 (bad) enter daa mov xor cld mov add sbb pop ljmp pop jmp push insb dec leave add lcall or daa and jne xchg xchg or mov aam dec dec pop dec mov adc std (bad) cs ds xor mov repz xor sub icebp jmp inc xchg xor outsb imul fstpt clc sub (bad) out repnz mov sbb jl push jbe sub inc outsb xor sub sub (bad) dec imul stos lret (bad) push dec (bad) fldl2e lock shr or imul xor sbb popf decb add sub ja sbb cmc jo sub add xor clc (bad) xchg fnsave sub lret cmc mov rclb (bad) cld mov pop mov adc mov lds and and in inc mov bound ret gs lods pop sbb insb test xor xchg and sbb addr16 sbb clc and hlt sub cmpsl cltd and push ja add fstpl imul test mov fcomip lahf movsb cmc sub jo int idiv mov out icebp cld bound ret push loopne and cmpsl nop test xor add mov cmp int3 xchg leave lock inc dec movsl xlat int3 fwait mov cmpsb lret stc xchg adc mov dec cli fprem1 scas mov icebp ja jae pop fistl xchg push pusha xchg (bad) cmc jbe xchg call mov leave jge call negl mov mov fistp or shl sub pop aaa iret and and cmpsl (bad) dec (bad) mov out sub pop mov jae mov cli push popa add pushl lds ja in xchg shlb dec adc sbbb idivl xchg or xor mov pop data16 xchg push mov add insb or mov sub xchg xor jb sub not leave mov pop inc out sub mov leave std cltd out outsl in pushf lret add scas and int inc dec xchg in rcrb mov add and lock adc mov repnz adc mov sub movsb xchg pop mov out jno mov xchg ret out in scas pop sbb mov bnd push (bad) mov bound xor mov lcall xor (bad) and imul fimull ret aad sub xchg pop imul or out stc aas mov dec in bound lahf push xchg sahf or add cli mov adc les jmp add add (bad) in out adc (bad) fldln2 outsl mov push ja mov das fyl2xp1 mov je lock test add xchg into dec dec leave (bad) addr16 jmp icebp fsubl int3 iret mov mov adc rcrl movsb cmp int lock dec xlat stc fs cmc mov pop push add mov xchg push mov adc cmc cltd jne or fs imul cmp ret sub mov jmp mov gs test scas cmp cltd pop shr jmp js mov or xchg stc jp and mov sbb (bad) into sbb test lea es ljmp pop push test dec sub lds cmpsb xchg mov sub dec sub scas sub ficompl sub adc sub addr16 pop pop int ds (bad) push inc or xor inc jmp pop pop in and cli je (bad) mov jl gs repnz (bad) mov and sub xor lods mulb adc (bad) xchg test (bad) repz lods int3 sarb sub dec xchg pop pop mov mov roll push lahf jns push xor push pop mov pop jae add pushf jg addl outsl sub push insb or mov cmpsl insb jg cmp push mov pop xchg mov dec sbb jmp and jbe inc inc arpl sub push mov dec addl add add in aad xor mov idivl xlat pop (bad) mulb add add loop push mov inc cli push sbb dec pop fiaddl les lahf mov pop dec push dec hlt mov data16 add (bad) ja push mov incl enter pop call daa daa out pop cmc repnz stc or mov mov int jl and fldt daa mov mov cmpsb pop mov adc fild pop xchg insb popf xchg pop mov (bad) xchg pushf cmp mov add mov push xchg and cli and add push add mov dec pop push mov push repz (bad) popf sub clc and push fs aas mov ds xlat loop and es mov jns or push xchg mov push push add loopne lock sbb xor or dec js or cmp or dec fcomip (bad) mov ret xor mov xchg inc pop les add jmp pusha stos cltd (bad) cs (bad) mov sbb adc sbb imul mov xchg xchg ja scas mov mov push pushf test sub imul std lock jle mov stc or and mov aad lret jae push rcrl sbb shl stos jo or call mov jl dec (bad) int lock jle outsl xor stc sub (bad) (bad) cmp imul (bad) xor xor sub test mov rolb aas mov adc add imul sti xor popf outsl jg movsl icebp fidivrl cmpsl out es (bad) fsts loopne xchg pop out loope jg mov scas inc out sub sbb xlat sub test mov out pop aam ljmp sub sub out dec mov repz idiv pop or adc out out and roll sub bound std push sbbl movsl add sahf or add pop lcall hlt aam jge inc xchg mov push mov (bad) or lods inc xchg sbb pushl lahf sbb pushf inc das (bad) sti lret pop movsl (bad) fisubr lea sub inc out icebp push jne xchg std xchg aad rolb inc mov lods ja addb icebp xor test into (bad) pop movsl fsubs push neg cmp jne scas jecxz mov push cmpsl push inc cwtl pop insb (bad) jge xchg gs or push out bound mov sub dec xor push inc or sub xor sub jmp cmp xor in mov (bad) cmpsb orl pop xchg adc out jnp mov inc or pop out aas pop das jmp pusha movl cltd addr16 fcmove mov jno outsl ljmp inc add cmp xlat scas fldenv add ljmp pop imulb sub mov shrl in test xor subb mov jecxz add inc and or jnp shrb inc xchg and xchg xchg push sti repnz ljmp lret jb push push push push ljmp shrb test fs stos call sub jb (bad) testl adc xor mov bound pop xlat int3 outsl mov call outsb adc xchg jo or insb sub push leave jle movb movsl out pop out xor mov scas loop xchg mov hlt sub add fidivrl add addr16 and (bad) mov (bad) js cli stos jne lea and jnp outsb mov sahf mov or add pop sbb ljmp mov inc (bad) andb out inc mov icebp aaa movsl sub push cs mov xchg mov sub pop add xor iret mov insl xchg gs ljmp cmpb nop add push mov or into mov sub (bad) push out push push add jg sub and je gs add sbb popa inc rcll xchg cmp jecxz xchg lock and clc ret sbb imul lcall fsub sub and dec or and rclb and and or xor mov stos mov add push mov mov lret cmp (bad) repz or push add push dec add (bad) sahf mov popf pop sbb ret ljmp lret xor sub cmp fsubs fisubrl loopne stc mov mov lods dec jecxz pop daa push mov sbb ficom jmp lods push xor or xchg insb loopne icebp mov icebp pop sub xor mov sub and pushf lret push data16 clc xor out fsts mov mov into jp sub mov sub nop adc test outsb xor jp ss mov mov (bad) or bound test je add dec call ljmp cmp int3 fldenv shrl sub (bad) fstl (bad) pop or addr16 add jns push mov and push rcl cmp inc (bad) in jmp adc mov pusha dec out arpl lahf sub lcall lds lods pop mov pop das sub dec aad jl adc inc ret mov add andl (bad) dec sbb gs push push sub cmp or lahf push pop mov aam inc and jge or jmp pushf mov fwait movsl sub daa test ret scas (bad) out pop shll add pop int3 jb inc imul insb loopne decb stos adc adc mov push push xchg not iret cmc out inc xchg xchg daa (bad) jmp cli mov loope xlat inc inc or mov cld stc in xor adc mov mov fiadd (bad) push addr16 das je jmp lahf adc mov jb xor pop mov loop aad mov jns imul jns (bad) sub mov inc xor or rorb add jb dec cmpsl and roll sbb adc in cld dec mov clc cmp negl in mov (bad) (bad) add jg repnz jbe leave stos dec fdivs daa xchg dec push add dec mov call cmp mov xor sub lahf cld dec push xor and inc fnstcw pop movsb jo scas xor out jae shrb adc ljmp scas adc add cmp xlat ret fnstenv jmp (bad) jl pop add mov (bad) sbb fbld sub sub ljmp js ss cld xchg das push pop pop bnd adc leave lock shr rclb out mov adc (bad) fs cmp fnsave sub les frstor jae pop movsb stos lds scas fs or jbe daa jge push popf into hlt popf adc sub pop mov imul and stc sbb xor lahf pop xchg loopne scas aad xor ficomp adc or pop sub ror pop mov cs pop ret inc daa or repz das pop cmp fimul xor stc add sbb rclb pop mov insl xchg scas mov xchg stos push out ja mov xlat pop fadds callw jg mov jb add hlt mov xlat pop push fdivs jne addr16 jp lcall jmp xor xchg lret jg push enter idiv outsl ret xchg movsbl mov jl add imul pop or pop aam cmp mov sub jle mov leave dec jge mov sbb into fdiv shrl imul add repnz mov test (bad) mov pop jg add ljmp mov dec cld dec ret (bad) aad out dec iret mov sbb lret xor shlb insb sbbl add into sub lods imul bound push add mov xchg mov fidivl push mov stos push std call adc pop into mov sub cmpsl hlt xor jle stc mov lds clc inc leave and jmp enter mov das cld shrb adc js insb cmp popa mov adc mov cld cs jns leave pop sbb orl (bad) (bad) cmp popa sub add imul pop negb scas xor or outsb lods imul scas add jge iret popa fwait cli xchg sbb cli sub les pop dec dec pop cmpsl push js enter mov cmpsl mov cs inc sub push fcmovb jle sar adc leave mov (bad) mov sub scas fstp arpl xchg push out push fwait or icebp sub cmp ret stos inc pop xchg add dec adc sti out pop in leave cmp jae mov imul popa jmp enter xchg xor into inc mulb fsubrl xchg push ds (bad) aaa push mov ljmp jnp mov dec cmpsb lods adc xor orl xchg pusha add out test cmpsb sub and xlat inc aas daa outsb data16 icebp jg icebp outsb xchg sar adc xlat idiv test push lret sub push push mov into pop xor pop sub int3 and pop pop stos cmp ret dec sub lret mov add sub into dec shrl sahf add stc shlw cmp enter out mov cs (bad) mov inc imul jbe outsb lret ficom xlat test rol cmpsl inc (bad) cmc out xor outsl test inc fistpl cmp das lret push das xchg pop cmpsb es sub pop sti repnz push hlt and lcall mov test jns push mov fstpt adc fistpl add xor cltd lahf cs daa (bad) jl and add or push icebp pop add pop inc mov jg les dec mov into jnp push cmp ret mov push insb mov sub cli (bad) lods jp push cmp xor add xor lods xor cmpsb rcrb add dec inc or loope cmp movsl xor mov xchg decb or repz sbb inc mov push dec iret (bad) cmp fildll sar xor std mov dec pushl cltd lds je leave add shr icebp adc jbe pop dec je push lahf mov xor mov cmp pop xchg stos jne jmp aad push cld out fsubrp xor mov inc fiaddl add mov dec int3 fmuls adc mov inc mov fstps leave jns subl cmp sahf and loope outsl mov rcrl cwtl pop inc test sub jne cmpsl movsb pop jge mov push mov cwtl (bad) xchg aad repnz test insb jne out dec lds dec or daa (bad) loop (bad) xor jo popf xchg and or jo add ja call pop mov test lret sbb (bad) pusha mov rclb (bad) or lods pop cmc jp iret xchg das or adcl je lods inc push ljmp dec out fs xchg enter xor repnz (bad) repnz mov jle,pt into sti sub mov jno mov xchg push xorb outsb int3 scas ret pop xchg sub rclb popf cmp aam cs (bad) icebp xor data16 sahf sub push push lods pop mov or cmp mov sbb inc or xor mov pop enter insl nop xchg and inc mov jmp and inc push nop iret mov or adc xlat or add hlt mov jmp dec daa push outsb leave shll jp add pop lret ja pushf and int3 ret or add xchg daa pop iret mov nop push push out jno lahf fmulp imul ljmp movsb stos mov out les xor lret dec in ja push sbb ja imul mov leave cli test lret call and dec stos xor push cmpl cmpl or lret ss into cmp pop adc pop leave je out ja inc mov mov out or (bad) push sarb push dec iret ss repnz mov xchg mov inc and pop repnz les or idivb call sti sub mov repnz xor xor test cmc mov jecxz mov cmp enter ljmp daa shrb sbb or sub add mov or mulb xchg jl lret cmc dec lods (bad) cmp ret dec push sbb sub inc push icebp pop gs repnz jb rol push jne jge dec lods pop out mov scas mov pop repz mov notb cld out mov iret xor mov add xchg negb sbb mov add mov pop loope sbb mov or lods xchg dec jmp mov and mov xchg stos sbb ja sub jmp daa ljmp imul and sbb inc mov movsl lods lret pop out notl jnp sub mov cmpb adc cltd xrelease shlb sbb popf call add push mov ret jmp xchg movsl push out shll sbb aam fistpl mov jg xor push gs iret mov xchg sbb xchg xlat lock (bad) aad scas fnstcw adc cmp dec lods icebp cmpsb xchg or mov gs lret add cli das xor outsb ds add pop dec clc push ret add inc icebp arpl jno dec push stos mov cmp mov repz cmp add stos ljmp inc ror or cmp daa out jnp add dec mov std outsb fs inc jae (bad) mov pushl ljmp ljmp jecxz dec or inc add jge mov aas sub cs ja jb push dec sar addr16 cmp cwtl mov out testb int3 hlt push inc dec xchg (bad) fidivrl sahf mov sub data16 xor sub stos nop jnp fldl push pop arpl ja adc sub mov dec sar cmc mov lds mov popf inc cmpsl les daa xchg pushf sahf imulb mov inc pop sub repz fsts add loope into push loope fcoms (bad) sub xor jle stos out mov jmp test lock and jmp das clc add and outsl or push fnop lcall inc setge loope bound xchg in mov repz inc scas adc (bad) xchg mov xor mov sti loop mov cmpsl stc xchg das sub (bad) sbb mov (bad) jb out jnp lods outsb movb push push xchg cmp mov cmp jo inc sub sti (bad) push popf adc cmp data16 dec pop scas and in mov rcrl mov (bad) fst xchg xchg sub leave sar pop out sub and stos (bad) fisubr or leave jle xor scas sub sub jl jmp or (bad) mov bnd iret out das mov (bad) mov sub test and xor fbstp clc pop lock loop add xor dec add push pushf ljmp sbb jp sub aam dec or mov sbb aas push outsl loop xor in inc or pop cmp cld ficoml icebp test ja mov mov mov mov ror dec inc push mov clts sub icebp pop sahf and pop sub clc fsts js shr pusha adc add add mov mov ret fbld pop sub (bad) jle sbb stos fcomps lret add bnd and lock pop mov mov rol fld and dec sbb inc cmpsb jo xor sbb cmp dec cmc xlat sub jle sbb test jns inc dec push sub iret dec lret mov cmp repnz pop push sub add popf xor in flds jp mov sti or ret lret xchg mov xlat ljmp das ret mov ret loopne adc (bad) sub cmp ljmp add pusha jecxz add fdivrl or sub add or mov and sub movsl jne mov outsl xor clc cmc adc mov out notb mov das cld pop movsl pushl pop cltd pop (bad) jg jae jmp sub jg mov sub mov enter inc xor (bad) lret enter out mov xchg lods imul dec sar mov repnz ljmp and rol scas in jle add push (bad) icebp xchg cmp adc (bad) sub push insb add mov inc test test scas push jae mov (bad) dec in mov (bad) fdiv js mov pop mov fcomps fstpt rcrl popa and pop fld dec ja (bad) mov (bad) lods leave ljmp mov sub mov sbb add int stc jmp pop mov or sbb iret sub push or xor push adc mov inc add mull or clc pop pushf xchg mov ds insl test sub cmp xchg (bad) mov push fcompl in outsl pop out addr16 jg add bound sbb lret aas dec mov daa (bad) sbb sbb les push scas xor les dec or mov push jns add aad (bad) sub lea cwtl lods xor imulb test sbb jp add mov mov pop xor ficompl dec int3 outsl dec fstps inc mov xor lahf pop jnp out mov mov xor mov sub mov xor cmp dec jne jmp in cmc in cmpsb push cmpsl ja ja inc or cmc outsb (bad) pop aas (bad) cmp jg xchg adc loope insb mov or rolb xor adc sub outsb int3 xchg cld int3 pop push add les jl push clc sub dec xor mov adc dec sbb cmp lods xor xor cmp xor jg imul add movsl call enter mov iret dec pop xchg jns xor clc mulb fnsetpm(287 (bad) xchg mulb jb rcrl sub ror adc mov push xlat mov add dec mov sub adc dec sbb (bad) push mov mov lahf dec outsb cld inc mov mov incl jbe xorl icebp sub pop scas jno mov es adc pop add (bad) xor fistp jmp jns add in idivl call lahf fdivrl xchg inc shl xchg mov popf ficom lcall xor adc ficompl cwtl push clc icebp popa jg adc or xchg mov sbb mov dec cltd sahf insb fcoml lahf mov (bad) xchg inc dec and test add aad xor les push scas cltd fildll xor in lret mov test mov xor xchg push inc push and lcall in mov das adc lret xor and lods push aam dec mov test mov clc repz push insb outsl mov xor inc mov jmp (bad) cmp xchg (bad) rcll cmp add sub add fidiv addb mov rolb pushf pop bound fcos repz mov in jne rorl pusha jbe and negl loop inc xchg mov dec pop mov ljmp ret xor ret xchg and add dec sbb lock mov jge push add mov pop (bad) xchg lret xchg pop or in int3 sarb xchg mov incl idivl mov xor ret movsl lock dec add and mov adc out mov and jne (bad) xor mov movsb cmp mov outsb insb (bad) jp xchg mov fdivp sub stos sub and scas sub out jg aaa sub sub push mov mov test mov lret sar inc push mov cmp gs xchg mov repz ljmp (bad) cmpsb push dec test bnd pop pop jb push jbe jmp fidiv sbb in out or icebp sub inc (bad) pop cmp insl ret pop xorb xor outsl imul mov test push scas cmpsb std daa mov mov pop jmp sub out stc sub mov (bad) pop xchg sub and xor js cwtl xchg out js mov rcrl lods mov sti lea icebp push imul movb xor pop fildl pusha xor in out call jp add lds repz adc mov stc into sub mov movsb rol mov jmp insl add xlat sub mov test sub push add mov aaa mov imul outsb mov leave ds inc cmp mov inc jecxz cmp xor (bad) mov nop mov add shrl mov int nop call jno cmp add rcrl push inc or xor (bad) or enter pop sub cli sub aaa cmp icebp mov mov inc les lock imul (bad) inc inc mov sub add xchg mov cmp add and ja fcompl andl add jmp in inc mov push fadds lock push mov pop push xchg das sub or pop push loopne (bad) xor xchg fbstp sbb lcall adc add push and cmp dec adc xchg xchg mov cmp lea jl jae emms negb cli jp cs ret fmulp imul movsl cli jmp out insl dec out call jg fidivl (bad) sub pop xchg and outsl sub ljmp (bad) or xchg ja xchg cwtl fisttpl hlt daa sbb jno dec roll xchg adc popf mov push (bad) ja jo cmpb in aaa lret mov test mov jae inc xchg xchg (bad) stos fldcw flds sub push jl pop add or sub fldl xchg inc repnz mov into add sub mov push shl imulb (bad) aaa mov ljmp stos call out sub add sub cld or push mov add lods xchg inc test dec ror xchg jno dec jns test dec pop mov pop lds push inc scas ret mov add mov mov aas aas and repz mov repz leave xor sub jbe imul jl jno mov jg out push loopne xor in popa notb pop ds decb sbb sti inc mov sbb add or push inc push aad push add cmp adc adc push mov lret divb sbbl ja mov sub mov ja pop movsb add mov jg sbb (bad) mov xor test jp pop daa out pop in sbb xchg jmp and mov cld bound imul insb cmp mov push mov dec inc cltd cmp sbb movb push xor xlat icebp shrb sub (bad) rcll cli mov sub adc lahf icebp (bad) imul pop mov neg pop cmp xchg fcmovu dec je cli mov adc ret cmp stc lret movsl push (bad) xchg adc dec out pop es je scas fsts hlt add mov frstor sbb pop popf into int3 sub ja push rorl fisub ds xor xor jecxz pushf jne inc iret sbb nop int dec adc xlat xor xlat push sub insb pushf nop fs sub dec sti (bad) popf lret push decb (bad) sub repz mov bound push addr16 mov pop ljmp sub das in test mov lds int3 mov xor xor sbb leave fisttpl ja xor push jmp adc add sub insb (bad) push out mov xchg les fs mov xor shll (bad) mov stos repnz cmpsb or cltd loope jmp xor stos add sarl aaa pop loope cmpsl dec sbb mov or dec leave mov push mov icebp jmp and add lcall xchg xor jnp test jl fsub sbb pop pop mov jmp outsb int jmp (bad) mov dec xorl xor (bad) mov and push pop ss insb (bad) testb mov or shll int3 fstl pop jne ljmp enter jge jae ljmp mov push shll daa push addr16 push push movsl sti jg movsl movb sub xchg jbe sub divl and fildll pop jge movsl dec xor lret in enter push out dec mov mov out out inc sub lock out daa jg xor fidivrl push and fstps xchg cmpsl pop insl push adc sub xor mov sub pop pop stc pop notl and add addr16 aad xchg std cwtl clc out xchg insl aaa add notl or mov mov cmpsb subl lods sub push out and mov lret scas (bad) cmp mov out xlat push (bad) idivb jg dec jns mov xor stc cmpsl jne mov mov ficom sub cld das stos cmp jae and add repz push ret aam pop sub aad andl repnz jle (bad) mov sub push negl lahf add pop (bad) pop fadds pop add push inc and data16 mov cs adc jmp mov jo sbb jl cmp pop insb adc lret addr16 fisttpll mov cld sub xchg ja xor mov movsl cmp adc xor xchg pop and ja xor add sub xlat xor loop aad jbe out stos js push loope xor loopne (bad) xchg inc dec or js dec aaa scas sahf add add cmp sub aas pop test cmpsl pop aad mov push dec sti aaa lods in stc pop xlat (bad) aam fist or out int inc sub pop (bad) push test inc pop decb or pop xchg and fsubs (bad) sti jne push pop cmc add pop and jmp inc jnp mov mov out in mov mov jmp not mov or scas mov pop xor lea cld outsb pop adc mov ds or leave and xor mov stc sub mov (bad) cmp es hlt out sub (bad) nop adc push and mov and mov jge jmp data16 adc add (bad) femms insl add mov jnp xor call pop (bad) ss mov mov imul xchg mov and mov jp adc adc out xchg dec mov pop push icebp out and fisubrl loope out sbb imul test sbb mov and jmp jmp (bad) je mov or xor mov pop fbstp sub pop or ljmp mov in test dec xchg mov cwtl lahf out add mov pop mov dec adc mull into into dec aam ljmp jge int sub jp xchg mov roll data16 data16 pop stc outsl ficompl jb cmp mov dec out jb and ficomp sbb ljmp call add insb fdivs sti loop xlat call pop jecxz and ret mov and jbe nop daa in enter add mov dec repnz cmpsb cli js je bound xlat pop xor daa dec ja je loopne lahf imul fldt int outsb sahf jmp iret pop xchg ret scas popf popa jg jo repnz mov add inc jae push add loopne and pop roll int3 and jl inc clc sub sub popf lods xor add in dec xchg inc push pop shrl sub sub fbld dec jmp and inc imul cwtl imul xor sbb dec loope iret fld es mov les jmp stos int xchg out repz xor idivb iret test (bad) imulb iret sub negl sbb and mov xchg push push push add sti mov mov pop fisttpll jae sub mov test mov cltd or movb and jmp push adc inc sahf cmp xor mov ss cwtl cs pop push leave testl inc jle dec fucom xchg cmpsl ja dec jne clc cwtl sbb (bad) mov cmp sub pop cli iret sub lock cs pminsw inc out sub daa out add in out mov inc and sub sub pop scas jne out pop stos cmp mov int3 mov (bad) adc dec inc add mov lods (bad) das jge jge bnd and mov imul rorl sub cli enter push or ja jns adc jbe xor test arpl and mov sub and int3 mov or clc pop adc sub js and loope sub mov or icebp (bad) jp mov (bad) and xor bound cmp pop lods dec sar push xchg pop pop and cmc sbb dec mov jle (bad) (bad) add les aam mov (bad) gs push std xlat (bad) push fstps cs sbb mov mov dec dec arpl jmp mov jno cs sub and jge mov mov fbld stc push or mov sub das mov int3 orl push pop jge mov into pop push pop lcall clc (bad) aad (bad) mov mov push fcomps mov jg,pt add out fstps out push add lret pop push mov sti jnp mov sub push or mov mov scas add sbb fldz jp push sbb jo mov pop mov pop out xchg roll loope int shr and push sub (bad) xor in or xchg push stos add aas out xor mov nop mov pop pop add fistp push push pop inc into sub xor push jle pop test and das jbe xchg add outsl sub xor jae pop sar popf add xlat pushl lret or mov mov mov xor in adc push cmp aas (bad) mov and jg aad mov loope ljmp jle inc mov sub sbb jns hlt add movsl push add mov jle push shr xchg (bad) not xor add jo lods dec push and pop sub out cmp pop rcl xchg xchg outsb mov xchg and mov scas or and jmp pop push pop push cwtl repz lods dec dec pop xlat test dec cmpsl clc sbb adc ss stos adc pushf das (bad) cmc adc xchg adc xorl mov or push ret sub and ljmp dec xor out xchg out in mov lds mov call leave mov (bad) mov jp sbb mov xchg out xchg xor je out repnz mov push iret mov bound or scas dec adc (bad) dec cmp push scas mov inc and rcll jl movsb mov xchg mov or divb scas xchg sub in push inc and mov add test lret or or (bad) add xor bound aas imul dec repz je mov lret icebp jmp daa stc inc cmp sti ret inc sbb mov outsl mov orl push and repnz mov jge (bad) or and xor test jg leave test mov ffree outsl cmpsl xchg daa iret jne aas and gs sti sub inc aad fldl push out sub movsb mov (bad) push xor push xor mov (bad) popa or mov mov lahf fmull enter pmullw pusha lods mov fisttp jp cmp je add ret xor jmp jecxz jge add jne dec pop out cmp fidivr or and and push ljmp mov sti cs movsb sub (bad) pop xchg out and add pop push clc movsb stos xchg imul add jmp adc adc out jns dec fidivr and add lock out or mov data16 add out inc add add and add int3 ljmp mov mov jecxz in out xor xor sbb rcl loop fninit xor adc push (bad) push push pop jne (bad) gs add ljmp mov xor cmp mov adc adc dec mov jne or scas mov out pop xchg pop icebp add mov xor and cmp mov and or fildll push cld shlb mov mov mov repz pop add pop xchg inc leave cmc (bad) xor jge push sbb jne mov push sub push add lods scas sbb idivl and push inc push subl mov lods add pop add mov push sub or (bad) inc pop sub aas pop mov xchg xchg adc sub xchg bound std adc xchg or add mov sbb add push cmp xor nop (bad) movsl fsubr add add jl dec pop loopne ljmp pop out mov inc and (bad) pop inc in ljmp pop push or or sub sub imul adc pop cltd fsubrs push jge enter jns shrl push pop sbb xor mov cltd iret xchg and test mov inc ss scas stc ss or push (bad) push add outsb or sub cmpsl jg and adc ss jno or sub insb inc lret add add jmp scas in mov pusha and je adc std mov or in sahf aas cmc (bad) mov jno push sub test pop sub je stc dec xchg cmpsl xchg pop cld xor sahf pop sti add sub xlat adc xchg pop cmp dec adc mov dec stos pushf iret mov stos cmpsb pop dec scas and inc pop (bad) jno mov lahf push leave ret jmp sub sub (bad) cli insl call out inc jbe fs mov and lods sub mov loope mov push repz shll sbb mov and and aad mov pop add or or lret stc out sbb lods jnp scas insb imul add inc daa in scas jle iret lret mov xchg dec ja pop add cmp lret leave sub pop in pop das mov dec negb cmp mov (bad) mov inc push or pop loop divl scas adc sbb xchg bound leave sbb ret das paddd mov jne mov adc mov in idivl in je mov jmp shrl dec cwtl mov je mov ret out add mov mov mov jnp outsb xchg xor xchg jmp cmp mov mov dec cmp cmp xor push push pop rorb ret pop pop test and (bad) lock xchg in das jo popf mov jne dec movsl push in mov ljmp pushf and xchg mov in sbb outsb inc push ljmp jno out or frstor add cmp mov ffreep pop pop fldcw adc imulb xor mov into sti push or (bad) fistpll mov aad xor mov sub dec out pop add push or imul (bad) mov out jmp clc js (bad) in ficom imulb lods pushf mov mov roll testl xchg xor test dec or or test aam iret mov ljmp repnz rcrb clc aam pop in das xlat out and push jecxz (bad) fildll jne fiadd ret sbb ljmp mov jmp pop sbb fidivr rcr cmp idiv mov icebp mov xchg cmp dec sub inc icebp xor mov mov imul mov cld dec into stos mov dec lds fmulp std cmp and out (bad) mov add cmp pop sbb popf rcll icebp jmp imul aad daa push or mov insb fisubl mov bound mov je inc sub sbb into jecxz (bad) cmp fstl or iret pop add out (bad) jns inc mov lret ret sub adc jecxz push fildl cltd (bad) cli das mov jp pop lret in xor push scas xchg lret dec jecxz push aas mov add or pop das mov scas pushf aaa lock mov (bad) into or (bad) ljmp push popa fcoml data16 rcll pop mov imul xor dec sub stos (bad) push jnp and test leave icebp outsb sub cmpsl pop ret fs loope jp lret test pop pushf adc push mov jns and lods dec movsl into ljmp js stos (bad) enter xor add std push out mov pop ret loop bound jmp push out fstps inc andl xchg push pop mov dec cmp stos divl cli sub xchg cmove mov test jbe add dec and cli negl subb sub pop lock jno cmp outsb sub sub fidiv adc and and inc pop sbb cwtl (bad) and cld (bad) popf fdivrl enter popa or ljmp lahf gs flds mov int fildll xlat push pop lods int add imul mov sub mov (bad) push rclb fnstenv fwait dec daa fs push in or (bad) fbstp outsl sub add or enter int or fcom push pop xchg sti fcomps gs ljmp xchg mov mov (bad) lret mov enter lret add adc stos jae xor sti sahf fimull and std cmp mov test sti sub cli testl mov imul or neg xor fs and inc adc aaa scas out adc or sub jne sub leave sub and dec pop mov shrb lds daa enter mov sub inc and push dec out test movsl xor sbb dec repz call cmp rolb setne cmpsl adc or aad mov xchg mov leave testl xchg data16 add push mov xchg movsl insb or push jmp xchg in cmp pushf add ljmp or jg (bad) gs ja insb jb data16 xchg dec test sbb rcll loop stc inc inc jmp jle enter das imull addr16 sub cltd leave (bad) divb cmpsl add lahf sbb fildll and cmpsl vcvtdq2pd inc (bad) cli (bad) lret pop mov outsb mov mov insl (bad) mov add jnp sbb pop or xchg dec mov xchg mov dec test push (bad) popf jns pusha add sub movsb and mov (bad) sub add call fimul pop test mov mov les sbb push out dec xchg pop testb push or idiv repnz sub out call test outsb adc clc fs loop sar mov lret ds jb mov xlat gs cmpsb lahf or xchg icebp (bad) aad icebp sbb mov cld and lret push xor lahf pop mov pop jne sbb leave or icebp ja daa das add or sbb jo sti mov adc xor int das mov repz cli sarl and jecxz or adc mov test cld mov fisttpll cs popa (bad) lods arpl pop and mov dec ljmp lds cmp jecxz xchg and sbb stc and cwtl or jae dec call icebp fbstp dec mov xchg repnz dec xor sub xchg mov and adc (bad) das ficomp fadd xor fcoms popf sub jl into ret pop push adc add xor scas adc popa inc sub jnp xchg jp mov lret (bad) repnz clc pop popf jp aaa jmp inc lahf decb dec out jns hlt lret dec jbe xor out mov ret icebp bound cmpsb sbb sub mov mov les in inc xchg lods (bad) jmp or cwtl scas rcll pop sub test mov cmp or lcall mov dec and out fs jecxz xchg test mov xor add xchg lods into out mov sar fisttpl std shll dec out andl push jecxz pop inc pusha mov jecxz lret adc insb loope fstpt push test jmp pusha pop xchg test movsl pusha push cmpsl dec mov into push push cmp sbb push mov sub popfw dec sbb cs pop je das in and dec (bad) sub or adc add (bad) add pop cmpsl jmp dec idivb leave loop test incb addb or jb arpl fldenv into sti mov xchg sti int je add mov (bad) imulb cli xor jp fsts es sahf adc pop mov dec call add pusha xor popa divl stc ljmp cmc xchg pop xchg ret es mov scas pop fcoms popf pop xchg iret xchg push sbb xchg scas out mov adc lret pop sbb clc or cmpb js mov pop loopne cmp clc in call (bad) mov xor mov stos and mov jae xor roll and and pop bnd push inc xor mov pop shr add pop mov mov xor cmp jg lods sub add jns inc xor jne jecxz ret gs lods data16 inc repnz mov les shl dec add je and mov push push pop dec push fwait ss xor ds icebp mov imul and shr test addr16 lock ret lret jo pop (bad) adc arpl (bad) cltd fwait shlb sub ljmp mov adc pop inc lret xor jmp sbb fnstenv pop lock pop icebp enter mov pop and dec and loop cld mov add mov xchg push jno dec sub push rcrl lods int fmulp sarl (bad) stos test ret in addl out xchg push sub xor ja xor mov out ret ja std das negb ret out adc xor aad ds and lret add push ja add int3 adc jno mov in lock add decl fdivrp les or bound pop cmpsl (bad) int3 dec mov sub xlat ret je in sbb (bad) bound jle fs push cltd scas fcompl or adc clc mov add test mov jge adc (bad) mov das mov xchg mov aam and cs and pop mov rcll aas xor out sub incb mov stos sub push lcall cmpsb in push rolb sbb dec or (bad) dec dec jmp dec xor xor (bad) fistl cmp sub mov pop sub mov and xor add (bad) aad jmp daa repz jl imul fdivs cltd add fidivr sub sub sti (bad) xchg out mov sarb daa and pop sahf leave inc mov sub xor mov fidivr push (bad) or dec pop push mov pop lret inc ds rcrb xlat sbb inc addl das inc sub xchg push (bad) lret es mov adc dec out lods xchg mov inc out mov fdivrl push loop lret jo cld or mov negl and out pop insb (bad) dec lret cmp pop push xchg lahf fcoms out mov movsl push lds lods sbb and pop (bad) sbb jo js pop (bad) mov mov sarl fcomi pop lcall scas jbe inc push cli negb or out dec pushl gs mov lret jbe fs (bad) loop test push and sub dec lret mov ss pop call aad lahf (bad) xor (bad) fsubs jecxz push mov xor stc popf (bad) jl push add clc int sub bnd leave add mov xchg xchg mov insb and pop (bad) sti push lock pop mov fdivrl sub movl push dec popf out into les xor pop xchg xor xchg or rcll (bad) out push adc mov push in dec mov repnz mov mov xor lcall orl or and lods gs add lret pop push das leave (bad) mov and dec and into mov lret sub inc adc add sub cwtl fisttpl mov in mov jnp pop (bad) int sub add xchg scas mov (bad) sarl and jg sub lods insl mov daa das je fsts dec sti mov or pop sub pop inc jbe xchg dec sbb pop mov mov test mov stc pop lods mov or cs sub in je xor inc and repnz mov daa out repnz pop in addl and and pop and dec add jecxz (bad) mov aas or cmp or lds mov mov fcomi and outsl mov hlt addr16 fstl or mov mov cld and xor clc ret mov push loop pop out fstpt dec cmpsl push cmp mov (bad) xor jae scas les xchg push add in ret nop and adc (bad) xor push cmp and (bad) daa in ljmp xchg dec jp subl xchg xor mov call out (bad) fcmove ja hlt leave dec out jle es add outsl loop rcrb sub and out dec or (bad) ds pushf or ljmp (bad) popa mov fwait mov scas sub sar sub xchg (bad) outsl pop mov mov sub ss scas push shr lret xor or mov or lahf add inc pop outsb repnz or mov andl or loop xor movsl cld jmp lcall scas xchg ljmp aad shll lds movzwl mov cli out fucomp jp cmp pop leave mov adc sbbb add lds push fiaddl sub add dec mov test (bad) or dec and stos fnstcw fsubrs pop mov ds jl rcr leave push test sbb fs or sub dec cmp xchg stos lret mov add pop mov sub (bad) push (bad) fistl dec or jmp adc add mov add sti cltd jecxz stos cmp mov inc or xchg loopne lret sbb or lods xchg iret repnz decb inc jg cmp mov lret xor jmp adc in pop aaa mov dec imul xchg int3 orl xchg lods scas (bad) sub ss fstl inc fs ljmp or enter aad mov mov das lret and clc and pop rorl out lahf (bad) jae jmp imul xchg pop dec loope (bad) jle movsl (bad) fs sub es dec and dec dec aam test add mov daa call out sub rolb repz jl lock fstps jnp (bad) cs bound adc add pop mov inc es add call or jmp gs test mov push sub bnd sub cmp push xchg shrb push add repz decl dec mulb test adc idivb outsl loop cs cmpsl adc mov sub jb popf in loope or mov vpsadbw adc pop movsb pop or rcrb mov push xor pop dec sub dec cli lret mov testl or mov push inc daa adc mov add pushl mov xchg cmp mov leave out mov sub push loope leave outsb clc repnz lds mov and adc (bad) (bad) or sbb cld ror int jp jb div mov sahf jmp (bad) add and shll clc push test cld cmp xor and (bad) daa pop cwtl pop loope push out cmp mov test into lods pop inc xchg pop mov xchg int3 cli fdiv lret or jnp add clc or mov jecxz lods cmpsl and adc cmp add or or pushf inc movsl inc sbb sbb xor ficom (bad) cmp xchg adc inc adc sub pop push icebp mov jg loopne pop pop sub sub adc incl rorb jne movsb push sbb sub inc in push or dec fistpll stos int3 xor push stc cli daa ficom mov dec fstl cmpsl xlat xchg inc mov je pop lcall lods in scas push adc inc add jl pop aam movsl je (bad) or add xor and jmp test and pop sarl std add sbb movsl hlt (bad) and or or add jmp lds les pop lret repnz loope mov arpl mov mov (bad) mov je adc mov dec popf push jo fcomp jns mov enter lret push aas fsqrt mov xorb pop lret hlt mov out xor mov ret repz pop jmp pop repnz and mov repnz jne sub pushf jl pop lret lds loopne stos cltd push lcall pop xchg lock push sbb mov leave or mov jmp daa cmp add mov fmuls xor ljmp pop mov pop cld test xchg push xchg lods (bad) mov in mov xchg cmp push or jne lret mov (bad) out mov aam loope iret lods jno xor scas xor sbb adc adc sub stos dec cltd imul or out dec add dec push dec mov and xor cld inc pop out cmp jmp cltd inc ficom mov cltd dec cli xlat lds pop mov enter push lahf push clc pushf mov repz fsts push iret xor adc mov mov lret rorl lret xor dec mov cmp sub bound fstpl les test (bad) ja xchg pop loop mov imul cmp adc adc lods or pop mov out cld cmp cli sub or cmp xchg sub pop mov jge dec imul mov enter lcall imul add sbb mov sbb xchg (bad) loop (bad) mov push and jge sbb mov or sbb sub sbb or ljmp jo test (bad) sub lock mov cmp ficomp mov sub add jl xchg add pop jns imul dec xor (bad) gs stos cmp cmp cmp mov pop xchg movsl ret push outsb push pop or and and xchg ret push aad ds std gs lods fs add lods push fist mov pop push stos and mov xchg loop ficom sahf lret adc shlb adc addb or adc lret pushf add lods cs xchg adc push pop leave xchg (bad) mov add pushl sti cmpsl jnp pop divl mov pop xchg clc and mov scas repz shrb out das (bad) mov cmpsb mov cmp xor int mov mov or sub push mov xchg or sti sub or xor stos flds pushl mov push xchg mov lds or jbe pop jmp lds std out and xchg push and jmp mov push xor pop je leave ja es mov imul leave lahf sub push mov mov in in jo or push cmc xchg fbstp aaa mov sbb inc xchg std or lods adc loop pop lods mov repnz cli or push sub inc xchg mov out into cmp shr cmpsl dec and (bad) std xchg imul out or jg cs xor int sub std jae mov stos sub sub cli cltd jecxz dec stos leave ss jo pop jmp sub lock or push mov inc push mov xchg or cltd inc pop lods icebp imul cmc das mov (bad) scas xor mov jo mov mov rcrb pop xchg cld push xchg jecxz add and add cmp or test mov xchg cmp inc and mov in enter mov pop stc in out mov scas int3 push out subb call repz xor or mov std lcall fstpl test dec ja arpl dec xchg mov cmp lods sub pushf lcall sub adc adc and jae and xchg xor jge xchg in sbb test add mov and ret imul jmp lods cwtl test adc nop jmp add xlat popf push mov (bad) fs xor popw sub inc adc out or mov addr16 jne lret and mov and pop jmp ja stos sbb loop ffreep mov nop sbb cmp mov cmp sub mov xor jmp mov mov iret loop adcb xchg mov sub sub lret data16 inc ror cld call (bad) jbe jg jae mov inc hlt outsb mov scas push dec out repz sub (bad) loopne sbb mov movsw pusha out and push xor out adc pop pushf sti out or cmp (bad) dec mov nop xor pop push daa jae aam pop mov pusha lret cmc inc in jne mov add ljmp sub daa xchg adc scas flds pop fsts lret xchg jae and lcall dec xchg fildl dec es xlat xchg (bad) or push outsb aad jnp push adc mull xchg sbb mov mov scas mov inc sub (bad) jb sub pushf insb fsubrl push push mov adc xor aam ffreep mov add add xor pop shll sbb and xor dec out jne jmp jle mov enter mov cmp cli pop sti not bound add insl push push fdiv lea (bad) shrb add push push mov mov pop (bad) std bound ds mov dec cmpsb lods leave fist adc fs sub dec mov add mov std push cmp rol mov icebp cmpsb hlt pop pop adc jmp ja enter dec sti mov js fbstp sub fstl movl xor sbb imul cmc jl fnop int3 cmpsb push pop xor sbb pop or and out nop pushl movsl cld es iret mov fsubs mov jb adc jo cmp out mov pop loop (bad) mov sbb xor shr int imul imulb jge ret cmp lods xchg scas daa out sub loopne and clc push dec into dec pop das out je ds cmp js or repnz idivb xchg jmp fnsave sub and fmull xchg into jne cmp cltd add ret push add test xchg inc int mov (bad) arpl or jecxz ja or ret ljmp int3 pop mov aaa mov out xor insl adc dec xor sub out daa push dec aaa shlb aad divb adc pushf add push (bad) or adc pop clc lret push inc sbb mov test push mov add mov out (bad) out test sarl add mov xor pop or ds and xchg inc xchg (bad) cmp push pusha scas testb and sub jbe dec pop lret and jno ss xor fldenv xchg pop pop mov and jge adc mov out test xor bound rclb (bad) lret inc add pop mov mov sbb mov add arpl pop bnd or (bad) and cmp into aas (bad) je add mov repz sub jmp mov sbb pop ds pop sbb inc imul mov ret dec push dec (bad) subl xchg xlat xor adc mov inc sub xchg dec scas (bad) dec add loop mov pop pop inc popa and enter mov daa xor data16 xor dec add mov fs lahf pop in jp sti insb daa xchg cmp sub popf outsl in and (bad) lock and jne pmulhw aad fbstp push in clc jbe test leave lods stc push dec leave dec stc sub add cli cmp push (bad) lock mov push add add mov ds sbb mov mov hlt pop xchg sarb adc icebp popa pop jmp enter aaa xor mov fisubl repnz lea sub fldt lret and sbb xor popf insl jae sub xchg mov lret mov sub jns flds dec sbb jne mov fwait dec push pop add add stos sbb mov jl push aam das stc (bad) or xchg inc xchg or data16 (bad) decl jmp ret xchg in cmp in (bad) push sarl add call lahf dec out pop (bad) xor sti jl leave fcomp xorb cltd adc sub push push loopne push mov or mov out and (bad) ss dec cs out push mov jg ficompl shrb (bad) inc sti push mov shrl repnz push push mov test xor xor or add add call sub cmp cs jmp outsb mov fdivl icebp decl add jecxz dec incb (bad) and std adc and or rclb stos jno sub in sub xchg pop not add bound add stos jg pop lods (bad) jbe or and pop push test add mov jae or loop mov ja sub addl fcoms pop add addl mov clc notl insb dec pushf push push xchg sub (bad) adcb lods lcall and int out daa inc xchg push add pop dec xchg push push movsb xor cmp pop or inc dec mov xlat (bad) aad inc (bad) xor pop xor push xchg or (bad) int add pop shr shrl jnp enter pushf les sub or mov or pop sub dec aam pusha pop (bad) xchg or scas sub mov push and adc popa cs popf nopl inc sub push out lods sbb flds sub into lock dec jne or (bad) jb push repz imul or add icebp push inc gs hlt mov push scas mov push add pop cmpsb push shlb or in adc pop adc fisubr aad jmp icebp aam imul and push jl popf adc sbb cmpsl add xchg mov and and mov jge jns mov xor out adc in lock dec lcall jecxz or mov icebp lret inc ret mov je jmp aaa fisubrl fcomi sub clc mov enter cmp sub fs (bad) push or int3 and (bad) cmp adc mov cmpsl xlat dec mov movb fdivs or shll jmp fnstenv je imul bound fsts push ror jns dec rcrl pop in imul popf scas mov es decl sub mov (bad) fs pop mov xor and mov fstps sbb repnz dec mov adcb negb mov (bad) cli mov sub or pushl lods testb jns das sub add clc ds je (bad) rsqrtps add ret js ret lock mov xor leave xchg sub cltd sarl mov (bad) xchg push push and cmp inc mov xchg push imul push push das mov test fimul xlat aas dec dec or xchg sub lds into movsb mov stos adc mov sub call xor scas cmp mov xchg mov clc lcall pop shr gs leave mov jg cmpsl shrl cmpsl mov sti test fadds jmp sub xor stos cmp sbb sub aam push out cmp fidivl pop decb mov adc cli idiv xchg les pop dec stos xor mov push aad out out fnstenv sub sbb loop xchg ja jl ja adc and gs cs sub xor scas dec ds loope and push (bad) sub stos (bad) sti pop jnp inc xor add pop add mov mov mov pop push xlat mov into add and pop jecxz push or daa xlat sbb jae mov rcl outsl or pop into mov xor add mov jae pop (bad) cmpsb shrb lods das movsl out push mov scas sub sub popf std mov pop dec pop lret cli lea aad cmp jmp sbb push jmp cltd shrl mov loop bound aad pop jne and mov stos xchg nop mov push xchg stos enter decl adc jbe mulb fwait add xor xchg shr sub mov dec in xlat pop xchg mov lea mov mov enter push jg sbb sub mov (bad) daa or add push xor xor jne imul loopne xchg repz out sub mov (bad) fistpll dec mov pop pop xlat (bad) loop (bad) (bad) xor and aam jb int jae enter or icebp lret bound lods gs pop lret insl jl pop mov lahf pop (bad) out or xor pop cmp or loope leave notl (bad) repz pop scas (bad) jmp movsl pop sub stos xor aad stos xor stos (bad) sub stc add add push sub repz lods fsts add dec hlt test cltd clc and mov sub pop out pop jecxz dec sub sbb mov push dec test rcll pop add mov or mov mov cs cwtl xor and sbb repnz cmp lret call push gs jne wbinvd negl jg jne xor sub insb sarb out pop gs pop ret mov jno scas mov and daa out je (bad) idiv les sti (bad) or popa adc jbe call out andl mov enter popf dec movsb pop adc pop xchg notb icebp pushf jo enter les (bad) fs jno push pop loope sub sub rcrb jnp cld outsl fs xor xor movsl lock sbb call jns cmpsl loope enter fisubl fidiv insb pop pop fdivrs lret mov mov push pushf dec xor lahf xchg negl call sub sbb cltd test jle (bad) out lahf cwtl mov aad (bad) adc mov (bad) push addb jb into ja mov mov xor aad xor dec adc outsl pop and mov sbb adc or xchg jmp ret pop inc idiv mov loope mov test les and pop cwtl xchg mov aaa movsl sub mov sub mov (bad) sahf leave les pushf and loop lahf adc mov rcll ret sbb sbb repz inc inc cmp popf cld (bad) popa ljmp jmp xchg scas popf push std popl jmp imul sub jae pop xor ret (bad) stc xor and and rcrb xchg xor sub and ret (bad) (bad) mov jp cld test (bad) mov and daa mov push aas add pop imul pop test insl push ror jmp notb adc (bad) ljmp pop add into jmp xor pop daa inc sbb enter push ret sarb sub ds daa lret lods push push xchg pusha cmpsb psrlq xor lds lods jnp jbe loope out inc test outsb mov dec xor std xor sbb sbbl pop xor mov (bad) jp fs jb xor aam mov stos loop insl movsb mov fstpt and int cmpsl dec pop insb ret dec push leave adc arpl xor xchg sarb bound cltd call inc inc cmp (bad) mov jp mov xor fidiv sub leave or xor sub pop add add (bad) jae repz mov lods xchg mov jns adc jmp (bad) fdiv scas xor lahf idivb cmp out add pop pop ret push inc xor push pop add repz call mov pop mov sbb outsl test frstor cmp cmp sub push les pop iret jbe sub out test sub add sub jb push decb add add lods jns adc les xorb push and or add out xchg fnsave loopne jp pop mov orl inc lock push xor ss sub cld push gs mov sbb ds or (bad) sub ljmp cmp sub js mov sub in pop jp scas push pop push or jnp movsl repnz xchg adc rcr lret xor xor mov into movsb xchg pop dec xchg in and rorl sub js xchg mov pop lds fistpll inc add push shll or sub ret sbb sub popf int3 in xchg pop cmpsl outsl mov inc adc xchg push mov leave and nop clc sub dec loope lret mov xor adc jne shrl jns movsl jo mov imul mov addr16 xor add pop push mov dec push repnz daa cmp jmp dec out adc or call adc sub adc mov mov stc cmp mov xchg pop mov insl inc mov sbb mov sub aam lods jae xchg icebp mov dec pop inc and ret cli lahf xor pop mov ret cmp xchg addr16 dec dec xchg mov ja jnp into loop xchg pusha dec ljmp ret in xchg jnp and push pop jo in xor jmp mov xchg add dec stc stc into mov dec clc push pop push ljmp xchg data16 jmp mov or jl adc out int cs cmp inc jmp sar adc negl sti loop (bad) negl leave jmp dec mul add inc mov xchg sub arpl jne aaa enter (bad) or push dec loop jmp clc std int3 ja lock cmpsb repnz ljmp negb mov jae pop or jbe (bad) arpl and xor es sub inc sub mov xchg adc aas sub fdivr fstps scas mov (bad) adc mov adc fstpt test clc push fstl sti out repz sub sub roll negl inc or lcall notl or add xor loop gs mov decb (bad) add sub pop push mov movsb push pop xor jbe or adc imull cs mov mov lret jo sti int3 push or stos cmpsb or lods inc nop jns dec jmp vcmple_oqps lret std inc or ret adc jb stc sub stos sub cs sub test jmp push mov cmp ret mov xchg scas dec movsl dec cltd or xor stos in push inc gs pop push andl xor xor sti movsl xchg dec dec aaa (bad) mov and mov sub rorb add and fldpi addr16 insl popf inc mov (bad) pop insb cmpsb mov call add out mov aad jne (bad) mov lea jl jnp adc mov sarl (bad) repz into rcrl cli sub les or popf cmp scas sub sbb test sbb icebp (bad) cmp or xor ja inc cli repz mov ds lret pop sub cmpsb jb or aaa adc add clc shll ss dec (bad) sub lds pop (bad) aad sti lcall sbbl pop xchg fcmovbe mov ds (bad) xchg incb xchg and inc pop jne adc popf ljmp ds push dec push sub (bad) fstps call jnp jne std cmp ret pop xor (bad) ficom and stos (bad) sti movsl mov int3 mov fimull lods dec out fbld clc (bad) ljmp sbb ret pop pop mov add cwtl mov push and or add sub and mov and push push lcall push add rcrl es pop rcrb fcomps idivb loopne push cmp inc adc adc inc mov jmp cmp and fwait xchg movsl ret jl pop push sbb pop lret sbbb (bad) mov ljmp or jne dec outsb mov idiv lret in sub pop mov gs push out sub xchg (bad) push or push decb je jo negl int3 pop push movsb shlb jb lock push or sub je pop pop jle lds xchg nop add fidivr fildll lahf add lahf or push adc mov in mulb fwait (bad) cmc out lret fldt (bad) rclb sub or jge sub scas cltd inc inc push iret pop pop cli jmp dec jb stos daa (bad) add mov data16 xor pop add xorl aad jbe imul (bad) xor or sub andl ljmp dec mov pop test mov test add sub sub jecxz pop lret or add sti fbld cli jmp push in mov in adc test out dec cli pushf adc dec cltd mov push sub mov aas aad dec lahf (bad) (bad) fimul adc mov jmp mov pushf call out fnstcw fcmovu mov fidivl das mov add mov push sub decl ljmp mov push push add aam mov inc (bad) jbe mov dec icebp sarb lods icebp movsb mov fistl mul mov dec pop xor rcrb (bad) jo iret mov lahf cs sub scas hlt mov add xchg roll sub test sub sub mov fisttp lods jno xchg ret xor sub leave popa lods or jne int sub pop mov daa (bad) cmp les push jmp int push (bad) jo mov ret (bad) popa shll jl jmp dec mov jl roll shrb dec (bad) mov sbb popf outsb ficoml and xor les pop dec sti dec hlt mov shrl aaa popl in les call jecxz and or inc mov xor pop sahf imul jmp mov psubd sbb repz dec mov ret or jmp ret pop push or or rol sub add in fstps xchg repz dec mov sub mov stos (bad) or or xor fbld enter mov sub and push jecxz adc clc add or movsl xchg incb jnp shr fldenv xor scas sub scas sub cs dec ja in or jle idivl and adc or jp loopne loop les test (bad) xor and inc xchg orl adc inc cmp ljmp jmp jae cmp add or dec mov xchg aas popf inc fcoms out mov imulb and inc and inc pop test cmp negl add xor loop shr adc lcall aas pop daa dec js sbb cmp repz mov mov sub or push lret and mov adc xor (bad) mov pop dec sar mov cld fsubl mov mulb (bad) or jns imul cmpsb iret mov sub jmp jns ret in jb (bad) dec cmp xor add and ljmp pop shll fistp push mov sub out stos sub dec and enter (bad) mov sub lcall lods mov je fbld pop adc stc in sub jmp (bad) xor cmc lcall mulb mov gs pop insb push dec sti clc ret push and out mov popf pushf into adc leave and push stc jg inc rolb ds repnz in jge fcoml jb cltd faddl pop sarl sub jle std outsl mov dec imull mov adc add push lea popf cmp sbb adc dec out lret sub lods sbb xchg mov and flds (bad) ds daa repz add into jne int3 pop loop je push jmp daa dec loope daa cmp push ror mov aas jecxz pop mov xorb xchg test in adc xlat gs xchg xor mov dec mov pop (bad) xor clc clc movsb aam mov (bad) int3 (bad) and outsl aaa cmp js jp addr16 mov xor scas mov pop lcall lcall rolb adc sub pop cmp (bad) sub jp push (bad) stos cltd cmpsl push xor sti dec leave pop ljmp or dec loope pop movsb adc lret push fcoms mov call add inc fistl mov imul rclb jmp pusha ret jle sbb mov xor mov xor pop fs mul lods xchg fs jmp enter sub mov stc xchg dec push xchg dec jmp xchg stos lock xchg mov and icebp push aad add dec loop mov out jge add add xchg push lds mov pop sub adc push ret add fnsave sub mov and push in fdivs mov push (bad) lea js ret pop pop ja jmp jg mov lret push sub ret cmp cmp cmpsl call pop test sub dec inc pushf push (bad) leave push (bad) sahf cs sub pushf (bad) push inc or dec mov sbb shrb dec daa adc xor enter push fs pop dec mov pop (bad) inc ljmp xor dec xlat push arpl add add sub pushf aam imul mov imulb in cmpsl sub pop out adc ljmp inc pop or stos add into stos aam cwtl ljmp mov dec lret xchg ljmp or addr16 or xor enter mov hlt lock pop mov or add ret fisttpll or adc jmp loop pop repnz mov and je pop (bad) mov fidivl xchg adc hlt adc pop cmp leave daa mov add jecxz jne ret push xchg ret popf std xchg adc data16 dec and daa sti push adc ljmp notl cmp adc add daa and cmpsl test sarl in mov stc xlat popa fimull sub pop in icebp pop mov xor xchg dec pop icebp mov je jbe cmp xchg sub daa push adc sub sub or mov int3 dec ret xor add repz xor sub sarb adc lea cs enter (bad) lods addr16 jno cmp jne or arpl jo and xlat stc fwait mov ljmp outsb mov dec jge pop testb fcoms cmpsl addr16 and jne fidivrl (bad) mov inc or aam int3 xchg jb cld add lea (bad) pop clc jecxz jmp and xor sub sbb es pushf sub (bad) mov dec cld sub int3 jo (bad) mov lds stc in xchg jmp out and mov cs dec xchg fstpl in cmp push cmp leave mov (bad) or mov (bad) divb test and xor sti mov jno imul pop push sub orl sub xchg pop mov add imul mov stc (bad) ss cmp pop and xor pop decl sti dec cmpsb cmp (bad) hlt (bad) leave jle adc pop movsl mov nop in lret add mov add push adc push iret jb cmp inc pop or adcb or cwtl pushf ret sub cmc mov into push push sub xchg xchg xor ljmp or cmc adc in or and lods mov fiaddl xchg lods test es gs adc inc jmp mov rorl jmp push test adc fsts xlat in mov fldcw xor movb das negl fimul and jge jle or ficom xlat jmp cmp jmp sarl andl mov shrb leave idivl adc lods cvtps2pd mov sbb lods mov dec pop adc (bad) stos or xlat push cmpsb adc idivl (bad) inc sub push dec in shr (bad) out or repnz mov mov fbstp jge jge icebp mov and (bad) jne ret mov cli cmc inc pop (bad) mov ret and mov aad push pop mov xor pop pop dec sbb add adc cmp gs loopne (bad) or jo adc aaa test insb out mov pushf jl lret sub sahf imul dec or sbb sub mov mov pop mov (bad) mov xor mov mov sub add les cwtl cmp and and mov and mov (bad) mov jns dec cmc adc inc into dec sti fs jmp xchg pop xor loope jg fldcw pop fdivrl mov add sti imul xlat scas ljmp iret test and dec in add mov pop mov (bad) xchg sub (bad) aaa sub xor loope movsl (bad) add and or xchg scas cmpsl inc dec out mov dec repz adc out sub sub (bad) repnz faddl and lret int3 sub in pop mov mov adc or sbb scas or shlb loop mov das (bad) (bad) out or pop imul out loop adc enter inc mov test jecxz fstpl push mov ds dec mov mov pop jp pop pop sub repz inc (bad) cmp pop sub and cwtl sub mov dec adc mov push rolb movsl in xor sub es addr16 pop add mov das cmp push push push xchg xlat push push jmp xor shlb rclb push pop imul xchg aaa adc xchg mov js dec test xor mov js add clc jecxz fisttpl inc inc cmp mov ljmp dec das push rcrb pop adc into sub lods cmp mov adc xor push inc push ss jecxz mov out pop cmp out clc or fxch dec and outsb int3 mov lahf mov lret imul pop or rorb pop mov sub stc pop xchg add call adc sbb sarl fwait (bad) xlat push imul add leave add sub iret mov dec xor out icebp outsl inc xor sti cmp imul sub mov and sub mov dec stos push ret add dec and adc xchg test dec push ss lret cli sub mov xor xchg ret sbb dec jg jle xor into call xchg cmpsl fnsave negl cmp (bad) sub and fnsave movsb push addr16 shrl lret shrl jecxz mov cwtl aaa push int3 sub xchg int3 les (bad) and push rorb movsb jnp dec adc sub jnp adc jae xchg push in in (bad) jb push (bad) push sub inc loopne push divb pop mov (bad) mov xchg popa les (bad) jge mov out adc xor mov ret add es ljmp mov fisubl testb and clc fstl cltd xchg cmpsl or jb inc xor ret dec outsl out in subb sti fs sub stos fdivrl pop out cmp pusha and pop pop mov dec out cltd mov aam addr16 jg mov ljmp loope sub ret aad jnp leave mov push or add push jmp lret inc aas ja or lock or xor pop out adc add jmp mov lahf in dec sub jbe mov mov and bound xor mov pop icebp fisubl ftst cs add ljmp jp pop push or mov mov or dec rcll movsl fdivrl mov inc mov pop popa rorb imul cmp cmp adc (bad) xchg inc inc jg call sub and cli add mov repz dec push rsm mov and dec arpl sbb (bad) stos mov mov sbb add xchg push sbb push xor sub dec and and test pop or sub jbe daa (bad) mov test mov pop sub call xchg mov or mov push ja mov or (bad) iret out fild sub sub sti xlat pop and cli rclb xor jb xor jne cs sbb xchg fs adc ret flds jmp inc pop jmp mov xor repz sub sbb call stc call cli mov lea pop ds lret xor lea cld loop clc inc mov lods lods mov inc in pop sbb (bad) mov pop ret std xor icebp mov jns int push stos rorl pusha mov or xchg dec push test adc mov push fs cli notb loopne and sub das mov inc test adc jmp repz add cmp je iret mov jge adcb inc mov pop shrl pop scas ret jb xlat pop pushf scas and add or cmp movsl push out rcrb dec daa mov push pop std xor mov lods mov push jbe sub push mov or jne (bad) divb and push dec or pop jno outsb mov sub aas pop (bad) test xor xchg icebp mov out mov and mov and add into jno lahf fsts arpl mov addr16 outsl xor imul fsubrs sub sub jo clc sub cli pop and jae daa cmp leave std pushf push jne xchg mov inc adc xor pusha mov adc cmpsl fdivs add push sub and xor mov shrl mov and jne adc or shrb rorb add mov and mov xor inc mov inc sti adc or pop xchg mov je dec subps mov or xor cmc mov pop pop jge test push xor pop and call pop in nop dec dec and and gs xor push xchg adc aam cli jl pop jge mov test or pusha add jb adc out sbb jle mov data16 popf jns test (bad) iret pop push pop xchg jmp and (bad) xor imul sub mov mov fwait cmp imul cmpsl shrb mov (bad) std out cmpsb pushf mov loop les cmp jmp jnp sbb mov mov dec cmp sbb or (bad) popf fdivp push sub daa or data16 xor out mov fs sub sarb dec ret xor mov (bad) shll add mov cmc pop daa loope jnp movsl (bad) (bad) repz push and and testl add insl mov mov out dec mov ret mov js jg push mov or fdivs and sub out div jb adc mov jge jne push xchg dec dec stos sub mov mov xchg popf imulb add jne arpl xor stos in fwait or push cmp sub dec xor sub xor ret mov es mov aam loop xchg lods mov jmp out jmp insb push mov fwait mov xchg push insb pop repnz pop jno adc sub decb mov push or add pop xchg in pop cmp call cmp xchg loop aam les mov pop aaa xor inc and imul ffreep jle or push or iret in or (bad) jo outsb fs dec insb (bad) inc jbe xchg pop stos int3 jmp jmp and jge test addr16 dec sarb dec mov cld icebp mov aaa in and mov xchg dec mov neg (bad) sti outsb pop or push push loop cld cli pop lret aad (bad) nop push loop xchg loope orb orl add add scas sub fcoms xor fcompl cmp cltd sti mov push or jecxz pop lds mov xor (bad) pushf test mov pop cli sbb cwtl iret outsb mov cmpsl pushf push inc and fnstsw cmpsb setae jae das cmp and loop ja (bad) jb scas daa push jo jmp push adc or fbstp fsubs push mov inc pop pop scas sub sub jmp pop sbb outsl ja adc in pop mov sbb lahf jno insl call outsl inc cmp fwait testl sub inc mov std mov lods xchg push lret fldcw push out lea into mov push fistl lahf sub call adc (bad) out pop xchg shr clc daa in pop movsl cmp sub js add insl int es mov mov or repz mov ljmp and cmp into cmc sub and jbe es fnstsw out lret mov or xor movsl push sbb repnz dec xchg loopne call mov ds out mov sti (bad) cmc ja out xor sbb sbb jecxz ljmp adc dec daa mov ret lea popa sub jnp xor sarl add jmp dec add mov ljmp jne dec push cmpsb cmpsl daa not xchg adc mov or rcrl dec sbb stc and or mulb and jmp jle pop popa jle enter or in xchg jle push icebp jle addr16 jg out iret into into add dec mov mov adc rep push jge dec mov mov cmpsl lock enter sysenter (bad) or (bad) jno jg (bad) push pop inc inc or fisttpll mov lods cwtl mov adc push jno adc mov mov and push and pop ret mov stos add push rolb push popf call ret pushf stos push push xor mov push fmuls scas popf push sub mov mov (bad) imul mov in add mov (bad) xchg dec mov adc (bad) ljmp push inc aad imul xchg das xor sbb pop dec clc cmpsl cmp fisubrl or adc push lahf fisttpl pop jns subl stc iret pop sbb lods lahf movsb nop fsubs aas das ret in jl jecxz or test frstor cmp mov arpl into lret bound xor pushf dec mov fistl xchg pop scas ja outsb mov das sub and cmp jmp xlat mov mov rep or adc jmp ljmp adc sub sbb loope add pop cmp (bad) jbe pop iret mov out int pop cmp in stc jmp out sub (bad) out add or dec idivl or jecxz mov jmp and cli adc pop dec (bad) lcall enter adc add js (bad) sti lret or dec leave (bad) incl or jge,pt ja or pop pop mov cmpsb mov cltd scas xchg inc sub sub daa sbb test negb pop movsb mov push (bad) stos add cli mov dec inc dec popf add dec and cmc rep adc xchg test lret inc loope sub jne push mov popf (bad) jb and add jmp gs add (bad) xor mov loopne inc mov xchg ret mov inc daa xor out xor or sahf mov std push out (bad) in fs push add mov or inc les lret add mov mov insb jge fmul inc xor out std adc xchg pusha mov mov dec xor mov adc pop mov movsl xchg pop test add jg (bad) xor cmp int3 mov mov mov ret mov jle movsl mov in cmp fildl mov push popa jb ds xor repz je or cmp cmp jl dec jecxz std xor add pop and mov (bad) and xor imul xchg test pop push fwait (bad) das cmp jle pop pop mov ds jl daa and mov mov adc dec lods mov fs fldl add icebp or and mov sub jle mov lret xor cmp pop daa repnz sub and mov fnsave movsb push xchg xlat jge pushf (bad) jo popf push aaa and push movsl pop adc sub scas arpl cmp popf jg test pushl das pop stc (bad) dec aam and sub mov fnsave ret jge jo repnz (bad) xchg xor (bad) js out int imul pop mov inc dec jnp ja mov and dec call rcrb loopne xor mov pop pop xor in inc imul cmc pushf jle lret in mov gs xor fstp pop dec test nop jecxz jle ret mov (bad) iret push mov loop add lock int3 orl out mov or mov cli scas mov push pop or ljmp cmp in icebp or lret and mov ret jmp pop jne mov mov jge (bad) xor or aaa xchg push mov icebp ja mov (bad) xchg (bad) cwtl xchg mov mov fnop popa leave mov add inc mov ret mov sahf leave out in lods sbb xchg pause fiaddl jle and repnz out js or les and jecxz jne and pop add mov sub mov mov (bad) xor xchg shr mov xor jbe push movsl jo pop push mov int3 ret or movaps repz (bad) xor dec lret mov add mov xchg cmp push mov shrl pop call mov (bad) jle aaa sub (bad) bound fimul push shlb icebp add mull mov sub push xchg std sbb (bad) cmp xor in push lret pusha add fldt leave pushf nop icebp push andb mov and sub xchg mov mov add sub icebp out mov and inc (bad) popa push mov pop pop inc cs aas iret or fbstp push add mov fdivrl sub jae mov (bad) stc adc mov lret mov cmc mov fbstp pop push dec xchg sub mov repnz fxch cmpl jo out fdivrl sub mov addr16 (bad) test imul (bad) shrb ret xchg out add rcll call ret mov xchg je gs ret (bad) pop push push ret mov ret jecxz pop mov mov icebp std pusha and sub call inc data16 lret shll (bad) dec add mov mov gs fist add mov mov mov or xor pop loop xlat xor ja icebp cmc push xor fwait add add sub mov lods mov and or (bad) call sub icebp xchg or rcll lods dec es jb (bad) insl dec stc jae rol mov adc ret adc lds add das (bad) psadbw imul push mov and push bound xor ja insb jno dec push movsl jnp xchg mov xor rorl imul jnp and inc xor pop xor dec jecxz lods or mov mov rolb mov jno in sti int3 add xchg sbb and mov xchg gs outsl sub cld xchg shlb mov cmpsl fcomps push pop dec push out movlps xor repnz xchg les lahf pop fcompl jecxz jge rorb into test movsb mov notb jle and aad std inc or sbb mov (bad) mov jne xor out sub cmpsl pop jg push (bad) or cld add push mov jl sub ret cmc push ret nop inc mov cmc test jmp popf cmc mov out push jbe xor std scas ret inc xor mov dec cmp mov and pop jns inc ret push bound inc push adc and pop das bound rcrb inc popf push adc leave mov cmp adc pop or sub inc sbb add pop pushw js mov cmc into scas adc or out cmpsl scas sub (bad) sarl out les add jmp aaa rol inc sub rcrb (bad) xor cld insl rorl mov cmpsl jecxz sub lods pop ds xor mov xor and or and add push adcb fs daa sarl daa (bad) sbb (bad) in shrl adc add scas mov jbe loope inc sub sub jbe jmp adc mov ja jae sbb sub imul jno popa or mov call xchg loopne jmp push nop adc test fs mov or scas repnz (bad) icebp lret and dec ljmp xor out push push pop push xor sub sbb mov rep adc test inc sub (bad) repnz or mov or repnz lret adc add mov int3 bound (bad) fcoml dec clc repnz xchg lock test addr16 dec stos sub (bad) cmc push movsl fdivrl or mov lods imul out stc (bad) or or (bad) xor cmp mov cmp movsl (bad) pop jp add leave xchg iret lahf neg rorl fprem or stc cmc fildl sbb (bad) into gs cmpsb leave add pop stc cltd pop jae dec mov decl loope sub inc add lret out adc mov ljmp divb xor cli daa stos and faddp add icebp test xor sub idivl xchg jle not lds and pop push lods cmp xchg jmp leave xlat inc add cli sub xor xor cli xor xor push or fcoml push inc adc pop repnz outsl fdivr loope fnstcw aaa out xchg rorl loop fchs inc loope mov push aas repnz sub xor cwtl lcall aam pop orb add lods pop fsubl xor xor and insl outsb mov out xchg cmc sahf jmp fiaddl pushf xor cmc into cmp mov mov jg add clc push idivb dec scas lods sub lret add dec sar xor push and xchg test fcmovnbe adc cmp mov mov fmulp push xchg sub cmp fiadd xchg mov sub popf fistp and in add mov jmp xchg (bad) cli or aas inc sub adc cld jg test leave (bad) jne dec js lock xchg in mov pop in sbb jp jle sub cmp cmp mov les popa ds xor je lret jle and and xor lock adc mov call les xchg mov mov sub or mov and scas pop mov or push pop (bad) mov add pop xlat icebp lods or mov and dec mov push mov sub lahf jns push leave sub xor iret xchg cmp pushf pop dec ja out in add mov leave push call sti jne daa rcl add hlt cmp push xor movsl stc imul push es (bad) xchg jbe dec pusha cmpsb loope popf dec mov test xor test movsb lret dec push iret and pop dec ljmp ret cmp jecxz pcmpgtb inc and mov aaa je ret (bad) ds mull xchg xor push gs lods inc xor add xchg jecxz sub xor dec lock push mov sbb pop (bad) fnstcw add mov scas xchg pop pop pop sbb out les ret xchg clc sbb sub ss lea adc adc or cltd fwait and test ss xchg lahf jne adc push pushf jle push iret (bad) je sbb mov insb fisubl xchg jmp pop ret cmc inc nop xchg sub mov adc cli xchg lods inc xchg clc div loope pop enter mov and out daa pushf mov stos imul or scas out and mov out mov es jecxz pop mov out and mov mov (bad) mov bound (bad) gs sub lods iret sti loop test xlat stos cmpsb (bad) daa stc hlt gs leave test or fmuls lret dec imul sarl sarl mov inc mov ret jbe xor pop dec pop push (bad) lcall dec orb adc scas xchg push mov cmp inc add (bad) pop insb rorb dec fdivrp dec into nopl mov incb cmpsl popa daa xor shrd stos fdivrl fildll fbld not xor add sub add call push xchg adc mull daa push loope and std pusha mov loope ljmp add dec mov jg mov pop jbe push pop add popf sbb invlpg repz icebp outsl dec jo in xchg inc xor jge std jg mov and sbb fidiv testl push cmp call or sbb mov mov cmp roll test xor sub mov xlat test xor in push dec mov xchg test xor std jns lret jmp push xchg inc mov cmp pop test mov mov pop data16 mov daa xchg lcall repnz ljmp test negl cmp cmpsl push pop adc xchg test pop mov leave icebp jg les jmp popa or enter scas sub push cmp xchg sub out dec mov (bad) lea popf cmp leave popaw mov xchg mov push push cmc add or or fldcw cmp scas pushf cmp daa xor ja mov push sub dec push fistp divb lock mov hlt mov fisub icebp cmp push mov cmpsl (bad) jge fbld pop mov ljmp scas sub roll into test mov dec mov notb inc scas in loop std xchg push cs add pop hlt les jno lret inc dec dec or lods call adc pusha adc adc mulps ffreep push roll lock shlb insl add clc mov movsl sbb stos out jne cmp and jb,pt dec lock lock add pop push mov (bad) mov das xor jae push call push orl cmp lret xor push push mov (bad) sub movsl notl lds xor nop inc add lahf repz out pop imul gs xchg out cmp and xor xor outsb mov ds setge sbb sbb inc xchg dec lret ds adc mov or mull inc pop jge loopne (bad) lret lds xorb mov mov push sub imul cmc mov lahf jns lret sbb iret outsl stc add call mov xor stos or out outsb imul jne cmp add insl and mov icebp fdivrl comiss add and and popa and cmp or adc xchg test test mov (bad) adc push pop xchg insb mov push pop in jle and mov clc movsl mov mov into xor ret xchg lcall sub and aam ret pop rorl push sbb dec icebp and mov mov subb lret mov jl leave cmc cwtl add xor push (bad) lds and sbb or or push aam sub enter xlat call jle push jg test lcall aaa cmpsl cmp jl dec or mov pop push jb mov push and mov jo or imul imul xor pop add test mov ret and les (bad) sub add leave cli cmp xor mov add add imul jle ret fsubrl test mov mov aad in adc mov repz xor adc pop addb and mov lcall out mov xor in (bad) test lds xchg sahf add cmpsl pop out jae xor sub pop loop fcoml dec push sub pop mov or aaa push sub xchg and adc xchg fistp iret or ror xor mov dec movsl add xchg loop rcrl ljmp cmc mov in data16 orl and push das pop push mov rcrb loopne jge jg add lock xor push mov in pop pop lods enter int3 jge pop pop gs call (bad) call adc pop push test mov jnp cmc mov scas stc jno in neg not dec (bad) in pop in in or add push mov cwtl sub adc (bad) out dec push push invd popa push xchg push lret push mov jbe or lods pop sub loopne add jg add mov iret dec fwait push or push das push in je paddd cmp popl pop push mov stc std ljmp add add push push mov inc or inc std dec pop sahf pop lcall clc inc mov sbb dec subb pusha lds push mov sbb cmp cltd jmp dec add outsl push xchg xchg pop mov add subb shl test add cmpl aad push add out insb jnp add pop pop mov cli insl mov pop mov mov pop movsl cmp bound push test (bad) push int jg rorl ret mov jmp aaa dec loop xor sbb out mov mov push xor gs sahf push rcrl (bad) loop je pop outsb push cwtl sti das sub jno xchg clc ljmp rcll je mov sub notb push popf mov sbb call mov lret inc fdivl adc xor out jecxz fdivr sysenter push (bad) or je mov sub dec imull mov push sbb scas jnp xlat insl xchg (bad) into add loopne or mov fmuls ret jp rorb out and ljmp imul jmp (bad) mov js sbb inc push sti xchg loop cmp or stc subl out daa out mov pop repz push xor push outsb out sub xchg xchg test jbe addr16 pushl jecxz jno (bad) cmp xchg (bad) jne push adc sar imul jno mov push scas rorl and or (bad) and daa adc or push and das pop xor stos mov mov sub (bad) sahf rcll pop jmp push xchg lret neg repz jmp ror pushf jbe inc and sahf and stos mov scas mov inc neg rcrl out clc fst test je or inc push push ljmp sub pop add and ljmp mov add add or out dec and popa jg dec xor jne js aam rol daa cmpsl fidivr das lret or test pop mov (bad) xchg into pop int3 clc jl and sub jmp mov fcoms push push mov cmp adc and dec and into sbb cmp addl sub enter pushf or shll inc sbb ja sbb (bad) and pop inc xchg sub push shl sti sub push push sbb lock (bad) mov out scas (bad) insl test mov insl fs xor sub mov fdiv loop stc inc icebp dec mov pop sbb test ret mov in inc lock ficompl xchg leave dec idivl jg dec pop cli mov rorb inc lret ret inc add aas stc sarl popa fldcw lea lret imul aas pop loop xlat jmp je mov das jmp xchg popf cmp and dec cmp xchg imul mov push push pop (bad) xor popa dec mov in xchg insb stos (bad) jbe cmp dec mull es leave fnsave push mov test test or pushf pop leave mov sti push xchg ret outsl xor and or das add je insl mov into mov shll stos sub mov mov ja push dec push mov out xchg leave imul out jmp ja fs lcall jb pop push fcomps leave mulb stos sub (bad) pop pop lret int pusha testl pop out daa fildl jge xor mov jmp pop mov inc cmp imull mov lods push mov popf sbb inc add out movsl ret ret pop mov mov adc xchg xchg dec idivl or inc sahf or and xchg (bad) cld push cmpsb pop dec sbb insl sbb or mull pop push lahf cmp aad pushw mov hlt dec fsubl or or mov add add loopne leave inc xchg xchg sbb adc sti sub out test int3 jmp in test movsl adc xchg pop mov mov xchg adc movsl adc mov mov mov add test mov xchg clc pop dec fnstcw add test data16 outsl test ljmp sub mov cmp sub jecxz dec dec mov dec mov divb sarl inc add mov or repnz or int lcall dec fcmovne iret mov imul xor inc xchg fdivrs mov fidivr lods adc (bad) sub pusha pushf mov mov sub jmp pop cmp lret addl inc fnstenv add mov adcl loop,pt mov dec and lods jecxz (bad) mov sub pop pop out jno or ljmp sub adc mov fimull das shrb sub ror cmp lods negl cmpsb push dec and out cli mov aas and add stc and mov (bad) or add adc hlt fcompl pop sbb lock arpl add inc or inc mov ret imul icebp jns adc (bad) sbb addr16 add xor pop out lahf jae pop ret stos sub sub sub std into insl mov and cmp cmpsb (bad) lods push testb push mov in mov mov or xchg out mov add imul cmp xchg ljmp outsb into in pop cmpsb jge cmc cs add or inc dec testl mov mov mov push shll or cmp lret and out popa adc xchg pop add and jae psrlw leave out push test in inc sub xor mov cmp dec lods cs incb aas add mov push ror jmp dec ret jo out xor push dec jmp sub add fsubp jmp je dec and jecxz in add xlat mov movzbl mov pop xchg sbb inc sbb sti pop popa cmp or mov push sub xor sub ficom mov adc mov cltd pop mov mov gs lret mov inc add jbe ret push lods pop into es cltd sub lret push sti in loope and xor or (bad) mov jge lds aaa adc mov push xchg xlat lahf (bad) cmp xchg jmp (bad) lret mov enter in test xchg leave and push cmp jmp in das jo mov inc dec xor sub sub shrl repz stc sbb mov xchg std test sbb test (bad) push xor std stc aad xor cli (bad) ljmp ret jg cmp jle mov cld xchg pop insl mov or (bad) push xor jmp daa add jnp jmp pop cltd xchg stos into pop inc ja sub add popa dec (bad) sub jge xchg ret jg mov inc push or push xor nop push ljmp mov lret mov fstl lret (bad) sar ficomp xor into mov sub decb lods mov loop sub bnd mov repnz adc jg add loope mov cmp xchg sub repnz sti jmp mov sbb dec rcl fildll mov xchg fidiv push loop ds leave ja fisttp jo push xor in push out pop adc jle sub jbe push pop cld lods int3 pop or sbbb mov outsl cltd fsubrs mov int3 (bad) or ds sub popa jne aad out dec sub dec fisub dec ret iret andb xor int aas mov push and stos pusha adc xor popa and add sub clc pushf xchg iret test rcr cmpsl cmp ret not (bad) jne or mov pop inc xchg mov jl das mov out icebp call sub xor pop mov mov add mov pop jnp movsl jge (bad) dec mov jb xchg xchg outsb jecxz xchg (bad) xor add sub gs test pushf push mov pusha add icebp adc jmp xorl shlb xor inc jle mov xor xor xchg mov jmp pusha out pop dec popa cmp fldt fild cmp lods divl xchg jge push mov decl sub cmp das enter (bad) std mov aas mov icebp add sub sti aam out addr16 sub lods scas lcall leave mov (bad) cmp add popf aad jb rcr push roll add js je push push mov pop or pop pushf dec popa movsb xor mov xchg repz adc xor jmp je mov push mov gs sarb (bad) sbb movsl sbb and xor push (bad) xchg push mov xchg inc pop pop mov sub mov add adc xlat cld sti sub and cli push mov div pop xor out sub lret ffree mov xor push fcmovnb sub or adc out or xor and imul or mov test and nop xlat dec mov mov push or (bad) inc clc mov jne or dec shlb les dec ret mov push daa add dec dec dec out stos sub inc fbld jl pusha decb mov sti pop xor xchg push outsb jl ss in jp xor push sub jne mov ficomp pop jmp sbb fildll scas push out adc mov pop mov inc xchg jnp and adc repz gs add dec daa cwtl cmp imul push push pop (bad) out dec int3 adc or fsubrs cmp sti pusha xchg inc mov sub mov pop pushf int3 cmp xor loope cmp movsl jbe cmp stos sub lods lret cmp xchg xor fwait mov fsts lods pop sbb xor sub cmp fisubr ret rol cmp lret stc cld imul (bad) icebp cmp cmc frstor add add add out xor jmp fnsave icebp jl dec xor sub or test addr16 test dec jo xchg xchg daa clc out push xor outsb daa stos adc sbb dec andl pop fs repz jmp cs decl mov push decb push data16 nop jle div and sub dec jae dec clc xor lds test (bad) mov mov xor pop movsb jp insb fist movsl and mov and movsb rcl and (bad) xchg inc and loopne pop les icebp jmp sbb fdivr out pop adc and rcr stos lret repz in pusha xlat lds incl adc (bad) out aam push (bad) adc xchg mov aaa jg mov adc cltd jb data16 js imul sarl (bad) aaa (bad) jge jl or mov movsl add mov lock inc out fnstenv fidiv mov imul sbb lods loope add and loope sub dec pop cmp fstl cmp sahf push in test sti loopne or rcrl pop movsb dec jbe mov mulb sbb inc movsl push ja xchg in and xchg or testl pop out sub (bad) mov fs and push pop pop push out mov fsubs or mov lcall scas adc xor xlat add (bad) mov fisttpll pop mov xor mov test cld and pushf add (bad) sub xor mov mov pop fs ljmp push es pop lods mov (bad) sub das imul je xor or xor pop dec das orl or xor dec cmpsb push rcrb nop test rolb lahf jl jmp les js sub jae push test js dec add fidivl aad stos je loope sub add cmp clc inc dec repnz rorb lahf pop xlat xchg xor iret call jg imul rcrl in addb test mov ds divb lret in stos addl push aad and xchg repnz and repz xchg test call and popa call mov push mov stos (bad) out sub stos push pop jns inc push mov jbe pop mov dec jno or or shll adcb mov or fs mov inc std pop mov inc add and lret das in sub add dec sbb clc add iret xchg (bad) lock std sub leave (bad) mov xchg popf add out mov dec stc mov or xchg jmp scas cltd ror cmp fwait dec icebp icebp push notb call pop and in push movsb mov jbe sbb jecxz mov pop lret mov xlat push rclb dec mov lret sti jle je out cmp negb push loopne rorb fisubrl cmp popa mov dec cmc stc test hlt add add pop cwtl imul fnstsw fsubrs adc or mov hlt (bad) scas xor jne mov xor jge pop and movsl inc test jp clc sub test pop sub es data16 mov and icebp popf dec jg jne jmp iret sub cwtl daa and aad or and aas sub pushf xlat icebp dec push jge (bad) imul ss bound (bad) or adc repnz pop gs cld add sbb clc cwtl add mov or insl shlb data16 or mov fstpl lea pop cmp cmpsb sub jecxz pop dec das and sti daa scas inc fcomps rcrl notl arpl push jmp gs fs lea popa imul cmp andl (bad) adc ret sbb or adc imulb clc pop js movsb dec jecxz (bad) repz or mov ja inc (bad) frstor (bad) stc xchg inc int3 cli jecxz icebp ljmp or xchg xchg cli fs sti mov leave xchg cs jmp or jp cwtl leave int3 jb mov xor sbb dec push cli fs jecxz or fwait mov and (bad) pop shll out mov (bad) scas jl adc nop fmuls cltd and addr16 lcall mov sub out data16 cmpsl push daa cmp mov cwtl mov rcrl jmp pop (bad) divl mov lahf jae or push push sub xchg repz sub mov or pushl push icebp jmp inc push ljmp imul lahf rcll sbb mov xor in pop fmull lahf sub (bad) xor pop in aas imul mov sub and out sub jno lret aad mov push repnz inc jns mov lods (bad) mov pop pop iret cmpsb xchg adc add pushw dec in adc jnp push or dec add cmp xchg mov test mov jno and sbb xor jecxz das popa call lahf adc xchg dec mov loop adc cmp (bad) repz add sub xor dec sub xor jl pop sub in gs (bad) in xor shrl push sub lret xor xchg jns jle and dec (bad) call fisubrl pusha lret clc popf shr add jmp and pop aas cmpsb push pop daa cmp or mov leave and jno fist add dec ret dec stos loop xchg jmp int cmc jp jno sbb cli dec testl icebp jl pop mov or pop fsubrs adc ds lds add loop,pt mov movsl ja mov or ja test mov and xor lods lea and xchg inc cmc (bad) mov (bad) push addb outsb dec push pop sub add scas jecxz xchg mov pop les (bad) outsb in hlt xchg add pop fiadd out mov call or pop dec xchg jge cmp and xchg inc mov xchg sub cmpsb mov xor ja sbb orl or dec lret mov or popa xchg add pop xchg mov cltd and lods pop (bad) and mov ret xchg dec daa roll jp jne jl push jle in and dec mov dec cmpsb adc roll add repz mov jae and imul loope scas je test iret pop xchg dec pushf dec pop dec push adc (bad) mov clc dec mov cmp mov jne fistp fcomps dec xlat push dec out stos bound mov and mov lods xlat outsl imull gs mov xor jbe in lret test cmp jb ljmp or xchg aad loopne sub xor lret lea popf gs stos repz or mov int3 out dec xlat jecxz push and out push scas (bad) mov clc push std mov sub stos cmpsb (bad) sub rorb pop dec call sbb pop xchg movsb xchg and sbb jl fs push add lahf jbe push pop lock pop inc adc les (bad) add xlat gs fsubs mov (bad) jbe fisubr mov pop cmp push repnz dec jne into daa dec xchg rcr jmp in adc das mov inc adc cwtl int movsb and jne jae icebp pop lret (bad) or jno leave scas orb mov imul sbb sbb push jo loope pop clc out xchg xchg mov jg sahf mov dec mov jns dec repnz xor out in (bad) mov stos inc push pop and push lret pop or sarl out pop cmp inc and addr16 insb fstpt and fwait push add sarb test movsl inc popa ret aam and push xor mov xor (bad) mov fsubrp pop ret pop movsb xchg pavgb loop add (bad) mov inc jbe xchg xlat push ja adc mulb repnz lret pop push call outsb adc xor jecxz cltd imul into mov or pop add xchg orb mov dec jbe inc fs jmp dec cmp lds inc (bad) dec add inc and mov add lods (bad) lret xchg or dec add ret mov add test mov xor (bad) mov sub nop or xor out jno xchg jl movsb pop dec mov xchg dec outsb sub enter repnz pushf sub sub xchg das mov or sub jne mov sub dec and sti mov cs adc dec inc mov jmp movsl inc jle vmovshdup cmpsl pop in fimull mov icebp add cltd add call and mov lds ffreep out daa pop inc xor sub adc (bad) mov dec test (bad) mov dec mov mov sub mov lds and (bad) aaa cli dec lods mov mov mov test cli jbe mov ffreep jmp repnz subb and mov mov je cmc jle cmp movsl dec (bad) mov jnp add dec mov cmp pop jg xor xor cmpsl dec (bad) movzwl push int3 shrb or fwait push adc out jb pop pop fstl pop xchg add idivl popa shr cmp (bad) xor (bad) sub idivb mov test sti mov mov imulb ljmp push cmp loope push push leave cmp iret aad sub call cs pushl mov pushf pop adc adc xchg jne in add xchg add and add or rorb adc mov into xor lcall xchg inc push and jge adc loopne stos xchg adc add cmp push push scas mov pop and or nop icebp xor pushf popf and sub jp adc idivl add mov and daa add (bad) pop leave add push daa xchg dec pop pop int cs mov or loop int3 mov sub sub (bad) sti mov sub pop dec or negl out in movsl dec adc mov ja xchg pop popf pop mov cld jae cltd add out (bad) ja pop dec or movsb nop jbe xor fcoml jbe dec mov jnp mov and or or or xchg xchg mov inc and push cs clc repnz pop adc leave jo ja fdivs jg inc mov jno inc xor jns lahf add mov shrb mov jl leave out mov (bad) adc ljmp and sub mov lods xchg shr int3 insb sbbb data16 mov jmp sub xor (bad) (bad) call push mov out and cltd pop or pop mov inc sbbb adc les jno dec pushf jmp jmp add inc xlat mov test sti lret jmp mov jmp sahf cmp icebp inc push pop mov clc add sub mov in fmuls push sub mov adc mov push daa mov xlat ret stc mov pop jns cmpl and jb pop sub into mov out stc in push and ret adc xor bound repz or (bad) cmc inc loop icebp jmp pop jmp or jg pop das pusha xchg jmp add jnp lods popf xchg repnz repz xchg or xchg lods gs xor mov or jl ror stc sub int3 and cmp dec (bad) or sub push imul jle jne lahf inc loop mov mov cmp aam stc or test xor xor inc fstl adc pop adc adc loop sub (bad) imul and das inc out and pop add mov out add jbe jno xchg pop sbb cli and or sub push hlt cmp ss pop or mov xchg lods jl push add sub or cli mull cld jns loope cli jmp sahf dec mov mul arpl (bad) sub jge inc add pop (bad) xor (bad) repz mov fstl js pop in jmp jb lret xor jnp mov (bad) ss jo lret mov push lods cmp ret push iret icebp mov and hlt push sub xchg aad mov and subb mov mov loop sub add sarb cmp decb shr lret and dec repnz pop ljmp dec add pushl mov mov aad aam out cs jecxz xor dec mov mov (bad) dec adc mov mov in pop icebp add pop xor jnp xchg mov std cwtl movsl xor adc jmp ljmp out loop sar dec jle cs inc aas fs mov repnz rcll mov test lods sub mov cltd mov or cli and cmp fs test push cltd mov ds xor scas and xor and lret and (bad) shr lret loopne xchg inc jge in sar dec mov jge ret add adc push push shlb dec xchg and push xor clc hlt daa movl xlat lods out (bad) xor mov cli lds and movsl jmp inc (bad) mov test xchg add push push lds icebp push (bad) sub sbb pop cmp push gs sub pop call stos bnd clc clc (bad) xor mov cs fs mov and push or xor push pop test jns ret jmp shrb cmc (bad) and js leave (bad) ja cmp (bad) ret dec cmp mov mov jne and into and das mov mov pop out ljmp jmp pop fsubrs cmpsl iret dec and cmpsb push or push xchg push sub (bad) pop (bad) lock add jns dec push mov fwait aas mov pop leave mov mov xchg push (bad) push pop fisttp (bad) adc add ja dec into sub imul mov js dec repnz fmull sti into (bad) pop loopne and movsl jmp inc mov and add push sub push ja call dec cltd and movsb imul rolb add repz pop adc (bad) mov xchg or ja or lret (bad) and mov pop add mov mov add cmp adc test xor test lret ret push push xor mov xor sub aam lods subb sti int3 sbb sub fbstp xor (bad) shl sbb add sub adc out cmp push notl add sub cmp adc fstl push pop push and les repnz popa jo ljmp out fidivr stc jo cltd icebp imul repnz adc push mov sub pop mov stos mov decl repz inc or inc shrb (bad) cmp loope xor inc xor pop xor or cmp (bad) fsubrl (bad) fnsave outsl (bad) out repnz stc pop or mov dec ljmp ret or and mov and mov pusha jmp shrb cmc xor and dec lods das (bad) cmp ja outsb fisubl push lds outsb divb in rolb jb and daa jne (bad) mov sub lods and ljmp cmp pop pop das xchg ret sub jmp and movsl leave mov and lds xlat fstl mov push icebp and cmp pop inc cmp (bad) jbe ret push fisttpll xchg xchg inc loop mulb insl sub stc and dec pop jne sti div and loopne mulb mov xchg jle rcll lret sub in repz add out and (bad) and xlat mov out leave repz bound mov mov jne xchg pop fwait or call xchg jg push pop mov out bound aad (bad) jne int sub inc adc ss cmp xchg test dec psubsb xor inc adc iret inc sub (bad) xchg add cmp mov add mov or mov adc inc adc xor or add sub stc jns insl mov mov jb mov sarb stc popf jg push push jmp and push (bad) (bad) rorl jne in xchg lret cld sub ljmp jns (bad) out sub ljmp mov adc xor sub adc outsb inc mull stc (bad) aad xor inc test add into sub lahf icebp mov ficompl add fsubrl loop incb das in cmpsb cmc jg fcmovnu sub xchg inc sub push inc lahf push xor pop pop add out int3 popa or out (bad) bound popf or std daa or or das (bad) out leave and add sub inc jbe inc inc and sbb pop lret movsl cli mov jb push popf cmp dec inc cmc inc pusha jmp dec addr16 push sarb mov xchg dec pop aad repz iret in sahf mov adc and lock xlat cwtl push xchg (bad) in into xor ss iret and lahf (bad) jg or push dec or in dec push in cmp idivl call ja idivb jne in adc dec out insb sbb clc movsb mov xor leave dec repz cli lret adc sbb sbb test jecxz adc dec inc es icebp scas pop add jno pop les push mov or mov and cmp ljmp pop lods test mov out and leave loope fisttpll add push mov xor adc add and (bad) lea outsl cmpsb mov pop and (bad) pushf (bad) test sub orb es aad xchg and xchg cltd (bad) sub fiadd mov icebp (bad) leave cmc pop scas add sub mov in dec jb push mov fs test or pushf (bad) jmp int3 out mov shlb dec fidiv inc lcall xlat int3 add out pop and ss xchg jns movsl ds cmp hlt (bad) (bad) adc xchg (bad) lret lret mov add inc jnp adc and mov xlat hlt mov fist lret pop fnstenv lods sub sbb icebp (bad) hlt pop imul or leave outsb mov cltd stos (bad) negl pop repnz sbb outsl cltd repnz je and cli into cli ficomp shll push popf outsb lea push jne adc negb and shrb aam dec clc hlt nop inc mov sti popf mov mov fbstp or out xor bound pop testb sbb dec adc lret (bad) jbe inc mov lahf pop stos (bad) rcll mov pushf movsb popf sbb pushf pop ret and pop mov out fist pop pop jecxz in (bad) dec and lods sub mov das mov and ljmp sub call add adc ret dec cs jb fsubr mov mov repz inc dec movsl jnp adc ljmp out adc outsb xchg inc ret cld mov ficomp mov repnz ret push mul decl jb or push xor scas loop mov push add popw sub dec cmpsl aam and rcll loop (bad) repnz sub aas (bad) stos xchg (bad) pop or lret jns out or xor lds dec sub cs add pop loop popl sub push sbb sub and (bad) mov cmp or inc xchg sahf jb mov aaa mov xor out cwtl imul into push pop xchg xchg movsl sti mov das (bad) ja popa addr16 outsl xchg fldl scas pop pop jns dec in jbe xchg dec pop pop fbld dec notl int3 jbe dec pop xor add aas lods jae jmp call jb negl mov and dec and xor rcrl sti in xor pop or and mov xor add push cmp xchg in xchg out and pop mov aad fisttp lds ret mov fst ret mov mov fldcw adc jl or mov out (bad) sub or ja out loop sarb inc push inc xchg pop (bad) (bad) inc lret (bad) or adc stos cmpsl lret pop ljmp jmp cld add xchg push lret add dec jecxz (bad) push jno (bad) int xor stos (bad) aam in mov sub lods mov sbb mov rorb inc xor mov push ja sub ljmp pushf push mov test adc mov or jle and dec push fisttpll add nop test jge inc adc lcall mov lock inc in xor lods mov ja add fadd (bad) (bad) xchg mov mov cwtl cmpsb into and cmp lret nop aas movb cmp sub (bad) jo xchg cmp inc mov inc pop or jp dec pushf out out add jne lahf xchg adc int3 leave ljmp mov sbb daa adc mov cmpsl loop (bad) (bad) subb mov loope pop aam bound out xchg adc mov into push dec add jecxz and out and jmp mov sub ljmp lret xchg push inc gs cmpl pop adc and inc xchg ret ljmp sbb jl (bad) test (bad) add (bad) push inc movsl jge xor mov jp imul jne xchg and (bad) scas ror mov jbe add in aas rorl call movsl inc push and cmp bnd xor ds (bad) mov cmp movsb mov mov xor (bad) add cmpsl in std fwait js pop daa cmp sbb xor (bad) clc mov push and xchg out add clc negl and pop rolb or clc sti xchg xor dec arpl outsl jno add cmp loope or sub test add out stos or xchg push xor outsb imul inc xchg adc and in shl sti stos aas (bad) adc push popf adc out adc add mov popa out adc and or or xor add sub fiadd mov sub cmp roll ja push nop xchg xchg test lret jmp mov std das clc insb mov sub out mov cs (bad) sbb enter (bad) push mov or jns test subb je imul in loop pop ljmp lds mov out insb jo dec mov cmp daa decb rcrl jp das sbb pop iret mov push js sar out das ljmp fidivrl mov fnstenv (bad) mov sbb popf hlt mov jno add pop push rcrb adc add sub and cltd rcl inc ret mov jbe pop in mov cmc push aam (bad) jbe sub or mov das mov sub imul into outsl lret push mov pop pop and xor (bad) call (bad) jno mov xchg jno or neg or or mov iret sbb aam jmp inc daa jo js pop orb pop idivl sbb mov je jb push scas jge xor or sub pop cmp in icebp roll (bad) sub not jmp push adc (bad) (bad) gs or aam cmpsl fisttp dec mov cmpsl (bad) jmp mov leave add aam popf fisubr push pop faddl (bad) ljmp in or mov (bad) sub mov push sarb mov or dec call sub insl incl mov ds mov jge outsb stc sbbl pushf repnz jne xchg sub pop mov cmp out xchg ficom push mov arpl lds mov xchg push in in mov push aam fcomps mov add push adc sbb movsl pop gs out xchg sti mov push xor xor push dec or scas or ret pop out push aam pusha and or lahf push mov adcl sub mov dec repz orl cmp imull jmp daa jbe jmp divb or mov cli mov push out pop cmpsl jp call popa adc ficompl fs mov std iret test test pop scas fisubr jp jmp xchg push and cmp fs add imul dec lret add pusha std sub outsl mov mov loop inc aaa mov les xlat mov and faddl add stc add scas mov pop mov stos fs pop dec push call das dec lret fwait js icebp ret into rolb daa jmp dec dec into loop xlat icebp js and sbbl stc data16 mov mov loope mov iret in out xor fldenv cmp (bad) sub std popa xchg idivb imul cltd test sub out gs (bad) jo xchg mov push fisttpl ljmp xchg lret out lret das jle lret lock (bad) xor out sub mov sub mov mov pushf adc popa xchg (bad) jne sub ljmp mov lret add adc sbb sub sub outsl lret mov nop sub add sti mov cmp fistl adc repz imull rorl and add jp jmp adc negl jbe adc push fsub inc xchg scas shrl rclb call (bad) cmp icebp scas inc (bad) int xchg movsb call xchg roll data16 out add shlb test in std in mov daa cmp (bad) mov pop add mov mov or inc dec bound roll cmc push mov dec dec mov mov mov ljmp pop adc sti xor daa call scas sub push rclb adc lret mov pop inc jg sub push cmp cltd adc (bad) or insb mov repnz jmp int3 cmp sub out cmp out les out cwtl cmp test pushf std adc inc into sub push mov cmp fsubs (bad) mov or pop add xchg sub scas mov mov pop jmp stos add xlat mov std mov loop xor jecxz adc sbbb push pop hlt push adc or cmpsl andb in nop notb pop jbe int3 mov push in pop mov imul fimull movb mov mov cmpsl test dec push push lods push dec mov mov aad xor add scas pushf scas add repz pop loopne out icebp fimull ja sub (bad) ljmp cli add loop out inc lahf cmp test sub adc ret push push push or pop lds into in sub inc xor popa js mov repnz push int jae icebp push sti out xchg or mov and loop in push fchs xchg das out mov cmpsl pop dec cmpsb pop add mov mov jae xchg jp in xor in mov pop and sub data16 push xor xlat mov xor (bad) fsubrs jg cld ror jg jg or out mov lods stc sub fwait ret ds or xor lret call jmp adc adc fiaddl mov dec sti lret sub adc mov sti adc aaa out or pop mov lds or ja jae sub fnstcw inc (bad) push cltd xor xlat mov adc or popf cmp dec loop inc pop test adc fs pop repnz or xlat inc jae lock shlb fisubr lret fxam mov and int3 lret dec jnp or pop mov add mov in push dec cli mov push push mov shrl pop rcrl fisubr lret push inc das aas pop xor outsb jns test pushl xor ret xlat gs and scas sbb cmp inc imul fldl lods cmc mov mov cmpsb mov push adc sbb out xor sti in jnp mov mov push adc int3 mov mov ret add inc ljmp sbb lods (bad) xchg or lret pushf shlb xchg jle stc or test shrb sahf aaa pop jno adc mov (bad) mov leave das sub (bad) mov iret jb adc rcrl cwtl (bad) pop inc sub (bad) mov lahf enter mov cli int push int3 stc or fs daa push mov stc sbb repnz sub cli mov (bad) xchg push xchg adc cs jp (bad) push dec sbb add push leave cmp imul adc mov push add ljmp aad mov jnp js adc jne or adc adc xchg add loop stos je mov into sub int das jmp or sub scas and add jbe dec mov cmpsl push add jae div mov jp and xchg adc lcall dec and xchg jne leave cmp cmp notl ret mov jb lock inc (bad) dec les stos in aas movsb jmp iret mov xor stc out xchg out jne test sub (bad) call out jne dec sub test xchg sbb imul mov fistp loopne test cli pop pop or cmp xor (bad) js out in in movsb cld ljmp das call pop (bad) xchg add add xchg out mov and cmp or jnp and xor inc push repnz push xor or mov xor das sub movb mov xor push das xchg jmp test (bad) dec idiv jge fyl2x imul dec hlt call ret adc hlt mov cltd mov pop sbb (bad) es mov jns sub and mov pop push push jb and mov xchg pop pop cmp fwait cmc pop inc stos dec jno jne movsb imul add or mov add push and xor mov push cltd sbb std push fnop mov mov scas shr jno sbb out fcompl mov sarb imul fs icebp mulb notb or mov cs mov hlt push ret aad stc pop sbb insl add xchg add cmp or jmp mov or xor dec adcl shr test pop sti enter (bad) push lret ret inc daa mov mov das add jmp mov jle lock (bad) xchg fnstenv or mov pop xor push loopne ds repnz or add aaa mov fldenv push je push aas cs stos je xor or jns add sub scas out dec leave out add and and (bad) ror jno test clc mov jne int sub jp adc shr push notb push xchg push sbb and xor fisttpll clc movsb pop scas daa fadds lds pushf inc cmp add fwait cli cmp (bad) cs mov scas pop ror pushf add loopne adc lahf inc incb dec inc push add mov mov stc xor mov add add outsl xchg scas mov or (bad) adc insb jl mov cld mov movsl idivb js mov jnp sub adc cli out aas sub shrb stc jbe das fiadd ljmp out and sub jns daa repz push add fistp xchg xlat sbb std lea mov xor stc jne lods pop (bad) mov in mov stc je sub push dec imul call sub lods push mov in outsb mov jae pop mov jmp je test out lods enter and push cs stc icebp sbb rorl call sub sub cmpsl sbb loop pop sub js leave xor lock (bad) out adc pop pop add scas lret stos insb sbb and dec push lods dec sbb aad push and jl lret inc sub inc ret push test idiv repz adc cmpsb fdivl jl push ja jbe sub out das notb pop or stos push sub std out (bad) pop or push or jbe cmp fstpt add in scas mov xchg ss (bad) xlat jmp (bad) jae cmp xor (bad) repz pop add jg push or pop dec or xchg push loope xchg in or sar xchg clc cmpsb pop adc into outsb hlt sub sub imul mov sub xchg ljmp dec sti mov fdivrl adc add jmp xor or push sub pushf gs sub dec mov or dec cmp dec mov sbb and out sahf add dec or add cmc fldcw std dec cmpsb dec sbb (bad) stos fsincos sub into adc sbb inc fs push les test adc sbb das mov popa movsl (bad) sbb push leave clc out pop mov cmp push (bad) jo jmp sub pop inc or dec out sub xor and subb adc and insb sub sbb rcrb cmp enter (bad) repz pop mov and das xor inc leave lcall nop daa mov push (bad) mov call dec imull sarl pop or push jbe push dec cmp pop adc sahf adc stos jo xor cmp dec mov lcall repz test in fsubrs adc cmp xor or out sub xchg pop mov mov pop scas fiadd in sbb xor sbb lock jae or aad dec xchg and adc outsb sub dec leave cmpb idivl jmp sub add jge jmp imul dec dec mov adc adc jmp mov push popf dec push add add mov (bad) fistp mov inc or jo adc cs int mov adc add mov scas lret enterw pop lret out test repz data16 das xchg rorl fildll cmpsl adc (bad) das push fisttpll mov (bad) cmp pop bound lret mov cmpsb mov ficom dec out mov out push xchg enter inc and aaa mov call fisubrl idivl cli sti jne cli cltd in dec lods jle mov arpl pop add (bad) dec and ds sub adc rol ljmp sub sub mov (bad) push sub adc mov push add cmp mov xlat pushl sub jb xor jno or (bad) jne mov xchg inc leave and jg out pop xor loope cmp test dec mov popf fist xchg shrb into ret xor add cmp and cmp xorl cltd lahf or sub mov jb jmp stc imull sub mov clc stos loop shlb mov cmp mov ss call pop fstps popa mov in adc fnsave and rcll hlt in enter xor cmp pop add mov sub mov mov add aad cmp sti add jecxz sbb leave cmp test jmp into xor insb leave je ret pop stc (bad) pusha movsl and xor nop xor sti je popf fbstp sbb repz mov aaa test (bad) das mov pop push or sarl mov cmp add pop and pop xchg aaa pop (bad) (bad) leave sti add icebp cmp sub out lahf pop mov inc inc push adc mov and out dec jno cmpsl cwtl dec test dec cwtl sub inc xchg rcrl icebp add push dec loopne xor lret push mov xlat js xchg dec hlt mov lods les shrl lahf push iret cmpsb sub add fiadd call pop or lods and mov cmp pushf scas fimul mov outsb adc pop cmp into pushf data16 cmp push outsb jo loope pop add jb mov cmp push (bad) dec (bad) cmp int3 cltd dec cmp pop jg cli repz (bad) sbb and adc popf jns scas pop or movsl jns imul xlat add sub xor scas mov pop mov mov enter ja imul mov pop mov mov adc data16 icebp ret imul (bad) push xor mov sub stc jge leave mov push push pop aam pop mov adc sub clc or bound (bad) jg outsl cmpsb fsubs out pslld mov xlat inc aad out and add push aaa mov or lock sti dec push (bad) mov mov ja loope or out dec sti pushf movsb negb push sub mov das sub jb mov movsb xchg add pop pop subb jno and out les mov xchg dec jbe adc test test dec mov add lcall pushf add inc dec sti (bad) push xchg mov das xor stc jg sub or addr16 leave xlat push xor bound ret sbb sub mov dec sub lods jmp daa and test dec arpl stos mov sub and mov stc mov dec clc mov mov mov stc mov ret in sbb inc aas js (bad) and (bad) cmc stc push dec fdivrl rorl dec jbe pusha (bad) or fldln2 dec data16 shlb mov add cli and mov in pop fdivrs push inc xor xchg jle push clc and dec cwtl ret push mov popf xchg stc popf (bad) fsts scas cwtl mov jg movsb jnp popf pop mov lock jge lret adc mov testl pop xchg leave xchg push mov mov mov dec leave add clc sub aas inc inc rcrl sub mov push jnp xchg (bad) push and bound shl popf hlt test stos daa sub mov test movsb inc test mov dec iret fsubr out inc lret push dec mov imul push imul xchg dec mov test out inc mov xchg data16 mov pop outsb mov or inc jp mov pushf add and push int3 mov ss mov xlat xchg ljmp or sub out aad inc lds and mov inc mov into cmp lret loope lds das cwtl cs pop and mov ret (bad) aaa mov sbb sbb repz ficoml (bad) adc bound mov inc cmp icebp jmp out sub ret in and ja sarb popf dec add out sbb push lret out fistp dec repnz cmp cwtl sub pop and add xchg adc push negl adcb xchg fsts push ret jge cwtl scas enter and sarb mov mov repz jle enter (bad) adc mov push sub (bad) (bad) cs or leave add das pop cwtl inc jmp loope fldenv mov jnp inc cld fisttpll sbb (bad) sub out mov (bad) repnz xchg pop sub jno and rcrl or leave (bad) dec fwait dec idiv clc in mov sbb clc cmp lock stos cmpsl inc dec stos and add adc xchg repnz xchg rclb jbe mov sbb xchg mov dec idivb test out mov jecxz cwtl mov xchg xchg ret push js jg scas repz pusha jo sti mov push das repnz xchg int3 in xchg incb loop sub leave and lea and cmp scas jno lret and les push scas jecxz pop icebp pop popf arpl loope sub pushf (bad) xchg into mov dec stos cwtl lods scas mov rolb pop cmp jle mov pushf dec mov dec dec call jmp cmp out pop aaa dec cmc shll mov or repnz (bad) stos fisttpll int3 or adc roll mov stc sub mov dec repnz sub add (bad) mov out lock lds or or insb or hlt pop imul repnz shlb push in in lret fisubr push cmp lds xor or sub jecxz dec (bad) push inc out enter rclb xor mov xor movb sub repnz call in mov pop add mov mov add int3 (bad) mov fimul mov (bad) mull fstpt xchg mov or fldl2e popf or lret cmp stos repz xlat mov (bad) (bad) (bad) movsl inc je push push cs fs mov mov es clc fisttpll sahf rorb xor and xorl mov jmp pop mov pop sbb pop adc movl lods or sub cmp imul inc sbb mov push dec mov push mov addl add push mov xor cvtdq2ps xor cmp nop fiaddl lret jp sbb push jns movsb ror idivl out add insl sub and xor pop add fadds jge dec pop add xchg (bad) mov jmp or inc push or ljmp rcrl add jg fist insb sti outsl ja cli xor enter inc pop add push mov icebp mov adc sahf jne push aaa jbe inc sub mov ret cwtl dec push and sub xchg je pop out je inc repz push mov mov pop or repz pop andl aam clc push mov push jg mov rorb fucomp or pop inc rclb adc out je or xor xchg mov add mov adc (bad) push mov sub add aad inc xchg in ret push clc xor pop adc add adc lock jae call sub cmp das sti sub push jl xchg in mov (bad) or jmp lret imul repnz cmp fldl loopne pop pop jmp scas (bad) mov scas hlt dec sbb jno jns sub adc xor mov dec mov mov pop imul lods icebp aas cmpsb xor roll bound or fisttp loope movb inc subb divb xor lret and stc dec add mov scas repz cmpsl cwtl cmp add sbb das inc (bad) in movsl (bad) or sub fsts in xchg outsb daa out fcompl (bad) outsl mov add ret mov cwtl or jp push out ret ficompl push xor sub lds (bad) inc mov adc add or dec rclb (bad) inc leave mov inc add and mov lahf incb clc xor je pop out and adc sub mov std xor mov jecxz mov repnz jne xor jmp stos aas xor dec pop xor in xchg leave rclb mov pop and movsb clc out sar jno or jl xchg dec add jmp (bad) cmp lret pushf (bad) pop xchg cmp mov cmpsb dec xchg dec xor and or and add adc iret cld jae out jno add sub test incb shrl xor xlat mov pop jbe int3 jns mov push sub or ljmp pop inc adc addr16 and mov shl pop insl pop rcrl rorl sbb jno cmc push cwtl add mov and xor lea jl pop int3 xchg add pop jg push mov stos lcall mov clc les lret jecxz inc adc or out cli repnz mov (bad) dec and mov mov jae test xchg jae imul cmp ss and dec jno and and mov xchg jne aas in sub push cmp inc jno lock out repnz ja test sub stos pop call stos stos mov xchg mov ds decb mov inc push bound je jmp or sbb pop mov bnd cs dec rcrl jae out xchg jo mov mov shl jecxz or iret mov or xor loop sti cmp sub (bad) sub fcomps ret mov cmp (bad) cmp and or sub push gs jmp adc lods push ret sub pop and out movb iret add in fistp out cld or js push pop rclb testb fs lret notb sub mov mov out push movsl (bad) cmp insl cmpsl xchg out and jbe (bad) bound shr movsl sbb xchg call lds inc adc jmp lret and jbe push out popl pushf test jl loopne rorl lret and leave add lcall bound (bad) add xlat cltd xchg adc mov or int3 rorb std imul pop add add lds lret push mov mov dec ret xchg leave jg insb jmp into add sub movsb ljmp dec adc fisub lret hlt aaa pop mov mov pop popa inc ljmp out and stc movsl or inc inc jp movsb push es adc add add test jecxz push mov dec stc scas mov pop mov xor dec into sub test sbb icebp scas aas repnz mov loop pop (bad) pop dec outsb cli lret xchg xor decb inc (bad) hlt pop xor adc loop mov push pop lret xchg iret stos sub add xor mov push cmp mov cwtl fyl2xp1 (bad) pop (bad) lahf pushf das dec sub das test xlat mov decb in repz pushf faddl pop pop mov jmp mov xor sbb sub lock xchg aam shlb scas xor xlat ja insb push sbb and and xor jg aaa rclb add add xlat jmp lock dec push out adc andb xor lahf jle push pop lds stos or in cld imul mov cld loop call pop xor cmp ficoml das in xchg daa movl test repz adc or jmp xor popf test (bad) movsl test repnz add push push mov inc out aas pop mov and icebp xchg (bad) imul lcall out xchg push aaa mov daa jb xchg fwait ds jle push xchg pcmpeqw hlt sarl aas mov cmp adc mov je cli fs mov push fs scas rol mov xor loope jg or into xchg xor mov (bad) push test sub ret in xchg lret in ljmp sti lret xor push in xchg loop xchg add aam push xor and cmp (bad) cmpsl mov lcall mov push add mov inc dec clc cwtl ret mov xlat dec ret xchg fisubr sti xchg adc out dec test scas sub (bad) fnstcw cbtw dec cmp xorb lret data16 jp add xor mov xchg sbb mov or sub inc mov fmull je mov aaa add pop cmc dec add xor test frstor test push call out or adc xor fsubs pop call aaa out mov shrb pop sbb clc std (bad) pop mov mov cld shrl (bad) movsl adc adc cmp cmp push xchg xlat xor dec insb jl das add sub lret int pop mov adc and xor sub sub add fwait hlt scas push in add or stc outsl call mov daa ficom push dec mov int3 jno test inc sbb mov mov arpl loop test mov pop dec cmp (bad) insb (bad) cmp insb adc add sub sbb dec sub mov test fisubl ja leave xchg idivb frstor movsb jle iret cmp and add push adc leave out (bad) and clc out iret (bad) sub xor dec fisubr xchg dec pop loop test shrb jae das out pop icebp fsubrs ljmp fdivrs ficomp lea ds xlat adc js xchg je push hlt out xlat inc or push out and sub cld out in push icebp aad and gs icebp lret cwtl xchg stos cmpsb js out je mov or sub in mov ret and add xor rcl pop std inc mov pop imul add pop aas pop dec sarb es xor adc ljmp mov call (bad) mov stos push repnz mov xchg xor cmc test cwtl pop xor leave push jle and (bad) lret fldcw or adc dec daa sbb pop bound push or jg inc dec (bad) call fcompl add imul repz pop dec adc adc ja imul daa icebp icebp mov pop push fsubl sub cmp dec mov je mov pop and mov daa cmpsb outsl xor mov push movb sub adc lock dec loope sub adc dec outsb out inc call push pop xor mov inc cmpsb xchg jns ret fbld popf cmpsl sbb insb mov or sbb jne repz mov and lock aam imul xchg xor leave inc sarl (bad) repnz repz or mov sub and fsts add push js pop incl cmpsb dec fcoms sub stc mov add mov push xlat dec and stos xchg lds outsb adc push (bad) pop out pop inc xchg cmp adc xor clc push mull dec cwtl xor and inc jg ljmp xor clc fidivl test fsubrs adc xchg or andl repnz je stc out cs pushf out cltd (bad) cmp lret add sbb xchg sbb xchg and scas xor shrb pop iret xchg push fs gs xor stos popa add add loopne jl (bad) ljmp in push mov ret push jl pop fmull imul cli bound repz mov xor adc (bad) int3 lret or inc daa xor fcomip xor pop dec adc rol add add or pop cltd mov dec push add outsb into cmp (bad) fisubr pop outsb dec mov out call jecxz jbe cmpsb pop and add or shr mov pop mov inc mov push das (bad) insl imul sub decb sub lods inc ljmp cmpsl adc adc idivl (bad) fstpl dec addb mov pop cmpsl add into add movsl and fldenv movsl mov inc inc xchg add cmp jg inc repz adc push int3 loop cmpsb pop dec lret xor and xchg pop and pop inc std fstl pushf xchg pop mov pop cmp ja loope sub popa pushf sub and mov arpl es stc push jmp lret add sub mov sub movsb jno jecxz adc cmp add ja add or fnstcw leave push test xorps mov lret daa rclb push mov sbb lods adc and pop les (bad) push out jg aas lods fisttp lcall lret test xor scas call add int3 push lds aas imul and fstps push xchg imull leave mov les xchg shll adc sbb cmp jb mov jl incl sub adc cltd ja pop jle add imul test lret js and lods test out repnz (bad) bound leave aad movsl mov cltd insb sbb cmp jo repnz lea jmp jo ret lahf sub test mov sbb test add roll jmp mov sub cmp pushf mov jnp int3 hlt mov sqrtps mov cmp sub or scas and (bad) fidiv push or cli add jbe leave mov push pop dec aam or lods dec fwait jge xchg les add cltd rep ret jne inc test cld jnp in mov aas cld je into jp sub mov mov jns mov xchg out int adc or ret scas popf outsb jb sbb adcl or add mov daa or cmp lret enter add addr16 (bad) push mov pop xor dec js mov sub add imul mov mov sub mov pop int3 imul lret xchg jae dec jne out je and popa push adc xchg test testb adcl je imul das add enter ret mov icebp inc mov dec xchg pop jecxz jmp mov xchg jmp jo lahf xor icebp ficoml ret mov mov loope cmp mov (bad) xor data16 das jne pop repnz dec lcall pop sub in cmp int3 scas or negb (bad) push repz jge xchg push hlt in xchg out mov sbb rorl mov rorb ret sbb sti add or sarl pop pusha iret decl int3 mov add sbb pop rcl pop sub fidiv pushf mov push loop push stc pop push dec push dec adc enter adc out mov xchg push adc (bad) xor stos mov pop je int cmp xchg adc xor mov ds or idivl ljmp pop mov sub test or add (bad) sub lret add (bad) sti mov vcomiss (bad) sbb test mov push jge push lret push loop xlat mov pop mov stos je clc (bad) xlat cli cmp fstpt mov or iret mov dec mov out mov pop std inc les das or inc lock sub push in sbb ret xchg lock inc push add popa das or into push out inc mov and (bad) cmpsl out inc cli and jl gs and jg mov js das out jno popl jp jne icebp sub (bad) mov cltd std and mov test ss sub movsb cwtl ror push add jmp cld adc mov adc lock push cmpsl dec inc pop shlb mov adc fxch scas ret jns or pop (bad) je add (bad) dec mov push outsb clc lods mov xchg xor adc movsb jne scas mov inc mov mov lock loopne sti rclb dec and mov inc sub lret mov jne (bad) in popa je xor loop nop adc out in push add mov icebp push popf cli ds lds xor mov sub cmpsb imul icebp xchg mov inc popa add mov cwtl pushf pop mov ljmp pop fcoml dec lock pushf loope inc add or xchg add xor popf add daa mov ret cli lret movzwl sti out cli jecxz jle pop (bad) or lods cmp mov aam mov dec add into ja or subb lods repnz jg push or ficomp add xchg mov push cmp xchg sub fcomps bound outsl ret rorb xor out sub or movsl add jmp imul stos cmpsb push inc dec and adc cmpsb dec jno clc mov inc or nop fldt push pop mov int3 mov fistpll push mov call mul ret iret push je daa into in and (bad) repnz dec std inc xor jmp (bad) stos testl and lret icebp mov cmp cli xor xchg cld sbb repz cmp add out mov imulb inc imul out fdivrs push mov and js test sbb and fldpi xor repnz mov adc pop pop mov ljmp decl fist jge vpaddd cltd push jo sbb push ljmp jns les ss notl pop cmpsl mov jg or int3 push mov rorb pusha aam insb jle jnp or mov xlat div das sub (bad) dec in push lret adc or or sti fisubr push out sub out xlat test jne shrl loopne xor lock xor cs stos dec cli mov dec in mov or push push pop xor pop or jbe lods outsb cmpb sub adc decb jl loop dec fimul xor ss push add and xchg mov or aad push scas lds adc test mov xor adc add test cli and lret repnz das mov (bad) jne sbb cltd or mov (bad) lods movsb ja push loopne stos sti repz xchg pusha ret pop cmpsb and mov sub ret in fldcw call push or lods dec dec push xchg lods sbb iret (bad) mul and outsb push mov and fldl adc jno loope aas sub jg shrl popa add xchg fucomi inc xor test lahf jne mov (bad) xchg enter insl pushf rcrb call mov scas loop pop push push rcrl add out and dec cmc (bad) lock insb sti popf xchg or fdivrs adc pop cmp add xchg adc fdivs fdivs (bad) iret imul push inc insl or sub aas insl and mov into scas lret and jp mov inc mov sbb cmpb inc in jne or sub (bad) imul fisubrl stc pop adc sbb orb daa into out jecxz sub dec lods stos lret sbb sub popf gs daa pop lds mov jo jae insb daa mov jnp sub pop (bad) jnp out pop or paddd adc test fimull inc aad mov call dec add sbb das xor fisttp cmpsb lcall xchg and test das andb cltd mov scas (bad) (bad) jge cmpsl push shll stc in in (bad) mov outsb sbb decb call pusha movl lret cmp outsl in pop leave jg mov add loope aad imul call xor mov xor mov out mov mov dec popa das out jbe adc adc popf dec jnp dec stos jecxz negl fdivr mov aas test movsb pop jl pmuludq scas mov dec das inc push push xchg and das sub and cmpsb cmp (bad) icebp sbb into jo mov std mov or mov add out pop rclb ds icebp mov push mov jl xchg push or shr or rcrl adc fiaddl sub xchg fsubs mov out pop pushf nop add loopne push add mov push out cmp icebp add add sar pop in fidivl shll lea and or mov aad lds mov outsl call xchg fst addr16 xlat dec movl jb fidiv jle icebp jb cmpsb imul fsubl fstl dec mov cld lock addr16 jb sbb jb adc jle adc jno add cmp pushf or dec adc push mov xlat mov xchg push mov lret out sarl mov pop into push xchg adc ljmp mov mov (bad) cmp in xor ret and dec pop push jecxz rorl shll jae pop or mov shrb pop mov sub xlat fnclex iret or into dec mov adc sti sub and out sub mov fsubl push mov sbb adc add ss iret mov lcall sar lret test or (bad) xor push add and cmc fs testl xor sub sbb enter sahf xor fs xchg jns imul mov mov add hlt pop fadds xor sub xlat mov xor jp stos lret mov ds div cwtl dec fcoms mov inc (bad) mov scas jg in xchg adc arpl fld adc out and inc pop mov or xor jge and sarl sub cltd mov mov xchg mov cmpsb nop arpl xchg jge movsl aaa leave mov sub xor sarl je in (bad) fldpi jne mov sbb push xchg push (bad) xchg inc inc sarl lret out popf add fdivs pop adc xchg test les icebp in lret xchg stos push adc xor cltd shrl sti mov xor lock pop push lahf jp mov aad or inc ret scas je negb and push adc rcr ret (bad) fist sbb xchg push je imul imul (bad) mov pop mov jmp movsl pop frstor repz cmp and jg xchg xchg comiss clc (bad) push pop repz xor push test bound dec gs jp jl lds pop mov std mov push pop xor ja inc push mov adc pop cmpsl add push pusha rolb jmp add add repnz pop jle and mov cmc xor adc in pop sub jg jbe add xchg lret bound pop push or cmc xchg ljmp inc hlt cmpsb arpl xor fwait sbb mov (bad) lock sub test mov push push xchg xor sti fbld pusha daa les (bad) imulb mov js bnd pop mov pop add xchg xchg cmpsl xchg pop inc pop mov jmp mov pop or rorl das imull add out out sub lea mov mov sbb mov xor (bad) insb dec je push and fsubl daa mov sub mov (bad) testb inc rorl rorl lret inc mov fisttpl jno bound push inc dec mov icebp jl inc dec popf insb das mov out stos or (bad) ror push jle mov lods and gs and add fs mov and rorb xor lahf pop int jge insb mov push popf lock and mov les xor incl rcl scas ficoml ss dec lret mov inc add push pop jae xchg jecxz pop sub in jb idivl or xchg por mov pop daa mov (bad) clc pop mull inc sahf scas stc pop movl sti cmp pop lret mov mov (bad) imull std mov and inc pop jbe or push or (bad) jne or mov and push out adc mov mov repnz pop xor fwait pop repz leave jbe addr16 rcrl fist repz pushaw call mov dec push mov (bad) into out mov mov push mov xchg cmovle stc popl push mov xor xor aad hlt dec mov pop test cltd loope mov cmp dec cmp leave fistp fsubl xor lahf iret sub push imul adc add dec xlat mov (bad) cld xor jo xchg sub cmp lret arpl inc mov sub mov nop mov xchg in (bad) and or rolb mov jae and lret stos ret enter push lods out test fadd bnd dec mov or (bad) in (bad) xchg mov dec xchg movsl test mov fcoms aaa or sbb ret or stos inc mov jle repnz xor iret lret sahf add out test mov xchg and sahf jns aam das repnz xchg lcall mov repz aam roll in inc mov repz decl out idivb mov add add mov xchg mov repz xchg add lods pop mov xor push cmc mov dec cmp adc xchg mov stos mov sub xchg ret cmp imul inc mov test shll push xchg add sub aad rcrl push and dec aas shlb mov into rorl sbb scas adc adcl jbe xchg scas mov (bad) lret inc aas or pop add jae pop cmp mov ds es and bound mov pop push sti mov das dec in or xchg fs popf fiadd sbb leave sub shrl icebp scas lret xor or jo xchg inc iret sub sub xchg imul aas repz mov sub mov adc xor enter jmp or adc jno dec pop push and fistpl mov or xor pop cmp movsb stos push data16 or xchg ja fldenv pushf enter dec out inc xchg cmc mov cld mov sub xchg push sbb dec or dec outsb test mov push out lea mov pop adc xchg jge cwtl sub pop mov sbb pop mov and sub mov cwtl mov lea cmpsb ds fidivr dec rcrl imul pop adc inc clc mov xchg rclb (bad) jg in repnz jge push push xchg or fsubrl xchg pop and mov xchg ret shll mov out or xlat cltd js lahf mov push fdivrp push pop ret scas push push dec sbb cmp push fdivl repz (bad) daa idivb xor jl or daa cmpsb mov lahf fistl add fmuls stos or into jg leave dec jecxz pop in (bad) lret andl sub or sub ljmp mov mov cmp in mov ljmp out cmp fstl popf popf pop or insl das ljmp mov sub mov (bad) repnz fdivrl and (bad) cmpb movsb scas loop das into in xchg (bad) jecxz adc or je (bad) cmp nop jnp divl lret ljmp (bad) enter mov push or xchg int3 (bad) into add (bad) ret cmp pop out inc cmp jno in in shr xlat jns insb sub xor or mov sub pop mov xor int3 int mov xor ljmp cmpl mov dec dec inc fidivrl lcall fwait pop stos fs fsubs repnz adc add xchg out leave sbb jl imul imul push jae mov daa fist lock add sub push and fistl movsl jecxz mov add xchg ljmp xchg (bad) out lea push xor das or fimul add aad fdivrs lds fstl fisubl push push adc sub pushw push es lea loop loopne into pop sub cwtl (bad) inc or (bad) out fdivrs dec lret (bad) ret inc xchg (bad) push mov inc cmp add mov mov leave xor bnd mov jns mov aad cli mov bound add xor ja or mov cmp xor fwait cmp and clc nop sarb inc hlt adc jae roll cmp xchg mov sub std jp out cmp mov shrb stc punpcklwd icebp and mov ljmp mov nop and mov data16 jl imul (bad) (bad) jp sub cmp outsl lods outsb leave fisub sub ret out lret sahf pop mov cmp je mov jne mov insb out je sar lcall daa cmc clc xchg pop or jge aad mov add insb mov xor sub mov rep call xor mov pop int3 sbb pop or push das and iret inc iret add mov or adc inc sub dec mov pop sub daa icebp pushf dec cmc rcll test dec aaa (bad) and sbb dec add mov fildll add pop and fstps xchg mov fndisi(8087 cmp lahf pop fxch jno andl icebp shrl sub ljmp pushl dec push sbb loope test movsb (bad) xor test mov pop add mov sub mov sbb pushf cmp pop adc pop mov mov or mov push ds ret sti lock fiaddl nop adc notl pusha pop mov mov sti fcoml lret lret and and stos bound loop pop jle leave jmp jmp in lret clc cs shr mov mov cmpsb sub push nop xchg adc xor daa mov jmp daa or fldl pop out repnz and aad mov daa out or pop inc nop mov lock bound adc loopne in in push ss cld popf leave pop inc mov shlb imul pop movsl adc insb xchg add mov jb inc jge adc xor mov sti je add add push (bad) imul daa xchg stos repz push and aaa jae shlb adc push jns push mov push out add mov add (bad) outsb add fwait movl xor stos or xchg jno xchg enter loope pop inc fisubr inc cmp or pop lock sarl sub adc into mov cld shl pop sub mov ja popf stc aaa imul pusha dec mov lea sub sub inc idivb test bnd sub and sub jno inc fnstcw and mov sub add test fsts mov imul add xlat mov cmc imul and sub jecxz nop dec mov add in add mov pop cmpsb in adc rcll cmp xor or sbb pop xor out dec ds repz and aam lret pop or sub ja and cmp dec jns movsl fsub push lahf mov (bad) mov adc or mov and lret enter inc ret aas mov add pop sti mov lock sub in dec ja (bad) in call aaa repz and xchg shll ljmp cmp pushw or neg pop (bad) add sbb inc pop xchg inc dec cli jo xor cmp mov and mov (bad) sub sub dec lods sub int rorl push pop test ret (bad) jge (bad) daa xor aad inc fisubl mov scas jecxz mov out daa add fldl pop mov jge xchg mov adc loop xchg mov pop and sub and xor add push add xchg push sub jbe jmp mov inc mov pop adc lods cmp and lds dec mov in jl sub outsb pop adc out sub (bad) cmpsl iret add mov pop jns iret ja imul loope sarb pushl xor int lods jmp sub (bad) sub or cld aas adc mov insb push push notl cmpsb in fcomps test mov mov bound push repz sub mov ret pop out fsubrl and push jp ja ds cwtl jl loopne roll mov lods sub rcr lods (bad) sbb and xor mov icebp adc mov xor data16 add mov jp inc xlat lret data16 push ss ljmp notb dec cmp and add inc xor fisttpl sub sub test mov mov inc es add add lods stos sub sub sub scas bound jle fs add shll (bad) mov or les adc scas fsubs xor mov outsb movsb inc idivl movsl mov (bad) cmpsb sbb movsb add jle xchg add nop mov pop rcrb jmp lods fldenv ret stc xor and scas jne mov fs jne mov pop sar in and hlt cmc pop cltd push divl and (bad) in adc cli mov lods lock lahf mov push adc sub outsb out pop (bad) cmp je shrl jb lods sub rorb add and lahf icebp sub (bad) and (bad) cmp or mov dec inc out pop sbb clc or xor mov xchg jmp fisubrl adc sub sub xchg gs aad ss jg or ret in rcll cmp dec outsl sub jle jmp pushf dec andb dec xor adc sub xchg and loope (bad) pop scas je or cmp fs mov inc push in cmp out mov push cmp jg je ret xchg out dec in rorb sbb lret push mov sarl adc and mov (bad) cmp push shr xchg mov jne shl fnstsw repz rol (bad) mov test sbb jb jg stos dec cltd add push mov mov push mov bound sub and clc mov (bad) push imul mov sub aas aam pop inc ror mov ret pop lahf fmuls mov cmp out mov stc add sub mov mov dec stos xor xor sub arpl dec xor stos and and sub sub ficom dec out pop clc (bad) sub es inc sbb and push sub pop stos xor ret pop mov pop lret jne fmuls bound sti lret sub push sub mov xchg or push dec adc sub push mov pop push dec pop dec fs push (bad) jle dec dec add test in and stc dec mov and push (bad) pushf jne mov aas dec sbb inc or negb fimull or jmp sahf push mov jg loopne inc sub out popf jb jmp inc adc mov stc rcrl xor mov sub popa sub inc lahf and xchg nop fisttpl mov xchg in cs div push fimull sarl or mov jmp pop shrb xchg enter mov sub cmpsl test inc dec sub iret or (bad) sub add lahf cwtl dec mov ds daa fcomps mov lret sbb test lret add mov push mov cmc lcall inc test jbe and or inc pop movzbl ja push and (bad) leave mov jge cmp mov adc and add hlt push (bad) lret ret push or xor les jne cmpb mov and cmpsb push dec in jg sti push or dec in daa xor inc mov jl inc dec out daa repz dec jb dec jg sbb (bad) popf push ljmp idivb or clc sub pop pop jecxz jle stos addr16 (bad) mov mov push xchg mov ret cmp leave cltd ss mov aad xchg push rorb mov pop xor xor dec push and daa jecxz push into mov ljmp mov pop test in out imul xchg bound test or sub fwait pop push xlat mov xrelease pop push xor pop insb lahf xor xchg (bad) ljmp sti (bad) sub xor push sub pop pop mov pushf andb and add test js mov popf pop mov cwtl cs jg xchg pop mov or fisttpl inc sub dec aam mov sub cmp lea leave mov dec mov cmp jmp mov aaa mov sti lea mov jg ds mov push mov lock sub xchg not pushf loope popf pop push lock pop test pop push pop add leave push push pop lahf pop inc cmp push sahf mov dec cmp mov ret adc jo enter repnz cmc mov roll or fstps or sti shlb xchg inc mov adc cmp mov sar jg (bad) mov push jbe sbb mov nop push dec push pop loopne mov xor jg ss jno adc out pusha sub pop and mov push mov ljmp xchg add pushf xor in repnz pop sub xchg pop inc dec mov popf ja mov sarl mov mov push inc xchg push insb add mov inc xor pop xchg xor jge fs notl inc in shl in addr16 mov sub ret or or push in loopne rcrl mov jnp in cmp outsl cmp pop int sahf out xor lods in dec fiadd jno lret jg inc mov and out dec mov sti add lret insl loopne mov push add pop and mov in paddusw in or pop out sub push dec aad fnstcw push (bad) push add cltd into push inc pop add pop mov cwtl fmulp mov shr inc jmp (bad) or mov or mov push dec mov sub fwait outsb add lret ja push data16 ret ljmp je mov inc daa ret jo adc (bad) mov icebp jg sub adc mov movsb inc mov add fs shrl clc xor sbb xlat cmp aam pushf inc dec repnz mov jl lock roll movsl pop cltd mov jge leave mov icebp sahf cli fs mov add enter mov fldt or out xchg gs xchg fimul js cmp add cld xchg mov and mov mov or mov pop push jle loop movsb sbb mov ret lods rol mov test or lret mov cltd icebp shrl jo xor or jl sbb stos xor add daa mov cltd jl (bad) (bad) sbb iret subb repz insl daa (bad) add xor cli je fs mov push xor nop jb lret movsl aam out mov inc stos loop cs fcmove push jns lods rclb and adc xchg jge mov mov pop call cmp sub and enter sahf imul mov sbb cmp loope (bad) scas lret inc ja mov xchg rolb into push add sbb (bad) lret outsl xchg mulb lds mov mov data16 pop aas or push push in test lods test out push addr16 ret and (bad) iret mov push push add ljmp (bad) ret push dec aas cmpsb inc das repnz mov dec loop int jg adc imul and cli roll adc mov (bad) xchg xchg repnz (bad) out sub cmpsb shr aaa ss mov push cli mov jb sbb inc pop push imulb jo fbstp and and iret and fsubr test sub sub push shl pop iret mov adc and cwtl adc inc idiv dec mov test mov ret lea imul pop into sub pop outsl adc fisubl mulb xchg fisubrl add (bad) mov les movsb hlt add jo sti or into sub andb into js inc std fxch bound sub push pop pusha ficom sarl adc out mov leave cmp mov test repnz adc cwtl and shlb push adc mov lahf sbb ret add xor icebp push in test in fcomps pop clc mov jecxz xchg out je mov mov mov popa daa sub xor sub mov xchg cmc adc movzbl pop sub sub pusha and sbb fisttp cmp cmp outsb xchg in cwtl imul lds mov pop jae and adc pop pushf mov lret (bad) pop je repz negl (bad) push outsl dec call add mov pop call jle pop ljmp dec xor lcall add pushl mov clc push mov xchg aad cltd popf pop stc dec cmpsb stc sub push dec and outsb stc pop xchg mov pop lahf xchg mov pop fiaddl inc sub pushf inc inc jo das xor mov jmp inc cli mov xchg scas dec xchg subb (bad) ja inc pop fbstp outsb xlat xor imull int jnp inc stos test fadd loop pushf mov test sub dec fisubr sub (bad) data16 xor mov jl sbb (bad) jb cli adc or in xlat push mov (bad) xor rol repnz ffree repnz call xchg jmp arpl loope jmp (bad) pop movsb arpl fcoms xor jns dec or addr16 ds xlat xor mov leave loope into mov xor lcall pop lahf je rcl frstor pop in lods lock ds (bad) lcall ss dec clc xor push in cmp add popa scas mov cmp lcall mov (bad) ret adc out fdivs sub and and push push jp mov js es mov pop mov push push and push push and call cmp inc and mov sbb cltd xor cli jb loop hlt or imul adc and ret add sub iret push ljmp fisub nop xor outsb mov in xchg mov mov sbb xor or pop push inc mov fdivs (bad) jno push pop imul fidivrl fstl mov loopne dec xor pop shrl (bad) loope outsl fs pop sub adc dec jmp adc pop psllq add iret sub mov push imul inc xor pop int3 je inc (bad) inc xchg or fildl cmp or dec repz scas jecxz cld push rcll sub cmpsb pop repnz and dec (bad) cmp mov sub jl adc sti mov adc cmc lahf xchg jbe mov pop (bad) in or ds ja test mov add mov mov add jmp mov xchg enter xchg iret cli mov cmp mov pop test (bad) cmpsl push pop inc pop (bad) xor gs js daa sbb ljmp data16 push (bad) enter ficomp mov mov std loope repz mov sub mov push mov lret adc outsl bound decl mov clc pop (bad) es movsl jl out jmp ja inc cmc aas (bad) push outsl xchg mov and rcl or sar dec jne jl sbb and dec loope lret fnsave aaa xor repz arpl pushl (bad) sti mov add stos repz out pop leave adc ret aas test jmp es cmp lods jle out or popf mov pop mov iret mov leave sub add mov (bad) scas lret cmp out sbb jp xor jnp cmp cld push pop out scas sub mov notl mov mov (bad) insl or fsubrl in addr16 mov xor pop aam daa cmp push mov int3 cmp push sarb pop mov dec adc sub xchg sub subl inc jns and (bad) adc rcr sub pop jae sub push push mov sub push inc int3 loop repz scas adc inc (bad) dec out rorb inc xchg jmp arpl ficom leave arpl inc xor jmp mov pop xchg dec nop sub in mov loope popa xor pop cs cmpsb mov loope jecxz jmp mov aaa jmp outsl aad in lahf jle gs jg sbbl rclb ds and dec jl mov or sub push jp sub into loop addl mov xchg call (bad) sub mov repnz ror adc aad lock or jns xchg lret (bad) roll into pop xor mov fmul xor (bad) cmp or and rcrl std daa sarb sbb adc into add loop mov stos out sub bound std push ja out decb mov fisubrl out lahf lock test xor lret adc pop xchg xchg push jp rcll enter fs push out dec clc mov lods (bad) or xor lods aaa dec test movsb cwtl and je (bad) pop and mov negl into ret outsb fnstenv adc call mov repnz clc cmc loope into jp int3 and mov cmp sub out add sbb or dec rorb pop addr16 sbb and lret sbb lret xor lods (bad) leave cmp pop jmp (bad) sbb cmp stc pop roll mov add and jmp dec cmpsl neg mov or push loope divb sbb pop (bad) mov and add add les ret add mov mov pop and loopne sti mov xchg mov or out xchg lock (bad) jmp xor (bad) lock xchg gs fcmovnu daa rcrl stos and (bad) mov xchg xor stos shl aas sub dec or mov gs icebp mov out stos adc push push jmp push push leave repz icebp pop outsl test sub cmp lgs dec push xchg xor jmp imul fisttp adc mov js add xchg icebp (bad) repnz xor bound jns pushf das or or idiv dec (bad) cli xchg aam stos repnz (bad) aas loop jle pop imulb pop or cwtl xor mov xchg imul (bad) xor dec mov mov mov jnp test xchg jne cltd (bad) mov inc mov ds icebp sub sbb push cmpsb adc leave dec fldpi lea leave mov leave xorb add or ror add lods mov sbb loope mov js mov and cltd ja das test (bad) and dec sbbb and sub fadds fld inc push jl neg (bad) mov mov fmull mov repnz inc adc stos lret jbe int orb clc andl inc mov stos popa cmpsl sbb call lods movsl dec andb cmpsl mov test pop mov stos sub sbb mov and aaa popf in lock push or (bad) lock out xchg jg mov jecxz lcall mov or dec mov mov mov mov sbb and push fnsave ja cli das ss dec add daa cld xor idivl jnp subl in or mov cmp imul pop or lds std sti loop orl pusha jge ds cmp or out add add cmc sahf lret das xlat mov sub outsb xor int movsl cmp test mov xor or dec adc fsubrs inc and imul add push add pop fs sbb sti jnp push mov fs mov add rcrb mov push aas loopne pop sbb icebp pop sub repz test ljmp or lcall jg pop add negl push xorb (bad) sub xchg sti xchg ficom cli aaa lock sbb lret sbb or adc loop fnstcw push pop or jg pop mov incb and mov mov push mov jl aaa cmp sub add iret fistp shl xor xor push push mov outsl push rcl out jle lret mov add dec (bad) and fstpl inc add test test div xorb iret jg insl add stos out sub pop inc inc call xor or test add es sbbb adc jmp push mov repz stos (bad) testb push out fisubl jg pop cmc sbb cli outsl repz and jno or jnp pushf shll pop (bad) aad push jge cli rcrl idivb repnz dec out out pop loope jnp xchg inc test (bad) std mov (bad) out add push lock int3 inc push lahf aam lds cmc movsb out mov mov mov sub inc and iret xchg cmp pop dec movsl xchg in and jecxz shll fisubl jl pop into add or push jbe in sti mov push cmp shr ljmp cld repnz cmc sti jle sbb (bad) pop (bad) xchg sbb int add pop or (bad) fstl dec das add lcall repz jmp mov xchg icebp hlt addr16 jl movsl testb cmpb xchg loop scas int inc icebp out clc fstpl ja not pop repnz mov pop mov jp (bad) out cmp sub data16 add cmp sub push and jle adc out mov dec clc jb or adcb and mov loopne negl pushf lahf push cs push jb stc setbe test inc pop inc mov sub fistpll idivl or cs icebp sub clc mov inc jo fsubrs push ret sbb jg jne push mov mov xchg dec push xchg movb ret jmp insb inc and fisub push xchg jne,pn pop inc adc mov ljmp mov jns movsl jbe xchg or js adc (bad) repz or cld xor loopne (bad) icebp cs pop lods ret jo dec fisubr xor mov or and mov imul and pop mov sub (bad) mov xchg or out pop rorb sti fisubr ljmp inc xor or mov movsl pop or (bad) xor xchg mov jl or sub sahf mov and int3 out bnd mov repz push or jge hlt bnd (bad) mov push push xchg adc fmull and out lret popf xor push mov adc xchg pop adc sbb jecxz leave (bad) out lret pop out jbe pop xor sub fistpl jb lret cwtl pop sarl or dec (bad) int push pop add addr16 mov lret sub pushf jmp dec int3 cmp adc mov fldl lahf cltd rol sub test popa xor and repz pop lret stos sub mov cmp loope out and (bad) das bound mov inc mov rorb pop lds or jmp jno les mov pop (bad) jns cmp test sub js nop and sub jne daa push cmp mov dec cmp in pop add pop xchg ret call xor in es clc sbb sub shll in xchg push mov stc xor pop cld jne out xor adcl int3 pushf in cs push cld clc mov mov xlat in jo mov fwait xchg dec scas daa out fimul xchg mov push sti mov add and out sub clc jp dec out dec xor daa mov or icebp pop inc inc sub adc popa adc lock dec xlat and and mov das adc test (bad) or orb mov xchg jecxz mov sub je pop and addr16 in lods mov shlb je in dec (bad) aam mov and cmc in movsl pop push adc test shr mov andb and jmp faddl mov test std jnp dec xchg add or xchg mov dec repz out and mov je insb stos pop jecxz imul jno or adc pop cld fs push ret mov ret jno inc into mov cmp cmp xor mov and mov jge adc mov into lret and adc call mov outsl pop sub inc xchg adc add pop mov dec scas test pop jmp sbb out arpl daa (bad) hlt push lcall push cmp sub (bad) lea or psrld es jl push mov dec pushf or je or jmp pop fs jne adc mov mov adc jmp xor notl daa dec adc test std inc leave popw notl ja sub add push fidivrl mov or dec fmul mov sub mov test sub sub add jns mov (bad) mov pop mov jae adc or mov in mov xchg into push pop mov xchg ljmp inc (bad) es ja loope aas jl mov leave (bad) pop or xchg dec scas sub sub repnz pop clc loopne (bad) (bad) stc call scas (bad) xor xorb sbb or popa rorb fsub xchg aam push inc push xchg outsb xchg les movb test out je hlt jmp cmc jns inc ds push cmp andl out mov leave scas xor jmp push pop in movsl mov pop dec add int jle ror xchg inc or dec dec int cwtl xchg xor fildl push stos jbe and pop rcrb das cltd lret cmc cmp cs ss dec popa sub sbb je lods mov loope loop xchg dec mov rcll add lret mov scas add lret sbb sub xor imul lods (bad) ds ret dec sbb and jno cmpsl loope xlat jbe pop cli xor mov jecxz fisubr daa in jb repnz mov xor cmpsb inc xchg je ret pop mov or xlat sub fmull xchg iret dec loop xchg (bad) or (bad) push ljmp in pop out sti sub xor sub or add or cmp outsl shrl xor sub gs ror iret or out arpl mov sbb shlb es push mov or mov jo sbb lret aaa sbb dec lret and jecxz shrl pop icebp into sub cltd sub adc xor icebp in imul mov or jns inc or push stc (bad) mov fcmovnu adc gs cmpsb adc cli fdivrs pop les jl out scas sub jecxz outsb aaa mov adc push shrl rorl pop out sub sub and (bad) call arpl test rcll incl div aas sub lahf (bad) mov jmp mov pop cld les cmp rorb sbb cs mov mov (bad) gs adc cmp xchg xor add mov in inc dec ret xbegin or icebp fsin jnp jbe (bad) outsb jb add dec call cld dec push sub sub leave std in lods pop out stos in (bad) mov jo jne add add cli pusha mov xchg scas cli dec popf inc add and dec in xor mov rcrl dec push sub ljmp fldcw in test lret jae mov ret sbb lods push (bad) mov xor sub mov add out lea jb fisubr lods shrl jge (bad) rorl mov lcall repz loop (bad) sub xchg wbinvd lods fildll jno jns lods xlat xorl lcallw sub jb lahf jbe leave int3 xchg dec iret into (bad) pop or inc jno fs stos mov inc inc add ret jns loope inc movsb mov imul inc stos adc sub mov cwtl mov data16 cmpsb mov mov and out pop mov or mov ja stos (bad) push leave pop sub insb pop sub and bound and fwait lcall mull or or (bad) into cmc (bad) jnp and pop and lret rorb mov inc xor testl dec ds shrl cmp loope add pop mov addr16 fist andb xchg sub mov ds or xor cmp mov js or or xor or pushl (bad) mov push jmp (bad) push aam dec pop pcmpeqw pop js mov ja push ret test cs mov in xchg cwtl pop sub and mov xor pop mov in push and sub and les repnz pop xor and push cmp out into js mov push add or cld push int lods sub add push xor aad insb ds cli repz mov icebp sub xlat mov (bad) sbb sar jle xchg xor adcb (bad) mov pop ljmp push stos jns js dec cld imul aad and xchg jl imul addr16 idivb and mov roll sub sbb sbb or test pop mov inc fidivrl mov jne cmp adc push repnz and aaa andb mov imul in adc mov popf (bad) pop enter sub sahf dec mov stc ret out mov test or icebp xlat jae mov jns scas sarb and out int aas xor cli mov adc cmp cld (bad) pop push mov mov mov dec lods pusha and divl sti xchg (bad) cmc outsb and sub xchg pusha mov cmp fstpl add and fcompl (bad) mov imul rorl and xor adc and sub data16 dec fdivrp sub (bad) ja sbb sbbb popf pop xchg inc sti loope mov dec and mov mov test xor negl roll add push sub out shlb add dec cld jmp out xchg jl jp sbb lds push mov (bad) pop (bad) stc mov xlat xor ja sti push xor mov pop mov movsb shlb std add rclb pop sbb cmp sub mov cmp mov inc jnp,pn mov roll pop sub mov mov fdivl sti sahf mov sbb mov dec mov push ret outsl sub repz leave and lret into pop lds or shlb or out sbb dec xor into out dec insl (bad) xor scas (bad) ret cmp daa pop jge jns lret xor sbb cld and jge cmp (bad) push jno mov fldenv ds cmp les clc and gs jns cmpsl bound jne xor pop xchg xchg mov (bad) dec and sahf xchg lret cmp das imull sub jnp jmp jnp scas inc jnp fsubr roll fildl adc xlat (bad) aad ret loop pop sarb sub jg shr mov xor adc mov stos mov lret mov jns imul or ja mov xchg icebp bound add xchg lods mov and daa rcl iret pop jmp cmp inc out roll or (bad) pop out stos jl cmpsl pop loop pop (bad) cmp jle dec jno das jle push xor sub jbe lret (bad) and sub mov and xchg enter (bad) ss bound or lret repz pop lret in repnz lods es ljmp stos lahf clc out lods pop add mov loope xor out enter cmp mov pushf and ret ljmp jp loop mov cmp loope jnp inc les lods and clc pop inc cmp inc xchg negb fidivrl cmpsl dec fwait mov jl add bound jmp popa sub mov xorb jne das cmpsl push mov pop fadds cmpsb lea or xor and xchg decb into mov mov (bad) repnz sub lea inc movsb les mov jecxz cli (bad) std mov sbb xor mov outsl test lds xlat jmp scas mov stos sub flds adc sub frstor enter (bad) mov insl js or mov or cmp idivb stc es add xor add cli rcll mov inc add inc icebp sub xor hlt cltd jecxz icebp jns pop add dec rcrl cmpsb hlt dec ljmp xlat sbb jge (bad) push pushf popa cwtl push mov mov or lds in fs mov ret add out sub test fdivs dec sbb mov out push adc lock icebp pop xor add es ss (bad) and sbb leave pop fisubr ret fimul jae loopne es test test xor scas sbb mov mov sbb (bad) mov pushf push call aas in fs stc pop sub cmp mov inc xor lods gs mov dec jo sti in xchg jnp lods aaa das pop cmc lahf pop sbb in mov jb pop in inc sub xor not xor push mov xor sub bound mov dec pop jne out sbb mov xor repz icebp cmc (bad) mov rcrb or popa dec ds add jge sbb push je pop push sub dec xor stos fldl loop,pn (bad) adc mov cld mov jb mov mov cli lea mov and mov movb xor loop mov movsb sub imul arpl call cld mov (bad) push stos lahf aam subb sub ror inc adc ss sar rol inc xchg adc out or loop xlat mov jmp js cld jp push ret xchg shll aaa inc and pop test aas cltd cmpsl xor xlat rcrl jmp inc rcll mov mov arpl lahf xor lret cmp sarl xor mov pop jns outsl stos cmp addr16 push add jnp ret lea loope dec stos mov (bad) sub mov mov iret xorl imull repnz jae or gs or inc outsl in inc xchg mov pop mov rorb test mov enter dec or xor sub push ljmp pop xchg (bad) int das mov xchg jb (bad) movsb push (bad) nop xor mov (bad) jnp lods fwait mov xchg xor mov outsl lds mov pop int3 rcrl movsl test or pop add jle lahf xchg mov (bad) adc mov imul xor rorl mov mov lds out push cmp push enter add decl sub or cli fdivp outsl pop and in ljmp ret bnd imul push inc sbb aad in das scas adc add scas nop and out adc lods out rorb insb aas or cli adc nop mov jmp insb mov sub sub mov adc sarb sbb movb pop cmp fild mov pop scas xor mov jbe push loop hlt pop pop adc jo pop ficoml cmp mov stos jns or clc and ja xchg xchg sub xor and mov aam lcall sub test mov (bad) loop jecxz jns addr16 lret push dec daa sub imull aad scas mov rorb and pop add push cmp mov sti or pop sarl inc add daa bound gs and loope das sub repnz xlat out xor and ss inc lret pop stc arpl or or mov or push (bad) pop loop rorl sbb js dec xchg mov sarl jo pop and mov mov add xor aad cmpsl out dec mov pop inc out inc fsubrs cwtl mov int aad in arpl or cmp loope xchg push xor push (bad) mov push jbe xchg lds push inc xor jae adc xchg das add mov add ljmp mov mov cmp xor inc scas push lcall xchg sub out jge aad rcrl push (bad) in mov dec mov (bad) push adcb sub sub sarb jle movl popf xchg mulb adcb xor inc loop sbb daa pop jmp sub or jmp test push ds sub add push jg fisttp sarb sub movsb out leave call xchg lcall ret add aaa xchg push (bad) mov out leave ret push jecxz mov lcall pop sahf sbb fisttpl or or mov jb std das test lret call sub lods dec (bad) iret or fsubrl enter xchg sarl pop cld ret mov pop fucomi daa push inc lods fs sarl mov pop xor jbe popf (bad) cmp sub rol jmp fs ret (bad) enter in push jge into mov int adc fsts lahf sbb or stc sub dec add stos jl sub call push mov mov or stc icebp xor xor or adc mov addr16 in sub pop jb add mov xchg out jge aaa rorl push cmp pop xchg jg lahf sub pusha pop sub lock mov sbb mov inc pop xor idiv cmp push outsb mov (bad) mov inc jp sti outsl jge cld add mov cmp outsb pop mov pop popa shll push push and add in jae inc fist cmp add push mov pop hlt mov or and or or movsb adc jno nop jle mov mov mov pop inc clc push push jmp adc pusha pusha movsl push test ret or pop imul test pop lret mov and dec (bad) idivb cmp push into popf mov daa and add push scas cmp push mov mov xchg fstpt cwtl aaa pop xor xlat dec dec mov jno dec out or and std add xlat or inc or xor push mov pop xor mov into mov popf mov leave jg popa popl sar xor ss adc (bad) int3 jl loope sub fistpll mov sbb cmp clc aad adc cltd sub inc and fldcw cmpsl push adc not out lret xor add mov out test repz inc cld pop xchg mov (bad) dec and xchg bound cmp dec int jp repnz scas lods push mov pop mov mov push mov mov test lock push fstps xor ja test cmp fs cmp loop and adc cmpsb and adc out pmulhuw push jg xor or mov ljmp sti out jge pop sub jle unpcklps xchg mov lock and outsl out popf insb jg repnz mov pop mov push and mov lret test xorb mov mov je in mov fs outsl shll and pop sti cmp repnz gs ret scas les shlb xchg daa mov insl pop sub sub inc xchg loop out xchg mov push test push xchg fs (bad) adc shr mov stc das mov sarl xor insb clc cwtl lods mov jne jns jmp ljmp and and xchg mov mov (bad) mov daa lahf dec fbld push lcall mov (bad) mov pop adc out mov xor pop lea imul fstl out subb xchg jb ficom out sub or sar adc and pop (bad) mov add jo fcomps xchg out cmp int3 sbb dec out jb mov xor popf lods (bad) push push jg pop pop add xchg fadds or sub lods out (bad) into mov push fidivr sbb pop inc jmp and lret into dec mov mov lods fistp xchg out add xor xor outsb mov fs adc scas sub std cmp push leave stos idivl xchg cmp jne inc sbb pop pop ds out adc sarb or jo out sub iret mov inc insl or pop inc mov ss dec sbb (bad) nop stos sub pop leave je push (bad) mov inc ds into add add fldenv or xor mov dec (bad) lahf (bad) xor mov xor jle jno cli (bad) lahf push mov insb hlt sahf fimul ja xchg je push data16 sbb (bad) adc movsl xor push nop and lcall cwtl call push les inc push popf negl lea dec pop mov inc ja shr clc mov ret xchg (bad) inc les push out in mov adc ljmp leave les es das xor (bad) dec jmp adc test movsl test mov out inc and sub or add mov mov cmp fistl mov popa icebp push jl inc sub xor mov jge sbb mov loopne cmp jle push jo loope cmp jmp xor (bad) xor divl rorb lret icebp cmp xchg (bad) cli xchg jae push push es add jb in sub or fldcw jbe lret repz stos lock dec sbb sbb movl jecxz pop xor in lock and cmp repz adc in jb ficom sbb jo or pop mov out pop movsl jmp fdivrl les pusha lret mov out dec repz dec and sub ds xor or les ljmp lret jbe jnp (bad) cmpsb push mov push dec mov sub mov outsb mov mov jp mov insb jns dec ret push (bad) sub mov mov lret xor jne xor scas mov xor repnz push push pop push mov mov pop xlat mov aad mulb push clc jae add movsl ja add jbe sbb jb cmp jmp mov mov and sub sbb sbb (bad) xor and jne int jp mov cmp test ljmp lock sub test or (bad) repz (bad) negl xchg shrl xor jmp xor ror mov dec rclb repz dec xor add out dec mov outsl mov cwtl dec repnz ret (bad) aad cltd or xor aas repz or or ret aaa movsb sti cltd out fdivs call das cmp or lock outsb lods mov fstps and pop jle daa dec and push sarl test add enter into daa jecxz int3 xor add jnp dec mov push pushf out popf fidiv push fild int3 call (bad) je out push lods test mov mov dec outsb int3 sub in mov gs scas cmp int add add insb std mov ds popa shr loopne and (bad) insb aas or aam into mov out scas jno xor lods lods lea sarb xchg int3 jg xchg ja or in sub cli pop cmp rorl or into cs test sub xchg dec cli mov stos jae inc adc test jmp sub dec or push push or dec cmc xchg mov adc and ret sub sub gs inc sahf in xlat mov into xor enter call and and nop xor loop pop push xchg xchg sbb mov sub cmp leave insb cmp fcmovnb sub scas cmp mov adc dec pop and arpl in test movsb xchg xchg rcrb cwtl movsb xor int3 (bad) imulb cs add mov sub or mov cwtl clc mov cli lahf sar pop enter loop daa ficoml and mov (bad) xlat in fbstp pop das mov xor mov and aas cld (bad) cmc xor and pop clc mov dec mov outsl mov (bad) adc mov or and popf pusha outsl mov and aad mov dec and mov stc es adc clc mov xchg fcomps sti mov call and and pop dec repz (bad) imul std mov test (bad) mov imul sub dec mov xor sti (bad) xlat loopne add hlt iret xchg in dec call popf xchg and and loope fimul and data16 adc jns jmp lods leave adc xchg xor sub pusha ss mov sarl pop aas push insb divb mov test sub xchg push xchg mov and stos xor fstl lds xchg lcall fnstenv and sub dec mov scas and fs fldenv add scas clc inc movsb mov stc pop add fbstp cmp movsl push or bound (bad) xor cmc lahf out xchg (bad) (bad) sub mov icebp and rcll divb je dec call lds scas mov push icebp jbe add mov jmp sub out sub push je jmp and xor idivl xchg mov xor jmp (bad) xchg test add and mov and bound xor fnsave les mov (bad) and das jb xchg jae xchg add aaa dec mov bound and cltd mov push stos adc mov sub addr16 (bad) dec and loope stc push mov rol jge orl lods in mov jl pop cs push add mov jmp add loop das shrl sbb bound jns or sub rcrl icebp cli in or std iret xor mov push mov cmp mov (bad) movsl ljmp gs mov or sti jne lea jbe decb imul fs ss idivb xor xor add push cs out adc sub in loope sub call adc or xor (bad) icebp scas movsl adc sbb xor jae sbb das fisub lds dec or (bad) ret jne xor or mov fsub fwait mov push das fiadd push sbb in stos fidivl jge jg fwait jp ret jnp aam stos mov add or and jo dec pop cmp scas je xor jne add and mov cld sub ja loopne jmp jmp sub inc xchg add mov outsl out daa repnz mov movsb pushf jmp sub sub popa dec jg xlat not push sarb sub dec pop rorb or (bad) call fsubrl xchg incb cmpsb repz dec decb mov shrl xor cmc int mov xor pop cli insl pusha mov add jno stos pop mov mov jb and dec out (bad) sbb pop out xchg sbb sbb push jle les popf jp (bad) repz sti dec xor stc xchg push mov mov shrb lahf adc sub mov pop pop hlt inc hlt and pushf sbb jnp aas (bad) pop sbb pop outsb movsb push adc inc add sub jmp jmp add or ret das sub xchg mov add inc xchg lret or mov iret loop xlat and xor or mov adc into loope jp iret fidivl jmp shlb inc test mov aad dec mov jmp xor and into mov mov cli (bad) imul cmp mov cmp dec vcomisd scas sub mov inc xchg sti mov pop add ja nop dec push sti sub mov cs xor stos adc frstor icebp pop push test sub sbb xchg jbe ret ja mov jmp iret insl jnp into pop outsb lods imulb xchg je gs mov sbb mov mov cmp mov push sub xchg pop stos mov or inc pop mov test rcrl dec daa cmp leave pop push pop pusha or sub xchg pop bound clc cmp xorb popa and sbb in mov repz add mov push sbb push leave lret xlat mov icebp mov (bad) idivb xchg scas sub sub xchg popa lret imul adc push xor scas jmp insb pop push mov sar mov pop mov lret add jnp push pop xor dec scas jno add sub adc and shlb ret jge lods push faddl and jno mov loop pop cmpsb ret jbe jmp push dec test pop ds add mov push jecxz ljmp mov mov subl (bad) gs mov bound push pop mov mov mov dec mov xor pushf stc mov jecxz pop add mov or inc and sub stc push pop scas (bad) sti cmp pop (bad) sbb (bad) sub sub jecxz inc xor mov sar mov lcall mov lods cmp pop (bad) in inc mov dec ljmp and cmp adc xchg or push call inc or mov add jl lret jne mov call and popa insb adc mov cld insb jmp jbe sub gs push push xchg xor pop mulb leave icebp cwtl push out xor fstpt xchg popf notl inc mov pop pop loop adc enter mov adc add test jg inc je jmp mov or ret loop jbe adc scas je mov add popf mov dec dec out push push pop xchg or or pop icebp mov or aaa jge arpl inc idivl mov cmp xchg mov mov push sub daa xor jno mov fnop dec mov ret adc fsubl push pop mov adc fcompl jp call push (bad) jge xor int3 rolb push mov and das repz adc (bad) and pop int xor xor inc sub dec dec mov adcl cmp setle jmp lret xor mov imul pop sbb or je xor cmp leave negl mov jnp rorl fcomps dec enter mov jle sub fldcw sti adc mov stos neg push cmpl mov mov sub mov xchg gs stos frstor mov add sub xor scas xor xchg cmp loop mov or jno or out je (bad) dec xchg lret mov jecxz mov mov sub jne (bad) mov fnstenv mov in dec scas int jp or fstl sub mov dec outsl xor xlat mov cmp or pop mov sub jne ljmp iret lds push and xor das add jmp lret or cwtl sub iret xor scas mov fistp dec (bad) mov push pop ja dec imull sub xor subl inc jecxz mov arpl pop mov jge loopne pop or mulb rolb fist add popf lds or and (bad) jne sub mov or and std in mov (bad) xor test xchg stos xor pushf test cmpsb mov cmpsl (bad) cltd (bad) mov inc pop mov jae pop sub mov mov sbb loopne negl pop jp sahf (bad) xor pushf push lock ja popf dec les mov push ds cli add (bad) xor mov test (bad) mov enter shl cmpsl sbb adc rorb pusha sub mull dec jb cs addr16 lods inc xchg scas loopne out xchg xor aam cmpsl adc roll sub lods adc imulb sub xchg aas mov scas sub cmp gs xor sub sub das mov ja into repz sub xor scas rcrl or sub dec jmp jno inc xor push dec push fstps cmp mov dec lods (bad) (bad) mov iret xchg or shr or mov xchg xchg mov and sub insb xor test pop add mov cmpsl ja jae mov std pop jmp dec ret mov xchg mov xor and pop outsb xchg or in sub cmp das sub xor shlb aaa in xor mov sbb mov jmp dec lock fsubrs xor hlt repnz adcb out xchg std pop rolb cmp mov pushf daa hlt (bad) mov fs out mov xlat jne adc scas outsb mov add fldenv out out imul into mov jp jg jmp mov cmpsl inc push gs (bad) jmp loope fucom sbb pop pop sub pop lods imul inc jmp nop scas jns inc cltd mov sub or (bad) loopne mov push inc push push sti and testb mov inc lret negl mov sub push pop and stos pop out dec mov cmp movsl scas (bad) pop xchg in mov into std adc pop (bad) loop (bad) ljmp subl movsb int3 pop add les ljmp cli or sbb dec shlb mov mov (bad) lds inc and inc push sbb neg mov fidivl loope adc ss lret jo mov insl fldenv dec movsl arpl fdivrs jle outsb in mov mov inc mov popf inc xor ret adc add cmp pushf mov jge shrl ret xorl leave add mov inc sub cmp push loop cltd dec xor (bad) push ds sub mov sub xchg pop cmp mov daa mov incb push ret shrb clc cld sbb mov insb mov and imul dec cmpsb jb lods test movsb stos sub adc ljmp loop push fistl jge pop jl outsb mulb xor fisttpll lret mov pop sub mov mov pop jb rorb lcall sbb into xor or mov cli cmp mov jp,pt lret jecxz push inc loop adc mov push xor mov and mov or repz jo sti pop imul fidiv push xor mov jl das mov gs test push (bad) cmp in in add icebp push xor cmp mov add dec out pop lret cld jns gs pusha sub mov mov (bad) scas xchg mov mov icebp fs repz iret (bad) adc (bad) and les leave jbe (bad) test scas xor and jb pop mov jp test push inc adc leave mov mov test adc (bad) (bad) sub xchg xchg hlt insb mov pop and js add cmpsl add sbb sti lret ror fisttpll sub add scas mov popa sub out adc notl test dec scas loope sub jmp ja scas imulb lret xor mov (bad) mov lods push pop add add mov inc daa cmc xor jb cmp jne inc xchg lcall out fbstp sub add mov (bad) and divb movsl pop add jmp pusha mov xor mov sub in pop push cs mov sub or negb mov and mov push xlat add or sti out pop mov xor and fs xor xchg (bad) or mull jp pop jecxz out add gs mov adc mov clc add inc jecxz incb lea pop jnp lods sbb push enter ret daa jne inc popf xor jge sbb mov rcrb jae dec add mov lock jle lods (bad) xlat inc fadds dec sub fisttpll sub out call push dec cs jge shlb bound iret jne cmp jno push into adc and pop out lfs bound dec ret mov cwtl sbb (bad) das ret hlt push pop (bad) push clc out inc pushf push sub pop mov aaa add jg mov data16 (bad) ljmp xor inc or stc dec mov pop pop pop lret adc xchg or cmp or jno jne es test shll add and pushl xchg mov push mov jae jno movsl aad cmpsl and sub jg imul and mov mov sbb sbb cmp adc xor jp mov or (bad) notl fldcw jmp mov lods inc xchg out loop daa jg jge loopne (bad) and test movsl mov dec lcall sub push sub and sub sub repz adc idiv lea jnp mov push rcll mov inc sub mov jmp scas (bad) negb shrl (bad) adcl rcrl ds sbb adc clc repnz mov push and jno push test pop clc out popf (bad) xchg pop jle (bad) mull mov xor xchg std mov jne mov imul (bad) sahf add cltd js inc sbb mov (bad) fstpt xchg call (bad) ja xchg lods es paddusw xchg sub test add icebp inc lret mov xchg pop int and (bad) xor pop repz sub and js sub add fldenv sti in imul pop leave dec jl mov lahf sbb test icebp scas add out sub imul addl rorl and add repz jmp lds (bad) xor (bad) lret loop and ljmp in push bound out test movsb test aam sbb (bad) cwtl mov and mov popf or cmp adc sub mov xchg scas mov das ret jnp daa (bad) xchg loop repnz add sub or adc mov cli les ds xor js imul jno xor mov sub leave (bad) iret frstor fmull repz mov (bad) xor mov push mov jge out cs dec inc lods mov jnp scas shrl cmp pop sub mov (bad) sbb xchg adc push clc xchg lret xor outsb mov out pop pop outsl fdivs (bad) dec and movsb sti mov leave cld daa or inc cmp sub pop push fldl imul in jbe xor mov jns out sub movzwl mov push adc add add cli cli sbbl int3 pop lods ja pop outsl inc xchg mov int lret and cmp mov aad jecxz pop and dec or outsl pop lret xor jecxz loop stc adc dec clc sub (bad) std mov (bad) jmp rcrl push cli pop out xchg fs enter ljmp mov test pop cmp (bad) adc (bad) cli rsqrtps shll jne loop fs dec divl pop sub ljmp mov mov test sbb shrb sub jo loopne into popf call add je mov or xor pop xchg push xor and leave lock mov dec lret jmp sbb out (bad) decl jp mov and out (bad) xor mov jge stos inc ret bound or dec jg sbb mov sbb or cltd mov test and xor xlat mov xor push fldt nop lret pop repz xchg jmp sub fadd mov mov pop xor mov add (bad) cltd in jmp lret pop xor add stos mov fs clc mov jp lret mov push out repz sarb sub dec hlt inc or dec repnz ret mov pop sub add (bad) jmp jbe mov addl movsb sub and lock hlt inc mov fdivrl in sbb daa into xchg mov push lock dec lcall call cmpsb jecxz ret lods xchg pop or pop movsl in jnp adc scas iret pop push sub xchg stos rorl in lahf sarb jb dec sbb popf dec mov pop mov ja mov mov lock (bad) mov pop nop dec dec pop add idiv jecxz je fcoms xor pop clc push movsb scas jmp xchg std ss lahf jbe fcmovnb sbb xor aam jb (bad) mov jmp mov out gs scas push cmp pop aad lds daa (bad) mov enter sti dec push mov testl out imul mov pop shrb call (bad) enter and fs cmp push pusha xor xchg inc mov or fildll dec out repnz xchg (bad) insb fldenv mov pop fidivl pop lea sub dec pushl adc inc cwtl xor out fnstsw and xchg or xor lds ds repnz xor push mov (bad) out loope push daa mov or lcall fiadd aas pop mov loope pop mov lret sbb adc mov ret pop sti frstor sbb sub xchg jge inc sub fldcw adc ret push roll mov ret mov lret add or or lods mov call sbb xchg cli std push pushf fisub loop repnz shrb lret xchg repnz pop or mov aaa jne out das in daa leave mov and sbb mov mov fs jnp,pt pop mov repz adc arpl leavew fsubs cmp xor enter xor stc xor mov out ja clc xchg js and add (bad) mov mov mov push mov push add or mov (bad) xor mov pop neg add cmp add (bad) sbb ret pop adcl pop cld xor xchg test sub add ret dec inc xchg or mov push jp add not xchg push jmp cmp (bad) pop add leave adc adc ljmp xchg data16 hlt inc insb inc outsb push lahf push push and or pop push adc sbb xor or js pop mov leave fsubrs xor mov mov and dec sub or rolb sbb pop orl xchg ds int3 inc or mov mov je or xchg fistpll pop jb or in mov shlb sbb xchg dec and call jnp xchg push mov xchg pop je adc ljmp dec cmp mov movb leave pop pop std pop add or outsl data16 xchg pop mov leave cli and jo iret rcrl popa frstor mov in pop jno add sub repnz dec roll mov push or jo jbe in adc stos xor ret aaa imul call dec cmp or pop pop cltd add add xchg fstl pop dec fcomps adc ljmp xor int3 (bad) mov scas push lds cmp or xchg mov pop adc fmull sub movsb inc (bad) mov cmp and and xor jle push push push imul mov out add (bad) and rep cmpsb mov push or jbe inc out adc lds add mov dec cld add rcrl xor cmpsl push fcompl inc xchg enter pop dec out cwtl out lock out pushf add sbb or pop pop (bad) hlt xchg (bad) bound (bad) (bad) mov pop aam or icebp mov flds cld jae,pn adc and xchg fisubr sti xor into push inc pushf das pop adc inc ljmp daa add push mov push xor push or pop scas fldcw aas fxch arpl dec jmp mov and aam loopne test popa push pop fcompl jo imul jmp daa (bad) dec test dec loop lret inc cmpl and mulb and inc rorb dec fnstcw repnz sub pop xchg cmpsb jbe and jmp xor jmp insb adc je out je push adc sub (bad) je dec mov mov mov pop xchg sub pop negl dec add clc jge stos push clc pop xchg xchg cmpsl push (bad) mov test inc or stos int inc les mov push xor mov jle mov pop icebp jns mov out cmc push inc mov call dec (bad) shrb cmc das outsl (bad) dec and cmpsl push js dec repnz sarl shlb mov xor std xchg sub or sub adc (bad) in xor pop imulb in mov ss stc cli sub sub add std mov add mov std cwtl mov mov not (bad) lret repz or pop (bad) pop sub outsl xchg out dec (bad) cwtl lahf xor cltd xor and lods inc xchg outsl js sub mov xchg fcomp stc (bad) repz nop scas pop add jno dec and fwait (bad) aam out cwtl push dec mov xor mov adc or es xor cmp sbb jbe push pop data16 jmp xchg fmuls aad insb fiadd jno sub pop fstpl scas test fcompp outsb popa dec cmp mov jae out mov mov pop push inc dec jge lcall js sahf cmc gs pop gs movsl push imull icebp sti movsb loope push jp sarl (bad) std xchg mov jg or and push (bad) ffree in enter pop leave rolb push pop (bad) push negl (bad) pop mov mov adc mov (bad) out pop cli aaa mov sub inc pop (bad) sti cs jge sbb and sub xchg add push sub stc pop adc mov mov or or xor cli and data16 push cwtl fcoml fnsave cmp rcl into add sub (bad) and or imul cmp popa (bad) xor sub xor loope data16 fisttp pop sahf add sub jmp xor xor mov enter xchg cwtl and push push jbe iret or jbe lds jmp iret or dec push and movsb push movsl enter inc pop movsl push adc sub adc mov jb,pt sub sbb (bad) xchg stos ss repz dec (bad) mov jp les jecxz xchg repz pop ljmp add pop lds or mov and popa in scas sub enter sbb stos xor mov jbe add or sub sti sub das adc mov pop dec mov addr16 mov out pushf inc (bad) sahf mov pop sbb sti jbe adc sub push and daa fnsave fild push mov stos and and pop or add bound out push out adc repz (bad) push push and mov dec mov push pop mov mov sbb shr pushf or mov aaa sbb dec inc loope xlat rcl xor pop roll clc bnd xor jmp add out pop shr (bad) jmp pop push cmpsb movsl fucomip js mov fisttp clc or jmp pop testb push leave add cmc sbb push sbb push lock das xchg fldl cs dec jns pop inc xor mov sub jmp cwtl inc movsb mov cltd fs test add subb rcll icebp mov mov xlat mov iret popf in mov mov sub xchg shll test movsb subb daa divb mov fadds cmp cmc and sub jbe push adc xor jp test in fcompl mov jae sub sub lahf out mov out dec (bad) sti cmp (bad) adc (bad) dec fimul call sarl adc cmp jmp leave push inc and aas mov leave dec cld dec mov les (bad) sub mov pop mov and call cwtl in xlat mov sub fistpl adc push lock pop leave or mov out fcoml repz repz mov add mov arpl pop pusha pusha xor or or ds sub test mov or shrl shrl inc dec popf es sub xchg adc xchg bound movd jp data16 jmp std xor sub in sub cs dec imul cli sti fs shr loop inc dec cmpsl fnstcw add fs xchg jle pop add inc lcall mov xor pop das icebp and movsb fldl sub or xrelease xor (bad) mov (bad) mov (bad) jo fisubrl mov and sti jo test rcrl prefetch or jmp xor psrlq mov fild lods push das cmp mov loope and mov add or das mov mov xchg repz popa jecxz add xchg jle inc ret (bad) (bad) jg call jg stos adcl ds les insl scas lret mulb out cmpsb or in and xor jle imul sub es jmp gs cmpsb fisubl jbe adc loop xlat daa (bad) movsb xlat incl mov (bad) xchg mov into fisubr adc push add dec out cltd push imul les (bad) clc daa leave cmp in pop (bad) sub mov rol pop movsb mov lods add mov add add adc (bad) push sub pop outsb mov sarb pop pop out xchg push lods imul push (bad) sbb dec sub (bad) and (bad) cmp lock imul (bad) mov loope jno mov pop jl add cmpsl inc add mov mov sub lahf insb dec inc jecxz add and scas std sub xor xchg and sub mov sub repnz outsb lods ret dec mov xchg faddl lcall repnz add pusha std mov test out sub and movsb inc jb mov movsl pop push sub mov mov loope and add cmp xchg mov jne push fiadd cmp or or lds xlat push pop add inc mov xchg push mov (bad) push or movsb pop jge (bad) pop inc push repz push jl sub pop mov pop jbe shr (bad) in ficompl mov shrb je cmp cltd lock (bad) and jnp out mov fcomps xchg clc scas jb rorl or outsb cltd jae mov ljmp sarl jnp and jb icebp (bad) das and leave pop sub stc arpl xchg sub bound (bad) xor leave int3 sbb lea xchg sub and mov mov repnz jmp adc push dec xor ljmp test int sub and xor jo mov and outsb loop rcll mov inc ret and scas and ljmp stc into lret mov mov add jo daa test dec pushf out cltd jns dec lret xchg repnz (bad) and in inc and mov pop jae push inc jmp or out call into jno jnp add mov cltd cmp rol mov into xchg (bad) or xor in into movsb mov mov jo sbb or xchg sti jecxz enter xor and daa lcall and das (bad) xlat leave lcall lret and jecxz sti lahf fsts add fstpt das mov fstpl xchg aad repz stc mov or cmp call gs sub movsl jns gs or fs push fistp add test xchg adc xor testl aaa out idiv mov push repnz xor out pop and test std aam pop jl leave ljmp lock lahf push sub icebp xor lcall loope fsubrs jno (bad) jae sub xchg jnp cmp add enter add fldt mov (bad) mov clc je xchg fistl xchg pop popf adc xor and jno stos xchg mov fsubr popa cmp mov stc addr16 out in daa fisubr das sti jl pop mov push jno (bad) out mov dec and js (bad) fwait lret cmc mov stos push sub mov mov mov lcall into dec pop cwtl fildl pop icebp mov add stc lock mov insl insb cmp js mov pop ljmp push xchg scas mov push imul xor in test pop test sar fs int sub (bad) xchg pop ja idivb repnz test (bad) (bad) fs fnstcw pop sub ret xchg fstl jbe pop mov pop repz cmp popf (bad) fsubrl inc lret mov xchg cwtl mov scas xchg sbb test mov jmp rep out imul xor into push and mov jl inc in scas xor shrl out sub inc sub fisubr sbb sub mov hlt leave inc sbb jp jmp jnp test aam dec sti or sbb push insb cltd leave cmp inc cmp aas call lods xlat cli lds jmp push jl and add loopne into mov jae sub pop out cmp pop mov sub repz inc mov add (bad) mov push (bad) sub rclb (bad) jecxz leave loopne fistl or adc lahf pop and mov ja inc or sub xchg jg notb mov sub dec out pop (bad) or out cs cmp aam push add in into mov out ret (bad) or sub out and cwtl lret ret leave push fwait (bad) jnp sub das add inc out stc and pushf lds or add je pusha or lods dec insl mov pop mov sub xor adc js icebp imul and mov xor and push negl adc outsl lods or les or shl push or pop sub lret or mov dec icebp lret sbb fldl iret cmpsl mov fistp dec jnp xor ljmp xchg aam pop ret cmp rclb fnsave out popf add xor mov orb mov in and pop lret mov inc lock sub add mov sahf pop xchg push (bad) mov inc xchg mov and daa cmp cwtl leave push out mov popf jne jne ljmp cmp fdiv sub repnz sbb mov test adc call (bad) and mov inc mov dec fnstcw add hlt insl insl imulb ja hlt sub jl adc or icebp fbstp aas add out (bad) sub fcoms negb sub sub mov loop aad rorb int3 pop in (bad) mov popf lret jne mov fiadd leave jo inc into mov (bad) call sub scas icebp scas xchg out mov add push jge loop lret scas out outsb (bad) lea out mov or jp outsb xchg lea sub jl and fnstsw repz ret imul pop add insb xlat in push dec mov add test sub call sub add or iret push push (bad) xor dec in pop sub jl das (bad) fldenv stos pop and jne dec mov ficoml jp adc xor lahf fldt adc mov ss fmull and aad pop popf cmp or dec fist jecxz popf dec imul pop imul aas repz add and add mov mov mov mov pop in stos mov dec fsubrs mov inc jg xor push iret add subl (bad) sub fistl rcll cli mov mov or pop cmp lret mov data16 sub mov jns insl mov (bad) ljmp inc shr test push aam push in scas sub inc test push popf mov and fsts loop xor or cld lcall notb ret mov shl pop add (bad) pop mov and and scas in out sub push dec test repnz add xchg fist cmp stos and movsl inc add pop jae and leave pop movsl dec mov ret xlat cwtl add sub (bad) jle add sub push iret out inc das dec test int add test shr mov mov ds cwtl lcall stos add out mov jmp cmp lret mov dec push jmp into add scas jle enter pop mov sub pop xor sub (bad) movsl and xlat or enter outsl scas pop movsb movb lock and sub sub xor sub jg mov inc vmovhpd pop out ds xchg mov faddp inc jmp sub cmp (bad) dec inc inc lret outsb jbe push mov lahf jle adc sbb lret pop push and mov leave and pop mov (bad) js xchg add xchg clc add les pop cmc jnp and mov adc dec sarl das and pop xchg push xchg dec sub outsb cmpsl fcoml add xchg sbb mov movsl outsb or and mov xchg add fucomip stos cmp sbb add pop sbb cmp sub popf pop inc xor dec cmc ret mulb repz xor jnp pop add fstpt loop (bad) cmp (bad) pushl scas loope sub jo push mov dec clc xor jmp test repz cltd mov xchg repz or xlat cli add push ljmp repz add rorw jecxz adc push cmp or xchg cmc cltd inc out jp ret (bad) and ljmp cmp adc sub rcrl imul loopne sub sbb stos cmp ret dec mov or mov mov test int3 ljmp jecxz mov sbb pop mov pop mov xor test dec or xchg pop test or fistp cmpsl jne jo xchg out lods gs lcall pusha inc push stos fs push cmp push test add dec add sub pop push mov inc jle push or jbe imul add push mov (bad) dec movb dec mov xor dec pop mov dec repnz rolb sub (bad) mov xor sbb sub movsl push mov leave (bad) fistp mov mov in mov xlat cs ja inc insb repnz (bad) cmp into daa mov mov aam mov push mov jmp test lods (bad) shr dec cmp or cs or ret (bad) push pop js sbb pop iret gs mov scas xor mov jecxz push mov in mov sbb cs sti cs aas lret cmpsl int3 adc mov lret xchg pusha in pop or xor push (bad) adc pop test scas sub xchg lds and add idivl ret fsts adc mov push roll push xchg (bad) ds add mov jge mov out mov push dec jmp cs imul lea out pop les mov sahf ret out sub or xor xlat in inc or fisubr neg pop enter jmp lods or xchg orb cwtl icebp mov movzbl pop outsb mov push adc (bad) cli fistp mov sub fisub lret add jbe pop mov mov dec out adc pop pop orl sub fldt mov or pop add pop jnp scas sbb pop xor das mov (bad) lock mov sub clc into imul inc and pop xchg ljmp call sub jp out out cmpsl mov mov (bad) hlt icebp and fs stos mov lret push pusha dec jmp loope das (bad) dec pop mov outsb sub js or jo stos and cwtl imul das inc mov mov loop icebp in ret daa imul sbb (bad) xchg (bad) mov mov xor in cli fs fcoms dec cltd mov mov jp rcll xchg mov mov stos jg and sub (bad) in rcl loope or lahf das add push xor add jg push movsl test pushf mov mov and add add sub or add fldenv pop sub mov push pop arpl shr sbb inc sbb xchg inc outsl adc mov dec jge loope jp xor or and aas lcall out push mov mov je and mov xchg ret je jmp pop iret shl int into fstl mov cwtl (bad) adc push into ret mov pop jle imul sub dec adc jg push sahf and cmp mov lret xor cli mov stc xchg out cmp imul jne rorl or add inc or test out jmp mov insl adc bnd icebp or cmp push adc mov shr les loop cmpsl cs or clc adc mov enter sub cmp dec fmull jmp fcomip sarl and and bound (bad) int3 in sub mov outsl adc push fsubr notl testb cmp sbb mov and fmuls cmpsb es call fcoml (bad) xor mov jle jb inc rcr cmc (bad) into test das ljmp pop xchg and and add fistl cmp xor sbb dec and ret cmpsb daa adc sub fmul cs mov flds adc push jecxz pop lods out (bad) movsl imul xor pusha add jns pop cmp jmp and icebp mov int3 (bad) pop add mov inc (bad) cmp mov jge into imul out and fldl or pop rcr adc mov xchg out pop cltd mov xor mov icebp sub adc push or jp adc jecxz mov dec mov push adc xchg pop sub dec jl loope mov arpl inc dec add ret pop std and or xor ss and test mov xor inc arpl scas push aas (bad) cmp cmovb push add xchg aam jns adc fs mov push push xor mov (bad) mov lret mov (bad) xor cwtl adc adc or mov (bad) fildl lds fist cltd mov rcll push inc in out repnz xchg std push dec in cwtl loope sarb adc (bad) mov stc or pop ret das (bad) dec iret imulb sub lods hlt leave and lock and mov es (bad) leave aad addr16 leave (bad) jp (bad) pop mov (bad) bound divb xor popf pop sbb rcll nop pusha pop jmp ljmp inc stos push mov push xchg cltd sub or int3 outsb mov sahf jns jl mov jne and mov xlat sub popw es lea out dec aaa jle or fdivr stos popa cltd ret pop mov gs jmp (bad) lahf out lahf in jge daa mov jae daa inc push and push imul xchg out adc roll insb outsb rolb fildl leave inc fisubl push (bad) dec out fldl xor mov mov in ds pusha add dec push inc sub or pop into mov add xchg nop cltd popa leave mov repz ret lods xchg iret xchg cmp sub fcoml jmp push stc pop lahf sti jne push cmp dec leave je jp xchg lock aaa loope xor sub mov cmp (bad) adc scas push test pop pop or xchg inc ja and sub in xor add jmp pop pop mul (bad) pushf loop sti dec sub cmp (bad) mov mov jmp das imul ja sub test mov or xor pop enter pop xchg mov cld or and add sar aas mov adc or add or push push scas jmp jnp or sbb gs or icebp test sub sub cmpsl dec stos gs inc sub push movsl mov scas mov xchg stos repz lret mov out cli out sub sub sub sbb xor lahf push xchg pop xchg jo adc xor stc pop (bad) sub popf cmc sbb jge repz jmp pop pop mov jmp xchg push jne lea or sub mov les pushf xchg mov sbb rcrl mov sar repnz fnsave sub cmp rol sub push popa push pop inc popf fbstp mov in sbb mov roll or (bad) mov sbb icebp dec dec jb add mov loope pop inc xor ficom mulb movsb call mov sub movsl lret les xor rorb cmp out pop loope xor xchg movsb out rorb je and pop lret dec xor or cmp (bad) pop mov hlt sbb jg mov xor insl or sub cmc sbb lea ds aam add mov mov stc xor dec dec popa xor int3 mov iret pop int sub sbb mov mov inc inc lods nop inc add nop sub pop mov icebp pop cld gs aaa shlb or add (bad) pop dec xchg or out inc ja adcb cli repnz rcl popf xchg movb mov xor pop and mov adc bnd aas mov aad and add repnz ror adc mov sbb add popa outsl jne mov cmpsl and repnz lds mov nop les mov ljmp xor je stc mov stc rcl sti (bad) negb mov add pop das or fist out lret or add mov jle push ds cwtl sub fistl push cmp or adc sub test jg (bad) ret inc test xchg jge lret xor and jo add shr jmp nop insl int scas sub and or into jnp sbb movsl push gs jl pop fsubs xchg std nop dec pop mov repz or and repz mov rcr pop push in inc dec out scas roll dec movl mov test into out lret in dec mov push and dec pop mov jne dec add inc jmp mov ret pop mov and fidivr or mov mov dec xor mov pushf cmpsb dec push icebp xchg push adc xchg jg jp fcomps clc mov movsl pop int3 das mov cwtl sub ja popf push push mov mov or lret hlt ds scas loop mov xlat adc cltd in mov fistp fmul dec (bad) arpl (bad) loop outsb dec repz jg lcall vmptrld test aam dec add mov icebp fidivr popf sub lret mov pop mov mov leave ljmp dec and xchg jno (bad) inc cs (bad) mov test jecxz cwtl stc shlb aas xor push add inc test call sub xlat sarb pushf pushf mov std gs or ja lcall inc add movsb pop mov (bad) mov dec loope xchg inc mov xor mov fisttp mov sub jns lea jno mov icebp push loopne xor push push push mov ret push mov dec (bad) (bad) cmp adc or pop ret fwait or stc mov sub jg in cmp repz adc jo cltd pop imul out xchg or or out cwtl (bad) popf sarl push sarl and dec lods daa lret out mov fbstp ljmp xor hlt dec sub lret (bad) es add sub pop mov outsb cltd push lret or popf jns imul aaa sbb repnz push je or dec sub lods into mov inc js mov int3 add call mov das mov sub mov add dec push sbb in and adc push sub push cli add mov lahf mov cmp or ret lds (bad) pop xchg fldcw out cli cwtl mov xchg scas dec pop mov pusha and popf lcall xor (bad) (bad) rolb push pop add shll movsl not ljmp inc and and (bad) dec mov xor sub push pushf or mov ret (bad) jmp push je adc mov push pushf repz xor mov iret pushl push aad push xchg (bad) sti inc into stos test repnz xchg xor mov (bad) repz fnop and rclb data16 adcl pop xchg or or (bad) or mov pushl jle xor sbb mov xchg xor dec fucomip repnz inc mov mull (bad) cmp mov pop dec into clc xorl in je xor sub out mov out sub daa or mov loope push add cld cltd movsb and mov inc (bad) cltd xchg jnp inc lods fstpl (bad) (bad) or test mov lret inc divb out je fsubp stc pop mov or enter lods jbe mov pop (bad) cmp popa and sub outsb repz and mov or enter daa inc test and mov in icebp das sub (bad) aas and fnstsw outsl mov jae out in add mov pop in and dec pop clc or jmp dec popf or pop dec xlat popa std out out cmp add inc inc std ss mov sbb and iret outsb imul or xchg das mov push hlt in (bad) scas lret jg imul loop add inc xchg mov (bad) pop push js in dec ret add add repz out sub push pop sub xlat loopne (bad) mov sbbb imulb negl mov xor mov push pop mov fstps mov repz out aam data16 ret and xchg xor test inc out mov daa mov incl movsb push (bad) pop or cmpsl or and or fldenv lahf or pop xor enter sub cmp aaa xchg jnp fs cld negb clc (bad) mov sub loopne xor lods adc cmpsl jp das fcomp sarl cwtl repz lahf rcl or sbb mov xchg sub adc dec push push cmpsb and insl mov jbe (bad) mov and scas cmpsl and and add and pop int das out fs (bad) imul push outsb push add cmp lret fist repnz xchg icebp les negl jecxz adc sbb cltd ret add sub scas mov pop mov sub pop (bad) movsl cld daa les jecxz sbb out push movsb test mov aad pop dec push stos jns (bad) lods and mov scas notb lcall pop push (bad) pop inc lods cmp xchg call movb es lahf pop jp fistpl inc sub cmpsb stc xchg fdivs and sbb push xor lahf xor mov (bad) mov out xor cli cld ret xchg xlat adc adc cmp adc mov out insb pop mov jb or fsubrl bnd add jmp xchg insb pop das xor add cmp jns repnz ret (bad) jle push adc mov divb shll cmpsb and or subl test outsb cmc sbb outsb jmp dec (bad) sbb or mov pop (bad) fbstp push push orl xchg mov add imull add xor ljmp sub fbld or xlat rclb xor repnz lds xor fistpll sub ljmp (bad) mov jo adc (bad) and addr16 scas les std inc idivl sub cs cmp sub mov loope je jmp imul xor sub out dec sti cwtl adc mov mov mov xor xchg push dec scas pop stos adc mov icebp sub push or loope (bad) outsb jmp inc nop add sub lcall mov mov test ret mov es adc push icebp arpl ss add repz incb in cmpb out je stos mov ljmp stos jae mov les or pop push sub xor push pop inc dec mov xchg lds xchg jp pop dec fsqrt sub scas mov test and mov adc (bad) mov jge jl dec imul or gs sub jmp inc xchg cli fldl cmp fs stos mov lret inc mov ret pop nop jo or bound pushf inc hlt xor inc cs sub xor adc cmpsb mov es push push push lods rclb cs lret jae push subb mov test xchg out popa and repz xchg in out dec popf mov add pushf loop and aaa mov iret mov mov in adc popf xor jne repnz sahf xchg ljmp (bad) ret sub sbb cli je push push ds pushf (bad) fistp push pop dec into sti lret add int outsl les ret std sbb mov decl idiv or ds icebp jnp out pop incb test imul or shr xchg lds daa xlat or (bad) (bad) xchg sub negb imul sub loopne mov notb (bad) jmp dec (bad) scas (bad) push mov fmull sbb and fstl lret into or jbe jne sbb add iret dec mul lds (bad) movzbl icebp mov mov xor add scas jne xor and stos ficoml inc jl jno jnp push dec pop dec mov push cmp cld cmpsl add shlb (bad) xchg cmc adc sbb lock out outsb jno sbb mov adc cmpsb mov fnstenv ret xor shlb jmp mov cld movsb leave jno or pop cmp and je outsb jmp idivb sub shr repz vaddsubps daa rorl jle xor cmpsl in aas and add daa sub test jmp ret (bad) jmp sbb lret lds xchg xor push or jmp outsl les mov adc (bad) test iret fisubl cmp out out mov pop lds je nop add sub and sbb xlat jl lret mov push adc jl lds shrb xor lea push ret (bad) pop xor stc xor and cmc ror lods jbe adc jb sub negl sub mov push leave pop stc rorb pop mov sub cmpsb (bad) mov push lret sbb idivb mov jl mov xor mov rolb iret cld test sarl cltd adc add and lock xchg test scas mov push xor sub dec mov dec cld fidiv ja or sub mov dec fstps ret xor mov jnp mov nop rorb and mov sub sbb inc and ss daa fxch push or test fldl push loopne fadds inc sbb nop int mov in sub fnstenv jl xchg mov inc push dec push jle call not jle je jmp xchg mov jmp mov add fs xor pop dec pop mov mov or fisubr ljmp scas icebp pushf aam jecxz loopne (bad) jle (bad) dec push movsb mov and in cmc adc insb out sbb pop and sub pop sti iret push pop xchg out sub fsubrl sub ret or dec cmc into adc popf mov out stos or mov or lock pop adc pop js test and cmc sub jmp mov xchg test mov je pop push imulb jg mov add shr xchg idiv cmpsl jne pop fldl2t inc (bad) enter add insb ret das add fcmovnb adc mov repz or mov xor dec lret aam pop and xchg rcll ret scas push ja xlat repz les mov sub or pop xchg movsl dec jno (bad) shrb lods push in into sbb push adc icebp aaa mov lcall fwait data16 mov mov ret cltd das (bad) push loop add lcall out stc icebp mov sub lock sub lret fldt rolb lahf mov dec jmp or in mov faddl jno mov and add inc fsubrl stos or push fldcw ret or ss xchg xchg imul add movsl loope sub jne popa movsl sbb pop push enter cmp clc pushf dec mov add sti mulb loope out aas dec fsubs xchg cld jmp movsl push mov or (bad) fstpl (bad) xlat cmp repnz ljmp add cli int3 xor in das mov pop dec mov and mov jno dec xlat loopne ret or xchg mov sub dec cmp sarb ficoml in push das cmpsl mov add mov ja enter jmp add ljmp lods mov jne,pt test mov mov pop jge cmpsl cli jo dec pop scas lret test ja and fldcw clc mov popf sub div aad subb dec (bad) sub (bad) aaa xor jle xchg jmp dec andl mov pop pop inc ds add nop and and loope push dec dec movb add lcall or (bad) mov sub xchg push shrb xchg rcrl out ja in mov or notl sub insl push add push pop shll and cmp repnz cld int cmpsb dec cmp push loope push dec mov (bad) fwait roll inc mov push inc loop or cmpsb xor leave ret sbb mov adc adc cli loop xchg add add stc rcrb shll outsl mov ret mov inc bndstx sub add mov jno lock add push inc test mov jne test out mov (bad) jl jne lods rol push fistp lods pushf push inc xlat or outsb jecxz adc sub stos je repnz adc (bad) daa and cmc push outsl rclb xchg add inc add pop sahf bound xchg call add call xchg or ret ss sub out cs cmp sbb dec or fsubrl mov std in xchg xlat mov mov adc fucomip addr16 xchg ljmp and in subl and dec and test lret aas sub mov fidiv add out dec fldcw testb adc out or out div jp lods lock insb pop xchg in iret sub inc sub jbe sub mov inc mov sarl leave dec lret jno mov mov xchg and mov push dec pop iret das pop pop std xor adc inc test pop add stos testb lahf into cmp and jp js arpl jg pop or (bad) cwtl popf mov mov aas pop ffreep lcall and nop push popf shl sub rcl stos popf aaa or push inc jnp fbld xbegin cmpsl fs mov cs (bad) test sbb xchg int3 out hlt xlat leave repz cmpsl or push mov add aam loopne dec inc bound mov notl mov or push popf mov pushf xchg jg nop fsts stos jo out add test inc xchg sbb sub pop xchg dec pushf aas cmpsb push pop out jp lea lcall div int xor mov and test add dec mov mov pop insb xchg divl sbb push add sub sub stos les jmp scas push addb out mov xchg sbb data16 fs ret icebp push add mov popf js xlat retw lods lret push repz mov imul aam add ret mov and jne and pop repnz mull sbb pop lods in add mov shrl lret fs xlat popf pop ret lods std test fs in dec cmp fisttp ljmp mov fsubrl jno mov movb add js lds sbb cltd inc or repnz dec sub xor sbb add movsb xor push add add adc sarl mov jmp mov int cmp add adc inc fstl test mov mov icebp jmp cmp lret cli pop jmp or popf mov jmp out sub push out push mov xchg cld pop dec mov pop test push push and scas mov fsubp ficoml shrl imul scas xchg popa out and xchg stc or jmp add pushf mov sbbl dec pop adc sahf inc movsl std lds pop in (bad) mov test jg push sub and sub das (bad) mov sbb iret add call call sub add xlat xchg mov rcrb mov popf hlt (bad) mov out dec jo (bad) xor lcall xchg aas stos popf xor mov push ss jns jg es repnz ds or adc lret mov stc iret cmp sub out mov mov (bad) mov scas add test lock mov repnz sub jmp mov mov aam das (bad) out and jl mov push mov dec nop cmp lret es fdivl mov sub sub add or inc add out (bad) mov dec (bad) pop mov inc mov jb pop dec mov fsubrs enter test dec mov mov bound mov cmp repnz or lcall mov faddp imul jecxz add or push xchg xchg jecxz mov add insb cld cli rcrl cmpsl xor jmp jo jecxz xchg adc pop push cmp out ja cs jecxz ror iret stc mov mov jge push lret inc mov mov and nop and inc xchg decb repnz xor add pusha imul mov stos out dec adc inc or xchg xor sbb dec ficom fcoml add ficoml xor xor (bad) (bad) jge jp rcrl mov mov adc (bad) sbb jbe (bad) fsubrp fs or in add add (bad) pop jmp inc adc xchg or pop das push popa add ret fmulp pop jle jmp and gs daa std adc divb mov xlat xor imul lahf xchg (bad) imul or xor xchg gs push lret das or cmovno fs adc rorl mov pop mov dec dec mov xor fistpll xchg (bad) scas mov (bad) or (bad) cmc idivb leave add aad add sub pushf jle pop sbb dec push mov xchg push mov imul test jnp stos jne inc xchg scas int push mov aad ss adc push outsb lods xor lock out xchg xor pop popf mov insl stc mov mov or sub (bad) fcmovnbe movsb mov xor xchg and daa and adc clc (bad) mov loop xlat aad bound adc fidiv ljmp (bad) (bad) call lret push and mov pop insb add mov repnz (bad) mov dec mov push xor xchg test subb aaa and test fstpt pop repnz in and inc add inc lods sti aam cld icebp mov clc cmp (bad) rep pop xor out loop and pop mov xchg sub and add jle cmp cwtl int3 pop cmp sub cmp mov add ss xlat dec imul shl xor movsl and pop add fadd icebp mov inc add and push sahf and ds add cmpb adc add fptan cmpsl stc js lahf mov fcmovnbe and mov in adc mov pop and mov pop mov dec lea in inc leave adc add push cwtl push add mov minps push mov testb xlat push push cs push mov mov into dec inc hlt mov mov imull cmp xchg je mov xchg clc scas pop jb and sbbb scas int3 pop dec iret lods mov daa out dec adc inc in aam lods sbb stos fmull bound mov mov out push push sub xchg in ret pop lret sti xor or sbb psllq fimul dec xorl (bad) jp pusha mov push int3 das mov and xchg push mov cmp das neg sbb (bad) jmp xchg mov cmp fdecstp mov int xchg out xchg and cmp popw cmp or xchg hlt xor xor sbb mov or add sbb mov pop and cmp sar push xor jecxz add push xor leave idivl jmp pop lret pop inc lds ret cmp mov jmp pop xchg ret movsl push fcmovbe pop fistl push fistl add mov pop test out mov jmp xchg es and (bad) mov push ljmp icebp out mov (bad) xor adc xchg pop nop icebp sub xlat (bad) mov mov or sub sarb stc popa mov pop fdivs inc and and dec mov dec sar cmp iret xlat cmp fs pop add mov in pop jecxz scas mov stc sbb mov jno scas and loope fsub les scas sub sub loope repnz xchg mov add mov fbstp pop sbb jmp mov cwtl add sub pushf cli cmp outsl mov (bad) mov adc mov enter test stc push dec xlat stos dec std lds or call rclb bound mov jmp pusha push iret add xlat push stos xchg push fisub into pop pusha or or ja push adc mov xchg cwtl scas xor mov das cltd add popa out xor xor out lret xlat pop (bad) mov fistp inc (bad) fsub push (bad) cmp out or cmp mov loop fildl mov xchg jns xchg pop stos dec (bad) mov mov xchg dec jmp mov jae inc sbb mov push aam and sbb roll pop mov lret in pop insb test pop repnz (bad) xor mov mov shrl aas sub cmp sub mov lret or mov fbld dec lret pop outsb inc pusha or adc daa movzwl dec jne stos mov add ret test xor and mov loop fldcw icebp shrb pushw out (bad) stc movzbl jle iret lret ret jnp stc sub xchg je gs pop cmp add clc sub into fild add decl mov (bad) nop out pop ljmp pop pop notl sub mul sahf dec cltd dec mov divb lahf or aam pop xor dec add fistpll clc dec mov call adc pop dec mov ret inc int (bad) int3 leave std (bad) enter mov pop incb repnz xor loop push repnz call jge out and fstps (bad) mull in icebp dec fimull mov dec loope cmp movsb decl adc push xor pop mov hlt repnz jae add mov lock gs mov sbb (bad) lods cltd add sub sarl gs mov mov mull repz add cmp mov pusha leave xlat mov rsqrtps jnp sub icebp or mov mov xchg ja adc fcomps sub pop sbb mov or jp inc and stc out movsl rclb xchg adc push fs cli rcll test pop mov fild xchg xchg add mov jnp aaa notl outsb and mov xchg adc les and ja cmp push add lret cwtl push add or xchg cltd cmp pop test jge int3 lret rdtsc push dec inc xchg pop movsl mov and ljmp mov mov mov pop cwtl sbb mov ds inc call clc mov xor test or rcll in add cmpsl jno test add sti lret fcoml add int3 popa adc jb xchg enter sub or dec mov push sbb and mov xor dec insb xchg or test movsb mov or xchg adc and inc dec xor cmp sub out into xchg push leave xor (bad) or mov clc xor fimul add aas sub popf faddl (bad) or rclb dec je jmp (bad) push push out mov (bad) pop imul cmc xchg (bad) jbe xor cld xor dec xor mov mov pop test adc jne xchg shlb icebp shlb jp or or ss ljmp daa push lds and ret xchg cmp lret fnop (bad) xor dec mov mov int int3 rcrl (bad) lcall jmp cmp mov dec mov adc stos or pop fisttpll xchg pop rcrb ljmp xor es gs mov mov mov leave jno jl mov dec je push sub mov add mov xor pusha mov pop pop lret out push jno aas int sub sub sti xor scas cld movsb dec leave inc jle or lock je xchg xchg out rcll adc sbb xor insb dec les xlat stos cmpsb and pop rorl xchg pop mov jg roll scas idivb xor out sub pop sub mov push inc mov and lods cmp add mov and daa sub out sub jmp rcll imul jb or inc mov aad push mov xor and xchg xor scas imul xchg jg adc (bad) clc or jmp inc call std dec enter push fs test fldenv xor mov and aaa jmp sub sahf aad addl mov pusha (bad) sub jb jp (bad) xor pop dec adc stos into dec imul jg cld inc fidiv std sti test sbb lock xor fld add sub mov fcoms arpl shlb shr push push aas sub movsl out out mov mov inc adc sub cmp mov stos fs mov sarl add xor mov movsb stos xor add leave (bad) das pop sub mov pop lahf mov ljmp and sbb mov daa lret push subl sub pop ds sub sti cmc sub sub stos cmp mov in shrb (bad) and out pop xchg lret xor (bad) sbb pop negb repz aaa push les stos stc push cmp jns jbe popa mov das ljmp mov pop sub aam pop or xor mov mov push sbb outsb cmpsb mov jge inc fstps and lods sub (bad) and fldcw (bad) lret (bad) aam sub stos mov xor addr16 inc sbb add mov jge ljmp pop sub (bad) cmc fcoms rorb shr shl cmpsl mov or sarb notl adc das add inc jb lret stc xor pop shl push sub push mov ja inc and aad or dec push or and mov cmpxchg clc adc add lret jle frstor sti add push pop add xor shlb or out in add and jg mov rcrl adc sbb pop xor (bad) popf (bad) mov test and stos stc xor mov popa add mov mov and add sub push push (bad) mov sahf pop adc call testb andb iret clc adc ficompl popa icebp mov je adc sbb sbb popf push pop jge xor shrb test jecxz sub mov enter stos lods jg ficom in cmp adc xlat cmp xor aas std iret icebp negb js movsl cwtl and mov adc mov cmc and lret mov stos add loop xor mov (bad) push fcmovnbe cmpsl shrl or loopne mov sub add pop int3 adc cmp cmp cmp mov mov jnp mov fcomps or mov pop repz test cmp push xchg jmp xchg (bad) repz mov pop out addr16 pop daa and lcall pop jle imul stc sarl xor test in call repz cmpb out cmp push jle jmp xor sahf movsl xlat sbb ja and mov cmpsl mov movsb lods cmpb adc jmp int movsb nop negb jmp (bad) dec xor icebp xchg xchg mov add mov fidiv movsl adc sti push dec push lret sub scas pop pop push sbb aaa test add movsb lret push sub mov add fdivs in ds mov daa xor mov lcall jl sub test mov fnstsw sub cmc cs aas mov fisubr test add sti mov js jge jbe sbb cmp pop inc jmp sahf iret push jmp or cmpl or mov xlat repz out and jg pop mov jg repz call adc cld mov iret imul push push addr16 sub push jae adc mov pop (bad) dec and mov fs mov sbb mov int3 lret or icebp inc or and mov test rcrb les dec xchg add ret jmp stc add (bad) sti fstl adc mov xor into dec in mov fadds out dec dec ss push mov jmp ja fsubrs flds rol mov vdivps inc mov mulb pop inc lahf mov lods lock mov adc pop and addr16 push shl mov pop sub adc xor call mov push sub inc fdivrl or rcrl or lcall dec sahf xchg or popf push adc ror push aas scas inc out push xchg fidivr orb sarb repz mov cmp pop dec xor push out es addl xchg divl mov push mov push repnz loope repz not xor stos mov (bad) pop xor cmpsl adc push jb cmp pop push sub aad sti pop cmc repz pop mov shrl mov into inc insl jne pop rol pop and call pop push push add xchg mov shrb sbb mov pop shr iret lret or pop push mov xor pop pop mov pop shr add movsb and pop mulb jecxz add nop arpl sub cmp or lods mov mov jnp xchg addl repnz and es or add xlat std jnp sahf add xchg or mov add jae fsubs mov rolb shl mov adc clc dec push rol push ret add imul dec adc push mov dec mov or repnz inc mov clc (bad) mov pushl (bad) sub in sahf mov ss mov sbb pop add cld and leave xor std jns inc push lods mov push push outsb mov out xchg cmp lds jge das adc (bad) pop add repnz sbb stos jl in dec in mov cmc in xchg fisubr inc mov sub inc sub add in jnp lret xor nop xlat push push mov sbb stos cltd sub cs int jno and popf addr16 into dec imul loope dec and mov and adc andb sub int3 stc (bad) xchg jo daa out dec sbb dec or lahf aam pop jge sbb aas gs xchg xor jmp das fmul cmpsb mov mov imul sbb lock xchg cmpsb loop (bad) aad scas ret mul clc (bad) xchg add jns les sub stos cmp sub push in xchg mov dec push mov call cmp cld sarl fdivs or fiaddl sbb lods cmp add inc test xor add jbe fldenv out pop idiv sub test xor out test ja pusha cs mov pop push popf xchg roll outsb ja xchg pop mov div pop mov and jmp pushf out aaa popf pop repz or mov lret jnp ja rcrb or lret test orl pop hlt bound mov lods inc mov (bad) sti push pusha loop or ret cmc mov adc cmpsl fstpt into into nop stos jp push push cli mov (bad) mov repz or shl adc cli cmp out into pop or jg lret das xchg sbb sarb dec call stos add mov mov in mov mov in in leave notb (bad) bound xor add or int3 or daa xor pop dec es shrl stos mov (bad) mov mov in xchg pop in lret scas ret std data16 inc leave fimull dec repz push sbb jae cmpsl mov lret loopne ljmp sub jmp cs out dec inc sbb idiv (bad) cmp xchg sbb fcomip arpl mov and ds jecxz bound je push fcomip add cmpsl in adc ljmp or add popa xchg vmovaps xlat (bad) fimull out cwtl cli mov push push sbb sarl test stc mov movsl jge lods and and jnp aam jmp mov sub xor lds outsb (bad) mov dec fdivs xchg movsb lock xor shll sub sub and ret fadd xor in popf test inc dec or loopne mov loope cmp jb add sub mov negb (bad) repnz mov jl lret jno dec mov leave sub mov lods or xor icebp mov or lods xchg add shl pop and in mov repnz jne fidiv inc add xor fxch scas into sub rcl xchg lret xor xor and jmp sbb mov pop jns lahf rcll pop sbb and fldcw dec and mov xchg add add (bad) mov hlt xchg outsl (bad) ljmp insb iret mov mov das fsts in mov adc mov mov add sub xor push push fimul clc adc rcrl scas sub fs imul jne aam push sub decl jmp pop into scas sub stos cmp aas cmp and dec (bad) adc mov sub mov bnd js xlat fldt icebp mov in sub gs mov ret mov repnz cld pushf mov push xor mov dec dec sub cmp aas push in and (bad) and and xchg into xor lahf xor addr16 mov xchg dec push xlat jns idivl pop dec popf test call call mov inc cmc fsubrs (bad) ljmp xor sub add dec test mov roll xchg push push lret add in xor dec aas dec push or push adc sbb adc push out xor inc fidivrl ljmp xchg fstl mov and ljmp sbb xor adc fs xor rcll imul adc (bad) dec (bad) daa out aad or mov jnp aaa stos out cmp mov sub int cmp movsl xor adc pop (bad) mov xchg mov mov fcoms outsl sub add cmp sub sub mov xor sub cs cmc xor mov jmp mov sar (bad) outsb mov adc pop add es mov call ret add icebp fimul jmp pop hlt (bad) hlt jmp cmpsl test mov in lods jbe into shll and sub mov cli (bad) enter test negb scas bound push sti dec aam out imul dec add and (bad) pop insb mov adc test stos popa sahf into mov nop test pop pop and dec ret stc (bad) outsb loop dec mov push ds sub jp mov mov bound pop repz or notb dec (bad) mov stos mov mov sub mov cs jge jp add xchg xor arpl mulb jl mov out ret adc pop test mov xchg sarb push or and outsb nop xchg dec xchg add pushf cmpsl lds jmp pop pop cmpsl pop jp insb jmp xor test adc ss out (bad) fnop pusha sbb sti dec pushf pusha maskmovq cltd sub and push test inc pop push xchg pop ljmp repz jl pop outsl jne xchg fldenv mov inc add jne mov cs sub cmp mov sub xor or mov gs cld or pop pop lea add pop jns insb stos (bad) jmp mov (bad) aam rorb dec neg pop jecxz,pn push sub int3 add pop cli adc bnd sahf jg fbld sub (bad) mov cmc sbb repnz adc adc mov movsl jl imul sbb inc jecxz out test mov (bad) push notl daa xor cwtl ret xchg xchg inc pop mov es vmwrite lahf jns cmpsl pop mov ss popa imul notl lods popa dec divl sub sub jge lds mov sarl mov and out sub mov imul inc push mov stos mov ret or mov jbe shrb xchg xchg pop ret xlat imul add xchg test out pop mov dec test movsb cli mov dec sti mov xor das out bound add mov out scas or aad jmp pop js xchg aas dec pop or hlt std adc enter lock mov pop mov fsts sub jne xor mov cmp xchg out jge push xor sbb insb add pop mov lret repz cld push sbb jge outsl mov ret cs (bad) popf repz and jp dec mov imul add jmp or pushf and in int jecxz imul les lret fs cli cltd ret xchg outsb mov adc loop pushl jno mov and call dec mov leave sarb xchg jnp mov (bad) sbb imul add jmp mov iret sti sub and leave xor je add inc leave iret xlat pop fmull sub sbb rcll lods imul pop (bad) cs jmp out inc fisubrl mov dec jecxz and jle mov and mov or inc and adc or les sub xor sub movsl jbe inc leave and movsl xchg fdivr add dec ds jne push sbb pushf and add ljmp pop mov adc and into pop xchg pop cmc fmuls xchg mov and (bad) lock xchg push sub (bad) push (bad) loope scas sub movsbl push sub inc adc xor jecxz and xor cld fs fdivrs mov cli mov mov (bad) pop negl sbbb sbb or pop push mov pop push xchg icebp addr16 (bad) mov pop sti lods pop lds cmp adc andl push mov negl dec mov inc ret mov mov dec mov gs ds mov nop bound mov or sub and xor icebp or inc or pop dec adc in popf cmp add sahf mov xor pop and adc fsubrl mov push inc out sbb fiadd incb mov pop mov mov or adc push mov aaa fldl push aad mov popa and jge push mov sti or jmp out lret cmp add mov out mov dec xchg pop xor mov imul test adc xor jmp pop pop push negl mov xor add orl inc xor cltd sbb rcrl icebp xlat fs mov push xchg out test pop out xor clc sub mov sti push cwtl mov cmp dec mov mov mov add pop dec mov xchg stos jo push push push aaa jne cmc cmp pop call xchg imul lahf ds jo jne fisttp addr16 mov push sub sti pop sub push popf dec cltd dec incb ret std movsl xor jne or rorb jecxz lods outsb inc (bad) std mov xchg jmp pop (bad) into call dec lret sbb inc mov xchg push lock out cmp jb or aas icebp push cmp shll shlb adc outsl (bad) mov ja pop adc mov cwtl jg jge inc xor and inc mov add bound push je jp cmc test lret fcmovnb push scas pusha mov aas negl std es jge pop jg insb bound jl pop dec sub lcall out dec or adc iret out sub cmp leave leave push inc inc mov inc into inc dec sub stc sub and dec out cmpsb dec in mov push mov out push out sbb xchg iret and dec inc lea test sub loope (bad) bound fprem1 fldt mov sbbl cmp out mov insb and cmp sub (bad) cmpsb cs push in loope xor or xchg ret xor add (bad) (bad) mov and das loope adc mov xchg or lcall push popa push dec sub das mov mov ja and fisubr mov fs addr16 sbb inc fstpt subb mov cmpsl lret add (bad) mov lds push test mov ret xor decb sbb xchg into int3 aad add or push inc push xor out cltd jbe mov and add movsl sub add or adc or inc push popf jne aas xlat dec add dec xor xor stos mov dec mov or pushf adc lods test movsl scas fstp and (bad) std jmp dec sbb fidivl sub mov cwtl pop pop popf gs add sub ljmp inc and sub ds insb lds adc adc add jno add xchg fisttpl lret and enter cli repnz lds test xchg jle leave sub xlat out popf sub stos cmp test es int jnp lock pushf clc notl adcb and or sub fisttp pop mov cmp mov mov xlat sbb xchg push mov fistp mov iret or jle lret aam mull fistpll inc mov sub imull or sub cmc lret xor movsb xchg mov sbb mov pop pop mov push clc enter fildll iret mov mov inc into fnstsw subl cmp sub cwtl insl pop xchg mov loope add cmp in sbb pushf push and push inc or push (bad) mov lret gs mov sar insb test jge out xchg shrb mov repz imul dec test add sahf out rep mov (bad) out enter pop imul test insb pop mov add jno imul add adc xor nop out sub or daa xorl pusha and jno push jno imul loop xchg scas sub (bad) out ss mov or aad loopne out mov mov cmp sub cmp jmp ljmp mov (bad) sub lock fnstenv cli add ljmp xchg bound sarl xchg shll push mov testb divb mov cmp mov cmp push mov add pop test out and (bad) int3 push lcall daa fadd jb int3 mov jnp out out lret jp xor cmpsb push daa out je pop fyl2xp1 add push mov test ljmp adc xor jecxz mov add mov sub adc push mov lds mov lds fdivrl adc ljmp add add mov pop push dec xor mov cmc iret insl rolb test pop je push aas (bad) mov notl push adc shrl push mov cmp test mov test ror orl cmp cmp out icebp pop imul (bad) add std cmp leave rcrl test pop mov xor ret adc sub fidivr repz dec ret jne enter sub mov fildll pop and add sbb inc xchg xor cmp sub push mov mov adc and les (bad) fyl2x adc fs (bad) cs and add mov stos fcompl fsts dec test pop lcall std or or push mov adcb sti jg int3 jp and lret fisttpll mov ret dec movsb jp in add aas jecxz jb shrl lods test inc sti test stc sbb inc loope mov sub xor add stos xor sti dec sbb ljmp out dec pop push out adc out (bad) lds shll and lods and imul and mov addl movsl jmp xrelease mov mov add xor add or cmc loop (bad) out outsl out (bad) dec (bad) lret pop cld xchg sub xor or push sub cs and xor add faddl fnstenv sbb nop xchg rorb and lcall jnp daa nop call mov ret push lods xchg icebp movsb test add cltd dec in negb xor repz and add imulb (bad) std xchg (bad) mov dec jge jge xor mov dec or mov or sbb lea cmp mov jo out mov out stc mov pop int3 jno inc mov push in mov add test adc iret outsb mov pop rcrl push or push cmp push lods mov push jnp xchg orb (bad) sbb adc dec sub inc mov xor pop out ljmp mov inc xor iret pop or hlt rorl and sub out xchg out mov sbb xlat ror inc into imul ljmp test pop lret test enter mov das adc imul cmpsb ss cmc popa into add lret and xchg sub mov loop fstp lea lret imul repnz inc stos xchg out (bad) xor jmp mov cltd cmc xchg (bad) mov and jnp and jecxz mov vmovntps in sub jno imul rep push mov repz leave cli mov es nop jmp push sub xor ret sub negb sub adc add adc subl fidivl pusha ss inc and dec mov repnz in and sub dec data16 xor push pop pushf ficom repz sub int3 loop xchg push ss add movsb push scas mov call ds pop sub stos push mov loop and jmp incb adc or into aaa popf fnsave jg jb mov mov and sub outsb adc into jbe add add lcall xor jb loop test sarl mov stc out xchg jecxz sub xchg ljmp cmpsb xchg out ret xchg inc mov out rolb and push scas movsl (bad) mov or xor jbe push add xor cmp clc push cmpsb sbb adc add mov mov clc cmp mov gs cltd pop dec jl xchg pop cmp das mov je cltd mov adc mov inc (bad) insb sub dec cli out xor inc mov mul add sub pop stos (bad) adc sub mov jno mov jno mov mov or cwtl nop xor dec mov inc add xchg sub je (bad) mov fsubl sti and (bad) dec call ret add sahf xchg leave lret push mov insl movsl sbb and sti sti xor sub adc mov mov inc sti mov dec stos gs jmp stc fcmovne out faddl mov dec fiadd movsb adc call sub lret mov rorl ret and leave and add fisttpll sub fistl lcall call push into dec xchg sbb jg pop xlat pop push cmpsb enter pop xor out or add sbb and lahf inc sbb ret adc pop or stos repnz push loop inc mov cs pop mov xor push push cmp out scas bound adc lcall pop dec rcll or xor scas shll imul (bad) mov int movsb fimull inc pop xchg movsb xor adc adc mov sub xchg into xchg lahf push xchg je xor fisubr movsl testb hlt fild stos arpl (bad) cli jmp pop mov cwtl pushl xchg outsl imul xchg pushf mov inc lds ljmp rcrl jge cmp lahf mov add mov push push das (bad) xor xchg outsb sbb popf sti mov aad xchg nop xchg lret mov mov sub cwtl mov inc inc js rcl dec imul sub cmpsl and loop into out or imul push push add and shrb jge mov and mov xor sti test mov add and dec dec loope sub sti mov int xchg out divl repz cmp into scas sub pop dec mov adc int3 mov and stc in loop pop adc or mov cwtl cli loope xchg in or aaa mov ja dec add leave and xor into mov fsubl adc mov daa out cld into pop cld pop and popf or neg pop or push or ret xchg adc adc xor or sub mov and inc inc mov into sbb movsl gs sub xchg or pop mov sub xor dec scas nop dec add sahf jbe jmp push iret iret sbb mov sbb leave jp das mul pop scas jb xor and in pop bound in add sub or and lahf mov rcll cmc add pop inc syscall jmp xor popf jno sub les lret mov add inc cmp jmp xlat dec (bad) mov (bad) sub fdivp or into test movsb out mov and xor cmp add jmp sbb ret sub cmpsb jbe xchg pop ret pop mov shl ja sarl pop pop sub movsl adc repz (bad) (bad) or or pusha (bad) loop and gs mov call sarl xor ret xchg je outsl push adc scas cmp aad std rorl sub sarl jne repnz icebp mov jge mov stos inc js dec fucomi jns ds add pop mov xor mov lret es bound std jns inc lret scas idiv adc ret cli lea cmp xor in inc mull shrl int ljmp xor pop icebp popa push leave pop cmp inc lret xor mov movsl imul or push (bad) imul pop add push clc popf aam imul in icebp mov jmp cwtl aad mov es sub jmp ss mov adc sbb stos je mov lea adc (bad) cmp in mov adc and scas loop leave jnp xor adc adc das inc jae push jne ret bound ss jne sbb cmpsl cltd add or ret dec aam inc xchg repnz lods push push jecxz shrl jb cmp adc sbb cltd and pop jg cmp adc mov (bad) gs dec sbb mov rorb divb pop (bad) bound mov mov jg popa add fimul xlat add add cltd mov cmp or ret pushf je popa jmp outsl and test add or popf xor je inc xor push mov pop cwtl push not mov sub inc dec xor dec mulb mov push push lods mov iret ja mov ret sub mov dec or fsubl clc mov cltd pop loope push imul ret xor dec and clc scas mov jecxz cli insl aaa and pop (bad) mov shrl push cmpsl insl cmp dec add ja into push inc cmpsb inc xchg shrl add cmp jbe fimul push push sub xor mov or pop aam out mov jnp cmc fcomp cmp (bad) add jmp dec int add sbbl sub cmp lds ret ljmp sbb iret pop lret mov dec pop (bad) dec jno add imul aas call scas dec pop or sarl sub outsb les or fild lods outsb mov iret stc stos (bad) jno movl data16 inc rcll shll out fnstenv (bad) mul jne clc push repnz pop cmpsb inc daa int3 mov (bad) add xor aad mov xchg mov stos dec dec sub inc sbb test fild shrb mov xchg and and pop xchg leave and inc push xchg inc popa fbld mov or lret loopne or nop or int3 mov and push jecxz add mov jne call imul xchg data16 pushf sub push out mov mov icebp sub cli sbb lret dec lret (bad) dec push inc xchg movsl push sbb xor and repnz mov sub dec cli gs jecxz int3 (bad) mov (bad) f2xm1 adc daa out gs icebp sub mov fcomps mov inc shrl and std sahf lret and paddb mov push shll inc xchg and mov mov out push adc inc loop popl test or ds ljmp xor (bad) dec xchg loopne idivb sub ss cmp pop sub mov (bad) sub mov imul ret xor icebp inc mov imul (bad) mov pop xor xor idivl fmuls ficom jl cmpsl cmc clc (bad) popf push pop cld xlat push xlat in pop xor fmuls jge icebp inc ret fmuls mov into (bad) dec test adc adc adc and pop sbb mov jbe insb in cmp pop test mov rorb add xor fdivs rcll and push shll or and mov cli jns leave pop or cmp cli sub sarb or (bad) lahf cld loope sub mov fldl2t dec mov int3 imul sbb mov push xchg popa add sub cltd mov pop mov lret (bad) jle lock neg fs jecxz dec stc std adc mov loopne adc icebp mov push and adc mov xlat lds sbb out frstor and idivb pop pushf lods adc (bad) pusha fs push (bad) dec lret xchg mov push fldenv mov push or bound jmp mov out cmp sub adc into mov mov push rcrl or mov sbb cwtl sahf pop das inc cmp xlat xor outsl mov mov xchg out pusha sbb sbb and mov push aam cmpsb pop cmp cwtl cmpsb inc or das push stos inc mov jmp arpl push outsl jae mov sti int3 aam mov xchg (bad) and mov clc fsts dec xor enter xlat mov mov icebp pop repz scas sbb neg pop loopne jbe and std pusha aad pop mov jae mov jmp jmp fcomip inc (bad) xor popa in or jae jg pop sbb leave sarl mov xorb aad jmp dec xchg je push or and stc js in mov and ret adc mov mov loope mov leave jge jge fstpl pop shrl and mov fistp lret jg mov clc mov stos mov fs stos call cltd or xor repnz (bad) fcom pop jle mov fsubrs lret jno inc and aaa outsb std call mov xor sub pop (bad) push push mov dec add shlb (bad) mov dec jmp (bad) sub push add cmp notl (bad) mov or pop in rorb jne clc subl out jae stos sub dec call mov jmp rcll or cmpsb and pop outsb xchg sub fdecstp das push in pop mov js insl push inc orb add xchg and add mov xor or mov sbb mov mov jmp movsb nop loop pop (bad) loopne daa sti mov scas push pop cld push mov idiv or stos jge outsb dec inc cmp pop adc sub mov rcr fldenv jge icebp jecxz dec in adc dec pop dec stos xor push lds nop (bad) ss daa jmp xchg sub and out xor call add arpl xchg cmpsb loope adc (bad) mov test in and aad fisttpll fidivr stc cmp mov in cltd mov pop in leave aad mulw lahf pop mov fdivrp jmp mov or nop jmp in push das repz push stc cld out pushf cmp lods sbb lret jl (bad) ja and xor pop mov ret test mov scas or testl cmp sbb clc add mov jge jmp std adc cmc movl (bad) xor mov sarb ret xchg js or mov dec ret mov xor loop insb xchg cltd cmp outsb loop leave add mov ret and mov sbb push loop pop les sbb jle call mov mov outsl mov mov xlat mov adc pop cmpsb loop in js or push cmpsl pop adc imull dec rcr ret and ret pop sti mov sub movsb add or lahf jg mov je jmp outsb (bad) hlt pop xchg inc lahf es mov push in mov stos bound ficomp mov aas cld es repz pop clc mov mov sub cs fdivrs mov or cmc sub push imul jmp out mov frstor or push push cwtl jl pop and mov push nop pop sbb lock and in sub inc lcall cmp neg add or pushf lds adc jg mov loop fdivrp xor repnz into mov xchg je bound daa xor jg cmp and fs xor loopne iret and and dec test stc out inc xchg or bound push cltd mov (bad) gs pop out and add jg push or sbb mov notl sbb jecxz mov std sub mov iret (bad) mov or jno imul and or push mov movb iret sbb rolb pop inc xchg sub sub roll mov jp inc mov mov dec dec (bad) bnd in jno jnp mov xor xchg fbld (bad) (bad) mov jl push mov cmc das fmuls dec or js ljmp push jmp and (bad) mov repz lcall fidivl mov divb fildll ljmp stos int lea test rclb (bad) jecxz lret sub cmp adc mov sbb leave adc in test xor nop dec mov rorb leave in aam fadds (bad) pop lods ja cmp lods sub xchg push xchg sub (bad) icebp out fisttpll dec cmpsl je lret data16 sub mov fnstcw inc xor mov add jne loop sub (bad) imul nop enter lods test sbb jle jae scas push pop jp jae adc pop scas repnz mov xlat or push sbb mov and cwtl xchg (bad) in or mov ljmp ret inc xlat test scas loope jg decb xor rcrl inc xchg or ljmp mov adc sbb xchg imul iret inc insl mov sub push daa in icebp mov test cs ljmp fsubr imul dec movsl stos cmc sbbl or sbb cmp pop fs push sub out and (bad) sbb xor and xor dec icebp pop in das sbb lret aaa faddl fistpl xor mov push ret and mov dec and pop sub jb pop jmp (bad) mov enter out pop adc jmp add jl pushf mov xchg add xchg in pop mov mov push imul xor je icebp cmpsl xchg and int3 imul rcrl and idivl ljmp faddl dec mov cs decl shrl sub into lahf fdiv push xlat dec out imul jbe out jp sub mov pop cmpsb and int3 rorb cmp push xor lods and pop lock pusha leave xor rorl xor cmc lds fiaddl xor mov mov in daa mov addb sub mov je in stos sub test pop aaa sti sub addr16 xor sub into aas lods dec sahf xchg lret ret (bad) jns addr16 leave data16 out pop mov fbld adc and daa xor inc mov pop xor mov sub ret jg push mov cld mov sbb sub push or dec add mov cs (bad) jmp adc xchg xchg push add sub dec or jnp cwtl xlat mov repnz xchg sub fdivrs loop and jo sub (bad) mov add ja,pn cmp ljmp imul mov stos sub out mov push imul enter out (bad) sahf test fstp das dec jge sbb fs jbe adc and or or and dec dec sarl xchg mov cmc lret outsb lcall mov (bad) lea lret out bound out out pop push repnz fldcw jge les pop cwtl pop xor out into ret cs jae jmp shl dec push sub inc sarl (bad) mov add aam shrb ret and mov aaa pushf lods add stos test jbe add cli scas in aas mov mov add pop in popa dec sub sahf (bad) shr out mov ljmp pop xlat cmp fmul push flds or inc ret js xchg jge in mov cmp lds cmp sub mov mov inc xchg test adc sub pushf ljmp scas fsubl dec repnz mov xor (bad) in or or mov ds jmp (bad) xlat mov (bad) xchg cmp mov fnstenv addb jno icebp leave cmp gs dec mov inc pop and add out pop and out (bad) xor mov ss adc fistl (bad) (bad) mov xrelease ljmp in pop mov or fwait dec (bad) or test mov sarl push ljmpw aad rclb test dec sub es xlat xchg mov daa push mov inc jno and xor bound ljmp gs and mov add loop add shrl xchg pop out sub pop xor mov sub lock sub negl imul int sbb fimul lcall push clc push sar dec scas lret call or pop in cmp dec sar loop test or mov mov inc iret call add in notl add lret adc incl repz wbinvd xchg jg pop into cli repnz fs aaa mov aad iret xlat sti lret scas bound scas or xchg push cmpsb mov mov xor jge imul loope pop mov and call std mov sub jb push lcall das pushf adc inc sub lds test pop out jp sub inc pop inc sbb idivl daa (bad) pop (bad) int3 (bad) or or (bad) mov (bad) out dec daa mov mov sub inc cmc mov leave and push in cltd adc lea mov xchg pop mov mov test aad cwtl sbb mov (bad) sbb push push (bad) adc pop cmp add mov (bad) lea out aaa lods idiv and test aas flds cmp int inc cmp lds ret jb out and jecxz jge push jb mov testl std add test lds adc fs out loope outsl xchg movb int aaa loop fistpl mov lahf out mov push jae insb jmp sub retw cld ja out push dec daa data16 sti leave fcom into ja sub dec daa mov fnstsw lods ds hlt jnp in and or push pop push push adc xor push adc out popf in cmp das mov bound mov mov and mov or mov push cmc jg mov mov or cmc inc xchg movsb mov push inc push cmpsl les pop add and or cli sub fldcw aas mov imul std push aas mov xchg daa out mov les fcoms xor xor sub mov and add das dec pop sub cli dec cli mov jmp (bad) jle inc imul jno and push mov pop sbb comiss and inc lret or adc pop gs jmp loop lcall pop or rcrb xchg adc out aam cmp into sub push daa leave loop xchg ret neg push jg sub and jnp adc jecxz and jl jb int3 popa pop call adc jmp daa sbb das inc hlt pop out mov movsl (bad) repnz (bad) gs adc imull leave testb sub and xor jg xor jg and sub call out into inc dec dec adc sbb test repnz xor inc sub out mov into push sbbl dec push mov mov mov xorl cmp sub mov xlat test dec add sub sub pop sub lea lea sahf xchg call push push ret movsb popf popa js jnp jno cli lods jnp mov mov adc cli movsl cmp add xor sub and cmc movsb arpl test sbb inc movsl stos mov mov or mov xor stc mov pop mov testb or xchg inc jb cmp rol sub mov push sub adc or sbb xchg cmpsl or (bad) cmp sbb dec and fwait jnp sbb (bad) mov data16 cmp pop divb insb jge divb push and mov and stos xor sub add call std popf je push std andb xlat and mov xadd xchg mov (bad) (bad) or stc xchg add pop mov fbstp mov les rorb lret dec out ret inc sub sbb stc jb pop xlat mov sub sbb or jmp addr16 xor fstps stc ds into pop test dec icebp popa dec ja popa cmpsl dec jecxz push mov std test adc movsb lret push jecxz dec stos lret mov xchg or add (bad) cmp movsl xlat xchg test fildll add add xor (bad) lret lds stos mov lds (bad) sbb idivl mov sub rcr ja sti inc add (bad) jb pop jns sub mov loop xchg adc call dec stos flds outsb loop mov adc repz jmp movsb nop adc ret or addr16 mov xor adcb cmp in sub jbe shr stc scas (bad) hlt xchg cmp ds and jno xchg cli scas out cmp jl (bad) or pusha add jmp lods cmp leave ja pushf push cmp mov jo push add dec (bad) mov loop adc pop sbb fnstcw out frndint ret xchg cs testb sub imul sub lock stc or jp mov lret mov push mov (bad) jmp adcl inc add addr16 push jmp ss jno pushf (bad) leave call imul fimul cld and dec xchg das or push daa rol mov outsb lea leave pop mov sub and mov mov jnp addr16 imul iret pop (bad) idivb pop loop cs pop push and lret mov push jmp cmp mov xor sbb jecxz fsubp loop rcr loopne test sub adc mov (bad) jno jb (bad) cmpb mov clc (bad) (bad) in pop in jp mov clc mov xor popl inc push mov dec mov call sub jno bound iret fdivp push xor xchg sbb out dec int jp push (bad) push add pop mov pop call gs mov int3 jo iret mov mov jb rcll inc decl add pushf jae cmp inc jmp mov loop xor mov pushf idivl inc ret jbe push dec xchg dec xor lock cvtpi2ps mov int cmp and imull sub mov push dec test mov adc pop (bad) dec mov dec call inc pop (bad) mov push decb fstpl (bad) cmp cmpsb dec daa or fisubr and lcall (bad) or out sub jmp pop scas repz xor and sub dec dec mov jne xchg call andb in lahf in adc mov sub adc xchg mov outsb lret mov push out jmp add ljmp cmp rcll andl sub leave repz jp mov cs fcmovnb out mov jmp sbb sub xorl xor (bad) mov cltd scas (bad) int3 daa mov ljmp sbb and loop push dec fucomip popa xchg jnp adc popa test (bad) sub sub add pop fdivs lret aad (bad) in leave jg mov push jnp ret lds mov (bad) clc adc push dec mov mov loop xchg lea cmp or ja sbb repz pop js cltd xor cmpsl aad repz incb xchg fist repz push sub cld push movsb mov aam les out daa xlat sbb hlt out stc (bad) mov xlat push pop xchg pop mov dec lahf inc add sub sub or (bad) dec mov shll loop cmc add repz lret mov mov push xor and xchg repz fsubrp dec data16 jge les mov cmp cmp in xchg mov stc jmp movswl in sub sub or xchg push jl cmc fnstenv xor lock mov test mov adc enter repz jmp out rcrl and popw stos (bad) js mov push jo mov das inc sub popf out out pop sub dec lods cmp push xor adc fwait movsl xor aam xlat in fisttpll adc mov mov test xchg xlat fldcw or xor test push pushf js xlat mov movl jle leave jmp mov pop inc cmp test idiv mov pop ret fimull outsb jns icebp int cmc fnstcw cwtl (bad) jmp push mov fcomip in or bnd xor xchg push (bad) xchg fsubl loope icebp sbb pop push loop mov pop sahf jae iret leave fs push pop fmull add push and stos and sub dec push sbb fsubs decb dec mov gs dec shl push jmp add daa std sti jp pop add jecxz xchg rclb ror mov inc imul movsl (bad) mov pop xor mov ret mov pop rolb iret loop xlat mov in cld ret mov xchg cmc dec add icebp jbe into jmp mov sbb adc lahf mov scas scas lret dec negb mov jne int3 pop cmp mov cld mov pop or mov js xlat mov add int std iret xchg inc xor out and push test imul faddl mov out or mov scas xor pop popf lds push sub inc inc cmp inc loop jge add pop push dec cmp stos out das (bad) push test mov out push aad adc sub insb cli mov stc sub pop mov xlat xor (bad) mov mov xor loopne sbb push xchg idivl xchg add xchg pop xor lock or (bad) jp mov mov into xchg mov push pop stc lods aad add xchg repz test pop push mov jmp push hlt mov repz int push movsb out cmc inc xor push xor mov icebp stos bound push inc stos xchg clc aas dec shrl mov addl stc lcall mov pop and mov ret sbb push fs sub gs sbb jecxz andl mov adc ljmp gs push imul and and cwtl push loope push rorl mov adcl rorl cmp sub or fistp mov jle mov adc cmp stos add pop mov dec call inc push push or lea insl out xor dec pop mov sbb out imul loopne mov and mov push fldt incl and test xchg icebp dec (bad) mov clc sub aad adc fistp lock mov push out xor stc out xchg push jmp fistp in push clc out sbb sub mov outsb loope cmp cmpsb loopne adc lahf push sbb or adc mov ljmp push shr (bad) outsb mov (bad) xor js shrb or sarb add add outsb mov (bad) lret lods fdecstp imul jb test mov negl cmp xor add (bad) ret mov sub pop jmp add or test pop and sub leave nop cmp pop clc out popf icebp nop push and js push jl pusha ja ret into hlt pop ret fs std jae and sbb sub test push push insb sub rol cmpsb inc daa adc mov jb dec (bad) pushf push rorl pop jnp cli mov scas fisttpll push and adcl mov call out lret sub and mov sbb pop test call nop mov and (bad) xor push into push sti lods adc jmp mov test fdivs mov inc inc jne int3 das in adc test sbb rcrb iret jmp lcall mov jge and stc cmpsl mov push cmp das add cld stc jmp inc (bad) xor popa adc push or add ss lcall icebp and adc (bad) mov push mov adc fsubrs stc mov add mov cld popa pop cmp test mov dec push inc std daa ljmp or cmp inc and js jmp cltd or imul xchg fsubrl pop and sub cli int3 or js lahf pop icebp bound jnp sub cmpsl notl je out lea sbb (bad) out pop cmpsb pushf addr16 sub cli (bad) xlat sbb out into scas sub fldenv or cmc lds adc iret xor or mov pop dec or leave out fstpl dec xlat jno mov mov inc push xor adc jecxz out dec test cld call sub clc mov stc pop mov test das adc jns insb mov cmp and and mov daa es cmp push mov and pushf pop dec fs jecxz roll push pop or popf aad pop pop ljmp xchg lods (bad) mov daa scas (bad) or push adc cmpsb lret or scas dec jne jae into jp icebp popa mov leave cmp outsb sub xchg pushf pop pop in insb jle or lret sarl pop push es cmpsl mov jbe sbb mov int flds cmpsb and loope mov imul lods mov repz sbb adc mov xor xchg hlt sbb and mov ret scas movsl aad jo xchg sub cmp cmpsb (bad) adc and sub clc stos push iret dec jmp xor jnp rolb daa mov ss (bad) and push out push adc pop push push ja sub int3 in pop icebp mov mov pop xor (bad) jo add or mov ret ljmp jl sbb mov inc xor cmc jns imul vpsubsw lret shr loop xchg add repnz es mov pop jg mov jmp sti enter push insl sbb lret cmp je adc lret or dec cmc push lea xor xor iret xchg icebp jecxz pop pop and sub dec add aam out or push jmp jns or (bad) push mov bound cmc out pop xchg push or rcrl pop out sub mov jmp xor sub loope icebp lods mov fstpl push into out shrb enter (bad) daa jno into aam add cmp (bad) mov fincstp movsl fimul inc adc and mov ljmp sub pop repz stc cs scas sub or push or pop push mov mov and mov daa into data16 mov flds pop mov cwtl jmp int3 call pop push test icebp xlat inc jo xchg jno mov pop in cmp xchg mov sbb and lods sbb adc add je sub sub repz mov (bad) cmc jp (bad) sti ret pop mov or loop mov or mov add mov jp mov lock or ret pop pop imul faddl and cmpl (bad) lahf imul mov dec call jge xchg pop pop aaa and pop add and jo mov flds pop xor int and std inc cmpsb sub jne ljmp jae insl dec jmp or xchg jmp lock mov sub xor mov imul xchg fnstenv repz add mov sub aaa mov pop xor and push sub sbb xchg lcall das xchg push das xor push lds or dec sarb das movsbl inc sti cmpsb addl cmp test fsubrs mov (bad) adcb push mov inc mov mov add jne dec or xlat test (bad) push cmp loope sarb adc lret adc mov popl insl ret dec mov sbb jo mov and or into faddl dec repz das (bad) out and mov test cmp inc int3 xchg (bad) jp (bad) jg ret (bad) adcb ficoml dec xchg scas in push and add outsb or notb aad cwtl mov dec and push addr16 mov jle push inc sub sbbb lock scas sbb es jmp xor push inc stos mov adc mov jl pop andb orl jecxz dec repz loop jecxz push pushf and rolb dec add sub sub int jg scas scas je mov pop mov pop xchg int3 jg and mov add cmp sti add repnz mov or ljmp das push adc xlat inc mov pushf push or mov or call ret push lock dec sbb imul push sub jae adc and dec fcompl mov xchg (bad) (bad) into into pop mov out push notb fadds xlat dec mov inc push sti dec mov mov mov mov inc ret mov and cmp mov (bad) jnp or and es sub lahf xchg mov dec aam clc or mov or jecxz inc mov sub dec adc mov pop js mov push pop test adc xchg out insb dec loop dec clc lock inc popf xor ljmp out daa inc xchg xchg cmp mov js in xchg imul arpl aam popa loope sarl scas repnz xchg xor ja sbb imulb roll insb jo lahf fdivrl cltd jns bound (bad) pop xor mov push and add shlb cmpsb push add scas xor inc leave push (bad) pop dec jns adcl and xchg jle (bad) daa add aad in cld jle pop and mov jo cmpsb rcrl sub dec mov dec in jb and and sub mov cli cwtl out xchg fldcw push ja sub sbb inc stos stc xchg push xchg sub out test iret sub sub xor repz call in pop call out sarl cmpsl pop inc lea fnstenv cmpsb dec dec cli mov dec shll rcll fisttpll xor sub imul sub dec loope add and jno mov pop dec pop xor or and pushf test out mov js fst decl sbb (bad) sbb mov dec out dec xchg (bad) mov out fistpll lds push cmpsb cmp adc xchg fistpl inc push insb dec xchg fist incl js and xchg xor and mov sub ret pop mov inc cli add lret mov daa call mov js dec sub aas pop nop out sub push push lret xchg dec pop dec lret pop out and inc int3 daa pop out mov xlat lea mov xchg jl imul repz and mov enter inc dec dec ret outsl in jge in dec jmp xor sub sbb (bad) xor sbb mov imul pop insb mov icebp popf xlat test cli mov test cmp inc add xor mov stos and fldcw cld leave cmc popa push fisubr scas adc lds jns out (bad) clc dec aam push fiaddl std into mov test sub es ret enter sub cmp ljmp stos sbb cmp inc add stos test inc jmp ret push pushf aam shrl xchg mov adc js sbb jno jmp test outsb addr16 jne and xor push mov dec rcll add fs ljmp mov add pop jb xchg xchg cmp orb inc or sbb stos pop jno xchg cli lea jno imul inc stos cmc imul cmp (bad) pop adc pop dec xor outsb push fstps ds scas mov loope lock push bound fiadd lret cmp mov lods inc push cmp dec divl cltd xor ds mov shr cmp je cmp cwtl arpl pop test inc mov sti xor lods sub cmp lret inc lcall cmc or push in and das xchg (bad) pop mov or and les adc adc subb mov in jmp push or dec std jg (bad) loope cmp dec sub mov mov xor sub cmp push jp mov mov fadd rorl clc shll dec mov out pop xor ficom fs mov xchg scas inc xor push xchg xchg push pop push repnz push aam jns dec jbe cltd cmp fisubrl sbb lods mov roll xchg and loop mov stos sub sub cmp mov xor bound dec ret imul repz scas inc jnp xchg inc xor mov repnz inc movsl lea repnz inc xchg mov iret pop outsb xchg pop popa xor outsb fcomps mov xor int xchg aaa dec ror mov sbb and fidivl ss aad xchg leave pushf xor adc xchg iret sarb push addr16 xlat xchg pop xchg xchg inc push mov pop sti (bad) int3 les sub xor gs es mov add incb pop push into cmpsl add and or outsl and imul clc xor enter and adc cmp sub sbb aad or jb or jmp pusha add lret popw dec push ror xor mov xchg dec pop and ljmp xchg jo fsub test push xor mov in faddl stos xor adc push or add cmp xchg mov cs dec lods inc sbb dec cmp mov inc fldenv jle mov and xlat push (bad) mov sbb aaa mov arpl (bad) inc mov jp xchg inc and daa into mov jno aam js add jnp das cmc mov cmp out adc stos popa or dec ss or xchg ficom ja xor inc xchg clc xlat (bad) aaa cmp jmp pop jl fwait and and push mov pop mov xor xor jg aas daa lcall rcr cmp decb pop das or mov lods imul fsts adc lret cmc xor dec int lret mov dec dec push add sub out push mov sbb xor and add xor ja push movb pop leave add pop loope push xchg cmp sub into daa xor xlat lcall fisttp mov in cltd mov outsl (bad) sub sub je scas les sub xor jno (bad) mov sub leave add sbb and xor lock pop (bad) xor xchg cmpsl mov add and gs or sub xchg adc (bad) add mov jge les push stos jecxz sarl adc or out int mov mov sub dec pushf sti iret push pop adc sub mov xor or xchg sub push aad inc decl sti pop jp mov mul and clc sub fisttp jb xlat mov sub into cmpsb pop out je popa iret add das scas xor mov pop mov ds fsubp xlat insl xchg sub stc lahf (bad) test bound or addr16 out movsl push fwait jmp cld cmpsb negb test cli (bad) imul ljmp (bad) fisubl mov or bnd cli std into daa repnz aaa push mov inc hlt (bad) (bad) and xor jg rcrb rcrb cmp loop xor inc adc push and pop pop pop pop sub stos mov dec jb,pt xor mov and pop es xchg ja adc lds orb cltd pop inc pop mov jle jg arpl popf rcll mov int3 add ficom movsl jns inc ret push cmpsb adc icebp inc scas lock lret cmpb mov divl adc xor cli jmp push mov jle pop dec pop xor repnz loop mov xlat mov jns mov stc pusha cmpsl fisttpll popa in cmpsl xlat out dec push mov pushf outsl xchg jnp adc into fcoms sub mov stc jbe add dec es pop cmp rcll into sbb push movsl cwtl test sub pop xchg push vcvtss2sd xor sti mov in jnp mov jb sub data16 inc mov leave std shrl xchg pop push inc mov mov data16 sub out mov xor fs les ret jg push mov ret xchg fdiv push cmc jnp or and and das add iret adc and das (bad) or iret fcoml sub fimull fstpl movsl jne jno sub mov es ljmp leave xlat movsb dec add push mov sbb fisubl test loope test (bad) dec sub sahf lcall outsb mov xor and push (bad) pop add imul sub mov pop mov xor sti mov dec fcomps loop and scas ds and and cmp into aaa gs fsubrs fiaddl and orl movsl mov inc push dec fwait imul mov jno and mov mov push (bad) cmp imul push mov iret cmpsb jg pop add stc or mov add mov test mov jge mov push ds fwait xor faddl loop push js jmp lea cmp jns pop out cmp or andb jg dec adc lret loope mov jl test rcll xchg cmpsl (bad) adc dec stos mov (bad) xchg mov inc sub addr16 stc xchg add pushf rol ljmp xor cmp into das aam leave out mov mov dec (bad) ds mov fistp (bad) add call add add test sbb sbb lahf lret iret pop cmp scas sti mov movsb mov rcll (bad) sub js leave jle xchg mov pop and imul adc movsl lahf and mov sub xchg mov nop pop int add xlat fstp jnp leave lret fstl jno sbb sti sub (bad) mov lret mov cli xchg push mov mov xlat test lahf mov shl pop bound add xor call inc fisubrl dec (bad) mov (bad) mov xor mov ficoml jmp mov xor and pop cmpsl aad mov loop (bad) outsl imul xlat pop inc sub dec xchg into bnd pop leave (bad) icebp icebp xor pop repz divb lahf (bad) push push pop adc push or cs sbb test call repnz xchg xor and enter xor push in push adc pop mov sub lock out out or fldl mov jne test cwtl scas pop adc xchg jge xor cs dec icebp dec outsb jno xor js mov mov cmp scas loop and jg add (bad) mov ss je dec xor daa leave mov cmp jb js jecxz dec (bad) mov cmc fsts inc sbb dec in push ret orl sbb jno addr16 add jmp mov adc sub pop mov add repz sub and jecxz add inc scas push test xchg (bad) inc (bad) ljmp mov mov add lods pop shrb add mov xchg fisubrl dec fcoms cltd mov movsb jmp cwtl aam lret lcall fadd mov in cmp pop jns dec pop test jle inc out cmp cmp cmp fsubs ret fcomps and loopne clc xchg pop lods loop xor and clc and (bad) or and add pop xor fcoms idivl and les andl cmp sub mov outsb mov nop xchg sub fbstp push out push ss pop and outsl xchg (bad) xchg adc out dec mull mov xor stos adc in jl repnz and xchg sar bound or xchg cmp lret ja or into daa mov aad push hlt mov pop (bad) mov pop mov fldl2t pop xchg jbe jns popf xchg add fsubrl test aaa je cli notb dec out aas mulb mov mov cmp je push loop sub add lea mov or incl xchg outsb sub idivb dec in pop imul in mov sbb pop push mov add fstps sbb or cmpsl (bad) push fstps sahf xchg (bad) mov and cwtl xor (bad) stos cld push movsb mov lret subl push fsts and int3 jb inc mov xlat rorl into (bad) fisttpl (bad) (bad) incl scas sub xor and mov in adc pop (bad) jo pop add jmp cmpsb push add mov mulb mov mov mov sub sbb jno fwait pop push gs cmp jae sub mov mov test hlt and push loope add dec fsubrp xchg mov sarl sub insb daa and ja or mov popa add lods cwtl xchg sub add clc add adc push mov pop xchg cmpsb decb sbb pushl sbb stc out pop int or lods sub es (bad) xor subl or xor fldl stos push add out or add push mov sub jo adc or pop sbb loop xor sub push ret jae mov xor cli sbb xor lea aas sub mov jne orl and (bad) dec mov neg rclb inc orl add lods insb push push mov outsl mov dec jg sbb pop stos idivb cmc popa mov lret xlat jg sarb cmp sbb rcrl lret xor repz sbb pop adc add imul in adc mov pop aam push mov outsl and aas add and push pop add jp inc mov add leave out jg outsl and pop inc test inc mov cwtl or push daa and shr jg push add xchg inc mov push inc (bad) pop add sub pop pop inc mov int3 in jl hlt outsl (bad) (bad) xchg lret xor pop adc or mov dec adc mov scas mov shr xchg scas mov mov daa fnstcw addb and arpl ja dec out fist in iret mov movb add jmp in adc sub and and and mov das add mov mov jle push lret xchg add leave mov icebp sahf ret mov aad jg xor mov mov in xchg adc out sub ret test dec repz xchg inc push movsl clc lcall jmp cmpsl sub sub sub call lret or add sub jle (bad) dec jmp cmp jp cmp ds test idiv out enter bound adc mov out and frstor push pop stos xor dec (bad) call mov pcmpeqw out xor icebp loop rol fwait mov xchg test scas cld xor xchg or clc aad out cwtl scas icebp mov in mov ret sub pop cmp pushf and inc mov out enter lods mov cmc xchg icebp out pop lods sbb lret sub mov and sub push xchg jo inc shll pop dec mov mov mov jns sub out std mov jl jae out lds or mov cmp add mov mov mov sub cmp mov imul cmp into xor add inc movsl fsubl ficom xchg dec sub sub das mov adc idiv cwtl orl icebp mov jo xchg aaa shrl dec lods mov sub push xchg in sbb cmp outsl (bad) faddl ret mov or and pop call jbe push lret or lods iret xchg (bad) mov sbb or pop (bad) xchg mov mulb cld inc jecxz mov repz cmp sub clc icebp lahf jns leave rcl daa pop mov dec xor dec movsb out jl pop mov dec aaa pop imul fsubrs mov jno std inc jmp pop les lods xchg inc lret jno cmpsb push and and jae dec sbb movsl out adc loop add jb jno bound enter and xor xchg cmp sbb (bad) (bad) fmuls popa imull popf stc add xor add leave xchg test pushf mov xchg jl jp dec and loopne into mov pushl xchg loop pop or pop out or xchg inc add sub testb loopne sbb scas push cmc jnp add shl idivl push or test jns mov and sbb test subl dec push xchg jne lock popf jge inc add lret sub pop xor (bad) enter mov xor sbb fcomps rclb push daa push adcb ljmp pop idivl xchg stos inc adc fdivs sub mov popf in sbb xchg mov leave xchg out jmp (bad) sahf and (bad) jle or or adc pop in jns jnp lea xor xor dec add inc and jg gs decl and (bad) pop aas out xor cmpsb (bad) fidiv (bad) sub jge pushf fldl2e scas push out mov ja mov leave stos lret or fcomp mov cmp cs test shlb xchg (bad) rorb mov repz xchg out dec mov push icebp stos lret push rcll cmp cmp dec or cltd iret (bad) cmp divb ljmp in xchg cwtl jl psrld cmpsl and cmp outsl out dec mov mov out adc add dec xchg xor xchg dec call push mov sub (bad) fldenv lods ficomp fisubr xchg lock (bad) jmp sbb mov xchg jg cmp cmp adc into xchg mov ret les pushf sub test mov push mov repnz dec inc jecxz sbb and imul les xor jle mov mov and int3 add or jg cld dec mov inc mov sub inc xor out leave (bad) jge jns scas imul dec fisub xlat test aas sub out inc sub xchg and loop dec xchg sub push dec stc adc ret std lds loope cld jge mov (bad) cmp adc or mov xchg pushl pop cmp cmpsl fimul jg int xor sub or xlat out dec repz lret cmp adc inc xor out push test or pop out and mov aam lret ja mov mov fbstp xlat test lret lcall xchg xchg test mov outsb scas mov (bad) divl push fdivrl sbb and and popf push add mov lret loope push dec push push lock repnz lret ret cmp sbb roll add sub aad scas fldl outsl xchg xor repz cmpsl add mov lea mov pop pop pop (bad) and shrl movsl jg or cmp clc and leave lods pop sar push lock pop notb mov add and xchg imul loop out push lcall lds jmp (bad) sti lret data16 dec push into test leave sub xor imul ljmp xchg xor pop xor out lock add (bad) int3 or call cmp lods and aad stos test push xchg mov fcoms dec and xchg and imul xor and add scas sub push (bad) xor and pop add fst sahf xchg (bad) jb ljmp push and daa (bad) xchg in push sub jle pop mov adc adc and les ss xor jecxz push add xchg shll or (bad) jmp iret jne hlt adc flds fsubr or mov test stc test sti fcompl xchg jae add xor imul sub int mov dec les sti fs xchg mov xchg mov xor pop das mov inc vpsubusw xlat ret pop pop sarl pop pop (bad) mov pop sub mov ljmp cmpsb loope sub push (bad) into jmp mov push mov insl dec gs add sub lods repz xor or jmp sub mov dec aad jl and les inc call movsl int or xor out adc mov movsb pop pop xor movsl cli add adc mov xchg lds (bad) mov out das into mov out and or jg pop sarl lret adc into scas xchg mov xor jns dec fcom sub sbb mov pop cmc out js sub push jmp (bad) add roll in dec and mov inc les and mov xchg push mov test es push (bad) call fbld adc call sarb jnp xor xchg jns (bad) sub or jle (bad) push and mov fldenv imul cmp inc test pop pop mov sbb fs mov and imul imul jg push cmp pop (bad) mov das dec mov fsubrs loope mov sub mov xchg add pop into stos out inc add dec sub cwtl sti mov dec xor ljmp out gs mov mov pop jle ror jle push or test rolb and lods and xchg das mov add mov dec xor mov pop adc or jns and add cltd xor push dec mov jnp pushf ljmp xor cli pop push out cmp stc stos dec push pop gs add rorb fsts sub dec or inc std jmp sbb int3 adc cli clc xchg out cmpl sbb sbb mov pop bound sbb sub dec (bad) cltd daa adc xchg in pop xchg fist lcall je cli xchg inc xchg add xchg stos mov lret dec and adc stos (bad) push ret inc jge insl jmp jp and test sti pop cli pop je push sub insl adc mov or mov pop mov sub aam ljmp or lds push repnz adc in (bad) mov divb es (bad) sub fsubrl stc xchg jmp mov repnz ja imulb push repnz lret loope push pop inc sub jne movsb and and stos sub xchg push (bad) xchg sti sarb lret sbb (bad) stos add jge mov xor lahf cld clc addr16 (bad) (bad) scas std dec (bad) gs xchg dec sar pop sub (bad) inc (bad) pop mov mov js push adc les out out adc sarb jp (bad) roll sub mov jmp adc sub and je (bad) lods aam jle in cmp xor rorb pop xor sub ret xchg fdivrl pop test dec mov test repnz adc sub cmp or fidiv xor fwait sti or test or mov push xchg call or pop repz sbb repnz mov arpl push loopne sub mov mul jae stos in ret and ljmp fldl stc imul cli popf in test stos jl and sub (bad) leave idivb adc pusha mov sub jp lahf dec mov fcmovnbe push imul sub xchg (bad) mov fisubr (bad) out icebp and in push mov pop sbb sub inc push repnz aad cmp mov das sub add push stos pusha mov mov and nop or add lods or (bad) pushf add push jo loope pop xchg lock and xor mov pop pop pop cmpsb test sub out push repnz sub jno jp xlat cltd xor mov jbe jne mov leave inc mov lea (bad) cmp ficompl fs rcll sub sbb sub mov notb add and adc dec ss xor pusha icebp sub (bad) iret fstl xchg (bad) sti pop sbb jmp repnz mov jmp jle out or out (bad) xchg stc xor movl or xchg xlat das xor shr cmpsl inc jmp add shrb mov stc (bad) mov xlat test inc sub sub mov cmp sub loop (bad) scas pop inc cli mov dec call mov sub and int add pop dec jae sub fsubs fldenv or and cmpsl fimul les xor out inc (bad) mov add cmc (bad) pop xor xor push or push inc sub or (bad) or or setbe pop push shlb divb into imul add sub (bad) test test sarb rol ja sbb xor fistpll xchg sbb aas cmp pop fisttpll shr and add and mov add mov pop cld pop movsl push xor jp or xchg adc int icebp push and pop mov xchg jo xchg mov call dec xchg ds xchg movsb rcll sub add inc ficoml adc popf sti or sub and sbbb iret jl jp gs mov inc addr16 adc xchg leave (bad) cli or push aas xor mov js in fcmovnbe xchg xchg test fld cmp nop adc mov leave incl jne dec xchg loop push and aam jno xchg ljmp push stc (bad) sbb popa adc and sub or je bound and or push movsl (bad) sub cmp xchg dec repnz sub sub popf nop sbb lret and pop xchg jge popf sbb or pop out xor sbb lods pop jmp imul lods (bad) aad int3 sub inc add leave leave pop sub in std pop (bad) movsl icebp sub sbb hlt lods or popa lds cld push stos ret dec popa (bad) bound popa adc and leave push (bad) pop andl lds mov popa dec leave jg jnp mov mov neg sub ss jg lret mov (bad) jbe dec mov das mov lcall stc jmp mov (bad) repnz mov imul xor or pushf jae in adc pop add daa aas in fistpl (bad) pop lcall xchg inc and ret jle in mov and pop stc and out push pop dec lods jp loop enter push ret inc fs (bad) sub fidiv insl sub cmpsb xchg into pop dec push rcr sub sti popf ds jl daa xchg mov xlat in mov jmp lods jns inc add xchg leave push add lret cld insl mov xchg sub or mov arpl mov test xchg mov xor arpl push push (bad) das leave pop stc flds mov jne inc lret int3 fistp testb adc cmp fisubr (bad) fs ja sahf fldt popf sbb in cld mov fisubr jecxz dec loopne into xchg in sub in cmp lcall ljmp inc movsb xchg xor inc mov or cmp (bad) or sub lock xchg jno xchg mov test mov rol xchg out push in sub push jne in insb mov adc mov stos jecxz pop repnz xchg call adc mov xchg ja xor jo dec pop and push mov mov dec das or daa movsb adc into push dec out or shlb (bad) xchg push mov mov push loop pop dec (bad) ja add jns or pop fsubs xchg xor in cmp fnstsw movsl adc cmc mov cmp pushf mov xchg fidiv pop push cld js in inc cmpsl imull in mov add stc pop dec mov popf xchg sti mov cltd lahf sarb cmc sbb dec mov sti jmp scas dec ret cltd shl sti dec jne icebp das xor shrl mov add mov (bad) mov stos fiaddl sub outsl xlat lret mov cltd cmp sti xchg jmp sub cmpsl (bad) pushf jne int (bad) mov nop cmp (bad) das (bad) cmp or cld imul cld nop add mov shl iret xchg xchg sbb stc or jne lds xor sti adc lods fimul adc jecxz push mov clc shll and add push sti dec adc or sub das xchg push push fnstcw dec mov sar pop into sub std jle inc sub int cs push (bad) sub loope inc bound lret or pop pop or or in test jb inc jge ljmp shrl sub pop xchg into dec cltd int sbb lahf iret out dec leave push ficom ds add sub bound push fistl dec mov dec ljmp (bad) out imul cmc sub and out int3 cmpl icebp sub fdivrl push xchg lods mov pminsw in les inc xchg gs add jo mov (bad) es inc leave pop les xchg shrb fcomps mov subb push or pop add mov mov popf js mov push nop sub nop clc jnp lahf outsl jo leave or pop pop xchg into sbb call add daa out call push cmp dec loope dec jle dec scas lret hlt mov fld jp dec call and fwait mov and movsbl push jl push pop jae mov das ss idivb jg repz divl stos iret inc xor add and mov xor sub mov cmp ljmp or call sub xchg lock popf jns imul ret movsb push and add xchg lret je xor xor and and mov and loope jbe pop lea push insl or cmp xor icebp adc flds mov bound (bad) fimul iret (bad) mov xor jp sub daa aaa push mov sub xchg outsb mov mov movsl into mov clc arpl mov xchg adc and (bad) aad and or mov and lock mov daa push sub jmp out sub adc push aam or enter imul imul sbb cmp cmp or add sub push fdivrs jmp mov ljmp or stos shlb stos pop mov loopne mov and xor icebp jbe ss cmpsb (bad) jmp jno bound fbstp test sar mov mulb shrl jecxz jp call mov clc cld mov push repnz adc mov (bad) les or cli jecxz sub sub nop xor imull das fstps dec jne sbb mov adc lock jl pop and inc push xor mov pop adc mov int cmp sarl cld push inc add jge out xor mov std pop es sbb (bad) or shll jecxz stos sub leave stc adc mov and dec rorl lods adc and nop out loope fldcw lods test fldenv (bad) xlat and pop in insb movsb mov jp jo sub nop sbb pop cwtl adc pop lods mov out scas lods mov out add mov xor mov dec test or mov dec adc xor idivb gs test and (bad) repnz mov (bad) dec pop shl rorb add mov (bad) (bad) adc lock std sub test mov scas je cli mov dec repz or leave mov loop push adc sti and mov lds das je pop cld dec imul aas mov or fs cmpsb mov jl mov scas int and push (bad) push cld andl shl imul dec pop pushf sub adc pop jle rcll ja cltd add idivb into and mov out stc cmpsb mov pop clc addr16 and xchg inc sbb iret cmp pop lret xor sbb push fucomi stos leave push fbstp jns or jns popa sub or adc add mov ds pop and and or mov or or fwait jmp inc add ja push ret in fisttpl sub pop fimull in bnd out pop rorb sysexit adc imul lahf lds xor stc fisttpl xor mov cld stos jecxz cs rol out push push or adc pushl xchg sbb or push or xrelease xchg movsb das (bad) dec dec xor xchg push (bad) (bad) out shrb xor stos jne (bad) cltd and and dec mov clc xor add dec out cmp mov lds sub popf aam sbb and stos sub add fidivr repz jmp inc mov gs (bad) and loope cmp int3 mov pop das mov dec pop repnz add or pop cmp insb xor imul (bad) mov pushf mov jle fbld cli out add sub xor add pop push leave jg cmp or or jmp gs add faddl roll and gs (bad) xor (bad) mov xchg idivl xchg and and scas and call das mov and sti adc (bad) add ret lods pop and lods ret sbb das (bad) sub sub orb jmp inc jno adc push hlt ljmp (bad) cs pop push cmc dec lret xchg jnp (bad) push fs idiv lock jne cmp lahf adc lcall sti mov lods into pop repz dec test cmp stos mov adcb dec push test test pop push dec (bad) cli sub jno xchg cli scas jecxz daa (bad) arpl xchg mov cmpl push in sub icebp or ficoml and add scas jl or ret imul pushf cmpb push dec cmpsb mov (bad) push int3 adc or dec sbb sub testl out dec jae add leave and pop push leave pop mov adc sub in in mov test ret jle adc in push xchg jmp xor int3 test inc push call cld insl mov je xor cmp mov mul leave scas lods xchg lret add loopne xlat lret cmpsb dec fdiv das into xor cld ss jge in fimull (bad) jmp icebp push jp je pop or or das ret add inc dec repz sbb push sbb mov inc ret stos sub and movzbl mov lahf jbe push (bad) sahf adc xchg xor gs xchg add les lock ljmp into jge out xor xchg out nop insb mov arpl cmp movsl mov adc lcall pusha and stos popf nop das sub jmp cltd mov icebp nop push mov sub out pop jnp and hlt pop xchg popa (bad) or xor xchg adc mov icebp and xor ss jl sub sub push push pop or add sti push cmpsl scas cmp mov into xor iret js (bad) clc xchg cmp outsl ds mov dec push xor or dec sub (bad) lret cmp rol lds xor xor (bad) and xorl clc and and mov leave mov in and or aaa push dec lret fldenv xchg insl xchg inc call (bad) push and data16 mov or shll imul cli mov sahf adc sub sub es mov mov faddl inc pop imul push in cmpsb fcoml icebp test outsb int3 sbb (bad) mov popf enter int3 out add imul pop sti sub jecxz sbb mov je leave std or shl dec (bad) dec int3 mov ja xchg dec (bad) cld (bad) rorl jne test jae std jno test sbb mov or sub out sub fild out dec push cmp shr rdtsc repnz clc jns or lret (bad) roll sub (bad) out pop cmp mov push or push mov dec or sub inc mov pop lcall sub jp rorb shrb cwtl add push add (bad) lea dec frstor sbbl push xchg rcll enter dec icebp lods adc sbb mov cli xchg push int3 int sub sub rcl dec mov mov adc outsl jl enter scas lret sub shrb pop xchg out notl adc clc sub adc xor lea ds inc jl test stc fsubs rclb (bad) adc in ret sub ret xchg push sbb sub into xchg out jge sarl mov cmpsb into and xchg pop add idivb adc pop dec loope jnp pop mov pop push call sub cmp lods push fidivrl push xor jns xchg lret loop xor sub fcmovbe dec std setb jg inc ret push dec dec rclb aam mov push jle or mov or jle sti icebp cmp cs cld pop shrb adc decb add jb stc or fistpll add adc in push sub iret add fstps and mov fstl test cmp jno cmp and add cs (bad) xor pushf push ficom sub mov ret sub inc cli sub push pop jmp mov rclb (bad) mov cmpsl xchg mov mov xor rorb test nop test mov xchg lock push or stos int3 sbb pop xor es mov daa ficom mov mov out xchg xchg push mov pop sbb pop mov mov xchg out fs loope cs ret cmc (bad) adc in jbe,pn or jle leave imull jne cmp mov jb dec ss lcall dec xchg (bad) (bad) lret popa out mov or ljmp (bad) jb dec add jae (bad) or adc pop notl (bad) pop mov fnstcw lods cs pop jo mov iret mov test mov inc xchg test sub cmp out cmp and mov sub mov das mov add hlt or xor push jg lahf jmp xor out pop cwtl decb sub gs and popf mov in mov ja inc cwtl jmp push ss and fcom fcmovu pop mov (bad) and sub pop leave std cmp mov flds ja out and cmp dec sub cmpsb jbe ret push xchg pop leave ret imul sub mov notb sub jo shlb add daa or cmp (bad) adc jns mov addr16 das jge sbb imul push jg mul in or cli jbe jmp shll pushf inc or mov xor test shrl xchg pop or pop (bad) adc push add add and lret push into sti fs lcall or hlt push lcall add std (bad) push mov and daa (bad) je dec fnop sub movsb (bad) push and jle leave pop gs sub lret sbb into pushf shrl sbb cmp push jbe fsubrl lret sub jno imul ret push enter mov ljmp lcall dec jle fstps rolb add insb pusha add jmp negl push test xor fcomps fimull loope cmp pop sbb iret test in jne xor dec divl push jae mov pop sub (bad) lahf insb lret xchg outsb sub lock xchg dec out mov (bad) jge inc pop pop das mov dec stos mov je imulb pop jmp inc (bad) mov std push sub je push jge xor mov jnp adc mov sub fisub outsb mov sub popf push push mov sub fs stos in and subb ret jmp jp (bad) repnz inc push pushf int3 pop clc popf aam jno cmp subl jle ret (bad) jmp xchg jmp mov je jnp leave push xor mov js lds adc or mov cmp lock lahf (bad) pop cltd pop dec movsb inc mov cmp mulb push leave pop outsb int xor ds stos sbb jle insb mov cmc icebp shlb mov adc mov icebp xor (bad) repz xchg fstpt mov sarl adc jg jmp mov xchg scas mov das adc xchg jb loop (bad) pop push adc xchg jmp aas mov stc bound dec icebp cwtl (bad) ljmp sbb je inc icebp scas mov ds popa or mov dec ds dec (bad) idivb pop ret jle pop or mov jae popa or pop or pop ret push add ret out cld jnp sbb les das nop mov xchg lahf mov sub sbb sub call mov call cmp cmp push xor scas fs sub repnz inc mov lret outsb (bad) jecxz daa cmp pop sarb cmpsl rorl push pop mov pop cmpb mov lahf mov sbb ds lret ja cwtl xor push xor inc dec ja paddw and push or lret xor ja sbb mov movsb xchg (bad) push rcrb pusha push outsl cld xor sarb loope sub pop pop rcl mov fs pop mov ret push (bad) (bad) mov push mov pop mov daa ficompl adc decl sbb xchg sub ret sub add sub jb add shll ret and in xchg loopne sbb loope ret mov cli mov sub cwtl fldt inc adc shrb push in add add or nop movsb xor fiaddl pop push sub call hlt (bad) xor in outsl cwtl and incb dec stc xor loop mov (bad) fnclex or push push jmp bound stc out out leave lahf pop cmp (bad) mov in jo cltd cmp notl les ljmp movsb shrl cmp stos test cmpsb push mov (bad) (bad) negl or xor cld cmp (bad) imull inc xor stos icebp das imul (bad) dec sub rol lret jg jmp push (bad) or mov ljmp loop out pop mov lret test add sbb xlat (bad) mov insl dec xchg scas out dec rcr aam or popa push add sub sub ja cwtl mov xor mov and int3 pop xchg sub and and cld insl mov (bad) scas popf cmp inc and mov jbe stos idiv pop sbb push mull xchg push mov jnp pop pmaxsw push pop test faddl cmp sub js xor xchg jmp fdivrl mov jecxz dec and inc pop mov xchg fisttpl call cmp cli jle and add push sub outsb lret out adc repnz xor sub jbe jmp fldenv inc xchg arpl clc (bad) push or sub pop dec incb repz add xchg lods pop scas adc adc add mov test pop gs mov loope cmp jae dec xchg pop ret mov mov pop daa lods xchg sbb ror xor in (bad) fwait jb repz mov push and lea mov outsb test adc or push int out gs pop jmp loopne mov mov int jg fisubl fldl lods rcl cmp sbb repz pop mov mov xor jmp dec mov add sti aaa fiaddl shrb mov mov cmp cwtl shr cmc mov mov int popa mov pop push lret iret or jns push faddl (bad) jge inc fs sub lret push imul arpl lret xchg lret and pop xchg mov clc push xchg mov outsl bound repz and idivb adc loopne or mov mov (bad) daa and cld mov xor out loop lret ljmp rcrb push xchg adc or mov (bad) aaa add xor call ret loop (bad) mov dec adc dec sub and or gs mov dec vcvtss2si sub xchg test loope adc lret push out or ds dec lret (bad) xchg jl jmp movsl lds inc xchg loopne push mov and movsl pusha add icebp push mov test cmp push jmp out cmp fistp test jge data16 dec mov std vcvtsd2si cmpsl std sbb dec dec dec or aas out mov das add or dec int3 cmp ljmp pop or pushf std imull sub sub sub mov lods mov xor mov js mov jnp pop ror mov (bad) inc in lea xlat inc arpl push mov out lds enter push xor and jns icebp push sarl repnz (bad) enter idivb lahf adc pop idiv sub push sbb pop sub dec pop mov popa xchg sub lcall pop sbb into test mov adc xchg lods pushf xchg push (bad) lods pop (bad) mov and sarl jno inc xor sub xchg repz mov inc sub pop adc stos popf imul jle icebp cs (bad) mov adc jns and inc jb icebp outsl cmpsb lods das shll cwtl mov stos mov and (bad) mov sub lock ds ret xlat stos cltd xchg cmp icebp roll xor adc scas mov lea icebp inc inc jmp xchg sub dec xchg push xor shl xchg xchg mov insb mov push dec mov addb cli or dec mov addr16 call cmp das pop hlt dec pusha add push aaa jg mov jmp xchg fistpl out mov xchg int3 mov xchg imul hlt cld jmp dec pop add jmp out rcr xor mov xlat movl mov mov cmp shrl (bad) imul dec hlt add cmp pushf test cmpsb or out outsl cmp icebp mov sar in pushf adc push mov (bad) sti ds add es sub mov push lret or leave scas xchg insb out loop shr xchg push and pop fwait out mov push lods cli cmc or popf mov dec mov fist out xor push adc dec mov mov xor ret dec (bad) xor in lods push and ret dec out pop out pop pusha imulb or and sti pop ret sbb gs sub imul mov push sub mov xor dec cmp (bad) stc sub jge test pop jmp pop fcomip pop notb push inc push jns mov and cli repz icebp dec mov or sarb pop es adc push in and jle rcrb sbb and lods cmp mov mov jne cli (bad) xchg jle jb icebp adc mov dec loopne adc adc add sahf dec lock xchg jno dec mov pop xchg stos fsubrs xchg in adc xchg lods orl push mov mov nop xchg add pop sbb test xchg dec scas popf adc andb mov pop pushf (bad) xor jno mov jne,pn mov xchg pop shrb movsb test lret call in daa jne jle pop out pop out adc or (bad) add or out js (bad) mov or sub hlt das imul cmp flds mov xor mov xor call sbb rorb and cmc (bad) xlat mov cli push mov jne add jl cmp leave jmp pushf out or aaa iret or dec lods sahf cmp xchg and mov sub mov aaa push fsts scas je sbb aas mov and out ss xchg fisubrl pop adc dec ljmp mov mov js in imul ret pop pushf rcrl pop xchg mov mov xchg pop mov sub or dec mov and cmp cli and dec xchg shl cmp lret inc dec std imul imul (bad) lock outsb push inc out add cwtl adc int3 dec pop idivl gs lcall idivb out lea cmpsl xchg and or fcompl xor leave aas ja por lds xchg add out xor dec or das shrb inc and or dec idivb xchg sub ds mov dec clc rolb mov or cli jne sti fimull cwtl adc dec adc add stc mov (bad) call jmp add pop div lds lea imul sub push dec cmp insb lds mov dec stos lret mov xor mov cli out daa jecxz shrb cmp fbld pushf leave push ror inc push out call test push mov lock int3 roll (bad) mul pop aad mov jbe sub adc cs dec xor loop push jl xor cwtl int3 xchg vmread jle pop ja fcoms adc stos cwtl cmp pop and pop das out stc hlt imul int rorb push and inc xor inc jecxz gs sub scas testl decl and mov lret adc push outsl sub (bad) and (bad) mov aaa sbb ds mov pop out mov in sub (bad) and lods push sub rorl cmp out bound push push or lock aaa fisub fcoml xchg aam iret idivl dec mov push mov js push lds mov ljmp rorb add pop mov sub loop push cmpsl jbe or cmp pusha mov mov stos jmp pop out dec stos cltd test or push inc scas and call (bad) sar pushf push mov scas xor repnz push pop dec (bad) cli xor jmp mov cmp ds push es and jle and and and pusha sub and or add outsb lret pop mov call lds push xor cmp fisttp shrl (bad) mov xchg adc mov push xchg inc and ret mov fs mov add es lods (bad) xor add push aaa cmpsl aad sub xor cltd js imull dec call pop xor cmp xor cmpsb popf add add outsl dec dec std fmul cltd push cmpsl lret adc lock pop and fldenv add adc adc (bad) lret adc xchg shl addr16 icebp dec jge xor cwtl mov pop sbb mov frstor movsl jne xor out and lret das jecxz xchg cld sti (bad) and and in inc cmp pop shrb fcomps mov ljmp jge jecxz dec and cmp jnp dec aam outsb fild or stc push je lods movsl dec in shl ret lods sub enter add out and and (bad) icebp and (bad) adc pop push inc sbb popa (bad) fs mov or cmp fsubs imul int (bad) fnstcw pop jg sbb jnp mov and jg repnz mov push lea cmp mov (bad) cltd and bnd push adc cwtl ja and sbb pop dec push pop out dec repz mov and insb mov cmp ds mov aad scas lods push sub aad mov mov cwtl or lcall jmp xchg lret pop cmp (bad) pushf mov ss pop jns test and ret lods (bad) dec mov out dec out int and repz scas mov cltd movsl jmp xlat sar imul jae mov mov dec mov or jg xor in lret pushf dec push out call sub cmc out sub repz xchg movd add or add lret sub imul inc loopne sub inc cmp and mov adc mov (bad) lret or (bad) js pop add sahf push jb movsb lods push in pop mov lcall mov in call (bad) jnp or jge pop mov dec sub stc sti movsl cmp lret xor pop dec lret dec in and clc repz and sub dec iret lret cmc push inc aaa scas sub jecxz jae lods mov shlb xor (bad) jle dec add daa or add negb ljmp test pop pop out sahf push push inc clc (bad) jle add jnp mov sahf xchg mov inc mov ret add lret les sbb gs (bad) push push out xchg addr16 sbb insb hlt dec (bad) (bad) fucomp add cwtl mov lahf push (bad) fstps mov js (bad) mov fist iret clc xorl mov and sub mov fdiv adc sub sub inc xor cmc (bad) sbb jb dec fs cld test mov (bad) ret daa jne insl fbstp pop fbld add or je sub movsl inc insb sub rcrl add sbb push push cmp inc dec xor cltd or xchg xchg lds pop mull inc addr16 mov or fimull and pop adc mov push das imulb imul or int3 and jg stos mov dec or clc cmc jb push pop jge jo jge add je sub (bad) sub hlt cmp into scas pop out pushl fnop das pusha add (bad) lret lods push mov je cli sub and pop (bad) jmp push pop xor pop bound sub inc push dec test xor push (bad) fisub mov fmul push (bad) scas mov sbb and call test cld cmp fldl rcrl jnp sub pop pop inc pop jmp lret cmp jmp aaa sub xchg and dec and bound jg mov lock jecxz mov cmp lret jp add xchg mov daa xor clc movsl cmp or or lret adc arpl bound or or inc popa jmp xchg sbb add cmc mov cs fbld inc fisttp (bad) mov out jno xchg aam in mov xchg sti xor push stos mov cmp mov cmp xor pop cmpsb loop popf (bad) push fist loop add jmp pop or ret xchg xchg flds xor cmp mov jnp xchg (bad) fs (bad) daa (bad) push sbb (bad) lods xchg daa rcl pop repnz push sti jge push gs and sbb mov xor std iret dec test and cwtl push add andl out (bad) sub or xchg imul lds (bad) fistp mov dec int3 (bad) repz sti or pop out mov dec adc enter push jno inc in sub xlat jne scas loope outsb mov je arpl xor aam lods push sub daa pop lds xchg add sub and imul and push sbb (bad) pop lret inc push and add iret imul sub pop (bad) xor (bad) out and ljmp sub pushf pop xchg mov mov gs mov mov int3 lock add stos pop in addr16 clc imul push pop mov repz sub iret cmp and (bad) pop or mov das jno lahf and cmp out mov jo xchg adc mov (bad) repz test not sahf push or xor push pop adc ret push gs cwtl xchg and fisub sbb xchg cld jns (bad) cmp and adc mov leave sub xlat in int3 shll xor mov aad xchg (bad) (bad) ljmp inc sub jp inc inc xor popa push das mov cmpl lret test cltd push das jmp stc mov push (bad) sub xchg roll xor or pop int3 mov sarb xor cmp cltd cmpsl and jg push mov or subl repz (bad) sub dec leave mov cli mov sub jecxz sbb xlat add out cmc stos sub push jo push mov add movsl cmp sub cmp lods stc imul xchg idivl dec and sub mov push push pop hlt sub repnz mov push lods mov push sub mov (bad) shr lods lea cld jb cmp scas sti jns add and xor xor add mov popa jmp xlat mov pop imul out dec clc out sarl xchg mov ljmp ret jae adc ljmp mov mov dec add inc xchg xchg pop xchg (bad) jmp dec in data16 (bad) adc in pushf movsl dec (bad) (bad) mov inc into mov xchg incb inc dec fbld (bad) pop or or stos push ds dec fimul mov jb add xchg xchg hlt dec les out gs out fnstenv insl jnp and imul pop repnz fisubrl stos sub push movsb mov repz xchg test ja dec les xor ja cmpsb fisubl fldenv mov jg xor mov mull test adc xor pop push xchg sbb jle sub push ret xor xchg out out movsl out and mov or fnstenv mov add mov mov sub decl xor cmp iret inc gs jmp les jns incl xlat test lret pop lods insb gs movsl aam shr add fdivl jns sub fsubp imul push cli clc pop leave pop jmp lods out ja sbb stc arpl fs notb and outsl int int jnp mov xchg mov (bad) dec call sti loop (bad) mov sbb (bad) mov ret sti sub add jns push xor mov cmp bound call adc in in mov scas rorl xor xchg mov xor dec sbb mov call pop mov (bad) cltd arpl cs jp (bad) sarb add mov xor inc jp pushf iret mov mov push (bad) xor stos insl and cmc fnstsw in (bad) leave enter jle sbb jnp or jle fsubrs stc jnp aas adc fidivr add mov pop cmp icebp pop jmp jbe jae (bad) leave mov dec dec push sti cltd and in fimull repz push cltd xchg mov dec adc mov jge and jl pop mov mov dec pop (bad) xor into xchg mov add sub adc inc fldt loope dec cmpsl pushf das add ret push inc push jecxz sub ds mov fwait pop mov mov cmp xor xchg aam cmp inc mov out rolb mov sub sub cmp or (bad) repnz scas mov mov push add adc add ret jge and add mov sub stos (bad) leave adc inc (bad) xlat and out in mov pop je push jge aas mov pop lds int jg test add stc mov mov sbb or mov adcl sub sub insl cwtl inc (bad) (bad) repnz test (bad) and xchg je pop (bad) lcall push sarl pop loopne xor lds lods dec shrb sub pop xor add rcrb inc loope arpl popf jecxz,pn data16 sbbb (bad) mov sti xor (bad) repz mov and adc mov cli push mov stos je out mov dec xor mov rcll push mov xchg or stos (bad) in xor xor lods es xor ret lods ljmp inc inc mov xor fldt dec test sbb mov faddl or and dec cld jg daa mov sbb dec ret out xchg jg and cmp jno and xor cmp in (bad) sub sub ljmp addr16 pop out pushf ret sbb mov xor sub jmp add cmp pop imul sbb sbb insb sbb add mov add out (bad) jecxz dec leave lods das (bad) (bad) lcall jmp inc loope sbb xor test bound (bad) sub sar add outsl mov add not sahf pusha aas xor and mov sub mov into mov pop dec out jmp sub push or stos std lods mov fisttp cld mov push call hlt xchg fstl arpl (bad) inc add insb nop lret imul inc pushl jg pop daa mov std mov mov jecxz pop pop mulb and pop push cmpsl jg aad imulb in mov in and mov mov add fiadd rcr pop call mov (bad) lret push mov ss cmp push (bad) and mov jne pushl loop into in xchg shrl aam movsl pop in sub xchg push mov (bad) cmp cmpsl std pop mov add mov sub stos jmp dec mov cmp jne mov imul ss sar xor int3 jmp push lea adc sbb into daa not mov imul lahf lcall stos (bad) lret pop pop cmp test mov rol xchg jge or sub notl movsl imul lods out mov dec sti xor adc and mov popf jge popa incb push adc cmp loop aam xchg and push jg xchg int3 (bad) cs sub ret inc leave xor mov mov sub xor sub add xor mov pop popf jno andb or jle pop clc fsubrs xor add ret pop repz xchg dec cwtl std xor mov test scas pop (bad) test sbb adcl sti sub leave mov das jl les cmp push fcmovnbe push inc mov jecxz (bad) std pop (bad) jmp cmp mov mov in js mov lods lret mov repz popf rclb lods mov daa shlb rcrb push adc mov adc adc fldl2e or xchg jge pop in mov loope cld repnz cld sub mov jns xchg imul shlb cli xor sti (bad) or or loop or xor dec mov xor stos jecxz and mov cwtl jne stos xor sti aas repnz xchg stos xor jmp icebp out cmp movsl (bad) mov lea shrl add mov std sti cmpsb add lock mov push inc outsb fistl push inc loope push jne leave and mov jb mov push nop les push popf lcall fild add xchg mov cltd sti mov mov mov mov ds add cld cwtl (bad) add mov and xor xchg or mov aad sbb mov cwtl xchg inc gs mov rcrl ljmp cmp daa adc lock jmp (bad) notb or cmp ljmp sbb sub int pusha dec aaa mov xlat iret or shll fildl lahf into fidivrl push idivb adc lds jl lea push das pop fdiv popa leave inc mov xchg pop mov and jecxz pop lret clc dec fistl test idivb jp pop lods sbb pusha jle and test adc sti out xchg les mov push add add popa or movsl mov or leave ficomp and lds sub lods and cmpsl (bad) sahf fildll mov xor stos dec xlat out icebp pop ja repz pushf scas popf adc and push fwait add xor push pop adc scas pop xor stos repnz xchg lods lahf daa lret jne inc sub enter xor ds xlat in hlt xchg mov jbe shl sub out lfs stos pop xor ja lds mul jae jl adc stos mov test add out cmp pop sub call scas sbb mov mov and xchg movsb jmp cs lahf push arpl jns pop mov andb cmp (bad) bound xchg pop jne sbb loope pop js push inc cmp jne mov lcall jno lods iret mov and mov mov push cmp cmc push mov je cwtl add in or sbb ror in xchg xor pusha jle dec shrb xchg add mov or xor mov sub stos mov inc add push mov dec mov or add xchg xchg int3 (bad) or push xor pop inc imul fcoml mov stc jmp out outsl mov and inc cmp lcall in mov loop mov scas adc mov outsb sub inc sbb and jl fdivs scas (bad) pop xchg call push fdivp (bad) cmp jmp lcall outsb xchg sub ljmp inc mov idiv lock mov or arpl inc insb lods xchg les mov aad mov or cltd xchg dec es (bad) jmp lret in mov fstpl adc (bad) add mov fidiv mov leave push xchg and cmpsl popf scas adc and loopne ret mov andl mov int arpl mov cld lods das xchg test jne (bad) jno xlat test mov cmc mov xor pop hlt mov cltd shrl add pop cmp xor scas xchg push stos xchg mov dec jecxz dec hlt out mov add outsl sub mov inc sub stos xchg jl jns outsl testb push and cwtl mov dec orb and fs les stos mov test sti int das test movsb stos cmp ret inc subb psubd lods (bad) push ret mov lret xchg loope jb sar mov add loop xchg test dec mulb xor (bad) flds adc xchg sub stos mov iret xlat test sub push and repnz addl mov fildll fdiv pop ret push pop push pop xor and mull jmp lds aas fs mov sbbb sub lretw loopne rcll add es push sahf mov fsubrp lret xor imul (bad) popa mov stc (bad) fs repz add decb imul pop xchg in xor mov popf mov mov divl mov mov jg pop xchg dec xor retw (bad) xchg int3 xchg sub mov ret in sub mov lods xchg clc inc (bad) psubw lds (bad) jo es andb xchg inc inc daa jo mov test scas mov out xor mov nopl lods rol sub stc pop (bad) int3 stc and sarl jo and sub testb add add gs mov fstl out popa aam repz adc or pushf mov bound (bad) repz sbb mov mov sub ret out lret aam mov and adc jecxz cmp stos xor and push cmp ja cmp mov sub or and pop daa (bad) ja ret sub mov std (bad) jmp mov xchg ljmp into adc test movsb stos pop mov in sub jle pop inc and xor bound and imull lret cld notb mov push mov addr16 mov lret sub lods pop xchg push dec fisubr dec clc jecxz rorb nop repz mov mov or cltd pop repnz lret or hlt fs leave je in mov cmpsb loope xor int3 (bad) push leave mov add cmp roll clc lock in and mov xor repz and (bad) mov add ret mov xor pop jnp adc pop and cmp jo jne dec ja and and or iret scas mov mov or sub lret (bad) mov sub xor or divl fcomps jecxz push add dec (bad) out (bad) lret andb (bad) out pop rol jle inc push insl mov rorb cmc ret add int cltd jns dec jl leave push outsl imul or cmc out stos cmpsl icebp jg mov mov jg dec cmc adc repz cld sarl or sub inc sub lret xlat lock jp stc mov ss xchg inc loopne or lret stos adc mov mov ret dec mov mov add cmp fidivr sub fldcw cmp push bound cmp ret mov mov pop add push cmpsl in dec and fsubrp xchg leave jmp orl add or flds mov (bad) and xchg imul (bad) sub sbb adc mov push fnstsw xor ja aad xchg pop lea nop dec rcrl sub xchg icebp mov in pop aaa imul dec ret mov add xor pop mov xlat xlat or movb xor xlat cmpsl (bad) (bad) out jo dec jge popf repz aam mull and aaa int3 fcmovnu mov jns cmpsl neg enter sarl shl jge lds lock xlat rclb sub jbe lret cltd adc jmp xchg sti popf mull (bad) xchg jmp fstpt fsubs lcall pusha stc or mov jb frstor adc (bad) int3 pop lret mov in or xor addr16 or mov fsubs xor xchg sub push pop roll cli sub xor jge pop fldenv xchg and movsl cmp sbb sbb cli fdivl mov clc ret sub push clc cmp sarb out mov push sbb (bad) mov and popf fnstsw in jnp dec roll xor dec pop je stos in imul jns dec xlat inc arpl lcall inc jp or repz xchg div das mov out lretw mov jbe aaa xchg sbb adc enter mov pop jnp adc mov sub (bad) sub lods pusha pop jmp push rorb icebp jnp jg and jns fisubrl mov cli inc clc sub jb fcmovnb or inc mov jae fwait popa xor mov out push fsts je pop loop sub out xchg leave aas js lret add adc mov push sub xchg movsb dec xchg or mov leave dec xor inc (bad) popa xor jg popf (bad) inc cmpsl jns sub mov rorb dec sbb lock sbb ljmp sar add in push dec test mov cmp icebp mov inc sbb jns inc push iret pop mov call (bad) js xlat mov pop fadds test cmpsl xlat and mov test dec stos aaa sbb lret (bad) stos lret jnp imul xor push fidiv and sbb inc mov push add outsb cwtl data16 xor xchg icebp cmp pop ljmp leave in cld outsl mov mov pop out cli lret ret ffree shll pop mov sub adc jae sub imul or negb xor push sbb (bad) mov call sub (bad) pop fistpl jg mov or mov ljmp mov mov and ret lods repnz xchg mov mov add adc or (bad) hlt and push in fs pop mov push in fsts dec fnstsw sarl or pop and mov mov push jmp jl jle out inc fiaddl repnz aam pusha add xor mov ss adc and sti int3 inc lock xchg dec xchg hlt xchg andl xchg cmpsl iret xchg orl cld enter mov mov cmc sub xor pop xor scas sub jp push leave push cs stos mov sub inc popf jo sub mov pop (bad) lret orb rcr jle outsb das jb into (bad) sti mov or clc mov jp mov das push mov jno gs bound mov pop movb fstps xchg or aad mov or xchg pop add subl xlat scas mov jb les jne test mov pop int sub out call inc pop xor bound repnz push or xchg push and xlat incb rorl jmp mov lret xchg sti cwtl in out push xor ljmp stc dec fmul popf ja add insb sub stos and mov or stos sub push inc or pop repz adc out fldl2e push ljmp ret daa cmp test pop mov and mov push pushf mov mov lret fsts out dec jmp mov lea lock xor mov imul jle in fnsave mov leave outsl xor pop adc outsb repnz fstl (bad) stos addr16 jle cmpsb std pop xor jg sub pop ljmp imul lret add inc (bad) loopne mov shl push pop movsl sahf addb pop mov clc cs dec js out pop push stc mov gs sahf xor ja jbe notb jo loope or jns (bad) out lret jmp push mov in out stos sub xchg cs sub mov cltd into cmp aam mov cmp (bad) gs jecxz sub xor add push push mov mov dec mov daa leave notl push push fistp dec ret cmp or in sub xor in (bad) das xchg fildl jmp cmp not add loop insl mov rcl mov cmp not lcall pop mov sbb xor push xchg ficompl cli mov ds jo loope mov lret cmp fidiv cmp (bad) pop out je test xchg leave mov data16 sub ljmp test add lahf push sub xchg xchg or fisubrl sar movsl or xor mov (bad) push ret and add mov mov push and std pop stc add sub sub test mov mov je sbb pop shr fnstcw fiadd stos repz jmp cwtl pop dec xor stos (bad) cld dec jns mov int3 xchg mov cs pushf dec sub mov push push dec sbb or fdivrl frstor inc adc repnz adc add mov or sub mov mov aam xor icebp mov (bad) xchg jnp xchg and mov pop aad dec stos adc clc push jge ret stc push xor stos das loopne sbb sar clc aas lods cmp sub and jl xor adc cmp lret dec fmuls (bad) mov sbb sbb xchg sbbl mov mov xlat xchg stc and cs dec pop clc cmp notb pop pusha mov mov cmpsb dec dec (bad) out sub into (bad) jo dec and (bad) fsubl adc and cld mov jecxz clc jae dec mov std xchg dec adc xlat mov sub pusha out or mov or movsl stos (bad) jmp mov insb mov add pop sbb pop push jmp jl scas mov inc inc out mov outsl ret jae xchg mov leave lret jge dec inc shl out stc out fdiv mov flds arpl cwtl clc dec dec out fisubl lcall pop test dec (bad) mov leave ret stc xor xor mov and mov mov test pop test adc lret movsb xor addr16 das or sbb and xor xor leave add js dec mov pop shl pop fwait xor cwtl pop pop std or movsl and mov jmp inc pop hlt clc dec mov push or (bad) sub lods popf jnp xchg xor movsb lret aam jp lds add or stos mov and into pop out call jmp popf fnstenv dec cmc int3 push dec ret and xor dec aaa pop in xchg mov inc or sub push test jmp outsl rolb pushl sub lahf cmpsl jl popf test xchg icebp push inc repnz (bad) jl jmp out cld pushf lea dec scas cmpsb xor or insl and out dec mov pop xchg inc xchg cmpsb test xchg lret repz mov stc jp out jne popa shrl call sub or sub daa jecxz stc scas xor cmpsl popa ja leave icebp cmp mov sub lods mov pop mov xchg fdivrs lret xor jmp in mov ja repz ss mov cli repz add mov ret dec pushf and fnop and or sti popa pusha mov dec xchg jp dec jp sub leave pop rcl leave or jo mov push dec idiv fldcw cld loop pop mov jmp cli (bad) mov xchg pop sub inc adc mov push mov lea bound rcll dec jmp loop pop addr16 sub dec and shlb sub insb cmp add cmpsl sarl or sub addr16 loope,pn cmp ja test sbb in fnsave jmp cwtl jae dec pop lret xor add data16 (bad) xchg int insb iret daa (bad) jbe out or xchg lods inc xor xchg ds je push xchg fldenv dec jg mov mov fnop lcall loop outsb fs mov mov cltd bound mov xchg sub and scas xor jo mov push std xchg clc mov dec xchg pop mov das inc gs cmp and (bad) sub popa mov and and or popf jmp mov ss shr mov sbbl pushl add pop add pop ret negl and mov adc iret inc push outsb addr16 pop mov jmp out and jo inc sub clc or and push pop iret stos push fucomi push (bad) mov push stos les scas mov and popf loope call test mov ret sub and sub sub mov mov jle lret mov sub sub xor mov dec stos adc call ljmp xor mov loopne xchg das sub ljmp (bad) pushl mov pop cs lock push pop adc mov dec les (bad) testl mov or out pop fs (bad) push or mov cmp xchg fisttpll sub sbb mov jb push in and pushf (bad) jmp enter pushf movsl xor mov jp and lods pop loop gs sarb stos cmp repnz mov mov cmpsl cli (bad) sti cmp out and lcall xchg push and lock push dec push mov mov rcrl cli pop pop pop (bad) fadd rcll (bad) push pop push mov outsl mov xor mov sar popf sub insb in xchg or add mov arpl lds add sbb cmp popf movsb icebp xchg xor cmp into lds jns mov inc mov jmp mov mov mov push pop lret shl sub dec jbe rolb lods xor clc test lret shrb sti push or xor sub leave cli sbb dec cmpsl (bad) jae fimull lret cmp hlt imull jne test repnz cltd add jo div xor xor mov ljmp shl bound xchg xor jmp fstps sub mov sub shrb or sar scas ficompl dec jo popa or sti xor (bad) push ret sbb mov out dec mov loope scas sub sbb fbstp mov jns xchg daa cmp (bad) cmp dec sbb pop (bad) out inc inc sub xor mov and xor lret xor xchg xlat cli mov cli push push jo inc rorl mov fsubrs mov imul stc movsl data16 out int3 mov add into je add mov test pop int3 test ja rol sub sub mov inc (bad) jbe,pn xor sarl pop push and insb daa movb add dec ljmp fiaddl push (bad) cli mov sub cwtl pop cltd mov fidiv notb inc mov test jl aaa imul leave stc hlt or repz ret jg stc jne test mov insb bound xor out xchg repnz notb fucomip repz cmp push adc xor push and cmp or scas pushf cli adc (bad) out cltd fidivrl rorl dec imul xor jge ss das test loope pop cmp (bad) inc pop into add cmp adc cmp xor add icebp add scas xor insb in mov mov sub and call adc mov dec or sub lods data16 cmpsb popf and das xor xchg mov sub push mov mov or sub push mov dec idiv sub fbstp bound xchg mov xchg adc inc dec cwtl test mov jmp fcomps push (bad) xchg pavgb out mov push ljmp (bad) cltd lret scas lret loop pop or out ljmp es (bad) iret add insl push rcr lret mov jmp xor cmc into bound jmp mov iret mov xor scas std jno lods dec cmpsl fisubrl mov push adc shr ja and test inc lea mov mov cwtl lods adc mov mov dec shlb add jmp ja loope mov (bad) mov cmp mov cmp hlt test mov xor iret movsb push or fdivl icebp mov cmpl jp cmp inc das lds mov or pop cmp add mov or mov mov inc inc arpl mov repnz jo mov xchg xor or mov or (bad) add or xor cmpsb xchg and (bad) cmp loopne add fisub stc xor mov dec mov and cmp mov push inc cli popf add repz sbb cli pop enter into test stos mov mov dec mov aas sbb rorb jecxz pop testb ret in adc (bad) dec cmp (bad) push ret jge (bad) sub push es or loope cmp in loop ds adc nop fnstsw mov and sbb ret sub jmp push xlat test in imul pop inc mov jle les scas (bad) jae cmpsl sarl cli sub dec (bad) nop xchg push jle pop xor jle repz xorb push jg roll add and sub jae or add and jbe les push xchg divl inc add xor or xor add cli out loop jmp sub sub aad adc jmp lret mov enter testb in sbb (bad) sub cmp lds fistpll push imul dec mov adc mov dec push add mov pop dec or cmp pop sub cmp mov and pop mov (bad) std stos (bad) divb and pusha xchg (bad) push mov nop mov cltd ficomp push xchg icebp dec jno stos nop notl pop adc sub mov jne sbb mov pop and xor mov ljmp or adc mov ljmp xor test scas adc and sub cmpsb pop sbb sbb inc xor clc aad mov or dec imul in inc or sub and dec pop cmpsl rcll or mov xor std xchg ss jmp mov lea mov popa xchg sub or or icebp mov (bad) ja std movsl enter cmp push jb rolb stc push sti (bad) faddp cmc (bad) jl ja mov jb dec (bad) xor or cmpsb popf xchg push lret addb xlat inc xchg ret shr jle jmp inc std out mov sub popa xor je enter or add xchg sbb adc inc dec jg icebp inc lods mov int in mov adc jmp std dec ja imul cmp movsl notb repnz test pop inc lods jno add sub xor notb je jb scas cmp pop push lret cltd negb and lods (bad) jae and stc in addb xor mov mov cwtl daa jne pop jne mov cmpsl pop dec aas lods iret mov (bad) mov mov xchg push add mov jno (bad) or into and aad test or cwtl sbb addl ret xor adc out mov fistpl sub lret adc repz push dec lods cmc inc jecxz (bad) movsb adc clc adc repz ja sahf and mov push pop add rcl and and sub push and xlat pushf jnp cmp leave (bad) jne test push cmp and hlt xchg mov inc add scas ret pop cltd mov lret pop push sbb mov rcrl das or push sbb add sub adc and pop cs jge add cwtl ss int3 sti and int cld push mov out sbb sub out push vpor fistpll out daa xchg dec or lahf das cmc loop jecxz xlat push inc scas repnz leave or push jns (bad) (bad) and cmp or mov mov cmp cmp shrb push mov lock ret jns inc mov mov lods or and fnsave sbb push pop xlat mov and out xorb dec adc ljmp (bad) sbb rep cmp and xchg mov mov jnp and push dec sub push adc xchg sti push es ret xchg fs loopne mov and stos insb sub sbb push xor movups imul stos jl xor sub in inc jle xor clc sub das or (bad) xor fldenv popa cmp fldpi inc xor xchg ret pop test add rcr in mov sbb mov sub xchg or jns dec ljmp rolb and out je loop cmp sub out xor add xchg xor out insb pop push negb dec and mov xchg negb jns xor cmp jno inc and fcomps dec dec mov and push add loopne notl leave outsl sub or call fildll dec jbe lret (bad) mov mov sub test xchg xor das negb adc mov add rcll mov out aam mov in es inc add add sub mov and sbb lods insb sbb mov fisubrl pop add fbstp fidivrl sbb push out xor lds idivl mov dec xor clc xchg inc mov sub mov add stc sahf and jno adc popf dec dec pop add xchg enter call subb xchg sbb inc add sub (bad) call iret push ficomp in cmpsb insb (bad) mov int3 add sub jg mov test mov xor dec mov dec stos lea mov xchg cmp dec mov pop imul or cmc fsts dec xlat cmpsl int3 pop xchg lcall sub or out mov pop sbb insb xor std cmp jge test sti cmp pusha loop in mov sbbb lock loop mov divb pop push sti xor jns movsb stos adc mov pop mov sbb mov xlat sbb push xchg add or icebp jmp (bad) mov cli rorb lds scas cwtl push xchg nop repnz mov xchg jmp mov lret (bad) dec movsl fnsave lret xor jne jecxz inc push mov pusha sub aam jl loop ret mov cmp mov test stos les jbe sub mov jle xchg push sbb repz mov ja arpl (bad) je and or add lds and sub jmp (bad) sti adcb add sub js mov xchg repz (bad) jne mov adc cmp outsb cmpsl insl add mov cmp adc mov push ss pop fnstsw push pop scas bound mov ret dec fsubs ds sub out imulb ss daa mov fisub movsb imul adc jo jnp cmp mov mov ljmp cmp (bad) call push pushf or data16 pop mov scas sub adc cmp iret sub xchg mov stos push test insl cmp add inc andb cmp mov jmp sub push loopne lret sbb jne (bad) jo loope sub sbb and and ljmp push lcall (bad) xchg push aaa push inc or pop inc mov cmp sub dec add sbb fimul pop cs ret dec stc pop mov (bad) mov lods add or out pusha xchg mov sub jne ret or icebp sub pop test jecxz sub gs outsl in xchg fcomps out scas mov shrb mov jecxz or inc and inc push lods movsb add out and mov fs and push jns mov in scas out push add out daa rcll loop xchg adc xor jbe sub push add enter dec xor neg popa push and dec gs cltd pusha sbb push or push icebp mov cmp inc jnp decl dec inc popf (bad) xor xchg pop vsqrtss into (bad) sub xor pop test pop add dec jns and fisubr xchg repnz daa sbb out decl lret data16 add push negl or sub loope sub cmp scas aam (bad) sub jecxz test add sub mov jecxz decl mov pop ljmp fbstp stc mov xlat xor mov ret inc sub cmpsb and rcl loop pop push adc and out and (bad) jecxz add inc rcr dec dec pusha mov jnp cmpsl daa and roll mov repz mov push sbb add mov nop shufps andb add insb leave (bad) jmp push jp dec ljmp imul lds data16 mov dec aaa xor pop clc lea xchg sub mov sub jo fild xchg (bad) int3 divl dec sub jns imul push imull mov and adc ret out daa idiv jp or jno and cmp inc pop mov inc xchg xchg (bad) or lods jg inc imul imul mov dec mov mov sub add movb lea xor lret mov sub lret pop mov iret or and into mov (bad) pop xlat jno or movsl bound fs test mov sub xchg xor clc push mov sub popa fs subb cmp out push jbe test xchg fdiv rorl imul xchg aam (bad) mov movsl cld xor and enter fildll (bad) jmp adc mov (bad) xor or sub mov cmp mov adc and out scas pop imul loop mov ljmp js pop lret xchg mov aad stc cmpsl daa or cmpsb mov scas xor int3 jbe dec xor ja adc mov pop lock roll ucomiss stos jmp inc lcall fcomps lret dec mov sub pop push adc daa (bad) iret jl inc sub mov or push dec mov add adc jne mov pop icebp pop or mov outsb mov mov fdivl insb in xchg je outsl xchg ljmp call aaa mov call sbb mov jle and dec lret movsl daa mull or xchg ljmp or jle add test or cmp (bad) or (bad) cmc pop inc lea jae fistp lret mov mov mov cmpsl int3 nop mov lahf call inc mov mov stc sti xor sar outsb dec leave idivl inc or (bad) jns mov inc lock lods xor fwait xchg push cmp dec repnz jae push (bad) scas sub notl xor (bad) into adc lahf inc add sub mov pop leave add (bad) sub adc ljmp mov stc jo jmp inc adc movsb xor ja dec ret and mov push pop ljmp jmp push loop std inc ret (bad) adc and (bad) sbb xlat and add adc fisttpl lret xlat inc push sub daa rolb arpl pop mov leave add and ljmp lcall callw (bad) mov jle inc mov xor in pop pop adc mov xchg stos pop push aam leave das mov lret dec cld lret loop jne or mov insb in mov gs jmp jle mov jmp loopne repnz popf fsts icebp movzbl add fldenv push mov and dec sub repz (bad) in push push ljmp stos daa jecxz mov into pop and xor out cs sub xor dec xor sub je mov mov adc mov in scas jo pop ret ljmp push das iret aam int lods adc loope fidiv jne in push push sbb dec pop dec inc movsb movsl ljmp sti in or sub pop mov sti dec sti pop (bad) out jge (bad) mov decl mov jnp adc test jg clc fxch outsb jecxz es in add mov ja or mov mov js jbe push ret fstps lret mov loopne lds xlat dec ljmp or enter cmpsl repnz ss jg xor sub (bad) fcomps ret sub xchg xchg adc test loop xchg xchg xlat push and mov push cmp inc sub add mov or pop fnstsw das push push inc data16 mov or xor push mov adc mov (bad) je mov mov hlt dec out or hlt mulb mov mov inc lods sbb pop mov ljmp cmp pop xchg jl ret and pop pop sub xor mov enter sbb popa (bad) mov mov rclb fidivr mov xor into sbb hlt test mov xor xor push jg gs mov cmpsl sub or mov mov stos cli shr addl and dec into or fidivrl std or gs out negl push or clc push jae setne xchg sub cmp cli enter jo add imul fidiv repnz ret (bad) stos (bad) jge pop dec insb cmp int inc xchg dec and (bad) cli sbb cmc test dec (bad) cmp pushf sahf push inc iret mov addl and dec fadds fsubs rcrl dec sar sub mov jmp xchg call add lods (bad) jle jo mov adc movsbl xchg xlat jecxz xchg mov cmp dec lds pop mull cmc pop adc mov insl push jns shr cmp mov pop icebp ret mov or dec pop movsl cld (bad) xor idivl pop mov adc out lds add jmp adc fbld psubusb jmp adc pop sub repz (bad) sbb icebp imul ja push fistpll mov add push xchg (bad) jmp inc aas test mov add add outsl stc pop sahf adc cmpsl xchg pop adc mov xlat scas (bad) xlat dec (bad) mov (bad) movsb mov sub cli push sbb sbb inc and stos (bad) xchg cmpsl movsb sub adc out push add ljmp out mov mov dec sti je loop test call jnp scas adc ss repz lret movsl xlat dec mov pushf add inc mov xchg in pop xor jle lret dec shrb repz cwtl adc add imul push repnz (bad) cmp stos jecxz hlt gs add (bad) ljmp je out test and pop lods imul lock lret mov fcmovu jb mov or in sub xlat xchg cli mov mov (bad) sub mov out mov mov and push ljmp cmp sti mov mov jl lds lret xchg pop in jmp adc inc adc rcrb and adc mov stos mov pop inc in adc cwtl ret jmp pop xchg jo mov lock (bad) mov jnp hlt sbb mov inc mov fsubs mov adc sbb mov mov cmp das (bad) adc pop das ljmp or out and mov pop inc les mov mov scas push xor enter gs mov ljmp lret sti dec out xor test mov pop (bad) sub sahf imul int js enter test cmp adc je jmp xchg ret dec pop cmp push das lret fcomip dec xchg mov jb sar dec dec pop fldcw loop sbb adc add sub pop mov repnz out adc cmp cmp mov mov and scas sub push mov xchg mov (bad) pop add cmc sub (bad) dec jbe mov ljmp imul mov xchg and loop sbb lods mov fwait and sub das cmp fstl mov (bad) or shlb in movsl movsb je mov dec stos cmp sub jae mov out stos rorl mov mov ffreep sbb mov rol js mov xor cs and cmp stc mov push mov jmp xor jne cmp mov and (bad) sub lret add cmp bnd adc or push pushf and aam dec pop int3 push sub and pop sub xchg sbb ret (bad) jno add sti mov pop xor lret xor divl jo or mov out or mov jne ret pop repz sahf ljmp mov pop sub dec lret adc mov xchg xor jge out dec or adc repz sbb add mov imul lcall pushf fisttp sarl push or cwtl data16 inc sub lret push sub frstor out repz (bad) ret add inc xchg push imul daa les (bad) ss adc daa das mov iret daa testb (bad) pop cmpsl xor divb sarl decl mov add test xlat sub fnstsw imul int3 fbld dec pop cmp mov fnstsw pop pop mov (bad) repnz push sub cwtl (bad) xchg pop xor jg push xchg jmp adc jmp lahf and lret or and sub pop daa in mov cwtl push and loopne ja adc jl pop xor or add fnstsw sbb cli (bad) lds inc movsl (bad) and test (bad) xor lahf icebp mov pop sub mov dec loope ds fistpll lock jne outsb xchg xchg cwtl (bad) cwtl dec xchg pop mov cld sub inc add pop dec (bad) xor and adc push cld ret push jnp mov les mov int cld iret lret xlat sbb mov mov mov and std inc mov inc enter mov fwait imul out test xchg inc jmp and (bad) stos pop or inc xor adc jmp push mov or out mov (bad) xchg (bad) sahf (bad) or sub ss push mov xor pop sub sbb and pushf cmp daa lret lcall mov inc push dec mov jne into mov xchg cli cmc inc sub test jae (bad) repnz pop push lahf mov dec push leave pop loopne insb fs cld pop pop xchg xor push stos jmp sub inc xor xchg mov dec daa out (bad) dec bound out inc mov xchg rcrb popf xor mov cmpsb pop pop leave fld jnp push dec cli faddp dec ljmp xchg jp pop fsubrl push xor mov stc pop loop enter push imul iret out into xchg jnp jae adc rolb aam neg mov hlt into imul into aad push inc cmp mov push jo mov (bad) imul out jnp mov in pop leave pop ljmp adc jle dec and (bad) jne sub lds jmp lret jae dec dec (bad) mov jle pop sub jno cmpsb mov das mov das repnz mov nop je push pop in mov out repz in inc dec (bad) jmp mulb mov mov notb fs ret push push add push pop out add mov bnd add and ret dec mov (bad) and into or notl pop (bad) mov mov (bad) xor outsl push sub xor jmp bound lahf add add repnz aas into aas loop les negl (bad) int3 add push imul add push es dec std mov adc in lret sti dec out jno xor cmp sub bound adc nop negb jmp sbb (bad) inc imul icebp into lods push das loope stc cs out pop pop sub add movb mov test loopne mov sbb jge out fbstp mov scas sub pushl mov pop adc dec inc repnz xchg pop insl xor push in xchg dec sti sub (bad) mov js sub popa adc lea push mov mov rcll (bad) xchg sbb imulb fldcw fadds mov pop mov cmc ret pop leave sub notl pop add add repnz js popa into xor inc stc sbb (bad) dec (bad) rclb xchg mov inc mov pop adc mov out jg push leave pop cmp or mov dec lds add decb xor mov adc mov inc sub in andl (bad) fstp sub inc into pop mov add lods out xchg (bad) out jno fcom dec ljmp jns push clc iret mov xchg add add or divl dec test cmp (bad) mov sbb pop imul ffree gs or and add cmp rclb (bad) xor add xor loop in xchg (bad) repnz adc decb mov popf jbe dec push mov push xor lcall cmp aaa or lock divb stos int3 jns or mov push push pop leave adc inc xchg data16 sub pop mov popf dec sahf ss lahf inc fiadd add sub and jl xchg in cmp setnp das jp je pusha sbb add mov mov mulb or and lds jg adc lods mov or or xor cmp adc iret (bad) fdivs icebp mov add into insb dec mov pop lret fsubrs pop stc mulb inc es mov and stos loope jns jmp sub fisubr inc mov cwtl fwait icebp sub dec dec and pop ret in mov aam xchg cli ret inc std inc sarl sub xor idivb jmp aas mov clc mov cli sub mov or std out adc fdivr mov sub jnp aaa add pop xchg in fisttp or mov dec xchg daa leave adc test dec call sbb jne mov mov out ret pop out imul enter jne xchg sub addr16 mov mov pop sti cmp je lea or ffree lods movsl aam cmpsl xchg lock test hlt dec cmp lods sahf mov push mov fild (bad) xor jg xor push imul cmpsl in mov lret push in xchg fistpll jno jmp lds jne,pt cmc sahf pusha adc and scas push push xchg fbstp repnz push add pop dec or cmp mov in pusha sub and lahf jle das insb lahf push ret jns pop lock sub mov cmp cmp xor pop and add mov lcall loopne out lds xchg cli xor xorl lret and push in jp mov fadd aaa mov test push sub shll jle,pt cmp jl das fsubs pop adc cli mov or ljmp mov std adc rclb mov adc push aam push dec das xor adc sbb scas push push (bad) iret and pop add mov jne fstl mov or mov sbb out sub in mov xor push js movsl sti repnz xchg adc mov push push pop mov add jno xchg and mov pop test and jl bound (bad) loop push xchg scas xchg mov sbb aas sub out mov inc push pop imulb and jle mov dec jmp mov xchg hlt mov das ret jns scas call lods xchg xchg imul sub push mov (bad) imul or iret test sub push fidivl stos pop icebp pop xchg dec push fild mov mov sarb into or outsl jp mov fisubr or and lea xor mov push enter aas xchg push movsb icebp dec cmp (bad) fstl into pop je mov sub cs add and mov dec or lock xchg ret gs mov sti lret cmp stos cmp aaa ret imul or cmp mov mov (bad) sub add out sub cs and xlat call sar rol xlat shr xor xor pop mov inc xchg test leave (bad) pop mov (bad) imul ret stos and sub notl xor lahf test sub xor xchg xchg stc outsl pop jmp fsts aas data16 stos test inc sar add jmp cmp divl pushf in mov mov xchg fdivp sbb mov (bad) (bad) push aas fsubr mov mov and mov sub in ss pop cmp sti repnz test clc and fdivrs adc aam sbb cmp icebp add sahf daa std test out es or lahf jo aaa hlt adc shl or sub jp cmpsl sub icebp jl dec movsb stos (bad) fnsave adc jecxz xor js vmovaps test and (bad) in out fnstcw xchg or cltd pop (bad) sub lret and jl and sbb fsts mov repnz sub pop add and cli push push jb cmpsb stc push repnz mov es (bad) notl jb mov fstpl sbb jnp jg fwait cltd xlat mov lret lea add cmp sti cmp loopne push popa cmpsl cltd dec ret push dec sub pop push movzbl jno add das popa mov adc les adc daa fsubrl sub hlt mov adc sarb xor jle push inc mov xchg leave fldcw out fwait add sub sub or subb setb jno inc sub inc fidiv lock out dec imul pop lods jnp pop ret stos movsl jne jge mov add insb ja enter ljmp dec cmp ss pop ljmp sub andl jnp mov cmpsb mov cld add or mov jns and xchg fildl mov lods sub xor xor (bad) mov jl and mov xor jecxz rcll cli sub or inc xor mov xchg aad cmp and imul lods ljmpw out mov pop (bad) pop lret out outsb mov mov inc and icebp mov push in (bad) repnz mov and and xor mulb adc mov cwtl pop add leave dec cmc inc cltd inc sub mov mov pop arpl mov jb cmp push pushf sub pop test add push mov fbld dec notb cli inc (bad) mov mov xchg bound mov rorl movsl jbe popf or and adc cmpsl les fwait or cmp mov mov pop or data16 test mov jmp mov inc xchg mov leave icebp push daa movsl pusha jne and pop leave xchg mul pop loope cmp lret push add movsl mov mov shll lret ds mov lods arpl daa pop in push cmpsb int push loope pop or mov lds pop mov lret bnd leave push dec test or fucom xor add ret div imul into pop push sub add inc xor out or sub sbb or popf addr16 mov les mov loope or out sub out jle push dec sti sub data16 cwtl arpl iret scas cmpsl lret sub jge bnd outsl bound jns add mov dec mov cmp mov (bad) rorb clc sub or add ret mov rorl cmp xchg jge shr push loop and leave enter push pop icebp cmp jmp lret sub mov sub aaa sub out aad mov pop pop mov or and xchg pop mov (bad) mov pop movsb xor imul int3 iret sbb and pop push mov jg adc inc and repnz mov test fmuls (bad) dec and dec sub out js and lcall rorl jno pop add pop cwtl mov pop push mov jmp ror push or pop mov int3 and dec push or dec (bad) push dec adc scas mov test jmp (bad) mov jae scas clc inc or jo pop (bad) in divb jne (bad) ss mov ljmp arpl repz add rorl add pop mov xchg insb mov xlat cmp fidivr mov or int3 pusha dec imull jg sub cmpsb pop fs ljmp sub ret int3 js inc sub bnd ja ljmp out sub loop pop (bad) dec cli pop adc xor mov xchg idivb jno into (bad) nop jb js mov loop or cmp add push xor test jecxz cltd stos shrl loopne call dec push sub (bad) jns imul fs add and icebp jp mov mov insb int adc dec orl jge sub sub jb icebp and jle and dec sub dec and dec and adc sub mov repnz lcall and dec aam (bad) rolb ja add nop pop sub add mov imul jne aas nop xchg and inc cmp push mov pop dec (bad) mov pop add ret (bad) addr16 jge sub daa lret aam sub mov mov cs push dec mov mov inc movb aad mov jge out sub fisttp icebp sub lret std adc dec inc pop inc shrl jmp mov dec or mov sbb inc xchg ror cmp jmp mov mov adcb in mov out push pusha mov and hlt test pop sti fs mov push mov repz fstpt inc push (bad) cli sar adc adc ljmp leave mov mov out sub (bad) xchg pop iret stc cmp insb dec add jb cwtl pop dec and divl sub sbb or repnz sbbb ljmp lret and popf fistl sarl mov jmp mov ja mov lds adc ja mov add pop mov cmp xor mov mov push rcrl stos sarb int3 cvtps2pd mov mov or jp fiadd push and cmp dec mov and std xor into or clc jb inc and dec out inc jae lods lret inc adc (bad) hlt cmpsl jl jge es add (bad) cmp xor cmp dec pop dec cld or std cmp icebp les loop test sti repnz mov xor in leave mov fst and popa cmpsb jp test mov out and sub stos lea repnz movsl aad push push adc rcll pop out xlat test inc les fprem xchg les push sti fsts cmp pop je stc fmull push ljmp add jecxz or jbe jno jp incb dec push lret sarl ss sbb xor stos movsl sbb das adc scas mov pop int3 cs and je mov pop sub xchg push mov mov pushf out pop mov xchg mov pop push jmp and and pushf popf jne es mov lods cmp sbb loope xor inc add jbe cmp mov in mov mov lock and lds sub or mov adc pop or push or mov repz push mov xor pop (bad) xor ret mov mov iret inc sub into mov mov lds dec sarl mov ds sub and in add test lods fiaddl cmp insl and popa mov mov int data16 add fdivl lock aas ss scas xchg sub test xchg adc (bad) mov enter fidivrl cmp add adc xchg jmp lahf clc pop repz and xor mov out mov mov xchg enter push cld add jge jle andb jb adc xchg loop inc add jp add lahf sti test cmp jmp mov imul stos pop or in mov pop je push mov pop aam lahf push mov dec mov js pop imul jb pop lods out jns sub test push sbb into dec (bad) cmc inc inc xchg pusha cmp mov mov vpsubw cmp sub or outsl test leave fidivr out dec xchg xor movb adc repnz or xor or mov jno daa jg mov add iret jno dec (bad) cwtl data16 cld jnp xor lret pop xchg loope lret loopne out mov inc inc mov jo cld icebp jg out and mov sub mov sub jne xor and mov shrb arpl leave xchg pop cltd loop adc movsl adc push pushf stos int jns test andb inc push pop nop int3 and pop (bad) stc daa dec jmp push mov divb cmp pusha jge xchg or in fdiv mov xor add pop out mov cld ds mov dec and xor and (bad) jp nop in sub mov in and xchg xor mov inc and sub dec or mov jo mov mov cmp ret (bad) adc and dec add sub pusha sbb sub (bad) jg cld ret ret push (bad) call ror enter adc dec ja (bad) cmpsl cmp loopne add ffree lods lods jle repz sub movsl es dec dec add or (bad) fwait leave sarb mov maxps popa (bad) loop shrb lock fwait loope loopne pop or arpl sub arpl das adc mov sahf cmp xor popa (bad) jecxz push test lods jl push cmc cmpsb (bad) jmp mov in push sub (bad) xchg xlat mov push pop aam leave and mov and xchg jmp jle add fistpll pop lds xor imul push or popa out leave jge (bad) sub cmpsl icebp add out shr repnz xchg cld ss fnsave xor les shlb jne nop test lret leave loop jno pusha jmp adc dec add inc jle imul lret cmpsl ds and fcmovu push add ljmp dec add mov mov push lea adc clc xor add imul sub sbb mov cmp sti popf jae movsl jbe pop rorl jmp mov test mov pop mov xchg push xor and icebp inc xorl add mov ljmp fistpll imul adc scas daa jns outsb pop repz cltd mov push popf push xchg sbbl xor (bad) ja ss mov and stc and sbb jl mov je enter test and and mov ds lock mov mov shrb dec mov xchg lds cltd aad adc xor scas xor push movsb cmp xchg dec test gs xor mov (bad) dec enter rol repnz stos gs in ljmp pop xchg in daa jbe les test clc xchg cmpsl into fildll ss les sub mov xchg insl scas gs in pop int3 push dec out out iret xchg icebp xchg pop dec leave jb ss jnp sbb enter (bad) fucomp faddl sub pop jnp sahf scas mov xchg pop imulb repnz pushl mov xor iret pushl add adc mov xor dec and and mov adc rolb cltd mov mov mov sub adc mov jbe rcll out jno out cmpb repnz fldl mov sarb sub sub les ret fwait mov or scas jne mov xchg rorb xor mov popf ljmp test xor repnz pop (bad) insb dec mov mov cltd xlat clc (bad) mov fsts mov xor ret shrd sbb xlat (bad) hlt ljmp add out push or fidiv mov xor int3 loopne push icebp add pop or repnz fldcw popa mov jae xchg add mov pop fdivrs mov sarl in dec lret mov lds in inc dec mov mov ret cmp xchg add cmpsl lret leave and pop in push jge inc pop cmp stos frstor (bad) pop (bad) out dec xor push pop pop or push push lret orl add insb mov das ret and out add into push mov jno adc das mov pop lret mov int cld sub repnz mov sub and std xor imul jno push imul add frstor dec xor xor xchg (bad) into (bad) idiv lret mov jmp (bad) stc ret jl pop data16 pop mov or jbe daa fs in ds push or jne adc add cmp ds inc sahf jle mov imul pop (bad) sub pusha enter imul jecxz jmp sbb mov ficompl rorl das push adc dec loope stc sub xchg pop pop cmp xchg xlat bound aad clc or xor jmp imulb inc sub test jb notl or xor out out sub mov cmp imul scas ja xchg lock mov fsubs into sub stos mov mov (bad) lret push out leave sti aas notb or adc divl fcmovne fbstp inc (bad) out mov int jae xchg mov roll mov xor ret ret mov cltd cmp xchg lea test sub fidivrl daa mov stc int3 xchg sub pop add movsl dec jbe pop test stos sub in movsl int3 gs repnz cmp pop mov jl push and mov jg out and fbld repnz xor and adc inc add loopne nop popa sti push divb in cs test inc into ja data16 jl clc mov test mov xor sub mov mov lods pop mov mov sti xchg sbb in nop leave xor mov sbb leave cwtl add in sub mov adc ror mov int and inc sub lods movsl xor dec mov mov cmp jl int sub les into jmp mov cli out or imul push push arpl (bad) sarb out daa sar fisttpl lods push loop xchg daa or pop jge mov cld pop loope addb mov mov and pop push or out jo xchg jl sub jmp jnp mov repz lock aaa nop adc stos ret aad or dec or sub shrb stc int mov cli bound ss icebp adc shrl pop jns xchg or popf fwait xchg dec (bad) je mov sub loope sub dec mull mov pop pop cs testl (bad) sub mov idiv in imul adc sub movsb cmp (bad) push (bad) xor fldenv cs imul data16 xchg fiadd inc bswap sub sub sub movsl loopne and (bad) aam aas mov imul jo dec imul sub (bad) in jnp (bad) lock fldenv out cmp fwait pop decl ds iret andb sarl rcl pop jo push or cmpsl repz mov icebp int3 jo cwtl add repz movsb xor cltd jo mov push andb pop clc sbb icebp nop test sbb sti lret mov jb movl leave push or add push dec ja fwait (bad) dec mov jno scas (bad) hlt aas hlt ja or cmp sti inc mov mov ja xor push bswap pop xchg jno adc inc scas rorb int3 mov ds daa push xchg test or mov dec pop mov sbb pop test aad dec daa test xchg scas mov daa cmp sub add cmp cltd out adc stos repnz fdivr pop (bad) jbe ds leave xchg xor ljmp lea imul in (bad) mov lds enter push ljmp inc (bad) mov sub popa mov push frstor cs sbb popf (bad) ljmp jno xor or or idiv fs push shrb ficompl (bad) mov iret insb dec jnp mov push mov mov inc sub loop jg inc adc mov pop cld xchg repnz inc loopne mov mov je fiadd and xchg xchg lret cmp cmc stc test push push movsl mov (bad) mov lcall jmp sbb jle adc int in push sub mov pop iret sub jno dec std lds push iret stos mov pop int outsb xchg into scas cltd push and sub mov xor sub jecxz dec scas popf mov mov push xor lret out in imul fsubs enter sbb cmp xor fs stos cmp push pop or fst adc pop mov les jne sahf call pop mov cmp ljmp in sub das inc lods pop (bad) mov and xor jno bound pushl addr16 daa jmp add das lea pop add inc and je out sub cwtl fisub push (bad) cmpsl inc ret cld es std xor sub ljmp cmp dec fnsave sub dec ljmp scas sarl (bad) dec pop add inc sub or sbb cmc cmp and dec mov jne jae xchg (bad) fucom sub lret add int3 jle dec or inc pop mov adc scas adc aaa sbb or inc subb in add mov les scas mov or cmp fcomps ljmp stos in fistpl xchg mov ret mov or (bad) and inc mov mov jl cltd cmp ficom call cmp das shrl push enter dec or cmp data16 rclb (bad) movsb dec (bad) and or outsl ret (bad) ljmp xchg inc sub mov decl dec insb mov mov in scas movsl mov dec cli xchg test lcall cmp lahf jl call pop push mov lock js out loopne mov mov sub push mov push mov out add mov dec dec incb roll rorb idivl je sti xchg or mov add int3 add pop jno cltd xor mov rclb cld push add xor pop xorl notl (bad) jge roll jl pop (bad) xor xor sub aas jb pusha pusha pop xchg lcall push mov xor pop mov sub jns movsl jmp adc inc into pop lret cmp jle pushl xchg pop ljmp xchg push adc push mov sbb xchg push fcomps das and pop ljmp pushl std dec rolb mov nop sbb mov inc pop lock mov adc xlat sub in adc mov fisttp movntq push push sahf mov roll jnp sub outsb popf sub mov pop push mov fnstcw mov fstps (bad) xor or adc xor mov iret out int3 int3 xor sti push mov jecxz jle cmp shrb sar jne xor pop pop sub (bad) (bad) rorb mov lock pop xor into add icebp adc pop add ret mov push push push pop pop add imull xchg or pop clc push xor or push test dec xor and push pusha repz mov je loop add cli pop std or jae lods jmp dec sub bound (bad) push cli mov adc dec add fnstcw xchg leave test mov idivl pop inc cli sub lcall fdivrs ds mov sbb in in sub sub add mov lahf nop imul aam mov ficomp adc mov cmp call pop inc test icebp sbb jecxz cmp push dec into xor pushf push arpl xlat xchg out std mov (bad) push ss es cltd cmpsl adc stos xor dec jle push dec out out dec lea (bad) jge loope (bad) dec outsl (bad) lret dec ret leave jecxz inc popa pop (bad) or jmp jne mov enter pop add sti mov fldcw lcall or movsl mov (bad) fild repz sub divb jecxz push add xor add test inc leave jmp xor mov xchg lods fdivl mov inc mov fdiv cmpsl pop and ret movsl out das popl insl rclb out mov push gs aad bound mov mov mov sub cmp jo push in rorb ljmp pushf or sub sub popl xor add roll xor mov pop fcmove cli mov movsb outsl mov movsl push je jmp lahf or sub mov call mov ret jg orl test add push pusha sub mov mov loopne adc sub sub out dec sar movsl rorl repz repz in aas loopne out movsl xlat cmpsl push xchg aam dec leave push sub das cmc push scas and fistpl fcmovnb pop mov lock icebp jmp pop rcll xor ficom sub sbb movsl ljmp sbb fcoms negb lret or adc dec adc add jg stos sub xchg push insb bound add pop aas xchg out push pop add scas cltd fs out lahf pop push imul push pop fwait orl lcall sub sbb ret mov jae or xor std sbb lods fstps les and mov or jle test sub sbb gs lods push and sbb ljmp pop mov dec hlt mov push push test leave push pop lret in pop pop push iret jl call fsubrl push pop out stc (bad) out rcrb (bad) jb sti dec cmpsl push xchg loope xor std mov xchg out lret mov lds mov mov rorl and jmp flds and xchg repz shr popa (bad) lret mov repnz es jl (bad) mov faddl ss push ret stos and mov cmp mov sbb into mov fadd enter iret cmc pop ljmp pop ljmp leave and xchg mov inc leave imull push leave xor mulb fldl in out stos hlt addr16 out fs add loopne leave orl ret pop (bad) mov not roll aad xor mov sbb mov dec jno inc jmp out xor (bad) repnz rorb roll pop mov xchg jae mov icebp outsl lods jge (bad) lods pop jb mov pop jmp mov (bad) aam mov sbb jmp or (bad) and add sbb sbb and xchg lods jne repnz hlt cs push iret cmpsl inc mov and pop xor dec mov mov adc pop (bad) test sti inc nop cmp mov push fcoml dec sahf subl mov mov leave movsl push mov test mov sbb std pop inc mov out mov pop dec or scas inc out popf repnz int3 rolb dec jmp adc and pop xor loop outsb sub pop push inc sub daa (bad) pop enter jnp call movsb xor mov movsl test pop call shlb stc call daa lock dec out sub sub add push mov xchg inc cmp mov sar mov mov fsincos xchg ljmp mov xor xor sub push int jg daa call in sub add pop and xchg pop xlat out loope,pt sub daa iret inc gs and (bad) lahf jle mov pop jno int mov and pop stos sbb mov lahf or mov shl push push or xchg and repz push fisub ljmp sbb fcmove or xchg (bad) cmp out popf aad jecxz sub dec leave push pop jmp ret sub inc xchg ss (bad) sub call iret xlat popf add int3 inc add out and xor xor jbe sub rclb lods sub loop or add inc jbe loop gs stos lea sub rep or fsubs and mov sbb imulb out ja test push es scas and jge sub mov cmp out gs jae push push popf fstps leave xchg (bad) je mov loope pop sbb test mov mov insb rcrl dec out sarl mov dec pop popf clc add mov push fwait dec pop inc out mov repz stc and xor mov lock notl mov push jg cmp or cli xlat jmp mov fstpt mov mov mov mov mov hlt and ljmp aad sbb inc adcb pop xlat mov addr16 leave cli mov shlb and sub jb lea sub lret lea xor xchg jge pop push fstps dec pop push cs inc add out sbb in sub push pop lock adc add cli mov rorl ja fdivrs pushf mov (bad) repnz push push repnz mov mov movl sub add leave mov push xchg mov jno hlt pop pop jmp repnz pop xor mov push and adcb ljmp jge xchg and andl jle lods or data16 add jne add dec dec xor push jno adc shlb nop out call (bad) lahf push out fstps mov ret jne jl leave mov or mov sub out sbb mov and add sbb incb add stos xchg in cmp popf insb push adc sub pop lock xchg mov fcoml in scas adc mulb gs popa rolb and into dec inc popf ds or iret cmp or ret cwtl jb sub dec (bad) bound out jge je stos leave xlat xchg cltd idivl clc sbb mov xchg sub (bad) mov push jno jbe out out and jno cmp (bad) sub jmp in js dec repz cmp sti xchg lock jl data16 cs sub data16 cmpsb mov add jmp negb mov adc (bad) adc shrl adc stc mov notb cmp cmpsl pop cli hlt iret jmp sbb add sbb mov and jle push aas push (bad) scas mov mov ljmp push push pop jbe push out cmp repz jmp inc cmp jle mov ret in adc aad sahf inc adc (bad) into push lea insl inc add pop aas push inc push rolb mov fs push or and stos add xchg sub and push mov xor sbb mov add push idivl mov pop inc mov ljmp sub or pop add jge pop mov sarl mov ja xor add in mov icebp jg fstl mov pop pop adc movsl lcall push push js cs inc shrb fstpt addl sub js aas inc fdivr out sub lods cvtpi2ps inc subl cmpsb mov sub sub add sbb mov outsl add mov mov jns pop lds lock das lock idivl xor nop mov repz out int3 scas aas add sbb pop lahf or or jg push cld sbb ficomp adc add push lock lret push add subb or add add and pop inc and jmp dec xor or adc inc dec or add push add shr add neg sub mov clc fnstcw jae dec inc mov ss lods movsb dec xor mov sub imull cmp dec sub sub stos adc idivl push aas add sub pop add imul into mov push or lds pop add add add add mov cmp aaa (bad) dec andb outsb icebp in out (bad) or xchg xlat cs in jg mov xor add mov outsb add add push test inc mov push (bad) mov mov mov pop pop sub xchg cmp xor ret xchg jnp cmpsb cmp leave pop xlat clc push xchg jo mov dec jne add fistp sub js imul in ds mov pop (bad) in out pop add mov push xlat cmp jge mov (bad) sub adc xor or xor push mov int3 imul das das sub sub (bad) mul sahf and sti mov dec sub mov call adc dec and or dec loopne movsl inc add xor sbb jb ljmp add (bad) pop mov xchg dec ds push mov fildll out popf pusha frndint mov lcall jmp inc js or orl xchg repz mov in inc icebp or testl sar xor pop jg icebp mov ja or fsts or push mov xchg lcall int3 (bad) dec push mov adc mov stc mov leave mov mov mov push pop js leave push adc popf in lock jnp inc int sub (bad) lds js mov mov pop (bad) and imull mov jne test dec lock (bad) or mov (bad) leave sub push ljmp je adc mov cmp mov inc rdtsc dec lret pushf sub sub daa mov jae push jmp add imul mov out mov repnz mov cmp xchg out mov imul int3 les pop (bad) test mov pop bound xchg sti fldl sti sub in add sahf mov divb and les and add imul lock out cwtl inc dec out ja fs and into and mov (bad) push dec dec dec mov xlat fwait xchg adcb mov out cltd mov (bad) sub cltd mov stos loop xchg inc mov js in cmpsl in and cmpsl fstl in hlt fcomps cmp in mov or jg cmp jge sub inc and push (bad) mov call jo mov sub push inc lret xlat add stc cli nop push call fbld pop ljmp jg jg movsb push imul loope jle push dec dec or divb mov ja pop or cmp rclb icebp stos idivb shrb in and aaa push sti inc cmp xchg push scas and xor inc gs negb sub orl fistpl cmpsl call popf (bad) xlat fs cmp rcrl cmp or or xchg push insb test or add call dec and pushf mov lods jmp shl jl pop (bad) leave jmp xchg scas pushf add fdivp dec cmpsb dec push (bad) int3 inc add push inc push add sub ret adc fcmovnbe mov push ret jbe (bad) xor popf fwait dec mov sub es mov lods cmpsb xchg ljmp adc stos lret es xchg shrl ret push inc push xor add lret and mov negb das sub jge and mov add xlat mov xor xchg sub std lock hlt out push push push xlat test xchg call push movsb test lret mov lret and lods cmp sub push and or (bad) xor aam sar inc pcmpeqw lret mov add push sahf push (bad) cmp aaa and xor xor in xchg outsb sub aad fst adc jmp sub cld (bad) pop xor pop (bad) xor or idiv mov inc sub in inc xchg nop sti mov popf push mov into pushf xor lds mov cmpsl pop pop mov cmp xor fcmove fnstsw sub movzbl mov mulb (bad) sub imul jns in sbb inc xor adc mov jb rol call push (bad) and and (bad) inc lcall xor repnz inc sub add rcll das loop (bad) xor scas clc sbb xchg repz dec mov out gs mov sbb scas out jnp adc dec mov pop or sub or pop jbe push and xchg faddl sub or sti lret in mov repnz pop pop lret ds aad iret jne jnp mov adc mov pop test mov das pop push (bad) movsl lock pop loope jecxz leave dec xor movsb mov movsl dec sbb icebp scas imul cmp outsl dec repz sub aaa (bad) add aad or rol dec xlat lock rcl (bad) cs push pop or flds dec xchg mov dec mov inc push mov xor sti or jno (bad) lods cmp cmpsb xchg or sbb fcomps dec inc dec dec test or insl xchg adc dec adc and or leave jno imul jns mov les jge mov or sub or cld gs pop ja dec ljmp lret sbb enter inc cmc aas lret sbb leave xchg (bad) (bad) fistp mov stc mov lahf incb mulb notl mov outsl (bad) or mov out jnp das push (bad) lds sub jne push xchg ljmp pop pop out test cmp cltd or in insb mov mov adc loop frstor cmpsl add jg,pn aam jo adc in push mov lods adc cmp daa cli je (bad) idivl cmp or add and insb insb or adc gs jnp (bad) imul pop jae lcall mov imul and or and dec sub ret jp sub cmp xor in mov sub add mov mov mov mov outsb icebp movsb jnp cli sub je cmp push push sub dec out aam cltd sbb push pop jecxz cli or push push mov ror xchg inc popa cmpsl mov imul dec (bad) mov fisubr mov mov mov imul mov mul add nop jo xchg shlb sub dec push mov (bad) cmc xor jmp xchg not jmp cs mov lcall test cs xor cmp in iret lahf pop pushf mov aas xor scas fs test leave and cmp stos mov sub add cmp hlt out lahf pop out out adc pop xchg notb mov adc inc pop mov add aaa sub xor ljmp fcomps jmp mov and ja mov fbstp xor push xor push outsb add mov lods (bad) pop in into shlb pusha adc push and je rcll push (bad) or jne cs daa ret pushf icebp (bad) imul lret mov std and xor clc rcl pop dec mov dec stos xor and cmpb mov xor icebp jge movsl fistp pop xchg jmp daa jae aam push inc lcall fs scas into rcrb push xor pop test aaa sti cmpsl (bad) (bad) sbb mov ljmp div add mov js in cmp rcl cs loope push xor xchg and decl lret mov pop into and test sub mov adc sbb cmp mov push mov push jns gs mov pop push in push insb leave push pop leave out mov sub sarb arpl xor jge sbb mov xlat jae and pop lods pop inc ret mov lods sti (bad) fisttpl sub repnz mov sbb sub (bad) and fiaddl push mov fldt xlat adc pop add repz cmpsl cld lret sti jg pop mov jle mov pop xor mov jo loope dec mov lret sub loop xchg in (bad) xchg cmp sub add jle mov (bad) cmpsl pop roll sub ret int3 xor add sub lret sub or mov mov into lock gs mov mov mov sub mov mov xor dec xchg adc sti fsubs js jmp out das or fistp add jmp xor mov arpl sbb pop (bad) dec adc iret jmp imul pusha jnp rclb or pop push xor das jl inc insb ret (bad) roll fs cs cmp lret and adc ret mov cld fs jg (bad) mov add inc mov jg or xchg dec int xchg push xor ret xchg mov bound lret mov cmp std xchg aas fbstp add dec pushf cltd mov call fsubrp and in in jmp cmp scas jecxz inc adc mov movsb inc adc add mov pop movsw xchg loope imull out fs out cmp and or sbb (bad) xor in xchg cmp jle jns xchg out int inc sar frstor repnz (bad) sub pop std in movsb stc sbb adc sarl mov das mov fcmovnb (bad) adc pop or mov rcl xchg adc test mov jmp bnd cld add stos xchg lea adc (bad) loope and rclb sub out popa and aam je mov cmpsb xchg dec ret sub jecxz pop inc idivl (bad) rcr ret and notl repnz shr adc call xchg shr jl push xor sub and shrl add xor sti mov leave loop icebp dec imul dec or daa negl leave aam daa push jg xor gs movsb ret stc iret stos mov xor (bad) add xchg js rol xchg iret gs adc jne test fwait enter dec call cmp push mov loop fisubr out int cmp xchg jno imul aas and sbb jmp decl lret add xchg push pop add mov inc enter sub sub inc out repnz or repnz cmp add jo and pop inc insb push (bad) fimull and and into scas bound stos sub aaa add ret imull stos movsl jmp dec dec out fs jle mov arpl cmpsb repz inc imul daa aad out add insb xor enter pop xor sbbb fucom imull lahf xchg jg push sub out fcoms dec negb fcmovnu inc daa data16 roll jp mov jmp inc cs (bad) (bad) jno leave (bad) sti and cli lods fisubl push and (bad) scas adc fcomps icebp dec cmp daa mov daa test ja int pop outsl jmp dec pop mov dec out sub dec pop out xor push pop and pop loop xor pop pusha loope hlt mov mov nop lret or in stc dec xor andb pop popf je,pt (bad) stc and call fs lea inc loop jns in aaa pushf out cwtl or mov andl and call xchg fdivl dec and and jle mov push je inc mov ja adc jmp xor xor pop mov push cwtl ss mov out (bad) aaa addr16 bound sbb leave and sbb sub sub out mov jg xchg lods ret shl mov mov mov sti sub call mov shrl mov ljmp mov in pushf xchg adc mov and and out in xchg or aad (bad) in mov leave call mov dec jmp jecxz idivb (bad) mov (bad) (bad) testb push mov mov aam push into ljmp mov imul sti cmc loope sub sub mov and inc sbb add xlat int lods stos aam mov fnstcw pop and push jp out inc cmpsb adc inc pop daa scas ret pop inc inc mov pop mov loop xor pop dec inc ret or cld inc mov inc inc xor and stc out and je sub lods rcll (bad) sub scas bound mov shrb adc (bad) dec cmpsl inc pop mov rorl xor jne cmp mov or int3 adc scas and fucomip mov sub xchg out mov repz (bad) dec pop iret cmp mov cmp add stos cmpsl push pop ret xlat push inc inc or and xor stc mov loope aas sub mov aaa movsb cli lods cmpsl cmp es lcall subb les lock pop pop jb add icebp daa cwtl stos (bad) and jg push xor xchg repz mov lret adc sbb xor (bad) push int cmp leave sahf imul jne nop es call mov and sub and ljmp cmpsl push (bad) adc stos mov dec test mov test aaa jge in mov loop xor into xchg mov push jae pusha or cmp push mov mov and mov push (bad) or test mov sbb add jge sbb push jbe daa inc or and lret inc dec push push adc pop idivl sub xchg mov mov ds insl jne (bad) jmp add test add jns xchg or mov gs das jne mov icebp mov jmp lods bound cwtl repz test adc shrb mov or jg ljmp bound mov std xor jbe cmp lret mov outsb sub mov sub imul xor xchg dec and add stos sbb pop add cld pop test in enter adc or sub in xor xor pushf enter mov jmp sub mov pop and scas xor ret push push pop and jne mov shl cs mov xor test pop (bad) cmpsb fwait add iret or std push push jmp (bad) das push mov in jle (bad) jo loope scas jmp or pushl cmc fistl push adc xor lds cmp out jl,pn pop sbb xor loop jg daa push push scas out push adc xchg test push push or mov call movsb les lods sub adc les push out mov inc iret outsb aaa aaa cmc push lea arpl or and pop xchg lds sahf fadds adc add sub leave lret xchg pop or mov loop cmc inc movsb pop mov and or outsb pop xor mov clc fiadd and xchg leave sub or adcl mov xchg cli pop ret repnz dec mov sub mov cmpb cmpsl or fmull or and hlt stos imul mov stc push pop pop sbb fisubrl pusha xlat out sbb cmp (bad) out cwtl pop loope and xor sub iret mov (bad) inc pop sti repnz mov jne add jno imull aad mov push cmp idivl fnstenv sbb add xchg cmpsb daa into fwait jle mov xchg and xor ret mov mov ret xlat jnp pop add cmpsb negb jle cmp (bad) jg gs out inc bnd xchg or mov lock ficompl (bad) jmp int jle push sub and movaps mov sbb pavgb mov bound mov xchg jbe das cmp (bad) xchg ds cltd loop jl pop ljmp xchg adc enter adcl xchg dec aas xor sbb outsl sbb sub dec jbe es adc or out sbb (bad) fst hlt das repz sub and or sub (bad) jle pop jmp mov lcall xchg std mov call (bad) xor push daa popa aas and imul ss xor jo es sbb leave pop sub mov jne adc xor push pop ret add push in xchg jp sub sbb xlat lret lods xor mov (bad) icebp inc popf cmp mov ja or jg outsb jl dec (bad) mov xor push sti jo mov sbb ja cmp int in aas mov cmpsl ret lods shrl cmp mov cltd add cmp xor sub xchg fistpll (bad) and repnz xchg mov adc push fldenv mov jl sar cmp jl pop es fs scas int fisubrl lock push jbe push pusha imul or inc fdivl (bad) (bad) xor ficompl inc std pop cmp enter das shlb xchg push push (bad) push cmc ret lahf cld mov add adc dec pop mov add (bad) mov lock dec mov or (bad) stos sbb xor sub outsl lods pop repz mov out cld (bad) mov sbb fsubrl xor mov push push pusha pushl sub xchg loope idivl call (bad) xor test and add bound jbe push insb aas mov adc add and shr jg imul cmpsl movsl testl mov repz pop mov shrl js mov jb push daa std mov push scas push test lds fs push mov or sti leave std cmp or (bad) (bad) xlat out sub (bad) jmp sub in out mov cmpsb mov out daa iret mov movsb xchg fildll adc fisubrl mov dec fstpl ja lds xor stos mov iret ds add inc xorl lock jbe cltd (bad) loop adc xor mov pop mov mov mov sub add in fistp mov imul fyl2xp1 add fdivrs icebp add jnp imul xchg or mov sbb adc add repnz jns sar loop ror pop sub in or lea repnz mov popa mov das out cmp dec into int3 mov (bad) shr sub (bad) repz idiv inc out or cli mov sar cmp dec cmp mov xchg and cli xlat sti jecxz rorl fsubrs pop or imul leave mov pop pop out mov pop push pop adc sbb (bad) dec inc pusha jecxz inc icebp cwtl mov sub mov ret mov pop xrelease cmp fistpl (bad) xor cmp mov int3 add (bad) cmpsb pop jns or leave divl icebp jl jmp dec pop imul push mov pop add mov outsl pop and (bad) ss dec in lcall xor pop mov pop aad int3 cmp dec add subb mov mov sub and fisttpl sbb lds add (bad) xor sbb mov ret pop jno dec mov xchg das rclb cltd leave jg scas lods gs or and ret xchg outsl sub jnp in jle (bad) movsb mov out fidiv stos and cli scas mov stos mulb or jo add dec out or dec rep das and fild jmp stc mov push cmp mov pop pushf and or xchg loopne fadds jp sub inc loop or ja mov stos pop mov xor xor xchg xor xor imul ja add out int3 push push inc adc sti add lock or mov sub loop int3 xor and lock add out popa xchg jmp xor and cs stc loop imul add es sub jb xlat add in test xor mov xor stos sub adc jbe or repz jb sbb add jg sbb sub jg pop out aam cmpsb lds sarb dec mov stc push (bad) mulb dec xor ds adc dec fidivr (bad) and dec sub adc mov (bad) mov add mov and xchg pop and int3 fdivr lds mov sub ljmp dec pop xor fwait mov fucom xor out xchg adcb and test fist leave stos fs xor and test cmp cmp sbb andl jb mov pop std imul sub sub xor not or adc cli xor out jb leave push pushf fs into out sub cmp repnz xor adc lcall sbb jmp sti scas mov mov das inc xor (bad) movsb scas or leave cmp sub mov jne xchg in add divl xlat jge jmp fs pushf mov loope push shrb loop fildll push or push or insl xchg (bad) lret (bad) sub movsl fisttp xchg sub xchg xchg dec repnz int3 cs xor cmp popa cltd int xchg xchg call xor out cmp pushf popf push pop fwait xor movsb pop mov jmp imul mov lea add scas push xor push (bad) sub jns movsl negl cmc lods out mov and (bad) in jbe mov xor sub loope jmp test stc or outsb (bad) lods xchg push or mov xor inc pop cli xor push pop pusha mov jp pop jne arpl mov adc sub jno rcl xor cmp hlt pop inc (bad) int3 inc add inc fldt sbb mov lock push pop movsl or (bad) jmp daa iret (bad) xor and add sub sti test cld xchg push ss aaa insb mov std jge call stc out icebp mov scas xor (bad) cmp pop sbb jmp (bad) xchg cmc mov xor sub mov lods (bad) leave sub aam push inc dec or cmp mov add or repnz jle lret ret xorb repz add mov das pop sbb push add cmp dec inc and negl ret sub jle mov lods das push xchg jnp mov jl jmp and pop or sti jb ljmp push lret jmp into add push xchg cmpsl bound (bad) or cli add inc (bad) sub aad pop sbb mov out xchg (bad) jecxz jne fstps scas sub into scas arpl inc xor cmovns gs and mov (bad) adc lds xchg leave or add push jne je jo popf xchg movsl popf mov std inc pop or fnstcw mov aaa add (bad) scas loop jmp andl jne sti dec je les jecxz dec push iret xor shr lds adc lretw pop xor test inc dec std mov (bad) jg call mov das mov scas std lds xor loop cmp dec out adc lods test mov sub cmp sub cmp dec lret jmp into push jno mov loope out pop rorl in loopne add test cwtl (bad) mov jmp lahf clc inc subb ljmp add adc lea cs hlt inc fs or add fildll rcrb cmp out popf push push sub pop stc sub negl mov es add cli fsubs pop repnz xor stos adc loope test hlt out icebp mov add sahf (bad) data16 out mov sub xor mov xchg jns push jmp add mov sti xor out (bad) adc fdivl sub movsl test das xor loopne out popf jge enter jle dec icebp scas sub pop imul xchg push pop xchg adc (bad) cmc in or add ss fsubrl cmp jnp inc xchg stos cmpsb dec push loopne push lock shrb jl mov shrb imul and cmpsl add popf or pop sub sahf rclb jecxz out aam jmp mov and dec aad push cmp cmpsb xchg stos int3 inc (bad) mov cwtl sub fisub and ja mov lret sub jecxz and aad les mov stos (bad) pop bound ret aad sbb xor into add ffree pop movsl cli repnz idivl pop push or clc cwtl push pusha shlb mov adc or nop adc aad cmp sub sub or inc and jge xor pop sub jne stos lods jb sub mov shl xchg out call sub xchg dec ljmp push das or insl movsl ffreep iret daa adc loop jns inc mov sub xchg gs outsb out test mov call adc mov push push push xor pop or out cmp adc mov popa fcmovnbe mov repnz cld push sub sti mov mov mov push daa (bad) out jae mov test leave ja adc and mov adc mov mov jne rcrl lds test push cmp js es push mov add pop xchg jbe sub xchg and or sub and pop (bad) mov shrl mov repnz ret xor add cs aaa xor mov pop test sar gs mov stc cmp xor jbe xchg out pop and subb jmp sti inc (bad) push adc or lea xor xlat mov dec dec adc lock leave mov sub mov nop push das sbb icebp mov in push mov jp sub jmp je fistpl mov out mov je aad lret lea add jg aad pop dec jge inc push adc incl dec mov jb ljmp enter sbb repnz mov mov add xchg inc movsb mov sub or cmp sub cmp in sahf int inc outsl or fisttp cli pop test imull loope cltd test movsb test les push jmp stc jg scas adc fdivrp mov (bad) pop sbb movsl xor and cmp mov pushf lret inc xchg jmp and jbe pop es test mov add sbb lret mov jp xchg imul add xchg scas xor xor sub mov pop xor (bad) (bad) or jb das sub pop and daa pop push lods adc lahf push push push cmpsb sub push das jb dec adc (bad) jle jmp and sub pop adc and and and in cld in movsl int3 xchg pop xchg pop fisttp mov das ret mov xor cli mov sar rcrb sarb and and (bad) and movsl pop push push lret dec sarb sti scas lret xor fs mov mov pop mov and sahf repz test sub lret mov sub popf insb aaa add xor (bad) hlt jmp add jns dec bound dec add (bad) and add add mov rcll test ror daa sub and mov xchg stos clc mov sbb (bad) pushl xlat test add repz adc scas inc push add idivb add mov repz aas lret cld sbb repz lret lcall fildll pop mov sahf outsb (bad) sub pop ljmp imul test and aaa xor or sub imul cmp test xlat aas and call es out test mov into or stos fs clc or ja mov repz adc mov mov dec cs loope sbb mov xchg sub mov sub fdiv mov cltd pop jle test popf cmp (bad) cmp jle clc jo (bad) push je pop mov mov push sub loop xchg add divl cs push push cmpsb dec das xchg pusha dec lret mov and or sub imul pop and and push push or adc add or rol sub addr16 cltd rcrl mov fildll or fisttpl repz in sub lock aas loopne cmp cmp mov and cmp xchg dec scas sub out pop test add and mov popf jbe push mov xchg xchg sbb or push mov push pop jnp adc xlat xchg leave idivl popf mov xor xor adc mov jno in mov sbb cmpsb call in das xor jae push hlt fstl add loop stc sub and gs adc lahf insb sbb xor or out mov xchg xchg aam fcompp push xchg xor int imul in clc sti sub mov pop pop mov mov or into outsb dec call (bad) adc das fistl inc repnz in arpl pop data16 jmp out inc mov sub push inc sub and or cmp inc or divb test push out (bad) cmp mov add and and jg add sub movsb scas mov xchg lods mov and les add into sub mov das into mov rcll sub xchg push gs pop inc pop pop (bad) mov and (bad) lahf dec loope fdivs arpl mov pop out ljmp stos jns xchg xchg lret mov xor mov test jmp pop mov ds mov mov push push add test or sahf pop add out mov jbe jp bound mov (bad) ja or lock int3 leave or xlat or (bad) mov cmc pushf cmp xchg xor imul notb mov sub lret xchg sbb jne sahf dec ljmp insl inc jp sub ret mov imul mov mov xor (bad) cmp mov adc jne or jmp out pop hlt dec sbb sub xchg rcrl lret pop (bad) sub rcl xlat mov scas into inc pop lds pop and fdivs cs adc or xchg hlt jo test ljmp (bad) cmp sbb jecxz (bad) lret sub xor mov push loop mov or lret imul mov enter xchg lret push popf mov sbb jo sub movsb jmp in iret mov mov (bad) hlt aas adc jmp clc repz and inc or mov stos lods fcoml subb lea sub sub and lea and ret ja iret xchg loop (bad) mov shld push adc test movsl xchg and dec xor enter pop repz dec out mov cmp pop adc push mov and push push jl loope add jp das movsl mov dec lds daa cmp add xchg in push sub mov sub mov (bad) fmuls popf fsubp sarb je and mov jmp inc mov adc mov pop and mov xchg cmp aad test add pop push pop out jmp dec or sbb sub pop mov and inc (bad) jno xor sub pop mov fist mov push push jge push lds adc (bad) hlt fisubrl jnp outsl (bad) jbe adc orb mov fisttpl jp icebp loop (bad) mov adc out or pop out inc aaa pop int push jae (bad) push dec into loopne and out sub movsb jg imul and adc (bad) int lea out cmpsl mov outsb cmp test je in das aam inc xchg push add jmp pusha xchg enter jge xchg inc adc ja pop dec mov pushf cmc addr16 dec out sub into dec mov test daa lods jl pushf xor (bad) mov dec nop jo jns or xor stos cld xchg ficompl dec leave pop (bad) cmp je test nop ret test bound out repz mov jg jae rcrl adc and mov push pop (bad) sbb xchg enter pop xor negl mov cltd cmpsb xlat das divb negb xchg mov jle (bad) out dec adc adc enter lods mov mov mov (bad) fidivr ret std sbb rcll int cmp mulb loop pop sahf push loop sub sub add add jl vmaxss stc pop inc add int3 jl dec popf jecxz iret pop add decb iret xchg mov push xchg loop mov pop mov pop add fcmovu daa loopne adc cmpsl push adc push push dec jbe call and notl leave (bad) icebp (bad) fnsave xor call xor rcr out into jbe stc int pop jb out aad dec mov and and sub pop cmp lret addr16 (bad) flds xchg js icebp cmp sub icebp repz inc xlat cmc mov stc test dec imull mov lret jmp inc adc jnp sub popa pop cmp pop sbb push decb sbb and or jmp lock push (bad) lcall mov sub push fnstcw jp xlat fwait pop (bad) fisubrl lods cmp dec (bad) mov call add test xchg sarl fstl or lock sbb push mov das shll dec out mov cmp (bad) jmp leave add rorb pop fldenv rcll out rcrb or repnz and subl sub or cmp xchg add or jge xchg mov adc sar sahf mov add divl sbb mov in (bad) popf fwait xchg xor mov mov (bad) shl (bad) pop adc cli sub add outsl call inc sbb push movsb scas adc xor (bad) mov pop mov iret imul inc mov jnp add fstpt jb mov imul push imul out aad cld cmp (bad) pop idiv pop loop cmp aas add cwtl mov jns repnz out pop xor ret ss xor dec cmp (bad) adc inc roll mov add cmc fldcw les mov les xchg and push or and das cmpsl je out push adc mov test jns imul hlt enter push push lret inc out pop mov xchg sub lret pop adc lods cmc js mov or pop fstl jecxz fldcw inc neg fsubs rcrb push iret adc shlb cmp push daa iret jle ret (bad) mov mov imul dec mov sti stos notl rolb sar sub das int ljmp lds (bad) out mov jle push mov adc xchg (bad) mov std pop xchg test pop je int cs mov mov bound pop faddl push fisttp sub sub cmpsl cltd jp sub lods gs (bad) xor or inc mov jno sub lea lret xchg jnp mov sti stos ret aad mov jbe repz mov rolb addr16 repz mov jno (bad) mov inc std daa ja inc int3 es jnp jbe ret mov (bad) lods xchg jle inc rcr int pop xchg mov sub in js mov repz sub mov gs dec fidiv dec loope sub sub mov dec sbb (bad) push jns imul test jne jg lock cmp or push mov pop and fadd icebp pop add int3 cmp leave jle sub inc lds lcall fnsave (bad) and sub mov xor xor xlat fwait imul push push jmp xchg jge shrb xor pop stos xor ror out xchg jl imul mov lahf (bad) xor dec mov inc dec mov (bad) arpl pop stos add pop movsb stos mov aam nop repz je ljmp mov dec fidivrl adc std sbb mov aad mov outsl adc jl pop ret jno jmp icebp xchg xchg xor aad loopne loope cltd mov or push and clc sub jecxz adc pop (bad) negl shll gs xchg dec mov dec push iret (bad) sub push stos int push addr16 sub add mov movl (bad) jno popf and popa loopne xor sub sub xchg scas mov and dec (bad) sti adc fisubr pop and into mov dec leave dec fbld or lock pop add mov inc daa negl push scas ja dec icebp jg push jmp mov jne clc dec adc xor sub cmpsb cmp icebp sbb jb xor mov pop (bad) sti sub leave aam push fstpl xchg sub xor lcall imul mov jge adc sub outsb sub stos jb xchg mov rorb testb (bad) xor xor push repz repnz leave repnz push sub mov aam push je fs ds mov sub imul stc dec inc add xor inc (bad) push ds cmp cwtl stos mov pop pop repnz or cmp std adc xchg push ret jecxz jecxz and pop cmp pop popf pusha (bad) stc xchg push fdivp cmp add mov pop add mov xor sub mov xor movsb aad jb je (bad) cli xlat mov fisttpll fdivrs inc (bad) out mov inc imul shrl repnz (bad) insb add (bad) lods jne inc out push arpl je imul dec imul and iret sub out negl lret and mov dec jno fs scas mov leave mov out (bad) xchg out or sub lret dec (bad) icebp lds movsl faddp (bad) xlat cmpsl and into decl mov addr16 adc std sub pop adc orb mov jnp dec jle out scas mov and xor stos ret jg lahf ret lahf (bad) pop not (bad) pop mov sbb lcall push sbb (bad) mov aad jle jge push mov ret or xor std sub test sub stc popa mov mov loopne xlat mov cli cmc inc jb aam das adc dec clc lds push or and jmp mov xor push ret mov adc push mov pushf gs dec cmp adc push lret push jne inc movsl lods dec ret jmp or or adc clc mov (bad) dec mov frstpm(287 aaa jnp gs loope sub sar xchg cmp push fiadd out bound cmpsl pop mov leave mov mov das (bad) outsb sbb sbb add xchg cmp std ss cwtl jp mov daa jmp mov loope (bad) das mov fcoml test xor ret pop push iret dec hlt and mov idivl push push or mov and in jle mov add pusha jge cmp dec sub cmp scas stos leave add fs and push leave add imulb dec and into popf push xchg pop in bound and or pushf pushl vrsqrtps mov test adc popf cmp jge lods clc sub stos adc sub adc sub (bad) dec and insl mov sub sub fwait mov push dec mov shrl push lret dec iret loop (bad) jl pop or fcmovbe xor add add push or mov xor ja lds mov jecxz and adc (bad) out lcall mov cltd leave sub gs mov shr out movsb adc mov mov rcrb and adc out pop int3 jle mov and outsl mov jns js lahf jae adc mov daa (bad) in push sub ret lahf divb (bad) mov fistpl stc push xchg mov mov rcrl out sbb aaa cmpsl (bad) xor push lcall dec popf add (bad) xor xchg lods sub xchg daa push jge and jge mov enter cmp testb and repnz sar dec das loop loopne into cmpb push ret inc add jg cld push jl push aam sbb adc adc sbb jp and repnz shr inc mov dec jne iret fbld pop repnz dec int cs pop (bad) rclb stos xor mov push pop mov mov mov cld fwait in ds mov cmp ljmp enter and push xchg add jmp mov xchg cli lock popf pop inc popf push xchg std lahf or (bad) not aas pop ljmp jmp movsl or imul or into push add scas cmpsl push pop cmp pop sub jnp add xor scas xor mov adc mov inc mov cli mov andl mov xchg push test jmp pop andl and in int xor pop dec and (bad) mov leave in cld xchg cmp fcomps sub push dec mov push mov add mov dec mov cmc loopne les inc idivl inc shl mov (bad) add pop aas inc cwtl btr add mov sub or adc xchg push mov adc jmp sub pop push mov stos loop sub scas push movsl mov pop sti pushw cmp mov pop mov mov in add cli int3 add push or push push push pop sti inc mov in jmp jle pop subb dec shr neg cwtl dec pop jmp stos lret repz mov inc shr add adc cmp mov (bad) cltd or sub dec pop scas mov xor push cmpsb jns aas ret mov xchg (bad) xor pop push push cltd inc cmp addr16 xchg add push mov dec loop fdivrs inc sarb pop inc or jl negl shl mov xor rcrl out (bad) outsb dec mov and lahf insb loope lret outsl roll add rolb gs daa or in movsb add push mov jle adc mov and and insb push jb dec cmpb xchg or and dec pop jg dec lcall mov xor cmp call call and (bad) lock (bad) xchg notl shr lea xor adc aas stc stc nop mov xor flds icebp and or imul xchg xor lock mov push in into and int mov jl loopne jbe and inc mov in fadds ljmp pop aam imul scas mov dec int3 adc mov bound adc into pop stc test (bad) mov jno mov xchg (bad) or xor add cmpsl sub and pop lcall popa and dec rclb xor or jnp mov test mov dec sub sbb ficompl dec xchg loop xchg cld dec dec cmpsl cmp jbe inc icebp add inc dec pop sbb ret cmpsl pop inc (bad) adc sub lods or or pop add in dec mov imulb push je push jl dec (bad) or adc loopne pushf je sub mov cmp xor xchg push cmpsl mov jno arpl sar ret push sbb jbe push jne lea push es pop in jecxz idivb mov push ficom (bad) xor pop lret std mov mov add lds cli fdivrl mov rorl pop flds imul add movsl xchg outsl mov shrl and (bad) loope aad push ljmp mov loope sbb (bad) cmpsl (bad) push dec sub je scas repnz shrb out divl inc aad mov mov mov andb mov in pop daa ljmp imul or cli sub scas orb xor mov cmp lahf sbb aad inc loope mov jg xchg sbb (bad) xor xor clc xchg and test jbe pop push mov es and sub shlb sub mov pop popa pop xor cmp pop dec mov push fnstcw sub inc test ljmp cmp iret xchg xor mov mov fcoms xor out pop mov push pop insl fs adc sub lret leave adc and andl mov bound fdiv lds outsl nop jecxz out je add mov shlb lret icebp dec cmp sub outsb sub aad sti popf lock (bad) cmp push inc push das push mov mulb pop jo xor sub jmp fisttpll data16 (bad) mov xchg (bad) lock std or mov xlat ds in call and adc mov mov push and cmp test out mov xchg scas mov lds jns iret lock mov dec fistp data16 out shrl lret add insb sub push xor mov jecxz pop dec pop or and sub xchg mov cmp xor js mov fnstenv das stos (bad) adc fs mov mov cvtps2pi sub push inc (bad) jl xor test fldl daa mov jl das pop pop lret xchg loop add flds xchg mov push inc add movb xor ret push mov bound (bad) jne sbb cmp xchg cld jmp add and or jge xor xor je bound enter adc lcall jmp inc dec stos xor pop adc mov mov lods nop and pushf movsb push pop jbe xlat mov repz lret and in jmp mov jp dec mov sub (bad) not pushf mov mov or test pop fmull push and leave repnz mov jg rorl add in ficompl xchg in inc leave loop ja test icebp and xchg aas pop (bad) mov mov icebp mov pop ljmp movsl lds int3 or sub or push mov mov icebp shrb movsb mov out xchg dec popa pop lret or pushf push inc iret loopne test insb sub sub mov xchg inc mov cmpsl leave rcll mov xchg lds testl inc arpl mov into dec dec jecxz and ret out hlt daa sub fsts add or in adc fisubrl dec jns stos scas sub pop pushf xchg inc or leave aas (bad) icebp ffreep imul xchg arpl dec xlat stc loope fdivp (bad) icebp mov aas ds lods ret xchg push popa loop (bad) push cmp xchg ret mov mov xrelease scas mov sub iret dec leave loop inc sub add lock cld jae lahf fidivrl stc (bad) mov and cld mulb add or clc mov pop inc pusha in jno sbbl knotw mov mov sti popf push test mov mov pop add jmp jne iret imul pop lret fidivl (bad) xor fs xchg rorl std mov fidivr hlt scas push mov xchg pop mov pop adc sub lds lock fs std into cmc cli cmc ljmp mov cmp movsb and scas das or sub stc mov dec leave ret je loop pop sub lcall and jl mov add movsl loopne add or (bad) movsl pop test or pop aam dec out push lret pop (bad) repnz hlt mov pop (bad) stos fnsave and cmp aas call or sti pop inc (bad) sub lock lret (bad) and imul or outsb adc xor mov add std mov adc sub pop push loop insb cld xchg push mov cmp pop add fsts xor xchg sub jge or xor and sub push mov fld cmp sbb jle push fsubrs mov mov lret (bad) push xor jbe xor fsubl inc jnp pop push mov lret aam (bad) ljmp jns inc lret clc mov mov clc iret aad out or ja or jge cmp xchg call (bad) mov xor or sbb inc jae jne xchg push jne lods dec into fs mov xchg loop cmp daa iret icebp jmp push stos loop cmp dec nop push or push pop pop xchg lds mov cmpsb cmp dec scas xor cmp or ds xchg mull or mov dec add mov ds jae or ficomp out push mov push dec or adc push add push mov jge popf xor ljmp cli mov leave rcrb icebp pop out dec repz andl inc pop stc and shl push push push cmp add add adc mov mov imul out mov test mov movl lods jle sub nop xchg orl mov dec faddl pop dec push scas jb pop ret push sub or push pop mov lret mov jb sti fxch mov cmp fstpt xor or jne std aaa pop mov add js (bad) or or movsb inc cwtl movsb add add pushf repnz sub popf mov jle sub xlat clc lret push adc xor dec ret dec jo inc push add test mov mov movsb push cmp rolb dec mov mov jmp shr mov lcall cwtl xchg test and pop jmp insb cmp movsb test xor or jge xor and cli mov add sti inc sub ss cmp lods add inc mov sbb sub lods (bad) les fcmovnu fldt adc sub loop xchg mov bound push notl leave fisttpll dec sub jmp add mov (bad) dec fstl sub sbb ja (bad) lods lret cmpsb jns push daa sbb andl mov xchg stos mov jmp out xlat (bad) imul shrb scas lods push xchg cmpsb rclb (bad) pop mov test fstps cvtpd2pi stos sub adc or sti cltd (bad) push mov dec sub addr16 out dec fnstcw cmc mov or xor repz xor or scas rcl pop cmpsl jnp ret jbe sub inc pop (bad) outsl popa add scas xor lock push pop das sbb xchg jmp fsubr sub jl pop sar je add sbb xor mov sti cmc mov dec sub mov mov dec ficom (bad) dec cmp push insb mov inc push je add popa add push fwait dec icebp call mov cwtl push data16 jecxz pop mov mov cmpsl mov dec pop mov dec jmp into sub lret dec imull insb adc push xor mov push pop ret jne push daa ja nop mov mov jo push pushf out pop xor inc xor das pop xor cltd jb cmc out jns out fsts sub or mov outsb xchg pushf enter dec (bad) mov cmp dec test mov lret add mulb mov xchg hlt aad mov mov and aad xchg das loopne (bad) ja push stos mov ret les shrl (bad) jnp adc inc cmp push jmp dec in mov xchg (bad) aad aam dec js adcl adc push mov aaa rcll jns inc lret stos loop mov cli dec fisubr repnz xor (bad) adc outsl jecxz adc adc dec ret (bad) lock cmp sub sbb pop xor mov aad out pop stc fcomps dec popf push scas xchg or mov push xor dec and pop scas sub je out and sub jmp and and fadd push iret aaa or dec pop xor in subl outsb sub pop xchg cmp push imul mov (bad) push (bad) mov mov add push dec mov fldcw sub pop sahf xor mov aaa std xor lret (bad) fbstp imul iret outsb popf or daa lds and std test cli xlat call stos popf xor pop sub dec iret xchg adc fisubr jp sub pop inc aad jge lgs dec (bad) xor add test orb daa sub hlt mov jle fs mov scas or and push sub inc pushf inc jp pop jp lock adc imul cltd lock (bad) xchg dec push xor pop jecxz sar inc mov mov adcl lds mov lcall aad or fstpl iret (bad) in sbb ljmp fs adc cli insl inc fimull pushf in or out daa jmp pop dec fbstp ja mov jno cli cmp bound and repz xor ficompl adc fmuls icebp jns and mov mov dec lock lock cwtl rorl mov mov (bad) scas sub sarl pop repz xchg add stos loop fistpll jo jo lahf dec gs aad lds jle mov adc in or xor aad pop lret sub leave dec pop lret or mov add inc (bad) mov dec sub mov cmpsl push adc add mov or mov lret and jl popa out and pop mov pushf mov pop dec aaa loop mov mov cmp sbb fsubr in hlt cmpsl stos inc mov mov adc sub dec inc fnop jg (bad) sub cmc cmp das int3 aas adc popf (bad) xor jmp cmpsb mov sbb pop or (bad) cwtl push ljmp test xchg sarl loopne shrl xor and jmp and aad and mov pop mov xor test push clc push movsb in les add xor int3 cmp call in lret repnz icebp loop mov mov mov jmp int3 sub les mov mov add pop decl cmp shr dec jbe pushf lret add fwait fwait cmpsl adc add xchg imull adc xor cmpsl xor jp jne inc and and ror mov jp push inc popf aad fs push in inc xor mov (bad) xchg sbb xchg repnz push (bad) pop cmp mov test xor sbb out ret (bad) push scas out sub rcll fsubs xlat xchg sti ret adc fldenv leave inc jg test in xor jne ljmp (bad) int3 scas inc mov repz jbe dec or push xchg loope (bad) sub ds ret rorb fistp dec xor cli in jb lret add xchg test sub fninit cmpsl dec jecxz dec cli and (bad) pop imul xchg inc mov outsl pop mov (bad) out ficomp lock lret and pop out inc and dec push bound lods jae fdiv push (bad) adc scas (bad) jne scas xor lret pushf xor sbb cwtl test (bad) sub scas sub cwtl mov mov mov repnz push pop sahf outsl mov mov sub icebp mov push mov jns mov sti pop xor mov imul pop (bad) sti push cmp aad mov imul sarl mov push mov push mov or push stos aas fstpl aam add (bad) iret adc mov out or inc movsl out xchg adc push or xor out sti mov jns ficompl jne sbb inc ja cmp lret outsl lret jns mov or cltd lcall repz jmp adc pusha dec adc add cwtl ss mov push (bad) (bad) bnd pop ljmp or insb inc (bad) adc jne push jno sub (bad) jne add les jle (bad) cltd or ret cmc jno dec hlt stos gs idivb adc leave insb stos inc lret jle (bad) mov and push (bad) call ljmp nop cmp repz stc mov imul push add shll xchg lret pop or or int3 mov and sub sub pop inc aad lds adc fstl or and stos sub popa enter (bad) clc ret adc fstp in test cltd addr16 gs rorb lret or vcmppd pop iret or jo popf adc lods (bad) repnz cmp and jle and stc dec and mov cltd sub mov aad cli fidiv push scas lds xorl inc mov xchg push pop adc sbb sub xchg sbb pop mov xor jae cmpsl or outsb in mov sbb aas inc xor cmp xchg mov add std imul test jle dec mov js mov xchg or or insb ja and push pop scas xor stos mov xlat cwtl jb push or jbe sub das dec ja xchg inc mov sub out sub xor cmp mov mov push testl mov (bad) and (bad) (bad) mov xor (bad) in lds std push sbb adc out das (bad) aad fnsave or sahf mov push sub incl sub cmp mov daa das hlt or jle into outsb inc (bad) xor fsubs les out aam repz inc inc popf add outsl cmp (bad) mov xchg adc stos mov movsl mov gs sub pusha xchg mull dec mov out imul and dec fidiv xchg jecxz (bad) ja push adc jg (bad) dec sbb ret inc push int3 mov jmp jl or pushl mov push xor cwtl mov pop loope jae adc jmp fisttpl sub call add mov ljmp cld mov lret xor bound push jnp scas (bad) mov pop adc cmpsl lds add pop mov (bad) je scas loope outsl sub xor adc xlat ljmp sub add (bad) mov jnp push jmp mov hlt test mov and xchg repz lods sub adc fstps jae add out les cmp mov jmp mov call pop (bad) xchg push xchg sti lret sub aas jmp mov jge dec ljmp push cltd fs gs (bad) xor mov and jb mov xor mov add xor sbb fidivr ret loopw mov push push xchg test (bad) movsb sub ss dec popf rolb pop mov gs cwtl daa xlat dec shrb lret and jmp jne dec outsl gs jbe mov pop jmp lods gs leave inc cmp mov roll in imul testl or pop cmp cs ret sub sub mov (bad) jae jmp out dec dec adc xlat adc adc fimull cwtl rorw adc pop dec aam out lods xchg mov xchg add rol pushl xor subb sub (bad) popf inc aad ret mov (bad) mov or mov iret shlb adc jl pop cltd push cmc sub pop inc insb cmp rcll push push push in mov mov int3 push jo loope pushl sbb popl xchg add loop xchg out fidivl (bad) push xor (bad) lds arpl xlat xchg fistp or push lea stos lds scas or sub sub loope lds mov enter fldcw ja enter sub sahf xor xlat add out add jmp pop in clc jg jne cli frstor icebp icebp cmp stos test scas mov sub sbbl je xor lds negl imul clc jnp lahf out (bad) imulb cltd fadd js (bad) and movsb leave jmp pop and push jnp cltd das cmp push out sub sbb sbb cmpl or iret push jmp bound sbb loop push leave push pop push clc pop loop int3 push popf jno es imul pop cs xor xor call (bad) repz ljmp enter pop inc sub iret xchg push xchg sbb and cmp pop xor lds or xchg sahf fwait nop cmpsb push jmp inc pop add scas faddl push addr16 lahf push imul je scas mov jno and dec lods xchg jge in sbb (bad) cs ljmp sti push dec sub jg adc xor loope xchg lods (bad) mov insl mov dec add xor push aam pop inc (bad) (bad) fnstenv cmp inc lds les pop pop and or loop cmp cmp xor faddl out aam and dec (bad) xor mov adc push leave adc ret lret xor stc xchg push icebp dec repnz jne pushf inc or mov push and popf jge xlat jg inc lret dec cmpsb xchg (bad) stc lds mov cmpsl inc sbb pushf inc lret push mov cmp mov cmp add push pop scas in fmull inc daa (bad) jb cmp sub (bad) lods jge testl jnp outsl mov (bad) je repnz fistpl cs or aaa (bad) int3 adc mov sbb adc scas mov sub sub sti mov xor add cld repz push xor mov or add das xchg scas adc xchg xor cltd or and push or nop lret outsl rol sub jnp stc pop aaa int cmp loope add lahf jo xchg xchg pop in add ljmp scas lcall jmp (bad) add ss lods and fstpt popf jl mov mov loopne lods mov jo xlat cli out fmuls mov popa mov jae aam les mov push sbb cmpb cvttps2pi jns mov int mov jmp pop loop push aam push lcall je in xor dec fildll (bad) dec (bad) sub push rorl enter lret mov mov int jmp (bad) fadd mov sub sbb and or test (bad) or and add inc jbe sub mov adc push jmp ret mov jge in and pop mov rorl pop ljmp jecxz in (bad) je (bad) jmp cmpsl mov lock dec add jmp xchg jmp jecxz ss fdivs sub inc adc lds or push (bad) pop (bad) jnp xor iret cld jmp adc sub aad out out into inc daa sbb (bad) iret add (bad) lret cmp jne dec or mov cmp out das cmp dec ret sti mov push fldt fwait dec xor pushf ret cmpb sbb xor clc into mov or or pop push add jmp pop push loop leave ret adc or stos int dec test mov xor xor aad xchg adc test in dec out (bad) mov dec sahf pop scas and mov pop mov lds pop mov pop stos sub cmpsl inc (bad) mov pop add push jb mov push cmp sub lea jbe stos push mov jmp cmpsl movsb das sub loopne adc dec pop (bad) lret mov sti iret mov ret cmp cs or (bad) fdivp bound pushl sub ds popa and push inc jl sbb push pop fcomp mov sbb faddl mov mov pop xchg repnz inc rclb push (bad) mov push movsb jle xchg xchg mov sarb xchg shrb jae and jmp or or sbb xchg mov movsl sub xor push adc insb and sbb movsb xchg push ret mov les sub mov pusha dec (bad) xor scas mov jmp outsl negb das sbb push stos popf and xor push adc adc pop mov mov pushf and ja rcrl daa mov push popa jle outsl not jp ret add mov dec in cltd leave mov or mov dec push xchg stc insl xchg push stc lret movsl adc test das stos cmp jmp pop scas and daa sbb loope mov scas int3 daa cwtl divl sbb xor mov out jnp or sbb lret pop dec out fildll or xchg in inc add aaa mov add adc repnz sub sub movsl cli int imul into dec dec adc test mov (bad) mov mov sub mov dec mov sub cmpsl outsb mov leave add sub add leave mov add fsubrs adc fnstenv addl jb xchg insb dec dec loope lret pop cmp cmpsb arpl sbb xchg (bad) xor sti inc in pushf divl repnz jns mov clc cmc mov mov xchg lock (bad) out stc xchg inc pop cmp outsl call cmp dec mov cmpsl pop cld push (bad) sti cwtl aas xor jnp cmp sarb sar dec inc divl push imul stc (bad) jmp inc and ljmp add jb mov lret inc (bad) stos arpl mov movsb dec xchg sub lods call or fs stos cmp add shll push jg xchg mov ss aas (bad) imull fnstenv aad stos fadd adc jmp stos cs rorl dec sub cmp mov sar or sub scas cmpl (bad) rcll jbe gs cwtl repnz adc cs dec popa xchg movl dec ret cmc add rcll xchg scas (bad) rcll iret lock popf scas outsb fmuls stos in std jnp and sbb dec and shlb fnsetpm(287 lret mov cs inc scas out jle repnz jne mov ds daa ret inc stc das xor jbe cmp dec jmp rcl daa xor pop out ds pop mov sarl jp adc push fdivl adc cli int sub sbb in pop stos ret push pushf pop imul hlt mov icebp sub sub add xchg test fisttpll cltd dec mov imul sub in push sub dec out cs sahf cwtl dec rorl pand jno stos shr inc mov dec xchg (bad) dec fs pop mov ret fldl push push add out inc add jae mov xchg movsl dec and subl xchg jnp pop or (bad) sub sub lds cltd cmp mov (bad) sub iret sti in orb jl xchg mov popf loop out stos add push mov outsb lret xchg addr16 call xchg aas mov bound push push dec lock aad mov rorl dec ret icebp sbb dec mov or xor cmp cmp insb jb xlat or shll addb dec sub int3 das jmp in movsl ret dec inc push into cmpsl dec lret adc fstpl sub daa xor xlat and and shrl fs (bad) (bad) pusha adc adc and push and or dec sub fsubrl mov lret leave iret sub pusha and adc in fcomps adc mov mov or bound xchg cmp mov pop inc add icebp sub sbb mov mov dec aad adc ljmp outsb xchg stos das inc fsubrs ret pop dec aad xor add (bad) jne pop sub and in dec xor fdivl fwait or rorl insl mov test sub inc pop xor clc imul mul push out xor cltd (bad) repnz jne lahf cli and push push (bad) mov mov pop inc add stos icebp int3 sub idivl (bad) fisubrl aad sub add js or inc sub out and addr16 inc inc and and rclb or or xlat xor jae mov cmpsb ss sub bound jmp sti loop xor add or inc aam inc je and xor out sub or xor xor sub pop jecxz dec and (bad) das repnz push loopne or (bad) fstl out pop push lock and mov mov cmp out xchg push push add adc jno mov cmp cmp ficomp mov dec lods add pop xchg das push mov aad test test out daa sar sahf inc iret sbb jge cmp outsl mov or sub hlt dec call xor stc xor popf jmp lds inc pop cwtl ret jbe jbe sub jmp cmp xor out mov stos jg lahf xchg xor mov push mov cltd outsl leave sub cld mov xchg out out mov xchg push and adc push pusha repnz lret add (bad) jb (bad) dec (bad) sub xchg pop xlat mov aaa mov push movsl sbb in aam lock pop leave int3 jae push push xchg std inc xchg enter sti (bad) xchg sub jge stos add add repnz stc xor adc pushf push imul sbb addr16 mov sub jno notb push adc mov jg negl fadds dec pop jnp,pn or jbe int jp loop pop daa add xchg jmp mov jle pop mov and xor loope xor lods aas test movsb lds andb adc fs add incb inc dec add call mov loope idivb lods leave movsl xor fidiv and adc mov inc call (bad) jecxz loop inc add mov inc icebp mov stos jecxz shrb pop test popf xchg mov pop xor gs jmp sti (bad) movsb sub rclb out aam pop add mov and push pop jmp push popa in lods push movsb test outsl lods das cs mov xor pushf push add in scas mov inc xchg pop xor inc sub fisubrl and sbb rolb (bad) xchg cmp (bad) mov jno push fdivrs xchg jl pop icebp dec mov neg rcll fwait jecxz mov sub lods jno loop mov sub call mov stc loop test cmp mov cmp and mov pop fistpl cmp leave ret xlat xor clc loope imul pop cwtl (bad) or mov dec sti out lret les ret test out mov dec leave stos mov push pop rep rorb les and push ja das xor cmp cli xor loop rorl push mov je add mov jl and push mov negl (bad) insl shrl ret push mov inc mov xor (bad) imul push loope out sub cmpsl sbb repz ja mov fisubrl or lock js bound jecxz ficompl pushf fcompl ret std gs adc out mov dec push xchg push imul (bad) pop int3 add sub fdivp and bound (bad) jbe lds ret jo fnop push inc and xor xchg push popf clc jp subb rcr addl fidivl xchg cli xchg fnstcw xchg jmp add and pusha mov or sub adcb (bad) jmp jecxz sbb in jmp rclb mov mov adc pop xchg out sub add mov es push iret mov and cltd mov movsl out dec out cmpsb inc and or leave xlat test scas jo jnp xchg ljmp mov cmpsl dec mov cmp test not adc loop push cld and fist imul test (bad) and les fs adc mov shrl add and scas jecxz dec insb pop stos pop mov cld rol cmp sbb pop data16 add jmp lods out xor lock add enter (bad) or movzbl push adc sti xchg movsl stos mov pop mov rcll mov or xchg jecxz lds pop dec inc add inc icebp outsl test sarl lret jmp gs inc aaa mov jmp mov xor adc std loop adc pop sub cs in push outsl movsb mov repz divb adc das cbtw bound ljmp xor fnstcw pop push dec cli lds inc sub sub in add enter xlat add fs into adc sub sbb sbb fcomi xchg wbinvd (bad) mov aad fisub mov sbb sub push xchg das test shr rclb and xchg in arpl mov inc ljmp sub mov popf pop fwait xchg or xor (bad) dec nop xchg sti xlat das (bad) ficoml test jg aam xchg add xchg cs loopne (bad) daa mov jge (bad) scas aad and jbe loop fsubr into shlb mov push xchg clc rclb mov adc jp jecxz sub test ret mov (bad) movl pop xor lret (bad) fwait daa mov daa (bad) out inc int3 lret dec repz lret movsl or loop lret ja loop ficomp xor and and pop rclb cmp add mov jnp dec mov jns mov mov pusha leave (bad) push (bad) (bad) xor push jle in lea cmp (bad) mov daa fdiv (bad) ljmp pop out sub cmpsb sub outsb flds push cs and pop sub add fbstp stc push loope (bad) lahf jb dec fidiv adc test call mov xchg push pop lret mov mov or sbb xchg and cmc mov adc xor aad jmp das add push imul out mov cwtl inc fildll je daa iret add adc sub sbb arpl lret stos cmp and add adc jno dec jne push inc es cmpsl cld lea icebp jns sbb loop into out sbb push mov cmp add mov xchg mov pop stc pop lahf push into (bad) sub inc push adc mov pop and dec mov subb movhps ret pushl jbe sub cltd mov and xor loop inc xor sbb dec inc mov stc loope idivb adc icebp jge and das into pop nop push in pop lock call pusha or pushf mov push clc push adc xchg popf xchg or cmp rcll dec mov loopne cmp out jno inc mov cmp add mov adc lcall lahf jmp in lds test mov pop testl bnd fmuls adc notl xchg pusha call sub imul dec or fdivrs lcall sbb ficomp xor fnop push movsb les push inc lds fs in adc in pop fld push xor fldt pushf out inc shlb mov mov dec and jge ds dec stos push into and out loop xchg or xor fcoml xor pop or add insl lock loopne or jp pop into and xchg imull xchg scas push (bad) push or call mov mov rcrl push movzwl aaa lcall and or call out adc jmp cmpsl sbb xor cmpsb inc pop icebp cld das mov mov (bad) fdivrs pop push pusha das sub adc jne dec bound not push dec mov insb popf push xchg mov cmp and stos mov xchg enter jle push hlt or and jecxz (bad) scas pop (bad) das push test aad popf lods inc cmp (bad) (bad) mov (bad) and decb mov or mov call or lret das ljmp imul out les cli aaa clc stc jbe movsl sar imul outsb bound out mov int3 shr xor jb jmp push jns xchg mov jne outsb push and sub or pop loope inc leave outsb and mov stos mov cmp das cmp jecxz inc add jbe sbb stc push sbb add ja pop xor pop pop cmp (bad) xor aas call jl mov popf leave sub add mov test sbb and xchg sbb sarl dec dec icebp test add (bad) leave adc mov sub lcall add pop fmuls fisttpl imul jl shr dec stos mov jne dec mov in pop xchg in nop lret xchg push gs and nop pop in jo lret sbb cmp xor iret adc js les lret in and adc popa insl sub outsl div and add xor inc mov (bad) loop (bad) test push jnp pop add mov out addl add stos cmp or mov jge sbb adc mov mov bound loopne or cmp jno mov sub inc dec decl inc daa xchg pop and inc and (bad) (bad) pop mov int3 jae out xchg sbb bnd les push push mov and insl add jo jl and lret out mov adc xlat pop jmp and dec mov movsb and dec les jne decl in int3 ja dec xor in and lcall dec xchg lcall push or into inc adc neg jp leave jb mov push jmp aas sub sar cmp and jmp push call mov add mov lock jecxz and lret xchg add add sub sahf mov cmp test xorl xchg ret push js into mov sub push out cwtl mov inc sub inc je imul push aaa xor ficomp jbe xor rol sti mov sub dec movsb xchg shrl fisttpll jg pop jno cmpsb repnz gs cmp out stc mov and xor mov stc sub fild cmpsb fiaddl idivb in xchg dec (bad) mov jb cmp sub lahf sti loopne pop lcall cmpsb mov stc add or scas out sub pop (bad) jo (bad) mov xchg pop jmp or xlat push rcrl pop stc cwtl or mov xchg out cmpsl loopne mov pusha xchg mov jle repz addr16 leave ret lods (bad) xor fist mov mov jns sub jmp push inc add sbb or cltd xchg xor sub mov ja add push xor cld loop incb sub mov mov mov fmuls sub std mov lret clc jmp and fldenv enter dec mov pop add mov xor and movzwl mov gs xchg push pop loop repnz inc cmpsl sub push push fnstcw or sbb xchg sbb jmp orl fist rcr pop (bad) cli sub mov out xchg int3 push iret and je out fs scas mov xchg lods adc test out cmpsl ljmp call sbb addl cmp sbb loope imul xlat cmpsl outsb lock jmp cli cltd fidivrl and jmp pop in and mov mov sbb pushf fistp sahf rcrl and pop arpl into (bad) mov or push and add icebp dec jle leave stos sub lret movsl aaa and ljmp daa lret pop dec sbb lods fwait sbb xchg leave cli popa push ret scas ds xchg and jmp jmp lcall mov or fadd pop pop cmp or push push inc sub movzbl sti je out xor dec pushf mov sbb add sbb jns mov inc ret sub push cmpsb ds lds (bad) xchg xor movsl repz nop inc xchg adc mov dec xchg cmpb and xchg cltd mov test out in dec psubd cwtl das mov push rcrb sbb sub sti push jns inc out fmuls daa add mov dec ret std pop repnz test mov pop mov movsl out xor jno or add or jg sub cmp repnz jmp (bad) in mov pop ja mov les xor stos movl ret lret (bad) mov addr16 mov out loop xchg mov test fimul cwtl jp mov imul sub sarb pop arpl out sub xchg cmpsb in xor addr16 scas mov pop xor sub add mov out mov punpckhwd sahf scas adc jmp mov dec imul jns fisubrl ljmp andl mov fmull mov add sbb dec cmpsb xchg xchg repnz pop sbb dec push out mov cmp or jg cs mov nop imulb pop js dec loop test or mov (bad) or iret jle push divb mov inc test in mov lcall xor mov cs xor aam jmp xor dec xchg fsubrl lret push dec mov jg cwtl daa mov sti sbb negl lahf or rclb dec inc push sbb mov pop jmp faddl rorl shrb sub sub mov cmc (bad) mov jg jge scas xchg lods xchg jg jge cmp popa es repz leave fnsave xchg push mull mov fscale ss sub or test fwait pop xor push or mov rolb lea mov (bad) pop add pop inc dec and add sub loop add xlat pusha mov ja ds push bsr xorl pop push xor mov or push cmc inc pushf (bad) clc test mov lcall sbb pop or int3 jp daa mov push or jle add add and jg and not ret adc repz repz adc pop or cli inc mov xor jns,pt pusha fisubl pop sarb sbb out inc in add sub cld xor push push gs cs pop not (bad) sbb dec jge add arpl sbb fdivrs or xor rcrb push sbb adc jge mov inc shll je mov clc add sub push sbb (bad) cmpsb test xchg or je push out stos cmp mov roll ds mov jle sar and ss cmp orl pop xor xchg (bad) jmp mov jg shld lods mov cmpsb shrl or aad call mov sbb (bad) into add scas int jle arpl mov mov xchg cmp xchg fisubrl out js movsb out popf movsl add mov add iret or pop scas (bad) ds aad pop pop fyl2xp1 push push testb push dec fnsave add cld push mov jmp pop mov mov ret push jb mov pop xor cli fs shrb jmp divb and imul mov negl stc stos outsl fucomp dec mov mov dec pop xor xor leave sub dec mov out data16 leave add add test dec cmpsb mov jecxz lret xor mov das cmp fistp cmp xlat pop xor stos in jbe cwtl gs pop mov rorl sub aad mov fs jmp and call push xor popf int3 sbb lret push pop cmpsl call xchg pop dec mov stos pop lea sub sarl clc loop leave into cwtl xchg sub push ret fdivrp (bad) mov idiv shrb add iret and mov scas lods hlt test fucomi cwtl push fsubs movsl stc mov sbb sub jmp movsb pop mov movsb sub dec nop mov adc stos js lret xchg mov inc dec mov adc lret icebp mov or pop ret add add add inc pop xor das pusha add jl das push inc add out call dec lods pop in fstpl scas es loope adc call or mov pop iret call cmc jecxz aaa cs es insb add mov out mov ja mov xchg vmread ret push jb ficompl push sti xchg push or and mov jp fisttp mov bound leave cs rol mov pop icebp lret ja mov push xchg cmp push pop mov loope add xor leave bnd mov insb in pop push out jnp fistpl sub sarb out ficompl iret sub jecxz adc (bad) dec repz into scas lret cli sub sub push dec lcall repz push outsl sub add and (bad) inc xchg push dec mov push mov (bad) mov and ret mov stc dec xchg mov sbb std jg clc inc enter jmp in dec jmp xor rcr adc pop xchg (bad) xor js movsl test sti sub pusha mov dec xor fisubrl sub in push cmp rolb push in mov das push xchg (bad) jp arpl xchg sarl xor or sub roll andb pop xor cs ret or pop jns fs sbb pop stc cmp pop mov sbb popf imul or cmp ja mov and push rclb fld cmp pop xor or das mov imull push jns xchg and outsl fsubrs mov loope lock in mov rcll ret pop pop ds sub inc jmp stos lea cmp cli loop (bad) xor mov jl dec mov icebp cmp ds xor inc mov xorb in sub dec int3 push or icebp xchg add mov stos or idiv gs sub fldcw popa cld or mov imul cld jl stos mov jbe xor fs out fstpl aad mov out rorl stos xchg (bad) mov jbe sub sub mov leave adcb popf idivl xchg jecxz adc sbb inc jp sub clc jp (bad) and push pop lret mov iret pushf push pop push lock or je sub sbb jmp clc and jo sub sub ret ljmp add cli imul scas test movsb sti pop insb mov dec mov test push (bad) jmp cmp icebp mov sti outsl cltd push imul pop repz fcmovne add add fnstenv out and ret dec pop mov pop adc stos out push leave and lcall cmp mov ret insb and push mov ds and aad fs dec pop movsb mov (bad) xor rclb push lcall divb (bad) fdivr mov inc dec sbb daa mov test sub jb pop lret bnd cmpsb stc jl mov scas pop dec subb xchg jg jno push or repz xor ret out icebp jge xlat addr16 and mov mov leave clc inc xchg std sbb flds mov or xor push daa jo inc popf adc mov int test inc out das (bad) cmc icebp jecxz stc rolb hlt jmp and jnp in loope sub negb xchg mov loop into adc dec sti lret leave adc and or repnz xor repz push popf sbb adc ljmp lret mov pop cmp call popf aad sbb xchg fisttp add fstp jle cld fsub cmp sbb xor iret mov pop inc pop push adc fwait push and lods das shr inc aaa pop fwait cmc adc mov mov lods mov sub ret stc or insb popf aam jns push push pop pop fmuls adc mov test sbb xchg lods pushl cmp and pop (bad) or cmpsl pop pop imul lds loope cmc dec in mov push jns imul imul cli sub jno,pn sub and cmp cmp adc add pop and es daa xor jg roll mov mov into and mov (bad) ja adc inc xchg ljmp test push mov pop je xchg sti ret stc test xchg stos xor (bad) xor mov mov ds cmpsl dec mov and and sub mov adcb inc or stc sub dec pop ss (bad) add jecxz test std icebp mov inc xchg cmp xlat cmc shrl and pop (bad) (bad) mov sub push (bad) mov pop push push adc icebp stos push xchg lods cmp sbb leave aas sub jns popf popf jnp or push pop mov or or bound icebp test cli adc ret imulb cmpsl pop jb jmp subl loop jnp aad cmp rcrl dec jge xor mov jmp mov into mov mov fimul sub clc scas push stc (bad) dec and (bad) fidivr mov adc out pop icebp and dec xchg jecxz adc shrl cwtl in icebp xchg jns pop cmp fcmovu dec dec mov pop push or and cli jmp cli push mov sti push adc mov jg push lds mov mov dec pop pop popf jmp or es add ljmp loop stc test hlt and sbb cli sub lcall mov out or mov adc icebp xchg add sub cmp loop (bad) je add test lret sbb sub xchg aaa push out std xchg push and or xor inc xor (bad) dec (bad) stos popa addr16 sub or cli mov fistp dec fnsave cmp adc push jnp dec outsl cmpsb jbe ljmp gs fs in jge scas mov in pop sbbl jl (bad) adc xchg mov xchg jno cmpsl add repz mov mov (bad) ja dec (bad) dec pop loop cmp (bad) cltd imul cmp jl lock mov or push jne and push dec ret cmp scas imul mov mov or out inc xor dec jl lock add cmpsb add pop push xchg adc sub stos pop push pop aam cmpsl lret jg sub daa outsb bound lcall xchg dec in mov js adc pop cltd fcoml (bad) and (bad) outsl add adc sbb daa mov xchg sub push cmp xchg notl pop mov and cmpsl cmp mov mov call or or pop adc mov das negl push in xchg pop cltd aaa (bad) cmpsl shll test into mov fldt (bad) (bad) and mov out ja add dec sti xor (bad) dec (bad) add icebp mov addb repz add xlat fwait pusha iret fdivrl sub or mov idivl inc sub dec cwtl cli add nop lods in xchg aad mov shrl mov icebp mov cli or mov in lods sbb das in pop lock out mov fsubrs xchg jno pop mov pop adc mov xchg pop add xor int3 lods or mov ss lods (bad) push movb xchg sti pop add cwtl add sahf sub push and imulb dec icebp push loop push dec push sti push (bad) sub mov jmp cmp push test bnd mov mov mov push in das dec test mov add ja mov ja cmpsl xchg sbb ret pop jp scas sub cmp or xchg out ds cmp (bad) cmp test into and test in inc pop add add out bound inc sub dec enter (bad) mov add call repz in fwait or xchg jb addr16 stos das stos cmp mov dec pusha lods pop insl push sub jo test cld lahf jnp or pop out lea add scas mov fcoml or pop ret sub push and stc loop dec popf cmp rorb loop loope fidivrl inc dec hlt pop lret icebp adc pop add mov and jno std mov test data16 xor hlt mov pop loope ss xor stos pop or mull ljmp (bad) and xchg test (bad) xlat push push mov add (bad) push movsb or (bad) rol mov popf adc mov (bad) jmp dec add jb test mov call cmpsb pop and mov adc jmp xor mov add push (bad) into add test mov inc cld icebp xchg pop push push popf fstpl pop jecxz pop movsb push int3 pop daa repnz insb (bad) jge mov leave ja mov cs cmp push or xchg push pusha stc add jno or outsl test push js movsl test out das lret bound leave shr lods lock daa xchg into xchg fs daa (bad) or mov aam sub mov in es adc lds and push stos cmpsl in xchg inc enter fisubr and cmp in aam loop add pxor xor test stc push jmp imul adc pushl cld lcall insl pop mov mov je pop mov and aas dec push pop pop das into ja sub lea pop mov (bad) aas and add icebp jb xor pop enter test mov or pop sub repnz rcrl and (bad) negl cmpsb push lods pop pushf mov xor out cld loopne pop ljmp pop sub mov roll movsl decb cmp movsb rclb divl sub sar outsl loop fist jb mov adc jmp jmp pop fs and sub xchg adc push movsl ljmp popa repz jmp mov (bad) xor jne das sbb mov pop xchg push dec in xor je lcall cmpsl adc or gs sbb jmp adc xchg into mov adc pop cs daa mov jg adc jmp inc xchg push sti jmp add pop mov cld push imul (bad) pop sub sti leave lock adc ljmp jle jno or jg ror sub and xlat xor cld xchg dec xor incl xor (bad) cli sub (bad) inc sub push adc je inc cmp idiv cmp out mov dec add lods imulb insb imul adc scas (bad) mov jecxz mov leave loopne jmp out fisttp mov arpl jb cwtl rorb fisub loope pop les repz adc mov and mov sub jmp xchg movsb scas push cs repz jbe hlt (bad) dec cltd mov xor jmp pop sub mov (bad) out xchg pop xchg ja shl xor sar pop out push bound imul jp pop repz (bad) ffree lods daa test out lret pop sub cmc test xor mov push lcall add push rcrb jb lods sub iret sarl fwait pop mov daa notb outsb loop xchg sti lret arpl pop jp xchg in xlat test cltd test movsl cli mov xlat mov inc push ret adc clc repnz test xor jmp mulb ss mov xor ljmp push push loope pushf sub cmp pop outsb sbb fdivs push repz das repz xor int3 xor lods les and inc inc jnp push xor outsb cld stos les fbstp sbb or test idivl and sub xor mov repz jle sti xor and (bad) lret int cli jb jp sbb clc enter popf sub pop jne flds push ljmp push add and or lret test into insl dec lret xor cli dec dec lret mov stc call ret cmp lock jecxz pop add push stc inc cmp dec cmp sbb sub stos mov (bad) mov push pop mov xchg adc lret (bad) lcall (bad) in repz pop push jae pop (bad) cli lret lds dec mov daa shrl add dec lret pop repnz add add fsqrt pushf pop inc jns das mov pop gs cwtl (bad) xor iret dec jmp (bad) leave mov xchg mov (bad) pop inc and mov pop xor pop jb xchg cli lea and pop imul mov xchg ret fnsave and outsl xchg sti cwtl add (bad) cmpsl lret negb (bad) das sub andb and mov jne mov (bad) lods sub ficom cltd pop inc lds sbb pop aaa dec jmp imul pop fs stos loop pop (bad) dec pop test leave fisubr cmc dec mov sub add mulb (bad) mov dec xor sub xor mov jmp mov lds mov cmp out das sbb and adc (bad) (bad) push lock mov xor cmp orl jne aad mov xor inc jno dec aam fnstenv pop lock xchg scas xor mov and roll mov stos mov push ret inc xor inc dec test sub adc xor fstl push fdivl out je sub xor or test repz (bad) dec gs cmp mov pop pop or and (bad) lret mov (bad) add inc mov jne rol or repnz cld push push jns and daa or loop in dec scas sub add sub pop mov or (bad) popa and pop xor movsb pop jecxz movntps mov pushf pop pop jmp fwait stc cmpsl (bad) loop fistl mov les repz ret iret lahf shll mov add and popa jnp mov sub pop mov push dec enter add fbstp mov clc push xlat mov (bad) subb mov dec jl xor mov jle mov rcll push out inc jmp in sub (bad) mulb lea call cmp and je jbe sub jg lds add mov (bad) test pushl into lods dec and lods pop les sbb cwtl data16 inc jge test fist xor scas cmp push daa inc gs repnz mov je push fbstp mov (bad) add (bad) imul into cld inc das jg mov dec sub dec ja lods lret mov mov negb mov mov jae movsl or fstps mov and lcall mov outsl lret mov mov jp add out cmp mov cld cmpsb test test mov xor out and and movb out aad sti ja sub arpl sub orl out jecxz sub mov add faddp fsubr and loopne or sub jns cmpsl mov ja cmp sub loop pop lret and icebp mov adc (bad) hlt scas ja and stos adc sub bound adc lret or push lret sub ror sub cmc xor mov je push repz sub cmp lock ret mov adc xchg int3 mov imul sbb fidivrl stc mov cs mov cltd push std push or push add cmpl (bad) and sub les leave jmp sub stc xchg pushf cmp (bad) mov sub push fwait inc mov pop insb sub scas rcl dec cmp and int3 xchg or cltd out das fmuls sub call xor push fldt mov push gs imul stc mov pop and sbb popa mov outsb arpl call push xchg add jg sti pushf mov mov jmp ja int3 scas mov (bad) mov ficompl mov sub cwtl and scas jns or stc fwait (bad) jmp out fcompl pop aad in test mov fidivr outsb xchg test mov push out cmpsl cmp mov xor rorl xchg jp lahf hlt xchg fisubrl dec stc cmpsl mov and xlat lock (bad) cmp rcll and jmp cmpsb in pusha pop popf mov popf rcll sub leave inc sub jno imul inc shll pop ljmp add jne sub inc in hlt push out dec inc mov push outsb push add adc bound ficom lods mov arpl inc aaa cmp sub leave or sub (bad) mov inc jmp movsb call cmp push inc outsl xchg mov pop or (bad) xor dec and pop adc sbb or dec outsb outsl mov fwait das (bad) sub mov js xchg mov call mov mov mov sub loope lret sbb push pushf sti fs push lock mov push sub mov push jp int and lret jmp and mov mov int3 jno insb and adc in inc loop sbb adc leave sub rclb mov dec mov dec cmp incb pop cmp pop and add mov pop push xchg aam xchg xchg rorb out inc xor inc xor mov fistp (bad) out adc xor jo add stos out psubusw dec push adc or mov inc pop jne adc out fnop loopne,pn mov add xor cs sub adc rcll cmp lods or and xchg incl dec push push and inc adc adc cli int3 je es adc pop rorb mov fs sahf xchg rcrl in xor cmp xor leave icebp mov and es popf aad lcall add sarb mov push mov jmp out mov xor negl sbb test mov pop pop mov jl jmp add das inc outsb mov std scas jno sub das ljmp repnz mov dec stos cwtl lds jle xchg jne sub add mov adc data16 sub xchg xlat add push ljmp adc xlat pop xlat add inc (bad) sti adc iret and mov inc imul and gs add cmpb ret cmp dec (bad) lret mov and shrb inc or sbb jne div mov and aad mov rcrb clc add ljmp sahf sub in (bad) or mov mov call dec test pop xchg mov addr16 into push xchg cld xchg and xchg dec push xchg shll (bad) cs cmp lcall and xor fnstcw xchg int3 mov mov xor test fs inc and jmp mov jecxz fstl clc dec pop scas sub js pop sub jp sbb leave add push pop lret mov stos dec movb imul (bad) scas pop pop stc jns ljmp (bad) decb outsb jno cli repz fsubl cli and xchg nop cmp mov inc mull test (bad) int3 cmp cltd xor mov or push push (bad) popf dec pshufw mov cmp out sbb xchg orb and cli cltd test les jae add dec ljmp dec mov fidivrl push sti data16 (bad) xor pop movsb popa shrb add cmp pop lahf xchg in lahf mov mov add (bad) dec outsl mov sbb pop push xchg jmp add mov insl mov aam pop repz push add cmp jecxz mov push xor inc or pop out scas xor xlat rcl jne add cmp cmp addr16 or lds lret mov (bad) repz sub lea adc ret sub aam push aas mov in fs dec lgs out add pushf mov dec pop mov add ret cltd movsb lds test add subl mov pop pop scas sub aaa cmpsl iret dec mov imul xchg inc xchg daa std test push jmp (bad) aas dec in sbb dec inc add push lcall or lods into lahf sub clc push sub cld out imul test xchg fwait push pop mov ret insb mov nop divl xchg adc pop insb out mov xor loopne and scas sub pop into xchg nop lock lods add ret mov in jecxz dec add and mov lret out push les adc dec or insb int or jg lds dec jnp andl pop rclb icebp stos leave or out mov nop in dec stc mov push out aas into mov insb mov fnstcw in sub and daa icebp pop push or test pop cli cmpsb ja in push xchg mov lret addr16 cmpsl push nop dec and je mov push iret pusha or pop and add (bad) and cmpsl outsb xor lcall das ret jno inc or ffree and add push mov push fisttp pushf inc fs (bad) add mov mov jg iret jmp mov fildl repz test jnp or aaa or stos lret leave xor loopne mov fldcw xor sub inc fisubl mov cli mov dec xor out repnz inc sub fcoml inc aas jp icebp and ja pop push mov fmul data16 pop dec loope lret adc repz imul push push and ret mov test adc out cmp or pop sub mov out sbb xchg aad das lds mov cld push xlat and out cltd fnstenv out (bad) scas ja push int imul jnp stos mov (bad) popf ja enter ss or or jmp hlt insl jp dec sahf popa pop jne mov jno pop push outsl test mov mov dec lods mov pop std cltd and ja and xchg jmp cltd enter mov push sub sub dec cli inc and lock adc ljmp lret fwait add jno add mov push adc testb repnz (bad) pop rclb inc inc jmp jnp pop je lret ret xor repnz pop mov jl aas mov cli lea mov sub iret inc jnp ljmp sub lods jecxz ret or xor xchg push push lret mov mov mov xchg lods bound mov ja cmpsl jbe leave (bad) and into insb inc inc adc xchg int3 mov sub lods dec adc mov mov xor mov (bad) mov (bad) notb stc jecxz pop dec adc dec test test test fadds or mov add mov jle push push lods out (bad) outsb push (bad) fcomp out lds jg lret stos fbld jecxz xchg ret divl jle add in jno mov mov ficom inc xchg mov cltd test (bad) sti mov add xchg mov jmp ja addr16 sbbb xor pop lods xor sub xor out pop mov or das pusha out hlt xchg dec bound test icebp mov mov (bad) lret sbb mov or data16 sti popf or stc jl jge jmp xor jge cmp popf repnz and call adc ss sbb cmp dec ret jp aas mov add mov xchg fscale lods adc push ss mov faddl les les test jge gs jp xchg pop mov cmp ds repz jle sbb xchg mov add shll ljmp sti pop adc and jle mov add enter adc in sbb xchg repnz test add push out push (bad) popf cmp and or and mulb aas mov mov and push sub lods mov hlt (bad) test pop test in xchg hlt adc xorb jl push loop xlat gs mov and mov mov test in and add sub out int das ljmp pop or mov (bad) pop push shll pop les es jmp data16 lret inc mov lock pop xchg pop adc (bad) xchg outsb push cmp in imul pop popf imul scas mov xor int movsb push incb aad test in jbe (bad) jo xchg fstl lods push leave xchg jmp sub ljmp mov xor pop adc stc xchg (bad) les stc xchg jbe pop int3 pop and fiadd cmp adc sub fnop xchg in jbe pop imul sub lds push push leave repnz cmpsb or negl jne lods xchg xchg xor out mov out int3 sub int3 xlat inc jl or xor push mulb inc push xor div in jecxz mov (bad) out repz lods sub sub pop sbb adc pop (bad) out push outsb mov jle (bad) or mov or jb mov mov dec aas imul or insb sahf xchg out xchg mov inc mov movsb adc xlat mov test dec mov dec cltd and sub mov dec pop mov push mov and or lock lret stos sub stos mov (bad) mov xor ret jg jbe fldl loope xchg cli and cmpsl jnp adc int3 scas out xchg fstpl (bad) mov add jae add rcrb fxch sub xor sahf pushl outsl or push test inc (bad) push fiaddl dec clc cli dec out jns and cmp sub mov inc xchg adc sub fmuls adc mov push ja addr16 scas and lcall mov lret frstor sub sub push mov clc lret xchg pop or sbb xor mov lret add fsubrs ret inc add fidivr xchg (bad) fnstenv sub outsb and pop mov adc inc faddp and xor shrl xchg rolb adc pop dec out sub cs jge xor and into xrelease or or mov sarb lds add (bad) and mov xchg add push or stos jecxz sbb lock ss pop cmpsb lcall sahf (bad) xchg loope lret lods mov and mov dec (bad) gs adc sub notl add dec cmp add ss int3 aam pop push mov and mov mov jbe xchg (bad) in stos sub cwtl out pushf mov out inc into lock cs test pop jp add shr dec cmp je dec in bound sti cwtl lahf pop or jbe idivb dec das dec dec lret out and and repz call (bad) xor lods adc clc xor inc loop mov ret mov lcall dec adc push mov xlat sbb cltd push mov ficoml notb cli fistpl lret pop lret das repnz sbb mov insl iret mov (bad) clc jmp js lock (bad) xor mov sbb dec xorb dec dec dec test (bad) mov cld gs fist dec data16 fmul sahf adc leave dec das (bad) push jecxz pop lds dec lock pop dec cmpsb mov mov mov in (bad) mov inc cmp (bad) fldenv sub scas mov pop sti sub jge (bad) mov repz sbb pop ja and ret sti mov hlt stc scas xor enter xchg idivl ja das sub sub or lcall jne cli popa outsl add imul jg ret imul loop sub scas mov das cmp decb lds sub jno scas fcompl cmp clc and mov test lret and popa pushf add pop (bad) loop inc mov mov dec test mov jecxz push sub fdivrl and enter inc inc sub mov lock test fs add push sub push inc mov div repz es imulb lahf into cld xchg xchg clc cli sub mov xchg movsb sti outsl or lret pop dec sbb scas daa push out cmpsl loope pop insb xchg out mov jmp test loop mov push mov cmpsb sbbl xor add outsl divl adc xchg mov dec cwtl pop lds mov push mov push pop (bad) add mov pop mov movsb lahf dec sub add stc dec popf or sbb lahf jns xchg fnstsw sub xor sub (bad) cmp or testb out gs out ret dec and pushf inc sub push push sub sub lods cmp mov sbb jmp aaa inc xor loop jns dec sbb call repnz pop mov dec sub in xchg out mov ljmp dec psubd cmc fdivrs sbb mov scas movsl mov loop adc mov xchg dec repnz ljmp adc cmp add clc leave xchg fsubl fs decl inc les mov call and or inc pop adc push (bad) (bad) rcr mov mov jns push fsubrs lods out (bad) gs adc xlat sub push xchg out mov sarb idivb les add lret dec push pop (bad) dec scas cmp add fbstp push adc and xchg cmpsl (bad) into ss aas dec lcall lahf jno scas je cmp jno xor cmp jbe adc inc loop shrl lock fs adc mov xor sub mov dec xor adc out in and iret mov and jno imul les stos sub das adc xlat adc dec xlat push mov stos mov daa aad movsb or lret sbb dec icebp jge jp inc mov ds cmpsl push xlat dec subb in mov mull loop lcall (bad) pop insl js test mov push (bad) in xchg loope fstpt and (bad) test cmc sti jns jae cmpsb mov into dec jnp scas jne mov adc lret clc test pop icebp push movsl inc shlb rcll ljmp outsl das outsb loopne or aaa add mulb push ret xchg mov ljmp xchg ret sbb in mov cmp repz push out pusha sub mov lahf cmp (bad) jmp mov and ds or add xor call add test lret or xchg xchg sub or push jnp outsl sbb inc and inc push sub push ss push or mov insb scas cmpsb mov xor roll xchg (bad) stos bound xor mov sahf (bad) pop xor fildll out gs outsb jae xor js repnz icebp or divl or fldenv dec out inc rep into mov out pusha mul (bad) mov xchg (bad) mov sub xchg mov out std gs sub loope or or rcrl lods mov push dec mov sbb popf mov mov inc and xor fdivrs sub xchg shrl jno mov xlat shr jge push push push loope xlat outsl cmpsl mov pop (bad) cwtl fwait repnz push hlt mov (bad) repnz scas mov xchg call ljmp xchg adc xchg pop or lea sub xchg pop sbb fucomip iret int3 stos sub (bad) std mov or mov mov sub das jg xchg inc data16 data16 in sbb and sub mov and xor mov flds clc shll mov and push add jnp pop test sbb int data16 popf dec paddsb xchg rcrb add add pushf add or (bad) jg (bad) mov stc jae test movsb out test popf outsl fstps or ret mov pop mov icebp stc push xchg fptan mov jmp gs pop mov adc test (bad) out pushf push out hlt ret adcl repnz xchg mov dec mov rorb stos int3 faddp in hlt jmp pop aaa leave cmc insb rolb stc (bad) cli fs add sub (bad) jmp inc (bad) pop mov stos xor push aad mov fdivrs and jle sbb mov pop (bad) xor call fist add movsl push jle and sub lea stos add mov icebp add jge aaa push stos sub mov push arpl or sub jnp or sbb scas pop (bad) fs repz mov jmp inc nop aad mov repz lods movzwl jge cltd aad or or or loop inc out inc das inc (bad) icebp cmp add sub mov and sub or (bad) fs xor jmp mov iret leave dec sub in mov sbb adc sbb loope shll or dec push jnp das or lock and xchg adc orl dec nop popf scas mov pop icebp js stos sub cld add enter or pop adc pop fucom and dec stos (bad) push or pop and adc or lret repnz out gs jns pop cwtl int loope cmpb adc and lret (bad) int3 pop inc shll negl popf lcall rorl int ljmp cld loop cmp out dec mov dec sub into dec mov lds pop mov dec inc sub in inc add xchg das or out cmp add lret call mov scas mov cmp mov cltd xor outsl je and scas out (bad) test mov jp arpl pop lods mov push (bad) (bad) adc inc pop in lock xlat mov call popa shrl mov imul push xor jnp (bad) pop flds push jge cmp clc adc lock xor xlat jnp xchg lods mov push mov inc add xor dec (bad) push xor repz cwtl pop sbb (bad) stc clc mov xchg sub mov add ja inc pop outsb mov and clc adcb pop mov pushl les outsl xor daa push inc fist ljmp and lods push adc pop sub xor mov xchg mov out stos sub lret mov (bad) mov ret movsl push and mov cli pop inc mov pop push iret sub je lock xlat test add sub cmp xchg adc push adc sbb jnp dec jne push inc dec sub (bad) (bad) sub jno sub xor cs xor cmp ret xor sub gs mov scas xor clc dec shrb clc cmp adc adc mov addr16 pushf xor mov inc out sub popf jno push dec psubd pop xchg mov push sub xlat test and pushf and adc popa mov xchg (bad) xchg mov dec add or daa xor jg sub xchg inc mov loop xor add movsb or lahf xchg xor and push mov cmp adc jp add ss outsb mov pop out cmpsl mov sub out push mov pop fstl and pop out stc dec mov fs mov jne ficompl es or aaa ja loope testl adc out scas mov das cmp (bad) xor stos test mov add leave mov lods add push pop and stc mov dec mov inc adc jecxz sub (bad) out dec (bad) sub arpl xor push andl scas dec cmc into jne ja cld (bad) enter xchg (bad) dec sbb mov xchg jo daa (bad) add rcl xor pop nop jg fild lret and or incl mov push loop ljmp xor or std aad add clc jbe lret and in fcoml ret rorl lcall repnz add lcallw gs or movsl cltd insl loope cmp cli sub jle repz jge lfs iret mov or clc or xchg jecxz mov adc (bad) xor in lret mov fdivs sub jne mov add out sub out jns shlb sbb sub xor sahf pop popf rolb lock mov ret lret push mov and push xor or dec rolb ret clc xchg rclb push adc xchg push cmpsl enter repz mov lock das stos sbb dec adc out pop cmp xor pushf imul cmc dec dec dec idiv cmp ljmp ficom jne mov xlat adc sub adc mov xchg data16 aam imul xchg push arpl insl movsb mov mov mov lea jle inc out into outsl inc and or and rcrl (bad) mov ljmp pop adc mov pop dec dec ds cmp sub mov mov xchg push jge repnz lcall sub xchg popa ret test xor push pop xchg mov sbb mov adc adc cmp (bad) mov ja or movsb push mov leave inc in je subl and fdivr test jmp rclb out mov mov sub add sub clc adc icebp dec xchg scas pop sti xchg roll add and test pop lret ret sbb (bad) mov jno imul test aam or add gs push and pushf dec mov cli in (bad) push cmp daa sbb sbb or cs shrb out pop fiaddl sbb into mov loop xchg test sar xor push xchg scas sub shlb dec and dec enter add scas xor call cmp hlt cmp aas dec out aaa fldcw jmp jmp xchg pop push mov pop bound push mov jl cmp jns lods push adc mov ret outsb pop pop jmp xor push pop (bad) mov adc popa shrl clc ja das fcomps in out test movsl enter lock xlat adc adc dec in sbb add pop sub pop xchg jle sbb rolb mov dec stos sub push jecxz pop popf dec jne scas mov add dec std dec push cs clc movsl aam dec mov dec mov dec xor cltd sub xor sub pop jg dec and scas jge push loop rolb dec out fs cltd dec xor cmp sub bound add loop pop repnz fldenv pop adc cmp pushf iret cs loop inc outsb dec dec mov jp cmp mov xchg sbb push jbe gs mov mov lods mov leave movsl xchg jmp xchg (bad) call inc cmp xchg fwait jl add mov int outsl adc mov mov fdivrs cwtl pop xor or pop dec push rorl sbb mov inc mov inc popf test lds clc dec fst lret mov push (bad) (bad) and xor sub cmp add jmp pop jp and ficoml mov mov in mov cwtl daa ss and mov cltd mov stos sub decl in jg fwait lret sub sar repnz pop rolb push jmp negb lock gs push imul or xchg push sbb sub fsubr ljmp mov scas add or mov scas lret ljmp call cli (bad) clc in in in movsb repz push aas cmpsl inc dec mov sub add shll cmp in mov sub and xchg xor cmpb dec jbe cmp pop mov outsb lds add pop daa leave add nop movsl ljmp or jge mov iret lods stc and loopne xlat xchg xor fstp jp push adc and mov (bad) lret mov cmp and jmp xchg fist fildll sahf outsb jp inc repz les xchg xor mov or jle jae push adc lods clc fcoml add out lret jae jne sbbb (bad) sub mov ret sub pop dec xor clc ljmp xor rolb inc mov mov mov dec in int3 loope sub mov xchg inc imul sub push jg and adc pop mul nop sub std js stos push push ljmp add adc cmp popa jmp xorb xchg call and mov sub or (bad) mov pop pushf lock adc fadds mov imul daa lret sbb jo sahf inc ret adc iret sub addb lock mov pop leave fs mov (bad) jno jmp mov cmpsl adc out fstps xchg cli mov mov or lahf sbb sub dec std out jl leave loop jge xchg dec dec mov mov sbb adc loope sub dec ja inc ret (bad) loopne,pn ficompl movsl or in lods movsb and ljmp pop mov push (bad) mov or (bad) jle das or add stos xor dec sub jmp xchg xchg or push outsb dec call push ss gs test mov add mov push test mov dec sti mov xor push add and fildll push std test add jae out lods and lret mov dec pop (bad) icebp jge adc mov jg jns cli xchg xor inc (bad) scas mov xchg mov lods je sbb xchg (bad) or adc xor pop pushf imul dec test (bad) mov icebp mov inc icebp pop (bad) int3 or xchg jl pop (bad) cmp and pcmpgtd ja mov in cmp dec push (bad) sub pushf (bad) and sbb dec mov jno out cs dec mov (bad) adc (bad) mov js or xor lret cmpsl and hlt add fiadd push inc mov fldl not add lret add fildll cli push push push sub fisttp subl and scas lret cmp cld ret (bad) imul aam bound out inc xchg push xchg xchg jmp test lret mov xchg push cmp adc push call mov mov mov and sub out jo sbb and add jb xchg xchg pop std sbb aas sub pop popf mov mov ret lock scas mov (bad) sub (bad) ljmp mov outsl (bad) and xchg aam inc and sub mov fdivp pop adc pop xchg dec das jl inc popf mov dec mov mov ds loope arpl jne sysenter xchg dec xchg and cwtl dec add (bad) loopne inc mov movsl cmp push push xchg sub lcall daa pop jbe out test xor stos mov adc jbe fwait dec dec hlt sbb orl ds lahf leave (bad) out or test pop jno notb orl push out xor test xor fsts repnz or cmp sub insb mov lds pop lds (bad) out jecxz dec and ficompl mov shl clc xchg (bad) lea ret lcall lret mov or bound dec ljmp aaa inc mov les test push icebp jg out out outsl std scas gs loope lret push xchg lea jnp dec loope lds subl mov clc mov int mov sarb add pusha sub vmovntps xlat adc pop sbb dec xor roll xchg add test xor jg or mov (bad) cltd cmp sub pop lods pop inc mov iret mov cmpsb sbb sbb xchg stc push adc les into ljmp gs sub xor das int cmp addl xor mov push dec fldl clc mov fs scas cltd (bad) push dec jp out test push or repnz mov mov jle ret mov sub stos ret push xchg cmc dec imul jle (bad) cld sbb pop cwtl lret pushf out xor hlt mov mov jl ret pop aam pop mov sub push xor ret imul dec enter sbbl ret add adc inc ljmp popf pop dec mov and inc cmpsl jp cmpsl popa xchg xor or dec mov in mov sti icebp xchg outsb je les iret pop pop mov pop mov (bad) lcall and (bad) xchg icebp loope pop mov inc cmp dec push xchg mov repz sub and scas xchg inc or jle add pop imul inc pop outsl call xchg (bad) test jecxz loope adc mov sub (bad) into das jmp and shr cwtl (bad) adc iret pop loop (bad) xor pop icebp das jl mov aad sub lret (bad) mov aad adc cmpsb push pop divb xor lret out clc pop into lret xor lods adc out lret out std pusha mov or jo mov adc (bad) mov in das rorl (bad) or cmp push and sub in jmp mov mov xor or in mov adc leave mov sbb xchg jae mov (bad) inc jle push idivl dec lret jne jo das lret icebp mov jne mov mov arpl sahf and push xchg loope cmp icebp repnz rcl push stos mov add mov or insb leave pushl sub movsb and and adc jle sub push sti mov jmp pop pop rorb or out shlb xchg lds sub xor daa (bad) sub or xlat push or ja sub testl xor outsl or dec insl jl sub shrl das mov pop sub jns rclb arpl mov dec rorl jae pop sub addr16 nop arpl mov lds mov call pushf loop ret loope ja aam mov shrb push js xchg jo mov mulb and (bad) scas (bad) scas jmp cmpsl (bad) lret lds cli scas out adc (bad) frstor fldl2t cs shrb sub add into and push fcompl and das mov cs pop push jge fidivl add add push icebp fsubrs stos sub sub movsb mov dec ljmp push and sbb pop cli sub (bad) jns push mov fucomip jo or cmp int3 scas xor ffreep and dec dec sub xchg pop pop xchg int sub mov jmp fdivrs mov push out mov inc popa daa shr jae sbb sub and mov xchg or add icebp cmc jp sbb cmp out mov fist out xor dec dec stos and notb push mov or adc scas dec lahf sub ljmp sti test pop mov ret push push cwtl mov mov inc xchg insb mov jmp sub into xchg jne in jns lods push mov test pop push jl in bound repnz mov mov jg pop out jns dec xor ret inc out and bound cmp cs es lds xor scas inc mov pop ljmp mov inc push mov je (bad) movsl iret jg push cmpsl movsb scas jno cmp jg mov test jmp xchg scas (bad) (bad) loop pushf push push popa jmp mov call jno or xor (bad) sbb jge lock data16 push cmp or adc call fidivl adc out mov outsb jecxz xchg xor lock lret stos sub adc push sub cs and push les inc and xor das xchg ret repz or or push nop mov in jmp ds or jmp jns sub dec or (bad) in cmc push mov push xchg sbb or add jne imul loope ds pop dec mov and lret iret dec pusha and test push xorl aam cmp neg inc push add cli xor jbe xor (bad) fcoms xchg adc lahf ret sbb jnp and add nop sub in add mov inc sub int3 mov shl mov jae ljmp push inc loop lds add dec or and (bad) (bad) jns data16 dec jno sub rol inc mov jmp stc es leave fs cli mov dec insl hlt test (bad) leave sbb xchg (bad) jmp jle xor lret add dec in mov fwait test repz fs mov push xor add and popa mov cmp shrl cmp jle jbe and sbb fnstcw mov les xchg decl jbe pop jno adc mov dec (bad) dec orl repz xor mov cmp mov adc mov mov sub dec fs repz das lret or sarb jne les (bad) shrl and lods outsb xchg push enter pushf cmp shll or jg int int3 imul arpl mov xchg icebp mov pop mov shrl push xchg inc cmp shrb out pop xchg or int sbb fsts outsl cmpsl out push call aas test pop call std mov mov cmpsb fdivs mull fwait lahf push icebp mov adc mull scas loop xchg push popa popf incb mov je push out jne stos or and mov and push add lods and (bad) shll ret (bad) xchg pop sbb arpl sub loope ja adc mov or (bad) xor push sub jl loope push int xor add jae mov jp (bad) in mov mov mov sub movsl pop imulb roll imul out mov push in das (bad) pusha daa pop in cs pop jp sub pop mov dec or std inc repnz sub ror dec jbe adc pusha push or add mov testl mov insb inc les iret mov and test mov cltd je fdivrp lds dec loope sub aad adc jmp (bad) imul ds push (bad) mov je and je add jnp xchg lret dec xor push mov pop dec daa repnz and sub mov push test bound pop and xor pop adc out loop (bad) addr16 mov dec pop insl aaa xor lock aaa rcl push mov push jb mov or mov iret ljmp or fisttp jnp roll jecxz sub mov test divl dec xchg dec lods xchg jp ret sbb mov add xchg repz jmp in lret cmpsw pop adc mov push xor dec sub mov clc popa rorl imul xor or lcall or ror cltd lahf cmpsl pop inc lods inc adc cmpsl je jb and (bad) bound into push and (bad) iret sub push pushw xor scas shrl adc repnz and add out inc cmp sarb jo or pop mov jmp mov repnz mov into divb mov loop push pop jmp call push daa ja aas daa push fmuls mov aas push xor lea bound and mov sub dec ljmp ja sub out cmp out adc xor pop pop add adc cli lret mov dec and pop in sub xchg inc add lock adc mov ret jmp xor push lcall dec pop out jne ljmp push shll pop or push jecxz lret (bad) (bad) mov add dec or sub insb fist in add cltd cmpsb aas cld iret mov xlat mov std dec jle adc ds arpl insb xor into cmc push rorb fdivs data16 sub sti pop jmp inc stc scas cld pop push push adc mov pop pop pop dec lahf or pushf sub jo xchg sbb test popf test jmp dec mov add popa roll bound fdivr mov dec fldenv dec dec incb popf (bad) sbb in xor mov add nop std sub cmpsl add subl adc xchg out mov push imul cmp pop ljmp pop int insb outsb xchg (bad) das pop (bad) mov cmp mov dec xchg cmp out adc lret (bad) lods xchg call movsb dec and int3 ret pop sub lret call pusha mov test jmp and aas popa jne sub push das lods data16 dec pop push aam int3 sub dec sub dec adc repnz mov push ret xor sub push cmp jle movsl pop test lret mov mov ret ds cmp cmc dec lret das ret jnp and cli pop shrb pop and cmp scas mov jmp imul mov je enter push cmpsb pop xor pop or (bad) sub je jns push cs cmp jle aad insb test cltd or jns idivl in int3 movsb out popf iret cs gs lods add push insb or hlt mov mov dec stc loopne cmp ret inc push (bad) pop xor push repz cmp sub clc popf dec repz adc les inc or loop add out xor scas repnz les pop pop pop dec jno or cs scas cltd sub jnp mov cmp mov into repz push sti push daa or mov jl imul cltd and xor mov jg in stc sub sub mov and inc mov mov mov mov into jle pop xchg ret dec mov mov hlt pop leave std mov add dec stc std imul add sbb push dec jne add popf rcrl pushf ljmp jns mov negl iret mov and sub xchg mov in mov (bad) sub and xchg cmp add shlb int3 mov cmpsb push push test jne push mov mov into jge sahf aas enter pop add aam test je cwtl cmpsl out mov mov fildll sbb ret lret cwtl in push mov in adc xor pop fucomi and xchg rcrl (bad) loopne ficompl gs push repz imul popa inc or (bad) fcomip sbb rcrb and mov imull lfs das sbb ds inc cs lds lahf (bad) mov leave aad mov sarb and cmp push xlat sbb fdivl jge jge sub mov add out mov dec repz loope dec mov les sub ret pop test (bad) scas mov jl popf xor fist pop and mov js (bad) mov pop mov popa mov (bad) inc add test test mov cltd scas out call (bad) push mov cmp lcall jnp sar sub cmp push mov pop (bad) fs scas push add stos pushf inc cmp mov addr16 (bad) pop lret and xor outsl or jnp hlt inc (bad) out (bad) jo sbb ret int es and mov dec in xchg in cwtl int jp mov and xchg xor push cs fsts subb test jno enter lods loope mov inc icebp and test xor daa out mov out imul fidivr call and stos and inc gs decl dec (bad) mov mov das sub aam iret leave cmpb jbe es jno jle fbld out xchg pop test scas je mov inc das jecxz adc or and mov (bad) adc sub fisttpl das push xchg sti mov pop jmp inc sub pop cltd pop add repnz add xor lret add shll jns ret jne bound out sbb dec xchg adc sub cmp clc sbb inc leave (bad) jno mov fisubr daa jg jo fadd mov inc xchg stc repz out movzbl cli jne cmpsb icebp adc adc sub test pop aad movsb mov clc leave xchg movsl mov nop std gs jo dec xchg fadd lret pop mov sbb lock (bad) aad das mov call pop nop (bad) lock aas std adc or gs subl xor xchg xor out add jmp sub pusha cs (bad) std imul lods mov jmp adc jmp or inc std mov sbb jo xchg pop out fstps jno sub stos lcall dec cmc shl ret xchg notb nop jnp ficoml leave cs and mov sub and jg xchg push mov (bad) (bad) push loop cmp (bad) xor or xor jle jns movsb inc cld ljmp add clc lcall adc and dec das sub xor sahf sub lock ja addb test lock aam jno jbe push (bad) aas fadds xchg (bad) test leave sbb in ret les push adc sub dec add dec sbb (bad) lods pop pop mov ret push and xchg loope (bad) cs dec adc clc cmp hlt ret fwait mov das jbe mov sbb insb jbe jbe fnstcw dec pop repz add jmp or or test sub xor mov xor les insb jle sub (bad) or es stos inc xchg imul lahf cmpsl pop pusha lds (bad) fstpl and add icebp and jmp push jg mov jecxz add out jb or jne mov pop ds mov sub pop cld js aad and jge cmc adc mov cmp jge fistpl ret push sub mov sub fcomps pop icebp jp repz shrl jns dec xlat push xchg in push mov imul imul push sub and in nop lahf repz inc daa sub xor clc dec repnz nop jl add test mov repz flds pop cli fs int3 pop jmp mov pop lahf and das xchg arpl aad mov mov xchg notl xchg test lcall ret xchg bound jmp or enter mov cs mov inc iret sub xchg push xor (bad) testl push cmp shrb pusha jmp fcoms xor cwtl js push and nop lods mov sub jnp pop sbb push mov mov shr clc add sbb dec (bad) int3 push xor daa and cmp dec cli sub jb xchg mov out xlat jns dec fsubrs xor loope test fstp insb cmp lods xchg or jecxz xor in loope notl lret pushf dec push xor mov add push mov sub clc mov sti int3 or sub push push mov push fcmovb repz adc push mov xor std jnp,pn push inc jg test sub leave mov push ljmp je ret lea sbb pop lret push dec mov das and jg call scas repnz div push data16 les scas cmpsl pop sub xchg lds test push xchg scas std mov and cmp add (bad) into jecxz test std fmuls negb add sub sub cmp cmp dec cmpsb cmp inc scas xchg test sub and jbe push repz and cmpsb xchg and jge inc and nop lds insb cli lods push mov fdivr imul pop dec aad or cmc mov ret and psllq (bad) or add ljmp in sub xchg mov outsb lret jmp xor inc mov or sbb dec lods fstpl mov lret out gs jg nop dec insb and lea mov mov aas fistl popf fnstsw (bad) mov pop xchg stos and lret addb out add fisubr inc and sbb xor daa mov push xor sbb les popf dec jle adc in cmp es push bnd movsl mov das sub push xor mov mov or loope arpl adc xor dec pop enter mov (bad) lahf in pop dec lret sub dec ret enter add dec cld sub icebp xchg aam outsb mov or in mov rorl test das pop sbb add stos addr16 out mov dec dec inc es mov lea stc mov ja sub pushf pop repz hlt mov ret insb add decb lds push or mov xchg sub (bad) cmp push add and and mov inc and into dec sti mov inc mov fnstenv add sbb or popf in scas push shrl dec xor mov xchg mov (bad) nop push fadds (bad) and in pop mov daa dec movsb pop mov pop sub xor and mov in pop add stos fsubrl out nop hlt mov mov or push xchg mov out test dec out (bad) sub mov mov repz and icebp sbb (bad) lock popf jmp sub out lods movsb sbbl das clc in (bad) xor and mov jge lock and (bad) xor add aam jmp jp mov xchg push dec ss add mov and jmp test movsb mov sbb (bad) icebp cmp faddl xor add mov or hlt and cld js outsl push movsl into inc adc icebp pop dec pop add (bad) or mov fisub mov push inc xchg and lods fs loope fadds push jmp popa xor cmp cwtl loopne lahf hlt push jmp out adc and out gs ss rorl sti sbb and fisttpl subb or sub inc jmp cmpsl jmp mov lcall jbe push xchg push dec mulb pushf imul jmp sarb icebp mov xchg divl add out jb sbb clc imul xor push inc in pop leave cld test xor divb pop scas push imul sahf pop pop push sbb imul push mov xor mov xchg dec push dec mov out bound ficompl dec pushf into gs loop,pt (bad) xor into xor inc push or xchg orl sub les inc and sbb mov cmp mulb ja fstps cld loope xlat jmp sub loop fistl fimul xchg sbb das dec imul lret ja (bad) xlat mov (bad) mov sbb std in sub or sub add fldlg2 movsb les cmp sub into daa mov inc jmp clc sub and popa jge repz pop push mov xor aam out clc bswap xchg adc sub test fs xor xor ss push mov out fs cltd jno rclb adc jmp cmp xlat and xor cmp fimul clc sub adc insb jo jmp jo out sub mov add es in (bad) jo adc and pop (bad) gs movsb jmp scas mov iret mov cs xchg mov adc mov imul pushf stc push sub movsl bnd test rorl or mov mov pop mov add xchg repnz adc adc jmp clc fidiv sub pop xchg cmp xchg sarb and pop cmp inc fcoms ja adc insb mov or add dec push ret and push idivl mov and int3 dec or mov mul mov cwtl lock addr16 daa jnp lods add xchg mov inc (bad) outsb cmp (bad) rol out lret sub and push push or (bad) push mov fstps push bound (bad) pop push cmp lds and les mov add (bad) lret jbe push (bad) mov mov fisubrl pop and mov and (bad) jae mov dec push mov push jmp or and std jns mov ds or mov rolb stc out dec and int3 pop pop shr mov lock jae add ljmp das and popf pop xor sbb into xchg lock pop icebp pusha mov (bad) lds mov (bad) dec popa rorb out xor ja pop and pop imul jne jmp pusha adc adc xchg push imul jg jae das divb and movsb adc (bad) xchg (bad) in jmp dec call outsb incb (bad) cmpsl sti mov jg insb das and mov jno call je pop jg popa popf rcll xor adc xor mov mov mov sub mov sub cwtl fs rcrb rcrl out xchg hlt sbbl sub mov and mov add inc or std dec inc pop xchg sub dec aam lods push xchg adc and pop xor mov in push sub and imul or repz xchg adc iret lret outsb daa in jo negl adc or call push and or or push fwait jbe mov mov fcmovbe pcmpgtw dec sub out cs push lret jne push dec jae add cmp adc lods dec bound js xchg jbe push aad dec adc scas cmp add dec daa dec push cltd iret add stc iret pop test push pop push jne lea (bad) lock fwait adc xlat sub mov add mov xchg mov adcb or cmc outsb or xor ja out pop jae testb cs mov pop and and cmp popa xor leave das bound icebp aad fsubrs stc dec (bad) cwtl in adc call mov lret push inc adc xchg lcall inc sub jg cmc (bad) add cs movsb and push fldt cmp loope data16 cs addr16 fdivrs add mov das mov stos sub xor mov call lds jbe jl mov (bad) mov roll or sub sti push or sub add add dec jmp bound cld push jmp ja icebp jnp jmp divl xchg jns dec aam das xchg add pop push mov push movsl ds sbb jle add sub xchg xor pop mov ds mov dec call xlat sub xchg or inc jnp jns or dec or push pop sahf cmp mov out and pushf push jb jns dec jnp or aaa fstl jbe (bad) jno xchg dec pop pop out loop shrb cmp js fiaddl add sub sub push mov push jo aad clc fbstp mov mov add mov mov test push jno int3 xchg mov dec sub inc cmp xor mov in mov cs test dec add sahf lret (bad) add (bad) (bad) frstor adc sub lock sbb int3 out or aad xor push push mull fsts inc jns iret xor repnz sbb repnz mov push sbb dec fsubrs lea push jge push test popf or and jns (bad) sbb jmp cmp daa loopne push jno push rol and sti xor out cmpsl repnz stos xor out hlt add lock in cmpsb repz cmp add push xchg pop mov lds scas popa inc cli jg (bad) cmp mov or dec pop mov and bound xchg adc in dec mov stos dec rorb ljmp mov and adc push and jnp cltd pop lret jmp fsubrl sbb pop mov inc inc and fisttpll sub xor push jp inc lds jmp das dec in jb aad mov subb jmp js mov and xor and popa leave aam imul cmp add clc adc inc lret xchg lret jecxz sbb and xchg pop mov and xor add cmp pop mov mov in cmpsl in push out jecxz xchg lods dec pop loop lcall adc or pop dec fsts sub pushf add ja pop lods jbe push add or out jle call push scas (bad) cli daa insb add insb mov das mov insl or rorb sar dec aas in rcl xor xor pushl (bad) push xlat sbb test fdiv cwtl loop enter sub mov mov test inc or push mov lods cmp push mov repz cmc cmp sub sub fsub stc adc pop add sbb ret pop sti or adc adc sub stc push pop cmpsb rorl sub aad xor mov pop (bad) enter nop fmuls xlat xor cmp lret pusha xchg stos out and daa push push xchg flds pop stc adc mov xor call mov stos xor or cmp stc std dec cmp xchg cmp inc test cmp movsb mov pop mov dec pop xor and por dec (bad) mov add mov or jmp loope mov shrl dec enter cli mov rclb jg and repz into mov xor out or push inc (bad) icebp and and jmp ret cmp aam cmp loopne (bad) bts ror pushf popa out pusha or xor sub jmp ret xchg pushf mov aas mov scas cmp std das sub in and in bound pop icebp cmp dec pop pop jle imul fs std xor push (bad) stc cmp bound pop and xor ret aad test jmp sahf sahf repz lock sub and add jno aaa cmp inc inc ret scas mov inc and xchg stos data16 pop mov in sti sub rcll pusha adc add lock xchg outsb (bad) call das xor add adcb pop insb lret aad ja xor or xlat mov dec mov push stc and xor mov aas add xchg push jmp push sub xor push (bad) in lcall test dec leave jmp mov or sub and or sub sar cmpsb movsl dec and xor divl cmp dec xchg mov out lods sub mov decl and in shrl xor dec pop adc (bad) mov xchg push xchg lods inc mov pop aam pop out pop sub fmul xchg and roll push outsb sub add or mov lret in pop ljmp sub sbb ret cli sub ficompl enter imul push pop pop aaa dec das repz jne sub into jmp rclb mov mov dec pop (bad) push ret aaa add (bad) rep dec cli (bad) (bad) pop cmp leave imul (bad) (bad) xor mov cwtl push sub mov (bad) jecxz lock xchg xor ds fs and fstpl dec fist xchg inc ss das mov jge addr16 fiadd fs xchg (bad) mov and pusha pop nop pop inc jbe mov or mov inc insl push mov mov outsb loopne pop xchg adc cwtl mov lret (bad) inc (bad) xor loop jecxz xchg xor enter or jl (bad) dec clc ret dec rcll cmpsl adc xlat cmpsl adc push jmp sbb xor sbb iret mov repz sahf icebp and mov adc das jmp add icebp mov shll add aas mov pop pop push leave cmp and add xchg cmp pop sub xchg dec das mov pop push fdivrl pop test adc fs movsl mov aaa shll push rcll fnstenv or jno dec xlat mov dec xchg and (bad) into push push fist mov dec adc movsl in popf push test and imul sti popf fisubr repz jecxz add frstor (bad) daa or out dec iret scas sub mov and pop mov ljmp daa in out cltd in cmp dec jle add adc fwait daa xor out imul into push push stc cmp stc into mov int cs push movsb test cmp leave sarl xchg lahf loop xor lret scas and push add sarl xchg out lret cmpsb and ret jge (bad) decb stos das jmp je pop loopne addl lret call cmp loop pop bound add xor xchg insb sbb bound clc jne das jp in rclb repz sub xchg push push loop (bad) stos jmp and mov mov out mov mov lea sub sbb jbe fnsave enter cli jae add pop popf sbb dec cli cltd fs mov add or and pusha daa or jg mov xor out dec (bad) aaa addr16 jmp xlat mov ret mov ja mov loop aaa push ficomp ret test mov arpl call lret scas sub call inc out push add mov js stc cs sub outsl hlt add xchg xchg lcall push lock mov or xor add or test ljmp add icebp or int3 mov jmp fnstenv dec mov add xor add imul iret pop jle jns or and xchg les add sub ficom ret mov sub dec (bad) lods fild mov mov enter sub loop mov cmp pusha cmpsb jmp mov movsb insb and ret xor mov in xchg hlt push jb jno lods jns jo popf jne mov xchg dec clc mov jno add clc mov sub xchg fucomip xchg call adc fstl or data16 test push lret cmp sbb adc nop add fistp push jp xor pop lods mov ret inc aaa mov pop inc push push int3 rcll dec add xchg and push sub nop iret (bad) sbb xchg jno insb mov dec adc sub arpl bound push pop in push cmpsb frstor and jno stos jo (bad) leave cli sub add mov hlt out add shl neg mov mov out add imul mov outsb sub ja (bad) sbb sbb adc push out jne ret mov push je fdivrs (bad) pushl mov xor xlat add addr16 mov cwtl add mov fmull ficom aam pop lahf test adc sub pop imull fadds insb pop sarb (bad) je xor add (bad) dec aam sahf mov fcoml ret adc add (bad) push mov xor pop (bad) adcl sbb outsl mov (bad) jle incb test stos inc dec and pop lcall ds fiadd stos or pop cmp adc jle jne pop addr16 adc lods popa inc or push or adc or cmc inc fnstcw repnz pop pop je xor push push notb inc rol add pop mov mov add sbb mov sub daa out jecxz adc dec push mov shlb call mov inc rorl mov jg not and inc sbb push (bad) xlat cmpb mov pop xor pop sub jne add imul push mov inc jb fldt aam adc xchg pusha adc lahf out ds jg jmp dec push or repnz mov add push movsb mov loop pop pop sti pop lds stc and pop jns pop sbb cld mov add cli inc fwait or and rcrb pop scas jmp rclb nop test mov test mov mov pop mov xor (bad) and and jo mov mov in push insl das out lock cmp adc xorb sub adc loop push shrl jle inc xor stc stc dec push lret or clc push dec sub cltd inc test push cmp fs xchg aam loop and les mov cmc idivb mov xchg lcall sbb das insl pop pop jl ds sarl mov repz ffree mov sub inc shrb and frstor fcmovnb xchg xchg jmp xchg inc ret pop repnz mov add ss jg fnsetpm(287 js add sub std (bad) xor or out daa ret xchg daa push jle push stos fstps test mov mov mov fimul add xor push (bad) inc push sub fistpll std adc test popf js sbb les push dec mov xor sub idivb add mov clc mov gs cld xor bnd scas imul sub clc fwait daa lds push pop pop jge je cld push push or dec xchg pop dec out or inc add pop jae add mov out push in jnp mov or mov mov xchg into xchg push in scas xor shrb xchg push xchg scas je dec mov notb fidivrl imul adc xor mov pop mov push ljmp xor das (bad) aam (bad) icebp push pop xchg dec jp test imull mov push test ud1 aaa xchg decl pop (bad) push add and mov dec lock xchg sbb pop push gs jge nop inc or adc jmp push mov aaa (bad) cld cmpsl sarb inc loop fist das mov pushl pop ja pop xchg push mov lahf sub ljmp (bad) jae (bad) pop out cmp push cmp ljmp push cmpxchg imull xchg notb push push xchg push push and cmp adc jno orl repnz sub push cmc lds (bad) fs sarl cmp enter jmp jbe jb dec jmp sbb ds and lahf ds cli xchg jmp (bad) mov push or test ljmp sahf lods cmpsb dec (bad) pushf cmp xchg xor sub ror ss push cld enter lds lods cld push sub push (bad) jp dec add xchg xlat cwtl pop mov xchg mov mov dec cli and fsubrs inc or decl pop lods xchg dec mov pop out jbe or icebp loop out sbb imul cmp jmp dec test clc jne adc scas or mov imul pop test daa jmp andb movsl jp aam push xor popf js pop (bad) lret (bad) dec jecxz rorl cmpsl push and jae cli and movsb leave push into push mov pop xchg into mov int3 pop add ret push in mov and sub add lea repnz sub inc mov dec scas sub leave cmpl (bad) jle cmp test xchg stos test insl idivl lods cs sub sbb add aas dec lahf jne mov inc mov mov shlb clc fnstsw push shl fwait out jle jge jmp orb vmovhpd gs and loope,pn imul add cli pop sub jp add out ja or fisubr jge jle iret mov inc sahf mov mov dec inc imull ret jle loopne sub out jbe mov stos and out call mov push mov ret mov xor xor sarl pushl cmp ret and xor mov sahf icebp imul cmp push and push pop popa push out pop ret push lcall or xlat inc fs repnz jge je fistp rclb dec pusha mov sbb mov ror ja or mov or popf aas pusha call jbe pop ja push jmp mov add pusha fs dec stc aam or ret jge ret sbb xor dec call loopne ljmp adc das xchg mov and pop xorl fcoms xchg popa testl out iret sbb notl adc or fisubl (bad) (bad) dec movsl std popa pop out imul movsb mov es jb rorb stc aad fist mov (bad) push out xchg pusha rorb cmpsl fsubp insb popf pop mov dec mov jno in movsl and jmp outsl mov adc out movsb stos std xor out jg or ljmp repnz (bad) adc mov aas mov out push xlat pop push fsubl jne sub cmp cmp pop popf stc aad and mov ja pop mov lods ds ret and out mov jp loop adc ja jg push adc je popf pop es and insl leave push jno cmpsl push ljmp call aad lcall outsb mov into (bad) ror incl sub dec mov sbb pop pop mov ljmp sub icebp orb jg imul sar in mov pop push clc das int3 cmpsb sub je lds xchg mov shrl out adc (bad) into jne leave mov mov mov leave mov xor xor inc sar cld cmpsb push stc mov mov fs movsl out xlat cmp dec je cmp insb out mov mov sbb sub inc cmp add dec xor loop rcrb fnstsw icebp or roll mov (bad) jmp push ljmp test mov pop mov mov into mov jle (bad) rcrl xchg clc movsb out jnp add and pop mov dec cmp test movsb scas cwtl ds sub test dec dec jmp or call mull jns dec xor push push (bad) pop pop inc test movsb stos test mov mul inc popa (bad) xchg sbb stc and pop (bad) fbstp (bad) icebp xor in and sub fst jne out lds cld fwait js pop test ljmp cmp mov jne hlt mov xchg clc mov stc inc (bad) (bad) rcrl dec iret mov pop lods pop daa divl imul sub in mov test lahf jle push mov fidivr test fidivrl jbe fsubrp adc add add jae imul cmp dec stos sahf push pop loop jmp in jns dec or xor mov jne push (bad) jb (bad) fucomip mov add std cmp sub and js mov dec fnsave inc (bad) insb std fldl2e add sti xor cmp mov sub or and mov push cmp pop and inc pusha ret and sbb xchg pop mov insl daa mov sti pop rol andb jno pop adc and xor mov sub daa js add out lea jno sub jbe adc fildll xlat out int jp fdivs lds daa sbb push jnp ret iret imul mov cmpsb ss out mov leave xchg adc push icebp xor xor and sub inc adc in sub andl cmp mov mov jbe push out and rorl jno lret cmp dec mov and lea les xor add jg mov loopne jmp push xchg (bad) jmp add stos das rcll xor stos fs mov xchg inc pop mov das xor iret mov ret popf in stc pop (bad) mov aam mov and int3 pop out pop or sarl jb and and cli pop ds or ficom or inc cmp push xchg iret push push cwtl pop sub divl mov in sub jo xchg adc jge adc xchg mov ret inc insl add sub movl (bad) pop frstor stos out and (bad) aam js sub and push adc sub adc sub loop pop jle mov mov and nop (bad) in push mov cli xor or fildl cmp popf gs inc add adc cld cmp movsb xchg or sbb fnop mov ja inc xor enter in mov sub test mov xor add add sub (bad) cmp cmp (bad) lock jnp inc mov push mov cmp adc mov mov insb popf fld pusha aaa cmp dec and roll lret and sub bound xor test lcall hlt pop leave ret shrl add inc jnp add sub leave mov or outsb mov push push gs repz pushf pop xchg jnp xor jbe (bad) (bad) in arpl pop pop lods xchg and ret sub pop xor or and lahf pop push sbb insb or cmp cmp movsl pop ljmp repnz idivl out mov into stos std negl or (bad) bound adc (bad) jae pop dec mov add sub mov mov ljmp adc or mov divb mov enter lds or aas pop iret aaa push enter jno and and out dec cmp mov ja test lock sub icebp out pop addb or push into sub or sbb sub call jmp mov fadds mov mov cmp cmp ljmp sub sbb sub mov adc push mov out sub out push icebp pop pop stos push sbb add cmp das pop cld add or xlat inc mul mov push pop bound aaa in jp mov int outsb push pop xor mov leave and (bad) sti icebp pushl (bad) aam test mov add jmp call xchg xchg cmpsl sbb iret ret or pop ret mov cli mov or (bad) cli mov sarb (bad) adc or (bad) mov imul or add jmp add dec jmp push fisub in ljmp shrl fwait ds pushl popf jo loope jbe dec stos lret movsl adc (bad) mov out push or lcall pop insb data16 fsubrl xchg iret out mov dec out adc fidivrl or outsb lahf in push mov inc sub add or (bad) lret lcall in cmp out dec and scas pop pop movsl jns movsb popf sub push pop adc add mov ret inc add or or dec mov mov imul mov leave rcrl adc mov push xor xor cs in mov sub sbb xchg cltd inc or pop out imul dec (bad) (bad) stc fs hlt cmp add xor xchg (bad) jb dec in cli ret bound and and mov sub arpl jle daa mov mov push xor ret (bad) adc mov lods mov ljmp clc xchg icebp repz insl aas jmp ljmp push push and sbb repz (bad) lea mov add rorl stos (bad) (bad) sti xchg pop ljmp (bad) xor repz dec mov xor fisubr fs inc les mov out sub add nop lahf or jne and movsl mov outsl negl dec mov mov or popa dec add jmp icebp mov pop mov sbb mov xor jmp and sub test pop sahf and mov lret jnp mov sub xlat (bad) xchg pop icebp loop leave and cmpsl movb pop dec out xchg push jb and xlat mov pop mov inc shll inc add repnz int3 imul or movl push cmp xorl cld inc sub dec xchg fdivs mov mov into incl cmp fildl fistpll stos cs iret ds aad gs mov out and mov mov hlt ret inc xor pop lds loopne add and add sub ffreep add and popf outsb cmp in sub jl test fsubr lret clc cs push je jmp loope sti dec rolb lea or add xchg les push shr sbb bound sub and std pop lcall cli lds cs dec fmuls ds out dec pop pop std cld (bad) xor add xchg push jo adc push jb or and clc (bad) jmp hlt inc (bad) cmp push mov add add mov cld xor or gs addl sub jo sbb in push out jb cmp pop sub mov data16 out add data16 dec and or loopne and xor xorb lret add sarb into xor movsb addr16 add int mov fidivr sbb cmp out addl pop mov call stc dec xchg mov jl adc and ret pop mov test cmpsl lock stc xor jle jecxz pop inc inc xor mov dec mov mov or xchg insl add loopne mov jge cmp mov cs out push inc pop dec repnz add xor stos clc lods mov sub add mov icebp outsl add loop iret xor mov push push shll mov nop (bad) sub out (bad) stc in dec jnp push rcrl mov sbb shrl mov sbb pop leave pop sbb sub sub popf cltd cmpsl xchg in sub mov or and dec jp (bad) cli xchg inc loope inc adcb repz dec icebp fldcw movb push pop fsts out cmp (bad) jmp mov sub or into fisub lds sti xor xchg dec leave aaa dec test test mov clc push out leave jg inc xchg iret rol sti sbb leave mov cmp fs and jle imul mov inc movsb sbb repz in jo movsl sub cltd jno dec repnz fcmovbe dec sub nop cli cmpsb mov xor mov repnz (bad) repz ret xor xor or xor aas adc mov in dec iret repnz lcall (bad) adc in xchg mov push xchg call sbb lock mov pop pushf lock or data16 jecxz adc lret push sbb jno dec inc dec je push adc or idivl js pop sbb lahf or sbb mull add pop mov scas mov out sahf mov xor push bound stos add sub dec jae inc (bad) pop inc and mov mov lock fist jnp sub xchg call adc (bad) cli cmpsb negb sbb or mov (bad) roll xor data16 or fisttpl dec mov out imul insb popf mov lcall icebp jge or pop enter int3 add xor gs sub xlat jnp push add inc repz jge sub inc push push sti cs pop loop rcr das enter into or mov stos lret mov in and inc sbb cli cmp cmpb xor cmpsb mov lret and das loop cmp cs popf ret xchg in mov add mov pop and repnz cli loope fidivrl mov popa pop movsl rcrb ret xchg roll add and pop cmp and mov cmp mov icebp or sti lret xchg or dec (bad) ss push scas sbb push (bad) lods mov jg fadds mov and std and out fsubp push ja insb xor int3 push fsubl repz jmp ret inc inc int imul cmp push mov in xchg adc loop inc mov jne out mov pop pop test lods add pop cmp fisubl (bad) add rcrl cltd push nop xchg jb lret xchg jnp dec lret push adc pop fstps shrb arpl sbb aam dec lret cmp int jp pop inc pop push sub jge dec jmp fnsave dec add repnz fsubrp les out gs enter inc stc fs decl aaa loope and adc adc mov add xor mov xchg out out inc in sub cmpsl leave pusha pop sub sar int aas mov dec gs xlat cmp mov out mov or inc loope mov imul xchg mov pop rol dec in cs add (bad) das mov insb jecxz (bad) pushf pop fsub call mov add pop jge dec adc aas sub stos (bad) xor ret fnsave sub adc cli mov dec xor xchg (bad) mov je jno cmp or xor jne lahf mov pop repz lret pop fistl sub test mov fisubr mov pusha movsl push adcl push lcall sbb sub push (bad) mov xchg push sub nop add aaa loop mov fbstp in dec test xlat and and sub cmp cmp sbb or add or in dec adc gs or sbb adc enter pop mov shlb mov pop mov xor ficomp pusha add sub lahf jle imul ret stc scas test inc mov pop cmpsb mov inc (bad) out fs hlt call adc std or scas rclb push pop lret mov cli cmp add cmc xor fistpll sub jmp xor int3 add ret ljmp (bad) int push jge dec pop dec push jno xor xor adc iret mov dec mov jp fnop jmp sbb (bad) pop gs xor push mov dec dec shrb inc inc push mov dec (bad) stos fnstenv cmp cmp dec (bad) mov sub decl out pop and dec (bad) lret adc iret or adc loope sbb or stc ds stos sbb mov inc or fcoml aas pop pop in test cmp push imul lret ljmp gs lret sbb pop or and lds sarl fucomi or cli rcr gs scas mov sbb adc and popf pop mov jmp popa jbe adc mov jbe loop jge sbb lcall inc add xchg shrl xor in mov ljmp mov xor scas sub adc xchg adc mov nop or repz hlt and pop loope jg mov cmp push jmp xor test xchg mov sti lods adc divb lret sub popf inc push negl ss lcall notl xchg mov inc addb push mov lret and pop adc cmp mov cmpsb sbb repnz push jle (bad) into fistl bound leave ljmp int3 popl fs cli iret lds and popf jp (bad) pop sub xchg sar add and iret push fistpll test (bad) es cmp or jbe pop mov push lret sub cmpsl jecxz and adc pop dec jl daa mov sub out fisttpll stos cmp push cltd add mov pushf (bad) hlt or pop fucom jnp hlt popf gs imul ret cltd sub or sbb mov clc (bad) cltd dec cmp out (bad) and call pop clc das and sti divb mov icebp ret popa xchg out cld dec mov aam xchg and lds cmpl push mov bound mov mov fnstenv out sub popa cmp out cmp lahf jl imul into movsl lds movl rorl cmp sbb (bad) gs test push adc jmp push sub xchg sahf cmp push hlt sbb hlt stos pop inc lock mov mull push mov sub or shr fadds xor out push sbb adc std add dec and pop xorl repnz adc or or cmp push sbb repz sbb jbe out pop inc cmc mov push push rcll mov xor outsb or sahf pushl loope rorl push sub js add (bad) not or push pop pop dec test inc test lods sarl idivl add mov jle dec push and add jge push cwtl add mov push push dec pop jmp dec cmp icebp jecxz,pn add jmp imul pop sti push mov inc into shrl mov add stc push push mov cmp (bad) pop and cmc pop push push adc std adc push add in add pop jo enter pop hlt clc push cmp lods push xchg xchg xchg out push stos mov sbb out mov out or in iret ljmp pop test (bad) aad pop sar jg test call aaa das jge stos negl xlat leave and std jae adc and call jbe mov inc sub xor mov dec movsl fsubs jp and or and outsl adc sub out xchg test mov and xor mov aaa fistp gs sub dec and (bad) jo cmp mov (bad) mov data16 cwtl imulb lret dec dec fadds jl (bad) mov add test adc fwait mov and ror fistp dec (bad) in leave (bad) cmp xlat xor add popa in mov idivb out pop adc and xchg inc mov fsubrl cmp mov lret ljmp jmp enter sub (bad) push cltd sbb mov add push dec mov mov std inc (bad) out and add jle repnz ljmp ljmp and (bad) adc and in push (bad) xor pushl push shrb and das mov out retw (bad) cmp pop movsl cli xor ja xchg sbb sub push mov sub mov cmp jno cmp mov out daa pop lds ss outsb lcall pop mov add sbb out mov aam xchg ds js jns leave notb rcrl mov mov cmp xor clc call sub push or sbbl out lret clc fucomp jae sub sbb mov adc dec mov add dec sahf push cmp pop nop lret fbld or test xor std mov or test scas ljmp xor nop cmc lcall mov (bad) int adc pop push add (bad) icebp dec mov sub add repz shlb cmp sbb in cwtl shl ficomp mov jnp and mov push sub lahf push sub icebp fsubs popf clc test jmp popa das adc es mov out and inc icebp cmpb sbb and mov mov mov and cmpsl pop arpl add jl xchg or mov lods inc pop xchg ljmp leave pushf push sub rorb xchg out pop push negl in scas imull dec fidiv or movsl cwtl ret or xchg jne das and sub sub dec pop jle and fs mov xor jb hlt es xorl daa repz andb push mov mov jge stc jl imul or adc mov xchg sbb rcrb xchg pushl test popf das clc sub adc mov lret lcall and push add sub lahf cld rcll out or negl data16 sub mov js lret lds mov xor push out mov mov or and lds in icebp (bad) or pop jns iret in adc cmp xchg pop and adc idivl jno or cs mov and fwait das mov in jecxz mov jge jnp cmp aaa add jne pushf mov popf pop xchg rcll mov push dec sub fisttpl mov push fdivp js sar fmull dec and mov mov sub js mov leave stos push sti dec sub clc mov (bad) mov das lcall (bad) aas dec mov or notl push sub xlat push rol fild out cld das sti into daa jge test pop sarl or xor xor push or xchg jne cmc dec sub push dec add fiadd sbb test sbb push push add push mov add lock push mov jp lds divl aas xchg pop sub mov push pop pop xor push adc cmp aas inc scas mov out pop xchg add outsl in sub sub jne pop insb aaa xor mov test out and mov jnp insb mov into xor dec lods xor push push mov loop push (bad) into inc inc push repz mov pop out jmp push add push mov add push or mov push adc fnstenv out cmc jp xor xor int rcr xor push xor pop sub pop push data16 mov dec adc jne lcall cmovo loope rcrl pop icebp mov setge push (bad) sti or loope pop pop push mov imul aam aaa or xchg xchg and adc or adc push mov mov or mov pop or push loope outsl xor push adc shll mov adc cli jne enter notb cmp cmp add add jbe and cmp or pushf ja push add mov xor (bad) pusha sbb and int pop scas aas dec jo fbld in add push add pop add pop push mov fwait test mov sarb add iret xlat jo cmp leave pushl fild loop jo enter in (bad) hlt add cmp orl bnd or adc repz imull clc add fistpl (bad) mov fisub add (bad) out mov mov dec repz mov loopne add xor in cmp sub outsb and stc pop dec (bad) mov cmc sbb push pop aaa clc cli xchg mov adc xor cmpsb into xlat dec xor xchg es cmp cmp push push pop add inc dec jne push shll scas and adc divl int3 test faddp das or (bad) mul adc ljmp and sub xlat popa jmp mov ret add scas (bad) ss cmp cvtps2pd neg mov je xchg clc inc addl int3 icebp nop mov fsubr les and inc and inc push add aad sub stos jecxz pop mov mov fs dec iret stc out xchg cltd or out mov adc jmp rorl icebp and jge sbb jne adc mov out xchg (bad) cmp cmpsb push daa call jle inc cmp mov imul imul rolb mov xor jbe add cmp std insb (bad) daa fbstp rcrb or ret or imul (bad) cmp dec jle and dec sti push and mov xchg adc (bad) gs mov lea mov cmpsb movsb or pop pop jl bound fist mov mov push mov das add add ret dec mov pop or adc repnz cmp xor mov subl cltd aaa imul mov dec (bad) fstpt loope lcall pop adc mov and ss (bad) jbe jmp mov negl and outsb ret sub out (bad) repnz xchg mov enter les sti cwtl or loope mov xchg fidiv cld ret aad mov repnz outsb lsl or push pop cltd lret or inc inc mov xor sub daa cmp out (bad) cld (bad) fwait inc xor mov add mov xchg lahf pop (bad) clc jbe out mov xor xchg jmp lret rep and mov mov out or incl sahf jmp cwtl cmc mov dec rorb add lods cmp sub jg xchg mov sub add cmp and fildll fstpt adc and out or dec sbb or ja jns pop xor fldcw push add or cmpsb or sbb ljmp movsb lods mov not lds mov das out jns fs loope mov pop ja ficomp mov cwtl (bad) sbb sub cmpsl dec lahf jns xchg xor (bad) jmp sahf dec or iret xchg dec pop pop call pop (bad) pop imulb sti mov and and sub lret inc repz lret and sub loop and mov les fyl2x jp inc dec negl adc cmc icebp sub pop jb pop pop les mov xor mov mov fidivrl jae pop out push push mov std cmp das xor xor (bad) or enter mov pop sub mov dec sti and or xlat sub lock rcr inc add add cmp popa ret es rclb and mov mov add bound sbb inc (bad) pop out iret mov lods add pop xchg loope pop adc sbb out (bad) gs sbb adc into push dec (bad) frstpm(287 cmp jo (bad) je mov xor out mov fs shll ljmp cltd inc imul test mov ja sub dec xchg ljmp push xchg inc add mov pop out cmp test xlat in jmp mov test fs dec (bad) je lods jl mov dec mov addr16 lods in dec sub adc out xor sti mov inc bound mov pop inc add xlat jmp xor clc or adc mov mov (bad) mov cmpsl push or movsb dec dec lods sub repz pop loopne xchg add out inc out jo dec and outsl sahf das push xchg rcrb (bad) pop daa repz adc loop xchg ljmp push test ret dec cmc mov dec add mov mov pop adc push icebp jne cmc outsl cmpsl and mov and cmpsb adc (bad) dec xchg ja pushf xchg incb mov dec adc in enter cli icebp movsl pop cs mov cmp ljmp in or or mov pop sub std aad outsl mov jge pushw jmp std pop (bad) (bad) (bad) testl sub mov sti mov mov xor aam adc mov push add sub leave pop xchg imul mov das jg cmp js xor rorl lret aas aad mov inc or xchg cld fwait bound and push cwtl cltd add (bad) cmpsl push lret mov lahf sbb add test in jmp mov outsb push cli leave jb cld jns (bad) ret and addr16 mov jnp pop mov ret or scas xor stc jmp ror mov push (bad) std ret lahf jns push jl shll fs adc fucom jp adc leave fisubr dec negl jnp mov push xlat test sub mov sahf xor cmpsl push fisub das xchg inc das leave sub cltd adc in icebp ds xlat xchg add (bad) lods fstl xor ds adc pushl pop les fabs fistp dec ds outsb adc pop dec xor mov loope push sub lret dec idivl add lds mov pop dec dec xchg and jne fwait lcall lahf (bad) jno pop outsb icebp jo fnstenv icebp sbb lret dec jbe bnd push cltd or adc adc xchg loope ret aas test mov dec mov aaa test leave fiadd or sbb xchg popf les adc ljmp (bad) push mov stos mov (bad) aaa push xor jae fcmovnb mov movsl xchg push cmp add dec loop (bad) std mov xor ljmp rolb sbb xor adc inc out (bad) imul ljmp fidiv mov dec lock clc xor jno insb dec xchg cmc sub out (bad) fisubrl (bad) xlat mov jp je (bad) shrb dec (bad) add mov gs sbb out popf fidivr push xchg xchg loope pushf or pop push lock or inc inc (bad) outsb mov das jg cltd dec push repnz xchg stos cwtl push repnz jnp adc push jle leave mov ljmp push pop call adc fimul cmp test leave cmp in sub push mov mov mov mov xchg cs fadd ss js push cli imul enter and inc andl push js cmp pushf movsl jbe add pop push ret push popf mov or enter pushf pop cld test dec pop add inc xor and sub jnp loop mov and pop movaps and jmp cmc gs mov das sbb add jb cmp rorl sar mov cltd (bad) call and mov cmp movb and mov (bad) mov out out sub or stc add sub sarl xchg loop stc cld and into ljmp fdivrl cmp push pop into pop rolb and into mov jp out push adc les cltd loope lock faddl or add xchg inc jnp test scas jmp or leave fdivl (bad) movsl fstpl jmp or jg imul xor dec cltd jle iret push or popa je leave sub xor fildl cwtl sti add fnstsw cmc aad mov es xchg daa (bad) aas (bad) call xchg push cltd cmp sub sub xor inc fcos sbb dec fdivr xor icebp mov jp in fidivr xor sub push sub iret pushf rorb scas icebp mov (bad) and jmp shll movsl dec jmp aad test scas notb pop outsb call out and inc xchg and mov cld xor (bad) movb and xchg cmp and push hlt mov int mov xchg push mov je gs add rorl push repnz mov lods cld xlat int3 js mov jb pop lret mov out or push mov mov pop add xchg mov rcrl shrl fidivl pop pop add sub ds mov add movsl pop sbb cli jbe stos xchg ror add loopne push imul test xchg clc shlb cmp (bad) xor mov cmp jne xor xchg sti add xor jecxz pop sub push lcall ret (bad) xor in inc dec adc mov imul cmpsl ja xorl pop lret popf dec and mov or inc jno sub fsubl (bad) mov fnsave push cmp aam rolb pop in add sub mov test and std shrl sub pop sub sbb popa lods jne fmul jecxz push mov sub adc jmp outsb xchg mov fstpl lahf push pop push stos cltd sbb mov mov cmc mov ja hlt sub ljmp adc dec mov add add xor sti xor mov mov pop push add sub mov or add ret in lret fs imul mov sbb dec dec js and inc (bad) and sarb cmc cmp mov lock dec push mov jo das ret popf fs icebp andl adc mov dec call fstl sti mov pop xor jne jmp sub clc mov and jne (bad) neg dec dec sub cld xor xor gs jge mov notl jecxz ds pop cltd movsl stc sub xchg ljmp je idivl lods and clc fistp fnsave cmp xchg (bad) mov and pop (bad) jg and and sbb int3 sub jnp sub bound sbb je cmp adc rcl or push loop (bad) pop mov pop mov or out in pushf mov and xor cmp fs jge and mov fisttpl icebp adc fist nop out adc (bad) std data16 iret xor lods cmpsb pop lret lret orb out dec or and mov adc gs enter neg push mov jl sbb or or arpl sti xchg sbb mov data16 sbb popl aam pop and (bad) out test mov pop push mov outsl dec lret mov adc sarb pop stc enter test mov mov loop test xorb inc repz imul std xchg sub je orl dec jne stos ss adc mov nop outsb mull test lret push dec out fstps xchg test into xchg lds xor iret mov mov sub adc mov or mov sub xor repz xchg dec sti mov (bad) jmp xchg xchg sbb (bad) xchg aam push sub xchg aad out sbbb ljmp into cmc mov xor mov adc inc push mov int3 sbb std sub jge or rclb or mov lods jbe scas dec (bad) lret or push loope idiv iret insb imul (bad) jmp outsb js adc dec mov sub bound jg loopne add sub xchg lret popa (bad) and jecxz push dec jmp cli mov (bad) sbb je dec lahf push sbb push adc test in movsb lds lods mov mov xor xlat cmp js dec mov pop inc mov mov outsl call popa stos sub xor scas mov pop (bad) data16 imul loop,pn push push xchg push aaa jp dec adc and cmp cmp (bad) push outsb add sub lock jg mov mov jbe pop jge dec (bad) loop xchg mov mov xchg faddl push or pushf xchg cmp fs sti lods into cmpsb cwtl dec sbb jnp pop sub dec icebp add push sbb or mov (bad) fldz add cmpsb sub fdivrs ret jle push dec jnp (bad) and cli gs lret ret lcall push jns dec xchg mov repz dec in outsl dec cld cmc in cltd adc sbb testl pop xor mov add xchg or mov sub imull pop sub ds je mov pop je adc std movl push cmp adc aaa test pop popa push out or dec fnstenv cs xlat iret xor (bad) push adc je and jmp stc das imul test jecxz mov ljmp lock jnp rorl pop outsb test loop decl dec jecxz daa pop aad (bad) out jp adc jo (bad) je iret pop or and inc fistpll mov push iret das or popa (bad) jmp push sub sub mov daa out shlb (bad) xor mov js ljmp into dec icebp hlt jg sar icebp lcall ret cwtl daa or mov pop outsl xor pushf or (bad) cmp xchg addr16 mov rcll xlat sbb andl dec movsb addr16 xchg fstpt jecxz imul ja mov and mov dec jg in jns in push scas sub sub je fs out jmp jne out jne stos mov ss push xchg xor xchg cmp popf mov (bad) idivb sbb shr jae adc int divb shrb jecxz test xchg push or in fsts fcmovb popa mov cmp push dec mov gs pushl lds sbb push pop jmp hlt and out rcrl out data16 and pop xor adc imul out (bad) out push jnp push gs clc subl xor insb divl mov bound fdiv cmc lret ficomp aaa sub or mov incb push xor lahf inc jns add xor in loope sub ja cmc jp jmp jl mov mov mov or or je bnd mov jp hlt call (bad) aas fldcw daa add into lret mov test stos sub lret in mov add (bad) push or ffree test daa iret ja mov sahf and push out mov pop out sub jle popf fadd repz jle push mov sbb popf sub (bad) push test jle repz push and mov and and in inc mov shlb jecxz add lea cmp out and stos insb or pushf sub xor ja je out or cmp push loope mul sbb xor ret pop fwait leave or and movsb (bad) mov fldcw xchg rorl or repnz out push jle pop mov int (bad) out (bad) fcomip jg dec xor in cld movsl mov ficom xchg xor mov sub jb or dec icebp mov cmp repz icebp loopne stos add or mov dec jmp popf fdiv push add es popa fiadd adc sub je clc mov add andb ds and test sub pushw nop jmp adc negl cli cwtl loopne gs and mov repz mov and and (bad) cmp repz test mov loope dec test add and into lret enter fsubrs shl hlt pushf adc stos jecxz jle xor incb jg pop xchg mov aaa imul jo out stos xor sbb add mov dec scas sub sub add add and std pop fwait repnz out jb push sarb mov int std sti jp sarl sub ds rorl mov and mov (bad) sahf mov jb lahf xor xchg add (bad) scas sub xor mov adc pop addb cmpsl cltd outsb sub das rcl adc sub push pop add and test iret out mov pop add mov add sub ret sbb sub (bad) and pop inc sub jg xchg icebp pop fcomps sbb ret jle add mov adc div in sub cli movsb push jae dec push xchg add and ss add lock decl movzbl xor xor ljmp into cmpsb loopne rorb cwtl aad add and sub or jae sub rcll adc out sub or das xor or jge sbb and cmp mov (bad) push or adc fcom mov or enter and ja lock jb pop out das clc dec pop dec roll aam leave icebp or popf ret jmp add decb ja fdivr aaa mov cmp popf rol pushf aas mov or inc loope cltd ljmp loop pop mov cmp push test dec sbb ret test mov xchg pop and shrb adc push cmp aaa notb pop cltd lret cmp cmpsl insl dec or pop pop and jmp test test das cld push lret (bad) loop pushl dec fcoml pop fstl xor pop outsb jne aaa xor mov push das mov lock jl xchg ret mov push shll cmp aas cmp add and push mov mov out iret add mov and sbb outsb out mov jmp jo sub test mov shlb neg mov xor xor lods insl sub pop imul xor std xor enter xchg test inc or xchg test xchg fwait sbb and addr16 lods jl push ret jl ss imul hlt mov xchg add add mov or xchg fs pop add xor clc hlt xor out les cmc adc dec cmp por (bad) xchg test jb xlat repz add pop pushaw dec idivb das dec cld rcrb dec sub aas xor sub popf dec push pop jmp mov jge (bad) xor cs test jae xor cmp (bad) adc push cmp add or inc sub mov imul mov cltd cwtl sub and and add ds mov dec call movsl (bad) pop push jl mov sbb inc xor adc push mov shrl dec xor cmp repnz mov out jbe sbb mov cmpsb insl xchg adc mov dec ljmp dec clc popa mov xchg xor repz sub test mov or mov sub xor pop pop xor adc and lods xchg nop daa and dec sub mov sti mov jmp ficom add (bad) sub outsb pop out clc mov mov and dec decb fdivs dec push test icebp mov or shrl out fildl or loope shrl xorl dec push inc xchg jnp or and or pop push iret imul out xchg in gs push and fmull (bad) jecxz xor sub out xchg jecxz jg push ljmp or das sub fiadd (bad) mov sub and int fmuls pushf lret and ja,pn gs or sub and sub rcrl addr16 scas lds mov cwtl jp lret mov mov les jle mov dec stos lret rcrl xor clc cmp or mov das outsb popf mov (bad) ljmp mov out popa or aas sub cmp jg (bad) aaa daa mov lret cmpsl insb jp sahf sarl jae jbe lods inc and icebp push sub sub mov adc loop xorl push (bad) decl (bad) and neg icebp icebp inc xor and idivb sbb and add push adc and jmp pushf clc arpl or xlat push push sbb jbe dec (bad) cwtl aam iret or mov mov movsb and scas aaa or shrb sbb mov (bad) loop jbe (bad) (bad) lret push ret push mov push pusha pop mov shrb jns xchg jmp daa fistl jo lret and xchg mov sub sbb push cmp cltd mov mov mov dec out jmp mov out adc push mov or inc add ret pop cli fisttpll imull jns xchg xor push xchg scas mov pushf xchg sbb push dec outsb insl push inc push mov fdecstp push ds sbb loopne (bad) pushf mov jbe or and dec pushf add inc and mov hlt inc (bad) out add xchg sub into jne (bad) sub sub in dec mov xor (bad) jb mov jg mov xor or int push cli int ss inc and push into mov arpl imul pop popa xchg jmp dec es and and cmc (bad) jo or (bad) leave push jae xchg push or in clc scas mov imul adc cmp das fmull (bad) dec out les (bad) mov lock repz pop mov pop stc lahf push lret adc xlat (bad) xor lret mov jmp adc push test stos repz xchg dec fisubrl push aaa or loop xchg cs pusha rorl into lret push push pusha inc and mov mov das add sbb in jne fcomi push shr aas clc iret movsb pop ret jmp pop xor imul stos fstl and xor mov mulb (bad) out dec iret je jmp gs xor (bad) ljmp xor mov pop out gs push xor sub lods jmp fwait xchg xor inc es int in jmp or js mov mov dec lea dec and push sbb sbb mov mov (bad) inc add fistp call sbb out push stos gs imulb outsl clc out fmull mov and push clc popa ret ljmp insb int sub movsb (bad) ds (bad) jae mov icebp ds fdiv jmp sub (bad) cltd ds sahf adc cwtl rcrb lds sarb daa sub (bad) mov daa push sbb int3 add (bad) lock inc imul (bad) js mov mov add sub mov movsl jae cmp (bad) mov dec out sub lret xchg ror dec insb ljmp mov fildll xchg das xchg sub out cmp (bad) push in out lds jno adcb mov decb sti or out mov pusha cmp cs fdivs (bad) jmp dec mov push jle and out fwait xlat fimull (bad) pushf jmp rclb int cmpsb push xchg cli fldcw out jns xor hlt mov insb out fs xchg stos bound pop lds mov push cs mov vpsrad xor xchg mov testl repnz xor jo pop or adc lret jmp repz lea push sbb mov insl jecxz pop and push add (bad) mov fisub inc xor fimul ret sti or insl std movb out dec fidivr fs das rcl mov pop test pop fcoml add cmp pushf jmp test ficoml push mov out jp sub push in ljmp inc or push xor ja adc sar dec xor sub test mov push xchg or fidiv jl leave jl and jmp movsb test xor scas bound sbb enter out or dec xchg lock mov sub mov inc in int3 mov or mov add add sti add xor ffree sub sahf pop sti inc lods repz jmp add leavew hlt xor fbld sub mov out mov sti pop xchg out fidivl push add sub lret or pop daa pop gs daa je push into fisubr sarl cli xchg xlat jl mov repnz movsb ljmp cmp enter jmp daa pop mov add out sub adc or loop rol mov add cmp lcall pop inc nop je add jbe adc inc push sub jbe cmpsb stc dec (bad) (bad) scas adc adc add enter adc lret fisub or inc adc mov dec pop mov test adc adc repz mov (bad) cwtl (bad) test scas sub aaa or (bad) scas xchg sub jecxz lahf xchg mov fcoms xor add or mov jns pop xchg negb lock mov dec inc inc and push adc adc sub loop loop xchg inc (bad) clc in mov push sbb mov leave (bad) bnd mov nop cmp (bad) inc adc mov or out mov insb cmp negl ljmp int3 divl in xchg aad push repz add je pop adc fucomip adc sub jmp add or push xor aad sub aas and push jmp pop mov jmp lcall mov clc pop mov sbb adc sti leave lret notl bound pop push sbb rcrl or push out js jae mov sbb push mov repnz adc flds int jnp jae pop sub rolb repz push pop jecxz jp out cmp pushf inc mov xor jae das jae or notl fwait mov sub push cmp cwtl cmp or insb adc call mov fldenv ja fisubr cmp popf icebp mov mov pop inc outsl (bad) (bad) add xchg push adc bound rorl fwait adc inc mov mov mov and dec aaa subl aaa mov pop leave lods sbb mov shrb ljmp xor push fs call lods clc into xor xlat xor pop mov or pop lea sub and test fisttp lods jo pop mov sarl lret leave fucomi push div cmc shr testl mov adc int3 pop xor call notl and andb ljmp xor fmul data16 push in cmpsl push jno mov and jge push mov mov ds cmp mov nop jmp cmpsl sub adc jmp mov lret pushf dec mov movsb sar daa dec mov sub cs cmpsl iret dec lret sub xor popf mov mov adc cs lret and mov jecxz aam sub or lret or jbe and pop add sub repnz loope lret mov outsl pusha mov xchg sbb (bad) ja push mov jo mov mov xchg or mov sub nop push or rcrb out pop and sub loop,pt sub mov and jge cmpsb outsb mov xor jge or mov jg out imul sub lret inc dec dec pop adc call aam cmp jae iret in sub (bad) mov cltd inc aas mov bound add pop adc scas loop xchg out addl stc push jns mov rclb aaa mov nop mov xchg test ljmp jg or into lcall lods jb lods dec mov dec repnz gs xor ljmp out xchg and pop cmpsl fist pop out mov (bad) jb popf out jmp and repz icebp in xchg add ror sub in scas push cmp xor and xor add out rcll sub stos lret and cs dec scas les fcom repz insb pop dec imull cmp cwtl movsl sti loop and sbb or add das mov xorb rolb inc or add loopne pop jno lods lock mov sub cld (bad) leave fist xchg push fnop jg xor push sub xor loop xor cmp sbb int3 test (bad) (bad) jb mov insb xor inc and and push mov push out mov das or xor testl pop push push movsl inc test lret ss dec dec jne mov lret aas dec popf xchg or adc jo mov pop lods xor out aad mov daa inc icebp leave jmp gs push dec xlat sti cltd cltd imul jg pop add sbb nop adc xor popf cld xchg sarb jecxz or sbb popa notl icebp das pop int3 mov lods push mov add fisubl xor (bad) jmp movsl bound ja jno ds (bad) fcompl fs sbb dec rclb inc xor jg push jmp push sub sub dec arpl mov mov jmp int das scas or jne mov sub sbb mov add pop ds xchg sub lock xor pushf mov push xchg and jo mov cmp jno pop cmp sub jl xlat loop adc cmp sahf das mov pop jne adcl ficomp das outsl int3 repz xor add mov out pop push out sub int3 rorb mov outsb mov sar js cmp ja adc loope fsts and mov stc push popa xor mov mov or in popa movsb les int int3 push into push inc push das mov add jmp cmc insb jb cli adcl or xor pop mov and test pop sti jecxz xchg out fdivrl adc nop fisub cmp sub cwtl mov add cli mov cwtl pop pop stc jb pop pop add out fs iret mov pop ficoml test ret jne cmp xlat repz sub fildll mov pop adc pop pop sub xchg jno imul push push rolb cmp dec lahf xchg inc sbbl mov mov pop add or lock mov and dec pop jg fildll xchg pop mov lcall cmpsb inc pop mov lcall pop xor cmp test and aam pop popf popa sub sub (bad) notb sub cli iret orl cmp ret (bad) push nop xchg iret lods lock pusha dec imul sub cmp pop dec jns cmp sub jg inc dec out lds icebp daa data16 jecxz js (bad) in scas mov or lods or das mul iret lods cwtl and inc xchg das inc and std and into mov push out fcomps imul push push mov repz or fcomps mov push mov cmc roll in sbb mov into cmpsb cmp ficompl jns call repz rcr outsb or xchg dec xchg out jmp (bad) mov and or lods pushf das (bad) mov dec adc les test loop lcall mov stc sbb sub mov adc scas mov pop bound inc (bad) sbb mov dec mov add or jp jb stos adc call lods mov in roll mov mov xor ljmp cs adc scas loop leave sar pop add mov divb idivl push push xor or xchg clc out jb repnz xor mov and scas ret cld jle cmpsb ljmp push sub notl cmc jnp mov (bad) fnsave dec and lods in mov push lds out cld mov and sub jp pusha loop hlt or inc mov inc popf push mov dec imul mov jae call rorl xor add lea call lret xchg das leave pop sbb fistp jb outsl (bad) fdiv std dec in iret mov sbb xlat scas pop cwtl adc rcrl xor mov insl cld xchg in xlat dec mov add out test dec pushf loop sub mov cwtl adc pop stc add in mov or xchg mov imul idivb xor call stc jne aad orb add mov lcall andl dec adc push js (bad) sub or adc in decb xor test sub dec push xor or xor and push dec push and pop push fidivr orb fucom push jmp les fisubl out lds outsb xchg dec out jne push jae stos imul cs jo (bad) mov sub scas sarl sti pop add out imull lods adc or sub aaa and xor lods push push (bad) mull or lea aad in mov aam pop ja iret and imul or and add pop sub adc xor cmp mov (bad) and fwait push push mov es jp or add inc xlat xor cmp push xor pop add dec or fnop and sbb fildll movsl push in lods sarb mov lods repz loopne nop jmp lea mov sub mov mov sbb add iret mov mov ds (bad) mov insb lock xchg dec (bad) test test mov (bad) rorl sub cmpsl les imul sbbb jmp xchg mov mov lret call push pop hlt adc sub jno test or lea lret mov clc and inc add cmp sub rcll mov je pop lret loope jnp fcmovb jp negb faddl dec sti mov sub scas fsubrs or jecxz lret mov test xor sub (bad) sub jmp ret pop fisubr mov ret out ror cmp pop or mov push js aam sub je xor gs out ret stos or cli mov xchg (bad) fwait lds and sarl add cmp test out je lods and call xor xlat mov jne push loope,pn cmp mov cmp sub fidiv icebp outsb imul mov and xor xor cli xor addb and call scas nop imul add in pop cmp (bad) sahf lret push xchg mov fisub cmpsb cmp (bad) and or mov xchg sti mov pop inc lahf inc jg sub mul mov sub (bad) into jnp fs imul pop jns imul mov in test or mov cs lds mov sbb ret sar pop mov dec repnz cmp sub rcrb lcall mov sub push lods jl jb sub push ja pop es imul xchg sub jne and add imulb lret fimull push sti or insb movsb or (bad) jne cmc mov stc imul push push xchg pop jge xchg mov dec adc movsl adc push xchg sub add popf sarb mov loop dec fmull (bad) xor and mov dec and movsl pop dec enter sub lock sub hlt (bad) pop cwtl push (bad) iret push icebp xlat push rcr or fistp or lcall xor (bad) xchg jbe inc or lds or mov add adc stc push pop sub mov sub or (bad) daa jg cli daa jmp lds ret inc cmpsb adc cltd sub scas xor pop inc (bad) mov aad in cmpsb pop mov mov fimul leave add ds repnz and notb repz xlat and add add xor rcr pop cltd and adc xor push mov daa dec sar xor enter ja sub leave (bad) push sub loop lcall mov iret repz movsl lods push sub cmp (bad) aad pop and sub popa fldcw imul imul cli mov fyl2xp1 imul add mov mov cmp add inc jo popf jge sbb ret inc addr16 in scas mov shll add fldenv xor sbb imul push mov loope movb scas cltd sarl cmp call xchg jnp add jg xchg adc and push mov add leave imull jno and lods mov mov out mov rorl jg mov (bad) sbbb push mov subb fldt cmc fldt roll dec orb and pop or fistpll add cmp daa lret sti sahf adc ss hlt lret jmp jnp out xchg push lcall sahf xchg cs in adc out mov xchg push xchg orl xchg int3 (bad) mov out push pop jmp push neg xchg repnz sub dec cs push or push or addr16 ljmp jmp push xor ret dec cbtw jb enter (bad) pop in inc cmc and add sub hlt not test mov dec pop and fdivrp mov xor in jo rorb sub push lret push dec out jne mov int sub (bad) sbb push inc xchg xchg mov icebp pop (bad) xlat push jge inc mov cmp mov stc dec dec inc lret jl lret dec mov hlt sub (bad) mov test ret lods andl add jmp mov pop imul lret dec rcll pushl mov cmp test lock decl jg dec out mov daa (bad) sbb fstl rorl cs xlat fldl2t loope lret (bad) mov (bad) fstl jge out pop cmp (bad) fnsave imul xchg rorl mov call shrl mov cld and (bad) jmp movsl fnstsw (bad) xlat adc roll xor sub mov pop (bad) push and xor ljmp jb sbb pop mov or or je jns or mov lret mov test mov nop repz leave cld outsl dec jo and mov idivb inc pop or stc imul cmp das frstor jp ja pop mov dec call sub and (bad) adc pop sub repnz out (bad) shll call pop inc mov divl outsb aad repz in xchg pop mov mov xor adc pop stos packuswb (bad) jmp cmc sbb push mov je cli mov aas ss push mov lcall fcmovnbe mov rcrb and cmp cmp (bad) repz insl sti sub loop pandn cmpsb pushf aas cmpsl jbe pop adc add and dec add lret leave dec xor mov cmp or xlat ja dec push in inc testl fldcw mov and mov pop mov and dec loope int jne jmp loop adc add mov push ljmp mov int3 call or mov xchg mov sbb dec bound mov pop cli sub add ret sub lods pusha sar cmp repz (bad) cmp adc (bad) je adc clc fsubrl sbb out scas sub imull repz jecxz lret nop push sti mov cmp scas arpl push pop cmp sub shrl (bad) (bad) lret das adc and mov push imul xchg pusha adc fmuls ja mov ja in pushf mov decl out js jmp push daa push cmp pop mov mov clc testl movzbl jo mov push daa test cmpsl ljmp xor add xchg xor call xlat dec dec mov loope add xlat int3 xchg mov dec xor and mov dec ds xor mov jge (bad) loop sti sub mov xor xor add mov mov stos and stos jp cwtl gs pop or aaa in cli repnz insb dec test fcoml notb xor cmp sub mov xlat aaa call xor (bad) cmc adc xor mov stos icebp stc push cwtl cli sub out mov adc (bad) xchg test idivb and xchg xchg mov add aaa je daa shll fs mov inc clc xchg mov mov add push jg fldl xlat aam loop (bad) push dec adc add mov leave shrl loope mov stc xor mov xchg push pop sbb je mov leave mov inc lret bound (bad) mov cli and or inc rorl xor xchg aaa (bad) inc jmp push (bad) pop fisubrl and push add loope inc inc in cmp cld mov leave and jnp adc mov xchg adc dec out mov daa jne mov sahf shll ja (bad) je sub (bad) fcomip ret sti xor rorb mov add mov ljmp push cld add cmp bound add and and push dec daa add push or mov pop push mov mov xchg mov add xlat cmpsl xchg mov sbb pop ret fiadd xor lahf jbe lds pushf cli add dec aad js dec sarl jbe xchg xor jns mov push pop in push and lret pop jno mov sub mov and push adc dec pop repnz lret lret jns lods add sti test inc mov repnz aas sub imul ljmp sub pop mov sub daa and iret push or jg rclb mov pop pop into lods cmpsb sbb icebp jns jle mov cmp or xlat cmp (bad) or (bad) sahf pop pop out decl imul inc mov inc in xor fnstenv pop jae movntps pop adc mov (bad) jge,pn insl ret inc scas adc dec cwtl pop add mov jmp notb or (bad) xor add ret and pop into and xor push mov mov es xlat gs dec and push aam leave imul sub xchg repz fldcw loope enter add push testb mov adc dec pop dec repnz xlat add mov and movsl jo sahf loopne pop and add inc xor sub xchg lock push jne je or clc adc das aaa in and xor mov xchg pop mov out mov je outsl mov scas mov iret pop jmp mov xor xor leave (bad) push arpl and add pop aam or daa push call loope xchg adc sbb mov ficomp pop sti pushf inc cmp sub idivb daa imul (bad) xchg push sub ret popa out cmp cmp mov lret icebp std cmp mov mov xchg jmp cmp loope sbb stos mov out repnz xchg mov and cmp out xor aad xchg mov push push out push sub cwtl out xlat fs mov adc add notb cmpsb push shrl mov jle cmpsl mov ffree and mov add sub in lds add fwait ljmp leave insb (bad) das test mov adc adc ljmp mov or xor xchg shr xor stc cmp mov sub gs and rclb aam xor ficomp push dec (bad) stc fldl push (bad) adc shll adc pop dec iret push std push lock pushf jle jmp ret ljmp jecxz jg fs repz mov mov xchg ja push cltd dec sub ds clc and repz imul aas or mov push push xlat jae fcoms mov aaa adc push repz notb std and mov cmp int push mov xchg ret add ret test enter (bad) xchg adc xchg shl enter xchg flds aaa cmc jae xor in xor repnz cmp mov mov xchg pop adc cmpsb xor add icebp ljmp sbb add dec pop mov lret xor cmc int3 mov jne push popf rorb gs lods nop jmp into xlat pop mov stos or or and mov fdivs or push cli call (bad) sbb mov mov xor daa cmp sbb (bad) out push repz fwait mov or out pop outsl pop sbb push jb or jl xlat xchg pop mov and jno sbb mov nop stos or cmp loopne pusha lea out push xor pushf mov push mov xor ficompl pop dec repnz pop pushf dec sbb in xorb jge mov in xor pushl xchg push (bad) mov sti out and and fistpll mov or inc adc (bad) mov adc mov ret add data16 and arpl xlat adc in lret popf ja ja pop rep pop mov dec in lock popf int3 xchg pop stc cmpsb sahf pop repz inc sbb popf mov in aas mov jmp sarl or rcrl arpl or jmp cld (bad) movsl movsl xor xor lods outsl mov xor xchg dec xor sub lea test adc push test (bad) repz or add and enter int3 xor rcrb mov arpl lret imul cmp sub outsb in mov lods mov sti mov push and js jg ret mov sub mov or outsl rcrb hlt push mov pop fidivr ret in mov jg cmp mov mov loop cld sub xor fsubs pop or repnz xchg shll mov and sbb sub fs inc mov push das fistl sub cmp nop pop push push popf pop mov icebp xchg add push mov aas ret pop sti or fisttpll sahf stos or sbb mov lret mov pop fwait mov xor mov pop mov and bound cmp mov das adc and mov mov cli divb das pop fsubl cmp inc aas and fidivrl test pop and lret mov lret inc dec mov or adc cmp sub lcall dec negb daa ret dec fnstcw pop es pop icebp push jo and ficomp mov and lds rcll movl lret lods fisttpll lret data16 fisttpll test lods push mov loop cltd add aam sub add dec sbb sarl cmp movsl sbb aas mov shrl outsl pop lea dec addr16 adcb mov shr mov ja jge leave shr cmp shlb pop bound cli gs mov push jo icebp ds push dec lret and sbb in or fldcw gs sbb jne lea mov (bad) push mov pushf enter daa pop add mov out fnstcw rcrl sub je dec mov and icebp pop ret inc mov cmp mov xor fs lods jmp rorb and or out test pop mov mov es pop fucomp out sbb inc (bad) sub hlt mov loop roll push or and loop test sti pop mov dec icebp popf in mov imul mov or ficomp inc (bad) mov sub push in adc sub into int lret outsb je lea (bad) rcll roll push lods sub jbe inc fstp fprem dec jl or int hlt adc push call cmpsb stos jl ss stc inc mov outsb mov sub inc ret imul fistpll jo test mov lods jbe jne in arpl sub push or shll mov jnp incl mov mov xchg inc mov test sub jecxz mov add gs cmp scas arpl dec mov (bad) in movsb adc (bad) icebp xor loopne repnz out ret sbb inc mov movsl mov sbb xor stos sbb sub (bad) jae (bad) mov sbb mov scas sub jmp (bad) repz or mov loop push movsb cmpsl inc push mov and hlt mov les (bad) push js rcr mov bound dec cmp daa add dec lock and pop push test ja (bad) cmp sub ret adc jp popa int sub xor cmp les or rorb inc and (bad) or int3 cld ljmp nop sub jp rorb xor jle,pn sub test stos test movsl stos cmp jle das icebp xlat stc mov (bad) mov fldl push (bad) pop es push pop mov enter mov mov stos sub insl (bad) iret add movsb cli lret pop (bad) pop add pop inc pop inc or adc add mov cmp gs xor push or (bad) mov mov push aam inc add lcall pop icebp cli sub jl je sti cwtl testl fidiv pop sti popf jecxz sbb lahf cwtl lahf sub mov or sub or loope fcmovb out mov hlt orl ljmp fmuls (bad) aas fild into jecxz pop sub cli enter leave dec pop cmp ss jb and jb daa sub mov in in les scas mov jmp aad fiadd push and jecxz leave mov cwtl pop ss ljmp xchg xlat mov lods xor jmp (bad) push lods xchg inc jmp loop (bad) leave fldcw push jnp jo xor fimul ret or leave aam mov mov (bad) sub xor jp mov sbb decb lea adc outsb xor cli emms iret pushf mov fidiv mov dec mov xchg sub mov in das and mov in aaa pop gs mov push fimull (bad) mov lods pop shr and ficom stos pop clc outsb mov aad vmovdqu cld mov mov dec aam lds adc and mov (bad) dec jbe fs jo movsb sbb pop fsubr mov mov int3 and push adc dec jno xlat ja cmpsl dec mull (bad) dec cmpsl out shll dec mov loopne add cltd dec movsl sub dec pop pushf or jb push fild adc sub or inc mov stc mov out adc add nop adc roll cmp icebp or mov rcl and adcl mov leave in test mov inc bnd mov cmp mov jmp cld daa aad je inc ljmp popa int3 and es or xchg rorb jecxz (bad) test std mov ljmp lods add mov leave cwtl pusha xchg pop dec push inc pop pop lods imul pop scas outsl add lods jle jae and lock (bad) mov ret in dec jmp pop movsb imull movb popl mov mov push std ret cmp sub (bad) and or leave push mov out adc push (bad) leave xor enter in mov push jg loope loope mov fcompl pop pop pop push icebp xor frstor jle mov and sti out jl adc jne and cmp (bad) rcl es pop cmpsb sub das jnp push leave sti sub sub pop idiv mov mov mov es add into xor mov lods int3 dec repz push pop cld aas xor imulb ljmp fstpt dec pop int3 movsl ja jb loope imulb ljmp out jno imul and and push sub (bad) ja ficom cmp sub in cmpsl jnp adc xor (bad) adc add dec xchg (bad) fidivl xlat jmp push xchg shll (bad) mov sub pop lahf or inc xchg push xchg dec imul and lock or sub rcrl ret int3 jge addr16 std inc add add dec mov sub (bad) in or inc and push and dec (bad) scas addr16 xor jns subl mov cmp cs sub inc and (bad) stos imul sub sub mov les jo dec (bad) mov in jecxz dec mov jl enter pop pop ror decl pop xor scas lds stos or faddl add sbb cs mov idivl flds mov ja (bad) sub fdiv xor jne les add add mov imul push or sbb out ljmp inc and pop ret or ja (bad) (bad) jmp fwait outsl js xchg popf mov push daa movb sub xor dec in adc xor aas cltd lea ret fnstcw adc lock out pushl or mov adc mov xchg popf push popl dec leave shrl negl pop mov ds (bad) stos lods test imul inc shlb adc cs mov sub ljmp xchg sub cmp cli negb enter lea sub jo ret push rcr or sar sub push dec leave and and push stos mov sti repz int3 cwtl push sub inc shll xor sbb jo xchg adc mov inc and sub fbstp inc push je (bad) lods or sub lahf (bad) and (bad) stc xor jl push adc dec movsb (bad) push inc popf jns add leave mov outsl jge mov mov pushl fist jmp mov push movl or cmp (bad) out cs pop jg hlt es imul mov cmp rcrl movb xchg cmpsl mov test mov (bad) ljmp iret adc xor sbb mov sub cmpsl pushf jne out nop leave xchg mov adc out inc sub sub (bad) lret or add sub mov pop mov jnp (bad) xchg mov (bad) jo xchg mov mov lods fisttpll aad addr16 sbb xchg xchg pop mov jge cmpsl stc pop icebp int3 push cmp scas xor inc dec xchg dec call dec sbb test iret stos lret pop das ljmp adc pop adc les jmp jp cs sub lods xchg dec sub cld and roll incb in xchg or clc xchg (bad) dec mov or mov ret rorb cmpsl fs cmp pop xor jge testl xchg jecxz jbe insb and test insb push mov lret ret aad mov call in xchg cmp in xor cwtl sub or cwtl sbb sub and xor mov das ljmp lods loop or xor negb ss xchg inc inc stos adc or (bad) loope ja outsb xor lret lds pop adc pop cmp test push sbb movsl and or jg pop jl push int fidivl mov stos cwtl pop xor out add inc fwait mov jg subl movsb (bad) mov adc jge mov dec pushf imul push (bad) scas lret mov test mov hlt pop bound ret adc dec (bad) mov sub pushf xor idiv pop test leave repnz and lods movsb das add sti popf daa nop jo ret test test add iret xlat mov sub dec cmc (bad) xchg idivl sub ror (bad) jne xchg movsl jns lahf loop (bad) jmp out cmp out hlt sbb push sub sahf and fs sbb mov sub int3 loopne dec fsubrs mov frstor or rcr les ficom xor sti popa pop xor adc cmpsb cmp sub xor test sub pop in stc push cmp or fild mov int3 inc mov in repnz out imul addr16 mov inc int3 or cmp adc xor ljmp push inc add sbb add lret cld data16 lcall hlt lcall jmp scas je out test sar mov sub hlt cwtl pop add mov or aad push loope jl popf lds pushf adc stos sub xchg pop pop mov stos pop or xor sti push push mov ret add pop dec jle add mov mov stos popf or mov dec pushf and push xchg inc sub fwait xchg push fsubrs idivl jns mull dec mov dec stos adc stos mov imul ja leave add jg fidivrl mov pushf mov and pop ja dec negb (bad) aad dec bound fistl sub in imull and (bad) sub in xchg ss repz mov jmp cmp sub jno jns iret out shr ret test repnz call mov shrl mov repz je scas sub (bad) fwait insl or mov shrb in or pop add push cmc shlb sub mov cmp inc pop dec out xor test (bad) mov pop lret mov mov pop outsb and (bad) sub rcrl push sub (bad) aaa xor jmp dec mov adc enter and fsubrs xchg test cmp (bad) repz mov add jb iret adc cld pop movsl add xor fs imul das negb dec push loope xor mov mov xor negl jle cmp popa adc ret cmp and enter xchg xor int and mov pop cmc pop ret mov or inc add push insb leave pop xlat aad jmp lret and jne inc clc sub fistp pop xlat rcll gs out or fwait sub pop cmc jns xchg lret lods pop movsl out xor pop jp aas dec stos xor mov movsb (bad) mov movsl test fcmovb push mov in iret mov scas and mov negb push les test (bad) cltd fmul and sbb icebp mov xor fs orl jne lea sahf xor stc insl sahf ss test fbld or adc sub pop and fcomps sub xchg stos jb mov hlt push add (bad) mull lret and add mov jmp inc jge mov mov leave mov (bad) out add inc or imulb fpatan jg jecxz adc icebp mov adc adc pop lods (bad) mov mov xor or movsb and add out and (bad) sub mov push mov fstps repnz sub jg mov inc push aad out pop fildl bound and mov sub and (bad) sbbl shrb or das adc jmp xlat leave rcl mov push xchg clc repnz xchg dec out lret pop and jne adc cmp mov repz repnz fbld test and scas xor push pop je push sub xchg mulb cmp out cld das mov cmpsl test cmpsb daa mov push pop adc and push mov jbe insb scas pop mov das lods (bad) iret xor adc dec outsl xor dec jmp jae (bad) inc sub ja push popa (bad) sub (bad) mulb cwtl cmp lahf jno mov notb pop push inc or (bad) fildll push aaa sbb lods lret fstpl mov and or sbb ret mov dec ljmp mov div stc push dec in dec and fwait sti ffree imul add pop add mov int3 (bad) mov pop xlat dec loop inc imul ret add fs bnd sbb adc (bad) leave movsl pop or ret add adc iret cmp repnz dec in mov pop fstl xchg mov ljmp push pop dec and ret jg jge mov push mov inc sbb rorl xor cmp insb fadds mov jns inc or pop jno rcl imul sub aaa sub icebp sbb je add xor sub cmp addl hlt sbb or outsb dec mov aaa movsl (bad) sti inc sub int mov adc cmpxchg push jns xchg test jbe leave inc add xor dec scas (bad) jnp test jne and mov (bad) int lds hlt daa add mov jp push dec iret lods popa pop mov or pop test stos sub out mov jl xchg mov pop ret inc (bad) scas popf push arpl fildll (bad) mov or pop mov mov pop sub dec ret adcb (bad) and xchg negb sahf (bad) sbb push mov ss int popa sbb xchg adc add jne sub lock add sbb sbb dec popa cmp out xchg xchg inc dec or adc (bad) idiv sub addr16 xlat stos or jne fstps mov mov dec outsl repnz clc adc call in mov imul std xchg and movsb pop out and les fldenv in in (bad) xchg lret sub push or scas mov jns xchg sbb sub ljmp cld add add pop stos test add repnz addl or cmpsl jnp mov mov pop pop adc ja sarb out icebp lret imul ficoml sub (bad) jp jle test lods ret movsb xchg cltd out cmp sbb inc jns lcall and cmp add inc add cltd insl mov clc idiv and into jb sbb mov xchg jbe jmp or and push test jmp int3 enter mov xchg fistp in test push adc xchg pushf mov or xor xor xchg lea int3 gs xor mov sbb jl jmp cli or rclb add jle dec fidivr je jb jno int3 or negl mov pop rclb stc xchg xchg stos adc xchg or and sub sub test int3 pop ljmp mov mov ret insb lcall add xchg cwtl insb or mov aad dec dec roll lea repnz repnz shrb sahf hlt mov mov add cmp add icebp es inc test mov xchg clc lret ret or push icebp popf fwait rcll aas je in dec dec xchg gs mov loopne mov mov (bad) dec sbb jmp jecxz dec mov rclb mov xor sub (bad) sub cmp data16 push fbstp add test pop mov lahf add aam jnp insl ret les push push sub cmpsb mov ljmp mov addr16 fisttpl and xor mov (bad) or pop inc mov int3 jae xor dec dec push ret add cmpsb clc sub pusha stc cmp or xlat push or adc add lds (bad) dec shll push shll (bad) sub cmp fldt testl sti loopne cltd xor call pop jbe dec out mov (bad) xchg mov sbb dec daa pop xchg mov mov scas hlt (bad) imul outsl call sti inc cmp sub pop lahf dec jge jns inc out mov repnz adc fmul rcll pop mov push inc shrl cmp jecxz cmp pop repz inc pop sub fdiv rcrb and neg cs gs fsubs jmp lahf aam imul inc fsts cmp jae and in add or pop inc ljmp pop pop add stc pushf adcb mov into std pop pop pop out xor scas testb and cltd mov sbb inc pop sarl test push jge enter movsl fidivrl outsl cld iret movsb test lret leave jns movsl decl movl outsl mov test sbb mov xchg int3 mov xor mov cmp push pushw les (bad) lret mov sub incb and xor mov fnsave sub rcr fdivrs push icebp mov xor mov fisttpll repnz out and mov or mov aas stos jecxz sub dec pop xor pop in mov cmp dec shll xchg mov fmul or (bad) and jbe push cmp call cmp and es repnz cmpsb mov sbb decb dec repnz mov into push out and orl or xchg sbb jbe call xor sub dec jnp add cmp repnz cmp xorl nop frstor mov (bad) sub pop adc mov push inc push dec adc mov pop mov cli mov inc sub sub leave xchg enter and in fs mov cmp and stc jg ja add mov in xchg pushf add jnp inc and lahf jl in out sub xchg sti lods sub pop jbe pop pop inc seto lret jb call xor inc xchg mov jge sti lcall mov mov test jmp mov mov shrl (bad) rcrl mov shrb insb pop movsb mov cmp out jno out and out and outsl mov sub les shr jle fisubrl xor and lock sbb lret ljmp daa pop cltd jno lea lret sbb xchg jg in mov (bad) adc xor cli jecxz pop mov dec (bad) mov xchg adc or and cmp leave mov cwtl sub xchg pop adc lahf push sub mov out jo dec scas ljmp testl xor jno xor fisub push or dec (bad) xor stos bound (bad) daa inc fidivr add xchg pop scas adc jb ret jge iret dec jmp pop test leave inc cmp adc mov out xchg (bad) xor cli das mov sub test push xchg (bad) popa cmp mull (bad) pcmpgtd push leave mov pop movsb xor dec mov sarb xor fstps dec and or jecxz loop aam pop into ds js xor xchg cld jecxz ret jmp scas repz mov aad pop rol imul pop enter (bad) cltd loop and sub push adc outsl dec dec and aam push jo loope pop mov jmp cs pop mov xor lret pop shll out adc stos sub sub sub or sarl sub in sbb test and jmp xchg sbb and popf outsb ljmp sub add cmp lahf xchg rcrb ja sbb ret adcb push loop idivl pop mov add subb pop and jg mov pop add insl inc mov sbb shll add icebp call add lcall mov cwtl lcall xchg rorb xorl dec out les push dec add adc pop call jmp fs hlt jp lahf pop (bad) loop mov xchg popa cmp mov dec pop sti and push mov push add ljmp gs roll dec dec test cli fimull lods sbb xor fimull (bad) addl pushl add adcb fistpl insl dec in ss repnz sbb lahf push add popf data16 stos mov std jle repnz sbb or sti add sub pop push nop inc mov sub loopne pop jnp pop shll and je push add add aas add cmc enter xorl popf jle imul push (bad) or or mov pop cmp dec inc and and xchg adc sbb pop add lds mov pop (bad) idivl dec mov insl add mov cld inc add pop mov stc xlat inc pop sti mov mov jns (bad) mov cmpsb (bad) add xor loope dec pop stos dec pop test loop push and rep sub sub xor sbb mov inc popf push lret scas lds andl xor adc jp fdivrs addr16 sub gs cmp sub jb dec mov ret aad add mov ja adc stc lods inc xor add xchg std adc push or test xor sub mov jge push add sub repz dec outsb mov shr xlat ljmp pop jnp dec add add push add and sbb xchg loop scas push jno push mov ret add mov loope mov scas popf or stos add testb outsl add scas mov dec ds add mov or push jns and mov xor ljmp stos mov mull bnd push pushf mov jns test ficom loop cld ja add rcl add insb imul mov inc jge cmp pop cmp sarl mov in and notb dec sub pop mov fwait pop ret andl cmp xchg lret sbb sahf fisubr bnd and mov xchg scas insb int3 push xchg pushf lahf and mov cs mov enter aas aad stos ja movl and fistpl (bad) mov and ret jo adc xor sub push or sbb scas adc daa out xchg (bad) mov and xlat xchg lcall add add lcall cmpsb (bad) jp add mov sbb mov ja and jae ret repnz les push imul lods sbb add adc jmp push mov icebp add sbb sti xchg out or fbld cwtl ss dec inc stos push xchg aam mov adc pushl mov das ljmp mov mov add out out ja cld dec mov push push popf daa or js dec pushl and call and mov test xor repz add dec out cltd mov jnp scas outsb mov sub xor adc xor xchg daa push stos bound push pop cltd cli repz enter stc mov mov ljmp push mov outsb loope jbe jmp ja icebp iret mov add adc cmpsl mov enter aaa add xor lret jmp dec in es push push test xlat mov mov or cltd leave fidivr xor repnz mov imul pop sub shlb add xchg cld (bad) out pop fmull mov xchg shll test ret sub loop xchg mov cmp popa icebp lahf push sbb inc loope ret cmp sbb push bound pop cmp dec sub aaa mov xchg in or adc mov cmp and add push pop sub mov les adc xor into xchg sbb in popf fistp push ffreep mulb adc cmc push aas testl outsl dec add cmp mov mov (bad) jnp push sarl and sti cmpsb nop push out sub jb adc mov mov shrl popf pop shrl loop fildll mov test xchg mov or rclb lahf pop push rcrb jb sbb (bad) mov xchg sub ljmp fadd decl push push sbb add ret popa jle icebp cmpsl cmpb int sub test daa idivl iret cli jnp sub insb lods push (bad) (bad) push xor rolb mov sbb sub add add rclb mov nop xchg (bad) je mov (bad) notl iret les or push dec push or (bad) adc mov add add and call hlt push jo inc mov sahf das or cli mov cmp lods repz and jmp in mov rolb sub mov test mov lahf push lock fist and cli push stos shr xchg sub insl das out out dec cmp icebp cli sub or pop xor scas jb into pop fidivr or adc lret jp pop lret sub sub loopne out mov jl shrb xchg inc test (bad) (bad) and (bad) sbb andb rcrl pop dec out and leave dec int dec out leave xchg aam cmpsl jbe rorb jmp mov mov mov into popa xchg enter scas xlat pushf xor mov and clc xchg dec sub dec xor add test incl test mov inc call add loope mov pop mov jmp push scas dec push xor xchg imul cmpsl xchg add daa (bad) enter jbe push xlat pop imul mov ljmp add in mov cmc inc call jl lret xor out stc (bad) movsl cld in sub daa mov push testl mov jge repz sbb aaa sub pop inc jmp mov pop mov repz dec fidivr cs and sbb fnsave push jg xor xchg (bad) jmp xorl xchg scas lahf cmpsb daa or mov popl jmp push adc adc jne,pn mov mov push mov out fcompl into mov cli gs sbb lds mov pop xchg lds jmp xchg shlb add xchg fistl adc lret loope and and or in stos jne push nop jnp fnsave xor add das lods pop and or (bad) jno out in rcrl test mov bound jbe jmp jp sub ficom scas cwtl lret rcll xor sub jmp add sub lock dec xchg pushl pop pop cmp add mov fs out je push aaa lods sub pop adc pop dec or push mov hlt in add or push out lods (bad) mov jns and pushf mov xchg mov insl cmp add push pop test js in xor xor mov (bad) mov jmp leave ja sub inc arpl dec mov lahf xchg fidivr inc dec jl push xlat xor sub mov jmp jnp sub xor out imul stos push aad jge or sub loop push jbe push ret cmp cs bound jns fldcw loopne out inc xlat cmp das xlat xor lods test cmp mov es push bound sbb cmpsw add call (bad) rolb ret lds cli cwtl (bad) xor jbe inc sahf adc std mov divb aas ljmp ret jg push ljmp cli lret stos gs leave test pop stos lods mov xchg stos or (bad) mov gs mov rcl cli xlat in leave cwtl inc sub popf (bad) pop mov and xlat or inc imul xor xor out out out mov sbb daa xor push ljmp ret cmp sahf jno adc fisubrl dec repnz mov mov inc dec pop jo pop sbb mov mov sbb pop adc fs mov mov mov les adc jne xor repnz lea cmc pushf scas inc push add cmpsb cwtl popf adc sub lods lcall repnz xor cld imul fst enter repz or das test clc insb rol std or in je mov or mov rclb enter and call sub mov xchg pop inc test pop mov xor pop dec push neg add dec xor push mov pop jl shrl (bad) xor jns xchg int3 jp (bad) mov cmpsb aad stos adc dec pop xchg lods ja sub push int3 cmp push (bad) aas int cmp ret fldl jae jmp shrl pop mov push ja mov pop dec xor rol cs mov or add repz lods cli mov mov or insb xchg pushl ja pop adc sub sub or (bad) je stos adc pushf fidivl inc sar fistpll fdivp (bad) add mov scas cld sub lods cltd mov pop mov negl stc ja jmp sub daa movb push sti push adc dec insb shlb in or inc and cmpsb fistl or cmc stos cmp jne pop lret mov mov sarb mov pop jns sub xor aam jecxz adc inc cmp xor inc mov out popa xchg add adc lea lods pop fnstenv jmp and push cld adc dec sub (bad) inc out shll (bad) xchg repnz mov cli mov fidivrl xor mov dec cmp fsubrs mov adc aas adc mov (bad) add pushf and sbb ljmp pop pop rcrb jmp adc mov pop ja or xor jb aad (bad) mov lret das les xor lods rclb pop pop jmp xchg mov lret insb pop mov xor shlb fmul xor sub out out mov sub dec mov or lea jae pop push (bad) rol cltd hlt sti pop pop loopne push enter das push inc in dec jp movsl push inc add pop int3 and cmp adc mov xlat test sub clc adc push clc lcall repz ljmp dec lcall jo cmp adc jl movb xor outsl notb loopne cs div test leave cmpsl je in mov pop add cmp sub into inc dec mov inc movsb inc (bad) fstpl lret rorb mov jns test and mov inc mov push push aad (bad) and pop movhlps adc orl xlat or loop sub mov pusha (bad) mov xchg mov (bad) dec ja test mov xor (bad) in aad or lret jecxz fsubl sti xor push fldz mov shl stos out xor and jbe cmp or ljmp dec aas mov in push stc cmp fldl cmp sti daa fstl sub pushf mov mov push push idiv and andb fbstp (bad) stc test xchg ja sub movl or sub xor or stos jmp or mov inc mov inc or ret leave shl aaa add enter xor ja sbb out fs mov add rolb adc and adc (bad) dec fcoms inc inc dec sti xor ljmp add sub xor mov repnz (bad) jmp add mov pop cmp fsts xor or sub cmp add in add mov lock enter or mov jl out fisttpl arpl idivb push fbld mov dec sub (bad) cli push lods adc cmp stos popa jbe jae lods inc push je in mov jne mov adc out mov pop add xchg cltd stos xor ja pop xchg adcb hlt imul or xorb das cmp sub mov dec leave daa idivb bound faddl xlat lcall imulb sub fstps leave das push icebp movsb mov or push jne mov mov rcll sub lret jg sbb fcmovu or mov andb jg dec pop jmp (bad) jp mov out addl rcrl not sti or xlat xchg cmpb popf sub sub loop cmc xchg outsl dec ret test movsb (bad) push jnp xchg rcrl jl xchg or pop dec push add mov push mov cmpsb adc push fs clc and sub add ds scas test negl push mov mov ja adc (bad) lods mov movzwl sub cmp mov mov fstl and xchg jnp or push lcall inc decb stos into cltd and dec push sub or add adc push sub mov test sti or jno add add stos popf push jns rolb mov dec dec mov sbb inc sbb add xor xor sbb sbb ja mov cs push inc push mov stos cmp daa jge (bad) leave and add sub inc xor test sahf jbe push out add push or mov fsubrl scas dec inc adc add (bad) xor jl cmpsl fstl ret cmp mov push push leave push pusha xchg repz mov dec scas fnstsw xor lods xorl jecxz sub mov imul or dec idiv lret xchg das leave jg mov cmp and outsb mov pop cltd ja mov jge aad or push inc xlat das pop mov mov rcrl adc xor sub call cmp add mov and lods pop ljmp aas or outsb or jmp ljmp adc mov pop iret sbb lahf mov cwtl in loopne xchg xchg mov stos cltd shrl insl clc mov leave iret ffreep fimul adc cld mov ret and (bad) sub fisttpl scas lret scas cmp mov mov inc enter mov frstor and cwtl lods and sub pop lret fs lret mov add mov mov inc imul mov ljmp add test clc out jle aam lret sbb or leave lret inc push mov cmp sbb (bad) dec (bad) dec fucomi pop jno addr16 push fs popa xchg ret loope test sarl inc pop xor mov ja jmp out sub dec or das sub and mov sub fisubr jb inc xor and mov notb out leave into push push pop aad imul andl sub jbe mov roll mov popl (bad) stos test sub push lcall push js cltd insb imul or cmp aas or jp cld iret mov jno inc sub pop push pop adc in out test or sub mov add out loop xor sbb pop xchg cmp add pop mov mov xchg adc jae mov ret jo test ja pop mov iret jmp lret and sbb or inc xchg add sub shrl inc pop xor xor pop jbe scas (bad) aaa lahf xchg push and popa fildll adc xor add insb cld mov jmp (bad) popf jg fisttpll in jg clc out lcall lods std xchg mov cmp ret mov inc mov cmpsl pop sub call mov or cmp mov or out xchg out sub mov cmc (bad) dec sub xchg push xchg push mov js leave shrl and mov es adc or jbe add repnz repz mov cmp sub sub imul dec and les push xor pop int3 push pop ret icebp pop xchg stc mov push pop pop and stc mov loope xor iret xchg shl rep mov jge dec jmp xor mov adc and push shll icebp mov pop loop hlt leave imul rcl cmp fsub xchg imull sub iret inc jnp and lret sub mov xor adc push pop mov xor out fwait add fs in scas xchg mov popf decb rorl pop jg xchg mov sub popf jg stos popf xchg popa jge inc or into (bad) xor (bad) outsb gs (bad) gs jecxz inc jae pop cmp adc sbb adc ret xchg push xchg push pop jae mov stos bound scas xor stos lret fnstcw outsb jb mov into jbe fs scas sarb mov sarl inc mov ds cli out pop lea xchg lahf (bad) pop outsb dec aas fsubrs dec push data16 outsl mov aad jns or aas jae leave xor lahf jl jb lret adc push jnp mov push dec pop pop xor (bad) call loop out das push adc dec icebp mov inc jge imul jp mov pop jmp mov enter jbe into dec add mov in fdivs sbb dec and lods (bad) cmpsl shlb jns dec jge cmp das stc jnp mov adc pop xor mov jmp cmp add sub roll sub xchg mov cli jecxz in aaa mov notb push cmp pop out pushf outsl pop out jnp dec dec mov inc jbe pop ret sbb test sti lea pop loop mov fbstp fiaddl mov in test ret dec xchg das xlat stc mov jmp test pusha cmp ficom hlt mov out cmp sub outsl imul jo push daa test pop ficompl pushf or mov pop dec mov out pop pop (bad) xchg mov cs fs and adc lret cmp jne sti pop fimul or (bad) popf fist loop movsl dec shrl mov addr16 aaa loop pop jae xchg and or adc cmp or (bad) leave or outsb mov sub jbe cmp xor call or push xchg push xor ss inc xor pop xchg out movlps fucomip popa cmpsb add inc popf mov decb mov push xchg add mov xchg mov and and clc nop int fwait add enter cmp ret xlat movsb mov inc xchg xchg ret mov dec cli popf inc ret mov sub jle (bad) testl repz pop and cmpsl xlat fs not add or hlt ret pop aad jmp or add bswap ja les add mov (bad) jns mov inc loope cli out faddl or pop pop mov std adc add jp jle mov jo repz ja ret divl dec jg sbb stos lret clc dec hlt sti notl sub addr16 neg fnstsw adc fs cmp adc insb leave testb and mov (bad) xchg push leave pusha inc sub test test stos in js sti sub mov mov adc imul add push fistl icebp out loop xchg jecxz sub or clc xor xchg call mov or lock rorl pusha (bad) add cmp jae dec out nop js push roll sub cmp add (bad) lret (bad) outsl jno out lret mov xchg call std add sbb cs sbb dec pushl int3 inc ficomp sub pop jp cld or adc imul je mov adc xchg pop mov (bad) cmpsl xchg pusha lock imul or aas sub loopne test fsubrl leave add xlat fstps inc xor dec inc mov xchg jb or add jecxz sub xchg nop push sub and dec dec dec es dec fnstsw or cmc cltd cmp inc dec mov mov sub and adc testl movsb add jnp xchg ret aaa por inc adc add fistl stos mov dec test neg xchg or icebp lret lea push in and add xchg rcll jae inc (bad) sub sub mov mov push xchg sbb add ret (bad) jmp mov jnp inc xchg dec dec or xor fs or stos icebp mov mov xchg pop mov imulb fsts ljmp jbe mov lahf adc mov dec ja pop lahf insb clc das sti add cmp (bad) (bad) iret repz sub mov cmp sub xor and cmpsb repz call xchg jmp in jmp adc into in or cmp sub mov subb mov jne lods push jge xchg or sbb jb rol add lret imul out in cmpsl pop loope out imul inc mov dec in test lock ja icebp and or test scas push js dec call sbb iret out cwtl mov loopne ljmp inc inc xor daa sbb pop out leave test xlat dec adc iret lcall xor rcrl iret sub xchg pop insb push insb or xchg iret sub mov add pop imul pop xor out (bad) sbb push fisttp adc cmp nop push mov mov out inc adc mov adc mov mov dec (bad) xor (bad) bound loope push negb jae pop adc pusha pop sbb adc out sub (bad) and xchg in inc mov repnz pop add or fistl jl push cmp loope sbb cld add pop adcl dec and push shld jecxz xchg (bad) push adc add cmp sub shl (bad) mov lret dec adc and daa push (bad) repnz iret in adc (bad) icebp pop push adc iret jmp popf idivl xchg pop lret or pop sub out cmpsl cltd (bad) shrl mov pushl dec ret or xor stc mov repz dec movsb push mov and and dec xor aam add aad ss and cmp aas (bad) adc lods popf les mov mov mov sub js jp mov (bad) cmp sub add or sub test movsb jmp cltd or dec xchg shr addr16 aam and fldcw outsl xchg push xor mov mov sbb add lret gs pop mov out and xchg out and adc scas dec mov inc fsubrl or (bad) xor xchg push sbb jecxz adc (bad) and popf out aas lahf mov jecxz sub xchg jno imul push repnz movsl inc lock add push aas pop xchg add mov pop lret lahf pusha mov outsl cmpsb lods mov and add and int3 adc xchg imul cli xlat cld pop enter xor or xor sarb lods pop shrb inc push cmp test movsb movsb mov mov sub xchg sbb movsl pop in adc xor lret leave into push cmp xor adc xor adc mov out push gs add xchg or hlt stos lret mov mov add fstl xor sub or add les push ret mov or pop xchg dec lea aad pusha or ret popf cld das jo xor (bad) lret mov add gs xchg jg add lret lret ret bound pop fmull push adc lds repz lods (bad) sarl inc sbbb cmpsl push adc jg pushf mov test test shr lret cwtl gs jb rorb aaa mov pop jge mov dec fcmovb push insb cmc dec into xor adc xor xchg js dec ret add push add cmp insb popa jbe sub imul and bound icebp push inc cmp mov das into push movsl dec ret xchg xchg fimul sahf adc xlat subb add and ss jge stc mov sub pop aam out push out leave fadds or popf jge (bad) mov jle stos mov repnz std in scas in imul call daa xor fnsave dec roll iret scas (bad) call stos xor fbstp out loope,pn mov data16 jmp fxch mov outsb (bad) repz mov cmp xchg dec fucom sub adc jle ljmp test shlb fisttp add push mov mov aam out cli xchg inc adc jbe or out (bad) out into sub test or sub push pop ja lret daa movsl or sarl dec mov xor pusha pop add mov es gs incb int3 int nop data16 sub pop (bad) aad lods scas mov cmpl push nop leave or mov stos je push sbb lcall bnd mov mov in fcomp out sti jl movsb test call ljmp nop in jp sub out into pop xchg movsb and and lret aam jne call jl and pushf call or sbb push sub repnz xor mov iret fwait cld cmp repnz arpl inc add xchg xchg xchg inc jb dec xor in sub (bad) xor add pop pop bound rorb dec add and mov jae and inc dec sub mov cmpsb pop push inc (bad) not in xchg iret idivl dec loop xlat scas lods mov pop ljmp add adc ljmp shll add lods lahf popa repz and stc aaa dec lods orb push inc ds sub jecxz imul mov imul in xchg xor or outsb sub mov into (bad) ss pop xchg lds (bad) in out pop (bad) jb,pn int3 pop es sbb pop add xchg shlb mov sbb xchg repz mov (bad) (bad) mov add dec xor (bad) or sub push pop imul orl dec or aam into repnz mov lock popa addl cmp lock xor jo xor (bad) add xor xchg out mov leave out and and sti mov adc sarb jle cmpb sub jns push or test jns cltd xor lret pop loop jne repz and adc add movsl pop and sub aaa pushf and sub add jne jno dec daa into push js jg jp jl les icebp sub jns stos addr16 mov xor dec mov iret in mov inc or pop clc pop leave rcll popf fwait inc dec lods lret dec pushf fdivrl inc mov mov test ljmp inc adc jne jle leave jne push pop pop icebp mov dec sub or mov ret sub lock stc adc xor and jle jno daa subb sub pop dec (bad) insl (bad) push fdivl push dec pop pop out das int3 add lcall sub lods cli sar xchg and mov outsb out sub cwtl in cmp dec adc and dec scas inc jg inc mov lret ljmp sub loopne add xchg sbb (bad) push imulb outsb rorl scas rorw cwtl pop sub (bad) in push push rorl push dec inc dec lahf leave xor into shrl add push mov mov fistpl xchg adc push in jae add jecxz out sub mov bound sarb xchg mov pop out dec fild sti ljmp (bad) out xchg imulb sub pop sub sub dec repnz fsubrl and and and add sub int3 sub cmp cmpsl add cld icebp xor cmpsl dec dec test leave dec mov sub mov and ljmp lock imul sub jg sub cs hlt jne pop movsb gs and push mov mov cltd dec (bad) xor sahf lea movsl cmp xor loop pop or sub ja lea cs pop pusha pop adc loop int pusha aas mov pop lret push andl test inc mov jne fisttp sub cli out dec mov pop (bad) and sub aad add fisttpll adc mov mov jecxz mov push popf nop sub cmp into sub adc and xor call cmp mov lahf in mov ficomp push pop dec add mov or (bad) add test ficom data16 negb repnz push popa cmp mov cwtl leave pop and lret cmp cmp mov xor fidivl pop mov stc aaa jns clc mov add mov divl xor dec inc leave test cmp ror push stc fadds sub jl mov xchg add stc xor mov dec jl int push xor xchg sub roll xor xorb aad daa (bad) jle add push push xchg jp clc sub sahf ret adc dec push dec or add leave pop mov insb ret dec inc cmpsb and out cmc mov adc out in or iret fisubr inc loope push push push leave out hlt dec shrl xchg mov or xor daa cmp jg sub mov xchg xor sbb xchg ljmp xchg mov sbb (bad) push repz adc rol negb push lahf mov jle sub cmp ja cmpsl mov dec sti popf outsb xor xchg ret repz and pop or xchg out sub mov mov mov cltd xor out fnsave cmp ss pop movsl mov adc mov adc and (bad) aaa hlt pop jns cmp faddl xor ret push (bad) push push test jl scas push mov mov xchg decb mov cmpsl jno ds movsl stos jecxz je lret add and jns jae out push adc fcmovnb mov gs scas sub or mov lret scas dec sarl ds mov sub xchg sbb pop cmp sarb adc adc lret mov (bad) or enter pusha ror add dec jge add xchg mov clc xchg and fsubs lcall repz adc ljmp cmc adc popf fxam fs mov ss mov dec (bad) imulb mov add dec jge lds cmp scas or outsl loopne out xor mov sub and hlt push (bad) scas mov repnz mov jmp cmp lods outsl bound jns mov mov maxps mov out pop pop push lret add xlat in sub lea push gs lcall add testb (bad) or scas ret js jp ss rorl mov outsb xchg and out sub mov adc or ljmp cmpsl popf adc mov mov (bad) and mov xor clc fstl imul daa ljmp fisttpl mov (bad) movb push (bad) sti popf (bad) dec adc lock push push mov add fadds xor clc aas in frstor lds mov lock imul or xchg or ret mov leave mov daa cmp mov scas inc or mov into and in cmpsb insl shrb sar scas add fmul data16 pusha ja cli push add mov sub fcomp jmp inc popa out outsb mov pop and scas call mov stc (bad) jnp or add loop (bad) clc jmp imul pop (bad) aad rcrb dec sub aas int loope jp iret loop adc inc (bad) and mov jns add std inc mov mov mov or inc mov outsl cwtl faddp lahf shr pop ret inc jae and cld push mov jge mov push mov jle rcrl dec and xchg jge xchg jne push push push pop pop xor inc push (bad) aaa sbb add jnp cmp jge add xor mov mov jl out andl mov cs dec lods adc mov mov mov push test push mov or xchg (bad) xorb cmp jbe hlt jno jnp pop add xchg (bad) lret out xor das add rorl or addb cmp loopne pushf scas mov jecxz aad xor scas or sub or mov push add xor mov pop addl cmp lods push or mov sti arpl mov sub add mov or and pop stos mov dec (bad) lock mull or jne jl adcl and push stos mov mov orb push dec dec mov pop inc nop add in aaa add popf jns mov mov jg cmp in icebp std pop cmp add push push dec sbb std push xchg imul xchg adc mov lret xchg pop scas sub cmp aas in and cmp jns xchg or mov ljmp xor xor ret cld (bad) pop jecxz xchg in jbe pop sarl jle add jmp mov roll inc bound fbstp or ret jge scas es addb insb ficoml (bad) mov in inc movsl cli fsubr lret xchg (bad) mov out pusha cmpsb jmp inc ja push pop jmp (bad) jge jo inc pop rol adc psllw jg mov and sti jecxz and add pop shrl inc dec imul cs pop loop push ljmp jo sub cmp pop scas ds adc (bad) jg adc push adc (bad) xrelease in ljmp fdivs mov or fistpll pop and mov into dec xchg ljmp cmp adc jg into (bad) jne jmp ss loop dec or inc xlat and rcll iretw dec (bad) cltd stos sub jmp adc and dec xor (bad) add cmpsb nop pushl jb sahf ss popf rcll mov jle ljmp fdivrp das in xor mov ds sahf lods push cli jmp fs in scas divl popf jl (bad) xor mov jae cmpsb cld repz or data16 dec dec repz inc cmp pop subb bound loop cld jbe sub pop and sub test or jge pop xchg (bad) mov cli out dec loop xchg pop jb repnz daa add out leave clc add mov int3 lds int and loope add ret mov imul cmp or xor jbe sub (bad) es gs aad push mov xor or rclb sub sbb push cmp or (bad) push stc (bad) shr xor icebp icebp and leave icebp or jle data16 jmp push sbb jno xchg sbb xor mov and out or loope popa sub xor mov xchg push sahf cmp cmpsl sub mov and mov mov cltd adc add mov jmp (bad) rorl add sbb fistpll push pop pusha or xchg out adc gs sti rep sub xchg cli sub cmp lret jge sbb and jmp aas in push ret and mov adc sub mov dec sub sub add xor cli adc pop notb fistpl push cmc dec inc and repnz mov ljmp cmp pushf mov in inc push inc mov ljmp pop cmp and or inc das movsl ja stc pop add add sbb rol movsl (bad) lret ret or mov xorb ret das lret lret xchg daa or pop cwtl addr16 xchg jnp daa pop (bad) shrl dec (bad) xlat jbe xchg das xlat push ljmp or jae js int3 paddsw xor repnz mov xor mov add test out repnz std out lods mov xor ret mov jno pop in inc mov jne repz setne dec adc xchg mov testl mov jge adc jmp out xchg mov push sbb ss mov cmp pop ret into inc insb mulb jnp in mov and pop add push lods fnstsw fisubr enter lcall int xchg xor repz push das mov xchg mov mov adc or and into cmpsl push mov xlat mov pop shlb lcall repnz stos mov pop and xor xor ret push jge daa or sub mov imull (bad) cmp out popf jbe push or shl (bad) sti mov adc pop frstor sub movsl das xlat js mov jle ja xor addr16 push adc or mov out xchg sti inc pop (bad) push int repnz mov hlt pop pop xchg popa push fsubr jmp xchg mov and (bad) mov mov inc scas fist push or dec fcomps outsl sub jmp dec add (bad) cmc lds orl xchg lret scas mov ret push jl notl fisttpl out and imul jmp mov daa notl aad and (bad) hlt lret nop jmp lahf imulb test icebp sub pop mov and cld (bad) mov (bad) popa mov sti in mov adc xor pop mov clc incb fstps jg loope dec enter and jne cmp ds lods and pop pop sub out in mov mov jge test fstl push cmp pop in mov jne xchg cmpsl bound push or add repz cli mov dec enter call push outsb lods es sub and nop bound in pop or mov sbb lds repz sbb cld and cltd stos and inc std pop mov sub pop and orb aam popa pop and jle int cwtl xchg mov push sahf inc push aam lods xchg add xor jae mov out cmp idivl ret sub test ret inc testl push negl dec add idivl add add clc mov idivb and and mov jns movsl std cltd xlat ret or das sti mov imul nop (bad) sub repz pushf enter sub or jbe mov adc xchg fistp in movsb mov mov xchg movsl in push cmp jns adc sub sbb ret test (bad) cmpsb mov xlat dec (bad) test out sarl fs mov push ljmp icebp scas cltd data16 cli in xchg and pushf outsl push add xchg outsb (bad) mov outsl sbb sbb ds or jno jg sahf es push xor mov call pop cmp in pushf xor lret ret jb jns addr16 cltd (bad) cmp repnz shr cmpsb jae and pushl leave pop dec push and pop mov rcll sbb mov or mov das mov lret pop pop jno jbe dec mov rclb mov sarb dec std loope adc sub ljmp xlat jecxz xor test icebp sub stos mov xchg out int3 insb iret mov mov sub and or sbb sub pop pop nop xchg fwait lret jg mov test mov xor scas cwtl xchg loope mov cmc mov jp mulb mov (bad) nop mull add ja jb jl push loopne cs je lret dec fisttpll push pop mov xchg mov stc push inc mov out dec arpl xchg cmp mov mov mov (bad) mov es out cwtl sbb or pop sub lret jge inc pop xor (bad) jns jo add das (bad) cltd iret lahf mov rorl int3 jnp dec idiv sub lret sti out shlb (bad) dec jmp arpl xchg and cli fisttpll repz adc adc mov sub add scas gs je mov shrb (bad) xchg or xchg mov rolb add mov mov adc aaa add outsb xor (bad) repz fstps dec loope out fsincos jle insl xchg test stos lods push cmpsb fcompl jmp pop roll popa fwait shll (bad) dec add mov add ret mov int mov fcmove loopne or or movsl jne loope pop pushf jp dec repnz enter xor jle and (bad) fisubrl jle ja sub movsb scas clc pop lock mov dec inc sub imulb jno sub and push les push sti jmp push aaa iret pushf subl dec fcomps and mov fistp into or push fisttpll xor repz sub or enter scas fldl popa aas cmp lcall in out imul lods lods inc dec jne add fwait stos dec jecxz aad leave cmpsb loop and add mov cltd testb or add pop mov pop push dec mov mov push push (bad) add jmp xchg ret outsb lods scas loope xor fdivrs sub out pop das inc sbb call sub xlat mov dec dec idivb lea inc jecxz xor xor dec adc mov out dec test out pop lods int3 dec jmp stos nop or or fcompl (bad) xor pop and das sub out mov add lret out lahf es call pop mov xchg sub cmp mov rcr insb sub mov sub dec decl sti xchg inc scas adc loop and jle lds pop (bad) mov scas rorl and ret and mov lret xor loop jl push aas test and (bad) mov jno je sbb push mov aad (bad) ja xor ss or xchg dec xor xchg (bad) (bad) push dec das gs dec pushf lea jle leave mov or mov stos ljmp fmull je push mov xor and icebp push outsl movsb fidivrl icebp (bad) cmp pop int3 adcb mov mov mov cmp lahf pop adc popa xor and inc das divl pop lods js out pop jmp pop mov push nop int3 sub in loope mov (bad) adc mulb negb pop add in mov fadd ds nop jb pop cmpsb adc scas or sub mov xchg xchg mov jno in mov clc int jl imul adc (bad) (bad) sub xor or pusha xchg xor stos loop lret (bad) (bad) mov fwait xchg ss fs dec or mov sub dec push xor sti sub pushf xor or popf and mov clc xor adc aaa jns xchg out call jmp xchg mov mov mov imul fistpll bound or notl pop out adc add jmp test into (bad) aas xchg mov add xchg das mov mov mov inc xchg mov push in scas test jne,pt xor push dec jb cmp sbb push mov or shll inc sub push jbe jb jle cmp add jmp mov icebp jb and push jno ja cwtl pushf or xor (bad) nop adc sub sbb add popf pop mov and sub sub in push push pop mov cld adc adc add xor out gs daa mov jbe das rcll cwtl das inc push or add cmp push rol sahf add out mov cmp (bad) mov sbb fild cmpsl lds adc jl jns ljmp pop xor mov add mov arpl movsl add out push mov test and mov ret mov add xor (bad) adc sbb sub in test hlt shr ja outsl jne scas adc movsb sti fdivs or aas jo xlat repnz mov popa sub jp and jmp jb add pop sarl xlat mov lods pusha and sub mov sbb sbb mov sub cltd pop xor pop test xchg addr16 xchg jecxz test dec jle cmp cld in iret (bad) and xor test jge xlat pop imul sub out pop sbb xchg adc mov dec fcomp pop out xchg std daa jne push scas cmpsl mov mov (bad) cmp arpl out pop pop (bad) jb push dec pop adc pop imull ret adc data16 lock push je xchg gs jns inc popf mov xchg mull ss mov add std push cmp ja pop inc add mov sbb xchg mov repz add stos ja xchg rcl adc mov sub push (bad) aaa cmpsb mov inc jge fimull add outsb xchg ljmp jnp jl loopne out inc and fs call in sub negb leave negl cld ffreep sub or loope jbe dec movsl cld das clc push dec call in mov out pop (bad) std sub je flds push cmp test test movsb in ficom sub push push ret shlb out inc mov mov je mov lret (bad) cmc sub sub add pop mov lcall fcmovbe dec jbe mov xadd outsb scas mov nop mov xor (bad) add cli aaa in cmp sub popa nop inc push mov xor scas sub mov pop xor mov cltd lods mov stc sub or or xor test pop movsl (bad) jne mov inc scas cs add cmpsl call or fsubl (bad) clc xchg lret and jge icebp ret ret add icebp adc int3 int3 cltd mov push and fstpl mov dec rolb xchg out inc mov arpl inc imul jae lods outsl mov mov and mov out xchg add ds push lods dec stos inc cmp add (bad) xor popf sub sub mov mov dec xchg out mov sub cmp add dec jge cmp cmp sbb test dec std sub mov xor push xchg in dec mov ds dec stc out into push xchg gs ljmp (bad) roll mov (bad) sti jb or mov push idivb xor and clc imul aad push dec push scas and repnz dec push lock xchg sbb dec gs scas sti imul ja (bad) xchg out push mov dec loopne imul adc sub and rcll jo mov mov pop adc add lcall imul jmp enter add rol lds inc fucom mov adc dec or add sbb fdivs hlt mov or adc mov push or fidiv jbe cltd (bad) jmp loop test stos mov jbe int jp imul push (bad) xor mov mov fisttpll add mov stos mov and mov lret out cmp mov stc leave sub sub mov or dec xor add mov adc (bad) mov xor (bad) xor fbstp lods jb fwait push cmp push lds pop out push sub (bad) std scas xchg in or lahf and ret outsb dec lahf loope ljmp pop adc lahf inc loopne mov ljmp ret dec cld mov cmpsl pop add adc fldenv pop (bad) jecxz xor jmp sub sbb fcmovnbe jge popa (bad) ss lock outsb imull inc pop (bad) mov std fwait mov jecxz xchg jmp dec (bad) scas mov dec loopne adc pop loope pop and mov ret add sbb jmp insb add xlat (bad) xlat int das ret cmc xchg shrb out bound out sub xchg xlat popf push (bad) mov outsb push jbe inc xor or xchg fstps dec dec cmp shr jae fldenv mov mov das xchg inc fistpll pop pusha je add jmp xchg dec mov mov cmpsl fnstenv cmpsb sub mov sahf jns daa or mov and bound aaa std xchg mov pop repz (bad) cmp enter xchg jmp lret dec xchg xchg out out insl outsl loope sub sbb cmp popf jbe roll bound mov cmp lret and subl lock lcall sti push in test ret inc (bad) repnz lcall sbb test mov mov loop jns pop (bad) fs loope jl cmpsl loope and outsl cwtl fcom mov fldenv outsb jg xor sarb sub (bad) xlat jg jns in jno and stos xor xchg mov mov mov mov push pop add shlb push (bad) sub scas stc insl lret ret xor ret or push mov popa iret xor jne das jbe cmpsb mov ss clc es es leave decb daa or hlt mov cs cmpsb cmc or clc and mov cltd ljmp and add lea add test daa sub inc jp inc (bad) jae cmpsb data16 inc mov push pushf and nop dec aaa clc ja das in scas scas das cmp ds scas or xor or nop jns gs repnz inc outsb mov mov fildll das int3 dec jmp mov mov gs mov lret std pop test add or js test (bad) repnz fisubrl and popf cltd or and push (bad) and loopne imull cltd jge and cmp push pop xchg test faddl (bad) inc movsb add xchg das sbb and mov sti dec jge rorl lods in jmp pop xchg inc or repnz ja movsb dec imul clc out xchg aad or call jne out push jecxz sub mov dec cld fxch rcrb jmp add mov aad mov cld dec push (bad) push and loope dec mov push loope dec sub inc mov add jp fcoml aaa outsl push jmp adcl or pop cli mov push dec sub xor (bad) scas or in sub das ret dec leave or roll xor aas in inc lret repnz xorb (bad) cmp ss pop jp shrl dec push cmp push pusha add sbb lods sbb divb dec pop test (bad) loope jg xor js stos ja jno lret pusha lods xchg (bad) jmp hlt lcall jno cmpsb addr16 xor data16 sub out cld xchg das neg adc sub jns (bad) mov stc xchg test hlt fisubrl sub pop add and aad leave jmp jle dec inc xor pop jns fs mov pop mov xchg clc add jo pop or pop xor xchg rcr and (bad) add sar dec iret xor mov jmp jl mov fstps cmp sbb adc mulb xlat xor out in out pop je jmp mov imul ficom ja pop mov data16 lds pusha (bad) push jno push (bad) dec jge xlat test ljmp push repnz negb (bad) stos lret mov sub dec lcall dec out mov mulb jbe daa ja stos pop ljmp dec jae cmp out xchg and cwtl loopne and lret daa aad fnstenv sbb rclb jbe push pop repnz add jno mov push out and xor leave stos jecxz sub mov (bad) pop fildll mov dec and xor or mov mov movsb sbb xchg and mov rorl xchg outsb push sub cltd add (bad) in mov jp jne cmpsl pop dec test (bad) cmp (bad) ja pop pop pop sbb jmp ja cs jb and mov arpl and xor push pop and sbb sub leave sub shrl cmpsl cmp pop xchg add mov dec jg sbb shr push repnz aas out add (bad) mov fisttpl fcmovb sub mov xor aaa iret or stc cmp dec jno and xchg gs pusha or pop fadds mov and sub fstl pop fwait jbe xchg lds xor jl push inc leave faddl (bad) cmc add sub ljmp mov xchg aas lock jg adc movsb popa push (bad) jae das mov cli nop test and mov (bad) scas fcmovnu icebp adc mov imul and fs pop lret into jge pop mov test out sub out lods out add xor cwtl rolb mov sbb and push or adc fstps in add movb mov cmpsl rcr dec clc aaa dec int3 stos add out jl into scas lret mov out pop leave roll int jno jmp inc ret pop cmp push xor mov repz add daa mov pop in push dec push out xchg leave scas mov hlt out es mov sub push je pop add cwtl mov stos fwait gs movsb rol add add mov sbb jmp dec mov pop pop sub xlat repnz lcall test icebp mov push and sub imul xchg repnz and mov mov push pop sbb adc xor (bad) sub cmp sub bound pop adcl push sub mov daa repnz dec push sub xchg mov lds push and mov mov cmpsl pop jne jmp inc lret sub sub sub xchg add and jp and xor add dec mov dec push xchg dec out ljmp out repz adc or add dec sub inc mov jg xchg fistp mov mov loop pop hlt sub lods (bad) mov int3 pop sbb je push jp lods mov mov (bad) clc adc out ss (bad) lret stc and or arpl popf xchg and mov pop repz clc sbb addr16 jmp nop loop inc mov jo sub in repnz dec into scas aaa jmp idivb leave stos std (bad) outsl clc stos movsl fdivrl cld aaa out or mov imul (bad) je jno inc repnz mov (bad) decl mov jns mov xor inc pushf sub or xor fimull rclb or cli mov repnz xlat sbb out movsb xchg push and mov rclb scas stos (bad) cmp mov jmp cmp cwtl fucomp mov in sub incl and jle lea xchg nop add xor frstor pop test (bad) divb (bad) jne les ficomp outsb gs clc outsl mov mov xchg aam (bad) mov std xor sub push dec icebp mov (bad) sub ja leave pop jg js fwait mov jmp ds jg or sbb fdivrs mov jge mov ljmp rol inc js adc add and jnp shrb fisttpll leave xchg lock daa rcrl lock jb sub mov xor (bad) mov and pop std jnp lods xor jg pop faddl ljmp push inc jno divl mov or fsts jmp dec dec mov in sbb sbb imul loop jmp or test aas lret decl outsb ret inc and xchg jne sub sub and pop mov loop push pop inc popa bound dec inc adcl enter fcmovnb mov loop xor cmc in movsl cld mov aam aas xchg or mov sub jle push out (bad) insb inc test scas mov shl pop jmp or mov lods inc repz cmp jecxz or jmp mov pop lret mov xor sbb es pop ds add inc mov data16 xor (bad) push insl mov ficoml rcll shr adc sbb and xor mov imul xchg dec ret stos (bad) mov pop jecxz adc xor (bad) lods jae and arpl fsts push pop mov cld mov or xchg inc cli scas xchg imul sub mov xchg adc cwtl or or insb outsl cld sub sti push xor leave pop pop sub add sbb xor test ds lret fs out sub or push mov push lret cmpsb sub iret mull lea call mov dec stc fstl imul mov cmpsl pop inc pop scas sarl movsl pop (bad) std adc (bad) es sub pushl setge sbb jbe gs fnstcw dec lret out or sub mov loope push movsl mov jnp mov xor ret jg and or scas jne mov rolb or inc loope or xchg imulb sub fsubp lret add jbe mov xor add and push ja jmp xor mov orb rolb dec repnz out stc push pop cld mov mov cmp clc repz cmp aaa add test or jbe cmp into jecxz rcll std and mov ds add xchg loope cmp and cmp (bad) pushf lcall push out es iret mov sub mov (bad) sarl mov xor mov mov or idivl repz sti cmc pop int into xor xor (bad) cmp dec enter gs rorb out lret xor mov add mov inc pop and pop sbb jl jo ret clc and ficom jmp lock bound cmp (bad) incb imul jbe das fstpl hlt lret push push sti mov mov push push icebp (bad) je,pn call mov jns adc pop stos test jmp push out pop adc push xor and je mov shlb adc dec stos lret pop sarb pop (bad) repnz inc sbb add mov xor add xor cmpsb in daa aad or mov dec leave mov sbb sbb enter jb (bad) out dec (bad) xchg out sbbb mov stos je out test mov jle and sub cli lods or dec (bad) jl dec mov fsin dec imul repnz leave xchg mov test dec mov and or neg push fisubr or xor xchg (bad) sbb add test (bad) loop push or mov stos ret mov pop adc mov stc cmpsw ja push popf inc dec sti jl repz xchg cmp iret mov xor (bad) call repz adc add (bad) iret popf pop or (bad) xchg lret scas fldenv lods out (bad) mov loope mov js add push xchg das leave add pop out sub cmp insb test into sbb (bad) fbstp and lret mov adc cmpsb xchg dec ret push lods lret repz andb rolb add pop cmp sbb mov jno xchg lret adc xlat in and xor insb lods pop sti cltd enter out inc fsubl movsl lods sub pop hlt sbb or mov faddp adcl or je jmp mov test inc pop cmc shr dec push data16 push or push int sub mov test mov jns les pop mov adc test and popf jo dec lret mov sub nop mov sbb xchg stc jmp outsb movsl test leave mul push xchg sbb pop outsb mov jno movsl loope sbb mov fst cmp mov pop test iret inc ljmp les aaa xor cld mov jg jo dec mov xlat test mov into stos out pop cmpsb dec std sub jae loop or or jmp mov das loope leave pop idiv mov xor loop mov lahf ljmp pop lret imul lds add rcrb add test cltd fildll inc pop into out adc imul test xor xor int push movsb es mov mov movb or add ficomp stos dec jmp out push sub cmp (bad) fs scas in (bad) mov mov sub outsb mov fidivr xchg aas jmp mov push and add mov xor lret dec push in xor add in and (bad) or pop idiv leave or jns dec (bad) pop adc xor scas loope add mov pop dec push pop mov or mov repz sbb xor gs inc inc repz add fs clc pushf cmpsb int3 xchg aam jmp das and sbb lds std out es jecxz jno outsb shlb sub lock xor lret mov inc jb xchg icebp sub test inc in int push inc stc movsl jo mov (bad) imul int and mov or pop sub (bad) scas adc shr sub lret in out jecxz fisubrl jl pop mov cwtl mov test sub cmp cld imul sub fldln2 jmp push and out inc adc dec cmp adc test xor test mov ja cmpsb push bound rcrb mov and mov cmp or mov xor and cli or mov adc repnz jbe mov out or es bound xor not jmp out and inc mov in fstpt dec out mov mov iret dec and xor cli pushf and (bad) out jl pop ret cmp mov int3 jp push pop mov sub jmp dec aam jae jmp or mov mov movsl fs testl or xchg sub in (bad) mov stos mov rcll inc js mov sbb (bad) push mov out test jmp cmp pop xchg push add jbe or push fs xchg out jns jae popf jg dec inc addl pop ds pop mov push xor xchg imul or add cld pushf sar scas pop push mov daa icebp mov add orb xchg mov add in and cltd push lods push mov pop or into xor clc push leave pop mov inc dec xchg or loopne inc jg into (bad) movsb cmp push mov orb mov (bad) jbe aas sarl jb dec (bad) mov rclb jb sub mov push lret add push mov orb (bad) jne loopne or or ds xor sub ret pop push cvtpd2pi pop cmp jl mov imull paddw sbb adc sbb testl (bad) xchg icebp inc dec in add out jnp hlt mov iret jns add pushf cmp add mov ret sub push mov das movsb pop and test and xchg imul mov xor inc push add dec dec push mov dec push clc hlt lret push sbb sub and inc movsl add scas idivl pop and icebp mov push stc xchg sarl jmp adc push fld jmp movsb pop inc mov mov push jne movq repnz dec fidiv xchg cltd das xor jne sbb mull lcall div or out dec adc js in mov divl sub dec jne mov pushl popa push pop add inc dec mov xchg scas mov dec pop neg mov decb or pop call mov xchg insb mov icebp fs mov lret adc push lcall cmp jmp dec xor movb arpl aam pop xchg leave lea leave cmp jmp frstor push sub add les into fnstcw adc or rcr shll xor mov jb add icebp sti cmpsl hlt mov out std sti dec add add or loop push jno lods loop fisttpll pop pop lea jle test jmp push push pop call and mov sub dec add pop bnd mov dec push pop movsb std movaps adc or fistp sbb xor (bad) outsb daa inc jo sub mov movsb out ss out pop jns std adc clc aad push movb add mov loop scas js lret (bad) xor leave fidiv dec xor shlb repnz cs mov ds popf fstpt jge in pop call lds dec inc and push mov int aam scas je fsts mov loope sbb fwait mov cmpsb or adc popa inc jmp and js jne mov sub (bad) stos (bad) repz jmp sub cltd mov jle stc sub cmp ret cmc movl dec test stos je mov adc mov mov and out daa or mov stc (bad) bound rorl and gs sbb lods ret cltd mov (bad) or sub mov (bad) or and pop adc adc sbb divl repnz dec lock cld ja cli mov jne bound add ror and push fs adc (bad) mov cmc mov (bad) mov adc sub xor sub cmp and fstpl ficoml or mov in leave stos sub sbb adc xchg lahf pop repz inc push cmpsl push outsb push pop iret xor and out mov xor ds mov push ret mov sub xlat push mov leave xchg jmp imul inc inc sbb adc lds sbb add push push ja xchg add mov sub sti pop mov add push cmp lcall subl pop mov xchg (bad) cmp mov push daa mov lods dec adc repz xrelease fs xor dec inc mov popf fistpll sbb jo adc adc mov push jp in nop in roll jae pop mull xor aas int3 out shll add mov outsb subb sub imul jge jo mov adc out push add mov pop xchg xor cli lds adc sbbl mov push shr dec add add fldl jle (bad) ficoml lret add inc mov push push rcll jle xchg or push pop iret ds dec jo orl lds out or jmp pop push int xor inc inc fisttp cmpsb or ljmp cmp pop jg out cld fisttp aam ja pop add sub pop mov pop ret je pushf pop adc and aaa pop and pop pop mov xlat lds add mov and or push jle (bad) push leave loope test and out dec icebp xor sti imul jno push jle rclb fldenv loope test mov stos fsubl and xor sub jle lods or jne imul sub sbb pop pop outsb sub push or cmp shlb push ljmp sarb pop lret test xchg jmp fcmovnb mov test (bad) cmc jno xchg push mov sbbl out mov loop inc (bad) in or and ljmp push jg decl adc mov mov mov pop and jbe and outsb fdivrs push sar cmpsl lds add sub xchg stos push adc lret sub shrl push into pop in pop sbb decl jge fnstsw pop and xchg push xchg bnd popf cmp jbe in mov stos jge clc ja sub add xchg sub call add pusha mov aas push mov lahf jne cmp aas cmp ss cmp int mov pusha popf pushf cld lret or cmp jnp add xor icebp clc stos repnz jl daa lds cmpsl sbb lret cwtl push jge mov lods aas fldl pop pop add sub daa loope outsb arpl scas lret and int movsl adc push repnz lret loopne or inc pop mov add and pushf pop out push hlt dec sbb sub sub add (bad) jecxz jg (bad) xor mov stc leave or or add clc imul rorl (bad) aad dec dec decb mov stos mov dec push sub ss sbb fcompl (bad) jne (bad) les adc (bad) out lret push or jg insb add lea xor mulb mov fildll mov jle jae mov pop or jecxz pop ljmp out add pop lods and lret inc dec jmp jb push pop cmpsb push add xor mov lock mov sub mov dec xor mov jne loope sub xchg rorb inc inc sub and fwait mov pop or adc and mov rorb xor push dec into mov pop repnz dec lock dec icebp int3 enter xorl imul dec mov jb loop push dec dec fbld or (bad) leave loop mov les not push xor jmp nop out mov rorl leave cmp dec les scas mov adc insl mov dec mov jnp push add sub mov add dec shrb (bad) xor outsb cmp sbb iret pop adc jnp or xor stc icebp out ja movl sub cmp mov jno add cmp and fmul pop repz and daa rcll adc pushf ja dec sar leave daa xchg into insl dec sub inc and clc cli mov and push je fnsave popf mov (bad) in es andb jp into outsb mov dec leave sbb inc leave pop pop lods cmpsl inc jge lock pop push loop lret xor loope fstps xor shll outsb imul popa jp fwait cmp jmp ljmp fiadd cmp in sarb or sbb flds negb xor scas scas lret fcompl pop xor out inc sub xor add pushf pop inc (bad) mov outsb push and imul mov outsb fbstp lods sbb jb inc and add pop xchg push push sub xor pushf push inc xchg mov push in test das sub jmp pop mov push and int3 dec pop xchg mov and inc xchg out int3 dec or mov xchg lcall imul dec (bad) cld gs pop xchg xchg stc mov pop jmp sub leave pop adc mov sub (bad) in fcompl imulb add pop and and xor je push push mulb sub cli mov add and fnstenv outsb popf (bad) sub sti arpl (bad) stos (bad) adc out fdivl xchg into cmc xchg shrl cmpsl popf dec stos sbb dec cmpsl pop data16 add add mov int3 in iret rcrl sbb mov mov xor mov mov (bad) repnz testl data16 stos mov dec stc lods mov testl js mov stos xchg push mov daa mov and aas and dec stos sub testb leave or test test in adc out push xor mov pop mov into or shll iret mov fnstsw and andl add pop repz jo xor sbb stos leave out rcrl cmpsb pop ljmp pop and mov cmc imulb fwait push and lock mov xchg xor ljmp inc mov or cmp lret sub push lret bnd aas xchg negl xchg sbb cmp cmpsb fnstsw fstps dec jge outsl push add arpl ds xor fcoms ret cltd repnz aas xor ds mov dec sbb adc lret adc call jmp lock ret call sbb dec lahf dec xor data16 sti push not (bad) add test inc (bad) or test cmp xlat mov cmc into dec push (bad) push cs dec lret or iret std in and leave pop jns xchg (bad) mov pushf adc ljmp lea rol dec or mov adc (bad) cli cmp push jge xchg fcompl xor mov xor ljmp mov (bad) push xor xor xchg sti dec lcall adc in (bad) lods das pop pop bound xlat pop lahf imul rcrb (bad) ds sub in push in iret sahf lcall (bad) in add mulb psrad aad jmp test scas ja (bad) loop (bad) mov mov jecxz pop xchg ret add popa ss mov shr sbb leave sbb sti mov pop add mov mov mov and mov aam adc xor jbe cmc sbb mov popw sub or or loop or mov xchg lret push jno xchg add in lea mov cs fs jecxz daa out incb pop in rolb orb ficoml push lret (bad) mov jl jbe clc mov dec bound xor jne outsl add mov jmp add fwait ljmp inc adc (bad) cltd cmp mov inc adc ret inc xchg mov cmp sbb push cmc in or push in mov (bad) sub adc cmp cmpsl ret push int3 test sub shl and leave jmp pusha orl mov xchg jmp and loop call push dec pop push jbe push cmp adc sub jge dec and lds cltd pop mov jle push mov movsl (bad) test xor das cld push xlat stos fdivrs mov add mov das repnz nop mov inc rclb dec push lret xchg pushl popa repz aas movsl adc and mov or loopne cs sub sbb mov xor xor test xchg out mov test add rolb test push jge sub push fimull xchg jl lds ljmp imull daa out call stos inc and sub and sbb sbb idivl lds dec gs loop mov sub xchg inc daa cmp (bad) or jbe int cmp in dec (bad) in sti lret notb or xchg addr16 sbb mov add jg mov dec sar sub jb imul fldenv or fcom ret test sub mov enter or and xor xchg stos fnstenv xor into push jno (bad) or mov jns shr imul dec mov pushf and pop and mov ret das mov inc mov dec xor mov out stos fistp inc inc jmp dec fcomps add mov pop push outsb scas je fs out jmp pop add (bad) sbb leave fs pop test popa xchg dec mov (bad) jae movsl jns imul xlat or imul and stc or mov add ret test and mov jle outsl je addl mov lret inc rorl imul xchg push rorl inc jbe push or mov sub fwait mov fs and and pop aaa push or cmp or scas fld loopne rclb inc fildll packssdw xchg xchg std jno mov cmp xor and pop and es cmp sub jecxz std adc dec adc add out mov adc cmpsb int mov pop mov das std js xor stos popa inc lret test inc mov imul dec rorb sub daa icebp addr16 (bad) out mov (bad) jmp clc aad push stos pop push push mov flds (bad) xchg aad (bad) jne push push dec orb daa sub ja adc aaa or shr inc (bad) mov cmp xchg out mov mov mov inc shll mov dec orl sbb or adc lods cld dec movsl ret pop fiadd push push lods push adc add andl pop dec push ret xor mov iret inc and out adc mov cwtl jae mov xor pop loope in call xchg lahf jbe pop add popf lcall push pop or jo outsb (bad) adc std cmp adc add xchg andb xor into aad adc orb enter jecxz dec aaa lods or push cmp cmp (bad) lock (bad) dec cltd loop rorb pop push insb xor (bad) xor cmp ljmp xchg and xlat mov cli dec jbe xchg iret cli lret jbe out cmc cwtl pop out sub lods mov lcall cs push mov pop xlat ljmp test iret stos and add (bad) imul lock pop sub sar xor ljmp mov xor inc lds mov mov sbb dec stos xor dec test fildll xchg xlat clc sahf rorb popf push push aaa mov pop dec mov mov jb adc cltd add or mov push (bad) pop sub das mov cld mov mov lret mov iret mov cmc lds and push pop cmp inc sbb mov adc sub mov add pop pop xor sbb pop ljmp (bad) iret aas or push fsts repnz sti out jb xor data16 popa test pop rcrl xor mov std adc xor fwait xor push sub pop aam cmp pop push mov fdivl inc in push push in cmpsl test xor add xor xchg mov aaa pop or psllw xchg cmp lds fdivrs movsb (bad) in outsb mov in dec pop and call dec mov pop clc (bad) lret push or push je (bad) push pop scas fldenvs sub das pop stos jnp jmp mulb (bad) jno xchg and sub and mov stos and add fisttp push adc frstor sub lods movsb das ss in dec mov inc aad mov jnp std xor (bad) lock jnp stc mov adc leave rol push xchg xor fwait jg ds lret jns or aaa or out repnz xchg scas mov inc xchg sti pusha dec popa xchg out aas adc add pop inc imul (bad) dec pop adc jmp jae xlat jns mov sub das mov fbstp jmp jns data16 or xchg mov mov aam add cmpb dec stc and sub and loop sahf jb sbb insb xchg push add mov pop sti notb push pop mov into and xchg adc add jnp dec mov cltd test cmpsb pop nop fstps sub ljmp lcall pop lcall loope,pn lret sbb mov cmp sub mov lahf push dec xor inc das bnd movsl (bad) negb repnz xor xchg outsb iret jnp jae repnz mov mov in mov loop add pop fidiv (bad) cmpsb es pushf pop sub jbe and pop jl lret sub je jmp xchg add cld dec (bad) stc pop xor mov lahf jns push mov in xchg xchg testl bound xlat je int3 or pop mov in ljmp inc inc gs or ret adc jmp int jp add and or mov cmp jle aaa mov cli ljmp push (bad) addr16 loopne (bad) and xchg mov adc jbe xchg mov shrl or repz repnz xchg xor xor ret adc (bad) xor mov (bad) pop test pop pop test repnz dec xor setne mov xchg xchg push inc pop mov cmp outsb dec stos insl mov add mov pop mov or (bad) idivl jo mov mov loop int3 rcrb inc in and or es test xor mov pusha push and mov mov push xor les sbb mov and sub (bad) sub idiv jb icebp xlat pushf scas sbb sub adcb scas or (bad) mov cmpb stc sub xor aam lret in xchg jecxz test in fcmovne fcom sub stc test lds loopne rclb lds imul (bad) or or cmc out jge xchg inc or loop fildl dec pop (bad) (bad) nop sbb jmp jns mov jle and add and mov jge shlb dec xor and decl push stc fldenv rolb dec cmpsb cmp push cmp jmp xchg notb mov cmp cmp sub or and push fsubrl push inc jl movsl cli (bad) lds ds lods pop das dec mov imul outsb mov inc stos pop sub xchg out mov idivl xor dec movl mov sub jns and cmp bound pushf and idivb rcrl popf popf lock imul shrl scas jmp fstps leave stos ja jmp adc roll es ret pop xchg cmp push loop test ljmp pop mov jg jp (bad) cmp jmp dec and ret mov pop repz lret lcall or mov mov pusha pop mov xchg mov ljmp sub bound data16 cmp sub add cmc pop mov mov sti xchg inc sub or sub add scas clc cmc mov dec repnz or sub push icebp and and sub and jmp leave and mov ja add xor sti mov mov in xchg sar aam ljmp add mov jmp (bad) fildll and add rol inc cmp mov mov enter repnz xchg mov dec mov gs xor xor ja pop mov jle jecxz aam cld bound add jne popf pop pop sbb mov xor jnp sbb add or mov jno int3 (bad) sahf dec and dec xchg divb adc mov adc add lea (bad) push adc add lock mov imul dec jge adc adc arpl mov and gs jge dec fdivrs xor rcl jge int3 testb mov aas clc and sub (bad) sub add iret and xor icebp xchg insb (bad) mov outsb sub add rdtsc enter sub adc mov dec jg imul outsb dec dec sqrtps inc outsb jne xchg int3 out mov ljmp sub jmp addr16 mov sub pop push xor or and pop inc pushf repz jb test cmp jmp inc dec shrl sub add adc push push ja sub sarb call fucom mov cmc mov mov mov push xor fnstenv cmpsl bound (bad) int3 and stc movsl repz inc repnz iret stos repnz jne mov lds push out call adc xchg cld sti dec mov push and and mov jae jb mov popf and jmp cmp lret or adc cli int fcmovbe jns xchg lret addl jbe leave std inc in aam or dec dec dec pusha bound xchg pop enter call push les mov stc jmp xchg rorl dec sbb stos lods enter push mov mov fnsetpm(287 stos mov hlt jp lahf call mov inc aas subl fwait or negb (bad) mov sbb mov jg mov (bad) ss inc imul push mov shr mull inc pusha mov pusha or in add push dec sti push add repnz sub not addr16 jno mov push add and insb sub aas movl cmpsl out add loope jo orl sti loop and jg adc xchg sbb add arpl push ret xchg jp xor nop push lods cld jns mov das rcrl sub push xchg neg nop pop mov nop sbb ss jnp push out mov stc sub add dec push push xor maskmovq imull repz enter jb pop sub pop xchg jno mov mov xor mov push std pop subb cli cwtl mov inc into and and fistp sbb sbb cmp mov shr inc and aad icebp fiaddl cmc mov add into in inc lds dec add les ljmp xchg pop (bad) xchg sub and scas push adc mov mov out rclb mov mov sub jmp scas lods xchg lods cs sub paddq addl inc adc dec scas xor mov (bad) cld sub aam sti (bad) repnz icebp cmp icebp sub jle scas lret negl mov cs xchg lret std out and sub sbb movsl xchg adc repnz inc sub push jae call dec cmp jg sbb leavew cmp xor arpl push cmp mov adc call push dec fnstcw dec sub and cmp inc insl mov sub xchg mov mov dec les sbb dec mov xlat dec (bad) xchg push xchg (bad) and xchg out jecxz dec mul and or psubusw imul dec (bad) xor in cmp lock es pop sub (bad) push dec push dec add repz into mov dec mov dec adc int sub mov or sub xchg xor (bad) xor adc or (bad) mov cmp sub pusha mov inc cs dec ret sub dec mov movsl push or push xor pop cmc rorb mov js dec shrl inc mov xor mov mov jnp pop push das xchg add shlb inc cmpsl out adc add decl dec pop and daa jmp lods cmp decb mov pop in xchg scas xor inc fwait xorb idivl push mov add sub gs jmp pop push mov jmp sub cltd xchg push icebp mov and aad mov into stos push dec push push (bad) and aam push movsl cmp adc ret jg mov inc mov jmp xor push push or mov inc add dec xchg loope and sbb ffree xor add test inc daa loop cmp xor sti sub adc mov (bad) fsubs add ret add mov shl pop repz jb out sub jno or loop imul jle inc loopne lret mov (bad) ljmp fs mov xchg pop out jo or xor sub test bound mov pop add sub aaa adc pop or and jmp dec sub clc (bad) movsl leave push imul cs out fwait dec es ret mov movsl dec inc adc or jae cmpsl xchg mov test add lods mov and or call (bad) stos bound jl lods push pop lcall push loopne or mov dec icebp cmc lret addr16 sbb lret aad mov adc xchg add ljmp sbb into mov aas or stos mov das mov sarb jecxz enter pop ret ja push jmp aas sti cwtl pop out add je push or cld mov sbb icebp add repz jge inc popf int3 push jb pop stc mov mov (bad) sub arpl inc loop lcall adc scas inc lret xchg out sub repz sub jg mov jae lret xchg pop (bad) call (bad) neg mov ja xchg mov mov fistpl js xchg inc xchg mov cli xlat xchg movzwl and js add pusha cmpsl fs cwtl pop ljmp das add fbstp or mov fldl ds loope cmp mov and pop out test pushf mov mov dec (bad) dec mov or sub fcom sub or pop mov imul push mov and jge mov and mov das sub dec dec sub leave mov (bad) mov pop (bad) xchg iret pop sub dec shr mov mov fisttpll data16 xchg pop jmp test scas test inc lret xor ror dec (bad) push std sub std sub sbb lret out xor jmp mov ret and xchg mov push std and imul lret mov (bad) mov dec hlt clc xchg divl pop pop test pop mov or add push mov fidivr fs fs lods (bad) mov sub xchg xchg jne add adc mov add test lret out pop scas xchg lea xchg shr arpl icebp pop outsb loop xchg push (bad) stos sub pop mov cmp lcall mov sbb in mov pop out jle mov xchg sbb sub adc pushf or and or inc es daa in out mov mov rorl fisubr daa jge loope mov aas mov adc cmp iret cmp dec sarl mov jmp dec roll add and popf ds push cmc scas mov pop lods (bad) mov jg addb iret mov or inc (bad) jmp pop sbb dec add dec test mov das cwtl mov loope sub aas cmc scas or das gs into pop cltd add (bad) sbb mov fisubr popa test (bad) repz pop (bad) mov push adc leave or aam in xchg std adc (bad) mov mov fiadd or stos imul pop add xor sub je in push add add mov push out out cmp mov rclb fdivrp mov in das mov mov adc sub sub out flds sub in xchg in adc jmp dec mov faddl pushf adc into jne bound adc stos adcl das sbb xchg adc decl icebp es and xor and sub mov jmp dec jge cmp adc sbb (bad) or pusha pop out mov loop enter ret lahf inc cmp ss addl rcrl lret sub icebp sub leave je xchg fsubrl xor and pop lret fildll lret jl (bad) cmc add or add lahf jle dec sub sarl mov fs adc jmp jo je dec out cs xor test sub jg push and ljmp mov inc add (bad) or mov rcrb jl out inc loop data16 bound movsl mov xchg push aad shlb lods negl push (bad) sub jmp dec mov mov in add icebp sub xchg shrb sub add bound mov cli adc test inc mov add fadd or jmpw xor subb or test aam clc inc cwtl inc mov stc out mov pushf xor xchg pop loopne loope jb push stos jnp sarb lods push xlat add and clc pop das enter adc inc mov jg ds lods adc mov fbstp mov lret lret xor mov add jg sub add pop xlat pop repz mov mov and out mov mov sahf pusha push ret fwait add dec pushf xor cld lret sub (bad) dec mov mov lret push jns mov into or icebp adc test rorl mov add dec xlat data16 push dec (bad) int3 pop xor imul mov cli stos cmpsb enter mov outsl mov testb add lcall add mov ret roll jmp scas aas sub stc std stc sbbb ret ss cld test mov (bad) mov into pop mov mov sub lret inc dec push call xor sbb adcb jl in mov addr16 and or ss dec jle mov dec lock pop rclb (bad) lret mov test xchg xor mov fist or add inc jmp inc mov lea add lods adc dec mov jmp lret or loop (bad) lods out lods (bad) mov jmp xchg inc ja cmp lock daa or push out and mov mov mov (bad) hlt movl xor sti adc scas popf xchg adc push sub pop stos lret jge or cs jns and shrl mov pop flds sub xor stos cmp scas cmp pop xor or mov xchg out repnz movsb leave (bad) aad cld cmc test scas clc mov sbb mov lret rcrl or pop out pop mov jnp xchg movsb mov dec mov add or out xor ret xor movsb ljmp dec mov xor add mov aam mov pop loop pop rorb stos mov push movsl pop pop pop popa test ret add sub nop mov xor popf jne in pop adc jbe push idivb inc ret hlt and mov xor rcrl mov call sar inc das iret (bad) ficom lods inc into and aam adc lahf dec mov lret call cmpsl decb icebp dec pop xor rcrb jns mov je rorl cmc (bad) stos jg nop or mov sub mov scas or xor jae add xlat iret ss rcrb and pop xchg mov loope and negl adc out mov into (bad) xchg loop xchg cmovl test adc jmp mov mov mov imul lret es pop push push push repz loop dec loope cs adc loop xchg mov div push rolb inc sbb fadds addr16 add loop mov movb pop lock and repz clc mov jge mov rcr dec sub or mov lods xchg sub stc xchg dec movsb or mov push add ljmp mov in mov (bad) jns mov adc sub mov sbb daa into lahf jbe jmp inc jnp (bad) xor sub (bad) std repnz or sti popf daa jns dec cmp cli mov push loopne adc out iret add push loop add mov or lods mov fisttpll test or add fldcw jg adcb sti sbb jmp jp in add out dec (bad) dec fs xchg loope movsl push mov dec repz adc imull scas stc in mov lcall fcomps arpl ja hlt scas push ja and mov sub jge dec or xchg std xor dec push and push stos ja xlat add movsl stos mov push iret pop sub cmpsb mov out fstps adc (bad) out sub sub out lret push dec fadd or jmp push sub mov leave sar test push dec cmpsb jb mov mov divb in daa push cmpsb push sbb inc jne or cmp sub int3 xchg jns dec iret jmp in sub cld pop mov daa out mov push shr pushf (bad) inc add jl loop push and (bad) adc cli std dec jmp loope outsl dec popf xchg sub cli cmp xor fstpl sub sub xchg cld mov inc push xchg mov fcmovnbe sti imul pop mov jle and sahf stos loopne movb mov inc xor lahf xchg ja imul scas nop scas iret xor gs sbb add jmp and inc cltd icebp dec dec je cmp mov jbe push inc dec out ret cmc cmp push addr16 and popa adc inc adc or (bad) psraw xchg mov sub into pop inc aam mull xchg xchg int jnp sbb das mov mov out dec pop pushf inc xor jg jbe out sub iret stos in dec movsb jo icebp (bad) jno fsubrs push push lret xlat addl pop loop xchg mov lret (bad) ja add mov inc inc mov lret in scas mov mov add sub sbb ficompl sti dec insl xor ljmp (bad) nop cld or fildll cli jle fs int3 jmp icebp rorl clc cmp lock (bad) pop stc (bad) dec mulb sub mov xor sub mov cwtl push or xor mov inc mov pop push insb cmpsl insb and sahf and icebp pop movsb insl xchg out arpl push add sub add scas fs mov add pop push test pop pop sahf shl xor mov inc out mov repnz push mov jecxz and xor in daa aad loope stos scas push mov fldl lods dec ds xor add aam int aas lods aam add add lods fistp ret and add inc es or and and push out dec jae pop and mulb inc pop clc rorb lret push pop roll ret adc mov arpl and je daa inc (bad) and fnstsw repz jmp leave fs cmpsl les or mov or ret decl aam stos out dec xor sti repnz dec (bad) (bad) xor pop inc scas or daa rcrl inc jmp pop sub dec loop sub mov repnz inc and xchg xor in xchg xor das insl sbb mov and das les cmp call and xchg notb dec sub in stc mov mov sahf cmp push repnz xor xor lahf jecxz and cwtl sbb add xor mov ret test xchg inc ret sbb loop add adc pop pushf icebp and sti jb sub into cmp data16 in repz mov push (bad) popf ljmp jne push xlat push jecxz mov lret inc sub es sub mov subl loope ds test stos cwtl js xchg dec jmp xor dec pop adc mov xor cmpsb outsl cmc aas mov je ret jns pop or sarl dec (bad) (bad) or ret loope insb (bad) sub rclb outsb sub movsl in repnz cltd add jp test cmp leave push (bad) lods jmp test rcrl sbb xor dec call hlt jmp add daa and mov mov outsb popa iret jmp pop (bad) in cmp xchg rorl fldl mov sbb mov sub daa mov inc add (bad) xor (bad) xor dec sub ja fcompl lret das adc bsf shrb mov clc lock pop xor inc icebp xchg inc xor popf gs mov idivb leave xor jmp adc xchg aad rdtsc popf adc or stc xchg notl jb jp sub ret cmp jge hlt push lods xlat test idivl cmpsl jns xor mov mov and xchg jecxz mov int3 push add (bad) cwtl aad mov xor mov jmp fadd ret mov pop das xor pop daa sub xor jecxz cmpsb mov lods (bad) xor adc sub xor scas fstpl adc sbb or dec cld daa mov jg or ds xchg push movsl out out mov dec mov push jecxz add rolb (bad) arpl scas xor push push divb push rorl and fildl add pop clc dec outsb pop int or jbe push mov outsl mov jnp lods push xor aaa scas xchg cmpsb scas std add stos lds dec push aad mov jo jne pop roll outsb int3 sarl or mov sub and sbb or pop jns das repnz xchg xchg mov pop and nop testl and sti or std push insb pop add fs pop jnp outsl daa out repz jns rorw addb mov lods ja lea jo (bad) cmp repnz cmp fdivrs fld daa cmpsb data16 inc cmp subl shrb fisub push call inc lock out fs xchg xchg out jecxz xchg fs fisttpll andb shr cltd xor inc dec (bad) pop cs aaa pusha ss jne sbb rorb add mov adc xor icebp and push hlt mov or xor adc lret loope and xor ss mov mov out sub rcr cmp nop xlat adc movsb test xchg sti push xor pusha rorb adc xor aaa push cltd aad xchg sub test popa iret (bad) jb test enter loop shll in mov das testb (bad) out out jbe cmc push jbe mov xchg pop add cmpsl out pop outsl repz xlat addr16 leave ror sub mov jae sbb fs pop mov dec inc jmp pop sub mov aas add into dec in mov lods cmp not mov xchg lds cmp jle or mov popa (bad) cwtl pop dec push scas mov iret pop sub in inc aas sub inc lahf das or jecxz or or pop and rorb pop cmc icebp enter and jne pop in mov iret or inc ror dec sbb dec pop push add aas stos mov mov lret fisttpl enter imul push test adc cmpsl test or fistl js sbb xor cs jne mov mov push jecxz xor mov sub inc pop pop in push sub jge lods and jo pop xchg (bad) mov jg fmuls aam in scas into test mov shll popa imull fisubl loop adc and arpl pop dec xor and repz push mov adc bound and (bad) ja test leave cwtl sub pop pop test frstor sbb mov lds jecxz repz daa push mov or gs inc push mov jmp adc or ja imul insb popf roll push shrb loop mov inc enter arpl mov sahf pop bound push testl xor mov sub mov lods mov int3 mull xor jae lret cmp lret daa or push in insb mov mov mov pop cmp arpl xor out bnd sub sub mov adc in inc sub xor pop sub mulb ljmp mulb (bad) notl mov jp icebp scas cltd mov jmp (bad) test sub loope mov daa xor push push loope data16 push lods mov leave outsl xor out inc aam out cmp sub pushf push dec jmp jbe out mov das rcrl icebp cmp mov sub shll or pop enter cltd mov out dec fimul sub xchg add or in das sub jo add lds fnstenv mov lret xchg jle cli loope push or into xlat sub das pop in fstl mov leave xchg sbb test jl mov dec xor test xor gs popa insl and outsl mov fldcw xor ja xor shll xor mov add xchg (bad) mov mov pop test xor add icebp lret outsl xor mov cltd ficoml pop stc xor in (bad) leave sbb xor sub stos jo out xchg dec testl and pop add mov out mov std leave xor inc call daa sub mov mov cmp out jne ja aaa xor imul popf xlat push sbb mov mov cmpsb movsl imul bound cmp das mov add pop sub mov push popf jo mov jb rcl pop fldt mov xchg lods mov iret mov push insb dec pop jmp frstor and jo or mov jns aas arpl out mov pop or and inc or push pop and add jle (bad) fisttp or push test enter add rep scas mov cwtl pop inc jns add sti addr16 xchg xchg jb mov pop or dec dec lea or add lock pop bnd xor fistpll cmpsl pop out or bnd je dec fdivrs scas cmp and and ss dec cld bound inc jbe fldenv pop xchg aas mov xchg mov test rorl dec out es mov xchg mov mov adc cs inc push add xchg enter sarl imul popf sbb sti jno and and pop dec xchg leave jbe pop test andl pop in das imulb mov jae movsb mov xor pop xor fnsave push mov andl outsb sub xor fnstsw idivl lret sbbb ret stc inc dec pop xor sub (bad) fisttpll xor push add lods mov out mov das sub out dec ret in push ss mov ret es push or pop push or lods (bad) jo jle push inc in rorb push movl cmovbe jae repz push (bad) or pop xchg es pop xor in pop lret mov add sub pop adc mov stc push xchg emms mov scas mov sub mov mov add imul rclb ret push shl imull in loopne cmc cli out add and dec xor (bad) jg push jmp dec fbstp dec jmp mov out icebp push ret movsl cmp imul scas mov push sub in xchg xchg les mov dec icebp mov das sub inc jle pop lret adc popa (bad) mov and mov or lret test sub mov data16 insl add or (bad) call in cs adc inc ret mov xadd add inc test incl insl das xor repnz movb or repnz shll cmpsb inc push and mov mov lock mov cmp lcall pushf mov jecxz (bad) or icebp mov movsl push mov leave push int jmp xor mov into sbb lock (bad) test push pop in xchg enter scas ds xor adc fnstenv (bad) aad inc xor and or sub in add scas mov repnz loop outsb in repz je or ss mov dec inc test cmp daa stc fcmovnu cmp xchg add mov or mov shl jp adc (bad) test add or push xchg popa ret jmp loopne test and into adc jmp adc adc cmp xlat sub out pop mov push mov ror jo add mov lcall or lods push pop dec mov cmc out mov cmp dec pop or sbb xor sub inc lds mov cmp push push inc sub xchg fs and in leave adc ja xor jecxz adc popf xor adc push out jb sbb mov add xchg sub push mov sbb pop adc (bad) xor icebp mov sub push data16 repz dec or out push cmpsb in cs scas stc out ds cltd adc fisub mov jno jns pop scas sub sub lcall (bad) adc sub mov adc xor iret ret jne aam (bad) xchg sbb mov or jo popf mov push adc stos lret repz sub jno ret and mov repz stos mov lods xor dec mov sub fnstenv sub push pop in icebp mov push pop and xchg adc and adc int sub insl lret cmpsb sub dec lret cwtl (bad) out and jg into jge or xor push xor adc clc enter fadds push mov popa and dec lea xchg and mov pop mov gs cmpsl lret jle jo mov pop fidiv jl jmp pop push pushf je and jmp or pop and pushf mov ret cmpsl and es aam imul cmp jge repnz loopne movsb add dec jge sub push lahf jbe push and out call out cmp sub sub mov sbb test mov cld andl dec lret dec std fstps dec push icebp sti lods jmp mov les xor fildll mov icebp pusha test mov push xchg xchg inc push and repz xor xchg aam mov inc leave xor cmp pop lret pop mov addr16 daa pop xor mov sub inc xchg push or enter push lret inc js and dec in pop daa or in xchg push or dec repz in das sub sub adc push pop dec lahf bound jns adc mov push insl pop (bad) loopne sahf cmp scas loop sub dec out and mov incb outsl jb jo jmp xor mov cmc out xchg add lcall jbe xchg mov inc scas ja pop xor cmpsb mov mov pop popf lds pushl inc xor xchg xor sbb jg dec fsubrl idivl lock call xchg pop sub sbb mov stos (bad) push fsubl mov ret sbbb fidiv dec shll std rcr inc xor jns lea sub jmp and (bad) fbld movl loope loop inc adc mov inc cmpsl daa ret hlt push jb lock daa (bad) int3 in clc lock xlat and decl mov loopne out jmp repz xchg dec xchg pop das in std enter jns dec or jle jb dec inc and or stos add xchg cmp popa imul or (bad) cmc xchg xor loop or repnz cmp add mov jecxz sub jmp (bad) repz fadds adc sub mov sub sub lea popa pop and mov cld xor stc pop adc ljmp mul xor mov ret xchg jle and ljmp popf out nop iret xchg out shr pop aas sub push xlat mov fs ret hlt out add cmp mov pop push das fistp movsb mov lds movsb and leave mov jmp push add scas je mov sbb mov cwtl (bad) icebp mov sub jmp in test imul mov (bad) jl imul push sbb mov xchg xchg (bad) pop scas sub pop (bad) cltd and push das in sahf mov enter leave xor fst jne jbe imul mov fild or sub gs add pop fisub xchg (bad) call push incb push sysexit add ja adc jne ljmp out (bad) out stos clc mov mov xlat xor mov adc push fildll xor jl movsb adc lock add or push dec cli sti and cli popl rcl mov adc push jecxz cmp push adcl ds push adc xor mov ffree push xor cmp and mov pop xor mov imul bound clc jmp inc sbb pop sbb jae sbb mov dec add lret aaa fiadd add out mov fldl pop mov lcall pop pusha out ja cltd jge scas inc testl pop pop push adc mov push lea les xchg icebp push pop sbb out cmpsl loop pop pop arpl cmp ret out lret rcrb and dec sub dec mov cltd insb jbe and lock xchg sbb mov fucomip sub repnz xlat inc add sub lahf push fisttpl daa mov dec pop jbe pop sbb rolb cmp mov icebp jno popf cmp add jp xchg and adc vmovaps out dec leave cmc jnp jno jmp pop insl test dec mov mov or (bad) scas imul ljmp sub mov push orb js mov das cwtl push icebp xchg cltd inc idivl lret bound xlat jg xor and adc sub inc sub xor lret mov sub xorb test dec mov pop sub popf and adc ror add ja lods pop jecxz add fmuls xchg stos (bad) iret push sahf (bad) mov pushf xor xchg mov cmp mov subb mov jae sub pushf adc or jl mov push cs add dec adc iret stos push aam mov mov lods les repz iret cmp cmp mov inc jg xor popf jbe push shl leave and and fs mov cwtl test (bad) cwtl jl mov xchg in fs mov jo (bad) cli loop iret xor mov adc add enter push add sub fbstp push (bad) out mov sbb setbe (bad) mov or pop cwtl xchg loop fldt fpatan jp jb add jecxz or movsl or sbb lock scas or idivb and (bad) (bad) fimul mov add pop pushf stc jae ret and pusha fwait xchg mov ds add jle add and scas xor call push mov cmp push xchg mov add fisubr sbb jle push outsl call gs mov sbb clc (bad) (bad) and dec enter sub dec rcrb fmuls cli or xlat mov adc jne mov idiv cltd mov clc lods jae mov out or pop out and mov xor add cmp adc (bad) fcoml test ret das cmc xor (bad) adc dec add scas dec (bad) add daa fldl cmpsl jno adc xor (bad) out fwait sub adcl stc lods leave icebp pop inc clc xchg leave test xlat mov or xchg stos jecxz and xchg dec dec clc sub mov push js sub add or push mov dec (bad) sub lods and xchg xchg or rorl bnd add mov sub inc xor fstl pop int or and add gs and mov stc jbe jge jp push mov (bad) xchg pop adc sbb and lods push loope sbb je lds or (bad) or or or stc mov sub pop mov outsb fdiv (bad) sub adc xor xor sub mov mov leave rcrl xchg add sub mov aam iret add mov and xchg fwait xchg mov pop pop mov mov (bad) (bad) scas jecxz shr enter fdivrp (bad) ljmp add mov push sub or mov add cmp cmc xor jge jmp adc out lods cmp aam dec out daa pop xchg scas inc push mov add xor mov (bad) (bad) mov dec out dec sti mov dec xor pop mov add sub and xchg stos pop incb adc fdivrs pop add xlat inc das or cld dec movsl pop imul pop inc and (bad) (bad) enter jmp (bad) call das pop jle imul iret scas sub jmp xlat shll sub jge mov sbb add cld (bad) mov (bad) mov shlb andb and mov fsubrs xchg jae cmpsl jo mov xor test mov or ds pop ss leave out mov pop clc pop pop fstl movsl (bad) das out dec xor xor sub and out sub jg jo seta mov lret xchg mov bound rcrl jg ljmp imul mov sub mov xchg idivb bound cmp xor push test mov xchg pop or (bad) enter stc mov scas and add pop xor enter adc das (bad) push roll inc add mov aas jmp mov push lods in pop cmpsb imul mov xlat mov (bad) or jecxz pop push or stos adc fldl mov mov iret cwtl mov add or cmp mov mov iret add (bad) mov push push push daa sbb xor xor add loopne push mov data16 push pop gs mov sub jbe xchg jecxz lods ret cltd out push cli lret or jmp mov cmc push xchg or jbe rorl mov insb fisubrl cs sti sub cld cmp mov and pop pop pushl push pop inc jno dec leave mov mov ret ja pop and leave ja sbb js pop xchg fcmovbe sbb inc sbb pop xchg sub popf vmovsldup sarl mov and and xor testb xorb sub sbb add test movsb aam jmp mull bnd icebp push (bad) mov inc xor popf pop jecxz pop in or add mov cs test and int gs cltd pop jle loop ljmp stos inc sub decl cmpsb movsl add xchg cmp pop and sub test pusha and mov or std dec pop mov fisubr pushl in mov rcll loop xchg stos repnz popl mov adc jmp popf fist in add pop mov sbb sub pop pop ret stos sub mov add das mov movsl testb out mov xchg scas lcall ds (bad) daa push cmp outsl push lahf cmpsl fs mov mov ret add push fisttp add pop movsl pop aad fprem and inc dec mov and sbb xlat data16 push pop mov sahf push shr xor fs lds jno or nop sub pop mov dec pop mov mov test xor out sub mov lock repnz ljmp lret out pop movsb adc adc push mov push addr16 int3 add adc mov xchg lods ljmp int and cltd lcall xchg fiadd out call push out add les mov in cmpsb repnz sub dec divb mov ljmp jecxz push dec jle xchg mov inc nop push pop es test (bad) decb mov add popf push xchg dec mov xchg ret lods mov cli sub or ret and push mov pushf mov pushf jbe add fstp push cwtl incl mov adc xor out enter ljmp mov out inc and sub or and std xor inc sbb jg (bad) lock mov jns rcrb xchg (bad) mov xchg std push mov (bad) sbb imulb (bad) jmp mov adc pop or ja xchg mov aad xor scas in and xor xchg enter movsb pop xor fwait enter aaa ret enter ficom outsb testl dec xor out mov pop adc mulb (bad) cld int mov add cmp sub or (bad) cld add in and cmp fist lods pop aaa leave fadd sub popa test mov mov sbb adc mov sub orl std fisttp sub rcrl mov push pop dec lea mov mov ret outsl das or lcall and inc pushl bound jl push xor loopne mov addr16 popa jp psubq mov movsb movsl out xchg hlt push xchg cmc adc mov mov sbb push jl add sbb mov mov stos jne mov inc pushf push xor mov out dec ljmp jge int3 sub scas mov dec stos mov (bad) cwtl and dec in sub fcomps sub dec and (bad) dec jmp cmp cmp xchg sarl fbstp and or pop int3 xchg mov notb push xor mov dec inc mov enter adc shr shrl xor cmp mov mov lahf cli fs in mov and jbe les xchg jnp inc mov imul mov or mov xor jmp call mov stc fidivr bound pop shr jecxz adc out daa jecxz adc xchg jg out xor xchg out sti leave ljmp leave sub mov push (bad) add das cmc sbb mov (bad) mov (bad) lock xor add dec mov out rolb scas inc or mov aam pop sub xchg lcall inc or jne mov out mov cmp mov push sbb cld ret xor aaa fs repnz sub cmpsl shrb cmp scas imul xchg std icebp out cmp arpl and xor mov xchg mov sbb les (bad) hlt and dec xor in push popa mov (bad) push pop xor ljmp jle lock mov scas dec pop fisubr (bad) lret lea add and repnz cs or sbb (bad) jbe cmpsl fcmovne xchg or pop (bad) shrb xchg les enter lahf (bad) hlt popf lock lret pop neg and or xchg imulb mov jne mov repnz lods mov fiaddl cmp jns lcall mull insb jle fild lret (bad) mov adc je xor fbstp (bad) sahf adc mov and mov inc scas imul pop arpl outsb into inc pop pushl (bad) fidiv or push lds push jg push pop pop jmp sub inc leave (bad) jb xchg mov sbb sub call jp mov negb test cld stos movsl ljmp fcoms sub rcrb mov pop sub add xor sub rorb lahf pop out and sub xlat ret pop fucomi dec nop adc dec insb push (bad) leave enter fnstcw mov and xlat xor jmp xor and mov lea jne lods push xchg in dec xor fisubrl fdecstp roll leave xor mov jne mov fwait ja mov in iret cmpsb adcb add int popa mov cmpsb push daa xor push cmp lods lcall popf fldt shll pop movsl int3 jne dec or mov daa (bad) ja xor lea mov xchg int3 loop add pop popf mov fcmovnbe movsl lock pop mov add sub sub or jbe je adc ret xchg sti in xchg loope mov cmp jb das xor ljmp dec sbb cs jmp notl xor sub or faddp xchg push xor fs mov loope jns sar fs scas fs mov test (bad) cmpsl push jge dec (bad) cwtl or call sub outsb repz inc subl movsl data16 and lods jl mov ja push stos fdivl pop adc cltd cmpsb push frstor cmp fstps (bad) mov notl mov pusha clc es bound (bad) imul xor mov cmp lahf rorl and adc xchg sub leave iret mov mov xor and jmp mov and loope mov jb sub xor dec sub in or psubsb repz lahf cmp adc data16 adc xchg sbb sti jnp mov sub fsubrl cmpsl push ss xor push xchg (bad) xchg jmp mov pushf add mov aas and aaa sbb sub rcr aad fild jmp adc stos sub (bad) call stos cld js clc mov rolb mov dec sti xor mov out dec mov outsb divb pop daa xchg out aaa test xor fimul xlat stos or pop out cmp dec add xor scas lods or pop cmp dec loope out cld leave movsb mov shl hlt call lret jle cmp loope push sub (bad) leave cwtl adc push xor scas lds cmpsb or je sbb xlat pop lock cld cmp or pop out mov out (bad) stc xor (bad) and xlat out cwtl test pop stc popf pop ret scas je out cmp icebp pop and inc sub iret leave aad iret out xor push jno inc sub push pop (bad) repnz outsl dec jmp or jb or and mov and mov mov lahf push xor insb mov lods push popf xor mov sub shll pop inc and (bad) hlt jp push lea xchg sbb add pop je xchg pop adc cld (bad) mov xor gs out lods out jns imul mov popf cltd iret ljmp xchg lds or sar sub test lret add jno mov xor mov cmp leave xchg cltd lret jg push sub pop lcall pop icebp in stos mov int ds add hlt daa insb adc pusha repz dec test leave iret or stc cmp jge cli pop cli lret repnz mov xor xchg or out jmp gs mov push or jle cltd adc sbb push loope fld jle sbb and sub lahf mov jecxz xchg xchg fistpll push dec fsts xlat xchg sub lret xchg fidivrl dec out mov add cld add sbb data16 psubsw and in xor stos gs out mov jmp sub testl lock sub jecxz and push xor dec xchg or in or add or and pop add cmp (bad) jmp inc pop or outsl in fbld jmp mov repz adc add pop sti bound pop push pop (bad) xor ljmp pop pushf sub and sti xor stos loope bound and out mov pop lahf add out inc or lods hlt cmp hlt jmp outsb dec sub push sub mov push cmp xor xchg mov mov inc add dec push ljmp (bad) jo popa pop xchg imul mov fstpl push les lret cwtl cld icebp or cltd out popa xor repz mov push mov cs insl outsl pusha mov aaa xchg (bad) std (bad) cmc fldcw add xchg jl sbb dec call lods nop xlat cld xor fistp adc sub sub (bad) adc jmp popa mov jns imul sub pushf outsl lock lret lret notl sub inc notl jmp sub or arpl sub or pusha mov cmp mov add cld push xchg call gs xor pop mov into inc xchg jne sti mov (bad) jmp sub cwtl shl mov imul jmp cmp fcmovnbe dec jl sbb jge clc add out subb dec clc xlat hlt std (bad) dec out pop cld sbb push sub sbb push data16 inc inc stos pop cmp sub sti out mov pop cld xor std dec or jmp inc mov cmp nop jmp out sub mov dec lods (bad) xchg test mov pop mov mov sti mov lahf int3 mov cs enter or std lods dec dec dec jp mov add xor adc notl in mov mov push div fisub (bad) cmp xor xor mov idivb pop push ja add (bad) mov pushfw dec out sti sub test in xor into and mov mov lret dec daa mov push jns pop pop fisubl inc push sub sub rcl cmp (bad) inc add test push out inc popf aad inc loop insb pop add lods sbb jmp mov stos xchg mov movsb pop (bad) jmp mov push mov xchg sub mov cmp imulb fucomip or je cld aam rcrb call xor popf dec lret ss mov mov jo dec sbb out daa or jns test add stos jecxz adc and mov aad xor mov sub mov xchg cmc xchg cmp subb aad jl pop es adc xor xor cli push (bad) and xor push das or lods lret mov testb push shll add inc daa ret insb (bad) mov mov (bad) cld and xor fild jmp adc mov push imul (bad) push sbb or ret mov movsb jmp shr orl mov (bad) shrl sub sti adc ds outsb imul scas into push jmp sbb jmp (bad) loopne sbb aas jecxz vmovaps fldt mov mov push andl lods sar jmp xchg jne push push mov jbe jno ret pop popa and push std out and into (bad) stc jecxz pop inc imul arpl lahf sbb xor mov dec ret or xchg (bad) iret add xchg dec sti xchg mov cld sub xor xor into xchg daa out jne or and pop std ss xchg mov jg sbb fnstenv inc and leave cmc sbb jle lret je or lret sub mov adc and add jb pop push adc addr16 dec add xchg push mov push jge and pop mov xchg cwtl push or sub add mov rol ret out mov xchg adc mov xchg xor mov adc sti lods pop loope popf cmpsl je mov push pop cmp xor test mov cmp (bad) xchg mov mov test btc test mov inc shl push mov lea sub int3 xlat lahf push sbb ds dec or cmp lret imul imul leave xchg dec push sub add sarl js or xchg xchg xor sbb shrl les rorl sub pop sahf fwait inc and je or mov pop sarl and add imul out or xchg dec mov pop loopne out popf mov aam adc mov mov xor add and push mov push or cwtl sbb jmp xchg sub pushf outsl cltd (bad) push adc movsl xchg and add pushf aam push popf jae scas gs ret inc or cmp push and sub stc pop xchg pop cld idivb jg mov outsb dec ret popf outsl negb movsl and imul push lret or cli pop and (bad) stos frstor sar lcall les mov leave (bad) push in fsubr movsl mov das lcall sbb jp in cs (bad) cli pushl sbb clc sub pop cmp ret mov into mov cmpsb pop pop decl pop xor xor jge icebp dec sbb mov adc repnz lahf enter add xchg mov cmc test adc std enter adc fidiv (bad) lahf sarl or mov adc jg out jo sbb mov add int3 gs mov leave loop in pop mov mov mov repz subb das test mov in xor jmp repz jns mov sub sub fs test push add inc mov mov rcrl or (bad) mov das xchg mov sub sub sbb dec inc subl xor fxch mov leave std xor pop cld and sub das fsubrs into xor lret into and sbb (bad) lret and add mov cmp pop mov push xor sti fs mov xor sub movsl mov iret std out cmp push mov addr16 xor jp sub sar das inc inc cmp fldt sti mov lahf aam push push or jno iret sbb sub push or and jmp mov cvttps2pi or arpl icebp shrl bound aam lods (bad) inc jp cltd das dec mov mov and lods dec lcall push or popf test mov arpl sarl jb lods rol sub mov repz and ljmp pop pushf jle (bad) out inc das leave (bad) fmulp jmp pop xlat and sbb sarl iret push pop imul mov xchg xor stc mov mov leave xchg xchg (bad) repnz lahf (bad) (bad) mov or stc add mov in lahf xor das call and xchg push out dec mov je push repnz shlb push mov lock sahf arpl adc repz lods and pop lods (bad) sub xor jno inc inc out lods fwait mov pop xchg and nop pusha jb popf push push in jmp fisubr lds out push add mov sarl cmp cmp nop and mov and sbb mov jne push or add dec cld or sarb (bad) out je mov cmp scas movsb divl mov jle jae lods loopne cmp jnp xorl jle gs (bad) dec mov (bad) xchg dec aam push fcmovne xchg jp (bad) popf ror cmpsl cld jbe inc outsb shrl jbe pop popf roll rorl jge test and add (bad) xchg icebp bound mov xor outsl loop (bad) clc mov sub or mov cmc cmpsl push clc imul cmp dec fs wbinvd xchg mov imul push push hlt insl inc xor pop cmpsb mov (bad) scas jne out iret jbe xor adc int3 pop jmp stc xchg test fsubrp sub jb mov add negl pushf into inc popf jne loopne js aam jmp mov dec mov repz js dec push fdivrl (bad) std pop in xchg lret sti out mov mov stc lret dec sub jae ljmp or (bad) pop repz cmp movsl ret cmp and idiv imul dec sub mov enter fildl ret jbe pop (bad) (bad) lret inc push insl dec outsl mov sub xchg mov sbb xor pop out sub xlat cmp negb adc inc pop mov mov in stos bnd sub cs leave sub andl das mov jl ljmp push fwait leave frstor xchg test out xor or push in mov out xor mov sub jae adc push cs adc add sub in lret mov or xlat dec iret ficom mov adc popa lock pop in mov out adc movsl stc jb mov out pop (bad) sbb mov push sub andl inc movsb test push pop mov jecxz test push lret pop dec jmp in pop ret sti (bad) les inc aad add fistpll aas movsb mov enter jnp rorl icebp and xor push out mov push lcall or notl jmp push mov pop lods push lret sti xor idivb xchg aam cltd outsl jnp mov (bad) adc sub adc push pop repz shrb lret imul mov sbb pop sub (bad) xchg fsubrp jns push rdtsc into decl jg lahf xchg xor lea into and inc add or push stc inc pop mov dec stos mov test mov dec icebp and pop mov movsb sbb cmpsl test bsf movsb out sub push add jbe or stos (bad) xchg movsl pop insb fcoml lahf mov gs and add add ret and mov adc xlat out jae push dec push stc or cmp xor adc dec aas or les cld sbb mov mov (bad) xlat scas mov mov xchg push adc and or jg mov les repnz xor scas ljmp movsb cmpsl push adc fsts add frstor sbb movsb dec inc pop xchg stos mov lea sbb and lock or mov repnz or lret imul and cmpsb mov (bad) jnp lock xchg movsb jo pop (bad) xor cli (bad) cmp dec test mov neg scas daa ja xchg (bad) jg es xor cmp lret xor call xlat inc inc mov sbb sarl pop pushf divb ljmp mov stos fnstcw push aas fcoml sub mov or push push fmul xor and adc repnz (bad) or or flds cmpsl out popf loope add ret mov mov xchg sub push lds jecxz add xor repz leave test fcoml loop cmp sub aad mov (bad) xor and leave fldcw pop and cli sub mov jp sbb push popf mov notb aaa sub or pop or ja test (bad) cmp dec fsubrp cmp lea (bad) sbb push sub es pop xchg ror sub mov inc fimul jg sub daa jg cmc sti das mov or dec ja popa and mov mov jne shrl mov sbb in into mov outsl push jge loopne jg in mov movsb mov or lret add xor sub lods adc mulb mov insl push int3 in rorb sub stc sub mov pop xchg add pop lods add daa ljmp inc push jb std sub mov pusha xor cmp lcall and push mov dec (bad) cwtl insb out mov imul xlat stc scas pusha imul inc add call rcrb loop test (bad) cltd fisubr jo ss divb dec xchg cli dec stc push out sub xor ret push subl push sub and pop mov jmp fldcw mov iret xchg jmp lahf hlt dec cmp pop dec mov adc dec ljmp jno xchg leave mov sub mov mov (bad) nop test cli xor das stc cmp gs push xchg cmc sub cwtl das and imull outsb push mov pop push cmp (bad) pop inc sub pop mov mov dec or mov pop (bad) adc movsb pop into pop fcmovnu xchg mov test xlat fcoms adc add inc mov lods rcll out dec pop (bad) clc mov out mov icebp jmp or scas dec scas (bad) dec daa fidivrl lods adc int3 lahf mov cmpsb loope ljmp out or dec sti push or jle jge push or lahf lret lret stos imul dec lret sbb roll sbb mov test pusha xor and (bad) loopne and rorl xor pop into popf lock pop xor jle daa and icebp roll sub in pushf mov xchg mov dec pop dec dec in jle arpl dec dec mov dec mov mov lret mov cs xchg lods ret adc ret movsl (bad) das iret pop in sub daa push mov push cld daa add xor jl jo or xor call mov pop pavgw push add (bad) cmp out adc pushl movb mov pop adc movsl movlps jmp and mov cli fs (bad) mov sub mov cltd mov testb sar outsl into cs or pop mov sub dec call mov or daa pop test dec fnstcw popa mov dec sub out nop push (bad) add fsubr sub scas adc mov and scas mov sub sbb and pop ret push add (bad) and xchg jae xchg jmp js loope mov lods cmc in cmpsl push bound sub lods rolb xor and xchg imul and jno out mov ja jns movsl adc xor or mov mov or inc add and stos divb sbb in daa mov sbb bound out and push sbb (bad) enter cmc jb xchg sub in jnp mov mov add push xor fadds mov ds (bad) scas nop test jno into mov xchg test pop sub add es mov imul fwait mov notb cmc cmp fcmove push adc (bad) test (bad) frstor xchg (bad) mov and ret xor xchg adc mov mov pop xchg call jg ret pop ror flds mov fdivrl add add xor dec mov sub jl inc add mov adc and cwtl stc repnz cmp xchg adc (bad) lds add cwtl (bad) sarb sar out dec jecxz xchg out xor clc loope lahf ja cmp divl sub xchg icebp lds in bound pop in daa icebp sub dec xor aad mov push into and (bad) adc (bad) and pop mov movsb lock fcomi push xchg dec leave ljmp fimull in fwait dec mov outsb sub test in dec sub out bound sarl outsb hlt js mov dec fucom xchg scas lahf aam pop dec push nop mov ljmp (bad) lret push (bad) pushf call (bad) out out dec stc dec shrb gs movsl push test jne mov or xchg stc xchg pop loop lds adc ja ret cltd je int3 dec xchg sarb sub mov jecxz sbb xor repz leave fbld jae dec push repz or adc or sti and xchg outsb sbb stos (bad) scas js push daa aaa das jne push add sub and pop insb cmpsl push xor pop mov pop sub sub jg adc stos mov xor mov decb add stos mov daa (bad) insb dec lret jp pop and out sub test mov int3 das inc pop js dec aad stos je (bad) sub pop or pop lods loop add add cli pushf mov pop sub cmpsb pshufw mov (bad) scas mov adc sbb jle cwtl dec and (bad) loopne dec (bad) popf pushf push mov js or inc leave inc sti idivb cli cmp sub cmpsl fsubr jmp add and scas rorl sub daa lds or and pushw push out fs mov lock adc stc mov cltd and cli cmp enter jnp push cmpsl data16 and (bad) gs pop pop add test sub jae call pop lock popf cmp add and sub or jb pop stc call test rcrb inc mov out pop ret test mov xchg jg hlt into sub pop repz pop sbb mov shrl lds (bad) fadds sub cs xchg jne mov sub lds xor push fsub dec sbb jnp popf hlt xchg dec or cmp adc out adc xor fisubrl jno inc xor mov and mov push xor testl imulb out mov clc mov (bad) pop and sub dec sbb cmp fistpll inc (bad) pop sahf pop or idivl aad mov pop xchg and xor and imul in das mov (bad) pop daa add rcll shl xor test dec pop dec mov adc and (bad) cmpsl add ret js cmp mov mov cmp xchg repz pop imul aam push ja push push and pushf mov subb xor popf pushf cmp fildl add stos xlat addr16 mov xor out mov in cmp jbe dec pop xchg adc out lret add in fcoms loop clc dec sub and jb dec cmp lcall popf idivl aam mov add repnz fs (bad) adc pop cmp lret and test adc nop out in movsb daa add popa adc popf push mov out insb aaa xlat mov sub and mov push dec mov push pop int3 iret and and mov mov stos cltd hlt imul cmp mov rclb aaa in cmp xchg pop jp push outsl clc shll push adc (bad) cvtps2pi dec push (bad) and pushf out push mov gs adc repnz mov (bad) cmp aaa loopne jae and mov sub lret mov scas sub ds dec dec rorb out and inc into fwait mov fcomps dec or add lcall push mov into mov rclb and fnstenv add add and outsb loop xor cmp and movb pop leave sub loopne rcr mov pop jmp aam push sub mov dec sub sarl movsl inc das push mov or in cmpsl adc jne inc loop iret push imul inc inc rclb xlat push mov mov sbbb lock fprem and mov daa ret subb and aaa add mov ja push (bad) mov lds xchg (bad) cmc push jmp add add mov pop xchg andl in and add jg je fsubp prefetch mov jmp out pop mov mov pop and sub mov pop pop jb fimul lock dec (bad) cli cltd scas sub jp sbb cmpsl pop out and mov xchg sbb pop inc sbb sub inc add mov imul xor rcl decb xlat adc mov mov mov cmp cld out pop out mov push jp sub ljmp sbb lret sub je (bad) or mov fldt pop outsb pop pop cwtl cmpsb mov jns mov and (bad) mov fs icebp adc ret test xor mov fimul and rorb fcmovnb rcrl sbb shl ret sbb or adc shrb cmp dec sub xchg lret scas lret repz pop xchg or fist dec test mov (bad) mov xor mov mov mov mov das dec out lret xor (bad) lods and test ret dec mov pop jecxz out inc add dec jg pop and mov in xlat out mov pop mov test or testb into add lret and daa pop in or ficom push cwtl andb popf dec rorb mov push mov sub sbb sub aas cmc jle into enter jne pop mov test xor pop and lahf xor jns xchg mov cmp mov jge stos scas jns inc ljmp pusha or pop xchg dec je xor pop lret sub test xchg call sub add xchg repz or xlat ffreep push jmp mov xor in loope rorl shlb popf mov xchg sbb sub add jmp sub xlat stos adc (bad) int ljmp sub aaa and pop bound imul or pop cmp add pushf mov out mov lret data16 fist out inc out pop dec outsb fs cmc fldenv das jo mov sub mov and push icebp inc jp shrb negb decb and (bad) popf xor icebp xchg cltd mov shl jle inc movsb jecxz dec xor loop cmp mov testb aad movsb dec xor out jg pop xchg imulb mov xchg sub aaa inc fcomip xor lret sub push push and or test shrl iret sub scas add std sti dec or (bad) fmull leave ja cld xchg xchg fs xor orb xor mov gs jg aas (bad) xor and mov iret (bad) das gs jb negb fisttp dec clc xlat js loopne cmpsl pop out mov xlat scas out pop cmp in inc mov icebp jbe xlat gs mov dec (bad) lock xchg rcrl and mov jmp mov mov and mov loop jg jmp insb push xchg mov into add repz negb mov out arpl or test mov ja into add sub inc repz bound leave pop inc daa cmpsl out xchg jb or jbe jg xchg cmp push adc jl pop pop push push adc loope loop (bad) fstps cmp dec or dec fwait ret push cmc loopne loop lahf push loope push ss sub inc dec stos lret cmp dec mov leave cmpsl sbb aad stos mov and adc mov mov sbb popf in sub rcrl jae add jne lret xchg cmp pop xchg mov sti enter jmp into sub dec mov repz pop jmp and lret shr popf int fs pop mov and in pop inc cmpsb and push add stos mov jnp push jb call call adc mov das cmp (bad) dec sub (bad) push lods pop mov xchg pop mov dec sti dec adc and mov pop movsl or enter arpl mov xor mov mov dec bound sub out mov nop push add daa pop out and mov jb je push or clc jb dec fucomip xor pop es repnz out mov jns sub mov push ret and or mov dec add test xchg mov and mov xor xlat xchg in adc test add popf fidiv push call inc popf dec nop roll pop sbb add mov and pop xchg icebp stos cmp outsl and push and xor or sub mov pop or sbbb ss cmp sub pop enter push and sbb aad push mov mull xor jmp stos je and mov outsl out shrb pushf sub pop pop push or and out gs jae jo xor mov fcmovne xor test (bad) mov iret das xor ret fnop ds xor cmp sub mov adc cmp and xor fdivrl shl sub sub lret sub xor add popa lods arpl lret je jbe popf out out push repnz xor sti mov pop xchg lahf das hlt sbb cmp repnz xchg xchg mov jne mov ljmp daa mov (bad) divb (bad) (bad) cmp pushl sub mov and mov dec jle jecxz push bound std xchg rcll das cs jne xchg mov stos jnp inc flds lock dec xchg shrb mov dec mov and pushf lahf (bad) lods in stos loop xchg movsl sub sti sub int and das lcall pushf jne inc add cli bound cmc out xchg pop xor push sub daa pop mov (bad) push sub mov dec ja out test lcall clc nop mov pop ds inc cmp imul in fistp out jp push mov xchg push pop nop push adc lret adc add std adc push jno test dec flds inc mov jae cmp inc or dec cli mov ret std loop push ret idivl xlat jg cmp jge iret dec mov fdivrs idivl add pop dec xor clc or and nop add ljmp fbstp rcll push stos dec fild sub outsb mov mov mov loopne enter push xchg xor sub xor sub xor data16 xchg jge mov bound fidiv xor or cmpsl pop push push popf jge and sbb adc adc out inc sub and stos das cmp fisubl mov les call mov divl das cmp jns leave xlat jae dec xchg daa push dec dec adcb shrl loope sub rcl rclb and push jae lret in mov jnp,pt movsb movsb stos push mov pop xchg (bad) int3 fwait icebp mov xchg aam jp lds xor pop ss jl ret out dec in jg adc test fcmovne cmc push cmpsl sub lea lock out mov ret dec adc (bad) fimull sbb sub dec mov sub pop cmp mov cltd dec das mov adc mov repnz mov sbb sti sub jae and loopne pop enter push outsl pop lret out add mov sub push lds push dec clc mov add sub in rolb and jg scas das ljmp or jg out mov es fistp pop into mov pop xor add inc mov mov jo out aaa dec imul lret inc sub adc or add and dec pop cld sub jo mov (bad) sbb jp dec ja (bad) (bad) sub gs cmp and leave lret push cmp lret xor ljmp aad mov mov data16 add loope pop js ljmp or xor movsl (bad) push pop jp push or mov cmp (bad) or or cmp ret addr16 cmp adc sbb call sahf test jp mov dec outsb xor jo cltd jno inc push lds push mov lods test or push and xchg call xor ret loop lods loope xor ss pop cltd das xchg ljmpw aaa das mov adc pop mov inc xchg out inc xor sub dec lret and xor and (bad) lahf movsb andb pop out mov (bad) popa cmp mov pop cmpsl jne rolb push js call aad inc pop repnz lret addr16 and push pushf mov xlat or (bad) jne ficoml icebp and or xchg in (bad) adc sub mov shl leave add jmp jmp xor movsl add or rcrl imul adc push jno cmpsl push mov jmp test out repz enter mov out push rolb enter mov push inc sub mov mov das sti jo xor or clc jmp pop iret or jp pop iret ljmp mov xlat dec aad sub jbe popf (bad) cli push xor mov pop adc std adc in daa rcll push out ja push and dec xchg pop rol movsl pop (bad) into push mov sub pop pushf loop stc cs and negb cmc mov jmp push inc push idiv jmp iret inc into add push push rclb loopne sti adc push inc add roll dec sub mov inc lds lds insl adc (bad) fcomps ljmp xchg cli mov mov scas rcll lret fsubs push mov fwait xchg daa push mov pop mov cmpsb push xchg out out repnz and mov add mov jg ret sub sub jne cwtl outsb sub sub rcrb sbb xor in out and cltd loope subb ds push scas loope outsl cmpsb push adc (bad) pop in loopw fstpl imul mov dec outsl daa scas adc loopne adc into (bad) jp subb sarl fcmovb dec andb out jb or sti or add out daa jmp les add repnz mov push or movb ret cli aas fistp mov mov hlt rcrl jmp loop cmp lds loope das xor mov or cmp cmp jg xchg outsb inc mov imul xchg fdiv notb and sub (bad) mov addr16 and xor pop mov stos and cmp in loope (bad) clc xchg loope fnsave and mov dec or fild (bad) das pop in jge orl fs movsl mov pop arpl sub adc or out lret inc sub rorl scas jb add jns and das cli inc (bad) fs push enter fimul xlat push push adc repz sub mov in dec mov ficompl add lea sbb cltd jmp rcr sub cs and aaa inc popf mov xlat std inc xor pop lcall insb sbb loope push add movsl jae lods sbb out (bad) sbb into das popf outsb cmp push out clc adc fimul dec lds push or mov repz testl gs test xor scas repz out inc mov daa pop sub and movsb lea inc mov mov add dec into scas (bad) jg je add xchg leave xchg imul mov mov insb cmp fcomps ds sbb mov xchg imull (bad) (bad) das je les sti lods mov fwait add jae adc xor push xlat cmpsl sti adc enter ljmp in push mov xor and inc (bad) notb pushf rclb mov push daa add mov add xchg and xlat lods inc repnz push mov adc xchg and and jnp jmp mov icebp sahf inc xor cli ds or jb mov lea cmpsl ret pop push mov outsb (bad) (bad) scas fadd not dec cld jmp mov sbb and js mov xor push inc outsb pop dec test (bad) data16 lret inc pop inc fs mov sub test je popf insb nop xchg shlb dec sar mov lahf push add pop cwtl stos sub cmpsb push clc cli ret inc dec ja mov out je adc fstpt in movsb push add sub iret scas jne fsts or mov sarl push or xchg mov int3 mov int3 xchg loope imul sbb sub mov je jmp xor jecxz jbe arpl notb push leave inc mov and xchg lret out sub out enter fidivr pop add adc lea mov push adc jae cmpl jl cmp stos sub enter mov add mov push xor mov daa (bad) jg add adc adc in mov cmp jle jmp testl push popf xchg test push call pushf add push or test xor js divl out mov xor push jge xchg and rcl adc mov push fs mov out adc popf sahf cmp pop outsl mov jl inc pop add ret sar addr16 std or cmpsl fist daa cld lods sar cmp movsl imul sbb gs lods jl or out mov out push shr bound pop sbb cmp and shrb push cld jecxz and jnp adc push sarl cmp das scas jns loope cmp add xchg shll das lods ret cmpsl popa or mov mov ret adc add out mov xchg mov sub pop mov push mov ficoml adc sbb pop out xor cld js add imul call in out adc fimull fdiv mov fisubr push cmpl add pop imul or xchg cmp xchg insb inc add pop sbb dec inc mov aad dec sub pushf and xchg sub or outsb dec or mov int3 xor sub pop xchg add xor dec sbb xchg dec (bad) fst imul int3 jbe mov pop (bad) jno loop adc and repnz xchg cmp jmp das clc adc test aam mov shr rorl adc add mov rcrl pop mov gs mov (bad) xor cmp mov push add test movsb jbe fsubrp jmp nop sbb dec pop pushf push idivb and add inc and lods xchg divl into mov out das mov rcll adc push sbb pop jg lahf loopne or movsb sub adc or pushf sti (bad) jmp push sub outsl loope or inc dec sub adc mov jnp xchg xor adc or fisttp sub scas xor call (bad) clc scas dec cmpsl jmp iret std or repnz nop mov inc jo out cltd or sti and jl gs adc add test jmp or pop mov and jmp adc sub out jmp rcl into pop popf cld cld leave jne adc call je fistp loop orb or notb bound dec jo mov mov add pop scas sub mov ficom sbb push xchg in dec leave lret pop (bad) adc out sub cs xchg (bad) scas sub inc and pop (bad) pushf sub stos push dec stos jge iret xchg lret pop rcll adc popf add jmp or stos test fldt adc xchg into jmp push dec xor add popa inc movsl xor (bad) enter clc lret enter mov jecxz mov shll cmp imul pop repz or stos xor ret xchg push xchg aad mov fidivl mov (bad) xor and jmp fwait das xor or in jl dec cmpsl cmp icebp mov insl xorl imul xlat ret push imul lea adc lds iret lret and jecxz js clc int3 jns lret cwtl sub call lock pop dec dec idivb jl jmp sbb (bad) sub sub stc dec pop mov std or cwtl js mov stos push negl xchg dec add lock and testl inc xor push dec jne mov dec (bad) pushf mov dec and mov or divb jae lret jge test xor add (bad) xchg fadd adc xor adc decl mov ret cmp cwtl inc or call std pop push (bad) cmp lds mul pop jl iret add sbb enter jo dec test shl ror add repnz xchg push sub outsl test nop scas popf xchg adc movl pop push push notl or notb cmp pop leave das loope push lret clc pop xchg add mov insl xor lock push push fdivl stos adc (bad) lods out add clc and stos mov in push stos jp pop push jns outsl popf in jne xor lret mov and (bad) sub out dec mov aas mov call imull (bad) mov pop stc push dec je mov je roll lock (bad) dec das (bad) xor cmpsb pop jmp icebp stos mov pop or stos bswap stc mov std adc mov sub shr (bad) pop lods scas popf xchg sub cmpsb xor mov xchg int3 fwait adc sub daa pop cmc idivl jbe add fwait mull jne outsb ja fwait and lahf push xor or xor leave incb or jns inc in fidivr in arpl into in cmp shrd and imul ljmp dec cmpsl mov push and stos add (bad) push cld pop mov dec mov outsl or loop dec and jl jns daa sub mov out popa mov mov ret stc jge sti cmpsl into adc mov cli pop lret jl fadds jmp xor sub xor pop lahf adc ljmp mov inc ss fsqrt in cmp add pop and lret jne inc mov mov ljmp (bad) mov and repnz pop in lcall adc inc rol pop out and push lea mov mov fldl push dec xor add (bad) push jp add inc out add rdmsr pushf leave jmp cmp jp int cmp cmp jle lret jge icebp mov ljmp push add sbbl dec jbe mov xchg stos cmp out cmp lock dec cmp pop and mov mov daa fcoms cmpsl jle fs cli in insb inc dec mov scas xor adc sbb inc fcomps jbe out xlat adc dec mov idivl push sti xor scas lods jbe add jl divl mov (bad) imulb (bad) sub outsb cmpsl xchg fist bound mul jns push fs mov mov (bad) adc fmuls and lods lds or mov adc jns (bad) xor sub cmpsb lock sub jg adc inc cltd repz (bad) repnz mov out rorl (bad) ficomp and shll repz cmp xor add xchg pop sub daa out sub mov out xor (bad) xchg dec es in sub xor push imul sub sub popf out sti sub mov (bad) and mov test push xor repz lock and jmp outsl mov out xlat pop out int jg xor or xor loop lret out fistp mov lods daa jo xchg adc jle test stos jnp shll dec sbb scas push inc out loop lret xor xor or aaa or push in xor mull add cltd sti shrb fiaddl and sub (bad) push movsl pop gs dec into cs and sub fs add in mov aaa jg push and add cmp mov mov test push mov fwait xor inc or fisttp sbb (bad) cmp pop aas sub jnp in (bad) test mov out out sub test and into dec icebp sbb xor ja jb or (bad) sbb daa mov jge lahf cmpsb or cld lcall out popf xchg cmp popa inc ret pop aas jne or xchg imul out movsl test imul jo jmp fistpl pop into mov rorb ljmp xor stos cmpsl daa pop mov mov cmp lcall stos popf pop and incl call leave push jl inc movsl adc lds stos cltd push jp stc push repnz sub outsl in mov jns fld inc jecxz dec neg cmpsl inc lret xor mov mov or push jae or sbb xchg clc or je es cli and push jae push leave popl dec movsb dec mov test shll pop mov lds idiv sub bound or daa pop insb dec push xor and xor mov out sub xchg incl dec fisttpll pop and dec imul mov sub divl or jl test xlat mov adc adc mov xor cld (bad) lret and inc xor jne notb lods pop fist push add icebp xor lock and mov rcl push aam loop nop mov clc adc cld push rolb repnz insb push stc das xor add cmp movsl cli and (bad) fidivl add gs cwtl mov sub xchg adc mov outsl in push mov dec (bad) fdivrl rclb pop xor daa and jg call sbb mov mov ret xor cs mov cli mov roll or sub jg and out pop sbb sbb test jne xor stos xchg push xchg pop sub pushf sti lea mov xchg fnstenv aas loope ds test in pop mov mov pushf inc (bad) clc in xor (bad) cltd sub sub lock xchg fisubl push out or push jge jbe test pushf mov xchg (bad) mov pop cs or or jg pusha jno ret test mov xchg jg mov xor cmp and insl stc push imul pop idiv or push clc xchg scas mov sub fimul pop sub hlt jge mov js add rcll pop je test and xchg mov add add jge xchg pop push movsl popa add ret jmp fucomip adc mov out dec jle ja and pop and xchg shlb add mov divl pop xor scas rcrb sub hlt (bad) xor stos cwtl loope popf mov je les mov dec scas fwait adc pop adc ljmp xchg repz xchg fcomps loop orl incl add cmp mov dec jno xchg outsb rcrb shrb scas pop divl daa or insb fs add daa movzbl jle mov push add pop mov fs inc push cltd sub cmp push sub nop jp push dec mov jp cli test shr xor cmpsl cmp add popf loopne movsb mov xor lret xor mov clc out xor mov test insb loop ds xor mov jb xchg sub into xchg in scas inc mov cmpsl leave mov call inc xor das lea jg xor cmc gs pop or rolb out sub out sahf imul pop leave pop out je stos repz fidiv sbb leave rcrl mov jno stos or add add mov mov dec cmpsl gs add add mov std addr16 scas sub jo das pushl popa push add test cld jnp (bad) movsb js mov int3 arpl pop (bad) movb out dec test ds add stc es les push mov cmpsb adc push mov loopne rclb ljmp dec pop push je ljmp stos cmp (bad) lds (bad) sti ret js dec dec xor shll icebp lahf out and mov and xor sub cmpsl ja add sub jne scas scas push jns out push push dec jl in scas popa fs or sbb or sbb cmp xchg xchg and imulb dec and adc ljmp mov lahf mov icebp fnsave das adc dec shll sub data16 (bad) out dec sub sti xchg scas fnstsw popf inc sbb cmp mov aaa lahf in leave pop jnp or lock add xor ficoml jae (bad) sub test sub or arpl cmc mov (bad) mov push mov jne push push jg jo pop jbe xchg xchg leave or jns dec testl (bad) movsb out scas into stos push xor mov add inc sbb std shrb test or push xor push int3 sbb lock ja mov lcall add cwtl mov test decb stos pcmpeqb imul mov mov cltd dec and sub ds int xor popf dec cmp icebp mull mov cmpsl fisttpl (bad) jmp call pop sub (bad) mov loop push mov add sub push add xlat fnstsw adc jmp push or xor jg cmp (bad) lea sub in outsl sarb in je sbb push adc repz in in adc ror aam ret and ret (bad) jnp push pop mov dec mov scas ret loopne sub out cltd call sti inc daa jle adc repnz fldt pop into sub push fxch gs stos sub jmp add lret jns stc (bad) leave mov and notb ljmp outsb push jnp scas add cmp frstor mov xchg sub movb or (bad) xor or xchg jle pop pop std das xchg cld jo out xchg fnstsw mov mov push aad popa lods roll or push stc xor icebp mov test mov or jecxz pop pop xchg repnz mov je loop or or sbb bound dec adc repz shrb push hlt in ljmp xor mov mov daa add out (bad) pop sub inc xchg out lock dec into push leave idivb (bad) imul fwait mov dec fadds sub ret dec lea add jmp popa leave sbb sub insl aad call repz mov (bad) mov outsl sub imulb testl les mov xor sub adc lahf pop push imul decl jecxz xchg outsl mov aam in mov sub mov (bad) in or push xor or lea and adc xchg in (bad) mov push (bad) mov inc mov cmpsb stc pop cmp sub mov aad gs lret xchg jbe dec (bad) ficoml mov sbb data16 sub jae push sti in mov push repz test or out test stos fdivrs (bad) dec mov and lret cmp pop jnp loope sub xor mov pop sbb inc jne adc mov add xchg mov ss sti pop leave push sbbb pop stc out push xor or pop sub cmpsl pop imul and push movsl lahf mov mov adc or push sbb call pop enter dec mov cltd sbb ret adc xchg notl dec int3 xchg inc and jecxz sub push ret inc or pop lcall sub mov dec mov jg sbb dec pusha sbb sbb test fwait aas sub dec xor test mov adc lret xchg pop mov dec in jg xchg mov lret loope nop jb xchg subl lock fistl idivb shr and sub mov push leave rorl cmp mov rcrb stos jne (bad) xchg cmp sbb mov arpl xchg scas test call leave dec inc outsb enter sub add leave lods clc mov sub inc nop cwtl mov ja xchg push mov and scas mov arpl add jl fcoms sub pop xchg mov dec iret (bad) decb push roll fldcw fldenv add xor lods (bad) or and test fildll cltd mov push hlt sbb addb mov lea test inc xor or (bad) (bad) fs sub mov cmp aam dec repnz mov add imul lahf je push or shlb xor sub sub leave out pushf mov (bad) sub sub sarl dec xchg stos (bad) inc nop loopne cmpl xchg mov pushf push test push jg test popa inc or mov cmpl and scas jo and inc xor clc add sub add dec or pop and xor add jl out mov xchg stos xlat popf sti push in sub orl xor sub icebp sarl cli cwtl ljmp stos jecxz xor pushf loope inc cmp test sarb popa subl jp sbb shll mov and std bound call ds cmp xor imul sub imul fist sub cltd xchg imul (bad) mov pop xor daa jg cmp xlat cltd push (bad) leave (bad) cs js cmp cltd in sbb andl cmpsl movsb (bad) mov fimul aaa pop mov jbe outsl inc decb push or iret adc sub ljmp jno pushf mov jnp or jp xchg pop lods imul nop imul jecxz les call fsubrl scas fcoml xchg push mov pop inc inc and sub jmp pop xor dec mul movsl fdivs jb xor imulb adc adc out xlat repz xor mov xchg incl pop mov test lds ljmp and adc scas xchg adc mov test leave rclb lds (bad) sub mov mov cmc mov mov and (bad) and pop repnz shlb xor add mov (bad) mov push jl dec lods cwtl popf mov fs (bad) cs lret mov sub mov cmp repz nop (bad) xchg dec cmp loope mov dec dec cld lret rep adc and repnz (bad) mov out sti cmp aaa les fucompp loope pop jae mov sti fmull sub pop add mov dec jmp sbb sub push sub jo mov push pop or lret int mov sbb inc jecxz fsubrs xchg dec jl push mov sub sub push push xor mov ljmp xchg inc dec imul std sbb xchg fs daa adc mov scas sub mov and xchg xchg mov or jle mov repz and (bad) lock dec xlat sti arpl lret jne mov decl xor repz fs stos clc adc dec cwtl test cli xor lods push shrb xchg hlt daa mov out daa sub pop and jge iret dec mov roll push push mov cmpb adc bound mov push call adc (bad) mov mov cld dec stos sti xlat xor sti mov imul ret mov out xor mov and insl cmc cmp repnz sub call adc sarb pushf dec dec ljmp enter cs cs movsb es shl sub (bad) cmp out xlat js mov push callw icebp cmp jl inc int3 das pop (bad) add mov mov push adc sub popf sbb xor dec mov xor call add xchg fildll int cli std leave rorl aas ja fcmove cmpsl into and or divl sub push fild pop mov pop or fnsave mov push push xchg daa loopne pop sub push dec pop mov mov daa iret std adc dec or dec add fldt (bad) jne mov in cmpsl push cld in out mull sbb imull lock sti push push (bad) addr16 repz adc sub test inc xor movsb pop xor scas gs push pop stos cmp add stos sub adc bound shl sbb je mov jp aad mov sub imul sarl andl nop gs or cmp lods jns or (bad) dec rclb add test and inc add sub adc cmc dec sbb add movzbl mov pop das jp add cld xor fdivrs sub add inc push sub jbe cmpsb stc dec leave lds cmp mov add mov lret std jno or lahf and popa scas mov mov add pop mov ret xor clc or push or jmp sub mov fs ret gs movsl in pop or sub jg lahf jge mov nop int3 outsb add clts idivl push mov and sub mov pop sub pop lods mov std lds xchg (bad) mov jecxz into stos mov adc test fiadd add (bad) cltd dec cmpsb in imul sub pop ret inc push fistp stc jp cmp loop fsts lods push (bad) push add xchg inc or add addl (bad) pop int dec adc pcmpgtd sbb or sub (bad) sub fs mov mov push mov cmc jae mov mov mov push stos and xor push or pop dec insb mov xor sub lret fldcw xchg dec mov (bad) (bad) cld icebp mov pop push dec je inc xchg mov mov push mov daa xor push pop jmp cmpb into fstpl out xor repz add repnz push jle imul nop lods jo push ret push les incl adc jl out adc arpl sub add and xor mov (bad) xor cli call jnp rclb sub jmp sub (bad) out sub mov mov pop inc adc or out adc decb stos sarb add push sti arpl (bad) xchg jmp xchg call lret jecxz in sbb enter pop adc adc push xchg out dec inc add adc pusha insl xor add push aad std xchg nop sbb add push arpl lret test pop pop pop xor mov and add pop es insb sbb ret and add fdivl push pop shlb add and xor sub add data16 and sub into (bad) outsl sub out mov mov (bad) dec hlt sbb or add sti xchg call pop cli pushf xor lock sahf lahf push pop sbb icebp pop movsb jge out je mov sti imull inc dec push cmp sarl ret inc imul jmp sarl out jg push mov xchg lret mov out sub and rcrl insb mov sub mov adc pop cmp out add jg outsb dec ret lret lret cwtl xor cwtl aam ficom loop push xor das xor fiadd loope cmp (bad) dec mov and cmp jnp xchg out mov add mov test add and addr16 mov adc shrb dec jns lock mov cmp fdiv inc pop cmp outsl xchg xor add pop and dec or cs arpl fidivrl sbb mov jle out repnz notb testl mov cmpsl adc ss int3 cmp hlt iret ret ss cmpl lcall leave mov data16 cwtl fcoml repnz mov mov push outsb pop pop shlb fimul (bad) mov or inc ja out adc or mov xchg push call popa mov pop jmp mov sahf std ret jno add ds push lds in mov movb mov pop int outsl repz leave int3 cli push hlt jecxz or mov outsl jmp (bad) sbb cld add pop sub push insb loopne into mov repz or mov mov sub mov stc jmp mov pop das call (bad) je mov (bad) ret adc test mov call sbb or and mov jge stos into cmp mov fiadd dec ret adc mov out or jmp mov out sub aam push and cld cli mov ljmp jl or pusha stos xor mov xchg adc fsqrt inc loop loop xchg mov sub bnd aam jmp xor push daa mov mov sub and loop push fist ret push pop add cmpsl and jne lret ja fwait mov (bad) add xchg jge add cmp or (bad) aam or push xlat sub mov and repnz add or sub add stos cmpsb fistp xor push fwait scas mov adc lret (bad) fnstenv mov sbb or cld add fidivr std xchg outsl lahf dec aaa xchg pop and inc or mov add ret sbb mov scas pop loop push stos jge aas fdivrl cli mov data16 sub xchg data16 cmp data16 mov mov iret mov pop fistp cmp fiaddl xchg testl lret leave sarl es leave fstps mov js data16 xlat (bad) sub adc ljmp shrl and and bound or push mov xchg sbb sub xchg rcrl jb push insb int3 out xchg mov dec add shlb popf insb fimull xor shr enter mov push (bad) aad jmp icebp decb lahf sbb idiv mov dec ss ret mov push fiadd ficomp jno addr16 std sbb es push lcall cmpsl loope mov jle xor push cmp xchg lret testl sub push rorb lret pushf cwtl cs push push outsb mov xor stc loop sub pop cmp mov ret inc sub add mov das and mov jne aam les jb mov and mov out sub cli xor leavew sar das jecxz xchg sbb addb mov mov and dec int dec inc add push xor pusha adc fdivrs xor jo mov lock inc xlat xor iret aad or out mov inc aas mov xchg sahf sub jge (bad) fmull mov and add or mov hlt mov xor mov daa sarb fiadd cltd lret mov push pop xchg fcompp data16 pop mov mov lock add cmp pop jne cs setne add dec outsb ja mov add mov push cwtl lods int xchg sbb add pop cmp and mov into lds aas lret repz sbb mov hlt out adc push push clc imul mov mov sub loopne movl imul inc call negl clc out and xchg js inc xlat inc mov imul mov jecxz nop lds sub mov sbb ljmp push inc xor dec in mov sub aaa or jne,pt in add cmp imul sub fldt add pop dec pusha test mov sbb cmp testb add and and add adc push pop into cmp sbb ret jno mov daa and ja fstl inc sub (bad) adc jmp ret jl (bad) call or int aas int outsl cmpsb pop pop (bad) lret ret std out push inc and mov fucomip adc xchg cmp lods jno outsl test mov inc sub push pop icebp lcall and mov mov mov add xchg repnz dec push shrl sub mov mov xor or dec push fmuls xchg call ret mov mov (bad) leave pop rclb pop enter ret jne lds xor lret icebp pop mov lds les cmp je (bad) or sub (bad) data16 (bad) mov (bad) push pop cmp xor xchg xchg mov mov pop adcl pop and leave mov loope mov and lods xchg cmp inc jmp bound add or ja in push out adc jmp pusha jecxz inc ja dec mov ljmp dec sbb dec dec cli (bad) sub mov int3 outsb sbbb (bad) mov add mov push repz mov in or mov and in daa mov lcall adc or inc and push insl call and jmp mov adc adc sbb divb loopne or stos je mov xor pusha (bad) mull mov ret dec mov test ficom mov and xchg int3 cmp pop xchg adc sub popa and sbb adc pop in imul stc fisub mov (bad) (bad) and pushf (bad) into xchg setl test dec les out add cltd inc jl movsb push push or mov xchg push in outsl mov sbb cmpsl mov movsb (bad) dec jg adc ljmp lcall xchg mov (bad) sbb sub pop mov call shrb icebp jp pop ljmp lret (bad) push les movb in sub aad jb pop pop sbb fisub mov test fdivr mov xor cwtl and std je out test repnz cld call (bad) leave (bad) cmc lahf out pop bnd inc (bad) or mov xchg mov mov testb ljmp dec push xchg dec pop gs addr16 dec gs sub scas sbb (bad) bound push mov or je mov sub pop dec sti lret out imul or ficoml ret lea lret aas xor add sub push rclb movsl lret ss imull loopne out mov jmp lock icebp mov nop pop mov dec sbb xor pushf mov pop xchg repnz repz mov (bad) cmc mov fild xchg movl cld push in popf leave jecxz jno inc add loop jg int test or sti add fsubp jmp jns dec push out das cmc cmp xor (bad) xchg inc xchg test xor mov xor add add cmp adc stos into punpckhwd sbb imul fildl lods int3 jno das mulb popf lcall popf xchg pop sub cmpsl xchg xor (bad) xor mov inc adc add mov or sti sbb sub mov sub leave cmp xchg dec sti sub xor inc sahf push adc adc stos mov or sub or fldenv cmp adc lcall xchg adc push xlat fst movsl mov pop stos mov out test pop dec pop jg xchg sti dec mov (bad) insb cmpsl dec ret test mov in cmpsl sbb adc dec sub adc mov jbe dec adc (bad) stc rclb push dec xor sbb mov and xor aas lahf xor (bad) push and dec lock icebp add data16 and pop xor inc push mov repz mov sub in (bad) push aad xor arpl dec jo sub and or stos mov jne in test addl xor mov stos int push into cmp into shrl imul mov (bad) scas sub inc xor cmp xchg push adc dec jp mov scas fucom push xchg pop mov push inc movsl xchg pop mov push sahf popf fnsave icebp out push loopne std cmpsl and xor sub loop xchg bound dec movsl clc sub dec dec mov mov mov sbb out js or push ljmp mov cmpsb mov xchg pop sbb fbld (bad) jge xor mov shr movaps and lock sub sub adc xor in pop dec mov mov jmp ret rorl jb xor mov stos outsb (bad) int3 jo out out xor mov jg push stos cmp mov scas ret lahf incb cltd (bad) cltd outsl sub leave (bad) mulb mov das and pop push dec mov inc mov and inc icebp jp pop lret fildl jecxz daa into sbb stc popa xchg leave mov (bad) sarl shll and out in mov fsts out (bad) sub mov jb xchg cli dec mov sub fsub out out dec repz mov gs scas inc pop lcall adc (bad) es (bad) ss add or mov scas mov and sub sub or inc sahf mov dec mov inc mov mov out sub movb cltd push mov add inc xor call imul push push int3 push jmp add and cmp sarl mov rcrl ret je sti out push shrl cli adc sub addb jns add rcrb add psrlq jb pop or inc xchg (bad) int3 jmp pop xchg int outsl lea or push rcl xor nop jl imul xchg jno push cmc sti cltd sub popf and mov lret mov xlat aad lret aas shrb daa divb movups in sub lods push in wbinvd inc das sub xor mov dec and mov imulb or mov pop ret inc (bad) addr16 imul hlt jecxz jns into mul sub jb test dec or imul sub outsb idivl lret pop xlat pusha xor dec and icebp inc sub adc mov cli fnstcw jp mov mov adc repnz add in in daa roll jb imul xor jmp ret in mov and jns cwtl data16 cmpsb adc fild lea cld dec (bad) lock das loope jnp xor fnstcw (bad) or xlat mov cmpsl leave push adc ss repz pop xlat out and test add mov mov out aam (bad) bound push addr16 pop xchg push cmc cs sub mov ja ljmp enter inc push lret arpl sub and mov (bad) jg (bad) into hlt ret addr16 lret (bad) push pop and das xchg cmp dec mov aaa mov sub xlat pop or (bad) loopne ljmp and sub dec (bad) mov dec rcrl inc sub jb mov mov push mov lds repnz cli insb int das add in pop rclb (bad) jbe lret pop mov jge leave mov pushf cwtl (bad) or clc and sub mov xlat lcall daa push xchg dec adc lock jle and lock jmp ljmp sub and scas fadd repnz dec sarb sti mov add out sub les in mov ret adc mov and inc pop xor mov push es inc repnz jbe pop push in dec in in leave or sub mov mov cmp movsb mov es pop les ljmp and pushl rcr cwtl mov and scas sbb add cmp and dec call ret int3 lock lahf jae adc or or dec or scas test mov xor or cmp xchg es and cli fdivrs add add xor mov cmp movsl mov out xchg clc pop or adc or inc lcall xchg (bad) ljmp cmp jb out pop or clc xchg lcall cmpsl mov add xchg hlt xor rcll stos adc fist cmp adc mov (bad) xor xchg sub dec inc sub or mov loopne mov in pop push int3 and sarl mov (bad) push gs sbb pop cmp test fidiv cs dec dec ret test leave add cli inc xor cmpsw call cmc pop push (bad) mov testb mov les idiv dec add lods push (bad) fldenv cmp xchg (bad) sub dec fcomi inc adc adc and and add clc mov or fcoms pop adc (bad) out into lret test mov inc (bad) xor push lds negb mov mov mov jl cmp lds adc xchg mov add mov adc cld add pop mov sahf shr inc xchg dec clc sub (bad) pushf mov sub gs add pop lahf pop dec lret add or ja aad and int3 lcall mov out jne adc data16 inc and sub movsl mov cmp pop jmp inc lret pop ss cmpsb loope mov dec cmc jle out (bad) stos sub pop lret xchg add xchg imul cwtl clc add xchg jae add test fdivrp clc sub std or jge jmp leave bound popa pop (bad) or clc mov pusha or (bad) dec lahf or adc ret js decl sub aad mov cmp mov shr or jmp sti std ret xchg call xchg stos sub jnp push (bad) or or xor xchg stc xchg xor push xorl sti mov das fildll das decb nop jp dec and test mov cli xor mov push xlat pushf mov sub mov lret lock dec xor rcll out icebp fsubrs popf mov aaa popf add xor jmp fs sub aas lcall mov imul sub mov and test mov adcb test lods rcll pop xchg cmp clc addl movb leave sub mov dec lods pop and add test lcall sarb (bad) sbb and push and adc xor xor mov out add and sub jle add lods rcll popa mov and addr16 (bad) shlb sub pop mov (bad) mov xchg scas jmp pop mov (bad) in ret dec icebp stos sub fidivrl out lret ljmp loope aaa das push adc dec fidivr inc ja push jp fist sub dec adc push mov lcall sbb enter jg xchg adc mov sub cmp jnp pop add test arpl lds and daa sbb or jae xchg and or fs out mov pop cld insb or sub cltd jl and jmp jle lret xlat sbb mov lods and out fdivrs jl or sub sti push test lahf pop rorb pinsrw mov add adc add xor dec cltd imul jno xor daa (bad) inc xchg add xor mov mov mov xor adc test mov sub mov or repz xor loopne das ds inc cmp add sub mov call xor pop lods jmp mov cwtl lahf icebp sub mov mov jecxz divl cmp es (bad) and inc dec (bad) (bad) push dec sub push imul sub das and xchg sbb lods adc dec dec (bad) (bad) lret jmp mov inc jmp repnz es add sarb repz push leave jno sub repnz stos push jge pop ja loop out xor clc inc dec jne cli cmc dec scas cmp das pop es data16 xor xor dec xor test ljmp push pop or pop insb call int3 cld dec out mov jbe push cld loope ret lods and or fstl das xlat mov cmp adc pop mov xor rorl movzwl cltd aad mov cmpsl fimul fnstsw aaa xchg out das leave (bad) int3 push add xchg push xor pop push je stos (bad) mov mov cmp imul div subl xor cmc mov ja xchg (bad) xor add sub shll icebp jecxz cmp xor sub and clc (bad) mov in push and sub mov push aam imul pop push adc mov xlat stos inc cmc int3 hlt xchg pop daa push add inc mov lods mov (bad) in pushf andl jg fmuls and les fidivl ja aam fstps test int3 bound bnd sub mov mov push mov cltd pop jg enter jo adc movsl dec shll xchg or jg ret out insb pop mov std imul adc idiv repz shrl mov pop xor sbb fild lods mov insl js cmpsl test inc stos sub jg (bad) clc cmp add and rcrl sti sub jecxz cmp into out jno out add aas jns out call rcll iret lods test sub data16 outsl das cwtl mov lahf decb add push push or fadd jle mov sub pop cld mov test sti (bad) nop daa ret cld rcrl (bad) das in dec in inc imul cmp mov negl clc xchg dec ljmp jmp stc jge mov jg mov sub sub inc cmp sub pop adc push mov stc push inc sbb (bad) jle repnz lret and sbb nop int3 mov notb mov repz or rcrl shlb enter test add cli nop or in pop das inc push (bad) jecxz aaa sub mov mov push dec in xor movsl xor pop adc mov push dec and dec mov jnp xor fldz pop inc pop scas mov pop les and dec jmp call icebp imul pop div mov enter xlat in jb fs mov pusha push notl aam inc stos adc sub cmp arpl hlt pop dec repz add orl mov pushf sub dec shl sub scas repnz mov add jno inc insb or daa add (bad) outsb mov xchg mov add shrl mov lea outsl stc inc xlat mov xor scas jno xor data16 mov mov jo mov sbb cmp insb xor cmc pop clc or or add push mov lock dec (bad) jge cltd jl jp in out cltd mov mov push inc add mull in out mov dec popf scas ss sarl cld insb idivl sub (bad) jg popa loope cmp and stos xor notb mov pop sub or and xchg out push imulb icebp or (bad) fsubr das icebp push mov inc jo jl int cs out dec ret (bad) xor or lods push sar int outsb mov dec mulb pop rcrl sub add xchg loope mov xchg mov out and push mov mov xchg loop repnz rcll xrelease ja add or dec or in mov cmp and sub loopne iret mov add leave mov mov mov mov add cmp out test and repnz aam mov add xor int3 xor mov sub push sub jne lods dec fisttpll sti push add xor jne mov test push xchg out mov (bad) ja aas inc xor insb sub or bound cmp cmp in stos movsb mov lret pop pop pop jle gs stos loop pop mov les and fadd or xlat in and rcrl gs sub xchg into sub je mov (bad) adc ljmp or lods fistp or xor push test ss sub or pop fdivl ficom jnp in jl adc stc loopne dec pop sbbl mov icebp ficoml fs hlt jbe add mov inc lahf jns leave (bad) jno pop inc xor stos int add mov or mov mov ljmp sbb ja xchg shlb leave mov dec test and ljmp test sub xchg pop xor push cmpsl repnz (bad) pushf outsl stc loop test ret xchg cmpsb mov les sub mov mov leave fadds hlt pop sub dec jb adc insb jp std cmp mov sbb clc cmpsb ret and das fadds cmp and les gs mov icebp stos aad std xchg xlat enter movsl adc dec test std sbb lock xor outsl jl push pop xor dec mov dec aas adc repnz imul or dec sub xchg jg imul or dec (bad) in xchg (bad) mov cmp lret outsb std shrl mov mov xor icebp pop test jo or test inc mov cltd scas fnsave add (bad) testb scas mov add cmp loope mov ljmp hlt das fsubp push fucomi ret das loop xchg out fldenv jmp sub icebp ret and mov mov adc iret jg aas xchg icebp pop cmpsb dec imul mov loope pop icebp je add (bad) shrl xlat mov std sub sub (bad) cmp arpl rol mov xchg push gs mov push daa and repnz lods lock mov clc nop movsb xor orl test mov pop mov mov fisubrl repz sbb cmpl (bad) jp inc pop scas cmp mov dec push ja push inc ds sub lds ficom icebp scas push pop not inc jmp add mov push repz (bad) negb in das mov ja sahf ljmp lahf mov sti sub (bad) add icebp ja lock or dec (bad) (bad) or sbb sbb ljmp scas lret dec mov xor ret aam pop out sub cli sti fs repnz push mov int xor xchg or cmpsb mov stos push push lock xchg in ret inc movsl mov rcl iret bound sbb in jmp icebp and xlat jge sarb in jge leave sub or push stc out sub ret jge jg lea jnp add repz xlat cwtl addr16 sub mov push mov fldenv iret dec add icebp leave movsl pop out in sbb jl push hlt sub int3 mov mov sub (bad) (bad) loope pop test (bad) stos out dec mov pop popa ret add (bad) mov push jbe imul leave pop add lahf fmul (bad) add mov jp (bad) clc pop outsb (bad) xor and adc add int and aas loop or adc (bad) jb dec (bad) xor cld pusha leave (bad) jbe imul aas hlt std jno pop xchg scas dec pop rol rclb clc nop das push repz jmp jmp xor stc and sub adc (bad) out xor lahf xchg xlat int3 (bad) xchg shr dec lds sub popa and sbb movsl push mov cmc or jge mov cld push push mov xchg pop pop mov push in jo pop (bad) pusha xchg inc jmp add mov pop add sbb (bad) xor test lahf pop mov inc std pop xchg sub clc push jne xor mov add or inc push mov (bad) push xchg push push mov push mov mov push mov les negb stc inc dec (bad) gs push push add mov imul jne or lock loopne xchg ja add sbb mov lret pop add out inc sarl jg pop push mov notb lret call (bad) nop adcb movsb jg xor (bad) sbb (bad) jne std (bad) mov sub xchg negl shrb inc jg push adc add inc or adc jle in push add in int push dec into sbb fiaddl lods pusha (bad) mov out add pop pushl pop xlat iret and mov dec cltd add push (bad) mov ja xchg inc bound push addb pop sub mov lock lds push daa push inc mov jg rcrl in adc cmpsl fnstenv inc lcall mov push aas (bad) cmc out in test and cltd xchg scas jp or in lods fs push lods iret jg dec inc lds push cltd sub and pop (bad) sahf pop push loope subb push dec les push movsl xlat jle add push pop data16 fisubl push xor insl add ror je ret jl call pop push add inc popa cmc jb (bad) pusha aas push in dec mov shr in and fiaddl jb cmp mov popl xchg adc fsubrs xor or push mov jno dec push sti xchg iret mov dec cmp jecxz jecxz lock loope jno lock xlat test pop adc mov pop shl sub xchg push mov cmc jns fmull pop and mov mov mov shll mov and notb test clc xor sub fisttpll xchg and or loop xlat mov inc add pop out in aam or add mov (bad) hlt or mov mov mov dec (bad) dec cmp adc inc xchg scas bound xchg sub sub xorb scas call and andnps testb cmp out clc cmp test cmp adc test mov mov cmp je push push hlt mov dec xor jb daa sti jae adc mov adc jle mov fbld push inc xlat or int3 fiadd (bad) fnstsw ret shl (bad) push mov push repz mov icebp rcrb jnp jge jecxz mov ds addr16 jae sub cli loop nop ret dec in inc mov jg and js mov rolb loope ret das push jg or loopne ret mov adc sar (bad) repnz xor imul and mov pushf cmp push xlat xchg xchg jecxz aaa pop jb jne clc mull jge popf (bad) repz sti popf fisubr mov adc cwtl (bad) adc mov (bad) lret stos xor (bad) stc and push stos jbe xor ss cmpsb (bad) xchg lahf xchg push sbb push es mov or pop xchg bound das and in adc sub and ret and mov cmp je dec push lods lahf xchg test lret es stc out int3 push add xchg mov xchg out xor and adc mov add nop ljmp in add xchg sub push xlat pop sub (bad) mov testl xor (bad) xor pop cmpsl inc dec scas jne mov push xchg pop xor mov pop push iret stos lret or inc adc lcall addr16 mov mov pop loope sarb jbe mov add sub push cmp push test movsl mov jg leave gs int cmp cmp andb popf shr adc ljmp xor dec sub jecxz pop bound lret insb dec addl ret push into in and and das jne push stc add add ret sub subl ljmp adcl leave test add and out (bad) popf ret iret lahf mov rorl scas movsb adc and shrl (bad) fcoms jb es popf or mov lods movsl in or sub js dec pushf pop sub test clc (bad) movsb mov cli push xor les or aas jge jno popa jmp sub xchg push iret xchg xor lahf dec cld mov dec das xor jnp or and nop cmp popf add mov sub test mov hlt cltd leave fxtract fcmovne (bad) repz xor adc xor mov dec icebp adc and jno or and leave sub xchg sub xor adc sub mov lea insb xchg pop icebp fidivrl loop sarb cmp jne sbb mov pop fisttpl xchg lret out fnstcw xor (bad) enter lcall add sbb call imul xchg imul movsb xor xor or jle jb data16 in sub mov adc (bad) fcomps daa in das push into in cli popf mov pop lret inc mov push or std (bad) es xchg mov jns in scas sub out xchg push (bad) loopne,pn (bad) lahf push xor xor pop in movsb sti push fisub mov int inc dec (bad) xor push push dec adc cltd xor (bad) pusha (bad) xor cmp push test ret inc test imull xor mov scas mov sbb jmp pop inc or lret adc movsl xor mov lret adc adc cwtl das loope pop push jmp fldl2t gs ds frstor adc and inc wbinvd sarl fidiv push mov push jbe push pop fldenv and testl (bad) mov pushf pop lahf jl inc jecxz adc out add xlat out adc mov sub mov movsb dec stc adc repz roll jmp mov mov pushf jne and es add sub fdivs addr16 lock sti adc mov and mov mov daa cld push cmc or insl inc xor push aam out inc jmp incl sub aam dec std sbbl fldcw inc dec jg mov (bad) jne in nop (bad) xchg sub sub cwtl pop out mov xor and cmpsl into cmp cld (bad) (bad) push adc and leave int rorl aas mov add or sbb cltd insb fadd mov mov daa pop xchg cmc pop mov stos repnz or xor push lods push xchg jo insb jmp les stc mov stos sub rolb (bad) loope push pop or sub bound and adc ret rorl daa jg add or xor lahf push xlat push repz mov push mov std mov or xchg ret cmp (bad) adc call push outsb (bad) dec push inc fimul icebp sub les adc icebp mov ss dec ret fistpll rcr lods call xchg nop or push cs arpl andl pop int ja jp jle sub mov inc cli and cwtl adc mov mov dec jmp stc iret sub shll sub pusha xor cmpb mov (bad) pop (bad) jmp mov jns inc sub shrb ret mov je aad jno sbb cmpsb shrl pop push mov sbb inc or les popa lcall sub cmp jno leave lock and mov mov out mov pop pop fcomps mov xchg testl jne repz push mov divl nop mov and inc aad iret (bad) sbb roll leave and push in pop or mov xchg mov or das jmp xchg xchg pop (bad) xor pop dec ret out repnz xor push pop leave jge inc mov dec jno mov cmp loop push test add and mov das sbb push repz enter jb dec pop leave ss ja xchg movl shrl sahf je mov stc fldenv inc lahf stc shr xor mov xor cwtl sub mov fucomi arpl mov push inc and push dec pop cld lret xchg fdivl or aad sbb repnz aam dec stc call add sub das sub test push add out mov dec fiadd lods outsb and push cmp (bad) lret and cli ret pushf aam gs rep dec push sbb loop sbb or hlt iret mov cltd push jg out push orl out cmp (bad) imulb add rol daa push and or mov loopne push adc mov xchg sub add into pop dec mov xor test test es xor and clc ljmp rcrb iret add ret sub xor cs add pop sub sub outsl sbb test mov daa inc into dec xor jns test mov jne stos mov cmpsb mov sub stc adc insb add jp xchg jno daa jl jmp lcall mov dec jmp ljmp inc shr sub (bad) cmpsb add xchg fs xor lock jns fidivrl pop mov cmpb mov and nop mov das sub mov jg and sub (bad) pushf test das (bad) push add ret xor enter adc mov test xlat stos dec stos daa insb out pushl lds jbe push add ljmp (bad) cmc jo dec inc out daa mov pushf xchg int3 lock jg mov pop jae xor cs mov sub test mov add adc sbb add clc and dec add sti (bad) pop test mov adc and icebp sub fs pop subb dec sbb mov into out popf test push mov jle test pop inc or dec inc and adc xlat pushf pushl std daa xlat imul lret mov fistpl or xlat shll imul (bad) push add or xor sub cmp sub cmp or xlat outsl xor add aas pause pop scas pop test fldenv xchg das daa test dec mov push aam scas test ds lret insb (bad) cs xor aaa xchg jl (bad) sbb repnz dec sub push js daa add data16 ficompl cmpsb rcrl sub sub je outsb mov cwtl xor pop repnz jb ret push dec aad stc and movsb pusha mov sbb dec push ret adc dec mov lret jo adc in nopl xor sti (bad) sub stc icebp sub jb test imul loop pop or xor je cmpsb adc imul out or mov fidivl lods movsl bound ret nop sub jno jbe adc add lret mov sub mov xchg mov fld and jnp and inc (bad) loopne and dec push xor and mov icebp (bad) stos mov int3 (bad) mov divb dec leave (bad) cmp arpl and jmp cltd cs push sub aad mov dec mov cmpsl (bad) pop imull and mov add movsb mov push pushf or cwtl sub or mov scas (bad) repz fs push push add mov jp adc call cmp dec lods jbe xchg dec repz repnz push das call and sub mov les xor sbb pop xor ljmp xor mov fs (bad) xchg push cmp and pusha xchg or dec into mov and fstpt jp out adc and and xchg fs out or push adc fidivr shlb mov xor mov pop dec imul mov iret pushf les mov push enter mov in jmp xchg sub xchg xlat repz adc mov sub add adc mov das add std sbb or hlt xchg out popf mov insl fidivr mov push add mov mov xor fsubrs lret mov sub (bad) mov adc or cwtl push or ror sti xor inc adcl out cmp mov add (bad) ljmp loope mov mov loope push xchg (bad) ja ret cmp mov leave mov dec sub sub fmul cltd setb in or jmp movsb adc out lret sub subl lock imul xor ffree xchg cmc stc aaa dec stc push xchg (bad) cmpsb xor push or das push stos push out mov pop jmp and xchg xor xor mov ret (bad) aam jge cli sub popf push and mov jge adc aas push pop iret xchg ss ljmp pushf mov inc (bad) sub xchg movsl or cmc mov and and mov sub adc or inc push das adc or xchg jge add cmp addl cmp mov or mov stc sbb ds jns dec (bad) pop jno clc ss sti and add loope push cmc jno imul in sub icebp and (bad) divl and (bad) daa bound icebp push jae das mov aam inc xor push iret jb dec fidivr push or jo (bad) jbe jp xor or xchg outsl mov cmpsl (bad) dec mov jl subb xor push cmp mov fildll sar fisubr (bad) add das or jp or push jge clc push mov mov call xor inc sub call and push dec lods xor in xor jle (bad) (bad) and adc dec in add enter sub lods pop xor stos imul xchg ds fsubs dec (bad) fs mov xchg ljmp cmp in mov push pop fimul cmc pop outsb cs sahf lods jnp pop sbb sub xor lods frstor hlt pop push dec cwtl jle xchg std cmp push ds loop or mov rorb sbb icebp mov push jae push jmp pop push cmp les sahf or push jae das cld (bad) gs test scas std fwait mov dec xor shll outsl daa rcl repnz lret out popf pusha das xchg inc mov fsts adc mov hlt sub mov fistpll cltd out mov cs ljmp mov into sub pop or xor cld and enter fdivrl push xlat (bad) maxps ja out cs adc daa add mov sbb xchg dec imulb outsb lret into push inc adc icebp in xchg fnop adc out cmp scas mov xchg pop xchg andl dec (bad) adc sub or add mov idivb in jl lods std mov and xchg add mov xor xchg sbb clc movsb lahf mov jecxz mov adc test push scas enter stc adc mov and xchg ja adc or roll (bad) fdivs stos dec les sahf inc adc repz dec jmp rorb (bad) adc loope ljmp cltd mov mov jg cmpsb sub aas test mov sbb lret fimul cld and mov pop dec xor notl jge add out dec ljmp out mov or mov outsl lock mov dec out pop dec sbb gs add and push jnp sub les (bad) shrb mov scas (bad) mov shl lcall mov xor enter test jno add mov ret sbb or xchg xchg mov sbb mov sub movsl jge xchg pop dec (bad) cmpsb add repz cli mov dec dec icebp xor pop leavew clc fcompl (bad) aam push lods sbb mov lds stos mov adc pop xor mov pusha push push ret jmp inc sub loope lret pop lret sub and or cltd push subl inc add (bad) mov jb pop pop adc das add jae aas push dec ds (bad) cmc idivb and jmp sahf xchg clc and das sbb repz repnz mov data16 les in push xor and xorb aaa (bad) in inc pop mov mov mov mov xchg mov ds stos std cmc fnstsw mov dec loope cmp sub push fimul fld add ret add ficompl movsb scas bnd ljmp cld test sbb cmp fdivrl dec je adcb (bad) aad mov es outsb aaa jg inc and inc dec imulb push push fnop jo orl mov sti (bad) out xchg decl fnstenv movsl leave pop sti and sub xchg fndisi(8087 push rcll out notl inc cwtl out dec and xchg cli call xor fistpl sub cmp clc jne fisttp scas imul or cmpsl pop inc jo and mov mov inc sub loope xor add mov (bad) loop sub setae mov lcall adc loope cmp cli pushf mov cs call mov inc popf imul mov fldl popf cs cmp addr16 xor mov jno dec jbe das pop push push push cmp (bad) (bad) dec xchg shrd pop std add daa notl (bad) in ljmp mov push (bad) add adcl lds add dec pminsw and ja mov out stos lret into push adc cmpsb cwtl xchg movsl cmp sbb push fdivs adc daa decl stos adc xor call sahf lds imul xor movsl sub int3 movsl or xor fisub leave adc rclb and cs cmp or scas iret jp cld into lret and pop jb mov (bad) aaa cmc mov xor scas sub mov das add repnz jmp push lcall bound push mov daa fisttpll mov adc (bad) stos dec lea inc jmp xor and fnstenv pop add jmp pop leave pop sub insb test scas mov pop mov clc mov call dec ljmp mov pop into sbb sub (bad) stc xor mov mov sbb stos pop jge cmp out mov pop jp lods xor inc bound divb mull inc add ljmp xchg cmp add add outsl xchg add adc sub jmp out inc and adc mov (bad) sbb mov xor int imul xlat stos or not inc bound mov lods aam mov xchg mov popf cmc push test and mov sub pop dec jmp and pop add xor addr16 fld xchg or push push insb mov jmp (bad) push pop out dec call cwtl dec push sbb into pop daa and imul pop push xor cld outsl mov mov (bad) jo imul leave inc jge sbb or and (bad) hlt ss jge push jne out mov out jnp fidivr push dec cmp push sti (bad) adc sti mov pop cmp lret push pop arpl test pop inc or out cmpsb lret dec jmp cmpsl jmp addr16 mov xchg mov add push stc int3 or std imul out lahf and mov popf jle push push data16 or lahf or jle mov xchg adc lahf inc negl leave ret aas mov std jb jns adc scas mov lods out mov jmp sub imul movsb scas mov jb ja and add test test into in iret sbb (bad) xchg mulb pop mov scas fisubr mov pop or js ja in jg add ficom mov lds mov adc std gs add in jno pop shl mov stos adc scas mov mov and pop mov call fadds adc adc fist xchg jne push dec xchg and sti lret mov dec out cmp push scas lret aas movsl or inc and pop pop (bad) popa jmp and adc inc stc mov pop insl sahf or xor insl dec out xor push xchg sub cwtl shr sub mov xlat sub inc jp and stc fstl sbb mov mov testl mov out xchg pop push sub and sbb inc mov jg add xchg in das inc mov lret pushf push negl in stos and ljmp xor mov int3 (bad) and ljmp push xor push clc sbb fsubs jge fnstsw pushf lahf and popf jb in pop in pop adc shlb sub xchg mov cmp aad (bad) mov add jns pop cmpsb push xchg (bad) jmp decb pop cltd cmp out andl sub leave in sub cli sub (bad) mov gs leave mov jle dec pop sub xor push mov test repnz repnz xor pop push loope mov push or cltd and mov sbb shrl mov adc loop mov into (bad) nop xchg lcall jns mov mov loope imul popf ja fistl cmp jb sbb fcmove (bad) jg clc add das lahf push add mov leave lret pop cmp ljmp xchg ss xor popa insl rclb pusha ljmp jp ljmp xor mov sub sub in cs xor pushf add (bad) jmp or jne jno xor dec lods xchg jg push sbb bound push ljmp mov pop (bad) es push int dec cmp movsb add out popf push ss out int3 loop loope adc stos gs mov dec jbe sub in mov roll or or sbb cli imull pop xchg mov pop adc test (bad) int3 shrb repnz sbb inc mov cmp cmpsl mov into push and jo (bad) popa sti ret lret lods aam mov mov repnz or aam lret dec push leave or pop jne mov push mov pop lods jmp pop (bad) and pushf stos negb lahf sub pop std sbb jmp adc bound pop and fcmovnb and sub mov push sarb jecxz out (bad) or out inc xchg lock fnstcw mov (bad) jae add adc xchg aas mov movb adc mov sarb xchg call mov mov mov fsub mulb mov cmp mov decb in out mov dec sbb mov and mov test in pop pusha imul popf sub (bad) es pop and sti pop (bad) cltd adc or adc add (bad) sarb dec (bad) lahf xor mov dec fstps xor out cld cltd or lods sub scas adc mov push or xor les out jge xchg ds inc jmp imul aas lock xchg cmc pushf sbb orb mov dec adc lret repz push or decl loop inc arpl je lret xor inc jmp cli pop insb inc pop out scas cmp aas out inc dec xor jmp cmp add or stos lea insb jns cmpsl pop sub lret dec fdivrs jae fstl jns lret das lods push pop in sar icebp mov push js icebp sub inc push sub sbb adc in lods aad mov lea sti lret es or dec sub cmc sub add push je leave das scas sub mov or lock loopne pushl mov cmp pushf jmp imul orl cld add sub dec neg pop scas xor shrl jb sbb xor sub loope sub jno jle adc xor mov or fstpl xor dec adc (bad) mov outsb fadds cli test sbb or adc test mov lods hlt cwtl jb in outsl imulb addr16 mov cmp add add shrb jne icebp cmp cld stos shrl das adc sub daa add roll iret dec mov outsb aad mov std lcall outsb cld outsb in lods ret fist dec jl das cmp mov int dec xchg notl adcl push adc call push and lods mov pusha (bad) xor sub scas xor (bad) jne xchg int jp addb jl jae fs sub add das xor pushl lods mov fmul idiv dec shl push and mov test lods je out dec jb jge xchg into or clc mov jmp xor in nop jmp adc mov pop stos sub fiadd lret cltd fs repz dec mov shrl or clc out movsb push popa adc arpl js pop fstl and sbb (bad) pop lret repnz out mov cmp jmp adc sbb les (bad) fdivr or adc imul jbe (bad) cltd or pop sub add leave pushf mov jne loop outsl daa sub out cmp jle jmp fcomi repz test cltd test imul andb xchg or mov (bad) mov clc loope or setl imulb into (bad) mov aam arpl sti test mov gs jmp pop repnz inc sti or jmp aaa repz ss cmp stos mov xor add sub ret and mov out bound cmc xchg enter push outsl pop outsl je sti xor mov lds es push cwtl std or lahf xchg jns psubb cmpsl test out in and movsl sbb aam mov mov clc adc fs jmp pusha lret sub sub mov ja (bad) out shrb rcr push pop mov aad inc (bad) outsb popa push addr16 lret adc and dec lods dec adc lret xlat mov rep (bad) repz stos notl iret xchg push es adc add mov sbb lods jl psrld sbb cmp xchg stos mov mov aad cli stos into dec adc and pop dec (bad) stos (bad) repnz insl movsl test scas imul adc repnz arpl notb in scas lods inc lods cmp pop xor loop dec xor aas sbb ljmp daa (bad) xchg xchg mov mov add stos xor aas add jl mov push ret dec iret dec cli xchg xlat fnstenv in xor incb fldcw adc inc out xor sub and add mov fisubl pop add xchg fcoms leave (bad) or stos cmp divl push hlt loop jne jnp icebp mov jb push fistl mov jbe xchg mov gs insl lods mov out push xor (bad) jecxz xchg test jp or pop inc jmp xor dec inc lret sub add stos in outsb (bad) jmp loope dec out sub sub jnp pop sub imul pop xlat clc (bad) dec or add sbb fldenv adc fstpt mov adc call mov fs movsb das (bad) test std pop cltd enter jo push das adc clc popa into sub scas lods dec and leave stc ds popa repz cmp mov cmp sbb enter xchg dec and adc fadds fistpl pop mov add adc xor imul xor pushf mov std push (bad) scas pushf or inc inc jae test daa xorb test leave inc adc xchg pop inc and iret out or mov mov cmp sub push mov stos (bad) stos notl sarb into je loop dec repnz mov and xor out test pop cld pop pop mov lahf jno imul (bad) (bad) adc and and mov fwait ret ja stos lret mov fld fs add sub pop adc scas lods jns dec sbb (bad) jmp inc jnp ja (bad) dec aas jb dec or mov push adc test dec cmp fidivl lcall outsb xor push push jb adc mov (bad) push jmp pop adc add es xor jb ljmp in pop mov jno ret mov mov (bad) push pop mov push ret movsl mov insl add and out (bad) and pop pop mov jns shrl jb pop jl loop add jl or jb fild sub cmp scas into cmpsl adc sub (bad) ret sub int3 push add (bad) mov gs dec ja clc mov gs push in (bad) xchg test pop jne scas mov es sbb xor fs ret cld test scas sub movl loope sub sbb lock stos or (bad) cmc in leave aad mov sub mov or adc pop and dec stos cmp fistpll mov mov push or xor dec mov shlb (bad) rcr push inc aam xor add (bad) push in pushf xor jmp mov xchg clc inc xlat xor ret cwtl pop aad mov outsb clc adc and sub es int daa mov hlt jno rolb or xchg lds push out and pop push popf hlt sahf sarl sub mov scas cmp leave mov dec mov add xchg mov jg sub sti xchg scas dec hlt cltd add test inc cld fsubs push jl cli lret ret pop mov das les lods ds bound or add xchg dec xor rol or lret mov push jbe fist jmp (bad) mov or xchg in cs dec jne mov (bad) dec mov jmp and jne loope js leave repnz push ret sub lret pop pop mov sbb sub imul cmp mov push aam push fisubr popa shrb loopne xor sarl cmp mov dec lock mov testl js pushf das jmp fmul shrl je outsl test pop push sub inc pop mov test stos (bad) insl dec leave aad repz jns sbb ret mov mov add dec div mov dec push (bad) imul dec jbe scas hlt scas outsb in mov jg ret fs sub (bad) pop pop or lods rcrb test repz outsb in pusha movsb ljmp pop movsl fild sub pushf in (bad) push ja pushf dec or clc test lea sbb dec or loopne (bad) dec cwtl bound jnp jle in and mov imul inc add and mov adc inc mov and mov inc call xchg xor mov inc push cmp mov mov sub gs mov and je xlat insb cltd pop inc mov roll cltd pop lea push pop aam das sub and xchg ret mov fildll push cs outsb call sub sbb mov scas sbb sub jmp pop scas xchg mov dec lds pop cld and dec cld mov adc dec xor and leave shrl xor out fsubr call xor aas xchg clc out mov ljmp pop mov cmp push call mov es or dec aaa mov sub repnz mov adc cld cwtl adc aaa out lea icebp jnp lock cmpsl mov cmp or das mov test xor cli (bad) mov test push shrl sarb jb adc and mov iret fwait or outsl out xlat (bad) insl scas sub imul sbb rcll dec repz pusha mov sub flds les adc mov imul popf jne clc das in sbb sti icebp xchg ret ds inc imul cmpsb call xor mov das cld movsl mov or xchg in xchg pop jmp xchg movsl aaa xchg sub and clc stos (bad) xor sub lahf rcrl mov repz adc (bad) xor (bad) mov lahf xchg cmc mov sahf mull pop sub pop pop js or sub sub lahf fidivr pop mov adc (bad) xor mov cli push and pop scas push or cs dec popa test daa jg insl mov into sbb leave pop mov test pop xchg fcoms mov in call jmp dec gs int sub loopne dec or push add roll aaa incb stos test mov jecxz pop mov das add mov sbb lret fistpll pop or dec aad out mov icebp call movsl push ss xor adc xor and mov lret call jno push add ljmp cmpsb add or pushl std cltd in sub and cmp insb jg out repnz mov mov or neg das idiv adc cwtl das mov imul fistpll xor rcrb sub clc jne xor jp xchg rolb mov mov sbb cltd repnz cmp dec imul pop cwtl mov int3 sub (bad) sub xchg dec cmpsb shlb (bad) mov cld push adc mov dec nop pop mov lea mov out mov (bad) roll cs cltd jg cld lret push inc jne lods adc das dec loopne add push mov adc xor (bad) bound rcrl cmp adc mov or push sub jne inc sahf add out xchg pop pop movzbl loopne out popf jns jmp or and mov jg xchg gs sub cmc xchg bound inc js and inc scas cmp inc leave jecxz lods ss and pop inc out gs xor int (bad) fxch jnp scas mov mov dec mov mov mov ljmp pop repz repz mov das sub pushf dec pop int3 ja inc add mov or sub adc xor fucomip dec xor ret pop mov icebp xchg sarl insb leave push leave xor out insl dec cmp stos popf dec inc pop lret fsubs push jmp lods xchg movl inc roll or insb inc mov mov cld mov out push push fistp ljmp dec ret or mov hlt daa fisttp mov mov leave add out sub pop popf lcall mov das (bad) mov xor ja clc outsl loop mov dec xlat fmuls pop xchg add sub cld out (bad) and dec adc mov fisubr data16 into ja lods jmp mov data16 xchg mov neg jp iret loope push js mov fldenv sub or sahf xor shlb stos sub ljmp outsl push icebp mov and int3 xchg shrl push xor cmpsb nop pop mov dec stc out cltd sub or std xchg add shrb icebp xchg jbe loop add mov (bad) dec add pop lods mov sbb int3 and or jnp jmp lds sbb dec call or sbb sub sti mov mov imul into and dec mov mulb inc jo xchg xchg dec lahf in pop add pop mov pop lds jns (bad) lret and xor sbb sbb clc bound jmp loop es sub and test shrb ja arpl mov pusha push ret sbb jle push dec adc and pop mov jbe lret cwtl jbe fidivl dec cmp inc sbb pop pop lret add cli mov rclb sub divl repnz icebp pop dec ja repz jecxz js cmp movlps dec and mov pop or out or fsubl test daa jo je sti or rcl sbb and clc pop jmp hlt (bad) mov mov xor and pop mov push (bad) outsb jmp dec daa (bad) loopne sub scas (bad) sub dec or inc inc sub push push loope stos dec add dec sub mov enter call fisttpl sbb sbb mov loop and push push jae cs fs insb mov ljmp push and repnz lahf inc xchg daa dec ret ja sbb gs adc ljmp ja sub js daa pop jne jmp gs icebp xchg inc imul loope pop jns add mov push push xchg adc or es push sub xchg pop jp movntps leave pop jo fistpll sub cmp repz bound mov stc xor loop push xchg sub loop notl aam xor jp add sub xchg jmp sub add cmp mov add cs xor xchg icebp loopne adc mov dec popf jae xor push push les mov xor xor push pop fldenv mov mov push movsb icebp jg dec (bad) cmp sub mov xchg push nop leave mov jge or or or sub pop enter ss popf dec sar shll div in jo mov lahf data16 popf push and xchg lds sub aas test icebp lret outsb test xor mov fstpl or dec cmc sub test and idivb call jmp xchg int jg xor add repz repnz xchg fs cli loop mov std mov pop cmpsl push gs sub mov cld adc fldt repz repz mov out cmpsb inc inc adc dec sbb test mov jg ja enter or mov mov mov xchg imulb add inc mov sub int ret add jmp aas and mov jge js cmp fmuls sub mov mov ss (bad) enter movl mov xchg ljmp push repnz xor jl pop add mov jne cmpsb pop or lock test push jne sub push test xor cmc into fdivs gs test ljmp jb lret jge sahf dec xchg pop inc inc and mov bound mov (bad) insw daa ds rorb cmc and stc nop ror sbb add jns and neg cmpsl jle pop imul inc cmc mov inc mov dec sar and pop and test mov bound xlat rorl daa fbstp cmp mov xchg into iret lahf pop dec arpl (bad) and add adc pop and cmp or out (bad) (bad) xchg es sbb dec mov ljmp adc mov test adc xor xchg xor lret cld dec iret xor add jg sbb pop or adc daa mov sub push insl push jne notb push icebp pop or clc add ret jns dec mov (bad) sub adc js (bad) lret leave push sub gs (bad) test mov hlt mov xor add or mov inc gs adc push dec mov inc loop in clc mov pop xchg adc stc mov and push xor pushl push add and pop dec mov aas fdivr xchg or pop pop dec les cwtl push mov and and pop mov int js js sbb movsb mov sti add mov neg addr16 xor mov jne enter loop push (bad) and lea cmp push xchg and add and mov mov push pop or dec mov out mov dec mov jb push call jmp xor bound sub xchg lcall mov mov xor (bad) xchg pop popa and mov dec add mov ja adc jmp mov ljmp leave mov xchg push (bad) mov pop xor push icebp lahf xchg (bad) (bad) fldcw pop mov sti stc outsb xchg mov clc into neg sbb jb cwtl adc inc sub mulb pop fldt add movsb mov sub jbe imul mov jbe,pn movsl jge stc xchg (bad) stos sub das adc sub int3 lahf pop mov repz ret mov push rcr loop (bad) lock cmpsb dec daa sbb pop cmp inc pop push inc and mov jo mov gs push cltd scas inc and pop jle cmovg int out pop pop sbb and outsl ja add pop in test pop jae sub xor dec dec and inc sub imul jb mov and lcall out xor adc sub into xchg icebp decl xchg mov and adc scas mov add lret add out popa (bad) jmp sub mov push jmp push pop jb add mov insb mov inc pop sub enter jp pop out (bad) cmp mov (bad) aaa icebp cmp (bad) or iret sti jne int inc popf push jno inc mov dec mov das xor outsl add xchg mov fmul leave push mov and mov iret jo pop call add imul sub pop fldenv or fildll jl imul int loope jbe jle cmpsb daa je sub sub shll sbb (bad) cmp cmp and das cwtl imul in xchg gs xor and lret jp mov push les add (bad) or push out mov push lret mov fbstp scas repz les sti scas jmp jle repz lret add add sub or adc pusha ja inc adc scas es dec mov and jecxz fsts push adc fxch sub mov ret mov or sahf inc xor cmp in lret pop mov xor mov push xchg pop pushf outsl imul xchg (bad) loopne and dec sub and adc enter mov imulb into and fs pop mov add js mov mov popf adc add push jmp push cmpb or in mov push or out pop adc fwait hlt or testb dec (bad) mov pop idiv cmp mov (bad) mov sub daa or (bad) lock mov bound mov inc nop mov xlat push push sub pop (bad) movsl cmp and xchg ljmp sub xor lods xchg xchg shlb (bad) jge lcall inc mov add and arpl mov (bad) xchg cmc sahf scas pop out mov xor lock arpl bound (bad) jno clc mov addr16 sub stos sub xor mov bnd lea sub lret jnp repz adc stos loop xchg arpl pop push adc fsubr gs pushl add pop mov add (bad) pop scas je mov pop ret rorb mov pop movsl leave add adc (bad) cli push pop in xchg movsb sbb js fcompl mov xor and repz push dec mov rcll xchg jecxz pop sub mov jno xor imul dec sub out jae sub xchg out push (bad) fnstenv sub into or push lret bound sti cld movsl je out dec iret xlat pop cs test inc test cmpsb cmpsl push mov imulb and call das add daa lcall and fcomip mov push scas pop push outsb mov mov cmp cltd (bad) scas outsb stos sbbl xor jo mov mov sub test sub xchg repnz lock add aas dec jae dec mov sub into insb inc sarl cmp jo xchg push and stos sub insb push mov xor call rol push (bad) rclb adc fsubs iret loop (bad) icebp test jmp outsb mov test repnz shr bound push sub pop (bad) repnz sbb sub xor and das xor jne jno enter out leave add mov sbb idiv mov mov aad rorb flds mov (bad) out sub (bad) dec sbb sub dec movsl push push dec in xchg leave aam xchg ljmp fdivs cmp leave jne lahf sub sbb cmpsl jbe pop gs mov testl in xchg cmp inc cmpsb call cmpsl out push pop arpl and pushf xor inc fs ss cmp in (bad) lahf cmp cs sub push pop xchg jge and add aaa pop icebp repz pop cmp test push imul sub xor movsl lret lea jmp lock js inc xor mov and push add ds pop in int3 cmpsl ficom xchg rcrl test scas bound add push out and and iret int3 call lahf sub out and testl adc push iret xchg adc leave jne cmpsb sub (bad) leave loope push lock lahf xchg push pop pop xor pop adc sar scas add mov push aaa pop mov arpl out jo sub xor in mov and and divb lods imul push call in push mov repz jp mov push rorl testb gs clc enter into add call jae daa popa ja sub outsb int3 (bad) sbb cs push sbb fmulp push (bad) test or into jp out mov fwait das bound int pop and mov jb sarb adc jb sbb mov sbb fsubl dec imul cmp popf cmc xchg dec pop jmp sbb jne adcl cwtl pop sbb repnz inc xor ret add pop cmp mov dec jg mov pop mov dec loop and jg loop mov daa sub cmp outsb clc jg in arpl cmp inc sarl mov call xchg pop (bad) xor jmp les sub aad adc test ret lret push cmp and sub imul lret (bad) aad xchg or lret and xchg int and loop out repnz test pop push jge lret pushf mov inc lods ds mov pop or mov into add push inc add and (bad) sub stos lds xor pop arpl rorl divb xor inc imul and ret imull ss xchg clc dec icebp fist imul test (bad) and out add mov and add and mov cmp mov lock mov xor cmp sub fxch sub add sub mov xchg sti stos out pop ss out dec leave bound loope cwtl cmpsl mov or dec xor out jae push into and cmp mov xchg mov mulb push pop add and inc fs jno mov mov addr16 mov pop je shll push and fdivrp mov add sub sub aaa mov and repnz icebp jbe add mov sub leave cld shlb in test fstps aaa jne xor int3 ja sub repz or les mov jge cmp scas iret negl xchg lods and fistp loopne sub add push mov jp test adc cli fisubl add into shrl or icebp fildll cmp sub sub push sti lods notl jmp sbb imul add ficom repnz mov add ljmp icebp dec nop in fs (bad) lods lods push and repnz fidivr or fisubr mov fildl daa jg rcr jle jno pop pop mov or sarl mov imul sub cwtl inc pop (bad) fldl mov xlat (bad) fadds sub xor add in mov xchg out notl hlt notl mov aas jmp mov xchg xor gs es das jg sub test pushf nop loopne mov stc loope (bad) push jmp cmp hlt sub decl daa loope mov fistp xchg (bad) mov aad dec sub pop loope (bad) mov jmp jmp dec rorb jns fild sbb pop mov and out and mov add lret icebp ret mov imul lock outsl jae adc test and sub xchg pop sbb test push push popf std popa cmpsl cmp dec call (bad) std (bad) fimull cli add sub mov inc out cltd shlb ja jae mov mov jno dec (bad) adc sti shl (bad) or into popf jl inc add fucom cs aad jg in dec mov cltd stos loopne in fcmovnbe mov push add cmp adc adc in dec jb lock xchg stos iret mov push fisttpl jmp fcompp (bad) lret mov dec xchg lods push push (bad) pop ret mov subb (bad) xor fisub sbb imul fistl movsl inc movsb xor loop shrl sub negl ss sub cwtl repz stc (bad) mov sarb rorb add xor xor gs fs jmp repz (bad) out cld xorl add mov jp jbe adc mov in pop or push jge cwtl scas xchg and cmc or movsl test pop sarb or inc lds inc dec aad mov or movl sub mov stc into jb rclb sub ret icebp out outsl fbld stos mov andb mov idivl push cmp lret mov cs push mov dec iret test out jno dec pop pop lods je (bad) pop stc adc pop xchg pushw ds xor mov xor das (bad) jl call das out gs sbb ret aam decb pop fiaddl popf inc or or dec dec inc scas xor fiadd lea loopne cltd jb push ret ret loop and and pop (bad) sub sub mov repz and and jl mov fldl out xor test or icebp nop ret jns stos cmp push leave dec (bad) bound pop shrl ljmp call loop dec jno dec shll loopne mov adc repz jecxz dec push dec call testb rcrb mov mov dec mov es add mov aam dec or loope push pop sbb lds movsb enter jmp push jae dec dec loopne ljmp xor sbb fistp adc mov xchg push mov mov and mov (bad) and sub and add out mov decl (bad) (bad) jae daa push lcall add mov cld sbb add ficompl repnz lods inc pop xor sub (bad) mov mov nop sub cmp dec xchg sti repz sub das sub push hlt das jbe daa pop jb or iret lcall adc negl data16 mov add push int3 push fcoms popf dec les xchg stc ljmp imull jne mov cmp movsl fidivrl bnd jecxz popf cltd add mov dec fadds loope cmp jecxz,pn dec mov lds out mov dec cli fisttpll adc gs hlt mov inc dec mov lods push xchg and into insl mov cs push or sub and adc pop scas xor aad shrl pop jno xor push clc xor and hlt mov fsubl movsl cs mov pop pop in xchg fdivrs test adc mov (bad) mov lahf fdivrl jne push xchg in int sbb add pop scas push call cmp data16 mov sub loopne jecxz mov (bad) jb out and (bad) push pop loope fldenv test iret pop adc xchg and rorl icebp xor insl dec adc lcall jmp xchg xor aam dec jmp sub xlat sahf mov enter jns jmp (bad) xor fstpt lea or movsb mov outsb mov clc and mov ljmp adc pop icebp (bad) repz clc (bad) movsb stos xor push xchg jmp sub mov in (bad) aaa add adc call out sub mov cwtl scas jecxz dec ret jge movsl dec jle lds loope mov xchg (bad) or fiaddl adc dec loopne fild xor sar adc sub mov push cmc icebp rclb pop mov aam icebp repnz jae movsb and add pop and adc out lret pushl int3 inc (bad) sub push or mov mov xchg (bad) fnsave mov out dec imul push roll movsl test ret jl xchg push aam xchg fadd and enter jns or add inc dec sar and xchg adc mov fwait sbb (bad) std sbb mov fs jae je sahf int3 leave loop push lods jecxz lock scas test test mov adc stc mov and mov loopne inc add int3 or jg cmpsb popl outsl call sub sub popf lret pop mov and repnz pop (bad) mov dec inc inc and sub imul push popl mov in sahf mov adc xchg data16 jmp pop xchg xchg xchg je pop xor sub mov popl rcll pop into aad (bad) fstl (bad) pop sub (bad) scas clc jbe dec dec or cmpsb cwtl sbb xor pushf inc nop xchg js pop inc sub cmp adc ljmp sub pop (bad) or cmpsb fdivrl out insb mov (bad) xor xor bnd lahf cmp or sub add mov dec pop mov aam lret mov mov cmc jmp lcall shrl fdivs jae push shll push aad inc add fiadd jmp fsts adc adc xchg mov pop or adc add mov repz cmp rcr push cmp movb fnstcw out mov (bad) sub mov mov test daa sbb add lret and iret adc lret or idiv in pop or rorb pop or test lret xchg lret jne mov stc xor add push test sbb adc fsubl movsl ja sub imul push rcrl cmp jno bound and pop sub nop sbb lds or add dec jge in call dec pusha shll mov push call mov cmp dec jns (bad) ljmp sbb add cmp mov add xchg pop dec imul iret mov test rolb pop lods les push push jae or pop inc imul xchg or in mov push push iret imul ret gs int (bad) popa dec jno gs bound pop mov jno and pop pop or pop push ret into gs mov aaa jmp ljmp ss lock mov dec pop adc dec jmp mov pop scas sub fistpll jg or adc pop sbb pop call cltd popa mov pop sub jns sti shr repnz scas cmp jbe sub lds or or out (bad) in lret mov fidivr mov jo sbb xchg mulb xor and sub and pop mov adc lahf clc pop xchg sti cltd or mov mov fistp dec cld shrl int ds aaa sub and push add mov das in leave fisubl xchg into (bad) mov bound mov pop (bad) jb (bad) int3 mov idivb test xlat (bad) (bad) cmpsb or mov mov adc es into fmuls sti imul je push jecxz daa push out add push insb jmp mul sub sub jge into sbb and xchg out push pop dec (bad) push cs lea (bad) fist out (bad) test fstl and xchg ret add and loopne out lahf aam pop dec daa sub aad idivl push dec jmp or pop mov jmp lret and inc push cmpsb aam fs icebp jecxz inc es lods sbb aas dec insb sbb add je add add pop mov mov jbe pop lds mov popf bound fisttp mov out jmp sub pop and repz sub sbb add pop push jp pop stos mov mov ja jne fwait sub xor sub cmpsl loop mov test ret stc sarl loope jns pusha or in jbe push scas sub popf adc push pushf pushl and (bad) or pop xor pop les mull and mov dec out stos mov adc pop jecxz inc push and adc je jmp push decb mov rcrl mov sub xchg or or xor sti aaa std (bad) push or repz (bad) scas fst inc dec out mov leave pop inc imul fldcw in fwait jge aas or mov flds repz cmpsl dec sbb cmp sub mov lret pushl sub cltd ret loop faddl cmp imul lock mov mov mov stos and loope scas cltd jbe mov and mov cld ss inc adc in dec popf ret in and adc popa movsl xor and pop mov jecxz cs in cmp push jne mov pushl fxch push fistp je xchg out xor cmp jge je or mov pop ljmp outsb out dec cli adc mov pop leave stc adc lahf cltd pop stc jmp in repnz or sub stc cltd xchg and mov xor das gs mov fistl out mov pop ret icebp dec and cmpsl mov cltd popa sahf cvtpi2ps test imul add sub mov pop push std int3 mov (bad) aas xchg out push mov push cmp daa push jecxz repz or add xor mov mov ljmp (bad) sub pop clc sbb not (bad) xchg stc arpl or mov cmp mov mov cli push xchg dec aas xchg fistpll cmpsb dec je lds (bad) or into xchg sbb jl test jmp xor lahf aam pop jo loope pop and dec daa xor and repnz mov imul xchg push aaa sub popf gs and dec push cld pushf push xor (bad) (bad) sbb test mov push lret data16 ljmp xor imul popa add cmp xchg ds ds xor ret push mov test dec or sti jge xor push push gs sub fdivrs mov test ret rol sti sub mov xchg lahf jns (bad) sbb pop jecxz push dec jl mov repz icebp sub or inc mov aam sub jo aaa mov fcompl repnz sti and pop xor xor mov mov (bad) push sub cld aam fnstenv dec stos sub andb pop ljmp pop mov (bad) dec push xor xor enter push movsl hlt ja js jp inc movsl mov inc test and out sbb cld imul xor into or (bad) push rol add in pushf mov insb jno push in fistpll cltd fidivrl xchg push pop xor bound xor inc inc xor int repnz pusha pop lods insb and jmp add jp sub mov jge loop adc pop xbegin sub stc xor adc mov pop push push jae pop ljmp jmp mov lret push mov xor iret sbb xchg or xlat pop cmpps (bad) xchg rolb test lret daa aad icebp roll jne imul dec int3 mov mov lret mov xor addb xor pushf mov inc mov add lods mov and loope test adc test push call (bad) mov xchg stos mov pop mov xor cli xor push or xchg leave jecxz inc jp inc fiadd call (bad) jno sub push mov xor mov xor mov pop xchg sbb jg jmp dec ret or jno cmp (bad) repnz fsubrl out xchg pushl pop hlt or or push inc rclb lods pop iret push cltd sbb (bad) repnz lods dec leave fdivr dec cmpsl inc dec testb fdivr mov add or dec xchg out lcall scas call jns lods sbb out inc into dec into mov ret aam adc adc xor inc rcll sub je int3 sub pop fldcw mov dec and int3 fnsave and ret jp call test movsl push xor adc dec rcrb rcl mov and cmc ja adc sti xchg mov mov mov push pop test decb or sub dec mov jno sub jp orl adc and inc sti mov fnsave cmp adc (bad) push lret aam mov inc idiv sub add js aam dec pushf popf mov mov sub jne (bad) shrl mov dec scas fldcw aam clc in daa rcl mov pop jle or out hlt movsb jmp add jecxz sub pop jbe xchg sbb jno pop cmc outsb lret and je movl mov mov mov lods out mov push aas mov pop mov (bad) cmpsl pop cmp call adc mov dec xchg out loope and notl xlat in add aaa xor inc test data16 mov jo mov xchg pop int arpl dec loope sub shll cltd sbb movsl daa inc and dec jae dec mov movb push mov inc das iret pop (bad) out or adc mov mov push (bad) push (bad) push mov pop cmc (bad) fldcw and or or shr mov test iret fstpl test lret fist daa sahf pop sub outsb dec or ret xchg cmp imul insb ss and inc mov insb cmpsb dec or pop pop mov data16 xchg lds pop fsubrl cmpsl pop sub test sub mov jbe cli push lock lds repnz (bad) int3 xor xchg aam pop or sub cmp faddl into mov into dec mov cmc repz scas out sbb and xchg sarb addb loopne repz add aam pusha mov sub xchg dec adc cmp dec les fcoml dec cmp add lret ds cmp mov scas mov shrl lret (bad) pop xchg popf fisttp mov xor dec adc inc add in jg adc mov and call ja sub mov sbb jmp in xor ljmp jl or xchg dec stos ret cld pop out stos cmp aaa leave out jl pop push adc cmp idivb stc xchg add call mov pop mov rcrl add jmp xchg idivb jmp add jne jle pop sub jne xlat lahf int3 and xor add lahf lds out int3 sub into lods sub xchg inc lods stc or lret or pop and shrl jb lret pop int3 gs leave mov cmp or fs jmp out stc pop cltd adc dec rcr pop popf xchg jo ret xor pop jns loope pushf les mov repz loope mov sub call jle jmp cmpsl pop dec xorl jg jo sahf and mov scas and popf jne add inc sar popf sub or sub insl fs (bad) jae add sbb and xor jl push mov jl rol push rcrb lods mov inc xchg xchg jle (bad) jmp pop aam js jp imul dec push dec leave xchg inc and sub add jmp jb and (bad) mov bound idivl push sub or sbb mov das mov xchg jmp mov mov cmp movsl sub ds sbb pop imul jne sti lcall (bad) sub fdivl or pop sub mov inc adc and pop enter clc jl ret add negl cmp mov loop cmp and (bad) das lcall lahf (bad) clc loope adc (bad) fnsave aas mov pop sub les (bad) fmull jecxz fmull call movsb sub mov call ss jns sbb pop xchg icebp subl in jbe and and (bad) xor dec ds or fistpll mov or in (bad) pop or mov aas sub mov add ljmp pop add sbb mov test dec test inc mov nop test pop xchg adc rcrl add push xchg scas mov or int jbe mov (bad) frstor xor popf sub movsl jge ret adc out cmp cmp lret sub hlt pop leave jo popf cld push push std enter xchg ret shll repnz lret jns ja sub pop push or cli mov or mov ljmp ss bound clc mov movsl cwtl cmc lret stos sub std adc int3 scas and outsb or int3 jmp mov outsb pushf das or push xchg shr das test out aas xorb in dec jns dec fs loope sub dec inc xor sub pop test daa ljmp addb stc mov out int3 pop iret popf or cld mov push int3 pop nop push xchg les and std (bad) incl xor mov addr16 daa (bad) fmull adc xlat scas fwait xor loop add mov inc cmp stos mov push into push jl not sub stos test movsb add add iret popf push imul cltd imul into mov into jno,pn adc das out hlt pop cmp movb sbb add shlb dec lods sub fdiv daa lcall sub in xor mov sbb jecxz push jp adc xor pushl out jb lret mov fdivrl or cli xchg fstpt imul insb stos sub xchg out sub mov cli or (bad) jne lcall add sbb mov lock and hlt push add pop jl pushl (bad) lret cli into (bad) inc or xchg pushf repz add inc sub jle adc in adc sub inc pop xor push cmp sub adc repz adc mov sub notl lret into imul mov gs in (bad) std stos sub push mov movsl dec mov (bad) hlt icebp pop sbb fldt add mov ljmp sbb mov cmp mov or ret daa adc popf repz sarl lods xor mov pusha xor and stos or ja repnz xor lret cmp push daa cmp or sbb lods jle cld dec sar gs jb or or fadds loop mov out inc lock out fisub push jno jmp out xor movsb mov mov into dec or dec sbb sub sub mov fstpl xor mov call mov nop call rclb lret loope inc jg les (bad) or (bad) testb jge xor xchg jmp inc xchg sub stos out dec mov mov loop inc imul xchg xchg les ljmp ja scas inc pop jmp lcall mov (bad) daa or lds insb lods fbld and clc int cli xor incl push jbe movsb sub je jns push add or (bad) and int inc lret sub fcomp cs cmp or stos xor xchg jecxz movl add lahf pop adc in mov jp sbb and (bad) out jg jns xor xor and out mov xor stc pop sub out sti test jmp mov pop add add dec push inc scas add icebp mov pop jecxz dec inc dec out (bad) int sub fwait ret xchg enter movsl inc fcomps adc add loopne out ja push ret sub aam jb jmp into sbb and dec mov imull stos mov cmp dec lea jle (bad) lret adc add mov cmpb mov xchg ss pop or (bad) daa xor ficoml dec lock and sub inc aad push dec inc lock sub dec cltd pop fidivr stos xor (bad) jo pop or add and jae xor fistpll popf sarb icebp jbe dec aas sub (bad) sub inc mov icebp pushf (bad) (bad) sub add fldenv cs (bad) cmpsb stos xchg adc pop cli xchg mov enter in lods pop rcll idiv pusha ljmp jo mov popf (bad) jae pop jo aaa push add dec rcll add mov pop shr mov mov jecxz dec div sub sub (bad) bound andl leave dec int cs pop jne dec pop sub lock out mov add (bad) (bad) sub jne jbe mov pop out mov mov sarb shll insl or push orb cmpsb mov mov push and imul in xor xor pop push push cld or and gs loop push lcall lods sti mov mov pusha (bad) add shrl pop inc sub ljmp jb shr call pop jbe push cmp scas inc sahf decb pushf mov rcr lods cmp adc (bad) mov mov add push cmp pop mov outsl push jmp inc lret icebp and in mov sbb mulb adc xchg push fwait adc scas mov adc lret fsts repz mov out icebp (bad) and inc mov push pop sbbl shlb xor xor in cmpsl cmp lds mov daa sub or pop mov or out or pop cmp dec lret repz cld xor fs mov adc xor or inc mov jne shr ret xchg jmp neg pusha and movzbl mov mov fidiv add push lock push jl pop jg or cmp add jp rcrl stos mov (bad) nop sub mov aam (bad) out das imulb xchg imul mov mov push ret out dec enter sbb push ds or loope stos les scas mov dec cmpsb sbb sti sbb sub cmp xchg lods dec in rcrb loop bound loope dec adc mov cmp lock popf pop sub imul xlat dec js outsl cld inc mov jmp dec and mov and sti test into repnz pop leave push out mov cmp int3 and into jb lds fcomip adc into mov daa adc jbe imul cmp push push out fs lods inc xchg jmp (bad) sub push lcall sbb pop lock out bound jns scas mov inc mov or fbstp cmpsb in stos adc xor mov pop sub mov divl jmp int3 sub push jmp out jle adc sub mov xchg adc jg adc mov (bad) in ret movsb dec xor in pushf xchg sbb xor ficom fisub or mov xor stc sub bnd xor cmp pop rorb dec (bad) stos cltd aad dec jle lcall xor ds xor imulb push (bad) jae (bad) xor and sub sarl test mov sub add sub idivb out pop pop (bad) mov push jmp ret sti cs jecxz inc jb pop (bad) data16 inc leave jg mov mov mov ds pop mov jle push data16 mov aas xchg inc decb xchg xor xor pop fdivrs mov sub mov dec aas loop xchg or fcompl lret pop out lret pop pop sub mov in push mov movsl add das out xor fwait test pop lret mov xchg movsb in or das pop outsb es adc clc adc mov out fisub and les xchg std jp testb dec dec loop push adc mov add test insb mov jg xchg pop pop sbb inc inc cwtl adc mov mov dec push xchg test cmpsl ja mov mov stc decb lret inc lods jg sub push sbb mov xorps jno ret test mov sbbl jecxz push popa cmc not (bad) ds mov dec pop mov out xor mov cmp inc mov cmpsb dec negb adc faddl ljmp xlat add mov adc push das and stc or sub push mov cwtl inc mov mov popf cmc mov mov add out lret fldpi push fs adc mov cmp xchg sub xor ret repnz dec fisttpll or das mov stos je test pop mov add (bad) jne jnp mov stos out and cmc ret fstps sub sub adc xor lret into roll jno xlat (bad) xor cmpsl adc sti and mov decl fisubr pop sbb mov xor and test (bad) stos cltd fstpt outsl cmpl (bad) lock negl punpckldq lock mov inc aaa je jp ret jnp das jno xchg iret mov imul mov iret xchg xor and pop xchg (bad) imull adc imull mov out stos pop ljmp xchg stos fs fcomps xchg (bad) and mov data16 orb stc outsb out dec enter shlb pop jmp cmp xchg int3 dec dec idivl call fdivrl add xchg iret std pop xchg int3 pop and push jmp pop push mov ja insl jmp adc or push xor mov and dec dec insb clc into and cld mov sbbb mov and je mov xor sub push sub in pushf daa (bad) xor pop dec or es sub lock jp jbe test lea (bad) jno out push mov movsl jge xchg adc jmp lret or inc pop and mov aas daa inc cmp scas xlat dec mul push cmp dec fimul iret or push mov push gs or pop jge leave push insb jmp xlat mov push int3 insb add mov lcall pop add xor ljmp and mov call adc mov fistp lret sti sub shll sbb sbb in test add repz adc jle fs cwtl es daa shr das xor cltd jne (bad) xchg rclb (bad) jb negl xchg or fsubp leave lock mov cmpsl mov int mov stc mov add cwtl xlat in cs pop movsl rcrl jle xchg fdivrl (bad) out mov dec jae fistpl add fistpl jmp adc xor mov jp pop xchg clc out xchg mov mov pop clc pop or mov sbb adc out mov mov or fiaddl loope xchg push div int3 sub clc adc test mov mov (bad) mov add outsl jnp ds sbb in scas ja test push add (bad) (bad) sub lcall mov add ds sti sti nop insl sub fwait int3 xchg fucomip sub and or test mov jge lahf stos sub jecxz push add mov (bad) leave mov push pop loop pop in xchg push rcrl dec jg aas mov xor cmp lods sahf and mov dec (bad) into lret rclb fisubrl or mov or ret scas ret push or mov add or mov add insl adc ret mov cmp sub jnp push fstpt sbb jl das gs lcall jns xchg xlat ret push pop xchg test cltd insb dec out mov fldt test dec jbe lds and jmp out add inc clc cltd shr xchg jle scas jmp mov das push dec icebp out sub ljmp leave sbb mov pop pop in cld dec mov mov push inc rcl sub fisttpll adc lahf je in int3 adc mov repnz and call out mov cltd fcompl pop mov jmp inc loopne mov movsb lahf dec iret pop (bad) and or aad xchg lahf pop sbb bound mov cmp into jge bound lcall xor (bad) rolb repz ljmp repnz dec stos xchg pusha adc fdivrl xchg cmp test and repnz dec add into cs icebp cmpsl ds jl aaa aaa xchg mov out sbb push repnz sub pop jne add in cltd pusha iret cli push mov or aad and mov xor ljmp xchg into mov add bound ljmp mov roll xchg adc inc xor or sbb add fidivr add rcrb repnz inc and sub sbb es (bad) fisttpll lret (bad) and sub gs clc xchg add jbe and pop sub mov repz xchg sti mov push lahf hlt push imul loope in (bad) movsl test std hlt ficom mov mov lret cld gs pushl andl pop call pop cwtl xchg add sub lock cmp adc mov pop cltd shrl ss lods mov (bad) mov icebp dec add xor lret sub gs jecxz nop push push xor rolb jecxz jns dec pop and or aad push (bad) pop popf insb ljmp xchg pop jge stos pop xor out cs fcoml add enter lret cmp pop jecxz dec loope out cmc inc sub add xchg sbb or pushf lret pusha jmp mov pop inc cmpsb jg sbb pop mov mov pop in mov and jg insl mov mov (bad) stc leave sbb repz jmp insb lret fbld add jp sub dec pop sub outsb pop xor inc xor push mov enter das jae adc mov cmp movsb mov lret push sub adc pop inc nop lcall in mov std dec imul (bad) lods fist and aad pop (bad) into je push add mov popa out push adc (bad) pop lods jns pushl cmp sti cmc cmp inc ret sbb pop ficompl pop (bad) and mov push stos jmp add pop mov idivb inc adc nop popa mov inc fwait dec mov mov inc xchg imul push fs xchg xlat out jb notl js dec cli jmp aam in sub popf adc daa (bad) pop gs pop shrl imul hlt push out lods dec loop xchg clc push adc push mov mov jbe or sbb lret add sub sti xchg xchg lods mov inc and cmpsl cltd jns inc cmp mov out ds movsl roll jno xor insb cmp ret xchg inc and cli xor xor pop sub clc das xlat xchg pop mov sub xchg xchg ficom hlt sub or sbb fld mov mov iret ljmp movsl mov or jne out jp fiaddl bound aam push (bad) sub sub call xchg ret fidivl aaa jg lcall pushl xor popf rorb mov inc push push outsb pop mov insb rclb fs (bad) lock pop mov stc popl cwtl jl cltd mov cmpsb push das je leave loopne roll dec push stos fildl xor dec and add and imull std into cmpsl ret mov pop imul (bad) mov fdivl xchg fdivs jns leave inc std xchg or pop mov add lods (bad) daa mov (bad) dec and cltd shll sti lret sbb add daa sub movsl pop rcll pop (bad) push (bad) sahf mov pop add add jmp sub les repz mov movsb (bad) mov iret push loop scas sub divb call push jmp pop sub mov pop outsl cmpsb rorl and ficompl xchg cmc push cmp fbstp ss rorl jge lea lcall xor or and ds insb out push dec push movsb scas orb popa dec pop pop shlb stc inc xor rcrb push mov pop jecxz das loope push mov pop push jmp aaa gs leave mov dec pop dec cmpsb mull (bad) dec cmp popf sub and stos int jnp aad jmp push xor icebp rorl popf xor and pop lret cs sub repnz sub mov and roll mov negb insb mov and das add (bad) out sub dec mov mov cmp adc (bad) fmuls ret and or mov adc out jno push cmp push or xor push cmpw mov decb out push lcall or xlat lds in nop xchg pop sbb imul sub (bad) jmp pop pop popa aas mov inc subl imul mov adc add gs ljmp pop ret out or lds fistpl mov out mov dec fsub ljmp sub iret xor mov dec scas xor mov iret mov les inc sbb insl dec mov dec or jg dec fs dec cwtl adc add aad std movsl mov mov enter shll inc mov xor add sub (bad) xor lcall xchg lock outsb push pop out jbe call push sbb mov and js (bad) push (bad) mov adc enter lcall sarb cwtl mov pop rep sub adc out push lock push fimull xor mov xor xchg mov dec adc fsts loop test mov jbe and cmpsl out lahf ret pop sub jae mov sti sbb xor popf stos cmp das dec jg rcrb dec shl es xchg pop pop xchg sub into pop popf loope lret jno insb sub xor push mov xchg imul add mov imul data16 lock pop (bad) jg or in and cli add cmp hlt or in push push xchg lds mov pop mov ja inc or mov sub xlat inc jne cld or dec cmp imul jb and pushf mov pop mov ja mov inc imul pop pushf ljmp push test scas leave mov push lret jbe imul xor jnp pushf jmp negl jmp hlt (bad) jle pop fisubr ret (bad) xlat mov dec mov mov iret notb call dec adc xor aam stos popf subb mov test repnz and or or ja inc adc and sbb and repnz subb movsb sbb mulb js sar stos lret cmp leave and repz in push in pop pop and out iret or pop push mov cs jmp std mov arpl adc jmp dec sarb adc aam loop pusha mov ja mov pop shll dec push dec movsl in into push dec pushf (bad) or les xchg push dec int3 jg mov (bad) push idivb fs mov notb cmp adc or icebp cmc imul in inc add into stos cltd ja ja or jmp add pop cwtl or hlt (bad) das add mov mov mov jg inc sahf cld into popf sub xchg fs faddp ret lret inc or fisubr jge loopne mov (bad) mov fwait pop push jecxz xchg mull ret pop lods test aad adc mov jne cs jmp aad mov adc adc mov mov mov out xchg sub jno dec dec (bad) xor sub cld fwait jmp mov mov stc mov push (bad) adc xchg mov xor shll int3 xchg mov ficom cwtl cld imulb mov xlat sarb xchg jmp imull xlat es rcll leave jne sbb mov add mov mov and jmp fidivl repz fs xchg out popf cmp fucomi jl add ret mov xor pop lods and mov hlt pop enter inc push xchg aam pop mov daa fs mov push inc xchg imul inc inc mov pop lds or bound sub jecxz imul (bad) and insb leave fisubr xchg and xor int3 push add dec cli test jle push xchg push fsts movsl jne pop push fidiv inc (bad) mov scas imul sub stos mov jnp movsl add sbb dec psllq scas and mov push jmp arpl aad jmp sub scas into xor dec shll mov pop ret or mov cli cltd stos imul fldcw jno inc or icebp adc stc dec adc shr (bad) fiadd fstpt (bad) negl cmc inc add pop cwtl pop ficom imull xchg icebp into push out lret pop out ljmp xor mov push xchg jle pop repz and (bad) fldenv (bad) outsl (bad) out cmp xchg xor adc mov mov mov fstp orb pop add mov add out popa xor pop (bad) fs mov inc xor add ret fadds std push or loopne xor mov xchg iret mov ret add adc fwait add mov rcr in dec stos cmpsl inc push jmp ljmp and jns sub mov sub outsl imull stc mov push push aad repz sub popa (bad) ljmp mov iret icebp (bad) ds shrb sub das out cmp jno sub jl inc xor cmp ret add popa xor std bound adc test scas ret add and scas subb xor sbb scas (bad) shll loop in sbb jge dec stc movsl inc iret and jae daa sbb sahf sub dec xor std and mov pop shrl sub mul xchg push sub icebp and cmpsl sub nop fisttpll (bad) sar adc pushf stc xor mov cwtl inc out mov sarl xor popf sub mov out xlat mov shrb sub leave sbb and or pop xor jbe add mov fucomip sub cmpsb ljmp sbb js mov xchg push jns imul xchg and ret adc mov cltd aam enter pop mov sub mov xchg in outsb loop sarb out cmp cmp call or xor arpl fildll pushf pushf sub xor aaa out cltd and cmc add stos jle out pushf sti ljmp xchg jge mov into (bad) and (bad) imul dec add es pop mov mov out ljmp mov inc mov and dec insb jno sub ret push and outsl or in out into dec dec ljmp shrl or outsb gs jbe push imull sti cmp daa inc dec and add iret stos out dec fsub sti xor and xor jbe gs xchg mov dec outsl xor clc lcall shrb lods mov ror lock (bad) sub adc mov pusha pop out and mov sub cltd sbb inc inc stos sbb cmp aas add push push and cltd sbb cmp mov addr16 add enter out mov sti into sbb xchg mov repz jmp mov adc shrl je fs incl sbb pushl and popa popf rclb aaa ficoml iret sub in in mov adc stos repnz stos cmp mull out ljmp ljmp fnstcw das xor (bad) sbb mov pushl rcll mov int pop subb repz cltd mov or loope (bad) push xor sahf pushf xor mov (bad) mov xchg mov into nop adc mov xlat sbb test call pop (bad) xchg aaa cmc add and ja pop (bad) and and add lods and jecxz (bad) and mov sub lret or pop add cmpsl mov bnd mov roll dec or les lret fs lods aam cld sbb pushf fisub lods push xchg cmp mov neg ror movsl ja adc pop sahf mov xor lahf or jae fbld adc stos push push jmp mov push shll sub jbe sub out sub and pop out mov pop mov adc adcb aad xchg bnd mov ds xor or xor xor xchg jne jg rcrl movl imulb mov lret repz cmc adc mov push and xor jmp adc push dec dec jge xchg mul loope pushw xchg inc leave idivl fldenv outsl cld mov das pop push pushf add pop mov and loop jge add mov not cltd pop imul in repnz loop jge cltd jo pop mov xchg sub mov std lods mov test fcoml (bad) xchg xlat push jg in (bad) ljmp mov ret inc xchg jae or inc sbb test out jne ljmp out int3 sub inc daa xor push adc cmc xchg (bad) xor outsl int and mov repnz call cmpsb lahf dec gs (bad) test call mov decl xor arpl out jns jmp mov outsb sub jmp xor sbb cli xchg xchg pop in into ds cmp xchg and cs or push adc (bad) cwtl shr bound hlt xchg push pop into mov pop mov xchg sub mov fiaddl into xchg negb inc and xor pop mov out jbe push and pop mov das daa sub aam ret iret pop add in xchg lret sub xor fisttp and nop pop add mov mov sub movsl mov and xchg divb inc and xor out mov imul inc cli mov sub mov or jo sub mov mov mov add push (bad) sub adc aaa stc cmp xor gs lods and sarl lret (bad) mov notl sub add mov cmpsb not repz dec adc lahf jns jmp xchg out mulb and fs jbe (bad) imul mov bound iret stos lret lods andl pop addb jae lock xchg out jl xor xor out ficompl sub or pop mov pop dec lret dec add aad mov popf imul dec ja inc arpl sub lret cmc out aas fistpll stos sub fsubrl ret shlb sub ljmp imul in out sub pop push mov pop adc xor add sub jne cmp movsl jmp or sub daa add out dec (bad) stc repnz mov jl leave and cmp movsl pop mov xor cmc xor xor mov stc xorl push cmp mov mov jge mov lds movsl xor and sbb mov dec push sub pop loop leave call sbb daa and aas cmp or ds sbb cmp jne call add sbb mov ds cmp nop xor arpl cmp out adc add cmp les mov outsb inc dec decb jae and add gs adc idiv cwtl jle push sub mov xchg sahf push push ret popf inc iret pop std orl mov and add xchg sti rcll fwait or mov in lds xor xor push rol dec add dec cmp (bad) lret fstpl (bad) cmp or cmpsb (bad) lret jb add stc stos sub call lcall or stc out push lret inc sbb pop fldt adc sub push fnstsw or popf push lret jb fxch cmpsb cmp out pop adc popf jge mov or fdivrs xlat stc pop mov mov push std leave outsl cld mov lock int3 in stos mov mov xor xor mov push xor (bad) call xchg and jo dec mov scas adc pop sarb clc sub lcall xchg sub and inc mov pop add dec (bad) aaa dec mov ja or lock ret cmpsb push ljmp movsl sbb leave cmp sub divb push pop out adc inc mov cmpsl (bad) in add repz enter add out and and cmp fcompl mov imul cmpsl inc hlt sub xchg sub ja sub loop or (bad) or sub xor adc pop subl xchg or scas popf bound cmpsl lds mov push sarb push push pop int push lea xor push jg push lods dec or mov add nop int inc or mov rcrl inc and and add mov push pop cs push ror pop bnd mov test leave sti stc pop xchg mov gs cmc fwait out inc into and cmp lds sbb inc enter xor jo cmc xor xchg loopne mov movsl out and adc shl mov lret push push jno cmpsl in bound xchg (bad) cmp ljmp cmpsb cltd dec test dec fs std inc fcmovbe xlat popa popf lret adc cwtl cs mov jp mov pop mov dec out dec lods add and fs sub push mov or jle adc mov inc cld mov xchg leave or xorb loope in das pop inc push ret sub inc shl nop enter leave or fbld enter cmp (bad) test fist stos cmp cs dec mov ret ss adc loop stc (bad) shrb mov pop lds jne sbb adc mov sub daa (bad) jl cld add or mov aas push imul pushf inc (bad) xchg jg xchg mov ja lret mov xor pop (bad) or in gs inc sbb pop addr16 lret scas fsubr out or jmp sbb ds cs imul test mov push movsl (bad) insb lds andb dec add idivl xor (bad) std jno test or sub jns mov mov fwait aam pop xor adc adc sub mov mov pushf jb push mov fs push cwtl mov (bad) ljmp jne jne mov daa dec test out dec sti pop test mov jnp or and test daa xor loop push pop cmpsl je fs pushl movsb inc stos mov rcll or sbb lods push jo loope data16 sub add mov add call test ja pusha jo loope jge add or jle bound pop xchg add xchg add lcall add cmpsb add add add mov add add add add rolb adc add fiadd push loope push jecxz sbb and repz stc mov add add and adc jns adc adc adc scas sbb clc sbb add adc adc sub pop das adc xor cmp adc push inc adc adc adc arpl shlb push outsb inc je aaa js xor test leave rcrb repz mov inc (bad) in xchg stos inc xchg js xchg xchg inc lcall mov movsl or stos add mov xor sub (bad) out inc int3 loop aam inc fdivs (bad) inc loopne inc jecxz inc in inc call lret xchg mull ret and pop inc or loopne or mov nop sbb adc adc xor cwtl cmp adc fstpt xchg or add dec adc push add pop add add or data16 insb add add inc fbstp mov sbb adcl xchg test jae adc jnp popf hlt inc mov inc lods push inc mov fs mov push roll (bad) movl roll (bad) add fiaddl loopne cmp or or inc in lahf inc icebp dec inc test sar sarb push cltd mov add adc jmp add add add and sbb cmc sub jmp add add add psubsb adcb pop dec pop xor adcb jno addb fidiv mov adcb cld (bad) adcb cmpb xchg fdivr or xchg addb add subb cmp xor mov add pop int3 or or or fimul mul or out ljmp xorb cltd incb mov or inc adc sbb and daa add add add cmp jl add add add adc pop adc adc data16 imul jae mov stos jne fistpll data16 jno sbb xchg (bad) add in nop adc adc lcall adc cmpsl sbb test mov push mov js sbb popa mov movsb movl int pop rclb (bad) adc mov adc in stc in adc adc ds sarb std adc sbb or stos out or add jl add add add add xor ret ds inc add add add add push add and and and and insb and and jne sbb pop jle mov and jo add xchg add xchg xor and or dec mov fwait mov (bad) mov rol add add leave add and fsubs xor and fbstp sbbb and enter sub or cld or decl add or test jge addb clc sbb and sbbb out sub int subb call addb cmp andb sbb andb sbb adc andb cmp sbbb fidivr orb test lret rorb xchg or xchg or fwait cltd popf (bad) arpl adc jnp adc jg lods clc inc mov inc mov inc mov roll add lret iret add aam add add loop lods in scas jmp xchg repnz stc add incb int3 add clc pop or or mov add add sbb jle add and and test leave daa or andb add cmp ds inc add dec add push add push add pop (bad) mov test imul or ja (bad) jnp (bad) adcb jns xorb addb jno or mov xlat test mov mov enter lret rorb iret adcb fildl in lret popa repz sbbb sbbb or cmpsb cld add (bad) dec adc push add sbb and and fidiv add ss cmp mov add dec push add inc push aad pop int pop cmovo sbb add adc push pop jns fs (bad) add xchg mov mov mov xchg add cwtl add fwait add mov and add mov cld mov inc mov inc shr (bad) lret add xchg inc aam inc fprem1 inc fldl out inc in or imul inc clc mov jns push add les dec or dec jo cltd adc dec pop adc sbb and adc and dec sub jne sbb xor xor push xor adc adc inc adc dec adc push adc adc adc popa adc adc insb adc jo mov pop inc jl inc (bad) and mov lea xchg add xchg add xchg add lcall push pop cmpsb cmp aas inc lods jbe scas mov inc inc mov inc ret lds leave loope into cmc inc sarl (bad) inc loope inc out inc jmp inc out fadds dec inc cmc sub std pop into add push daa push or out adc ret adc cwtl pop and inc push xchg inc sub inc sub inc xor cltd xor imul inc xorb xor jmp sbb subb or popa imul jo hlt je jnp pop jg addl xorb insl xchg andb aas mov push stos or or or mov movl andb addb mov sbb or inc testb orl jmp bound push lar add add inc sub and add add cmp repnz add inc add dec push call or push or push or dec pop cmp arpl data16 add jb enter jnp orl mov lcall xchg or cltd or or mov lods sub andb std mov scas rolb cmpb andb or adcb loopne ljmp jmp add or or sbb pop adc add test or dec mov or or adc out push or sbb (bad) pop or and push or or xor outsl aaa or cmp or or or push or or pop dec bound push leave insl pop jno sbb sbbb test or or lea fcoml popf lcall or test repnz or mov mov or rorl lds ror or push mov and aam add and frstor xor and and ljmp and and sti and (bad) sbb add or or ja or incl dec adc in add add and push xor push add add add dec add add and add pop add and and inc jp lock jbe and mov mov xchg add sbbb sbbb sub sbbb (bad) mov and mov sbb xorb in adcb inc ret cmpb adcb cmpb cmpb andb or subb mov test add push push les cmp add sbb je add and jo push xorb inc xor inc cmp inc inc xchg inc dec adc sbb push sahf inc pop jmp pop mov gs inc push inc jb inc jbe inc jp inc jg inc orl and push jle inc inc mov inc stos sbb fwait inc mov inc mov ret lds enter add rolb add loopne mov add in add lock xlat hlt dec inc stc flds aaa cmp adc pop pop or cmpb addb xor add add xor add daa add sub pop add add add dec add dec add add or pusha or or or xchg jne push jns jnp or jg lea or addb dec mov jno cmp xorb inc mov mov int3 enter add and (bad) and and and and xor in jns add and adc (bad) or je or or or and cmpsb daa or sub inc xor mov or or cmp popf inc or or daa push jns subb addb subb jge sbbb add cmpb and sbbb sub xchg or or sahf or or pop mov mov in mov enter addb sbbb andb push fiadd call cli out (bad) mov nop divl rorb and add xchg sbbb dec adc sbb mov sub add add add cmp xchg and inc and dec and dec and and and pop and and arpl movsb data16 and or jnp pusha xorl add lea lcall xchg xor fwait adc ss stos add add push call or ret or (bad) or or or or or fmull loopne in stos jmp mov sub addb icebp add ret cmp adc jge adc dec stos push and add add push sub jecxz add ss add inc add add and add pop sub movsl push or or arpl mov or and js push sbb or enter sbb or mov mov or cmpsl mov cwtl pusha and stos and scas and and mov stos (bad) and and shll mov and and and jecxz es push out xor mov and and push add sbb add or aaa or jb add and daa add sub xor xor aaa add ds inc push xor cwtl dec add push add push add pop push or pop inc data16 push inc outsl and jne inc jns inc jge inc subb test sub lret popl into inc cmpsb jmp test xorb mov or or or rorl inc aad pushf (bad) inc fdivrl mov sub orb or xorb and xorb push add sbb pop or cmpsl or call add sbb push push add add popa add (bad) add cmp hlt aas add add add add add int3 push iret pop imul push inc insl xchg inc jo inc jae inc js inc jl inc (bad) jp xchg or imul pushf xchg lahf add icebp mov insl mov sarl jns and and and and fs mov and ljmp and stc and adc add nop xor or cmp mov add pop je add and es sub fwait xor scas cmp or or dec or dec or push or adc adc inc sbb popa insb add add add jns (bad) jg out adc and mov adc xchg adc adc popf sbb mov test inc lods add int3 add mov push mov inc mov fs add lret lret add int inc into add roll roll xlat add fldl loope jo or (bad) push push jg pop xor jns or mov sub fdivrl leave xor push jo jae mov add (bad) pop pop adcb fmull jg xor mov adc pop sub psubsw shrl push jo xchg jne out (bad) dec pop rcrl push mov jl ss mov cli sub mov movsb add pushl pop and loop push mov jge jl pop jmpw xchg push insl lods jg in sub pushf sbb jl jb sub mov xchg mov pop xor add insl fistp pop not mov push fpatan js add fstps lret pop sub push test es sbb hlt out movb jge fiadd fisubrl push test cli loopne sub rorb sub fildll jge push push xchg cmpl in push nop cmp push in ljmp jle push icebp or cmp jle test inc or dec mov push adc dec inc and add mov imul push dec xchg ljmp mov adc or pop nop xchg push pop xchg shl scas mov xor jb and shlb push sub push mov jnp call in aas add movsl xchg mov ret mov add push cmp or mov adc call in fwait cmp sub cmc adc sub sub pop jns in nop cmc mov or stos mov flds sub nop pop xchg jg push adc sbb out pop cld cmp push mov mov push xchg orl stos in jne inc and mov jge or jo jbe jle jmp loope jp xchg (bad) sub add adc xor mov xor pop xchg adc data16 rcrl icebp fs int3 test and out xor mov add outsl in repnz insl cli push add (bad) jg pop shr add add stc addr16 jle cmpsl jae and add not sub jle push pop xchg add sahf mov push in out sbb adcl sub arpl add cld mov fldl repnz int sub ljmp pop (bad) cli pop xor sbb inc orl mov mov adc fcompl ljmp xchg mov jno mul pop or jnp js testb jg add pop push data16 xor xor or jb xor sub xchg pop fisubr int3 int mov sub ret jl loop enter sub sub cmp es inc clc jns mov mov add jnp dec dec dec pop test or add push push mov or inc or nop mov jb xor cwtl outsb call pop push mov (bad) jo add mov push sub lods pop mov repz dec push stc push andl (bad) or inc lcall (bad) movsl testb sub pop mov icebp mov add out dec pop xchg (bad) pushf addb ja push xchg cmpsl cld subb aas fisttp movq pop push add xor pop push mov push mov sub cmp dec fmull xchg adc fistl add jno ljmp lods push push (bad) out mov mov sub dec dec adc enter jp sbb outsl neg push pusha pop mov sti jg mov push add pop xor lcall add pop push sub sbb jnp rolb add nop stos add rolb adc aad hlt test mov in mov or sahf out lret mov xor sahf por cmp push sbb add nop (bad) and pop scas jno sbb pop push inc sub mov or dec jg push and cmp adc add je idivl push or xor push and add jmp in pop cs dec xor ds mov sbb pop add aad push sti mov add iret jbe int mov adc (bad) in push inc ror add pusha outsb sbb inc pop (bad) pop xlat lds (bad) ljmp pop pop leave adc or sub and and mov fildll pusha push shlb ds or test add popl xor lret push sbb sarb loop pop push push je dec cwtl pop int3 out jle (bad) mov push sub adc jb xorl add or sub inc add cld sti (bad) jg call xor push push pop pop test out push xchg rcll lcall push jbe xor dec push inc or dec and in dec lcall inc (bad) sarl cmpsb addb mov adc aad ss pop push ret jne in rorl push pop pop inc shrb sbb sbb push out pop insb sub insb loop dec cwtl dec fstpt aad push pop int push popa dec mov pop cmp andb push push xor push jg inc mov sub inc add push dec (bad) mov xchg out aad cmp xchg or inc or pop sub pop xor lock mov sbb nop jmp push push jg fs mov push nop jge inc push and lods jecxz sbb fildl push and sub iret and divl int3 das mov push cmpb cmp jmp mov jg (bad) mulb outsl xor mov lds mov lret addl push push lcall arpl mov (bad) cmc pop in dec idivb rcrl addr16 cld fstpl sub push adc mov pop xchg flds push jb add sub pop push pop pushf mov jnp std or dec or xchg or out fidivl dec fisubrl cmc or stos sub inc movsb mulb pop pop sbb repz adc push scas adc cmp jle (bad) and loope mov sbb and sub rolb add sub pop test loopne pop xchg stos jns call jl lds das xor jp je pusha addr16 cmpsl inc push orl cld arpl sbb inc xchg xchg es mov fist add adc cmp inc and xlat (bad) pop xchg icebp aas push popf cmp mov jns adc xchg push dec pop test add pusha jp inc xchg out jbe mov add pop mov pop movsb and outsl mov inc and add into ljmp cmp fadds pop xor rcrl add stc jbe fimull jns push xlat pop mov cmpl test lds pop push push jge push sub mov movd cmp add gs iret scas push fcompl pxor mov arpl mov inc inc sub pop (bad) push jb pop push sahf das push cmpsb inc test into rcrb mov stc jl xor push lret cld ja inc popa sbb inc or les gs jge fadds pop fistpll jecxz adc lret or xor loope ja inc clc icebp and sub pop shl dec movl push iret and push ljmp inc or xchg rclb or or or aas or push push loopw inc fdivrs nop movsl out sub push ljmp lret xor daa push out in mov push (bad) aaa leave mov fs pop add nop (bad) cmp jne or mov mov call or sbb aam leave or xchg lds popa add jae xchg mov jecxz stc or dec sbb sub xchg rolb sbb cmp sarb jp (bad) adc mov add sbb ja push mov outsl cwtl ljmp into mov not movsb rcrb adc pusha ud2 out (bad) jge sub in add (bad) add pop sub dec mov add cmc push aad loop jno inc push pop movsl cmpl enter fsubrs add pop adc adc or mov push push xor movsb add scas jmp loopne das imul or sbb fiaddl pop shrb aam mov lcall pop pop dec sub mov inc fsubs jnp es cltd mov xchg pop and sub xchg jmp sarb add es movsb sub in dec cmp push aam push jg mov js fisubl dec xchg pop add pop std outsl and ljmp ds sbb xlat pop pop dec mov sti add mov inc xor or push jge testl lods sbb data16 add or inc int3 adc mov ja repz ficom andb aaa mov and xchg mov aad dec add cmp add cmc xchg and add sub mov add pop out add pop (bad) iret mov ss push and mov adc repnz or adc shr cs mov scas lahf inc pusha cs jle sub into inc ret pop or inc xor add pop enter ljmp fisubr (bad) daa xlat aas pushl inc loop mov out cmp mov outsb adc cld or push pop les push xchg roll push push pop mov js imul or ret mov pop sub push push inc daa adc mov sbb icebp pop in mov push push out mov (bad) fiaddl and dec cmp cmp rolb call pop xor sub je adc mov mov add or nop hlt bound sub shl dec dec inc mov out daa jle push pop pusha fimul push rcrb loopne and lcall cmpsb pop in dec gs imul mov push push jns dec clc lahf mov xlat bnd iret pop cmp iret mov pop pop popa js fisub leave hlt pop dec aam neg xor pop imul (bad) jg pop aas repz or mov inc cwtl sbb and fiadd push fisttp rcrl sbb push cmp add sbb inc (bad) push add jae lods pop test roll lahf fwait (bad) jg fcomps jns push add jmp push popa xchg dec jbe push mov xor sub push add cmp push xorb ja adc pop push (bad) and ljmp push aad call mov mov xchg sub pop sub dec add cli in loop dec mov inc or push push (bad) cltd arpl adc scas cld xchg fldl rolb xchg int test lods add sub sahf dec add add out or push idivb frstor jge add repnz add xor push into mov pop push pop popf add push mov add inc (bad) xor or xchg fistp fiadd es mov movsb aam push push pop mov dec push pop fcomps push mov pop and pop dec dec int das cli jno inc adc loopne xchg imul (bad) jl icebp mov test jnp jge pop cmp sti inc gs lahf add add adc roll pop pop inc sub divl or xlat in dec pop pop lret push fnstcw syscall mov loope add ljmp pop cmp adc mov xor cmp (bad) jb mov or pop clc xchg add add inc mov add mov das lods mov decl sbb inc inc or cmpb dec enter (bad) mov lret add adc xchg iret (bad) or pop sub js lahf adc pop push xchg push add cwtl (bad) or outsl add fadds incl rorl sub add outsl mov fstpl push cwtl xchg inc daa adc rorl lods add or icebp (bad) cmp push pop out and dec xor pop jno lret jle iret pop out (bad) adc cld and enter add lds out push dec mov or loop push dec mov xchg pop adc popf inc movsb push push dec (bad) jge nop dec mov add xchg mov sbb ja rol int cmp imul iret in sbb movsb dec inc sub inc pminub loop mov pop in lret xchg sub add popa outsl mov nop dec das lea jo sub push test and scas rclb stc ja push xchg es xor or push fstpt adc jne adc mulb push or pop (bad) aas mov add mov push jg mov pop rcrl push or sub daa gs pop pop or gs push sub call jg xor iret sbb loopne pop jle pop test rclb mov jl fldl imul in or xor notl aas ss lock enter stc xchg fildl adc mov mov adc xchg jae inc xor fsubrs add out sub push xor mov add enter jl iret xor daa push pop lcall flds or sub aas popa cmp cmp out rorl fdivrs pop icebp cli pop xchg lds scas dec xlat jmp stos add fidivr adc jle orb cltd pop imul inc and lods add pop add aas enter adcl sbb sub mov jbe add pop cwtl sbb jae imul jae inc inc repnz (bad) mov aaa out xchg and adc in pop jae std mov adc ret push (bad) mov fsubp pop xchg adc mov xchg stos out inc mov push pop dec scas mov (bad) xlat jl adc dec adc lret fbstp nop out add mov adc mov or je adc loope xor adc pop fistp in xchg and in cs cmp and add (bad) xor ljmp inc lods aas jbe mov (bad) pop lcall or pop add sub inc add das add (bad) test in mov and icebp insl std pop pusha xor fs push pop pop inc cmp lods scas add mov data16 jne push pop dec hlt mov test push das es mov add or dec xor mov mov push out fidivrl lds test push jnp xchg pop js mov mov aas arpl jno hlt xchg incl daa loop mov and repnz inc sbb (bad) inc div pop and (bad) imul xchg xchg fwait xlat movsl push in mov vpsubb inc or inc fsubs jbe pop pop mov push mov and sub mov adc adc or repnz add xor aad (bad) ds dec lret mov push gs xor xor sahf in cmpsl inc add mov stos add xor lahf add test or lock out add xchg (bad) aas sub pop dec sub insl mov push cwtl jecxz pop ret roll inc lret xor pop push scas cs pop mov mov enter jae adc mov mov bnd mov and adc outsl xchg xor push inc or out cmpsb (bad) test stos (bad) jge dec jo aam movsb dec or inc fistpl sub es iret jne sbb orb push (bad) les enter xchg dec addl pop pop sahf fistpl stos mov test pop mov mov data16 out pop subb push mov out ds in bound (bad) jmp call adc je dec jns add cld (bad) jnp xchg daa out jge sub adc cltd pop pop (bad) jno xor sub sub dec push inc mov add out outsl mov int3 rcll xchg mov das and inc mov mov andl pusha popa daa or fbld loope pop cmp das dec inc lahf cltd cmp mov popa mov imul inc daa jecxz pop lods or pop gs pop ja lahf adc or or xor pop incl test dec jno arpl dec mov dec pop sub dec mov imul xor lcall stos add mov push lcall adc add testb in std addr16 cmc mov jmp jns or ja jbe mov nop xor call mov inc das push rcll les add push cmp call mov adc ds cwtl mov imul rolb add (bad) mov pusha mov add insw cmp sbb or fildll jae mov jno ja (bad) or sub pop test xchg cmp adc lods jle pop cmp dec or push xor or add stos fs pop stos mov push pusha cmc int3 (bad) xor xlat mov fidivl and push or adc test add hlt xor ror xlat add push aas add (bad) jae es mov insb dec and lret push push popf or add clc inc pop jbe add xor shl push or add pop sub sub ljmp roll cmp dec xor stc and shrl sub inc xor push rorb mov mov sub fstpl sub fwait add out (bad) jbe dec sbb mov mov stc pop movsl jno add sub out push jnp push popf je es jg and pop test shll movsl push xchg lock dec pop lahf jno inc inc test inc fistpll mov push (bad) out and cmp loope es cmp add adc jg fisttpll push cmp cld push sub fnstsw dec pop xchg jb adc push push dec mov fild pop pop sub popa mov popa push push pop subl jecxz shlb jg add (bad) sti pop lock or push fcomi jge mov rcrb lock repz call cs nop outsb lds mov jb ret ret add lods jmp add sbb add jle jp dec aam add movsb jg xor sbb jle incl inc call jmp pop sub add hlt sti (bad) jle int pushf pop pusha push xchg sysenter sub pop mov or insl or push repnz pusha clc fistpll mov enter add push add push fs adc loope adc and (bad) mov ficomp sub outsb lock and push add jmp add inc mov lock dec call adc pop add xor orl xchg push add push pop mov xchg inc mov pop inc sbb mov lds xchg sub das sub cmp iret stos jge add sbb or adc mov cmc imul jo cmp pop ljmp pop jg add adcb mov not mov or scas pop sub add in sub cwtl add push roll push mov jo adc ljmp or sbb or punpcklbw jle cld mov repnz and jmp int3 (bad) cmp and or push and pop les push add insb dec (bad) in test (bad) sbb cmp jns xlat mov adc mov cmc add ljmp mov adc aad pop stos push sub inc stos sbb push or pop jp add xor insb out or push sbb or pop xchg and sbb pop mov out xor out rorb pop pop sub xor xor or pop test xchg (bad) mov sub test xor test add push daa data16 or adc pushf mov jne jb dec and cmp repz and jbe add add pop test inc jg push xor sub int3 or push add cmpsl adc mov xlat outsb dec push jb mov jp push daa pop push fstl (bad) pop ficoml (bad) inc gs mov test fucomi adc pop mov sub stc adc sbb add movsl outsl jle gs mov into ret fwait mov mov scas pop pop je and pop std clc aas std aas sub mov mov fdivrl nop stos aas add addr16 jg icebp xor popa ret sub out insl pop push inc nop push iret adc in sub push dec aad hlt bound mov pop jnp sub and xor xor jns mov jl lcall (bad) out add dec and stc aas jmp loope lret pop xorb (bad) or jo jge add mov add jmp add xor test lock mov mov pop out insb jecxz les fidivl pop divl int3 push leave xor cmp push sub push mov mov fldt int3 je loope stos cs pop xor add test pop pop fcoms aas adc inc xchg push xor insl pop sub dec popf sub add arpl dec ljmp or xor xor dec sti dec xchg out sub aam push out (bad) mov cltd add jb xor jae jle rclb fimull div sub dec call push ret add in pop mov ret (bad) test push add add add inc push pop ret iret (bad) cmp push push dec push adc pop pop pop pop aam pop pop ficomp or icebp insl adc lock pop fs inc add pusha push loop and or xchg add push push dec xor add xchg ja negb int3 bound inc sti inc les out je int cld lock jbe daa addr16 ss add inc inc xchg and jns,pt and sbb push es imul or sub mov push int3 cmp mov inc add in cmc add (bad) sub faddl iret inc push mov push loop add out cmp rol add popf out pop or ret jb aas ficoml pushf out test inc in orl push add sbb sub and cmc pop in inc and pop (bad) jle aas xor or ja push inc lahf into sbbl adc sub out jno aam pop sub roll data16 addr16 and pop ret dec mov (bad) add loop or cld and in adc mov jp out test addr16 iret or cwtl leave aaa xchg adc imul call push nop sub lret (bad) jge outsb mov xor ja imul ljmp mov add mov out pop dec adc sub bound pop jmp mov bnd sub cmc insb cld lock jg xchg nop mov jae pop sbb adc add pop cwtl dec xchg adc int3 incb mov js imul shlb add push mov pop cli inc call outsl push xor in sbb pop ret popa add push rorl lret xorl inc mov inc mov orl jmp sub push push pop imulb push push sub lcall sar push push je jmp push nop xorb pop popa pop dec mov repnz push mov mov pop mov push pop sbb dec ds or push jne (bad) or rol icebp jl sub pop lods leave add add sub adc bound and and fnclex push inc (bad) adc out dec pop mov pop imul pop (bad) mov sub and mov pusha dec neg xorb cli or mov xor dec pop sbb das xor imul dec daa dec lahf jg dec in mov add and push fs js daa test pop clc aam dec jmp into mov push push mov lods ljmp pop push xchg cmc sbb lahf bound aam jae push sbb daa cmp push add in das data16 mov pop jne sub sub add or cmc ja cld dec pop xlat in xor push lea and pop pop je loope inc es pop hlt addl push pop xchg or dec imul (bad) cmc push pop ficomp xchg mov fst sbb mov (bad) mov dec sbb push adc out outsb jmp movsl dec cmp mov pusha cmp xchg and sub jg mov mov scas add xor cmp test xchg movsb mov adc dec push out mov les in (bad) std add push in in push jne jge (bad) fcomi jl push add lds mov adc and imul (bad) mov loopne pop cmp movsl call and xchg mov inc xor les shrb mov adc xchg jle pminsw pop inc add jno adc cwtl mov cmp adc icebp jg insb jle jmp ficoml (bad) inc in fildll jns and and mov insl adc test and add scas insb jmp cmc push popf inc test mov or sti pop xchg push enter out and faddl xor ss mov add jg hlt comiss and sti pop ds das add mov fbstp call push mov (bad) pop jg sub add adc repnz arpl jno and xchg das inc push cmp mov cmpsb movswl and pop sub cmpsl xor int3 and mov mov jo icebp loop gs push jg in xchg dec fdivp add mov in ljmp jge push inc stos cli lcall shrb xor incl add sub or fist aam mov rcr xchg adc pop add add lahf out jae or cwtl fstps shlb inc cmpsl and not loop and or clc notb in mov adc jno outsl pop add (bad) and aas ja or (bad) xlat xlat and sbb or adc xor cmp sub cmp stos movsl dec ror inc or adc fxch xor das pop cwtl ret test scas ja mov inc leave lcall mov mov rcr (bad) mov out lds call shlb mov int3 mov add sbb xchg ffreep pop add push hlt mov lret push jl ljmp sub fcoms test inc movsl jbe imul mov and xchg sbb clc mov sbb (bad) or cld and roll xor push sub inc sub add je pop pop sub cmp lret lret in aaa cli fwait stc mov push pop test add loop jmp (bad) mov push xchg das add inc lea lret fisub and (bad) divb sbb pop cltd ljmp dec sbb mov fistpll mov fild pop lcall push add sub mov jg push insb xlat add fsub sti lret shrl sahf insl pop xorb lcall aad push subl pop push push pop push pop mov arpl dec cs movsl fsubr push lds xchg icebp jle or les pop in jecxz or (bad) jno dec lock mov ret addr16 or mov pop push add cmpsb insl xchg sbb inc addr16 push mov mov jmp leave sbb jmp std shll jmp or push iret stc int fldcw or push insl xchg aaa hlt add clc cmp pop std cmp sub rolb es jle jmp xor cwtl adc pop push aad ss loop lods imul repnz push jnp imul and faddl ficom imul jo xchg inc pop mov mov inc adc adc xor cmp dec (bad) pop add divl ret cmp or jns inc xchg pop xlat mov xchg scas lock mov jp mov xchg or hlt sbb add lcall or inc mov pop and enter xchg xchg pop mov mov sbb (bad) iret in adc cmpsb jl decb sub push sub push push mov add mov jno dec sbb lock pop scas or mov cmp fisttp dec or repnz and pop les jae add (bad) aaa mov jno test es sbb pop dec in mov add jnp jg inc std cmc push add inc (bad) in jg inc insl or test push nop mov inc cmpsb pop aas add mov shrb push scas inc sub xor movsl ds adc out push stc repz sbb into lret inc mov cs push push pushf (bad) std (bad) ds out xchg fnstcw mov mov inc (bad) jmp ret sub adc cmp (bad) out div sub inc or mov sub cmp sub sti mov fwait jbe or or adc xchg out push jbe,pt adc cmp bnd pop inc xor std push cmc cmp xor fisttp sbb into dec lds mov pop idivb adc push out xchg cld cmp sub sub jbe shrb push repz mov pop (bad) divl push push clc test sar jge (bad) pop mov or outsb push ret outsl pusha fsts push dec and add in outsl cwtl imul lods lret push or jge sub dec jnp jg push or pop sub pusha clc add pop rol xor cmc pop dec dec inc adc mov pop inc push pop push push ja jnp jns add xor das xchg shr cmp cwtl mov dec loop pop test or pop push dec addr16 cmp enter ret or inc in add bound mov or (bad) in mov push pop jle push dec lahf cs cmc adc mov and jl,pt rorb aaa cld jae cld lds fwait stos aad mov das sub (bad) mov lock xchg pop pop jnp pop mull adc (bad) mov push clc xchg insl xor outsb push dec mov push jbe xchg mov xor notb add adc fucomp aam mov add pusha in jno mov mov movl outsl and cmc inc out pop jg lods and stos add dec and data16 sbb add (bad) jle (bad) cmp popf or cmc inc pop pop jns dec shr test addr16 cld (bad) mov adc sahf mov or ds sarl cmp push arpl jmp lea mov jle out and and int cmp imul cmc stos sub maskmovq imull push in jl pop mov push add mov ficomp sbb add lahf addr16 add (bad) mov fstl mov xlat je mov mov cvtps2pi out sbb or inc out dec movsl mov fst hlt loope cmpsl iret test jmp (bad) pop xchg shrl xchg (bad) outsl repz lods fs lods xchg (bad) (bad) mov dec jno jp xchg cmp push popf test sub popa fistpl cmp negb stc xor fdivp (bad) push add in jae push xlat mov adc jbe push sar or mov dec add cmp mov pop nop fadds fnstenv enter adc adc or stc shll inc adc mov push cltd jae xchg lods dec mov jmp adc push daa movsl push rol pop pop cld inc and sub dec xchg pop rol or add stos neg aam add xor pop add sub (bad) jge stos mov fnstenv add (bad) shrl inc sub push add (bad) or ret popa pop push pushf mov or dec out jl sahf (bad) cld xor sbb jmpw insl sub sbb adc dec sbb invd repnz (bad) push cmp push ret add loopne in mov lods cmp dec pop push or test jns lods (bad) (bad) or scas jmp xchg xchg cmpsl and outsb aam ljmp mov cltd loope mov jno jmp (bad) jl jecxz enter dec jg push push jne sub mov sbb push aam enter in cli push mov mov in sub cmp stos inc fs push mov push imul paddb ret int jno xchg push mov pop pop out jge jmp inc lahf outsl cmp xchg or sbb mov cs pop mov push xor icebp push cmp pusha mov jle lret shrl or hlt lds arpl jo std lock mov sbb lahf mov shlb cmp fisttpll jle fildll lahf and jmp gs rclb jp xor hlt adcl mov and insb lcall std inc pop cld lfs sbb add add dec lahf out jb ss push testb pop add and jno pop sbb popa nop out push es and push sub xlat (bad) mov add call mov jb aas mov int3 push scas nop sahf test shl dec cmp stos jl push stc hlt jg stc in lahf xchg cld pusha mov ret jnp inc pushl xor fdivrs inc jo bound repz loopne mov push stos add jp (bad) pop enter daa or push nop jmp add jno rcrb lret pushf add pop aad pop fcomp add and pop push je pusha mov inc push (bad) push jae or and push push or ret sbb jns cltd movsb or adc ja xor push add sarl (bad) icebp add clc mov add dec add imul push or add mov or pusha call nop mov (bad) mov add or or js mov mov in or sub push push gs add fstpt xor add test ret ljmp cmpsb push add (bad) mov cmp repz repnz dec lcall xor dec fcmovbe mov loopne (bad) mov ljmp repnz pop stc icebp movsl push mov das inc (bad) dec sub aam pop dec xor and push sbb (bad) xor jne sub scas hlt dec sti (bad) aaa imulb pusha push jb int jbe nop aad or pop lret pop push lret push inc in dec jmp cltd repz sub mov sbb xchg push xor adc pop leave and mov movb sub mov (bad) dec or pop pop push ret nop jb adc ss insb pop not add adc cmc jns outsb out cmpb add push inc jmp test inc xchg clc xchg dec adc mov sub mov cld mov pop loopne les xor sti xor mov jne dec aas loopne pop in std pop cs scas cld cltd cmpl dec lock add sub sub pop imul mov push ret cmpsb jnp push mov mov add jae xlat sub mov push xchg inc adc jo sarl push jno pop stc pop mov jnp and add pop mov ret adc inc sahf orl sbb mov pop dec test aad rcr mov push jp into fsubs adc test fstpt js sti inc or or pop data16 mov iret adc xchg scas push stc push pop incl (bad) mov adc inc addb mov negl loope test jge lea xchg (bad) add ret inc fidivrl fildll out inc mov lock pop hlt lods mov (bad) xchg xor jmp add jl mov inc in in cli lret sub push loope push out and push cmc cli gs xor add mov xchg or js mov pop adc jle lcall andb mov adc ret popa push jl or mov push (bad) ja cmc pop (bad) mov pop insb xchg mov push push push jbe loopne in mov loope mov int3 add jmp ljmp fnstsw lock mov shll test aas jne enter pushl mov jbe jp pop and xchg cmp shl out or hlt jo into cwtl lcall inc hlt pop mov ret jae neg add std mov gs and mov pushf xchg jg loop (bad) adc push adcb leave cmc sbb repnz jne sub scas cmp (bad) rcrl xchg cmpsb mov sarb mov jb xchg mov pop pop xchg lahf xchg das push mov pop mov addl ljmp cltd outsl sbb shll repnz jle add out jg fisub or xchg ret bound pop mov pop xchg jne test stc xor int3 jmp aam sbb ljmp jge dec jbe inc or lahf cmp icebp into mov pusha loopne sub push ja sbb addr16 pop shr popa cmp inc jge or push push push imul in sub mov divl in or test mov push lock or push jmp inc dec into cmpsl or (bad) or dec jle or int sub cmc or idivl sub in pop test add roll dec ljmp or pop xchg clc leave mov out jle sub aas int3 push push jns fstl push and sub inc mov ret incb push test inc int in jbe jl xor aas inc cmp call jbe ret cli pop neg inc stos xor sbb cli inc pop xor out push (bad) cmc or pop pop aad out cmpsl jne push pusha inc add lahf arpl iret add or fstpl aaa and xchg sub fdivrl inc lahf push sub or cmp int cs stc sahf fisubrl sbb (bad) or inc pop loopne xlat push push pop mov mov mov and lds push lods insl jg or shrl orb ss lea fstpl jl add out inc push push mov jg dec or imul push std and or add pop jmp mov mov (bad) sub inc push pop pop or test or mov xchg cmpsl lcall not push fs (bad) lahf ret or mov push and xor xchg xlat adc das int lret out leave xchg inc xchg cmp jg data16 sti (bad) jecxz xchg jno pop insl push test test cmp jg and loopne push and rcr pop mulb pop rcrl rcrb sub notl sbbb mov xor mov push enter dec jno cmc or pop or fs mov sti dec orl jmp movsb aad adc jbe mov adc bound mov inc mov pop pop xchg je dec lret xchg inc xor and xor mov mov push adcb mov popf or (bad) jae push pop mov notl push push pop out pop sarb sarl jg or xor sub adc sub pop push jae dec or sub dec xor das orl insl xchg ret jp add pop gs out jge sub mov icebp insl dec shl inc icebp jp pop push or dec pop daa lock loopne jbe mov cwtl jmp ljmp (bad) popf and mov ret or sahf xor cld adc inc mov sub out sub add mov je mov jle jo cwtl pop or (bad) rorl push or cmp dec mov idivb push xchg sub push daa dec jbe or adc sub or push jb push or inc push loop ljmp inc (bad) mov or dec andb into mov inc bound dec mov adc (bad) sti lret sub push sahf je mov (bad) xchg inc mov test ja sti je shrl mov daa (bad) pusha cmp jg pop push ljmp rclb cmpsb jp dec loop out fiaddl pushf aad jne popa inc inc lahf adc dec mov jo cmp sub mov pop push xchg add cltd fnstsw adc add sub mov mov mov popf adc sti loopne and mov sub clc xchg arpl add mov or pop fsub mov cld sarb dec fsubrl repnz dec and fst rorb and in lock pop (bad) pop gs or cmp jb addl dec lods adc mulb cmc mov cmp mov add hlt popf jmp xchg (bad) ja lock int3 sbb and ss pop imul sbb sarl ret (bad) jbe lods adc push (bad) fstpl xchg or jle insl or scas das fidivl into shll test ficomp enter or pop adc inc jle pusha dec lret or pop push scas mov in aaa dec jne stos dec cld xor iret and xor out (bad) push nop (bad) mov aaa jecxz jae scas and repz adc sti pop xor sbb or mov push pop inc pop inc mov fnstcw adc or scas nop jmp add xchg sti stos fcomip pop repz or jno cmp push fbld jnp push and cli lahf loope ret xchg dec loop das jg or cmc daa std aas dec pop leave or rcrl icebp add ds adc or das pop pusha lret test divl inc dec (bad) mov sarb push and cli xor push pop popa les leave inc add rcrb dec gs mov add and inc aaa inc xor push (bad) jns sub add imul jnp popf push xlat push mov jo or lcall jle,pn sub mov add jmp pop lcall or mov lret and (bad) adc sbb cli (bad) pop je adc cmp add add outsl mov add test adc addr16 mov push sahf cmp out loopne clc in inc mov xlat xor pop dec or jb cmp xchg leave mov hlt jns mov aas pop push fmul push je (bad) jbe pop ror movsl push mov jg add jl test outsb movsb call dec cwtl add in sar pop dec inc push xchg outsl xor add cmp pop jne subl scas unpckhps movsb dec push sub movsl add (bad) icebp imull mov pop stos data16 and and pop dec push cmpsl stos sahf mov aam pop int3 out mov mov mov push mov jecxz lahf xor ret cwtl repnz sbbl cmp or icebp outsb add scas pusha mov ret sub add jmp (bad) mov push mov jg (bad) sbb pusha out les aas inc insb out repz cld push daa sbb add addr16 sbb sub inc jp or testl dec ds pusha ja fcompl push pop sub cmpsb std jg ljmp dec mov sbb aam daa jo mov out mov std or int3 cmp cmp enter cmp inc add or aas cli sbb xor sub rcll add jg ja cmpsl jbe jg fs stos lahf lea out and nop stc je or int3 or sub push push in movsl adc cmc popa cltd cmp push addr16 dec push xchg pop xchg mov sbbb lahf cmpsl sti test daa mov inc fistpll pop xchg clc sbb (bad) lock mov cld mov in cli dec rclb testl (bad) cmpsb xor push add push jge sub mov jmp push test push mov imul jecxz pop scas dec adc stos jge or out cmpsl xchg sub icebp and test push (bad) (bad) nop leave and lds sti call mov jle std fmuls inc and arpl insl cmp mov cmp jne mov (bad) xchg test mov bnd mov xchg (bad) cmc notl repz push mov lcall outsl orb or pop mov push sub push pop out mov inc aam es and add mov test fcompl xchg mov fcomip dec mov (bad) movb or mov psubq dec cmc pop call push rcrb mov aas or push fldcw aad cltd nop sub xor mov aas push push pop pop inc xchg cld iret add stc pop addr16 stos ja repz rcrl sub mov add push jge outsb xor test or pop orb jnp je xor sbb in cli jno pusha push push push cmp sub aaa adc pop ror (bad) adc loopne mov loope mov out add loopne mov aas shr push push mov or sbb aam (bad) jg cmpb jae scas pop add or pop lcall lods cmc xchg call mov (bad) bound popa jbe xor inc cmp cmc stc adc pop add lret dec push roll mov pop push enter push pop add mov pop in arpl cmp pushf cmp add jp jbe andps push orl or imull sbb add cmpsl sub icebp pop iret idivb xchg push lds outsl int3 push push pop pop sub in mov dec fidivrl lahf mov out pop mov hlt add xchg or jnp pop or into scas cmp lret cmc or add xcrypt-ofb cmpsl jge,pn cmp mov jnp lret pop push cld pop (bad) je jbe ss add popf mov xor cmp push mov pop icebp daa test push aam loope les jmp add xor sti jg pusha inc or cmp xor xchg pop mov adc cli das int3 adc fldl adc sub push and pop leave or int mov mov aad jp sub xor inc mov push xlat movsb cld xor cli int test xchg idiv and lods pop in pop shrb push lahf nop sbb pop pop (bad) sub insl xchg outsl pop xor nop cs das dec mov add mov jg push push push push aam add ds pusha and jl adc push pop vmovhps mov fdivl pop jge add divl shl pop dec call ret dec aas repnz pop dec cld insb (bad) rcrb mov mov push jbe mov xor mov push add jo add scas outsb sub mov call mov faddl cmc or repz and ljmp sub cli jecxz cmpb mov inc or or (bad) aad cmp gs stc push jle add sub test pop pop pop cltd call lods inc fldenv dec push sbb mulb (bad) dec leave (bad) xor push ja pusha pop mov outsb stc es leave pop mov sbb jb mov out sbb jns push mov (bad) (bad) ja jbe mov mov pusha add pop testl pop scas cli xor add cltd mov mov lods xor jecxz movsb out mov fsubl lods add lds mov inc repnz loope jns repnz mov mov add jge add push clc fiaddl mov lods call or push inc cmp sbb lcall inc addr16 pop out inc ljmp add iret (bad) or lea jmp pop mov fidiv push cvtdq2ps (bad) movsl sub pop (bad) in xor movsl stos cmp sub les or fmuls aam or inc jbe add outsl test or lret and daa lock sbb fistp add jo fsubrs xchg mov lret xor (bad) mov je pop cmpl xorb scas mov pop mov fistpl cmc sub (bad) or mov adc jmp fsubrl lods pop loopne xchg push cs addr16 out hlt pop push pop xor pop add cli (bad) (bad) mov pop sub fucomi add scas adc lcall imul cmp mov fdivl sub inc loope insl mov push xor jae movsl popf out pop push mov test jmp push xchg ds xchg or xchg mov add inc (bad) add xor push mov add sub roll add sahf mov sub adc out dec and dec inc xchg (bad) lods jmp dec xor dec divl daa push stc xchg fs jge std movsl mov bound in test cmpsl je adc fnstenv idivl mov add (bad) sbb and scas xchg and inc push lods mov or cmp jge roll pop lret adc xor mov scas cs dec leave popa imul mov fstp out xor insb sbb add sbb add mov loopne add and add push pop es inc cmp xchg das or cmp jo sbb dec xor loopne ljmp fldcw pusha xchg adc arpl mov xchg add fstpl fldl push mov mov gs out popa adc lahf xchg sub add lret mov push xchg iret out push out cld fdivs das or (bad) (bad) mov mov adc out push xchg rcll testl test (bad) outsl add jl aam test rolb sub pop std nop fwait sub push xchg mov in test iret dec push mov lret jge in cmp pop cld in into or out jl (bad) (bad) cmp (bad) notl jae rolb xor imull (bad) lock sbb (bad) aad jl (bad) push jnp or pop sub sub mov add outsb sbb cmp or mov sub rcll xorl cmp add mov das mov dec test mov imul fadd or jno jnp ljmp sub or mov mov adc test push dec add fmull scas aam or pop sarb clc repz ja cmc add mov out pop inc (bad) sbb (bad) mov mov xchg sub sbb fsub add (bad) sti jp mov jns fwait cmc sub jmp repnz adc xor xor pop dec push mov xor adc (bad) cmp test sub add jge clc icebp cmpsb cld add pop mov dec out (bad) ficomp ljmp add adc xchg jg pop jbe pop cld adc loope mov ljmp push test sub push (bad) jge scas push mov insb (bad) pop jp xor bound dec push and (bad) mov stc into stc in popa push pop pop inc out xchg (bad) mov add xchg je pop push (bad) xchg sti xor adc mov cmp adc outsl mov pushf mov insb adc dec (bad) (bad) or lahf cli in pop ljmp jae push dec mov call push jecxz aad jecxz cmp xor jnp push and push dec (bad) not or subl sbb inc outsl pop bound insb in outsb push mov or clc mov cwtl add sub fwait sub or sysret xacquire sbb push add add xor pop xchg cmp pop xorb and mov dec add pop and adc mov and aaa test shlb or jmp aaa pop xchg add aaa ja dec xchg neg out lret call fucomi mov push leave fdivl adc pop xor sub sbb das int dec dec lods cmp cld in (bad) sub movl mov fisttp mov lock lret jb dec cmp add mov popa jmp jns sti jae mov jns (bad) (bad) push hlt pop and sti inc inc mov dec xchg mov loope cmp or push or das mov sub sub dec ja shlb fnsave xor aas add pop (bad) and jnp out pop pop (bad) lret mov mov test pop or (bad) int3 and pop push les jg leave dec cmp sbb dec lret push dec arpl call mov scas and jo mov mov adc or outsl (bad) (bad) xlat and or lods (bad) pop int3 and push sub cmpsl cli mov test jmp push rcr sub push add jl pushf mov jge mov rorb pop jg mov push cld lock stc xor sub ljmp nop and in sbb jns into mov jb sbb pop pop scas stc jle push cmp loop inc mov add push mov push in or (bad) jle (bad) inc push xchg push pop inc sbbb mov adc leave (bad) sub add mov rcll pop dec pop mov out lods arpl fcoms es outsb dec daa (bad) stos out mov outsl mov aad incl add xor addl xor mov cli mov xchg scas cmp das decl jo ret shll data16 jmp mov in mov sub imul xor pop fimul out push and add mov iret fwait pop jmp mov je nop push cli cs mov punpcklwd and fst int3 pop stos mov outsb stc bound sub iret dec movsb fdivrp adc dec sub mov arpl pop scas cmp mov add adc (bad) mov addl push das out sahf mov cmp ret pop add or js mov adc shr cmp or sbb jp movsb inc shr jmp jg mov ss mov loop movsb stos nop jg mov xor inc or add jb roll or mov jg cs or pop jl add inc test and pop adc sbb enter xor int cwtl sub movsl push and (bad) fadds pop push pop push jmp loop mov jno out (bad) inc ret jl inc jmp mov fstl cmc mov push imul out cmc pop add aam cmp inc dec lahf fbstp fwait sahf jl cmpsl sub or lea test jecxz mov ror (bad) jg addr16 fcoms cmpsb or fisubrl adc mov insl mov pop sub dec std out iret push shrb divb pop (bad) jne scas sbb mov xor xchg in ud2 pop xor sti in add sub inc xlat push lock dec mov dec ss rolb out ss divl lret pop xchg incl xchg add nop in sarb or adc jno inc mov arpl mov out daa push dec sbb xchg or mov jl mov jg lds scas inc (bad) int3 pop cld outsb pop xchg fild xor push leave and jle mov cli pop addr16 xchg mov mov cld lcall sub nop xor and shlb data16 jb roll clc cmp popa add cmpsb and sbb cmp imul mov cmp scas mov mov sbb dec mov mov into (bad) stos das mov xor xor push xchg pop outsl add mov cwtl mov adc fwait cld das adc add gs cmc cmp pop sbb imul mov and push pushf push mov cmp aaa mov dec jmp popa jg dec lock test mov jecxz std mov push lahf gs imul jge into lea int3 sbb insb mov mov xchg nop xchg and adc push arpl mov mov or mov push push fcompl imul je mov mov sahf aam fldcw mov mov mov jecxz es out les sbb (bad) xor adc popa add adc jp pop sub mov push adc or pop sub jno fs mov out add xor jnp cmp pop iret dec aad jbe out in fwait push lock xchg divb jg cmpsl fisttp push jp pop inc pop (bad) test pop icebp mov push and loope negl movsl add fstp ds mov call loope jle jno push pop (bad) xchg mov out mov stos fstl dec sub xchg pop das push repnz pop out out (bad) idivl (bad) je sub dec or jae add clc xor sbb into sahf pop scas jno (bad) adc or push add push push test in jg sbb ds xchg js mov das bound sub (bad) in jle mov aas inc sbb (bad) pop xorl push inc mov dec stc outsl xchg sub pop mov or jne addr16 xchg push cld xchg or pop add jle,pn push mov leave in cmpsl rcll inc aam sti aas xchg sub pop pop jbe nop add add inc dec adc adc jle mov jbe jmp aad test les adc stos dec adc mov dec repz mov adc sub pop pushl jne add pop xchg pop lret scas nop ds or mov add mov outsb add sub or cmp adc jg sti mov mov sbb dec fwait cwtl adc pop jg out and (bad) xor sub or xchg sbb push faddl mov repz adc jb in addl lret sbb mov mov in sysret into dec outsb jmp inc mov mulb jno loopne add je xchg addb test xchg test pop push dec lds mov nop nop fisub (bad) pushf jnp adc leave mov sbb shr add jbe data16 lds add (bad) lahf sahf idiv add push push push inc div adc jle mov inc sbbl (bad) xchg push popa pop mov sbbb mov jl or into sbb sbb mov test pop imul inc outsl movl xchg jae xor xchg push or lret cwtl cmpsl (bad) rcrb je loope arpl adc lea test jl ficompl adc daa mov rcrl or push add std pop dec add (bad) loopne push and sahf bound lds aam mov movsb les iret jnp dec or cmc adc add mov and shrb push clc jb js add aad sbb cmp jbe mov lcall mov xlat imul sbb push icebp pop divb xchg ja or (bad) jg cmp or cmp test lea xor je mov inc adc add call or add sbb or xchg pop out je mov add push mov sub jmp ret mov mov (bad) jp push ret pusha out adc in mov mov bound flds pop xchg inc repz pop movsb xorb push mov loopne push push pop ret repz fdivs jecxz xchg xchg dec ja fadd mov xor jg,pn jnp ss lods sbb pop rol add ret lea lcall nop jle outsb mov cmc push addr16 ljmp jbe push cmc (bad) push push push pop lock aas (bad) jns mov into imulb push xchg ret pop xchg add push jnp jg or call mov push pusha add int and (bad) cmpsb jns push arpl jbe aad push addr16 cmc sarb pop push sub inc xor mov jmp repnz adc sti outsb or insl jge sbb xor inc pop outsb subl jmp jo aaa sub add jp incl cli or jns pusha test or dec pop (bad) (bad) out sbb adc add or add sbb dec sub xor dec xchg imul mov cmp pop or pop jae xchg iret add mov sahf daa push or leave pop push outsl cmp push mov imul dec pop ret rorb cwtl cs mov sub dec or or adc push pusha dec mov in or jmp mov pop pop dec add mov std jne mov ret mov adc lcall adc rcrl sub popa insl rolb inc cmp js xchg fistl add push push cld cmp loop dec pop add daa pop mov fadds sar addr16 stos mov cmp in aad add lcall push mov int (bad) sbb inc mov mov pop jnp adc push gs dec ficomp gs sarb in push aas loopne cmp roll aad std jle add xchg sbb fisttp out adc imul cli and fadd rclb (bad) jne mov jg jno xlat or push imul repnz (bad) repnz js lods cmp andb lds lret into (bad) cmpb rorb jnp jmp jo mov add movsl (bad) xchg scas mov decb les xchg mov and cmp xchg jmp outsl mov sub adc pop push fstpt sbb sub dec out dec repz addr16 cs mov das fsubrs lods repz pop movsb cltd pop jbe fs jp cmc mov sub push inc or mov pop test repnz jnp fdivrl sub rolb lods mov or lret scas pop adc (bad) cmc push js or (bad) jge scas xchg popa sbb sbb mov aas pushl (bad) int mov push pop loop add push jns pop aas add mov repnz ljmp jecxz xchg jmp adc mov sub pop xchg test gs inc pop jge cld (bad) push mov into movhlps jne (bad) test jae out fwait xor xor scas (bad) je orl push fldl sbb or and pop push mov xor add dec lods mov push push addr16 inc jmp xchg mov pop adc pop mov xor sti adc sub lds jb inc add pushf cmpsb outsb bound add dec jo gs fisttpl sub dec fmuls sbb loopne mov ja icebp in call das rorl push loop (bad) lea xchg dec fidiv daa aaa loope dec scas loope jns insl fdiv test lock push fisubr daa loope ret or push nop jo cmp ret sub xor add std ds cltd mov sub add outsl add xor or out inc aas cli jge ljmp data16 adc push maskmovq (bad) mov repnz das pop pop mov mov repz sub xor call aad sbb jns loop test out push jge int3 cld aas dec jns cwtl push adc jbe pop jnp or aas (bad) or dec scas subl add mov mov or scas in jo push popf sbb pop pop test aaa pop xlat sbb dec push repz mov mov dec push cmp stos das out imul inc inc add jg cmp dec pop add repz lea loope add push xorl jmp movsl loope sub pop inc les xchg or inc sar imul rcll mov xchg add xor fcom icebp pop das adc lods and dec mov ljmp xchg sbb fwait or in scas cs sub movsb or sbb push sub pop pop ret or stos sub push jnp push pop in aaa out sub push jmp xor pop adc xchg inc les push nop push jne daa push dec or mov ficoml add push cmp (bad) cmp jg dec pusha dec test add fucomp push rorl mov ret pusha (bad) shlb clc mov rcrl add push jns add xchg stos xor sub inc pushl hlt xor mov mov les mov xchg imul lock add js sub mov jg cmp sbb rolb adc lret stos add pusha push adc add cld inc cwtl sub pop dec push pop mov cmp add mov adc and jge jae jnp pop mov pop add xchg popf dec lock call pop in aaa jle scas dec mov adc xchg jae subl add or mov inc loopne cld fldl jmp xor pop or (bad) jp clc xlat push into sbb pop and cmp enter xchg pop sub pop pop fbld fs mov ljmp addr16 pusha into mov outsl repz stos cmp (bad) mov xchg push inc xor je lods push and xchg xor ljmp jns mov inc xchg fstpt cli gs (bad) out loop mov (bad) (bad) push jae and cmp inc adcl xor push std jb add or xor adcl fs repz xchg cmpsb or scas and jecxz pop push pop adc loope cmc sbb scas rorl stos add push and jle xlat stc movl sub jae jbe aas sub mov push out rcrb or add loopne add (bad) movb xor inc in out aam xor loope xor jbe jnp (bad) aad popf push out or jg sub xchg sub repnz xor xor pusha (bad) lods movsl in sahf sub xchg pop dec jb or rorb data16 or mov mov xchg sbb xlat gs out popa push (bad) and test pop imulb sub cmpsb xor ficoml orl jmp sahf subl and fsubrl pop daa testb inc in adc pop test jns enter push dec mov adc adc bndldx add cwtl (bad) sti daa stos add mov fstps ljmp not push in add mov (bad) mov cmp clc out sbb push and adc mov jmp pop sub or pop out cmp or fistpll lds daa fnop (bad) daa pop mov cmp and add xlat lods dec pop pop leave add mov or cmp jg cmp popa dec dec imul or push pop nop dec repz stos ret aaa mov adc cmc pop loopne dec pop mov pushf je inc add cmp sub add push and or pop jo add jg leave ljmp sub and add dec jl add mov xchg adc sub jmp sbb jnp jne or sahf dec push scas add sbb xor mov negb dec xchg fs test push in movb or mov data16 mov js push adc pop dec push xlat push sti push lahf bound lods sub pop test pop lods hlt mov sub mov dec orl adc std cmp adc mov lods sbb sbb addr16 add outsb push dec outsb xchg jg sbb push sub or jnp test andb pushf cmp inc mov stos push mov sahf scas (bad) push mov xor icebp adc mov xchg cmp or xor (bad) ja aad mov es add jns jmp pop (bad) sbb pop aas xor push inc and jp vrcpss push sbb insb out cwtl cmp ja les and mov pop test pop pop (bad) jmp in stos jg (bad) add mov pop mov dec or ret nop cmp loopne xorl insl adc jo fidivl jp,pn inc jb mov insb add and push test outsb and add adc sbb ret pop pop or cli add lds rorb lods repz lock xchg pop xor pop dec pop sti in nop or jnp add adc repnz scas (bad) aaa push add popf pop loop push pop jecxz add or xchg sbb jg (bad) inc ss ficomp aam adc add call add xchg (bad) fs outsl loopne popf and pop and repnz out sub cmp (bad) outsl push inc out nop mov imul and jbe imul xor xchg sub jne fidiv mov sub ja dec fs adc jbe pop pop aaa mov sbb lret inc xor inc pop mov dec push xchg inc out add sub push js push mov sbbb fistpll mov add xor xchg push call adc sub jge sbb cld jnp inc add inc or fiaddl inc dec pop stos push mov fisttp in fstpl scas push out loopne pop inc jl dec jmp loope loope,pt lret divl fild jp cmp xchg xor jge xor lahf sahf add mov fsts js pop ffree (bad) mov out mov mov pop pop stc test sub xor xor je pop jno inc stos add add mov ljmp out aas adc test inc lock mov xor std add jne cs fild cli outsl jl data16 mov mov pop pop xchg sahf es mov inc jle add cld fucom cmc push mov add xor xchg mov fnstcw shrl and pop stos lret cmpsb inc dec mov stos in mov in xchg lea lcall movq ja fmulp ss out jbe mov pop std and jp movsb test push (bad) scas popa mov cmpsl mov pop insb jmp lret outsl jg stc aad (bad) or lds push fwait test out popf (bad) pusha loop xor or cmp add and daa pop pop bound (bad) mov jbe lds notb movsl js out mov dec jne jp add mov cli pop sub sub leave push cltd rclb cmpb mov dec dec scas pop adc outsb add dec add shrb add psllw push jae popa sbb call and repnz (bad) jg movsl dec add int push cs imul add lret shll mov sub test cmpsb dec push xor push jne std push imul xchg inc and (bad) mov cli sub jno adcl addr16 mov add sbbl rorl rorb push dec les jge test test or subl mov xor pop sub je pop mov inc (bad) pop inc or xor icebp cmp or adc ja and aad adc cwtl mov and mov test xchg mov cltd jle xchg push add jge mulb mov (bad) incl xchg mov call out add (bad) jmp scas dec fnop scas adc dec cmp (bad) ffree repnz ljmp xor imul push cmp adc loop and cmpl push icebp (bad) cmc xchg pop in push cmp aaa or or and (bad) les sub cmp push das jge cld in sub imul and (bad) jae setge flds push push pusha in mov test imull or pushf cmp mov andl pop rorb mov push or sbb ds or dec xchg je mov mov bound jnp push in (bad) sbb push pop or in or pop mov ljmp push mov daa aas mov jle pop (bad) pop sahf jne or mov sub cmc xchg lods xor movsl cmp dec int3 les jno sub aas lret repnz adcb insl mov jo (bad) (bad) repz sbb dec adcl or pop dec subb repnz jg mov hlt xor xchg inc push lahf sbb (bad) mov sbb xor xor add imul lds rorb nop (bad) xor nop sar pop mov js (bad) push stos negb shlb addr16 lea pop pop inc cld push aas test add push loopne dec fistp aam pop or sar mov jecxz,pt shr mov mov xchg movsb inc inc daa scas jnp push xchg shl inc mov lea stc pop dec inc or data16 sub cld push jae cmp loope das sub dec mov xor jecxz lcall cli pop fiaddl leave fidivl add js cmpsb add pop cmp or cld sub mov or push adc rorb xor sub mov xchg or in dec and pop shrb in sbb (bad) xlat addr16 pop cmp neg dec or push add sbb push pop jbe imul inc js push xchg out pop jg lret arpl sub out dec mov lcall lock adc stos loope inc and clc subl add add add sarl mov jns jge cmc negb add push and sub movb enter sbb inc adc scas fsts je inc xchg sub push push das ror add (bad) xchg jl mov add std push (bad) das cmp mov mov adc adc rolb sarl pop xor mov jno cli hlt push nop outsb negl nop lock adc push cltd jle test ret cmp mov ljmp or adc pushf cmp mov imul call push or mov pop inc inc popa sbb xor popf jno jb jne or rorl stos cltd dec and add cltd push push push jnp and or idivl jmp sub push shlb jmp mov xor int3 lahf dec jg pop xlat fldln2 cmp dec fprem1 movsl adc hlt jge pop pop leave push and (bad) idivl mov xor push into and jle dec test mov push sub inc mov int3 mov adc xchg addb inc fistl jle lret out jo xor hlt movsb jge rcrb add jp and mov lock xorl enter sub inc mov das add push sub cld mov mov mov out sbb out fs sbb sub cmp cld imul outsl pop std imul xor gs fsubl loopne test stos in fucomp push or lea ljmp ss sbb repnz cltd inc (bad) push loop pop lds mov sbb call inc xchg (bad) decb fdivrl pop push lcall je xchg jg push inc push fsubrl loop scas dec sub sbb fwait jg rorb mov mov pop not push imul push add leave push add out insb push mov pop neg pusha pop xor adc push stos ja mov movsb push popf hlt (bad) dec or loope cmp pop outsl mov add xor cmpsb daa cmp add jg xlat pop inc jno ret push aad ljmp stos xor sahf shrb rclb es and es push loop,pn sub xor popf ret xchg in jg cli das orb mov jl push scas dec mov lods daa mov stc std jae aad sbb pop clc jmp movsl loope add sbb std data16 scas xor je out rolb into (bad) or push and mov int3 repnz std sub jl adc clc mov or mulb pop cmp and mov jae mov inc (bad) icebp test fldcw fisub or popf pop cmp adc das aam adc (bad) xchg xor pop cmp addb xchg ret jp push adc xor push lret pop jmp cs sbb rol (bad) adc int or in dec push scas add inc jg or out push mov rorb dec jb test sub shll add xchg mov inc loope add dec push jp or dec push or pop lds add subl add push xor xchg jl cmp ficoml fs call iret cmp pop ret (bad) js enter dec inc add mov mov dec and sbb or enter aam std aas sub add lds or mov add loopne or lcall movsb jns adc sbb pop jbe or jns cli cmp in lds pop repz ljmp aas loopne (bad) cli jbe pushl (bad) popf and (bad) (bad) ds mov cmp addb imul popa lcall pushf xchg and jmp and cmp jnp push mov (bad) adc inc adc sti es or (bad) dec sbb and dec jbe and lods aaa add in or pop mov in push push jmp dec dec in (bad) nop not lcall sbb and sahf aam mov mov incl gs pop out jge sub pop (bad) push (bad) push loope js cmp jbe out dec icebp jp cwtl push cmp inc cmp sti sub divb lock pop int add (bad) ss movsb jp faddl les push xchg arpl sub jae and add sbb xor dec jne xchg ficomp iret sbb fdivrs add jbe dec dec sub push clc shll inc out pop mov test pop lds lret enter scas push xor inc inc shl inc stos pop ljmp das loop push xor scas rclb xchg dec out mov push mov jbe dec fcomps sub add lds xchg xor mulb in fildl jp dec xor loopne sbb add pop add pop mov ret dec stos sub pop or cmp stc or and add orps clc es mov je add adc rcrl bnd fwait add fadds dec pop idivb in addb or pop addl daa pusha or loopne jmp pop pop notl fs mov adc push mov cli xor scas add mov xchg enter add xor fwait push xchg dec xor push push outsb push arpl mov repz daa dec fbld sbb push jbe mov cmp jge ret outsl sbb icebp popa pop out ficomp adc std jge push mov xorb xlat add and stc xorl sub ret dec mov xchg push xor pop in jmp cmp and test push rcrb jae and or divb std scas movsb mov decb shrl stc cmp xchg and or mov cmp jg jge (bad) mov (bad) jp stos clc out push out inc jecxz in adc clc add push (bad) jns std dec jbe jmp lret push jb movsl sub fs sub in cs dec fldcw add lock jbe xchg xchg sahf xor test cmpsl ja cmp xor jmp pop scas and jge mov cli jge shr subb fimull sub pop inc sub cld fildl enter sub (bad) mov aad rcll sahf jbe mov int or dec sbb jmp lahf inc movsl leave ja mov pop mov rcrl outsb lea push pusha ja xor (bad) adc push and data16 ljmp or xor push dec movb sbb inc testl cs xchg lods push movsl shrb sbb push test add icebp pop pop xor das dec data16 inc mull test and mov in xchg in and sti test cmpsl and pusha (bad) push cmp push sahf imul pop push decb jbe call mov add pop xlat out and dec or jne pop mov and sub notl push mov sub pop outsl xchg inc adc ss (bad) js loope push jno outsl lret jmp imul rcrb inc sub add (bad) leave jns call cltd out outsl add scas out rcll add adc shlb adc dec inc movsb mov sbb dec inc push jg pop mov mov sbbl cmp jns ret xchg adc mov out jmp pop inc pop imul sahf pop mov push outsb pusha push cmp xor adc cmp cmp add and lock dec mov sarl xlat xor outsl das mov add push idivl push xchg fstps (bad) mov inc inc stc fdiv mov inc jp dec inc lahf fstpt sub push sub push push push cmpsl sbb or push ret stc add pop inc scas imul repz mov pusha mov cmp into jb xor mov into or leave mov add push nop out inc test cmp push dec mov dec imul mov xor sbb out imul jge icebp or pop fbld mov xchg fsubs cmpsb call adc cld jnp loopne add and icebp xchg or jg push loope add mov or xchg (bad) or cmpsb xchg mov jmp mov or fcomip jg pop or daa adc sub add cltd cli imul testb hlt jl push jecxz clc iret sub stc jae xchg cwtl sub popf test pushf push std jns pop clc push das and cmpsb xor pop ja aaa mov pushf and jb pop call push out rclb call push pop lahf pop cmp push out mov add adc call rcrb and xchg repnz add dec int3 inc in ds and or imull push cmc pusha jns pop neg push push pop xor (bad) movsl pop xchg and enter add stos add push rcrl xor aaa and (bad) dec rolb or inc add jle pop dec ret mov or cpuid push aad add inc jb in add fildll push inc fsubrl ljmp loopne hlt rorl ret int3 wrmsr (bad) sbb adc sub push in push mov dec shll into add mov ret sbb ss push in lods in (bad) lock jp icebp pop cmpsb add popf in xor mov sub push lock xchg ljmp sbbb sbb cwtl adc mov roll cmp mov jno sarb testl addr16 push cld and out lahf xor pop addr16 xchg repnz icebp push insb adc insl lods add mov ljmp mov ret fnstsw popa or test push je ficompl mov movsb xchg cwtl push jb and jo (bad) pop or (bad) xor jg rcr lret hlt imul nopl push sbb sti jle jb mov sub lret or xor adc pop je adc push mov daa xchg dec sub cli push cmp cli mov outsb repz push ret push fldl mov add push push pop lock das loope fldl2e cmp loop mov into or jae stos add lcall mov shrb test push (bad) mov dec iret aas loop xchg add or out xchg xor mov xchg pop xor sub adc stos ss cwtl (bad) xchg je push mov adc or jo lcall xchg cmpsb push popf shll mov inc jbe push jb add mov pop add add add pop loopne sub ss or cmp add sub inc add rclb in pop sub outsl call in pushf andl rolb xchg addr16 les pop cwtl and movb adc call ds inc imul fdivr jg dec or sbb fnsave sub ret dec idivb mov xor shrb inc pop mov inc and fs mov movsl push adc jnp shrb add es cmp nop dec mov pop subb test test cltd and popf in ljmp cmp ljmp cmp cmpsl aam jg dec sub hlt or cwtl out ja jnp mov cmc clc jge mov hlt pop gs mov or pop or sahf mov push test (bad) repnz push inc and movl (bad) (bad) movsl dec lods fsubs mov jbe xchg in mov inc sub movsb push add cwtl shrl dec popf stc aaa int sub leave mov add ret or jmp cli es enter or jl dec repz pop add or sbb pop fnstsw stc mov add or mov scas ds mov pop scas rclb dec jp popa cmpsb dec scas (bad) pusha or outsl (bad) dec mov or inc insb test subb or dec mov jecxz inc js push lea pop dec call decb mov or sti cltd fs aad insb mov (bad) cwtl ret pop das in mov fs (bad) (bad) sti insl insl notb jl daa xor add jo add mov fidivl scas cmp sbb xor jle scas cmpsl push add psrlw mov lods adc test into jae jo xchg push mov in or push fdivrl push in cmovg ja mov test cmp mov sbb std pop pop lods (bad) popf sbb leave dec add and lods call push imul movsl ds rcr inc mov divl fcoml push jnp jbe mul rolb sbb inc cmpsb fildll add jnp jle mov jae mov xor js inc mov test add stos or cmc xchg adc xchg ljmp int3 pop ds and loopne je or jecxz push aas ja pop shll or pop addb xor and mov outsb xchg (bad) int movsb dec stos push push xchg pop and (bad) xchg dec lret or sbb adc or pop scas and adc (bad) mov push push (bad) shrl loop repz sub in sub xchg mov mov push xchg mov lret mov pop jno (bad) jae push (bad) jns xor jne xor rclb pusha push push test cmp notl or dec add bnd pmulhw jae ds test and fsubrs sub leave btr call mov add ret cmp sub cmp jl mov pop dec in movl sub pop incb ds jl add pop xlat cmp sbb cli xchg das mov repz call jnp adc decb incb imul sbb add sub inc xor cmp movsb add outsl sbb test mov bound hlt push jecxz fstl cli addr16 nop imul xchg or pusha lock stos idivl cwtl call jg enter or or pop (bad) jae jb movsb hlt add dec outsl push mov imul mov push mov popfw push js jb pop outsl or or fistpll incb pop mov lods dec pusha mov (bad) add xor arpl clc scas mov ror das add jp dec jle inc sti push dec jl inc int3 xlat mov aam mov shlb or pop inc mov mov cwtl loop or adc insl addl psubq (bad) mov daa or add call sub push shl jmp and adc jecxz repz repz sub mov adc fisttp cltd mov push pop xchg ja push pop push or dec mov in jle icebp xchg aas loopne jmp pop movsb das jne fisub pop in aaa fistpll xchg mov xlat inc sbb repz outsb addr16 pop cs sub pop mov dec movsb add js rorl out mov sub mov mov enter add pushaw sbb cld out push js mov jne add jb or jns outsl mov dec dec or mov fsubrp idiv pop dec das lcall lock loopne call mov cmp (bad) das pusha xor xlat dec push call jg pop and hlt sbb out sti mov xchg fisttpll mov pop cmp or negl ljmp fisubr insl pop mov rorb inc out fwait iret fnop add cmp dec pop mov push sbb inc pop xchg pop cmpsl jmp dec add or xchg push ret mov scas mov outsl loope sbb dec mov dec jmp push in sub movsb andb repz push jb (bad) neg sub dec add mov js add xchg or es outsb test push push push or mov insl jo jecxz or xor cmc push dec add jno jg mov push jle fs pop jl adc out xchg dec aad mov push clc pop mov subl jg add out jae xchg jmp mov fidivr jle pop ljmp scas cmp push sub dec fstpl std jle push push push roll jg loope and adc add and add mov mov test push (bad) daa pop xor repnz xor push das xchg out icebp inc sub or add gs fisttpl lock sub fidiv daa pop sar (bad) loopne lcall pop test testl sbb push mov push (bad) dec jns dec or and push nop cltd adc int in scas adc mov data16 lret mov pop xor and cmp and add sub pop sub or add push push fiaddl inc (bad) jg sti das add and addb push std out and pop daa aam add xchg push push push je ljmp test pop popf sbb push xchg push inc (bad) jge loop add pop andb shll push cli fildll pop xor push ret or (bad) (bad) out mov cltd pop or in sub adc negl call push bound mov or push add idivl ret xchg jno push sbb pop sbb mov or repz adc or cmpb mov cmc mov sti rorb add repz add jecxz aad clc loope (bad) jo or je pusha stos jb ja push and and add or jnp or loop in outsb pushf or fwait hlt sahf sbb push add ficompl adc mov jp fs mov int3 mov or sbb movsl jmp ljmp and jle dec push jnp (bad) sbb in xchg cmc loope js (bad) mov cli in pop js iret push inc pop imul les fist jge les imul arpl cmp in adc add dec decb mov sar sub dec push inc cmpl fs or pop test clc clc (bad) (bad) xor jbe in pop call test push fbstp pop in and sub jnp pop movsl sub or jg push sub sahf push movsl movsb sub mov das xor arpl je ret lock push cmc sti outsl mov cli lea sbb adc rcrl cmp push dec (bad) repz cmp or mov mov or or push scas cmp dec dec popa sub sbb pusha push test cli sbb scas icebp pop and push xlat xchg icebp lret push ljmp pusha push out add xchg int3 mov jle or jle gs jmp sub jnp jmp lret push sub push lret jge jl xchg and rolb and ret jnp movsl cwtl fadd jne adc dec sahf mov rcrb and (bad) jp ret andb pop inc mov or add sti xlat popf test sub (bad) jmp pop add xor dec cli (bad) xlat or fidivrl sub cwtl push sarl and dec dec mov aad add incl xor add jae data16 xchg repnz jns mov inc xchg fistpll cmpb stc add (bad) sbb pop pop push pop or pop pushw cld mov pop aad pop push mov outsl dec jo fisttpll sbb sbb fwait sarl push mov xor add in (bad) jns fadds or xor sub adc (bad) sub loope sarl (bad) jb imul iret pop shlb pop repz mov push cli sub cld bound and clc stc fwait shll das test imul mov shrb lods dec nop push mov outsb dec xor push cmp jg inc outsb iret jns inc add fadd imull push pop and pop imul cmp lret outsl mov ss or jbe jb pop pop test jp mov pop mov add das in jg pusha xchg xchg loop xchg mov mov jp mov jge sbb add imulb xchg sbb enter cmpsb push lods fsubrl ds adc stos jp and scas (bad) push jp xchg cmpsl lahf push lods iret mov mov mov rcl pusha sarl addb mov into xchg lock push inc imul xor mov xor mov int3 adc ja or push orl int3 enter (bad) cmp inc int3 sti jge or fidivr push ss mov pop add sub inc xchg jp popf adcb mov mov pop jle sbbb lock pusha inc cs or push lret xor xchg cli (bad) pop jmp sti and sub dec mov add jmp sub mov pop popf cld enter negb orl inc (bad) and jnp ret mov dec shl add ja data16 push repnz cmpsb jp or cmp cmp or sbb sub iret pusha push adc pusha pusha scas and fbld sbb loopne stos mov in (bad) push add les jp aas cmp add sar sti push xorl push sub orl pop test jecxz jb adc dec cld cs jg add (bad) and adc push mov inc jb jp dec les daa mov pop or mov adc stos sub push sbb pop push loopne xor scas icebp and or out ljmp fsts mov xorb in jo add aas mov roll mov pop add lcall or mov fsts or out inc (bad) daa push xchg fimul lds cmp hlt cmp outsb cld icebp dec hlt pop popa adc in or pop or push sahf push mov xchg ljmp stos jl leave mov in stos sub nop dec adc repz mov rcll (bad) bswap loope inc in dec or mov sahf xchg cmp push ret inc repnz ja cmp ficomp fwait and jne or jmp int sbb mov leave adc test cmp (bad) push pop popa and or lds lret sbb or mov pop inc jbe cmp sub rolb push outsb pop cmp jl cmc push push cmc jmp sbb push push loope hlt cli test add adc dec cmp push popa rclb inc jecxz sbb ret inc dec jecxz dec lods push xchg das add jecxz adc jbe shrb lock (bad) lret jno cmpl jne add dec add push cmpsl pusha mov add std sbb xchg (bad) mov pop stos orps ret mov icebp sub movsl mov shrb jns xchg lock jl ja int3 add dec adc adc jge aad jmp mov push aaa pusha xor lret outsb loopne cmpsl shr dec das mov xor push cwtl arpl push inc sub mov aad pop adc test inc add fildll jge mov dec lds fisttp push cwtl adc shrl pop (bad) (bad) rcl aas aaa rorl jne hlt aam pop push cmp sarl xor imull fnstcw int pop test mov push jmp cvtdq2ps xor or rep sub pop push dec (bad) mov xor jmp sarl ljmp mov and ret pop cmpsb adc mov add lcall out dec mov jle pop jp add movsl jnp cmpsl in or pop icebp mov sbb sub add daa jnp cmp enter sti jno testl in jns cmpsl (bad) or push push in pop aam jle mov xlat add clc jbe (bad) sbb push (bad) es lret cmp pop add jle adc lret mov push (bad) xor xlat dec jns push sub jae xor jb std dec and lds sub das mov push cmp dec add or outsl mov into add shll or xchg int3 and imul jno mov das testb das jnp sub sbb dec mov inc mov std pusha xor outsl sub sbb (bad) cmp test push inc insb or sub bndstx sub mov pop ffree ret mov xor in enter adc in stc (bad) dec dec xor imul sub cmp or pop pop popf sahf std lahf (bad) loopne imull sahf orl push ret cld sub (bad) pop adc ret ljmp push adc inc dec cli pop and dec xor jno push cli xchg or je fistl das idivb mov push popf imul pop push cmpsb mov xchg and xchg mov inc pop sub shrl xchg add pop mov pusha popf movsl pop lods adc jg imul stos test (bad) ja sub push jb pop adc cli outsl mov movsl pop mov cmp mov test and icebp ficoml ucomiss mov das fistpll popa hlt inc aaa push clc scas ja insl arpl push dec pop mov fs inc daa cli mov sar xor gs pop xor ja fmull add popa fildll pop fldpi mov pop inc aad mov out stos cmp fldl dec xbegin inc inc das insl xchg xor in ds lahf xchg adc adc gs push pop loopne divl jg or mov pop scas clc aas mov repnz je pop lods inc xchg mov pop xor jge dec cmpsb sub mov out jnp cli loop and mov xor pop enter incl repz push mov daa pop jle jmp das xchg push xchg sub xchg in push outsb dec loopne incb fbstp cmc (bad) sti xchg cmp add jle mov push lock ljmp dec add xlat pop xchg add (bad) fwait xor cmp movsl imul mov mov std or sti cmc dec mov jge out add fcomi (bad) and push pop push iret addr16 mov push push (bad) add jno mov push xchg dec push cwtl loope jae outsb jg jne pop add icebp fimul jne mov lahf cld ja pop dec test fild xchg xor pop gs lods sbb mov sub test sub push adc pop mov mov dec mov push stos out icebp jg or mov orl push (bad) je test mov daa adc add mov add lock inc add sub ljmp jno pop cmp adc cmp (bad) dec cmc mov cmp in js and addr16 pop insb int3 (bad) loop add dec sub lcall pop pop pusha divl sub xor mov mov popf stc imul pop popf mov fdivrs (bad) dec fist pop mov enter sub (bad) fstpt (bad) mov div lahf lahf add pushf out dec mov pop test sahf rcrb inc add mov xor xor fidivr mov repnz ds dec push cmc imul imul test mov lds fmul loopne push xchg add cli mov or (bad) bound sti sbb jae call cmp mov add int3 sbb jns pop pusha xor jae mov ja in add xor push clc aam dec xchg sub mov stc xor mov cmp push fmuls sub jo fistpll mov data16 fcos push icebp int test adc loope in sub stos cmp bound or ljmp shrb dec scas and mull push (bad) mov inc fldcw jp sarl mov pop mov sub icebp addb add fldenv subl mov cmp in and cmpsl aam inc insb (bad) add out add cmp cmpb jns (bad) rol cmpsb les mov out iret or stc jle cmp lahf aam enter insb pop xor and pop jle cmpsb mov mov ret popa xchg cwtl (bad) pop cmp test out adc sbb jle out sub add inc pusha dec pusha pop nop adc add push xchg mov lret mov mov das pop xchg ds (bad) je ja arpl leave dec inc xchg dec cmp add ror push scas or or add sub inc sbb imul insl sahf sub jbe mov aaa loop lret add inc fs mov lret xlat add mov jg clc aad es dec sbb adcb ljmp push sub add pop inc jmp cmp ret mov jge dec rorb out sub push mov add mov popa das sbb dec lds ss jg in out lcall popf in inc rcrb pushf and fs jg add pop lcall mul pop ss adc xchg add or pop (bad) pop (bad) jno repz jne dec popf push push imul and push xor pop sub sar xchg dec or or das decl jp fisttp mov push mov aam dec inc mov mov repz add aad xchg clc jl add mov add adc (bad) jge,pt mov mov ja sub test or bound daa inc dec xchg push dec stos sbb rorl mov es dec jo or inc scas leave xor std jg inc push movsb push repnz push (bad) sbb adc (bad) daa cli pop pop dec mov mov sub adc das pop in stos es testl aas test dec adc ljmp or pop lcall adcb aam jb sbb cmc in mov pop (bad) xchg mov dec adc mov movsb fcom adc lret cmc outsl int xorl fstps xlat mov hlt lods (bad) popf sahf cld push push inc test out cwtl fs iret sbb outsl fcoml mov aaa mov shlb cli jecxz out std pop or roll mov push push aas int3 dec pop popf jae cmp sahf ret or or shlb dec fadds jb out std inc cs pop loopne nop das dec addl push or mov dec push push add add push push xchg repnz or mov (bad) std cs out stos das lock dec sub sub or xchg sbb jmp sti aas jo (bad) pop bound adc negb mov or sub out push js testl iret mov mov push pushl sub adc adc sub jp xchg xchg ret iret jle (bad) loop dec mov push jg sarl xchg jge lods popf jmp jbe and out neg daa aas dec push mov add jno mov or andb repz rcr and out imul cmp pop addb and ja push jg dec jmp cmc xchg jl jmp sub mov das jg orl fiadd insb mov (bad) in inc (bad) outsl add cld (bad) xor jmp mov push jge stc stc dec fstps ljmp jg stos shrl mov idivl or repnz inc lcall mov ja or push scas inc sub bnd xchg pop inc push push mov and cmpsb fldenv rcll dec in jle ljmp push or iret cmc jmp push cltd jne lods lret mov daa jae add mov outsb andl inc cltd mov sub imul mov add cs jb and rcrl imul aas and cmc les out xchg mov push mov cs mov cli ss mov cmp push jbe jne lock test test ljmp jle add lds pop pop jg dec adc outsb dec scas and add xchg cmc cmp jns add loopne xor gs mov jecxz in outsb (bad) mov mov popf lahf push push xchg cld dec jge push stos xor jg dec pop inc mov (bad) xlat in mov sub cmp jbe jge and out adc xchg add or mov lods push sbb sub push sub xlat (bad) lret inc stos xlat pop lret mov mov cmpsb out adc add push jp popf mov jnp sub sub (bad) jae pop repz lea push fwait lock out dec sbb (bad) mov js dec and fst icebp aas (bad) xchg push rdtsc scas xor sbb push sti adc adc mov xorl fwait data16 dec xor sbb shl sbb pop and lods push fldcw outsb pop rolb sub jne dec and add clc push xchg push out fidivr mov pusha jae rorl in mov andb sub pop jo or cmp pop jle inc pop repnz adcb fildll push or dec std jne and mov add push xchg dec or cmp pop xor add je out jbe jp add out add into or ljmp fistpl adc and sub jo lahf jbe jnp xchg push push imul fmul cmp (bad) sub and or js imul mov pusha (bad) jle cli mov push pop push mov cmp aas mov adc dec sti push in fmull and dec jg and je outsb inc out or (bad) pop test fistpll dec jns (bad) into hlt cwtl inc test lods pop sub xchg jb (bad) jmp loopne sbb pop inc into addb push sub xchg sahf lcall and jns int3 and fdiv dec lret cmp or dec std cmp mov or sub repz loope mov sti xchg jl adc mov lret add add pop push push sbb movsb fucomp repnz gs sbb sbb sbb test std push xchg mov ja mov mov fsubrp rclb push repz mov lock and test add add inc (bad) cmc loopne xor push mov fsubr addr16 xchg sahf jg fdivr xlat and inc sub pop leave jle out sub push int inc leave add add add mov bound (bad) ds lcall xor mov push in push mov dec out js push lahf into push or mov test insl lahf bound negb push mov pop sub sub (bad) inc and aas adc scas fstps into push repz mov lds ror push movl add aas add dec add push cltd add dec in jae mov inc adc push sub xchg fisttp and fstpt add or jnp xchg popf pop xchg sbb xchg add sbb cmp sbb (bad) not push pop (bad) add nop or cld ret cmpsl sarb add mov add pop push call push inc push stos das push jae jl inc pop or add jnp sbb pop clc mov mov outsl cmp cmp cmp add mov jnp lret or adc push dec push aad cltd sbb in aaa add loopne adc add inc imul test out pushf push sbb or mov mov mov push jg fwait cmc sbb add push push xchg jmp fisub mov das cmp sub push popa loop loopne gs push xor xchg dec dec push mulb or adc lret add pop test in mov std test adc ret and mov stc jp pop sbb dec rorl cmc mov xchg jbe jno xor nop inc cwtl sbb insl add jg sar jnp rorb orb loopne cmp imul and or sub arpl xchg mov ljmp es das or (bad) pushl pop test mov fbld or sbb pop sub push in loop ljmp adc adc push adc rolb and sub push dec test xor cmc add loopne std mov out cs pop xor sti push inc pushf cmp mov das mov inc test pop mov mov sbb jle int fsub lds xchg dec mov mov ret push imul mov xor adcl lret adc jmp loop cmpl mov (bad) xor adc cwtl xchg add (bad) fimull add dec add lods jge mov add xchg ss cwtl pop add jmp mov pop pusha mov sti iret pop push icebp cltd jg mov int lds add scas repz lahf jmp (bad) mov popa and fldl add or mov xlat scas mov ds dec lods cmc mov mov mov sbb pop lock fldt outsl dec ret test stos test mov pop xchg mov test adcl xchg dec add (bad) push out xor push and xor or or sarb cld scas (bad) ret push push jnp icebp inc mov lret jl mov dec xchg xor dec jae dec xlat mov lea (bad) xor push push sub repnz das mov icebp enter mov (bad) std loopne xor pop pop mov sub and or jbe pop inc lods dec ja repz push cld lods jb es (bad) adc or repnz pop cmp adc xchg cmp or ret or pop pop sbb fdivrs roll daa les out push inc pop dec push jo mov xor popa stos insb sub (bad) or inc fistpll dec pop cmpsb dec lcall sub leave enter push std push pop mov aad pminsw xlat aas push xchg int3 adc outsl sub push inc insl mov mov add call jge test inc or repz mov add leave sub fwait mov mov (bad) cli fisttpll ret sbb roll fcom push sub mov in in push add mov push jb lods or scas pop test jecxz hlt adc inc pusha imul movsb jmp cmp clc jle mov cmp adc mov inc lods mov jge lods dec fcomps push movl add and inc and fbld nop mov xchg pop mov mulb ss push daa pop imul xchg sbb sub fwait xchg xchg xor popf push lock push inc pop adc adc jbe arpl adc adc imul jnp cmp stos cmp stos pop movsl nop iret cli push pop incb pop pop aam sbb or adc and xor imul fstl xor je mov daa push pop push test fist mov lret dec (bad) push sub mov or lock xorb add sub push scas ret add and mov bound inc fstpt aas repz xor shrb add push mov cs cmp jo and push pusha lahf cmp into out es pop negb jne out add mov repnz inc pusha dec jmp push add push or js add into iret pop sub punpckhbw sbb and sub aas pop ds out pusha bound sub or pop jp mov xchg orl leave out sbb ljmp das test dec aaa dec sub or push outsl cld push sti mov outsl pop jne ja ss cmp jp notb sbb dec aaa cmp jae cli and or and push insl lahf inc aad pop xchg pop xor std out cmpsl pop xchg cli cmp mov adc sub push sbb scas and jge scas pop sbb push jp push addr16 enter movsb int pop mov (bad) lock push mov lds push test pop loopne cmpsb pop mov aas sub add mov sub adc pusha aas jnp sub or inc add and mov in int3 daa mov rol adc jbe pop icebp sub or loop pop pop movsb mov movsl out jecxz sub cli sbbl div lret adc jl nop int3 adc fmul inc sub xchg pop mov (bad) cmp dec ja ret or add jecxz cld cmpsb jle (bad) or shrb gs imul lret rclb mov cli pop dec jo fist sub shrb pop rol xchg scas (bad) or mov test hlt mov inc xchg mull or test incb inc sub leave jbe jp dec mov inc jae daa pusha mov enter cwtl xchg cmp cmp sub sbb mov movsb daa pop mov cmpsl or mov decb jle xchg cmpsb lahf jbe pop mov sub add and aad jno cld andb mov add sub push sub mov add addl jg aam dec mov pop repnz lcall adc mov jb xchg mov test cmpsb (bad) mov push push xchg sbb push jle push mov fdivrl jne pop push push (bad) pusha mov jp mov popf add lcall not adc out inc or cmp in lds movsl pusha out and mov je call push lahf lret push sahf pusha out pop sub cli add loopne pop push lret fmull push test xchg loopne jle jo loop inc cmpsl in push dec inc inc mov xchg aas cmc jns jecxz sbb imul sarl jle mov inc test add or and dec pop cwtl add dec (bad) je ljmp pop insb or insl jecxz mov dec pop mov out jo cmc inc jl scas pop arpl push or popa pop (bad) repnz dec adc mov ja mov in or leave and cmp or pop pop cmpsb xchg bound push mov mov fwait outsl repnz shlb pop sbb push imul mov push inc insb mov push dec inc push (bad) jb dec outsb cmp lret add sti and dec xchg push jo das addl push cmp sub pop (bad) xor xor jl mov fidivrl push mov rorl lret mulb divb mov dec das icebp jl icebp aas lret rorb jmp or jne sbb or push jg icebp fcoms xchg dec or inc lds mov out dec push mov nop dec nop push das sbb (bad) push pop movsb data16 push (bad) ds test (bad) jbe lds nop jmp and iret push sti add inc imul sub cmp es dec pop inc repz mov stos jnp xchg (bad) lcall pop add xor icebp or popa in pop cmpb jmp cltd push push mov push aas leave pop mov dec negb push jmp mov rorb gs insl les js mov jg xchg repnz mov dec or cld (bad) push or add jl cmp fistl xor inc addr16 cmovno jl dec add loope les fsubrs fdivs or adc add or in imul and pop add mov in outsb jp ret jnp sti stos das lret out cwtl je (bad) popa jne sub lret xor jns mov pop add jb fiaddl push mov (bad) cmp push js ret sbb pop dec lds outsb in imulb add push push mov pushf adc stos fs scas cmpsl (bad) fdivr add jmp fsubs xchg dec cli jbe add xchg and int push inc dec cld insl in mov adc cmc sarl sub xchg mov dec and pop xchg shlb sub dec xor xor jle (bad) jge negl inc shlb aaa pop push pop daa fimul push xor jne xor ja inc (bad) add add enter xchg rorb jecxz add rorl stos xorb test dec pop push or mov push sub and pusha cltd (bad) and sbb sub mov das mov fsts inc stc pop adc mov sbb dec daa fstps jns jge icebp cltd pusha (bad) mov js ja,pt imul pop dec inc dec add aas xor pop adc test jmp loope mov jnp push sub adc dec jnp loop imul mov lock mov or xor outsl push nop roll mov adc in iret mov or pop (bad) cmp lahf cmp jle in push in sub repnz out pop sbb xor xor cmp pop mov jle push sub nop test enter jbe or inc or and aas mov pop stos int push leave lcall into in (bad) ljmp xchg cmpsb cmc add outsl loopne jg cmp mov jp adc xor lds repnz jl pop jecxz jbe push movsb das inc add arpl decl xchg jmp or test jns mov dec add or ja dec sbb call jmp shlb fwait adc xor (bad) cmc scas mov bswap jp rclb push inc fisttp dec jae orb lods cld popa mov add inc subl pop imulb (bad) je sub in or sub mov xor daa add popf leave xchg xchg cmpsl adc add das adc and test sahf or jg sti mov mov xchg ret pushf ljmp or ljmp addr16 cmp jp inc xor je dec cld mov and popf js xchg (bad) cmp sub jnp cmpl inc inc pop push ljmp (bad) xchg stos loop (bad) push push jge cli mov jg jae outsl jle push dec cmp push push push or xchg lds pop sub out outsb insl cld add fnsave pop lret hlt cmpsl fnstsw xchg sarb inc js cwtl sti aad sbb (bad) fsubr outsb out mov in lret test movsb cmc rcll xor jmp sub sub ltr and cld loope test pop mov outsl aam push or jp out lret roll dec jg or jno pop push ss add test inc es mov cwtl pop xor sbb mov out cltd negb pop mov ljmp int3 pusha pop fldln2 fisubrl pop mov dec int3 popa pop or insl arpl nop or adc or jle xchg or jae cltd adc pop adc pop aad jae pop mov mov sahf pop adc xor ret push cs jmp dec mov aas das icebp push mov sub xchg push test or cmpsb dec mov adcb inc aas mov stc dec add jbe in pop and sysret roll mov xor fistpl xchg lahf (bad) mov cli push (bad) mov sbb call xor push pop push je pusha mov inc shl ja mov pop jo,pt es mov popa lds xchg stos mov shr icebp push dec xor ficomp or xor adc add push fnstsw jnp stc outsl call lcall int3 jae or cli cld outsl rorb or inc jae insb sub (bad) xchg or or mov imul sbb mov xchg (bad) neg rclb test dec add sbb and sub jle loop mov rclb and cmp mov mov inc pop mov aam inc push sub jl pop mov or jmp sbb dec (bad) scas mov out push scas cltd js cli cmpsb xor ficomp dec mov push push pop inc xchg sarl cld in and push sub adcb dec nop mov and ljmp jg fisubl inc sbb pop mov xchg pop hlt pop and cmp in cmpsb add loop xchg add push mov xor repnz or fldl xlat cli jns or dec push test ljmp pop sahf add jg xchg sub add in imulb pop push jl pushf lahf cmpl sub movsb inc fidivrl fs gs mov orl and mov and daa cmc pop jl nop stc inc or sti aas jecxz xchg stos pop sarb lds xor dec fs rorb cmp pop or sbb clc add ljmp jns cmp push leave mov pop ja std addl dec mov pusha js add inc (bad) in or fsts jno and loop add pop shl (bad) aas xchg sbb and popf int add mov sub lret fs orb add syscall inc ja jle xchg js mov mov in mov das xchg xchg add cmpl dec clc xchg jbe push xor and (bad) sub dec jns loop das jnp nop or mov ret adc mov pop cmpsl (bad) jmp in xchg mov add pop out jle push (bad) or push sti push jne imull shrl cltd mov loop (bad) mul adc or xchg hlt fidivl popf imul lret xor mov and fs jae add pop test cmp pop fdivl stos inc notl jne adc push push shll cli fisttp push add mov (bad) arpl push push cmp jp out es or pop das or mov push mov mov idivb ja std outsl inc dec and js add inc jle and aas mov and mov jno rorl into mov inc and pop (bad) scas sub and inc outsb jb push dec push or mov push or adc imul or adc push jno push cmp pop mov jnp je push push jl (bad) or sar (bad) adc sahf add pop xchg mov sub mov (bad) jle add xchg mov mov popf push or rcll push push popf mov sbb cmc cmp pop jp out add int inc jg sub in add xchg mov sub and push dec test addr16 int je mov cmp test pop leave repnz mov push cmp push fbstp aam mov dec or mov mov hlt test imul fisttpl in (bad) add outsl mov iret sub lret cli das imul xor icebp daa js mov sbb sub push xlat sbb inc aaa add das out mov ret arpl xor dec mov inc mov ds mov dec fs ja stos mov mov jmp adc arpl out (bad) sub fildll push (bad) jbe dec cmc jbe jmp jge push sbb ljmp les daa pop mov push negb inc mov icebp pop mov push or pop loopne iret or imul cmp cmp xchg das nop push cmp mov bound sub orb sub mov sbb andl add pop sub scas push xchg jg xor (bad) or (bad) loop jo dec pop or or js dec sbb sarb inc pop stos jl add add or lahf xchg pop xchg mov jno je push mov (bad) js idivl and cwtl dec je (bad) push mov or (bad) cmp push sub pop push jnp pop and xchg or inc and in repnz dec (bad) popf push adc sti add divl insb and sar lret ffreep rol pop call jns jmp adc subl mov push adc sbb adc lret push add mov movsl or iret gs mov add aas add addr16 in imul lods test inc xchg icebp jge sbb mov sub cltd stc inc cmp jno jo push jge cmc xchg lea adc lds xchg cli add out jecxz adc mov test sub lock popf and and iret sub sub mov imul test call ljmp dec (bad) repz popa xor jg test cmp or adc subl cmp clc pop add push jmp test xor ror jmp loopne ret (bad) push popf jbe add imul pop loop mov aad and sahf das jae cs xchg add push dec adc mov push loopne cmpsl scas or mov in outsl movsl xchg adc hlt (bad) mov adc (bad) aas cmpsl cmp repz es loope aas bnd mov mov fsubr inc dec rcrl jl xor (bad) test or push adc enter jmp mov push sbb push push add rorl stc orl ficom out cld inc rcl xorb out aaa pop xor push in cli jle add dec pop movl (bad) fiadd push push arpl xchg ljmp pop inc fnop xchg iret mov xchg mov clc jmp add sti adc or cmpl push cmp xchg dec iret addr16 js sub sub sbb and dec mov rcll cmp sbb sub dec pop ja pop jmp enter pop dec jne mov inc jne cmp dec cmc lods and push pop xchg pusha fmuls aaa mov fmull mov stos aaa mov pop inc lods mov fpatan sti add scas sub xchg es frstor sbb iret in jns dec xchg pop push adc xchg add add mov add xor shll test inc mov xor (bad) pop pop (bad) imul popf sub xor xchg rcll out or xorb inc insl pop das xchg push imul inc shlb aas mov ficompl add mov jmp jnp leave pop je mov push insb out mov stc jp mov jmp cmpsb insl fistpll dec repz pop sub faddl fs or scas cmp rcrb outsl mov jle xchg fsubl movlps imul mov pop or cmpsl xor jbe jle add xor mov outsb aad inc jecxz push push push push pop cmp cwtl rcrl jno mov mov mov repz out mov not js loopne das mov cmc push push dec dec add or insb xchg pop ljmp mov daa test push xorb rcr mov jle iret std sbb ffree lret xor test scas test cli data16 std cmp sbb sub call inc pop or (bad) scas push ljmp lods sub xor (bad) adc mov lods les or jge popf xchg fdivrl pop and xchg mov xchg fisttpll pop ljmp lea and outsl xor outsb pop rcr jecxz incb or nop dec xchg (bad) dec push inc pop pop addl faddl jg dec outsb or jne jbe out sbb add idivb and icebp pop jmp mov pop cwtl fs and adc loop jns jmp or out cmpsl test js push mov and orb lock mov sbb or in divb lret das in mov mov dec mov xor jnp jb push pop ficomp push xor mov scas jle sbb cmp leave es jge stc repz fnstsw std stos mov icebp or js xor dec or out sub push mov adc rcrl jbe pop adc mov pop js add jl cmp pop stc adc (bad) ds xchg imul mov xchg mov les mov iret jns cmpsl std sbb pushf dec shrb and iret jne dec leave dec xchg or in jnp xor cmc and fs jle and mov mov jge inc xchg mov inc sarb add xchg pusha imul or add sbb sbb pop (bad) fdivs fcoml je iret in inc pop cltd lods sub repz insl call shl adc rclb add mov dec les pop push push scas dec mov and outsb push sub jae nop mov icebp push xor mov mov pop xchg ljmp jnp test pusha push cmp adc into sub xor stos (bad) mov rclb cs pop or add sbb dec adc sti pop mov sub cli sub mov shrb sti addr16 xor (bad) and loope and movsl xchg stos mov jns inc mov imul lret rcrb sub mov inc sub jl mov add or std mov push rcl push out sub loop push orl cmpsl mov daa repnz push pushf out dec pop (bad) insb add lds test push push mov out fwait and cmp mov sub mov sbb scas adc or shrb popa jae sub iret pop sub jo add add (bad) cmp iret inc mov scas adc out insl cmpl and sub jp loopne (bad) xor test pop je fchs or push dec and stc sbb jne xorl push insb xor insb pop pop xchg push mul pop outsl aaa or adc mov push or es mov nop sbb inc pop pop pop cmp add test push push lret (bad) xor mov pushl xchg push pop cmpsl xor rclb push xor pop (bad) and imul repz adc call movsb pushl pop or pop dec jno xor inc push (bad) mov shll repnz mov gs fild aas loope js sti add or and cmp push push jae loopne and cmp push xchg inc pop out add fstps jg add cld and sub mov in mov mov lods push xor shr mov hlt pusha jns xor movsb xchg pop pop add push iret mov insl pop imul (bad) cs call adc aaa push pop sub lods jns add add call push push (bad) loopne je bound cli hlt add popf repz pop lods (bad) daa loop imul pop lods sub (bad) pop xchg xchg stos adc or pusha mov dec cwtl mov aam cmp fiaddl mov shrb stos cmp icebp icebp cmp lahf aaa pop pushf in xor pop (bad) je pop nop sub dec push js aas (bad) mov jg add addl and add cmp or xor xor inc (bad) cmp lahf dec je add mov push push inc cmp stos or nop pop jmp cli add in idivb fsubrl jo and mov jno insb xor repnz jns imul sub cmp inc cwtl cmpsb arpl ja adc or push xchg rcl add push pop cmc jg pop push or adc repz xchg pop repnz inc sbb fptan aas xlat lret std shrb mov adc imul into rolb sti cli lock mov mov push adc aaa jg push stos sbb mov jecxz roll out dec fildll and mov xchg dec fs sub std push testb rcll push cltd dec frstor lods inc popa fcomip sbb cmp int3 jb imul pop inc (bad) push adc ret shrl jl jb iret jmp add ret std clc imulb (bad) ljmp sbb xchg clc mov rcrl out push mov imul rol dec pop js push das (bad) aas push jbe pop inc cli add insb mov sbb int3 sub mov push add push mov mov xor jl or jge jg outsl cmp fild mov add push sub jp rol dec xor fnstenv into cmpsl out and js or dec jae rolb push push lcall dec (bad) mov fcmovu notl je inc mul mov aad or jmp (bad) or incl insl ds lods xor or or pop push loop aas jne jl pop inc mov inc jg add fldt imul cld fisttp es dec push loope inc jle add lcall into scas and xchg incl test mov sub xchg xchg fstl and sbb adc call pop aaa rcr sbb les mov rcrb jb push push or adc dec adc cmp dec add and addr16 jl out push popa dec dec xor mov or mov std jns in mov jmp sahf lret jne lahf pop sti and and push or fcoml fsts push iret xor inc dec pop fwait dec add imul rcr or lcall add pop pop fldl dec in jle dec mov int mov call insb andl inc push aam aaa sub adcl mov xor or adc (bad) sub lret mov pop and xor add or pop jecxz lret movsb stc inc xchg in pop cmc mov jae mov or rclb jp fwait loopne adc (bad) sbb jne pushf pusha scas idivl xchg popa mov jg ret loopne ljmp fild pusha pushf ret mov jle loop or incl rolb mov mov add push enter sub jg and push mov faddl mov (bad) repz lcall adc push movsb mov mov sarb jp shrl loopne sub ret jo or mov sub test push sahf popa aaa mov mov add popf fwait daa in out inc or pop (bad) std and inc xor (bad) jno adc jg jmp outsl mov push jb orl rolb pushf (bad) sub les push push scas mov outsb or pop cld xchg inc pop xor orl xchg pop sbb push sub and pop repnz in test hlt in lock pop push (bad) pop mov mov orb (bad) mov je pop and aaa mov pusha mov arpl mov xor or jnp fldl2t movb jmp pop push lret mov push pop xchg dec push out sub mov (bad) xor sub mov pop (bad) mov or es mov and jg cmpsl jbe sub ficom rclb push loop,pt xchg add inc xor inc cmpsl jns js cmp ja jne mov icebp or push mov pop pop pop jmp mov bswap and iret push fwait das movb inc pop daa subl adc and cmp add mov cs pop aas jge out add fnsave sub jp xchg sub pop stos ficomp movsl push jg in negb mov fcmovne pop cmp mov mov loope pop mov and shr int add xchg movsl adc lods or xorl sbb cmp ror cli aaa outsb subb inc fidivl in add nop xchg and roll jp add fdivrp inc push testb loop dec ja pop fldl xchg xchg cld jmp leave loope daa sbb xchg int in cmp daa popa negb (bad) jle pop negb test push or push dec mov pop jg sub repnz adc dec sub add pop add push mov jle ljmp fstps pop mov es into jge sub or mov push mov inc jle or jle rcrb insl pop nop and rcrb ret idiv popa lds sub pop cmp ljmp xor xor imul ljmp scas mov push or inc iret jl (bad) (bad) xor jne mov jmp cmp xchg stc cmc add data16 fcomi xlat jp pop jbe lods jle jmp lods iret std mov sub daa and ja insb jge mov (bad) (bad) push jge mov sbb jns pop outsl and syscall lea paddusb inc or pop loopne xchg mov inc and iret insl mov jg rolb push jo dec f2xm1 loopne pop mov or ljmp push scas mov imull clc mov inc mov and cmpl xchg adc sub popa sub mov pop lea test dec jae dec je,pt sub dec or add lret xor and sub sub pop mov or xor pop mov jg mov fs jbe and sub fdivs pop dec pop call cmpsl jle push leave jle mov shl inc inc or nop pop iret pop mov jmp rcrb or xchg dec add push mov mov adc xor (bad) stos and call xchg or (bad) pop cwtl test insb incl cmc adc push cmp push (bad) addb mov dec push stc rcl or sub add repz das mov dec pop cmc in add mov loope mov sub les cwtl daa adc jle,pn jle mov test pop add sbbl mov sbb pop icebp mov push stos mov jmp and or xor jp (bad) xchg inc fistp inc fcompl loopne out loope cli and sbb inc jnp loopne add jae mov lret orb xchg dec dec xchg push inc jb sti add pop addl sub pop icebp add out std lahf inc mov jg jns loope xchg and in or loop pop or add jns inc add insl mov andb loope stc decl repz and shrb pop dec inc sbb das mov mov add jo mov and mov (bad) pop fistl addl xor or jp in add pop lock int3 pop cwtl xor and jnp jecxz push jne dec cli push or xor (bad) or lods xor jne xor mov pop and cmp sahf aas xor (bad) push movb xor add aaa jg dec xor mov dec push jp std lods cwtl and stc sbbl inc or daa mov pop push add out jg sbbb not (bad) stos mov xchg sar add inc sub push add xor jnp outsb clc iret xchg and sub dec jp faddl jmp call push sub popf mov sub loope pop xchg aam das push xorl adc out jae mov pop jmp adcb mov fwait cmp sub aaa les push xlat in (bad) pop dec or test arpl jb lahf add and jg rolb fildl stc out jo das or jae movsb adc cmp sbb jne loopne jnp in in dec and outsl pop ficomp mov pop inc xchg pop add cmp loop sbb arpl nop fsubrl jmp mov adc adc adcl sub mov icebp mov imull inc add or xor pop adc and fs negb cmp adc jae mov daa aas jl mov sub push push aam test aam addb sub lock imul sahf mov pop (bad) and sub xchg arpl xor push xor xchg ja nop fildl pop mov ja mov mov cmc fldcw add (bad) mov jp nop mov mov imul shlb mov jle nop lods mov pop xchg je leave ffree adc push in ret jb out mov jg orb repz sbb and push fs or push movsb repnz in mov pop out test add enter push xor xchg or stc jle push sbb lret cli jp inc cld and dec inc jmp push pop inc cmp and cld push out add xor js adc dec ljmp in ds cmp mov sub clc xor adc cmp push mov fstpt or push cmc aad jne lods pop mov mov mov jge mov fsubs jle jmp push out inc test pop cmp sub sbb cmp ja outsb sbbb pop rep inc int (bad) lock add inc dec (bad) sarb push add ds push in xorl dec and adc cmp loope mov (bad) je daa sbb into push fmuls sbb push lock or and add sti les lock ja repz popa xchg inc jg adc sti add and pop test lods push lods faddl or (bad) xor (bad) pop sar jle or add std jg out pop inc loope add adc aas jle aas sahf pop and adc add ljmp daa or and ret mov push out imul adc stos adc lods sbb push stos lods hlt (bad) les mov adc cmp and das cmc daa add cmpsb mov mov testb jl inc or andb dec pop dec out fsubrl gs pop in cmp xchg imul (bad) jbe mov and cltd pop adc stos clc les push or aaa pop pop loopne lock popa out adc pop sbb idivl pop dec and int3 nop/reserved cmp xor in add sti jl leave jecxz aam int xor or pop mov xchg sub test lret pop cmc ret push jp cmp jns imul je int3 xor jg aas cltd push add ja mov scas leave jne cmp sub add jge push dec xor jg cmp into test out or clc inc or gs mov pusha inc xor mov les xchg push mov pop cmp ljmp mov push enter pop push push push (bad) outsb cwtl push mulb mov and nop in xchg dec sub mov sbb outsb mov add add mov andl mov scas gs les sarb int dec stc aam add mov shll cmp inc (bad) repnz pop jo in or and orl xchg mov pop pop jns out xchg lock cmp (bad) xor pop jmp pop sbb pop js scas sub add jns out sub sub add push icebp mov pop dec aad outsl xchg icebp push jp fs js nop pop mov loopne jne ret in cmp sub inc test pop shll mov inc pop push lods and jnp pop cmpsl sub sub rclb fadds xchg out mov adc call orb add outsl cmp or test mov add rolb pop cld pop dec imul aas mov or inc add out sbb (bad) les mov aam add ljmp jle push push stos ljmp or sub add add aas (bad) add aaa mov pop stos aaa fnstsw adc out add add jge call mov xchg adc idivl add incl xchg es jge rcrl xchg stc (bad) push fadds pop and repz out mov mov or cld das shrl out cmp popa pop add mov js push mov sub lret jbe jp or out inc in push pop aad jns leave stc jno sbb hlt pop and mov mov lret jg and adc dec sub add fimull stos xor in mov cmp adc jne icebp das xor jb paddw jle add jecxz (bad) mov and scas cld sub scas cltd xchg add push ret cs or sbb loope aad loopne pop push adc push call fs stos test cmc mov sti cmp mov pop cmpsb jl mov cmp daa incl fsubr ret and adc es add out in add scas into popf dec fiaddl stos cmp cli aas pop clc das imul ds (bad) push mov or in fs test mov and aas mov gs inc test dec add push pop cmc pusha push out call data16 or sti pop fdivrs sarl mov fs in push xlat adc mov adc pop push mov sub add gs dec xor add sub cmpsb mov faddl inc or aas dec xchg sub or add pop stos in mov mov dec jae popa pop inc add or movsl pop hlt mov lds lods mov sbb test movsl jle add outsl push mov pop fmuls sub xchg cmp lods ficom add cwtl or sbb add cmc jae jae mov add aas or sub push jl mov add adc repnz mov xor ror add rcrb ret std mov jge sti clc pusha or outsl out pop mov cmp aas or pop jnp pop mov mov (bad) xor or rcr pop cmp cmpl jle push inc sti pop fisttpll cs or cld popa mov dec leave mov push xchg push pusha push in mov in incb jle adcl push out jle lea xor and fistpll dec pop inc movsb or addr16 out and jae add pop mov push xor cltd flds xchg adc xchg pop sub lods out cmp push xchg cwtl jno nop pop dec ss rol sub dec jnp add nop repz mov mov push add push pop sbb decl neg std xchg xlat pop push cld sub (bad) add pop shl rolb xor push out jl iret out popa push clc arpl push mov lret pop jns inc loopne dec idiv mov (bad) iret addr16 mov sub std int3 jl xchg and jne rorl add xchg idivl je jmp and xchg cli push mov daa sti outsl add jmp fwait inc dec push into xor test subl enter xchg xor jno jne pop add inc (bad) mov ja fbstp add test add or call (bad) pop jp or jecxz pop ja sbb and dec scas push xor xchg inc or ror (bad) movsl ds dec imul sbb in jle xchg mov mov xorl add std jg in sub (bad) jb int3 inc pop pop ret xlat pop add pop add jecxz and add xchg or insb mov mov enter and push cmp jbe push into sbb js fildll xchg pop rcrb orb ficompl or mov mov iret rcrb push mov inc dec inc push mov jl dec stos stos mov pop inc (bad) fbld jb jmp shrl mov inc jle jo subb (bad) xor aad sub mov sbb ja fisubrl jns cmp notb or pop aam pop xor dec mov push test mov lcall sub sub js scas jp jl push push fldcw adc mov lock call popl sbb cmp or outsl lahf pop call adc pop mov jb pop lahf test das out jne pop loope mov pop pop push cld out inc xchg jge lds add jae bound mov popf jo add js push add imul xchg pop ficomp add lret push pop aam shrb and push cmp fnstsw inc ss jecxz leave pop pushf test mov inc cmp jge jp fnsave xor pop aas lods sti jbe jge bound pushf imul push or aad fildl int3 sti fcmovu aaa cwtl or enter fwait jl inc insl pop daa dec push hlt add xor das imul jge (bad) imul movsl fld pop dec and mov sub incl jg sub (bad) icebp and or sub cmp push add push lahf or or cli ds and sub add fistpll sub stc inc adc or mov mov add xchg push jle call call orb cs fstpt scas cmp push sahf lds push jb repnz in outsb (bad) (bad) lret sub jnp jge inc repnz (bad) cmp mov pusha ja and (bad) outsb cwtl sub jle jl std cmp popf jns stc pop jne hlt pop jnp dec jbe mov stc mov cmpsl push mov mov jmp mov aam (bad) cmp je push push push jmp nop cld push rorb push sbb adcb popa mov mov xchg cmp in shlb inc add pop and cmp or cli push xchg nop mov sbbb and mov push int push push sbb dec std cmp movq fsubr imul mov sbb or cmc cmpsb out inc xor pop xchg cwtl adc jmp adc adc jl add lock push insb pop je add push pusha lods bound mov cmp test (bad) add sub pop pop pop int shlb dec in push jbe dec lss pop je jp xchg add in aas test push cld and add repz daa xor pop sub pop fnstsw mov and lods mov xorl add daa cmp mov ljmp cmp fs jg adc cmp outsl mov jmp pop sti and dec sti push push mov inc sti inc add icebp ljmp dec add add out inc add push inc xor mov adc lret jae insb lret stc les ljmp imul jbe (bad) popf test mov inc mov xor or dec add loopne inc push xchg lret pop out pop mov clc mov std dec xlat std (bad) fimul (bad) pop jbe pop pop cwtl (bad) rcrl mov mov sbb sahf repz (bad) mov pusha inc sti mov adcl or out and cli fcoms push gs push ficomp push sub pop (bad) sub add (bad) push mov ja call jg jmp cmc aas int3 (bad) and loope sub stos fcoms or test push push add mov push fdivp mov add mov addr16 mov movsb call mov loope scas dec nop rolb and sti mov jne (bad) (bad) xchg add jg dec cmp xchg aas insb pusha push add call cmp pop push aaa movsb mov and enter xor jnp xor sti mov in adc jnp nop xor aad pop das xchg cmp mov add in pop mov pop enter push sarb cmp mov fs dec outsb lea cmc das pop xor jnp sbb dec pop fs clc jg test jns das cwtl and xchg loope jnp xlat jns mov jle add or daa xor mov sbbb jnp adc in sub mov jne jae push add int3 test jnp sahf std pop adc stos dec cmc into add jnp ds or jae jecxz push (bad) daa fdiv leave push adc outsl inc cmp cmp lds cmp aas inc jge fstl sbb dec xchg jno cwtl push cmc bswap inc dec xchg cmpsl shlb push bound notl and xchg movsl add mov stc mov scas in inc mov ds push das sub pop mov sbb jae jg test mov (bad) or xor iret xor out leave cmp or push pop neg mov pop fidivr dec xchg test movb cld out es ds sub nop in inc sub dec in in sub cmp lds inc (bad) repnz xchg cmpsb outsb sub loop xchg and pop ljmp cmp incb sub adc or fsubp pop (bad) jne inc outsl outsb xor sub imul adc add or mov cmp loop xchg sbb lret pop jmp pop imul jmp outsl sub inc and cli ljmp adc xchg jl rcll add sub add outsb xorl mov add int3 in jns loope outsl xor or sub (bad) xchg (bad) ja (bad) mov add inc cmpsl push clc cmp push inc xchg mov pushf in jnp add nop mov cmp insl rolb clc inc test pop mov push jle pop sbb adc dec xor fs or or int cmp (bad) test stos add add inc ljmp (bad) jle out sub dec pusha jp add aam adc cmp pop ljmp add divb mov jp clc dec add shrl push icebp repnz add inc fadd pop rcll push ret movsl scas in adc repz (bad) fcmovbe sub add out push fsubl cmc add lahf lds (bad) push cmp mov arpl adc (bad) and lock iret fcoml ja mov fwait iret (bad) mov pop mov daa xor mov pop (bad) pusha mov jle mov int int test addr16 scas scas loopne cli adc pop rep jecxz add cli xor scas shrb add push push jno imul pop (bad) push push popa in pop aad int sub repz pop std popf fwait and imul out sti fiadd push mov and sub into cmpl lock addb xor movsb push orb push std inc sub imul cwtl dec and or or dec xor mov xor inc sbb adc add ja aad add cmpsl cld pusha push push push push xchg popf mov inc cld pop cmp (bad) and add xor mov inc out das mov add xor lock icebp push mov jge mov out or das icebp sub ja or in inc subl jecxz mov sbb movsb and mov sbbl sbb movsb nop int movsl adc addr16 or (bad) xchg (bad) xchg aas cmp mov or mov test fbstp mov or ljmp mov xor jno jnp inc sub (bad) dec (bad) aad mov iret incl jmp lret jg cli jno (bad) fild sti dec aas jge arpl pushl test sub jmp mov mov and lcall gs popa sub jge cs cmp pop cltd cmpl inc xorl mov jns loopne icebp movsb and inc (bad) mov inc pop or outsl jnp rcll xor pusha roll mov (bad) xor push mov rcrb pop push jno mov xchg (bad) addr16 mul mov dec jmp fdivr or xchg out jl mov adc mov add cmpsl movsb std ret (bad) lret pop dec ret jne jl sahf pop or idivl cmp adc or or or cmp cmpsl mov pop pop mov adc out pop ss cs hlt pop xchg sub sbb pop xor cs aam sub jnp decb aad pusha insb jb add pop ljmp cli inc pop mov cmp leave jno mov insl clc fcoms xchg cmp jle mov mov inc and das sub adc je mov add sub or in mov fneni(8087 movsb mov adc in push lods push push pop shlb add and into mov push pop mov mov pusha daa das dec ss sub or stos js push daa mov push rclb mov xchg inc call or mov adc inc sub adc pop pop and dec mov das call clc dec pop in fisttpll addl push fcoms xor mov mov int3 xchg push cld out jae push jae add jnp test das sti popf push mov fstpt lahf ds std adc cmp xchg aam xchg pop dec out daa out mov dec jnp cld dec sub sub pop rcrb rcrl ret fwait pop pop or pop sub bound lock push (bad) iret jnp add out stos les push pmaxub pop imul adc insl dec xchg es adc or arpl sub fwait mull insl push push push adc ds or clc out or or pop pop sub gs push cmpsl fiadd jl pop xor jg pop (bad) idivl inc shrl inc hlt ljmp or mov adc dec (bad) and loop push sbbl fnop add mov addr16 add daa and push daa leave or frstor mov loope jmp mov mov lea jo (bad) pop aad dec scas incl cmp idivb add pop add jne xchg (bad) pop pop sub int jge adc add mov and sbb ret rol lea add cmc jae adc and dec js jno lods inc and orb inc cwtl add sbb inc xor or cs (bad) push add mov or scas pop pop mov add sqrtps cmp add mull pop pushf dec adc hlt mov dec outsb add push mov cmpsl movsb shl or jg jge stos pop pop daa xchg push test pop mov rcrl cs jg adc or adc cmp cmpsl pop std pop (bad) push dec or das test mov lock ja outsl fs push adc pop or push jne push mov mov js and push out cmp std jmp cmp std dec pop incl sbb push ds or notb addr16 push (bad) pop jne lods fsts dec add les mov hlt xor movb fs pop inc add cltd lock out pop pop dec lock adc outsl test ret lods xlat and xchg sub xor aas add xlat mov xchg jp inc leave pop or jne xchg (bad) popf lret pop push xlat cs and icebp pop cmp icebp or aas imull dec sub jnp gs addr16 rorl pop ret jg in sbb int3 (bad) movsl fimull inc loopne,pt push mov jge cli es lret imul dec rclb pusha add xchg mov sbb ja jnp adc and lods (bad) pop cmp repz jns pop xchg xor push add add out cld hlt sub push pop movsl in hlt mov pusha xlat (bad) frstor jp push lock fmuls ret jmp add (bad) sbb lret sub gs movsl jne mov pop jle push jecxz mov jl push add xchg push mov jle pop roll int enter bound rorl aas fadd add add sub sub imul lret sti add call pop and dec ja and adc pop cmp add out pop subb adc dec mov cmp je shrl add add add cmp je pusha loop rcrb (bad) aas inc loop mov jle daa pop pop jle movsl cmc arpl push insl mov pop mov push mov xchg mov and mov push inc adc jne (bad) lods push dec loopne aas xor bound pusha pop push xchg hlt out popf dec mov or cmp pop scas gs ljmp pop sbb xchg jg imul lret sub xchg fstl push xor aas mov inc in loop pop decl xor push or xchg in lahf push and mov add add addr16 push sahf xchg out xchg dec cmpsl ffreep xlat out jge xchg xor cmp push pop mov push inc mov mov into sbb push (bad) test mov insl xorb enter sbb int rorl jne xchg cwtl out insl and fstl xchg cmc jb imulb add xchg out pop add movsb xchg jns mov rorb stos or add (bad) outsl add test or mov aam xchg xchg fstpt orl adc push or push mov and pop (bad) jmp mov push push jl lds out add add sub aaa dec adc out (bad) insb test movsb cmc xchg or in fldt xchg sub imul jne scas pop push popf jl popa sub testb inc adc pop out sti icebp jb mov clc leave sbb mov adc push or or fs add pop cld mov mov pop and shrl push es adc jle ficom (bad) and lcall or test int jp je adc leave adc enter sub xor mov fnstenv icebp fnstsw lock sub jne add adc ret push mov out inc das xchg pop mov je pop xlat jb or jl push outsl jmp mov xor jnp jp out or mov dec pop test mov sahf cmp clc push sub (bad) pop stos cmp fldenv cmp inc call das and stc dec push dec mov ja push popa data16 cmp jg fnstcw mov popa jp iret add stc ljmp jp in push lahf jle enter std and nop add ds inc scas or sub xchg (bad) jge lret push add incl pop jmp push gs enter and mov outsl aas dec and inc add push dec xchg (bad) mov push mov insb loope push pop push xchg adc inc maskmovq divl dec mov ds add mov or pusha xchg loope jns dec mov inc dec jno dec mov dec xor and sub sub pop xchg mov xchg mov cmpl and pop test mov outsb add add mov jp push sub add add inc cmc and cwtl stos std xor push xchg sub mov out jne (bad) jb inc enter lock mov imulb cmp cli lret and push enter lret mov xor adcl jae andl cmp bound push imul notl pop jg jno push clc stc test mov scas iret (bad) fistl (bad) cld adc out sti sbb sti add inc push lcall lret mov xchg xchg jbe adc cmp leave daa jmp mov dec lcall cmc cmp or adc fistpll pop xor adc xor pop pop (bad) cmp pop jmp aas js mov or rolb mov jl adc (bad) cmp test mov add jle fldt and test mov or dec xchg test mov inc rcrl bound hlt inc mov test cld mov js or jnp and mov popf adc push sub pop icebp mov loopne pushl mov arpl rcrl lods in and and mov das xchg or or push dec idivl sub mov shrb (bad) cmp jb inc sub inc xchg cld mov xchg xchg pusha xchg pop fisttp xchg push into inc jmp scas jl jae stos dec ja orb jmp repz xor addl leave push or adc cmc jg mov notl call mov sub outsl dec es sub sahf lock jmp mov xor add push xchg arpl out add push outsb push enter (bad) loop cmpsl or (bad) mulb fistpll mul mov outsl pop not mov aas add dec sub add xchg pop jge cmpsb jg push pop pop mov aaa or xor pop nop je dec fist jmp add movhps pop jbe imul cmp jmp mov (bad) cmp sti cmc jmp xor cld scas mov aad stc pushf lahf sbb or icebp (bad) jo mov push inc jecxz pop pop mov add stos test shll ss mov jp mov jge ret jmp fadd add aas xchg lds pop push add pop pop xlat outsb (bad) mul inc (bad) ja stos push pop aam in cmp sub jge add mov mov cmc xor bswap (bad) orb mov repnz jmp lock std sahf mov dec jl pop mov sbb cltd xchg sub stc sbb sub out mov leave sbb dec or push mov pop dec incl dec push pushf cmc jo mov or jo ds add ljmp pop add cmp pusha in cli lods fldenv pop adc sti fs push scas in push repnz jmp inc mov fimul inc movsl adc pushf adc or xchg push das call outsl push es jne adc cmp incl leave lea inc or loopne sbb cmp imul lock inc out fdivs pop add decb mov sarb in and adc jns add jmp pop or (bad) data16 jb sti das ljmp xor incl data16 jle xchg push lret out adc jae dec pop in dec mov add xchg rcrl iret out std jns or mov pop addr16 daa jg ss inc adc fild push jne push shrb idiv mov dec xchg adc dec imul mov fdiv add test mov mov (bad) inc ret call xchg sbb test inc dec xor jl imul sub add ds push or bound mov loope (bad) jbe sub jo mov pop and and mov fnsave inc push dec popa mov add ljmp jmp bnd mov jl jae pop sarb jmp jb rolb mov jae jmp mov xchg (bad) sbb adc orb das out (bad) dec jg xor lds cld inc mov xor nop sub pop mov stc xchg test das xor mov push jg pusha mov shlb inc pusha dec jmp pop mov sahf out jmp or pop cld ss fwait lds test push js lea jnp xchg jmp or insl pop sub scas popf pusha jo,pn rorb rorb aam (bad) jge jmp pop cmp mov (bad) sbb sbb inc or decl add push add nop enter adc scas cmpsb jg cmpsb mov cmp mov push xor add dec add clc repnz and cs or add inc jmp mov push in sbb lahf push inc outsb jge fimul clc hlt add orl hlt mov lret sbb loopne mov inc adcl (bad) ja pop in stos jns mov pusha (bad) pop stos fcompl addr16 (bad) cmpsl mov mov mov lahf pop lods and fisubr lcall or hlt cmp sbb inc (bad) fnop xchg xchg rcrl cmp jmp pop mov xor mov lods repz pop jo xchg pop cmp flds lock add fstl add out or shrb pusha mov add lock jmp and mov stc lret mov adc insl js cmovae outsb add lret (bad) testl pop jnp cmpsb insl gs push (bad) decl sub pop (bad) cmc and sbb push div test negb push gs jo xor dec sbb or push scas test lds push or add roll iret jg pop and lods ret add xor jmp fmuls lcall lock jle mov push mov pop in les pusha frndint cs add dec scas rorl test lahf jnp mov imul movb shr imull xchg push push adc mov or and ss dec and cs mov sub cltd mov fisubrl jge jns pop fstps xor inc test out adc rolb fsubl sbb jecxz cmc loop rcrb sbb adc imul clc lcall insb add in movsl std sbb xchg out xchg out sub xor (bad) popf icebp addb addr16 pop leave mov test addb fwait push adc push aad std xchg jmp and mov outsb push xor int push mov and fisub dec mov std cli mov (bad) jge mov push jnp xchg mov xchg jmp cmpsl push popa jle imul das jmp cmpsl cmpsl iret push jmp fs inc clc out les lods out flds shlb nop xor or mov cli adc pop inc push aad push cmp pop adc das add mov mov cs xchg xor aam pop pop jge sub (bad) int3 out js fidivrl pop cmc xor xchg std mov std int3 xchg nop adc jg pop mov rcrb mov pop dec ds xchg mov imul cmpsl jle adc push xor fnsave pop je mov pop sbb movsl sub push (bad) aaa push xchg fdiv jne xchg cmp call cmpb pop popf (bad) rolb and dec jmp pop and (bad) (bad) iret (bad) in neg rorb push rorl mov das sub pop sub stos je adc scas inc cwtl stc std popf pop (bad) (bad) xor pop hlt pop cli (bad) (bad) inc jmp sbb shr mov test js (bad) mov sub repz push aas outsb out aad les jne cmc jbe sub push jp ja movsb (bad) mov jb inc mov xchg adc negb call or xor in outsl mov (bad) pop xor mov out jb cmp mov aam roll and pop sub jbe adc jmp (bad) xor repz xor or imul (bad) ficomp arpl aas mov fs and dec lods xor out fnop sbb add repz mov mov imul pop push adc add xchg mov js popa popa mov imul mov pusha inc sbb test add insl cmpsl mov add cmp out and adc sub mov cmp sub rorl mov pop ret adc xor test xor or adc loopne add shlb push adc fisttpll mov adc pusha outsb xchg fnstcw mov sahf jecxz add xlat pop jnp xchg mov cmpsl or mov xor loopne add add cmp fiadd and movsb ffree cmpsb mov or push jno push cld mov push mov dec fiaddl push mov icebp stc loopne add enter mov cltd fisub movsb shr cmp fcmovb push add inc mov (bad) into pop js inc push add lahf or push or enter aam xor inc pop pop lret xor cmp mov dec dec orb shrb push add es (bad) popf sub mov fisub sub sarl add dec add xchg out mov jg movsb mov mov call sub sub add mov mov cmp inc adcb insb or fcoms jge stc dec mov mov loope push mov jmp or lock enter int3 inc inc mov xchg enter addb outsl cmpsl ja jecxz sbb shl sarb adc test lcall sarb jg push add xchg adc jp fwait jge scas inc mov std movsb xor or test mov pusha lcall fdivl je movsb (bad) fild mov push stc loopne (bad) mov mov sub stos rcrb sub int mov adc pop jecxz push xor imul (bad) daa js push lret call pop loope clc inc test lcall out add cmpsb add add hlt mov daa add ja je push out dec mov push out rcrb and xor inc loope xchg sub add fimul add jl push clc aam out cmpb mov jno test jecxz dec or add xchg xlat loopne adc mov es cltd in or ljmp mov add push dec jnp loopne stos inc mov clc add add mov adc fmull jbe cmp add andb (bad) and movsb icebp shll enter aaa mov mov xor inc rol ss scas adc push and cmpsl pushl adc add sbb mov loop dec cmp pushf outsb int3 andb add sbb mov pop add cmpsb add mov shrb cmp or sub in jns shr mov int3 clc cmpsl loope mov (bad) or aas inc int sub lret mov xor lock add dec mov add inc sbb cmp insl inc test mov xchg push mov nop push nop push arpl pop out add xor mov xor sbb or push mov add outsb xchg inc mov dec sub or add fdivrs push add lods lds orb adc lahf es arpl add dec scas out nop insl push inc pop or jo andb ljmp sub (bad) cmpsb dec and sbb or icebp adc cmpsl (bad) push pusha push jne out and jg mov inc mov sub mov hlt pop or adc or lret adc aas xchg inc sub gs mov or mov inc add aas pushf mov (bad) orl or fldenv push (bad) mov in mov mov pop jl test sub aad add mov test fcoms mov xor mov and xchg fs fsubrs add dec mov daa pop nop loopne dec jge andl shll xor add cli pop mov gs xchg aas add sahf addl jle mov add arpl and pop inc popa cmpsb jo sahf dec movsl sub stc xchg out orb adc xchg mov insb xchg adc adc cwtl sub sahf roll dec fwait sub adc add mov push cmpsl dec in les jle (bad) mov test mov cwtl fdivr xchg jg ret adc (bad) clc setbe jp test lcall push add lods loop inc imul adc inc dec and xchg xor sub nop enter adc and sub push mov push mov (bad) js in xor jo xor pop adc aam je pop jb lahf xor pusha enter add imul sbb shrb mov cli pop bnd inc or orb ficompl and stos cld orb xchg add add push outsl cmpsl fcmovne in or dec adc xchg stc adc jl hlt arpl pop cli add pop out das sub push cmp dec arpl add into or cld stc mov leave mov dec mov pop aam and and hlt je mov loopne arpl push cmp and xchg outsl and nop fadds je popf and xor cmpl dec sub aas mov test jo pushf pop icebp in or xchg rolb hlt or cmp pop sbb int3 dec insb dec adc in mov cmp pushf or jae mov nop loope cmp dec push fcomp or cmpsb cwtl js and add ja lcall aam fcomps inc pusha insl arpl push imul es repz xor xor adc int sub add (bad) ret and out sbb icebp mov enter pop hlt leave ret inc jo xchg push xchg test and xchg movb or lods and lds mov movsl pop or adc leave ds and cwtl add lods shrb mov add cld gs pop or mov mov push insb movsb adc ret aam mov fcoml or xor popa dec jecxz sub mov fdivl adc lcall xor lock mulb or mov sbb cwtl in gs addr16 sub pop inc mov mov sub adc lea add inc xchg mov (bad) or push mov mov inc xchg pushf popa mov push data16 daa dec test je cmp pop and jno and add gs insb (bad) pop out mov loop push sbb inc or mov push out out rcrb or addb sahf sub aam loopne pop aas lcall or lret xchg cmpsl dec popa or fildll push lret adc jne out idivl ljmp (bad) cmp stos movsb scas mov and sub pop sub sbb aad and pcmpgtb bnd xchg pop movb loopne mov adc daa adc in loop add cmp jecxz cmpsb dec cwtl or aaa lea jns cmpsl add pushf sub xchg adc or loop (bad) xor fadds insb dec or loopne or ss push mov imul mov (bad) or add lds push sbb insb jl inc push jbe jb cld xchg add out xor dec nop and les unpckhps pusha js addr16 lds pop mov mov jg popf xor ja rcr in sub cmp hlt xchg mov outsl cmp js or mov pop mov adc iret jp pusha xor sbb add sbb xchg xor pop jl dec pop push mov or cmp aas icebp sbb fadds cltd les mov (bad) shrb cmp pop popf andl push loopne adc movsb andb rcll movsl shll bnd push add xchg mov adc add in je imul test addr16 fs or movsbl pop imul (bad) frstor dec cltd ljmp cmp fsubp movsl mov movl mov into xchg ror jb out inc dec mov mov adc dec add cmpsl es mov inc loop cmc add in in xor lret sub push mov nop sub add (bad) cwtl jbe pop xchg mov bound loopne insl orb dec leave and data16 add fwait test cmp push test add dec cwtl cmc ret shrb int3 mov add xor fdivrs add pop or mov xor xor inc pusha test mov call loopne data16 mov ret sbb mov adc jp adc or push pop fs cld sub pop les sub add xchg dec sub icebp fsubp loopne pusha pop stos sbb jo or add lcall jae fiadd xchg dec add rcl adc inc mulb mov push in add dec call pushf sub jns (bad) jo imul movb repz cli add dec das mov xor mov inc cltd cmp popf xor imul in sub lods add out xchg (bad) mov addr16 enter cwtl rcll std cld dec inc clc repnz push add mov mov mov add or add adc or and sub rolb ss or add xchg fwait jae insb lods fcoms push cwtl push jo mov mov ds inc add xor lds hlt add push out mov add jae fisttpl loopne xchg push imul popf sub jo jbe sub jnp or pusha dec je orb in adc mov sub movsb sti rolb inc adc hlt ficompl mov xchg mov into pop stc jnp int fcmove pop paddusb xchg jl adc int3 jle in sbb loopne push faddl pop cmp sbb into sub repnz popa loopne fwait je adc (bad) fild push addl xor xchg es test push call or xchg sbb in nop dec add (bad) sub add loopne fs adc fdivr add dec rclb or loop sub or pminub pop hlt add adc jle jmp andb cmp je shll push xchg add aaa xor add pushf mov fsts lods imul sub mov flds dec adc add sarl inc or movsb mov popa adc in scas hlt xor aam and xchg add or add mov fdivrs xchg or inc inc enter add arpl inc add (bad) xor test sbb jecxz popa ja xor scas ds dec fldcw leave adc or sbb and xor add addb jbe insl push mov call fmuls out mov js test iret jl (bad) (bad) orb xchg (bad) (bad) lea fmull xorl shrb js call xchg or inc call add push jns jecxz es add aad popa adc js mov mov mov pop mov enter xor add aam pop nop dec sub add dec sub push or popa jg cmp shrb sub push lea add pusha pop cmpsb push sub xchg sarl inc add movsl loopne sbb lahf iret sbb andb or incb xor lods adc mov fst lret js test aam pop adc les and sbb sub subb je fnsave xchg fstps fsubs dec mov sub das inc jns test cmpsb pusha aad inc js outsb xor mov sti add xchg loopne jbe out and pushf or movl lock adc xor scas sub ds aas pop xor cmp popa insb mov pop push dec fcomip flds mov and jo jecxz adcb rcll push cmp push inc add inc or pop mov lds inc xor mov das dec cltd mov add rcrb sub cmp dec fnstcw addr16 dec push faddl addr16 pop dec ret add loopne das adc inc inc repnz and test or sub jp add mov xor or cmp or pop ljmp lret in pop xchg cs rolb fdiv xor inc add mov and (bad) arpl sbb (bad) mov pusha enter lret add add push int add inc and or mov jge push and sub lret add aad dec repz add (bad) jo pushf cmpsl andb andl out or cmp fmuls xor gs testl add jge out mov sbbb inc pop in xchg wrmsr ret enter pushf and les (bad) stc mov (bad) push mov add les cld psrlq (bad) inc mov (bad) push add out sub or dec add push jne ret sub xchg inc ss aam dec daa test into sbb mov popa mov xor jne stos addb add out orb orb dec jnp ret jb dec lock out incb xlat mov sub dec loopne mov (bad) aaa dec repnz enter push push or fistp inc daa jmp loopne xchg pop jle add inc add mov jns lods adc arpl pushf pop in in and pusha lcall push rcll cmp sbb push xchg cmp inc iret jb mov pusha mov inc pop push inc xchg add mov cmc sub js icebp cwtl insl test inc mov jne adc sbb fisttpl mov in mov jl dec dec sub shl rorl pop pop mov inc mov dec cmp push or repnz adc or dec sarb test lahf or cmpsb paddusb sbb aam cli lahf push sbb add pop add adc lock adc (bad) lahf adc pop mov or pop rcl (bad) mov stc and and add fadds (bad) call push imul rolb pusha ja pop repz and mov mov add bswap jnp cmpb out dec scas push mov push mov xorb imul and mov dec add mov pop repz test mov pop xor dec add pusha cltd test popa (bad) xchg ret inc dec jl sub jne pop fmull add (bad) iret stos mov push pop in scas mov and adc dec enter adc add fisttpll mov bound fmull (bad) (bad) pop iret fwait adc adc add orl cwtl scas rolb dec dec mov push jp inc fdivrs (bad) adc ret daa insb fadd xor lods add cld int in mov idiv subb nop cmp cmp xchg enter push dec pusha lea inc pop cmp (bad) aad xchg dec enter add les dec enter push adc mov cmp inc jmp into shr aam mov pop mov enter cs pop push push add in fadd dec jnp jo push aaa add sbb add xchg loop dec mov loope mov push fimull add sub push cmp (bad) enter icebp (bad) mov mov and (bad) inc ss adc add loopne cmpl call (bad) aam cmp gs or jno mov inc xor add mov fisub inc sbb and adc outsb cmp cmp fs sub js pusha xor fmuls mov and (bad) adc cli pushf add pop out sbb mov test mov push or outsb pop cmpsb rorb jo sbb call popa cmpsb fcmovu xchg mov pop clc fldt (bad) fchs fdivs sbbb insl lret adc stos mov xchg xchg mov cmp adc sarb xor adc fnop hlt (bad) lock js mov loopne pop jg cwtl sbb add stos pop or cld and inc add or les xchg shrb je shlb test and xchg adc mov and mov popa sahf add fcoms sub dec add (bad) popa sub cmp jecxz dec pop aam add popf dec cltd orl lock jbe int3 or mul or and mov cmp lcall xor mov push test lahf loope dec inc cld jecxz arpl sub lock dec ds push inc push push mov dec add fsubs mov (bad) mov adc insl push inc push sti or or inc aad add sbb icebp dec ret sbb xor mov cmp xor sbb jl add ljmp jmp out lock and pop xor lea mov call insb popa sarb adc sub test popa pop sbb xchg jae add mov cmp (bad) (bad) xor pusha add js add dec mov add ljmp cmp adc dec add sub lea (bad) imul add out jmp loope les jmp jl xchg rolb (bad) jo test inc enter jmp add add fstl shlb mov lock mov rol lods inc stc cmpl xor pmulhuw dec ljmp xchg or sub cltd int3 inc sub aaa scas inc add inc pop sub lds ljmp cmpsl push test xor lock sti in loopne in orb inc adc inc lods add xchg adc addr16 xor fdivs mov xchg clc or mov mov adc add movsb sbb jne push aad push inc pop xor mov adc add push ret clc push mov and adc inc mov loopne pop dec mov add (bad) and push fwait test or sbb stos pop push out enter idivl sub jmp mov mov cmc xor rolb sbb jno insl push add cmp mov pusha jle pushf mov xchg add push inc adcb movsb add mov and push lret js cmp mov add mov add jle repnz les sti out dec xchg jnp adc push clc fs ret popa pop pusha stc cmp notl pusha mov loopne add mov xor mov push dec jg sbb iret aas jmp (bad) sti cmp cwtl cmp out cmpb xchg out mov or popa dec repnz mov clc or rclb fildl lea jns sub lcall pop fisubl in pop dec or sbb push add pcmpgtd cli ret mov jl addr16 or push pop sar jge cltd mov push sub stc inc pop jp nop sbbb mov sbb or push sub cmp jmp add cld arpl push pop pop jl,pt bsr mov add test stc sbb or sbb mov inc (bad) mov add mov add mov xor mov push xchg out icebp ja test ret enter jmp cli mov jo mov dec mov ss xchg push cmp jmp push push iret lds popa adc (bad) std test jo das mov fldenv and or push pop lods inc mov push les icebp loope lahf cmp mov jns imul ljmp (bad) std inc mov xlat xor jge cmc add dec enter adc hlt call dec ja test jo inc in scas pusha leave test mov cmpsb xchg mov xchg jb xchg cwtl int3 (bad) or pop cwtl jecxz xorl into ds orl out jno lcall repnz add pop (bad) pop sbb push pop mov int3 adc mov aaa add add (bad) lock add jmp call sbb int3 rclb cltd and xor mov push xchg (bad) hlt jecxz mov gs loope adc mov pop inc sub cmp mov popf jle cld push push lods enter scas dec pop rcl adc add cmp sub xchg rclb mov repz xor rorl ja mov adcb mov sub test sub je xor jb xchg movsb hlt jo cmp data16 sub pusha add sbb or inc insl mov seta std popf int3 in add or xchg clc rorl add cmp imul aam mov repz aam mov insb sbb cmpsl popa rorb add cwtl mov fldt repnz xor xor adc (bad) lock pusha add adc sbb imul lret jbe movlps jmp xchg enter add cmpsb jmp or jo es fdivrl xorb cli les push mov out aas pop mov mov ffree lods sbb mov push dec or clc (bad) lock (bad) cmpsb sbb movsb cs add push insl mov mov mov or rolb inc mov xor cmp add ret mov movsb movsb mov js xor movsl and fs sub movsb sbb arpl and lret gs mov inc subl lods or push add fnstsw xor mov dec push ror mov adc sbb dec and cmc dec jp fisttpll mov das adc mov cmp xor int add sub pushf add jle pop aam mov push sahf push mov push dec mov adc subl mov sbb outsb mov cs in es push rorl leave inc jge shufps adc xor fsubl pop addb push sti dec mov push movsb cwtl js or addb adc mov pusha fwait mov adc sbb in xor andb sbb imul cli (bad) push leave or fsubrs js iret cmp push mov xchg push aaa pop push shrb jb scas add js add push sbb jnp xorb pop mov lock add es outsl and in adc sbb (bad) mov inc add clc or mov les adc cmpsb orb fucompp jnp test push xor mov push and cld pop add add lahf rorb iret jae nop pop add test pop je add mov adc sbb fs mov ljmp adc stos mov popf call add out idivb sbb cs in pusha jb hlt pop shrb add add loopne std call daa jle adc sahf and cmp add arpl pop push fstl dec sbb sub sub frstor bound pop add cmova xor inc pop and xchg ja je aam mov pusha sbb push and xchg cld or sbb dec fcmovb pusha shlb push add lock mov jecxz ljmp mov in add inc sbb xor push sub cld push adc push or and pop ud2 fucomip repz jo fcoms or (bad) fsubrl pop out rclb hlt cmp add in imul dec cbtw jnp push xor enter lock adc arpl (bad) in and xchg push xor jle aaa ss pop mov jnp mov cmp cwtl mov adc ds imul xlat repnz xorb mov (bad) mov fisttp les enter push cwtl out dec adc aam pusha mov mov inc popf inc in jo pusha das fcoms inc cwtl push clc jae push mov jo adc add ss jnp inc test mov mov (bad) sbb adc jmp pusha sbbl enter dec scas andb das pop outsl inc pop lds add mov dec jecxz daa cltd aad (bad) jbe pop ret adc or stos adc pop and fs imul adc loopne adc cs aam in xor addl adc into ret popa out sbb lea movl sub add mov xchg pop outsl (bad) mov dec push cmp pushf mov test add push xorb pusha fimul xchg (bad) mov adc loopne aam fwait gs xchg add jbe out in int3 xor dec add lock cmp adc dec es or out es and mov lret adc adc fdivrl sub mov imul sbb or lret adc movsl addb rcll xchg and dec push sbb or and push mov push bound jae lods push push dec inc pusha mov add repz pop mov andl add sbbb jl fldl add scas dec ds orl loopne std in test mov in add imul rcrl fs xor (bad) (bad) lahf mov cmp andb jmp adc movsl popf aam loop sbb hlt call test or pushf inc adc mov push pop pusha push negb arpl addb push xchg lcall and xorb ljmp push (bad) je mov aam movl or dec mov sub push xor (bad) popa in xor out gs lahf xadd aaa std add pop mov xchg fyl2xp1 loopne stos andb inc and movsl movsb mov sbb push stc sbb imul rcrb and and int3 adc les mov push rolb andl (bad) pop ret mov inc clc and popf cmpb add jne jl loop cmp push inc into ret mov mov adc xchg inc out aaa add sbb mov or repnz fcmovu fiadd incl pop xchg shrb arpl cwtl movsl xor push or repnz mov test add cmpl adc mov fcomp inc daa adc or sub jo pop add enter popf pop push sbb cmp mov loope test pop push out jmp sub jo lret push sbb or xchg mov jae pop ja stos pop add cwtl bound adc jbe mov add adc addb enter add sarb mov into inc fmuls ja inc pop mov lret mov in and jnp scas mov or fild mov mov cmp jp xchg pusha sbb lahf dec push sub xor push mov push inc push adc inc inc js ds jno jo jne outsb (bad) sbb xchg and push adc cmp mov jno sbbl add mov and daa (bad) pop jo add rcrl xor dec ficomp add jns sub and setb pop mov mov ljmp rorb mov xor jae js jns movsb mov xchg outsb add jbe loope mov loop int icebp xor mov add jnp dec xchg pusha cld imul int (bad) adc adc add clc shlb (bad) mov adc inc xor and mov adc (bad) inc or test push dec mov dec int3 ljmp scas push mov add (bad) xor jmp leave or pop aam clc mov cmpsl add popa inc rcrb inc mov and add or pushf push aas push (bad) dec je loop add in aam dec fildl sar test inc loop xchg mov cwtl or jns pushf sbb or popf xor in loop push push adc lret imul mov stc fldl2e xor icebp xor je cmp adc pop popa pop sub and jmp notl sub push ret pop (bad) push rol arpl jp (bad) jl inc mov js rolb pop adc xchg in nop (bad) aad add cmp fwait push inc mov xor or or and adc dec add (bad) mov add xor movsb mov test stc sbb lock jne sbb mov inc stc sarb sub inc or pushf stos insb lods les mov add (bad) xchg aam cltd pop out popf inc mov push add jle or orl clc sbb push add or popf inc stos jb icebp mov inc cmc add push xchg data16 mov sub stos cmp mov xlat sbb pop mov dec hlt adcb add push nop in push mov (bad) dec into fcompl ss mov add inc (bad) test inc pusha repz int pop xchg shlb daa arpl stc dec mov dec mov (bad) cmp adc adc fmull nop dec and jmp dec mov pop cmp rorb add xor and scas insb pop xchg rclb pop push cmp fsubr pop fldl dec aam dec add jge jl xchg into xor insl je out in adc loop or pop sbb pop sbb sub inc cmp mov dec lahf mov lret sub (bad) push mov loope dec test push mov and ror mov ds cmp cmp hlt mov subb inc lods loopne or cwtl cmp jle dec sub ret xchg jp sbb or pushf mov mov cltd mov and ret sbb adc inc ficompl push nop movsb adc and movsb mov stc inc in add cmp andb pop cmp pop inc inc pop adc js and ss imul dec add add lahf or mov cltd je and and or fimul mov add ja cmp xchg cmp sbb sbb push xor push add loop mov dec add bound lods hlt add mov add enter jne clc inc clc and or adc mov fxam inc mov (bad) sbb lods inc popf int3 test push jle mov and push popa ret int3 popa ds mov jmp cmpsl pop js pop cld (bad) jbe push or pusha jmp push inc aam ds in pop sbb push jg outsl push or (bad) mov test js xchg push xchg push loopne adc pushf out adc or jno or sub in push cmp xlat adc cld nop les jns mov adc add enter jnp into fild cmp fs in cs mov mov imul mov into mov push and movntq pusha add lahf loopne or or or movsb inc jae pusha out or mov dec arpl test sbb xor jle aas push inc jne setle sub xor jns (bad) adc mov lods mov ljmp pop push movsb jns inc addl shl in dec lret push pop sar mov mov sbbl stos or pop mov add jmp jge imul pop nop mov mov push call or or cltd je sbb inc and inc rorb insl inc adc sbb xchg inc jne ja subb fiaddl int3 cld mov call aas mov clc and xchg mov and adc hlt sbb mov cmp or out je arpl scas sbb mov push and sub mov leave add xor jmp nop fwait pop xchg insb nop enter push dec repnz jno addr16 or jmp cmp inc (bad) lahf fs jge pop test enter push inc cs jbe andb inc cs or push inc push push pop dec ret push cmp mov or inc push mov mov aaa mov or and mov jae dec sub xor pop xor inc push (bad) iret dec lret test or sbb sub or push es dec mov into gs jo push cmp lods add adc mov jp mov xor lea imul jne lods mov xchg rcrb xor lea inc aad and xor pop cwtl test insl inc addb xchg pop xlat or sti out push push mov mov push fisubrl adc inc adc in sub call pop push mov cmpsl jns sarb push xor fisttp ljmp mov loope and inc loopne mov cli arpl jbe or fsubrl ret mov sbb sub dec add and mov loop cmpsb test cmp xchg and js pop and sub xor (bad) or fild dec jl mov sub xchg xchg jbe cmc enter or xor dec sbb xchg (bad) adc and or adc test movl fwait fs dec loop dec xor call push daa xchg aam mov test mov outsb push push inc ljmp roll lods pusha es cld sub push sbb cltd mov cmpsl push (bad) mov pop adc int3 (bad) stc dec lock lods je push pop (bad) movsb dec xor inc cwtl nop mov or sbb xor or xor add mov hlt mov or xor jl fwait clc and add jbe (bad) add sti aam sub push cmp xor and out imul ss mov insb jae or sub add add pop cmp mov and xor jae fs or and jae add outsl mov je jg icebp hlt lods xchg sbb jmp hlt adc scas aam jne cltd mov mov xlat les jecxz adc jle adc and stos pop movsl adc push fsubl cmp xchg enter les popa or pushf ret xlat cmp loop inc fcoml inc jmp adc dec push adc cmc or sub add mov sub sbb inc int3 inc xorl dec ja cmp and cmp addb lret jecxz add cmp mov jbe push pusha arpl outsb (bad) xchg mov and mov sbb push sub xchg xor mov test mov mov mov sbb mov es mov or mov lock or xchg adc lods enter xchg sub mov mov xchg cltd cmp add test xchg cltd cmp push cmc jecxz mov in push fsubl cltd xor je loopne or test sbb mov add adc inc ficoml sti lret xor jecxz sti fildll or or lock adc xchg test mov (bad) (bad) jbe mov add gs sahf push push outsb and pushf pop clc sbb pop pusha hlt cmp cwtl sub popa mov cmpsb enter mov fnstsw call jg and push dec mov pushf cmp and mov cmp mov int3 sahf mov add mov adc sbb in add icebp in cmp and pop pop xor xchg mov or addb lods shlb jge pop stos dec data16 in sub fdivl lds (bad) imul pop xchg mov cmp ret cld (bad) add mov cmp add or cltd push add xor jnp pop orb jb,pn cli roll add xchg push les mov add loop xchg inc icebp dec jb dec jg les outsl test movsl cltd dec movsb mov mov imul xor inc and mov outsb sbb lods mov and sbb mov cmpsl sub dec xchg sub inc inc ret sbb dec sbb aaa pop cmp imul jbe jae leave jnp lock pop add (bad) push xchg add cmc (bad) test dec inc xchg dec add cld ss cmp das movsb rcrb pop test add rcrb sub mov (bad) fwait jns xlat hlt daa xor inc inc cmpsl cmp faddl add sub xchg adc repnz mov mov mov dec out pop cmp adc cmpsb repnz and dec pop dec test jo loope inc int pop xchg js sbb dec int3 subb add rolb push test fwait dec insl xchg cwtl push clc dec inc nop imul adc mov inc jl add mov mov icebp dec call push stos xor notl lods add or (bad) orl shrb adc movsl add cmc cmpsb call mov or or cmp in rorl aad test xor cwtl and or das adc stc fs (bad) fs push xchg push orb test ss sbb add les mov inc sub test fiadd and sub add ds pusha movsl hlt mov mov icebp out cmpsb ror jp push mov ret (bad) lcall sub sbb pop lret btc push mov fidivrl outsl or (bad) xor scas cmp mov inc cmc ds or popf inc test call mov pop std jo or pop icebp int3 cmpsl inc lock xchg pop mov mov sbb aaa dec lret adc push sbb sub or hlt cltd mov pushf pusha rcl pop add or out push in movsb add and sahf pop jp sbb fstp xor mov jge mov sahf cmpsb mov ja aad rcl add adcl xlat test dec cltd out mov sbb sbb inc mov mov xor mov jb adc cwtl clc xor les mov jmp orb add mov and (bad) jmp push adc pop mov and in mov aam inc add (bad) cmp pop sbb or add jg loopne sub adc or (bad) mov movsl add out (bad) test inc and push or out sahf lcall dec xchg nop add mov or lods sub jmp pop out mov adc mov add (bad) jno cs out mov jns and and outsb jne dec jo add icebp stc or mov cmp fiadd and lahf add inc test jo push iret insb mov arpl dec sub mov mov inc add jno lock xor (bad) lcall sub add jae pop je cltd inc mov sbb mov push shlb (bad) mov insb sbb (bad) (bad) ss enter arpl push roll outsb ret sar cmp ja clc xor push fs push xchg clc xchg int cmp ds cmp aad sub das xchg inc fnstenv add cmp sbbb and adc sub xlat cltd push enter sbb fcoml xchg mov mov or insb pop cmpsl stos jecxz push (bad) data16 mov push and test icebp xor rorl pop pop in add push push aam sarb pop outsl cmpsb jl and xor pop cmp add cmpl aaa jae add pop icebp je mov fs (bad) or jb mov pop or mov inc in add xor or and ret enter or test test lock ljmp push push mov arpl xchg mov push and dec inc cwtl ror clc loop sbb mov call faddp test sbb xchg es enter add mov arpl mov xchg lret clc mov or popa push cwtl js rclb ret xlat scas mov mov (bad) jb jl pop inc dec cwtl outsb ljmp cmpsl lds ficom mov in and sbb aam xchg xchg mov sub sbb lahf pop or jg loope mov cmpsb and pushf mov aad test imul aam test dec mov addb sub mov insl jmp jmp inc push adc cmp imul cmpsl in dec inc out xchg inc icebp jns jl mov pop js add lret int3 mov rol scas inc push test sub sar jo sub test jbe or mov int3 xchg popf mov cmpsl push jmp aam (bad) pop mov add xchg imul popf or add cmpsl and mov mov push fsubrl and adc add pop test or insl push xor jecxz imul xor cli sbb popf adc mov sahf lahf add pusha stos mov jecxz jnp inc mov pop xchg add cs xchg dec pop mov cmp adc sub fsts sbb add rcll jg sub xor ja mov js push mov push clc adcb and cmpsl mov nop mov xor scas sbb adc imulb inc fildll dec push lea lahf das (bad) cmp adc out test add hlt xchg pop xchg add push push mull in sub sbb insb movsb jg addb cmpsl cwtl jae das add push shll adc mov inc shlb icebp push pop dec fldenv sbb (bad) and data16 addb aaa adc scas fstpt out inc arpl cld sub clc ret out pushf lcall mov pop int3 xchg cltd movsb adc jae xor cltd shlb mull (bad) rolb pop clc add pop fiadd shrl cmp dec arpl call push dec push mov pop pop mov (bad) adc sub or sub jbe xchg mov aas cwtl mov sbb dec mov mov mov inc and xchg sub push jecxz rcll adc mov (bad) xor jne hlt jno fcoms stos repnz popf and (bad) and aas push jnp add (bad) je leave or in xor add in scas bound add std push add mov mov xorl add stos dec ds mov or rcrb pop inc pop fidivl cld sub mov hlt pusha sarb pop mov or or mov cmp daa dec add push stos loopne xor xor xor and fsubrs jns loopne mov push test loope dec aad icebp mov cld scas arpl xchg sub inc cwtl ds scas inc stc jmp js int sub add push push gs add pop push push mov sar lea mov cld jno pop pop or mov js pop popf inc add rclb nop stos inc movsl les xchg stos and and inc mov sbbb insb xchg lock ret cld add js dec mov adc push fisttp andl mov mov xor das inc (bad) (bad) mov or mov dec sbb add imul cmpsl cli (bad) xchg pop fcomip add jbe xchg push push xor clc or adc and data16 scas or orl fldt fwait lcall or rep xchg outsb and cmpsl jns jl in jl sub cmpsl enter jbe das lret sub (bad) aam inc jb push ret xor inc cmp push aam push adc pop pusha inc lret fild fs xor imul lods or movl sub dec mov xorl lock and enter and ja and mov rcll subl pusha (bad) cltd insb cmpsl dec mov pushf mov adc fildll pop xor sbbl call mov push inc loopne or mov in lcall xchg xor xchg nop imul push fcomps pop mov dec push das and add add nop aad int mov lods cwtl fs notb icebp and or mov add sub xor xchg push pusha dec enter push sarb nop lods jnp dec jb pushf sbb in push add cmp daa xor sub icebp rolb dec cmp or mov aad shlb sub or jg,pt loope popf pop repnz es add or mov add out or daa add adc loope lock or inc loop or outsl mov and leave push dec imul adc sbb jmp pushf sarb sub in test pop or addr16 jns ja and pop ja xchg test aam and mov xor js mov and xor jns add rcr movsl int3 scas aad inc and pop cmpsb popa xor (bad) inc and and mov out stos pop or mov jb sahf clc mov jns ret sub adc dec mov or pop int sbb and je add add repnz mov jno test in add add nop and lods push repz mov fs or pop mov fcoms xor in xor jno jb pop or call or roll jne inc or xorb lret sbb or in sub pop add out sub mov std adc popf lock add shrb adc fs or and jns push mov jno add and into mov inc jg in add xchg jp std and (bad) int3 add test rcrb and gs cmpsb cmpsl xchg aam push cmpb adc je mov orb hlt popa jbe jns scas roll push jp or mov les add into mov xchg jb add xchg and cmpsl fs rclb or clc xchg mov and adc mov dec mov xor cs in add ret dec stos jl adc movsb clc or loope pop in adc fildll insl xor nop and imul or cmp and sbbb (bad) flds ljmp int daa push aad pop movsb xchg or lahf jmp jns orb adc or mov xchg pushf idiv pusha pop movntq out and insb xchg movsb aam fwait test js out mov inc insl xchg rcrb out pushf or and enter or add or mov jp mov sbb les jno mov and xor pop fcomps insl rcr inc stos das cmp xor cmp mov adc add or clc add fwait pop pop clc add stos cwtl add jg aaa xchg xor pop xchg jno mov xchg add fsubs not dec or pusha or and add fmulp mov jg xchg cmc and loopne or adc mov arpl sub mov int3 sbb jp add xchg jg loope fcomi cld pop add imul sub fisttp mov aaa cmpsb mov lods icebp outsb add rcll cmp icebp test inc mov fidiv test jmp adc sub fmull xor mov fild sbb pushf adc (bad) push cmp add pop sbb stos or xorl dec push mov scas jo and pusha (bad) mov ljmp fs jecxz mov cmp add cltd jo int3 aam add push pop leave dec adc daa add cwtl mov mov out hlt cmp inc hlt mov dec enter mov and rorl vmovaps fidiv push out sbbl jbe and (bad) push cld (bad) aam inc and add or push push inc adc adc clc mov xchg sbb test mov dec lods mov pop push xor sbb inc mov lret sub mov out adc mov out sarl cltd lods sbb pop cmp xchg dec lret repnz or into mov pop dec cmp adc stos dec pushf leave and mov jl add das std or jbe in sub pusha sub cmp popa insl jne xadd inc nop cmp dec and adc rep repnz jo insl lret sub mov aad stc mov inc int3 daa in inc mov mov je add test icebp out lods mov add aad test adc popf or lea push enter sub mov int3 stc pop pop test test ljmp imul pop nop inc test arpl sbb cmp sub sahf mov xchg int3 push in mov shr push in shrb mov in push fs mov jno or push add fimull mov mov sub xchg or add jl,pt jbe lods (bad) fdivs cmpsl rorl xchg insb adc adc mov cmp cltd shrb loopne or mov mov sub mov outsl dec adcl mov repnz add xor flds and adc and push mov xchg dec add pop push test cs add stos movsl scas xor xchg cmp shlb shll add movsb sub add xor data16 aas mov orl inc mov lock jecxz inc xchg mov cmpsb mov jnp inc and and mov jns mov jb cmpsl xor or inc mov sbb lock push xorl popa xchg dec (bad) call movsl and cmpsl movsb cwtl xchg rclb inc jns or add mov mov xor push je insl dec dec sub cmpsb cli push adc and or xor jne lock sub or shl lcall nop jp cwtl push lds sar pop add lahf mov mov sub fs add lahf mov enter cmp xchg inc mov adc in or xchg add mov (bad) lock insl shr in shr jmp sbb stos stos pusha mov pusha jbe js jne pop and aas lcall mov xchg loopne xlat ret movsb dec imul push cmp in daa adc pusha adc (bad) mov cmp inc add out mov push insb mov fimull arpl sbb mov inc lahf mov mov pop pushf sub sbb sub js mov adc sbb xchg add xchg adc xor cwtl mov out bound cld adc and int3 mov fmuls jge add loopne imul les add pop (bad) add fwait xor in cs cld mov cmp fldcw mov inc sbb ret pop jge xchg imul sbb mov adc rolb xor lock pop notl rorl dec push mov inc push js (bad) or add adc cmp adc scas add jmp cld in cmc les adc jns loopne out and add nop mov cmpsb mov or mov push pop inc test mov and add xchg fwait jo ja std mov fisub out pop xchg pushf ret mov test add add ja pop sbb ss and mov js sbb push dec out sbb jno inc sub jnp decb cwtl or mov fsubrl push cltd mov test imulb loope add mov cmp out mov loopne push inc pop or jl ja call cmp daa dec cmp dec push enter aam aas xchg fimul cwtl hlt mov mov cmp add and sbb xor add or lods dec lahf xchg fdivl es or rolb xchg out and mov or pop jle dec gs or xlat mov cmpsl adc mov cli jmp pop test mov pushf add cmpsb pop and mov xor lods test xchg (bad) mov jecxz incl cmp mov add or jge test sub push add or mov lcall loope stc jb pop mov adcb or mov sub adc jb (bad) inc mov xor inc jecxz adcb pop add cmp mov sub and test xchg or lods xor push test call je js mov xchg js pop or dec push out out adc cltd shlb andb xor xchg mov cmp xchg mov enter imul lahf or adc jb cld lret fsubrs push loopne int3 mov and (bad) or fiadd mov jecxz xor or mov fnstenv aaa outsb mov hlt sub lea xor es in (bad) push jo and cmp xchg sbb ljmp mov mov aam lahf pop test lods jg std clc iret sub and stos andl cmp push xchg loope cmpsb add lods xor insb add lds mov cmpsl xor adc adc rcll mov mov add sub dec and inc add lret rolb pop lret add xchg xor push or sbb cmp or out sahf and adc sbb roll jl add push mov add inc add shlb enter sub daa in subl ret add sub xor out and mov les rclb test mov adcb xchg xlat xor push cmpsl (bad) iret mov out jge jecxz test pop xchg pushf nop push adc pop add mov xor xchg cmp and cld or push outsl jle rcrl or pusha dec xor pop ret lods adc cmp (bad) jmp xchg orb mull inc adc dec sbb mov mov arpl fnstcw or mov or cmp mov mov cs outsb add xchg je add or popa into sbb rcrl xchg je sub out mov add adc mov inc sbb adc jne push loope xchg mov adc cs shlb js nop adcl or xchg mov pop adc scas test (bad) popl shlb lock and shll and sub dec clc pop adc rclb sub cs rorl xor out pop cmp cmp jae cwtl (bad) jbe push je insb adc test clc mov scas scas push or js dec jne adc ficomp out outsb inc mov adc fdivrs (bad) push sti enter test lock leave push nop lods test lods mov sub je cmp lods daa sub inc call xchg icebp scas enter push outsl rol sbb pop dec loop push andb inc pop add add lods movsb jo sbb jp add inc mov outsl adc dec insb cli pop pusha js push fdivr jge (bad) add add pop and test mov out add ret popa add xor push cmp (bad) jl xlat mov lods jl push adcl sub sub icebp or inc jne push or cmp lret adc push ret and imul js sbb pop push or mov jno and in add add nop rcll lock ds cmp add sub jl cs sub pop ret pop jg lcall sub inc push (bad) push pop loopne sarb or xchg or pop inc sub xor sub push (bad) push test lret add mov int cmpsb lar popa lods jp cmp jae,pt or dec js dec pop lcall jmp fwait or inc out test lcall push adc or cmp jno mov push js or jge inc pop mov stos sbb insl icebp add sub and add clc push cmp sub add jp incb sbb push clc aad add or fmuls das jbe js or or or add xor dec je subb xor rcll xor xchg pusha push mov add jno mov xor sub and mov xor add (bad) adc pushf push xor sub jns aad add out push call (bad) out in aas call loope cmpsb lret addb es into popf out inc jo cli cwtl imul mov sti cmp jmp fistp cmp mov pop sbb xchg mov jns popf icebp pop inc stos xchg orb mov sbb fmull movsb das fadds movsl loopne call sarl dec addl insb sub bound mov adc add mov inc lcall hlt jne loopne or push push enter xchg adc andl cmpsl arpl mov add addl push sbbl dec rclb fdivp or lods or inc aam sbb jg cmp cmpsb (bad) mov jge sbb not pop sbb sub jmp push test jae cli xor dec push test stos insl or (bad) insb subb loopne push popa scas xchg nop xorl adc inc iret sbb sub sub out inc lock or cmp flds ret add push js jno andb add psllq pop rolb ds and sbb movsb iret enter or jno inc mov push and jno,pt repz jecxz pop rcrb pop adc add pop pop sub add sahf leave fwait add or test divl sub pop inc popf js mov enter sahf xchg arpl add inc add int adc and sahf lods aad mov test jb or cmp jle out jle mov add adc cmpsb sbb scas fcomip pop dec test inc movsb sub adc pop leave xor cmp or and inc leave in add cmpl or fwait nop and or and adc mov push outsl sar lods adc sbb insl test pop clc xor xor dec cmp (bad) mov movsb xchg or testl add push xor or pop inc cmp add mov popa stos and enter xor xchg adc popf pop inc and and lods (bad) repz adc subb lock jne pop je inc inc mov movsb dec and add xor xchg call aaa loop hlt and es ret dec jnp and push jge inc js add rorb in or xor pushf inc addl pop js mov adc ret dec movsl mov repnz adc jmp aaa pushf leave inc add imull subb (bad) inc adcl int3 shlb add stc sbb jp fdivrl add (bad) gs and pusha or nop cld inc xchg mov xor jmp cli sahf out out movsb rolb adc mov popf mov repnz cld ret jmp and cs inc inc xchg cmp gs cmp cwtl in or call add mov fimull jbe add aam idivb aad xchg pop or sarb cmp leave mov movsb loopne sub or aam pop bound pop nop test push xorl mov orl test int add pushf and sub insb pusha orl lret adc jl mov inc pop inc arpl lcall xchg add (bad) jl jecxz mov push jno pushf adc imull fwait and xor in xlat lods adc subb mov cltd jne xchg mov add adc lret pop sbbb (bad) pop push sub imul sub inc fwait std dec addb jbe add mov (bad) scas jmp or adc dec and mov add nop add bound loopne test pusha mov lahf mov pop add shrb add popf xchg fstpt pusha test fidivl jmp jb repnz fist test xchg jl pop xor jbe xor or out je inc add loop ret xor and stos notl dec inc inc add test add sub in and push mov and jge lret sub das add sbb or out mov adc mov iret dec mov fs adc mov adc and add dec mov sbb mov sub inc sbb adc add fmull mov mov bound push addb lret mov mov mov loop or mov je push loope in into cmpsl out sub xchg xchg add lods in popa scas mov add bound xchg movsb cmp dec or and (bad) fildl fs in add sbb or sbb mov rcr mov js cmp dec cs lea or mov movsb inc xor es pop xchg arpl movsb sub notb pop sbb cltd jbe in insb add out pop test movsb inc mov xchg hlt inc pushf in jae or push add xchg (bad) lods push push (bad) mov dec int3 lea push test and inc sub add (bad) mov js add jmp pop and out pop adc inc pop clc cld inc and push and adc loope xor cmp call xorb sub (bad) push and stc jmp ja add adc sti push je add ljmp mov sub mov out outsb and sti js xor push xor out pop call adc cld pop and jmp sub pusha lock repz and fistp shr es (bad) iret (bad) mov push adc cli sbb pop add stos add nop arpl or mov cmp pusha sub dec dec cmpsb sbb movb sbb add int3 jp pop loopne push fldl2e jecxz and ror out js pusha jl mov jb lds adc and or dec sbbl mov leave xor fsubrs js adc pop inc sub stos jns in inc dec mov (bad) mov aad xor or adc leave addr16 js sbb jbe repz iret ret (bad) inc xor sub jns add adc jne xor jbe cwtl sbb pop fmuls adc pop mov fmull or or cwtl leave xor cmp jl inc sub mov lds test lods sarb jmp push sarb nop mov sar inc and cmp roll ljmp in shrl sub int3 add or dec mov mov xor dec mov pop adc cmp leave sar and iret sarb ret xor mov sbb jge sub pop push int3 cld push rcll sub sub and jno xchg adc xor xor lcall pop add sti mov out inc push fs sbb add pop or test or dec icebp or and mov mov dec inc fisubrl pcmpgtb repnz push adc sbb rolb cmp clc xchg (bad) int3 jbe les mov repnz adc dec sbb icebp push adc pop adc or jne sbb rcr iret xor ss addr16 je push jl cmp add inc lret pop xchg sub cmp sbb in lock mov dec js lret (bad) call mov mov add insl cmp xor fcoms loope bound faddp or add fmuls cmp pop xor clc js dec jge test fdivl or lods jne (bad) mov add inc (bad) xor (bad) sbb inc aad jo (bad) sbb xchg xchg inc add dec rep sbb adc iret lods push add lods jnp sbb push cmp sarb int in push fdivrl or aam adc mov dec (bad) xor cltd push (bad) mov dec sbb enter push aam dec fdivs mov inc or and cmc inc sbb pop (bad) fprem test shr pop mov stc pop clc mov jbe dec or jp xor outsl jl sbbb repz xor inc or lahf in (bad) loopne xor mov jne movsb add sbb jl sbb adc lock adc and fcoml adc cmp test loopne scas aam in xchg mov xor and in xor jne mov inc sub test inc push add push insl sbb jl stc int test test popf add adc mov dec jle scas add mov lock cmp dec test push orl in add lcall mov add fiadd test cltd dec dec mov pause push jmp add ret cmp jmp int3 inc and cmp sub xchg gs inc movsb int3 or aam stos mov mov jecxz lods pop test lock mov mov cmp add fcoml mov xor add into test lret repnz les sahf xchg cmp or add cmp adc fsub orl (bad) xchg pop sub or loop jo xchg clc xor or or test or add mov test mov gs push sti lock aam pop shrl inc (bad) mov stc imul iret adc in add int3 outsb bound ret adc add dec dec test cmp stos lock mov mov fs test add out std aad adc iret int mov push push mov call adc inc xchg and cwtl add pop jl push xchg sahf inc sarb adc mov and push sub in mov shrd cmpsb mov std cmp or or hlt mov adc stos mov out dec sub pusha mov or mov ss test or rclb enter js add or push push add inc and pop jmp enter hlt scas ljmp xchg xor mov or push mov pop (bad) fbld rcrb xchg and js jl jl jl add rcrl mov cmp rolb add jns pavgb mov jnp jle sub out fcomps adc cmp bound lds cmp in sbb cltd negl (bad) jbe shrb mov sub sbb or xor jb mov (bad) fadds jmp add flds mov cmp and scas rdpmc push ret inc adc mov in jb outsb adc and inc andb test mov or or out mov mov and inc mov je sbb cld mov inc dec ret loope fldl push dec andb mov loopne push (bad) mov xchg int mov int3 roll pusha mov cmp inc ret cmc mov adc xchg xor sar jae in adc or jmp sub and les (bad) adc test xor or and cmp push lea mov mov stos xor mov mov sbb adc add cmp repnz addb (bad) icebp repz jp (bad) dec add mov js xor jo fbld adc mov dec and idivb sub add mov fwait and orl cmp pop sub push jnp add (bad) sahf jl or in add dec gs add inc add jno cmp or inc xlat sub movb int sbb jecxz xchg or pusha mov add mov mov repz sub mov xchg divl xchg sbb out stos addr16 clc add sti rorl sbb xor and subb shll sub ret xor int3 lcall add imul sub adc nop and push je inc aad xor pop xchg notb adc xor dec les push add or sub and pop or dec scas and ret and int3 aaa mov mov cmp scas bound add push fiaddl pop ret inc cmp add mov mov push adc into xchg sub fimull mov xchg fsubrl rorb andl insb (bad) add popa adc outsl xor lds cs or das ss scas pop xor mov add adc outsl ret fmull or fdivs movsl iret or repnz mov insl pop push in outsb ret test popa adc push or cwtl sub pop xor add subb xchg jg push inc mov popa ret xlat dec and add (bad) outsb push (bad) jns sub mov (bad) mov jo sbb loopne mov fs jle popa aaa loope mov push push decb jmp cmp add outsb mov dec sbb adc in sbbl out xor add or or addr16 or dec ja pop icebp and xor fdivrl mov adc in loope outsb fs jae push add aaa jge mov clc loop je or or faddl pop call inc popa add cwtl dec lea mov loopne jbe sub enter cmp aam cmp push (bad) int mov shl loopne fmulp addb add inc push stos sbb mov sbb ja hlt test int3 inc sarl fidiv mov jg xchg call mov jle mov pop sub push sbb add (bad) mov mov test mov dec mov loope xchg adc aad and jne inc push jg int push pop push les jne imul jmp loopne leave add and xchg insl add xor sbb fidiv in in mov xchg adc idivl push adc mov pop xor xchg mov jecxz adc lods lock ret inc bound out xchg and pop orb fcmove rcl nop and pushf and inc mov jo mov cmp mov pop push call fimul cmp xlat int dec xchg or into (bad) rdtsc sub rorb pop ret pop add or fnstcw pusha movsb daa dec orb xor add testl jns orl xorl or aad dec or jmp in ret push xchg cmp pusha test arpl jl mov cmovo push fadd pop aaa add and add out dec repz and push add out mov inc dec sbb bound aaa pop mov adc loopne (bad) std add pop mov je lret adc loopne xchg cmp test repz les push add add data16 add mov adc icebp out dec cmp push mov (bad) and loope mov adc bound cld mov or inc mov mov and xchg (bad) and mov sub lds or test pop mov add xchg add int pushf sahf or popf dec test js add testb add int sbb cwtl and jp dec xor inc lcall or jne loope bound mov mov (bad) pmulhuw inc and xor orb jae int3 add adcl fstpt imul popa lods sub std sbb jne roll mov adc jbe pop scas pop adc and inc fsubrl int mov test jle lds adc les xchg mov int3 popa xor mov das mov adc clc add hlt addb dec (bad) xor insl xor lea popa rcrb jno dec jle movsl cmpsb mov add gs repz out dec rcrl dec adc pushf lea int3 jmp mov popa nop (bad) xor xor (bad) add xor rolb inc adc and mov pop and (bad) (bad) xor add add mov jo cmp rolb imul jo in out adc adc push mov jl lods pusha sub adc or les pop add insb scas idivl mov pusha loop popf mov push (bad) test fs int3 inc cwtl loop test xor xchg pop add fdivrs inc jns add push data16 aas inc sub fimull xchg push lock mov inc aam jl fmuls sub push shlb (bad) cmpb inc inc add pushf mov sub sub or and aam fidivr ljmp fldcw jb les pop push dec aam ret sbb adc mov xchg dec adc (bad) call mov data16 sub push inc repz add cmp xor push lds and xor test popf xchg loopne push insb mov sbb xor xchg fimul data16 mov xlat add dec ljmp dec enter push mov xchg nop pushf inc test aad add cmp or sub cld sbb sub pop mov sahf jle test sbb xchg ljmp or cwtl subl (bad) or inc add repnz push stos xchg pop adc adc pop shrb jmp ret xchg sar sbb in add cld add mov xchg push jge loope xor fsubs add data16 in xor ficompl cmp (bad) stc shll add fbstp iret add mov push sbb jb pusha stos lock cmp or pop adc rcrb fidivrl setns mov mov movsb mov cmc nop hlt and mov subb adc xchg xchg jno and cmp push xchg add mull mov cwtl pusha test fdiv rol jecxz pop mov mov or bswap xchg adc inc push mov ds add push rcll fwait shrb lahf sti cmpl jg lds and or sbb add sbb inc data16 loope add insl inc push mov insb ret pop jne add mov inc mov or xor addr16 pop push jne push pop aaa xchg add adc inc adc shlb adc inc adc inc sbb shll inc popa add cmp or mov sbb scas mov xchg dec (bad) adc or jae lock pop cmp or faddp js mov int3 and mov idivb int3 lcall icebp or (bad) pop pop addb cwtl outsl adc out stos add adc pusha cmp adc addb out int add in lock add je loope push enter lfs pop pop loope mov bound adc or dec loopne or sub call mov out sub push rorb push sub cmp cwtl pop cmp insl dec imul cwtl dec inc xor iret sub ret or clc add aad ss or xor mov icebp aad mov imul add xlat or hlt sbb lods mov (bad) mov lret mov cld pushl ljmp fsubrs add ja cs je lds (bad) pop jge rolb jne inc mov cmp repz push les sbb dec lret and insl push fsubrl pop jns sarb into mov mov in sahf jno adcb roll mov je pop shl les lahf xlat subb notl ret add mov dec cmp pushf cmp imul sbb std lock adcb js (bad) pop loope jmp leave dec xchg cmp add les nop and push fs jno dec xlat bound mov jne sbb jne jno pop push rclb jo repz and and popf mov mov cmp fs jl call pop jae xor and jle adc xor xchg lcall jno mov test add xor dec leave dec lods and sub (bad) and sub push inc jmp lahf add sbb sub int3 shl sbb insb test jne mov (bad) add jo (bad) sub movsb pop js adc test adc loopne leave scas sub xchg sub cmp not pop cli std sub add bound jge mov cmpsb ret add or int jl iret dec out add mov int3 aam xchg test jne repnz mov or call xor push out int3 fimull adc rcrl inc sar pop xchg out icebp repz xchg jb in lret or mov xchg pushf mov mov adc mov pop jnp mov fwait xor and movsl iret aaa mov cwtl (bad) fcoml jne inc add mov add test jo out cmp sbb test and xor add clc xchg insl xor pop add test popf xchg cmp icebp push jne xchg xchg pmulhuw aam inc aas mov push mov stc add popf scas bnd or and jne add push xor xchg xchg add push push pop addr16 mov mov and and jl sbb xor add aam xor rorl sbb fsubrl sub retw pop and mov or mov pop add jne and popfw cltd dec in clc cmp outsb dec xor add daa popf cltd mov cmp test (bad) xor sbb jl cltd out push in inc (bad) repnz add mov or sbb jne orb xlat loope pop sbb test mov add sbb dec je je or xchg fcomp dec cwtl sbb popa adc mov dec bound test cld pop xor outsb jg les enter adc jl dec push lods adc dec sbb es idiv sub push mov rep and sbb lock or xchg and adc sub nop bnd bound push test or rcrb xchg adc pop or dec mov int3 cwtl call mov push dec fdivrs pop and mov mov test repnz fsts add lock fisubl movsb mov and addr16 icebp jae sbb mov cmp stos or ficoml xlat nop fadds lods xchg adcl cmpsb in or shrl adc xor imul out push nop push rcrb inc ja jbe rorl sub sbb loop push pop adc lock pusha (bad) ret push push loopne add mov cvttps2pi inc (bad) xor aam xorl inc sub or (bad) and pop test lock imulb mov push lods sbb cmp sub in (bad) test aas popa jl push (bad) cmpsb stos loopne add jne jmp cltd adc pop cmp scas add xchg cmp sub xor ds xor mov cmp data16 clc in out ds add fcmovnu adc les add fs out dec (bad) ja lock jg xchg or lea enter ret mov fstp dec rolb or fcomps mov (bad) aas mov jp fbld push pop and jl add cmpsb mov mov loopne xchg cmc lahf cs pusha mov add push or jecxz push dec adc xchg test out outsb jno xchg pop mov fsubrp fbstp jg add jo inc int3 hlt in mov data16 mov cmc adcb or fs (bad) pop sbb mov cmp mov mov adc imul sbbb cmp popf xor enter sbb push add repnz jle jg jnp dec sub adc icebp ret clc adc scas xchg inc fdiv addr16 sub inc sub aaa imul xchg xor mov lcall push pop test cwtl sbb lret pusha cmp xor adc jb and rcrb xchg shrb fucomp push mov lock add in dec test movzbl sub dec sbb or add scas or xor ret adc daa sub mov sbb or lret and push jg pusha popa push push outsl or xor pop ret mov jg cwtl inc adc add pop mov add pop lret add mov pushf stos and xor pop dec xor notl lret and inc adc sbb push ljmp aaa sbbl jg sub fcomp inc outsl adc push mov lahf or inc gs testb adc rorl mov cmp sub pop stc mov xchg test aas mov les mov pop out insl ss inc or mov std inc mov pop push mov insl mov push sub sbb loopne addr16 xor push xor pop cmp cli div dec mov jmp dec popa fistpll ljmp (bad) mov cli pop jmp dec ret xchg jge test add pop ljmp cltd and jmp mov stc mov push xor fildll mov mov call loopne in sbb jmp jmp or mov xlat inc fstpl mov ljmp out jecxz add test aas jmp lret inc (bad) sub pop shr jl and pop push push push push ret jmp sub sbb outsl pop cld push aad sbb xor xchg mov cmc add pop and inc inc rcrb cmp and int3 lock mul imul cmp rcrl push jmp and jmp test jge js in or insl pop jne mov push outsb mov bound mov jg ret xor jmp shr cld movsb int inc mulb neg jl add lahf mov pop or push add mov jae mov pop adc scas mov add (bad) aas mov jmp movsl xchg mov dec jmp push xor cmc lea fnstenv lods add add jnp adc add sarl adc neg add cs das pop notl pop and push (bad) xor mov jmp (bad) dec fistpll add hlt pop add pop sub xor inc xor daa and pop aad daa add mov out sub pop push mov fistpl lahf jp and icebp mov aas sub mov push int3 dec xchg xchg pop mov pop ret lahf fadd into ljmp push adc cmp adc nop popf push xchg and pushf (bad) push cmp or dec pop sbb xchg (bad) jle js or pop cmp mov in mov lret adcb scas lcall xchg mov pop adc in pop inc sub loopne sub adc and jmp add pushl cmp mov xchg rorl ficoml and rcrb pop push je loop jle inc sub xchg inc mov cli push pop jg repz int3 or inc iret sub sub cmp jecxz or pop ja pop ret jmp push inc xor cli insb and push add cmpsl fwait jg pop pop xchg jge push mov ret mov test out and dec xor fidivrl or fist push push mov sub xchg push xor lret mov push data16 add aad and cltd sbb mov outsb test pop or and sbb in inc or in in pop or jmp mov push and jns push jecxz mov mov push or sub test (bad) out nop clc xor or xchg rorl push mov aam jo outsb and pop sub xchg movb xor xor rorb popf pop aas scas cld gs push mov pop inc lods outsl je test and inc mov push mov push or adc xor pop jbe call jg je into push xor add shrb ds push xchg xor inc or dec daa pop dec xchg sarl push dec iret push xchg inc or popa cmp out xorl and pushf sbb ds xchg xchg add mov jmp es std push push inc mov jecxz jmp int3 add push mov push aad aaa sub push xchg (bad) mov test cwtl (bad) stos incl ficompl repz mov cmc pusha jb jns out shrl scas xor jmp add inc dec (bad) push (bad) sub inc loope pop inc insl les mov (bad) pop hlt roll adc sub jmp cmp pop dec aad jmp inc push pop test mov add decb sub add call fs jnp fidivr dec sarb fisttp xlat insl lock stos pop sub pop leave movb fiaddl pop mov adc or scas xchg pop fistp push int3 push int3 ss bndstx imul pop sti xor jb add push jge dec jns mov pop mov jle cmc jo add xor jbe or pop rcr (bad) scas inc inc mov lods lds cmp les or shr adc fstps lret jg push neg push xchg outsb add xchg add pop push push mov jl inc adc jmp or imul and cld xchg cmp sbb push and pop add and add mov push mov xor add lock arpl inc jle dec fbld pavgw jno add jp loop inc jmp leave pusha lret cld loope out pop inc fmull sbb leave push jp dec lahf push sbb cmp cmp mov jg jmp out add pop push or or xor pop repnz shrb dec cli jg fsubr stos shr shr out xchg push pop xor add sti inc jmp hlt cmp insl not push or jmp inc xchg pop push dec fisubrl fisubl sub adcb idivb shr outsl pop in add pusha cwtl (bad) repz and jbe movsb push leave cmpsb in or nop xor lret cld sbb js nop mov (bad) mov aad sub xor add push sbb sti outsl sbb cs jnp adc mov jp loop clc xor sti xchg movsb adc or jns push ja std adc adc mov imul add cwtl stos aam mov cmpsl fisttpll aad test sbb or test cli push call scas xchg push and arpl outsl inc inc add rorb fwait movsb mov add scas pushf fistp sub jmp (bad) insb arpl cli adc std pop pop cwtl xchg or xor cli push mov push lds nop adc lock xor pop or leave lds jmp pop jo (bad) aaa das sub fidivr sahf push stos xchg mov jne jmp rolb dec ljmp (bad) in add or or hlt jle dec push push jbe push jmp adc adc loopne push ficomp addb jnp mov add mov and jmp in inc mov jmp mov insb add popa xor aas inc xchg dec push mov or pop popa or faddl or (bad) pop push mov push cltd pop or stc adc pop add sub xor or fmulp jnp add sahf incl out mov dec sbb lcall pop xor xor repz xor and fs (bad) add xchg jmp shrb pop (bad) mov ss (bad) push cwtl lret jmp inc lret xor mov or icebp in jb and mov add scas push sub sti jnp stc sub xor xor xorl jns inc stc mov das jmp jg jmp inc in sbb fildll (bad) arpl and out cmpsl in adc mov and mov cmpsb mov unpcklps fbstp movsl mov aas or xor ja pusha std jns (bad) xchg fwait xchg adc inc push into adc and leave dec inc cmp inc mov jmp cmpsl add jge and adc test (bad) sbb adc mov lods rcrl pop and testb (bad) clc cmpsb add sub xor lret out test repnz xchg and pop clc jbe lcall dec fsub mov in ret adc sub sub and xchg adc lcall or ret stos pop inc xchg (bad) mov sar xor adcb and inc cli stc push cli in mov mov mov xchg pop sub test std ja ljmp xor out nop pop mov aaa test ficomp daa inc orl push lret inc ss and jg adc adc cltd cs in add hlt fnstenv add std outsl add cwtl jbe aaa xor ret lret (bad) mov push fisttp jge adc xchg pop push push dec push push dec mov fstpt rcrb push cli (bad) cwtl das adc addr16 sub add pop fidivr shlb int3 sbb or seta jmp loope negl or stos push popa lahf jbe insl mov (bad) or add dec mov pop int3 add xor insb shll jmp push in (bad) fs imul out push divl cmp push xchg pop icebp or fadds in sub mov inc or jo fcmovnu fbstp in xchg scas add push xor ja mov jno imul repz adc pop inc sbb inc mov push push xchg popf pop cmp loopne dec ucomiss scas mov shrb add and lods popf and push add jns jmp push fstl ja int hlt mov jnp or pop jg mov enter add shr cmpb push cli jl pop mull lcall ja ficom scas mov test mov jne stos daa rcrl leave adc stos sahf xchg add cmp fsubl stc push adc sbb (bad) xor mov add push cmp xor add roll jg int or pushl cmp xor cwtl dec sub data16 mov jmp adc lock stos lds or out lar pushl adc mov loope push jmp bound out out adc ficompl mov add xor pop mov or inc mov push lcall das stos cld aaa or mull cwtl mov in movsb (bad) add pop jle xor adc shrb pop sbb outsb or lea pop std pop neg xchg aaa xlat xor mov shl or jge pop add mov outsl inc jno inc stc xchg sbbb or imul push pushf mov scas and popl shlb dec sbb mov cli lods xchg push sbb mov movsb mov sub (bad) mov xchg cmovle xorb mov sub or inc push (bad) nop mov jno and mov cli repz xchg push mov mov sti sbbl jecxz xchg push mov outsl cmpsb arpl adc or js xchg and sbb push jmp ja cmpl dec jg fcmovb jle movsb cli dec (bad) xor adc aaa mov jle insl ljmp nop and mov not clc imul ret push imul xchg jmp rclb dec push adc add and push add inc push sbb (bad) jne push mov xchg xor jg dec (bad) adc xor mov push push aam (bad) sbb insb dec idiv fnstcw jb es sbb push sbb aad mov push mov jl jns jae xor push loopne inc add mov inc add enter add shld or sbb cmp loop call sub addl pop popa or push stos lock xor lods das and ds mov int pop movsb cmp cwtl mov sbb mov mov lods cmp pusha fild sbb add es pop jo dec jmp mov movsb sub push push (bad) outsb push adc ret pop add insl dec fisttp aad push mov (bad) mov shr jns scas cmp push push adc inc rolb xchg push adc push push add add dec cs inc sub add cmp push cmp xor daa mov sub pop stos dec aad add and xchg std push pop adc push pop sub lcall mov push jo ljmp add loop lcall xchg push scas sub inc in and incl sub inc push (bad) fldenv pusha int3 cmp push mov sub smsw cmp rcll mov pop test lods and adc shrb clc js and and adc sbb adc lods sbbb daa sbb cmp sub push aaa call andl xchg cmp and add push lea add xchg clc mov arpl jae or push or mov out xor stos cmp dec mov sub (bad) lock pusha sbb and es add xor jg mov lock add cmp in pop scas xchg clc jmp mov cmpsb pusha mov mov mov mov sbb mov nop fsubr mov and sbbl es in out pop push rolb and and jmp adc daa and sub add push stos sub xor add jmp cmp mov pusha sbb sbb cmp add mov push xor cmpb or sbb nop enter sub inc jp stc int (bad) add add jle mov jl mov (bad) push cmp pop cmpsl cmp pop or insb adc das sub sbb rcrb pop push push daa sub dec cmp and enter add sub scas cmp es jnp sub test mov movsl mov sbb add mov and shrl pop pop loop lock jg test push and pop or adc adc loopne or mov xor cltd sarl dec xchg pusha aas mov push and fdivr xchg sub pop add cmp rcl test ds adc and push cmp sbb cmp dec pop xor ffreep cmp push adc cs pusha scas mov arpl dec cmp fsubrl sbb mov push cs scas daa push mov cld in dec (bad) lret mov jmp in das pop pop adc mov stos fdivl lret fsubs adc and and es jb call jmp push cmp lock ret sub sbb stos add push adc cltd hlt pop dec js dec das cmp and enter pop fistp stos (bad) push call cmp cli ret cs das lcall mov add pop mov fistpll sar and mov push and sahf hlt repz dec cmp fildl pop pop sub outsb xchg aas popa test aad sahf loopne ljmp push add test cld and mov enter mov jge cld and fcompl lds inc inc arpl pop repz (bad) mov add add pusha pusha rcr cmp loopne clc mov fdivr js mov lret (bad) mov inc mov mov daa inc or xchg mov aad adc mov pop ja dec in fwait lock rorb inc xchg in addl xchg pop jo mov in insl mov cmp sti sbb jne pop rclb aas rorl cmpsl in or or fistpl and (bad) mov inc pop add lea int3 and or pop call xchg mov mov jns dec sub xchg (bad) add inc out and cld aad add scas nop int leave add mov and add and sbb fsts pop aam les pop mov pop stos xor mov sbb lock and les rclb mov mov inc and psllw jo bound cmp movsb in adc sbb xchg add inc les lock dec (bad) adc dec arpl dec jns or hlt cmp push sub xchg in xor jmp sbb add or xor push jo aas xchg fistl dec add push leave lock je pop ja inc push orb flds addl pop (bad) je mov roll clc in add dec pop icebp add js fistp add fwait jo push rcr dec repz sub das mov add div (bad) mov call in jl push or jle add ss fsts and sbb push xchg aam mov fnstsw jg hlt sar and icebp pop int3 (bad) add push cmp mov ss xchg test adc add cmc mov pushf cmp test mov sub add push ljmp cmp mov pusha adc repnz dec (bad) je jae jbe icebp pusha clc adc adc ret or adc cs mov add nop mov mov jbe out lods xchg fsubrs fs pop bound cmp nop add jg and addb out sbb clc mov pop movsb and fdivl and fdivrs pop add jmp dec subl and sub jb (bad) call mov and xor ja xchg nop or jle lahf or arpl sbb inc xchg mov mov stos (bad) pop test pop movsl mov mov (bad) pop or sub (bad) xor jecxz mull cmp (bad) xchg mov ds adcb xchg pop ret insl fbstp xor adc or push or (bad) cmp mov push sub pushf in cmp pop xor adc sbb shlb fmuls mov loopne push mov aaa sarb je adc or and stos mov or jae sub hlt xchg orb fcmovnu and inc push mov (bad) push pop add mov adc and jae or add sahf rcl (bad) hlt orl jmp loopne sbb or lock xor push movsb and nop and neg rolb and test push popf aam mov or mov xchg jno add mov mov mov (bad) mov xor fildl xchg adc call and add stc xchg mov xlat push mov and cmp cmpsb je in fiadd in mov pop inc xchg push pusha std sbb mov in repz aam push cmp imul or lock cmp sbb cmc andl or ret enter ds pop or insl xchg and fwait stc push inc mov mov pop mov fs fiadd push cmp mov pop mov scas andl cmp push jle (bad) cmpsb lahf and lcall fstpt and inc xor add add and fcmovnbe lret cmp mov add cltd pop dec and add add fcomip xchg mov stos js jge cwtl fcom push aaa add jmp rcr (bad) loope xorl pop mov test movsb cmp sub dec adc stc xchg push (bad) fstpt leave nop pop add xchg add pop hlt ds out add push fsubrl arpl in sub bound int3 mov mov and pop pop in add ficompl inc cwtl mov rcl and addl add aad cmp test sbb cld aad push stos jo pop mov loop arpl xor inc mov adc clc lcall jbe xchg test jb pop cmp fild insb lods ljmp int3 mov jns orb ds in shlb paddb in add call mov xchg push sub push int3 fldl2e jl nop lods pop lea and hlt or add int3 ficom pop mov cmc pop xor adc or rcll and je hlt jl loopne add cmp movsl std loopne out fs pusha mov xlat inc and adc push add mov daa push cld adc inc mov inc adc add cmc add dec data16 jo out pop or push andl push cld and mov movsb pusha pushf mov push pop xchg pop sahf les sarb mov jne add sti fnop incl testl add out mov cmp outsl aad xchg sarl test add xchg mov gs mov pop and and jo movsb nop fcmovnb mov mov popa jge (bad) lock fcoml ds out pop sub dec push xlat sub mov les add dec dec mov adc mov mov insb ss or add sub dec out add fs pusha add xchg xor push (bad) leave dec shlb sbbb add (bad) pusha or add arpl cmpsb js add insb out add push or jle iret and incl popa cmp cltd int3 setbe pop and adc or and fsubl push xor movsb mov mov mov adc rclb adc fistp mov pop fdivrp test add jg push rcll outsb popl fchs aam mov leave pusha loopne push test xchg mov dec fsts jle test idivb aam push inc dec xchg inc mov mov outsl sub lods inc and inc loop imul mov jmp jo dec cwtl or (bad) mov dec inc cmp and ljmp xor adc (bad) pushf sub and lods push sub adc xor out xchg mov mov cwtl sbb into subl pop cld mov repnz sti mov xor add (bad) je cltd fcomps pop aaa dec inc and aas (bad) mov sbb push cs push mov icebp pop or add pop fstpt mov lret xchg into add scas int3 push adc test and mov xchg outsb add inc movsl push sub jnp push mov or pusha and mov add nopl (bad) loopne pushf (bad) jo dec fs push mov aaa (bad) mov shlb push mov fldcw or xor rorb int sub outsl cltd je loopne sbb sbb mov xchg dec in je nop aad push inc xor adc into sub and pop pop subb xor jbe jge addb sbb jp mov std and pop dec test inc in popl add rorl mov pop mov repnz inc xchg cmp pop mov push mov rolb mov sbb lock adc or inc (bad) push adc sarb mov test nop xor ljmp (bad) std icebp dec sahf les rolb sub nop int3 sbb or cmp mov insl fs cli sahf movsb adc cltd clc add xchg inc sub or jbe xor jns adc add mov call js add fsubrs jecxz call pushf loopne fs movsb or shll out dec adc mov mov dec hlt push test ljmp mov and cmp (bad) adc push les shlb in inc xor cld add or fucomi repnz ret jns add (bad) push sub xor xorl add loopne rorl je pop mov inc add mov loopne push pop inc mov pushf ret sub stc xchg cmpsb cmp dec movsb adc pop call push jle mov dec sbb rorb mull add mov leave into jns adc popa jo aas inc hlt mov ficomp add mov adc rorl cmpsl loope repz adc mov repz lret sbb test cmp (bad) push int or dec cmp test cmp (bad) ss push into pop or lock insl test or or xchg dec repnz mov and cmp clc push pushf lock xchg mov rcrl mov inc mov cmpsl or in jl pop sbb mov and adc scas out dec in push add stc icebp pusha xchg sbb push dec mov aam add pop and xor clc and add sbb nop and scas fdivrl jae mov and xor mov adc in pop ja push test mov pop es sbb add cmpsb mov and enter es and sbb pop pop mov (bad) dec xchg or inc pusha sbb or fstpt stos jo xchg call dec insl or xchg das jge and and rcl and pusha (bad) test (bad) ret sbb mov sub dec fs and mov pop jns or xchg cltd or insb insb adc add mov sub test ret push (bad) int3 stc lea mov dec mov jno add cmp lret xchg cmp sub mov jl xlat fcomi test subb lock out xchg pusha jno ss or shrb in and inc pushf subb scas fstpt in push fmul test cmp scas xor leave or clc add loopne add stc inc push (bad) adc nop sbb rol cwtl cs jno cltd fstl inc (bad) or leave or int3 mov daa and cld rcr mov stos lock fdivrl clc or sti sbb or inc mov xor (bad) call jle adc inc inc popa pop or jle sbb dec xchg xchg sub jmp push rolb or rcrb push adcb sti (bad) sbb fcoml add (bad) sahf fimull das mov ljmp sub nop add loop cmp cmpsl cmpb pop lret and leave mov add pusha mov mov adc cwtl pop (bad) push mov mov fcmovnbe xor sub cmp dec sahf pop mov hlt clc in lock aad sbb rcr push dec mov loopne insb cld jle mov test leave mov push dec sbb mov in and sub cmpl mov repz xor inc nop lcall repz xchg call in mov adc cltd jmp sub add loop and add add and stos cmpsb mov es sahf outsb fstps aam mov mov add adc inc int3 pusha adc and inc in inc adc clc in mov xchg adc repz int3 fnsave fdivs pop (bad) cmp or fcmovne out xor sbb push popa add and int3 fcomi mov mov inc xor inc int3 and fistl sub mov add fistpl dec inc pusha push mov add fdivs scas sub mov (bad) mov mov mov mov arpl movsb sub lea lods xchg and sub xor sub into xchg mov adc in dec and nop lcall fdivs mov daa xchg mov mov scas nop push or (bad) xor mov test inc fcmovnbe in les xchg notb pushf add jmp fwait stos xor rcll dec mov adc rclb add sub adc jg cs and mov paddb lret iret out xchg loopne sub push dec mov cwtl daa ds lea mov rdtsc push xorl sbb fcomip inc jb xor ds mov push lods sub test rcrb pop push dec js rcl dec bt pop jbe cld or mov xchg jp jbe cmpb cmp add pop lret xor loopne fldt in xchg mov fidivl jge in fcoml cs leave and push dec lock and (bad) jo add cmpsl pop push in xor adc pop mov les xorl push (bad) or add mov xor int aaa sub cltd mov cmp lret and mov les (bad) push inc lret popa jmp cmp cwtl cwtl and lock dec pop es cmpsl mov and fidivl mov xchg fcoms das mov hlt adc mov int3 (bad) xor xor inc (bad) pop cwtl les inc mov jno pop push call inc fisttpl test cmp enter and xchg es icebp xor add rorb adc enter cltd ret mov ror std inc loopne fisttp pop (bad) jae mov stos mov inc lods push jmp xchg in or sti add sahf jl shlb dec xlat dec sbbb pop cmp sbb push enter adc push add sbb pop push movsb cmp std jecxz push add and cwtl add inc cmp add pop add xchg add adc dec jno ljmp addr16 pop loopne and and mov test sbbl add hlt mov mov loope fsubs imul add cmp dec push xchg push lcall out lock out cmp mov (bad) fmuls and pop out fldt jmp sbb sbb shlb aas fucomp and inc sahf mov fdivp adc mov repz fistpl mov cmp cmpsb jp aad cld (bad) or jo sti mov lock sub jg fbstp push hlt and dec cltd jl stos lods lods inc cld sbb test movsb xchg cmpsl rorb xchg push and sbb sarb mov pop pop inc enter into rorl push stc loop xchg mov mov insb cmpsl and cli clc cmpsl inc clc (bad) aam fisttpl outsl lret ds test add mov leave cld orb je clc cwtl mov les fs sar sub fbstp xchg in cwtl jl test mov les jae inc sub inc pushf mov add test cwtl fcoms and jo call mov xchg pop pusha cmp pop or lea and jb and pop pop and and mov jp clc or enter (bad) clc mov cmpsb mov mov and mov ljmp testb sub add pop and movsl mov inc sbb mov cltd mov push or jae pop mov push rcrl test mov or jg or sub or shlb out mov pusha cmp mov pop pop and (bad) flds cmp mov inc ret jge dec dec cli lret xchg in sbb or fwait xor mov mov sub add inc mov adc cmpsl insl adc stos add repz fldenv and popf pop add dec and dec or jo push cmpb loop je inc adc add jmp insb add into or dec push call adc push xchg add pop fist sub mov sbb xorl mov repnz nop push (bad) nop pushf jle lock or push fcomp lret call lds pusha ror packsswb push xchg fsub movsb pop add push dec or (bad) mov sbbl dec lret pop pop sbb dec sub mov mov mov ja pusha fwait add mov mov insl mov test pushf xor mov inc mov add lock xchg inc xor movsl inc inc (bad) cmc adc add sahf rol mov and mov mov fstl push mov push mov push jns cwtl bound daa test dec and cmc inc add inc cld and and xchg scas sub test rcrl add cltd push idiv stos and cli mov in jg fisubl xchg hlt add mov inc add enter test shrl scas movsb sbb and mov rolb pop iret out jno pushf es and mov and cmp daa xchg popa mov ret cmp popa sarb movsb jns cwtl push add pop mov and or (bad) xor or mov xchg aas inc jl call add hlt push push les iret (bad) xlat mov leave rorl and xchg xchg je popa daa cmp push (bad) fildl push jno mov fidivl mov jo xchg pop jae ljmp ja adc repnz push repz (bad) or orb cmp add arpl (bad) jo cmc push add dec js add and inc in and jne jp mov loopne mov and sbb ret cs xor add pop das mov jp jg cmp adc cli and ds mov inc andb adc ret mov hlt sub cmc movsl js les jo mov fsubr pusha jnp daa lahf mov (bad) rclb mov cmp add pop or fldt mov adc mov ds aas inc in fs fiadd cmc mov and dec push xchg in cld pusha fsubl ss fistp sbb pop xchg adc imul js dec in cli mov and mov push leave fs xchg (bad) push adc ljmp cmp mov sbbb mov cmp and loopne xchg std (bad) push jg sub subb xor inc movsb push sbb adc jl sarb add and pop and adc sub (bad) fcmovnu push push les cltd inc inc mov dec xchg subb jno adc mov in out andb inc int3 adc repz push fnsave dec rol or test add es dec enter mov mov aam fimull movsb add (bad) mov in pop arpl mov bound and or stc push jl inc jae dec fcompl xchg sub jb and mov xchg mov or scas pop push mov (bad) hlt cs in mov push inc sub sub fdivs push leave xchg lock xchg inc sbb fidiv adc dec jmp cwtl inc xchg add into adc adc loopne and xchg jl,pt pop stc repnz dec mov movsb adc pushf jbe movsb adc movsl popa cmpxchg mov fisttpl loope std (bad) mov aam mov das in dec jbe test lret and int3 mov cmp sti test fwait add in out mov clc mov test and push pop pusha sub add insb mov xchg xchg daa mov inc roll fs hlt and dec (bad) icebp add jbe sbb je sbb push into in mov adc pusha cli xchg and (bad) jo repz and test and xor pushf sub fldl2e pop mov jne push adc dec push (bad) rcrb fnop je fs add push nop js mov adc shrl arpl mov dec (bad) push roll or stc sub les test in pop popf and jge leave int3 movsb or mov adc mov and mov movl lods loopne fcompl inc fs in pop add inc xchg icebp push je lods xchg mov inc or dec push adc mov xor lock sub xchg add imul or stos pushf mov mov sar pop call add sub add mov add push inc sub cmpsl mov arpl in loopne dec add dec mov daa xchg jecxz (bad) push inc sub sbb pop push scas or sub aam aas sbb or popa xor push xchg dec push scas mov clc push mov stos dec mov mov dec and add xchg (bad) shll push mov add sarl (bad) dec es les rol xorb pop sub (bad) movsb pop cli dec sub add fistl jne cmp or enter fwait adc clc repz aam mov fnstenv insb or cmovle iret dec mov and push sub xchg sbb sub orl sahf divb (bad) push and mov sarl pop imul adc insl pop fild pusha add and repz (bad) and inc add or add dec loopne movsl sbb mov pop sbbl popw pop sub enter mov mov or ret jbe or xchg jno (bad) xor mov orb pop jg fidivl fnstcw pop clc add xor push add add push ret xchg lods dec enter sub call dec sti outsl pop sub xchg sahf xchg enter mov add mov lock adc cs mov and je xor imul add dec dec mov adc add dec xor pop mov (bad) pop inc jo or sbb (bad) and push add fidivrl pop cmpsl and nop xchg das add rdmsr xor sbb sbb dec maxps jb adc inc pusha movsl add xchg loope xchg add pop mov (bad) push cmp sub mov push mov jns test sub and aaa fdiv xor jns xchg insb add sarl xchg pop stos cltd stos push xor push lea push das inc lods add push int3 mov js dec mov adc cltd inc insb das cmpl outsb or iret add add icebp mov push cmp xchg or inc test mov jle popf cltd dec mov adc mov mov mov subb xor push add std (bad) jo jno cmpsl xchg sub loopne mov mov mov pushf adc mov or pop subb stos mov leave repz (bad) mov mov cmp pushl daa mov pop jg mov mov and ds js popf mov pop mov adcb xlat xor out mov cmp fstpt loop shlb mov push add lcall push jb dec movsb mov cld sub popf mov test push std add inc fs sub dec and and xlat (bad) mov jl and stos mov inc xchg or xlat ret fucomi int cwtl add fsubrs notl and popf mov and aas dec add int3 pusha test add jnp scas pop mov pop insl aam jo xchg pop xchg mov push cltd ljmp cs fcoml mov ret add lahf mov mov daa sub cmp adc mov inc and adc mov xchg adc adc and mov inc adcb push mov sbb fcmovnb clc subl dec rcl gs mov push les rcl pop push push or jecxz inc xor jns and mov mov jbe or pop in jo push adc hlt cmp jecxz and lret or xor jo adc dec jb iret sbb test rcrb add inc mov loopne jle in mov or xchg jne dec dec cld sub enter pop shl mov mov sub pop in and cmp push mov sbb clc mov add movsl add push movsl fs pusha mov jl roll add popa sbb adc mov cmp or mov fdivrs (bad) mov push nop shrl push mul jbe cmpsb sub pop enter loop or sbb or sub gs test dec out movsl push mov das mov mov lahf popf dec and sbbl add push (bad) fstpt std jmp rorb imul data16 in inc and and xchg addl mov adc add aam (bad) mov (bad) popf mov push and xchg or sub mov lods sbb pop pop and xor stc aaa les js not bound les add cmp push lahf and leave ds push xchg popa ffreep add ficomp cwtl fdivrl inc les int mov and (bad) add push sub inc les (bad) mov jno sbb icebp add rclb repz fldenv mov aas notb pop xor rorl xchg (bad) or jne or add icebp inc xor dec mov push inc dec dec cmp hlt sub int3 and inc mov mov inc sub mov jmp adcl (bad) inc sbb mov clc insb mov pop pop mov sbb pop inc aam jae inc lods sub stc cli nop or in lahf add pushf xor xor and pop dec mov and xchg add jmp push mov rcll aas repnz in je in jg xchg mov push add and push test lock mov test pop sub adc jae and pop mov pop mov add movsl sbb inc mov or out dec or dec fldl add ficomp ret push mov cwtl and sbb adc clc xchg pop mov add add jl inc pop dec addb es mov (bad) syscall pop jge (bad) in mov dec es cwtl xchg push imul xchg pop or or mov aam inc dec jo xchg sbb ljmp inc adc mov dec or inc lcall sub nop dec rcrl (bad) mov and lods outsb cwtl fyl2x jle mov dec dec iret mov push jns xchg scas sub test mov pusha inc mov and xor fdivp add test adc mov fcomi sub and cmp cltd dec sbb or movsl fcomp pop push cwtl ror mov addb or dec sub rcll loopne pop mov xor daa xlat arpl test aas cld cmp cmp push dec fnstsw lret jne adc or stos mov or ret nop shlb js mov ret pop sbb int3 sub andb sub adc cmpl sbb push (bad) push xor or mov sub mov push dec lods add je scas or ljmp push enter add sbb inc js pop aam and loope lods leave adc push add loope je jb add lea add (bad) xchg cmpb mov jmp fsts fimul cmpb fcoms loope pop dec shrb mov jmp lcall pusha mov insb and or inc clc jno mov leave adc les fmull lock xchg add dec xor cmp jno xchg dec sub call bound fiaddl lods mov rcrb mov inc xchg sbb scas fisttpll (bad) rcl xchg mov sub jl sub scas mov xorb adc cmp jo add mov jmp jecxz add movsl les pusha cmpsl inc subb jo xchg mov rcrl cmp sub call mov das pushf push orb push add pop cmpsl testb es lock out xchg and push (bad) or lahf aad jecxz and push mov mov add ret imul sub dec pop in adc add dec xchg clc ss cli sub dec mov stos sub add pop sub fsubl pop rcl sub cld sbb sbbl test ja lret xchg and xchg addl xchg imul cmp xchg or and add or in and pushf add inc lock or sahf pop dec adc pop and dec neg shll int3 add dec cld cs pusha pop (bad) mov xlat fistpl pcmpeqb (bad) daa push test add cmpsl push aam mov jecxz or mov cmp adc nop leave aaa ret loope cwtl sub mov xchg js jp and mov fmul cmpsb loope (bad) push xchg ret movsb pop pop xor pop fldl (bad) in stc and dec hlt mov sbb js rolb lods js push xchg cmpsl mov push es cmpsb pushf dec les dec mov adc xor mov fcmovnu les jo clc enter add cmpsl in and fcomps push lcall pop xchg or shlb xor sub mov test lods and xor or stc jp test ja fisub test shrb sti icebp pop mov clc sbb mov lahf push or stc and adc xchg enter inc pop std lahf or sbb ret in mov jmp sbb push mov movsb dec add and movsl add jno push lods call (bad) xor cmp xor dec das xchg orb or push (bad) lahf cmp fdiv pop push add mov push mov xchg add or xchg dec movsb js mov mov pop and push and add inc mov mov cli sub daa sahf dec in mov pop in push jno ja ds mov add aas jo aas xchg pop xchg cmp dec test mov xchg push loope mov clc in mov and or mov es sub push adc (bad) cmpsl loopne xchg sub test in add hlt jecxz sub shrb or sbb scas (bad) jnp cmp fwait loop cmpl mov add lret cmc or enter push xchg add jo out daa jnp xor mov mov inc nop fiaddl inc or jl cmpl popf (bad) cmp stos and inc xor aas lahf je adc inc xchg pusha std sbb movsl mov cmpb inc push cltd mov add add pop adc dec add xor jl and dec daa mov lock push ss mov lods jmp loopne mov orb das nop into out lock inc cmp xchg sbb mov dec lods or xchg or insl (bad) push ja dec popl call jl inc cld push or inc or shll or pop fadd mov imull es insb rorl cmp int3 movsb call bound adc repnz jmp mov mov cmp out call dec dec mov and outsl inc push jmp sub imul pop cld push mov movl and popa jge stc or test jmp pushf mov iret xchg sbb pushf mov mov imul addb out out and adc (bad) xor sub loopne sub sbb movsl rolb test xor adc add pop inc inc mov cli add add cld hlt jle xchg orl test pop jl cmp hlt mov cmp or and mov bound pop test xor mov push xchg sub dec scas das mov mov cmp fs aaa lods or cli shll sbb and sarb and mov cmc xchg add ficom cmpsb aaa xchg es pushf xchg test sbb xchg test adc and lcall in xor fistpl add and fiaddl ljmp mov das into stc cmp xchg leave jmp mov andl mov mov les rorl xchg nop enter (bad) fs adc shlb dec pop rcrb xchg pushf or psubb dec sub xlat dec insb jbe adc pop pop adc (bad) test adc jo add pop xchg clc mov adc cs insb sub dec mov sub pop mov jae (bad) xchg or mov inc mov dec and sub jo cmc icebp dec xchg cwtl insl or je popa and mov xchg adc stos int and mov movsl fldlg2 mov cmp add leave add sbb (bad) mov xor mov fisubr xchg into pop (bad) cmp les and inc mov mov mov ret jno dec push or or inc sub adc push rolb dec lahf idivl add es mov rclb dec xchg push xchg dec sarb mov inc hlt xchg imul aas pop cmp push cld dec mov or mov mov test ret pop inc add mov fldt push push xor xchg pop mov jno outsl test shlb dec adc push sbb add ret into or rcrb xor js mov js repz pusha enter call jnp fsubrl cmpb push clc push cmp (bad) mov dec add mov js dec or cld test arpl sub pop xor xchg sub lahf enter cmp push dec aaa and movsb or jb mov rcrb xchg cmp add fs sub (bad) mov xchg (bad) (bad) xor add push mov xor push xchg and push mov pushf and ljmp add sub sbb ja pop xor adc pop jl bound sub test aaa roll ret mov les add repz sub ret call (bad) fmul mov xor mov xchg push cmpsl add insb out mov xchg inc mov subb add shrb mov mov xchg or mov pop clc dec fisttp stos jo ret fs adc ja in dec dec mov imul jmp pop ficoml das add sub xchg and and pop cmp (bad) jle jns push add jo jo adc lock pop push push xor mov je jmp push mov mov out pop or cld sub or lods and movsl mov lret js inc dec mov xchg lahf in and clc or add daa and (bad) aas pushf fcoml add mov fdivs mov inc mov les les loopne mov xchg xchg test es cld push xchg add cld int add mov ja pop cmc sbb xchg jno fwait pop dec fs or loop popa arpl lret fdiv inc pusha jl mov dec xchg bound pop mov add push jno int3 repnz stos and cmp jb addr16 adc dec jecxz rclb je sbbb roll cld ds push or fcmovnbe faddl sbb fdivs adc loopne jl ds push pop xor push pop addb or clc push rclb jne add mov in frstor fldt lock sub or dec inc ljmp push xor lret push mov lds xchg shrb pushf lret push mov test sub out into sbb sub jae or adc popf shll dec or mov push movsl and daa js xor push cmpsb das and mov cmp xor add inc pop mov or cmpsb add mov push flds inc loopne out in nop dec lds cmpl xor and inc dec icebp mov dec jo and sbb jle ja (bad) rcl xchg xchg in lods adc daa sbb daa inc inc mov xor jl clc pop add aam sub mov loope enter pop cmp push and and cmp xor daa mov adc add sbb cld ret rcl xor fdivrs and inc pop nop fisttpll pop jl in (bad) dec stos add push mov xor adc or in fs add les add jne push mov xor adc cmp shl add dec and mov inc movsb es xor mov sub dec xchg sbb icebp sbb test lahf rolb in mov xchg les or sub mov mov jae mov movsb add push or dec outsb sub push push cvtpi2ps je push lock push inc inc xchg clc or or lcall mov arpl sahf mov sub jo sbb sub ss lock movsb and test sahf pop stc test lock fstpt movsl add inc inc cmp add std sbb or inc or bswap inc and or mov pop dec iret xor or or xchg orb push sahf scas int3 (bad) xor pop clc daa in in and pop or bswap out jbe pop aas test int3 inc pop inc lods dec daa (bad) pusha add sbb pop test push sahf repnz fnstsw adc sbb xchg and pop mov adc push fs inc repnz add jl loop dec addl lahf adc or fadds sbb mov xchg imul mov cmp pop mov jecxz (bad) ds ficomp enter cmp jb and fistl push inc and mov xor cmp data16 sub mov gs mov scas cmp push (bad) pop clc mov adc sub out mov addb dec test rol or cmp inc (bad) mov push icebp sbb mov orb mov pop shrb insb (bad) and pop ret mov push xchg ret pop push cld sub cmp clc lds pop or sbb xchg sti mov clc inc dec xchg add mov mov js and call add shrl insb and pop flds inc xchg xor movsl js dec lds insl mov mov imul aad dec push fcomps mull aam iret add mov dec lock movsb inc (bad) scas pop mov dec call add cs lods xor cmp mov cmpsl sbbb mov add xor call mov insb or cli pop fs fstpt fmuls and and or jp add sahf lds pushf pop xor dec sub pop cmp hlt loopne std add inc pop test (bad) jne pop pop xchg inc pusha arpl rcll lret add aam mov and add fdivrs in inc or pop cmc mov xchg in push (bad) pop sbb test xchg cmpsb mov pop pop out push shlb fs repz jns inc (bad) jecxz imul imul pop ja xchg das rcrl mov scas pop andl mov cmpsb insb add subb sub dec sbb pop std and mov xor test lock pop fiadd shl aaa mov inc lock add pop lea fadd leave jno jae ss fwait or dec ret add or enter dec fldenv ja pop movsl xchg bound add inc jmp lods mov pop nop test adc xor loopne enter xor push lods sub inc scas pusha divps mov xchg mov or push push hlt or xor mov sub adc or and incl jno arpl and mov dec add inc hlt aas mov insb ret or daa mov lds cmp das dec frstor push sub shr hlt roll ficoml adc dec xor add scas or aas cmc shrb sub (bad) mov test sub repz pop (bad) icebp jge add mov xlat sub out xor pushf sub pop sub or fisttpl cmp xchg in cmp inc mov dec pop mov jg pop call mov adc xor loopne ja js mov push dec add test jo fstl jae cmpsl stc mov pushf adc adcl jl adc pop push and lock dec (bad) xchg lods clc xchg dec or or lods inc mov mov dec mov pop sub mov add or daa or jmp les or mov dec ret mov rcll add xor jo arpl and test mov push pcmpgtw jae cld ja xchg dec cmp cwtl mov rclb inc add pushf push mov cmp (bad) pop mov pop inc es push inc sbb fwait push jno and and jle iret lcall cwtl inc adc test jg mov push mov sub push leave int (bad) mov mov mov out icebp jbe dec cmp and lods (bad) stos jns xor pusha pop add or insb add mov inc cmp movl and mov pop iret leave dec push or sub outsb rclb imul sete pop mov lret mov xchg cmp test enter lret mov les mov aam dec js jnp mov enter rol orl sbb pushf sbb inc daa fdivp xor inc sbb push fbld hlt or adc or and notl es dec test mov call fcoms jb shrl and fistpl fwait stos (bad) clc sbb add mov (bad) cmp pusha mov rorb mov leave and cwtl and adc scas xor sbbb sub and js mov dec xor pop sar xchg cmpsb mov mov adc sbb clc dec inc push and fadds daa test jae movsl into les cmpsb fcomps mov cmp pop stos xor leave jo pop cltd js mov cmovns pop mov mov movsb call sarb pop dec fcoml mov nop shr mov pop add insb and aam hlt sub sub xchg adc xchg or je or mov sbb sti cmpsl and mov add test cld cmp (bad) sub or xchg push xor and or ss add add cmp add xchg mov enter mov add or xor pushf xlat movsb pusha lds and mov add and inc lret roll loopne mov xor push add xor bound inc test dec (bad) and fist xchg pop testb es or push sub add fdivs repnz mov das xchg mov lods add fsubs pop movsb or add pop push cli xchg outsl cltd mov push ret mov xchg or xor clc cmp mov or sbb xor add mov lock or push imul bound mov adc mov das pop or je adc nop fistl fsubs jp ret shll fldt push ficomp dec xchg clc dec rclb add aad sbb inc or in popf mov pop inc rcrb leave fldt xlat mov dec xor add cld ljmp lds sbb (bad) dec adc lret dec push adc and mov xor push in sarb mov mov mov mov out mov sbb sbb xchg dec mov dec test cwtl jge xor jnp dec push icebp add xor fs push jnp arpl and shr repz call sbb sbb pop xchg or inc in adc stos into or das mov jp (bad) test enter dec and mov push xchg in adc sbb mov js cmc int3 fldl adc mov rorl and or aad daa out xchg add lret pop adc sub jae cwtl mov test dec pop arpl test add popl or (bad) sbb out pop xchg dec subl ds pop faddl (bad) adc dec xchg addr16 sub loopne mov adc js adc ficomp cs sub push in push inc mov lds faddl jl jbe and mov cld add pop (bad) mov clc sub inc mov push mov rorb jne fmuls push fist sbb imul fild sbb aas cmp sbbb mov inc mov imul add adc in push int3 and fidivrl mov stc xor inc pushf push js push sbb inc ljmp add cmpsl fcomps sub xchg (bad) sub roll adc cmp hlt and add mov mov mov orl mov add inc push idiv cmp mov jecxz cmpsl pusha cmp xor xor adc xor xor in aaa pop fdiv add jne sub loopne mov jecxz xchg pop inc xchg sbb mov (bad) add loopne pop (bad) push idivb rorl (bad) imull and mov mov and jne push and mulb es loopne repz xor dec cmc mov push and out dec inc cwtl fistpll sbb xchg pop call xor loopne lea leave and xor and sbb mov insb add pop jl mov push dec mov leave sub call je add mov mov shlb push ja xor push nop rolb xchg or jle push mov xor sti pop aad in add ljmp xor lock lret mov lock xor cmp sbb test jns,pt mov je and dec fbld xor ret or and loopne in psrad jae mov sbb hlt pushf (bad) (bad) stos sbb mov mov xor loop push test push fstps std add sub mov fcoml inc mov in inc mov clc pop test ss mov add jne mov xchg pop mov and adc mov test test dec sbb mov aaa rcrl pop mov dec adc cld mov mov xor jne sbb mov inc mov cmp and inc xchg rcrb add leave loopne aad cmpb dec add rorl in cmp shrb sub mov xchg mov sbb pusha cli pop jnp or lods mov push mov adc addb sub xchg adc dec loopne push and movsb and cli mov add fistl jbe dec pusha adc jmp fbld mov enter inc push sbbl lock cmpsb les rcrb mov mov popf test xor mov and scas and xchg add mov add adc add cmp push xor stos xor mov push add xor jb int3 inc repnz jg push xchg or sub movsl mov mov fcmovu pushf gs rcrb cmp icebp sub adc mov nop or fcmovnu loopne mov add xchg xchg adc enter hlt stc mov pop clc int3 dec xchg xchg dec loopne,pt cmc xchg add pop mov orb dec inc addr16 dec add xchg add and fdivr and js aas js mov call nop repz add jns sbb push push xlat out loope cmp inc arpl les xchg push inc pop adc mov lock or jl enter or push outsb sub jmp mov xchg cli incl test inc push nop mov ret sti sub int3 out insb inc sub or xchg vhaddps inc test mov add cmp scas xchg test and test lahf clc test adc std add or leave stc sub dec in mov addr16 push addb fadds cmp sub stos cmp lret nop and pop fld or incl out lahf inc lock faddl cmpsl lods xlat fistpl in and fwait xor inc push sub dec ret push inc push and adc fsubrl je test in jae or inc lret fmuls popa and rorl add push xchg sub adc sub push std add (bad) jge xchg push cmp add clc hlt xchg stos xor mov in fisttpl add xor cmpsb push add mov (bad) lock cwtl mov and or into movsb xchg loopne push xor pop inc (bad) in (bad) xor into add arpl mov cwtl cmp lret xchg aas mov inc xchg out adc cmpsb xor les (bad) js xchg dec movlps mov or and hlt add call test dec cmp xchg jecxz mov fstpt (bad) (bad) inc push add mov xor mov xchg (bad) dec mov push lods push sub fmul adc xor mov add test pop jmp cmc and iret fcoms xchg jo cmp aam push enter add mull dec xchg cwtl xchg cmp adcb mov mov fadd sbb push xchg cltd jns mov pop lea dec sub (bad) orl jl mov add orb mov das pop mov ljmp jge xchg add hlt addr16 lea fcoml rcr sarb nop lret (bad) and pop sub and or xchg xchg cmp cld sbb and lock nop lock and test pop add mov xor lea (bad) sub loopne lret add xor cs enter mov es mov adc mov jo dec test xchg sbb cmp xchg cli fs dec add jp sub inc pop (bad) loopne je das adc and sub mov mov dec idivl pop push mov and adc adc lock lds mov jbe sbb lock sub lea xchg mov stc cmp test push mov sub xchg (bad) dec mov aam jecxz pop (bad) xlat lret add div mov add cli inc hlt cs mov push cld notb loopne in jns add outsl and in aad pop inc ds xor and sub aas mov adc ja pop mov pusha cmp and es pop mov cwtl dec or mov imul (bad) outsb fdivl test roll shll xchg ds dec adc mov mov test xchg in movsb mov int3 add sub cwtl sbb cld push xchg mov faddp and pop orb mov and out (bad) mov loop lock les dec test in std enter (bad) (bad) repz fsubrs iret cmp push xor js push xchg or add add cmpsl rcrl or jecxz jp mov hlt icebp add je inc cld (bad) mov pop fldcw in fistpl or pushl push test and aaa mov mov pop repz pusha adc subb mov jbe cltd ds fxtract xor inc je mov incb and dec lret pop insl flds pop (bad) and mov test jmp mov mov or test sar and test add mov add and inc aam movsl xchg stos add xor daa sub or sbb and test fmuls (bad) xor push xor cs cld mov or xchg xchg scas or sbb xchg inc scas dec sub clc aam notl and add cld int3 (bad) hlt daa add mov sub lock or movsb add mov mov lea aam mov call xor clc pushf sbbl fwait add shr xor mov push mov pop dec sbb loopne (bad) sahf hlt dec push mov in inc faddl xorl mov enter add adc cmp daa imul sarb in lods stos pushf jl or ljmp mov adc test xchg or jmp add push (bad) out or loope jmp das add sbb add add hlt fbstp push pop loopne xor inc jae dec xor cmp mov adc mov fbld loope bnd or dec xchg inc rcrb stos pop sbb or xor mov in mov das out and add and std mov in sub (bad) pop clc shlb sbb rcr sub test adc mov bound xor into mov fst rorb and clc cmc cwtl les mov or mov cmp dec sbb pusha adc mov arpl xchg and fistpl ds repz mov xchg lea fdivs mov jl xchg es pop add mov mov push mov das and adc icebp mov in mov add (bad) (bad) xor inc (bad) ljmp dec sub mov dec (bad) xor or jmp xor mov mov arpl xor jg mov adc addr16 xchg pop test mov cmpsl sub loopne xor pushf stc ret test push pop fisubr dec orl dec jecxz or xchg iret rcll aam inc mov inc fstps and and js lods dec mov push cmp inc dec das pushf add adc jmp push mov xchg adc add mov hlt jl pop pop xor jp insb ja fstps and out icebp mov mov adc insb push adc mov mov mov cmp mov pushf add dec xchg xlat pop cld int3 pusha repz jle call cmp enter cld push and dec idivb in int3 and adc cli es cli sbb scas sub or add inc in xor cmpsb lock out mov nop in xor (bad) lock adc nop pop xchg cmc or add and loopne xchg imul bnd inc adc sub mov popf (bad) cmp fcomps mov orb (bad) pop aas inc lret add leave add daa mov xor mov rol cltd push xor les scas mov and inc cltd pop leave cmp andb mov ljmp jo mov lcall loop adc repz dec lods cmovp mov mov and add add add arpl sub mov xchg push push (bad) and mov push sbb std fsubr lahf xor jle rorl test cmp or sahf es daa stc in jle xchg or sub mov xorb mov jge mov imul cli jo jo hlt mov mov decb in pop cmc add sub add add mov in fcomip movsb push popf ror aas xor inc in adc xchg repz or xchg hlt fstpt pop inc call dec sub fistpl pop and std add xchg xchg jp sbbl cmp and pop clc hlt (bad) mov dec inc mov push mov mov scas jge int3 dec cs enter loopne,pt dec adc dec mov aam mov fmulp loopne aam into add pop pop loopne sbb inc add mov inc (bad) repnz lock cli loopne test sub push jb and pop flds push add stos mov bound jg in inc push repnz fucomp loopne test xor scas push adc jnp lock adc pop movsb sub mov shrb sbb ret dec pop loopne pop pop sub add sub and mov sbb and and ljmp and cmp mov push adc test jo (bad) xchg arpl xchg add lcall dec ljmp daa mov je aaa sbb push xor pop pop mov cmp lea addb mov add ds pop push mov dec arpl aad call inc sub jne flds sub mov and in js in unpckhps cmp xor mov inc or mov pop rorl iret mov andb sub push in gs shrb jge andb fadds ds xchg (bad) pusha fdivrl and nop les bswap add xor or fstpt inc shrl pop sbb (bad) jl pop fisub mov hlt inc ljmp cmp decl cld add dec mov std mov add mov daa push lcall data16 cwtl add andl sub mov sbb dec fdivrl pop xor xchg fwait sbb (bad) (bad) mov inc sub dec cmpsl repnz (bad) call call jmp (bad) xor fcompl out call jg push (bad) dec jp or sub cmc inc ljmp mov fsub outsb xchg add push inc in or mov add (bad) pop pop pop fadd push jmp push sbb or mov mov lret jmp daa jno pop (bad) addr16 push adc dec and adc dec out cmc dec push mov jno repz mov sub pop jmp pop push cmp rcrl add orl jle jmp dec sub sti jl add adc cwtl shr xor and push (bad) in adc mov cmc xchg subb ret lret dec and fild outsl sub fsub mov push pop or sbb in stc std gs sub push lds jg rclb xchg call push pop jmp pop stos out add adc sbb movsl adc popa (bad) in iret jg push aaa jl push mov pushf dec ret pop or or xor xchg or mov loope,pn mov into sbb push pusha jge xlat inc mov js lock (bad) std ret not push add jmp in xchg dec push or aad (bad) repnz outsb fwait das sti imul jmp ja (bad) or in or xor dec data16 push ds xchg js xchg pop lret (bad) call fwait movsb inc add mov and out xchg aam gs (bad) dec mov add cld jl lods mov sbb add mov push dec jns daa pop or xchg fxch inc cmpsl push jg xor outsb loope int adc jbe dec fnstsw test jle repz cmp cmpsl adc inc add xor pop mov lds jmp test mov pop adc int jl dec or inc ljmp ret or cmpsl outsb popa xor lds xor inc sbb jge enter pop sti inc xor aaa je push imul add lret or pop mov inc incb sub stc addr16 jmp cli mov inc xchg sbb add jne test enter sar xchg dec or arpl push in pop jmp pop movl jl loope in jg inc sub iret and mov push into ficoml push push mov push nop sub sbb xchg sbb and add inc add inc cltd adc cmpb je pop jmp roll loop jmp xchg pushf les cmp adc jg fistl jbe xchg fcoms insb stos and pop push jmp loope repnz imul jle pop dec jbe sub adc mov daa pop jne cli cwtl xchg rolb int3 stos (bad) inc out sbb inc inc repnz mov xor cmpsb add aad shlb pop imulb aas dec and mov fnstsw lds add sarl jecxz add dec jmp mov not shr add loopne orl cld call addb lret adc xlat addr16 jnp add sub jmp mov shr jmp pushf int loope sub mov mov flds or add out pop or aas add inc (bad) and fbld nop xchg leave (bad) jnp xchg in adc or or orl stc sbb push mov mov ds call fisubr in mov out xor sub add repnz into adc cmp cs or in mov sbb mov sub jl out cmp and add sbb (bad) push in (bad) fucomip in inc push xchg mov pop add and fistp or sub add xchg or add pop sub sub test popf loop fistpll popf daa cmp stos (bad) arpl pop inc jmp dec sub pop scas pop dec jle roll shrb pop jmp out sub push je sti jmp sub (bad) in xchg xor dec out adc cli and rolb jle add enter lock xor out call and push xchg jne and stc sub sub int jb dec push stos mov dec out mov rol cmp addl mov std add test fistpll js clc push mov adc and in ret jns xor add (bad) imul mov xor or or or fisubr xor adc out sti jne fistpll lock jno lods incl push inc out ja in sahf in adc xchg mov flds aaa repz xchg cli sbb pop inc mov lret mov add jmp (bad) xor jge xor sub lahf loopne out xchg aas lret add or mov mov pop out sbb push sahf pop ret loopne lods mov dec shl cmp push pop pop jmp and and adc pop add cld cli cld test ret (bad) out cmp scas movsb pop push pushf pop dec cmp ror add mov sar cmp pop (bad) notb pusha adc das xchg mov add ret sbb sti dec or movsb mov rolb setp nop inc stc rorl lods clc call (bad) sti mov or pop add dec push mov cmp mov push push xor cmpsb mov pop add xor push cmpsb jecxz jmp mov pop pop jmp (bad) or test jl push call in mov lret jmp je adc ja jmp lods jne sbb add jg enter and mov xchg add xchg adc mov mov std cwtl jp sub test push rorl outsl xor pop and or dec cmpsl mov arpl push push (bad) xchg jno jnp sub or sahf sbb jg sbb arpl mov mov mov sar ja mov sub jno add pop pop mov sub inc add mov pop pushf xchg insb shl pusha sbb daa sub push orb dec or cltd sub dec or sarb push fildll lret add adc out pop add jo es add push clc movsl ja jmp or xor inc pop (bad) pop lahf xor add cmp pop and jl or sub and xchg sub pop xchg loope mov jmp cmp add add push jmp push mov in xchg fistpll das adc adc ljmp movsl hlt cmc pop fiaddl pop mov addl les stos inc loop dec dec jmp pop incl mov sbb xchg (bad) repnz xor in test pop jmp scas inc jl js scas arpl in xor push leave xor dec ljmp fidivr fldl2e (bad) or xor (bad) mov or pop sub fistl aam cmpl pop xor and aaa xchg and add sarb ja stos repz repz fs cwtl out aas sub mov or push (bad) clc mov or fs sbb or xchg and nop loopne fsubl mov int push repnz (bad) into rcl xor daa push jge jmp sti xchg sub cmpsl push push pop add pop shr push call call or mov or xor rcrl adc pushf push mov into ljmp std orl test sti insb mov dec jnp adc or pop call les adc lcall xchg push test xchg mov dec cli mov push repz jo int3 sbb out mov xchg cmp inc cmpsl adc outsl xor insl cwtl adc pop call cmc pop push neg popf add sbb and out and das sahf sbb xchg (bad) or cmpsl sbb pop push adc xchg loop movsl add push lock xchg xlat daa mov rcrl jmp mov add sti mov and clc mov xchg icebp xchg inc pop addr16 nop xchg mov or add or add mov daa dec sahf jns outsl and push or add pop push pop jl punpcklbw inc mov jbe sub push (bad) cmp jl lahf or out dec mov and pop shl push xchg scas pop and enter or cs pop stos testl dec push ljmp sub inc push test push std add jo xor mov ja jbe jb jle add mov mov push cmp (bad) mov icebp cmc mov fild sahf inc fidivr mov jnp pushf cli out (bad) cs jns adc xchg or pop xchg and cwtl push pop lock (bad) pop pusha lahf push push push jle sbb push xor or ja add inc ret pop ret rcrb adc sbbb mov jge (bad) cltd add jle lret jne mov jmp (bad) jmp aad or mov jae (bad) or in xchg pop dec data16 test jg out add fist or stos xchg lcall addr16 fist push mov xchg adc dec xor rorb (bad) ja outsl pop (bad) add mov xchg jl jb pop xor roll (bad) mov sub add cmp aas jae cmc pop sbb or pop sahf (bad) movsb and movsl jg in scas sub ja idivl ljmp and add push stc adc mov dec push inc lds lret cwtl fist fmuls xchg popa mov pop sti add push das in pop repz aam pop movsl jg xchg mov cmp mov out loopne packuswb mov neg jno jno ds inc repz push dec lea mov push jae inc push icebp dec out loope in dec or sub xchg mov (bad) cmp add divl xchg int push es adc rcrl jmp jns cli push inc mov pop push xchg add xor ret pushf lock jmp pop daa mov insl (bad) sarl repz js pop mov test rorl cltd lods cmp xor fdivp mov loop (bad) leave pop sub shll dec stos les mov enter jmp pop push push sbb sbb lret jb mov sub iret rclb xchg mov lock xchg pop fsin and sahf (bad) push push sbb data16 adc call mov in pop xchg into cld scas or push aaa sbb cmc roll test out test mov dec push xor pop add (bad) adc push rolb inc add rolb pop lock jmp dec jmp add mov (bad) jl insl cld add mov pop pop pop pop add aas xor mov mov xor push and pop push inc inc icebp mov pop sbb jmp mov pop pop les dec movsb mov sub stos rorl mov subl add or lahf dec sti sub inc add or and inc negl arpl orb sub dec and cmp lock adc ficomp es cld (bad) aaa adc neg mov popf push sbb push sub out pop and dec and xor stc pop sbb add jnp cli in mov jmp or push push pop pop addl sub mov pop fcmovnb or lock mov add pop pop sbb mov aad je mov (bad) adc xchg xchg mov mov (bad) xlat popa add dec fxch lock xorl inc movsl arpl xor jge xchg dec enter cmp dec push mov and pusha push xor jg or dec nop aaa adc sti add and icebp (bad) push jmp add jmp jle xchg je sbbb push ds dec and jnp xor xchg xor mov sub nop push into insl adcl mov adc imul arpl dec cli dec pop jl in (bad) popf rcrl (bad) enter mov dec fstpl pop dec dec adc adc idivl inc das sub add orb jae,pn mov cwtl (bad) xor cmc ret je pop and jmp add xrelease mov outsl and cmc mov sarb push int jbe pop je dec jns adc sbb mov lods pop lret testl jo pop jne (bad) and ret dec push inc sub dec adc idivl sub add cli cmp sbb cmp (bad) or sbb lds ret or or leave and fcomip mov mov mov pop pushf jle sbb movsl or rcrl add adc adc or jmp xchg out sbb pop mov xor das dec push ds sub pop inc jno jg pop xor pop add inc jmp sbb pop jmp sub lret xor pop sub jmp loope sub daa pop bound sahf movsb test push es mov add adc or addr16 mov nop fs xor mov push in cmc outsb (bad) in outsl sub loop add jo jge xchg mov mov inc sbb mov and mov inc inc les mov dec fisubl ss ret dec mov nop adc xor pop adc enter xchg jle imul push out int3 lahf rolb xor mov cmp dec loopne sub fstl push rol out (bad) jo in jle dec jbe cmc cs pop loop and lods jo push mov inc add pop pop icebp in cmc pushf out mov out inc lds sub pop rolb testb fwait lock push xor mov das add test add (bad) sub daa pop or div push pushl rcr xor in sbb pop jmp popa inc divb add or or mov out inc (bad) insb insl pop ret xor adc pop push int jmp mov lcall mov loope fisttp out (bad) (bad) aas xor std xor inc test lcall loop xchg pop jnp pop or lret pop rorl (bad) cs out jge lret mov cs add add out cwtl jmp and call popa rcrl push dec and jmp je fnop imul outsb stc mov xchg mov adc ss adc cmp fwait jo mov dec aas stc sub sub and adc sbb dec inc sti (bad) sarl ficoml pop lea outsl add (bad) addr16 sbb sarl and push cmp xor xor push mov sub cmp lods pop (bad) mov dec jmp jmp lock xor mov clc sub push sub cli enter jb push xor sub leave mov ret sub pop in mulb dec and cmp testb clc xlat push (bad) or pushf push inc cmpsl test pusha pop or inc dec and mov jmp add nop sbb out mov mov leave and outsl pop not jmp dec fmul adc xchg cwtl mov sub push dec sbb xchg movl cwtl ficoml pushf cli mov push scas adc cs ljmp sub scas xchg fistp add fstps aad push out push add add cmc sbb dec add fcomps addr16 add out adc mull push daa jmp (bad) aam leave pusha and push xchg lcall movsl xchg mov test push fisttp add (bad) aaa add inc jecxz jmp inc dec hlt jge sbb das imul lock mov or jg mov adc xor push sub push je push mov jbe flds imul or push dec aad sub lret inc sbb cmc push fdivs xchg jno xor jg inc cmpsb testl or inc dec push mov sub push jns cld es xchg sub out jo mov or jo xchg xchg arpl xlat les divl shrl sbb xor or out xor cltd xor and rcrl popf push call push add into shrl add call jecxz in iret add push enter std add int add push inc add mov xor jg sbb sub xor andb sbb push jmp cld insl ds xor fisttp or xor adc jbe mov inc sub loopne mov ret popa lret ja std ret cli lret outsl dec int inc aam flds xor jecxz in outsb pop test sub stos fimull inc xchg cltd jle sarl daa out push and pop push push scas cmp daa insb add ret std jle push insb push or aas add mov ds adc and stos xchg add outsb cmpsl add data16 in xchg (bad) arpl sbbb fdivs rorl clc fbld sub xchg and loope icebp pop shl lret std mov in pusha push add cmc pop push jg dec add pop fild mov add cmp adc xchg push or in jl jle cmpsl push sbbb dec icebp xchg jne mov mov cs frstor rorb mov repz daa jns leave sbb pop je jnp dec add mov push mov les cmp ljmp imul dec shll mov add out add add inc mov add xor jle xor pop pop stc xchg ret pop enter pop insl ror or xor loopne jle push xor les add je jae and pop cmp push dec and aaa push add or add imul sarb jge not inc xor addl jnp (bad) jecxz push or negb (bad) cmp pop cli jp sahf mov fldl (bad) addl add dec ds bnd xor lea cmp sti enter push mov pop jmp test push xchg ss (bad) mov (bad) negl and inc sbb add mov lahf ret mov and push rclb minps sub (bad) push andl mov cmp sub bound (bad) aam sub loope push (bad) out push stos pop push mov inc cs iret sub and or pop xor pop cwtl dec aad cs xchg in clc iret or jns lods jae and sub stos ds adc sub mov pop lds jns xchg pop test mov pop push cmpsl push sbb int3 mov jle inc mov shrb stc and cli jmp jbe (bad) int3 in add int3 xor pop jl cmp and cld jge ret inc fldt mov outsb addr16 (bad) sahf xlat mov or mov push push push pop xor sbb mov dec mov mov and jns mov push cmpsl mov mov int3 fisubr jl lcall sub into fiaddl in and add pop scas jl aad imul ljmp and notl (bad) imull sub add add pop jmp stos rcrl push aas (bad) bnd (bad) sbb pop cwtl push add sbb mov (bad) or repnz pop dec lahf jo and push xchg adc loop inc or aad cmpsb xor dec out dec add cmp lds mov push mov cmpsl shr lret xchg pop or jl outsl sbb out push test adc clc aas pop mov stc add dec leave loope dec xchg mov nop mov (bad) and jle xor cmp sub adc ljmp inc ret mov pop not push and jbe sbb xor dec sti in icebp icebp mov std adc mov shl (bad) loope and neg cs cmp lds mov xor cs pusha xchg shl sbb sahf les xor add pop jns dec adc andl cli loop dec add orl adc ds mov ja push mov ret adc pop xchg pop adc xchg jnp mov stc jg push bound imul mov dec sbb out aam sub dec imul xchg mov test mov hlt xor pop and loope pop pop negb add jmp mov daa and (bad) push sahf aas mov shrl dec push push leave add idivl lock pop add add out xchg jnp dec sub sub or pop dec nop ret popf dec mov ficoml mov into xchg or jecxz mov xchg stos push roll (bad) clc push cmpsl xor bnd xchg xchg push nop mov hlt sbbl mul fimull cs movsb xlat push push ljmp sti mov dec sbb das push mov add pop pop pushl out mov jo test lret add enterw or pop dec push enter fistpll add addr16 sbb into jae or add inc ljmp sahf push in xchg sbb adc xchg inc or add mov pop push pop push adc mov dec cmp hlt adcb jp mov into push jle push sti push jmp push sbb add pusha mov pop fwait es sbb popa loopne jmp enter imulb push xbegin fwait popl push mov call adc cmp xchg jbe cmp fdivrs push data16 pop or aam sub std mov mov fisttpl aad addr16 pop push roll jmp sti inc push xchg ljmp pop (bad) pop add push push lret mov pop push or adc mov xorb add test mov fistl mov mov jb xchg or and xchg mov xchg ds xor mov mov ja fadds lods mov add xor or inc add dec or xchg (bad) in and push mov jae or xor cwtl mov lods lea pop pop mov xor in jp adc rcl add mov mov xor xchg call pop je push pusha jnp jmp sub rolb psubusb xor inc dec test sub popl xchg cmp ds jmp inc imul inc sub mov push pop xor and loop push inc jle mov push cli jge mov add test and js and out dec pop shlb or pop int3 testb pop add xor xchg (bad) jne xor push leave push and sbb test ljmp xor lea pop jnp dec pushw sbb jmp xor xchg jo add test pop jle test imul jmp outsb push mov or mov push popa fdivrs neg dec adc and add jmp adc dec pop sbb cmp push sub and outsb popa iret in cs loop add mov jge push xlat mov pop icebp mov stos js mov adc pop jne in push jg push jne das cli lahf (bad) jbe add pusha fildl int jmp mov sarb dec sbb jne add out pushf mov pop int3 push and inc popa mov ret push cmc inc push adcb movsl ja data16 inc mov pop lock (bad) mov or fisttpll xor test je inc mov pop add hlt mov push pop (bad) jne or mov mov push adc in packsswb adc (bad) jge repz or jne hlt xchg fadds (bad) mov xchg add mov adc jmp adc xchg ljmp in sbbl (bad) jae push mov mov jbe cmp outsb add (bad) out or nop popf pop add or fisttp sar adc push push mov sub jmp cmp in jbe shrl jge mov dec dec pop test ficom mov pusha inc scas stos cmpl ljmp dec imul sbb lods and xor (bad) fisubrl aam push push jae (bad) or sbb fidiv xor sub fimul inc cmp xchg xchg rolb gs das enter cwtl push mov ja clc int3 mov or add or xor or push bound dec sub test outsl add orl pop push flds or flds pusha lcall test xor lds lods xlat xor xor inc jno add mov add movsb pop (bad) nop pop jo (bad) subb nop mov ja jl inc lret lods insb clc bsr sahf jmp xor push push pop (bad) jle jo test addr16 cmpsl push dec push xchg pushf pusha jbe pusha mov stos xchg cli cmp xchg push nop je out dec adc xorb hlt inc or negl add iret das jne pusha pop mov pop add mov sub add ret inc push sub cmc out cmpsb sub fdiv push inc cwtl sub sub or fsubrp jecxz mov inc sub lret sub pop test jns push call cmpsl add fninit sub adc cltd pop jg,pt out aam imul pop in imul pop es push popf mov outsl sub orl je push out int and ret addr16 mov push push imul adc and push xchg add inc les or dec ja cld xchg adc ror cwtl cmc orb jp push xor push popf jle jno fsts jle in dec (bad) mov mov push cmp xchg mov fcoms sbb add repz push sub sub cs xor dec loope mov lahf jmp (bad) cwtl push inc jae adc jmp push push push and add push mov call fmuls vpermq jmp cmp adc (bad) push or cli xor xor push in gs cmc lods aas or ret (bad) jne ds jne out xchg cmp push iret or push mov pop icebp out insl sbb cli push mov je,pt movsl dec les xor adcb jecxz js pop xor add add es pop pop sub jmp xchg inc test rolb test and cmp mov nop mov push dec push pop mov test xlat mov adc insl test push jmp rolb push dec add push sarl jle push aaa pushl sbb test sub out jmp pushf adc cmc stc pop xchg jecxz pop test stos je (bad) jne cmp sbb jmp stc xchg pop daa pushl jmp bound add jmp outsl test clc scas dec lds add out jne jo in stos orl push or sub jmp fnsave clc int3 imul and inc rcl pop test lret aas pusha and or (bad) repz mov fstpl out dec pop xor ret push sub and addr16 cmpsb out mov sahf xor jne push arpl cmpsl out leave rcl cmp negb rclb jl lcall fdivl (bad) or lds pop pop jmp push inc iret (bad) clc cwtl and xchg push add mov mov mov test push (bad) xor loope es and stc das pop xor (bad) inc pusha inc lods jge nop (bad) das mov inc xor jmp (bad) fnstenv ds pop daa aam clc loop popa pop dec sub dec mov jbe mov movsl add pop xchg (bad) mov std or cmc inc cltd add dec push xor or inc icebp mov daa push int3 mov arpl ret pop (bad) pop push inc imul add pop movsl es lods insb addr16 das mov mov push (bad) xor mov push lcall hlt insl xor test lock imul dec rol mov jge inc push and call jbe cmpsb jge inc pusha (bad) sub push or mov mov pop lahf out mov push mov roll ljmp and or or jno (bad) dec inc js jp push mov mov insl std push push mov mov mov adc iret sub fsts stos ljmp call imul movsb fcmovbe or addl sarl sub push (bad) fwait out negb xlat jg out or pop sarl imull in imul add push pop push js or push xor loopne incb leave inc lea loopne,pt mov add les inc inc (bad) je mov jecxz daa in inc arpl mov pop jne pop add sbb cld pop mov shrb testl leave and dec stos push push call add inc loope jo pop jno in rclb add add cmp xchg stos mov sti loop shl lret nop shll inc add (bad) sbb out jp divb dec loope sub insb xchg clc dec lret xor out pushf sahf xchg mov lods xchg in add sub outsl add ror sub repnz xchg adc sbb cli add loope jg pop adc mov cld sub mov inc dec clc int jl subb fdivs pop ret push dec inc (bad) lret jmp push xor mov fst inc call data16 mov and aam dec adc outsb cmp dec xor and data16 xor in sbb mov enter pop cmp cmp add imul aas movsb push adc loopne cmp jno mov out push and insb lea rcll mul mov pushf sub loopne jbe test add sbb add fsubrp dec dec cmpsb shll fidivl and sub bound (bad) jae and lods inc test movsl stc xchg lds fcmovu mov and sub cmpsb repnz icebp adc or inc and mov dec xor push stos int3 mov adc stc or rolb jae addl inc cli or dec cmp or repz jae loopne loope jg mov jns (bad) mov aad rolb fdivs cmp cmpsl or sbb mov mov jge mov sbb mov or mov fldt dec int3 adc lret sbb mov xchg fadds fsubr sahf add mov jl add push enter push mov inc es shlb outsl sbb adc out mov cmp mov addb mov mov aam ja mov ret js add add rcrb imul add lahf inc lcall pop in es add clc add in or fcompp push mov add (bad) mov add fcompl arpl loopne sub adc repz ss sbb aaa mov test shrl sbb and mov clc add ja (bad) mov popf push bound je jns cmpsb pop fldcw (bad) dec les adc stc add mov inc aas es push test and fdivrp pop inc popf and das jb negb in sbb cmp ss test js mov xorb add adc jmp lods cld jae cmp fild cwtl mov arpl jmp ljmp mov je jb add and push mov xchg roll insb xchg or mov push sbb fsubrl add test cltd and sbb shrl sbb (bad) fild pop mov repz sbb outsl aam les adc clc dec xchg adc cs mov jge shlb ret nop inc pop mov and push sub in enter mov sub xor test sbb add mov popa pop push or pusha and loop je pop movsl cld addb es ds aas xor xchg je mov add adc cmp add aam bound adc dec in xor add push mov test lea stc and pop mov pop sbb addb xor and fcomi in fidivl ja rep lcall xor add test (bad) clc stos stc pusha rcrb or iret jno popa rcr and ljmp mov popf xor mov push out add xchg mov sahf sub xor rcl mov adc mov and mov sarb mov xorb and hlt or (bad) mov xchg xor je adc pop aas dec test loopne fs cmp mov mov outsl call mov mov scas in pop pop mov iret inc rcrl adc add fimull add hlt int3 mov push push aam inc and mov subb pop ds adc cltd test mov xchg in sbb fsubrs (bad) subb jl and or ficomp xchg adc sbb or pop mov or xor cmp lret ljmp mov jnp subb mov sbb insb xor and adc loopne pop popf incb das pop aam dec fs sahf or xor add popf and dec jmp js das mov fistl enter and dec xor es mov nop je mov xor mov sub lods dec mov ja hlt insb inc mov rcr lock sbb clc mov add imul sbb mov loope and add fs daa add nop add imul pop add inc outsb mov arpl sub add aas loope shrb ljmp fistpll cltd subb into and scas test xorb and (bad) xor fisubl xor test ljmp xchg sub cmp xor push push jmp xchg pcmpeqw push mov adc or sub lods cmp nop and je jno xlat push mov sbb fbstp repz lock and mov mov and push sbb sbb adc and into nop addb mov (bad) loopne rcrl dec push fwait mov shrb frstor je dec jae or add mov fbstp loope xor mov or jo je popl rorl loopne daa roll mov sub (bad) sub xchg adc xor ret inc inc loop inc xor mov xchg pop mov pusha sahf roll data16 inc push mov popa sub xchg jo shrb out into dec jmp push add mov fisttpll hlt xorl sbb lods xor jmp (bad) iret pusha arpl aam dec rcrb aas popf (bad) sbb sbb xor push jl rcr inc (bad) das popf xlat mov aam add push mov mov ja dec jg adc aaa ret dec jl sarl loope loopne mov or push adc sbb add mov pop mov cld xor add push lea and inc mov out inc adc jo imul xchg sbb xor addb xor cwtl jne int sub mov adc pop inc pusha xchg xor and add sti adc ret pop ja dec sbb or pop popa add jmp lahf (bad) ret into out aaa sbb or dec xor cmp mov mov xchg xor push stos or adcl xor mov loopne sahf inc imul or rol hlt cld pusha call sbb adc pusha inc dec test pusha (bad) sub jmp sub and mov push inc and cmp and addb fadds jecxz lahf rcl fisub push jmp mov adc cmpsl pop xlat mov add es clc mov add sbbb std mov jbe and scas push xor pushf add xor lods jmp adcb dec call xor enter or pop mov into cld push add cwtl nop hlt push dec or and cmp pop sub inc dec adcl add fistpll mov outsl int andl cmpsl sbb out mov insb (bad) arpl nop pop push nop fist sbb push orb pop sbb call mov nop xor mov add mov or inc jne sbb jmp loop inc dec sub les push int adc mov cmpsb (bad) rclb inc add aam repz imul mov pop jns jl js push rorl stc cs jo xor or xchg fdivl gs movups fistpl or nop test pop pop or ds pop push int dec pop (bad) xlat repz xchg mov push repz cltd sub adc sarb add sub nop push in sti addl mov lods mov xchg std test dec cwtl fsubs xor gs xchg sbbl adc mov les cmp and ficoml push push daa dec inc fcoms or mov sbbl inc jbe cmp fsubrl mov orb xlat mov hlt adc add or shlb adc aas test les insl out adc hlt mov xchg sub ss add cmpsb das adc and jg inc popf rolb adc xchg mov roll and adc mov push imul pop rcll or mov ss push push dec movsb mov (bad) dec sbbb inc xchg aam cmp add call adcb push adc and test and test mov adc out xor sbb pop add push mov sbb add cmp fs jge pop (bad) test test aaa data16 stos in xor dec les mov imul push mov dec in add dec push adc aad fiaddl sarl mov subb sub adc push in sbbb sbb dec or test pop mov or and gs xor xor add nop dec clc daa mov xor into scas test pop push lods arpl sbb leave xchg ret gs outsl mov jmp in add or and add push or test inc cmc (bad) testl fcompl xchg sub mov dec out lods push test js add sub inc or xchg ret in dec (bad) adc bound mov (bad) dec sub aam std dec jbe repnz cltd xorb pushf cmp adc xchg dec or inc int3 jecxz hlt inc popf loopne pop movsb hlt push pop adcb add call push jb cmp lods xlat out mov aaa mov push push outsl (bad) int sub fmul aam loope rclb fucomi or add and inc adc push add mov and arpl mov mov adc xchg shr push test mov pusha push into mov sarb pop ss int3 es pusha adc mov movsb ret add add outsb in sbb mov sbb push sub pop and je add sub adc push xor cmp xchg mov rorb xchg xchg sbb push (bad) pusha or push nop push (bad) pop or dec shrb xchg adc adc sub cltd mov adc (bad) push and (bad) xchg mov xor adc lock leave dec sbb fistpl push push push xchg dec add pusha negl imul insb add pusha pusha dec pop adc jno lock sbb js movswl add mov mov je adc popf idivb mov sbb push and adc cwtl pusha sub sub hlt mov pusha mov dec (bad) push jmp ljmp push lret dec add jg xor jo and jbe add and adc aad sub mov mov dec mov cwtl jecxz insl push sbb sub ljmp push ja pop pop js dec sub sbb sbbb xorl and dec jmp adcb in inc or inc mov mov in jno call add stc jle jp,pn lahf push rcl or nop adc leave icebp popa pop dec push and push or lret mov jnp mov mov and imul push or into dec lcall (bad) mov xchg pop cwtl ret clc pop fs sub sub dec mov add mov xchg lds les xchg jb xor scas xor mov mov sbb scas test scas mov test mov clc jae xor add bound fisub movsb pusha lcall popf in daa pusha xor (bad) cltd mov andb or je bound (bad) add mov adc mov and dec sub adc xchg lods pushf dec scas nop call adc nop pop inc nop dec in aad lea xchg mov mov pop iret dec (bad) jo push mov pusha xor xor push xor mov ror add lahf adc enter stos add sub dec (bad) jne xchg push or pop add sbb xchg xor sahf sbb jns or cmp rclb cmp and es adc in mov test dec push lahf mov pushf and add sbb mov xchg push xchg mov jg popa fcompl fs cli in add xchg mov push movsl adc (bad) xor push sbb pop xchg adc xor cmpsl nop cmp adc add and sub hlt sarb cmc (bad) fcoms mov gs icebp lea lock sub scas fdivs mov xchg js movsb rclb popf cwtl mov adcb mov roll add arpl leave sub les inc subl aas or ror push pop add (bad) push push xor leave mov cmp in or push add enter jl jp aaa mov push test insl mov daa add sbb out add sub pop and push mov mov inc mov pop dec adc movsl lods lock pop rolb cmp and or movsb jg xor dec int3 add xor push testl xor insl push imul pop cmpsl xchg ds mov pop repnz repz dec movsb mov int3 and cmp xchg lret and cld int xor pushf ret das push lret adc stos bound in gs movsb cmp dec lret sub and adcb in subb negl js movsb mov or mov and leave push and pushf jbe sbb sub mov int3 mov mov mov pop pop aad sub call adc sahf dec mov icebp out lret and rcll sub pop xchg and pop cmpsb es add adc and pop arpl cmpsl dec popa cmpsb cmp loop mov xchg xor out je addl clc add mov xchg dec mov push int3 inc inc jnp,pt fs dec push outsb loopne lock dec nop mov push mov and loopne push inc lret sti dec mov dec push mov push cwtl fsubp in add mov enter xadd xor xor insl inc roll pop ds dec sub mull mov loopne add jecxz es push cmp int call add popa inc add mov enter mov push lock ror addr16 clc pop cmpsb int3 xor movsb mov pop lds xor cmc cld add or pop jns and and and inc repz mov pop rcrb movsb and and pushf cmp mov adc out sarb aaa xor jmp adc pop nop mov push mov or add jecxz inc in push outsl mov es push aam xchg sub sbb sbb sub rorl fs aas and push call xchg sub and in dec lds mov pop pop pusha pop sbb cwtl adc (bad) sahf inc cmp adc pop or xor xor mov lods xorl inc test push or inc mov sbb xor mov xchg or sbb adc inc movsb call (bad) and mov shl insb cltd cmp cmp sbb mov repnz (bad) out popf sub lock add jno lods aas pop lds rorl icebp test cltd in lahf rolb sub xor push lret push test aad sbb sarl cmp (bad) inc xchg xor mov xor add pushf lret add outsb (bad) adc popf add jb fs mov add xlat sbb sub call int3 (bad) lock jmp ss xor sbb sub in aad and and or cli lcall push push fcoms jg jl add dec adc cmp int3 push out xchg lock mov mov mov cmpb adc add xchg dec mov js test jno mov and lea sbb cmp stc addr16 nop test cmp add into lahf in clc lods cmp sti cmp movsb (bad) dec jge dec pushf fnstenv xor imul add dec enter nop pop std paddd add push and adc rolb dec loopne sbb xor int3 cltd adc fnstenv push pop dec mov pop cmp sub and pusha mov jge and xchg fldt cs xor add push rcrb xor popf sub inc inc add stc lret jno les rcl test inc xchg pop sbb lods and xlat jp pop mov add aam adc cwtl push mov mov pusha mov dec cli mov add sub clc (bad) mov add cmp sarb mov and xchg and imul xor cmc pusha into add (bad) cmpsb aaa insl mov mov seto mov pop insb call mov push xchg xor into stc sub sub in sbb mov int3 sarb loope imul xor ds add inc test stc mov add mov loopne xor inc inc cmpl test adc mulb cmp and adc aas xor mov out insb js stos dec orb dec arpl add xor mov xor jp and push xor push add inc push cmpsb cmp inc push cmp movsb push jb dec and sub fucom add adc outsl lcall loopne jnp aad add addb jb sub dec int3 (bad) decl or mov inc les mov pop movsl dec movsb cmp and inc in push call movsb (bad) xchg sbb ss pop insb and inc mov fdivrs adc cmpb enter sub scas adc int3 stc xor in rorb or movsl test add bound add rcl dec stc into push add mov outsl mov and int3 inc cli sub jmp sbb push xchg cld add inc (bad) jo in leave add (bad) and push mov in pop xchg fs les lods push inc test daa lea or movsb cmp repz jns aas nop adc aam cwtl inc cli cmp inc adc int3 test enter mov ret test cmpsb and mov inc and shll push xchg push add push xor xor stc sbb adcl lcall test push lret push inc repnz flds add div xchg cmp lret and insb mov sub fmul dec (bad) pop jo sub pusha js jmp adc cltd stos cmp xor jno and dec mov lcall xchg and xor sub adc mov loope mov pop sbb mov jl cmpsb pop lcall pop outsb icebp hlt push inc cmc adc and and and pop imul and call mov roll in pop (bad) cmp and pop cmp jg shlb (bad) sub or imul mov scas or call mov dec mov xor (bad) adc call cli cltd adc jle jae loope or ss xor add sub and (bad) out push and inc test xor pop insb call xchg jl lods pusha mov addr16 add popf sub and pusha ret test mov outsl mov movsb push mov test ror notb jo loopne movl inc add std xor add dec cmp movsl faddl fs jb jle mov nop dec inc mov cmp dec add fsts test sub mov imul adc ret adc sbb jbe je iret xchg lods adc lock adc add adc ret fisubr or dec pop add jno or xchg sub sbbb int3 pushf push or loope and sbb shrb (bad) cld add in mov mov push pop aaa adc aam sub pop cmp or fisubl or xchg push nop aam arpl rolb add or dec jo adc or aam mov and mov dec lods adc mov mov and lret jo adc aam cmp mov insb fldcw adc mov in sub rorb or in adc push xor pop xchg inc cmp je adc xchg and test sub sub sub push jne das xor mov je test loopne xor fisubrl icebp inc je popa femms jmp inc pop loopne mov into add js mov jns adc push cmpsb (bad) mov sbb (bad) xor dec sbb scas stc and push dec jb,pt sub insb mov jno movsb insl scas or and xchg test adc fmuls (bad) fdivrp xor ss aaa ficompl daa push je and jle jp or imul ss addr16 les test ljmp pop (bad) repnz cmp fiaddl (bad) sbb inc cmp add inc inc add adc js or sub jmp cmp xlat sub les dec adc add jo and mov fldenv mov movsb sbb adc fisubl jmp jo mov add repnz mov in or push jl movsb and (bad) push mov adc jle dec add mov jnp push or insb flds add (bad) out xor cmovl push mov inc dec inc insb xor add mov repz adc mov and int3 aam or push xor aad js mov mov sbb lahf sysenter insl fcoms rorb mov xchg lods pusha enter or dec inc push in sbb xor pusha xor (bad) adc mov and imul aam mov and pusha pop mov test xor adc cmp popa jmp cli adc mov or (bad) push dec sbb nop sbb cmp jmp xor dec movb (bad) xor mov clc mov repnz dec das mov repz push mov xor fild xor inc stos sub jnp mov ja inc pop (bad) arpl lea loopne sub inc add notb hlt push addr16 fidivl test loopne push add rclb pop sarb adc add test repz and dec xor loopne push and (bad) xchg cmp mov addr16 jl sbb pushf push add xchg jbe je lcall and inc imul loopne sub call cmp mov loopne fildll sbb adc ret mov lea int3 mov rol jp add fildll sub loop pop inc or rorb push imul rcr mov push test (bad) sub adc xor lock mov enter xchg add mov xchg enter les outsl es int3 stc into sbb loope push add popl mov in inc sbb or negl fs jecxz pop fcomps dec add into fmuls int3 leave adc call push int3 inc add or push adc sbb hlt push inc push imul imul push adc js popa in push loopne add mov or test or add aad aam push mov sub insl lods dec sub pop test aam bound push dec dec rclb add fidiv sahf outsb mov dec mov mov movsb xor dec mov fs and push sub pop add (bad) out xor test pop jne xchg sub mov mov sbb orl lcall inc pop fisubrl cltd (bad) mov fldenv les inc sub add cmpsl add sub mov fisubrl je push sbb xchg test test enter sub and jns sarb and push hlt mov jns bound in push inc mov clc pop rcrb xor cmpsb adc add cmp or ss insl ret fcomi or sbb jno inc push adcb sbb dec in hlt cmp inc adc ret adc icebp das add test add cld add sub outsb add xor and call mov scas adc xchg mov pop push push call fcomps cwtl repz sbb ds lret stos cmp insb pusha mov add in push adc loopne xor icebp mov add add outsl dec dec jns inc shl cwtl int3 push js add or hlt push aad sub mov pushf inc fdiv jne dec mov push cwtl (bad) gs ficompl movsb call lods mov idivb xor cmp jo add or mov jno mov or push add push rolb and daa adc inc rcl or lock xor xchg stos xor or divb cmp xor inc test cmp or jb adc mov pusha cs sub push ror and lock inc enter ds inc xorl ret xchg inc add adc xchg fisttpl pop pop dec add xchg xlat xchg pop sbb cld xchg push lret (bad) mov cltd xchg pop mov pushf or je mov cltd xor incb stos cli iret or push (bad) clc clc dec add or pop movsb xchg add mov popa maxps add xor fs dec fs adc add push test xlat popa sahf sbb push (bad) sbb stc xchg dec cmpb in (bad) stc adc (bad) xor js sub or fmuls or aad roll aam inc ss push add stos mov les jo push mov pushf cmp adc clc js mov js add mov sub push lds int cwtl pop and jecxz adc adc sub cli sub and dec mov cmp jo mov sbb test (bad) lods push xchg lret xchg aas or mov imul xchg lock mov pop add mov jp in add aaa jne pop push ret dec cmpsl in adc inc xor ss push sub movzbl sbb lea and xlat scas dec mov mov leave faddl mov push or mov (bad) cmp cwtl ret (bad) hlt xchg add test pop ja nop jmp push inc cwtl cmp pop jge sub cmpb nop adc or mov xchg (bad) add sahf (bad) xor test imul ja pushf leave and add je fwait inc and daa and movsl icebp cmp mov add push adc mov mov sbb xchg call repz adc jns inc inc pop jecxz xchg enter and les lahf ljmp lcall xor jmp and scas rorl hlt shr cltd lock das iret xor xor (bad) gs (bad) nop push and push xchg sbb sbb repz (bad) sub cld fcoml arpl sub jmp sbb jne loopne and pop fildl outsb punpckhdq test test cmp test xor movsb (bad) loopne push and xor push sbb test inc push or out adc rolb pushf ret dec jno leave mov mov mov fs ret sub or mov mov insl mov mov jae fisubrl enter in ds nop mov add imul pop xchg fs adc mov mov mov add add push mov aam fs js inc rcl jle mov ljmp dec cli js in xor lahf lock mov jbe push insb std fsubs inc sub mov ret dec push dec adc shlb push mov sahf nop lods or sub popf push mov mov cmp subl jno push sub test jl pop push or cld movsl shll subl and mov and sahf add pop mov sbb mov add cmc imul lea cmp push mov enter fadds (bad) fdivs mov call adc adc pop mov ror adc push sbb dec sti mov xchg lock inc hlt jmp push mov repnz jb xchg sbb adc xor sbb inc push into mov or das loop pop and push xor jg add jmp mov add jbe cmp ljmp pop sbb lods cmp out dec xor adc pop out (bad) in sbb jns rcl jmp sbb out imul mov push or int es jo movsb stc mov and jp andb fsubrl ja adc mov push je mov out add clc les xchg push add lods mov jg mov or out or inc loop adc loop add jae (bad) cmpsb lahf adc fnstenv icebp cltd jmp push mov movsb mov js xor xchg out add mov inc lock addb daa push mov fwait push xchg imul lock mov mov pop and mov movsl fimull xor test js fsubrs cltd dec ret repnz or cmp mov xorb outsb enter xchg sbb add jne xor mov clc lock pop repz test add rcrb movsb loopne dec add shrb pop cmc lret push add adc jl xor xchg push (bad) fldt xor not or aas leave rorl add call inc sub insb add shll sub push fs loopne xor stos sbb adc mov nop dec xchg bound add pushf js movsb leave cmp sbb push scas cmp or rclb or adc in fadds ret mov pop aaa add adc mov pop pop ds ret and cmc and dec je shll xchg xlat mov jp cmp inc lods mov push movsb outsl jmp xchg lret push js mov add lock mov aam movsb shr jp push and pusha jo mov mov (bad) xchg pop pop sbb (bad) enter jne sub jle fs xor xchg icebp shll pusha pusha jne mov jl addl push or mov push (bad) in fwait mov push or pusha js add xor adc int3 cmp pop xor lret lods mov sbb xor jl rcr inc jno jmp (bad) mov mov cmp add pop mov cmp add lret jns add nop (bad) pop roll push sar adc bound pop pop sub jo dec enter dec sbb inc nop js and nop in cmpb (bad) inc ds mov sub mov push lea jns add pop dec sarb cltd fsub jns and or or nop sub xchg add faddl xchg jns aaa jle dec and push push jb and rorl je add inc jg adc flds pop cmp imul rolb in push xchg mov mov adc nop shlb fcomps mov leave xor sbbb int adc push pop pop lock sbb dec xor mov out fs pusha ss push add jle lret popa dec pushf or cmp xchg mov mov inc subb pop xchg mov and inc jmp xchg les lahf cmc cwtl aam adc pop and and sub push aas pusha pusha decb inc cs adc pop adc mov mov mov and cmpsl add lock int mov adc daa addb add aaa test add into and scas movb sub arpl push call or inc ljmp aas std arpl cmp xor adc sub nop test jmp push and sub sbb add hlt iret leave gs rcll sbb movsb dec cwtl or enter js rclb add sbb xor into push cmp out mov inc jl inc cld xor cwtl push ja adc pusha sbb test push ljmp xchg cmp xchg or and xor jo push inc imul lods add push jmp pop jae mov adc mov call jmp cmp cmp ljmp dec pop add push or iret imull cltd dec mov in add xchg in inc mov mov pop xchg jne cwtl dec push dec push and jae add push lahf and xchg js scas and (bad) adc por (bad) mov pop dec xrelease sbb (bad) or xor popf push fwait inc sbb lret jp or and das xchg sbb lock mov nop stos pusha lock das and inc or sub cmp mov sub int test sub nop clc sub fstl cld jp jno add sbbl add repnz sub fstps inc and dec pusha mov rol mov add in and sub (bad) lock cmc mov je inc test push gs add call (bad) ds subl loop leave inc or punpckhbw push enter fmuls pop inc mov addr16 mov push int sub jae sarb push unpckhps jge aam test push test cmpsb fistl adc jb gs lock aaa xorb dec aas aam mov pop stc mov adc repz test sbb xchg push or addr16 pushf jg sbb dec arpl lock xorb push add je mov imul (bad) pushf adc fs jo test hlt dec je mov push fcomps mov sub add test mov and inc fldt imul loope fisubrl inc inc pop push shr xor push pop and mov xor fdivl outsb sub movsb or orb inc (bad) int ds cmp dec clc sub or mov insb ret in out mov jo call xchg pop adc nop clc xor lret and (bad) mov and pop pop in pop andb xor ficomp stc or xchg push sub and mov movsb in jo icebp pop dec inc push enter push lods loope xchg hlt cmpl sarb orb xchg out stos pusha or inc jb add push cli or adcl xor add sub nop shrb xchg dec movsb outsb adc or lock add fdivrp int mov adc inc mov add clc push push lock ret or mov mov fstps jle or push push add and mov xchg cmp pusha dec mov or mov xor call in sub lcall mov ret (bad) mov nop test mov mov add or add enter sub cmp fsubs mov dec add dec fldenv fldt ss lods dec lods mov mov mov sub pop lret mov push popa aam mov or fbstp cld inc hlt (bad) test jns int3 les cmp rclb in xor sbb mov movsl cltd stc and cmp ja dec iret cld and repz adc ret negb pusha push pop (bad) fsts mov int3 outsl inc push cwtl loopne ficompl (bad) daa pop add mov outsl mov ret or xor pop cld pop pop inc rcrb jo cmpsl pop lock inc jo (bad) or add and jp orl (bad) xor pusha sbb movsl inc clc push loopne addr16 add aaa call movl dec cmp call mov inc cltd repnz repz inc sub xor push xchg jl xor mov flds inc dec dec test jne,pn jb adc int3 outsb aaa (bad) dec pop cltd inc add out mov leave (bad) or into clc add dec cwtl pushf pop or adc pop (bad) repnz rolb and and push insl lods add mov sbb add adcb enter test femms fidivrl or loopne sub add std add sbb add aaa xor push int3 orl jo (bad) add dec test inc call xchg mov hlt fdivl push add adc mov push pop adc aaa ss jo jg cmp sahf es mov push loope and orl add cld mov fs outsl test cmp sub sub clc add fcmovnbe mov int3 insl adc mov jb (bad) loopne mov (bad) mov sub nop cltd cmp and xchg adc adc call mov adc pop sub scas (bad) mov add pop and cs and je pop or imul int3 xchg sub xor addr16 shlb fs push add insl xchg mov push rorb sarl test repz lock jge add stc fnsave test pop push cmovo mov pop add sub or test pop leave ret xchg cwtl inc cmpsb cmpsb push les rorl push pop sbb or imul fstp icebp cmp aad fisttp pusha je in cmp adc int3 inc addr16 fldenv or cmp push and loopne add mov stos sub insb clc sahf rcl add stos lret push sbb xor mov loope xor pop aam dec repz je rcrb je mov test adc xchg cld inc bound pop je jge cwtl leave adc mov out das fimull mov es flds dec mov es hlt dec sub jg sbb mov lock push adc dec pop in stos jbe int3 fdivl xlat xor test mov push mov aad repnz mov mov aam fcompl sbb loopne inc lods cmp int3 add inc mov in mov cmpsl clc add (bad) (bad) leave cmp (bad) xor sbbl ficoml sbb lock mov pop pop push sbb scas jg sub lods sbb ret and (bad) in xor (bad) je pushf imul (bad) (bad) pop dec movsb in or fimull xor dec jmp into loopne add cmc cmpsl fsubrs (bad) fadd jb mov push (bad) sub jo push clc jecxz pop imul push lahf cwtl mulb mov sub call rolb imul jno orl cmp (bad) call mov xor loopne int3 inc sysenter push clc jl pop test out or inc in outsb mov sub (bad) cld cmp add cmp push sub in mov lcall mov add cs stos mov mov mov and push in inc sub mov or or xor or cmpsl sbb adc mov insl es hlt cmp push mov mov hlt cmp dec aaa lock mov and mov clc popa fist dec mov mov dec fwait mov cld mov or cmp pusha push movsb fisubl clc daa dec xor pop mov test imul xor and mov cmc pop pop in dec insb je (bad) hlt or cmp dec inc sub rol push orl mov arpl iret push and ror xor int3 mov sahf inc push push out inc movsb jo lret jnp xchg push or sbb sub loopne jmp or mov bound cmp (bad) sbb mov xor and push cmpsl inc sbb (bad) pusha call cld rorl fdivrs outsb into add nop imul shll cmp lea mov add fcomi mulb inc shlb cmp loope adc push ret xchg int3 add fbstp pop movb and adc xchg dec aas mov xchg adc je sub cmp xchg pop rcrb xchg aas pop lock mov or mov or mov (bad) xor insb and sbb addl mov adc xor loope push sbb idiv inc in add out pop or shrb pop fsincos jo test mov push shr sbb shlb pop jbe pusha mov out push in rclb add ss add arpl dec lds add xchg sbb push add mov cmp mov int adc xlat mov push jl cwtl sub ret rorl das pop jl sub cld js aam test mov push mov je lock jnp daa (bad) fadds sub es lret and inc xor lds rcrb daa xchg (bad) cmp cltd add jl adc cmp push mov sub sbb push xchg idivb jmp mov test int adc xchg inc push cwtl lea add lcall inc xor xchg dec mov sbb into and das add (bad) add cmp shrb xor jo mov loopne pop (bad) jno in ret ds push test add jmp pop popf jnp push sub mov outsl ret or pop push dec stc push pop mov aas leave nop cmp xor inc sbb mov inc jle arpl jbe mov and fwait test and jns jb dec lock dec pop push rcrl xchg mov or je adc pop or pop lahf loope inc sub stc or or push insb aas push and jecxz popf push add sbb repnz fist sub jns shl inc pop pop movsb sbb mov dec mov jb or adc inc adc adc mov push pop jl test aad in jne das mov adc push xchg test clc push fisttpl sbbb xor rcr jno lds jge xor cmp add loopne fwait (bad) sbb decb aas dec mov js add lods pop ret push mov sub ror adc movb scas adc loop (bad) lret es dec outsb in sbbl jae mov lods or dec mov cmp je add insl fisubl imul lcall decl ret or add sbb xchg xchg xchg pop in jo xchg push fadd cmpsl jns push pop mov sub cmp (bad) movsb js mov lods icebp push xor jb xor push (bad) mov adc push stc adc clc pop adc xlat orb aaa jbe rolb add and xchg js cmpsb aaa imul test pusha and fnop inc add jge lret pusha xchg adc fldcw movsb mov push push sbb sbb sub es or cwtl pop sub insb mov jecxz (bad) data16 adc stos insl test sub (bad) aam (bad) (bad) stos dec and push movsb rclb rcrl adc jmp movsb test movsb ljmp xchg push ja fs icebp (bad) cmp cld or push dec mov add andb xor inc jl ror add add xchg stos push mov dec andb adcl add inc fiaddl adc add pop jno andb mov outsl jle addl (bad) mov xchg add (bad) mov ficoml adc daa fstps js add insl sbb inc jo mov sbb inc ret out lods daa push sbb test cmpsb fdivrl (bad) dec popf xchg mov rcl inc movsb cmp enter popa jge mov loope sub inc (bad) shrb and rcrb push int3 add mov mov add je mov insb inc lock and test fs adc adc inc aad in scas shr fildl add outsb fcompp cmpsl rorb mov mov call fprem leave push nop cwtl add addr16 mov movsl in aad (bad) and cmp loope jb dec add mov mov outsl je push dec in repz es pushf xchg push enter jb mov add and repnz test mov fldenv xchg aam fnsave or iret lods push lea cld sub xor cmp ror adc xchg in dec jae push jne pop mov xor jg loop sub fidivl pop xor push push clc je ljmp adc lock lea fisubl pop pusha das lea add arpl pop or adc addr16 sbb cmpb mov inc and sbb scas xchg and jo or je test push cmp xchg out loop cmp cwtl test or sub out loop pop sbb test jge jo es hlt addb test int3 faddl aas cmp adc jg shll mov fmull cmp and addb dec cmp cmpsl sub push xor jne xor xchg mov or cmp bound mov sbb pop addr16 call xor add dec adc rolb adc bound adc pop dec push mov loope push push dec fs mov push mov lods fild jo fdiv jp add (bad) mov xchg mov popf xlat clc clc pop enter nop out sub mov jmp imul out je mov ret jnp mov push lcall ret leave imul outsb es (bad) adc xchg mov and inc lea es cmp addl loop and insb imul je leave xchg pop push add xchg push clc imul call (bad) jo je shll mov sbb iret cli fistpll mov mov pop ss loopne pop iret sub loopne inc cmp or mov loopne xor xor int3 sbb sbb cmp jo fdivs adc mov nop cs testb fistpl cmp jmp pusha loopne add jp loopne outsl push fnstsw xor mov jl js dec push mov aam fistpll loopne fs int3 adc add les push xchg or movsb repnz pop dec aas or inc xchg push add cmp popa cmpsb lods inc add nop sub lcall rcll (bad) push fsubl mov mov sti inc push js ds dec sbb and fsubl mov call rorl sbb aaa es fsubl inc aas cmp mov inc (bad) cmp rcrb sub mov push or pop xorl mov (bad) xchg rorl fs shlb fildll imul sbb adcl fs sbb (bad) lds adc loop pop and nop testl or and daa mov add mov sbb add and sbb dec pusha pop daa xor pop cld and or adc and cmc test clc push cs jecxz faddl (bad) (bad) lods push out in jmp adc sbb jle int3 mov icebp jl add mov mov (bad) loopne adc sub dec imul mov xor adc pop movsb xchg adc push pop adc into xor mov (bad) bound pop adc das test mov adc pop and cmp es adc shrb add popf inc push stos mov jns sbb jnp andb or lds repz out cmp xchg mov cli inc fisttp in xor cltd and cmc add cli sub or sbb sahf xchg gs pushf sbb in cwtl push adc js mov mov out adc mov cs (bad) loopne popf dec test add out cmp jb xchg cmpb inc xor ret testl inc insb mov and add add add or jp es imul xor or sub xor xchg stos aas push pop cmpsb mov lods inc mov mov xchg shrb les pop scas mov push adc push mov cmp std add out and rorl xor sbb pop push sub jl cmp hlt pop inc push push jecxz shrb cmpsb cli gs lods arpl adc mov lret ja pop xchg inc les or cmpxchg lcall movsl mov push mov add andb xor mov xchg mov jo adc xchg f2xm1 cmp fs ret pusha je pop xor shlb jnp mov mov add push imul les pop add dec dec (bad) mov mov jnp mov mov das mov mov cltd sub push add ficom sub fisttpll in or outsb ret mov push sub and add push mov mov out dec add stc aaa jo pop jb add jns cmpsb fildll addb int3 fidivrl popf out lock (bad) adc js add xchg mov adc sbb lret adc bound loop mov mov das sbb xchg cmp fdivs das je adc popa mov or (bad) pusha inc mov jo add dec cmp push loopne push xor test mov adc cmpsb idiv pushf pop xlat mov add or mov or fcmovu ret sub jmp insb loopne cmp push cwtl add xchg lahf pop insb dec jmp aas arpl jo dec add addr16 mov inc pusha pop xor sbb cmpsb imull clc add ret inc xor xchg lahf push jno pop push pusha mov mov into ficoml mov enter das cmp jno outsb int3 dec pop stc or test insb inc add adc dec push data16 dec imul jnp hlt hlt dec and xor lahf add aaa imul xor sti sbb push insb movsb add cmp nop hlt fcomps cmp rorb andl rcr push or pop nop cmp icebp (bad) xor imul inc data16 daa je aam lret fimull adc push addr16 sub xchg sbb clc xchg pop data16 add or scas jmp sbb mov inc fimull add shrb test aam and hlt nop cmp cmp push mov jl je pop sub sbb aam push in test mov mov xor int3 lds daa ljmp or mov lock outsb or in je test call sbb outsl xor dec jo pusha in jle sub cmpb dec (bad) scas push add add enter add adc popa hlt rclb push jne dec stc (bad) les movsb adc hlt in cmp cwtl sahf bound pop aad mov je mov mov mov dec (bad) mov js xchg jae or sub aam and add fsubrs or push outsb in jae add push fimull les xchg push lds out add add adc mov or mov pop je daa icebp imul mov not sbb mov shlb adc add jl imul je push outsl or adc pop les inc inc cmp jbe cmpsb (bad) cli xchg jp (bad) xor test dec xor les mov push push (bad) clc fwait out outsb popa idivb jno out or ficoml xor pop pop jns prefetch test mov hlt inc xor mov jge push (bad) mov mov and (bad) and sbb daa push jg dec adcl dec xor fcoms (bad) push fmuls test pop rcrl in sbb pop mov les cmp insb xchg int xor fs jnp push js push lret fwait mov inc scas mull (bad) jbe outsl int3 movl push dec add imul mov jb cs faddl lds mov imul cld lahf loopne,pt test xchg add aam sarb cmp mov cwtl jo and leave rcr dec or mov xchg push daa pop sbb dec mov movsb (bad) test cmc ret lods punpckhbw in or push ss xor aaa imul cltd mov xchg mov pop mov add test aam xchg insb sub out or les es je hlt mov insb (bad) loopne test pop push pop mov and test in sbb mov add shrb pop sub into cmc sub or arpl mov jge jl (bad) lock ds add addr16 xchg xchg enter (bad) int3 xor aaa add es enter jg gs icebp jbe inc mov push inc dec inc sbb repz mov loopne leave pop dec xor neg inc or pop jo sub enter or dec mov push mov aam jmp xchg dec lods xor out popf and dec mov mov xchg call push xchg repnz shrb add cmp das jno add (bad) (bad) jo ljmp and icebp cmp dec (bad) dec mov in jmp iret daa mov inc add mov mov shrl movsl jnp mov lods loopne sbb xor or fadds test addr16 or lret leave call jns js add mov mov movsb xor in cltd das jg push lret in test mov stos aad push nop and lea imul mov pop push xor fwait or mov xor cmpsl out xor mov and jbe int3 test xor adc mov mov pop mov dec mov into cmpl xchg mov lahf daa inc jns into inc test loope mov sbbb inc mov test lcall add cwtl fwait push mov jg push cld test mov and add add push jno xor add lahf sub out add std inc scas lods ljmp imul mul and call stos dec mov cmp movsb js fbstp cmpsl add inc movsb push or lds in lahf fwait clc in mov scas xor adc push adc les cld push jmp jecxz pop adc sub stc or (bad) mov dec rcrb daa mov mov jge (bad) dec pusha iret test mov cs nop pop (bad) mov ret pop mov mov inc jle (bad) test es lret addb push insb ret je rol add daa adc lock pop push es mov xchg and mov stc outsb add mov nop mov scas mov (bad) sbb mov lock mov lahf push shll ds pop xor popa ds rcll pop inc loopne push cld dec cmc xchg aam mov mov int3 pop xchg arpl and dec adc lahf xor and lret data16 or lods sub mov aaa rorl pusha xchg inc pop xchg rolb cltd adc cmp jl inc (bad) jl pop and and and sbb (bad) push sub sbb daa pop outsl push inc adc leave jne lcall mov sub and pop dec pop loopne xchg mov ljmp outsb (bad) jne stc aaa lea xor lods or inc sti xchg repz lds js aas push insb push xlat jae and bound fmull push push fs dec lock sub and adc int3 add jecxz in cmp lret sub pushf add popf clc test jne add mov cmpb call into mov inc fadd fnstsw adc push int3 sbb fdivl stc stc and sub jns je sar lret pop xchg (bad) enter nop mov sbb js (bad) repz fsubp mov sbb cmp adc fisubr push aam mov movsb or sub mov mov adc push out leave pop fimull push push xor fbstp inc popa je sbbb pop push dec mov outsb in adc sbb sahf js cmp in movsl neg dec in add or call adc add sbb and inc adc adc mov sbb push mov mov add dec fstp clc lock xor mov and repz xor (bad) nop or cmp mov or add es mov nop and lret or mov lds sbb insb rorl gs cmp mov add mov bound mov xlat dec xchg push adc int3 loop inc mov ret cmp pop add and or add pop cs imul js sbb xchg test pusha sbb test mov outsb scas int3 js pop xchg adc push and mov (bad) bswap ljmp add in or push loopne mov pop or loop xchg xor dec popa mov rcrb loope jb popa insb mov inc jge ds dec aas lret lock shrl lahf imul cli dec adc mov je cwtl inc je fsubrp les scas and mov dec les clc mov inc cmp ret (bad) xor cs mov and bound test int3 (bad) jg add fldenv in cli push or rorb int3 add call str loop lods sahf mov inc xlat mov mov nop xor call or cmp adc dec bnd data16 mov jno ficompl xchg add cmp enter mov hlt js mov cmp cmpsl repnz or and test push adc mov xchg dec mov xor mov inc insb adc mov sub rcrb xor mov mov dec mov sub push pop ljmp clc xchg adc adc or in out xor dec in lret dec or pop mov repz imul sub pop loopne out add (bad) repnz iret push loopne loop fs xchg in je test out mov jbe dec pop fs mov mov arpl or gs insl loopne xchg mov ret es test je mov jbe rorl push xor and enter shlb push pusha cwtl aas jb loope nop add rolb cwtl sahf arpl test dec loope mov fnstcw addr16 adc push nop mov sbb jno movsl (bad) dec xchg inc mov pop inc shlb fildll jle push add cmpsb mov adc push int3 loope dec inc (bad) outsb aaa push jo add xchg push mov fisubrl adc and addr16 mov inc enterw or cwtl nop outsb int3 fsqrt (bad) fsts test inc mov cmp out add mov cld nop lock jmp adc cmc into cmpb icebp insb mov cmp int xchg xor dec inc jl faddl popa lds arpl fmuls in cmp pop fimull inc dec popf or mov pop imul js mov sub rolb cwtl mov and mov (bad) cmp adc imul imul (bad) insb push xor ret pop push stos aaa mov mov movl (bad) or or cmp mov xchg push clc or xor inc sub jmp ffree xchg scas (bad) fidivrl sbb push fwait sub loopne aam jge loope lods mov daa inc or jmp and dec cmp (bad) pop mov popf adc pushf daa sbb xor xchg push loopne sub sub cmp pushf gs stos in mov add pop shl pop pusha and sbb pop pop ret xchg dec add dec stc push pop fisubr movsl lods loopne fdivrl jns push out pop push xor fcoms add inc or fildl js inc xor sub adc sahf xchg sbb jecxz adc loop lods test rclb (bad) sbb jae or or pusha adc faddl xor cwtl or add jp dec mov ds dec test mov insb stc andb loop sar adc aaa mov mov ja inc int pop enter popa pusha adc or sbb xchg aam push sbb or rorb push les and xlat adc dec inc sbb jo push mov xor xchg add jae inc outsl lds stc test fstpt test daa rcrl sbb fldl or or mov xchg add push mov xchg insl stc outsb add xor xchg sahf popl xor (bad) addr16 cmp mov push pop pop or push sbb imul test in adc add jnp xchg xor xor lcall popl lret nop bound or pop inc das jne fist jg add cmpsb pop dec shll int ljmp inc or or or jo iret sbb and add adcb fsubrl and outsb cmp stos sub repnz (bad) fdivs mov test or xor lock or adc fsubr or or or pop or or es jno push jb sbb xor pop and es jno popa pop stos shlb sbb pop add shll iret inc mov jg jmp pop test dec scas inc dec pusha adc sub push pop cmp clc mov sbb and xor loop roll fdivp movsl jne sbb cli and mov (bad) je lods adc lcall xchg (bad) aaa or jg add mov aas push (bad) mov cmp gs movsl ja dec inc subl fidivrl pop or add lock adcb mov add jmp int pop (bad) mov jne jno adcl cli arpl (bad) fsubs mov or pop add push cmp sub ja clc add mov add push scas mov sbb jmp vmovmskpd xorb add call sub (bad) outsb cmp cmp insl call mul lret mov mov mov clc ds (bad) addl cmpsb jle xor outsl in cld push aas sbb xor idivb jns dec and stos imul push lock orb sbb or and lahf mov lds jmp jno in adc add or dec nop or movb or cli pop jp cmp pop jge test adc sub add fwait adc mov xor pop rolb mov sahf daa hlt incb jmp mov jb aaa push cmp sub adc sub mov sub insl mov jne pop arpl xor movsb and outsl call mov push inc push leave pop lock push shlb jmp add jmp out movsb adc sbb mov xor dec mov pop dec outsl repz inc push add mov adc add add jmp add dec dec incb movsl ds jp jmp (bad) aam jmp mov mov jle pop sub sub xor lcall fsubs jl sub pop cmp hlt sub xor pushf inc pop sub mov frstpm(287 cmp or pop lret xchg sbb or mov pop jno sti and jle arpl imul xor inc fstpt loope dec leave or das mov pop push or dec (bad) repz fisttp pusha jg rorb jecxz les sbb or sub std inc sbb and inc stc jle mov push out xor push pop cwtl mov dec idivl xchg sub jle add inc pushf dec div es xlat das les dec xchg and or mov mov mov pop add jmp mov mov inc xchg addl or adc adc aad enter jmp ja repz push mov mov cmp mov cmp dec popf add in sub sbb lcall loopne jg xchg jo or push ljmp js setno cltd in xchg sbb dec lea and stc pop adc mov dec dec dec cld cltd es pop cltd xchg lods pop mov cmp pushf rolb outsb jp mov mov xchg mov mov sub out stos mov pop inc push loope jmp gs cmpsl cmp movsl inc xor jno or inc shr stc or ds add pop push je and pushf inc add mov outsl xor cmp jl pop loope jle insl sbb and dec xlat xor gs scas xor dec (bad) push and cltd bnd jg jae add shrb inc in pop pop je imul andl xchg clc cmp cs jge mov aad insb and push sub cwtl in mov test jo lret lods (bad) fist es inc cltd push sbb xchg stos hlt push cmp repz mov pusha movsb xchg sti or addr16 or xor pop nop and fidivr mov mov adc (bad) loopne jno or imul mov and adc mov cmp mov pop and push push mov ja sbb in inc ljmp and and hlt sbb sbb inc or pop lea sub sub test dec scas pushf les dec xlat push cs dec leave (bad) xchg leave xchg inc sbb adc add int3 rclb lds push and xchg add jl rcrl or outsb add mov dec int push xor mov push stos pop iret jg xor fstpl mov fs or mov insl insl add dec dec pop cmp add (bad) aas rcrb cmp pop (bad) bound adc pop pop jmp or and sbb pop or outsb (bad) and jae icebp fnsave push repz pop dec mov push cmc in push mov sub cltd mov pop push sahf mov pop pop inc push push sahf cmc imul data16 int or inc test sbb add icebp (bad) push inc mov add cs sub aad push lds out push cmp inc les push (bad) out or sbb repz scas dec inc sub inc push lods std jne or inc cmp insl mov das fcompl push and jmp out jp mov sahf rorl test and outsb mov lock repz mov sbb mov dec or sub sar or pop (bad) cmp nop lods adc lcall nop es jbe pop pop push nop lret push pop push xor dec pop call pop enter push cld outsl fstpl das push aam pusha mov dec sub out pop push cmpsb mov cltd dec cmp mov mov push push pop fs or jle jmp xor jg mov push add jge mov push pop xlat lods lods pop int3 in pop psadbw stc pop inc (bad) ss ja mov add scas repz push jp iret push push stc outsb pop ret pop pop push push gs rol fucomp mov jmp xor xor pop mov sti sbb and push lcall fs ja inc jecxz testb out mov cli jo popf push mov and das xlat fistpl (bad) xor test (bad) pushf sub push push mov or testl xor pop push sbb inc dec pop push push add add ja dec outsl das inc aam dec xchg add rcrl outsb sbb sti movsb fstps daa xor test inc insb cs pop and add lds or add inc in dec stos lret cmp inc test add jl fdivrs stos lods jne sbb mov jne cli adc out mov push shlb mov mov xchg mov mov inc dec aas adc sub daa push push push pop pop call adc test dec scas xor sbb pop shr dec sbb daa pop xchg add sbb dec cwtl pop sbb shl add sti (bad) inc dec push xor sahf and and push mov pop ja push add ficom cs aas rorb cmpsl das out cmp (bad) repz cs dec into cli cs aaa cli insb outsb ja push out and into cmp cwtl push aaa enter and (bad) jge incb or out repz cmp xchg jmp ss add cmp mov xchg xor sbb fwait mov je das jl jl les mov cld aad inc test dec lds (bad) jnp sbb sbb stos addl fldt mov pop pop popa addb addr16 das into fwait sbb cmp mov add jecxz adc add (bad) rcrb in (bad) mov loop das idivb ljmp add push sub int3 shrb lret jmp mov loope pop rorb xchg jb lret mov jb ljmp mov gs sbb sarb add xchg call clc cltd dec add sub fldl dec imul mov inc mov bound or jns push add test testl pop out push mov dec add aad stos pusha dec adc js or inc out xor (bad) mov push sbb add pop lods add xchg push gs push movsb movsl pop (bad) or mov lahf stos jl (bad) jo fcoms fildl mov (bad) xchg mov dec insb sub jo fnstenv nop into stc dec loopne and stos cmp imul aas sub jne xor jecxz and aas js shlb insb adc ret add sbb ficompl popf adc (bad) hlt and pop dec aas insl shll sub push scas rcll add cmp cs out add dec xor add xor mov ret xchg shr shrl sbb fnstenv and inc adc stc out sub mov negb jmp dec xor sbb xchg add (bad) adc inc fdivl popf stos push sub and pop pusha dec xorb add (bad) xchg inc xor jno mov outsb daa pop mov lock xchg mov insl shr daa ds inc dec adc (bad) add pop or popf xor movsl inc jge cltd imul or or xchg xor and xchg mov jl repz scas or ljmp sahf xchg add push jo fisttpll shrb add sti push or jnp sub xlat and xor adc addb cmpsb adc cmc inc in bsf (bad) aaa in mov xor push pop sub or sub or push mov or ret pop mov jle popf (bad) inc add add repnz push pop insb jne mov xchg (bad) mov add mov or (bad) xor push pop adc daa adc cs sbb adc and inc lods ljmp push das push add adc mov push or adc adc aad aaa test push and mov pop popf xor and inc mov cmp sbbl shlb push pushw mov mov inc out aas je aas scas push int3 lods xchg int3 orb adc mov gs ret aam jle push or pop and insb mov loop les incl cli inc lahf movsb std dec dec test stos mov lds push xchg cmpsl push fucomip ljmp es adc jge les cmpsl sbb inc and pop lcall insl aas mov xchg add inc scas aam sbb inc dec or (bad) cltd mov push or pop cmpsb mov jbe push add pop cmp sbb push sbb add cs push cs mov inc mov xlat sub pop sub adc dec lcall mov lods lahf or cld mov clc decl lods movsl nop or cs adc sti xor push dec stos dec ret icebp test or gs imulb pop mov pusha jecxz push sbb push xchg pop dec mov (bad) cwtl push sti inc jo cld mov mov xor adc lods push and mov mov call add jo sti in mov lock insb or jmp add arpl jle repz mov lods pop and jecxz xor aam add cmp pop fdivrs inc stc stos push rcll or scas xchg lcall data16 mov scas dec xor shlb ljmp push aam add sub in dec or (bad) xor fisubl push pop or adc mov and test cmpb dec sbb mov push and push leave subb rcll in pop and pop or imul repnz mov sub add fistpll pop sub sub or or push mov push xlat dec imull dec inc xchg hlt lock jb add cmc mov and outsb push push mov je cli push mov mov pop aad jbe dec push inc mov add mov dec sbb and dec lds out (bad) dec mov sub or cltd pop push sub jl cltd mov ret in ja inc mov out add xor add cmpsb jae stos add add sub insl dec xchg mov jnp cmpsb insb inc es adc dec std cmovl loopne push adc mov or and and pop push mov scas mov mov sbb scas fs mov pusha push add mov adc xchg mov jbe add cmp mov jecxz lea inc addr16 or mov pop mov sbb std sbb sbb pop in mov iret or out dec scas pusha mov bound in jb loopne sub lcall adc lods nop and subl shl aaa dec stc imul (bad) adc out or ds out ds sub jne xchg sub flds les cli movsb or adc decl mov ss pop lock cmpsb or shrl sbb dec or push std ret xchg mov add add mov aaa call outsb in pop cmp pop (bad) pushf jb xorl jbe daa rcrb push in test enter in std xchg push jg mov add les mov push add out addb loopne push xor (bad) data16 nop cmp sub xchg jecxz,pn and sub mov lods mov jo imul add add sbb cltd js stc insb jg in mov xchg add lret cmpsb scas push repnz sbb (bad) shrl dec xor int3 loope xor bound fsts push sbb nop pop and xor arpl adc or lcall cs mov xchg or inc or push pusha aam sbb stos rorb mov add add mov inc arpl inc jmp jb mov nop sub dec sahf movl rclb xor and jg shll movsb inc jge add loop jle mov xchg ds scas jge mov scas dec ret dec sbb adc pop arpl pop lret xchg and sbb and dec sbb mov inc sarl mov mov mov lods aad xor lods jmp push sub cs in dec add mov mov sbb cld test out add movsl je loope cmp je insb fild inc cmp cmp push sbb mov icebp mov pusha outsl pusha iret std fdiv lahf pusha movsl xor fsts xchg int3 add stos push rcl sub rorb pop call adc pop insb cmp repz sbb or push mov outsb imul insb in or dec xchg (bad) or popl fwait mov roll ret in cwtl add jp (bad) push mov add fwait ret insb pop inc subl and xor jo add adc fisttpll jmp mov aam or dec cwtl and inc faddl insb out push cmp add xor jl sti jno subb xchg mov sub inc negb inc dec movsb inc jmp lcall mov sbb or adc dec mov scas pop movl (bad) add xor cmpsb push pop lock xchg mov sub imul cmp xor dec shr inc xchg lcall js sub mov mov xchg incl cmp in pop adc nop repz loop xchg in mov call loope jle adc ret add stc decb cmp push add xor add cld xchg mov add cs loope sub insl popf mov push or fsts mov lds mov or in push add popa in shll orb outsl add mov cmpsb mov das adc dec popf lods sub jnp loop cwtl or sbb mov notb mov in push or repnz mov cmp sbb xchg popa add adc pop nop push sbb jnp mov adc lcall push and and loopne push movsb repnz xor int3 push add (bad) pusha fs or add mov jo and xchg adc or outsb add jecxz nop add inc cmc dec xchg (bad) push out add sub (bad) jae pop insb jno mov mov mov xor pop pop push arpl addr16 cli js jo sbb xchg jg sbb (bad) sbb mov add cmp movsl mov dec inc add add xor cmpsb in cmp lcall out add cmp stos test sarl loop int in jno daa add outsl push sbb sbb pop mov push jb movsl das or push andl dec aam cld shl add add mov sbb pop mov add cmp (bad) movsb sub inc test cld test dec jo dec sbb add arpl jle sub inc pop add aaa jns cmpsb loopne push popf mov sbb loopne add xor pop and adc xchg lds in (bad) push mov daa or loope mov test add sahf mov or sbb xor inc enter add int (bad) jae add nop (bad) enter xchg or xor loop mov pop loopne pop inc xchg inc out fdivs adc ret and xor dec xorb in add (bad) add lds icebp adc sub addl add and out push (bad) lahf fild rcll movsl lock xchg imul insl xor xor push pop bound inc push jb adc fwait je hlt mov xchg pop push fs ret out pop add ljmp repz test gs adc icebp adc and push aas imul mov shll es adc adc dec pop lds in subb xchg inc rcl pop mov and out mov cmovs xor ss jnp sbb test dec cmpsb sub jns or dec mov xchg cs into sub ret jg and je sbb pop pop cmp sbb mov insb pop pop push xchg inc les popa pop stos pusha and aad mov sub pop into and aam adc cmpsb notl ret cmp add pushf call xchg mov add in or les mov jb stos rol mov pop popa and popf in pop xor aad add push cs addr16 sbb adc dec dec inc movsl in mov orl pop sbb (bad) rclb push dec rolb mov and nop sub hlt incb xchg (bad) sub shrb cmp (bad) hlt gs dec aam or mov daa les pop add dec cmpsb in xchg mov dec pusha ss jne test and mov dec push mov sbb cltd mov fnstsw or loope daa xchg or add and pop dec or add popa ret fstl and aaa sub dec and add (bad) push add pop mov cmpsb fs lret popf add mov mov pop sti insb xchg dec cmc pop aad add psrlw jecxz mov dec inc stc ror inc insb ret push xchg pop adc ret gs mov mov rorl xchg xchg sbb inc mov (bad) fcomp add scas add or adc sbb push sub les mov push jp xor (bad) cmp shll xor xchg xchg cli push sbb sub pop imul xor out add sbb lds mov xor stc test rclb aas addl fucomp cmc adc mov add or sub pushf enter into mov sbb out cmp cmp pop addr16 xchg (bad) pop mov fs inc and in inc cltd mov adc xor nop jo cmp fldcw push mov mov into add in mov (bad) dec pop inc sub or adc mov and jle popf or push and cmp xchg push xchg mov and decb js cmc mov (bad) mov sub add pop dec dec mov (bad) je inc (bad) mov (bad) xor add femms cmp pop leave (bad) (bad) outsb jp es pushf push mov mov ret mov jecxz std add add adc (bad) mov or repnz sti pop aam xor push call mov inc sbb imul mov pop into xor insb nop repnz xchg push add add xor js adc sbb sbb (bad) xor fstpl (bad) jge add mov pusha popa or mov cmp (bad) dec pop stos add add dec mov inc pop ret pop jno mov or or sar mov and insb xlat inc xor sbb std add sti aam xor int xor xchg xchg mov inc jmp adc frstor jmp repnz lret leave xlat loope loopne and adc adc adc or jge dec and je and stos cwtl lea jne rcrb cmp xchg int3 inc icebp add dec add inc loope faddl and nop outsl in or inc adc add mov add mov sub mov adc sbb mov stc xor pusha and push xchg dec add (bad) dec mov sbb or xor (bad) pusha pop cli dec pop inc lods jb xor xrelease pop jecxz in insb nop subl adcl shl lods (bad) fs shrl cli push dec enter pop xchg sahf pop cmp jo je add or pushf add lret pop in add test aas push pop adc es dec rclb jle adc mov loop push inc ja pusha and adc push jecxz jge jo dec xchg push (bad) jns jno push out add mov dec pop adc push add add jg adc rcr daa imul add push popa add scas sub rcrl int3 jns (bad) es push fs xor sbb outsl pop pop mov push adc rcrb and xchg popa mov pop cs shr xchg dec pop dec in adc cmpsb je outsb rcr adc out add adcl arpl cmc mov repz mov or or movsb add (bad) icebp add sub xor and or pop mov adc or lea sti push and fld add aaa pop mov add pusha movsl mov push lods pusha dec sbb cmp pop stos in cmp mov or sbb nop nop and xor xor cs push (bad) cmp dec xor (bad) lea in mov push and enter adc adc ds jmp inc pop hlt xor or and fs xchg dec jp sbb dec push aaa lea nop and add dec lea mov sbb fs movsb jcxz out dec inc cs repz jo add sahf arpl sub xchg jmp inc push popf mov pop dec jns (bad) stos popa or scas dec push shlb push mov cmp decb sti inc (bad) sbb dec mov addr16 xor outsb das mov sbb lock (bad) or ret mov je mov scas dec rcll inc rorl scas xor push mov daa cmpb mov sub push fcomps inc (bad) std pop or test fcoms dec add insl in mov dec (bad) xchg adc out and clc xor mov aaa mov les sub repz (bad) mov dec push ret xor data16 add in push cmp lsl fldt (bad) mov (bad) jle outsb js mov je aas add cltd or (bad) hlt out outsl subb jp jb adc (bad) leave fdivr mov jnp sti (bad) adc (bad) dec jp incl dec sbb pop test or call or (bad) or jno sub sbb xchg mov mov (bad) std or sarl jl lock fmuls jp imul je (bad) lcall test or cwtl fs mov push add dec stos sub pop xchg fs or lret rorl pop jecxz icebp add push stos inc or testl or sbb xor add mov fadds insb or pop leave repnz mov sub add adc xchg std pusha add dec adc pushf (bad) xor sub and into adc aas inc jb xchg pop leave and xchg or fisubl adc jbe mov lods ja pop adc inc xor outsb nop test gs in mov and hlt push (bad) xor pop mov (bad) cmpsb push in js xor daa iret pop adc push xchg inc das fsubrl out or ds add pop add add xor and cmp mov push and add dec imul inc ret xor dec xor pop int3 xchg mov rorl rorb push je sub jns or (bad) push leave sahf sub imul clc lahf movsl mulb sub mov xor (bad) mov mov sbbl sub jecxz stos inc push dec add push xor inc xchg pushf gs je stos push sub je add ds sub out xchg mov repz push (bad) in (bad) jg popa rcr mov and inc xchg and inc arpl mov and movsl cmp cmp and xchg subl add xorb add cmpl jns add inc enter xor sub sbb nop aad test clc scas stc sbb int (bad) mov shlb sub sbb push add js inc sub dec sbb mov push call jecxz cmp cs in iret repz inc sub xor rcll inc push out out pusha js stos adc pop jo pop jle add or les repnz push aaa add jl jmp add xchg cmpsb jg adcb je push cmp push fadds add lock xchg cmp das sbb in and adc lods mov adc cmp add into adc mov cmpsl or dec pop add repz or pop dec les mov xchg in pusha mov shrb lock add outsl add lret sub xorb ret shll add dec cld lock mov add xor (bad) faddl sbb xchg call inc out pop loope mov push lea test lcall jg sub sbb lret mov push xor sub and (bad) push jmp jbe in cmp sub rcrb cld fwait and add arpl mov pop push xor insb fldcw testl addr16 inc stc and add (bad) pop rorl xor nop out inc add int cli daa mov inc mov adc lods (bad) mov andb inc stos push push aas inc lods mov push adc jne call sarl cmp add sti mov or scas inc adc js add fs push add mov xchg cs mov (bad) pop cmpsb repnz int insb mov nop js mov or jae and or pop add sub add or xchg xor test add cs or fistp dec ljmp in addl xchg jmp fist popa sbb outsb (bad) add push jae xor gs pusha pop mov add dec xchg push lea sbb test xor and inc (bad) jne push and iret rcl addr16 adc daa xchg hlt pushf add lock mov cmpsl push cmp pop add add imul push rcrl add pop iret sarl mov nop in bound xor pushf xchg mov add pop clc popa popf mov ljmp push adc lds (bad) adc subl dec cmp rcrl xor fwait aas xor inc add adc jle mov inc decb int3 xor mov scas xchg pushf mov sub repnz sub leave adc dec test jae pop xchg icebp testb sbb lods add cld sub fstpt or pop push pop shl inc js inc xchg sub dec (bad) aaa push push pop xchg incl jmp mov or in xlat add cmpb xor icebp scas sub jo fs jns out or inc cmpsl dec outsb lds add shlb or sbb popf mov mov jle push pop loop dec adc xchg cmpsb add inc sbb or sub xor cmpsl push mov mov add mov cmpsb aaa or and ret daa mov jae mov repz jnp xchg inc xor mov pop cmp jnp pop add push xlat out add pop int3 test sbb and xchg popf mov xchg add outsl xor cmp add rorb mov mov and and test pop and mov insb fwait ss add int3 test mov jle popa pop icebp dec or add cmpsb cmp ret mov xor popl int3 popa das repnz or mov pop or int pop adc add sbb rcr cmpsl add and lods ret inc cmp adc enter dec movsl mov mov jo pop adc or pop icebp cmpsb push std cmp int imul mov ljmp movsl les out aad loope xchg dec cmp xorb xchg lahf mov subl std pusha mov push xor mov cmpsl lret xchg add dec lods in cmp add jg adc xchg repnz xor movsb int mulb cwtl hlt or cmovg or es xchg addl dec jmp enter and call push shll pop dec fcoml dec roll mov jle enter jae push add xchg insb mov add les or jb xor inc or cmp into shl jno push ja and cmp mov sub arpl pop fadds mov test push in dec daa sbb sub inc pop mov adc std xchg add (bad) in fmull sarl arpl or out stos add pushf add inc ficomp jecxz xor testl add mov add imul pop mov ret call adc pop adc pop outsl mov inc call xor mov cltd or fisttpl pop (bad) mov leave leave push popf push (bad) or or mov stc lock pop sub rcrl (bad) in jmp add jne sbb (bad) inc loop clc inc pop mov pop out (bad) (bad) fdivrs push mov dec adc add sahf (bad) sub addl unpcklps adc jo dec sub or iret or sbb xchg mov mov pop pusha mov and (bad) xor jecxz outsb jno mov addr16 push adc bound popf sbb dec pop or fistl inc pusha lods imul nop popa fwait movsl lret mov call leave shll add sub or je out mov xor lcall jae notb xlat or (bad) cmp pop jl xchg insb push loop sbb cs das or and or aas lods movb push addl sahf add in out push int addr16 sub insl rcll dec add pushf jg dec add or adc inc push and pop or dec jle cld popa xor add sbb mov dec pop jl push cld loope add push fdivl das xchg adc divb (bad) insl das pop push inc push test lret aaa cmpsb adc movsl cmp loopne xchg enter push cmpsb (bad) mov mov adc mov addr16 mov and loopne push add push divb into lock daa pop stos int3 rcrl lods scas out sbb test movsl enter and xchg jno popf mov inc dec pop add aas inc and sbb mov mov mov std push imull push mov (bad) popa dec xchg jb sbb adc mov inc cmp sub les mov push xchg inc or xor or movsl fimull out pop lods pushf add ljmp add (bad) stos jnp pop xorb lds push cmp mov cmp (bad) mov inc call stc pop push dec nop xchg push pop insl jmp pop mov insb xor mov mov out add xchg scas sbb push mov mov and scas and sbb add push cmp gs loopne xchg inc mov inc xor scas sbb pop popa inc dec sti mov lock mov pop mov jb or or sbb sub leave mov in cwtl mov fistpl inc push mov inc js nop jns sub or insb inc push jg adc mov lret push mov stos push pop jno push mov clc push adc xchg adc aaa xlat xor dec cmp jns loope inc jg aad xchg mov (bad) adc psubusb imul (bad) mov add mov ja test xor xchg andb fsubs movsb adc pop pop enter cmp insl (bad) call flds xchg addb cmp xor add and pushf add mov xchg push xor cmpsl jg inc mov sbb xor or mov or jb nop cmpsb jge in test sbb mov adc repz add or adc push adc mov ret sti in ds add inc adc cltd in mov mov dec es pop incl mov stos (bad) or pop imul sbb out xchg push cmp gs fildll add insb scas shll push hlt xchg mov in lods or iret jmp pop and daa xlat adc mov mov ret fwait mov dec fs mov mov adc icebp add imul mov mov lea inc fsubrl aaa add stos loopne lcall cmpsb pop mov (bad) sub lea push fs call mov add addl adcb push add pushf inc roll not add mov cmp and jo std inc (bad) fcoms sbb add shrl xchg (bad) xor daa iret in scas fidivr loopne addl or or add and pop fisttp xor std sbb loope and mov lahf loope arpl xchg in test mov xchg std push add jo sub sub jno into jl xchg pop adc rcr lcall pop dec mov sbb sbb or mov add repnz arpl mov scas je jb xchg add inc adc add dec adc aad sbb push idiv mov or (bad) fbstp push int3 daa xor pop mov mov aad push xlat mov pop mov xchg dec xchg cmp jb pop jmp stc sub sbb sub sub push cltd idivb dec jle cs mov jl pusha mov (bad) dec xor push adc movsb ret dec sbb push inc mov rorb pop and std aam int lea sub xor sub lods lods add cmp dec (bad) mov sub cmp cmc push mov dec mov mov add sub dec lods es and jbe nop adc jle jbe and add pop mov in xchg in insb pushf pop mov js enter mov adc out add in fxsave mov in dec cmpb out push jnp js jmp or add arpl mov and add test movsb (bad) jb test subb cld add loope xor dec cmp lds mov push jo inc mov cltd mov mov roll jno inc inc daa hlt pop enter popa mov dec xor ja cmp xchg std ret (bad) push out movsl mov add jb fidivrl add fisttpl lods or pop in or jne add popa popf mov fs or mov or or xor mov pop jmp fnsave into pushf adc fs iret inc add and inc icebp mov or lahf icebp rsm push shrl test outsl jae arpl add andb (bad) fwait pop mov or icebp pushl (bad) mov das cli mov dec aaa aaa and lods ret lods add and add ljmp sub pusha adc outsl xchg inc xor pop jb cmp or xchg shrl adc std clc dec adc xor pop push (bad) les sar xor int3 dec dec or xor mov and sahf outsb mov pop shll xor sbb adc rcrb pop pop stos pushf int mov ss xchg decb enter jne clc out paddd pop loop pop sarl mov push stos ljmp jns cs xchg std jae inc jecxz sub xchg push sbb ret mov sbb lret call push push mov movsl nop and faddl bound je fldenv add aad push mov inc jle out xchg addb adc inc dec shlb mov or bound add js stc (bad) add cli sub rcr hlt movsb nop jb stos add shrb out mov cmp mov push xchg mov or jg dec jmp lds in daa insl add add sub cmpsl xchg dec sub les add add jnp cmp sub pusha ljmp pusha jecxz mov rcll cli or push test sbb pushf aam pop test pop and out or pavgb dec adc cmpsb mov fs sbb dec pop (bad) sahf xor lods or jb test (bad) repz jae xor push adc add xlat (bad) mov ret sbb jp inc sbb xchg jg add jge mov and (bad) repz outsl popf xchg or adc xor inc loope dec cld mov repnz lret es jns add call sahf lea xor add or ljmp bound (bad) or cs pop clc mov xchg clc sbb xlat and icebp cld enter ja int xlat xor fcoms mov add mov and mov inc sbb subl ret adc cmp movsb add lods scas xor int add pop pop inc das mov and adc or xchg adc mov sub add pop rcll adc daa ret xor adc ret mov arpl negb xchg movsl repz mov test sub aas push imul or sub xor loop popa add iret rclb mov and or push inc aad sbb xchg xorl sub inc mov sti adc testl mov (bad) dec pop xor (bad) lret aas push sbb enter xchg adc mov rol jmp adc arpl stc jg cmpsb push lods add pop je scas adc cmc push rorb gs jp dec aas mov sahf add mov jnp imul fs gs stos out push pop imul insl push cmp add out xor mov hlt ds fs je enter mov or (bad) pop adc sbb stos insl lds lods (bad) jl pushf sahf mov loopne (bad) and mov adc add shrl pop jp aad ja aam add fadds repz mov and adc dec enter loop iret pop adc lds jecxz int3 aam adc (bad) xlat xchg fs (bad) dec loopne or setno xchg out sub sti xorb sub cmp daa ljmp cli mov sub mov lcall (bad) pop adc push leave (bad) push (bad) dec push rorl sub into stos sbb cmp xchg loopne add pop mov rorb andb and xor mov dec push mov inc inc push xlat inc push inc and add adc dec xlat insl jecxz das xchg jo roll cmp (bad) xchg fwait or int mov ljmp adc insl inc xchg xchg popf mov push mov dec test fsubs pop cmpsb pusha mov push (bad) mov inc lds jb inc dec in test add sahf cs daa or ret in adc add jle adc push insb fs rolb imul sub push sbb cmp inc je cmp inc idivb loopne mov popa (bad) pop adc sbb or ljmp gs out sbb fwait add cld xor and movsl repz das xchg xor mov rorl cmp mov in (bad) outsl pop cld add inc add mov and or repz inc cmpsb inc out push inc cmpb loopne pop or and (bad) adc lods cmpsb loope rorb pop adc pushf sub imul ljmp adc cmpsl xor rorb xor out or xchg or adc sub inc pop mov or scas test mov (bad) add jo adc mulb and int3 or icebp (bad) mov add bound mov fldt fdivs mov ljmp es (bad) fidivr lahf inc mov cmp or loopne inc sub mov cmp xchg mov into mov loop mov mov sahf aad jae std test jno mov mov and fistp lea dec inc enter dec test les pop cltd add push or hlt hlt shlb subl jmp sub popa orl lret pop and outsb add iret inc xor or adc es jnp and xor cmp push cwtl addr16 sbb sbb imul or pushw or stos sub or int3 and xchg add std into or push xchg das jno adc ljmp mov popf leave (bad) aad mov and push lods out cmp stos cmp xrelease and mov pop or pop add movsl sub shrb nop/reserved and mov fisubrl adc jp jno or int3 and mov and aas inc iret add mov dec scas xor mov jbe adc pop outsb and inc or pop in (bad) popf hlt push pusha or scas pop aas fdivl inc test jne dec xor inc add mov pop ret fist xor (bad) sbb pushf jl clc cmp (bad) xchg add test and or add fcom ljmp call outsb dec and leave movsl or ss mov cwtl lcall adc inc (bad) adc push loope and inc and punpckhwd push out add gs scas add fs jb inc cmp dec imul dec lahf add inc scas and pop mov test xchg out adc inc add xchg or mov cmp push inc add fdivrs and (bad) sub and or daa (bad) cmc fwait mov loopne and out ret mov sbb sbb lcall dec ja fstl imul xor xor nop into dec inc push inc dec add std push cli cld adc fs insl enter mov and leave sahf adcl fucomp sti pushf adc jle or mov (bad) and out add cmp pop xchg movb push and or jno outsb sbb or mov daa push add mov xlat mov add pushf sub js jg dec mov pusha cltd push mov scas movl andl jg popa arpl gs push (bad) mov or xchg pop rcrl test nop add ds scas cmp sbb lods incb arpl nop add fldl mov jb inc adc bound enter sbb xchg (bad) or scas iret pusha aas jb and fildl mov inc jecxz gs adc inc mov sub cmp cmp adc cmp insl leave add add pushf in add pop loope push test icebp lret mov cmp int cmp aam fldt imul mov mov cmpsl xchg loopne sub fcomps (bad) dec fisttp movsl fist sbb aas xchg sub test loopne cmovo outsb cmp jg dec jb cltd pop ja aaa jmp xor ljmp inc add test clc (bad) fistl xchg imul pop (bad) jo pop psllq lea adc and mov sbb push stos mov inc fldenv sti pusha lret push and sbb inc and int3 adc (bad) jmp jo xchg stos cmp test xor cmp je jo fmulp out hlt (bad) xor sub and jp add repz js mov stos test ret insb dec jle insb scas xor cmp push fld es enter mov add jnp add fisubr addr16 inc js push or sbb inc xor cmp xor js cs and adc and xor std pop cmp sbb das xchg bound daa sahf mov or adc imul sub xchg lds das mov mov sbb xchg ret mov movsb pop or add subl and mov imul sub jmp sub inc xchg inc (bad) push sti add rol cmp mov cltd mov xchg pop scas or and mov out int mov mov jae rolb mov xchg dec cmp mov add xchg andl mov sbb loop loopne xor mov aaa adc jbe jl inc iret arpl subl pusha das ds or xchg push pusha je test rorb cld xchg inc icebp add movb testb call dec mov enter sti adc add inc mov sbb data16 and lock enter add cmpsb out pushf lret pop pop xchg scas mov mov test add or pop fild cmc iret mov mov (bad) xchg push fs mov stos orb sbb fs dec fcomip testl adc jae lea fcompl push or les (bad) pop adc (bad) adc mov inc mov dec sbb popf les ud2 mov and (bad) adc sub xor sbb and mov js push daa pusha pushl sbb rcrb imul pop iret pop adc loop sub pop inc adc aas xchg ficompl add dec cmc rorb pop mov sub or jge (bad) mov sub mov mov lock imull adc fnstenv inc inc neg (bad) ret cmp lret xor dec leave addr16 xor cvtps2pd dec out sub cmc clc fwait ret jbe prefetchwt1 bound mov pop mov add jo fnop fwait sbb add xchg pop mov int3 in popf out and cli inc mov sbb push rol out int (bad) sub xlat sbb inc dec push and add andl sub inc mov fstps add shr aad test mov gs add pushl imul cwtl add mov lds adc adc pop sub mov insl stos inc xchg imul and sub and cmp or or push pop adc sbbb pop adc cmp popf cld cmp sbb xor push add scas ljmp lods pop inc or add pop inc dec fldenvs xchg push fs out add fiaddl lahf bound ja cmp push jge mov sar push mov std ljmp cld cmpsb std pop jmp sub loop jmp jle xor fidivl adc popf fdivrl (bad) cmc mov add and and scas (bad) pusha mov inc jno adc sbb arpl jbe adc call pop push mov xchg jmp out loop and or popf jno add push stc xchg test dec pushf and outsb mov sbb jmp and add sub cmp fs pusha mov popa fcomps hlt cli pusha xor pop add push popa mov je xchg jo add push popa pushf push aaa (bad) sbb or lods inc fldl dec mulb pop adc fisubl pop mov mov (bad) mov adc stc ss adcl ja and cmp pop add push pop std cmp mov sbb fimul mov das dec push aad hlt aad mov sbb add mov xor adc rorb bound aaa (bad) pop jo into pushf xor jbe push (bad) hlt cli lahf cmp add negl cld mov imul adc out dec inc test pop imul pop or out mov pop out (bad) cld popa mov fbld dec std xor dec pop inc mov aaa int shr int3 loop xor ficoml pop sub adc (bad) pop mov cmp push lahf push fist in sub and push adc test and pop pop adc push cwtl jno pop sbb cmp push pop aas arpl xchg adc dec or pop mov adc mov leave pop jge sub adc mov or add aaa nop or inc aad sbb inc sub mov std sti (bad) jae ja add mov insl bound cmpsl push outsb movsb test push out adc (bad) imul jae adc or ja dec xor or jb xlat mov rcrl push mov scas out xor ja pusha popf push ficomp dec xor out xor or mov dec mov xchg push dec pop adc stos inc add das (bad) jno inc test mov cmpsb int3 ljmp inc push xchg popa pop pushf ljmp sti stc testl pop mov testb add std cmpsl pop xor pop push or pop stos push add jp and int pushw or jge cwtl test fiaddl jle mov pop or pop xchg (bad) insb outsl pop loopne sbb adc add sub fist insb aam rcrb push jne xor cmp push cmp inc pop push cs jle sbb dec dec loopne mov fiaddl stos jle flds js (bad) clc repnz rorl fs dec and jge mov fcomps ljmp pop push test pop nop cmpsl cs pop dec out popf fwait mov lds popa push or pop pop (bad) mov ss imul pop fbstp imul add ds sti mull jo insb decb das add cmp xor push inc test fwait lret xchg int3 pop add and jns adc mov or arpl or push push (bad) in cwtl mov movsl cmp push jns test hlt stos jl rcrl mov repnz lock add jle iret add aad xor mov leave jecxz dec out xlat jns loope lahf cmp jae xor sbb inc push das fist rcr jno xchg popa or pushl mov aas rcrl sahf in jae cmp fdivr rclb xchg jge sbb pop mov call cmc push popa leave notl in mov sahf and lods out jno fstpl test movsb or idivl add sub pop mov dec lods inc jg fiadd mov test push (bad) dec xchg or pusha in ss or fild mov add jno cli sbb insb push dec call in rcrb mov push negl inc push jmp xlat imul sub xor ret fstl sub (bad) dec std sahf mov andl pop xchg pop xchg pop cmpsb mov daa pop mov and pop push outsb lods rol (bad) pop outsb push xor or xor cmpsb in rcrb dec (bad) and imull push arpl shrb icebp dec cmp fnsave aas inc daa rcl jle movsl mov add fs addb jp shrl movb mov insb mov popa hlt sbb mov push pop add jge sub (bad) fstp fldt pop adc mov pop aas divl adc or shr jp (bad) pop and jg or pop ljmp xchg (bad) into jmp repz sahf or cmp xor nop add push out and inc add push out (bad) xor inc mov aas xchg incl push mov test jne sub add and jnp leave fist mov adc jmp and add movzbl cmpsl sub push push push sti fcoms das into pop jg enter jmp push pop add xchg orb out insl and loop,pt cwtl adc neg xor ss andb lcall fsubs mov shr test fcoms sbbl pop mov add adc xor sub cmp std adc fs cmp pop mov push or pushf add mov icebp dec mov xor add cwtl sbb popa dec pushf in ret pusha pop fdivrl incl jp or push decl cld loop (bad) idivb push xchg sahf cs pop cld outsl dec jg ss or push gs mov mov scas inc dec sub sbb ja pusha xor popa cmpsb in sub bound add out stos andl mov sub push das in xchg dec ret dec mov and push out int sub dec fiadd jle jno pop adc mov nop inc rcrl pop lods jae xor dec psrld (bad) or sub movsb loope push out cli out dec test movsb es mov cli pop lcall cmpsb mov mov push out and and arpl cmpsl inc lahf add mov fdivl mov faddl jb cvtpi2ps mov cmp fs ljmp adcb pop (bad) ret ret push pushf scas divl das cmpsl rcr repnz or inc mov or (bad) cli inc sub rcll (bad) mov sub add xor cmpsl shll add pusha xor nop mov aad xorb mov push adc push sti or iret pop push std cmp rcl stos dec call dec fs adc cld notl xchg xor dec xchg outsb pop nop dec aaa out pop fs jmp lock mov cmpsb (bad) pop mov xchg mov jg pop jl pop cmp sti cltd jae sahf adc pop nop jp and sbb in add inc sub hlt cmp pop xorb cmp add fcomip dec (bad) fcoms scas js enter xchg cmp push cltd pop subb (bad) mov andb leave jb das sub jl adc mov add sbb mov mov dec mov (bad) int out inc and add lock and dec int adc test push add sti ljmp xor out jo sbb mov addr16 and shl pop ja jl jno cmp jg sub xchg es cmp and mov test cmpsb push push pop mov or xor jle or sub pop sahf pop dec or and cmc push sub lcall stos cmp pop insb push test lret test cltd inc and add adc xchg or push outsb pop roll jge cmpsl sub add sbb adc push ja push pop lock push adc sub outsb incb mov rorb or stc nop popf and dec push insl dec push xor or mov dec lahf sbb dec and sub cmpsb xchg lret pop inc movsb dec mov fucom cmp sub pop mov xor (bad) movsb mov push sahf inc fldl cmp sahf movsl imul pop insb enter stc xor loope pusha dec fsubrs push xchg adc enter add inc fdivrl shll lsl jnp sub inc sbb mov dec pop sbb push pop xchg mov fsubs fldl insb or and cmp push lahf (bad) jne inc xchg mov push dec dec mov mov mov mov fadds fidiv in push or fcmovbe fstpl xor (bad) mov pop sti outsl mov mov or dec adc xor js dec sbb and cmp push mov cmpsl adc movsb cmp imul mov add arpl dec stos insb (bad) xor push je sub stos in jmp stos movsl (bad) jne pop cmp push mov (bad) adc sbb add add fisub mov notb lret add xchg (bad) mov push mov btc pushf push (bad) sti add (bad) aaa mov into mov jo pop sub outsl pop and pop jo push jp cmc fs and jp add (bad) mov add (bad) std sbb mov popa jne outsl xchg outsb mov mov int pop das pmulhuw mov lods sub dec pop dec pop push fisttp mov orl cld xchg push push dec jno iret nop pop scas and iret sahf daa dec and add je xchg push or add sub scas mov enter or rolb jg mov leave or dec push sub roll xchg xor sahf fimull out loopne and jae sbbl shll jg and ja xlat xchg push xchg push pusha pop mov out jl or loopne bound pop addr16 subl (bad) hlt jl push icebp movsl (bad) sbb cmp xchg cmp xchg xor mov push scas xor ret push adc mov mov push or bound adc jp sbb jl ror test xchg cld cwtl dec pop xorb or stos adc out or sti dec jecxz fadd sbb into push mov cmpsl test mov push fs call (bad) icebp jge xchg pop dec in add xor je inc dec xchg mov cld popa aam movswl fild and inc pop adc movsl loopne (bad) fild (bad) stc das loopne test test jge mov loop dec imul jp les or dec mov mov into sub mov xlat lret pop ds mov dec inc or or ds sbb add jecxz test mov add (bad) dec push and jns repnz icebp das jg push aas and mov subl pop loope out dec inc movsb inc push mov cmp pop add mov inc sub fsts lret jae mov pop jge jle fdivl or (bad) aaa push cmp adc pop mov sahf jge and mov push imul push add nop addb adc cltd aas inc mov jno adc test das in jmp xchg push imul rcrl sbb jmp insl ja shlb add and pop test orb test fadds xchg stc repnz add push frstor push xchg sbb inc adc test int push fldl add adc xor mov mov pushf push pop cwtl pop shrb and jge mov inc lahf adc cmp ss push aad dec enter sbb dec aaa jge xor push cmp pop jp pusha test and out push fsubrl adc xor pop out roll cmp lods add mov push pushf or sarb daa pop inc cmp scas fwait jge (bad) (bad) es (bad) (bad) dec fdivrp pusha mov nop push popf push cs (bad) pop adc in stos sub (bad) jp mov into cmpsb xchg sub mov push jmp pop push pop mov aad sub orl out cmp popa dec fimull aaa mov jge jnp push out arpl (bad) jle (bad) xor or push fwait add test not aam jo test push (bad) and scas jb test subl and sahf jnp adcb inc idivb inc pop popa inc lods push mov das shrb in push sub sub pop mov dec sub push out cs js pop sub jmp cmpsl fwait mov xor inc pop jge imul jle add sub add pop cmp stos ret pop jae inc jmp shl stos aam movsb mov add pusha shll xchg sbb and mov imul xlat mov (bad) movsl cmp sbb jecxz push xor push repz ja shlb mov nop (bad) mov jp aam movsb shrb lcall xor mov push aas out push push (bad) outsl aaa das ja or sub fld jnp (bad) ficompl mov aas jns jp cmp mov insl mov incl pop (bad) into inc daa pop mov xchg cltd aam push xor cmpsl dec cmp icebp (bad) gs test adc mov fmuls (bad) repnz js (bad) arpl add scas adc loopne add xor imul add dec mov cmp mov cmpsb adc stos loopne push aaa xchg cmp sub loope out cmp pop inc pop mov sti pop sub xchg mov nop scas pop fmuls aad addr16 or jmp and ds call add and fwait cmp loop pop stos gs adc push test fbld and pop push cltd arpl sti sub adc (bad) lea xchg mov pop cmp add arpl pop push xchg push pop jmp insl daa lods dec aad push sub out ja jecxz les xchg loop cwtl push inc jne push mov dec pop cmpsl xchg push add lret jg cmp or stc jl jns leave out cmpsl ds push sti lock pop mov push imul jnp fldl push outsl adc imul adc add cmovbe pop sub pushf push dec push pop cwtl inc cmc in sub dec sub enter dec xchg xor xor xchg or jb shlb mov imul hlt fimull fldl xchg roll jnp pop jbe pop hlt repnz jb jno inc xor popl ror pop push push shlb sub and jmp daa pusha inc std add push xchg pushf mov mov inc cmpsb (bad) testl leave lods insl push bound lea xor mov mov scas imul and repz out rolb xor loopne leave cmp movsb jl pop rclb mov imul jb ds add jnp pushf jnp mov notb mov inc add inc dec or push push inc out or fidiv mov cmp sti das aam mov je jbe inc jecxz ret or and jl and (bad) sub lret cmp sub push dec mov push mov fwait gs lahf stos pop stc mov nop push push pop inc inc hlt and mov or bound ret nop inc aad jno cmp outsb jno add add mov shrl js (bad) cmpsb inc (bad) adc cmp sarl pop iret and and mov sub arpl (bad) jno ret or cmc sti push idivb adc cwtl icebp sub out sub xor inc aaa pop ja xor sarl mov pop adc xchg aam je sbb jg fnstenv mov jns pop popf adc cmp jne mov push add imul in jae xchg fisubl sbb mov lds imul xchg add dec popl mov loope adc push call jmp xchg dec inc std push push pushf cmp jne or fstpt push sbb sub xor stc not ljmp or mov pop in push ret call push add adc stos sub pusha loopne mov push jg repnz aaa mov push add pop mov add addl pop dec std jns add in add add or lret xchg dec push cwtl sarb in movsl dec shlb loop push fidivrl seto and and mov insb dec push push mov in mov test mov sub pop in mov in jbe and push push push mov cmpsb xlat movsl js mov pop sbb jg add xor cli dec ds jmp adc push stos xor int3 fsts lret in rcl cwtl repz rorb and cmp mov fisubrl into inc out fnstenv or notl and ljmp xor push out leave sub aad mov cltd jg js mov pop push addr16 and subl fidiv ds inc jns xchg push scas lret insl add (bad) jecxz bound movsl dec pop mov inc stc and jle nop lahf pop leave xor incb and add add mov mov jp sti aas mov pushl add jb mov add inc push inc adc stc xor mulb mull xor icebp pop pop mov inc push das pop ja xlat push mov and xchg stos jns pop add sub jo push xchg jne or inc dec in cmp cmp shr push movsl jmp shlb jge add mov (bad) xchg xlat mov and imul and jle pop cmp add negb mov push iret loop xor adc xchg adc mov xor stos mov loop iret aad stos ret jg add pop push cmp daa ja adc cmpl and add jge jl add cmp jno fwait mov cmp dec gs jle sbb jbe dec push add mov std cmp adc pop add fisttpl loope adcl pop mov test jmp in mov pop or cltd xchg outsb push pop or outsl int3 pop fs dec test cltd sbb mov sub or or push and jae shl js pusha sub mov outsl nop pop pop or arpl in pushl sbb lret jmp je loope xchg jmp xchg xor inc cmc das movsb jbe cmp (bad) sub pop ljmp mov adc mov loop scas mov sbb pop mov fnstenv pop ds (bad) xchg lret pop loop test aad sbb push jae xchg movsb add mov test jl std add mov jae les rorb push stos imul cmp cltd adc push mov mov pop inc shr dec add pop mov enter mov push cld (bad) fimul add rol push sbb aad inc cmp outsl cli xchg dec add movsb ret in dec pop icebp xor outsb inc pop dec mov in push jns insb (bad) mov mov shr jl add jp pop lcall push dec sub and aaa mov mov pop mov out or popf sbb or xlat pop loop pop call push mov push sbb fwait push pop pop out incl ljmp or ret xchg inc lock inc xor add rcll add (bad) add jecxz outsb sub add dec add ss push out dec cmp aam mov movsb cmp movsl add movsb repz or jae or insl hlt dec sub mov cld and jnp jp iret inc test mov inc pop out sub lds or inc inc push mov pop out xchg (bad) rcll jnp pop es inc inc lock jg or das dec and jnp cmp data16 sub sub test xchg inc mov cmc and add mov movlps jle insl xlat nop imul pop mov aad fadd add add mov addr16 or daa std shrl arpl pop repnz imul (bad) stc out mov faddp and aaa stc addb imulb push pusha aaa jg push mov jae lret xor mov cmpb repnz dec dec push add xchg dec aaa rolb cmp add add (bad) dec std jl fmul xor outsl jno stc pusha fsub into push push sub aaa in mov mov jp out or jg out add loope mov (bad) outsb inc push or mov pop hlt insl pop insb loope inc mov cld adc imul stos xor pop pusha and ja xchg call fimul pop pop jo or not add and lcall mov jmp jbe cmovg sbbl sbb xchg mov mov push and lds test cmp iret sub jge fiaddl xchg mov inc adc hlt xor int3 add pop idivl mov add jl popa or or pop pop mov in loop lock arpl and lret push ud2 pavgb ret xor pop mov jge dec or jne dec in xor mov mov xor sti push imul dec rorb test sbb dec dec sbb out dec pop leave fsubr pop sub pop jne (bad) push push jmp add push not adc add pop popa repnz push (bad) dec outsb ret shl jg clc cmc or aas and je mov jmp and repnz in lock and roll sarl mov icebp or incb push rorb and jmp (bad) das pop mov (bad) pop mov mov add cli idivl pop (bad) das addr16 jae push pop in xchg lcall add mov ret neg lcall push in (bad) mov mov pop pop inc pop xchg sub gs adc lods dec loopne mov sub bound sub pop mov or or rorl loopne ja mov scas fcmovnu das (bad) push in mov inc aas not jns cli xchg repz mov dec jbe or cmp push (bad) lock or push imul cs (bad) pop imul mov push jmp inc lds ja repnz xor or push in (bad) or mov cmp loop out cli push cmpsl dec add fisttpll and pop jo (bad) xchg or fwait mov into outsl jne add les xor add lret icebp lret mov jmp pop and fstpt fnsave mov mov cld push xor pop clc push loope dec sub ss ret xor xchg add inc fs jmp mov push push jle enter sbbb jne das and add push inc sbb in xor fs mov fdivrl xchg xor ljmp fucomi jnp push cmp pop or aaa xchg push push clc fstps push addl sub in popa pop sbb add sahf repz add (bad) data16 outsb cmovno insl xor push jp enter or add jg stc rcrl add pop jmp imul cmp push lock mov lock mov jmp enter sub jmp push pop or sti sarl add gs loopne push mov dec mov stc or jl pop imull sub dec mov pop sbb pop jae push mov fimull (bad) jo xchg dec dec stos data16 or inc push xor pop lcall icebp mov arpl xor push rorb (bad) repz rclb mov std rcrb cmp fidivl sahf out mov ret jnp ror out je push hlt cmpsb mov cmp jns mov mov xor jge push xor mov jg jl add outsl fimull stos xchg mov inc jnp and adc sub add xchg mov stos les aad dec shlb xchg xchg jle dec cmp test pop add insb test mov and ss in (bad) jae xchg sbb xchg xchg push jle xor (bad) fdivl pop (bad) mulb hlt push (bad) je or adcb sbb jbe adc sub add sti jle pop mov mov lock cltd rclb xchg mov loope jno fmuls xchg shlb stc call inc mov xchg loopne stc ljmp cs inc inc scas ja pop test dec cld xchg adc (bad) jg add cmpsb add mov dec jmp and sbb (bad) xor std lahf and gs and cmc mov das clc lcall int push data16 jno xorl mov push push mov subb inc pop add repz pop sbb (bad) ja bswap adc sarl sbb je adc pop sub cmp and add fbld icebp mov rcrb aas sbb add mov push imul mov add sbb fwait in repnz mov dec int3 sub add inc dec lock je frstor adc outsb sahf cs das lods lcall rorl test leave movsl aad add out mov fisttp aas repz outsb sub pop cmp movsb add adc lret cmp mov rcr scas pusha inc mov js cmp add jno into jb icebp cmp xchg cld xor out popa repnz je int3 add sbb cmp add bound leave incl aaa inc xor movb mov outsb push (bad) mov add cmp fidivr mov cmp and jmp into adc push ret and push sti les imul test sub ljmp mov lods ss xor xor sti lret push ret or jnp fwait popf test mov hlt sbb out xor push push sub loop pop mov mov shrl ret add mov popa sbb jb call ljmp bound pop data16 test jl pusha jbe repnz pop cld fdiv mov orl call (bad) loop pop inc and push cld movsb roll popa cli jmp xchg inc jl fwait loopne scas iret pop cmp add call push leave jp jbe fs mov jnp bound adc loopne inc int push out push pop add popf jecxz jae or lret or popa fmulp or in jbe pusha data16 jno add fwait jo leave je js add clc pop mov aas xchg jns les ret inc push repz lods jbe sub pop jecxz ret rcl pusha cld aad pop add adcb xchg bound push out and cltd dec add xchg (bad) imul xchg sub clc push movsb or or dec (bad) or lods add mov ss cmp ret (bad) jno dec and push mov push sub ljmp xchg ret test addr16 jb pop fnop es add inc dec lret hlt scas (bad) push mov popa add and cwtl adc and int3 pop cmp mov mov or lea jge in cmp or je jo xor arpl ljmp sub outsb dec insb in nop or pop fistpll lods je cwtl sub test cmc nop or lret or imul mov mov ret mov les ret (bad) cmp and pop mov pushf mov mov push xchg or adc mov enter sbb adc stos call test fisubrl jnp in sbb mov inc shlb jl add push aad stos dec pusha pushf sub push test push pop dec hlt inc test pop shlb aam push adc cmpsb jo and dec add and adc data16 and out orb or bound inc lahf pop dec imul aam loope aas jge or dec test jg sbb repz adc adc mov push push scas mov adc mov test in sub inc imulb xchg enter test sub pop je mov pop sbb push loope test jo or les mov mov xor add dec mov adc out hlt in inc push subb nop adc fisubrl es loop add hlt mov pushf clc ret push adc mov mov notb inc and add inc dec in add loope inc or aam cwtl (bad) adc push xor lods inc xchg and adc lret mov pop data16 add dec shl cmp inc gs imul mov pop fs jnp fwait inc ret arpl rclb jl cwtl push and cmp adc out lods jmp dec fist jecxz ret imul adc xchg cmp push (bad) sub pop or pop and lea push ljmp add mov mov and aad testl pop pusha repz xchg xlat sub mov imull xchg adc lret xchg and pop cmpsb xor add lods (bad) lret (bad) xor jo jb loopne and daa ret popa and nop (bad) jno sub sti pusha inc dec ljmp cmp shrl dec and movsb xor pop add mov or je jo es mov sub xchg andb shrd cld dec repz fwait push shlb arpl out test test inc jnp xchg enter js je push data16 sbb inc inc movsl adc add cmp lret push and aas nop addr16 dec add inc dec xchg inc pop push adc jno in test (bad) cld cmpsl mov cli and ja dec notl dec sbb mov shrl imul inc xchg sbb loope aam xchg or jae mov push adc sub test mov lret sbb xor insl pop push jmp shrb mov xor mov es adc or lret stos mov or mov fsubs push (bad) (bad) loopne pushf jl add (bad) dec sub leave subl xchg pusha jle jl in stos inc rcl (bad) pop dec jns push mov adc add jge push pop imul adc mov ret int3 je sbb sub inc pop jmp mov mov add cmp mov cmp mov add out mov mov xchg push xor stos add adc or lods jg xacquire loop enter push or sub sbb repnz inc insb add mov jo cli imul add add pop mov leave add adc loope and movsb lock fstps sbb sbb add test bound ljmp or dec add jecxz cmp je and shrl mov push cmp nop rolb xchg dec stos inc adc mov fdivr aam (bad) jo push (bad) lret or hlt popf (bad) lock and lcall cli add jle,pn ffreep insb inc cld adc pop mov or sbb push and aam add fisubr icebp popl fstl inc adc aam inc fcompl sub cmp cli ret stc cmp leave push pop inc js cmp add xor aad js mov cwtl xor inc push lods faddl movsb lret or fwait cmp popa pop sub add jl add mov add sub inc cld rorb aam mov xor xorb sbb or or pushf add insb fsub hlt test insl pop stos enter jne and push xacquire in rcrl push inc or int3 les pop lcall adc fisubr ljmp cs dec xor dec jge les insb sub scas dec fsubr jecxz dec sbb add call xchg push push cmpsb bound mov rorl pushf imul cwtl clc add int jae rcrb add cltd fldcw fsubrs sarb add lds stos jp add jl mov leave pop pop iret adc rorb adc and adc lods movsl aaa or roll or sbb or lods out push pop sub out les mov or mov call movsb push cmp mov ds add rolb fadd arpl pop js mov lahf adc or inc jecxz (bad) xor adc mov jno and and (bad) sahf inc push int add and rcl dec add inc roll movl add pop movl jb inc pop xor mov test sub in add lods outsl xchg add fiaddl lret rorl lock sarb pusha aam lods add andb out add fmull add and and in and inc add pop fpatan xchg pop dec jo add cmp sbb (bad) xor cmp dec out inc sbb adc loope out test clc dec clc xchg add imul add jmp in or pusha dec mov lret or pusha fidivr jns daa push add idiv das add push inc add (bad) xchg xchg aas sub cmp dec fistp xor inc mov clc sbb add movaps jne push add jg sbb sub ret cmc adc jl xor inc in add repnz cmc lret xchg push sarb sbb mov rorb adc loope push sub lret xchg and add pop jg mov jo mov mov into cmpsb mov (bad) sahf sbb cmp lods cmp sbb enter or add push repz fisttp je pop pop add andl rcr or stc xchg test xchg mov (bad) dec shll dec sub clc clc and add and lcall xchg out inc cmp mov or es cld notb out lods out cltd sub inc adc mov adc xlat mov test int3 sbb jns xlat movsb pop test pop dec mov test xor ret jmp sti push pop mov das stc cmp notl sub (bad) in repnz sub test mov (bad) call mov mov addb outsl lret test adc add (bad) sbb ret andb jmp inc arpl push sbb mov pusha sti movsb add leave add mov fcoml add lods cmp sti add jbe (bad) bound sbbl push nop fsubl xor fs addr16 in andb outsb stos add mov popa sub enter xor cwtl mov leave test or rep loop data16 pop les rorl and aas shlb sub jb sub push jecxz sbb pop pusha cmpsb sbb popf ret call fwait call add lcall push mov jno fisttpll push sub mov adc push pop dec loopne cmp push push and jb xlat repz xchg cli or mov xor cltd aad mov push dec movsb adc clc cwtl (bad) mov adc adc loopne inc sti push sub inc pop cwtl enter xorb lock xorb add cmp add ret stos mov daa in sbb int3 adc adc push add movsl cmp rorb adc xor adc sub mov ja and je xchg cmp pop sbb inc leave or aam jno hlt (bad) cmpsb or jg add out jl addr16 nop addb mov outsb je inc ret loopne fsubrs lret das and stc sbb add loopne lock add in cmp push test (bad) or sti or les fwait in add jno push sbb test inc sbb out sub inc push insb shll bound add cmpsl xchg mov scas pop fadd xor out ret mov shlb push mov add lock and jecxz dec je addl add push icebp sub mov sbb orl or or lds pop pop leave sbb inc hlt adc mov mov push sti add mov mov sub mov mov mov lock je push in inc inc movsb inc or int adc sub sub pusha add mov jnp jl inc pop imul lret ja stos hlt ret in loopne cs leave xor or loopne pop ret xor push leave rcll cs test js sub push mov add xor bound inc lea icebp shll cld neg mov (bad) jb add je pop and or or aas jo xchg daa xor or adc and cmp sub bound enter cmp jmp dec sahf lcall rorb pop pusha cld inc xor pop iret or add jge roll daa test push push clc adc imul pusha mov cmp and dec sbb icebp xchg pusha pop fcmovne pop shl mov inc xor leave mov hlt movsl add test sbb in and push mov or cmp scas cmp adc sbb cmp inc add outsb sub and cmp jo int3 xchg add fisub xchg andb ret adc sbb repz add ror jl,pt imul sbb mov mov popa sbb push ret imul mov enter xchg cmpsl sbb mov jb add out scas xorb mov add sub bound fs mov shrl gs pop mov inc mov and pusha adc idiv xchg or cmp push push aam pop lock nop iret leave test xchg sbb int3 jb dec jb and notl fnstenv xor loop cld pop or fist enter xchg lods cld fs pusha sub in ret push adc mov mov xor shr imul mov add cmc pop nop dec ds xchg fnop mov ss inc sahf mov iret lea add add icebp mov fistpll ja (bad) fidivr add pcmpgtw enter sbb pop lcall xchg lldt (bad) gs movsl aam cmp sub in cmp lods push xchg xorb dec xchg sbb lret or lock arpl hlt (bad) into mov mov dec cmp hlt and js sub sub pop inc daa clc inc push inc iret cmpl or sbb push ret mov lahf mov sbb leave xor in test fnsave jl pop push mov cmpsb xor adc adc shll push imul or sahf in ja jae jae push loopne inc icebp cmp add add xchg or add imul lret imul xor dec mov sarb idivl add cmp and pusha insl in add sub xorb out add scas pushf inc bound sub insb hlt popa mov sub mov pop fdivrs das add pop test cli mov pop pop xlat cmp pop pop aad push pand addl pop mov dec and add pop inc vunpckhps add dec or fnsave dec inc push int push loopne cmp int3 inc shl dec js add dec pop fildl cmp aad pop mov inc loopne out pushf mov popa aam push jo dec adc fcomip mov add out mov daa in fiadd iret jl pop (bad) popf xor loope,pn push (bad) hlt cmc addr16 inc xorl lret movsb test imul shll in pop lods test cmp jnp ret add fcoms lods lods inc repz aam mov jl sarl and popa add cwtl repz push fdivrl add test ror inc mov fdivrl clc je add mov or lods pushf xor and ss dec inc cmc hlt aaa mulb xchg pushf add push add xorb pushf fnstenv mov (bad) in (bad) cs or loopne pop mov adc adc cmp jnp cmp call xor cmp sub mov pushf and enter or loop mov test dec jmp addb or imul shrb push pop dec jge pop jno idivl xor sbb fdivs mov adc or (bad) repnz aas cmpsl add lods daa and adcb test movsb push mulb lods cwtl js pop sbb ja fisub cmp cld in clc out mov add stos jp cmpsl inc mov divl lret adc jbe jge mov in jo daa or cmpsl adc subl jmp or add mov push xor icebp pop jno push sarb mov test or aad and and sbb hlt divb int3 add mov stos cmp jmp xor rolb cwtl js add in pop cld xchg insb fdivr jno das sbb cmp push add xchg aas push sti push in fadds sbb jbe test mov inc adc lods add pop adc (bad) in lret (bad) xor out addr16 (bad) repnz inc bound adc adc in ja mov push paddusb or mov into clc add lds repz out add fst inc xchg sarb sbb add rcl fcom lret (bad) shr or push cmp jnp inc and add push cmp aaa push scas and (bad) xor cmc loope in mov int push sbb xor pop mov jbe movsb test popl push hlt add test inc add dec pop pop mov sub addb add clc cmpsl and out mov pop sub aam scas mov out mov (bad) ja incl sbb or pop jb pop or popf add ja ja,pn add push and aam stos adc test dec (bad) rolb je inc jg mov push cmp daa outsl clc and mov mov pop js inc fsubrs add adc adc cmp je dec jmp inc std ret jne add sbb jl fwait or or mov enter fstl xor fnstenv add inc sbb lret fadds inc cli loopnew sbb cmpsl ja xor sbb xlat jne aaa fwait or inc jnp sbb mov pop (bad) divb add sbb nop jo addr16 rcr jo (bad) (bad) ret test mov xchg cmpsb or addl sbb stos rcrb mov add dec fildl aam into push pusha movsb ja loop (bad) xor lods hlt jns pop jl mov rcrb dec xlat mov stc xor pusha mov (bad) clc das fiaddl mov jb ljmp shll inc or test push push fcomps (bad) imul insb xchg rorl in and ljmp xchg ja push push inc lret sbb xor xlat add ss fcmovne fadd add ret add cmp (bad) adc and lods xchg adc cmp sbb and adc sbb ds push in out int3 mov and (bad) fmuls inc adc and (bad) dec orb shrb add pminsw (bad) mov subb int3 sbb jl mov int3 in outsl add jnp mov scas negb dec inc and inc jb clc cmp int mov stos test js cmpsl hlt jp push push rol or or inc stos dec repnz add hlt test pop (bad) jnp clc dec sbb cmc into cmp arpl jo xor pop sbb iret addr16 inc fisub std jb push addr16 je call jmp or sbb adc cwtl in aad add je fldt inc add cs and add insb sarb mov adc jb or adc and cwtl test or cmp or lahf in out subb jb xorb ficompl test mov add scas lods jp lahf add mov (bad) cltd xchg inc mull cmp and data16 pusha notb cwtl mov pop mov sub dec imul sub rcl cld (bad) cmp push lods rcrl loopne mov push add and sbb es test jle fmull mov aas dec jg rcrl mov inc mov dec or mov pop cmp jns out or inc addl jb movsb fs stos pop adc inc jnp pushf les xor cmp iret les out mov je imul xor inc pop cmp rorb arpl adc cmc jnp pop lret and int3 inc lea scas add sti mov std movsl xchg inc adc lds mov cmpsb push mov sub addr16 push sbb fcomps loop or inc adc dec out sub orb adc rcll sub push (bad) pop dec inc lock out rorl cmp dec int fildl inc ret push mov cs insl mov aad lock jo mov (bad) divb jp rclb js lret mov xor rcl cmpsb jge adc shll lret push jbe arpl pop add mov add cmp xor sbb push and mov lret cmp jae add sbb imul insb ja adc rcll jo or and xor test cli sub push leave ret xchg add repz shr mov add pusha hlt and jecxz les nop sub jge xchg in add jg and pop adc imulb and rcl jge mov in push gs (bad) fcomip mov xor setp jb cmp sub add xchg mov pop loop inc (bad) iret cltd shr adc (bad) add cmc jb out int3 add scas fnop sub mov dec pop movsb adc mov mov sbb jo adc fwait inc add or mov in mov and mov mov nop jp imul mov int3 adc sub sahf test mov je lahf mov loopne imul fs pop mov aas dec cmp lods xchg or mov sbb inc sbb or imul sub fistpll push mov mov (bad) and adc sub or push ss jg pusha dec insb insb mov clc jb mov fstpt push (bad) mov test cmp add fstps add fsts hlt fs adc mov (bad) ja pop mov mov scas xor and adc jo jmp mov adc adc shr hlt jnp lock adc and or imull (bad) enter jb and dec lock sbb push add lcall outsl lods aam jge inc jo and cmp cmpsl lods ja cmp clc inc aam out sub (bad) int jl push push add and stos loopne mov add sbb xor int3 add pop inc (bad) sahf addr16 imul daa cmc pop jge xchg enter out jecxz into add inc inc cmovnp out xchg mov and fwait add jo mov xor mov jbe in add mov sub adc jns or lret or inc cmp xor or jb or das mov xor ficomp jb and xor es (bad) mov les or pusha add es cmp pop inc mov pop xchg inc rol mov adc xor loopne cli mov mov or in mov cmp xor add cli dec xchg add rcrl dec pop dec mov adc ret dec popl fst and mov sbb (bad) sub xor sarl push inc add pushw (bad) outsl (bad) fnstsw js push cld testl jmp cmp or inc or and xor push repnz sbb out or xor loope sub pop add (bad) push mov mov mov loope and mov lea popf jne rclb cltd rorb dec js add mov sub add aas sbb sbb imul pop jb int3 add aaa pop add jp jbe scas and or push shlb ret ficomp xor adc clc ret mov inc pushf rolb repnz jge and insl (bad) pop cmpsl and mull jb pop das xor push ficom jae push std subl (bad) push cli imul arpl mov and ds mov xor fdivrs adc adc adc or inc jg mov add mov or jne push dec pushf add xchg xor std call enter pop mov leave sbbl cs adc pusha dec das xlat fiaddl jae std and xor pop lods mov insl xor lret dec pop fcmovu imul test arpl dec xor pop mov data16 xor jg push add cmpsl and hlt pop jle aam dec inc dec add add or adc sbb jns sub sbb push test fdivrl push inc xor add mov sbb ja popa sbb cmp call jl mov nop daa les dec xchg adcl jle add js das sbb inc cs je out add fsubrl cmp loope imul inc and enter insb outsb nop lods pop xchg sub (bad) stc loopne inc in rcrb inc fcompl and dec out add imul add or push mov add or mov fs adc clc outsb (bad) lret addr16 in sbb sbb jmp xchg movsb mov jb loopne aas subl lret xchg or push cmp add or inc push test xchg (bad) and mov out cmp fsts add jo roll out mov pusha scas inc addr16 aad sub push cltd push (bad) lods ja lods cmp (bad) popf sbb push and inc cld add mov xor pushf add mov mov xlat mov cmp imul and ret add mov insb mov jo adc out je xor jb repz mov popa cwtl shlb and loopne add pop repz in fisubl incl iret jno fsqrt lods lret adc test loopne lahf add cmc mov pop dec ret sbb int3 push cmpsb push loope adc or movsl push mov adc les push push (bad) dec push gs je lret sub enter xchg dec jns and lock pop call pop mov mov ret adc jl sbb inc sarl enter mov jmp les loop fnsave (bad) test nop pop lret push mov sub jl or add sahf inc lock fcomps sbb xor iret data16 (bad) cmc jp and jb dec xor push fidivl sub mov ret jo and inc jg mov pusha fstpl test push mov or into (bad) rcrl data16 add sbb jb xchg test jge arpl sub fwait int3 and hlt add pop and clc jg cmpsb or and cmp les in adc enter or mov les sti jns pop (bad) js and inc add jb and cmpsb pushf push ret xchg adc and and jbe push push lods and loop add and xor jb inc adc shlb pusha sbb xchg push arpl adc shrl nop fmuls or cmpsl sbb outsl pop add mov xor push mov push sbb inc pop xchg inc ret rcll pop sub add shrl add jmp in cmp add repnz push or xchg mov frstor adc popa mov mov or imul lret push (bad) out jl gs shrl sbb les jl iret ret push jge pop mov clc inc mov ds insb fs and iret adc repnz mov push mov repz sbb cmp jbe rcrb pop jl cltd add xor mov inc cmp xor mov pusha ja pop add xchg xor lret adc loopne adc lds mov push and add sub or pop mov in xchg pop xchg pop sbbb sahf pusha adc rolb fldt add cmpsl inc repz add lods cld add out mov les cmp arpl add push add rcll and cmp outsb xchg loopne insb or or les daa jnp lds dec aam push into and add or cmp nop add add pop inc push push rcl xor popa sahf mov leave add stos jle leave or dec dec and cmp push jb xchg scas jecxz loopne add cmpsb repnz aad add inc test dec inc mov add dec idivb push mov mov add cmpsb and sarl lods push mov and js test mov or clc add and and and prefetcht2 sbb fwait and pop or jo les stos cmp fwait sub xchg in repnz push sbb out jo push test jl sahf (bad) inc inc xorl jne ljmp add (bad) call jno lea jp stos decb aam int3 cltd roll xchg out or or pop add add cld repz ret add mov xchg add cmpsl fptan aam pushf and sbb inc iret popa push (bad) and mov and sbb (bad) jmp add jp ds pop es adc mov jecxz dec in jge pop jb or mov cmp rorl pop inc and jb jnp jns icebp stc sbb mov adc mov enter sub sub fs (bad) sub pop xor or lods pop mov int3 jno sbb pushf (bad) mov das shrb add mov push les cli fwait and sbb jno sub or hlt jl test rolb dec movb nop cwtl mov in xchg (bad) xor lods jo pusha (bad) mov or (bad) push mov push xor and cmp dec aad nop jl loopne popf push adc cmc je add out sahf lods pusha cmp cmpb mov (bad) fidivl jne add pop sub push xchg push jo lret xchg and (bad) xor sbb (bad) fs fsubr or stos jno add and fiaddl mov sti outsb rcrl gs and arpl sbb lret cltd add enter cmp scas mov inc gs shlb scas cmp imul fcomip dec outsb leave dec bound fidivrl cmpb andb stos cli or imul xor iret sarb and xchg cld xchg mov std jg add and and cmp sbb pop fnstenv faddl rcrb pop (bad) nop or cld or jl jns pusha and pushf jo and jno push push or imul or add inc call cmpsl enter adc mov push dec lods mov inc jle jnp add mov arpl es mov pop inc out add jns icebp mov mov (bad) js mov or scas inc push adc and mov push fcmovnbe shrb das cmp sbb aad inc mov fmull lret popa xchg jbe add das addb fidivr or add sbb in gs mov cld sbb in dec cmpsl dec dec mov dec xor or add pushf lods ja test xor pusha add rorb out and int inc push data16 rcrb add push (bad) enter xor clc cmp push push call sti call add das push ljmp inc cmpsl loop add mov add push jl inc stos pop jno pushf push inc rolb jmp enter fldcw mov mov nopl xor inc pshufw and clc sub pusha loope jb loopne cmpsl sbb rcrl add sbb mov mov test (bad) mov ljmp lcall dec aam mov add scas jbe inc aad shll lods sarb cli mov loope cmp or xor leave push cmp or mov cli clc lea adc cld add jns sub daa mov rcll lret cltd js mov jl repnz (bad) push outsb mov inc js pusha push push pusha add bound sub test dec xchg pop cmc sbb imul je lods and jb add xchg fild mov outsl mov sub idivb (bad) pushl out push jb sti shl (bad) pusha inc push loope pusha int in sub pop push sub jo mov pusha push bound jl test push daa (bad) adc xchg test add add mov and je and jnp add and popa fwait imul mov mov add divb mov inc scas (bad) in loop in fcomps mov lods or add adc mov sbb daa push cmp mov adc lret jl rcr jg lock daa fidiv push push add adc jle (bad) ljmp xchg xor aam (bad) rcr int mov clc sbb jmp add pop adc cwtl add leave scas push pop add pop lret mov roll fldl pop pop pop dec movsb xorb sub sbb orb mov mull or rcrl in loopne movsb pop inc leave dec scas push xchg or nop xor insl lahf lock inc movb mov pop adc pmaddwd cmp xchg repz stc push adc clc mov loopne add mov leave repz jl out sub dec aam fdivrl dec or scas dec fmuls add inc pop sbb push mov and sub loope das stos add rcll fs push push bound inc enter aaa dec adc or in lods mov inc ljmp push xlat popf inc adc or inc ret mov mov cmp pop inc push push popa jge out hlt sbb dec push movsl out and mov loope cmpb leave adc mov lods test jo into popa repz add roll xchg inc pusha fmull fnstenv popl push cmp pop lahf mov rorb rorb rclb cmpsb inc fdivl add inc out pop faddl sub cmp xor ret adc out pop dec dec add push (bad) push pop jl xor fucomi fs mov mov push into jae aam imul rorl mov and or pop clc sti pop pushf inc jb aam imul inc add xchg call jl js mov cmp sbb xor lock nop xlat inc (bad) xor sbb je mov add mov lods nop or das inc xor cld cmpsb nop addl pop xchg in in add and insl loop dec inc xorl call xor lret push mov inc loop inc lret or xchg pop lret js lock stos mov aaa jno mov into fsts add repz int3 out divb dec mov push ret and xchg lods xchg xor adc push mov add lret jge adc insb adc jb jmp adc adc cmp adc lds ljmp cmp lahf push jmp fmuls lahf enter das mov pop mov stos mov mov add gs insl pop jl and cld loopne sub sub sub dec or je pusha scas out mov jmp outsb int3 xchg int pop cmp js lods lret add sbb pusha ds pop sub test or mov in (bad) mov mul inc adc xchg push sbbb mov std mov mov pop ds les lods add outsb das xchg inc jmp jl movsl rcrb push out roll add adc jnp sbb data16 hlt mov cmp enter pop pop das adc pop imul andl bound loopne jge and ja xchg mov les scas add mov and test inc jmp out mov cmp and xor arpl cmp pop stos mov je fild loope rolb (bad) mov mov mov je bound shrl imull fimull inc cmp pop loope into mov pop loop insb test cmp leave imul lret ficomp adc sub or ret or int3 jae sbbb lret in (bad) decl loop push inc and add cmp ret lock ss mov xorb mov sbb pop mov xor ds test and aam dec outsb js insl cs push adc es inc mov in int jo test pop push in loopne push mov icebp sub add mov js adc pop (bad) arpl mov ss jl adc lahf call adc adc scas mov mov mov dec add mov lcall dec repz sub push ror sub adc std inc inc or lods test clc iret sub testb (bad) push test test jl dec sbb dec jl ja and int3 sbb or dec negb in fidivrl jle scas repnz and jecxz pusha test pop nop adc js rolb dec ss and inc jne and test movsb or xchg jl enter mov int3 arpl (bad) mov cmpsb lret push je nop clc pop xchg cld add jb push lock jl movsb mov or mov arpl add push popa xor mov or flds adc mov (bad) sbb jns in sbb jmp and inc (bad) movsb pop dec and cli sbb fsubrs xchg mov push add push adc mov iret xchg clc pusha loop (bad) pop cmpsl rcr push (bad) mov rorl and push rcrl movsb mov cmp aam pop aaa or pop rcr dec xchg loope nop or cwtl cmpsl sbbb sub jne mov mov insb jle movsb cwtl test inc pushf add mov xlat cmpsb (bad) pop inc aam mov mov dec push clc mov add or aam cmpsb loopne jns add jnp pop nop mov jecxz sub add inc adc repz pop xchg adc loop pop push cmp push pop inc inc inc movsb test mov je ss xchg std adc or rcll (bad) gs cmp lods (bad) mov loopne call fild mov jp add push lret aad incl add cltd insl jns xorb dec dec lods es into sub sub cmp mov loop inc and mov pop ljmp add stos or dec push pop nop inc ret imul test xchg or push inc inc cmpsl dec mov rclb mov jecxz dec add adc sbb shrl and mov loopne lret popa repz cld lret sub mov sub inc ret or ret jno hlt rorb jmp pop shrl pop iret lods adc push xchg sahf lods rorb inc sub (bad) call popa fisubl outsb mov rcrl add dec adc or and xor rcll mov xor pusha cli pop popa ds xlat mov xor les mov jae js dec pusha or lret mov ljmp adc mov dec fidivrl lock lods lock out aad adc leave cmp rcll or push xlat add es pop ja add je cs insl jne xor test dec fidiv xor add in rep jmp sbb repnz mov test test sbb jmp mov rcrb (bad) leave cwtl or inc out leave mov push push adc sub addb sbb out hlt sub loopne xchg les shlb sub mov mov cmp cmpsb fmull lcall inc lock sar sahf fwait js dec mov add mov inc xchg sbb in adc mov lret sub cmc add aam xchg insl outsb xchg das out repz pop sbbb mov xchg push enter call and inc lret pop xor shrb icebp mov movsb cmp test mov pushf sub shr outsb add fs xchg mov pop dec iret push pusha test leave inc les in addl add mov dec imul xchg push cld or enter test mov imul jmp pushf imul movsb jle (bad) mov jl enter push cltd movsb xor cmp inc cmc pop mov and cld test cmpl and push and subl gs or (bad) or mov xchg in jo les fmuls mov dec mov add int3 (bad) push xor mov je es sti mov scas mov dec ds insb xchg xor inc enter lret call shrd mov mov or add cmp test pop repnz (bad) jl ljmp fs nop mov call rolb mov je or cmpsb jo push sbb (bad) mov inc call sbb inc daa nop (bad) mov pop int3 fldcw sbbb pusha test lahf es fs cmp imul aam inc cmp pop (bad) and movb adc icebp and mov lods inc lea push out aam xchg mov (bad) sbb mov repnz dec push cmp sub std je push arpl cld mov adc into sahf adc dec xor push pushf xor mov add rorb xor inc mov int3 mov loope inc int3 repnz mov inc fildll fsubl orb lret movsl nop rorb xor mov hlt test nop and push subl (bad) repnz sub lea addb icebp sbb push xchg fcom or and push cmp add mov andb repz mov in cmp add sub sahf scas out inc fnstsw add dec and inc xchg push insl (bad) je arpl insb push adc testb push nop sarb (bad) xor add xchg repnz mov cmp ret cmp repnz jne and and jg mov inc add lods add cvtdq2ps aam loopne inc and mov xor outsl jecxz sub loopne jbe (bad) and loopne ret pop aad rcll mov add clc mov outsb dec and adc push jl mov inc jb mov add pop cmp movd cmpsb cltd (bad) lock and (bad) test inc fnstenv jo pushf add cltd adc popf add test or and xlat mov rolb loopne sahf push clc add mov mov xlat bound fisttpl fsubrs popa outsl inc fsubrs add cltd add add mov mov push mov push push rol pop jmp call sbb fdivrs jnp (bad) push xor roll lods or cwtl (bad) mov jo sbb adc (bad) ficoml mov pop out ljmp shrb add fidivl sub add lcall lret loopne cwtl push xor enter and sbb in xor dec rcl and and arpl and push xchg std xor inc lock add xchg and shrl xor pop add jo sbb stc mov sbbb (bad) or xor sbb repnz cmp ljmp into mov mov fsubl mulb out mov or fisubrl jno and (bad) js sub clc add jge adc pop add std inc mov movsb test sbb xchg pushf xchg iret add push cmp cltd sbb lods add cld ret int push and adc xor push or and xchg mov jno add mov mov mov pushf enter and and sub sub or dec cmp loope stc and jns cmc mov mov push cmpb inc out mov mov ficompl mov leave mov loope inc or inc mov (bad) jo stc dec push pop mov cwtl mov sti sbb jo mov sub jmp ret push rcrb add and ret add sbbb cmp fs mov in subb and mov push enter mov push add cltd sbb xlat movsb mov pop sub xchg push call add ss lock push andl movsb dec lret test lods (bad) in push mov dec mov or es addb push xor out testb mov in sub testl scas lods and add out in jno dec mov xor xchg cmpsl jo add inc je fldt mov jmp lret call rol loope jmp adc fcomi push test sub rol andl xor mov leave lret pop pop fmul pop dec mov mov rcr mov and cmp dec xor inc mov imul addb push cld std sbb lods mov adc push stos test push mov pop push fsincos adc mov push or bound orb stos add dec fistpl cmp xchg mov push movsb and mov xorb mov mov dec in inc and mov sub add js stos aas add adc xor push mov add outsb adc je adc add ret loopne mov add pop (bad) hlt loop fisubr pusha and mov outsb cmp and add addr16 loop jle xchg inc mulb add ret mov or jp xor stos call leave fsub and push (bad) xor add ds lods push dec jmp push lcall adcb shrl mov add sub pop ret nop ret sbb push pop cltd inc jae add pop ds and inc cmp iret call nop lods add jl push push (bad) dec fmul pusha nop jno cmp adcb sub jbe cmpps shrb push in fs mov adc sub (bad) pop mov xchg inc mov in lods dec xchg mov or addl fmull lcall fimul adc je push push mov inc mov adc push pusha andb mov mov push cmc ret xorb or roll dec and cmp xor imul rcrl rorb out ficom mov sub lods lock mov int3 dec inc test outsl mov test xchg loope xor in adc xchg call sbb test xor or inc mov cmp aam nop cmp in inc in and jp or les xchg cmc jnp and mov (bad) pop inc mov dec jo dec xchg mov pushf sbb rol inc es adc subb adc inc outsl mov les add add xor push loope push adc fcoml inc aas sub fcompl pushf cmp les daa mov flds mov stos mov cmp lods or inc repz adc aam mov dec sub faddl int3 add (bad) xchg dec add add or sbb (bad) nop dec das mov ret sub xchg add les mov inc orb pop ljmp cmpsb mov push (bad) enter cmp add ret or notl mov or mov lcall add cmpsb push or mov adcl xor fnstsw popa mov jge pusha sbb cmp nop add xorb adc (bad) push and fadds inc sbbl clc addb xlat lcall mov mov cmp dec nop mov or inc and cld call pusha add inc cli movsb (bad) es xchg int inc pop int3 mov out mov ja insb outsl xchg sahf sbb sub sbb pop dec xor mov hlt mov sbb xchg push or and pop mov sahf jecxz jnp push mov add xor dec inc add cld mov fwait mov push nop aam sub rorl mov arpl hlt mov add int3 mov out sub or mov call pop loopne inc push and loop aaa nop add enter pop sbb inc nop call add icebp sbb loop sub mov or dec sbb addr16 int3 add in sub mov mov rorl nop xor aam lods adc xor cmpsl sub jl xchg dec add mov leave inc dec int3 jo adcl in pushf add mov pop mov jbe push arpl int3 mov scas or imul mov xchg add jne ret in and scas inc mov hlt jecxz mov add xor sbb popa in sub mov popf shrb push pusha ja in mov adc nop loopne nop ja push andl stos sahf sti mov add adc das mov shrb jle add push imul ror add mov (bad) pusha pop test mov add icebp test pop jno adc xor mov inc loop xchg jge add std pop repz clc add ds jle add sub test push push in sbb stos mov adc ret cmp pop cs pop sbb cmp mov mov mov push (bad) mov mov pushf xchg addb (bad) jecxz pop roll add fstpt mov ret pop or pop in mov xchg rclb shlb lret mov mov iret add jl adcl cmc sahf jne push fmuls hlt adc fdivrs inc xor repnz test mov xchg andb fcmove adc sbb xor adc mov into and (bad) stos enter pop push mov int3 icebp pusha add insb fild (bad) lods test or xchg add js and or pop outsb test sbb in test adc in pop test pop frstor push cwtl cmp sub or and clc xor rolb ret or add or add shl jg (bad) test cmpsb or adcb iret inc or dec push je sub sarl add cmp mov xor sub arpl loop add add or and js add push inc add sub mov mov test mov sub sti (bad) xchg stos aad int3 cmp hlt leave icebp cs mov (bad) xchg dec adc mov pop mov ds mov lcall mov sbb stos ret mov iret and or fcoml push inc movsb fisttpll mov int3 add cmp cmp or inc add or fsubs and scas call xchg inc add cmp nop or xor mov add sti scas add pop pop lock sbbl mov push push sbb jmp push es and xor cmp in (bad) cmpxchg (bad) repz jge jne xor adc sbb xchg out cmp mov rcl dec lcall pusha aam or nop mov mov test xchg sbb adcb pop bound jge adc or gs or enter stos in loopne nop adc (bad) xor xchg icebp or jge add mov mov shlb dec lock jbe or aad out sbb or mov sub mov test cmpsl cwtl push cmp or mov nop (bad) pusha xchg mov xor cs cs add adc xchg mov add push aas lahf pop mov and (bad) mov add jl push jne imul mov mov out lea or xchg cmp cmp mov inc lcall xorb je in adc sub fiadd cld rcrb adc jne aas jmp inc fisttpl add nop cmp call rolb movsl push mov push rclb or cs or lods movsb or lock arpl push loop push push inc add xor jl lods push and loopne ret inc (bad) cs jmp sub mov mov xor loopne enter insl nop pop push cld xor out lods ficomp lahf test push nop inc adc icebp xchg cmp adc add dec xor add (bad) leave and inc jl mov movsb inc aaa test bound loopne sub add (bad) inc jo aam pop ja (bad) xchg push mov xor sbb jg lds adc mov jae or pop mov cmp dec and (bad) (bad) sti inc adc sub aaa nop xor sbb mov push pushf xor in dec or xchg pop jo and outsb decb insl sarb or mov (bad) subl loopne jmp inc rcrb push into fisub add jle fs leave lret les inc inc mov mov jae xchg rcll mov xlat jnp test push lahf mov es lock add jp pop inc adc rcrb dec mull add test lods xor loop dec and lock add mov inc add push into dec popa add xor add adc push adc pop aad cld test mov jne adc clc cmpsl push outsl push or ret das ja add lahf icebp fsubr mov test add rcr sub mov fs fldenv inc add roll or rclb add ss or mov pop sub in je je add and call mov inc das add mov test and mov or add xchg cld rolb cmp lock adc lock add xor add jnp pop sbb sahf jl pop add mov scas sbb insl xor hlt lret inc and std mov stc fsubl test stos inc int3 pusha lds mov mov cmc loopne sbb imul add icebp mov bound and jmp aam jno xor mov cmp hlt fs cmp add imul stos add and lods aam cmp fist mov adcb mov push or stos jg lcall jge pop push push (bad) lods int cwtl xchg leave imul ljmp and xchg or sub pop dec jle add gs cld ds scas xor lcall add aas xor test push push mov add adc xor jb nop scas ja add dec mov add leave dec popf xchg add or loop test push cmpsb shlb add scas subl mov add pop call movsl fiaddl sub dec test in and or or add xor sub or push js add out pop lds out add and mov (bad) fidivrl inc clc bound popl jae mov cwtl add mov mov add or add mov rclb lods cmp pop adc and movsb je mov test rcl lods mov lock sbb or cmp vaddpd test aas repnz add push pop jae paddd adc pop sbb dec mov sub sbb sub in rol in add pop xchg mov or inc ds test fisttp sub nop add rorb ja test movsb and jo jae inc add mov xlat sahf xor push add xchg movsl push mov add mov idiv movsb pop inc sub js add and and adc xor xor mov loope adc add and push out sub subl orl and mov leave cli rolb add lret xchg mov dec dec js in popa sub cli test dec or sub sbb cwtl sbb push adc sub popf cld (bad) loopne add ffreep movsl pop call cld scas sub in leave loop xorb mov popf and (bad) or sub (bad) jl mov sbb lods push mov ja fstl rolb mov sarb or test call loop les lret cmpsb add push nop inc dec std jg cmpb or inc or xchg inc test dec and dec xor mov mov mov nop cmp mov and and mov (bad) hlt dec adc add or push cli clc andb dec mov nop out mov pusha and insb add test push ds std sbb mov and cmpsb mov sub cld adc nop mov or add cmc fstpt (bad) mov sti inc lock inc mov mov loopne popa xchg xchg xchg leave sub sub xor sub push add faddl sub shlb jp cmp adc call test push in (bad) xor push push ja adc or and test loop jns (bad) hlt mov or add push cmp inc or lds and cmp mov sbbb xor mov cmp jg pushf and pusha mov std sbb xor shlb cld call sub aas adc dec or push sbb pop or int test icebp pop add imul cld adc or data16 xor push and push mov icebp pop dec js leave orb cmp clc ja in pop imul xor mov (bad) lock sbb cwtl or adc jb xor and (bad) fcomps or rolb inc enter je dec mov add rclb jmp cmp mov aad out fsubs fldt aas sub in imul cmpsb jl jno add ja ret sub cmp mov mov lods mov adc iret ds pop mov inc jne dec pop add je stos into or xchg push hlt (bad) xchg nop or (bad) jne push jne lcall mov add jbe mov aas add push adcl lea in ret sbb add pop or pop push clc daa mov push test push outsl pop add addb adc dec les mov cld dec ss clc and mov and mov out xchg ret inc les mov pop insb insl adc or pop das hlt add lods add sub or clc push addb test sbbl decb dec jl dec push dec fsubrl push dec cwtl and push sbb negb mov mov popf cmp jbe hlt lcall or sbb cmp jg jno add mov mov lods push loopne ret add jp mov rcrl cwtl adc aam fsubrs and scas call xor aas into std add lea or mov mov dec js cmp add and mov add clc roll add int add leave xchg popa jge cmp jb sbb sbb push insb loop movsb mov inc popf sbb cwtl cwtl add subl inc inc cld (bad) pop or xchg out or add clc xabort sbb add add jb add int3 enter lods pusha and xor out push enter lcall cli xor mov jnp sub pop adc (bad) in or lods and gs mov fldt xchg xor add idiv or sub xor enter pop and test test sti std xchg jmp ret and insb and rolb mov mov add mov pusha mov xor in adc dec push test fnstsw nop adc cmp inc fdivp dec xchg or mov ljmp out mov cwtl cmp stos addl adc sbb nop cld sbb dec shrb lcall add mov sbb add push fiadd add xlat sub sub sbb cmp clc mov push loope sbb pop add into mov sub inc insl adc leave lods jmp dec mov dec jo cmp sbb sub es inc and or (bad) mov jmp mov add cmp fmuls add jbe ret orb dec es xor iret lods and mov and in sbbb sub and push push inc hlt in gs hlt cmp or mov cmp pop str xor adc ljmp jae aam gs mov hlt add xor leave cli mov orb pop push push lds test sarb cltd mov pop notb mov sarb in push insb xor pop jae rcrl xchg xchg movsb add pop add mov rclb les push jae mov call and roll or cmp and jl (bad) lock lock adc test dec pushf push inc js out add and mov fimull in and mov adc call add push icebp or adc adc add into xchg add loopne jnp xor push dec fidiv xchg push or push and jae aam fwait add notl jo sbbb cmpsb pushf call out ss in adc add sbb inc popa xchg push or cmpl pusha cltd outsb cmp push add loope push fwait call mov sbb push push popf jge push sbb inc push repnz xchg lea inc xchg lahf pop and in add jo mov push adcb outsb lret fwait or push xchg inc ja add lock dec add repnz push sbb mov and popf imulb push aas rcl scas fsts pusha lret xchg outsb or or lcall push cmp cmp cmp pop lcall mov (bad) xchg add xor add xchg test outsl add xchg popf int push mov xor add push xor pop addb lahf pop (bad) mov leave and pop popf aam sub test push neg stos decb adc jl sarb sbb push movsl xor pusha arpl (bad) cmpsl fs iret xor sub xchg sbb cmp mov jg hlt sbb call push (bad) (bad) movsb cwtl add clc push iret arpl (bad) repnz dec loopne cld js sbb dec fnstcw mov (bad) xor mov xchg inc addb dec push or cmovl cmp dec rcl add arpl xchg repnz push push cmc xor add rclb xchg pusha iret andl loop jnp cmp and repnz cmp (bad) cmp add cmp int3 push mov js (bad) fsubl mov jns jl push out mov dec shrb sbb push sub fist roll testb out add pop incl ds nop loop rcr inc fmull hlt or jg adc or mov mov xor outsb push enter jl dec mov add loop mov add ss mov fisubrl dec inc mov pop inc sub mov jl js (bad) in and jp cmpb xchg or add mov decb fdivr popf stc push push pop cmp cmpl adc (bad) fsub fimul jl (bad) or shlb push fldcw jg mov std int3 idivb into fmull add pushf repnz push and cmp cltd arpl inc sbb sub jmp repnz add add dec add xor movsb inc movsb add cld aad pusha add lods or or (bad) hlt sti sbb subl into push inc sub and rcrb mov into lods pop jl add pavgb push (bad) xchg nop in push dec clc jo jnp xorb incl jbe sbb outsb aam addl inc and test ja add adc dec xchg adcl das adc fmuls mov cld jo add fldcw aam xor push sbb mov enter aas cld (bad) bound fwait inc (bad) loope sbb push mov sbb aam outsb in dec mov or clc (bad) inc (bad) cmp jo add mov lock cmp lods (bad) pushl and int jo jo xchg add in push sbb xchg inc xor mov pop js sbb fadds fadds cmp push mov in daa jle jp (bad) xor mov add out mov jle xchg loop mov xor ds mov xor or (bad) jb inc icebp inc repnz mov push lcall sub and dec and inc inc daa (bad) cmp js add add loop ror in and sub jmp pusha test and addb push sub stc inc xor mov adc adc pusha fsts add or pop mov cmp lahf fiadd push add leave sub or and adc sub lods mov pop iret mov or mov xchg or and jne dec enter incl mov pop sbb dec add enter push dec loopne loop in cwtl jae mov gs lahf push mov mov push mov loop inc sbb sbb sbb cmp pusha pop lret (bad) push js xor push xor scas push jo hlt jno in pop and dec ret insb jb dec cmpsl cltd sbb fmuls xor call das mulb jg cmp repz int xor movsb xchg int3 jmp pusha inc mov loope rcpps iret sete pop jb add push inc sbb and outsl test dec fisttp inc sub leave inc mov cmp sub int3 out dec jbe cs scas jmp and stos hlt add cmp and das fildl or mov xchg sub sbbl test js fwait (bad) jbe push sbb xor ret (bad) (bad) stos mov xchg xchg pop adc mov mov or mov mov fsubrp or push mov imul or popa xchg mov and or mov loop jmp mov pusha sub push inc rorl mov pop loopne push mov in sub mov jl mov daa xchg xchg mov or rcrb loop cmp mov div das jo pop push int3 sub jbe jg jl pop ret pop and mov inc xor push xor je sahf xchg into js pop sar mov sbb cwtl dec or adc dec xorb into dec push scas add int lcall leave add out add xor bound iret fstps add mov jno cld add aad or sbb (bad) xchg mov jle arpl pop (bad) pop sbb insl movsb in ror leave xchg inc sub cli mov adc (bad) dec jl xchg push pusha call pop xor dec add mov mov mov and cld inc mov jnp cmp adc jmp dec sub insl dec outsl call xor aaa pop cmp mov adc nop lds sub fsubrl add lock (bad) dec lret sbb mov sub sbb xchg push and test hlt xchg sbb xchg push fcoml (bad) xor cwtl clc pop (bad) mov imul cmpsb (bad) add inc mov or inc repnz xchg sub mov sub sub aaa sti jne or sahf pop ret push negl orb loop push leave dec or add cmp test add jno repnz dec push addr16 inc fadd jnp push (bad) lock xor jno,pt ret or xchg aam add ret cwtl jl or decb mov or mov jne es bound fs jbe xor clc insl sarl test outsl std push pop loopne pop push orl jg add mov inc add dec outsb jmp or (bad) (bad) mov push add (bad) jo push shll xchg xlat and fdivrp lcall xchg mov test test xchg getsec jl adc rcrl ds pop loopne push jl rolb pushf mov nop xchg hlt enter fidiv and push lret fmull gs mov push pushf sbb sarb push mov test mov add mov imulb add movsl adc fadds cmpsb add incb es adc (bad) inc sbb push xchg push xchg faddl imul inc sbb xchg sarb aad negl sub mov xor push test rcrb sarb mov rcll sar mov and adc repz sti push popl jno sub cs or dec loope dec mov mov jp (bad) fdivr movsl test leave dec pusha clc xor cmp and fadds sarl stos push pusha fcomp movsl sub push cld ffree adc sub (bad) in xchg mov cwtl adc cwtl push add movsb xor push sub or xorb pop outsb or jge inc insb movsb cpuid xchg ja shrb stos enter mov shrl adc add adc outsb shrl adc push loopne pusha sbb int and nopl push add repnz cltd mov mov add lea push cmp mov xorl dec mov inc add and dec aam cmp xor dec ss sub inc sub or pop subl adc sub dec mov xchg js imul (bad) pop jnp imul and sbb pop xchg rcrb or loopne in adc inc pop dec rorl pop cmp cmpsb cmp nop xchg add push dec fcoml jmp and sub and jmp adc enter cmp out ss inc outsb push loopne inc fcom mov pop dec (bad) sub mov sbb mov mov pop xlat jns add cmpsl xor mov popa sub rclb (bad) loopne lret lcall cmp or icebp sbb xor rcrb (bad) jge dec popf jne xchg adc cmp mov cmp in add or andl cmp add cmpsl sbb xchg dec jmp or or inc add push nop fs pop iret push pop divl jns sub lods xchg mov leave add pop sbb test loope hlt aam xorb and xorl mov leave inc (bad) test add fist in mov pop push push test mov jo push lahf fsubrs fstps (bad) adc outsb incl fnop pop jecxz adc loope add mov (bad) int3 mov mov cwtl cwtl nop mov in lahf inc add (bad) pop push shl jmp mov or hlt push mov add cli call clc lods jb add pop dec loopne cld insb (bad) mov adc jne fdiv (bad) pop dec fisttp int3 sbbl loopne notb leave lods or movsb (bad) cwtl cmp xor lahf jbe (bad) jg in cli test daa and push popa and adc add adc les inc dec sub sub (bad) xor in inc push and mov (bad) jno sub mov push test adc ror push mov mov mov outsl or push inc lret fdivl outsb and xor xchg adc add sub insl test (bad) cwtl inc or idivb adc je (bad) test push cmp pop add xor or mov sbb push loopne push test and stc or cmp sbb sub mov bound mov pop rcl xor push add call insb or xchg cmp addb pushf enter add push sbbb mov hlt fadds insl (bad) mov mov sbb out mov cmpsb lret pop pop popa push dec mov call clc mov pop in add xor dec fdivr mov sbb sbb lret (bad) xlat out add or pop cli cmp lock imul dec insb jns in add and sub scas cmp pop pop in cs rcll sub sbb jnp or add lret sahf xor (bad) ja pusha stc adc sbb lock push sbbb imul adc add mov and push (bad) adc and sbb add test sub stos pushf push xor and hlt mov inc jb jo (bad) std adc (bad) gs sub daa mov cs lcall adc jb xchg jns add xchg dec ret mov loopne add rorl jmp sub pop mov movl jno dec mov dec jge or decb xchg sub xlat out add movsl xor (bad) mov stos pushf dec dec push testl ds sbb mov xchg mul dec pushf and cld xor dec and add add pop sub sbbb mov (bad) mov iret pusha add cmp sbb pop add rcll mov push or (bad) outsl push scas outsb (bad) (bad) xor or mov icebp and je sub imul mov cmp dec sbb leave mov (bad) flds push lahf outsl rcrl cwtl std pop ja adc pop jne test insb xor es push les hlt mov dec mov push daa mov andb pushf (bad) jne test aam lcall cmp outsl xchg push mov inc insb ljmp add mov inc jo (bad) in cmp cmp dec in adc rcll pusha sbb adc sbb sub or gs imul add cmp pop xor shrb rclb pop in sbb pushf push (bad) mov leave faddl or sti in pop lods aam (bad) sub inc add sahf movb add sbb sbb or stos push lods or add jl syscall sub adc mov inc sub lods scas or jbe inc inc push and lods sbb (bad) out sub cwtl mov jle outsb dec mov xlat sub and in add stc lret (bad) je mov rclb xchg enter cmp mov pop add fcomip loopne js jl push fmul push lock sbb test js pop decb push call popl sub adc mov les out mov lods add int3 xor push mov fistl lods cmp xchg or or inc clc psadbw pop and pop cs xor push imul inc pushl loopne lock clc add sbb pop icebp adc mov add jbe dec test sti and sbb sbbl or sbb add or dec imul jmp stos xor cmpsb pushf sbb jo push mov mulb adc dec mov and imul stos insb in push add jb pop jecxz sub mov mov add inc inc adc add ret add add (bad) hlt int sub or pop (bad) dec cmp xchg scas cmp pop pusha je mov add fwait (bad) mov pop ret addr16 mov and push push cmc out jo push xchg xchg scas xor dec sbb int cmp mov lahf cli loopne scas xor pop test leave lcall mov add cs lea cltd pop xchg loope lahf aaa in and cmc mov stc sub pop orb and (bad) jg testb iret sbb loopne sub adc lea popf (bad) data16 nop cmpsl xor mov stc (bad) icebp sahf test push loope scas popa push cmp adc mov je lock xor in and cmp scas pop pushf test sbb xorb and cwtl jo dec inc mov (bad) (bad) imul jne mov shrl dec cltd (bad) cmp add mov and pop push jg jbe ret ja push push and popf mov mov hlt insl push and adc lea or xchg mov sub shr and cltd stos int3 outsb cmp cmc cmp cmpsl lods test loopne lretw rorb mov add sub ja rorl in jo sbb sbbl mov cmpsb pop (bad) mov ljmp mov (bad) and sub or mov or movl mov xor sbbl pop and xchg ljmp fldenv roll inc es scas xchg inc add (bad) adc andl nop cmp out daa sub fwait mov ljmp sbb sbb int3 adc jg cmpsl add scas push ds lret pushf sbb andl movb adc (bad) les int3 aad or and inc lahf sbb mov not pop dec mov jge movsb mov jno mov sub insb and and xchg cmp or adc cwtl cmpsl mov in insb add sbb shll pop lahf loopne xor into xchg flds les sub inc pop enter mov loopne (bad) or sbb or fildl test icebp inc stos fs movsl mov nop shrb cld lcall lods loopne je hlt movups and or sub add lods cmp add jo push test sbb pop xchg and out jl push xchg dec xchg push scas mov xchg lods adc mov xchg sbb pusha xlat nop cli movsb lods xorb insl push scas mov sub enter jg xor daa xor push lahf add int3 jg sub aad push imul int3 sbb jb cmpsl xchg mov add fstpt or addl cltd (bad) test (bad) sub pop aam add xchg aam aad test jle xor sub add lods add cwtl inc bound cli xchg sbb mov mov add rcrl fdivrl and popa or xchg (bad) add (bad) or jl cwtl sbb test cld fwait jne les cmp or xchg cwtl adc mov sahf mov dec scas movsb sbb pop adc xchg sub jecxz sar pop cmpsl mov mov jbe pusha in and sub insb mov test jge icebp and jnp or out hlt mov loopne leave cwtl leave and mov push mov and out lock add outsb sarl inc push (bad) loop arpl mov (bad) sub add je popf mov and test cli insb stos adc addr16 and call jge hlt pusha lods das sti jmp or and add push xor (bad) jbe jecxz hlt dec int3 sub cwtl nop sub mov stos adc pop mov sbb add adc mov xchg add add hlt bound test cwtl daa jmp test inc rcrb add mov or aad test mov icebp in rorb mov add std orl mov or icebp mov imul mov mov adc xchg pop lea sbb dec dec cmpb ret scas out orb cwtl call leave and test dec cmp cvttps2pi insl sbb mov test adc mov mov sti dec orb xor test aam dec adc sub cmpsl push into adc ftst xor cmpsb or adc clc sub adc aam adc ror adc nop rolb lods scas fs jnp (bad) icebp std scas mov out xor inc (bad) hlt jns lock jae in pusha in push xor test leave jmp pusha add or mov insb aam and lds add (bad) dec cmc and ret fs neg pop sub pusha out pop lret lret subl xchg nop call add test add jecxz flds addl jmp pusha push clc mov sbb jle into mov add push xchg rclb in or add sub and xchg mov mov les push out repz lods add mov fwait loopne in adc add jecxz or pop push inc mov adc inc push adc (bad) push in aam adc pop sti sub xor stos pusha sub lea sbb inc andl jp in lcall out stos cmc (bad) mov test mov movsl inc and jno adc pusha adc arpl rorb gs (bad) int3 and add sti js scas mov push sub daa mov inc jnp mov mov xchg push push inc imull inc cwtl and in pop xor scas adc shlb sub cmp dec mov cltd xchg push es rorb push cmc and gs sbb icebp icebp arpl adc inc (bad) xor pop or pop scas sub mov mov cmp mov icebp mov and daa sub popa adc pop sub lds inc mov push das pop mov and add mov repnz jg xor xor xchg pop jecxz js rorb fmulp jle cmp lret cli push inc inc ds nop lods in lds imul and insb sbb cli (bad) lock fadd push dec jp pusha push xchg pop xchg push enter and call adc xchg sbb xchg sub in pop cmp test imul push je out pushf and sub inc int3 adc adc xor sbb nop sbb lock es aaa inc add mov or dec pop fcomp push adc jo mov and pushf fldl ss fwait popf jbe (bad) ffreep add inc repz test cmpsb push (bad) add orl das ds or pushf xchg inc pop fbstp cwtl add dec (bad) movb adc or subb sbbl les sbb push cmpsl dec cld mov cli push cmpsb in (bad) cmp repz sub sub mov insb aas daa jl subb jns pop and sub lock mov add fcomip mov jle or jne push lock and mov int3 adc fucom cltd nop sub push xlat pop loope jae mov mov cmc dec fwait add and mov test (bad) int3 rolb (bad) into pop fstpl xchg hlt dec mov xchg dec dec shrb mov std mov divl lret popa inc ja adc (bad) (bad) cli pusha xchg pop outsb fcmovnb and stos mov mov pop push xchg bound cld rcll sbb jae xor jl test mov adc cmpsb and int mov call or jno nop (bad) push addr16 (bad) mov jp adc mov mov add push xor scas clc xchg popa xchg into movsb test push inc in cmpsl pop (bad) push mov es push pusha sbb xor loopne loopne les pop js cmpl js insb or mov add das daa sti ret pop cs (bad) cmp roll idivb inc loope add mov pop shrb adc push xchg jno pop sub dec mov jo je repz mov push mov mov (bad) sbb lods pusha cwtl pop or daa mov (bad) sbb mov aas sub pop ja xlat inc mov cmpl inc xchg loopne out ficomp and aas xchg clc jl out cltd test or fmuls add ja xor add test push add sti pop jne push cmp lea inc add push enter es xor mov mov dec adc comiss popa jge dec popa lock sarb mov movsl adc enter into cwtl lods mov (bad) xorb incb je insl and rcrb cli inc shrb jbe orl add dec lods mov push ja or fiadd test jne subb or lds jl cmpl test xor and out outsl in insl movsl adcl pop add aam xchg sub lods xchg lret aad arpl xor xor dec scas inc add dec rolb jmp mov test pushf mov or push in lahf adc jno jb int3 cli mov andl lcall mov adc sbb mov or push in add inc inc cmc insl cli dec push andb cltd jnp nop jle aam xor xchg sbbl int in test and lods add jne fcomps or or mov add (bad) daa out inc outsl aad xchg cmpb add hlt outsl mov clc pop xor cli mov stos dec jno dec loopne cmc mov popa scas inc jge test adc enter jg add test fld adc pop xor sbbl add xchg inc movsb xchg mov sub xor mov cmp es sub sub xor shlb fdivrl sbb push andl ret loop fcoml cmp push lahf pop leave inc push aad cltd nop mov and xchg (bad) (bad) lods enter rclb clc dec and lods dec add shlb pop aas adc mov (bad) adc cmp test adc cli repz mov mov scas (bad) ret and arpl pop ror cmp out mov sub mov (bad) adc inc ret jg mov xor in add mov in add jmp lock push and (bad) lahf div cmpb sbb popa push sub mov movsl sbb xor pushf xchg add stos sub enter cmp call enter loopne adc loop dec xlat addb mov popf jnp pop dec ret rcll shlb mov add xchg pusha add and mov lock xor lahf pop jnp pushf test fildll fs xor jl dec lods pop xorl rorb push inc xchg fxch sub test loope mov scas add sti dec flds pusha pop pushf dec mov mov js mov jbe adc inc (bad) cli stos addr16 (bad) inc fstl push jmp jne and cmp sbb imul aam sbb ret data16 or adcl cmp mov add adc iret xor ss or mov jae inc add dec nop sarb loope testb (bad) jge mov sarb dec add sub add (bad) stos sub das sbb lahf adcb jbe cmpsb mov add imul sub add jl fsubrl rcr push pusha add push adc subl ficomp daa mov xchg pusha mov scas add in mov leave daa lret push inc jle inc lcall outsb jge arpl push sbb adc mov add sbb fld and js push fmull fs (bad) jo addb in add sbb test mov sahf fadds xchg inc outsl test icebp jbe or cwtl ss movsb adc cltd cld cmp push push sti add iretw in call adc xchg jl loopne sahf or sub shl or add ficompl pop adc and sbb dec imul imul pop rorb movsb sbb mov rcll stos sub lret lods cli jns pop fild rclb pop loope mov test int call sub rorb mov cmp jle test add leave in lret sub jnp movsb and adc outsb pop mov or fs icebp sub aam andl push xor sti fadd inc andb inc sbb adc lret insl inc mov mov or inc xchg mov mov int xor pop je mov clc jl bound out mulb dec (bad) insb fcmovu inc les hlt jge sub loopne push adc loope rol lock mov movsb hlt add hlt fildll (bad) pmulhw mov or out (bad) cmp add movl jecxz adc pop pushf push push addb data16 mov and adcb dec pop iret and inc add (bad) cmc and add ljmp jle ds xor mov sbb adc push mov xchg lahf xor push pushf nop mov jbe add jno sub pop cmp add ret repz js lock add mov mov lds cld dec leave push pop cld pop or mov inc and in or dec sbb loop mov test es fist insb and or sbb ljmp js mov ss xorb add je lock sbb mov add mov add xchg mov imul int3 clc out movsb xchg js (bad) cli xor enter dec push je push and jl cmp push push mov aaa pop jns push xor cmpsb lea mov sub pusha xchg imul pusha add (bad) dec dec mov ja adc aam clc or cld xchg jne and ljmp cmp inc outsl jl adc mov dec or mov outsl cmp adc dec push push aam cltd aam mov push mov cltd in lret push sub ss mov jb test or sub sbb js sbb push leave rolb or mov cltd xor insl push aam es outsb jb pop cwtl add push call pop xor mov std in in rol push adc int3 sub int sbb mov movntq out sbbb data16 xor jae dec xchg js pusha inc repnz orl (bad) lock ret jmp or cmp bound pop insb pop sub jb push sub inc mov (bad) leave cltd sahf jg xor out add popa inc aam push xor cwtl and adc pop (bad) mulb mov adc adc mov (bad) aam inc test sbb jne sub jg test add xchg sbb cmp xor sahf pushf enter sarb imul cmp les jns mov dec nop and xor xor or out movsl lret xor pop std add add cwtl push out hlt rolb cmc jno mov gs call test add ficom lock inc in and jl int jge and push and inc leave push fadds mov popa add xor ds xor add adc mov hlt aas cmp pop push andb ss lea popa jae cs inc repnz pop jno inc xor das adc cmp outsl in push (bad) pusha or imul push pop fs inc cltd sarb push in sub push cmp stos add js (bad) xor pop mov out pop fwait aaa jl jbe (bad) jno dec shll or dec add jmp loop inc rolb je and stos mov cmc inc and jle loope sub sbb or add jmp cwtl mov or lock xchg and mov imulb sbb pop ljmp inc popl mov xchg mov (bad) lahf cmpsb test xchg jb aam cs jg add nop shlb int jns xchg sarl es sub inc bound add xchg cmp cmp pop out nop cmpsl es cmp test test popf sbb imul adc ds repnz aas cli testb mov aas push scas cmpl hlt movsl cmp cmp dec dec xchg test fadd adc dec ja subb fldl int mov mov clc data16 out loopne rolb les sub pop (bad) jo sbb xchg popf stos cmp xor and in mov mov insb pop mov (bad) xor sbb push cmp stos adc add xlat adc push push fs mov adc pop and repnz adc andl shrb xor inc jo or push pop mov jl sub ss mov xlat sbb lret mov push (bad) or xchg push mov rorb fcom or (bad) test daa jns dec adc cltd adc pop pushf dec insb xchg cmp imul jns add in pop mov je add insl xor mov popa sti js xchg sub loopne xchg mov fdivs and push push lds aaa inc cmpb jg sbb hlt rolb adc xor pop adc xor int3 imul repz push cmp add inc add push mov cmp or cmp inc fsubs (bad) lcall push andb sarl pop sbb xor or push jmp lea loopne aad scas jne clc add cmp inc add xchg stos jne mov fimull xchg and movsl push nop shrl mov je data16 and cld shrb mov into les mov adc shll addr16 xchg inc lods pop loopne lock push sbb sbb fmuls sti nop xchg jnp add orb dec lret ss add stc xchg xor bswap clc mov jl movsb push fsub cwtl cld add mov add cmp rclb repnz nop addb scas addr16 lods stos xor or leave add jns cltd js xchg scas and and inc sbb cmpl cmp push pop cmp popa inc (bad) sub icebp push sbb push cmpsb hlt pop (bad) dec call ss out inc mov fsubrs adcl rcl enter jbe pusha inc pop mov mov nop orb pop cwtl out sbb cmp pusha jmp pop jae jno dec pop add cmp cmpb movsl or mulb arpl pop fisttpl pop push push sbb lock movsl jne adc mov cmp jle add lret rcrb in xchg adc push sbb ret clc ror pop arpl jns in roll addr16 cmp xchg jb test and in add push and adc push mov subl les jmp push add nop lock add xchg loopne jbe add mov xor add sbb sbb out loop pushf push clc repz frstor adc add dec mov dec scas xchg jns fwait or mov fwait sbb or mov sub les in lods jo pushf mov sbb outsb add bound pop nop add ds aad mov push add xchg fs cltd inc repnz aas jno dec adc test cs pop cmc fs add add mov inc nop and add push andl xor jno fsts or dec loope sub sbb inc jne mov and xchg and jae push or and bound and clc or adc xor push jne xchg xchg push mov hlt pop outsb jbe ret movsl jno mov fdivs testl hlt inc loopne add adc mov (bad) jl dec fs adc lds mov pop in and push cmp inc pop stos and xchg movsb pusha aam lret dec lcall dec add shrb pop or dec or rorb inc test pushf and mov js icebp or fwait add out cmp and lods inc loop push or mov test lds loop mov lods lahf fistp mov xchg jo nop insb jb fadds xlat in lcall shrl cmpsb pop cltd adc cwtl mov orb dec adc mov xchg repz jge cmp (bad) mov xor push inc adc inc (bad) cli sbb inc jg paddusw sahf mov inc push cltd or lock fldenv stos jg cld fsubr cmp push lods sub sti out aaa bound inc sub pusha dec fmuls (bad) inc add lret aam out iret pop xor adc mov inc xchg mov bound pop xor or mov inc and add mov cmp jl int3 popa or adc pusha add (bad) ret mov clc das fwait sbb movsb inc test sbb sbb mov rolb mov outsl in cmp push enter loope mov cmp jp pop dec sbb jl xlat test ljmp movsl xor loopne push pop mov sub xchg mov add loop mov xchg test adc lcall xor mov jne cmp xchg sub in (bad) jno adc bound adc loope mov leave int3 or mov andb push push sbb stc sub lcall mov int inc xor adcb je fisubr sarb (bad) push xchg lds push mov and sbb jge das inc xchg xor sbb test in lret sub idivb push or dec push xchg xor call push jmp push aad add jo jae mov ret addl (bad) jl scas int3 enter clc loop cli test cs loop cld imul cmp jno sbb ret jp dec pop test cmc add sbb inc jl cmpsl add out dec mov loopne jg loopne xchg (bad) ja xchg xor jbe addl mov stos push in in pop ds and test pop and push add pop and shrb pop mov sti push (bad) stos andb mov pop loopne decl push push dec dec xchg sub pushf add jg or movhps call pop xchg in fiaddl sbbl (bad) testb xchg je (bad) cmp insb xlat enter pop cwtl xchg xor dec jp push daa dec push xor push jb add and ja andl xor fild ljmp sbb xchg rcl jns adc pushf inc lock and xchg add fsub adc aam push jo inc ja xchg das fmuls xchg cmp jnp addr16 jno mov or mov xor aaa rorl aas or sub lcall add imul in test and pop popa add enter sbb in push test arpl add imul cmp dec and xor aad push xor addb add add fild popa int3 jp mov add cltd outsb pop test insb mov loop hlt shl das xchg inc dec in add mov xchg pop or sub xchg nop jecxz ficomp inc add aas push adc dec js hlt test movsb mov rcrl and mov jae lods cmp ja xor adc cltd rcrb sub sbb dec int3 add push out push xchg xor add xchg loop cmp rcl xor adc mov fstps push shrl xor lock sub adc mov in imul and mov pop div or push xchg lock add jmp popf sbb ds cwtl ss divb ret adc push mov sub cmp or popa iret dec and sub xchg pop adc lea xor cmp mov jmp add gs push cmc and dec rorb fld in (bad) imul lods fcomps dec lds add jbe icebp (bad) shrl dec rolb hlt into mov add xchg mov inc fiadd rorb add jg fwait jo call fsts xchg mov lock jns jl in je sub pop cmp push out (bad) or ret push sbb push push rclb adc cltd loopne (bad) lea xor push dec pop push ret xchg cmp inc xchg loop push or fs jno adc adc sbb xchg sbbl and xchg std icebp mov add and push xchg add sti add adc mov mov jl jns mov sbb mov sbb xor or add and add inc rcll fidivl cmp lahf je dec and rorb add int inc cmpsl out mov jo shl xchg js ja adc adc mov xlat mov bound mov add fs (bad) enter add adcb add sbb inc mov mov imull xor mov je leave out faddp hlt bound push test icebp sub mov test fnstenv adc add imul and (bad) mov mov fsubrs (bad) adc sbb push inc add pop outsl push loope dec ds jg pop nop jne test or push (bad) sbb jno movmskps jl or in rorl and ret sarb jo push xchg ficomp sbb movq cmp and or bsf or loopne adc fmul or (bad) adc inc stos dec cmp jle clc add hlt rolb or aas imul sbb push push cmp adcb adc mov loopne (bad) das icebp adcl mov adc pushf push and pop in fs test hlt pop bound loopne push add push (bad) sbb cld mov adc sub dec out shlb dec or movsl test mov cs mov sub inc mov sbb xchg ds mov rcll sbb sbb fs lret lods adc mov add scas xchg inc aam pop add stos mov and push adc fcomps cmpsl mov sub adc xchg sbb stc icebp not sahf enter push pop inc pop sbb sub cli jle jge add (bad) and add mov stos add pushf (bad) shl mov mov out das add arpl (bad) inc xchg jae cltd cli jne (bad) out push or add dec and add adc jb inc xchg je mov add dec jnp adcb icebp lods inc std inc cmovo aaa cmpsl mov addb mov jp test imul xor not cmp push arpl pop lock add xlat pop sahf movswl inc push sti or mov fstpt add or adc aam add pop enter pop xlat push mov aad loopne jno jecxz add clc sub push (bad) inc shrl les out mov push clc mov sbb mov xor jo fsubs add xchg mov xchg xchg mov adcb ja jne std sbb mov rolb xchg pusha xlat (bad) push sbb sbb push jp sub (bad) das pop inc cwtl xor dec push movsb (bad) aam cmp jno xor mov lds test outsl aas cmovne dec pusha xchg push inc popf in add monitor es pop mov xlat movsl ret roll mov dec repz add jno xor into out add es xchg jae add pop sbb add cmp call sbb and repnz test divl xchg mov or pop pop sub add adc (bad) jno sbb and mov rorb xchg xchg xchg shrb inc pop (bad) aam and mov mov test cmp add xchg mov lret adc lahf xchg fcompl fldt lcall arpl enter mov mov insb popa push test mov jno sbb jmp inc ds xor or sbb (bad) pop test jmp clc inc je cmp cmp push int3 xor mov mov jnp add or in add ret dec adc sbbb (bad) lock sarl add outsl js mov lock addl loope sarb pusha or pop adc mov mov mov mov subb pop push pusha pop pop pop push push test push fmull mov shlb push add jl,pn shrb add jp mov xchg adc fadds dec jmp jo sub sbb pop and into sbb rol test and xchg inc scas push add sub or pusha loopne jo cwtl pusha es xchg mov jg jl add lods and sarl lea and jecxz push xchg fstps movsb mov cmpsl cmc add fidivrl (bad) mov sbb mov sbb or adc adc mov test sarb ds adc and sub inc and inc mov test loopne sub pusha sub fldenv rcrl pop ljmp pusha cmp push and (bad) cmp dec mov nop loopne mov nop xchg cmp xchg cltd pop push repnz nop pop push sub dec xchg and pop loopne movsb sub andl loop xchg lret jae jl fistpl fwait or insl add pop sub in loope arpl xchg dec lret and enter xor pop loopne movsb or and jmp xchg (bad) and rcr nop jl fsubrl mov xchg inc inc push test xor popa sbb mov add xlat sbb add js and test sbb insb and enter (bad) inc sub test enter cmp pusha xchg push loopne push jno xor les test in and loop orl xor fs sbb cld add adc cmp mov mov fiadd fbld sarb test adc sbb dec add inc arpl (bad) mov in fwait jo mov add jp adc cwtl fsubs and sarl bswap xor js jmp adc sarl add cwtl (bad) fstpt xor sub mov jl pop mov pop xor repnz call inc clc ucomiss sub inc and and divb sarb lahf mov or add inc mov inc add dec mov jp pusha push mov test orl loop mov jecxz xor and pop mov adc xor data16 jae add mov popf fxch fnsave push adc daa pusha (bad) xor dec xchg rclb inc enter and cmovbe xchg in and enter xchg aam or cmp movsl arpl fucomp insb push jo xchg add rolb jl rorb mov jge pop addr16 mov nop aam jnp clc (bad) nop mov dec mov adc xchg add (bad) fstl jl popa adc mov loopne adc rol shrl fmuls cmp dec push mov rorb mov mov xchg cld adc andl inc adc and jle push mov dec les sub lahf pop dec or daa inc mov jae,pt pop jns push in das add mov and les xchg dec addb call mov (bad) cmc add sbb xlat push nop insb pop aaa clc test pushf mov add xchg (bad) jbe push popf in icebp repnz push mov dec mov movsb adc popa or or incl call mov add xchg pop cmp push movsl and or jo stc jmp xorb shrl test xchg xorb in mov int leave push mov aas movsb lret lcall ret cltd or les insb bound sub movsb loopne dec adc cmp jno sub dec in xchg in lds xor (bad) add ret xor jecxz stc cmp mov mov add sbb icebp cwtl adc repnz fs or sub add xor test sub add rorl xor xchg nop pop adc xadd aam xor push xor inc mov cld add int loope je and inc inc les inc push xor js jnp jo push call sbb dec ja cli add test adc or or pop popa mov add cmp or popf ret cmp add sub inc lock arpl cmp and dec hlt or pop pop imul pop xchg add lcall mov sbb insl push jl (bad) mov or int mov inc andl pop ret adc and inc push push lock or dec cmp adc xor fdivrl loope cmp mov in pop adc xor xchg sbb mov dec cmp inc mov lods (bad) iret das or mov sbb cmp inc dec jo xor fcompl or mov xchg leave pop add and cwtl sarl and adc sbb cwtl xor in inc mov dec cmp into inc and aam fildl jno push mov adc adc sub and and push cld xchg or cwtl mov xchg jo daa dec xchg add xor mov dec cmp dec or sub mov dec es cmp sbb cmpl sub arpl (bad) js sbb mov mov or mov xor cmp push adc rcrb lock les adc shll xor inc arpl rorl (bad) mov add mov and pop lret popa and cmpsl mov sub daa sub inc jae add aad mov xor rol add fnsave mov or lods and and mov cmpsb pop movsb flds xor insl rcrb pushf mov pop (bad) jno sub sub sti xchg and sub and add jo pop push les or dec inc add xor stos js pop sbb jl into xchg lret aam adc test les pusha into (bad) (bad) mov lods inc xor (bad) (bad) mov shll dec mov test repz xchg nop fdivrl call mov int3 cmpsb in add dec pop jne inc add test adc js add (bad) ret mov cmpsb sbb pop es in adc mov jo or roll or mov jae dec nop inc pop push sub inc lock push fcoml adcb test mov mov std test jecxz rcrb pop in add mov popl adc xor fldl in mov sbb add lahf dec loopne xor jecxz js mov loop jnp leave sbb xorb das mov mov or pusha test xchg and mov (bad) repz les movsl mov sbb sbbb sub xchg test mov cs rol or imul nop mov mov scas sub cmpb mov dec rcl cmp jecxz (bad) pop dec jo fmul and subl xchg fyl2xp1 scas cwtl add and jbe dec xchg lods pop xor out mov mov ss mov ds mov negb mov pushf (bad) jbe add mov cmc cmpsb add cmp int3 or jb xor add adc movsb leave or lea sub push ret or insl mov adc sti je movsb addr16 adc or mov mov inc jae loopne push mov adc pop sub or adc test nop (bad) mov enter mov jae and je add cld inc adc dec and jl sbb xchg add xchg call nopl mov mov inc jl test add stc in sub stos shlb mov into dec fimul adc dec insb setno (bad) leave (bad) inc adc add sbb push movsl xchg xor enter pop hlt add faddl jmp cmp movsb out xor xchg jnp xor adc inc test pop pop hlt mov inc add aaa int mov jae cmp or enter pop add cmp adc xchg add fildl cwtl pop xor mov and add and cld loopne push dec xchg adc cmp push jg lods mov test jmp js jbe dec mov mov mov xchg xor jns mull aad xchg push cmp rclb mov sub and cltd pop call mov push adc hlt insb push jl or call xchg sub bound (bad) dec mov shlb lret andb add cmc call inc dec mov mov out sbb clc sbb nop lods push bound or and or arpl cmp xchg loopne (bad) cwtl mov or add push sub lock fild pop xor add roll call nop arpl xchg adc sbbb ja femms in push fdivrs pop xchg sbb sub fstps ja leave sbb mov cmpsb cmp cmp scas inc clc push in mov push shll (bad) cmc leave and sbb mov xor scas jmp jo out dec aam movsl add setae loop sbb jae mov or dec das adc jb cmpsb cmp xor lods in or inc aam adc stos iret or call add xor mov or or and int orb add ret sbb cmpl fsubl std rcr dec xor adc push jl sub jg add sbb or jge push icebp cs testl imul jae add fdivl jecxz,pt pop add lods xor rcrb push push popa nop xchg sub cli cmp int and adc adc int in testl jno cmp or in in sub mov mov or push and push mov andl (bad) jg (bad) inc insb mov ja frstor cmp xor pusha adc cmp (bad) in push push cmpb adc push out pop xor out sbb loop mov es cmpsb inc or mov push ret xchg push and xor dec adc test jmp jbe add or xlat mov mov mov xor orl pusha add sub xor loopne (bad) jo orl lea push or mov (bad) arpl sti pop xchg and mov or and jg imul and test call dec test clc xor or xchg sbb push int fildl les movaps xchg and cmp dec pop movsb and repnz sbb or (bad) mov xor test xchg cli sahf insl and mov add inc pusha jmp xor pushf add and mov lock mov or ret and xchg mov into pop add inc (bad) iret clc mov bound jno or add xchg cmp push mov stos call hlt add test sub insb push shrb add push jp lea inc add sbb or ds xor mov in mov inc xor mov xor dec sub es adc push add sbb repnz (bad) mov enter cmp jns adc mov sub adc mov add xchg sbb nop (bad) dec ret jo dec adc and ret xchg xor or xchg into cmpb (bad) loopne pop ja or mov or sub sbb xorl add popf push (bad) or add sbb xchg cmp ljmp jle pop call popf adcb adc aam out fwait or xchg out add sbb test cmp or mov fmulp mov add xor cmp pop mov cmpb dec or add xchg rclb jle sub push js and xchg xor cmpl xchg loop push lcall mov insl outsl shlb mov add xchg aaa jg adc push add rclb pop or sbb mov (bad) xor sub add push rol add cmp lcall insl cmp mov es pop adc cmp or jecxz imul xor mov push xor iret xor push push nop ret cmp cltd inc rorl inc and jo or mov mov xchg xor add sub iret hlt repz dec adcl pop push xchg push or xchg and push mov or fdivrl cld inc test andb pop sahf add pop mov daa lret add xor fs cmp cli jge dec push mov (bad) fadds jle ret lcall adcb mov icebp hlt sbb out imul xchg nop in push sbb and mov icebp fldcw addb cmp popw mov xchg add cltd xor xchg pusha mov fistpll mov adc xor cmp movsb aam mov and popf add push (bad) les add jnp lds or clc or and or mov dec mov and sar test xchg (bad) xor movsb xor add xchg loope loop in fucomip add sbb incb outsb adc adc fsubs mov jnp and leave cmp mov test jo cmp dec mov clc mov in rolb push xchg adcl xor test leave add sub add adc inc lea mov les jp rorb and push add or push sub lods popa push jo jo cmp in das and fwait lret add lcall aam lahf push pop push inc or bound sbb fdivl adc aam test decb xchg shrb xor add leave and mov dec sbb fisubl xchg shlb enter or rorb inc xchg jae call inc je add mov scas push mov pop or and sub sub ss fdivrs inc (bad) push add sbb sub jle dec dec xchg or add andl add dec mov ljmp xor lods testb push fnsave pop dec pop sbb push push dec andl pop movl sahf mov loop (bad) xchg adc sbb cli addl sub xor and push cmpl cmc cmp or sarb and pop push mov push pop cmpb les inc or jnp mov inc rolb or aad jo sbb sub mov flds cld pop sub dec fcompl xor push jp dec (bad) jno movsb hlt add mov call push mov jo movsb pusha and jb jnp mov mov push xor gs addr16 and push ficom frstor imulb imul inc push add enter adc inc inc ljmp jnp add xor pop cltd dec or sbbb jns jns cvtps2pd pop mov out add dec loope cmp test add or es mov or fcoml mov xor sub cmp inc stos push cs sbb in sub jmp pop adc jl mov inc test in aam add (bad) push mov add popf in xlat dec aad add test and sbb jmp addr16 add sbb mov (bad) or daa sbb sub push dec cmp test dec push jl es sub (bad) sbb sub jecxz aam add push and add dec (bad) jl in in pusha es jne les xchg xchg push add adc dec and mov and adc adc rcl mov outsb inc add and (bad) xor test cmpb (bad) push add fidivrl xor jg dec mov cmp adc sbb stc mov cmc xchg add cmp and add mov dec xchg in add test in and je ds jl add jl lock add cmc cwtl push or insb cs jmp mov in sbb push adc mov mov inc xor and adc inc cs je cmc add add jne (bad) pop mov add dec pop test push jg cmp sti lds pusha lock add bound insb or (bad) in sbbb sbb test inc xchg sub mov leave add push mov mov movsb cmc add jp sub cmp xor xchg pop pop xor push sub pop inc imul fcmovb mov xchg sarb arpl mov test sbb les mov or mov lcall mov (bad) stos jnp sahf add call cltd arpl mov mov add push rolb loope fildl sbb loopne into mov (bad) rol ret jmp mov es or stc dec adc push fcom insb mov fsubl add rcll sub (bad) jo rclb push inc leave sbb in dec test pmulhuw mov mov inc add or fwait unpckhps pop jns les rcrb test add into jae neg fldenv js add popa pusha adc in out pop mov aam ss push dec (bad) call movl or and xchg sahf in dec mov repnz push pusha adc pop aaa or and ss xchg int (bad) loopne pop pop (bad) dec hlt pop push push loop ss mov xchg push add mov int and add xchg inc lods pop (bad) pop call leave addr16 jp adc ret out xchg push repnz add sub les lock xchg mov pop in aad and hlt mov call mov jge lret sub pop in out xor inc mov xor aas les sub xchg ja push sbb idivb push data16 pop je out aam ds leave insb pop int push cmpb add jne or popa sbb mov lea mov ret push cmpsl or xor loope pop popf add imulb sub sbbb stc pop sub add xchg das out je addl test mov iret movsl daa sbb scas aad jo dec add jb (bad) sub lods jns sbb and pop jl add sti inc aas xchg push lcall int3 adc cmpb inc imul xchg (bad) je mov push aad xchg mov test divl sub push sub inc jl nop inc rolb xor int push add pusha sbb or leave pop or idivb add dec sub scas xchg sbb mov mov mov jp dec scas xor stc roll enter jno cwtl mov or lret scas pop aaa hlt (bad) ret sub pop pushf add mov inc sbb std clc fcomps mov mov lock pushf fldt cld mov mov sbb push add push testb sub and mov jmp jl or xchg mov mov mov push xchg inc mov les (bad) push dec add add dec pop test fcoms sub and ret decb vpcmpgtw aad and fsubr aam rorl scas mov mov rclb jnp add iret scas es je dec push decl vpermq scas push cmp jl fldenv icebp hlt cli sbbb pop les add in aam cltd cmp movsb add mov mov ret xorb repz lock xor add loope das cltd pop jne xor pop daa adc mov in sahf and inc fcoms aam dec pusha adc js mov hlt push dec cmpsl rclb ret xchg pop cmpsb fisttpll inc mov mov xor and or scas push ss mov sbb adc mov sbb jl sub push jo (bad) cmpsb jg,pn xchg or push lods cmc dec gs int3 or pop adcl es jecxz in mov test add push add jl fldenv sbbb loopne imul stos nop adc jo (bad) (bad) mulb sub or inc adc pop dec mov sbb hlt pushf and rol sbb xchg dec add dec mov cmovg jnp orb ss outsb push sub add fstpl aaa push mov enter loope or sub xor nop xor push int sbb cs aas adc mov cmp into inc push out or mov repnz inc add movsl add sub mov adc add and test mov pushf ds loopne dec test adc movsb ds ja xchg out push (bad) pop dec adc push cmpsb add add jno cmp out insb jle dec (bad) xchg pop dec call lret lds add inc nop push mov dec sbb inc sbb pop daa rorl mov lock inc jmp lea or mov sbb adc cmp add sahf add mov outsb (bad) scas jno imulb lods insl ret clc (bad) push shlb scas mov xchg push dec (bad) aad add adc pop add dec or xchg mov not sub loopne stos je pop ss xor movsb or and aaa push jp test mov pop (bad) hlt sub cs (bad) stos pop sub (bad) xchg es mov pop or jno ficom jo adc and mov sbbb jl cltd clc (bad) mov ss add lock and iret das dec xor lods call test push mov jae jb lock and cmpsb ret cmp shrb pop sarb inc inc loopne or mov mov std lock in call scas cs mov int and pop jb mov addb inc lahf jne xor roll mov add ja add cmpsb stos ljmp pop aaa nop addb add movsl fstpt push cmpsb or pop lock and mov add or add mov mov sbb add dec rcr scas inc leave lods ljmp shl push or in and ret (bad) push add jmp (bad) inc mov xor lods xchg subb xchg dec and stos add sbb mov add pop lods loopne and and das cwtl adc push mov popf in xchg jo push dec pop sahf or jl sbb mov aaa sarl inc fisubrl ror pop popa add lods and mov fs and sbb or sub (bad) or pop mov decb inc jb pusha repz pushf mov push mov imul cmc fsts movsb pop aam inc pop jp push mov outsb sbb sub mov subb cltd xchg jg cwtl mov jge pusha mov (bad) inc lahf mov fwait js fsubl mov sar fwait xor or mov xlat pop mov adc push nop push test mov dec add and lods and loopne xlat mov lret lods inc test cmpsl sub fcompl clc mov sbb jb mov lret add std adc or adc mov outsb (bad) mov and fisttpll pop dec dec mov xchg push ret xlat fimull push inc sti cmpsl (bad) sub xor xor or pop add (bad) xchg adc lods rcll ds or mov add lock scas add pushf test cmpsb ds xchg pushf or add mov mov and (bad) and jle dec or jo mov (bad) mov xchg add out xchg (bad) call in (bad) xchg shrb or add xor jl dec or adc pop add fildl cltd (bad) dec fidivl clc inc jmp push adc and pop into imul loope push and mov xor lahf add sub mov (bad) bound fiadd repz jb test (bad) or mov dec testb mov test inc movsb bound adc mov jae lcall and xor clc mov das pop sub or rcrl pushf cld int3 data16 sahf or (bad) jae push sbb int3 add aam int3 addb xchg add iret (bad) dec mov sub pop mov xchg sbb mov in sub cld push pop rorb fwait shl or and jle nop mov cmp cmp xlat cli insl or int hlt ret jg test pop pop adc (bad) std xchg jo xor pop mov fst aaa cmp xchg test inc fwait mov shll aaa mov mov scas imul or mov xor jno std jl and sub stos jnp out xchg les add daa (bad) js push cmp xchg inc aad cwtl xor push dec mov xor xchg jge leave sarb loopne loopne les push popf pop inc adc scas dec jo bound sub pop rol in or cmp adc mov nop (bad) (bad) js fwait mov pop jb and aas popa jo mov mov lds daa in sbb sbb mov andb aam (bad) flds jmp mov push dec icebp adc enter pop push fstpt fnstsw fmuls pop mov xchg adc leave ret add loopne jp xchg fldlg2 inc mov mov int3 les push or pop rcrb das in push arpl clc notl js and add add incb add pusha and loopne ret dec loope jae mov add xchg cmp movsl add add sbb ror pop gs pop xchg inc inc rorl icebp div test in cwtl daa xchg sbb adc lret push (bad) fdivl inc or je jmp add pop adcb xor jns add cmc jp add outsb int3 imulb orb clc shrb cld pusha cwtl pop xor mov xchg hlt stos and cmpsb lods inc add mov jp and mov pop mov test dec fimull pop popa dec xchg js cmp mov mov add nop icebp into jge add ljmp and lahf inc inc sub add ljmp inc xchg mov fildl mov pop sub sbb add int3 inc ds ret sbb jecxz gs and add adcb imul daa xor into pop cltd jmp daa and cmp jmp cmp rolb xor mov mov out test and jge pop push add xchg and pop jo mov mov sbb adc test push outsl or sti fisttp jge mov addb test idiv lcall leave ljmp xor cld pop xlat sub addr16 and mov gs xchg and int3 outsl pusha add sub push out rclb popl outsb std push cmp rcrl add aam nop push push call pop ret enter jle inc sbb add ret sub inc test cmp pop repnz and pop ret inc mov and ret inc add and hlt sbb jl jo add cmp jno sub dec fimul (bad) sub xor mov add data16 xlat rorb aaa jo lea cmpsl jb jns out ss mov inc and fcoms jp cltd inc push mov call mov push sbb ret and inc push ret dec inc subb or ds bound mov jne popa pop ret enter add ret push aas xchg add dec xor xor inc mov outsl cmp ret dec push inc sbb hlt lcall add xor (bad) bound and pop mov fs mov pop ret adc ret jle sbb xchg (bad) push sbb sub inc sub or mov cmc rcrl out add nop dec mov and mov jp dec repnz andl nop incb inc cmpb mov add (bad) mulb repnz add cli jp sub jnp or add dec mov xchg cmp imul mov lock mov adc cmpsb inc push mov andb addr16 sbb in pop mov jb jns pop or inc ljmp test xchg jmp rolb cmp popf out adc pop loopne push in xchg nop push cmp and add pusha adc cmovl or mov add unpckhps mov inc into jnp mov mov adc adc rol notb shrl xor cmp cmp dec inc stc data16 xchg cltd (bad) add xor sbb sub cmc cld xor test push fstp mov movsb (bad) xor loopne,pn and (bad) mov mov add (bad) xor aam scas push mov sarl inc xlat mov nop cmp pop add popf dec adc mov and rcl mov ror pusha call mov xchg fcoms rcll or das pop pop and dec (bad) scas aas xor loope sub sbb ret mov inc push ret and das push fwait pop jno rcl mov and cmp rorb mov mov mov pusha sbb inc cmp add (bad) pop push movsl (bad) sub push mov jne push xor or xor and pop insb cmpsl out pop pusha bound add xor iret pop push test xchg lahf push add adc or jecxz add in addl jle enter and xchg xchg xor mov (bad) lcall lahf add outsb push push lods add js (bad) mov mov int fucomip lods cmp xchg frstor and or xchg sbbl pusha daa pop bound cli rcr test and add shlb shrl add scas lret and mov pop cmp and sahf mov xchg mov test cmp push adc dec loop adc out int mov push sub add mov cmp jg xor add maskmovq divl ret or lods mov push and add loope sbb ret (bad) insb cmpsl xchg or cmpsl sbb inc adc mov and movsb jbe adc imul mov push adc or sub enter mov dec push add in cmpsb in sub add jbe sbb fwait nop inc test (bad) lea les aas push cwtl mov call btr dec stc fisubl (bad) mov pop les and insb sarb nop xchg sbb push sbb or cmp mov lret add mov fstl (bad) mov pop fldl adc jo ljmp xchg mov pop jecxz aad sbb popf push pop sarl std sbb push popa mov push pop std jp add ds sbb pop sub add push outsb roll cmp sub pop jmp and push add ds test sarl jl sub push mov data16 mov add xchg (bad) adc dec pop fldcw lea jmp lock xchg nop xchg outsl roll pop popa jns rcrl sbb jb add cmc adc xchg pop pop and mov mov and enter xor imul xchg adc or dec jae nop aad daa pop or xchg jns cmp and repz add jmp ljmp rorl pop xor mov int3 sub pop pop rcrl add mov mov sbb add or pop (bad) cld pop shrb and adc jo add adc mov mov cmp inc sub imul lcall emms pop lea mov add dec std les lcall jle ret aad xchg sub push sbb lahf jb add mov xor shr push pop mov (bad) jo jge xchg dec push je pop push xchg jns add sbb shr test mov add mov mov test dec and add bound notl sbb aad or lcall mov xor test fs test and cmp std dec pusha rolb jns or inc add popa push jle adc movsl mov bound loopne and add test fildll ja fs lods sbbb sbb aaa or pop pop psubusw sbb mov outsb push add dec pushf adc iret pop sub mov add mov mov sbb ja outsb mov je ret mov pop add daa adc jl mov jmp cmp mov jae sbb jae add andb push pop popa movsl and jbe add mov cld mov (bad) xor add xor test cmp pop sub add xor ror add testb mov addl mov inc pop pusha test (bad) mov and addr16 jmp out stc add pusha or pushf mov loopne inc xchg inc imul mulb mov aaa in or or or ficom cmp add adc add mov pop stc add inc adc and ret int loopne frstor push lds adc sbb icebp pop add xchg pusha mov jg push adcl jge mov test pusha add popf loope mov roll lahf add xor inc xchg ja xchg xchg dec inc cmp sbb lret fs xor cmpl or jno mov push push mov nop clc pop adc pop int3 adcl cmc aas mov adc clc cwtl add hlt test jae dec adc sub loopne (bad) jle (bad) jl inc aad pop cmp add lcall pop test andb ds push dec dec je rcrl inc stc jo mov add mov rcpps push mov (bad) jae rcr cmp jbe enter cld xchg xor cmp test inc stos adc (bad) decb jge or inc stos fdivr mov xchg mov clc out push xchg mov movsb add push out mov mov xor cmp push enter or add lods mov push fiadd mov push jmp movl pop mov or fistl cmp movsb adcl mov inc sbb sbb aas sub das jo jg imul daa out jo (bad) push sub inc lds xchg push cmp pop lock aas inc mov push nop ficomp rolb inc (bad) jo pop mov xchg cltd (bad) rcrl sbb icebp aaa push sbb mov js add rcll add mov mov mov add jl scas push add or in dec mov inc pop inc xor mov pop or xchg cmp dec mov or popf in cmp mov rcr orl cmp lfs or (bad) inc sub fs mov (bad) jmp adc push test sbb add loopne add je xchg or fldenv jb pop or pop jmp and jo adc es push std js cmc adc jne add outsl push icebp fisubrl lea dec pop jnp fisubr mov lods push mov loop jecxz mov test xchg mov inc pushf in sbb mov ret add repnz movsl cmp inc test fwait jae imull lcall (bad) push lea loope nop pusha mov out inc xchg push test into add and nop fwait loop mov inc mov jmp sti (bad) adc insl pop loopne cmp push add mov pop out (bad) mov in push (bad) sahf jbe pop addr16 ret xor cmp jp push test insl push inc or popa adc mov xor adc mov jo mov push sbb (bad) add mov mov adc mov add inc js lcall and mul movsbl fadd sub jp jae mov xchg jnp pop pop test daa push xchg rclb xchg cmp nop jbe lods adc jmp hlt sbb push loopne aaa sub and jns add das js push push push jno dec shrb lret add loop mov add adc push call adc mov add add (bad) cld cmp lds pop and dec jne movsb cli push insl or push jno nop fs or mov jg or mov xchg xchg cld add ljmp je or mov and mov ret jnp mov inc and cmp stc pop cmpsb nop loopne repz in test adc sub xchg and push add or push clc add pop (bad) cli fistl pop add mov orl adc pop fildl ljmp stos adc add cs ret add insb pusha repz sub sarl sbb movsl data16 sbb pop push popa mov dec ret push xchg mov divl xchg dec aad sub int (bad) xor push cmp movsb adc sbb add push popa inc pusha movswl mov (bad) xchg sub push add stos imulb fwait add int or inc (bad) jae js loopne rorl xor stos mov mov sbb push test mov cmpsb adc push pop mov or push xchg pusha fisubr out and mov mov and inc mov mov adc pusha xor add or out mov lea andl out jne mov test add xlat adc lods in (bad) sbb cmp xor std cmovp outsb xchg xor push mov jne or or mov cmp or xchg pop adc pop mov xchg rcrl sti nop mov je lcall lcall lea out mov ss cmp xchg sub inc lret orl cmc leave adcb dec add sarb xchg out sahf push iret mov (bad) lds mov fist or lcall and mov lcall inc or rcrb icebp in and xor cli push daa out lcall fs cmp add jbe push push cmp fstpl dec loope nop fwait and stc outsb adc fdivrs or or jmp mov ds sbb (bad) mov and sbbb cmpsb cmpl push or xchg jno and lods dec push popf stc pop dec mov repz movl mov gs jno popf add repnz fdivrl push cmpsl push jle sbb add cmp test sub fist xor xor fcoms (bad) repz ljmp sarb cmp imul adc jmp jge mov xchg stos rcrl jns mov sbb dec test imul mov es fs enter and outsb dec pushaw mov mov jp or jmp bound adc add aam mov jle mov sub loopne lea jb lret inc add mov popf sbb pop les imul dec mov out push jle mov xor adc roll add int3 or add roll addb add cmp push popa in jno pop add pop lea pop jge fwait stos mov mov dec pushl xchg mov fisub xchg or ja mov mov ret lea cmp dec hlt mov jno imul sbb push mov fs xor sub xchg adc push ja push cmp addr16 push add mov adc mov (bad) rolb enter jmp or add hlt iret add jp inc bound mov (bad) inc ret ret cmp pop inc jns lock pop mov mov testb mov shr jmp adc xchg pop push cmp gs xchg cmp or pop push adc or (bad) pusha xchg and fs sahf popa xchg mull add pop adc mul lds xchg cmpsb ret je faddl xor adc and movsl in xchg sar and add inc add insl leave cmpsl in je inc test pop fnstcw mov adc sahf loopne cmp pushf dec mov sbb dec sbb cmp lahf xor aad dec or pop mov and fiadd and movsl xchg or fwait std dec lods cltd daa inc cmpsb mov xor push mov push bound sbb or loope pop outsb cmpsl inc jb mov mov sub rcll (bad) repnz sti sbb mov fiadd jbe mov sub jp leave loope (bad) ss mov jns pop mov adc jo and pop js inc sarb rcrl xor lea mov popa mov pushf push and jno jge cmp js pop jp (bad) mov incb nop sub test test fs mov adc addr16 bound icebp insb test hlt inc repnz xor mov or and pop fcmove and sbb flds mov sub out (bad) dec cmp insb inc movsb push xchg xchg add xchg lahf mov push test mov es add push inc mov movsl mov jp add push xor cmpsl inc pop add mov mov loopne out popf pop mov (bad) dec add lods sub mov xchg xor mov sub lea xor add movsl mov xchg add in xorl add add iret cltd push adc popa in add xor jo mulb mov adcl sub xchg add insb (bad) push ret pop std inc adc sub and push fwait adc (bad) jle xlat dec pop inc dec hlt xlat lea lds pop inc and daa clc pop fs outsb lods pop andb movsl mov leave insb int or mov dec cmpsl dec ret jb mov mov sbb ja and stc aaa sub (bad) std incb and repz sbbl pop mov cli or sub inc int3 sahf into jl xchg sti xchg popa xor xchg inc outsb es loopne movsl xchg and adc cmpsl jbe xor jb dec inc out loopne daa inc jge or adc adc jmp test into push mov mov pop pusha xor fisubr (bad) movsl in push (bad) mov and outsl and idivb xor dec mov fs lods or add xchg mov sub (bad) mov loope add mov daa dec nop push dec int3 fisubl hlt ror or mov mov push inc arpl and or mov stos sub mov cmp dec pop test addl push daa mov mov or mov adc mov les arpl mov mov lret xor clc push int pusha dec (bad) icebp mov movsl xchg and xlat pop pop rolb add inc push and pop adcb rclb push lock xor into inc stos jl movsb or xor mov jle mov adc sbb push jbe inc adc shll imul inc push xchg cmp push (bad) mov pusha pusha mul and test xor test xor xchg mov xchg fisttp daa xchg adc mov mov dec pushf sahf mov fwait jnp pop add rcrb mov int outsl rcl clc popa xor outsl xor add out xlat pusha stc pop push mov lret repnz (bad) mov outsb cmp pop and mov adc mov stos cmp pop enter sub push jmp sti (bad) cmp and adc js mov (bad) lock (bad) sub inc or jno scas xchg dec nop mov add push pop pop loopne xchg push nop sub cmpsl test dec cmp sbb jp add add in loopne mov movsb jnp add pusha test fiadd xchg lcall jnp xrelease lcall dec rcrb dec (bad) arpl or insl pop loopne or and popf insl mov icebp mov jno mov rolb enter in mov pop cmp sub xchg ret mov jg jno (bad) fcomi adc insb fdivp lods xchg push jnp jp (bad) xlat lods roll or jle mov hlt pop add mov fnstsw or push mov aam xchg pop jecxz push into sub fwait lahf push sbb add out xchg adc mov and push pop sbb pop movl fildll in jg pop jmp and shrb push imul sbb sbb daa cmp cmp incl mov or out into fistpl cmp sbb sub adc cwtl or sub xchg adc add lret mov test add or and aad xor mov jge inc cld adc pop popf inc mov test out jg mov sub cs and add sbb test xchg test ja add insl lods jmp sub in pusha mov adc cwtl fist adc mov pop out repz jo xchg push add sub jno (bad) fmull cmp pop scas (bad) hlt add fisubl and lds insl mov idivl and add lret fildl fisubr cmp add daa dec and xchg pushf test pop add xor lods ret cmp (bad) (bad) push sub movsb js popa sbb sahf pop sti inc adc fidiv dec push int das xor mov xchg cli dec cwtl jo push sbb jnp andb loope xchg dec xor lods test orb aad push and cmc icebp and mov fcompl xor icebp add inc nop push add mov in pop sahf in sbb (bad) mov daa xchg lock add subl cmc add mov das movsl rcrl push lock repz cwtl adc sbb add and ss gs xor and sti and add je ljmp cs int scas int (bad) mov scas adc or and pop lret xchg mov dec daa shl sti loopne subl jmp xchg adc and push (bad) xor jl sbb sub outsl sbb shrb or lods nop adc aaa dec add (bad) cmpsl mov pop mov js imul (bad) xchg add (bad) mulb popf add lcall insl mov add bound decl add lcall dec mov daa mov cs (bad) sub lahf xor pop test js inc and adc xor dec test push subb or xor aaa adc test push xor xor mov icebp popf sbb popf nop pop mov bound bound or mov repnz mov pop je mov pop test pop pop inc mov cs rcrl sub xor mov mov sub sub and pop jbe add mov adc int push jns mov pop clc and pop lods mov lds inc cmpsb mov les lea cmp addb sub sub dec adc movsb stc mov movsb leave cmp (bad) adc nop rol jnp push addr16 pop mov jae (bad) cli dec sub stc pop xlat aaa xor aaa or mov orl push mov and out mov sbb mov adc enter (bad) test pushl subb push pusha or dec ret or adc sbb adc or dec or or ret add mov mov inc sub mov idiv sbb into add or mov sub jae daa push pop aam add stos jmp push dec lcall sub dec sub mov outsb xor pop push cmpl pop push mov sub aaa push mov xchg pop and outsb scas add pop adc ret jnp cli add push mov add scas pop and mov lds mul (bad) sarb mov xor mov or in push sarl jmp push sahf cmc ljmp ja and sub inc add mov pop cld and or or in pop cmc xchg push jbe pop xor pop adc jmp enter mull aaa pop add rcr sub rcrb xchg fstl rorb or stc sbb imul xor orb ss xor scas jecxz icebp adc bswap jge enter pop (bad) cwtl jns mov mov xchg fstl (bad) (bad) push imul push pop iret lds pop adc sti repz fisttp cmp mov xor shr jmp xlat sub cmp loopne mov mov jp adc mov dec pop and imull mov test shl add fucomi ret or sbb inc sahf push (bad) icebp pop test bound mov outsl or adc in add cmc jbe (bad) js in pop add or jle add jg inc sbb or adc sti mov sbb std in mov std push push add lcall daa mov test push fldt dec jb imul loope add scas lods add fimul mov dec and add loope jle sarb pop dec addl popa dec les mov fstl xor xchg add pop pop (bad) cli addr16 jb addr16 insb dec neg mov or mov lcall sub pop jno pop xlat inc in pop (bad) push pop add mov rcrl push pusha (bad) xchg movsb out das add xor pop out pop jmp data16 (bad) cld repnz cwtl iret mov inc dec es inc aad lret xor fsubrl setb aas and daa mov mov dec ljmp jnp and adc dec mov xor jmp (bad) cmp jl push jl ret dec pop inc shl in xchg push push push aaa pop inc jmp nop imul arpl cmpl jae out popa jmp jo sbb cmp mov clc out repnz out push mov inc push stos test aaa add outsl mov repz inc pop add adc pop add push scas and push rcrb or dec clc jg lcall andl jecxz or shr push or mov sbb adc not adc jb fldl pop xchg not jmp push adc incl es mov pop and fsubl jp es xlat adc xor add and test jg inc xchg std jne xchg cmpsb sbbl xor dec cs and pop hlt pop push and insb mov or cltd mov add inc sahf repz sub mov jne pop or jmp add cwtl (bad) mov lahf dec imul fildll jns lahf rcl cmpsl push ds movsl in (bad) mov mov inc stos clc cli fdivs fwait aaa dec fldl std jmp movsl cmc lds pushf (bad) jmp lahf xchg mov mov dec dec mov leave sub mov rcll pop add add nop popf push sbb rcrb icebp adc ljmp cltd or ljmp dec adc jno mov pushf jns push inc lea or movsl jecxz pop pop gs shrl xor call inc mov dec stos nop das add lcall in cmpsb insb push ss pop mov pop in adc xchg ljmp pop imul mov cmp jnp fs out xor sahf add pop scas pop sbb test jne insb pop jmp ss rolb pop mov hlt ret test push jge stc xor lock stc mov fimull loop pop push push and push or sbb xchg (bad) and jmp loope scas cltd inc pop std mov adc sub add mov aam mov push xchg mov pop push push pop jns dec (bad) shl (bad) jg lds mov cmp shrl sub adc rorl jnp cmp fdivrs addr16 xchg sbb aas jmp mov ss scas mov mov or loope std mov in daa or cmp fsubl adc rcll ret dec decb push enter int mov mov dec outsl lods or push mov sub pop xor cwtl or lea fisub mov pop add sub pop sbb sbb push popf lods out lahf aas cld (bad) dec dec xchg sbb jmp xchg (bad) aas adc dec cmp ret jmp repnz out aam jbe sub push stc outsl push xchg push adc bound mov jle fsubrl insb (bad) lods and lods lret jo push ss xor mov fsubl mov dec dec or imull and push adc add out mov dec sub jne xor adc fldt mov rcrl (bad) push loopne,pt (bad) fildl add cmp push jl test shr add push mov bound mov inc jmp in mov fsubr pop stos sahf xchg sbb adcl lods dec add mov hlt cli mov sbb loopne ret or add xor xor mov js xlat gs loope stos int xor std out in jae cli mull insl das pushf xor sbb push insb dec test xor addr16 or andl cmp or leave cmc xchg test jbe ret add (bad) mov xor (bad) leave adc cmp cmp and inc add or push inc mov mov cmc push dec inc daa icebp push xorb out add sub test fsubrp (bad) cmp popa dec xor add scas cmpsb js xchg cmp or arpl ret (bad) bound push xor sbb mov loope push mov jb add popa and inc lock cmp (bad) sub adc mul xor pushfw inc jl push leave in popl dec xor dec aad cmp adcl test sbb or in xor and adc movl sbb xchg je bound adc sub mov or outsl hlt push mov sahf bound jmp rorl mov mov mov scas add xchg out daa mov scas sub mov (bad) out test shl push lcall push in inc xor adc xor (bad) fwait inc sti adc mov cmp jae pop push jg lahf pop mov or jne stos add or xor sbb movsl cmp aaa pusha fistpll push and and sbb mov pop arpl or push cs push sbb mov cmp jns inc (bad) neg and adc movsb sub sbb dec add cmp call test add ret cmp inc cli mov push xor mov add in mov add lods decl fbld stos aaa xchg enter cmp aaa mov xor lea in pusha push mov sbb lock adcl pop mov cmp je push arpl lock adc loope add enter int3 pop int pop addr16 fbld pop sub cs stc adc (bad) ljmp sub pop pushf leave jno pop out push cwtl pop repnz pop and inc leave lods push (bad) adc dec mov jge bound loope push adc push pop cmp scas jmp or push dec push out add dec mov sub lods scas mov dec push sub xchg mov cmc push cmp xchg mov ss iret and fcompl xorb or mov mov or fstpt nop in insl fmull cmp cld rorb jbe mov pop nop gs cmp out xchg int pmaxub scas or or xchg add and or push sarl adc bound mov rorl pop aad pop push addr16 pop dec fmull nop lret (bad) imul push add cs xchg dec inc fsub movsb cmp and and sbb and and push lods adc pusha mov or inc in or movsbl xchg sbb push or or cmp pop cmpsb fadds out les adc test mov les stos or jb or add fcoms (bad) adc sub or mov out or bound js jmp test pop test fadd or mov inc and fisubl xor mov push pop out dec pop adc xchg push call sub jmp and add (bad) and sbb ret sbbb lods shrl sbb xchg or jecxz add mov push and jge xchg sub mov xchg sbb mov frstor push lcall pop mov addr16 jns sbb xchg dec xlat xor cli and scas in in sarb xchg push add scas popa test lock add pop push mov lret popf mov add test ljmp insb lock push imull cmpsl das add pop out fucomip lods cli lods cmp movsb mov xchg mov dec push ljmp std shlb int cmp call ljmp lock enter jne and test push mov xor leave pop pop cli push mov xlat or outsl jmp test sub push push jmp mov ret movsb add mov inc incl pop add mov loop mov lret int3 sub aas add cmp lret sub or sub flds pop mov jg out push add jbe sbb push push inc jp push dec cmp jnp pushf out hlt dec das (bad) mov add (bad) cmc mov shr xchg ljmp push and jl jae pop outsl add rolb and aas mov xor mov sbb popf push xchg sub cld rcrb movsl push (bad) jl push mov das inc hlt clc repnz or aaa std jle idivb and sub push mov add in or cmc mov add jl jmp xchg sbb stos bsf add or or push adc shll push jmp int3 mov sub mov test lds jmp adc pop push jmp mov ljmp les and js imul nop push mov jg enter mov inc es jmp mov in pop movsl aad xchg mov mov mov xor jle mov clc movsl ja and push cli leave xor lcall inc mov add sbb push inc fstpt mov mov ds cld cmp inc pop loope call pusha aam fwait jle rcll and repnz inc mov sub sbb (bad) ret adc stos aad std xor jp sbb add xchg rorb mov adc (bad) cmp addr16 xchg outsb jecxz das add ficomp or xchg push icebp pop adc repnz aaa (bad) and mov jg xchg out add pop lcall add sub nop ret mov rclb aas enter inc std insl mov int mov and lahf sbb sbb sub ljmp lds add or fbld int3 sbb and (bad) mov pop jl dec nop pop and add pop add int3 jns add out das mov popf in aas inc lcall or sub sbb pop out inc es jbe add hlt push adcl mov loop sub cmp loopne enter add push sub add xchg pop std daa mov out (bad) ss icebp xor sti imul popf lahf push pop adc rcr adc sub jno shrb das scas and mov jmp cmp std scas adc xor pop push jmp hlt add mov shlb adc mov into imul fmull mov stos or mov dec pop (bad) mov or mov add je (bad) sbb and les fisubl xchg dec fsub inc jp js jle or pop icebp cmpsb je mov out push xor loope mov add pusha mov adc cmp inc je jno and xchg add push call (bad) jl xchg mov cmp popf sbb mov les push xchg push in sarl sub xchg out mov mov jl negb adcl lods inc incl loop xorb dec xchg outsb sub cld jmp xchg rolb pusha mov jmp mov fistpll adcl pop decb ss mov fimull out dec jnp adc mov adc push xchg and stos outsb popa add gs nop jo cmp adc leave or aas add add mov or (bad) test data16 call inc sub xchg sbb sbb out loopne jmp add sub sub leave dec cs mov adc addb jg ds and add xchg sub cmpsb sub inc lock xchg push cmpsb cmpsl jno mov jo faddl (bad) and dec aam fsubrl mov add mov outsb mov adc and inc pop pop scas ss sahf add (bad) add lea imul in ds stos push insb call out out add sub pusha shr popa popf dec rcll lret inc mov xlat fnstcw movsl sbb movsl cli leave mov adc or add divb movsb or pop cmp leave popa jno es lock cmp sbb push movsl push (bad) push xor add sbb xor dec cmp popf xor mov mov mov cmpsb jne adc add cli cltd push jne and cmp lods mov sub xchg mov hlt sub lock imul mov push pop mov ret inc inc xchg lea mov sbb mov sti jl mov cmp call fstp jnp add pop loopne inc jae mov mov mov mov in add insb pop or mov adc andb add xchg sub add in aad mov jb mull sub add pop fisubl push add lcall and lahf dec xor aam mov xchg xchg aam inc fldcw sar in in mov adc or les push sbb rcrl mov cmp cltd mov or fsubrl jle and es sti push js lcall push lods stc das jmp fwait cli add dec cmp mov mov out loopne loopne mov jge dec mov add insl lock inc lods xchg dec inc inc pop je push daa popa imul mov test mov push insl xchg dec fwait add and inc xchg add flds sbb test test icebp into xor test cwtl add mov jns mov jmp mov in sbb daa andl and out andl add inc mov loop mov adc test inc jmp pop mov jp cmp mov ljmp rcrl sbb pop (bad) insb clc je fsubp (bad) or sub fwait shl pop dec cld leave xor fwait repz fyl2x cmp orl loopne outsl sbb jmp xor (bad) mov in cmp sbb bound jne cmpsl mov sub or pop pop sbb icebp add push dec pusha test xor andl push fs ds subl pop in xchg in movl xor icebp xchg inc test imul fistp jle dec scas leavew enter fbstp sbb xor je dec (bad) and inc fcomps (bad) lock popl dec mov pop jb nop into mov inc aaa pop roll fwait mov add repz push mov mov nop into movl popf jb icebp imul jno repz xchg xor test jns add sti adc jge or cmp mov in pusha xchg push cs sub ret fdivrl pop test jns and adc je mov mov (bad) popf add mov mov fsubl rcrl pop cmp add or jle add dec mov inc rcl cltd daa je sub popw mov and ds pusha (bad) ret pop and add and add fnstsw popf dec imul jmp enter mov xchg or mov subb js rep add jg inc rolb je mov cmc jge or xor or or jbe loopne adc aam inc int adc je cmp call inc add test push leave push mov pop mov sahf pop mov bound test imul dec add mov xchg cmp and and inc sbb push bound mov mov sbb mov lcall out lret and sub fs out push stc pop rcll or xor inc fwait dec inc std cmp mov jo add inc mov incb aam xor or das in rcll jb cmp sub dec sub ljmp inc add mov pop daa stc mov sub mov mov mov jbe fcompl movsl pop pminsw loop andl mov enter repz rol push cmpb and in aas lds pop loopne (bad) adc mov jg sbb stos and nop push and xchg imul mov add cwtl or fs fcmovu xor pop repnz jge mov test jb dec (bad) jae cli pop or mov jo lods (bad) out ret mov or sahf ret fucomi cmpl sti xchg loop test xor sub mov mov movsb js cmp pop fsubs pop push rorl mov and mov add test cmp sbb xor ja xor jo stos add pop pop mov adcl jp jnp jl ljmp add add pop jl adc cmp mov dec xor int and mov sbb fwait hlt add movsb push or outsb shrb pop mov data16 xchg jge cmp inc movsl mov mov xor ja les jae jo xor test enter pop and add sbb ret (bad) pusha movsb lods jl (bad) or adc popf mov mov push sbb pop out sbb mov xchg test test push dec loop pusha push testl decl mov pop rcll dec push xor or daa les adc mov or insl inc xchg sub imul xchg add aaa je sahf adc add sti nop adcl sbb add push loopne ja pop push aaa insb mov outsl fistpl xor add xchg mov add adc popf loopne add rolb push xor pop pop sub add sub decl aas push shrl pop outsl cmpsb add addr16 lret lods dec arpl xor xorl inc jmp add clc out fimull xchg loope sti xor mov scas les xchg adc sbbb xchg mov jge mov cltd inc fmuls pushf push pop cli mov mov lods pusha adc insl sbb lds jbe mov pop idiv jecxz popa sarb pop or add push and xchg insl pushw lods push jo enter dec jg xor pop adc es or cltd outsb and stos lea popf sub ret dec jnp js sub test xchg insl mov call out xor aad xorb sub rcr mov pop pop push aad jp aas xchg dec adc lods and push pop cmpb popa push inc inc or repz pusha int3 mov (bad) mov add mov xlat dec pop inc dec (bad) imul inc and ror pop out dec mov pusha add add and enter cmp push test lds xchg adc xchg out fadds add shll popf fistp jl mov loop or mov xchg shrb jne mov fs or or sbb xor mov lahf push jmp imul ss daa sti fabs in push test fsubl jle xchg mov add xor xchg push mov cli and adc adc cmp mov cmp imulb and rcr popa mov xor mov pop dec fimull and jmp cmpl push jae fsubrs mov jmp roll (bad) mov mov pop mov dec in and jg dec xchg xchg bound add cmp jle cmp js js in sahf pusha mov sub jno imul scas add and sbb jnp fcomps out and mov in sub inc mov jnp add jns push pop lahf int3 dec fmulp inc xor lcall or mov insl and sub pop movsb lock icebp add adc adc push hlt mov aaa out add jge lcall arpl stos dec ficomp repnz aas inc lahf mov or pop int3 mov add jp add cs out mov jo adc sub fadds mov mov aaa mov mov inc add mov loop in dec push mov xchg cmp fdivrs jecxz xor pop cmp or push pop inc (bad) jbe faddl js mov out arpl add pop mov and fwait mov cmpsb pop lahf arpl out adc loopne add push push mov ja mov fwait rorl dec movsb sbb int loopne mov push mov rolb or sub and lock mov add dec mov xor in rorb sti mov sub pusha pop push pop xor mov shrl or mov sarl xor and mov addb movsb cmpsb cli xchg jg xchg jle (bad) xor jne ret icebp add jl sub pop mov testl ljmp add sbb sub fwait repnz mov rorl test das pop and pusha mov adc and push pop insb inc mov leave xchg enter mov popl xor cmp xchg mov mov add mov nopl js fildl xor fbstp popa movsl cmpsl test inc jno mov sbb imul jp push pop in sub (bad) push sub dec and and xchg lds test rcrl addr16 xchg cli mov repnz xchg pop (bad) fwait sbb fcoms sti push leave daa inc jns pop push fs push int3 or pop mov jne mov sub add movl loop mov and stos dec push iret sbb or xlat sub mov (bad) mov cwtl int3 cwtl sbb sti pop loope scas cmp dec and mov lds andl inc push xchg daa and mov and mov daa ja cmpsl lcall dec jnp adc aas xchg add (bad) dec jae nop pop jge repnz sbb out outsb push or pusha add xor or xor sbb aaa aas add in mov pop dec xchg pop push pop xlat push mov popa repz lret mov pop call sub jns sub sub out pop ds (bad) aaa adcl sti cltd test mov data16 mov call mov inc notb cwtl cmpsb lcall scas mov stos outsl (bad) clc cmp mov test hlt cmc inc lock pop fwait xor addr16 add orl loopne push sbb fsubs cltd clc popf fldt pop pop ss pop add mov pop sub repnz mov xchg dec add and add mov adc and add popf jb dec scas fwait rcll aam mov and xchg lcall mov xor icebp push test push out dec pop test mov jae xor out sbb sub pop push push sub push add pusha adc xchg incl aad pop das pop stos inc inc cmp (bad) mov into inc pop mov (bad) aaa cmpsl imul aaa sub loopne mov mov mov mov dec pop lods push jo xor push ljmp dec test sbb mov push ljmp lods or sbb pushf push inc jl or test xchg mov cmp ret mov push imul jg add jns and fistpll ret mov aas adcl test enter popa sbb jp or dec mov sub je mov jmp push or out sub inc fbstp lea pop pop ret adc arpl sub push je hlt add xchg jae mov addr16 sti inc add cmp nop jne lds mov or push inc adc (bad) mov add popa push mov xchg adc fsubr xor inc pop into mov sub bound pop ljmp dec test dec (bad) mov lcall mov fmuls mov xchg outsl dec add cld out xor adc cmp inc das push add aas outsl cmpsb push inc out ljmp add sbb pop mov jae scas addr16 fcoms jge stos add fs mov add xchg test dec pop adc and lret mov orb mov sbb sub sbbl pop pusha nop mov jmp ljmp push mov loopne lcall push pop es daa je (bad) pushf insl rol (bad) movsl jg dec mov js (bad) mov lds js mov aad (bad) fcomps sub hlt lods cli std std nop sub int3 jb jo out push ja jno mov test aaa adc mov jge rolb xor add mov mov fwait ret aam fs cs and cmp xor rcrb lcall lea or test into popf push test lods fmulp faddl add pop shrl pop jp stos aam nop add pop outsl outsb clc jae mov pop je lods cmp sub inc loope mov movsl int3 scas repnz pop pop dec mov mov sarl and sbb mov xchg add into mov add mov mov fldcw add sbb popa test insb adc divb and sub cmpsb lret test cwtl pop fwait sub idivl aad add lock sub test outsl fidivrl pop add or icebp xor or push cli notl scas (bad) cmpsl inc add (bad) (bad) shlb jne or subl ficoml cli cld push mov or mov mov adc loopne adc dec fcoms aam push adc test repnz add fwait or gs cmp out sbb mov sub jecxz and lret xor mov mov stos cmpsl dec sub lea sbb das xchg pop js xchg adc sbb test nop xlat (bad) int3 add sbb out fist push repz movsb push adc pop repnz jno popa mov jbe dec or aad xchg aaa mov sbb aas add gs out fisubl push sub add fstl test dec fisttpl xor (bad) int js and dec mov lock inc xor push and mov prefetch jno js or repz xchg and mov iret adc insb hlt jge negb out inc push sbb cmpl pusha cmp ds and dec add and sbb sbb mov dec or sbb push sbbl inc mov repz jo inc dec mull loope popa sub or mov jo sbb push or in push inc mov mov pusha (bad) mov (bad) es dec rolb push fildll insl add in push add adc test rcl repz pop mov flds icebp mov inc int jl das nop jl fisttpl jnp dec lret push cmp fildl mov jge jne add icebp xchg push jge ret xor nop inc cmpsb add or lcall sar (bad) push pop xchg pop jl push popf dec inc test incl mov addr16 add ret das addb xchg sarb xchg xchg insl sbb mov aaa and inc sbb cld cli add xor ljmp xchg pop sahf test push and mov pop pop push mov movl mov adc sub mov mov inc ljmp insl (bad) nop std mov sbb push imul aas jp add mov loope rolb dec pop std outsb mov dec aad pop imul outsb push jae or push cmp jns sahf pop faddl cltd jmp loope bound movsb nop adc xchg mov push xchg loopne add pop sbb mov jno sub xor add lret xchg (bad) movl insb mov lret dec adc sub cmp cmp loop or rorb aam loopne test and jns sbb (bad) xchg orl dec (bad) loopne jns push or sub inc sbb push push pushf inc adc mov inc rolb lret pop ffree (bad) xchg mov add sub mov jae cmp lahf add popa jmp cli mov pusha and jo or push inc lock mov xor pusha mov dec mov (bad) stos mov test repnz fwait int icebp cli testb jg mov cmp in xchg and cld cltd mov icebp mov mov sub mov pop pusha fs pop pop push mov aas daa ljmp dec and push call cmc pop das divb inc xchg cmp jp jnp enter ret jge cmp std shl inc sarb jno (bad) xor pop mov (bad) in lret scas (bad) mov sbb in jl idivb xor dec mov fcmovnbe jo (bad) xchg aad pop ss push sub jp inc ds mov sarb je pop and aam push popa xor and cltd mov std stos pop movb (bad) stos orb cmp movsl dec test lock cld or mov sahf or pop jae jo adc (bad) push jbe add mov (bad) daa jno sub mov sbb add mov push xchg xor inc scas or adc push orb sub push addl lods pop sti mov rol mov cmp out das xor add (bad) add adc mov cmp xchg daa hlt pop fiadd ret mov fsubrs xchg fisubrl and (bad) push mov or lds jl pop cwtl lret and int3 aaa adc sbb clc fwait pusha or xor jns push popf mov mov (bad) divb nop in rorl std (bad) shr push dec push and xor jbe inc subb push jb add cli mov lret jne test xchg outsb call inc fist xlat sbb mov das ficoml sbb lahf cmp xor bound int3 xor (bad) mov sub and mov sub dec add mov mov (bad) xlat in mov lods push or test push repz in int js inc cmp mov sbb sub sarl push pop jmp (bad) enter sti cwtl jo insl add push mov lock add in dec mov cmpsb jp add out loopne movsl jb cwtl inc push pop gs mov jp sub movsl ret adc rolb add repz (bad) call (bad) pop add pusha mov les nop popl lods dec mov int3 js adc nop xchg rclb add pop les dec mov repnz jns jno push mov push dec fistpl jo adc jbe or sbb nop sbb jle mov lods leave or hlt mov xchg xor lock pop js mov add jne and (bad) xor cmp mov sbb cmpsb int test lcall mov and lods pop fimul popa out and rol adc or xor xchg pop fs jmp adc push stc and pushl and xchg out mov insb movsl dec mov dec and jmp push cmpsl aaa pop shll scas outsb pop sbb popa pusha pop fwait push ret (bad) repz xchg (bad) lret mov iret hlt or add mov push and sbb push test adc and mov xor mov lret adc rol imul adc in cs test mov nop xor fimul inc hlt mov ret out mov aaa jl addr16 xor enter or sub les mov daa cmp jb mov add and subb pop xchg cmp call pop xchg imul call lods and stc or jg fcoml pushf mov loope rorl add mov call xchg out out adc adc pop cs xchg outsl mov lahf add xchg inc mov adc jnp and loopne adc jne adc cmp add cmpsb mov xor or pcmpeqd hlt es add push xchg test jae aam sbb inc xchg inc mov add lcall fwait xor (bad) repnz mov mov mov mov xor lcall cmp and inc clc stos outsb mov iret movsb add mov call and jne pop or movl imul lods pop pop insb dec ffreep popf inc cwtl out push jg aaa mov outsb (bad) cmp loope sbb jg pop popa popf (bad) push fdivrp outsl lahf jo mov pop push test push mov add scas pop jmp in mov jmp inc pop add add mov push les leave and out gs insb and pusha add add cltd cld sub mov push pop dec ret adcb scas adc jmp mov orb das inc lcall lahf xchg xchg dec inc push repz bound add es bnd incl out jo push jo push xchg icebp dec push fmull inc dec pusha cwtl movsb lock mov mov sub mov adc mov (bad) cmc int3 pop push push inc inc dec push mov add and subb mov in push loop cmp addr16 add shlb push or cmpl sub inc cld add std incb jl dec fisttp push push push mov int3 jne add mov inc mov shl xor lret mov push dec orb jmp inc fldenv or inc cmpb (bad) popf pop lea sub or sub xor int leave cmc or mov and xorl cmpsb sub imul jne fbstp lods pusha arpl mov mov cwtl adc test inc test adc rcll subl mov push mov dec out and cmpb dec stc shlb jmp dec ret rcll add or jns movsb pop jns sbb sarl and es gs (bad) xchg or roll fs dec push inc xchg test fwait testl add mov fwait stos cli adc or jo in sub mov jmp mov cwtl fisttp push mov mov leave adc or (bad) roll insb jmp sub or jecxz (bad) fs nop and or outsl jne dec or adc sbbb pop mov mov jbe bnd sbb sbb lahf pop and jle adc sbb xchg push add leave decl pop ret and cmp insl dec test xor (bad) aas and pusha add push hlt add push sbb std inc xor or test (bad) pop pop rol leave ret pusha sbb push mov daa push dec jo jae sarl fisubrl mov push cmpsl sub jmp ret loopne or pop clc (bad) mov mov xor scas sbb lret add push mov loop sbb adc jo scas add rcll cmovge jnp mov fiaddl dec lret add ljmp (bad) mov imulb shll inc loop add or in cld inc add push push add call mov cmp pop xor data16 or mov add clc test inc call hlt jae add xchg mov or fimul push jo (bad) ss stc es out rol test incl (bad) lret push jns adc outsl test out fmuls fldt fmull dec sbb mov lds shr ss iret pop pop add adc popf jae adcl push sub or sahf xor sub mov xchg call add popa push insb and push fs jl faddl loope mov testl js mov sub cmp jecxz xor fistpll push scas sbb popf sub stos loope outsl outsb aaa ja jno mov call test cmpsl and or out mov xor std repnz jno add push pop mov stc mov lret xchg mov cmp add and ljmp pop (bad) dec lcall call sarl pusha ja sub xchg xor shll pop push fimul push into cmp cmpsb or mov out add mov cmpsl mov dec out test cwtl rolb aam leave add add cli shl pop adc cmp pop add shll aaa call jmp in in adc pushf or rclb pop nop call adc jo add repz nop push and jmp (bad) mov insl stos loop cld (bad) cli (bad) cmp stc movsl add mov or aam pusha mov ret mov mov lea pop inc les jnp add fcmovb mov mov or pop ret outsb scas adc pop or xchg mov dec pop and mov dec pop mov xor leave or idivb adc dec repnz insb rorl ja jne push es stos add lcall enter mov and xchg mov shrl push mov inc mov mov cmp fisttpll stos and push mov add hlt add aas rcrb lea aad scas in sub test mov or mov lcall pop jno loope cmp add jge or jb mov adc sbb add push mov xor pop (bad) (bad) loope sbb js outsb outsb add dec inc xlat pop (bad) les popf sub cmc add sbb es xchg std (bad) or cmp mov test insb mov ja xchg incb inc mov inc cs out loopne cltd in lea pop mov icebp or sbb or insl pushf xor mov adc popf mov jl jae,pt push dec sbb daa addr16 out fist pop decb (bad) mov xor outsl enter xor mov loopne (bad) add push xor pushf dec (bad) xlat gs mov test xor mov pushf in addb or movsl inc sbb mov outsl sub or das inc sbb jmp (bad) push cmp (bad) rol mov xchg or jl or cli loope xor popf aaa xor push loope (bad) mov jo fst dec mov aam es aas mov sbb dec push ret ja sub ficoml push pushf xchg add mov fwait imul jmp scas and pop and push call mov mov adc add adc jmp mov (bad) jo jae add (bad) loop gs icebp daa cmp les cmc in mov pop mov inc and (bad) mov mov pop dec dec adc mov add mov add dec mov (bad) push cwtl (bad) mov push nop cltd popa clc jae add (bad) std sti sub and pusha movsl (bad) mov push lahf xor mov popa adc mov xchg push (bad) cmpsb cmp out faddl jle sub and add or jge (bad) sbb and mov pop cmp jp jl inc mov mull jle icebp push xchg mov ja push shrb sbb xor sahf sbb js leave fbstp jne movsl push jecxz pop int3 ljmp pop movsl push or xchg aam les or push (bad) dec pop mov aaa fstpl in xor sub mov setne scas mov pop push clc outsl or dec (bad) stc enter adc pushf lds xchg pop inc in add repnz xchg adc sub cmp nop int3 aad in push push add sbb push loope mov cmp sub pop jbe loope clc mov cwtl fisubrl add sbb mov subb lcall and shrl mov jp jecxz roll cmpsl (bad) xor cs push add arpl or push fs mov sbb cmp int pop stc inc in shl add and (bad) jmp mov aad sbb inc push add add fbstp and sbb mov and loop js cltd lret pop jl dec stc sub fcoms cmp inc popl mov icebp ror inc xor data16 cmc loope dec mov mov daa adc inc mov dec lret xlat push cltd sbb add xchg inc flds lods pop gs icebp sbb and xchg mov add roll sub out inc pop jle mov lahf sbb and mov and mov fdivl rclb dec xchg out (bad) jmp popa sbb xchg outsb lea add mov pop cmp jecxz inc mov jp mov lret pop popa or push (bad) movsb rolb adc sub mov rcll pop fcoml push es inc fldt fmul je das cmpsl push rcl pop dec add and js add add mov jno and mov xor outsb popl movsb outsl gs cmp add shr daa pop loope mov and jl push mov sbb adc rcr popf cmp adc mov insb mov mov lods xor shr add mov jne jne push adc or mov mov adc fldenv popf bound xor popa inc cld pusha xchg outsb fwait inc adc popa push cmp add or cmpsb cmc xlat sbb adc clc dec loope inc add call add pop jge jmp dec xor xor mov out add dec lea push es inc fidiv mov pop fcoms cli xor cmp inc add and sbb ret add jbe rorb dec mov into das clc pusha dec pop shlb dec fisttp xchg push mov pop dec cld icebp mov mov and int rcll dec loop add jno cmp cmp push add cs jo icebp imul inc adcl push sbbl js pop mov or movsl fisttp pop popf inc sbb aam mov test inc fcoml jl mov mov mov adc and and cmpl call pop in lcall add adc (bad) hlt sub popa jb push jo lret jb hlt and (bad) mov lea outsl or iret xchg mov mov mov add adcl inc subb add dec jle sahf (bad) pop push fs adc add test sub pop inc fwait jnp mov popf arpl adc add cld adc sti push jo repz inc ljmp dec lds xor popa fidivr imul fsubr int popf dec test and push pop out jle lret mov xor inc lods lret xchg fidivr int3 mov pop inc test addr16 pop mov (bad) in adc cmp test dec in sbb cmp lods gs je add push orl jne inc xchg xchg mov popa pop cmpsl add xor mov ljmp (bad) sti loopne add adc mov ljmp popf inc js push test lods call jg mov or xchg push mov aaa decl dec fisttpl ret popf in add imul sahf xchg cmc and cs adc int imul mov xor lea aaa sbb (bad) in push call jmp insb repnz test push pandn xor push adc hlt je adc dec test sub out (bad) aam add mov xchg xor xor es int3 gs adc mov test xlat out mov jae cs icebp and mov cli roll fadd dec jle fcoms or addl movsb push repnz dec mov pop push ss mov push lcall adc push sbb jbe aaa xor cmpb xchg mov popf sti dec fwait pop andb push fsts push fwait mov sbb jns bound and data16 mov inc mov adc jg sahf and inc jno,pt lret cmpsb lahf repz ds sar dec dec inc push fstps je (bad) js sbb arpl adc mov push aad ss dec and subb pop (bad) lds push in lcall push cld call fcoms and mov jp mov xor out out mov std jmp jmp inc stc add pop in xchg push jb sub adc inc add pop xor jnp add push mov dec std sarl or xor in inc dec adc fs jns mov or daa sbb xor mov fmull and sahf mov jo add repnz mov mov xor repnz dec pop (bad) or test push inc aam fdivp popf repnz call mov and sub xchg sbb fs sbb gs cmpsl adc mov ret rcrb push lahf dec andl sbb sbb pusha lods adc inc sub ficom faddl fwait cmp ljmp sbbl loop rclb outsb mov leave adc xor jnp xchg outsb outsb ds les lcall pop jno xchg inc add xorb inc mov les mov xchg dec insl and aad imul and inc ljmp (bad) or ficom push jge rclb out (bad) mov push pop add sbb inc imul mov push testl mov ret ljmp dec idivl fimul adc cwtl data16 test popa (bad) stos pusha lret push cmp add bsf cmp sub data16 mov cld jmp push sub or hlt mov lea mov xchg mov jl fiadd sbb loope pusha push mov add or inc movsb and adc or sub xchg push mov and scas mov sub pop repnz sub dec stc sub push jecxz mov inc and fstps or mov insl pusha lahf jp push or dec xor or in pusha dec sub mov lock popf mov out notl outsl les xor fwait push inc xchg cmp lcall lret adc repz enter adc (bad) imul sub mov add decl das sub mov mov imul repz jne sbb dec mov ret mov cli nop pusha repz sbb adc out rcrl add shrl and mov push clc xor mov pop add inc sarl sbb fcoms push cmp pusha xor loopne (bad) popa lcall cltd push dec sub daa pop andb repz add orl jecxz sub lds ljmp neg xchg bnd test cwtl pop and pop popa or mov bound clc mov mov mov add jno popa or inc or push xchg loope dec push icebp jo sbb xor aad xor add add or popa les rcl mov mov xlat push add add adc jmp inc xchg lret xchg sbb or add add mov fistp cmp or insl fdivl mov movsb jns mov dec popf jmp enter xor cli or adc cmp sub lock jmp sub bound mov adc jb or xchg mov jno mov or xor popf bound shrb loope xor insl sbb aaa popl dec inc (bad) mov xor insb (bad) mov adc ficom pop sub test movsb mov xchg fistpl clc mov nop sbbl sub repz (bad) xor rolb xchg cmc adcl push out pop inc cli dec sub dec jae xchg nop ror and inc mov mov test add push das sub mov popa clc xchg xchg jge imul into out add push inc jmp sbb jb adc divl and popf in add add pusha fisub call test or and mov pusha add fisub adc add aam mov mov cwtl dec mov rcrb sbb (bad) pusha es addr16 xchg dec in cmp jmp inc xor pop jb xchg loope xchg iret inc adc xchg lea outsb cmpsb jo out es push add push cmpsl xchg mov add jmp ret insl dec test or push cmp jns cmpsl dec add mov xor add mov xchg mov push jns (bad) cmpsb call pop jne ds icebp fisubr inc mov pop test scas pop mov loopne lds and xor pop push (bad) hlt add (bad) xor mov push lea push loopne push sub and add sub js pop orb sub xor pop mov mov outsl fwait jno outsl mov jne les mov pop xchg push pop pop mov xor out mov add cli test not loopne xchg mov xlat cmp data16 fchs hlt ret dec mov inc pop mov or pop cmp sbb cld sti mov mov mov loopne adc loop inc andb (bad) out xchg clc mov xchg loopne mov test outsb cmp pop add cmp hlt lods pusha aam enter popf fldl (bad) mull dec cmp nop shrb and adc push stos dec pop std out js enter aaa jle xchg sti ret loope push and add hlt ret xor xlat add cmp xchg mov je dec pop leave inc imul cmp push fsts shl dec adc mov jp add mov mov lcall aaa push mov jecxz insb in jle ljmp mov mov jae add adc adc enter (bad) mov jmp popa scas add xor and pop adc into cs pop adc mov pusha or (bad) mov cld cltd jne iret nop movsb mov mov imulb and aas xchg pop popa popa xchg sub mov or jns jmp sbb mov push jmp dec scas fimul sbb or outsl push pop add decl dec mov mov flds xchg (bad) fwait push (bad) and add mov sbb cmp xlat add fisttpl jno loopne jae mov xor push arpl push mov and int3 dec sub mov adc sbb xchg out or pop arpl dec movsl ljmp add icebp xor xchg jbe faddl lret mov pop inc enter aam aam movsl rorb push push or stos outsb test mov xor add and or hlt adc pop test imul rclb xchg sub add mov loope dec pop pushf sbb xchg mov push dec int3 sub stc mov add (bad) pusha cmp add push xchg and dec mov int jl andb pusha out sub int3 arpl push hlt dec mov daa test mov int3 xchg adc (bad) or dec fldt sbbb (bad) mov pop (bad) mov mov add sbb mov popf inc inc xor jmp mov dec loop loopne jno sbb cmc fstl mov cmp dec dec movsl xlat lock pop sbb sub and xchg mov add mov mov repz adc sbb jl fiadd and jbe push jae fildl dec mov fstp cmp xorb pop pop movsb fs pushf xchg add adc mov add dec cltd adc cli aaa stos sub xor mov dec mov mov sbb fdivs (bad) loopne adc mov rcrb push push arpl push (bad) outsl sahf add dec stc test fmull cmpsb lods insl mov add aam das sub bound (bad) jmp sub inc clc and popf je movsl ret daa jo inc and mov inc adc cmp add fdivr (bad) call add mov jo xor lea mov jle movsl ret xchg adc mov pop enter push jg inc pcmpgtd jp or jb push or fstps mov mov es leave mov and stos idivb adc adc xchg js insl je loopne int3 add xchg and cmp push mov mov in pop out subb imul push mov lahf int xchg xlat add mov inc loop cmc jmp mov dec sub jbe stos push sti adcb jb int3 add ret jne faddp pushf sub movhlps sub mov data16 cmovns rol in sub (bad) out and mov in and pop gs jnp jo outsb dec mov pop ds xchg jecxz test xchg mov (bad) stc sbb incb mov mov pop (bad) cmpsl clc dec xchg out mov push popa adc loopne push push mov inc lods jo add and push lcall pusha adc pusha mov dec test frstor aad scas sbb shlb mov les push (bad) sub or and stos and xchg cmp xor sub push call adc test clc dec mov xchg adc mov daa fidivrl xchg (bad) in adc (bad) xchg sub std fwait test (bad) call push test stos pop mov cmp adc dec sbb push out mov jmp jp push cmc (bad) in add and popf into hlt push push add cmc fs push movsl pop (bad) mov mov push cwtl xchg (bad) test or adc inc or outsl or mov pop lea (bad) lock es pop pop dec push out pusha mov sbb push jle fidivl adc mov into mov xor repz ja or (bad) hlt cmc adc fildll xor push aaa icebp movsl lds and movb ror loopne jno jne (bad) and sar lret dec ficoml ds das xchg (bad) repnz pop or and dec jno cmp into mov sub dec dec daa (bad) icebp xchg adc jbe adc pushl xchg pop outsb push js mov ds mov inc and xchg mov pop and nop jns iret add call and cmp jne pusha mov sub pop xchg lds addb xor sub mov xor add push lret xor xchg pusha cmpsb outsb cwtl addr16 or pop aam add jns lock fsubrl push xor sub fwait in rolb xor nop pop fsubr mulb lea or lock sub popa add xchg xor cmp and push or jp and jnp add mov mov or das xchg mov out out pop pop add fbstp test (bad) testb leave push out sahf adc rcll mov nop xchg add xchg dec stc pusha int xor and or xchg (bad) fwait pop cs test lods pop pop idiv repz mov sbb jo ds mov and iret pop addr16 adc cmp jns add xchg mov lods pop xchg xchg jp daa roll jb xchg push jne insb das add in (bad) lock push add pop pop popa xchg lods pop pop xor sti repz add mov xchg mov xchg nop and adc mov stc mov call pop or xchg out lock sbb inc popa push fwait cmp pop ffreep or inc mov ja sub and mov mov pop sub lcall pusha mov bound push push jle pop lds jns,pn inc (bad) xor pminsw mov pop xor mov popa inc test push mov lea mov add (bad) sub push add push mov push cmp dec (bad) stos (bad) adc mov mov cld sub js mov pop cmp outsl ss repz je,pt (bad) xor dec inc add nop xor les pusha shlb imul mov mov fidiv outsl nop add mov adc xor lods sub push push scas adc int ficompl pop shlb sarb into and shrb cmpl mov fbld mov dec xchg out adc jno push ds push fsts bound jne or dec cmpsl dec loopne shrl stc into xor mov addr16 pop loop push mov xchg sbb insl popa mov push lods shlb mov lret push pop or jno xchg sub les xor or test and jl cmpsb (bad) popf mov push cmp xchg into push movsb cmp or inc ljmp adc sbb outsb push mov xchg mov push clc push in xchg je pop jne pusha push cli inc jno mov mov push testb adc cld pop loop inc cmp mov push mov inc (bad) xor cmpsb jnp scas mov dec sub in adc mov ljmp into loopne jg sbb and or xchg push inc adc adc sahf inc aam aam fs je ret mov sub mov pop mov sub or adc fstpt (bad) push sahf push mov dec add mov lods fsqrt sbb int3 push scas repz mov mov and pop mov sbb cmp mov repnz dec jp clc jl icebp jmp sbb add or sbb push adc dec cld lds (bad) dec test xor es repz lahf mov mov je shlb (bad) fwait add fdiv ss lods ret or xor xor cli sbb out or push inc cmp pop shll stos mov add cmp gs pop pop aas adc pop adc push popa inc mov pushf inc pop add data16 add loop adc pop dec add cwtl arpl aam js sarl mov sbb movsl cmc pop out push shrb mov mov push lret jno adc (bad) jg pop add lds iret jp jge xlat mov icebp arpl mov add lds js mov sub mov jno push es push js cmp mov or cmp push popl lods or cmpsl aad fild enter mov movsl jne ret or dec push inc xchg pusha test adc cmp xchg fildl popa add adc mov repz adc mov out jnp add pop sub cmp sarl (bad) (bad) and ficoml aad pop mov (bad) sub incb mov ret repz rol or xchg insb roll add roll jo dec or and sbb popa jae adc (bad) popf das cmp push stos jns sahf flds pop cmp in xor push dec and xor clc xor xchg mov fbstp add push lret lods (bad) std fistp lods or icebp movsb jo out jecxz and jns add mov add mov xlat mov rcll (bad) jmp mov mov jg imul sbb mov sbb sbb push dec xchg sub sub scas inc aaa or mov movsl push les rolb xchg jae xor stos xor adc movsl sbb (bad) push xor add data16 repnz pop mov lods jge enter dec mov (bad) xchg loope add mov jp xchg repz ds call or xor imul aas int3 sar mov ljmp mov outsb adc inc dec shrl hlt stc push sbb dec addb lret jnp push cmp sti pusha jg mov nop ror add adc es je testb mov iret xor pop inc cltd add jge stc add push fistpl or mov (bad) repz test mov xchg in stos cmp inc mov dec and mov push imul fstl adc rorb out jmp in pop pop inc sub (bad) fst dec jp adc loopne sbb adc aaa pop mov shrl sbb test insb and jmp cmp fisub insl inc sarb test add cwtl pushf js out add push test mov (bad) sbb int jno add outsl decl add pop adc sub inc aad push aas sub adc pop push mov mov or cli pop int3 leave pop inc inc js xchg pop push jmp jge lods xor push or xlat mov pop repnz out outsb sub pop push scas enter adc xor push inc pop or sarb or std lcall mov mov hlt jge adc ja leave adc pop pop fsts pop add fwait test xchg add adc dec fisttpll int3 scas add int sub subb lock jl enter cmp cltd stos add xchg push enter int jge stos ja std add add fnstenv or (bad) inc sbb sub ljmp fisubr pushf std daa inc cmp push xor mov push cs push mov pop rcll dec fild ja jo jb push push adc lret dec pop push aaa stos add or xor pushf lods icebp les mov push outsb add aas cmp jmp pop scas inc and (bad) stos cmpsb dec fstl outsl mov andl add addr16 adc add jno nop pushw add daa inc mov hlt test push inc mov pop nop nop fdiv mov in fsubs sub add xchg add bound das int inc shll cmp test or xor aam iret mov or fstl ret sub shld jle xchg aas gs stc cmp ja add nop fdivrs mov cmp cmp sbb jmp hlt add jb inc jno cmp test and pusha mov call mov sbb (bad) xor xchg xchg fildll push inc push or outsl and inc cmc (bad) cwtl pop sbb fimull ljmp push adc movl popa mov loope rcll or addl js add mov mov sub mov test test scas call sti lods aas pop out and sbb pop iret add enter and jle jmp rclb jge or bnd cld fildl outsl inc push and push jg pop xchg int sarb sbb lods mov pop movsl aam adcb jl jnp cmp push jae lods dec sub repz out mov sbb test mov test push cmp mov ljmp jecxz xor ret lret fmull in mov imul (bad) pop mov adc pop push in lods popf cmp pusha push cmp in aaa into mov cmc leave jnp ja dec xchg fcomi and insb cmp repnz fisttp (bad) lods jp pop ljmp cld lahf cmp xor stos je mov scas sbb and xor dec mov imul iret add xor push cmp pop rclb fcomp and add add inc adc mov popf lods out cmpsb pop adc dec pusha out xchg inc int3 sbb adc xchg push and (bad) aam cld add (bad) mov jo dec and push add fs cmp push lods insl jp jb (bad) mov test cs stos ss mov pop and loop daa push repz hlt add cwtl lds inc pop roll adc lea adc or pop fidiv adc jmp shrb mov popf test stos (bad) enter and nop inc pusha push pop jne push loop xor jne pusha in loop fidivrl dec cmp and push call imul sbb aad push popf stc cmp std ja push loop push pop bound pop mov fistp push pop cmp test adc pop push add in sub (bad) push dec imul addb xlat cmc (bad) test sarl dec mov add mov faddp mov subb or push push ret jmp pushf mov add sub add cmp or push mov xor push or xchg rolb mov popa dec sub and lods rcl mov mov lret mov xchg sub xor push and cmpb mov mov jle dec into xor add sbb inc add pop lods negl sbb mov lahf add cmpsb pop loope adc in pop jg add mov push push scas dec lea push cwtl loopne flds outsl add add iret and cmp and adc jne add pop jb and addl xchg rclb nop mov loopne rorl pop mov ret push cs jae in mov xchg and iret push test rolb adc cs add xchg jno add and or pop xor adc jle jno xchg lret mov sbb pop xchg xchg add cmpb add mov jl adc mov mov ret jnp cld lods in rorb dec cmp lcall mov mov rcl xchg pusha loop push mov dec daa aad loop push jns add and aam (bad) xor jns sbb mov mov pop lcall mov sub sub ret xor jae jo xchg push loop imul out sahf sub or decb pop les lahf mov push add push outsl es dec test movsl jo pop cmp shlb rcll xor int3 xor pop or jae popa xchg sbb or sbb pop push mov push dec cmc mov cmp movsb adc jl dec fldenv xchg sbb xchg xchg push sbb inc adc or mov imul and pusha in movb in cmc das sub fwait dec add test fs adc or push jg add bound les les sub clc inc xchg in add mov sbbl xor out ja (bad) pusha pushf cltd fmull lds sub lods aam mov xor icebp mov fbstp or mov or adc and into aam (bad) add mov adc popf (bad) mov xor or xchg loop je sbbl pushf ds arpl mov mov dec push xor sub and push cmp push add sub stc loop rcll rolb ljmp push add sub add push xchg add jle es icebp xchg adcl das lea out cs sub add dec cmp xor adc pop inc dec mov repnz pusha add jle mov sub pop aad in es jmp fisttp sub pop test push push pop sub stc xchg outsl ds jno std (bad) xor outsb mov sbb stos std (bad) push mov dec pop idiv dec iret lods mov or fdiv mulb (bad) mov mov popf xchg inc out push pop push insl adc orl push lods nop mov inc test sub aam sub mov fdivr (bad) imul ffreep lret mov data16 cld sarb aam jmp cmp or mov hlt dec add mov mov iret cmp cmc nop adc aas inc pcmpgtb mov ret push aaa adc outsl adc (bad) cmp faddl jge pop pushf xchg inc jmp cmp mov cmp in mov test dec add xor mov dec stos in popa in inc add movsl jno mov jl leave clc jno scas inc xchg (bad) ror icebp divb add and ret xchg lock dec pop fldenv imul xchg xchg and jns insl fmull mov pusha in mov or inc xchg jo aad pop and cwtl mov test xor pop jecxz jp insw sub xchg js mov mov pusha lcall icebp js xchg or (bad) testb (bad) xchg fs fistp arpl cltd fcmovb pop ds inc in les inc mov dec call xor fstl xchg popa mov mov xor xor fwait rol jae int3 and add cs mov das push cmp add dec pop sub push mov dec xchg mov add lock or xor popa push repz in lods jge lods sahf test and adc xchg insb dec lea mov cmpsl sub pop (bad) or mov pusha clc jmp pop xor or push add and loopne and push inc je pop pop out or and shrl decl jmp les sarl pop add jmp cmp (bad) pop push mov ja stos into mulb pop push mov jge fldenv jno cmp dec push fsubl pop xlat xchg in ret repz mov adc pop sub scas iret fisttpl add push mov and sub push lahf push jnp pop xor pop jmp in xorl ljmp xchg inc arpl jmp addr16 (bad) je je rcll xor sub push stc jns fucompp out lret cmp int pop adc jmp mov add sarl xor fiadd adc or mov xor sbb sbb scas negb je pop xchg mov mov les and xchg es mov push add cmp repnz (bad) or pop mov add jmp jno pop xchg push jge jbe xor mov js subb or mov fildll add cld fstpl sub add cld push fnstenv mov mov dec dec sti fisttp xchg out hlt push notl or std xchg cmp ret jmp dec call mov hlt fcom dec jmp pop lds aas les xchg xor out sub dec ss xchg mov jle pop pop repz pusha cld sub stos mov (bad) push divb dec (bad) std nop push pusha sbb or inc mov add bound icebp sub fcoms into mov sub add jge push neg sub movsb or std dec ret and outsl and push out jbe pop and inc sbb les xor (bad) aas sub cld out mov adc mov shr out movsl xor insb xor movsb or mov inc test pop pop js sbb sbb addb xchg jo jmp cmp addr16 mov jb (bad) ds decl scas and jge inc or adc in sahf pop xor lds addr16 sbb dec fld xor mov jnp and loop or and pop add inc mov and in jle stos lods xor cmc jne add xor sub push inc mov ret fistpll push xor jno jecxz add roll scas test fistpl cmp ficoml cmp sbb stos push (bad) xor shrl push mov mov adc (bad) test jmp stos and leave lea mov sbb addl jno dec dec ja mov dec arpl cmp fsubrl mov pop stos inc jns es xor and out xor xchg xchg sub or mov jmp mov add leave jne mov push sub test dec insl popf divb push add (bad) pop sub outsl sub add cmp stos inc push in inc subl fidivl mov rorb pop movl (bad) xlat mov adc push jb sub imul mov push and xchg scas fstps mov (bad) and dec inc dec je jne fs nop xor rcrl sub add or repz and push xchg out ret inc dec xchg pop mov and fiaddl and jne insl fstl lea loopne arpl loopne jmp loope (bad) repnz das ljmp dec mov add jo cmp fiaddl and or jae daa out pop cmc sbb lahf je inc shrl fstpl add icebp (bad) and and rclb jle inc cmc jge mov jecxz (bad) pushf repz jno pop push add adc loope les add outsl or pop mov pop jne dec je fs gs and insb xchg mov jnp inc sub dec cmp pop jns addb dec xlat cwtl add jmp mov add dec jg and or fistpll cmp rcrl ds sti das notl fucomi gs enter push dec cmp divb loop bound dec jae pop add inc es adc nop cwtl push rorl jnp ficomp sahf fs (bad) xor outsb mov jnp sbb mov sub xor gs and fidivl push xchg rcrl xor imul jge cli xor sbb aas outsl xchg dec push dec sar inc sub xchg rol je pop cmp test stc cmpl jae inc es xor adc xor test in lcall pop pop aad out push jno xchg imul jle adc gs dec cld add jle (bad) jmp fbld movsb mov mov cwtl dec push mov out ds xchg jecxz ljmp scas jne cmpsb dec mov xchg aaa ss add push push adc cmp mov add inc (bad) js (bad) rcrb cmovno test movsl mov dec push outsl les shufps pop mov ja xchg rolb clc mov fadd pop fildll sti pop mov fcomps enter pop push pusha cmc xchg add scas jle dec int3 ds lcall fldl jns idivb add xor xchg arpl out inc iret jmp adc dec cwtl sub add out push pop pop lcall and cmpsl fstl pop pop pop push pop rcl mulps jbe das in int3 adc ret jnp out sbb xchg mov xchg dec ljmp adc lahf fisubr jmp push push (bad) sti out xchg (bad) fwait add fildl push in aad push sub xlat int cmp jo test dec pop notl pop out add jno pop xchg sub ret lock ljmp icebp add pop aas call add xor out not add xchg add dec pop push mov xchg cmc into xor leave std iret fs sbb xor xor push loope and ljmp or and jl shll pushf out (bad) xor int or lea xchg push inc pusha xor or and loopne dec add inc out mov fistp insb fnstcw xor push sub mov bound mov sarb xor lds xchg cmpsl push sbb cltd push int3 pusha add pop imul and xchg inc lea in sbb ja addb je mov xchg cmp mov fsubr add fcmovb and cli or shl subl test add sbb cltd (bad) mov fcmovnb push xchg dec lock daa std jle (bad) or sbb xlat out lock in aas push cmp pushf add pop inc mov or or jl pop push iret jbe int3 xor pop or xchg jl xor push jp rolb loop jmp (bad) mov add (bad) mov scas fs loop pop int3 mov outsb sbb mov leave mov dec xor jno stos test mov popf adc lcall push sbb out notb test jge mov shrb xchg adc mov cmp sbb inc mov shlb push mulb sub xor pop cmp xor out xor (bad) adc pop punpcklbw mov loop pushf sbb add dec add call adc ss pop xchg rolb fsubl dec add add popf cmpsl sub mov xor dec ljmp push test popa ja (bad) jo rcrb out jge movsl fs mov sahf stos or lods add fsubl hlt add xchg lods add repz rorb cltd shlb cmp mov popa sti sbb out int3 dec mov lret inc sbb rolb (bad) (bad) leave adc cmc int add jnp cs mov dec push dec mov adc push push loope pop fadds inc cmp orb fs xorb cmp les pushf cmp dec cmp pop mov pop add fwait fs xchg add and or (bad) mov mov inc and and jae stos push or outsl aad inc mov cmpsb sahf loope popa and or xchg pop loop in and pusha popa lock adc jno xlat jmp les xor fwait push repnz adc adc add inc arpl imul (bad) js mov or pop cmc ret fs adc sub in lods fimul (bad) mov in movsb xor sub pop adc addl addr16 push jb ja xchg mov arpl adc inc dec iret xorl movsl in rcrb pop and jne fldl adcb es or push scas gs mov push pop arpl les mov xchg pusha and inc xor mov addr16 out enter les sub sbb rorb stc inc sbb loope movsb movsb pop mov stos and xlat adc cld popf ficoml xlat xchg sbb out lret cld ja jo fdivrp jl pop inc jno lock jg jmp xchg jnp jb (bad) xor testl (bad) jg dec mov push push enter jne (bad) out sbb push sahf pushl mov pop int3 cwtl jle fiadd js test or aaa cltd pop loopne inc jae rorb (bad) cmp jmp push mov popf and pop cli loop (bad) mov imul lods scas xchg mov lods xchg mov cmp or adc mov pop mov adc mov or jmp into xor push out add pop ficompl or stc pop dec push xchg mov xchg addb sbb rorl mov pop sbb fistpll jmp cmpl or add insb inc push addr16 and clc pop mov and fnstsw xor add sti lahf xchg push mov (bad) jmp repz mov jp inc rcrl ja xchg fadd frstor mov mov jge aad dec jmp push push xchg rcrb adc and out dec into jmp fwait lock add mov cwtl jb pop xchg pop rcll add jno xchg xchg bound pop sbb jle fst push sbb pop movsb shrl test enter adc push movb outsb dec add je and in clc jb in sarb gs into jmp ss xchg push mov sbb adc jg shl or sbb imul sahf mov pop push dec pop add loopne dec add cmp push enter out add pop jmp push outsl xchg pop shlb nop jns sbb mov xchg rorl out wrmsr mov inc mov (bad) dec cmp movsb cli mov xchg enter add loopne and pushl ljmp cld xlat add or push push jp stos std pop sub xchg adc gs inc popa js or stc push sub push or inc call dec shr add lods or (bad) jg mov mov xor push cmp retw xchg sub sti xor scas les dec lret or jl cs jmp adc sub mov add pop test xchg iret pop sub in add vmovdqu jecxz clc mulb imul sub dec nop sbb leave jno dec sub dec leave sti daa sbb sbb pop insb lea pop (bad) std mov push repz and sbb xor and push jg sbb dec sub sbb jle push push mov repz dec lds lret jne call repnz dec ds test in sbb sbbb dec mov add jl fdivs push in push pop push pop jp pop push mov jno call (bad) repnz pop not inc sub test jl imul je mov enter inc rcrl push mov inc push outsl xchg pop (bad) repz fcomps (bad) je popf in adc ret cwtl lret add inc sbb jb icebp add popa mov sbb lret jl mov add and gs iret inc and push add dec add and dec and rorl mov sub sbb lret aas aad cli dec add push dec xor cmpsl add jl ret add bound mov cs dec inc fiadd inc cmp dec adc mov pop clc loope fstpt imul dec dec jbe pusha and nop adc sub mov test add loopne iret mov xor mov cmc push jae jmp mov mov add ror sub rcrb sub xor xor add cmp push call mov sbb adc les cmp popa popf fsub fdivl add xor cs (bad) sub in aas (bad) (bad) enter mov pop jp lret cmp add cmpsl add jno pop (bad) pop pusha mov adc lea (bad) cmp popa xchg (bad) fwait sub push cs adc cmp inc sbb xrelease shrb fldt addl das lret test add dec inc add outsb sub das les cli cli notb or pop xchg mov std icebp in (bad) push mov popa repnz jl enter ret adc aaa add mov mov sub and jge add rorb rolb xchg scas xor mov notl add loop add repnz je xor inc xchg and and sub into dec xchg ja sub movsb cmp push fisttp push add jecxz cmp xlat mov push push mov xor add mov push push (bad) loope mov rorb ss sub loope sbb xchg test add in xor movsb scas mov sub in jmp mov pop mov adc (bad) sbb lret in (bad) jbe scas xchg pop mov (bad) jmp sbb jo sbb sbb xor jno ret dec xchg jmp (bad) sbb lods stc adc mov ss call jno jo add cltd (bad) cli mov jne xor clc mov sub roll mov pop je xlat int3 bound add test mov fwait aas hlt lret add test inc jne mov mov outsl repz mov xchg push shrb std popa and outsb stc (bad) aas sub inc cs sahf add and dec or sub movsl inc sbb mov adc add cmpl xor (bad) cwtl sti add mov test in push cmp (bad) roll fild repz pushf sub fnsave and pop mov sbb pushf add mov fs lahf shr xchg enter pop xor add adcl rcl inc test (bad) mov mov fisttpl push cmpsl (bad) popw ret sti testl xchg add (bad) xchg sub rclb adc in in sar xor imul cwtl and fstps cmpsb push and xlat xor add (bad) flds mov push enter jo iret stc fs mov call out inc mov mov pop jo add mov call into pop xchg loopw mov inc into dec mov outsl enter mov out rcrb xchg in cmp add sbbl fist ja scas (bad) xor mov dec mov rclb imul cmpsl add lea mov dec pop icebp inc int3 out xchg pop xor push shrb idivl or and add fdivl fcompl mov jns push fwait inc lds push out add test push mov xchg mov int or into bound pop or push cltd test loop add imul jl test sti stos add adc out fiadd cmpl dec jecxz add add sahf clc andl pop mov adc sbb pop xchg adc fldcw scas fisttpll jg mov sbb out fidiv ds out and ljmp add mov pop nop jge bound fiadd cs cmc scas xlat movb push push je cli add adc sbb mov mov xchg sub add loopne xchg pusha lahf fisub iret xor fwait add pop aam (bad) mov das int3 push sub lods push push jp pop aaa xchg std sbb (bad) pop add push dec mov xchg add stos movsl fdiv aas and repz xor clc xchg cmp stos dec stc pop movsl imulb mov jns dec adc xor push xchg jns mov xlat pop xor and push push pop sub popa testb push jecxz mov nop push mov lahf push fist fidivl ss aaa sub add adc mov lret pop and repz mov pop xchg jo jns imul loopne and les roll jg pop orb dec inc in lea cli loopne pop pop mov xor inc fwait jg jecxz push pop add inc fisubl mov xchg loopne sub hlt add sub repnz arpl sbb jbe ja jl and jo add rcrl xorb push je (bad) inc adc sbb add push mov sbb movsl add cmp mov notb mov fmull sti and into fist push fidivl mov push xchg fisub or xlat sbb sbb or jnp call mov scas nop mov rcrl jp pushf je add mov sbb repz mov push dec popa mov xchg hlt jle adc mov iret ss xchg test add xlat sarb jb lcall add stos ja sti sbb clc push mov mov cmp and and mov das cmp mov pop push adc imul xchg adc sub mov push nop jae daa loope rorb xchg mov dec roll push cmp dec outsl cltd pop cmp into outsb addr16 in mov inc jp pusha cld sbb rorl fiadd pop mov mov int cwtl add aas pop jae xchg inc jb adc push incl cmp mov js daa adc xchg pusha sub sbb sbb cli xchg in sub or inc jne jb jp mov lret bound and icebp inc (bad) incb push daa adc inc popa sub out fs mov outsl test pushf dec inc outsb call mov mov or cmp sub add mov sti test mov out add sahf pop sbb jo sbb shll mov xor rcr sbb mov mov cli lea jno adc adc repz arpl and jae dec out les stc loopne pop popa add aad and rorl jle xor jge out movsb pushf mov iret pop popf outsl sub jnp fstps aad jnp nop add lock mov outsb shll sub pop mov or popf pop adc pusha xchg cltd je add aam and lcall cmp sarl mull push aaa or test add nop fmulp das test jp sbb pop jecxz rclb cmc cmp sub jne mov mov loopne push sbb mov xchg cli cmp push dec mov insl add out sbb sub outsb in mov insl fs pop (bad) mov fmull rdpmc popf mov fbstp int3 mov ret or add pop repnz mov pusha nop xor ret push xor aam mov ds out xchg xchg push mulb xor mov mov xchg add popa sbb inc xchg test jo sbb stos push mov add xor sub pop insl pop cmp mov inc cwtl add xor or cltd xor cs arpl cli xchg stos in mov or jmp cmpsl xchg negl (bad) (bad) lahf fs add sahf xor inc imul mov sbb pop fs std xor mov sub bound cmc icebp push or mov fnsave popf rorl and push mov push arpl shlb inc cmp adc les insb sbb lret sub and nop add adc pop jl call mov push movsl lods sti dec loop sub mov cmp add mov jb arpl ljmp icebp pop add pop stos jl test jo adc (bad) sbb sarl out int sub fcmovnu cmp cmp notb andl xchg lahf std loop outsb jmp aad or subb ss xor or sti outsl subl std sbb mov xor mov call jge xchg (bad) mov test cmc mov scas mov xor mov push leave push or inc fstpl lcall xchg popf mov sub or sti and add aam (bad) sbb pop add rcrb (bad) das cmp dec and in mov pop imulb imul xchg cmp mov das imul sbb lods sbb adc adc mov movsl jl (bad) inc sbb roll movsl outsl lret mov add movsb and arpl (bad) add and and and fcomps mov mov test das push (bad) or (bad) dec and cmc imul mov and icebp push mov jecxz and mov push repnz or push jb add and outsb repz in cld adc (bad) sbb in outsl loop jne mov xchg dec mov stos mov mov scas jp add repz cmp or jmp cmp mov push subl inc out sub sbb sub inc and (bad) push mov xlat outsb jae jmp inc and add fdivrp in stos je adc add or dec lea out fs add ffreep adc jmp xor and loopne add sbb adc push aam or roll mov mov stc sbb xlat int cmc wrmsr stos mov arpl jmp add mov cmp xchg fs push mov add xor xor xchg push fiaddl add jo dec fdivr jle cli pop popa pop mov cld lods dec fs add (bad) jno ljmp outsb and mov negl jnp push fidivrl int3 mov mov push sub into sub and out fisubrl add jmp popa jg clc das xor sbb mov sarl mov pop cli outsl roll and mov or inc mov and (bad) out or jmp inc outsl cmp or ds cmc add push sbbl dec scas add repnz sbb pop fs xchg sub jnp popa mov cmp inc pop fnstenv xor pop (bad) xchg pop dec mov jle loope shrb and sahf ret pop dec mov mov out push sub es out stos (bad) in jp addl rcrb xchg sub popa push cmp orl inc xor cld rcll push xchg nop arpl (bad) inc sti lea lods dec fimull in push insl inc pop jmp cltd imul push or lds inc lahf push fs and jo nop mov mov cmc xor mov xor int mov (bad) nop sub pop or xchg pop push jmp (bad) (bad) lods mov cmp pop hlt add or mov sbb fnop adc add daa int loop outsl inc and xlat pop inc mov test fbstp jmp out dec cvttps2pi dec sahf rcrl rorl dec dec add and test stos ret add xor push hlt inc test sub xchg cmp mov xchg xchg jae nop (bad) ficom cmpsb (bad) jo xchg repz cwtl pusha repnz inc add into and push mov loop inc pop ja pop mov or rorl add jp add xor cmpsb loope test pop lret call jnp xchg lock add popa pop lea popf push dec pop notb aaa fisttpll xchg dec sti sahf lcall (bad) pop ficoml pop sub subl mov icebp mov xchg cmp fnsave jns int3 cmp mov das ret nop out or adc fdivp mov pusha cmc jle xchg mov pop or mov pop dec add sbb and xorb mov jne sti xorl in jne lods mov dec mov cmc mov xchg sbb stos jne jns pop mov pop push (bad) xlat test mov ja mov cmp insl (bad) (bad) mov cmpsb sub adc dec adc incb sub aaa popf push loope jbe jb pop loop sbb jg add stos loope nop mov mov in add cmp daa xor pop xchg gs test call ja cmp mov pop xchg call stc repnz icebp add inc mov popf loop popf sbb pop dec mov mov adc add mov dec mov cwtl and jnp lahf jb jmp aas sahf nop orb mov imul andb push pop xor rcl push and push clc pop popf aam pusha mov push push push cli je test mov mov mov push add arpl or sbb push xor aaa gs outsb mov cli jne inc push negb pop jb adc push aaa fildl xor sbb inc lea pop data16 sbb ja (bad) test sbb mov xor icebp inc cs cld add adc (bad) mov cmp adc dec dec enter fnop or pop dec inc pop jmp test in and add out push hlt jmp fxch xor repz pop lds push test sbbb push sbb bound xchg add push push pop push pusha stos (bad) cvtdq2ps scas pop test xchg dec loope xorb push popa popf pop and cmp mov mov (bad) mov idivl dec xchg cmp ficoml and jbe jecxz inc and sbb daa inc (bad) das ljmp aad stos push ret and nop xor mov cmp xor ja jle rcl movsl xor std sbb mov xor add dec js mov rolb xchg popf sti fiaddl and movsl in mov pop jg fiaddl and xchg enter push adc mov dec (bad) jns mov push (bad) into rcrb ja or (bad) shlb lahf dec add jle rorl rolb push (bad) ficom cwtl out daa xor ljmp and mov popf mov cmp mov push andl xchg xlat inc stos cmp xchg scas imul pmulhuw dec ds aas negb icebp fldenv rclb push mov mov incl lret pop xor scas cli xchg xor sub cmc mov cli sbb lock fmull pushl (bad) int3 mov lret push and add adc xlat sub scas es or xor in xor xchg in call cmc push loop add jecxz gs not dec fwait mov dec dec pop in mov cmp xchg add stc mov mov mov imul sbb sub pusha push xor pop popf cmp popa andb cmp lret xor pop xchg fadds jno popf jnp sub xor fistpll leave inc das and add mov rcl faddl sub cs add shll jg popf sbb les sbb xchg mov ret out or add add cli mov sahf adc negl dec je push out dec adc fneni(8087 andl xlat inc cmp (bad) pop pusha push adc loop sub jg or je das jl sbb lods jmp daa adc cltd cmp (bad) pusha push fmull sub (bad) into cld pop lock add lods sbb adc mov push adc cwtl xchg jle stos pop pop jb roll in pop push push push decb add and fidivrl or pop nop outsl mov pushf add and rcr pop xchg (bad) pusha fbld xor loope movl cltd push mov rcll and xchg lcall cwtl (bad) jbe inc mov out fldt (bad) xor mov jge cmp sub jns xchg pusha decb push nop popa jmp or (bad) mov mov dec cmp jecxz pusha dec push das and loope mov bound rcrl push lods (bad) jmp push mov test movsb imul mov ss test mov sbb js mov push sub and (bad) (bad) sub cmp out arpl and (bad) xchg mov enter add sbb in add inc add cmp cmpl pusha jle push push and mov out popf jecxz dec push jno add mov clc mov dec add sub movsb std jne dec insb push lods fmull icebp push into sbb dec mov clc mov dec jge test cmp mov popa mov ljmp pop dec jp mov jmp ja lds mov or addr16 jns xlat cmp mov negb dec add sbb daa jecxz adc dec push int3 ret gs cmp cmpsl shll push pop push jne (bad) sub test arpl mov fs testb scas into jecxz or mov push xchg out out mov mov or enter pop sti int3 mov ficomp or dec pop out mov mov cmp add mov sahf push test sub rcr dec (bad) pop inc push enter repnz and or mov mov adc movsb loope mov lcall mov int3 push adc xchg rolb and inc (bad) add mov mov dec or jbe dec into mov stos and icebp and adc sti sub aad mov ret add cs and aam pop dec leave addr16 repz jns dec inc lret cmp mov stos fwait sarl ret mov sti mov dec cmc popf xor pop sub inc adc mov test push cmpsb xchg and lods sti and sub jo sub push xor cmp sahf push rclb pusha add ret (bad) popa xlat int sbb sti jg fcmovu xor dec and std (bad) cwtl popa xor push (bad) rorl sbb out shrl add inc aas notb or stc dec sti add jmp pushl incb int mov mov mov add adc mov jne fiadd and ljmp enter sub xor push cmc mov add jbe sbb push scas fiadd add pop outsb sbb xchg lret popf add fldenv pop inc (bad) mov dec pusha sbb arpl push cmp mov mov pop mov data16 adc jge sbb lods cmpl das xorb ret xor popa fsubrl push stos call jae pop sbb roll lea add jl mov daa andps and lret mov lock add xlat stos fsubrs mov (bad) cld out dec mov mov dec call push cmpl aam ja stc adc adc sbb icebp sub jmp cmc mov iret adc sub jl jg addr16 and scas daa sub sbb pusha mov jae push mov bound dec in push dec out aam mov push fistl cli mov jmp jno mov pop rorb add ja (bad) mov in popl push sarb xlat negb xchg aaa add sbb stos jb or add sub mov inc (bad) jp and arpl rclb fimull add call out xor fstpt ljmp dec cmpb mov arpl xchg sub push pop xor xchg test sbbb mov jae aaa sub idivb xor jo cmp xchg ljmp lods push dec lea cltd ds subb movsb and pop test insl add cli lods xchg enter test cwtl dec mov inc fwait sbb dec nop data16 xlat rcl dec sub pop in xchg add neg cld and push mov sbb cwtl mov das popa sub movsl and (bad) push push xor lret pop rcl jbe sub dec andb pop sub scas div jecxz cwtl push repz inc mov ja fwait jbe add cmpsl out addr16 xchg mov aas dec test push sbb lea cmpl nop test push xchg mov pop int ret fnstcw xchg out dec je add mov movsb loopne subb lret mov xchg xchg mov mov mov xor nop add xor ljmp and add mov out xor jo mov or addr16 push pop or add push push lds xchg push out dec std mov pushf sbb inc add loopne jl or cmc frstor add xlat dec cmp xor fldenv sub rclb in into dec mov adc cmp out mov pop mov add add rcl mov repz jae add cmp mov (bad) out add jp add inc cld mov push loope scas add mov loopne fldenv gs addl lods mov test (bad) dec inc (bad) int3 (bad) mov ficomp adc int sub repnz rcrl mov sub insb adc inc out movsl cmp or leave pop in add aaa adc add stos pop data16 repnz add add and add ficomp loopne out or loop clc push into push jns cld out rcrb sub jl cmc or test pop cmp lret sahf cmpb sbb adc fildll push movl loop pop or mov push pop add daa mov dec pop or ja mov (bad) hlt (bad) lds scas mov adc cs in push popf mov mov xchg mov xchg fwait and add stos mov mov jge js jp add rcr mov out add sbbl pop daa mov jmp out mov sbb cli jecxz add ret mov push out or add rcll push jge and mov push fwait add daa pop fs adc test aad pop shr mov and mov movsb add mov pusha xchg jg aas and and call stc dec mov pop add in pusha fwait sub and push push leave lahf mov xchg mov adc fldt test movsl mov pusha push or push add lods lock mov shlb jno loopne add mov jp dec adc xchg cld adc ret call cmp push mov cltd movsb mov enter in cld fs dec test mov popf adc int mov add test inc test xchg icebp sbb push add cmpsb jle and adc or (bad) shll ds stos roll dec icebp (bad) jns mov ja movb push outsb xchg movsb jo or add daa pop cwtl or stos or prefetchnta pop and sub repnz or jnp xor jl xchg shll xor cmp mov mov jecxz les mov aas mov movswl fs sbb xor in sub and adcb out mov add add and repz lock test xor adc (bad) push add or xchg or outsl popa jmp xchg mov loop lea cmp insb push and cmc cmp adc mov inc xchg cmp subl enter jo dec mov add mov dec or push aaa xor adc scas xchg push inc ds cltd daa pop push push xchg mov or inc popa pop xchg outsb ret das dec inc movsb add mov or mov mov xor xchg fdivl notb inc adc and scas mov and push and dec push sub inc adc mov pop cltd mov cmp sbb adc dec out xor mov jle ficomp mov dec stos out aas mov mov pusha stc and mul and popa push fldenv stos sub inc push pop push mov add inc xchg in dec adc mov repnz cmp mov cs sub icebp rcrb and out or ficoml mov pop pop push jp outsl dec cmp push push mov pop jmp mov sbb mov sbb xchg cmpsb adc mov call lock mov xchg add jb dec fildl or mov push pop adc out fimul aam out mov lahf and adc jbe add outsl pop xchg cmpsl stos out je inc cmc mov addr16 push jnp nop add fdivrs adc clc mov add popf jmp cmp xor out into mov sbbb je add or xchg pop mov dec and sti int3 cmpsb and jo mov lods cmp mov jne outsb inc add mov add mov clc pop xchg sbb test cltd insl mov ret xlat into leave mov pushf add movsb lds add repz jg rcll in xlat data16 cld xchg dec aas mov mov xlat push lods adc or or mov xor inc (bad) adc ds mov lods push cmp sub (bad) sub xchg fs push pop push or mov adc inc and nop cmc pop outsb enter push sub push in lea sub stos xlat movsl pop pop add fadds ljmp fnstcw fildl and mov fucomip nop lds adc enter push loop xlat add ror sbb pusha mov sar in add (bad) jnp mov mov inc sub in or cli out add andl aad add test and pop cld arpl xchg inc sub inc and sbb outsb push gs (bad) mov adc cli mov mov sbb std mov add mov in lret adc loope cs arpl mov or inc lea cmp mov push fidivrl push cwtl pop mov or jo imul pop test fisttp xor xchg sub add cmc aas arpl xor inc jnp xor mov popf pop push pop mov and mov enter cmpsl xchg addr16 cmpsb mov xchg inc cmc dec mov dec sti lods js pusha or mulb pop mov or push into jo mov xor ret mov out icebp (bad) mov jecxz dec les fadd jge mov stos sub jge sbb test das xor int rclb mov das sbb mov mov popl in cmp rcll test les add scas or push sub inc adc lcall test mov or inc xorb push dec add mov (bad) call ds mov pop fdivr xchg adc inc and call fldl mov pusha (bad) sbb pop jl rcll dec popa loop mov pop cmp push push push rorb dec add test push fld gs mov pop lret xor add push push mov pop sub xchg or mov mov pop mov push imull cmp icebp mov and jl fcompl pusha test out sbb mov mov adc notl add (bad) cs outsb lods dec pop popa imul jg iret cmp roll add (bad) lea mov nop or add icebp lods ja mov jne and cli lret cmp mov cwtl aas fdivs aam cmp inc cmp add add stc push xchg (bad) pop pop fadds jbe dec shl andb or out push adc adc test push cli addr16 test mov movsb stos jo mov aam push orl fiadd movsl xor clc xchg (bad) mov push enter test leave clc push int dec cmp xor bound dec xor fildll dec or (bad) fdivs cmc insb mov push aaa sub sbb daa mov lock fs cmp or pop cmpsb jae push cmpsl sahf push mov push enter or shrl mov loope or outsb add xchg and (bad) or jbe stc mov mov pop mov loope insb xor rorl push insl mov and push sti mov jo icebp sub dec add xchg mov inc mov push ds jg mov inc inc add nop dec cwtl (bad) (bad) cmp xchg pop pop lods bnd add scas pop decb in mov cs dec jae lds sbb pop cmp cwtl add sbb test ss iret shr ds mov sbb fs (bad) cmp xchg push adcl pushf (bad) testb push loop cmpsb and cwtl push not out jns icebp rol jmp push fdivrs movsb xchg push jno inc rorb lcall sbb xlat mov lods cmpsb loopne adc sub out stos popf sbb xchg add jg (bad) out xor adc cld or or (bad) jge scas add ret sbb cmp pop pusha push push movsl cmp (bad) xor add out xchg mov and mov mov push cmp mov ljmp add loop lods adc mov cltd ss jnp cmp std jp (bad) add in and inc pop mov test imul xor sub fidivl dec push scas inc fnsave xchg scas mov jp push jecxz jnp lcall cmp xchg jo lcall add pop arpl mov adc stos (bad) sbb imulb (bad) leave mov xor xor lret adc xchg xchg cmc inc jp add mov ret push das int3 sbb and fsubs insb cmp out adc jnp lods mov sub inc daa inc int3 sbb ror add pop nop cmp into push xchg std push mov pop dec jne cmpsl movsl add mov stos rcrb sahf rorb xchg repnz cs mov (bad) fistp fildll in addr16 pop rcrb jecxz rclb push mov pop dec push cmp aam hlt push lret mov xchg push xor scas das or dec xchg addr16 cmpsl jno lahf jmp xor inc add mov adc mov test inc mov lret aaa dec test pop mov sbb sub mov inc cmp aad (bad) adc rorb add int (bad) aaa and xor push pop loopne in mov adc mov clc inc das xchg mov repz lods add sub mov or sub pop and inc xchg ljmp out test mov aad mov cmp lods in add loopne mov adc fidivl test (bad) dec ljmp sub bound push nop (bad) push push pop das cli inc jge sbb jp add int3 add xchg mov pop adc cmp in nop mov and arpl jnp cwtl cmp out in mov stc les add imul adc sbb nop push icebp mulb lret jbe add mov sbb imulb imul mov mov mov aam sbb (bad) mov add test into mov cwtl pop pop les (bad) idivb xor movsl in in add sbb test fmulp xchg mov xor and mov lock test out cwtl dec add mov xor in xor xchg es pop lds and stos daa outsl bound movsl push dec dec (bad) and popf pop push mov outsb mov jp and xlat mov enter out jns pop inc in mov xlat lahf jge dec or dec inc fldl mov mov jmp add pop ss push mov sti lea add sarb test or jmp (bad) lret fisttpll mov pop in adc fs stos sub dec inc fildll mov add push rorb dec inc popf add and fcmovne push into mov pop insb (bad) mov mov test add imul and leave idiv cmc mov inc mov shlb aas sub xchg adcb fcoms gs pop push mov loope push rcrl cmc jae pushf bound imul roll cld cmp push mov stc aam popf outsb test testl xchg adc (bad) inc test mov in pop dec orl data16 jb ret mov adc mov mov xor jo lock jne paddq dec mov mov mov add iret fisttp xchg pushf mov xchg mov fwait stos xorb xor pop adc mov or in jg xor or fwait orl cmp ficomp in push roll lods cmpsb jo sbb sub xchg mov push mov das mov pop mov lock clc je adc push jg ja or sbb scas cmp jp cltd pop pop and or stc sub lds xchg push scas xchg xchg rorl sti jmp fs and mov inc loopne sbb pop sbb (bad) adc jno std xchg call pop mov add pop sub lret sub xor mov sbb jmp stos les int lods push stos cwtl cmp xchg test scas dec or add sahf pop sub jae add sti pop (bad) push dec popf sbb clc mov mov cmpsl sub push lcall test inc ja mov ds jbe add jne and jle (bad) sti movsb pop jne ljmp call icebp lret (bad) jge daa cli clc nop pop (bad) jnp add jae jbe das test jns and push xor mov test add mov imul add sahf push pop rclb icebp es mov adc xor jp repnz loop dec rcrb fdivs or faddp xchg jp add dec push loopne lret add inc dec arpl push adc out and add xchg mov lods and bound mov call ret movsb mov add clc pop sarl push popa hlt aam adc pop push ret loopne mov and push dec cltd add pop mov mov adc and sti cmp xor or inc int3 jb push push pop sar add cmpsb outsl inc cmp xchg aad mov or dec mov fwait push shlb or call stc scas lods push loopne adc test xchg dec adc or jmp fistl add jecxz push pop mov sbb shll frstor push lods push aas mov push shlb cld popa mov sbb aas test sbb add jp add and mov imul push cli cmp and je fcoml add stc inc out or clc inc inc mov and inc call roll fiaddl push adc add (bad) add adc mov cmp lock adc or cs pop add icebp clc xor sub xlat dec imul cli shlb cmp sub mov jno (bad) or js popa stos mov add jnp addr16 mov sahf or cwtl popf fidivrl popa mov shrl adc mov icebp and sti cs mov mov fwait cmp add jae push cmc enter xchg call jmp mov testb mov sbb addr16 test movsb (bad) jp nop clc in das sti mov inc aam mov icebp or sub push lds and sti xor popf mov mov or leave pop (bad) ds adc jns add mov mov push pop jb fcmovb sahf cltd faddl xchg lcall mov notb xchg fist sbb xor je xchg call scas jp add jae inc sti movsl xor js rorl js xor cmpsw (bad) inc or xor sbb bts mov add add push nop inc das js jle cmpsb dec or sub sbb cmp cwtl inc cmp cmp mov xchg sub push stos mov rclb or das add push and adc sub or testb cmc int inc adc mov aaa cli ja mov (bad) mov inc mov xor nop mov xorb jb adc test cmpl add leave xchg jne in add dec mov xlat xor cld push jnp cmp outsb sub icebp sbb fmull test xchg jbe fdivl out xor xchg pop (bad) (bad) cmp adc sub mov mov loopne (bad) arpl sbb and leave mov cld sub jbe adcl inc cmp (bad) inc cmc out popf (bad) dec rcrb or mov and dec mov adc add loopne and stc add mov push ljmp stc mov lock lods cmp mov cmpsl jns jecxz push daa push pop cmpl jl pusha test and dec pusha inc dec mov dec daa fdivs and push stc push mov outsb mov lea mov test jp push mov arpl lods popf cld cs add sbb test sub lcall aas dec popa cld icebp add sub cmp or mov jp daa jmp addr16 push dec push inc inc popa cmp or ret adc stos mov adc push jnp imul and daa inc ss (bad) cmp sub mov dec add movsl sub cmpsl mov mov add popf roll mov jno mov (bad) loopne xchg mov cld push mov cld xchg cmc js xchg dec inc aaa pop or xchg arpl aas mov push xor mov or jg jge cltd jnp mov mov xchg adc sub and into push adc pushf push and and fisttpl inc lock inc pusha jo xchg je leave decl mov xchg xor js rcll xchg outsb inc cmp add orb mov adc outsb fldl jg flds push sbb cwtl ljmp dec sbb andl dec clc scas sub cld mov mov jns and jge daa ret data16 dec out add push subb xchg fdivp mov inc insb jp (bad) js and xchg adc in fist flds dec aaa xor mov inc and xor frndint pop xchg mov push and cltd mov xchg add adcb sarb adc or nop clc mov jae test ljmp mov icebp push cld int3 cltd adc sub jmp loope add jp xchg push aaa notb shrl lahf pop add rcl cli (bad) fisubrl in adcl lcall out loope ja div pop push xor rclb push pop jmp cld xor and lahf push decb cmp add or xor inc pop test mov add or jle push mov test xchg lahf cltd lea je scas fwait mov cwtl es mov neg (bad) or pop sub iret movsb out push scas xor xchg js dec fst add bound les pop xor sbb inc pusha out dec rorl adc clc das and mov cmp call lods mov cmp mov jp test push (bad) fildl jg sti cld xor cli xchg mov in (bad) pop xchg xchg stos jb (bad) xor out or dec cmp cmp sbb call jecxz int3 cmp add cwtl ret inc hlt out add fwait push cwtl xor jnp cwtl mov or inc sub jle shl test repnz xchg (bad) fstl ds push hlt inc dec cmp sub jo mov lods addr16 repz es es aam add in sahf pushf leave dec pop out rorl jne adc mov or aam mov mov add mov cmp adc add xor pop je adcl mov dec popa mov sub ss lahf out dec pusha cmpsl loop pop push lret adc inc adc lods pusha ljmp adc popf and pop push data16 xlat sarb mov xchg add mov mov inc xor clc jae cld mov add fiadd xor repz xor pop loop pop inc cmp ret lds push (bad) mov cmp push popf imul push andl pusha or jb mov and lahf xchg dec add pop into pop sbb jge jo mov daa jnp js adc sub xchg je lcall and mov fnstenv and movsl ja ljmp cmp call xor mov and outsl test pop mov push js add and in rolb cwtl std loopne and push cmp or cmc adc aad std loopne out out and mov adc mov aam push (bad) mov xchg mov dec pop test sbb ljmp aad and pop mov xlat xor dec cmp add sbb pop inc popa inc and loop (bad) inc mov or stos mov mov in push out jmp mov in lods sub fsubs or test std dec lods pop mov jl lock mov lods scas movsb mov rorl sub or pop jg adc xor call mov addr16 adc sub dec in out xor mov lcall sub mov (bad) shlb insl jae lahf pop xor lods int3 mov jmp (bad) jb add das dec sub mov adc mov add xor cmpsl lret daa mov xlat add test hlt sub mov nop ja insb out or sub adcb jno jae sub dec jb dec mov xchg (bad) cmp jg adc pop mov stc mov lret mov or popa pop jbe jmp jp add and les push (bad) in inc inc sbb adc icebp or dec dec icebp push xchg fisttpl jecxz bound xchg mov (bad) outsl jle jnp stc and cmp push dec add xchg (bad) and inc mov xchg jns xchg (bad) jb push xor adc cmpsb push cmp fcom xchg dec cmp mov xchg and test jns and cmp xchg scas push pop pusha and fwait (bad) dec lods mov mov sbb push out pop add pop nop divb loop xor mov and or fistpl cmc int imul loope xorl (bad) mov movl dec lds nop pop roll mov or jecxz and push lcall or mov inc stc xchg jecxz adc lcall ret mov pusha ja sub testl cmpsb orb xor mov and sarl xor imul subb inc cmp mov pop ss popa mov testl rolb divb in call add xor fistp or dec push pop (bad) xchg bound mov dec sahf shr add btc popa dec sub outsl add fild sbb sub xchg fisub icebp fild lret insb cli add mov sarl add push cmp xor sub pop jmp das stc outsb jbe pop clc pop adc pop (bad) dec stos dec mov and sbb inc pop and mov xor jg mov jmp add movsl scas lea and or cmp leave rcll pop push loopne movb shlb xor testb and jbe imul pop cmp mov mov (bad) sarb divb (bad) xlat test pushf add bound es lock mov (bad) mov rorb push cmp adc mov adc or sarb sti jp sub out dec mov sub xor mov stos xor adc sub sarb test test incb jb insl aad jg add jns daa xor int3 xchg div add shl dec loope adc sub cs das sti popa inc pop das sub jl jo jo cltd inc inc sub cmp add xor cs xor je jae inc and cmp cmc repnz inc inc adc mov add (bad) notb ss loop in scas arpl adc xchg loopne popa in sbb rclb fisubr js mov fsubl mov out mov data16 shr and pop adc stos and (bad) xchg cmp orb add popa pop das xor or cli xchg pop nop repnz or int pop cmpsl popf cmp popa sub roll push mov out xlat bound cmpl rcll push jb jl push push cmp lods pop ret add dec stos cli loope sbb decl in xchg subb in jl popf inc push popa js adc pop add sub and mov mov mov jmp (bad) dec fld push inc roll fldenv test xchg add sub push lds or mov stos pop dec test xchg add loopne adc sbb push popa cmp fnsave ds in add mov or leave (bad) jp inc pusha mov mov mov dec mov sub call aam pop xor xchg mov adc sub pusha repnz xchg adc jl (bad) in mov mov mov and popa and xor push add pop imul xor out loopne cmpsb decb mov add ret (bad) int mov push pop xchg push xor dec push pop xchg mov add sbb sahf add aaa mov sub inc jle loop adc xchg mov push shl (bad) fbld leave xlat cli sbb mov roll adc nop push jbe inc les dec jns dec xchg lcall adc push imul mov jmp pop fstpl jmp ds mov sar test (bad) cld ds sub pusha and sbb jmp inc xor add cmp fisttpl pop jecxz insb ss push les leave ja and ret aad or sub mov xchg jbe movsb fisubl and inc cmp and div jecxz icebp rcrb xchg daa mov add leave or mov subl (bad) jmp push cltd xor rol add mov aas mov push add ficom jnp push and or cli loop dec mov adc call out dec (bad) xchg inc and outsl mov dec adc sub xchg mov and xchg mov xor sbb inc push ret aaa add xor push sub xlat jnp push mov stos sbb cmp inc sbb pop clc stc stos sub mov sbb cli mov xchg jbe (bad) and add std ret shlb das and push movsb jmp push inc jne jmp je das push cs push enter out in push add loope rcrb dec dec mov fcompl icebp and sub mov mov nop push dec jbe cs add or clc in enter xor iret mov jns or test sub xchg pop rorl cmc outsl enter adc jg ss cmp cmp inc jb jno lcall xor jae pop adc rcrb xchg shll cmpb dec and daa push jge adc jbe add out cmc dec xor sub adc (bad) xor mov sub andl es add push lcall pop jle imul dec mov fcoms cmp or pop pop jmp xchg faddl jmp lret mov push out stc add sub insb or roll icebp clc mov daa sti fs xchg add fadds or adc add mov shr sarb and icebp mov add fcoml lahf stc inc sub repnz sub sbb mov inc clc cwtl mov or (bad) mov xchg push lods adc mov pop mov lcall mov jno fwait test inc dec popf insl outsb test popf sti sub inc mov lea imul lods and cmp mov test ss aas shrl (bad) notb popf xchg cmp mov fistp test sbb adc pop push cmp das das fistpl orb sub and or repnz mov cli std and or stos popf cmp push sbb popf xor mov imul adc out popa pop adc jae call inc adc push mov mov xchg mov cli mov fbstp addl stos xor mov ja mov jecxz sub (bad) aaa sbb and icebp fldl lcall dec popf call mov mov inc incl sub pop and adc mov jl and enter push test dec ds or mov into sbbb js test (bad) loopne pop sub pusha push push and mov or mov add shll int adc mov add sub mov fs or xchg movsb aad in lret add clc daa cmp lock jmp xor mov clc xchg sub pop lods movsl jmp add jo sbb test xor sbb mov or and orl push xlat loop add mov add mov add mov sbb lcall mov and rcll rcrb aad jmp mov cs orb scas aad into xor cmp add add sbb pop sahf mov fs rcrb outsl fld test ljmp fcoml mov stos fidivrl call cmp inc test dec fisttp test stc rolb mov pop add stos mov repnz dec mov mov add mov jne ss test inc add es jb icebp or inc jo mov cmc imul sub inc pop xor adc sbb imul cmp ss call cli adc xor and cmpsb sub (bad) mov lcall xchg fwait les aas test xchg sbb pop in sbb push cld pusha mov fdivrl add mov pop adc dec lods leave mov push mov and xchg stc pop push hlt andb movl and inc icebp dec cld adc push cmp mov push or push mov add jg pop aas testl push and rclb xchg or in nop call pop pop (bad) pop add inc cwtl inc enter add lret movsl es xchg stos inc enter sbb stos cld sbb in (bad) push rolb stos sub divl frstor out lret cld jbe fwait add scas xchg mov xchg cmp pop arpl push xchg mov bnd cmp mov loope pop cli push sub sub movsl js xchg sti push add fyl2x (bad) mov sbb jg fldl mov pop jg xor repz stos aas jp xchg imul inc fimull jns mov fptan imul pop imul fsubrl and roll ds add pop cmp cmpsb fcomp rcrl mov pop je (bad) mov sub lea testb sbb xor jo pusha inc inc daa aam add push dec or mov fwait xchg adc mov jge inc mov adc jmp mov mov imul xchg pusha out int3 testb dec stc push (bad) mov add aas pop sahf pop stc mov dec cmpsl enter mov sub subl sti test sbb cmp add ja repz shll xchg fwait dec (bad) clc xchg (bad) cmc dec mov int3 into add inc jne adc sub sub in ja rclb test add imul dec push mov pop pop out and pop nop inc add scas xchg mov adc mov mov inc mov mov inc jle cmc inc adc mov nop and (bad) pop cmpsb shrb mov and push xor or (bad) iret mov popa mov loopne cwtl (bad) sbb xchg xchg test and mov stc repz lret add hlt sbb xchg adc dec adc rolb inc (bad) jmp add jae xchg adc mov ret sub jmp push adc icebp loop sub pushf xlat xchg add xor push lds add inc push sub imulb out leave insl sub pop dec mov adcb clc (bad) sub pusha test jge or int3 enter and dec inc test movsb stos pushf mov inc and xchg je leave (bad) (bad) push xchg sbb add les loopne test mov arpl push lahf cmp nop and bound inc xchg or jns pop cmpsb faddl add push jmp mov cltd cmp jp aam jmp out or mov jp pop enter add lock push ret dec popl and jne xor jo xor rorb rorl xor xor jo push jnp lret out cmpsl scas stc pop das and mov out mov push ss dec enter push add xchg sbb ret loopne add (bad) mov mov jno das adc jg test imulb push cmp scas inc out or add xlat int lret in cltd or dec test test cmc mov adc push cmpsb ds lods pop jbe push out arpl fdivrp roll add push jmp adc add cli xor test in loop dec ss sbb imul testl fucomip imul fsubs lcall int jns ljmp fildl scas dec and jne adc mov xchg add mov cmp lods add adc push add jp fsubr imul jle scas jmp fsubrs arpl enter push lea jmp push adc cmp xchg sub call lcall faddp adcl lock nop stos popa pop push pop cmp mov push mov aad js in jmp jne xorb imul add jmp push pusha in jle xchg arpl je add jbe outsl and pop cld movsb pop ret mov imull mov sahf ja pop jbe adc flds ficom xorb xlat adc scas xor enter in adc mov mov jae scas xor mov fisttp hlt xchg pusha xchg lcall dec into in push add sub (bad) adc in ss jl xchg lret aaa out pushf xchg arpl dec and inc lods push cmp inc push dec mov sub add or test push pop std fwait and or xchg jo in call scas cmc mul bound (bad) icebp jecxz jno push pop (bad) mov adc popf and adc nop sti and and xchg daa negb fistl mov push xchg mov adc (bad) bound pop push add popa arpl inc inc out mov push mov movsl add jge xor pop add adc or mov imul mov icebp inc loope fldl pop push mov insb mov rclb pop clc les inc cld mov jecxz icebp or dec inc and out xchg nop cmp pop les data16 and add rcrb icebp scas popa add jo jno xchg sahf (bad) and (bad) xlat mov clc cwtl in add (bad) mov cmc (bad) push js adc addr16 int push mov pop insb js stc add and gs or add (bad) xchg incb stc sub jno xchg and or bound mov ret rol dec pop call and xchg in xchg je cmp jo dec cmp js jbe add test sub push and dec jno mov push adc pop sbb ss jne jge sti adc rcrl in push push jl bound push mov add push cs xchg adc nop cld (bad) mov dec test pop push jl or cld pusha cmc jb push and out aas xchg ror dec mov mov in sti pop jge,pn jne stos (bad) ret inc fisubr test and repz das push cs and jnp mov pop sub nop outsb jnp add mov hlt test lock add adcl jo push add push push mov sub scas jo xchg int ret sub ljmp xor mov push pop ret mov fistp test mov xor movsb or jb and and pop jo or push insl push cmp jecxz flds dec add and js mull iret pop lods lds push daa mov inc sub outsl lcall lahf adc cmpsl add inc repz lock fs je and mov pop out or xchg pop sbb imul fnsave pop mov mov stos push push pop daa sub loopne and push shrl imul sbb nop xchg jl sub mov adc add movsl int3 movsl aaa add xchg xchg int mov add add fsts cmc mov lods mov push cmc sub cld add mov dec ljmp adc les (bad) in add leave enter ljmp push imul push pop mov pusha mov mov cmp arpl xchg (bad) sub push lods push mov jg mov add inc shr in sti add or mov imul dec push leave div iret sbb sub pop push push (bad) in stos cmp shrb fadd cmpsl outsl cmp cmp push lret push and cmp jnp pop sbb mov loop push push sbb ret test mov jo movb fstl mov repz add mov adc dec xchg mov lcall out mov cltd sbb enter xchg fwait loop cmc sarl arpl sub mov daa dec sub jge adc adc push stc sbb shlb mov mov add mov push fs repz int inc sbb and cmp push jle stc sbbl add jl xchg cmp mov (bad) mov adc test aas mov test sahf pusha mov cmc sbb inc xor xor fidiv xchg cli cwtl push sub sub and jmp dec enter test shlb test fisttp sub aad and ja (bad) into mov in dec cmpsl xor push mov stos mov (bad) into add cwtl fstl push repnz add inc lcall rorb jg ficom (bad) cmp popa mov xchg mov sub jne mov add xlat insl andl pop test ljmp (bad) insb inc xchg cmp testl and push and add in test fcompl mov shrb jno add mov js jle dec test xchg movl icebp cs or mov insl dec fs pusha xchg mov mov cld mov jns push add mov cli inc pop xchg add rolb cmpsb movsl scas push and add push aam push xchg negb adc cwtl fnsave inc std daa andb push pop xchg les int3 push mov push imul adc adc jae adc push sahf and fistp aas jge jnp and push cmp out lock sti or sub mov out jle loope mov pusha xchg jbe les add gs icebp xor rolb (bad) ja bound jg or movsb pop icebp loop jnp (bad) add rcl sub push push enter test imul jecxz adc mov clc push push test movsb pop add pop pop mov inc pop add push push sub lea jno inc jo ja sub mov cwtl shl sub (bad) push sbb push add pop idivl and les push pop rol lret add cmp dec (bad) popf mov push pop jmp jae dec mov xlat je cs aas fimul (bad) (bad) popl cmp lret and or mov add sahf and mov (bad) outsl movsb add bound cld mov pop lods sub adc sub loop add cli and pop mov add (bad) cmp (bad) popf sub add fsubs pop push push mov call sub pop or nop cmp sub jg into sbbb imul icebp sti inc insb xchg pusha push push pop dec pop stos pusha dec ret sub (bad) and inc nop roll jecxz cmp pop or rcll gs rcr shlb in popa xchg ljmp scas stos or jns movsb push pop adc je cld or jno dec ja mov in and call out add mov xchg and hlt das popa stc pop or (bad) or inc xchg stos leave adc pop mov mov xlat les pop nop or (bad) or adc push leave bound shrl push jecxz sub pop push out daa clc nop mov sarb sbb mov dec jmp xchg add pop nop (bad) and adc repz and (bad) fisubrl sub push add add push lds out xor in sub mov jge (bad) mov xor jnp mov xor pop jne fistpll mov or mov rclb mulb ds loope mov or jge lret pop fimull mov cmp mov cwtl mov xor fisubr and pop inc cmp fistl aam ret ret and mov mov dec pop cwtl lret sti aaa xchg aas dec inc ds adc out adc adc mov aaa test add jo cs and aad mov dec cmp inc pusha mov xchg pop xchg repnz adc repz mov mov jae js notl sbb cli outsb cld push pop jg rol sbb mov pop or xchg aad in add adc dec jno imul aad xor and mov xor shlb inc and add jecxz (bad) testl xor jl faddl addr16 pop cmp inc push mov out lods jp jmp add cs repz add push scas outsl addl or mov popa or clc or cwtl or xor aam and or dec icebp popa ja loopne aam (bad) cmp dec call sbb sbbb shrb scas or pop mov aaa out popa mov lea test jb mov sub mov or divb adc repnz lret adc or adc xchg cmp imul repnz in push jns dec fcoms scas pop les pop test dec out (bad) or notl mov pusha sub push sbb push inc orb inc add rclb jbe,pn rorl mov sub jp push ss (bad) and xchg and push add cmp or imul icebp loop sub or jle bound aas xor (bad) loopne add es pusha mov gs mov xchg sub jae popa imul add push sub insl cmp or (bad) repz sbb jno aam dec sbbb sbb mov push iret or pushf (bad) cmpsb mov scas cmp mov incb push jae mov mov and xchg ficomp inc fldl std outsb fimull and cmp jnp mov cmp dec mov pop out (bad) clc mov dec pop enter ss cmc loope jnp jbe push pop shr into (bad) pop imul lret xchg push cwtl sub (bad) popa xchg add or mov jl xchg sbb or mov jg mov push mov pusha subl add push mov dec shrb nop (bad) mov adc jmp mov ret inc and pop out cmp jns bnd push mov or add xchg cmp lods lahf loopne (bad) add add adc and scas jg or lahf out sbb mov mov and xor mov popf cmp push in gs rol stos outsb addl bound jl dec push inc sarl sub ret inc jmp mov pop scas pop mov insl jle inc adc stos xor movsl pop pop aam sbb aam push bound loope sub mov sub fisub push or call sbb loope je scas mov scas dec mov pusha dec mov xor mov dec (bad) or scas jb movsb xchg cld shrl mov sub lret out mov and cmp in cmp mov mov ljmp gs xchg or mov je mov stos notl push jo pushf add pop lahf mov rcrl and mov dec testb xor add or pop jecxz imul and dec fcoms lods cmp adc lret loope xchg push scas sahf imul xor dec xchg (bad) pusha test addr16 or dec popf in sti les and scas mov push mov inc add jnp add hlt lahf cmp jo add loop pop loopne add inc xor xchg (bad) xor and add sbb dec jne pop pop (bad) and mov xchg int fs sbb flds sub mov imul pop and mov add rcll aaa test or inc pop cmpsl push mov sbb repnz dec imul push (bad) cmpsl test add clc mov mov xchg push fdiv xchg jae cmpsb ret sub ss add or rclb mov mul loopne aam add (bad) push popa mov rorb xlat sbb cmpsl or adc fisttpll jns cmc ljmp out adc push pop call add sub mov and mov jb jnp js push (bad) dec out dec add and cli in ds cmp mov xor jp (bad) int addl mov pop push push adc pop pop jmp xchg push add mov sbb mov incl rcrb lahf (bad) pop mov add pop push mov repnz push sbb in scas adc jp jnp cld lds push sbb push mov call mov lods dec je mulps lds (bad) stos mulb jmp decb dec (bad) in sub out inc shl movsl daa push xlat dec cwtl aas mov add in aas or dec push mov push mov or sub iret push inc sub add adc cmpsb or jmp cmc xlat sbb stc jmp mov sub arpl jecxz pop ret lock (bad) lea fsubrp xor (bad) xchg mov (bad) rolb ret je loop push (bad) jg or push inc hlt sub movsb sub jge push push mov xorl xchg in mov jg (bad) sub mov add push negl sub leave ljmp ret or xor jp jnp mov dec xor pop add enter add aaa sub cli xchg test pop roll add inc cmpsl insb push and add mov add add push add cmpl fbstp lods jmp in inc ret jecxz pop test fwait jmp push enter adc lret jmp mov and mov mov insl push xchg ret or xchg iret push pusha xchg push pop jmp cli pushf mov cmp cmp jbe add aad add xlat inc mov push rorb repz inc dec pop ljmp push adc adc sbb (bad) push push pop lds xor daa out mov xchg sub movsl pop dec sarb dec stos pushf adc cmpsb or ficompl stc mov pop (bad) fscale jo and jns dec pop mov mov aas push dec cmpsl push or fdivrs inc push add movsb sahf aam inc sub out mov lahf cli fisubr cmp mov pop daa add fist cli jge mov in bound add xor ja sbb pop sub mov (bad) mov inc aad cltd jmp (bad) sub aad adc jmp push sub out nop ljmp dec add pop push jmp pusha mov jle shl xor (bad) aad or std sbb inc in nop mov dec xchg pop dec xchg aas pop sub pop (bad) mov xorb gs pop test jbe pop and and lahf adc les cli sub shrb pusha cmc out lahf fdiv push dec pop imul scas pop ds cmpsb pop push movsl loopne and jle cmp mov jp arpl adc push xchg outsl nop jmp inc cld fsubs push or scas sub ret pusha or jmp xlat pop xchg divl lds aad rcrb (bad) xlat or mov fstpt out xchg ja mov repz icebp sbb fildll jg fmuls sub or add (bad) leave (bad) or stc pushf adc mov push mov jp lock mov mov sbb loop popa sub push add cld jmp push andb mov dec jmp and mov push sub dec cmp jae sub cmc jno popl push add paddw fstpt addl stos jns hlt or inc push ret ljmp or mov out xchg sbbl xchg repz mov cwtl fs rcr add ret ja aas loop mov jmp mov mov aas jg add dec and jnp add data16 add dec add arpl add mov and mov mov or lahf mov sub and les xchg outsl pop or xor push js add rcrl shr cli shll sub push pop inc fstps std js sub adc in pop fidiv sbbl jmp push addr16 add pop in push jbe inc es dec mov adc xchg ja xor push lods lahf fsubl rorb scas lcall jmp subl clc and sub xlat dec push push repz mov enter sub mov outsb pop mov js push fstps into pop cmp sti movsl mov out inc and rcl repnz inc or ljmp ja adc push cmc jo cld addl outsl nop xor jg andb stc and fwait sbb xor cmpsb aam iret popa and ret push sub mov rcll adc ja push stos jb mov mov aaa mov xor stc aad fs or sarb cs fldl imul push in mov dec push pop sub push and cmp ficoml push les fnsave cltd jnp loope pop sub aad add cli in jo cltd mov jp add pop pop or loopne das je push sahf out mov cli aaa sub leave push add mov mov enter inc js mov jmp popf add stc mov or xchg jmp pop sbb pop mov adc jmp loopne sub in jle add pop push and cmp xor add (bad) ja hlt mov xchg inc push pusha xchg dec push stc adc fstl inc push loop (bad) dec pop pop inc mov icebp std pop sub je,pn or pop test jmp sarl mov xchg xor pushw aam ja arpl data16 push (bad) hlt sub push inc jne jns pop xchg add scas mov and jno clc or dec out adc icebp jmp xor stc jg fldl sbbl sbb push cmp ret bound add (bad) bound idivl (bad) and mov xor fs or lea xchg mov insb cmpsb mov push sbb mov mov jmp add mov jg insl push sarl and shrl in and or loope (bad) in adc pop xchg add dec or (bad) adc fimul clc xor pop or movsb dec or mov rcr mov sub and xchg nop pop xchg jge jg xchg test or rcrl or adc and ja test add cmp enter pop sbb push nop lods push cmp or add into sti ds adc pop (bad) hlt adc dec (bad) jmp (bad) push mov int3 ljmp sub aaa push daa sbb mov rorb cmp xchg stos jp mov out inc dec inc push push jge shl add decb sti sub pop aas push pop std je (bad) jmp divb inc jb movsb xchg add jp adc ljmp ffree cmp mov pop inc mov test sbb push repz fdivp push shlb movhps cmp push dec je add aad nop enter ret add or sub aas push xor in loope lock nop lods shrb dec out in mov push pop push push mov jg rcll nop lret dec cmp movsb cmpsb add out jg shlb mov adc lret cltd adc cmovns aas or cmpl or push sbb pop sub pop pop push or fisubrl popf push xchg scas inc mov inc pop (bad) ret loopne mov mov sub negl jl jae pop jp mov or push in sahf or lds push sub pusha xchg mov add push jb add or add xor push call add aas in inc out int3 sub xor pop repz push pop sub test add in sub rclb incb xor loop,pt ffree mov test in pushf mov (bad) and jge and scas in or popa mov imul mov push dec jecxz addl jnp setge dec test rcrb mov add divl pop test sub fdiv add scas push pushf and cld add dec cmp jno movsl add in ja mov add rclb das loopne xor cmp jp pop jae loopne in jno cs push mov adc lsl test dec jmp mov sbb jno pop in lods (bad) pop data16 cmp arpl pop test rep or and mov xchg fdivs pop cli pop cmp sub xchg mov mov enter (bad) in mov lcall clc loopne test add dec stos call or ds mov mov or repz push jg shrl or push ja enter mov pop jne rclb pop lock fadds lods cmovnp mov popa imul cwtl mov mov mov add in push out sbb fdivs scas and push pop and add js xor pushf mov xchg add xchg mov jnp xor cwtl jae adc xor mov xchg sbbl mov push push lahf adc xchg jns xor rcl iret out or xchg push frstor add adc mov add inc loope xchg mov mov loopne add mov add gs hlt andl in cmpsb inc imul xor insl jb push xor std stos (bad) jae inc mov ret (bad) call inc push popa jg outsb mov mov xchg jmp icebp cwtl data16 arpl fistp nop xor dec and (bad) adc stos mov bound (bad) sub into fisttpll xchg (bad) mov dec loopne stc add test sbb enter pop pusha lea iret jno test add dec ror sbb (bad) mov (bad) xchg jg sub mov jb dec mov adc je popa sub popa mov or mov mov add rcr fnstsw push xlat mov in cltd mov es push cmpsl fwait popf sub js iret movsb addb push cmp in adc add or aam pop add xchg mov divl sbb movsl add lcall push add clc cmp jne jg in add (bad) js adc add cwtl adc arpl pushf sub fsubl or mov cwtl fbstp mov gs clc mov aad adc sub or cmpsl mov ret adc jmp mov aad cmp cmp popf adc xchg cwtd mov out outsb test mov push or or enter push pop or popf sbb xor xor and mov stc ss sub pusha test imul fmuls in sbb iret aad addl sahf adc test add mov loop add es inc pop pusha cmp add nop enter and add mov mov in (bad) xor call mov mov push fwait push daa popa repz push aam push sbb (bad) sahf and lock out sbb xchg in ret and cmp cmpsb pop (bad) adc xor decb nop fisubrl or int add popa lahf pop (bad) jb gs cmp les jbe hlt push popa cwtl add (bad) cwtl sub push sbb in adc jae xor pusha xor jle nop js and push je adc mov mov and add addr16 sub sub js rclb push mov in pop mov and sbb mov imul dec insb xor rcll mov adc (bad) mov inc sbb xor add mov cmpsb jne int mov cli xchg cmp mov add (bad) (bad) mov mov sbb in adc cmp into add data16 out pusha out inc ds add repnz cmp or and addr16 das lods js (bad) int (bad) mov stc xor subb push push aas add out push xor cmc mov rclb into add loopne aad mov inc xor pop xchg out sbb (bad) popa inc lcall ror add ret pop orl push (bad) decl pusha hlt add das int shrb loopne add cmp add push or mov fsubs rorb mov pop js mov rolb mov xchg jno clc cmpsb add cmp ljmp pop mov add mov out mov and xchg inc push or pusha dec fwait sbb or push lods pop aad test pop jno xchg mov push jo add xor jns cmp shrb insl jbe outsl sar ret add jb mov xchg or cmpsb pushf add movl cwtl cmc and inc call adc add mov adc push aad add push and movsb adc call pusha pop mov cmp rcl lods addr16 test xchg icebp add or push movsl xchg sub nop nop inc xlat es movsb lock push rcr or mov clc add imul pusha mov sub jle and push add adc cmp lcall add or fnstcw movsb jecxz fist pop dec add and outsb cmp sub fistp pusha repz rclb sub mov pop sbb pusha jmpw popf and push push dec dec testb pusha mov arpl movsb pop xor push xor mov mov or call call add add (bad) or adc xchg int sbbb call inc cwtl push ds and dec cmpb xchg add cmp push mov negb mov adc or xlat push lds in enter jo je js fimul sbb push fwait (bad) imull and bswap push pusha jmp and adcb data16 or nop cmpsb rorb add out test cltd cwtl sub dec cmp push pop jg inc out mov push clc fadd sahf inc (bad) aad and xchg or je dec xor pushf cmp adc inc mov je sarb inc cmp add dec rcrl push add repnz shlb jp sub inc xor sub jae add push mov movsb mov and jg test sub pop ret pusha out test or clc push push mov adc pop add sbb jno loopne jmp cs pop pop push test loopne lgs pusha sub push imul rorb jne fild call or mov xor jae pop add and testl mov pop test or mov pop and mov pop std nop jl mov push sbb rcrb imul xor pusha cmp clc inc dec je xchg adc add and sub xchg int3 stc les aam dec call sahf sub test adc push add out add sbb xor cmp test adc pop push cmp or inc xor aas cmp (bad) in shll or sarb fiadd xchg jp or adc add in les stc (bad) je cmp fmul inc clc xor lock ret ficoml cwtl add inc or int sbb jno in xor add pushf jbe push mov push inc inc cs push subl enter xchg jle sub adc sub rolb push pop sub addr16 or clc jae adcb add mov cmpb frstor fs pop adc das clc fldl2e stc jecxz sbbb pusha and cmpsl insl hlt cmp xor out pop mov cmp push test cwtl pop cmp sbb jb sbb mov push mov stc sbb pusha pop push jb or push repnz sbb push or mov pushf dec call or sahf leave add xor nop mov sbb xchg pop add cmp mov aam negb scas xor mov or and test and shrb xor sarl gs insb add push mov mov pop pop (bad) add stc nop xor mov call ret prefetch add or (bad) jne xor inc les fsts sbb sub ja sub rcrl sbbb mov and add cmp and (bad) fdivp or adc or sbb dec ret jmp test movsl mov jmp pusha aam jmp jge push mov js push iret lcall dec aaa clc pop add jg adc push mov icebp pop push pop inc mov push data16 pusha sbb loop jo imul sbb push xchg data16 xor fwait sub add sbb sarb xchg test mov (bad) mov add lret sub sub jno cwtl ret lcall cltd or int3 cwtl mov stos jo lock inc sub mov add jle sub add dec (bad) loop mov add pop mov push add out in loopne icebp add lds push stc fcmovne out and aam inc inc add cwtl pop enter sub popf cld inc call sbb imul clc call std adc adc xor and rorl mov sub popf bswap add add je,pt adc gs dec outsb dec mov int out loopne lret in cwtl add push sub (bad) add cwtl cmp stos add negb push lock ficompl icebp hlt add push inc mov leave std xlat pop jl mov call roll push pusha mov mov push adc mov dec adc adc adcl mov dec into movsb xchg xor nop sub loopne xor adc jb push add jp sbb js push ror into jne xchg sub push dec std pop fildll dec (bad) cmp adc scas mov cmp dec in stc cmpsl cmp add adc adc loopne jmp or cwtl out adc push add and or xor adc add mov adc inc adc push pop mov (bad) nop nop pushf (bad) divb aam push add rcl dec loopne pop orb insl pusha push push pushf push pop (bad) adc ja movsb add push mov add loopne mov and or fsubl cwtl mov mov sbb int sbb popa sub mov call loopne mov fstpt test jne sub add push stos inc or cmp add and mov inc xchg xorl mov mov dec mov cwtl sbb and lea mov nop loopne mov iret loopne cld inc push mov movsl pop adcb int in sub xchg test jbe movsb mov mov ficoml inc sbb mov mov cs in das (bad) in and pop pushf rolb sub movsb rolb push sbb clc adc nop add adc shl pop sbb cwtl sub repnz push sbb mov imul push mov cmpsl and xor pop inc inc and add mov mov and add jnp add scas cli mov std mov xor cmpsb cmc jbe and sbb int xchg xorb sub pop pop xor inc and jne xchg and add loop mov sbb int fild and sbb outsb pop inc aad push cmp fnop dec xchg dec cmp testl jbe pusha lahf sbb xchg pop jmp inc lea xchg add mov in imul (bad) cmpsl outsl pop xchg cli repnz cmp aaa inc push add mov pop adcb out (bad) sbb or sbb lock out nop mov mov js test adc lods out push sbb cmpb xchg add cli pop mull or je cmpsl (bad) cmp and lock cmpsl xchg mov and or cmp adc test dec or (bad) shrl and popl and sub aas add sbb xor jp inc adc (bad) xor adcl cld leave xchg inc movsb mov cmp cld sbb pop add rcrb xor mov mov sub pop push ret mov fadds push movsb dec cld and pop add test and push mov outsb and dec mov das inc mov mov sti ja insb sub sbb add jle mov xor and fldenv sarb lods mov fwait stc stc xorb pxor sbb add bound sub aas call (bad) mov ss insb mov lahf inc movsb ret popf fcmovu or outsb aad add ljmp inc inc addr16 scas mov add jne test fnsave out add sbb pushf test cld jle inc out sub mov dec add cwtl xlat jecxz mov or enter xchg push sub out cmpsb ds fsubrs and (bad) fisttpl add test sub push sub jno mov jge add and std (bad) call inc or adc fildll dec les ficom add cs cwtl outsl xor mov orb add jno pop add jecxz or (bad) mov mov aas fs lcall movsb add fldt insl ror jl mov fild push popf (bad) cmp sub outsl mov mov add cmp sar loopne scas mov sldt sbb (bad) hlt sub ljmp sbb shrb repnz push add nop rcrl xchg adc outsl pop je add mov fdivrl push shl pop mov cs jno js clc jge adc adc sbb orb cmp add jle adc xor movsb sbb outsl pop pop imul pop add jo mov test outsl (bad) and jge sub loop scas add inc mov ret shrl and pop clc cmp scas lcall fcomp add ss sbb pop outsl out ret mov adc sbb and nop cmpb xor pop movsb popa push mov outsl pusha xorb cmp movsb mov insb cmc add xor (bad) call js loop outsb and xchg test mov jbe popa push mov clc outsl das cltd push pushf and cmp inc add inc xchg inc xor imull in hlt adc mov in clc mov sbb inc pushf xchg out pop cmp lods mul jl cmpsb test push add mov outsl arpl clc dec sbb outsl mov sbb pop loop inc mov cmp mov jmp pop fdivrl sbb add arpl mov in xor icebp scas inc shrb (bad) jl int pop sbb fs mov xor ss inc lcall in cld adcb jae xchg nop sbb testl inc jge pop fmulp push les jp add adc (bad) dec add xor lret outsl pop lcall mov xor add and andl lcall xchg add aad les test lcall fimull jno dec or jg push add inc xor push or cwtl inc dec test push sbbb lahf push xchg and jl mov inc std jae cmp pop jo cmp stos shl or jg loop pop xchg mov add xor adcb jnp push mov cmp add sbbb fdivs hlt movsl lods jge add movaps and pushf jnp sub xor sbb and xor add inc inc repz enter mov imul mov mov in jnp loopne xchg sbb fcoms jmp ret subl jmp jle popa fmuls cmp dec add fcomps add lret hlt mov lds nop add mov cmp inc inc push mov rcl int3 dec insl enter cs adc popa xchg pushf pop add test pop add arpl ds outsl (bad) or adc rclb add in cmp push pop (bad) dec sub inc cmp mov cli xlat push jg (bad) mov jnp mov pusha dec jns cmpsb adcb cwtl rcl jne clc mov ret out mov scas cmc jb mov adc rolb cmp and mov cltd imul dec jno xchg movsb dec popa clc out pushf movsl and jo pop inc add push sbb mov cmp orb inc rdtsc push fisubr mov pop push dec sbb cs insb fmull or arpl jne pop adc pop mov jl jmp mov jns cli or prefetchw and mov lcall mov in jge push popa fs lods push add add test mov push xor inc xchg mov add leave jl ror mul mov enter push adc or (bad) jmp or repnz lea jo nop ja sbb or dec inc pushf add outsl mov jge aad jo incl mov popf or je lods or test sub jne mov add and push adc sbb movsl adc les fs jae or and daa shlb aas jmp addl pop aas stc mov or sarb mov and sub lret loop mov cmp fnsave cmp sub mov mov orb gs jno dec jns add jg nop inc ss nop pop dec mov push mov lret ret xor and cld aam mov push aaa aad lds add popf mov das mov lock dec lret adcl jnp add jle sarb dec test mov dec insb fsubrs sbbl fadd bound jnp jns iret sbb cwtl cld add out (bad) dec adc dec cmp das jmp xor sbb mov mov xadd call dec inc and mov ret aam movsb sbb sub cmp mov ror mov das sub inc adc cld lret or pushf aas xchg test adc fdiv xchg cmp push and add outsl or push sbb rclb inc cmc pop cmp or jne and aad pop dec cmpsl addr16 pop movsb in push ja add test mov mov cwtl hlt pop jne add adc (bad) insb lcall js cli aam (bad) lods and movsb inc imul cmp add stc jnp push mov inc lods xchg adc pop mov ja mov jp and ret sub pop sub ror add outsl fdivs cs jno xor sbb adc cltd leave xchg or mov aas push cwtl (bad) pop out xchg pop push (bad) dec inc imul dec into add rcll cmc in jae add dec les sub push add lods aad mov push push add push fbstp xor (bad) cmc and mov cli jle dec test xchg cmp in cmc or mov js pushf add xchg stos iret mov xchg loopne push imul push mov sti inc mov sbb cld mov repz fdivl addb aad fsubs add add and dec sub mov mov inc mov (bad) jb popa push jmp mov int rolb jbe outsl jae pop rclb pushf enter call jge jae mov test nop subb pop call lock pushf push mov or loop sbb adc outsl rcr adc outsb cmp ljmp add xor xchg mov stos xchg in fadds push inc inc pop pop inc xchg mov add ret xor cmpb aad leave add arpl scas jnp stc adcb push and and dec mov aam mov and shrb push add pop pop cmp stos inc add popf lea and add popa or sub inc xor sbb sarb test inc sbb cmp mov movsb mov jecxz pushl loopne fdivs and js adc push addb sbb imul push mov clc popf mov cwtl nop push lret out std sbb mov outsl pop and add mov jmp mov mov push add jb in sub stos inc addr16 mov nop imul and cli push dec insb fbld and mov add jp xlat mov sbbb fs xor cmp test jo cli arpl and pusha mov cmovb cwtl aaa inc cmp jmp cltd inc fadds xchg ljmp mov pop dec dec test js pop mov daa pop and adcl ret add ljmp inc lret aad cmpb add jge pushf pop je or mov inc icebp pop aad fs dec scas mov add stos cmp lods hlt test call sbb (bad) ds sub or cmp sub mov (bad) push lcall adc cmpsl push sub popa jo inc mov inc push mov scas xor jg pop pop cld push jge pop je sub xor push shl outsl cmp mov and (bad) lods (bad) insb push jge jb sbb call dec (bad) bnd inc or mov out jecxz dec imul rcl mov add cmp jnp mov pushf leave hlt (bad) mov or xchg xor and xchg and sub or in (bad) (bad) fisubl scas jo cmp push mov pushf jl inc lds rclb mov arpl lret aaa cmp insb and fmulp ds jg pop insb les jecxz add pop addr16 hlt push mov mov dec cmc lock inc dec sets mov adc incb add add aas sbb sbb mov fiadd pop and cmp push add mov inc jecxz popa imul inc nop (bad) xor es push mov outsl subb nop sub arpl loopne hlt sbb push cmovo pop (bad) mov dec inc icebp sbb sar add and pop or add dec mov pop inc push sbb cmpb mov clc (bad) lret or mov nop in (bad) shr fisub lret je aaa (bad) fld add aas call mov mov loop je pop mov jl cmp lods dec sbbl insb mov jo xor add fldl xor js push ret adc xor xchg xor or andb ja inc ds dec movsl push iret mov xor push sbb out add push test push push rclb jge int3 dec mov cmp cmp bound sahf push pop addr16 pusha cmc and push subb rcr test aad hlt loope mov pop out aas subl jbe lds dec add sub push hlt cmp enter add cmp add les mov jp inc xchg pop sub jb sti aad xchg mov cmovg push mov shrl and add sti scas push adc push add sbb push js push std sub adc xor (bad) xchg add xchg mov dec (bad) xor push adc sbb inc and imul inc fs cltd dec xor cwtl adcl add cld pushf fdivrl pop or inc adc fwait mov push push pop add cmpsb out mov mov fstp cli push leave (bad) call dec scas mov icebp xchg mov rorl mov (bad) (bad) adc mov and adc imul nop cmp add mov pop jo jp jae add pop push push (bad) jg (bad) hlt pusha aas in nop roll loope ljmp lea jo cmc jbe mov pop ret fadds icebp lock sbb inc lcall and inc ljmp sti cmp popl push mov pop mov mov add pop (bad) mov and test mov outsl pop or repnz xchg dec notl or icebp dec and add cmp out lret stc xchg adc pop mov push shrb aas xchg inc mov add fbstp shlb dec test (bad) fwait das arpl cmp outsb and mov scas mov sbb pushf mov into cli cmpsl mov sbb (bad) and popa pusha cmp cmp pusha xlat adc inc fbstp mov mov sub imul jle push push xor push xchg (bad) or sub cwtl lods push lea addr16 icebp cmp movsl scas popa add add xchg or movsb cmp subb pop push lds daa and or jg ret mov add notl inc rcrl inc dec stos stc mov iret adc adc in jns in aam jns jg add xor (bad) jo xchg push ss dec cmp es push sbb mov pop (bad) sub mov imul xor add frstor dec or mov enter fistl pusha pop js push ljmp ja aad mov addr16 or das mov xorb enter and push jae or cmp sbb (bad) pop das jle mov cli nop enter popf sub test xor sub repz mov jne in outsl xchg insb add sbb mov ficom out push push repnz dec mulb cmp cs jno,pt and jle push pop lcall fs push push mov mov pop fistp sub jge adcb add push mov and into mov (bad) ljmp add pop pop mov loop sub loope rorl popa int add adc test add aaa out mov add lcall jecxz int sbb test mov je xor sbb push mov or add xchg sub or xor add cmpsl ss mov push sti test cltd dec add fisttp cmp and push sbb aam ret addr16 add test or push (bad) or inc dec dec xor insb add sbb (bad) popa or les and sub fs lds and add inc test sbbb ljmp adc dec popa call stc out and lds sbb arpl bound inc fbstp mov dec adc jl sbb or inc xchg add adc xor test push sub pshufw pushf scas mov insl and add cmp add adc lret mov pop xor push dec arpl dec sub stc mov scas inc xor dec lcall ds icebp out dec inc test inc mov es loop cmp fbstp repnz sbb mov lock in test mov or test xor mov adc dec test add mov cwtl or jle push cld (bad) push add movb loop cld in pusha xor add push inc mov pop dec stc mov fwait xor mov xchg pusha and and cmc sbb mov pop push pop add cli jmp mov lock loope xor xchg aaa pop sbb sub add mov jne and mov pusha cmpsl xorb dec mov lock pop and mov mov dec add rcr push rcrl mov add lahf loop aad cld mov mov test pusha shrb push inc sbb cmpsb enter pop fild idivl hlt mov cld adc imul clc xor push push test addr16 (bad) in int3 loopne mov dec and add mov sbb and popf pop add mov push adc in outsl mov and xchg add fsts (bad) mov test imul and jnp adc xorb mov add out add fnstsw test mov and push dec pop add rclb jge push insb add dec fst xor icebp add cld sbb mov add inc clc sbbl mov bound pop ljmp mov xchg js adc dec (bad) mov mov dec test push pusha or cmpl sub xor test aad fsubl cmp push fidivr sbb fmull ds sti add daa (bad) ret loop xor sahf aaa jl mov mov inc add clc les cmp jge add cmp add sub add fdiv sahf mov xchg aam stc popa loopne pop cmc jle add insb add dec inc cmp enter jg add dec pusha std adc out push cli jne add xchg es mov and fstl inc mov out push push sbb adc (bad) pop fsubl push iret movsl fs mov lock add mov jo jl mov sub inc aaa lret push add pop jecxz mov loop xchg int3 pop rclb dec adc sbb repz dec mov pusha push aad dec shrb dec add sub fsubl es jmp in add adc shr je bound andb pop mov stc jecxz add pop data16 cmc mov jl add push add cwtl push jmp sub mov ret push add jl fnsave xchg xor sbb sub push jns mov rcr xchg dec aad push or or xchg sub add lahf or loop ds lcall dec fisttp add aad or stos pusha mov mov xor pop pop insb test nop in inc bound jp and push in add dec mov push inc imul in scas int3 jmp sbb lret mov adc shrb cmp pop xor add xchg sbb add cwtl dec mov add lahf sub enter inc jge sbb js outsb aad std ror add mov int3 add xchg dec test jle ficom dec xchg lock dec mov adc test xchg (bad) pushf in daa dec fdivrl jp cli push out (bad) adc mov and (bad) movaps jle bound clc fmuls cld add clts (bad) mov js adc pushf xchg mov dec stos lcall cmp push test mov mov adc add clc pop sbb call cmpsl popa sbb dec add add pop ljmp mov vpabsb dec pop and xchg mov enter add xchg sbb inc arpl add lock outsl mov enter cmp push mov dec pushf push pusha es or leave add dec xor cld xchg jae pop cld enter or cmpsb pop or ja xor sub jle adc pushf jnp cmp push sbb add mov out xor pop mov jge and and jp xchg dec std adc add adc inc loop fnstenv or loopne inc dec (bad) dec ret or inc incl xor clc add cmp mov hlt (bad) or in clc add or sti inc out js pop mov enter inc or bound movsb idivb ss add sahf mov and push pushf add add lds add out dec push aad add (bad) int or call jo nop aam loope adc ds mov mov add hlt clc push popf fisubl jnp and xor and jle hlt adc mov xor sbbb xorb (bad) loope aam faddl bound lcall clc hlt fxch inc cwtl dec add push jl push lock rolb cmp (bad) mov dec mov mov lods dec test sbbl lea aad nop add sbb cmp jge loop or add pop add dec fwait sbb enter es mov inc insb push cmp rcll adc cmp mov es xchg cmpsb mov add cltd cli and or aam adcb nop flds dec dec and dec mov cmpsb pop mov add xchg adc adc nop xor jno push je lcall cmpsb mov add into xchg pop add jns mov sbbl mov cli mov mov adc loop add bound sar inc lcall jns mov daa andl (bad) aas xchg shrb lods loopne pop add test iret nop mov inc and test xchg inc imul cmp and pop xor enter stos cmp out and test push rcl (bad) and shl or push add jg dec or push lahf or or scas cmpsl (bad) and out adc xchg lock and cltd push fsubrs cmp enter sti add push mov push notl out es or jge xchg sub lar adcb xor cmpsb test cmp mov lahf jge dec mov ds es push sub jecxz sbb fs xor jns add add cmp gs int3 mov cmpb inc adc test xchg movsl add mov add shrl and and push bt inc sub pop mov jne scas or push adc push imull mov sbb xlat clc add sahf (bad) jne popf pusha mov (bad) mov adc lcall out add insl cli sbb and sub rcrl sub aad xlat sarb cmp testb add mov mov jne insb stc mov add sbb dec mov mov fnsave stc loope cmp andl adc mov lds int pop and push es fsubs inc xchg mov test fdivrs cmp jle je mov cld popa adc lahf pushf sti mov mov adc push fsubl cmp das insl out pop jmp jp add push push inc cmp mov mov add rolb lock add cmp outsl xlat and dec rolb xchg lret dec mov push mov or dec cmp pop mov cs sub mov or mov lds pop or lahf insl popa mov inc adc xor aad adc dec data16 mov insb cld gs push int3 pop mov lcall cmp sbb loop ja mov sbb lahf mov xchg mov mov or scas push xchg hlt addb jl iret sub scas cmp mov mov sahf dec adc nop sbb or mov xchg xchg xchg xchg mov pop mov outsb cmp gs inc mov push cmp pop clc add mov xchg xchg mov add gs mov into xlat adc sar notb shrb lret enter inc jge jl comiss xor into fwait shlb xchg add push and jo mov and add pop lret add out sbb jge cli subb inc std test adc imul jnp cld (bad) jmp add push mov or add in adc mov inc inc push add add dec clc sti mov xchg pop xor sub aaa dec mov push pushf lock insb jmp repz nop xor cmp mov adc push pop or cmpb gs scas add fs popf xlat fwait xchg lea outsl loop xchg in adc sarl out cmpsb cmp or aam pushf jmp or rclb or hlt xchg adc add push sub into fstpt (bad) inc jp xchg loopne cmc xchg js rorb pop mov pop jns in lret sbb adc push sti arpl pop add cli shlb js in xlat sub mov push jo sahf dec das (bad) xor sub rcrb add dec test es adc adc mov loop pusha jl jns pop scas add hlt (bad) das cli mov mov push or gs xor cmp cld jge mov bound subl add push aam les pusha pusha lret dec stos xor adcl jg cmp daa add stc and add mov pop xor js mov adc mov dec cld inc es ret sub (bad) imul lock ret movq lea aad out xlat push mov or xor js mov or ret push jne add shrl test orb sub (bad) (bad) xor push fs push mov pop into ds and (bad) mov push roll mov add loop les clc insl lea sbb xor out aam and add push inc push cmp lds cmp inc es pushf adc sub adc or add mov jnp sbb lret jl fsubs js jnp rcll or adc adc mov mov push xor mov out jl cld lock dec notl loop and add mov daa jl pop rolb ret add push lldt and daa add dec loopne or out (bad) jnp sbb jg xlat pop pop or fbstp cmp mov rolb xor sub mov pop push lret push mov mov (bad) pusha jl push cmp stc ss mov dec js iret sbb icebp roll sbb lods push sbb (bad) push add xlat adc aad lds sbb bound and nop mov sub leave dec mov mov jecxz into adc addb imul or fwait lds pop es fistpl cmovo stos xor cmp mov add dec (bad) xor cmpsl jb scas sbb dec fwait push and push lahf test push icebp aaa xor or mov add addr16 cld mov mov and fist sub cmp adc dec fidiv (bad) jno jmp or jecxz es mov pop inc mov popa add loop rcrl add ja,pn outsb (bad) repnz push dec mov lock inc lcall cmp pop notb inc (bad) je xor mov push push adc or rorb inc sbb mov mov adc or stc dec notb jg rorb mov rorb test popa mov les dec pushf jg hlt xor mov push adc and dec inc and xor pusha popf js test out lahf jae jo loope mulb pushf pusha ret or fcomi push dec int3 lds pop push mov jns je (bad) fbld mov ljmp (bad) or pop dec outsb and push test pop cmpsb add mov dec leave sub mov fucomp jp jns (bad) in rorl or or inc pop pop adc mov and in adc add rcll xor inc cwtl cmp add xchg add das shrl call into js add adc dec int clc ret adc adc fs into mov aaa inc mov inc subb roll frstor rolb (bad) xor or or sub xor lods cmp call test test loope loopne hlt add xor imul xor fs mov add faddl mov pop call in push mov or sub outsb shl cmpsl inc mov mov cltd mov inc push (bad) fsub sbb out movsb scas aam scas jmp outsb and (bad) inc hlt xchg inc jns in data16 push es mov addb dec adc add inc adcl sbb (bad) inc out movl cmp xor xchg sub fdivrs cmp xchg stc fcmovnu pusha inc mov add leave test mov outsb add shrl add iret cltd add adc sbb pop sub mov loope,pt add call cmpsb jecxz lock pop add ljmp (bad) push out push loop inc lods int insb xchg push push sbb cmpsb or or inc add bound icebp pop mov iret dec pop clc fdivrl push rorl (bad) pusha push rcr iret bound mov mov js mov or mov jae ds out dec fistp pusha dec pop loop jge cld pop hlt (bad) mov fwait enter pop mov jle repz imul add jne (bad) jnp ja jne add jno lahf dec mov es adc pop or pop cli adc fs fs pop mov inc and mov pop xlat adc mov mov inc subl pop jecxz popf xlat movsb mov clc mov sub test sbb adc xchg hlt aas rcrb mov add (bad) lods or fadd sub shlb shrb in inc xchg xchg adc lret sub xchg xor push fsubs mov adc jmp and xchg push orb fiaddl mov adc cmpb js lds jae add stc adc pusha addl aaa nop std cs add enter sbb pop cld movsl cmp movsb pushf sub movsb mov and imul sbb jge and inc sbb xlat in insb pusha addb inc pop add jmp push imul add loope cwtl sub jle mov sub popl inc push adc aaa sub jae test sbb or add aad sub movsl mov xchg mov pop mov pusha call cwtl mov mov sbb xor dec pop pusha ds xor add xor ljmp add rclb in cld adcl std mov inc or add inc jg push dec andl sub rolb inc push scas or or jno cld mov xchg sub bound movsb mov inc sub cli pop test inc add jno push fiadd mov std orl loop xorb mov stos adcb ss stc rolb adc add jmp mov jns hlt ljmp call mov adc in cwtl mov or jns roll pop push cmp sub xchg mov or add cmp lret mov fs jbe jne ds movsb pop lret lret push push in fldl (bad) dec leave push push dec pop mov add bound clc leave push pusha les loop mull insb adc xchg cmp in add rcr add xchg lds mov loope xchg sbb arpl cmp xchg shlb jne sbb pusha push pop fbld and jb adc lock pop xchg xorl sub push loope test rcr push in test sbbb add rcrb aam inc add inc cmp mov movsb pop jno pushf pop ret pop hlt leave mov subl add test xlat push mov push dec loopne xor mov mov cmpsl jno inc subb or ss adc lret mov dec loopne add and xor dec xor mov cmpsl mov mov lods xor and out cmpsb rcrb and aad add mov (bad) and addb inc scas and sbb push (bad) pop pop lret in and mov (bad) test mov inc aaa icebp clc adc inc (bad) nop jo leave mov xchg adc bt push test pop add cwtl dec sub add scas orps movsb adc xchg in mov andb and js add pop push or cmp cmpsl clc or rcrl cltd lock lret lahf inc (bad) pushf sahf mov les pop fiadd push mov jo int3 pop push mov ds lahf mov xchg xchg and jecxz jmp dec lock pop adc stc into sub clc xor or enter adc mov adc sbb add xchg mov (bad) mov leave ficomp adc in mov sbb dec mov pop xor mov (bad) push jb xor test je out jl adc or inc fdivrs das pop mov and cld fild jmp clc pop xchg clc lods shlb push lds sbb incb arpl sbb and dec mov adc push orb pop cmp fwait pop arpl scas aam shlb scas into (bad) pop sbb je ljmp pop outsb inc or add js fwait jmp mov addb js xor add push pop sbb das cmp mov add inc out jg addb pop mov loopne pop add mov sahf ds xchg aam mov je out jnp add adc push jae or or or std pop lret in movb in fmuls jae dec push (bad) das data16 lock rolb aaa aam js jnp push xchg cmp xchg and bound push repnz out mov ret dec mov fsubrs shlb js div adc nop adc mov jg mov aad loopne push pop loope push addl push add jp dec mov fcomip sub rcrb loop add or les loop fxam enter or inc cld mov jge add sbb in inc or lret mov pop xchg ficomp sbb loop cmp jecxz cwtl lock int xorl adc adc mov or sub or cmp repnz dec push outsl loop ds rcrb xlat arpl test test ss xchg imul and add ja int test mov icebp push mov or jp lds ret fs call xchg cmp ret lods mov ds and rcl jnp fdivrs adc fxch mov jb inc aas xchg fistp loopne or sub pop xchg mov orl aam adc jae or les imul rclb fsts les or adc (bad) leave cltd sahf inc in ds jl mov mov sub push pop dec inc out popa push mov jmp add aaa inc mov add jl or int3 inc lods xchg and push and lcall cmp test sub mov dec fwait jns in mov rol add pop push xor jns push inc cmpsb xchg push inc andl mov leave mov dec cmp inc test mov or icebp sbb std sub js into cwtl sbb arpl rcrb jl push xchg hlt andl dec xchg push rolb sub pushf adc pop pop mov loope push mov cld loop sbb add xor fildl push and call adcb das lock sbb xchg mov and popa ror imul mov addb das fbstp sbb add and hlt fldl xchg push lret push data16 pusha mov in add inc stos in mov or test mov fidivl mov rorb lea neg xor outsl xchg sub adc xchg cli add mov insb push jnp pusha call imul cld leave notb insb je adc out push popf inc and (bad) (bad) sub dec shll data16 in add sbb (bad) aaa jnp fistpl or nop inc dec dec add enter push jbe pop iret call cltd adc or clc sbb push mov dec push pop sbb rclb xchg pop dec add test jecxz rclb mov pop add lahf and sub out sbb xchg popa int3 (bad) cmp sbb adc xlat pop or pop aas sub in push xor pusha cmpl out std ret mov imul mov mov mov inc into test mov dec push cwtl ss inc or xchg stos cmp scas xor mov mov loopne inc ljmp pop mov arpl or inc cmpsb test jbe sub add (bad) loopne cmpsl add (bad) adc xor mov mov mov push add cmp pop imul in scas and js in ja inc mov add sub repz xor push aaa or cmp jg push andb sub or mov mov iret push pusha mov dec and ficomp ret pop jns cmp inc in add jbe rcrl dec into dec xchg mov xchg loop clc or mov adc sub enter add (bad) fisubl adc adc idiv (bad) mov cmp sub adc leave mov in loopne jmp ret mov adc sti pushf pushf mov cmpsl les test jmp rclb pop int3 scas fldenv mov out inc inc jnp mov or add adc mov and mov mov mov inc adcb push inc sbb rcr mov mul call push in (bad) push fimull inc jl xor jge pop or stos loope xchg mov lds scas mov addr16 fs scas movsb and lahf call mov leave xchg xchg mov push xorl mov xchg xchg or or imul pop add xor out pop push sahf and scas mov decb fld lds hlt pusha add mov fs loop fcomps rcr jge xchg add das enter adc leave mov aam jae insb icebp out xor adc pusha inc fs mov scas (bad) mov mov xor in xor pusha push rcll iret sub or hlt dec or jl xor add sub add sarb cs add xchg add enter lock add sub add xor dec mov push test add mov dec mov pop fmull js mov rol test nop inc enter add xor lds sbb add mov cmp mov dec (bad) inc (bad) rcrb leave mov and test fsts mov cmpsb inc add sbb add aas pop push jmp xor xor leave and add mov addr16 push in push cmp adc mov nop fimul dec mov add leave (bad) arpl or and pop pushw xor sbb into lods bound sub xchg movsb sub sbb cmpsl loope rol and dec lods add mov mov and and inc test hlt inc pop mov mov adc das or (bad) addb in xor or cmp loop sahf das xchg dec popf orb and fs mov xor or lods fnstsw inc (bad) or push int insb add jbe dec (bad) cmc sarb popa pop stos rcrl mov sarb sbb inc dec xorb js push inc add jo loope pop test dec jmp sahf sti sbb inc jo shll add lds dec call sbb add rcll sub inc test add fisub hlt bound pop call ret xor mov or jbe les loop in mov xchg adc jl cmp loope push lock add mov mov das and or pop sar test lods rcrl push xor inc sub fild leave xor xor (bad) push andb sarl inc mov in jns (bad) (bad) (bad) push loopne in daa push dec fwait pop cmpsl les outsb adc shl roll leave fs pop xor adc push rclb rcll imul mov xor insb jno pop cmp or arpl push adc pop out insb and fmull or pusha sbb xor rolb and mov inc push repz add ror fsubs jge sbb mov pmaxub mov and sub cmp add clc jne pop push jmp dec inc rcr scas sbb pop lock ret sbb jne push cld stc jo push add inc loop dec push rcl dec cmp movsb dec lea adc (bad) bnd inc or mov int3 and or fadds test sbb js push and les js inc add cmp cmpb fmul or fdivrl lock adc ret (bad) sbb pop sarb pop popa add (bad) jb and lret push xlat add jae adc dec cltd xchg or inc push or lods inc push addl cltd mov adc and push insb cwtl dec mov (bad) iret sbb mov stos sbb or int clc mov (bad) add and repz push lret (bad) or sbb popf sbb stos add movsl inc sbb int3 inc sub push lds div loopne adc test out lahf push les fs mov add or popa push xchg addl insl mov ret pop add jl nop pushf repnz orb jg (bad) ror pop cmp inc and sbbl insb push pop add call ret or fs lods inc add shlb imul pop mov xor mov popf lock ljmp mov rol ret sub test adc fistpll ljmp cmc mov js cmp fimul (bad) enter je cmp hlt cmp adc xchg ret into fcmovnb punpckhdq lret sbb sbb js or add in inc outsb mov and inc and stos mov xchg sbb mov cmp jnp enter pop aam (bad) mov adc (bad) mov out sbb mov jmp mov rclb out and push (bad) xor mov jg jl ret jp les cltd push xchg js push adc xor dec shll inc testb add in int3 repnz xor lds int adc stos mov xor inc pop icebp ljmp js xchg fxam lock lretw shr aas scas push xchg aas leave into add cmpsl (bad) fs daa lahf imul mov arpl cwtl test inc and pop inc push or hlt dec in lods or mov jp cmp inc lds sub movsb cmp cmpsb and dec sbb ljmp daa rorb enter pop adc jb rolb cmpsl or and pushf push fcomps fwait mov mov mov fs mov fxch pop sbb jge mov and dec add push dec xchg ret mov cmp shrd out js ss jno inc lret dec mov adc js lds inc dec rep fs cmp fldenv mov mov outsl sub add mov push jbe inc mov jne fiaddl gs mov mov jl adc mov push xor fs test data16 adc jg insb test outsb lods add add hlt mov xor mov popf sub ss lock add adc lea adc xchg adc fistpll je iret int js into into loope fidivl push clc je es pop xchg jo (bad) dec cwtl or out pop lock dec les adc adc fsts call fcoml frstor push xor xor enter fmul xchg lock mov (bad) and out jbe dec sbb ret test (bad) jo enter repz idivl push sbb or ret mov dec mov fs pop push cwtl or dec and add mov push add mov sub and inc jbe nop or fwait pushf scas insb jb jl inc jecxz adc jae lock sbb aas lret in insl add jecxz mov mov test pushf push pop lret int3 jne scas js xor mov leave pop sub cmp rorb lods push sti aas call dec pushf mov pusha fisubr pop fcoml fldcw or push or sbb nop xchg mov cvttps2pi dec sub hlt les mov clc data16 mov shll enter adc movsb sbb add es pop cltd and dec xor sar jo sbb out sub mov mov sbb pop imul jo cmc mov sbb adc arpl dec sub aaa xor push lcall jb inc test inc mov (bad) icebp xchg lds or je sbb sahf arpl push mov es arpl pop mov jno stos pop cmp xor mov xor xor and call test sub stos and es test addb arpl pop mov aad sub jp pushf push mov dec in pop mov int3 bound icebp add xor xchg adc and vpmulhw subb and aaa mov add mov fldenv sbb shlb and dec mov test adc xchg adc int3 xor pop inc cmpsl adc or dec lcall xchg xor ja lcall jae jo pusha push pop inc jmp fwait loopne xor fcoms pop call cwtl inc and hlt push lcall dec fcoml mov adc inc or loopne inc pop mov loope sub mov mov fcomps jnp es xlat push mov pop inc aad adc lock xor inc xchg daa jl (bad) lods adc sub cs popa xor hlt add in (bad) ljmp cmp lret push mov rol sub inc clc dec or test fs jg dec xlat test add cmp pop mov push sub push hlt loope sbb ret sub fs insl out or jl dec sbb or cwtl test xchg dec dec inc or loopne jo ljmp inc popf icebp test xchg std dec clc dec or hlt stos mov nop dec and fistpl or push bound adc sub call and test test sub mov jnp push insb repnz cs jle xchg lret nop addb popf icebp cmp ret mov sbb dec daa shll lods dec pop and gs inc les test dec inc mov loopne imul and cmp mov das cmc movsb xchg ror insb add in jno mov xchg xchg xchg push mov outsl xor in lods and mov in and popf pusha sbb and pusha mov (bad) lock js outsl mov adc xor maxps cmpsl mov xchg jno adc adc dec adc jb inc sub clc cmp out xor pushw outsl jp ljmp mov mov int sbb mov dec and jbe xchg std add mov test push adc or lret sbb sub and adc cmp jno sbb push test add or dec js add xor sti inc add sbb (bad) push daa mov arpl ret hlt xchg sub dec fildl mov cwtl ds int jo and push cmp loope shrl push inc and in and pop sahf cmp fdivrs mov mov cmp leave imul adc mov mov jae mov sbb sar push mov in fmul mov lock xorb flds into dec jno repnz test mov adc inc mov sub mov xor mov ljmp dec out rolb iret xchg imul int xlat out jl mov in daa loopne xor (bad) cmp and mov rcrb fildl ja fwait sub out xchg mov into (bad) cmp popf cmp xchg sub cmpsl mov xchg cmp scas test aaa add xchg loope or cltd dec mov mov sub imul in dec xchg add ret into sbb adc imul xchg test inc cmp gs pop adc lahf sbb aas inc cmc pop mov push xor and enter movsb add mov sub pop das or in dec int3 movsb add sbb add (bad) daa pop cmpsl or push xor or loop out mov dec xchg and hlt cmp fnsave push xlat adc add mov mov push mov ja pop xor dec call adc jle mov xor and sarb out push adc lea sub popf pusha pop xor nop xchg adc and push cmp je mov loope inc call xor sub in cmp sbb lock mov lods xchg popa dec cs xor dec push and hlt imul jns je sti testb mov test inc sbb in sbb aaa cmp adc push add popf dec int3 scas xor sbb cmp xor add fimull and sbb lods nop adc addr16 adc xor or xchg and std movsb xchg mov xor sub mov (bad) dec (bad) int3 add add rol enter imul rorb mov (bad) dec and push fwait xchg test loopne xchg nop inc rorb add xchg outsb loop pushf insb lcall addb xor adc test and fs inc fcmovnb faddl xchg or cwtl push and xchg mov movsl pop pop mov or push testb add xchg (bad) sbb addb jg outsb add lea sarl (bad) adc xchg popf jb ljmp pop into inc clc inc mov xor pushf jle or jb push cmp or test movsl jp jae test aas pushf pop push push jbe loopne inc xchg sahf cmpb pop stos cwtl test sub adc add test cmp sbb popf xor or aaa aad cmp lock ja push loope lahf lds mov sbb cmc sub or cs mov or xchg mov xor mov iret aas fildl sub std xchg xor sahf or mov icebp not sbb stos and flds popa mov int sub mov or cwtl unpcklps mov jmp les stos mov push sub in inc jb rcll rcll sub or pop xchg lcall mov call adc jb pop pop inc test mov sbb test jmp outsl iret sub inc sti adc lea pushf xchg (bad) (bad) sbb mov cld cltd sbb pop dec cmpsl sub mov aad mov rorl inc test pop addl mov jno xchg jl fisttp adc mov sahf arpl enter push jbe aaa push loop lea ljmp add pop pop mov or rclb sub loope pushf outsb cs test add dec jns mov popa fstl cmp pusha xchg adc xchg cmpsl push adc lcall dec cmp mov inc arpl dec clc lcall add jmp inc int3 add xor or insb lret jns in mov les sub rolb cli add push fldenv rclb add sub lcall dec mov mov dec push or (bad) in or nop jbe push pop sbb shrl adc in push push fldl push mov push xor dec sbb or sub push int3 mov divb aam add es xchg add push adc mov add js movsb enter sbb and movsl or in sub and add mov mov (bad) sbb xor leave mov popa loop mov add arpl cmp pop outsb and push inc cli outsb xor mov lcall loopne and push inc data16 xor xchg js sbb outsb push fs inc sbb xor xor adc adc insl lret pushf add pop pop add into adc push hlt jl push pmulhuw adc dec imul push outsb (bad) or inc in add pop pop fwait out xor inc and mov jp daa mov jns mov push inc pop mulb pop inc sub (bad) adc pop push jmp fwait cltd xor pusha loopne icebp add adc subb pusha jo arpl (bad) and and pop arpl inc or cmc cs jle xor insb sbb or xor cwtl dec out sub jl mov inc add sbb mov sub mov cmc inc mov mov popa add aaa pop call adc inc dec data16 and mov mov lea push mov cmp pop clc cwtl loop cwtl pop inc push adc jns aaa dec out adc xchg loopne or xchg adcb adc xchg adc adc dec pop fsubs mov cmp call mov jg add adc adc mov jecxz mov xchg lods add ja clc or test add shl aaa arpl ss test pop push inc wrmsr test enter movsl outsl mov inc rolb ljmp or push dec inc ss inc jo cmc push adc pop or add xchg lock aas xor adc rcll hlt push dec push icebp outsb or rcrb push movsl push int3 adc mov test sub daa lcall ds lds dec lea mov adc in adc movsl jle dec lods sub pop inc mov subl add dec mov rcrb das sti add adc aas test in (bad) cltd sub or cmpsb ds and jl fwait jb xchg adc rclb dec testl xor mov adc enter lcall add cld (bad) mov ret pop loop push mov xchg imul add sbb and add cltd inc adc or stos add xchg rolb nopl rorl call sub dec push jne data16 clc add xchg (bad) sahf nop popa push jp xchg xorl stos xchg dec adc inc in in and rcr mov mov fld mov je dec insb fdivl pop pop mov xor mov xor push and ds cltd sbb pop cld pop adc mov add jns (bad) mov lds dec add cmp rcrb sbb and ja add cltd fidiv aam push mov fldt out or mov iret inc sbb xchg outsl dec adc loop inc loopne adcl cltd mov roll dec xor inc or lret das mov fs aad movsl gs pop jl xor mov (bad) or popf pusha inc mov push inc and cmp push aam mov test or xor inc dec push nop mov jns (bad) js push dec outsl xchg lods inc int3 sub mov cmpsl or jo popl adc sub mov mov mov mov dec xchg sbb movsl mov push dec or xchg dec xor loope xchg and nop clc xor (bad) pusha aaa add (bad) lock sub pop lret inc and and sbb mov cmp or mov and xchg lods cwtl repnz and cli mov popf insb rcrl cmp pop mov rorl pop dec ds add dec (bad) or movsl insb insl sbb cmp jb data16 or (bad) fcomps rorb insb mov ja add and add aam pop inc and cmp lock push cs mov sbb ds daa inc jae ret push insb cltd or mov or std dec mov inc rol out in dec inc adc cmpb lcall out into aas clc pusha add loop inc les pop xchg mov add jno loop push mov fnstcw out int pop adc mov iret mov sbb and iret pop sbb pop aaa inc sbb clc or loopne cmp sbb push inc test in add or mov jb cmpsb inc jne call push inc outsb inc sbb xor std lcall adc mov fistpl inc adc and jnp orb iret clc rolb inc lock or inc inc in xchg mov mov andl imul test cmp mov mov orb or pop cmp and clc dec dec inc cmovo push sbbl mov dec and mov lahf fdivrl lret leave xchg inc xor fistpll inc (bad) adc movsb xorl flds push adc push inc nop int3 and cli insb data16 and fsubl push js (bad) adc movsl inc add sub and clc cmp sarb cmpsl inc mov inc mov mov mov pusha popf movsb insl jae (bad) test or xor popa rcr outsb sbb sbb or sub imul push hlt test fwait xchg js lods xchg inc adc adc mov mov js es add insb inc adcl push and das push fidiv pop negb xchg nop arpl mov dec loope movsl jp xor das loope rcll sub mov push fwait dec ret dec jg aaa adc cmpsl fild (bad) repnz jecxz stos std and fs push je lods cmp pop mov inc mov and xchg push pop xor xor add in fst pusha push inc in cmpsl jmp mov mov rclb pop mov or xchg movb mov int adcb push push or xchg mov lret push xor mov fsubs xor fs pop fsubl xchg mov sbb inc call ret loop fs dec imul movsb jbe movsb mov test mov test and call lcall loope mov adc mov inc (bad) cmp (bad) js jl and gs jns mov loopne inc xchg adc xchg stos insb mov or inc nop in test rclb aam test mov fs arpl and test mov and lds jge lds dec push mov bound pop fwait cmp mov (bad) fcoms int3 push in xor loope movaps rcll jl cmp test or insl pop lods and stos into orb and mov pop dec les and pop sub test cmpsl push dec call add sti add push cmp popa loope add mov mov and pop push fdivrl inc fldt sub adc inc xchg cmp pop rclb pop adcb sub jle dec or mov je sbb jecxz imul fcomps popw popa mov out repnz dec jo cmp xor jbe xchg sahf insl mov cld fs test and or mov enter adc push out enter xchg pop or add lcall add aaa or inc adc sub mov es jno xor cmp and push push testl int3 and mov (bad) lock adc mov cmpsl mov outsl imul in and inc dec addl cmp sub cmp push xchg shr sbb test cmp ret and push inc gs pop loopne or icebp mov and cmpsb and enter lret test cmp and adc add and lock lcallw icebp bound stc pop and outsb mov enter push pop out push and jo inc jo push inc (bad) adc mov mov leave mov cmp stc cli (bad) inc in or or mov xor mov jns and and sbb push sbb jmp dec pop adc adc push or and sbb sbb fcmovb les xor jp inc adc sbb mov or imul add test adc pushf push cwtl fs mov ret cbtw jmp add sbb in mov call (bad) xor popf imul xchg xor mov fbld adc mov lret push jle out xchg rolb or loopne movsb jo inc adc and cmp out mov jno mov js add mov fadds lods dec mov xchg pop pop inc clc in mov orl sbb or (bad) jns loop bnd leave jecxz decb (bad) lahf add loope clc movsl testl leave adc and push pop xchg dec add sub popa adc decl lods mov into mov cmp xchg inc mov das add fmuls pop pop or xchg mov popa mov dec aam je cmp mov pop and jnp adc sbb add icebp lods popf mov mov cwtl call cld cmp lock add fdivrs adc xor mov sub icebp movsl cltd inc mov inc dec sub lcall lcall push pop prefetch fsubrl lock call or mov xchg jb daa (bad) sub sub aad cmp imul dec inc mov sub xor movsb adc mov pushf add arpl pop fcoms and pop adc (bad) andl inc popa mov mov adc imul fcoml cmc sahf add cmpsl or insl push lahf mov push sbb xchg push cwtl in pop adc xor push leave inc adc pop push das adc jae xchg mov and dec movsb pop int3 inc pop jns (bad) and add xchg mov mov push rcll and ret mov sbb add loop pop push imul adcb std cltd mov mov les lock test ja or movsl push imul rolb mov adc or ret in xchg stos int3 pop mov ljmp fdivp add sbb lods insl add add xchg and cmpsb and push int cmp push ds add in aad mov xchg sbb push stc out sarb sahf sub sti xchg ljmp in ret and inc sbb std adc sbb mov sub mov and ds xchg xor fcomp sbb popa push out jmp js movsl orl ftst lret data16 add sub add shl xchg sbb pop or cmpsl movsb pop push push dec into mov negb (bad) aam cmpps mov outsl std ss lret movsb add in push movb sti dec into (bad) int mov and test lahf ja or mov xorl loope mov sub mov mov add es out adc jbe lcall iret cmp lods orl loopne enter nop (bad) mov xadd fldcw icebp (bad) sbb xor mov stc xor sub ret and js pop ja mov popa flds dec push sbb pop std in pop xorb jp cmpsb pop rolb popa jle add mov loop fcoms mov gs add and add and iret nop cmp and or rclb cwtl in pop sbb jbe pop (bad) mov and push into sub add movsb jmp (bad) aaa fisubl ja pusha cmp dec dec add mov lods inc dec push cwtl rolb sub call xor inc add rcl and mov lret xor pop cmp cmpsb shrl test lds xor es cwtl scas in jne addl sbb cs data16 dec dec or movsl dec and es sub shrb inc lods (bad) xor test les pop mov addb stos clc call xlat push adc fnstenv sub mov cmp xchg jae aam pusha adc nop pusha push incb push and enter cmp mov dec add pop or ljmp lea addb cmc dec xchg dec adc sbb in test (bad) add fisubrl push pop dec push cmp cwtl andl (bad) fnstcw or test (bad) adc fmuls clc out mov insb jbe jo push inc or test iret sub cmpsb push mov adc jle (bad) cli sbb lock and xchg jge out faddl pop leave adcl out xchg xor enter (bad) out adc cmc xchg push inc sbb sbb fwait add jecxz out or inc ljmp add pop and (bad) js stc shlb xchg sbb add cltd and adc int3 lock xchg xor jl adc fadds jmp cmpsl lods ljmp call sahf js aaa sbb (bad) mov sbb popf test inc jae jp icebp adc inc push and and xor ret out mov rorb pop loopne sbb xorl mov repnz cmpsl les pusha sbb xchg add or arpl add pop out cmp popa insl xchg clc and stc sbb mov cli add daa jl add fcomp popf les push and add cmp fist int3 add bound mov arpl add shrl adc pop adc out add dec (bad) icebp seto scas bound ret data16 popa mov out pop dec push xor sbb mov (bad) int3 push aaa sub addb in mov push add pop fwait ljmp pop xchg sbb inc inc test mulb jmp leave popa push push sub stc rcll or jmp cli jl and loope lcall test add loope mov xor (bad) mov and in fcoms aam testb jo cmpsb pop sbb adc dec ljmp (bad) or (bad) and dec repnz dec cmp lret adc iret dec jbe sub subl cli pop rcrb ret mov pop fs clc push movsb inc lods xlat adc sbb xchg sub cwtl xlat jl jo in adc and cmp and dec cmp sub and mov enter cltd lea (bad) jge inc test push sub inc inc out xor imul ret cli popa or push or adc sub sbb out xchg dec inc test lret sub push inc pop sub sbb xchg push test in lahf add call sahf inc stos loop test test add leave add mov and push out adc mov js adcl divb (bad) pop pop (bad) rorb adc mov dec cmp or mov mov xor jae mov mulb push xchg xor nop push xor test xor add imul mov movsb cltd js and loope data16 mov cmp cmp sub addl call adc cmp sbb and in (bad) hlt mov push jo ret test adc pop sbb mov add fcoms xchg add jno mov test movsb push adc mov in popa test pop cmp dec lret dec push lock enter mov mov movsb mov jl adc ret test insb and push mov dec in data16 sub rolb push nop insb es mov xchg and faddl dec jmp inc test and mov (bad) cmp fdivl inc cli andps testb out adc push or shlb jb xor push add push int3 loopne xchg push inc sub push fist dec sbb bound or data16 push stos scas sub inc mov cmp push das movsb push ds mov sbb (bad) lock test or dec mov dec xor xor aad and adc js mov add in call aas fdivrs cmp out pop outsb push inc cwtl push jne (bad) mov les js sub ds in out dec mov test mov add (bad) push (bad) movsb pusha fs movsb xor pop sub lods xor jo or jo push pop test sub sbb and outsb adc xchg xor push mov dec cmp in add loop push aam cmp (bad) cmp imul inc inc out xchg popa mov mov or add adc push imul and imul sbb out gs jle lods push dec aam or xchg or pop mov lock test mov sbbb cli ret sub dec movsb add outsl cmp and jl movsb fcompl pop jno,pn mov cmp mov sbb adc fs or sbb mov or lea mov sub rorb mov mov push mov or mov add push out out bound and push les add in mov pop sub adc mov aam (bad) cmp and push in dec dec movsl push pushf subl inc push sub push dec test call faddl mov push int3 out rorb sbb stc test pushf inc orps and or aas sub mov adc jecxz (bad) movsl inc adc mov cs adc les in lods adc test push out subb mov cmp and push enter pushf sbb or aaa inc mov out add loope jge nop insb or inc mov cmpsl xor repz sub and fsubrs loope add ret sub adc ja xor push jo dec decb leave lock or or (bad) xchg mov mov or dec cmp ss sbb xor pop adc sub test dec je fimul je or mov or in das push sbbl xchg and bound test inc push arpl jns add jb push aas shr imul cmp pusha movsb or sub sbb fsubl dec sbb pop in xor imul inc (bad) in fxch pop lods fsubs out sub sub push mov roll cmpsl scas popa push jo imul and sub fs push dec ret out add aaa push sub pop sub push push (bad) loop and jmp mov clc sub or dec push push cmc push outsb rorl and adc push push je (bad) jae and or enter cmp fs pushf jecxz sub dec push mov pop es rcll push mov cli inc pushf mov fs xor movsb adc dec fldcw mov or inc into out mov mov dec nop push sahf fcoms jo mov sbb les clc dec inc sbb jmp (bad) icebp ljmp iret imul xchg sub pop loop out adc dec fsubl inc insl test xchg pop dec enter lods arpl mov dec les push add loop adc sbb popa scas sub jl mov outsl lea mov xor aad or and pusha push inc js pop push mov inc xchg cmpsb (bad) lock arpl inc sbb pop (bad) dec js dec or hlt dec into (bad) sarl push cmpsl dec sub dec push mov aas mov mov inc popl jle out pop dec sbb loope jb enter jae adc notb stos (bad) popf test lret xchg push (bad) cmp sbb lcall imul mov int3 les mov mov dec pop mov out mov (bad) test mov and and mov push inc sbb mov rcll xchg pop mov push lock cmp adc aam data16 bound sbb mov packuswb adc je cmp adc les bound cltd mov out ret sahf mov call push mov shr inc fs dec (bad) xor pop inc test sbb jge movsb call and xor dec sub dec sub aas xchg out push mov loope cmpl scas pushf inc insl push in test test lret mov fsubs jp add push loope sub cwtl mov out pop dec pop sub adc insb icebp xchg xor xchg rcll adc dec mov xchg push mov bound and movsb sbb inc shl pushf pop push sub das test ljmp cmp dec rorb dec es mov sbb cwtl cld jle test std popa add ljmp lea mov stos call sbb and jp js and sbb fs rorl hlt aas adc outsb in push js xlat (bad) fsubl cmp inc sub dec mov in mov sub or add or xorb imul bound push test leave push xor or mov (bad) jp shl sub fnstcw lret ret movsb mov adc dec and nop add mov jns out aam or pusha and lea nop add push xchg hlt inc in les ret sbb das shr add cmp addb add push fmulp (bad) in inc add ret lods outsl mov adc add sbbb xor imul pop pop and shl add and inc push sub cmc subb inc add outsb in or loopne push mov adc enter or cwtl icebp cli xchg fsubs (bad) mov add add xchg or test je sarl push fbld mov mov cwtl push fsub pop adc popf mov cwtl mov in (bad) sbb test testb mov movsl dec pop dec jge je mov push or dec jp push ret xor xlat xor sub jmp or in adcl dec aas dec cmp push shlb in dec scas inc and xor jo push and dec mov sbb sbb cmp les sbb out add mov sbb xor wrmsr dec lret push mov mov aas nop movsb add add lods sub (bad) out sbb insl adc inc mov and xlat mov cmp jp sbb sub sub sbb sbb sub inc loope or and stos add add mov enter fs aam push and xor push mov (bad) das pushaw mov xchg cltd daa sbb sbb pop push loopne sub out inc add lret sbb fcoml sub test shll add in xchg dec rcrl movsb dec sbb dec mov test cwtl pusha cmp fwait call mov dec pop sarl or and mov test adc add ret imul cwtl lret adc nop lock ss inc sarb mov fcomps stos pushf mov dec adc js mov mov jle test enter push nop pop cwtl cmp pop push sbb add xor pop jp inc inc jo je push jg jge mov sbb mov mov je add jo xchg push inc aam adc push leave pop dec cmp lds sub cltd cmp (bad) lods push push mov sub orb fsubl push das pop adc sbb adc test mov outsb adc and xchg and xchg inc sub stc test cld sub sub pop je xor mov enter sarb add pop mov mov test bound adc sub pop (bad) cmp mov mov cwtl dec xchg clc loop pop add ficompl (bad) adc les js adc ss mov dec movsl mov mov jge loop pop ret xor adc mov mov lcall (bad) and loop adc adc lods pusha sub cmp add adc cmp pop mov test push sbb sarl test (bad) add xchg popa andl test lea push pop pop jbe pop insb xchg insl cwtl or inc pop and movsb lods push pushf inc in fistl (bad) xor adc dec push jns rcl push test pushf dec jne addr16 sub sbb inc outsb adc fildl push les out lods jl jnp jnp add pop inc and in movsb cltd call ret pop mov and sub dec jl clc and das stos imul (bad) jl test push subb sub data16 aam loopne mov out mov adc dec xchg loopne out cmc adc jb pop cmp pusha cwtl fwait ljmp mov popw (bad) daa xor cwtl jl jns rorl mov mov mov pushf (bad) or push add rcll dec adc decl inc insl pop gs aam out and sub popa jl inc fs stc loopne xchg mov sbb mov pop test test cmp mov dec les (bad) call pop adc adc stos lret push jae nop insl sub insb xchg jb sbb mov xchg cmp inc xchg sub (bad) mov dec test mov inc push inc dec les pop fidiv xchg xchg add or jge push push das inc xor imul mov daa inc imul mov pop out add pop lret push in add cmp pop nop adc stc push aad jmp adc and push mov in stos and pusha xor pop inc mov nop adc xor jmp push xor inc out adc adc sbb sarl sarb jmp mov xchg nop xor mov scas pop inc mov sbb or cmp popf mov inc sbb test and mov sbb push or mov iret test nop mov (bad) pop out mov aas rcl stc push dec add mov dec inc or sub adc mov addl rorb sub (bad) test xor sub mov (bad) fild mov mov (bad) nop push inc dec ret and mov and lahf sbb inc mov adc inc adc out nop (bad) hlt mov ljmp xchg arpl add xchg std inc adc jge test clc jl mov dec push ret imul movsb xchg jbe mov dec mov shrb mov pushf mov les or push int3 insl mov dec xchg add cmp mov dec pop and xchg inc or insl xchg cmpb pop mov fnsave inc (bad) jbe scas int3 push pop flds pop pop mov xor adc call test mov cld inc push fcoml and movsl pop lret mov pusha gs xor jp jno loope sub mov imul sub push cmpsl and mov lcall out loop dec lret mov ljmp loopne pop in mov shl mov (bad) sub shr mov imul xor loop pushf push jae fs call cli push and dec mov jno xchg inc adc mov dec xchg add adc sub adc sub stos xchg imul mov mov shlb adc jb xchg jns jae test xor adc add jl cmp and mov stos ret sbb push mov and dec mov loopne scas xor inc and pop mov push and mov (bad) scas pop test push scas daa lock pop mov js pop fnstcw enter sbb daa pop sbb imul adc adc cwtl adc jne hlt mov mov xor mov ljmp jl sbb (bad) xor enter add pop js out mov popf mov outsl and adc cmovo loope test inc enter stc xor xchg dec xor (bad) sub pop and arpl xchg sbb insb cmpsb pusha mov pushf pusha xchg loop pop adc je loopne scas hlt or call dec and dec movsb test sub mov int3 mov mov je dec (bad) xchg sub rol imul sbb adc push sbb mov mov sarb add push call pop test das je inc add push inc cld cmpl push inc or clc call mov cmp jo dec lock or jmp cltd sbb push lock push hlt pushl push push sti roll adc call xor or jmp push sub pop adc mov mov mov push mov push adc or or push pop cmp aaa inc popa js leave ret push mov orl fdivl add out cmp dec adc or inc call push stc sbb aad sbb adc pop shr or bound mov xor dec adc mov loope jmp sbb call adc mov (bad) repz and ret pop mov xchg enter push mov test imul jge out xor push push aad mov dec mov sbb adc push and sbb dec adc or xchg test dec mov dec mov or mov mov mov xor outsb adc push push cltd or test mov mov inc call inc hlt inc adcl mov push icebp add incb sbb xchg rcl xor add stos adc dec add rorb test popa adc jns mov adc es mov sarl (bad) hlt adc mov push or lds xor or (bad) xchg and xchg sbb repnz xchg pushf xor adc (bad) and and xor or add mov sarl mov push (bad) daa jg jg imul adc enter mov xor sub push push xchg sbb sbb adc xor adc sbb pusha inc push daa or lret add rclb add cmp jae (bad) adc adc jge add jne inc mov leave bound mov leave test inc call inc sbb dec inc ficoml imul mov mov testl pop cltd mov push inc adcb sarb dec or int3 sbb inc xchg mov nop js xchg jp xor push rorl and mov jmp (bad) call repnz sbb aam loope scas and push jp lock push and scas xor mov sub inc lock mov iret ja (bad) jmp bound inc leave or push insb outsl adc leave inc inc add cs orb cmpl and rcll and xchg loop dec mov push je mov sub (bad) int3 sub insl lods push sbb mov cmp add cltd adc mov pusha aad sub xchg clc adc (bad) adc das inc mov (bad) sti enter repz push mov (bad) nop add pop test subl jmp mov daa lods xlat push xchg int sbb in mov test mov push and pop mov push push lods pop inc stos and (bad) adc out cmp test sar pop or shr or in adc or lods in cmp pop sub adc pop jge jae gs in inc je sbb xor push or and fmull push dec inc gs je jo sbb popa dec or outsl fldenv gs push rorl je inc rclb inc int3 cltd daa fsubrs sbb fdivr push mov dec cmp leave xor add mov adc cmpl gs cmpb outsl arpl and pushf clc or and push or fiaddl adc pop addl or movsb arpl or pop xchg sbb or sbb mov test aas add nop and (bad) inc jmp pop mov ss push int or inc mov inc das push and je and and push or mov jo jmp insb fisubr imul pop sahf mov sbb clc ds inc xchg sbb inc mov popa push movsl pop inc mov iret jmp sub or outsb inc popa lcall nop and and enter mov rolb sbb adc (bad) and and sub std mov xlat pop push xor sub or test and das int sbb or sub push push (bad) repnz fwait cmp add test and xor mov sub popf (bad) mov pop or sub sbb or dec sbb pop inc pushf and jno or test movsb xor pop adc xor daa (bad) arpl sbb sbb loop jp inc or sbb mov or ret cmovb adc mov inc push (bad) dec mov insb jmp or and (bad) adc loop cmp jo inc fs and aaa sbb mov dec pop push cltd xchg xor cmp and adc faddl push mov push inc or dec mov pop xchg sub mov push and pop fwait lods out in (bad) nop xor and enter mov cmp or inc mov pop outsl lock mov fcomi sbb or mov push or push and lea mov fildl enter das and mov js pop and inc add mov xchg popf jl test fdivrl mov pop in jecxz pop push (bad) or fwait cmpsb stc pusha dec ds mov cmpl and ds je add fbstp lds aaa sub mov and imul push dec test or sarb add fidiv aas mov push ljmp xchg andb sub jmp pop mov push ror fsubrl mov dec cmp jno and out jae les jg cwtl leave incl add mov mov push push mov jb dec dec mov sahf mov shlb test mov cmp inc mov popl cmpsl dec jbe lahf aas fs enter (bad) aas in pusha inc lret inc iret loope push es test and aad push pop aas add mov pslld inc cltd dec popf icebp pop insb dec cmp out fadds push push sub push or push inc xor test inc mov and add test xor xchg inc cli cld and lret out and xchg incb rcl cmpsl cld pslld loopne and xchg incb shrl (bad) pslld or je mov nop sub in ljmp lds pop out jae xchg pop clc aad xor mov lock push addr16 idivl cmp xchg mov cltd cld inc xchg pop in cmp adc ret jmp dec pusha dec mov sti push mov (bad) roll add das in lahf aas leave aam clc or pusha std mov xchg fdivrs mov (bad) cmpsb inc (bad) faddl clc jg push lcall cmp xchg pop in cmp adc jmp in xchg movl (bad) out and pusha inc mov mov shrl aad pslld push add ljmp cmp mov aas sti and in and push (bad) dec aas mov push lock mov or leave pop push lret dec mul (bad) iret add mov loopne into aas enter (bad) jp xchg adc aas add xchg and aas lds cmp arpl pop out icebp test adc pop in sub xlat loopne xor dec aas add das xor ss pop dec mov xchg pop jge jl dec mov aaa push leave addb pop sahf push cli (bad) rcr inc dec pop ja mov inc mov sub push jl mov push mov pop flds mov adcl pop inc es in push out das inc and add movsb in and sub mov adc sbb bound or push and or add inc and prefetcht1 adc or jg or inc sbb mov sahf daa mov dec cmp or adc push mov adc test or in dec nop or mov in adc cmpsl test rclb sbb xchg dec adc repnz jns mov dec adc test aaa push mov orl hlt or inc inc adc add adc cs notl sub sbb mov inc and (bad) or sbb fdivl test mov sbb and dec inc mov and cwtl test pop test sbb adc xchg insb adc and and or mov jl push dec js test jmp insb orb stc inc inc dec and cmp inc push pop sbb repnz ja js and dec push or and and sub test or xchg add adc bound adc and cmp inc sub xor and mov sbb sub lock sub or mov call dec sub or fiaddl add mov leave test out test out mov cmp cmpl mov fnstcw ret inc cmp idivb cmp adc call or add xchg adc gs ret call add (bad) je (bad) stos outsb push sub sub popa call push jnp xchg mov push sub dec or pop xor mov sbb in (bad) xchg mov add pop or dec add push repnz aas fldcw inc dec xchg out dec (bad) ss push and outsb loope mov loopne loopne scas gs add popa pushf fisubl lret and mov and and inc adc (bad) sub leave fcomps test mov xchg andb test test fcoms mov sbb push fisttpll out pop mov add mov jnp cmpsb orl add push (bad) aad leave push out push jmp push in aas pop pop lods rol or push push cld dec aaa movsb or xor aad adc pop lea push or add popa mov push adc leave popa jne in dec icebp (bad) xchg ret cmpsl lret sub push inc sbb (bad) xor ja mov mov sbb ret adc and xor (bad) popf pop mov push or add mov or add push sub pop mov lock sbb loopne xor mov push in insb lret test inc pop jmp mov adc ret xchg mov daa das lea inc sub outsb mov sub movsb dec add dec and rolb push cmp mov js (bad) mov subl jb add cmpsl pop sbb push adc fsubr or (bad) (bad) pop test iret (bad) outsl test mov add (bad) adc test das pop xchg xchg or adc dec (bad) mov leave and adc ss dec (bad) sub xchg add xchg (bad) out dec inc shlb das mov popa mov and lods pop gs outsl mov dec loopne mov call xchg call in add and adc nop add mov nop shrb adcb inc loop pop icebp stos inc and adcb aas fwait adc cli sub (bad) mov mov addl jo dec loop add mov loopne and jnp add sbb fsubs adc or add imul mov in aad add xchg arpl and in and mov sti call out add (bad) (bad) sub add out mov jmp repz ret add inc mov mov ds ja mov outsl xor mov fbstp pop mov dec in sbb jge sub inc jae push add ret pop rcrb ret inc mov shlb andl popa jbe inc sbb jae inc adc jecxz add adc sbb pop and scas jnp add push cmp cmp leave xor imul lret push xchg nop mov xchg insb aaa enter sbb sbb push mov cli lods cmp xor mov pop cmp push sbb adc dec cld cmp sbb ret pop jecxz incl test mov roll jb popa (bad) stos add xchg dec or jns movsb call cmp inc mov cmovno test addr16 pop and out mov int3 add adc fwait in xlat in lock add repnz adc loope push jmp jae mov push and cwtl sub imul pop add adc rclb adc jge jl test popa jne sbb jg les jmp add adc sbbb cld mov ds in icebp xor xchg dec fadds sbb inc call lods jnp dec inc mov aam mov stos repz add fcompl sub xor fisub xor arpl cmp inc cmp xchg orb outsl xchg dec add cmp jle imul insb popa adc scas mov icebp jmp xor mov sbb loope out sub mov loopne movsb adc push addr16 and pop mov ds and mov sbb sbb push stos inc fs push add gs add sbb add and jnp cltd xor mov cs mov rorl leave adcl sub jae or and mov leave cmp andl clc jl sub hlt add add in mov nop push aaa jge movb int3 in mov add sub ja jg cwtl sbb adc adc xor cmpps push sbbb stos sbb adc je popa subb xchg and iret pop jo nop testl (bad) rep icebp pop mov mov adc xlat lds xor add rclb (bad) rclb imul in or xor sub add dec orb add popa jno dec lahf out test add xor and and push faddl sub or mov dec outsl add or fwait (bad) xor and xchg stc sbb les add inc rorl dec scas inc imul sbbb sbb xor mov add xchg dec jg out xor ret mov adc je adc and jae test pushf inc push inc mov push jne jno out call rorb adc popa adc fsubl pop cltd dec xor bnd fcompl loopne (bad) jns insb movsb (bad) mov sbb mov add adc fs jo add test mov sarl scas cwtl leave test inc and rorl movsl (bad) in jo mov ds lds mov int3 aam rclb ja sub hlt push dec adc push es popa cwtl mov jnp adcb or pusha xor gs popa cmp mov (bad) push sbb jnp gs loope jb dec les inc aad adc mov inc test sbbl pusha jae lcall push incl cwtl aam push push lret cmpsb or enter mov pop bnd push add test enter xchg jae add inc cmp add in movsl leave adc cmp movsb nop test push mov dec (bad) int mov jnp cmpsb push lock ljmp fs adc jmp mov cmp (bad) pop sbb sub fdivs pop and sbb push popa insb imul lret in pop add sbb loopne lret rorb inc xchg test outsb lock pushf sbbl push sbbl stos sub test and test cwtl cmp enter adc jae adc sbb mov or jbe xor cmp dec iret dec insb lret cmp je sbb leave imul cltd and icebp out mov xchg inc (bad) imul sub mov xor inc inc fbstp loope mov and push jmp adc sahf lds in mov fcompl pop xchg lahf jo jnp or or lret lds push adc stos xlat and inc in loope inc or nop std xlat lds jns sbb mov pop xchg js jbe mov xchg enter (bad) stos addl push sub inc popa pop mov int xchg in add sahf or or sbb xchg adc cmp imul fld scas nop adc mov popa pop add jno adc test nop mov sbb and jg jecxz adc sbb inc push mov (bad) loope lock add mov fsubp loop mov clc test out cwtl adc ljmp xchg adc stos insl test cwtl inc xor fdivrl mov popa push pop loope dec in adc ret int3 sbb jecxz rcrl cmp mov adc cltd int3 xchg and loop sti loope cmp pusha sbb adc inc ja imulb fidiv addr16 out jp dec test in inc xor sahf xchg and and and add cwtl pop cmp dec and (bad) and adc sub sub enter or lods mov lret in sbb fs cltd test jnp enter inc pop jo (bad) test loop add movsb fs inc xchg int3 dec xor xchg js clc out push sub movsb jno add popa jno ds in sbb mov popf xchg inc jg push test sbb outsb inc test nop push in adc add pusha xchg push icebp ret push clc pop fwait test sbb mov adc lods mov rcrb mov or ret jnp movsl cwtl cwtl lret out decb mov and jae mov lods pusha pop insb nop pusha add xchg mov mov pop test popa aaa fstpl enter add ds add mov js mov adc dec jo fsubrs cld jnp rcrl sbb dec lods jae mov or js pop adc pusha adc rcll sbb pop or xor lock xor shll xchg test inc xchg loop fdivr ljmp mov add add adcb nop cmp xchg pop dec cmp int3 int fwait and and and cwtl add sbb push dec addl jo (bad) dec xchg jg rorb push inc mov push lcall arpl sarl cltd push loopne xor push pop sbb ss and jno sbb fmul dec lea scas rol repnz mov or sarl add pshufw inc add ds pop lahf mov mov ja mov mov out rorl and xchg or shrb pop out (bad) jg int3 pushf lret dec push adc fs sahf ret jmp daa sbb cld nop sub or pop xchg xorb xor jo sbb in test lcall or wbinvd fbld pop test out (bad) lea or pusha inc cmp pop mov mov out add cmc sub cmp jmp iret mov pusha mov mov inc pop lcall lcall mov push int out adc movsb ss or mov sbb push push jb and repnz pop pop or add hlt jge dec inc adc nop mov push ljmp pop sbb add or dec fs jle cltd xchg adc sub and xchg mov mov sbb jae push outsb in test fildl daa rolb dec sub inc add pusha xor adcb mov and xor add dec jl sbb xor inc xchg mov adc (bad) mov (bad) icebp fdivr cmp mov enter adc call xor adc sbb les inc lret add popa (bad) mov add sub or mov sbb mov mov jl dec pushf dec ss or or inc scas and call add lahf or fiadd mov frstor popa out sub dec outsl push inc add repnz pusha add js sbb daa lds or pusha xor lock push leave xchg push (bad) lock mov jns cld mov lods test mov outsb (bad) adc jo in or iret xor incb pop ret cmp jmp cli rep jl push idivb pop prefetch dec fld popa sbb rolb pushf add push into xchg aas push sbb add repz sub hlt cmp add pop fbstp bswap sbb sub cmc shrl cmpsb outsb inc cmp (bad) sbbl sbb pusha push jno sbb adc (bad) (bad) mov nop add mov lods dec add call sub and in das jb push sub add rolb rcrb dec mov dec shrb xor xchg sbb add pop es js adc xchg xchg adc rclb fidiv cwtl sbb in mov mov mov bound scas inc shll movsb push xor out leave xchg add xor loope mov push int3 add nop mov mov ret xchg xchg movb sub sub xchg inc mov cltd or or dec in movsb iret push sbb push adc out jg mov push scas test push pop fist push mov test inc jmp jb and pop pusha shrl push mov imul js adc sbb fcomps dec imul lds cmp imulb xchg rol add cs clc stc pop mov and cmp sbb fdivs adc and cmp mov pop cmc stc shrl in std add jl cs and pop xchg sti pop dec mov mov jmp jne orb (bad) clc add cli movsb mov pushf loop popf or test sub push add aad xchg fstl roll add dec add out clc jmp jnp inc pop xchg jl out adc jp add fsubrs jbe lea jb mov mov (bad) xor inc pusha xchg sub add mov jbe push sti push inc xchg adc pop test mov stos pop or cmpsl stos les push mov jmp jl mov in sbb inc sbb pop incb jnp fcomps mov (bad) mov test addb gs and sub jbe stos sti adc xor nop push pop add mov dec mov mov xor mov sbb sbb cmp repnz pop test xchg xor lock sub sbb rorb dec and scas pop add jae mov add or push lods dec add jecxz jo inc lds and pop inc sbb sbb cmpsl jo cmp jbe test loopne mov sbb mov out xchg aas sub mov inc jo or inc sbbb in sar scas arpl add aad mov mov push cwtl cmp loopne lret add adc cmp mov cs mov imull cld add adc test and mov mov enter rcll adc add xchg popf imul sub inc xchg sbb add xorb cmpb or fwait push add loope mov xchg mov out test mov hlt and in xor in add loope adcb inc movsb popf leave test sbb or add sub push adc pop add stos push cwtl mov add mov pop test repz adc add mov or arpl inc xchg sbb or inc mov ja add mov int pop lcall sub xchg add push jmp inc cmpps sbb (bad) xchg sub movsb or addr16 add xor movsb mov mov mov repz dec enter (bad) xor out int sub mov push sbb push rorl sbb hlt dec push lock dec sub add test mov dec and mov (bad) (bad) mov mov std sbb add fimull (bad) into add fnop sahf xlat (bad) mov cld aam adc data16 adc test nop orl bound ja popa or xchg (bad) lock sbb lret xchg mov out xchg mov pop dec test jp mov (bad) shlb mov and lds je mov cmp sub mov inc xchg cld dec mov mov lods sahf lfs add enter lock loope mov ret mov and push sar popf or cmp sub sbb add and lret xor insb dec xor mov pop dec fsubr bound sar mov adc jne in cmpb or daa mov rclb ds out (bad) je mov sub in and adc int3 leave dec sbb and sub and cmp (bad) xor test fwait and cltd cmp hlt pusha cs sbb hlt add scas adc cltd imul xor mov cmc mov lahf or xor cmpsl cmpb push ret cmp out inc enter mov adc pop adc or mov icebp dec stc decb enter (bad) aaa add popa dec (bad) mov ret xorl jp imul or cmp adc sbb aam sahf addl mov adc and mov ljmp add xor into cmp adc or add mov call lds movsb lock sbb fadds xlat mov dec add dec add pusha add lea addl mov ljmp dec sbb mov jo and adc add pusha push add pop mov aas jmp add (bad) dec xor cmpsl in rcrb sub mov sub mov xor insb pop sbb sub mov mov and and arpl test mov mov add out and push mov inc mov cmovs inc inc cmpsl std inc mov inc lea outsb popa loope hlt aaa imul fsub push push or adc sub pop push test adc dec sbb cwtl xchg lock sub test cmpsl (bad) cmc mov mov xchg outsb xchg popa mov loopne adc adc stos test push dec daa and sub in into or push dec mov add lretw inc in lds push push negb xchg rolb in mov add pusha pop push pop mov sbbb (bad) loope adc arpl dec sbb mov dec and xchg cltd das pop sbb mov mov lret adc adc pop add cmp push or xor sub add add insb push fs inc sub push lods add fisttpll inc dec fwait pusha js pop cmp mov xor mov cmp push or sbb shlb fstpl mov inc call repz sub cwtl add pop sub ret shlb or lock inc sub pop mov nop push xchg cs imul rcll pushf pop dec mov mov int rcll or test (bad) sub dec or and add mov fdivrs adc dec push test inc add sbb outsb cld or pop or or adc jmp scas adc add lds mov je clc test roll ret dec ss sbb jl movsb or sbb cwtl lahf or clc loop and out lcall inc sbb pop sbb fcompl stos js and repz adcb jl movsl pop cwtl popa adc adc fimull in or adc mov and hlt sub pushf in mov sub nop jno pushf (bad) mov add sbb fdivrp jge sub xor mov sahf popf test cwtl adc jns mov or adc call push std push scas test fcoms je mov adc cmp and les (bad) fimul and js in and pop je in sub sbb (bad) xor addr16 or stc and sub sbb mov mov mov cmpsb mov mov stc or adc rcr fmuls dec pusha outsb pop push dec loopne xchg rclb ljmp fs les adc sub test enter add mov das jnp (bad) sarb adc fs mov jnp fsts inc lods gs jmp subl jmp sub and push fs es xchg dec sarl pop int xchg ja xchg or adc gs jo or cmp and mov push nop add xchg (bad) sahf loopne iret cwtl adcb arpl test popa fidiv fsubrl push lods inc bound dec les xchg mov jb dec test inc mov in nop push (bad) push add mov enter jb xchg (bad) jb ficompl and add sub xchg stos rcrb std xor stos jp and xchg mov sarb sub in dec dec inc and and dec push int3 push sbb jl lods and and add dec adc hlt push push add fstps scas inc dec outsl sbb (bad) shrl adc loopne fsubs es xchg push mov aad and mov cmp xchg adc rcrb or jg mov and and sbb cs or and repnz (bad) mov adc ror repnz int3 xor xor xchg mov fs pusha and jmp fild cmp dec sarl pushf adc ret cmp fldl dec (bad) xor mov mov sbb push int fwait add jae push es push or push ficompl pop dec push jo,pt push cli rolb pop jle cmpb test pushf xor dec fwait adc mov popl adcb push mov and popl and sbb test adc imul js xchg and and xchg push div out cltd mov adcl lock add (bad) (bad) ss cmc pop xor add pop outsb push add je repnz imul pusha sbb sbb les inc out insl and ja mov mov cltd cmc mov sbb add sub int3 lods loopne arpl push add adc or pop loope add pusha ret clc xchg sbb mov and adcl and rcll imul insb push jno and sub mov or nop icebp aas imul sbb std jle mov push bound inc test mov rorl out stos add test outsl insl stc or fadds sub jge out shlb jl mov pop outsl xor lods sahf faddl je cs sarb cmpb mov jmp push repnz cvtps2pd les call out mov sub push repnz imul daa nop add mov inc sti pushw cmc mov add aaa nop not ret lock hlt add dec int3 push in push mov add stc push scas cmp movsl add push mov adc lods leave and mov add xor stos popf imul dec rolb pop cmc cmpb pop mov mull pusha enter jne add pop xchg and call jmp out mov sbb xor xchg push and push inc (bad) ss push test sbb xor xchg les cltd and sub mov sbb nop add sbb xchg lock subb xchg push cmc test cwtl js xor mov pop hlt call push gs rorb adc inc movsl ss push lods xor cs jl add or xchg xor push (bad) aam out cmp cmpb adc mov adc jns mov mov mov movsb xor cwtl sbb inc or icebp shrb fist out inc in flds adc or dec add xchg insb sub pop dec in mov sbb js inc dec dec and adc adc xor ret sahf stos adc jae leave lea add (bad) xor sbb nop es pop das daa fs in dec mov shll int3 (bad) pushf js add daa (bad) rcl dec inc sbb data16 (bad) jbe push clc jmp add sub sub inc mov fistpl sub call jg xchg pop xchg inc and fldcw imul (bad) mov ret sbb lret pushf cld pop and es or and and add push pusha pop xor daa int call in mov shl mov repz add mov inc mov sbb jae outsb or xor add cmp aas aad inc sbb and pop lret shr nop inc movsl insb sub daa test lods int3 or jl out xchg dec inc gs mov ss add pop mov add dec fsts lret cmp stos and add add mov shlb sbb cltd imul mov adc clc test enter pop dec shll cld in mov pop pop stos addl inc (bad) clc aas mov push inc xchg jge or sarl cmc movsl lods pushf fstl enter je ss fcmovne fsubrl out cmp inc add aaa inc push add xor push xchg push pop loopne and cwtl test aaa and dec shlb insb xor sbb enter xchg lock and fisttp xlat fcoms or jae pop mov pusha add data16 mov jb add int3 movsb or ss jne jmp aas mov xchg cs and pop xchg pop inc inc xor xchg jbe mov mov push and int rorl mov jno mov add push bound xchg pusha cmp fiadd xchg les clc mov mov lret and inc add jl rolb imul push ret sub dec and loope inc sbbb pop jp clc adc (bad) loope out sub nop or add addr16 mov js call aas and test pushf mov mov lret addr16 cli cld shll sub sub mov rcrb mov xchg mov lds jl inc dec dec insb sub inc add and cmp cmovl outsl pusha inc or sbb xchg jbe add call into sbb dec addr16 les mov insb and pop cli or call dec mov in movsb add fcmovbe outsb add mov jae cltd and push adc ljmp mov add mov in sahf enter in add add scas xchg test jb add push leave jne xor inc cmpsl loopne (bad) pop sbb dec adc sbb cwtl mov sbb add lret add pop mov lahf xchg (bad) lds pop outsl icebp (bad) rol int imul outsb mov pop ljmp stc cmp sbb add stos ss jmp in ret pusha adc and loop ja inc and inc xor enter fs jo adc push leave jbe arpl test adc popf push xchg ret xchg sub dec sub dec pop loop ss out inc add push call add popf test aas and and adc test sbb pop xor or jb enter ret or sbb jg lods add inc inc cwtl fisubrl add or xchg mov outsl add adc fldt pop add mov xchg addl fstl add push lea in xchg sbb lock sbb js xchg mov (bad) mov in sbb pusha jne lock mov pop nop jecxz sbb add push xor and out mov jnp fiadd ret scas push jo sahf leave popa pop sbb in lret rorl and push dec lods test push sarb mov inc addr16 and xor test jo adc cmp dec adc add sub js or popa push add (bad) mov and pop out mov mov pop cmpsl decb and shll test je cmp adc stos sub pusha or iret inc sbb pop hlt inc in imul fistpl adc ret and js leave mov out add clc (bad) in dec jge add push lods lods int3 add pop sub cwtl adc mov out adc xchg aad inc mov inc inc inc gs rolb pop jb push sti imul ret cld dec jecxz add and jb pusha xchg dec sbb lods adc fwait adc nop add sahf subl and cltd cmp jl inc repnz and pop fs test add mov test dec int jo ja push mov aad sbbb xchg or icebp push add push mov adc pusha and je or nop pushf cmp inc out sub and les and daa or cmp and (bad) mov lock sbb cs imul lret insb imul bound or sbb xchg arpl mov xchg iret or aaa (bad) dec cwtl cmpsl fldt xchg inc lods popf cmp clc (bad) and adc (bad) aam in enter ljmp pop xor sbb mov aam lods or ds and test movsb jo stos insb popf inc clc iret dec mov adc enter and push lret imul push imul jl jecxz je dec dec popf ficomp push mov mov lods inc sbb push pop xor dec inc adc dec loope pop lcall fs (bad) bound cmp fs mov dec xchg test imul test xlat adc inc aam cmp mov in int3 lods push dec or xchg push jns inc adc dec fsubrs nop nop adc mov roll das add out ret xchg mov add xor and in rcll xor or mov dec sub cwtl cmp in cmpsb movsl or fsubl sbbb je pop outsl and stc inc test pop (bad) add mov out jbe dec dec push push add out hlt fsubl cmp mov pusha jae movb mov lock mov add sbb orb lahf rorb and test or rol jae aam xor in sbb lret loop sbb jmp repz fucom sub lret mov sbb test push cmp add jb mov xor xchg notb cwtl xlat movsb popa pop sbb fadds int3 movsb in mov inc std loopne enter inc mov sbb popf inc lahf fstpt cltd sub (bad) push movsb inc pop inc cmp fs je ret out in mov outsl jo in mov movsl xor lret fmull cwtl addr16 adc lahf add jne clc cmp call dec xor adc mov sub and inc ret jmp mov jnp or xor repnz xor repz insb lahf and sbb imul loop add jns out subb cld dec mov dec jb dec adc (bad) out inc mov or or push cmp add sahf data16 loopne mov or cli es push (bad) rcrl js (bad) int adc hlt jno pushf out xor adc (bad) aad jl dec mov cwtl cmp clc mov lret dec xor test ds lods xchg aaa rcr mov out pop cmp movsl or mov out dec adc clc dec or cmpsb sahf xchg mov rolb add dec ljmp sub test sub push xchg pop out ror xlat push adcb and lock push adc outsl ret (bad) out and inc adc stos pusha xor dec mov dec lret jmp dec adc jnp and in pop rcrb fiadd pop dec iret inc pop aas mov add adc leave inc sub mov enter mov jne sub call adc mov or pop add adc fstp inc dec pusha sub leave sets cmc stos add in popf test mov xor jg test mov pop lock push sahf aad call shlb sbb cmpsb aam hlt loop sti cmp clc ljmp mov dec popa fadds sbb in mov xlat mov inc push cld or xchg dec hlt out sbb jp inc sbb sub sbb jmp xor je lock dec std sub push pop cmpb xor cmp loopne cwtl and fsubrs cld in or add jge sub sub adc jge pusha mov xor cmp repnz mov push xchg xchg cmp mov pop xor mov rol sbb xadd sahf xchg lods mov out inc sbb into mov fadds mov leave je xor inc mov sub adc and push mov push lret dec adc mov stc imul mov push jl dec in inc xorb jnp popa imul jno mov aaa dec loope jo outsb movsl rorb adc clc ret cltd dec dec mov test sub push mov insl incl fmull fwait xchg stos bound and popa mov out call leave hlt pop aas fsubrl mov pop mov xchg adc ret pop je aaa jp leave out test jl xchg enter pop icebp xadd mov add cli xor orb lods call mov popa dec das sbb jo add or pop sbb ret sbb dec adc adc push inc jmp mov or inc enter jnp fildll sub ret out or adc xor xchg and xor fisubr orl add sub dec in stos dec xorl inc call mov adc add mov pop or mov push ret xchg rcrb fadds das adc dec fwait push or adc inc sub stos inc inc cmp mov dec stos icebp adc inc or fwait cmp add inc push push call (bad) mov add adc lock mov (bad) loopne int3 sbb push push pop lahf in xor mov dec xchg rclb les inc xchg cli std cmpsb xor in sarl cmp test or test mov leave fsts inc jge lea adc push sub popa mov stos lods xor xor inc les mov test cmp cs je pusha icebp inc mov sarb adc sbb icebp sub add add in (bad) or lahf mov (bad) je push add outsl xor push ret or adc sub jecxz add adc rorl pop hlt mov push lock mov jle js add sub in dec mov mov add lock cltd add call adc test rorl in js add enter fsubrs (bad) pop pushf add into sbbl test cmp add cmpsb cmp jns pop pop add mov or repnz stc xor or adc cltd inc mov adc add sbb cmc cwtl and or sahf push xchg cmc scas mov lret and nop pop add nop xchg enter mov push adc jmp adc adc mov push adc add movsl repnz in and xor pusha push shr cmp (bad) add out mov add inc stc mov enter mov pusha mov add add ret push dec fldl dec popa clc or xchg and mov hlt add mov clc repnz test inc add mov mov xchg pop or xor aas push mov (bad) jnp cmc cmpsb or xchg jo push sti push sub xor xor or add inc adc cmp das add mov hlt lea mov pop (bad) mov xor push ds add repnz cmc in or and push dec jnp cmpsb (bad) je aas mov lret or mov sti mov xor or mov sbb int pop fcoms or mov adc mov fs jle dec pop loope repnz andb pusha rolb pusha and mov ret sub iret rolb fist pop daa xor (bad) aaa adc (bad) div push xor dec hlt rcrl and add add push add jbe push stos cwtl fistp add lds sbb pop andl sbb xor test dec repnz add test les adc test sbbb add fs dec add push sbb jecxz mov dec jl add into add add sbb sbb nop addr16 scas pop loopne ja (bad) pop cmp jmp jo jnp mov adc stc jbe sbb xchg sub sub pop or jl xor jnp in (bad) fwait nop nop leave icebp divl popl pop xor aas pop xchg sti jge add jecxz push fstpt and popa gs xor jmp adc push out mov mov jmp out push push cmc push mov jns cmp cmpl stos (bad) ret or push in idivb jnp mov stos repz pop xor jecxz cmp aam inc and in push int3 xor pop stos add adc add sub in jbe sub bnd rcr fs mov loop js mov push adc lds sbb cmp add push and or sub add gs cli shlb repnz inc incb and jge adc in mov xor pusha adc mov push (bad) out push add adc fmull lret int3 mov add faddl hlt test sbb pop push cmp (bad) jno int mul (bad) popa clc jbe dec repnz fistpl ds mov movsb or push and clc dec out adc movb clc insb jmp push test jnp xor mov cmpsl scas insb cli inc repnz cmp pop sti lahf (bad) mov mov enter or lods mov and cld mov dec bnd add int3 xor sub imul sarl xor outsl inc cwtl test js insb je (bad) pop push es mov add inc add in pop cmp or add aaa ds mov pop adc test push fucom add mov (bad) nop in push mov pop inc or dec in and push xor stos and dec ds pop add mov cwtl push adc adc data16 sub stc fadd dec mov sub shlb repnz clc int3 cmp mov (bad) fdivs add lret xchg cmp in jbe push inc nop add repnz or push int push out adc and nop stc nop mov mov repz jbe repnz dec push adc cmp int3 (bad) jecxz cmp (bad) repz addr16 loopne xchg in adc mov cmp call test into pop fsubrl imul aad ds fidivl roll add mov andl push aam enter jl fdiv shrl add out dec mov add jbe xchg mov add push test ljmp les xchg icebp in (bad) out adc or or sub push adc adcb les subl repnz (bad) mov add adc sub sub insb test les xchg cmp dec add ljmp bound mov js pop nop test mov rcl push cld ss sub add push les fstp bound adc adc mov xor loope dec and inc movsb in in push hlt ds loopne and and lock add jae push dec jmp call mov lds bnd je lock (bad) mov push dec xor push pop dec out or repnz mov pop push sbb mov test dec jnp add push in jle xor outsl addr16 add loopne and dec insb decl hlt xchg xchg or scas adc adc fdivl pop and lret pop jmp and or adc testl addl pop out pusha mov push xchg cmp mov xchg test (bad) int3 pop mov cmp fdivrs loope jl,pn add test ss push loopne dec cwtl cmp mov jbe movsb mov jecxz hlt sbb mov add push cltd xor dec jl je mov fiaddl test fprem es and mov xchg clc or pop (bad) ret xchg lock into lret loopne push icebp mulb cmp add outsb cmp ret or movsb mov push and insb or mov add repnz and cld xchg rolb mov xor sub pusha sbb inc push (bad) nop jo mov cmpsl sbb pop cwtl je inc cmp jns and jp adc xorb clc repnz add adc dec insb or fucom push push jge or ds adc xor add test adc cld pop fwait je je dec mov push inc cmp dec fsubs lods jb xchg in mov repnz inc push je dec xchg jl fs enter mov enter xchg fisub lret shrb push xchg push mov cmp add (bad) pop adc dec sti add in es mov mov and sub dec pop dec lods xlat test sbb xorb cwtl xchg mov repnz clc pop hlt xor cmpsb cltd push adc mov sub add jne and mov push xchg push jecxz repnz jmpw sbb pop mov xchg add repnz xchg or movb push xor addr16 dec push add sbb mov movsl add sub or fs xor arpl mov in inc in add lea sti sbb sub sbb (bad) divb je out xor add pop cld add outsb mov add aas jo insl mov mov test add ss sub sub sbb cli push dec repnz nop cmp jecxz xchg push jnp sarb jl adc pop inc add loopne xlat fsubr sarl or jne sub or or push pmulhw ss fwait jle mov loopne shl mov jo js pusha cmp inc dec sub in leave sti or pop jmp rcl pop push inc mov or js cmp (bad) lock nop faddl mov dec xchg hlt add mov jmp push outsl and adc add jecxz mov ds cmp mov fistp add je test cmp insl int3 or repnz pushf inc add add mov mov fs dec jmp push pop push inc in mov dec es test cmpsl mov xor and add pop ljmp cmpsb jo xor ficompl enter adc pop jo push ja pop mov add push dec adcl sub dec pop or push repnz inc or lods and jp,pn mov or sti add xor mov les lds sub movsl lahf jge jnp sbbl cmp pop push cmp inc xor test pop and in pop cli cmp sti push jo negl jg adc or loop or movsb bound rclb cmp popf mov inc data16 in sar mov jmp scas add or inc and sub adc xor insb add inc push pop adc push jo (bad) jmp cli or icebp inc mov ret mov out add fmulp cmp or push jmp xchg pop aam pop repz int3 in repnz and add out sbbb sub mov dec add (bad) fsubs pop and punpckhbw mov mov out int3 outsl int jbe lret iret push dec mov pop lods (bad) lods push cwtl mov add and and mov mov mov scas das mov ja inc stos cmc aas insl add push xor sahf xor adcb pop or and push xchg fstpl add inc inc xlat push add dec scas mov push je faddp fsubrs mov paddd test movsb xchg ficoml stos iret cwtl (bad) sub add adc pop movsl mov orl and mov inc addr16 loopne pop scas popa lret adc dec push test pop test and jns xchg stc sub test popf mov and cmp add cmpsl sub or and inc cltd rorl repz or jns cwtl add mov xchg or lcall loope shlb mov xor add ret ljmp sbb pop (bad) sub push arpl iret push and sbb inc sar pop arpl sbb dec aas les sub cmp mov leave fistp or add sbb pop lock scas sbb aas mov outsl xor xorb add (bad) call push loopne cmp inc test aas imul mov andb cmp cmpl iret xor xor sub hlt sbb (bad) cmp add sub mov push adc adc roll fisttp int imul xchg add inc xor or cmp cmp les adc fldt imul xor lea test lock dec loope cmp mov adc or cmp push iret push andb ds and gs cmp add int3 sub xchg dec adc sub lock jecxz and movsb xor xor movd inc sbb or pusha pop stc (bad) and xor out cmp push fsubrs and dec mov push cmp and mov xchg cmp mov push push fcoml dec test in clc sub mov loopne cs clc sbb int3 ret insb add adc mov xor or hlt or adc sbb or shlb sub add mov cmp sub sub lds cmp sbb mov sub mov mov sahf inc in pop aas call nop ds jne push push rolb mov rorl enter cmp jl sub push pop adc test pop dec nop fstpt daa cmp xor shrl bound pop add xor cmp or sub cmp roll or and out and mov hlt or and into push and mov enter and xchg gs adc test sub cmp xor cmp xor cmp cmp int3 loope xchg adc inc mov sub xor cmp fnstcw xor enter js push sub in or mov sub sub inc and mov or clc xchg xor sub loopne sbb adc test add cs jle cltd addb ss pop inc mov or lock add loopne dec fsubs mov xor in push pusha sahf outsb add adc adc in lock push add sbb inc pop les ds dec clc jo and lock cmp sub les sub or shll inc xor cmp sbb test add sti int3 lock pop repnz jmp dec mov cmpsl lahf divl mov push fstps dec repz sub push psrlw popf into and mov cwtl sbb jno mov mov or arpl data16 add sbbl les add jge sbb dec pusha imul jo xchg add out fiadd gs mov jne sbb bound add sbb fdivrp adc pop dec cmp push dec and outsb lds add int3 inc loopne sbb dec pusha mov mov clc and out mov or and loope pop sbb add and add sbbb lods stos push mov cld (bad) pop jmp fsub mov fwait pop shll cld jne ljmp into adc fistp dec popf cmp rcll pop cmp add call adc pop pop and fldenv xor inc subb cmp xchg sub dec call or and fldt mov sub and dec push cmpsl dec or inc xor lock minps mov add sub and xchg mov pop jo inc mov iret sahf je shrb dec xchg aam sbb add dec sbb mov dec mov xor and and cmc (bad) popa dec sbb imul mov sbb mov pop enter mov inc imul mov or dec lea jmp push dec dec out dec inc push (bad) mov lea add inc push jecxz inc cmp mov popa adc adc inc sbb (bad) nop dec out sub fisubl inc mov inc mov int3 rolb mov xchg lods push sbb test adc adc ficompl push ljmp daa sarl and and or (bad) lea pushf ficom cmp aam sbb adc cmp cmpsl xchg push mov inc or leave sub mov stos ret add lods stc daa pop push ja push push dec sbb leave rcrb sbb (bad) (bad) rorl jbe add xor imul inc sbb adc jl shrb add sbb inc pop cwtl cmp jl push and mov int3 jmp xor push inc lds cmp enter pop xor push inc das leave dec push nop adc jo adc lret out inc pop adc mov xlat int3 cmp popa and aam (bad) movsb adc mov push fxch cmp push xor lahf fisubrl int jle or sahf or popf add rorl push lods jle dec adc leave ret xchg and and xchg adc enter sbb shlb xor push mov fmuls out icebp iret xchg insl lahf dec ret cmpsl mov and sbb popa add mov mov inc js xchg mov add insl and setb mov and mov sub push ret dec enter jp or inc adc add add mov je cld xchg push sbb mov xor clc jg fsubp xor mov dec shlb mov dec stc inc pop rorb sub sbb mul in and push test sub sbb fnstcw cmp dec add add repz call mov dec pop add mov xchg and push cmp enter xchg mov xchg and inc lods dec add cmp in and in or adc imul xchg add sbb push movsl aam (bad) sbb dec fist and inc adc out and in add call sub push lods sbb xlat inc or hlt add push cmpsl rorl and push lea lahf aad rorb daa test sbb mov xlat dec sbb je pop mov inc fildll adc add mov push xchg push shrb inc add mov cmpsb inc lods mov add and push lods xchg pusha or shl push in jmp xor mov add hlt rolb inc movsb cmp mov (bad) mov fcoms and outsb out cmpsb jge je push mov xchg add scas mov jmp jecxz pop cmp xor lcall (bad) dec fs dec mov sbb sbb xchg mov mov mov mov mov fstpt sub es jecxz xor xor (bad) dec adc shl flds shl xorl and inc cmpsb ficoml nop call nop push outsb sbb test call lea (bad) and shlb dec or push cwtl loopne sub xchg dec and push and inc lods cmp jne sbb fldenv stc add or les test fidivl dec push test ljmp rclb lret xchg pop adc xor xchg adc bound mov add inc repz fisttp push xchg movsb or pop push mov int dec xchg das xor fwait sbb dec sbb push adc pop add or inc (bad) dec or rcr shlb sbb push sbb mov mov dec lock fisttp cmp pop and (bad) rorl push sub mov inc ret push sbb into dec and add cmp dec das hlt (bad) add scas out adc lock addl loope or lods inc decl dec shrl call mov sub sbb sbb inc mov cli sbb inc push jae mov out dec xor lret push test cs mov cmpsl and inc out imul inc inc test js hlt pop pop inc mov fcoms mov lcall in andl imul or sbb and or push xlat clc test loope push cwtl mov mov inc rorb fist dec add lcall sub insb sbb (bad) mov int (bad) movsl cmp je jmp mov popfw stc loopne dec push stc cmp pop inc add inc addl adc or popa daa xchg test test mov and idivl daa stc into mov ret cmp clc (bad) xor pop xor xor fmul aas lret rorb pop and pusha call and dec push push xchg loop jno dec or or adc sub mov inc insb add mov data16 sti cmp scas pop add mov mov inc into sub insb inc roll or jbe sbb or jae push xor push mov sub lea stc sub adc push xor sbb in inc sbb fmul mov pop in xor and jnp lock fildl mov movsl adc dec bound int3 inc mov int3 push push es fcompl sub imul ret ds or xor loopne sub enter push adc test and and xor mov aaa mov cmc and ret jo testl and int arpl into test lret xor cmp inc fnop inc jge aam (bad) scas popa (bad) jbe pop enter fmuls xor adc out pop out sbbb aam mov js in cltd (bad) (bad) and push and shl add mov (bad) cmp fcomi jmp lods xchg cwtl insb inc shrb cwtl add jno sub inc mov and hlt and inc sub adc or add jns inc adc push in movsb and rcr lcall push lods and inc or dec test jmp orl inc dec mov xchg jb mov loopne dec push or cmp mov xchg push xchg fs adc popf and testl mov gs test enter hlt cwtl and gs sub lock cltd dec pop dec test aam mov inc movsb cmp and add je or mov mov mov in sub xor rorb cmp movsb out or pop jl adc mov adc push mov dec sbb adc (bad) data16 and cmp mov and mov inc and lods and stos mov and add adc sub xor inc mov push and nop (bad) mov fs pop lea dec loop sbb sbb cmpsb lret call or in nop popl sub in dec (bad) mov or push inc pop inc xchg je push xor (bad) xchg lods (bad) add fbld dec adc mov dec mov into shrb push pop dec dec xchg out and and add inc nop xlat (bad) push sub in cmp push mov xchg add add jg andl xchg orb adc pop fiaddl daa (bad) push movsb or add sbb sub leave fsubrl xchg sbb sbb fsubs stc and or scas pop test pop jg add xor xchg xor or adc pop ret dec ret jmp inc or adc add xchg daa fldcw push loopne int3 inc popa ljmp mov iret sub enter cs mov push and enter add in mov mov adc lods pop pop add out xchg lock lret sbb xchg mov dec jge xchg dec adcl loope fiaddl cmp int fadds or or inc nop cmp and popa icebp lcall and xchg test andl dec lret test inc flds cs adc xor and dec xor push aad int3 jbe pop inc jnp in xchg dec jbe fsubrs or test inc pop mov cld xor rorb ljmp mov mov test mov movsl xchg adc add pop and cwtl (bad) loop out or mov mov pop lret outsl das aam or les adc out xchg and cmp inc rolb mov negb push lods xchg das pop sbb loope popa push lret cmp es adc dec lcall es hlt inc pop mov js sub mov adc dec sub push sub jmp xchg and insl cmp add mov inc ror je inc dec mov subb add xchg sbb cli xchg and mov jge push push repnz sbb les movsb sbb lahf loopne enter (bad) es cwtl aas fdivs push icebp or add test outsl push dec mov loop das push rorb shlb into js dec and test inc and xor bound in aam mov das jg add or dec adc dec adc xchg jecxz bound mov inc out push test (bad) (bad) mov aam jo jnp mov leave mov js cli fnstenv std test or rcll fnstsw dec rclb xchg and jo jnp xchg add push inc sub mov out sbb shrl adc push add mov add scas dec cmp std je orl ret movsb push mov pop scas je adc adc add push dec add inc in ljmp or dec cmp inc push adc adc lock jnp push in push cmpsl es addl adc pusha clc dec add cmp add sarb cmp add iret xchg adc inc int3 (bad) aam mov es xlat pop xchg or pop dec or fsubl aad pushw outsb xchg pop sub pop push adc sbb sarb xchg es or flds xchg ret push dec pop fcoms dec rorb (bad) lods and adc ficomp cmc in pusha pop and dec push mov mov sub aam hlt push and ljmp fs loope loopne in adc lret dec ret push xor xchg (bad) mov repnz fadds push imul push xor xchg cmp sub imul in adc dec mov (bad) lods xchg adc add into or xor push xchg aas xor sti inc test mov jno pop push mov out xchg mov mov mov test inc xchg mov ja add imul (bad) neg (bad) xchg pusha inc adc push ror push shlb xchg inc call sbb mov inc test subb out test ret movsl pop mov lds push mov inc ret and or rorl add xor ret lea les push inc call popf sahf repnz cmp xacquire cmp sbb sbb mov jmp add mov pushf bound call dec in testb sub icebp scas inc add adc aad (bad) mul cmp mov imul adc xchg movsb inc xchg push mov cmp adc stos (bad) les jno xchg or std mov mov xchg fs cli mov push xchg nop and nop (bad) divps pusha inc push push dec scas cmp aas pop ds mov add fdiv and sub mov fsubs jl lock leave fcompl inc mov inc adcl js roll sub push mov push int mov mov push mov jns ss sbb adc test xchg mov jl push inc xor enter popf inc add dec scas movsb adc sbb xor cmp scas shlb sbb out or xlat push inc dec adc pop enter push mov in sbb cmp inc inc testb xlat xchg enter lds aam sub jbe sbb lret and into jb dec sub cs sbb pushf nop es dec sbb mov mov loop and sbb push push xor adc push out inc cwtl pop push dec in std mov xor sub push in cmp dec xor or push adc das mov pusha mov push lods popa clc push pop or inc mov (bad) cmc cmp mov mov loop popa xor xchg sbb pop movsb sub pop rcrb adc and xor inc sbb inc add sbb mov xor mov pop xor or or and shll sub xchg and mov pusha rorb inc push and inc aaa jb (bad) clc push sub adc lret les xor mov lea pop sub xchg inc mov int3 xchg shlb xor movsb ds inc xor shll adc xor mov sahf shrb fcompl inc das and inc (bad) jb xor push addr16 fsubs aam mov xor iret popa pusha and add sbb call lret es (bad) outsb ja xchg clc incl dec inc aam mov dec add sbb sbb ret xchg pop gs xlat jl mov rcrl sbb (bad) lret add jnp pusha ss std ljmp xchg xchg insb xor adc add add pusha clc dec (bad) enter cmp outsl enter nop in jb mov in cmp add mov (bad) mov or popl push sbb in arpl add and add xchg loope js push push inc dec and sub loopne xor icebp shrl dec sub add push jp xchg mov cltd fcoms ret jecxz jno mov push adc push jle push int mov add sub mov jmp (bad) mov clc push xor hlt enter or xchg or pop adc fadds cltd mov or dec dec xorb call mov or inc test inc (bad) jp add mov cmp aas ret loop mov rclb inc cmpb dec adc popa mov gs inc aam and push push daa xor xor jge or out xlat add push adc loope (bad) or xchg add sbb (bad) or sub mov mov (bad) adc push add add movsl xchg cmp and aad cmp imul sub push lret hlt or mov jmp push xor (bad) (bad) hlt imul or stos mov or test sub dec int3 icebp je pop (bad) dec cld (bad) mov sbb mov sbb adcb xchg sbb js (bad) dec mov imul int3 mov aaa fsubl inc xchg jle jecxz jo rorl and jg (bad) adc out add dec pop sbb sbb mov xchg jle xchg or and jno sub sub push and push lret push add mov loope cmp jne mov sub int add inc jle and push fwait pop sub lock adc add aam sbb push repnz push sbb std or negb leave adc push xchg cltd inc je pop dec xor dec sub int3 push pop sbb jbe faddl (bad) hlt mov mov jae ja cld push in rorl ret pusha jns hlt push rclb push ja sub aam cmpsb xor and adc push js sysret sbb stc xchg sbbl fdivs cmpl int3 addr16 data16 pop pusha add mov mov push int loopne (bad) sub mov loopne enter aam cld push adc pop dec hlt sti add sub or cltd test inc test adc adc imul xchg (bad) gs cmp jb lret bound ja or mov push clc xor clc nop (bad) icebp or aam aaa dec add or add loope nop mov adc xchg dec aad mov xchg rorb sbb push icebp (bad) hlt clc loop roll mov mov add jmp push xchg sub jno rorb cmc dec clc inc jns sub or xor clc (bad) (bad) popf xchg fwait inc and or mov adc inc add sbb and or (bad) das addr16 xor add in dec xor adc stos ficompl dec add (bad) jae jns adc push sub push ja jno adcl sub or mov or outsb fstps scas mov insb jmp cld or mov push aam add or mov adc out test and daa cs out xchg sbb lahf xchg mov andl cs push pop cltd and orb in push adc inc xor mov jge sbb icebp and mov sub and popa xchg (bad) (bad) leave sub push xchg mov inc cltd mov into pop cmp sub sbb sub cs js mov xchg sub and or cld andb pop jns icebp repnz rclb or push and lea or pushf shld jle clc std stc lahf or leave sti xchg sbb mov popf jo lds dec outsb jge or pop loopne sbb (bad) jo aam sub cld xchg push ss push mov faddl (bad) xchg inc mov not add dec sti sub inc xchg inc add add add mov hlt adc mov rcll push inc nop jb (bad) clc pop mov xchg pushf (bad) std xchg push jmp xor push push mov push add cltd jb daa inc int or xorl add faddl and add xor iret and insb cli fwait sub vcvtsi2sdl out push movsb and mov nop/reserved (bad) xor rcr xor je (bad) and adc (bad) sub psrad imul add mov ret dec imul ret sub or push insl dec fmull (bad) pop jp push sbb pop or adc xchg sbb and and fadds jge lea mov or mov and adc add mov adc sbb xor faddl or jl pop movsb and in mov out push hlt ret fsubs mov adc leave pusha adc mov fisubl mov in jae or pop rol pusha jo bound call xor sub push cld icebp je or sbbb add adc shrb mov enter dec aaa icebp and fidivl enter jns push push mov add and mov dec sub or adc jecxz dec add loopne add and fmuls ds inc push int3 std mov xchg sub jmp cmp orb xor add inc enter call daa shll xchg or mov push mov loopne lcall xor and insb cmp inc mov push test call lods or andb push pop jbe mov pusha in vxorpd mov adc sbb sbb xor fsubrs inc shrb leave push imul push xchg jmp mull in add enter push sahf call inc push pop dec outsb (bad) faddl jp xchg push sub test push gs push adc scas in pop out mov movsb dec sub and (bad) lock add cmp and mov andb sbb hlt sub inc mov push mov xor cmp movsb movsb mov cmp fidivl setne mov out xor mov test dec mov orb pop addr16 inc lret push aas and sbb adc je mov (bad) rclb sub sbb dec or xlat sbb or mov sub test jne add iret xor fdiv outsl xchg loopne and mov pop mov cmpsb mov jl nop call adc fisubl xchg (bad) int3 or or sti push mov popf sbb mov sbb dec loope out lea jb movsb je or push pop add (bad) xor sbb push test add mov movsb mov and (bad) or sub push movsb inc mov xor test xor push inc test xor mov clc dec push xorl mov mov mov xor push inc fist dec fistl jge and sub (bad) or mov inc ror adc add dec arpl add clc cmp rorb pop mov or (bad) mov imul rclb daa push xor leave sub repnz xor adc loop cmp addl push sahf xchg xor sub adcl repz sub add or shlb fldl xor subps je mov dec popf xchg in cmp mov inc fcompl mov dec push adc je add mov imul xchg xlat and (bad) out out stos xor xchg jl js jl and adc xlat dec pop pushf cwtl (bad) rorb add mov adc rorb sahf dec mov fdivrl lock sarb in iret mov shlb inc mov inc mul sbb mov pop jge jmp push add int dec pop push sbb dec mulb add cmp int sub adc xor mov popf stc mov icebp add mov xor clc loop les pop add scas addl sub mov xchg inc pop jne,pt sbb insl pop jo mov sub mov aas nop js sbb dec das fnstenv add xor push aam xchg jbe sub divl call or dec mov adc sbb outsb xchg enter dec cmp inc fdiv popa mov xor fistp rorl mov repnz shrb add ljmp xchg test sub gs xchg add jne test or push dec rolb pop sahf or pop cmpl and add jns pusha divb and or out jne jmp or sub or cli aad cmp add xor inc xchg out jmp stc outsb mov dec inc repnz xchg loopne mov test mov sub imul sub mov mov rol and cli pop loope fs daa cmpsb mov inc pand addb (bad) imull pop nop dec jo cwtl insb add xchg lcall andb push mov push jns pop (bad) notl inc mov into or cltd jmp jmp add push pop cmp mov sub and cwtl sub xlat lods mov mov jge adcb cmp xchg into jne ret and aam adc (bad) hlt notb push pop mull (bad) jge sbb cltd mov inc (bad) push push push lcall call cmpsb cld into inc (bad) aam dec popa sbb je loopne pop adc int3 xor mov movsb cmp or xorb dec fucomp jp repnz cld inc out flds dec pop idiv inc adc mov inc jmp jge ror (bad) xchg fwait jno lea jns orb or or rolb pop add inc into xchg in (bad) mov (bad) roll pop lods mov lahf or add jmp or cwtl xchg in xor adc dec jbe decb (bad) jae xchg xor and xor lds adc sti cmp out sub movq imul ljmp jp cld dec add lods jb mov (bad) imul sub loopne negb mov sbb test mov mov inc jae aas cmpsb cld cmp insb nop call pop inc out sbb inc inc jge bound sbb inc fst aam add jnp cmp add mov into or adc mov inc cwtl dec jp add xor sbb lea dec cmp lods enter scas sub pushf jl nop lret lods dec and dec inc punpckhbw and jge jb adc pushf push inc xor sbb es lock xor mov enter or add inc lcall push pop nop xchg mov xor std jne les and pop add sbb and les mov xorl mov fs and jo mov add fldenv dec mov jne push push mov int sub jp and cmc xlat sbb mov lea clc mov add adc cmp (bad) fs std fsubrl outsl pop mov fistpll loope jmp clc mull movsb adc leave adc pop sub mov into xor adc sub add pop inc jno or pop mov jl or sar pusha and nop push scas je cmp adc clc (bad) mov rolb loopne xor xchg lea aad pop int mov mov into cltd or lods repnz icebp dec xor test sbb adc fs adc add call imul add pop and add inc nop dec xchg mov inc lods (bad) cmpsl (bad) dec inc movsb cmpb jmp sub cmp loopne ss mov mov push inc movsb sub and push (bad) jl pop dec rorl and (bad) notl rcr movsb mov hlt xchg dec push stos clc mov es clc lret enter arpl add cs int xchg outsl lcall cmp pusha cmpsl cmp leave cwtl add int rcrl push inc xchg inc or or adc mov xor les mov push cmp fsubrl jb jne mov nop sub mov ja add xor cltd mov push adc mov jo in mov aas orb mov fdiv inc and cmpl jns (bad) jle mov cmp fsubs stc jo xor fwait pop inc loop pusha je push stos push jle or subl jge hlt test push mov cwtl xchg mov enter mov mov xor (bad) cmp mov sbb add adc in mov pop repnz mov icebp push xchg les xor hlt mov sbb mov mov cwtl pop arpl adc xor and and scas push cmp sbb decl (bad) fnstcw push fs cltd aam adc fistp dec call repnz (bad) mov hlt in roll sub in jmp hlt mov add jbe sahf sbb push stc xchg xchg sub xchg sahf xor xchg cli dec and add cmpsl cmp add aam lcall jae push push outsl cmp mov mov addr16 es lock add mov or adc push into fdivrl in ja cmp gs adc test clc in ss and add xor in or in jp andl sub sub xchg int3 jmp or add push pop add and dec adc add add sbb or push mov inc iret xchg popa sub js xchg push mov inc mov pop mov sbb out jno subl and mov (bad) push sbb and mov addb mov cmp sahf add mov ret mull or sbb leave mov add xchg loopne mov rorb add mov gs flds (bad) xor mov loop cltd add cli or call (bad) push mov mov push add cmp xchg push out aad or (bad) mov sbb imul test inc or dec rclb loopne add sub add mov xorl or je or js lret into xchg push jmp cmp jno in push ret aam ret inc sub hlt (bad) ja cli data16 lea jl (bad) xor add in mov dec (bad) icebp adc add or (bad) (bad) and sbb push push jns es int3 or icebp ror mov enter inc dec xor inc stos hlt into test jae ja cld in fsubr cmp repz je cmp push pop xorb add out mov adc jno jns push add mov popf lret sub repnz or mov lods les mov dec or aaa scas mov cwtl mov in cmp dec addr16 xchg cwtl dec into adc jb test arpl jns and add xchg push das inc clc cld add (bad) int data16 jmp lcall push jecxz dec cmp and pusha (bad) or mov mov jmp lods xchg cs and ret js ret inc movsb in pop and movsb (bad) movb mov addl stc pop fbld inc nop pop xor leave xchg (bad) lret sbb fldl and int test mov out mov loopne xor or nop loope (bad) stc and test faddl mov xor sti push inc data16 les nop sbb insl cltd aad xor hlt and add call into xor xor pop and add xchg or and outsb lret in add hlt aam jae jbe inc lods movsb adc outsb and outsl insb es insb xchg repnz push mov call sbb mov mov xchg or cmp jno xchg add cld imul inc mov int lret mov (bad) or addb xor push or inc mov rorb pop xchg fadds mov movsl or xchg int3 and add int3 mov mov inc dec jmp imul and daa in cmpb xchg inc and bound in and xor faddl in and adc cmc pop es test add inc ljmp or cs popa dec mov dec inc push xorb adc and insl adc into add sub mov adc sbb and or mov push and cli rorb std icebp aam es and adc adc sub sub adc sbbb bound sbb adc daa pop pop and and inc frstor dec mov and hlt popf xor arpl das cmp adc pop xor cmc dec push mov push dec sub push ja mov enter push xor mov int3 cwtl pop nop sti dec jbe mov pop push pushf mov pop cmp push mov shlb test xchg push dec mov mov mov ret test shlb fsts sbb xchg nop push in rorb add fstl pusha push jne mov and enter sub fldcw dec xor cwtl aaa sbb aam mov mov inc lahf popa mov jne mov cld test mov dec jg test subb dec cmp call rorl pop es mulb sbb and mov shlb jae je aaa repnz (bad) mov loope xor negb addb leave (bad) ja adc push icebp xchg and (bad) sbb pop jmp repnz fcoms push ljmp adc cwtl or lcall xchg enter mov xchg nop shl bswap nop (bad) aas imul push sbb repnz mov je lret (bad) jno sbb inc jl dec push sbb out sub mov sbb and xor leave outsl add in mov or aam (bad) icebp adc mov pop faddl pop in ret addr16 mov mov mov adc jns add mov mov jne cld faddp and fcmovne dec add add test inc loopne cs cli pop (bad) mov cmpsl sbb test imul xor lcall pusha dec xor push push mov ss js test (bad) lock bound test jns stos hlt iret mov push mov add push mov scas (bad) and cmp mov pop loope ljmp out insb add loope lahf daa je pop xchg xchg subb or adc sub add inc cmp dec or mov andb xchg xor idivl push nop xchg fwait mov xor inc xchg stc dec cmp lahf add (bad) icebp and sub (bad) mov pop sub jmp test inc adc cmp mulb or call mov iret xor pusha fs cmp stos clc cmpsb push cmp aam push mov jl pop iret adcl pop insl (bad) nop inc pusha cmp dec dec cs mov fnop icebp push cmp dec pop das je loope inc or jae sub or add cli in push ds sbb mov ret jmp jnp mov mov dec adc mov pusha jge cltd aam icebp add cmp mov sub pop lahf cmp addr16 mov adc lcall mov loopne push in pop push add out inc movsb rclb push mov int3 add mov adc dec sbb pop insb add jg shrb pop cltd hlt sarb jg add lods jl jns int pop andl je push outsl rolb test dec dec jo dec adc pop mov adc jo push and jns sbb inc jl sub xchg or out call mov xorb jo and lret add je loope inc or inc and bound inc mov add ret stos cmc add push sbb ret xlat pusha out aas es mov pusha clc iret lcall or cltd jno sbbb cwtl mov std add push cmp jmp xchg mov mov lods sbb in bound push add hlt mov sahf pusha push mov (bad) or or std fs xchg xor lds test shrb scas pop jp xor outsl add and sbb icebp xchg clc or inc lock mov jns add adc sbb xor pop mov mov xor fs push pop adc dec inc cld fs sub movb dec push or push sbb lcall fs je push pop insb or sbb (bad) cltd adc add mov sub and js mov xchg or add push cmp cltd xchg je popa add jo testl sbb imul add mov mov icebp mov pop (bad) xor out pop mov cwtd inc xchg jns mov sbb sbb inc mov cwtl pop fadds stc inc cmc lcall add arpl pusha cmp jo mov and (bad) notb cld jbe or adc and scas lods dec enter in pop and loopne (bad) mov inc pop loopne addr16 bound xchg in xchg jbe sbb rclb dec xor leave out shll imul (bad) or std (bad) cmpsb (bad) insb mov or jno imul xor popf push adc inc xchg mov enter cmp nop lahf leave add fiadd movsb inc in mov jl pop inc mov into neg xchg aam mov add mov mov mov and popw leave fldl or stos outsl add clc sub jo aam cmp adc push addb mov xchg mov or add xchg inc cmp xchg mov test push mov xor pop sti and jb dec hlt rolb pop push sbb sahf mov faddl rorb rol mov xchg mov ret les xorb xlat adc dec sbb dec xchg lods mov js push lock adc push push dec aam (bad) repnz lods cmp xchg int and ds mov shll out out mov cmp adc shrl enter mov sbb cmp mov sub xchg pop add inc addr16 jmp lcall inc mov or jns ret push mov jp imul push cwtl inc mov sti xchg lcall mov stos je sub push leave xchg cmp inc mov inc and paddd or mov or test outsl jo cmp mulb lods leave pop or mov call mov add loopne push nop xor xor cltd lods mov sbb lahf loopne ss in negl js loopne nop out or push xchg adc push imul sbb xchg andl mov movsb xchg pop or sbb insb inc movsb lea into dec xor fwait or cmp and js paddsw enter into mov je in or and pop inc mov push mov mov and cmp scas or add inc shlb or divb das hlt mov add hlt lock cmp dec adc adc jmp sbb sub jae testb rol add mov lahf test or fmuls mov nop sub cmc loop push out and enter repz sub outsl clc es mov in or inc cwtl insb lds sbb mov mov xor xchg cmp and (bad) sbb rcr insb sbb mov cmp pushl mov sub push (bad) sbb sbb test cmp pop push nop lods mov in add or push (bad) mov inc mov push push in std and daa hlt clc cmp xchg push pop testb cs (bad) cwtl stc sub jno add jno repnz xor adc cltd mov into xchg iret sub and dec inc lret enterw inc mov cmp add adc push cmp push popa push subl jns lock jle cltd and add test out add and ds mov iret lods sbb arpl xor movsl or test xchg out push add push mov mov push xadd add (bad) pop dec sti (bad) imul or fs mov hlt fldcw daa test dec inc or mov rolb sbb sub cwtd leave das inc adc (bad) hlt lahf pop aas pusha sbb mov (bad) sub str mov mov or div and aaa mov push or cwtl enter sbb xchg stos jl add mov xchg push mov mov jmp bound stc add mov cmp fcompl mov js jns inc int3 sub cs dec icebp ret sbb ljmp rorb (bad) into cmpsb icebp xor sub sub add testb int3 inc jl ret mov leave add jmp mov xlat cmp inc xor sub xchg jno jb push mov je adc test clc push cmpsl inc pop and icebp imulb enter add mov aam les fsubr dec mov push ss or cld ret hlt sti mov je push stos in xchg or lock dec xchg or or scas loope aas mov add cmp or push cmpsb mov icebp xchg push dec dec je out push inc test es in jecxz outsb mulb cmp sbb cld dec push movsb xchg and jl loopne lcall and pushf sub nop pop pop mov hlt jl addr16 sbb sbbl xor lock mov cmp int3 dec cmpl dec sbb cmp daa xchg cltd mov mov call pop in push bound or add cltd fdivrs (bad) stc xchg rcrb mov sbb pushf sti fwait imulb hlt (bad) repz mov aas mov or popa and cmp rolb adc adc andb sub hlt rol lods inc dec mov add jp inc pop loop add aaa pop sub or adc aas mov and push int3 mov in dec push or incb lahf jbe inc icebp rcrb adc jo push lds xchg dec es inc nop lahf int3 pop lds outsb or xlat cmp adc fcoml mov sarl dec mov push xor add popa adc sub cmp mov xchg mov idiv or mov add cwtl popf (bad) fdivs adc stos push gs lds loopne cli fstpt xor xlat mov dec cmp sbb pop test jl daa jle cmp and jnp test pop icebp and pop in mov jg mov (bad) jnp push xor daa dec or cmpsb pop inc adc ret sbb and cltd cld push adcb push cmp xchg pusha jns test pop mov inc mov pop loopne je cmp int cli stos or int3 (bad) mov imull cmpsb adc inc sbb lods imul loopne jle or sbb mov fnstsw sarl cs add pusha inc adc (bad) inc (bad) mov or adc dec enter push sbb flds (bad) dec (bad) push nop psrad lock add or xor int popf jo mov jae iret and jge mov sarl jno stos nop out push fsubrl dec add jge aaa lcall dec lods sub mov dec je adc and in dec push inc call jl jp (bad) sbb fsts cwtl lcall cwtl jns rolw sbb sbb mov mov sbb xchg sub pop xchg lods or sub mov or jo ss aam ds arpl xor flds nop fstps lcall and push pop jge mov sub mov xor jge pop (bad) cld cltd cmc cmpsl inc dec pop mov (bad) jl adc or xchg sub cmp cmpl sub inc je add mov mov inc sub inc jl mov cmpsl xor sub sbb pop dec ror dec cmp sbbl sbb cwtl mov mov ret dec lods nop jnp jmpw loopne insb sbb mov xor addl or push pop dec dec clc mov add xor lcall fcomps in and sub dec pusha mov repnz jg adc xor xchg (bad) popa jb test in adc xchg cmpsl test sbbb or stos cld lock mov je add adc dec and addb jmp je adc scas cmp push jl insl push (bad) fwait shr add fldl2t dec adc scas outsl xchg inc adc das mov jle imul jo mov int3 lahf in inc loopne or or mov out inc adc in mov mov sub cmp lock xchg xor or in es stos add xlat jae lcall sti sbb in adc pusha push mov mov cmp dec add fsub xchg pop jge push xor sbb push add dec pushf out cmp mov fldcw fnstcw cmp in sub dec pop or cs and jg in cmp add add push mov mov mov and sub jnp and or andl mov xchg mov popa (bad) adc in nop movsb dec sti jle les sub addps xor push out mov sbb and mov add aaa dec inc test mov sahf cmp add lock jge les stos xor mov mov lods sbb outsb mov mov add in and adc inc or or pop test fwait dec daa test imul je cli jge dec out mov in dec lods inc add sub push movsl in xchg jno cwtl add es aad cmp (bad) leave lods les dec lods xor cmp push sbb add inc sub cmp test cld adc std mulb cs fs mov test movsb cmpsl (bad) jecxz subl push out shrl orb pop stos add inc sub pusha cmp cltd pop mov ficom inc xchg and pop xchg and pop lds adc bound fcomps aas add mov cmpsb cld jmp sysret cltd lock jg andb das add lahf lods jae add cmp enter in loopne lahf addb or iret jae shrd mov dec or test adc cmpsb add and movsb fildl xorb add pop inc lock sbbb out cmpsb cmp adc push lods add inc lcall adc jl test and dec pop xor or cwtl add les xor movsl enter sub sub fild mov stos pusha cmpl and js cwtl lcall test push outsl clc and in sub aaa inc call xchg dec mov nop (bad) lock inc adc cmp xor pop inc aam sub push and in add ds rcrl and add and in push pop jp mov aaa add add and mov jb cmpsl xor sbb int3 rol cld out (bad) pop movsb test mov and push adc jns sbbl lcall adc cmp stos adc mov mov inc clc (bad) pop scas bound inc jns cmp pop push dec ja xchg das or (bad) push in dec cwtl sbb add and fcoms add pop int cli mov xchg push testb mov pushf and push inc xlat push andl es ja test rclb movsl cmp aas push push mov dec jmp cmpsl add jg,pt cmp dec mov pop ficoml bound ret lods cmp or and lds push fsubrs dec add xchg data16 mov lcall sub and test jl dec add mov adc les sbb jle enter push cmp call and add clc adc pop push out test dec es pusha and pop (bad) notb out xor sub xor sub and pusha add jb dec jmp push or add inc inc pushf cwtl ljmp jp push inc and cmpb scas xorb and in movsl inc mov scas stos xchg ret call xor and outsl adc cld sbb add adc dec add clc add dec dec pop inc leave sub adc sbb scas sbb mov add fwait jns das dec and jb ret jl in sbb jp cmpl fimull cmp mov cmpsb insb rclb and or in push and add sbb xchg enter (bad) lea cmp push jns pop aas xor cmp sub pop les lcall mov cmp cmp xor clc je cmp add dec leave jne sar cmp push mov sub lods nop mov shl dec fsubr loopne ret hlt je push movsb cltd or push in fstps add test mov or xchg jne jns mov mov mov cmp adc xchg lods and xor stos mov push pushf shrb and mov dec xchg mov jno adc data16 mov lahf mov jmp mov push dec adc iret add dec movsb mov lret add scas jl inc sahf aam mov push ret or orl ror stos loope dec xor pop xchg js push push lret xor loop mov fdivrl or inc cmp adc add and pop or inc pushf mov in or dec and dec cmp pop xchg out sahf add add adc test dec pop xor cmpsb and cmp xor mov push xchg adc inc enter icebp sub mov push cmpsl mov test jbe lock push sbb out hlt inc and sbb out cltd loopne xor (bad) pop mov cmp xchg daa movl dec xchg dec jge pop enter adc andl xor push jg loop mov xor pushf dec insl cld add sbb adc cmp pop addr16 xor xchg test or popa add add js mov adc and shll inc int (bad) (bad) mov ja add sahf lds scas fsubl mov mov enter mov mov movsb xchg sbb push (bad) add lods mov inc xchg pushf push sub cld add sbb jg pusha insb mov ja aas sbb imul fxch adc popa fimul movsb jmp sbb pop add addr16 xorb or inc add xor movsb fmul cld pop js test fimul outsl sbb or repz pusha sub int3 sub neg sbb cmp pop push cmpsl push jae (bad) lock js mov add out push add test pop inc fdivr mov jnp or sub movsb inc sbb cwtl pushf loopne dec add fidiv decb fnstcw jae xor xor push xlat xor lret sub repnz dec add movsb jmp sbbb orb iret sbb xor aam mov enter in push stc inc cmpsl js addr16 popa or mov sub or nop cmp pop cwtl cli mov xor and mov push mov nop lret inc or add push inc int3 sbb pop into mov loope push mov cltd mov iret cmp stos nop or gs scas inc int3 sub cmp pop outsb shrb mov in mov cmp mov stos xchg hlt (bad) mov adc fcmovne pop movsb cmp and call push or stos push int3 pop mov jg jno pop inc dec add push inc decl cwtl xchg je in add dec pop jb mov xchg out addr16 scas stc sti add repz add xor sbb and std mov mov mov (bad) mov add sub enter xchg ds pop or xchg stos jb inc sub pop push test pop pop mov sbb sbb jb add loop add scas mov xor mov nop adc xchg push mov je fisubrl adc orl mov inc test xor add xchg fdivs fdivr sti jecxz xchg rcrb ja cmc sbb test loopne out adc mov stc jmp pop xchg cmpsb jl ss and outsl dec inc xchg pop loope add fsubp add aas and sahf js jnp ljmp lods insl in jo aam mov stos xchg call test adc xchg mov pop sbb stos xchg or mov mov lods sbb scas jle imul sub bound rorl test adc add stos popf xchg fadds lcall mov push mov scas nop xchg nop lock mov and mov call xor lcall in test xchg jg xor loopne fidivl xchg test push fbstp add (bad) and lock mov pop push mov cltd push xor (bad) mov and mov nop data16 xchg push adc and push sbb int3 add out or push fsubrl ret xchg xor sub das sbb pop cwtl fisubr gs test aam add pushf pop mov sub in ficoml enter xchg xor xchg in aad out sbb dec mov or nop xor test sub xchg pop cmp stos loope cwtl fmull mov add stos jne clc repz xchg (bad) imul sub lds rolb scas nop cmpl nop iret mov cmpsb push sbb push mov adc xchg or mov call lcall les nop out inc mov pop xor sub lods mov lret or stc test pop xorb inc xchg in xchg sub clc cld iret or jns sbb mov jno lods push or cld fmul int3 shlb pop lods iret add mov adc mov cwtl rorb cmp mov sub cmc dec cld and sbb mov orl adc outsb xchg mov repnz out sub or pop and inc das inc rcrb mov aam cmp rolb and test cmpb mov daa shlb stc lret sbb mov scas shl mov pop les sub out xor fldcw fisubl add and push loop mov xor adc pushf mov sub adcb sbb addb adc inc mov ljmp fcoml sbb push inc sub out movl and push inc pusha and test fadds pop sub jo xchg jmp pushf out daa jp rclb cmp mov adc loope or into and jge lods in push aam mov out test push setns inc pusha adc jmp push add mov push inc mov shlb jmp and xor pop rcll pop cmp sbb andb int3 ljmp dec stos sub fwait arpl inc insb inc enter adc (bad) mov mov cmpsb add add add jl insb pop loopne cmc xor sub enter adc inc cmp cmp sub adc pop pop xor cli call addr16 add add idiv adc es js mov icebp jb pop inc pushf loopne insb add or jno inc and rep test fdivrs sbbb aaa jne inc leave or xlat into adc mov or adc out inc push nop dec sbb mov mov push or mov or je cmpsb or test jb jae cwtl sbb pop js adc shll mov jb push cwtl inc or and push mov cmp mov pop fs adc in test outsl popf cmpsb mov or sbb sbb add mov ret in (bad) fdivrs inc cmp rorb cmp stc dec dec adc jl mov adc js imul adc nop arpl sbb loop fmul pop adc inc lods and add lock mov sbb or mov cmp sbb ds out movsb insl push or pushf xor (bad) stos and mov dec cmp out adc fsubl cmp pop or mov inc enter dec sub or pop movsb popf les dec in and cli scas pop inc cltd jno xchg sub or mov js inc or mov clc mov cmp add mov xchg jmp es or and in mov add fnstsw inc push js dec or push outsb add push xchg mov add jno lcall mov xchg push add dec inc (bad) sbb push mov decl add jmp mov cmp xlat xor sarb ds dec sbb in movntps es jg mov inc jae push les jno push sbb (bad) xor out movsb dec add mov (bad) xor aad lds add or addb iret mov inc jecxz (bad) xor mov jne mov and mov sbb and push rorb jle cmpsl inc push std cli mov mov dec xchg dec pusha adc pop shl and or shlb sar sbbl mov or stc aaa cs xorl adc in jge mov dec sbb into add jne add mov cmc rclb push insl push xchg (bad) scas into call out lcall test cmpsb pop int push add shrb pusha mov fs das arpl repnz (bad) iret lret add sub fldenv aam sbbb stos nop add mulb sbb (bad) push add adc xchg movsl lret roll stos les int3 ret and xchg and mov nop (bad) pushf mov push add pop jb jno or and sbb (bad) mov sbb cltd fidivr mov rcrl or inc add test subb sbb mov lock rcll inc mov push jno (bad) add sbb mov lds enter cmp mov jle sub popf (bad) xor imul mov popf jb xor jmp adc std mov sub mov lods mov test xor xor divl arpl cwtl cld ret lock nop push push mov pushf imul aaa fcmovnbe or cmpsb add xlat or and jge dec adc (bad) hlt sbb cld add idivl shlb mov add xchg fsubs es push mov pushf fisttp (bad) rolb je aaa mov jl mov sbb xchg add decl mov (bad) ja add mov jg and aaa push popf mov inc popa jg nop cmp xor and hlt lods adc les jg dec adc add das scas mov out orb sub notl shlb or add cli cmpsb pushf add xchg inc test test or pushf dec lods and dec jge addb jmp sbb ss cmp add xor adc add test inc pusha adc imul xchg stos das shlb flds pop mov mov and movsb movsl add xchg mov out add pop fwait test xor popf adc test fadds cld mov movsl es cmpb jno add xchg iret hlt lahf mov ja sbb xor dec aaa lea sub and (bad) das dec and cmp push xchg stos cld divl int3 jns sbb aas inc adc jge in add je fwait xchg aad hlt xchg sbb sub dec imul xchg adc push pop sub lcall and jmp rclb mov in add (bad) scas inc mov imul xlat inc faddl ljmp aad lcall faddl out inc mov cs pop pop add aaa pusha add mov dec lcall iret sbb lds inc lret lcall mov add xchg add call adc (bad) inc add mov add sarl insb popf push (bad) jle inc or out mov jns add sub incb insb movsb jecxz pop and rcr mov fcmovnu pop call add leave mov adc add lock movb inc xchg jno ret nop sub sub aaa lahf stc mov mov bound clc sbb sbb ret cmp jb pop (bad) pop dec mov or jmp loope add roll or pop pushf add (bad) push push mov add mov ds cmp mov (bad) hlt (bad) cmp push and adc sub inc adc je pop jnp add mov lods in fimull mov pop mov push xlat push jl ja adc inc addr16 xchg movhps mov add and test aaa pop hlt sub cmpsl add lahf nop stc mov xchg lea push bound rsqrtps cmp dec and add daa fld nop mov jo push std mov cmp jnp cmp adc add mov push dec cmp (bad) xor xor xor ljmp mov sub aas arpl iret pusha sub aam add sbbb inc mov cmp xor cwtl testb push out sub pop sub ret inc xchg pop fsub sbb movsl das stos mov jmp mov nop dec mov xchg or call or dec leave mov iret add add xor add mov jl add lods lret nop mov popa mov xor jns push sub add ss pusha das addb popa fmul lds mov addb je or sub popa xor fdivrs mov rcrb or mov add movsl clc push inc ret add mov pop popa clc xor add xchg jno lcall add jmp mov roll loope dec sarl inc or jp inc or push adc dec add cli testb es add mov add xchg das andb pop inc fwait and push insb js fs test das iret mov add cmc fwait add xchg mov clc stos mov inc inc push sub mov mov out aaa cs sbb addr16 inc pop stos jle and mov or and sub or cli ja dec mov dec xor jle dec clc sbb nop std mov add mov adc push pusha sub out gs xchg insb pop pushf add mov pop cmp test inc and test or sub mov add cs (bad) mov notb aas jno inc and out sbb jmp add fildl (bad) das cwtl clc add mov pop imul adc mov inc inc movsb sub aaa push sub add ds int3 push sub das lods mov (bad) fnstsw adc add nop add push pop xor mov and add pop lret cmp push les xchg inc sub and lods adc dec pop fcom pushf movl mov push cmp xlat sub faddl out push sub dec fs add add ja pop and mov cld push add int jle mov xchg xor sti outsl mov mov aad icebp inc data16 cmp rcrb sub (bad) leave sahf and aas and jns jle or add insb cmc cmp dec test push mov mov and xor (bad) shrb imul xchg xor ret shl loop (bad) jl dec pusha push inc mov cmp add jecxz jge roll and or ffreep add push (bad) xor xlat mov sub sub add pop sub rolb inc test jl xor test cmp mov ret lcall stc cmp sti pop sbb push xchg ficom xor adc iret dec pushf stos inc fisttpll mov xor repnz xchg (bad) rolb in iret addl jb dec leave pop or push bound adc nop es pusha adc mov nop iret lahf push and clc into int add pop inc fs test or fcoml call ljmp jge ds cmc pop inc add loope add pushf test fadds ljmp mov cs adc and or cwtl (bad) pop inc add sbb jle jno lret rep and jg cmp in xchg pop xchg imul jne cmp cmp inc pusha sbb in pop mov jle lock pop jno mov push ret out sub adc and or test xchg jno or mov (bad) repnz cmp mov fdivrs subb scas add push jl lcall push push lods (bad) fidivr outsb call clc mov add dec in jnp cwtl mov imul (bad) pop lock ret mov dec xor shr icebp idivl xchg add loop jmp add jg jae int3 push bound mov rolb xchg outsb mov dec jo faddp push cmp xchg sti js sub mov pop cmpsb inc nop add xchg js sarb repnz mov loope mov and nop jmp sbb jnp cwtl je,pt data16 and push test je mov jnp out lods fnstenv js dec xchg add mov ljmp lds mov xor add dec push jecxz popa cmp xorb and rolb pop pop push loope out add mov aaa insb push sub mov sbb add mov mov fiadd mov out ficompl dec lds pop call inc xchg mov fstps stc add inc pop jge ret testb imul mov js (bad) jne faddl roll xor xor xchg lods add or into sub xor add adc aam fadds cmp pushf insl sbb or ja mov subl adc sahf imul dec call mov hlt cmp push xchg mov ljmp jg xor notb push int3 mov dec pop jp or and bound popl dec ds push sbb or test sbb (bad) es or dec ljmp (bad) xor ss xchg jecxz nop ds mov inc icebp test inc xchg (bad) add push push addr16 (bad) adc dec into nop mov fimull lods outsb movsb fistp rclb push je (bad) sub mov mov push cmp movsb cmp and sbb cmp outsl test add out xor js add aam mov lods out jl or pusha xor jae fwait call out loopne subb add out push and scas push out dec add je test dec dec or lea sub add mov mov add mov sbb or mov adc fdivs sbb dec mov add aas mov lea mov test or add fdivrp and xchg add or or and out mov imul fisubr xor mov add pop shlb test adc test xor int inc movsb pushf gs or sub xor hlt (bad) lods mov inc lds mov add inc out adc dec add pusha scas jg jl xor mov (bad) pop and sbb adc xchg mulb lods scas and in inc xor cmpsb sbbl rcrb movsl mov inc mov inc fdiv mov es loope and nop sbb xchg lock rcr lret rcrl push cwtl inc push aam cld pop xchg repnz mov cwtl je inc lret push out call push bound xlat mov jb push fwait in add and mov mov aas fcmovnbe push add inc dec add in cmpl nop mov adc inc jg or jno or jle clc push sbb mov jne test xchg fdivrs and and cwtl mov cwtl (bad) lret xchg std cltd hlt stos or andb mov insb and sbb fistpll xor push lahf adcb stc jp jge pusha fcmovbe mov add outsl adc add out inc or adc mov popl cld xchg cltd xchg push inc or and mov push out fstps jo aaa push inc fdivrl mov adc sub xchg add rorb mov frstor out adc sbb nop (bad) into or aad mov inc add ja sahf shrb xor lods pop (bad) adc add in xor cwtl cltd rorb or call inc and add dec fcmovb cmp jecxz insb sbbb cmp mov aaa test adc mov test pusha leave push xor mov xor cs cld push mov mov pushf shrb and out jmp mov fsubp imul add and add leave push mov aas mov inc inc xor daa leave jg and and cmp fadds mov (bad) xor test addl add div movsb mov pop enter mov push ja out icebp ret (bad) mov aam and cmc adcb xchg mov xor out cmp push cmp mov (bad) loope ret std popf rcr out shl add mov adc shlb mov push loopne rolb fs inc pop pop lods xorb add loop lret sub sbbb cmpsb divl bnd mov cmp or sub notl add sub jno pop loopne push add or pop add jl xchg mov xor fnop sub mov std lods jae inc cmp outsb add adc sahf loopne out iret xor popf add mov sbb gs jae sbb sub outsb pop sbb test adc xchg xor and pusha insb mov jo push clc notb add ds dec sbb test dec js out pushf jl in test inc loopne icebp addl sub rclb and out mov shrl rorl and mulb inc clc add sub lret clc adc scas xor cmp mov jecxz add jae push jl mov jo mov cmc lock xor push lods mov mov in adc jns mov mov adc out ud2 or mov lock mov inc jae mov ret ljmp cmp ja sbb cs lahf mov adc shrl cmpsl and mov pushf inc mov aas daa stos mov lret inc clc repnz cs in mov pop sbb imul test sbb mov mov push adc inc mov fistp je out lock adc add cmpsb push stos enter and inc pop and mov fs xor or cmpl mov and loope mov das jle jns pop pop lcall add push mov inc and mov aaa popa or in leave adc jae mov cld xor cmpsb xchg cmpb outsb push or bound mov pop pop mov (bad) cwtl jge or mov lds lock cli sbb or jae les inc es jbe aaa xor and jl test xor push icebp lods sub movsl sti push mov ss cmp sbb addl into cs dec lds lret icebp xchg cld pusha pop xchg push ds icebp ljmp add inc inc add mov inc jge sbb inc aaa add push inc (bad) out sbb aam mov push or aas das xor cmpsl and push xor fstpt lods imul mov in pop call shrl add adc std pop popf in add pop out jne sarb xor cmp xor mov jo js sub adc (bad) sbb sbb pop add inc add subb mov jecxz lock cmp mov stos test addl xor adc fdivr add or sbb aad push repz xor icebp hlt sub add test xor or fcmovb mov aaa inc push and inc xor adc sarl std in dec add jmp sbb xchg xchg insb add hlt lods cmpsl je aaa ret mov add iret stos push jno aam jbe adc stc loopne add cmp les and inc pushf add jmp add add enter jp aas sbb and test mov jae test xchg xchg imul add jnp sbb iret add add (bad) xor xchg add lret jnp xor push add dec sub and nop mov sbb xorb cmp orb movsb xchg sub pushf mov and adc xchg sub jl mov loope inc or xchg mov (bad) nop fisttp add das or push add in pop add mov addr16 in inc mov and dec dec add dec mov mov or enter les adc sub pop pop sbb push in scas adc sbb xchg sbb sub aas aam adc pop insb adc enter add test aad inc dec lods mov or pop sbb das mov scas lods insb and add sub or pop add sbb lret rcr cmp jb sub mov fdiv pop xor sahf or add fild stc dec cmp xchg pusha aaa xchg and sub popa xor pop test rclb xor pop add push inc in dec or and movsl jo (bad) leave stos aas mov cmp adc lret lods shrb mov or cld movsb insl and and mov or orb mov cmp shlb lock mov xor cmc mov mov pop test and roll adc fsubrs int3 mov xchg adc push adc cmp sbb inc mov pop pop clc aas add rcrb jle and jbe add jno add test jae cmp add and mov cmp xor ret jle adc das adc pop sub xchg dec push pop shrl cmp hlt pop and add mov rclb sub xor dec shlb outsl mov jno pop pop xor (bad) aas pop add jp loope mov lods cmpsl dec sbb cli cltd lock cmp iret add getsec das sbb push popa push cmp aas pop call jp or mov cmpsb enter (bad) cmp add mov pop (bad) add or jbe and adc sub jbe out jne dec adc imul inc pop shrl xor mov aam or xchg inc loope stc push testb and pop ror ja js stos subl loop dec test pusha or xchg sbb push repnz subb insl inc sbb lret mov sub arpl xorb mov pop in mov out xor in repz or dec mov outsl pop pusha sbb add and daa lods xor vpsubb mov orl ja loopne xchg stc loope pop das and mov in insb add pop int sub jnp adc jp test mov mov cmp ja and add cltd mov outsl (bad) mov outsb mov pusha pop out aam push or add jbe ljmp push lods imul fldcw dec subl pop lcall out dec cwtl out add ja ret mov cmp xchg outsl dec enter jne jnp outsl call js jmp ja das and sbb dec shll jbe hlt jne jb pusha jb inc and push pop xchg addl rorl adc push push inc into aad sub jb pop out push ds mov (bad) aaa repz bound sub outsl xchg mov mov mov cmp jno push loope aam dec adc das es test lcall cmp cld and outsl jle rcrl add out inc (bad) mov push aad das add fwait mov mov mov es sbb aas sub iret mov sahf insl pop loop les xor inc push data16 jne adc popa pop adc mov pusha pop mov xchg jns adc cmp cltd push cwtl (bad) lea into test mov pop mov cmp ja insb (bad) imul or sbb or add out dec xorl and or int daa or fwait cmp nop sbb cmp or lret pop sub rolb sub jne (bad) push les ret dec inc cmp lods cltd sbb xorl jno call sar clc xchg cmp rclb sub push pop add inc or mov add xchg cs out sub dec jae test shl loope shr ja cmp jnp mov rolb orl icebp fcoms dec je mov jns mov lret sub scas fstpl push push into adcb dec mov inc adc dec adc arpl push xor add add sbb dec es sbb addl mov pop push movsb rclb push test jae and addl push movsb xor aam in pusha mov data16 mov (bad) xor orb into jne sbb sbb xor sub js or lea je test or mov repnz rcrb jge ja push call sbbl aas mov scas mov adc cltd xchg add ret (bad) jns and stos in aas andb or lock out out cli lret mov shrl lods add lea aam or add jae xor pop xor call add call sbb dec mov or leave (bad) jb inc aas outsl sub xchg movb adc enter outsb in jns pop xor push (bad) pop jecxz inc in cmp xchg inc mov inc repz or or jl lods addl inc add xchg pop mov movsb mov test insb add pushf add and xchg cwtl out ss mov push mov add out mov call bound jno cwtl jmp sbb push subb push xor in test and lods pop add ret insb sti xorb in push pop test (bad) cmpb call addr16 pop mov test cmp mov sub test leave push int3 es and cmp ja mov xor inc mov push and sub cwtl push or (bad) lret add sbbl sahf aam repnz ret pop out fidiv lcall jl dec mov mov jmp out les or jnp push or xor outsl enter scas and inc nop sbbl push les mov push fmul ljmp in mov aaa mov mov loop add loop inc jmp ret xchg (bad) mov nop mov data16 push outsb cmpsb sbb std inc mov aaa andb je add lret mov add icebp cmp jbe and pop pushf fcmovnu sti rcrl sub fistp add push pop mov (bad) pop jnp fcomi verr adc daa add cmc sub mov insb int xchg bound adcb rcr mov sbb push jmp add add cmpsl inc push arpl test fcmovu ror add sbb add xchg xchg testl pop xchg inc pop xor xor (bad) lret add push or pop xchg cmp cld or test insb jae dec je add push (bad) mov idiv shrb push in lock call jo sub testl add jns sub pop ret xor movsl ljmp test jle add xor scas lea xchg push lret movl sbbl test lock scas xor jns sti dec add adc mov inc cmp aam lret mov add pop fsts cwtl imul test add inc fmull sub clc mov lock sub inc or pusha dec sub cmp and push loopne sbb fdivl adc push mov inc test sbb repz xor iret xor mov movl sbb xlat xorl push push inc mov js dec lock cmp mov lcall mov cmpsl rcrl xor scas bound or sub test push mov or mov clc js push mov dec mov ds add adc adc dec xor cmp adc into (bad) mov lock inc or aad scas test insb add popf adc inc adc add dec std and stos add mov lea js mov mov and test pop xchg lahf mov sub call imul mov arpl and mov and repz mov loopne aam xor mov fmull cmp xchg popa sbb repnz lea xchg mov jno,pn mov mov inc (bad) aam cmp lcall and loopne and adc lea sub adc sub ljmp rolb dec inc sti in jns (bad) fsub dec inc jle jp in sbbl xor out inc jns lods and dec pushf xchg sub mov inc or imul cmc dec test loopne cmp add sti pop inc mov jbe pop mov sbb and xchg sbb pusha insb shrl into xchg push pusha and ja inc lods fiaddl mov jmp push lods mov or fisttpll insl and adc adc setno or mov push or icebp or sbbb arpl xchg fldcw adc inc test cmp aam cmp add lret add mov mov add cld (bad) or ljmp and ds test xor mov sysenter or add jle push adc dec jl cmpsl sub fsubs and push add mov mov mov and or nop and pop sub push int3 pop push sbb stos inc in test test or cmpsb dec les inc shlb (bad) and sub mov and cmc sub add jns not test test rolb xorl (bad) sbb sub data16 mov and push lcall inc or rcll test (bad) icebp dec inc cmpsb aas sbbb cmp push fnop xor xor adc add nop (bad) mov (bad) je add xor dec int3 repnz cltd dec in or add push pop scas push in mov cs inc mov fidivl dec adc in (bad) std mov mov sbb jo addr16 cwtl xchg dec sub dec enter pushf mov xor fnstenv enter inc add ret int and sbb ljmp rorb inc nop lods push mov and js dec hlt xor add mov loop inc shlb fimull clc xchg and or inc idivl inc js or mov adc test sub cmp sar test fsts sbb (bad) out jb (bad) ds cmp jl push xchg sbb out xchg icebp int xor repnz aad pop lock push or into push xchg cmp adc fmuls jle xor push ds ja jae jns rclb add es push in sarb pop or aaa xchg dec lods xchg lea or adc xor in mov in xchg sbb xchg adc in mov mov fdivp xor test es pop cmp push out or mov bt (bad) popw or pop pop xor shr nop jns call (bad) addr16 ret add lock repnz ret notb sub and sub sahf test inc (bad) ss push shl push loop lods lcall inc fdivs jmp loope and add jns sarb sarl xor lock imul gs (bad) or rorb cmpsb (bad) push cwtl clc lds lret cltd add sub mov roll mov jno sbbb cmp inc dec lods adc addr16 push (bad) hlt add pop add xor pop cmp push clc sbb out pushf ss adc into push aas dec add jae clc adc pushf mov cmp repz in sbb push test rorb pusha lcall add jne jecxz add adc mov adc adc pusha andl sbb push mov sbb les (bad) testl lock push cmpsb cld mov rol mov mov push mov add sbb enter nop xor clc sbb int3 sarl mov xor pop adc jno add cmp add arpl stc out mov sbb imul out pop mov js ljmp das jg mov sub pop je add pusha or fsubrs xor inc xor loope imul shll dec inc mov nop nop pop aas (bad) mov add sbbb cmpsl int inc ret xchg movsl rclb adc add loop push mul sbb add jo in cmpl lods push in dec out add int inc test sbb cmpsb fs cmc sub pop mov ficom xor test push lock xchg stc lock lea je fnstenv inc and add push test xchg shrl sbb cmp lahf mov xchg jmp mov nop add mov push mov (bad) mov adc adc pop xchg dec pusha pop enter mov adcb les dec cwtl pop out popl adc sub in lcall dec pop movups ds mov adc cs call xor mov dec or mov xchg push insb inc add and loop pusha or (bad) (bad) mov xlat pusha xchg loopne jnp adc add cmp pop pop inc insb ljmp push xor add sti lea jae rol icebp cwtl or and inc jns popf pop inc pusha or mov jp push add mov sbb andps loop and xor mov lock in push scas push add ret leave je cld subl dec push pushf lds xchg fsubs xor add push lods sub push mov xor pop jnp data16 mov insb insb mov sub sahf jl sub fsubs sbb cmpsb pushf push out sub mov cmc sarb sti sub data16 sbb mov mov mov jecxz dec xchg add sti std js ret jp lret insb or lock jnp loope xor jae add and mov push insb (bad) jmp (bad) loopne test mov ds or add mov lds (bad) in pop subb dec inc bound push or dec add rorl mov into jle nop cwtl jecxz add adc rcrb push fisubl add sub lea test subl or and insb das dec rorb cmp fimul into mov push jbe xchg fcompl mov aam or add cltd add mov repnz add adc sub xor dec rorb mov push jae lcall mov mov pop mov arpl add xor and dec iret sbb ja mov mov jae jnp test dec dec xchg cmove mov add rcll sbb popl adc out push mov inc lcall push fidivr lcall push cmp sub in sub sti jl push add cmpsl add inc in push jnp push mov test sbbl sbb jnp mov pop inc int3 push push sar out xchg stos lock add inc ja in aas clc xor (bad) out add imul xchg push cmp inc add movb mov xlat add roll sahf popf add lock lcall inc push mov test push cmp jp lcall xor addr16 sbb adc lahf (bad) mov cmp jns aas lods push xchg jno mov mov insb sbb fiaddl pop mov sbb or push xor sbb sub in and jnp add jbe inc inc xor aam test and clc enter and das loopne push faddl jmp cli repnz inc jno xchg adc (bad) std xor cwtl aam int and out and lret ds popa cs push sub xchg in xor and jmp fsts insb push popa (bad) mov bound scas pop cmpb inc cmp mov push add xchg call stos mov mov scas inc mov loope push subb push js fidivr ret inc add cmp dec push frstor mov mov shrb test test or or insl jmp js cmp cmp pop lods es arpl cmc xor push mov add add aad mov js fdivl pop js nop pop and ds mov jbe add test (bad) dec adc out lods add (bad) mov lods jae sub xor or call cwtl (bad) cld sahf cmp loopne dec and jb sub dec sbb sub popf push xlat mov mov mull sbb mov imul and adc fadds je (bad) test dec bound sbb fcoml push (bad) push (bad) lock sarl push nop xchg jb and gs cltd or sbb sub adc gs (bad) xor and xchg pop shll cmp pop fistl sub or movsb dec dec and push adcl push xor pusha pop lods push (bad) dec push rcr push xchg or (bad) jl sub xor add movsl push jp add pop and aas add cli pop in mov jae push push dec es cmovo sub cmp inc repnz inc enter test jmp add jo mov add cmc and rol add fs ficompl pop std subl adc pop sbb cwtl or and mov lock repnz dec xor sub (bad) or adc sbb add mov push adc sti cmp cwtl clc add adc std add int mov push pusha enter pop and inc call mov pop adc (bad) mov loopne mov je and add stos mov test shll rcrb adc sbb inc lods push arpl adc push data16 aad fdivrs sub or jg mov out cmp ret ss sahf jb fwait pop leave sbb push adc sub xchg pop call add or xlat (bad) cmp adc jg push lods xchg and add fwait add jnp sbb cmpsb jo mov sbb push xor adc or push jmp add adc inc movsb push repnz add jb adc adc or jo inc adc or (bad) lea outsb cmp enter inc rorl xor xchg pop mov int3 mov xor xor sahf and pushf in push movsb sbb cmpsl icebp add je adc and jl inc dec push fninit xor pop jo,pt xchg jl (bad) xor sub dec add loopne ret dec xchg lods add fadds jnp jae cmp adc and (bad) jg fmuls xor jbe add mov mov out test pushf sbb dec stos loopne jle icebp jge js add cmp adc icebp (bad) or sub ds int push cmp pop mov mov or pop aam cld push test in (bad) sbb add (bad) lock push int je xor mov in mov mov hlt es sub cmp adc fcoml cld push movsl sbb adc in xchg (bad) sbb movsb adc dec or nop hlt out pop cmp add xor push or pusha popf movl daa and aaa pop inc dec int3 mov lea or leave mov (bad) scas jp push imul pushf shlb push sbb adc and mov pushf sub mov add sub cmp movsb cmpps pusha push inc mov pop fnsave adc mov and add in stos sbb sub in in iret mov and into and mov push loopne or dec add pop inc daa sub lea jl insl jns sbb xor or in mov loopne adc inc push arpl (bad) jbe xor nop imul cli inc test ret mov jb or mov loope xchg je push bound stc mov cmp fiaddl adc xor aad in inc (bad) jo sbb mov sub adc add mov sbb lock add lock adc das in pop adc nop inc shll pop inc insb push or push adc rcll gs sbb pop dec sar outsl push inc test add mov mov sbb sub int3 or je xchg out dec add add xchg jne pushf add pop ret in dec rorb je lock jmp dec or shlb nop out pop add shlb js and outsl add cmpsl add push push push xorb or inc push das mov lret mov add cmp str out imul cmp mov jmp aaa test orl mov (bad) push mul xor and xchg adc loopne add adc cmp inc fist ret lea inc add in jo pop xlat cwtl in test push sbb outsb mov andl aam xor pop adc and add or repz pop xor mov push push nop and pusha jno adc cmc sub test or popa scas push flds jg into rolb rcll (bad) jne cmp pushf stos jnp mov sbb push inc pushf icebp mov mov adc mov push js fdivl clc add push lret daa or lock clc fs cwtl dec pop es mov lock nop shrb mov sub (bad) push add (bad) hlt test mov fsubs in movsl or jne xor mov mov out jns add sbb outsb jg jp out shlb mov mov in push add jmp xchg cmp js sbb or mov pop pusha cwtl jge xlat add push inc xchg loop cmp sti je loope test xor xlat cmpsl and mov mov sbb cmp repnz cltd and sbb ret sbbb sbb xor rorb mov les imul mov mov les pop bound inc add inc std pop pop add in and add div pop orl add adc cmp dec ret repnz adcl loopne pop mov sahf (bad) data16 sbb insl dec pop pop sub sub lods fldenv sub lods sbbb sbb mov faddp out cld lcall jle rclb call push jae push lods inc add fmull jbe adc and push incl shrb pop adc cld dec or mov xchg sub sbb push cmpsb test (bad) mov xor scas (bad) popa xor stos jp inc cmpsl into in loopne sub nop addr16 push das pop mov inc push test movsb pusha inc mov adc jp add push dec loopne xlat rolb cmp xor push dec inc mov inc roll dec or mov es sub inc push jecxz push or fxch xlat hlt test (bad) out inc pusha cmp lds inc daa xchg dec inc push xchg (bad) adc and adc mov jecxz sub push (bad) aas and icebp dec dec call adc pop stos stc daa ds jns push add mov inc or inc addb xor int3 add aas push leave pusha dec push nop int3 add (bad) call inc mov (bad) test mov mov sbb push mov push mov mov or push mov jp mov fs sbb cmp cmc cwtl test ljmp lea std in lods xor aaa into movsb js xor shlb movsl cmc sbb or dec push or jl mov xor mov inc popa jl mov and test ds shlb (bad) or and xchg shrl fdivrl pushf cs adcb xor dec incb jge inc mov mov xor sar xor mov jle add enter jb add scas cmc mov insb fiadd lock jmp jne add shl cmp xchg xor test aam movsb rcl adc out es in cmp mov adc jbe push hlt je pop jp mov out pop jno insl and in int (bad) test test daa jl adc adc cmc add (bad) mov clc sbb push jnp add sub mov andl (bad) test leave cld adc jg sbb cs popf and pop jno jbe loop ficoml (bad) pop leave or ja add mov dec fadds daa call ja push int3 nop adc cltd loop pop sub jo pop dec loope jl mov lcall add daa xchg add (bad) mov fs xchg pop xor jo add loope push addb lahf dec mov sub mov rcll out sub inc les gs andl notb call loopne xor subb leave mov jae in mov push clc inc outsb les sbb jecxz test dec push je add movb mov cmp inc bound fwait xchg jl add inc jle (bad) dec in and or add mov mov add push cmp fist add inc jp push (bad) jb xchg out xor (bad) fwait mov mov ds test mov std inc cmp mov insb xlat (bad) jo pop push push xchg add xorl push outsb push hlt add mov inc pop in insb dec xorb push cltd adc xchg add cmp cwtl (bad) mov mov or je icebp into ja inc enter mov (bad) mov inc aad add cmp imul fnsave pusha mov inc fsubr cwtl clc pop fcmovb sub pop lods pusha or dec dec add cmp pop cli out lods (bad) sub imul (bad) sub iret stos jmp popa jns int fmull dec rorb test pop dec in add inc sub pop stos fwait mov jb dec mov pop pushf enter test hlt mov out xor xchg push add jp insl or cmp pushf push loopne adc mov shll ret cmp call (bad) sub pop cwtl add jg test enter out push inc call fadds jecxz (bad) add ljmp loop sti adc hlt inc mov dec add push pop test enter dec mov push pop enter lret clc fisub out add arpl int cld sbb (bad) push push pop testb xchg sub jne loope push xor hlt enter sub leave lret pushf (bad) ljmp enter mov xchg push hlt repnz mov cmp enter dec push enter mov sub mov add mov ret and cld push lods cwtl ret push xorl int3 add insb loopne lret xchg inc lods stos aam mov nop adc (bad) lods js loopne jecxz and insb push addr16 mov push inc cmp (bad) movsl out roll add pop dec xchg shl inc or pop pop pushf sbb notb shlb inc or in and in xor fwait lahf mov cmp add sbb rolb add add add nop inc cld in push mov dec test (bad) ljmp push lahf out ja insl call call cmp (bad) or outsb mov or adc and add out push cmp push sbb push addr16 push cmp test sub or (bad) pop sub shlb or pop pop add sub in loopne (bad) and lods dec jle mov pushf dec pop fmul xchg jo add mov addl pop jne popf adc mov mov (bad) ffree rorb mov adc add ret pop pop in add iret adc or mov xchg and jecxz imul sarl mov add sahf stos dec lahf add push push fadd add lret lods shrl sahf inc mov push addr16 push or (bad) fiaddl hlt je adc gs xor xchg mov stos push cmp pusha xor mov xchg or push mov nop adc jae out push enter inc movsb rcr dec les repnz add mov dec out fsubrs dec fistl or inc mov push loope pop movsb jo into test add (bad) xor mov cs adc mov arpl and lret rclb pop das inc inc pop lcall or push mov push and mov or push lret insl push test jnp (bad) mov xchg das mov sarb scas xor pushf pop (bad) xor aaa (bad) jo shlb dec pop mov xchg add pop and xor jmp in pop iret loopne and add stos xor push sbb cld add cmpsl aam xorl ljmp into add add sbbb mov add cmp mov adc orb loopne sbb aas push jg cmp or int3 sbb ret mov adc pop xor adc push mov sub pop lock push lea arpl xchg and dec nop jmp je inc push loopne popa pop lret insl add pop out test xchg dec sub iret stc enter mov fbld lret popf pop add fdivp and aad or aam out pop cwtl mov adc nop pop cmp inc add dec stos aad and cmp aam mov sbb mov in pop jne leave and js push es adc or sub add wbinvd test je sahf add pop sbb inc sub inc inc adc add sbb pop pusha cwtl add movsl lods cmc int inc je pusha sub sbb mov insb je cmp (bad) mov adc sub push add add mov inc movsl (bad) pop movsb dec imul dec mov stc inc adc loope dec xor xchg clc in mov dec or inc xchg out mov addl xchg push das sub sub lock ret sbb dec addr16 enter js push inc xor or pusha adc inc or xchg jb cwtl mov loopne push mov jle mov jne pop sbb mov loopne mov push pop out mov adc push mov pushf dec xor enter sub sbb inc jno fisttpll test inc rol cmp and add jg adc cmpsl mov jns add aas inc add mov xchg (bad) mov imul mov in cs ret test stos icebp loopne (bad) mov (bad) cltd leave jnp sbb jle xor mov cmp lock add shll cmpl psubd insb and push sti mov and pop jnp inc jbe pop add add pop sub aas push dec fldl adc arpl decb cmp mov add test dec subl adc xor fldenv jno xor aas xchg out or test push inc xorb jg (bad) add sti loopne jp mov movsb shrl add ret push push jl inc sbb inc or addr16 mov inc sbb pop jecxz cmp leave test push or leave pusha repnz rcr popf test movsl cld xor pusha mov jo push fcoms cmp jle push cmp add stc xor dec and or inc xlat sub add pop mov stc jmp inc cli lock icebp and sbb inc mov (bad) (bad) xchg push in (bad) pop cs jb sahf cwtl subl shlb pop lret adc and (bad) adc and push jmp push mov fcoms xor jno sub sarl dec xor test add in xor add jae inc pop and jns mov ja xchg xor mov int and nop dec in pop dec xor sbb mov xchg add aad cmc test imul mov fcompl pop cmp inc mov nop pushf push sar cwtl pop nop push loope or cld push and loopne (bad) ljmp pop sbb roll xor adc repz xor sbb notl fsubrs or out push sbb sub inc outsl inc lods sbb lds mov mov mov into add lcall push xchg shlb add push test (bad) xor test dec jno pop ja jge cmc inc cmpsb push inc mov xor movsb lea setns mov mov ljmp adc inc jmp mov xchg int3 push dec lret pop mov pop cmp test jle xor imul jle xchg sub pop add jmp dec jne cltd xchg cmp js outsl xchg jns in stc faddl mov jbe test mov je lahf dec and mov stos or xchg movsb (bad) fsubrs pop mov adc mov popa lea add shr sti push add add insb nop sbb roll xor cltd jnp push mov test mov loop shrb adc inc pusha (bad) call xchg xor jge or loope or dec push enter test imul sbb mov imul dec rclb cmp jne and add mov inc out and inc cltd or xor mov push orb or mov sub es (bad) pop int3 or mov aam inc adc mov adc inc out clc imul inc es je cmp push cwtl cmpsl mov adc js pop pop adcl cwtl pusha push mov xchg add insl js data16 inc dec or es mov sbb sbb std call das (bad) dec lea or pop adc lock icebp jb xorb fild push inc pop sbb xor add arpl (bad) daa add push andb sahf and ret mov jae cmpb loop adc inc mov mov inc and pop xchg into bound add sub rolb add mulps adc sarb (bad) jb adc jge test adc add xor (bad) rclb pop cmp enter js mov or scas or pop out sub sbb dec xor aam out das mov ret and (bad) xchg loopne pop mov sbb cmp or test or push add aam or cs or es in adc sub movsl adc fsub js mov shrb xchg clc adc adc xor cmp popa push cmp lods imul xor lock push call pop inc call mov test cmp sub cwtl je add fadds xchg cmp (bad) xor push dec iret pop xor sarb aad push and inc ljmp (bad) call adc mov int3 push push bound sbb push addb fild sub mov adc adc sahf sub stc sbb repnz loopne cmp adc and rclb inc aaa enter hlt mov shrl lock or inc in lock lea and adc mov push icebp mov mov in inc jl push test testb sbb popf and and (bad) sbb testb js xor out jo rolb clc jno,pt add mov fld (bad) xor jmp sub inc or add adc bound iret or xor inc cld fiaddl and inc les addb xchg lea xor icebp outsl iret xchg pop mov inc adc repnz clc inc adc jge (bad) jle pusha pop sub pop daa mov (bad) fistpll push icebp push xor pop push cmp es or (bad) xchg or (bad) xor sub push pusha lea adc rcll jns (bad) add iret hlt movsb int3 (bad) jecxz sub sub jne cwtl sub xchg sub jle xchg jno out insb call fisubl cmp and mov pop lret fstpl xor push inc xor fnsave cwtl je mov lea loopne sar (bad) lods xchg and mov bound std pop out and mull test mov or or or lods sarb xor movsb sub pop push xlat mov xor and in nop test adc les push pusha xor pop hlt sub inc je adc inc inc adc mov int3 mov (bad) or mov add cmp mov mov xchg push dec inc pop push test imul rolb ds jns orb mov xorb jnp mov in mov add or pop sbb cli add leave xor dec jo mov mov lds inc imul pusha gs jb xlat in arpl and mov jns shrb rcll xor dec daa mov add pop outsb jecxz mov sbb rolb inc ljmp sbb cld xlat add xchg test xchg dec in sahf push nop and sub cmp and daa data16 add jo enter daa fs pop mov adc adc dec daa or inc lea nop shlb push cmp adc jns mov mov dec insb nop pop or outsb xchg mov mov xor add ret and into push test repnz call add and sub fs sbb xlat and repnz sbb negl push inc fisttpl cltd mov sbb popa pop fwait (bad) test call add loop insb and int3 or call nop insl es jle pusha lret or xor adc add mov mov jle push push shll add mov inc push and add mov orl mov push outsb xchg clc inc add pusha pop pop stc adc add mov pop incb adcl je cmpsb sti (bad) out sub jl orb outsl testl sub xchg dec fsub push and inc jg rolb in lahf sub cmp mov dec adc test stos cld js clc sbb jl lahf push cs pop add es test outsl xchg mov pop aas mov lods add push movsb cwtl dec add (bad) sub jmp test pop test daa andl push ret subb mov lods int clc or je pop mov in jo or mov mov push inc and or clc push push popf or sub jnp xor stc loopne push arpl and add and mov sub dec pop (bad) pop dec inc iret and mov movsl mov insb orl mov je adc outsb mov pop movsb cld dec push pop rdtsc dec mov icebp clc mov stc add xchg lcall (bad) imul add mov add into mov addl cli inc or pop outsb (bad) repz xorb fs xchg insb sub fmuls and movsb sbb add or push inc test ret and dec adc andl mov pop scas and loop mov xor mov fisubl add and mov push out sahf add rorl adc popa push dec xor jg xor popf sbb adc add push icebp test cmc mov lret push add testl push add es cmp push add lods mov dec sub push cmp fild jmp adcl add cmp and lock sub push xchg jo (bad) mov lods push sbb (bad) and dec pop insb add popf sbb cli xorl adc and gs ret mov mov aad jecxz push inc adc rcrb pop nop dec jge adc cmp rorb adc mov pusha inc lock aas jns movsb lahf (bad) add inc je shll iret dec jnp dec loope mov pop scas and flds nop lret fisub xchg in test jp jo and jne pop xorb inc cld jle adc es pushf adc dec aaa test shrb nop loope cmp and mov dec add outsl add insb and xchg jns es xor cltd mov neg adc outsl sub mov mov jecxz and adcb inc out jmp sub js addr16 sbb adcb mov mov andb dec add lahf inc call fs fs inc inc jmp add fnstenvs stc and jecxz,pn fs nop sbb dec pop inc pushf in adcb rolb and jge add inc pop xchg leave sub cmp or and add jg,pt js rcll loope inc enter pop push or mov imul jbe mov and add pop test daa and movsb test fnstsw gs movsb test dec mov and ljmp loopne outsb push fs sbb add sub jecxz and decb dec xor add add imul adc and pop pop mov in add das loop and adc jo imul jg xor add rclb and outsb dec dec in clc inc movsb add sub div push (bad) (bad) je add push (bad) bound clc adc scas jl iret sub (bad) daa xlat inc pusha test mov dec pop mov stos nop insb sub xchg mov sbb jae loope cmp sub adc mov dec dec nop fldcw add cwtl xor and or xlat push dec cmp adc ret mov push xor mov and add or pop mov lea rorl adc add inc inc inc js and and lret lahf test nop test mov inc int3 and adc adc (bad) lods xchg and add js mov xchg in nop dec inc cld sub or pop adc jb inc cwtl or enter stc add ret add xchg adc fs add push (bad) and xchg (bad) pop mov loop push test or (bad) mul adc fnop sub jnp orb aam nop or mov sub and or es push pop pop into jg fs push push arpl or xchg xor subl lret test rolb pusha int3 and sarb outsl loope addb mov dec inc dec (bad) aam mov insb paddsb mov or pop sahf dec sub inc dec sbb ret sbb jno fmull mov add fidivr dec or mov sbb dec test int3 and mov lock mov xor adc bsf xor mov jle mov loop (bad) push xchg jp xchg sub and inc (bad) jbe dec or js sub rdtsc pop mov inc out mov push loopne xchg nop add in mov das sub fstpl pusha and int3 (bad) adc je clc popf outsl pop cmp std fistpl add cmp jns xor or fadd sub dec das pop and and lods rclb adc sub ss call dec test add aaa je xor fcoms xlat loopne xor jg dec rclb or dec outsl jg rolb pop mov rorb out push inc repnz cmp mov xchg test arpl (bad) adc or push aad enter and nop or push lret dec and push mov push into cmp mov les jo mov jne dec inc nop inc movsb roll pop and bnd mov enter sub imul sahf push or inc cwtl stc (bad) jo sahf call mov fistpll fwait insl sbb cmpl pop push push pop rol or add dec push and icebp sub in push jle adc and aam xor mov xchg push jnp adc or sbb push popf dec jp mov mov push mov cmp push dec sbb lea jb cwtl hlt dec clc sub mov inc faddl decl cld (bad) ja fildll add test rolb jbe fstps (bad) xor fsubs add ljmp mov das stos or sub insl pusha leave mov cwtl fcomps sti jb adc fild imul dec and iret stc pop xchg cmp iret xchg add mov sbb inc pop mov pushf mov addr16 movsb fmull push cmp xchg pop sarb sub in sub nop add jne mov pop push jge mov insb adc dec jle pop test pop xchg enter shrl fisubl push sub (bad) mov aas inc pop jae dec and jl or jp loop push add jnp js push jne stc int3 jecxz add xchg pusha dec xor iret sub (bad) fs xor repz add push test inc or mov inc imul sahf xor stos clc cmp into cwtl dec in cmp fldenv add fisubr in push lds push fstl cltd shrl adc or jge (bad) lahf xchg lock or mov clc pop clc pop rcrb fnsave rcrb lods sbb dec shrl or dec jge fbstp (bad) xor iret sbb jns dec in sub sub adc rcrl rol decl or movsb insl add cmp mov lds pop mov add cmc movsl orb jecxz add (bad) out xchg add insl test imul xorl dec and sub cmp inc das sbb xchg pop jg (bad) lock insb xor adcl lock adc daa loope,pn test lcall push cli mov pop int3 add and daa (bad) jl fsubrl cwtl or das push cmpsb dec subl loop adc lea (bad) movsl xchg ret call lea xchg push int3 dec sub dec xor loop inc add push pop movsb (bad) fimull mov jo aam lods and es rolb pop or pusha cld or rorb sub push mov bound add dec (bad) int inc lods jno fisubrl shlb jne rclb xor subb insl dec js mov or enter cmp clc jl sbb push fs mov xchg int3 (bad) mov dec pop out mov sbb ret sbb pop lahf jge xor cmc sahf mov cmp add adc push dec ret jae icebp stos mov outsb test push pop lds subl into pop dec out xchg add push lock lret dec mov ds or pop mov sbb push and (bad) mov push bound inc ret pushf adc sub push mov sti enter mov jb sub test int sub in (bad) cmc mov dec sub icebp loop in add ret flds sbb insb push test fs loopne fldt repnz ljmp xor add and mov pop je jl imul push xor dec mov xor (bad) push and jg xchg mov mov mov xor insb int3 inc je push aam or data16 or pop push dec mov sbb mov and add lds add and mov push or cmp dec js push xchg and sub inc fwait and ljmp movsl (bad) sub out and jb jle inc push addr16 cmpsl cmp lods mov push mov jnp mov pop xor ja fild mov mov pusha push inc add mov sub xchg push fs inc pop push ret stos xor jbe lahf mov cmp mov dec cmp cli push mov loop addr16 adc mov xor sarb push mov jno sub xor (bad) inc pop and loope in add addb lock roll leave fidivr add outsl inc cld stc sahf scas mov ss int3 jmp mov pop dec xchg lahf xor xchg sbb loop cmp popf ljmpw dec inc pushf (bad) xor insl jge imul aam ljmp adc dec adc mov jmp clc aam rolb ja mov lock sub xchg nop test sub leave mov jae (bad) xlat cmp mov and and jne jecxz dec (bad) loopne or test lods inc fcomp das mov rcr dec dec (bad) or inc and notl lret int3 or or pop int aam das jne adc pop pusha sahf mov out pop test out inc (bad) daa andl fbstp (bad) xor lea or jecxz dec test jns loopne movsb lret iret or bound mov pop popa push loope lahf adc pop stc cmp mul push jmp or pop mov inc and rcr int3 xchg dec jo mov aaa les and mull or sub das jno cltd in adc mov test sub xchg ret imul cmpb sub and dec and movsl in cmp and movsb nop jo pop int3 icebp or cltd add pop xor sbb add out push ficomp cmp push out sub jns mov mov out add mov loop jl mov in sub cmp add ss jmp and or stos adc add jo loope orl notl sahf andl and lods xchg jg mov sub mov dec adc xchg push lods loope jl or ja jp adc pop enter push mov xor adc cmpsl jno dec sbb addl rcrb mov imul hlt cmpsb mov sub pop sub in add mov sbb inc add mov leave je (bad) dec loopne mov pop adc adc out cmp mov lock fwait and cmpsb pop lret mov adc push dec pop xchg push mov pusha cs mov pop lahf inc inc sbb out sub mov mov jmp add loopne cmp sahf inc add add lret les sbb dec inc and xor movsb stc sub jl and movsb loop inc movsb dec loopne (bad) jno (bad) xor xor adc addl xor mov or in xor insl sarb andl sub lods in loopne lahf add in push push cmp dec mov adcl or xchg hlt (bad) mov pop mov pop add push fbld addl pop lahf fwait loope inc or xor dec repz fwait imul ss (bad) aaa jmp mov hlt icebp lahf repnz ror dec add hlt and out (bad) loopne lret xchg movl lahf inc and pop pop add in mov adc jb push and pop sub and lret mov jp jnp adc mov repz dec hlt push sbb add in faddl das enter shrb or mov adc push jb dec mov jmp call dec sub lock add xchg add add shrl push shlb js in add mov icebp insb push or lods cmp jbe rorl adcl jnp push and movsb and inc add mov push aad aaa mov in rorl clc dec dec and xor pop repnz daa fldenv (bad) jae mov add iret jnp cmp js hlt cwtl (bad) out (bad) in push jl and and xor daa sbb clc inc loopne pop mov pusha call jb es mov pop les data16 add cmp call add aaa (bad) pushf insb mov (bad) adc jae pop mov fiaddl repz push push or add xchg shr add xchg or testb xor fmull ljmp jnp rolb call and add adc in pop push daa adc push mov mov jl add hlt ret xor in ret inc pop lcall mov push in in jns and mov shr jae adc dec push pop pop pop push sbb test mov push jne pusha lahf dec and mov cmpsl dec fstpl sbb and add push arpl lret xchg cmp push pusha jmp icebp mov mov clc sub aam jge je jae or or push add mov inc sbb add cmp pop dec adc jo rcrb jb sbbl pop aam aaa test (bad) xor movsb add cli bound into in mov sub sbb lods push jae jl (bad) popl shl mov add scas add icebp lahf lock dec or ret push sbb or add iret adc mov adc pop jo pusha andl dec ss dec sub or aas push clc cmp dec add sbbl adc popa mov test and in or loopne cwtl adc pop add dec mov pop adc clc mov fcoml test lods add and cwtl jmp inc push ror (bad) dec jmp ucomiss mov push jne xchg inc pop out int3 gs mov rol jp sub ds add xchg popf push dec repz test (bad) fldl mov lds sbbb cmp jns and movsb andb in fcompl and nop xchg rcrb xor pop nop cwtl push xor push xlat inc jno mov icebp mov jo bound jmp mov sub or outsl fnsave inc fwait xchg andb and add or sub cmp jnp mov xchg add sbb push mov fs sbb (bad) xor hlt adc push jb mov xor fs xchg add outsb sahf icebp das hlt add xor mov xchg or mov push jle out or outsb add fs xor and jmp sbb (bad) xor pusha adc (bad) mov sub push push pusha and and vpsubw sbbl push pop cmp lock cmp dec add adc sti mov in aam dec sbb inc xor cmp dec push add and mov xchg call push notb or xor (bad) lock test or mov lea mov sub shlb cwtl mov jp iret fcompl mov (bad) lock pop adc and jg mov sbb adc aad add mov xor and xchg notb mov add adc push adc mov mov mov adc cmp add and sub add sahf cmp jge (bad) xchg sbb sti adc ja jmp xchg ss inc mov add addl and lock outsb mov call daa xor cli pusha lahf mov inc into icebp add fstps call adc sbb pop jl and sub mov lods sbb movsb adc mov or iret or mov sub enter mov rcl sbb cwtl pop xor mov mov sbb repz mov mov inc je mov sbb cli aam pop dec test sub and adcl and ja mov or ljmp sub dec mov or es cld sbbb add pop jb add and and fldt fwait rolb test nop dec mov mov inc push arpl fwait push dec sbb sub clc rcrb idiv dec mov xor sbb aam faddl mov pushf fwait test pop cld mov out add sbb out cmpl or movsb gs mov fwait movsl add xchg and mov dec pop add int3 jnp insb imul pause xchg lock imul mov dec repnz add test pop (bad) mov test adc mov mov jnp hlt cs xor add clc adc cld test lods xchg push cwtl adc stos cmp aam mov in push repz lock aas dec push mov shrl aad mov pusha mov imul nop ret or xchg mov push into (bad) ja add or cmp mov xor inc imul xchg jbe clc push pop mov out or lods jle outsl (bad) sub push test jmp repnz std mov rorl sbbb lret sbb xchg subl nop cmc and jmp test jmp sbb pop clc add divl adcb les or in aad xchg stos test test add push xchg and cmpsb mov mov inc cmp mov cltd (bad) push dec mov push shll pop dec sbb pop clc and insl orl and sbb adc aad mov or sub or gs jmp or movsl pop push sub out in ja lcall inc insb imul adc dec mov movsb xchg dec stos dec adc smsw push out pop adc daa jns adc stos or push adc and mov (bad) mov pop aam dec xchg fadds stos mov hlt mov les push dec sbb call enter jmp dec scas ret imul test adc aad dec mov repz sbb push dec jo call mov in arpl pop mov jmp mov cs les repnz sar xlat xor (bad) aaa and and ret xchg mov xchg test mov and (bad) lock and fs mov jmp shll je jg movb int js adc and or sbb dec inc and ret lret cmpb jl xchg push cmp subl jae (bad) aad inc inc out gs repz sub in add addr16 nop or xlat pop lret fdivl in push or fucomi pop stc gs jne adc mov cmc enter out sbb sbb fs (bad) aam int3 add push (bad) sbb repnz (bad) xor cmp jae adc movsb dec add rorb std shr cltd out fs adc cmc fs fadds add sbb jl pop sbb sti dec cmp loopne mov add push testb push jge popa add fs iret cmp (bad) xor std and enter dec cmp popa adc push or ljmp test sub mov (bad) dec xchg cmpsb dec fcoml std stos and int3 (bad) nop test add cmp push test addl movsb lock sti sbb out stos int3 and pushf sbb xor and (bad) aam pop ret xor stc iret in mov test inc xor out add lea in mov pop les (bad) add movb mov aad leave es les fs and dec add and add adc sub clc and jl add jbe (bad) jno or rcrl xor sbb sahf cmpb xor dec in mov scas and pop adc repz addr16 add iret inc loope mov jg add inc jmp addr16 mov or repz add jecxz aam divl cmp nop or jo iret jg add mull int3 lods mov je add inc pop ficomp mov or inc mov add inc orb xchg js int inc adc sub dec push xchg inc dec rolb lds xlat clc mov fwait es dec in nop leave rorl add sbb in movsb push xor les mov inc and mov dec fs jae pop push popf aad mov push mov movsb nop add push aam call jl dec pop clc add aad cmpsb jno cmpsb mov lock in loopne mov shlb or pop dec out add movb iret movq or inc insl orb (bad) mull aam jae lock scas cwtl bound push sbb pop dec mov xlat add int3 jnp cmp rclb je js lods enter pop fcompl mov sarb xor push imul jmp repnz xor push adc sbb mov add mov pop add es or rorb mov movsb jge rol lock mov leave lcall sbb fimul mov cmpsb and roll aad imul jo add xchg and adc stos fist push sbb xchg sub mov in xor mov fbld add and mov push sub mov cwtl mov not std loopne cmpsb in and in add and hlt sbb repz push imul add imul cwtl pop insb imul pop aad (bad) xchg lock fs or mov mov sbb call add jnp mov jmp sbb loope mov (bad) inc shrl xor add push icebp mov add pop or les fs cltd hlt sbb mov sbb movsl pop bound dec cmp xchg outsl add mov inc (bad) (bad) loope adc (bad) pop das mov cmp add mov (bad) xor xor test lods cmpsb hlt mov mov lret xor pop test and pop push lret add dec add (bad) aam adc inc cli (bad) leave mov (bad) arpl xchg mov inc movsl clc leave movsb or mov sub add inc popf xor adc imul push ds js rolb sub dec mov aas push (bad) mov mov push sub test xor mov jg hlt rorb xlat in and rclb lret subl push mov arpl test add xchg lods push pushf mov pop fdivrs push pop add push push mov xorb imul pop fs and addb fcoms sub push (bad) sbbl js add fldt aad pop fcoms call or inc lock mov in lcall cwtl lret cld push mov movsb dec pop sbb cmpsl movb sub add adcl (bad) pop dec aaa add into mov adc ja sub lock sub cmp arpl sub inc push sti sarl mov aad xchg lock dec nop add and add pop xor xchg adc mov pop xor sbb sbb xchg push enter adc inc sbb fnstenv dec popa sub adc cmpsb xor add or push inc cmp pop add mov xor mov out xor int3 add and lahf push cli shrb jo add (bad) lds mov pop cli cmp lock (bad) nop inc and dec pop adc rorb adcl stc adc rclb loope test orb mov dec adc mov sub movsl and xchg adc sub or loopne adc in movsb pop pop lcall lods xchg fs pusha fdivrs mov sub mov dec insl push push and mov into add push pop pop mov add clc add cmp jl loopne out adc adc sub or fdiv ds adc lock js bound cltd push add bound sub js mov cmp inc in stos adc scas inc in pop mov pop pusha (bad) fiaddl mov jnp sub adc cmp inc stos pop mov push fcmovne (bad) imul movsb or xor nop and lahf in dec aad movsb xchg loop mov cs mov loop cmp sub xlat or add xchg mov rolb mov pop pop hlt lods mov pop push push addr16 cmp cs int mov insl call hlt stc pop dec mov inc and dec add sub and add cltd rol nop mov cld ret mov mov inc pop add cmp push movsl mov rorb es dec inc cmp es xchg and data16 mov hlt pop sub int3 sarb xchg movups and mov inc push push notl xchg mov cmp pop push jle sarb arpl mov inc mov f2xm1 int3 bound icebp and mov mov iret pop ja rclb mov lods loope test inc fmul push add xor es inc or in push arpl jle pop scas addb fwait mov push add nop dec sbb aam inc inc mov add call cmpb dec call daa or mov out dec inc pusha mov in insb je aas fstps cltd inc mov xor inc call mov mov xchg sub mov mov imul imul das lods (bad) ds ret push mov sti sub mov sub cmp (bad) xlat add mov adc mov das and (bad) add std add (bad) and lods adc mov cwtl cmp push and mov mov dec pushf aad leave sahf or popa pop aaa add scas mov and jg push (bad) int3 fcoms loope bound sbb pop int shr adc jecxz add (bad) mov mov pop add mov bound mov movsb add das sub pop mov add cwtl mov mov es jns add dec daa rcrl adc rol adcb call push repz or std xchg and fbld xchg rorl mov bound cwtl inc adc cmp dec sub mov clc bound add stos (bad) jb incl (bad) sub arpl iret dec test or sub (bad) loope clc push loopne or or lock pushf inc daa (bad) not sub jg pop jmp xchg pusha add out mov sub insb and (bad) mov pusha cmp test mov or loopne or fwait lea out mov sbb cwtl or mov sub add xchg icebp loope adc pop movsb xchg imul cmpsb and mov pusha sub aam in xchg bound and cwtl adc dec and add pop cmp nop enter add pop cmpsl addl test pop cwtl mov add pop cmp xor jl aas sub or lock jnp pop lret in mov push popf inc sbb outsl icebp adc rorl and (bad) pushf and xor sub pusha xchg xchg lods leave mov mov in or adc and aad xor cmovs pop cmp bound or jne aad push adc (bad) lock cmp cwtl xchg clc in lods sbb pop loopne stc push cmpsb pop lret xor out pop pop push add movsl shlb fdivs xor or orl adc adc cld inc out cmp cwtl inc cmp adc mov sti adc pusha adc or (bad) sbb mov dec cli sbb arpl frstor pop and int3 xor dec mov lret pop ret loop (bad) and add std lock and ficomp add jg inc ljmp iret pop pop jns ja adc or push leave mov enter push inc push addb leave add cmc out jno mov sbbb jmp lock popf push loope sbb push faddl cmp mov gs jo dec jecxz xchg add jge sub sbb push test mov push cmpsl cmp lods push scas cmp fisub pop cmp push rolb push sarl sub loope bt adc sub or and cwtl adc insl sbb add lods (bad) cli jno loop xlat ftst mov lds xchg movsb out fisttpll and pushf add pop std call (bad) jns ret and out fildl cwtl mov mov xchg add faddl and arpl and mov popf ret jnp outsb arpl andl pop in pop fsubs addl dec or add and jae pushf sub jne inc test cmp cld fs aad add xchg mov arpl push and imul and adc pusha in leave test xchg clc dec add inc jle mov insl push inc and and lods rep test and jmp fs lds rclb lret inc mov adc pop dec dec fadds or mov mov add and add add jae pop add dec add sbb popa stos push arpl lret loopne aam pusha sti stc jl sbb arpl enter ucomiss mov scas pushf cli xorl les repz fadd xor mov addr16 sbb jecxz leave jo or aad jp and mov dec push pusha push sbb mull adc dec mov add push cmp fdivp or xor push shlb int mov mov xor or lret adc scas add faddl push mov int3 fcompl add and mov and add scas xor out inc imul hlt jp mov mov adc fmuls pusha frstor mov (bad) icebp add push (bad) mul xor test je hlt fwait sub inc dec mov das xchg sbb (bad) sbb aam nop pop lock and lret push mov or inc subl sbb xor pusha jne aaa dec ja into add loop mov in js test mov adc or push in std mov jbe mov addl lock fistl or jp adc mov int3 adc adc jmp mov inc pop icebp push in cwtl sti and or adc (bad) repz add fadds lock push cmp xchg dec loop enter cmp cltd or xchg xchg push test xor lcall nop test add es jnp test orb xchg sub adc inc bound cs cmp add adc in popa mov mov dec inc pop add aas xchg pop and (bad) imulb cmpl jg adc es decl add add movsb adc aam jae in jle test testb mov pop jnp mov jmp add (bad) loope js mov addb sbb adc sbb xor aad sti popa mov gs or call (bad) (bad) xor mov jp push scas mov sbbl ds sub or mov scas fsubrs into and dec or sub cld iret lret test or rcrb int sbb push mov repz xchg cmpsb stos mov mov lret or pop outsl add push loop jb mov into inc jno movsl cwtl rorb lcall loop scas sub mov add pop inc in xchg int sub mov or add loop mov and in sub mov sbbb mov movsb push pop adc fmull fdivrs insb pcmpeqd xchg cmp mov sbb or adc rclb mov xchg or lods aad rclb fstl add mov pop xor pop sub mov movsl push rclb fsubs and xchg data16 mov push inc in add test std leave push mov cltd loopne xor ss mov cli sarl jl mov ja adc orb stc jle add jne std push pop and sysexit ret jg iret loopne aad sub dec mov lods inc push pop push sbb faddl js xor inc cwtl stos adc add mov sahf sbb iret mov xor add fcomps enter sub cs in sub mov pop adc aas cs or leave push mov notl fstpt mov xchg push aas call add or imul cmc (bad) les pop dec sbb clc mov js jo iret int cmp (bad) repnz mov mov push push andb inc sub mov push mov adc insb lahf add pop shrb inc mov cli subb ljmp mov jo ret cli or cmp inc loopne add mov jge mov cmp popf sbb xchg xchg (bad) pusha dec mov xor pushf adc push rcll pop test inc mov inc loop pop nop ljmp sub lock sbb (bad) mov add in inc lods push cltd fmuls rol sub sbb ret add cmp add push arpl jecxz and jmp cmp scas sbb jecxz add bound jae xchg inc add test xchg xor ja and sub es xchg adc out jb or jbe icebp cmp add pop (bad) cmp mov ret add mov and call int inc cmp mov or or dec lret add iret jl into fild push sti sub add cmpxchg mov movsb push xchg out jb push popa pop in lock mov pusha mov fsubr idivb jg insl inc adc aam (bad) mov or inc mov imul sahf or push rcrl subl js in mov add jns xor dec je inc popa adc and sub in pop sub stos shlb jno dec in push call sbb rcrb adc push xchg push fiaddl mov cmp nop lods rorl les lods sub orw fcompl fisttpl leave jnp or push or out mov xchg mov xor jo and jge outsl out jo fiadd mov mov cmp lret and and dec pop faddl dec je in rcrl stc mov push out cmpsl push fdiv or mov or push fsub sbb loope sbb xchg push gs adc insb and adc dec fwait int3 sbb adc and jbe hlt mov push mov fwait mov push enter pop dec jb lock clc in scas test rcrb pop ret push pop in push ds jl add stos out mov call js sbb lret dec cmp adc push push xchg pop push loop test jne ljmp mov stos mov mov das mov mov loope add mov inc or cmpsb les (bad) cmpb pushf add sub sub add mov adc incl sub add into mov and xchg mov sub lock imull loopne push inc add lods clc cmp in out inc les dec xchg loopne xor js loop fadd sbb xchg push clc mov inc sbbb and adc add dec inc or xorb test add shlb (bad) adc lock jae or in add jbe call subb (bad) pusha pop xor mov xor shl adc cmpsl addl imul lock ss clc mov xchg mov xchg loop mov mov sysenter mov push repnz jo (bad) mov (bad) or call or lock testl push cmp or cld out adc call pusha scas mov lock popf mov or jp stc inc xchg seto (bad) cmpsb (bad) outsb wbinvd lea hlt stc sbb sti clc xchg jmp clc mov cmpsb repz push nop nop int3 or shll fdivl mov xor clc and inc clc nop les and jns inc add jle sbb ret test ds aas mov lahf imul xor in (bad) movb sub adc mov inc js xchg push push in sbb std mov lahf pop add jecxz mov cli cs notb or cmpsb (bad) mov mov test inc dec cwtl push stos mov out sub push cs mul or loop in sub pushf arpl outsb in push push cmp sbb pop mov jmp sbb mov fcoml xor adc jmp in adc add xchg std insl (bad) leave rclb lock and push push push push shrb insb inc push clc bound inc adc int3 push xor nop sbb xchg mov pushf aad xchg loop nop sub mov mov sub cltd add jge adc arpl sub (bad) rolb fisub pop mov xchg mov cwtl stos mull push pushf ja add and cmp inc add clc pusha jge jmp add adc shrb popa ljmp enter push xor mov (bad) shlb jg cli call (bad) push insb add add add inc aam nop dec in fimul pop or mov add mov das popf cli enter push mov push push mov shl sub aaa lock or mov xor cli push leave xchg andb jo lods add or pop rorl cmpsb movsb xchg popf shrl adc dec ja add or xchg rclb add divl cmp les std ficomp add pop xchg mov inc sub mov add aad in add rolb es mov nop add std lods mov add jne cld push sarl call mov mov sbbl adc push in mov cmp jno adc push adc pusha or cmp adc fsubrs (bad) repz cmp adc rcll sub mov fstp adc jns mov sbb lcall adc lea adc adc je scas test stos push clc psrad notl pop cmp jne mov pop leave dec test adc xor (bad) push mov add jl jecxz (bad) (bad) or decl subl scas adc xchg gs adc shrl cmc movsb roll cmpsb aas add mov mov ds (bad) xor sti pop xor leave out ja pusha stos pop or sbb imulb add in mov push popa and out fcoms call xchg insb aad fcomp mov fsubrl inc or call pusha or push fdivs dec lods xor sahf out or lods cmp lds rclb or imul lds add xchg adc in adc dec bnd mov cwtl xchg mov mov add mov push adc fcomps ljmp ret enter adc (bad) push adc addl xchg cwtl adc sub lds mov (bad) (bad) push sbb add push mov pusha dec dec xchg sub adc insb pop add repnz xor inc jp add add jl loopne jno daa (bad) ss cltd call int jl xor jl cmp adc xchg sub jb or clc (bad) mov in popl jnp adc push add adc jo movsb inc mov test dec dec xor cmp xor inc shll or push (bad) xchg fs pop ja clc idivl aaa mov pop nop inc sahf pop cmp pop add mov or bound sti and mov out add lds and jb or fiaddl xchg cld aad sbb push out jp rcrl dec pop ret in loopne xor push test imul mov fadds and stos (bad) repz in mov ja jb pop sbb push xchg jl js (bad) addb loope inc (bad) mov jae out mov shll xchg and cmp pop insl leave call xchg push and in lret dec les inc mov sbb fsts out xchg inc fsubr out pusha add dec cmc into cmpl int3 pop add sbb shrb or pusha or push test xor push pop and outsl shlb sub xor push pop mov add in pop mov scas stos into ljmp insb mov add pop sbbb sbb push psraw mov in or add rcll shlb (bad) push cmp out lock test push daa add (bad) out test sbb icebp stc cli leave lods inc sti pop in cwtl test pusha ljmp adc dec mov adc jbe in clc xchg xor lds ja imul mov or or test das ja cmp sbb add inc and sbb sti nop push mov xchg push xchg aaa sub xor das or es sbb int cwtl push xchg sbb or fiadd mov punpcklwd adc xchg add add pusha jmp pop pop testl icebp add sub mov fnstsw sbb js cmpsl aam push sbb inc mov sub pop or fucomip xor scas or sbbl sbb add imul outsb insb mov mov loop adcb test sbb outsl test pop mov ror add push inc and mov divb sbb sbb shlb inc pop xchg sbb xchg rclb stos add and sub add cld xchg add rcrl or pushf lcall inc pusha adc add cmp (bad) cld dec sub dec inc aam cmpb mov or pushf jns shrb adc loopne test adc sub roll ss pusha mov cmp repz in push pusha xchg mov push pop test inc sub fwait mov loopne addb into xchg sarl adc adc dec inc call (bad) mov mov test pop xor les mov clc and sub mov mov inc shr pop sub or popa adc pop jo or sbb call bound adc push or cmp mov xor roll (bad) xchg xor mov mov stc mov psubusw xor call add xchg add movsl cmc add aas sbb shrb gs dec add loopne aas fist mov or xchg add or or push dec call and add push xor addb mov ljmp sbb loopne loope hlt push pop mov arpl fmuls mov mov dec movsl icebp mov sarb add nop int3 add lods xor xor stos popa loopne sbb and or mov mov mov repnz sbb sub cwtl and inc icebp sub pop pop lahf pop add or jecxz mov pop mov sbb shrb cltd imull mov test (bad) cmpsb rcrb scas test js and or mov mov adc addl mov sahf add or push inc xor mov mov test and cmc nop dec add xlat jno lods repnz dec push mov test inc cwtl add pminub pushf add adc les xor cld imul inc cmp add push out pushf pop mov (bad) rolb pushl add jge rol scas mov or xchg jmp cmpsb inc sbb in mov push call inc js xchg imul add jb xor sti xchg adc fs lock loop mov and sub pop sti mov fwait clc cmp adc adc and fistl lret inc lock pop popa jg add icebp int fs adc jb dec mov or nop mov cld pusha and fildll stos orl pop add popa mov adc xchg sbb pusha rcrb add stos call push pusha xchg sarl push fwait add xor add (bad) in clc add mov pushw sbb inc pop pop imul test in call mov jo loopne movsl inc mov or jae mov mov bound mov xlat jne sbb mov lret punpckhwd mov int add scas push popf and mov js mov in nop adc add std push imul loopne gs mov es cmp adc sub push daa jl repnz fstpl or or adc jecxz pop cmp adc or or and add sahf add add xlat lret pushf fild cli push dec cs push outsb push ss andb pushf loop xor add lods dec fistpl (bad) sub xchg cmp je mov mov pusha cmp and jno or sub push and rolb sub icebp dec fildll test in or mov scas sub add pop jb leave sub xchg push out in stos jle or cmp bound sub inc test xchg pop add lock sbb push cltd and and sub clc adc adc test pop add sbb mov xor pop shrb sub fsubrl or mov add sub hlt pop out inc or or xor call or and push xchg mov popa push das and mov test xor roll add rorb loop jmp rolb dec add dec out shrl les adc push in test or incb pop xchg jns mov sbb sub inc add dec jge jno xchg test clc xchg clc add bound cli inc cmp sub mov sbb mov pop aaa mov add fldl push add hlt jae fdivr mov xor sbb pop inc movsb sub add movsb int3 xchg mov pusha jo lea sub cmp xchg push pushf int3 movsl cwtl (bad) adc cmp adc or popa leave mov lods push sub sub fwait inc ret repnz or js xor test mov add xchg dec and cmp jbe in push mov scas push push inc js cltd or inc rolb (bad) mov popf scas inc sub das sub ret out out mov repnz cmp add cwtl or xchg cltd xor nop movsb out push adc stos sub and sub test adc incb pop dec lods sbb daa fstps js mov adc dec or pop inc insb xchg in xchg sub mov and dec or xor nop or loop clc xchg jae arpl (bad) enter inc imul sbb pop or insb jle sbb jmp aas add mov cmp cmp push pushf insl inc and and push in lret jge rcrl sub jmp repz out mov mov lahf mov add mov and add adc imul inc xchg (bad) xor inc jg loope stos (bad) cmc rcll add sub pop icebp mov adc xchg mov inc sub mov mov ds nop add stos adc aad lret inc push xor loop fisubl lock pop es cmp loopne gs sub test adc mov add push stos mov pop add cmpsb (bad) iret jae and push jle les xchg pop inc push enter loope shrl rclb add lods in jl add pusha rcrb cmp xchg lock xor xor mov bound or or cmp nop xor xchg add and jl shrb mov mov xchg mov nop adc dec std sbb sub lahf cli add sub pop jns sahf bound dec mov cwtl test xor je inc rcrl jg add push movsl pushf adc add xchg add pusha pop jno xor test les movsb or jge push in int3 or cs int add mov lock cld cltd dec push inc je adc adc pop in xchg jo dec cld test pushf xor daa in ljmp (bad) or stc dec sbb mov adc gs in mov or insb mov sahf loopne loop fidivr dec mov mov cmpsl inc iret sub and cmp pusha push clc test mov rol push jp adc add add dec pushf roll out mulb ret add mov sbb mov jg push shlb test movsw clc (bad) mov sbb xor aam pop inc dec mov and in or mov daa add pop and xor sub int3 push and xchg dec das mov xor push push (bad) jno or (bad) or adc leave sbb pop xchg mov xor mov aad push lock add fstps (bad) popa repz test fild loope,pn in push out xchg imul lret mov iret (bad) jae jo mov pop add lret cli or or sbb adc scas add inc outsl dec pushf pop pop and out add fdivl jo inc loope push test push lea mov movsb sar push pop xor sub lods or inc xchg test jbe add mov js inc or xor shll rcrb imul push out xchg xor popf xor call nop loope sub or adc pop pop dec add lock and loop push inc lods std pop and lahf adc or (bad) into mov pop js out push and fnsetpm(287 sbb pop les xchg inc hlt nop nop lods sti push sbb sbb popf std movsl add nop aas daa mov add xchg out (bad) push notb (bad) mov fs hlt insl or pusha mov clc loop sbb push roll fs jl popa insb out insl or add mov hlt sub loopne add xchg push xchg sti add sub mov adc add (bad) jb add dec out clc jo add xchg (bad) cli xor test les push and lods adc repnz les lds jo adc inc loope out inc sub jmp add aad dec sbb inc fbld lods jnp aad sti dec inc pop and add inc lods adc jne cmp mov loop pop lods dec jl pop xchg or or imul fadds sbb xor pop popa dec lret aam pop cmpsb add in jp stos cs inc and (bad) add (bad) mov in mov sub movl dec sub inc pop outsl (bad) xor les outsb jmp lcall aad fisubl adc xchg pop pop xchg pushf lock imul out scas pop jg ud1 add stos andnps push (bad) adc lret test lock cs ljmp pop add cld outsb adc or cs add out cmp mov pop sbb clc addb sarb jl shr movups or cmc or push clc test jns mov rclb adc cmp fstps shll sbb and mov mov add push cmpsb pop jo cmpsl test hlt push mov mov out or push push xchg or lret nop mov pop fs daa and mov cmp add shl inc adc push sub (bad) and mov sti (bad) test xor mov mov cltd jle fs mov adc mov ds add test loop out add outsb popf cmp movsb dec dec sub push jg or in hlt rclb mov jp rcrb fnstenv mov mov rcl sub xor ret mov or inc or mov pusha (bad) sub iret call lods xor rolb aas test add sbb mov movsl jmp sbb bound aaa daa cmc out jl faddl scas lock and inc repz dec xchg sub pop cltd adc cwtl mov adc call adc mov cmp add cltd fildl adc fadd das sub call mov in stos cld addl and fildl or int3 xor stos mov or mov cmp xchg dec inc or cltd sti xorl sub lahf shlb daa add dec or inc pop add adc pop popf test inc lock fcoml imull sbb push xor jl sbb enter clc add arpl add pop dec dec push cwtl aam sbb fdiv sbb fwait call push gs and (bad) jp dec xorb je icebp add mov fcoml lods push cmp lods iret insl and sbb cmp lods sub loopne push cmpsb pop fs les pop stos add mov push add fist adc test xchg mov icebp cmp mov and dec xlat dec int3 xor in add call cwtl jno or pop sub pushf xor ds pop pusha add cwtl push dec lret add cltd out gs (bad) out pop test daa bound xor sbb test shlb in adc jo in add and jb (bad) repz pop xchg jae cmp dec pusha mov lods in cli cmovne ret sbb sbb shlb or lods adc mov mov insb lahf adc mov out in add jb lahf popa addl (bad) loopne inc rolb or icebp test push lock in or cli (bad) idivb push cmpl xchg stc ljmp xchg lods mov add (bad) fadds notl xor aam mov test popa push nop sub xchg push out or dec add fs call cmpl dec mov sub cwtl call xchg scas les daa push mov or sarl xchg xchg mov roll fdivs stc xchg inc pop xchg enter adcl jns cltd mov mov mov hlt jle add mov pusha jmp pmaxsw mov loope mov xchg and jne mov sahf or dec loope and xchg mov or fldl std add jno sti xor inc mov xchg jo push mov dec jnp push adc add jb (bad) jo hlt adc negl shll adc xor pop lret (bad) mov clc stc outsl add mov repz popf mov pop jo or imulb test mov mov cmp test pop pop inc push clc sbb rclb cmp (bad) push aad mov (bad) daa fdivs or paddq adc add popa push (bad) or jmp mov jo push and imul movsb mov mov incb pop inc loope adc inc xchg and jns or imul sub and sbb shr daa inc add clc mov call subb je fadds adc scas nop les pusha imul cmp dec jmp inc mov sbb js jge inc sub (bad) pusha mov fcoml pusha add xor inc and jmp push add mov jmp test cmpb fsubs test and xchg pop xor jbe adc dec sarb loopne scas and cmpsl mov fnstsw add sbb lcall pop cmp ret ss push adc adc xchg and clc in add add mov fnop inc add xchg shlb enter ja (bad) sarb or (bad) (bad) xor insl sahf and fadds mov xchg xor sete cmp pop push aas inc and js lock jae push scas cmpsl mov test pop inc mov enter or scas adc popa mov mov pop add xor xor mov and or lds dec xlat add push (bad) jo push jle or xchg pop adc repnz andl mov cld xchg in mov push sbbl mov mov or dec enter je inc add (bad) xor int cmc mov inc sub and push fcoms xlat push add pusha inc cmp std (bad) jne add adc sub in (bad) pop sub pop repz fsub and adc call mov or pop sbb call adc cmp (bad) jecxz dec xor add mov enter mov and ljmp ret push inc sbb lods dec dec scas mov xchg pop and xchg insl insb pop daa cli ds cmpsl shrb loop arpl add ficoml add stos add cmp scas mov (bad) mov icebp jge add sbb stc jl faddp adc mov and mov inc push int3 mov mov xchg mov mov jae jl loopne sbb sub popf push mov mov fstpt orb ja add gs addr16 cwtl push inc cld sbbl cmp repnz xchg xchg test push or pop push sub imul mov (bad) cmp call test inc xor sbb lea mov mov mov in fisttp dec and movsb dec (bad) pop sbb call in add gs xchg les out sbb mov call int3 test jmp adc loope jmp cmp insl (bad) mov or mov jo into icebp push cld or call push shrb loope mov jle test mov fwait nop cld jno (bad) push sbb cwtl inc subl pop add (bad) sbb pop (bad) int3 subb test ja pushf jmp inc or fs or sbb xor xchg or mov hlt sub in loope cmp mov cmpsb int sub (bad) (bad) lods and addb sbbb inc xorb mulb jns aaa inc sub xchg add mov pop adcl pop sahf adc push push rorb int3 ret popa enter addr16 cmp xchg insl lret cmpsl adc leave jnp xchg add jle bound rclb or lahf into mov cwtl lds loopne push les les mov sbb insl push xchg mov pop ds ja jecxz stc xchg jmp cmpl dec adc (bad) add sbb pop js mov bound push or ret sbb xchg scas cmp sub inc mov add pop ja ret inc mov in repnz dec jbe inc iret pusha sub mov sahf or inc std cmp add pop je rolb pop xchg xchg popf sti in fisttp lock (bad) push push stos aad mov xchg mov cmp adc lods cmp ret cmp sub add push or inc xchg dec inc sub cmc mov rorb leave push and cs lods sti dec mov cmp mov mov insb xor data16 lret fwait push jmp loope add add lahf das xor cmp cmc clc fmuls mov pop sub mov loope into xchg mov and movsb and mov testb dec out or ds and loopne adc mov idivb push leave push mov pop sub xor sbb cmpsb push (bad) repnz ja cmp xor jmp sbb push push rclb xor rclb leave jp repnz icebp jmp dec loop aad or mov in into mov xchg sti add push mov pusha mov dec sub pop call shl push dec cmp inc or lahf mov pop jmp or cli aad sbb test cwtl sbb mov add data16 dec push or adc gs subb xor lret xor add scas dec inc mov add (bad) popl sub dec add mov popf pop mov dec and mov mov ljmp pop mov add in imul cwtl inc (bad) mov das sub imul and je dec xor data16 add test out ret xchg daa movsb sti outsb cwtl inc and xor xchg add aad jbe mov push repnz cs adc enter mov daa cld mov pop mov xchg add push clts sbb enter push movsw inc nop and stos mov mov xor xchg mov jo fsubrs das sbb and adc cmp jno cmp jmp popw lret in in mov inc push or mov xchg add mov movsl sbb stos xchg cmp int push add sbbl inc andb inc rolb jge clc inc add mov push push pop test adc pusha mov insb adc xchg add sahf setno dec mov add xor mov rcr inc push mov mov cwtl pop subl leave roll daa sbb add xor fcomp aaa cmp fcoml mov mov push rcrb rcll fstpl fimul add dec cmp add (bad) aas gs sbb lcall add sub or adc add and sub jb add add add (bad) pop test mov rcrl jo mov push dec fs leave adc sub mov loope or jnp cmp rorb mov xchg push dec or mov repnz mov mov adc pop mov pop mov mov pusha sbb xchg dec cmp mov fsubl xchg sub mov dec xor xchg inc test inc push and cwtl sbb lds xor les in sbb xchg inc test aam popf and mov inc push popf jbe popa pusha mov pop adc add mov and mov push push or sub add repz movsl outsl nop icebp dec into sbb hlt lds inc out or pop xchg dec jecxz xchg fdivrs pop cmp lock push mov mov fstpt (bad) dec sahf mov cs sbb cwtl sbb mov cmp mov or and imul and jo (bad) xchg or inc dec popa pusha mov shll loop inc fcoml sub sub hlt pop push xchg sti cs and out push inc (bad) movsl in dec outsb add push arpl data16 jmp pop les mov or call mov mov mov push cmp imul push test cld fildll es and fidivrl pusha adc aam xchg je mov push inc add xchg xchg dec and sub pop loope inc cmp pop pop int3 adc push sbb (bad) mov mov adc cmp add fwait inc inc pop mov movb add das es push nop xchg push or inc pusha adc xchg rcrl je mov add lods sti das xchg sub dec enter cmp movsl inc dec sbb addb push cmp jmp fsts push mov scas inc sub sbb aam sub repnz nop jle jmp dec dec rol xchg dec lock js (bad) aam scas add sub and push pop add xor sub lcall scas add out and lock add cmp jnp dec or mov or stos lock and adc pop push xchg mov cwtl add mov scas mov mov dec ret cld and pushf push lret adc mov (bad) scas and arpl inc insl add sub enter jp call fsubrs movsb sbb inc call or mov and xorl xchg cmp push data16 inc sbb dec imul or adc data16 es cmc xchg push lcall jle aaa mov cwtl inc push dec mov (bad) in nop in jle mov add or ljmp mov cs enter and xchg icebp out mov pop lahf cwtl mov pushf dec fidivr xor test sub int3 sub mov sbb or movsl mov push xor popf (bad) pop or mov mov and pushf in or xor iret xchg and cmp cwtl sub je and sahf sarb int cmp mov (bad) xor xlat je (bad) int leave push sub xchg cwtl pop or inc xchg and insb push cmp addr16 (bad) mov xor mov clc mov inc test mov mov sub jb popa les mov test in xor add (bad) daa sbb (bad) lock pop test jle add mov out enter aam pop out add xchg inc fs loop movsb adc lock cmp bound pusha mov mov je fsubr dec arpl cmp repz das imul nop xorb xor lods pop mov or sub sbb mov inc rcrb ss add dec aad lahf or and outsb (bad) mov shll rolb sub (bad) int adc or sbb pusha add insb sbb aad sub insb mov push roll lock or fisttpl clc je push gs lods fidivr mov shl dec fcoms lock popa testb addr16 xchg pop pop pop fwait xor cmp rcrb (bad) jp popa mov push fistl movsb popf sub out dec and fsub mov test or pop inc add cmp or add gs mov ja add icebp loope out sahf int push test push lock xchg mov cbtw cwtl mov inc les add rorb in repnz mov in cmpsl loopne inc pushf mov in jecxz add insl or mov or mov or lds push pop pop insb cmp inc add and jo dec inc xchg cpuid fwait xchg clc sbb sbb fsubl lock cmpsl int testl push sar xor pop cmp mov enter jo push xchg xchg or push mov mov outsl or aam sub mov fdivs rol push or and push in sub std mov and sbb cmp sbb xor inc pop sbb pop xchg mov xor mov aad jmp mov ficompl and sub inc mov adc xchg outsl or (bad) sbb mov inc arpl aam nop insb adc xchg dec sub mov jl cltd pop mov or int3 push cmp xor je mov lods mov push and adc fcompl sbb cwtl adc jecxz inc dec in mov pop xor sub jno sub inc fmuls push outsl (bad) push push add (bad) jno movb xor mov (bad) scas jl push aad imul adc or dec mov cmpsb cmp sbb inc cwtl dec sub cwtl or pushf frstor sub dec xchg pop xchg jmp add push xchg popf add jae mov xchg in movsb pop fs subb push adc add jmp (bad) lods or in pop cmp mov lret ret (bad) data16 rclb (bad) mov jno cmc fimull or lods pop or dec pusha addb xor inc lahf xchg clc sub movsb adc mov sarb ficom pushf or nop xchg sbb xor out push mov loopne movsl sub dec int or (bad) nop aas add inc pop loope stos xchg cs mov cs repnz inc and jnp push pop sub shlb test dec pop pop les mov xchg je add decl inc les sarb xchg inc jp push or add jae fbstp jbe cmp jge int3 xchg lret xorb loopne das add mov mov or sub xchg dec or dec jb dec xchg leave mov push gs xchg pusha clc out loop pop lods add xchg mov ret adc add movsb ljmp sub push nop cli xchg addb lret dec jo lock rcrl mov adc cmc add sub jno sbb push lds push shl ror mov add sub je sbb mov push pop adc and or cmpb mov adc int3 and mov test sbb xor sahf lods je jmp insb mov sbb shlb push stc in and xchg xor mov inc pusha js mov in int adc cmpsb or mov xor xor hlt lock mov sub mov je cltd mov ljmp sahf add (bad) popa rclb loop xchg push fs inc mov sbb pop push aas fwait xchg or jns add inc mov insb lock cs rolb inc jbe xchg xor xor add xor hlt cs in push sahf inc sbb insl movsb movsl cltd push jb in add ljmp loopne pop and xchg xor and add and je cmc sti (bad) pusha push in in sub mov (bad) cld adc pop (bad) je adc ja stc add dec push add pop mov or fisubr ret rorb pop lret outsb jne mov cmp (bad) jns (bad) shl adc or adc test fildll push cmp std addl les lahf shlb es bound lds add jb sarl dec insl pop inc cmp lods nop mov dec xor adc cmp loopne test lahf mov sub movsb xor enter push jp in push das imul pop fadd scas sbb (bad) mov daa bound dec and inc mov out push or pop outsl inc push mov mov sub or repz mov sahf cmp jb xchg dec add icebp mov push imulb sub fdiv (bad) mov adc push xor cwtl pop out cmp into or sub and mov fsubrp scas push loopne xor and adc mov sub inc pop xchg xchg xlat fmull mov pop rolb sub inc fist dec ljmp push xchg dec sub push xor lcall sub jl in pop add mov xchg mov popf mov mov mov mov adc iret leave or jne and xchg pop jno and xor dec xchg or add mov cwtl pushl mov jo mov xchg mov jae dec test jnp sbb and mov sarb push das mov cmpl xchg lret adc pop ret enter xor lahf or or ljmp or dec mov inc lock popf dec mov mov mov scas cwtl bound int3 add (bad) push mov test inc test stc popf add and xchg sub dec pop ljmp sbb lods xchg sub and mov int3 insb xchg shlb lahf loop bound xchg jns sub or leave pushf lods call (bad) fmuls or dec (bad) cmc mov stos or or sub fidivrl sahf push add jl loope stc add fimul cmp icebp out pop push xor fmull cmp cmp roll adc test xchg and (bad) and nop dec sbb (bad) repz sub add xchg add mov notl xlat xchg ja dec (bad) xor mov shrl sub rclb rorl add mov aad out sub pop cltd add rolb adc mov or xor mov mov or xchg cs adcl fidiv pop xchg ljmp pop (bad) sbb mov ds roll iret loopne xor push lock (bad) rclb xchg adc mov push xchg inc mov mov xor (bad) leave daa pusha or xchg dec (bad) cmp pop inc rclb sub xchg lds cld pop push pop inc and mov clc pop add les mov js sub push stc pushf test jno loopne js mov lock sub pop fistpll pop pop dec sbb into dec xchg and das xchg pop mov push push mov enter dec pop (bad) lock pusha les pusha sub lahf (bad) and push les or mov and cmp rol xor jno data16 fdivrl lahf hlt xor jns dec xchg in les and (bad) shll movsb xchg xchg adc and jp mov es xchg in dec dec pop cltd into and and dec sbb jbe jl mov in enter dec lea adc ja xchg mov dec and mov iret pop jo lea pusha mov (bad) sbb mov mov xchg mov fldl cld push dec xor clc popf loopne inc jmp ret mov cmp mov xor add jmp adc popf dec mov xor and mov daa cmp out dec add jp int3 adc int3 das sahf push scas imul lcall jl jmp sbb sub sub dec jne bound adc xor std and push rol mov cwtl lods fs pusha (bad) ror jno and fmul ds cmp sub dec test add add loope mov sub jl ret jecxz jmp daa mov scas push or xchg sub sbbb jecxz cmp inc sub shl push inc adc push push adc add ret mov nop pop mov in cwtl inc dec inc inc add or xchg xlat sub cmp pop push lret add jae lds push push (bad) lahf cmp cs rcrb mov add xor jl push dec sbb fcompl ds inc test ja cld sahf mov leave sbb lock incb adc nop lock mov add leave pushf movsb in add pop movsl or scas push sub mov sarb je mov mov dec jns mov xchg pop dec (bad) mov cmpsl xchg roll pop or xor add and rolb sub sub mov fwait je add inc add pop ds cmp push add loop cwtl mov sub inc pop jne cltd sbb fwait mov lcall cmc inc cld pop (bad) push cmp movsb push std test (bad) imul cmp sub pop test std adc int3 hlt xchg dec (bad) xor sbb inc js popa loop lahf sub test pushf std mov mov sub cmp xchg add out lods mov les dec enter insl sbb mov arpl mov pavgb push and test rorb jns xchg mov mov push (bad) jmp sbb sbb paddsw pusha adc inc and test add inc or mov xchg rolb and jne sti (bad) cwtl mov pop cltd push push and inc push add inc sarl xchg imul push mov push add mov hlt jmp sbb sub sub sub popf gs and mov lahf push adc fcoml mov in dec push insl popf rolb mov mov std stos popa xor lea mov ds mov add cmpsl dec ffree inc repz inc leave clc cwtl xchg dec fwait add fs pop les test ror adc stc fdivrs dec (bad) cvtdq2ps mov out pop push rclb xchg push shl xchg dec out repz leave lds inc xchg js lret and or jb insb inc aam test dec xlat or data16 (bad) mov add mov push std sbb inc nop xor pop or and (bad) pushf (bad) dec and rol jl pop jne scas aaa or jno mov ds inc sbb data16 inc pusha (bad) in subb xor (bad) int (bad) push or pop scas xchg mov icebp test dec sub or test add mov sahf sub pop pop mov and addr16 fsub xor add xchg mov or movsb push and outsb das push push dec pop add xchg scas lock xor outsl xor cmp and add mov out in mov adc add mov test mov jo push lahf or cwtl pop stc add dec (bad) dec and push (bad) jg ja add pop fs daa mov out add outsb sub dec fstpl or add daa ds jp pop xchg mov xchg dec jo sub adc or pop add fabs add je out mov lret mov pop int3 enter jb dec and push mov add lods cmpl and lods push xchg lods scas and sub sbb add sbb ficom cmp out add andb cld or insb imul dec dec pop lret in in mov adcb jno cmp inc mov mov sahf adc shr sbb jns adc adc or leave in cmp dec xor mov test and ret add push mov cmp subb adc push leave mov or es add sbb nop xchg lahf add incb pop xchg jbe pusha mov call add or or cmp daa lcall leave xchg mov test cmp jbe aam (bad) roll shr xchg add ljmp and daa sub lods or pop movl jo out cmpb xchg dec mov (bad) nop loop add scas sub in adc sub and mov ret xchg pop dec sbb or xchg jge roll mov push mov (bad) cwtl push and imul fnop std mov (bad) hlt das cli cmp rorl ds das sub push cs inc jecxz mov push adc mov sbb in mov dec cmp push icebp add in inc sarb add in mov lds aaa adc adc inc lcall out jo bound fistpl dec and leave hlt sub and cmp add xlat (bad) cmpsb sbbl sub xlat adc xchg sub sbb shll cmp sysret sbb pusha fdiv add (bad) lock inc or jl and pop xchg adc and cmp and cmp sub xchg scas mov pop mov pusha aam cmp mov insl or test rol lock push and inc pop sub imul sbb dec cwtl and sbb scas push push xchg loopne or sub cmp xor hlt ds and and iret int xchg pop xorb mov and fsub jmp cmp movsb test mov sub dec jg mov pushf pop bound push mov mov inc movl and (bad) lock clc fiaddl add int ss add xchg mov jns jne jno add push (bad) ret add lds add or dec push jo jno ljmp inc gs rcr sti cld into dec cli push cmp cmp push or repnz (bad) mov push out sbb ljmp cli loop xchg mov cmp and ficom lock jo inc sbb mov lock rolb push sub popa add sbb cmp adc pop shl mov fcompl jae push push and inc jnp jne imul adc call jnp push add (bad) mov add xchg pushf and adc or inc jne pop lea nop lock dec jnp mov sbb (bad) jmp enter adc or outsl pop push shlb adc adc aam (bad) imul add test and dec adc ja stos (bad) sti sbb mov pusha push sbb mov mov mov fs mov enter lock das and xchg xor sbb sarb push nop cmp loopne cwtl loope add sar dec (bad) decb jns xchg mov mov daa mov lcall add mov xor icebp pusha sub pop lcall cmpsl popf jge adc pop cmp sti xchg jnp orl or or inc inc les nop inc xor mov add repz pop inc mov nop add xchg pop pusha or cmp pop clc int3 or cmp sub and scas out fistp loope push test repz imul addr16 sub rorb sar lret mov pop add or push mov fadds xchg data16 mov stc pop fwait out out sub sbb cmp fisubr xor push dec jl lret shr xchg push enter enter xor addr16 adcl roll in lea inc jno aam mov adcb fwait nop sbb inc jge nop and inc and movb mov xchg lods sbb pop daa sysret pushf mov mov xchg inc (bad) mov dec into inc mov xor lret push (bad) shll inc inc push hlt add push sbb sub add or xor add arpl adc fidiv out add mov dec or mov mov mov adc jecxz add fs stos pop or inc dec xor scas xchg (bad) jb xor add xor les cmp insb xchg cmpsl xchg add out call push push and push dec adcl or xchg subb sub dec inc pop fadds and fisub xor cmpsb push and ja add fnstenv nop fdiv popa fldcw out jecxz sar cmp inc sbb jge pop faddp sub inc sti fild sub es sub stos fwait xchg mov and push test jo rcrb dec sbb add xor insb xor or jmp and out pop mov mov and pop loopne fdivr add pop jg inc arpl sbb sub cmpw pop cltd add xchg lds in xor out repnz push loop adc push mov pop sub xchg push mov call pop sub add xor push push push lret nop push push mov xor xor or push fsubrs jae jg lret add pop shl neg push clc popa stos mov mov (bad) mov jnp aas pop (bad) popa mov daa pop push inc push mov je mov push cmp and aas xor push (bad) push pop mov insb add dec fsubr xor into outsl fstpl xor or xchg fidivr mov add or lods mov cs js rclb mov jbe ds cmp jmp mov push (bad) pusha mov inc push pop xchg or and push push mov jg cmp fwait push out dec ljmp or and in sbb sub pop orl inc mov sarb mov sbb jo xchg test cmp movsb mov add std jl in add pop mov js push jmp push imul das or jmp (bad) (bad) xchg cmp add jmp jmp rcrb mov mov or pop orb dec pop xor adc ret pop xchg out int3 xchg xchg (bad) stos das sbb pop roll cmpsl inc (bad) xchg pop pop inc or xchg inc ja and sub (bad) and xchg test sbb and mov mov ret sti insl mov adc mov xchg sbb adc inc or push sarl pop pop in adcl cmp mov imul pop dec ror and pop leave hlt push insl mov or xor jmp add mov inc inc movl pop dec dec ds pop (bad) or jg andb outsl popa xor aad scas push (bad) pusha mov push fcmovu rol sub jae dec add call gs push popl (bad) ljmp sub fiaddl or jmp enter pop dec xchg add mov ljmp ret mov int3 ret mov mov and stos jl push add lcall inc mov daa push jbe pcmpgtd pop pop push push pop cltd and or mov mov or push adc pusha xor daa insl add cmp sbb sub pushf or xchg add outsb lahf jp movsb cmp cmp loop jmp inc stc fstps add mov sub movsb pop js imul in pop add cmp and mov jno or cmp xor popa sbbl pop stc push insl add dec (bad) hlt push or es mov (bad) or in xor icebp lods xchg jbe nop push mov movsl pop push das pop je xchg repz mov add ljmp movsb stos faddl add nop cmp xlat gs sbb and xor adc push add test jno (bad) push mov mov xchg cmp jae or push pop test xchg push shrb cwtl ja jns fisttpll test push daa clc add repnz push ja sub xchg pop pop lds inc sbb imul mov dec dec sarb inc or out ss ja add bound call push xor stos shrl loop xchg out push ss dec dec bound or mov dec lods cwtl mov mov jae xchg dec add int3 scas hlt ficoml cmp orb jge (bad) aaa dec fsubrs xchg mov fwait cs add (bad) lea daa mov aad pop dec bound dec pop fld1 pop stos sbb push daa aaa lods or sub adc add mov pop mov xchg push add fisubr dec and add dec sbb test sub xor inc test add ret push mov aam incl xor dec mov lea and mov mov cmp stos adc mov mov and mov nop testb sbb lcall xchg push sub bound or add pop add and call add add insb xorl enter fnstsw push pop pusha sub (bad) inc sub add cmp xchg mov in out cmpb iret lahf jb stc out cli mov insb mov mov jp add bound mov dec in adc out add sub jne arpl and fisubl std into addb std (bad) pop sbb add jno or rolb adc iret adc scas and or ret sahf dec andl lahf adc add ret pop pusha add push lea test and sbb and xor subb adc int stc push nopl xor les inc arpl sbb mov push or pop movaps adc adc add nop pop ljmp (bad) ret jg or cmpsb pop xchg xor dec das popf adc in repz or ds mov jmp dec adc loope adc cmp push mov xchg add dec push cwtl out lods inc sbb arpl and in sbb or jnp sbb xor jo or aaa rcrl lcall int add add addr16 xchg fs push out sbb add lahf xor pushf (bad) sbb orb stos jmp roll dec jl mov popl ja mov pop ja rolb mov xchg sbb and or xlat cli sub and jo dec and sub inc ja xor add add add je adc add xor lds lret pusha pop push or hlt ret xchg test (bad) jp addl adc add scas cmpsl push dec data16 or arpl xchg pushf pop jbe and insl fldl cwtl xchg roll andl mov lret call outsl and inc les lods inc pop (bad) lret in sarb xor xor lret dec lahf pusha sbb movb mov pop (bad) push sar inc cltd or mov data16 xor push jle add cmp xor pop xor sub add hlt aaa es add xor or mov adc shlb and loope jg or adc sbb jbe add pop add ds jl outsb movsb or cmp and dec dec (bad) sbb jb nop adc outsb insl (bad) xor ret lods mov xchg cmp mov lock mov fs mov push aaa dec add arpl inc xor add inc jb jecxz movsb inc mov xchg adc aaa dec mov cmp dec (bad) jmp ret int3 pop mov inc pushf adc xchg pusha in xor mov mov sarl cmp pusha enter dec push push cltd orb and ja pop bound jge (bad) mov mov and jg lods mov push pop adc je pop add scas add repnz sbb rolb adc pop rol jl push data16 (bad) stc cmp pop push xor inc (bad) jmp push xchg mov cmp adc sub add test xchg sub pop loopne inc adc mov and (bad) sbb or ss lret xor xchg mov bound (bad) dec pusha push mov adc (bad) dec add inc enter sub pop sahf add xchg shlb sub pop shll sbb xchg test test cmp sbb inc xchg mov fmuls andl lahf xchg or pop or mov jnp lds sub inc lock stos cwtl popa mov es adc ret adc orl mov add sbb cwtl fs adc mov or jmp sbb lods js cmp stc cmpsl sti and inc pop push popa xchg bound nop xlat lahf hlt add and inc ljmp in add mov add mov imull pop rorb xor inc add aas sbb jge or jp cld sti fcmovnbe sbb lock lea xchg roll cs xchg loopne jno dec and and push jp add push imul pusha iret mov push cwtl add add jne jns in or neg ds testb mov cltd or clc adcl dec and cltd or pusha out push aas ss rcr xchg sbb testb add adc sahf fdivr xor je add movsbl sbb inc or andb mov cmp and jno popa lea (bad) ret mov std xchg xor (bad) adc int pusha mov xlat adc loope xchg roll (bad) and ret in xchg add mov or xor test push dec add add cmp (bad) (bad) and int3 outsb sub iret push or xchg (bad) insb cvtps2pd xchg add add cmpsb andl sub scas (bad) xlat cltd daa add cwtl je mov adcb sub xchg orl pop mov dec and ss add insb push dec inc mov aam cmp add inc call add dec jb notb mov or sbb lret adc add cmpsl add outsb sbb out mov push aam lret add mov inc ss adc add push mov and (bad) sub enter sbb pusha js sbb mov mov jecxz jmp pushf and jmp mov add mov add insb fs or mov movsb xor rcll mov jns add sbb pop aad je cmpsb sub and or pop adc movsl or adc adc (bad) daa dec mov sbb sub pop dec repz adc jbe cwtl or and push jecxz xor (bad) stc fdivr loopne add lds xchg pop mov fidivrl pop xor fnstsw inc dec inc add pop fcmovnu mov inc lsl sbb add sbb insl sub sbb icebp test sub add push leave push dec lahf xor push pop xor push aad (bad) cs int3 add (bad) mov (bad) into mov jp (bad) lods push mov and stos inc push push call cmpsl push jo add and out bound gs repnz das jbe dec sub sbb pop lcall adc pop xor mov dec mov sub xchg in adcl arpl std fsubl movsl addr16 maxps (bad) (bad) leave mov add pushl in sub push insb jae lret in movsl xlat inc pop xor subl les lret ja mov mov dec jno inc jl push inc inc and lret xchg loope cmp mov inc dec mov and push loope push pop (bad) movsl jae add inc jg and mov xor inc js loope cmp xchg and pop or sti xchg insl and add pop cwtl adc lret ljmp ljmp pusha and lods lea adcl int incl dec push and mov sbb xor lret rep sub xchg out sub adc jbe ja push jbe stos (bad) adc pop jl or js stc pusha nop adc imul xchg inc cmpb arpl push and cmp or cmp or notb jb push pop imul xor jo shrl incb pushf ror lds flds sub in jnp dec or xor pop xor inc (bad) dec xchg stc cmp jo add inc andb andb xchg adc add and inc xchg xchg mov nop push mov push in cmpb or sbb das mov cmp push cwtl sbb inc inc dec mov and adc (bad) in or dec inc pop sti inc and mov push pop xchg sbb pop pop cwtl idiv subb sub sti add js cmpsb mov push (bad) ficoml pop push cltd leave sbb xor add lar and hlt pop or and xchg xchg adc xor xchg sbb aad pop adc lret lods mov std xor or xlat clc mov fcompl jmp cmp cmp clc pop jbe mov sub add es scas inc xchg js xchg roll in ja adc or popf lods (bad) in (bad) jo push cmpsl lahf movsb push add and and add add or popa adc push dec shll push add xchg mov or fs out fildll inc mov xchg xor aam cmpsl cmp mov dec outsl bound and xchg sub jle sbb or fistl ljmp xor or mov test jnp dec ret mov pop xchg jb mov pop aas add hlt inc loope inc (bad) es insb xor xor inc iret aad cmp outsl rorb push adc inc inc dec or jnp sahf mov mov dec loop popf xchg nop movsb imul or pop cli sbb sub das and test rolb movsb push lods out rcl push pop xchg icebp add sbb cmp mov sub or pop mov cmp or sbb pop inc repz leave mov or xchg sbb jp add fwait ja jne mov dec fs mov into jl and push jo clc repnz sub mov ljmp aam dec xor xor cmp adc and sbb inc xchg pusha in and jg mov jl andl push and xchg pushf add popa pop add or xchg adc pusha pop rolb dec mov loope xor sub lock mov aas inc aam pushf xchg xchg jae inc sbb push orb add and xor fwait lods mov or xor into cmp sbb mov in mov fs add mov push gs mov mov and push xchg inc xor adc jmp add aaa cmp subl arpl jp flds sti test popf dec adc jae jp movsl pushf xchg int pushfw mov mov cwtl add sub mov rclb mov sti inc push pop ljmp les mov adc xor dec test jecxz lock cltd pop or pop push mov (bad) jg or cmp inc in aad push lahf push adc push popf lcall addr16 daa jl pop inc subb inc repnz int sub clc adc xchg sbb hlt je leave push daa adc xlat les push testl jle sbbl adc dec jge cli push add popa mov jne shll xchg add pop cltd xchg and push xchg inc (bad) rcl mov dec and (bad) lret adc das dec pop pushf push or xor jl jae leave add xchg add cmc adc push sbb xor dec and inc dec jl imul cmpsl rol test xchg inc xlat push stc push test fcomip adc and add pop inc adc les pop shr dec xor mov fbstp mov in mov sbb and stc cmp lods cmpsl inc mov daa inc orb leave add popf aad pop orb xlat ficom add fwait and xor pusha mov mov push mov js jnp pusha into sub (bad) (bad) xor adc push xor sub cmpsl jo push dec push lahf popa dec and sub fcompl bnd sub mov ss aaa dec xor push push movsb xchg sbb sbb xchg dec xchg daa sub mov inc sub loopne dec sahf adcl mov jle mov rcl lds adc mov push pop adc sub and sub sbb push pusha cs inc ret adc divb push sbb inc scas xor ds jl lahf fs jns lret jge out dec fadds pop imul and inc cli out in push fsubrs adc or push ss mov mov xor mov pop inc dec dec test imul adc cmp arpl pusha xchg sbb js pop clc leave adc faddl cld jle pop lods in cmp test and dec (bad) fcoms outsl adc pop dec ret mov add mov or jge scas or pop push repz push scas xor sbb or pop and int3 aam jmp stos cwtl pop add (bad) xor ficomp add gs sub ljmp cwtl and inc mov add push inc add jbe xchg jp movl aad dec mov dec icebp cmp adc push add ret pop test in lods xor push ss jbe les pop sub sub js push hlt in pop lock push into adc inc sbb fcoml movsb jbe mov fwait add cli cmpsl push jl add dec rcrb xchg cltd cmp pusha add and dec pop cmp rcr lock or adcb cld in call pop sahf enter or mov sub mov rorb and adc jg xchg add xor test subl cmp xchg jmp mov and testl dec adc adc in pop roll push bound mov dec and lods movsl mov arpl sub mov lods dec movsb pop jno js nop ljmp add pusha inc adc or add (bad) int3 aam push push ljmp jne mov mov andl imul xchg iret xchg mov cltd sub jl pop daa push imull sub mov shlb ja mov dec xchg and and loopne (bad) mull insb inc adc add sbbl dec movsl pop add rorb ljmp adc std call mov sbb dec pop mov notl xor push or xchg gs stos push add mov mov leave cmp mov inc or push or xor xchg fs or repnz (bad) jo mov ds or decl incl or nop lods sarl or ljmp mov dec dec jno sub fs (bad) std xchg xchg lods xchg push (bad) add stos insb or divl outsb stc nop push rcrb adc add add sub cli inc outsb or mov mov inc sti add stos insl pop add pusha popa sarl gs xchg dec add data16 or insb add popa pop int3 arpl lods mov jbe or inc test or adc ds test adc mov in icebp out xor cmpsb ret sbb cltd xchg push xchg sarb fidivrl inc int mov movnti or loopne adc add jmp fxch cs int andb adc xor pop in cltd sbb jae mov test loopne mov (bad) jmp mov and inc and lret inc mov fwait dec xchg mov fidiv push mov inc imul dec les adc sahf daa les clc shl fsts lret fstpt movsl iret pop add mov cwtl pop push enter sbb je rorl rolb add sub lock ljmp add (bad) add lods icebp aaa or xchg and and mov outsl xor loop daa mov push push shrb mov cwtl jno je sbb cltd pop lds or push pop jno sub mov std pushf (bad) xchg add imul jecxz xor lret jl test xlat push jl into jle sbb mov cmp outsb (bad) push lret mov xchg cmp add imul sbb push insb push mov pushf adc dec sub cmp and loop xor inc xor loopne jb sbb dec out pushf dec sahf (bad) pusha and jo fldlg2 pop sahf nop aas add fadd repz in (bad) icebp pop jno mov call inc jo mov outsl adc jo es inc add xchg mov lret or notl aas mov ljmp cli push add or push or cmp adc out addb xchg (bad) add mov mov fildll mov add rol lret mov pop and xchg xor push jns out xor inc sbbl shll adc mov ss sub mov sbb add cmp adc add inc fs cmp and pop cmp mov push pop rcr sbb or fwait mov fs mov add mov inc or mov sbb jmp cmp lahf sbb adcb xchg lods adc mov shll (bad) jne mov stos or jb mov mov cmp sbb test bound into push (bad) ja sub and mov (bad) (bad) mov xchg xor rcr fcoms and aad push nop push sub jecxz mov or mov and sbb add outsl mov mov sub sti shrb dec add mov jbe mov and mov jns add mov add sub (bad) sub jnp aaa loopne or cmp pop and inc mov or enter or pop xchg popf add xor sar stc mov jmp add sahf ja and fcoml pop sbb add mov dec cmp mov adc mov stc lods cmpb (bad) insl push js lods das popa adc adc cs adc outsb test push cmpb xchg cmpsl movsl xchg adc movsb nop pop sub adc cwtl adc jecxz cwtl es (bad) push push cs pusha pop push xorl mov xchg fidivr cmp xchg sbb add mov jae add add xchg jg push nop cwtl cmpsb push mov out rcrb sub (bad) fnstenv pop sti jmp pushf fisttpl xor pop lahf mov sub xor xor and xchg mov repnz shll adc stos mov jno or stos (bad) xor push sub imul mov mov jb push dec test push adc lret shlb imul (bad) mov lds add arpl sub mov ret jno mov pop les sbb outsb mov inc js xlat out dec inc jp fcoms jb inc sub cwtl add std inc out pop les ret (bad) jo pop lods (bad) cmp add xor pop dec inc inc add xchg sbb adc (bad) xor into dec nop jbe mov mov xchg dec add xchg add sbb dec addb loopne lret scas push mov inc bound fcmovb cmp outsb andl dec sub add stc push add scas adc xchg popa cmp xor mov sub cmp sub xchg bound out add add js mov push mov pop add xor mov xchg rcrb pop sbb test fadds xor or jb mov lods mov xor (bad) xchg push xorl fdiv mov sbb mov dec (bad) fyl2x sub push pop fisubr push dec xchg lock adc or lcall nop add push fnstcw sbbb mov jae insl inc ss xchg aas mov xor movsl xchg cli es inc sbbb jnp adc jo inc add pop pop mulb jg shlb jb in lcall icebp pop sub imul ret sub lock sbb in add jl sar mov inc inc aad mov ror mov inc ljmp pop sub and push repnz sub fisttpll in mov ljmp pop cmp cmc (bad) adc add stos enter sbbb std sbb jmp pop push sub sbb stc les jae in lcall sbb aas jno sti pop add lds cwtl cmp out scas xchg dec sub loopne mov into pop and mov outsb dec add push sub sahf (bad) repnz pop dec adc push ret xor add push jo add mov subb cwtl mov xchg rcl mov lods push cmpsb sub test and and mov loopne dec xor (bad) sub add icebp add arpl mov pop inc clc pusha xchg pop lret adc imul inc or and sti ljmp push dec dec lahf clc xor mov push add loope in or push mov jno mov bound outsb fdivrs lcall out loope lods push mov add sub jae or nop fmull xor pop sbb push loopne mov mov lret cmp and movl xor neg ret popf outsl or push and lret aaa stos cs sub sbb inc sub push xor jge jno adc pop fstpt adc iret mov or jp add dec dec aam mov test push dec pop cvtps2pd aas pop mov and mov push rcrb cmp and mov jge adc or mov or xchg sub mov sub mov fwait (bad) mov inc sbb mov or add push ja push movsl lahf push jl dec add shrl adc jnp or cmp jmp jmp and nop popa and dec sub pop enter xchg inc sti sbbl insb daa (bad) ljmp adc jp fs dec push xor sbb adc js dec aam scas add out (bad) add pop push rol pusha es mov enter sbb test cmp inc and lods pusha (bad) addr16 or in sub pand popf xchg sbb jae repz aaa das fmull loopne mov lods or mov inc inc mov stos push sub addl (bad) pop fsts insb and bound orb lahf mov fistpl pop add divl inc movsl imul loope std cmp and pop inc pop jns inc sub dec (bad) xchg add adc repnz cmp dec arpl out and jb (bad) gs mov lods add sub cltd orb pop add and cmp les xor and dec test mov sub (bad) movsb int3 in add and pop (bad) sahf out jmp subb add je or lret incl sbb add rcrl pop lods xchg push sub dec push negb xor mov repnz adc add sub repz or popf ret xchg aam pop or movsb loopne addl inc (bad) fsubrl lock dec xor push add push adc pushf push icebp add jno mov fdivr mov mov sub out pushf or adc arpl jle sbb xor add xor adc sbb xor cmp pop push sti jmp add (bad) (bad) pop std xor mov mov pop cmp rolb and sbb mov cld out das inc rcrl add test xchg mov mov and js inc adc sbb sbb cmpsl xor and sbb std xlat cld and push gs clc and add lea jae fcmove push stc idiv xchg mov and add lods (bad) xor add add movsl push and cmp dec fs lock push add insb and fmull sub mov incl push iret (bad) jmp ret mov mov sub sbbl add or sbb sub add cmp jg dec (bad) and movsl jo jne sbb imul pop or or ret push jbe push lret add das lods call out imul sbb or lods sub add leave aas shlb lods jle xor and xchg push mov add sarl xor js (bad) mov or xchg (bad) mov decb adc fsubr stc dec sbb add or fadd jnp adc fwait fwait movsl mov fadd andl mov fstpl dec or xor sbb dec adc test sbb pop movsl adc push sub sar jno push cltd mov ud2 lds lcall arpl adc fs xor fwait (bad) adc adc xchg add pusha mov add (bad) (bad) repnz adc pop or push jmp ret pop sbb add lahf xor repnz pop pop pop pusha jmp xchg movsb xor or mov add and les pushf sti imul jle or negl shrl andl jp (bad) xor call push mov pop xor pop push mov imulb lods pop push mov jecxz mov rclb pop jae pushl inc ds iret ja jmp in mov sub pop push xchg in insl lds add sub pop xchg push add ds aas inc subb inc sbb inc adc cmp push je push mov js cli mov and xlat sbb dec push or pop push mov xchg adc popf cmp add aad cmp addl jmp add jmp mov push dec pop (bad) sub sub repz ret add push addr16 shr fist mov pop mov fwait adc jns mov or shr jge jge add out mov negb push xlat mov push out mov pop mov jne subl pop out fdivrl cmp aad pop cmp push sbb adc ret xlat xchg mov fimull jns sub rorl sub xchg and adc pop add mov cmp roll adc pop sub sbbb fyl2xp1 bound les movsl xchg mov scas sub ret push pop xchg cmp loope cli icebp and punpcklbw mov cmp sbb pop push jl pop push adc push push mov pop shr (bad) movsl jae jp and inc mov or sbb mov fs add rolb push add pop and int3 stc imul out jb cmc sti es dec xchg push fst aam push dec jbe xor cs pop mov jnp push cmpsl fstpt cltd outsb adc add leave adc rclb sbb fidivl shr (bad) rcll inc xchg add enter outsl hlt mov pop test jmp xchg pusha jo test push pop std xchg lea xor xchg call test les or pop dec mov pop pushf cmp cwtl push mov adc pop push inc dec mov mov push or add loope pop das fld cld lods sti inc jnp adc mov pop cmp daa jge push std cmc ret and ret push xchg les dec inc dec xchg lahf pusha push jecxz push lret pop cld fwait mov dec lods xlat gs subl jp xor lods (bad) mov dec jle pop adc pusha out xor xchg dec leave mov mov xchg pop mov push sub mov mov rorl pop fldenv sub mov add ljmp test fsts cmp ja push add dec pop push dec dec sub mov or xor cmp mov pcmpgtw pop cwtl inc and adc punpcklbw fnsave les xchg mov aam push aas sub (bad) ficoml jg dec dec mov divl xor adc add mov pop imul (bad) cwtl add dec xchg rcll dec test out jge (bad) ret aam sbb push and je aaa mov in inc push pop xchg jmp push or adc outsl push push les mov enter pop clc jp pop cld (bad) std add icebp sahf (bad) lock inc shll cld mov pop adc into pop mov adc in test pop pushf mov xchg mov test insl cmp mov scas popf stos dec lock sub and and inc ja mov or dec pop pop add jg mov pop xor push mov ja adcl test add pusha sub xor inc push mov cmovo jg sar add call loopne add sub repnz mov push mov pop xchg test sbb sarb mov mov sub arpl add fbld cmc cmpsl sbb pop jmp lods pop pop shr int3 cli (bad) jnp jmp jle add add cld les nop andb pushf cmp or dec add push mov mov nop cmp ret dec jg mov jbe mov sbb cwtl dec or jo js sbb es inc pushf pop push pop mov in dec sub push rolb pop push pop shrb mov add cmp pop lock repnz dec stos or and push push mov xor mov adc movsl dec xchg pop lret sbb int cmc cltd and xchg addl out into out push push ror shlb popa xchg pop inc (bad) out dec sub adc lock mov dec cmp add pop sbb js lret notl mov repz add mov add jb adc ljmp dec scas je sarl xchg mov scas push aam into call (bad) repz imul inc inc out jge bound stc mov (bad) icebp sub pop bound adc (bad) test add or cs mov xadd es aas lods cmp iret push dec or (bad) pusha sub jbe test enter dec lahf lret adc sbb push std rolb sub aaa and add lock adc in (bad) xchg dec lret jo add fcoms lods xchg add xor cwtl (bad) or clc pop xchg in (bad) mov push aaa xor dec dec and rcrl cmpsb inc and loop mov pcmpeqw push jecxz imul cmpsb out jb nop mov repz adc add pop xchg mov repnz enter imul xchg (bad) and sub and or cltd pop mov add push pop and addb jne or mov arpl int3 push lea jl popa dec mov rol or adc icebp and push sub gs inc adc ja xor idivl scas sbb pushf jno stos xchg and (bad) icebp jno test outsl cmp nop ret in stos jo xchg shld adc push daa xor jo out dec pop xlat add and clc add (bad) add lods nop ljmp shll and pusha push loope sbb sahf xor clc test pop jb (bad) jb into add mov movsb xchg adc mov sbbl push push pop fstpt jmp or adc pop adc add movsl add rol jne mov xor pop aaa sub and push push inc popa mov or cwtl add in cmpsb mul bound inc push pop jno add (bad) in add mulb rcrb (bad) jmp add ljmp jo inc (bad) cwtl add pop lret gs jmp and mov push or gs jbe lock jle add in repz and mov and addb inc jg mov mov fcomps inc pop push sub xor or movsl mov gs movsl push pop movsb mov aaa sub rcll mov inc push dec lods mov scas inc push pop mov cmp or and mov fdivr add inc mov roll loope sub comiss out pop das dec sti pop inc sti xchg and (bad) pop jmp dec inc add add lahf and je sbb mov outsb xchg insl or inc cld jg inc (bad) jmp jb out jnp repz and xor pusha jo push push xchg adc pop lret int pusha pop movsl (bad) rorl call inc movsl rcll in or pop cmp (bad) sbb mov push pop sbb adc pop dec movsb test and or (bad) and rorb or sbb cmp std les ret movl cmpsl in jmp outsb (bad) xor and jge movsb loopne xchg adc push sub jnp and push mov push jbe xchg xchg push pop fs in pop pushf xlat cmp cmp or clc add push cmp jmp xor lahf (bad) and xor cmc sub mov pop mov xchg jo push mov mov mov xchg jmp mov ret and xchg ljmp mov mov xchg fiaddl sbb mov mov imul rcl sub push pop xor and and add mov pop cmp and xlat cmp cmc mov mov dec adc xchg sbb xchg lods scas xor inc push jl or popa lea cs cmp cmp or mov test push push add cmp jg inc pusha adc mov mov popf adc fbstp icebp mov (bad) mov aas adc das in add xor popa inc aam repz sub rolb cmc add pop cli idivl rolb ljmp inc das jg ret or ss sub mov jb cmp inc aam lret pop mov test decl dec movsb stos lds push inc loope mov push dec test inc or jmp sarl inc lcall lods in mov adc in mov xchg das pusha sbb into sub idivl out (bad) mov mov dec cmp jne mov bound xor mov cmp sahf xor add mov imul xchg mov roll or jno mov enter mov xchg inc fwait (bad) dec sub cmp jns mov test loopne cmp xchg sar lahf xchg in mov sbb nop adc enter loopne sbb adc jg pop mov aam mov mov or mov incl ljmp sub (bad) jae call xchg pop inc dec or stc sub xlat or pop mov cmpsb push jns,pn sub sbb push jmp dec dec cmp repnz gs xchg test sbbl dec outsl adc adc std dec adc test dec es add icebp adc cmp lret cmc dec dec ljmp sbb add pop cltd sub pop sub das sub mov stos add jmp cwtl test in dec push mov outsl es cmp dec rclb or call int add pop and fiadd push mov subb inc scas dec dec lods push push add mov dec mov fwait movsl in push ss aaa push xor xchg sub mov mov sub fsubr mov push push add jl push insb or cmp aaa jmp xor mov mov pop inc neg sub addr16 or nop mov xchg lahf adcb mov mov add es or cmp cwtl jmp out pop push incl adc lret sbb rcr imul ret in test sbb add loope jle xor sub jl stc jge jg bound imull hlt xchg pop in push movsb rolb js adc push mov inc ds icebp pop add pop push xor jnp popa ljmp (bad) or ss and (bad) xchg andb pop cmc outsb call dec add mov jl xchg jno add cmp push add jmp mov call daa jge arpl sub iret add popa jecxz adc and add cs jmp push nop scas orb add mov jmp iret dec jle mov jmp lock pop push mov (bad) test (bad) xlat jne jne in xor or push or cmpsb (bad) xchg fisubr (bad) ss (bad) jb mov (bad) jnp or js shll jae xchg mov in test je pop bound mov dec aad cmp das ja cwtl (bad) jmp fisttp lcall mov mov add xor dec sub pop push movsl (bad) sub popl jae jns clc mov enter xor sub and adc in add sub shlb pop mov inc adc jnp dec jg lds xlat sti add sub jae sbb mov jnp jmp or or add jle add out jle leave test sub jl cld inc or push jno xchg ror mov stc pop dec xor test push adc (bad) std dec in push movsl push add lret dec pop leave iret (bad) lret fbld fdivrl inc jmp test or dec and rolb inc pop sbb bound cmpsb inc add add ds sbb pop pop mov pop or dec add inc add loopne daa jecxz xchg add fildll xor xor pop shrb cmp outsl sub inc or mov jmp pop out daa loope and jmp icebp pop out hlt test sub aas aad fbld fidiv das push into mov mov dec loope jb or mov mov jmp fildll jae fcompl out pop jecxz lahf cmp ror push xchg (bad) ja in cltd popa sbb sub lret or ja pop xchg inc das jmp iret rorb or mov or iret and mov inc (bad) out adc cmp gs sub pop das nop mov xchg inc pop data16 push ficompl das push in xchg add inc pop inc push les addr16 cmp aad jnp sti jmp pop jle nop push (bad) movsb clc aas fisub xor push adc out pop inc mov mov add or shl add xchg movsl movsl ret mov lret xor push fwait pushf aas jno add jbe mov stos fbld scas mov cmp cld (bad) enter push fild les pop xor push jmp cmp test sub rcll mov das enter adc push (bad) lock xor pop not xchg xchg jae mov pop xchg test shrb push mov das add pop sub cmpsl pop cmp adc pop or pusha push push pop add and push add imul (bad) out outsb idivb pop lock cmp add xor jmp jns xor cmp je lds (bad) movsb (bad) mov or mov mov cmp jg lods sub stos gs xchg lea popa es xor push imul inc and xchg xor stos cmpsb jge add shlb jbe divl pusha and sbb dec mov mov insl push mov pop sub imul lret repz mov stos inc and sarl lcall rcrb outsb in (bad) xchg gs loop lret push fcmovne mov (bad) inc xchg pop lret movsl cmpsb adc push xchg test jp cltd clc mov mov mov aas mov daa js pop cltd jge sbb (bad) out lahf push movsb rclb clc pop push movsb sbb jg pop iret lds push cmpsl add cltd xor out shrl outsl rolb inc adc xchg mov pushf sbb popf cmpsl jns stc xchg aad loop,pn xchg xor popf pop fmul aam and mov enter rolb dec out (bad) fistpll dec pop scas mov pusha mov ds pop add inc sbb in dec and cli insl or cmp lahf sub push mov push or push sub sti pop push adc mov jle mov adc add shrb mov lahf push or adc fnstcw or sub mov xor daa das and pop nop dec push mov negl fildl lret push scas addr16 rcrl mov xchg jne fdivs dec (bad) jae mov xor xlat icebp nop dec push arpl sqrtps pop lock pop insb add outsl add inc icebp add xor inc mov pop pusha fldl add bnd sarb addr16 sub add repnz bound push lcall jne mov out pop mov sbb inc imul movsl xchg gs data16 aad out fsubrl fisttp jmp cmpsb movsb mulb ja push pop sub fwait scas jns imul mov loop xchg and test dec dec addr16 add push divl and out shl push lret cli jge repnz mov orl or lret cmp add adc push mov mov adc cmp pop add push stc push out inc (bad) test pop add dec mov lret mov cmc (bad) hlt adcl or jg jge adc adc pop scas ret insb rclb sbb dec xchg andb mov stos inc sahf out push lock jmp mov push push pop jno mov sub xor add fucomi das add fstp jnp (bad) sbb inc pop test cmpsb sub jmp xor (bad) dec lea sub iret cmp out (bad) cmp shl jno inc jmp dec iret mov insb andl loop ja loopne neg mov out or jmp cmp xlat js mov adc das push lods jmp rclb pop pop sbb push pop add sub pushf cltd mov push sub lds pop dec lock test pop sub xor push sahf test xchg sub xchg scas mov inc pop sub xchg xlat xor aam (bad) out and adc or inc and sub adcb cmp fiaddl and addr16 cmpsl adc outsl cmp push pop and jp push push mov jnp test fildll lretw (bad) (bad) sub clc (bad) sbb jp sub mov dec dec sarb sbb adc leave dec fs or fiaddl ja dec mov wbinvd outsb or hlt push inc popa xor adc cmp add cli xor aaa jle add cmp cmp std sub mov fbld fldt mov dec dec adcb push mov fstpt xchg iret pop in or pop xchg mov lock dec je in out test xor or adc inc (bad) dec and mov pop into and popa add inc push jnp cmp cmc add push fs pop add or mov clc sti inc lahf scas xor or xor or mov or test clc out rcrb adcb pop ja aad mov ds (bad) repz or aam dec cmp push sahf mov add mov insb daa test mov adc sets mov rcrb cs ret adc mov divl jnp cmp and in popa adc jp cmpsb adc cmp cmp (bad) aaa jmp mov scas mov and int outsl test daa fdivr leave (bad) xchg bound sbb lahf dec inc std sbb mov push xor inc adc jae ret add das aam sbb mov nop push add xchg jnp rorl insb and push or inc dec or in adc adc add cmp mov in cmp gs or lahf loopne int3 mov cmpsb imul adc fwait and mov mov icebp decl inc add or movsb mov test and or insb popf adc out xchg lods jb fildl jnp mov add testb (bad) lods xchg add push shll sub inc dec inc in adc and and addr16 mov jp mov lock and scas arpl jb lods es add pusha test and cwtl rol std push repnz cmpsb pop add push inc clc rcr pop add js inc or xor mov popa rorb shrb lds add stos rorb sub xor lcall or cmp push aas inc loope inc cmpsb xchg xchg iret mov sbb pop pushf mov and cmpsb dec call fwait or or push jns sub mov adc mov sub mov (bad) ss inc std ret mov out popa sbb in dec lock or push jbe pop inc cmp jmp loop inc xchg xor and scas cwtl push je rol (bad) adc add shr sub popf test mov stc hlt lahf aaa inc in add loopne push mov outsl popf ja mov cltd ljmp adc outsl push mov or sbb inc movsl hlt pop ret jge push (bad) fldl push adcl fistl inc adc jle pop or xchg pusha fnstenv movhps gs inc arpl sbb push xorb push lret js push xchg mov pop dec xchg ss and outsb out aad xchg shlb jo sub inc sbb push fstpt adc (bad) sti add mov cmpsb adc push inc test aad loopne xor or adc xadd test push and jl or fstps leave and and mov sbb or clc cmpxchg mov incb dec add jmp hlt out into push sub ret in and cmp pop scas mov inc adc fiadd inc pop pop cmpsl mov test and push mov outsb inc rclb xor mov xchg loope jp sub pusha mov and loopne mov hlt roll push inc pop dec fldl adc xchg and jbe in std adc cwtl dec push pusha cs movl add hlt sbb in sub jne or add jno xor incl or and cmpsl push xlat rol xchg enter test xchg sub add jmp mov in std std pop addb jo pop or mov adc sbb mov enter mov (bad) dec xchg xor or or sub fisttpll add mov xor rclb push add lret or or inc inc dec imul lret mov bound ret mov or test mov icebp adc cmp (bad) sub add sti xor cltd dec int3 adc fmull add std in dec dec rol imul leave fnstsw push sbb or push dec adc es psubusw or gs jno pop add cli push inc test adcl or adc test and iret inc add pop and add pop sub pusha mov shll loop mov addr16 stc cli add repnz sti or or inc pop lcall inc pop in jbe aas sbb cmp into pop jmp push test mov fldln2 pop xor (bad) fs test lock ret xchg sub pop or pop mov and xlat cmc inc mov cmp add pop stos mov loop cmp xor sbb in xor add jbe (bad) jns cmp or leave xchg pop pop cmp cmp imul and sbb pop inc xchg xchg xchg add inc movsl cmp leave push push or (bad) or test add aaa sahf incb (bad) xor (bad) loop jmp add (bad) jg xor xchg movsl mov mov xlat mov inc mov ljmp add test int3 stc lds xchg adc push pusha xor outsl jnp out pop mov ljmp clc lahf test pop sti jbe add mov jae mov mov dec clc inc imul dec push ljmp cmp add andl pop xchg or inc gs jnp push jo outsl mov mov sti sub dec lea or (bad) mov (bad) mov ret cmp (bad) clc incl or adc or inc and jo dec cwtl inc add sub dec mov or add shlb or ss add cmp mov dec xchg push cwtl inc loope adc imul or mov repz push out sbb pop mulb mov lret jno xchg add jmp add xchg cmp sahf push and xchg inc push adc sarb aaa or inc ss push mov inc adcb or and into lahf and cmp cmc scas popf ret lods inc sub sub test dec xor jno xchg jnp lahf (bad) xor inc xchg dec mov stc fwait outsb adc add lcall js into in push push in jge jge mov adc out mov cmpsb sub jb adc push or mov mov mov fwait hlt aaa fwait mov mov (bad) je cmc insb push xorl repz sbb jb adc (bad) xchg dec rcll imul test xor jo lds leave std sub fs xor sbb pop mov add jb ds dec dec xor and insb or adc cmc push mov and pop imul cmpsl imul fiaddl cltd in daa leave mov fldcw mov adc or sub sbb xor fs inc adc push cmp ljmp imul lods cwtl fstpt sbb mov add fsubrs jb jo jmp es dec mov cmpsl cld adc add pop sbb cmpl cmp jge adc rcrb out lret call adc sub add mov arpl pop add push arpl sub xor rclb sub fnstsw sbb (bad) (bad) mov orl mov add mov pop scas push sbb testl leave icebp cmp lret popf mov push in and push imul mov imul push in xchg shlb arpl test into dec xor jno rcll add scas xchg ljmp pmaxsw aam fstl scas data16 adc imul imul imul or aad push pushf notb dec std aas xorb mov push or add adc and sub push fidivr xchg mov xchg sahf inc xor lea push ret add ret lahf push int3 aam add sub daa mov dec and dec into popa jns add cmp lcall out dec clc lock adc sub fmuls cli push dec repz or mov adc ret add and mov aaa gs push (bad) popf pop dec mov imul dec push pop xor jb repz gs inc shrb cmpsb dec repnz inc push adc adc xchg cmpsl sbb pop ss rorl es and pop xchg insb or in xor push add dec sbb adc adc lret add ja hlt mov sbbl mov in inc xor push add xlat dec and aad add cwtl js clc push arpl insb and xchg jne outsl push icebp iret add repz icebp sub adc stos pop mov stc rclb cmp popf sub (bad) ljmp sub daa cltd dec xchg std adc jmp cli inc cmp and fsubrl cwtl or inc add jno jne sub pop sbb (bad) sahf icebp inc fisubl shrb negl aaa out add fildll xor iret (bad) dec sbb xor and dec out add out pop rcll cs push fwait (bad) and mov jns fistpl imul mov std enter mov sub fwait mov insb dec pop jnp add pusha cmp scas fwait sbb nop push adc add into aas inc adc mov mov add pushf negl fistl jo and xor out xlat mov scas jo into pop adc lods add cwtl cs and or jns adc imull jmp adc bound es adc mov mov pop loopne add test xor mov adc testl sbb and stos inc inc cmc cmp add push rcrl mov in pop into and pop leave mov fcomps add pusha popa cmpsb cwtl mulb and xor pop in xlat mov cld push mov add sahf push xchg sub adc jp mov pusha push push mov fwait add sti sbb or es pop pop gs push mov jl pusha inc adc lods mov and push sbb jo inc fstps movsb push push icebp rorl jle push mov and pop xor mov mov sub (bad) xor push ret dec pop jecxz rcr jo xor bound lods cmp and fiaddl jmp mov mov dec or fdivs sbb cmpsl sbb loopne mov (bad) mov test dec leave std sub add fcmovnu lods movsb mov insb jmp inc cld push call and mov outsl xor ret xor inc in movsb xchg bound mov and fstp sub push je add in pop stc dec mov pop lea repnz dec das (bad) jae les out rcl cmpsl ja or mov ljmp sbbb outsb js sti sub fneni(8087 xor mov inc cmpsl xchg sub fnsave int3 jp fs dec push push mov or daa pop inc cmpsl dec add xor and sub roll xchg cmp lods lock add xchg xor sbb add pop jnp rclb xor js and mov inc inc pop push loopne dec or adc (bad) dec inc mov mov or cmp push mov dec and add les bound inc push dec scas mov (bad) mov add repnz and lahf push cwtl push pop add ss xor shrb jle mov aaa inc cmp dec mov add push fldl and mov push cmc pop std xchg add cwtl imul xlat jge repz mov lods jo xchg pop rol out or rcl (bad) (bad) loop jg jmp (bad) in or mov sbb fdivrl in icebp mov js adc xchg add es cmpsb stos add or mov sarl xchg inc sub pop bound popf xchg pop nop add push inc mov call or and ret sub in add dec mov sub push mov dec pop pop add xchg and sarb (bad) push and pop and pop inc dec push or inc sub shlb fstpl dec pop in jns roll cmp test inc adc and jns (bad) fiadd stos mov outsb sti rcll sbb dec gs sub fs pop movsl or orl pop add les adc push inc into mov dec and subb inc cmpsb pop or xchg mov jo cmp sbb pop xor into incb aam cwtl mov mov leave fildll stos add stos or cmpsb dec mov hlt xor (bad) mov insb pop addr16 pushf xchg cmp jo in sbb push and scas pop popf mov stos lret cli dec jbe push and adc mov add out or dec pop cmp lods sarb or cltd pop push inc or xchg repz xorb jecxz das xchg fs mov outsl pop loopne sarb jno,pt add add pop iret jo push xor xchg data16 push mov sti nopl push (bad) pusha inc scas fwait sub add cs jns jnp std inc xor lea xor aam cli adc mov cmp loopne ljmp sub rcll daa jnp cmpsl icebp xchg loop adc ds pop push fsubrl adc popl xlat lods outsl sarb pop rcll xor dec test pushf mov push (bad) (bad) lret clc dec fstl inc insl or mov out inc sub mov mov int3 add mov dec jnp jecxz roll adc jmp add fbld add call bnd or pop jecxz add and hlt sub or inc inc dec (bad) jg pop xor fmuls push mov cmp xchg mov and push lods fildll mov xor and stos dec pusha sti add lahf adc rcr push pop pop cmpsl ret xchg stc add ret mov xlat sbb adc add pushf inc int xor or jecxz sahf into call fcomp mov sbbb push xchg inc mov mov xchg les js dec cmpsb pop imul or push pop mul in xchg or pop fsts jle mov and add mov out inc jge mov xorl push addl xchg sub cmp jl and int add mov call scas and push mov add ds jp xchg std adc pop std jae je dec xor adc inc lods mov push daa jne sti dec jnp add (bad) jl (bad) popa push and mov pop sarb daa stc lahf loop push push in sub jb arpl imul adc lahf gs jmp push xchg pop mov ret push aam popa pop pop push jg aad test (bad) jb lea lcall les idiv (bad) jne ja (bad) shrd daa repz add jge mov (bad) (bad) jle (bad) out jle add push pop mov push pop fistpl in xchg clc add jns mov lcall mov mov sbb add sub dec xor sub jle std ficoml das (bad) pop push mov mov pop insl add inc scas xor sahf and sub xchg das lods push jo mov les push iret xlat sub pop stos mov test mov push sbb into flds jo lret pop enter pop pushf mov iret mov stc xor adc clc sub daa adc mov pop add pushfw jne xchg insb xchg scas xchg int3 cmp dec insl lahf in sub int mov inc ds inc loopne mov xor ljmp mov std je inc jmp lds ffreep test sub dec xchg mov dec sub add mov xchg add add popf mov sbb shrl mov push (bad) mov lea and in idivl adc jge push roll inc scas in outsb inc push xchg xor sub mov add in adc pop push adc dec mov sub dec push and or fsubrs fstl mov aas sub push imul (bad) es repnz and sbb ss insl out outsl lret sub scas lret xchg fadds jmp leave adcb std jne sbb jne adc add pop dec stos stos sbb sbb or incb fnstsw and incl call cli fs stos jno out xchg fldl dec (bad) out test orb daa pusha pushf xor jns stos add test scas iret sub hlt mov dec movsl stc or rolb and neg cwtl imul outsb dec mov inc pop and fucomp push test insl nop rorb cmp outsl addr16 fmul add mov xor push fidiv xlat push xchg sbb es movb test repz and jmp bound std mov or imul xchg mov sbb das and jno mov je stos inc or pop addr16 enter jbe psubq mov cmc cltd add imul stc mov (bad) and outsl nop and ljmp add stc arpl imul cmp repnz xor mov dec xor scas popf ja addr16 cltd jle mov icebp xor repnz fucomi sbb push das jnp push push gs push mov push stos dec movsl imul pop mov xchg pop add add rclb pop es call xchg add sub je loopne addr16 push pop add ljmp not inc mov ds pop shr xor jns repz or mov repz fs mov shr xor mov fwait dec pop mov in and outsb jne sub pop test idiv mov add sbbl dec sbb jmp xchg jmp pop xchg jecxz jecxz cmp orl xchg (bad) lock lock jle sub and ret leave push pusha sti loop adc fistpll and pop fstl inc subl lcall jmp out or pop cmpsl adc or stos adc adc add dec mov lret xchg mov or (bad) mov sub sub fdivrp cld daa jmp xorb push push jnp or neg call xor ret jg jmp xchg sub stos frstpm(287 or cmp push mov addb push mov jae lods xchg enter into pop leave in ss inc push push (bad) xchg popf data16 adc ja adc int3 mov daa rorl mov in mov mulb and jns loope cmp adc or rol jmp or (bad) mov pop pop push stc out pop mov cmp add push ljmp mov jg ficomp mov aaa scas xor popf imul xchg jecxz pop mov mov add sub sub sar mov scas (bad) popa push push jbe popf add jle or insl jge nop and push push sti sbb aas add test pop or push sbb mov jl push subb not or psubusb into dec fstl push mov jnp repnz fstps push movsbl lret lods mov dec iret mov fwait es insb leave pop cmpsl push out repnz dec paddsw jnp add mov add or rcl cltd cwtl out mov sbb incl add je lds pushf xchg dec push xor cli jg gs leave add lret movsb push and xchg and rclb pop push lock daa cltd inc ret leave mov sub sbb mov or (bad) unpckhps cmpb pop push xlat push incl push mov lods cwtl sub lret add add pop in jnp add dec sbb and arpl das jns dec test xor adc arpl and inc mov mov popa xchg push adc (bad) or fwait mov xchg push test push mov cmp mov js call ret in pop dec xor sbb and ret ds mov pop (bad) loop add cmp mov xor loope push movswl call push push pop ret inc mov and ret cld add inc mov pop mov gs push jbe or fldt cli sub mov jmp lock arpl inc imul xor (bad) daa sub pop dec add lods add adc or test rcrl in gs add jnp fsub outsl nop add std mov xchg push lods icebp xchg cmp loop sub (bad) cmp cmc mov sub in sbb out pushf adc movsb push popf jnp outsl mov push adc add mov push sbb push jge fdivl mov sarb mov je add mov sbb jecxz mov nop iret je xchg sbb add jmp xchg int3 jge popa popf imul lods cmp jp pushf adc stos push sbb lock cmp sbb aad push int in (bad) adcb sbbl add jmp xor hlt inc inc jecxz add daa loop mov popa cmp loope test jecxz icebp lock sub or cmp rorl pop aad lea jmp test fsubs shrb push pushf sub xor dec inc mov bound xlat ficom or das or push add push mov adcl xor nop mov (bad) push out sbb push prefetchnta xchg jl xlat and push fsubl setle sub jge or cli jmp inc adcb sub adc ds test or das cmp pop push xor jle jno cmp add mov jb movsl push adc jg cmp jecxz inc fidivrl mov mov pop xor jo push push lahf mov or enter jo popf ljmp cmp std or jecxz jl jmp data16 xor je lds ss int cmpsl (bad) ljmp or push nop jecxz inc ljmp test xor fcomps (bad) dec mov add rclb xchg push hlt in sbbl (bad) insb jo xor stos mov (bad) sbb enter jge sub aad out adc add scas cli jecxz (bad) mov rclb ja sbb mov mov and push ljmp dec icebp mov xchg nop xchg (bad) movsb test cmp add xchg xchg pop mov cmpb mov in (bad) push mov or mov andl cmp adc jno mov movsb pop add mov dec rorl decb mov loopne aam jle mov sub xchg dec lock mov xor pop pop add mov xchg pop daa or int lods shlb add sub out and subl adc cmc xor mov outsl mov loopne and xor and mov loopne cmpsb jle stos add test xor popf popa rorb dec and jge inc mov or sti pop mov xchg cmpsb ljmp jg js sub add ret or cld xchg cwtl mov lods sub cmpb adc imul mov push int3 movlps sbb loop add mov xor (bad) dec fcoml and dec bound testl dec or xor aaa mov mov sub lods sub insb xor mov inc adcb add inc bound xchg cmp add and ljmp addl and xlat pushf jo push add mov test aas int3 add adc push push add movsb int3 movsb nop sub aas pop mov es mov and mov fs aam pop sub xchg sbb push mov icebp sbb movsb xchg sub psubw push mov or stos jl sbbl and xor cltd ret mov xchg rolb outsl cs cmpsl lock adc sbb or and lods add pushf lock cmp fs add loope int in icebp add fsubrs jecxz lods (bad) xchg sar insb in mov (bad) inc pushf in sti (bad) clc nop cld cmp clc lods cld ljmp xchg mov pop test mov add or mov and addb call cmp mov sbb rcrb xchg fmuls jb sub mov rcrb cwtl add mov test mov popl bound sbb xchg push dec test (bad) mov idivb pop mov push mov xchg mov subb lcall shlb or loope pusha lock sbb adc pop mov pop jl cltd mov out jbe add stos push enter or jmp or pop stos xor or mov js iret add lcall add mov in dec jl sub pusha inc js call cmp mov cld bound and popf mov inc in sbb faddl movsl adc in lock shlb fs mov shlb push jo out icebp or mov mov jp adc mov sub cmp or cmp int3 rcr add add mov arpl adc in stos add xchg pop adc cld push pop stc jno or stos sbb fwait pop push cld xor ja pusha mov dec add popf mov cmp fwait add jo pushf add loop or rorl pushf xchg xchg arpl test and lods inc mov push (bad) xchg sbb mov test pusha sbb xchg int3 xchg push pavgb sbb dec add sub cmp pop and xor jnp jbe aam arpl adc push sub and xchg les nop test push lods adc and sub fs mov mov dec jno or cmp add dec xchg push and mov adc dec inc scas mov xchg aaa push mov in cmp or popf mov lods fwait mov inc insl and fwait insb push mov imul in jns leave mov enter fmull adc out stos cmp les jno,pt push add insl cmpl sub mov adc xor adc jnp mov inc mov inc mov (bad) jno out jle mov (bad) rorb xor repnz push mov fprem push jne adc pop adc sbb pop ret mov nop jo pop inc mov rcrb push push ds sbb stos mov cmp or je leave dec stos nop add inc mov (bad) mov cmp push ret adc add mulb pop sub add shrb xor add popf imul xchg subb pop ret and adc cld lret dec test xor sub int js test scas sub mov mov hlt sbb xor fidivrl add gs int push inc pop push in testb rcl push xchg and sahf addl scas sub xor mov cli pop mov sub loopne mov stos inc dec push pop push mov xchg out xchg (bad) jae push and push aaa lock cmc mov mov sbb aas pop nop into and mov decl mov or movsb aas scas push or sbb test and pop pushf std mov jmp pop pop pop (bad) fidivl leave andb ja push xchg cmpsb scas (bad) cltd cltd add pop push icebp sub push dec rclb or sbb mov xchg test test cmpsl or addr16 and in hlt fs lock adc popl push mov out mov daa stos (bad) sub mov cmp shrb (bad) fmuls clc mov or push (bad) sub in test mov xor xor cltd add nop shlb sub dec sbb rorl pop and mov (bad) jo or dec test mov stos pusha and jae add sbb icebp jns test mov dec jl sarb add lods dec lods add xchg add cmp sub popa inc mov fwait cmp pop jns dec cmpsl xchg cmpl mov test xor fistpl jge mov pop mov movb cmp pop call pop cmpsl sarl or mov push pusha jl rorl mov sub or xchg pusha adc je sub cmp mov nop dec dec (bad) hlt inc les (bad) inc or inc add push mov lret clc mov sbb adcb sub adc adc (bad) mov mov ss mov dec jo jo test inc xor mov (bad) sub mov inc loop pop js sbbb sub (bad) movswl insb shlb (bad) jne cwtl adc mov mov adc inc mov test xchg adcb cwtl jo (bad) cwtl call out fadds jmp arpl add push mov xchg add cld addr16 stc sub in dec mov or jp sub addb mov xchg (bad) xor xor rcll add mov mov rcl adcb push mov (bad) in xchg xchg adc popf lcall xchg les or test push movsb clc insb mov les push lock aam add (bad) popa dec sub fimul sbb aad aam insb sub pop hlt cli int pop inc cmpsb imul shrl dec or push mov les or leave mov adc mov lahf xor (bad) sub pop out mov call nop xor xchg xor and inc outsl loope xchg push sbb adc pop push movsb mov adc cltd or xor and mov and and adcb add sub mov shrb sbbl dec pop sbb inc cmovnp mov mov sub test mov mov pop xlat or lock test shlb fsts jp mov out test add jnp or jns fwait in xor das push mov in inc bound faddl decb mov rorl add or (bad) stos dec xor pusha push push sbb xor pop mov lahf adc ret les cmpb lods and (bad) cli mov sub xor aas inc aad ljmp xchg cwtl int3 mov pushf jle int or push jno fst sbb lods sub sbb jp jnp ja dec jmp and sbb loope cmp or cmp mov inc or (bad) pusha clc jne sub (bad) js dec test (bad) andb fs mov jecxz dec or out pushf test ljmp fistpll (bad) rclb clc xchg and ljmp ljmp jo movsb add jmp push aaa push clc jl add mov out sbbb and cmp cmc cmp push mov and int3 insb inc je cmp mov into pushf jns inc jo cmp pop xchg adc adc xchg movsl jl adc test js jo dec push aaa mov pop loopne arpl mov scas adc in mov xor cmp jns push add test fcom fwait rcrb cwtl mov nop xchg dec mov cs mov add jo pushf pop adc add cmp push gs inc nop sbb or scas mov scas cmpl or rclb sbb aam pop pop add adc xchg mov add imul pop fwait sarl xchg adc pop sub adc lock fwait cmp push int3 inc insb xor jp (bad) cld in adcb lock imul js xor sarb add mov xlat push int subb mov mov stc out dec call ud1 out test mov call dec and scas xor dec mov fmul push mov add dec call mov hlt rcrb and dec add movsb outsl cmpb sub pop out jnp movsl clc cmpsl push xchg jl or data16 mov sub lods adc push xchg add inc mov mov dec lret and mov fwait sti xor push fiadd or insb or call sub inc icebp js lret push imul adc test add xchg adc adc je and pop pop add rcr in push test movsb mov cmpsl mov add xor xchg sub jl nop sub jns pop repnz push mov cmp loope cli ljmp push sub and lret movsb cld repz xchg or int3 (bad) fstpt enter pop (bad) pop push mov cwtl fisubl cmp add sbb mov unpckhps mov pusha xor jl pop adc mov test pop mov and add pop in clc xlat add es das sbb jns loop xchg or scas push dec xor (bad) mov or jg repz mov pushf out in cltd xchg add test jmp cwtl into decl lcall jmp hlt scas ja add (bad) mov mov stos mov jp out (bad) test pop add (bad) dec out aam je add cmp pop jmp mov add sub movsb addr16 add add mov or add jne lcall (bad) enter mov adc mov and adc out or jp rcrb clc add mov mov mov pusha cmp andl fildll lods and mov rclb in lods hlt adc data16 or and imul in stos push call out push add and jns mov adc orb push or sub shlb add lock rcrb fsts insb jge (bad) aaa int cs xchg add push inc mov or movsb lcall rdtsc xchg addl movsl and jle xor mov cmp mov mov rolb or cmpb push sbb sahf xlat pop add and leave jbe sub adc rclb hlt push add xor (bad) add leave jl aas jne xor sti mov xor mov test add jne imul sub mov sub bound dec push xor xor iret or sub repz push rcr enter leave lock sbb fistpl mov add arpl add data16 fimull and jne or mov sbb jecxz add jno (bad) cmc jmp adc or out lret inc outsb bound ljmp and inc jl out pop out mov aaa pop mov mov xorl or sbb sbb add ret or inc jecxz push pusha outsb lret ljmp sub pop add mov xor or mov in js cmp adc inc jmp les addb js scas push je push pminsw push add outsb mov cmc in and xchg cmpsl stc jno pusha clc addr16 xchg scas cmp nop jb jno loope repz mov jnp (bad) loop mov and (bad) out add (bad) or mulb jno aas inc mov sbb adc mov push mov scas adc hlt or andb nop sub js inc sbb pushf (bad) sbb pop cwtl popa add neg xchg push insb xchg sbb into push xchg xor sub mov mulb data16 or xor push and les lret fdivs popa test js or add stc mov inc sbb dec enter mov add add test push test mov jp mov in pop ljmp mov test shll jb adc adc mov add mov xor add adc mov pushf or lret sarl iret and je movsb add in ljmp sub mov pop fmull add imul xor cmp sbb iret es sbb xor test pop add sbb out in or cld inc nop cmp lds add inc out iret xor movsl outsl loopne inc or pop dec daa int int3 jbe dec data16 inc ljmp stc out push cmp iret add lcall push test stc fwait xchg xchg addb les pushf sub cltd mov push inc jo pop jbe out mov lock add jl lock and fldenv mov add dec mov push je jle jnp cmpsl test adc popf imul (bad) mov test and (bad) cmp dec loopne inc test cmp pop push call jae les inc incb mov adc push pop pushf sbb sub adc xor flds inc outsl sbb xor movsb rcll pushf and xor inc movsb cmp pushf dec sub es adc or push test xor rcll lods fiaddl call (bad) mov and rcrl test xor je dec xchg pop cltd or push flds xchg shrb add mov push sbb arpl mov rol or sbb bound loope sub jae mov inc adc out addr16 add dec addl pop mov (bad) sbb in sub pushf add pushf xor int3 mov movsb test shll fistpl in inc cmp sbb mov loopne pop inc add push outsb test add cli dec orb xchg insb out inc or and in pushf aad and xor pop pop sbbl or pusha enter or xchg fmull ror outsb mov mov inc enter push test scas sub mov mov pop mov add and push pop lods das dec mov mov arpl push inc add jle inc pop sti (bad) sbb adc call pop pop add jno test movsb xchg aam popl cmp and psrld jo add pop lock cmp shrb push es add (bad) (bad) mov pop dec call mov jl je in (bad) add lods mov pusha add sbb int3 or nop pushf out mov loopne fcmovbe and jne adcl pop mov sub es add add adc or cmpxchg add bound sahf or movsb les cmc mov in xor xchg aam jno cmpsb cltd test inc mov adc hlt xchg or push mov sub js jge adc mov adc mov pop faddl test test jb adc (bad) lock and rcl mov xchg inc lret or int3 cwtl sub hlt add or loope dec fidivl pop xor jno dec mov je fist adc outsb stos jmp (bad) dec sbb or cmpsb push dec add dec dec stos lcall pop (bad) les push mov mov mov mov icebp dec dec pushf inc cmp inc movsl cmpsb in dec lods xor stos lcall lea push nop cwtl add inc pushf data16 pop outsl dec insl xor dec pusha add orb push dec (bad) les movsb sub fsts add dec and dec js scas aaa test into flds pop sub lock (bad) aam inc cld and xchg je insl fisubr jae xchg or int3 inc inc jno push bound shrb mov inc dec sbb adc xor sub popa dec popa out mov adcb shll out mov pushf mov mov push icebp mov inc mov icebp jo test jno rclb add dec in mov xor and add add push add fcompl xor (bad) lcall (bad) icebp add and jmp clc das aam outsb inc data16 pop and mov push movsl and pushf and xor add sbb cmp cmp jl inc pushf call scas jl lods mov cli push dec loope ret jns push cmp xlat mov sub push xchg lods inc mov inc imul mov xor mov push or repnz shrl mov dec jo rorl cmp or mov or jl xor xor xor (bad) call lret les stos lods xor cmp dec aam and enter inc leave xor sahf and in jo pop inc jl test fmuls xor or and xor (bad) rolb sbb arpl push or into adc push mov cmp sbb popa sub cwtl pop je cwtl subb lods dec and pop cmovp cmpsl faddl enter loop adc push mov sub jno stos lods imul mov fs test jp pop push cli addb (bad) loopne sbb or rcrl jns cmpb adc or pop shll sbb mov mov lret test lock (bad) push shlb sbb push adc or ds adc ds xor in push mov xor jno pop fbld sub lods mov fisub or in test and xlat push adc fiaddl add aaa push add adcl xchg mov rclb push mov test add dec loope orl insb dec jmp and adc std jge sub or xor mov fwait xorb pop and sbb repz sub lods dec sub or adc adc inc and mov mov (bad) sbb lods inc sub call cld mov mov mov cmp cwtl push fsubrs push imulb pop xor test std or test mov aam add sub bound pop mov fstl sbb jecxz jle adc sub xlat or clc ljmp cmp js or fbld add or sbb (bad) jo sub pop pop mov jle push pusha pop sub adc dec sarl imul (bad) iret cs repnz imul cmp pop xchg sahf mov (bad) pop adc mov (bad) jge rclb imul ret and xchg lret stos mov sbb or xchg (bad) and jl cs push jecxz pop jb xor fsubl pop lods xchg sub stos xchg dec pop cmp test mov push or dec dec pushf inc clc fcmovbe push test loopne inc pop mov rolb nop mov mov mov and lret push fmull inc inc lahf cld ljmp sbb sub push dec aad mov sbb daa dec jns mov into xor sahf mov fs jge test sub mov sub outsb xor dec cltd mov jl mov popa pop shlb mov into je cltd in or xor pusha add ret mov add or pop mov cmpsb aas dec dec enter add andl stc (bad) loopne add ret inc rorl fistpll xor leave pop add fild stc sbb sti and ja push add lods mov out cmpb mov jo adc les adcl push and add cmpsl cld add jl pushl inc imul sahf add or mov in test mov (bad) add jns sub pushf adc insb aaa add xor jbe mov movsl jecxz pusha out dec sub cmp sub fldt es dec lahf sti pop jae inc adc sbb je fidiv jb lea sub adc add jge add ja cmpsb shl (bad) int fwait dec mov mov cmpsb dec sti mov mov into pop dec cmp in aam cltd add or imul dec (bad) icebp mov movsl sbb inc xor inc mov xchg aad lods gs out or fs add add push xor cmp jae inc jns cld mov sub arpl sbbb sbb sbb or addl mov jbe vsubpd pushf add xor or jae movsb dec or imul dec push aam xor mov mov push cli xchg ss xchg adc sub adc sub mov test push jno xchg inc lds fadds enter test xor sub xor mov adc xor rorl mov adc and ss in nop xor push shrl loop inc or and cld jg sbb sarb pop shl add dec cmp arpl adc or mov into inc push mov mov sbb or (bad) xor or or cmpb sbb sbb pop or mov mov test inc push sub stc (bad) pop (bad) jmp mov in mov rcrb jle jp dec xchg add mov sahf adc mov int3 mov cwtl jns pusha xor js push add inc cmp hlt pop or adc or push cwtl inc out les fcoml lea add mov cmpl sti xchg in daa or in mov xor add repz inc push and dec xor add add enter mov adc (bad) or jge imul push (bad) mov add fadd or pop or fisttp test repz add xor sub fs das sub andb movsb add mov jns popf sbb add add inc cmpsl in add stos mov add test nop jbe mov push jno cmp mov inc mov cmp nop jae xchg ss (bad) (bad) nop sub push lcall dec mov inc sub push adc xchg cmp rcrb jl pop dec xchg adc inc lods push jl inc mov leave fs dec dec add mov add dec gs pusha mov xor adc fldl dec mov (bad) out xchg mov push pop in inc call xlat rorb es punpcklbw rcrb dec orb aaa jb fsubl xchg xchg adc jl repz and insl cmp mov add enter pop pushf xlat inc xchg jl les mov add (bad) jecxz and inc sbb mov sahf pop nopl or xlat mov inc dec loopne mov lea dec rcrl mov js (bad) into xchg add pop dec je sub and popf les mov lea lahf addr16 insl std jb and mov cwtl push scas shl das cmp and cmp aad psllw adc mov mov and xor mov pushl aam mov mov pushf fnsave and and loope cld cmp dec push xor add mov imul ret push cmp pop scas xor inc inc daa fiadd add jmp out loopne add or or sbb (bad) mov pusha dec cltd sub popf nop jne xchg cmp pop mov jl ret add out es stc or adc push (bad) or pusha add xchg cmp or xchg and or and adc push test in shlb or inc movsb int3 inc dec jbe nop es outsl or fsubrs pushf insb imul mov xchg dec push bound insb pop mov lret or scas shlb sbb mov scas cmpsb mov sub sbb andl imul orb and push call push adc call inc jle or mov shrl or sub jmp dec mov loopne fsubs or in and popa mov and (bad) xor adc or inc add mov add fwait sar push bound in (bad) adc fsubl repnz out cld jle add jmp add imul lahf cltd arpl adc and loopne cmpsb popf sti mov jmp pop and mov into fadds pop jae adc pusha (bad) adc mov mov lods in cmp lods daa test cmp or daa xor test fnstsw inc addr16 out rcl mov adc or in adcb int mov sub pop inc daa xor int3 jns test mov mov sbb pop push jno in add add pop movl pop add cmpsb jge test lcall movsl arpl sub xchg fsubs pop jecxz mov mov sbb adc inc mov push push mull or lea nop je pop adcb mov adc das push mov daa cmp decl (bad) scas testb pop jmp mov push adc dec cmp sub inc or call or inc cmp imul (bad) shlb xor loopne imul (bad) xor cmp inc in incl push fwait add push mov mov movsb mov adc iret push and mov pop adc add jp sbb pusha cli sub mov mov adc stos (bad) incb jo loope imul dec mov fcompl addb dec push in fiaddl aam fcmovb adc and das mov arpl xor shrb mov sbbl and adc mov mov dec sub jp mov jmp sbb cli fs es sub cwtl jnp fs dec in push mov mov mov dec repnz (bad) in rcr xchg fisttpl fmull in jae aaa ret xor mov pop or fadds sub rorl push sub mov aad cmp fs dec adc mov push scas mov xor mov add in shll pop mov mov das loopne pop mov mov adc and jmp xor add jo icebp xor repz stc loopne movaps pop aad hlt add sbb push aaa scas jge dec adc incl sbb mov sub lods pop xchg rorb jmp divl add pop cwtl fmuls mov xorb mov pusha int iret (bad) inc mov (bad) lock add jno cs push fimull push imul and inc (bad) inc jne jmp xchg xchg and xor or mov cmp jbe add int3 fistl add push daa push ja adc xor stc insb insl shld add pusha lcall pop mov pop push sbb js or aad xlat cmpl inc in lock jnp jge pusha arpl lret (bad) loope mov add cmp rorl lret dec sub mov xor call push add jb and jo push mov pop xchg pop and xor xor xor cltd pusha add and fidivr fwait mov mov xchg jne cltd pop dec out add cs dec inc or insb sub add ret aad fldl pop bound lcall push jnp and dec movsb xor (bad) out cld aad (bad) dec mov pop add (bad) aad xor dec adc pop data16 shlb shll pop push (bad) fbld sbb inc mov fwait enter and dec and pop and jge adc les nop es (bad) pusha dec call adc (bad) xor enter cmp cmp mov jae dec mov enter in jge mov mov fistpll js mov pusha stos and push arpl cli mov push dec inc enter lea addb sahf in adc xor push and inc adc nop sahf jge mov cwtl fsub mov in pop enter int3 enter loop xor sahf mov mov or adc add adcb loopne add cld or xchg sbb dec add push in sti push jne pusha or movsb hlt add add nop es add arpl xchg and xor negl xchg pop loope outsl xchg fs push hlt nop inc and xor andl cmp pop fwait test fdivr (bad) or mov add sub dec push sub jns push call aam in adc les sbb xor push mov sbb dec sub mov dec or lcall jl cld lods mov mov (bad) jmp dec adc jge inc insb (bad) lock lret and add in mov scas in insl mov arpl js pop pop sub lahf push fsubs inc lods inc jmp push mov hlt mov jne sarl test int bound hlt adc xchg push inc nop cmp ja and cmpsb inc dec pop xor adc dec mov ljmp mov inc lds sub jge add clc and out pop pop mov adc in fidiv mov or into and aaa adc jo loopne and cmp sbb movsl mov fbstp pop jne adc sti adc movsl test push rcrl out and sub add jg mov add out pop push mov jno lcall adcb out adc in mov or xchg gs rorl jl mov insl lcall sub fisub adc push add xor mov mov sbb add xor mov mov clc inc dec jl enter inc int xor test lock and dec rorb int inc xchg (bad) push or and mov inc jae dec mov in sub add movsl and mov push scas leave sbb push je jns and inc scas stc or nop repz mov or jbe add fbld inc movsb js and pop imul outsl adc pop mov sbb loopne enter mov (bad) aaa add ret imul movntps pop data16 iret push pop mov mov imul in js and stc or xor mov sub adc fwait insb enter or jb lahf call subl test push and sbb dec ror pop dec fs cmp aam add ret in lcall test pop mov xchg test and ss add adc (bad) mov sbbl (bad) xor sti loopne sub jecxz xor into add int3 scas add lahf pop lret loope js jp fstpl pop jl test sti mov lds push sub add andb das jno test add and and inc inc movsb fiadd push inc les sub and sub ds fmuls nop xor rol inc add daa rcr push (bad) jo pop pop daa daa outsl and pushf popf add dec lret ret lcall cmp (bad) and pop cmp add dec movsb inc add movsl test sbb outsb scas sbb xor xchg idivl and sub lds jae sbb jp fisubl test mov fadd cmp es (bad) pusha cmpsl xchg push inc ds int sub (bad) cli rcll xchg mov pop enter and pop ret jmp aad enter mov lret cmp fstl hlt mov leave pop sub mov sbb (bad) mov in add sub in dec rorb insb dec sbb inc ja popf mov pop push (bad) fiadd add (bad) ds cmp inc out int3 imul sti sub (bad) in hlt add mov push call cmp pusha or std and je xchg push cmp xchg mov fmuls xor je adc pushf mov loope leave push loopne mov cmp cmp aaa cwtl hlt pop push inc xor insb subb repnz rolb jb mov inc (bad) add mov xchg loope hlt leave adc push inc and lret out enter jp sub ret push push add add mov cli or mov sbb jb (bad) mov loope sbb mov out add lods dec adc (bad) dec or in or inc mov xchg xor in add and rcll cltd pop adc lret jp lret xor test or shlb inc lret mov lock add mov jae (bad) sbb pop add dec push pushf enter popf nop sahf xchg mov sub jae add mov xchg sbb test inc fwait jae or pop mov test and cmp (bad) xchg xchg sbb mov mov cmp jge mov call subl test loop push sub or sbb out lods dec lock dec xchg pop add roll pushf mov adc cld push xor inc adc add xchg arpl in xchg aas out add add inc bnd aam mov add les ret pop imul mov iret sbb mov cmpsb inc les xchg dec into pushf or (bad) int ds add pop aas daa jb or clc hlt or add fdivs sub pop jge add sub xor add mov xor and xchg inc sbb add movsl mov mov repnz dec pop lods sti adc xchg faddl lock pusha swapgs jo or cld sbb loopne fsubs add addl fstl xchg enter xor add je push mov xor push or (bad) dec out push mov adc jno movhps pushf or mov in mov and push xor pop pop cmp mov inc test in loopne xchg pop adc xor mov add mov mulb ss push lahf les mov sub mov icebp sbb pop mov xchg sub xor fisubrl adc mov sbb or ds cmp (bad) push movsl xchg test add xchg push mov xchg scas aam push xchg jae scas push jecxz gs test aam bound add jge jmp or add shr (bad) bound in popf movsb pusha mov (bad) jp out ds push cmpsb jb xor in stc adcl add dec xchg xchg jo mov sbb sub push stc adc mov lods mov xor push test or lods mov inc mov arpl adc movsb icebp ds sub cmpb adc aaa repz imul dec pop sbb add pop aas xor (bad) fnop cmp (bad) mov inc in jo lahf sbb fistpl pop bound or repnz xchg sbb mov dec mov push fildll push mov fisub and icebp inc data16 (bad) repz lock push loop ret movsl lock push push and adc xor ljmp icebp in pop add push dec jae aaa push jno cmp cwtl mov jle sarb call mov dec rclb jne imul xor cmpsl inc or ret aaa (bad) addl pop and cmp arpl addr16 cmp inc mov mov dec push mov jl les sbb xorb int3 cmp cmp movsl addps and jle sahf mov push bound out xor mul cld xorb es cmpsl adc test adc or jnp cli sbb shl in jp push shl cmp ja pop adc inc sub sbb ss insb pusha or sbb scas imul push das dec js fs rorb lea push cmp mov icebp movsl jns movsb push cld add in and les dec pop or jb rorb adc fwait sarl popf and (bad) cli push clc int mov int3 push sti dec flds in cs cs jb dec mov jmp pop adc xlat mull sub or rorl push mov lret (bad) js cwtl aas or pop adc xor data16 pop gs pusha lock and or dec iretw nop inc out fldl sbb mov pop or push and jno cmp add mov mov mov dec adc shlb push (bad) pop add (bad) jb je fcompl aam mov imul rolb lock stc or and adc or pop mov orl ss push test je lcall inc fsub jl xor pushf repnz mov int3 das ret cwtl inc inc xor jl xorb or fcomps and add add cs xor jb add sbb stc mov sub das push add les add mov pop loop daa or sub mov sahf mov push add adc mov test ljmp in mov inc add lock sub orl push (bad) xchg push mov push nop jb ficompl inc fmuls jge xchg dec lret inc fnop inc inc test sub pusha int3 movsb clc push and cmpsl mov push jno pop icebp andl mov adc adc inc dec or nop sbb add adc push sti movsl incb aam pop and xor stos pusha push aaa fcompl cwtl and inc mov push push jae sub and ret push sub rcrb or icebp xchg mov call into cltd or push movsb pop dec xor and adc daa mov cmp or inc test fcoms mov insl jo and dec pop mov jb mov or inc push and and clc xor cli enter pop fwait push mov lods lods in and jl mov add adc mov add and cmp jne test mov sbb aad ss and ja dec pushf push inc (bad) adc cmp push cmpsl xchg movsl mov add das and pop push add xor lcall adc mov aas adcb hlt mov incb jecxz lods xlat out adc (bad) xchg or aas xchg les aas inc add pop aam js notl stc (bad) hlt cld aam cmp in test and pusha mov (bad) nop stos add cmp flds cltd lahf cmp sbb mov mov mov bound inc or xor adc inc mov stc fistpll push cmp mov sbb jl mulb je out dec xor rorb loopne xchg call out push and adc mov mov jecxz and dec pop sar aad loope cmp xchg adc or push flds add test or movl lahf inc cmp call addb inc sbb push sub test mov subb cmp (bad) inc mov or andb sbb sub sub dec pop inc lret add pop (bad) test pop xor xorb mov repz and aam imul hlt nop test mov xchg adc scas stos inc addb mov xor and pop xor imul sbb xor loop imul arpl cs stos dec pushf push jmp jns aam sub adc fisttp push add and mov inc icebp call add shrl fwait mov (bad) out call mov or dec clc add mov and popf dec movsb jmp icebp xchg inc adc dec jp dec hlt out push mov xchg repnz rolb inc imul inc daa (bad) push inc pop subb and (bad) into add or daa js and mov in hlt inc aas jne xor xchg push inc cmp in add (bad) stc lret call add jnp cmp pop lods jmp rcll test pop orb mov loopne or stos jne cld xor pop add lods mov cli decb pusha pusha test xchg or or (bad) fild iret push pop pop xorb scas js jmp xor xor push aam mov xchg add cmp (bad) rolb mov movsb lock add push movsb mov jns add push and xor int3 imul stc xchg adc int3 (bad) xor push or xor enter jg fsts sti dec inc (bad) enter dec iret inc je and les test mov mov mov outsl jne pushw test mov fsts (bad) push inc movsb pusha or lea idivb push push int fild je mov nop test mov sbb inc mov ss arpl jns dec adc or notb into imulb push cmp dec mov subl addr16 adc es loopne mov add dec clc add xor pushf jno or dec loopne roll gs stc outsb add shlb pop mov jmp xchg fdivrl pop ret pop loopne leave (bad) popf in mov xor push sub (bad) pop rcr mov outsb dec jl (bad) negl enter pop les sbb mov cmp push lret xchg pusha outsb add icebp add xor das sbb fsubrl fisub push lock (bad) jle,pn rorb add icebp sbb adc test inc push dec fnop (bad) inc in sbb adc sbb dec loope adc mov adc shrl mov jo mov adc pop mov add sarl sub adc loopne add sbbb rorl jnp into loopne hlt (bad) mov or push add mov dec or insl adc jge ds inc or inc and out dec imul pusha ret jl je dec test sbb cwtl xor push xchg adc inc movsb lea or (bad) fnop cmp and mov xchg inc js mov iret sub (bad) push cld jno clc sub data16 or clc fs xor notb mov aad pusha pop add aam shr jecxz and cmp in setno mov les inc jbe nop push fs add push mov xor nop les and outsb in das jo in dec mov (bad) clc xchg jge mov xlat dec je int3 and or pop data16 sti jno loop or je outsl cltd nop sbb mov sbb fsubl jbe hlt int ds push les add push je je or mov ficomp adc in add jge push jb xor sbb mov pusha sbb adc cmc mov pushw and addl fldl int3 fildl xor rol or test stos aaa adc sbb fmul xlat adc adc dec add aam lret push insl mov add sbb imul adc jb xchg cmp adc mov inc pop into and bound scas leave and out xchg sahf movsb or (bad) jg xor cwtl aam sbb lods adc jl and outsl rorb lods cmc cmpsb aam and les mov loop nop mov js in mov idivb jo adc les adcl je cwtl les es cld mov cmp sbb out pop rolb and daa xchg int3 (bad) int3 int push inc jbe push aam and leave pop orl push clc je std sub scas mov nop and mov stos add data16 xchg pusha sbb pop mov ret (bad) and jo xor mov enter add add add cmpl stc and add sahf fdivrs add in movsb push cltd repnz pop rorl push pop and ljmp or add cmp (bad) cltd loopne lret add fldl push repz clc cwtl movsl inc adc repz mov mov dec arpl adc cld movl repz mov push in add xor dec adc and pop in nop lods cwtl mov into test inc pushf lock xchg pushf dec popf mov popl (bad) xchg mov (bad) lds imul sti add in adc sub mov xor dec jle mov aam inc test popf test pop xor movsb sbb outsl add pop stos pop mov xchg fs sbb mov pop cmp pop mov cmp or (bad) aad leave pushf dec push addb mov and push mov aas xor push and jmp dec pushf in or lock pusha push adc or sbb mov add int (bad) mov push repz loop jle cltd cmp in pop je imul je add ret and add xchg (bad) out cli lock mov and xor mov cmp inc aam push cwtl dec xchg or fsts mov testb leave mov scas mov adc ja mov pop jo nop test push pop mov pop hlt pusha add pop dec adc fcoml pop out adc and sar icebp sbb (bad) test mov xchg or ret mov mov out sbb mov adc mov bound gs mov roll inc lahf ja js jp jmp je andl fcoml (bad) add fidiv or and push cld out mov xor or in adc jmp inc call repz lock inc jl lods in cld (bad) cmp fwait sbb mov stos data16 call adc jo add shr xchg (bad) daa loope push mov jl dec lods push sbb test push int3 dec mov pop jns pusha pop xor fmull mov aam stos mov fmul (bad) xchg fs movsb int xor add imul outsl js cmp cmpl lock xchg js pop xchg pop add dec cmp dec loopne,pt inc jp mov outsl pop mov mov mov cld push push or sbb or movsb inc cld add js inc inc test das xchg (bad) (bad) subl mov adc icebp add add and jl int3 add and mov dec push sbb jl jno pop sub pop sbb sub pop mov stos jl mov xchg push sub and js stos test pop insl sbb xor lods in sbb sub inc test sahf (bad) mov je enter pop les aam jbe fcmovnb dec push mov pop test xor dec rol dec push shlb fs pop es cmp loop ljmp ds rcrb push or jne sbb mov cmp add add xlat xchg fsubl mov jo sub inc sub adc jmp xchg lret mov ja sub imul adc or xor (bad) jo jmp cmpsb loope movsb mov repz and fsubrl int mov add cmp xchg adc adc (bad) dec repnz sbb sbb cld (bad) add xchg out jl out mov and cli or and jbe in inc in scas xlat sub add dec add xor test mov inc ss sahf addr16 nop mov mov mov pop adc jnp mov sbb les dec je loopne lds and (bad) outsb movsb loopne cwtl add xorb mov mov and les hlt enter scas sarl fs lds in jno add addr16 enter out jns js pop push push add fnop mov inc cli call jbe sub inc je mov inc mov loope fidivrl int3 jae rol add pop cmc adc fildl (bad) lds and push inc loopne or add out fdivrl pop sub repnz mov mov mov add fldenv and and jl std sbb test test es les out adc pop jp das je orb int pusha dec int sbb push mov add (bad) loopne outsb xor idiv jns sarl (bad) hlt imul gs inc mov jmp insb (bad) enter mov and inc and mov adc and lods sbb lahf sar stos ja cmc sbb sub mov jnp cwtl pop je pop mov out lret les enter mov pop nop pusha les and js xchg test push mov mov mov sub xchg mov push outsl or push les mov ret mov stos pop cld pop repnz pop push testl push xor addr16 es cwtd inc xchg stos or jecxz or fdivrl cmp adcl dec test aas mov int3 jno xchg sub or mov test xor push adc arpl and out sbb jno and pop adc popa icebp lock movsb xchg mov dec loope sub or fist inc inc cmp and mov pop mov dec or cwtl cmp mov loopne adc (bad) mov addr16 dec out mov daa test dec out mov mov pop jae or fmuls int3 mov mov sbb in out je jg outsb mov and stos cmpb sbb pop roll dec lds xlat mov xor push xor cmp add stos clc mov mov inc cld shrl test jg pop test fs add mov sub sbbl xchg mov sarb mov into cld jbe add test or inc pop fisttpl imul push cmp subb inc jle and loope daa sbb ljmp leave push add cwtl loope xchg cmpb loopne pop push jno adc inc cwtl add pop dec loop push clc test add mov xchg or pusha cmp std xor scas (bad) aam and and movsl int3 scas sahf xor test imul icebp popf jno and ret inc loope data16 or mov jle push adc push ljmp push pop mov dec clc dec js jnp cmp lock sti movsl dec (bad) icebp mov add fldl inc cwtl mov and or cltd inc aad in ret inc dec or add pushf mov add call add loopne jae sbb movsb or es popf adc jp mov pop shlb jmp cld hlt add enter or ret mov mov push xchg rclb mov (bad) or mov inc inc loope dec push repnz add andb jecxz daa adc pop and sbb stos pop dec add fstl int3 addb add sti lahf pop xchg scas loope inc or mov add cmpsl pushf ret mov sbb popa adc xchg xchg cld and inc cmp (bad) xchg xor clc addr16 mov pop mov dec inc jo mov add mov icebp mov cmp xchg scas les jmp fisttp les daa repnz ror fldl2t jp popf xchg sbb call mov js adc jne bound sbb pop adc and icebp test jb mov dec mov in adc or fcompl mov push dec fcomps fwait insb ret sbb test ljmp fwait xor (bad) fcmovbe or ljmp es lret pop xorl adc (bad) repz mov jmp pop mov add sbb out jl lock mov (bad) adc mov imul mov sbb mov dec pop hlt test push cwtl lock shrl jmp leave cmp pop lcall adc scas test rorb sub out aam push dec call out adc pop and xchg pop adc inc mov adc add daa outsb in sti dec push pop mov hlt and stos jmp lock push mov and mov add dec (bad) push mov hlt lock jbe sbb push jo into jo sbb fadds mov or test adc sub icebp adc sub mov add test or movsb or push ds pop pushf push pop repz pop cmp (bad) in das xor packuswb loopne mov bound xchg lret fsub lcall dec inc pushf (bad) das add jno jle push ret dec mov mov clc in mov clc inc nop and loopne movsl jle (bad) repz pop pusha xchg inc xorb add pop and jg dec adc and jne mov and repnz xor ret mov add sub or stos inc in adc mov mov add xchg and pop gs or adc dec sbb cmp jns mov xchg jns mov and mov sarl and xor pop jns xchg xchg or push js dec cmp cwtl ror ljmp sub xor repz cwtl fdivs les orl js lock mov adc aam dec mov add sub mov test outsl xchg adc sub dec sbb popa inc jo xor lcall and dec outsb out mov add js cmp flds push pop sarl cmp sbb out jno mov movsb sahf push ljmp fstps xor push div nop in jbe sub push mov cmpsb shlb jno cmp stos jge adc lret push fwait sbbb popf sahf cld sub dec pop mov cmp les or sub mov mov pusha push or add mov not jbe fcompl enter lahf les jmp or mov push cltd and jae or in inc pusha test xchg fildll insl or ret jno enter add incb imul add lock cltd jp dec in jno push push rcl and add je out jmp in mov je or cmpsl ljmp cld lds push lcall aam loopne sahf lock mov xor addb jmp outsb inc cwtl mov add jge stos insb test outsb inc jecxz or mov pop and cltd gs call hlt mov xchg sbb movsb pop fisub push sbb xor loop pop pop (bad) jno jg int3 and mov xor ret push pop inc jno icebp cmp js stc jl xchg js inc dec (bad) pop popa js mov nop movsl pop cmp scas xchg int3 add mov gs xor popl dec out xchg mov fs mov lds js scas add inc lea popl dec sbb inc or lock test mov dec lods and mov or mov fildl hlt icebp mov pop mulb loope adcb stos adc imul adc push or sbb add or add enter sbb sbb pop add and icebp in jns daa iret cmp clc dec mov sbb dec and lock mov xor stos jo pop roll pushf and je mov (bad) in jb adc mov add sbb push cmp or mov cmp sbb sub imul or rcrb hlt adc outsl adc scas inc enter in scas pushf in pushf add jl icebp fadds mov pop mov xor push pusha and popf mov and (bad) mov fidivr into jno jge push (bad) and test rorb mov pop pop test stc sbb scas jmp cmp add adc push xchg xchg imul adc pop jno inc test jb data16 xor cmp test jne js mov jno jmp test (bad) rep xchg xchg mov (bad) push pushf test stos enter add xor dec add sub lahf cmc inc loopne jno mov xor or clc mov mov repz orb pop adc or dec test jnp pushf dec out out rcr jl pop jae sub mov adc imul ds mov scas mov push call outsl cmpsb pop js (bad) repz arpl xchg dec push loope ror icebp and xor jno cmp mov data16 aad adc xchg inc jbe repz add cmp fstps pop leave je test outsl jne mov data16 sahf popa imul add movsl orb inc inc sub or mov les push inc mov aaa or dec ljmp mov adc out dec insb cmpl sub movsb ret mov jns test subb pushf dec inc les mov pusha enter lret push in jns push or insl mov xor adc cmp daa jl inc dec or jmp cmp lret pop cmp les add cwtl inc add pop pushf or imul pop es add mov adc (bad) jmp xor ljmp aam dec call rcr add cmpsb xchg or and jl jns mov pushf lds aad sbb flds add loopne test adc lock pushf push (bad) or inc mov das mov cs je mov xor sbb dec in cmp inc mov and les mov pop mov repz and push outsl cmpsb (bad) in mov fcompl fiaddl out (bad) das js add movsl sbb push in pushf and xchg imul es jne or inc and dec pop test loop les push dec aad rcr inc (bad) (bad) je mov loope mov push cs stos push orl sbb add cs push dec dec aam xor mov add movsb sbb xchg jmp xor and push flds jo pusha sub sbbb inc pop add (bad) in mov loope lock out adc cmp xchg xchg inc pushf and xchg (bad) or clc sub lret dec xor pop mov sub dec push sbb pop adc mov into xchg (bad) movsl xchg js add push or mov add cmp aaa fs dec into clc pop cs mov add nop ret int inc or lods popa push xchg movsl jo test icebp lock mov int3 popa je and bound cmp cmpl jge dec iret mov test jbe add and sbb push sahf cs xchg nop adc add cmpsl mov add and fsubrs ss clc push mov or cmp (bad) pcmpeqd and test or mov roll loopne fs hlt add mov mov add lahf mov mov adc test test pusha cmpsl lcall pop mov cmp mov aad xchg push and or dec rcrb into add stos or mov add je xor dec and fcompl ret add mov cmpsb add in (bad) aam xchg lds imul sbb pop les lock dec dec enter fsubrl pop movsl adc mov dec and frstor mov mulb movsb fmull movsb mov mov adc and imul loope xchg cmp test add or add mov incb or pusha test add aam push or es sbb mov pop xchg mov push lea adc jo lret (bad) pusha pop inc fiaddl xor popa mov mov out into (bad) mov or sahf and sbb cmp lahf in add lret rol ljmp movsl xchg pop or int dec daa and insb xchg and adc xchg out jo leave adc in andb cltd stc and add mov or add (bad) icebp (bad) add mov mov test and jns add ss test dec jl xor dec orps ja inc stos add fsubl mov adc add or dec pushf add int mov and mov js sub int3 xchg je ja mov cwtl add xchg dec cmp add cmpb lea lds dec mov xor add adc sub nop add mov rcr (bad) mov rcr and pop lahf push pusha mov add into cmp mov xorl les push jae orl push mov mov or add test sbb icebp xchg ficoml cmp xchg or add (bad) (bad) (bad) jecxz test push inc enter pushf cmpsb mov sbb or test mov mov into cmp mov pusha sbb lea outsb addps lret es mov push inc mov jbe push lahf add dec mov mov jne fdivrs sbb or and sbb xchg clc add (bad) mov jb repz xor rorl lock mov mov xchg adc inc xor lea adc gs and xchg or (bad) adc add movsb test test hlt popa push cwtl out dec jge adc adc xchg inc cmp insb mov imulb jo sahf and int cmp int3 xor mov pusha and int xchg lock xchg aam add jo adc cwtl sbb ss pushf mov push popf xlat fmull and shlb mov sbb add dec dec and dec sarl push shrb inc rol cmp sub mov or call inc xor sub ret push mov aad mov lcall mov aam (bad) lock cmpsb cli xchg aam loopne ja (bad) jno push clc dec outsl sub shrb sbb jbe sbb sub movsb xchg iret lret ret or mov add push mov mov aam sub mov sbb es aam lret add nop ror addr16 (bad) into add lea inc xchg shlb cmp dec or add jecxz in sub add fs add outsl mov inc rcll aam daa push int add and loop popa pusha lods stc and mov adc ret scas std mov clc repnz sub nop in push ffree add fcoms xlat fist repnz rol xchg and add add (bad) nop nop (bad) outsl xchg int3 or dec sub loopne mov scas and int3 add stos sbb mov adc loope shrb xchg pusha enter pop add ss call mov inc (bad) and test rorb push inc cmpb push or jp call mov ret jae jo xlat dec add add jg movsl mov xor je inc and xchg xchg push cmpsb nop mov fmul push enter popf pushf mov pop (bad) in repz lock rcll push imul and inc scas push sbb cli xchg mov sbb mov dec out or inc lock dec call movsb mov int (bad) and jge (bad) lock mov jno cmpsl sub (bad) (bad) std cmp add add cmpsb or ret cmp add les jmp dec invd aaa cmp (bad) test pop cwtl int3 cmp jno add lea mov shlb push clc (bad) adc cmpsb lcall inc sub rorb subb xchg test ja int pop sbb mov or and test repnz jge ret or lds cmp loop les xchg lret stos (bad) sbb jno and jnp push jo sbb jb cwtl mov or push lds pusha jmp nop cmp mov pop lcall mov and pop jae shr jno dec aam outsb add sahf dec xor pop cmc add pop lock mull out paddusw jne movsl out mov fisttp shrb fistpl gs xchg mov sbb add fild mov or sbb adc push hlt add adc ffreep fsts sarl call cmc sub fisttpll stc mov mov sbb sbb out mov adc adc testb js or add into xlat fidivl mov sbb cmp jl or add (bad) push in outsb rolb repz or xchg idiv addb add cmpsb and test pop add xchg cmp pop xchg mov xchg fstpl mov xchg sbb pop aas sub popf pop xor movb jl clc sub or adc adc dec xchg mov and xor xrelease dec pop call nop lds sbb pop repz cld js pusha xchg xorb jmp xor jae sbb aas pop and mov push popf aad outsb loope in push addl int insl cmpsl cld js push sub add insl ja dec test or xchg hlt stc jo inc loope (bad) mov sub test dec daa lock jl push pop les mov int3 gs jno sbbb fincstp xchg add sub sub mov jb or stos xor xchg xor jno fstl add push jg shrl or mov mov mov and sti or pop out stc pop cmp push add fstl inc mov into pop cmp nop test jg pop mov loopne sbb call jmp lret add jp lahf pop sarl mov push nop orb aas out sub comiss ds mov mov sahf push ret ja and push ficompl xor leave pop push lea mov inc and out pop addr16 fist in and test push xchg push jmp and outsl sbb pop xchg push mov (bad) and push or push lea es sub call mov (bad) xor sub jl jbe xchg inc cwtl push jno mov daa mov icebp adc push orl pop aaa cmc inc mov inc outsl jo loopne dec div (bad) je pushf mov xchg and iret or mull xlat icebp sub add mov xor clc mov add or shrb test imul cmp aas cwtl xor ret mov jle mov xor mov imull adc div mov sub in add cmpsl push shr imul dec stc xchg popa andl adcl movsl inc pushf sub fwait lods xchg loopne bound dec test jo and mov roll mov in inc mov paddsb sbb push fldl jb cmc and pop xchg pop push jno add adc sbb and push push cmp adc add add mov je dec aad add mov add jno arpl mov pop lock and adc ss push and sbb push and movsb jo ret lret mov push xor dec cmp lods pusha push lods lret lods pusha jns popa jo fnstcw sti insb insb sub clc sbb dec int3 inc fdivrl jmp in icebp add dec xchg sbb sbb mov or leave mov pop push cltd add cmpsb cmc mov or xchg mov cmpsl repnz mov jmp push jno lock jnp add sahf push call lods (bad) rolb inc xchg add sub and test inc hlt and sarl xor dec imul sbb insl push adc adc test arpl add or cmp in jle adc xchg stc out push arpl pushf mov (bad) add and jg dec dec pushf clc add imul and pusha dec lcall aad test mov or mov cld inc pusha and mov add ret js or cmpb add mov inc mov or aaa dec adc mov je sbb lret push lcall lea cld fnstenv mov mov sbb mov xchg push sub lods jecxz or sbb jge repz pop xchg mov or mov leave loopne mov sbb andb or movsb stos mov mov xor pop add pusha sbb loop xor clc adc jno aam add (bad) adc orb add add pop fdivrs fldt fs pop (bad) lret orl arpl xor adc cwtl loopne add mulb mov inc cmpsb add or in add xchg sbb out insb sub xor sahf inc push rolb cmp adc rorl rcrb enter push hlt push int3 shr bswap add rorl out add dec mov int3 and imul js pop sahf jmp in lds lahf (bad) jbe ja add xchg push sub add pop cwtl jb out sbb enter imul in das and iret xor in jp addb test ret aam mov daa add out fwait add pop add stos jbe sub lods add inc sub (bad) cmp cmp sbb dec shll sub hlt (bad) test dec sbb add sub jo aas sahf fcoms xlat (bad) shrl aam scas aaa adc mov int3 ficompl sbb es mov enter add popf stc adc jg sbb loopne jmp jae addl pop outsl hlt fbld cmc mov std pop mov inc int3 and vmread push add or into je mov in rol int sub cmc (bad) (bad) cmp push xchg inc sbb add fimull inc xor jg jl add xor and pop (bad) jge ret push or out jmp and lods popf dec xchg xor xchg fldl sbb and fwait pop add loopne mov or add adc aaa add enter push cwtl push dec sbb mov pop movsb int3 jmp les pop rolb ja sti mov add fsts and inc lds jnp cwtl push outsl pop sbb test push sbb jnp adc nop inc and jg adc mov les dec xchg sub xor nop js (bad) aas andl push inc lods ror push fnstsw aaa sub inc (bad) mov sti in in jle out (bad) pop mov cmp sbb sahf inc mov and inc fisub mov pusha dec xor pop xchg add cmpb pop fisttpl push repz add push xor ret fs or nop mov push push cmp xchg cmpsb sbb ror dec push xlat fist shlb jno xor mov lret sub xor push mov js jp je jg inc nop adc addb fnstsw cwtl xor and mov in arpl addb xor push ljmp xorl aam (bad) push xchg add (bad) loop out mov ja jnp rorl dec and (bad) fcoms adc cmp and fcmovnb mov and push push sub inc add mov aad cli lds push popa pusha das jne ret add cmp pop fsts movsb rorl dec push frstor movsb sub popf dec popa dec (bad) repnz add push stos sbb imul add mov push aam xchg mov add mov mov sbb dec push xchg xchg add or mov clc xchg inc inc and mov pop cld andb mov jp lds sub jnp add lret xor sub push add add add mov mov (bad) ds and test lea fiadd adc aas inc sbb xor adc push mov icebp pop subb test decl pusha bound push pop in xor sbb adc inc movsb rol cmp sbb imul xchg xor lcall mov sbb cmovns (bad) aas push push push ret out lods sbb add inc in pop or movsl notb cmp mov les imul (bad) sbb lahf push push iret jo (bad) icebp xchg inc mov sub pop ss add movsb and cmp sbb or dec roll cmpb mov sbb xlat pop sub (bad) xor shrl mov xchg popa xor mov xchg ret mov mov movsl rorb sub clc call cld and add (bad) in pop push test inc popf push push mov mov push cli sbb sub and test mov icebp mov mov sbbb mov addr16 sub int jo sahf adcb stos fistpll movsb push adc test icebp xchg movsl enter popf adc and sbb cmp mov (bad) adc incl sub jno pop push sbb fisubr ja pop adc mov and sub sbb mov rcrl aaa dec mov push into push sbb out pop flds fst cmpb add test lods sbb add mov cmpsb xor xchg leave cmp adc clc loopne jg and xchg aad cmp pop lods movsl test repnz dec andl mov movsb or dec dec nop mov test nop cmp test repnz enter push and mov xor in adcb leave outsl and movsb js push jg es adc sbb push adc jo test mov sbb adc xchg adc jp mov mov lock or in add orl push ds or sbbl dec sbb xor insl (bad) nop repnz mov dec inc sbb fild stc dec repz xchg add inc or nop sbb add mov aam pop lds sub add stc add pop int3 dec dec inc xchg pusha sub sub cmp les cmp push sub xor fild cmp sbb test mov dec mov sub out sbb je sbb dec mov add int3 inc imul xor popa inc stc ss test out aaa lds add sub call bound ficoml add pop rolb mov (bad) mov cwtl push inc jo dec mov inc jl cli in imul push mov push jbe das mov or lds push dec mov lock mov fdivl inc rcll jo repnz andb in cmpsb sbb jne mov xchg and psubsb int3 adc cmp add lock fimull clc push fstps push inc sub mov (bad) in div dec int3 cmp cwtl sti push in pop out in fs pop mov sahf xor inc fnsave mov sub call mov mov mov add gs add int3 sub sbb das mov out add pop adcb xor cmp (bad) mov das push nop push daa in dec dec sub cmp call popa enter jne xlat lds sti or jg mov cwtl addr16 adc xor pushf call nop pusha inc inc jo pushf dec cmp mov data16 mov or mov push iret or js and lret sub push nop or xchg sbbb pop xchg divl add lret and mov adc jae adc sub adc lods fcomps adc fs and jge or repnz mov cmp test sti fimull movl (bad) add lods jl mov rolb xorb pusha subb int pop sahf dec sbb adc push insl lock or add dec jne add push pop (bad) enter push (bad) or jecxz cmp in ss cmp inc lret aam cmp sbb dec cmpsb (bad) lret and or cmp pusha in cli and notb or hlt mov inc jbe rcl cli push add gs mov xchg jge pushf nop and pusha jmp loop int3 sbb test in (bad) push xchg push inc int test sub push mov mov add bound jle jb inc nop sub jne fsubrl test mov and mov test adc lods outsl lcall nop ds mov pop mov cmp mov add ret test ss mov vmwrite bound test inc push pop and (bad) mov inc dec push or imul pop es cmpsl testl dec hlt rclb and cmp paddusw nop sbb push pop dec cmp jmp jns and xor mov adc hlt mov movb lret mov sub ljmp and mov fwait sahf sub jmp addr16 mov cwtl and inc mov mov add (bad) in cwtl pusha mov icebp pop fsubrs dec sbb pop ljmp mov lods inc dec popf rcll in mov and int3 sbb or mov enter dec out aaa js add (bad) aam ror fidivl aad push or mov and popa cmp repnz jo mov jmp mov je test push cs into call inc dec add or jp sbb sbb xchg cmp testl inc inc mov push add sahf xchg jl inc fs dec sbb and pop aam rclb leave add out aam imul add lea jge mov call dec adc movsb icebp aad shl adc dec mov dec jmp dec nop gs cmp pop clc insb and out sub xchg xchg xchg (bad) or xchg xchg xchg jo mov sub gs inc adc pusha shrb adc adc or add push mov fcoms sub dec push and and xchg test daa and pop mov ror sub xlat fs in sub mov lods aad jns mov into sbb sbb mov fs adc sti call sub pusha sub inc push and in or roll dec xchg js arpl dec rorl or aad stos in dec mov insl mov mull mov xchg cmp inc (bad) leave sub inc fsubs adc aad fcoml mov add sub and insb or push into je push test aad into fldz and pop dec lods insl sub (bad) je call cmp imul shlb outsb in adc mov arpl out clc aas hlt lds mov adcl inc mov push pop (bad) dec mov cmp dec jl dec inc test sub or rep mov xlat ds and ds dec call test call (bad) mov mov inc lret push inc inc sbb aad popa test add jns dec or or int pop dec test and test jb test jmp and ljmp dec ds and pop dec fsubrl out xor enter test fs cltd push sub out mov (bad) out add in repnz xor rcr sub (bad) adc pop sub out mov pushf or add lock or dec add test mov and jge iret mov mov dec es (bad) jo push pop orl ss cmp aam mov add ret sub add inc mov in or pop sub lret jmp addb imull cmp push push inc cwtl xor cwtl jb movsb js jo out rorl fadds fimul int push xor adc dec and pop punpckhwd mov dec fs push sub mov push in inc push cwtl sub out add mov push pusha inc mov mov adc or outsb cwtl inc jmp incb adc mov push xor aad cmp sti loope add popa in das add sbb adc mov inc mov mov fdivr sahf add sbb stos add mov ss scas add jle add jl fwait lock push add pop das scas push xchg jmp ffree dec xorb and mov das push jg add ljmp ds pop add sub adc inc sub xchg add arpl adc js (bad) aaa xchg and test xor rolb xchg imul pop cli mov fs jmp adc sbb push enter and lret dec loopne jns add fidivrl xchg jle lds sbb cmp arpl jnp insl pusha cli sbb test cltd cmp add and test lret push jbe je (bad) call fstpt loopne sbb add mov lret mov mov cmp push or dec inc lcall imul mov or xor xor jmp cli lock inc js adc in jo js jge dec roll jl pop jno sub add jne pop fwait (bad) shll adc xor imul sahf inc mov dec in lret fcompl push in inc insl je aad xor add (bad) out add aas jno,pt or or stc inc addb add jmp int sahf call sti icebp mov or insl ret jmp arpl rcrb mov out out (bad) pop inc aad pop cs mov xchg dec or pop adc and mov inc lret sub cli scas adc mov add rol hlt out mov fwait cmp inc adc inc out cli out cltd enter xchg addl xor lods and roll dec mov dec jnp pusha mov aad pop xor pop lahf fnstsw pop xchg addr16 adc mov pushf aaa mov fistpl in adc xor lock xorl int cmpsl hlt inc in xor int adc clc xorb popf inc (bad) push adc xor (bad) push inc test jo jnp movsb and pop push inc daa sbb mov add mov inc movsb aam and or bound arpl pop stc cmp or xchg jge inc cmpsl mov mov sti xorb psubsb and js add jp test or enter lds dec jnp in adc sbb movd push adc nop aam push nop insb cmovp insb aad loopne leave faddl fcoml or jo pusha jecxz pop and je push xchg repz icebp adc and leave pusha xchg out mov cmp jecxz fcompl test int sbb clc mov aam add adc jmp pop inc into cmpsb inc mov arpl imul leave movsb in sahf mov insl sbb popf inc iret mov movsb push loopne fdivr bound daa mov jbe mov bound mov lods adc xchg xchg test push or call in add in dec mov jns sub das jmp add js aam stos push pop and xchg mov xorl in add sbb arpl mov and inc mov and daa push mov sahf push jo arpl jns or push mov push repz mov cld cld jg cmp shll cwtl stc jmp dec clc invd xlat and mov xchg mov cmpsb adc movb packsswb nop pop xor cld dec insb jo arpl push stc add sar iret cmpsb insl add pop push mov leave mov add out popa out push xchg rep or dec in loopne shl loope xchg out fs add mov popa lods or adc add ret decb sbb mov lahf push adc xchg movsb sub ja sub inc mov and test lcall and add icebp pop insl clc paddusb clc (bad) test mov sub rolb int fimull rcrl jecxz pop add mov pop (bad) push or jp add mov add loopne jns xchg lods adc lea movsb mov and push in sbb xchg fincstp adc xor nop addb and and inc sub bound ret adc lock movsb add jl xor and add mov xor lcall in add mov pop push inc rcrb in xchg sub xchg mov jge mov add jle aam add pop ret or lds mov repz add rcl outsl inc test or leave daa inc mov int3 sub nop loopne xor add jo aas xchg pusha aas fistpll inc jne add nop mov in outsb xchg jno fdivr pusha dec sbb or ljmp ret or push jb or sub faddp out push push pop mov bts or imul cmpb rcrb das lahf add aas push outsb mov jno add test mov fistl cmp add int3 mov out test push imul in inc inc cmc pop xchg scas add out pop insb sub adc pop inc or mov jo xor or mov mov mov cmp sub ret sub je bswap lret scas sub js sbb enter cmp jl xor movsb pop je cmp push sub fadd and std add jo arpl sub adc js das and int3 xchg (bad) shrb or mov std sub inc add mov sahf sub andl cltd dec out inc call leave sub add lds push add shufps imulb imul andl jp mov rolb cmp rclb add sahf jns pop lea and les outsb inc subl cmpsl es lock fsubl test aad sub lock rcrl sbb or fdivl aaa lret sub lods lods loope addb inc push adc xchg mov dec out mov or xor lods pop inc insl or js jno dec (bad) hlt xor pop ds ret bound or push arpl mov and jo sbb hlt cmp sub dec sbb xor dec les popa cld jno xor and add sub les sub ljmp fildl nop add inc (bad) xor arpl dec aam add push loopne mov ds popf test xchg fisttpll les xor add cmp ljmp mov sbb (bad) adc adc call pop and or mov sti in xor add xchg mov jl pop insb jbe in incb mov add xlat ja lock lds rorl or in cmp cli dec das jne mov outsl add (bad) push shll pop stc add xor nop sahf xor mov lar add roll ret adc sbb dec adc sub inc and add and decl add adc pop xchg ds inc xor add aas aad lods cwtl sahf or bound repnz sub mov int mov pop insl mov mov mov add push mov jge dec iret andb push sbb leave xchg fs adc inc mov push push xor test inc mov lock push mov aas xor push mov rorb push push add adc xchg pop cli loope xor repnz inc sub mov pushf out adc in push mov cmc les jmp iret mov and mov daa sub jmp lods add les cmpl xchg jmp mov cwtl stos flds loope push cmp dec insb dec mov push pop ficoml in add imul movsb add and and or adc outsb mov mov shll cmp sub faddl sub adcb fldl or repnz mov xor addr16 ja iret out (bad) or frstor hlt enter stos inc jl mov std pusha push xor std adc ffree pop jge das mov call xor ret or inc hlt pusha cmp cmpsl stos data16 ja stos movsl dec or mov fstpl mov dec scas and add insb mov mov clc mov xchg push cmp das sbb xchg (bad) movsl push dec lahf (bad) and cmp mov cwtl mov and sbb add movsb pop sbb (bad) shlb lock pusha mov cltd push es mov and adc mov repz (bad) pop inc mov cmp mov sub sbb jmp jle add jl cli cmc sbb sub jmp getsec test push hlt or fmull fimul pushw pop roll and insb inc mov lret into outsl mov mov dec sbb rol add divl jmp sbb bnd lcall test dec sbb jl sbb popa sbb imul push adc sbb das xor mov jo das test dec mov das ret mov mov push sub sub leave lds xchg jne insl fisubrl or xor xor ficomp xchg inc push cmpsb inc push das cwtl inc add mov aam sbb inc cld and popa sub testl jo push js pop xchg cli fidiv adc and lcall xchg cwtl ret mov negl mulb mov loop scas test inc inc push jge pushf xor lods sub push xor adc daa mov stc push cmp xchg in orb and faddl cwtl (bad) mov or mov mov outsb add and or shlb clc pushf pop iret ror scas nop or adc fwait sbb fldt in das xor push push mov shll call inc jg sub and push (bad) sub add xchg nop fs shll mov mov mov sub sbb fwait sub sbb sbb ljmp xor or mov cmp insb xchg scas int3 pusha es or mov push pop call outsb lret std loop xchg fild push sub jp in fs cwtl push add ds mov out add cmpsb push inc mov int3 push les xor or xlat inc mov add fcmovnu xor clc clc addl out fsts mov add (bad) mov addl test into aad sub mov push mov or xchg adc adc lods je adc sbb sub stc adc adc mov pusha pop sbb adc adc sahf ret pusha pop sub mov xchg xor push sahf jl outsl cmc xor pushf outsl xchg xor movsb ss dec pusha sbb push cmp add pop mov mov cmp imul xlat paddw mov pushf mov push jl xchg mov pop les sbb pop scas faddl mov jl push pusha mov fsubs loope mov xchg add pop enter add test xchg popa fsubs add xor std sahf cmp add and push pop into add mov out pusha xchg popa sahf aas popa hlt sub mov add icebp or jb inc inc jp setb jnp adc ud2 out icebp sti sbb add sub enter (bad) push pop fildl push mov pop sarl pop or mov or fdivrl sbb cld push addr16 inc mov inc dec loop pop and shrl fsts push fstpt xchg out adc jp mov dec xchg test cld mov dec insl repz mov add inc fldenv stos dec sbb and xor dec and push aaa adc sbbb push cmc loopne inc lods lock mov inc xor pushf push stc xchg imul outsb arpl mov rcll dec repnz and insb lock int3 adc adc sbb and and adc xor jns cmpsb xor adc adc mov dec fs pop push das stc or sbb out lods clc inc jle push adc pusha dec sub push jb (bad) jo lea push ret cli out mov insb jmp cld push mov or pop jns xor cmp popf imul sub add inc lock adc and add movsb sbb pop xchg ja pop fildll add pushf (bad) repz das ret add clc mov test fidivrl xor push in mov repnz fisub dec jno inc nop in out add in lahf adcl fwait nop add sbb (bad) mov jge add inc push arpl mov pop sbb or add fstpl inc push inc cmpsl jmp and fnstcw push mov aaa scas aam mov js pop adc xchg stos in sarl mov or add sub push leave mov pop movsb xchg or dec fmull pushf adcl inc aaa sub mov mov xor or roll pop mov push out xchg push loopne jmp movsb cltd pop ret or push adc cwtl sbb jl stos pop add add lock mov adc addr16 mov sub adc adc and xor push cmp fisttp mov test imull jg dec xchg fldenv (bad) aam push xchg inc pop hlt dec mov subl mov inc xchg jne call loop daa into ds xor mov or jl inc scas sub mov mov fdivrp sti xchg pop mov cmp mov std (bad) das daa sbb outsl imul mov mov sub js adc jl mov jge pushf sub and add scas repz outsl or pop mov add test add pop mov add imul cmpsl inc test add add (bad) push adc je mov dec add mov and dec dec add cld xor inc sbb scas push adcb data16 mov (bad) add imul fsubs lods mov cmp je cmp fwait aad xchg lret jo sub loopne pusha push leave adc data16 dec test inc fidiv jnp ffree sbb mov mov and pusha dec add lods fistl pop lock js,pt push or icebp xchg inc cmp add mov mov mov xchg movsl pop jmp lahf mov aas pop scas add mov call out add ret jb inc cmpsl and and xor cld imul cmpsb pop rorl add jo addl push inc fldlg2 pop add into jo loope call in add xor pop cmp inc or inc jecxz je sub jle or outsl or adc dec rorb sbb add (bad) jbe incb das lea dec mov insb test add lea shrl insl pusha test aad popf fmuls jo stc nop fildl inc xor fldenv enter fcom pop test jge or arpl fdivs imul cmp jo rclb sbb mov xor add pop jns or pop adcb jne movzwl mov inc sarl mov adc jo bnd cmp call inc loope repnz daa fdivrs loopne shlb cmc and nop cwtl negb jmp lock cltd cmp cmpb sub sahf aam rolb aas addl mov or pusha cld adc mov push jne lods xlat cmpsl rclb (bad) hlt mov push mov hlt mov sub cmp nop xor pushf loop adc repz dec cwtl add jle sbb es loope jecxz add jl sahf mov (bad) xor popf push test faddl call (bad) pusha inc ret loopne push xor sbb movb mov push sbb sub jo testb sar sahf in inc int test sub pop mov hlt mov clc arpl xchg mov jae sub daa orb out mov les sbb dec adc mov add or cmp dec adc leave add fs xchg sbb sbb cmp mov and aam mov cmp xchg and add mov mov and (bad) stc mov xchg inc mov aam jns adc stos dec data16 or call jae sub cmpsl mov dec adc jne or pop adc add and out scas xchg inc sub rcl and mov xor (bad) out rcrl movsb int3 add bound push fcoms xadd out xor jmp divl push movsb test xor in rcl xor and pop or loop xchg aam rclb cmp ljmp mov mov in nop adc enter out lcall xor cmp inc out aam push popf in and adc and sub push xchg enter rolb jmp sbb fsubrl add cs jb call pop cli aaa and arpl loopne addb push jnp lds push dec sbb jbe or xchg xchg lods jl dec jnp dec sbb stc in add mov insb inc dec inc scas (bad) repnz fs dec rclb cmp sbb stos rcrl push xchg out nop inc mov sbb mov push movsb ds xchg cwtl dec cmp mov dec and xor jbe out cmp cld add xlat or sub add sbb mov mov push mov sub adc dec and xor sbb adc daa fistp orb cmp andb dec and mov pop (bad) je inc mov sbb jno jmp and nop cmp inc jns out add sbb xor ret aam fistl outsb int imul mov sarb dec jge cwtl or sub add pop and jno adcl pusha push sub fwait stc hlt inc add xchg dec pop lods sub xchg stos pop bound sbb adc aas dec mov pop outsl adc mov cmp lock push mov jne push into rclb in push sub xchg jb pop stos sbb jo or inc je leave xchg movsb mov in in test pop cmp add dec out mov outsl adc adc adc sbb add sti aaa ds push push and adc jns add add test adcb (bad) mov add mov and sub daa push inc cmp hlt cli add clc mov pop andb iret loopne xchg jecxz out and (bad) push icebp in mov sbb sub mov mov inc test adc ss fcompl mov xor pop dec or fdivp pop lds xorb inc shlb aas mov pop bound or adc adc push ret mov inc cli sub nop sbb push aad imull rclb add and or dec in cmp add mov dec dec fs sub fstpl mov inc push sub mov lret add icebp mov inc imul (bad) pop sub (bad) (bad) xor popa call mov stos inc (bad) js inc push mov add std enter adc inc and and rolb cmp and adc pop cmp add (bad) mov das (bad) mov nop notl cmp jg in adc data16 mov adc mov dec push dec add scas call sub lods cltd or or loop mov das push popf insb les dec mov pushf cli add nop ljmp lock mov push les inc and push dec cwtl sbbl mov es pushf push and cld jae add loop sub dec nop sub lahf sub mov arpl add sub fiadd rolb loopne pop adc push or scas sub pop inc movsl push jo lock fsubs dec fucom pop das dec dec iret test mov push repnz lock mov fisubl aad sbb (bad) mov and add inc sarb or mov mov and xchg xor adc mov std add adc mov mov sub iret js xchg and add xchg mov push ljmp sbb mov mov dec ret pop sbb cmp mov bound add mov daa loopne fs jmp addr16 push ljmp out in pop mov mov cmpsl in push push xlat lahf mov mov mov add in fisubl subl test mov mov sub pop js pshufw sub jp jmp cmp push imul or cmc lcall stos in pop pop (bad) dec push pop call imul loope jnp inc cmp pop xor xchg out push push add fstp jno lds add iret sahf jnp les inc out pop and mov subb mov dec pop lock fsubrl xlat inc cmpsb inc test pushf inc fisubl dec dec jp into or jb out sub cmp (bad) aaa mov dec ds nop xchg rcrl fldcw cwtl and popf vmovups mov pop jmp cmpsl jno sbbb and pop pop jb add fnstcw or mov or pop fsubrs or adc gs shrl pop pop sti jo jbe iret nopl cld fadds loope or mov add imul ret xchg test nop test mov and dec adc fmuls mov rorb lock or pop mov add test cmp sbb fwait cwtl jne out jb stos fisttp cmp pushf dec push lret mov xchg adc movl or mov adc (bad) shrl jl pusha lret in xorb fimull jo adc dec mov dec in push adc add pop cmp lods pop test xor mov repnz add in xor jnp sbb pop mov into arpl ret cmp les pop add add roll ret or cmp and jmp xchg sub je or nop fisubl pop dec jae int mov mov cmp mov mov cli xor ljmp jg hlt lods loope out dec and (bad) push cmpsl in dec xchg adc xchg test mov clc add aad mov nop not push or bound ljmp push hlt lahf inc dec cld or dec ds adc pop pop or mov inc int3 daa sbb push inc xchg insl or mov int xchg pusha add std je xchg pop pushf jne pop mov cmp adc inc xor mov adc dec and mov dec out fcoml pmaxub stc push leave inc jmp jae das mov jnp add lds test aam dec mov and cmp dec aas mov dec enter jne fs jae and cld pop neg and add xchg mov lret cmp hlt clc push dec test enter mov pusha pop lock pushf inc jmp dec loop add mov xor inc push cmp xchg imul mov lahf pop sub add (bad) (bad) fnop enter les mov xlat cmp mov push push xor and hlt pushf xchg cwtl push repz dec jo nop or int3 adc ficom pusha add inc aam and or andl and addr16 dec sbb sahf loope xchg mov rclb mov sbb and bound xchg or int pop push orl dec push sub ret sbb cmc pop loope dec insb mov popa test dec xchg push xchg mul arpl incb xor xchg call pop inc pushf pop cld mov in inc adc xchg scas mov mov xchg sbb daa loopne rcl roll (bad) in icebp sub lods into pusha daa ljmp aad add ret icebp pop adc jge inc mov sbb test jo notb and cs xchg cld inc mov pop aam ftst mov (bad) sti sahf adc push adc cmpb push and adc lret mov jns sahf bound push inc xlat cwtl in div xchg test inc sub dec inc jmp fstpl adc out jmp pop gs add in scas mov in test sysexit inc mov das pop sbb xchg test mov pusha cmp mov sub xchg mov push jmp sub xor pusha enter jno inc int3 clc pop gs pop xchg fwait push adc pusha or cmp aad enter xlat roll paddw int3 mov xor push mov or je add dec push out sub pop (bad) pop xor dec cmp hlt add leave rcl adc lock and pushl loopne jp inc mov or push mov adc jns mov push loope sub js or fucomp pop add push push xchg jnp mov lret push mov pop push imul add xchg sbb or and clc cs lods aam cmp mov or jl jb adc push mov lods push push fdivrl sbb and popa jne mull and mov clc mov push inc test in clc lahf dec adc mov xor cmp sar dec xor (bad) mov pop enter gs (bad) cmp fisubrl dec out add push gs stos mov mov sub jmp movsb add inc push daa lret push add jae cmp mov jmp push sbbl and mov cld mov xchg push pusha rclb subb xchg pusha sub out inc out or push sbb lock popa ds int (bad) jo dec test dec sub (bad) dec or daa and pop pop outsl mov pop push mov lods push jge sub dec cmp add out sub or jbe fidivl les cmp inc mull test lock xor jns and (bad) xor or sbb adc push ljmp js lahf imul push lret nop div outsl into cmp mov push out in mov mov xchg enter pop sbb (bad) (bad) das push jnp xor lds lods pop and and pop ljmp out or inc fcomps dec inc in jns test mov andb js push push mov dec fs rcrl adc (bad) sar pop daa xchg test xor xor cs add mov sbb dec add dec xchg add push pop dec cld fsubs (bad) fdivs icebp shl jo or das pop sub clc pop sub imul addb dec jnp int3 pop push clc mov add dec insl pop gs insb dec dec mov and sbb rcr je or and repz mov or mov insl and lock add sbb cwtl adc mov push (bad) psubb lret lds sahf push mov jnp in sbb jne inc mov addl int3 ret insl test sbb inc sub mov push sub popf dec test push lock adc or xchg andb gs bound es in add lahf cmp and (bad) mov push jno arpl insb add mov jle dec mov rcr (bad) insl xchg jl push in mov pop je enter inc pop fnstsw addr16 cli xchg sbb rcrb pusha mov mov mov jl mov adc daa dec or dec scas dec sub jecxz or imul popa mov mov sbb inc cmp mov add inc and cmp push (bad) in daa aad jns mov xchg pushf push nop movsl sbb divl test sub add mov push xor into js imul dec mov cmp test in sbb int add cmc test (bad) cmp aad xor lock pop std or add pushf int dec add icebp add adc iret add inc bound test imul sbb in jnp or xchg test ds mov int mov aad call sub (bad) shrl adc inc bound insb sbb icebp aad sub das outsb test fcomps fcoms call out iret cmpsb lcall test mov aad and imul push int3 push mov pop jo push cmp stc fstpl stc push test fmull mov es movsl cmp push push test jmp or test adc mov cli push clc mov mul clc jl out push bound aam pop push fidiv arpl sbb cltd enter dec jle add pop xchg imul rolb leave cmp movlps in add andl data16 jnp xor lods inc lea adcl mov stos push rorl ds shlb lock push add sub inc or lods add jecxz in dec jno fdivs and lret cwtl or mov test inc and and jo repz inc jmp push cmp cmc jge and push mov sti cwtl mov mov ja in jge sub or or lahf lds lods inc add arpl add dec sahf leave addr16 add mov pop pop aad or out or popa add add ret add sub int3 insl inc mov cltd fisttpl fiaddl lock sbb test addps dec roll cmp cwtl sahf outsl mov dec and loopne out xchg in clc pusha sbb fcompl sahf fildl lcall xor imul xor movl cmp ror scas clc add rclb in aad test movsb add xchg hlt es sbb jnp popf cmp push (bad) mov rcrb lock clc adc movsl and push push in popa movsb mov and pop xchg and inc jecxz in dec push add sbb sub bound gs cvtdq2ps (bad) xor ds je shr cmp sub cld pop loopne iret push xchg shl bound jp sub sbbb mov (bad) adc fcompl and (bad) in add rolb outsb jae xor mov imul pop aas or xor push jl sbb pop rcll std out adc fsubs rolb sbb aas adc adc jne fadds adc sbb imul inc adc and pusha xor dec inc scas and sbb out adc (bad) fs mov enter jns sbb es mov inc inc call adc movsb ret int mov pop arpl mov (bad) cld mov inc sub (bad) mov and bound pusha sub push sbb xor push popa in jge add cmp adc adc inc les gs xor scas push movsl callw imul nop jge es pushf add data16 inc sbb cmp pop cltd jecxz mov ret ds sbb cmp inc les aad or push xchg push ds ds add sub das and add in shrb and mov mov dec fs fmul ucomiss xor popa inc (bad) aad xchg pop pop in in adc int test out mulb add pop push sbb fmull inc sbb cmpsl mov nop dec add dec add insl fbld int3 xchg in xor cwtl sub sub lcall sbb jns (bad) icebp sub cmp lods test mov and mov iret lahf in sbb add cmp js ficoml xchg loop pusha rolb mov jg jl inc add mov out cmp mov mulb mov mov cmp pusha adc hlt popa iret in lock add pop imul lods jp daa mov and pop adc movsb pop popa hlt push aam inc je inc or je cmpsb sarb cmp ds mov cltd in es inc xchg lahf clc pop add sub sub es mov imul addb inc sub jge gs and xorb imul aad dec jge ds out xchg cmp fisttpl pusha inc dec sbb fs pushf cmp fadds inc ds xchg je inc mov fldl cli add mov xchg cwtl fs or call xor mov das add rcl jbe xor xor xchg sbb leave loope xor fsubrs push pop (bad) push int3 adc fbld je rclb dec jb mov nop xchg mov repnz aam jecxz sbb popa adc sbb rclb (bad) dec xchg jns out sbb in cwtl insb sahf and ret sahf lods mov sbb nop outsl orl js,pt sub popa mov xchg push cmc jle xchg fiadd cmp bound sahf (bad) and dec adc test mov bound movl out hlt dec fwait xchg ret mov push test aad cld or mov fs jo in mov xlat fcoms dec aam pop int3 movsl cwtl cwtl enter int3 hlt jmp cs mov jl pop cwtl lods inc push pop sub js lret push icebp testb shlb mov dec pop jmp mov sub mov ljmp and sub xchg inc adc adc push add add scas xchg mov jno ds or add mov inc icebp aad xchg pusha aad jl and icebp pop jl pop cwtl rorb push sub pop mov pop repz sbb xor addr16 insl xor (bad) call pop rol mov pop cld mov jle aam push cwtl int clc test enter cld movsb mov cli or fsubr pop add sbb xor (bad) into popa add ret icebp (bad) hlt xor xchg pop jnp adc add mov lods dec jle xchg fsubr add add add mov dec lret xchg movsl and insl inc mov call push clc add insb or loopne add bound loope xor cs add sub inc iret fs add test jo aad inc jns jle clc xchg mov aad shrl mov mov sbb or mov mov imul nop bound mov lock cwtl sub dec adcb mov xor cmp inc cwtl mov mov add bound mov test mov jnp push xchg mov add loop mov std fwait and adc arpl in scas inc pop add jle cmpsb in add dec stc bound add inc hlt fldt adc xor arpl imul dec add jle enter mov loop (bad) test out cwtl cld jmp cs repnz movsb and mov add into sub push dec or mov sub adc dec shll fsts cmp dec lds and inc xor dec in push mov clc loope icebp sub rcrl xchg xor fucomip inc dec addr16 addb mov insl mov popf mov das arpl lea js xchg sub and nop hlt pop pop je xchg mov stc adc lds dec inc sbb pusha aam pop cld pop sub outsl add inc loopne rcll sub call fisttpl pushf push add sub fidivrl insl leave dec je dec xor icebp out pusha sub (bad) pop ja or or cmp rcll adc pop sub nop add dec out dec pop add inc (bad) outsl out pop in or sbb mov jp sbb add or and jge bound xor xor pop adc ffree insl orb xor icebp lds lods sar mov int3 inc lahf fcomps sahf arpl mov and adc and lods pusha and jl mov gs cmp mov sbb push pop in in bound and mov aad lds leave pop shl push sub adc pusha nop loopne mov mov xchg stos rclb mov pop in sub fstl xchg adc test push or add or testb sti jl fwait xchg pop insl dec popa and in pusha jbe sbb sub xchg push stc sbb int lods push jo or insb inc add xor pusha mov lret pusha (bad) push rol add lods add xor inc aaa rolb (bad) sahf sbbl ret or sub lock ds push xor inc mov sbb mov inc mov mov (bad) mov into imul (bad) mov sub (bad) xor push push in add movsb ljmp xor les sahf je and cmp mov add sbb cmp xchg mov adc mov pop sbb pop cmp mov lahf fs jl mov orb loop sub xlat popa push inc add int3 sbb jle nop add mov daa lcall add fmull andb movsb loope push add outsb mov add xchg xchg sbb shlb rcrb pop push hlt (bad) ja int3 in test xchg aad stos jns jp sub add add je aad mov push pop fcoml dec loop cmp add (bad) add push icebp bound mov mov and xchg xchg sub push fwait adc inc loop push fisttp clc out or and js mov scas sbb cmp mov aaa inc xlat loopne xor in adc test add testl ret mov lret iret sbb dec movsb int lea aad add jns or pusha jnp fisub mov (bad) decl addr16 and inc ss mov mov fstps pop aas dec sbb adc or shrb mov pop or nop and dec fnstcw or sub and add xchg fwait leave push into mov mov pop sbb testb add call xor dec fisub mov out dec sbb pushf adc jl add inc jecxz pusha bound add test inc dec in fsubl push sbb loop push xor mov add adc insb add fdivrp ds jne add imul pop and add fiadd nop movsb or out ret andb cwtl add mov adc fwait sbb pusha call add lahf mov sub adc xlat scas cld (bad) cmp sbb sbb hlt popa inc popl jae lret sqrtps mov sarl add push xorb xchg xchg xchg test call popa push and das pop lock xor push andl icebp sbb mov or stc cmp jmp jnp sbb leave cmp add ret call lcall cmp add arpl pop or lods sub mov pusha cwtl sub (bad) add lds fwait in mov and sbb sbb insb loopne sub ja or dec fnstcw sbb pop adc jbe or movsl add mov stos movsb mov imul push push mov xor add jno int3 movsl adc dec (bad) mov or call push call cmp or lret rolb test lahf adc xchg sub push mov push adc or sbb mov cmpsl jns sub mov add frstor mov test jne or (bad) xor add add mov or cmp sub sub sbb hlt mov loope (bad) aas add cli cmpsb xchg incl mov fcmovne repnz mov cli (bad) int cmp jg nop mov or add mov aam adc inc or and mov xchg add (bad) fmul jle mov inc mov nop stc and vucomiss movb call add or lock xlat (bad) mov loop pop cs push or mov sub and aad mov mov pop pop add and cmp pop movb pop or cmp sahf push aam push pop lock mov andb dec stos cmp cmpsb fstpt adc pop adc ret aad inc push das sub xor cmp inc push lret out mov imul cmp add int3 pop faddl jne js mov ss stos leave push cmp (bad) mov ror cwtl js mov aam rolb fldenv hlt mov leave or pusha mov mov fincstp push test add dec xchg mov popf lods add loop mov xchg daa pusha and push fsts aas add cs in adc add cltd je iret xchg and jmp pop cld or cltd js repnz cmpsb jne andb push sub or cmp js repnz xor les mov int3 add ss pusha xor mov popf inc mov mov arpl lods pop and imull call test cltd fmull insl and mov mov add sar push in xor call cmpsb pop inc int3 addr16 andl gs sub mov add push mov stc or imul push cmpl mov (bad) mov (bad) push out sahf add and fadds mov (bad) fcomi addl xchg movsl dec mov add loope stc sbb in das imul je mov loope bound in add jg mov sti jge mov or sub lret inc or mov xor les mov add inc das push aam push adc mov add fsubrl cmp cs inc cwtl and mov cwtl mov popl scas mov jns or repnz scas cmp fcomi or xor cmpb lret adc (bad) add mov pop lcall or inc sbb cmp nop mov and dec and add and test cmpsl ret add inc mov loopne std fistpll insb pop sub or add or out cmp or or push add int3 jecxz add sarb pop cs or inc pop xor push out out frndint ss xor pushf inc pop lret fistpl push mov push jle pop iret sbb fcoms fcoml (bad) fnstenv outsl and sub jmp mov leave jl popa mov jnp je add in arpl mov add cmp sub or sub call lds movsb loopne fldt jp int3 fdivl sub add ffreep sbb lods push mov loope pop dec add add mov mov in cmovs mov sub lahf idivl jne or and out mov adc jecxz sbb nop or add pop bound movsl or lret in xchg push jne jo mov lods rolb mov jnp jle sbb insl jb icebp sbb pop xor cmp and nop cwtl adc lret iret add orl repnz outsl cmpsb mov imul jl cmp popl int3 adc lret sbb (bad) js enter pop incb mov pop inc push into mov aas outsl xchg addb mov push std add ja lods inc jae sub add mov daa insb shrb add fstpl add cmc ret xor adc xlat push addr16 add sbb shlb sbb pop add dec jmp adc imul pusha jl leave aaa popa jmp cmp add fidivl ja int or sub shrb ds mov js into mov popa add sub sbb arpl test into out call sub xor ss arpl mov xchg mov stos fmuls push sub mov (bad) sbb mov and or popa out mov lods cmp sub xor push divl xor sbb les mov cltd incb fs xor sahf add aam call into or mov sbb xor pop or iret sub adc insb adc push insl xor (bad) sbbb cmpl mov sub cwtl add push pop lea inc nop cltd aam lods sub xchg mov sub and xor std add sub ds stc pop and fs rorb or clc call mov pop xchg in mov inc je and aam js jp scas jae jnp mov lahf lods sub mov mov jge test dec clc mov or lcall (bad) shrb xchg test (bad) mull dec and adc movsb mov and dec imul xor xor add and adc int and outsl cwtl sub adc popa cmpsb mov jbe lock lcall add test lret mov push inc int mov cltd jno mov xor and add and arpl inc dec les out xor mov cld xchg xchg add xor fadds add mov cwtl adc into cltd and cltd cmp xchg ljmp addr16 xor shrb stos arpl test jns ss lret (bad) outsl lock xor and mov call fwait daa dec push jle sub mov orb imul lahf push iret adc fcomps scas add xor jg in adc pop xor or mov and or aaa or xor js fsubr sbb xchg in inc hlt and push and les xchg je mov jae jbe les and mov mov or mov aam xchg pop enter sbb sbb push pop dec xor adc testl cmpsb and test adcl push xchg aas jmp lock jmp cmpsb imul pop or inc enter test mov lea lret shll adc sub jae pusha xor ss push popa outsl adc adc xor loopne xor and jg jbe sub mov scas cmpl or out (bad) mov mov adc mov cmp push cmp cmp dec mov imul repnz out movsb sbb cltd ds subb ficom mov lret cwtl andb fiadd cmp or add ficompl sub rcrl testl es inc inc sbb mov addb enter lock rcr lea adc call shlb mov xor fwait les inc aas or push mov nop sbb push cld pop lods jp les lcall dec aam mov ror mov jo or jp add or mov lea repz rcr inc jo xchg and int ljmp lods mov dec cwtl lds or or mov inc les add aad lock and loope enter adc pop cmp pop sbb aas lret shrl add inc fwait (bad) xor and add and inc jnp xor fwait es dec (bad) pusha cwtl or jge (bad) cmc push mov jbe mov in out loop jecxz push loope loope lock insb dec adc cs and add roll loop sub pushf add push sarb ljmp mov loopne mov push add xchg push hlt je out cltd mov jge mov mov shrl or test ret or jbe jb xchg js adc adc xor xor lcall enter xor push add pop sahf (bad) xor incl cli add imul add adc jns cmp cld xor std mov sbb cmp xorb aaa mov add lea push cmc cmp popf sbb cwtl push xchg orb aaa pop mov jns inc fcomip push add pusha sub cld xor das sbb cmp fildll adc lods mov test cltd and aad repnz cmp xor inc mov sti popa test push mov dec pusha adc add xchg mov std in xchg dec lret xor mov sub sbb aam sub fcmovne sbb and adc jb popa testl out cltd push xchg mov scas or jge mov or rcrb test push xor mov negl mov dec cld inc xor lahf add test mov mov movsb sbb or mov ret push gs xor push fcom mov lcall xchg or outsb sub mov pop mov mov push out fisttpll xorl (bad) sub cwtl jb mov mov pop push lods push (bad) jmp mov mov inc mov ret mov (bad) jo xchg adc pop adc sbb inc call lcall adc dec out cltd mov dec pusha (bad) inc or push pusha adc xor cmp jne jns dec shll or jbe cld mov rolb scas lcall adc int3 xor cltd cmp inc sbb xor ret fcomps and cli xor push push (bad) (bad) hlt es lock mov int mov test adc pushf add icebp pop rcl inc push test mov xorb iret add pop xchg scas gs out aaa inc sbb rorb movlhps jno add mov nop data16 cmp pop or ss cs ljmp inc int3 bound (bad) xor pop cmpsb and mov test popa inc xchg sbb cmp add fdivr pop (bad) dec repz cwtl adc pop cltd sbb inc cmpsb cmp xchg cmp decl xchg dec ja inc push jno pusha and addr16 xchg xor in clc inc mov push inc cmpsb mov or dec es test or addb xchg inc mov xor pop pusha enter stc cwtl jge sub push push pusha and mov mov testl push and nop ds fadd scas cwtl in stos sbb adc test inc dec in mov (bad) or dec dec lret shll std cmpsl aad add shrl lret shrb (bad) int mov add nop push call cli aaa add mov xor fnstenv loope movsb inc jge sbb ret (bad) stos outsb nop cld adc add dec inc adcl xchg les pusha and notb cmp cwtl sub loopne adc push dec sbb icebp cmp jl add in lock jno lret cmpsb dec mov orb add cvtdq2ps nop dec pop add pop arpl decb add xor mov inc lock shlb (bad) adc jo (bad) mov inc bound adc inc sbb ret sbb in inc or popa adc add cmp ljmp dec jl push sahf xchg mov imul enter (bad) jbe sbb pop xchg hlt push mov mov and push add mov jnp rcrl and adc int3 cld daa imul cmp in add (bad) mov scas and cli push add mov push fild cmp mov ja rcrb in pusha cltd enter cmc or or and add inc cmp out pusha or insl mov insb outsl pop dec push cwtl or enter test inc fdivl or in aam add ss dec scas lcall fucomi and fs push call hlt inc xlat jno ror or leave xchg in and mov push les andl pop xor mov dec imul jb mov and loope add adc pop mov xor xor dec add jb inc das sub stos ret pushf xor (bad) aaa lock jo fwait cmc xor pop jns add sahf mov (bad) sub ffreep sub mov cmp pop into pop xor xor push ret mov arpl (bad) cmp in imul test imul sbb mov xchg jecxz jg or cmp dec scas fnsave (bad) and (bad) test subb or test pusha push rcl mov xchg in add xchg mov xor inc dec inc jecxz ljmp add sub les xchg lret push or sbb add rolb cs das es cwtl inc movsl or call (bad) xor in pop xchg pop cmc xchg inc lea imul pop dec mov jnp add adc inc cwtl inc clc sbb mov pushf or jg,pt push and push push sbb pop nop js fnsave pop push popf ljmp std xor push les push add inc in lods gs jge add xor and fcoms fnop mov out mov xor jl and adc loopne jnp sub int3 xor xchg clc test lret or jmp es add push jb (bad) or test inc or sub pop jbe add hlt push jnp in fidiv and sbb inc movsl xchg sub inc jo jb incl pop push stos mov (bad) push mov movsb add sbb dec xchg xor push lahf add mov pusha push in xor cmp xchg call push mov cltd and enter in push mov cmp les or cmp mov (bad) mov loopne pop scas lcall add insb aaa fiadd pop mov sub mov adc fldenv rorb cltd inc and ds add cmp xchg jg ja add add aas sahf xchg jo push or adc sbb rcll fcoms dec fcompl cmp stos and sub push nop mov lods cmp xor cltd pushf add mov jne sbb push out xlat fisubl dec test mov and jb adc sub sub lock cmp sub sbbb sbb inc xchg and push pop enter pop xor pusha repnz sub xchg nop cmpb mov adc mov outsb or inc push lds mov in mov je loope inc dec fcompl shrl arpl xor movsb sbb rcrb mov mov adc call loopne addl pop test push cmp add and sub sbb xchg sub add or mov aam outsl sub xlat or jae dec cltd sub adc sbb std mov push adc inc ja dec rcll out jge sub lds or cmpsb out fdivrl mov rclb rolb lds (bad) scas test mov adc sti roll mov sbb outsb ds add test inc out mov sub fst mov xchg inc flds or mov sub add add bound mov int xor push loopne movsb add outsl imul jnp jns xor loope in fs push sub sbb std adc xchg add fisubrl inc adc pop test add xor add xor cli push (bad) push (bad) push jb fdivs pop popf data16 mov adc rep call push xor loop add inc es pop andb mov icebp addb jmp js ss out icebp dec pusha clc pusha mov sti les xor dec inc insl je add add push dec and inc test push loope cmpsb fwait fs sub test clc add mov jns add rorb test dec cmc add adc inc add sbb xchg insb mov mov ret mov dec data16 mov sbb rol mov adc jmp add inc push sub sti leave cld sti sub adc in mov rclb and xorb inc incl dec cmc ss lods imul inc mov inc fimull imul repnz addr16 cli popf (bad) jb xchg dec je sub arpl pusha adc test sbb aam mov ljmp lret or ficompl xor sbb js and fstps lea arpl cli inc inc mov add loope cmp scas add inc ret outsb popf loop rclb cmp pusha pushf ror and push push lea test or loop nop test aad or xor push hlt mov int3 shrb push enter add pushf outsl pusha or xchg mov and movsb cwtl dec inc jo mov add gs xrelease and cwtl aaa es jne adc ss test xchg dec or mov mov aam lods add dec pop incl out lock mov je shrl mov cwtl lcall js xor mov xor aaa mov repnz xlat jb in sbb stos jl mov jb adc add mov flds aad xchg loopne xor dec fldt movsb inc lods add insl es jo daa in test lock add pop and into xor sbb ss or push fdiv orb xor pop test rcll xor push mov rolb mov xlat outsl jae mov pop adc cmp lret mov fmuls cmpsl jno dec mov mov xorb adc cmp mov aas cmp popf adcl das inc mov sub adc mov clc cmpb xchg xchg sbbl inc or inc jne pop aam add aam pop push cmc push ret adc les orb sbb sbb or mov xor pop je cwtl or adc sub and add adc std dec xchg daa add xor movsb cmpsl out rcrb repz inc fstl sub push loop lret add repnz adc inc inc and sub inc nop pusha loop and pop pop jecxz or cmp push pop inc (bad) aas lods dec mov mov sbb and mov add int3 inc xor hlt lcall jmp and mov add lahf sub and inc sub lods push aaa pusha jo add in sub push jo std sahf sub push mov xor subl add aaa ljmp xchg mov lods je push mov in popf pop mov mov add andl fsubs pusha push loopne imul xchg or insl mov call je jo sub ja dec cmpsl push xchg mov test roll dec mov (bad) sbb js in mov cmc push pop pop call les and inc cltd xor adc sub fnop push sti jp mov and adc loopne shll pop sub in dec daa aaa scas mov out rolb ss dec push adc add es lods fs sbb std jo lea das and (bad) jae mov fs ret enter pop insl and js sub push xchg inc enter sub mov mov mov jg add xor mov cmpxchg and inc aad or jo mov mov shrb or cltd dec xchg sub outsl cwtl xchg call mov cmp or sbbb pop push subb add inc out cwtl mov enter cmp mov stos aas jbe add fstp jns dec add fild adc bound add mov pushl pop mov cmp out xchg cmp push jg fmuls test dec inc sub scas imul adc sbb mov imul cs dec or xor rorb add xor and mov sar mov js pop addr16 jne cmp (bad) outsb pusha inc cmpb ret pop xor mov dec cltd pop shrb nop in clc mov dec xor pop xlat idivl and (bad) in push inc test inc xor je lret lret xor dec mov cmp jle xchg mov push cld add imul sub sub jmp daa test roll adc push sub iret pop sbb cmp loope cltd lock movsb add stc inc (bad) mov int3 (bad) xor mov fisttpll pop subl add rcl xchg inc mov add dec movsl or push mov and xchg fdivs lcall mov adc adc mov icebp iret into or cmpb mov jb and mov push call add push dec and ret xchg orb js jae pop dec mov push mov cwtl adc outsl mov inc sub shr pop cmp cmp adc or ret add negb and dec mov out call frstor jg and out pusha in inc ret and jns pop mov fldcw mov mov mov (bad) jnp bnd mov cmpl (bad) imul pop adc dec icebp addb scas ds (bad) add movsb sarb pushf push xchg sbb mov or mov packsswb (bad) add out xchg xchg or cmp cmpxchg sub out push loope adc mov leave (bad) xor inc cwtl cmp inc outsb popw loope loopne or ret dec add jmp es push adc mov shll pop inc cmp inc lahf out in into hlt test ss aas add add lcall xor sbb cli inc sbb inc call repz jno sbb mov or add mov fisub or (bad) push cmp jp cmp xchg adcl scas (bad) hlt inc dec fstps sbbb xor rclb pop jbe xchg xor mov dec xchg push and or or push or test push mov insb add sahf insl lahf orb pop or stos jne inc xor stc sub in outsl (bad) aaa mov inc cmp sbb add test and inc outsl insl pusha cli and mov js add pushl jae inc arpl jnp adc das push call lcall addr16 mov enter or mov fbstp cmc rcr add in outsl js fs mov sub xchg out das mov mov jbe enter jg sub add ja test mov pop nop mov dec jno mov ror in (bad) dec dec xor sub cmpsl es insl sbb pop xlat mov and imul xor faddl add scas sti pop or les out inc mov add push test xlat sbb lahf aad dec js inc pop mov aas dec add nop (bad) and dec jae add mov sbb int cmc push call jmp jle push push loop sub clc cmp sub inc pop mov test mov push clc jno xorb or fwait mov xchg dec loope xor sbb xchg rolb leave adc xlat addr16 mov (bad) in push stc movsb adc int add dec shll faddl mov inc call (bad) adc aaa jg (bad) xor ds inc cmp cwtl xorb sti dec pop cmp ret inc and cmp mov push cmpsb and mov inc btr xchg sbb nop pusha aaa add mov pop add xor cmp dec rcrl cltd push enter and sbb or fadds push add pop jl (bad) cli mov adc mov add movl outsl inc or inc mov add in (bad) je out and jge add pop scas pop ss pop jne dec push mov adc int3 and and ljmp lea adc fwait cwtl xchg add mov fimul in mov push enter rorl pop mov je dec or (bad) and xor or repz cli ss add xlat pushf sbb mov push out cwtl repz int3 (bad) mov movsb fsubl ds push nop imul cmp (bad) movsb mov mov push test hlt clc sbb jl add xchg push cmp das mov lcall or sub setl rorl scas repz pop (bad) jae xchg stos xor sbb fdivl loopne cmpsl lret lods or pop mov loopne mov fcoml movsb dec adc cmpsl dec js movaps cmp test sub push mov push outsb cmp sar daa lock loope xor lret ljmp das aad in roll pop or outsl movsb or iret jns shr pavgw in sbb sarb add jae sbb sbbb lret stos mov cld cld inc mov lods add cmc out pop add cwtl sbb pusha inc pop cld jge mov aam dec popa add call mov dec rolb mov scas mov mov bswap fisttp jp mov xor out or cltd jl cmp sub out cmp inc adcb dec fld inc out pop pop jbe in xchg pusha pop jecxz sub cmc pop shlb jb mov arpl sub pminub pop lcall mov pushf sub sub rcll cwtl stc popa fsubrl leave jecxz test xchg out jno rcrb les test and pop stos xchg add sbb in daa les sub jno and and enter test and rcr fadds sub xor add rclb dec aaa mov and ficompl dec subb repz push dec push ja shlb cmp out daa push dec cmp mov sub push fiadd cmp mov push mov arpl dec std (bad) aam or and and sbb mov or pop mov test adc sbb pusha jmp mov mov pop sub adc mov dec fcompl adc xor lock ljmp pop fdivrp sbb sbb ljmp or lock mov dec in adc adc js cmp call idivl bound xor jge orb lods xor or sbb loope pusha jbe and call push rcr cwtl adc lahf adc (bad) push pop sub mov fnop dec add popf sub inc jl pushf add inc outsl sbb ret mov fwait shl orl into add xchg imul repnz in cmpsl pop ds hlt mov mov inc (bad) ljmp cwtl pop push insb mov pop sti sbb push mov mov inc fnstenv enter jp imul push outsl in sbbl and pop add sti fild push sbb wrmsr lods pushf dec dec test add xor add lcall and inc or sub sub mov push or adc roll fcmovnb (bad) (bad) cmp pop popa and push movsl xor push push push std lock pop or pop lods enter dec das mov test dec push mov movl into push add es in jne jo mov jge mov sub adc jmp adc pop lds (bad) cmp add cs (bad) pop add pop mov sub call jns pop push mov xor lock bnd imul dec adc or sbbl cli cmp mov js pop inc mov pusha (bad) adc aas jb mov shll sbb xor jnp adc xor sbb adc xlat inc xchg dec inc aaa repnz jg pop lock (bad) fdiv fsubl js das fs fs rcll call lods or (bad) dec xchg pop insb inc lock dec sti xor push in or pop xor (bad) sub icebp outsl add outsb pop jecxz xchg pop fadd jg (bad) cwtl mov je sub lods jp pusha rcll jl rorl dec jecxz push mov lock dec popa stos pop mov mov stos loopne popa xlat js cld daa xor lods pusha movl popa dec dec loopne icebp sbb push loop mov cmpb repnz jbe mov mov or pop int or dec sub mov adc or mov xor cli mov and dec mov faddl clc mov daa sbb inc test mov repnz jbe cs inc or loope jnp mov add push inc pop inc insb iret adc push sbb jg cltd add hlt and cmp xor adc cmc xchg nop (bad) add jle mov call stos out je (bad) or out jl xor cmp xor in pop (bad) mov cmp cmpsl add jg out int3 inc test int enter mov lock or cld mov js sub and nopl cmp dec or lea data16 xchg push mov sarb adc push xor leave mov push outsb push adc test mov mov mov out nop lcall (bad) fild inc mov add inc lea inc cmp adcb pop stos mov add mov pushf bnd pop xor pop shrb pop movsb push repz outsl loop inc push aaa stos dec cmp mov int cmpb (bad) mov sub (bad) and outsl cmp mov jl or adc inc adc add out xor add push enter fisub or sar (bad) inc add xchg jo orb push lahf xchg and sbb dec xor pop js (bad) lret dec jp addb call fstpt xchg imul sbbb push or stos add inc push sub test cwtl and or sbb imul push scas cmp addr16 and js mov add push loop mov movl xor imul add mov pop cltd pop and mov jb add lods dec pop sub pusha fistpl les pop inc add mov mov jle nop xor push repnz mov jb add and add inc hlt dec xchg sub lahf pop dec pop add call cwtl sub push js es int3 shrb mov xor dec cmp test nopl fwait nop or int3 popf mov rclb fisubrl dec imul clc mov add or call cmp sbb call outsb sub sarb inc movsb ljmp fst cmp inc imul (bad) mov divb jns sbb pusha mov popa aaa jp clc (bad) (bad) dec cld mov and rol and push pusha mov xlat dec cltd and (bad) stc in sbb sahf test xor inc push shl and es hlt movsl jnp add push push cmp sbb cmp push cmp push adc lcall icebp xor pop scas call lods addr16 clc add out fdiv pushf jae or in xor lods out add cmpsb add xor fidivl pop sub and cmp jns rol push enter cld add addr16 xlat inc mov xor push mov enter add mov mov sub lds popf xor xor leave pop push inc mov mov adc sti insb add shll mov fwait test test enter xlat and loope or xchg pusha fwait iret movsb mov add cmp jp loope ret push xor sahf repnz jp (bad) dec xchg and mov pop test sbb xorl cmp mov jbe inc das ljmp pop push nop jle sub pop sub inc jecxz nop mov inc push mov andb sbbl fsubs mov adc mov and insl cli out xor mov mov stc sub sarb cld push (bad) ja dec mov hlt je lcall dec cmp lret or jecxz out pop mov hlt mov gs int in mov pusha adc adc pop movsb or adc mov loope mov xor mov rorb cmp and repnz je mov loopne arpl add push and add jp dec xadd dec mov movsb push sbbb shlb dec orl jg xor out sbb mov jl sbb enter bound sub add sub adc xchg fmull cmpsb loopne and movsb fadds cmp add push push and xor fiaddl (bad) bt addr16 les add fwait push mov jge ret push daa mov jns and sub dec add popw icebp lods adc and sbb testl jnp mov and fsubs (bad) stc iret test and pop mov ret adc cmp add xchg mov push ret add test int mov insb enter shl sub and dec cltd mov fdivs or add pop js dec cs leave sbb sahf fs or push mov repz cmp push fistpl jo and xchg hlt fwait (bad) loopne push movsb incl push arpl ds and xchg dec jg cli inc mov clc repz clc movsb pop or cwtl hlt inc and test sahf xor sub insb add mov ja push sbb push push mov pop hlt add mov xor lods lds add add mov jl jns cltd add add (bad) (bad) clc push inc test or mov dec and sbb mov xor daa rcll jo or and mov inc popf xor inc sub enter jle xchg stc adc sbb mov out cmp ret lods clc int inc int3 mov daa fnop pop push pushf push mov xchg fstpl test or cmp int3 add xor hlt test int3 rorb mov pop sub mov call add das dec mov pop popa push mov sub sbb shlb pop (bad) adc sub mov inc xchg add subl add cs (bad) into mov push mov in or out dec popa imul rolb iret nop das and and rclb push and fcmove or inc xor push and and test or or add sub arpl andb dec mov test xchg push sub je addl call mov and mov addr16 fs mov in sbb push or xor popa dec and or pop sbb cmpsb (bad) daa idivl cli adc repnz lea add stos out sbb mov mov enter movsb shlb les iret push ja pusha sbb test aas (bad) pusha lret fadd or mov mov (bad) add push jecxz lods pushf mov popf xor jg xchg int3 add jecxz in in inc jb inc cmc mov adc fisttp push nop mov push sbb out in mov cmp lcall (bad) xor fistl pop in pop xchg dec rolb push push push cwtl jb or daa (bad) mov rolb adc sbb repz mov lahf xchg or lcall iret nop lea jg shl es push inc add mov sbb dec jecxz (bad) cmpsl push aam dec and sub mov add push xchg mov push inc xor or fcompl cmpb jg and xor and fsub notb xor pop dec sti adc xor cmp orl jmp mov ret inc and adc adc xchg adc dec cmp lods add test mov inc mov inc xchg mov in (bad) mov cmp xchg mov imul popf mov shll add mov fisubrl add inc jno std mov push mov sub les push pop push xor mov adc xchg mov js push out lock sub xor or xchg push sbb shlb nop adc cmp pop xor mov stc loope test inc mov mov mov push jecxz out sbb and flds add dec cmp hlt outsl lret fmull jb addr16 pop push cmp xchg pusha nop lock pop dec mov movsl sub mov cmp stos mov xor sub daa inc js adc cmp das fisubl int3 call in je push add popf and sbb lahf dec xor shll pop insl push or mov lea sub pusha sbb cmp push loop aaa xchg (bad) add bound lret test cmp cmpsl adc push fwait shr xchg and std push pop es sub insl pop add pop mov xor ret inc jnp out lods aad pop xor push call stos (bad) lret or adc mov call sti or inc add mov dec mov dec adc jo xor xchg pushf sbb or int3 push xor jp sub popl or fnstenv leave inc push pop pop adc dec xchg cmp sub mov mov dec sub jecxz lods xor (bad) arpl dec and cmpsb je inc mov out mov adc inc xlat push push in ss das cmpsb lret xchg test sbbl sub ret jmp push frstor jbe pop xchg dec jnp (bad) jl cmp jmp idivl mov mov cmp pusha imul pop insl sbb cmpsb stc sub mov ss push sbb mov int3 out jge add (bad) (bad) add mov and ror mul add pop push lock cmp mov outsl int3 mov and mov sbb sbb dec sbb sub xor or int push cmp addr16 xor (bad) sbb adc sbb push mov int sbb inc test sub hlt xchg shrb mov insl add push rolb xor mov and lods xchg cli cld out and cmp fs mov push sbb jne sub or bound push dec gs dec cmp shll jns loopne outsb call xor shlb push add cmp pop aad mov pop add ja adc jnp push add inc cmp (bad) and inc insb pusha clc add jo lret mov add mov mov cmp repnz inc clc cmp shrb movsb loop std add fs imul xchg xchg pop dec dec (bad) clc xchg add pop jle into cmp add sahf xchg add roll fdivrl mov sub daa xchg cmp ret jecxz roll inc pop sbb sub xchg inc dec cmp jecxz sbbl (bad) pop clc xchg sub add push stos ja lds jnp sub call outsl scas loopne daa lret fldenv sub adc cmpsb imul sbb pop nop push (bad) jp sub stos mov into sub mov fs mov sub dec lea lock fnstsw test testl add in xlat sub add es or sub hlt or das mov cmp int3 mov mov xor enter pop flds jecxz pop jne adc push sbb pushf sub sbb mov (bad) icebp inc lock add push test (bad) fsubr sbb loopne pop push lock or std leave ja push dec push mov pushf lock or xchg rorb sbb (bad) push sub sti test adc dec jns fdivrl mov add popa add dec rcrl sbb jp cli imul jmp pop aaa flds pop adc inc sbb cwtl shll add movsb vpunpcklbw mov mov lret push dec (bad) rcrb sbb shrb fistpll insl nop cld pop sbb xor lea adc imul lret or jl or nop in insl mov jo (bad) pop enter cwtl pushf cmp call mov test jmp sbb in add mov cmp popa inc sub add cli lcall stos mov aam gs call add xor mov add xor orb imul sbb mov or mov add incl xor mov mov sub insl push and sub cs jmp sub mov or test jo cmp and or add movsl mov movsb add test mov adc dec movsb add shll jne jnp adc enter jae adc enter pop cld lods inc xchg push cmp or das jmp insb xor add xchg mov pop sahf sub and pop test xor and mov xchg jnp and pop inc sbb cwtl push mov jp pop mov and sub adc cmc add pop outsl pop or push lret xchg sarb mov xchg dec sub add add fistpll cld les mov (bad) loopne jo sbb rcl lods jb lret dec sbb ds sbb adc dec (bad) push enter les ss outsl out mov ret fldenv and clc shlb addb loopne jp xchg rol xor and lods les dec scas xchg add in ret sbb and pop inc gs add fild jmp sbb sub add dec subl mov sbb test add xor pop aaa dec or iret mov stos in push adc push mov push push mov pop dec insl clc push movsb xchg adc mov dec or and push insl jne push out add repz add sti mov pop cld xchg dec mov adc ret enter inc rolb pop lods jge lret mov in test xor xchg or adc dec cli push sub sbb in add lock adc mov dec add xorl push add les cwtl sub or dec mov push jo and pop movsb inc pushf pop pop push mov mov or test mov out add aad and mov dec cmp cs mov call lock jmp daa add pop cmp and push mov add jo pop xor cld icebp xchg test mov nop sub std cmp test shrb sub leave enter mov js jne mov mov push jecxz add cmp push xchg aaa inc mov dec inc lock fistpl sub dec jmp in jle jo add repz and push repnz stc cmpsl xorb mov sar jo cmp jo repz mov sub fiadd sbb xchg push out xor add xor jmp insb or test data16 push mov xchg mov push dec cs jle pop add lcall loopne mov (bad) cltd jmp movsl xor and cmp lods sub enter imul int3 and jo test cltd outsl fistpl push sub dec cmc int sub addr16 xor and stos int3 je push ds and bound mov insl lds hlt lods jmp add imul push dec pop cwtl enter xchg jo out adc and add sub data16 loope or jg cmp jg lods ret adc and aam dec dec mov xchg sbb mov sub jmp ss pop aam push and xor (bad) cld or dec sub stos and add sub in enter jg jecxz adc xchg dec push adc test xor mov xor mov mov dec sbb adc add incb call and or inc dec sbb in dec mov dec mov sarb mov cmpsb and dec xor mov push add xor (bad) out jle rcrb cld add pop repz (bad) repnz pop lea xchg pusha xchg pop adc sub dec add push arpl je or orl lret popa adc sub repnz and sub xor into js add cmp outsb cmp imul ja cltd inc lods jo insb xor arpl pop push pop lock adc push (bad) cmp rcll es into enter xchg icebp jb inc adc rolb aaa xor std add dec xor push and mov in fs cld ds mov adc jno call ret ret push loopne push pop or inc test push fmuls push in mov je stc push and adcb pop jge pop inc ret adcb inc enter loopne xchg mov in push mov cli popa add gs inc movsl call cwtl mov aam dec mov lds inc push add imul fwait lock jle les loop cwtl in loopne sub lods cmp js ss dec add fistp xchg rclb insl loope fcomps fs cltd fsubl xchg jae sub sub inc hlt sahf push xchg icebp (bad) mov int3 push enter lock addr16 sub iret aaa addl xor sbb adc std lcall rcl add sti rcll mov pop mov add into sarb pop pop adc cltd add jne jns cmp in insl pusha sahf inc mov jo push adc jmp lcall ss add dec sub cmp repnz les loop push insb xorb rorl cld pusha push test lods mov aam loop xchg out data16 jns sub (bad) push popf lock js inc xchg sub jmp mov lret pop push jb repz jmp pop and stos testb add inc insb jl nop int sub nop adc mov cmp popf mov call nop jl push push int sub sub inc adc stc add int xlat mov ds adc aaa in lods or adc mov loop mov and cs and sub xchg pop and xchg subl pop aad adc sub cmp pop add adc insb inc test or sbb mov stos xchg jge add xor mov jle leave mov loopne push jo xor (bad) adc mov dec jmp sub les mov fs shl push inc cmpsb nop push jo call mov fs push pusha leave adcl mov call add iret and loopne fs push rcll test push nop adcb call pop mov xor and xchg aaa pop movsl inc mov jo adc stc or test lock cwtl cmp sub add insb cmp and mov lcall and jnp add cli sub mov ret outsb inc xchg jge stc mov arpl sub adc cmp cmp jmp lods pop out les inc dec leave insb loop fs inc jmp jno (bad) jmp push mov pop lea shr and push push arpl sarl push test adc add ljmp cmp add mov insl mov (bad) inc pop sbb mov dec adc and lret sub sub (bad) stos movsl mov daa sbb or nop jno inc loope sub adc jb nop sub (bad) dec js mov pushf sub adc hlt mov jnp xchg inc xor ljmp xor enter lea enter dec enter mov xlat pop add lret add mov aaa int3 icebp lcall jl cmp mov (bad) xchg add jle inc sbb push test mov mov xor inc cmp jns and test dec lret stos or mov lcall mov sbbb (bad) push popa int mov or sbb pushf nop cmpsb and pop in mov leave js xchg rcr sub pop pop nop mov jns rcrl mov shlb xor xchg cmp daa inc jl xor fsubrs mov sahf xor xor mov dec mov rorb lahf test sbb popf insb lcall sub iret and lea and fldenv dec pusha cmpsb lret jp dec scas lret test loopne (bad) xlat test jmp inc cmp adcb lds mov std (bad) mov outsl adc or xchg sbb sbb fistpll push (bad) mov lods mov or rcrb pushf subb sub or add jbe sbb mov xchg stc hlt movsb pop pusha sub xor mov jo insb cmp sub (bad) loopne nop mov inc adc loopne sarb incl (bad) in shrl jge inc mov lock bound add lds push fwait inc nop shlb sub push sub and cwtl inc mov sub adc je add xchg je sub sub inc jns call xor inc data16 push pop pop mov push jnp loop xchg js je pop xchg les cltd andb mov aam in and mov pop xchg or add xor push out sub sbbb test (bad) jmp into mov push fsubrl mov lods imul or add cld push pop es sti adc hlt adc (bad) (bad) dec enter rorb aam mov std pop cmp fdivrl inc sub hlt sbbb in adc rorl jne adc lods push adc sub call adc dec scas cmp (bad) sbb add stos cmp and pop ror pop inc mov ljmp xchg or xor inc jle adc fsubrs in in repnz mov and enter loopne jecxz mov xchg nop push pop mov insb adc and cmp dec sub mov in movsb or sbb and pop xor sbb lea rclb pop pop aas or mov vcvtsd2si cltd mov daa dec test fdiv xor xor adcb pop iret xchg add jge lds mov loopne out (bad) loopne sub and mov xor daa jae fcoml jb les mov dec push rorb mov pusha sarb mov loopne or (bad) mov or dec or ret in nop pop roll popf lret push push (bad) aas adc pusha loopne xchg add sbb std sub pop pushf add nop sub pop aas add sbb test insl mov sub ss pop in mov push jno loopne add push std xor mov insl dec out loopne and mov jmp lods inc add loope or rcll jle shl je adc dec fcmove mov mov cmp push push fsubl push and xchg les cwtl and adcb cmpl add pop add mov jp inc jmp sbb push clc js xor and mov fsubrl les rorb sub jns xchg std dec mov cmp jl mov xor and mov call mov mov push mov or popa lret add loopne in rorl aam test xchg sbb sbb es aaa adc mov lahf and xor xchg cltd or rolb adc push cmp add mov cmp adc pop fwait call insl mov je jl add sahf cs or lds gs movb adc sbb and add fs mov add popf dec lea dec xchg ja hlt sbb xor test lds lock pop and push mov jno push cmp xchg pop clc xchg movsb fsubs add mov mov xor add sbbl add nop pop add scas mov flds (bad) fs sub scas add test add shll sbb daa mov add inc int3 cli mov loop mov add adc xchg int3 mov arpl roll mov es jge clc into add jmp cltd push mov call inc sub jl sub inc xchg adc aam rcrl pusha push les pop mov and test jnp in sub cmp xchg push xor dec mov jne mov je dec sub cmp das adc fs add mov in push or sub sub inc adcl dec sub imul inc add test pop xor xor (bad) adc lock loopne xchg icebp jo lea jnp dec or inc test jne and inc xchg add lahf (bad) xor mov xor sbb adc (bad) sub loopne xchg add jno pop shll push mov pushw adc pop subb adc (bad) idiv add ja fmuls mov sbb rcll cltd add inc sbb sbb loopne loope flds jno pop fwait and sbb pop cmpsl adc js mov add stos out mov pop bound vpshufd add dec mov inc or sbb loopne pop daa (bad) stos mov clc add xchg mov push cmp xor popa and lock xchg addb std xor lea mov and inc cmp mov push and xor inc movsl push decb (bad) mov mov dec xchg addl movsl and imul push push nop push movsl movsb pop and cmp or cwtl clc xchg or pop mov inc cmc add popa mov mov (bad) clc xchg sub mov mov roll adc icebp lret add sbb mov jbe add mov das add pop xchg xor sar cmp test nop repnz shrb and ja mov cwtl fild iret ficompl loop addb adcb and xor enter fmull (bad) sar dec cld cmp add push cs insb rclb (bad) jae push and std pop push add adc bound call (bad) call xor (bad) dec test jl sbbl fdivrl clc pop pop sbb hlt popa repnz dec (bad) xchg mov lds inc (bad) pop push cmp jge test ja cmp and outsb sub pop add rcll pop cltd je pop cmp in cmp lock icebp pop inc mov popa xor call jmp add movsl adc cld adc notb and jp cwtl sbb inc pop inc jmp adc mov jg cmp out add mov (bad) inc jl cmp jo rorb nop pushf (bad) adc adcb jnp loop lods cmp adcl lea or jno cmpsb nop movsb mulb aam xor lock or sub add int mov (bad) (bad) xor inc mov icebp loope aam cmp mov add les add mov fs add dec (bad) mov addb mov sbb xchg ja mov and pusha or sbbl (bad) getsec aad push rol int3 and sti movsl dec nop push pushf je and sub adcb dec pop rcrb lods imul fdiv bound add addl hlt or in mov mov xor in sub jmp int3 jl bnd loop inc test jbe xchg dec or mov pusha add sbb jmp sbb mov aad and jle adcb sub loopne fnop jnp dec sub sub or pusha xchg add cmp rcll fidiv stos (bad) repnz stos repz (bad) xor xor test imul push int add cmpsl add add xchg out ret lea mov cmc fldl jne sub test add jne xchg les (bad) xchg lzcnt sbb cmpsl or fwait jb and push adc ret add int lret adc inc out sbb repnz pop mov enter mov dec out dec lea lahf insb add lods insb pop pop roll sub popa inc lcall aam cmp (bad) insb (bad) scas jecxz add faddl (bad) gs stc rorb inc sbb push dec lea dec fcmovnbe or in out xchg not dec push mov sub lea adcb jb addr16 cwtl enter or and lods lods aam adc pop je fadd pop dec mov fadd fldenv mov imul push mov fmuls and xabort jb sub data16 jmp add sub movsb popa jecxz popa cmpsl dec lods icebp cmc xchg loop mov (bad) nop inc inc cs push sbb adc test cmp dec jns pop clc xorl jns cmp jns jmp pop and movsb add dec mov mov inc lret cli pop push js jge or loopne jo and rorl sbb pop inc pop popa push in jmp push mov dec int or (bad) xor data16 add or push or jge jb push in add jno jb test rorb push in cmp pop arpl clc int3 aaa sub mov cmp mov lods add mov ja lods stos (bad) enter sbb loope ljmp jl cmpsl imul sub dec pop popa add call lds mov (bad) push add push sar sbb sub sbb lds icebp cwtl addl and fldcw je sbb daa (bad) test lcall popa dec pusha pop mov andl and in pusha in inc rolb add and nop mov add mov sub inc test testb pop sarb add sbb aam (bad) add orl xor icebp adc ret into adc jecxz insl add daa ret fs mov inc and sbb outsb push aam add test mov test push xchg lods inc push (bad) mov dec fstps add mov adc fwait sub js out stos xchg cwtl cwtl orb pushf leave shll add lods push pop and jle in dec add inc ret stos in andb add fidivr imul ret inc js (bad) roll mov jl add jl jecxz in mov sbb test mov mov loopne or int mov cld (bad) lock jne outsb mov and (bad) hlt pop in add add or js xchg sbb addr16 jbe test nop and lods rclb jb inc loope jne and dec xor mov adc arpl fmuls dec xchg xor inc lods cmp jge cld jmp xchg pop mov add mov sbb jle cs (bad) mov push lea addb inc lahf jae in enter mov sub cmp bound std and into pop mov adcl jo je add rcl jo mov xor cs dec mov xor push sbb mov scas xchg add cmp sub insl les aam sbb ss aam or lret into mov rorb and (bad) rorb xor (bad) sti jne inc pop js xor jp jne sub aam pusha cmpsl scas inc sub je sbb fdivl mov in or in adc fcomps mov (bad) aad mov inc mov imul icebp aaa loop jb div add add inc fpatan ss xlat add insl add lock loopne xchg jge ret pop faddl ja xor clc push cli cld cmp adc pop adc shr add xor add jmp out jle inc adc shrl xlat inc mov pop pop sub or dec jmp mov popa or in not cmp jl push out cld xor std inc inc xor add stos jno xor lcall sti popa sub cmp imul mov mov add cmp out rclb ja add cmp popf pop mov inc add dec cmp mov loop mov mov jb cmp das sub rcrb sbb adc popa cld jge fwait jno and add into xchg jge (bad) mov or ja lock repz jmp inc push sub outsb jne enter push fdivl dec mov sti adc or sbb std pop add (bad) push cld jle sbb cmp push sbb xlat imulb cmp add cmc adc aas add add mov enter or jae and sub or and or loope out fsts test inc stos repz xchg push nop fildll or jne ljmp inc fcmovb loop,pt cwtl xchg jae test call imul sbb rcrl andb jno mov in push ror mov inc lock push inc xor lock rorl ds and mov mov mov mov mov mov subl adc adc loope sub xor add push push icebp jle inc aam cmpl gs mov push add mov push add or insb nop or adc or ljmp sbb add inc jge arpl or dec fs insb clc movsb cmp jbe xchg or out insb loopne inc sub pop loopne add mov enter mov adc jbe clc insb sub pusha sub js add int or mov insb out mov ja mov sbb out rcr call stos add cmp jbe loopne mov adcl dec movsb or push inc xchg xchg clc and imul cltd xor jge add sub cmpsb jae mov inc sub dec inc mov inc adc lcall rcrl jns dec (bad) adc insb aas test in icebp daa inc and cld xor fdivs js and xor lods xchg add movsb or push jp xorb xchg push int aam jo sub cli in pusha sbb sub pop (bad) movsb nop adc inc mov or fdivrs cwtl xor test mov jno pcmpeqb aad and movsb orl mov ret mov adcb (bad) in adc xchg cwtl inc fs aad loopne xor xor bound add mov jne xor dec out fistl dec or jg mov and add add lods rep loopne mov adc popa xchg sub xchg dec dec mov fwait (bad) xor jle ja mov jne add push ja clc jecxz movsb rolb push jnp xchg int3 xchg out stos les nop sti add adc xor dec maxps adc xchg or cwtl mov outsl adc xchg xor xlat sbb or clc sub lods es or inc jo xor fisttp bswap add and fidivl or mov or xchg popa add es xchg push (bad) stos (bad) in dec or sbb mov fsubs or xchg push (bad) (bad) xor or push jp pop movsb mov les imul pop pop (bad) out xor dec test jge insb pusha shrl mov outsb ret dec xorb mov push (bad) dec xchg and add or mov ds mov daa fist popa dec and lahf dec in and lahf adcb and out js and cld lds lahf or xchg jle pop inc sbb cmpsb mov mov pop decb mul pop sbb add into jmp mov add testl xlat fmull inc push test popa (bad) clc inc es lods test insl stc jbe pop sbb fimul jmp xor int push jo push xchg cmpsb adc test cmp in sub mov jl pop test je xchg shrb mov push mov jae lock popf lret hlt xchg or mov mov fmul insb mov stos mov cmp dec lret cwtl adc subl popa shll loopne into dec jae adc and pop mov xchg clc jnp adc cs xor adc xchg mov or stc push roll arpl sub add mov mov mov jge and mov icebp hlt and dec push xchg jno push jmp aad xchg sbb nop pop dec inc and sub stos fcoms push frstor sbb pop fadd repz (bad) mov sub in or adcl mov call mov jns pop jmp sub mov icebp fcoms insb cltd pop cmp testl in (bad) sub stos mov or xor and adc or jle inc mov xchg mov and or nop push or (bad) test cld sub add das dec lock nop je std cmp int loope dec adc xchg lods fdivrs orl les jmp and xor arpl add int3 test aas sbb and xchg je nop add sti push jge adc xchg xor cmpsb decl push and push and in inc test inc stc cmp sti push mov loopne adc push sub loopne sbb int3 and es enter and and enter (bad) jne adcb adc daa inc jno inc lods jge pushf (bad) mov arpl adc data16 insb mov hlt dec inc mov mov es add cmp les (bad) mov jb mov mov popa pop or mov fxch insb pop repz add or or jl cmp add sti mov insb sbb jmp pop ja adc jl dec jmp test int mov sbb pop or and add adc hlt out shlb lcall test ret jne pop fsubrl icebp adc enter rorb mov mov mov jnp ds and dec mov push adc je xor add test inc call dec lds sbb outsl sub adc test lcall xor (bad) mov sbb js sub dec xchg or push test adc nop mov add sub lods dec mov and xchg xchg mov xchg push enter add xchg inc js sbb dec pop (bad) jnp jmp xlat push mov dec push and inc mov pushf sub dec cmpsl xor fnop and and sbb loope cmp pop adc or cs or jp sar jge add pusha (bad) je dec hlt push adc or cmpsl mov fsubs adc in xchg or stos add (bad) mov and jo inc out or mov movsb ljmp fsubr insb dec sbb les insl cmp int je and cmp sub clc jmp push std adc cmp das xor add add pusha push lret push repz imul push std cwtl sbb jecxz sarl (bad) jbe jo dec call xor mov inc shlb lahf add (bad) fdivrp dec shll push or hlt or shrl enter test fwait cld js add mov lahf lock outsl add in push mov icebp xchg add mov in mov pusha in mov loope xchg fcomi cld lret add les and clc subl inc test adc je add fisubl mov leave push push sbb loopne mov outsl bound or cmp scas jns ss mov cmp push data16 jne pop cmp xor clc lods cmp and mov push sub xchg push lods and cwtl sub (bad) nop add pop rorl xor xor mov push lret movsb cmp dec add jae dec jp flds and mov nop sbb pop fsubl xor mov and xchg nop insb (bad) or sub test adc adc repnz cmp pusha sub cmp call and and jp sub or out sbb loop and pop shrb pushf xor pusha jae mov jecxz lahf enter outsl xchg mov mov cwtl jne xchg mov and or jne push sbb mov add cmp adc jecxz (bad) jg push and lcall cmp mov fidiv pusha loopne pop leave dec adc mov in dec aam or into add push adc sbb pop jae cmpsb pop fucompp cmp inc mov or es cmp aaa inc add shl call push mov fimull rolb sbb and mov mov inc repnz lods inc int add das fmuls daa sub sti lock push jb mov cmp mov dec sub cmp cs (bad) movsb push lahf lock aad dec dec add inc nop fnstenv hlt push lahf clc push hlt mov xor mov daa out add loopne pop mov les jns mov es mov fs mov sahf push (bad) jae or cmp dec xchg inc test inc add in dec add dec sahf hlt inc push push outsl adc shll jnp mov in push hlt hlt enter in inc inc or test cmp rorb xchg inc push and and xor (bad) imul jmp push xor int3 and jne mov push test out xor lock pop sbb mov repnz popf sbb lea call aam scas int xchg cld test mov in adc enter std xchg or aaa inc not js pop sbb mov movsb test (bad) mov adc (bad) mov add mov cmp mov mov (bad) lret (bad) jo dec sub cmpsb add sbb int3 and xor xor aam and sub adc sbb sub dec adc adc xchg sbbb dec adc dec jo pop (bad) sub in lret enter lods and xchg inc xor jb add pop inc sub sub loopne clc adc orl fild mov fstl cmp (bad) sub fimull and imul ljmp inc ret rcll lret xor mov ret and mov adc enter pushf xchg and pop aam xor pop es sbb fiadd shll pop stos inc mov stos xchg lock xchg int3 clc mov mov decb cwtl push mov inc cmc jnp cmp data16 and js cwtl pop dec or (bad) sub dec ds aas fldt (bad) mov imul mov or jns in add cwtl movsb pop mov leave mov mov daa add out mov pusha pop add add cmp sub fstl or or mov lea push in cmp mov aas or cmpsl add push in mov or mov inc push sub mov lds cli loop jl and push xchg sbb mov sub and lds js add xor in icebp movsb push add adc cmp or push mov add adc add mov js and jo,pt pop test lahf mov pop cltd repnz push test rol push mov add in stos clc stc (bad) or inc loopne adc pusha cli adc lea or mov lds sub jg lock loopne xor cmovge add mov das in mov add imul cmp (bad) mov lock sub xchg inc cwtl fsubs (bad) mov cld mov out data16 jb outsb rclb out adc js adcb sub or fiaddl jne dec and adc or or jge lahf inc jo das and mov loop fiaddl cmc dec lea incb outsb push fwait sbb lret (bad) xor dec sub sti imul pop enter insb push mov int3 orl test pop add clc test js out dec and pop imul dec sbb jecxz jno and xchg xchg mov sbb repz or shrb add aam sbb fadds push xor popf (bad) mov sbb rorb movaps jns jecxz pop or or sub les push lcall fadds in fcomps insb imul ja xor je push jmp cmp (bad) mov jbe pop cwtl loopne and adc mov jbe nop inc add mov ret pusha sbb popa (bad) jl jb sub dec lods jnp pop jge jae jmp inc notb jg pusha jmp jle inc mov xchg fnsave js ja pop ds clc pop call sub jns sub hlt pop cmpsl dec xchg addb ljmp loope inc sub jmp adc subb aad jg sub and sub stc add (bad) pop aam das ds popa inc add out pop adc js (bad) jmp sub loopne aad cli jge dec or push jns adc inc jo adc mov add xchg (bad) mov jg nop insb dec push test mov stos stos adc or mov push mov js cltd pusha leave and in xchg xor dec imul incb sbb movl jmp xlat add inc cmpsb ss push test lahf pop cmp sti aas (bad) sbb adc sbb add pushf jg lods movsb cmpsb and pop dec scas and adc sbb mov daa mov push test and iret mov lods insl cli mov and cmp lcall inc lds jo jb add iret testl gs ret cltd mov fcoms mov and or (bad) mov inc rolb or mov jecxz cmp in ljmp insb xor repnz dec sub sbb ljmp mov mov ja xchg push add repz nop push push pop or call or stos sub testl or pusha inc pushf pusha stos cmc fstp add rorl shr sbb push sbbl lds mov sbb mov mov pop pop lret xchg jb sbb add mov xchg sub add jp test mov sbb bound call push in inc xchg rcrl pop cld lock add insb sbb (bad) lret aas les mov lcall push in cld sub pushf psllw lods pop mov (bad) xchg or icebp push dec out mov loope repnz testb lret adc adc leave xor out sbb pop and or fwait dec and lods loopne mov or add and xor in fildll xchg (bad) lcall repz xor stos adc ljmp xchg jmp xor lcall sub hlt xor fmuls pusha in aam cs mov jno inc or cmpsl mov add mov xchg or fldenv mov pop inc adcl push cmp fadds lret loopne push xchg shrb out jecxz adc mov push dec push cmp fmuls pop mov pop or shl out fldenv pop mov sbb pop test mov das rcl les test mov jae jne fscale fmull cmp subl pop adc inc xor icebp (bad) dec or arpl or inc adc cmp rclb pop push mov leave outsl add or ss in idivb sbb lcall lock shlb xchg push add cmpb fiadd or mov ds push int3 ljmp test mov pop mov sub dec (bad) ljmp fstps cwtl fldl xor leave pop lret sub push sbb mov pop pop dec fwait push or mov fdivl mov or and mov fimull add xchg add fwait into push test iret push push pusha mov pop shlb or in xor iret jns add movsb rolb cmpsl mov mov adc and mov add outsb lock (bad) pusha push cmp xchg push repz sub adc add cmp fmuls mov or xor repz js fucom mov mov arpl orl lock add dec pusha ficoml cmp in (bad) mov add imul add rcrb dec mov and mov pop adc fnstcw add xchg jns jae outsb xchg int3 adc loope mov add out sahf and out xor cld ret adc mov subb loop add sbb fldt notb mov aas cmp pop sahf enter loop push (bad) jb stc scas nop cwtl and jne inc mov jmp jge or (bad) xor icebp pop jnp add mov sub jbe jb lcall cmp push cmpsb incb in addl mov (bad) pop pop jecxz mov dec mov test inc sbb xchg push roll dec xor sbb js inc push mov xor dec push lret (bad) aas shlb arpl sbb dec or fildll or push jb out mov insl divl add or je xor out xchg popa cmp cmpl stc fnstsw pop (bad) test mov test adc xor and push push mov shlb pusha sti orl jmp leave inc sbb repnz add push xchg dec mov cmp cmpsb pop push xchg mov loop js aaa lcall andb cwtl mov push es call sub push cmp adc adc add mov inc out pop push cmp mov xchg orb dec mov and adc push test adc in mov dec out frstor adc jmp add js add rcrl in out push neg fwait in push test aam pop dec or movsb adc mov fnstcw mov int3 sub jl jns pop sub aad add xchg cld clc das int3 jno jbe pop mov je repz adc out cmpsb aam jp es and sub xchg adc lock shll shll movsb add mov dec fimull add cli test dec add rcrb test pop pushf xchg (bad) fildl subb ds pop add nop mov bound enter sti xchg je in ja dec push push loope jbe inc inc cmp adc xor pop jo sbb loopne dec ret mov sbb je out pop mov pushf and in enter or or jno fcoml sbb jbe inc push fstpl xchg pop add in add dec pop cmp es add in lret push inc dec add ret int3 fiadd mov sub test pushf (bad) and aad and loop mov dec xlat adc pop loope shlb push loopne cpuid icebp inc pop pop in xchg scas jle movsb xor arpl dec xchg mov mov xor add loop sub rclb (bad) or fsubs repz adc fldcw lods subb or psadbw xchg dec inc out or shr loopne push sub mov enter lods adc leave push cmp clc jmp inc mov fsubs dec sbb mov das pop adcb movsl add pushf fmull inc outsl loopne cmp test (bad) jne data16 out rclb mov pop fsts mov insl and sub call mov jmp inc das movsl or addb add cs xchg ret mov sub rcr dec inc mov pop popa cs mov xchg add data16 sahf xchg or lcall lea pushf xor (bad) jno push mov dec xchg enter dec dec dec push xchg adc out push sbb mov inc push rdtsc in dec push fnsave or and or std lock ret fwait cmp xchg aam pushf mov xor inc mov xchg sbb sbb pushf push inc or out popa stos mov in adc fadd fisttpll cmp xor and out or cmp or pop and dec mov jge add xchg adc cmp nop inc xor repz lods pop fldcw in pushf jo dec test out adcl push jbe lods add mov mov push add or pushf jl mov adc inc ficom sarl cs mov inc jo nop add sbb shr and sub aam sub je jae xor mov jp popf enter in and cmp orl lret and aaa jne pop jns push sbb dec out mov xor fild enter out xor pushf mov and into adc xor test scas scas dec add pop pop je sub out dec ficom in add adc fs dec jo push mov jo adc clc adc and mov cmp add lahf icebp loopne cmp inc insb dec add mov or mov icebp push lcall cmpsl add jecxz cwtl imul add jno add push sbb (bad) pop sarb mov jno mov adc fmuls pusha loope clc pop ret (bad) adc adc in mov xor out loop mov add cmp popa lret test fstl test dec call mov enter out inc pop mov cmc xchg test pop rorl pop les pop sbb sub test ret fdivl push test shl xor iret push mov or adc (bad) dec lods fdivrl test ret add jg or or add mov sbb scas sbb popa jecxz enter ds push mov xor xchg in mov dec imul in push cmpsb (bad) ja icebp orb subb push fidivl and mov imul sbb out inc pop pop sbb xlat add adc outsl sub inc stos lock aaa xor lods adcb push add sarl add mov sub pushf or inc adcb std adc add inc add out fisttpll (bad) int pusha sahf xor sbb sub mov rclb aad sarb call push push push sbb add add lock push or sbb out dec push rorb inc mov addl les push and stos sbb mov jl pop imul aam fs nop (bad) int dec mov mov and add dec pop aaa out stc add push jp push test or cmp inc int and xor add fsubrl add (bad) jno hlt mov sub int inc and adc inc add enter test fldcw int3 add lds cmp mov dec xor movl hlt test or adc jge mov mov pop pop push jl and out popf adc inc add ds pusha xor rorb es dec inc mov push xor pusha xor les popa mov jmp add adc pop mov mov push add and add xor inc popf or add insb fbstp in leave popaw mov jecxz mov or pushf xor xor dec add jge lock xchg in les divb adc sbb add xor out jle cmp add and mov mov movsb popa inc lcall sbb nop loopne daa lods or xchg mov fs mov adc fdivl pop repnz out fidiv sbb (bad) leave cmc (bad) or arpl pusha sub repnz daa and cmc jne jmp enter rcll xor jmp (bad) sub in pop popf pushw push aam jmp xchg aaa cmp pusha cmp adc add scas sub pop dec jne les and mov sub mov insb sti dec pop je decb shlb inc adc dec cmp loopne mov mov cmc rorl (bad) mov mov adc sub hlt cltd push aas mov mov movsl and cmc rolb inc popf add or lods xor cld xor jne jl outsb popw fcomps add mov mov and or in mov in scas add popf pop aad xor push es hlt loopne xor mov inc adc cmp push or jnp mov mov and sub inc out sub rolb fldenv xor dec insb jecxz or pusha lock pop inc cmp sbb pop xchg add jno add scas xchg sbb cmp pop pop push leave push ret inc (bad) or jp push xorl push (bad) cmp inc pop fisub pop ds repnz or in hlt loope iret xor les mov out cmp ja es imul sahf aaa mov or daa xrelease sub bound xchg outsl dec jg dec jmp add lcall ror and rol or stc jg fadds cmc outsb shrb adc popa movsl ds ret or (bad) adc push sbb cmpsb push and jne dec xor or inc xchg aas scas jne dec xchg mov out dec adc fdivrl sbb add in xchg inc pop stos pop and inc add push dec (bad) enter movsb movsb insb shlb cltd aam cwtl adc inc xor sbb lahf enter rorl add adc mov jmp push adc add dec jno mov rcrl test sahf les inc or imul fadds jge (bad) or inc loope test xchg mov xchg insb lock dec and shr add cmp clc dec data16 push cltd cmc sub push cmp jge clc cmp loopne mov add pop push divl jb (bad) cmc adc outsl push sti ret outsb sbb je mov sahf fildl xchg sbbl dec subb mov mov dec ret mul push mov mov add push lea add and notl movsl jecxz pop stos adcl adc xchg pushf and and test xchg xor mov int dec pop sbb js cmp out lea pusha enter or shlb ds cmp icebp sub pusha loop push or aad mov cmp loopne push add out in scas add out dec or xor jbe test pop xor fisttp add adc pop sahf imul xor push outsb ret notl hlt mov rcrb test sbb xchg enter or pushf shlb push and loope (bad) data16 test stos nop sub cwtl xchg stos arpl into loope pop loopne aaa sbb lock inc push and ror xchg adc rcr clc mov adc xor (bad) sub or dec adc das out pop push push enter ds adc repz or aam pop not jecxz jecxz and mov (bad) (bad) in pop (bad) lods xchg xor add ret outsl add inc pop in mov sbb or pop iret push push jmp or push cmp ds jbe push data16 aam inc movsb loopne dec aas dec into add movsb mov addr16 mov test sbb movsl cwtl inc or data16 pop mov sbb movq (bad) loope jbe pushf sahf fidivr sub in add mov shrl pop adc push pop sbb mov loope std aad mov push fnstenv pop xchg sbb sbb clc add int enter or test jge or and fwait outsl int3 and add mov bnd mov mov add idiv mov dec push cmp add jnp jl jbe xchg push ret ror inc je inc lea dec xor or icebp add sbb insb xchg pop push lret mov and add and cmp shr movsb push add xor jns loop int3 ret pop jo push into test push pop ds jp push fmuls nop lret cmp test mov xor inc push cmp ret inc jle daa addr16 xor in or mov in add and aad xor xchg lcall dec xor jb xchg cs movsb inc dec inc jne and mov cmp or push std stc add cwtl mov loopne mov js mov mov pop inc xchg inc sub imul mov mov sub inc xchg xchg mov not sti jg jmp hlt mov or add push xchg xor js mov adc xchg dec std cmp addr16 jae stos xor test mov xchg push and test dec or mov loopne xchg shll adc scas rcrl icebp mov or in aad mov jne mov (bad) fsubrl out mov xor push pop popa pushf pop cmp sub push fildll jno das pop mov inc js and ds fisttp and mov push push mov xchg roll push pop and rorb push and std add mov sti mov add jns cld jnp adc cld inc mov or cmp add jnp pop ljmp daa arpl scas pusha test mov jae adc xor sub mov gs or adc rcl ret test jecxz add in mov lock mov adc inc mov sub and or and pop jp mov imul mov jl (bad) shr fs into add popf sbb fldenv or add js adc or (bad) jmp out pop (bad) cmp mov fbld and sarb sub outsb add inc js mov hlt or addb pop add cmp ret add xor rclb (bad) hlt test adc dec xchg xlat push andl test cmp sbb mov add lea bound xor mov fstps out in push das xorb les mov subb push cmpsl mov pop push (bad) testl jmp jbe into movsb push loope pop adc out xor ljmp xchg xchg push cmp jns test add insb adc cltd mov js test (bad) xchg (bad) adc mov sbb cmp adc xor xor pop daa jl imul idivl push and lods cmp je loop (bad) stc pushf or xchg push sbb aam or sbb inc nop test or lods std push cmp and xor push lock xchg sub (bad) dec loop into add push iret shrb xchg lcall pop mov dec fisttpl push pushf cwtl fadds or test (bad) lock sbbb sti and lret arpl mov mov dec xchg xchg int3 pop or negl mov nop add push mov xor int xchg add sbbb push cmp sbb sub int3 jge sarb testl shrl mov and xchg mov mov pop mov jge popf add dec lods add outsl lock js mov add pop adc mov es es outsb pop mov clc adc lahf xlat mov (bad) mov add cltd pushf mov dec fwait outsl aam adc push jne pop adc push mov or ret scas sbb xor mov dec mov or mov call add loop inc pusha pop shll pusha aaa xor jle js cmp bound push push dec pushf cmc mov xchg and (bad) repnz insb xlat mov xchg push push mov rcrl fdiv jecxz adc es cwtl adc (bad) xor sbb (bad) fsubs fdivl icebp sarl lret jl add out inc add loopne cli mov add adc enter scas xchg outsb sbb mov push xor fcoml aad addb jno fiaddl mov add push add pop cmp fwait test lods add dec fs push loopne cmp pushf pushf repnz sub fcoml add cmpsl xlat xchg push jecxz push clc inc pop jl cli cltd push dec add pop xor adc data16 push adc ljmp (bad) or pop fcomi subl mov xchg add cmp pop jecxz sbb and ret mov fnstcw clc push dec push arpl call sub xor inc jmp (bad) int pop sbb daa adcl hlt iret popa lcall mov add pop add movsl push rclb fmul or scas adc jecxz cwtl sbb loope and sub bound aad (bad) mov or mulb add hlt inc pop push loopne jp mov fisub cmp mulb add icebp add aam in push dec pop bound adc jns cld and ja call (bad) cmp cmp cwtd add inc stc ss pop mov mov call fs insb js push fiadd xchg mov dec pop cld leave jecxz pop adc adc sbb je mov (bad) add jecxz xchg sbb lret ja shrb pop pop or cmp stos mov inc test out mov mov enter sub push and sub cld jle sar ja sbbb push push sbbl xor inc mov push in fildl and sarb mov lea stc pop (bad) adc sbb dec cmp sbb sbb sahf push and cmp push das cwtl inc add cmp sub outsb sbb data16 mov xor sbb mov repnz mov and xchg add lods jne fiadd clc push jo idivl int3 add inc es jl add sbb mov jns mov cltd test aas (bad) or push cltd fldenv icebp and insb js cli sub test push mov sub sub mov jae ss sti inc xor adc add xlat push mov mov aam jo fmul into xchg sbb call adc shlb outsl fiadd js lock xchg push sub add push decb mov int mov sbb mov pop mov pusha jmp sub push fistpl loop shlb or mov (bad) leave scas rcr ret dec adc bound fxam fistp xor inc pop add mov xchg add clc cmp add js sub fisttpll (bad) sbb and sar xor mov pushf gs lea and adc fdivs addr16 inc hlt push pushf shrb xchg std popa imul add test ljmp cmp imul mov adc or enter jl adc inc mov cmp jge stos inc mov leave add xlat adc mov movsb fadds sub jnp cmpsl push or cld mov test inc cmp cmp icebp lds mov orl pop (bad) inc lock jns hlt ficomp movsl gs or (bad) mov adc push add adc pop push loop add ljmp daa mov or test cmp or push dec arpl add adc enter or leave out (bad) in xor stos call test or add xor mov stc cmp fcomi mov pop sbb sbb test fwait jbe cmp and add (bad) cmpsb enter insb inc xor imul ret adc inc sbb ret mov movl pop mov sbb cmp mov jb dec lock sahf mov jo arpl inc adc adc or mov and adc dec fild add pop add jecxz sub fadd fs aam push pushfw add add int3 dec mov jo sbb jae cli xor push mov subb add sub pop cs xor lret push pop push std xlat add (bad) jno inc inc in sub cwtl cmc adc mov adc push stc cmpsl add mov iret adc add pop jns xor inc out and ljmp les sbb jle mov (bad) xlat lods xor pop mov sarl imul clc int3 pop popf (bad) mov pop lock je leave mov add les mov imul dec dec pop mov dec loop cmp js add dec push inc cmp jp mov dec daa (bad) or (bad) inc dec or sub ljmp push cwtl fs inc enter add js fcmovnu adc (bad) lock cwtl ret enter in loopne dec out pop popl sub daa inc aam jg jge hlt jne mov or loope xchg pop jecxz sub pop pop adc (bad) cmp push das in inc pushf push sahf cmp sub push loope cmp lods nop and mov and mov or push dec dec add pop mov mov loopne test scas inc adc adc fdivl add mov fs dec xchg call enter outsb clc (bad) or sub fdivr push (bad) inc mov jl je ljmp push insb inc add sbb out xor or add sbb mov inc lret adc mov cld cmp test in push dec xchg jbe call jge add lret test add and mov shrb jmp adc mov pop mov mov xor aas add insb and mov inc cli ret std xor mov js and mov pop mov (bad) xor loopne xor and cs add nop mov inc push andl or mov cmp test pop cmp lds call sti rolb xor (bad) push sub push test mov nop inc decb dec add dec inc lds add inc pop xor mov shr scas push enter clc and pop xor fmull call mov fxch xor je pop pop scas xchg aad push dec ret arpl adc pop (bad) or pushf loopne push lock lods or xchg pop adc (bad) sub imul test mov xchg movsb mov add jo test adc insl or fsubr dec adc loopne insb xor xor push or lods aaa cmp sub pushf add push fs dec pop (bad) mov out push jno leave es rorb fwait movsb scas bound je or hlt and dec mov lock mov sub push inc mov xchg test daa fildl dec rep pop sbb lea lock cmp mov lret (bad) xor in pop inc or aam mov and test push mov inc push xchg (bad) ja sbb cmpsb and in inc test repnz or push jmpw pop pop lcall stos int3 mov add gs loop (bad) or xchg cs jmp mov mov sbb push addr16 mov add and mov jl or jl push mov mov sub xlat and sub mov pop addb xor mov add or dec nop test mov pop call fisub or adc or aam dec andl sarb cmp add jmp movsl shrb fdivrs jae jg xor inc insl repz mov and add (bad) jl repz (bad) mov fildl (bad) and movsb sbb inc movsl pop hlt shll inc dec pusha pop repnz stc nop push jno nop add or pop add and (bad) enter and mov movsl fidivl fs or hlt sbb lock das test push les loop rcll mov aam and xlat add pop arpl fwait dec mov mov loopne dec dec hlt in pop adc out jo pusha mov enter cwtl sbbb aaa js push nop mov add pop pop adc pop xor popf orl les jo add nop sbb pop mov jl sbb or in xor push inc cmp lods in inc mov push out and ss jbe sub insb dec pop adc push clc mov adc xor add xor ret inc push mov dec add aam adc push sub or inc mov pop sti cld fdivrl les js out mov cmp xor cmp enter aam inc and adc jb xor js dec xor dec pop mov mov arpl (bad) cmp xchg rclb fistpl mov mov orb xor lock xchg add cmp js pop ss out push ret jnp pushf cli (bad) fsubrs loopne mov js sub nop pop mov nop fs in int3 (bad) mov add mov pop in fbld push popa cmc fiaddl testb fcoms mov shrb mov es mov or insl or mov sbb or xor je cmpsl adc jae rolb rcrl enter outsb mov pushf xor fs dec dec xor icebp jo pand lahf add stos ret mov and pop dec jbe dec sub or add fcompl xlat cs and mov push xchg test jne shl addr16 jae jae es nop add sub mov mov lock popf dec and data16 xchg mov cwtl mov repz ret rcrb fdivl push xor inc mov js add in rol cltd leave add mov xor and mov (bad) lock in mov arpl pop or pop push loope lret sub bound adc sub rcrl or sbb or sbb fucomp shrb cltd clc sub xchg push ljmp pop dec sub cs hlt cmp imul lods movsb hlt test mov repz xor dec push dec call mov lock xchg add mov clc lods add jb cli cmp repz sahf rolb sbb and aam cmpsb xor dec loopne sbb les mov in js mov clc int3 js xchg cld add jae aam xchg and xor jp jl cmp push add push or pop ljmp mov cwtl or cmp insb pop mov sub add inc mov add (bad) xchg cmp sbb fimul sub insb roll cwtl mov cmp mov xchg or fs mov jl movsb push (bad) or and pop gs decb cmp out mov movsb inc daa js add pop dec jb pusha test hlt dec inc add add add shrl jl and (bad) push or lea pushf add out inc jo bound lods fldcw rcrb xor xchg push add jno xchg sub lock shrb movsb push mov mov xchg js xchg xor mov sub bound cmp call push add mov xor sbb sub cld inc xchg lahf dec jbe in pop cltd push repz sbb or or cmp mov sbb das in js movsb jp nop enter or mov lock lcall and add pop fimull or mov add (bad) sti sub push out add fldcw aam inc cmp (bad) subl cwtl cld mov add push add sarb xchg adc adcb test in enter lock repnz mov add cmp subb test add or lods scas add icebp dec mov rolb jnp je in mov enter jns imul or cmp in add sarb out jno in andl adc and popf and repz mov dec mov mov pop or je enter inc sub sbb xchg add xor mov iret sub rorb sub addl clc mov wrmsr pop jno js fadds rcl ds loope mov popa in cs or mov test dec add movsl adc sbb gs mov push hlt push sub sub out xor push push or lods movb push cwtl jmp outsl arpl mov adc pushf or rcr inc mov inc sbb pop and xor push mov cli pop fs sbb fisttpl dec pop movsb inc popa mov and adc dec das sbb movsb lret xchg lock sub mov leave pop inc lock cmp test negb arpl lret mov adc std mov push xor dec inc add add fsts cwtl add dec clc xchg dec arpl in loopne add push sysret data16 push push rcrb or add sti imul jge cmp pop sub mov sti cmp cs cmp js daa test adc inc sbb pop nop add cmp add inc icebp les add sbb mov adc je mov loopne enter or and inc movsl sbb adc jns mov inc in add or out imul cmp shlb pop mov jbe mov sarb call adc pop jo rcrl push cltd jbe adc add mov push mov ds stc out lahf xchg sbb nop (bad) test mov int lods mov out cmp popf push xor sarb roll push jo pop daa mov add inc jmp mov or or fmuls mov cmovg mov addb and dec clc out mov xchg fisttpll xchg js pop dec enter jge mov push add inc loopne add mov xor push icebp sbbb sub in add mov aas add adc mov sbbl mov mov jb inc insb mov cmp adc mov xor cmc inc data16 sbb add cmp sub rclb btr out lea mov push add divb inc add jmp (bad) out inc mov ja test add add push pop mov xchg mov stos outsb sub push or lahf and call add push cmp fs inc mov sub and mov sbbl adc sub adc rorl dec or sub mov add mov clc pushf fs in mov adc jbe xor add xchg dec push out adc pop into push sbb pop ficoml push sbb or cltd jb or cwtl xchg jnp mov add shrb sub popf movsb add test sub sbb rol lcall jp inc push out test sbb (bad) out push cwtl lods mov add dec out xchg aas and mov fs cmp icebp incl insl loope sbb push rclb insb add pop push rcrl ljmp insl inc adc pusha dec mov add leave mov ret mov je aas mov add inc add add pusha xor outsb cmp add push jbe inc cmp nop push iret xchg stos jns inc inc mov add mov nop mov pushfw add mov fiadd (bad) jg add inc jns bnd add insl out push mov push hlt push mov fiaddl pop inc xchg jb xchg dec mov push mov in inc call jp nop sub je adc ss fs jb mov mov adc js push inc rolb lock jmp subps push and cwtl xchg and sub cld xchg pop ffree cmp push add xchg dec adc xchg call pushf sub adc add mov cwtl loope xor outsl sub lock cli push out out addl mov (bad) mov push aaa int3 xor (bad) mov nop int3 mov test stos xchg (bad) mov and inc adc rcrb into clc xchg jb push mov mov or loopne mov icebp testb inc jge mov add test call jb dec int3 inc xor outsb inc popa cmpb sub or inc ret lahf out mov inc xor mov adc into inc sub add aaa in inc lock dec test leave mov mov push mov pop sbb inc or test insl mov xor (bad) in jp xchg xor dec mov sub sub ret pop cwtl test inc dec xchg xor loope and mov bound add adc sub mov xchg xchg pop mov mov js and je mov dec rorb or inc pop mov cmpxchg add xor int adc cs pop or loopne mov cmpsb cmp movsb sub sub enter adc mov ret sbb mov dec sarb arpl xor lock sub adc mov je add mov ds sub dec test adc xor or mov adc rorb lret mov insb inc dec mov push mov loop mov mov adc dec sbb insb sub or mov test cwtl or and testb lods pop scas in data16 mov je xchg xor in cld and insb inc xchg lret cwtl mov cltd adc mov jl mov xor or push repnz sahf xchg lds xchg hlt and jne adc pusha jbe jno or add int add push cmp xorb insb lock jae test es jnp or cmp pop add les add jnp stos xor cmp cmp (bad) cmp add add aas movsb in cmp xchg mov adc add sub inc cmp add cmp jmp inc sub or cmp lret adc test leave and test (bad) in add or bound xchg or and mov inc xor inc nop cmpb int3 mov add mov les sbb pusha inc mov push test and int mov (bad) nop and add jmp loopne iret mov (bad) imul mov xlat mov leave adcb std mov fs and mov sarb xor pushf add cwtl pavgb rorb neg push add inc push push ljmp inc repnz xor imul inc rcll data16 push sbb inc pop pop push mov in into mov pop cmp pop enter popa mov in cmp xchg push insl pop pop rdmsr in mov mov adc push xchg popl fldcw popf js add inc rolb add jbe jg add xchg mov icebp or pop stos data16 lds sub mov dec clc fsubl call mov mov sbb fsubr mov add out mov ror sub mov pop pause cmp (bad) adc (bad) repnz jae or fwait push ret mov push pop clc (bad) (bad) movsl mov push aam pushf and call out jnp inc jb pop jecxz sbb cwtl mov movsl pop lret call insl inc push idivb subb (bad) outsb jnp add pop les pop jo or pop lret leave call lcall or mov test dec adc sub jge or add dec pop push dec enter mov xorb cmp int3 pop xchg sbb inc push out dec xchg and sub fcomps and in xor lods xor fcomps (bad) in loopne pop dec push inc inc aad pop stos arpl fnstenv movsb bound mov addb pop call add inc sbb push or dec addr16 in adc mov push cmp stos mov and xchg (bad) and movsl mov test pop insb pop cmp test pop add cmp hlt inc fs and push or pop hlt movsb out inc pushf push mov inc cmp add fisttpll mov dec add mov test adc push mov mov in and inc mov movsb mov lods or push adc inc pusha scas and flds push and or repz hlt sbbl faddl add xchg rorl pop int3 std stc add addr16 test inc xchg rcll pop mov sub inc sbb push and arpl xchg sub sub sahf inc cmpsl invd pop adc nop cmp rorb arpl inc out add int3 cmp mov and or mov (bad) xor leave dec inc mov inc mov in push mov xorl int3 xchg push dec pop push adc push in stos insb lret cmc pop inc push add mov or sarb clc push sbb rcrl int3 xor hlt out nop mov cmp rcll push add cvtdq2ps lcall and dec in fs pushf gs sarb fwait or inc (bad) dec daa test movsl xchg test addr16 js popa jp or mov pusha (bad) mov mov and and fldpi in sarb push nop or shlb out and fmuls sahf repz sbb cmp adc cli popa dec inc imulb or mov cmp mov clc jae out inc rclb lock cmpsb stc lahf and push in push ficomp add gs add xchg inc xchg adc xchg rol popa jmp push fcmovb xchg fbstp dec test (bad) mov lods sbb push mov cmpsb test cmp je enter jbe or cmc fmuls jmp and test ror lds mov cmp jmp repz push add mov test loop adc xchg push pop jb add fyl2xp1 sbb pop enter cmp mov stos mov mov and dec enter jl mov fs loopne lock movsb ds inc adc pop in enter stos jmp mov add push mov add adc lods adc arpl nop aam pop std ficomp lds in add add dec leave icebp movb shlb add bnd inc mov add mov shll popf imul pop jne lcall lods inc sub push adc js nop paddq push dec cltd jne add in mov bound mov icebp mov js dec mov sub loop add (bad) in repnz cmc hlt insl mul (bad) nop dec nop aam cld call xor xchg mov in ds imul nop mov lea dec rolb repz fnstsw fisttpl loopnew call dec inc repnz in inc cmpl cmp test inc cld inc (bad) mov js xchg pop cli (bad) push add push pop outsb outsl repnz pusha xchg adc xchg mov sbbb and xor add mov (bad) dec add rolb pop lret fwait xor mov mov movsb adc inc inc xor sti nop cmc pusha inc adc test dec aas lahf add mov mov or push cmovae mov mov bound sub enter ds inc adc lcall adc enter loope (bad) xor jns mov data16 xlat add sub loope int hlt dec negb dec xchg ss and jp or fwait xor nop sub sbb add rolb sti add daa fcoml cs nop or je sbb push js adc push rcrl outsl andl in pop (bad) int decl add pop (bad) in (bad) hlt mov jnp (bad) int3 cld add negb out inc pop sbb sub sub add and adc and mov cwtl mov testb sbb push movaps mov dec mov test jecxz jb and xor mov leave xchg leave loope or sbb adc mov inc mov push inc sbb sbb (bad) jge add cmp nop fdivl push dec lods lods aam cwtl cmp fwait add popa loopne ret sbb faddl lds test mov jne imul icebp mov and addps cs push into test xchg aad fstps mov popa mov jb jmp cmp mov (bad) daa mov (bad) mov les mov push sbb dec xchg pop xchg add inc add pop rorb out loopne fsubs xchg mov sub jnp repnz adc cwtl cmpsl jg mov fstpt jge rorb (bad) adc call rcrl leave pop lea iret notl nop ss xor fcmovne movsl push or bsf inc insb pop adcl sbb fdivrs mov xchg mov push sahf push nop pushf inc out inc je inc insl mov enter push stc (bad) repz inc dec dec test cmp iret mov push dec sub push test insb sbb (bad) (bad) push sub pop mov fsubs dec mov jle mov push adc fidivl pusha shlb fsubs lds or (bad) cmpsl aam lret ret fisttp inc adc mov aad movsl fcoml inc inc push pusha dec js enter jo cmp sub cs push and add push addl mov push dec jo sbb fwait in cmpsb cmp add xor pop dec (bad) sbb push and or ljmp dec movsb bswap add dec stos cs cmp add inc std arpl test push inc add add add movsb mov add add js cmp cmpb dec add dec xor dec cld movl jns xchg ss jecxz xchg add aas jnp in popa shrb insl xchg push ret cmc fxch adc addl add insb dec fmuls mov and call dec cmp inc inc or pop out add dec cmp add ja mov and xchg fnstenv sub sbb inc push js add adc popa lahf loopne add movsl push psllw icebp and dec and subb jno push sub xor test dec add repz push pop jbe cmp mov xchg adc mov inc jle dec test and push cltd insb add cmp cmp pop mov push gs pusha add sub loop fcompl dec (bad) insb pop mov loope jge shr sbb inc push mov mov pop mov negl xchg adc (bad) mov sbb jmp notl (bad) xchg xchg pop sbb out jb add out add dec mov dec test adc xor outsb add and leave inc xor rcll sbb push rcrl and push insb and jl add fist adc cmp test testl loopne arpl in mov inc sbb push inc call add mull sub jp rcl push pop push pop pop clc mov add jns jp cld add mov and adc clc scas push stos push js xor sti cmp in sbb inc add sub inc adc out and fsubl jl cmp mov adc add adc inc adc rolb cwtl in pop sbb mov xchg (bad) xor clc or pop xchg inc and push pop dec xor and mov pushf mov dec subl inc pop cli add jne mov sbb pusha push mov clc arpl or les fscale xchg mov rep adc rol bound mov jo jbe int3 aaa lcall jle jmp icebp adc adc lret lea scas bound ljmp fsts add scas push out icebp lcall push push or aam adc mov and sub push mov unpcklps daa test dec jmp addr16 sub fxtract testb sub adc adc ret or push (bad) jb push add in xchg (bad) imul xor cmp mov push loopne add scas testb and add or das ret or sub fcomip and mov aas sub hlt push js in jg pusha push inc mov or cld pop (bad) inc leave xchg lret and je push imul sub test mov andl lea or and dec adc cmp js fcoms fldl ds mov or loop adc jno adc or add mov mov cwtl xor jns sbb test or pop insb sbb pushf jmp pop outsb ss add mov clc das push (bad) and jns aaa xchg mov nop or dec outsl inc bound adc push (bad) in ss push or je iret adc mov fcoms push movsb adc add xchg mov push jecxz add mov enter cmp clts fneni(8087 xorl inc int3 es add and adc (bad) leave leave inc xorb inc push mov outsb sbb stc add dec inc cmc ljmp sub int adc push movsb pushf or mov sub dec inc dec int mov inc mov sbb push push pusha shrl test pop sub pop (bad) jne add mov add jb or mov fnstcw int mov cli inc aam add (bad) pop fcompl mov fistl test dec add jl mov cmp nop or adc inc es repnz xor dec loope jl addb fisttpl sbb out push notb jb jae pop test push dec add cltd imul je pop adcb jp add outsl mov icebp xor rcrb dec iret cli lock push fdivp add int jle inc pop add xor lods mov mov and je lock dec jge xchg xchg rcrb mov dec adc sbb xchg jmp and jo sub mov jno push movsb and mov mov je inc pop fwait push and sub dec or addr16 push clc add adc mov xchg fnstenv mov adc pop addb pop adc imul pusha sub repz xor bound movsb sbb test fldcw fs xor sbb jmp mov pop xchg push xor mov xor push lahf fnstenv mov (bad) hlt push pusha add movsb sbb rcrb jmp (bad) jnp inc jns cmp cwtl sub jmp in xorl sub sbb loop adc adc pop pop (bad) cmp cmp push test int or xor or stc int and adc cld mov mov mov mov mov and and mov clc hlt loopne sub dec lret scas enter and fiadd (bad) and das jbe mov mov fcompl test into aas and xchg add mov mov and and add aas stc js adc mov faddp adc test aaa mov (bad) cmpsl fsubs (bad) test jge or sbb xor push add pop lahf gs mov dec nop cmpsl dec add xchg pop in sub gs shlb jmp (bad) pop xchg out cmp mov pop aad lods rolb pop sub pop in mov pushf push icebp add xor mov pusha (bad) lock repz aaa sarb push or rcll nop popf pusha fbld add cmp ret mov push jo push cmp test sbb fisttp scas add test insl mov adc push push inc test xor xchg inc push fstpl in inc jg or lock pusha aaa xchg adc xchg mov mov sub xor addb pop cltd lock push sub cld repnz jle add mov pop dec fdiv dec sub outsl stos dec cmpsl les cltd stos inc pop stc or pop cltd push (bad) pop or fidivr cmpsl lcall inc add jmpw test inc mov ljmp xchg sub push dec aad dec into jo xor rclb mov push add lds and fistpll sbb xchg xor rolb push dec mov aam adc pop mov and test xchg nop push scas inc ret xor mov cmp dec pop arpl sub and scas pop test xchg push mov movsb xor js sbb add aaa jle pop nop add xchg movsb sarb in insb add insl mov xchg and jo sub sbb popf das xchg jnp nop (bad) enter les add pop xor fcoml test dec cwtl fadd pop pop stos mov sbb cmp push xchg insb movsl nop test pop mov jg roll stos ret mov inc call mov cmp inc push fbld jo gs or or notl imul or jl cwtl shll dec xor test int3 push imul adc xchg fmull sub lahf inc add inc cmc pusha add stos mov int sub xchg ficom in in and mov dec push sbb xchg loope clc cmp movsb inc movsb xor inc sarb fnstcw adc or int inc mov iret adc mov aam dec pusha and mov inc or inc movsl test and or xor jo or test sub enter mov dec movsl nop cmp add fs xor movntq or lods les and sub pop pop and idivb adc jmp sbb add add inc xor sub sub gs sub aas rcrb add adc sbb and xor add adc sub shrl rolb push push add xor test push jbe add adc pop roll or mov and pop cmp loopne clc push dec fmuls lea xor jecxz inc rclb aaa in lret rolb cmp add xchg or or add mov (bad) xor cmp pop mov jb add inc mov push xor test push add pop test clc loop add jo cld mov pop dec inc clc jne call add sub pop js jl (bad) jo clc jge and test loopne jle push out insl or xchg dec aam subb mov sbb cltd dec lret add or (bad) sbbb sbb inc test mov sub jecxz mov cmp mov cwtl push (bad) or add ficomp adc xchg add pop cmp adc mov scas test mov pop jp jo sub inc shrl cmp lds adc inc cmp leave js inc iret lds dec jo sarb jmp scas mov cmp or clc js push mov pusha dec push rorb sbb sbb pop nop mov dec popf mov lods stos jno dec stos imul mov (bad) sti outsl pop popa mov lret jl test rclb subl pusha mov (bad) nop sub and mov sbb jnp add pop pop inc fcomip mov jecxz mov dec mov adc push xor insl or ret cltd cltd aam or imul and add fstps xor add dec adc jnp xlat or es int das (bad) push (bad) wbinvd mov (bad) popf and add mov pushf (bad) (bad) mov pusha pop clc xor (bad) mov int and mov pop stos fisttpl clc mov push and daa lock fisub cmp jo imul popf cld or ret mov bound jo inc mov xor cwtl mov xorl enter add jmp (bad) lock loopne mov aas push mov or sbb mov fmul orl dec js adc addl jl add inc mov sub inc test cmpsl (bad) adc dec pop dec out popf add repz mov jnp add (bad) xor hlt pop (bad) (bad) cmp roll push js (bad) adc jp mov inc stos inc movsb arpl add pusha pop and sarl push cli lods mov sbb ja add pushf (bad) or pop outsl or adc or popf xchg jbe aas inc lock mov in jmp ss arpl les into les (bad) (bad) adc add or aad xchg inc repnz sub or xchg test cmp js or lds sbb inc in imul cmp pop add pushf mov nop pop sbbl add mov pop cltd sbb sub or je iret pop mov aam es xchg int3 cwtl or dec xor cmp push je mov sub inc imul pop sub push sub or (bad) push lock sbb xchg sar js fsubl lock lahf adc push mov cld lods xchg and add rcl push sub jb push sub and inc sbb inc sbb es fsubl push add mov (bad) lahf int cmp movsb pop les xchg pop xor sub lret xor loopne push lock mov mov dec sub adc es movsl xchg inc push inc (bad) ja add adc or mov rcrb repz add push mov add push dec cmp pop add fcoms push add cmp jo adc add xchg pushf insl ja rcrb xchg mov or xchg stc jbe xchg aam (bad) and loop inc inc push or jg test mov xchg pop leave mov ret mov xchg leave jbe jo jecxz adc jnp mov push (bad) cmc and xchg push xor xor xor xchg cmp adc lcall (bad) lret enter loopne adc ja xor rolb dec pusha pushaw jae cmpsb popf xchg loopne mov push loope pop dec sti mov lcall pushf add mov or cs hlt lret stos fs xor ljmp icebp es jmp mov sbb jbe pushf jg mov les adc iret pusha pusha jae adc mov mov jno sbb add xchg repnz insl loope add and fild lods mov je inc lea jne pop lea cmp popa sbb imulb int xchg mov test daa or sub aas (bad) into int push cwtl mov sub xchg dec movl add movsb inc js popa push push data16 cmpb add mov lret sahf fstps push cwtl and pop ljmp add adc enter xchg loopne push mov outsl pop push mov or add iret in mov jno sbb rcl dec add aad xchg push cmpsb fdivrp sub idivl sub imul loop cmp cwtl pop push push movsb aam add and sarl imul xchg mov aas out jmp lcall sbb pop push mov dec xchg and nop imul cltd scas pop mov push mov daa icebp xorb add adc fnstenv adc xchg sbb push sbbb add or sbb or sub xchg and or jp mov xlat test je movsb jnp jg rolb outsl movsl push scas mov lods push gs loopne or push cmpsl (bad) or cmp mov jmp jge movsb or add xor pop sbb (bad) rolb cmp pop sti je sub inc push jp nop pop dec mov pop xchg or loop xchg sbb fisttp jg ret add xchg lret or push je aam mov aaa cmpsb mov pop dec sub cmp push fs dec int3 add fnsave test ds sub test mov bound adc (bad) rcl in jbe lock aas cmp in add dec test xor mov lea loopne aaa aad adcl enter jbe (bad) adc add jo gs icebp xor movsl adc inc pop call imul lock mov out or jns xchg test and sahf push out xchg and in sbbl push or pop insb add sahf or push (bad) mov jno mulb ljmp inc dec jo push pusha and mov cmp out add and cmp push pop and daa mov cmp imul inc push xorl leave pop mov add xchg mov push mov mov cld pmullw clc sbb xor cmp mov mov mov push test cs mov decl aas push sarl adc inc cmp mov add mov insb in push rorb mov mov push and movsb xor or cmp xor adc out pop and and test adc inc in or add xchg dec inc mov mov sub bound add jo xor or mov xor es pop pop inc int3 ret test lea sub or pusha shl jne lods push mov add fdivrl mov call lcall enter nop add or cli out fist xor repnz push mov loop shrl add sub cmp push loope push pop pop fisub cmp imul adc js enter mov imul call loopne aam std ljmp outsb add adc and mov pop cmpl push mov push jns mov xor hlt or xor ds sub or sbb out cmp adc or aas adc flds out cmp push dec aam in nop inc xchg mov inc inc clc mov fisubrl sti movsb add lahf sub push stos mov xor cmp mov insb add pop dec cmp enter push dec jl inc mov out gs pushf xchg add pop int and mov pop push pusha movsl pop jbe nop or add int sub add adc jo bound or mov push int3 dec add rcr mov push mov adc and xor stos mov fimull addb pop push call push repnz xor rcrl outsb mov adc fidiv mov mov jbe cmp sbb or push out adc inc int pop mov shl hlt pop or rorl push mov jo sar flds into xor ret js loope popa (bad) lock cwtl push mov cmpsl xchg ret mov jge movsb dec loopne arpl adc cmp pop pushf add pop test inc mov inc and addr16 add test and jb (bad) pop cmp lods mov mov sbb cmp fistl sbb fdivrs (bad) je pop jecxz mov or pushf sbb roll lock cwtl mov jnp cwtl insb fcmovnb je push rol inc pop aas pop dec addl and add insl mull mov in and mov test cmpsl and or pushf ljmp loopne xchg add mov leave ret push jle imul adc add js mov pop dec shlb add sub mov inc sub negb cmp push jg les and fisttpll mov testl xchg shrl movsb daa add cmp js sbb xor add movl or mov ficompl add inc mov inc jnp mov lods pop jl xchg mov in movsl lcall (bad) push jno pop add insl cld xlat add repnz sub sti cld xchg xchg dec cmpsb pushf sbb pusha loope mov mov ficom aas pop adc divb inc add sti (bad) xor pusha and test add cmp mov push pushf xchg pusha test jb insb xchg bound (bad) mov aad (bad) mov mov dec (bad) push movsb push add or lea jp lods or fs jae pop bound jnp jb add jmp mov push jl fs mov loopne and jns aaa jnp (bad) je int3 mov jmp pop into icebp or adc sub jbe (bad) and loop push in xchg (bad) mov push movsl int3 in mul lea mov loopne xor sbb lods fwait xchg add dec adc stc rolb mov inc dec jbe add push ret fldt and in xabort mov add lock sub dec add pop dec outsl add dec int pop xor push ljmp ljmp sub sti fcoml lods mov inc or add add inc add mov pop dec les xlat flds sub xchg lock lret add or pushf in push cwtl popa cmp fild mov stos test js clc xor sub or pusha add std jns add push and sbb mov or pop int3 fildll adc cs or mov gs (bad) sub mov adc pop or into adc sbb out pop fnstcw sbb adc sub shlb rolb insb hlt lahf mov or and sub mov sub leave add push xchg mov xorb pop rcl xchg add outsb jbe andb nop mov mov xchg add movsl sub clc movsb inc and test and std pop xor (bad) (bad) dec add (bad) dec jle or mov mov jmp add push mov cmpsb push pop scas pushf cltd add and push lahf jge sub push js cmc sub pusha add xor mov add mov pop fcmovnu mov inc cwtl add inc jge les nop sbb jne push dec int3 mov jecxz push push sub pcmpgtd ja mov cmpsb inc or stos add or dec push insb lds inc or mov test sbb loopne inc xor lods xor sub jb sub or in lahf adc fs inc clc push or jo push int add add mov pusha sub outsl adc mov dec rolb outsl repz sbb cmp mulb lods pop add dec mov cmp lock lret loop mov subb add dec out adc cmp mov add mov mov shr sub adc push call xchg leave insb push pop adc bound lcall xor sub mov push adc mov out icebp fcmovbe pop cltd pop decl sub int3 xor mov cmp cwtl rcll addb sub shl cmp sbb jae sbb adc pop repnz push mov nop mov dec lock adc xchg add in pop hlt test flds mov das call push xor sbb pop xor jbe out cmp (bad) mov cmp push inc pop pop rorb popa sub (bad) stos aas mov push jle test jmp ret std inc xor movsb jbe int3 dec mov rclb add xchg popfw mov out stos cmp movsb stos bound jnp icebp (bad) adc pop andl inc movb push cmp mov push je es ja sub ljmp test cmp pusha dec cmp (bad) cmc pop pusha add (bad) xor mov push pushf fcom dec xor data16 jno ja loopne xchg cmp sbb jo aas cmp int3 jb fs xor pop icebp jmp cld jle les arpl std js js fstpt pop ss ror dec addl jbe clc lcall movb das lahf mov add ret and (bad) cmc push (bad) call mov xchg rcr mov jmp (bad) mov cltd scas test push or and cwtl cmp push add scas or jl xchg ret xor nop shl mov rorb push pop cmpsl adc (bad) sti lock mov lret or pop movsl adc push mov bound loop (bad) push je,pt push inc mov fimul es insb sbb inc inc cmc sahf mov inc and addb jp sbb ja repnz movsb add mov dec jmp cwtl nop popa cpuid leave add push aaa jno inc jmp loop lods rcrl add cs adc insb and sub mov cwtl arpl lods nop adc mov or mov test sbb cmp adc inc bound and or adc sub cltd mov imul iret sub xchg dec jae aaa mov stc and outsb enter inc (bad) enter dec aad push jae sbb mov push add movsl shlb inc adc jne arpl add jmp andb pushf imul jno dec fmulp pop pop out cmp push push pop int pop mov lock jl or imul adc pusha cmp dec dec inc sub subb pusha inc mov add xchg andb mov clc movsl jb add xchg add ljmp nop js push movsb add adc loopne adc (bad) push rcrb rorb out dec pop pushf (bad) repnz sbb dec or cmp mov leave in jo cmc bound pusha ret test adc jnp pop cmp adc push pop pop out and dec cli arpl fwait imul mov lret stos mov or insl add inc add int3 dec adc mov dec movsb clc fs and mov add movsl sbb dec stos in imul nop pusha push and add scas bound or add lods mov push inc sbb rol dec jmp or add fimull sbb mov dec call lds dec movsb ret data16 mov das bound repz xchg xor mov push nop fwait mov (bad) aam xor in mov pop (bad) add xor xor (bad) jle xchg push std mov xchg add jo dec mov int xorb adc (bad) inc sbb dec adc cmpb int3 mov sahf sub mov (bad) jbe cwtl pusha xor push inc xchg adcl adc xchg xchg cwtl xchg cwtl cmp (bad) jecxz popf inc mov scas jo sbb mov lret xchg mov push and out bound mov xchg repnz sub dec test add xchg js push pop daa xor (bad) xchg inc adc or mov stos addb dec cmp outsb pop loope and cwtl pop je (bad) sub inc mov clc xlat xor and les (bad) jo pop icebp xor lahf sbb mov xor jo andb imul and (bad) fsubs push pusha enter das out pop dec in mov pop mov enter rclb in mov ucomiss inc adc out andw stos xchg iret addr16 or les xor adc and xchg in mov test call pushl xchg cmpb adc int3 sbb inc add sbb pop push lahf inc int mov pop sub mov xchg dec inc xchg jno sbb adc clc jl jl cmp xchg pusha jns in mov cmp andb mull xchg loope pushf addb stos movsb je lock ja add subl int3 inc fistpl popf test xchg or je leave pop mov je sbb mov jmp cmpsb test nop mov or inc lcall jb mov xchg add mov inc imul out cltd sbb adc and rol inc xor dec and icebp sbb in add sbb or sbb xchg mov inc faddl add push xor bound adc xor pop adc push mov pusha dec sub jne iret add push jns pop loopne insl (bad) sbb sub dec push xchg mov rcrb lret sub out xchg xor push int xchg cmpsb xor and lock sub aam (bad) adc push jno inc lret fiadd and lea incl fcompl jmp add push add in adc fisubrl mull sbb add cmc pop xor add jb jo (bad) or lahf push add repnz pop add sbb arpl cmpsb mov mov fisubl ror pushf in (bad) aam or fisttpll mov push test push xor loopne inc arpl push ret (bad) outsb daa push dec mov and loop int3 adc dec pop cwtl push mov cmp sbb (bad) aad js sahf dec (bad) or andb loopne jbe mov iret enter (bad) stc mov sahf cmp imul adc ret jbe lahf pop pop (bad) enter insb outsb sbb or sti ret andb ficoml or aas inc mov sub add inc cs jb std test ljmp rorb mov orb inc jns mov push sarb jl adc and aaa leave inc mov fs js adc inc cwtl cmp lret icebp adc cld enter sahf call mov push add jae mov sbb gs mov mov int lock movsb inc test push out push sbb cmpsb (bad) lods testb push clc test cld mov or mov divl jg repz mov hlt and push cmp mov sub mov adc insl fcmovnu and mov and mov pop jne jl (bad) mov movsb insb mov les out insl add or insl push sub adc adc mov jg shrb jle stc iret push (bad) push pop (bad) and adc jl add inc loope push mov gs adc ret in inc mov pop popf loopne pop repz mov fist and dec nop add std mov mov mov cmp add out xchg cmc and notl and mov (bad) loop cmp jp fdivl sub add cmp (bad) jo mov shr addr16 add (bad) cwtl xor push in shlb or xor inc cmp pop daa pop sbb xlat cli cmp add pushl fstpt pop jecxz scas repnz add mov insb cmc arpl push or aas sub and cmp pop xlat scas xchg inc in fldenv xchg sbb cs js cmp dec push dec sub cmpsl bound je mov dec shll xor imul adc or push lods sbb xor lock push cwtl add lcall mov jb ss das jge pop int3 cmp (bad) in adc pop lret or clc sarb sti add dec fstpl mov or dec mov xchg hlt add or mov or leave mov fadds pop adc pop inc in jp mov add sbb mov add scas int in fs add fs into lahf adc (bad) mov ds xor fnsave lods mov pop or hlt mov and je stos cltd push call (bad) xchg hlt add jns mov add dec jmp pushf (bad) push in xchg dec fs xor in jno mov cmpsl pusha adc add arpl adc jl mov shrb pop or int3 dec push xor sbb (bad) xor add inc (bad) decb pusha sbb les xor mov jno push and (bad) or out xchg mov push adc stc jno push clc inc cwtl icebp mov out push adc push pop (bad) fwait xorb popf mov das (bad) aad add or insb sbb and mov pop clc add (bad) hlt push add (bad) test mov aam push jns pop dec fidiv jne test jb shrb data16 xchg xor fnstcw mov aas xchg enter pop pop ret popa jge push inc les cwtl pop or jecxz jnp mov fist mov pop stc movsl add (bad) xor imul or and and sahf pop les and xor bound adc sub nop mov dec dec adc cwtl and xor add push rol in repnz push xor xor cmp daa loope add mov (bad) sti sub cmp sbb ja pushf dec xchg lret dec adc stos jle bound sub rcrl enter cmp inc mov jno inc sub aam xchg fs aam jp add jno xor lods mov inc dec jne pop shrl (bad) ss loope fidiv dec repz pop cmc pop imul sti pop cli and mov xor cmpsl or cltd and (bad) mov mov cmpsl add sub adcl pop stc sbb xor pop and jnp add inc pop (bad) pop in test loopne xchg test or lea xor fadd ficompl pop sub jo inc dec je out mov mov mov arpl sahf leave rorb ret nop add dec aam jge jmp (bad) call jo xor jns pop cltd mov jno mov test int3 nop int3 add loopne cmpsl xor arpl pushf stos push addb mov add xor dec mov outsb cmc ja lcall xchg and fisubl push incb (bad) fdivr add aas adc inc add mov ret jo sahf mov adc cmp add pop cmp in sahf xchg mov adc pusha pop (bad) xor int lret xor pop fistpl mov repnz aad and add scas mov fcomi push lahf mov sbb rcll push stc cld and fwait in cmp dec mov mov mov call leave dec inc xorl xor dec add mov pcmpeqb add dec jp rcrb icebp (bad) jae ss dec push loopne and pop jl sub or pop hlt and mov stc and fisttpll daa in aas aad xchg mov inc or ljmp xor mov push clc fdivs sub test out adc mov push and mov pop jne es ret add xchg add cmpsb pop jmp push jnp popa jb out mov sub jo daa movsb leave fsubs and push (bad) es adc cmp push lock cmp xor std add outsl pop jnp pop ficom or xor rorl out mov aas dec fildll xor dec add sub inc fdivrs add jmp push cs sbb adc imul clc or leave data16 jecxz imul xchg and and mov adc pop fld mov pop call xchg or or mov enter inc dec dec sbb jl mov aad adc push js popl xchg xchg xor cltd jge enter dec mov fwait pusha cmp add lock pop dec cmp or lods inc (bad) mov or fsubrl rcll or xor fdivr test rorb mov into xor loopne insl xchg popa in jno,pt and jge bound pop mov adc jno dec xor xchg pop jle enter mov adc sbbb sub mov jo notl clc enter das xor adc xchg cwtl scas add rcll pop pop mov inc jo dec push into xchg in jl or pop add in pop sub add movsb push inc or loop jmp mov sub fstl add loop fsubrp daa decb in jno push push int rclb enter cmpsb inc cwtl add insb xor sbb push test add fisttp push sti daa push jge mov into shrb stos hlt add lret pop lds add rolb xor mov lret dec xor fdivs xchg add int inc lods add or subb or pusha sbb mov jp xchg add daa pusha sub es call ljmp stos adc or pusha mov int inc dec jno nop sub repz pusha mov out dec bound shlb inc (bad) jg mov xchg jo inc mov call aas pop insb ret iret push mov jbe pop push inc mov jne inc dec xchg cmc cld fsubrl add gs fs push addr16 jbe push sub or cmp xor sub or lcall popl in (bad) aaa add lds cmp pop xor inc cmpsb je xor mov popa mov pop popf shrb gs inc jmp push scas xor xor fdivr cmp sahf inc mov xorb dec push or sbb icebp sbb push in scas int out (bad) sbb cmpsl adc jge push fsubl in dec xchg cmpsl mov add pop in xchg dec mov xchg jo pop jecxz adc and aas jns or inc pusha sbb mov mov push adc xchg inc movsb cmp add xchg fidivl cmp add lret push inc or ror add add jmp mov xchg mov in xchg pop aas lcall dec and test sbb and into add sahf jmp imul mov inc addr16 pop imul mov pop add cmpsb stc cmp xchg rolb lret (bad) pop add cwtl ret repnz jg pusha sbb gs addr16 lret in xchg add push inc xor in and cmp dec leave out sbb xchg test loope lock cld mov ds js sub adc cmp push or mov add ret xchg add or test out or sbb imul movsb inc insb iret sbb add adc jo cwtl out stos sub pop mov adc mov pop imul lock out push add jb ss sbb outsl sbb push imul outsl add add fwait out mov test pop scas pop or fist adc or cmp test jmp mov out xor sbb popa xchg mov stos addb push mov ret add adc jg adc movsb add in jl inc add flds add or in inc aad (bad) sarb cmpsl addr16 movsb or jp pop cmp jecxz rcrl push push xchg mov xchg and sub sub faddl dec call fildll ja lahf inc sbb (bad) sbb xor mov sbb cwtl adc cmpb push mov addr16 sbb adc and (bad) xor and adc popa leave repnz and cmp dec xchg andb jne das stc and mov add mov mov add xchg sbb add ficoml nop sub adc and mov sbb mov jns inc xor sbb test popa (bad) mov add outsb out in and inc add or inc adc cmpsb movsb aam sbb cmp adc imul je rcrb jo ror adc and sbb scas dec sbb bound dec popa pop pushaw and in ljmp push mov add adc cmp ja sbb mov and ficompl xchg xchg lock out xor ljmp ss jo mov sbb adc gs add lret loopne cmp call pushf inc rorb sub lret in sarb or jbe adc jns mov enter in or repz xchg scas xchg into add lea and dec lock jno rol loope lock fucomip adc hlt loope clc pop gs push fimul (bad) dec stos fadds jecxz loope jle imul bswap xchg xor addl in mov daa and add mov out push fbstp addr16 sbb dec dec mov loop xchg stos fs les mov je fcoml out cld cmp mov ror sbb mov enter pop xor mov enter pop xchg and xor dec mov lret mov xor ljmp cmp add inc loope adc and push sub xlat add aaa jno sbb (bad) rcrb mov call inc adc jl or movsb xor sbb pushf cmp andl mov lods sbb jge clc daa mov jns pop std movsl mov mov les or or add adc popf mov mov psubsb push dec stos sub push sarb fnstcw pop out pusha ret stc (bad) and leave outsl mov int3 push dec rclb (bad) fldl rcrb push pusha pop ljmp push jmp movsl jae and movsl and pop xor in lods mov call sub decb jo (bad) hlt xchg adc jg sbb popa pop mov outsl aaa mov jnp add insb xchg mov add sti adc leave nop in add rolb add dec add cmpsb pushf inc jo pop shll (bad) mov add fisttpl (bad) sbbb mov fadd fdivr cmpsl jle adc or add cmp sbbl (bad) pop popa or (bad) nop push sbb imul mov adc nop push adc or fs mov enter pusha xlat sub rolb push xor pushf and add cwtl mov in push stos jecxz insl arpl add rcrl and in xchg pop mov iret dec sub pusha adc lds loope test insl outsl adc imul ret loopne jae add addb imul sbb sbb cmp mov sti add stos in sbb xchg rolb mov flds loope test ds mov call xor mov clc insb adc repz int3 inc mov js sbb call stos ret pop xor add mov or ljmp mov adc (bad) call imul sbb xor add mulb mov adc add jo jb adc ffree rcll jno pop adc out in test std adc or lret cltd xchg scas arpl movsb ret dec in (bad) enter call sub bound push xor cwtl movsb inc in call dec pop xor ret loope adc les mov in or adc sbb inc loope inc or rol dec jl or ret or (bad) leave mov add rcrb mov pop push jecxz xor jbe inc and loop aaa test clc (bad) push loopne push vmwrite mov sbb sbb sbb ja mov popf inc dec or pusha adcl and insl push dec mov int3 or jecxz jb out add inc aad adc mov cmpl adc mov xchg sbb dec sbb push fucom xchg inc rorb mov add xchg enter xchg and mov adc adc movsb xchg adc out push xchg mov or pop icebp and and push jl sub mov movsb imul dec fcompl adc xor push sub cmp insb or ret adcb mov loope mov mov sbb and fs shr xchg jo xor shrb add xchg adc mov int3 sahf sub test cmp add insw into adc pop mov js pop cltd inc pop mov dec xchg add mov inc sub dec or dec add test xor inc mov (bad) fsubrs ss cld jae push mov (bad) dec orb cmp das pusha lcall enter jmp pop push mov or stos into ret fsubrl sub dec jl push cmp test fdivl pushf mov mov int3 push icebp in seto sbb ret loop clc add add les stos jmp and out sbb lcall dec jmp icebp je xchg mov mov notb fbstp inc lock push (bad) popa and lret and xchg int3 addr16 pusha mov add add xchg xor inc subl pop jecxz lret dec lcall cmpsb jb mov pop and lds loopne dec sbb or push cwtl js pop rcl mov jp pop and adc cld push bndstx iret roll lcall jmp xor add into lock mov movsb jbe add inc faddp dec adc lds andb mov adc xor adc sbb andl ret adc movsb nop xchg push pop adc mov inc hlt or addl inc dec test out adc sbb xchg xchg or movsb jmp push test add inc jmp push cmp cltd int3 sub mov les out pop push dec enter xchg sbb int3 loopne pop in push call pop loopne dec into pop adc int3 shll cmc lock popf or xor fdivs out jno xchg jl lock pop jl les add seto jno,pt pusha xor sbb mov fcmovnbe aaa mov and ret in mov add push mov and sbb sbb js mov dec jb test adc mov das mov or lds lds gs adc fwait popf dec insb sbb nop dec test insb cltd je enter stos cmpsb fmul inc jnp add push pop fiaddl enter jnp inc add lret push fild push adc test mov xor movsb xchg sbb pusha cmp dec popa xchg fs test mov dec repz rorb in je mov inc popa pop inc or mov fbstp mov sub ds aam lret mov mov fs cmp nop shl mov sub in xor nop add add sti pushf movl cmp lods cld push xor inc inc push xor inc add xchg sub rolb es mov out push push xchg shl dec mov jb or mov dec lock rorb sbb into in mov xchg cwtl push or add (bad) push aam pop leave dec xchg call sbb sub loope xchg jns mov js clc xor popa cmp loopne in out xlat loop push sahf (bad) andl sbb clc leave cwtl mov pop arpl inc add imul out push sub sbb adc cs inc jl stos xchg je insb push hlt mov ja sbb and inc les adc incl sbb mov stos or addr16 rcrl call push xchg loop lret xchg inc mov pop scas add jl iret in lods dec add cltd xchg enter xchg and ljmp daa adc das movsb xor movsb sub loopne out xor iret cmpsb cmc and add rcrb and nop pop cmp inc dec sub and mov into shrb jb lds jle rolb stc xor pop das sbb mov jnp mov leave (bad) mov bound adc lock data16 push jnp inc mov add cmp ret adc xchg or or xor pop inc push test or mov push std cld pop mov xor add sbb jns cwtl rclb add cli jmp adc jg or iret sbb dec cmp push sub outsb or xor cmp inc add dec dec loopne add or dec mov adc push adcb lods push push popf rcll mov or push jmp inc lret in test loopne mov ds inc jl mov adc in out andl dec addr16 pop pusha dec lcall fcomps cmp loopne aaa mov add sub pop test sub aad jg cmp shr or jnp and cld cli mov out push xor add adc jae add cwtl and in test and lock jae and jecxz psubb and add push (bad) test movsb mov cltd into loope insb jo or adc and adc and xor and mov sub lcall add test jb inc data16 repz pop negb sbb and adc add roll xor xchg ss jo out adc sti test cwtl jno mov push lret dec xchg (bad) mov and loope loope loop xor (bad) decl repnz cwtl out dec cltd add or add adc pusha fcom les inc adc xchg popa jo fs jno bound mov and push and test je sub and mov mov add call in mov nop cmp and push sbb cmp test mov and mov sub sahf push insl add popa imul mov rorl call int3 xchg xchg adcb fcoms jno les repnz sub and xor pop add and cli je imul js dec jnp jo push mov orl icebp das sbb cli popw sub push adc sbb jge dec adc popa cwtl into jge push cmp add scas adc sbb loopne in push cmp jo pop out add pop unpcklps dec popf pop bound jne xchg fs mov in int3 pushf popa shrl rolb cmpsl xchg adc xor out xchg shrl cmp push sbbb dec psubsb xchg inc add daa enter mov sub jb leave adc dec jns leave js and add xchg jnp lcall out (bad) lret mov out or lret daa dec iret (bad) sbb rol repz adc xchg add adc xor in sub mov adc cmp push add adcl and adc add int3 bound js test adc jo pop adc jecxz psrad mov pop or xor std fwait popf adc pop repnz sbb inc fsubr (bad) jg xor sub stos xor jmp movsb mov add sub js dec push cmp int daa imul in adc enter iret out mov repnz xor mov push sub stos xchg mov pop test lock in and sbb and lds xor add adc xchg dec iret cmp dec mov xor sbb mov xor adc jo fistpll mov mov pop jl sub pop mov push lcall enter aam bnd pop out mov inc cmp and xchg test les dec xor sub rcll jno data16 je dec jns sbb nop add adc jg in nop mov lret push dec in test sbb inc cmp shlb jae sbb leave dec cltd push (bad) mov inc inc jb in dec int nop lds sub xchg pop imul rol clc lods mov lods adc fcoms xchg leave outsb xor inc insl imul loope add push inc or ljmp std and cmp js sub mov push pop add inc test cmpsb cmc push fild adc xor rolb cs and or dec inc push inc fwait outsl dec rcrb sti lahf inc (bad) std push adc enter or adc icebp jo clc sahf loope out clc adc movsb pop mov (bad) mov pop in sbb mov (bad) pop sti cmp mov and mov sub je dec jle sbb sar mov int or sub mov sub sbb inc cmp or xchg mov add arpl inc cmp loopne jae jns xor xorb shr cmp add cwtl dec or add repnz add jecxz xchg mov dec js sbbl movsb adc cmp cmp hlt sbb mov cmpsb rolb inc push jecxz add call adc mov icebp adc push cli add xchg stos shlb das xchg push dec ljmp fsubl roll push push mov loopne into mov inc dec mov je adc sub mov xor (bad) or or inc mov mov enter sub arpl (bad) jns fs fsubs dec sbb movsb adc jo ftst cmpsl lret in push mov mov mov nop pop (bad) lock xchg mov sub or jae jnp and add sub es add cli repz jl rcrb inc jmp addb dec adc testb xor fldl cltd xor daa sub out call pusha rcll push daa mov sar popa test test jo jns sub scas jae movsl dec sub (bad) jo sbb es pushf jmp cld cmp daa icebp or and scas into xor inc xchg mov and xor pop pushf in adc repnz adc movsb cmp push mov mov or out call outsb (bad) repnz push mov sbb and lock mov loope dec and jo add and or inc lods shr jno and fs repz in mov jo int push pop mov and pushf nop sbb ret fstl dec jecxz lret dec sbb fiaddl (bad) clc push (bad) pop push out (bad) cmp out addr16 pop dec sub arpl xchg lahf and cmp in je lret add leave jb push inc inc add pop ja aam push push adc ds adcb adc pop fs dec adc adc movsb je cmp sub fldl test js lret fwait std push inc lods cmp xor fs or mov lahf and mov mov pop and lock mov enter mov pusha jmp xchg stos sub dec je cmp adc adc sbb inc in call loop adc push (bad) and sub imul and bound inc xor adc cmp jb sbb xor dec add je js stos sub mov jl out push xchg sub jo mov rcrb outsl adc push shrb adc aas and mov and lock int and mov sub mov or sarb fsts inc or sub popa jo in mov inc call sbb lahf sahf les mov push out pop cmp mov fsubs rcrb lock loop mov in les add in xchg and pop jmp push rdtsc mov daa push pop stc adc lar loopne mov hlt (bad) push arpl add sbb sarl sbb pop pop pushf push push pop push push mov xor mov xor push adc subl add mov add xorl cltd decl sar or sbb xorl push mov inc xor push ja data16 sbb xor shlb ja shll (bad) cmp lods cmp push cmpl insb dec dec mov sub xchg cmp addr16 adc push mov add xchg cmpsb mov mov push xor sub push out lahf (bad) vorps test xchg adc inc mov inc sbb push push sti lea repz sub add pop push pop inc daa xchg nop hlt add push xor stos stos add push push into ss pop xor or inc stos dec pop in and (bad) cmp ret (bad) (bad) in jne jo dec pop imul dec mov xchg jmp mov jmp incl push mov movsl or sbb add ret jecxz inc inc lds stc sub mov push push inc arpl stos and mov jmp shrl mov ja jnp rorl or sub mov mov imul jmp push xchg adc shl leave in add out in pop pop jge or iret adc push sub mov cmp mov jmp add push sub test dec and lock sti pop lret (bad) push xor mov ds jl nop (bad) sub lods adc pop mov xor ja repnz js push xorl out jbe sub pop not jmp inc fnsave cmpsb cmp dec push dec cli jnp ljmp aas mov cmpb add (bad) jp call or cmp jmp add pop fs or rcll add (bad) enter sub pop sub pop jmp (bad) mov out not add dec mov enter add enter pop out dec cmp (bad) jle mov push arpl or jge pop push jmp cmp jg shr cmpsl std jbe add or adc dec imul jmp cmp lods sub lods dec cmp jmp push mov insl and inc aaa fnstsw shll or mov js push repnz sub negl or sub dec mov pop ljmp push xor cltd sub cld comiss fstpl xchg sbb push in jo push ja arpl cmovno sub pop ljmp (bad) imul or insl push pop aaa push mov (bad) mov imul xor negl sbb add addb dec dec pop lock inc jg xor int pop sbb mov xor cmp jmp pop arpl jg jmp pop add test sti push and or xor mov out mov mov in std push loopne add jnp mov pmaxsw (bad) cmpsl xor pusha pop data16 pop pusha inc pop jno adc es push aas cli and pop add cmp push sub ljmp xor stos das pop lret jo repnz add mov pop insb jno mov push pusha divl ficom or popa lcall jg mov scas add das fsts ret and loopne add mov jns cmp push cmpsb lds pop inc aas and jge int sbb lds stos aad rorb test xor pop pusha (bad) je jae dec fwait mov xor xor in inc test pop ja mov dec lret push ret jb sbb stc imul xor mov ret inc push xor jo popa push pop jmp in adc pop or xchg sub aad in (bad) or test stos lods push mov rorb test fild mov pop ss sub je pop and xlat ret jnp jns ja fnstenv push sahf jp dec rclb and xchg sub test add inc stos push inc lcall sub dec pop xchg lods out xchg mov arpl or enter mov push xorb int sbb (bad) ret pop and add sub and aaa mov movb mov adc movsl adc mov cmp lods leave movsb dec popa add or ljmp cmp jmp mov mov pop mov inc shl push cmc call sub es cmp xchg mov or inc int sub jge and push pushf push xchg pop adc mov btr xchg loop push mov add or jno popf dec push xchg mov or jl ljmp rcrl divb mov push pop push mov mov cltd pop outsl popa adc add loop xchg and add jmp mov stos pop aas dec (bad) push add xor nop fwait pop inc jo and push dec pop add scas or fdivl push push mov push test mov add push push push push push in call dec loopne (bad) mov shll inc jmp add icebp movsl xchg inc fisubrl repz xor sub ret sub xlat (bad) push stc jno pop popa cwtl shrb pop negl mov pusha adc repnz or xor xor (bad) pop xor ds lods dec cmpsb adc sub dec pusha sub jae add jnp pop aas aad and sub cs pop pop mov mov bound pop push neg pop jbe aam sti xchg jecxz popf fdivrs shrl pop push and and dec and sbb lcall dec add sub fcoml out sub mov push mov addr16 pop sub popa pop jmp popw and pop dec sub std jae js pop int lcall dec mov or pop cmpl jmp js jecxz mov inc xchg das mov xchg inc loopne mov push scas push xchg outsl call fimull add addr16 jge cmp dec mov mov and jb pushl stos sub inc fsubs mull daa add cld (bad) repz inc je adc das and jl popa mov xorl imull pop mov pushf pop test adc push cmovns xchg xchg pop mov mov push and push lock arpl jne sarl xlat inc out sub rep (bad) or pop add arpl cmp fsts xor icebp lods or ret dec (bad) lret rorl pop push es pop push addb rorb les imul mov jmp sbb push jecxz lret xchg jl pop dec aad stos (bad) xor jb stos cld inc push xor test pop adc in shlb jmp mov es push int3 cwtl xchg add in push jmp repz xchg sti or pusha xchg and jno lret push dec ret add or add and (bad) xor aaa xor jnp sub fstpl jg mov jmp or sbb xor pushf xchg pop pop frstor sbb xor out lcall adc rorb out add int xor add jle cmp (bad) (bad) mov push lock lock jnp lds in clc push xor and lods mov jb popa notl enterw roll cmp ja mov xor cli push add sti ja fisttp sub pop mov add add add jae pushf enter pop add insb inc push pop lahf dec dec mov jne cwtl sub aad inc out ficomp dec aas add push (bad) pop shl pop pop push xlat jb fs add inc daa cwtl xor jmp pop push fwait push sbb shrl ret rorb mov rcll mov fldenv xor pop add sub mov lds jne sbb inc ret xor arpl push dec or lods insl xchg testw sub sub ret sub dec movl mov mov pop pop jg imul sarb jbe pop sti dec popa jnp jnp jmp mov dec push mov xchg mov aad and sub out ss and pop jle lds adc into adc or adc dec pop cmc xor dec push bnd scas int3 mov add xchg dec out ja dec and xor sysenter test aaa add dec movsb dec fadds cli sub jno insl cmpsl push cltd push lods inc add sbb or adc (bad) movsl inc add leave sub pop outsl jle mov adc xor ljmp dec xor or adc push movsb jmp pop adc hlt add insl sub sub in dec and sub inc push ja outsl jns dec (bad) jo mov add call or (bad) push jmp outsl cs push add pop aas xchg jle pop scas lods cmp and iret pop push sub insb jmp ror add mov xor loop dec adc inc xchg and pop push imul mov aas or imul icebp pop jge sbb in pusha mov mov dec inc pop pop mov xchg mov mov pop mov mov push testl mov je cmp xchg bound pop mov mov push int mov mov adc cli cmp clc insb movsb or pop push lahf or (bad) jno pop pop push mov (bad) xor cmpsl mov popa push sub adc add shlb push aaa inc test or aad add pop push in pop mov loop or add mov cs js test test xor (bad) aas cmp dec cmp sub popa lea rolb pop push inc data16 jmp cmpsb jnp adc aaa jae pop ret ror or xlat rorb dec sub adc add xor jb or fs out test jmp (bad) mov mov int sub jns mov (bad) dec add mov cmc xchg xchg test push mov and ss push loope push mov sbbl xchg mov pop push push push mov add xor loope push add adc pop add roll insl jnp aaa add sbb aas jge mov mov and mov jb je sahf pop pusha jmp mov pop outsl and xchg adcb mov jb or dec scas jbe lea push loop or pop sbb test outsb push push mov sbb push pop or jmp idivl ret sbb mov mov mov movsb jb call popa lret push xchg sbb push sbb mov mov xor std call push mov xchg dec add icebp xchg cmp mov cmp jae jmp push cmp cmp pusha mov addb inc and cmp adc outsb or sub mov xchg inc dec repz add or and xor jmp push push jg sub cltd mov adc jno lock scas adcb (bad) movsb xchg add sbb and push add sti int3 add or popf or enter aas ffreep push bound icebp addr16 push xor push mov xchg sub icebp inc mov mov add sbb and mov lods mov cli push cmc pushf inc int mov and into dec insb cli add push loopne push aaa loop xor mov xor xor daa dec jmp sti pop mov xchg or xor jle cld and popa pop ficompl xchg mov aam jnp enter and call (bad) int3 adc xlat add cmpsl add sti std loope xchg sbbb or mov or (bad) dec mov or data16 mov and aad fadds cmpsl stos add pop or mov sbb divps fldpi ror cli xor sbb fs mov lea mov mov push push and pop and int or jmp div dec mov sbb dec add jns iret lock call push sub out pop xor sbb enter jp lods sbb xor push add lods les xchg lahf addr16 fs (bad) mov cmpsb bound or mov xor and nop and pop add scas add sti ss fistpll out das test mov test js and lahf add mov in cmc rcrl push popf add pop insb xchg outsb repz aam xorb ret andl pushl and test xchg mov jns ror bound dec sub jmp jp enter inc mov adc js sbb mov bound dec pop push push into lods arpl mov jl adc cmp xchg bound add shrl call and aas cld int3 xor mov mov ja dec cmp mov sub sbb mov nop fldz add loope dec ss mov mov inc cmp (bad) jb inc dec loopne mov pop pop clc sub pop ds nop add inc sbb push cli mov xor stos aaa lcall jp mov xor cld adc and or mov cmp mov adc cwtl inc js dec mov adc loop and add inc iret and push add (bad) sub leave xchg mov add jo inc mov adc or xchg loope pop push pop add dec call adc lods (bad) insb and clc inc enter leave adc test mov lds mov dec cmp dec xchg push popf or dec in test dec fiadd loopne in jb sub pop (bad) sti gs in (bad) mov xor xor popa adc imul dec in lods sub add jl add sub mov sbb dec xchg test stc jae lock add ss sahf arpl push and int3 cs cwtl xor test cmpsl mov pop add adc dec std movl mov or and dec push dec mov aam inc dec imul ficom xchg push cmc push (bad) jnp add pusha int3 add inc sub mov bsr hlt aas or pushf cwtl xor pop dec dec test js adc ss jo pslld cmpsb (bad) daa inc xchg sarb jb nop pop stc jo (bad) mov mov fcompl cmp adc jmp mov data16 mov push mov and lds fdivrs test daa add push clc mov xchg test orb lret sarb fwait sbb cmpsl icebp rcl fdivs pop dec nop adc nop setge cli inc ret mov in out jmp adc jo lahf xlat jmp inc clc nop jo and and pop sub pop (bad) inc stos cmc and pop mov add push cwtl mov xchg clc add pop sub dec fcmovne add out push (bad) ljmp rclb popa cmp and push icebp paddd cs inc out std fsubs sbb ror test pop xchg mov xchg add (bad) hlt clc jmp cmc inc pop cmp movsl adcb push test xchg rolb jnp xor pusha xchg call in loop addr16 enter mov adc fstps mov loopne and std rcrb pop push fiaddl in mov add addr16 xchg cmp lret add add cmpsl out repz lock mov je mov sub std (bad) sbb jmp fadd std imul (bad) arpl push pop adc adc or test test xor mov mov enter (bad) shlb pop (bad) push test push dec lret push loopne or les data16 outsl inc cmp pusha sbb sub adc push or imul mov xchg xchg xchg add mov or mov push or sarl adc jmp insl xchg xor adc mov cld imul lcall adc mov es adc pop call sbb cltd (bad) mov lods sub jnp xor out inc push repz sarb mov icebp int3 add ret nop jp test mov push (bad) xchg rcrl sub mov bound mov add ds mov test fildll add data16 sbbb (bad) dec mov mov test jnp rolb jo mov xchg les jns outsb and arpl vmwrite or mov push aaa sbb mov popf add leave sbb or add mov mov out outsl and popa mov das test mov add push xor jno lock add push add and mov repz sub jns aaa push push mov add repz (bad) mov repnz jle popa incl mov fsubl add pop sti clc inc push jecxz aaa jae cmc add repz popf aam imul mov out pop xchg fdivrs hlt dec cmp subl call imul adc or js dec fs cmc pusha lds pop repz nop cmp lock mov or xor mov push jb lock adc into add das imul mov lock add cmp jns push add cmp add mov xor jnp dec mov adc daa movsl and aam and movsb push lods andb cmp sbb rorl mov cmp sub iret or rclb cltd fsubl pop xor add sub jp or in cmp rcll clc cmp xor movsb adc fsubs sbb test movsb fisub sbb into jns adc and push mov popf mov add cmp loopne addr16 push lret xlat rcl add cmp or fdivs mov xchg movsb repz mov out pusha test repz jne mov push mov push movsb cld add out xchg xchg sete cmp xlat xchg sub cmp xor aas sbb outsl mov push sbb inc jge and jb les mov and ja jo icebp arpl lock adc sbb popf push add mov fcoml cmp cmp adcl mov sbb pop aam loop fldpi das (bad) popa hlt cmc push and add lahf ljmp movsb stos sbb in xlat insl lds addr16 adc mov lcall cltd sarb das shll cld xorl adc or fdivs insb xor dec mov inc test mov push add test (bad) push mov inc adc ficompl into sbb je pop adc out pop sub and pusha push xor mov mov dec in jmp mov dec dec cwtl jl test enter lds ds sbb and loope (bad) sbb hlt scas cmc lds sub pop iret dec outsl xorl jo (bad) nop and sahf add outsl (bad) fs (bad) clc mov (bad) xor cltd mov fbstp add or xor mov sbb xchg ret rcl sbb xchg jb adc adc mov icebp nop pusha pxor loope cmpxchg pop add (bad) int jne,pt mov ret xchg fiaddl pop (bad) sbb cmpsb dec test pusha popa nop movsb dec aad add stos mov mov pop and and xchg subb lods add (bad) rcrl das pushf inc and dec adc cli std or popf inc cmp cmpsl icebp dec inc test imull xchg inc mov fisubl aam mov (bad) flds cmp nop gs dec mov in sbb or test loopne mov sub push push sbb jmp imul cmpsl (bad) (bad) inc xor xchg inc ficompl and out lds dec rolb cmp cld js cmp in add dec (bad) fcompl mov test or add xor mov dec pop cwtl jl out mov inc inc dec aad push gs loop push cmp fimul xor dec insb pushf adc aam pop enter les lds xchg sub movsb inc in cmpsb popa call lock add inc lods mov aaa es icebp adcb cmpsl arpl or pop and xchg sbb das jno jo stos ss jg xor inc xor xchg add xor in mov xor inc (bad) loopne jno call pop out push and pop push ror xlat push cli cmp stos xchg nop out loope rcr icebp js xor sarb rcll xchg repz loope xor cmp push lock pop pop mov mov shld inc jo pop push cwtl (bad) cmp or inc mov repz mov pop xor negb jmp mov pop andb add testb xor adc fs pop push jbe mov mov add inc xorb or pop outsb mov inc int fcomp call (bad) adc leave clc mov adc fprem inc add xor dec and push cmp outsb mov loope mov push pusha push movsb (bad) and fdiv sub aaa and mov enter jo fcoms lock dec mov mov adc adc mov inc jl or jmp test push inc in (bad) rcrb mov pop mov xor pushf jge or lcall ds rcrb mov and jo out and push test in pop and and mov add xor inc xchg jle dec add imul sbb mov xor test fs loop and iret sbb push (bad) and or inc fs add mov cmp in (bad) cmp rcrb lds notb xchg mov xchg mov sar sub cmp shrb or xor xchg mov sbb sub subl dec add in adc jmp push dec or fidivr clc push pushf lods fs pop xor out mov cmp rcrb aaa and add add scas jo dec cmpsl xchg sbb and push dec clc inc lcall mov enter jae popa nop dec popa mov and xchg dec mov (bad) pop cmp xchg icebp xchg and jne add cmc adc xchg dec mov cmp mov mov out add add outsb jo sub data16 inc xlat (bad) add xor sarb stos pusha add add mov out cmp ret mov push jge lret mov dec push cwtl (bad) aas add aam push out outsl mov cwtl mov dec sbbl add mov leave nop icebp adc inc and pop mov stos mov pop push xchg pop mov push movsb add xor imul std add adc scas xor out adc xor push lock cmp ret (bad) aaa data16 xchg xor rcll lods push inc pusha pop cwtl js xchg outsb mov iret ds dec push mov enter inc xor pop cmpsl fisttpll pusha adc mov mov dec xchg repz (bad) negb (bad) loope test push sbb fildl mov test lock xchg or add cwtl jg dec or jb pusha je mov add cmpsl adc pusha rorb dec add mov add rcrl ret cmp jb sub les jno repnz xor mov jo xchg xchg rolb or mov test adc cmpsb mov (bad) (bad) mov mov inc mov movsb adc enter adc mov inc cmp orb dec push adc mov les pop sbb sbb jb mov jecxz popf sarl mov push mov inc inc loope jbe xor ret mov jb mov out mov add inc mov mov inc fdivl xchg leave aaa dec add mov ja push pop xor ret test faddl push rcrl add add add push cmp in mov cld in popl mov mov pop cmpb adc insb push and inc push cmpsb and sub or mov sti fucomp jmp les xchg sub add dec jns push mov punpcklbw sub jge adc data16 imul shll les and xor test aad inc stos mov push inc adc ret in pop xchg xor jmp movsl pop roll cmc pop lahf aam xor mov add mov cmp out add clc mov lock jl aam pusha and repz lret or jo enter push pushf jge stos loope mov pusha add mov cltd orb imul lods dec push sbb and sub mov roll or sbb inc xchg pop xchg xchg xchg add push pop and fwait or jmp and mov nop add lea sbb sti fnop or or adc dec enter add adc js sbbb jo pop (bad) in or pop inc xorb shlb xor dec pop push and enter push mov out outsl pushf and in loop or cwtl icebp sbbb pop jmp mov (bad) outsl jb popa data16 pushf mov and jle add mov mov add es xor loope mov fs aas add jns adc sarb push movsb add ja mov and xor int3 addr16 cmp pop dec sarb lahf scas adc imul fidivrl fstpl xchg arpl test into push inc inc fidiv mov loopne cwtl and jo sarl nop pusha pusha xchg testb and xchg dec enter sub imul lock je mov in icebp es cltd pop mov xchg clc test sbb (bad) cwtl data16 dec dec dec and sub mov mov and cmpb pop out inc (bad) jae sub xchg jbe adc iret xor adc xchg xchg dec bound in mov mov int3 enter dec imul dec rclb sub xor cltd ss orb sbb add jno out xchg popl jo hlt enter sbbb outsb add mov mov lock xorl adc loopne rcrb add pop pop add pop (bad) clc int (bad) icebp xchg scas in cwtl add popa call stos enter jo or mov cmp cli and inc cld les lock add bnd fs push addb jg rolb inc pop out call hlt mov addb fnstcw jl ret add mov mov push lret (bad) push cltd add sbb push inc jg xchg mov mov pop pop push or sbb sbb xchg cmc shr add jne dec xchg pop in rcll pop scas and dec je js addr16 push pusha add in xor or adcb and mov push lock dec cmp adc adc enter nop or push push sub push mov mov dec ficoml movsl or cmp mov subb ja pop sub lds push or clc pop dec push inc mov mov mov sub lock dec add pop mov mov (bad) xor add test jle xchg jo mov lds ret add lea mov std or xchg add and pop int xor lock xchg les inc mov lea into pop (bad) mov sarb adc cmpsb pusha mov cwtl add mov js mov dec adc clc sub sbb pop emms int dec mov sbb xchg data16 push std jo push add xor sub rcl jle test jecxz jg and inc mov les roll mov add push cmp pop shlb sbb xor dec mov ja je xchg push (bad) add out dec rclb cmp lret js call inc lods inc ja cwtl out insl daa mov lods dec mov mov daa icebp aad and jecxz rorl and inc lret push das jp ret dec stos xchg mov test push ret into and mov push addr16 add test mov loop fildll hlt outsb cmpsb das cli push mov movsl mov xchg adc jae or mov hlt cmp lret adc xchg outsb push mov pop dec pusha movsb adc das mov xlat ret pop orl (bad) jno and mov pusha or aam cmp sahf mov test push mov cmp mov rcrb add cld add pop add pop in cmp cwtl push sbb cmp enter jo pop repnz inc das int dec xor adc fs fcompl dec xor inc dec inc int3 and aaa mov adc dec bound mov adc (bad) mov (bad) rcr adc lds sub jae and xor fsubrs cltd ret pop popf test (bad) xor rorb cli outsb mov cld insb cmp in push cmp cmpsl jb and and jne add or bound push adc dec dec jge xchg movsb dec dec inc ret jp inc sub les or cmpsl aaa adc std adc movl ficom add jo (bad) int jbe lods cmp pushf push in xchg js (bad) dec repnz sub cmpsb jmp and and lea mov mov lcall inc adc sub cmp push inc test jns popf (bad) movsb and dec sub ret mov insl or mov add dec pop cmp sbb dec mov jbe sub sbbb jb inc nop add ljmp mov mov add mov pop es pop pop call cmp enter jl pop xor or ljmp xchg sbb fdivs clc and dec add call sahf add fmuls sahf mov mov push (bad) sbb fchs int inc xchg bound pop (bad) jb and cmp cwtl scas sub outsb sub aaa pusha add adc out nop pusha lea sbb mov sbb inc out and les arpl out aas inc in (bad) xor mov lds push and loopne ljmp jnp int loopne cmp adc mov js jmp scas stos int shlb mov (bad) cmp jnp incl cltd es and mov movsl or sub lods or jle nop cmp inc or cmp fimul or pop rolb pusha stos mov mov scas pop clc je sub xchg mov adc and inc push inc movsb push mov (bad) xor sbb stos add sbb xlat inc lods inc and and data16 and int fadds pop xchg mov add into das nop in fsubrl cld xor dec xlat jo or adc rorb add loope push enter inc cwtl add test test mov (bad) jecxz rcrb call dec inc cld scas pop mov test adc (bad) and or (bad) rcr jb or mov add jmp mov sarl adcb cmp out or dec pop mov enter lcall sub mov push or test rolb leave add xor xlat xchg add mov pop push push pushf bound arpl inc add inc and lahf les popa cs jp movsl pusha cmp mov loopne (bad) mov repz fisubl (bad) into inc dec sub pusha pop push lock js mov sbb test push xchg idivb adc mov in leave int3 pop je lock inc sbb inc push addl pop cs pushf loope xor ss inc pushf jmp sub mov cmp fadds adc js and dec ja and pop and sahf xor xchg movsb mov insl dec push xor gs xchg or dec cmp adc rorb daa pop jecxz nop mov pushf or jno and push mov jo rorb pop ret sub pavgb inc ficomp inc fcomps push cmp inc sub fadds lcall and dec pusha inc clc pop sub push out xor and push jg pop pusha cmp and lret push sahf enter popf call pop movsb cmp movsb mov mov sbb jo mov xchg add mov cld outsl cmp adc test loopne and inc pusha jo sub jbe ret or cltd push js imul fstl mov sub repz xchg cmp adcl pop in bound pop inc push test push arpl lahf add or pop sbb mov pushf daa xchg xchg test mov daa jmp adcb jne xchg xchg faddl fistpll shrb sahf cmpsl and (bad) inc pushf adc bound pop adc mov jp cmp sbb adc push scas (bad) push je cwtl fs mov ss pusha nop mov add xchg popf sub push leave push les js mov enter ja jl or mov jle enter shll sbbb mov xchg lcall add outsb push lods mov inc data16 sbb mov and add dec mov pop cmp mov mov jnp xlat call pushf jne dec pop clc aas out or or push fmuls jge repz hlt xchg rcrl fxam sbb lock cmp xor fstl pop or sahf pusha xor pop push and daa daa jle lods fsubrl (bad) pop jecxz or mov out mov push and xor sbb or pop cmp loopne cmp pushf xchg sub sbb and jo pop pop push orb pop jge xor or inc es and mov mov stos push (bad) insl or incl add mov and data16 lret sub adc test insb or add mov mov sbb xor mov pop push (bad) je insb sbb (bad) mov ret sbb sbb cli aam leave or pop js dec push icebp push shrb inc mov or cmp lods nop sbb roll arpl adc fs int3 inc call add test lods jl mov or enter cmpl into adc cmp jp cwtl adc es outsb push incb inc xor loopne (bad) ljmp movsb mov aam test cmp jo xchg cmp out mov fidivr xchg adc dec data16 clc ret pop jbe dec js movsb lret adc es in popa push loop mov push add add and aas loope dec inc cwtl mov mov ljmp xor movsl pop sbb gs outsl push add (bad) dec mov mov imul jbe aaa fistp or lods pop popl fstps dec inc sub mov ja shlb shrb faddl jl imul inc sub shll xchg and nop add inc and roll subl cmpb sub pop in inc incb ret out sub (bad) pusha jne call insb cltd movsl stos ror iret push shrl test fcompl enter xor sbb push stos pushf push jo pop bt sarl (bad) pop cmp sahf sub jno adc cmc lahf push dec xor mov add dec push stos lock inc daa aad addl mov mov nop lods sub stos adc pop popa dec test jo (bad) cwtl push pusha movsl and mov pop sbb dec adc std jmp hlt call sti sbb adc das push les imul mov dec jns adc nop fcompl in rolb cmp mov mov xchg cmpsb clc sbb push inc jne push sub push int3 popa mov cmp mov je xor iret xor mov adc push insb mov (bad) lods daa nop and add stos ljmp loopne add mov call addr16 or in pop test dec inc cltd or mov in pop jmp nop nop mov es inc addb add aad cmp sub outsl cmpsb dec adc shrb pusha js in sbb mov cmp sub mov dec xor xor enter imul jo shlb int3 sbb cmp jmp cmpsl dec sbb jo jmp pop jne popa int3 scas inc mov inc cmc pop mov aam rolb les jne sbb xchg pop rcr inc pusha mov jne inc add cmpsb and push push mov sbb dec cmp pop push add int mov add negl dec cmp inc mov and sub cmp add js int3 or inc stc pop loopne divb (bad) insb xor js rcrb cld cmp adc dec clc (bad) adc push dec ret mov enter pop mov nop movsb cmpl xchg xor xchg xchg xchg call mov xchg fld pusha mov in or xchg jbe sbb cwtl add in inc (bad) rcll cmp jnp mov sub mov subl pop enter incb mov andb pop test movl xor add (bad) enter sub mov fdivrs mov out cmp cld test mov mov add sub in pushf or adc test jno mov adc pop mov pusha clc dec (bad) mov push mov mov sub push dec push dec fistp mov ljmp out mov mov jge dec lds adc out pop xchg mov pop xor orl loopne or test cld loopne pop fwait dec movsl pushf mov sbb and andl add jae mov xchg rclb push push (bad) stc mov mov call fs aas add lret (bad) mov movsb repnz std jb pop pop dec and es mov mov pop ja inc mov lock mov adc dec (bad) mov pushf jecxz adc inc pop cmp outsb jo xchg and push add fst jecxz inc and add push lods adc loopne (bad) into stos inc and fxch rcrl pop sbb test sbb inc mov jo add mov sbb mov cmp fdivr addl arpl sti adc out pop fsubp add push cmp xchg clc outsl jp xor xorl mov add cltd outsb fwait ss pop or push add adc xor push push pop pop xchg inc cltd icebp cmpb test xchg hlt pushf push pop out push dec fwait call ret mov int3 jae add mov ficoml aas loop adcb leave cmp mov cmp iret and mov jnp imul push jne xchg adc js jmp add scas stos imul sub dec adc xchg sar sbb (bad) js cmc dec sbb shlb dec push sbb das jbe data16 or mov mov push dec pop adc psllw frstor mov mov stos negb cwtl mov push sub adc dec jl and enter cmp xchg push sub lret cmp in pop enter mov js addb jnp les or fcoml adc jae pop push xchg sbb add (bad) jne test push jbe xchg xorl repnz dec lret test adc js push jg std loopne mov test cmp arpl test int3 fcmove mov push and pop jg test cs inc dec xchg mov adc add movsb adc nop adc xor lahf cmpsb mov push xchg jg pop mov pop mov jne dec dec daa leave insl add push stc dec adcb mov subb and add cltd and pop les inc pop or fiadd pop lea cmpb jne push popa pop loopne xchg pop cmp or cmp into adc jmp add xchg inc cmp lret hlt or jbe jne inc nop mov faddl dec adc add inc test hlt inc lds mov mov inc hlt mov jl popa das add dec scas lea out loop rorl xchg jl dec addl les js insb cmp pop inc inc fs ret int3 jns add fwait lahf pop sti sbb add jne and outsb add push dec aam dec (bad) cmp std xchg test xlat adc dec and xor orl sbb or adc adc div lcall insb loopne sub inc rorl sbb sub push sbb add inc add (bad) inc mov aam sti dec clc cmp xor (bad) xor repnz dec leave (bad) notb mov out xor xchg jo or (bad) jae xor test jl push movsl mov sub inc mov subl sbb add pop int addb rcll fcoml jge push in cmpsb scas sbb mov pop mov push addr16 and xchg cld jo int jecxz add scas xchg (bad) xor out inc mov imulb data16 sub lahf push in mov xchg dec (bad) lds pop cmp or mov xchg andb dec mov insb fbld in xchg cmpsl jo xchg push nop in call add push push ds cmpsb pop xchg sbb pop cwtl daa jo je popf les cmp add lods (bad) fwait pop mov push aam in pusha enter mov xor xchg sub loop add sbb xchg or xchg pusha bound pop fwait int xor and add push mov push stos andl data16 cwtl jbe mov cli je xlat sbbb sbb sbb jp bnd push mov xchg dec int hlt aaa addr16 add sbb loopne mov enter inc inc cld cmp les mov mov movsb or pop cmpsb clc inc aam shlb push cmp popa arpl xchg jo or pop nop (bad) rcrb add mov lods clc mov fdivl jge pop aas movsb sbb aad or mov mov push insb bound xchg mov push nop xchg cmp dec add sahf mov adc in xchg and rcll js cmc mov cwtl shlb loopne mov mov fs fidivr jo add mov popa jl jge add rcrl xor add test sub orb mov or sbb lahf arpl jbe adc pusha leavew mov push insb or dec push js pop ret sbb cwtl int3 add jmp orl bound jg repz inc dec mov mov cmp leave cmpl into jns or fs movsb pop cmp rorb jns les push fwait cmp js xor test cmp and cmp push addb mov stos jl enter test mov dec aas adc cmp mov cmp pop jo dec cwtl leave push stos scas call dec mov add iret gs cmp jl add lods cwtl xchg mov movsl or push cwtl mov ss pop mov (bad) clc loopne aam cwtl ds xor pusha cmp stos cltd fcoms mov push insb or (bad) cmp or dec push jge lret loope into push loopne cmp test movsb mov mov lret ret sub sbb mov repz clc add loope pushl in push pop pushf or lock fwait and push jo cmc (bad) sti or cli add cmp mov and mov xorl pop mov fldenv jl xchg xor cmp test ret sub insb int3 adc xor adc push cli dec fist or ljmp leave jno add les ret adc pop std scas push clc int3 or cmp adc scas pusha (bad) push mov jg push cwtl cmp out movsb hlt test xchg lock mov mov popf loop jge inc and rorb repnz test rcrb rolb jns mov and lods lock sbb (bad) push mov mov mov jne xchg inc add pop fcmovnu cmp shlb es stos dec adc lods add or rorb xchg leave cltd xor xchg sbb push xlat pop xchg xor inc add add pop add push mov add cld imul push add and aad in fs mov pushf mov add mov dec and xchg jo lods jl and stos test push inc adc xor adc and add shrb insl cld and mov clc and lds ret mov mov jg (bad) xor pop add aas xchg mov popf sbb clc jnp sbb xor pop mov fs adc pop mov inc sub (bad) or jo inc dec enter gs cmp push adc mov sbb popf ljmp pop push insb or cmp adc leave sub idiv inc popf dec out add sub sub fmuls mov pop jle and std popf adc lahf or jo xor call cs bound je into add inc pop mov xchg jo dec push jecxz dec addl push cmp cld dec add mov insb jg push jl pop lret pop in test hlt ret adc fdivs pop jbe pop sbb adc and int3 stos mov inc repnz xor mov jae (bad) or cld xchg in add psrlw mov out (bad) sub or cs cmp and or inc push add adc nop (bad) js sbb call js js es or cs fadds shr test jmp add push test pop repnz loop cmp popf xchg inc push pusha jecxz aam inc inc add out xchg negb imul iret inc addb fisttp jmp jge xchg and push add jnp xor lret (bad) mov mov and pop mov dec sbb xchg popa (bad) fdivrl pusha ror lea std pop sahf movsb fsubs popf add insb push movsl js or pop push mov sbb add lods scas in sub in add cmp movsb dec cwtl cli jae sub pop push mov subb (bad) in mov in dec pop lods add pop jbe push mov add sti cmp pusha mov xor pop cmp xchg decl mov mov cmp daa bound lods pop imul cs test aaa test pusha pop mov ds arpl jecxz xchg inc test scas dec jge xchg or or push sahf sub xor mov dec and out and jle inc and add lret stc leave addb ds push sti or into daa mov (bad) arpl pop pop out dec inc sbb or fimul jnp inc nop xchg mov dec movsl add jmp imul jp int3 jnp les rcrl or ds gs add pop out int3 dec stos and cmp add and sub and imul add sbb out aam add loope outsb aam xchg add xor cs std test push mov dec or sub add out popa scas or and shrl call cmovbe lcall cmpsb dec dec xchg aaa cld pusha stos mov or call push scas or in xor or adc adc add inc iret jp mov pop jbe std ret or adc jae (bad) cltd xchg mov enter dec movsl cmp and sbb (bad) push sub fcoms xchg pusha jle mov lcall and insb xor push push xchg inc push push push add jbe mov ret jmp or fwait and popa iret enter ret cmp ljmp fisubr cmpsb or sbb frstor jo sub xorl outsb and fs push fistpll data16 sub jnp mov and and inc rorb or in mov or xchg je inc popa mov add adc or aam or cmp xchg fcoml adc aam pop mov mov dec and sbb in xchg push mov and (bad) hlt xor pop call mov addr16 dec hlt push xchg clc inc (bad) fwait movsl loopne xor into push jno pop ret adc jns xchg fwait and sahf and movsb aaa pop sub jg rorl mov repnz push dec sbb dec xlat add add jnp push push push pop int3 insb fdivrl dec add sbb jl or rcrb data16 or adc sbb fs dec sub ret jp rorb movsb clc (bad) adc pop lock (bad) mov cmc add adc and cmp daa das int dec sbb insl es mov push xor push and and jb rcrb out pop mov add mov push add mov cmp and mov ret add or push int3 cwtl adc stc pop lret fadds iret fsubrl mov test xchg std sbb push in jne cmp lret xchg cmp fiadd mov in sub mov (bad) out xchg adc mov dec push pop hlt mov jo mov adc gs xlat and or xor in sbb xchg inc mov repnz mov mov jno cwtl sub dec cld xorb or push add jne jle pop (bad) xor xor in add pop (bad) sbb imul add pop dec das add adc jo push or add inc dec (bad) xchg push pop inc (bad) hlt pop dec mov add test cwtl add (bad) cmp shrb daa pop loope add dec sbb pop cmc mov push dec mov add xlat test sbb mov nop xchg mov je lret inc cld repz test lods cli mov or mov push leave int3 sub pop jne mov test movsb and add cmc out mov cld lret cwtl sbb pop pop loopne xchg pop lds dec (bad) fist mov fwait clc in cltd push and sub lahf orl xchg xchg callw jl mov xchg mov test mov sbb daa inc push xor dec ror adc cmp sbb push mov inc (bad) and dec adc jp shrb (bad) dec sub cmp cld xchg adc add adc clc pusha and out in (bad) adc lods push mov and arpl adc daa cmp xchg mov adc dec dec hlt add push or movsb fist cmp or inc and and rcrb fsubl loop lds popa dec in push xchg pop lahf adc nop dec mov xor jecxz shlb mov enter push push mov push test and or cwtl hlt sbb push adc test int dec xchg nop test adc mov rolb rcll mov test fdivs adc test test les test add repnz popf out ror arpl hlt cmp rep adc and cmp lret es loopnew (bad) lcall lock mov shr pop int sbbb aam add jno jge xchg addb loop push dec inc xchg cmc (bad) inc cmp ljmp and lret fs pushf push push das xor repz in or jecxz sub insb adc jno clc pushf inc inc sbb inc sub repnz js push repz fdivr mov into mov inc jp shll jnp ljmp dec adc cmp (bad) xchg sti leave add sbb aas jo xor pop inc int3 adc ficomp (bad) adc dec (bad) sbb sbb (bad) je add repz (bad) popa xor cmp or jnp or xchg mov add mov jb pop mov mov mov push fimul sub out sub sbb ss insl lds out adc mov rcll loop mov rolb (bad) enter pusha ds mov and sub nop jb dec adc and retw clc daa mov mov push push (bad) mov jl test or xchg sbb (bad) test (bad) fisubl stos addr16 test clc push xchg mov pcmpeqb cmp sub and sbb pop xor repz rcrl add push in add rorb jmp adc adcl or push pop xchg jo ret xor push mov cmp sbb adcl lret scas mov repz mov mov sbb sub rorb dec xchg ljmp or cmpsl icebp push adc add jne gs lds shrl (bad) add (bad) hlt add inc fwait sbb pusha or adc xor mov xchg fdivs and xor out mov lods xor push mov xor insb push movsl arpl (bad) js xor push add mov xor (bad) push xchg mov mov rcll adc sub pop std jp out adc mov inc sub lock sub movl mov nop inc (bad) fwait in (bad) cmp adc cmp sbb sbb (bad) int3 sbb cmpsb adc loope loopne cltd sub push fs mov push pop shl es xchg push pop cmove insb or mov push adc pop mov arpl or add add lods adc stos sbbb repnz pop pop push sbb mov (bad) (bad) enter imul add (bad) cmp and shrb or mov mov ss aaa add xchg or int3 sub popf or xor jo dec mov pop popf inc pop clc ljmp leave es arpl sub sbb mov push cmp jbe push jmp repz (bad) sub fdivrl add jl dec sbb mov mov mov jns xlat or pop push mov (bad) sti cmp add test add mov cli in das mov add data16 add xor add sbb sbb scas lock fdivs adc rorb push and push inc packuswb cs mov mov test dec xchg and popa push dec out mov push mov add (bad) jb outsl (bad) test cmp dec pop sbb hlt clc xor lcall add imul or lods repz sbb loop add jmp mov jne pop and inc mov sarb xchg push (bad) mov dec jl lods dec rcl inc or nop jl adc rcll adc cli pop push and adc xor adc je or imulb push jg movsb je (bad) fcoms fs mov inc mov loope cmpsl adc popa lea aaa jns fnstenv add jb sbb lret dec adc push or fcom adc lods scas into clc std es lock rcrb xor cs and in mov into adc jno add xor xor ficomp push imul hlt xchg cmp movsl or in push inc pop gs sub popa xchg int3 or sbb xchg xchg adc mov dec pop cld dec pusha lret mov mov add adc cmp addr16 insl xchg cmp mov (bad) fsincos xchg jo les xchg xchg dec rorl push loopne and fildl movsb cmp cld inc mov ja mov andb aam insl or cmp repz inc in cmp add test mov jnp add cmpsb (bad) mov adc push (bad) mov cmpsb dec pushf aam (bad) in xor test lahf or repnz xchg xchg pop enter add xor cmp and cmpsb (bad) cmc dec loopne sub std movsb add pop and ja pop repnz mov xchg pop jno push jb cvtps2pd aaa out in add stc les ret stos les xor test scas sub sahf test fs jp in rorb jmp leave push addb popf fs hlt rclb and addr16 fadds cmpsb repz add pop inc adc gs jle xlat rol dec es xor in lods xlat and push repz add int3 xchg divps xchg jecxz push sub dec es imul pushf or mov add mov inc test dec clc (bad) movlps or ja inc adc (bad) sub mov jmp cltd and or and out push pcmpgtb dec (bad) arpl test and dec lods mov ss movsb pop or inc sub pop mov and aam sub dec and push fs mov popf call mov xor repnz loopne jl aas call insb mov sub cld mov hlt and adc push jb cmp pushf call lahf data16 stos (bad) addr16 add movsl in sbb pmulhw (bad) mov (bad) xorb lea stos push lods jg lcall fsubrp mov dec jne mov hlt pop in dec cltd mov pop add jmp sub loopne cwtl adc popa bound push mov repz fs push mov jne sub aam ljmp fs xor int3 cwtl adc cmp push jne ljmp add and jb pop and cmc sbb mov pop je pop push in push cld js mov pop pop fstl fcoml adc mov leave pusha loope icebp testl mov pop or pop les mov sarb inc andb cmp sub push jne nop mov mov popf fwait xor arpl add ret pop sbb dec cld out ljmp mov xorb inc mov xchg xchg ret mov pop pminub jecxz inc les pushf clc push xor mov rcrl dec cmpl das push jb addr16 or fadd data16 orl sbbb lahf cmp cmp ret xlat push jns std and movsl jne sub sub adc sbb clc pop or lcall lock add xor adc lret sub lods movsb daa pusha sahf sbb dec scas push adc sub push in mov or mov fstl sbb fsubrs rcrb pusha pop cmc pop and or mov xor add jg in daa push das dec mov (bad) sar (bad) or movsb dec mov je push das jge jmp pushf adc push sub iret ret sub xor test or stc dec loopne pop push or add jmp xlat sub pushl mov fcoms je int3 add inc lods notb jno out mov mov js dec ret or mov dec cmpl adc xchg insb cld cmpb add das xchg pop inc lods mov test mov ljmp adc pop lret repz jle cmp sbb (bad) push add push inc jge les lcall xor les jg aaa and fxch aam mov or rcrb push in bound das test rolb push rcll movsl fsub fwait push cmp sub dec ds or and jo std sbb (bad) frstor lahf sbb jae rclb (bad) jle dec cld and mov jp or add out or mov push add pushf mov or cmp repz dec pop dec dec fcoml mov adc sub sbb xor cmp orl xor nop lods adc adc xor sub mov add xor add xor addr16 inc fsub cmp cmc or push xor push jge jb imul add inc or clc insb dec pop popa les pushl dec add cmp xor jb movsb push shlb test lret cli cld mov fldl pusha mov repz (bad) sbb je add aam ret movsl call cld or decl cmp xor jb cwtl inc into fistp sub sub push insb push jp add dec push in push inc mov vpmulhuw pusha leave scas cmpsb das fldenv shrb dec movsb inc fs fisttpll jle lea (bad) stos mov hlt icebp clc test inc mov cmp imul pop mov pusha mov adc dec add push pop leave mov pop inc sub xor xchg sbb out pop les lret jp or imul add (bad) mov inc xchg pop mov or xor lods enter dec adc add mov in pop daa or js int3 cmpsb fmull add mov lret pop outsl push inc movsb bound add inc mov mov sahf sbb lods jne mov loopne cmpsb pusha (bad) mov or jp clc lock mov out jns fidivr dec xchg (bad) lea mov push rorb aad pop mov (bad) mov sbbb inc cltd movsl adc dec fsubrl fs aas add fadds push lock fdivrp sti adc add jns dec inc add mov or push cwtl pusha xchg sbbl rorb jno fldenv dec je sub outsb adc aas cmp add fidivr icebp and inc pop or cwtl cmpsl sbb js dec and push movsb add pop xor pop imul insl fcmovnb mov cltd bound push jns jp pusha xchg xor loope in mov sbb xchg in add pop mov mov push lock data16 add popf mov mov (bad) in xchg aas into test cmp pop adc xchg mov lcall rclb dec cwtl add in dec cmp dec subl jge call mov fldl lcall int hlt sbb lret sbb push dec push je and test jbe das stos mov push push inc sbb xchg and jnp mov subl mov adc or add in sbb mov out xchg jo (bad) jno cmc sbb daa jmp adc inc push cld clc and cmpsb fwait push mov (bad) nop lds and mov sti les aam sbb inc dec sbb mov daa test jno push jg cwtl mov or sbb (bad) cwtl add inc jge jecxz xor push (bad) (bad) xlat push bound or xchg dec mov xchg mov pop push xor movsl or cmpsb sub mov or ret fisubrl daa sub icebp lods in loopne test mov loop data16 test in xor sbb or addr16 jns or lcall fcoms push movsl xchg sbb nop scas sub fbstp cld lcall and pushf dec jbe je pusha loopne or fcoml xor bound sub push sbb adc repnz or jo inc arpl add mov xchg loope xor cli mov pop add push jo mov or push pushf mov rorl dec cmpsl (bad) mov pop add ret adc call out arpl xchg cmpsl pop es push stos and insl xor test in and sti les cli mov cwtl cmp push cltd je call enter fisttpll push int3 adc movb gs adc js sar inc es rorb addl daa pop mov xor bound jl adcl lcall add adc adc cmc xchg pop cmpsl sub orb jb sbb popa fild lods push add outsl adc sbb mov inc rorl fistpl xor add xchg push lahf lret mov mov inc dec add dec scas ss or push sub nop inc add in cmpl (bad) pop or inc iret fwait hlt sbb pop inc mov jae xchg stos fcomps les adc (bad) mov add push push push mov lahf jmp dec xorb add rolb fiaddl add lcall daa lock lock adc cmp pop add mov pop fs inc cmp sbb pusha mov push adcl ret jne and add push mov mov and pop xchg mov add or xlat adc out adc mov test inc lods pop (bad) cmc test ss cmp or pop mov pushf nop and in sbb int3 add scas inc jo and popf nop imul sub mov cmp lds out test call stos sbb stc imul cmpl cmp add mov sti xchg stos mov adcl insb gs jl xchg js sbb mov cmp jb and icebp dec and pusha mov add push or insb lea andl pop sbb jp enter or hlt ret in mov adc xor and add stos lea sbbl repz sbb orl jg aad loopne sbb ja cmp inc loopne imul ret add mov cmp rorb pop sub (bad) cmp imul test rorb pop lcall loop adc dec into and (bad) loope call (bad) xor xor and jmp pop mov mov leave and xchg push scas mov mov pop sbb sbb add mov mov jg jae mov lods sub cwtl mov inc loop hlt inc popa into out add loope mov ja push pushf rcl jl cmpsl cwtl push jg add push adc mov lods (bad) aam add mov push mov inc sbb lock add mov adc ss jne push rcll inc pop inc jb add mov repz lcall or mov mov je xor pusha push dec inc jp popf adc jl mov or clc cs dec hlt and int3 inc in (bad) push or push sbb sbbl leave push or pusha xchg sar xlat imul xchg lcall or test pop mov dec mov aas push xchg xchg inc lock push lret fwait cwtl add repnz sbb aas pop xor cmp push ret jns sbb sub pop fs sub add imul cld sub pop xchg jmp xchg mov (bad) jmp sub inc je in and jge dec rcrb test add inc insl or jno enter add pop jae ss mov or mov add jmp daa or test dec sbb rclb out xor or xchg add adc mov sbb or and mov sbb inc or add push (bad) scas push jmp sbb pop sub jle cmpl and fs daa dec (bad) push jl adc rorb loopne loopne int (bad) inc pushf add add xor es add xchg sub mov add adc ret mov cmpl pusha xor mov mov sub pop or dec jmp and or orl push sahf xchg mov inc adc lods test xchg js cmc (bad) repz push xchg pushl jle les inc sarb add test push cmp push les xchg sbb or inc jae arpl add and into xchg adc sub pop repnz jle mov outsb (bad) add mov sbb jbe lock mov jmp cmp ret fisttpll jae xor sbb jo incl lock inc mov pusha dec lea pop jns mov xchg pop adc ss xor mov push outsl xor fidivl out test jg test or mov adc pop cmp xchg add xchg and pusha inc add shlb add loope cmp (bad) dec aaa js inc (bad) out (bad) jbe or pusha out xor jo pusha (bad) xor inc or (bad) sbb repz jecxz nop fwait push and sbb sub mov lret add xor mov or adcl adc sahf pop or push or mov pusha add jns int3 inc clc inc testl ss movzbl inc or ds and stos pop cwtl mov mov icebp jae jne dec add arpl (bad) jmp enter dec adc shll dec pusha add jae,pn call adcl mov pop or inc outsl insl pusha popa or addr16 das and add cltd cmp mov daa mov and sbb or ljmp hlt jb pusha into mov mov pop sarl mov adc pushf jno sqrtps and in cmp add adc mov jg mov add outsb int pop pop adc stos pop in mov lret sbb mull in insb and adcb fild push mov sub in lea push fcomip xor loop inc pop jnp out and pop es pop vpackssdw inc cmpsb pushf stc push pop ja negb add adc add xor cli outsb and adc decl mov push ret and mov mov icebp or inc adc fstps ret or test adc jns je add arpl push adc les movsb push sub sub xchg outsb add xor and jp mov add mov sbb pushf (bad) sbb imul adc adc inc (bad) xchg rcll notb cli sbb or rorl adc push cltd cmp sbb jecxz mov mov in mov adc leave lcall int sub into jbe push je mov rolb sub xchg call mov movsl push ja sbb xchg xchg mov mov dec je add sbb push jo testb cli jo push rcrl lds cs jge mov jl or mov outsb js pop inc inc div sbb (bad) dec jmp movsb pushf es push add mov inc and hlt pop aas jg xor jne pusha dec fsubs add mov sbb sub fistpll outsb imul push xchg push xor test mov std add decl imul dec add clc pop test add and out mov loopne fcoml (bad) es inc and sbb pushf sbb sub pop bound inc add lods xchg and repz and jnp or andb nop (bad) mov mov cmpsl imul push sub hlt and sub mov (bad) into xchg (bad) or lcall mov dec or loope daa sahf adc adc or xor nop mov sbb add in loope in mov ret sub mov xor (bad) push xor pop add jbe es mov fisub sub dec sub cmp (bad) push movsb add leave in mov inc outsb sbb xchg dec imul (bad) call and ret xor lock push mov inc adc cwtl (bad) sbb and push cmpsb mov clc arpl or adc test in adc roll sbb adc rcrl sarb xchg sti (bad) dec cmp jae fdivl pop add cmp lahf cltd xchg add lahf das pusha add shl and inc or fnstcw sbb and xchg (bad) sbb and mov xchg dec xor imul rol arpl rcl push or ss cmp setbe adc pusha es mov push gs mov sbb dec dec or adc add fs les xor dec incb adc fcoml repnz cmp (bad) je mov push dec inc mov and stos add pop adcb imul loop addl dec outsb pusha mov adc cmpsl mov or mov cmc adc fimull addb inc mov push lahf aaa repz jno cmp cmp mov movsb xchg dec (bad) xor push or dec ss roll sbb jp,pn sub pop in rcll xchg xchg mov pop sub pusha ss xchg jmp sbb mov jns pop aas movsl call fld (bad) hlt add insl inc adc roll add xor (bad) fisttp loop add (bad) xor add fsts cmp pop cmp and pop test leave mov arpl pusha or sbb in push add add add call mov push push mov and (bad) pushf enter jae sbbl movsl sbb loopne or mov inc add icebp rclb sub addb mov mov out mov mov push scas or mov dec adc es mov push adc dec fldl pop and push cs jns cmpsb and aaa sub test sub sub add xor sub add sub mov and sbb xchg adc or jecxz jp adc sti push and xor shrb xchg fisttpll xor test add enter sbb mov imul cmpsl inc and xchg mov add in js push jo,pt test or faddl dec insb sbb jg loopne sbb fnstenv mov dec add sub stos mov xchg push fisttpl or dec rorb cmc aad push roll and mov jb push int3 jecxz popa push add adc in push cwtl mov and pusha mov ss push add lock aad add popf rorl pop mov or and jno xor pushf sub mov pusha fistl inc xchg shlb test stos add xchg push outsl and sbb fimul daa add insb jp jg rcrb inc aas and mov or fdivl sbb repnz inc inc rorb or dec sarl (bad) cwtl jae cmp adc cld cmc addl add push (bad) ljmp sbb push push sbb les inc fmul push mov sub add es out push jae cmp inc add loope and sub jp pop rclb xor xchg and push xchg sub testl insb daa and aam jo pop (bad) je mov outsl cmp dec adc scas xor or scas rcrl mov or out sahf push add dec add pop xor xor push fucomi add cmp dec ret cltd xor sub jge adc popf xchg pop xor push xchg outsb sti leave test ficom pop jno popa sub add xchg jmp rcrb adc push pushf or pusha xchg outsb sbb bound add fisubr leave (bad) repz xchg cmp aad mov (bad) das mov add aam fs or imul jbe and das pop xchg and stos pop mov adc sub int3 jp (bad) push rcrl loop in sbb fsub inc adc ljmp cs rolb add mov sub add inc cmp lods loope stos xor xor stos xchg inc jl and cli orl add addr16 jmp adc sub bound inc je push cmpsl add imul mov (bad) loope mov dec or pop mov sub pop dec sub iret xor dec mov fmuls cmpsb lret aam movsb jae mov push pushf mov dec in test in jnp cmpsl ljmp in push xor add xchg or xchg dec cwtl jnp movsb xor adc xchg sub dec ret das push sbb out add cmpl (bad) cmp enter (bad) sbb mov nop mov test stos add pop pop es neg add imul (bad) adcb xor lods shr pop or scas inc xchg dec repz and cmp mov mov outsl repnz test (bad) pop cs inc push sbb dec jg or aas rorb loop or sub repnz add loop push pop stos arpl xor xor fbld xchg in orb mov dec dec enter mov call xlat jge and test sbb or arpl or aaa pop ret sub inc cmpsl push sub jae sub inc pushf je sub or xchg jmp dec xor xor daa mov popf cli rcrl or adc lret or mov sub or mov and pop push add mov (bad) lret push aas stc jae pop xor pop dec inc orl insl addb add insb mov icebp push into or dec inc cmp testb gs xchg dec pop cmp add (bad) adc cmovns (bad) arpl mov ret cmpsl call pop add loopne popf add mov insb dec xor imul push dec xchg jne jae xor dec add movb sahf lods or int mov insl hlt add mov bound popa je jmp das and lock mov push pop rcll pop in xchg fsubr orl repnz or xor mov popl or hlt jl push dec idivl add notl jno xor xchg nopl xor arpl rcr sub or gs push out and ja cmpb push push stos ds mov fsubl pop cmp (bad) aad cmpsb les and aas push int repz sbb inc insb sti in dec xor ds movsl add sbb frstor lock enter push jae cmpsb imul add push add xor scas push fdivl subl ja ljmp xchg sbb (bad) jg or cs pop push stc xor pop pusha inc and stos lahf inc cmp xchg sub push pop sarb add mov push mov scas into push test loope test pop inc and push inc jno pop scas add and xchg mov cli js (bad) and imulb inc xlat rorb xchg arpl push sbb rcr xchg fs in and scas cwtl mov ret add add stos mov dec xchg inc lret add and pop int3 nop fsubrl div push jg add dec push mov iret xchg movsb xor pop (bad) dec push mov lods dec inc inc pop mov mov neg push xchg sbb mov shlb pop in adc lods adc add pushw test or lds and aam mov adc mov pushf mov and addr16 push push pushf lret adc shld js fs and sub inc mov xlat insl push and adc in icebp ret icebp add cmp adc add ret mov mov push add imul or xor jl xchg jp jmp jecxz add call pusha ja inc jo mov sub in pop push (bad) add rcr repz or andb add push push inc xor mov adc xor or sbb lret and movl dec lea mov popa pop pushf mov daa mov rcr pop or push push push sar ficoml clc ret cmpl add les fbstp jmp pop scas leave orl loopne sub repz (bad) xor cld fprem1 std jle mov push stc xchg cmc mov push push iret cmp out jno push mov pop xchg enter in addr16 mov dec pop testl lock add sub ljmp mov in jae mov push (bad) or push pop push out mov pop push aaa jp loopne push mov imul adc loopne clc sub pop pop jmp inc mov jle sub and pushf dec push cmpb lods cmp pop addl pop push ss sub sub insb cli loope movsb jnp pop mov mov outsl ja xor sbb (bad) dec insl and clc push push add jo jg inc rorl add call mov sti scas call add inc or pop push scas lret xor in dec pop das cli and rclb or ds clc aaa add push mov cltd xor and pop push outsb jo rol dec cmc sub outsb in pop pop xchg pop in dec jp sbb (bad) je pop or mov test add add pop repnz js dec pusha ret add test push dec pop mov or push and sbbb pop cmp cmp je xor pop rorb mov insl inc jbe push push adc ret cmp dec lcall jnp xchg mov inc push jg xchg dec scas hlt lret jae scas cmpsb hlt push jmp repz jnp push xor mov aad xchg test aad rolb fwait inc pop mov inc mov lret in pop clc out add dec ja stos in in pop (bad) fadds adc pushf xlat inc test cmpsl stos pop xor fwait adc es sbb dec mov or mov add jl cwtl test es inc roll mov pop es pop lcall and mov jae imull iret in outsl addr16 pop mov icebp ret inc inc inc in cmp or push imul lcall mov scas popf enter lea in imul add pop push jno pop mov pop pop (bad) and add dec and push dec popf mov lods aaa add iretw mov leave sahf xsha1 cmpsb or cs sbb fsubrs xor push pop and mov (bad) arpl mov add pop and mov fisttp pop test fiadd loope (bad) mov dec nop mov mov xchg jmp mov mov insb ja jge inc or (bad) fstpt popf aam std jnp aad xor mov scas out shrl fcoml sub mov add push xor push mov xchg push ljmp int jb or arpl dec xor xchg add cmp shr or out pop in shl cmp lret imul les and pop out mov xchg ja (bad) sbb sbb jnp mov cmpps test add sbb push nop daa movsb imul cmpsb add (bad) pop jnp or dec sbb pop aad (bad) aam ret fildl push outsb push insl stc test pop fcoms jge mov mov mov inc sahf xor and pop scas jne mul call or mov push idivl add fdivr repz add sti lea dec mov push js mov daa dec ljmp push jae popa jmp adc (bad) cmp lds fstps mov shlb add and mov push insl sbb loopne pop testl rorl and movsl push hlt std in or xor add adc pusha xor roll pop dec add adc (bad) dec sbb xor sub push inc xchg adc add icebp imul test push in enter pop mov cmc out push or cmp push push movsl xchg jbe lret adc addl fidivl xchg pop push mov push popa jmp or fimull add push pop ficoml jl dec jg cmp or inc test dec cmp test and pop add xchg cmp punpckhdq dec or jnp xor cmp push sarl dec inc movsb and push jge insb leave gs jmp in and std adc inc popl pop incl (bad) push xchg sub xchg jbe roll add pop pop jo movsb pop mov pop inc or mov jg add out sub xchg jo test lahf pusha xchg adc jbe aas loope push adc mov dec lcall add cmpsl lret in cmp (bad) (bad) pop pop (bad) sar das lcall jle inc inc add mov (bad) mov jg dec lret pop insb jne shrl mov icebp cmp (bad) insl mov push movsl adc mov pop fist inc inc lods int3 int3 pop cmp push sub mov call pop insl xor fild ss add (bad) add add add (bad) je lret iret rorb dec data16 mov add add xor pop iret adc jbe add xorl aad hlt popf lds jle mov leave adcl movl ss adc (bad) add mov xlat pop fs lret push sub mov push sub xchg lea ds mov js loope push sub in and mov (bad) mov pop std ret mov mov imul outsb leave cwtl and mov iret or xchg sub into stos es js popa dec jns packsswb dec mov ret mulb or lahf jle fldenv add jo loopne push jp dec push stos inc and stos pop (bad) adc push push popf xchg mov bound push add nop cld cmpsb test add jmp and fisubrl pop sub mov sarb sub repnz mov mov cmpsl test test int3 sub loopne and popl cmp sub jmp add es imul xchg jae ds mov or adc push pop insb hlt jmp add test dec daa cmp addb xchg inc jp pop inc and or mov pusha push inc push pop push pop fimul add call add loop push and fidivl jno pop popf stos jb pop mov inc in stc adc ss sbb add mov push lods clc push subl loope dec std fmulp add xchg roll pop add and or push lds sub adc arpl mov pop cmc or sub lock push pop xchg (bad) mov xchg mulb fsub push mov sbb repnz add pop dec fwait scas cmp test movl shr jno ljmp lcall push mov neg add or jle xor add dec pop enter push (bad) pop decl in ljmp lret mov pusha adc sbb out and cmp adc mov jmp into mov and jns inc and in or rolb push ficompl add mov mov psubq or pop test out dec xor push cld jb popa pop and push and dec xchg pushf xor (bad) ss movsl ja xchg pop sbbl or jge sbb add jge rorb add scas mov (bad) jno enter cmp sbb mov push imul inc mov and mov or cmc sub outsb je push fs xchg (bad) adc sub dec xor mov adc mov mov insb dec or mov out out xchg je rcrb mov inc lret lret popa daa jg push dec lret add mov addr16 pushf xor pushf sub (bad) lods adc jne sbb mov xchg inc or cmp push inc test xchg xchg xor and mov ret mov cli stos mov dec ja test add mov repz cmp int adc in andl and testb lret sub adc aad jle sub inc dec push and or cli jmp in dec sbb enter pusha jae ljmp sbb or shr leave subl out inc and fisttp outsw pop sbb out movsl jmp xchg inc or outsb stos jae scas call mov movsb sbb cmp mov add add loope mov inc not inc add pop cmc shrb push stos or or mov jnp shr pop push faddl scas outsb sub inc movsl movntq das xor pop mov and loopne push mov sbb inc dec jno mov add icebp jnp dec idiv ss mov es ljmp sub cmp adc int3 call pop ret push adc fs xor bound push nop fcoms mov inc adc lea mov movl push mov pop ret adc inc push ret movsb cmpsl cmp loope popf enter fs or jmp mov and sbb cli mov push pushf cmp push and and push push ret pop ret xchg mov mov adc aas call add sbbl mov push les add cli add mov fadds movsl cmp pop push or cs cmp cli inc mov shr pop cmpsl add add aad shll int in cmp adc hlt loopne ret sbb mov orb bound add jae stc mov mov roll jo js enter fwait add jl clc pop mulb aas xorl cmp xlat add insb lods std popf gs push add loope push rolb push push and inc add xchg and lcall frstor sahf mov jne xchg inc cmp int3 push add adc (bad) fild (bad) lds xchg loopne adc lahf jl or jg enter sub inc jne js adc lret sahf add jecxz push adc leave sti pop and push mov add inc and sbb add ret imul test xor xchg rorl xchg cmp mov sbb dec out mov jl inc add inc mov jnp loope adc mov mov cmp lods adc ja add lahf (bad) out dec cs cmp add push jb mov jnp and loope or imul sahf mov dec add dec or mov xlat add aas insl bound jbe mov cmp add mov mov sub cltd mov add fwait push mov mov clc cmp adc jne mov add push test add gs mov add lcall add ror push rclb loopne xchg dec in mov fs je cmp pusha (bad) add jno pop (bad) push cmc icebp or std inc pop add mov test adc loope out and adc enter push nop out mov dec jmp add mov jno pop xchg ret adc fildll and mov adc lret push mov xor nop sub test dec fs test xchg insb in popa dec ror out mov int3 sub cmp push sbb in (bad) pop dec jo or lcall cli xorb nop mov inc ret and xchg cmp sbb outsb int3 nop push cmpsb les rol pop xchg int3 andb int3 xlat movsl popf aam fs mov dec add xor or push cmp mov mov lds stc leave mov mov cmp mov lea pop test sti mov lret cld call aas jae push mov and test leave (bad) dec xchg pushf sub xchg add cmp adc cli (bad) call pusha xchg fnstcw enter aas inc loopne or in push cmp inc shl dec stos lea xor fs mov jae xchg sub enter push call push (bad) hlt out lahf hlt dec inc sbb sar in imul sub cmp xor add xchg push fwait ljmp add fiaddl push push ds int stos loop add test sbb pop adc inc push shll (bad) xor movsb sbbb add lock cmp jnp dec mov sbb decb jbe jg pop loope cmc aad (bad) jne pushf sbbb adc xchg adc and aas push jecxz mov enter or lds xor inc clc sub int3 movsl cmp sbb add fld and adc sbb pop orb push dec push mov jmp sti cwtl js add mov int mov mov xor test pushf pop sbb jl add lret add lods lahf aad xchg jnp ficom add and nop iret sti mov pop aam jae mov dec scas add add xorb dec movb aas cld xorb inc lahf pop xchg inc jmp mov cmp stos cmpsl push jnp mov mov test xchg stos dec xchg push cmovo dec je dec xchg cmpl jne and outsl add stc daa ss push mov sbb fwait pop rolb insb lock loope test std sbb leave or les popf fistl aas xchg jnp push popa jae push xchg loope and sti or mov clc sbbl cmp adc notb jns lock dec je cmp ret out and jae jo lock mov cmp lock sub clc and pop mov push inc rcll add sbb ret lahf insb sub js in mov push icebp mov xor add lea sbbb add popa jns and xchg sbb mov inc ret fisttpl lret jnp pushf loope add push cld mov cmp xor dec sbb sbb lock inc insb xchg and cltd push xor adc push mov xchg inc cmpsb or inc sbb adc fisubrl fadds (bad) std pop repz xor pop int insl jl add adc pop jbe dec test leave decb push and int3 sbb pushf adcb xor imul jg sbb test cmp mov jge imul jae cmpsl and push nop hlt popa je loopne sbb ds dec test ljmp add and sub popa ss adc lods out enter popf (bad) sbb jae xchg jo sbb add add lods cld test and and cwtl enter xor ds and gs sbb add jo iret outsl aas stc sbb adc sub sbbl pop call cmp add sahf pop or cmp sahf jmp adc sub adc pusha adc mov sti hlt insl jno cmp movsl add xchg fiaddl jbe sub clc loope ljmp add mov enter shll mov dec mov scas gs or leave or push adc or push mov je outsb cld mov add popa jo jge lock test or orl adc int3 sbb dec mov enter cli dec test jbe dec add sbb sub add dec rorb nop or sbb movsl xchg js push pop or cs into and lock rcrb adc add dec ret mov orb jne ret add enter jnp insb xchg sbb fs (bad) mov xchg xchg cmp iret call je push xchg int3 into pop lock cmp ds roll nop movsb add outsl aad (bad) hlt jnp xorb je int loope addr16 adc fcmovnbe mov sbb xor insb mov mov sahf lds inc sbb (bad) or jmp lret (bad) insb sbb ret insl push leave and sub dec mov insb subb (bad) leave clc stos or and mov imul cmp (bad) stos ret jecxz ja cwtl mov xchg xor pop adc stos loopne leave jno (bad) dec dec scas xor enter leave jnp mov imul lahf fcoml sbb popa pop jno add add jae ret int3 in loopne pop xor adc es rcrl ds xchg mov jb and lock jnp je cli inc loope push sbb add and add lods shrb and adc jno mov test mov cmp or lock lock jno cmp add sub sub jl xchg ret test sub stos inc push mov bound (bad) pusha rclb je fsts xor insb add stos mov cmp pop mov int3 mov add pop cmp insb adc mov clc pop pop out popa sbb add daa fildll add adc (bad) fdiv add in jecxz hlt lea push (bad) enter inc cmp add add movsb je mov call lods pusha xor sbb mov insb push xor add adc fcmovbe je dec pop push mov aad inc in xchg cmpsb loopne in sbb sub push inc repnz mov test lahf insb aad add cwtl out push push or mov xchg addl daa pusha xor adc pop ljmp xor or mov mov sbb sti push nop inc or sub pusha jne jg cmp popa sbb scas push out hlt mov stos mov enter movsb les out pop in lods jge pop adc sti fld cli fs cmp mov xchg xchg add adc pop mov (bad) pusha xor adc adc and add in sub xchg adc xchg xor push jbe add adc dec add mov mov cltd (bad) mov pop shr or inc adc cld jno add out sbb mov lret test mov shrb and adcb adc push xor or js test add cltd sub test and inc add (bad) jbe push xor (bad) fdivs mov loopne xchg fs nop mov aaa in sbb jae out cwtl adc dec cmp (bad) fadds sub dec sub xchg cmp loope pop out lds pop es ror or xchg cmpsb outsl outsl xchg mov cmp mov add pop lea mulb mov repz add in mov add jge cltd xchg incb stos sub mov rorb push ja int3 and xlat pop push add or inc and jg add push push cmp push shl test xor mov shrb jae sarb lahf pushf lahf in sub xor cmp imul dec movsb add xchg add and in sti fs pop mov mov faddl pushf loop cwtl cmc push les test lret inc or js imul push jecxz xchg out add outsb test push test dec rcr ljmp jo sub mov jb ror add jl sbb add lret imul add (bad) sub dec test scas negl int3 fwait cwtl add loop and (bad) mov mov push ds ja or enter dec mov add sbb ret daa nop push mov pusha push loopne add inc mov cltd mov outsb mov mov xor adc and cmp inc stos into xorb lock inc lahf rclb out dec ljmp push jecxz test adc push dec mov xor stc jmp push sbb mov mov adc andl mov inc xchg in xor sbb xchg mov nop mov ficoml adc pop mov adc add jo inc mov loop jns add je inc lock enter adc or jg test out in sbb (bad) add in stos mov lret add in cli push dec sub xchg enter call xchg inc dec loope lahf out pop aam out in xchg add or insl sub fs rcrb sbb call inc arpl fs jg daa stos or xchg and mov adc popf test mov push ret jge and in pusha mov pop std (bad) mov ss jo js adcl jge cmpb add in or jnp dec outsl xchg adc pop xor aas jae cmp dec sbb jg or lret and add and push add (bad) ret fwait adc loope int3 push push mov imul jl pop and inc loope jnp imul test test adc cmp jnp pop insb faddp test cmp sbb mov ss xor popa push fwait xchg daa imul jo mov cmp push insb adc int3 add imul rorb mov push pop lahf mov xchg cmp inc inc cmpsl jae loope subb adc aam loopne call add je insb movsb inc sbb mov flds mov test mov lods jnp add adc fwait xchg or pop sbb cwtl and cmpb push inc mov add jae mov mov enter pop test cwtl push lret sti jo xchg sbb lahf pusha xchg sbb stc push add ja ss out jmp add aad mov loop jne popa insl stos repnz inc (bad) jae test cli loop or js,pn dec into inc xchg inc popa pop shrb sbb xchg inc jnp mov adc stos and dec mull loope,pn mov enter mov int stos pusha push inc sbb push jae mov pop jl inc mov mov add and adc test xchg je adc mov mov ffreep out sbb inc sbb fsubs sbb jo sbb sub lods mov dec inc or loop movsb test rorb push out cmp leave xorl int3 adc jnp sbb hlt push adc rorl out fwait and mov aam test pop or xor dec lods push mov fmul dec inc mov add into push cmp mov sbb jb adc xchg rorb push test mov fisubrl inc add add sub or out mov cmp test jne xor cmp pop xchg addr16 xlat mov push cmp ficompl mov jmp popa insb or (bad) xchg lret mov imul stos mov xor pop test mov or aam jae or sub xor ret sbb xchg pushf dec push add in xor popf (bad) mov add arpl pushf sub cwtl xor jns adc dec scas pusha dec iret and repnz mov cmp push xchg fsubs xor cwtl ret neg das and sub rorl ret adc cmp fisub pop (bad) cmp int3 out push leave lahf aas test pushf and ss inc xlat dec jnp push aam sub lock sahf (bad) xor (bad) lds adc fucompp inc in mov enter and nop add pop mov jnp mov int3 adc mov and or pop rcll aad sbb and cmp pop mov (bad) loop (bad) lcall pop add dec adc mov jae add outsb cltd ret mov clc pop sbb mov jle dec leave ja push cmp add jecxz (bad) movsb push js push mov add daa je pop push scas hlt xor push jae or lret call push int3 inc push sbb add ss lahf insl sub subl into cmp nop les or sbb int3 lds sbb jo mov dec gs or loop and add imul cmp add jae,pt or xchg adc adc je (bad) ffree clc test leave cmp xchg sbb jp sbb lods adc add enter jo xchg add mov icebp adc stos test in (bad) ret add cmpsl jge mov cmp pop faddl loopne adc ja pop lock dec sub add subb (bad) adc mov enter or loop clc int3 jnp and stos pop loopne clc inc orb stos cmc push rcrb aaa xchg and or add (bad) sti mov sbb push add lods push jae test or stos cmp out add jno je mov roll inc push mov lret mov lods push roll leave aam mov (bad) jo (bad) sub in pushf and in mov jmp sub ret pusha pop jae mov stos daa sbb mov pop and lret add out push mov xor pop out in int3 cmp inc jo loope inc push les xchg sbb ja xchg mov jb nop pop xchg (bad) in aam pop sbb mov push je repnz (bad) lea mov les dec cmp xor cltd lret lods xchg jge push pusha push movsb hlt mov sub rclb decl dec imul pop leave clc pusha fwait cmp mov les or adc add mov pusha loope jnp insb jecxz sarl add sub add or mov inc les loop loop xchg and in ret mov sarb mov loop mov loope (bad) fwait jnp call or rclb loope xlat adc xchg pop gs sub mov inc and clc mov daa sub and inc xchg mov in mov xlat ror sub jp push and bound (bad) xchg mov addl ret hlt and int3 xorl stos mov and popa imul loopne inc mov add xchg stos sub inc rorb add gs stos jmp in aad push pop les cmp cli or or push mov mov add or push sub out (bad) sub jae and mov stos dec or add fwait push sbb ret fs xor fisttpl fs adc dec fsub pop mov cltd jne dec mov cmp add cmpsb dec les mov repnz fld adc sbb loopne cmpl pop test aam call les adcb jnp jns aam xor stos lds xlat jno mov jnp push add adc dec jb lret jns pop adc mov xor mov mov cmp sbb sbb jecxz in add xchg ljmp pop xchg push xchg jno xor in loopne sbb inc cmp adc sbb adc in mov cmpsb jl stos (bad) mov or xchg add stos cmp lea ds push icebp scas xlat inc mov jb mov test or or lock out popf xorl stos imul and jg popa add cmp outsb call loop cli and mov cmp test ret jge or cmp push push in sub neg mov loope inc or icebp or movsl nop cltd rorb and icebp jl add push fmull andb or adc mov and mov cmp add out outsl adc aam call das cmc lds xchg mov dec loope adc xchg push sbb add pop out and xchg imul and and and jl jnp fsubl mov int3 (bad) adc push push mov test aam pop dec mov add cli xor subl pop cmp adc inc rolb enter mov rcrb jnp add sub outsb leave je mov nop pop xchg mov out lea les sar into (bad) loop mulb pop ljmp cmc call mov dec xor inc cmp (bad) cmpsl mov or inc jle movsb cmp hlt or aad push movsb aam in inc xor dec aas xor add jecxz (bad) jmp fs jg add ja insl adc or pop sbb pop cmp sbb mov lds bound xchg push xchg daa data16 hlt xchg adc sbb adc push inc mov nop mov add scas jmp nop sbb repnz push cmp xor hlt inc lret nop popa les popa jl movsl and in add pop cmpl cmp repz jo roll add mov dec sub and pop nop mov add pop dec dec sub test adc stos enter push jmp mov cmp les mov jge sub sbb hlt add mov adc addr16 pop cmovl and out das fstl shl popa jne mov sub cmp bswap ja pop xchg rclb push push int3 jnp mov push movsb les in ret pop sub fs jmp push aaa jae sarl dec xchg cltd or push fildl mov lods gs cli xor ret nop xor (bad) jae inc loopne mov add (bad) mov or sbb push stos arpl sub add lahf cld fadds lock dec mov xchg xchg (bad) jae mov stc mov sbb mov xchg dec pop and mov mov dec sbb loop add movb mov pop sbb xchg clc icebp jecxz sub cs sbb cmp test adc aam mov (bad) push inc scas out pop pop mov inc mov stos bound clc loope in ret movsb add repnz into fcomi add fwait leave pavgb push movsb inc stos cmp xchg test inc add fsub sarb loopne xchg push sbb mov test pop add mov jb mov adc or mov adc xchg stos push jbe fisubl mov rol jmp adc cwtl popa pop push bound aas pop sbb ljmp and fstl addr16 and xchg mov fstl mov sti lret jae mov sahf sbb jnp jecxz fcoms sbb adc dec test (bad) sti add fcmovb mov pop xor or adc rolb sbb xchg fiaddl xor and push lret aad xchg cmp and outsb mov xor leave iret mov add dec mov xor add imul je fwait sub pop lret pushf in pop and jo xor mov or jae mov cs or loope mov sub hlt push jmp aad (bad) outsl sub nop or leave inc add fsubr jae mov cmp inc and pop add xchg subl bound nop in mov in enter xchg cli and xor jae adcl loop jne mov jmp cs cwtl test (bad) lock xchg mov and (bad) leave lret pusha mov stc (bad) int3 pop dec mov movsb and or sbb sarb pop call sbb jae jns and cmp xor sti cmp xor add mov sbb xor inc add lret xchg jnp xlat pushf insb adc dec in sbb loop aam in es sbb mov push sub xchg les fwait pop and push mov dec es aas mov cmp pop mov (bad) or xor cli mov rcrb xlat inc mov je pusha (bad) mov or ret std call jle repnz pop dec mov or movl or movsb clc sbb js pusha mov in into sbbl popa repz faddp push or int3 ret lea pop add mov scas fiadd addl pop fwait pop enter stos bound leave jp pushf dec and lds stos jno and xor (bad) mov lods ds repnz and cmp cmpsl push mov adc mov or test cmpsb ret push mov adc stos aas or mov outsl ja add insl shlb add push rcll or adc mov cltd mov add xchg fimull js imul mov mov fmuls subl cmpsb fistp adcb seto je popa imul xchg xor nop sub fcomps adc mov rcll jecxz sbb (bad) ret sahf add stc mov lea dec das jnp data16 ret cmpl daa cmovae cmp hlt xchg out pusha mov pop leave cmpsb mov out xchg test xor lods out lret aam jnp mov push push pop (bad) sti (bad) fdivl jle mulb sbb in mov mov jge add jbe push cmpsl add push into out nop fwait adc push jb sbb xchg int3 adc aad jb arpl mov aaa adc les frstors dec add into fildl adc in lret or stos and hlt std push jp dec jb jl sbb pop and sbb bound int add std enter popa fs mov pusha stc push xchg and add cmpsl add add adc sbb mov test jmp sbb jo mov pusha dec inc cmpsl cmp nop js sub mov mov pop (bad) iret dec push add adc or ljmp or (bad) std add je icebp cs cli push add pusha aam mov push mov mov add mov add lcall mov sub xchg ret jmp xchg dec lds stos jbe stos and mov mov and mov aas cmpsb pusha cli push cmp jg lock mov xchg test and cmp xor cld out sub add cmp xor pusha inc xorl push in ja add xchg mov pop or pop mov dec movsb add xlat push movsl mov leave push or add jg jno and add mov inc lahf sbbb loop pop pop (bad) mov xorb (bad) cltd pop lret mov cmp jb cmpsl rclb or leave testl push pop int push lret sub sub cmp or mov (bad) xor loop xchg or xorb stc stos scas pusha mov aas jno push sbbb push sub sbb jl add and cmp mov push and inc orb bound push mov sub subl adc addr16 mov or leave dec xorb cmp pop sub push clc mov add cmp sti cltd loopne adc xchg dec and outsl inc mov sub mov mov xor or lods movsb mov inc in sub and xor adc pop ficoml repz lret dec add sahf mov push and and sbb jo and cmp leave orl andb add push cmp sub add vpshufd xchg (bad) int3 nop test mull mov pushf and testb (bad) mov xor les inc pop test or jmp mov mov adc or or mov and add mov add sub icebp and and jns add lahf jecxz test xor jb dec clc in inc fsubs mov jo xchg out jae daa pusha leave sarl pop rorl (bad) outsl test fcoms xchg mov dec pushf jl mov xchg cmp pop mov sbb lea and mov xchg mov add andl adc sbb into jo sbb xlat pushf les lea (bad) add (bad) mov ret bound cld inc clc sub les cwtl inc push adc pop dec dec clc and xchg mov imul lock popa and leave push lea mov sub movsb lock int movsl push cmp mov pop cld xor mov rcrb pop ret pusha sub dec loopne jnp adc pop and es xor push cmp dec or test sub push fadds mov or subb je cmp in (bad) xlat lahf adc fildll pop or pop inc repnz add xor nop pop insb mov les and sbb sbb xchg int3 xchg adc and inc adc add xor notl fcompl mov popf pop xchg nop sahf inc mov jp fldcw and sbb and add sarl add xor loope mov cld stos mov insb sub shrb mov subb (bad) aaa clc sar ja lock mov push cmp pop dec add and fwait sbb push mov clc cmpsb pusha inc sbb or adc rorb fisubr add xor lods adc fsubrs gs mov outsb jb push fisub push mov outsl or clc dec add jl inc fcmovnbe inc inc add lods or aad out loope dec adc push fcmovbe push push push jg lcall mov (bad) hlt mov mov bound cmp adc gs pop dec push mov rcrl loopne mov sub adc xor lock pop add push xchg mov lods dec xor adc cmp pop pop popa pusha mov adc shll push or das test stc mov mov and and dec jb or loope,pn rclb adc (bad) lret pop fsubrl fwait jp (bad) hlt fs cmp call sub sbb or aas test adc js pop cmpsl inc add outsb push mov pop orb xor movsb rorl pop pop pop mov mov mov loopne add fcomps les (bad) popf mov pop or add (bad) leave push or push adc jbe pop cmp sub inc hlt or inc leave add push add lock push pop mov aaa and xor stos call push sbb xor mov pushf inc adc xchg sub sub mov nop sbb hlt fisttp adc pop ret push sbbb sub push jae add add jb xchg repnz pop repz or mov sar jae jl and and mov popa lds push sub loope test inc (bad) daa repz je mov lcall mov push pop cmp sub cli hlt mov mov mov jae daa push sub in fwait adc sub and add test add mov lds xchg sbb test test das xor imul ja add xchg xor sub and and mov test adc lds enter mov mov or or cwtl out ja xchg mov sub jo and or add cmpl xor inc outsb pop mov (bad) xchg pop mov lret add inc and xchg aam sbb jecxz jecxz jl sub cmp xor push stos into inc sbb adc dec pop push call in mov cmp mov roll push mov mov js jl dec sahf aaa sbb add and add dec imul add mov add mov aam inc or dec fisttp sbb inc dec and clc rorb imul dec loopne add and dec jo sub sbb mov xor pop push inc es push jge pop inc adc sar aam jl mov xchg faddl pop pop enter mov lahf mov dec jle fldl adc push dec push mov add and jae pop es rclb test or ja mov xchg pop jno xor sub cld add test js xchg enter jl mov jl pop enter test and cmp subb sub cmp rclb mov inc sbb (bad) mov cwtd test mov aaa pop adc ret and and pop inc rorb mov enter inc pusha jmp je push call fnstcw pop or mov loope icebp sbb inc lock or mov sbb adc shrb cmp add data16 adc fisubl nop or add shrb xchg xor into (bad) jb sbb xchg dec adcb add std and dec mov and cs iret and xor bound fstl test lret divl in mov mov push jb add adc in jmp cwtl scas adc inc pushf addr16 hlt mov ficompl push sti or push lahf out rclb test addl fistl cwtl enter cli mov das (bad) xor ds push ror mov lock int sbb dec jmp ret gs adc lret test movl add sbb ret and sti mov mov mov jo scas add jmp or nop mov out mov adc gs (bad) and inc pop jno imul cmp test fwait mov add bound les push cmp sbb xchg cwtl or and pop add jge jb dec (bad) or cwtl iret sbb ret popl and mov or test je mov lods sub push sbb hlt xlat xchg js rorb push loopne pop scas xor dec sbbl and adc mov mov out lret lcall fimull and mov movl push (bad) xor adc sub mov add cld aas leave pusha cmpsl sub dec jp outsb pop (bad) nop jno arpl cwtl push gs add add mov mov (bad) sub nop xlat mov xor orb pop lods inc add dec inc int3 hlt mov mov mov sbb xorl or inc sub dec jb xchg sbb mov adc fs movsb daa lret add xchg xor add mov stc dec rcl xor fsubrs ret cwtl jl insl mov mov sub push xor push jno icebp nop push es idivb dec add inc push sub mov push std (bad) jo les enter cli xchg shlb addr16 pop cmp lea mov jno xor adcl inc and rorl ficom (bad) and add ja dec cs cmpb outsl mov sub jge or or test ficompl test add in inc fistpl idivb fdivs cwtl push mov (bad) inc les jb xor push lahf and xor inc sub mov in cmpsb jne dec dec push add nop dec adc ja loopne (bad) sbb adc lock mov pop cmp or (bad) stos ja lcall inc sarl cmp int pop imul cltd or rclb test inc mov push (bad) jmp cmp (bad) jmp sbb mov arpl inc push cmc fcmovnu dec cs or mov adc and adc or or lret add mov mov test test movsb cld push ror xchg dec les imul mov mov mov xor cli aaa and orl add xchg repz or add icebp int3 or sbb shlb mov and bound test push mov jl clc xchg and lds xlat je mov jle and bound nop mov sbb inc sbb cmp add ret sbb int js roll pop inc fsubl and add lcall push add add movsl pop cli sbb fisubr sbb insb lret jle loopne mov movsb or sbb dec loope pop jo jno cld cmp lock jmp cmpsl and mov lahf jl stos pushf push enter (bad) and jle mov cmp xchg jg (bad) adc sub insl add pop imul xchg cmp jge pusha or push das jno data16 push inc adcb jb adc aad mov inc ret rol mov js sbb icebp inc pop mov js sbb popf jg xor lods add push inc cmp sbb inc sub add (bad) fwait arpl sbb dec ret dec add (bad) sti clc in or cmp mov psllw pop mov ljmp arpl add sbb lret (bad) jo inc sub js or rclb cmp inc mov pop les dec and stc mov repnz jb outsl pop sbb rorl add mov nop jmp cs test dec xor test fbstp add sbb and sbb popl dec dec ss jne mov (bad) cld dec jl fs jns xchg dec pusha mov das xchg clc add loopne stc lret repnz movl fdivs xor or or cwtl sub sarl repnz cmp jg adc add (bad) repnz cmpsl pop xchg add adcb aad and jge in jg mov lock fcomps cmc mov sub pop adc sub mov inc or ljmp push add (bad) test cld enter outsb (bad) call sub inc les xchg sti lret adc xlat inc pushf add push add add push sti inc movsb int3 repz jne mov mov movsb mov subb add add push and add or add dec and fcmovnb adcb pop adc jnp out leave rcll test enter shrl mov adc pop inc xchg mov icebp xor stc ds and mov mov sub cli push mov adcl inc cs aaa sbb pusha mov cmp into add cmp mov mov mov or cmpsl insl daa inc pop push mov adc pop xchg inc sbb stos pop rclb adc mov adcb ja orl pop inc cmc les inc push std cmpsl sub push insb inc mov mov adc push xor mov adc jnp aam dec incb jb sub xor ss mov dec mov cmp adc add icebp inc add cwtl push loope jo add or (bad) movsl or sbb lock sahf shlb stos movsb fadds pop rcll mov and test pop sub inc je inc xor rclb adc fildl or pop and es sbb xor or mov int (bad) mov mov lock sbb imul mov data16 arpl in aas adc and dec inc fs cmp add and rorb repnz adc xor push pop dec rorl inc mov jmp adc rorb sarb lret push push adc dec xor dec nop jge jl add (bad) jae or int sub std add xchg imul mov add (bad) or out movb mov (bad) mov and roll hlt add and inc cmp jns test fdivrl push dec mov mov inc xchg ret mov loop lds mov push imul jp jge pushf push add cmp xor or rclb mov inc lret nop pop add and sub push lea je les orl push iret adc inc jl js add inc xchg incb push and pop insb dec bound jns lcall cld ret add dec add sbb sub push xchg gs adc adc adc pusha and xor lds test cltd (bad) je sub pop adc inc enter sbb jbe and adc imul pop fucomi (bad) mov xchg mov (bad) jbe enter adc push cmp call pop adc or mov and pop fisubrl aam sub and (bad) nop in repz push mov mov rolb adc pop mov and (bad) or add sahf les inc mov loop pushf clc test pop js mov shr insb sbb dec or sub (bad) pop daa pusha dec xor lret cwtl iret lds fcmovb enter mov mov orl or xor addr16 push arpl in mov imul sub push jnp fdivs push xchg mov sub sarb mov pushf je push adc xor scas add mov gs mov and cwtl dec out pusha push scas xor xor movsb orb lds (bad) jo lcall sarl push sbbb jb (bad) icebp ret jmp add xchg cmp fnop or lods repz add push or cmp push mov add mov inc out jno jmp cmpl dec call movsl (bad) xor outsb dec and xchg sbb mov js mov fimul push (bad) call adc enter sub mov jno sbbb mov adc or push scas aas push or ret jo,pt sub dec sbb mov mov mov mov cmc dec lods xor int3 adc jmp or mov push lds add testb jo add mov or sti add dec lahf push loopne stos jmp lods in loope loopne inc sub fwait pop adc mov dec nop xchg inc mov mov and mov inc fdivrs les dec push repz fs daa add sbb xchg out mov (bad) mov add stos ror pop cmpsb in and movsb cmp xor fild inc sbbl (bad) pop inc cmp sbbb dec push add sbb cmp lcall dec (bad) inc enter ja int loopne sbb (bad) nop cmp and mov iret xor mov fisubl jnp pusha push sub loopne inc ficomp enter mov and cmpsb rol or sub adc push int cmp add and push and xor aas xor repnz rcrb add pusha pop jns inc push lods addl cmc push sbbb add xchg mov adc or mov (bad) sub xor adc loopne adcb icebp mov add lret mov leave rclb cmp (bad) and shrb inc imulb arpl es mov mov rcll scas (bad) pop popf js es inc stos and jnp roll into inc subb mov and pusha data16 xchg mov cmp xchg sub pusha or mov add xor mov out inc xor add shll mov xor pop add sub fist lock scas cmp out adc cld (bad) push xlat dec adc mov pop jmp nop inc stc xor xchg push cmp lret inc xchg or jl adc (bad) pop or mov push push pushf pop mov xor and (bad) add add mov je int add mov xor push or daa push inc xor pop int (bad) push fidiv stc addb cs jmp xor stos cmp xor cwtl pop cltd pop push rcrb in or test cmp fadds sar fcmovnbe test test push or adc mov mov dec cwtl lods mov and mov inc fadd lds sti fisub (bad) loopne (bad) aaa loop push pop movsl or or pushf sbb aam lret cmp fs push inc dec cmp pop mov mov cmp into clc jl inc cli add test inc sub scas push lods cwtl adc nop xchg add or dec iret icebp imul js sbb sbb mov inc dec push add push in jae lea sbb cwtl push test jmp dec cli insl mov or fdivs hlt sub inc aam lret push and or add pop mov dec xchg inc cmpsb and in cmp inc sbb ja jg mov xor inc scas push jb (bad) call mov add orb dec or test adc imul mov push push add mov loopne js add pop lea cli and addb push loope mov xor loop add (bad) in mov jp xor into rolb addr16 sub push cltd popa or adc sbb popl mov cmp pushf jl cmpsl icebp mov jmp aaa xchg fcoms or xchg fs and or or repnz aas adc das mov push fistpll jno push or and xchg xchg dec push xchg xchg pop cmp mov lcall call in sub adc or xor dec add inc lret popf push add test cltd push add int out insl mov movsb inc pop add sub inc mov movsb fcmovbe data16 cltd lea bound xlat mov (bad) hlt jb fadds mov ss out add rcl stc fs (bad) xchg add (bad) mulb inc inc cmp shrl pop sbb ret jno insb loopne sub fsubl pop call push pop adc xchg sub cmp rcrb add xchg (bad) adc cwtl xor or es jo mov lock repz icebp call pavgb and dec fldenv arpl fimull cs pop test add sbb inc pop mov out pop mov pop xor aas cltd les sub (bad) lock aaa and in jge push fsubrl pop testb dec es jmp add out int3 cmpsb dec sub mov clc or mov xor movsb sbb pop push push in add push outsl jno scas add inc xor clc xchg in in jne movsb mov hlt nop and inc es into xorl add std lds int3 and lret xchg je incl cmp inc jecxz dec fisubl xor mov pop daa loope and andl nop xchg pusha loopne addr16 sarl add adcb pop iret cs aaa adc (bad) je mov fdivl out js fiadd into (bad) jno mov je negb fld pusha xchg xor mov mov and and jmp adc mov sbb (bad) icebp in add sbb mov add xor arpl xor test in popa push add pop push add add mov mov xor lret inc push repz jns pop int aad call mov cmc mov push int add ret inc add into sub and dec pop dec add add or sub mov jge xor sarl bound call mov xchg mov push lods lret out stos test mov pop sti jae xor lahf and data16 dec lock iret fadd outsl and lods xchg and add data16 fadds pusha dec jg dec or cmp pop pop aam sbb xchg cmp insb adc iret les shrl test cwtl mov push inc cmp pusha lods mov sti and out test jp movsb movb xchg lret (bad) inc push daa dec dec nop add xor daa out data16 int3 or movsl arpl adc xchg inc xorl js pop jp mov rolb add mov daa fwait adc push dec (bad) hlt lds ja push les push bound or mov daa dec les daa mov push enter adc or push mov cmp int3 lds cmp sbb pop inc les das sub add jbe out push daa fcomps adc mov sbb std mov xchg mull jno (bad) xor pop pop in loopne nop add adc popa push cltd lea mov cmp and adcl jne add mov aaa add xchg nop shrb push inc dec inc push lret adc add cmp push popa xlat add int3 mov mov sbb and test (bad) subl inc lock loop andl jns faddl or xor lock out or add out xor mov jo or mov pusha hlt push aas jl into mov adcl jecxz int3 adc push dec dec push jo jo adc insl scas mov movsb xchg dec inc cltd push add or add sbb pop int3 add or out je mov push subb pop daa pop rolb cmp insb rorl aad and pushf test (bad) xlat hlt sub xchg jo dec mov inc cld sub dec bound xchg xchg dec arpl cmp stos js and ljmp clc nop mov adc dec shrb xorb outsb and add inc jo xor pop push pop roll das cli int3 add outsb sahf sub pop mov in enter mov mov and inc insb sbb int push mov sbb jo inc pop cmpsb gs push inc mov mov mov (bad) iret xlat repz mov mov mov bound ret in pop mov pushf pop out (bad) pushl xchg dec fwait mov test out push out mov push mov and call lods pusha out cmp lcall sbb jae add jmp cli sbb cmp (bad) ficom inc and push movsl (bad) mov adc hlt inc (bad) icebp jl jae add add dec sub lret pop and test jl cmpb sbb test movsl aas ds add inc add mov fsubl aam je adc xor jo push in jns lods adc xchg lods inc enter nop mov inc jmp mov fldt xchg rol xor mov jae shll lods sbb movsl js pop cltd inc xchg nop add xchg movsl adc sub or cmpsl dec into inc leave push repnz add xchg pop fist ret cmp std and push xchg and sti add jmp jge push enter sbb call loope movsb nop pop jmp and jl pusha xchg mov test and pop add push sbb sub jge dec cs add add (bad) adc and push add jge cmp rolb sbb pop fld push in pusha mov in int insl inc fdivr aam cwtl mov mov in test push test sub xor xor imul add loopne add and pop push out int3 add cld fdivr ret cwtl adc and movsl adc (bad) ja ss or stos (bad) xchg xor and dec and pop loop gs and push push adc cmp dec inc cltd shrb sub test (bad) add ror sbbl test dec push xchg inc pop jns andps xor inc or pop rorl adc aad pop inc push and pop xchg call sbb dec test cmp fist lock sbb and inc and lea sub mov add and dec bound dec cs sbb cmpsl inc xor or dec fmull add loope or out ret icebp add sahf bound xchg js mov popf xor iret adc dec dec sarl add pushf mov sbb nop cwtl jae xor pop (bad) cmp mov loope test and fdivrs aad pop adc loope or cmp dec rclb pop testl icebp cmpsb mov and add mov lock cltd dec cmp cwtl out inc sub inc push movsb push inc inc movsb sbb pop cltd insb (bad) mov call daa lock jb std push movsl into and sahf mov push dec movl pop sbb test cwtl add cmp pop repnz rclb (bad) (bad) or test push and push loopne inc in fist inc jae leave nop or xchg scas xor in sub jb sub jmp fimull adc ret push sub mov in add loopne mov js,pt mov dec jle jne dec icebp jg hlt andl lret mov faddp push sub insb or xor jno add and lea mov shrb adc out cwtl dec pop sahf inc into push sbb out jb cwtl pop or inc faddl je call cmp pop js xchg (bad) mov lret loop cmp adc adc sbb movsb hlt add xchg xchg add int3 lcall out sbb mov sub daa scas rolb xchg mov and mov and je xor adc call rcrb xor sbb pop rorb pop or xchg fldl sbb inc mov mov fwait rclb xchg cltd out test add sahf mov popl clc decb sbb add cld add clc adc or or mov push pop inc test sti dec in mov test mov cmp fmuls test aam mov pop adc mov or xchg mov and leave les pop out push push jbe push xlat inc xchg popf mov xchg add pop scas adc mov pop xor mov and (bad) jno lret add jne in mov fistp popa xchg add call or shrb sub inc test pop inc lods add mov adc jmp shrb mov and and pusha je inc addb les inc lods sub cmp enter jno add jbe adc xchg cmp aaa out and pop sbb test in iret les mov xorb jp xlat scas mov add adc pop and nop clc test and pop repnz je add scas and push (bad) daa dec push mov inc fs mov jge xchg ret sub fnstenv adc rol push or rcr and mov xor lods inc xor and lcall inc inc test nop notb and mov stc js dec clc lret add jns jnp test xor test mov mov and dec push mov inc sbb add xor push ret loopne stc add and xor int in xchg js xchg pop push jae xor fist mov out in stos popa in mov xlat dec ja or out and push xchg aam and jne inc fdivrl arpl lcall shll hlt push xor inc push and jae sub lods cmp icebp sbb mov and repz mov or xchg add stos gs or in add test push mov clc adc sub mov cmp es cmp in pop nop mov enter sub inc iret pusha inc loopne scas dec inc icebp pop mov mov add iret or pop aas arpl inc cmp push push lcall or mov cmc inc test pop mov or mov xorb sarb push dec mov inc pop dec icebp pop out cltd jl fldenv jecxz shl pop xchg int3 add sub dec test imul sub pusha jge mov adc inc or dec inc sbb es sbb scas das cwtl or pop mov test pop mov outsl js push cltd mov adc cmp cld mov mov rorb or dec lods adc adcb push mov mov xchg dec sbb add mov das inc sti outsl add mov test sub cld add lcall mov inc cmp dec inc and shl inc scas mov jl and jo and pop mov mov pop insl hlt sub sbb (bad) out cmp inc jl push enter es inc dec movsb xchg adc and call or int xlat mov sub cwtl pop rcrb lods push es inc fbld adc adc lock loopne dec loopne add mov jl add jecxz test leave xorl pop int3 xorl and cmp das add fs lea inc adc cmp xor xchg and push call xor es cmpsl pop enter sbbl adc sub adc sub (bad) mov push out cli sub dec or push xor sbb cli xor pop jl mov cmpsb pusha jecxz jbe lahf sub mov or cmp faddl std jae pusha divl rolb call xor and cmpsl aaa mov mov lcall imul fwait lds daa lahf imul mov aam inc scas paddw lds loopne pop xchg mov and and add rcrl sbb cmpsl popa adc idivl mov and enter sub aaa repz pop or dec ss mov out jno inc xchg mov adc add add or data16 insb in loopne int3 or sbb fsts xlat dec loopne mov inc dec ret int3 enter xchg inc fadds push dec outsl stos mov lcall in shll addl in pop lods addr16 mov ret in pop xor mov jb and cmp pop cltd sub xor pop ljmp mov and xchg lock repz popf nop add imul or loopne inc lea cs mov cmp adc lea addr16 ret xor adc movsb mov or jge mov test mov popa out sti push pop leave push movsb add mov ljmp inc mov mov mov orb popa clc xor jl adc cmpl push lret jno add or nop sbb mov inc jmp and mov mov sub inc xor push mov daa loope movsb push movsb aam inc xchg mov cli std sub ficomp (bad) clc in or popf add push loopne xchg in mov mov fnstenv and test in jb pop sahf fimull out (bad) dec iret aad icebp mov mov jmp push inc cmc repz std dec cmp cli jge xor and inc xor and add and cmp mov rolb test scas xchg or mov mov or cmpsb jmp adc jbe clc movsb cmp sti xor imul add lret mov sahf pop or jl push es aas sub gs lods js test lods jne cmp dec jo jns dec sbb addr16 pop repnz sbb pop lods (bad) (bad) mov push es daa add sub or lock lods shll pop fs push (bad) cmp adc outsb sbbl and sbb xor fs fsubs or inc jo shrb cld or fsubl test add add and repnz sbb mov inc xchg add in fdivl aas jb clc jo mov sub mov das adc mov inc sbb dec repz arpl popa cmpb nop test mov inc lock (bad) je cmpb mov dec inc fs mov lds bound inc cltd xor inc jmp shrb (bad) xchg dec sbb mov fcmovb gs stos call xchg out xor mov and adc adc shrb add clc stos pop call (bad) mov sub lret lahf outsb int3 sub cmp mov xchg or dec and cmp sbb aam movsb mov test ficoml jecxz shlb jo mov adc and cmp mov push fs lock add nop sbb push in push and push rorb pop cwtl seta or cltd pop or jecxz push sub mov ret adc or push add dec pop (bad) xor gs lahf cmpsl cwtl inc sar stos mov dec je adc lock and inc roll xchg mov xchg push repnz mov orb pop adc mov xchg xchg jl jge push push mov add jmp fidivl lods ret clc fdivrl adc insb cmp mov push fdivrl xor mov imul mov and loop imul inc imul mov push fwait andb cwtl sub cwtl lea or fs or imul pushf sub cmp and xor adc inc adc (bad) cmp lods enter add dec call xor adc and cwtl adc in xor and xchg dec or cltd xchg xor add mov xchg cwtl or jge add lcall out fisttp ror jb daa xchg mov lret cmpsb push adc pop lock mov sbb les pop mov test and xor and in mov testb jne mov pop iret xchg (bad) jo stos and add mov (bad) adc mov dec mov add sbb rolb hlt in out das icebp add int3 cltd sub jge sbb inc and sti cld inc push je add loope cmp pop test lods xor dec rcrb sub push mov in and sub push sub cmpsl mov xchg jne cwtl in das jne or sbb sbb push nop enter inc enter aas and outsl lcall push hlt add adc call xchg inc repz cmp pop sub jns stc mov sbb sahf mov inc push inc test xor jne cmpsb enter mov mov rolb adc subl add pop sub lock fldt mov sub adc inc push or int jle add test push std add mov cmp sub and mov mov xchg cwtl inc push xchg test mov or sbb in dec and and into scas mov push mov inc xchg mov pop mov jle in insb xchg mov add push inc push das xchg insl in sbb std and add mov jecxz and movsb and add in push test adc loop add push lods and sbb rolb inc into add movl sub ss in ret sbb mov cmp add sti pop adc dec fiadd or jae arpl jne push pop xor hlt decl mov adc xor or inc mov mov xor (bad) or jns ja addr16 pop enter cmp xchg dec dec sarl or das rolb jl sbb cmp mov xchg adc or jae cmpsb xchg add fidivr mov jbe sub xor test fmull lea sub sub nop insb pop (bad) sbb int3 test sub cmp in or mov in pop pushf pop and and adc fadd cmp jbe add call mov inc add popf adc loopne push mov mov inc adc sub sbb push add mov addl pop mov mov (bad) push mov sub shlb hlt enter or adc or aam nop aaa sub sahf test sub sub xor add or sub lock mov arpl jns icebp cs cmp stos rorb adc cli sbb cmc dec aas rol dec pop sbb xor lret out mov fsub rorl int mov add jo mov nop push aas push push in in ja rolb sarl movsl inc inc dec or int3 pop xchg popf inc pop xchg push jns imul xor and add pop sub pusha cmp pop repz adc cmp les add xor xor mov push sbb adc dec jno pop cltd add fistpll cmp xor pop inc dec fsubs add rorb cs push add jo addr16 subb mov adc leave mov add jae add xor stos inc aam adc push mov add mov ret scas insb test adc inc jo inc add mov cmc add sub lahf cmp and fldt sub or dec add cmp adcl sub push xchg and sub lahf sbb lods adcb loop cmp or cmp loop adcl sub jo sub adc add mov adc mov call and rolb (bad) mov inc hlt test and stos sbb cwtl pushf adc and add jb mov pop add loopne adc lret adc mov cs outsb mov das ss jb xchg inc roll lods push int fidivrl adc dec movsl add xor add fildll shrb xchg jl ret das or loopne call bound mov add mov adc or subl cmpl pop sahf lock adc test jg pop pop rclb rcrl ja in addb pop inc popa jne sub nop inc jg hlt or jge test test cmp and mov add movsb fistpl xchg hlt adc mov mov and cmp push mov daa push dec sub clc push enter in pop dec pop jo hlt clc mov addl jmp test in mov dec hlt lds push sbb sbb pop imul test jb enter ljmp xor mov add rcrb add sbb stc or sbb push arpl int xor mov jl cltd (bad) adc mov and int3 imul pushf mov inc inc popf xor mov adc das pop daa add push clc std jmp xchg cmp inc sbb jbe jl xchg dec js cmp mov push cmp scas add mov cmp insl and (bad) mov xrelease and push sbb add fstpl ds push dec lock adc pop lcall (bad) test ja cmc fdivl push stos (bad) xor movsl and mov notb mov rcl mov xor daa mov xor mov add loopne scas pop lods clc andl es adc jle das sbbb stos and loopne mov sub (bad) ja jne fsubs dec cmp mov in xchg or subb pop and cmp jmp pusha xor sub not or repz push mov punpcklbw enter fwait loopne lahf dec fs adc xchg lahf jo mov loop add inc cwtl or jecxz shll int xor sub rorb sub mov push outsl call hlt adc jnp mov gs in pop sub fadds rcll test in clc push adc jo inc dec enter arpl cmp pop idivb sub cli xchg inc (bad) and aaa jno sub insl adc or dec mov cmp pushf or sub lods lahf pop adc mov inc mov bound ja sub lds daa xchg dec cmp aad cmp je stos mov and movsb fbld int3 lock (bad) xor insb jo inc xchg pop (bad) test mov pop sti push jl jecxz xor adc jns add rorl mov dec or and add out dec xchg push and nop push out ds pop test aas add sbbb enter add lds neg call mov sub mov iret pop pop and add mov mov in push add das in test icebp push lock test adc stos data16 xchg or lods pusha fwait (bad) or adc pop jo dec sbb pop cmpl sub xchg call loopne repz in lret fidivr lea xchg aas andnps hlt or popf enter pop cltd fnstcw cs cmp sbb cmp pop jecxz add mov add add or bound aad cwtl jge les ljmp outsb push enter pop lret clc adc jge test lds mov add cmp and push (bad) int adc int3 std mov cmp hlt push or inc and xorl dec cmp inc cltd js adc push orb fstl adc pop test fadds mov sbb cmp faddl pusha dec add dec aas les inc movsb xor jo pop add xchg add sti jle imul fwait xchg rcrb adc pop iret jno xchg imulb xchg mov xchg push mov pop dec and dec sub add sbb cs sbb outsl insb je cmp sbb inc pop mov xorb jno movsb dec cmpsb in add xor dec pop dec int3 xchg out push test ret or jmp jo orl scas (bad) add mov aad fs push dec or fdiv push movsb dec aas xor and mov test popa (bad) je or mov inc nop adc sahf dec xchg adc fs cmp cmpsl and pop fcompl loope inc inc cmp jp add fiaddl push inc (bad) mov push push lock add pop jo and lods push cltd mov (bad) pushf add movsb leave xchg outsl popf in insb int3 mov cmp dec dec idivb adc jle pop adc loop loopne je mov sti mov es push dec hlt inc mov mov (bad) ds push sbb in shlb rolb dec je div mov test push sbb pop out popa subb jno mov add jl pop inc dec and mov jecxz sbb (bad) hlt ret test sub dec push add mov inc sub pop (bad) jnp jo,pn (bad) lock test (bad) mov lods mov push je sbb ds xor mov mov sub int jle rcrb cmp sub jb pop sub mov les jno cmp xor inc test arpl add sahf sbb push push mulb subl and mov insl movl jl,pn movsb pusha xchg xor pop (bad) xchg mov imul mulb dec aam repnz jge pop (bad) mov addr16 aad les push cwtl sbb jecxz sub jne test scas inc xor pop xor xor or xchg add scas mov into pop mov inc or test jo enter cmpsb mov ja rclb push ret daa add lds shrl (bad) int sti lods sahf mov lret pusha testl push subb js das movsb movsb mov or inc jo rcll sub mov arpl inc enter mov mov cwtl xchg stos add xchg and mov mov push xorb jmp shll call or jbe addr16 sbb xchg push stos popa call mov lods xor cld ret pop jb dec mov aas xor daa movsb (bad) aad popf out or cli jecxz pop in sahf lods mov and leave movsb in xchg out push aas pop je push rol cmpsb add arpl movsb cs add into (bad) cmp stos and sbb add (bad) mov popf sbb push and test inc xlat inc push adc sub addr16 pusha adc dec dec das clc icebp mov mov mov pop or sbb mov arpl (bad) outsb cmp push sbb xor sti sbb data16 scas dec int3 push iret and pusha jmp ret leave sub push mov mov stos in frstor and push aad push test decb lcall push mov sub arpl and inc adc pusha mov fnstenv mov xor int mov push fnstsw aaa imul adc test sbb jae orl xchg in mov mov fildll ja out mov aam fisubl rol xchg xchg push mov mov cmp rorl jecxz adc dec xchg xchg bound mov test mov mov ds xchg push push inc or arpl jecxz cmp dec arpl in scas add add add add nop ds sbb mov test xlat jmp xchg cmp jle je push adc add and jmp push jo mov popa leave push mov cmc test xchg xor add push scas adcl rcrb out rorl cmp fsubrl adc movsl inc pusha xchg mov push sbb stc subps mov loop dec dec enter and les mov (bad) popa out mov es je js pop jns jnp call sarb rolb cmp test sub int rorb rcrb add adc or mov rolb movsl outsb jae rolb jnp lret sbb stc shrl jl in scas mov lds mov (bad) int imul jns and fild out popl sbb movsl cmp loopne push (bad) icebp pop xor (bad) (bad) movups mov xchg dec or sbb sbb sbb adcb mov xor cltd mov dec cmp cmpl mov insb jp mov jne sbb enter (bad) mov enter (bad) sbb adc sbb sbb jmp xor adc inc bswap lret or nop in dec nop cmp or or dec jo sub push inc ja xor call out test mov insb rcl pusha pushf pop popf imul mov xchg addb das mov stos repnz push daa adc mov mov (bad) es clc adc mov mov inc loopne sbb out mov sub movsl cmc in clc sbb adc jne sbb inc into add repz repnz call test add xchg push dec rcr dec adc test xchg xor scas test mov push push adcl push (bad) sbb mov pop inc xor nop or push inc adc inc in movsb inc inc popf dec cwtl aaa or or test push pop xor or cmp dec sbb or mov sub imul or and xor adcb je or insb push out adc push (bad) ret sub cmp fnstcw add incl xchg push sub fs shl push sahf or add loop test inc movsb inc aam add pop jp (bad) ja rorb rolb pop mov add cmp aas shlb mov cmpsl or lods xor ret cli pop cmpsb rcll out cs mov inc cwtl add aam lds ds push loope pop mov imul sub or pop js mov ret mov pop gs push loopne sbb sbb repz xchg xor (bad) pop pop out mov xorb sbb jno loopne sarb mov mov push nop into test idiv xor mov or push pop dec xor adc andb inc mov and xor fs js sub xchg add int inc jge fs cmpsl sub xchg cmp je js lods xor lods sub pop sbb push jge subl fisttp into leave dec or cmp jge add insl xor (bad) das xchg popa dec xor cwtl addb les leave and int3 sbb mov test gs xchg fidivr add sarb and jg pop sbb lock xchg ret loope inc hlt cwtl call rolb mov fmull and add mov cwtl or add lcall add and pop outsb jge adc adc or stc adc cmp add call addl scas or cwtl jns subb dec jmp mov in jl cwtl out push and mov adc sbb call adc sub or nop mov jne movsl cmp add repnz xchg xchg xchg cli (bad) call je push rolb rcll test addb add xchg mov mov ret js iret adc and mov push sbb nop mov xor sub adc jb jno arpl mov add jo adc push pop or sbb imul adc xchg add xchg aas fstpl sub adc stc add pop adc andb push dec in sbb aad cli leave shlb (bad) xor out not xor aad fwait (bad) xor insb and es and adc mov test and cli pop push aas movsl xchg jo add dec and add add jno dec fldcw pusha cld in adc cmp or jno sbb push loope and mov lret inc hlt leave mov nop mov cmpl loopne enter push push or add lret fcomps subb sbb mov nop jp add xchg pop sub rclb pusha xor cwtl call cmp rclb xor ret lock (bad) jmp mov jl add (bad) push mov and mov (bad) xor adc mov shlb adc fstl sub mov lock test inc les int3 cltd js or lock and call dec xor inc orb lcall orb loopne clc rclb jmp andl pushf popa test and lret inc lahf and push mov cmp pop test add add cvttps2pi xchg js popa (bad) add dec int3 pusha lods jg xchg addb test pop or inc jnp clc in inc xchg out pop mov scas push push inc cmp test div xor insb xor rorb or in insb sub pop dec cld dec jae shrb adc jb stos loop dec or sarl mov je into shrl rcrl pusha (bad) jno and flds xchg adcl pusha add in mov stc fidivl jg add jl pushf add movl dec cmc enter into sahf inc les je add cmp jne and mov stos mov sub mov je push leave les add mov mov pop loopne add insl fst mov xchg jns xor repnz add mov adc xor push leave mov enter push subl xchg lock or mov cmp sbb or and mov xor movb mov js and xor sarl or cmp js pop call hlt je sub xchg sub popa sbb ja subb adc insb les pop lods jg sub loopne mov cmp add andb cmp flds in or sbb aas add and (bad) and jl loop xchg adc (bad) adc mov push fmul or add xor dec push into int jb sbb sbb test inc or mov add andl movsb add cmpsl (bad) loopne bound xor adc sub out paddusb leave cmp sub and ret add pop das aaa and adc jmp or repnz add pop imulb frstor or daa ret clc inc and test enter mov mov int3 lock or (bad) mov mov loopne cltd js lahf fadds mull test fldcw add and add jmp sub xchg xchg test lock mov add inc inc lret iret clc jl enter mov push adc jecxz and pop and push push adc and cmpb mov nop cld loopne mov (bad) pushf mov and push loope test pop jnp cmp adc sub add push pop and aam jbe mov outsl pop mov aad mov clc xor movsb inc sbb push ljmp sbb lods inc sar nop fidivl mov leave cltd add dec in pop arpl and add cli inc ffreep push push cmpsb jnp aas in pusha push daa (bad) sahf rcrb pushf push xchg test notl jb and test lds push xor cmp cld adc fsubrs ret nop nop pushf push dec push aad inc sub in sub sbb in test lcall shlb add cmpsb sbbb popa pop popw mov sbb cmp xchg add hlt add test add sahf test cmp xor push xchg xor adc stc sbb cmpsl sub pushf pop adc sarb add inc push movsl decb movl imul push int3 dec cmp add push les push sbbb ljmp das hlt pop cli pop sbb aas cmpl mov mov fldcw jno das sarb mov mov cwtl jns in pushf add movsl pop cmc (bad) mov xor mov add ja mov popa xchg inc xor call roll dec adcb or sbb pop sahf inc cmpb (bad) push add lods xchg in rclb push iret sub sub int3 and cmp icebp mov pusha out ss sub (bad) push pop aas (bad) push testl popf xor cmpsb add jb dec clc stos mov jg cmp xor gs idiv ret add pop jmpw mov xlat mov jp sbb pop daa int dec mov add fwait ds (bad) and adc push add idiv ret push (bad) (bad) je sbb cwtl int3 mov out mov add xor hlt imul xchg sbb cmpsl sbb je mov gs call js jg mov dec or mov mov inc push sub lds clc xchg add addb pop test pushf mov jecxz in scas push aam adc sub xor jns (bad) mov dec sbb or test sarl xlat stos sbbb mov enter xchg inc and scas (bad) jo cmp and aas adc faddp mov adc jo iret dec pop xchg add jae mov pop push push test loopne movsb (bad) jp lret push mov cmc or mov push call je mov in sbb ja or or scas pop mov enter cmp or adc add adc pop pop movsl mov mull sbb mov mov insb mov adc leave pop mov and int3 cmp mov adc int3 js enter mov movsl or mov and nop jle je rcll mov push mov jo cmpl jo push loope push push cmpsl xchg fdivs stos push std pop xorl mov das sub lock dec les dec dec xor repz jns add in jmp pop mov out push push roll cmp xor xor add xchg inc pop push xchg xor sti arpl movl inc or jbe pop add inc mov cmp add push movsl or mov xlat jno inc popl popf pushf test repz and stc lods imul xchg dec insb sbb es add mov hlt cmp pushf sarb fiadd lock push lock sbb fwait push cmp push add sub sbb push iret scas adc shl mov push stos in xchg add ds sub lahf je push add sub push popa sbb lahf xchg inc mov mov je add push pop sbb xchg add add lahf stos cmp mov mov mov push pop adc pop mov xor loop ds cmp cli adc popa jle (bad) sahf sbb push aaa fisubr cmp jg or fwait xchg test mov mov je sbb repz add out push jmp jle sub jmp shll xchg dec pop in jl fist or daa call ret lock out mov push movsb mov or add icebp fcomps repz pop mov into fidivl insb mov sub pop pop enter adc sbbb jle (bad) roll in mov xchg jge jmp and shrb daa roll and fisttp pop inc adc and and push shlb dec pop (bad) enter push inc dec inc xchg pusha imul jle or and inc pushf adc jg ret pop sbb cmp jns mov adc xor into out cmp jo add adc test fisttp add and fbstp fisttp jmp clc js push leave cmp xchg xor call adc xchg push lcall loope fcoms sub (bad) or jne mov pop repnz nop xor adc repz (bad) das add jno aad lods inc add lret ret xchg aam mov loope js dec dec xor jmp mov sbb and sub dec and aaa sahf imull lock and hlt cld dec test movsl and cltd and and xchg fbld push aaa mov lods fs fstps mov lahf dec stos sub push and sub je stc pop das clc sarl pop jae rorl hlt cs adcl (bad) push xchg pop or mov loop add cmpsb adc es add (bad) and jae dec xor xor fidivrl pop negl and add push mov mov cmc imul aas push mov adc inc mov outsb mov iret push or shl fldenv cli adcb ret pop pop cli aam mov movsl jbe add js inc ljmp mov or jge jg inc push xor dec push cmp or (bad) jg cwtl adc cld xchg fdivrp pusha dec add rep int3 jns adc test and sub and mov ljmp out out std das lods lods sbbl roll sub add loope inc or jno dec ja xor mov push mov mov ja xor pop and std das in (bad) push push pop xchg je jnp fdivrp sub inc mov mov cli or mov inc lods xchg push mov push cmpsl clc xor (bad) cltd add popa inc adc (bad) outsl or ljmp insb int add add sub repz in jne or aaa sbb dec in jmp mov sub (bad) mov xor push rcrb scas outsl (bad) jmp cltd inc arpl ds aad sbb rcrb shl fnstenv pusha pop push mov fwait mov gs and push outsb dec add rcl pop dec fsubr dec dec push rol push and fnstsw add jo jae out gs sbb adc dec es add and outsl pop jbe dec sti or dec push mov je mov inc dec pop pop test es and dec xor push mov aaa push push jg pop into outsb push lds imulb dec sbb mov icebp mov loop pop xchg xchg xchg dec add movsb rcll cld pop mov insl ja jmp sub rcrl push or pop das mov add sub fwait cs cli sbb or ja jo pop xchg aam int push push test sbb add pushf xor jmp jne push jl cmp cwtl xchg ds jo sbb push imul push dec or mov jp dec out cmc dec jg push dec stos cwtl push mov sar aaa aaa nop add jle mov and mov ds dec scas and arpl pop imul fcoms xor or jb jne rcl roll movsb mov xchg or add push add jmp xor ja hlt mov mov divl lcall mov sub mov xchg ss dec xchg adc and pop push scas jmp inc lcall dec mov cltd add das cld pop dec and jge (bad) sarb enter xor dec xchg mov std adc daa add cld ja xchg pop sbb mov scas repnz push fnstsw andl xchg and repnz mov add pop push mov sub sub pop mov jge adc push and ljmp add call cmp daa push xchg mov mov sbb mov push hlt mov inc in addl std cld pop icebp dec stos and movsb sbb add (bad) cli shl punpckldq aas loopne or mov int sbb push jns shrb jg test dec pop mov push inc pop pop push xchg push cwtl xchg mov sbb xchg pop jo (bad) sbb push lods xchg push and loopne cmp sub jnp aaa mov ljmp or mov movsb mov pop jge arpl push xchg fcoml hlt dec dec or dec push mov ret push out adc mov lret mov shlb sbb add movb adcl jg movsb es xlat sub das in into sbbb xlat push push and pop enter push xchg clc mov imul punpckhbw setbe movsl dec push xor pop sbb jp pushf pop jo mov sbb cli sub adc mov mov add dec and (bad) pop xchg ja repz sbb inc sub sahf int3 pop add push dec in cli daa mov sahf cmp jmp push push mov adc cmpsl mov test daa roll mov add (bad) cs (bad) pop sbb sbb movlps sub sbb test dec pop fs push add shl nop and ja cli mov push dec bnd push xchg inc aas test pop sub ret jae sub sarb push cmp mov or mov mov imul repz lahf and push and test xor test pop xchg mov mov bound pushf mov sub adc in les mov sub adcb lahf and xchg lcall cs pop sarl pushf and push ja jmp outsb and cmp adcb pusha (bad) jbe sbb popa jne push (bad) mov pop jne fucomi inc fcoms cwtl fwait jb inc out mov (bad) je out mov add add push sub bnd add mov jae xor loope mov add push lret inc inc adc push mov push xlat mov or int3 dec sbb sub lods pusha xchg mov imul and (bad) or pop push jl xor add mov xchg xchg mov std pushf ds push push pop mov sub mov push inc xor inc std lcall cwtl aas dec adc jecxz mov mov (bad) aam repz aaa cmp (bad) push inc xchg dec mov mov mov sbb and stc cmpsb sub pop pop (bad) adc iret add jl xchg shrb in dec das inc jmp addl push pusha out imul fist pop and bound push cmp inc jne ret push dec xor inc or add sbb xor and mov push jbe rcll test rolb sub sbb jmp push push fisubrl inc or ja subl rolb lods add cmp insb dec and push push push pop push stos lea xchg jne es insb inc lds cltd (bad) jle or cmp jno icebp add (bad) std dec pop out jne ja out ss es xor rcrl outsl icebp pop insl hlt loop xchg (bad) fildl cmp arpl aaa loopne jg dec lret clc inc or xchg pop push jecxz add ljmp pop add sbb out in sub fbstp iret cltd or not or mov in inc or add addb pop fstpl push or inc pop or mov cwtl jnp les jno insl sbb iretw adc jbe inc jns add test add jle jne movsl mov sub xlat pop insl cmp sbb sub mov cmpl adc xor dec leave cmp dec cmp pop xchg popa imul (bad) lret add jge loop mov and lcall daa (bad) xor cmc pop sub mov add (bad) pop int clc pop cmp inc lock popf push ret dec icebp inc pop pusha mov and or sbb sbb sbb xchg out cmp push pop mov (bad) sbb js pushf push push push (bad) jg bnd push add dec (bad) and cmp cmp stos dec icebp scas cs and jg dec out hlt xchg fild pusha jg aad decl or pop enter andl mov (bad) or xorl aam ljmp fisubrl jne push (bad) mov lds dec mov dec sub inc add ja push fsubp pop es mov leave pop lahf idivb xchg adc cmp add mov incb out adc xchg and jmp movsl adc pop pushf mov stc and push mov xor outsb mov pop push fldenv jmp pop mov pop sti test lods xor or sbbl imul pop jp repz sahf js jne mov pop sub cmp or fcoms xor xchg xchg cltd inc fild mov test push subl js xchg inc and jmp addl pop dec rcl out repnz pop push testb (bad) pop push mov iret pop push out clc xchg rcll dec mov in jecxz or orb mov hlt std push and (bad) or ja or sbb mov sub out pop in mov sbb pop mov movsl mov push das cmp fnsave cmpsl minps inc jecxz dec cmp add imul xor pop mov loop or int3 jmp daa pop pop sub dec adc movnti into add mov cli or cmp pop jnp ss bsr lret dec les cmp dec ret sub out data16 mov cmc dec pop add or cmp push mov cmc icebp sbb jmp or (bad) jbe sub out nop loope sub jae inc jnp push push push lods cwtl mov testb jae mov mov stc sub pop inc rcrl adc out neg subb add add scas jne repz push (bad) rorb mov cli movsb fs jns dec mov nop mov push jns jne inc neg xor jmp into pop sarl and dec push inc leave pop ljmp jge mov sbb sub xor ljmp push popa (bad) pop ficom rcr add out pop in and add xor mov mov xor inc add sub dec mov xor fimull pop add and adc adc lds xchg jle sub (bad) add adc inc push mov xor and out out fmuls cvtps2pi ret das psraw cmpl je sbb dec dec add outsl leave or pusha add and or and imul pop loop add (bad) aaa popa jae aas lret sub movsl jl pop mov sbb fwait movq cld sbb lret test ja mov jg repz dec nop ja add add mov sub pop xor aad or movsl pop fidivr xchg icebp ret xchg aas bt rcrl inc or ds ja fistpll jbe add push jmp test imul or imul imul or lret mov repnz dec test pop jne jmp add pusha rcr ja jle pusha repz mov ja dec add inc or lock dec movl sub loop pop lods jo add add sbb movl sbb test xchg aad xchg pop sti cmpsl imul or xchg dec mov lea adc inc jb pop xor xor xor inc xor bound fldl jnp imul ja aas out negb push jmp push nop or addr16 lods jecxz cmp aaa sub bound jb jg mov and scas mov xchg (bad) (bad) or xchg out push xchg jo pop cli shll fisub aas shl push lcall stos push les jnp std sub (bad) add ret cld add lock add xor inc sub int ret jle xchg shll arpl (bad) rcr dec xor sub mov or adc sbb push mov inc (bad) dec push or add mov test outsb in cmpsl adc cwtl pop popw push mov sub outsl std sbb and mov imul faddl pop rorb lock or mov mov mov mov dec andb pop add (bad) jg jmp mov add (bad) xchg pop and aas lahf outsl sub in dec mov sub jmp rcrl cmpsb in jg jle bound dec xor pop adc xchg push mov mov pop add jp test push gs or or or xor xchg lahf fwait repnz test insl adc mov push ja xchg imul mov iret sub push or pop adc sub fnsave pop xor out fcmovnbe or js nop xchg jge cld faddl push dec mov jo sbb cmp sub pcmpeqb xor hlt gs jmp ds test inc mov cli or popa push cmp add or (bad) mov je test rolb lret movsb push sti jle je sub jp xchg xchg inc jmp ret xor js sbb shll sbb daa cmp inc mov sub in jg or sub shr inc std add shrb daa mov push xchg pop subl jg shrb push jg das and cmp out paddw out dec inc fwait xor dec ss xchg pop dec lret push add add add dec jl insb pop push sub add cmc jnp (bad) data16 mov in pop sub test adc add adc dec daa push jno inc dec xor adc sub jle jge lret mov das loop xor or mov dec cs push dec sbb fsubs add les jmp jns cmc enter lret sahf push push outsl outsl (bad) mov gs sbb add pop sub test cmp or dec dec gs fs jmp add aas add add adc xor push push pop jg dec ret jmp cmp and xchg or in test (bad) orl and mov push lea leave pop shl xchg decb cmp btc or mov mov dec pop scas push push aad add cmp out add add xor repnz movsl and sti push add mov push out pop sahf pop outsl xchg movsl push cs jne in xchg mov push cmpsb stos xchg mov jne jmp add mov nopl add scas add inc fbstp push mov sub push mov pop ljmp add inc xchg add sub sarl ret loopne (bad) lret loopne xor xchg pop push mov add and in push cmp mov xor pop mov pop and faddp fsubl ret dec add sbb out and outsl sbb (bad) xchg int dec fildl pop inc stos inc aad jg and dec and sub cmp xchg sahf jmp xchg mov push mov rorl adc dec or add cmp inc jo in jg test jae and push jb cmp icebp mov neg loop (bad) cmp fisubr fcoms (bad) jle xor mov mov (bad) mov das js out cwtl xchg (bad) or adc push loop out (bad) data16 jg pop fist data16 add popa dec xchg cs dec push mov cwtl in add mov ljmp in xchg leave sahf pop cli push mov js leave or lcall jge xchg mov push dec das mov dec mov xchg imul imul fs adc shll lret dec andl andl (bad) xor sub loope pop clc push insb shr adc jmp (bad) mov jnp push push mull pop and and lret not add shr adc pop js sbb jmp add mov or dec and sbb dec mov fldcw mov adc add mov push mov cmpb fs in or sub add jmp lret fwait sub dec xchg push scas mov (bad) dec inc out ss and addr16 data16 sbb mov lods and mov jo dec jmp aaa mov or rclb or and sbb sub fldl xor mov add jns bound out test push pop out cwtl movsb insl adc out sbb adc pop push mov add jmp aaa and inc mov add xor dec add adc int3 xchg mov dec adc mov imul mov repnz imul adc fsubl sub fildll inc xchg pop test sub and daa out mov mov andb sub xor sbb sbb loopne xchg push jg pop dec in add repnz mov pop push out or daa pop pop inc or cmp xchg xchg add clc and mov inc adc add dec andb jge jnp rolb add pop hlt pop int3 adc and xor xchg inc pop and loope dec dec jo mov (bad) dec fadds adc sti push repnz and dec pusha pop mov test or or aam hlt sub sub cltd dec mov mov das inc loop fdivrs mov fucompp xor sub mov pop cmp test pop addl mov daa and jne sahf pop shl or jmp ror push imul cmc lahf repz push cmp sub jmp and mov inc loop mov push pop push out hlt push nop lcall bnd xor inc cli add xchg cwtl ja in inc xchg or and inc inc icebp push outsl aaa push test sbb repnz push test xchg scas mov add je enter jg fldt inc or clc (bad) adc jae,pt pop std inc jno mov xchg or or sub xchg dec or jno pop sub aas push mov xor sub insb push inc sub cwtl inc popf pop fsubrp mov shll nop int3 and mov fpatan ret dec (bad) rorb mov xor push adc push dec int3 push dec and push sbb sti decb sbb mov cmp test mov lcall sti (bad) xor add out adc mov insl push lock add xchg push decl leave mov (bad) jbe int3 adc xor addl das mov lcall xchg sti not or jno jb popa (bad) jmp shlb daa test shr add xchg inc lahf pop mov cmp pop insb and sbb js mov mov add xor jmp mull cmp pop pop jnp or add mov lods or jg add lret or add jns inc lahf inc push xchg lret shr or push jmp inc (bad) sbb daa adc inc push adc pop xchg rcl jle cli mov test dec pop pop sbb pusha gs aas outsl fnsave fprem sub fisttp leave lods push add mov push xor pop mov js movsb adc std enter add ja sub pop ret inc jecxz pop dec or fistpl jg ret inc loop,pt adc and dec in inc jmp xchg push pusha adc pop cmp xor and mov js dec xlat adc aad mov lock test xchg cmp (bad) jo jbe cmp mov push aam lods arpl mov xchg inc or adc push imul cmc js pop push repnz dec pop jge jle mov xchg lret icebp push add pop adc sub pop mov mov pop clc lea mov and popl pop sub (bad) add adc mov test inc out dec int xchg pop cpuid mov xlat jl aam pop jbe leave cmc std inc mov push sti mov dec cli sub sti xchg sbb lahf scas iret jbe add xchg mov fisttpll push out sahf call cs inc (bad) fimul push or jb arpl dec mov imul mov arpl ret aas idivl or or pusha add push mov cmovno xchg or mov push sub sarb push mov xchg out insb add fstps leave add dec cmp dec ret aad xchg dec pop fnop jnp or push push push lds mov adc repnz pop xor scas fistpll imul mov in push push mov cli cmpsl jl jnp gs pop loop xor aad and cmp icebp pop mov int3 sub jmp movb or pop lahf and out das popl ret mov inc add or xchg add jp or imul jno mov lret sub push sbb bound jge or arpl xchg iret xchg je mov rcrb or loop cmc insl jg inc (bad) or push sbb jmp cmpsl adc jae aam or lea sub test or jbe sub jns out outsl in int3 xchg pusha xchg std push pop cli out mov mov out push cmpsl jge aam repnz dec jmp mov pop loop push fs orb pushf lock push push inc mov inc sbb sarl out jo psubsb mov mov xor push loopne in push inc popa out idivl orl inc adcl lret dec dec fsubr adc sub jp into nop idivl mov movsb pop pushf hlt add jmp sub scas out pop inc and add iret inc jmp push (bad) pusha iret jo dec push pop ret xor not sub mov mov daa add sbb adc loope push int3 mov daa stc test cmpsl adc cld cld push xchg dec cmp out sbb out leave or adc or sbb sub (bad) lds icebp jl mov cmpsl lock pop dec pop mov loopne cs jge test stos push pop dec imul push lret inc (bad) adc mov bnd pop mov cwtl sbb insb pop sub stos (bad) rorb mov jae add cmp pop std mov xlat or jb loopne ljmp jne inc fwait in stc sub xchg rcrb jge and sub add xchg (bad) jge inc xor ret or fcomi mov fild outsl cmpsb sub push pop mov dec repz lcall call jle dec push jmp std sahf jg xchg mov aad xchg jnp (bad) test shrl frstor sub add arpl push mov xchg inc imul sbb push lret inc push mov cli cmp js dec aas cmp push push push and movsl xor stos sub push pop pop mov aad xchg sub leave fcmovb push or rcrl mov test sbb sbb mov or or test inc pop and shr mov mov mov enter das stos pop add clc notb nop mov inc inc cmpb mov xor xchg push fs mov insb xor add shr sub iret sub daa out and adc dec xchg xor and repnz mov push leave mov xchg inc adc jmp dec mov adc push (bad) or xlat sarl and jnp add push mov sbb fist out and or xchg pusha jmp (bad) push lock and push xchg and stos jo push aas pop clc pusha ret sbb add loopne push rolb adc or xchg or arpl cs pmullw lods cwtl sahf cs adc push fimul cmp loope fwait loop adc cmp ffree icebp mov or mov cmp loope mov add add mov bound jno add xchg or cwtl insb or mov daa les sbb sub enter pop adc mov mov lahf sub out xor subb (bad) or add cmpsl bound add xor mov or or insb and pop cltd out sbb adc mov ljmp sub rol sbb lret sbb jno and adc adc add xchg subb push ret jns add xorl pop pop aas out hlt stos add into sub inc jmp pop out mov sbb nop adc and add inc dec adc ss add sbbb ljmp enter sahf pop or mov mov cmp inc fisubr xchg push cmp mov aam faddl andb insl xchg sbb and outsb mov cmp add mov and incl sub and fild xchg mov or ret insl enter mov andl push cmp std cmp (bad) nop adc lea and out or add hlt push add mov push xchg xor or jecxz dec mov rcr test and cmp cs sub ss cmp or inc movsl and jb dec idivb mov add mov xor cmp add pushf adc fcomps cmp repnz cmpb inc call mov sub xor and ljmp movsl shrl dec dec js cmpl mov test shll adc xor mov out mov lods mov leave sbb and sbb or stc out cmpsl add pop test jp and (bad) add pushw lods xchg pushf jmp or hlt mov jb dec adc add enter fsts js pop cld cmpsb cwtl xchg xchg pop jo aam imul xor cltd and in andb leave sti push lock push cwtl lret mov mov imul and inc xchg jle cmp dec hlt rclb fbld push (bad) sbb loopne mov or arpl adc sbb add lds sbbb mov int3 push aad cmpsl mov pop adc clc (bad) jo addl sbb inc test xchg sbb leave adc adc dec ss xlat ds sti inc cmc into ja testb jle adc test shrl inc fsubp nop fadds push aad rolb rorb ret inc shld sub clc or push int3 cwtl push in or and loop adc dec pop mov jne push xor rorb insl fisub add loope fwait ss mov pop hlt movsl jbe popf outsb in int3 leave dec lods lret insl dec push js hlt mov loope cwtl xchg test lret sbb test pop sarb fwait in sub mov sub lods pop fist fwait test cs test or sbb ficomp pop xchg out push pop adc adc cld add in mov jmp mov push mov xor jecxz sub ds inc and rcrb add mov insl push cld (bad) and inc xor dec loopne push out clc pop cld add aas rcrl loopne insb out or scas or test sahf setne cmp mov enter insl inc jns stc mov add or dec out add mov (bad) xchg popf out pop pushf or jnp push daa pop xchg je mov (bad) clc push insl push dec sub cmc sub mov sti dec dec add insl into shrl call mov adc dec or cmp dec mov xchg jo adc inc xor cmpsl subl and stc sahf (bad) mov nop inc lods xchg aaa adc das add mov cmp pusha jmp mov or in aas pop and or add cmp mov jecxz sub and test pushf int or jl xchg jge cmp ds and adc pusha push fwait xchg icebp adc lods sbb mov out or mov dec movsb pop adc jp pusha cwtl push adc add imul or insb roll in pop mov push xor xor xor or pushf mov scas fwait and adc cmp xor sub enter sub das stos imul jp push adc inc aam and and test mov and dec adc outsb adc jmp or and enter enter cmp dec inc add cmp add add mov add in adc dec add (bad) (bad) and and in pop insb xor and inc loop push cs ret xor test dec or shl xchg (bad) rorb cmp push js adc test mov push adc pop and jne and ljmp mov xor arpl mov or fs lcall mov adc rcll mov pop xchg cmp movsb mov fdiv add xor and pop aad clc incl cmp repnz dec cwtl js mov adcl jno jl repnz xor cld fs mov xor mov movsb or sub inc mov insl adc and xlat lock cltd inc pushf mov push mull cs test mov push es push mov hlt push cmp loope cltd int3 mov pop push (bad) or mov rcll add cmp xor and sub adc mov jo iret movsb movsb daa cs push jo sub out mov jo test or imul add insb adc inc daa mov aam repz push dec test test lods decb test pop dec add fcoml cmp add xchg fisubrl sarb inc xor xor mov shrl adc out ds ja out fist or fisttpll fisttpl insb data16 sbb rclb out sbb loope bound add inc mov pop clc loopne cmp adc add push xchg add fwait add pushf out jge movsb pop dec int3 push les test mov nop (bad) xchg rolb add cltd push sub or push andb cmpsb mov addl or nop rolb cwtl mov fdivrp push mov lock push out and jns mov dec mov (bad) fwait leave lea loopne sbb push pop mov mov enter xchg push xor ret into dec add loopne or cmp or cltd mov push icebp xor faddl int3 mov or stc lahf sub dec ret sarl sbb xorb out repz xchg fsts leave add cmpsb or inc imul movsl pop adc xor imul out mov mov ret into cmp pop ret sti and je push xor pop push ljmp leave add aas mov lock xchg sar arpl pop sub mov mov out mov push add jecxz add push jo dec sbb mov add mov das pop mov inc xor mov dec lods push ret xchg push orl aaa push orb lea mov cmpsb xorb mov or (bad) mov in loope clc pop bound mov and adc push call xchg or jnp aam cmp mov xor icebp addps sbb mov xchg fisub imul outsl add mov test and inc int3 shll push shlb mov mov add (bad) cli or add add aad push je ret sub dec push dec rolb rol aas sbb jecxz add (bad) out xlat rolb popa fwait inc xchg push cmp push scas fiadd or or and and scas pop xchg movsl sbb inc add pusha mov call jnp in (bad) aad push sub jno adc or les mov lods rcll or mov adc (bad) add iret add stc jns xchg dec add dec sbb add xchg xor and add mov aas dec icebp jne dec or push nop imulb cwtl sbb adc pop loop dec (bad) add jnp loopne mov and push mov adc mov jge scas sbb lret aam add mov out inc xor mov imul dec pushf aaa mov cwtl cmc and xor push inc dec mov les cmpsb movsb jg mov mov and add push dec jae js cvtpi2ps mov xchg movsl add sbb push mov fninit movb imul xlat (bad) stc push adc jl inc mov fcmovnb loopne mov ret out std lds jno in pop subb add xor lds ja adc rcll dec mov lods adc and inc jbe or insb out inc jmp sbb mov push sbb test and push js mov mov pop add jo,pt jo inc xchg (bad) mov stos sarl enter pusha call lods test adc pushf jmp add stos adc aas add pusha ss xor xor or es xor subl push or add in pop call loope (bad) lret fdiv xor mov and inc ret mov lods loopne push adc ljmp jno sub pop dec push dec add imul pop cs mov icebp jg sbb jno or call rorb inc cmpsb adc pop xlat test mov es clc or dec mov rcl push inc mov mov lea movsl ja add (bad) lock pop mov sub in mov sbb in mov clc sub jmp add insl add mov inc rcll and mov cmp cmpl fs (bad) adc and and les jbe add icebp inc test mov loope es (bad) aam add mov test sahf adc pusha or push bound cwtl ljmp cmp movsb inc pop xchg xchg add dec cld es (bad) xchg add icebp dec (bad) hlt xor sub xchg stos inc add fistp inc add dec (bad) add test lahf xchg xchg repnz mov pop push ficom push imul int3 sub in jno je add lods or pavgb addr16 inc pop xor mov adc sbbl inc loopne gs daa lods jne je add loopne push ret inc push jl pop sub mov adc inc adc fcmovnb mov cmc sbb mov addl xchg insb clc add xchg add cmp add and pop xor les (bad) add cld sub and addl (bad) hlt mov mov cmpsl sub repnz (bad) js clc daa cld mov stos mov dec pop sarl icebp aaa mov mov imul lods aam and fildl pusha outsl jg sub pop int3 dec fmuls push mov and mov adc ljmp push out sub test pop or cltd adc lret or mov pusha test pop mul sub pop push js fistl clc and pop adc add movsl cmc cwtl call cmp lret sub imul jecxz adc js push and and xchg xlat sub pushf aam mov andl loopne cltd and cmp xchg je orl imul jle orb adc push or cmp dec cmpb rcrl pop xor xor testl popf push addb mov sbb inc mov xlat loope add (bad) mov enter sbb das arpl mov mov push adc and mov inc pop inc orl imul add pop xchg sarb add mov lcall int3 add sub inc insb nop mov inc mov imul xchg nop pusha cwtl and pop jno push rol inc xor (bad) call sbb les ret movsb push enter fwait stc dec mov jns add xchg mov fstl test add cmp jnp dec je xchg add or cltd and inc mov jl lret aas sub (bad) xor xchg push inc dec into adc jbe mov mov mov dec fwait idivl lods and rolb in dec loope mov or loopne test mov outsb add sbb and inc inc or jg mov fs lock pushf or js lock add mov add loope dec push pop push and dec roll nop mov inc loopne or dec pop jne loopne movsl add mov sti add sub aad mov adc jmp sbb loopne xlat mov add push jge in (bad) je lcall add sti or and xchg jg sbb popf dec mov or andb incl xchg bound mov leave fsubrl xchg xchg add (bad) jno add test and enter add xchg addr16 pushf cs mov push test or or and sub ret pop mov fwait mov or insl add int3 outsb les add dec test lahf movl inc stc push faddl jae push mov or bound dec leave mov dec sub adc fwait pop test add nop shlb sbb lret xor pop gs push cld push fldcw push mov adc popf fs addb xchg push xchg or sub mov push inc scas mov hlt pop xchg loop inc jae fs jnp adc cmp pop rolb aam sub in sbbb es push adc push adc fild (bad) and and repz adc cltd shll push or mov fistl (bad) stos cmp nop cmp and imul cmp add and icebp and push inc ret jmp push sbb xor mov adc stos cmp inc xchg inc add push dec cmpsl jbe pop add xchg (bad) fldcw clc lods es cltd pop or xor and cs inc mov mov push fwait xlat insl shr sbb push dec (bad) lock cltd cs add lahf insl (bad) sarb mov xorb adc add cmp cwtl dec inc dec add xor cmp fs pop dec aaa fdivrs in xor addb and cmp mov push shrl push cmp adc push aaa cltd push inc nop mov sbb cs inc fdivrs (bad) sbb or cmp jnp mov test test push into mov and or add loopne jo xchg pushf out in ret insb ret add jge dec add push fwait and inc xlat lret push orl call mov dec or fwait mulb add sbb cmc (bad) mov sbb mov inc insl dec lock cmpsb mov mov and sbb insl in inc movl mov fsubp int push movsb addb loop shrb adc (bad) out adc fmul push fs and adc insb mov cltd dec ficoml dec jno (bad) hlt and push sbb iret call cmp inc fbld sbb or iret out push add rolb daa arpl sub andb lahf fidivrl fs adc mov in xchg jp mov ret adc sbb xor imul cmp cltd movsb test or mov add (bad) aam dec mov (bad) (bad) lods test mov pop sub sub add fndisi(8087 clc mov scas shr sbb push pop (bad) out iret inc lahf jo dec inc into add fldcw add inc add inc movsb inc nop xlat xchg push add sar mov jp jp dec cmp xor xchg dec push mov or icebp lods in dec and cs xor jo nop scas add mov push test inc sub jne sub pop cmpsl (bad) shlb sti bound repz in mov std push aad pushf jge mov addl out cwtl leave xchg shrl pop cmp inc add and mov dec mov (bad) adc xchg mov out pop or inc inc lods test adc push test nop jo adc in outsb dec or fcomi cltd inc jge sbb shlb cld rorl and pop lea mov add and adc mov fidivrl dec and and pop bound inc jne out fdivs orb clc (bad) std jp inc (bad) mov mov insb push fdivrl mov pop push or insl ud2 stc scas adc mov fsts mov push sbb imul mov cmp mov mov xor aas xor push jl inc loopne adc loopne fwait imul or sub cld mov or and add xchg or in (bad) mov jo mov xchg push push jno inc ja jle or test inc fmull movswl cmp dec out mov lock or cmpsb inc cld push loopne dec fs xchg lock jp xor insb int je insl and lods jle or movsb jbe or jmp shrd mov xor aas es les mov inc add add xor shr cmp inc sub add cmpsb addb inc adc loopne out xchg mov inc adc pop add push sub inc stos (bad) idivb adc andb int3 inc hlt cmp es mov adc std lods ret orb inc adc out mov hlt test cmp mov or fcmovu leave mov rcrl adc lcall cs les mov mov int3 sarl add lret mov cmp push (bad) mov xchg jle xchg or lods int insb mov hlt and cmp xchg xorb cs leave daa insb out xchg push and outsb adc adc mulb rcr dec push xor add (bad) or aam jno adc inc pop rclb cwtl ljmp mov add xlat inc and xor mov (bad) add cltd dec jmp es lcall pop pop add rcl xchg mov push clc push insl cmc out and jmp inc pop (bad) shrb daa out xchg (bad) int3 sbb insl or mov xlat cwtl les cld xchg dec loopne add add addr16 sbb stos mov gs pushf cmp jmp cmpsb jl add aas or in nop cmp or push cs push jp pop outsl dec sbb mov in xor adc or pop cwtl cs bound add cld fisubr fadds cmp xchg arpl ljmp js and in sbb cmpsl add ja fstps sub dec cmp int3 leave and hlt in sbb fsubs add push inc jge sub and rcrb inc pusha and mov fwait mov xchg mov fldenv mov push push cltd into shll lods push js add mov sahf sub push cmp cld or inc and and mov inc add mov aam cwtl push cmp add adc sbb xchg cs push push ds and scas adc add incl mov cs in mov mov (bad) orb out popa or sbb mov lock int fldenv dec loopne subb fdiv cwtl mov cs xor adc pusha imul pusha and pop xor les push cld cmp or sbbb sahf lcall and ljmp insl bnd sbb and test push adc mov dec and push cld cmpsb xor xchg jns (bad) xor dec shlb cmpsl loop pusha je add mov add mov xor push iret negb push roll xor push push nop dec rcl movsl enter lock cmp int3 sbb cmp movsl add cmp xchg loopne lock cwtl mov cs cmpb arpl adc jo ds sbbl fs mov out xchg or fwait out and and mov cltd pop lods fs enter or push dec push inc (bad) mov aas mulb cmp mov cmpb adc pop push mov xorb arpl xchg add mov jg aam pop mov jnp sbb jne sub cmp pusha out (bad) hlt addr16 (bad) xchg les sbb decb repz mov and add or repnz sub add pop push add xor rorb or lahf fldcw lock sbb add lods mov add push push icebp sub dec pop adcb testb nop mov lods (bad) jo and loop sub testb lock sub jmp and roll add xor sbb mov lods jns dec movsb push and ret cwtl jl ljmp rcrb repnz jno inc sbb les add loop outsb cmpsb dec in cmp cld pushf shrd push pop push loopne rorl add add inc cmpsl loopne pusha mov and jns inc inc aas jns jmp and jle inc cmpb fcomp add fbld adc dec inc insb add mov test mov (bad) repnz test (bad) dec (bad) sbb es shrb subb mov sub call sub adc rorb test add enter test sarl jge leave popf enter add psraw (bad) push xchg cltd fs (bad) add (bad) decl inc sbb xchg mov and sub cmpsl cwtl jl in jnp clc sbb adc inc mov cwtl into add icebp xor adc jo mov test push inc cmc fs sbb pop ja and adc andb mov shl jnp push icebp pop sub add push mov cltd sub xor stos mov xor add sbb mov je pushf add push insl out mov mov fisttpl jns dec faddl sub outsb xor aad sahf sub ds mov inc js or cltd sub push or dec pop (bad) push hlt add jae sub mov adc lock outsb pop fiadd sub mov rcrb push xor inc hlt out leave jmp push push adc lds dec add jge cld adc cs imul notb sbb mov pop setbe not mov push fstpl add add cltd call stos inc sub and or pusha add xchg lods aam clc test adc and push pop jecxz rorb xchg or cwtl fwait push fcoms ljmp or add push mov ss pop cmp add xor test xchg push add fiadd adc pop sbb clc adc mov enter mov jp cs pop inc add push jae out dec outsl lock or push xchg enter (bad) or jl (bad) mov in jo dec clc sbb jl enter pop mov loopne mov add push cmp cmp sub test mov or imul int3 adc push or mov sti je gs adc and inc add call fld adc mov mov loopne popf adc or adcl sar lods adc xor pushf sub add dec mov or or cwtl inc jbe aaa jae adc jno add enter subb xor jl jecxz pop inc or xor pop adc push adc dec inc sub sbb cmp in mov add loopne push sub xor mov xor mov or adc mov test repnz xor and stc push xchg jbe cld xchg xchg inc pop mov pcmpgtw add out loope or add inc sub push js inc insl rcrb (bad) mov testb mov pusha or add mov jecxz or mov (bad) mov xor jnp rcrb cli pop or push cmp adc add and pop loop mov or icebp mov add add xor mov movsb imul add push jno clc imul dec add mov push xor sbb or add and pop cmp push iret fucom add std test and pusha rol add fs xchg fwait mov ds mov idivb jge add sub int leave popa mov lahf in repz data16 arpl mov xor jae mov push jnp pop mov out add cmp or js push jmp shrl jp nop push imul cmp popa sbb add movsl sbb mov (bad) hlt sbb dec pusha sar test pop add cs lahf clc xchg add mov fildl inc int dec jns loop rorb mov adc aaa xor mov mov clc or mov les sbb push lds xchg fwait push mov sub xor movsl insb pushf xchg sub stos lods repz and cwtl mov push fcoml mov dec sub mov out push push inc or loop xadd repnz mov mov out lds pusha pop cmp cmp lret cmp pop ljmp and fwait mov nop (bad) lock add int lods rol push jnp lea add jo dec and dec xor push cs rcr out cmp jmp cmp mov mov mov adc aaa mov fs cmp in or or and mov push cmp mov push mov sub nop test pusha mov jle out or lret add sbb sbb outsb adc or cmp pop mov mov cld fwait jge sbb mov or data16 std mov inc mov jne popf add imul fidivr xor mov sub jno aam cwtl mov fldl pushf lret xor cmpsl popa add clc (bad) test lods aam popa out or inc out cmp cltd jne mov int3 mov xchg addb jnp nop add mov cmp adc inc fadds sub adc clc jns push push hlt sub pusha mov data16 pop clc pusha mov imul inc in pusha cmp add jmp mov popa imul mov fcomps aaa int3 je or push mov popf cmp push movsb cmp test pop mov js test les and inc loopne loop out ffreep mov push rorl cmpsl adc fsubrs cli mov or stos and outsb pop mov mov outsb cmc (bad) lock insl and xchg lcall fcompl in adc adc mul xor and fmull and mov cwtl loopne sbb loopne les adc (bad) faddl mov jl xchg pop inc sbb inc ret xchg orb mov and cmp and sbb push nop xchg add sub bound xchg sti loopne movsb cmp inc stos jo xchg ret xchg sub cmc mull dec mov mov mov mov lock sub mov negl xchg (bad) xchg (bad) into pop ret out xor mov push ficom bound hlt nop lea and insl cmp push sub mov mov jnp loopne or nop in pusha sub jno mov int stos mov cmp mov add inc or add jmp inc mov mov push or add add xorb cmp sub in (bad) cmp and mov adc enter arpl mov shrb lock in jle add ret mov pop aam xor cwtl das ret jl pop mov mov sbb and iret or xlat fimul nop andb nop and push xor fsubs xor and push in sbb add cltd fadds jmp dec add sbb dec pop cmp int3 movb and div cwtl sub pop sub dec fnsave bswap outsl cs lods sbb insb enter pop lret jg mov add cs enter scas (bad) xor lahf mov incl mov ret js or push or jg dec (bad) xor mov push xchg aam nop adc mov pop inc xchg (bad) fwait subb add pop dec cmp dec pop mov mov jne movsb movsl cmp and mov ja std cmp ss adc cmp mov add jmp (bad) icebp int3 inc je xor adc int3 xor xchg cmp sub or pop mov das add rolb loopne mov inc aam lods not jl or cmp and mov or add cltd inc add ds inc or xor adc dec xchg leave jo in mov adc in cmc fsubs mov dec mov xchg pusha add or cmp mov movsb (bad) jae add cli xor cmp cmp pop ret imul loopne sbb pop sti push pop cmp mov mov pushf (bad) xor mov and add push jecxz mov pop pop loopne in push iret and lcall lea int3 xchg fisttpll cmp aam mov pusha and cmp pop sub pushf pop mov test add pop test mov and sub lods rolb loope icebp repnz cwtl fwait rclb sti pop and dec icebp push mov pop cwtl je shrb das add ljmp in (bad) mov xchg divl add cwtl and pop lret imul adc xchg and in dec movsb dec pushf inc mov and and mov adc std loopne enter or or xchg loop inc mov push xchg fdivl sbb add ss inc (bad) fcoms add cmc cmp mov pushf lock xor jne adcl ret mov scas adc scas loopne cmp pop xor pop xchg or lcall sarl pop inc and bound pop popa (bad) mov sub xor andl sbb pushf add mov push mov mov push add loope sahf pop imul xorb add cs jnp iret adc push cmp and pop hlt or pusha fiadd push ljmp fxch add jmp add mov shrl sbb (bad) sub inc in mov adc pop (bad) cmp and fwait (bad) xchg sbb inc xchg jae scas add imul rcrb or and and mov stos sub mov shl sub movsl fldenv mov mov mov int3 push pop aad push adc add jno int mov call jbe je push subl loope pop sub aam jl subb andb sarb and (bad) mov push xchg dec out push dec and pusha push push add aas test cmp inc into adcb cmc push test push orl (bad) ss bound mov ret popl lds frstor mov inc adc sbb push loope add inc cmc mov mov jg push add push (bad) andb mov test jo (bad) cmc or in add pop xchg cwtl mov adc pop mov pop dec hlt push test aam enter mov push adc add or jbe xchg dec aam mov mov push xor in add inc and xchg mov add add notl xchg lods sarb add loope loope dec sbb sbb and pusha xor xor aam add cmpsb orl icebp mov inc sub inc stos mov push movsl movsb add xor add sahf test (bad) jno mov movsb add dec jb inc in pop add or jo rcrb cld ret pop mul push xchg repnz mov into mov mov and pop test popa cld adcl int mov cmpb mov mov xchg fidivr sbb dec ds jb mov sti fwait out out loopne clc mov add jle xor cmp xchg rorb add jecxz cwtl movsb add mov or es test inc in cmp gs popa mov jo mov int in fsubrs xchg mov (bad) hlt stos jmp xchg xchg add cmp inc lea and and and cmc pop sub lock or ja mov pop aad or rorl aaa daa jnp adc (bad) sub and fcoml dec int3 adc sub loopne and cmp mov sbb cs fadds outsl inc dec popf (bad) ret cld and mov ja pop mov push mov daa (bad) nop and daa adc mov and xorb and les inc add ret inc push fdiv jae pusha stc xchg push idiv pop dec mov or lahf pop (bad) mov movsb mov add stc test xchg movl lea lds (bad) js iret rorl sar (bad) fsub mov stc in inc push daa mov cmp pop jne mov jne sub xorb pop or xorb adc sbb mov lcall (bad) (bad) inc aad push jmp fwait mov inc fmulp dec jnp jge sub mov mov lock incb cwtl add cmp xor xchg sbb mov mov mov fs push inc add mov aas cwtl push aam lock jb add pop sbb pusha rcrb (bad) popf cmp push ds and sbb add inc cmp sahf rorl dec add add mov xchg push sbb movsl push cmpsl stc jmp sub (bad) sahf dec push hlt js mov xlat bound test lods add and cmpl xchg test imul sub ret (bad) mov out mov push cmp sbb and xchg push ljmp sbb js mov add or hlt repz and aaa mov and int3 mov sbb jnp lods xchg aaa fildll xor add xlat jo aad dec add daa adc xchg jmp cld add rorl mov add subl (bad) xor xor jo roll rorl jns xor add dec add and mov repnz lret mov insb add sbb out xchg xor js cmc xchg add lcall into or incl ret sahf add mov dec mov ss jg lock mov mov cltd cmp pop test (bad) push repz xchg cld fadds dec jmp and cmpsb xchg (bad) leave mov aam cwtl ss jmp xchg fstl sbb add add aaa sarl mov (bad) mov mov out scas push popf sub mov les out in cmp or inc mov fs adc orl test mov (bad) out jbe les mov mov push cmc and cmp or mov add js in in adc test sbb add pusha jo xor lcall ret pop mov mov (bad) scas test mov loope movsl ffree inc hlt aas rcll stos adc cmpl test xor test adc sub loopne movsl push mov lds nop fcompl xchg sbbl fsts inc sub dec mov or mov jp fs aam enter push incb cmp and add mov insb lods add sbb std addl or and scas xchg mov or mov and xor pop nop out pushf lds xchg movsb (bad) fs cmp dec dec adc mov ds leave push add push fnstsw enter subb pop daa popa sub in xchg cltd test mov cmp loop fstpl faddp lea in imul arpl lret inc in xchg mov hlt stos out or (bad) or add and cltd adc out incl rcl fstpt xor xchg xor pop sbb cmpsb cs inc mul xchg or clc and out pop cmp mov jne jns hlt add xor leave push push jnp ret mov push aam and rcrb aam cwtl push inc aam xchg imul imul xchg bound mov fiadd out call inc push push fucomp add push scas add repnz add jg cmp xchg fs addb push adc inc nop mov stos mov insb adc enter test dec cwtl sub add or in mov je mov adcl loopne lods cmp cmp dec sub test adc pop sbb enter mov hlt adc mov lods clc (bad) sbb rorl js fstpl add ds aad push stc adc cmp or and and inc cmp sbb sahf bound jnp fmull cmpsb lods stos inc arpl push mov adc dec xor inc leave push setg inc mov rolb add jge sbb (bad) inc mov (bad) sub fs xchg mov lods mov orb mov push mov rorb xor sbb xchg mov fcompl inc nop cmp aam scas (bad) jae ret loopne movsl lock xchg fucomp adc dec ret add mov outsl and xchg and int3 mov mov mov or pop movsl dec mov repnz adc sbb pop add ss lods inc xchg cmpb mov xchg push inc mov push pusha adc aas inc and mov cmpsb lahf jle in sbbl adc and rcr stos ljmp push or out std movsl sub movl shlb fcmovnbe orl cmc in xorl fistp rclb test mov nop inc xor inc jl andb mov jl adc jo xchg bound jecxz inc and cmpsb ret and sub test add xchg cmp inc cmp mov jb call call cmp (bad) xchg mov add imul std xchg mov lds mov cmpsb sub add add pop sbb scas mov sub inc and hlt lods xorl pusha xchg jnp pop flds aad sub push (bad) dec enter sbb sti push jp mov xor dec lret inc enter mov jg hlt enter adc jns dec add and pop leave mov nop je mov addb mov cmpsb into and mov adc xor cmp mov shlb jmp pop (bad) lret xlat push imul out imul loop xor lods jo xchg pop sbb dec out popa inc and push stc test (bad) adc test sbb jnp cmc mov xchg fwait test in js and push (bad) push sbb ret inc (bad) jmp dec mov es adc mov mov lods mov push daa stc inc push cs (bad) xor xor mov ss and and rcrb pop out add xor loopne ret or add imul jle sub sub push jnp and stos adc (bad) mov add mov aam add (bad) icebp and mov xor orb cmp and push and (bad) jne mov jno pop lock mov add ljmp call aam push or and inc cmp sti xchg mov pop adc and shrb adc stos or inc jns push jo xorl je xor push cmp lods xor dec mull ss sub fnsave stos adc pushl adc call xchg dec in cmp insb sub push inc cwtl or add not fs into pop sbb mov aas into insb or movsl mov cltd js sbb js and adc and dec imul mov push frstor pop or inc inc dec repnz lods or sahf jl fsubrs or mov mov add lea add jmp stc out imul xor repnz xchg cli outsl shrb scas stos insl into js mov popw pop sbb ret test inc add sahf add dec in addl cltd xor fistpll add popa jmp mov pop addr16 call jge mov inc in orb lret push or xor or icebp aad xchg xor loopne jb call lods movb or mov sbb mov and arpl addr16 xor mov xchg push push sub adc jno pop fs icebp mov adcl test sbb jae inc mov add sbb mov or or aad je jbe mov add arpl jns jl pop sub std mov imul push in pushf ret sub nop mov dec sahf inc nop mov stc leave mov fs jno or pop xor sbb push roll mov and xor adc push in daa jns push loope test addb push add jle pushf (bad) iret fwait or push cmc fsubl add insl fincstp lds xchg xor or dec jno adc or add movsb or or aam add jp stos xorl mov jns mov addr16 idiv push push cmpsl mov lods push fwait rolb fdivrl and jl sbb xor xor mov dec test push lock shll mov int mov repz clc jmp bound mov sbbb xchg fadds and xor popf (bad) popa add aam fnsave push sub ret pop test sbb inc insl test loop add xchg lock xchg enter nop insb push jg nop add movsb and sahf xor call (bad) pusha sbb adc es (bad) loopne add cmp lea or cmp and mov gs inc mov mov rclb stos mov and enter xor rorb int3 xchg push fdivrs mov add cld fwait ja gs xchg cwtl inc adc hlt xor addr16 xor in lock je inc stos and cwtl int3 clc mov stc pop movsl add gs aam sbb into iret xchg jno sub mov jmp mov pop lret clc sbb or jae xchg call mov xor inc nop jb xor pop add scas rolb out ficom adc jb cmp and push lret or jne adc cli inc shrb mov jmp add test mov repnz mov loop inc push jecxz cmpsl xchg imul push mov xchg int3 cmp sbb mov and sbb jbe push lea xchg push arpl and add xchg popf (bad) dec mov sbb call jnp jnp sbb mov and adc dec push std pusha pusha sbb jo clc pop pop repz dec loopne es adc sbbl shlb scas mov and xchg add adc scas pop inc (bad) lock dec lahf add shlb ljmp dec call sarb gs rclb mov scas clc test sahf inc mov cld cmp sahf inc js jno sub fnop add test fwait add fsubr xchg jne imul (bad) repz pop enter xchg xchg cwtl repnz xor loopne fisubrl in cmpsb ljmp ret mov fildl cld out jb shrb mov push loope pop jae push mov flds or (bad) ss xlat dec jge add jno xor push xor (bad) nop ds inc test cmp sbb sbbl xorb ret fnsave stc dec popa cmp xchg jne (bad) sub js icebp jbe enter sbb lea push jecxz leave mov mov xchg jns pusha dec popa int bt pavgb cmpsb and xchg inc adc out andb mov lahf bswap imul adc movsb inc fmuls repnz lea jmp pop cld add add mov lock ss cs out test jo iret push jg jmp mov je in stos pop int xchg add loopne sti in push rcrb adc mov mov cmp clc (bad) lods test fwait nop dec in push cs mov test or outsl stos mov inc rolb jbe in imul in push mov loopne mov leave iret pop ret adc mov addl fdiv mov decl xor (bad) ljmp push test mov jo (bad) lcall sbb sub scas sbb mov cli stos push inc lds sti add ss stc fadds shl fcompl cmp imul daa addr16 jo test inc loopne lds xor int3 jbe dec cs clc add sub lahf xor add pop jno rclb addb sub pop add sbb jno jbe fisubrl sbb rcll pop xchg or push ss in (bad) (bad) ljmp push dec and hlt xchg pusha and or adcl push cmp and cmp roll repnz fstps push adc ret loopne pop js ret adc mov dec aaa add cld scas les mov insb icebp loope adc or add daa fsubl dec les in lock sub push add xor jne (bad) cld sbbl dec add in ret jns loope in inc push sbb fmul inc nop fcompl repnz cmpb andl add int xor xor insl inc arpl cld stos cmpsl inc or scas push jmp add push lcall int3 and repnz push mov movsl in testl mov jge add insl sub xchg (bad) push cmp bound sub fcompl sbb arpl in add mov pop shll dec xor inc add adc push lahf add fadds jge aas inc push and fwait xchg or xor xchg inc sarb dec or or movl or add or xchg add add xor and in or in cld scas (bad) or sub mov mov (bad) or adc cmp pop add mov sbb lcall mov push in sub inc xor add pop mov add cmp adc movl subl mov jb addr16 or lea inc or loop sub test mull mov outsb mov push add in dec addb test adc (bad) test or shll jnp aad sub xchg fbstp xor or leave js adc ljmp fiadd adc (bad) int3 out jno and ja movsl cmp mov add xor jae ret fs cmp cmc lods xchg (bad) fisubl fsubrs cwtl ret jo repz mov fdivs aam push out jne inc add insb add cmp jp loopne jbe icebp add or mov inc and jne xor lcall (bad) lahf je jno xchg enter (bad) ss (bad) cld push (bad) mov ret bnd inc sub fstpl xchg (bad) jge lcall xor inc fsubrp js sarl mov or pushf add pop shll ds cmp push cwtl pop pushf jmp jb dec xor mov jecxz pop mov or aam pushf inc lret fmuls adc jo in pop mov mull dec loopne movswl mov cs jle xchg add jecxz in sub mov lock std out mov shl pop mov mov jl push addr16 adc adcb fimull cmp leave cmp cmp dec sub mov out lock sub dec push cmc xchg push or add movsl xor xor enter mov cmp into and (bad) push lods or pop xor fs pop dec mov xchg rolb xchg js add shrl or inc xchg mov test cmp pop stc sbbb mov call push lret aas sub (bad) push jp test test lss shl (bad) daa adc and dec sbb add mov int3 cs mov fldcw push sub sub jno jns dec mov enter inc mov (bad) xor cmp adc mov mov mov shrb sbb dec push ret jne push jnp mov xchg adc sbb adc xchg pop jecxz mov cmp jae mov adc jle lock adc or inc adc mov aad pusha and stos jg mov loope jno add aaa loop fcmovnb int3 jl aas movsl pusha sub cwtl add jge ret addb loope adc push pop ret nop nop fidiv pop in mov xchg inc hlt mov adcl mov (bad) xor add out push push or lods call cwtl sbb cmp or add (bad) repz (bad) std or rorb add loop in mov cmp and out aaa lds in hlt adc pop test in adc jp andb cwtl mov and (bad) mov add in and sub pop arpl pusha dec add into push mov pop cwtl (bad) push cmpsb mov or dec orb outsb mov dec xchg xchg add les lods ret sahf sbb clc mov rolb std inc mov xchg pop and mov mov enter mov ret mov in adc cmp pusha add mov pop (bad) rolb (bad) mov (bad) adc (bad) gs test push lods xor loopne movsb sbb fist pop cli das adc xor and in push rorb adc inc adc or adc cmp sbb mov cwtl int3 dec xor mov js xor pop into pop jo pop shl addl xchg pop xchg fcompl mov jge sub test mov xchg cs mov in inc fild adc sbb add xchg mov sub jb inc bound mov into std pop out lods push bnd inc pop hlt sub cmp add sub stos insl add loope xchg inc std paddq jl call add or add pop and pusha sbb add adc and push mov (bad) rcl cmpsb in mov jg popa cltd mov dec adc add hlt inc xchg mov cltd arpl sub fsubrl sbb mov mov xor sbb dec fisub into rcrl dec add sbb sub xor pop xchg or je push dec add pop jp addr16 cwtl xchg sub push rolb sbb rolb mov push mov xor test cwtl inc or mov mov insb je adc inc popf (bad) decl sbbl or fdivr mov insl fistpl sub add lret push lds push aas adc outsl adc pushf or pop add dec stos add and sahf pushf xchg loopne and rorb inc mov adc loop test mov mov test divb adcb test sub ret scas rolb push shrl xchg aas pop cmp sbb cltd ror cmp movsl ds jmp dec xchg rcrb mov in cmp or (bad) mov pushf sub ds test pop pop mov sbb push xor in xchg mov sub rorb mov ret cmpsl and dec xor add adc loopne add xchg push mov str sbb andl jge mov or fsubl daa xor (bad) bound addr16 into insl add ret stos push inc in (bad) add jmp out (bad) aam inc adc xchg mov hlt roll test (bad) out mov fimul pop in lahf add xchg ja or xor jmp mov cwtl cmp adc loop ds (bad) loopne orb pop add xchg aad mov aam es sbb (bad) pusha sbb lock int push mov fldcw js xchg mov in add in add sets xchg jmp sub pusha nop enter fnstcw and sbb xchg cmp mov push xor adc in add jp push xchg les or mov sub and lahf sub pop arpl addb call lret cmp xchg int3 jno imul ds rorb ret pop hlt pusha sbb sti jae mov fmuls aam in or xor mov rcrb and lea ja cmpsb test dec lods xor enter clc dec cwtl sub add and and jns jge out push adcb gs or pop cmp fild xor pop mov cld mov xor in add outsb adc sbb mov into fbstp mov or push xor pop xchg xor sub inc fdivrl in rolb bound adc incl adc jge pop sti cltd shl pop notb sbb insb sbb jae dec or jnp fs fiaddl decb mov shrb adc icebp lret add aaa add lock adc push repz mov pop adc cmp push lcall lea sarb mov xor pop add or (bad) mov mov push (bad) lds mov and adc nop mov xchg add cmp xor mov jle into shlb cmp shlb xor mov sbb cli add loop inc clc cmpb cmp rcl push sub pop fcompl dec jbe xor orl rcrl mov icebp mov mov mov xchg pop pop add insl push test pop test enter aas frstor push fisubr andl cmpsl push mov fidivrl and lods and es ficompl flds sbb jp pop subl mov adc pusha mov lods and cmp fisubrl in insb and jb cwtl xor mov sbb pop call adc cltd aad jmp pop imul leave (bad) adc lods push and cltd sub loope adc jns xchg cmp dec inc xor mov push mov adc add pop and xor insl dec sbb pop pop add push stc lret sahf and pop add test inc push dec sub test jmp push mov inc popf mov xlat das insb insb mov xchg jl or xchg push out nop xor xchg leave push sub repnz mov sub mov or xchg push push jl call inc (bad) dec out sbb and mov fldl xchg jecxz mov mov mov and hlt test cli mov push sbb outsl in jno loope sbbb int3 stc push sub mov femms loopne push inc mov mov arpl push and lds lods jmp in mov sbb push mov add cmp cmpb inc stos pusha scas pop or push xor or jnp rolb lret xchg add push mov mov jmp ffreep stc add in imull aam pop mov add mov xlat pusha movsl dec ljmp nop sub sahf dec sbb pop fnstsw subl je pop into ret and aam or loop inc pop nop insb cmp test cld lock popf add xchg scas and xchg shll cwtl and xchg movsl pop stos call mov sarl sub sbb mov into or test movsb daa xorb fidivl xor jno incl jb jecxz pop das mov fisubl loope push stos xchg and pop pusha or sub mov test add push (bad) add mov (bad) jmp mov shlb sahf adc sub mov or fsubs pcmpgtd sub add (bad) add xlat cmp scas and js add fimull inc xor push loop dec cmc icebp mov sub lods pop mov and mov mov leave pushf add or mov test dec sub test shr cltd call lock (bad) cld mov inc mov inc cwtl nop and test push in cmp pusha jecxz mov dec mov enter bound pop adc push adc inc push inc mov lock shlb fsubs daa push push sbb add sub inc hlt fwait inc fiadd mov or adc push cmp push fcoms clc (bad) cwtl orb push mov dec js push cmp in mov fnstenv mov subb cld cmp mov aas xor test add call mov popf mov (bad) iret enter test mov aam add leave shrl test add (bad) lock scas (bad) shr fnop push call pushf divl faddl sar scas add adcl test or pop mov sbb dec sub xchg inc mov (bad) subb (bad) pusha push adc mov mov mov mov test neg into loope pop push push icebp sahf jle adcb (bad) fs inc shrb clc cmp cmp jmp dec inc sbbb mov xor jle fimull dec repz das into dec sub aas pusha movsb lock test dec mov lret movsb fstl mov int stc pop mov stos jmp push loopne push and jns (bad) xchg mov inc add lds fnstenv jae xor mov hlt xchg (bad) xchg add xor xor sti dec and add outsb or pusha insb xorl pop add xchg (bad) push sti fdiv xchg add iret and es mov and fwait in or mov push xchg inc pushf sbb mov (bad) jg push (bad) notl push mov inc ror jae dec mov sub add push in inc inc aad add add xchg shl mov and xchg mov jb mov xor fcoms clc or pop and into mov test and out cmp in out add test add (bad) add mov ss mov mov mov cs andb sub xchg xchg add incl bound outsb int3 sub ljmp in add push iret movsl fist add mov (bad) mov loopne xchg xor movsl push pop add adc test sub in fwait mov push bound cltd mov out aam les fwait cltd scas out or sub add hlt lcall jno sbb push add sub rcrl xchg add cmp inc cmp mov sub mov js push enter shrb cmp leave shll addb mov call pop sub ljmp lods add ret aas or mov (bad) jnp add adc push adc (bad) leave mov shlb es call and (bad) xor dec lcall and cld xor lret dec je xor stc les stos adc jo dec mov jg in test (bad) sub mov adc push push jle fimul or sbb xchg push test pop sub lea cwtl mov jle dec les int (bad) (bad) lret and xchg jo pop push mov mov loopne sub aas and add jns rclb fsubp lock daa dec push jo or xor cmpsb ja adc fs pop mov xchg fldenv add jne insb sub scas add subl test push out cmp and cli iret add mov es jne fimull lcall push and jns mov push jle jae test sbb sub aas (bad) adc mov rorb mov hlt mov ljmp bound jo or mov cmc pop jl test push dec lock test lcall add xor cmp fimull (bad) add insl adc mov mov inc iret sub add and cmp inc sbbb add xchg add cmpsl leave aas (bad) dec ret jbe sbb xor mov subb int3 ficompl out les push (bad) nop test sub or jo add movsl cld and fsubs or mov add and leave data16 xor add cmpsb cld jmp lea push cmp js mov xchg popf mov cmp xor cs lds or cld inc push pop testb adc jecxz orl out lods loopne pop lcall int3 mov inc cmp daa add lcall add lahf fnop lock sbb das pop popa xchg push out cmpsb inc xor sahf xchg shrl ja (bad) cmpsb adc aas and jne push ret push mov push sub xchg pushf xchg shr dec sub xor jbe,pn push add dec mov adc mov in adc mov test in xchg adc aaa add stos jl dec les test and jae add mov jp dec cltd nop cmpsb or sbb pop div out test mov xchg mov ja fs sub clc xlat das xchg hlt and sbb mov flds cld add clc js stos push nop add fs je sbb add cmp lods clc or push sub repnz jo enter jecxz mov xor jno ss (bad) jo stos dec cmp (bad) fidivl push int mov sub fnstcw daa sub stos mov dec mov add mov jl jnp add sbb mov sbb daa adc push cmp mov mov clc cmp dec lock push popf pop inc dec and fsts sub dec mov clc cmc mov imul enter inc dec push lcall xlat inc pop pop lods xorl mov mov xchg cmp sub cmp in push hlt (bad) insb jno pushf popf callw jl inc test je mov inc dec lods adc inc in lock mov push sub (bad) stc out inc test sarl loopne fldcw daa stc lret mov mov mov xchg loopne ljmp lcall or out push inc shlb stc and or dec lock clc pop cwtl js and and nop cmp push outsb and add out rcrb jno xchg popa xor pop xor fs dec out inc pop mov pop flds fwait and popa push add pop cmp cwtl hlt (bad) sub out cmpl cmp mov sub sbb leave cmp adc dec push out pusha or or pop mov and cmpsl sub insb mov roll nop enter adc sub and (bad) push push test stos cmp xchg cmp mov sar (bad) push pushf rorb or loopne push dec mov cmp std push iret les addb mov mov lds push xor fxtract adc fstps in jp and mov scas xchg mov cmpsl and sbb pusha mov pop cwtl xchg loop dec and add mov (bad) test nop and mov lock subl fadds jnp mov xchg insl scas pop js outsb mov sbbl push ja lock pushf dec mov push xchg sub stos sar cmp data16 lock cwtl add test sub add jns mov push mov mov push xor jnp jb sub ljmp add adc inc jnp rol test (bad) ja sahf push daa cwtl sti fstps pop mov adc mov pop add push add mov cmp push movsb into and stos gs cwtl mov adc incb mov push pop (bad) imul fsubrl loopne jmp (bad) cltd nop enter inc jo sub cld xchg cs add out insl out add xor (bad) dec lcall xchg add loope stos mov sbb mov xchg mov cmp sbb or addb jnp add cmp xchg mov xchg xor cltd in or test sti js pushf arpl imul ret mov cmpsl ja clc or add jno mov xchg dec mov mov push or and sub sub (bad) enter inc ja movsl cwtl je pop leave shlb jno push cmpsb popf lret les xchg mov add jmp and mov inc mov (bad) hlt add cmp sti cmc and cwtl mov xlat js adc mov incl add mov and sti mov xor movsb adc xor mov pop adcb cli xchg pop sbb and rorb loopne mov testb push loope icebp popf (bad) mov fdivr rcl mov bound aam imul push xor add adc sub push arpl loope sub in ja mov mov jecxz das xor (bad) jno xchg rolb push adc jg or or (bad) push xor pop add or inc xchg pop jno mov icebp sti daa adc mov stc rclb mov (bad) dec adc add adc lds test sbb and jns cmp mov jecxz and push fs xchg pop in mov mov pop mov cmp nop ret pop dec clc xor xor rolb stos lret push out mov cwtl ja andb dec aas fwait xchg ret cmp push mov in add xchg and test mov mov fnstcw mov adc stc adc lock mov rolb (bad) (bad) or and es cwtl inc jecxz clc mov lods mov and loopne pop or push sub jo fwait pusha (bad) mov sbb pop inc and push or add fisubr mov push add imul out sbb pop cs add xorl adc jmp pop in stos sahf push in inc add lcall out and test out scas dec add cmp inc movb mov outsb pushf mov cltd xor sbb mov add mov xor popl mov je mov (bad) (bad) lahf daa dec shrl enter add sbb cmp in lock sub fistpll aam sbb add adc scas jne shlb lock mov cld add (bad) xor sub mov pushf rorb xor mov rcrb (bad) fwait (bad) rcr xchg movsl lock aam xlat enter and icebp orb (bad) inc faddl add scas dec add adc xchg xor jp,pt add test adc mov mov in je jbe (bad) ja push les js mov sahf sbb dec push xchg add or (bad) loop popa pop (bad) xchg sub sbb inc jl lahf (bad) adc xchg shrb mov add lea aaa int3 test adc xchg xor mov jae pop movsb hlt push dec call pusha (bad) mov cwtl rcrl mov and push jo notl mov sub loopne dec (bad) add mov int3 call xor push jno aam test (bad) mov push dec cmp loopne out andb jg sarb push sbb (bad) pop dec loop pop aam sub cmp jmp ret inc xchg xor mov add test lea sahf add aad idivl aas adc xor sbb push test add movsl mov shrl push and loopne clc lods out rolb push dec push aaa push arpl (bad) mov sub cmp jnp nop or jge les add and out jl cltd push xchg xor pop mov mov shrb out dec icebp sbb roll sub mov rclb jmp (bad) push xchg call mov les pop push jmp les xor stos (bad) mov (bad) fcoms shrb mov push mov mov sbb pop fstl mov mov mov stc js and das arpl sub and flds lods xor sub pop mov adc push cmp lret cmpsl es dec loop and pop stc mov inc subb cwtl pop add push dec sar jl loopne jg,pn adc push jno (bad) pop xchg jnp pop in bound pop pusha lcall int3 mov pop or xchg or push fwait lods nop sub sahf cld test and push push push adc dec mov enter adc movsb xchg js daa add (bad) hlt add mov xchg daa bound adc cmp add xor pop push in pop cmp cmp mov mov and jp jecxz and mov scas push adc cmp xchg lods daa (bad) addb clc jne cmp pop inc add add ret cmc mov lods mov or xchg xor call xchg fbstp or cltd push mov loop dec pusha in cwtl xor enter xchg sbb pop nop and mov sub into sti sbb mov fstpl cmp adc into and call cltd push jo jbe movups or add and ret adc mov mov add jb test sbb pop pusha mov inc xchg xorb out nop add in in pop (bad) nop lea ja loopne dec xor add fbld or xor sbb sbb xlat adc mov mov mov test mov andb inc push cwtl rorb shrb outsl daa mov cmpl jns inc into les lods test dec and cmpl adc mov cmpsl xchg push dec aad aam push pop lds and add sahf in (bad) lds sbb ljmp in sub stc or push and es or movsb xchg mov je icebp mov jo add sbb xchg push (bad) shr sub mov addb pusha or push dec adc ds jl rorl xor call jmp pop and cs or sbb movsb pusha les xchg cmpsb push or add shrb mov (bad) cmc insb sbb leave ljmp in and hlt scas mov mov insb sbb into jl repz mov pusha mov xor adc mov pop cmp inc inc mov cltd les mov aam rolb mov adc sub dec je xchg jno add mov push and pop push fsubs je rclb enter aam mov outsl add dec mov sarb test and sar xor fadd mov sbb cmp pop push (bad) add pop inc out adc ret cmpxchg std mov push imull scas (bad) jg lret pop sub pushf mov shll test mov xchg imul xchg xchg es test adc test stos orl add int3 push jecxz dec lahf or jbe mov (bad) mov add xor lock dec push (bad) xor bound clc mov leave (bad) mov int3 cmp pop cmp (bad) (bad) pusha dec enter (bad) shll (bad) push adc push dec aam mov cs aam xchg adc mov scas mul pop or sarb jns add fsub xchg push movsb and hlt xchg add es pop stc mov imul mov xchg sbb jmp cmp dec mov pusha lret popa xchg pop popa scas rol mov lret xchg pop inc test jmp jp call add jb pusha add out and lcall sbb add cmp lock imul mov loopne add scas in xor pushf sti mov fimul and push fs inc (bad) or cmpsl jo clc jle or mov mov pop ror idivb das ret rolb sub mov or insl or int loope cmpsb jg xchg rorb cmp add sbb push cmp and push cmp or idiv add mov rorb lods bound xchg adc (bad) or xlat ljmp in xor sbb pusha jg inc dec aas sbb add cmp push dec (bad) xor jp jno mov out addr16 call mov cmp push inc ja jg aaa aam jbe or pop pop sub rcrl clc hlt or inc sub cmp repz sbb enter ds add sbb mov sbb clc xchg es push xchg std dec add loope div xchg mov call dec sbb arpl mov add push jae rol sub push orl add ss or adc test and push mov add cmp outsl jno sbb mov insl sbb mov loope and mov sbb inc repz loop (bad) ds (bad) enter decb xchg xor mov gs or and loop shlb sub add loope nop jb jg pop fcmovnbe hlt dec popf cwtl sub rorl (bad) and add in clc jb add fdivrs sbb lock pop sub into push and dec and cmp add jmp and cmp dec inc fwait mov daa push int push out push mov nop (bad) pusha add adc andb jl imul jne dec movsb or adc (bad) je inc add and mov mov and inc in mov mov pop out mov mov push das (bad) repnz or push (bad) (bad) or in xchg lcall imul add mov pop pop xchg clc call add jnp add mov mov pop dec (bad) hlt sbb mov test add or in xchg jo inc add repz cs out jmp sarl lret clc push fst loop pop imul test or mov pop adc mov xchg clc je add hlt dec (bad) cli into (bad) jb add inc cmc repnz push loopne push mov out xor sub insb mov clc scas addr16 adc loopne xlat add stos inc mov in scas cmp add add (bad) and dec in test leave add mov xchg adc jle jnp mov out loope fdivrs test or push shlb dec mov cltd mov xchg add cli (bad) hlt test mov mov data16 cmp add sbb rclb cwtl stos les adc sbb insb inc insl push bound aam pop lret pusha add jecxz test and fwait (bad) lea jmp fsub rol ljmp inc out aam pop pop popa mov or in pushf andl mov add dec add add cs fadds mov aas or insb cmp and jo loope xchg inc ret lock rolb jge out fistl leave lds jge fstps fmull jmp cmp and dec mov clc xor cwtl inc push insb (bad) xor sub hlt mov ja inc mov xchg (bad) lock inc lock shlb lock out xor and dec adc adc fildl std mov inc rolb or inc pop notl movsl lcall aad lcall push xchg loopne shll adc or jno add dec adc test and je loopne dec fiaddl xor sbbb mov ret and dec mov stc xor pusha jne jp and jo add lock out pop push adc or jnp cld out add test sbb clc add xchg (bad) int (bad) loop js faddl cmp sarb shlb jg cwtl sub sti add or jle loop pusha jo out pop xchg test mov int3 aad or xchg add or add icebp jmp xlat les or lock add pusha cmp sbb (bad) jns adc mov push mov xor stc dec mov out out pop loop movsb sarb nop xchg jae sub lock movsb cwtl cwtl adcb repnz mov lock add jnp gs xchg or push jle pop loope mov xchg push das ret xchg clc repz or add inc and movsl sarb add sub (bad) mov das mov push lock and insb iret jecxz push test push and adcb jb push or mov pop and in out cmp push in ficompl incb adc xchg xor arpl enter rorb jl add out std mov mov dec test xchg add test mov out pop xor rolb movsl loope xchg adc inc push inc lcall mov adc push pusha fdivrl loopne addl loop push xchg pusha cld mov sbb enter pop shll scas outsl shrl and pop (bad) pop mov mov es xor addr16 add loope dec xor outsl movsb or orl fsts lock stos hlt pop in add xor mov ret scas jo add ds mov xchg dec adc push pop mov inc out cmp clc jle jno jge mov insb jmp repz cmp jecxz je and rclb sbb in enter lods sub ds pusha mov (bad) aaa movsl and in sub popf clc pop mov jo sahf stos xchg inc int3 insl jnp clc sub mov stc mov jecxz bound rcll subb and ds xorb dec shrb or mov adc loop fs xchg (bad) cwtl imul pop idivl push loopne cmp pop pop add (bad) jle push (bad) xlat sub mov mov cld int mov or mov sbb nop add fstps push xchg jo cmp imul cmp gs xchg lods das test bound pop test out jmp test adc (bad) out movsl out (bad) mov push pop jp fs repz jnp jl add xor pop mov or lea and push and pusha xchg xor sbb hlt dec out xor add xlat xchg je dec sub movsl leave or mov repnz aaa mov adc or xor outsl popa enter xor push or adc cmp faddl lods lods pop or jecxz mov push je sub cld pop call das xchg mov sbb pop out inc fcompl or sbb lret clc test fldcw inc pop cmp adc lret in mov mov js stc clc mov xchg mov add fsubs add push stc and cmp mov rcr xchg es or lock in movsb or scas lret ljmp mov sbbl pusha jns (bad) in xchg lahf int or in or shrb or enter arpl es or adcl sub add enter aas insl bound cld mov test (bad) fisttpll dec add push in jo in test inc (bad) lds jne xchg movsb sub or or inc int3 sub and outsb movsb jno jo pop or add cli and add sahf xor cli mov sbb lret xchg fdivl adc adc aaa lock add cmc and xor push jmp dec xchg pop add fstpl jb ret add fstpt cli dec xchg xchg mov loopne xchg xor xchg push popf or add pop loope scas insl dec xor pop add and je rclb add mov nop sub mov aam scas add xor cmp adc inc mov xchg nop jmp iret xchg and (bad) pop movsb push orb or xchg jl jo mov call sub pop int movsl dec (bad) pop or imul push inc int3 or lret inc lcall rcr fldl2t pop push add (bad) lcall mov rcll (bad) and jl jg add jle push arpl add jl jbe cwtl pusha adc fiadd stos icebp add xlat lahf push cmp cmp push mov jbe pop jecxz lock inc xor sub dec fs into ss out add xchg popa divl mov dec popf add nop or fisubl and fdivl inc add xchg rolb mull mov push (bad) insb rcrl adc in fcomps mov add dec dec cmp xlat mov push xor mov cmp and in mov cli xchg (bad) cwtl add fstl dec shrl pop jge leave xchg imul sub popa popa fcmovnu outsl and or sarb mov jns rcl enter pop cmp dec add fs cmc add cwtl test push (bad) add frstor mov and mov push fnstcw pop pop pop mov inc and addr16 lock (bad) dec out and stc jmp mov hlt enter jge ss cmc push xor add push inc popa jo inc sbb loope cwtl adcb dec mov dec sarb adc xor push inc pop jle pusha adc jmp jnp je xlat out xor lds shl push mov lods ret push sbb sub test sbb movsl mov inc add cwtl lret arpl inc adc add int3 xchg das pusha fcomps sbb in inc hlt clc jne cwtl test sbb in mov jns mov xchg lock jo push sbb sahf pop ds mov inc or mov lahf mov in stos hlt jo add inc sbb jnp mov mov repz and (bad) icebp jge xor add imul out add scas in sbb push add inc xchg add inc xor push call int3 fmuls add aaa bnd test dec or (bad) pop push out mov jns and sbbb cmp add mov sub leave pop or xchg lds pop movsb or cmp movsl mov mov jo,pn cwtl add in dec aam jl inc jns add sub adc in add repnz fsubr xchg jne test cmp pop xchg adc fistl sub inc lock or and les adc adc leave mov mov aaa lret cmp add inc lea call add mov mov dec xchg clc pop add inc loopne pop pop flds cs adc jecxz inc pop add loopne clc gs int cld jno add into test outsb add xor cs and popf add clc nop fistpl pop pop loope and scas xchg jg addr16 lock sbb (bad) pop jne jl lcall shr dec add adc addr16 and add cld cli es icebp popf jae jge and stos mov xor scas in mov shrb add in repz pusha and andl (bad) jo daa or adc xchg sbbl out scas movsl xlat mov fcmovu fldl ds lret cltd jp mov cmp sarb adc les ss pusha jnp add mov jp fnstenv movsl mov daa cltd cmp outsb pop int3 fmulp add test fmull xor mov dec cltd cmp jp add movsb imul xor and adc add ss mov add push jo dec lds pusha pop js cld (bad) out add into xor adc loopne or insb add movsb mov and add add mov jmp subb (bad) nop sar cmp add mov add sub and aam push inc std mov sbb add cs ss mov aas mov mov sti es xchg test mov jae inc sub loopne repnz add in enter xchg js cmp or ja jns add fldl (bad) mov inc cmc popa pop push (bad) enter in sbb test mov adc outsb in jmp rcl scas mov dec pop mov aaa packssdw add cmpsl or (bad) imul sbb add push sub or not adc sbb hlt cmp pop pop mov mov cmp mov pusha add (bad) (bad) jno cli loopne stos cmp test push jl popa (bad) mov mov cli sbb cld data16 mov pop push add je nop dec pop pop out xchg pop xor sub lock add pop enter ljmp dec adc mov inc aam jecxz inc mov loop xlat stos add in or xchg xor cwtl push sahf hlt mov das je call dec clc and testb xchg push adc sbb aad pop andb jnp push jmp sbb test cmp fs insl add out jp xor jge jb add and fxam pop or lock pop les jne sbb push out xchg cmpps mov hlt add push mov sbb (bad) outsb xchg jo scas or (bad) js add shrb mov mov or pop not inc and push icebp in jp mov or add call lcall add fistp adc out pop inc adc lods adc xor or call adc sarb push adc das js out and pcmpgtd mov (bad) call xor or jne jbe sbb xchg in jge mov movq mov jne pop call add mov aaa fcmovu mov arpl mov test dec insl icebp pusha adc sub in add sbb and mov adc or pop leave out mov inc (bad) repnz incl popa fucomip mov xchg testl add jge enter imul cli add insb or add js add (bad) sbb xor sbbl jmp inc (bad) mov mov add pop gs add cmp fs les pop es outsb in arpl pop jb add out leave andb cld add (bad) jmp pop scas icebp sbb mov jp addr16 xchg bound add mov sarb jle in jl inc add aad or lods mov dec xorl mov add loop push cld xchg pushf cwtl or cmp adc stc sbb (bad) out inc adc jle inc in xchg popa (bad) push or test xor adc inc add std mov push addr16 add mov jp mov lret adc shrl leave gs (bad) rorb lds and push (bad) (bad) xor ss mov cld xor mov inc push dec mov ds (bad) or dec cs jns add clc jl jo adc loope pop sub dec call mov into add or inc sub or cmp pusha mov add mov push cmp jge mov add ljmp xorb daa cmc push xchg jl cwtl adc pop add inc fs jno xchg add rclb loop notl pop pop out mov shlb mov dec jnp and mov pop pop push mov add imul cltd pusha addb outsl call dec addr16 mov clc cs out pop xchg add jmp lods test push das xchg fs out xor jecxz add and push (bad) add adc test push incb cld pop or xchg xor js dec dec hlt jnp inc sbb (bad) sub lret sbb scas shlb and aaa out add (bad) hlt add mov popa add add icebp mov jecxz bound out or pop or xchg jg ljmp loopne and mov or enter cmp inc mov (bad) sbb pop push cltd scas fs insb outsl add adc jle fisttp divb cmp xchg jbe add fidiv mov add movsb xor push add aad mov icebp fildll add mov add call jns and mov xorl das jbe popa pop jmp xor xchg add xchg pusha pop mov inc inc movb jnp pop nop cltd mov hlt ljmp add mov xchg hlt jg xchg mov pushf or call lods xchg mov nop (bad) push and aaa add addr16 dec (bad) nop sbb xor shr add call xchg xchg out push mov daa leave xorb es adc mov sarb sbb pushf dec xlat mov add add fcmovbe int3 xlat cmp pusha pop jmp xchg aad push movsl xlat and popf jmp xor add scas call call addr16 mov rcr lods adc and (bad) out out imul pop adc stc xor push push adc rorb or lea js cmp or mov cmp leave sub cld inc movsl pop test ret aad add cmp dec clc sbb or dec adcl push ljmp daa push jne js cmpsb popa mov xor in or jne adc hlt mov sub inc in loopne cmpsb dec mov dec sahf orb in xchg hlt xchg das and (bad) lock sbb cwtl test cmpsl into (bad) push scas (bad) adc dec xchg inc jne data16 int jnp push (bad) out ret cli or enter nop call test fsubs push xor (bad) (bad) jbe mov iret add inc fidivr add jp sub inc stc sarb outsl test jg dec pop push pushf mov ljmp add out bound jns insb loope jg xor pop mov repnz pop lahf cmp xadd movsb cwtl cmp dec or xor andb mov pop jle pop or (bad) mov stc hlt xchg inc or pop push decl add push enter jge adc pop xor cld les aam push ljmp sbb adc leave mov sbb xor les pop inc sbb outsl lret pop jecxz sti cmpsb aam int dec xlat pop xchg jmp js push rclb jnp les xadd sarb in xor out inc cli (bad) push jbe popa das xchg sbb xlat je idivb in out add int3 repnz cli add pop out negb add lcall mov push jge arpl xchg cmp mov ljmp scas add dec push mov push push icebp mov loop lret add push push add add mov dec mov and clc sti xor cs sub mov jae lods jle dec push push push in adc adc mov cmp adc pop mov test pop arpl aas ret add and add jo addr16 mull cld cmp sbbb cmc add mov sbb out pop gs fwait jae sbb sahf fadds jmp decb mov mov mov sahf ds pop sbb ret ljmp add mov ret lcall adc nop mov adc call insb jecxz (bad) scas daa enter and inc ret inc push jo cltd test dec jmp lcall xor xchg repz hlt jecxz lahf add (bad) insl sub ret and clc repnz add lods bound dec pop adc out inc lods mov dec notb adc pop push icebp inc rol xor cmp add mov test cs clc inc jno fsubrs (bad) add or add xchg out aaa ss sbb jns cmp mov xchg inc dec push mov push xor and sbb and idiv push bnd (bad) or adc mov lahf cmp (bad) xor outsb mov add addr16 lret faddl push enter push pop mov cmp and mov into mov ss push fadds std fadd test (bad) pop lahf adc add addb add int3 jmp notb jge jbe cmpsb add push pop dec add jne int3 sbb lea iret mov pop sub divps add mov (bad) mov or cmpb daa stc (bad) and std arpl add das hlt adc sbb push popa mov in push (bad) or clc int3 add dec clc dec push pusha push adc out jo test inc call sahf push xchg mov imul in add bound (bad) hlt and add daa or insl cmp push call daa adc notb sbb fdivl ret clc xchg test fisttpll mov add sbb ljmp repnz add inc (bad) dec pop pusha ljmp subb out and inc jge add fild or fwait mov leave aad iret push jnp das mov xor inc in inc pop cwtl fmulp (bad) inc into mov add repnz push jp fmuls jo mov (bad) cmc call icebp pushf sbb jmp pop out add mov and je in movsb jp mov pop add pop fs out insb inc ret ret adcl andl shld leave add (bad) iret add xchg sahf push hlt xchg xor or inc push movsl xor into int3 divb push data16 mov fldcw adc loopne rcll push inc push mov mov insb mov incl dec jae push xlat add addr16 push movsl mov push pop in mov jne outsl rorb lods jg xchg dec loope movsb xor add je sub repnz inc mov (bad) add hlt ljmp xor fyl2x repnz lods jg jecxz or mov mov call cmp jp shl push mov adc inc sbb sub cmp sbb mov mov sbb mov cwtl repz cmc pop test ret aaa lret test mov (bad) negl or adc lods jbe inc mov xchg insl test add push jle sbb and aad int3 out mov out test pop pop or pusha jle (bad) icebp push inc fcmove lock es add xor or sbb add or imul dec aaa in add inc es fwait in fs mov gs jp mov int pop pop jmp mov leave out mov call (bad) in bound add jecxz cmp add scas pop enter je dec push leave sub adc sti (bad) inc je cs add fucomp les movl std mov xchg clc pop xchg dec pop jmp sub cmc test add adc out mov lahf adc sub or push lret and pop stc sub clc int and orb or test add scas subl pop xor mov adc mov stc std loope adc sub lock pusha ljmp movsl out inc inc jae adc out mov add mov (bad) cld dec movlhps rol adc ror xchg xor cmp jg cld dec mov push lea les pop pushf cld lds pop and dec jne popf pop jbe add mov ljmp adc das (bad) clc std xchg jno adc paddsb add out sub inc push push adc shrb jecxz test scas or and cld mov or add and repnz cltd pop add js sub add mov das or je and sbb outsb sub xlat es jo js jbe pusha int stc sub dec mov movsb jmp lcall test push fsubl mov addr16 insl jp outsb add pusha pop imul add mov sub roll push nop dec adc jp dec inc lock loopne adc push jbe add pop dec (bad) xor jb insb mov hlt jne or xchg mov inc ljmp jmp jge add jae addr16 mov add fisubr int pusha iret sub pop dec xchg push loop push inc mov mull enter xchg xchg add xor xchg dec cwtl roll loope pusha inc adc in jns cmc pop clc push jb add lret pop sahf idivb and arpl jbe or seto xchg fcoms call add inc sbb sti mov scas add mov add neg lcall pop add shrl call dec nop adc xchg or in stc and inc call jg add movb (bad) mov sbb xor adc loopne mov sbb jl add jmp ret outsl or jl pusha sbb add aas pop lods (bad) imul idivl ds dec mov cmpl jbe icebp rclb pusha je out loope icebp inc fs fs mov xchg add push cmpsl subl mov mov test dec mov loop clc mov sub sub mov push pop and add mov int3 lds popf pop jp push mov popl jge enter enter inc sub cmc add test sarl adc int inc nop or pop in or fs daa into mov aam push pop lcall sbb cwtl jle test ret hlt push pusha adc adc imul pop jbe mov movsb add mull mov cld andl jmp imull inc aam stc int xor jg pop pop mov jne mov repnz and add in jp je add ljmp je dec mov mov add dec xor pop test and and icebp pop das dec mov roll call push mov dec movsb jl clc in inc dec jno sahf out pop mov ds dec push fcoms pusha pop or lahf sbb adc xchg add inc xchg out xchg movsb add sub pusha lahf xchg cltd popa sbb dec gs add mov sub or cmp xor push loopne pushf fsubrl js loopne pop and jg jbe mov ret cmp xchg enter stc add rorb lea or mov (bad) jo push inc and movsb popl hlt shlb sub mov clc sub jmp or add pop push pop mov andb add lods cmp add ds loope clc hlt pop sbb sbbb add hlt dec dec ljmp xor or rcrb clc mov addr16 (bad) jmp in cmp adc nop hlt mov sbb and in repnz pop sbb out wrmsr lock adc xchg and or loop js jbe push cmc imul popf dec xchg cmp lds insl lcall test dec hlt mov inc cmp jbe add fs lret hlt add loope sbb pop jns sub add push sbb push sti push addr16 cmp add sbbl arpl inc sti jne aas adc adc add mov jp pop add test jmp cmp cwtl xchg adc js test cwtl adc cli call add outsb jb xor mov cmp rcrl mov sub jecxz mov add xor in daa fiaddl les loopne pusha sbb mov nop mov jno imul dec shll cmp test cmp jo cmp push loope sbb (bad) imul xchg jne adc sarb out sub pop nop adc in fsubs sti test mov push cmp aaa in pop fcmovnb adc nop aas sbbb push fcompp add mov std inc add mov cmp sub jmp and add xchg jmp pop jecxz cmpsl fnstsw mov add push jbe add jl inc xchg add add xor jl add xchg xorb adc add mov ja (bad) add sarb pop jnp ljmp add outsb (bad) (bad) ljmp jne cmc scas imul cs ja mov or and lcall push xor xchg mov or sub mov xchg sub add out inc je adc loopne add sbb lds rcrb add stos pop mov imul sub nop orl jg xor add adcl jo jge in cld lea push xchg rorb loope arpl movb je cmp sbb jne add adc xchg jecxz std and and loop rclb mov push mov repz jns sub test jnp fadds xchg into lods mov je data16 div adc nop (bad) jo call cmpsb in xchg push pusha je mul add daa mov add in test mov ljmp int3 sti adc in inc add xor add pushf (bad) fucomi sti jmp dec add mov loope addl add in enter fst adc push sbb add fndisi(8087 popf dec sbb add inc mov test rol pushf pop mov cmp mov imul add push add inc add cli rcrl movsb shrl xchg das xor add xchg lea add add adc jno pop sub rol xchg sub (bad) or dec popa cmpsb pop add push push cli movsl repz pushf jo xchg sub adcl sbb adc inc add jnp add pusha jbe loopne jle add (bad) pop je adc jb sub jecxz inc mov out and loopne outsl pop inc mov insb xchg cmp imul add ja dec cmp (bad) jbe mov mov cmp and jge sub xchg cmp add clc pop mov mov jne xchg dec mov mov push ja dec xor mov cmp jge sbbl adcb pop stc add add insl and push (bad) repnz dec fwait je cmp pop pop jle xor jmp adc sti jmp mov sbb xchg jns pop add inc movsl adc daa and mov and xchg sub and in aad mov hlt cmp hlt or push lret scas mov out movsl clc pop and mov call stos or ja incb andl add adc rcrb or gs add out inc pop sub arpl xchg cmp jno jg pop mov sbb ds in cmp ja fstpl adcb push test add mov add out adc inc imul jecxz mov sbb in pop scas add xor sub inc pop mov mov cmp dec xor and push jne (bad) jmp mov (bad) adc sbb fisubl sub add mov sar push dec enter sub mov sub adc add pop mov mov in xor jns repnz daa dec cwtl xchg add cmc sub sbb add pop loopne mov mov jne jae insb mov shlb cmp adc sbb lock add jnp mov lret sub add adc ret cs cmp sahf jmp (bad) push and testb popa je inc (bad) mov mov jne add sub (bad) or cmp dec mov sbb adc or mov jo out ljmp call sub jmp cltd push stc sbb jecxz cmp insb adc jmp mov pusha ret cld inc jae or loop movsl add inc arpl stc adc push jne or sub mov pop and mov cmp mov cmp nop cmp pop pcmpgtb sbb cmp or ds cmp data16 (bad) lods xchg (bad) dec pop mov pop mov mov mov cmp out mov leave orb add (bad) ljmp fadds (bad) cmc aas (bad) ja sbb cmp add sbb pop cltd aam fcomi adcb jo add pushf cli out and mov paddw dec outsl and je out mov mov in loope add jmp add sub and test add adc add je hlt (bad) or dec pop push add cmp sbb add cmp cmp xchg sub push push testb ret enter (bad) clc pop sub inc pop mov out mov data16 mov pop mov cmpsl xchg xchg add and push addb lods push test mov sub sub adcb mov adc dec cwtl cmc rclb jg in sbb xchg inc add and add xchg add mov pop sbb (bad) mov sub cwtl add cmp sbb xorl arpl mov pop aas push sbb xchg xchg jo xchg add lret loopne lods or aas add shrb inc sbb sbb push scas outsb sub cltd xor and cmp add add loope mov pop add loopne js les xchg out ret sub inc mov int3 dec andb xorb ljmp call and cmp push pop mov dec leave jo add add xor mov or sub mov loopne push sub adc push pushaw loopne lods sub outsl xchg sub pop adc add movsl in add cmc dec test push mov push jae xchg hlt lea jo jns pop call inc hlt mov mov subl inc sti fldenv popf movaps mov sub test lods (bad) inc mov sbb cmp (bad) in push mov into mov add outsb mulb faddl or xchg add xchg test pushf enter cmpl fnstsw mul pop or sub pusha adc mov cld subb dec jg and incb inc dec stos cwtl inc fist das add cmp imul fucomp sbb loopne add test iret dec pop rorl scas or out or ret mov mov xor xor roll xlat fwait call cmp pmulhuw or dec insl std test (bad) out sbb or loope add push (bad) push je jmp push fidivr jae mov pop mov cmp xchg jl ss sbb mov iret pop xor scas add das mov add iret sub insl (bad) xor and fwait je lret pop or sub or add inc pusha sar pop movsb cld out add mov xchg mov xor adc subb mov adc cmc and test cmp pop inc push mov push shrb fs pop lret fadd loopne mov addr16 adc add xchg xor pop mov sub push add push int3 add pop or sub leave add je add or mov es imul inc mov jle sub shrb adc dec fiadd and fstl cld test jns cs leave fwait pop and mov inc mov fcoms xor xchg add xor jno insb int inc add and imul lock iret test hlt jmp imul jg rcrb and adc jg rol cs sbb sbb sub test inc and add loopne dec test cmpsl and xchg pop push test test inc xchg mov popa pusha push cmp add repz out test mov lock push jno add mov (bad) mov mov and mov pop inc popf fcmovnbe xchg sub jns les jbe xchg sub loope ret push mov xor scas xor xor sub (bad) shlb sbb (bad) hlt sub mov push xor inc adc dec xchg and push dec mov inc add adc js test pusha sub (bad) mov jno pop pop xlat ret cmpb and pop or (bad) cs das (bad) pop or sbb stos inc out inc rcrb dec sbb push mov and jmp loopne xchg out lock loope jg and xchg xchg pusha es (bad) cmp test and sub and dec pop push inc pop adc dec movsl mov mov imul mov fucomp rclb sbb mov add jae mov cli in pusha sbbb mov push jl xchg dec add das js add leave prefetchnta xchg ret daa repnz js pop mov dec xor (bad) rolb fs xor mov test dec das cmpsb (bad) mov rcrb jmp imul push stos inc lcall adc push jb mov add in addr16 sub or je cmpsb cwtl rorb jp push je mov mul lods mov push sub adc xchg in and add and and adc xchg loopne (bad) ds arpl push sub and add mov rcr and cli loop lahf ds hlt adc out jmp rorb dec test add fs sub loope cwtl pushf add stos mov popa mov aaa lcall xchg fsubp mov xor fmuls xchg xor push shlb pop xchg dec mov jo sbb and inc les (bad) xchg xor xor pop leave add scas mov test and test outsb jbe clc scas (bad) mov or sub (bad) mov sahf push pusha arpl and dec stos rorb adc arpl jae insl scas inc xchg pusha cmpsb and pcmpeqd jns inc scas movsb loop adc out push xchg mov dec fistpl sarb or in mov mov repz mov add loopne add xlat in decb xor mov mov xlat flds loopne divb nop test dec mov sub jno repnz push test stos xchg dec mov les pop mov sti fsubrl adc and movsb dec scas sub mov rolb lods pushf rolb out inc add add inc and orb pop sbb add inc test mov and adc mov lcall (bad) int xor adc xchg mov xchg cmpsl call inc adc fiaddl test loopne sbb das aam inc pop ret or mov jbe iret loop rolb dec or aad and inc jg (bad) and mov mov jns jg data16 loope clc xor and pop call adc loopne enter and jmp loopne mov pop jg xchg cld and push hlt js add and inc faddl inc popa xchg test (bad) jnp mov adc shlb mov test xchg int pusha mov push mov or mov sbb jle inc push stc xchg mov mov add cmp add roll inc sub dec (bad) sbb inc int3 hlt mov jb sbb xor cmp cvtdq2ps or pusha jbe mov arpl pop add dec aad dec test and scas mov add dec mov js dec mov jns xchg icebp push addl push and mov and fild sub inc rcll shl sahf lock add sti daa das mov add lahf dec fdivs cs ffreep add xor and ja jmp add imul (bad) and rclb mov sbb xchg ss inc frstor test cltd icebp das xchg sbb cmp add enter cmp in insb dec adc mov sub ljmp dec sbb mov jp or pop cmp mov cmp das xchg inc adc test add mov xlat add jg sub mov mulb add cwtl mov jg loopne xchg mov dec mov (bad) adc and fnstenv rcrl sti push ret arpl in cmp nop inc popa das cld aam add mov and cwtl dec add jmp xor adc sub pushf push push jecxz add (bad) ljmp mov mov sub ret dec add push sbb test and pop gs pop arpl adcb sub ror add jno das pop xchg sarl push icebp call jbe fidivl aam adc cmp test aad sub ds add sbb xchg rclb stos int3 push xchg cmp out adc and (bad) adc mov cmp fldenv add jo add scas (bad) adc inc movsb out jno xlat (bad) push xchg rorl or out nop push clc sbb mov cmp loope push movsb sti outsl or mov inc negl cmp clc push es pop add nop mov inc add sub (bad) je and or enter add adc lret jbe dec adc popf pop mov jne mov add lretw add scas sub dec loop sub mov lahf mov push test adc js jb sub lea cmp (bad) (bad) addl orb dec (bad) sbb hlt es dec push push mov or test push popa fwait xchg nop into lret imul mov sbb movsl add or xor ds adc pop and and ret mov cmp xor pop mov and sub adc or mov je (bad) sub push xchg cli mov dec sub les loop adc adc add lret das stos loopne mov push xchg xchg dec fstl rolb adc pop and rcl sbb add (bad) mov sub push mov xor sbb and ficomp jns add or cwtl mov int3 add out mov mov or lock jg mov xchg jmp test inc cmpl mov adc scas xchg incl int3 dec xor xor ret adc enter mov or adc pop lds fldcw imul bound sti add sbb mov (bad) mov mov loopne pop stos jb xchg int3 rcl mov and xchg push mov adc mov mov pop jge sub and inc sbb adc outsl out add push mov js (bad) loopne dec sbb adc add xchg aas (bad) push test jg pusha sub cli sbb cmp push popf cmp mov xchg xor mov fwait stos push test pusha add insb xor push call (bad) push and outsl pop adc shrl add (bad) in adc dec mov loopne add (bad) notb loope inc mov enter es lcall mov sbb mov inc or xchg cmp adc subb fs js,pt outsb test cmpsb pop or push iret sub pusha jbe pushf mov addb addr16 adc mov or adc in pop loopne mov loopne cli in pop inc (bad) jno push inc and lcall rolb push gs add insl or roll xor or mov fs add ret adc test mov adc es lock mov cld rolb icebp jecxz sub sub sbb adc movsb call mov jo lods adcb inc outsl sbb clc stc inc add pushf pop stos sbb rcrl fwait ret (bad) adc (bad) add test xor idivl mov fisubr dec adc or sub mov fdivp divl test push or cmp fwait (bad) inc lret adc jp das mov mov push (bad) call subb mov mov repnz push test sbb sbb push ss sub add ljmp mov inc js mov add lahf adcb jbe cmp add jb add call outsb dec push enter or xor (bad) negb shlb cwtl pop sub add jge mov push decl mov inc int3 out push sbb and lcall xlat dec pop pusha add push scas mov daa sbb fimull (bad) fucom cs sub mov cmpsb dec andb push loopne sub add or lods or pushf loope lods add cmp xchg mov addr16 repz inc add add imul dec dec clc sbb add mov pusha and les ror jp pop (bad) lea cmp inc es add xchg adc add jo mov cmp popl pop cwtl push mov pop es adc pusha mov dec inc js mulb sub lds cwtl jle sub xchg leave or xchg fwait and add inc dec imull jns add mov adc xchg inc pop in fucom or mov popaw rcr adc lods pusha and aaa sub pop addl xchg push jge testb hlt fs push and rclb dec add loopne lea sbb shl aam pop aas push test sub nop subb fdivrs pop xchg pop pop adc push popf shll lret jns popa xor nop add and sub addr16 aam and pop xor xchg jns loopne mov jecxz popa push sbb adc into xor js lahf fprem1 adc lods mov leave adc outsl loop or (bad) and inc lcall or push mul and xlat test hlt aad mov mov cmp pop stos and js sbb pop adc xchg cmp mov pop test dec add pop (bad) insl mov dec cmpsl lds dec add mov push push test cmpsb xor faddl push int xchg mov or fnop mov flds cmpsb or popa cmpl mov clc into test pop movsl xor lods inc pop shl cmpsb fs add xchg xchg cmp push data16 add ljmp sub lcall add pop jns mov xlat mov and test adc loop add cwtl or mov call push rorl add dec lret push ret test pusha mov pushf add scas jae imul sbb ljmp jg scas jne add ss fs push mov adc sub or jg adcl cli pop hlt inc dec pusha pop and aaa test lahf xchg rclb test inc out iret inc jne repnz or sub (bad) mov clc push xchg add fidiv mov push fldenv daa xchg lods pusha add pop mov (bad) xor xor leave aam add outsb shrl dec repz bound pusha push (bad) sub or les test insb lock repnz lds fcmovnbe add popa xor into and inc or add data16 sbb adc add sbb cmpl or xor add out dec xor loope dec mov mov push enter outsb inc xchg negb (bad) pop push test mov add jne sbb loopne inc push jo mov sbb loope mov mov cmp add roll loopne mov jo test scas pop sbb xor fdiv add jns push repz loopne test imul fwait adc in dec test xor mov mov aas ss pusha and sub cltd daa inc ret in cli xchg push pop mov add cwtl clc popl xchg lds (bad) into test mov ja cld rcr and mov add arpl iret in aaa test or add fsubr outsb sbb dec mov mov pop mov ss clc es loope mov mov dec inc xchg mov mov add loope call sub adcl cmpsb adc mov mov xchg add mov xor or add lcall xchg jl cmp mov sbb sahf cmpsl insl cmpb psrlw xor mov and sbbb scas cltd insb orl sub sti inc loopne add in sbb or lea loope (bad) mov and add in xor sub jle std enter sub jmp cltd and add scas dec adc mov stos sbb xchg pop adc sbb std xchg lods mov hlt lea and andps in cmp lea mov sub mov in aad pop (bad) and lock pop sbb or push (bad) xchg inc in or add xor aam xorb cmovl mov repnz sbb std mov push mov dec orl dec nop push pop mov push dec addr16 mov add cmp cwtl test xlat js and and je or out mov or loopne push and rcrb add nop sahf xchg lret dec push or push dec cltd cwtl adc in add (bad) mov aas das subl pop xor jne jl ja mov add push test lods mov xchg fild add and xchg cs fs dec mov fsubl mov jg mov or sub data16 es add fbld add sbb mov lock (bad) nop mov push cmc xchg leave mov or push sub fwait std push xor inc or inc inc mov sbb stc mov or fisttp jp fsubrs or stos xchg adc push sub loopne fildl leave cmp pop push fbstp or jae add (bad) rolb mov sbb dec ret mov push mov fidivr add nop mov push inc je inc xor fldcw je icebp enter mov les int3 popa js cli dec lock rorb sub cs xor or mov nop les pop sbb mov push out push aas mov add icebp mov cmp adcb push cld stos inc push pop pushf out lock push out dec les push shlb and rcr cmp sub sub mov js add std into jge or jle test mov xchg jns jp out adc add test xor mov movsl outsl test rcll sarb inc add push mov cmpsl std add lds sbb or xchg leave jb dec xchg xor loopne outsb lahf popa lret cmp mov inc lods push insb add inc pushf push pop mov xlat popa mov fsubrl add pop add (bad) test rorb pop jle cwtl xor add cmp add sar lcall into mov add repnz cmp push mov pop xor mov cmpb (bad) cmp xlat push jae push je add test movsb dec mov test inc js les cmpl jge test bound dec ss add inc (bad) dec adc (bad) divb inc add jb adc mov je add cmp pusha sub mov test and mov sbb or inc add sub cwtl (bad) sub cmp repnz je mov push pop and or test rorb cmp popf les inc and lock das popl aam add mov in mov sahf pop mov and xor mov lds cld mov adc das mov mov xchg push inc out add add inc insb dec dec test dec mov sbb sub les mov sbb loopne (bad) aam dec xchg pusha loopne mov loop add or jge ja add scas ret in add jmp loopne xchg fsubs mov arpl or loope inc sbb push inc movsb add rcrb jecxz mov sti in mov mov nop cmp add xor add outsb cli fiaddl cmpsl pop cwtl or mov fnop and lea mov xchg push add lcall push adc sarl push hlt and mov xor rorb pop push loopne xor cwtl loopne (bad) fistpll inc mov mov sub or icebp cli jb dec test imul outsb mov enter jmp (bad) add or pop or jl add push mulb test jg pushf mov xchg pop jle inc xor movsl fldenv shrl add (bad) iret test and jg and xchg jmp sbb pop adc cmp mov hlt push sbb add push sahf (bad) rorb sub add nop in lcall pop mov dec aas inc dec mov adc cmc popa push sub push loope (bad) jle jae pushf mov mov out lcall jb jbe les add out add add sub rcrb jno call and lret sbb repnz xor pop jl jbe loopne mov inc inc adc lret adc inc rclb ja mov jmp mov sti lcall outsb and pop mov cli jle mov mov or fsub imul adc ds sub stc and jb add leave jle insl dec jl add cmpsl stos lea pop mov sub scas test ror imul push lods imul in xor mov jb rclb pop add jae push add aaa ret xchg lret pop add adc fstpl mov insb inc jnp out test inc (bad) test cld movsb add iret mov pop push test loopne jbe fcoms ret jne mov mov mov sub inc push inc sub je test int3 sub mov lcall insb adc orb scas pop pop push sub cmpl ret and les lretw jns xor cli sahf movsb sub push xor push inc adc sub pop mov leave mov mov (bad) mov xor lock lea je hlt add adc shlb nop adc mov inc push aam fsubl pop sub push pushf xchg add jbe jl mov or add sub mov mov pop xchg fcmove or imul add repz subl jp push (bad) mov jno mov nop add outsl rclb loop inc hlt or push jne inc inc fldl xchg add push mov test inc pop sahf lods mov pop adc test aas add mov jb pop nop add xchg rcrb test xor sub or mov lea adc push xchg adcl test xchg (bad) fiadd je scas or negl add icebp pop or add mov and lcall lock xor xchg sti jbe adc out repnz jl add sub repz inc icebp inc sbb pusha (bad) sbb sub test ss notl mov stos sbb dec or jno jecxz adc jecxz jecxz loope test mov gs nop inc pusha mov test xchg add lahf mov xchg rep xor push pop out icebp sub pop mov (bad) jae xchg test inc daa sub roll (bad) xor push fisubrl xor dec test fsubs add insb scas adcl out sbb dec ja add (bad) repz outsl inc out mov fadds daa xchg icebp enter add jecxz mov test xchg loopne mov add push inc xchg int outsb addl and int mov pop enter imul cmp dec cs xor out adc pop or mov mov into push fcoms xorl fwait mov and sub fidivrl pop cmc add add popa sti insl (bad) mov sbb adc jo sbb xchg xchg push mov icebp adc add adc sbb add in mov sti adc bound inc ds repnz mov fsubp jle sti sbb push incb add repnz add iret (bad) aam cli add jns (bad) push ja fistl jmp outsb adc data16 push sbb scas mov (bad) outsl and inc test cmpsb mov push sahf cltd add test xchg loope mov and cwtl shrb leave or mov aas or repz ret jecxz sbb fmuls mov add into mov jg cmpl push add ret mov sub cwtd sbb cmp int dec mov xchg scas hlt inc mov clc scas test lds imul enter fdivrs int3 sarb sub sbb jb jl dec sbb clc adcl add xchg xor mov adc xchg mov (bad) jnp test dec pop inc adc and cli pop xor lret fsubrs push imul je fwait js ret lahf cltd ss rcrb fsts sub mov add jmp mov sub daa or push xchg adc lret pop sbb inc cwtl jl les push repz pushf mov pusha nop loopne out or ret test add es or sbbl cli ja popa addr16 mov sbb adc jno out add mov loopne movsb clc shrl in ja or ret jmp push test and add imul pop movsb xor sub jns push inc push xchg mov out div add test mov sub inc jo sub rolb pop sti lret int mov int3 mov xor inc loop mov pop pushf stos pop push inc adc popf scas jp mov sbb icebp out mov xchg xor or cld clc pushf and shlb xor xor push mov loope sub clc jge adc or adc sbb add insb dec outsb cmp in cld adc xor fstl push or cwtl or or or and scas inc adc adc adc je sarb mov push or or dec js dec pop adc mov inc test test int3 enter popf dec dec outsl enter add (bad) pop popf int3 add jl xchg mov rol lods mov jne ja xlat xchg imul sbb adc mov mov pop pop je xchg fadds dec jmp pop inc or add lret jg cld negb cmp and mov dec ret in popa (bad) fadds test fisubr adc addr16 js pusha notb inc mov fsubrl xor aaa push mov sub je jno jo add pop push sbb sbb std push sarl and rolb push in jg (bad) jo fcmovne aas and push rcrb lods adc bound xchg nop pusha pop sub icebp (bad) fadd push mov pop mov insl scas sahf test (bad) push inc sub mov push push xchg movsb (bad) or daa inc (bad) add dec pushf add dec outsb stos enter dec mov or dec jbe stos imul (bad) leave add mov mov mov xchg mov cmp js mov mov pop outsl fdivr or xor push sbb lods adcb push hlt lea data16 xor cmc push xor xor out enter lahf mov jecxz xor test xlat lods mov inc jne sahf addb adc lock dec mov data16 loop sub add ja mov inc xor adcl adc mov out mov mov fwait shrl mov es adc jmp enter pop clc inc sub jae and test pushf fwait test cwtl and sti dec xor mov xchg test cwtl xchg je ret loop mov imul cmc addl repnz int3 inc movl cwtl mov mov int3 cmp jnp rcrl adc sbb je mov mov adc lock fs mov mov lea mov (bad) test push add add shl push push mov nop push mov push mov pop push paddd jb das mov les jnp dec int push sarl or sub or pop adc xor mov and sbb inc test movsb icebp mov shlb sbb test std iret xor adc shll xor in aaa add mov jg clc lret ja das movsl inc push xor sbb mov les or stos dec rcrb sbb dec xchg push push add or dec aas adc add enter (bad) pop pop xchg enter cmp adc xor nop jnp clc xchg xor into (bad) xor dec jno mov scas cmpb add les jo (bad) add sbb orb aam movsl das out (bad) adc insl es pop cwtl jl jnp clc push jge pusha sub jg test in add add mov bound int3 pop jnp mov cmp xor inc mov inc (bad) xorb adc lcall incb test xlat dec repz add xor insb sub mov or mov cmp pop fisttpl scas mov cmp or xor adc pop lods jnp pop nop dec cmpsb inc addb ret lock adc mov bound (bad) pop sub enter jle sub jnp or sub add (bad) sub jle and inc cwtl pusha xchg leave nop loopne or mov and push loopne cmp mov cmp push test sub fisttpl push jo clc into add inc mov fstp add xchg mov push loopne or mov inc and mov (bad) add mov dec xor int3 dec pop les add jbe fsubrl imul orb inc cld sub adc in mov and mov jle les test lahf in inc test jmp cmp loope cltd (bad) mov add iret add jle,pn in sbb inc sbb jo sbb mov cs lret test sbb mov and lahf sbb sub and roll push pop rclb jge mov out (bad) js sub imul dec je into fcmovnb and xchg xchg mov or gs or xor mov or cmp les sub pop test scas sbb adc pop add add mov add jl pop pop sub sub pushf add mov je cmp test jl xchg pop (bad) notb ja pop and add sbb pop decb inc jle jg ret loopne or push stos or int3 inc iret mov mov fist data16 push fcomps adc lret (bad) daa rolb out cli jb adc cmpsb mov lods (bad) adc dec mov mov jecxz ret xchg xor and jo push mov rcrb in sub mov enter add (bad) jbe jo add enter or mov (bad) jno mov nop adcl pop xor xor add add xor loopne not add shr and inc fdivr enter push lods sbbb push xchg adc dec sub lock addb shrb out adc je jle gs (bad) or cmp pusha and insl add pop shrl sbb or lds imul xor je sbb push inc adc adc mov insl leave pop fdivl addl fcmovb loop push mov jmp ret push add jnp enter mov push scas adc (bad) sarb add mov xor mov adc movsb mov outsb jae pop aaa negb push andb or inc lret xor or push or mov call scas lcall scas xor nop je arpl stos jno hlt inc or sub mov (bad) aam out insb adc fwait test ljmp adc lock inc jbe and pop rclb xor nop push bound fisubrl (bad) (bad) outsb clc jns jnp mov in push clc les shlb or es inc pusha js mov xchg sbb lods add ljmp pushf pop dec dec xlat dec fsubrs data16 adc dec add xchg loop pop in subb pop jmp or outsb and pop int3 adc and pop in mov push adc lcall adc repnz mov dec movsb xor out add cmc pop jb enter add popf add cmp shlb add test insl dec inc rclb and mov add js jle mov cmpl jo test xchg cld nop fistpl add jne dec nop or icebp push sbb pop add fnop insb sbb nop loopne sti and es cmp ret lock adc add mov jbe adc cld outsb and int3 pop hlt xor ja adc and and xor rcrl mov nop mov (bad) sbb jnp mov pop add dec push inc push je push or push cmp cmc jl jle adc add push and roll call xor mov and xchg mov fmull hlt adc mov dec jmp in add stc xchg push add fiaddl ds adc in push loope xor cmp fwait (bad) adc mov add rolb and jecxz dec fidivrl add mov test push jo sub data16 adc lcall xchg imul mov xchg sbb ret adc mov adc mov inc or xchg xor add xor shl gs test movaps sub add xchg int3 and pop out mov mov flds adc lods test adc add lods jge inc pusha aam je and nop inc mov mov clc loopne inc mov mov add pop in rcll pop jnp sbb sub in cmp sbb or pop lods mov cli stos mov adc adcb out lods mov insl push xor xchg stos testl sarl xor adc add movsl sarb pop (bad) sbb xchg push fcom xor test fmull pop lcall std inc add xchg cld lock sti xorb sbb add aaa or jp ss (bad) fldcw push pop lret leave or fadds xorb (bad) xor xchg (bad) mov rolb add inc inc cwtl call fcmovu inc push aas pop call add inc rorb xchg fdiv ljmp popa xor adc icebp and adc test fsubrl lahf cli (bad) mov addr16 inc dec sbb adc sub ror mov push cmc wbinvd sti popa push mov push or mov inc imul out pop mov lods cmp or les mov and sub dec call sbb cmp inc add aam repnz mov nop xor dec xor arpl xor vcvtps2dq and aam icebp push sub mov push xchg sbb int3 rolb movsb in int3 and mov add and mov dec sub sbb test sub jns nop faddl lret insl mov and (bad) leave dec bound xchg mov rcrb xchg cmp xchg sbb dec jl enter push nop mov jmp (bad) rorl add add or xor adc sti xchg cld (bad) push mov repnz or into xorl sbb xlat cmpsb loopne sbb loope int3 nop fadds adc js jp push mov aas and pop js stc je sbb shlb cmp lods and or xchg mov add mov add push mov mov sub xchg add fdiv or stos jnp add std jbe or mov add mov add (bad) repnz and adc xchg mov inc ret lahf xor ljmp or popf lock mov test mov repz (bad) js icebp stos leave not movsb jecxz and lods in mov ret or (bad) out push mov pop iret jo or and or jle icebp inc and in jno fwait or cmpb adc or arpl add decl add cmpsl movsb lock and cmp jo nop sbb pop push xor jl jl and jmp outsb dec rcr inc mov jnp jg in cmp add dec ja clc cmp pusha adc rorl into nop int3 sub cmc add add mov adc ja les xchg jle push mov mov pop lock sub pop lock ljmp or add xchg and lret shlb xchg clc clc icebp inc mov (bad) dec dec imul icebp ss sbb jae adc fsubs arpl push lds call push xchg push lret sbbb inc mov loop push je xor nop inc push insb jns push fs adc inc sub popf adcl add stos dec jp ds mov ret jo or in pop jmp bound push cmp sbb pusha bnd js and mov add mov mov hlt adc adc fadds pop jno call imul ss dec nop cmp neg or pop stc aam ret sbb jae clc mov dec dec sbb aam icebp push enter cwtl (bad) xor mov pusha or fisub and outsl lahf and mov roll clc add dec fwait addr16 lods xor je inc js lock push call inc out imul mov mov fdivrs (bad) lds sbb pop mov daa add sbb add stos mov mov jp add aas ds add cmp jge push cmp (bad) lock xor mov hlt popa pusha lahf sub adc xchg pop dec je pop add nop jmp and adc xlat mov push scas pusha and les cmp fidivl add js in xor jb lock movsb or daa mov orl hlt insb dec add adc cwtl orb enter scas sbb mov jbe icebp mov sbb call pop clc das mov (bad) jl pop daa clc push shlb sbbl icebp andb push lock and dec test ljmp pop xchg mov aad mov (bad) xor and pop in mov cmp lret cwtl jno out dec add lods je out fs dec pop fdiv popa sub nop rolb sub pop (bad) pshufw cmp out cmc adc adc pop sbb test icebp jg push fcoms pop cwtl dec push inc in mov nop add (bad) pop mov push lods or xchg add mov mov in shlb xchg push sbb mov xor dec adc jmp iret je out push pop in add or aas adc add jg mov mov mov cwtl cmpb push cwtl or in leave leave cwtl or js or add in out or int pop cltd leave pusha sbb dec add jecxz imul mov push mov mov leave push cmp and lret xchg xchg cmp inc jo fs cs icebp or movsl (bad) mov lods in push movsb dec in add shl or addb inc xor add lods push pusha ret cld xor (bad) nop arpl and add sub mov or ds daa pusha call pop adc loope mov xchg sub insb inc mov clc push adc in jne pusha adc xchg xor sub xchg shrb dec outsb sub xchg decl shrb lahf je enter loopne into rorb pop xorb repz lret push jle inc pop pop adc sub sahf dec and rclb xor and add or sub icebp cmp arpl push and shrl repz rclb mov sahf dec cmpl add sub out arpl iret (bad) xor (bad) call and mov aad xor loop mov call mov dec add mov hlt pop in mov inc pop mov mov or test pop or sub icebp cmp xchg je or fsubr xor pop aaa sbb cmpsb or cmp arpl xchg mov les js inc stc push pop jae ret das add cmpl outsl lea mov inc pop and add mov faddl ret xor inc push adc cld sbb call rclb add xor and mov fwait subb mull aad or test pop loopne adc add ret cmp in in or sbb inc inc enter sbb jo push clc dec and push adc add xor std andb xchg lock test push mov inc fild xchg js and adc (bad) aad fs imul je test xor out xor add sub test mov mov mov andb sbb subb adc sbb and add dec sub add fs add dec xor mov sahf sub std sbb or xor or or dec nop mov cmp dec adc mov fsubs fsubr dec xchg enter xor mov xor xchg adc flds push cmp pop repz cmp lock adc mov sub mov inc xchg mov push sub and inc lret and lock jae sub pop cli popf and adc test inc add dec lahf and ret push mov push pop scas push mov mov lahf pop mov add jp arpl pop call xorl ss jno int3 and js or jo ret mov hlt rorl push movl mov (bad) enter sbb call or imul dec je js or jg mov movaps cwtd sbb decb inc push mov popa in cmpsl (bad) enter push xor fsts xor call mov lock mov rcr mov and aam sahf dec xchg fcoms or cmpsb mov mov loope and add add pop (bad) out pusha daa insb fcoms push test and xlat icebp cmc sub mov adc add jg outsl jmp mov sub jl push mov addr16 pop push jae pop ja pushf mov pusha sbb xchg adc jns jle pop jb cmpsl scas fsubp mov jecxz cmp mov push adc rolb cs pop and popa sti mov insl cmpb sub sub jle dec xorl add push idiv fistl cmpl scas (bad) fildll xchg aad lock add decl cld jmp fdivrs pop or pusha repz jb out sub dec sti (bad) and mov and out in rol pop in dec and and ljmp imul or inc add enter or pop pop pushf rcll mov and pop or push in fnstsw add es jg and or rcrl xchg pop sbb and fucomp push adc xchg ds pop fistpll cs adc js imul pop shr not shl inc pop paddd lds aaa xor fsubrs xchg outsb sub push push (bad) dec popa push mov lcall push mov push inc push das pop neg xor rorb pop stos out dec out (bad) and push arpl xchg pop fldl push dec ja je mov pop enter push mov mov out jne btc shrb shr mov inc pop add pop mov pop xchg mov fildl pusha push pop xchg mov and dec jg cmp addl daa sub pushf push adc subb je mov ret push jnp xchg push inc outsl shl mov aas add addr16 add dec jecxz insl jecxz call or inc cmc ja sub add pop clc ljmp jg and mov sub mov jge repnz cs pop xor mov jae mov int3 pop or xchg aas cmp push stc mov (bad) mov cmp ja cmovp (bad) ljmp push jne int jecxz sbb dec pop jmp cmpsb add decb or jl clc add in inc aad lods std sarb and xorl cmpsl push jg xchg push sub add push aam shrb sbb inc cmc add sahf sub pop inc push add add add mov pop lds jp loope loope enter and sar (bad) mov lret enter fistl jmp add adc bound (bad) (bad) cld nop (bad) dec fucom and inc or fsub addr16 jb jge cld add mov add mov pop jmp add push mov jg xchg mov pop lret or xchg jbe push mov (bad) jnp push adc cmp xor push movsb fstps sti pusha fmul and imul mov pop icebp mov jp sti add popa dec cmp imul lock pop rorl leave push jno and sbb dec je mov xor xchg push push js and dec les test push mov leave push scas xor add pop sub jmp adc clc aas mov shrl pop pop fbstp or movaps jecxz and add pop or sbbl ret or je pop xchg fnsave adc mov scas stos push push jmp into add imull or mov sub icebp pop add test (bad) push pop scas inc pop (bad) cmpsb mov ret roll cmpsb pop inc mov cld xchg lock (bad) push or incb (bad) mov add push mov out push push adc inc add sub jb and test mov das call mov outsb mov mov or pop insb push sbb jg pop cwtl jnp mov pop mov jmp roll pop pop inc pop sub push nop mov adc aas cwtl fistl mov pop stos mov jecxz add xchg pop cmp mov push gs nop xchg stos mov roll pusha mov je jb or push push out addl inc sub add pusha adc stc pop mov xor leave push pop jb xchg xlat adc or mov outsl rolb mov mov popa mov push out jbe lods pop popa mov or andb adc inc pop pushf push xchg jg (bad) into inc inc enter and aas sub jnp decl jg movsl addr16 jo sbb mov xor movsl pop inc inc dec sub dec inc jge sub cmp push pop mov fmull or adc gs adc repnz popa aad jmp fcmovb outsb ja dec pop decl jp adc je bound cwtl sbb jno cmp fisubr out or pop xchg dec dec dec pop jae mov xchg data16 lcall fildl in (bad) adc mov std adc jg mov pop out fstpt sti lret sub stos add lock add stos sahf addr16 mov into in (bad) je test mov es adc rcr xor cmp ss sbb lcall xchg sbb ja fs andl add scas mov aam pop or pop push pop sub inc xor cmp mov adc add mov ss push inc xlat jbe jne cs push cwtl out leave xor jl cmp sti enter in out inc movsl or call mov (bad) ljmp or pop adc add (bad) jbe and push movsb add pop int add or mov inc jb jae cmpsl loope mov sub adc inc pop add xlat idiv daa mov inc test bound aam lret js or jecxz cmpsl sub adcb dec push mov sbb mov and and push aas decl xor (bad) icebp (bad) mov inc cltd pop xchg mov jmp and add inc sub jbe add cmpsl mov in mov pop sub push es pop sub shl inc cmp int or arpl pop pop jae leave pop push mov gs movsb (bad) push cmp fstps or test fstpl dec ret add mov cmc and sub bound and call pushf push mov psllq iret add cmp jae xchg cwtl cmpsl sub (bad) repnz pop mov pop rclb pop xchg xlat sbb rorl (bad) divb cltd or push jecxz add xchg cmp add icebp arpl es jp push xlat int sub mov sub jg loopne dec shr or sub xchg fwait xchg pop xchg sbb sbb xor mov xchg push mov movsl aad adc aas ljmp lret adcl aad add data16 aaa push jle (bad) xor ror inc inc add pop jno hlt scas mov int3 out addr16 cmp xor sub jne arpl rcrl sub es pop mov and or dec pusha add or aam subb iret push pop shl popf jne test mov or pop icebp outsb inc jb jb (bad) xchg jnp pop jo adc movsl lret xor jecxz xchg mov push cs jno cltd xchg jmp inc movsb scas in jb sub and mov cli (bad) stc sbb mov in or xchg inc (bad) push inc bound sahf call pop (bad) ljmp cmp xor mov std stc popl jmp cmpsb add lds pop xor pop push mov inc fbld lds cmp jns mull add or stos dec inc xchg add xlat jle into pop push add pop mov (bad) jne,pt jge pop ror or adc and sbb jno jl inc sub and push push add pusha popa scas xlat xchg xor lds and xchg push (bad) xor inc jle add aad cmc iret xchg cld mov or pop pushl lock add jle in loop push pop push push ret (bad) adc pop push insb or inc shrb jne cmp push and add mov es fdivrs add jnp iret not hlt push repz ret outsb push addb (bad) icebp mov cmpsl out jmp push hlt jbe inc push xor ljmp outsl jae mov in loop sub ljmp push inc (bad) pop add aam xchg add lock test cmp sub sbb add xchg fldl mov cmp cli daa jne adcb pop or mov mov add or inc mov add fcomps cmpsb sub jns ret pop push add pop pop mov pop push lds adc xchg decb add adc ror in inc lret push inc test sbb add (bad) jmp jbe push pop mov movsb out scas jmp push mov xor js or lea inc mov in or out push orb mov sub cli pop (bad) addr16 xor add stos test jmp sti bound xchg mov xchg xor jle xchg lea mov add sbb xor mov xor loopne out jp push icebp xor cmp add into sub sbb jg xor iret std jnp in mov rorb jecxz pop clc inc in jge add jl xor pop inc stos (bad) inc pop aas mov nop jne push out aam imul loope add movsb pusha mov or cli jmp js ss inc fisubr in (bad) xchg aad cmp fdivl xchg outsl outsl or movsb inc std dec repz push cmp jmp jne mov adc outsl jg or das push in cmp hlt push push pushf inc mov in or pop sub gs and outsl push fimull dec pop and int3 inc mov push ret pop push pop pop dec out aam dec test mov fdivp inc jns jbe and jg xor push inc xchg push push sbb sbb or daa cmc add mov pop mov fldcw (bad) push shrb lret repnz mov mov ret pop aad push fldcw push cltd out adc fwait cmpsb ss cli pop loop es or ljmp and rcrl pop movsb pop add loope or outsl sbb lcall ljmp es xchg sbbb dec xor enter or cmpsl sub (bad) fisttpl cmp decb scas mov xchg aam pusha les std dec jmp and jbe int mov add jg sahf sub xor pop add out xor pop xchg inc xchg aad ret lea int3 mov ja adc in and xor aaa imul xchg pop iret ja test aas pop cmp test fs test mov imul aam mov push insb or aaa cmp fdivs adc lret add aaa xor mov jmp std pop loope adcb push xchg push subb inc xchg xor rorl sub jno mov or pop add or cmp push mov or mov xchg lods sarl jge pop inc pop mov sub in orl sub addb test mov and and lret jae mov add lock sbb pop popf mov into adc aas add aam (bad) loopne pop movsl add leave call mov fdivl loope or push and mov push sub sti loopne loop pop (bad) cmp fnop ret mov aas inc adc xchg pop jp cmp ror popa loopne mov jnp dec decl push inc sbb push push lods mov cmc ds push in or lods pop data16 mov xor pop add repz inc rcl loope or jmp fistp insb push ret lock dec pop jp push mov lea cmp push pop aad test fs sbb lods dec xchg out ficom jns add hlt add or dec jnp xchg test inc xor rcrl cmp xchg mov jb loop xchg jo aas and push movsl push insb jo and jmp or and mov shr out sbb outsb sbb cs pop pop jle pop sub int pop mov mov dec and fnstenv nop pusha mov jne jge cmp pop push ret cmp (bad) int3 cmp sbb sti daa outsl inc repz add in pop rolb divl ja inc or cwtl data16 insl aad jg leave push hlt aam xor scas push icebp xchg incl adc xchg add xor repnz push (bad) dec lea int3 jbe jmp leave pop mov jmp pop test (bad) jecxz cmp add enter in cld psllq mov stos lods mov jmp in pop (bad) mov rclb loop cmpsb cmp inc and loopne,pt mov (bad) (bad) xor push lcall out inc popa mov add lds in or xor push sub jb or mov adc xchg or neg add cwtl popa jmp xchg xchg fnop push inc add dec add movb lcall clc sub xor outsl dec add shr mov adc into clc out lds fnstsw adc xchg insl jge orl pop mov push pushl dec popf lcall add push lcall push add mov mov push movsl cs inc pop in scas rclb xor or fidiv cmp jae pop jnp push movsl syscall pop adc andl and ret push push bound popa xchg mov push jg repnz dec push cwtl cmp sahf (bad) fs sbb fs sub mov jmp push push mov jmp dec shr jo sbb sti sub in pop xor rcrb stos (bad) sub pop cli jb je (bad) js fbstp and cmpb inc pop clc movsb nop and arpl in add push test mov or (bad) pop push sti pusha add mov dec and mulb add cmp push pusha in pop xor pop ds sti dec pop inc jg fldpi jns popf or pop add inc sub xchg mov adc jb es sub mov pop pop test (bad) ja sub lret jmp add addb jae add xor jmp pop cwtl fwait div or xor inc pop sbb shl jmp mov xchg es xchg sub leave jae add jns sti and inc orb pop xchg sub pop shl clc mulb mov add imul addr16 (bad) in add ret push rorl ret mov sbb pop pop cs cltd pop in aam add arpl sbb adc cmc mov rcr jbe mov or ljmp mov outsl dec inc xor push or add lds add xchg adc ljmp xor lods dec sbb lret daa enter dec inc xor dec daa inc add rolb jo into add pop or push orb add (bad) push aas mov mov dec pop int push sbb jp (bad) (bad) or and popf scas dec add push insb pusha mov mov movsb inc adc inc pop jp test push push shlb push dec or enter int in pop lock addl fs in add and dec sbb sbb popa or js shl imul jmp push dec inc mov out dec cmp push push or sub les mov xchg cld pop jne jmp test lock adc push and addr16 push push hlt xchg pop push sub jl or or mov adc sub lds ja and sub enter jbe roll mov mov negb mov mov jmp test addr16 mov (bad) and shrl rorb mov bound jb inc inc outsb insl insb push ja and xor rcrb pop inc inc or xchg bswap jnp stc jnp add test push mov xchg inc movl mov pop add cld idivb xor mov cwtl stos rorl dec inc nop push cmp lret inc jmp pop push int pusha ds shrl mov add (bad) adc mov jle mov sahf (bad) aad xor push pushf add dec push fwait and jge adc outsl sub jmp dec ret fwait push add andb inc (bad) pop lahf inc arpl xor dec sbb mov out pusha sbbl cmp add and pushf sbb dec pushf shrl adc sbb (bad) jge idiv stc adcl fadds stos jb xchg mov mov scas and mov mov or xor mov sti dec int sub push adc sti in adc or cmpsl or cltd int sbb lds aam cmp bound outsl adc push test dec adc inc mov adc lock add bound sahf dec adc js test jmp add rolb mov in fcomps mov lcall add pushf sub aas or or jo call mov xor pushf adc cmpsl push faddl add and shlb je into int3 mov inc add divb mov std aad inc and pop jle push repz rcrb or push fstpt mov push lods pusha adc out add (bad) xlat movsl mov xor push jp fidivrl add add mov hlt (bad) mov mov gs ss outsb cmp and adc mov cmp push aam outsb adc addr16 iret xchg cs test in adc adc dec dec pusha adc rol push sub mov sub fbld or adc adc or xchg mov mov pop or sbb fcomip pop shrl aas add insl stos mov pop (bad) cmp daa sub inc dec lret dec push dec fnstsw divl add xchg sbb lods and inc cmc push int inc scas aaa lahf ss fiadd rolb dec add adc mov je loop add dec cmp arpl add ret mov mov andb adc mov mov lock mov mov xor mov shll data16 jp push rcr ret test cs (bad) popa cmp (bad) dec add scas jle scas mov adc add movl in xor and xchg push dec push daa call std sub adc jo mov push popa (bad) fstpl or sub pusha add daa dec push pop lods mov add jge push mov jbe add mov sub cmp (bad) frstor mov dec mov inc lods mov pusha and mov add stos add mov mov lods adc rorb mov push add dec cmp loope and js mov pop mov mov pop add sbb data16 mov stc xor xor xor push enter pop jmp or jb dec cmp call sub movl add xor add inc xchg and inc loop pop dec rcrb pop add lods sbb icebp imul inc inc es add rorb movb insb xor push xchg lods cs pop les push (bad) cmc adc subl (bad) pushf and sti mov inc das int3 into jnp es inc xor sbb inc arpl jecxz add imul sub cs aaa xor je mov sbb sbb movsl mov pop add add data16 ss out fsts mov add xlat ljmp cli cltd cmc push or adcb or push push jae stos add xchg mov pop jne add (bad) enter sbb pusha mov push inc lods dec cwtl ss or rclb arpl xor daa test scas add push jecxz xchg les and jmp mov pop lret push rorw and sti fild cmp cmpsb les sub mov cmp or lea mov inc xor (bad) push and lahf sahf xor or push int3 mov ja add adc movsl dec or mov (bad) pop pushf cmp inc jo sbb mov dec sub jbe sub aaa call jg or xchg es loopne cmp cmp imul andl mov or (bad) in adc adc addr16 inc outsb and divb sbb rcr mov lods aad ja mov cmpsb add mov pusha jae shrb dec outsb xorb adc sbbb push push aas inc add sbb push mov outsb jnp cmp sbb cmp push add xchg rorl sub cmpsl aas add popa jo loopne add outsl cmpsl or xchg leave or adc (bad) je scas scas mov add jae lret in fs mov mov pop sbb testb lods fs arpl dec and inc daa add aad mov jne cmp jo cmpsl push or int3 cmp xchg add sub fiadd push aaa and icebp mov xor fimull lds cmc cmp mov adc inc sarb cmp dec xchg cmp adc repnz pusha incb vpacksswb les and and mov sahf lea mov fcompl fbld cmp jmp pop pop leave jp mov pushf mov lcall or mov mov and outsl jmp call (bad) mov jmp push mov rorl jne add cwtl xchg inc out adc add push rorb stos das and push mov mov loope cmpb test shl pop pop call or cltd push pmulhuw jbe mov and int3 sbb les sub lsl sbb orl add sbb mov push adc mov fisubrl add shlb push mov pusha or pop push mov sbb or fild sbbb les out sarb ja inc mov mov inc mov jl (bad) mov sub insb cmpsb (bad) sbb xor xor add ret ret add mov add adc dec xor test insb push aam adc jl inc sbb push cltd scas xor loopne and pop xchg leave clc inc outsb lret cmp bound xor loopne xor mov ss loop sahf inc leavew xchg jnp ljmp add cmp cmp add mov sbb push loopne inc cmp inc add add adc leave (bad) or (bad) test stos lcall adc cmpsl add pop add and adc int3 jo dec daa and inc and pusha inc (bad) aam adcl test aas mov icebp mov pop pop inc (bad) adc lods int3 leave fwait add push sbb popa dec dec mov pop sub mov mov (bad) and xor ficomp insb xlat xor jecxz or pop rol dec add in mov adc lods cli js,pt bound pop test mov xchg cwtl mov adc add and push loopne (bad) (bad) or jge insb dec add pop mov sbb out (bad) dec inc add mov movsb daa ret adc add aad mov scas inc mov stos cmp sbb xchg and scas stos movsl movsb clc nop mov lcall sbb and xchg rcrb popf ret in inc rclb shl sbbl inc ljmp loopne lret sub pusha or mov pusha lods inc xchg (bad) dec imul jl jecxz test leave pop call add int pop dec sbb popf push pop fidivrl mov adc (bad) mov adc push cmc test int push mov ret scas cwtl cmc mov nop mov sub mov scas mov dec xchg xor and mov mov mov mov jns mov lret pusha inc inc (bad) jmp pop inc test sub and mul or inc sbb lcall test popf in add add mov mov sbb pop jae or or pusha sbb iret mov insl test popf add xchg mov decb (bad) pop outsl test add jns arpl xor xor xchg and jo scas cmp xchg ret mov cmp push adcb cmp xchg iret lods call dec ja orl inc push fmuls push push jg pop jp sub rol cmp mov add out ret mov jp decb add popf add (bad) xchg xor ret iret clc jmp arpl xchg test sub xor xchg adc xor aad ss sbb inc pushf std add fdiv mov xchg and xchg mov xchg lods jns rclb out pop sahf xor mov pusha sub adc pop and jb and nop and mov js push mov mov xor inc jl sub popf or addr16 fdivs fist jp dec xchg test dec sub jbe add (bad) (bad) aaa dec (bad) and add push sub jmp jmp sub (bad) icebp xchg xor jae std xchg lret cmp fldenv and sbb in sub mov add int3 stc pop xchg xor cwtl or add xor scas pusha sub ret push mov pop adc add (bad) scas and loope sti push mov cmpsb cld repz sbb inc push loope jbe jge loop mov mov data16 in mov ror pop jb cmp in sbb pop xchg adc ror and scas inc shlb jg add cmp inc pop push cld or fdivr in movsl push std (bad) mov adc lock or lods ljmp xchg mov (bad) decl or pushf mov test pusha xchg push mov outsl xlat bound push popa lret cmp mov sub in je lar push pop cwtl sbb imull stc hlt dec ret jns add add push xor push std rolb mov xchg jb test xchg in mov out dec out (bad) decb movsb scas mov jge imul call lock ss add mov adc mov dec mov push fdecstp pop push (bad) cltd or loope aam inc adc out lds call scas in add (bad) mov cltd jo lcall imul add cmp imul mov jle xchg std add and pop xor (bad) jo or pop and cmp jns xorl pop popa test das scas add dec mov pop and popa popf mov mov loope fistpll fist lret jle inc lcall xadd xchg cli addr16 data16 jecxz lock dec outsb js lods mov jb mull and push das pop pop jmp inc jnp lods cmc adcb or xor out pop add nop mov push lcall adc fidivl add jbe shl jmp (bad) dec jg pop fldz pop xchg inc pop mov (bad) adc pop fisttpl mov mov mov aas mov cmp fisttpll cmc mov mov imul les cli adc out add lods mov lds sub lock cmpsl pop xchg pop inc push mov imul push in pop loop push hlt mov sub call movsl std outsw add sahf mov xor mov jmp inc mov pop sbb jnp sahf cmp inc mov addb shrl xchg jge push jne imul imul mov mov jbe add and jg jae and mov (bad) push daa andb ret mov add or sbb leave fisub push pop push mov jge fsubrp jg pop add add outsl push pop pop sar ds add stc outsb jge (bad) cmc or jns xchg add cs jg mov scas push rcrl test mov ljmp add pop or jb xchg mull in jo (bad) js mov leave cmpsb adc arpl add js aaa leave jnp cmp xor lea mov popa dec push lea ds dec add adc or and and jmp mov cmp xchg jnp jno cmc add sbb inc xor mov subb rcll lret cld sarb add adc dec pop xchg pusha dec shll dec lcall test sbb jecxz or adc mov or inc adc pusha push push addr16 lret pop je push mov leave movsb cmp loope jno inc add mov movsl sti (bad) int3 ljmp or xlat imul ljmp hlt enter jne mov mov daa ds mulb movsl push adc adc pop sbb popa jmp push pusha cmp push pop divl cld test adc adc xor pusha aad fildll orl aaa pop fcomps jo push xcrypt-cfb cmpsl in fsub lock xchg (bad) mov in mov (bad) aas dec imul push mov inc mov sub daa cmp mov fsubrs jge fisub stc pop adc pusha shrb or mov adc sti aas out loop push or fistpll jbe pop bndstx xchg or pop fstps mov or je mov or int clc add inc dec or jne idivb mov pop sub add pop repz add mov pushf mov orl (bad) jle lea or sub daa jge lock lahf dec outsb decb push dec (bad) and std dec das cli xor push mov ja xor sub nop cmp sti negb or cs push or pop rorb push sti pop movsb add std aas jmp repz imul out and inc dec cmp xor scas jo outsl mov out loope das ljmp or pusha imul shl mulb daa add (bad) sub ljmp andb or pop negb mov iret pop jno sbb or mov inc sub cmc sub inc orl shrl pop push push mov lahf push insb push lcall call or jl pop inc cmp adc xchg or mov dec xor je dec hlt fisttpl das mov sub xchg mov pusha subb xchg fs xchg dec mov popf jmp dec jns pop je call xchg fldt dec or aad xor icebp push jmp cmp dec pop xor insl jmp mov push push and (bad) xor pop pop rorl addr16 sub scas (bad) cld sub sub mov xchg dec push mov xorl pusha mov add nop sbb clc cmc xchg (bad) mov xchg fnsave add adc jg sbb pop cmc out pop ja imulb add pusha or jmp add jns or pop int3 in jne pop and rclb sub imul mov dec shll sarb push xchg mov sub dec stc fidivr add sub pop push mov and add notl pusha and add out fidiv push pop and popa or scas push jl (bad) insl mov pop jmp cmc inc rcrl add jns jl pusha addr16 mov aas sub not xchg int3 in mov icebp das dec adc sbb jg mov jg sub sub pop jmp xchg mov sahf push andb fstpt sbb incl cmp fsincos sub js bound mov pusha add dec and insl in andl sti jg inc xlat fwait xchg leave lret popa dec mov adc jns psrld jb insb jno xor into mov push dec sub outsl pop mov add cld inc mov ja push pop and scas lock inc sbb test push jl hlt xchg cltd jae in insb arpl pop mov dec rolb dec xlat arpl (bad) mov fdivrs or clc add add lds or mov sub dec fbld loop add dec lea (bad) push dec outsb aam mov addr16 scas sub adc das pop stc bound adc push jmp mov pop ret xor pop mov repz rcll push and test jbe inc or adc push dec and add ljmp xor push in fsubrl popl xchg sub or add test shr imul and dec jb adc adc push jo add in sar jns ljmp cmp adc jge popa add and enter jbe sbb inc push ret testb lret push jns test jecxz sbb nop adcl mov push mov pop ret adc inc push ret (bad) cmpsl sbb add mov movl lock rcrb pop (bad) and cmp pop loope mov pop ret and inc push ret add mov cmp mov push pusha shrl ja push push or adc xchg add sbb stos push cmp add repnz add dec add sub scas add ja outsl fsubl fildll push and popa mov test mov rolb push sbb jns xor in int3 fistp add cmp je fimul dec in pop inc dec mov sldt adc add adc rclb dec jl add hlt mov je add xor or stos sub or shlb and ljmp and popa push jg pop andb mov pop movsb clc xchg jbe add cld sbb or add cli insl dec adc jge add je mov xor int (bad) sti xor pusha inc std insl add inc lock xor insl jno,pn mov cwtl dec pop adc loop jecxz lock xchg xlat arpl jne mov adc imulb (bad) ljmp add in insl arpl xor push out mov mov ljmp ficompl lret (bad) sub lods subl or daa es test das out or mov jge outsb add xchg (bad) hlt enter mov xchg add xor addr16 xor loopne es add aaa inc jns les sub fs sahf lock test xor stos pop fwait xchg cmpsb jle nop ja sub add dec (bad) idiv xchg fcoms jne (bad) xorb inc nop subl dec add xchg xchg and xchg cmp push test add dec mov jae xor sbb aaa inc xchg sarl scas ret push cmc push sbb inc jle xor xchg imul mov mov push ret mov cmp xor inc shlb xor (bad) inc iret add lcall or out and sub fcoml add inc int3 sti jp mov dec call jno mov mov sbb hlt add fisttp sbb mov ljmp into add outsb stos cld adc mov xor xor aaa iret jno loopne add adc or cli and pop xor mov rol data16 mov mov or adc add add xchg push sub (bad) mov lds or inc dec or or pop pop rorb mov mov aaa push jmp sub and add dec adc add adc cmp push xor lahf ret inc dec sbb sbb cltd jns jno jp adc xchg imul or test dec sbb cmpsl xchg iret dec arpl andl lcall adc fcoml test inc in add or faddl push mov xor ret add sbb or cmpb test push jl push cs call dec mov cltd js pusha push adc inc shlb add ljmp clc xchg push push ror mov and add out data16 xchg mov mov shrb mov (bad) jno enter mov into popa lds mov mov or jo jmp sub pop cmp repnz push rorb hlt dec xorl jp cld call add jno and sbb push test inc jp enter cmp movsb inc ret mov add cmp faddl popf push fldenv outsb rcr mov add mov cli vprotd add push jg lcall rolb or mov mov add nop xor mov cwtl xchg add and movsb stc fnstsw add push repnz (bad) push cmp mov push mov jno cltd dec insb jb hlt dec and jle iret dec push and call cmp jge add add pop stc (bad) and or pop push cmpsb inc test cltd mov movsb popa xor push pop mov sub movsb sbb xor cli and test cld mov and xor xchg mov and mov nop and mov add jp or dec pusha add test mov mov mov es push movsb inc aam nop orl shrb adc dec out adcl lock inc xor push dec (bad) xor mov add sbb lods or mov add repz rcrl push sbb mov or in stos cmp and adc or inc sub add stos adc xchg and lcall inc sbb jp mov fistp xchg cmp mov loopne add xlat xor push out cmp cmpsb scas les mov cwtl mov push and cmp sbb push mov mov rcll les cld nop mov stos sti or dec mov nop inc and mov mov xor cmp cltd dec dec test mov or nop mov dec add and andb fist mov xchg cli cmpsb fsubrl shrl pop stc and mov xchg sbb aaa jno inc les rclb sub rcl inc arpl add mov ss xor cmp sbb str pop push les mov cltd mov jno mov cld insb cltd cwtl xchg xor xor mov lahf gs rolb add out cmp loope inc or notl mov pop out mov mov sbb clc or test push scas in or (bad) sahf icebp pop push shrb jmp cmpxchg das (bad) mov sbb mov into ja sub inc adc mov les add cmpsl xchg fsubs pop cmp inc xchg push rclb mov inc pop adc dec mov pop mov dec push jp add in xor pop ljmp js popa xchg cmp inc gs mov mov mov sbb les cli pop push nop mov enter add arpl add mov mov je cmpsb sub stos das inc sarb xchg leave hlt mov xor lahf les push loope push and sub sbb mov adc add insl mov mov dec mov imul jo sub sbb mov cld jns cmp ret cwtl loop mov cli fisubr lods add jmp lahf inc scas cmp aaa ja rcrl aam sbb ret cs into adc maskmovq idivl lahf aam and xchg cld aaa out test xor mov loopne jp or push dec cltd (bad) mov cli push je mov fmul (bad) sub dec or nop mov mov fsubrl xor xlat xor aas mov fistp dec xchg xor (bad) mov add cmpsl or pushf lock add or sarl lods mov add movsb (bad) faddl je or mov inc hlt add add pop cwtl icebp les push fmull adc adc jo inc and mov loope add pop cmp add jle in and sub ret mov adc adc sbb cmpsl mov ret dec push inc pop aam sub adc aaa stos xchg hlt cmpsb xor (bad) lcall int3 xor add mov ret outsb js ljmp fnstsw xchg push int3 xchg jecxz mov (bad) xor adc jae push call add int clc adc clc push inc sub cmp xchg xchg test aas int inc and jo (bad) mov or pusha mov or pushf add lret aad or mov sbb gs imul sti sbb sbb lods fcoml nop push lods aaa sbb jmp mov test and add xchg or dec nop fadds xchg test rclb and mov dec push cli xor scas call dec stos dec movsb xor (bad) and icebp lret out mov xchg or mov cmpsl sub mov cmp mov das add xorl add pop jae pop sub stc mov and inc in mov cld inc mov fmull sbb (bad) ret or add and inc cld out data16 adc insb js fsubr mov sbb lods and inc cmp cmpsb mov add subb (bad) jge mov cmp into mov fdiv sub pop les jmp dec and imul popl xor cmp cmpsl adc jne inc xchg mov mov popa rcrb mov xchg clc xchg ds jns cld pusha adc mov sub fwait cmp clc pop icebp mov pop mov mov sbb sub xor jp dec xchg dec jmp and add jl (bad) rep cmpsb sbb or popa cmpl pop gs jecxz pop jae jle add xchg ret loopne dec xor inc mov (bad) fnstsw in cltd or andb nop scas xor fsubrs out mov jmp and push stos jnp or mov pop test or jbe pop and add lock imul lods lods std xchg inc lahf sbb in ss add neg push sbb lods xor nop lds mov je pop push (bad) jg mov inc push sbb pop xorl inc jne cltd clc loopne outsb fldenv cmp jecxz sbb add cli mov jno ret pop orb cmc aas and cmpb adc sbbl cltd mov imul jg dec cmp (bad) sbb cmpsb jmp inc lds ja imul repz rolb scas add call mov or outsb jg dec hlt and jo add fnstcw aad cltd (bad) sub ja sbb mov arpl adc inc mov jne jg cmp jecxz ret ljmp aas add sub cwtl dec xchg push loopne std loope test sbb cltd add sbb lods mov scas adc jg pop sbb (bad) ja lea dec jle add icebp jmp lock sub mov cmp jl or mov xor and add addl xor dec les xchg mov or cmp cwtl (bad) and je pop pop pop inc iret lods fidiv nop xchg std testl js pusha aas fldt cmc jae xchg (bad) call lahf addl insl movsb adc and push ret push fdivrl into sbb xor sub adc add movsl outsb adc mov dec adc shlb into jge mov or jmp (bad) add push cmpsl jp sub pop int3 sub je mov inc sbb xor test inc jnp push lods movb dec hlt cwtl and les and dec dec stos inc sbbb popa notl mov nop dec sbb xchg add (bad) lock xchg mov sbb adc mov pusha ror mov ja push jle sub jb test xchg adc inc aas add jg ret lret pushf cmp (bad) int3 les xchg ja outsl cli lds mov dec pop (bad) mov cmpb add mov dec cli nop jg test sbb cwtl loopne clc (bad) xor addr16 adc fist jo push xor adc (bad) js xor ss adc inc jle mov adc inc mov nop ja adc int3 add outsb cltd js call cltd and test inc pop or test call push cltd cld out rorb lds xchg das push and pop adc lock jmp lret add jg xchg sbb inc add and mov inc pop pop and js data16 jns mov mov outsl add mov fyl2x push or and lods fdivp jo inc and mov xor pop loop push stos adc fsubl cltd pop je (bad) mov pop call das mov add (bad) push or int call test mov push (bad) mov inc test xor mov outsl cmp adc cmp mov inc sub push push push and xor sahf add xchg dec cld sub rclb jb fwait mov cmp push idivb (bad) dec dec fild and add adcb es iret stos int3 adc push xor nop cmp dec or jne popa lock sub xor cmp ss or es jo cmp stos repz add mov adc jb mov lret faddl sbb adc xchg popa jno sub push cltd inc mov mov jecxz popf movsl jl adc push adc pop adc sti inc inc in add add jo mov (bad) adc lcall pop lret cwtl gs inc inc shrl pushf test push (bad) lds dec aam cmp or call push gs pusha xchg add add and inc popl jb int xor jge add mov int3 add jb hlt pop popf mov xchg mov add int3 nop shrb pop fs hlt lret test add adcl and xor insl pop jbe inc inc test movsl push loop adc pushf xchg lock adc mov movsl getsec mov sbb xchg popa push jno or sbb xor arpl sub push mov inc xchg pop or fbld push xchg push add adc scas (bad) bound in and sub addb jne stos loop lock mov sbb sbb loope xor push add sub popf jg mov sub and xor jb aaa data16 add leave stos lock dec push lods movsl xor cltd icebp fadd mov inc repnz cmp mov cmpsl mov bound mov cmp test mov adc andl add xor pushf (bad) jecxz mov lods xor xor add cmp mov out popf or bound adc push and inc aam or pushf sti lea lock sbb adc faddl enter mov jl pop (bad) or test inc xchg adc push pop sbb lret add inc test push xchg outsb imul es in adc add mov mov daa pop cmp or fimul mov cwtl inc xlat xor xchg cwtl js cmp jg loopne and add sbb adc mov mov and rolb dec (bad) cmp add jg inc sub sbb pushf test mov mov mov mov mov cmpsb jo dec aaa clc movsl clc mov adc mov cmp and sbb cli arpl (bad) jnp sub cltd push pusha subb fiaddl dec add push xchg dec xor push ret repz sub push xorps xor and rcrl cmc and inc sahf push xchg shr loopne mov rorl and (bad) and fsubs push sti xchg in movb pcmpgtd enter test sub mov add adc loop add mov cltd dec int3 inc lds loop int3 (bad) aaa or and xor and jmp fstl xor inc add jecxz push sbb sbb imul das fstps cwtl test aad xorb xor fisubr orb call cmpsl mov adc outsb sbb jp pop mov inc and pushf cwtl xchg inc sub xchg xor (bad) push cmpsl add imul inc add dec cwtl aaa mov add das mov imul adc lcall add (bad) aas nop lods addb adc cltd sbb and pop xor adc cwtl inc sub popa sub add in cmp inc jp or mov pusha cld stos dec adc rolb pop add sub mov jbe in or mov xchg insb mov cmp mov call mov xor rdtsc push sti mov xchg cmp xchg jns xor sub xchg andl daa in les jmp dec sub pcmpgtd jl pop mov test mov lds repnz add adc cwtl xor xchg xor inc test xor ljmp xor test jge jne rclb cli jo or push cli push pop daa dec push add push jl dec jno daa inc mov fadd mov aaa jne xchg stc fsub test stos aam pop xor cmp jbe aas mov test cmp movsb clc pop jmp and xchg fs test mov fildll add sub mov das nop sub pop jp xchg mov and push push add push leave sbb mov (bad) les push xchg or cmp push pushf inc outsb inc gs enter fsubrl or mov fmull subb dec pop in ds data16 inc sarl add mov mov dec cmp sbb divb inc sarb dec ror jo dec push inc sbb cld je je js outsb dec scas (bad) mov ret inc sbb xor inc leave test test dec imul jecxz push jae add ds dec mov xchg add pop rorl xchg in nop sbb and xor xchg imul jmp mov insl lret pop and adc lock and shrb call jb adc mov in adcb jbe test les dec call bound or mov fldcw add dec or inc mov sub divb adc les inc ljmp adc lret out dec pusha add dec ljmp stc ss nop adc mov and cltd call popf (bad) mov pop mov dec test and mov inc jmp and outsb pusha sbb stc sbb xor push add inc outsl dec inc pop fsubl movsb pop xor test cld xor sub or loop cli popf xchg sbb inc xor dec xchg add mov shlb pop xchg and pop sub mov aaa push in inc push adc cmp adc cmp sbb jle or rorb mov inc stos add clc add add sbbl inc ret enter imul jle rclb mov cwtl add push inc mov cmpb or pusha cmp push out (bad) pop mov pop sub in mov scas inc or lds cmpsb mov test or mov adc sbb sub mov aam mov push dec and xchg out inc rorb test pushf ds sbb in or xor fsubr (bad) lahf loope inc pop cwtl cmp in inc (bad) ds rolb hlt popf (bad) out cmpsb dec dec pusha mov imul add inc push adc mov and clc into pop orb out push xchg ja adc or aaa test cli imul pop mov add rcrb jmp fdiv int sbb aaa add (bad) xchg push and add shrl dec jno ja adc dec flds jle and fmull (bad) pop push mov insb aam dec pop in xchg dec imul push mov inc das dec and shlb dec or adc add or mov rcll jmp test dec or adcb test add xlat imul insl sub sub rol push sub inc movsb inc mov cmp fsubl or popa aas or popf or dec xchg rcrb lret or add xor and shlb add insl cltd aam mov and push call ss lahf out sub push xlat in in mov xor negb loope js aaa push mov hlt xor jae test dec mov push subl mov dec stc enter aad dec push jno jge mov adc adc xchg hlt jl pop adc inc sbb das sbb scas ds add loopne imul outsb add pop adc add dec dec lahf enter and in clc loopne ss shlb mov stc pop repz les sahf hlt movsl clc out sbb sub (bad) fs adc add insb aaa bound push movsb std fadd sarw add (bad) sub hlt or nop popa push xchg push add fdivr inc insl mov dec inc cld mov add inc cltd dec cwtl fldcw mov and xchg rorl and mov cmp add lcall pushf or inc sub push cltd mov add popa sti push insb mov xchg insl fcompl ds dec pop movsb adc inc and jecxz and pop jmp push fmull int sub ds xor sub or mov dec imul es dec inc push jle popa popf ret xchg inc je imul jp and adc ja pusha cmp test mov mov test or popa in xchg sub add cmp pushf int3 fdivr push sub add add inc push pop xchg cld or push mov rclb (bad) dec insb add sti popf mov mov cmpl mov push jno add or xor (bad) fisttpl xlat add xor call jne pop cmpsl xchg je lcall test clc cmpsb push cmp data16 inc enter jp (bad) jno xchg out or add xor and int3 popa stc lods fmull push mov rclb rclb push mov pop pop or rolb add and stc adc inc sub aam add pop sbb mov add sahf jbe jno or leave xchg repz mov adcb pop xor les xor les das xor ss or cwtl enter add aam sub dec push mov sbb fsubl les and inc and sarb mov xor outsb dec mov lahf mov inc pop push (bad) dec aas and mov xchg cmpsl outsl mov push mov jle scas ret mov les lods adc dec push outsl jmp xor xor cmp or movsb loopne mov add rol lret mov sbb mov inc xchg jne dec test js add push bound and or decb pop xorb add pop lods dec cmp add psrlq fstl scas sub add or fidivrl mov dec and (bad) push sbb rcll jl mov sarb fs sub add push cmp adc mov dec dec adc xor pop jnp cmpsb sbb mov inc into sub mov mov xchg and orb subl loope xor mov cltd cmp enter es in hlt movsb (bad) std adc add (bad) incb cmp cmp sbb (bad) les add stc aad jae,pn repnz andl xchg cmpsb (bad) lock pop pop les or xor add mov adc mov in add lahf aam dec or popa je cmpsl fdivrl xor cld add and fadds jecxz bound mov sub xor outsb adc iret inc js movsb xor fdiv xor sbb inc mov add pop enter dec inc or cmpsb add int3 rol cmpl cwtl lret sub js pop add pop out and pusha roll insl pop push and and xchg xchg ret hlt or fs sbb dec sub dec push test aaa movsb xchg pop add sahf mov jmp add mov dec fs cwtl test push pop test fisttp xor loopne sub mov rorw fildll sbb dec mov in in push lret mov into mov xor pop and mov mov add pop shrl stc movsb mov stc add enter sbb jmp add dec outsb loope clc enter aaa push mull add or jbe and pop rcrl test adc inc fs jne jb bound push arpl inc rorl pop movsl shrl test or dec inc pushf push ficomp (bad) cmp mov addl mov ret mov roll cmp pop or xchg pop and mov pop cwtl pop std mov sbb adc sub sbb cmc mov mov adc ljmp xor xchg or xor mov test lds test sbb movsb test (bad) xchg xor hlt and xor scas fs (bad) negl adc call lods add jmp mov das inc pop inc jo out pushf ret jae out nop mov fs rorb cs scas (bad) pop push cmp jo fistl (bad) xor cmpl xchg push mov hlt or xchg cwtl dec mov jno and jne fnsave sahf dec xchg mov add mov push pop dec popl xchg pop push and fs mov adc adcb push push cmp jo inc call js int3 and out (bad) cmpsl (bad) cmp out jl lds push and xor out addl out lock das (bad) pop (bad) loop and mov xchg ficoml nop xor mov data16 mov and pusha mov push adc xchg mov (bad) inc lods xchg or mov dec rcrb cmp loopne or cmp outsb add in repnz pop add ret repnz sub cmpb pusha adc incl mov popa les mov adc add call push mov clc inc cmp mov int3 lock ret sub int3 dec loopne and xchg enter jo (bad) shlb outsl mov mov bound (bad) xor adc and lea shr xchg (bad) adc add loopne push push ja or or aaa addr16 jo les sbb mov icebp mov rcl in mov pusha push mov and add les pop sbb xor xchg imul adc hlt sbb sub test andb into cmp scas sub dec fdivl stos xor lcall lds inc mov nop sub add xchg call jecxz push cli orl sub sub test lods dec cwtl fmul dec adc cmp push push mov xor sbb cld mov pop nop cmp sbb or popa jo add pop jns or add imul add sub xchg add dec lods xorb loopne cmp dec push or and in push mov mov and outsl les pop fsubrl aaa or or scas pusha dec test add xor addb mov lock add add mov out mov adc xchg mov insl mov pushf mov das inc and (bad) incl mov lahf mov dec aam shr mov arpl sub inc gs mov rclb dec and add enter add or xor and fadds and lds je sbb adcb inc mov je adc es sbb daa cmc sahf aad add or inc adc mov sarl sub dec and rcl pop dec js pushw push xchg pop cwtl fs add mov add push into push mov sbb push xchg aad outsb inc test sbb add adc aaa nop sub and mov dec xorb xlat es icebp (bad) dec orb xor inc cwtl mov mov outsl je bound lock xor cwtl test cmp lock mov mov mov push sub pop dec rcll add roll add or sub stos pusha subb clc xor xchg or xchg jno pop jp (bad) jb loopne mov addl nop pop cmp and mov wbinvd test push fnop mov xchg jae cld das imul mov aam and cmp adc stos pop sahf adc cld adc xchg ds inc mov xchg test jo in sub add mov shlb sub cld xchg pop add inc pop sar movsl mov sarl sub sar cmp mov mov add cld mov dec out imul scas push dec (bad) fistpl pop add outsb shl xchg mov imul std xchg outsb in nop rolb mov call inc into dec push rolb mov dec ljmp jns xchg dec in add enter add test dec pop into repnz push inc inc add xor das in mov jb stos pop flds mov or push dec lldt inc dec push sub rclb or and int aam fstl jg push add xchg mull xchg dec jp xchg mov push negl loopne loopne jb (bad) sub in sub hlt xor cmp add push ljmp mov add push mov add dec xor xchg sbb test jae inc xchg add getsec js sbb xchg xchg jns lock push jo pusha push dec jg loop jle jmp cld xchg shrb jge cmp int cmp les xor sub xor iret xchg in push fs push cmp dec dec fisttp lret sub jbe into xchg repz dec cltd js dec or push arpl cmp icebp aaa cmp nop lret inc mov inc jae inc stos mov je inc fcoml pop (bad) add mov sub orb adc or jno add call pushf push fcompl addb push mov fsubrl add mov mov cmpsl test insb jb push aam sbb mov out subl add xchg nop stos xchg and jns add mov lahf add out (bad) insb rcll mov stos xor and sbb adc je mov or addb mov mov add shrl xchg nop stos add fdivl xor adc mov push mov dec rol (bad) rclb or mov xor je pop lret dec mov sbb scas cltd sbb add xor push fadds rol inc jge cmp in inc xchg cld mov sbb (bad) push mov in mov rorl add xchg pop lock pop mov push outsl dec pop pop add int3 data16 mov movsl mov je sbb mov mov outsb or add popa cmp jecxz pop fistpl pushf (bad) mov mov mov add cmp inc inc rorb les in (bad) lds repz cmp aaa mov lock push nop insb call add cmp xchg imul and sarb and lahf loop (bad) je les adc cli and xchg sar xor dec dec aas fadds inc cmp add js lahf aam dec push ret imul test pop dec xor call adc (bad) rcrb push das cli xchg cltd rolb xchg pusha je nop jl loopne or pop subb xchg sbb mov mov aaa mov and gs sub ror adc test ss mov sub add inc fadds inc mov shrl stos pop push fsubl (bad) or dec push xor mov andl test cmp das (bad) aaa mov mov or loop cmp add loope xor adc (bad) mov or lea lock lock out xorl sbb popa pop push fisubr add mov xor adcb pushf pop or dec xchg lahf rolb shlb inc mov addb xor sbb sbb or das adc add lock lods ss cmp xor jns jl add cld stc cmpsl scas sarl in sbb enter popf or fs mov clc orl popa cmp push cmpsb mov add aas sub jo pusha pop pusha jecxz mov add movsl out insb xchg push loope mov loopne pusha mov jecxz call pushf dec shll mov mov add into jmp pop adcl push inc sub pop enter scas or clc rorl and fdivrp vmwrite push cmp lcall sbb in scas cmp imul repnz push mov loope push aaa fld nop icebp pop sbb push jecxz mov roll add rorb rcl jmp pusha mov ficompl call xchg test xor popa je (bad) stc in jecxz loope into js sbb test mov pop call in lcall ret (bad) loopne mov mov jmp and iret ret ja adc inc les push cmp pop inc push dec stos mov and sbb add rorl xor dec inc or and ret add dec xchg stc dec adc gs pop in or rolb or (bad) cmp mov adc into nop or or (bad) incb dec pushf clc lods inc push add xchg loope and fsub mov or mov or pusha pop icebp cmp pop test push popf pushf bound fistp add xor mov sahf xchg cmpsb loope adc pop add inc add sar sbb or inc cmp int sbb and inc mov enter (bad) jo vmwrite adc inc in jns sbbl add pushf dec enter sti adc cmp inc pusha cs (bad) mov mov mov (bad) push or nop inc or mov or rorb out pusha jmp js dec rolb mov test aad adc movsb sbb inc pop sbb pusha and dec dec fdivrl faddl push pop shlb xor adc xchg sbb loope push inc call shrb lea jp add push cld popa push inc lahf js (bad) ja ret lock in sbb or and add adc aam add dec dec cmp orb es or sub jo add add or dec call js sbb push add cmp dec sbb ret push clc inc adc les sbb jmp in and xchg pop mov andb cmp inc inc add xor (bad) shlb sbb mov add (bad) pop lock lds stos ror movsb (bad) lock ljmp xchg cmp xchg adc adc push or and test or jge pushf add (bad) xor inc sbb xor and mov push lret xor mov fldcw mov adc and enter (bad) mov xchg sbb pop call icebp (bad) pop adc and mov push enter mov adc insb enter mov mov adc mov mov and nop ss inc xchg lcall sub arpl pop call push adc loopne adc inc pop xchg xchg mov inc roll mov dec test pop jp jb sub or jbe in fisubrl test es push jo xchg sbb pusha inc stos movsb xor mov aad mov and xchg inc mov jo add mov ret lock push mov andl int fs pushf fcoml arpl inc in dec or cmc sarl inc pushf aad lods ret ret add sub in mov pop pop popa and fninit and lcall shr test add sbb pop xor jmp adc xor and stc sub fild jg repz adc xor into pop pminub or inc mov pusha sahf push jne add pusha ret sbb nop cmp xor add psraw pop scas rol pop adc call push mov mov or sub scas lods or pop or lds (bad) mov (bad) mov xchg sub pop je push hlt into jg xor popa mov mov orb add outsb xchg adc and (bad) lcall gs jmp loope (bad) adc iret add or in mov xor push in xor loopne es or lock cmpb inc stos rorb xor dec and or xchg cmp cmp mov leave xor enter adc nop adc inc psubsw and movsb test sahf mov or cwtl aas and dec int3 add inc adc gs mov mov int3 sbb sbb adc push add mov add add pop push or mov call sar (bad) nop bound cltd pop sub (bad) loopne popa add cs jo or nop xchg (bad) dec xchg jo shrb daa xor add rcll lcall jnp inc jge enter sub lcall test push sbb sub or and xor mov add lcall rclb xor test xchg in add daa add and ret jge shrl in inc mov (bad) test adc sub adc pushf or push pop mov push mov (bad) sub jo nop add xchg cmpsb dec add stos sub cld or lcall loope xor popa loopne sbb imul and pop add push call arpl pusha adc mov jnp push xchg lahf daa adc jo xchg cmpsb add or fs add (bad) xor add adc out inc lea pop xchg pusha sbb lods out scas mov popf push fnstsw mov adc rclb push fsubs ljmp js std jns inc cwtl test arpl mov sub and je pop or call or add add dec pop dec punpckhbw xchg and adc jne lds sub sub test test jae inc add loope sbb xor cmc dec sahf gs add inc mov fstpt mov push stc push adc or or xchg push xchg dec (bad) or cmp adcl popf pop aas xlat or lds testb (bad) mov add mov adc aam mov cmp add dec jnp and sbb sbb add add leave adc fcomps pop and dec adc mov jo testb loopne adc or jecxz sub sub (bad) xor inc clc mov mov or fnsave (bad) mov cmp adc xor (bad) cld push adc adc and push enter sbb movsb add add in (bad) add sbb sub mov push cmp les cmp repz es or xchg xor or xor pop dec sub push inc or pushf dec push dec cmp enter mov mov enter addr16 sbb inc xor out inc sahf scas bound outsl (bad) or or dec fildll sub mov fwait clc jl or push in mov sbb dec and jmp mov loope fbstp sub les pushf add and and xchg jg pop and or adc sarb stos lods sub push and daa shlb seto pop xor xchg dec add and (bad) push pusha fmull in psraw adc scas jmp sbb sub mov jmp mov popf mov jmp dec cltd push xor cmp nop das xor sub pop jno or xor add or (bad) jo xchg out xchg xor hlt add movsb or es push and jl inc hlt jae sbb rorb push jmp add cld popa add or mov xor sbb stc dec adc or pop decl pop add cwtl (bad) mov mov shlb mov xor pop cwtl test cli mov add gs xchg out fwait xor mov pop and popa add sahf int pop pusha jl xor cwtl sub test push mov add adc mov addr16 shrb nop inc and int insl test movsb push rcl or mov adc pushf adc jl mov notl or int3 dec in sbb cwtl sub push or lcall sbb dec cmp sar int3 cld mov aaa push fs jo fstl dec cmp icebp sbb sbb lea push rcrb and lods (bad) aam lods dec mov sbb mov push in push push mov test xchg pushf loopne mov (bad) dec or sub scas mov xor test out dec push icebp data16 sbb add inc fwait adc cmp adc inc or mov insl dec jo adc sbb lret adc insb fmuls xor call and fild push inc sub call pmaxub insl es (bad) pusha mov xor xor cmc push jbe push cltd pop aad xor dec adc mov out pop push rcll mov pop rcl cmc push push sbb mov pusha mov stos push test sbb js push sbbl sbb pop and hlt jno push mov cmp push sbb and out andb add jmp pushf shr mov jno les mov add xchg mov add je lret es lds and or add int3 loopne sub je mov sbb jg add and nop mov outsl orb bound sub mov xor pop and mov lcall sub jo sbb sbb mov and and aas push cmp inc adcb clc inc lds sub std xor mov lret dec sbb mov add xor cmp sbb mov inc and aam adc push mov cmpb in pop and dec add pop (bad) mov push je movsb push jo jns push lods and inc movsb xor (bad) and rolb xor pop dec lahf call adc cltd adc insl (bad) and mov and pop xor cmpsb cltd mov lods aad mov sbb xor jb cmp (bad) or jbe add push sub push push or dec push sbb sub mov or mov add sahf add jnp and leave jmp add ret push xchg inc sbb sarb test cmp push or mov xor dec cmp mov shlb pop or sarb mov imul mov sbbb xor or push or repnz jecxz and inc jmp movsb sbb adc ljmp push outsl cltd add rolb aas push jl mov xchg jle cmp mov dec push push add fwait lock cmp in pop xor adcl xor xor mov (bad) push lret cmp pop sbb cmp xlat shrb mov loope add call mov test mov fnstenv lret mov pusha adc inc pusha pop inc movsl movsb push mov rclb lock mov add jmp mov sarb icebp loope mov mov inc add ret les lods sbb xor mov in pusha dec aaa lcall inc push push in inc sub adc mov adc sub in inc nop push pop xchg lods into mov mov cmp cmp mov pop sbb fnstenv xchg lcall mov sub lret scas sarl pushf lock rep pop mov dec mov test arpl mov je adc pusha mov rcll sbb add push mov or and repz loope in sub jns cmc sbb sub pop enter addb out mov mov aas dec les lock call xchg aam lcall minps movl call fucom and and fcomps inc add popa push push and sbb (bad) xor int lea pushf push sbb fcompl or jecxz adc mov pusha mov stos mov or (bad) lret movsb xchg clc (bad) repz dec test rorb add push lahf inc sbb or add ret pushf push lea enter js jge sbb jmp sbb es xchg fs mov sub jmp push ret popa int3 add or adc iret pop inc add mov pop xor test stc mov cld (bad) int3 test cs dec (bad) push pop sbb push inc and pop xchg adc push inc (bad) leave test push shr mov test cmp xor and andb sub out mov stos sbb push test call lea push push loope arpl jg fsubl movl or xor mov aam in add mov add into shrl pop cmp sbb mov inc xchg xchg pop jecxz (bad) rcrl pop push add test dec jle adc nop add dec roll dec addb sub jp adc add loopne and mov pop aam ficom sub sub xchg rolb inc clc push add nop movsb xor add adc loopne adc sub cwtl outsl testl jo std pusha out push cld (bad) in jp push idivb mov test jne (bad) lea inc push mov push jbe jae es in add cmp cmpsl push popa scas (bad) test jno jbe insb cmp mov push ds sub adc nop or test or ss adc adc cmp rcll dec arpl rcrl sbb rclb nop push movsl fstps pop xchg sub aam ja adc aam and or sbb adc xchg int3 inc ljmp mov lea pop xor call in mov inc ss xchg and mov jne cli outsl pop xlat enter dec sbb ret xor mov mov cwtl mov mov pusha jae loop mov in out push add jbe,pn jecxz lods mov lea cwtl cs mov movsb ret sub in mov mov mov clc adc or adc lods mov and in inc mov adc rolb scas push pop sub jns add mov mov rcrb leave inc inc add fcmovnbe dec cli in jmp inc out jge add (bad) dec sbb and push call rol test push ljmp mov es mov insb add sub lret fs or and nop je ds mov mov (bad) sbb lock sbb js add insl jbe rclb sub call call xchg mov (bad) mov and mov fildl in or cmp dec or ffree inc mov out aaa or movsb mov mov push adc leave inc js test or jno mov sbb test jnp add mov scas xchg inc mov cmpsb inc push aas roll xchg mov mov ret sbb mov imul push dec inc dec inc mov cltd ret or inc in cmp or sub fcomps mov stos jo movsb add mov das mov add test les dec cwtl mov dec or or cmp mov aad rolb mov mov cmp lds (bad) cwtl and and cwtl call xlat xorb and mov push xchg mov and enter push nop mov rorb dec mov js clc mov pushf add mov loopne and or dec cwtl mov test jo cltd imul sbb pop insb lock (bad) adc mov bound add fs (bad) rclb mov xor lcall push arpl or out or into jo cld or jp add and in mov add jg pop ljmp lahf and aaa push mov or les shll sbbl mov sarl cmpsb clc adc or xchg pop add scas adc adc jne shrl ret fisttpl (bad) repnz fsubrl pop shrb inc or or xchg (bad) cmc add movsl pop adc pop mov pop mov mov inc insb outsl push out add out xor add adc dec lcall jle xor (bad) add dec xchg xor and in mov mov jp inc push adc test add pop adc lcall mov or sub fwait push lock add fadds xchg test pop (bad) and sub pusha aaa cmp and imul lea adc pop cmc inc rclb movsb (bad) pusha jae push mov inc daa sti fisubl movsb mov xor xor ror lock bound cmc add std sub pushf sub or in popa xchg and stos mov les nop testb ret pop (bad) jo sti mov shrb jb sub int3 inc icebp mov subl mov cltd sbb add jbe cmp push js mov jnp sub adc stos fistpl sub insb xlat iret (bad) adc movsl js adc lods mov (bad) inc jns mov xchg and adc out inc cmovl add imul rolb inc xor dec sbb mov sub call push or lds (bad) lahf adc jl cmc pop xor jmp loopne lret inc nop rclb xorl mov and adc lock add sbb jne sub pusha cmp es js and add and dec cld jno add cmp add pop and mov aam aas inc inc push jns and cmp (bad) (bad) aad sarl decl mov adc xor mov daa and mov mov pusha push pop sbb sub adc mov test pop lods cwtl stos test pusha pusha push cmp and je js inc lret sbb adc or add xor mov clc enter dec (bad) adc pop inc and xor push aad xor aaa aam shlb mov push mov inc ss xchg mov cmp cmpsb fnop movsb pop sbb jecxz mov mov adc inc out mov sbb fnstenv push inc add pop jne rclb movsb sbb push sbb (bad) jo dec pop loopne shlb xor cli jle add pop ret xlat mov imul jns cwtl cmpl add outsl dec cltd jno ds or sarb inc jne mov adc addr16 sbb (bad) adc mov sbb mov loopne sub cmp add lds or inc imul (bad) dec inc xor or add mov clc nop pusha ds push in roll test xchg xchg inc sbb insb jmp fimull push adcb adc and mov xor and dec nop insl mov nop cwtl and jo imul aad push rcrb aaa dec mov (bad) hlt mov mov mov adc in sbb lock sbb daa mov nop hlt add orl add jg mov enter add ds mov dec daa cmp test pop (bad) rolb add pop hlt nop or addl cmp push movsb test and popa insb inc lret inc jg loopne dec add add push pop out and daa jp push rcr cwtl mov push (bad) lock stos jae lea call inc jb roll adc add adc or add and dec imul push mov in adc push sub and test call clc cmp pop add ficoml leave sbbb xor jbe sbb sub cmp pop shrb adc iret or mov and mov mov dec rclb push cmp cmp sbb sbb or sbb sub fcoms inc push push fistpl sbb inc sbb dec push xchg sub mov clc xor popa mov add (bad) xor sbb std bound in (bad) fcompl mov test or jb inc pop int inc add (bad) mov fsubrs xchg lods js pop movsb sbb push cmp cmp mov or popl and pop insb mov and dec aam push cmp or ficompl enter (bad) jg sbb aad mov pusha mov nop pop pop xchg mov mov pop dec dec sub xor push add cmpsl inc sub mov cmp inc lock movsb cwtl lret and push fcompl adc bound and or ret or sbb jl push mov push sahf fcoms and dec and cmpb pushf shl in popf sub js xchg pop mov mov out adc lock sbb outsl sahf stc add sub pop mov add pop mov push lock or cld stos js sbb inc loop or sbb in jle add xacquire dec and xchg cld adc int3 adc mov adc push sbb rolb sbb adc sub aas sbb or pop mov mov inc ja (bad) es sub movsb enter (bad) je add and in pushf mov jl xor call aam adc jno push mov insl and mov cmc rorl sbb fnstenv sbb insb xor mov push xchg (bad) pop jecxz fsubrp push mov mov nop popa cmp loopne and dec popa add lods pusha pop icebp push (bad) and inc sbb rcrb sbb mov daa pop xor pop daa std or insl int fmuls sub xchg es push push dec divl and insb in mov sub (bad) je sbb mov cmp sub (bad) xchg les sbb sub fmul adc xchg mov inc lods jg add inc jecxz sub xchg (bad) and daa pop and jb out inc leave call out mov roll sub test dec pop push rolb cltd lock adc jp cmpsb adcb sub sbb push js stos xchg xchg cmp cmp xor pusha mov xchg add mov or ret ljmp call rcrb aaa mov lock push cmp mov loopne add (bad) fwait or sbb lret insl xor fisttpll and pop (bad) add test fcoms rcr orb add sub or adc xchg jns enter movsl sub test fisttp pop add sub rcrb shrb cmp jmp sbb pop aad and lock cmpb jle jb push in adc cmp jge add (bad) cmp or mov jno adc (bad) cld in sbb push and sbb shll es mov mov add sub sub rcrb mov (bad) jnp xor and js pop into jno sub aaa (bad) xor pusha push and mov jp jae incb sarl jne,pt jno and add shrb add mov push xchg cmp sub xor add jnp mov fwait in and or movl lret mov lods nop add int in les std mov inc mov pop and loope sub stos ror sbb xchg cld add dec mov stos and mov sbb dec mov sbb or xor add daa inc cmp lods sbb mov adc pop pop sub rorl mov pop dec and inc and add mov bound hlt (bad) or xchg jb lret ja data16 std push fst and mov add jl jg orb add pop dec xor imul rcrb insl push lcall jb cmp imul push (bad) jne call push test mov sbb push daa xor sub mov movsb les lods adc lods andb stos lods pop mov inc pop inc insb pushf add dec xchg pop lret es add xchg jbe xor cmpb xlat pop test xchg fist sub sub clc and daa xor out lahf outsl lds das and insl jb aam sub pusha mov loope cmp sbb add call mov shrb es inc jo cmp sbbb and xchg xor xchg test dec sub stos sub sbb xor pusha mov dec push out mov std psrld sar pop mov bound cmp sub rclb or xchg and xor sahf cli js lret mov shrb add (bad) insl mov enter loop mov call push mov pop cld test inc bound loopne fwait loope int3 frstor jae or fistpll loopne and xor enter add test (bad) rcrb fdivs xchg lock push or movsb loopne loope push lods mov add or and and lret dec rorb fwait push outsb push jmp fcomp mov push int push lods inc shrb or xchg sbb stos xor add xchg xchg test clc mov sub cmp sub in out sbb imul mov sub or cmpsb ret lods lret and adc or mov int3 xchg inc sbb sub rorb dec std cmp cmpb xchg xchg mov aam dec pop add outsl mov andl pop jns add dec or jns lds test inc insl adc cmp sub push lock and sub fnstenv xor icebp and add fwait cmp xlat sub lret add fsts ficom pop lret mov inc jle and jbe pusha inc mov fcomp xor rcrb clc les add mov dec cmp stc aad inc call xchg (bad) xchg stos inc scas add dec addb push pop rolb and or inc enter sub sbb inc inc mov lock popa push leave and sahf stos fwait sbb test subb fdivrl add and sub or dec sub sbb or pop insl ja sbb push std in xor enter das dec and rorb cmp imulb lock clc sub outsl rcrb sub ficompl js xor adc in pop mov xor cmp push aad or mov add push mov (bad) int3 add loop push xchg xor insb lret sar xor cwtl add sbb add adc movsb sub add pop adc jno push sbb and jp sahf jnp mov add fidivrl cmp aad shrb jno and jl add mov insb cmp mov xchg add fcomps fsubrl sbb mov nop mov add push cmp roll loope add test fsts test or loopne and jae ljmp and jp in sub sub outsb xor repnz int3 sbb (bad) clc clc mov mov dec mov push insb mov sub mov adc ret mov rorb add iret ljmp (bad) js stos mov xchg or adc inc cld xor js cmp std mov adc and test mov cmp mov and rclb pop xor in pop add dec xchg and pop inc push fisttpl adc push add stos sub push dec cmp dec fldenv cmpl mov loopne lea or xchg shll mov dec dec xchg or sbb mov dec es movsb pusha out adc pop xchg inc mov popa pop pusha add pop or dec fs pop mov push mov dec std sbb sub in jne nop xchg or popa cld sti mov loope cld sub mov mov je or cmpsl clc mov sti add mov std adc lret cli nop dec adc and (bad) sti mov movsb inc mov add or std add js cli mov nop xchg xor sbb add dec sbb pop sbb fs inc sbb sbb add sbb (bad) jne out scas cmp in xor ja jnp mov and adc mov movsb ret mov xchg scas xchg add pushf pmaddwd jg call jbe mov adc pop inc repnz dec xor shlb cmp lds pop dec lret sub mov inc std mov roll in pop dec jnp xchg xchg or bswap out sub or add adc cmpsb or insl insb imul xor bound mov mov add in sarb cli sub adc enter ret xor lock pop pop jecxz inc test movsl call (bad) or dec pusha js push add cmovae ret stos mov fsubrs nop cmp pop dec jmp mov in (bad) or sarb push roll mov push mov lock xchg rep mov rcll fcomps rolb pop xor sbb mov rcl cmp jo add loope mov sub dec cld ror inc or push cltd cmp add xchg dec pop sahf int3 mov add in mov fcoms stc xchg push sub ja fcomps lock loopne std shlb xchg push mov clc add mov test push lods sbb pop andb popa shlb cmc cmp nop mov xchg lds enter jmp push sub jo push push ss add roll mov sbb jecxz data16 jbe xchg imul add mov (bad) in (bad) jb mov add les pop or add test rcl push ja movl sub cld mov add and sbb push ljmp out sarb popf rcll call rcll in mov mov cwtl xor and add scas dec sub mov and call dec pop pushf dec xchg add push pop dec out pop lods daa sub pop or int3 pop lods sarb jle movsb shr fdivl add xlat adc repz out add adc idivl jno movsl sub cli mov cmp add mov push dec add enter or cmp loop lods repz push adc in jmp cmp out shrl ljmp push incb xchg in in cmpsb pop push cwtl mov add dec aas add add or or stos mov jno add repz mov (bad) push daa add pop pop clc ror add cmp popf mov sbb dec sbb cmp mov lcall push nop xchg pop jmp mov inc dec pushf mov add jo add aad cmpsl xor add addr16 sbb ljmp sar jo cmp inc sbb add sbb rclb int3 push or cpuid mov sub fiadd setp rolb jo subl mov cmp push inc in insb or test xor int pop ss into pop add xor aas jb add mov add js xchg mov push bound ret jo mov xchg adc mov shl cmc mov mov push data16 sahf and adc and pop int3 stos verr sbb iret jle fmul add lcall gs loope adc addr16 xchg (bad) dec pop mov push call sub add fstpl nop outsl adc lds test test mov ds pop out sub (bad) adc in (bad) pop dec orb test sysexit loope movsl adc cmp push cmp pusha in rclb push test xchg jp popf out out add cmpsb inc in cwtl jo ret fdivrl mov push inc mov dec add test ret psadbw (bad) xchg xchg add (bad) jo int3 loop add arpl push (bad) test mov pop cwtl mov add add cli xor dec xor sub push adc fldenv sub lock pop mov pusha add hlt fwait stos or jp lahf add test test cli andb addr16 scas or sub lcall sbb xchg sub push or fs mov xchg rcrb jns add xabort sarb inc inc add dec adc add dec sahf imul and adc cli dec push sub int3 xchg jg push hlt iret mov mov xchg add mov dec or cmpsl inc add test mov push inc add dec or mov add push (bad) in loop lahf (bad) icebp pop add xor push loopne jl push int3 insb dec and jnp and or inc sub cs arpl adc or sbb movsb inc rcll or imul inc add and cli pop adcb outsl cmp mov stos fldt out iret inc mov xchg xchg fidivr mov push jnp out clc mov ja pop ret inc icebp pusha add cltd addr16 inc dec sub cld push cmp pushf adc je pop mov adc adc or pop and ljmp fisttpl loope pop sub out sub mov icebp xor jl cmp sub and scas inc fistl push vpsrld xchg fmulp add mov cmp or lret jo jnp cs stc dec push cmp fs fstpt (bad) dec jbe aas (bad) mov cmp jb loope lds sbbb fcmove sbb mov ret es js mov inc cmpsl (bad) je xor xlat jo dec inc add mov mov lock push stos dec enter mov mov pop enter push jge add sub jns dec jnp les (bad) imull or xor xchg push mov orl cwtl dec cmp add (bad) fstl out sub daa cmp popl sub sub pop andb jle sbb xor push mov sub jmp inc sub sbb fistpl inc loop pop and add cs push aam mov add je adc or pop add lcall or mov mov add adc or add pop sbb call sbb pop push sub push jno and lcall dec add aam xor fisubl sbb push shrb cld pop or insb pop ljmp test sbb fbstp aad push push imul jns (bad) mov xor mov or mov nop sub pop jg pusha cmp add (bad) (bad) loop fdivrl arpl bound cmp pop dec pop push add jg push cmp lret lods mov incl hlt mov js push (bad) leave dec add xchg test or sub cmp or add lods push mov or mov aad cmp sbb ret or mov sbb sbb (bad) mov mov sub xchg push mov in loope xor xor mov and jecxz jp mov lea enter jl clc sub push imul scas jge imul mov pop (bad) loopne ret sub pop lahf sbb mov (bad) jno mov dec test jae sbb in push or mov jle mov (bad) sbb ss js jl push push dec mov ja xor daa sbb and in cmp adc sbb fsubrl sub add adc inc inc je pusha pop xor jnp sbb push aas sub sub push mov sub and das or fbstp or sbbb or push or leave inc or mov adc pop in pop mov push sbb (bad) push dec imul xor (bad) xchg (bad) js cltd sbb adc por icebp inc adc arpl or and or xchg mov push repz mov and cwtl pop insl (bad) fwait add addb out adc in ljmp pop fcomp or jb call lock push xchg in out push jb lock (bad) sbb jo jmp fcmovbe cmp jae shl push ret xor jle add sbb or shrb adc sub sahf add ret loopne push bound xchg or loopne sbb mov pop add inc imull loopne jg nop push add scas in jl push or sbb cmp add xchg add dec (bad) and push aaa add movsb cmpl outsb and inc aam or jp scas clc pusha leave icebp mov inc or nop imul and add push stos lea je js sbb (bad) jno jo mov and and out add mov imul mov push les or loopne dec add mov or or mov mov or add dec es jl jge push or fbld loopne cli pusha add push std jle rcl adc cmp sub cmp and add and mov xor cmpsb std jo int3 es in sbb sub or sarb adc xchg xor jae push push xor sysexit loope sub test push int3 mov jae aam dec jns jo add jno inc xchg sbb pop push jg xor or rcpps stc and pop int and ficomp sti or nop mov push push sub fcomps mov gs cmpb in fstpl or pop mov call pop aam xor clc push ret xor jbe sub lret adc cltd adc bound and xchg sub xor leave mov nop or scas dec mov mov inc lock mov jle rcll sbb sbb sub int3 mov je fmuls mull loop sub and cs adcb xor jp aam ret test and fwait add sub fsubs jb sub and aam fcompl cmp decb lods cmp add fstps push ret or adcb push pop ja daa notl dec dec and inc bound push push add sub aad add and sbb dec jbe push lret add movsb push sub dec add lock jecxz push pusha inc and mov pop mov fdivrs sub pop fimull or and jbe std add cmp (bad) mov lret push pop jle xor je pop mov pop sub dec and xchg jle ds fmul and push lods push add jecxz add and mov dec pop add adc rcl fcomp xchg pop lds jecxz add dec fs lcall inc aas pop jns lods cmp scas imul pop insb add xor fdivrl and lods add mov sbb out test data16 rclb sbb dec roll movsb cmp ds push adc mov mov mov sub mov jb enter push lods lds lock jne sbb scas fimull add imul jns jne add cmpsb mov and pop fsubr mov push cmp add mov in js dec push lods mov rcll faddl push and pminub je aaa inc in in ret (bad) cld mov movsb mov cwtl jecxz cltd test xchg cmpsl shr xchg lods add xorl mov pusha stos imul cmp push shr (bad) adc push (bad) lret int3 je jl cwtl or or dec (bad) or int lahf cld movsl mov lods xor add pop outsl or jmp lds mov repnz xchg xor and sbb inc jmp jecxz add addr16 stc loop enter mov lods jo push push xchg inc lods sti mov pop and xorl je pop shrl cs test (bad) jbe mov fiadd sub sub or popl icebp push sbb push add mov add pop jecxz cmp push mov andb fcoml xchg jo in sahf inc adc clc jo sbb add push lcall or fadds pop fist movsb fidivr push xchg push add test xchg xorb or les loopne inc mov ficomp push xorl fdivs jl xchg fdiv inc pop mov (bad) (bad) ja mov sbb loope jg test orb (bad) jo adcb ja mov cmp dec sub add inc mov rolb xor loop cmp cmpsb lea push mov sub and inc pop lcall lods sub les call xor popa or pop (bad) inc fadds pusha sub inc fdivrs setb pop popa scas sbb (bad) push shll orb push add test mov push jle test and punpckldq jb lea enter mov insb popa data16 xchg lods pop imul push push lret push hlt xchg sub (bad) jne adc sub addps xchg sub sbb aaa andl icebp in call add jl ret push dec push add xorl fwait xchg mov stos xor sub pop fist lcall xor adc jle idivl pop mov fstp sub jmp pop sub mov es cwtl popf jl jbe mov in sbb sbb loope jge mov aad lcall pushf ja test pushf sbb mov and xchg (bad) mov fwait xor mov sahf xor push xor push add cltd cwtl cli jp sub add cmc pop ss aaa bound sub mov fiadd pusha adc mov out jecxz push mov (bad) pop rep sbb xchg jo jmp sarb loope and push je mov loopne add pop adc std add jbe add shrl push pop scas pop cmp sbb into pop ret xlat in test stc sbb or dec mov inc pop ss mov and out sbb (bad) mov and mov mov and lret sub je inc mov xor lea int3 subb sti sbb lock lds out and jo cltd pop sarb scas lds ficompl mov add mov push into roll aam add adc push add inc jg mov rolb xchg mov (bad) lock clc sub ret and adc fwait push fs nop push call mov mov lret mov cwtl test lods pushf lahf gs loopne xor xchg (bad) jnp push adc or xor sbb js sbb adc and cmp xchg in xorl jnp add popa cli mov pusha or cmp cwtl lds pop cltd inc xor push nop je or cmp dec inc xchg add lods or fwait scas add lods into mov sub fsubr and add shll scas (bad) (bad) jae stos push and clc add mov mov insb pop sarl les cmp xorl enter repnz dec add data16 aas and sub test push nop ret fdivp mov or pop aas fsubrl adc jbe mov xchg dec inc cwtl sbb or or adc sub into push xchg lahf cmp pusha fist shll and (bad) mov ja xor nop inc ror or cld mov mov fdivs push test mov in pop jnp xor imul cmp pop and insl ficomp add pop mov loopne mov push cli jnp cmpsb cmpsb fsts lods xor cmp add mov subb mov (bad) stc rcl add aad data16 in addb sbb (bad) nop js mov lods mov or cmp cmc insb add dec mov push test adc inc ds and (bad) popf aad push xor or stos inc and sub hlt movsb add fdivrs test mov mov mov sbb or inc aam (bad) push push sbbl test mov jb and xor jge or mov sbb xor sbb cmp lods push and (bad) out pop in stc mov or add mov jb aas mov add scas dec dec mov mov mov frstor dec cmpsb or cmc enter xor mov mov sahf pop xchg push lock test fdivrs sub call mov je lods add rcr fwait or or sub rolb call add xorl push xor inc orl sub cld ret push mov push mov lcall in decb adc cwtl sub mov cmp or jl push insb push bswap out sub or les xchg call adc nop adc or push pop xchg hlt rolb push out adc mov sbb xchg dec fdivrp sbbb mov add sbb adcl andb mov mov jb nop dec pop jno inc push in jnp add movsl cwtl mov dec pusha mov mov push add push lret enter push ds jmp add mov and xor lahf pop sub or cmp jo test push xchg inc push pushf or or test jl or imul hlt dec sahf mov mov and pop adc mov outsb out js jno dec push hlt sub xchg repnz enter popa loopne test into push jmp (bad) xchg adc dec les xchg or push je sub push and movl fcom test sbb xor outsb xchg call popf test in add jmp push or xor aad pusha iret xor mov mov cld ja add aaa mov mov xor inc push add repz xlat js add loopne jb int3 add cmp push mov or and fiadd pop cmp or shr not iret test add adc fild rol pop lahf push stos sub popa jno sti adc xor scas adc inc xor cmpsl or andl sahf jg and adcb movsb pop mov cwtl mov xchg stos mov nop mov bound mov ss or lretw inc sbb fdivr and mov sub loope push es mov mov mov cwtl (bad) mov out fdivs enter adc enter inc cmp (bad) mov aam adc aam cmp cmp adc cmp xchg ds cvtps2pd outsb lea adc or sbb pop data16 nop out add mov fwait push xor and ljmp insl adc adc dec addb inc lea mov lret add dec mov ficoml pusha imul aam add cmp or pop (bad) mov lods mov stc sbb push mov xorb dec pusha ss or xchg ds jg mov push jl (bad) add sbb cltd out inc int3 xchg fwait inc jae rorb add in and dec sub xchg aam arpl int3 test popf sub add in outsl fidivrl mov dec js xor dec lock mov adcl and jb mov cmpsb adc add jle push loop jne or adc mov int test adc fstpt into rolb int3 or fsub dec jle lods inc add emms push test cmp pop xchg sarl inc inc movsl rcl hlt inc inc adcb mov out pop cmp mov (bad) and mov in popa or ss sub lcall in dec sbb mov (bad) mov mov push add cs out sbb mov insb ljmp rorl out jl aam mov jae push add lock ljmp jnp add xlat arpl jns ret add inc sbb dec aad jo xor pusha testb popa xor sahf mov addl mov pusha aam shll adc mov push pusha add stos cmp push fs cmp push es xchg call sbb addr16 enter push push arpl adc mov pop pop pop andb xchg loopne cmp pop add sub popa sub stos fildl gs cmp xor ss mov jmp dec loopne mov fsts lret sub inc xor sbb rolb add adc jge ljmp addr16 mov hlt push sbb cwtl inc jle add cmp lea push sahf mov movsl shll out out insl iret or inc aam test nop test mov movsb lret mov xor sbbb into adc cmp mov and sahf add or add push or jae popf inc call loope add pusha (bad) insb out out pop push adcb push movsb test add clc cltd cld std icebp inc ficom or out or sub mov dec mov mov inc gs inc jmp push lret cmp add (bad) xor xlat mov cld sub aam addr16 js pop pushf or jns xor mov sbb dec and ss insb aas and (bad) fsubrs xor adc fnsave push enter add or adc sub test lcall in movsl aad repnz adc (bad) inc add and mov jns adcb je cld jle inc adc out nop inc inc inc rcrb enter bound loopne sbb cmp insb or dec xor mov mov adc inc add ljmp sub int3 pop add cmp scas ljmp push sub xor aad jl mov and test mov adc sbb es inc hlt cmp push les mov ljmp dec loopne orb xchg imull adc js sub mulb push enter push sti lds (bad) cmp jns or jg popl fs and sahf fnop inc adc rcrb in sub mov cmp adc aam xchg cmp jae xchg leavew sbb or mov jl hlt pusha sarb xor out jecxz or js ss inc call mov and sbb mov push xor test or cli insl mov popa pop js mov ss sub jno jae ss fcomps add lock xchg loope repnz xchg int3 dec or jge call xchg fcoms imul cmp (bad) ret mov add and (bad) mov adc ss sbb cmc mov mov mov adc mov sbb in xor or xchg cli pop pop cmp adc imul fcoms xor nop js sub pop (bad) xchg and inc inc or mov nop xchg rolb add mov fs popf and ds andl inc sbb adc mov js inc icebp in rorb add jmp pop dec add jge mov enter mov pop cmp ret loopne lahf lret xchg test mov rcrl adc call xorl mov mov cmp rorb sbb dec call mov subb adc xchg pop gs ficom pop ret pop mov outsb xor ds dec add and test cmp ss dec faddl xor outsb and jl xchg hlt roll es cmpsl pop rorl pusha sbb enter sbb cmpl add push and dec (bad) nop addr16 cmpsb or and mov daa (bad) fsubl dec inc push xor mov dec repnz add or paddusw enter or xor mov and andb xor push adc add mov sti pop or jl push (bad) insb mov fsubrl and push lahf and xchg pop xchg mov gs pop adc adc rorb adc aam mov outsb shlb out dec imul loop xchg add das cld iret add insl pop xchg sub iret cmp pop add xchg addb jns mov xchg push pusha mov add in or iret fs adc xchg loop pop inc in mov mov push xchg imul cmp add pusha push ljmp dec mov pusha xchg sbb icebp in mov cmp dec lods push scas mov mov jnp push push imull es or push and add into repz in rorb ja or fwait je call (bad) sbb dec jle adc xchg cmp imul push xchg add mov sbb mov sbbb adc add sbb hlt or (bad) mov push xor adc das sbb sub push loop mov out imull inc pop stc pop cmp sbb loop inc xor jo sbb xor popl iret push cmp pusha push xor arpl add loop mov inc add sub clc or dec inc test pusha inc js leave sbb fsubs rcr jno sbbl icebp jo and lods mov in int dec fiadd or aaa or xor pushf popf call lds clc pop or hlt hlt xchg push mov and icebp inc pusha or in aam cmp loop add push ss ret xchg and jl xor inc mov loopne repnz and add and add mov mov adc in lea (bad) mov sub imull movsb cmpsb sub dec cmp dec (bad) rolb jl jns out add cmpsl jmp lods xor add pop mov inc subb pop (bad) xchg mov mov sub testb ss fwait jmp push mov mov loop mov int loopne push sub nop add in inc mov cmp pusha into fsubrs fmull push add (bad) aam jp loopne add xchg or or jno adcl mov call (bad) jle aam shrl mov decl (bad) xor mov mov ljmp push mov sbb pop push add sbb (bad) ret mov lahf sbb cmp mov push mov pop sub test test adc lock cli jge fdivr add mov imul stos pop sub or mov sub cmp pop fistpll inc or inc inc dec push pop ficompl icebp (bad) mov mov lock jb pop (bad) int3 push mov mov cmp lods add dec ret in xchg mov cmp pop push cmpsb stos ds test push cmp add daa cmp iret or test arpl add lock push add mov shl adc inc cli (bad) aas ljmp scas xor add (bad) stos icebp mov push pop mov orb xchg mov mov sub mov ds test adc dec (bad) rolb sbb add lock fstl sbb inc push cmp xchg mov adc fcoml aaa mov inc push scas push popf sub add ljmp or pop jo add loopne test fwait mov loopne add adc cmp ja dec pop add shrb push ss mov movsb or pop mov nop rolb fiaddl test das es cs fcomi (bad) lock or loope,pt mov cmp hlt mov xchg fistl sahf jae adc xor in and ds sub and sahf push push out push das clc adc fcomps pop or xorl ss pusha sbb inc addb sbb inc adc enter xchg fmuls mov pop cmp mov js loop inc aas or adcb xor sub push scas rorl mov (bad) dec loop enter dec cmp jl add pusha xchg (bad) xor (bad) mov in jb cmpsb or inc lock add icebp in fbstp outsb lods cwtl pushf mov jp add mov shlb mov lock add lahf mov ds aam data16 ret clc sub push inc adc xchg and loope sub jecxz enter xor frstor les xchg cmp jbe jl scas dec add aad mov movsb mov or ret mov (bad) mov adc inc out jecxz cmp int sub adc adc push leave add xchg mov roll add sbb lock in cmpsl mov js lahf sub xlat push pop push jo sbb cmp pop push and pop (bad) xor jo fs int xorl adc rol cmc mov pop (bad) mov aam inc lret lahf pop cld add adc cmpsl xchg add inc shrl pop dec cld jecxz loopne (bad) adc cmp and (bad) xor adc stos lcall sbb sub rorb fs xor or mov cs jle xchg cld (bad) loopne xchg mov adc popa sbb or xchg mov cmp (bad) fs and divl pusha inc inc add insb push mov mov pop add pop mov push mov nop aam js xchg adcl fldt repz mov adc mov jecxz pop cmp mov inc hlt jg xor inc jo lret (bad) push lods gs xor and xor rcll sti pop dec sbb (bad) stos add xchg (bad) xlat enter iret and mov inc (bad) sub je push rorl jno pusha cmpsb sbbb movsl and pusha xorb pop sbb mov lcall mov sbb pop gs int fistp pusha fs mov push jae incl or es ss mull shrl movb daa inc addr16 dec push leave cmp clc movsb or fwait inc subl push jl fs ss adc lods pop aam sub cmp add pop dec inc cwtl in or hlt xor pop test call cmp mov sbbl adc inc icebp dec xchg cmp arpl mov push orb push push dec into lds fadds icebp test cwtl int out fidivrl mov test xchg xchg add lods push add test fmuls out adc xchg mov setno push outsb cmp dec and or or and dec xor pop sbb rclb sub adc arpl stc incl xlat movaps push adc inc xchg adcl loopne sub (bad) mov pushf loope aaa aas out cwtl pop fidivr xorb shlb rorb pusha icebp cmp cmp sbb in xchg cltd push or sub jmp (bad) add jns mov iret cmpsl movb xor adc push cltd or test cmp add cwtl out add das inc sub add xchg outsl (bad) xor add adc sbb adc arpl imul pop xchg out icebp add or test sub add push xor (bad) int3 adc inc pop mov push pushf or xchg pop adc rolb add (bad) mov add sub mov sbb test arpl sbb sbbl mov dec cmp ljmp andb cmp orb or jge sub xlat push or mov add mov fs and jle inc adc (bad) fistpl dec (bad) xor (bad) cmpsb xor shlb rcll ret sub data16 pop jg sub dec jnp cwtl add xor push lock xchg add iret lahf mov add ret ljmp xor mov fimul mov xchg xor test cld add dec adc add add daa out push or sbb xchg adc lret xchg sub lahf js or das push lcall cmp and push call fs cmp and cli (bad) jo stos push fdivrs and imul mov sub sbb add sbb pop test addb out insb dec in adc xor and xchg mov pusha push inc or mov push inc pushf shlb jecxz push push xor into xchg js das pop pop sbbb test adc mov lds mov or icebp enter mov arpl in mov dec pop ljmp adc in and (bad) lock repnz mov (bad) bnd cs cwtl je or or push (bad) push mov sti mov xchg in loopne mov str pop jo out cmp cmp cmp shr movsb mov add xchg xchg xchg inc cmp jb dec cwtl lods and push adc jb in test pusha xchg push cltd jmp adc icebp jl jp fdivrl xor pushf addb mov xchg mov dec adc mov and jb cs or mov pop imul push jle les adc imul dec xchg in xor adc add add es sub pusha idivb insb mov or shll lods scas frstor insl addl sub add int es fild jae jle lods adc cmp sti not inc jmp pusha mov lret loope sbb cwtl (bad) dec je pop adcb jecxz mov enter outsb (bad) dec aaa adc xchg push xor popa test and emms pop enter or jge fadds clc addl or cmpsl push push andb mov add cwtl pop add (bad) mov sub aad mov push xor (bad) jl mov jle call (bad) xchg loope xchg add and in xor jmp lds cmp xlat ret push add arpl call cli xor mov pop jb xchg cwtl inc stc adc add (bad) xlat (bad) mov test jnp or stos cmpsb lret mov push lcall xor clc dec or cwtl bound (bad) mov std out add fcoms adc shr xor lret arpl inc fimull pop test inc rorb int aad loopne jp xchg icebp adc sbb das add lea pusha adc push rclb adc pusha pop xchg mov or ljmp add and mov clc insl adc add cmp add sbb mov jg cld mov add int3 std enter sub outsb inc aaa lock rcll xor xor (bad) fmull dec popf inc push mov or (bad) nop test inc int3 sysenter or lret adc ss fisub jge stos xchg in fwait andl mov fsubrs cmp mov add in sub dec xchg push cld and test mov push xchg mov mov cmpsb psraw sub je cltd and mov xchg inc sbb sub imul in mov jno sbb insl mov jb add bound pop cmpsl cmp aaa leave mov add fs imul push (bad) int3 sti pop int3 (bad) aaa fsubs pushf lret jo adc hlt add fidivl or enter int3 xchg lea test (bad) bound mov push mov or jbe les mov arpl (bad) cmp jae push mov insb mov and je sbb pop mov (bad) (bad) or out ja in jg,pn je mov outsl cmp push mov loopne adc rorl push scas cvttps2pi int3 jl or or add sahf cltd loopne xchg loopne fimull cld adc cmc add adc iret inc mov loopne fwait add cltd in mov jns add addr16 scas push and push lods int mov xor push jb adc xchg jbe jb push lea fadd adc ret pop mov add addl mov lds mov and push fsubl sub pop pusha test push les cmp scas cmc pusha adc or cmp es mov fwait js push mov lcall fucom push es hlt daa fmulp fnstcw ss and jo,pt pop enter orb or adc rclb les cmpsb xchg and test and es cmp and mov adc xrelease add mov xor test cwtl sub jmp jmp mov cmpb sub int3 push out mov shlb xor cs int3 lods leave fsubrs push xchg fs inc dec adc adc sbb pop std push mov lods sbb dec add daa mov and aam jmp push pop enter nop fdivs je push dec cmp mov das fnstenv and rclb pop mov std and lods mov and popa fnstenv jmp sub xor pop inc push in lea or push insl sti pusha adc in scas (bad) lahf pop js les loopne aad mov cld sahf or fisttpll xor add out xchg sbb jecxz popa shlb in nop sub or sbb inc ljmp pop test pop mov or (bad) lock outsb dec and pop pushf adc and sbb ud1 mov inc and add (bad) movsl js mov or adc adc push add adc popf mov or pop push mov imul mov mov inc (bad) fdivs mov mov pop mov fdivrs cmp test icebp (bad) xchg sbb test mov dec xor loopne add cvtps2pd jns cmpl int3 and push adc push enter insb mov xorl sbbb movl adc xchg mov cmp pop les or jne fwait adc testl mov push mov cwtl es je jae push add idivb (bad) mov (bad) repz call popf insb or add dec push clc inc shrb jne inc jmp add test cltd rolb mov jb xor fidivl inc and aam dec jl call in fwait icebp dec push je shr fadds lret add scas add adcl add aam pushf and aam xchg dec lods or mov lret ja rorl sub lret clc fldenv lods pop add dec pop mov sbb pop in jge mov jo jmp or aad dec xchg mov outsb adcl lds dec mov adc add inc jb sbb pop add es nop dec cmp jnp loopne mov loopne mov or add mov sbb pop push xor pop inc mov mov mov xchg inc test cmp js popf inc sbb and (bad) xchg cmp inc or enter push and pop mov adc mov test xorb rcrl loopne pop jl add mov mov (bad) insl cmp pop jg mov add sahf in out rol jno mov (bad) jl dec xchg movaps cld int3 adc lods add out push sbb in dec roll incl xchg int3 xchg stos adc rolb enter loope cmpl inc sbb and push dec add xchg clc aam mov insb sub addb pusha sbb push mov inc je inc (bad) in xor jo add and mov push lea jne sub push clc loopne or pop xchg mov pop jno and clc adc setae mov xor out cmp pop loopne push mov mov push adc into ficompl sub jb scas or (bad) (bad) (bad) rorl and xchg test push and mov jns mov ds adc mov cmpsl ja xchg push int call mov fs les mov jl mov mov pop mov pop adc and push sbb mov outsb sbb fmul mov and (bad) dec fdiv add je movsb inc insb and shrb inc and call popf adc pop and sub cs insb adc jae xor push cmpsl mov and inc fisubl fiadd mov in ret fstpl lret fs push fdivr inc add add cs ret cmp push inc or push rolb mov lds jns jb and adcl adc cmp lds lea pusha pop lahf test cs inc sub add push mov subl push sbb jecxz or sbb out scas icebp sub je add xchg in test mov jo cmpsb add test cld cs dec enter inc dec cld ja cli pop (bad) xor adc pop cld loop adc aad and pusha push push mov dec mov push xchg leave enter or mov insl adc jecxz mov icebp mov insl mov add add sarl loope ds stos cs fs add inc mov inc cwtl inc adc mov popf mov xor mov adc mov push inc dec pop insb add inc mov sahf mov and leave push insb dec mov or mov mov mov push cmpsb xchg inc jo lods outsb or pop das pop pop cs fmuls daa cmp subb sub rorl mov shr xor cmp or sti xchg lods xor adc inc sub fisttpll aas outsl adc and jmp lock js adc jb je xlat or or or prefetch popa push inc xchg insb jno inc and jecxz push push bound pop mov ret sbbb mov add mov movsb stc xlat inc xor gs add cmovp dec sub out pop lea and insl mulb adc fistl add push fimull add enter xchg push mov or call int3 or movsb int es jg add loopne (bad) jo add adc jb or lret add mov adc pop cmp push les add add cmp mov pop jb sub ror mov adc nop sbb or stos dec cmp inc jno xor lock dec sbbb icebp pushf shlb push scas mov mov mov add nop scas out add js ljmp xchg aas jo loopne sbb adc dec push fidivl lahf rcrl sbb push push shl pop and push into (bad) xor ret ret xchg sbb rcrl scas ret test or scas push add mov nop and cmp inc test adc xchg mov adc sub dec rcl add sarb arpl cld add ret pop call loope adc jo pop adc sbb add movsl xor cwtl xor pop or xlat fs and and and andb lods mov xor xor add inc and inc and dec movsb and adc mov add daa gs mov cmpb lods cltd test scas sub sub inc icebp fdivs adc or dec add mov ficom leave lock gs dec mov jb iret nop leave in movl pusha sub mov xchg sbb loopne leave push push leave cld mov jl idivb and pop xchg rcrb stos jle icebp push xchg movsb or (bad) int3 arpl shrl dec jo in dec cmp xor rcll inc add or sbbb mov fildl add cmc add (bad) mov and or into add (bad) out ror mov dec clc es js push repnz pop scas sbb mov lock pop mov add push imul push popf xor jne cwtl cmp ret adc pop les ficomp test inc or aad enter sbb scas out addl pop test or cmp in fmuls adc add bound mov cmp add aad out adc add fdivl cmp inc cltd inc jmp dec mov push jne mov cld ss add or dec shrb cmp inc daa sbb (bad) mov stos ds cmp or push and mov lds dec test pushf rolb pop xchg loopne push sarb inc nop insb push xorb dec jb or jno sub call mov cmp adc rclb test mov mov add ret cmp sbb add mov or xchg cmp mov push faddl jns movsl push not out (bad) pusha add mov test dec (bad) mov mov cld cmpsb mov nop and dec stos js xor and ja ret fwait in adc lock jo xor add jg repz sahf cmp cmp mov jo and mov in ja add rorb add fstpt roll sahf add mov js jo and mov test pop fcom inc add jge pusha call mov sbb orb cld pop cmp flds not add push and add outsl add cmpsl xor mov (bad) imul push mov (bad) push fs xchg inc mov add sbbl fsubp mov test pop js dec xor add and cmp inc in or pusha test sub jmp and js hlt xlat out adc or ret mov insb test loope pop inc enter scas js add popa sbb dec mov rcll jno stc lods adc mov push arpl insb sbbl or and in mov and adc les add jns sub sbb mov add sbb jl mov in adcl mov add jb cwtl mov xchg lcall push sarb lahf sbb cmp mov jno add adc ja (bad) icebp xor rcll adc xchg in xchg lahf pop push push mov jl add nop pop scas xor fdivs pop adc dec mov sub stos sbb or (bad) xor dec or dec pusha inc out add fs mov adc xor sahf enter mov inc sub add dec sub outsb dec inc jne sub xchg lcall jmp scas push call push int bound mov mov jo ljmp and xchg mov pop xchg lods inc ret adc xchg js or mov adc pop out add loope push add jns adcb int3 push clc jne sub mov mov add stc push or repnz dec inc mov rcll popf push add ret sbb fmul cs loopne outsl in lcall rcrb orb adc add mov push xlat int cwtl clc add outsl mov icebp push inc xchg or xchg inc jo (bad) push and mov and or insl sbb loope add test sub lock sarb or pushf mov inc xchg mov fcmovnb pop xchg je xor and ret and cwtl aas jb gs outsb inc into fmuls int inc int3 mov add fs sub sbb dec add scas ret push insb add xchg sti mov fdiv or pop stc mov sub cli cmpsl dec xor mov pop dec and pop int sub pushl adc (bad) lret and lds jb add ret jl jb je in out push adc sub mov xor dec jns adc sbb mov loopne les es pop test sbb mov aam enter xchg enter dec and xchg push fs mov or nop (bad) dec or sub push mov mov fs nop mov rclb loopne pop xchg add and jo mov inc adc int3 insb xor pusha add clc lods or scas movsb jae mov sbb jmp push pop adc scas cmp adc (bad) push mov pop xchg jae mov pop mov ja xor dec cmpsb jg add in mov add and test add call sahf adc xor cmovo adc or rolb and out imul dec popf pop add (bad) mov dec dec (bad) xor adc shll mov mov add push mov and xorl roll mov pusha xchg mov inc dec jb sub das loope test shlb xlat daa inc mov mov les cld jno lock add adc push ss push jns mov xchg cmp inc bnd lods jle add jmp mov test pushf add stos aam and daa jle xor scas or ja jge xor mov lods or std lods inc and pop sbb ja mov fstps repz pop pop iret pusha stos xorl clc lret xchg push int3 xchg adc mov pop pop mov mov fwait jg add std inc xchg cmpsl xchg dec mov sbb outsb mov out push or repz pop test adc enter rcrb pusha outsb fldenv mov sub adc mov aas dec jb add into sub movl mov xlat js sbb adc add jno xchg or add sbb mov adc fadds test (bad) mov arpl cmp mov push xchg adc mov adc or add test inc inc mov js out dec mov (bad) cltd add sbbb cwtl mov xchg push (bad) inc incb or (bad) test xor inc jne add fldenv mov jbe xor sbb push fsubl inc cmp arpl xchg jp mov mov mov stos or and add push adc mov push xchg or xchg mov les inc or cld pop inc cmp cltd cmp inc icebp or inc std inc adc mov scas jo or inc dec xchg (bad) int3 add repz push pop jno sub adc and sbb inc data16 jb movsb adc xor out sbb mov pop cld push mov gs cmp jne outsl xor mov mov push xchg cmpb loopne push mov jbe push rolb push loope (bad) xchg adc pusha mov add fstps inc xchg pop pushl sbb xor xor stc and sub aad inc dec (bad) lock mov pop or (bad) mov fs outsl inc and pop dec andl dec into add cmp fdiv push mov pop (bad) jne push cmp pop (bad) inc adc mov and ret sub xor loopne out out mov mov xor or adc adc mov sub popa loop xchg mov lret add mov sub mov fild jmp subl movsl add (bad) nop add mov jnp (bad) lock shrb adc lret cltd mov adc add hlt sbb jnp push sub in push pop add pushf scas in es xor xchg adc inc call pop shll lret mov push sbb push xchg addl cltd inc sbb dec in dec sub jns xlat mov xchg shlb cld or xchg jl lea aas inc mov psubusw cmp mov lcall ljmp mov sub pushf adc sub js jle test cmp jbe test pusha mov xor rcr ds mov or and mov jno lea jnp lock lds rcll inc ret lds add mov dec inc test pusha pop dec push js sbb and and js xchg adc (bad) push mov lea fisubr push mov lret add lcall enter popa or cwtl lock xchg (bad) push inc fdivl (bad) mov pop fildl cmpsl inc les add inc std test mov mov mov or js and rolb xor inc and sbb pusha jl mov add adc sub xor mov and shrb pop leave sarb test test or cltd idiv lods xor sbb mov mov repnz popl mov loope test mov add int3 insl repz or pop repnz mov les add dec cld xchg (bad) or outsl sbb adc add mov mov std mov sub sbb add lea pop mov add adc mov jmp fs (bad) fidiv pusha inc push sub ljmp clc int3 xor shrl sub fcoml add ret mov jo into flds mov imul jne pop pop xchg xchg rorl xchg pop add cli aad pusha imul lret xchg mov js pop sub cwtl mov pop pop cmp aad inc in (bad) cltd lods mov (bad) shrb mov sbb xchg or repz sbb (bad) or lret adc mov cld mov sub push mov add inc icebp xor sbb dec lcall sbb mov aad pusha or mov sub aas or adc inc inc mov out adc loope int3 add sub push and arpl out mov mov xlat sub xor in push icebp (bad) pusha and and inc xchg mov mov fs mov sbb movsl lock and daa js data16 and add repnz xchg jge push daa dec (bad) (bad) repz adc shl movsl cld sbb out es or add es bnd sbb out cmpsl and fisttpl pushf mov xchg test jb iret pusha stc mov xor inc mov push add push lret out cltd bound es add adc pusha andb (bad) pop pop mov inc inc sbb inc jge lcall mov in out mov cwtl add lret jg stos or repz jmp or dec mov into xchg mov add (bad) cmp js add inc ljmp mov shrb jbe arpl inc mov push stos int3 add dec inc jo les pop push rolb jns cmpsl adc and jns test popa mov hlt in and in cmp jp pop xchg jl pop add std pop add and sbb rclb xchg arpl js xor mov jl jne xor add pop fs in jo add sbb movsl or sub dec nop in jno sub mov cmp or mov xor aam mov sbb sub (bad) xor push inc xor add imul push jl adc adc cltd add leave dec mov test jne fwait add ret popf cmc xchg push inc dec test movups les dec in ret pusha outsb out mov test lea nop cld cmpsb mov stc pusha hlt orl mov fcmovnbe sub adc add outsb add push xchg push ret fcomi fmul mov pop cmc and aad hlt add or out pop fsubs js mov xor rolb jae sbb hlt jb push (bad) mov xor test insl jp lds or push shrl push in das or pop (bad) sbb enter mov cmp cmpsb inc sbb lret adc add int3 data16 xor or addb xor (bad) pop sti loope (bad) (bad) xor test add xchg insl add jns ja aaa loopne pusha and lock nop cmp mov int add movsl call repz ret add out add and pop jo push mov add mov rclb adc mov popa fxch ret push mov loope jne call add aam pop loopne pusha es in push jno pop dec les xor dec pusha and and lret push lods negb sbb dec loopnew dec data16 shlb mov lock cmp int3 xor andb inc ret pusha aas mov push inc int3 ficoml inc lods mov adc mov add inc and xor add loop xor and cmp mov dec fs jo xlat inc mov in jb xor test pop mov inc call adc or inc in pusha ljmp xchg cmp cmp mov pop add inc mov outsb xchg enter sub mov add bound loope jns push les xor sahf dec xchg push int3 adc dec clc fldenv mov jo and sub push pusha add push push add shlb jo shrb leave fwait add adc test push scas and add test push pusha les add adc or sbb mov cwtl mov adc jb mov inc xchg int3 dec pop aam cmp and mov mov das lret xor xor mov add pop push adc jl xchg pusha push sbb add add into mov call movsb bound xchg push mov or out (bad) mov mov mov in cmpsl push jae adc js adc negl jno mov ret pusha dec test xchg or (bad) dec jo iret and cltd push out jge or sub (bad) mov mov and or xlat mov mov sbb sbb jl or data16 test pusha jne jge mov jns es je jns (bad) push sbb push mov (bad) jae lret xor cmpsb (bad) push push jmp scas lods mov pusha pusha mov xchg add xor ljmp xor jo sub dec test ss lahf jo inc xchg sbb mov (bad) cmp jno xchg lret shrl jl or mov in adcb mov sti fnstenv add mov fsubr sbb lea add mov mov test mov int3 mov xchg je adc add jno and xor js mov nop arpl xchg pop mov mov call ds add and xor sbb or mov cmp inc adc sbbb and sbb add adc outsb add mov jmp add jb mov enter xchg mov xchg pop loopne add lock inc (bad) std mov inc jge loopne or adc int3 test and nop mov xchg pushf xor clc inc or rorb imul shrl mov loope cmp in and mov mov stos mov sbb enter jns push inc add jo pop je (bad) mov jmp xchg call sbb shlb adc sar (bad) stos push sub sbb (bad) jb shrb push add push jge push add int fmul stos jl add je inc lods pop jp xor jo jge pop cmp popa pop sarl push pusha in adc inc xor pop loopne pop jo or aas stos or add pusha xchg roll bound sub jge lock sbb push lods ret sarl mov enter lret or dec sbb sub pushf add bound add cmc inc sar xchg add dec jge or jno cld das add push sub fadd fmull and and enter adc pusha scas dec add int3 jecxz sbb mov popf mov imul orb mov loopne out mov scas (bad) jns clc add push add stos cwtl out xchg js cltd add pusha lods inc lret sbb out xor lfs mov mov clc cmc daa and enter in dec xchg cmp sub cltd sbb pop sbb or cwtl mov addb ljmp int hlt or out ret mov fidivl (bad) popa add icebp mov dec pusha jp add bound mov fwait cmp xor int3 inc and sub sub dec or xchg pop sarb icebp xor call xor mov mov cmpb test mov lods lea jl hlt xchg mov fist pop jb fstpl iret jnp rcl es push mov sbb jo scas das movsl add inc jo push xor xchg jg push cmc or rolb pushf add leave mov test (bad) jmp and push or inc sub and sub add xor lea mov in movsl sub movsl mov pushf push add pop inc or xor add mov add ja in rorl push xor xchg push cltd push or lods jnp push mov push adc cmp hlt mov add rol mov out inc cmp sbb push mov push lock pop fadds fidivl xchg data16 imul add adc loope mov pop sbb ret adc cmp pusha adc pop repz xchg and cmpsl push fs psadbw mov fisttp cmp mov mov xchg inc cld (bad) add add stos rcrb adc rcrb and cmp mov cmp sub push dec adc push sti cmpb loopne xor rorb (bad) cmp pop add js sti xor aam fildl xor sbb inc pop cmp stos mov jmp adc enter cwtl cli fcompp pushf jmp test cmpsl xor add loop or xor jg in lods inc in or enter cmp lcall test aaa pop mov mov pop cmpsl push and ja out mov lds int jecxz sbb jo insb xchg cmp ret push or hlt mov dec sarb pop mov lods add jecxz mov push inc mov lcall push mov push push jmp dec movntq dec shrb mov ret mov fdivrl cld in loope jns inc dec xchg add push pop add adc movaps push pop ds mulb in ja aad loope data16 cmp adc out push push add mov add mov cmpl shr (bad) inc pop add dec rolb push mov jnp dec hlt inc push rorl mov sbb sub mov add arpl fmulp or add jbe sti and hlt int (bad) lock and and into sahf or push add js inc popa call and adc mov (bad) (bad) xor add in sbb test test sbb pop ljmp dec mov mov add es ret add repnz sbb mov dec cmp lods push xor cmp sub or roll sbb out call and mov mov mov push dec cmp add sbb push push loopne push cli add xchg mov mov rcrb dec aam and mov sbbb mov sahf sarb xor pop loop or test lods ds pop xor push xor cwtl mov pop pop jmp sub adc ret add std lahf out pop arpl cmp jge fcompl or rolb aam lea gs cmp stos call clc xlat cld sub inc jae push adc cmp mov sbb mov and sub gs orb outsl call js xor push mov les rep test popa sbb pop and nop cmp push adc xchg and int3 jecxz sbb test call add jo das xor mov mov add inc fistp adc (bad) (bad) adc ljmp jae add sub push pop daa test jle dec xchg imul int sbb push sub inc sub sahf lcall mov inc xor xor dec pop push rcrb sahf pusha test je pushf jbe rcrb mov and pop mov mov sub jo or adc mov roll mov outsl push aad lock lahf adc shl scas mov jmp inc je das aaa mull pusha rolb adc inc inc into decl sub and gs inc sti test (bad) pop mov mov inc lock mov imul sbb sbb daa ljmp out loopne adc pop imul inc lock and sbb std sub mov loope cmp lock adc push addl pop or xchg jge cld pop and mov cmp or jns pusha imul dec test mov adc mov sbb sub sub inc ret jb or movsb mov cltd js add fmulp decb ljmp sbb cmp jno pop pushf mov inc mov fisub push lcall mov aam (bad) adc xchg jmp je and jl pop dec xor sub cmpsl mov into cs xchg sbb xor inc inc inc rorb pop xchg and rol (bad) repnz cld insb inc cs and jo adc test rolb icebp or inc pop sub cld (bad) hlt push cmp sbb inc imul cmpsb inc call rcl ja add inc adc push pop dec jl xchg je je adcb add mov and add cwtl imul cmpsb add mov pop add in jmp fist mov shlb iret in add jbe or push (bad) out dec mov and rclb add push inc dec fwait sbb test push xor push les ljmp cld push outsb mov sbb inc push repz incl mov mov or enter pop dec iret cs in and push add nop sahf xlat cmp incl imul xlat or cmpsb sbb xchg inc add stos scas pushf and adc rolb outsb daa dec or test mov sbb (bad) fdivs jmp inc or inc fdiv jl add fwait jmp and xchg nop pminsw in lods add lds push mov nop test sub add mov jp mov and inc loopne sub iret and mov ja pop out (bad) hlt mov inc cmp rolb and jno xor or xor lods add in jbe pop bound add push loopne nop test cmp and mov adc in pop jnp and ss mov mov mov es ret sub leave and xor adc cmp add xchg xor dec jg add push pushf scas sbb leave movsb or ljmp mov mov gs shrb add vcmpsd in xor pop pop inc xor ss dec je inc call pop add lret jge in clc movb pop push xchg jp add nop push je test sbb je sbb or sub pusha xor sbb rep jg sbb andl roll cmp cmp call ds sbb push xchg sub enter inc in imul or jl sahf adc and imul sub push pop mov inc fs add out lret mov in sbb rcll ficom (bad) movsb jl ret test cmp push and adc mov and sbb add push sub xor and sahf pushf push pop jge lods leave stos in push mov test mov loopne add into sbb lods lea adc inc in add jmp sub mov rorb push shr xchg pop jg gs pusha cmp je or inc xor hlt xor and and jmp mov fdivs xor or xor in mov dec xchg push mov pop in ljmp subb es icebp sbb cld inc rcll xchg sbb pop (bad) shlb pop or mov cld nop inc lods add lfs les std mov add mov cltd cmp xorb rcl xor testb inc adcb adc into sub push cmp add push mov sbbb cwtl adc out push rclb popa jge lea jg shlb sbb adc sbb lods pusha jbe (bad) mov add lcall xor jno scas cmp adc ret cld test sub in and sbb (bad) cli dec pop xor fcmove inc outsb mov test (bad) jae clc push adc (bad) xchg cmp hlt pop dec xor mov inc cmpsl xor insb jo add incb gs and fldt xor adc cmpsl push sub push cwtl dec xchg cwtl xor push fstps pop mov incl mul dec xor inc and shrl addb sbb xchg mov invd lods xor pop pushf sbb sub pop imul add mov sbb imulb push add fsubr inc sbb shrb ret popa ret push push add inc pop add nop sub xchg jmp fist push xor mov mov pop outsb push inc les jae fs lods jg sbb or movsl pusha stos js jmp and sub inc add xchg jbe add push mov add push sbbb and adc mov and sbb push dec dec aam add push loopne xor dec mov sbb test cld mov cmpsl sub mov push (bad) pop leave scas or mov mov xchg sbb rorb cwtl or adc cmp sub add or in jo cld sub and pop mov push dec lds push xchg lea or push nop push hlt xlat dec push dec lea pop mov pusha add outsl xchg xchg call mov test cmp pop mov add mov cmp inc add push xchg jo dec mov inc mov (bad) sbb xor loopne out jb and mov dec push sbbb add mov faddl cli inc mov jo xlat push xor lods ljmp push mov inc pop (bad) mov adc dec sub inc rolb (bad) jecxz inc nop cmp add les jns xor lcall mov mov dec dec inc or add push lods lock movsl push out add daa or xchg sbb rcrb add jnp lahf jb sahf mov (bad) mov xchg pushf pushf dec inc push xchg hlt mov push fcmovu adc fstpl loopne dec addr16 cli add negb repnz (bad) hlt pop sub nop cs add sahf xchg jp mov push pusha push cmc cld pop push and jl pop sbb jae insl push loop dec mull mov jge or xchg or test cmp dec stos sarb push aam xorl shrl pop sahf cmp movsl rolb ljmp testb fisttpl jg (bad) mov das and add fldenv or dec invd push ret ss scas lea enter jae lcall add pop xor sub add dec test int3 adc inc mov pop stos pop test pusha add fadd and push and add loop (bad) or pop lahf inc add icebp push pop shlb sub stc push sahf xor repnz sub inc into pop ljmp loopne nop loop and add repz or pop pop pop sub (bad) pop dec sub push loope cmp and add mov (bad) pop aaa sub out stos mov sbb js mov dec jl sub movsb push leave push outsl or nop add push dec clc negl jae jmp xchg cld pop outsl push and out jo in (bad) dec or push lcall cmc sahf aas add or test add mov pop (bad) lcall xchg fs mov addr16 dec xlat or andb insb dec mov roll dec hlt cld xchg nop test add xor inc inc rcrb xor adc push jge lcall sti and popa nop scas sbb dec mov xchg ljmp inc inc pop (bad) in add sbb movsb cmc movb fidivrl (bad) insb (bad) jo mov add xlat sub push dec inc push sbb (bad) loop xchg and mov iret and jbe dec rcll sti jno or cmpsb hlt dec mov mov cmp addl cli in sub incl mov mov (bad) imul dec add jge sarl add pop or out xchg or lcall call mov clc mov add xor (bad) call ficom dec shl mov mov imul pop sub xchg js mov jl add out xchg std cltd out popf mov repz pop cmp lret and or cmp rorb iret fsubs push jb imul and mov sahf inc (bad) frstor (bad) xor mov push add xchg nop nop adc xchg sarb and jmp faddp call test push repz xchg jb add push cli sbb jnp rcrb cli lea movsl mov cltd jno loopne mov ret adc mov cli add or pop add inc xor test xor addr16 mov push jae pushf arpl stos cmp ds mov xchg jl stos call pop mov adc into es sub cmp sub iret imul adc cwtl call add cmp loop loopne ret sub insb sub xchg cmp rcrl add mov inc mov mov and in cmp cmpsl xchg and adc pop mov fcompl xchg insl rolb les in xchg sbb mov adc fmuls add push ljmp mov ss loopne push (bad) adc mov gs imul dec fstps stos jo xchg (bad) ficomp xor inc push and adc mov sub arpl pop mov jle or or bound mov xchg mov add sbb mov xor mov sbb add sub sub mov mov adc sbb inc fcoms and incl add xor adc adc mov or adc clc ret add sbbl or leave xor mov push add mov pop pusha cwtl and adc nop cmp imul push add mov add addl movsb adc (bad) sbb dec dec xor mov out cwtl mov xchg mov and ljmp sub pop les xchg inc adc xchg loope repz mov sbb ficom movsb and push ljmp fmul add pusha sbb sbb sbb push mov jp pusha dec js daa jae popa xor inc jl inc lock out sbb and dec cltd rolw and repz ficoml mov sbb test movsb add sbb push adc inc into mov lock dec xor cltd test bound lds fsub cmp cmp mov fistp or push or or shrb sub mov ss loope xchg pcmpgtb mov testl add dec imul popa in dec sbb xor cltd push mov lcall (bad) or hlt dec xchg cld dec mov pop xchg push imul in and push ds lret mov clc mov cld ljmp jb add dec lds adc mov imul ds sbb in push imul out test es push sub and rcll lret dec int3 add pop ficoml lock inc cwtl sub test sub js rcrb inc or test and jmp mov rcr push in es dec je jmp add mov push xchg xor outsl push ret fxch dec cwtl or mov sub fidivrl or cmp stos xchg rcrb adcb push dec and lds inc adc xor inc call aaa cmp sub fsubl add lcall nop and in enter mov jno add add add test mov jle sbb mov jl aas mov push mov mov mov js add addr16 in inc or add add add mov push xor push clc cmc dec lret repnz mov incb cwtl nop adc mov ficomp mov mov iret adc popa sub push movlps rclb cmp lret mov dec push nop sub sub test hlt add sub imul and inc in adc pop adc push rcll fcoml test ret test out fwait mov push clc jl add fldenv mov add bound insb add fisubrl mov inc lcall sbb shlb pop aaa test fiadd mov ja,pn mov mov and les add mov bound fcomp pop push mov daa push (bad) shrb loop popa nop sub pop pop js,pt jmp (bad) dec test fcoml mov pop call mov pushf cmp sub in mov sub mov push shl pop in sbb cmp cmp add mov fst and pop or cmp popl arpl adc sub add add or mov mov push adc add ret adc lret mov sub inc push lock adc lea (bad) fmulp add inc repz jl jle push jb push inc mov push and fs (bad) pop (bad) or xchg call mov fdivs popa sbb inc jl cltd mov test nop mov add jns rorb lret push jb popa fdivs adc imul xchg push push sub mov sbb mov in add test or push inc cmp adc and sub sub sbb cmp outsl or daa lcall outsb xchg insl lret cmpsb sbb push mov lock push add inc add adc sbb cmpsl pop mov and loope push adcl push xchg adc adc call jne jo cmp ja or push inc jle ds arpl rorb icebp xlat sbb stc mov inc data16 out push and mov shrb in adc push movsb sbb lds sbb rorb jp or mov fsts fimul lods mov fsts call loopne add sub dec jmp sbb sbb jae push push aam inc call adc stos adc cs loope mov rorl jnp push out adc sub lcall jbe adc push fisttpl adc outsl sarb adc out pop xchg mov rol popa ljmp pushw pop mov jno popf nop sbb jo inc ss (bad) int3 call cltd jns inc std xlat xorl add lods cmpsl xchg mov and in daa gs orb add mov mov xlat ds sbb pushf mov jae adc sub dec and cmc cli adc sbb outsl adc add sahf or je xchg pop lret xchg (bad) stc pop (bad) xchg cs int3 call aas jns jp add lods xchg pop fs nop ret mov xor or (bad) call or divb jne cmp jo lock loope in push cwtl iret push mov xorl adc add xchg pop orl lods mov pushf js mov fimul or call dec inc rolb push lds xchg popa adc xchg push pop fcoml adc ret add je nop adc lahf ja (bad) rcl popf pusha dec leave push xorb mov pop or or or roll add mov add add popf stos xchg ret jecxz cld cmpsb push add fidivrl insb and in mov lock cmc inc pusha mov cmpsb stos movsb scas jo je fs lods sbb inc fcmovnu sub in cmp add jg,pt mov add jp mov iret scas inc add xor push out popl lods pop jne cmp cltd mov mov aas jo xor or icebp xor or xor insb adc dec mov mov xchg push mov leave adc lea xor test fbstp ret cmp enter or fcoms repz add aas movb jmp add pusha cltd lods ss mov mov stos jns cwtl dec add jl cs shrb shrb add (bad) mov int3 mov jo leave mov (bad) dec inc rorl cmp cmp mov scas cwtl out mov (bad) sub xor add nop inc cld pop add xorl add jg test xorl adc add sbb sub stos clc push scas add inc movsl jo cli sbb or xor bound jl add push (bad) fdivl dec rclb xchg xor add sub push ds je mov or (bad) dec mov mov arpl cld outsb test mov lret add insb popa add in adc jae pop shlb or adc xchg in mov inc ja mov aas lret xchg fdiv mov cmp jns or mov jns insb adc bound push xchg (bad) test call jmp outsb repnz jae adc daa and shlb push push shrb pop mov cmp or sbb dec add out jbe or (bad) inc jl lds hlt add ret or xlat cld add xchg (bad) aas loopne add shrl dec aad les std or cmp mov int3 lret nop pushf xor pusha push xor imul shrb jecxz adc add or hlt add andb pusha fisubr mov aam mov mov adc into pop popl inc add or mov mov lods popa out mov daa sbb pop ret decl shlb inc sub cwtl pop inc or xchg xchg inc inc lret shlb or fbld clc aas push mov push int3 mov rclb (bad) div jl pop js jl jle add ror mov pop rolb mov pusha dec inc int adc cltd fstl imul inc lret sti je jmp mov adc outsl fistp jge and pusha out jnp add add dec test clc mov mov and or daa dec nop mov pusha (bad) mov mov add add (bad) clc add imulb cmp or pop push jne test je stc add mov out pop test in adc dec add mov inc movsb add pushf repnz add fcompl adc inc lea sbbl xchg das push or add inc mov mov or movsb hlt inc sub stos inc xchg or js add pop es pop aad sbb jge rclb push daa mov xchg and add pop sbb cmp fidivl dec ret les sub and push adc out or jb add mov sub les or pop mov out pop add cmp ret jecxz std int3 or and add inc push add or add mov jae movsl xchg add and imul cmp rcr dec jg mov add pop xor sbb popa movsl push cmp add loope sbb pop pop int3 aas sarl push nop movsb dec rolb cmp das es jbe cmp fs xchg add lea mov mov push lods rorb add les xchg add xor add pop fld mov in lea dec testl movaps inc popa shlb outsb popf sahf push cmp xor int3 andb adc mov dec insb cli push mov add inc sub movsl cmp repnz jg push jae mov pusha lret mov daa push dec pop add testb or fldenv aad push push stos ds mov daa or incl test adc add fsubl adc jo mov stc push icebp (bad) push fdivrl movsl daa adc mov dec in das or ret fs in xor add xchg jbe ds icebp add movsl rcr cltd rorl int3 push inc xor jbe and push idivb pop es mov push mov mov test icebp fisttpll les shll add jae push movsl aam add inc daa add ds jmp mov sbb cli shll das jl mov inc dec cmp jge std mov or dec jmp pop dec roll mov lea push cmc nop or mov add adc stos adc push dec adc pop pusha xor test dec sbb sbb xchg xor lods jb adc aam adc xor movsl sub hlt mov push rol call cmpsl or dec movsl call inc mov cwtl mov cld xchg enter jns inc jmp adc sbb dec add js add les xchg loope adc cmpsb call push shrb in dec inc xor call mov cmc and clc xor or mov sbb pop movsl rorb or mov daa dec pop lds mov xor fs mov sbb in sbb (bad) lea iret push (bad) test adc mov or sti cli out mov or jae adc add xchg addr16 cli incl push test js pop lea xor or js push and xchg fmull inc aas xchg (bad) stos xor dec call out push and add mov mov jnp cs adc dec xchg sbb inc or test or inc adc jmp movl lods loop popa test dec add sub dec add pop lds sub or outsb adc lea lret mov fisubrl cli (bad) in adc mov adc fisubrl in add xor (bad) loop sub add dec push popa and jns fistp cli dec adc rorb aad and dec or xchg cmp mov test lock cli ljmp add ljmp addr16 dec add xchg jge pop add (bad) (bad) in xchg pop fnsetpm(287 xor pop push cld aam rorb xorb outsl xchg adc negl movsb leave adcb bound push xchg jle inc or shrl dec mov lods push mov test and imul xor sub add js cmpsb das xchg and inc sub sarb nop and pop xor xchg sub mov jecxz fiadd bound pop xchg popa fs add call mov add stos sbbb loope add xchg or cmp repnz and jne scas mov test movsb mulb xor sub int inc push mov xor mov add mov fisub or pop or inc jl dec repnz stos fwait stc in xor adc mov xor inc push add adc push xor iret add cmp ret mov adc pop xchg add xor adc das push fdivs push out dec sbb or cmp enter movsb cmp clc test xchg adc mov dec inc mov adc and inc rolb pusha mov jmp add fidivl or shl mov push and lods out test enter mov movsl add xor and imul imul fistl add fsubrs cmpsb mov inc xchg mov or pop add dec pusha xchg sub mov lock or inc imul jo mov mov mov add xor sub hlt in fcomps sbb ror dec xor insb or test xchg xor pop nop les xchg xchg mov hlt push mov outsb shr test add mov iret ljmp pop sub xor cld test or hlt imul in add jmp imull xor adc test mov test bound shrb cmp or cli push mov js pop movsb or and mov xor ret inc orb cmp cmpl add stos in push daa enter add mov into fnop or sbb std adc popa stos cwtl inc loopne xchg test lods cld push and push cmp push fs pop loope stos stc lods rcrb or fidivrl adc pop or jnp pop adc jecxz or and jp orl bound popa dec xchg cs mov adc out add lods jo add or inc stos push mov xor and in add xchg and sahf nop fadds add loopne and xchg inc fisttpl xor push cmp in bound mov xor xchg or mov push loopne das mov lret jmp outsl and mov cmpb out leave ret fs adc xor icebp sar andw clc push add nop aad add scas mov fildl insb inc push push shrb pop cwtl js dec adcl out or enter and jmp push cmp popa or fcomps stos and into in gs mov or xlat xchg outsb adc sar lea xor push movsl cmp daa repnz add rcrb push adc pop (bad) mov or cs mov cli jno and adcb and mov cmp movl dec xor movsb add jmp mov inc push in aad adc xchg std mov or xlat push les and mov jle add pop push mov sub add xchg arpl fsubrl push sbb aas sub and daa xchg sbb lods ljmp out nop pushf xorb nop cmp ret outsb push jo cwtl inc hlt mov push dec cmp adc stos in xor sub popa or nop xchg push adcb out xor scas pusha aad xor push xor sbb mov daa inc negl pop adc nop inc aad add in inc push pop jge sbb xchg mov pop test jb mov fiaddl pop test sbb push adc and pop cltd adc add xchg xor jle mov inc pop mov rolb jb pop rorl std xor push jle sarl jmp xorl fnstsw jge sbb cmpsb cmp add loope sarb mull outsb ss push sbb mov push or add inc mov pop inc jp les mov test dec aam (bad) outsb andb pop sub cmpb mov es push dec lret ss add jle dec aaa fdivl add sub js bound incb popf out test fnstcw cmp inc jbe std dec mov loopne or sahf loope popa mov nop adc mov ret imul sahf ffree sub xor push add (bad) mov pop add faddl outsl insb (bad) and mov mov std mov add fist mov clc sbb jmp xchg mov rolb stc insb (bad) fcmovb mov in sbb dec sbb flds cmp sub cmc bound sub cwtl xchg sbb jle pusha iret jno jge leave or rol lea xchg shl adc das fisttpl dec js fisttp and sub jg imul sbb push mov push push outsl pop test and xchg add sti or xchg and xchg roll out test sub sub mov adcl cld (bad) cltd adcb adc inc pop add inc mov sbb cmp pop add sbb add rclb sub cmp je orb orl xchg movsb mov ret push mov ds dec xchg sbb cwtl fdivs imul sahf nop lock and std fwait jle shlb add (bad) ja push cmp xor jnp call mov insl fst out xor sbb cmp jmp cmpsb inc sbbb mov inc mov mov aam inc inc inc mov mov dec sbbb sub adc mov lds xchg ss mov sahf adc sbb ss jg or mov enter fcmovbe jmp add cmp dec (bad) sub test dec adc cli movsb mov fiaddl mov sbb jl sbb jl movsb mov pusha rclb xchg inc (bad) sub je pop shl sub and adc inc cmpl inc les (bad) nop mov push out call jl pop cmc movl inc (bad) ja xorl movsb movsb sub ds popf leave in stc add repnz (bad) mov jns xchg pop add bound xchg dec fldenv (bad) push mov test adc add leave xchg add xlat aas fmuls add ret cmp str sbb mov push jg rol int3 add test push pop out add mov or sarl sub add adc and loope fcompl mulb jecxz mov es sbb popf loop (bad) bnd or add dec pop imul pop loopne push or jno pop (bad) or fs mov xchg jo out ficom add fild add cltd test pop push in push int3 jecxz sbb dec aam xor add or aad or add xchg jl push in pusha pusha dec sub pop pusha pop adc mov sti or test rcrl mov adc faddl cmp aam shrl sar sbb lods inc fsubs mov lock or test jle pop pop pop add xchg push mov mov sub add jle sbb push in mov jae pop mov or loopne insb dec cmpsb lds rclb rolb and mov bound test lods pop js push mov cmpsl (bad) andb or mov and inc sti dec xchg sbb fildll add ja xlat mov gs loopne sahf in inc pusha nop aad pop push xor inc add sub pushf gs loopne dec add jle incl cmpsb add lods aaa jns push fist (bad) popf mov ds push outsb jno,pn lods ror push pop add xlat scas pop insl loopne xchg mov mov (bad) cmpsb in cltd and rorb jne dec jo add faddp sub or pop jno xor rorb add cmpsl mov xchg (bad) in clc push test outsb add push mov nop mov add (bad) xor lock je mov lods pop add fstpl rorl int3 loopne xchg js sub and add enter lea push andl mov sbb sub jmp lret mov add (bad) std add and cli xor sub imul sti insb std push test test fnsave icebp je imul cmp and movsb es or jle add test sub jo sbb inc rcll mov adc add loope (bad) mul leave dec sbbb xchg sub inc push cwtl add jmp (bad) int3 mov (bad) mov and popf push add mov (bad) pusha mov jno clc stc popa cmc pop call ror sbb push shrb add mov ffreep int3 jle cli wbinvd mov aam adc add mov or sub sub clc inc repz pop push or jge xchg (bad) cmc inc push cmpsb cmpsl sub pushl mov iret aam xchg sbb push lret addb aas jae fcompl mov enter inc and sub mov add mov dec js dec ds sub lock fucom mov sbbl mov push cmp loopne mov mov test pop test fwait rorb fdivrp in sub mov (bad) lret orb in add jle out loop js xor adc repz fadd loope flds rolb and adc ljmp and or sahf cmp dec xchg cmp sbb ja rcrb add jle jecxz add test add push test js in rcrl arpl hlt dec ret sbb and add pop bnd push inc adc mov jmp fnop sti mov (bad) test int pop fdiv push xchg je jns addb xor dec rorb subb shrb arpl sub adc xchg adc sahf or mov std inc mov fbld add test xor out cmp fstpl mov lret sbb xor rolb or or cmp nop lock (bad) adc sub fimull stos cwtl (bad) js lds dec fcoms add inc xchg (bad) lret fisubl test adc sbb mov mov mov movsb pop jbe leave outsl andb incb sbb inc call loope mov push or int mov sbb ret jp cmpsb pop (bad) ffree in fwait dec adc sarb nop and or (bad) ror rorb mov push add ds call xchg sbb lock fld sbb add adcl dec mov dec enter aad ss add int3 lret push and jl enter add loop ja adc in ficomp cmp jbe mov adc test cld and cmp push inc inc add fistpl adc ret lcall pop xlat outsl inc pusha fdivs aam outsb mov add pop inc push sub sti fnop inc sbb ret dec cltd push xchg or push js jmp pop int ja inc pop lcall loopne mov and test and js or inc rcr pop push mov pop sub inc (bad) adc bound cwtl bound dec sti jo icebp and mov aad cld xor inc iret xor pusha adc cltd push fisttp xchg into call nop mov cmpsl movsb sub nop aam js sbb xlat lds mov test inc jbe jns pop movsb mov and je cmp push cmp add movsl lret sub test lods add fs adc mov mov ss add rolb add (bad) fmuls shr movsb push mov xchg pop iret add sub (bad) xchg push fcoms inc (bad) sar sbb add (bad) daa lods int3 jae sbb stos call jp add cli ror inc and add jae push (bad) adc test ljmp lret (bad) js inc loope pusha xlat adc pop lret push inc mov jo mov mov pop inc or je jae (bad) lock movsb dec add mov or or movsb pop fimull movsb add inc mov or (bad) int3 mov (bad) (bad) stos fimul shr shll jne out or sub aam add cmp pop pop xor test test cmpsl or inc xor sub add add mov sti mov addr16 test xor les add cs cmp add xchg popf flds mov add or push jns sahf int mov add push cmp mov mov decl and insl les adc add mov xchg mov add outsb cmp adc add pop sti orb adc dec leave and sarb jg adc lcall inc jo test mov (bad) xor lahf or and aaa outsl sub push sub shlb jbe pop pop mov shrb or xchg movb sub mov fadd inc jl fmull loope scas xor mov test mov rorb jb adc lods add fstps int3 inc add and sub aaa cmp mov (bad) xor aas xlat or jae js js shrb ret leave mov jl pop mov mov outsb popa aas dec inc clc cwtl and and and mov ret rcll mov shl adc js mov mov adc add testl add adcb ss add jp and pop push cli cmc (bad) mov repz xor jge xor sub mov pop inc rolb dec pushf insl mov xor mov sub add arpl push jb jp add cwtl xchg int3 ja das ret adc fmul add js mov cmp jp ss xchg push xlat nop test sbb cmp xchg loope loopne mov add pop pop call aam add mov push addr16 dec faddp daa fstps adc (bad) or int push out int3 scas adc mov cmc cwtl mov cmp adc mov sti add in test xor and push mov lcall int3 cli sub xor loope push pusha repnz mov adc loop lods pop subb movsb fisub cwtl cmp repnz rolb into cwtl popl shrb ret sysret push scas and add loop or dec vcvtss2sd (bad) stc pop in pushf (bad) testl cmp adc roll ret arpl aaa or add mov divb ficom or xor jl pop hlt test add and fsincos inc cld jns push jg add lret add lock pop je or or stc fdivs add sbb sub pop cmpb mov jp mov xchg iret jl jo mov pop in in movsl push insb jl push (bad) jae add repnz cmc cmpb sbb adc pusha punpcklwd xor add add sbb aaa dec test mov dec out js jmp push mov and push mov adc mov xchg inc add inc add inc hlt orl (bad) add sbb loopne repnz sub orb movsl adc loopne aas mov ja rorl add push sbb int push mov sub inc add push fiadd jmp xor outsl lock mov popf pop inc (bad) xor sub inc mov cmpb (bad) dec add adc mov inc and ja ret xor xchg jae sub loope andl js lret lahf push dec rcl adc and push mov add aas shrb fwait cmp sub mov rolb push iret sbb push xor pop mov repz inc push (bad) nop sub sti addl cli sbb sarl test (bad) int3 loop or push or add notl mov cltd test cmp and loope adc cltd insl sbb in sub and jnp and fwait sbb mov add xchg pop and adc dec cmp faddl movsb pop add or add or fcos sub pop sub in daa mov mov mov xor cmp es sahf clc mov adc in pop push xor or jp and (bad) mov sbb pushl fwait and les xchg add adc sbb sbb pushl cs pusha (bad) xor inc sbb dec jp add or popl add mov int pop ja add mov mov mov mov push (bad) fsubp add call and pop lock cmp push pop in cld pushf cmp pop lock nop jle adcb or mov adc lods mov mov jl pop mov test mov pop cli je (bad) push repnz xchg mov inc jae fdivl push or test cmp pop dec popa add ja gs add nop aad sbb push dec inc mov aam cld adc pop dec clc pop mov je adc stos and adc or and cmp add sub sbb mov lahf push cmp push add pop mov push sbb fld cwtl pop adc in add insb call pop add push (bad) push jo fcoms xchg addb es sbb or fdivs adc sbb xchg jl pop mov jb cmc imul sub or xchg add cmpsb push cmp or ja idivl (bad) lock divb mov rcll jb aam push xor out ds shll mov mov mov mov sbb lret mov lods push adc in adc out pop pop addb lock and loopne or mov in out jo sub stos mov adc sbb scas dec ss push jge pop sub add ja icebp jmp lods call pop lock test mov int3 and and add jns adc ljmp das sbb sar mov pop subl daa fmull or sbbb jb jg sub (bad) lods xchg pop or (bad) stos sub outsb lret dec dec push or adc nop dec xor adc shr inc sbb xor sbb into cld jbe movsl je mov test fstps adc mov in aaa xchg jo negb cs jo test adc outsb jns adc les insb (bad) push out in (bad) lret add call sub iret sti sub push adc leave int jp or inc jle lods dec push pop sbb xor mov dec xchg pop mov mov ret rorb aam cs cmp xor pop xor enter add fnstcw pop sbb dec add add fildl loopne jo clc jmp xlat inc ror ss pop or orl test add mov (bad) jg mov enter mov fwait and sub and enter add call xor dec sub repz mov gs out push adc adc js rorb test fldcw adc mov sbb sub mov add add xchg jae add dec sbb call fimul mov xchg mov into jl addl aam mov add push pop cltd or and mov fsubr or xor cmpb cmp mov add add add sub sarb inc adc mov add mov pop mov inc add push add clc fsubrs sbb and test mov gs lods push ja out adc mov mov push or lock xchg pop jae,pt jns xor push xchg or adc sbb stc mov mov pop adc jl leave sbb add pop adc data16 mov cmp insb loop in stos mov sbb jp push out mov mov pusha mov pop test into test cmp je dec leave add cmpsl push adc inc push add xorl jns dec or xchg inc int3 sbb jb or mov pop or imul add inc aaa or sub sbb and push lods and or hlt push xor sub mov push subl decl mov xchg xchg add (bad) sub dec divb fadds adc lret add ljmp fldcw test inc add push outsb std jne aaa fldl int3 add jnp cli and inc cmp leave pop std dec inc pop sahf in (bad) push jp jecxz dec test fstp jo jle ret cmc fistl lret xor out (bad) repz push or out fnstenv sub push sub sub adc idiv cld push push vmwrite js fsubrl popf cmp call sub xchg mov test xor mov sbb (bad) dec test jo inc pop iret xor adc or add inc adc and mov pop dec or sete js fwait loope clc inc add mov lret call sbb push mov hlt into cmp (bad) iret dec fmull add mov pusha push or xor sbb sub nop lcall inc into ret ja mov (bad) jnp movsl or cmpsl cltd cmpsb and mov or sub in stos js sbb dec push into sub jl dec adc shrl inc mov mov rcrb ss and adc mov test jae cmp mov int3 popl sub lcall and mov lcall xchg dec call cld ljmp loopne xor push xor mov dec mov cmp lock pop and push and jns sbb pop daa and adc scas add movsb add pop fistp or out or mov jle cmpsl inc (bad) pop mov dec add mov ja pop xchg add fnsave mov xorl andb jmp popa push sub pop cmp dec or shlb fcmovnbe dec push in add push (bad) sarl lret loop aas es pushf add push rcll xchg jmp push pusha mov pop je add adc adc mov jno in cmp or and jp js cmp ss pop (bad) mov aaa mov inc in sbb push fxch testb sub sahf or (bad) xor pusha rol shrl jp dec cmp es clc or enter addr16 shrl stos (bad) cmp negb mov add or cmc movzbl pop fs sarb in jle cmp cli lret pop (bad) xchg add outsl sub pusha dec add mov add push lcall add std mov mov dec inc decb ret out test push add push fcmovnu jns pusha dec push sub lcall test call mov insl cs je in inc fistp sbb add cwtl jge loopne lret mov popa pop jns or pusha adc pop pop fcmovnbe es add (bad) lock das stos add lea pop xchg mov push shrb mov and pop xor enter (bad) clc dec pop adc imul dec repz push inc pop out sub sbb jnp add jmp inc test inc orb cmp sbb cmp daa das int lods imul cmp cmp cwtl cmc or add daa pushf add jns rorb and add pusha inc xor inc mov cmc dec push (bad) xchg jae sub popf add in dec push cmp cmp pop shld andb mov movsb test cmpl enter insl int jmp mov (bad) and add repz push dec movsb push jl add jno js orl pusha andl test mov jmp add cs mov dec jne jo cmc inc or or inc lock jl push into jae or adc std hlt or pushf aas dec jo cltd mov ja nopl xorb cmp add or in jmp xor leave loope adc xchg cmp bound push popf adc in pop enter mov cli ss rep xchg sub inc je clc sti add scas imul andl or or sbb push lods sbb test cli std ss xchg lea fadds fs cmp push lret xchg adc dec repnz sbb sub xor add mov decb add xchg mov mov mov (bad) fdivrl add test inc (bad) xlat dec inc mov and (bad) ja sbb popf jmp ljmp mov mov fcoms movsb test pop sub push inc mov nop add adc ret add outsb inc or sbb add dec push push std movsb sarb repz add ffree mov jle mov push into imull adc orb in or cmp fcoms cwtl sbb adc adc cmp xchg xchg mov mov mov xor mov dec or dec ret sti mov and mov cmpb subl push mov cmp dec (bad) mov push test nop xor jno sub lea (bad) jb sub cld xor scas and out jo inc sti in sbb dec mov cmpb repnz jge xor flds arpl les cmpl gs push das push popf sbb dec xor and sbb cmp sti mov or sub adc cmpsl adc subl popf or data16 and jbe mov addb pop dec ds dec fistpll mov test cmp jne mov push mov bound mov imul (bad) adc ret cs jmp shrl xchg push add orb dec mov pop jbe push (bad) dec push cmp leave sub adc add add test xchg out bound mov outsl xor inc cmp push dec bound mov das add fstl movsb adc xor push sub and in mov push (bad) int3 imul dec mov push movsb jae shrb jnp mov xor dec xor dec dec lods addb sbb dec mov mov sbbb mov scas jb or int3 xchg inc rorb push add push es add add rclb xor or js mov and sbb cwtl mov lock leave and fmull lret sarb fdivrl jne pop rcrb icebp add jae adc lahf popa cmp scas mov je sbb xchg popa sub mov adc mov lret (bad) add pusha dec sahf mov mov jb call rcrb test lock enter or jo push pop jmp adc push or test enter pcmpgtw push mov insb repz mov fsubrl mov jl pusha in lcall adc dec inc mov and imul or (bad) jno sub jecxz ret mov mov or pop push test mov sti add bound cmpsb adc and or dec or xor out add imulb mov test jae roll xchg das or jo jne inc pop ljmp xchg inc imul xor inc in sub xchg rorl xorb js sbb inc and xchg leave jns adc sbb add inc inc mov dec jo mov dec pop int3 insb roll and rcrl add mov loopne pop inc xsha1 cmpsb bt xchg and mov aas or sbb xor sub push and pop sbb mov mov (bad) xchg and insl in pop ss fdivl dec insb inc cs mov mov sbb lea shll push sbbb je fmuls fs dec adc jnp xor jne adc (bad) push xchg adc test lods add fs js,pn negb ficomp popa push inc movl sub adc lret int3 mov lock js xchg lcall inc fwait add push scas loopne andl add cmpsb dec es mov cmp pop cwtl mov push mov push mov jae popl sbb pop nop ror ficoml inc in test xchg add call imul mov cmp roll sub pop and dec jnp add pop xchg sbbb jl or enter and hlt cmc jo mov aad in (bad) jmp pushf jbe bound (bad) mov push add xor dec aas dec movsb dec xchg and add adc and xchg inc add dec enter movsb pusha in emms push sti pop gs xor cwtl leave out sub loope arpl xlat in jmp cs sub loop rcrl test dec popa adc dec lret sub js enter jo jns push pop pop jb jp,pn shrl movsl jbe mov imul test fs dec (bad) xchg adc pop cwtl cmpsl add test call xchg xor lock sub adc or add pop mov add and dec xchg jae cmp or inc insl add scas mov loopne dec lods lcall int3 insl in jmp mov cmc inc sbb addl mov xor cwtl (bad) jmp sub xor push insb fdivrl scas push add insl les fiadd push pushf addr16 push push insb add mov std (bad) jo fs stc inc (bad) cmp dec sbb jl push add cmp rcll add (bad) xor pop stc jmp fimul lods cmp ret icebp js and in ret jae rcll and imul or pop jno nop fs fs scas mov add sarb hlt jbe and rcrb das add adc inc lock sbb xor cltd rep fst add and push sub (bad) dec xchg loopne xor mov inc test mov or xchg inc and and es aas add repnz cltd xchg test pop adc xchg aam enter (bad) push test jne jns mov dec lock xor xchg push shrb sbb sub cmc loop add notb hlt sub add xchg in dec (bad) cmp add mov in jge add jle jp inc and rcrb xchg push gs inc cmp or fwait and dec bound loope push rclb das sub and sub test mov into sub mov add add cwtl lds data16 mov jo in inc mov or pop test pusha mov dec jo push mov call dec push dec cmp inc mov (bad) jp hlt in sub (bad) mul imul inc leave orl insb nop (bad) sbb and out pop push jg sub iret fwait push lock aam dec enter xor and into and add test sbb xor xchg je add outsl bound add ljmp dec inc add out les outsb fdivrl push (bad) popf sub mov mov frstor lods adc ss lahf addb and pop int3 imul add bound mov faddp jmp jle int enter add fldl add fldenv imul pop shl jge adc xor test repnz call insb dec sub xchg lods cmpl jnp in adc jp mov push adc (bad) jo scas xor mov add fs add cltd jl sbb stos std pop ffree add xchg mov xor inc imul cwtl push push fistpll popf cmpb stos std sub or cs push in fs std inc or adc pop insb lods pop incl rol (bad) je jle pop ljmp aas rcrb cmp insb push test cmpsl daa jb sbb loope mov push push or popl aam jle pop lea scas push jecxz pop jo mov and aam hlt data16 jbe dec rcl push cmp mov lock sub in dec shlb out jne add addr16 fiaddl das cmp or xor sbb xor loope enter xchg iret push mov inc inc sbb cmp test out addr16 adc xor and mov test mov and mov mov dec imul stos dec xchg es adc mov dec or mov pop jns cs mov or add pop mov jo push pusha sbb adc std xor fwait int3 jne and aad popa xor sbb pop inc and and fstpl sub push aas rclb jne stc mov cld lea adc fcomps out mov (bad) mov xor xor mov js out adc test jb adc imul add jl cld scas or mov pop adc adc xchg and lret clc add sub mov hlt sbb out cmp sbb adc jecxz out adc rcll js inc test adc adc out ja outsb xchg pushf inc cwtl movsb jle mov adc sbb in inc lret out or push (bad) mov mov int3 push orl sbbl test outsl add xchg dec je dec fidiv pop test cmp push (bad) xor or mov shll mov adc in mov sahf outsl nop andb dec out mov sbbl call add fisttp jbe push add lock pop cmp adc push or pop je dec shlb inc addb test pop add xor jns mov mov dec rolb dec ret fucomp or sbb ds adc jnp push xchg rorb movsb loopne sbb fldt test dec fiaddl shrb cmpsl (bad) imul test and test cmp test popa loopne popa adcl das rcll xor sbb mov mov adc and push adc adc in hlt sub jg loope divb inc jmp dec iret add add mov enter sub mov ljmp inc cltd adc testl subb and mov test cltd test cmp inc je fwait xor and addr16 (bad) out pop push add mov sbb or icebp mov and cmp cld mov jnp and ja pop sub lret push pop sbb adc push jl add subl arpl aas add mov add loopne mov fwait test stos mov fidivr sub movsb xor fnop int3 out mov dec or mov in nop pop cmp into shr lds call push add mov nop pop mov mov cmpb add add or jg loopne stos ret mov orb inc dec or je sub ud2 aaa out mov mov cmp call sub (bad) or je clc xchg adc cmpb leave nop lret mov imul push jns add call mov test in xor cmc add xchg outsb outsl and pushf clc pop clc mov fcoml and dec clc inc push mov ret aaa cltd xchg sub test lahf xchg sti pop loopne mov xchg cmpsb and mov test arpl fldenv sub es add std dec sbb mov clc pcmpgtw mov jmp hlt movsb mov les push cmp lcall jecxz clc push and aam jne das dec xchg push movsb test test jl cli (bad) pop or dec (bad) pop enter adc mov mov data16 sub cmp mov push add or add fwait adc add xor ret fidivrl pop push aad rcrb mov loopne fs addr16 adc and mov std xchg mov add rcr xor cmp pop stos sub mov or scas cmpsl xadd stc pop mov aad push mov imul cmp fs pop clc push ret cmp (bad) push ret aaa pop push (bad) sti adc cmp dec pop xor fcmovbe push (bad) push push setl pop rorl add jmp sub invd inc adc push push aam (bad) or imul jne rcl add loopnew pop cmp dec xor fildl mov xor (bad) mov pusha xlat add in mov jne mov clc cmp pop add inc fsub sub loop cmp mov ficom or add cmp add sbb cmp test add je scas popa fucom clc mov adc out in pcmpeqw mov (bad) xchg dec clc or or add jb push jle ficom hlt ds add mov push pop inc (bad) enter data16 and into nop cmp inc rolb in sub mov inc or lret mov das mov xor pop mov add adc cmpl movsb mov aam loop add imul mov add mov nop adc sub mov in or push sub adc pop sbb add or mov call insb mov sub jl cmp sar (bad) mov outsb (bad) push pop mov mov xlat adcb xchg sarb out inc or adc and sti pop aas ds mov jecxz mov pushf inc mov call push push fs xchg push pusha jne sub cmp dec xor aam and nop and aas cmpb xor xchg jne push push mov cmp mov pop and test lea sbb aad das loopne mov mov lods cli adc je mov test and adc or dec adc mov dec test add fcoms jle jns lcall nop add jo out aas pop movsb sahf ds mov jnp add or cmp push xchg movsb int mov packsswb lret adc push insb sbb push or les or mov cltd adc xor inc adc push out addr16 scas js repz dec pop lea xorb inc das aad jl,pt push lcall roll pop mov sbb xchg imul xchg xor inc adc aam dec je or adc push das pop cmp je sbb cli fs mov adc imul in xchg dec cmp xchg sub enter clc lea add pusha dec insb es dec (bad) dec adc mov sub xor xor push cwtl push pushf inc and rcl mov iret push xor and jl cmpsl sub in inc pop test add popa dec mov test and insl jmp into int3 sub (bad) xor jmp lea pop sti mov aad fadds adc or adc push inc pop adc and adc sub or dec and inc popf push fdivrs pop pop cmp cmc std scas adc mov mov dec scas pop pop sub movsb imul (bad) mov jb mov and enter sbb push mov adc jo in cli nop clc inc adc add out jnp test loop push test lds bound xor dec in shr inc incl adc fsubl in pop pop jb jmp inc enter mov cwtl xor sbb outsb inc cmp inc add nop mov imul kmovb (bad) nop add mov mov bound adc test jmp loopne hlt imul fcmove lcall add sbb cmp popf testb pop or or lock jo (bad) sti push sbb inc shr xor push xchg subb mov lds ss sub jbe in push pushf adc and xor xor sub push mov aad jecxz movsb subb clc repnz mov aam test pusha rcll xchg test mov icebp fistpll adc xchg inc xorb add sub in in scas push rorb pop and dec xor add lret in cmp enter or cmp inc jg cwtl mov pop inc pop mov insl inc push js loopne hlt or icebp and pop shll cwtl nop add mov ret mov lret push mov sub dec (bad) jbe add dec pop in dec pop hlt jae clc lcall dec cmpsl push sub dec mov push sbb test pop cmpb fistl xchg mov fmul pop mov sub cmp cmp mov push pushf add pop sahf fwait imul enter push push (bad) jno xor add leave bswap gs sbb or faddl test mov imul scas leave add mov add sbb push loopne jge nopl pop inc xor cwtl push add andl xor rclb out andb or jnp mov xor xor pop push pop xchg and bnd push lods mov mov or imul pusha cmp lret mov adc fxch pop mov lcall inc ss add divb inc lret (bad) jmp into dec inc sbb add in mov adc js and adc mov add in inc push cmc add adcl add stos sub xor scas xor or (bad) cmp lods add dec enter xchg fmul jo in jns lret push push aaa clc pop das mov dec sbb add pop push (bad) aam or arpl mov pop or scas xchg sbb push or loopne aad cltd into mov nop push cltd lods sub dec add xchg int3 in cli ss push mov popa (bad) int3 or ss mov sub cmp or adc repnz sbb pop pop aas (bad) add lds daa add xchg xor xor in incl lea xor sub xor aaa pop pop inc mov andl add cld or rcrl in sub push jl,pt dec or push adc enter jo add xor loopne or rorb rorl jmp push fdivr and shl mov andb sub scas loope mov decb in fsubs in xor movsb add stos fld pop cmp sub xchg pop lret std nop fcompl sti mov push bswap aad lcall ljmp and inc push inc add mov test rcr fidiv add jp inc loope loopne sbb in loop (bad) gs les arpl arpl sub or sub add retw in mov sbb jle push xchg mov add ljmp pop mov mov sub loop in lret sub inc hlt call fs es jb cmpb inc sub (bad) in push repnz outsl std cmp inc idiv enter dec aas cmp and xchg jge mov push shlb lahf cwtl out cmp in enter adc pop jo aam arpl imul ficompl adc dec jne js mov mov sbb add sbbl inc pusha adc sarb inc add mov jecxz push pop test jb mov push sub aad lock ret in js push push nop je out add sub neg push nopl lods aam cmpb add sar lcall add mov mov add cmc adc mov mov in xor cmp inc fsubrs xor xchg insb mov push adc or inc fadd sbb jecxz push pushf hlt inc mov xor or ds inc lea push cmp pop clc loopne push push (bad) enter loope enter adc sbbl xor loop loopne je mov and and mov mov xor nop add lds stos add fs js divl bound inc imul dec test inc rol sbb enter add sub sbb and movb sahf inc lods inc or lcall pop add lcallw (bad) incl cmp mov pushf dec mov and cmovbe (bad) jl pop out rorl decb push cmp faddl fisubl sub adc hlt pop mov or push add ds inc and mov push movsb pusha outsb leave mov shll push or xor (bad) ret push clc cltd adc pushf adc inc aad mov mov lods test loopne jl dec sbb lock push adc dec imul dec out test shll add mov or pop mov mov add and and xorl add dec dec test mov mov fimul notl add into sbb lods mov movb mov loopne das aas (bad) inc fadd shll pushf sbb cmpsb mov cmp lcall xor hlt ds ljmp mov sbb inc or add mov pop iret repz xor repz or inc fsubs dec xchg pop fsubl loopne dec mov mov sbb and mov (bad) add pop inc ret enter add adc xor and rorl dec imul iret dec add add pop sub or xchg or cmp cmpb xchg add and inc dec pop pop push stos lea fmul nop add dec std mov dec or or mov (bad) dec inc cmp mov xor xor fadds loopne testb imul pop lods inc add lret inc or xchg pop rorb xor ret mov mov dec add scas and mov sbb out jns lea mov cli in fdivr and insl add xchg scas fsubrp mov data16 xlat and add or in outsl cwtl or pop faddl rcr add push popa xchg xor xor sbb cs or sub cwtl mov fmuls shl mov mov nop mov fucomp jo xor mov mov mov out (bad) jae out fldt dec xor arpl add mov inc mov lds and jl cmp and lock or fild push orb sarb enter cmp mov scas jo aas lods add icebp mov add aam cmpsb lea jle or nop lods add mov fidivl arpl rclb test mov data16 movsb jns push imul pop lahf rorl sbbb xor call repz cld add test cmp and sbb add sub dec jp in shrb mov xor dec test ficompl jnp icebp lods jl pop push test repnz fstps add stos sahf fisttp add jecxz push jno or push pop jp ds idivl arpl repz adc stc shrb xor xchg add aas and xor dec lret popf inc sub cmp icebp xorb cvtdq2ps cmp add push push add mov aas pop ja and imul dec pusha je repz lods test int stos sbb call dec cmp mov pop cld int3 fidivrl push test arpl loopne lods repz stos movsb lock les orl xchg cld pop inc sbb gs xchg mov cmp or cs xchg insl xor lahf data16 xchg sar cmpsl xchg cld inc add sub test jmp sbb push add (bad) pop pop jno aad psrad arpl rclb pop xlat int push fwait mov add scas inc xor stos add movsb fdivp push lahf (bad) jno pushf rcrl jo scas and or test leave sbb xchg ret adc icebp push sbb xor dec add or pop mov push out iret add and (bad) sbb pop mov jecxz adc imul imul or xor adc mov xor xor adc add xchg dec adc xor loop shlb in cld jecxz dec in sbb mov stc jo cmp stos arpl push dec out add mov cmp fs xor fs incb loopne adc inc shrl pusha cld loope ret shrl pop lcall adc test aad mov sarb jmp push xor add or cs inc or add fildl adc xor sbbb enter sbb scas in cld mov jge and mov sub popf xor add xor inc lock cltd push cmp cs test xor jo repz mov fmuls (bad) rolb lahf aam test cmp push adc jp dec lods adc outsl loopne mov outsb in fmuls jb sbb repz enter xor pop movsb sbb faddl stos sbb repz pop xor lods lahf push pusha pop or mov dec pop fcom sub add sbb popf adc push (bad) nop add cld push les and test xor rcr and test popa pusha sub add (bad) jb loop jecxz add cmpsb pop add cmpl mov (bad) mov in inc fcoms cld or inc fadds lahf cld in or in pop or and popfw xchg dec pop call and test (bad) sbb or loopne pop adc mov inc sub aam or insb mov outsl mov cmp stos jg pop clc outsb xor or loopne sbb cmp ja dec cmp lock jo rorb add jb dec add xchg mov out add mov xor or sbb out mov nop push sbb mov pop or mov xor cwtl xor or cmpl xor or ret mov das pop dec mov test int pop rclb into icebp out sbb pop mov add ljmp or mov mov lcall add xor fld and push or divb imul bound or adcl or sub out movb mov daa fildl mov add add xor in cmpsb pusha pop or xor and faddl pop cwtl (bad) and das mov xor or pop faddl cwtl push jae and pushf cltd add cmp gs sub push je pop divl cmp add inc out call adc mov enter (bad) xchg inc in int3 daa movsb icebp inc stos add mov dec or sub mov cld test lock (bad) xchg mov fs movb cmp rolb mov cwtl adc ja or add loopne lock inc adc sub loopne stos adc sbb or push mov test adc in outsb sysenter lock jp mov es int3 mov addl and jge pop fstps loopne inc push push call cmp sub cmp cwtl push xor xor mov mov jae push cmpl add (bad) loopne sbb push jae out push cmp flds mov push add xor and mov repnz pop ljmp sbb lods pop insb xchg push cmp shl adc rorb pop add rorl pop jo cs mov mov pop mov loopne or test sub xchg cmc cmp sbb jo or jnp xchg mov add cs sub insb and add push dec or add test cmp add int3 sbb fs push dec jbe pop fsubr scas fcomp add dec cmp mov lock adc add sbb jge pop pop stos add (bad) push jae and add lds xor js imul adc push dec cs test lods es push or jmp lock gs xchg adc mov inc add xor jle lock jge adc rcrb pushf cltd hlt cmp les (bad) xor mov pusha cld sar out mov aas pusha sbb nop ret dec jl add mov and idivb fiaddl sbb add or ret adcb sbbl rolb xor (bad) fdivr mov insl sub pop pop mov push sbb dec aam jmp sub cmp int3 add fwait mov scas or mov sbb push add paddsw rol cwtl ret inc aaa cwtl mov ficom adc xchg inc sbb mov push mov add lods shlb jl rclb insb fwait or test and push cmp ja adc pop dec inc pop shrb dec jl or add mov pusha pop sbb adc sahf and pop test mov sub add shlb pop push rorb les lods add add (bad) out cmpsb int scas sbb sbb test mov enter imul cmpsb sbb mov jecxz add jo test cmp xchg sbb sub cmp add fcoms call leave push clc sub js mov daa popa cmpsb xchg or sub daa pop mov aaa add pop adc ror lods xor mov out pop mov pop or inc adc mov in add mov or sarl std adc in outsb ret nop jnp jmp or test pop or mov shlb inc fdivrs loope mov fisubl push mov enter push push fsubrl xchg push nop cmp nop andb pop or push add mov xor or add nop push cmpsl jb jno xor cmp cmpb (bad) adc cmpb xor insb push test arpl adc cmpsb add cltd mov adc sti repz pop mov test add jo inc pop pop pushf and cld pop test sti cmp leave mov xor or or mov or sarb rolb loopne cmpsl pop repnz push xchg add test xchg pusha insb xchg call adc mov xor adc push add sub pushf adc jnp inc mov out add add add inc das (bad) mov xchg imul push xchg ljmp (bad) sahf push fnop stc xor inc or insb dec push mov xor mov or adcl or dec sbb mov aaa fnstcw popa add xor gs (bad) jno scas jp add dec loop or test sbb dec jg nop mov dec mov insl das jae sub or cld jbe sub cwtl pop out pop sbb add or add pop sarb leave xlat lods dec add outsl add mov xor jmp mov lds movsb movsb cmpsb xchg push push adc sub xor test and mov js test test je sbb aad imul cld xor adc push je or lock je loopne test adc mov or or test popf ret xor pop xor std adc xor adc or sub fadd and push xchg inc movsb xor xchg jnp nop xor add sbb inc bound add add dec or inc aam vrcpss xchg push dec jle repz adc loopne sbb mov (bad) les rcrl xchg in (bad) pop or and rcll cmp mov xchg mov jmp sbb int3 dec pop add enter cli lock rclb ljmp insb push dec dec push shrb jnp (bad) xor lahf inc mov js or adc push push sub push mov or add enter jo scas cmpb movsb sbb push mov rorb gs pusha xchg jmp in inc or je insl les sbb or int3 popa xchg and pusha test mov cmc andl roll or xor pslld flds pop cwtl movsl xor fildll sub arpl jl fsub les scas jo xor cmpsl add aaa jle pop dec push push adc and xor mov pop imul ljmp add rcrl mov mov push adc sub sbb scas test add mov push mov into add cmp mov loope inc les aam popa or cmpsb sbbb inc out mov cmovge mov mov push pop sbb in sbb cmpsl and mov mov sub call gs sbb inc or popf inc movsl adc add fmull xor xchg push push inc pushf imul fstps pusha int aam repnz sahf adc sub and sbb pop xchg std inc push mov push jmp into dec xor dec adc sbb call aad mov loopne cmp mov rorb lea adc push or mov add (bad) dec sub scas imul mov call shrb aad imul sub (bad) xchg (bad) shrl testb pop aas push sahf cld sub mov test push sti xchg lcall lahf data16 inc inc xchg push in sub arpl jl sahf aaa add cltd and es arpl inc sbb fimull sahf loope cmp insb rolb xor ret jns inc movsb dec lahf push push jl pmaddwd loope push cmpsl sbb xor outsb push sub xor loop sub (bad) push dec inc mov mov movsb aas arpl cld popf hlt mov push dec push outsb adc or aam jecxz push lods dec add sbb jb rolb cmpsl inc andl push cmp add add xor inc mov in or nop xor aas popa loope jp add lock adc adc lahf mov es mov mov mov fwait in and xor inc popf clc xchg (bad) xor inc cs add popa scas add das loop mov mov and xor pop add stos inc sub lahf jge sahf bound call dec call mov lock pop or mov jp cmp add push add xchg push sub cmpsb scas sub mov jge sbb xor xchg fwait inc mov pop xchg in inc sahf inc dec and out mov xchg rorb mov pop cwtl and mov push daa or js adc out inc inc add mov jp subb mov popa (bad) dec aam cltd or inc imul mov ds notb aam cmp fmuls push cmp sub jns sbb fisub stos push dec mov or pop sbb add dec (bad) xlat push addb lahf pop mov inc xor pop dec sub stos dec inc adc aad inc loopne sbb loopne enter pminub and mull scas andb jle push cmpsl pusha cltd adcl aas lods leave clc imul mov dec mov stos jl lods data16 js mov sbb (bad) dec sbb sbb leave and mov dec xor add (bad) pop lods into adc add int or test sbb add and lock stos sbb outsl xor push xor xor sub xchg cmp clc xchg add and shrb or sbb loopne ficom cs je (bad) push mov mov add fsubs flds (bad) jno test pusha fcomi rcl or sub in lds xor sbb add jne mov xorb add pop aad sbb add sar fnstenv or sub jns,pt stos jo lods jl mov add lock adc pop test add popf dec cmp adc pop insb jns jge rolb sub pop imul movsl es dec je xchg mov dec (bad) xchg mov push leave xchg adc push mov inc data16 (bad) addb dec xor inc fdivrs inc rcrb sbb mov bound push mov pop push mov add add push sarb xchg adc sbb xor imul dec inc pop push scas dec fucomp subb je sub ret insb push out jne sbb cmpsb add mov push test cmp (bad) pop or sub mov xchg jecxz test scas adcb pusha push or push mov and jmp aas xor pop lock sub xor push (bad) mov add add cmpsb gs push jl xchg cmp dec or mov test and cs rorl add adc mov pop mov adc add pop out xlat add dec cmpsb pushf pusha sbb xor pop push dec fwait fs pop jmp das dec pushf popa and xchg push add test push test (bad) adc mov aam and sub inc sbb or rorl ficompl test repnz adc nop add inc and and pop icebp es xchg mov sub xor (bad) lock adc push jo mov pop int or fdivrl xchg add insl adc and jl sub cwtl rorb neg dec pop js fwait dec aas cmp xchg dec dec (bad) pop jecxz enter sbb ljmp xchg pusha roll push mov mov mov push cwtl cmp adc xchg sub add repnz adc dec add xor cmp addr16 call or in and adc ret mov cmpsb in mov mov push jmp mov fstps cs sbb xchg cmp mov in mov cs jns inc adc mov add cmpsb pop movsb add loopne xchg sub loope add fisubr push sbb mov cmp xor imul insb ss xor pop outsb cltd and (bad) ret mov sub and mov stos mov add ret xchg hlt je,pn adc and int3 cmp pop sbb mov lods (bad) xchg add push adc in or xor jecxz stos sub cwtl or adc push push daa add rclb das mov push je xchg pop xorb pop rorl and inc insb or xchg rol inc add loopne data16 jo loopne cmp pop jl sbb shr lds sub mov imul test xor mov dec lcall mov clc pop add jecxz enter (bad) pushf (bad) pusha add notl or sbb je mov or sbb nop mov es imul add sub arpl sub xchg xor xchg xor loopne xchg sar enter lods jl enter jo leave fidivl iret xchg adc sbb es or push sub mov jle test sbb inc and add lods xchg ds (bad) or jno (bad) sbb pushf and add sbb adc loopne dec fdivs vmread or mov mov mov push and mov push insb mov sub insl pusha adc test inc lods cmp bound orl mov or add mov adc (bad) out xchg dec mov addr16 in es aam cmp cs inc (bad) fcompl adc push addr16 lods xor sub and jecxz inc pop aad inc dec loop xchg sbbl nop cld cwtl pop adc xor xchg popa lahf add mov jo xchg adc xor fsts and xor sub add xor push sbb rcrb xchg lock lret lock fwait pusha or outsb clc shll arpl mov push xchg xchg add jb xorl xchg mov cltd and pop nop ret push lds pop (bad) push dec add xor scas mov add lods jno mov jo ret mov rclb fildl test push xchg repz mov push lods push mov test pusha loopne sub add stos fadds js push call pop cmp insl sbb sub push mov sub mov adc or jge fisubl add jns test jp ds pop in mov xor push (bad) pop fiaddl sbb nop mov lods loopne cli call iretw (bad) lea pop mov popa adc pusha adc sub cmp cli scas (bad) lods mov and es leave mov addr16 mov add inc enter sub out ret and ret adc cltd fcmove pop inc inc add insb and mov pop xchg xor push in mov stos outsl add lret xor call daa out xchg bound cmp popa addb lock or (bad) or and push push sbb in cmp addl leave (bad) cltd jne enter das push dec xlat imul adc fwait lods mov or int3 rcr mov mov rol pop ds push add test rcrb dec cmp ljmp xchg add es nop or mov push sub (bad) push mov arpl lock adc add lods add les aad xor xchg mov sub mov push add pop (bad) out pushf jp lock mov aad icebp loop test popa ret cwtl mov into ret pop loopne adc rcll call cmp in dec dec adc test (bad) mov mov lahf (bad) fnstsw inc movsb add mov pusha scas jle sbb enter test push add jne pop testl data16 loopne cs insl xlat aad mov popa add pop stos rclb movsl pop iret into or test xchg hlt dec pop gs push add jecxz jecxz mov cmp outsb dec xor pop jnp (bad) jmp rclb xorl pop adcl xor int3 out xor loopne dec les add test aas and inc jp mov mov push iret add rcr loopne,pn (bad) mov cmp pop dec xlat add or or add popl popa add cmp std (bad) add aaa mov addr16 add fisubr fnsave repnz fs rolb cwtl fisubr mov das xor push xor (bad) ja loopne gs pusha xchg jmp adc out pushl jae stc cld mov add in in push ja pop setae push sub test insl adc pop test push arpl loopne xor add sti rcrb add arpl jae ret rorl lock xor xlat cmp mov xor cltd dec repz js enter mov jl and or xchg ss add or in int3 ljmp xchg (bad) hlt xchg jb je add mov sub shl mov arpl inc in fs loop inc cmp adc xchg mov faddl inc subb je pushf (bad) rclb jecxz mov jmp sub and and xor js add jl rclb xchg cmpb jl divl mov mov or call sub mov mov cwtl inc dec add mov mov fdivrl sub jbe rol test ret adc xchg jnp cwtl and pop leave test sbb (bad) sub (bad) mov in xchg jae hlt aad mov aaa sub int adc out jno xchg (bad) push pusha sub js pusha sub rcrb out in add or and add xor jl mov mov mov inc push loope in add mov pop or aas push and adc pop incb xor loopne,pn enter push div call in icebp inc sarb fwait in xor dec je add es sbb xlat push sbb repz mov icebp sub jg inc aas cmc std add mov fdivrs bound arpl xchg loopne and arpl push cmpsl add loopne cmpsb adc stos movsb add int3 add lds ret sbb sbb or mov or into jg inc add imul mov sub hlt inc ljmp pop cmp lods les cs movsl or mov mov (bad) lahf xchg mov mov fild xchg inc sbb mov int3 mov or add add mov es cmp add loope jb rcll add iret aam mov add jp (bad) pop cmpsl loopne and lret jl je xchg loopne sbb hlt pop xchg rorb inc add in and cmp addl aaa mov fdivrl sbb or stos inc cmp adc adc paddsb shrl hlt sub add fcoml ret insb xchg imul es aad push (bad) sbb push pop and shl insl flds xchg fistp inc push mov inc cs imull push sub xchg adc mov push push es mov shlb inc imul xlat jle nop sbb inc push (bad) xchg shlb nop enter push out arpl rcl cwtl push idivb mov jb ss ret inc and jl pop dec mov add in xor and and lods dec arpl mov in add lahf addb xor sub ficom jns mov or ds jg cmp data16 and rcrb adc dec adc push inc add lds cwtl inc add add cld cmp faddl std ror mov movsb jno sbb jbe xor add mov ficomp mov pop aad mov and mov mov mov nop sub idivl shll leave rolb or stc jg nop ja and je mov sub (bad) xor iret sub add vandnps pop out xor push sub xor xor test ret adc lret data16 out mov lcall arpl jge sbb out sbb pop cmp add shlb dec scas out pop cwtl sarb sub xor pusha dec adc cmpsl add and push jmp aam scas ja repnz mov inc mov (bad) hlt bound fadds sub push sbb sbb pop cmc loopne js or cmp and stos pop sub xchg and call test jns test sbb push fcompl loope mov scas xor std lods jae fidiv sbb fwait in xchg push and add lods stos xchg dec rorb fdivrs add (bad) mov jmp jbe (bad) cmpsb adc in es pop outsb sbb out pop popa pop rolb jnp add movsb dec (bad) leave sbbl stc and dec dec add addr16 or lock imul mov (bad) push jge nop insl push mov inc mov rcr and cld insb nop clc jp clc imul je pop mov rcrb inc ret mov add add in (bad) repnz sbb or fcmovnu rcl add push bound push add add sti ret fs mov lea or leave mov sbb push (bad) adc rorl (bad) ja cmp add pop mov adc mov ljmp clc in xchg jl (bad) jns aad add fdiv dec cli cmp pop inc cltd test test lret out add popl adc push les and jle bnd pop iret loope pop andl std in add adc out inc adc es call add shl stos sti jge mov or call ficomp ret jl scas nop idivb aad lcall insb adc sahf leave cmp dec xchg mov xchg es jne jae mull repnz mov jmp sbbb movb jbe mov push movl icebp rol leave loopne xor inc das aas push call aad mov push add arpl cmpsb enter cmp push mov add movsb push stc aaa sbb jmp nop push cltd mov adcb mov sbb scas xor add add xchg inc sbb inc mov dec cmp aas sub add out add mov jb xchg stos cmp inc mov push add xchg cs outsb adc add cmp cli popf mov or aas or add repnz hlt clc sub mov push lods add add repz leave or lods cmpl clc or fistp sahf or ret xchg movsb clc inc shr lods dec mov and inc imul (bad) dec jo ja popf pushf (bad) xor cmp cmp lock sbbl fnstenv sub mov mov iret sub into xor scas (bad) adc pushf mov adc sbb mov cmp pop rcr sbb rclb push add rep int3 rclb push jl adc popa sbb and and cmp adc push shlb xchg or rcrb sbb push outsb mov pusha test pop jecxz pop arpl dec lahf movsb add jno push stc mov test inc xor inc or and test orb push xor and mov imul cmpl rcr push and (bad) pusha clc pop sbb adc adc movsb cmpsl out jb pop push or lods mov mov pop in pop xchg sbb and clc fidivrl movsb sbb add xor fnstenv add sub add negl ljmp xchg je add push cmpsb pop add dec inc mov clc jmp push stos xor fstpt pop negb mov hlt pop push imull push fcoms loopne add and add pop add pusha mov fistl push adc or and in aad mov sub jbe stos adc lret mov fiaddl imull push pop or jb jle into pusha orl xor scas inc push test sub cmp mov add jl clc daa sarb js add mov push or rcrl jecxz inc fwait test mov mov inc xorl sub in out mov and sbb shrl dec jne out loop popa (bad) xchg sarl test adc daa pop pop push hlt scas pop xchg int int3 inc mov xor mov aaa jmp hlt mov add lahf add popf mov and pop add push (bad) xor and add pop hlt mov cmpsl pop aad jge mov xchg (bad) in cmp addr16 push pop test xchg add aaa push add or out mov mov rol dec in add pop or loop lock add repz jne add pop and add inc out outsl sub adc cmp lds sar add or pop pop out adcb popa pop popl int pop (bad) mov mov sbb adc test pop (bad) xor adcb pop cmp pop mov mov mov ljmp pop icebp out xchg mov cmc cmp enter or nop sub data16 rolb sub adc dec jecxz mov or jge mov mov sub loop and jmp pop add or rcrl mov adc fstps add cld add adc in sub cmp fnstenv mov stc in sub mov scas into (bad) push xchg jne stc pop mov mov fcoml aam adc mov adc aam loop mov xchg mov int xor jl mov fldt fwait pop movsb add mov adc sub notl mov popf or scas insb xchg mov and call add xchg add add jecxz std dec shlb dec push mov testb mov adc push jbe incl and sbb outsl push mov rclb rcl and mov xor cmp addr16 jno cwtl add clc pop (bad) adc add lods mov cmc and je or fcompl loopne and sarb mov jmp sahf sub cmp xchg jnp lods or sbb aaa inc movsb sub adc dec mov or aam pop stc movsb dec cmpsb and (bad) mov scas mov fdivrs adc into int3 nop xor mov mov push pop jmp loope sub int jecxz push test sbb adc mov bound xchg push addb mov inc lret mov jae std jmp inc mov (bad) xor andb pusha iret jno jl faddl imul aad mov sbb inc add push imul stos and cltd jmp cmp in into sub add inc sub xchg cmc dec mov xor rolb mov or pushl test xor mov mov mov sbb fwait adc mov jmp cmp fisttp mov sub les push inc dec adc xchg pop inc dec pop pop mov adc dec jnp xor and hlt pop or mov and mov push cmpsb sbb xabort hlt cltd adc jns in call popw das mov daa cmpsb pop in push xor (bad) int test pusha dec jmp rcrb or nop adc and in mull test add xor cwtl daa pusha pusha mov mov jmp mov mov aad ds jo jge sbb jg in mov repnz dec add jmp arpl in inc scas cwtl xchg sub ja push jp adc in lods lock sub and popa ret sub lahf cli jecxz sub sub loope call scas and mov sub xor je lea cmp push sub aaa mov stc lds xor xor test sti and ljmp mov mov cmc (bad) pop and push icebp ret dec pop movsb add shlb inc jl xor jmp mov sbb add xchg cmp xchg aad test rolb aaa mov xor and fistp call addr16 addl xchg and xchg rorl xor and push push in pop inc lods add in push push cmp mov outsb push adc push add mov mov add mov sbbb (bad) and mov inc mov push bound inc shrl pushf enter mov or mov dec mov add ret add fcmovnu xlat sub mov adc dec mov cli cltd add dec add nop or sub pop and push inc push cmp add xor data16 jg push xor xchg lock cmp mov and lea dec adc jo add cld cmpsb (bad) aad pop data16 and add mov enter mov push xlat and stos xchg cmp dec jmp pushf mov add adc scas aad pop lret bnd jbe add jb cmp pusha push pop mov or movsl sub mov fmulp jbe stos shrl or repz es (bad) sti sbb jae adc imul mov stos sbb lock sub (bad) and dec ljmp and iret xchg pop ja js mov mov jns dec mov fistp sbb inc les test fwait push ljmp or add push sbb push inc xor cmp jl sbb pusha inc popa in ret jo andl lock pop aaa out push (bad) insl popa ss xor mov fwait xchg mov xchg add dec dec add push mov icebp jmp add push cmp fldl (bad) cld jl add dec inc mov scas xchg neg push jae rclb push in cmp add or mov int push pop mov push test add push inc push adc mov xor repz (bad) and daa jle and (bad) cmp push sub add cmpsl pop daa sarl sub mov ss and enter stos repz inc add xchg addr16 adc mov or ffree push adc (bad) sbb adc mov mov pop test repz cmp add cltd inc mov mov ss repnz add scas mov add jmp es dec dec mov mov ficom mov adc push mov jb fs test cmp push insl test and out add cmp jno sbb mov dec lea nop dec pop dec in push (bad) add ljmp ret int3 sub int3 sbb jmp add sbb std or lret dec daa add fcomp fldenv mov adc xchg jo pop xor out rcrb add jmp inc xchg popf xchg xchg test add fucom outsb movsb in xor sub add jg mov push and mov mov adc dec xchg push test sti xor mov sahf xchg and aad xchg mov ret and fnstcw and imul push aaa sub pop or sub out mov or cwtl sbb xchg mov or (bad) fiadd jp or fst pop xlat mov or enter les lahf ss add lea inc popa in push in cmp and (bad) pop push sarb les pshufw out inc jo mov add ss fisttpll xorl test leave stc mov frstor inc call push jb add push dec rorl xor popf out test inc sub cmp flds or in jg icebp orb ljmp rcll rcrl pop addb add stos mov mov mov xor push xor roll (bad) nop and stc mov and and sahf jno push int3 fmull cltd mov sbb jae inc jnp pop cmpl cmp mov xor push inc sub andl std mov and out add push xor mov sbb fs das push stos fsubrl lea out call inc gs mov xor cmp sub lock xor inc les add mov pusha pop sbb add (bad) sbb dec sar push mov inc in outsb loop add enter nop push or sbb add (bad) movsl scas fild cmp imul xchg imul dec cmp add mov xchg cmp and mov and xchg mov adc or inc cltd and jmp xchg jb hlt cmp jl clflush cmpl mov repz inc mov fs or dec pusha inc cmpsb frstor sub das mov push cmp pop cmpl and leave out pusha negb and test in loope mov mov ljmp cmpl sbb fsubrl or jnp clc cld repnz mov ja mov lahf inc or inc jns add adc xlat movsb pop mov movsb stos inc pop daa xchg adc lds and cmp cmpl dec dec sbb xor cltd sbb xor sub mov push sbb xor dec inc inc jl cmpsb hlt dec ffreep sbb pop lret ja (bad) mov mov (bad) xchg (bad) xor pop mov sar mov cmp adc shrb test pushf nop movsb mov add (bad) test or cwtl mov and or cltd pop jmp pop xorl add daa iret cmp xchg mov mov sti ds ljmp add aad leave shl adc mov in mov cmp adc dec add pop xlat xchg insl (bad) je or sbb lret xor add (bad) testl int3 push jnp jmp (bad) xor fstpt add dec cmpsb (bad) sub pop rcr cwtl sub pop sub daa nop movsl cmp lds rorl and aad jo rolb jmp es out lock add scas sub mov pop mov jne mov in mov cs inc push aam add aam mov inc call inc leave dec dec pop movaps mov cwtl or sti dec aam push fs test adc cmc fs mov addr16 mov out arpl xor sbb (bad) icebp add aaa add xor inc xor cmp rcrb cld inc or cmp and add dec test cmc cmp xchg fnsave inc mov daa mov push xchg and sub mov jle pop mov pop xor push out adc out inc xchg lcall fs mov arpl pusha add inc dec mov sbb add lret dec lcall (bad) lcall cltd dec lcall (bad) add dec aaa lock add stos inc sub xor andb mov jle imul xor xor pop test rolb jecxz sub xchg add enter loope mov lods jg,pn and add nop cmp xor and pushf sbb mov orl push fild pushf inc pop cwtl loop js sbb adc sub add pop repz lock sbb and jns in in leave rcrl ret and in and xor push push xorb mov xor push shll or movsb add lock cmp and pop cmp insb rorb mov mov movsb cmp mov and enter push pop inc mov add (bad) mov nop add ret push xchg or lea adc sub lods test test sbb fldenv test popf pop and cmpl jne dec xor (bad) mov xor pop inc rcll test xchg divl push adc clc dec movsb xor inc add push ds jno and cs in and and cli pop add pop (bad) dec jl push mov add icebp and dec and and scas mov int stos mov inc es (bad) push jo add adc mov data16 sbb test xlat clc les and fs push xor adc or pop xchg mov in mov nop mov into sbb xchg push mov dec pop call mov into add icebp fiadd add and push sub mov ret xchg pop jmp js dec into cmpsl loop js test pop repnz mov xchg xorl cld xor sub lods dec jno sub or in pop sub dec pop or les mov imul mov adc repz pop lods and sbbb or mov lods lock add stos sub popa xchg jl xrelease bound xchg cmp or pushf adc pusha add push mov push jbe outsb add mov movsb xchg inc loopne jg pop and adc xchg cmp cmp pop add jbe (bad) lods test cli push cwtl mov xchg pop ret ror in sbb mov inc int3 lahf cmp mov cwtl (bad) rcl repnz fbstp adc dec mov or data16 lcall sub les pop stc or imul adc aam ljmp test xor dec icebp aaa mov push dec inc mov add mov sarb inc mov mov outsb das jo scas mov fcompl loopne sbb clc adc add mov xor push ret out add mov mov pop icebp fidivr fwait or addl (bad) insl pop fstl dec push rolb leave enter imul insb pushf sub mov test sbb pop and test outsb dec nop pop les roll dec jg lods call repz add les sub xchg mov cmp cmp mov or sub faddl mov add addr16 pop (bad) popf orl push loopne in add aad test sub inc and mov into xor cs lret or popf scas es loopne sbb mov lock mov pop test (bad) (bad) (bad) sbb fucomi add fwait xchg mov scas mov or lahf or sbb pusha sub add idivb mov cld dec push aas jae xchg jg incb icebp or mov rorl xchg adc or bound xor fistpl jbe ret pop sarb add push mov aad or add lds test pop (bad) mov ffree xchg stc xor add mov addb dec ret xchg pop sbb mov nop inc test test pop mov push out call in push dec lods das loopne add nop sbb cld loope in mov cmp xor sub or or pop inc or mov lock (bad) cmpl js xor cmpsl adc jb icebp insl xchg aam push pusha addr16 outsb xchg xchg and lock dec aad cmpsb add and cmp add sub lret inc pusha add xchg add aam dec fdivl divb sbb xchg addr16 mov (bad) outsl pop or rol inc push stos jae add mov xor inc aad add mov enter mov (bad) leave push add stos mov out mov or xchg shlb ret cmpsl inc pop add mov std and add xor popf pop push sbb rolb insb mov paddw xchg dec xor push add pop jnp stc push (bad) add ja mov xor pop dec add outsb cmp add out add mov jmp dec add xor loop pmaxsw adc subl in add mov je int jmp les sub cwtl jmp xchg arpl xor pop stos xor mov dec cmp mov bound xor and add test jo push call push inc cmp lea or mov add mov (bad) lcall add jnp out push mov pusha sbb shr jmp sbb mov (bad) sarb add and pusha or mov add out ljmp outsl mov fisttp lock mov dec cli pushf add and pop push outsb (bad) (bad) lret and pop addb inc das pop add add mov and jmp add mov out mov sbb cmp rorb inc xchg in jmp mov fbstp add cmp loop (bad) std movsl xor add xchg add add lods hlt push rcrb add cmovle xchg push test dec and dec xchg cmc pop inc inc add out stos hlt enter mov cmpsb push mov and jo add fdivrs cmp loop jecxz jge or test and inc jecxz add imul in add add dec mov xchg dec sub loopne cld insb inc mov out stos hlt shlb cs shr jecxz jmp in xchg aad lret add sbb orl inc mov cld lods and xor sbb mov xchg add addl cmp add push xchg adc cltd aas jno imul jl push insb sub ret sub add lcall inc pop cmp or outsb push imul cmp in mov icebp loopne xor pop int inc inc and pop xor inc fistpl clc or adc mov outsl outsl adc sub xor xchg or or sub lods mov (bad) hlt inc add add lret orl xchg ret mov mov sub rcrl cmpsb fsin inc mov rcrb es nop sub push and sub loope sbb pop ljmp std fbld mov cs xor inc insl and popa adc add jecxz add addr16 test icebp sbb out fstpt and or add push push or call cmpsb int3 mov sub or lcall push xchg add xor pushf mull subl xchg call out xchg jae jbe icebp add call pop rorl aad adc mov add dec lods jb cmp in sub add mov sub aas (bad) icebp int cmp mov pop mov pop and decb stos xor sahf adc call add test nop nop cmpsb push add jne call lock and les dec aad adc mov outsl add nop fadds outsb cld jge pop mov xchg adc sub push repnz cwtl mov add sub push add adc out (bad) sti mov and icebp rcrb jnp nop nop out stos or push in pop bound inc pop mov loopne pop jge adc loope add mov out jp loopne cli fsts cmp pusha xchg adc faddl add fldl movsl dec mov or mov sbb add and dec loopne lea push ret lods loop xchg pop loopne leave add sub inc lods jae call (bad) out loope jb dec pop inc pop xchg imull add shrb xchg dec jo call add cmp stos mov sub add inc xchg xchg lods imul jo lods call mov movsb inc mov and mov pop cmpsb fdivs xchg adc xor movsl or out add notb mov ror movsb in adcl clc adc mov ret and lcall xchg dec mov daa sub dec adc pmulhuw add fnsave negb outsl rolb faddl flds inc andb dec sbb mov inc rolb loopne nop cmp neg add ret imulb mov and inc test insl mov mov dec mov push xchg rorl xor push wbinvd cmc xor add xchg test lods jae cld cvtdq2ps add stos mov xor rorl dec adc sub (bad) jno adc lods call push movsl dec mov loopne jle mov mov mov inc (bad) sbb fs or add sub (bad) jb movsl lods mov mov or pop jns test add sbb xor mov and cwtl fisttp add push sbb add dec mov sub xlat mov loope xor dec mov cwtl push add xchg mov lock cld jl rorb push (bad) je sti das add xor lods add inc fisubl fmuls adc adc pushf add pusha add push and and mov dec push fcompl enter roll add and mov cli dec mov add push xchg out test or in cmp add jno jno add push xchg inc sbb mov (bad) jnp hlt test arpl test cltd in sahf add add mov pushf outsb cmp lock pop in and lods mov push xchg and add icebp xor add dec aam add lods mov mov (bad) aam int3 adc add imul (bad) adc add pop sub add loope in nop adc and cmp pusha push add adc xchg loop shrb inc cli push test xor and lods test cltd xorb mov stos loopne loopne js adc and fcoml sarb out nop shrb hlt (bad) or loope cmp test xchg js roll rolb pop call inc (bad) adc add mov add out hlt cwtl push add bound ljmp lods xchg test shr movsb sbb xor sarl push inc and push jbe dec jl jne add icebp push xchg cltd dec nop pusha push mov add mov jge or jmp xor jl xchg or pop or pop mov mov cltd in mov mov (bad) dec popa and popf push adc outsb int3 jo inc loopne and or jl xor (bad) (bad) mov sbbb es mov jp cmp sbb push movsb push sbb ficomp mov stc arpl test dec adc out inc mov cmpb ret stc mov test mov sub sbb lds inc jnp popf mov mov int incl shlb adc jno mov cmp add leave rcrb js and sub cwtl inc xor popf inc imul call or cmp clc jbe rcll clc popa daa lods je sub in fistp repz out add dec add pop call xchg xor add mov popa pop incl push add mov xchg outsl and adc sbb call out shrb test add fldcw std lods jb or pop pusha ret stos mov out mov insl pop inc jae fs mov and adc add add and push add pusha mov in xchg or call inc adc pop lds dec and call xor testb and and mov addl jno rcl sbb cld mov into mov arpl xor xor test or leave mov out adc and fwait repnz cmp sub fsubs shrl mov dec sysexit daa add imul mov inc pusha loopne fiaddl mov or (bad) js pusha insb lahf and sbb sbb scas ffree sub sbb jo dec or dec mov fistpl push nop pop jno adc lods xor lock movsb dec or rcr add pop cmp lret add enter int3 add daa lock sub jo adc popa je push add nop lds out mov pop push mov add dec iret add cltd stos sti fstpt and (bad) add nop sub add mov xchg add add dec mov mov jmp add jbe mov mov test xchg cmp add and mov adc sub int xor xchg fwait ss add xchg lcall dec in nop ds test das popa xchg xchg cmp mov loopne add xchg rcrb push jno popf and test sbb inc add inc xor in stos jno add hlt sub adc push (bad) mov xchg scas add test mov xchg dec nop pusha (bad) imul pop jns mov ret inc xor ret or mov stos dec imul and mov mov loop sar int3 lret xchg scas xor and sub or fdivrl cltd add mov fwait cmp cltd nop add ljmp jp and call xchg aaa mov fldl jmp xchg and add add in inc add dec enter mov cwtl xor in jl stos nop pop add adc pop add pusha cmp cmpsb add rclb sub sub out adc pop xor dec lods mov ficoml pusha dec xchg add (bad) inc add ja add mov cld cmpsb enter mov or sbb mov sbb pop xchg stos xor icebp add jl add orl add roll pshufw stos sub popa sar (bad) xor or loop pushf mov test push pop pop pushf add fucomi or (bad) sbb fidivrl pushf jl inc pushf lock in add cmp lods fs daa movsb shr dec mov mov mov les mov (bad) add mov mov scas enter and dec fwait and and push test popl push jo cmpsb in cwtl call fsubrl jmp arpl add sar pusha and mov xchg movsb inc mov in pop sbb dec push sets mov sub shrb cmp xchg test and adc cld loope js aaa add mov push add cli push ficoml lods and andb dec dec nop add bswap add cld push cmp jb cmp push andb aam data16 add mov xor cmp add pop pop and lcall pop repnz sarb xor and insb sahf outsb add dec loop fwait jp sbbb inc (bad) jbe,pn add pushf movsb cmp and mov inc mov inc pushf (bad) icebp nopl hlt mov push cltd jge inc adc je idiv xchg sub adc jge outsl sbb xchg add dec jnp inc mov ret mov xchg leave (bad) movsl add stos and sub add sarb or lds mov xlat andl add jg lret dec in lods add cmp mov pusha sub push es jbe push add fwait scas rclb or mov xor cltd cmp icebp pop sub ljmp sahf out mov shlb add cli inc fadd call lock fild stos fdivrp mov or and ret sbb dec xor and mov ja testl out unpckhps or fwait add sbb mov cmp nop or mov incl and cmp or jns popf je add mov imul add lcall aas inc lret fdivl add and (bad) jp roll dec pop fldenv xchg aad add mov bswap (bad) outsb jo nop rorl leave inc sarl xchg sub add adc je adc xor (bad) pop lret rcll add mov xlat sbb sbb and pop pop inc imul leave add mov mov pop in add jg aaa push cmp incb dec repz outsb mov xor scas ds sub lret mov push mov sbb popa out js xor jmp push xor jle loope dec call aas dec test add push mov inc rcll xchg cmp jl push xor xchg mov sub inc xchg repz sub sub adc mov ret je and xchg pop xor and in xor adc movsl and rcrl pop or inc add mov das mov xchg add subl test outsl add (bad) mov xlat xor push xor dec or lret inc and js pop push xchg inc and adc dec ja add jl clc cmp rorl nop fild push cmp push shlb inc or xchg call mov in push add inc mov add sbb fs stos dec fstpt add (bad) or jbe (bad) nop and movsl sbb sub jno or sub sub adc mov xor js add xchg xchg jb lea inc outsb and and sub pop add js sbb test mov ret push cmp push inc mov adc jb test aam dec (bad) ds loop sub xor and addb arpl jb sbb cmp nop jne inc mov push mov push cli mov jmp inc add out aad mov clc ret mov movlps sti pop mov mov mov push jnp jo xor mov fidivrl js add pop lret cltd mov in push les cld push mov sub nop pop outsl add (bad) xor nop nop pop add arpl or in mov push ss xor jp inc dec jno mov sahf cmp (bad) daa dec or xor cltd imul pushf adc inc fistpl gs pop sub les pusha lods dec mov sbb idivl push push inc mov lcall and mov pop test mull (bad) jno test or xor mov cmpsl sarb jbe adc aad push and adc loope xorb xchg ja adc mov outsl clc mov cltd adc xchg inc xor out es sub mov cwtl push and andb inc adc xor subb cmc add idiv pop je dec out xchg sub mov adc sbb enter jge sbb xchg ds test sbb mov inc aad cmp sbb jl mov jle outsb cmp jns cmc cwtl xor call inc add stos ds shlb mov xchg jb pop pop jmp and cmpsl adc adc pusha push jo add add dec sub and cwtl movsb or ljmp mov rorl pop mov adc add add (bad) or cmp je push cmp xchg jl data16 sub or push movsl (bad) cld es cmp inc nop sub lcall nop sbb or push mov cmp mov bnd lods cmp pushf xchg jae adc jb xor fs mov add out xchg aam movsb mov js mov push lods add mov xchg adc jle cmp add scas cs add inc cwtl fldl xchg pushf and loopne clc add or inc les pop incb subl mov lcall inc xchg sbb push sub jl sbb pushf adc dec xchg push add push inc adc dec lock inc and outsb neg add inc xor adc add pop cli mov in sub xchg aam inc hlt (bad) sti es cmp xchg jg adc aam push add jl mov mov jb jle pop les (bad) orb lret push dec popl pop pop adc sbb out add cmp adc mov mov movsb lret push push fisubl test cs inc xchg test inc sub (bad) into mov mov insb repz aas mov pop pop loop sbb mov pop outsl mov mov or std jb,pt jmp push adc sub add loop push or addr16 in add movsl or ret imul pusha xchg push xor sub add xor xchg xor lds add fs arpl mov jne xor out sbb mov and adc mov xor js jle aam mov or and mov cmp xchg xorb test mov call sub jae mov in add nop push es js jb add xchg cmp in xor sbb test jo and add sbb inc mov outsb xor (bad) mov addl dec aam jle push out std pop adc cld andl je xor call mov sub sbbl or cltd test xor js dec dec mov adc dec push xor xorl dec xor sub shrb sbb jb pop add push movsb jbe in mov add fldenv mov es xor add mov adc insb add push mov xor addr16 out sub icebp sub jo or add mov or inc xor ret mov and mov test add xor add and add mov bnd xor out insl add dec pop int3 jb lock hlt mov add outsb jnp insl jl cwtl xor mov cmp sti dec add sarl push sbb fwait xchg test mov jno loope sbb movsw pusha sbb or test int lods nop xorl call add movsb jg mov and mov popa or add adc add gs jne xor repz mov mov mov movsl ja cmp or push sub add lock out cmp mov lock (bad) les adc or int sub and into inc lock leave lock es loopne xchg shrb and push sbb pop ficoml aam jae (bad) cld xchg add loop adc pop mov pop xchg cmp and pop out pop insb adc xlat jp stos dec add (bad) int adcl inc xchg xchg pop test dec jge and (bad) rcrb adc jo out add nop test add xchg sarb pop je nopl push inc mov pop test pusha cmpl pop add cwtl mov pop cld adc sbb push jnp jno mov in daa add dec sub mov mov out or jmp dec rolb inc notl out popa inc inc sub xlat sbbb (bad) lcall jns cwtl mov xor test push mov or jg mov push aas add dec pop movsb adc adc gs push imul insb in and xchg adcb pushf rorb mov xchg cmpl cwtl clc out add adc orb jne cmp cmp and cld cli cmp sub pusha adc pop or orb out fwait add jmp add scas nop push test and xor sub jecxz add daa jns sbb push and mov sbb ja jnp push test or dec add push xchg (bad) mov dec andb or (bad) xor cmp jge inc dec xor pop lcall add sbb sub ret inc pop xor mov int3 xchg ds add out push outsl leave movsl pusha xchg test sbb pop int3 inc dec je adc inc scas bound (bad) std cmp xor xor dec mov add pop xor dec ds pusha rolb jae cmp adc movsl stos les adc lods jno add fmull xchg test xor mov fidivrl in xchg (bad) out ja imul jns cmp outsl mov (bad) push cld add mov mov sarl mov movsl in lea pshufw mov push loop fmull or int mov addb add xlat sahf out outsb mov fsubr icebp adc and push imul mov (bad) out inc push jne pusha push push aam jecxz sbb in cmp xchg not add and dec inc jnp out popa push mov add cmp enter adc pusha leave sub jbe aad enter popf ljmp mov sub push push hlt jne jmp rorb pop add pusha sub dec loope add pop push out movd and mov shrb loope add add es test adc xchg cmpsb push push dec xchg fwait add mov int3 pop inc dec mov jno mov cld push shll rolb xchg mov lds enter rcl out andb mov adc or and xor out int insl mov ljmp mov sub pop jecxz lcall cwtl xchg add int3 cmp pushf (bad) jbe pop inc add ret out out mov push dec mov jo loopne dec mov add test mov cmp lea dec aaa jl out or (bad) das rorb xor roll mov stos mov je lock lds mov (bad) ficomp adc cmp mov jge scas shrb cli and fwait stos sahf shll add cmp dec mov sbb push aad adc scas movsb add inc daa into dec adc jnp cld cmp lock pushf mov xchg sub (bad) popf out dec xor push cld bound sub mov mov sar shrl jl or (bad) sti push andl insb cwtl in (bad) clc ret in jg dec add pop dec or rcrl xor in and mov jl adcb sub push xchg orb cmp ja cwtl enter imul aam sbb sub (bad) (bad) inc inc xor jmp fcoms and aad dec adc push sti (bad) rol mov pop or fsubrl jno es mov push mov inc pop inc cmp nop push xor xchg jg cmp add cld fs cmp cwtl push mov clc shrl dec xchg call aam cmp icebp stc into pusha mov pop push adc lock arpl subl aam push xor rolb or out (bad) fsubrs lods cmp xchg rcrl mov ret inc inc sub adc jae data16 dec and mov js push xor pop inc leave push xor fadd adc sub mov mov ss adcb (bad) mov cmp add cmp inc and enter mov roll xchg imul mov cmp add movsb dec or or mov sbb mov popa pop loop and movsb cli rcll push and push nop sbb sub or cmp xor adc (bad) cld xor xchg dec add leave fcoms cmp mov xchg xchg and add push rclb xor call ficomp (bad) or enter test xchg cmpl gs mov adc adc xor addl mov roll cmp push jmp xor stos dec or sub and int3 add xchg cwtl adc cmpsb and ds push aam rol or inc xchg adc mulb cmp and adcb add cmp xchg pop cmp bound jmp cli push xor scas nop inc cs or and and xchg mov inc mov pop add push (bad) jo pop add inc test test push push inc iret adc or mov and mov sub data16 jl sahf add mov rclb or or xchg push adc cld dec add adc dec in dec xchg clc xor mov add xchg dec cld cmp pop cmc add sub lahf push fisubr sahf loop lock in stos xor aas dec scas xchg icebp jne push mov add adc mov jae push or lods sbb jnp jns add cmpsl pop sub jecxz add jns add sub inc (bad) data16 or add out adc add jns fiadd fldt loope push fbld inc push jg fnsave sti adc add cld pushf lds sub and test push cld rolb ss mov das jl add pusha jno jae lods adc rcpps adc adc jl cmp shlb pop ss (bad) jo int push bnd orb into xchg lea sub out inc xlat or xor mov mov shl (bad) icebp sbb mov xorl push mov mov pop faddl movsb out scas sti add cmpsb cmc add mov jno adcb into and mov sub je mov bound (bad) pop nop jl cmp pop jle in rolb daa cmp loop movsb mov out inc bound int jbe xor cli mov mov adc lds cmp enter add sahf imul cli std out lock pop outsl lock pop dec int3 or ret xchg or cs push mov push inc add fsubrs lds mov mov sub (bad) scas pop add jmp and mov sub les insl enter movsb mov inc jmp jg mov dec or es add cmp pop inc cli pop daa dec xor jecxz and mov and add pop cmc stos pandn or xchg fisub sbb sub jo inc add push dec and and cld and (bad) sbb push and and int dec or mov sub or repnz stos das add mov shrb addl add hlt and sbb scas push xor sub lret push in xchg pop xor pusha cwtl sub mov mov out cmp xchg pop out (bad) mov xor push cs pop shrb test inc push fs add push leave inc and mov call pushf call dec jne test jl lods cmpsb movsb cmpsb hlt adc sbb cmc and inc add xchg lods add pop dec movsb xor rorb dec aas xchg jne fs inc dec dec outsl rcrb cmp jle arpl fdivp adc xchg mov dec add adc push add or loopne popa dec (bad) xor jo add out cmpsb xchg dec fs sti add inc cld cwtl mov xlat fisttpll rep and pusha and xchg stc inc enterw push sti add (bad) clc inc add sub aas mov inc testb jle mov pop pusha cmpsb xor and xlat (bad) mov or push test lock aam jmp cmp inc (bad) cmp gs cmpsl jo dec jg mov clc movsl cmp cmp mov xchg fsubrs call mov mov subl dec xchg mov rorl add mov mov loopne sub movsb cs jl ds push mov mov inc lahf (bad) scas stc pusha pusha adc pop inc fimull pop test jmp push stc je inc pop nop and dec lahf mov stos mov sub add lds mov test push das cwtl mov xchg ja loopne cld dec or xor cwtl repz out (bad) int3 push add pusha push push add fcoml daa cld scas movsb or and xor cmp and xchg inc bound call mov xchg push xchg scas stos xchg and lock inc push gs cmc and hlt inc pop sbbl imul into pop mov in cld or xorl pop push xchg dec pop (bad) or into sbb fwait test inc movsb xchg mov and arpl sub test inc jmp sub rclb mov adc add pop rorl push push std inc mov adc movsb jg popf add mov sub mov pop es dec les cwtl push jne idivl mov test fmulp adc (bad) or mov inc sbb pusha mov add mov cwtl cmp test add leave (bad) lock out shrb in in in xor dec sub push mov adcb ret loope enter (bad) out mov and push ds sbb mov mov fsubs push add mov mov jae sub fldl pop cmp mov test cli outsb push or push mov add or jle addl outsb lods stc mov add test loope imul movsb cwtl popf add inc jl xchg (bad) jae loopne rcll add mov adc or call mov mov xchg mov adc in icebp lock test push call int3 jo push push fidivl mov loopne pusha push sbb jmp iret es xlat mov sub cld dec sub cmp adc cmp loopne stos adc mov sub sahf jle add push addr16 mov push cmc dec or lods xor inc clc jo ja (bad) jo inc ret popa pop or adc and xor es xor jae push cmc test pop xchg dec dec loop lcall add dec ss cmp rcll (bad) es popf sub rolb insb or lods dec mov cld test mov pushf fimull adc or add sub cmpsb nop cld xor out add sub cli (bad) mov jo push and je add add xchg cmpsl sbb pusha add (bad) jg mov nop mov sbb insl sbb jle push aas sub add fcoms test xchg adc pop sbbb stos adc mov sub mov and sub nop jl pushf enter mov adc inc push aad cmp jns,pt sbb cwtl movsb (bad) clc sub dec inc inc cmpsl rol jp jbe and add pusha es loop rclb mov ds stos addr16 iret leave xchg int3 add fcmovnb leave push sbb call mov sbb inc rclb sub add or popf mov pop mov popf dec or dec inc dec movb int3 xor (bad) mov fsubrl push loop add lret jmp in sub call or jl pusha cmp shlb out cmp insb iret cltd shrb test or push enter fsubr cmp nop inc push push imul into repz dec or pop ret rclb rol adc cmpsl bound lcall adc in or add aad cmp add (bad) shll xchg into add push dec scas jl jne fidivr mov loope sbb jbe (bad) out or jne mov cmp fidiv movsl adc cmp and dec sub mov sbb cmp mov in mov push mov sbb adc mov xor push fsubr sbb add sub adc jle pusha test sub std push fadd and adc mov rcrl daa jbe or add mov in in inc cmp ror inc test inc subb pusha nop sbbl fsubs push jns add subl xor push inc xchg subb dec push icebp out outsb lds pop adc cmc call xor mov push cmp mov arpl addl add std js push lock pop stos xchg push cmp pusha mov cmp cmp sarl add loop push fcoms push (bad) sub int rcr or movsb dec pop cmp xchg xchg mov mov pushf cmp sub sbbb xchg inc pop rcll adc add loop cmp enter push in sub inc mov push in pop sub mov or cmp fwait lock es sahf out jno xor push mov loop xchg inc movsb aas inc pop push adc or lret nop mov add sbbb loop mull loop jle stos or imul cld aaa movsb mov ret pop stos call push mov push (bad) (bad) xchg mov or jl fcoml rolb jns sub dec jle cmp jp js pop (bad) repz adc mov das mov inc in div fldl xchg xchg cmp mov (bad) test sbbl xor jno rolb dec adc add loopne das push js mov mov sub aaa fnstcw mov push inc fnop adc (bad) mov xchg lock repz add leave cld outsb (bad) dec sbb pushf pusha or or adc xchg shr push mov inc xchg inc add rcll shll cli add cmc imul xor cmp (bad) (bad) hlt addb shrl icebp lret dec and nop les (bad) pop xchg bound pop dec add cmp repz xor mov (bad) (bad) lods pop add jp push mov push xchg ret mov push cmp xchg js push pusha or lret rcl andl mov add addr16 jno xchg sub loopne inc (bad) std and xor jo daa inc lahf mov push out stos lock mov cmp inc mov inc sub push js dec cwtl je sbb push or negl dec mov or push adc xor ds jno jo and loop add sub adc jmp mov xchg arpl mov frstor js xchg jecxz (bad) mov daa cmp rcrb test add repz loope,pn mov fiaddl ljmp push adc jle and loope and or pop lock dec fild imul (bad) rcl cld into fs xchg pushf andl sbb aas adc in std cltd loop enter mov and inc (bad) mov mov aaa add jbe push rcrb lock cmpsb (bad) loop mov lods mov mov das xor adc jle push decl mov push push pop add push sub inc xchg loopne (bad) shrb (bad) xor jnp pop and add adcl push push hlt (bad) xchg inc push rcrb xor pop xor mov xchg in xor inc add (bad) xchg pop push pusha stc out nop pushf add lahf stos loop pusha or mov xor ret mov fldt rcr lea mov in sbb sbb ret in (bad) mov cmp adc or push mov pushf mov xchg and push add and add xchg in (bad) and rcrb mov and das lods cwtl es jecxz pop dec sbb sbb orb leave adc inc adc mov xchg adc and aas push sub jmp repnz (bad) lock jbe loopne xor and mov xor sbb jle xor jns add sub cltd and fistpll insb lret jno and test add mov add rolb mov push or pop dec add push inc mov out std push loope clc cmp sahf adc pop lret lea add inc add or popl sbb add out mov add and sbb fs push cs mov push call int3 addb jmp cmp mov sbb and repz nop je daa outsb gs out es jg or roll cli inc and ret adc cmpb loopne or dec or dec and loopne daa ja and dec dec inc cld dec or push leave jecxz int push and out call sahf cmp or add mov inc daa mov mov test mov sub add or inc cmpsb pusha in lock inc xor add sub out add andl into sbb data16 dec mov (bad) adc push add add or dec repnz mov mov jo push xchg (bad) clc popf les sbb (bad) pop add data16 xorb sub in cmpsb subb add pushf fwait js mov movsl and lcall inc fs cmpb sub mov cmp mov pop mov rcrb adc add xchg cltd (bad) xlat add dec shl inc paddb ja push push push push adc fcom and cmpsl inc and push add xor or out add jge (bad) jbe and cmp mov inc cmpsl out inc test and or add pushw ret mov xor mov aas mov cmp leave mov cmp xor inc adc and add jnp clc jb add imul and push push in mov add add mov or sub repz mov add pop call jno test and cmp mov adc add or popf ret add pop repz test or aad in add xchg or push ret push add sbb add hlt fs cmp jge outsb and adc and and int3 test fsubrl sti fwait sbb and loop mov rolb sub outsb lock ret adc aam call imul sub test nop les or sub fcomip faddl aas xchg adc or sbb and sbb sbb or add sub clc dec mov jbe rolb cmp lds mov pop mov mov jl adc inc lret dec jnp movsl add cmp cmp repz cmpsb sar push adc (bad) adc ja enter push pop jle je pop mov xchg (bad) jae addl and or sub inc imul xor (bad) and push dec add daa jne loop into stos or rol cwtl inc fisttpl inc adc xchg int js or mov push call sub popa in dec (bad) xchg sbb cmp push loop jp mov orb aaa cmp cwtl data16 mov pop mov mov (bad) lret push cwtl nop fcompl push or nop call push mov imul loopne push scas stos mov add inc mov push sub xadd adc mov cmpsb mov push sbb rcrb add and add lret lock dec dec mov inc xchg pop arpl cltd or add jns push iret inc sub sub popa int and outsl or enter mov mov sbb xchg fiadd (bad) hlt cmp inc fmul loopne fldl (bad) xchg movsb loop xchg jns enter fidiv push inc mov loop push jno je mov or stos in lahf push sbb jle mov mov mov ljmp rolb fmull addl (bad) mov lods jbe pushf push adc cltd adc or sahf fldl push mov dec ret cmp flds sub or adc xor xor mov add mov cli cmpsl pusha sbb xor jo fcompl xchg ret or lods inc cmp pop adc nop hlt dec sub addl lcall or sbb xor sbb sub and xor push gs jnp pushf leave pop push adc aad bound ffree push jmp (bad) rorl mov push (bad) outsb orl pop or mov sahf sbb pavgb std les cmc mov fldenv mov and daa jae test movsl popf test loope (bad) nop jo fsubp or lock adc rclb aas inc add call lret mov or insl stos enter add ja add arpl push sbb cmpsl sbb cltd push inc xchg test xor and dec lods adc insb cmp push mov add daa ja sub or adc pop mov dec add or imul lods test mov fcmove mov and iret call ret daa or sbb dec mov pop cmp movsb add xor adc loope addr16 mov pop loope mov add mov xchg imul push or and loope test fldl nop cmp push cmpsb je or daa sub and dec test push push push pop mov push cmp popa dec mov inc ret push clc stc adc add push dec mov shrb test int3 lret adc or xchg xchg mov dec and fisttpll add scas xchg sbb adc leave hlt xchg enter adc ds inc xor mov inc pop fldl or push mov and test sahf adc mov pop pop ret ret cmc out add iret mov dec xchg movsb inc lea loope push add dec xchg loopne cli inc jb pop cwtl or js (bad) ds and iret in cmpsb fs cltd sbb imul adc add call test push shrl xchg lods xorb (bad) cltd fidivl nop aam rclb loopne dec dec jo mov jns call sub or fs add and sbb push add mov xchg stos test enter daa xchg xor and push sub movsb and mov add xor push or call fwait pusha jmp mov gs aaa (bad) xchg in adc push test shl mov enter test mov cwtl and push add pop add mov cmp or or sbb pusha mov popa inc pusha sub hlt push jb inc mov xchg xchg dec in mov dec inc mov repz fcoms cmpsb je xor inc inc xchg mov arpl and cld iret push js jmp adcl sub les inc adc add fnsave jbe inc inc sbb push cmp ret das pop add adc rorb lods sub ds xor add lea neg shlb (bad) (bad) jo rorb repnz push ljmp pushf cmp cmp mov xor sbb shr inc push rorb sahf scas aas data16 jnp cltd inc mov ret lods sub add leave inc dec adc insb test and inc or push adc nop xchg cmc and sub mov in mov add add mov cs adc loop push jb (bad) jns sub add add or push pop daa movsb test add add jecxz mov gs add jnp test jl inc cmpsb aaa push and add stos add mov ficompl js or sahf fnsave cmp inc lods lock add roll sbb leave push add (bad) test and push dec and push sbb stos mov ficompl adc lcall and add add mov cmp adc push adc cmp cmpl xchg pop pusha mov and ficompl loope movsb inc pop sbb ds jno scas pop adc jns js cmp inc sbb and push loopne sbb addl mov rolb cwtl inc jb adc (bad) mov mov fnstenv movsb push cmp push mov (bad) ljmp pop aam lods cmp xchg mov add jno lods clc enter adc cld sbb or mov sub addl and (bad) pushf pop sbb lret add loopne xchg cld repnz xor sahf push sub sarl pusha sbb daa cltd ds outsl test fisttp dec loope loop sub icebp dec jns add sub jmp pop inc inc pop nop push add jbe mov in pusha lret cli enter (bad) hlt or roll movsb dec sub popa xchg mov fs xor push sbb dec pop sub sub cli loop or shl mov xchg aam addb or int3 addr16 jnp popf ret mov jo js or add inc subb push push ja xor push jae pop add clc mov and pusha inc dec add pusha cltd cld add ffreep xlat push subb fldl outsb jae movl ret (bad) mov sbb insb adc in pop arpl add push scas mov and pushaw lods imul fldenv mov and and push mov icebp sbbl mov mov xor and push jg repz and jb arpl jo push pushf add addb jl push dec jns add rcrb inc pop leave lds add in mov imul popa repnz add sub xor subl addr16 ds test bswap repnz cmp lods add xchg mov inc jbe pop jne es jbe ljmp jb lahf sahf cmp loopne cmpl call mov mov mov movsb test mov mov (bad) mov in push push mov xchg addr16 sub in inc or cmpsb cmp mov sbb andl inc push shrl (bad) lods jl enter xchg mov jns xor loope adc mov jns cmp test shll mulb mov or lret aas jge jecxz push or jg xor push xor loope test xchg jb cli adc (bad) dec adc call pop push xchg out pop aam inc add sub andl pop inc add mov xchg add into subl repz ret xlat inc (bad) fidivl stos icebp mov mov imul mov out sbb nop rcll mov xor ret and repnz sbb loope clc mov sbb and sub addr16 jbe fwait stc mov xchg pushf mov sarl pop aaa xchg and stc add jns add jmp xchg enter mov sbb cmp test pusha sahf pop and push lcall rorb cmp out mov inc push (bad) xor bound adc imul subl (bad) xor dec push insb clc mov sarb (bad) xchg jmp add xchg adcb iret testl aad sub mov mov call jecxz or sub mov cmp jo lods inc pop push outsl movsb add sub jns mov lret xor pusha and int3 push dec push push lods decl push jl pushf xorb xchg cmp add cmpb je jae inc and add mov sbb popf cld mov mov andb push sbb outsl dec dec inc xorb popa rclb and and or shlb mov pusha dec nop mov stos pop in or or add movsb (bad) cmp mov les xor mov sub cltd (bad) mov sbb xlat inc js (bad) je rorb xor add mov mov out add jno push push pop aas mov jl (bad) add test stos sub inc dec cltd nop movsb enter pop or pusha out xchg add or aaa pop movsb adc js push inc mov flds ss mov or mov cmpb enter in stos mov xchg adc adc adc subb cwtl xorb mov adc add jg mov pop lea xor test (bad) faddl add cmp push popf xlat out lret shlb xchg add dec cli mov mov gs xchg inc xlat xor adc inc mov push adcl jno addl push sbb mov std push lods clc jo hlt ss rolb jle dec xor xchg or mov nop or inc xchg push push sub inc jns in insl pop push mov inc push mov push dec pop stc inc push addl scas jp add not cld aad fwait shrl lods fimull mov xchg negb andl scas add test jmp push and addr16 mov les or lods in dec mov notl subb add and or arpl and xchg inc mov test add lret cmpsl xor adc cmovae mov (bad) sub pusha push cmc into jp repz xor mov pop sub rcrl add mov inc push clc rcrb aaa pop dec cld int mov cmp enter add js mov ret and lods xor cmp loope (bad) mov or hlt jne loopne or jbe rclb pop test or mov dec cmp and scas sbb call aas pusha sbb jb add nop push popf (bad) xchg sbb push clc fs inc and addr16 in ror into mov lcall nop inc lods es pop ds lods lods and ds js cwtl mov sbb mov es aam mov mov add or mov mov loop ljmp jl push dec fs or adc je les jbe pop leave jb pusha subb mov sub add xor xchg pusha pop jbe or dec cmp lods rclb xchg dec cmp repz dec ret clc jno jg pushf add jae push cwtl inc or mov adc data16 cmp ja popa xchg test mov mov push cwtl add cmp dec fstps imul add cs and movups xor sbb xchg adc int xor sub in mov xor fisttpl mov stos (bad) icebp jnp mov mov sub adc jecxz pushf push push fsubl inc or sub adc inc les inc in sbb lock and jg mov cmp repnz mov and out sub inc and pusha add cmp or lahf cmp and adc les addr16 dec inc dec lods jl mov mov icebp pop fs inc push mov enter (bad) jo mov and inc andl mov fiaddl push pusha cmp mov call orb push enter push sub js movsl dec xor xorl pusha sahf cmp sbb or pushf int3 rolb call jl sbb cwtl add mov and inc sbb test mov int3 or cmp sbb mov stos and rcl dec or mov mov sahf push jecxz and dec in lds mov outsl cmp in pop mov ficom and sub and fwait or mov add das xchg jle adc and sarl add inc jne lods or loope pushf and and rorb sub data16 xor pop popa xchg add movd (bad) lock fstps hlt nop pusha add push mov js test xor add arpl cld xchg add xchg sbb in leave push clc lcall or cwtl test cmp mov xchg lods jo repnz enter inc mov mov mov xor imul je jge pop sub nop mov mov cmp xchg jb or jo nop repz nop cmp jecxz or mov mov popf jb adc call test sti add or cmp adc lock and lahf fwait adc lods xor mov icebp subl stos push mov jns adc orl sbb pop add dec clc xor mov mov sub add inc mov lods divb adc xchg push or add subl outsl and mov jl sub rcrb add xchg pop enter jns sbb nop icebp and dec scas lods cmp mov adc lcall mov sub in or bnd or xchg and mov test sbb push mov jae gs mov jnp sbb or lcall stos cmp cmpsl pop and fwait nop pusha push xchg cmp sarb mov or or sub stos shrl ja cwtl fwait test mov or frstor es jns dec fmull call aas cltd xchg in mov loop es mov add stos adc (bad) add push les add fs rcr cmp pop and pop je push or out call outsb stos or loop and pusha imul pusha push xchg insb sub or inc (bad) mov or or notl xor test inc adc push scas adc push inc or sbb add mov sub fwait pusha sti test and dec bound dec lock test das mov mov pop sbbb lods dec icebp inc aam loopne mov xchg mov and (bad) fmul jno add pop fcomp push fst notl xor and xlat scas mov leave jns adc call jns sub cmp mov shrb mov push fnstsw adc jecxz add out dec xor add stos xchg and xor mov ja xor aam (bad) fs ficom push jns mov xor dec enter ljmp sub rcrb push inc jae sahf sbb and es mov mov xchg data16 test mov xor add xchg orb pop aaa add cmp mov jmp call in mov adc xor push sub mov xchg jg jmp outsb push pusha dec jmp mov mov mov ds test loopne jmp dec jge into test inc xchg fsubs dec sub mov out inc rcrb mov in (bad) jo lret pop jno push rorl lock scas pusha cmp push and (bad) adc pop xlat and cmpsl test clc or (bad) jae nop sbb inc jl repnz cmp or aam movsb mov rorl jns mov xchg or mov int3 pop stos les popa sbb rorb in fmuls mov inc daa push lds cwtl pop pusha shrb into inc or nop insb add mov adc sti pop jmp adc xor sub dec mov mov aam popf (bad) mov adc xor and mov scas arpl jo mov pusha cmp dec mov inc add repz cwtl cmp push pop push pop inc rcr ljmp roll inc push (bad) cmp adc sbb test scas mul and roll push cltd in xor (bad) or mov xchg loopne mov push add stos movb adc inc xor movb out pop cltd cmpl or push fwait sbb (bad) adc ret popw jne add lock push js repz mov int icebp jecxz cmp clc popa adcb je fdivp dec loope repz ret jl sub adc or pop std cltd mov pop xchg shlb xchg loop mov jnp dec or out jns and xchg lret xor lock mov inc add int dec lods inc add and inc cmpsb sbb notb add fbstp cmp ds inc addr16 lock mov dec inc xlat clc shl (bad) mov outsb add test jb inc xchg mov lret loope mov pop sub loope clc popf xchg scas jno ja int3 sbb (bad) sbb loopne jle xchg std subb test pop mov mov sarl lods adc mov ucomiss xor or cld hlt or loopne inc fdivl push cmp fsubrs icebp adc addr16 push inc push outsb jge or mov mov mov mov movsb lcall repnz subb insl aaa jno notl pop dec pop enter pop mov xchg sub jge ret add out popf sbb nop mov in xorb sbb stos lock loopne jno push fdivs stos scas jo lods imul push jae rclb data16 add lahf rclb jns jo push sarb add jbe mov js je cwtl dec jb stc aam leave scas mov rorb lods mov xchg dec fnop and add pcmpeqd call lea cmp or or mov adc mov iret pusha jno mov (bad) add hlt dec in cld test or int repz adc sub in or xor adc adc adc inc mov loop insl pop test clc sub subb fbld pusha mov leave (bad) inc nop jg and imul test push cmpsl push jo xor leave imul mov in pop xchg and and xchg add das stos mov sub xchg hlt xor addr16 or mov cmp inc ret (bad) and xor (bad) jo rorb xchg mov dec push test adc dec in mov cmpsb rolb in adc push enter es and into sbb xor and shl (bad) push lods add pop and inc jae bound mov jns mov add mov shrb jecxz icebp xchg xchg (bad) push mov mov out xlat enter xchg push sub or pop in jge gs inc je stos or sbb dec arpl outsb out pusha sti leave (bad) jle ret aad call js test jle sbb mov (bad) adc mov inc fdivrp xchg test add sub add out cmpsb and (bad) enter cmp xor jecxz and in ficomp push (bad) lret jns add push jo push sahf cmp shlb sbb aad push popa sar adc xor pop xor sbb xor push inc push inc int3 es movl addl jmp inc mov sbb cmp ror (bad) push adc in divl fmul shlb jnp sti pusha jns add jne scas dec xchg outsl dec jg rol cmp pop enter fstps mov lds das int3 cmpsb fmuls outsb xchg lods dec aam (bad) and sbb stc lcall orl lret lret leave cmpsb jnp ds sbb jle inc (bad) and lods mov stos jmp push das cmpsl push push or xor cmpb sbb shll std dec jb lds push enter enter aam mov or inc pop subb xor sarl add jecxz xor fnstenv cmc out adc clc mov or out fwait sub push inc mov jl and iret mov xchg cmp cmp nop js mov mov outsl je inc mov ss nop enter jno bswap lret jae pushf nop sub pop dec xchg mov hlt inc cmp and mov sub mov xchg jno xor test iret sti jne fcoml push outsl aam sbb (bad) jl loop mov xchg or cwtl adc in xor push popf decl clc inc mov add jbe test add int3 fptan push sbb mov test nop add sbb sbbl push xchg (bad) mov insb add sbb test rclb add jmp xor and dec data16 push cmc cmp nop lea outsl jle cmp je cmpb dec sbb loope pop (bad) out lock in and rorb (bad) ror iret xchg adcl movb add lahf icebp inc or call and mov fisttp shlb cmp inc pusha xor cmp out ret dec loopne dec push or or clc xor pusha clc rcll cmp repnz loopne push sub ret aaa (bad) sub xchg mov in push (bad) rorb inc outsl fidiv add push inc sub inc and repnz lret push or popf add je incb ror push push sarb lea gs add test pusha stos adc mov insb add mov fcmove jbe add int3 dec lret icebp adc bound sub ja xor loope test test adc xchg pop pop pushf (bad) shrl or test lock pop add test inc lcall or sbb and sbb test stc sahf cwtl (bad) push lea pusha xor inc popa jl mov xor jne push shll (bad) int3 cmp lds xor insl test out movb (bad) pop inc and pusha cmp dec mov notb ret mov cwtl push (bad) or sbb fmull lret adc push decb out xor xor adc jo stos inc push jno mov lret rorb decb and (bad) clc movsb and add inc loopne xor xchg push out mov mov cvtps2pi push lock addl and enter enter (bad) sbb aaa (bad) ja mov mov pop sub sub sti imul sbb je xor data16 jecxz add jle inc adc std and (bad) rcrl push fcoml subb shrl inc (bad) fidivl inc clc insl nop shlb mov or pusha sub andb dec mov xorl add jns in imul lea push in jne sarl lahf (bad) dec and ljmp push rcl repnz mov mov adc pop cltd or add pop aas les test sbb add mov ljmp push pop sbb and cmpb push hlt (bad) dec inc or or cmp ds stos loope jle popa pop and (bad) sbb inc jp (bad) lahf ds mov and and dec push sti mov cmp and push xchg dec push je adc jge xor aas mov pop cwtl pop cltd test mov (bad) and jno and xchg cwtl in or jb arpl cmp inc inc testb xlat cmp aas cmp bound or or lcall pusha sub loop dec out fdivrp add add or or jb fdivs xchg adc mov mov movsl idiv nop sbb (bad) scas sar sahf je xor jecxz mov jl out int3 inc enter xor push add iret in mov rclb pop fisttpll sahf xor out nop ret add adc arpl aad dec es ds popf xor cmp ficoml add adc loopne sbb add mov and push or adc lahf popa or ret mov lcall enter or inc pusha fmull sar nop mov adc insb adc sub xor xchg and adc in cli repnz mov push add or test jno invd inc cltd jmp les xchg loop add or or adc arpl ret bound adc mov ficompl popa decl rcl pop ds adc sbb xchg mov mov cli ret jae test pop add outsb das fstl adc inc mov test jle cmp das lea sub mul stos and and xor pop mov out adc shr mov inc or xchg inc (bad) cli add fdivrp popl jnp or xchg pop ret and push add loope add push or and adc decb lahf das rolb add jbe sbb (bad) xchg cmp aas test mov loopne mov pop and mov jns add fnstenv (bad) cmpsl inc jo sbb xor add add mov inc imul sub push or and cmp adc push pusha cld pop adc out orl clc mov mov push mov icebp (bad) imul add popa dec and xchg inc sub mov pusha stc repz jno xchg std lret inc (bad) out in cmp push cltd adc cmpl or or push in xor and or lcall jp jo sahf int3 rcr inc cwtl dec mov mov jae cld inc jl xchg and cli ja pop movsb mov sbb pop out mov in adc and insb nop push dec sub cwtl mov xlat push or sahf push addr16 rclb xor loop jle add aaa or or subl dec sub add js mov cmpsl imul mov inc mov ja jg add xor sbb mov add bound mov mov dec in cmpsl inc lret andb ffreep cmp cmp push and mov mov dec mov inc lret lods ljmp jge mov jb dec inc dec bound call inc daa ret lock cmp std pusha cld pop rolb mov mov push stc repnz in outsb mov stos loope test lret cmp adc daa add repz adc lret (bad) xchg cli jae jl jg rolb inc add test sub adc and jle andl loopne add mov ja push js inc test imul pop push jl pushf dec mov add cmpsl mov icebp sbbl mov cmp xor sub in std push (bad) mov xor mov adc add inc lret clc inc sub mov add lock mov add push xchg push (bad) out mov sbb xchg fs roll loope es (bad) pop scas and enter mov and addb mov inc xchg and xchg inc sub cmpb push ss push or add cmp jmp leave jae mov addr16 les fldt add out push jne push les movsb lods (bad) fcoml sub sub jle sbb mov imul and mov icebp rolb out add cmp jb outsb or inc lods or jg jo add inc cmp pop js int3 lods js cmp lret mov outsl (bad) mov jge sub test outsb addl rcll shlb ret add in mov adc iret sbb and push dec inc loop shll add frstor in sub (bad) jge dec push jmp mov (bad) and dec (bad) int outsl jb pop cwtl jl loope add add hlt scas adc xorb mov arpl dec out pop jle xor rclb mov les std inc pop push lods lds inc jne (bad) sub add mov pop fldl mov inc movsb test xor nop test nop nop lods mov jb enter mov push subl outsl (bad) ja jo loope dec clc stc add add jb sbb mov ds shll int3 add dec test negb and lods sbb or pshufw inc int3 loop add fldt mov ds jl mov jae sub lods xlat fistpll dec mov inc xchg mov es xor aas mov mov leave inc pusha hlt inc adc scas jmp add (bad) push nop and sub fsubrl jne adc repz (bad) rorb or outsb xchg push popa dec push sub xor push adc and or jae pop leave test jg ljmp lods in add xor pusha adc add and scas and aaa or dec dec sbb jle sbb push and int aam and punpckhdq sbb lret ret ret or mov mov nop sbb pushf jg cwtl jge in jl sub cwtl mov or fld mov jle xchg xor sub and and rclb push aam ss lods ret fcompl pop push fbld imul and lods mov and ret add mov sarb cmp es loope dec jo xchg nop int mov (bad) dec sub adc es les or mov xchg in xlat adc std inc (bad) call ja fiadd in leave imul adc shlb xor dec in mov xchg xchg and push xchg mov inc sbb dec jp cld ljmp dec push push and sbb add stos mov les (bad) shrb fwait call mov hlt add mov add pop into bnd xchg xchg lock dec mov adc xor daa movsb lret and mov mov test and cmpsl (bad) sub and mov and insb call sub je adc jmp stos xchg push inc js insb push jo add cmp mov sbb add xor pop dec dec pushf pop aad sub mov add into fiaddl adc inc push jecxz jle test xchg xor adc inc or push lret fcoms movsl gs stos add fnstsw es sbb xchg jge mov es popa fisubrl mov fs jo lcall inc mov repz pop test cmp rcl orl cld add xchg or cmpb icebp dec pop or mov mov js orb nop mov scas inc inc test cmp sub rorb lret xchg inc insb data16 sbb loope out sub jo push mov in mov cmp ljmp push push into test mov arpl lea pop add les push adc out push push rcrb iret shl gs adc das or movups or push aas add movsb add inc out push push or sub push aas int3 mov insb shlb push subl adcl jns fist or add mov push jge jo xchg xlat int3 dec sbbl adc sub add mov mov add outsb adc mov pop mov sbb lcall dec add js adc adc xchg inc (bad) in push jl add inc or pop loopne js mov out rcrl mov mov es outsl add aas lods pop out in xchg cmp dec sbb fiadd stos gs outsl xor lock arpl mov mov pop cmp lret sbbl outsl jl inc nop lret or xor sub push shrl flds (bad) xlat mov ret adc sub fisttp jg (bad) loopne sub fistp mov mov js jecxz call add mov imul push rcl arpl shlb ret fsub mov inc dec (bad) jg add mov scas dec outsl pusha dec je nop xchg add xchg lods xchg cmp test jnp rclb or pusha pop and sub stc jle sbb lods jmp push leave (bad) xor mov stc sbb sub and cmp addb add iret arpl inc shlb or pop inc call adc js xorb adc test pop les and jg sub mov or or push jbe scas (bad) fadds and add xchg inc mov add out dec in dec cld jp and mov xorl aad loope mov mov xlat adc adcb shl pusha sbb pop dec call out adcb aam (bad) icebp mov mov xor xchg test xchg pop sub xchg pop nop mov adc push pop aad sbb push (bad) arpl pusha sti inc cmpsl pop or jbe rcrb inc xchg jge stc mov push and xchg inc adc mov and sbb in add aad adc and pop mov test push push iret js int3 rcrb in xchg or mov or inc jge movsb add fldl fwait mov lahf mov sbb lock push inc inc xchg push xchg dec cs dec sub inc (bad) (bad) xor or in js add cmp mov mov (bad) into jns mov aaa add xor idivl push in dec insb mov mov cld push adc push mov push out lock fisttpll dec lods cmpsb dec or add aad mov out push or adc push repnz cs adcb add (bad) nop pop out adc rclb xchg enter xor dec loopne add ret hlt loope sub sub and and jbe mov in (bad) rclb mov aad mov scas in insb fldenv aaa into inc inc in jg pop mov adc sbb pop add push mov sbb adc xchg test cmpsb lret andb enter sub insl sti cmp lds mov push mov inc aad mov sbbb mov xchg arpl push mov adc pop xchg add (bad) cwtl and arpl sub xorl data16 xchg rcrl sub bound mov add jns xor inc sbb scas pop das add dec jge mov jo movsl and loop mov jae dec pop push jle jmp lock inc shlb adc cmpl or xchg dec aas xchg pushf sub mov dec movsl push pusha jo lods aas out add fnsave or mov lahf add outsl int3 xchg push in leave shlb adc xor sbb and adc and arpl mov jo inc pop inc cltd mov xor push mov test xor adc fs mov sub adc inc movsb mov and and xchg int3 rclb sti push add jo inc mov aaa xor sbbl fdivr sbb add sbb nop nop sub sub cwtl cmp adc enter lea xchg sub rolb inc loopne pusha loope movsl mov shll or add push or aaa push mov fdivrs add mov xchg lods mov (bad) xor sbb pcmpgtb aad std lahf fadd scas jno fmul lcall or or push xor addl shlb adc cs inc mov jp or test push mov mov repz and cmp add cmp or xchg sbb repnz outsl cwtl test ds xchg mov pushf clc cmpsb lea adc pop mov rolb icebp sub push jmp cmpsb sbb sarb sbb mov mov adc das dec jge popa lret int xor iret xchg fsts push outsb jnp outsl cmp ja sbb in push loope cmp or nop pop xchg xchg nop cli dec lock incl std push repnz jl jl add or jbe xor mov inc ds cmp or xchg inc lock xor inc jecxz cmp or or xchg insb add jns sbb (bad) psllw sbb insb push mov inc movsb xor cli test imul mov lock jge add jmp dec cmp add enter pop push test outsl and add aaa xor mov lcall das xor shrb nop insb add sub xchg or cmpsb sub stos das jae mov push xchg mov movsl and push repnz mov mov nop or jl std popf push cmp sti nop mov push inc cld jmp arpl mov jl adc mov lret daa dec ret pop inc xchg roll aad xor xor lock jo xchg and test dec xchg stc xor add pop mov and popa add loopne xchg fiaddl imul icebp test sti or cmpl rclb sbb xchg dec int3 andb cmp fistl int3 mov nop je cli (bad) aad and push inc sbb sbb xor mov arpl jmp mov int3 xor mov push icebp add (bad) push xchg (bad) lret movd push xor insb or sub fwait les and (bad) push sbb orl add and push cli sbb (bad) xchg rcr jo je lret mov adc mov or inc pop sub push repz shll and xchg jl cmp cmp push popf push dec push jnp clc loope test adc out dec adc xor xor popl pop mov mov shll jnp cmc repnz sti mov pop fwait int dec movsb add (bad) cmp mov mov jno push addr16 mov jge inc add fadds addl add repz test sbb cmp out pop mov cmp sub imul add xchg mov pusha and add pop outsl xor xchg test pop test adc pushf push cwtl mov jnp jle xchg xor add (bad) loope hlt mov insb mov cltd iret or add cli xchg and pushf in xchg xchg movsb lret xchg insb push (bad) sbb mov into xor jl xor mov dec mov cmp mov dec rol pop out mov add sub push jge sbb or cmpsl mov pushf mov sbb push jmp inc lods sbb pop stos (bad) add mov cmp or push test sub and stos lds push pop fst pop and push mov mov pop es dec cwtl mov leave jae jp xor add mov test push js push insl (bad) ja je in cs clc daa ja cmp int3 adc pop push mov fadd rorl dec jl mov pop add adc pushf and sub mov or (bad) sbb outsl dec clc subb les pop lret movsb jmp xchg add (bad) cmpl das sbb dec mov lds add fidivrl jl pop jo jge nopl adc bound dec subb lock push (bad) getsec pop push dec inc in jns add sbb aaa add adc add jmp out xor xor in xor ja push adc jg imul xor pop sbb push outsl rolb sbb out jl sbb dec inc test insl movl sbb rol pop push pop xor ret ret sbb add inc pop arpl dec add and hlt lret xor push push push mov add sub jmp (bad) ja cld nop fildl push adc out test das imul jge clc adc cli lret insl and mov or pop bound call fdivs mov int3 movsl adc rcrl push arpl js mov xchg in jo xor xor jle push les in sbb repnz add sbb add insl dec cld loopne call xor jge shl loope jbe loopne mov push or cmp dec aas inc add push fisttpl gs or cltd outsl mov and xor jae cmp add push sub pop rcrl (bad) ds scas pushf jns ret mov sbb add push add and je mov xor mov or and or lcall test shl push mov pop clc jns,pt inc add jne push dec mov cltd imul xchg mov inc ret jmp fmul lret addr16 clc mov jb or xchg mov cmp test or loop hlt add lret mov cmp mov jo add and mov ss loopne nop js rorb mov add sbb adc xchg add pop (bad) dec xchg xor xor call adc hlt push sbbb inc js or cwtl xor cmp add addr16 in outsb test and das sahf cltd icebp dec sarb addb and aaa mov and notl lret cmpsl add jge,pt push pop fsub pop or rcrl rcr pop pop and (bad) add fstpt add inc orl rorb and push xor std and sub mov and push cmp inc inc add push adc ds roll xor sbb mov clc mov jge and mov jp pop aaa adc dec insl inc dec mov test pop dec adc adc cld sub adc adc in sbb xor inc sti jmp add dec (bad) aaa mov ret pop sbb inc add mov push test cwtl movsb iret pop xchg sbb push sbbb xchg inc xchg stos clc adc jae xor pop mov aam pop fadds fs int3 or enter mov xchg or mov xchg mov test addr16 add fcmove aam shll call fsubp call shrb les sub jge jo push xor add push mov push xchg arpl sub jge,pn adc orb js sub pop fcoms repz jl rorb clc adc mov fwait xor and adc jo jge mov inc adc xchg mov inc inc cmp xor pop in out loop cwtl pushf push mov xor jnp dec dec xchg sbb outsl inc and inc xor arpl xchg push test xor adc or push dec cltd pop mov xchg insb fcompl ret lret jecxz xor popf push into (bad) rorl xchg lock lahf inc stos fs out sbb int clc ds and xlat les xor inc jmp imul xor and testl aam js test add nop mov sbb dec sti sub add and movsb jl scas mov lret sbb (bad) jl sub daa fcompl ss sbb pop int3 js lret pushf and mov mov test cmpsl int3 inc les add inc sbb out out sbb sub mov call cmp pop subb sarb xchg lock lret pop push pushf jae xchg or out push xchg add sub push int in bsf (bad) aad gs adc pop dec dec test or add adc or orb sbb cs sbb mov inc mov arpl sbbb mov inc shlb fstl or add popa sbb or jno sbb imulb (bad) jb dec add cltd xor push popf and cmp sahf add adc sub mov insb mov xor dec or mov and pop or loop inc and imul cli or mov mov add xchg rolb test sbb dec lods mov or nop (bad) inc mov out pop cmp cmp or dec scas loopne dec sub arpl je and cmp adc fdivs sub adcb or add or in lret lcall inc mov addl call adc into repnz push leave push (bad) (bad) inc add roll push xchg aam mov jo dec je jle push test flds pushf (bad) mov xor xor int3 push mov sti and bnd mov lock adc mov adc lret dec xchg lods or inc clc jmp sahf roll adc lret dec xchg (bad) xor cmc xchg jl loope (bad) jle or mov xchg add xor sub or dec lret xchg (bad) mov je xchg pop pop fwait shll and sbb jno cwtl fildl push jnp mov dec mov adc add and xor mov add push mov (bad) xor adc add and in cli ss (bad) hlt pusha or out cmpsb mov mov push out lcall adc es add gs dec lds pusha call pop cmpsl test bound add arpl loop adc sub mov sbb xor hlt xor aad jo and or xor pop xchg cmp xor fwait or dec add seto enter jl xor fsubl mov cwtl mov hlt xchg repz loope fwait mov or ffree mov bound or push adc push stc or outsl mov outsb mov mov add enter sub pop mov add call es popa dec dec push sahf adc inc add int or hlt jl add xchg bound add jno pusha repz pop pop cmpsl test and shrb or mov dec or imul imul add int3 inc in cmpsl loope xor shlb ds add scas andb jb cltd in sbb adc or add aam movsb aad leave xor pop in sub movsl mov add loope xor scas add and sbb pop push and cmp sub push jne mov dec xchg push std insb cltd sahf sbb dec jne in add push nop lahf js and jl or jne loop xchg and fnop jmp data16 push shrb in nop lods iret push out jne in inc (bad) sbb sbb test enter dec mov cmp dec adc nop sbb add iret iret lock pushf ret push push mov mov cli inc and popa inc loope enter push xorb int3 clc stos push and dec add pcmpeqd mov cmpsl test or add insl dec cmpsb mov fmul mov gs add or push pusha repnz inc jg pop in orb out sbb add mov sub or inc test loopne mov or lret pop mov push add test mov or add data16 loopne loopne xchg test inc int3 enter adc adc bound lock mov push sbb rclb xor lret mov push dec xchg outsb stos dec test and sbb dec push nop aam pop push icebp pop in fprem1 call jg xchg dec add hlt cmc mov je and pusha push mov mov cmc addr16 lock call pop es mov jmp or or les sub cwtl jmp inc add cmp dec add add in or push out push idivl or sub cwtl add mov inc mov add push push mov pop mov jae scas xor xchg cmp push or adc daa push mov cwtl nop clc sbb js or add loopne jbe add mov stos cmp psllw mov out fwait jl pop inc mov cmp pop jl add das push lahf fcompl or jmp je mov xchg inc add (bad) lods sar clc pop add pop push aad push rol sub cwtl xor je and adc orb adc sbb js inc sti add sar lahf push in pop add loopne xor push es inc push push push aam call pop leave loopne iret dec xor popa pop mov or or adc or adc nop mov adc push test sub dec sbb adc jp sbb notb test sbb push add fsts inc inc mov adc rolb mov or mov add out inc add mov enter mov loope or enter mov cmp mov iret push jecxz or sbb pop cwtl andl test or sbb loopne jne stc mov jb (bad) insl lock rcrb and add sbb pushf and push jae adc enter into ja out inc dec sbb addb enter test enter pop dec adc int3 imul push shl inc add inc sub add mov xor into add (bad) popf lcall jae imul cmpsl or je clc fldz xchg pop xor negl inc fistpll mov loopne jmp jae je scas cld inc inc bswap (bad) clc fs test and xchg xorl sub loopne jge lea popf js mov add cmp fild cmc enter imul shrb call jne add mov inc mov lcall pushf dec je loop adc add outsb outsl lock mov nop loopne popa js and mov inc cmpsb jecxz mov pop mov mov std lock or iret jmp push sub mov in lahf cld enter inc fcoml mov fs or (bad) cmpsl icebp cs and fisub nop push cwtl push andb or ficom pop add into icebp cwtl pop pop add pop shlb addl (bad) add jae adc fcomip andb add add push scas cmp imul xor mov inc out stos pop ss outsl mov (bad) mov inc push aas enter jbe cmpb inc cmpsb cltd pusha push popf mov sub sub loope or js scas xchg (bad) icebp lds push push inc loopne sub arpl ds push (bad) jbe das inc lods jne and or xchg sub and xorl dec cmp jb or or call xlat jbe cmc inc mov hlt jno mov xor add xchg add arpl jae adc cmpsb mov add ja or add inc or cld sbb jno (bad) and neg xorl inc outsb mov les push hlt cltd cmp popf outsl andl or cmc cli sub adc popa ja iret and push psrlq fs cmp arpl fdivrl pop xor mov push xor lds enter jg adc sbb push mov int3 or cwtl cmpsl addr16 sbb xchg dec add push addb and shrb sbb aaa inc js or rcrb loope out inc test nop loopne mov (bad) inc cmp in (bad) ja add pop mov adc add (bad) aas inc enter xor sub inc xor cmp mov call cmpsl push ljmp inc sahf (bad) loopne push lcall mov jl jns inc pop addr16 inc add mov cvtps2pi icebp mov cmc jne rcrl pop jl lock mov shlb sbb mov add push push pop xchg sbb pop (bad) lock arpl stc inc rorl and negb (bad) push xchg (bad) lds jns adc lret fsubs pop inc sbb popa pop add aam adc mov jl add xchg loop icebp iret negb fwait sub sbb leave cmpsb ret add sub and (bad) mov movsb imul cmp (bad) cmc jge faddp and loop pop aas or aad adc sbb adc inc loopne ret movsl popa mov xchg jge lret loop sbb aaa add (bad) pop xchg mov call and cmc inc lods stc clc mov (bad) imul pop iret sbb xchg int3 sub hlt or mulb in add ljmp add pop sub add sub ror mov push pop xchg sub stc loopne pop inc addb and adc je popf sarl or jl les adc pop loop xchg add pop subb andb sbb ja rclb jl add popf mov cmp loop cmp aad call sub xor and subw loopne stc adc fnclex and xchg and jle sbb sub fmuls mov sub xchg push nop fucompp stos mov push pushf add das mul fildl pop out loopne bswap sbb sbb rcrb rorl add sub xchg xchg add cmpl xor js sub loop je fcoml hlt loopne cmpsl pop add ljmp or pusha out sar add jnp xor (bad) pop jne xor sub push add int pushf jns rolb in or lds imul inc cmp call icebp pop adc inc push jg (bad) jnp fadd xor stos pushf sbb mov (bad) fistp out sub jnp imul push cwtl dec out xorb inc out mov mov ss mov adc inc xor push sti ret imul add add testl test inc fcompl (bad) jge adc lcall pop pop ja add nop loopne arpl and cmpsb leave jo or pushf and inc dec inc mov ud2 lock pop pop fnop data16 add lds add pop roll test sbb or adc and jns push subb add sbb jb push adcb sbb pop mov aam int test push add or dec test add int xlat call (bad) dec mov subl mov in dec jo pop push mov sub xor add rorb ljmp popa push loope add jb jmp lods mov and nop xchg pop push aaa daa lahf inc and add cli pop loop pop xchg cmpsl test fsubrs or mov xor rcrl dec lds js or loopne push jl pop icebp and in adc add andps sti pop out pusha in stc adc nop dec pop cmp mov mov hlt xchg push je ret nop cmc mov adc add xchg dec cmpsb icebp mov push pusha (bad) push je pop out in jns dec or rcrb push cld sbb cmp imull xor xor les pusha cs xor dec mov arpl gs insl jo adc es mov pusha jnp add je pop cmp bound scas sbb or int3 test sbb fildl mov daa xchg add adc mov mov lret repnz xor mov add rorb pusha dec adc (bad) hlt cmp jp sti adc sub lods sbb mov sub cli cmp cmpsl outsb jp rorb fimull lcall cmp sub xlat push cmp and add mov and mov rclb push xchg (bad) xor rcrl push test mov inc mov add pop je (bad) out push in pusha out jmp jbe insl imul cmp mov je (bad) mov fsts movb inc push ljmp cmp jnp pusha imul (bad) dec xor call jb dec mov loope aam pop inc insl xchg pop popf mov or test add mov mov xchg mov loope dec add popl sub (bad) sub mov out dec add xchg mov adc loopne mov out adc cmp imul inc or and inc rorl rcll cmp outsb loopne icebp and outsl repnz (bad) mov adc aas xor scas mov and inc repz jl and lds (bad) fisubr xchg push scas add fiadd xchg mov cli clc push mov mov lock rclb mov test push mov or xor cmpsb pusha pusha sub nop mov les inc add (bad) push mov fbld and ds add add daa pop mov decb jno es mov push add ja mov lcall lcall push add xor push and out mov xchg sbb or dec popf fsubrs adc push nop aam std push xor iret and sub adc mov leave pop and lret and pop clc and push inc cs orb mov mov adc aam movsb push and das pusha sub add sbb mov dec dec pop dec inc add or lods movsb dec fs push jge nop add repnz jmp scas or mov add lcall xchg xor test test mov mov push push push add mov dec pop mov jl insb fs int3 rorl in pop loopne pop mov addl and in outsb pusha cmp je adc out (bad) inc dec pop adc lods jle adc loopne cmp outsb push ss pusha jle test in add loopne outsb xor aaa sub add pop push outsl and (bad) loopne int push iret je pop sbb (bad) flds xor fcoms dec sub and pop cmp push mov bsf and popf adc xchg jne lret aaa test xor sbb cmp lret and jp add inc dec loop je mov int3 and adc jge add adc cs pop hlt lock sbb xchg push ret jle mov dec cli xor sub adcl iret lret hlt or or daa inc pop insb imul or cmp test jb mov iret and or push push adc jle nop sbb bound sub fdivrs cli std push xor push rorb add jno pop and int3 sar ss arpl adc jns xchg adc gs or cmp pusha push sub xor fadds or cli or popf aam sub ljmp (bad) cmc adc je jecxz inc cmp es rcll loopne jns mov adc js js cmp mov inc cmp and loopne shll aaa nop insb push ljmp jno jne cwtl nop in mov adc or int3 les add lret loop xchg inc sbbl sbb and int push inc adc add ss ds or jge or or gs or dec test fadd pushf xchg hlt rclb push mov pop adc or add lret dec xchg push dec js lds push adc test cmp inc xchg clc (bad) insb pop inc fdivl into and add adc lods xor and inc dec or (bad) adc cmpb jecxz inc pop aam push xor insb mov jle or xlat cld add jl adc inc test cmp pushf mov rolb lret frstor xor dec push xor adc or dec pop dec sub adc clc nop and dec push add jo and lock jbe xor cwtl dec xor inc mov push mov fcoms add adc outsb aas sub add insb sbb inc aas (bad) testb adc les rorl sub xchg xchg push inc je (bad) adc out add int3 lahf push leave lock jl add mov add sbb je cld out pop add and dec or cmp xor push mov pusha lods and fsubrs in xchg and outsb rorl mov or lock cli add call mov mov leave (bad) pop or (bad) pop xchg hlt add (bad) hlt je mov incb add xchg push inc scas adc sbb call inc iret int3 int test call outsb pop es js mov sarb pop lahf aas out and mov fidiv test stos shrb loop inc inc stos pop inc add cmp mov sub xchg lock push dec add pop mov adc inc xor dec mov outsb lds addb lret dec in jo pop dec ret add pop call add jns xchg stos lahf clc sub add je movsb sub kaddw or mov insb add dec push clc cmp int3 fwait dec push inc ret or jb mov dec popl lods sub cmp dec mov push cs adc int3 xor pusha dec rolb push cmp dec mov inc sti nop add inc dec push cld add cmp dec inc and adc imul (bad) sub adc add add mov mov cmp int or rolb add dec dec jl inc mov (bad) (bad) pusha ficompl in cwtl cmpsb add adc scas inc ret daa sub xchg xchg or xlat xchg mov sbb cltd pop pop push or lock pop inc mov in adcb movsl hlt cli mov xor xchg push and mov fs popa cmp pop mov add push insb and ss dec movsb imul rcrl popf imul test mov push and aas mov add ja cld mov pop test xchg cld mov sbb cli orb sub stos stos add cmp pop rolb jo aad negb add sbb or stc movaps xchg jecxz rolb icebp and inc movsb in iret mov andl and cmpsl mov adc test lret mov sbb ss das push pop sub mov jmp js push push and (bad) (bad) add sbb pop (bad) and inc scas dec and pop inc inc out push cmp xor push mov repnz sbb out sub lret or outsl jno adc ret sub dec pop sub adc xchg (bad) and out movsb icebp or aaa into adc cmpsl pop and xchg ret pop out enter subl iret mov add inc add dec adc add insb repnz and adc push mov add (bad) aas lret iret cmpsb test pusha mov fadd xor sbb sub lret js and cmpsl sub loop jae pop jns pop stc jmp iret cmpsl shlb xor adc mov sbb sub aad dec sub adc xchg xor add movsb loop mov xchg aaa in inc ja jbe xor xor push lock add inc outsl xchg daa pop int3 ss pop mov dec adc push pop xor sbb pop push jb adc aaa adc stos rol sbb imul cmp push js dec adc ret out data16 xchg pop dec mov mov imul addr16 fisubrl mov ret in mov xchg cmp xor cmp pop or (bad) ss lods fmull imull adc xchg fiaddl cmp jle push jne and mov mov test andb mov xchg adc mov mov fwait leave xor inc mov adc sub pop xor adc loopne mov sahf shlb add (bad) hlt pop or jecxz clc adc lahf aam mov add outsl xchg and push nop pop sbbl nop sub aaa add jne and sbb mov std pop mov shlb cmc or push decl insb add gs fidiv js rclb ds fcmove inc sbb xlat test jecxz stos pop js rolb xchg add cmp push out stc call inc mov sub dec aam mov adc xchg lahf xchg mov push sub cmp cwtl sbb and push fistpll mov mov ss jbe ror int3 ljmp sub lock nop push dec cmc add cwtl test pushf popa dec std adc push pop pushf adc dec sub outsb fldt pop xchg fs and adc adc jo mov push xchg subl and pop sti stos lods nop outsl push test add popf (bad) or sub mov aam scas add inc enter or and loopne xchg mov xchg insb pusha adc fwait test pop push lcall inc (bad) mov popl xchg and and pusha loopne (bad) mov jno inc les sub adc adc dec sub add fildl call outsl icebp orl add lcall adc xchg (bad) arpl fimul cltd inc jo rclb jg jp mov fildll push rcrb nop push cmc mov adc and inc dec push lahf iret add jo xchg or movsl outsl cmp shufps jle pusha pusha pop sub jecxz jno subl scas pop xchg mov bound jmp fimull mov (bad) lret nop addr16 push push jmp pop jns xlat bound shr add pop xchg aad dec adcb mov sub mov je push add scas insb imul into in mov (bad) mov cld add popl pop inc call xor cli mov scas adcl and or dec sbb add popa js and lods pop add mov push xchg and test inc jmp add xchg mov xor xor add dec push lcall (bad) enter cmpsl sub mul mov add jp sbb out scas push add mov bnd dec and push movsl scas repnz jl in mov or sarb (bad) (bad) test sarb in outsl (bad) lock out insb sub jns (bad) aam pop inc xchg inc adc lds add adc scas das and adc fxch jl adc inc insl add fcoml pop stos xchg adc orb cmc mov rcrb or add sbb jbe inc and loope and ja loopne outsl add movsl movsb js nop or xchg dec sub push push add lcall mov dec (bad) enter cmpsl js (bad) and jge or test cwtl add fnstsw inc push add movsl (bad) outsl cwtl loopne (bad) shrl or nop lea test loop mov push dec iret dec add cmc sub inc dec pop fdivl dec shrb popf enterw iret lds (bad) jne mov test daa lcall adc cmp (bad) cltd pop scas fisubr lret jo or (bad) test sub cwtl enter mov mov rcrb push add pop in movsl add mov cmp xchg sub adcb mov push dec lods shrb push cwtl orb clc jle and js xor xorb in xchg add mov nop jb nop cltd lea push add and sub cs rorb xchg pop mov sub dec or mov mov push aaa push jae sub inc shlb inc dec inc sub add test push mov mov jg add jp add sbb pop dec xchg inc dec and jl xchg pop xor pop aaa orl add xchg jno dec add (bad) adc mov inc push inc in add dec xlat lock lea repz pusha pusha sahf cli jno push hlt xor and mov xor add ss cmp stos or inc mov nop movsb or fcmovbe imul fsubrl push sbb repz push out adc or mov incl xor pusha jae inc rorb sub or pusha ja loope xor shrl cmpb xchg cmp xchg in fmul mov pop xchg add rolb fs (bad) xor test mov js addb fdivl jmp inc insl enter fisubl and jbe add and add ss fwait sbb daa add into push mov test and sarb test and mov add mov sahf adc movsb fimull pop inc loopne lahf loope (bad) out add lret mov ffree pop push push lret add inc mov faddl cmpsb xchg mov loopne or int js nop adc dec add lds ret and pop pop and fidivrl scas push test mov fbld imulb mov jo mov nop dec jmp push mov jmp jbe rorb repnz pop test mov add push outsl or mov ret loopne mov lods dec das pop dec mov push gs push fmull pop add popf cmp fldt enter subb dec fldl xchg cmp or (bad) cmpsl adc lock adc push loope scas popa pop shl push outsb (bad) xchg dec sub loop ret sbb pop mov int3 test mov and jg dec mul pop add sbb cmpsl add or orl int3 xor sub sbb xchg inc pop mov pop sti dec hlt fdivrs jle push cld mov outsl pop inc pusha aam js inc testl jp icebp in dec sahf xchg (bad) pop xchg inc lods mov add iret in nop outsl jp ds call sub out das sbb outsl cmp pushf push lret mov add mov jno and in push js js ss sub test pushf fmull scas mov pop inc xchg cmovg xorl mov jecxz jecxz call cltd loopne adc rorb lock add add pop inc sbb clc repnz pop mov pop sub leave mov pop test addb inc cmp bound cmp add neg aaa and adc push mov mov scas mov sbb xor dec rorb add mov jl test add nop cmp (bad) sti mov bound loop xchg push add pop sub repz inc sbb add pop daa lock outsb sub loope pushf and jno fild icebp mov cmp push in dec fpatan (bad) call add or mov loop mov inc imul int repz sub into je cmp push pusha icebp inc push inc out sub push outsb sub add loope decl add test sbb add dec push imul testb dec sub ficompl and cmp cmp sbb popf pop xchg add jecxz sbb push pop and sub pushf or popf ds test dec in xor hlt enter pop lcall dec cld mov repnz test jecxz (bad) lea and xchg adc sti push arpl mov jo nop mov into add and stos jecxz add lret xchg mov mov add and in adcl inc adc adc jp addl sbb push addr16 mov addl inc sbb ja sub lahf inc mov bound ljmp or xor clc push push fucomi rol jo jmp stc inc pop cs xor jo rorl cmpsl dec xor push and dec add subl dec inc sub mov push stos push dec mov movsl call sbb loopne enter mov mov xor in push lods sub ss cmp add inc push mov stos xchg xor pop add insl fstps jno and jns sub ja scas int3 fdivs mov call rolb sbb push jne cs pop mov add cwtl add ficom jmp add sbbl jle jbe cmp cli das fiaddl inc push arpl in push leave mov mov jne sub ljmp inc movsb sub lock sbb jle inc inc mov les inc bound fs nop mov jl orb arpl dec je adc pop jns adc push les sub sbb mov lea in lret adc pop add lds sbb fsubs sub push xor mov sbb mov cmp xorb mov test daa adc jns mov outsl adc sbbb pop sbb sbb cmpsb jb enter and dec enter adc xor in fcompl and and movsb jl idivb mov js xor and push lock movsb xor dec test shl shrb sar sub fildl int jo push sbb mov cwtl btsl xchg inc fsubs inc jo or add ds sub add lock loope sbb ja cwtl xor (bad) int3 adcl rolb mov mov push cli fdivs dec xor aaa stos dec cld xchg jns xchg xor sti add adc jns addr16 adc sub push add inc clc ret notl sti fdivs pop movsb mov or imul orb add push xor adc outsb call lods and out mov (bad) outsl xchg sub dec scas pop mov or pop xchg push add xlat adc enter (bad) sbb and fucomp fldl mov mov mov jl cmpb add fstps xlat jns cwtl in nop or xor and mov adc cmp push push and xlat add in lea (bad) popf scas pop iret sub dec test dec or jns popf jo je xchg sub xor jbe push sbb movsb andl icebp insb leave test sub mov inc sbb sti xor addl jbe les add loope xchg icebp stos push add iret pop or loope xchg mov mov cmp ficompl and push and cwtl adc push cmpsb mov loope xchg repnz imul nop xor orb dec mov sbb gs mov adc xor outsl mov jns int3 js or test fsubrl les mov adc out sahf xor cmpsb push dec sub clc add dec sub add dec pop enter inc pop push sub out and pop nop fs pusha cmp das out push xchg es gs add nop pop (bad) cs mov cmp inc cmp add data16 or adc or mov add (bad) push sbb insb add jbe mov pop inc loopne dec repz out push push inc cwtl xchg add dec dec in cmp aam jns inc inc aad xchg mov add adc add ret fs (bad) dec insl xor pusha or shrb cmp fisubl (bad) out jo aad jae dec sbb cwtl loope pop dec and sub sub xchg outsb insb sbb mov int add adc in or ret dec outsl mov enter jle and adc or mov add enter pop (bad) add sub pushf sub imul mov test fwait mov dec in sub fisubrl aad lahf sbb clc movsb mov mov jo add fwait inc loopne out inc dec add xchg inc jo push loopne cld mov sbbl sbb jmp popf pop xchg adc and bound and leave data16 sahf inc aaa mulb pop mov push mov cmp lahf push mov adc mov leave insl test push sub aad push inc iret enter adc inc push xor mov mov dec pop cmp xor clc mov std sbb mov dec enter adc add cmp or mov mov ds in push push or xchg pop cmp std mov xor fcmovu rorb pusha inc and mov xchg test mov pusha xor imul cmp or adc in rcrl and lcall mov fsub aaa adc jne push push out outsb xchg inc insb fnstenv xchg cmp sub test cmp push adc testb xor fwait dec shlb mov sub xchg insb scas outsl xor add out or xchg sbb call dec adc jns pop dec out jl std jp loopne ja cmp xadd dec icebp je push loop outsl or jge add inc dec flds rcr mov sbb push cltd sub or je mov fmuls or dec lcall lahf mov inc push add das add fild fcoms hlt inc in mov clc cld add clc in pop mul in and loopne cli adc adc pop xadd dec pop lret nop dec mull bsr sbb xor mov jne xor xchg jl pusha int lret inc cmp add lea xchg leave xor xchg add jns hlt pop dec xor cwtl jo outsb (bad) js mov clc jmp adc jp mov and int mov sub pop out (bad) shl add xchg mov push bnd icebp lock (bad) mov add out test movsl jecxz pop xor dec inc std mov push loopne int3 cmp enter add pcmpeqd call aam mov int3 add cltd add call ret adc aaa rcrb mov fmul cmp dec incb lods mov mov lock add xchg incl call scas cmp cwtl dec sbb add je js mov mov push or or adc mov push or (bad) push jle call push fwait ss mov dec hlt mov add adc sub xchg enter push call in sub out push adc popf punpcklwd pop sbb mov or push xor xchg push data16 nop jo inc sub data16 ja (bad) arpl xchg jecxz fs addb jg outsl pop stos fldl inc movsl add push xchg (bad) popf int3 or (bad) js add dec mov xchg pop rcr cmpb pop je push xchg dec dec mov aam dec pause lods xorb loopne inc sub adc mov jb xchg adc dec add push or add stos adc mov and sub jl (bad) imul cmp lods jns cwtl (bad) dec push imul add fs int3 rclb and jl stos jp clc lds imul jb mov sub enter add loope adc jo xor jb pop insb mov cmp scas mov and sbb repz mov (bad) dec xchg fmul mov loope mov es (bad) dec sub hlt push jmp push je add loop dec outsl inc cld push orl jbe add dec ds sub std adc and fmull dec ret sarb imul inc xchg sub adc mov fsubrs and mov add shlb aas cwtl pop dec adc adc or pop add ljmp lods inc push ja pusha or mov jae pop xor inc inc inc call into les dec (bad) xor ljmp xchg sub dec adc bound jbe loope jb xor jecxz inc pop clc adc pusha sub cltd cwtl xchg xor push fucomi nop xchg dec leave mov mov mov out jl inc mov (bad) mov mov jbe mov fadds inc push sub mov adc sbb and movd stos pop or bound cltd fdivrs insb and pop fimul mov xlat jecxz mov lcall add (bad) add sub fdivs mov pop fidiv push ja add in inc cmc mov mov js mov mov jo adc xchg pop das push cmpsl icebp das add mov lods rorb inc pop push sub and in and xor mov rolb dec out lock inc sub pusha adc (bad) xor (bad) xor mov xchg xor (bad) bound jle push into xor dec mov inc int3 inc cwtl popa push push sub test inc inc test xchg sub mov inc std notb push and in xor mov (bad) lods sub mov jnp lret mov cs mov in dec lret xchg pop cmp (bad) fsubs mov rorb cs popa mov adc mov int3 iret add inc std outsl mov cld inc mov fimull insb add in sbbl stos loopne shrl in int3 nop aaa adc lods push or mov xor in inc dec adc fmuls sbb and jg cli shlb xor hlt movsb mov cltd sbb cmp loope enter dec bound mov adc outsl jno xchg test xchg cmpsb push sub scas inc dec inc dec cmpsb push inc sub (bad) mov and call adc in pop sub stc adc stos push int3 loopne xchg or shlb int3 shrb mov jl insl mov push pushf add xchg xchg xchg inc and inc sub push xchg sub jl fucomp lock dec ja xchg mov and gs mov aas push adc icebp int3 and jbe add sahf push nop repnz sbb shl push aam (bad) cld pop orb or nop xchg fs dec xchg dec test add jbe roll test mov jns jp jnp and push addr16 ficompl xor add outsl cld sub out js adc lods loop jbe pusha and movsl xor enter cld ficompl nop push lahf gs dec adc push inc jnp push add fdivrs jle subl inc push xchg push faddl rcr jp into rol daa int push hlt and mov xchg jbe add cs push sbbb fwait add sub outsl add jo mov in sbb pop fimul xchg test jns inc rcrb xlat test xor mov lret orl push mov mov add mov ljmp in or rolb inc jbe ror out sub pusha je push mov (bad) mov mov lcall cmp aaa nop xor inc cmp not mov or sbb daa outsl movsl (bad) aam jecxz rcrb xor shrb add jnp je adc repnz imul xchg pop xchg loope adc add sahf pop push out lret sub and mov lret sub and mov pusha cmp or stc and jl add insl cwtl push mov sbb or jge movsl add xchg sub xorb or and sub cld pop xchg mov pop adc aas adc xor inc inc pop add mov das xchg cmp pop jmp cmp pusha xor js adc into adc call xchg out mov divb add mov dec jg xchg push xor add adc aam loopne out add push push jl outsl int3 add jo jnp mov cmp cmpsl xor inc pop test dec pushf add test das mov dec nop outsb cmovl jge js push xchg or fldl inc xor xchg out in sub add out fadds rcll cmp (bad) dec xor xor clc ret sbb (bad) arpl rolb and add push add bound test popa sbb les push add inc notl iret faddl inc addr16 mov dec pop push mov andb add jno ljmp aam pop ljmp outsb xor inc rolb xchg mov (bad) mov fistpll into inc xchg sub xchg adc sub cltd xchg pop (bad) rclb repnz cld outsl dec cltd mov (bad) loopne aaa icebp add loopne xor adcb (bad) shl xor jnp jo mov (bad) (bad) pop rcrb fstl jo mov push xor mov mov pushf or cmovno test int3 addl dec test mov inc lock inc and push cmp pop fiaddl and lret cmc mov lods test rolb lds lcall add sub xor stc adc pusha mov cmp sub out mov aad (bad) cmpsb xor inc pop mov js repnz movsb dec leave loopne push test add negb mov pushf or sbb sub in sbb sbbb pop add aam fsubs repz jle pop icebp pop inc jns xchg hlt sbb jb add jne pop insb in jnp jmp lahf sub jl pushf aas mov cmp xchg pop adc xchg gs add jle adc in adc mov imul sbb pop cmp mov gs test outsb adc mov push add sbb in jne mov es dec js in push popa or xlat pop pop loopne xchg and inc sub daa rorl mov inc inc (bad) rclb sub inc cld outsl add or dec and out jg dec mulb jmp ret cmp int3 js call lock into addl xor outsb xor sbb sub mov das repnz hlt mov sti iret add xor and sub and push loop lds aam sahf or fisubrl jmp jl test and inc jno xor jg ret push mov imul inc loop ficom add imulb dec cwtl in pop xor clc js cmpsl shrb and cmpl jae inc adc cwtl push inc lock sub add in mov lahf test adc (bad) mov mov add cmpsb test jns shrb push lahf xlat push inc add in mov and jne (bad) cs fstpl push cwtl cmp aad jg push mov add mov and pop or mov fidivrl and pop inc fs out add push test or or aas inc loopne mov and and xor jle and push add jae sub inc movsb and popa xchg sub add in pop dec add stos call and cmp xlat in push mov mov inc je mov adc dec mov arpl fcomps fldenv call sub xchg test ds xor add xorb leave dec out pop fisubl inc jbe outsb cli jecxz inc ret jo nop fdiv jecxz js pushf popf into out and inc ficoml popf in jmp push aad jle xlat cwtl add mov stc adc mov adc lea sarl fisubl fcoms in jg mov mov imul inc movsb xor flds sbb mov or (bad) fistl (bad) cld mov mov gs dec in es inc add mov rcll iret das roll js rclb enter pushf insb fstl sahf enter (bad) aam mov pop xchg loop inc push lar jg nop xor (bad) push push jb xor mov nop and and adc fs pop in shlb das stc and lods or in pop call (bad) js mov pusha mov push mov rcrb cmpb out pop cmpl and xor arpl jns jmp add out ret stc lahf and sarl pushf sub shll mov roll inc xor in das dec scas loope lret popa insb xor fwait gs stos (bad) dec mov enter fidivr mov shrb and test jge mov bound dec jb mov enter repz adc nop xor outsl ja cltd mov sub js push add or xor jg mov cmp fldl push pop sti xchg mov cmpb out insl dec mov push adcl cld pop mov push mov pop pop scas sub nop add mov in sub mov sbb mov pop add sub sbb and mov pusha cld js mov divl xchg loopne je lretw or test outsb inc mov add loope js sub mov push cwtl loop andl fimull mov or sub inc les mov inc dec adc push inc into add xor subl pop adc nop jl xchg cltd or inc dec cld push js rcll out cmpb lahf add xor out fidivrl dec mov xchg dec lock scas adc dec out add inc add int nop push f2xm1 add push sub leave mov cld scas outsl xchg xchg or rolb sbb outsb mov push pop cs pop add mov jge and (bad) jo adc js fdivp shlb add jns dec jecxz add jl mov cmp out mov pop mov jle lock les push nop add dec dec test sub add jbe (bad) inc mov loope ficoml dec push nop pop pop (bad) fcoml pop push xlat in add out lret stos add popf mov into fldl xlat push pop lds jbe mov jmp inc or test sub cmpsb js add in inc out xchg add adc dec mov add sbb cwtl mov pop sub rolb pop leave pushf jmp jo mov inc xor shll jo roll adc daa loop adc fsts adc popf sahf push aam adc jle lods les hlt fnstenv shll cmp cmpsl (bad) dec js fs scas in cli adc xchg dec pop cwtl push mov adc loop fldenv and mov and mov xor xor add fldl dec (bad) aad push lods dec mov das adc mov push bnd outsl ret mov sbb aad xchg call shrl cmp fiaddl mov inc test scas (bad) adc or lods movsb hlt (bad) (bad) mov add xchg add inc inc inc jp mov std push or and pop call sub mov mov sbb insl mov data16 xor rol adc nop xchg rorb int3 lods stos clc js push adc mov pop add or popl mov dec push lods stos push int3 mov or xchg loop cmp adc fnsave sahf cli add inc es mov sub jo inc dec cmc fisubl (bad) leave sbb adc mov outsl jmp adc push add roll js fstpt popf fs cltd or popa inc xchg movsl cmc js icebp push dec mov and mov or popf push mov mov xchg in aaa mov jg push mov xor fadds (bad) or adc mov push fcoms js fidiv push js in push push in mov insb adc js sub adc lock js movsb ficomp enter popf jbe out jp add inc js add gs xchg faddl call lcall cltd mul orb mov xor cwtl adc mov out cltd sahf add out and dec pop push dec sub pop cs mov mov push sub in sbb add cltd jno pop scas call pop sub push lock xchg jns ljmp pop mov fldenv stos dec test mov sbb rcrl xchg cli add nop inc add and mov xchg addb rcl cltd add cmp adc mov and inc call (bad) fmul add out add push in scas xor and pop pop bound sub addb lods shrb mov pop add hlt outsl push (bad) dec std lcall and jecxz push jb test push add xlat test out in xor inc mov push add (bad) mov push mov rolb push (bad) js sbb sub fisubl push inc mov rolb xor jle movaps adc xorl pop adc and ja xor jmp add and aas add push out ljmp shl subb xchg sbb imull inc (bad) xchg sarb inc jnp push mov push ljmp dec mov push mov push xor xor pushf push imul popa lods mov arpl add in js xor imul push pop adc and jmp popa andl cmpsb jge (bad) mov cltd jp lods fisub aam add int3 sbb stos mov (bad) idivl int sub and jl lock inc jl adc sub add jg andb int js pop push mov add das jp adc jle mov repz dec rcrb push push mov sar fsub notl pop ljmp dec and jmp pushl sbb push and dec pop push pop lock (bad) repz sub je js xchg add and jecxz mov mov pop es enter push pop jmp push adc adc sub dec add and jmp call inc sbb addr16 adc gs and in xchg and pop xorl sbb sbb xchg cli pop sbb cmp cwtl push jmp sbb in orl lret daa mov xchg fcomps popa test fisubr sbb push ja jno clc hlt xor (bad) popa mov ret add sarb frstor int3 mov and mov lahf cmc adc mov (bad) lock fbstp push popa rcrb clc jp repnz adc mov iret push inc out lock jmp pop shlb and pop fistp fwait adc dec jge xchg mov (bad) mov out jl sub loope movsb mov adc and loop add out cld mov fmull mov test and dec inc jo jl inc int3 cmp test dec push cmp add xor decb and sub sbbb xor cmp cltd inc pop xor xorl adc pop fmul pop hlt sbb and cmp test jns push lods adc test fnstsw mov and xor xchg hlt std mov inc pop push dec dec xor (bad) mov mov sub adc fiadd xchg movl xchg (bad) movsb mov lcall xor loopne loopne repz add sub inc in mov rcll push and pop mov jp xchg and pop in mov pop sti pop das js (bad) bound pop dec movsb (bad) pop cmp add jo or fsubrp imul and popa pop adc pop jne pop xchg and shr push fisubr mov adc lock bound mov data16 shrb (bad) arpl not mov adc cmp pop or jge cmp push ror adc shlb and nop sbb sub dec sbb and add enter mov lock fdivrs cmp icebp fdivl pop rolb lock scas sub fsin add sub mov and mov pop sbb (bad) je in adc jo or out popa ficomp (bad) xor or bound pop mov xor mov (bad) test or inc rolb ret (bad) mov in add icebp imul int sti jno mov fsubl ret (bad) in jo jp lds or movsb es js nop pop add dec pop xor stos repz xchg sbb adc leave pop cwtl movsb orb repnz (bad) push sti mov inc in (bad) int3 adcb add inc test movsl ret add sbbb add loope or stos faddl mov pop les mov push cmpsb and lock and adc shr push enter push int3 adc adc gs (bad) and adc lock pop bound stc cs sbb sub jae mov adc sub mov call adc inc pop in xor pusha add rolb xchg pushf stc add loope daa add sub push xchg mov call ss insb in iret add mov pop mov fsubrl fldcw xchg pusha mov push mov cmpb es cwtl add ja xchg cmp and sbbb scas and and jmp dec lret add adc fs mov jo mov pop nop xchg inc inc test jae gs repz mov adc adc dec add movb into and repnz push xchg inc divl and xchg adc mov and cmp jb lods inc cmp pop xor or aad inc adc dec cmp (bad) mov fstpl pop fsubr or xchg and rorb inc je cs sbb inc jl popa inc daa add fcompl push inc add and cmp dec inc jge les nop add mov dec pop rorb and and loope rorb mov add in lods and mov and inc ret and stc pop push rolb mov pop loopne daa push xor mov das repnz fcoms sub xor xchg ror jo clc push cmp mov dec jo rorl sqrtps pop jne push jmp inc push out repnz aaa pop je mov lods xchg or add shrl stos mov xor sub cmp bound subb inc or push fisttpl add les mov and jb pop jne add jnp divl loopne mov mov inc cwtl add lods pop fisttp dec jmp sbb fdivrs sbb and adc aam in in xor and mov xor sub rolb push imull int3 lret push cmp and lods add je sbb or hlt rcl pop jg push adc pop dec cmp jmp dec sbb mov xor popa into nop mov loopne mov nop or push stos outsb rclb mov inc test mov rolb shlb dec jno jmp adc sbb dec pushf pop sub insb repnz test mov dec stc inc testl push pop cli cmp add scas adc push or negl clc jb sub loopne fcmovnbe mov rolb cltd mov and adc mov scas add int3 and imul dec mov add ja fmull or dec test into ret xor fnstsw dec jmp hlt sbb add imul sbb mov js sub cvttps2pi fcoms icebp jge adc mov (bad) fisubrl mov addl xchg push and stos push cli adc addb push push or and or test mov jecxz fildl mov xor clc inc mov nop and test push stos int3 cmp inc and jb dec call test out inc cmpb fadd daa and or shr lods jbe cmp sbb nop aam in bswap pop (bad) jge stos (bad) lds nop aas gs lahf rolb ljmp test xor icebp inc cmp (bad) jmp imul mov mov loope (bad) mov movsb in push lock iret adc ret push mov adcb xor add pop (bad) jmp rol fcomps popa adc mov cmp sub add insl loope inc or xor push xchg pop enter dec mov stc ds mov jo sub add in push pop stos sbb sub arpl je paddsb mov pop push or cmp ret inc mov in xchg xlat or mov xchg stos mov fstps inc jo outsb add jl and add or inc inc sti std sbb adc (bad) stos add loope loope inc or fnstsw test ficomp or and ret and pop sub or dec das xchg in adc pop pop pop out inc sbbb imulb mov (bad) pop xchg in push push push pop pop aaa mov or cmp jns sbb (bad) imul add inc fmuls lock in sub mov scas pop dec rorb sub add scas ficom (bad) repnz sbb icebp mov into sub cmc test push iret and and inc inc mov push andb xchg call jnp push adc (bad) or (bad) insb (bad) xor cli lock jle lcall or call inc inc mov out and inc push cmp mov fldl je shrb mov mov stos fistp xchg pop jl push mov mov daa cmpb hlt (bad) add es cli enter es pop ss jmp inc cmp int test dec jb dec pop bndldx stc mov adc stc adc mov mov sbb mov (bad) daa cld mov loopne (bad) xor add mov add push sbb rclb push mov mov mov rolb jo add jb es ljmp sbb addr16 sub in push and lock and sbb repnz push js in mov clc (bad) cld cwtl popa push aad fwait adc sbb dec call lds mov lods pop ret stc and dec pop cs mov mov (bad) incb iret jbe test pop sbb inc cli (bad) pop xchg fsubrs sub add cmpsl aas jmp push mov add aad imul lock add ja xor add sub insb (bad) mov sbb or mov and xchg jecxz cmp call dec push (bad) add sub in scas dec out loop add jb mov rorb cmpb js sbb push mov call loopne sub xchg xor inc pushf mov mov push rolb loopne jo and call dec xchg test popf xor (bad) xchg or in pop xchg call mov or push jns pop aas sar aam xor sub rclb vpavgb movsl inc dec fsubr push xor inc (bad) xor jle add lock mov cmp sbb es cmp add cli cld mov push in loop test js add xchg dec cmp jae mov mov out mov add jp je pusha ja inc movsl or cld and imul or push xchg inc and aas sub cmp adcb pop rcll xor stos (bad) or dec lret je cwtl push or mov sbb cs aad adc xchg jno xchg add and ret mov inc mov mov xchg and cld sub mov adc (bad) mov out and pavgw sub dec cwtl xchg pmulhuw and push pop in cmpsb nop mov mov cmp (bad) mov and fstpt mov loopne xor inc mov push ljmp push imul jb cmp scas repz sbb xchg sbb mov rcll jno add cmp jb call adc es and fidivl push mov push lods insb scas inc push fild das loopne add push cmc xchg jge pushf or data16 mov rclb fdivs jle sub xchg push add mov rclb sbb dec imul pop sub cli mov add jbe or mov jmp inc dec mov fbld nop test cmovo movsb push stos (bad) pop cmp sub nop fdivrl mov xchg pop or push and sub sub cwtl mov pop loop data16 jle add and xchg add push sbb leave je mov pause add jno cmp jne mov fsqrt xor push inc mov test sarl (bad) arpl xor pop and mov fsub out or or lret sbb out xor fcoms add or mov pusha inc push mov das cmp pusha lcall or jne sbb add pop add in mov cmp inc mov mov or and sbb mov mov xor mov and xchg dec int3 and adc addb adc loopne mov jl mov ja test jle je cmp (bad) bound test icebp jne loopne mov hlt and test arpl push cld pop adcl call xor imul xchg (bad) cmp addb repnz shr subl mov ret mov sbb in lock andl roll fs or (bad) scas xchg pusha or adc imul xor cmp movsb and test and xlat loop inc pushf inc jle mov je adc xor xor mov mov xchg bound rcrb lea xor and (bad) into mov in add adc mov add into dec nop js (bad) add lods and and inc leave cbtw pop jle test mov xor inc jns add icebp in fcompl popf sbb (bad) test into mov mov adc xor repz adc lret inc sbb xor mov jne,pn popf push push aaa fld loope inc mov sti arpl decl mov test lock ror out mov (bad) dec cs ret loopne jge js mov sub mov fimul add mov cmpsl xor fadds cmp mov and popa es loop xchg out push fmull xchg clc paddd outsl pusha jl sbb adc into fnop add xor jo dec pop add jp sub inc mov add mov mov or sub pusha daa testl aas mov ljmp sub mov dec sub cmp sarl mov movsb xchg cmp add sub and adc aam mov or inc mov lods sbb sub add (bad) test loopne xchg mov (bad) bound addr16 scas sbbb mov in shrl fidivrl punpckldq push sti cmp sub xchg rorl jmp inc add add sbb push dec cmp and shrb enter lds flds mov inc (bad) sbb cmp or pusha add fildl sar adc cwtl jmp push cld repz push out hlt and inc (bad) and clc pusha sbb popa xor or lods aad mov add lahf (bad) inc mov inc mov pop stos sub inc fdivs lods addb (bad) sbb aaa hlt cmp mov pop cmc cmp mov fldcw daa xchg mov push stc xor pop in or outsl add mov (bad) jmp pop xor lock dec inc sub pusha pusha xlat ljmp adc or sbb pop sahf mov mov jg xor outsb sbb cmpl mov mov mov in inc lock mull mov test mov jo daa mov mov pushf adc inc cmp cmp test and test pop sub les adc xchg call jl push loop nop test (bad) mov pusha add call dec and add push sub or push out rorb pop call xchg clc ljmp and and nop std rcr add ficomp arpl (bad) add adc mov daa push cli stos and add ss ret test arpl add ficom sub jecxz inc jns mov sub mov inc inc cmp push test cwtl lock fsub fbld push loopne sbb rorb xchg sti sub mov lock imul jbe and mov mov xchg (bad) xor dec sub lret sti and mov inc jbe mov test (bad) cmp lods xor shlb (bad) shr (bad) cmp and sbb aas mov (bad) out cwtl add mov pop xor xchg xchg incl mov fsubrs dec mov sub loopne jne ljmp popa pop adc push jo insl lea mov (bad) je dec or jno dec adc orl mov inc cwtl lret mov call add andb sub push cmp lcall xorl movsl add mov jb loop imul jns sub test or scas add lea cli mov cmpb data16 dec mov jle test lods sbb xchg (bad) or mov xor or cmp ds stc inc adc mov cmpsb adc inc test sbb inc addb jbe and add dec mov mov and fadds andb add cmp andl (bad) adc fwait loop mov mov cwtl shrb pushf int3 inc test dec inc jb cmpsb or in out pop push jle lods push add sets dec add aas inc sbb inc sub cmp xor rorb nop mov dec adc aaa inc or sub and lock cmp cmp mov in adc adc dec dec scas sub sub mov call fidiv fdivr push jge inc je xor mov sbb aas sahf cmpb mov push pop inc sub mov les cmp xor adc xchg cwtl sub cmpsl imul add mov pusha icebp hlt loop cmp clc add push loopne mulb jecxz dec add xchg add data16 mov stos lret je and pop insb nop or cmp and jecxz cmpl dec enter movsl mov push in sub cmp mov dec sbbb nop and or inc mov fiadd fadds outsb sub icebp rclb movsl cld scas pushf in lea and xchg enter push leave ret adc sbb sub dec mov and movsl xchg enter out mov add inc sarb add mov stos mov addl push and loop lock push int aas inc inc es mov pop adc push test out cld add add fnstenv sub or cmp sbb add jl sbb push outsb fadds je rcll cmp fcom in (bad) add addl push mov add lea aas and or (bad) xor sub add sub push test gs or mov mov aam insb rcrb popa gs jmp icebp rorl lret jge cs inc xorb fdivrp cmp or push outsb faddl adc loopne push and hlt xchg sbb insb mov mov cld sbb pop dec sub scas xorb test dec loopne nop pusha xor ss fldenv arpl and add push test les hlt pushf pop rolb inc push sbb mov rcll jmp shll cmp in in xlat (bad) and add ljmp and inc (bad) clc insl call add cltd sub or sub xor add dec lods push sbb stos insb mov push psrlq imul and jge cmp (bad) adc outsl add bound add clc xlat push push int3 pushf xor pusha rcrl add jae mov jo fisubrl and inc pmulhuw imul add int or lahf xor mov pop (bad) je mov dec cld (bad) sub add cwtl (bad) xor jnp rep dec and add cmc js mov clc push mov jo lcall in pop mov sub mov or pop loop or out jb ret sub adc fcmovnb and ficompl inc test cltd gs clc pop inc icebp or and cmp int3 push lret or icebp adc test adc jne push cmp mov jge mov mov and cmpsb inc xchg push hlt inc repz js jne cli les sub test mov jg addb sbb adc popa mov (bad) xor loope add inc adc nop mov jno int3 adc mov (bad) xor pusha (bad) jo rcl jno push lods hlt add sbb leave inc xor data16 inc xchg outsl arpl (bad) jp mov push lods test rcrb pop out cmpsl dec inc ds add enter fistpl ret cwtl les popa (bad) fadd movb fild mul mov xor sti jmp push add push fcomi aam push or out lret popf add notl jg stc cmp pop loopne and adc jecxz cmp das ds inc add xor adc sbb in pop or lock (bad) mov jae fisttpl pop (bad) into xor sarb sub jo add repz xchg push icebp lock sbb dec jle jbe jae add sti dec pop fsts pop xor mov add mov mov adc mov push mov clc lock test loope xchg lds xor ja mov cmp test call pusha adc xchg sub xchg push rcl cld or xchg mov mov xchg imul sbb lahf pop or xchg add xchg add push pop clc pop mov or pushf dec and faddl pop xor adc or or mov push dec mov or inc cwtl push arpl inc ja sbb or nop inc pusha jb (bad) or int3 cwtl push cmp jl (bad) mov cltd xor or mov dec dec test ret or mov int adc arpl jl mov mov mov mov loopne cmp js or je call jmp cmp les push add scas adc (bad) sub sarb loope push lds or xchg or mov mov adc or cmp inc xorl scas or or adc mov mov js sub mov adc les mov or dec aam cltd pop and popl cmp or mov cmpl push mov add push andb movsb test fsubl sbb pop leave pop icebp and and or dec daa or dec mov xor xor jl pop xor repz sbb enter lods cmp outsb ss int3 xor and sbb bound lods cmp inc jnp add add push mov into xor (bad) adcl aaa push xor addl mov jae mov sbb lret inc adc mov add (bad) nop in push inc arpl or sbb cmp leave cmp sbb or std xchg sbb dec call sub pop les sbb xor and fmuls mov push sub repnz push dec or frstor or dec in and ret xor pop cmp or pop stc push loopne jmp rcrb roll adc stc pop loopne or cld leave mov cli push push add mov pop xchg dec imul fimul ret (bad) movsb js popa xchg and pop dec mov (bad) or lods or sbb mov xchg fmull or add test adc cld jae sub les jl add xchg add adc and test mov sub fisttp pusha sbb cwtl inc aam sub ret clc mov jnp add adc inc adc enter int and icebp hlt add jns bound stos add lret push je cmpsl nop outsl enter sbb xor mov and mov mov or cmp sub pop pop add in sub cmp cmp push mov pop or or cmp dec or das and or aaa jb les xlat dec call adc xlat mov mov adc bound int adc enter enter enter cld xor xlat sbb cmp gs cmp xchg push sub loopne shll and mov js pop xchg sub or outsl sub (bad) fcoml pushf cltd jmp xor pop jne sbb aaa js pop lahf icebp jno mov mov pop fcomip and or mov adc sti sahf (bad) pop test cmpl popf sbb mov int3 sbb lahf jl andl sub dec aas sbb ret dec popa xor mov sub movb push adc mov lahf movsb sbb mov aas inc pusha xchg xor sbb or and pop dec lea and adc and sbb mov pop test pop xor inc call cmp sbbb call cwtl sti mov sbb cmp hlt adc jno cli pusha mov arpl mov jnp jmp pop cmpl sbb pop inc dec dec xchg dec cmp mov mov mov mov dec fsubs leave inc test or or pop dec repnz addb sbbb outsb or xchg sbbl insb sub sbb std push sbb xchg shrl mov arpl in and mov aas js push jg fwait or movsl sub shrb mov into les push in cmp lret clc and icebp sub mov bound mov mov js xchg xor js movsb jg enter sbb movsl mov sub mov ret test inc (bad) mull fmul dec les or ret mov cmp push mov mov lods lahf stos mov mov dec popa nop add mov cmp ret call pop loop inc lcall lea jle mov or fldl add jbe xchg jo loopne mov fdivl jne (bad) fiadd mov adc bound pop xchg mov pop inc pop inc enter lea loopne gs sbb adc (bad) mov sub or les pop notb xor adc mov pop arpl add xchg popa nop push loop fwait dec xor cmp mov andl lcall mov mov dec sub or xor int pop fmull adc inc into dec or sbb aas ljmp xor xor push sub enter aaa pop or mov lahf cli sbb loop dec jg inc mov xor stc sbb dec sbb adc incl test nop xor fisttp adc sbb or xor or dec fildll or ljmp xor mov (bad) sti lcall lahf xor adc or sbb in insb xor or sbb adc sbb imul jns cld lods push jmp jo inc or aas jecxz xchg mov or or je sahf jno pop jmp (bad) mov inc xor aas lret outsl fimull or adc mov pop clc add std pop or adc or iret js rclb repnz es add adc fs push push fist or sub or imul mov dec movsb movsl stos cmp les pop push inc push jmp sub (bad) cwtl sub and dec and mov cwtl or xchg mov cmpsb xchg push jecxz or and xor popf pusha push mov inc cld icebp inc pop sub sub pop inc or dec jae lret sbb or mov adc jmp ja fsubrl pushf or mov stos xor rorl xor pop leave js fmull jle jg jne pop adc jo aas in pop lea loopne jmp stos push pop adc mov mov mov mov cmovge or xor xor dec cli add pop xchg cmpl sbb dec add xchg add xchg fcoms call sub mov fs popa iret xor mov lret ljmp mov lock imul pop enter dec and cmp and push mov push test mov jl out (bad) jo sub inc lea inc loopne sbbb sub add repnz push adc push or push scas dec sbb aam pop sub call lret mov inc lods mov fs xor mov cmpsb mov test fbstp adc dec (bad) sbb je cmp inc pusha add mov cmp or lret and inc outsl push je dec out mov icebp or nop andb test add mov or pop add xor (bad) jl arpl fs or mov xor je loopne fs xor je daa clc sub or push and adc mov cmp ret and adc scas jo out aas sbbl das adc add sbb and arpl or push xor add sbb enter fbld adc int3 cmp pop and pop out push mov ljmp add or and dec sbb pop imul pop mov and nop dec adc cmp fisttpl ret je outsb or jne xor xor or loope cwtl cmp jae or je xor adc push mov push pop lea xchg and push or mov jg jl cltd fs outsb adc or dec inc mov push adc cwtl cmp sub in pop push add imul test dec add dec and mov or dec xchg test mov std jno jbe and (bad) push ss pop outsl and in dec or push cmpl movb std cmp test daa nop or jg push call data16 jo gs add jne inc loop aas or add fcomps xor jo push or mov lods ficoml outsb es jnp pop dec add bound inc in sbb dec or inc movsb lahf icebp dec int repnz lods shrb add ret inc lock or jns lahf mov mov or pop adc or aaa (bad) mov sbb lahf inc mov sub fwait loopne or pop and roll lcall (bad) cs cltd sbb int3 push lahf stos xor nop adc lahf ljmp adc xor sub subw and les dec or jge insb clc arpl cli push fwait xor mov imull push cmpb lds (bad) std pop cwtl or push cmp (bad) push inc nop jmp pop imul bound fbld js jb jne cmpl aaa mov jo xchg les inc add out mov push sahf mov mov or fistpll cmp sbbl pop and and mov jg mov pusha jo pop or daa movsl test shrl jl push or cwtl (bad) cld cwtl cmp test push xor pop mov sahf ret pop lods inc outsb mov in or or xchg or sbb lret xor pusha clc mov imul mov into les lahf addb add mov in mov xchg mov xlat and int adc inc test mov mov sbb pusha mov addr16 enter mov or and in xor frstor gs sbb mov pusha sbb clc push les pop bound pop cli pop inc nop (bad) push call mov lahf adc and shrl les fcoml data16 (bad) adc fisttp mov cmp int3 adc adc sbb adc jg cmpb frstor inc sbb je adc call jg (bad) pop lret imul xchg and outsl xchg or arpl jl or mov into lcall or mov mov fs cwtl jne pop rep push adc adc call repnz xor fisttp adc or xor or or ds cmp xor stc and dec or adc inc or push arpl or dec and mov ljmp pop pop inc bound incl adc xor adc nop sbb add (bad) sbb sti push out push and cwtl mov adc mov cmp lea data16 test and or aas pop adc xchg dec mov jg xchg inc fbld fisub loop aas adc movsb push cwtl adc pop sbb jbe inc fstpl sbb fist aas movsl leave mov nop cmp jl orl les pop call mov sub cmp push and xor sub inc dec xor (bad) dec icebp insb sbb or or outsl int3 loope or call sahf or mov lahf inc mov pop or lods aaa jno xor pop push add aam aas sub mov mov mov pop push add (bad) fcomps outsl jl or adc jb lcall jae push (bad) adc mov fbstp jg lahf xor (bad) or std cwtl (bad) cwtl stos sahf enter pop out fist pushf add les xchg or dec add gs mov xchg mov aas xchg adc and sarl insl or pop mov cwtl (bad) or sti cltd sub out fwait leave pusha adc cwtl leave fcomps pop mov outsl mov or sbb jg adc pop sub stos mov xchg and adc mov clc xchg adc in aad shlb adc lahf sub aas mov or icebp cmp mov push sbb xor ja xchg cs pop fildll sbb adc push test jg mov xchg and pop add ret push subb fwait pop inc sub sub gs or int3 cs inc out imul mov add or jae nop dec adc mov cs push pop push xchg pop mov lods test dec cmp icebp or cmp in in mov lock aad in push lock call cld mov call adc add leave adc pusha cmp subl aam push mov inc pop or enter and or jmp movsb lea sbb outsb sbb or mov out and arpl pop mov in push or adc jno mov xor enter sbb adc test or jg mov jne sbb inc cwtl mov loope xor out rorl adc xchg out aad ret stos sbb scas mov cltd sbbb add lret adc lret (bad) cmp clc (bad) mov fwait (bad) mov and mov enter jo or sbb or in mov call jg xchg push and loopne sti clc (bad) nop jg xchg or mov push call add insb xchg or cltd pop or (bad) int3 dec call test sar push (bad) in mov fcoml out cltd cli mov jl jbe xchg cwtl pusha push leave stc sub xor cmpsb fsubrs sbb mov adc test cmp test jmp inc or jle dec pop lcall mov movsl fdivs js fsubrl or dec add sti test adc test cmpsb and xchg xchg clc xchg sbb sbb push in into ret pop les adc mov jo adc add or inc cmp cmp mov enter sti and mov push (bad) or iret sub cmp les and cld loopne xor push and insb add imul push inc pop add or negb jae lret add and mov mov add mov sub mov xchg mov add add sbb bound cwtl jg les pop shl push inc test decl jg add pop cwtl dec mov clc dec push jl cwtl sub pop ja mov les jg pop adc ffreep push sub rclb lock inc stos mov les roll das add and or or mov fwait cmp mov dec shrl hlt aaa bound fdivl sub lcall pop jl pop mov lret (bad) in push pop dec mov and mov test fistpll jecxz dec or add gs or clc popa movsb pop enter jl les push sub es or xchg ret aam mov jg xor pop adc sbb in daa loope loopne add mov dec ret or jl fs cmp jo adc pop sbb aas lods loopne stos rorb adc xchg rorb imul dec cmp mov mov add test inc lock cwtl (bad) and jbe xchg gs movsb jb mov pop cld pop test jle add mov inc push lahf mov out add or jno inc in mov iret mov mov or adc (bad) dec in pop cmpsb sbb pop cmp dec adc or lret clc aas pop mov xchg push mov and (bad) in mov pop add inc jmp addr16 push pop js cmp ret dec xchg enter stc lods les mov jo mov inc test subb adc mov movsl cmp jo pop or test inc xchg push js mov and jo sbb or rclb sub into sbb (bad) mov test pop push jne nop (bad) mov inc aaa (bad) xchg and xchg xor jmp mov push in (bad) mov sti clc das lods cs pop js or pop insl or xor or and repnz add adc push (bad) or xchg xchg in or jp xor stos icebp daa mov lahf sub and pop leave or mov outsw or nop push push test mov jmp outsb xor or (bad) adc cmp mov loopne sarl inc dec sahf aam inc sbb orb lods shrb mov in test adc bound out mov bound sbb cli mov push mov inc or jae or adcb dec enter fucom add je loopne mov cmp mov sub cmc pop dec lds in shlb out js or cmp or (bad) out mov pshufw fcmovb jmp sbb cwtl cmp out jo cmp outsb mov addr16 push mov cmc and out ss out sbb sbb sbb std mov or dec inc sub clc mov and sub and inc andl in inc std pop push roll mov fldl jle push xor cmpsb mov fcoms mov lods fisubrl xor xor fdivs inc sbb jge clc adc sbb pop push or test out and int inc push clc xor cwtl sbb adc les cmp pop adc ja mov mov or rcrb fsub adc add repnz int push into loope adc lods add add push jmp add or (bad) aam stc rolb sub and sub clc pop jg cmpb adc dec int3 cmp mov or jnp cmp add mov or and sub mov and pop xor lret adc cmpb inc jge add ror sbb or mov les rorb mov js or jb pop cwtl cwtl mov or fcompl addb cmp testb and dec or std push xchg test dec les pop repz sbb js repnz push cmp cmp mov fiadd sbb inc cmp or sbb les fdivr add call js dec sub push (bad) or xchg xor mov add lret xchg popa xlat sbb subb rolb clc or cwtl mull pop xchg mulb subl pop and cmp adc xor xor sbb xor adc rolb cmp cmp sbb sbb adc lahf and dec or mov fdivs clc adc and sbb mov cwtl push sub js adc (bad) int3 xor or xor jg out or push dec sti sbb subl aas and xor mov loope mov clc mov push repz add cmc orb push pop or hlt sub int rolb jle sub or and xor or adc sub and and mov dec mov xchg mov cltd adc pop nop pop (bad) jg (bad) clc popa ja pop (bad) fidiv inc jmp sti dec int3 jl inc nop js test adc or adc cwtl loopne or adc pop fadds sbb or lds fadds or sub js or pop pop popa bound xor add daa or or inc and inc sbb mov xor pop push and or sbb int3 sub or sub or lods add add sbb add loop or push and dec pop cmc test js or mov pop negl in insl sub or cmpsl add mov xchg cmp mov or icebp add mov xchg inc mov mov (bad) mov mov fcomps adc popf dec call adc mov mov or xor or xor xor js sbb mov fstpl mov dec or std cltd call in inc out adc and xor and mov sbb or adc mov cwtl and sub or sub add or stos adc js bound sbb or xor push cmp dec inc add adcl dec nop sbb cltd imul pop jno cltd sbb lret lcall xor mov push mov or clc and push cmp adc and or andl in cltd pop ljmp or inc cmp cmpb int3 jno dec sub sbb leave mov data16 cmp adc mov les or push adc fcomps mov xor push sub ljmp test js sbb shrb lret movsb add sbb pop inc test mov push or test shlb cmp inc lock fiadd outsl ljmp call andb xor rolb (bad) push out or jecxz cwtl call dec inc fildl push les push nop xor inc stc and dec sbbb ljmp ret cmove sbb or in pop mov lock out or or (bad) push pop xorb or adc pop mov push inc or mov inc sbb repnz sahf or xchg push clc inc and jl mov add fs mov inc ficomp inc push js in mov add xor arpl rcrb and cmp (bad) in or sbb and xor ja or jle sub stos or sti jb or push jnp int3 pop popf clc cmp push and in pushf int3 (bad) (bad) add adc jl (bad) ljmp and aaa ljmp les js or xor or pusha sub xor movsb mov dec or add mov pop lds js adc add push and aaa loopne fs cwtl test or xchg sahf pop adc xor adc and (bad) push fadds or dec fnstenv or or xchg inc or arpl test fs and rcrb and es outsb lods mov test fwait test mov dec lret adc sarl stos mov add mov mov (bad) in shrb repnz adc cs in jb sub xor xchg and add cltd and test or dec imul scas xor lahf pop pop fdivl psubusb push sahf pop and xor jmp les clc and mov daa js test fimul in sub and dec cltd push xor adc mov mov and mov push ja rep loope in xorl popa add pop add inc adc or in push or pop add add push or je cmp js arpl and out sbb inc clc or sub dec shl ja adc sbb cmp push and fadds sbb sbb cmp insb imul mov jecxz adc adc js mov jecxz loope incl xchg clc lds sbb dec mov lock fisttp mov or nop or or add and or xor adc and and sbb or push stos sbb mov and cli push call or cmp std dec fdivs lock arpl push fidivl cmp das into sbb xchg in loopne sahf xchg push mov xor loope push dec movsb add cmp lock in in cmp pop pop cwtl jne lock movsb jg mov loopne enter ret in data16 xor adc popf xchg sbb rorb or lcall xor cmp or (bad) adc and repz xor or std pop mov hlt adc ret (bad) mov clc mov mov lods cmp cli arpl xor or pop add inc add ds and or inc hlt sub inc cmpsl in add dec or jae stc (bad) dec cmp mov adc cmpsb and lcall sub sahf pop jno push xor push xor into xor (bad) or insb pusha cmp xor mov aas mov fs mov xor mov jo shlb and xor stos sub inc inc aaa xlat lds js adc mov arpl cmp sub clc dec loop and dec cmpsb les das or push sahf mov stc and in sub shr push (bad) pop add sbb mov and clc mov add loope sbb adc pop add dec cmp fisttpll mov cmp jo daa adc adc dec xchg xor inc das fwait dec sub loope sub jb fmull inc cmp fisttpl cmpsl les aad cmc (bad) arpl js daa sub jle mov and sub popf lcall dec xchg ljmp pop ret add (bad) xor dec add and inc adc push data16 xor adc xor adc movsb sbb sbb sub jl or or sub dec call pop inc sti pop sbb cmp out dec call pop movsl je sarb mov push mov or or pop fsub mov mov xor test mov mov leave pop cld es scas or arpl and adc sbb sbb or sahf sti js mov dec int3 or lods mov loop jmp or pop (bad) js int3 adc jnp and jo jno xor pop xlat adc or dec jl or aas popf push xchg and or sub pusha and nop loope adc cmc pop cmp scas clc sub hlt outsl jo mov and test cmp dec sbb mov mov add inc or xor daa fcomp add pusha imul out dec xor addr16 mov je push xchg and or dec sub sub fcomps lods mov or sub or and xchg cmp mov (bad) (bad) je je or dec xor add sub or and sti dec cmpsl clc and adc add fistpl inc orb pop cwtl mov or fisub loope xor clc dec fbld jb inc adc xchg dec inc dec push cwtl and sbb faddl call dec dec mov or mov dec sbb add fsub nop xchg out jo nop js and int3 test pop or pusha mov js sbb in andb enter cmpsb mov movsb in push and in mov divl pop dec cld pop and or or cwtl xor in pop or mov adc stc or jnp sbb and and ds enter dec or popa sub insb js push push icebp cwtl pop dec loop int3 xchg in and int3 aaa popa lcall dec xor neg out notb push (bad) jo xor push fdivl sub test aas es adc adc out xor and mov mov or or pop aaa jo or inc add inc add cmp int3 das add and mov (bad) xor flds add lods mov int3 pop adc xor mov xor imul addr16 lds dec std sbb or or subb testb or sahf cmp sbb jl sbb arpl sbb in call jge aam lret enter aam lock or pop mov cmp rclb add insl cmc sahf xlat or addr16 dec jmp sub hlt or jbe int3 or sbb dec fisttpll push push sub faddl nop fdivl movsb js fcoms loop or or sub xor ljmp xor or loopne adc xchg jl pop add xchg stos sbb dec sahf popa addb adc or pushf xchg pusha mov xor xchg pusha mov push mov or out fist xor dec loopne xchg (bad) add cmp jl imul or inc lods dec bound outsb mov cmp sarb movsb enter cwtl add repnz mov in mov push or sbb std push or pop test clc shll sbb call sahf lock movsb xlat arpl inc sti mov cmp adc clc lods xor daa lock and or dec sbb pusha adc or lods dec jge sbb invd jecxz dec in fmuls push in push sbb popa cld enter adc sub aam sub fsubr pop mov lods add enter icebp cmp jge xchg pop das inc call (bad) repz and aam clc xchg (bad) or cmp loope add sub sub dec xor lret xor cmp xlat inc loop mov lds or cmp push cs test inc add ret enter ja sbb aad mov cmp or test aaa mov add ss and popf mov in mov clc rorb ljmp and out adc les or mov outsl lds in insl inc rorb dec sub mov test sub out (bad) enter (bad) xor xchg leave or movsb or rclb call xor in dec pop push mov and dec sbb adc push aad xor sbb dec sbb or pop addb or mov mov or push jge or or mov addl pop xchg sub repz add es clc adc stc imul dec push and xor or add push add adc insb jmp sub cmp data16 inc fnstenv sbb sbb and sbb int3 pusha rorb es lcall es mov das xchg mov jl pop pop jl mov outsb push and sub inc push jecxz or cwtl mov mov add inc sarb push out and dec scas sahf cmp add and and (bad) adc adc int3 xorl mov leave addb pop adc mov adc and pop leave gs dec jno bound push lock or and lock or sub or sub sti or adc cs cwtl jg sub and add or lods mov adc push dec add iret add addr16 (bad) fistl or mov lods (bad) into mov or jl inc stos mov jno and adc jp inc fwait mov or sbb setle xor mov mov mov addl jmp int3 clc lret xor mov mov in mov or and in jecxz adc or pop jl pop pop xchg out mov adc mov rcrb or orl xchg out jo cmp js cltd sti sbb in xchg fild push dec jo inc dec dec mov xchg and gs test cltd add daa adc and pop arpl pop int3 cmp or sbb mov adc or mov add or or or pop cmp rolb sbb cmp or xor dec test sub and sbb mov xor or mov sub mov ret or xor loopne push sbb popa enter mov (bad) js and das sbb or and sbb dec mov leave sbb mov loopne or or mov mov or jl dec sbb bound negl sub sbb mov or lods bound dec sahf pop mov sub mov or outsb fcoms jmp mov jle sarb or or inc add cld xlat (bad) adc xchg cld loopne fisubr push (bad) inc sub pusha add mov ljmp mov loop or or or adc int3 lock adc sbb sbb and adc lods sbb mov pop xchg (bad) dec or sub xchg sbb xchg mov push xor add ror test or jp jg sub das xor dec cmp in stc dec fs or or push lock std icebp push xchg sbb sub (bad) or int3 ret dec enter and in sub lods pusha pop mov adc xchg mov insb nop leave test or es xor or testl hlt adc das sbb adc mov lods outsl jb mov inc xchg mov dec pushf fnstcw cwtl and stos add pusha or mov adc dec enter orb inc cmp addb dec and sbb sub jno clc push js pop or lods bound mov or dec je push int3 repnz dec jns adc adc sahf cli mov or ret data16 lds cwtl jl aam das push rorl pop mov push ret sbb xor aaa sub mov pusha inc sbb dec cmp (bad) xor std and leave js repnz inc push outsb or pop mov dec in xchg jl (bad) (bad) adc cld pusha inc jno dec jae or xor sub dec mov rorl test or xchg sbb inc inc addr16 dec or fs xor or int3 inc push inc (bad) sbb sub mov add negb mov add add fcmovne add pop and sbb add jo into adc lcall js or xchg xor in adc dec push sub imul test add adc inc ss fsub addr16 imul (bad) cwtl and xor xchg (bad) sbb adc mov lods or leave add jp insb out xor push xor sub and cltd and dec subl sbb loopnew mov sbb cmp das or popa repnz or mov or add fmuls dec adc dec fadd or lcall mov adc int3 into rclb pop push lods and sbb roll dec cmp imul push adc or add hlt and mov add jnp movsb cmpl mov pop scas rcrb addr16 stc pop mov js in jecxz in pop cmp rclb ret je sbb and call lret or int3 dec mov or adc int dec sbb sub inc sbb (bad) dec sub sti call lcall popa fsubl pop sub push mov in cld shlb or cwtl mov or dec xor loop das int3 je push stos enter andb outsb into sbbb std adc dec sbb in icebp popf push faddl clc cltd xchg xchg addl in inc movl pop sub rol sub push nop aas adc or or insb jae push push add push inc cmp popa or lods and xlat or dec mov data16 and add aaa dec call and push es mov and jno or and ret orb nop adc mov push aad inc xchg icebp inc nop adc dec enter dec fs adc rcrl (bad) nop xchg adc fdivs out cld js insl lock cwtl mov mov or sub xor mov and pop cmp xor es or sub xor (bad) jns cmpsl or roll mov sub bound sti dec addr16 jg mov inc aaa pushf sub xchg sub mov fldt fisttp sbb lret cwtl cltd inc adc sub jns mov xchg add aas rorb push jo sbb sbb pop push dec rclb add fs add arpl or add inc and pop dec nop xchg pop dec pusha (bad) hlt inc add push jo push insb mov scas xchg adc cmc jl int mov pop lret sub push clc add mov int3 sbb nop shrl lds adc ret sbb aaa out cmpsb cmp dec jmp cmp pop and lods movsb sbb int3 in test mov sbb sub int3 push stc js inc mov sbb dec adc (bad) adc enter or mov push adc xor xorl cwtl push aaa lods daa lcall push in and dec rorl int3 cli or or int3 arpl dec dec or mov mov mov loope movsl nop mov or les shrl fs fisttpl aam xchg pop cwtl mov or and sub jmp or or mov cmp cwtl sbb lahf add lret xchg (bad) fimul shrb and enter stc adc jno jmp js or test int3 pop push test outsb adc adc cmp fs add clc inc notb dec sbb insb popa lods call test inc pusha shll cmpl loopne test and lret loope jl mov mov cmpsb or xchg xor adc cwtl shlb cmp movb jb sub cli xor das sbb sub repnz negl dec loop (bad) (bad) mov pushf dec xor or sarb pop les push push into cmp bound arpl xchg stos ret leave or test sub add je adc and pop jg xor or and mov fldenv dec xchg push loope and shl mov and pop cltd movsl adc ds stc fimul int3 fldl adc or sbb xor call push add fsubl pop add xchg sarb or test adc or sub pop sub mov jo add shlb lock nop (bad) sbb inc sbb inc inc dec adcb int3 cmp pop (bad) adc push inc fnop xorb mov enter xor or sbb pop (bad) and or add xlat sbb add adc or or sbb sub repz push out jg andl and push jno sbb adc icebp jmp mov or inc inc mov or lods sbb rorl inc inc (bad) into pusha bound mov or sbb adc push lret test int3 sbb pusha jo or arpl adc pop sbb popa xchg push jno mov mov or xlat or adc sarl jl outsl stos inc mov or aad mov inc int aam int3 or sub pop xchg loope shll mov mov adcb inc imul sahf out fcoms or jmp pop sub sub xor or in add inc cltd sbb add dec or (bad) lea aas (bad) sbb mov icebp jbe test clc mov mov in mov cs (bad) mov mov and dec mov xor or data16 and das inc jne inc fdiv and push or nop lret fisubrl pusha test enter dec loop pusha add ljmp jno out push movsb push scas loop outsl stc or js or cmp clc lock or xor push dec xchg nop pop iret jo jbe sbb or (bad) pusha sar push xor aam push cwtl insb add call mov rcll sbb inc add ljmp cmpsb cmp jge rcrb or adc inc fild add add cmove mov and jo lods add pop jns scas adc inc (bad) aam std adc jmp push or leave cmc pop test lea test xchg inc xor xor cmpsb andb push mov cmpsb mov mov pushf movsb or pop xor cmp sbb cmp andb sbb jo xor and cmpsb js int3 inc or mov lods sarl orl pop inc push mov jo mov push pop push lock fdivrs pop test sbb dec or push push or mov mov mov insb in and fsubrs in insb mov or das or lock aad sbb stc or lahf inc lcall dec or add repnz loopne shll mov mov xlat int3 adc or inc ljmp or imul push adc data16 or pop and push lock pusha inc or add fistpl xor or xor sbb das rcrb pop fmuls or adc mov aaa orl cmp bound mov inc mov cmp jo movsl in and and arpl arpl adc and aaa add inc sbb or sbb add mov xchg cwtl add adc add or insb adc fs dec (bad) movb add fstpl mov push scas xorb jecxz dec push or mov nop push (bad) mov mov jns or adc or int3 out push mov jo add push push adc sbb xor mov jmp cmpsb push lock (bad) rorb sub popa xorb xor xchg or call adc sub adcb push cmp xor mov or mov adc mov adc fwait add popf add xchg adc sub or or xchg adc movsl stc jmp sbb ljmp int3 adc pushf addr16 dec sbb or sti or icebp lea push and bound cmpsb repnz nop int lock inc iret push lods adc mov hlt inc test add invd and inc push adc sub inc imul adc and adc add adc stos cli pop and and outsl or sub (bad) and dec sub repnz jo enter mov or pushf add movb push shr adc sub sbb xor and dec jo cwtl sbb or (bad) arpl ljmp adc xor nop test je sub or add test inc push movb mov or adc (bad) cltd cmp push mov data16 cmp and push xor lock add popf lret xor loopne xor xor lea int mov fcom and fisttp shrb or or mov push or out or pop sbb test loopne lret js movsb lods add mov or push loopne lret or stc adc and inc jle xor pusha xchg aad sub faddl fldl or xchg cmc (bad) xor push add jg push cmpsb je mov rclb jae outsl mov loope add add mov mov or sbb add cltd adc jne cmp xor roll and sbb or inc jl fs mov cmp data16 adc push fs outsb mov loope fwait shrl cs xor or add mov xor xor addr16 adc xchg jb lods fidivl xchg or add add testl sbb lods out insb or xchg (bad) arpl adc andl dec enter xor push push sub (bad) and ret adc lock (bad) inc std mov sub adc pop add ds cmp adc push jae cmp xor scas and push inc out inc clc jo pop lock imul and cmp push dec or or rcrb fs or push nop aam jo invd lock add sub cmp or in adcb or pop dec bound mov and adc and add cmp repnz lock push leave sub xor sbb or les adc add inc push sbb adc adc xchg cmpsl and inc addr16 andb or or xchg call adc mov push dec cmp and and xchg xchg and and in scas xor or add xor sbb clts aam or and lcall in stc int3 pop push mov sub inc (bad) push adc push mov adc repz pop jl pop add add or add cltd push and adc and enter push inc or inc dec addb je call inc rolb int3 mov jbe enter push xor xor rcrb lock xorl clc jo cmc dec or inc sbb add std je push mov inc xchg xor sbb sbbl jo iret int mov adc add rcrb mov nop inc sbb xchg jo insl jo lret lret add outsl dec or or push adc adc ret mov xor jne cmp mov or adc add clc cmp mov adc fadds pop (bad) je (bad) sub mov push loopne iret nop daa adc jo cmpsb out xchg adcb sbb adc es or inc mov int3 jmp mov shrb and mov jns lcall xor mov xlat adcb mov inc and xor xchg adc ret cmovl sbb add sub adc jmp in mov lret and mov push dec mov clc adc and or or arpl jo cmp xor or lds sub enter xor or and test aas pop mov or xor lcall or and add inc add xor in neg push test fsubrs inc in inc stc xor lods mov ja retw jno rorb or xlat aad xchg addr16 jmp push js mov push add rorl jg shr xor sarl icebp sti mov mov movsl dec shrl push push nop in das add dec cmp out add sbb les or insb testl ljmp sbb or inc sub dec nop fmul lock nop pop and jle push test rclb je inc push sbb jecxz shrb (bad) mov rorl and out mov js inc cli aas mov je inc sti (bad) pop add nop add add shrl add mov jl and inc mov aam lods cmpsb inc lock xor mov jb hlt xchg out inc push sahf pop orl push icebp sub lock aad or js mov push (bad) sbb icebp push jno les and or test inc movsb push stos lret sar pop fldl imul add push test sub push add out ret add repz add (bad) mov (bad) dec xor scas add and ds (bad) cmp cmp arpl out inc cmp and repnz outsl das pushf sahf js sub cmp ret cltd xchg loopne add pop xchg lods push imul rcl push leave lret push ucomiss movsb add insb ss fisttp pushf in xchg fsubrs or mov bound adc add add cmp push sbb inc sbb xor sbb pushf inc xor enter shll xor insb push addr16 mov inc push aas test int mov xchg add clc pop pop cmp sbb les jb adc mov imul fnstsw push popa cmp mov ljmp cmp adc or xchg mov call add push push xor and cwtl orl sbb push sarl cs sbb jle cwtl les inc mov iret mov cmc or mov push iret sub xor adc inc fs insl xchg push (bad) sub and int3 push xchg pop sahf adc and xor sub loopew push add into pop sub xchg mov inc cmp rorl adc test cmpb (bad) clc inc adc mov and mov xchg pop push jbe,pt fwait in add jmp add sarb sbb xor xor mov mov cmp (bad) cli loopne (bad) sahf pop shll xor mov xchg movsb pop push mov repnz inc push dec or mov test push pop xchg outsl add jnp fsubs cmpsb push repnz and shrl mov cli xor lahf cld and cwtl and test mov xor jbe cld and sub lret inc add cmp push mov repnz (bad) and jno incb shl in mov aaa call fsubr ret fldcw js pop jno les addr16 cmp push int add cmovno rorb mov out in fs test inc cwtl inc mov or xchg inc mov (bad) pop xlat xchg jp out push mov add mov fsubs test mov adc sub add mov je stos mov xor fs pusha dec sti int3 add mov test dec enter rclb mov aad fist and inc (bad) enter xor mov rcr icebp mov or mul nop jl sub cltd or cmp aas xor movsl adc dec cmp sahf cwtd xchg xor inc mov add sti jle das pusha lahf mov or add mov fsubs rorb inc adc add pop mov gs popf cmp adc addl fsubs sub call mov pop das mov xor out pop adc lds mov test push push pusha mov cmp inc js xacquire push dec xor call dec dec movsl push loop dec cmp js mov mov inc movsb adc cmp or cld sarb cwtl lcall shlb cmp pop cmp sub out (bad) mov fsubs lock pop ror test adc cmp movaps rclb mov test insl out negb mov insb dec inc js sbb and mov sub enter push mov inc push (bad) push pop or or push into or dec mov xchg add test ret fnstsw insb dec xlat push dec notl and cmp lcall xor loopne (bad) int or add imul pop xchg mov xor cmp out pop int mov addl nop rorl ficompl movsb push mov fsubl push (bad) cld mov aas addl pusha inc inc xor push and rcrb mov fdivrs cli mov mov sbb imul frstor push mov in dec adc cmp and mov dec or adc mov mov mov aas push sti adc xor icebp aam inc xor adc mov (bad) mov mov pop pop adc and sub xorl push cld adc xor nop sub int outsl dec adc lods mov mov mov lds mov aas adc add cmp test les daa cwtl inc clc mov rorl mov fadds shr stos lea push mov fidivr rolb inc sub aas or pop sahf mov js cmp js imul and int3 mov insb repnz aas lret mov repnz inc add mov rcll pop (bad) push or pop fnop xchg and nop cmpb xor sahf pop frstor xor mov mov arpl jo pop movl mov pop movsb fsubs add dec sub push add inc test mov test add adc bound cwtl sub lcall loopne jecxz xlat adc imul (bad) and and mov pop jecxz mov lahf loope inc push fs or movsb sub call xchg jo popa and sbb fstl fwait jge adc mov mov sbb push xor cmp icebp mov lret nop cmp (bad) mov inc jg rol sahf cmp push fwait mov mov sbb mov cs out mov adc pusha leave subb ret push sbb in cmp cmp shl inc loopne sub cwtl add rol pop ds dec adc adc arpl repz cmpl xor xor bound push xor mov dec inc sbb adc sub in ret cld enter add fadd adc icebp stos mov iret shrb imul cmc pop and mov leave pop mov (bad) fsubrs mov enter idivl ret mov xchg jl call loope xor cmpl int roll adc push dec and xor jmp jbe adc sbb les mov add and sub testl xor inc inc ss jl cmp (bad) sahf push je mov jno push mov shlb and xor test jl loope dec jecxz and cs push roll add sbb pop movsl mov jnp hlt add dec sub pop int3 add inc and mov mov mov sbb das inc loopne and sbb mov push push popa jbe fs inc pop mov and add cmp sbb ret pop out mov les inc cmp adc pop ret or fdivrl and aaa dec xchg pop xchg add xchg (bad) cltd sub outsb daa inc sbb shll repz xchg nop sub push lret adc mov or shl add jo inc adc insl sub adc lock jmp and (bad) into push inc inc xlat mov mov mov loopne inc cwtl rolb and adc push gs adc icebp inc push stc push xchg lods inc and mov inc jl sub or sbb (bad) js popa push adc jp xchg inc outsl push sub mov or mov cmp mov sub xchg stc aas mov xor mov mov xor mov imul sub mov (bad) inc aas lea xchg cmpsb mov sub out push adc xor mov dec mov rcrb or mov mov push into fsubrs loopne cmp mov aad (bad) mov xor lods add adc xchg xchg addb jecxz adc loopne ja dec adc cmp jnp inc adc add cmp cwtl adc fwait loop add das fdivrl xorl sbb cwtl pop mov dec ret or sub out call in or shll fdivr add enter mov xor es cli push (bad) xchg sub xchg test mov mov pop add out add (bad) (bad) pop add popa jecxz push shll sub dec mov jl ja inc sub das jl mov addl jecxz aad inc sub inc aam cmpsb insl or pop (bad) test adc adc or aam mov mov inc scas inc mov mov inc lock push nop cmp sub (bad) stos cmpsl dec shr ret cmpsb xor sub test add nop imul mov sub mov add sahf xor add mov pop loopne pop jns dec and mov mov shl jbe cmp rcr lret add notb arpl stc call jo or shl (bad) stos pusha xor (bad) js (bad) mov and pop xlat movsb js test add adc nop pushf mov mov sbb adc sub add mov daa adc adc sub dec mov nop dec xchg and or insb cmc pop ret adc mov daa sbb add mov rorb and and xor cmpsb pop test lds into or data16 out push mov test add sbb lea flds adc and inc or cmp ror adc and pop sub fstl shrb inc sub roll dec cs sub and imul adc push push movsb nop adc push mov add iret push xchg sahf add sbb cmp xor clc pop push jg stos mov dec jo add (bad) cmp xchg mov adc add aaa test (bad) xchg fisttpl push rcll xor mov add push lret mov inc dec cvttps2pi leave xor adcb push (bad) in shll adc or mov dec cmpsb hlt add add jo add stc sar xor xor sub jecxz or or or pop dec or popa cmp les adc rorb jne and ljmp push xchg push fild lea repz loopne jbe xchg add mov int3 das mov mov inc push mov dec loope and sbb daa fistpl cmp add fwait xchg inc scas (bad) fmuls jge push sub or aad dec out add das bound les push jmp aas mov push sbb das cld (bad) adc dec notl mov push push adc rolb shll out add mov add cmp fstps add xor cld pop mov adcl jl mov (bad) mov and pop sti sub sqrtps cmpsl xor dec add fiaddl inc int addb dec mov adc test adc addb mov ror (bad) mov or inc adc add daa jg popf mov mov shrl inc fsubrs pop and push lahf js in add and dec dec das mov inc add sti inc hlt mov inc mov pushf inc je mov aam sbb dec les (bad) push mov adc push daa out (bad) je in faddl mov pop loop enter add push sub call mov loopne cltd push daa push cwtl mov js or xor (bad) (bad) insb pop dec rcll jge inc xchg pushf lods fmuls andb nop lock push (bad) mov pushf rol icebp push sub dec dec movsl lcall aas faddl in inc in inc push subl in mov add jmp cmp add in sbb xlat pop movsl cld sub iret sub imul pop xor mov fucomi mov xor test decl or fs jge insb or xchg xlat (bad) adc and push xor inc repnz xor inc fs inc sbb sarb mov ds rorl movsl pop push adc add cmp aam dec jmp movsb mov cmpsl jl dec sbb mov push lidtl out lock cmp rdtsc push jp xchg out addb mov sarl cmpsb dec dec (bad) xor flds aam push bound pop inc inc push rorl test pop sbb mov loopne pop push lock inc out mov lahf sub bound cmp sbb xor js add lock mov fs addb and dec pusha (bad) mov adc shlb (bad) and addr16 test and pop shrl lea roll repnz pop mov mov pop jno cmp add add mov pop cmp add mov mov dec jne inc adc add jo sbb inc ljmp cmp or lcall aas andb cmp pop sub xor pop jmp jg jns call inc cmp jbe inc jnp pop xor push lds cmpsb add dec cmpsl cmp lods jmp (bad) push leave sub lret add pop adc mov fwait loopne loop or cmp or pop hlt pop jns add shrl dec je xchg (bad) in cmp aaa lock push (bad) mov add outsb int3 dec test repnz push (bad) outsl or pop lods push mov (bad) and pop and int lock sarb lret lcall sub iret stc mov push inc adc push hlt jo nop pop in daa xor (bad) ljmp leave pop dec mov lock rorb jnp add ljmp mov jb cmpsl lret and lcall pop or ror add inc jno dec test clc cs adc mov sarb call scas mov sub and or aam int3 xor and stos push aas test jge add jmp test dec xor cmpsl data16 adc pop and or dec or or add cmp fdivs sub adc (bad) (bad) jb or fcoms add (bad) xor shrb aam inc cld mov sub aam cmpsb hlt add div pop movsl repz inc repnz leave push (bad) aaa nop mov jp xor and adc and push xchg adc les or xor inc adc lock sbbl or cwtl faddl mov jmp or dec fildl cmp add aam aas and rcll xchg aas and adc lods sub inc dec or dec inc nop mov test sub adc fiadd nop xchg aaa inc enter sbb dec dec cmp pop sbb inc jo sahf aaa adc sbb rorl add subl xor sub dec xchg cmp xor push lret push inc (bad) icebp xlat jnp sub inc mov mov sbb or dec xchg mov enter rolb mov push pop add ret cmc sbb andl mov add adc or (bad) in les arpl test sbb in lret or add jg jle sub xor xor and (bad) out pop push xor dec js enter test fwait xlat test and inc cmp sub test pusha inc adc negl lahf das lret (bad) call adc mov xchg add jne xchg cwtl push ffreep adcl sbb fwait imul mov jmp dec sub dec add ret enter or sub pop test int3 jo cmp bound or out fs lock jnp or add and mov aaa mov jmp inc fnstcw xchg pop push inc sahf add test jb lcall out adc inc mov std and sub das pusha sbb inc sub sub and add push test inc arpl or out aaa jnp cwtl fiaddl in dec sub add outsb jo cltd sub dec sub dec gs add hlt loope sbb mov xlat dec setl ja add fildll in cltd sbb mov mov call es mov enter pop mov call dec xchg cmp mov nop loopne mov sbb int jmp ror out out ret xchg push repnz mov sbb xor and jl in mov inc pop xor out int3 or (bad) enter movsl xor ja stos ret rorb xor cwtl les (bad) jno mov add out pushl inc aam add adc inc xor insb leave add mov insb mov add repnz mov push negl mov xchg aas dec pusha mov mov leave (bad) jecxz divb stc jo les mov mov shl push mov sub inc jns js mov add subb jg call (bad) mov add ret push popa xchg addr16 fcoms rcrb jge enter pushf xchg insl inc sbb inc xor sbb mov inc jg,pt cmp pop mov pop adc dec movsb nop data16 cltd das jo add or push push int3 fcomps mov pusha add call es adc push das and mov roll or cltd in pop rolb loope add nop mov enter dec adc xor ss (bad) mov pop cmp or pop mov and mov or in mov mov xor sbb dec jge add adc or cwtl push loop inc je push pop add inc rclb out lods sahf adc pop dec cld cmp ret rol cmp push xchg dec cltd and aad add movsl xor insb ds adc sarb jo dec add nop comiss sub cmp aad jle jb mov xchg cmp mov adc ret inc fsubs cld and sub sub add xor push push mov jo les invd mov roll out (bad) sbb mov mov popa outsl mov sub mov adc mov shlb std addb xchg arpl loopne add and sbb jno cld pop xor repnz xchg enter cs fistp mov scas shrb in inc fdivrs insb pusha xchg adc jp popf add and sub in aas lcall add call imul (bad) push aas ds mov icebp add daa jecxz,pn mov sub out inc or addr16 sbb sbb je (bad) mov call adc xor or mov rorl add lahf and jo add jl ds aaa stos inc rolb call ljmp rclb jne ss and movsb add int3 push mov aaa inc push rdpmc xchg mov ror popl popf mov and xchg leave mov sbb dec cli adc mov push sub pushf add or movsl add les jmp sub mov enter add outsl dec push dec add push push add dec movsl xchg xchg xchg stc mov xchg mov gs subl jb push mov (bad) out sub add repz fnsave data16 pop add mov add xor js sbb add lods xlat enter mov add push cmpsb inc jbe ret fadds enter push push imul xor add loopne pop and ret add sbb or shlb mov shrl test cld subl cltd cli out add subb pop repnz lahf rclb or orb inc push mov orb mov inc add js lods ret pusha xor clc or or pop outsl pop or aas mov ljmp faddl cwtl cld popa pop bound add (bad) je dec add pusha cmp lods test dec jo jl fstpl inc dec dec push jbe sbbl adc orb or add mov mov movsl mov xchg add enter dec push and cwtl adc inc inc enter loope inc dec aaa jl test lods fldcw add dec rcrb cwtl mov inc pop add push pushf mov jno mov mov inc xchg out cmc fimul lret dec add xchg dec lcall pop sbb loopne xchg pop push ret inc mov xchg sbb mov js fstl xor and xor loopne lret in lcall push dec (bad) mov adc adc add or add sub xor scas imul or cwtl cmp insb inc lahf mov inc mov cmpxchg scas add cs cmc cwtl enter add jg push inc add mov aad mov and jecxz pushf out xor lods add cwtl insl icebp and mov test dec jl ja nop pop fwait xchg ret shrl fidivrl xor cmp stos jbe mov sbb inc xchg xor rolb cmp js xchg (bad) movsl or mov push add fstpt jp in outsl out dec xchg push adc lahf lock xor add sub es mov pushf xor pushf pusha xor dec je and in add ja aaa jae cmp pop pop inc les jne enter xor movsb xor les fistp cmp or cmp sub xor sbbl add adc sahf (bad) cmp xchg fistp loopne movsb insb add cmp pop xor and int aaa or xchg and lcall mov lds inc sub enter lahf arpl pop add pop inc push scas and push add push sub pop clc test shlb lods into push add in mov fs pushf mov push adc loopne nop push lahf test int and xchg cmpsl pop inc rclb int3 pop add leave loop sub xor and ret jg cmp xchg xchg pop (bad) or xchg das fdivl (bad) out pop xlat adcb stos mov jo fdecstp imul stc into dec dec lock and inc xchg adc das dec mov or adc mov int3 add or clc aaa xor cmp cltd mov and lods aam xor mov leave sarl and mov sbb xor mov nop mov xor (bad) ficomp add movsl cmp in pop mov aas nop push cwtl or pop cmp ljmp push xor aaa cwtl adc sbb fdivl hlt in ret add sub sbbb pop lods cmp sti dec push (bad) mov movsl jne add lahf sub sbb cmp add cmovno neg or pop shlb loopne xor lods ds mov inc sbb mov xor jl sbb ds sbb xchg loop jbe xchg inc es and (bad) loop add jb mov out pop push sub inc jno sahf aad and hlt adc add dec mov push lock fwait loop ss mov movb xchg loop jne pop loope jo test xchg pop lods cli ss xor ja mov jne lcall leave inc icebp xchg loop add ret push jo jns dec (bad) adc ret je add and push jbe cwtl test roll icebp pusha shlb outsb inc popf in cmp cmpsb pusha push dec push mov push test repz xor stos sbb sbb test dec cwtl jne jno add inc jl add push pop mov orl mov jne add stc arpl rorb add push dec cmp sahf cmp push xor dec and cmp add adc adc jg (bad) xor mov cmp setnp hlt dec add push sbb andb in hlt mov leave or stos (bad) pop cs add mov lcall mov jl inc adc xor xchg call mov jecxz mov jns cmp inc (bad) xchg xchg rcrb jmp insl aam mov (bad) sbb or or and les xchg mov in rolb xorb adc pop add mov mov bnd mov ljmp es pop jecxz mov xor cwtl pop idiv mov sbb cmp xchg push add adc aad adc add cmc and imul add xor pop xchg mov (bad) mov add xchg mov add xor nop mov mov dec mov (bad) xor cmp inc pop dec js repz xor pop add inc pop in pusha push clc jmp add inc mov cmp rorl sbb mov add jle or clc js add push (bad) cli sub cmp xor js add xchg jne stos dec mov enter jl test dec adc push jnp xchg xchg add repz xor call mov loope loop lods (bad) adc xor inc jae repz jb dec mov cltd cmp into jecxz jo jae xlat ror sub pusha xor ret test popa andl dec (bad) mov cli jno fisub sbb dec cmc aaa repnz adc andl or hlt inc push pop enter lods fldt movsl inc cwtl dec sub inc (bad) fsubrs scas and lcall in insl roll add jno lods cmc or inc in add dec gs jnp js incb sub dec cmpsb push mov mov dec mov jno and jbe mov negl loope xchg ret mov push daa (bad) mov sahf pusha in loop push jecxz mov fdiv adc aas popa in add push jecxz xchg movsb hlt in jle lock ret push test scas rcrb pop leave out mov inc hlt and data16 aaa cmp mov lcall hlt je aam test jne sbb sub loope adc sbb in or rorl enter pusha enter sbb fstpt dec jp add test rcrl cld popa js (bad) sbb dec nop cld inc xchg add js adc movaps leave (bad) jmp es or rcrb pop inc adc jnp adc pop pop popf ret hlt iret in mov add mov dec or mov loopne or mov or mov pop rorl data16 pop cmp jo les dec rorl inc mov jge into (bad) push inc and lcall test cli xchg dec add test sti sbb in xor mov pop xor mov sub and loope mov repz sub cmp inc ret fdivl jnp ss lahf sub lea pop sbb dec test into sub add fs and sub bound jb out pop jns cld add and jnp scas xor and scas mov fldl sub xchg xor adc cmp mov push push scas mov loopne push mov mov imul enter in mov pop pop adc cmp pop pusha add mov out cld stos pop push cmp scas fsubl jns inc aad mov jbe rclb xchg jp test ds inc pop pop xchg aaa and and dec stos adc dec mov push mov pop negl pop ror mov cmp jne xchg enter inc and sub jmp jo add xor stos adc cmp add jg adc movsl or fwait outsl or dec daa cmc orb adc and mov mov adcl loop imul aas mov fsubrl stos add in (bad) mov loopne enter lret jg es loope lock inc lret pop mov enter xor or nop add dec lret ret mov in iret and xchg insl jnp dec add cwtl and xor imul popa fdiv lods cwtl mov ror mov cmp in mov inc fs aaa mov cli add repnz call mov pop stc mul fucomi mov and lock inc cmove (bad) push push jge add pop or pushf je pushf das ss nop sbb lcall jae sahf or mov or adc icebp lock adc dec mov add loope (bad) pop mov pop push call imul pushf outsl pop sbb pop jno fisub pop dec push push push fmull test je faddl test leave adc hlt mov nop nop je push mov gs or movsb sbb xchg in pop cmp int3 dec outsb or and cltd fiaddl mov and xor sbb out push sub lahf pop xlat or xchg mov dec push push mov sbb push jmp ds push fiadd (bad) (bad) stos adc add movsl (bad) or mov fidivrl push jmp jl jmp push ficom xchg adc pop and jmp jmp scas loop out fs mov je sbb mov gs pushf andl nop mov (bad) lock pusha push jns jge das jmp or sbb dec xchg ss adc imul call add pusha sbb or loopne pop cwtl data16 pop jl pop xor insl mov ds pusha dec loope dec fistl mov mov inc jae push fs cli rcll scas add mov xchg imul sbb sets int3 loop js add cmc clc movb sbbl stos inc (bad) push add ds cmpsl cmp add cld pop mov les pop je xchg push inc jo sub and andl in xor ja mov enter adc push rcrl mov push mov leave mov fwait mov mov hlt add xchg or call inc adc and mov mov or jge and xchg inc push pop lea push adc stc sbb lret push or testl jle leave sbb je cld adc cltd fdivl sbb sbb les cmp cmp sbb out rcrl nop dec addb in sub mov and push or lret xchg jns or pop subl mov or mov or aaa cs fdivrp sbb dec ds or popf insb rcrb sub xlat lods stos les nop fs les inc mov and fwait clc sub pushf adc and leave jo daa xor adc pop cmp inc repz shlb push int3 pop scas fisubl clc lock mov or jmp out insb dec hlt and sbbw push lods dec iret jo (bad) ret mov xchg add adcl dec rcll fnsave mov (bad) testl xor les mov repnz cmp pop cmp rcr das adc or add pusha out es fidivl or adc push shlb cltd daa call adc add or mov adc mov add inc xchg mov cli leave imull sub add es gs jmp or pop test sub or jno push inc test add hlt cmpsb mov push pop xor add (bad) jo sbb adc mov ret dec jg pop or cmp sbb xchg shr sbb fcmovnbe pusha shl shr add adc out fs test add lods jg lock js dec leave push fs loopne pop js mov lods jns mov fs testb roll mov leave dec ds fucomi xor mov push lods test adc sbb cmp xor jb mov jne adc inc pusha dec add and add add rorl rcrl fild clc aaa cmp add insl clc push loop insb mov daa mov out pop jmp fdivrl lods add je jns adc aam dec and popa inc mov loopne aas push imul bound adc or or test (bad) sar cmpsl or mov dec and data16 lret push fnop je mov scas cltd bound pop adc subl aas pushf add ficomp test repz sub movl adc sub mov mov repz pop mov bound into mov sub dec ret sub int3 push call insl lahf xchg data16 mov xchg adc sarl push cwtl mov push add mov add cmp popa leave mov scas in dec xchg lods dec aam pop je repz rclb dec aad mov push lds test sbb xchg into inc mov cmovae pop or lea int sub fdivr or mov push jge add lcall dec cmc stos add inc idivl loope loop shlb nop add pushf inc mov mov outsb sbb call pop xor mov jae loope pop je push sti push xor aaa dec pushf xchg loope jge push dec jmp xorl outsl xor clc push mov cmp cwtl cmp subb dec mov mov movsl mov adc inc pop adc loopne fdivr push clc pop into mov rcrl int sub lods int3 dec inc mov rcrl mov bsf add inc or xorl scas dec mov loopne push adc and pop add pop or les cmp push inc call mov fs or loope inc pop mov adc movsb scas adc and mov push xor (bad) negl mov xor jmp aas dec add out dec shll (bad) dec stc and jne pop dec push dec adc dec xchg clc ret and jle clc repz in and (bad) fiadd mov lock addr16 add pop movsb adc add jns ret push adc add mov rcll push lcall pop fldenv scas and fcoms and push add mov dec mov push mov (bad) or and mov sub test cs aam repnz and add (bad) cwtl into (bad) adc cli int pop rorb add and rcrl arpl sti icebp aam push mov lods int je or xchg rolb xor aam mov shrl jg lock and jp jmp jo and pop nop rcr pop insl aas fdivr mov subb or into repz add loope shrl call mov lret jl fistpl addl jns sbb into cld in insl je hlt xor imul dec add cmp jl mov js test pop mov arpl push scas ret cmc rcr or out push repz lock dec mov in in inc inc test clc fnop xchg rcrb or jbe (bad) dec lcall pop mov popa stos sub mov les adc cltd sbb addb inc gs dec movsl shr nop xchg orb mov bound (bad) cmp into pop rclb mov sbb subl and adc (bad) dec orl cmc pop jmp and loopne mov pop sub test push or ds sub jae sub cltd lods pushf mov or ljmp cwtd fadds add dec popf sub pop jnp sbbl loopne cltd sbb lgs rcll cli pop or in ds mov xchg loopne fs sub push loop loope pop stos sub add adc mov idiv pop pop iret inc adc xor in push cmp lock push dec and js les xor imull pop xor add movups mov sti jo mov into adc mov rorb mov repz icebp add adc mov mov sbb int3 ds outsl test push js jae xchg popf fisttpll idiv xchg add jbe adc mov out lcall pop je push mov push sbb repz cmpsb xor enter sti sub push mov sub push xorl repz push mov xchg popf call pusha fs out loop pop push cld sbb xor scas outsl inc nop cmp or pusha mov xchg imul or sub add cmpsl push scas mov leave stos add aaa mov repz mov mov add add pop inc sub repnz mov scas ror xorb mov clc repz xchg push jg pusha subl push fs xor aas pop push cld rcl sbb lcall arpl test imul pop xchg cld sub or jge aas push repz xorl mov ja sub lods sbb sbb mov push or pop mov and jo or jb lods pop dec cmp lods shlb nop or lret pusha out pop and pop sbb pop push sub fsubl rorl mov push mov mov inc stos sarb cmp dec js add (bad) adc dec inc rcrb inc push mov adc inc pop mov and sbb xchg test lock out and xor jbe sub out lahf mov add and inc sub nop icebp sub cld dec add dec in pop jecxz ret push dec mov (bad) mov gs adc je in hlt cmp mov or ljmp mov test je inc sbb add addr16 inc sbb cmp dec inc faddl push ret stos sbb mov jns add push push mov pop addl jae xor and xor adc nop inc push fmuls or bt push add add or add add push pop lods pop inc rol dec inc rcl fnsave xchg xor mov addl xchg inc cmc faddl test stc xchg rolb jno lahf push sub ja fild pop sbb fdivl adc xor pushf mov mov lods cwtl xor lahf mov fwait arpl rcrb and sbbl push push out xor mov stos pop jns push add dec (bad) shrl sbb rorl add ficomp or sbbb rorl out lods mov ror inc aas repnz pop pop ss (bad) xchg sbb pop xor xchg gs (bad) clc stos pop and inc mov test ret sahf mov jl inc call or adc arpl test lods cmp lret or push pop mov xlat xchg in fs enter pop adc and inc mov pop arpl rcrb push ss mov insl js fs out add pushf add jo add nop orl lock adc mov mov mov push adc lds cmp js push or xchg jno xor pop cmp mov inc cmp scas and das or insb push test mov dec sbb scas add sub jle mov ret lods cmp bound push dec rcrl popa pop lret xchg add mov cmpl inc fmull cmpsl pop out push dec mov insl pop pop (bad) jne test inc aam push pop mov pusha dec xor popf mov testl andb sbb pushf sbb movsl adc adc dec mov add xor and and xor cmp mull pop in dec mov xor loop push and (bad) push push rcrl dec mov xchg adc sbb ret mov sub or adc or scas in add (bad) xchg xchg mov movsb push push mov out cmp push cmp lods adc and or jmp xor int3 add push push xchg loopne pusha int3 fadds jo dec test sub inc enter or mov mov out cmp xchg insb cwtl aaa mov pop xchg xchg orl inc das mov (bad) mov pusha inc rorl cmc cmp xor and or pop xchg ficompl jo sub add mov pop push cmp ret lods xor mov inc cmp jns or adc cmp sar ljmp inc adc popf sub fs in push jae xchg ret ret adc mov daa xor insl in inc aam or out fs jmp xchg clc les push cli mov je and sbb pop sbb popa cld inc icebp jbe add jmp das sbb pop push xchg cmp add mov push imul pop outsb iret hlt push (bad) jo cmp sub add inc fcom lods push xchg out sub clc dec and cmc icebp clc sbb or and test push mov mov inc hlt push dec sbb xor inc les and ss lahf lods mov add adc or pushf js sbb imul in hlt loope hlt xchg sbb insb scas sub push pushf jae push std in jne dec push xchg sub inc data16 pop fs mov add fcoms ljmp adc and sub nop push push xchg movsb test bound int add xchg into (bad) adc mov cld fist push jg shll test pop sub fsubl (bad) fs dec imul and rclb xchg pop add aam jbe sbb mov add out loopne or es (bad) int3 insb inc mov stos (bad) xchg hlt mov push cmpsb push movsl inc adc mov and dec push ds and fmuls in inc lret repnz ds insb aas sub and mov mov sbb dec and scas stc mov int3 cwtl or dec int in dec outsb test push pusha ja cmp shr je sbb fsubs add movsb cmp jbe,pn and ds inc mov sub daa stos icebp rcll dec adc lds sub outsb xor jo rcrb rcl mov jp adc mov stos xchg jl jo imul or cmpsl jb sbb lret sub cmp test pop or in popf mov sbb and sbbb add dec jmp jecxz push xchg ret jl jns add lds inc pop sahf enter and add jns outsb in or sbb adc lds mov in aam push pushf les call inc or mov subb pushfw dec insb dec test inc mov inc popa xor pop sbb cmpsb push jp dec loopne movsl and adc ljmp sbb sbb addb inc lfs and enter and lahf (bad) rolb sub push sub popa mov push mov dec lock int sarb mov mov or lds (bad) fidiv ljmp ss bound push add scas dec in lret lock jge add test push neg test xor jl hlt js pop rcr sub test cltd or fs xor mov inc aas into add inc lea sarb ds js fwait jl jl add xchg bound pusha cmp andl pop rclb sub out pop xlat ret jle add ds push sub dec add (bad) mov or iret push stc sub cli and pushf add and scas sti pop movsb xor sbb dec lods push loopne mov cmp add (bad) loopne lods add rorb adc mov xor dec inc and xchg push scas dec and and jle add ficompl jne cwtl data16 iret or aas fldt fmull mov mov or push adc push jnp or fs add (bad) mov jmp dec and sub push leave repz nop dec test mov rol sti add xchg scas in daa sub mov add fstp sbb mov mov mov fs cmp inc sub ljmp dec adc ja dec pmulhuw outsl inc sub dec andb shrb into inc in rcr xchg jge add add insl ss ja in add push jp rolb xchg into notl popf xor je idivb test add mov rcll rorl dec sub mov frstor cmpsb xchg rolb repnz mov mov clc outsl (bad) push mov shlb rcrl add ret into sbb adc sbb fwait int3 pushf fs (bad) xor arpl add (bad) push repz and cld roll repnz lret std add jno out pop fadds inc in insb popf pop imul adc movsl add je (bad) (bad) or and loopne into repz push call stos dec or int3 daa (bad) jo dec popa cwtl push add nop test out push add in lods aam clc inc data16 sub cmpsb dec into (bad) xor hlt sbb cmpsl loopne out leave and les ret mov pop add and adc cmp outsl jo popf adc mov and leave movsb les add xchg sub xorb jge jg cmpsb ds mov push dec lods das dec cwtl mov imul and sub nop jo stos adc dec sbb push cmp cmp popa hlt cmp pusha daa cmp js outsl stos pop repnz ss push incb mov cmpl aas mov add int dec push ret push into (bad) xchg sbb pop rcr lods xchg cmp (bad) push cwtl insl in cmp subl and sbb in test jmp and ljmp fs cmp mov inc push dec insb inc or (bad) mov loop jbe ret fildl clc xchg jo (bad) mov jns adc fbld pushf cmpsl fs add test mov adc add dec faddl inc (bad) xchg mov push rcl adc adc jl fcoml dec leave les pop pop outsl pusha sbb ds sti subb sub and loope in hlt inc inc xorb sbb sbb cmp xor iret mov jg add lahf jmp add mov push adc inc fistp xchg sarb (bad) pushf test add leave lcall xlat cmp jmp add lcall imul test nop outsl nop nop mov xor scas add pushf and fdivrl dec xor inc or sub pop stos dec gs jbe int3 ja dec push jnp inc and shll dec rcrb cmpsb add movsl rorl add add je aad mov mov test cmpw push imul pop js push test lods nop inc and andl pop or push les imul pop test jne lock int3 lods mov inc hlt in pushf add in loop adc cwtl adc (bad) insl adc loope and sbb mov cmp test in clc cmc adc ret cli dec shl (bad) inc insl incl sbb ss cmp push sbb rclb and repnz ret xchg int lods repz in jb mov enter dec xor in sub leave push pop lock into dec pop pop inc movlps fadds add and mov out repz scas cmp mov mov and push and add jmp push mov in pop iret push jae fs rcrl sub jge hlt inc loope lock add or or out aad push mov push pop (bad) sub iret jp hlt mov fisttpl dec inc lds mov xor out mov cli rorb push fcoml mov orl mov fistpl mov aam add (bad) lret sbb sub (bad) in orb mov and pop mov fnop sbb jns sub dec mov mov lds and inc sbb mov inc mov movsb fwait mov clc mov inc in mov adc jb xchg xchg insb add movsb lds rcll inc in repnz pop jl sub pushf lcall fsubl cmpsl pushf mov aam mov or test push mov dec pop cmp rep sub mov popa xchg js aas jno test jb cs sub sbb jo sbb loopne (bad) mov add pop and mov or mov push cmp mov int cwtl into pop test jbe test adc nop sub into (bad) out gs repz add push add xchg aam mov sbb xchg push dec icebp add inc leave pushf in outsb repz and xchg mov cmp dec adcb sahf insb push sbb lea in repnz aad into xchg mov test repz stos jno pusha lds (bad) dec mov push inc cmpsl test cmp cld arpl push in sahf push xrelease mov out dec mov dec inc mov inc mov mov cld into (bad) or and fs dec les push push push mov inc dec test pop xchg sti push cmp pop xorl xor mov add fsubl loope das popa shr mov int3 dec pusha enter add inc or jo es dec jmp sbb and add inc mov test add pop sbb jle mulb in adc loope adc and sbb call inc push outsl sbb aaa dec or fldenv xor cmp loope je call sub sub hlt pop movsb add add cltd and jg sub and sub inc and adc scas inc sub (bad) push insb sub inc dec leave add repz imul sbb into lret daa repz push sub cltd push lods jne add xor adc mov xchg jo minps repz dec push lcall mov sbb dec aaa cmp push jle test rorb ret lds pusha dec rcll sarl xor js cwtl (bad) mov shll lcall loope pop (bad) xor push movsl cli popa push repz je imul fnop sbbl inc or xor ret jno loope ret push push xor dec lret xchg (bad) mov add mov fcoml adc mov sub into sub lods adc insl push inc adc mov (bad) punpckldq dec hlt je jle mov sub fs scas add lea inc daa (bad) mov mov pop mov in add imul ja js mov leave sbb adc enter adc js lds aam dec pop psubsw fdivr ds inc lahf xchg jle in add mov and mov int3 lods enter jp rcr jle and push sub mov data16 mov dec rcrl sbb dec xor mov scas ljmp pusha mov xchg cltd lock je (bad) mov xor mov pusha or test dec xor jns loope add out pusha test scas jge pop sbb in pop inc cwtl xchg inc mov insb push mov and adc outsb cmp test popf std add mov fisubl cli add dec or lock add ds dec jno cmp add arpl leave sti pop or inc cmp rcrl pop fildl es jge loop loope loopne mov mov mov add and (bad) ja adc (bad) pop xchg dec gs stos ja stc mov pop or in (bad) jl cmp add dec xor jb dec mov fcoms cltd or add sub sub xchg push push loop cltd xchg popa scas out mov and or inc dec lea int3 cmp pop or and lods aas in add push mov sbb mov ret sarl xchg add jecxz int arpl push fcomps pop ds cmc fstl aam test lcall cltd ss mov sti inc or xchg subb into push push sub fnstsw pop je xchg add cltd mov cmpb and je jle dec in fidivl lret inc nop and push insl aad dec inc js into xor and fs mov add pop or sbb add jo add sub xor lret fcoml aaa inc lods fildl mov cmp lods lods dec xlat dec dec cmp in jns adc pop xchg xchg jbe loope pop ret lods dec push jno hlt or out dec and call enter (bad) je or in jl pusha clc sbb xchg push cwtl inc adc push scas pop and add movsl imull add ja les mov out dec lock mov into ds int3 and or sub rcrl cmp je push js sbb adcb inc xchg push inc mov pop jl sahf push mov test xor xchg cmpb and push jle jp (bad) cmp xor loope gs fpatan push imul aad orl mov inc or insb clc pop lods addl js lods adc cmp shl push push lret pusha fnstenv or fs xchg cmc leave cld mov pusha std adc aad popa dec repnz xor (bad) push dec cmp add mov pop shlb or pop mov nop outsl fidivl jae iret adc mov (bad) nop pop dec xchg nop jecxz push imul in js inc iret mov push mov xchg pop xor inc insb enter lcall popf cmp and imul lahf test dec lcall add enter movsb mov jl pusha mov sbb push in inc sub or sub insl add fldl (bad) mov xchg (bad) jo pop mov add loopne,pt subl mov icebp aam mov sbb (bad) xor xor popf lea xlat adc ds test stos decb mov dec xchg repnz inc or ret jns add sahf xchg push mov sbb sbbl gs xchg xchg hlt mov mov pop repnz pop xor xor imul lock jns pop jo les dec fcomp stc hlt inc loopne adc out jo or add pcmpgtd or cmp xchg mov mov mov lds cmp gs xchg jnp mov clc xor ret pop cmp shlb inc push jmp pop sbb jl push or push fdivrp js lret jo jl push out jecxz adc mov aas add std jbe hlt shll in mov test in xlat fstl jmp cmp sbb push (bad) cmp cmp pop pop repz nop pusha dec push jne aad mov lea ljmp popa aam inc push in loopne movsl pop cmp push aad pushf pop cmp lock cmp xchg cmp mov pop or xor pop in pop sti push fs pop adc push push mov xchg test nop push or mov dec or enter or push mov ljmp mov inc cs (bad) dec dec pop sti outsb dec les or pop xchg sarb test add pop fistpl pop push nop lods cmp test outsl popf xor mov cmp jge xchg jnp add rclb repz mov test sub add xchg add rol loopne ljmp ret mov lea call pop nop adc aas inc jge pop jno cmp mov in mov iret out testb xor sbb mov add hlt sbb mov push sub rcrb mov arpl and jp cmp fistl sub push add xlat xor add mov cmp ds adc push or jo rolb adc pusha add xchg enter (bad) hlt dec mov incb push cwtl xor decl mov or movsl (bad) mov pop cltd pusha incb or in arpl adc mov sbb xchg addl stos dec add pop mov or shr js dec test fwait jno mov loopne cwtl add add mov sbb xor xchg or or negb push adc mov fsubl fisubl mov sub adc movb mov (bad) push popf pushf pop and mov pushl mov ret sub data16 push xorb addr16 xor lret pop adc ds adc mov (bad) mov mov dec insl popa sbb lock inc dec mov ret cmp iret je imul cmp arpl rolb jle mov add ss lcall mov mov repz outsb movsb mov push dec ficoml or or xor adc fst jo pop push scas sub pusha push mov cmpsb iret out arpl (bad) aas mov (bad) push pop jo xchg push pop inc in lods sbb data16 push mov ss cmpl daa xor jo test mov cmpsb leave sub js and movsl fs xchg loop adc js pop jp mov sbb and lcall jmp aam les add adc mov add xor adc cmp aas iret mov push and sbb sti in lret xchg adcl sbb bound push lcall imul lods ss mov sub frstor mov pusha fldenv daa dec pop icebp insb imul sahf lods imul cwtl rol repz add cmpsb mov (bad) in hlt xchg lds pop pop and inc xchg scas mov add (bad) jle cli mov mov repz xchg mov ficom rcl mov out sub add scas call xlat or mov repnz test xchg jae aas adc addb xor xor inc in loopne insb mov data16 sub dec jp dec shrb cld lods or outsl rcll movsb mov push jae (bad) in cmp or rclb rclb cmpsb cmp (bad) arpl jge movsb add mov push sti mov shlb pop pusha mov imul dec add and mov pop arpl stos push mov add mov loopne mov lcall stos rcl add (bad) into sahf lahf (bad) lock xchg aaa outsl loope mov push orl push and xchg in and cmpsb test std outsl cmpsl icebp ss call sbb in dec je adc add test call rolb mov sub (bad) sti cli bound (bad) int popa or push leave roll or out shll xor arpl mov xor cmp test rorl jecxz sti mov dec ret inc adc movl jo sbb inc add fstps (bad) inc (bad) fcoml sbb (bad) rorb andb add lea or push iret fstpt sub ret dec lods cmp into dec mov stos mov dec test pop aad test dec pop rol shll sbb push lds repnz mov das dec sub insl in subl shrb mov cwtl inc mov (bad) pop and dec div aam add out adc lods in loop pop movsl fsubrl xor in pushf lea cmp loopne cmpsb xchg push jge add push jp in pop or cmp mov or or dec jg aaa and call push or add cmpl xchg pop or mov je add das test push add call scas cmp iret dec jp xor push les insb pop or jns lock out add (bad) pop mov divb xor scas call lds mov add pop mov in (bad) dec sub sarb jo add (bad) mov int fcoms mov loope test repz adc insl jl nop hlt or hlt out les add pop pop add xchg call pop jno jecxz rcll ret sub fs call inc dec adc push loope out loopne fildl sti inc fnstenv sbb stos pop imul or adc pop lods ret ds lret sbb fsubr clc testl jbe dec xor test sldt es add das into push add out ss adc xchg jle popa sbb icebp jge xor inc into dec mov add jle dec jb cmp ds psubsw mov xchg sar sbb dec or mov enter cmp add push cmpl push or (bad) cltd and stos pop fiaddl mov push or xchg insb dec imul jmp dec add js xchg xor mov in aam mov mov adc iret mov sub sub sbb test cmp mov adc jb mov mov inc in pusha pop pop mov pushf jg jp mov nop mov adc xchg frstor or call xor mov gs or pusha jp dec jns pop sarl cmpsb frstor clc out jmp push xchg (bad) (bad) add sub pop jl xchg dec das sbb fucomi jmp xchg mov add (bad) push lret mov adc add mov sub inc nop stos push push mov arpl and shll dec or adc lods in pop mov mov test xor or dec sbb pushf mov inc or jne (bad) lock xor addr16 sbb sub adc sti dec jp addr16 popf fwait jo cmp dec lds js fisubl rcll sub js xor ljmp add test xor js fisub roll flds mov (bad) dec mov test (bad) int stos jb cvtdq2ps inc jge or test dec in lret mov or pusha add fcomi leave test inc arpl mov pop nop add lcall jmp xchg call cld mov add adc cmpsb mov inc test mov out mov pop arpl jo js jno movsl ror fwait or repz adc or or addl out xor and mov neg pop in push mov fs ret push mov fs cmc fcomi sahf push cli (bad) mov aad jmp xchg and data16 clc in aam movsb xor adc js cld lret jge (bad) clc cmp sub push fdiv test dec lcall scas pop push dec cmc outsl cmp test in test stos push fwait js and mov imul sub sbbb leave jmp adc push test push dec cmp fcomps dec loope arpl pop push push mov rcr xor cmp push fnstcw add jb add jae inc popf jle mov lret sbb push cmp lods ljmp cli ja xchg outsl rep call sbb xchg fs jns stos push enter push icebp movsl in mov stos inc mov stos (bad) adc ljmp call cmp ljmp fist icebp aam cwtl push adc addl pusha movsl fstpt pop sub out mov dec jl sbb pop mov or mov xor pusha pop ja mov dec and (bad) mul pop pusha insb popa add loop jl add mov pop dec rclb out cld movsb in out aam pop rclb repz test movsl pop xchg test mov les push push push push lods or rorb add aad xorb mov repz sub adc leave or xchg mov mov cmp and sbb pusha lock stos lcall dec and cld inc pop mov out xor adc pop add daa pusha (bad) mov add (bad) add xchg or pop fsubl dec dec mov xor add add xor repz adc mov mov imul loop push jno or fldcw imul (bad) popf mov dec mov adc pop outsl fldenv pop sub fistpll xor loopne push inc or and fs xor mov imul test addr16 add repz orl in jp popf lcall rorl sub xor dec roll ds icebp movsb add shr test cmp cwtl int3 xchg rcrl mov add (bad) mov or arpl mov les in and lret mov imul loop jo into popf mov addr16 inc cld sub lods mov fist repz jns call in jb loop sarl and (bad) js mov das lds cmp mov mov lods adc inc cmp xchg jmp in int3 subl (bad) js inc je pop mov cwtl mov insl mov mov push mov (bad) ljmp cltd adc push pop hlt in shlb inc aas inc sub mov enter push movsb mov popa mov subb xchg pop movsb shrb sbb push inc mov sub hlt int pop popa nop call cld jo dec enter (bad) mov mov push in pushf movsl shll cmpsl add (bad) dec ljmp mov arpl (bad) in or int3 mov pop hlt hlt push ss shlb and sub fisttpll aas adcl ja pushf xchg call mov mov add aam jo inc icebp jmp cld sarl loop pop mov inc enter test pause mov push lcall lds scas add in sub jp nop sub lods leave push mov mov lret in jnp cmpb (bad) negb out mov mov pop movsb jecxz sbb les out test dec cmp sbb sub pop xchg jp les cmpps shr outsb xor mov jns repz and inc fcmovne xor jns or popa in rolb js scas push or adcb add mov pop addb add jnp jno outsb xchg add and (bad) lret imul sbb imul xchg gs mov inc scas pop fwait adc out leave jp add inc sub xchg es or push insl (bad) lock cmc push lahf dec fs je ret je add and ljmp or inc push addb aad push pop cld sbbb sbb jb and add cmp aad ret pusha test xchg cmp mov sub jg fldcw fiaddl push icebp jbe or sub jmp mov push add xor ret sbb sub jg test add and data16 and cmpsl inc stos and cmpsb adc pop dec jmp sub imul inc xchg inc mov lock loopne or in push and lret hlt icebp and movsl xlat faddl sub pop mov fadd popa lea mov and lcall dec xchg call ss dec and jno mov imul pop xchg repnz cmp inc aas pop jl cmp add daa jmp xor in add (bad) xor mov inc mov dec cld call test in or and loopne jo push add (bad) pusha fcmovne mov inc pop dec in stc cmovns xor repz daa jae cld mov cmp or out cmp and test jp xchg jmp dec pushf mov mov add std nop mov sbb sub sbb push lock pop shrl jge sub (bad) pushf mov test jnp nop mov sub inc mov mov aam test cmp test mov lea add xchg sub push mov ret pop sub mov inc popa xchg jl hlt adc fsub inc push insb test pop push push leave clc mov (bad) add cmp fidivr lds outsl hlt pop adc push inc in push out cltd push cmp sbb or (bad) xor test out jg nop daa ds loope mov push je mov cmpsl and inc ffree sbb adc call xchg adc shrb mov mov push js inc jl jl dec lret leave or movsl add int3 stos repz push adc adc ret or ljmp insb jmp dec iret ret les (bad) mov jmp mov enter ss push cmp adc push rolb pop in add add add pop pop rcl jae push dec insb add divl add push jge inc lea or (bad) out push push in mov aad out andl push inc push mov inc nop (bad) cld ljmp cmp inc mov movsl ss jb push lock rcl pop pop ret dec push nop subb push mov pop sbb cmp leave pusha pop inc scas add ljmp dec out enter jae ljmp sbb and pop pop mov pop push loopne sbb xlat xor push mov mov das loope loop add jbe xor xchg add push adc outsl lea (bad) lock inc loop pop shrb int3 jl movsb bound add test ret clc stc pop dec jmp jns lret int3 add sbb mov insl jo add mov mov pop (bad) xchg add add imul nop test sbb or sub push dec out xor scas into addr16 sbb dec mov pop test jae movsl push mov mov sub rcrb pop pop in inc test adc xor les rorb push int loop lock cmp and rorb mov push xor adc mov int3 fidivrl and mov mov sti scas adcb add frstpm(287 shll dec test mov xor adcl add cmp dec jns adc mov adc mov pop add sbb test add sbbl sub mov mov insb data16 and mulb dec push xchg clc fnop pop mov add jmp pusha or js mov (bad) scas lods xchg add dec xor xor sub lcall add (bad) stc xchg insb xchg ror test add outsl cmp or cmpb inc orb mull adc cmp mov mov jbe mov dec mov dec jg push dec xchg adc pusha loopne dec mov cmp (bad) das subb call cmp adc ja xor test inc lcall pop (bad) int inc fcompl jmp js jmp add popa int xchg mov sti add sub pop mov pop and adc mov ljmp xchg mov icebp and movsl mov notl mov mov clc add dec mov enter jo shrl xlat loopne scas adcb jp dec (bad) jb cmp aaa test hlt pop es cmp jmp push sub pop in mov ljmp fwait xchg ret mov out mov push push stos add enter popa sub pop push sub pusha adc in add shll dec (bad) (bad) imul in sbb ret loope repz imul cmpsb int3 and (bad) fiadd stos jle push insb pop lds add aaa sbb jbe (bad) in cmp push pop mov dec pop sub int popa mov xor xchg imul subl movsb loope testl js and ds add xor adc inc pushf scas daa fnstsw lock dec into pop rcll add xor add pop sub push out or punpckhdq call cmpw ds mov test mov (bad) add jae icebp mov rorl mov sarl xchg cld cmp cs js int3 out pusha xchg add lret inc nop mov cmp cli icebp rol mov jle mov pop mov clc cmp scas data16 sti add call sub scas cwtl sbb lock leave cli push jp inc test mov cld fnsave and sbb lcall sub adc mov adc cmp push cmp sbb add ret ss cmpl add fcomp ds jecxz mov and or pop jo pcmpgtd fs das out iret mov sub push mov xor adc adc sub mov popf push aam or inc sub arpl and mov mov pop sub clc adc mov (bad) mov cmpb and mov inc add adc popa stc or pushf mov das jno (bad) xchg pop mov dec push shlb (bad) pushf rolb test mov repz or movsl pop and sbb push sbb adc jbe mov std or int3 shrb push add outsb dec call jbe cmp insl xor aam pushf lret js outsb insl sbb cwtl (bad) mov pop hlt out dec les pop pop jns jl cwtl mov fidivr dec lcall scas cmpb je inc movsl sbb xor mov xchg mov repz adc aas ror xchg cmpsb mov pop pop clc add jecxz sub add mov in jl pop stos mov adc add inc and stos out (bad) mov sbb pop out in mov mov jnp adc sbb (bad) jb outsb rcll mov outsl fisttp xchg enter shlb mov add lods jp (bad) xor sbb or sub cld xor adc push es nop pop ficompl je sub add pop mov or stos stos add ljmp push xchg push incl mov out (bad) sub mov inc cld mov dec or xchg sub sbb dec aad and pop xor adc cmc pop les movl jne in pusha or mov aad or xor lods add arpl lcall dec js xor aas lods popa xor add mov add push xchg rcrl lock lea xlat nop lods cwtl push add scas popf dec mov sbb add and popf push stc push out addb pop push add mov aaa cmp pushf scas add sub icebp pop out mov sbb movsl cmp enter sarb ds je leave (bad) mov adc xor mov mov clc sbb or call cmp fdivrs push and rcrl mov (bad) xor lret sub hlt jno cmpsl sahf cwtl add pop loope daa and sub pop push add push stos jnp xchg jno mov mov add sbb into lods js pop sub add cmc lahf bound (bad) fild iret xor lret lock shll push or mov fnstsw xor ss (bad) decl inc push pop sbb pusha lahf shrl mov imul fildll mov loopne insl gs loope lods iret or mov lea inc stc inc enter add addr16 jo pop sbb add fiaddl fcos shr xor dec cmp pmuludq fmuls sbb mov and daa xor int inc push pop es nop sub inc out pop fbstp cld push xchg dec pop sub xchg pop cmp inc data16 mov (bad) notl pop subl add dec xor inc or xor sbb call inc xchg ret pop xor cltd pop (bad) enter js add push or jne repz cs testb rcll mov repnz lahf fisttpll mov icebp mov bound adc (bad) cmp aaa and or xchg xchg cs sbb add xchg int dec clc fisttpll scas (bad) cmp into add aaa mov xorl sti push cmp xchg scas lock adcb add int pusha sub push imul or and add jle popf push xor movsb xor loopne and xchg dec or jno in xchg jnp in mov aad pop mov mov xor adc or push insb sbb pop add adc pop out add inc pop jge dec push pop rcr cld xchg and jo pop inc mov xchg and add or clc (bad) (bad) or or cmp push sub popa mov seto js adc add xchg jo jb mov or pcmpgtb outsl cmp data16 and adc mov pop repnz add insl mov add mov mov rcrl push pusha out rorb xchg xlat in jle rolb jmp fmuls adc add pop sub fild clc outsl lahf rorl or leave sbbl mov in or jnp xor push xchg sub sbb or (bad) cmc cmpsl pop scas push imul jae jl cmpsb subl mov insb mov in mov add add inc loopne lret push pushf andb jns dec aad mov mov aad mov sub out mov (bad) sub aaa (bad) cltd or dec push faddl int3 cwtl or inc jge (bad) lods or lds pop jl and aam mov add and sbb je add pop jecxz push add or insb sbb xchg nop mov (bad) xor cmp dec ds ds or lods cmp ret ds (bad) cmp or shrb pusha imul addr16 add push test add out mov out jp sarb stc test add mov sbb add in add xor loope xchg lds and cmp lock add and push sub mov push (bad) push pop xor in cmp pop aaa inc popf mov addr16 (bad) xor mov and shlb lds test mov mov xor cmpsb mov das add jp leave mov push fstps aad sbb pushw fwait adc mov pop sbb inc hlt ret out add mov into loop dec lock push pop lods add sub mov mov lods rorb add sbb popf (bad) mov jnp lcall inc jg pop jl pop mov xchg arpl adc adcb add mov push je (bad) cwtl outsl xor mov jg rclb dec xor push mov fldenv dec stc and mov addb xchg sbb adc mov stos (bad) pop test mov adc daa test push inc adc or fwait inc pop xchg and cltd cmpsl and mov xor mov push sbb cmp loopne lods or sub xor pop pop push sahf jnp xchg or xchg jmp sub dec mov lods inc cwtl sarb inc pop xchg xor cwtl push es pop mov mov lahf movsl inc cmp fist or dec in enter stc adcb ror nop pop fidivrl adc es and jecxz or mov sahf test mov dec sub inc daa add mov fidiv aad jae push inc int3 mov jb add daa jo ret int3 inc mov mov push leave fisubr sub add cmc push fsubs aad sbb dec call xchg inc sbb outsl enter push mov dec mov les mov arpl std lods popa push cwtl mov out enter pop or inc rolb gs mov nop dec sbb xorb cs cld dec jns dec inc adc cmp mov (bad) jns dec jmp cmp lcall jne push add lds xchg in dec cltd shl mov clc pop adc adc xchg xor mulb nop pop shll loop inc and sub mov icebp nop add mov repnz lods push sbb xor push jae cwtl push inc xchg xlat loop xor out xchg xchg movsb pop inc (bad) push or inc xor xor (bad) (bad) into mov jbe sub sub jl inc jp repnz lret sahf inc pop call adc mov movsb clc add and rcrl and imul bound and ljmp sti cmpsb sbb shrd or pop mov lret jns es or imul push jl js pop cmp cmp mov je cmp pop sbb adc jmp hlt mov and or push pop aam ss stos mov cwtl lock popf sub inc xchg andb fnstenv mov int3 add (bad) jl outsb sbb pushl repnz push xorl hlt fisubl pop mov lods pop and dec sahf xor ss sbb ljmp sub jmp mov xchg adc fdivp sarb mov xor xor cmp imul cmp outsb jnp add call ficom mov push aad sub dec push call pop clc xor push xor dec push (bad) mov xor and pop pop leave ret (bad) sarb or shll repz xor mov or push jecxz dec or fnstcw adc add mov fwait lds insb push loopne pusha les mov mov test push lods sbb inc xchg dec pop sbbb test add mov unpcklps cmp pop and pop and insl push pusha add xchg pop xor nop dec rolb mov inc xchg movsb nop rorl test mov inc cmp push (bad) mov scas sub iret or das sbb add adc xor arpl aas imul or adc cmovl xchg test mov dec cmp push mov sbb inc jo mov sbb out push je addr16 fdivrs int3 push or cmp rcll ds push xor vmwrite lahf fmuls adc mov mov pop test add push and pusha shl outsl mov cwtl movsb inc dec adc sbb cmp and call out xchg jp add inc cmpl xchg push orb dec add loope add inc in adc mov lahf mov push or (bad) mov sbb jl rorb (bad) cltd sbb inc repz sbb mov and out mov xchg sbb dec and cli mov jge add pop push fstpl sbb out push adc inc je mov jp add in ss fisttpll arpl cmp cmp or cmpsl cmp leave xchg xor ss or push and sub adc js mov sbb xchg inc leave inc sar enter jle adc jne and pop adc xor (bad) sub adc mov push pop js and insl adc push xor repz adc jnp add sti jp xor rorl inc mov stc rcrb shlb add fsts lods test mov insb popa jae inc sti (bad) test sbbb xchg adc inc in add pushf mov fwait inc int3 push or loop mov and shl add adc jne pop push cmp hlt push inc mov loopne fimul shrb mov aaa add sar mov mov cs fdivrl jno ds sub scas cmp pushf outsb cmp in sbb cwtl push sbb cltd mov subb enter and aas (bad) lods loopne cltd jbe setno mov lods fs ss iret call (bad) jbe add sub inc lret or pop and nop lods test or mov or out lcall out sub mov sub push sub or push ja pop dec jl adc mov jno and arpl into (bad) xor notb fdivr fucomp and rorl push pop das aam mov lods mov lds shlb (bad) movsb lock iret ds mov mov jbe and shlb cmp mov mov adc call and xor cmp pop dec add sbb sub test add push mov mov add add out repz and (bad) mov sarl test or test pop and fwait movsb clc iret nop sbb call mov mov push and lock leave push mov test xor fs adc mov dec movsb inc xor sbb and in les clc out sahf data16 push or mulb mov loop inc hlt in lret mov icebp xor test sub xor ds xchg rol mov mov je das arpl loope rolb in or add stc xor pop push cmp fsubs iret lock loopne cmp in and push lret or dec adc int3 sarl adc mov mov imul pop pop cmp mov bound ret (bad) jae or fldenv jmp mov cmp loope jecxz fnop inc hlt sub dec jecxz pusha inc in das and or out jmp mov xchg sbb xor leave or and nop mov in or hlt mov pop out (bad) push mov cmp push mov mov mov clc mov into inc js movl js cmpsl or add mov cltd cld jecxz sub xchg sub push pop jp or xchg jno arpl and mov test pushf in int clc pop jbe addb in in jl (bad) (bad) imul or push jno add xchg pop test fs xor loope or fnstenv inc fucom xor popw or inc adc mov pop mov and mov iret test cmp pushf mov add out ret mov adc int fmuls inc mov xchg pusha nop pop rcll or add ds xchg mov addr16 cwtl mov pop shrl js hlt je xchg insb jo mov je std inc test scas mov push add and int3 or nop aam loope ss and inc js mov add xor and push les rorb dec ds orl add test cmp xor int3 or aas cltd fldl mov add mov add mov sarb scas add push or add rclb add ret inc cld (bad) xchg add scas push add sub or shl lahf push xchg outsb mov insb cld mov jbe mov add push and insb outsb loop (bad) or mov (bad) adc cmp arpl push xor jg jb lret dec ljmp scas xor mov mov pop inc pop add jmp (bad) cmp add or adc mov sti popa loopne cmp xchg loope cwtl add or xchg inc popa cmp aas mov inc hlt xor sub cwtl mov sub mov dec add pop popf popa cmp mov nop dec dec sbb arpl test add aaa mov cmp mov push movsb dec or mov xchg pop jno js inc inc mov inc mov test sub adc lcall and (bad) xchg fs xchg mov lods and je pusha cmp sahf or add popf cmpl xor jnp push std mov lret dec sub mov xchg mov mov xchg xor push adc add (bad) repz xorl repnz out cmpsb mov pusha xchg adc ret adc inc movsl xchg cmp ror (bad) mov mov mov mov pushf xchg xor add push adc ds and mov pop (bad) mov mov nop les test xchg bts or sub add lods outsb mov insb adc or repnz (bad) xor push (bad) (bad) pusha popf inc or dec (bad) push mov adc jl push and add hlt adc shlb orb call jnp add fisttpl inc and or dec pop mov lcall push test push lock push ficom in xor sbbb (bad) shl lea (bad) movsb mov inc mov mov dec and adc test or rcl sub ret mov (bad) imul lea xor lds xor push sbbl call pushl pop bound adc add or xchg nop jl int3 inc or mov in imul scas add xchg cmp int3 mov mov xor xor jne inc cmp shrb dec xor arpl inc dec nop sub test ljmp sub xor adc inc inc or inc mov nop movsl sub add cmp xor mov mov arpl push fcom inc xchg xor enter add add out push or add pop pop dec xor or mov inc dec xchg jo ljmp jns add jecxz enter or lret sbb test inc inc (bad) int3 fadds add andb scas pusha jl and lret pop inc nop add dec mov jl test les add push xor daa or and cwtl and fdivr repnz dec int or cmpsb inc mov inc mov mov push add dec mov imul inc cmp rorb inc cmpsb inc mov sbb xor cli sub mov call bound cmpsb shrl cmp cmp iret cmpl imul jp add faddp mov inc adc daa jnp jne cli adc and loopne jno add sti inc mov push jno setne mov rcrb fwait pop bnd add scas sub pop int popf add stos fwait xchg sar sarb (bad) jne bound sub out or jns stos mov cmp cld add adc (bad) enter mov jnp fcomps xor adc or mov add imul dec sar das mov int3 jns loopne add ss loop sti incb adc mov jmp add ss fcmovu inc add cmpsb gs pushf add mov add adc push adc insl add repz dec add adc insb js pop or adc nop/reserved sbb or cmp sti jp add mov fdiv jmp sbb mov mov imul fwait add push fisubr repnz (bad) sti xchg cwtl sbb dec xchg gs shl sub in lock dec push pop inc stc sbb dec sarl inc in dec xchg nop mov movb call sti cld shrb lea adc stos or cwtl xchg movsb inc cmp lods mov clc pop sbb ss mov inc add fwait dec repnz add dec addr16 fwait gs adc popf jae jns lock push mov and adc or sub adc inc mov stos jp pop pop add and mov jae fmull cwtl add popf rorl test imul mov or add adc jno lret add sbb push ds sub jle shlb jmp and ljmp xlat cmp push (bad) ss repnz mov cmp leave push jne mov cwtl xchg sub jno lods (bad) fs movl repnz xchg mov jo dec in add mov popa adc sti outsl andb sbb ss out pushf or inc lock mov ret sti lods stos addb cs add push jo add fwait repnz adc cltd mov rclb fdivr gs push and push and in sti int clc nop aam fdiv (bad) push popf loopne adc es loopne dec xchg cwtl mov mov (bad) cmp sarb insl out cltd int aam pushf pop fistp pop test test xchg xor cmp orl adc xchg sub lods mov mov jg add scas xchg adc and loop mov (bad) jmp ficomp (bad) mov addb add add push jb or xor jge addb (bad) (bad) outsl jp mov inc subb adc cmp add adc aam jae or adc add nop pop xchg cmc inc mov lcall lret xchg insl sbb cmpb dec adc sub rolb test mov and faddl stos ljmp and sub cli dec add shrb lcall adc inc in leave sub cmc pusha sbb cmp call and out sbb mov pop movsb mov sub adc cli mov cli in inc hlt fnstsw scas add cli iret imul imul mov xchg pop rcll add push stc mov fidivr shrl pusha jnp dec mov adc jno insb sbb pop inc repz and push lds jns movsl jl (bad) cmp rcrl divb fs sub push ja (bad) int3 pop cs add mov addl adc hlt add mov push (bad) and mov push xchg mov inc jmp cwtl (bad) lret xchg ror push and add adc adc cmpsl cmp in sbb xlat adc mov adc adc add xor ja mov (bad) jo sub flds jmp pop sbb dec inc jge in or jne xlat leave rcll jno adcl in mov lahf adc out mov fst inc mov xchg add aad mov sbbb dec mov jbe xor sbb xor cmp icebp inc lods mov mov xchg mov cmpb push and push adc add jne add mov jge nop in mov sbb dec jp mov jne xchg ror xchg lret (bad) xchg (bad) adc ret jno mov (bad) mov xrelease mov addb dec add repnz or lret sub mov inc inc mov fadd jmp pop add mov in xchg add lds test dec push dec or mov xchg dec insb lods mov nop enter add mov stos push movsb insb sbb mov call xor inc clc das (bad) or sbb jne inc call mov loopne mov jle add dec mov sbb mov and cmp cld push adc or cltd decl jecxz lock pop pop push (bad) es sbb push das xor xchg adc and push clc in lock ret jb sub add xor push and (bad) cmp test dec cmp mov cli sarl (bad) pusha mov add test push sbb sti and add scas jl add (bad) xlat mov add and cmp add mov mov pop (bad) mov push inc mov mov popa call and sub adc xorb dec push cmp sbb xor scas addr16 adc orl dec aas ja xor adc dec nop mov adc or cmp and sti cmp inc xor loope add insb shrd fld adc ret test pop add icebp xor adc inc xlat rolb cli push (bad) nop out and dec cmpsl pop xor sbb add xlat les sti test nop test or jns insb movsb addb xchg dec jmp push push je cmpsl std and or and adc fwait sub sub cmc adc add mov inc add ja int3 sarl mov jne add jge ss icebp in dec movsb pop or xchg test adc cmpsl and mov jecxz adc sti insb and repnz dec ja out jg stos clc incl cmp (bad) jne sbb sbb xchg dec or add nop sbbl imul dec rcll pop and adcb hlt mov movsl cmp cwtl add imul sbb push mov sahf out fs and je cs test daa sbb cmp xchg lods adc cltd cmp dec icebp add outsl test xchg sbb rcrb fiadd (bad) fistpll mov xor clc cli xor and mov cmp ds dec inc jo pushf push sbb aas lahf add lcall xchg bound cltd xor pusha movsb imul rclb sbb dec lods je insl cmovl xchg call xchg sbb dec add mov jnp (bad) lea adc jne inc sbb js add adc lods sbb repnz or insb mov in or mov ja adc pop vunpcklps add sbb inc push jo sbbl dec and (bad) icebp sbbb inc cmp xor js or mov pushf adc and cmpb inc pop rcrl mov subl add adc adc jmp out push cli int3 cmp test idivl out cmp fidivr cmpb mov cmp xchg push or fwait or add cmp add (bad) fisttpll xchg mov cmpsl push add scas sbb shrb inc pop cld inc in dec lahf add (bad) cmp jge add mov push fwait add push mov icebp inc aam sub mov push push xchg insb mov mov aas cmpsl or sub cmp add pusha adc std shlb add jmp sbb or int3 mov mov (bad) mov push jg add scas cli mov xchg xchg ret xor add and jb xchg fwait mov std (bad) dec inc js add loopne repnz xor sub pop add aaa xor sub cmp jnp sub add mov inc and pop pop or insb add les jo movsl xchg fs cltd sahf pusha push cmove pushf decb iret push int3 dec and paddsb or inc dec add adc scas test and xor hlt (bad) add xor insb pop sub adc push pop cmp dec lcall xchg mov in daa dec sbb cltd aad pushf call loopne xchg dec add adc sbb andb pusha mov sbb push and mov gs push xchg enter cli dec cmp loopne mov test ja std and push call cli test inc stos and pusha fcoml pop sbb mov and xor add dec dec dec outsb xchg clc xchg enter in out sub js dec fnop adc add lods sbbb mov icebp loope cmpl lcall adc test (bad) xor pop cld pop or inc xor scas adc lcall add es movsl adc push enter add arpl mov dec push push xor or mov sub xchg pmulhuw adc stc inc insb push rclb dec xchg add cli jns rorl adc or pop lods dec clc inc xchg cmp insb jl data16 adc bound add das add push (bad) add andps pusha sbb add dec push scas cmp or popa ja stos xchg or cld mov mov pop js loopne data16 xor adc xchg pop fwait test jl repz push sbb adc push inc or jno in jb jmp mov insb adc clc sub jl xchg cmpsl xchg push jg aad push sub push fcomps sti sub push lods scas aas aaa aam adc xchg pop imul and cmpsl push fstpt mov popa sbb bound addr16 repz cmp xor in inc outsb (bad) icebp jge sete and rclb mov mov adc mov push add jne (bad) dec loope cli and cmp fwait xchg xchg clc je dec cmc aaa cli int3 and jl (bad) aaa push add insb bound sarb outsl add jle xchg ror aaa mov fbld sbb (bad) push xchg or stos nop or xor xchg inc inc test mov negl inc cs mov rcr dec jne mov aad lods dec subb xchg and fs lret adc add dec inc cmp cmpsb cwtl xchg and adc test lea push arpl push mov (bad) mov mov sbbl shll popa clc icebp sbb pop mov jns lds inc mov and scas loopne test pusha or add dec or xor cmp loopne adc das or mov inc xchg and sub insl (bad) sbb incl pop data16 and push loopne mov push pop add mov cld dec add test adc mov lea mov mov or shr (bad) sbb dec dec rorl es add xor mov add mov inc inc jmp cwtl push lahf add stos sub sub jae mov adc adc (bad) fadds inc and jnp movsb adc add in cmp clc adc dec mov pusha and daa adc ret enter (bad) xor shll cwtl call ret add inc dec xlat dec fcoml out nop xchg test adc (bad) inc and icebp push jno mov and adc pusha pop lock cltd jl sbb xchg out lods add inc loop sub xchg out sbb pop push pop enter xor ss inc add add shrb jns cltd int3 out or enter and mov adc rorl add push adc cmp loopne nop rolb or jecxz pusha mov into add mov sub xorl pusha lds pop push adc xchg and push pop or ds cmpsb negl test scas fcmovu loopne ja mov or cmpsl lock inc int mov or push mov mov xor popa mov jo test out sbb cli jb or movsl sbb add pop (bad) mov mov push sbb test out mov push xor divl push sub xor dec add rcrb dec stos test fstps dec test clc ret js push sbb imul add (bad) fdivrs push scas mov sub adc ja add call push sub inc jae add cmp pop sub add sbb (bad) mov imul mov sbbb or dec dec xor cmp mov movsb aas or adc clc xchg adc push cmc fwait lahf xor inc xor inc (bad) outsb push fild sbb or or add (bad) pop dec jb nop daa xor shlb loopne ja mov xor mov cmp loop sub sbb push xchg and xchg xor shrl jae pop in fldenv inc cmp cmp test pop fmuls pusha clc jmp mov or rorl adc pop clc or sub sub fmull push lea sbb ljmp jge or test sub or push cmp and add roll and enter dec adc loopne insb sbb loopne push call mov jl or jb cmpl ret jo test dec mov shlb adc negb mov je sub pushf dec mov daa adc sub sbb sti adc push call mov and push sarb add lea stos mov lcall adc js loopne sbb dec add ret in jmp (bad) in jge cmp dec test xor adcb push cmova inc or out (bad) loopne add push xchg jo xor hlt (bad) cmpsb shl fdivrl cwtl pop ret jge sarb cs add push cmpl dec in mov push sti repnz xchg inc cltd sub cwtl mov scas adc imul xchg push adc insl shll mov cmp test fsubs jb add pop mov cmp mov and cmpl add ja or out sbb add mov out sbb add repz cltd (bad) subb cmp lret jno popa test cmp repnz adc test push je js dec dec or mov inc (bad) aam pushf sub imul add cli test js push jmp aam (bad) jo inc pop clc cli jg jl dec adc or ljmp add mov adc cwtl lock (bad) fistl jl fwait push test dec cwtl xor imul or dec cli cs xor add pushf mov pop les aam lcall rclb adc lcall and and imul sub insl jno inc in cmc out js mov lea cmp orb (bad) mov dec mov je in (bad) fnstcw add fidivrl or lock add outsl push inc jns xor push or cld ds jo xor sub cmpsl nop pusha or xchg cli jo dec imul aas fdivr or push jnp dec jl stc mov test pop sub add jle xchg pop mull jl mov je xchg and mov nop xchg mov push mov cmpsl xor sub addr16 enter pop mov inc xor sbb xchg insl lcall and mov sub push cmp insb cmpsl adc pop lahf cmp xchg loope mov aas mov test mov cmpsl fcoms mov push stc scas cmp jno mov mov mov icebp jle insb in xchg rcrb cltd sti push leave or push cli sahf aaa sub out inc daa xor test sahf mov andl sbb mov test or xor jne paddsw add cli subb mov pop rcrb sub adc icebp out pusha inc or inc pop push pop sub ds fdivrp dec nop pushf divb or adc adc out ret daa addl loop aaa add out sub xor fldenv movsb in push shll (bad) pusha dec mov icebp jg or pop outsl dec inc (bad) xchg mov sarl stc mov adc movsl mov cmp mov sahf mov add xlat jge pop jno aas sub jecxz cwtl rclb dec push xchg dec (bad) pusha or sti or dec lods mov jo rorb jb add xor jno add scas lcall sbb adc add add inc xchg sbb je add je into or xor rorb aas push popa jno inc repz add xchg cltd (bad) icebp mov (bad) daa cld lock mov popf imul adc jnp inc mov mov adcl inc cltd lcall int3 loope sub add in or lcall adc mov aad in (bad) ja adc popa fimul fbld imul in (bad) ds xchg sbb rcrb cli and mov adc add jbe shrl mov dec sarb movsb push mov and push cwtl cltd insb in clc (bad) lret sbb dec ja test xor ret and xchg add test repz and das cmpsb sub mov mov push sbb xchg sub or test push inc or mov mov mov cwtl sub jns mov mov xchg jge mov fs test sub mov ds mov loopne sbb jg xor es (bad) and leave popa imul test iret push xchg and faddl push test incb sbb cmpsl add loope inc xchg out fcoml xchg invd sbb adc xchg cmc add test and pop mov cwtl bound outsb iret lods add test add mov loopne pop sbb adc aaa int3 addb js push mov xchg adc adc and mov js mov xor jl cmpsb cmpsl dec add adc push sub sbb lea mov mov mov push sbb xchg jnp ffreep pusha add nop sbb dec sub jb add mov jle sbb pop data16 gs jbe jne xor movsb jae mov test je out or and daa dec sub push dec adc jno out mov mov dec and dec ret cli cltd call (bad) mov addr16 roll cmp or cmp and outsb cli loopne xchg mov and lret inc daa cltd inc in or pop clc lahf mov dec push push nop jno dec push iret loopne xchg sub xlat pop mov pop dec xchg stc nop inc xchg xor xchg call stc xor aam icebp cmpsl add cltd add daa or pop mov mov rolb jno aaa js adc add jge jns repz lods in add cli push xchg adc and xchg sbb stc sub pop push or inc adc addl sbb xchg imul loopne xor or je stc sub adc cmpl (bad) mov xchg test xor mov sbb mov pop inc test xor mov or call test scas and mov inc lahf add hlt and mov push xchg jmp mov adc pusha jge xchg in sbb mov xchg adc adc out pop xchg and and mov adc cld mov and jo push out sbb pop add cltd mov test cli arpl xor jmp add hlt pop jo cld add add push mov or rcrb testb ss hlt js sahf add sbb lock add add sti insl inc pop sub clc movsb or and add and xorl pop (bad) xor ror mov js jl out mov sub clc (bad) lahf add div mov add mov psubusw mov xor add ss jo xchg hlt or test and pusha sbb add mov outsl dec lcall add in mov add jo pop scas or push outsb pop xor xorb jns add xchg lar js mov aam (bad) outsl xchg mov jecxz or les in cwtl loop andb mov in pop sub (bad) lock pop fcompl cli inc inc fcomp xchg adc sub inc scas addr16 inc cmp dec es cmpsl push jl lret mov cmp inc push addr16 inc (bad) in call sub cmp adc add std aam jp and cmp sub xchg loop push push xchg repz rolb cmp pop insl jnp nopl cld setae test aad mov ljmp adc or mov mov movups (bad) inc lahf pop cmp xchg insb add fxam clc cmp and xor faddl xchg insl into cli (bad) out ja xor sbb ss test push out and fpatan rolb or and push test js push dec add fs lea dec mov int3 addl and lds (bad) mov call fldenv jmp mov aam test mov dec push xchg xchg ds adc (bad) adc mov cmp mov stos xlat jo add fs lods add imul imul jno add xchg inc insl push test js int3 imul push pusha push cmp mov mov test sbb adc dec add jo sarl mov mov sub or outsb iret les ja addl addb nop push and (bad) adc or imulb shlb adc nop in xchg xor adc (bad) aam cld inc sbb push jp pusha inc pop or add and adc sbbl fistp add xchg cltd or addr16 push add mov mulps sub mov and hlt xor and jp mov js inc dec or push cli imul test cmpsl sub clc dec jp je movsb iret ds insb aad popa and scas push insb add outsl dec sbb xchg sub jl add jae scas inc inc mov data16 pop insb loop addb popl xchg adc loopne mov or xchg cli popf and addl rolb inc inc mov jle (bad) popl popf sbb arpl sarb (bad) adc or in cli dec sub xchg arpl and imul roll mov adc mov test mov fs pusha and (bad) (bad) cli hlt push and pop cmp mov jle shlb jge xor jne cmp (bad) dec jl xor mov pop mov cmp adc jno and and add imul add cli push pop mov and add jne lea pop call mov jo bound mov xor pop xor push inc cmp call inc nop call jns inc mov mov imul sbb add pop or add jmp popa ds rclb or ss xchg xor and or fadds bound psubsb xlat in push ret xchg jbe adc mov scas leave loope sbbb pop jle test test loop dec js adc jp cmp daa add repnz adc jecxz jnp ljmp add mov and popa fisubr sbb jae push mov sbb inc (bad) jo pop inc mov dec test in adc mov movsb mov or adc lcall pop test shlb and push and push inc sbb pop push ret and pop adc les sahf hlt out les or jae (bad) add inc adc inc out fidivrl jbe mulb mov imul shlb sbb dec jo cmp stc cmp popa shrl pop cwtl popa add pop daa mov xchg call mov fdivl lcall cmp adc loop mov add and std jo sbb inc call pop cmc fcoms add inc push mov add xchg pop (bad) jo or mov cli insl inc adc mov push push sbb dec je mov es ds cltd idivl pusha pop popa je clc sbb add dec lcall fsubrs mov jl adcb push or inc mov ret pop hlt rclb data16 add js add imulb test jo adc cld jmp inc nop pop and or outsl iret inc cmp idivl sbb popl jo or call push mov adc js add loop add add add int3 add jo xor inc mov clc adc rorl push dec ret add cwtl int3 inc xlat dec and push push jae push and test sub sub inc add test or dec inc jo loopne and jno loope icebp inc subb push xchg xor outsb jbe inc icebp incb jb fcoms and pop aam xchg je xchg ret test xor sub das and mov loop (bad) push mov and mov cmp inc mov cld icebp inc std inc sbb fs sub leave jge mov leave mov xor push inc out and sbb jno dec inc jl or pusha push mov sbb sbb xor test insl adc fmull mov fwait shrb and push mov cmpb sub dec push dec sbb jl mov mov add mov fwait (bad) sub inc push imul stc loopne fsubrs cmp outsb inc xchg jmp ret lods loopne dec pop and sbb pusha das mov inc sarb xor call pusha sarb jmp pop test out and or add push cmp cltd add inc adc int in pop xchg inc dec pop jmp or and adc or and shrb cmp mov or lods adc adc pop add inc cld mov test arpl xor das dec lock loope popa sbb int3 xchg sbb and and arpl (bad) mov mov out adc ret xchg push xchg xor sub das or and pop push and in out ud1 add jle jle cltd add adc add jl out xchg jl add (bad) or sbbb pop push fisub call inc cwtl add loop cmpsl pop sub (bad) inc jb (bad) rcl xor nop loopne inc mov and add sbb jl fbstp push mov inc mov clc dec loopne push decb pop pop lock je and sbb mov xchg test inc call adc pop (bad) je inc movsb pop mov icebp in dec lods cmp xor (bad) rclb cmovnp add jg or cmp call lret cli in inc cmp scas inc cmpb sarb xchg movsb and mov mov lds clc xchg mov cmc jbe pop icebp lock addr16 enter jmp clc and in pusha mov mov std cwtl ljmp test rorb clc mov fdivrl mov int3 ja sub mov fisub pop cmpl cli pop in adc inc stos ficomp inc dec ja dec or test xor enter dec push imul mov cmp pop stc sbb stos loope cmp adc cmp (bad) subps repz scas xor mov int3 add xor xchg add cmc jnp add (bad) lcall ror or aaa dec mov in lcall ss ja xchg scas popf pop repnz movsb sbb mov pop cmp jno adc mov sub addr16 iret rcll mov scas pushf cmp les add mov sbb out pop and xor xchg or gs rcrb pavgb add dec add sub sub mov pop dec add xrelease add jno cld movsl mov sbb lcall dec (bad) xor add ret add popa push push and in test pop mov ror add pop daa and imul or and shlb add adc mov cmp pop or pcmpgtb in mov mov cmp sbb lods les add (bad) and mov out xchg imul jne fstl mov xchg lock rcl ret xor enter adc iret inc jno inc (bad) flds std push test aaa or imul jecxz mov sbb jnp je outsl mov add push sbbl sbbb loope and push sub sub das and add in fsub mov fmuls divb sub mov nop (bad) cmc add aas add ret pop scas and xchg int stc clc cmpsb orb adc xor add out lcall lahf pusha sbb les fnstenv inc pusha cltd and lods pusha rorb idivb xor inc jo xor (bad) test or add scas add dec cmp sbb hlt loop aam jbe movsb adc fistp inc not clc xchg fmuls sub test jl pop adc scas int3 pop dec sbb icebp fildl test add rolb sub pop or je add inc mov pop jns call cs push rcrb jb adc mov mov sub push sbb xor add pop inc test xor pusha ficompl pop sub push add les (bad) and test pop inc add (bad) fwait jne nop adc mov pop or xor jecxz loopne sub jecxz fwait aam mov cmp inc cltd mov xor cmpsb jbe es sbb mov adc xor jns mov mov stc sbb jmp push push mov sub push pop mov mov leave sbb call adc lea icebp loopne mov dec sub cmp or and or add add cwtl mov mov lds addb lcall lahf xor jns in and sahf or sub add mov jecxz cmp add testb nop cmp pop dec adc je sbb push lret push (bad) adc mov stc mov or push fsubr jnp mov add roll les pusha xor dec push sub or and sub xchg sbb daa (bad) fsts test xor push repnz xchg cmp sbb in mov popf call xlat inc fwait or pop cmp in inc inc cmp jp clc jb mov (bad) loopne inc mov (bad) fnop fisubr mov cmpsb sbb xchg xor (bad) lods aad or je add js xlat lret test out repnz mov add les sbb icebp sarb or push adc popf xchg out loope aaa lret add or cmpsl sbb cmc enter jmp sbbb sub das cmpsb cmp jbe mov jae mov mov cmp adc sub rcll mov add movsl mov add push add outsl cmp inc inc sub xchg sbb jbe xor mov stc cmpsl into popa xchg inc mov mov add xchg gs stc cwtl clc call add xchg mov mov movsb jl (bad) xor mov pop das subb fwait cmp sub add lahf jae inc add fstpl jno jnp fcoms mov adc add ffreep push sub add sbb add fwait and imul (bad) mov bound or xchg jl ja xchg aad rcll fptan subl pop add sub push loop push nop hlt pop pop les dec mov popf adc dec rol add mov pop stc sarb cmp cld and push repnz je inc neg add leave inc test pop jns add (bad) and cmc movsb xorb lret stc lods and sar loopne dec adc dec (bad) cmp leave mov xor test lock out lock xchg push xor pop dec adc sbb add adc loopne pop aam pop je adcb push enter and inc dec sbb and lahf xor loopne insl stc xor cwtl mov pop add push lods jno sbb or xchg xor hlt xchg mov popf outsl mov jns mov and sbb inc xor adc mov mov sti js add clc sub fildll pop scas hlt or xorb or inc stos loopne jno xor adc test jnp test adc pop icebp add pop xchg sbbl and (bad) sub add shr rcrl outsl mov pusha nopl and lods (bad) cld push hlt cwtl loop and (bad) xor mov mov push and lahf daa add and ret dec pusha dec cmc enter sarb add sbb gs ljmp popa mov enterw pop shlb nop in dec xchg int rcl fnsave sub into sbb outsl iret lods xchg cmp mov (bad) lcall mov lahf dec sbb fldl xor out jmp shlb ds fnsave popf sbb popa adc leave (bad) jmp jg stos adc mov je cli adcl mov inc mov add add add pop pop mov inc data16 and in add nop jecxz cli inc js adc clc jo or pop xor imull repnz hlt dec sub push adc loope adc or in add dec in xor mov lods inc es aad sbb ret or stos xor xor xchg mov and xchg cwtl faddl mov and adc jg ror add pop adc leave in and cmp insl add pop and incb xchg aaa or mov xchg adc faddl inc mov dec add fdivrl outsb mov jmp pop and fmull mov adc sbb pop inc or jo push les mulb sub dec cmp mov insb mov mov icebp mov movsl xchg mov add leave pop mov outsb push xorb push insl mov mov mov popf fist mov cld addr16 add mov mov es sbb pop mov dec das xchg rclb jmp sbb mov insl ljmp test cmp xor mov out loop cmpsb xor pusha inc cmp and scas jmp adc data16 mov iret es mov pusha (bad) xor in lret mov leave arpl fnop cwtl mov sti or pushw xchg push bnd cltd adc stos jp inc add sub mov inc cmpsb push pop jle jns sub push sub ja mov push aaa cmpsl (bad) adc shrb scas or out scas or xor ja dec jns sub adc push dec jmp bswap jno mov repz push shrb mov push sub aaa sub fdivr mov xor sub push pop xor pop dec lock jno lds or lock push cs dec aam cmp xchg pop sub mov adc cmp and addr16 pusha adc pop inc es and cmc and mov ljmp fdivl gs dec insb std add inc popa sub adcb adc hlt xchg sbb xor adc jae sub popa (bad) es lret fsubs add mov sub (bad) fs lock mov pop add sahf push test mov mov in sbb mov scas dec pusha and sbb xor add out fwait sbb mov cmp popf add add imul test lock mov test arpl fs sbb nop enter into or add cmp out mov int3 xorb test data16 jae xchg add sahf sub pop leave or out and cltd pop stc pop or push jg jbe movsb sub dec in call cmp lds xchg mov pop add in inc pop fcom call xor add sarb adc cltd push lea aam pop pusha addr16 adc add into sub or jno inc pop push sbb pop pop add xor popa or call cmp enter fdivrl cmpsb adc int cwtl lahf cs pusha push dec int jle jne add (bad) aam insb lahf sub test pusha sbb fs add mov add mov arpl lods movsb adc mov inc mov fisttpll mov and das and hlt xor sub jp jge add ds mov (bad) mov mov jl push mov insl into jl jne adc roll popa in aas jp add int push xchg mov or int3 jbe cli inc clc rcrb push out add and xor mov dec gs and mov push sbb repz jb icebp pop add movsb pop dec add fdivs imul adc sbb add sbb push enter fimull and lods aam sbb imul xchg push rcl and ja jge push ffree or cltd movsb js sub stc not js outsl out add xor shrb cwtl jge (bad) xchg sarl shrl mov mov (bad) imulb xchg jns pop or loop cmp je mov inc scas adc pusha xor jb sub sub lahf cwtl sub test fisubl ficom xchg add xor and pop sbb add cmp stc add subl and push ret dec inc mov push or addb add push sbb and inc dec push xchg xor enter subb js sub inc js insl (bad) out sbb data16 dec mov out (bad) push mov fxch add (bad) xor pop mov sbb sbb push outsb cld inc div je mov js das icebp lcall enter in cwtl js add inc inc push les bound ljmp inc scas ret addl push push out out in pushf lea or leave movsl xor faddl jecxz sbb add cs insb leave inc insb add sub cmc mov outsl add jecxz nop mov xor add cmp dec pop and mov sbb dec mov ljmp inc sub nop push adc out (bad) cmp and and jne add add pop cwtl lods and xor and pushf xchg mov flds mov dec sbb xor stos pop je xchg dec inc sub and jae cltd arpl pop popf inc push dec sti xchg pusha lds stc and into xor xchg mov add push out jl xchg add mov inc fdivr pusha pop clc xor nop movsb jl mov mov sarl push jmp xor into mov cld add mov inc fimull repnz or push xchg inc sbb adc xchg push cmp cmc sub inc leave addl mov es inc fiadd das adc rorb add icebp add out add out mov adc or mov fwait xor xchg xor rcrb pushf sub movl or clc rolb xor jne stos out mov daa jecxz mov push xchg fsub add and pop cmp ds imul stc mov es jg adc dec cmp pushl push shrl repz add lahf pop add aas dec test jb jg dec mov sub lahf addl (bad) or (bad) or pushf jae and icebp dec add mov imul jle mov or shlb jg mov mov adc adc pushf and or xor cmpb cmp or gs mov cmp pop or mov mov sbb jp data16 mov xchg push imul pushl insb push fisub sbb movsb mov adc out cmp insl mov mov lock cmp fmuls iret cmpb loope (bad) and les sahf arpl xor mov sub sar pop mov lock mov add mov add dec xchg mov sbb pop add pushf mov push jecxz or lret daa rcrl pop rcl les cmp aad fs dec add fistp xchg pop insb mov rolb add mov cmpsb pop sbb pusha hlt fcmovb jb lock fstl aam out xchg add jno mov es mov (bad) in pop cmp sub aam loopne pop and push sub jne stos cmpsl sub mov or cmp add pop (bad) pop imul and sti repnz lock or shlb or fiadd test icebp or adc sbb xor mov mov je cli add movsb pop jmp mov dec int add mov ljmp out add and (bad) insb xor leave clc adc sbb ret je jbe add imul hlt push nop rep outsb xchg dec insb fmuls mov add add loope adc xor stc push xchg adc stc pop add ret mov fadds sbb and sahf cmp je or lcall lock popl xchg (bad) pop push jae sti js in xor pop xchg add xor jl add jno es adc sbb and lods daa repnz inc and loope call inc mov js cmp lods jae not mov adc enter add pop add mov cwtl leave or xchg data16 icebp aaa dec (bad) mov cwtl and or inc loope stos ja lods cld sub pop in xor repnz bound xor loope loopne enter and lcall sbb and in add push out mov and ljmp push lea pop (bad) repnz jne ficoml xchg cwtl enter enter sbb adc loopne dec call pop (bad) and popa and jmp enter xrstor mov stos insb js addl cmp add sbb sub jmp xor mov dec xlat fisttp lds lahf xchg mov test add js and adcb enter cmp and enter xor adc jge jno test mov mov sub jns add jo pop or lock stc push adc add loope or sti push adc ret clc jg sub and pushf in inc jle sti push add repnz sbb andl add out add sti push mov jmp push or xor scas in adc outsb nop lahf xor pop or dec pop cmpsl out or inc lret xchg mov add or sbb mov mov rorl inc push scas inc inc adc and push out sarb in mov mov mov (bad) xor add repnz mov test adc jecxz icebp jne add xchg push jl mov les push rcll jnp or pop jae mov fcoms jne divl mov jo (bad) aam mov leave add (bad) dec jge js ljmp cmp sbb leave loope cli adc inc inc clc adc push inc push sub sbb call dec iret mov repnz mov insb and xchg mov orb test and in add jne lea movsl in cmp insl fsubl mov hlt ds add pmaddwd cmpsb sub add (bad) mov xchg mov add ficompl out in mov aam in xlat cvtps2pd mov pop pop out notl xchg sbb mov out add or repnz cltd push mov xchg and fnstsw loopne pop mov stos outsl gs test push icebp mov iret dec push test sub dec rcrb jno push inc sbb inc iret (bad) stos mov adc inc sub add cwtl and cwtl inc and ret push mov add jae lods loopne dec iret add dec xor (bad) cmp outsb mov nop push adc mov rorb push fnstenv xchg icebp mov or lahf mov adc nop adc add in (bad) adc and dec in dec fsubl mov add jno add arpl jns pop inc lret sub mov or and pop mov movsl in inc aam rolb mov fiadd jno mov xor adc (bad) clc cwtl pushf inc mov iret xor dec subb nop insl in jns jno test push shr std popa mov and xor xchg jbe pusha xor in cmpsl inc and mov dec jnp dec mov xor pop mov fsts repz arpl jmp or pop or repnz mov mull cltd pusha test sbb add es loop mov or mov and sbb loope dec mov adc lods dec add sbb sti lea inc push add push pop and sbb add xorl enter mov and gs sub fidivrl rol pop test mov les inc sub cmp add sub or repz cmp add int3 (bad) loopne cmpb push fistp cwtl pop xchg test mov rclb outsl ljmp (bad) lcall adcl lock or sub (bad) fsubrs xchg jg push sub rclb sbb je and xchg adc mov adc fistpl dec xchg adc imul push mov repnz inc and jae mov add or pusha xchg stc xor mov fdivrl lds aam popf lods push loope je fnstcw lods sbb popa xor jnp dec scas (bad) cwtl fcmovnbe pushf xchg loopne or das icebp adcb ds pop add sub pusha fisubrl popf mov pusha inc inc adc call add dec mov pop jns or mov data16 fwait inc aaa xorb movsl add xchg jg (bad) js and outsl cli add ret mov xchg imul das dec and pop sti lods add dec pop fbld pop rolb test (bad) das or cmpsb je in test mov icebp pop sub repnz jo mov xor mov mov xchg movntps pusha mov sub je add sub icebp js bound xchg xor and sti inc mov or fcomps call ds xchg inc outsl adc sub add scas jecxz movsl insb or adc (bad) xor sti add jg jns mul jl pop es lods pusha leave mov add pop push mov (bad) lock add inc mov jmp push adc mov insb inc nop clc test or sbb jae add or sarl mov sbb add ss loope loop outsb add ja ret lcall add icebp (bad) mov dec push add bound pusha repz cmp add fstps adc int cmp in and add inc dec cwtl loop cli jnp push out rcrb bound xor xchg add scas dec pop sbb mov push leave addl cmp mov sub cmp loope imul jp rclb or lahf daa mov sbb push lret imul jo add je aas mov xor and addr16 test adc push out jmp mov add std andb push lcall shll fs dec int3 mov fwait xor cltd rcrb cli sub pop and popa pop cmpsb imul loop sub hlt das push loopne (bad) sub pusha fmull xchg mov cld mov and or cmp aam mov clc push fmull cmp test dec add mov cwtl clc in cltd xor (bad) mov inc mov adc out add ret rcrb xchg or outsb and lcall loop lods jb push cmp cltd js flds (bad) inc movsb jecxz push xor jmp dec call push add dec push popf pop dec fstl jmp mov inc cltd xchg inc sahf add (bad) movsl pushf je xchg in ljmp jl xor add pop repnz mov pop add push es test xchg jbe stc mov mov fcoml jbe sbb fmul and loop or cltd sbb dec sbb loopne test adc pop xchg test xor cmp pusha lahf pop sub stos sub es xchg push adc lods sbb push pop push add adc sub dec push jg jb addr16 jae out mov cmp movnti icebp dec and xchg fsubl mov mov adc mov jo mov mov loope xchg roll ret jecxz nop js push or jo xlat xor cmp subl js clc ja (bad) mov movsb jo add je jne cmp jo enter loopne inc orb xchg test dec lret popa add pusha xchg clc mov in xchg cmp jecxz stos outsb movsb nop mov adc adc jecxz rorb jle or fldcw push movsl popa or (bad) scas pop inc inc and dec dec cmp popa xchg and bound xor nop test adc mov add orl repnz insb mov adc sbb and arpl jg and clc jbe push jnp push pop je sbbb or or add xor test fisttp jp (bad) clc xor or or sbb not pusha xchg mov aad int3 mov icebp inc inc (bad) mov das adcl add and lret add xchg out push jle inc sbbb jecxz add mov sub adc add sub push shrb mov add inc je cwtl xor mov jle clc mov cmp ror fstpt inc pop std clc stc fcoms add mov pop pusha inc and jb test pop mov xchg test adc cld addl in mov fadd in push dec stc cmp inc xchg jbe add sbb scas or xchg fstpl adc mulps mov add lods xor lds ret add and js out jo mov (bad) and hlt rclb cli xor xchg test cmpsl (bad) xor or roll lock add je xor cmp adc inc fcomps leave xor mov xchg sbb xchg or fsubrl repnz test fisttpll int pop sahf lods inc add cs in jns nop xchg repnz jge mov xchg stos loopne jge addr16 sahf xchg and fs imul js movsb out test dec add outsl pop out mov fs xchg and sub mov in insb mov xchg jo xchg xor mov nop push adc ret in jns add cmp sub mov and nop add adc jb repz test mov jnp hlt add psubsb add sbb clc and xchg adc jg popf mov and pop test mov lds adc cmpsb mov shrl and fimull adc ljmp mov fcompl cmpsb adc mov xchg and inc or pop adc cmp inc es adc (bad) int3 sbb aas jne lcall arpl push pop testl test sbb fnsave out push pop loope add and hlt nop xchg xchg pusha xchg das lock lret mov xchg lahf lcall xor sub lock add or imul jl xchg mov inc jecxz and test loopne xor pop mov push cwtl adc cwtl sbb insb neg (bad) repz dec gs xchg push mov mov inc cli and (bad) xchg push addr16 or in leave adc loop inc mov cld mov dec pusha mov and add lds pop mov loopne pusha dec je int3 inc bswap (bad) pop add (bad) jae sbb dec test sbbb dec roll inc addb (bad) addl adc (bad) xchg repz pop orb push pop loope lods sub pop inc inc xchg cmp xchg dec jle test mull sbb sarl sbb push jle adcb nop test fidivl leave inc stos ja mov (bad) ss outsb pop movsl jg add jae jno lret pop add and les pusha jl fimul fnop sahf jl,pn nop test (bad) dec fidiv mov loop adc neg sbb xchg mov push jne cmpb lahf and and and pop mov push cmp adc loope lock fnop inc js mov shlb js pop sbb add nop (bad) sbb jo dec push das scas mov test sub cmp pusha inc mov aam mov dec inc sub inc imul adc cld sub rcl adc lds cmp sub inc int3 pop sbb xchg enter ret rcrb push jo inc sub scas push push adc popa scas jno mov mov das call pop add lods loop and icebp sbb pop pushf loopne and dec and cmp dec enter or dec (bad) mov inc add scas mov jp lock push mov xor addr16 insl fcompl sub pop and movsb sbb add mov lret mov add test pusha addr16 xchg das shld pop inc pop inc push inc call into jno add inc adc push push mov movsb xor inc pop incb mov ret popf add incl out push jnp test fsubs mov pop shrb and sti dec pop int3 outsb bsf or (bad) and lcall adcl sbb jbe cmp mov pusha xchg pop push lret push sub add daa das stos pop mov les jno,pt insl arpl mov lock nop adc adc fstl add xor pop jbe out cmp shrl add clc adc mov (bad) dec add cwtl icebp out xchg xor in andb or add hlt pop enter xchg shr cmpsb push xchg fs pushf adc cmc or add ja fisubr mov push xor sbb or push mov ret sbb fcoms fisttpl pop mov ja cmp subl notl jge and xchg mov pop inc fistpll push (bad) ljmp jae adc dec cmp subb jno xor es daa push lahf (bad) (bad) test mov scas inc dec ds insb incb jbe push mov jns xchg adc add cmp mov shlb repnz jo adc (bad) mov mov lods add sti add push dec mov out repz inc pop add push adc stos sahf adc pop test fistp das add xchg call bound enter icebp das and cwtl cld add xor push test ja add adc jo mov jnp cltd mov dec jae sbb adc sti xor je pop mov or xor (bad) hlt cmpsl add jo xor in clc cmp andb dec bsr fnstcw sbb cwtl adc push add sub lods sbb aad push mov cld mov test dec mov cmp repz or cs mov xchg inc stos cmp rorb add scas pop or (bad) lahf cmp sbb cmpl out add int leave mov stc adc jne cmp mov inc mov lahf push cmpsb pop cmp pop mov inc (bad) ficoml pusha movsb mov adc pop lahf add push mov and adc (bad) je insb push and and fnstcw fwait pop fadds mov test pop loop add mov (bad) cs sub fsubl xor fstpt xchg data16 lods leave ds mov add andb xor ljmp mov (bad) imulb in inc xchg out add xchg mov aad pop stos adc jbe enter or cmp and stc mull rclb dec (bad) mov jnp ss (bad) mov push lret cmpsl push fwait test cwtl xor xchg sub add xchg sbbb bound add sahf das adc adcl or add pop in jns aam pop jae mov aam push cmpsl or mov inc pop jne mov lahf les call pop mov fsubs add std sbb call cli lahf xorl aaa (bad) roll sub fmuls aaa adc push sbb addl scas add push xchg fwait and mov sets insb add add cmp xchg dec (bad) rol nop mov ja cmpsb add fsubr jg shrb xor (bad) rclb xchg add js jg dec rorl in pop pop loope das loopne pop or xchg sub add xor leave sbbl adc lahf das stos sub dec add es mov enter imul adc ds push cs add or gs push sbb scas cmp or push ss and and jns mov aaa popf inc add ficomp lret mov push sbb push data16 mov and cld test rolb inc mov adc sbb jp lret add inc sti (bad) bound xor and push mov pop loop clc mov or ffree les push fs hlt addl jbe lods call fsubrs sarl sahf sbb add push test loop call and idivb mov pusha mov xor jge movsl (bad) xchg or rclb mov push mov in pop add loopne notb jge sbb xchg add dec inc cli (bad) add in int3 (bad) into scas imul popf dec sbb and pop pop (bad) loop add inc rcr in dec xchg sub xor and fcoms xorl rolb mov jmp fdiv cwtl cwtl (bad) cmpb addl add add mov out test outsb shrl sub and cmp add pusha mov or xorps xor xor cmp repnz pop mov jae xchg push or xchg and test adc sub mov xor mov loop (bad) xor mov negl (bad) (bad) mov inc push or clc inc sbbb mov cltd (bad) xor orb sbb or pop ficom xor add and and cmp jle pop out mov fbld cmpl pop test push (bad) xchg push repnz and cld mov inc adc das cltd add (bad) mov lds mov adcl je sahf sub dec adc sbb xor loope mov andb push insb jns add shlb xchg mov add dec pop push sahf jle movsl repz in gs mov xchg xor cltd add dec jnp lock test jp icebp repnz sbb or pop lret xchg add mov xor fnstsw jns jnp or mov add fsub xor enter xchg pop cltd adc jns lahf sub xor dec outsb repz or add movsb int3 les cli bound pusha pop pop test cmp pop add rcrl hlt and xchg xor jmp add jg inc daa mov lock loopne fsubrl or les repz pop insl loopne jmp and mov jp xor lds sbb lahf in insb inc out sub inc push mov cs ret arpl sub (bad) mov add mul jle jne mov fiadd call call pop mov cwtl aad xchg (bad) fist xchg ss or adc mov adc clc xor into sbb xor (bad) jo add clc int3 pusha dec add mov add and cmp push jmp add lods push mov sbbb or push xor cs stc test xchg fwait pusha test iret enter mov mov xchg repz adcb nop cwtl or imul js jo add test mov les or or sub add nop and inc gs testb out or sbb aad xchg scas xor add divl pop xchg pop add fistl rorb clc fisttpll sbb mov cld test xchg add push add and dec sbb xor shrb mov jmp sub xorl js fimull cs iret aad sub ja fwait loop or push out or loopne out push or jecxz nop orl push pop inc loop dec fcompl jl inc or xchg stos mov add fptan shr add std orl mov call add std and add jno xchg sub adc cmp mov mov cwtl cmc popf les cs pop sub sarb mov (bad) stos aas cmp xchg xor (bad) xorb push pop js in add adc icebp push lods das jg in and pusha dec daa cltd ljmp lods enter cmpb pop cwtl xor (bad) pusha or push jo xchg sbb cmc add mov out xor mov jmp and xor add jb data16 leave add es imul add out mov fdivl add inc jecxz xchg jne pop aam fnop call and clc clc push pop xchg adc inc fsts outsb inc les adc mov sub enter jbe mov mov pop add outsl xor dec in sbb xchg int3 dec and ja fisttpl adc cmp mov dec mov push dec lods add xor and outsl cli fmulp aam data16 adc add repnz mov xor adc lret push scas jp addr16 movsl (bad) lock inc adc rcrl hlt mov cmp lret sub add push mov pop jp aad je mov test xchg mov repnz (bad) les aaa and mov pusha add test cmp jb sbb popa xor outsb pusha les or and sub or subb adc jmp push and xchg xor mov fcomp enter std movsb jmp call imul push lods cwtl shr mov add fildl sbb mov leave mov add hlt mov shlb pusha repz insb pop cmp ljmp mov pop jbe add push xor add sbb data16 sbb (bad) icebp inc jp test fs pop int3 enter stos sbb inc jle pop mov and inc ja rorl mov xor rol subl shll loopne and and or xchg insb imul pop jecxz jge sbb and xor mov ja in dec cmpsb or sti cwtl stc movsb add (bad) add rorb out leave fiaddl sub (bad) sbb fiadd lods pop mov sbb add pop cwtl mov add loop or mov add xchg or or pop pop mov sub jo call clc sbb (bad) sub faddl faddl mov clc cmp jl inc stc sahf mov iret andl adc mov add jns and pusha (bad) adc fwait adc add popf mov lea lahf add adc addr16 push (bad) pop dec jle add and cld ds or stc push and add sti mov or dec pop mov pusha clc aaa addr16 and push add inc jecxz,pn rolb in jae xor or xor pop fdivr movsl mov (bad) and adc cmp rorb dec out adc aas js insl shufps mov cwtl sbbl movsl stc sbb jecxz push lahf xor push add or xor push add lods js add adcb xchg (bad) add outsb add adc inc or and add aad lock daa sahf sub pushf jne nop sbbb scas xchg jne clc xchg or (bad) or clc into cmp add sahf pop add or and mov arpl adc and xor inc mov jl daa jb mov ss mov in dec popf add push leave bound mulb js xchg mov lock sahf lods repz les nop mov mov adcb pop jg add imul ljmp jne mov sbb cmp and enter popa add mov push fiaddl mov sbb xor cmp pusha pop cmpsb adc sub adc jge (bad) mulb mov scas int pop (bad) outsl mov sub test imul sbb mov sub mov and xlat cmp outsb dec aas inc stc dec je add mov loop push pop or mov add ret mov adc out sti xor mov and push push cwtl mov enter sub mov sbb out sbb add loop adc xor mov pop inc add movsb fdivr aas loopne das jb jge and pop jmp cmpl ret add loopne xchg adc repz lahf call movsb cmpsl xchg jno add dec ret add lret adc mov mov sub cltd hlt loopne insb nop rolb fstps lods cmpsb pop (bad) pop cwtl or loopne pop int jb sub ficoml mov (bad) and jmp adcb add das testb xor lock ss fnop jl inc or test sbb mov cli inc fdivs add into das jle nop pusha inc fs loop fmuls dec fs rorb add pusha addb add aas jns adc pop pop push fiaddl js and fcoml or sbb or sbb xchg sbbb int loopne xchg xchg gs cmp push and fsts jne adc sub and lret test push and mov sbb add lahf (bad) xor dec rclb sbb stos pusha mov nop nop push inc pop notb sbb das push or ficoml sbb cld test mov jae push daa jge sbbb xchg or clc and daa or in insb subb ss add lcall xchg pop incl sub or call and and imul nop es movsb inc loop xlat insb xor mov in iret add mov lahf add lock push jp inc pop sbb insb daa in inc sub or and subb fwait jae cmp movsl das es mov js fsubs inc lods xchg fdivp or (bad) xor jl jle pop pop add push xchg inc in (bad) icebp cwtl add lret mov adc mov cmpsl pop adc mov push inc ss aas loope adc adc cld inc rcr in roll sbb arpl lods (bad) pusha lock fwait aam loopne xor and stos add inc push aad sub and daa jmp xchg fdivr pop add imul cmpsb shr add clc scas sbb mov or scas sub inc daa xchg or adc stos cmp sub sldt leave jne scas je xor call loope test cwtl outsl push jb lcall xchg inc add aad andl cli loop or enter sbb subb mov sub adc je or jp pop inc dec adc out loopne lods adc scas sub imul mov mov loop divl ja add adc js xor jl ja add popf inc mov nop xorb cwtl rcrb pop clc sahf daa mov nop add sarl cmp ss fistpl mov js xor mov adc enter test ret pop sbb movsb or push pusha xchg pop push lea inc test jo push fsubrs ds mov lds aam ljmp orl xchg shlb sub pushf xchg std clc push add push (bad) (bad) ja pop (bad) aaa (bad) pop and inc or or add add rcrw enter push sarb mov adc fstpl dec popa push pop clc repnz xchg jmp fnsave add std dec repz fwait inc xor outsb (bad) xlat or inc rcll pusha enter in in add jo loopne aam mov add sub add cltd jbe outsl movsb mov mov or add jmp jns pop int3 mov jle (bad) addr16 push push scas insb and add out add je enter cmp clc in fildl dec push xadd outsb pusha sti cmp subb pop mov or xchg imul call mov das and push call pop (bad) sub add xchg (bad) push lahf adc mov sbb push scas inc xchg repnz inc cmp jno fs popf (bad) cmp sbb push pop nop push add mov bound les push in jmp test sub movsl test adc xchg mov sub push and data16 cmpl sbb and repnz scas data16 lds js sub popa cmp dec or jne or out fst sub inc jl or sbb adcb mov cmp addr16 (bad) rclb push cltd fsubs inc and in cwtl adc ret dec mov sti cmp xor idiv outsb (bad) xor or ficomp inc out js or hlt sbb outsb add adc data16 sti xor add in mov add jg xor (bad) sub cmpb orl mov push arpl jg add mov pusha jno cmp or add adc sbb int sub stc xchg add cmp leave cmc fisubrl sahf jb das fnstsw ljmp imul xor cltd call mov adc add repnz mov xchg mov xchg push call pushf dec add mov mov js fwait loope add xchg sub call insb and pop hlt movsb and add or add and sbb xor sub dec sti mov sbb or es inc adc aas aam adc fstl call loopne sti or cmp sbb (bad) jg adc or shlb movsb mov ret enter or aas adc ljmp outsl ret das lret es lock loope or dec adcb faddl sarl movsb rorb adc jns (bad) and inc repnz std mov aas cmp mov loop push and out xchg xchg push xorb cmp pusha adc aaa pushf enter sub or lahf xor mov or lret add inc movsb mov push je pusha clc ljmp subb das and xor cwtl dec pop mov fdivl icebp sub clc and fstps aas int3 add jb cmp outsl sub pop mov push scas xor sub lock test dec lock jg jo cltd inc jl lds mov inc dec cwtl sub xchg and js xor push sbb fadds or pop xorl repnz sub and sub inc movsl outsb faddl sub add icebp test in or and push cmovo pusha stos xchg mov and stos je or xchg inc (bad) add (bad) leave popf loopne (bad) add mov mov mov fdivrp stos inc dec cwtl stc sbb arpl mov cwtl inc xorb pop out or clc inc les push aaa and push mov adcb and cmp cmp andb mov mov jmp mov daa jns orb or (bad) jb mov mov in cmp cltd andl pop xchg add mov xor xlat mov sub jl adc lods pop adc mov sbb rolb jl and mov nop sub adc mov scas leave push data16 and dec aam add mov mov pop cld xchg push xlat div loop xchg add and sahf fcompl test cmp push cmp stos add out xor xlat jmp les movsl xor je sub pop xor xchg out jp daa sahf mov fdivp dec pop cli in les sub or add in sbb addr16 cmp lret sub or inc lahf outsl mov sub sti inc xchg sub pop dec cmp mov xchg mov clc inc pusha (bad) daa stos add push add xor nop inc rclb mov inc lock add pop ds cs adc dec mov (bad) mov adc add add in mov adc outsb or sub xor pop sbb lock jge dec decb stc fstpl mov adc adc inc insb sahf cwtl dec xor repz mov adc lods pop jbe das leave adc lods push jne jnp mov adc add add mov mov or push pop cmp xor sbb js icebp jo enter hlt add in insl std adc jae mov js push cwtl cld xchg movsb xor (bad) loopne outsl push pop enter or leave jnp xor or pop or or mov loopne cmp push add adc pop orl loopne (bad) cli fdivr arpl mov or xchg adc lahf xchg add out dec mov pop fsub lahf pop jne adc mov cwtl jo in inc pop flds lahf arpl sub fistpll or outsb mov outsl aad mov cmpsb mov mov sub inc add shrl movb add imul nop je mov and push push xchg movsb rorb adc cwtl sbb hlt mov cmpsl lock inc add test jb test jg subps fwait pushl pop jae out xor popf sub lock in shlb jne into jns (bad) and push lds subb and inc outsl in add cli mov fisubrl push jl mov fs rcll add adc mov imul mov sub or add jl or add cmp cs pop and cmc adc dec jg inc cmp and sbb outsl push mov mov sub xchg inc jg push jecxz aas mov dec and fmuls add subl sub leave xchg xchg push push nop ror add clc xorl add aam fimull sti dec mov loopne add pop jle pusha mov xor psubb orl or (bad) fs xchg loop fnstcw fcoms mov (bad) xor and sbb cmp mull dec les push test pop (bad) stc ficom test int3 mov push bound add mov xor inc xchg addb push rorl and mov cmp push js adc xchg mov jnp fcoms sbbb mov mov push mov sub mov test cmp lahf das and sub mov daa pushl test mov push cmpsb aad inc out stc addb push mov in pushf add adc dec inc mov cmpsl ja (bad) jbe cld inc mov jne xchg push fadds or pop int es inc mov jecxz mov jnp scas cwtl pop add fadds cmp imulb mov mov ficoml imul in (bad) shll dec push hlt ret adc add stos and fldt int3 andl clc and jecxz pop test push repz add (bad) cmp adc mov test push add pop pop fldl xor add stos sub rclb or pop cmp mov fisubl jmp or fdivrs mov adc inc inc and inc adcb hlt nop xchg enter add addr16 mov and jmp inc add mov xor cmc loopne dec repnz test es mov das and xor push and loope or cli sbb xchg xor xor je push sbb in (bad) (bad) aaa or lcall inc lea rcr xchg int3 in push mov out xchg call push je or and mov adc (bad) fisubrl inc inc push gs or add out adc imul mov loopne and int and pop sbb fisubl lahf xchg lret and mov push les adc outsb sbb repz mov mov and xchg (bad) idivl adc mov stc rorl dec pop lret add fsubs mov outsb in jge sbb repnz imulb adc mov xor add shll into mov sbb sub outsl imul and jbe loop sbbb imull adc push xchg lock push mov ficomp inc add adc xor jb fwait ret cmp dec dec mov and push (bad) js call js pop or jo add loop imul jns lahf fucomp lock adc pop or push cwtl adc insb bound cmpsl sub pusha fwait or daa jb pop xlat or repz lds loopne jo repnz jecxz lock pop (bad) sbb loope pushf and and notl mov mov cmp mov xor lods ret loopne pop icebp mov (bad) les pusha or inc sub out xor lahf hlt leave cmpsl mov test lret mov mov popf in das arpl inc out loopne call shrl xor ja sub js mov call xchg addl or sbb jo andl je in mov cmpsl jecxz enter inc lock adc sub jmp jb fwait cmp adc ja shlb or mov lret leave psadbw test (bad) insb nop lret adc sbb ja cmp and in outsl and hlt jo mov je (bad) jo mov movd sub dec scas xchg loopne jnp dec dec mov je fild pop (bad) adc jle push push xchg push mov addl push rorb mov daa mov nop and mov stos nop loopne and add adc repnz int3 loop pop add imul rcrl jno pop mov inc sub fidivl xchg mov lcall push jnp mov (bad) mov das and push add adc out (bad) mov rcrb xor cld sarb add pusha (bad) std repnz rcrl mov (bad) dec and sub orl mov addl out pop mov loopne fwait rcr push jp add xor ret cld cmpsl in cmp add aad pop xor movsl add cmpsb popf sbb sub inc int3 sub adcb (bad) aam add xchg lock ljmp jo push int3 push sbb and popa inc add test movsb out adc add ret add inc lea gs scas xor bound pop repz out rorl movsb and repz mov xor ja in xchg mov arpl loopne push push sahf pop jo test insb xchg add cld aas in int cwtl add call bound lock sub mov xor jo mov inc and add push cmp inc hlt mov add mov mov cltd in pop callw pmaxsw or pop and enter add sbb jl mov add sarl sbb or mov mov add inc loopne adc nop push js add xlat lret outsl cli dec add push in cwtl loop jb cmp out xor add loopne hlt pop and push lahf xor lods adc dec sbb pop lods testl or fistp sub and andl xor loop outsl or xlat shrb (bad) cmp loope in sbb mov pop (bad) mov push xchg cmp mov or fs push mov aas (bad) loopne cwtl mov dec pop outsb fiadd xor xor cli faddl sahf mov (bad) clc xor mov cmpsb rcl and push test xchg and mov adcb in adc mov test pop addr16 popf dec cwtl jmp mov sub scas daa xorl mov ja mov icebp sbb or pop movsb push and inc cmp loopne sahf lret test adc or mov sub xor mov add cmpsl stc xor xor add ljmp mov out xchg mov xchg movb push rorb or lcall jbe or repnz enter xor or inc mov std lahf add or xor mov fidivl cmc mul les jp add mov idivl xor xchg inc xchg cmp xor loope dec addr16 add jp orl je sub fisttpll jns mov add js das aad mov jp add stos lods add aam loop test push dec xor pop in mov repnz xchg cld and mov xor cmc faddl ret inc mov jno adc adc cmp xor lcall rcll cmp or js pop pushf fs mov pop sub fcmove cmp mov rclb push pop and cmp fcompl pop adc and mov mov fadds mov inc lret cmpsl sahf dec dec xor add insl ljmp je insb mov push js cmp sub pushl sarb and jb popf or sub push lods push mov psubb mov orb fcomps fcomp dec fdivl xchg pop insb fadd push sti jge scas add test popf f2xm1 xor ret xchg push and mov js fsubrs or adc lret loopne xchg lods adc adc ja cmp mov sub clc mov mov sub sbb mov dec or (bad) mov add dec mov lcall inc in cmp add clc dec ds pop cltd pop mov adc out sbb and and or sahf cmp repz call bound lahf pop pop (bad) clc push mov cmp les xlat (bad) cs daa int3 push inc adc pusha mov shll xor out pop and mov xchg sub out adc aam pop bound lods add subb (bad) xor adc sbb call inc fs push rolb bound sub or pop pop xchg lods jno shlb fisubl adc andl add pop sub add data16 mov pop cmp sbbl call mov andb nop sub add jae adc mov cld dec rolb test fdivrp and add mov adc sti dec pusha enter call sub inc xlat imul adc jns jns cmp add sbb mov push mov cmc mov push or test loop adc xchg pop clc xchg in sub inc jne inc pop cld (bad) ljmp mov pusha xor mov and add push sbb test jns dec xchg in mov movsl je lahf xor dec and stos enter imul mov in adc mov add sub xor inc xor adc sub fs out sbb sbb add stc adc add mov mov ss insb daa subl pop in clc sarb ds dec adcb push notb pop and add add sub call jecxz icebp das adc data16 fcoml cwtl add xor call sbb ficomp in rclb repnz sbbl jne adcl cld in xorl outsl add pop jne or dec push icebp mov inc imulb (bad) sbb clc jns adc xchg loop rorl into xchg inc pop scas nop jae cld mov (bad) pushf test movsl imul inc int3 mov mov fdivr add and push (bad) mov jg aas cmpsb repz movsb inc shrb lahf in cmp inc adc mov and stc dec push jae and cmpsl mov push inc push pop sub je sbb or xor clc sbb rcrb cld dec xor (bad) pop sub mov add cmp gs aas sbb adc mov aas xor nop cmp pop dec push (bad) dec add loop mov cli inc and ret pop loope neg sar ss adc or push daa mov xchg fisubl sub sbb mov and cmpsl movsl adc nop cld sub lods data16 aad loopne sbb xorl push in push aas pop or xchg imul jg ja mov adc adc and or jmp inc (bad) push (bad) xor pop jg aam es or jl or cli add xchg loope xor add push call (bad) jg pop pop lds (bad) aam test test mov sbb jne stc notb add adc ret mull jl mov adc add lcall scas repnz jge cwtl or test mov adc push lahf sub rclb mov mov inc repnz int test jo int3 adc add cmp add and cld sbb mov or xor mov cmpsb rolb xchg insb push xchg push push add xor pop sub fldln2 add (bad) nop rcrb sar fadds insl hlt mov loopne inc push mov jecxz in psadbw outsb lcall pop mov cs fist xorb (bad) mov add sbb imul stc sbb inc fdivrl xchg inc enter adc or xor bound cmpsl sub int3 ja clc mov rcll test push in call pop jo mov hlt lds daa push out pop mov adc jp add adc lret sub cmc pop add (bad) mov jnp mov sbb pop add sahf insb or mov jbe or cwtl push xchg mov popf mov xor push mov add out and push xchg mov jg mov popf add sub popf xchg lea pop add inc sub adc pop clc xchg test cwtl and cmp orl jo jbe rcrl mov cld pop fs mov pop mov sbbb mov mov orb das inc ret xlat fnsave push std jnp (bad) int3 or xchg adc stc xor or sub dec sub dec cmp lahf inc pop jg jo add test rcrl xor arpl pop xchg idivb mov xchg call ret lods rcrb nop and xchg jecxz wrmsr ljmp dec cwtl sbb and test addb stos dec clc mov push lcall add xchg test jns cs movb sbb mov (bad) xor sbb sbb sub das std adc mov sahf call out add lds inc xchg add adc push repz idivb int pop pop ret das fcompl dec xlat push bswap adc (bad) pop mov adc adc lahf enter add test test and jl or sti fldl pusha lds dec into jge xchg and jbe sub jle add inc in dec inc push xchg mov xchg mov insl mov push mov je fnop inc pushf (bad) mov fwait push push addr16 mov dec lock imul fiadd adc mov or xor repnz stos add adc jne stc adc mov xor jns insb dec and test adc pop dec stc test mov lret jae lahf flds lret xor inc scas jns jno sub add adc fxam add xchg or add jo fdiv fldcw cmp orb and xor nop xor jle push je adcl out sub add stos movsl repz fidivr cmpsb sbb adc in ds cmp lock ss adc pusha add cmp xor adc leave xor xor pop lds or lcall stc fmuls cmp add sbb das aas sbb jno imul cmpsl pop fdivr push inc jmp fisttp leave cmpsl add fstps cwtl xchg add push pop insl mov adc leave insb pop push xchg adc or mov pusha xor xchg test js push pusha or rep sbb pop stc add adc xchg shrb inc aaa cld ret inc das sbbb add add xchg repz pop push push orb cmp add cmpsl popf sub nop data16 out gs std aad cmp push sbb pop cmp repz xchg daa jb xlat lock inc nop xchg and enter ljmp push push (bad) lods popf add inc clc sub clc add test fldl xchg mov or push pop fwait loopne cmp or int3 jmp pop mov repz in mov jo inc test lret nop das jmp dec push pop andl imul mov mov push cmp pop jecxz sub (bad) outsb jnp cmp push leave stos inc and sti inc cli cmp jmp inc xor mov in scas clc cmp add out repnz gs fcoms cmp jo cmp iret jns sub mov or rorl fbld or sahf clc adc or xchg adc mov xor sub in nop mov cld jo stos loopne add cwtl gs mov insb add (bad) jbe sbb nop xchg cmp lea sub lods inc add or int3 insb fidiv sarb loopne mov sbb mov popa add imul mov xchg mov xlat subl dec icebp movsb or adc xor inc ss xchg and and push fsubr sbb aaa jmp mov lahf das sub stc icebp je add jle dec lock loopne pop movsb mov cmp push hlt cmp pop fucomi js mov mov cmp inc push cmp inc add and and or cmpxchg (bad) clc cli jl shrb mov sub pop scas mulb int fild clc leave (bad) popf dec popa push mov and sbb addr16 cmp add adc pop mov push dec add (bad) pop jp ds jno xchg push dec test sub pop xchg add cmpsl (bad) jbe jnp xchg jb xor jne xchg dec pop lcall outsb xor movsb jns stos dec push pop pop cmp aam mov adc xchg fsubr ret xchg add mov mov cld jns js push test ljmp xor dec (bad) stos gs ljmp xlat adc in sub fs inc stc add xchg jecxz lahf pop inc scas ja add lret mov jp pushf add mov arpl popa cmovns and xchg and (bad) jmp mov sub push pop mov adc dec or inc xor xor push mov lret push inc add sarb sbbl jnp pop xor inc add xorl xchg lea pop xor add mov popf dec inc adc enter fwait adc sub inc sbb pushf daa cltd sub sbb fldcw xor inc xchg or pop lods stc int ret xchg (bad) mov stos push popf jg sbb push lds mov pop add xor jae jnp sbb push add adc (bad) push sbb pop in cmp add call pop outsl xchg mov pushf pusha imul mov adc push sbb mov inc hlt dec sti pop nop or cli xor test pop jg movb mov rolb negl add sub add int3 aaa sbb inc dec lcall adc adc adc (bad) (bad) xor sub and sbb gs out mov inc mov lods push push daa xchg dec xor sahf xchg add fisttpll jp fcoml movsl daa adc rclb (bad) xchg pop add pushf scas xor add xchg outsb clc jl outsl add and adc pop xchg mov and aaa xchg sub (bad) mov ret je inc xchg ds mov mov loope lds push nop cwtl enter sahf les (bad) aad sbb sub outsb xor cs inc int3 pop sar add int add mov push mov enter sub and push (bad) push push cwtl call jmp mov adc mov cmp xchg pushf push jo cmpsl sub pop jl push (bad) lret mov add jg cwtl js,pn divb test xchg push jns push das mov jbe lahf adc out dec popf inc inc mov jmp cmp inc es adc sub sbb cmp jns insb and push or in add into shrl insb test xor and lods test bound stos xchg and inc and jno add and cmpl cmp fstl fdivrl xchg or daa xchg dec adc jle ficom sbb and aas pop xchg push mov and and nop pop or cli adc inc pop or cmp mov andb dec jbe mov (bad) (bad) jne loop ja pop xchg pop cmpsl sub psubq or xchg jae add (bad) fs jl pop out jp data16 rolb sub lods push daa pushf or fiaddl je cltd fcompl push dec loope sub and jbe mov mov sub xchg idivb jb enter (bad) int3 stc xor pushl pop pushf mov enter ljmp pop cmpsl adc add adc insb aaa push pop fist cld cmp mov pop ljmp mov inc cwtl sub mov out xor pop jnp add test adc or xchg mov dec push mov testb push stos xchg cmp add mov (bad) jnp pop movsb add imul cld sar in and nop (bad) lock pop es fwait xor or rcr pop sbb xchg sub push lock xchg jl bound movsb push sarb mov inc sub and pusha cmp sub insl lcall mov data16 cltd and pop add call dec clc jb (bad) lods mov ss stos cs jbe add pop repnz test lret fsubr dec inc std inc fwait in mov push lock or (bad) (bad) repnz mov je cmpsl add mov mov roll adc jb clc mov sbb pushl pushf mov ja test push hlt adc cmp out daa sub rorb or adc xor ss push sti repnz stc jge cwtl out lret rolb mov jo xor ret insl xor jp fdivs cmpb fnstcw push add lods js sbb add jno add adc ret or mov cmp sti pop call iret cmp es jle (bad) sub outsl out or loope loop jbe sbb mov inc rorb mov lods dec inc xorl fimul mov loopne and lcall pushf sub dec loop mov mov jmp add mov rcl stc pop arpl dec mov add jno (bad) mov pop in lock pop mov jp cli xchg jg xor mov fnop fwait daa rorb negl cmp (bad) pop push pop frstor cwtl test fisttpl mov test sub and cmpsl int pop rclb ds pusha add out mov leave in pusha int3 inc test mov pop lock xlat add mov jo push add lcall aam and push cmp pop test (bad) sub mov xchg jns jecxz sub sub jno mov cmpb add fnsave push nop jns ljmp or aam push cmp sbb fldl (bad) fstl push sbb popf push pop sub add stos pop dec test xlat dec xchg clc xor dec mov imul fisttpll out jle test ret and mov adc add dec daa jmp outsl test add mov mov push sbb test adc inc in dec rcl push sarl js loope push popf rcll cs enter popa dec outsb (bad) xchg pop cmp pop aas ds mov sbb xchg mov cmc pop je lock mov push dec rolb ja sbb mov adc stos pop push fs mov jle sbb lret sub cmp mov and pop sbb mov daa adc ret or out or dec and lret add mov sbb add mov or dec pop adc jge fidivr in or jmp cmpsl sub add dec lret outsb insb test sahf dec in add xor sbb sbb nop into inc cli pop jae (bad) dec cltd loop add mov loop add sarb add xor dec (bad) lret cld inc xor sbb sub sbb push inc push fisubl sub sbb cs inc dec or aaa adc lcall mov adc jge (bad) or xor lods rclb xchg sahf lds sbbb inc sbb out pusha add push (bad) out mov cmp and aad sub enter inc or out mov inc pusha xlat sbb xchg push or mov dec lahf sbb and lods inc imul nop fmuls inc rorb jl js,pn dec pusha or fildl cltd inc xchg jb and pushf mov clc push sbb js push xchg xlat dec or movsb andl dec inc lods pop mov mov out jmp xchg pop lret sub mov dec jno add jb fsubrs lret sub das lods add repnz adc inc sbb jle lods ja incb lods scas xchg adc punpcklbw sbb mov aas test xchg xor or push add xchg aas mov cs add js fldt adc imul fcompl mov jb les clc dec (bad) test jo cmp push jne call pop dec cmpsl dec mov pushf pop std in popl rorb pop fs cwtl aad mov (bad) and pop cs pop lret xor xor (bad) and cltd inc xor pop mov stos xor scas test lock adc out xor push and xchg cmp jns mov xor sbb iret clc scas imul cmp pushf in adc daa enter add pushf push add test add sti push fyl2xp1 sub cmp or in les jle test pop lock js add enter and das aam popa xor cli jns jp sub les add push jle mov and int3 lcall push adc aad mov icebp or mov and leave rorl xlat and nop xor cwtl xorb dec and mov add push or sbb pop jb add sahf repnz cmp xchg jns cmpsl jle sub clc fbld popf rcrb mov jecxz loopne add sti pop push jg pop (bad) adc loopne nop jbe xor jo das (bad) and je fwait mov pop or jbe call in add xchg pop mov imul cmp inc es push lret pop mov mov imul xor inc in loop and ret popf pop cmc sbb cmpsl mov push mov mov add or add sub fs mov mov xor jge cwtl shr mov push pop add arpl mov inc inc add (bad) mov or int3 shrb inc mov cmpsb dec cmp das add cld je fcoms ds jne (bad) daa sub push xor xchg outsl push les mov xor fwait pop or lcall ja cs inc xchg pop mov cmovg fsubs stos add xchg pop add lock daa daa xchg test jno pop popl adc ret mov sub xchg cwtl add shlb lock cmp pop xor jno out ret jo loope pop cli pop inc (bad) xor test and cltd mov subb pop lret or cmpsb jg jmp pop (bad) shrb add pushf push lds mov pop sub xchg pop mov push mov and shlb cmp add dec cmp outsl and pop inc jmp add ret push adcb xchg js addr16 add or and or mov fs mov jns inc add sti fadds dec in rcrl cmp in jo pop cmp std sub and xchg add jb das stos jle inc and fwait sbb xor cwtl dec and push jne push jp xor cwtl adc dec and sbb cmovb push test and add xor js jmp pop and repnz inc jb or mov jno mov add arpl (bad) mov insb mov xchg jns sub es push inc (bad) loopnew das std sbb push mov and sbb pop lret (bad) loopne,pt das (bad) push xor aas jno sbb call dec imul adc fs lret add scas test push inc xor inc daa lahf loop emms push and xchg jo mov or xchg add adc in push mov adc shll jns jb in call fcomps push cmpsl xchg xchg and hlt fadds popf fild push mov and hlt add mov fdivl out movsb xchg xor cmp out jp fdivrs and loopne mov in imul out pop lret mov sbb push loopne clc pop xor or mov imul and adc insb cmp addb jae add mov cmp shlb clc lods (bad) adc add adc sub xor arpl push adc jbe repz addb xor or or cli sti pop faddl xchg lea lock in aas cmc mov mov enter or or dec cmpsl adc ja mov jp sbb add cs subl add push movsl (bad) sub and sbb add cmpsl push mov jl pushf aam sub js outsb orl dec sbb and and (bad) out lcall pop push push loop or jecxz sti xorb push ret sbb je and inc mov es data16 xor test mov mov rorb dec sbb jns jno rolb out or (bad) jo in inc clc div jge jne,pn lock fs test adc and xor mov lea xchg add sub push movsb xchg add jnp dec adc jge shll xchg sub nop loopne adc and adcb xor push mov xchg xchg adc movsl fs in orl sub jle mov and sub add mov (bad) repnz jnp bound xchg mov ret xchg mov and xorb call dec inc adcl mov sbb xchg inc and (bad) bts popf orb push mov xchg test adc (bad) sbb adc adc add stc loop jnp jns and (bad) js xor incl xor xchg add cmp std inc fnstcw jle inc xchg jbe inc mov or jne add ljmp or js pop sar cmp or lock adc movb dec repnz cmp sub gs dec or pushf add fldenv sub or mov pusha xor loop daa dec fwait and (bad) mov sti pop jns dec ljmp fwait jle cmp jns pushf sbb mov adc sub add cmp daa add addb daa sub enter add stos xchg push xor xchg inc push nop or jb adc or pushw cmpsl xorl (bad) ljmp lock sub mov push or nop pusha mov mov adc lods cmp or in or scas dec cmp pusha mov adc or je lret call negb in adc fwait mov call add push add (bad) xor aaa adc daa lcall icebp cmp and cmpsl mov andl cmp xor rcl dec add cmp push or lods movsb enter (bad) push mov fs push lcall sbb hlt enter es loop nop faddl add cmp negb imul xor inc dec lahf xchg sub cld and mov cmp mov loope lcall inc pop mov stos fimul popa push cmp dec cmp xchg outsb add lock js repz dec pusha add loope adc inc movsb (bad) mov cmp push jbe mov pop jg xor push sbb and jmp add inc fildll adc adc xrelease popf and repz adc jl test call or mov xchg das jo adc enter fistl pop mov jmp mov int3 dec pop pop rorb cmpsb push bound std imul mov push sbb push adcl int3 mov pop sbb cmpb inc lods sub fcmovnu aaa add and js xor jmp cmp mov xor xor cmp and scas cmp insb or or (bad) cmp jo adc xor test push adc push cmpsl add inc sbb pop fadds cmpsl sub sbb adcl cmp (bad) rorb adc inc mov or jnp cmp sbb and sbb push pushf jp mov sub movsb or cmpsl loopne hlt jp pop xor ss xchg nop lock pushl xchg sub and add sub sbb push dec sub dec push movsl je popa jg xor cmc add in push inc gs inc cmp dec and in mov adc or rclb sbb mov xor add lcall cmpsb dec dec jo js outsb iret test or cmp cltd pop (bad) sub into mov inc cld adc (bad) mov or and mov pusha or fistpll loopne add pop rcll mov pop rcr cwtl adc cmovp add pop (bad) testb mov mov bound sub mov addr16 mov and xor fwait idivl xor xchg push or push fidiv in adc hlt or dec cmpl nop and push dec js push (bad) in pop or or xor adcb div sar mov (bad) fildll test jmp add cmc and cltd sti js or jmp add add mov add push jg add sub loopne add xor jns jl dec imul loop inc (bad) sub push cmp xchg and cmp ss (bad) sbb jp mov push (bad) fldt cmp insl pop pop pop mov adc sbb dec sub or mov adc pop mov xchg js out xor xor sti add xchg mov add test icebp cmc push add add mov and inc fsubrs xor add xor and fisttpll ss sub movsb in push dec out inc adc in (bad) iret inc jnp (bad) push sti push mov outsl les mov jp insb lock inc gs lahf inc inc xchg or mov jmp out add sub jmp add mov and xchg fadds xchg sbb sub cli movsb subb add cmp push sub add fdivp push fidivrl shrb out push mov cmp lahf icebp ljmp in repz adc and sbbl stos es movl daa ret aam loopne call fdivr dec xchg dec xchg pop or lods punpcklwd cmp pop sti jno add lahf cwtl (bad) daa cmp sub mov sti sub cli aad push leave xor fisttpll outsl jl add lret jecxz loop jno sbb (bad) mov xchg jb xchg je loope sub fcoms inc add mov mov sbb in rclb mov out enter popa stc dec cmp insl cmp lods mov test ror jecxz cmp xchg mov lock add flds fwait mov jae adc ss je push xor add or arpl cltd dec cmovo aad mov adcl or clc cli or or cltd dec in xchg outsl add add adc mov cltd mov cld add lock dec (bad) mov (bad) sti mov cwtl and adcb sahf mov repz and mov iret dec dec mov aad ret cwtl outsb imul xchg out mov ret add test mov add xchg dec lcall xchg je or dec xor adc ret or sbb add mov or xor sbb lcall gs pop in jbe movsb ret aad add stc xor jge inc jb cmpsl cmp jns out rorb add dec les mov xchg addr16 xchg rolb daa xor ret inc idivb fs jl fs or mov add les mov mov pop mov mov jno cwtl jno call dec in push fnstcw movsl insl mov push inc cmp inc xor out test sarb sub jbe sbb add jle push push jno mov add pop add (bad) pop push (bad) in jmp popf call push mov stos push jbe daa das xchg sub add lcall add loopne xchg push lret inc (bad) out dec pusha sbb test or xchg cltd cld rolb imul daa cs ret jcxz pushf aas add xor mov outsb icebp call push or add jge dec jmp jo out sbb add pop mov sub insb aas push add push je and cmp push cwtl adc xchg gs and jmp fs xchg push scas popa imul mov mov mov lock dec cmpsb sbb mov xchg jae js dec add (bad) xor cwtl in pop push mov leave xchg icebp ja nop xchg sub jb inc sbb movsb sub icebp fldcw sarb test outsl add dec dec mov sub fucomip in push or call add inc mov jo cwtl sbb fwait bound les rcrl lret addl pop and mov add or cmp or dec bswap (bad) push pop sar (bad) js add cmp cmp sbb and cwtl xchg shlb call sbbb or add nopl push cmpl lea out aad out mov xchg pushf xor in adc jle or faddl xlat push adc jge fsubrl mov push loope hlt aas popa enter call loopne push sbb pop loopne pop fmull add stos cmp add add clc or movsl repz loopne sbb sbb aaa pushf jno fadd out pop and push bound lock adc jno mov sahf jns xchg xchg push xor inc adc and mov in pop add int3 test mov sbb in sysret fnstsw jmp jb add aad xchg jg add divb add movsl mov add xchg es rorb fmuls sub sub adc or nop sub cmpsl mov scas push repnz addr16 (bad) rorb pop push cltd add and in dec sbb or and pop cmp inc cmp sub or (bad) mov adc lods cmc and (bad) fs pop xor xchg cmpsb add mov (bad) inc loopne loop fwait adc adc push inc adc add inc xchg call pusha jg jb add nop aad andl xchg sub add xor stos dec hlt xor rcrb mov inc jb mov adc or inc sbb fs mov loope adc pusha incb push jo out imul inc inc sub test and sub lcall sub mov int3 and xchg adc fcompl adc cmp xchg pusha sbb mov pop cltd pusha jp sbb js add cmpsl dec fwait push push adc pop add sub imull push in mov shlb cs inc sbb ret adc adc lock sbb sti xchg pop add lret sbb (bad) jp pop fisttpll notl or in jns ja sub cli testl movsb xor dec cwtl and cmp jns sub push cmpb xchg inc flds or js pop adc mov outsb ret loop or jb inc or adc fisubl stos pop jbe or movsb and enter mov pop (bad) imul jo pusha push rolb jbe add rcrl and mov clc sub dec sahf push pop xchg out movsl mov mov imul push sub mov loope enter adc faddl dec aas jb and xlat push ljmp or mov or jbe pop xor mov mov popa cmp sub js adc add adc jmp cld sub hlt mov jecxz aas pop (bad) jg adc in fcoms test rcr lret add cmpsl pop xchg movsb repz jge lds imul mov add mov out hlt add outsl mov lar mov pop jae movsb inc in and ja add fst mov incl sub mov js andb adc jns adc mov or mov jl pop icebp lret add jns insb fadd pushf imull insb mov or pop adc jbe add test sbb cwtl mov mov or je push mov adc and inc mov push incb test mov jae mov lret daa dec lahf dec add popa push sbb mov inc sbb xorl pop add sbb sahf inc mov insb adc lods dec int3 in adc add pop fdivl mov mov jb daa (bad) jae pushf cld pop insl lock dec ja bound add mov push je xlat in nop xor shrb repz jo jg lock clc push xorb lds xchg xchg rolb add cltd clc call cmpsl add (bad) sti addl daa cmp js jmp lahf cmp rolb test imul mov adc adc fs jbe cmp ljmp loope outsb dec push jle pop push in sub sti nop cmp inc loopne orl inc jle add mov mov cmp (bad) sub inc lret lea mov nop std loope xlat pop add pop lods sbb jnp imul dec and rol daa add and pusha push jae add or out jno mov data16 xchg outsb iret cli push pop adc push test cmp popa fnstsw jb (bad) cmp (bad) sarl xchg std and sbb test adc movsb daa pop push xchg rolb (bad) sbb movsl paddq mov in inc imul test ret add add ds push nop add lret mov and int test pushf xor dec cmp pop loopne adc pop jae cwtl rcrl and addb mov cmpb ret shl push pusha add push jmp in cmp and cld or loope dec and call pushf sbb sbb mov and fistpll fstpt add and fsubs add repz mov adc in popa cmpsb xchg pop push or push sbb jle pusha sbb mov jp jns and add xchg frndint cs sbb xlat add inc sub mov add enter lahf setb repz push adc cmp notl mov std sbbl jno shll pop add out add mov cmp add outsl add mov mov dec and cmpl inc lock rolb outsb xchg rcll adc jb (bad) sbb sub lods pusha inc sbb cltd add sbb add xor je add mov pusha xor leave and ror jb add sarb mov insl dec dec jae cwtl or xchg push out add adc pushf pusha cmp mov mov nop inc lcall insb adc (bad) ja pop or dec sub cld mov sahf and pusha and fwait hlt adc loopne adc out jmp hlt and je cld test or inc leave popf loop mov sub push jae (bad) lret add add mov lock scas xor sbb xor fsubrs or mov push pop test add cli cmp push and inc lods xchg je stos sub repnz add std popa mov mov in mov adcb mov sbb int sub ljmp push mov daa adc cli push mov je adc imulb mov js add sbb rorl mov or xchg push jns pop dec popa and add inc cltd pop xor inc lds leave xor andl aas inc jae test in cmp pop call pushf out add sbb insb ja aas mov and inc sarb fistl and enter jmp imul or adc or dec inc test and insb in mov push add or dec lret jl not pop movsb sub loope shrl and inc in add push sbb add insl mov daa sarl xchg fdivr mov jo int3 add cmpsl loopne ja je stc je xor call rcrl and xor pushf lods xor sbb (bad) cmpl shll (bad) inc nop mov lods fs add xor push add insb fwait jns cwtl push mov aam push pop int (bad) adc mov outsb pop lock add int jge jmp sbb add daa adc push dec into add and test adc nop mov sub loopne cld lds xchg jmp movsl push (bad) sarb mov test adc sub out mov mov pushf sahf (bad) adc jmp adc adc cld adc (bad) mov and fdivl sub and pop add push jl cmpsl mov jp mov add mov pop xor in out jbe jle mov sub pusha add mov push ds xor mov mov js clc xchg mov punpckhbw add loope sbb in add scas mov je jl xchg add dec push clc add ss inc pop dec clc jmp rcll fidivr dec pop add push fcom aaa adc sbb mov and adc push or into (bad) pushf les mov test inc fisubrl sbb push (bad) testl mov mov fs pop sub jecxz sbbb add fmull xchg pop mov push or xlat sbbb fs push (bad) and xor adc fcoms add sbb jno or and cmc rcr sub xlat sbb or mov xorb xchg dec dec fidivl jns adc pop cld and sub inc movsl fdivl and mov prefetch cmp pushf imul inc rolb xchg js push ja xchg imul cmp adc test pop add mov push movsl les add dec pop fs nop and fwait add push imull cmp in mov mov adc jns daa es xor jp loop mov rclb pushf sahf pop fwait and adc xchg or sub notb std add es mov pusha cwtl and mov jmp sbb xor or xlat add and push xchg pusha inc adc adc xor push sub icebp addb movhlps sahf pushf je add out pop rorl lods or cmp or jo js in xchg popf ret (bad) cmp dec sub sub add cmp mov dec sub mov jbe pushf sub cld mov out pusha or ret jl push mov test sahf and add dec je loop in bound inc popa jo jae add cmpsl sub cltd push xchg adc cmp inc push stc pop sub inc add inc mov or push jae lock add adc daa jle mov movsl add cli movsb lock test or popa out add ret adcl mov fbstp sbb cmp outsb aaa or jmp inc js mov inc es sub push push xchg pop cwtl arpl mov lods test gs fsub ds int ret mov (bad) (bad) ja add add clc xor or cmpsb inc push and jnp add js mov (bad) or pop add mov ja hlt daa daa xchg inc inc add aas rclb inc xchg insb jge sbb icebp cmpsl add pushf mov pop lods adc ss or push and cwtl add xchg cmpsb cmp loop or xchg mov enter pop jmp dec add push cwtl mov int3 jo adc and aam jge xchg int3 add stos insl pop cld jno add repnz add testb adc jmp daa pxor add ret dec imul pop pop sub movsb sbb in loope add push add scas xorl (bad) fsubs popf inc test adc xor mov cli outsb (bad) or pop mov and jbe jge std jnp pop pop movsb push insb add ja fsubl sub add jo test mov jns xorb and sub jo mov xchg (bad) jl add mov add aaa mov stos mov fcoml add jmp in fildl cs dec mov cltd lock (bad) std xchg push cmp enter xor (bad) or pop jle dec and ja js pop arpl push scas sub cmpl pop or mov adcb repz push int3 addb mov icebp mov int3 dec sar dec and data16 sub out xor mov mov icebp cwtl sbb loopne push (bad) (bad) ds ja or push xchg int3 mov xchg mov adc daa xchg sub (bad) in pop mov dec and cltd adc xlat aaa push ja or push sub mov inc jb push cmc stc lcall shrb (bad) push out mov js call jg mov adc pop inc rcl cltd or inc les xor mov sbb mov mov rolb sar pop xor imul mov addr16 mov sbb jne mov mov insb adc adc lds pop xchg repz sbb add int3 add push js (bad) fidivl repnz mov rorb xchg lock pop in lock pop sub mov add pusha leave (bad) fwait popa loopne das and hlt and mov cmp mov adc shrb das sub add rolb add lret cltd add scas fsubrl cmpsl add (bad) and sub adc hlt xorb sahf or adc bnd sbb dec pop add loope data16 cwtl cmp add jl int les cmp out and roll adc mov jmp movsl and jge (bad) ljmp push aas add dec popf jb adc mov insb pop icebp jb add cmp add and lret scas inc xor jg ja or loope sbb inc add jns sbb adc mov cmp mov (bad) aad inc jmp lods bound adc test dec pop adcb std dec mov jle cltd and xchg jo mov xor stos mov or test insb loope sub pop add ds jns psrad sbb (bad) push pop adcl cmp fldcw and jno push in mov cwtl flds or add loop push dec mov nop pop idivb aam adc jb pop out adc lcall sub jno test enter hlt add lcall mov popf cmp loopne cwtl fisttpl js add jmp (bad) and jl ret into mov dec xor fsubr imul mov cmp mov lds and add into add movsl in add xchg pop cwtl add data16 fwait call cmp and or xchg adc pop xor lds mov mov lcall push jp jl mov imul movsb xor pop push add (bad) js sbb mov adc mov shlb notb (bad) cltd test ja adcl or pop add xchg je popa jecxz daa and xor (bad) jmp inc inc into dec int mov sub or sbb mov or scas add mov imul rolb lock push or mov lds fisub pop (bad) sbb setns shrb icebp add stos adcl loopne popf insb and fs iret lret (bad) in add loop mov cld mov mov jg clc ss mov bound (bad) dec jne mov inc jo sbbl in jge enter out jecxz and add mov insl sysret add push aaa cmp cmpsb and sbb mov xchg mov leave adc dec call stc pusha xchg fild gs jnp and lret jo sbb fwait negb push dec mov jp add pop leave rcr pop or imul sub push adc nop adc cltd adc repnz bound cmp jo adc (bad) adc addb ja pop sbb adc mov fisubr push fdivs xchg jle icebp inc push je jl add scas add push cmp cmp pop bound js daa movsb loopne (bad) jo and push lea das movsb js push sbb jae sbb mov icebp jb cmp mov lcall dec cmp sbbb testb nop jecxz insb xchg push mov add sbbb incb pop in outsl inc mov add and sbb in jb xor add dec jno push xchg movb and fs sub add loopne cmpsb add out fldcw lock lcall stc jp inc dec test sub cmpsl adc stos add inc cwtl fcompl xlat push inc xchg data16 xor hlt call fwait mov dec xor ja sub loop push pushf subb and cwtl mov lds push in jno aam sub les cld push sub sub or lret inc mov call sub into xchg and jb add shrb jle push jg xchg imul or push jecxz lock imul jae xchg popa xor les adc xor pop add mov xor sub cld lds jns cmp xchg lock sbb ds mov mov sub inc cwtl add cmp iret add mov push add enter jne test in sbb outsb sub (bad) sub xor out and mov out stc push cwtl add cmpsb pop jge dec cli add jae ror out imul add add cmpsl dec and lods or ret ds sahf pop repz fdivs mov clc jns inc je adc aam mov inc imul lret mov or aas shrl mov adcb clc jl pop push xor or cli xchg cmpsb push add pop out lahf jecxz popf mov and mov (bad) int lds add out add inc cmp fldl jp subl xor mov add xchg cmp or pushf sub mov sbb (bad) jge fisubl pop arpl mov (bad) enter cmp test aam fwait push pop mov cli adc hlt loope and pop sub xchg mov movsl and dec xchg add pop inc push push add mov rcrb add add (bad) sub sbb lods jno mov int3 enter mov or sub pop mov pop mov mov and and mov cmp lods test push lahf lcall sub sub or xor jns in clc inc mov push negb (bad) repz or mov xlat jl cltd add jb sub dec mov leave add (bad) sbb dec test mov inc fwait and sbb xchg mov aaa iret cmp cmp faddp or fcmovb hlt notl cs pop and or movsl aam add xchg and xor pop movsl ds pop lods jecxz xchg push test cmc inc mov pop dec or jmp rclb sti or xchg or add bound cs mov sbb pop add push ss std push rcl mov insb mov adc dec orl cs xor and sbbl adc mov inc int fwait mov test nop packssdw rcrl pop add cmp pusha or pop sbb out movb jae cmc mov inc loop mov fisttpl dec or jbe push test inc sub outsl mov push shrb lea sahf mov mov pusha xchg cmovo movsb into lcall test dec ror add cmp cld add test xor mov movsl mov sahf xchg sbb pushf psubd cs adcb leave loop adc cli sub loope pop dec enter int3 les push test add jp push mov (bad) lods jo inc cmp mov jp cmp and add jne pop fwait inc mov mov aaa cmp or add xor pop sub cmp add (bad) int3 pop pop mov std inc enter shlb ja add fmul aaa aas or sub add pop cmpsl jge xchg xor idivl pop and add sub and in orl or adc icebp lods cmp adc or add mov cmp hlt nop xchg inc popf cli push outsl test lahf push rolb test nop add inc xchg js daa insb scas jb add and dec mov xchg sbb adc and mov aam cs sti add roll and cmp mov imul inc in push je dec xor mov dec xor enter je mov or addr16 add fs out xchg fcomi or cmp rcrb sub xchg adc fs or add rorl mov cli lea sub fsubrl adc movsb mov add cltd negb cmp imul push and fdivrs sbb xchg aam into pop lahf or adc xchg and add movsb pop pop add clc adc add mov pop xchg rolb dec cmp (bad) in out push add (bad) push adc mov rorb sti adc call adc ret dec xchg aas push and rolb xchg add rcrl or les nop jp imul dec test sub dec mov sarl (bad) and jae dec arpl add mov add push shl adc outsb addr16 std or cmpsb les xor je in add mov cwtl add adc cltd fndisi(8087 mov or pop pop hlt dec push fadds call push and lahf not add jae xchg xor in enter sub (bad) mov incb xor jle sbb xchg daa mov test in fadds pusha cmpsl add jno push adc jge (bad) cmp adcb cmovle mov adc pop loopne mov or cmp movb mov xchg in mov pop pushf int3 ja enter mov (bad) roll and jbe scas shrl jbe test clc xor add outsb jbe pop sub push fimul sbb and add mov cmp lock jb add sub add roll pusha dec sub out dec dec xor add (bad) cmp push pusha movsl pop shrb adc into and adcb loopne mov add pushf xor push cmp in cwtl mov leave nop jnp and adc clc bound (bad) cmpsl rcrb nop add stc jg call rcl adc add pop cmp shrl xorl lds aad push jns push jmp jae pusha add lret lock cld sub pop push xor sub xchg call movsl adc inc inc jo notb push inc cld inc (bad) mov enter push nop popa mov aad out mov or (bad) insl inc push cltd adc sbb nop aad ret and sub aas push xchg mov pmaxsw add mov movsl push lods mov or stc inc andb std mov (bad) daa shrb cmp xchg cmp and nop inc mov lret xor mov cli inc sub lock cmp in aas mov lods mov test inc jnp gs dec decl sbb inc and xchg xchg add incb jle sarl xor xchg and inc jg sarb stc xchg adc push mov xchg outsb ds push rcrb sub jo loopne int add and in fwait pop fstps cmp jo nop aad fistpll add lcall pusha mov fmuls jo or stc enter inc add test xchg out cmp imul inc fnsave mov out pop subl sti cmpsl push and xor cltd or mov inc adc (bad) (bad) cmpsl and stc lcall sbb cmp testl pop dec adc dec jo add inc and pop xorb inc fnstsw cld incb mov movsl and xchg and push xor loope je mov test cli pop imul add fdiv xchg add jmp loop scas cmp lahf je andb fxch mov pushf cltd mov inc cli inc pusha cmp lcall sti xor js (bad) sub adc push and or aad lock sbb rcll loop or or mov js int inc je mov enter cltd add sbb dec inc aad cmpxchg add mov push (bad) dec and jmp mov imul add add cwtl arpl es les aad inc jo and pop dec sbb push and stc sbb dec out pop and rol or mov add call adc push mov test cmp ljmp out sub xor or push or xchg nop pop add and shrb mov push mov push add xchg add daa dec xchg xor mov or cli loopne cmpl sbb cmp cld lahf fsubp pusha insl (bad) push xchg xor ja xchg cmp inc or rolb push inc rorl or ret cli popf jmp inc add mov push adc roll fadds adc jmp ds ljmp push pop movsb jmp jecxz mov add imul mov test xchg push mov imul adc js inc push dec add jmp nop pusha cmp adc mov test xchg mov js nop xchg test lret inc xchg dec sub (bad) cmp pop cmp cmp (bad) adc mov push ret nop je (bad) jns lods movsb add cld mov xchg pusha push push or xor or dec or lea mov xor out add in xor dec scas jp mov mov lea sub lea stc leave push dec stos mov and call pusha mov dec ja adc push adc fmull xor inc fwait add mov hlt push shrb add fcompl fs or sub aas mov ss pop and rorb mov call pusha add adc adc cli xor test mov bound mov imul rol adc rcll sbb inc shlb shll mov add jmp test insl into clc lods nop push jno mov mov adc or jo mov scas xor repz dec xchg cmovs and push cmp jns lcall and das xadd inc ficoml ficomp push add dec push negb hlt pop mov adc bound daa (bad) jae push sub push mov pop mov mov and imul sub jae test add add xchg mov cli sarb dec movsb add push jg (bad) pusha pop popa out enter les sti mov in sub pop push xor mov pmaxub cmp add cmpsb or add dec push enter pusha lods int or call mov (bad) mov out sub mov sub push pop jno scas addr16 into (bad) in mov out add movsl mov mov mov out insb cmc and and push cwtl scas into call cli adc cmpsl add and in test and dec sbb ret mov adc cs xchg sbb mov cmp mov or dec cmp aam jecxz and lock cltd and aam sub mov cmp push and jo fs pop mov shlb sub mov push pop inc imul xchg push pop add ret lock imul or cmp lahf add or (bad) outsl pop jo and lret pop dec adc xchg insb data16 addr16 sub sarl add adc test mov aas push or xchg sbb xor mov test adc jne jl jmp push jbe add js in push jg add sbb add mov mov in add aas xor mov icebp sub dec jl pushf mov xor dec push (bad) jo add fnstcw loopne jl,pn fimul das adc add les adc xor inc stos mov xchg add mov aas cld sub fyl2xp1 sub pop ja add xchg mov and in sbb arpl mov push rclb mov dec sub pusha or shl scas sbb daa and and lods inc dec sub or and jl ljmp xor call cmp shlb jle js push call or addl je pop add sub mov cmpsl leave push rclb inc cltd add fidivl dec cmovl sub cs or addb mov lock add add movsb ds repnz dec cmpsb aad cmp addr16 push popf mov push xor in inc test stos dec cltd inc or add xor rolb cltd nop sarl sub pop pop or insb lcall adc mov or pop jle loope xor div inc jp adc add out clc (bad) aas mov xchg call sub xor jae fistpll xchg adc xor (bad) fiadd mov lock (bad) shrb pop ss fdivs mov call out scas mov mov add xor insb adc cs push xchg pop cmpsb cmp adc mov push mov cmp bound or pop adc pop ds mov out mov in daa xor xor mov fildl imul or shl add arpl xchg test push scas shll test xor fst mov pop add inc sub js sbb sbb ficoml and mov insl stos clc shl ljmp or push xor adc add pop call xchg cmp xchg xchg pushf jl sub xchg jb mov rcrl (bad) ss into xchg push outsl lods or and test mov sbb dec sub mov jg adc mov jle push aam andl and movsb push adc cmp mov adc add jl mov (bad) fistpl loopne mov or mov movsl sbb ret xchg add or int3 inc sub loope jo push mov mov addr16 mov lret mov test test rep addb inc xor dec cmp push dec lods fsubl fs mov mov xor xchg mov testb dec mov push popf cld add stos mov jo shlb (bad) sbb adc add mov dec or fdivrl addr16 sub fildl push xor fistpll pop xor mov xor call sub cwtl cmp mov es sub insl cld sub cmp and add mov sub mov (bad) and movsb mov (bad) or add in mov mov xchg sbb das or jo inc xchg push test push ret add mov xor insb test icebp mov fldcw fldcw daa mov dec adc outsl out mov xor (bad) test dec call out mov cwtl push xchg or int3 inc roll pop addb and push addb mov mov lods lods push lcall xor dec fucom pop push lods sub xor outsb xor imul or inc adc fs scas jp nop and clc xorl subb call or ds push xchg dec or loop fsubs sbb mov mov ds sbb test xchg add xchg xor int3 gs push sub call dec jp adc mov sub sbb insb std xor int3 and sti push cmp leave movlps or cld sbb aam adcb call fimull (bad) push data16 mov test inc aam in mov rclb add and out jmp mov or aas outsl aaa out and out cld adc sub les fsub mov call call push mov inc dec sbb and in les pusha cs sub adc lods inc cltd sarb out add and fst or arpl cmp push mov mov adc jecxz mov push (bad) lock rorl enter jae push in adc cmpsb mov in xor or hlt sub fimull xchg fs das jbe lods cwtl cwtl gs out adc test nop cmpsb inc sub push inc pusha sub rcr cs inc mov xor ja fwait adc test rol mov pop mov dec and push int3 dec in mov loop inc sub cmp push xor and cmpsb add leave push (bad) and sub jl out in fsts jmp sub cmp outsb xchg jno adc xchg dec push loop pushf (bad) fisubl ret test mov mov adc adc shlb xchg jl or mov jl adc add mov sub idivb mov xor pop lret rclb pop pop xchg push lcall dec add or cmc mov ret pop aas imulb pop jl push popf jo shlb add mov xchg inc or adc outsl lcall cmp push in jle ss loopne shll add enter cs xchg push orl leave out scas mov mov sbb xchg aad xchg push or fcompl jge adc ss and and test jl fiadd nop hlt das addb mov mov sar mov shr lock add jp cwtl enter cld jl sub fwait pushf add mov stos xabort (bad) xor shrb negb xchg cmp lods push mov sub push inc test ret les jb push (bad) push outsl jmp arpl lods je mov sub test adc imul fsubrl cmp push out (bad) sub cs out fsubl fildll cmp jae cmp jo jmp push and push lahf movsb rcll rorl lods sub xchg add daa inc jae inc les pop jecxz mov seto xor dec jmp pop rclb jne pop and mov xchg jae cwtl cwtl (bad) (bad) sbb inc pusha and and inc test push add (bad) sub jb mov cmp and fimul ss mov mov enter and adc in sub (bad) xchg add sbb in push mov mov je rolb fucomip sub sbb xor outsl dec fdivr pop mov cmpsb fwait es enter fsubr sbb aad pop xor lods test cmp std cmp test cld add and push mov cs cmp adc push xchg xchg jl leave dec push je stc pop shll jb test mov mov sbb mov scas and aaa imul and lcall je add dec push inc jg shlb ja jmp loopne inc sub jno cmp lret movsb xlat mov jbe fcomps fnop je add fisubl nop mov hlt xor int3 data16 and mov rclb outsb cmp leave xlat adc sti xchg cltd xor pusha outsl inc xor push dec adc sub mov pushl pushf ficom add pop cmpsb add sahf pop dec inc dec xchg mov push jo lock jns lock popa push jnp in sub inc jecxz movsl call sahf sbb push mov sbb cmp imul add sub sti sub test in adc stc out add inc sub mov lret add (bad) test jno pop xchg xchg pop bound repz xor flds and jno mov pushw xchg xchg popl call popa inc sbb mov add addr16 (bad) pop (bad) enter (bad) jmp inc outsb stos adc rcr jns xor xlat popf (bad) movups sub mov lods (bad) xchg insb add pusha cmpsb out fs add cld lcall add divl add add push ja add dec repnz xchg cmc bound cmp add mov xchg scas adc pusha mov jno pop dec add lock (bad) mov push mov mov or adc test mulb lahf arpl out mov push mov push mov sbb mov aaa adc nop inc cwtl ret add clc xchg pop into rclb pop sbbl ss add dec les push push sbb movsb leave xchg adc test xchg jl lods or push add push dec mov mov push dec add dec (bad) adc mov pushf loop sub cmpsl jecxz jns add mov movl sbb push xchg cmp es pusha adc fs inc nop fxam and sub mov pop sub push imul addr16 fdiv push outsb and mov mov add or mov or lods dec sti subl out rorb adcb icebp mov les mov add stc rcrb push mov adc cmp fildl mov mov cli rorb mov rclb outsb jp (bad) jge cmp aas leave push push test add lret dec pop jbe cmp or sbb or or rorl addr16 nop jo sbb fcoms inc jbe add stos pop jnp (bad) dec cmp inc dec xchg (bad) test (bad) sub pop rcrb (bad) notl pusha or xor test test cld mov pop movsb dec js,pn lods sbb sahf ss jl add dec cmp add ja mov jne or nop mov orb adc dec inc sbb ret lock loope,pt cmp cmp adc fimul inc adc sub and stc orb cmp dec and movsl call pop xor jecxz sub je jns div pop repz or mov dec stos dec out inc jnp scas imul push addl xor ja and xor adc jmp (bad) fild pop test adc inc sub es push cwtl bound push mov outsb mov lock push and stos insb pop popa and pop lods pop xchg add hlt cld test movsl (bad) scas adc les sbb add (bad) clc in inc or out mov sub or xor jg mov mov xor xor es and xchg mov jl or adc add ja jo flds scas ds adc popa mov cwtl mov js add test add push fwait aas data16 jo jge mov mov loopne (bad) fsubrs loopne js cld mov inc dec outsb test mov js push and sub in push mov jmp sbb mov lock jmp cmp cs or and movsb jl adc and mull cmp inc inc leave jl fldt xlat es xchg xor or repnz mov and imul sbb or hlt adc clc jecxz push jbe fdivs xor rorb daa cmp push in dec movsb loope push pop push sbb imul fnop ficoml mov (bad) adc mov inc add imul mov sub add lock mov lahf test push sub mov mov adc xchg lock int3 rcrb push movsb mov (bad) icebp dec mov scas xchg cmpsb punpckhbw push add push add cltd jnp loop push jae imul ljmp jnp dec fs jl and push jl lods mov add push inc and lret aad idivl mov mov leave insl xchg add and daa and pushf or cmp fsts sbb and pop push mov add pop addr16 dec jmp in (bad) push or enter (bad) lds or mov out sahf pusha clc push fst sbbl or mov sub mov push arpl pop add add push inc mov sahf push test and mov lahf or sar mov stos aaa inc mov (bad) js adc add inc pusha push roll or dec xor les add xchg or add add sbbb sub (bad) xlat cmp sahf and inc hlt jo add lds movsb fnstsw xor adc xor pusha sahf rorb mov push je sbb xchg sub sub dec in cli mov cmp js (bad) leave ja cmp sub add jl jl ret test pop add lock add sahf inc fiadd mov xchg leave std add xchg mov mov adc jae lea adc pop enter ret loopne lret cmp addl or test sti cmp push add pop hlt jp cmc lock je sbb xchg scas xor enter jae xor xbegin jle mov mov testl push vmwrite jne bound or adc inc test imul and inc sbb dec lds mov mov cld inc pop sbb add insb inc and xchg lds add pushf stos pop fwait (bad) mov rcrl ret sarb shrb dec divl xor (bad) cmp mov mov xchg sub sub jmp rolb cmp or inc outsb xor imul andb add push push pop jl add sbb call xchg adc and add pop mov mov clc xchg add or test (bad) pop (bad) xor or popa movsb mov xor pop push adc pushf add int3 or xchg bound jbe adcb lods movsb fsubl rcrb add enter cli xchg add or icebp or cmp cld xor xchg jne je sbb ja mov (bad) je add imul call jae xchg call stc pushf cld xor inc push lods je call mov xchg inc lret sbb es test fs mov stos nop add inc lods sbb cmp pusha mov mov les xchg out adcb cmp fnstcw inc test (bad) jp sub movsb pop jnp pusha stc push out xlat repz bound inc lods adc push mov or or leave and movsb sbb (bad) jbe sub mov add paddsw roll xchg add cltd add cli dec int xchg or xlat jae scas bnd incb mov pop lods test imul test inc test inc sbb add or inc bound push js pop xlat mov rorl cmp and push mov sub js (bad) inc add popa fnop add and or xor dec test sarb mov cmp add aam ja adcb xor cld cmp test adc stos push push (bad) jne das rcll cld int mov and mov pop (bad) fs dec add shrb mov add pop rol std mov jae or mov mov loopne lds pop test mov lock xlat popf mov pop int3 ja in aad cmp loope and adc adc and rol push scas hlt add out xchg xor cmp adc cld call stos test or out imul loope or mov xor jp lahf mov out or push (bad) or xlat mov cmpsl les int3 dec daa int3 (bad) mov mov aaa mov adc inc clc sbb jecxz lds mov nop test and mov add sbb push hlt dec mov mov loopne cmpsl imul mov sub arpl xorl xchg dec cmp add scas cmp jl into mov pop pop xor jae sub mov or cmp jno jl sbb mov mov dec add fnop ret or leave or movsb inc shll hlt mov fsts mov ret test cmp icebp mov repz lods sbb (bad) or mov sub movsb xchg xor daa in lods js and adc cmc pushf lock enter test stc or enter pop mov add lret add push clc xchg adc test add or xor (bad) mov (bad) mov and jo xor pop lods clc sub cwtl ds dec xchg inc dec in lahf or inc ret adcl pop call add aaa or stos stc add inc fwait sti push ja cli adc js loope out int lods icebp mov push jo adc adc inc repnz mov movsb aaa add jo and jbe or (bad) repnz adc pop in sub xchg add mov mov enter out and and out add mov movsb add jbe jecxz sbb cs gs lods pop inc mov aaa aad add pop push pushf sbb lahf xor imul js add daa (bad) ss test clc jae adc xor add cli sbb fild lods cmp lock and ds bts mov cmp mov js mov lahf mov flds loope add fidiv ja addl jo mov je or std gs sbb mov jae cmp jb cli into test icebp mov je nop xchg push adc subb push jae jb enter out call lcall rol dec stos gs mov push xchg dec push pusha dec scas cmp push in and (bad) cmpsl lock adc adc into inc xor fild adc jbe,pn pushf jl nop cld cmp xlat outsl sub stos test push inc shlb pop xor push cmc jnp ret jmp movsl (bad) xor aad adc notl xchg add or addb sub popa pusha inc push daa (bad) inc aaa jl adc and bound push loopne psubq test jmp add rolb jb addl rclb fwait add jns test cwtl hlt jne xor push scas mov icebp adc imul push nop add jne mov cs test mov int3 adc test scas dec enter adc xchg xor roll imul cmp xchg add shrl jmp xchg sbb popl mov or xchg jae,pn mov and sbb in pop add mov or inc or fs or push dec add add jl mov jne dec adc test scas or int3 xchg pop jle ret fisub sbb and jo add jl loope xchg lods and sub adcl jno adc xor hlt adc cmp mov je jecxz jb add ds cwtl hlt fmuls imul sarl cli stos addb (bad) pop push loopne (bad) pusha dec cltd outsb mov movsb and mov in push jne jmp push xorb and adc testl or add sbb pop in test test mov lcall fbld int mov sahf push ret sub add push ja mov fs jns jae std adc scas push and add fiadd nop xor push dec xchg addb out inc dec jg pop imul (bad) push jo pushf cld cmp imul (bad) scas mov mov les jno xchg dec push insl pusha jl xor aas mov cmc hlt dec pushf movsb push (bad) in fs js cmp (bad) call xorl fiaddl imul fs xor dec or hlt add test or add or adc pop (bad) mov and mov push rolb xchg push pop scas pop or sahf sub sbb icebp pop fwait jbe or or jbe vmovddup aam adc mov sub and rorb divps pop xor add mov dec fisttpl and sbb insb clc test (bad) repnz enter fs add clc mov jmp sbb mov xor fsubrl xor shlb (bad) loopne fdivs push or cwtl dec (bad) mov or inc mov (bad) jnp clc push adc in outsb js add ds decb mov popf lea cmp add xchg and push imul fiaddl pop popa sub or dec call insl cmpl fs bts or mov add xor push dec jne cmp scas pop ret jle mov inc or fist shlb pop jmp or in not adc cli dec fmull sbb push sbb (bad) popa or test frstor enter bound mov and inc fsubs cmc and adc jo mov call add or jbe mov pop adcb jb push push sbbl inc dec cmp pop dec lds (bad) pop push pusha adc mov push test sbb xor lods xor arpl add adc pop ror insl inc pop or cmp or pop xchg movsb or mov push add and xchg add ret xchg adc sub mov add xchg hlt mov clc test dec dec (bad) sub daa jne xor pop test ss int3 cmp push jb fdivrs dec pop or cld lret and sub adc add aaa or sub cmp stc xchg rclb jl sbb lds int3 add les nop add mov pop dec push add xor pop fsub fldcw add or cmpb (bad) es daa add adc push cmp jo fwait and adc jge movsb add pop jns adc popa dec stc in add out or mov pop test mov test popf push fldl stos test pop dec add xchg data16 sub repz dec jns movsl push pushf add sbb mov (bad) fisttp nop fsubl push test fs jg test or pop rolb lock test or add inc pop adc adcb (bad) sarb shl popa inc std dec pop sbb mov call lods dec fs or and leave clc xchg dec add mov frstor inc hlt adc mov sub jb addl add mov (bad) jg cld cmc jmp adc dec pusha and pop (bad) fnstsw push add push cmp xor das adc orl cs cmp and in pusha and enter insb inc jge (bad) cld cmp or clc pop add sub pop add imulb test lods sub gs and mov push cmp jg mov jo mov cmc es xor xchg test push pop jno xchg into movsb sub (bad) sti or mov or mov sub outsb or dec add push dec sbb push dec lods cmp sbb xor mov add mov loopne add sub (bad) clc stc jne mov cmp add add or stos mov test cmpsl push add fwait mov mov inc or or jle or out ds jg sbb dec and dec pop add adc sti xlat push push push push popf add adc leave lock test pop in pop xor adc xchg pop cmpb out or cmp scas ret push stos call rcr and adc imul leave jg pop lods clc add lock outsl imul test outsb inc jl add push in sbb and add mov dec cmpsl inc dec fcompl push sbb (bad) rcrb or xchg pop adc add jl cli js test (bad) negb adc add ret daa cwtl sub xlat (bad) nop pop mov test mov call movsb sarl or out sub loope (bad) mov fsts add xchg (bad) mull out lock call sbb pusha xor add fwait mov xor adc mov pop dec in (bad) pop lret mov sahf mov xor cld pop or xor push or adc mov add push xchg ja sub repz mov out jl dec ret pop or fs jne fmuls pop outsb sub add xlat fdivl mov and aaa call stc icebp leave fsts xchg repnz or jl mov mov push shrb mov out adc pop dec add hlt dec fs cmp ffree in add add jbe nop lock jle add out repz mov add jnp add insl mov sahf popa add rcrl push adc adc mov rorl popf int3 cmc mov mov pop mov jmp add dec in cs add jge sbb jb pusha popa mov cwtl push push push and xchg jb pusha loope mov sahf push jne add fs (bad) out lock rcrb mov inc mov (bad) dec inc shlb pop outsb or or pop xlat loopne pop mov pop mov sub outsb test xchg sub mov jbe sbb pop repz mov xchg and jbe shrl outsb popa xor push push add inc shr add add cmpsl insl sub xlat (bad) (bad) aad (bad) lock dec ja xchg or add mov or (bad) enter push xchg push shrl sub xlat fldenv lcall adc fild push mov xor aas jg loopne lret mov pop sahf mov pop aad inc push mov dec clc or adc adc xchg mov (bad) and adcl les sbb push mov xchg adc loop subb jmp (bad) enter mov repz mov loopne mov aad test xor xlat xor leave sub mov push hlt or and add leave dec jbe sub movsb outsb mov out test mov dec dec aam push inc sbb adc mov pop ljmp ds jmp mov addr16 ja cmp test incl add bound lea push insl in add iret data16 enter push mov jle mov or movsb or insb add fwait icebp pop and adc inc das inc add subl push (bad) ja push mov lock nop push mov lods jnp pop icebp hlt (bad) loopne push mov popa repz (bad) faddl jns repnz mul or add stos cli pop inc mov xchg out sbb add or adc add dec (bad) cmpsl or (bad) adc jnp shlb clc std arpl jno cmc div adc add cli push js sub add cmc jo loopne ja or (bad) xor loopne int pop loope add or push arpl arpl xor insb jp add xchg jmp push jg (bad) mulb sub outsb inc (bad) sbb xor xor arpl cmp or out mov aas add stc cmp push pop bound rorb add xchg inc xchg je pusha in and fimull cmp dec in jb rcrb (bad) call mov cmc add popa lods aas add add dec sbb out adc subb xorl jge push clts adc fs les shlb add stc or insl popl or imulb xchg or jo rorb insl add add pop cmp cltd addb inc jp jo or xchg xchg hlt sub seto in mov sbb xacquire dec nop xchg in xchg jg add mov or imull (bad) push arpl out ret add push push add jo pop pop cli or push insl lods (bad) mov ljmp add mov inc adc lret adc xor (bad) mov xor jp in mov inc fdivs movsb mov cmp pop dec stos push inc jnp mov xchg xchg jp xchg and out ret add sbb xchg push or xor test jg data16 ret pop pusha push cmp int3 mov mov pop out out xchg mov or inc pop mov xor dec xchg and pop decb gs mov cwtl and movsb add div sbb nop push and and cmp add adc call movsl cli jp inc mov nop je inc mov xor cmp add inc jne rorb adc push pop sbb xor mov lods sbb mov add js xor or inc jp cmp inc ror cs xor loop fsin or clc popf js cwtl mov adc jle fadds mov xchg mov sbb (bad) es or inc stc dec int3 xchg iret test pop add sbb sub sbb imul push clc (bad) push or sar cmp add or xor js sub es mov loope mov and inc xchg jno and add xlat mov cmp add out mov sbb mov lldt or mov add dec insb jl (bad) dec lock and add and (bad) out inc daa sbb (bad) lea xor rclb call pop in xchg imul sub inc dec xchg hlt jae les add leave cltd subb adc add (bad) insb dec in dec int3 in push imul push or xchg aad mov sub in xchg push data16 inc ja xor (bad) mov mov inc out cmpsb int xor sub loop je xchg loopne mull adc pop (bad) scas adc int3 sbbb and jnp repz xor popf sub and cmp mov pop dec xor xchg leave sub insb enter movsb test pop faddl scas jns xchg mov push add ud2 xchg ror cmp repz sub sub mov test adc inc movsb xchg mov or and mov sbb rcrl repnz data16 in pop xchg imulb xchg add mov cmp lea loop pushf mov enter (bad) out arpl dec xor pop pop (bad) jae es test push sub mov pop (bad) je xchg arpl inc mov repnz out enter or enter or daa xchg lcall jae es iret shrb rcrb sub or adc rorb cmpsb jl cld fcoms repnz adc mov mov push movsl mov pusha adcb cs and out insb mov bound add loope sbb test or pop adc out pushfw or and mov movsb lods sub dec jl jb xor iret jno mov cwtl imulb sub call adc jbe or pslld pop add fmul sub cmp pusha movsl loopne pandn lret pusha inc out sar pop sub dec cmp sub pop clc movsb (bad) mov call sbb movsl jns js sarb sbb fmul ljmp dec nop int3 or (bad) dec in cs mov xor xchg add inc enter push aam xchg clc out and xchg dec pop shlb pushf sub inc rcrl push pop adc testb int3 and dec add add aad push cmc sbb dec clc cmp ficompl or and (bad) sar cltd cli xchg sub dec xor mov push ss sbb fcoms jns mov nop es stos loopne pop pop inc cmp notl xchg and divb std mov add sbb adc pop lods dec or ret notl fmull xor movsb push and push mov cld lcall and mov dec xor adc sbb enter and jns inc add and adc rcrl leave xor push enter and popa xchg in (bad) popa loop pop inc mov inc int3 dec repnz or xchg sbb sbb mov or add add jecxz daa mov jl or xchg mov add stc cvttps2pi xor pop leave sub in push pop sub or inc inc adc in rcrl sar pop int3 dec lods mov adc push mov clc jne dec shll xor lods pusha jmp sub jae bound mov or movsl mov sbb inc mov iret in scas cli lahf cmpsb adc dec lods das negb mov ljmp mov cltd mov outsl xchg cltd aam or incb les aas push mov (bad) jl mov stos mov sbb sub jns push mov adc add xor mov rcll imul add das dec sub and (bad) pop jmp sub repnz mov sti enter add movsb mov das jl add pushf sti mov xchg neg adc pushf push cmp adc inc pop str mov adc aaa xor pushf and pop out jge xchg jp mov and xchg dec inc mov sbb add add xor or (bad) loopne fsubl xor arpl ljmp sub sar add mov sbb xor pop cmpsb xor pop and cld jecxz cmc dec addr16 daa dec lods sub fs rolb or or add (bad) repz mov jns mov push movsl push sarb or sbb mov sti sub inc lods add inc sbb sbb and pushl cmp inc lock js push scas mulb lock push add aaa rcrb ss mov add hlt mov fs loope jle insb bound je in daa or adc mov add mov jmp cmp dec mov clc jae add (bad) ret jno fcomps or dec movsb out out jno lock jg sbb (bad) cmpsb (bad) add mov fdivs pop push out push ror mov insb mov push cmc loop aas les push mov outsb lods sbb jge add xor or vmwrite push jmp addb scas gs xor and mov xor out xchg inc xlat popa xchg sbb in inc inc roll and adc imul loopne add xlat adc jns stos cmp cwtl add les mov xchg insl fcomi pushf lods pop jecxz and mov ret cmp imul cwtl loopne xchg xchg sarl or repnz push fdivs or in movsl mov push add es outsb pop add add or inc push js inc jmp jp add jecxz inc (bad) cmovne push jne mov sub and mov iret xchg or sti sarb pop dec cmp xor pusha cmp mov adc mov and sbb mov mov inc cmpsl psubb rolb insb push adc push adc sbb mov fwait inc enter mov test mov popa dec adc or aad in cmpsl dec cwtl mov pushf les and shrb fidivl xor jmp cmpsb pop clc add inc sbb mov adc and jl mov mov test int3 add lcall lahf jo sub cmp push mov xchg mov test mov cmp add pop daa jl mov mov mov mov xchg add jmp xchg stos adc inc mov out adc leave enter push or cmovl or pushf or jl or mov cmp and push cwtl mov cmc insb sbb mov rorb sbb push ret jno and cmp test xor rol add enterw mov fcoml data16 cmovs xor push and add das add mov cmp adc ds sbb arpl push (bad) shlb jge xor call sub test jl aam mov or rcrb inc jae sbbb lods sbb punpckhdq ret dec mov mov cli add mov and jno inc add movsb je movsb test add les and jo mov or pop mov sub fdivrl xchg clc addl adc shl loopne push or (bad) xchg adc sub daa hlt push clc xchg push fisttpl out adc test popf test and fisubr sbb gs ss jle add and orb add sub push mov cld mov mov imul xor or aam jg fidivl nop lock mov stos inc hlt and mov orl inc fsubs shr jg dec ja outsb or fcomps enter rcrb int3 jb xor aaa stc aad jle sub dec dec add neg in lock sbb mov mov push mov adc pop cltd fsubl cmpsb or sub sub or xchg push xor mov adc test dec cltd mov and stc cmp ret or sbb in adc shll ds enter in cmp adc sbb leave stc test cwtl mov sbb add repz and pop pop les (bad) aam add inc pusha and loopne cld push imul repnz sbb or hlt pop adc popa cs loopne jmp adc xchg pop aas cwtl sbb test in xchg fmuls cwtl aam (bad) pushf clc sbb or popf adc andl and pop lods stos fisub repnz ror inc mov sub cltd pop lds pusha sub arpl xor vminsd sbb out outsl gs inc mov xor test jns fsubs mov pop cmc dec fcoml cwtl xorb pop (bad) dec jp icebp rcrb sub inc sarb pop cmove mov lods xor xor cmpsl je pop mov aam les dec xor dec (bad) dec mov cwtl dec fnsave push inc sbb (bad) mov lds pop jl inc lahf mov and nop xchg pause xchg loop jle imul popa cmc clc cmp loopne call cmpsb (bad) jo or scas dec rolb aas mov call fadds inc cmpxchg add nop add sub add (bad) add xor das popa pusha adc sbb fcomps add xchg inc cli or xchg scas xor mov cmc loopne imul inc movsb repnz mov pop jp push in test test shlb add jg out sbb sub cmp cwtl jns pop popf pop xchg outsl repnz xor add push sbb lods xchg lret pop rcll roll and pushl add push lea add push add pop cvttps2pi int3 inc lret test xor cwtl xchg and and jecxz sti inc sbb loopne inc sub cwtl adc mov and in aam mov sbb sbb icebp and adc lods lods adc xor adc pop inc addb in das adc stc (bad) loopne or sbb (bad) into push add cwtl mov repnz mov pop pop adc sbb shlb dec popa mov mov lret pop jbe sbb popa pusha sub xchg test test ficom pushf fs insb scas fcoms cwtl iret out inc pusha and adc jno js and add jecxz imul repz loopne mov mov add pop or mov and arpl sbb in cmp adc js mov sub arpl or jb mov or xchg mov syscall sub (bad) scas nop xor push lret add add shlb fs loope mov inc (bad) sub repnz xor jno mov dec add jp xchg loope iret xchg pop mov inc ret or pop push daa in std (bad) pmaddwd adc (bad) or stc clc adc mov add mov adc adc stc sbb cltd push mov mov xor test add pop or xor (bad) mov sbb jl add or jl sub sbb jp pop inc push lret sarb xchg movsb je dec arpl test es and and xchg inc scas dec push rclb test add out push rcrl insl adc pop or pop movsb loopne ret testb pop hlt pop ja xchg lcall addl xchg xchg pop jo,pt das add sub lcall xor paddsw dec les fsubl pusha rdmsr push inc sub mov pop add or mov add jge sbb sub neg pop push dec jae add mov add test push and sbb out xchg add dec test jp pop imul mov dec nop nop add int3 in in jo or inc movsb pop inc inc adc inc xchg adc dec jg mov jl add call aam xor stos inc add dec test add clc repnz popa js inc xchg (bad) test ret pop xchg das add and lahf into xor pusha jns cmp inc add lods mov jmp stc cmp dec pop add and jle scas movsb add jg mov cmpb dec lds cmp icebp xor imul mov dec ret push shrb mov and add jge cmp add ret mov xchg push or xchg dec imul in stos dec call or insb stc pop sub add adc scas jl repnz popa clc xor and call cmp xchg cmpl cld nop nop mov push mulb addb jbe test xchg dec push int sub sbb (bad) mov call inc push pop adc (bad) jo push push pop mov inc mov sub andb jbe enter mov and les fistp dec inc lahf sbb dec push dec adc push mov dec mov xor jno daa cmc sbb aam xor xchg daa and dec and mov jno add in lahf movlhps inc or fcompl lock hlt pop stc mov lret stos mov pusha dec test inc bound dec jl (bad) lea mov xor xor dec mov push dec insb dec sbb inc jo nop (bad) or and mov sbb fistl inc test or fs mov inc xor addb lahf sbb or jge sbb pop sub ret jp out inc jmp cs hlt les sbb cwtl inc pusha je lods add mov mov mov das sbb orl push pop lock push mov aam into aam jl mov adc jp sub or pusha test or inc jno inc movsb mov and std loop pslld adc outsl leave or imul stc cmp mov adc popa loopne das mov rorb cltd loope dec repnz into sbb in into xchg mov (bad) jo imul adc jle arpl push add gs mov leave push jne add xor ret hlt xchg aas push lods nop shl nop inc cltd in or movsl lods inc add lahf sbb pop add fadds int3 pop lods ret test add pop insb or cli faddl subb add (bad) (bad) daa pusha nop dec aaa je test call push (bad) and sbb mov sub leave scas fisubrl add add scas clc sbb jns push ficomp xchg mov test mov fs mov dec mov popa movsl call int arpl subl add add scas adc sub (bad) or dec mov cmpsb jno rolb cli and xchg rcrb lcall inc or pop push lock add or add sbb xchg mov cmp iret lock xor or jp int3 push out dec cmp add jl rcl inc repnz (bad) movsb sub mov (bad) mov sub enter xchg sarb bswap pop inc adc stc cmp mov shlb shlb popf shlb add loope test jp add pop pop lret ror scas cmp mov cmpsl adc push popf adc xchg call cmpsl dec bnd mov xor in lds adc cmpsb movsb jp (bad) cwtl inc int xchg das mov arpl lret add in pop cwtl add dec inc add jle rcrb jo sub sub mov in jo mov mov mov cmp call test pop pusha lret mov pop loope or push aad les mov sbb bound dec fs inc and and loop pop xadd and loopne lods xor sbb lahf jnp dec jb xor mov add jns mov lea jb cmpsb mov add mov cwtl mov pop dec or or add insb nop jb sub add ret (bad) fidivr inc sbb cwtl in mov lret pop fcmovu and pop pushf adc xlat mov xor lds mov outsl and cmp repnz pop cli hlt mov cmp arpl insb dec lret (bad) sar or jns or and dec push jl pop aas daa or sbb jl add inc inc dec mov orl clc pop movsl leave adc in and push stos xchg sub in xor int3 js lahf lret pusha adc or xchg jns sub xor insb adc add dec (bad) scas pop adc nop jl das push daa push inc enter and jns add aad sbbl inc pop fisttpll fbld sarb add pop inc ja popa lock iret arpl pop and lea inc jl rcl mov push scas rorl sub aas mov cs add dec dec dec mov sbb xchg mov add xchg call lret into mov mov or movsb (bad) out mov shlb adc and mov pop adc xchg insb add cmp push test adc mov test or mov cmpl (bad) fdivrl int3 sbb lods mov jbe rcr jno inc imul push pop sub or mov stc cld add repnz jge dec pop (bad) enter dec sbb xor cmp pop dec subb sarb inc bound je (bad) mov sbb jns add mov adc xchg inc adc push jno xchg adc and adc fwait test add mov cld inc or loopne mov dec jecxz dec push xchg hlt pop pushf adc inc adc cld sub ror add mov movl test add stc mov dec add push insl adc pop mov pusha sub das leave inc in or and or stos sbbl es (bad) cwtl cmp jns ljmp stc into inc pop mov push mov pop add adc xchg xchg cmc cltd mov repz xor mov hlt xor aas icebp pop je imul nop (bad) cld je icebp pop stc jle cmp or xor adc mov or (bad) cmp push (bad) das arpl mov aaa cld inc nop jmp in mov or out test test sbbl lret mov mull adc pop or xchg (bad) cwtl ljmp dec daa xorl mov pop add inc xor lret pop and fsubs fwait js repnz scas scas je mov push push xor and leave jne fs (bad) jmp jg popa fstpl push stos sub cmpl (bad) andb xorb aam roll out jne inc dec in psllq push dec sbb cmpsb or iret das jo add (bad) movsl push mov insb ds pop sub xchg hlt or pop aaa scas loopne xor jge cwtl inc inc mov and cltd repz fisttpl and mov mov add (bad) in cwtl loopne dec pop and mov mov maxps and mov or add adc addr16 dec (bad) dec hlt dec test jno adc dec mov or stc aam sub mov add or cmpsb xchg push arpl enter clc dec cmc cld add jbe sbb xchg jle add test aam (bad) leave or call mov mov sbb jae sbb push mov push jne dec add pop add and in add xor hlt jp nop push mov inc mov addr16 sub hlt sub adc out pushf sbb or cmpsl fisubrl add push adc mov nop pushf mov (bad) mov popa cld pop add jbe inc or shlb xchg xor cmp pop (bad) sti les and jp lea xchg in mov pop xchg mov lock ret sub js push ret jns lock fsubrp test insl (bad) mov cwtl movb andl pop and ja shll pop cwtl cs or movsl jg add cmpsb ret cwtl (bad) outsb push add dec push mov add xlat in les rcll xchg mov mov push loope cs fcomps mov mov dec xchg mov sub out (bad) out and cmp mov sbb add and dec in push je jl lcall push rcrb andb adc dec out clc in pop cmpsb sbb xor jl insl dec mov mov ds loop fdivr bound (bad) in jl mov dec pop (bad) xor jo insl popa push add dec (bad) rcrb lcall and xor adc or sbb inc mov and in sbb inc and jbe mov mov or mov dec mul adc jnp movsb push cwtl mov lahf mov outsb pop stc sub push iret adc pop mov sti dec js movsb pop orb jbe mov xchg sbb xchg test pushf sahf in out xchg xor (bad) (bad) or lock or add lods pop adcl add mov lods pusha xor or (bad) xchg xor dec sub add xchg aam mov push std and add aas rcr mov fistp paddb popa test test pop xor or int sub mov test cli dec (bad) mov repz aaa gs inc jnp sbb sub add pop inc (bad) mov add sub mov sbb xor push xchg test lods add push sbb shl js sbb fwait aaa add inc add lcall pop cmp in orl mov mov jns dec cmpsl enter push lods pushf add loopne les xlat loopne or in sbb jb lods jae mov cld ja stos lock mov loope xlat aam push (bad) (bad) icebp rcr xchg rcrb push cli and inc into out rol xchg idiv out imul (bad) mov or insl xchg or rcrb int imulb js xchg xor lods jge,pt sti mov sbb lods mov lods push push mov lock je adc add xchg pop mov je stc or add imul popf inc add int3 scas pop xor les out lock pop sbb ret and mov das insl gs jle and lods mov hlt (bad) push xor xchg mov pop sub ljmp xchg decl sub and mov xor lar push mov lcall xor (bad) push shlb dec or xor dec and mov repnz or inc xor mov ret jo pop xlat rclb lds pushf add jl fsubrl ljmp mov or cmp pop rolb out call lahf pop xchg or fsts add mov mov and imul sbb mov loope,pn pusha inc sub sahf test xchg in scas repnz adc inc add call (bad) mov sub push sub in xor pop popf js rcrb mov and add push jno cmp mov mov out aad push enter aam or mov or adc fmul dec inc mov pusha sbb fwait pop daa dec imul (bad) mov pop stos mov aam xor pusha aaa sbbl loopne mov sub jne fld mov test inc xor sbbl iret cltd push add fcomip pusha xlat inc or int cmpsb xor adc leave mov and outsb leave add orl mov les sub or push repnz fadd sbb push dec mov out mov insb arpl jecxz mov fs icebp (bad) gs push popl and and or push add inc or pop jne repnz je xor incl mov shrb std rcrl adc into loopne mov cmpsl stos sub dec clc lock insb lods push inc mov adc inc or and or or or sbb xchg aam cmp pop and addl and mov test test add movsb pop pop nop xchg push lret jnp adc outsb hlt pushf add mov movsb sahf lock fld sub rolb push in sti and mov adc pusha jo fisubrl fistpl push mov or nop aam mov ljmp lods in mov push pop lcall pop adc adc movsl mov adc sti cmp mov push loopne outsl clc fidiv mov or xchg cmp test adc xchg cltd pop jbe pop and cmp jo loope mov movq adc in mov lea orl shrb mov dec insl add cltd jo hlt xchg sbb test popa out and push add jns,pt sub mov outsl add push out lahf or in icebp or ret or push std sub mov mov sub cmpsb add or push and push scas push out nop inc mov daa or jno mov call add ja or call ljmp dec clc adc add sub (bad) cmp je pop xlat out sub and jne je insl jmp inc test sbb jbe daa mov inc shlb and iret inc adc loop or insb cli add test cmpsl nop mov dec js pop daa mov inc enter jo or adc arpl repnz inc add test daa push call mov jg das arpl fcoml es or pop dec mov push jae xor mov cmpsl cs lcall int3 ret cwtl adc push push push data16 mov fwait add nop dec sbb cltd cmp mov jecxz push je pop pop sub pop adc or add popf test add cmp aas scas and (bad) dec xchg adc jno cmp jbe add add and push ja xchg xchg addb push mov add (bad) cmp mov xor add pusha (bad) repnz aas xchg pop inc jg inc push sub inc push xor xor pop dec push jl adc mov aas fnstsw shlb pop orl out push dec imul cmp or leave out sbb mov jle inc into jl ds cli adc mov sub xor sub dec cmpsl loopne jns in xchg jo add push lods jns addl icebp rcrl add xchg jae fadds pop out add jb adc jmp or testl or dec jbe sub add jmp adc mov nop fisubr xor call dec enter stc xchg and fs inc fwait (bad) rcrl ret pop or test lds mov lods push push cltd imul add mov adc push push xchg adc xchg adc or pop mov enter push daa mov (bad) cmp sbb add lock add decl les scas add or sbb ret mov add mov jnp pop nop jae das icebp inc dec adc test mov fidivr stc add movsl dec sbb adc ret shll cli jl clc mov mov mov or push lret enter adc ja xchg xor adc popl lret movsb mov clc add test or inc dec insb (bad) lea jno pop movsb mov pusha jo lea ljmp hlt cwtl add dec or and les or xlat pop icebp xchg inc or dec sub pop xadd mov inc fsubs nop cmpsb lahf dec inc pop sub fist test andb das mov sub (bad) dec loopne xor rclb dec mov inc pop in pop out daa add sub or and sarl sti sub out add cmpsl adc arpl sub aam arpl dec cmp jecxz inc mov xchg das les sti inc nop add ds push subb dec je mov movb daa rclb add xorl clc pop add jnp pop mov sub inc cmp lret fistl mov jl jns inc jp or fcoml inc add scas int sub mov push push inc xor fs jle xorb mov push dec adc adc popa stos inc cltd (bad) arpl inc roll mov or push inc arpl imul mov or imul popf pcmpeqb inc ss push sub mov jns lods mov sbb adc mov pop xor mov xchg push xor dec repnz mov into gs sarb jae cmpsl and ljmp and cwtl dec or xor repz test mov cmc pop lods mov mov inc lods jno mov mov add xchg stc sub mov in mov sub add xchg add stc sub jne test cmpsb mov or add jp mov add enter sbb popa shl add cmpsl fcoml or pop xchg and leave ret xor mov sbb add add jns or pop cmpsb adc loope mov sub mov inc out fild inc mov pop xor mov inc or and mov add pop (bad) jno adc mov test test sub sbb sbb sub fistp stc pop inc add test dec sbb pop nop pusha pop mov ret dec xor lods xor rol sbb mov sub jae je cmc lret jns pop or sub push dec push enter loopne ss inc daa adc lock je push sub inc adcb rcr aaa enter lahf cmp mov and insl inc mov lcall call sbb loop subb rorb in lods les mov and adc loopne inc add fsubrl add pop mov aam rcll ret cmp mov or sub adc mov or or jb sub dec rol je jecxz sbb in adc dec mov rep sbb add stos push rorb test gs add ds add jle dec inc dec sub add outsb sbb inc pusha ljmp jns add adc out mov and cwtl and ja call lods ret jmp movsb mov pop mov and mov jae add scas mov xor mov add hlt pop shrl jns les das adc pushf inc mov push data16 int3 adc add add pop popf (bad) pusha loopne lret mov (bad) hlt add stos bswap xchg or mov jg in cmpsl add sbb and inc jge sbb stc jb,pn mov repnz cmp xor mov jp or xchg xor jbe or dec rclb es add andl push loopne mov inc pop in stc and fs fldcw xchg hlt cmp (bad) repnz scas inc mov sbb jae and clc add stc xchg shlb jo push leave fsubrs adc or or lods mov hlt ret dec or leave cwtl adc pop or test test pop adc movsb xchg sub andl icebp jmp pop add repz jns sub sub xchg and (bad) into je sub pop xchg loopne inc les lods jecxz mov popf inc xor sbbb frstor sbb adc cmp daa int3 inc cwtl incb cwtl and mov xchg xor mov movsb ret and negb ret lds mov ss mov out and dec or das les iret nop call (bad) insb stos subl push lcall pop mov dec int3 jno pop addr16 mov and sbb insb dec andb fldenv clc mov xchg inc push cmp xchg inc pop (bad) iret adc in jns lret and jmp popf call push inc sub xor lods mov hlt arpl fdivrs mul and add incb adc xor adc cmc jne int3 pop bound add fs fildll idiv mov and add sbb or xor dec pop ja pusha add xchg mov int3 in fcoms (bad) add jne jg sbb push je nop bound imul pop xchg jb push add cli loopne xchg aas cltd mov and inc mov push adc cwtl inc adc enter jmp xchg out int3 in mov inc ret jmp inc mov ljmp imul sub jne mov inc stos and mov add inc xlat jb,pn mov ja ljmp (bad) les inc cmp mov add xorl add cwtl dec add sarl add cli pop lods lock (bad) int enter loope das out mov add je pop loop aad and and xchg stos inc jo icebp add out or imul (bad) cmp mov xchg xchg loop mov (bad) out shr xor fbstp pop shlb lret pop fcoml and mov add (bad) xlat push jmp pop or xor cli sti cmpsl sbb xor xchg mov in push sub adc mov movsb call loop add inc in cmc push inc and sbb enter or in pop xchg lods es mov pop xchg ret dec add mov les test adc xor cmp rorb jp faddl cmpsb daa sbb aam dec lcall adc mov mov adc ljmp mov push sbb xchg imul add xchg jns icebp mov pop xchg cli fmull hlt mov dec frstor add fnstsw dec mov xor sub enter btc addr16 mov insb loope in arpl add movb je sbb loopne pop cmp add test pop mov (bad) mov aad xor adc pop mov jbe lahf cld cmp inc mov dec mov ljmp je add in icebp push mov push nop add lea (bad) sbb fidivr jmp pop fsubrs inc dec mov repnz hlt fs iret lock mov sub int3 and push mov cld or pop call pop popf jo adc cmp sti dec mov adc jle sbb adc push or data16 stc or cmc fisubl pop xchg ret dec int3 mov rcll fs pop test hlt enter enter sti inc add push lret inc in popa hlt hlt mov xchg je xchg out xchg or js mov loop cmp cmp adc and inc lods adc add pop fnstcw icebp fcompl lods add and add stc xor (bad) lds or movsl mov xchg mov cld xchg jmp pusha adc dec fwait lods add das popf out xchg leave push in in or dec ffree call inc mov sub call sahf bnd sti mov or push arpl inc pop loop shl test or sub aam repnz push mov jge ficom stos in pop enter fimul pop xchg inc push xchg jmp std pusha add insb inc pop and sub mov mov sbb popa mov repz movsb adc and xchg clc jl dec inc mov icebp add dec xchg add xor int3 in mov cmpsb add and mov dec stos add stc sti add jge sbb mov int3 adc or cwtl mov add mov xor or sbb test mov inc pop lret call ja fildl nop xchg movsl es arpl mov pop jmp in repz pop inc shrb iret in scas mov xchg insb and or addl xchg add inc scas adc pop cmp push add rolb mov pop jnp mov pop ret mov (bad) pop sbb and mov je addb adc in or dec faddl xchg cld hlt add dec jb fiadd xchg popf jmp lods lea adc movl arpl test in pop loopne lods (bad) out or add std ja ret gs inc xchg mov cld and pop sbb xor enter es sti int3 cmp inc sbb dec sub dec nop fisttpl xchg leave test and xor mov or adc clc shr fs dec stos add lods add mov jmp imul dec inc add rclb xor pusha (bad) je add push pusha sahf dec xor push mov cli xor scas cmp pop pop mov fisubr cld dec push loopne cmpsb mov mov inc push out pop or add int out test push lods mov mov xchg outsl stos add fsubs arpl or js das push xchg add clc test loopne stc lock add decl aam cmp fcoml cmp bound data16 roll and pop test dec add jno cmp adcb int3 or mov pop repnz xchg dec jg,pt sbb jae out adc jge mov mov hlt scas insb add (bad) pop mov addl lret movsb cmpsb xor arpl (bad) faddl scas cli sbb hlt jl das and pushf popa sub je inc xor inc inc pop xchg nop xchg imul ret and mov cli cmpsb in add into daa fwait rcll aas roll jbe xchg ret orl add jo aam repnz shlb test js mov iret pop dec add shl xor imul mov rolb pop add scas inc adc mov call (bad) gs icebp inc and fldt aam ja lret out add cmp ror pushf add movsb pusha mov sub xor aam xor dec dec ret add jae sarb mov scas mov add pusha dec jnp sbb popa (bad) lods dec add or or (bad) or enter sub mov (bad) (bad) push inc inc xor sbb mov sbb das add jne sbb out popl mov dec cli out push push ljmp add test or mov rclb mov fs lods adc inc fs xchg add lods or inc movsb lds pop pop fdivrs mov xor daa sar stc orb inc loope xchg loop lret push mov rolb adc es fbld inc mov and jg sbb sti add inc xor insb sbb js dec dec add mov mov mov sub les aam out or test test aas fcompl mov or or cmpsl popa movsl mov mov inc inc insl imul mov xchg ljmp push cmp lods mov lods or sub jecxz sub cmp insb and mov xor ja push shrb mov xchg orb fcompl inc xchg jo pushf test test rolb rorb adcl jbe xor xor push daa pop aam mov add add das add out or cmp cmp inc aaa add arpl adc mov pop add daa loop inc les sbb sub sti pop adc fldl and fmuls (bad) je jne push (bad) cmpsl sbb and addr16 dec jg xchg add call shlb jle andl clc push (bad) xor sub pop xorl pop ds or sarb or mov and ds leave sahf pop and and rcl movsb cmpsb add dec pop push add aam mov lods add push sbb in and sub ficoml xchg adc incl pop cmp call (bad) jmp fs loope inc daa add xchg test aam add sbbl cmp ret bound je push add outsb pop dec sbb lea push sub stos xchg sbb add push rol add das mov aas (bad) test xor sub add dec jae lods adc mov add inc jge clc inc dec and add int add add nop stos or add fimul pop pop add sbbb (bad) push add jne call xor nop cmp xlat je push push xchg enter mov dec call enter add cltd stos bound xchg rcrl push pop sbb sbbl push dec ret cmp push orb mov imulb jle icebp leave test rcpps push int cmp fisttpll adc push sub lahf leave xchg add icebp or add sub inc js cmovs cmp inc enter (bad) fcompl leave inc xchg (bad) adc mov sarb subb add dec sub adc jmp cwtl dec inc daa cmc xchg add inc dec fs repnz cld push push rcl add push or sbb jg test int leave pop add int3 in add rolb pop cmp ja mov outsb nop add push xabort movl add in pop jg jo and pop cmpsl aaa addl inc lea inc mov inc das and mov dec fcompl mov add xchg add adc dec int3 loop sub sub and (bad) add xor inc movsl jo dec jg add orl outsb push lahf (bad) push sbb add sbb bnd ds lahf (bad) pop and faddl and jnp and push push stc hlt pop push cmc sbb clc test iret das popa sub mov gs push or mov xchg xor aad loopne or bnd or insb das inc (bad) mov cmp je orb test pushf iret and add mov adc cli test fisub lods lcall loope push decl sub adc int3 push dec mov (bad) pop add scas mov daa sahf mov je cmp imul jbe add pop decl add jno test popf mov int3 icebp lret enter test cmp popa add add add jp cmp add jb fistpll sbb mov xor cmpsb mov cmp pop add shrb or addl xor rclb xorb cmc (bad) xchg je fwait jge push or add js sub add je leave add push cmpb insb test js xor mov test push jg insb out iret jne pop add add outsl mov pop and cmpsl andl aaa xor movsb mov cwtl movsb (bad) loopne adc push test xorb or cltd mov add test jae shrb dec xor add and add clc test lahf cmpb sbb jg fs sub mov test rorl xchg push das jno movsl or testb (bad) scas lahf icebp xchg sbb push sub pusha mov pop fsubs inc and push pop xlat (bad) push add inc int jns popa pop push dec add mov jb or ret sub loope in sbb cmpsb dec flds (bad) aas iret jno xchg add js orl push add push inc jl jae add adc lock aaa mov js cld ret or lret dec cmp mov movsb inc ja adcl add xlat in lds or dec add fcmove sbb xorl fdivrs xor ljmp and pop or or push test sub les xor xor arpl fadds scas xchg jne icebp xor push add setbe or inc xlat dec test push cmpsb or pop fwait fs pushf sub (bad) test cwtl lods test sub cmc sbb push add jle pop insb and icebp (bad) (bad) xor movsb mov mov lock andb out bound test cltd dec cmp (bad) out int3 xchg sahf pop dec leave or fnstcw fsubl cmp add rcrb cmpsl iret sub jno jg test xor rclb movsb mov or out lret in sbb adc pushf dec pop mov mov push pop test cmpsl les cvttps2pi adc mov or scas add sar xchg mov fcomi imul xor mov pop push sub and inc or push jo lret je push outsl push sub dec sbb icebp jb jbe les xchg jg cltd pop pop fs lahf leave or jmp sbb arpl inc fstps popf nop pop lcall cwtl shll and notl cmp rcrb into push xlat les adc ja sub jbe lahf enter fistp popa mov out addl les or xor ret mov fsubrs jmp adc loope xor mov cli jno add add cld dec jb or repnz js jg and add nop aam and sub (bad) leave jp cmc pop cmp js push push fldcw mov jns mov movd xlat rolb icebp (bad) jl out add lahf stc xor testl add hlt inc xlat fidivl andb int3 dec lcall sbbl rorb xchg bound sbb add les dec push ja sbb mov add sub xchg mov cmpl cltd (bad) leave pop adcl popa (bad) xor cld sti test inc jno adc cltd or sbb imul add ret negb shrb inc movsb lsl call sub clc rolb xchg andl adc out and test fcmovnb outsb pop nop outsb and mov sbb imulb call adcb and popf add loop dec jmp in add xor int3 scas add add je je js cli sub jmp jl or jmp add add xor insb jns repnz adcb pop call stos sbb sbb imul sub shrb in inc xor loope addb cmp push mov inc cmpl or xchg sbb inc inc jg push push sbb sub sbb mov add jb jne pop xorb shld test or cwtl jg js inc call and adc stc push out and nop outsb mov xchg nop arpl (bad) negb ljmp mov int3 dec out enter add in insl add pop pusha hlt push out incl cs negb je dec fwait imul imul (bad) lods (bad) addb push ret sub test cwtl mov in dec fistpll pushf jne mov (bad) sbb dec xchg mov xchg insb stc inc xchg popf jno and (bad) mov inc mov cmp mov movsb adc adc sub push pop mov fs stos rol push scas lock int3 leave jl or sbb (bad) push inc mov loopne adc sbbb pop fimull inc jg stc lahf or (bad) pop add mov add cmp jmp cmpsb dec andl test push (bad) jmp sarb insb add addl jo xor aam pop lret nop mov out cs int3 (bad) pop std movsl mov push push and jns in inc mov je dec cmp ucomiss or mov jle xchg out js lret add outsb or dec lahf int3 dec lock dec addr16 mov stos aam pop xchg sub enter (bad) ja rorb es mov push push insb add xor js sbb or rclb and out add xchg das pop pop jo outsl xor je pop adc std xor repz daa fs ja add adc push data16 cmp cltd or adc movsb ret or adc cmc icebp aam test mov or dec pop jb mov add aam aad mov or push cmpsb or (bad) bound add pop xchg dec jle mov rclb add (bad) pop into subb lahf das rclb sub add lock sti iret inc mov and cltd in incb mov push pop add adc pop test pop cmc xor add push mov push lsl lcall adc add roll or dec (bad) fnstsw add sub fsubl sbb add stos sti add xchg (bad) je (bad) or mull fwait ret jae add push sbb out or test inc or mov inc cli std add jp pop test sbb scas in pop dec jg pushf stc popf sti pop lret push cmp lea ljmp push dec enter add in fs sbb jb pop jp mov and rol and inc mov rolb jp mov xor inc pushl jnp push add and popf and add out add mov loop jnp xor movsl add les sbb fbld dec add les mov sub test sbb mov (bad) pop movsl call mov mov loop push sbb test enter jmpw icebp insb push mov cmp jnp mov test mov ret jg dec add sub test xor dec xlat pusha or rcl mov ret je sbb push mov and xchg add out lret lods in mov (bad) (bad) or pop or sub add xor add lcall push mov insb add dec shrb int3 pusha rcl jnp mov add ljmp push add or sub mov in jne sub sbb sub fldenv adc cs add push fs and xor lahf lods xchg fwait and inc lret dec push dec or pusha inc pop dec dec test jns pushf nop mov xchg popf js add or loop push cmp dec pushf sahf mov addl out dec js mov scas aas test or stos mov out push and pop jl mov xchg jg sub pop jge adc sub inc lret mov leave push push push and adc pop mov jge in mov inc cmp (bad) enter cmp out or pop xor cltd (bad) jp xchg push mov ja inc push add movsb fwait xor jl and add push rorb popf or xor push sub xchg push dec shll sub add jo js mov and call cwtl or out faddl imul xchg cli jmp add pop pop pushf popf clc movsl xchg (bad) daa mov jo fsub adc mov pop mov js push pop pop dec lcall adcl jl add xchg cmp dec jge inc out cmp lods or ficoml inc insl adcl or mov cmp xchg clc mov sbb add les add xor and repz and test out add sbb iret or insl dec push jmp sbb addr16 add mov sbb adc mov adc push pop mov add aaa push lret sbb fwait and xor inc push call pop mov inc and addl add add mov lret pop ret iret (bad) aaa outsb int3 dec cltd sub mov stos cmp xchg imul dec jl xor dec sub inc in jns (bad) call mov scas xor inc sbb clc push or fadds cmpsl add mov xor idivb or sub sub sarl xchg repnz add movsb dec inc pop xchg jp mov push or imul idivl out mov adcb inc sbb add inc or rcrb fmuls dec add or repnz add fldenvs add xor or sbb fs push cmpsb dec aam pop sbb xchg orb xor and or movsb sub jl mov shl movsb les jo inc add mov sbb fistpll js adc push xchg mov sbb push dec addb lahf cld rcll (bad) and sldt xchg cmpsl sub jmp add mov adc cmp push punpckhwd pop add fstpt inc cmp push push push pop and icebp or cmp sub or stos jbe ficoml arpl mov pushf dec adc movlps xchg call add pop (bad) jl sbb dec and mov popa insb jge cwtl enter adc sbbb outsb pop cmc out jne andb dec mov add stos ss sbb les aam dec cmp ss adc clc fidivrl and and and outsl add out xchg push cmpsb mov sub push push inc add push test insl in push and (bad) nop mov addl ffree cmpsl cmp inc add loope push and push mov and rcl xchg inc nop in mov cmp sub fnsave push push inc push outsb mov push adc pop or push rolb pop mov add lods sahf outsb inc add insl adc inc out iret add and mov pop cmp sbb jb lods jp js (bad) data16 sbb cmp sbb push loope popf insb adc sbb mov pushf fldl aad fldenv mov je push testl lods cmp movsl adc movsb les or push or add enter push lock (bad) jo mov or andb sbb xchg ficom add stos iret jmp ja sub adc or (bad) xor shll pop xchg fsubl dec test lcall fmull push lods xchg xor add add sahf push or enter sbb mov jg dec ljmp xorb xchg loopne sub dec in and add out (bad) mov lret add push mov cmpl enter lods adc movsb jnp mov mov sbb xchg in xor arpl dec sub adc orb out shll lock mov pop dec adc push mov mov inc xchg push sub notb add mov mov out sbb push lods xor (bad) repz mov cmp sub mov frstor loopne dec add and inc add add test fsubrl loope ds in fstps test (bad) hlt popa ja xor adc stc pop add push jl dec sarb sub adc mov imul mov add cmpl cmp xchg jbe add push pop popf mov dec fwait rcr ret jp outsb pop test les lock adc (bad) movsb popa in add lods mov sbb push cwtl test and xchg out sbb repnz sbbb fdivl jmp adc mull mov add test in push inc movsb dec enter test lds fstl or stos hlt (bad) fldenv in aad pop int3 add sbb (bad) test in and pushf or dec scas clc inc scas sub rol in jge push je add jnp jne add push cmp push stos mov subl mov sbb push sub push or leave push js mov adc andb stos lea push jne cmp sahf add (bad) dec xor ss add mov std rep add loop pop inc das pop out add arpl js les jl lods ss mov and data16 ret mov ret shlb dec clc call xchg pop les sbb ficoml bound out pop (bad) cwtl lods xor cmp fsubrs rorb xorl or push add call dec daa xor dec inc push sahf push add pop or fidivl aam mov sub es mov mov nop (bad) and bound xchg add sub out fs fcompl fldl les call dec call push or xor add mov mov (bad) mov mov jp aam popa fldt pushf pop dec adc jb cmp lcall hlt sub or addb and ret mov xchg mull clc (bad) out sub mov adcl les fs adc adc addr16 xorb add and and push iret les lret adc xchg (bad) lock or or les dec mov mov fistpll mov xchg jmp nop cmpsb (bad) pop jno loopne jmp sub es and mov or xchg mov add arpl push xchg cmp movb add clc mov iret cwtl and test imul pop mov add or mov flds movsb mov mov push subb addb dec push adc insl add push jl subl rolb pop sub push std mov clc mov jo fs and mov mov orb inc fsubrl fsubs sub sbbl adc in mov stos insb rolb cmp aaa inc test inc test js pop inc add mov or mov jbe add stos xchg out cltd push jl add mov andl insl movsb orb add cli stos or popw loope pushf pop cmp (bad) iret fadd pop adc inc add out (bad) pop push es sbb mov hlt jecxz mov inc or addr16 push imul ret (bad) fidivl adc add clc sbb add fistpl xor jnp loope mov dec dec push mov cmp addr16 rclb mulb (bad) xor mov inc shrb cmp inc push pop ss out sub pop mov jl and paddusw addr16 and push mov es je or pop xor outsb add mov in push stc and xchg sbb (bad) stos xchg adc repnz test cwtl push ds lock or dec fsubrl mov sub scas (bad) or push mov sub fwait adcb cli xor xchg ja adc xlat mov aam js and mov sub add scas cli test mov xor fildl fwait and adc jb pavgw jo clc lahf lds xchg xchg push mov es xchg out js (bad) add lret inc jmp jg rcr sub pop add movsb or push fs xor enter or jge daa cmp add pop add pop (bad) hlt inc xor ds popa add xor outsl add sub test sbb pushf push loope mov dec and pop sbb or mov xor or (bad) int xchg mov jge inc mov popa sub or ret sub jmp lock lahf mov pop mov shr jae jb lret cwtl inc mov cltd mov cmp mov leave fsubrs rcrl mov lods and xor imul dec and or enter addr16 xchg xchg push pop pusha pusha fild and sub dec ds fstps or hlt ss add aam cmp fcomi inc arpl pop int3 xchg fldt pop xor dec outsb movsb or out adc inc movsl int3 test call adcl push pop fdivrs fdivrs clc iret sub and sub movsb mov jl pusha xor mov inc pop mov fiaddl fwait cmc sub push push inc mov cmp cmpsb aad push push or cmp ljmp xchg xor push cmpb or cmc lret or jecxz sahf and ljmp dec repz mov loopne icebp popa lret rcl xchg das (bad) push push in or and sbb jl or fmuls inc add test pusha pop cld arpl mov push jo ds mov sbb repz or lods sbbl cmpsb js movsl and fcoml adc xchg add inc fmull add jo ficom shll je mov clc xor jnp inc sti jmp imul es and or clc test out add es or std sub inc pop ljmp push sarl cmp push xchg add sbb xor adc cli sbb insb subb das dec cmp or incb mov mov pusha sti pop jecxz cmp sub cmp sbb mov pop mov orb jg popf sbb pusha xchg out sub mov xor dec int3 xor or adc insb jg inc rcll iret mov push add addl ret pop xchg outsl push inc mov es cmp in es cmp pop cld dec (bad) out rcll dec xor pop push cmpsb clc or je pop sahf out js inc xor addb ss sbb (bad) lock fiadd clc std dec sbb in xor pop cwtl sbb sbb cmp adc dec add mov ret out stc xor test repnz stc xlat les pop or mov in mov add loop inc cmp ret in or add lock add call lds in in dec call add pop fs out repnz xor ds push push xor and mov xor adc pop xchg test jp mov sub outsb std fs mov scas lock sti cmp lods add dec xchg arpl adc js and jnp sub ds push mov or lods rolb inc xlat xlat pusha inc cwtl mov lea or add push enter push mov sbb les sti inc add jbe xchg inc add jb dec mov mov dec (bad) mov push mov mov gs fs adc jmp adc push test push add sti cmp xchg add adc pop cmp xor or rcrb ds jmp gs fildll into mov mov lods push mov ret pop mov movsl bound sub nop mov pushf jae pusha fiaddl xchg dec call add push pop in test sub xor xor add sub sbb hlt push test or adc xor dec ja insb lods pusha gs mov ljmp jecxz stos push push out mov pusha pop nop inc pusha call stos sub daa dec icebp arpl insl inc cwtl and cmc bound adc int and mov xor int3 cld sbb jbe shlb mov xchg add and xchg jecxz mov cli leave or loopne inc std and data16 loopne and negl nop xor or inc or pop shlb ret test arpl sbb push cmp ds xor ds es and sub call mov in int3 call or add add les sub aam xor xor pop insb fs rclb iret mov inc mov sub adc jecxz or (bad) add mov inc or or in shll pop mov lods add inc mov inc out push sub mov lock mov xor mov jecxz adc (bad) jnp,pt add (bad) and sbb call aas scas mov inc sbb cmp (bad) clc inc pushf test outsb mov pop mov mov dec mov sbb xor outsb dec or scas orl clc mov js pop test fnsave cli inc scas dec fistl andb and mov xor psrad lock mov add cmp inc mov das push into push cmp inc fdivrl mov or pusha mov xor xor cmpl nop push adc add fcoms sbb les add rclb mov push insl mov mov xchg loop xor into adc dec cmpsl adc fstpl or add jmp or imul fs xor test push xchg adc and dec aam clc push nop mov sub add faddp pop push add out pop xchg pop xchg push push or addl clc xor xor sbb push xor mov sti cmpsb test and sbb call fldt sbb inc or ljmp cmpsb rcl adc lods mov movsb cwtl add iret add lea pop mov or jmp cmp mov add cmp rolb cmp ja mov push cli lods adc push and add shrb dec sub aam popa xchg pusha cld in push cmpsb jmp fisttpl addb enter add arpl popa das pop fsts push jb cmpsl shrl xchg dec mov daa out insl mov into and mov and enter xor xchg test inc lock sub pop adc add add jbe call popa imul out dec dec pusha enter fiadd cmp vsqrtpd mov xor add pop nop push outsl sbb or sub jns lods out nop jno adc mov xlat shlb add push clc add sbb and pop mov mov repz inc or repz mov add das mov or sub and and test push push and stos lret fstps dec or and dec movsb jns inc es sub fs inc leave mov and ret mov and cmp sub jl xchg les mov out lods aam or fidivrl xorl push add mov loopne mov push outsl test std mov push mov mov xchg add sub in or mov pop es cmp pop int3 je mov inc repz xchg fsubrs push and cs sbb mov clc mov sahf call push mov lcall aam and cmp jae dec and mov nop cmc ds cmpsb test mov inc roll sbb movsl into and inc test mov imul adc xchg inc test xor cli aam adc ss mov orl orl and add addr16 xor mov add lods lea add sar dec inc adc jl or add and pop test dec (bad) arpl sbb dec push sbb mov dec push dec loopne popa add cmp or les mov dec adc movsb mov dec jge (bad) xor aas dec je add sbb pusha aad mov jne or cmp test jno mov int3 add dec das cmpsl push cmp add xchg add stos add inc or subl pop xchg nop fs push inc mov (bad) pop or or jnp inc mov jmp or inc or cltd out lock mov in aaa insb push call xchg mov or int3 and add mov push and negl sub fs fcomps je add push and aas jae add push addr16 push js rcrb jae cmp lret jnp (bad) dec add mov cld add orb cmpsb outsb pushf add lock dec das xor inc push fwait test push in ror xor les add cmp xor in mov push jp sub jecxz out xchg adc repz sahf push call mov dec add dec stos ret movsb inc and inc repnz (bad) sahf inc mov test clc mov mov xchg call loopne fsubrl in pop xchg mov hlt mov xchg pushf vorps mov loopne jmp jb jbe sbb mov dec or outsl call loope shrl adc inc push xor and pusha or arpl (bad) aaa jns xor push mov cmp movsb outsl and adc jl mov push add scas xchg loopne cld sbb fisubl xor mov xor mov mov cwtl xor mov jge repnz or and xor jle and aaa (bad) imulb inc pop adc cmp adc in sbb ret sbb mov arpl dec fnop add or dec stos out add jg lea leave inc mov icebp inc ror inc cmp movsb jb imul sub popa es imul mov push sub lds (bad) arpl repnz dec pusha cmp mov aaa mov add mov frstor daa je ret sbb pop xor mov dec xchg adc inc imul test jmp aad leave pushf clc mov pop push adc push enter and pusha lods and scas lret add shlb (bad) cwtl add clc out dec sub in jmp inc jns pop mov shrl push cmp ljmp jl pop loopne sub inc loopne mov xlat jno adc cmpsb out mov sarb dec sub add and pop stc add notl (bad) loop mov cltd add add and shll push and enter pop test add and (bad) out pushf jbe (bad) ror fs jo push or push cmp pusha adc jp dec mov bound fiaddl add test adc or jnp xor jge nop pop pop jns dec ja scas mov or mov mov add or cwtl sbb sub rcll loop and js mov (bad) or xchg mov nop or push mov aas sti std fildl cmp arpl clc das les cwtl js mov add add test shlb add sbb add mov sbb cwtl inc repz push repnz mov or stos mov push mov adc cmpsl xchg rorb rcll movsb fdivs fdiv lret jecxz pushw test sub dec (bad) pusha xor fsubrl inc test adc es add orb adc movsl fmull push sub test inc mov fstl test or sti add dec xchg cld mov insb roll sbb jle dec cmpl jl hlt dec dec mov cwtl adc jns jecxz fwait push add rcl cmp add xor mov and shlb ljmp pop mov and jmp xor sbb mov ja js adc push sbb rcrb std rcrw cmpsb imul pop fiadd out inc and cmp in sub jecxz cwtl dec push push cs or jo xchg mov or xchg or jecxz cmp push push cmp out jg jae xchg cmp inc ja mov pop add sbb xchg aad adc inc xor lret mov and mov les cwtl pop sbb push js lods daa dec insb test dec or sub mulb adc adc ja mov in mov or into roll jge jo out (bad) xor inc adc push in pop dec or inc hlt gs clc testb pop es push fs fstl inc xor and loope hlt mov das call and dec cmp js lock cmp adc mov or inc pop cwtl and xchg or addr16 into nop mov push mov mov sub dec adc fcoms sub xlat adc roll and xor inc inc push inc jo pop and in test aaa and xchg and inc mov sbb cmp and cmc inc movsb push add insl push lahf dec outsl xor mov push or adc sbb add ficom insb cmp fwait in out fsubs adc outsb mov mov jne mov cmp xlat pop lcall shlb sbb imul xchg pushw nop nop hlt aas (bad) sbb or mov and fstpt dec out nop cli add push fwait inc sub add (bad) push pusha nop dec scas jnp add fistl mov out mov cmp lahf arpl jmp cmpsb dec dec mov (bad) pop lret sub push gs rol addl repnz js push data16 mov sbb jmp dec insb or mov das fdivl and inc call pop push (bad) dec pop outsb adc push (bad) fcom sar jbe int jb jne out cs pop push adc movsb cmp and add xlat inc (bad) clc in shl pop mov ss jns iret inc inc wrmsr lods jl mov aas jle add ret bound mov inc cmp mov sbb xor mov xchg enter (bad) mov adc and or and das sbbl call or mov mov xor cmp out xlat fisubl dec mov mov mov add mov into jb sub inc test pop push test mov test mov dec test sub in mov inc adc mov xor pop add push cmp sub inc pushf in cmpsl sub pop (bad) hlt mov sub mov mov mov movsb cld rolb out sete xor js inc stc xchg add cmp pusha (bad) mov mov pop pop add sub xchg push mov add push or and cwtl pop ss pop loop add arpl lea mov shlb (bad) or cltd test pop sub test insl (bad) (bad) enter sbbb sbb or xchg mov (bad) dec sbb enter dec or pop mov inc pushl xor pop pop mov mov dec outsl adc mov (bad) add xchg movsl sub inc outsl or sub js cli into add sub pop add outsb stc loop mov mov sarb cmpsb dec cmpl push mov push cmp jmp int3 xchg shlb jbe jecxz jp xor sub stos jg sub sbb mov pop add test sbb adc ret or nop xbegin inc or xchg pop add stos cvttps2pi (bad) cld mov sarl push cmovnp adc and stos sub add add (bad) cwtl sbb jnp dec xor ret popa mov loopne jnp in mov xchg cltd lock dec lock add push push add jmp or rolb out insl sti enter fcmovnbe cmp jecxz jnp lcall bound jp xchg sub xchg mov cmp shlb call xor rorl xchg icebp push or or and out sbb bound rol sbb pop fimull dec mov dec les bound and and (bad) mov add mov xchg mov pop add push mov dec and ret inc dec xchg mov movsb cmp add mov cld daa insl cld and add rol xor lock xchg les cltd xor fdivrl (bad) mov movsb add cmc lea add lock mov cmp fs mov mulb movaps (bad) fs xor and (bad) xor lods sbb loopne cwtl andb addr16 or add aaa fwait testb or add cwtl xchg or pop mov xchg ss sub dec xchg sarb cmp popa cmp clc sub mov les cli into (bad) lret shr xorl (bad) dec or mov sub in pop or cmp xchg xchg jecxz aaa pop xor icebp jmp xorb mov test loop mov test lret dec cli pop aam pop xor lods cmp fwait orb cmp test add jae mov repz sbb inc jge inc add fs out pop sbb rcr dec test push addl mov daa jnp daa jo ds jno idivb jl adc test mov sub add (bad) sbb std lock xchg mov test sarb nop jns pop inc sub or test and or xor xor sub or icebp mov test add push pop in xchg leave (bad) push adc orl pop popf cld loopne xchg inc aad xor push mov or or test clc cs stos in or imul inc in loopne adc or pop sub adc jo jns pop dec nop cmp sahf push pop sti movsb adc jecxz pushf pop add and ds inc mov jne js add out pushf and fsubrs add call xor jb or add or jl dec nop pushf sub aaa jns sub jo mov xor xor push ja add pop pop add and insb sub add data16 jb and add jnp xchg nop adc cld push sub cmpsb cld add loop and loope nop bound xor pop xchg mov fcoml adc out ret adc call sarb (bad) mov mov add jns pusha repnz mov sbb inc xor sbb rcrl pop addb push sub dec pop push addb loope leave rclb push popa int3 movl fucomi add mov add dec sbb aad xchg xor jg fldt pop xchg js push pop idivl pushf not into inc dec jmp gs lret xchg sbb push inc and jg movsl lahf pusha call push inc cld add add imulb dec inc ror add popf pop jg dec mov andl and repnz clc pop xchg cmc ret xchg (bad) mov dec ds dec xor lods xor cwtl fdivrs (bad) hlt mov sbb lods push les orl xor push loope cmp cmp insb enter rolb mov test ds mov dec jge mov sahf daa push pop (bad) push inc in rclb jo dec shlb nop movsb clc cmpsb pushf pop jg cmp rclb gs test mov xchg insb add int3 pop das sub pop or add clc add cmp dec xchg xor add cld mov pusha and cs push pusha stos jae ja mov add mov push scas in inc cwtl and pop or (bad) jp test (bad) out pushf push xchg es jmp nop in and int3 adc inc xchg cmp (bad) cmp test fstpl and daa clc pop cwtl faddl xor mov iret adc lcall lret or call xchg iret movb hlt sti jno int3 lds mov sub pop adc pop mov andb pop push push dec js (bad) int3 push js daa lock pop rolb cs into dec cmp add test addr16 arpl push in std sub (bad) lahf xchg inc cmp andb adc jp cmp fs loopne idivl sahf call or test test lods inc jl and jmp or push stc xlat imul mov add add push roll cltd xor (bad) push insb enter cmpsl xchg test cmpsb in ss xor stos sbb daa or sub xor jg outsl subb or lds xchg sub inc lods (bad) mov push daa cmpsl mov in and pop inc pop mov push xchg repz push lret jl dec mov aad sbb push or add sbb or xor pop ja adc push dec pop push (bad) das add movsb and pushf movsb mov sbb lods je push pusha lret jl jle and cmpsb cltd les lea push pop add add rcrb rorb inc outsb nop jae sti add pop imul lcall sub mov jp dec push andb aas aaa cmc adc or movsb das clc xchg add lret iret pusha rcrl sub into and dec sub es pop stc and cwtl inc mov inc pop dec jg add inc dec cmpsl nop mov lret cwtl rorl jl push test cli or xorb lret xor add push dec cs xchg cli jb xchg sub dec cmp or jg dec pop test cmp inc push and je mov rclb sub xor cmp (bad) call mov mov dec test enter mov adc jns rcll add (bad) int3 (bad) xor jns pusha jae or push add xor pop push push add or push dec lret js ja jle dec icebp test inc cwtl (bad) sbb xor xor test hlt out xor mov add icebp and inc mov or mov or and push aad adc inc lock stc and push add xor (bad) out or add flds xchg sbb mov sub dec push mov lds push jle dec cmp call push xorb adc pop push cwtl xchg jmp test add xor push xchg jb insb aam insb mov cwtl push adc shl int xor pop call jl pop inc js add dec negb and dec test pop adc (bad) leave int3 movsb popf pusha dec adc test or call sbb adc inc ds fldl xor pop pop pusha (bad) lret sub and dec push push dec mov lds adc mov test hlt ret cs movsb mov clc inc ljmp psubw lret or lods loopne xchg xor push push mov popa ljmp loope out imul pop xchg lods or push or stos xor add mov dec jb ret inc orl and sbb mov (bad) ljmp lahf je mov in mov clc movsb inc les xor lahf leave push ret sbb fdivs sbb sub sub test jns and scas inc ljmp add mov and fdivrs mov xchg test inc cmp add mov pusha stos or repz xchg add xor jl push or es test pop xor pop mov mov nop js jl mov cs lret minps jge pop sar shrb push mov dec mov sbb idivb insl sub lods les dec pop inc loopne jne fcoms sub adc jb adc and pop xchg int3 sahf rolb jo dec add sbb (bad) mov test mov or pusha inc mov lret clc mov and dec subl (bad) pop (bad) mov mov jno or push push push mov mov je test mov or movb sub ljmp xor popf je sbb loopne xrelease (bad) or inc ds inc adc scas add enter xchg sbb rdtsc dec aas add mov add add aad pop inc scas and inc stc out repnz add loop lcall jbe test jno ss scas clc push xchg add test add pop scas adc sahf (bad) and xor orb push mov insl mov (bad) in pop add cmp ret or push test mov or jne jmpw aaa jno mov adc sub xor add sar jge sbb ret aam clc popf sub sbb daa push loopne push add jmp (bad) icebp jl add in jl nop hlt mov push xor insl mov mov in mov repnz xor insb je pop sub rcrb cli dec das popf (bad) pop xor add sub xlat test mov adc xor (bad) rcrl or mov andb sub sarl pop or mov out fwait or sbb pop imul sub xchg hlt add aam jb mov dec das xchg cmp sbb xor and mov dec dec inc push mov hlt mov lcall cmp sahf cmp push movsl mov push lds or aam sti es mov pop popf popf sbb sub xchg inc sbb cmpsb or movsb cmp aam mov cltd sub gs dec push pop push sbb push out popa ss pop xor or xor dec iret xor inc add in mov inc mov in or add es add add lock call sbb xchg scas inc test pop in cs out adcl repz mov pop fld cli mov aas (bad) or or gs sub aam jo clc adc add jne jp fcom or mov (bad) cmpsl test push sti dec xor adc mov and repz ljmp xchg adc lret pop sbb adc js sbbl add test jl rclb jmp push clc test test repnz clc push cs enter mov adc dec or push dec adc je or mov fucomi orb cli pop les cmpl add into push xor mov pop sub cltd lret cmpsl sub subl pop enter or dec imul nop or inc loop sbb pop ret lcall jecxz xor insb cmpsl ror xchg sub pop sbb push push idivl mov cmp aam or mov add push or sbb xchg lret mov imul (bad) repnz test (bad) xchg cmpsb add push cld pusha adc les pop cwtl jl mov add decl mov pusha inc adc or jle test pop dec orb mov in mov cmc adc imull push and mov adc dec mov xor inc cld jg mov push jo shlb loopne xchg sbb ss mov dec jmp pop stos test push or mov push call pushf jl jmp xchg cmpb inc cmpsl and pop xor dec mov pop movsb adc rcll pop sbb inc lret sub cmp scas pop lock pop jmp adc dec add clc or add add cmp lcallw hlt pop jge jae daa cld (bad) cmp and push movsb or insb mov jo int3 jge loopne test push xor xchg inc pop or jl mov jp mov xchg cmp pop dec cmp or inc sub push inc shll add inc jp mov or insb xchg adc xchg push push xor add jecxz add pusha xor sub sbb cmpsb lahf xor pop cmpsl push mov sbb mov into cmpsl fwait repnz cmpl cmp popa (bad) in sub jge adc push nop and pusha imul dec loopne mov gs mov out pop orb mov push ds mov popa and subb sti (bad) push sub jns xor loopne add sbb and sub sub (bad) int3 loopne inc mov xchg and insb xlat and les mov (bad) ss or orl call cmp mov mov ficomp test adc (bad) lods fmuls add fwait mov push or add cmp rcrb xor mov or lods mov (bad) mov pop dec mov in adc inc cmp and inc or add inc ds mov idivl into iret rolb sarb add mov inc add imul push fcomps and pop test push xchg adc ds cmp add rolb (bad) mov sbb sbb scas add or mov add loopne jnp subb clc out mov adc int lds test addl mov and add push inc sbb inc je out inc es addr16 pushf adc hlt xchg dec cmp add inc stc add jb inc andl sbb aam sbb inc je out push movsb adc cmp mov (bad) or movsb xchg push push push sbbb inc add sub ret mov dec mov dec mov add cs inc test adc push cmpsb lock adc (bad) sub jp mov dec ss cmp inc mov cld xlat mov lock mov fwait add aad pop popa test pop je mov push adc les push or scas fcomps mov (bad) mov add repz mov push je into es fwait push test cwtl and mov add arpl lcall enter xchg add or cld stc andb rclb jae adcb cli sub xchg addb sub clc les mov cld mov and xchg xchg loopne xchg and add mov cltd mov icebp sub sbb aam or sbb add inc adc lea add mov repz pusha outsl mov jae add pushf in jns cmp sub lahf test jle inc jle test mov sbb mov pop cmp push addb add mov mov cmc xlat fldl push loopne cld pop and into add mov rorb or push mov pop add rolb inc incl fwait jp push push test mov and clc ja adc insb xchg loope and ret test lods pusha stos leave lcall xchg ja jnp lahf ret insb xor leave movsl jbe orb and mov cmovne aam mov iret cmc mov in lret pop add bound push (bad) mov xlat inc icebp pop push xor lea out stos adc lods roll aas cmovae cli cmpsb mov fisub ror fcmove push in jmp test sbb (bad) mov enter lods mov xchg jg add push shrb push movsl lods add sub or and adc pop cmp insb mov mov mov int3 pop ret mov js fadds int mov mov loopne add out in xor push and inc and mov mov push push mov es enter sbb sub xor or xor pop adc pop add or adc mov sub mov pop lahf std xchg and ds or and cmc xchg xchg mov adc add add pop pop (bad) cmpps jg ret cltd mov test mov out or js,pt cmp inc mov sub xor adc bound hlt cmp or mov je add lahf xor mov mov scas jmp mov push cmp or in addb xchg scas dec sbb mov push test mov in sub add out dec pop lret mov sbbl int sub pop mov cmp clc repnz add arpl inc push sbb dec mov add mov xor cmp clc pop adc sbb (bad) fcom push adc (bad) sub sub add or aam sub push into mov ret lcall mov pop enter popf mov or cvtdq2ps mov sbb mov inc sub mov imul mov inc in adc lock movsb cmp inc cltd lods test push out cmpsl out push and push mov outsb pop jo insb sub ja add sbb and cmp sbb dec cmp or sub adcb inc adc cmp ret xor pop icebp dec movsb lret subl add add popa les fs cld inc jne jb sbb push sbb aam mov inc lret test sahf jnp mov insb mov push jle push adc cmp testb xchg or push push rcl xchg (bad) pop dec orb jns jmp mov add loope xlat ds roll nop push mov adc mov repnz adc out movsb mov inc adc out sbb cmpsb adc add sbb cmp cwtl jle movsb nop js and dec sbb ret es xor mov loope imul adc rclb es insb enter adc jns pop repz in std nop test pop mov (bad) fcmovnb popa jo inc add lods sub push outsl cmc push sbb loop fild adcl xchg dec push adc adcl inc in hlt (bad) xor adc cwtl sbb jmp add xchg push scas nop pop and dec inc bound push add movsl stc add or mov xchg push add je cwtl or push shl enter movl movsl in cwtl les cmc gs push add inc jmp cwtl or and add rorl into jno test shrb aad add adc or adc test xor pop lock das testl addr16 lret or lahf scas ljmp test adc sub fs jle mov inc (bad) xor xchg add data16 stc addl imul call cmp (bad) (bad) mov sub in dec sub aaa xorps idiv or jnp add xchg lret arpl sbb jle mov jge stos cli lods pop ds outsl sbb sbbl cwtl or repnz dec out cmp imul lock jo add aam cs loope push in (bad) hlt add add push push xchg mov push mov inc insb outsb or and pop mov es inc add into lock fsubs push sbb dec movsl sub xor call pop pop inc out iret dec add sahf push xchg add pop adc adc lods adc out sbb dec mov inc fadds adc mov mov push add pop loopne dec subl sbb pop push add pop push mov in test cld sub or cmp pop mov shl push mov sub out pop loope add jo xchg inc cs loopne mov popa out call add lods ja pop (bad) lock out repz les sbb and push repnz imul mov in push and ds mov inc sbb incb mov push addl rcl add mov outsl scas rolb sbb scas mov and sub mov add jo gs push pushfw xor (bad) cld add add inc sbbl outsb add push leave mov psubb sub lahf rorb sub pop popa sbbb loop add xchg arpl les cwtl inc mov out push jnp xchg inc in in dec and push leave lea out cmp rorl out mov or add lcall shlb loope inc rcrb push scas adc pop sbb scas and movsb inc fnstsw lods (bad) fwait add jne push inc cwtl call or dec jle test xchg and loopne push movsb inc out dec jmp inc js testb in in sbb push adc sarb inc xor pop sbb dec stos je sub dec mov (bad) sarb mov gs sub or add adc xor add std lret movsb js sbb inc push rorl mov adc lds jno repnz (bad) icebp jno shl mov push rcrl push stos adc adc mov mov dec mov dec in mov and jns cmp pop inc xor xchg popf ljmp inc int3 sbb cs xchg pop add xlat sub push nop cld and cmp flds mov in sbb add mov gs cltd jo pop adc cmp sub sbb sbb push stos adc pop push mov packuswb jl mov push inc mov or dec and test mov outsb or mov jge add mov cltd (bad) icebp xchg sbb or sbb fisubl sbb adcb jg int lods push imul sub sahf mov mov and mov pop or imul fadds push imul adc add xchg push add mov ficomp xchg push mov clc push std push and inc test test pop daa inc cmc sbb jae add sub lahf rcr sub cmp leave xchg mov outsl loope xor pop sbb rclb in lds mov add pusha or inc mov jo dec xor hlt andl sahf or shr xor sub fisttp cs pop jp int pusha rcll ss fild push test enter cld loopne into fs add pop movsb sub mov jl xor inc jnp mov jl aam in loopne ss cmp adc mov sbb and clc fsubrl sbb pushf jns dec das inc pushf xchg xlat xchg add inc in cmc sbb push mulb mov ret jo add loopne inc dec and xchg mov lret pop jp pusha dec out cmp add jo cwtl insb add popa push sbbb rcl jl dec mov push iret jl int popa faddl push xor scas adc add scas inc sbb (bad) add xor cwtl or pop popf in cld xor dec push adc fcomps fmul and pop sbb xchg cmp sbb and cmp dec jbe sbb pushf (bad) jae loopne fadds addb loop pop shrb and mov dec sbb in jns inc jl xor cmp xlat add and cmpsl jo out sbb sub stc add push subb out dec and (bad) mov mov mov shrb xchg xlat fs adc pushf stos clc and (bad) lock fisub cld adc icebp test inc xchg pop adc inc fcompl arpl xchg adc (bad) and adc insl or dec mov lea inc dec push pusha lock cmp sbb fdiv sbb push push dec xchg inc out mov aad push xor insb jns arpl popa repz cwtl shrb mov pop ficom and pop push sub pop inc xchg pshufw dec lea add and xchg cwtl ds or sbb sbb and xor mov test rclb in sub push add cmpsl outsb loop pop mov xchg jl fsubl xor sti jo in cmpsb hlt and mov xchg mov mov jno fiadd and inc fdivl pop push xchg hlt adc inc aas add outsb xor mov addr16 cmp mov jb dec dec pusha push lock add sbbl pusha push xor stc mov add xor call xor cmp testl test push mov pop add rcl js sbb push (bad) lds and sahf andl test pop and pusha mov sbb clc mov dec dec jl inc addb in mov mov jle pop fild (bad) add jmp test xor pusha sbb lock test or xchg or gs insl mov nop and mov cmp in pushf pusha inc ss fisubl mov ret xor lods andb adc mov sub addb jge mov inc sbb dec cld mov add mov pop add and roll jmp aam call push jmp addb insb popa enter inc sbb jno dec sbb (bad) loopne in iret stos xchg rcll fcomps sub ret push xchg mov shl and orb (bad) jbe out push push test adc push insb xor xchg mov mov push daa xor icebp pop pop mov data16 mov data16 sbb mov mov mov xchg jae mov pop test xor popf mov mov adc or gs mov mov sbb mov popa jecxz cmc inc add xchg xchg loopne push pop rorl push xchg pushf xorb cmp mov aas jno cs rorl ss ljmp xor addb std push push outsb mov nop add cmp movsb sub dec mov push inc sbb fdivl loope xorl or stc inc adc test hlt fnsave mov cwtl daa das adc sahf mov dec mov nop add bound pop leave mov cli inc adc jmp fistl add call lock rol sbb add nop adc dec push sbb aam jns daa cmp fmull pop mov sbb (bad) sbb jno addl in inc add or enter loop sysenter sub pushf fs pusha jg test inc jo popf out test rclb lods in popa sti pop loopne adc add (bad) into xchg sub add dec data16 add push mov xchg dec xor push sub lods cmp outsb cmp out lcallw sub insl push out mov enter lcall xchg mov sbb add push cmpsl imul jp xchg mov mov inc sub jns xchg enter adc mov je arpl or mov cmpsb adc (bad) jp mov and pop adc or add cmp mov aas pop mov sub add ror lahf psrlq jno xor add das int3 mov scas aam mov mov mov mov or push int3 ffreep jp lods xor subl dec mov aam push xchg shll add mov adc dec fs dec dec inc push push je in adc out shlb enter aam mov jge mov lret jmp popl or subl push pop or adc push inc int3 out mov mov mov (bad) lea pop fs mov jp sbb add flds mov add jns xchg test das xchg (bad) and iret dec inc leave jo add (bad) insb loope inc (bad) mov or into add dec pop adc mov ljmp test andl loope incl lods adc loope divl xor popa inc outsb aam sbb dec push shll cs xor cmp or mov (bad) dec (bad) lret dec jmp shlb jge pop mov inc add jb mov xor sbb lds sbb pusha push lock inc popf in adc dec lcall daa inc fwait (bad) and xor mov or push push pusha sub adc inc into lock pop dec jo inc mov cmp push inc lret xchg rolb test dec aam mov jns stc push jmp xchg dec rcr cmp or popa js enter rorl inc les or mov (bad) je push or and int xorl inc js xchg test sub lret dec and fsubrs mov repnz dec loope out sbb and aaa inc xchg push js add mov insb mov js dec dec clc sbb and adc jl les mov mov fnop add mov cld mov or and cmpb dec push dec xor and and fwait dec sbb dec jge lods push pop popf adc add add jns mov fdivl popa inc loopne inc pavgb lock pushf enter fcompl add mov les imul or dec cmpsl push add or aas jns jmp loopne pushl sub mov add push mov std push test nop inc cmp adc adc ja mov adc (bad) dec add outsl enter pop idivl mov mov inc xchg mov add cmpps or nop in cmp mov xor push jns and movsb psllq jge sbb lcall dec leave mov es cmp cmp cld ss cwtl inc xchg xor mov adc jmp movsl pusha insb dec jne les push mov xchg push leave stc adc inc push pop xchg nop test xchg shl mov in sub dec dec sub cmp add mov dec dec fmull cmp sub pop mov test xlat cwtl fildl in mov xchg popf rclb push sub xor xor insl in pop adc dec cwtl les es sbb ret movsb repnz mov or lods dec or cwtl and mov jns fldl adc push leave dec cmp inc jns add lret sahf fisttpl lea dec mov (bad) test pop sarb mov test inc pop test xchg lods loop fildl cmp fstpt mov pop lock jnp dec mov sbb movsb popa add inc pop jns rolb jbe push xlat jnp jae (bad) mov inc add aam (bad) pop stos mov enter movsb test sub jmp sub mov dec movsb and sbb std loop inc addr16 es cmpsb loop les or sbb inc jl adcb pop pop (bad) lahf mov lret mov adc dec movsb mov imul jae aam sbb cmp jns inc inc lcall nop add cmp cwtl mov mov adc (bad) adc push je mov adc sub dec push je push loopne mov sahf lret lock sub inc xchg sub inc les (bad) xor in nop lahf and call adc mov inc fisubl xchg inc aam bound push mov pop and test xchg dec xor js push xchg xchg cmp enter push dec enter fbld cmp cld add ret cld jae add push leave adc lcall fsubrs mov add test mov add or shlb add fnstenv pop sub cmp mov in stc add mov adc mov or decb adc inc fsincos sqrtps mov add or out andb jnp inc and push push and add pop frstor xchg add pop loope mov dec into add leave test jmp inc addb shrl inc push je and fs test mov test std push shl mov adc pop jne popa mov push mov mov inc inc pop orl cmpsb fcoml nop push (bad) (bad) and orb dec add rclb adc lcall and mov add dec cltd jl prefetch or andb dec cld lcall or loope dec cmp push stos mov dec adc addr16 xchg xchg xchg fdivrs test out ljmp rcrl ret insl xor sub (bad) iret ljmp (bad) popa xchg clc (bad) xor test jo inc sahf and mov fadds mov (bad) mov (bad) mov push and xchg cwtl add sub pop shll inc push int adc aam inc xchg adc and mov xor xor sub adc or test cmp mov cmp dec pusha adc pop jbe adc push (bad) pop add ror cwtl call xchg push mov or dec cmpsb or cld lock adc mov pusha loopnew in inc add cwtl fwait or lahf leave adc int3 inc mov inc sbb pushf adc mov roll mov iret jl jns push or ljmp cmpsl gs jae xor cltd popf add aas loopne popa daa loope inc or sbb and add stos add popa xor mov stc xchg (bad) mov push mov pop mov jns cmpsl mov daa push jb test inc aam xor or addr16 shr cmp xlat jns,pt into ds push pop je sub loop pusha jl idivb mov xor rolb loop call stc in sarb xor and and (bad) mov and stc pusha xchg cmc xor fstps std dec mov pop xor mov jo stos daa ss mov xlat xchg int adc sahf movsb int3 or imul clc cmp test ficom cmp (bad) cli mov push je mov fs add es aas pop aaa in adc push mov stos mov dec repnz shrl fwait bound jl jno xor loopne loopne pop jecxz imull and stos cmp (bad) jp adc shl push xor xchg adc pop shl inc movsb clc sbb inc xlat jno insb xor call add data16 shlb outsb xchg jnp mov cmp and and mov mov xor mov inc jle mov and jge cmp adcb cmp cltd ret jo inc repnz mov or roll sbb loope cmp adc les nop xchg pushf mov movsb pushf notb jno loop rcrb adc push int3 dec mov mov mov push les and cwtl pop pushf repz xor or ret arpl or cwtl pop jmp in sbb daa repz add iret sbb leave imul push nop sbb jle add cmp lret pop lds mov sbb lds into jmp data16 imul adc mov xor fwait cwtl sub pop cmp cs rorl movsb das and jmp push pop pop mov jecxz in js dec in in inc mov push push jae fs sbbl jmp pop cli dec fisttpl pop xor (bad) sbb shrb mov test test adc lock xlat mov les pushf dec repnz stc cmpl xchg (bad) xlat vmwrite fistp (bad) jbe cld and inc adc punpcklbw outsb aam pushf sbb xor stc or cwtl xchg fcoml cmpl jb rolb or pushf mov insb fstl enter and add add pop mov push cli (bad) cmp lea or sub push inc test cmpsl push les xor cmp imul sub fst sub movsl adc js pop push pop gs mov jecxz mov out mov xchg add (bad) (bad) add (bad) add scas cltd or pushf cmpsb dec icebp loope movups nop test jl inc sbb clc repnz inc js xchg xor jns scas sbb test incb mov jp push call jno aam add repnz test mov jg pop cmpsl in inc outsl int3 imul xchg xchg pop js inc ret mov add lock shll leave pop and xchg mov stos or sarl dec xor add leave (bad) jle inc mov sub jl dec or or sub jnp in push sub inc inc clc pop mov outsl std int xchg lock jne sbb pop xchg arpl hlt sbb mov mov call lcall inc add adc inc cli cmp imul pusha repz mov pop arpl repnz das or stc shrb stos push pop enter loope jmp andl popa dec cmp mov jo cltd shll insb leave inc jno mov test arpl adc js cld inc aas sbbb fimull enter mov in sti aam cmp cmp and outsl add cmpsl jmp iret cmp sub repnz mov and mov xchg cltd pushf push dec sti jb pmuludq jb pop leave repnz dec jecxz dec out mov stos push pop sub mov scas pushf enter aam inc sbbb inc les pusha pop sbb movsl dec addl add sahf jl or inc add je loopne add test call and movsl add mov push aam mov insb mov in dec and out pop clc inc pushf cmpsb xchg in mov dec enter hlt add clc pusha cld loopne je add das lods loope in mov or lds pop movsb out dec xor in stos in add andb add fdivr js out arpl add pop or stos xchg idivl (bad) loope push adc add mov inc leave (bad) cld mov mov mov in je push mov jnp sub shl mov jb nop test and (bad) xor jmp inc push lret and mov in pop mov cmp fdivs mov sub xor and leave inc pop and jns mov daa nop mov int3 mov cmpsl adc hlt ljmp loop inc movsl cltd or pop fistl lods mov and sbb cltd mov xchg pop xchg test mov mov or aaa mov sbb fildll aam aaa (bad) mov sbb fdivs pop rorb mov cld xor pop aam loope icebp cld dec mov call or sar aam sarb inc add out out inc stos popl and fstl adc sub jns mov xchg cmc pop and mov insl stos (bad) xchg jo insb popl rorb jns dec add call sub lock rcrl mov rep popa mov or negl mov adc sarl lahf (bad) xchg mov cmpsb jmp loop rorb dec and dec adc dec sub cmp sbb and add or jae cmp mov insb adc xor sbb cmp in cld iret pop xor or add hlt cmpb push sahf jns shll xorb xchg popa (bad) (bad) mov adc in ret mov cmpb mov cmpsl inc push mov lods push add sbb xor mov jnp or icebp xor pop insb add push sbb dec out sub nop mov dec cwtl ja pushf xchg movsb xchg jmp rolb push push das add fsubrs sbb hlt dec pop mov in mov add sbb inc in and dec fmuls cmp push fisttpll js add pop add xchg loope cmp aaa (bad) mov pop imul jb dec (bad) cmp outsb and test gs jns fsubs and cmp pop cmpsb jle icebp or inc push xor adc add nop fisubr xor jbe add jns pop ds xchg add push adc mov scas dec popa add add jns daa insl int3 repnz pushf aad mov enter xchg test popf das mov pop mov fnstenv inc andb dec nop inc es jne sbb add shll iret mov push imul icebp and push in add inc pop mov push andb popa out stc inc outsb pop dec add iret jae adcb cmp sbb mov mov pop mov int3 jmp cs mov adc pop mov orb shrb add push push in loopne xor add adc mov add mov push rorl sub sub add lahf movsl push in jecxz roll or sub push mov jno sar (bad) adc xchg mov jo xor (bad) repnz pop (bad) notl xchg add or and pop add or inc movntps lahf sarb add jge mov aas test leave mov sbb ljmp and mov sub add stos push mov adc mov sub inc (bad) mov xor in add mov lret cli dec lss andl push adc jp int3 or and push adc jl mov xchg sbb ret (bad) sub icebp std xor cmp pop xor dec and adc inc xchg movl cmp pusha push and inc sarl mov xchg sbb into add adc push test add or lret je mov push inc adc je and cmp push in xchg sbb out cs sbb adc dec mov ljmp sbb jge add cmpsl ljmp add syscall xchg jb xor add xor popa adcb clc adc sbb sbb testb stos add xor jecxz call out mov mov mov jle hlt and scas in add popa jg add jge mov pusha inc jne std lock addr16 adc movsb or add in fcom in orb jb (bad) mov rclb add dec push sbb xchg fisubr jmp (bad) xor mov cmpl imul mov sbb in ds adc or orl push jmp or jo in mov test jg push cli pop in insl or adc add or (bad) loopne (bad) add jmp test ds (bad) icebp pop and adc sub or xchg jo dec adc push inc pop or adc fidivr in inc fs (bad) ds sbb sub or xchg jmp cld lods and out push lret push pushf mov jl or or xchg dec add push jb out mov jno inc or dec scas push les or nop popa cli clc xchg in adc mov mov loope test (bad) cmp pop mov out or js sbb leave stos sub dec jmp sub jmp xchg xor xchg xchg mov xor mov add sbbb mov push sbb jbe mov adc pop jbe add mov jp push int jno add xor mov jmp enter sarb loopne sbb or add push lods out ljmp test jo in inc cmp cld inc jo (bad) xchg xor cmc xlat ror pop sub in les hlt out stc pop (bad) movsb mov or dec mulps xor je add test or dec or mov add fcmovb out and and dec jb xchg or xor cmp pop add mov inc (bad) paddq inc jno js stc and push punpckldq inc test fcmovb stos xorl cmc jb push push or test cld jg jl jl pop test in inc arpl mov add mov sahf cwtl inc or movsl adcb mov roll push jo or cld ret cmp cmp xchg (bad) pop (bad) sbb lock pop lret fiaddl add popf mov jge mov bound adc push add xor out sub xlat outsl cmp std fcoms mov lret dec mov rcrb jo pusha push nop push in nop sub mov dec add sahf rorl pop out rolb dec cmp dec lods sbb xlat mov add cmp and pop and pusha inc jo in mov iret enter test mov stos add insl jecxz jne fwait stos push js dec inc cmpb push std adc imul jo push rcrb xor loope loopne clc (bad) push insb fadd mov mov xlat out dec xchg lods aas mov test testl ret inc rcll inc jno stos mov xor rclb inc das cmp mov jp add je into js js mov rcrb and repnz loop add out loopne add test sbb mov ss cmp ret push adc or mov (bad) fmul push dec mov or adc movb jg dec xor daa cmp scas add adc xor inc cwtl rcll adc inc dec test xchg xor outsl sub push mov xor xchg adcl add or inc adc or and mov fcompl outsb pop adc testb sbb stos dec fdivs pop adc int3 inc in sbb add or insb inc jl shlb pop push add std push jmp (bad) fsubp push xchg mov scas sarl mov icebp cwtl (bad) test push out adc insb push jns decl jmp inc int push (bad) jl loope rcrb add (bad) dec hlt rcrl add sub pop fldenv shrb xchg dec adc sbb or mov dec fld1 negb and xor jns inc test adc add inc lea sub (bad) add dec mov pop stos and adc mov mov mov dec push cmp or sub (bad) adc mov (bad) xor lock pop and mov rolb nop pop ljmp enter or push mov adc and movsl pop fpatan fmulp xchg add cmp xchg push jmp rcrb fisub fnstcw enter shl enter cmp inc dec adc cwtl je add jle add adc inc je pop sub andl push and inc lret sarl mov cmp cmp insb add js push and inc and (bad) mov aad punpckhbw sbb jg sub addr16 push divl rol ja cmp lcall imul je push inc cmp jb cmpb fidivrl push adc std xor or xchg mov jbe pop xor out cmp mov sub adc iret cmp and jb mov and orb loope sbb adc es les (bad) int mov xchg xchg (bad) mov (bad) ljmp (bad) dec dec int3 cwtl xor test mov jmp (bad) adc jae inc fnstcw cmpsl xorl bound pop cwtl or mov ret cmp adc push icebp gs inc push lcall rclb add push into fidivl imul clc in cmp mov push pop shrb jae cmp lds dec aas in xor out push (bad) pop xor cmp and imul add jbe push inc (bad) adc adc cmc mov add divb sti dec mov mov add outsb clc jae xor je incl mov cld jbe into ja cmp adc inc outsl mov dec add mov adc movsb mov lods cs js push xor mov shl outsl call adc push dec lods mov icebp lock xor mov fsub (bad) jg in sbb xlat xchg push jecxz lea cli fsubs (bad) pop mov ljmp cmpsb jbe pop lret xlat orb and out add aas (bad) xor cmpsb mov inc adc rcrb pop cmp add int daa pusha xor push icebp insl mov dec pop dec fbstp lds jle ror test cmpsb mov lds repnz stos cwtl push sub rorb mov jno addl gs jmp mov or mov push test out pop call push cwtl (bad) or or stos in sbb mov adc in xchg push dec cltd sub pushf mov xchg lahf sbb jno (bad) push in mov dec xchg adc jl push pop adc rcr xchg call movsb or sti dec mov dec sub es sub push mov and addr16 add sub mov adc add lea add pop mov jecxz bound pusha or mov in sbb insb dec faddl mov clc add push jae inc push (bad) in popa pop test test add jl add jp or add jne hlt stos js xorb clc mov insb mov pushf cld call pop dec inc sub add stc ffreep pop sbbb aam movsl sbb (bad) add mov ja mov dec mov and and mov sbbl mov (bad) sahf mov jbe inc or inc jnp and pop adc xor imul aas mov (bad) gs js repz mov or sbb adc mov sbb inc es cmp mov jge rolb mov mov and pop add jbe fisubrl xchg (bad) fs push fdiv (bad) adc xor sti in xchg sbb push (bad) mov loope js out cmp jns pushf mov add sar inc sbb mov sahf cmp pop sbb int mov jo adc lods repnz leave in pushf addb xor add jnp (bad) and repz icebp ds std jle test add push imul push pop outsb jae push (bad) fmul adc clc adc add les mov or inc mov push cltd pop push lret orl jp jne sti fsubr jo push adc push dec stos int3 pusha add add and test sbb mov pop std add shr dec pop mov cmp dec lods fbstp xorl and mov cmp push and sbb loopne jge and arpl sub inc and sbb xchg pop in push cmp clc or sub mov sbb and adc in cmp clc sbb add fdivrl jecxz into movsl bound add in inc nop call add push dec cmp cwtl fdiv and or sub fidivl push jecxz xor popf sbb pop pop xor (bad) add pop flds (bad) dec das inc pop sbb pop pop push mov mov and test push push push dec faddl pushf pusha and negl sbb test cltd xchg loope hlt and mov push test cli mov mov push jae and sbb mov adc aad adc push jge mov sbb clc ds mov sbb ja adc (bad) (bad) xor dec inc jns cmp aam subl (bad) inc xor sub cmp out cltd hlt sbb sbb les inc (bad) aam fs loope add data16 adc inc inc inc inc (bad) push push xor wrmsr mov pop dec mov in xor mov roll mov aam cmp adc mov bound test ja and xor bnd addr16 mov pusha sbb repz mov mov push imul xor fmul fildll lcall sbb mov cs cmp pop shl mov jnp mov push bound nop adc loopne aam sbb or shlb add adc fdivl bound inc cmp out nop push dec lahf mov mov stos dec sbb ret ljmp enter and loop xor sub popa insl rolb aad jns add orl pop dec ds push or and push inc cld nop pop add xor flds out test js ffree or andnps jae andb lds or scas dec pop mov test inc out mov and or adc add sbb jae push push sbb stc xchg sbb jp xchg cmp (bad) jmp mov xchg or xor push xor adc cmp or sbb sbb adc divb xchg add ljmp mov adc inc jge add add xor icebp cmp mov insb mov icebp dec adc iret (bad) loopne xchg jo fs xor bound js jl push insb loop and clc call fsubl sbb scas in rorl mov test pop ss add rol lods dec xchg fsubp jbe add push cld fdivrl cmpsl jl xor pusha dec push fisttpll add fild dec lods or (bad) lret cld rcll or xchg or push or jo sub sarb outsb jb in test int3 jns add push inc pop mov mov test dec addb xor fidivl jecxz or push pop xchg cwtl hlt test pop adc jmp cld int3 mov jg cmpsb dec push xchg fwait dec and add addb inc and rcrl pop rcl sbb push out adc imul cmp idivl adc js cmp adc add pop idivb shrl sub jge mov adc cli sub test add sbb js sti mov inc mov mov orb in imul dec add mov add in mov jmp imul cmp vpcmpeqw sub mov ret mov (bad) pop jo lods dec je imulb push pop test adc rcpps or pop fildl push js (bad) jo daa adc arpl in sbb or mov xchg (bad) hlt enter jnp pop test cltd xchg jecxz dec and cmc add cs xchg jae in sbb xchg pop in insb jns or dec and cmp popf adc (bad) hlt insl push cld lods ret sbb sub cmp or (bad) push in repnz jne and in pop rcrl add mov nop adc jecxz pop (bad) jnp lods and sbb sbb cmp test pop dec cwtl mov cmp mov in cwtl adc jecxz push cmp adcb adc arpl (bad) fidiv mov loop add cltd and mov pusha movsl push mov push lock lock push in dec sarb fbstp sbb (bad) mov push xor cmp test cmp dec adc test jl sbb and cmp dec mov popf fist aas jge mov flds mov (bad) or push or cltd lock inc add jmp sbb mov push hlt or xchg into inc jo jmp call out or and leave in xor out jecxz cmpsb (bad) adc xorb cld aam scas adc inc sub aas int3 jecxz mov adc add xchg xchg push xlat mov test pop in call sbb and xor data16 dec xchg push sbb inc dec push insb pusha or mov mov (bad) sarb outsb cmp inc inc push mov jo and adc jge dec xchg cmp outsl sub hlt cmp fld mov push dec cmp push or cmp lret lcall lret xor lea jecxz push movaps js call cmpsb jns roll lods mov sbb (bad) mov and in nop arpl addr16 stc jae (bad) addb pop cli dec mov mov cmp push inc add nop xchg jecxz mov negb dec push js out add lds out jbe adc mov movsl nop js lea jo mov loop shll loope sub pop pop jo add jo jb push adc shrb lock mov or inc ror sbb (bad) jbe arpl (bad) jecxz lock add sbb call add jno adc cmp gs sbb enter cmp xor dec push pushf jecxz mov sbb dec orb test push or xchg sub sub imul jb fwait inc cld xchg adc xchg mov (bad) (bad) fadds fmull lds adc add popa mov stos clc push jg jl add cmpsl (bad) (bad) inc aam cli fbstp push xlat push mov aad sub jge in xchg pushf gs ds pop add hlt mov mov push pushf mov cwtl call les pop mov push (bad) pop xor (bad) xor mov sub xchg adcl fisttpl or and fs mov add gs cltd addl sbb icebp xchg inc ljmp and jo rolb es out mov dec js cmp xchg or cmpsl sbbl jp add add (bad) adc push mov and dec xchg imul add push ret jmp shrl or and ret sub cmp push sub dec int3 shl cmp inc xchg adc pop orb adc cwtl jo inc pusha or push push jecxz add leave sbb rcll sbb xor cmp adc cmp inc lahf mov mov add loope out nop push push imul push add mov cwtl je add addr16 (bad) push adc xchg or adc or subb in fwait scas dec sub bound lret mov icebp and jbe or pop push inc (bad) popf mov enter and mov mov xchg and adc flds arpl mov popf in sbb out mov cwtl xchg adc lret dec mov stos nop aam hlt (bad) add imul int inc inc or lds lds xor sub lock add mov push repz rolb aaa aas int sub mov outsl shlb push inc cwtl pop scas pop cmp inc punpcklwd popf sub mov dec push and push or push add repz out cmp lret sub mov xchg lds mov adc (bad) bound mov adc popa or andb stos sbb pop xor add cli xor loop cmpsb jns jo push rorb scas mov cmp inc adc jmp mov je pop (bad) lock add ret fs lock push xchg mov ja mov (bad) insb mov pushf inc xor sbbb sub jne mov (bad) sub push jo mov ret adc in jnp mov imul add scas lods stos add popf cltd lods add rorl ret aas xor popa subl jns lods xor cmp sarb cmp mov je dec pop cwtl lods adc adc sbb cmp in cs rcrb sbb and pusha pusha cltd sub add lods shl fs push pusha call xor rorb mov sbb mov loopne xlat aas cmp add mov imul jnp adc in shrl out imul lods pop aaa mov xor loope push cmp test stos inc and in or jle cmp sbb stc sti mov dec push lahf cmp rorb jmp xchg sub adc inc xorl and push add outsb fwait mov in (bad) mov int3 push stos outsl shlb movsb jb mov fildl jbe popa and (bad) cmp lock inc cmp enter adc cmpsb mov mov mov fdivs jo add dec in push rclb test dec js lds inc add hlt mov inc xor xor add sub pop je add or sbb mov bound push js push pop mov or jmp push inc test test jns shlb push push sbb cld rol jns xor scas sarb inc aaa push mov adc movsl pop push xor stos das (bad) mov sub pop inc insb pop lods les xor push jns jge into addb jnp jmp mov enter (bad) cs xor pushf xchg inc mov jge cmp mov add dec lahf jbe imul cmp push sbb ret insb mov and adc dec orb or push stos adc into add jecxz or sub jl add cmc add and lret dec or add test lret push bound sbb cmp add es cmp in scas inc xchg adc fistl push cmp xchg jp je hlt sub imulb loope push jecxz push xor mov fs mov push nop ret cmp xchg adc les call add sbb outsl jnp sbb lds pop adc sub inc xor push les or mov xchg pop mov add subl pop push pusha lods int pop sub bswap pop xchg js or pusha (bad) ljmp clc jecxz xchg cmp mov test je enter ds mov fimul ds or mov cltd jmp xor fistpl jae mov insb insl lods pop add jno cmp sub jecxz mov test lods jg lea pusha add pusha lahf leave jno xchg adc in aam push stos sbb aad fs pushf nop push (bad) lock imul push scas icebp outsl push sub scas fstpt pop sub js jne popa inc sbb clc inc movsb or mov (bad) rcrl sbb or nop clc add mov inc xorb out cmp or movsb push sbb in mov andl dec test ss sbb inc cmp mov pop outsl pop out leave pop test jo mov loopne (bad) jno or scas sub popl pusha add rclb call stos jbe cmp loopne (bad) pop push adc pop add popa ja (bad) xor push push mov lret push mov movsb jecxz dec int3 sbb icebp adc dec and mov aam cld dec add fisttp adc jns xor jl cld rorl sub mov or or jb xchg pop add dec mov (bad) cmp mov mov cmp sbb cltd pop inc mov jo push cli add sub mov les mov dec xor fs or mov sahf inc aas lret sar fwait rcll sbb xchg setl cmp add rcrb add adc adc in mov pop mulb jnp cwtl mov aaa nop mov jmp subb pop fisub or dec or ljmp adc loop add test push mov push mov xor rcl cmpsb xchg mov int3 add and aas (bad) jno in leave mov mov add add lea les loope mov xchg adcl rorb jp mov cmp add and xor sbb xchg mov jns mov push cwtl and mov jl imul loop jl sbb or inc mov cmp xorb stos add (bad) push pop and inc or jne adc add xchg add fldl fidiv add pop insl into ret in insb cltd aam (bad) sub jge push scas or push lock cwtl inc mov xor push dec pop sbb cmpsl orb xor mov arpl mov (bad) insl add and imul test push mov aad sbb pusha inc add pusha bound xor xchg adc mov jns pop xchg je in das rcrb jecxz mov mov nop mov mov pause cltd jecxz test nop push inc sahf push push adc call test xchg sbb add mov xchg add and xor rorl fbld push dec mov or pmulhuw sbb dec inc rclb mov pusha cld and pop cmpsb fcomps cmp je sbb pushf sub push and insl inc push mov xor jl adc mov dec xor inc clc pop pusha addl xchg fsubs cmp mov cmpsb fsubrl mov dec loopne sub leave xchg mov or fs dec hlt xchg and fwait push fcompl int3 adc nop loope ds dec sub (bad) (bad) push push int3 and fmull cld adc xchg push out cmp rcl fmull cmpsb enter and inc xor mov movsl adc dec add sub pop fdivl mov gs xchg rorl pop jl or outsb xchg negb and or push flds dec addl xor subb mov sub push mov push test pop test mov cwtl call outsl loope push and or mov cwtl push mov dec fcompl pop bound (bad) jb push push mov enter loopne dec pop adcb out adc nop push inc dec mov cmpsb adcb add hlt pop mov std cmp iret jnp pusha xor out jecxz cmovne mov cltd mov mov js mov push cmp mov inc push add mov add mov pop ljmp cmp (bad) jo mov pusha fcmovb cmp sbb lret lods xor sarl cld out out jl dec dec aam push sbb inc add sbb mov in ficomp add imul cwtl xchg or clc ret add and mov cld jge add popa inc call sub mov jae xchg out or mov sbb call rol test cmp sbb mov xor cmp mov dec dec std sbb xor adc add pop pop and push rclb movsl dec cmp aam test adc sub in pusha popa clc cld mov and mov add cmp ret or (bad) sub mov ret (bad) test pop movsl outsb cmp in inc and stos adc add push out sbb add and sbb xor add add xlat pop mov test sbb sbb in xchg ret xchg inc xor scas sti fwait add stos pop or xchg in add sbb fcoms pop into adc add fsubl ljmp mov es lret dec sub enter rolb cmp cld push jecxz dec call adc or cld xor jo mov js cmp leave mov ror adc movsb ds fnstcw push fs (bad) shlb (bad) mov push pop mov fisttpll lret in mov arpl ljmp mov jno out int3 test pop out inc and sbb int3 jecxz out je fildll aaa lds push (bad) outsb icebp push and imul adc push fstpl sbb setns add jmp sarl xchg loope push nop or idivl and push leave gs sub push and pop insl div cltd rcr mov loopne inc inc jns push cmp and cmp sub cmpl in sbb clc inc add sbb loop mov cmc inc xor pop xor sbb popa iret mov ds push (bad) sub mov pop push ss push (bad) lock hlt jo cmp add std adc cld push xor movq rolb inc adc mov pop in xchg mov and xor cmp or lods idivl sbb push jne mov mov ret push jmp out cli (bad) cmp jg fcompl pusha bound mov sti lahf xor fsubr aaa lret inc test sub inc lock clc decl ret icebp verw inc cmp movsb imul scas insb orb test add arpl sub push insb mov ja addb pop cmpsl sub mov jae dec loopne dec pop clc icebp lock nop cmp addl cmp push out adc addr16 scas popf pop mov ret sub or or dec pop mov dec xchg test or mov mov aam mov or and test pop test mov popa and xor or es and mov push jo pop ss pop dec sbb push fcoml mov loope and pop subl mov add cmp and or cmp xchg push and xor cli mov pop dec push test mov mov inc dec in sub cltd or js sbb jl xchg lock jl sbb mov xor add jo mov in jb push inc xchg cmp fistl (bad) cli lds cmp push lods push test rorb stc sub les mov inc or xchg xor popf insb sub mov popa addr16 rclb mov std aad adc or jl movsl dec icebp pop sub xchg cmp mov popa cmpsb push movsl mov adc xchg mov das js (bad) lock data16 mov push inc int3 clc test (bad) mov sbb cltd inc fidivr lahf sbb loop and cltd inc add into cmc add leave (bad) clc sbb orl jbe add mov dec xor (bad) or hlt repnz mov rclb (bad) lret shll fsubr or lock icebp mov inc sub cs cmc add xchg cmp sarb mov arpl test add xchg dec pop jle int3 add jne call dec add jge xor fist xor (bad) jecxz jo movsl adc dec inc cmp jne rolb test es sbb inc into dec nop (bad) (bad) fsts lods cmp or push xor lahf call test fs jle in icebp je add subb sbb or mov mov repnz pop mov leave add sbb or sbb xchg or shll mov outsl jns xchg and and cmp and lea sub out mov xchg inc push loopne push or or lds jo pushf test pop add rolb sub jmp lahf ret mov mov lock je iret adc lock imull cmpsl sbb mov push jecxz sbb js mov lea pusha or mov push loope mov sub gs xchg or ret mov lock rcrb test sbb push xchg mov push add add push sbb pop add into fnstcw stc inc inc aad pusha push jle out cwtl pop jmp inc sub inc movsb subb pop jle xchg pop mov push scas stos cmp nop mov mov push xchg sbb or fist adc cmpl jo xchg push pop sbb enter test add mov jb xor mov lods stc clc fwait xor mov xchg les les push xor sub and mov cwtl int3 xorb scas cmp mov movb repz or mov dec adc adc or les or adc mov adc cmp lahf pushf or dec mov into loop fwait cmp xchg shrb out rcr std mov aad ret lret dec cld sbb fisttpl sbb js dec jl test push add add stos lods or (bad) mov rclb mov mov (bad) adc cltd or add test shrb cmpsl sub pop jo or add adcb js repnz cmp fwait int inc mov rcll mov mov (bad) sub xor mov stos xchg add mov dec ret sub adc push cld dec nop dec or and sbb repz xchg lods xchg test fsubs cmpsl sub sub cmp add mov leave mov int and sub mov xchg sbbb inc sarl ret mov inc mov jle lds inc add cltd mov loopne dec out dec cwtl les in cwtl mov or mov (bad) xchg push xor mov sahf fistl cmp (bad) hlt fldcw mov adc jecxz stos fadds jno inc mov jle adc sbb (bad) adc or out scas add dec sub es mov and inc mov mov bound add pusha mov inc ja sar adc inc inc enter sahf dec bound fadds loopne jne or inc jbe sbb or stc mov test sub push dec cmp mov mov jecxz cli sbb mov sub jp ds es gs out lcall shlb enter lret mov sbb mov dec aam rorb mov mov and mov push call pop adc xchg lret test mov sarb and flds sahf add sbb outsl cwtl pop mov lahf add push sbb xchg cmc xchg repz cmp pop dec mov cmp repnz out inc outsb jns push enter xchg cmp or cmp push xchg (bad) or mov imul xchg cwtl ss or enter sbb add out xor push sti cmp and mov rcr sub cwtl push sub pushf or in mov xor cmpsb sub cmpsb cs xor adc push pop outsb pop or dec add inc mov out adc mov adc sbb (bad) roll and enter xlat sbb xor jo fwait movsb test arpl sub (bad) mov leave call sub arpl rclb (bad) sub fld adc das movsb adc dec inc push ret mov jmp xchg dec sbb rcll in test pop js push fmuls jae add bound pop ret cmp andl or pushf jecxz shrb rcll fcmovu scas dec cwtl mov (bad) cmp jmp ret push sub fsubp adc mov jmp and lret fidivl lea xchg xchg push cmpb ss jp,pt fsts les pop xchg js inc pop xor adc lret inc mov repnz aad xor push test sbb dec or or (bad) xchg pop push ret inc push adc mov loopne mov addl jmp mov inc pop and push mov mov push mov stos or inc adc xor (bad) loop out pusha pop and cmpsl dec dec cmc or sbb add sub stos add and mov inc push add fs add mov sub (bad) (bad) and rclb push stos nop xchg xor jmp test mov cli or lods or sarb mov sbb pop js iret dec test sbb push mov or les dec pop jecxz jl cmp test test lods jmp dec sbb push push test add mov sbb jb and add jmp dec testl adc jp add cs jbe mov sbb adc pushf add push or (bad) jmp push test in mov js cwtl add cld inc xlat ret hlt mov adc add inc sub jmp les int3 rcrb cs nop addb xchg mov sti (bad) test jle and lret loopne xlat icebp push sbb adc stos adc ret adc flds incl shlb lock inc add addl cmp ljmp call xchg push adc mov xor test std sahf sub inc fmulp ljmp movsb orb xchg add dec popa (bad) mov inc (bad) clc nopl ljmp pop inc inc hlt icebp jo in cmp bound test pop das add jae add fdiv or add lret (bad) mov add add jg adc mov les iret cltd push jnp jmp add gs mov lahf (bad) mov in inc mov pusha mov push test dec inc add pushf cmp inc and ret pop or cmpsl push mov lock gs add adc cltd out add inc in inc and mov inc add cmp add (bad) mov lock sbb mov push add jmp rorb clc lcall test push call jl inc lock sub dec mov jns adc adc mov push mov dec fwait mov gs outsl out add xorb mov orb cmp test xlat (bad) xor loope lock push or cmp (bad) mov orl out hlt pop and int3 xchg clc dec pop js,pn or ficomp xor ror xor sti or add mov out sub or cmp rcrl arpl dec sarb add pop pop fnstcw push in addb push inc test push call add outsb insl xchg ja add inc inc push push call cmp mov add js adc aaa add daa dec hlt and mov fildl pop add scas jo jne xchg aaa sbb add add in sbb sub mov push lods mov dec int3 cmp add aad add mov addr16 loopne movnti or scas rorb popa push and into add aam test and testb sahf jp dec jl cmc add jo sbb sbb inc inc jle mov push loopne adc pop jns sahf add jae adc jo jnp jbe sub in add popl inc mov sti mov add sbb fcmovbe pop push inc pop cmc (bad) jno mov ret cltd movsl sbb mov cmc pusha fsubl add or mov jnp mov cmpsb rorl jge int3 push rcrl dec add push cmp cmp arpl cmp xor or sbb les es jmp dec xchg fcom cld mov inc mov push dec mov sub xor mov mov cmc fnstenv or outsb test (bad) (bad) loope mov ja into xor xor dec pushl dec jmp inc xchg xor imul or and notb xor nop add (bad) mov (bad) push mov add mov mov pop test imul in jecxz fld out mov push out add push ficom or dec or sub les loope xchg push test pop inc push (bad) fiadd jno jl cs inc pop add movsb lcall xorb fsubr cmp movsl stos add xchg mov popf push lret ja ljmp movsb add or fcomi xor stc dec (bad) aaa adc cld push testb mov xor (bad) adc flds mov inc in mov dec aam loopnew adc movb jbe ja into or repz cwtl jns xchg pop sbb (bad) push in jle lcall hlt fcoms pop add and inc aad mov daa fs mov mov jb adc and mov popa cmp push mov mov sub inc jbe test les add xchg add jle and ja and sbb mov jl into xor mov xchg nop add mov hlt clc mov pop in sub (bad) ja jecxz jle inc push sti jl orb cli xchg call pop jg (bad) fcomp push hlt pusha ret in pop add pop mov cmp cwtl cld nop add pop or into test adc xor sarl and add mov enter in xor xchg xor jge es and fidivrl jno add xlat push pop push (bad) addl imul lea inc es inc and mov sahf pop jno mov add sbb sbb je sarb cmp pop jmp mov icebp shll cwtl lock and in adc outsl mov pusha mov repnz jle add mov and test adc dec hlt test pop out inc fdivs ljmp xchg or push clc call les or add cli dec inc dec std ds add add or sahf add jbe sub fmuls dec jne adc cmp call rcrb cmp fisttp maxps pop jno jae lret add pop pop in lea cwtl adc mov sahf in neg xor das adc push cmc and add xchg fiadd inc mov es jp dec cmc je xchg call pusha dec jle call and stos add lock clc inc pop rcr mov push jo sbb vmovdqa pop sbb (bad) fadds dec bound pop xor jo scas sub mov adc xlat or rcrb ja dec push je cmc xor add rorl out adc cltd out add mov in (bad) add into insl (bad) daa js out add pcmpgtw jmp jg int3 and mov lret push adc cmp xchg pop pop cwtl popf sub arpl adc std cmp mov hlt and xchg inc cltd femms push or cmpsl xor es cmp or add je xorl fcoml jge push jp sbb arpl jo inc and call dec pop or jae cmp out hlt gs xchg jb xchg sarb or adc push mov sbb add mov out in dec sbb push xchg push jbe xor add mov and (bad) jle jno lds lret jle paddsb (bad) scas xorb adc add mov je sarl add sub cs sbb pop xchg mov das add mov mov and rolb jo (bad) hlt jbe mov cwtl hlt inc and add pop lret and fmulp adc jo push add je stc jge and add fiadd (bad) fisttpll (bad) aad int jl pop into sub and pop stos cld (bad) mov xor ret sub loop pop adc and (bad) inc jmp gs sahf mov adc out or aad adc sbb (bad) pop addb pop shll sbb negl rol sbb loopne push in jb nop adc dec jge fsubl lods stc cmp mov mov dec ret mov add sbb push lock mov cmp sahf mov jl insl in out pop dec or adc sub push xchg jb add aaa push or inc dec inc jnp hlt cmp in ljmp cmc add pop bound mov out inc sbb or xchg jg call or inc scas xor cwtl pusha jae in jbe push sub cmp repnz imul push sti int mov pop jmp inc into std lcall loop rcll fiaddl jno (bad) push jecxz mov (bad) outsb xor mov lods add frstor push jg dec jns mov in daa lods call fs add mov xor and pop add sub movsb cmp lcall (bad) mov inc xor add int3 out pop test js sbb mov fwait push push add pop dec pusha dec int3 fsubl cmp xchg repz xchg mov add je aaa pushl adc js stos incb push (bad) idivb loope pop pop into dec mov clc jae add jbe cmp iret es cwtl sub roll mov jmp nop add lret bound adc mov jb push call xor pand xlat sub addr16 insb xchg loopne sub push sbbb inc jne sub incb push pop subb nop nop dec es add sbb add push pop mov jo lods add loope or nop sub fcoml push lods inc decl push lods xchg mov cmp sbb dec clc movsl inc add jmp stos in add pop ficoml out mov flds push aad clc roll jge call push adc fcom mov add iret mov inc repz and inc ja cli in adc stc and nop or addb aas inc pop loopne adc call push jnp pop push inc lret jle aad adc sub in sbb loopne and hlt popa inc lret cmpsl dec mov add sbb jp stos sbb hlt lock sti sbb mov fstpl push dec fs push (bad) in mov hlt fcmovnb rcl xor add pusha es fstps fs mov add add dec pop cltd adc mov fidivl add aad in mov sahf mov popf push (bad) hlt fist xchg es mov lret pushf dec push adc rorb xor fsubl mov or rcrb xor push fadd push and outsl inc addb imul test movsb and xlat hlt subb xor xchg js shlb scas rorb test mov and pushf jmp iret rcr mov inc add aaa ret sub (bad) cltd and add mov jns pop cmp mov jb jle test add dec xlat dec add adc rorl addl and in test daa repz jns cld loopne sbb dec jo fsubl mov enter pusha pop sub inc aad mov mov pop (bad) sub mov pusha inc fs popa push mov add cmpsl adc lock xchg add mov hlt movsb mov lcall xchg add xabort aaa fs dec (bad) loopne inc add cmpsb decb test mov ja or inc (bad) pusha push jns insl aad dec lcall pop sbb call mov mov inc (bad) sub pop mov and sub out add jle jo adc pop add add (bad) jo add dec decb shrb or movsl imul mov jmp pop cmp xlat aas in sub dec call cmpsl add in dec xor mov dec mov popa loopne mov jp or mov call or jae mov cs (bad) js cmp faddl mov enter (bad) out ftst add std jbe rolb fist pushf fisubl cmc nop inc inc push dec sti nop adc int cmpsb test jnp leave ret (bad) jb jl insl add (bad) xor mov cmp rolb push mov and imul les push movsb dec or adc dec (bad) xchg inc cmp push pop add imul gs lods push and sbb adc popa rcrb push add adc fcom pop into pop fist lea sub xor rorl rcr dec or mov aam jbe popa xor (bad) mov loopne jle sub scas mov push or popa mov das nop xor mov adc insl outsl cli mov decl pop in out xor or int3 and jge xchg pop ror ja int3 leave and (bad) ficoml ffree imul andb lods imul add sub loop,pn dec inc insb js jge xor adc fwait adc sbb push ja clc (bad) or loopne add pop das jecxz push aas lock ret dec setb enter or sbb add sub lcall cwtl lret sub and (bad) icebp lahf adc dec jle or gs repz dec repnz cmp into push in add sub in les loop push or addr16 popa repnz cltd or cld jge aas ljmp inc sub enter js add jns fsubl pusha xchg jg and or fcmovbe adc xchg cmp or cld loop push roll mov sbb outsb popa adc addb add cmc fdivrp push sti enter test dec xchg cwtl out in add addb insl lcall or loopne mov ljmp cmp sub add add out cmc xchg cltd mov mov cmp jg jne aaa les adc push push xor addr16 scas mov add mov mov xor cmp jecxz in add or fnsave dec fisttpl xor and jl sbb pushf inc pusha fbld xchg sub mov pop add fisttp inc xor add xor repnz ja add lcall (bad) jg mov hlt (bad) test test out lcall dec add into add lock shl pop and or dec ret adc out mov sub pop in adc es shlb mov push popl push pop dec mov mov es outsb hlt mov or sub push test sarb or enter jo ss push lods mov dec (bad) hlt rolb insl jp iret add push fimull pop add mov inc nop add mov mov adc jae add enter test push lcall mov cmp adc fldl inc mov sub outsb xchg push and sub cli push push mov out sbb loop add push push adc shll sub pop add mov dec aam nop push xchg adc or add and add mov mov jle inc mov xor das je adc sti ja in fwait pop pushl mov push or notl daa jp cltd fadds cmp xchg cwtl sti jl push das mov scas push sti and mov aam or xor loop push rolb addl add and lcall cwtl in out nop jl lds popf mov pusha xor xchg cmp nop add sub into pop (bad) cld mov lret mov test push jo pop mov (bad) and inc lods lret call aam bound mov dec push (bad) mov add pusha adc add push sbb add call adc jno jns cmpsb insb and test pop pop pop outsb repnz nop repz adc out jge jmp mov pop ss sub add or add dec sahf and jge pusha jno bnd add mov inc xor cmpsl push cli enter js rorl mov jnp or add imul mov je pusha in arpl add andl jno shrb clc inc repz mov int3 in popf jne sbb dec or lds add xchg addr16 dec int3 push inc clc icebp mov jmp lcall xorb sub fnstenv mov leave pop cltd std add jo sti mov js dec ds dec mov cmp cmp add jecxz dec js outsl adc in fcoml mov divl or mov mov add mov loopne pop enter xor jnp sbb (bad) xchg imul add stos pop xchg fdivs add imul dec sub add (bad) out or lds mov mov les add xor sub jge push cmc ficompl cmp add jbe inc add aam sar hlt add jge inc or mov push and pop ljmp lea mov and dec mov jg mov sub repz mov cmp or ficoml xor add and cmc cmp fwait sub ret jae lds movsb mov jb add cli jl cmp dec and cmpl ret test add push aas dec lock inc mov pushf les ffreep int ja sub sbb test push add dec mov frstor inc lods ljmp xorl fidiv in into and (bad) jo loop push stos mov jbe insb mov pop rorb add adc mov xchg imul (bad) jmp addb lods dec add fnsave add xlat cld stc xor aaa and pushf and add pop adc out out add inc add addr16 subb add cs sbb arpl sahf push mov popa push cld stos adc out xchg adc xchg jno mov (bad) aam lds mov sub dec sti aam mov repnz sbb xchg (bad) jae subb mov dec data16 and daa and mov leave cmp pop pop or shrb pop xchg mov sub add test mul sub call cmp xchg xchg iret sub adc in xorb fcompl cltd xchg or js cmp jae test adc cmp add fsubrl sub adc xor xlat jb and test add (bad) pusha roll sbb or mov lret dec jecxz add repnz mov leave and and rolb jge jbe ficomp clc mov jl pusha jbe insb push out xchg cmp lock loopne mov xchg add add bound pusha mov adc orb outsb pusha add push push int3 pop jge loop sbb test mov iret jl jae shll fisttp (bad) push sub rolb mov dec fimul sub push mov jno repnz dec outsl jg cs pop add shlb mov and push jp mov xor xchg testl ret and aam dec sub add adc imul fisub adc add clc sarl push in inc xor push aas and xor mov loopne push mov push loope dec jp rcrb mov mov fs mov inc mov shrl jno add cmp lret dec jle add mov pop shl clc aam dec dec sbb cltd pop add not jg mov gs daa rol fstpt aad cld ds or pop sub icebp ret mov fwait push ds pop or ffree add pop jo sub add mov mov cmc fmuls lahf xor mov or addr16 add test mov aas adc add imul pop sbb pop adc mov bnd or xchg sbb cli pop or mov or fdivrs cmpsb out mov lods push nop loopne push subl addr16 dec gs xchg mov test aad es xor aaa lcall (bad) aas addb push cld ss dec jo fsubrs sub push push push mov and rcl pop push pop and cmp in std lock insb or ljmp daa jle andl dec sbb jp (bad) mov pop add dec inc pop add cltd insb cwtl clc (bad) insl pop adc and pop xor sarl pop add ret jge push hlt pusha jl xchg sbb orl mov inc push call add dec mov dec sbb inc out sbb push push mov sub jb lea orb pushf mov lret mov fiaddl lock mov shrb in jnp sub mov add xchg repz add repnz push sbb cmp or pusha sbb jmp faddl mov popa les pop add push and sbb sub aam inc xchg mov sbb es sbb jp mov fadd fisubr shl dec pop and sbb stos test cmc repnz xor loopne push cld push data16 (bad) add cli in push add xchg mov mov xchg push add es mov ds xorb cs add (bad) dec xor xor or cmp mov fnstsw js dec or fnstenv jl loope jns sbbb out fiaddl mov fnstenv mov sub adc es add es lret enter nop jns jbe aad adc adc add push repnz add int dec mov sbb dec rcrb jp dec (bad) or (bad) xor jmp stc mov push ja and mov ja add sub dec jl ja inc mov jmp push icebp inc mov cmp clc test xchg and mov cmc in sub jg cmp (bad) jmp jbe push and and (bad) ljmp icebp push and cmp aaa popa ja pop out leave int3 in (bad) enter (bad) cmpsl aam push push lds lods scas dec (bad) jo icebp lock add adc push sahf std inc testb jp jle xchg (bad) push add add cmpsb push xor outsb jl lock jge (bad) xor or push jbe dec jle cmc and add add dec jge inc push add int (bad) xor add movb pop add std imul es add mov xor jg (bad) xor and hlt pushf in xchg loopne jbe sqrtps or stc push pop add ja inc add repnz (bad) pop inc xchg lods mov sbb push (bad) xchg or movsb jae mov sub addb adc aaa sbb mov clc add xorl fcoml pushf mov (bad) jae test in or cld and or stos mov add nop push sub inc add inc add dec pop inc mov shrb nop sub sbb xchg fucom repz orb arpl imul mov mov ja out push movsb hlt or out jmp cld cs les aam push inc lods hlt adc adc pop mov cli rorl in dec cmp int3 mov mov leave cmp push fmul xchg scas test stc push pusha (bad) stc repnz add pusha in adc hlt add pop xor out ljmp xor or mov gs add pop loop jg nop or (bad) jecxz xor add cwtl repnz push repz add push inc test jns es repnz and fnstcw and cmpsl cwtl test and cmp cmp mov and sub mov fcomps or lods dec imul cmp sti inc or xlat jle nop sbbb push jmp leave add scas inc xchg std icebp adc js add cmp inc fldl jmp add movsb dec jge,pt add sbb jl mov scas mulb lret add push psrld xchg mov adc (bad) jbe cmpsl add mov movsb movl into jle add jbe leave and or mov es pop mov rclb cvtpi2ps out cmp dec add mov add clc in int3 shlb cltd sub dec test and pop adc shl and movsb inc lahf mov stc pop fstpl cmp and sbb add sti sbb fwait inc rcl mov push lock xchg clc adc lods les adc adc mov addl mov scas hlt add add dec add xlat xchg cmc mov outsb add jno mov adc add inc nop pushf push je push and adc jge mov nop dec (bad) mov add jg in idiv pop pop jno stc pop push test std inc lods pop xlat fstl mov mov or stos add cmpsb sbb outsl mov pusha cli imul je scas inc jle push rolb cmp ljmp cmp les sbbb xor and ds and cmp jo daa cli test jae arpl add mov and add call nop and fwait dec push cmp hlt adc sarb inc xcrypt-ofb cmpsl ljmp outsl in xor mov sbb xchg dec dec sbb repnz js lcall out popf loop xchg inc jecxz jae push fmuls add adc dec push sti sub sbb xchg test jl xor fsubs cmp pop push and adc sbb or movsb jns cmp cs pop mov fdivr mov repz inc addr16 mov pop xor add imul fldenv add adc or movsl cs sub cmpb adc stc fcoml mov lods dec inc je mov jle in insb dec aaa lea inc add mov xchg pushf add bound pop arpl mov lret cli pushf add arpl lock pop add push iret cwtl mov add int3 cmp adc cmp adc push test mov rolb unpckhps xorl sbb sub lret adc popa (bad) or ficoml (bad) call xor ret sub aam add mov test lock les jb xchg or sbb jle sti mov push fidivrl xor sbb shrl movsb push mov mull mov mov insl and sbb mov mov rolb (bad) sbb call or and clc loopne hlt ficoml cwtl sbb or js mov mov cs out or or mov add xchg aas pop popf mov xor mov or in cmp xchg add inc add mov dec push adc es int3 ret mov addr16 adc mov in stos cmp xchg pop es popf fnstcw out xchg pop push mov add (bad) add inc mov dec (bad) mov inc sti loopne movsb lahf stc jb (bad) mov decl in or (bad) xor pop repz (bad) (bad) mov jle jge jp sub sbb xor pop cmpsb std adcb dec bound add lock icebp add jns fwait (bad) sbb mov int3 add insb jo pop cmpsl mov xchg mov xchg mov add jne roll dec pop adc dec loope out add lods dec iret push popa mov add xlat pop cmp mov (bad) adc pop imul mov push mov cli stc sbb push add xor inc adc inc loopne pop dec adc pop lcall cltd add mov ds and cld pop or add andl addb repnz jb add xchg sbb xor sub cmp fcom add dec ds pop loope inc or cmp push test xor mov push dec inc addr16 lret loopne movb scas push rolb push xchg call mov fcompl jg cmpl call sub outsl nop pop cs sarb mov arpl dec ss icebp test sbb aam push test adc cmc mov mulb adc jbe ret add jp fwait add and xor mov and sub mov andl xchg pusha cmc sub and mov xchg lock test mov cmp repnz ror adc pop nop and outsl ret cmp das push pushf lock dec pcmpeqb cmpsl sti (bad) outsb (bad) jge or add dec cli ja sub or in mov jge mov ficom push push test jae add jbe or and idivl repnz fs add cmp loopne add pusha add mov pushf pop pop jo pop and sti add ficomp ss test add adc test enter roll rolb (bad) lock add cmp inc repz pop std cmp jge push (bad) push cwtl mov and push fistpll xlat out iret push jae sbb xchg lock loopne es dec push (bad) jg xlat mov and loop dec push adc (bad) sbb xchg in lds ja sbb cs or rolb sbb stos or dec jmp fisttpll push test jge inc mov inc and and dec mov push inc add cld (bad) fdivrs cwtl mov bnd push pusha cmpsl test add (bad) fs push (bad) cld shrb mov cmc sub test add add call add mov push add dec out mov pusha test add inc pop out loope xchg dec jno mov push jle repz mov adc insl jp sbbl out cs cli clc mov sub push lock outsl fldenv jp pop add setle je jmp sti icebp imull pop sbb int3 loop push inc stos sbb ret lods pop icebp mov iret mov add xor stos pop js pop sbb ret jmp and xor enter imul pop ljmp cld sbb push xor in pop push rcll xchg xchg or inc mov add add dec cmp push sbb push pop and jmp add (bad) scas push push mov add mov jmp flds pop pop fcom inc bswap (bad) jmp aam clc cmp das push mov mov cmp test inc das add cmp lock clc add inc andb fldcw mov fmuls fnop out pop jne pop xor movsl mov sub pop jp pop sub or int3 xor sbb and bound cld je add push mov das sbbl mov push jg in dec mov add mov dec add inc jp mov pop adc insb stc add and dec repnz mov pop mov loopne ret fbstp jle popa cld lock or imul fwait push push cmp rcr sub testb mov push icebp roll xor cmp dec dec add fsubrl (bad) mov add pop mov jbe inc push sub or cmp lahf fwait js aaa mov add sti cmp cli or inc mov mov int3 loopne pop add add cwtl ret cwtl enter add lock sub scas adc rcr sahf sbb daa cmp enter andb or and sti push pop mov add (bad) cltd leave add mov or mov loop sbb rcrl das andl add mov lcall scas clc outsb cld call mov xlat mov inc sub jl inc enter les orb mov outsb out out inc add call int3 cmpsl and push fs fcoms iret jge and sub popa imul jne and fmuls mov and icebp add test and mov sbb add push cltd lahf sti or mov cltd ds (bad) mov and out cltd into ljmp mov cmp das je xchg mov lods dec push push jae (bad) pop or jns add mov mov add pop push jecxz bound add adc pop adc add ret aam jno out repnz sub clc jno xchg int3 fmull jb sarl lods mov imul cmpsl movsb or pushf aam fwait and add adc sub fistpl push out sbb mov pop sbb sti and stos and pop mov int std add loopne fcoml mov shrb or add cmp and add fsubrl inc cwtl pop mov pop movsl mov ds inc jg push inc subb test notl add sub mov push sub sti mov int fldenv sbb fdivl loope sbb rclb add stos or adc rcl stc cli je mov mov pop sub push inc lods rclb sub sbb stos xorl ret popa sbb in bound jae jae outsl dec mov ds adc fbld ja leave jnp nop mov ret fmuls add pop lahf add mov hlt fsts and call bound mov jmp loopne adc js add (bad) ljmp lods and add push pop ret cli movsb inc adc xor cmp inc mov enter push loopne xchg fist bound mov dec and xchg outsl f2xm1 jecxz rcrb push mov stc mov test or dec decl loopne mov mov clc sub testb mov and mov ret add lock and or lret aaa loopne add jmp repnz clc jae sahf popa xchg std mov int3 ret lahf (bad) outsl cmp mov push push mov rolb lea add mov (bad) xor xor add xchg mov ficomp or bound insb outsl mov sub pop xor lret call and add push pop ss cmpl dec aas and ds xchg inc push mov push push mov loope cmp fcomps leave js or mov cmp push loop mov or cmp rorb sbb push (bad) dec test push flds lret mov push out mov sub and lret add pop ja mov jp movsl pop xor lock loop aad xor icebp mov jl pop add outsl pop stc aad and inc nop mov mov jb sub add cmpsb push enter add jle and (bad) out scas jb pop jmp xor movsb outsb mov add cmpsl adcb imulb in mov sub cwtl sbb add mov dec cmp mov cmpb add mov dec xor fidiv in out adc xor (bad) loop cmp mov popa sbb jnp cld add xorl push scas cltd add or rol repnz cli xor lcall sbb gs push es inc aas ja or sti mov out rcrb push dec mov inc add inc stos dec and fcompl imul frstor popa sub mov js ret cmp dec mov in pop dec sub je xor (bad) mov lods or test push loop lods les cwtl sub jle lock push pop add add jg adc inc popf sbb jp test mov pop insb pop pop lea mov jbe out add fcoml js mov mov stc add pop pushf inc nop bound pop xor (bad) lods lock and mov add scas inc inc std lock lock inc cmp adc pop adc push push inc cwtl dec sub jns addr16 (bad) dec mov adc sub sub cmc cmp test or cwtl inc sbb pop pop push add mov dec xor incl push outsl popf lret mov cmp sbb je dec inc add ret flds lret add test mov push out icebp subb mov dec mov in mov fild dec inc mov mov add dec sbb fsubrs adc push and mov (bad) pop sub mov stc add xchg sub jns lret ljmp fadds sub sbb cs in xchg cmpsb in add std adc xor popa hlt mov mov xor dec and (bad) call add dec jmp enter and ja dec popa push fistl xchg test fldenv lods lret popf shl and pop jl mov es clc cltd or stos jp int3 je pop mov xchg add imul and xchg xor repz loope sbb mov enter sarl or mov sbb add dec mov (bad) cmc or (bad) and fs inc loopne je sub add loope add adc nop fadds add mov pop and push add cmp inc gs inc int add shlb (bad) mov fadds mov je add enter dec push repz push (bad) nop clc test mov pop mov or dec out mov mov xchg xor gs test sub xchg add sbb add xor dec pop pushf (bad) pusha loope arpl (bad) rorb add imul mov sub clc cmp pusha adc sysexit add push add std or pusha nop xrelease dec cmp xor jmp movsb test jecxz and sbb or mov cld les xor pop pop xor lcall add bound jnp clc and push mov sbb sub shl xor add cmp push cmp add test cld addl add call popf cmp ljmp sub inc sub nop in pop mov add imul incb aad lret xor or mov daa add mov mov mov mov lds std or nop lret mov stc mov sbb sbb inc std push cmp call test cmp xchg cmp lahf sbb xor popa cli jns add rcr clc sub (bad) push call cltd mov out out push ret in add ljmp sub inc movsb pop out or enter and call rcll adc add shlb sbb imul and inc xor and (bad) call mov xor pop adc dec flds and or jmp sub cmpsb mov pop nop es aaa fdivl test push cmp out adc in pop out (bad) adc mov cmp jns mov push (bad) mov and sarb dec hlt inc mov cmp push flds enter pushf test fwait les leave jb (bad) repz or pushf ja or movsb aad mov leave mov cli inc cmpl adc mov into inc test nop jle jg lcall pop jns in mov popa sti push and sbb mov rcrl cwtl rol movsb mov adc push add fstpt add flds push sbb jae push (bad) shlb xchg stos mov mov nop push gs (bad) ret jns add (bad) in adc mov cld cmc add or pop imul cwtl add sysret leave das inc jae adc std mov lret (bad) lea jbe xchg adc dec loopne sbbb add adc inc jge hlt sub stos sbbl leave mul out popa int3 popa jmp mov xor xchg or je cmpl or pop xor das add sahf or roll popa in out repz jb daa out adc stos add xchg (bad) mov shlb dec jne pop ljmp and je jge mull push add mov push insb push add movsl ret xor cltd sub int xor xchg add aam mov fdivr adc mov xchg pop daa cwtl push adc push js mov cmp sbb loop mov xor cld xchg add stos adc adc cmp xchg dec add dec jb mov mov cmp and xor cmp jns fimull and sti lock imul xor add fnstcw jp push or push leave ljmp lock movsb jae fcom cld sbb enter dec and or push daa jp int3 mull int3 push add je or (bad) loope fsubrs and icebp sahf sbb jne adc push xchg pop outsb cmp lret fdivp push add xchg in add mov cmp dec dec test mov add jmp insl jp ds and sbb mov jnp mov mov fs inc lret mov xchg mov xchg pop or mov leave loopne and lea xchg clc subb push sub jnp leave cmp sbb fdivrs add add shrb cs or clc push add cmp outsl jns outsb pop enter add out or adc jmp sbbb out add dec push or andl push add sbb push push mov (bad) or add pop std push mov add jle inc jp loop add rcll enter sub jmp add adc mov jns icebp adc mov mov mov cmp negb dec cmp les out (bad) fs and gs loope repnz cmp and mov inc jp and inc dec xor and xchg scas xchg push jo pop psraw out sbb add push movsb mov jl adc or ret pop mov dec cmp std sbb xchg shlb enter call pop cmp rcrb call or fistp add dec jae dec and lret inc int3 inc pop xchg xor rcl xbegin add ret lea nop clc pop add jmp xchg (bad) std inc test adc xor cmp movsl jae mov mov (bad) (bad) and adc ret jno add lods mov cmp adc mov add mov loop addb and aad push int3 les inc pop out push outsl iret cmp pop adcl lock and mov pop arpl add das pushf adc rcrb jbe sbb xor cli add push or mov loop test adc cmc inc es xchg ret icebp mov adc dec mov cmpsl xchg test scas and sbb xor mov outsb sbb pop mov xor mov push adc or inc orb sub ret les mov leave aad cmp add out sub pop imul popa sub call cmpb dec lret xchg xchg mov mov pop sub add mov pcmpeqb sub inc (bad) movsl sbb add das scas fidivrl (bad) or dec push add cmp push aam cmpsl es leave mov (bad) mov jno xchg add sbb cltd pop faddl js fild bound inc ror ret flds hlt add sbb add push mov push add (bad) repz dec subl or push mov mov cmp add dec mov out lret sub add xchg cmp out shrl dec jo ret mov or fwait lock es fadds cmpsb pop mov inc jl lcall outsl add mov mov call stos or jge popa add jmp les rorl incl popa xor mov add adc add int3 lcall in and test inc mov movswl out pusha add pusha mov popa cli mov mov push cld aad cmp adc rorb mov push mov in mov adc jmp xor mov add roll mov adc fadds push or xchg out es pop mov push add cs mov movsb xchg jne and dec mov add fcmovbe xchg pusha adc mov pop adcl push loopne inc (bad) je scas pusha call repnz add mov aam pop popa push ss and sbb xchg sti call cmp adc popa pop lea les add dec clc pop pusha jmp orl aaa add (bad) or nop adcl xchg fstpl test jmp pop bswap push mov cmp mov or pop adcb test add add xor bound ds add sub and and inc incl and stc xchg xchg add popa imul repnz jno je adc xchg roll add mov cld lea pop or out sbb jmp add ja jno push cmp insl push adc mov stos push int3 add add sub add and add inc add add add lods lods lods cmpsb cmpsb cmpsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb cmpsb cmpsb cmpsb stos stos stos add add add cmpsb cmpsb cmpsb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp add add movsb movsb movsb (bad) (bad) jmp loope loope loope loope loope loope loopne loopne loopne loope loope loope loope loopne loopne loopne loope loope loope loope loope loopne loopne loopne loope loope loope loope loopne loopne loopne loope loope loope loope loope loopne loopne loopne (bad) jmp add add (bad) (bad) (bad) (bad) (bad) jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrp (bad) (bad) std std std std std std (bad) (bad) (bad) (bad) fdivrp (bad) (bad) std std std std std std (bad) (bad) (bad) (bad) fdivrp (bad) (bad) std std std std std std (bad) (bad) (bad) (bad) fdivrp (bad) (bad) std std std (bad) (bad) (bad) (bad) (bad) jmp add add std cld cld (bad) (bad) (bad) jmp out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrp std std sti sti sti sti sti sti std std std fstp (bad) std std sti sti sti sti sti sti std std std fstp (bad) std std sti sti sti sti sti sti std std std fstp (bad) std std sti sti sti cld cld cld (bad) (bad) jmp add add std cld sti (bad) (bad) (bad) cmp xor jp dec scas cmp (bad) cld sti cli cli stc cli cli stc cld cld sti (bad) (bad) cld sti cli cli stc cli cli stc cld cld sti (bad) (bad) cld sti cli cli stc cli cli stc cld cld sti (bad) (bad) cld sti cli cli stc sti sti stc (bad) (bad) jmp add add std sti cld (bad) (bad) incl jl (bad) cld jecxz cld loop jl (bad) (bad) (bad) (bad) fdivrp sti sti stc stc cli stc stc cli sti sti sti fcmovnu (bad) sti sti stc stc cli stc stc cli sti sti sti fcmovnu (bad) sti sti stc stc cli stc stc cli sti sti sti fcmovnu (bad) sti sti stc stc stc cli cli cli (bad) (bad) jmp add add loopne fdiv in add (bad) std in std in jg mul jmp (bad) fcmovnu fcmovu fnop (bad) fcomp fcmovu fcmovnu fcmovu fcmovu (bad) fcomp fnop fcmovu (bad) fcmovnu fcmovu (bad) fnop (bad) fcomp fcmovu fcmovnu fcmovu fcmovu (bad) fcomp fnop (bad) (bad) jmp add add (bad) cld lcall aaa add add add jmp in cli sti clc div clc div stc clc clc fnop fdivr clc clc clc div clc div sti stc clc (bad) fsincos cli stc stc clc idiv div stc clc clc fnop fdivr clc clc div idiv div (bad) (bad) jmp add add pushl sub mov (bad) (bad) lcall xor (bad) stc div cmc hlt repz cmc (bad) (bad) aad div hlt cmc repz clc hlt (bad) push in xlat (bad) push (bad) (bad) cmc clc clc hlt div cmc (bad) (bad) aad div hlt hlt repz cmc repz std cld movsb movsb movsb add add add movsl movsb movsl (bad) std (bad) push cli mov enter cld idiv cli cmc idiv stc (bad) cltd int add cltd iret mov clc std clc hlt cmc cmc hlt hlt aad aam repz cmc repz cld hlt imul mov cld hlt div hlt aad aam repz repz repnz cld cld movsb movsb movsb add add add movsl movsl movsl cld cld cld cmc hlt repz cmc cmc xlat aad cmc hlt repz hlt (bad) cli std test cwtl int (bad) clc cld clc cmc cmc aad aam hlt repz cmc repnz push mov mov decl and div aam (bad) hlt hlt repz repz sti sti cld movsl movsl movsl add add add movsl movsl movsl cld cld sti rcl rcl aam aad aad rcl rcl rcl rcl fcom (bad) in fild (bad) mov fcom xlat aam aam xlat aam in adc mov into call mov fcom aad aad aam aad aad rcl std cld sti movsl movsl movsl add add add movsl movsl movsl sti sti cli repz div lock aam repnz out icebp out out icebp out out repz lock aam idiv xchg lret mov jge shl fnop fcomp stc cmc repnz cld icebp lods mov adc mov daa mov std repz aam cmc not in out out cld cld movsl movsl movsl add add add movsl movsl movsl cld cld clc out ljmp repnz in out in in in in out out in rcl (bad) repz std repz cmp std imull mov in (bad) push stos scas fisttpll loopne (bad) into loop add (bad) sti sti movsl movsl movsl add add add cmpsb cmpsb movsl (bad) cld imull mov imul out out ljmp iret into int in in icebp in in cld icebp hlt xchg lret scas add adc les out aad into repz cli imul test ficom lds mov lret lock stc stc movsl movsl movsl add add add movsl movsl movsl sti sti clc div in cmpsb stos fmull fnop imul lock jmp in in iret into int in in out in jmp lock (bad) cli notb lcall (bad) cli hlt cmc icebp out ror into out out in repz (bad) stc hlt mov bound hlt lock cli stc clc movsl movsl movsl add add add movsl movsl movsl clc clc (bad) iret iret lret int3 xchg cwtl leave or leave xlat (bad) int3 rcl int3 iret iret int3 into into lret rcl lret fnop int3 xchg cwtl lret sbb leave push xchg cltd add fcmovbe aam rcl ror iret fcmovbe (bad) mov mov xchg cltd pop and xchg xchg lret lret cli cli mull add add movsl movsl movsl clc div ljmp (bad) int3 movsb stos ficompl sub iret shl cmc repz div ljmp xchg xchg lret repz enter cmp rcr push clc int (bad) add in aad stos fisttpll sbb stc mull add add movsl movsl movsl div cmc out jecxz call repz cmpsb xlat sbb rcl loopne fcmovne cld cli call and aad out in call lds xorb xorb xorl out lock int3 repnz out mov clc clc cmc cmpsb cmpsb movsl add add add movsl movsl movsl div cmc in jecxz in lret ljmp test adc mov sub icebp out int3 enter in out (bad) in repz (bad) (bad) in jg (bad) in repz call jmp jecxz in div cmc movsl movsl movsl add add add movsl movsl cmpsb div hlt in loop in lret out jecxz jmp adc (bad) mov mov ljmp jecxz out stc jmp add vpmulhuw std in jg stc jmp ljmp out in loop in div hlt movsl movsl cmpsb add add add cmpsb cmpsb cmpsb div cmc (bad) mov mov aad (bad) adc mov call and aad (bad) lret enter mov mov leave int3 aaa pushf outsl add add aaa pushf outsl ror int3 leave mov mov (bad) (bad) cmc cmpsb cmpsb cmpsb add add add cmpsb cmpsb cmpsb div cmc loop fsubp loop mov in fucomip ljmp mov insl lret loopne in mov jecxz loopne loop lock fmul int out out in out loop jecxz mov loop (bad) loopne div cmc cmpsb cmpsb cmpsb add add add cmpsb cmpsb cmpsb cmc hlt repz fsub loopne ret (bad) (bad) (bad) loop fucomp jmp out in fucomip call loope faddp (bad) (bad) (bad) (bad) fucom loope mov jecxz loopne loopne (bad) fucom loopne ret (bad) (bad) (bad) (bad) fdiv hlt repz cmpsb cmpsb add add add cmpsb cmpsb cmpsb cmc hlt repz fcmovu (bad) ret (bad) (bad) (bad) (bad) fnop (bad) (bad) loope (bad) (bad) (bad) fcmovu (bad) ret (bad) (bad) (bad) fstp fcmovu (bad) ret (bad) (bad) (bad) fstp fcmovu (bad) ret (bad) (bad) (bad) (bad) fprem1 hlt repz cmpsb cmpsb add add add cmpsb cmpsb cmpsb div repz fcomp (bad) rol fstp fcmovu fcmovnu (bad) (bad) (bad) rol fstp fcmovu fcmovnu (bad) (bad) (bad) rol fstp fcmovu fcmovnu (bad) (bad) (bad) rol fstp fcmovu fcmovnu (bad) (bad) (bad) rol fstp fcmovu fcmovnu fcmovnu fdiv hlt repz cmpsb cmpsb add add add cmpsb cmpsb cmpsb div hlt (bad) aad fcom fcmovu xlat fcmovu (bad) fnop (bad) fnop (bad) fcmovu (bad) fcmovu xlat fcmovu (bad) fnop (bad) fnop (bad) fcmovu (bad) fcmovu xlat fcmovu (bad) fnop (bad) fnop (bad) fcmovu (bad) fcmovu xlat fcmovu (bad) fnop (bad) fnop (bad) fcmovu (bad) fcmovu xlat fcmovu (bad) (bad) aad xlat aad cmc hlt cmpsb cmpsb cmpsb add add add cmpsl cmpsl cmpsl clc clc div cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt hlt cmc hlt cmc cmc hlt clc clc mull add add rol cmpsl cmpsl cmpsl cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsl cmpsl cmpsl rol add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add leave test rorb enter add xchg (bad) dec jno hlt xor out insb data16 add xchg push cmpsb (bad) add add add aaa xor xchg xchg (bad) xor out add scas mov icebp pop push repz lock add xchg xchg cli pop pop stc je stc imul cwtl (bad) lret xchg add add add hlt add add sti mov (bad) pop pop stc int3 jg enter add pop push ljmp mov ss dec xchg cwtl cld pushw xchg sti rorb mov jns ds mov mov add mov dec dec repnz add add hlt add hlt dec inc repnz pop push cmc xchg cwtl cld push dec repz pop pop cmc add add ljmp mov ljmp out lods inc lock lods inc add lods inc push add push lods inc (bad) stc lods inc (bad) clc lods inc (bad) std lods inc (bad) ljmp and add inc add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add add add add cmpsb cmpsb cmpsb jmp movsb jmp movsb jmp movsb jmp movsb jmp movsb jmp movsb jmp movsb jmp movsb jmp movsb jmp movsb jmp movsb jmp movsb jmp movsb jmp cmpsl cmpsl repz add add add cmpsb cmpsb cmpsb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp add push add add movsb movsb movsb (bad) (bad) (bad) (bad) jmp loope jmp loope jmp loope jmp loope jmp loopne jmp loopne jmp loope jmp loope jmp loope jmp loopne jmp loopne jmp loope jmp loope jmp loope jmp loopne jmp loopne jmp loope jmp loope jmp loope jmp loopne jmp loopne jmp loope jmp loope jmp loope jmp loopne jmp loopne (bad) (bad) (bad) (bad) jmp add add add movsb movsb movsb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrp (bad) (bad) (bad) (bad) std std std (bad) std std std (bad) (bad) (bad) (bad) (bad) (bad) fdivrp (bad) (bad) (bad) (bad) std std std (bad) std std std (bad) (bad) (bad) (bad) (bad) (bad) fdivrp (bad) (bad) (bad) (bad) std std std (bad) std std std (bad) (bad) (bad) (bad) (bad) (bad) fdivrp (bad) (bad) (bad) (bad) std std std (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp add add add movsb movsb movsb (bad) (bad) (bad) (bad) (bad) std cld cld (bad) (bad) (bad) (bad) (bad) jmp out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrp std std std (bad) sti sti sti (bad) sti sti sti (bad) std std std (bad) fstp (bad) std std std (bad) sti sti sti (bad) sti sti sti (bad) std std std (bad) fstp (bad) std std std (bad) sti sti sti (bad) sti sti sti (bad) std std std (bad) fstp (bad) std std std (bad) sti sti sti (bad) cld cld cld (bad) (bad) (bad) (bad) jmp add add add movsb movsb movsb (bad) (bad) (bad) (bad) (bad) std cld sti (bad) (bad) (bad) (bad) (bad) cmp jnp incl jp decl cmp (bad) (bad) cld cld sti (bad) cli cli stc (bad) cli cli stc (bad) cld cld sti (bad) (bad) (bad) cld cld sti (bad) cli cli stc (bad) cli cli stc (bad) cld cld sti (bad) (bad) (bad) cld cld sti (bad) cli cli stc (bad) cli cli stc (bad) cld cld sti (bad) (bad) (bad) cld cld sti (bad) cli cli stc (bad) sti sti stc (bad) (bad) (bad) (bad) jmp add add add movsb movsb movsb (bad) (bad) (bad) (bad) (bad) std sti cld (bad) (bad) (bad) (bad) incl jl inc cld jecxz (bad) cld loop add (bad) (bad) (bad) (bad) (bad) fdivrp sti sti sti (bad) stc stc cli (bad) stc stc cli (bad) sti sti sti (bad) fcmovnu (bad) sti sti sti (bad) stc stc cli (bad) stc stc cli (bad) sti sti sti (bad) fcmovnu (bad) sti sti sti (bad) stc stc cli (bad) stc stc cli (bad) sti sti sti (bad) fcmovnu (bad) sti sti sti (bad) stc stc stc (bad) cli cli cli (bad) (bad) (bad) (bad) jmp add add add movsb movsb movsb (bad) (bad) (bad) (bad) jmp (bad) push in incl jg inc std in (bad) std in add push in jmp (bad) (bad) fcmovnu (bad) (bad) fdivr (bad) fdivr fcmovu fcos fcmovnu (bad) fcmovu fcos (bad) fdivr (bad) fdivr fcmovu fcos fcmovnu (bad) fcmovu fcos (bad) fdivr (bad) fdivr fcmovu fcos fcmovnu (bad) fcmovu fcos (bad) fdivr (bad) fdivr (bad) (bad) (bad) jmp add add add movsb movsb movsb (bad) (bad) (bad) (bad) (bad) (bad) cld (bad) lcall xorl incl jle incl xorb mov (bad) (bad) (bad) cli sti (bad) clc div (bad) clc div (bad) stc clc clc (bad) fnop fdivr stc clc clc (bad) clc div (bad) clc div (bad) sti stc clc (bad) (bad) fcos sti cli stc (bad) stc clc idiv clc div (bad) stc clc clc (bad) fnop fdivr stc clc clc push div (bad) clc div (bad) (bad) (bad) (bad) jmp add add add movsl movsb movsl (bad) (bad) (bad) (bad) pushl jp decl (bad) (bad) (bad) (bad) (bad) (bad) lcall jle incl cld (bad) (bad) stc div push hlt repz div call (bad) aad div cmc push cmc repz clc clc hlt (bad) (bad) push jmp in (bad) (bad) push (bad) (bad) (bad) cmc (bad) clc clc hlt push div call (bad) aad div cmc push hlt repz cmc repz std std cld jmp add add add movsl movsb movsl (bad) (bad) std (bad) (bad) push cli pushl (bad) (bad) cld idiv (bad) cli cmc idiv (bad) stc (bad) lcall jle lcall clc std (bad) clc hlt cmc push hlt hlt call aam push repz push repz (bad) cld hlt ljmp sar push and ljmp sar (bad) cld hlt push cmc hlt call aam push repz push repnz repnz cld cld cld jmp add add add movsl movsl movsl (bad) cld cld cld push hlt repz clc cmc cmc call aad push hlt repz repz hlt hlt (bad) (bad) cli std incl jle lcall clc cld (bad) clc cmc cmc call aad push hlt repz cmc repnz (bad) push decl and (bad) mov and push div call aam push hlt repz repnz push repnz (bad) sti sti cld jmp add push add add movsl movsl movsl (bad) cld cld sti call rcl call aam call aam call rcl call rcl call rcl (bad) fcom (bad) jmp fcmovu incl xor (bad) mov (bad) fcom xlat call aam (bad) fcom aam out (bad) call mov (bad) mov es (bad) fnop aam aad aad aad aad aad aad aam aam std cld sti jmp add push add add movsl movsl movsl (bad) sti sti cli push repnz push hlt lock aam push icebp out push out out push out out push icebp lock fcom aam push cli call jge call jecxz jmp fcomp (bad) stc cmc repnz (bad) cld icebp ljmp sub call daa mov (bad) (bad) std repz fcmovnbe aam cld cmc idiv xlat in jmp jmp (bad) std cld cld jmp add push add add movsl movsl movsl (bad) cld cld clc jmp out (bad) mov fcmovbe push repnz (bad) in out in (bad) in in in (bad) out out in call rcl push lock (bad) std repz xchg leave mov add mov ljmp and jmp in (bad) (bad) push ljmp and jmp (bad) dec loop incl (bad) aaa lcall sti sti jmp add push add add cmpsb cmpsb movsl (bad) (bad) cld idiv stos mov incl sbb (bad) stc imul (bad) out out ljmp in jmp iret into int out in in push in in (bad) cld icebp hlt call mov decl pop (bad) ljmp stc out call aam push repnz (bad) cli imul ljmp and (bad) jle mov call lock cld stc stc jmp add push add add movsl movsl movsl (bad) sti sti clc push cmc in jmp and (bad) clc imul push out jmp out in in dec into int out in in (bad) out in jmp cmc lock (bad) (bad) cli idiv push xchg lcall movsl (bad) (bad) (bad) cli hlt push icebp out call iret into (bad) out out in push lock (bad) (bad) stc hlt decl cmp bound cmc push lock (bad) cli stc clc jmp add push add add movsl movsl movsl (bad) clc clc idiv iret iret lret fmul call and call (bad) int3 call ror dec iret int3 dec into lret call ror (bad) fnop int3 call and call cltd incl mov mov mov call rcl call iret iret (bad) fcmovbe sar mov mov call cltd call and call lret (bad) cli cli idiv cmpsb cmpsb movsl incl add push add add movsl movsl movsl (bad) clc div (bad) ljmp (bad) fcom int3 jmp sar shl push repz out ljmp stos (bad) mov call div call test jmp rcr (bad) push clc dec (bad) incl test jmp (bad) jmp sbb (bad) sti stc idiv cmpsb cmpsb movsl incl add push add add movsl movsl movsl push div jmp out (bad) call int push repz mov sub call shl (bad) (bad) lret cli call decl and call aad (bad) out in call call cmpl incl xorb add scas (bad) clc out lock into int3 push icebp out mov (bad) in in in clc clc cmc jmp add push add add movsl movsl movsl push div jmp jecxz jmp in dec leave enter in repnz in mov daa mov call sub push icebp out into int3 enter in in out (bad) (bad) in repz xorb (bad) (bad) in (bad) (bad) in add (bad) (bad) in repz in call enter in call in push div jmp add push add add movsl movsl cmpsb push cmc hlt jmp in jmp in dec leave (bad) jmp out (bad) jmp jecxz stc mul call into (bad) (bad) mov daa mov (bad) in ljmp out jecxz jmp jmp incl jg inc std in vpmulhuw add (bad) stc jmp (bad) ljmp jmp out jmp in jmp in push cmc hlt jmp add push add add cmpsb cmpsb cmpsb push div inc (bad) mov enter mov (bad) rol call and (bad) mov int call and call rol dec enter mov dec mov ror int3 pushl pushf outsl incl jg incl jg pushl pushf outsl call leave int3 dec mov inc mov mov inc (bad) div jmp add push add add cmpsb cmpsb cmpsb push div jmp loope jmp loop inc mov jecxz loopne in (bad) in ljmp adc mov jmp (bad) in ljmp mov loopne jecxz loopne out loop lock (bad) fmul int cmc out (bad) out in jmp loop jmp jecxz inc mov jecxz loopne loop (bad) loope fdivrp div cmc jmp add push add add cmpsb cmpsb cmpsb push hlt repz (bad) fdivr loopne fdivrp ret (bad) loopne (bad) (bad) (bad) loop (bad) ljmp (bad) out in (bad) jmp loop jmp loope inc (bad) loopne (bad) (bad) (bad) (bad) (bad) loop (bad) mov jmp loope jmp loopne (bad) (bad) (bad) loopne fdivrp ret (bad) loopne (bad) (bad) fdivr (bad) fdivr cmc hlt repz add push add add cmpsb cmpsb cmpsb push hlt repz fstp (bad) (bad) fdivr ret (bad) (bad) fdivr fstp (bad) (bad) (bad) loopne fdivr (bad) jmp loopne (bad) (bad) (bad) (bad) (bad) (bad) fdivr ret (bad) (bad) fdivr fstp (bad) fstp (bad) (bad) fdivr ret (bad) (bad) fdivr fstp (bad) fstp (bad) (bad) fdivr ret (bad) (bad) fdivr fstp (bad) (bad) fcos cmc hlt repz add push add add cmpsb cmpsb cmpsb push hlt repz fcmovnu fdivr fstp (bad) rol (bad) fstp (bad) (bad) fcos (bad) fcos fstp (bad) rol (bad) fstp (bad) (bad) fcos (bad) fcos fstp (bad) rol (bad) fstp (bad) (bad) fcos (bad) fcos fstp (bad) rol (bad) fstp (bad) (bad) fcos (bad) fcos fstp (bad) rol (bad) fstp (bad) (bad) fcos fcmovnu fdivr div repz add push add add div hlt (bad) (bad) aad fnop (bad) (bad) fcmovu xlat (bad) fcmovu (bad) (bad) fnop (bad) (bad) fnop (bad) (bad) fcmovu (bad) (bad) fcmovu xlat (bad) fcmovu (bad) (bad) fnop (bad) (bad) fnop (bad) (bad) fcmovu (bad) (bad) fcmovu xlat (bad) fcmovu (bad) (bad) fnop (bad) (bad) fnop (bad) (bad) fcmovu (bad) (bad) fcmovu xlat (bad) fcmovu (bad) (bad) fnop (bad) (bad) fnop (bad) (bad) fcmovu (bad) (bad) fcmovu xlat (bad) fcmovu (bad) (bad) (bad) aad fcom aad div hlt jmp add adc cmpsl cmpsl cmpsl (bad) clc clc idiv cmc cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt (bad) clc clc idiv cmpsl cmpsl cmpsl incl add or cmpsb cmpsb cmpsb mov cmpsl cmpsl jmp cmpsb cmpsb jmp cmpsb cmpsb jmp cmpsb cmpsb jmp cmpsb cmpsb jmp cmpsb cmpsb jmp cmpsb cmpsb jmp cmpsb cmpsb jmp cmpsb cmpsb jmp cmpsb cmpsb jmp cmpsb cmpsb jmp cmpsb cmpsb jmp cmpsb cmpsb jmp cmpsb cmpsb jmp cmpsb cmpsb mov add add add add add add add add add add add add ja jo je loopne jno jo add add jp loopne stos xchg inc jne jmp sarb jo jnp out js in les jne add add sub scas sub and scas int inc sbb jns mov movsl (bad) jae or xor lock xchg xchg (bad) ljmp es cld into jl push xchg arpl repnz cmp ljmp lock xor cmc das daa out sldt add pop pusha stc scas pop pop stc sti push push clc rclb neg dec dec (bad) leave sbbl loope jne aas add add cmp icebp cltd xor lock add add add add popa das loop pop sub sti mov (bad) lcall std pop push clc add add add add int3 jnp aas leave js lock in mov ss fs lods mov push stos mov xor mov popa das loopne push scas fs sti popa (bad) cli scas int inc in mov (bad) mov push int aaa call xorl xor lods xor add add jle jo jl loope jns jo add add cmp push cmp lock inc cmp lea ss mov inc inc hlt push inc cmp fnstsw repnz cmp icebp jo add add hlt jecxz cwtl cld (bad) cmp add add jo inc hlt loopne repz add add ljmp pop ljmp push aas lods inc sarb inc loopne lods inc add lods inc push add push lods inc push lods inc (bad) clc lods inc (bad) clc lods inc (bad) ljmp add and add add sbb test add xor adc add add add add xor and add add add jne adc add add add add xor add push add add push add pop add inc add push add dec add pop add dec add dec add add add add add add enter enter enter add add add add inc add add add popa add inc add insb add dec add data16 add add and add add push add popa add jae insb add je imul add add or add add add add je jb imul inc add insb add dec add data16 add mov add add xor xor xor cmp xor xor inc add add add adc add inc add insl add add je jae add inc add push add add push add add add adc add inc add insl add popa add jns dec add insl add add add push add add add push add add add add add add jb outsl add add je dec add insl add add add inc add add outsb add add add add add add imul push add jb jae imul add add add add add xor add add xor add sbb add push add outsl add add je push add jb jae imul add add add add xor add add xor add add add add outsb add add outsb add insb add popa add add add imul bound outsb add add add push add add jb imul outsb add insb add imul outsb add insl add add imul add add outsb add add js add push push push call int3 pop mov inc sub sub add cmpb jne movb mov push push push push call add mov pop pop ret push mov push push push push mov mov shr mov mov test je xor add add dec jmp pop pop pop pop leave ret dec es mov std or daa imul add xchg repz lret pop imul adc xchg jge movsl arpl sub mov xor pop push subl mov add add sub mov sub and sub shl dec xor xor xor sub push decl pop shr shr and xor mov mov 