xchg and xchg inc pop push adc mov pop sbb ljmp mov aaa lods lods loop dec mov cmp mov popa jnp xor arpl sarb std ds mov dec lret dec sbb mov test sub lock or iret sbb stos gs insl insl push fistpll xlat adc ds stos mov xchg ljmp push mov xchg dec in popa mov or andl jne ds (bad) fdivs or mov mov mov decl outsb push cmp inc mov icebp stos jl adc gs cmp outsl xor inc out mov int3 sbb push adc data16 adc sub push lcall push repnz inc pop lcall test test in pushf popa test mov sub cmp aad add push lock pop fiadd xor inc jle aas jecxz xor int3 push jne mov cs jns jp inc inc xchg add ss dec mov inc inc mov mov mov int3 in adc hlt (bad) movsl in mov adc jle jg leave cmp or movsb arpl sub leave jle arpl or pop in dec in insb jge or lods out adc stos cmc fwait mov es or test out jb lcall insb xchg sub and (bad) (bad) xchg inc mov cmp xchg std lcall mov xchg (bad) cmp mov (bad) cmp xchg xor dec rcll and lock int3 fldl and (bad) orl cmpsl pushf sar cmpsb sub or sbb outsl sub mov mov (bad) dec or sbb jecxz push xchg push in ds ja sahf (bad) out cs (bad) lret or dec mov inc ja pop popa movb fstpt push addr16 sbb je and or in mov in jg loop movsl lods dec push cmp mov mov sti call lea sbb xchg in out pop das movsb jne mov bound in xchg sub (bad) jle std or and aam push iret (bad) or stos and int std inc imul adc jle dec inc movsl loopne sbb loop xchg cli and into sub pop (bad) mov stos and clc insb adcl mov mov xchg inc cli ss push inc addr16 outsb cmp add (bad) repz push call mov push in jne mov int3 mov dec mov fmuls movsl (bad) xchg bound push jmp paddsw leave xchg fnop loopne mov ret add mov (bad) fistp adc ljmp cmp pop cwtl std dec (bad) or movsb dec lretw push ficompl loop xor rol repnz pusha cmp xor jmp jns sub push push popf dec push ret or mov aaa mov scas pop out and jl icebp push repz shrl into cmpsb fsubr in sub xchg jno sbb movsb mov mov dec fimull lahf std pop repz (bad) into jnp pop ret pop stos (bad) dec js push andnps out mov mov adc mov outsb int ljmp inc lock add imul add data16 out jl add jnp mov lock mov push jge cld icebp test lock aad xchg (bad) bnd idivl rclb xchg push stos or mov sbb adc cld int ret mov mov daa sbb cmpsb sbb mov push adc enter push sub sbb add arpl mov fcom popf xchg scas repz faddl sbb int pop sarb es dec jnp pop pop mov mov ss add push cmp ret push mov in int3 mov xchg call in out data16 or jle mov xchg dec std dec mov jmp push outsb cmpsb into std add arpl (bad) pop test aas xchg data16 data16 lcall dec push or lods inc insb test push ret scas int3 push adc in mov fs jp inc mov xchg ljmp jo ret push insb stc iret push mov mov into fistl jge std and add popl and adc push movsb ficomp pushf das cld jns jnp into mov into repz sub sub xchg sbb aas scas sbb fcomps or lock mov movsl out data16 mov cmpsb jge cld hlt test pop je push adc lret sarl or incb lods (bad) call ret mov mov je dec scas imul xchg and js in iret cld lcall xor jecxz mov out xchg in inc je pop push in es jle jecxz mov adc daa lcall sub push into lahf jno xchg out push out jb mov repz iret xor jae push sub push sbb dec adc pop add rcll adc mov dec cmpsl (bad) std push push pop outsl push dec or in inc xchg adc fistl xor aad rcll xchg xor sbb sti mov push and out pop or cmp jne inc push loopne insb add movsb mov subl adc in insb ror sbb mov pusha cmp inc gs cmp push push (bad) (bad) push rorb andb cmp sbb insl jns or int sub mov cwtl pop jns stos repz xchg sbb scas pushf enter insb mov imul lcall in mov fs sarl out mov aaa push mov pop sub daa inc das jecxz jg (bad) push mov jle (bad) xlat sub loopne xor push push jmp fildll xchg rclb xor pushw and iret xchg data16 call sbb adc sbb adc mov mov mov (bad) dec sarl cmc jo aad scas dec js inc fidiv dec mov pop pop roll in out (bad) decb sub mov ja mov mov int cmp fs push ss fisubr cmc (bad) adc cli jp imul scas sbb push sbb in dec jns inc ljmp fnop sahf cmp in add push test jne addb mov lds or sub test (bad) jns xchg adc int3 popa cmc push xor std mov pop fdivl pop sbb push rep pop mov xchg push in fidivr dec cmpsl (bad) mov pop jnp mov insl mov mulb push movsb shlb push fisttpll lcall (bad) sbb mov jp (bad) (bad) movb push aam jo jae (bad) int3 cmp jmp mov xor xlat in ljmp out add out xor aad (bad) adc inc mov dec mov xchg popa incb fucomi fcmovbe mull dec fistp push mov scas mulb or inc push jae addr16 lea sub pop sub das repnz push insb sub movsb xor data16 imul scas (bad) jle pop (bad) out das mov adc cmpsb lret shrl loop push push push push mov mov popf sbb jmp push mov les jno call lcall add enter push stos data16 mov fsubp iret rcrl cld jbe mov xchg iret xchg xor push scas inc out rorl cmp jnp sahf lcall fcmovnb inc fstps push jns xchg fprem1 adc imul push loopne jbe outsb cmpsl xchg dec in mov fidivr push popf sub mov inc aam mov enter mov ds sarl (bad) into sbb in icebp lods dec fistpl rcl cmpsb cli call iret jno icebp aam mov (bad) push jbe das dec fldt std int or sbb popf lcall pusha cmpsb fcomi ljmp and xor push repnz fincstp ret mov aaa adc push ret mov popa cmpsb push icebp in inc mov push xor in shlb leave insb cmpl shrb add dec xchg es mov imul sbb push sti es (bad) clc inc das sti jl dec in adc sti hlt add mov or or add daa fstp cmp mov dec in fimul (bad) into fistl dec mov cld loopne fcmovbe jmp js (bad) cltd mov mov sbb xlat shrl (bad) repz mov out lret cli out cmp sahf inc (bad) adc dec paddd decb mov pop fwait inc rcll jnp into and ljmp (bad) bnd aaa mov xchg push testl adc call jae scas xor xchg loop sahf loopne adc insl popl mov pusha cmp clc icebp push imul leave lock (bad) faddl mov xchg insb xchg add jmp (bad) mov mov loope jne mov stc adc and test inc sbb out and leave cmc aam cwtl mov mov popf cmpsb jl testb popa (bad) outsl repz cmpsl ret jg ror rcr cmpsb repz jp cmp scas mov out mov mov std fiaddl inc cs test inc dec jmp addr16 mul (bad) jns out mov popf jle icebp data16 in inc add loopne and in inc xor jle repz sbb cmp or pop pop pusha push in in push push (bad) in inc inc icebp jns andl inc adc imul imul out sub cmpsb xor mov adc aaa mov xor jecxz int3 inc and leave orb leave aaa xchg push adc popf xor addr16 and mov movl xor in ds aaa insl and subl mov pop mov sub insb ror pop mov subb push push dec ss or data16 ljmp xorb xchg loope sub sbb loope push jmp js data16 into and xor xor push icebp sub int3 add push adc cmc push push stc mov (bad) nop pusha xchg cld scas inc add aas popw adc hlt fstpl mov fisubrl pop jmp repz jbe mov adc dec pop mov or cmp sub std mov lcall xchg ds jl imull les js and ds add xor jmp cwtl jbe and mov jl or mov cmpsl loope push or repz loop (bad) cmc inc push mov js inc addr16 aas cmp sbb push shrb add pop push jecxz insb cmp xor or push in cmp pop inc lahf imul mov test arpl fchs adc call mov pop adc pop sub jns cmp insl mov dec pop movl xor pop sub and iret xor pushf adc mov xor and push lcall in sub shl xor add sarl notb sub or and sub dec push xlat or inc push and out cmp imul pop xor lds cmp shll testb jbe out pop inc adc ficom cmp inc mov ss and sbb sbb jmp iret (bad) or idivl add into dec push out jecxz pop mov repz out jne jge lea adc rol into pop inc or dec cs ljmp ss pop addr16 and sub xor push xchg in por loop xor loope (bad) or scas lahf jae sarl hlt cmpsl lcall mov lea and jge aas mov push add mov mov cld jle adc jmp int3 (bad) pop adc cmp lcall data16 mov movsb pop adc popf mov out xor (bad) cmpsb mov lcall pop popf adc ret andl and icebp ljmp fs pop pop aaa jl ja bound cs and or and ss jne xor clc pop cmp xorl cmp and out cltd inc loopne pop notb jp push cmp jecxz pop cwtl adc (bad) fbstp sub pop shrb mov lret (bad) stos inc test push loope dec and (bad) decb loope push cs cmpsb sbbl dec and data16 inc das sub xchg add cmpl loope je sbb add out aad pmulhuw pop cwtl stc dec jo icebp push orl adc adc pushl repnz cmpps add xor les aas (bad) lock xlat and add fisub into inc adc dec xor mov or and incb pop inc push (bad) mov xor xchg cmp jl test pop inc cld and loop es and sub repz loop pusha pop loope cmpl and push out les dec sbb push mov mov test mov lods push imul in sahf push dec sbb cwtl fwait or cmp lock test xchg jo inc mov mov mov cmp xchg xchg pop xchg sbb sbb jns es xchg push fwait or mov ja push push fidivrl xlat sbb inc addr16 (bad) fiadd xor or xchg les cwtl sbb mov or xchg jae loop xor push es test xor inc push pop call fstps mov xor in out and sub imul in mov jmp and inc ljmp lahf rolb inc sub adc mov xor mov popf enter test add mov push js and scas les (bad) outsb adc and dec mov or jno test pop and ret jge add mov push mov inc fistp push sti or (bad) test sbb (bad) or out fdivrl jecxz lahf aaa mov xchg fistl jbe mov pop or (bad) mov pusha stos jbe test jecxz cmp dec xchg xor aaa lret lgs push lret movsb push or adc ja movsb jmp das je ljmp sbb sbb sbb sbb jbe lods jp add push popa jnp cwtl pushl stos inc pusha (bad) lock mov adcl cld aam shlb rcll fs call aam jb imul (bad) ljmp or and addb insb aaa jge aam popf xchg clc dec pusha loop push dec sub (bad) (bad) sbb sbb push dec in aas imul out mov (bad) push cs sti sub or dec xor jp mov aas shrb loope jbe inc (bad) jge mov jl dec sub mov icebp jg (bad) sub sti (bad) loop pop sbb dec xor int3 arpl fstpt nop les mov mov dec sub inc ficom pop (bad) js sarl cld in mov (bad) loop jno,pt out lds loop pop fdiv movsb repz std dec add outsb fisubl xchg faddp lret sbb or imul push jp sbb int3 repz xchg sub mov rcll fwait int3 out xchg outsb push js mov ljmp xchg cmp (bad) dec mov add push mov icebp lds int3 (bad) sub fist dec push mov xchg (bad) jge xchg ret or adc sbb lret sub stos ss adc fistp in adc or and daa insl cmpsl repz and pop adc (bad) fld jp sahf ds dec sub scas dec enter mov call (bad) arpl lds mov mov and cmp imul cmp lret cmp test enter ljmp dec adc jg sub jnp jg pop shll push push leave in popa (bad) jle xor push and mov sti xchg mov nop int3 push mov rcll xchg pushf push xchg mov mov out jmp out jl mov pop xor sbb stos cmp cmc addb push adc push push adc (bad) icebp leave xchg cmp and sub mov mov pop inc pop les pop push lods es inc adc mov movsb arpl in or arpl sbb nop xchg rcll push cmc xchg add test jae icebp mov and bound or ljmp or pop out enter leave aaa das les mov lock jp ja add mov fisubr adc xor xorl cmp cli movsb (bad) inc lahf mov and sub dec xor dec jb gs roll (bad) sub mov sub iret cmpsb push mov pop add jl push cli cmpsl movsl scas stos or pop iret pop divl push mov out scas ret pop xchg inc sahf imul daa (bad) sti sub je cmp das inc out cltd (bad) cltd jp mov ficom mov mov test in imul pusha adcl imul ss jno push jae or jecxz jo sub int cs jb pop pop add js xchg sub xchg rcll xor cmc icebp add sahf jns xchg (bad) or aad es sub add pushf and lret in js sbb sub lods ljmp ja std orl in jg outsl and pop dec int mov mov push mov (bad) in xlat add and ja (bad) dec cld es roll pop repnz in hlt adc xchg mov mov inc push call push stos add xor push inc arpl push mov lret (bad) sub inc stc aad push xchg ljmp sub dec arpl sbb call xchg dec mov jnp push xchg rcll cs jae add and sti pusha pop sbb clc scas outsl xor xor pop (bad) push cltd out in fstl lds xchg into mov push mov add in loope sbb xchg sbb and (bad) icebp add roll push or sahf push call cs pop inc xchg (bad) sbb xor adc outsb in dec sbb orl cmp in pop fisttpll xor jae sub cld repnz jmp repz popf xchg cwtl push (bad) outsb push call rorl es pop sbb hlt pop mov cmp add gs or jecxz test loop iret test daa incb adc rclb out dec lods scas jae mov lret fwait sub add mov dec into icebp scas dec inc dec jecxz (bad) outsb sub jmp sbb dec pusha or out movsb inc push sbb dec (bad) dec cmp test nop mov dec pop push cmp jp add xor outsl fdivl (bad) push jmp inc scas jno dec mov movb fidivl imul fisttpl push sbb ljmp loope outsl jg insl scas pop repz mov dec in dec ljmp mov movsl mov outsb cmp lea xchg adc imul (bad) lcall repnz and stos (bad) sub js push jl in imul jns imul push jo daa push pop dec xchg pop add pop sbb cmc lods xchg mov stos add inc xchg push aaa lcall cmc sub lock cmp int cmp js decb mov orb sbb cld pop scas in icebp icebp pusha add push scas addb pusha ds cmc jecxz (bad) divb sbb push ja loope xor push adc cmpsb adc std stos rclb xchg scas xchg call jp gs fcompl cmpsb dec ret mov adc stos lock pop jbe out mov out mov lock mov push xor mov in incl fidivr es xlat dec std ss inc stos test sahf mov repnz stos jbe mov add outsb iret add mov movsb adc xchg xchg and icebp pop loope and push jmp dec ss sbb mov cli xor sbbl js mov sbb fcmovnu or call jg int3 (bad) ficom fsubrl jbe lcall xor mov dec imulb xchg cmp mov cmpsl xchg cmp es aaa ret shrl insb fwait es insb inc shl pop cmp pop add adc push xor xchg dec pusha incl xorl fsubrp into sbb lret xchg in cmp cmp pop inc popa push jns movl dec cmp loop out xchg push add mov test mov jle es rcll cmp in rcl movsl ljmp push mov sbb add ss inc adc cmp mov loope outsb or stos fiadd test push jb in loope lods push cwtl jbe xchg decb dec inc (bad) ljmp cmpb mov push adc cli inc (bad) xchg gs xlat xchg mov push pop inc scas dec push imul loope in fwait cli shl inc and aas dec bnd in cmpsb pop jbe das cli repnz jnp xchg push rcrb mov int rol jmp lcall mov mov add or ret ljmp mov cmpsl jmp stos dec pop or fist stos dec jmp cmc push in or out sub push imul cmpsl (bad) mov jae divb add and out jnp cld out (bad) pop pop scas (bad) mov push mov or sti mov mov dec std inc pop ret into fidivl sahf mov cmpsl mov mov or jne dec adc jo pushf xor mov mov aam xchg mov sub fs out xor decb mov cmp mov arpl mov dec sahf sarb sti push dec dec out std pop loop mov out or jecxz cld jbe cmp jbe frstor inc fdivl rcrb and push cmp mov cmp sar mov pop fdivrs arpl outsb cltd ret sbb pop sbb cmpsb xlat loopne into sbb outsl mov iret push dec aad dec lret mov rorb data16 cmp jns xchg loop lds mov std imulb push fistpll pop mov sbb call sti mov lods mov ret scas daa mov xchg mov (bad) jns rcr ljmp repnz fninit mov mov mov lret rclb sbb aas (bad) into adc dec outsl fist or inc push xlat sub or xor lret frstor xor mov dec mov adc lods mov add jns pop pop and mov idivb or arpl mov out pusha adc cmp xchg cs xchg js (bad) sbb sbb inc stos inc xchg jb ljmp inc inc cld jmp dec inc jmp dec pop es ror outsb mov mov iret fmulp pop xorl daa mov add pop fisttp fcomps dec inc into das shrb add cmp scas jbe into mov dec push mov lret and cmc mov mov add leave in ss fild (bad) dec pop mov fistl pop stos mov inc inc dec pop scas mov jge pop push inc psubusw hlt dec addr16 mov lret loop and lods push or mov sti xor push out (bad) movsb enter dec push sbb outsb fisubr lods les hlt sbb loope in sbb iret pop (bad) fs mov cmp cmp repnz xchg (bad) shlb mov mov cmp xchg cmpsb out loop mov sti cs in cltd in push lcall adc in sarl fistpll jle mov cmpsb int adc xchg stc xchg adc daa (bad) call sahf and cmpsb fistp cs insb stos or dec mov jb lods lcall push xor addr16 sahf inc repnz pop ret push in xorl enter loop xlat (bad) outsb subb movsl outsl xchg pop xchg add ret ret leave (bad) dec ja adc flds outsb (bad) mov fdiv std and jae int3 in sub shrb in xchg push mov jns faddl adc mov add (bad) aaa leave (bad) push repz shr (bad) dec mov jbe aaa loop and jb les jno outsl divl or sbb jle inc or call (bad) pop jp out mov sub xor and mov xchg mov mov sahf outsl aas cmpsl cmpsb sub cmp ja mov mov (bad) decl cmpsb shrb sub inc ds pop or ljmp adc push fucomi pop divb test (bad) fidivr nop mov and fnstcw pushf (bad) adc xor (bad) push pusha ja push out cmp scas into (bad) out sbb push movsl push dec iret cmpsl imul out movsl notb out mov pop test xchg ljmp xchg ss cmp ljmp repz jne pusha into outsb push test scas push jnp cld idiv jle xchg add stos mov dec int adc gs (bad) popl mov adc jge lret dec lret mov sbb sub sti arpl sbb lods outsl out loop cmp add vpsraw test sahf jle mov or and or xchg ret or pop fldt mov mov pop mov push adc into jae in xchg sti repnz out and icebp mov mov xorl cmpsb adc aas shr xchg pop stos out movsl xlat scas sub mov out outsl sbb jne cld xchg rcl jg int3 cld loop dec inc fucomi cmpsl push xchg xchg (bad) repnz (bad) adc cld sahf lcall mov movsb push xor jne les add (bad) mov pop bound outsl scas scas imul cmp lret hlt mov push mov jecxz cmp push lods xor test xchg or es frstor repz ret into stc xchg repz lods mov mull push sbb (bad) call popa adc loopne adc pusha adc mov xchg jge (bad) ja cmpsl mov jbe push (bad) psrlq cwtl loope sbb fwait mov mov cli jg insl orl jmp (bad) fidivr dec arpl mov fs fwait in imul and add adc pop inc scas je inc std xor outsb roll ret add xchg push sbb mov pop out loope lahf in mov lcall fwait sbb ror push jp cmp xor jg rcrb push pop xor int inc cmp std xor add enter scas jge std add das xchg add dec push fwait nop stos ja mov lahf dec xlat mov (bad) scas mov jp std std jl lods inc decb cmp cwtl test fwait cmp sbb add jl test scas fldcw test lcall jecxz mov out cli cmpl jnp cld mov ss pop and test cmpsb movl push fwait jle inc push mov xchg pop cmc lcall inc cmpsb fildll jne push push mov stos into sti mov mov jo add pop stos in or inc push dec bound cvttps2pi mov inc inc pop mov add sub ret ret jl and insb (bad) fsub jle push (bad) adc pop push cmp jne dec push adc sahf inc jno pop popf movsb imulb lcall movsl mov adc fistpl mov push psrlw mov mov jle jp jle mov dec pop repnz adc ds mov cmp pop iret lods das aas sub jge sbb jnp jecxz jle (bad) pop ds push out imul push bound stos and cmpsb and aam add xor and cmc daa cmp pop cli add push fsubl mov cmpsl outsl or mov stos mov sbb mov inc push scas sti into jbe loope test loop mov jp cmp repnz jns mov mov jecxz dec xchg xchg adc sub adc mov inc push add mov loopne iret out ret xchg (bad) shlb sbb mov mov pusha or into sub test (bad) sbb and adcl ret xchg ret cmc and (bad) jl push fs dec fbld xchg pop xchg into jne jns push adc (bad) lods xchg into movsl repnz mov and in push jo (bad) xor jp and (bad) mov (bad) xchg lret fimul inc hlt ss pop xor pop push cwtl sbb sarb xchg mov mov jnp ljmp addr16 sub mov mov test add mov xchg (bad) ljmp jl lret dec cmp sub in test mov mov push stos popa xchg gs imul movsl push ret xchg sub mov fwait (bad) lahf push jmp leave out cs add mov negb add inc fwait sub int xchg mov or jge repz jb inc adc push insl adc out pusha sub daa adc inc mov dec mov fdivp sub dec jp add mov loop cmp push add iret outsb or sbb ficoml ja stos cs pop aaa cmp cmc or xchg stc fisttp or mov outsb pop mov scas mov sar movsb pop dec cmc mov rcr ljmp fild mov push mov imul xor add adc pop cmp jno call jp push divl popa outsb out lods add xlat xchg inc cmp cmp adc lock inc rep and push mov mov sbb push xchg adc xor ret fs mov push xchg lcall jbe jp jle fsubr inc (bad) jl jb or cmp push (bad) pop lret xchg ljmp cld dec leave pop (bad) cld xchg call xchg into jge jbe dec out leave jne addr16 xor dec jb cmpsl lods mov sbb mov add mov dec cmp inc in orb jae pop stos es push push pop bound (bad) or movsl push mov stos (bad) dec gs and mov ss xchg loop out (bad) xchg xchg mov into lds shlb ret test (bad) in cmp (bad) cmpl mov and cmp (bad) (bad) enter xor fmuls ljmp adc or push sub sbb inc mov cmp pop sub lods and adc cmpsl mov mov loope and push lret cli xor shl sarb ret lcall push mov xor (bad) es push push sbbb jo jbe mov shrb jnp idivb stc test mov outsb (bad) lcall in add insl dec sub leave jbe mov ficom mov mov adc mov arpl fs cmpsl lret mov stos xor ss cmp lar loop in xchg int3 pop mov lds xchg jno dec iret gs out iret pop mov jae out pushf arpl dec pop js mov lret xlat and decb xor adc jb xchg cld lret (bad) icebp negl mov xchg sub mov xchg pushw test or mov jecxz dec stos fcoms jns sbb movsl adc incb lahf ja ficom fs mov add mov add test lret (bad) dec sti mov stc or shrb xor movsl push mov sub ljmp jnp fwait lods call fsubs xchg scas (bad) mov ror daa out movsl push psrld iret dec sti mov sahf adc inc adc cld pop pushl pop insb enter scas cltd iret popf xchg addr16 addr16 inc rorb and xor in in xor jp (bad) std push loope (bad) (bad) (bad) pushl int3 es roll cwtl cld and cmpl pop push lret call imul fcom sub scas mov xor (bad) xchg jmp cmp lea stos aaa lds stos in stos cld jge lcall push add in shrl in stos cld jg lcall push sbb outsl (bad) mov and dec scas clc add pop pushf (bad) adc xor stos cld lds add sub outsl iret pop cltd xchg or mov int3 insb cmp lock iret in xchg shl mov push or push stos cmpsb mov and decb loopne test push imul jno lahf outsl mov push test sub scas adc sub cmpsb push jmp sub pusha pop pop and stc sahf jecxz sub xor sbb dec pop insb (bad) or xor int sti jmp jg sti sbb je and stos cmc mov xchg testb es xchg retw scas (bad) testb cmpsb (bad) sbb ds daa shl jno in lret dec mov push and mulb add push lcall scas cmp mov mov pop add adc scas pop aaa xlat xchg inc (bad) ja jge xor inc push dec xchg and stos in xchg push iret push incb xchg lret in push movsb add cs cld scas movsb pop outsb fs jl push shll sub mov mov add push jle call (bad) mov dec (bad) fidiv lock pop fldenv xchg cmpsb pushw sub sahf data16 icebp dec jg or inc popa mov inc (bad) mov and adc sarb fs sbb shlb pop addr16 push inc adc cmpsl loop mov xchg sahf cmp lahf mulb ds mov mov mov xor sbb shrb xor sbb into int adc fsubrl fnop push outsl out ret outsb fild je and sub adc fpatan xlat ds int std dec fs jmp (bad) (bad) fcomps aas cmp lcall out lcall loopne stc mov (bad) scas add push dec pusha xor loop in idivl push idivb or subl cs jb mov outsb cmpsb fwait pop and aam inc or lret insl mov call ljmp xchg jae xchg inc dec mov into cmp mov sub cli pop or mov adcb adc xor push push mov inc jmp xchg pop je or dec lret cmp dec es or dec mov jg mov jnp (bad) rolb repz cli fsqrt mov fstpl aas fidivrl outsl sub iret and mov mov dec hlt mov imul outsb popa adc daa cmpsb sbb bound pop cli xchg (bad) dec aam xchg dec fmuls sub mov inc into lret in in scas test push adcl inc in jnp (bad) cmpsb push sbb movsb push jmp movsl jb lcall sbb dec add push data16 adc test add fistp lcall adc loope or repz (bad) pop data16 int (bad) add push mov inc mov outsl and (bad) xor xor cmpsl push adc jo xor ja imul mov sub insb cmpsb sbb fisubrl push (bad) jge fs xor lret lods faddl dec sbb js mov xchg adc mov push adcl fisttpl lods jae or jl sbb arpl test jecxz int es xchg mov fcomps pop rclb sub (bad) (bad) pop push jbe (bad) pushw push or xchg js push pop jmp out xchg pop jno aam or aad int push outsb subl lret adc jp dec inc mov xchg pop loop push adc xchg push (bad) sbb iret jmp hlt or (bad) pop in (bad) dec call sbb leave outsl xchg movsb inc cld cli insl scas repnz (bad) ds leave cmpsb mov mov shr outsb mov dec (bad) mov dec pop inc and mov repnz dec and dec pop mov lds inc scas pop dec adc xlat and ja and out jae adc (bad) (bad) mov dec sbb mov fwait jbe cli pop sbb jb or ljmp addl iret (bad) aaa xchg lret es stos insb iret pop sbb lret pusha push jmp sar ret dec (bad) loope lcall or mov (bad) into bnd ret push insb xchg sub jmp jbe mov ljmp dec cli in nop (bad) out pusha cmpsb pop xchg out pop inc fidivl (bad) test ret cmpsb movsl pop push push dec pop mov in fimull ret cmp test pusha cmp jle cmp out or or outsb xchg ret loop pop cmp aas popfw xchg add loop (bad) out adc xor arpl or scas pop and gs push sbb movl xor lcall fistp bound (bad) addr16 aaa and fisttp maxsd inc or xchg ret or xchg addr16 mov scas cmp lcall push dec mov jmp pusha cmp mov jge pop mov and push (bad) or out mov xchg mov mov std loop push jb stos mov mov mov push sub lea out sub scas es fisubl sub jne jle mov push ds pop push pushf cmp add rcr std sahf sub jle fildll cmp into pop dec sub lea loop or jmp inc jb cmovg (bad) insb lret cmp lcall lahf mov sub lea scas movb sub pop jbe xchg push sbb les mov inc ret jbe outsb sub inc movsb bound inc addr16 xlat out es fcmovbe dec out scas xor cmpsb jge pop dec imul rclb rclb cld mov mov aas ret xor clc lahf mov fadd push inc pushf inc sub jge int3 inc out jecxz subl outsb aam lods xchg fldl jb pop pop stc ds cmc xor imul add mov test (bad) rcrb lahf or dec jmp into fisub test mov rorl sti movsl (bad) in sub insl xlat rcll scas push inc in (bad) outsl fildll and push sbb pop lret mov js mov cld push inc in notl mov rcrl mov gs cmpsb jbe out movsl sbb (bad) cld adc jle inc cmp data16 add in mov inc lods negb xchg or lods mov inc push inc insb cmpsb push popa imul lea ficom push int add daa jb push jg (bad) jbe push or incb mov imulb mov inc cmpsb jnp adc xchg mov fdiv and push mov repnz cmpsb int3 mov mov cmp cli sbb cs mov or (bad) sbb (bad) sbb xchg jge pop push icebp cmpsl shll pop pop mul dec ljmp xor loop (bad) int3 jp or mov call push fidiv mov ret fstl xchg push xchg insl pop push leave mov outsb (bad) iret pop fwait std push sbbb in (bad) mov ret ret jnp test pop (bad) jge (bad) and mov jne not lds fwait (bad) pop notl bound and fiadd cmp xchg cwtl mov insb test push andl popl cmc cli inc into jp ficom std add jno pop (bad) jmp push stos testb sbb mov test rcrb addl shrl call bound lods imull sbb adc scas (bad) repz push sti imul in std fsubrp jbe dec fwait repnz daa sub in lret xchg das sbb and and adc sub orl fadd jb xchg xchg xchg out mov pop xchg cmp mov mov mov dec and ja fnop mov stos sbb or sbb imul leave sbb cltd lods (bad) sbb mov xchg adc sub int imul jne std lcall (bad) or les js mov inc pop lds inc rep pushf loopne sahf xor or mov fcoms push cs ret and test loop ds dec mov xchg lret into rcl (bad) subl rcll jmp jmp jo jmp push mov mov dec (bad) pop mov jmp and jmp out add mov adc shl push scas scas mov out fwait xchg into in mov movsb in mov ret ds popa add xchg xor mov or not xchg and cmpsb sbb test icebp ret or adc bnd push cld (bad) jmp cwtl movsl mov jge pop (bad) leave pop pop addr16 dec stos lcall push pop cmpsb out std adc bound lods mov insl mov out xorl jge insl scas fisubl dec sbbl out popf mov push mov out xor repnz cmc popa mov mov push cmp je xchg mov sub jge sbb ret loope mov cmpsl mov gs push xchg adc mov mov mov pusha mov mov test (bad) lret mov push cmpsl sbbl ficoml scas mov or es adc (bad) stos movsl mov mov jmp inc or out mov (bad) jge add push in (bad) into (bad) cmc lods data16 mov cli sub mov cmp mov or add fiaddl jnp loop xchg lret daa push (bad) cli pop mov fsubrs cmpsb addr16 push outsb std clc out xchg insl (bad) stos dec sub and loop scas sub addr16 cli lock scas sub aad sub in fnstcw push jb sahf (bad) fmuls cmpsb jmp stos js dec pop xlat xchg mov test addl sbb js mov sbb inc lds xchg mov movsl fdivrl dec adc addr16 cld xchg movsl ds sar dec sub stc jge popa fnop data16 mov insl in adcl (bad) test dec cmpsb (bad) popa shrb test xchg mov scas xor mov roll pop insl xchg xchg or mov imul add je insb cwtl scas mov cmpsb pusha in jne and mov sbb popf cld popa cmp mov sbb (bad) rcl dec mul jbe outsl in xchg jecxz ja (bad) ljmp jge jnp xchg cmpsl jnp hlt cmpsb movsb daa lds xchg outsb dec mov jp rorb icebp jecxz mov lds dec lea xchg in out and cmp ret dec icebp push (bad) (bad) cmpsb jnp dec lret mov mov push dec not scas mov add lret stos sub mov mov or and mov push in ret ficom shlb ja movsl out cmp push xchg push loop,pt (bad) out lds adc xor into jb out fisubrl sbb sbb cmpsb adc jmp mov pop add jecxz jnp (bad) jno lret jno lcall out push test pop sbb ret push sub ljmp push cmp mov sub mov sbbl cmp into sbb mov adc mov test mov mov push loope xor loop les test push adc bound pop fdivrl out cwtl andl add xchg repnz pop mov lahf negb iret js int pop imul sbb jb (bad) lahf xchg mov fldcw add xchg mov xchg insb sbb xchg mov xchg mov mov xchg data16 fbstp lcall fs push inc movsb mov aas push xchg and jle (bad) jp (bad) mov or xchg stos mov pop lods sbb add js lods stos mov sbb lahf fisub mov cmp fmull push xor test mov divb mov sahf ret jl push mov bound ret mov push adc les (bad) not cmp cwtl das push outsb loope sti test lcall xchg aad sbb xchg mov jbe push (bad) cmp mov cmp xchg pop movsb xchg xchg xor enter dec or lahf sti xchg scas es out mov mov ljmp fldt fwait add mov pusha cmpsl or cmpsb das or out pop xorl inc push dec push mov push cmpsb iret and sbb sub pop (bad) test call cmp ret mov jmp aam mov push inc inc ret jbe mov popa fxch mov push insl fisttp push popl dec or ret in imul jg mov test into lods aam cmp (bad) cmp (bad) (bad) push xorl cmpsl daa sbb pusha lret (bad) jge jge repnz add je xor pusha shll in imul outsl jnp std ss int xchg mov cmpsb std xchg fmuls sar sub orl pmaxub and repnz sbb add stos xor movsb mov push dec mov lds jle and inc inc push outsl and stc adc pop repz aam xlat pop jecxz mov sub xchg mov mov add or mov jns enter dec loop lods mov scas push shlb push mov mov adc sub out inc sub push mov pop jge out jmp pop add popf adc fbld (bad) jle adc push insl stc mov add ss dec push nop adc and fcomi movsl sbb cmpsb cmp mov stos fidivr push inc mov xor adc jle cmpsb popa gs mov (bad) cmc sahf stos mov sbb mov cltd sbb nop in sahf scas fimull jle scas (bad) cmp (bad) push mov jg xor cmp mov (bad) ret mov stc cmp fwait pop scas cli stc (bad) and pop dec or lea flds ret repz fimul cmp fsub movsl lea add loop jb fsubp jae test mov jge,pt jmp faddp repz pop ret (bad) mov or mov (bad) roll jmp gs xchg (bad) (bad) mov add outsl cmpsb data16 pop (bad) scas fidivrl jle lahf scas push (bad) push xchg fcmovu lahf out fiadd cmp jae aaa adc (bad) sarb xlat push ds (bad) movl cmovg ja xchg jmp (bad) cmp (bad) decb add test sbb mov push mov lahf clc push inc mov xor cmpsb xchg scas add xor int lret push repnz icebp jl in fwait mov cmp and xchg hlt fildl loop dec fcomps jae imul cmpsl aad add pop mov es mov lods mov and xchg outsb stos shll in xchg scas xchg popa addr16 sarb mov arpl mov and dec cmp repz mov addl aas lods rclb pop addr16 cmp loop push push dec add fadds cmpsl lahf inc pop jl pop ljmp fiadd lea into mov mov xor fwait aaa loopne test inc das sub dec shl sarb fwait push push mov push and mov jg push dec jmp xchg mov enter and in add add inc addr16 jle pop jb int dec xlat or call sbb xchg mov insb in mov test movsb pop adc pop push mulb jb dec (bad) loope mov or imul lret cmpsb fcmovbe sub xlat ret hlt xchg test incb (bad) lcall mov adcl adc ret jae inc xchg xor cmpsl sbb repz push jne jb (bad) addr16 sub popf roll iret xor inc hlt (bad) scas lahf mov data16 mov mull jl int3 mov cs cmpsl adc jae add pusha mov scas adc adc das dec pop imul mov push movl ss sbb or scas dec out mov cli inc incb or adc push mov pop into mov jecxz mov test jge repnz pop dec es insb inc data16 jle jl ljmp (bad) cltd js out mov jp imul push lahf xor push inc dec cmpsb xchg mov ret mov mov cmc ljmp (bad) mov add pop pop xchg nop fs jmp mov cmpsb out into mov inc (bad) cmpsb add sbb jp fisttp xchg (bad) cmp arpl rol inc (bad) in fldt xchg stc xchg fiaddl ret pop fsubl daa fisubrl (bad) push pop test mov sahf push fistl test setae mov lahf je (bad) iret (bad) jbe outsl xor push mov addr16 mov stc pop push lret nop xchg dec in js inc xchg ss inc shlb mov repz mov fs into (bad) pop (bad) iret dec cmp xchg xlat jno je scas xor pop cmp cmp mov jg stos push push pop add xor fisubr int3 repz or (bad) mov or sbb jl mov xlat pop fs rcrl (bad) enter mov test dec or mov adc loop inc push sti inc add jl adc lock xor push cmp cli cmp sbb in jl mov mov in xchg xchg neg pushl push cmpsb data16 fadds pop scas int3 es and lods sahf das or push das sbb mov outsl ret adc add movsl cmp je sahf iret (bad) push iret (bad) clc mov pop jl dec clc mov mov in test or enter mov int (bad) ss mov push mov sbb (bad) mov out data16 or sbb mov repnz jge mov mov dec xor mov loopne mov mov in ret sahf (bad) or mov out imulb inc in push mov cmpsb sahf scas mov sub (bad) xor cmp stos push jno ret data16 (bad) and ljmp fimull adc scas mov stos fidivr rolw repnz push rolb cmp adc cmp loop mov mov jg movb mov daa into dec lock inc cmp gs sbb clc repz lea test push dec and outsb sti add mov or cmpsl fisubl sahf cmp addr16 jle cmp add popa cmpsl arpl out mov mov or hlt mov test mov mov and fiaddl sbb cltd stos cs cmp mov ret jp mov xchg sub mov mov mov cmp mov aad xchg mov in js inc cmpsl repnz fwait (bad) scas xchg stc in pop sbb fidivl mov push repz data16 sub loopne notl dec push pop gs or cmc adc sarb jb aas mov sbb push cmp add rorl iret pop inc adcl mov pop fildll arpl jle mov enter dec (bad) push nop ja sahf scas adc sti mov sub push es stos aad sub lret nop xchg ds in cmp push (bad) xor push or mov in sub aad cmpsb or sbb loope hlt push push fisttpl mov mov mov inc cltd je stos pop leave cmp ret mov (bad) rorb cmp jp lahf stos lds mov dec pop insb dec es xor movsl aas and cmpsb xlat xlat movsl or sti mov loope std push sub push xchg popf (bad) clc pop notl adc and lret cmp pop roll movlps mov mov cmp repz in (bad) pushf jl fist and pop xchg cmp aad popa and mov stos mov mov lret ja cmpsl push int3 lahf lret jae ret xchg in rcrl pop lcall xchg mov jmp cmp sti int3 xchg cmp scas lret fidivrl adc insl xchg mov adc mov out aad outsb mov les pop fmull iret jb mov cs test test fbld mov ret repz or dec jg cmp pop mov movsl cmp pop dec stos or push xlat out cli test rcr data16 pop sbb fldl xor rcl int in inc push jmp sub jae ss scas mov lret xchg jle nop fwait rcrl cmpsl mov stos fidivr mov (bad) jae out mov js cmpsb inc test xchg cmp (bad) mulb enter (bad) cmp loop and push sbb mov mov xor rorl mov mov (bad) or adc sbb sbb mov ret and repnz xchg adc scas stos lds jecxz fldcw cmp dec jecxz push and ficompl pop push js rclb xor and fwait movsb out lcall sahf mov mov pop and xchg stos push fldenv and add cwtl (bad) mov int xchg (bad) xor ret dec pop stos ljmp mov or mov dec out bound sub fistp mov pop fs xlat mov mov lcall pop mov jae dec sub mov inc or mov out xchg mov (bad) add daa or (bad) js ret jno enter mov and jnp and (bad) andl popa mov push js insl ss shl jae sahf jp jo lods xor dec dec sbb jnp scas scas (bad) out mov sarb xchg scas into insb sbb (bad) ljmp ja lret adc mov cmp xchg cld inc and add stos stos cmp inc inc xchg sub jo mov pop jmp fwait push pop sub mov mov push scas push in xchg cltd outsb push out arpl jp insl out jmp inc fistp (bad) mov mov xchg cli dec loop lds xor mov fwait and add loopne sbb (bad) insb (bad) mov (bad) jmp ret xor xor fstpt in mov mov mov test in mov sub pusha and (bad) push repz popa lret mov xchg push and add lea sbb sbb fcmovne adc mov xor mov xchg push cwtl jecxz push push (bad) or mov mov nop outsl aas mov cmp adc cmp adc mov dec lcall cmp push jmp (bad) cmpsb cmp add imul or lea add data16 cmp loopne lcall mov and lcall mov rolb xchg and mov (bad) cmp jecxz dec cmp push ret push (bad) aad rol (bad) mov xor mov (bad) in sahf push int lret adc (bad) dec loope std mov lcall in push fnstenv out jbe out push faddl loop mov lret sbb (bad) out icebp bound js dec pop stos sahf fmulp mov (bad) lret xchg mov testb cmp aad jbe pop std push xlat lcall rol js mov add xor scas xlat stos je jnp jb xlat push fiaddl adc cmpsb movsl cmp jb jle scas (bad) pop xchg pushf and mov jl,pn icebp hlt cmp lret in jno lods (bad) ret sub cli aad xchg or sub jno pop cld dec sub ret mov add daa fldl sti daa mov dec mov mull into cmpsb data16 pop xchg lcall (bad) mov dec mov imul aaa and aas dec mov (bad) lcall sbb xchg push fbld bound pop sbb add mov fadds push test dec fbld (bad) mov cmp inc fistp dec in repnz loopne adc iret sbb fwait jmp dec psllq mov mov jmp push scas mov stc in mov mov ror in push fiaddl inc and lods insb inc push adc add sbb arpl loope push pop and push cmp sbb scas fnstcw psllq or rol aam xor (bad) mov mov mov mov jnp add pop scas cmp cltd addr16 cmp jae std mov xchg aad xchg push scas push fwait or fsubp jle pop mov jp cmc test arpl repnz adc cmp push int mov mov and mov ficom cs das enter push xchg ffreep dec iret ja inc jae push fwait sbb mov jb ret mov dec loopne sub inc push add cli pusha push pop and out ja push and int3 cmp xor outsl xor sarl and push mov jg outsl faddl push push mov dec ret mov push ret pop es in pop mov sbb les dec xchg int3 add sub loop pop sbb in lods cmp pop arpl sarl sarb add addr16 lcall pop jmp and fbld test sub clc inc test test fdivs into or in into or lret sbb aaa rolb or fistpl cltd std leave cmp repz pop int3 (bad) sbb (bad) (bad) xor mov inc test mov out sub leavew mov fldt (bad) xchg xchg pusha mov mov shrb push (bad) movsl int movsb lea scas fisub (bad) hlt mov and lret and fdivl imul scas je sahf lret fsubrs into dec (bad) fistpl mov mov shlb loop (bad) lods sahf pop in sub iret dec js in stos shl dec cmp mov fwait push int mov sahf into or imul out inc lcall fdivr pop imul mov popl pop mov pop lods dec outsl movsb sbb pop cs je popf movsb jo (bad) out (bad) movsl dec and mov cmp ret repnz cmpsb xchg imul subl cmp les jge cld je mov fucomp out lods ret cli push mov (bad) aad in cs push adcl cmp test cld scas rcl mov (bad) add stos mov sbb xchg or xor (bad) pop aad mov mov insb push xchg mov inc sarb xchg fisttpl rcrb adc jnp mov mov cwtl (bad) sbb call sbb stos insb lcall enter int3 sti cs cld jbe out into mov push mov cmpsl and dec mov shr adc (bad) and addr16 mov mov lret mov imul xor icebp lods jmp iret and jl jmp fcmove cmp inc mov movsb sahf ljmp xor mov mov fmuls stc out out imul mov fistl fdivr mov inc jnp ret int aas and test dec mov enter int fild in xor (bad) icebp scas mov push fild stos add mov das cmpsl mov inc cwtl cmp cmpsl xchg stc mov mov inc ss scas mov ja mov into pushl (bad) mov xchg int sbb sbb in out push fstps cli adc mov test fisubl add sti jg jb sbb movsl gs cmpsb xchg sbb push mov (bad) scas out xor cltd xchg data16 loopne cmp push int3 mov dec sub pop adc push xchg mov mov xchg mov cmp xchg inc movsl pusha jge and jg loope mov icebp xchg out mov les aas shlb mov mulb out shrb xrelease dec mov dec pop hlt jecxz and push (bad) xor sbb cli lock nop mov in sti cli pop das lods mov sar sbb jp hlt ret mov repz pop roll jb repz push adc imul add push pop daa loop sub xor jmp jg popf jno fiadd ja (bad) int lds adc push and push divl (bad) loopne adc js mov (bad) mov lret hlt pusha mov adc xchg (bad) repnz cmp sbb (bad) out xor cmovl xchg xchg int cmp xor cmpsl sti inc out and mov fistpl fisub sbb fldcw stos mov mull in shr add inc (bad) sbb push lods out out in pushf mov rcr in push fisubl es jg cld addr16 (bad) ret sbb (bad) popw xchg outsb sbb pop ficompl mov cmpsl xor imulb xchg sahf out xor pop stc jo pop (bad) dec push rorb fwait mov add mov mov jmp adc add mov test dec psubusw lretw mov xchg or sahf sbb xchg loop push imul aaa adc sbb imull inc idiv (bad) cld movb xchg or mov fildll or fiaddl adc mov les leave or push mov (bad) push jnp sub fcmovu mov pop mov pop xor mov ja pushf cmc xlat (bad) lods adc mov pop sub (bad) and leave scas mov fimul or inc mov sub cld mov out fcmovu inc shll inc dec push add and mov in les jns add lret vmovq mov jae or pop ljmp sti scas movsl (bad) movsb test xor mov stos inc aad out cmc loopne sbb mov lret pop aam cltd lods or movsb leave (bad) adc lret das xlat (bad) sarb xlat push push or sti mov sub and mov and mov sub add pop stc mov xchg pop je and adc fsubs ffreep outsb fdivl push jg cmpsb (bad) loop dec and iret or add out out xchg cmpsl js push push aad xor dec in int bound or sub inc xor outsb faddp loop xchg dec mov mov fisubr cli mov movsb sub dec (bad) divb mov (bad) mov call mov mov sbb fildl aad out sbb loop sub ret arpl mov bound sub insl push lret mov cmpsl dec sub xor sahf dec sub xchg push xchg sub lcall cmpsl xlat mov (bad) mov gs mov das stos icebp mov ljmp adc adc out xor xor mov push mov inc data16 mov notl (bad) pop sbb mov lretw xor mov stos mov push cmpsl repz stos aas cmp adc pop mov mov pusha lcall xchg pop cld sub enter sbb and cmpsl aaa inc into lock mov cwtl (bad) lahf aas lcall mov pop hlt mov data16 ss jmp ret outsb mov jb and adc cmp mov loop or es lret sbb push out loop cli sarb adc pop fistpll inc fsubs stos stos ja insl pop das fcomps dec xchg mov shll cmp mov dec fwait ret scas (bad) stc repz push addr16 (bad) jg test xchg push insb ss sbb and xchg imul (bad) xchg scas in js push (bad) testb addr16 sbb iret jne pop shlb ret xlat and mov jb pop pop addr16 and and test mov add cli sti pop jns (bad) cmpsl jb sbb inc add mov sbb xlat lret repz arpl into cmc pop push leave loope xchg mov decb inc neg rcrb nop minps sahf enter shll or mov mov into mov mov bound outsl jle and adc sub fwait inc ficom addr16 jne sbb outsl mov pop (bad) jo outsb sub jns int test das mov pop mov repnz scas inc mov (bad) xchg cli cltd sbb xchg xchg inc mov dec std fsubl inc cmp pop mov push fs push mov inc sahf jp clc jne mov xor movsl (bad) leave out mov cwtl imul jae mov xor scas mov adc dec loop mov jmp or scas mov push addr16 insb mov rcl test sub dec dec xchg popf add in push fisubrl incb xchg les (bad) add inc mov adc and inc daa outsl jbe lods data16 (bad) xor mov xchg bnd into sahf pushf popa mov lret mov lods test ljmp add jbe or pop and lret int mov push pop test mov and add or arpl mov xor rorb scas push scas jb or push or jge dec add (bad) (bad) xor outsl cmpsl insb lds popl loopne repz ret call ds jns mov mov jle add (bad) sbb dec repz push xchg mov outsb test lret outsb jno es mov ja popa popf data16 fildll test (bad) xorl lods sub out cltd jbe dec add sbb test cs sarl pop icebp xor leave movsb and inc movsl cmc popa jo (bad) or mulb iret sbb mov arpl xchg and lret mov mov ret or add xor mov adc xchg insb ret lret or add mov and std cmpsb std (bad) bnd je dec ret mov test pushf dec push sub out int mov loope mov mov scas movsb call ret int3 loop xlat int3 clc je adc (bad) lods dec mov rolb sub addl pop and inc movsl int3 xchg or bound push movsb lods and daa dec repz jbe (bad) out inc mov xor jb outsb xchg jo sbb pushf int pop push xchg dec pusha hlt mov push jns xlat dec pop nop dec mov mov xchg test xor dec push in into loop jmp pusha push pop sbb dec loope int3 (bad) mov mov (bad) rclb push xor push mov cmpsl inc ds jg in mov jb xchg fwait cli adc stc cli xor or les hlt cmpsl cmp into or fildl out jp cmp cmpsb loope adc test jge scas arpl jge jns pusha cmp test iret fiaddl add lods push (bad) or (bad) iret repz ret (bad) je sub loope in sahf loop mov and jmp (bad) std pushw add cmp sbb scas lret mov dec xorl dec jae fdivrl ds xor imul jno ja dec shl (bad) rclb neg mov mov out decb pop mov cmc cmp js dec aam aam movsb mov cmpsl je xchg adc stos mov pop mov sahf outsl mov adc stos jne pop xor hlt sbb xor je xchg lods shll cs and (bad) mov xor dec addr16 out mov or test rcll mov sbb data16 aas dec js insl movl push or fstpl and add rcrb (bad) std mov incl test mov push pop inc pop fdivs push mov mov imul cmp popf lcall sub push sbb push fstps jmp mov sbb addl mov add sbb pop lret xor jmp test lret xchg cmp sbb stos mov mov dec mov cmc or pop sbb or xchg test mov xor jne (bad) push imul dec lea (bad) mov (bad) cmc stc push (bad) (bad) lret lret pop (bad) rorl (bad) in fdivl jmp jb push adc or adc push scas and jae (bad) jb mov jmp (bad) enter (bad) sti sbb movl shrb mov daa into test shrl or cmp jnp lcall arpl aam das push rcr mov lea xor jae int3 insb or (bad) push in (bad) fwait das cli mov sub adc add pop test shll fidivl mov scas mov fldt or loop pop (bad) pusha dec sub scas jb dec mov pop insl iret adc add mov rolb cmp and or sbb (bad) xchg fucomip rorl je call xchg lret inc sbb (bad) jae jbe in movsl mov repz add pop dec in pop fdivl mov lods and mov mov rorb mov xchg cmp leave aaa push or ret xchg in lock in push mov stos sbb cmp add xor jnp fisubr xchg test test push scas mull jno rolb adc fidiv repnz push lock pushf or adc sahf loopne xchg hlt dec outsl test fldt or mov xlat cmp jge enter or insb mov push icebp popa xchg movsl xchg adc mov pushf jle lret repnz cmp pop inc adc lahf fisub pop xor sbb pusha repz pop mov jno aam fistp mov jae jge aam in aas push loope add jl sub mov ja je jecxz ljmp xchg hlt ret mov into sti ret xchg mov nop push call repz cmpsb repnz sbb je fbld dec mov clc stc mov loopne xchg ret inc shlb add movsl adc out dec syscall pop push cli movsl sbb scas mov jge xchg popa cmp ljmp dec ljmp dec mov jge (bad) xlat mov fisubl inc push mov xor rcrl lcall push aaa cli daa (bad) or xor sbb (bad) loop push mov outsb lahf add jp and lret shr outsl add pop mov add sti pop popa movsb inc fisttpl aad in jb imul out fisttpl inc inc lea pop outsl inc ljmp sahf xchg cmc mov lcall arpl mov cmp lcall shl or xor repz cltd lret or mov lods push fucomp mov in or and int jns add ret aad pop es lds jge push sub add into test jbe dec xor and jp dec add jns jg repnz pop mov movsb dec (bad) mov scas jmp mov out clc lds mov xor fildl (bad) leave xlat dec pop add testb inc mov pop dec pop push adc leave enter inc shrl cmp mov adc clc push push adc or jne mov mov (bad) cmp sbb cs cmc (bad) or outsb loopne mov dec lahf jecxz xchg push jne into mov cmp imul mov clc cld push scas fwait sub out outsl mov into mov lea add in jae push fisubr and dec pusha cmp push push jo fwait mov push out (bad) icebp movsl cmpps ret ret icebp fdivrl into lock add inc mov pop lods (bad) popa bound mov shrb xor xorb jmp jp mov add es bound insb addr16 rorl cwtl push mov mov les push idivb lret sbb xor adc scas sbb xchg mov test and inc lret xor inc sbb imul jg cvtdq2ps shrl and adc cmp enter lret (bad) lcall out adc inc jmp inc xor mov pop test mov mov rclb push inc cwtl mov xor push add xlat in scas repnz rcrl lea fwait sbb mov fucomi icebp pop nop xchg ret js pusha shlb mov out or jns xchg pop sarl nop fimull add xchg bound fisttpll out sarl loop out addr16 jae mov cmp out lock xchg cmp or xchg test test nop add xchg mov les les insb xchg ds sbb (bad) jle adc cmp jp (bad) xor int3 arpl insl adc cmpsb xor lcall mov push stos mov scas jge jle mov dec out fs and and sub test xchg ja mov je jbe fcomp das inc push loop jbe sub xchg pop lods inc mov aad inc es sub lds push xchg test je in lds xor test test mov push or nop (bad) ret aad push mov lods pushf xchg mov adc ljmp incb push (bad) jle dec test pop (bad) mov aam xchg mov loopne mov pop negl test ficomp aad jns icebp mov pop pcmpeqw ja je adc (bad) cmp les aas inc data16 gs xchg in jns dec sub (bad) cmp cmp and mov sbb mov xchg sti xor inc sbb jp loopne pop ret call push mov (bad) adc mov pop fwait into cmp pop pop xchg inc push popf xchg scas sbb aaa xor add or cli scas into cmpsl mov jae lret imul hlt (bad) ror movl adc ljmp fidiv lret push dec jmp idivb push clc mov push jae sub pushf add fcoml dec pop (bad) or aas xchg sub mov push test jge push lock fsubrl sahf mov das mov add lea jnp outsb std scas mov cmp mov stos insb lcall fistl xor push or call cmp int3 inc icebp sub cltd out push cmpsl sbb sub iret pusha inc sbb (bad) mov add or loopne sub cmp and pop pop mov add jmp jb mov push add cmc adc nop push xor and (bad) outsb ja mov out fldenv (bad) push pop (bad) push sbb fcmove xchg (bad) loopne arpl aam push (bad) inc jbe stos or pop in push js push aas jg in jnp ficompl shrl xchg iret push dec fidivrl mov and inc inc mov mov jb out aam out (bad) rol sbb bound fimul sub iret bound push jbe mov pop (bad) and jb push mov enter add cmp out mov jle sbb push inc xor or (bad) dec jle sub int3 jecxz and fidivl insb jl pop xchg sbb fistpll std sbb sbb mov scas add enter pusha pop mov jl add sub mov test xchg mov fucom pop jae or adc repnz jns mov (bad) scas inc pop mov inc jle es hlt cmova sti mov jecxz pop es fwait mov dec xor push xchg jg loop sti jp (bad) add jge pushf js dec dec out imul dec mov imulb xor movsl fsubp and into outsl mov flds dec mov mov jbe aam jl sub push mov add lods xor aad and inc push (bad) or imul andb dec fwait enter lods mov stos cli dec or dec imul pop inc mov inc sub jle mov test (bad) iret mov pop mov aaa stos popa pop mov ret xchg js popf mov xchg or les inc adc scas dec sti sti jns stos pushf (bad) lahf loop outsl loope adc cmp and fs mov out sbb loopne cmc popa cmp das fs mov in rcrl call dec insb test sbb in dec rorb in sarb clc cmp push or push xor and cwtl popf xor (bad) addb enter adc mov movl shlb add push test icebp mov fcoml in jp add xchg add push mov cmp jb add dec in les aam mov loop sahf xchg (bad) lret adc pop arpl out (bad) in ficom jns inc sbb call inc bound loopne push lcall movsb jns mov adc jnp cmpsb mov jns xchg inc (bad) das push push sub (bad) in mov imul mov xchg std sub fwait sti inc mov jnp sbb pop pop fndisi(8087 int jne aam adc test xor xor lods mov scas int pop push ret mov and push mov push enter and xor mov and fimul inc ret int inc xchg je test mov sbb lea enter mov nop cld in sub mov fidivrl aam adc xchg xor adc mov add push in sbb (bad) dec pop (bad) out push sbb and int mov in sbb mov es pop sahf test aad jp mov push out mov incb push ljmpw sbb sbb xchg hlt (bad) adc dec repz (bad) and (bad) daa inc (bad) push fsubrp loopne fidiv (bad) mov or xor cli or loopne sbb sub push into inc faddp lcall adc sbb fnstsw mov push push push jne in inc add push fisubl fmull sbb pop fwait ds and out test into mov mov std mov aad xchg push jl je xlat sub sbb hlt into jns movsl adc add xchg out inc and adc pushf test pop inc sbb inc mov push add jp cltd cs jne aas cmp jns loop in mov sahf iret out dec or pushf add popa shlb or nop jne pop dec into push out in inc sti loop inc pop pop gs arpl sbbb xchg sbb sbb dec test nop mov jge sbb add mov xchg cmc popa into dec push push pop inc in mov lock aam fisubrl lret nop call popa in subl cmpsl jg bound add pop hlt jbe mov cmp jecxz hlt (bad) jb mov fiaddl test mov or jns mov ds xchg out xchg call dec mov or xchg mov pop jl or jg pop cmp sti loope push mov orb cmc inc bound mov fs mov pop int3 cmp stos mov push bnd pushf pop mov es ljmp out or aad in sbb mov cltd cmp sahf xchg out pop adc cmpsb pop xor mov inc ret cmp push ret stos adc jl clc mov fdivl stos add test mov (bad) in rclb (bad) cmc inc in int mov insb mov xlat mov mov adc scas aam sbb xchg gs cli movsl cli adc cmp inc test mov (bad) das imul test jmp dec push (bad) xchg mov mov xor jl and jmp push jle mov bound loop xchg sarb mov movsl add cmp inc scas push in (bad) push in push shrl push test dec sbb in ds push sahf cmpsb inc and jb xchg mov dec mov mul push mov xlat cli or ljmp or mov aas cmp aaa mov pop add or push mov lret test int adc (bad) mov xlat sbb mov and rorl (bad) dec pop loopne adc (bad) je dec dec push (bad) fcmovb call aad and (bad) xchg add out test (bad) lret jl jnp pop add mov fldenv xorl scas mov inc push mov push outsl ret and mov cmp mov jp dec lods (bad) jne idivb ret test push ficompl dec inc pop bound pop hlt mov xlat mov movd in cmp out push jno push push add or scas mov dec std jb push gs out mov push andl cmp and xchg shrb popa scas adc lret stos xor sbb data16 add rcrb (bad) dec cmpsb js mov bound or and into fidivrl ret mov mov sahf out dec push fldl xor dec mov xchg fisubr lret cmpsb push fadd mov scas adc mov into inc push fnsave dec repz dec ret aas les insb sbb imul fisubl xor fidivrl lcall out push mov fbstp and inc adc fcmovnu addr16 je lcall idivl clc xchg bound sbb aad sbb ret lret inc mov push (bad) dec mov addb or add rorb mov jb sbb pop or xlat jge popa push mov lret rclb out pop pop ret outsl es pop xchg jnp movsb lds (bad) stos lcall into xchg fcmovb or (bad) jno shll and dec mov ret repnz fisttp mov (bad) mov loope stos inc inc (bad) aam push bound xlat fstl dec dec inc repnz inc enter aaa add out int3 sbb dec (bad) xchg xchg inc shlb jae inc push sahf popa xchg cmp jecxz sub cli repnz repnz and bound or (bad) lret pop fisttpll cmp ret sbb push push decl lahf dec mov pop jle sub jle into jle in jne test pop or cld push loopne cmp inc fsubrs pop das dec repnz sbb dec push xlat div hlt bound stos lock das jl or movsb xchg dec hlt in dec push dec addr16 scas sbb jo cmpsb cmpsl mov bound mov in push push cwtl pop les test sti les inc fs in push push push push bound test fcmovu mov push xchg imul les push cwtl and (bad) push lods mov jbe or xor dec dec push jo xchg in fwait iret (bad) adc jge test push jg dec lahf jnp xchg movsb cmpsb xor imul sbb leave popf pop popa push lahf and jl lahf cld jns jbe sbb push outsl mov jmp and mov adc lods adc jle jnp jne out leave (bad) push cmpsl or xchg movsb mov push mov int hlt scas adc mov lret jae lret adc dec mov lahf (bad) mov pop dec fnstsw jl repnz data16 movsl or sbb push pop lahf jg adc push (bad) mov dec push addr16 adc sbb fnstenv sub (bad) repnz fistpl dec outsl out bound out stos sbb mov mov and push fwait test jg inc dec jae cmpsb jg ja xor mov movsl in daa mov add movsl icebp mov xor push scas lret cs xchg pop inc in jns jbe lahf mov loop outsb aas into mov pop and call add frstor cmp stos jmp into inc fwait pop aad mov fadd ss (bad) xor cmp mov insl pop (bad) scas push ss mov (bad) mov mov adc (bad) mov sbb dec ret jp aas mov iret ss sbb mov xchg mov imul jge sbb dec pop jecxz lret out mov dec jge sub ljmp dec pop dec cmc stos xchg in sti int push pop pop into pop adc imul mov lods or mov ja fcomi adc sbb rolb popf popf out push (bad) and loop cli jl call data16 testb pop lret hlt inc aam hlt movsl ret dec repnz fidivl jecxz adc cmp cltd add xchg add lret lds (bad) and fistp push out adc sbb cli xchg or pushf (bad) and jbe mov xchg cs push jg insl xchg cld mov (bad) push sarl pop cmpsl jbe out add in or jge hlt leave scas push mov xabort into or adc cli nop aaa outsl dec pop cmp jp ljmp pop call ret repnz mov mov (bad) dec push rcrb xor push fs mov (bad) mov data16 mov dec jg xchg mov xchg lahf cmpsb outsb into dec sbb call data16 shr push lsl ds or scas int lock xlat (bad) push push (bad) in lret cwtl or push mov mov sbb xchg push xlat push cmp std movsb das jno inc out jns jns cmpsb sub mov scas mov jnp es scas int movsb push mov sbb mov stos or push dec ja jne mov xchg aam and repz add cmp sbb cmpsl push pop popa into adc data16 push sarb sahf sahf in pop es mov outsb pop pop scas xlat dec out mov dec pop push lret (bad) ljmp fcoml pop repnz das shr sbb bound sbb arpl (bad) test aad mov push jbe (bad) push jb mov mov (bad) sub rcrb push arpl (bad) pop mov stos pop xchg ficoml aas rcl scas mov or mov push add xchg aam and inc sbb test notb mov mov fs mov fist xchg xchg ret inc pop (bad) xchg mov adc std push and push hlt mulb dec aad pop (bad) xchg and adc pop fwait mov add cmp mov (bad) or dec pop fwait xchg (bad) ja lcall mov (bad) inc mov adc xchg (bad) mov xchg cwtl jle sar jmp add mov dec fsubrs stos jb out gs push arpl insl mov xchg mov fcoml mov push ret inc cmp cmpsl es imul stos rcrb cmpsb sub mov incb clc rcll les (bad) push sahf push xchg fidivr fisub mov mov addl sbb xchg adc mov push push (bad) rol (bad) ljmp xchg movsl mov cwtl mov cld adc adc lret int in dec stos jbe mov (bad) aam ds aad add insl mov mov sbb (bad) pop (bad) mov inc and mull jle push ljmp xchg jb leave push sbb and jl inc setno push jae stos in into ja cld ror jno or mov fimul cmp sub cmc sub sbb mov lret or push push into enter shlb jmp mov dec (bad) nop pop add sahf pop (bad) mov test xorb inc frstor push out in mov and lcall pushf xchg ds sbb adc (bad) xlat mov jle push into mov jmp sti sbb scas add mov xlat sarl out pop (bad) es imul push sti int jbe (bad) sub sbb pop cmpsw rorb push pop mov mov pop sbb push aad push mov dec push add push pcmpeqb push (bad) mov mov aas sub (bad) aam dec xchg loop pop fdivs dec into xchg sti adc cmpsb cmp mov ds or (bad) out jl (bad) ljmp daa repnz in aas fcomp xchg or test mov push out lret outsl neg or movb scas test mov out pop sahf push enter pusha mov mov xor cld sahf jmp push push mov ss xchg stc sbb jns (bad) fs outsb push lahf cmp adc repz repnz fucomi out fneni(8087 int3 inc mov cltd addr16 xlat xor (bad) leave inc dec cwtl cwtl sbb lret ds pop xchg lock in mov data16 mov mov mov adc or insb in (bad) gs jae aas fwait mov cmp xchg dec mov stos mov outsl cld int3 call xchg push cmpsl xor (bad) jb nop xchg inc adc in in xchg sub pop lcall loop lret iret cltd jne or xor shrl dec lcall fstpl mov mov adc cli scas inc push nop ret cmp fs or sub add aas and (bad) push push or addl dec xchg fcmovnbe pusha scas (bad) mov and shlb pop push movd pop jp (bad) in and insb leave xchg mov lds jno mov (bad) sbb push jns call xchg sub out scas clc fs or je gs dec mull mov xchg lahf sbb inc test mov xor imul push into add rcll pop sahf push cmpsl sbb sahf das stc cmp dec inc xchg test popa or pop clc mov xchg mov (bad) das (bad) out pop pop in insb sbb dec inc test or (bad) shlb jp adc leave mov push daa jo dec mov sub into cmp out repnz fisttpll mov scas pop mov jo mov lods mov ja clc add adc (bad) mov shr (bad) mov xchg pop leave shl mov iret in mov repz test out das in dec inc jle enter sub cmp enter repz out mov xor lcall mov lcall (bad) pop lahf es outsb ret xchg mov mov xchg sub xchg cmp clc repnz int3 arpl mov cmp xor pushf inc in xor (bad) cwtl push mov icebp lods and ja in shr mov loope cli es or out inc icebp ret mov adc andb ficompl and pop xchg push outsl scas push cmp mov icebp insl cli fistl gs inc mov loopne or (bad) shrb dec mov jmp insb dec push ds mov popf out cmc jge push out call rorb fstps pop pop cmpsb lods ficom push str add jp movsl mov xor xchg out pop in mov and in pop cmc fs fistpl aas (bad) pop mov ds outsb adc (bad) xlat loop add mov sub aam jmp adc fisttp fmull loopne mov dec lahf lret jmp stos rol add addr16 aad in push push or (bad) push fucomip test pop loopne xor outsb aam pop (bad) nop daa xlat cmp mov insb aaa arpl push dec std cmpsb sbb jo (bad) cld cmc sbbb fs fwait sbb (bad) in sbb ljmp lcall cmp sbb cli daa jno add cmpsl stos sti xchg (bad) lret or push loopne outsl push xchg shlb ljmp xlat adc repz aam mov sahf out sbb scas or pop ljmp push add sbb clc lea lahf cmp outsb or cmp add scas push mov push mov cmp mov xchg mov mov xlat repz (bad) mov inc xchg sub arpl call rclb jnp mov push inc push pop dec imulb out jmp rol push scas lret in aam lret js push mov inc lret out push cmp std (bad) adc aaa scas call fs mov in add into inc rcll rol and dec les mov ja stos (bad) popf rcrb pop inc shll dec ja push cld push out sti inc jp stc pop in shrl insb sbb es ljmp inc add push pop bound xorps ds xchg test or dec sahf daa cmpsb mov iret les fxch ja ret vunpcklps rcll loop adc (bad) push dec pop mov das enter outsl push and addr16 dec enter movsl in test push inc bound maxps movsl push lds movsb mov inc mov pop test xor sbb mov in dec push sbb cs icebp dec xchg (bad) mov fst mov sbb add jne dec pushf sub inc mov outsb jp pop pop pop mov mov inc sbb ret cli lods ds sbb cmp inc jns sbb cmp scas fisubr jge xchg xor lret lods mov je pop xlat mov clc fisubr push jae es mov into dec inc or cmp mov add test or into add push stos iret mov lods mov ss je push in cld aas jne test cmpsb lea imul sbb mov in (bad) mov cwtl mov dec lock mov repnz mov (bad) scas lea ljmp jecxz lgs inc lcall daa push aam enter xchg loopne pop pop pusha fidivr sub hlt dec pop out pop fmulp shll inc xchg push inc clc add xchg push lea push mov sub xchg fimull cs add and lods out mov or jmp add push (bad) gs mulb sub es mov dec shll lret dec pop cli inc arpl int3 sbb clc sti cmc mov imul ds mov cmc push bsr mov movsb sub and test jb insl sti xchg fldcw cmpsl xchg mov push sahf test cmc and mov or pushf out cmp dec movsl leave rclb jge sub (bad) push inc push dec (bad) divb push jns or out or mov add arpl xchg and sub int3 jp xchg mov sub mov stos insb rcrl lods js lds mov add clc mov popa in (bad) jae std jge xor std sahf push fsts (bad) into pop mov mov mov lods mov jo (bad) push cmp dec (bad) lahf sbb cli orb fsubr xor es test pop lds fbstp push mov int3 jmp mov cmp push mov insb in mov add jl mov xchg test fist out sahf and lahf les push cmp xor push add and sbb int or hlt and ret ss sub add cmp test inc sub cld cli fldl xchg pop xchg inc sbb repnz sbb push adc std sub sub dec pushf inc neg pop sub test out jae dec aaa jmp and fldenv dec rcl xchg popf repz xor jbe inc nop xorl repz xlat cs xor in xchg jae dec in sub out xor mov hlt jnp adc cmp xchg inc std cld push sbb xchg loop inc repnz and jns pop jmp jp jge ret call in out cltd pop ss popa sbb add dec ret inc out xor fdivrs or jns lods and or xchg pop adc dec mov pop mov iret push ss xchg lahf das out push fwait std xchg jne push xchg xchg repz dec jnp mov dec and and out lahf fs cld (bad) xchg lcall (bad) sub sbb ljmp pop out or and cwtl pop inc mov sub iret test test scas xor cli (bad) cld mov xchg cli sbb cli push jnp inc jl cli adc jl,pn negb rolb push mov adc pop add sub jmp (bad) mull fcomps jne lods ja pop xlat cli adc mov fs xchg add (bad) add in mov nop push dec adc out mov inc fwait xchg xchg imul add out jnp sub push imul mov and (bad) std aam call ds push inc jp mov stos xchg faddl outsb loop int push mov (bad) sbb mov jbe pop cltd jnp dec int3 mov or in push inc jae idiv push mov pusha dec dec stos or daa imul aas adc mov (bad) repz (bad) or sub xor ss push push push push (bad) mov sbb stos repz sub lods lods idivl insb scas ljmp inc mov (bad) jne (bad) adc push cmpsl test mov ret (bad) mov xchg sti adc and sbb xchg adc add xchg add ja jmp test xor push cmpsl (bad) div dec adc cmp dec dec fs jl sub into sti mov push pop mov movzbl lcall pusha adc mov inc mov aas xor or or jg stos xchg xchg jno sbb ljmp out (bad) loopne int cmc mov mov jno cmp pop cmp push mov sahf mov mov std inc sub push arpl shlb insl in insl shrl movsb data16 in pop mov div add adc icebp daa rolb les push movsb cli jb repnz imul sbb dec dec ficoml xlat mov pusha mov ffree push bound gs mov lods popa jmp pop jns mov scas add insb aaa jne pop adc mov xor outsl pop inc inc sub fdivs adc mov mov mov cmp add jmp ret pop minps inc jp or in adc mov std hlt js addr16 sbb les ljmp xchg sti mov int xor jno addr16 ja (bad) fildl jne vcvtsd2si cs jmp imul and mul ja (bad) push jle inc adc gs pop mov jne cmp xor bound or and jnp pusha lock aas mov mov and pusha les fcoms cmpsl and add inc push fnstsw repz dec inc adc cmpsl ret xchg fs push fs rclb (bad) mov repz mov mov std dec cli xchg outsb cli faddl icebp repz cmp inc sti pop mov adc sbb mov pop pop mov ret data16 adc rolb dec sahf loope imul xlat mov xchg jmp xor lds mov sbb or stos push xor sbb out cltd imul xor subl (bad) cli (bad) jne test sbb int3 int3 jnp sbb or and loop push fs and scas lcall xlat imul mov adcl cli faddl add pop por (bad) and xchg rcrl inc mov test pop sbb bound cmp out jmp mov faddl int pop test add mov scas sub mov hlt xchg scas mov nop lret cmp loopne orb cmp sahf in or inc fwait mov adcl repz or and out push icebp xchg scas (bad) sbb xor mov lret cmp (bad) iret inc add out int imul notb ja xchg mov mov xor (bad) sbb pop out xchg fldl mov fwait pop xchg loopne sub xchg push cli jbe mov pop jmp out ss push or (bad) insb mov inc shrb dec cmp mov data16 repz adc fild loop xlat mov mov pop pusha pop int nop movsl movsb jge mov cmc or (bad) xchg ficom repz pop movb xchg imul inc mov lret in pop fucomp in pop sbb cld adc xchg xor pop and daa jnp (bad) rorl faddl lods sub movsl ror or in dec in ss dec mov jge cmp out adc cmp inc mov enter pop ja mov add pop scas lcall xchg sbb add out aam sar and jae xchg neg push jo xlat (bad) psubusw add dec inc (bad) sti (bad) (bad) lea mov and fstl (bad) dec mov out imul popf pop sbb cmp mov out jmp adcl in inc push xor enter jo mov pop lods mov jb sbb mov ret fcoms (bad) xchg add xchg adc or stc dec imul push (bad) jno inc lods je inc insl add dec ds xor fisubl cld cmp insl pop orb inc movsb jns and stos cmc cmp addb movsb mov cmp mov pop push or cltd pop daa mov scas mov and adc out sahf xchg dec dec call sahf xor mov daa adc push js in dec pop add scas mov mov jno pop leave mov iret and mov ss cmp test pusha dec mull sbb call leave adc mov mov mov adc inc ret fwait sbb ja push mov push sarb das xchg scas mov inc (bad) out pop cmp sbb (bad) mov inc fidivl adc cmp (bad) stc dec mov outsb mov fimul test mov push xor dec dec cmp xor pop pushf es sbb (bad) mov loope and leave (bad) lods add rep adc push pop push es sbb push adc repnz ret dec out out cltd loop push mov adc test nop adc dec jge test dec leave fwait sbb add loop cmc sahf cmpsb movsb push (bad) icebp mov je jle mov xchg sbb notl addb mov push push push lods ja dec nop mov pop adc stos jae rcrb sahf scas mov clc stos adc aas fild bound mov push inc xchg (bad) scas ret xor int3 imul add inc inc mov cmpl mov out (bad) (bad) lret adc repnz lret inc jmp clc mov push ja jo,pn mov xorl xor (bad) sub cmp call add stos cltd cli and mov es rorl shr cs out jl dec push std test add rcll sti fmull xchg sbb or rol jl in mov mov int movsl mov (bad) xchg hlt insl repnz loopne int lods ror fcmovb sub inc xchg std js adc lcall rorl (bad) jne into push push stc loop pop jmp int3 stc inc jno iret fdivs in iret xor leave bound pop pop pop in (bad) jbe push jns push scas sbb pop fwait add fidivr loope imul pop imul lret shrb fs cmp push dec shl mov mov mov ror nop add gs lret sbb and mov fcomi cmpsb mov xchg movsl lods loope mov lds test out inc rcll int3 xor push push and scas sub cld push fistl rclb cwtl sub ljmp and fidivl mov jbe (bad) in fs mov ja push stc add xchg pop mov push shr and (bad) int3 stos inc mov data16 dec mov dec jns clc sarb repnz mov gs lods cs popa ret xor fimull xchg xchg cwtl notb cli arpl bound fcom sub into fistl xchg jp xor inc (bad) dec xor insb imul pop (bad) mov adc lret push push nop mov loope fwait outsl es fidivl mov divb cmp or (bad) dec shll stos dec (bad) cs dec lret xchg cmp outsl mull fs pop movsb adc fnstcw mov push ljmp mov inc int3 sar imul ja push push hlt dec orb or add adc (bad) std sti insb mov jnp and ljmp je jno fs in std cmp (bad) xchg xor clc or jo cmp int3 add sti test jmp shr xlat fidivrl cmpsb (bad) data16 clc testb out scas daa pop sub mov or add std es int3 jae jle repz xor dec movb xchg or push inc push popa int stos mov dec dec mov pmulhw dec pop ss mul orb mov sub in mov jne cmp imul outsl push popl xor add lock adcb xchg cs loop aaa addb and lahf stos add push rol int es pop push cli pop inc xchg clc jne inc add push jb mov dec and inc (bad) int3 pop or (bad) lret mov mov adc outsl pop push notb cmp pcmpgtb imul adc gs and and inc xchg outsl sub sbb lahf (bad) sub adc popf inc mov dec sub and push (bad) mov sub in add cmp mov adc mov xchg mov and or pop pop mov fsubp sub push xlat cmpsl pop mov dec xchg push es in mov mov outsb push aaa and add jnp push sbb in jge data16 pushf jns int sbb mov or das test jne pop cmp push mov push ljmp pop dec int3 cwtl ret aaa int (bad) cmp jp int3 pop nop gs mov add cltd push mov adc pop jb dec sub pop in push push mov ss mov scas das add xorl or dec mov icebp add (bad) jne sbb pop pusha pop jl insl sti imul mov sbb push out and sbb inc inc clc lcall cli inc push scas add mov movsl outsb notl xor jmp imul dec or xor cli dec mov jae dec fwait mov leave or push dec or or mov movsl js push add xchg out test mov sub mov imulb xchg add loop cs outsl add jmpw jmp cmpl xchg cli imulb fimull (bad) sbb add mov imul mov aam ret jo mov cli push lods xchg xchg mov test mov sbb xor mov in icebp push cmpsb (bad) mov xor pop push jb scas jp lds xor orl aad adc iret pusha lcall das stos pop les icebp inc dec outsb pop or jge add jmp out mov in dec das inc test sub mov das sbb sti (bad) jbe pop or xlat and mov push jnp in push push sbb lret testb cld fsubl jg aad sbb leave outsb mov dec cmp pop mov cs rcrb stc xchg imul fstpl hlt mov lea rcll popf icebp mov les pop mov ja xchg out dec sbb xchg mov sahf xchg inc das mov ja mov (bad) fxch fstps xor fidivrl jb das dec cmc dec jecxz es mov out sbb idiv push cs lods sbb adc gs mov push repz cmp call cmp xor cmc (bad) dec ds push xor stos fadd jmp out test xchg or ret push mov es aad js loopne (bad) adc xor lock xchg adc std mov sbb adc cmp dec push outsl adc cmc mov push cli xchg fimull xchg call out in flds insb push mov jg cmp mov dec cltd hlt adc outsb leave hlt incb lds mov add mov aam mov out cmc roll xchg (bad) push lret mov cmp and cmp pop add dec in (bad) lcall sub cwtl xchg lea movsb cmp jbe ret mov adc sbb sub jae lea (bad) in push cmpsl loop loope mov dec movsl lods mov adc inc sarl mov add or test insb mov sahf out fistpl sbb daa popf pop scas std (bad) jne cmp xor fbstp adc sub pop insl push dec ja andl outsl (bad) mov xlat or mov ljmp (bad) pushf negb cmpl loopne xor repnz mov in pop fs fisttpl pop addl mov aam xchg jmp pop stc es leave xchg enter xchg xor sbb jb test sub ds sub mov xor add popf popl fisubr xchg movsb scas xor xor addr16 fsubrl ds test inc nop shll mov icebp test or cmp je xor mov mov mov mov ret mov mov (bad) xor sbb and outsb mov fsts aam xor aad fisubr int sarb dec movsb jnp xchg xchg fcomi test addr16 out dec lods push aaa cmp lods add sbb dec nop (bad) push outsl hlt das stc in test xchg outsb jno lods dec push pop sub cltd (bad) push movsl mov push movsl in inc jmp adc cli xchg add lock outsl push sub (bad) inc fstl jmp adc mov mov outsb shrb mov insb lcall xlat iret add push xchg pop cmpsl xlat (bad) mov and mov xchg mov pop shr mov fcmovne jle enter mov (bad) clc das pushl xchg in fnstsw add mov shr mov gs pop push dec jno,pn jb (bad) push not icebp dec insb jne sbb rol xchg inc cmp loope fsubrl xor and and cmp enter stos leave fstpt xor (bad) outsb mov or cmp pop (bad) sar add push ret nop push ja add push cmp pushf imul jo ss dec sbb cmp inc or je adc lahf sub lret aad mov popf sbb aam jle and icebp bound xchg mov inc (bad) xor jl sub add pop jle ret mov adc outsb (bad) jp push pop mov das insl insl sahf push (bad) xor hlt out scas out repnz iret or and lret or fistp jp add pop sbb xor shl in test jp cs push xchg mov mov arpl xlat xchg into sub mov pop jb push mov add outsb (bad) pop lcall (bad) sub push das mov sub jecxz fsubr mov xchg push das mov dec push pop sub stos incb xchg lods and aaa aaa sub xchg mov fwait push lods jae cwtl ret dec ljmp aam (bad) repnz push pop adc gs fdivr shll (bad) int mov nop push rcll fild mov mov aad (bad) nop adc xor push int xchg rol lahf mov inc jnp cmpsl dec sahf ljmp adc jnp (bad) ret dec dec ljmp insb adcl mov sbb iret fiaddl int3 push or xchg fildll and popaw bound (bad) xor std xchg push test mov dec je in sti xor sbb mov mov and enter xlat dec fadds je je call xor adcb mov ret or cwtl mov push aad mov (bad) mov int fidivrl pop jg movsb xchg ret cmp fwait in fildl mov js xchg push xchg add movsb (bad) adc xchg push and or fs xor aad pop ds test sbb cltd cmp shlb ds push iret hlt xor shll push sti xchg clc ja out and data16 nop sub aad cmpsb push pop imul movsl outsb std lock or and xchg mov adc jmp icebp xchg dec lahf or (bad) push xchg cmc popf sti xchg movsb dec js push sub or add xchg add push adc xchg dec add mov mov fadds neg mov andl fildll aad adc mov pop push xor add mov mov jmp ja in ja je xchg lret mov xor rol lret (bad) jl dec cmp mov repz inc mov das dec pushf fs adc xchg dec mov push pop imul das notl imul bound mov cmp stos jae dec add lret outsl scas addr16 (bad) mov loope cmp sbb adc loopne cmp gs sti rorl sahf in testb dec lds pop std xchg mov xorb dec adc add push daa lret inc jae arpl outsl mov into or or insl dec in pusha iret sbb int3 bound pop jp or (bad) aam mov mov (bad) mov leave push (bad) or jnp in int mov adc xchg out sbb push adc in mov clc (bad) jp dec xlat cmp pop cmp xchg cmp mov orl out pop mov lods pop rorl dec push pop xchg imul mov cmp add lcall scas notb push dec sbb aas lcall and push push jmp mov inc gs sti repnz vpshad push cmp outsb push mov or pusha push inc roll xchg test pop ljmp inc sar stos arpl ffreep leave out test mov inc add popf arpl push sbb xor push adc add ffree xchg sub ja add scas movsl cmp setno (bad) jb mov xor jns std jo test inc cld ss pop add scas xchg popa dec movsb xor inc mov movsl rolb push stos or mov mov ret imul xor push inc xlat data16 push push aaa aad jns inc fwait testl dec icebp inc repz in aad roll repnz ss outsb cs or push adc pop sahf cmp dec cmovp loope adc fisttp dec movsl xor dec fwait (bad) std jge pusha and jg push ja je mov adc aad mov jge push daa aam pop movsb mov int3 sub imul (bad) ss mov push push dec mov and inc pop stos in out and adc in addr16 jp jl mov data16 xchg int3 push dec nop mov push add out sarl loopne cmp jo pop nop cmpsb jle push xchg inc js (bad) pop xchg (bad) ds ds dec xor or inc mov adc mov pop adc push clc lds insl jno (bad) adc inc nop rol fistl fwait lcall mov cmp stos (bad) jp jmp jge hlt mov or aas repz shrl inc aad bound cmp and les leave decb ss jmp mov push and cmpsb fnstsw (bad) adc adc add enter divl test repnz in nop test jl ss push adc pop xchg (bad) pushf dec jmp sarb inc pop (bad) divb fnsave add or jmp push cmpsb lret test lods ret pop out daa xchg cmp imul push cmp push test icebp repz add push inc push movsl cmp add mov mov fsts push mov repnz popf add mov mov mov xor xchg das ret movb dec (bad) push fimul imul popf aam iret fs mov out jo es push jle dec add add bound adc inc cmp push and jnp xchg insb mov loop,pn xchg add pushf dec xchg inc pop fsubp dec pop lock pushf push xchg xchg adc loop ds fwait out nop mov imul nop mov out dec mov rorl dec (bad) pop adc hlt divb xchg mov vunpckhps ds test aas push jle outsl add add dec out ja adc jbe enter stos inc in and cli popf (bad) (bad) mov inc cwtl push idivb cmc and out dec mov or imul std loope push sti cs jae (bad) push fwait cmpsb mov adc out insb jle lods adc fldt push popa dec mov inc cmp pop (bad) jmp lret iret xchg push in int3 out out ja cmpsb xchg jp sahf gs stos add nop (bad) dec icebp adc rcr test inc xchg sub jmp jmp test and fisubr mov jo int lock insb push sbb fsubl add mov int3 popf pop aas cmpsb add sub (bad) icebp cltd fistl fadd (bad) mov or sti jle pop shll pop inc push data16 push push daa xchg cmp popa push enter adc lcall adc xchg cmpsb std popf sbb and into adc push fisttpll mov lods push testl fistpl cli es mov pop mov repnz ficoml xor mov rolb lds and xchg lods pop xchg mov addl push mov dec int3 xchg data16 or inc fmull cmp cld lahf mov mov mov mov and int cli int insb add fildll dec cwtl loopne jne xchg pop add lcall mov sbb pop stos int stos scas push jg inc xchg inc pop stos sub aaa insl sbb pop mov push xlat data16 bound xchg dec add mov loop das xchg sub test aam out sbb adc pop lret mov out mov and cmp in cmp sbbl mov add pop decb das scas xchg insl mov inc pop xchg and es or jno bound or mov xor push imul int sbb lds outsb push insl sub xor mov int cmpl popf in xchg into cld loop sub pop pop test jns add leave sbb mov stos push cmpsb mov mov out or adc dec mov push out adc fsubp sti and int3 repnz sahf mov xchg std enter out pmulhuw gs xchg mov add pop out in xchg jg push dec mov (bad) cmc add scas mov inc stos daa iret adc (bad) jno mov lret arpl repz adc xchg jb jnp ret mov ljmp xlat or fldl js loop fcom mov push push or lret cmp insl sub sub popf jp out cltd xchg insb pop leave iret pop fs or addr16 mov ds dec or cs (bad) mov ret dec aam dec fdivl xor int test lret cli jne mov cltd push fisttpll in (bad) mov dec xchg mov scas dec test cmp loope ret scas mov pop std (bad) in cld mov outsb sbb into sahf mov movsl js add cs xchg pop shll cmp mov out or push pop bound aaa sub sub rcrl rcll call mov int movsb es jge insb add pop cld adc stos stos mov mov loopne (bad) std or pop mov shr or in data16 xor fwait or addl lret movsb sub stos xchg jl repnz jle sahf jge out (bad) xor xchg adc cwtl dec xchg movsb mov in mov or int inc lret inc enter cmpsb js xchg xchg mov xor dec xchg push pop (bad) sub mov inc lods sub leave (bad) repnz mov test shlb movsl mov adc ret test jb mov fs cmpsl jns notl lahf les pop mov incl push ja aad push fisub or in dec nop lret push fist lods xchg cmp or pop add mov cs or (bad) fdivs mov mov or fs sub add fild mov cmp mov xchg inc pop idivb lret les jns rorb fldt dec pop sti push out push std out pop or mov subl mov (bad) sub hlt inc push ret mov cmpl gs mov inc jl or testl fdivs push faddl inc aam xor cltd test (bad) jnp data16 adc ljmp (bad) loop movsb xchg mov test cmp scas mov movsb lods jae aam pop cmp pop push push push add insl rcll pop loope and pop inc test push mov in mov adc cltd sbb cld sub pop push push (bad) sbb (bad) mov dec dec mov xchg int adc lret (bad) or rclb ljmp scas pop dec inc imul push pop and es cld inc std pop pop movsb sub push push sub mov fcmovbe mov inc sarl sbb xchg sarb mov xchg inc add mov shlb pusha cli call or data16 sarl lods xor sbb cmc cltd mov cmp mov xor or xor clc push push inc scas xor sti (bad) mov fnstenv sbb add jno and xor sub inc fisub cmpsb (bad) push jnp pop in in push data16 or (bad) in test mov (bad) int das je in xor cmpsl push inc mov insl outsb mov (bad) aam lcall fnstenv adc adc or jns in mov fistpl xchg mov or add fstpt dec cmpsb cmc push test rcrb xchg cmp sti lods push xchg cmc aaa pop inc fcoms in (bad) lret das in push or std push cli in mov ret xchg sti jecxz inc jbe test dec (bad) nop and jl pop push repnz cli test (bad) fmull popa mov and cli popa sbb sbb dec lret pushf push ljmp hlt cltd ficompl mov aam je ror add fisttpl (bad) xlat add scas sub adc cmp mov data16 mov iret xlat test stos scas pop imul (bad) jb mov mov aad outsl push stos les dec jae pop push sub jp es pop dec call test pop push sub cmpsl flds int mov ficom cmp mov sub lods test push (bad) mov cmpsl lret adc mov imul jo xchg mov xor es pop in mov scas xchg dec mov test inc (bad) je cmpsb leave popf fldl or pop insb ret push jns or mov test into lret mov sub ja xchg mov mov mov sbb cmp sub mov rclb cltd aam mov cmpsb push or (bad) lahf lea and into dec sub call (bad) xor mov repnz xchg mov inc push into mov test js test jne bound mov out cmp sub mov inc test xchg lods push add mov out scas sub pop pusha in fsubs insl mov and sub popa jl imul cmpsb dec scas fs addr16 out lods xor sbb mov insb fcmovne xchg jmp in push jae (bad) or aaa jl or insl push sub xchg mov sbb add add aam push out outsl xchg enter popa scas lods incl mov xor (bad) mov in mov cmp mov mov lds dec sbb inc mov aam test jb and mov test scas jg sbb jle xchg fcmove push out mov dec fcoml cmpsl and pop out sahf lcall add nop (bad) sub adc mov inc xchg (bad) in into fbld push adc push (bad) ror mov mov xchg push jecxz sbb mov fdivl mov (bad) dec push out sub and push fs sbb sbb pushf cmp cmpsl leave or cld mov push inc fucomi repz sub insb push scas add pop (bad) lcall lcall adc test (bad) jle into inc fs bound mov jae add pop test mov jle pushf mov xor and scas test push lahf lea mov loope fiaddl imul sbb pop add adc adc lock mov aad aam outsl lahf into (bad) imul sub mov shll popa sahf lods (bad) xchg sub sbb cmp (bad) xchg sti xchg dec repnz gs push lea int in sbb shrl fstl mov gs outsb mov data16 aad mov adc daa cmpsb xchg loop push push mov rorb mov ljmp loop inc mov testb cmp xorl xchg jecxz push lahf pushf and xchg mov sub push dec xchg fld sbb jb cli add ds cld cmpsb in mov sarl clc fstps xchg jmp pop dec adc shr mov xchg je in pusha or test (bad) jno mov or ret jo mov (bad) mov aaa leave or or (bad) mov movsl rorl idivl xchg inc sbb pop les dec es dec mov adc mov cld repz xchg jmp xchg xlat mov xchg mov xor jno jp push fcompl fsub insb adc loopne,pn add fwait lret jae push push xchg arpl divb inc or adc ja push vpsllw cmp lods stc mov jecxz mov pop inc mov adc pop mov xchg js inc xchg in lret lahf (bad) jg ret data16 out (bad) es jo mov sbb add sbb test outsb cmp faddl cld sbb lret pushfw mov xor outsb inc sub mov ds push notb addr16 test pop push lds outsb mov push pop jbe xchg mov xor cmp pusha push xor or (bad) mov arpl int3 fimul out fwait jp cli mov xor or outsb repnz mov and pop mov ret std cmpsb notl push lcall push (bad) dec jb out mov mov (bad) xchg jae pop out out add dec shlb lods mov adc es sub xchg lods aam aas push scas push stos rorl repnz cmp outsb popf scas gs stos inc sub aas ljmp cmp dec pushl add pop lret dec dec cmc xor cli adc xor adc mov sub test or into js (bad) dec roll jl lds imul add jne and mov aaa sub cmp jb shrl dec in sub pop ljmp call xchg loopne adc cmp lret cmp push bound dec sub movsb and mov xor sarb sbb jg push lods test lcall xor jmp and cmpsb push xchg daa xchg inc (bad) (bad) pop push outsb mov (bad) hlt stos inc stc add push fcmovnbe inc mov lds mov sbb sti sbb sahf cmp cmpsb mov and or lcall add mov jb cmp paddb sub rcrl and pop add pop sahf ds xchg mov dec (bad) movsl fnstenv inc ret and lcall popl test add aas roll (bad) mov mov out and scas push pop push xlat jmp (bad) aad jecxz inc ss xchg xchg inc in sub cmpb xchg lods pushf pop and out dec out test cmp pop push inc ficomp mov adc sti lret ror aad cmp xchg repnz cli int add mov xchg sbb out insb push and call pop push and xchg or gs lea es jns pop push jne fimul cmpsb lcall inc test push mov xor sub out push movsl push cmp push inc xor into stos dec inc lods icebp fisttp cmp mov (bad) cmpsb cmp (bad) xor or scas cld jge sahf fstpl adc iret rolb dec or mov mov test jg test jg and nop mov xchg push mov cs and ljmp mov movsb add xor xchg push or ror js out sbb test loop cmc jne mov jp jae mov imul or ret add inc cmp icebp or daa call add cmp jbe incb xchg into adc or mov add stc ss sahf gs xlat push (bad) leave mov cmp in inc cwtl setp mov movsb xor test lret pop push aad push std sti fbld adc loope xor mov test dec xor fistpl aam fidivr add adc outsl jge dec sbb mov divb scas mov push cmp or lods dec pop add cwtl dec pop mov xor sub jb dec movsb lods mov stos inc jb sahf mov push arpl lds jns test sub insl xor and push cwtl cmc popa mov add gs inc shll imulb (bad) cmp cmp js mov mov out out adc repz icebp and (bad) pushf popf imul jb jle lahf add test xlat mov adc mov ficomp test insl les fsts ds or add push mov sbb aas js outsb popa test mov push fbstp std adc lds icebp fucomip iret sti xchg inc test jne cmpsb into sub mov xor xchg mov pushf nop aad scas nop push (bad) mov iret notb add sarb xchg out push xchg test adc pop cs jbe sbb jp xchg or jle repnz xchg int mov mov sub inc in and fsts push in loope adc inc cmpsl fcmove adc insl dec lcall addb aas push mov xor jp scas add sub jl push push sbb push xor and xorl mov or loop mov mov sbb lds loope gs (bad) push pop out xor dec nop scas xchg cmpsl std adc adc rolb cmpsl std sti lods sub frstor stos dec outsl mov das aad sub or dec lods stos mov aad cli loope add mov xchg inc in sub lret in fisttpll add cmp jnp inc pop dec (bad) std sbb loope repz idivb (bad) outsb es scas inc into push adc rep jecxz lock add aaa outsl mull xchg lds (bad) std mov stos notl insb inc mov sub enter adc in jnp rcl push pop mov push ret int3 das mov add (bad) push jnp push ret xor pop out jno not push sbb xchg int3 and imul adc int3 cmp int mov clc leave imul jmp dec cmp int sub sub xor fistpll mov cmp add jle adc add xor pop imul pop mov cmp shll aas mov in (bad) jns jae sub sbb push mov sysenter push sbb mov jle,pn outsb dec xor repz add lahf cmpl mov push frstor in outsl push int out ret and dec add addr16 mov popa sub and pop daa jbe push out or push jl sbb mov rol das rol or cmp les movsl and sti push (bad) fistpl scas ljmp mov xor bound push hlt sti mov add xchg jle clc out cld pop ja lret xlat stos lret xchg cld sbb mov lds aad jmp dec adc cmp mov mov xlat loope mov jle gs in lods pop jae test jge xchg add orl jmp pop (bad) cmp adc adcl sub fwait lods inc jb test ret dec cmc sahf in mov sbb repnz push addr16 scas sbb fidiv mov xor adc loope mov orb ret add dec and outsb mov dec push mov clc xchg insb enter dec loopne call jp or inc iret or mov sbb es xchg dec int3 inc push or mov jne push adc push les dec (bad) xchg xchg sub or negl mov mov add inc std loop popf add pop pop loop inc fwait jmp dec aaa adc inc mov jl sbb repz jno pop lea pop inc ret scas iret add xchg sbb arpl add int3 mov decb popf dec pop cwtl push in out repz cli xchg jl test adc (bad) call mov push out mov das in mov test fldenv leave or mov xchg pop add fwait sub std js (bad) mov loop insl and push and xor leave jnp cwtl mov and inc or pusha push lcall sub fcmovb fcomp icebp sti add pop in adc nop call pop mov dec (bad) pop (bad) mov mov jne in pop push sub adc repnz pop fs and mov xor push push les jae push pop pushf adc push aaa sti inc les hlt inc rcrb stos pop lcall push decl push ja or fbld fiaddl pop cmp pop sbb arpl test mov fidivrl xorl lds cs sti jmp adc lods jnp or fcmovb pop cmpb out into mov ret mov int3 sti pop in ret in ja cs xchg adc xchg xor hlt stos add jp lahf sub aaa or mov mov mov fldenv sub incb repnz int pusha popa cs or xchg dec sub cli dec cwtl lahf loope jg outsl dec inc mov test into or jl pop out push pop xchg xor mov int call jo gs adc sarl xor aam mov xchg (bad) or cmp jp (bad) add adc lret mov or inc data16 fadds call sarl cwtl pop lahf pop cltd imul stc dec fimul mov cwtl mov push and push cmp imul mov (bad) mov into cmpsb jno (bad) out xchg in sti xchg mov sub bound fwait push in pop xchg dec imull cmpsl push xchg les push imul or mov std xor xor mov inc icebp (bad) je (bad) cmp push sti out cli insl divl mov pop inc push ds dec cmp fmuls mov (bad) xchg ret fisubl mov and pusha mov and mov rolb xor pop jl dec ss addb cld mov inc sbb (bad) (bad) xor pusha (bad) (bad) je fwait ljmp and cmc jecxz jae pop mov int3 or ret aam cmp addb std outsb pop cmp pop sub sub sar in mov outsl inc jle pop lods adc dec jp dec push movsl xchg inc outsl sub dec cli mov cli mov push stc in and push sub rorl hlt fsubrs repnz lods scas push mov (bad) jno add xor xchg imul push fisubl nop sub imul fisttp cld push fistpll xchg std lret loop mov mov mov pop mov adc push or outsb into mov jmp ror stos sahf cmpb mov (bad) cmp and fldl sbb arpl incb int xor adc outsl sub sub jne pop and push leave out inc push cmp sub outsl add adc sub out fldl lcall loopne sub mov ljmp add ret cmpsl lods loop xchg add sbb in pop mov dec inc ret mov sbb in pop hlt lds scas call inc shrl ret jns inc push insb data16 inc push push mov add loope movsb mov xchg inc adc xchg push addr16 stos add or xchg jb xchg xchg imul cmc xchg inc cmpsb jmp cmp cwtl (bad) cltd jnp shl ljmp sbb xchg cmpsb (bad) je push cmp xchg jns push shr mov and std push pop (bad) xchg push bswap and mov jle cld cwtl in lret adc in aam cmp sti jge pusha adc push pop pop es out lret xor fs ja rcr scas mov js daa xchg pop inc lcall mov inc and nop push pop arpl (bad) xor xor pop (bad) cmpsb scas sbb cmp faddp adc dec out and es (bad) dec movsl dec mov jmp inc mov dec lea sti stc (bad) rcrl adc xchg dec lret lahf lahf lret xchg mov sub sbb popl xchg jnp pop cmp shll aaa cmp dec fstp jnp pop fidivrl jae pop (bad) outsl push push jge (bad) out adc add mov icebp pop or jecxz fisubrl fldl2e inc sbb jg xchg in insl dec mov add cli inc pop and xor mov test push cli (bad) adc cmc pop mov dec xor shrl xor mov jo adcl and mov ljmp sub es mov lock xchg xchg lods aad or inc push scas popf add xlat pop inc push dec lods gs xchg (bad) movsb adc int3 inc cmp test push mov scas jg inc dec lahf loop lock pop jae mov sti repz mov xchg loop cmp or lret sub aad rcrb inc loop or lods or xchg dec jnp fcomps push ret mov movsl ret pop jnp xlat push push push xchg es dec cmp xor adc jmp cmc sar xchg mov scas cmc or scas mov xor xchg xchg xor jmp shlb or pop mov jmp mov adc (bad) fbstp jp xchg das hlt (bad) cli test push ljmp cmpsb mov cmp test fdivrl push pop scas mov rclb cltd and mov enter sbb or les in adc xchg into fistpl sbb pop xchg xchg cmpsb dec mov (bad) or ret xlat xchg pop mov cmp pop jmp aaa dec xor jmp pop popf sbb push iret cltd aad sbb (bad) or mov (bad) dec dec lahf hlt jg lods (bad) mov sbb inc ja push movsl imul add cmc loope ja stos cs pop cli mov mov int mov xchg or xlat mov mov or je inc xchg aaa stos pop mov and add cmp cmc imul cli or mov pop (bad) push dec xchg push push popa jmp and inc jecxz cmc test data16 jecxz rcrb pop push jnp dec lcall jbe fcoml (bad) (bad) sbb leave push out ret js push pop cltd mov ljmp xor pusha scas idivb sbb jnp and dec adc test sbb sahf xchg push mov mov inc pop or lret inc sbb ret (bad) cwtl lods mov sbb pop inc rcr in inc add fisub aam jo cwtl std dec mov sub fucomip (bad) fcmovbe pop xchg sub imul dec dec adc push mov pop mov test into dec repz dec inc add lcall pop mov lret (bad) sbb pop inc bound xor iret pusha mov xorb lret data16 mov loopne and cltd bound lods pop scas cmp test aad ret outsl lea and sub or mov (bad) jl push jno cwtl push mov rcll or int sbb sub mov (bad) sar push imul mov jns fwait push xchg data16 sbb push push clflush outsb adc inc inc pop fucomp push cli push arpl push clc ja xchg fildll mov (bad) rcll push pop into push dec lock loop mov ds fisubr int jae es mov dec dec or ficoml hlt imul fucomi mov outsb xchg sbb push push scas scas stos jp cmpsl adc bound (bad) sbb xchg jns mov push xchg js movsl mov mov test pop mov mov or jge pop loopne dec jl cmp rorb mov stos mov and jns movsl int3 dec adc data16 je cmp pop fs dec sub sub std mov dec les add lods adc add std std addl sub lea push out jb mov call cltd in mov cmp cmpsb rclb add jp adc (bad) jmp jae mov movntq decb inc clc movsl xor cmp add and test imul push xor inc or ret or daa roll add lock cmc (bad) test dec lret pop inc sbb cmp sub push imul inc dec push inc mov je mov jp push lds mov add cmp jge (bad) and fidivrl cli std cli jg in pop lret push cmpsb arpl outsb dec test inc adc test movsl mov (bad) loop cmc (bad) fsubrs dec sbb push (bad) (bad) mov jns cli sub mov loop jmp pop mov shrb adc add mov push ret mov and fmuls sbb add rcrl sbb scas out jnp pop lahf mov in add lahf jp adc xor ret dec (bad) xchg add (bad) jb icebp sub (bad) jg int3 mov icebp in (bad) cmc xor sbb add adc jne mov cmp dec xchg xchg mov and xchg adc fwait push mov push jo sbb jp xlat xchg sbb leave jg movsl pop sub nop lods lcall jp icebp movsl jae jl repz jg incb bound push sar jp out out cli out jge andl ret outsb pop push nop fyl2xp1 arpl jo (bad) (bad) cmp push imul ret bound sti fsubp rcrb (bad) cwtl roll je insl pop dec repnz add idivb (bad) fnsave aad (bad) sti cs out lret ss push sti les into ret push shlb dec jne int3 xor mov adc pop in push lods jp sub imul lret mov (bad) sti repnz stos es push stc and addr16 or sti dec (bad) mov fsubrs xchg pop sti sbb loope (bad) dec mov dec adc in push imul aaa test sbb dec nop mov pop sub js insb je sar enter out call gs lahf lcall push lods movb jne scas in dec pusha lret xor xor jno repz dec add insb and xor and loop push push pop xor insb je (bad) repnz mov cld jg mov (bad) xor divb xor xchg clc andl push dec enter out mov jmp jbe mov ds fwait sbb sbb lret inc push enter roll imul lret xchg sub scas xchg mov mov xor cmp addr16 (bad) hlt pop mov lahf ret es pop fist sbb insl mov push scas jns fstpt jnp lods and idivb fs cmp gs pop lods sti jb and outsb imul imul push je mov rclb in aad xor mov (bad) aas ret adc leave int mov sbb out iret add mov or bnd add mov dec out add rorl and daa add pop ret dec mov clc sahf mov imul nop outsb push cwtl mov jae mov ljmp inc test jmp in ja jp out lea ret mov insb jle out or cmp dec fstpl mov rcrl xchg gs mov jo xchg inc add mov dec or jo hlt add pop jns lods scas shlb add fxch or (bad) (bad) add and or xchg sbb mov inc decb mov pop lock (bad) movsb push aaa sub cli jg ret add mov jg mov push jmp push dec clc mov popf adc fidiv mov in xchg (bad) jns idivl les jg test mov subl lock mov icebp fidivl xchg outsl packssdw clc or mov pop orl std dec sbb xchg jae inc ljmp cmc aam pop xlat sbb xor pop idivb mov les dec pusha cmp cmp inc mov in out dec lods jle cmpsb and push loopne fadd push mov fwait jge test fwait lock fwait in ja xchg or ja or mov mov sbb mov fidivrl pop cltd xor or flds adc sbb mov and outsb testb pop inc cltd pop mov push idivb fbld (bad) loop das insb fwait iret and xchg push push inc arpl lea incl gs xchg (bad) cmpsb sub xchg pop mov cmpsb faddl pop xchg in testb outsb dec (bad) xor pop test insl aas fiadd repz inc adc in aaa or mov cmp xchg inc push jbe (bad) jg mov (bad) jno mov movsb mov pop adcl xchg mov mov push ljmp xor cmp and aaa in xor aam push inc xchg stos xor xchg mov pop jno jp jae,pn sbb jno rorb scas lock nop xchg roll push je jns and std data16 lds (bad) fwait sarl (bad) push sbb outsl push jle xchg cli mov xor cli (bad) and lret adc lods jmp sub (bad) (bad) jno mov insb stc sbb adc cwtl sub mov jp adc jae xor cs pop (bad) sahf jb sbb loopne mov incb loopne mov aad sub jno push fwait cli pop scas arpl int pop sub cmp pop rorb mov jg fildll orl outsl dec fwait lcall repz mov lret mov dec fwait inc xor push adc xor pop (bad) cmpsb pop mov mov clc mov add sbb jmp mov fldenv xchg adc mov mov push scas sbb cwtl sbb (bad) (bad) es shrl pop pop push fs pop dec mov es adc (bad) xor int xchg ret xchg (bad) hlt mov rolb mov popa xchg jp xchg sub jmp xor jo arpl mov call dec jo pop cld push dec mov mov pop xorl test or xchg popa jae cs (bad) dec leave fpatan sbb xlat cmpsl addr16 inc and lds lock jp fwait pop rcll inc data16 jge mov arpl mov inc pop rol dec (bad) enter (bad) popf (bad) mov icebp adc repz lcall call jo mov addr16 (bad) jle mov push sbb enter mov in mov (bad) fwait cmpsb mov mov cwtl leave push push std jecxz pop push jmp or cmovns (bad) mov push or xchg dec or in shrb shlb push cmpsb into test outsb mov sbb jg add rcrl xchg nop dec mov xor mov roll mov add out jmp aam push imul popl dec jae ret outsb and (bad) (bad) lods js test cwtl scas out or pop lods in aam ret xchg ret push ret lret bound lret xor in mov outsl mov pop jnp (bad) sti xchg fcom sub pop fist es cmpsl ror das jg mov mov (bad) xchg xchg loopne repnz in lret xchg sub pop out and scas (bad) (bad) iret jae (bad) and pop push test (bad) hlt pop jg mov icebp fidivr popf or ficomp into xor sbb dec ds cmp fsubrl mov (bad) lock fdivs shlb sbb leave or and cld ror arpl syscall aas outsb fwait jg mov or fldl (bad) movsl jae,pn pop sahf jl iret add adc adc push and push outsl ds mov cli outsl or inc sti mov push scas jbe ja int lock mov sub mov outsl mov sti cmpsb sbb mov mov sub sub jge cmp sbb (bad) jae or and rcrl outsl mov dec add fildl movsl repz (bad) mov push std cmpsb icebp (bad) xor or addl es lret (bad) push (bad) rorb repnz iret into scas lret int mov adc ret test jno scas cmp ja int3 roll pop jle fiadd jecxz xor mov adc mov stos out andl outsl inc xchg pop xchg inc js rolb in and push push pop shrl out iret clc mov cmp push aam cld adc lock ffree ret insl xchg out inc or into fs sbb mov ja add push cwtl cmp aad in adc xor es push popa and movsb mov ror dec adc aam cs push lret xlat mov into pop jne sbb push flds cli lods stc rorl les push xchg lret or inc mov repnz mov add push pop leave lret clc std stos fdivs fbld cltd out mov mov mov insb dec stos xlat mov mov sarb ret movsb mov shr hlt xor dec arpl je (bad) adc sbb sbb imul adc jg jecxz cmp divl mov fs or rcr sub cmc sub mov div xlat cmp inc or jmp shr push in icebp fwait psllq jle das std sub rcr mov iret and lret mov insl fidivr leave mov fs notl (bad) fcomps push xor inc ljmp insl (bad) sub iret and inc gs repnz sti xlat mov hlt and imull mov jns aam ret lock and adc repz imul jp in ret popf enter enter inc movsb mov movsl sbb bound push clc mov pop nop mov sbb popa xor imul cmp cmp or pop je cmp aam lock sub popf aas sarb nop sahf inc fimull pop xchg ja adc arpl not nop inc icebp push out or xor xor int test cmpsb mov lods sub dec cli js aad imul das bound or outsl dec pop fwait into mov loopne mov outsl sub sub cmp dec mov adc push outsl inc inc mov loopne add (bad) cltd iret pop dec int xor lods mov mov scas ficomp inc repz mov leave pop xchg xor enter inc dec lret into jl inc aas insb mov adc xchg cld sbb jo cmpsl adc rcrb pavgb rcrl pop cmc push mov push push out js adc gs mov mov cmp cs icebp dec mov inc jo cs dec xlat js aas jmp mov lock xor vaddps mov sub mov inc mov sbb xor (bad) mov fisubrl adc push push ljmp mov mov rcr and add mov jne stos mov mov lea into (bad) hlt pop mov and data16 pop mov jne xor aam and lret mov and das lret adcl push pusha xor aam xchg repnz or call xchg fiaddl fsubs fisttpll pusha fwait jmp add dec stos push icebp sub cli insb adc sbb jge (bad) dec fnstsw mov inc or mov jno cmp pop imul fs ret rcl loopne dec enter int3 mov sub and call cmp into push pop mov add push push js dec mov movsb ret int dec mov psubq lods movb sahf (bad) insl xchg jb in xchg int3 aas adc xchg mov dec lds sbb adc js push mov iret ret je pop in jb int3 push mov aad push add aaa in cwtl leave lods cmc sub das push and and cli imul inc repz mov cmpsl fisttp jae jmp xchg leave push pop mov (bad) leave inc loop push or xchg mov fiaddl lret jnp inc xor cmpsb push xor pop shl xchg adc sti push insl out pop mov xor cmp into pushf int fidiv cmc push xor fsubrl aas jne scas outsb jp add shr (bad) insl mov xor jno cld dec xchg cs pop gs nop (bad) mov icebp call adc das call xlat adc mov inc idivl int push xchg gs adc or insb (bad) and push fildll xchg in iret xchg sbb add xchg test movsl sub push push ret push cmp cld push inc mov stos cmc insl (bad) out mov push add sub xchg push faddp mov push out les push (bad) and loopne rcll mov dec jae sbb data16 (bad) sub ret scas insl loop xor pop enter adc jge pinsrw lods jl add sub loop or sub cwtl inc inc xor adc shll pop and pop pop adc inc (bad) mulb ja xor add test pop daa mov push sbb push and sub jmp mov out xor fs xchg push or fisttpl outsl xchg nop dec pop jns mov push ljmp dec fs xchg leave cmpsb shrb push repz cwtl or pop jg sahf insb scas (bad) scas lds hlt push sbb jnp mov inc jns je in add add test fs inc mov push jmp inc scas jae das inc div aas mov ret js push ret leave fild orl or push daa (bad) add cmp xchg arpl lret lds jmp push bound imul loop cwtl mov push xchg mov cmpsl icebp sbb push rorb xlat js mov roll rcrl test inc inc (bad) dec lods mov lcall jg loop push cmp xor xchg jmp push cmp jmp pushf lcall dec lock adc xchg push jge dec inc (bad) out es fiaddl jle and pop dec mov jp (bad) cmc xlat popa push aaa xor dec stos loope and sbb pushf mov gs push out cli dec mov sub in jg loopne gs movsl pop mov xchg pop ret in fld adc into ss adc mov push test mov or push xor fisubr jnp and into adc daa mov out outsb test xor pop shrb rcrb push inc test fdiv (bad) aad ljmp insl fimull inc lret mulps mov in lea out mov loope test int xchg (bad) ficomp sub pop mov das cmp data16 lret leave std pop ret scas es fimull sar xchg and sbb pop insb out push (bad) fmul jmp sahf dec cmp or pop out cmp (bad) mov dec lcall adc mov mov pop pop jne ss test sbbb pusha clc scas insb mov subb jl cmp adc mov inc mov mov jb stos (bad) mov ja cmp or out scas add les inc jae repnz push int aad mov inc dec (bad) mov lods adc rcll cmpsl int inc roll mov xchg cvtps2pd dec in hlt jl jl test pop and inc jl out dec adc roll add push jb das clc insl xlat adc das mov das or popa fwait push out fwait jle insb mov jmp inc dec push into (bad) dec pop and jmp (bad) or (bad) movl mov or test inc ja aad stc je mov test scas out cltd aas pop mov push or lds movsb mov jmp loopne stc sbb or movb adc popf or mov jle mov mov or loope xor jne data16 cmc dec loopne stos mov jp mov pop mov mov mov cli fildl or push faddp shrb mov dec or clc leave adc lcall jle imul iret in add ljmp jmp jns fcomps and (bad) cli mov pop jbe pop xlat mov add (bad) mov sbb ss ja cwtl scas out lea sub add cli jb (bad) cmp imul dec ja daa mov cmpsb sbb in std rcl jmp jmp (bad) ja or and cmpsl fcmovnu mov or outsl xor sbb push push jne test pop pop xor jg ss jns cmp rclb mov stos sub push push frstor call or mov (bad) xor adc aam pop pop push (bad) icebp clc mov jns dec dec jg inc jns mov rsqrtps xchg mov and cwtl (bad) xor push xchg ds test jp sahf (bad) lret test mov jb or call cmpsb jge jno pop test out cltd jle std data16 mov cmp cltd test repnz ret and ret adc pop mov insb mov mov jecxz imul in sarb mov icebp cmp cmp or sti xchg leave mov mov les sar mov ret jbe (bad) dec loope outsb sbb (bad) fdivs in fcomp or cmp mov add adc fidivl bound mov pop sbb xor add test sub aas rorb leave mov push push imul bound cmc rorb jae adc int3 pop push sbb enter scas mov and fidivrl lods cmp jl adc add sti outsb xchg sbb sub adc popf and fwait movsb in mov cmpsl jge das mov (bad) imul orl adc xor adc fidivr fsubrl inc ficomp mov mov out ror mov lock mov ss ja out pop sbb insb lds add lcall add ja daa jge pop xchg rol sbb pushf inc jb loopne xor or jno mov jae jbe inc sbb adc push xchg xor es inc jb out js or lods push lods xchg out lods mov mov movsl add and in and mov jle incb scas leave add push mov in gs mov test cmp or pop out loop xor inc lahf sub cs push adc inc (bad) out aad pop jne inc (bad) out mov add repz out ja fwait sbb sub sbb cmpsb es inc pop pop ret pop mov mov cmpl int rcll (bad) xchg push sbb je xor pop mov mov mov les mov aam test xchg push jno jle les ja scas out push and cmp or adcb ja insl push call cmp in int3 push scas rclb jbe dec fistpl gs arpl fcomps sahf sbb and add mov test add xchg add mov push movl lock and mov fwait out jecxz cli sbb xor sbb cmc xorb cmp fmuls nop loop mov or aam ljmp mov cmc js imul aaa mov cmp fcoml clc cmp or int mov popa ss mov jg int3 xlat imul lcall lods in add test lock cmp lods cmp mov xchg mov incb ret imulb push adc loop push jg cld pop pushf in jbe xor repnz pushf sub cmp rorb lahf mov fmuls outsl mov jno scas jmp das dec add aad mov cli push int mov push pop inc out mov mov jb adc jp add jno add xor cltd out cmp add push ljmp sbb dec (bad) sub mov leave sbb (bad) jbe pop lea sbb loop cmpsl mov cmp xor hlt and lret jo movsl rep into cs adc hlt (bad) sbb inc sub outsb dec push loope push stc out or sbb stc push fisttpl cmp push push mov es mov adc xchg mov push sbb scas das cmp mov ss sub movsb outsb lahf or test cmp sbb fisub xchg push cmp mov repnz mov and gs cmp sti jl push mov pusha pop stc dec cmp mov jbe and sahf fidivr scas dec or dec xchg sbb lret orl mov jl lock push into mov inc (bad) test in into xchg sbb (bad) sbb or (bad) pop stos mov push (bad) fcoms stc rolb or scas push and cmp mov inc rcrl cmc enter stos cmp call push out cld sahf jmp xor stos fild push imul shlb sahf jle mov (bad) lock jnp inc jno (bad) mov mov gs add lcall mov mov adc adc rcl or movsb (bad) jle jl jae aam enter cltd lea mov or ret add and test jmp pop mov das push fld sub xor std pop fyl2xp1 pop call mov fistl xor ds pop add in call int3 push subb dec (bad) fwait push and xor sar ret test mov mov sarb xchg mov in pop movsb and mov inc fxch test ljmp scas inc push out (bad) leave (bad) test rcrb arpl sarl push mov test cs dec (bad) imul mov inc ss jmp xchg daa xchg dec cli cmc inc mov xor pop mov pop add mov cmp sbb xchg scas inc xchg outsb or or clc dec out lcall xor jge pop ja loop ds mov int pop cwtl push fdivs or push pop mov sub jge es pushf inc push test mov inc xchg cmp sarl dec nop mov or dec fcmovu (bad) (bad) jb mov cld or test or roll push stc addr16 aam mov pop (bad) (bad) mov dec mov mov xor xor push stc aam and xlat in into testb jne xchg ja fmulp inc and inc push insl mov mov inc pop lock cltd lds and or scas andb cmc sbb xchg inc push jne std xor popa pop aad les clc xchg push xor pop adc mov mov rol jb mov push cmp mov (bad) data16 cwtl adc imul sbb std (bad) push cmc push fstl imul dec data16 pop mov ucomiss fsubrp mov test out push daa cmp mov mov outsb sub jecxz test outsb push (bad) std mov xchg or inc mov jl or je rclb ja pop xchg and lahf fwait dec into cmp ficoml lahf sub (bad) fs aam sbb push mov lret clc ds test cs dec xchg add mov cld jle jp je int pop pop xchg fwait dec icebp sahf test cmp (bad) fldcw hlt sub inc out inc adc sub mov (bad) jmp (bad) jl fucomip rclb mov lret fiadd cmc xlat adc cmp in and (bad) outsb mov sub lods mov push (bad) into mov push stos test movb fwait jmp sub in xchg repz arpl push outsb cli mov xor (bad) mov mov or fidivrl insl jg inc in inc sti push ljmp fstpl (bad) lret xchg aad stc in pop lcall (bad) cmpsb cli je mov cs cld rorb or dec cmp negl cmc into jle leave jno (bad) jno and xchg fwait mov sbb or push ds in pop inc int3 dec std out sbb fidiv jbe dec mov (bad) out xor xor call (bad) push push out in je or loop sub adc mov cld push lds ja xor inc ss inc xchg or or mov mov ficomp popa push dec neg jmp jmp (bad) xor jmp xor out imul aam scas scas pop stc xor arpl es popa xor add js lea (bad) out push jne lahf popf jnp fldl (bad) jnp sbb xor jnp fs lahf into xor sbb pop inc cmc cmpsl fcoms (bad) hlt pop pop scas scas cmp fdivs cmp xchg ret mov jae mov lahf int3 xchg add add mov into adc cwtl jge push push aas in adc fsqrt movl lahf mov (bad) add xchg cmpsl push pop mov lcall mov ficom lcall out cmp dec sbb insb cwtl pop jae mov test adc inc cmp flds inc inc xor xchg dec out xchg ret mov mov scas rcl sbb mov movsl int3 or jecxz jmp cmpsl cmc mov fsubr int3 jge adc push and cmovne mov jns fstl roll call dec mov sub ret (bad) xchg mov xor pop xchg mov aam mov xor out fisub sub in xchg lds (bad) mov ror jbe lahf lcall jmp mov (bad) bswap fdivrl arpl in test (bad) push jb pop lock cwtl fwait add fs jae cmpsb inc nop adc adc in or inc pop cwtl adc sub pop mov dec std or jns xchg out dec or xor daa and movsb or jge fdiv out xchg xchg pushf push pushf or (bad) mov int3 jb les pop pop sub ss mov imul lock cmc jmp dec loop pop push adc push xlat push cmpsb jmp movsb cli lret mov mov scas (bad) mov insb xchg pop (bad) std dec in test cs loope dec loopne (bad) movsl sbb sub jns sbb push out mov cmpsb mov mov lods inc mov lahf sub lock js or inc pop js lret cs aam mov movsl sbbl xchg mov in cwtl pop or in xchg cli mov sbb hlt lods (bad) loop aad jl pushf adc and mov lods xchg cltd fwait popaw test leave gs pop fistpl mov inc arpl addr16 rcll push sbb and inc dec jmp sub pop cs mov sub mov jle pushf arpl jb or clc in sbb jge std std insb xchg shrb lea add xor push mov mov cli dec pop dec cmp in dec jg adc cs mov popa leave jmp arpl jnp cmp sub dec jnp mov push mov loop shll repnz push ret ret cld mov xchg mov push loop mov cmp out push jno xor stos ret lcall push cwtl cltd roll jb xor push cmp push pop add lahf xor xchg out sti xchg cmp xor adc movsb inc lods fdivr pop (bad) mov cmpb hlt arpl leave fndisi(8087 lret in inc stos andl adc xchg test mov xchg pop insl fild add lods add les test ret popf sub mov call fdivr outsb out cli movsl push or sbb cltd xchg outsl fcoml push xchg movsb sbb inc iret pop int3 push xchg add mov scas loop push orb rcl popa and or (bad) mov and test pop pop lahf cmpl add leave xor cwtl or xor movsb dec xor jb (bad) int3 aad dec mov dec or xchg cmpsb into imul pop lcall xchg fs dec aas nop pop mov push sti sahf mov push or mov and xchg fisubrl and aad sbb sub jl lock and lods xchg xchg mov mov pop adc (bad) mov stos cmpsl mov mov pop cld mov push test inc sub fmul dec data16 jmp enter xor mov mov out push dec mov and es mov out loop or mov dec mov or sbb or or fimull inc stos add xchg sub leave jge aam aam pop shll shrb into lods jb rcll mov into stos aad jle pop jno mov ljmp and push add push jbe fmuls lahf xor add out fsubrl mov or data16 mov cmpsb lcall jle out scas and fwait (bad) fcom stos pop jge sbb shr jb pop xchg jne jmp out lret mov jmp add sbb and fcomp fwait negb add imul or inc pop and and dec push ljmp lret cltd jl jno int enter int test (bad) lds cmp repz faddl and xchg lret out movsb roll loopne (bad) cmp sub lods shlb cmp or mov shrl sub addr16 mov add or mov mov movsb loope aaa lret std mov fildll and dec insb xor repz je rcl push dec loop or mov ret stos mov lods dec nop mov cmpsb mov fwait cmpsb mov rcr dec mov or mov in mov out je mov pop (bad) pop adc add ds (bad) rolb adc mov cmp mov insb es xchg pop mov enter add data16 ret (bad) ljmp (bad) jo cmp aad lret xchg (bad) mov sub mov add push jae cmp sbb adc sbb sbb fs add scas push test test dec sar in call sub outsl push mov push ss jge pop dec add je fdiv nop dec jmp shrb dec xor loop in push lods frstor jns daa jecxz xor push mov pop out cmpsl sbb push nop mov out ds fs inc sbb repnz pop add lds or jne (bad) xor lock cmc jne lock fs sub mov add add jnp,pt dec movb (bad) ficompl add in rol fsubrs sbb fstpt stos jns dec insl imul dec shlb jl dec push and add repz push xchg addr16 and cli push mov inc sbb inc jle mov aas mov dec sub cmp dec cmpsl lock repnz inc mov ljmp jmp jno mov adc scas or mov or mov (bad) fisttpll and fs lret (bad) movsb cmpsb xchg es pop jne xor aas cmp test mov mov and jl mov out mulb fwait in push dec push stc sahf ss cmpsb push in imul or mov pop mov sti jecxz push test movsl mov bound (bad) mov xor outsb mov jl jb mov (bad) sub and and cmc push sbb dec mov inc in dec les shrb leave mov mov fst and fsubl (bad) (bad) sub mov adc stos and or add cld (bad) (bad) in clc and sbb cmp jecxz adc fnstsw add jp mov cmpsb push je xchg adc and cli mov decb sbb and (bad) mov repz cmc lcall data16 adc push jl ds adc bound mov pop imul in sahf add fcmovnu pop mov jle aaa sub mov xchg mov mov not push outsl or sub stos out inc and push lret lea xor push out in clc mov mov mov jle gs cmp xchg lret cld or fsubrs fdivl jl or notl xor jg jnp or mov fistpll popa lahf (bad) adc mov and insb add (bad) int3 fcmove push lret mov xor adc test jle mov jnp inc test xor in jecxz push out mov in jne test into add mov inc rclb add dec xor sti push orb xchg in cmp cmp (bad) mov aaa xor push scas and sub mov pop and dec int3 adc xlat imul xor mov dec addr16 jo add out jno jp mov push or mov into in or cli mov loop rolb xlat hlt (bad) jo in adc pop dec cltd inc popa aam les nop mov inc aas or push insb adc (bad) mov es icebp push repnz cmc xor fmull aaa fwait addr16 inc das fsubl adc sarb sarl es mov mov arpl repz rorb mov fwait pop enter int fcmovb fild sub aas ds scas adc adc ret inc aam mov daa jno push xor aas (bad) cmp adc movsb sub push out push (bad) pop dec lret push adc aad test dec push enter adc xchg push inc cli sbb fdivl pop pop in jecxz popa mov (bad) imul adc lea push cli sbb rorl call cld mov and pop sbb in adc fnsave inc xor sbb jmp (bad) mov mov jl fs scas xor ds out jg dec fidivl xchg jne addr16 (bad) push jb test pop mov pop mov daa pop sbb lret loop sbb adc sub pop (bad) adc xchg sub jg push (bad) or (bad) fist jp xchg cmp imul cld enter into mov mov jnp sub clc xlat cmpsl add mov iret andb test push je mov mov xchg (bad) popf mov add cmpsl push sub mov mov jg pop iret cmp mov jl fisttp ljmp ja (bad) divl ds xor pusha pop xchg fcmovnbe js test out bound add stos lret pushl jl (bad) mov jl jbe clc or repz or popa cmc pop pushf int3 add fidivrl scas dec push push fwait in xchg sarb inc push (bad) mov mov scas add aaa cwtl jmp push frstor (bad) daa sbb dec mov divl push jbe mov or adc cmp mov aaa push push in mov test jb sub jecxz cmp mov repnz add push out pop xor or sub scas cltd adc push mov add lahf repnz mov xor scas lret sub sbb pushf mov nop push and out jno pop mov xor adc outsb int insb ret add idivl negb mov shrb jae xchg out shr nop cmp cli jo push add imul mov ja aas repz or out es (bad) mov (bad) sub pop cltd xchg dec inc mov or insb xchg into inc adc jb mov jge jo inc insl xor int test (bad) or and sub adc jl call xor mov outsb adc cmp movsb sti jp cli xchg xchg les (bad) mov cmp repz pop or pop push das (bad) mov pushf shr lahf push push aad arpl outsl push jle test and push push mov cwtl mov sbb xor xchg sub rcrl inc int3 or test dec adc add jno fucomip and adc enter mov es sbb dec adc outsl mov scas lret pushf xchg subl jbe aas mov (bad) dec pop pusha inc test (bad) or sti icebp adc xor (bad) jl mov inc outsb push mov mov dec (bad) leave (bad) aaa xlat icebp xchg xor lahf imul cmpsb jecxz cmp fistpl add mov sbb xor ret jne ss inc hlt stc xchg jno mov mov aad sub lcall aam xchg imul mov (bad) push fisubr inc adc insb xor cmp loop add out insl ficom cltd stc stos rclb test cld jae xchg ja insl mov xchg jg add jmp mov rclb mov and shll sub ret aam testl mov pop jl imul mov push dec movsb lret adc cmp pmulhw fcmovb sarl fistpll jecxz mov xchg sbb jns mov jp mov xchg add inc imulb icebp xchg pusha push jmp sbb lods fldt cwtl iret inc not mov repz (bad) push fwait sahf mov cld rsqrtps fiaddl lds outsl ret sub loop pop nop sub fadd pop and (bad) call nop loope ja addr16 jnp cmp insl insl test bound xchg sbb push xor faddl dec cmp mov push aad aad inc cmpsb xchg (bad) stos xchg mov inc stos push push push sub dec loop test mov in scas int lock jl adc ret xor scas cmp sub pushf cwtl ret fwait push xchg lock inc mov mov ds cmp (bad) js mov sbbl pop push and test (bad) int ljmp cmp or pop pushf push cmpsb cmc out fwait jno add aad and hlt cmp add cwtl shlb sub mov xchg mov adc lcall out and xor dec ror sbb das and cmp dec mov ds bound sub or sahf jns jae xlat fbld fadds mov push sbb (bad) sub inc shrl pop iret xor pop mov sub js cld fdivl lock es push imul sub pop scas dec push icebp xor out in xchg push push das movsb pop and pop pop clc adc xchg sbb add (bad) and inc push inc and inc aad inc jmp inc dec pushw push test lretw sub cmp add ljmp lret lods jl repnz inc mov and test push arpl sahf sti xchg jecxz frstors aaa cmp sbb cwtl test mov dec (bad) xchg out lret sti stos push call call sub or lahf dec sub inc divl add mov in cmp mov hlt mov jle xchg push (bad) mov fdivr inc inc movb cwtl sbb stc mov enter mov inc pop rcr enter bound (bad) fldcw mov lock int3 (bad) cmp sbb sub or pop inc (bad) lock xchg mov dec mov inc sbb shr mov repz push mov jmp mov lcall aad and popl aaa sbb xchg xchg cld std xor nop stos icebp sub cmp xchg aad test cmpsb adc int mov out mov mov in adc and push inc stos sar pusha divb sbbb (bad) sti pushf dec pop jae clc and enter jo call fiadd sub push roll das icebp lret test or mov mov in ret stc xchg pop push jge test jne push loopne (bad) loop adc xor cltd (bad) cmp jp xchg mov mov mov fwait sbbl xchg hlt movb mov jl push js (bad) cmp inc mov fistpl ret call loopne js mov daa (bad) (bad) rorb push xor xorl cmp or clc add leave jns add mov push inc inc mov adc xor xchg (bad) lock cmpsb loopne mov cltd nop inc out xchg push push adc insl cmp lret and mov sub lcall push cmc loopne or mov cs das cwtl mov (bad) push cmc icebp mov mov orb fld in xor stc std clc mov xchg push scas xor sbb aam pop lods das xor cmp jge mov fcmovb enter scas pop aas jns outsl movsl sti xor insb push mov (bad) pop xor outsl jno cs push int3 pop cmp sub add dec and (bad) aad nop push cmp std (bad) and inc loop popa adc mov icebp push push or mov call push repnz inc shrb loopne (bad) in mov in (bad) fildll xchg fcom (bad) loop xchg jb aam push or xlat push xorl es adc add mov xchg cmpsl jp adc mov popf adc in lods xlat stc sbb (bad) adc (bad) mov mov and pusha xchg aaa data16 xor mov xchg andb sub dec sub ja daa push (bad) repz add dec push movsl cmp jp orb mov int scas mov stos cmpsl iret push lret pop out cs test mov fsubrl add insl jg or (bad) push aaa sbb xchg mov (bad) dec aas cmp into dec xchg inc jecxz (bad) pop cltd popf inc jno repnz xchg add jbe movsl push push cmp pop mov dec ds clc icebp sbb fwait ljmp ret out or push outsl lcall repz fiadd clc push std arpl dec (bad) jns stos jns and leave xor out cmpsl je dec push fwait int insl lret aaa xchg leave fimul jl and xchg inc test iret mov (bad) call fildll jnp xor inc insl mov xchg stos jmp aam cmpsb add jge jp sub pop inc in adc xor push pop in icebp cli mov pop push out sbb shr movsb fucomp or lock lret loopne fwait lods rcrl cltd ja adc sbb and sti mov adc fnstsw sbb test mov cli stos or cmp adc cltd mull push pop pushf or sbb and and in jge adc xor insb pusha aad inc sbb mov inc outsl pop sub imul idiv pusha sarb dec repz adc shll xchg mov sbb dec mov pop mov in pop pop mov add cmp push insl popl (bad) into iret adc adc push jb or test sub scas addr16 inc dec sbb fs lds and mov adc sbb lods (bad) in inc jecxz push les ds xchg inc dec xor xor lods popa in pop and xchg pop xor lcall sub pop es test aam idiv jecxz sbb add xchg (bad) into jno pop jge (bad) cs outsl sub cld lret dec imulb mov in les pop mov xchg jo ss rolb in mov pop mov test test das jne,pn jecxz,pn pop push cmp (bad) out gs xor sbb xor mov lds or sbb jl cli shlb in cmp loop sub mov fstl clc pusha aad or or frndint jbe add sub xchg lret enter inc xor scas mov lret aam test ja pop in into sbb cmpsb std adc xor add cwtl sub call xchg xchg pop cs sub idivl mov mov jnp adc out lock out pop mov arpl movsl stos dec ds loopne cmp sahf jnp paddusw or data16 insb out mov mov data16 mov inc and or mov jp sub insb scas mov iret and xor and ds test je mov out fcoml jnp mov jp ret data16 in sub lahf pop push xchg jnp shlb les xchg imul les test and scas sub or mov adc mov jle cmp pop cmc inc fidivr mov cmp jmp pop scas lcall or cmp mov rorl mov notb mov inc mov addr16 (bad) jmp das mov sti xchg aam dec aad mov push mov (bad) and mov xchg daa int3 mov les jmp xor fimul lea or mov out (bad) mov sbb into inc ja jg xor jg stos ss enter pop iret mov sbb sbb push push out rol push mov out jge mov inc or leave into inc mov out hlt shrl ljmp popl insl xchg icebp scas lock repz xor pop or push pop lods ds enter iret ret (bad) mov decl jl sti inc repz mov push cli lcall ds (bad) aad (bad) loop addr16 nop jle xor xchg fidivrl mov or incb leave test mov lret sbb jne sub cmp mov lret xlat jnp mov mov mov cmpsb popf cs push cmp roll rclb ret mov pushl mov or mov xor mov mov lods pop pop and ds ss pop (bad) jbe test mov mov out popa popa sarb cmc xchg ja (bad) int3 dec nop stos rclb sti dec pop and mov mov (bad) sbb iret jmp outsl in lahf fmuls testl popa lret mov scas frstor xchg (bad) aaa mov cltd enter mov jp popa shll xchg rol xchg sbb push pop and jle dec test jle pop mov movsb es insl pop divl int fstl mov mov mov out hlt btc int3 jb push dec arpl arpl aaa lahf xchg dec cmp popa sbb lds adc (bad) xchg mov adc jns sbbl xor mov (bad) mov ret loop xchg cltd jnp fwait adc test into lahf cmp mov jmp fmuls aad and cmp in dec outsb mov add pushf and out xchg xchg mov lcall aam insb mov lcall jnp and cli mov nop lea idivb leave dec xchg cmpsb inc hlt mov or test out adc mov pusha mov mov or ljmp ret and fwait (bad) out lret bnd ret mov sub pshufw nop xor es getsec add lock sbb adc and sbb pop movsl cmp ljmp mov and mov sub push call or aas out and aas jno mov out cmp test and sahf into add outsl aad out repz fsubs adc stc nop mov ljmp cmp and sbb aas jo iret push cmp pop aam mov push or pop or add cmpsb pushf jge adc addr16 ret imul cmp stc lahf pop insb test enter outsl mov jbe nop ljmp push push xchg (bad) cmp cmp xchg mov nop es out xchg ljmp sbb jno jae (bad) xor pop dec push cmp adc mov call jp ds jo loope xlat add inc dec mov add mov cmp push push gs jns fsubp into in addr16 das scas je push jnp mov jo (bad) in negb pop dec adc das movaps sbb ss jecxz xchg jb clts push ja addr16 pushf outsb test idivb cmp sub bound sub lcall push push sub inc bound push sti mov push or lods into cvtps2pi test pusha or sbb xor push sti clc sub iret punpckhdq jb push inc or mov sub out push lods call jns and popf scas push xchg gs cmp (bad) shll out inc cwtl iret out mov loopne,pt int movsb arpl mov jno outsl das lods and sub ss popf cwtl cmp push mov push bnd xor (bad) std sub loop test xchg out or jne or mov aad sti mov mov mov inc stos mov ds sti movl xchg mov mov orl fwait sar sarl and imul fldt adc repnz insl lret mov js mov loopne sbb ds push lret aad xor stos ja nop leave and adc mov cs out or jns and jb aaa je dec push (bad) iret xor test mov pavgb xor popf sub jnp cmp mov incl int dec in or aas add and cmpsl add negl lods xchg push test push mov push pop test sbb jb notl or or pop iret es les adc mov out mov adc pop pop push dec fwait lods jge (bad) sti xchg mov stos scas (bad) fwait add rorb cmpsl xchg mov jae xchg push and sub jbe sub leave fmuls cltd xchg add insb (bad) sbb dec push cli jle cmp pop push aam in mov aas pushf hlt notb push aaa cld push mov mov jecxz or ss sub fs mov aam push pusha adc out inc adc jge fwait push mov sub sbb nop xor (bad) pop or int3 ljmp xchg push or daa add ds cs popa xor lahf jbe xchg movsb jle or lea dec and scas or cmc push test cmp adc fwait dec sbb pop shrb mov dec push sub adc push stos mov addb pop inc jmp or lock xor scas xchg lret push jns repz mov sbb sarb mov repz mov adc je pop aad push xchg stos scas mov pop sbb sub fdivrs cmp cmpsb mov add cmp lds and (bad) mov shr cmpsl jb out jne lods mov inc (bad) sub iret sbb ss cmc or dec leave mov (bad) sub imul inc jmp (bad) sbb movsb in push mov mov add xlat aas enter cmp push mov mov jo (bad) mov ljmp xchg xor inc mov and cmpsl xor push mov push xor dec (bad) jp mov pop ss adc ds idivb jbe jb roll and leave outsl jecxz fnsave int stos cmovno lods push movsw sti xchg cltd dec fwait mov jo add nop (bad) fwait call out fwait aad ljmp push jo or fsub roll mov sbb pop xchg mov out mov cmp dec (bad) sbb push leave and cmp in and data16 movsb jnp mov mov sbb lods adc mov jo cld lcall in stc sbb ret imul cmpsl pop (bad) pop fldt add stos insl bound mov lahf je sbb jns xchg sbb rclb push aas jbe mov out hlt add add fldcw mov clc sub lds sbb adc push loope pusha clc fsubl arpl jae or push adc leave lahf aam push jbe xchg std std xor mov enter mov sub cwtl mov insb jnp sub mov out cmp icebp cmp out cs clc xor test in jmp (bad) (bad) mov stos fimul lahf push imul (bad) push mov dec dec ss mov rcrl pop mov pop insl mov out mov mov into movaps lds dec mov cs repnz mov push mov mov out arpl cmc and push clc fldz std jbe fistp imulb call add das sbb adc into imul push es (bad) cmpsl mov lret hlt sub inc aam iret jne jecxz scas fwait loope scas cmpsb arpl loope sti mov ljmp (bad) mov xchg fidivl aad xchg push adc xchg sub sti inc dec js daa xlat push outsb repz ret cmp xor mov hlt std test (bad) loopne mov je mov sarl xchg je fucomi ret push push shlb fs ljmp jbe xchg (bad) push (bad) mov mov setne xor dec mov imul outsb out stos std mov xchg ds lock bound or scas cwtl mov adc cmp (bad) xchg mov notb bound or into fildll std mov mov into je and push push inc ds xchg pop push cmp (bad) cmp cmp lea mov add ficompl mov out or loop int repnz repz adc and into add nop inc aaa dec enter popa mov and push lahf (bad) repnz jg add stos clc jbe fucomip cmp and shr dec mov out lret fsubrl mov jp mov push mov push out sub fsts loop pop cli mov int3 out cmp fdivrp addl rorl sub in ret aam movsb notb in sbb mov mov mov outsl andb xor (bad) dec jge mov cmc xor cs loope imul sub adc mov insl xchg mov xor xor ret sbb cmp in jb mov dec or cmp push stc cld xchg or (bad) push mov les push (bad) and pop int xchg (bad) (bad) pop jecxz adc xchg icebp cli jge mov sub scas pop rorl fwait xor cmp scas pop mov xor fbstp fucomip sub mov dec movsb sub stos mov movsl push in or mov pop sti dec lahf ret sti pop fst pusha or cmp mov mov sbb bnd dec test and subl push scas pop jl jl mov jns int3 sti jnp pop add and (bad) scas repz fnstsw lods rorl arpl movsb mov movsl aaa repz cwtl (bad) aad (bad) mull lods cmp push xchg lds fsub icebp cli in pop add mov movsb lret iret push in cmp dec adc movsl jno es pop inc scas pop inc cli int cli enter pop test sbb xchg cld lcall mov cwtl outsb in mov add mov iret pop ljmp daa lcall shrb mov pop mov xchg or aas sub gs ja lods mov sbb sbb (bad) xchg scas insb inc sbb inc stos mov aam jmp scas (bad) xchg cmp repnz imul mov add sub cli sbb dec xchg inc adc sbb dec dec ljmp pop out jb test std cltd mov xchg jnp inc xchg jg sbb in push pop rcll ror push mov mov out cmp xor fbld mov mov icebp sbb repz dec fbstp imul insl xor fnstenv cmp ja xchg jecxz js imul and and in ja loopne or test jg mov pop cmp or ret cs add dec mov push stos cli popf (bad) jae cmpsl scas jp inc fisub lahf (bad) jb (bad) fadds mov cwtl and loopne push sub out adc push and push inc (bad) fldt cmp and inc mov stos inc test mov repnz int3 ljmp stos aaa dec push sbb fistl enter mov icebp lods insl in mov xchg outsl xor and xchg cli frstor in or inc pushf add rcll bound pop movsl cli out xchg sbb je loopne xchg dec nop outsb out push (bad) out mov in mov out push bnd stc sub (bad) xchg sub mov inc xor jns push add xchg mov addb dec cmp mov rcll sub sarl mov mov sbb push jle push test loop adc fnstcw mov cwtl repz cmc cmpl inc jns lds ds rclb cmc (bad) jmp push inc inc arpl and clc xor scas fwait out hlt into pop xchg call pushf cltd mov test iret inc test cmp stos mov add sbb or popf push push push sub jp or xchg mov sti mov pop mov sbb mov lods mov pop push jbe or je push outsl pop xchg sub test outsl bnd adcb xor cli mov test leave mov lret lret mov (bad) and out out sbb jp popf pop xchg jp xor add fsubrs (bad) adc out inc mov push add mov inc ret mov mov frstor dec call sub inc push lods xchg cmpsl jbe pop ljmp add or mov push mov cltd in cmp (bad) mov movsb sub mov sub cmpsb call insl push scas loop add scas adc std and out das fistl loop cmp jno push sub xchg and push pushf ret lret cli jnp hlt fs ljmp or repz inc repz out sub mov andb push fs loop sbb js mov test sysret mov mov (bad) jnp in (bad) pop mov add mov push mov cmpsb or push mov dec jbe pop aad inc (bad) fldcw loop xchg sub arpl cmp loop xor lods (bad) jb cmpsb xor pop divb leave or aad ds cmpsl cmp arpl iret mov and imul outsb repz cltd aam (bad) cs jae adc pop add ja mov pop addr16 pushf insl mov jbe xor cmp out scas into icebp push aas sbb fcoms jp dec popa sahf cmpsb cmpsl (bad) dec in mov jp mov into mov sahf add daa aam in loopne movsl call cmp adc cmp push fwait lods out in and or jg (bad) inc fsubrp pop sbbl jo dec test cmp ljmp mov adc (bad) add or out sub inc test push lods (bad) xor insb adc std movsb mov dec xchg mov inc or repz andl (bad) mov mov mov cmp xchg push xchg bound insl jmp push js mov inc fstpt lds mov and mov fisubrl mov stos lea (bad) je iret add jnp sub std push jmp adc repz jne test nop add jp mov outsl push iret cld xor pop add cmp or mov xor mov mov sarb pop cmp lcall mov jle popa push cmpsb inc into aaa pop mov sub std dec pushf add (bad) aad mov in mov jns (bad) and push mov call xor mov push and add clc adc leave lahf pushf mov mov cmp nop lods or dec pop (bad) insb iret mov dec les sub (bad) or push scas movsb mov push mov call xchg pop xor fstpt ficoml pusha mov imul jb xchg mov sbb outsl sub push stos jle mull xchg popf loope (bad) xchg stos dec xchg xchg push (bad) aas add pop jge ss (bad) out adc jns lods mov jb and aaa xchg shrl iret xchg add xor test adc jbe pop xchg popf pop pusha fwait stos sub adc dec and mov jl addr16 fldl xor (bad) iret nop mov fimul outsb or imul loop fidiv cmpsl aaa dec xchg dec dec das pop mov loopne ljmp cmp dec in push xor nop data16 test aad movsb mov push xlat (bad) cmpsb push mov jne test adc sub xor xchg mov out outsl jmp sbb adc sbb cwtl enter cmp popf jmp xor outsb push adc aaa mov dec jno call or jle add cmp xor dec (bad) xchg popa adc fldl leave (bad) repnz cmc pop fstpt inc bound push fsubs or cli int push pop and add and popf (bad) inc dec js add out add and (bad) cmpl call lret stos sahf push lods xchg push sbb or in pop jns or cmp fsubr and mov das lahf rcl lea scas push ss rorl test dec push sbb cli or in and sub out gs fadds cld push fldl (bad) dec (bad) xchg mov mov or push jle scas sbb xchg sub add push push jnp fsubs cmp xor je int int pop icebp xor mov in enter adc lods and mov dec loop shll movb sbb gs mov xor movsb in stos call push mov lcall jp out movsl leave dec sub ret adc js xchg test push pop test mov push and leave push jg and adc in test push in mov cld cmp xchg test fsubr cli xchg call cmpsb outsb loop andl stos pop pop sbb movsb or cmp addr16 dec xor pop sbb push sbb mov notb cmp (bad) lret ljmp out call icebp rorb ljmp push push popf and dec sub gs cmc sbb and nop mov cli xor jno add das popaw jge pusha xchg jge or ja push out inc mov in mov gs (bad) dec jns xchg lcall mov cltd aad inc in outsb andl or call sbb inc stc rcll dec mov add xchg fstp jge xchg cmp push mov inc and lret xchg lret push sbb jl inc in add push cmp push pop cmpsb add call repnz aas shrl or shlb mov fwait pop popf sahf adc cmp pop jg jnp insl frstor adc sub xchg xor fdivs lea in dec sbb pop dec stc add inc ja and roll push xor icebp les or add mov inc lahf pop mov mov insb cmp push repnz jge or or orps pop aaa jbe imul push sub pop pop fdivl js push mov (bad) ss mov pop (bad) adc adc insb scas leave push lea mov xor xchg in sub ljmp mov out rcll pop add xor push in stos sahf cmpsl mov es xchg add and jg ljmp pop pop inc mov pop xor mov out xor pop push push daa cmp stc pop adc mov js xor (bad) dec (bad) cli call test inc stos xchg out mov jo clc add movntq out inc inc out test orl test inc (bad) pushf or mov jo xchg push pop jl pop les bound jnp movsl test daa mov pop jb inc cmp sub push xchg jp mov jge mov xor aam shlb (bad) xor loop mov xor jmp add arpl sahf and ret jge push mov and cltd jmp and and inc fwait inc xor add or mov add outsb and sub leave pusha mov sbb (bad) pop and cs repz lret test int3 mov xchg add fwait into test dec jne daa je xchg pop add inc add dec dec cmp inc hlt and inc xchg cwtl mov (bad) pop mov movl inc dec or xchg xchg xor sub mov adc adcl push dec testb adc xchg (bad) (bad) sbb cltd xor and pop pop pop pop (bad) ud2 mov pusha push cli loope pop pop fs add je jle (bad) cli hlt dec test mov aas jns mov (bad) xchg xchg xlat mov jbe subb insb pop add sbb mov gs adc stc mov jge (bad) hlt popa inc sahf inc mov aas fmul mov in jge lahf jle fwait in inc pop ljmp jmp adc adc mov out push xchg aam jmp mov sub ret aad xchg inc (bad) xchg cmp fnstenv or sub lock push (bad) xor mov adc in (bad) int incl sbb icebp fnstcw ss dec std pop cli imul or mov cmpsb inc sahf ds push jl imul call sbb pushf xchg mov and push (bad) insb pop int lods test lcall xor mov jg push stos cli mov sbb fdivl jb ffree push mov into xor dec ret out das and xor mov icebp mov sub sbb pop scas fisttpll leave adc fs out push mov push sub dec ret lret bound inc insl ljmp (bad) enter mov stos nop in dec rcrl ljmp adc dec adc loopne (bad) insb lcall ret adc das xor daa mov nop ds add les out or jmp add or das jbe push outsl add push cwtl dec fisubl inc adc aas loopne pop movsl xchg add fsubl mov iret push sub xor loop xor adc fisubrl jnp lret adc lods mov inc xor cmpsl xchg lahf sbb shlb jge in ljmpw inc shrb push mov out jno lret lds call sbb mov (bad) popa pop mov lods pop sti outsb push imul icebp sbb ret insl mov test push cmp ret ror aad pop pusha push push lcall fiadd pop cmpsl (bad) jg stos hlt cld ljmp dec jle mov mov xchg inc xor sbb pop jae jg cmp cs jge rorb or enter ds mov ljmp sub cltd mov negl das popf jl,pt aad enter imul dec mov sub inc xchg loope adc jecxz mov push (bad) lcall imul sti sti outsl cs mov fcoml ret cs data16 stos cmp pop sbbl mov add mov add lds dec or int3 sub pop fiaddl mov push out test dec sub orl cmpsb sub aam pop fstl ss into sbb jo lret mov aaa rorb pop rorl aad (bad) mov (bad) dec adc cmp and repz xor ret inc and sub das pop mov aad or fbld inc lret push or mov out lcall mov dec xchg mov ds (bad) mov mov push jle test (bad) (bad) in cld pop jo leave in in mov orps rorl xchg ds add and adc repz in das in (bad) (bad) sub aad leave scas mulb xchg cmp loop mov iret inc stos rorb sarl push fdivrs jl or aad out pop (bad) push ret fstps movsb stc addr16 inc (bad) ja cltd jge mov xchg dec cli add out or lods xor dec lea fdivl sbb dec ret mov cmpsl xchg dec mov test sbb push cmpsb inc repnz fadd push pop sbb mov jp pusha ljmp push dec scas int mov aaa lock dec inc addr16 mov pop test xchg xchg pop push inc sahf dec sub add out mov push or aam jnp in add rcll bound imul out sub clc out mov sbb pop popf xor cltd rorl adc pop xor in inc imul cwtl mov into dec sub inc jg sarl (bad) xchg pop pop mov cwtl cmpsl test jno rcrb test (bad) movsb xchg fnsave test cmp pop and cli and dec (bad) and add mov mov aaa dec cmp out xor out in in stos mov push push push test adc sub push outsl aas push insl xchg push mov enter cmp fbstp dec pop mov add ja ds in sub mov int pop push cmpsb popl sarl outsb push xchg push pop sarl push call ret push xchg adc sub lods cld pop mov aad rorl out push std xor ret and loopne sub sbb jecxz xchg imul (bad) mov dec rorb sbb shll int mov push (bad) xchg (bad) and bound pop (bad) in push bound xor add jae fiadd xchg push std mov sarb (bad) lcall mov push and into (bad) xor sbb mov lds adc add inc sahf pop jmp push std dec add add pusha inc lea bound (bad) out cmp jne push loopne lods mov xchg fwait out adc lahf ret dec jae data16 jb pop jns loop iret and mov pop cld push mov cmp data16 daa pop add je push insl cmp mov mov rcl shll test dec int3 lds mov mov (bad) dec ds (bad) adc mov push dec mov mov aam scas jnp pop ljmp xchg jb jo sarl inc jmp or pop mov mov mull cmpsb iret lahf jge cld test popa repz gs push call xchg mov xchg pop stos push leave shrl es das leave addl xchg cltd insb das xor inc (bad) xlat test call and cmc lods sub jmp push inc in int mov mov popf or mov (bad) negb push inc bound mov mov repnz scas and (bad) push cli and mov adc mov mov cmc pop cmc mov cmpb into jnp dec lcall mov (bad) clc aaa push adc pusha add movsb loop inc imul push (bad) mov pop mov fcmovne movl xchg sub cli repnz ljmp mov imul inc inc outsb cld push mov popl (bad) dec jnp rcll adc cmpsl or and xchg ret cs insb (bad) mov mov jle ret or jno in cmc rclb (bad) stos repz add sub sub cmp fdivrl scas adc add xor repz in add ljmp xchg div (bad) push jbe clc pop dec mov xor inc push inc pop mov jp adc dec ss push pop cmc sti push mov adcl stos mov scas fsubrl mov push pusha outsl cli (bad) dec sbb (bad) addl add or pop mov fidivr fdivr xchg test fiadd inc adc out push mov xchg cmp sub pop lods push faddl bound (bad) xchg jp lock (bad) sbb das xchg adc mov push mov adc test outsl and cmp cwtl sbb cld out mov inc (bad) push stos test mov rorl or or xchg pusha icebp mov movsb addr16 daa in out inc adc (bad) fiaddl add fcmovne iret test mov mov mov bound js or inc leave mov stos xor out aad xor and cmpw movsl jnp (bad) shlb push add inc jl out dec cmp js call and insl mov mov ret and adc shl mov pop sbbb in lods xor lret ss sub mov sbb outsl ret in scas sbb adc popa imul jmp les and scas (bad) jl xchg push mov pop and inc push jo dec or jge add xor fisttpl push adc push add fldt pop mov mov adc fsubl fldt cld and xchg pop stos lods pop cld in sub call outsb cltd es (bad) adc mov pusha cmpsb mov mov mov sbb mov and cmc decb jbe adc ss xchg stos repz xchg pop xlat loop inc jmp jae add pop scas dec mov and mov in cmpsl aad sbb sti push adc and push or dec imul enter ljmp mov add inc enter fistp icebp push aaa pop leave or loop lock add jns jnp scas cmpsb sarl cmc fwait jmp inc addr16 cld rorb dec jg std out in into or push movsl jmp xchg jo mov jbe mov clc inc sbb sbb in lds or outsb xor add scas rcrl ffree inc test mov lahf das out iret ss (bad) iret sbb hlt jmp aam mov sbb push aaa push pop test ja push xchg std add cli dec add mov (bad) push xchg ljmpw push arpl mov popf inc mov adc push and into lods xchg lods mov jns add and (bad) xor sbb push faddl pop lea mov nop and pusha sub fsts sub (bad) and cli fndisi(8087 int3 aam orb sarw cmc or mov jl pusha mov in mov mov adc jge mov xchg mov xchg mov js push ror pop daa add addr16 arpl (bad) iret mov or test dec xor loop aas xchg push popa cmpsb push xchg add pop or lds lods ret adc or pop in movsl jp mov pop stos outsb pop sbbb cmpsb pop mov sbb cltd mov (bad) lcall loope mov loopne ret lret into mov int in lret or loope push outsb shlb mov xor es adc repz cmp mov dec mov pop sub and sarl cmpsb pop gs jmp loop fnsave neg lods (bad) aam clc mov popa faddl push mov dec insl xchg pop (bad) cmp in (bad) xor jl dec xchg mov push dec loop xchg divb cmp stc (bad) fcmovnbe (bad) aaa jbe pop (bad) pop fistpl (bad) ss (bad) (bad) sahf cwtl cmp jae lret lea movsl int3 loope mov and mov push sti or xchg sbb in xchg lock sbb add aad jnp pop out mov push pop or fisubrl xchg in subb cmp vcvtss2sd lods jbe mov repnz cmp or pusha lods ja jecxz lcall fistp push adc cmp mov cli mov rcr rorb sub movsb pop push stos jno (bad) jno out cmc dec (bad) jno mov ret data16 sbb and sub or pop jbe pop adc mov pop stos and or pop popf into adc xor out lcall cmp cmp ret stos jo cmc out hlt lods aad (bad) dec out leave cmp jb (bad) xchg mov cmc jns pop fbstp in test ja cli adc jmp outsb push rorl ja out push add cwtl stc pop pop lret aas fcmovnu int aad leave nop xchg pop test lahf out xor and repnz sub repnz cs out adc aad mov adc imul leave and adc imul and push (bad) inc divb sub jno scas fidivr cmc adc pop dec pop call add in xchg xchg out xchg jns mov xor lahf push nop (bad) out dec pusha rorl xor sub sub mov aaa push aad pop inc cmp push or shll push adc xchg dec nop xlat aam jne jmp inc insl dec (bad) fisttpll repnz out xchg leave lcall repnz dec inc sti push dec subl pop jnp arpl rorb push push xlat stos jmp imul mov and in (bad) add or sahf mov out bound andl cmp xchg enter or sbb (bad) and sarl popl sbb stos xor mov movsl jg and cwtl frstor dec xchg xor das shl xor in mov pop iret sub adc pusha aad js mov rorb repnz mov push push push push mov mov xchg fadds je,pn adc xor pop push pop lahf int adc nop dec loope push dec mov out dec push pop push inc push jbe outsb mov jge cltd push push sbb push jno leave adc out movsl lahf xchg arpl pop ljmp faddl sub imul mov sbb (bad) jmp cmp add xor aaa out (bad) mov inc clc mov and sub pop mov add cmp fmul mov fmulp out mov mov jg aam mov (bad) fistl leave loopne fidivr jecxz ss inc jp mov out jge jp push cmp jnp mov sarl pop pop mulb es xorb dec ss lahf mov aam fs pop out jns sub jmp xchg lods aaa sbb daa rorl pusha popf sbb sub repnz or adc mov mov and daa out dec lods cs repz mov imul mull cltd (bad) shlb cmpsl enter repz fidivl notb jmp or dec mov xchg mov sarl cmp jnp ja adc test jp push and xchg fisubrl pop push scas aas push sbb jecxz iret mov pusha xor jmp ljmp bound jge and push js fdivl fcmovnb cmc cs xchg gs or fcompl icebp sub test jne push aas sbb cmpsb dec es mov outsl inc icebp and fs outsb inc les scas fdiv insl ror adc std enter imul mov jb test dec addb mov sub cmc cld test ja loope dec inc sbbb popa fstps mov push mov test sub mov mov xor fbstp push fstpt or cmp pop push or ret ss add mov sbb idivl push fildll iret mov and mov into es in (bad) out inc popa or adc hlt das pop add and shll cmpsb sbb cmpsb ret push xor mov arpl mov (bad) clc fsubl mov or (bad) xor out xor (bad) (bad) std cwtl sub mov shrl insb jns pop fsubrs les fidivr and iret lahf mov add xchg jnp sbb sahf cmc dec xchg daa loope clc sub push or imul testl push and loope cwtl mov mov test inc mov in adc data16 xchg or xor ljmp add fs lcall lret push mov push cmp jbe icebp xorb cmpsb fisubr pop js aam insl and sbb hlt int mov cmpsb mov lret pop movsl into dec insb mov xchg imul das dec and leave or inc mov adc gs push adc inc xchg scas mov inc pop addl lahf pop add xor jg sub xor testl insb out loop dec insb outsl xor jl mov leave js push push pop cmp daa int3 mov int notl pop cmpsl cs mov (bad) aas jmp push adc fidiv (bad) lcall mov lods add pop rorb push or pop mov mov mov mov aad rcrl mov gs push loop push push movsl imul pop mov (bad) movsb jb,pt cli xor push pop mov cmc sub sub pop xchg fsts rclb xor cmp mov push movb or mov out sti cli xchg or fistl xlat and push adc cmp cmp sbb icebp xchg add adc xchg inc and arpl jecxz lcall cmp cwtl int push fwait sbb inc xchg jb or xor shll das pop mov and cli imul or inc popl add bound sbb int (bad) imul pop xchg adc pop add mov imul call cmove sub enter jo dec int3 scas xchg lret in jp imul in mov (bad) xchg cwtl inc ficoml xchg pop mov dec add test imul mov xchg dec (bad) out mov add xor or dec (bad) ljmp jg xor cld pop (bad) fidivrl cld mov pop (bad) scas pop mov xor jp pop movsb or stos sub mov or ror loop add xchg enter push (bad) icebp je mov test or jecxz push mov call pop inc inc and pop add idivl pop mov mov es es cs push inc test dec lcall fucomp xchg xchg sbb fadds sbb imul fmul adc call in cli mov mov inc mov notb xchg sbb cmpsl adc push push add dec outsb sub std xchg cmp xor lret pop cltd sbb add pop scas jmp cmp fidivr iret ja insl add fstpt je cld sbb inc mov dec dec dec jmp add push mov stc pop fadd hlt sub xchg fidivl add int3 out or cs out rcl hlt insl adc mov fsincos push pop jmp aad adc or mov std and xchg repz push mov pop dec bound mov ret pushf jl xor push cmpb jg pop les lods mov and mov cs aad gs (bad) mov enter mov or test pop repz jecxz push das mov les outsl imul xchg dec jb lods popa movsw pop sbb pop push ja repnz ljmp sbb add loopne sbb xchg sahf subb sbb add mov sbb test call (bad) pop jecxz testl fadds adc test fsubrp jmp in and push cmp lret mov cmp jle mov dec sub fwait bound inc mov dec xor in scas (bad) pop sti cmp repnz mov jno mov sub sbb sti cli mov jg (bad) dec jge shr lods enter mov (bad) cmpsb cmp mov loope push shlb lret fwait mov test repz xlat inc xchg (bad) pop xor repnz mov push add dec push aas lock adcl xor push xchg sbb das xchg or mov jg push mov faddp shll aam je int3 test push mov pop cmc xor mov stos xor jae cmp adc jg movsb or std (bad) aam out push push push push xchg insb or loop inc xor add scas mov xrelease cltd xchg pop dec out xor mov push mov les dec dec es out loopne mov dec test mov dec cs aas xor add ss inc and int3 (bad) lods lods xlat push inc out or repnz stc jbe test push nop inc (bad) mov adc mov mov (bad) ffreep mov ret mov add (bad) cmpsb and imul push loop push push dec aam and cs push std push scas jp je push xor ret xchg mov (bad) les stos pop cmp jb push aas stos mov mov pushf icebp lods pop lcall insl popa cmp add pop add jp xchg add cmp adc xor in nop (bad) jbe dec loope or or cmp xchg or cli into sub int inc mov test push xlat and iret sbb pop add mov fcoms cmpsl repz mov iret fisubr jge cmp das adc icebp scas adc fwait sti add mov (bad) shll jne mov sbbl adc pop inc loop shl lock inc xor lret sarb push dec dec add in adc test in mov sub push loopne pop out stc xchg sti jmp stos mov adc int3 in dec pusha in dec ret xchg lods or pop mov cmp push push pop (bad) and repz stos roll mov push cltd cmc pusha mov ret and or leave pop mov es mov fnstsw push addr16 les adc fs add aad and ljmp rorb pop scas sbb fwait das sub fwait call add aas addl mov je popf xor jae sahf cli out adc push mov push bnd rcr jle adc rcll or pop and mov xchg stos mov std pop loope sbb or cs add or movsl in outsb adc jp cltd fimull push mov jne xchg js mov mov pop imul repnz pop or fldenv sahf ret xor outsl dec icebp sbb aam repz gs xchg (bad) js in mov pop cs pop jl mov pop adc ljmp and push ss imul mov pop and inc jb push xchg push adc (bad) setl sbb xor mov jb scas cld inc arpl int3 sarb sbb mov shrl jno fwait jl jnp sbb push adc add sbb add fmul enter sahf pop cli mov xlat iret (bad) aad pop push sarb adc fldt mov icebp adc dec adc into (bad) xor int3 and loop int3 pop test push jnp adc push sti push inc cwtl push iret cmp jge lret cmp aaa lret aam nop push xor push mov test mov stos push mov push sti inc insb int (bad) ficomp sarb pusha push mov xchg lret xor sbb mov jmp mov dec dec cmp (bad) aaa sbb pop xor inc dec scas xchg outsb bswap pop mov inc rorl ds mov push aam adc ret add lock mov scas mov (bad) pushf xchg movsb add adc test or roll cmpl popf shlb repz loope mov mov stc lahf jg ds ficoml xor cmp mov push push sti pop rclb cmpsb xlat inc adc or and loop jne mov mov jge bound xchg repz inc cmp or shl es jmp jecxz lds int3 inc pop scas ret sbb sbb xor data16 jns xor cli stos pushf xchg lock pop dec fisubrl push popf les pop cli test fmul add movl push into lods lret cs adc sahf aas bound mov sub and imul or pop sub nop scas iret xor cmp imul test xchg mov out movsl add jo imul cs sub mov dec daa jne fstp cwtl sbb lahf or mov adc mov jl jp (bad) mov add push popl out mov cmp sahf mov push or sbb mov sti inc repz in lret add lds or add lods lahf les idivb cmp jns (bad) adc sbb push inc jmp cmp rcll adc stos (bad) fisubr xchg xchg fldt sbb aad scas xchg dec pop mov xchg xchg add loop add dec ds test int3 (bad) (bad) mov add popa jns (bad) push lods (bad) or out bound mov add mov mov lods mov xor (bad) stc sub and leave out aaa mov fildll bnd mov and jb mov mov je cmpsl lahf mov push or adc pushf sbb in lods xor and sbb mov lcall xchg mov mov sub jl xchg jns icebp dec jl sbb xchg and faddl ja mov jle add mov mov enter clc out imul data16 inc cmp scas scas sub hlt outsb lret push xchg or fdivrl push mov inc je pop ficomp lret rcrl arpl out cmpsb pop and adc ljmp (bad) push out fstl (bad) cmp dec xchg sub lahf test mov lock xor sbb xor das loope (bad) ret or repz jl imul movsl in adc nop repz mov (bad) jecxz roll test or stos xchg xchg mov lods and ret xchg adc inc add fidivl push xchg xlat int jnp fs repz scas adc mov pop push sub out into ret dec push jp mov dec pop and mov enter dec ffreep cs aam jg (bad) fsubr fsubrl js aad (bad) cwtl mov inc pop and and mov add pop cli setno test adc pop mov or not mov sbb cmp leave shr hlt int ficomp push jae iret jo inc push push jg inc fdivs jae push mov icebp fwait jp sub outsl jae leave cmpsl sahf aad adc cmp adc xchg in pop xchg mov push adc lcall jns or push mov mov test sbb push cli int inc mov and notb xchg mov test jecxz hlt iret nop rcrb mov stos adc xchg jae icebp iret scas clc xor or mov push out xlat mov xor add ss cwtl gs dec mov push (bad) mov push mov push sbb fwait lock mov sbb ret or in mov sar xor inc sbb cmp cmp out cmp and dec test lahf mov push int3 ret test fistpll in imul xchg movsl xchg imul mov xlat test repnz pop es fcmovnb fcoml mov scas mov jbe (bad) jbe shrl add inc sbbl dec movsl xchg pop stos mov jbe leave aaa repz lret and adc gs in rcl pop leave jg rcrb push into aas jb arpl cmpsl je faddl pop xchg scas test add scas pop ja mov sti or test lret lods aam (bad) lods push test ret fld lods insb jae mov dec (bad) jp pop add push dec pop (bad) (bad) (bad) jae xlat dec inc add add movb pop jge adc inc lds jns mov xchg out xor mov cmc mov sbb ss sahf lahf push repz int sbb add xlat mov dec inc pop and (bad) test cmp (bad) adc pop or dec inc fwait ljmp lahf push test cld cmp add fldt pop mov add ret data16 add mov jbe mov fdivrs pop imul cld pop dec add cmpsl rorl cmpsl xchg push jp and inc push jnp push fdivl push fwait sub jns fwait inc sub lcall das std in gs mov xor lds lcall push push inc dec bound dec xchg sub pop add xchg push test in icebp jbe scas mov push xchg pop incb dec push dec nop add test mov fdivr clc dec mov push adc ds in push fild test mov dec inc push lret outsb addr16 sbb aaa ret dec cmpsb xorl jmp scas push gs aam add test inc mov test push mov pop or aaa in pop xor aas jo mov decb push out int xor stos add iret sub xor jecxz pop push sub rcl mov mov inc repz (bad) aam int int3 add (bad) imulb mov or sub idiv xchg jecxz cli dec es out mov lods add add mov adc leave pop repnz push lods or fbstp adc cmp lret pop out fs cmpsb rol dec and cmp push add or sub push fisub mov or out loop popf push mov (bad) cmpsb mov xchg mov fld lds mov faddl cltd (bad) loope dec ds rorl push mov add (bad) dec cmc mov in popa fnstsw lds aas ret or leave lcall call sti xchg jne (bad) out orl rclb in lret shlb sub add mov les sbb or xor and add fwait xchg fstpt jmp test inc ja (bad) mov pop fimull (bad) or pop lods push pop faddp and xor aad insl inc mov aad jp pop ljmp lret mov aas out inc (bad) pop (bad) dec stc or cmp outsb dec daa dec add jb les mull pop push xchg ds in fisubrl mov imul mov cmc pop (bad) lret inc lods jbe out fstpt das jmp int3 popa jbe xchg sahf lcall add ret rcll insl nop imull in sbb test in arpl iretw mov (bad) jb inc or int sub mov mulb cmp clc repz mov mov fstps cltd xchg xor mov mov jmp lea roll cmp mov sti or clc sbb xchg shlb rorb out cld or cmp loop,pn sbb loope jmp in dec mulb mov push or jle out pop mov and test pop cmp jl rcrb sub hlt fwait sahf dec aad push jo adc jne loop add adc push sti add and (bad) xor out inc fmuls mov jmp dec mov out adc mov mov and push insb cltd data16 mov ss mov inc or adc dec cmp dec (bad) ss push or pop and sbb or in mov cmp out sub mov sbb mov or enter push cmpsb ficoml ss mov jp inc xor pop add sub in daa (bad) jbe loopne pop nop adc lods bound clc lds addr16 sarb or add pop xchg xchg fs insb lcall fcmovu inc inc fldl mov test jne lods cmp pop data16 popf add addr16 in leave mov getsec cli leave fnstsw ljmp add fs mov out or xchg cltd in mov lcall out dec push clc mov mov mov aas (bad) arpl in or push gs xor enter push into inc lret loop sub xor loop jp out adc arpl repz cld in cld or xor in xchg mov gs sub push movsl cmp sar lock dec repz and cld cli jae (bad) cmpsl repz cpuid test out and sti dec mov and out aam fwait adc push leave pop outsl sub add lds fwait pushf mov pop jnp jmp repnz cmp cli fnstenv adc adc shrl xchg jmp loopne mov cwtl lea adc pop push (bad) dec cmp (bad) scas push ja sti lret sbb mov (bad) mov fldcw or (bad) dec rcr es dec pop subl add or les out (bad) cmpsb mov lcall push add rorl mov aaa cmp mov cmp adc xchg fucomi (bad) fist add dec leave fidivrl insl add outsl sti int3 xchg rcrb or cmpsb rcll jo mov and mov jle sti cwtl test mov adc push adc dec pop push inc int3 imul push decb hlt ss mov mov ss mov jb (bad) jbe fist (bad) xor fsubrl mov pop sti jge movq pop cmpsl mov mov scas xor ja mov inc outsl jnp,pn mov xchg sub out add lock lcall jno push push fsubp fildll loope das out and or (bad) lods gs and mov push ret add dec (bad) jb mov inc jle pop cs xor daa (bad) (bad) push or int3 ja push mov in aam pop fisubrl dec sbbl xor gs int dec cmp shll pop mov out cmp cltd mov repnz adc (bad) xchg dec pusha addl sub imul rcrl stc pusha jb xchg and pop push push push jb xor xor (bad) xor and cli andl fcomps pop (bad) imul movsb loope mov xor push push stos xchg idivb xchg (bad) mov movsl (bad) sti call jbe sub (bad) nop sub xor push ret inc inc lahf ds loop add push mov insl adc loop add ret aam dec pop ljmp dec inc pushf (bad) cmp push mov sahf test xorl or mov push nop push scas mov dec push loop addr16 jg xchg push jg repnz mov cmp insb cltd mov add test ss pop or inc sub mov sti lods arpl jb outsb pop aas pop in xchg lahf andl out cs sub mov (bad) out pop push mov lahf pushf daa insb (bad) adc adc std jmp cmp int stos mov dec in or inc mov push int3 push lcall jecxz jmp es rclb cmpl fsubrl or lret sbb lods push cmp mov xor movsl or mov push xchg es popa jge es fcomip nop sub or or add lahf sbb lds inc orl jno es sbb imul shl push stc pop dec sub icebp aad xlat adc cmpl xchg loop fwait jg pop clc lds push xchg jb push inc sahf or mov cs jno sub scas push clc das icebp or push inc mov stc insl push push outsb imul fildll fimull sbb cmp push int3 fisubr repz cmpl mov faddl lahf pop add cltd fild jnp pop pop cld mov jp xchg sub cli rorl test sahf (bad) mov out sbb into mov pop mov aas es scas loope add into and jg pop jbe add (bad) cltd (bad) (bad) jns decb mov or cmpsl inc push push ret pop xlat and sbb push lods push aas or clc imul pushf lock das or push mov les pop (bad) data16 (bad) push pop mov int mov mov int3 xorl inc (bad) push (bad) js xchg xchg xchg rorb dec sbb es ret test cmpsl xchg test inc bound pop lahf or adcl xchg pushfw ja in cmp (bad) lcall cmp xchg jbe add jb mov sti fstpt and mov data16 fimul push stos scas pop iret and add sahf int pop lds (bad) std adcl cli in rorb and loop xchg jl xchg lods add loop dec dec mov inc pop push pslld mov add mov fcoml jns push mov iret adc int3 xor push mov cli or push jmp xor mov inc aaa push lret (bad) pop rclb jp push mov es mov push jbe lea shrb mov in (bad) fcompl sub fdivs cli sbb out inc les xchg decb xchg add lods push dec lock inc jmp dec fwait cld sti jbe out rorl ret in jp add in in arpl cmpsb xchg out in cltd ret repz loopne pop jbe ds lods xchg pop iret xchg (bad) mov (bad) out lret mov mov inc mov cmp bswap fwait mov mov into out shll mov push repz int3 or mov mov pop xor push pop fisubrl mov pop adcl movsb mov xchg mov sub xor je mov in (bad) xchg loopne mov (bad) pop stc sbb or into popf movsl mov add add xor das stc push cld push in adc sar cmp fist lods push js movsb mov aas aam jge fdivp lods sub sbb sbb mov test and subb mov ds (bad) pop push mov pushf and push push mov fs jg pop loope insb inc ljmp inc add xchg or fdivrp ret (bad) sbb into inc push mov test pop push data16 pop xchg das mov ja mov mov jmp fsubs fwait popf push and push std sub aaa push sub jp aas stc fbstp call divl dec push mov (bad) ret repnz cmpl data16 aaa xchg ljmp loopne dec out loop jne iret cmc repz xor mov push sbb mov mov fcoml sahf push stc pop dec jnp lcall ret data16 dec mov add mov popf js arpl xchg ret fcoml dec push pop loopne insb jb roll xorl pushf mov mov jmp int3 push sbb jae adc in int into outsb or lret pop addb mov dec (bad) sbb push int3 push sbb mov cmp imul icebp insb mov gs data16 and dec decb mov aaa cmp xchg lcall mov (bad) clc cmp mov cs jo add nop jl lds ss or push out mov fucomi or rcr ret pop call rcl xchg fdivs dec dec lds loop add mov call ja mov loop lcall sub fs dec xor xorb mov bound ret cltd cmp pop (bad) hlt lds out (bad) clc add outsl lods dec lds loop in incb (bad) mov aas call (bad) (bad) pop sbb fsub ret clc ljmp xchg sti xor lds pop scas in (bad) jp mull flds push sub ud1 fldl xchg dec jo testl inc xchg cmpsb push bound mulb sbb into jp lahf enter dec pop sbb cltd pop insb mov dec outsb lods in mov inc jns sbb out jnp test das es popf add repnz out shrl das aam js fbld push test add dec mov or fisttpll pusha xchg insl mov cmp pop jle sub mov int and mov add cmp les or cmpsb into or int3 xchg mov pop xor int into sub insb stc (bad) lret push stc icebp pop (bad) stos add push stos cmc adc cmp into cmp int fwait or icebp int into mov orb push jns mov or push mov int3 jle push pop outsb mov dec (bad) dec int into jle mov fild add lea (bad) fwait add ret push or je cmpsl mov ret pause mov fisubl dec push (bad) shlb call mov and inc iret mov or adc stos int int jno inc stc fcomip sub pushl (bad) dec add orl pop xor jbe xchg lcall xchg inc push (bad) int into mov divl push jle leave mov or test cld mov push mov iret hlt ror nop scas or jnp mov into mov fbld push push aad sub mov adc popa fisubr sbb dec dec mov loop out cs pop and int3 jbe dec mov popf or jp (bad) shll mov packuswb test push adc xchg jae jmp jmp sub sub dec rcrl fldt adc xchg push inc jp xchg aas shl mov imul fsubrl outsb add or icebp push out sti jge ja ljmp fbstp pop mov lods xchg ds pop xor mov adcb add imul inc imul xor fdivp insb jne inc jg mov adc push (bad) adc repz push mov xor rorb xchg (bad) push mov jns into imul and push mov imul ror test pop jg shlb inc jle shlb neg mov ljmp or ficomp scas je mov cmc in leave (bad) mov jmp sarl xchg (bad) mov inc push xor and ss mov shrl cmp and jmp fisubl cmp (bad) mov dec xor cmp add shlb inc mov out fcmovnu xchg test sbb enter pop (bad) cltd sbb insl sub sub dec mov dec cmpsb jge or out mov xor (bad) cmp scas xchg xchg shll clc adc pop push fadds imulb fldl or jecxz lcall lock xchg mov mov mov mov lret mov adc mov pop popl pop mov in jns arpl (bad) ss inc xchg scas inc mov xchg loopne push in outsb aam dec jecxz or (bad) mov dec mov popa sbb (bad) addr16 (bad) jb subl aad fsts push lahf inc lret adc inc repz fdivr out mov push stos cmp roll arpl jp and data16 push fsubr call xor adc mov (bad) jo xlat test xchg leave inc fistl fstps dec cmp mov aam add stos lcall pop dec scas ror add scas sbb testl in mov (bad) stc lahf out loop mov lcall insl sbbb sbb inc push xlat xor inc (bad) push rolb icebp cltd add xchg pop out sub or ds cmc aas imul int mov push mov cmp scas fsubl in ja insb (bad) idivb cmp jbe push rclb cmp (bad) cmp xor jbe mov cmp out lret jb std rcrb mul adc push loopne lcall clc adc sti out int cltd add pop adc mov dec mov push subb ret cmpsb into cmp es dec adc push std mov (bad) fbld popf mov add adc dec fwait sarb sbb mov iret push repnz pop inc cmc jne add xchg mov sbb ficomp lods in jae ret inc or adc pop testl jbe sub inc pop add insb mov imul jge in (bad) negl stos outsl (bad) pop rorb sbb outsb in lea lock call and mov mov fmulp ds sub sahf sbb mov test and adc in and leave mov sub std mov cmp lds cmpsl mov pop or lcall in (bad) mov sbb ret imul xchg cld inc pusha jle aaa popa enter int jmp push dec dec xor inc mov mov ror scas test xchg adc cwtl sti fidiv dec cmp lcall cmp sbb cs adc out xchg fmull outsw mov mov rclb or cmp dec adc or cmp dec push adc imul lock aam rcrb push mov (bad) fisttpl sub and mov xchg leave mov xor sbb std hlt dec scas jbe mov jmp pop lret das xchg (bad) xor push and das pop scas sti xchg lret xchg push test push mov mov push or xchg stos jb hlt add fcoml sarl ret cmp iret add jmp cwtl stos fidiv js mov fs jp popf and fwait mov xchg cld push mov lcall leave adc test jb mov daa mov je lcall in icebp les dec (bad) mov mov cs sbb mov jmp sbb ds movsb fadds mov incb or sbb into stc pop mov inc cmp lods repz sahf inc pop dec push imul push sbb fsubs repz dec pusha xlat lock mov and movl data16 lcall test test mov roll ja jns mov sahf sub cmp stos ja stos loop sar or aas dec stos movsb xlat lret test cmpsl mov push mov or adc mov and fdiv iret in push mov in and xchg imul mov pop mov lahf jecxz xchg icebp lret jmp int pop rcrl test movsb adc push adc dec int3 inc fdivr scas push repnz pop call sar imul jmp jmp pop mov mov pusha es sarb mov push into inc loop xchg sbb or xchg int3 pop stc iret push les das push int3 sub loop rorb jno imul std data16 loop pop cltd jecxz repz hlt lods enter iret loope test mov lcall dec (bad) mov inc sahf add daa mov adc addr16 mov imul dec adc sti push bound lret in sahf cmc jp xchg into dec jne dec pop sbb icebp mov cmp ljmp repz sub cmp adc mov icebp cmp sar xchg repz repz jne out xlat scas loope (bad) repnz cli stc lods pop lret repnz fstpt sbb jbe cmp jl lahf lret mov test insl aas (bad) push inc adc dec int rcr xor mov ret in jo in jl cmpsb fist pop jmp (bad) push repz hlt xchg cld and (bad) mov mov push push jbe xchg cmp lret sub ret push addb test outsl (bad) add int3 mov xchg sub or push test adc dec inc jno mov jle int mov cmp mov xorl mov lcall cwtl push les hlt addr16 dec lods rolb mov push jb outsl push pop dec mov (bad) cld jl or push adc js push hlt mov or lret pop and sbb test outsb push test sub fistp ror jp sti dec pop sub mov sub scas aas jns js test je shrb inc ljmp mov dec lret adc or pop dec push inc rol cmpsl sub sbb mov stos push inc popf rcl repnz bound jo mov jmp mov bound jle data16 inc jae mov test fimull ljmp cmp in enter daa jae psubd mov jl jge pop mov rolb xchg ret pop dec and push sbb mov xor in cmc test dec lahf sbb aad and clc lahf out aad mov push popa or pop push cs sub mov push xor scas les dec fcomi push dec mov fyl2x lods dec xchg and and inc adc test jg dec sti ror and push cmp dec sbb dec outsl clc or ljmp cmc sbb mov es jp mov dec cli lods mov cs sbb inc xor ja dec dec adc fistpll mov insb aad (bad) fstpt dec fs pushf push outsl movsb cwtl inc out in xor add fisubl mov add or lahf mov sbb jae or movsl (bad) in sbb mov mov addl imul fisubr sarl push dec sbb adc xor lcall aad (bad) fisub mov test arpl sbb or ret inc enter or mov dec xorl fwait cltd push mov out (bad) and aaa clc addr16 mov xchg add sub add loope incb cmp cmpsl sub adc (bad) incb das leave push pop xor mov sbb enter das inc (bad) pop and add push enter out movsl icebp mov mov test loope adc sub sti push outsb inc les cmp mov mov jne dec add insl or aam push xor sub test lods or movsb rclb sbb shlb test cmpsl sbb fwait sahf sbbb mov mov pop or int3 sub stos mov sti mov jle cmpsl push mov out sub fadd cmp sub jne scas ror adc xchg inc add xchg mov dec dec fwait cmp (bad) adc xor jg mov jg (bad) xor cmp outsb sub outsb inc push and (bad) scas push xor inc outsl loop push mov xor sbb lahf pop scas cmp inc jg into outsb dec in pop mov clc mov mov repz test into fwait scas and add ds outsl sbb or mov pop test dec and lcall mov dec cld push fucomi outsl xchg js dec clc leave sub xchg bnd and sbb fs ret jmp pop xlat les mov sahf push sub in mov xchg jle or pop pop cwtl int jae pop adc dec int je mov add shr (bad) mov out ljmp jmp cmp mov cmpsl out or push inc fdivl movsl mov (bad) clc imul sahf xchg imul jnp js add xor bound lods aaa mov adc sar inc pop or vcvtsi2sd xor shlb lods repnz scas pop cmp (bad) std jmp mov ljmp sub cltd test cmp jbe push or adc adc fmuls popf sub sub imul inc or xor (bad) sub jmp insb inc mov divb push (bad) das (bad) insl shr sub xchg mov mov pop scas fs call mov jge or lea mov or xchg or (bad) cmp in jne push in outsl (bad) jl adc mov push jg movzwl or sti pop ds cmpl cmc mov leave repz pop mov mov test popf inc jno stos inc adc fnsave (bad) lret dec loopne mov adc jne jns add mov sti sbb aam out jecxz jbe cwtl adc cmp outsl jbe lods scas aad popf lahf mov or ss in jae (bad) hlt les push fwait incb sub dec lods out push pop les outsl mov cld (bad) or cmp xchg vptestmb pop mov stc jl lret sbb push cmp xchg sub add std xchg mov lock inc sbb mov mov nop and and mov pop ja rorb roll mov cmp jecxz lret xchg addl pop sub call das int3 insb cs fiaddl incb or jnp ss test push cmp loopne xchg sbb cmp xor add outsl adc dec push jmp fldt ss call lcall adc (bad) mov into fchs push fisttpl sbb nop jle neg fldenv lea (bad) mov and pop push jg (bad) jle jo (bad) inc mov into xor push das rolb mov adc pop or dec bound into xchg jp mov mov test shrl int and mov movb adc mov in mov pop sbb outsl andl and icebp sub push lret mov mov push test inc cmpl aaa pop das push (bad) and (bad) xchg dec pop or dec call repnz jge inc ja cli adc xchg (bad) lahf mul lahf (bad) xchg es jae fnsetpm(287 popf push sub jne movsb mov shld leave fdivrs dec push jns mov jmp mov pop xor mov mov jae cmp jecxz push adc push push and jnp mov das push cmp (bad) fidivr (bad) mov (bad) scas adc insl add hlt rclb loope movsl pop pop js cmp mov gs jns fs pop mov xchg in jnp sub cmp and inc or jg cmp fs push add pop mov aad pop mov mov or jmp decl fwait aaa xchg mov cmpsl arpl (bad) ss dec mov sbb iret das lret add ss cmpsb loope loopne out mov (bad) loope ret or xor cmpsb nop adc cmp inc lods and hlt imul out in cltd lret jae iret mov mov imul pop pop cmc push je,pt xchg ret insb push mov inc xorl mov add pop out sti mov add notb call or push xchg pop xchg std sub sbb es push jnp push dec adc adc mov scas push cmp sarl ret arpl ds or loop cmp sbb jmp clc sti pop stos movl cwtl jb xchg xchg push loopne fildl inc mov lods xor push sbb jno jno lcall lahf pop xchg cmp out pop insl cs xchg sub sub es (bad) cltd bound xchg je mov rcr clc add lods test or out pop stos arpl addr16 call rcll in int3 cmp lea push xor aas add mov push push test in shll xor add mov stos inc (bad) int fwait out cmp xchg adc and ds ljmp cmp jecxz jmp ret mov push imulb mov add fcoml mov jns push (bad) mov pop sub pop dec repnz popa les push scas add cmpsb stc sub and sub outsl cs jmp fldcw sbb loop,pn sbb sahf test xchg mov xorb imul sahf movsl sbb push mov sahf std sbb gs and out mov sub cli repz icebp test and cmpsl xor jmp xor jbe imul xchg cs mov add in cwtl in outsb xor test xor ljmp fwait repz pop push loop sub xlat dec mov (bad) cmp fisubrl pop cld out shl (bad) mov mov pop aam stc in sub dec repz int3 decl push lea dec fs imulb ja jecxz insl int3 mov int jns fwait (bad) scas dec add divb or push fldt dec mov sbb xor mov into stos mov lcall pop sub in idivl jmp push adc aas lcall mov xchg loopne mov enter cmp mov mov mov xchg xchg int3 lahf or loope test and jae push xchg negb adc mov add jnp xchg in lret lods cmc dec pop jg (bad) cli inc pop xchg inc dec ret aas sarl pop sahf xchg add pushf jl and pop repz fmulp int or pop aam dec mov push mov imul scas add movsb ss jnp outsb aam cwtl push mov cmp rcrb mov add mov (bad) push adc pop push inc push dec or test add inc lret sub test push adc cmpsb bound jne jp pop xchg push shl or sti loop xorl dec aad js adc dec in xchg inc xor clc jle ds aas xchg ror add jo fdivrl push cmpsl popa jp cli and aam shrl add mov cs adc xchg dec cmp sbb xchg xor ror mov sbb ds mov xor pop lods xor in ret ret nop fadd mov arpl cmc cmpsb xchg call (bad) (bad) jge (bad) pop int3 sbb rcrl mov call out inc pop or into mov push pushf std jl repnz xorl mov int call adc dec dec pop jge fnstcw inc lret ljmp push push sub ss insw push rcl lods aam icebp (bad) aas dec in push inc mov fmuls sbb push or stos fs cmp pop jl daa iret out stc je xchg sub nop lock mov cmpsl sbb into mov mov loope ss dec inc aad rcll cmp or mov ret inc mov lret rep ficom mov test adc imul into inc das (bad) je add test xlat (bad) sub xchg push scas xor mov cmpsb adc cs lret push test aam ljmp fwait repnz cmp xchg mov loope scas (bad) (bad) pop aaa dec loop pop popa fdivp iret dec add inc inc retw push push movsb or xchg lock jmp pusha clc mov fs movsl xchg inc inc lcall or pop das fs fsts push stc loop jbe inc pop into fstl (bad) into (bad) dec mov or mov push cmp data16 xlat jb cmp jmp (bad) in (bad) jo outsb cli lret adc adc mov sti arpl loopne stc push lock dec outsb dec adc and adc xor int3 iret mov mov adc leave xor mov (bad) je mov cld inc cwtl call gs cltd adc fidivrl mov cmp iret aaa in dec mov jl push dec mov and std inc xchg cmpsl add iret push hlt xor stos pop cmp insb mov scas int dec decb xchg add mov mov fsubl dec push adc insl inc pop push mov and dec adc roll es pop add sbbb std je dec icebp (bad) or xor cmpsl in mov popa shll bound test bound lods sub mov pop scas cmp in add iret jb std mov js push insb dec mov nop outsl nop icebp sahf out push loopne add cltd and fistp jae shl mov outsl ljmp (bad) and sbb clc mov (bad) out push adc adc xchg sahf mov xchg inc in aaa xor push mov js into (bad) sbb pop pusha sub sti inc fistl mov push cld cli icebp mov cmp push test enter dec mov popf ss push fstps xchg (bad) into shrb mov jmp dec imul inc insl xchg (bad) cmpsb cmp into xor jb and jmp mov inc pushf lahf gs out xchg aaa bound (bad) jns or (bad) or lds enterw andl in ret xchg cmpsb mov mov rcl sub inc mov jg or into xlat mov fwait scas sbb pop js cmp or ja xchg aas mov fdivr out insb dec mov mov (bad) fnstsw mov dec lds fisttpl xchg or out jg in in popf cltd out add std sbb mov fdivr dec in push xchg insl adc and or ret dec cmpsb jne adc in lds dec jle cmp mov jae int lock insb data16 ds scas cmp inc lahf jo fwait add xchg (bad) mov mov cmp aas movsb loope enter mov loopne cld lds (bad) cld adc cmp leave jno sbb sbb bnd (bad) (bad) and xchg add mov xor dec inc das lods xor std outsl push add adc sub xchg dec std pushf in aad pop pop out cs push loopne jl decl mov movsb cmc insl dec out xchg mov movsb movsl adc inc xlat sti movl bound mov pop xchg aad sub cli cmp ljmp or jge pop mov leave inc cmp daa dec aam popf push pop jb loopne in es notl stc xchg or xchg xchg xchg aad inc mov (bad) je pop inc mov pop and imul pop adc leave sbb (bad) fldenv sahf lock xchg lret xchg cld sti mov sbb subl sbb sbb pop cmpsb in divb movsl js sti fisttpll mov mov sbb scas test popf fwait mov loop sbb daa into add popa push xchg inc pushf add mov ja imul add cmpsb mov (bad) popa cmpsl push (bad) ret adc insl mov (bad) ljmp aaa lahf push (bad) xchg sub pop cmp mov inc int3 sbb iret dec mov dec mov push sbb xlat mov sbb movsb add or push mov iret mov inc aas movsl ret push fisttp popa pop and sbb in and sahf pop cmp (bad) mov ret push adc fidiv dec movsl cltd mov repnz test fmul repnz mov outsl shr iret (bad) inc mov jp push pushf xor int xchg jb nop mov push jg and jp hlt pop and sub xchg xchg mov je (bad) adc dec dec (bad) pusha or and push xor movsb inc jns sub inc test inc lcall stos decb push mov jo jae mov (bad) test int out mov (bad) mov les and mov repz jns lds push or aam pop loopne cmp xlat pop dec xchg mov shrb sbb and cmp cmpsl (bad) xchg je int vpmullw out pop dec (bad) mov das push push jle mov in enter leave cmpsl dec xor cmp or in ret ds mov arpl add dec ds cmp dec and pop call cwtl negb jb mov xchg arpl cld mov imul adc inc hlt fisubrl jo and test xor jmp adc test enter xchg sbb scas je (bad) in dec test mov xchg or out xor in sbb rcll call or lock xchg xor movsb (bad) (bad) cmp or sub sti iret sbb sbb jne sub pop adc xchg (bad) cltd jb push lret insb cmp cs inc leave xorb orl and xchg cmp inc ret adc xchg sub ss arpl fdivrs hlt test shr (bad) das jnp jmp sbb mov movsb sti fucomi test cmpsb mov fdivs sti xchg imul mov xlat rorb movsl in xor loop ljmp mov mov adc (bad) sbb lods jae scas scas dec lods add imul dec jbe inc xor pop lods pop pop mov push cmpb cmp fsubrl cld mov jp push xor sti mov mov push push jnp cmpsl imul add out add adc ret pop sbb outsb xchg jne sbb and scas adc cmp pop xchg dec cmp inc xchg loope out in loop pushf aas sbb adc stos ljmp mov xor into lcall popf js dec xchg aas or xor (bad) std stos lods or xor ds and aad pop pop cmp les aas lret ljmp jbe push pop ljmp loop gs icebp scas and mov xchg inc cs mov dec (bad) xor ret pop mov dec das push ret push or out movsb cmp lock rep dec sub int push xchg fneni(8087 mov out sub or pop pushf adc (bad) leave dec movntq out and and scas jle mov leave push leave repnz jmp and mov jge add decl ljmp int adc or (bad) pop enter addl js out mov and adc ret adc shlb cmpsl imul or scas xor leave cmp inc mov cmp jmp orl jge shrl fildl push mov jb (bad) mov rorl mov sbb jle div (bad) fiaddl xor fidivl mov xchg cmpsb cld leave mov dec stos mov pop pop adc jecxz jb sbb adc fs call test or cmp dec movb push insb cmpsb xchg fsubrs inc outsl test sbb add cs jne test adc pop xchg xchg out mov adc in stos pop sahf dec pop or jg cmc add or add inc mov lahf lcall mov cmp jb pop lods sub jbe (bad) ja xchg je push and inc xchg and adc push and subl push pop mov (bad) nop ja dec ja loop mov or scas fdivrl stc gs mov sti jne sub flds mov sarl test add pop ret js mov insb incl inc jo mov mov dec outsl xchg mov stos frstor mov sub out (bad) push aam or out or fcoms cmp cs adc or imul add stos in lds add lret (bad) scas mov test dec mov or ljmp inc mov or and lods push js jae pop clc data16 sub adc push repz std aam add jnp adc mov popf mov pop ljmp notl mov xchg faddl jmp jmp ja aam clc push push and (bad) add inc add mov pop loop pop test and dec aaa sub cmp sub (bad) push out mov jg mov inc jbe sbb adc add (bad) aad (bad) mov mov xor icebp rclb fs push mov mov fbstp into outsl cwtl aas jns lds xchg cld xor cld in sahf jnp pop cs mov in cmp mov mov das cmc into pop sbb clc adc outsl push or lock pop (bad) repz cli mov repz insl jo jmp cmp xchg jmp ret popa mov movsb int movsl test jmp out pusha (bad) xchg pop dec (bad) xor pop xchg push push mov adc mov imul dec or ds outsb push fwait ret jge push mov aas test add add inc out cli (bad) repz cli ja pop push xlat fildl inc sub out jne out aam das gs hlt add push pop cmpsb pop xor decb gs and popa dec das cmp or adc int3 repnz mov ja inc jae movsl mov cli jecxz loop lret outsb cs negl das mov push jo aas inc popf mov push bound test rolb push and adc mov pop aad ja ret jb,pn mov insb sahf sub xor cmp es mov (bad) pop lret inc lods push lods and fwait sahf lahf push mov popa xchg dec out cmp sub mov in loopne mov sbb stos jbe std repnz in scas nop in dec lds orl aad pop daa cmp push aaa mov loope or in add jae xlat inc inc je adc xchg movsb cli mov xchg mov imul das stos mov jne jmp fwait and cmp lcall rcrb insb push (bad) cli test mov pop cmpsl insl add xor adc lea and fs ljmp imul outsl imul mov mov add leave jno daa pop jmp fbstp je xchg jne fmuls ret mov es (bad) in mov in lock jmp add xchg test icebp std into sbb rorb popa push xchg xor test cmpsl jo scas cld dec mov cld lods (bad) adc roll mov jns mov xchg inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc jecxz out inc .byte cmpsb pop sbb jb add mov cld mov lret int repnz cli lret xlat lret aam (bad) cld xchg or std aam rcll sar sbb xchg decl call xor jmp or lret cld push mov cmp inc (bad) sub cli sar scas jp sbb idivl mov sarl sar rol cld aam test cld sbb dec fadd dec push inc lods leave aas std int fxch aam rorl cmc call sar pop add aam shll sar lret aam ror inc sar cmp cld aam jp lock jp lock mov jg push insb repnz cld sarb mov ret and (bad) xor xchg inc cmp (bad) push mov pushf aad rol inc cld dec (bad) xor xchg loopne ret xchg pop hlt jnp scas clc xor adc xor jo push loop repnz push mov jno and inc out xor ret aam shr add xchg pop hlt jnp scas clc xor adc xor jo push loop push jmp mov ret (bad) jno add xchg pop hlt jnp scas clc xor sub jo push loop push jmp jg sub (bad) sbb cld aam add imul ret rol inc cld dec (bad) xor xchg loopne ret xchg pop hlt jnp scas clc xor or jns lret cltd lret aam idivl (bad) (bad) sbb cld aam leave jl testb and hlt mov shlb aam jnp scas pop cmp push mov jp mov shlb aam fcomps pop adc in adc rcll mov lret aam leave (bad) cli leave roll inc sub mov dec mov sub (bad) nop xchg or scas push fidivl shrb addr16 xchg (bad) ret push sbb jge cmc and sbb push dec mov ret ljmp dec xchg les sub adc push pop mov and xor (bad) cmc in push xor test icebp and pop std pop and cmp js xor dec sbb leave dec out sub into insb pop dec repnz mov std mov pop (bad) divb jge jne jno jg fdivp push inc gs stc jmp out into nop push and fld1 inc ljmp mov jge call add hlt adc xchg in fs test jmp js and jns and cltd push std leave stos jge popa jmp or stc jp out or push dec lds in dec int3 hlt dec stc xor mov jmp add outsl mov inc mov cmc inc pop push fnstsw test jo out jge jns imul dec mov stos xor insl popf lods and imul or cmc push or and dec ja cld push subb cmp sub sbb lea pop lods inc lret mov aad sarb inc ret cld data16 fadds add aam jg mov mov inc icebp sub imul dec xor dec xchg addb inc and jnp orl sbb xchg iret movsl or xor lds (bad) leave push jae or out xor inc adc ja sbb xor es ret sub in jg fild inc cwtl cld shr inc cmc dec inc lahf cs pop inc xor inc mov inc adc pop cld dec push cld push jb rorb int3 sbb lea cmp push jl cmpsb jge and mov enter clc ja div dec lret aad lea fiadd push dec fstl xchg cmp push enter adc mov test mov std mov mov test cwtl lock add scas push lcall movsl mov andb pop outsb and in call dec xor shlb lret shr outsb jmp in cs les imul in sarl and lods dec leave iret into pop mov lea sbb mov pop popf pop sbb mov popf out test pop (bad) xor adc mov pop xchg dec repz inc mov dec sbb jge pop sbb mov mov xor call pop std pop lock addr16 jbe cltd sub cmpsl out leave fcmovnbe sbb xchg in pop mov mov jmp dec xor movsl in jmp lahf push ljmp push cld mov in icebp pusha repnz cld out out in es mov cmc jg in cmc sub scas jge aad add dec adc xor adcl aam xchg lret cs mov in ret roll daa fistpl dec test adc sbb hlt mov out sub int3 cmp mov ds adc xor jg,pn xor sub daa outsl jg and and xchg addr16 test enter popf push pop (bad) mov int or adc and jo pop and sub cs (bad) loope hlt cmp xchg pop (bad) push (bad) fstl jle push inc sub in (bad) std pushf mov sbb cmpl xchg inc int3 je adc (bad) shlb mul in mov mov xchg ret xor (bad) fdivrs or dec jbe xchg data16 sub adc sub popf addb cmpsl mov xor ret (bad) fldenv fadds jecxz add xor xchg cmc sti jnp inc lret pop jns call fsub cltd dec mov ret adc and sub or add pop or inc dec sub adc mov dec mov or lret lret cmp jne push movsl std cmp iret leave insl inc ret and dec push pop push xorb xor mov add cld insb mov (bad) fmull rol incb les sbbl std nop mov rolb ja arpl xchg fwait dec int adc in cld inc int3 lcall sbb sub out xor roll repz leave inc inc ret gs ret mov (bad) cli ja mov loopne inc stos push push lret insl lahf or lret fistp rol frstor lahf pop aad add jbe and sahf sahf xchg cmp (bad) cmpsb jb adc xchg inc repz sbb push pop xor mov (bad) jmp lods fwait dec imul inc addr16 fdivr bound fisub sbb sar rcrb dec fidivr rclb inc and das std lea jo sbb mov mov push lcall cmp sti xor fsubrs hlt jmp xchg cmc negb xchg xor inc pop dec movsb imul into cmp cmp jmp sti jge sub movsb rorb and scas fadd dec lret test jecxz dec loopne lods icebp fistl jb addr16 jbe jge add mov jmp xchg aad test leave int jge add adc in ljmp inc adc call aam in fldl2e mov inc xor xor cmp shlb fcmovnb arpl push inc jge push and adc xlat mov stos leavew xchg sub dec into arpl push jnp pop lret iret jge addr16 add es push divl sbb sbb pushf lahf jmp mov xor inc lret mov jo cld and lcall out cmpsb pushf addr16 mov inc push lahf (bad) fstps popf call das push jp mov std (bad) ljmp jno add sbb mov add push xchg inc xchg out lret iret and notl cwtl mov add ljmp inc xchg cmp mov push push jg repnz pop aad jge sarl xchg mov cld popf and out repz add adc outsb dec fsts (bad) addr16 push (bad) cmp decl jae lret adcl cmp gs lcall andb scas pop dec aam pop call and xor cmp xor stc add mov mov shrb adc jo lods sub faddp cmp inc loop cmovs adcl or push sahf dec fbstp inc and push cmc cld pop mov sub adc jge sub fwait mov xchg pop or jg mov shrb push adc cs lods inc rorb jl mov cltd fidivl sbb in leave or lods aad lock inc pop hlt popf lret push or (bad) fldl2t push mov repz sbb sbbb dec pop movsb enter xor leave and mov jecxz push xor mov jl mov add push mov rcr fcomps pop hlt js rcr mov sbb inc adc mov mov aas push mov leave std outsl or mov in jne and (bad) ljmp mov add xor inc pusha adc (bad) js or stc loopne out push sub jae dec fisttpl jle mov mov sar jl sub sarl (bad) testl mov jne xor pop loope mov pop loopne and add and and rcll xchg stos popf pop lock nop hlt cmp idivb mov and and mov inc imul fbld insb mov mov adc xor sub test in jmp cmp mov mov lret mov pop adc dec mov mov pop inc adc (bad) mov adc mov daa lods sbb imul int outsl (bad) jmp gs xor cmp jmp add cmp sub clc dec out sub inc and fist inc push cmc xor sub test inc iret cld arpl ret iret mov xor xchg or repz push icebp fmull xchg dec hlt std (bad) lock fimul loopne and jg lods into sub push cmp or add mov sbb std add lret lret jmp (bad) icebp mov ds mov sti xchg pop es movl inc xor sahf fincstp aaa lret jmp int jecxz mov pushfw dec jnp or dec cli es xchg aaa sbb scas push repnz cmova cmpb pop cwtl fstpt xchg or rorl dec fisubrl js xchg adc sbb (bad) cmp add aad pop adc ja mulb sti test sti and cli jns and mov rorb popl or popa mov inc idivl jmp xor inc sub push inc fbstp outsb cmc and push test jecxz (bad) fcomp leave or jl imul xchg mov and jne mov sub cltd gs add fwait cmp fistl mov jo inc mov stc test aas lret jns mov sbbl ljmp sub cmp pushf xchg aaa mov cli out (bad) enter xchg in xor aad fcmovnu dec stos cmp xlat (bad) pop mov mov add lret sarl cs fidivr sub in mov mov clc pop jge not sti xchg cmc cld adc fsubrl and lret imull or pop in inc add (bad) cmc cmp stc shll jg lcall add add cld neg or fcmove mov in mov in sahf xchg leave cs cli or or sbb add jo sub pushf inc std out xchg adc add imul (bad) enter lods xchg sti loope mov sbb lods mulb sbb nop mov sbb cld push das mov jg cmp adc insl cmpsl fs les rorb jp sahf insb mov xor ret sbb adc fisubr adc jns adc lods pop (bad) sub fcmovb adc aad mov jecxz and lret cwtl xchg cmpl cmp out xchg push adc std (bad) enter push mov mov pop sub (bad) popa cmp hlt sar and cmpsb ja pop rclb push roll jmp pushf adc fsubr lock push pop loope call add lea inc mov pop or cmp (bad) bound cwtl dec xlat (bad) jb imul in out enter add mov repnz inc pop cmp xorl loope sarb fcom out int pop rcrl lret pop data16 xchg dec sbb popf movsl cmp or loope ljmp pusha lods inc leave ds insl pop pusha push sub pop pop lret pop push add inc test and jle loope lahf sbbb sbb lods mov cltd test add popf dec sub ret lock out es mov imul call jne xchg xchg out and adc sub dec test mov (bad) mov and push repz adc sbb jp xchg inc sub xor xchg jbe xchg pop push xchg jg out cmp xor dec xchg push xor mov sub inc dec pop loopne sbb jge and or push inc adc std push lds mov xorl stos add je xor pop test mov out add add (bad) dec cltd add cmpsb pop and out or and mov addl jb fmuls pop or cwtl and xchg sbbb add adc or add xchg xchg rolb inc dec inc cli jns inc add testb out xchg sbb add das int xchg jmp leave mov adc inc pop sub pop les lock sub fwait ret xchg lahf cmpsb fdivrl mov pop mov arpl or stc or mov adc jle cld add adcl mov scas aam adc add pushf add sub pop sbb subb outsl sbb (bad) stc xchg cmpsb loopne xchg lret lods add sbb dec cmp jae mov call mov add push ljmp sbb jb sub push and cmp jns (bad) sub ret adc add add fildl pop push mov icebp or add stos dec enter clc or sbb push inc mov (bad) iret in pop jl lock push movsl out inc sub sbb bound add cli rcrb testb push push lahf lds pop (bad) sbb jae add dec inc xchg fmull sub xchg cmpsl add addl adc xchg cs mov les (bad) mov cltd nop push dec mov add ret scas adc or das adc cmp outsb sub out call xchg or sbbb cmpsb add add xchg roll in push jns insb mov adc std add (bad) (bad) or lcall je mov sbb jg pop jne add mov mov jnp jmp test sub sbb in and push test inc mov subl dec xchg push loope cmp xchg cwtl pop nop fadds adc popa movsl adc dec jp jno sub pop xchg add jbe mov cmpsb popf or std mov aam int3 sbb ljmp sub mov mov add adc sub jbe lods adc movsb jle pop pop and mov inc add out sub push clts std out sub mov and adcl xor add xchg adc cmp dec cmp inc mov adc rorb dec sub lret jecxz in std jo stc and xor sbb lods icebp pop add fwait adc test inc mov icebp xchg lock push cli dec test mov or xchg fsubrs orb adc add adc xchg mov mov mov ret cmp pop lahf pop pop mov cmp ret sbb call add mov addl test pop cli sbbb jnp xchg cmc lcall hlt ret pop dec push imul jnp cmp pop and mov lods nop cmc push jge xchg push mov xor mov add gs cmp push or aam lods cwtl addl lret xchg adc xor rcrb lret push xor and addb adc call scas jmp mov les nop xchg push cwtl xor mov push xchg out pusha fwait mov js in xchg sbb xor (bad) lock outsb arpl inc lock call jmp fcoms in mov and xor dec fsubrs inc addb pop pop sar or or xchg mov sub loop xchg adc add sub sub sub add repz popa sub add mov and insb xchg lahf mov pop adc mov xor loop adc mov sbb out sbbb ja aaa xchg add cmp inc lea ret push sub mov xor mov add repnz sbb int3 sub pop pop mov and rolb mov out mov mov clc push sbb dec cld hlt xchg roll or in mov jmp push inc les and xchg push cwtl dec dec cld lock shlb adc stos fcoml nop jo addl sbb push fs stos repz movsl cmp adc xor sub addr16 popa add lahf icebp xchg fldenv mov clc adc and (bad) imul jg sub adc push std pop lea lods push adc sbb and cwtl out sub insl les xor add jge nop jo xlat xchg adc cli push aam xor cmpl or xchg pop and xchg fsubl movsb or lcall mov xor sub sub add sbb jmp and int3 mov test xor xor sbb pushf adc and sub test xchg pusha pop mov xor cmp cs shlb pop xor sti adc jmp dec add loope mov dec push and jmp cmpsb push fbstp dec dec xchg lahf sbb mov imul cmp sbbb cli add and lods xchg inc jne xor or mov dec mov xchg into xchg addb ret stos mov jg sub out pop add xchg push ss jno mov mov xor xchg fcomps adc test pop iret sbb jo inc mov adc cmp add and stc mov dec mov pushf add push jl xorb jns or (bad) sbb (bad) clc jg or push mov or aam push push adc out mov add lcall (bad) jbe xor adc (bad) je cmp push mov xor dec leave xor or adc sub cld adc cltd add xchg in jno idiv add jge mov add in (bad) jo push pop cmc add push std dec jle add insl and fimull jp pop jmp add add rcrl sub leave sub jo mov push sti xor inc mov adc jae popf jge push mov push aam sub xor and cmc xchg loopne fsubrs xchg js lea dec and sub cmp lret ja mov or (bad) fldenv adc xchg rorl cld pop or icebp subl cli mov push imul js sarl test cmp xlat sub dec (bad) je sub mov mov push mov cmc push cwtl mov sbb mov pop cmp mov lods add (bad) mov xchg call cli fist test dec mov xchg add mov add sub mov xchg or or inc inc xchg add and cli sbb inc sbb loop scas (bad) sbb cmpb adc adc adc adc inc lret icebp negl (bad) xor outsb inc or add adc loope in lahf pop add ficom cli aam pop mov xchg push mov push (bad) or add loopne rclb (bad) lret and mov add adc daa mov sbb iret (bad) fst mov mov push into xor push push dec cmpsb jg or inc push add mov inc test popa or push or sub pop jl and inc movsb mov and add (bad) adc pusha clc rolb adc push or xchg pushw or rcr sbb mov xor je mov mov mov jae inc adc ficoml push shrl dec add jns push in ret push xor and lods mov jle lea xchg loop push adc mov or sub sbb add xchg mov cli add loope stos push jno adc sub das push (bad) fmuls subl push add test pop dec sbb sbb call mov add inc shlb adc and in fbld xlat add fsub jb xor adc jge push repz pop push in dec ficompl lock rolb mov aam dec js add or (bad) adc mov ret cld bound pop mov sbb mov xor add repnz sahf rcrl (bad) std adc test jae push or rolb sbb cmpsl xor add out and dec push add sbb lret fwait add inc sbb test lea push fidivr je popf int3 testb and rolb and out and loop xchg repnz dec add mov cmp push mov scas xchg inc pop add or sarl pop adc nop pop (bad) hlt add dec loope push sbb inc mov (bad) lock push mov push pop fs xor mov into mov je add dec push push inc shlb hlt ret sbb inc fmull xchg mov or repz sti inc add mov sarl or mov les mov sbbb hlt xchg out sbb inc inc sub pop add mov mov add and fmull inc and jmp ret jecxz loope push mov xchg rcrl fneni(8087 xchg add jmp pop and faddl dec dec cmpb lds cmp sub sbb add mov sbb adc js sbb adc lahf rcr sbb and mov xchg test out rolb xor flds imul addr16 rep pusha sub aam test sub call call fiaddl xchg inc out mov repnz mov add adc scas adc out add fs sbb pop popf test mov cmp sub add lods div sbb clc scas adc loopne testb mov imul ret inc sub lods cwtl sarb mov insb out punpckhwd sarl call add xor jp (bad) mov hlt and cmp add popa xchg inc xlat inc or and jnp lcall loop xor xchg inc negb js or mov cltd xor sbb push cmc call shll jbe cmpsl data16 adc sbb loop test ljmp sbb xchg xor mov out ficom hlt sub sbb cmpsl or insl (bad) cmp fadds mov jae xchg sahf std mov lret xor add (bad) and pop xorps fxtract inc nop pop sbb loop in and sub sbb test pand sbb add fsub dec pop test rcrb mov adc jmp push push dec add mov imul sub testb enter jmp add xchg push add jne dec scas inc out lock (bad) test hlt xchg repnz xlat xchg adc rolb cmc in add insl sahf add xchg mov pop jb rolb jle fmuls push imul or pop incl (bad) (bad) mov addr16 push rorb es int les int push rol clc push js and les (bad) xchg mov ds adc cmpb inc mov mov adc mov loop jns dec cs adc in sbb inc pop xchg mov std outsl push xor sbb ljmp push add and cmove shlb add add mov push add xor pop bound and mov addr16 cmp mov scas pusha pop adc lea add in sub shrl jle pop icebp and jno mov out mov jbe enter push pop test das cmp in add stos ss lds addr16 outsl add in out mov hlt mov in call cltd add (bad) out adc push mov mov std mov and aas and xchg mov call in js cwtl enter les pop scas jb adc add dec es sbb xchg adc xchg pop push add fsubr cmp adc js xor mov in int3 mov and jmp enter and inc inc (bad) mov and int imul bound shl or cwtl (bad) scas jecxz add and cmp xor push mov or inc jge call int3 adc push lahf sbb fsubl in (bad) mov mov mov lcall aam or adc int in xchg arpl pop cmp inc aas push lcall popf inc sub mov jae cmp inc inc jb sbb cli xor mov cmp iret out sub adc jle repz xchg int3 cmp push sbb xchg fmuls rorb les push or aad mov test loop test cli adc sarb sbb mov mov stc stos sbb add aaa (bad) cmp das sbb mov push inc fs aam add (bad) incb out xchg add mov psubb or and sahf pop leave sbb xorl push push sub and push shr push push add popa adc repnz push test cvttps2pi jmp sbb pushf jns dec push cmp leave xchg or sbb cmp cmp pop (bad) xor insl jecxz stos adcb sbb push and lfs add stos das fs inc adc jnp jno add fiaddl jno mov xlat mov scas dec dec rcrb or mov cmp sub call addr16 cmpsb add fiadd int nop imul dec jp sahf add pop les xor or push outsb inc xchg or xchg out nop movsb insb inc dec wrmsr add push adc cmpsb dec pop cwtl or or xor das aam pop dec inc sarb addr16 cmpsb push push and pop inc outsb ret mov lret enter sub aas or dec clc mov add jecxz sub bound mov xchg push inc test jg dec aam fcoml sub (bad) testl inc mov push pop fs insb push mov mov mov dec mov add outsb xor mov cltd pop push mov iret xor rclb dec add ljmp add mov andl arpl cmp add pushf addb jae pop hlt xor test (bad) or pop add daa cmp rclb ljmp mov subb mov ss scas mov xor mov loopne cmp lret dec mov push pop rorl sbb mov adc loop dec cmc dec enter sbb mov mov adc inc loope cmp ret add add adc cmp iret inc add sub and out xchg mov fs fadds nop and inc repz rcrb dec rorb clc sub es pusha mov jo cli push xchg pop dec inc sbb lea and scas mull jne sub pop loope dec mov ficom ljmp mov jnp (bad) add in js mov lock sbb mov mov push xor jp test add ljmp adc (bad) fiadd ds mov ret enter repz call or mov xor outsl dec insb and adc cmp cmp dec cmp aas dec pop or (bad) lcall orb fsubs inc ljmp fnstcw fiadd and gs add loopne pop inc fadds (bad) jno mov ds xlat ljmp mov inc out xor leave pop out xchg cmp adc mov pop ljmp sub push pop dec invd jno das ds fs stos ljmp popa jno push fmuls js repnz xchg test lods ljmp sti rcll mov jl dec outsl aad xchg mov push stos fimull push mov ljmp add clc mov add xchg fcoml dec nop in lock or push ljmp (bad) jle int3 inc cli (bad) push dec loopne pop cs add dec inc ret dec (bad) mov xor cld pusha mov mov mov sub or mov mov call pusha aam add arpl fidivl ljmp dec cld or or inc xor test push lahf push pushl jns scas mov fidiv xchg mov lcall lcall xor xor pop movsb mov nop inc add xor leave in add pusha and js pop mov nop or sub cwtl les jo movsl pushf xor mov adc (bad) je (bad) mov sbb mov punpckhdq nop add cld shl inc arpl cmp popf pusha pop outsb mov fs test ss xchg xchg mov outsb sbb jne xchg jno fldl mov adc clc push pusha xor or popa adc adc inc mov mov mov or rol xchg xor push lock fcompl bound pop (bad) inc or jl push ss lcall sub xor in push cmp cs or xor adc inc insb mov daa inc xor sub test push cmp jbe aam adc pop cmp (bad) inc mov jbe (bad) imul push and pop mov mov insb pop imul add xor sub pop dec mov push loop enter (bad) cld add fs ljmp adc mov nop add aad xor xchg cld sub sbb mov js inc mov fs inc aam xchg or cmc ljmp jg pop pop lcall xor lock mov sbb stc sbb stc sub aas inc test stc test xchg lock test mov and fs cwtl aam inc adc or fsubs into add in inc push mov cltd or mov aam inc mov in add inc and and dec push mov es fcoms push lock in dec in sbb sub sub inc nop or es js lcall cmp data16 movsl push push in cld jle sub mov fmuls or js mov mov iret sarl inc add cs int3 inc cmp adc mov push xchg ss cmp add push lods xchg cld imul inc pop push mov xor call xchg lcall mov sbb jmp aas mov subb or lret pop shlb cwtl test sti dec dec test (bad) ljmp or imul test ljmp mov dec xorl mov cs faddl ss add lea sbb add sub mov cmp int xchg rorl je (bad) jecxz test jno loope push movsb xchg test sub popa icebp mov shrl fdivs nop mov fmul sub fild add test je rclb fsubrs sub dec cmp or fsubs out pop dec sub mov inc xchg add nop lret add cwtl outsb push enter mov sub js addl sub nop int3 ljmp push add pop mov push fxch clc xchg pusha jl add je or insl add mov shlb int3 and dec push (bad) fdivrl ljmp xchg in or or and xor popa mov add mov xor push jb add xor pop jle hlt sub jge pusha mov mov fcoms ljmp bound cli inc or add push mov dec test and mov orl or ljmp jmp pop pop adc add pop inc mov mov popa cs mov xchg add xor int3 xchg or pop arpl (bad) lock add cmp pop dec fldl adc push rcrb mov add (bad) mov sbb inc or inc fs shll test xchg lahf and ljmp sub clc or sbb pop rolb test mov mov aam push pop mov pusha fs das lods rcrb and adc mov mov and cmp push les push (bad) xor sbb sbb and mov int3 sbb jmp adcb rcrb add fs mov and add icebp jne pop add xor mov rclb ljmp insb clc inc fisubl pop bound mov mov mov cli add imul add inc mov add jbe,pt test jo in pop sub adc pop test or mov int3 xchg mov mov jecxz mov pop or dec adcl dec (bad) (bad) inc mov and and mov sub inc aam std xor jo sbb xchg adc roll cwtl arpl push add popf (bad) sahf shrl push repz subl fild mov sub lar xor jo cwtl jns test fcomps (bad) insb sub and jno and pop dec ret sbb ljmp cmp mov mov or pop sub add inc add fldl aam add lds add and mov and test or test mov hlt xchg and and insb icebp or (bad) jmp and cmpsb and call test test movb or je xor rorl movsl clc jnp cmp (bad) dec lock push loopne or sbb pop fnop or mov sbb ret inc add pop (bad) rolb sbb enter pop hlt mov cli pop and and subl sbb mov push cmp loop sub and inc insl or push cmp (bad) popa xchg repnz dec push and ljmp popa pop sbb add sub push popa or icebp jp lds testl push ljmp movb sub adc and mov iret mov sub in adc mov xor lahf sbb (bad) pop popa clc mov js lahf gs mov outsb es dec (bad) pusha adc dec jne sbb mov (bad) (bad) push lock call jge nop jns pop xor ror and and cmp lahf insl or or or nop push cmpb mov adc or or and loopne jnp decl sbb clc test rolb sub cmp sub xchg lds add or nop clc mov add insl push mov insb pop jae pusha lret mov xor jo lcall add or dec loopne add fistpll into outsb add mov adc mov mov lock mov mov sub lea add xchg add xchg adc pusha lock ss push mov mov adc clc add and push aaa insb popa add aad scas sub dec add (bad) jmp push adc mov fcoml mov adc test xchg clc add push cmp push inc dec mov adc inc lock (bad) adc xchg (bad) enter cs push sbb pop pop cltd aam mov sbb cltd loopne enter push sbb lret and adc cwtl sub into add push xor adc xchg push loopne in adc mov and sbb es icebp (bad) sahf loopne mov mov mov jl mov dec push push add in add pop out ret push mov adc add test sbb jp and push and add and sbb push loopne insb pop das fwait xchg sbb and pop cmpsb clc and jl mov sbb adc insb cmp scas and cmp jns mov xchg test sub adc shrb xchg jmp add loope sub push cmpsb jb add inc pop mov mov sub js push or adc ljmp or inc jo je xor xchg adc loopne mov add adc add add ljmp pop fimul and in (bad) and lods mov jg cmp andb (bad) in add mov adc push add lret jbe xchg cmp stos jo add ds arpl data16 dec jb add pop xor ljmp es aam add cmp dec add pop and xchg mov paddq mov add adcl loop mov xor sub cmp mov adc in or push add fnstcw mov (bad) xor inc js les cwtl fimul int3 inc (bad) test dec ljmp outsb je movsb mov js test cmp movsb lods orl and add add jo dec push movsb cmp cld mov out insb add or (bad) pop xchg aam nop or in push pop dec adc inc pop adc mov dec dec or stos out js movsl fdivl xchg xor pusha mov subb sbb or xor mov mov and xchg adc inc cmp cli push jb or fstpt je popa fs (bad) sub mov and icebp push xchg imul add jo enter xor outsb sbb cmp add mov cmp cs or mov scas (bad) and and lahf cmp adc add xlat ljmp pusha in mov adc inc xor fdivrl sbb inc inc loopne and aam out jo nop les and aaa mov jp add movsl adc in test add push cli ret jecxz and jnp add push inc inc dec mov cmp scas add push call pop bound loopne in jno or dec pop dec in push cmp add addr16 in and mov xchg rclb mov test jl sub add sub (bad) jp and inc js pop adc rorb mov add mov lods ret inc inc or or je outsb sub jmp lret sbb ds lock or enter ja js inc nop mov fcmovnb nop pusha add jg pop sbb lods mov jo std in jg mov jmp dec pusha stos xchg scas add rorl loope out add adcb and outsb gs mov test loopne push sti push or inc sub adc enter icebp mov call and pop cmp scas stc roll cld mov push and js js bound sub cmpb ljmp (bad) mov cmp fidivl sub xor xlat and in js add or and or aam cmp repz sub adc push and and ret popa rolb xchg jae cmp cmp loop or inc push repz adc add pop jmp add aaa mov je pop imul add rorl in add out and push mov nop sub push (bad) lahf mov mov jecxz lock add inc dec rclb inc scas pop aad in jl mov mov js dec mov adcl inc or or lods add (bad) lock fiaddl cmpsl sbb aas bound push rolb add xor fidivrl sub lods mov dec std add (bad) into pop nop cmp add mov jb (bad) lret cmp repz push add (bad) lret rcrb pusha pop jno repz fimull add aaa aam lret add xchg add aam jb xchg ja repnz jle mov sub aad test test sub mov xchg and bnd or adc cmpl into xor jle pushf pop inc sarl jne sbb mov fldl jns cld rol sbb es fdivrl xor jns add leave js adc lds aad jle add lahf cmp sub xchg pop jbe mov not mov jne sbb jge add (bad) mov add les add jmp jg push push mov cli add out mov push inc push lds inc or hlt xlat add push add mov jno or xchg sbb xchg aas push aam jb pop add int out std add jl mov push ds add int cmp cmp xchg xor (bad) and push ret or aaa mov or pusha das jmp fiadd push pop and lods add xchg lds pop dec add enter movl mov mov daa cmc imul jo or xchg add outsb into dec xchg inc dec cld pusha jnp pop push sub inc jg push and clc ss ds add xlat mov je or pextrw jg dec add std adc imul hlt inc roll mov xchg fiadd pop push mov hlt add outsl jno add jnp je pop pusha pusha push das or xchg inc fbld xchg enter pop out jo addr16 pusha xchg or (bad) mov insl sub icebp add pop and in add bnd int3 pop insb popa jne add pop fdivrs mov lret imul out (bad) shlb or ror out add (bad) cli lea lcall push push xor and adc stc sub jp pop fcoml ret jl add mov dec adc aam xchg mov cmp lret sub mov push fisubr sub dec lock or ljmp jmp add or insb aam xor add push sbb scas fist pop mov ret jmp mov iret xor aaa std js arpl and dec adc fs add inc xor in add jmp xor cmp mov out mov pop call call movsl sti xchg ret sbb and push popa cld cmp lret mov sub ljmp xchg push addr16 xor mov sub mov inc loope xlat fwait xor mov adc gs out ljmpw call cmp hlt or jno ss adc sti xchg push pop mov lods dec xor repnz int3 shrb repz outsb sub mov and inc into mov add mov mov ljmp inc icebp sbb repnz pop push add enter imul les inc inc sar rol addb lahf jge into ljmp rclb push add or inc out xchg dec rorb (bad) pusha push pop call ret add xor xchg add daa dec mov fcomps ljmp xchg adc xchg add xlat jp mov mov sbb jns inc dec mov je shr push push sbb inc loope or sarb xchg jb int cmp push dec adc jbe mov call fs cli clc add (bad) rorb pop xchg cmp test jecxz popa adc inc les add mov jecxz iret loope dec sbb (bad) or push ret add or cs orb mov mov dec xchg mov lds nop and popf fwait push ret aam aam adc stos sub add push dec imul mov pop adc push stos pop outsb sub rclb pop push xchg add cmp push sub ret sub call adc popa insb jecxz sbb add mov pop jo jmp inc sub dec and and rcrb push pop or pushf mov and push xor jo or mov xchg or in rorb adc rcrb or inc xchg xor lcall jbe (bad) jl and cmp int jo add add or push aad push inc or inc cmp sub adc or mov hlt sbbb sub loop jecxz and add lock cwtl dec cwtl push xor inc fwait mov pop jb sbb cmp jo mov clc xchg (bad) inc mov xchg or mov mov fstps and mov (bad) orb inc mov or pop dec cld pushf dec enter mov xor adc push out sbb jo push mov (bad) lret les mov push cmp push xchg or and dec inc sub and enter aam or jle add lret ret dec cld sbbl cld mov iret mov xor clc and fildll push rclb rorl xchg mov xor loopne imul lods inc push in movsl repz les lea js xor mov xchg repnz loope dec fs imul add sub xor test push fidiv movsl jge cmp add ja jp mov mov xor scas clc in and jns xor int mov xor mov jl daa mov dec faddl fs sbb repnz pop xchg cmp xor shrl xchg or jg ret and xchg out push xor iret push (bad) jo add test insb inc add (bad) out ljmp fisttp sbb add inc and imul arpl mov mov loope cmp xchg shll lods add xchg jp pop cs or faddl js mov or xor lds or mov ret shl mov imulb pop cli inc push aaa lock (bad) outsl sub pusha loopne pop les mov push nop push sbb enter rolb inc or jp adc subl cmp push mov out add inc ljmp rol xchg add mov into xor add movb repnz sub pop lfs mov mov fsubrs in les lcall sbb popf mov add or dec pushf mov and inc fsts cltd (bad) es aad sub xor adc lcall push add das pop in orl xor or orb sbb sbb cwtl fs xchg andl pop xor cld dec jmp pop (bad) loop sub add cwtl adc xlat fs and and gs or add jne mov jb inc and lahf rcrb bound mov mov add stos shr add and sbb nop add imul in add flds cltd (bad) loopne mov inc push cmp add lods and cmp clc movsl cli pop clc or dec loopne (bad) loope shl std add cld mov loopne inc dec js mov xor cmp loopne mov insl add repz and (bad) cmp in pop adc invd call mov mov push out or lea (bad) cmp pop sbb xor fucomp into pop jle or stos icebp jle mov mulb mov xor je ret lods sub andl add loopne xchg sbb popf push sub mov incl jne or (bad) sbb testl xor mov pop push adc adc ljmp mov leave rcll jo mov jno xchg inc cmpsb mov clc adc test push or es jl jno push dec daa sub loopne inc rdmsr mov add or pop jo add les mov rcl sar call xchg sub or js dec fcoml add js int3 xor (bad) ror out sub repnz dec mov pusha add push in inc xor jle or hlt push jg sbb repnz add dec cmp push leave ljmp in clc lods dec testb inc mov mov lret addl pop mov (bad) sahf add pop enter rcrb add add shrl push hlt or add add (bad) adc fiaddl imul add adc sub xchg nop scas push push dec adc and mov mov jge pop add dec pusha leave roll pop xor stc popf daa push movsb or push sbb xchg xor movl mov dec push add pop sub push add mov or js sub dec mov (bad) mov iret nop jns lcall fistp push call inc cmp loop ret mov mov addr16 shrb jno mov xchg sub arpl addr16 std popf dec adc inc mull inc adc out push inc or mov fldt and shll rclb pusha jne jo and xchg sub repnz ljmp push aam stos test xchg out out in ss in xlat test hlt dec adc sub xor cmc adc call pop add ljmp or pusha sub imul push sti add xor test out jb imul and out loopne (bad) int test and cmp pop xor adc sub xchg or pop fidivr and (bad) mov pop fwait and std dec scas pop les inc lahf ret cli (bad) pop push push mov jbe sub jecxz jno push insb xchg addl add pop xchg add cmp fwait mov jecxz push rorb aam pushf xor or inc or (bad) sub xor xor cmpb lret or ljmp xorl mov mov (bad) cmpsb dec pop leave or in inc rorb mov cwtl sub mov adc ljmp jnp int3 inc sub mov or loopne sbb mov lods sub fldt popa cs int3 push xchg enter daa cltd xorl arpl sub dec xorl loope fnstcw fmul movsb and jns sti xchg pop enter adc mov pop push sub nop or test in movsl cwtl movsb sbbl xchg jmp or jg rcrb xchg out shll xor ret jecxz dec mov and inc test and xchg inc inc lock cs je iret adc insb pop ja repz ljmp push sbb fs enter inc lock mov inc adc loopne cmp rorl and mov pop cld lea in mov xchg shl add mov js adc incl xchg inc hlt xor rorb mov add fidivl js dec (bad) sar sub add xchg rclb call mov dec lahf adc cmpsl dec or sub add mov mov dec cli iret pop ret jbe inc (bad) sti add pop dec and pop lcall adc mov xorb clc dec repnz movsb adc call aam xchg add sub cli and add nop add push xchg push add imul clc xchg or add mov xor cmp add ret xchg xchg add dec in test push adc dec jo pushf jmp (bad) popa push (bad) add add xlat cld faddl inc repnz push rcll adc aad xchg loope add sbb add adc cmpsb fistp gs in mov insb add cmp add jp pop sub push cmp xchg (bad) mov insb inc int3 push and push ljmp out xor mov add sub inc mov outsl nop mov xor ss add add and sar xchg addb mov add addr16 push mov add or jnp inc sbb mov repz mov aam sbb fiadd and sahf jl and sub fwait or pop imul pusha sub hlt inc or jmp sbb mov xchg inc xor xchg mov pop add out mov call out push cld add sub loop sub jl and push out in dec xor or test (bad) clc or gs cmp dec xor and sbb daa icebp movsb dec gs pop adc aad popf mov int push dec mov push loop lock adc mov mov or test hlt cld push idivb jo push push cmp fstps add cli insb popa mov push add ds mov adc je or xor mov adc and mov xor sbb push hlt cld adc and cli add cmpsl in nop jl test jl sahf loopne push shrb push mov pop adc gs cmp orb ljmp mov subb clc jnp add cwtl int3 insl mov push push push pop xchg in xchg add lock jp add dec pop in ja popa ret xchg push inc and sbb push rolb push rcl negl add jbe daa stc rorb clc xchg or jno sub pop mov dec fdivrl loopne (bad) rcll push outsl add pop add in pop dec add adcl into imul sbb ljmp loope rorl xchg mov and jp nop push lret xchg cmp cld pop loope adc sbb mov subl adc fnstcw add fisubr jmp cwtl push sbb push mov leave rclb out xor and mov add push or jge addb dec sbb inc sub sub out cmp loopne mov jge inc sbbb loopne dec mov mov sub or in nop add daa aad dec add (bad) pushf loopne sub add mov test push inc xchg call mov adc rol scas xchg mov ljmp adc xchg pusha enter xor or inc fisub stc fs adc lods dec xchg jnp les loop add inc lret or mov mov test sbb lock pusha or xchg sbb adc xor and call pop jbe xchg sahf fadd push mov lret pop add call or inc scas mov clc mov and pop dec push sbb dec add sub or sahf rorb adc cld sub clc cld inc shr add mov sub in (bad) mov and lock or cmp dec pop call icebp pop inc into mov cmp int3 shrb or sub xchg out imul loope adc psrad fldl and mov add or xor leave sbb pop xchg jns lds and leave movsb rcrb in add and mov notl jo out jl inc ljmp sub insb add jno repnz adc dec and cmp bound inc mov cmp les data16 xor lret js or add xor or add adc sub ljmp int3 les (bad) jo adc xchg sub ljmp xor je sub leave add loope mov pop fsubrl add loopne imul or xchg daa mov lods push mov dec push pop xor cmp cltd clc xchg pop pusha inc aas rol loop rorl das scas inc hlt out pop fadds test pop add sub adc sub and fxch insl je or mov rcrb sbb push mov pop sub mov and mov test sub xchg ret in subb shl pop xchg icebp in pop mov pusha mov add and aam pop les and clc lret pop inc add (bad) xor pop adc (bad) cwtl push or pop test mov sub sbb jp sahf adc dec xchg or cmp pushf pop mov jp add cwtl mov inc adc cmp mov daa jno xchg (bad) cmp jb xchg xlat stos mov cwtl aas loopne loop or pop mov pusha inc dec lea cwtl repz add nop push sub inc pop mov fisttpl je mov cmp js leave mov mov add xor and out xor jne add daa push pop dec mov ret xor cmp cmp iret mov xchg sub xchg fs aad aas pushf and ljmp pusha ss gs hlt inc test fisttpl mov in pop mov add xor hlt test adc push or test pusha rcrb loope cs call add shr lea into nop and dec rorl int3 dec mov jnp (bad) jo push in inc adc sbb add pop jns rolb into add mov ljmp dec xchg hlt adc jo dec cmp inc fcompl mov jmp add cmpsl outsb xchg push push pop cmp push js pop test or mov dec jecxz test mov mov ds push mov pushf popa (bad) ljmp lock lahf jmp push leave repnz nop into inc aad stos sysenter xor or jle dec or es pop mov addr16 xlat cmp lods lret inc jo mov add je popf adcb inc cli fdivs xchg add test pop or shlb mov lret lods jns rorl cmp add loope or xchg shl sahf dec lret loopne and push fs and cmp lods ds dec test or (bad) push sub fsubl hlt add ljmp clc sub adc add addr16 add shrl cmpsb xor add sub xor add cmp jmp mov mov sbb jle test inc mov push dec add lds movsb pop mov imul sub mov or dec push pop jo mov dec test sbb lods lea sub dec xor clc movsb or cwtl ljmp xor pushw add xchg xchg in addl loope ficom cmp xchg call inc xor (bad) xchg popf (bad) mov int3 decb rorb mov dec adc repnz xor push add cld pop or jb ret and xor mov inc in push das aad rcl push adc scas pop dec and pop add pop stos cwtl ja je or jo or cmpsl leave fnstcw popf dec xchg mov cld sub loopne xor and mov add outsb loop add or insb mov fadds mov jno mov pop inc push loopne hlt mov sub pushf jmp inc inc or jns pop adc mov fcoml add in int3 push jo or xor push cmp dec xorl push pop jge pop mov (bad) lock mov (bad) add rcrb cmp cmp loope fs andb enter fs and xchg add and mov jp push rclb adc sub imul ret pop movsb add cmp aam loop push jmp mov sbb cmp ljmp dec aas je dec push lods add push and addl stos or sub xchg mov stos mov mov and or mov xor jle mov inc pusha dec in mov sub pop inc add ljmp push sbb outsl mov mov inc hlt sbb mov insb loopne dec dec int3 or je cmp cmp jmp add in push cmp add imul adc mov xchg gs ss fiadd xchg sarl ret les mov shrl mov push pop lock jnp add shrb and adc pop repnz sbb aad add and cmpl sub push cmp add test add dec insl les xor or icebp xor xchg int3 stos dec add loope jmp (bad) lock xor mov mov movsb jb (bad) ficoml inc cmp stc insb cwtl es js mov inc mov imul or andl push mov inc or pop dec jo dec shll mov cmp add ljmp mov add mov stos mov add lea pop addl nop movsl pusha inc jmp xchg js fstpt daa mov sub add loopne mov pop or or sub mov add mov pop xchg pop lods add call cld int inc imul data16 (bad) pop jge je pop inc xchg inc cld jcxz and (bad) nop jmp or jge cmp push out mov inc js sarl pushl sub pop xchg sbb cmp xor mov or daa cmpsb mov sub mov call or sbb test lock xorb pop nop shlb sub or mov ja shll lock xor xor lods add push and jns add jmp dec mov mov mov pop fs cmp push xchg nop jl test sub incl ljmp xor fsubrs xor loope in push push pop mov test jo xchg xor out ljmp pusha pop add inc shrb mov sahf push jge ljmp repnz adc cmp xor insl xor add movsb pop xchg dec int test pop addb clc jmp fstpt es pop mov in loopne add or loop call gs scas add mov add fnsave call add (bad) icebp cmp jno fdivrl dec add clc sub mov jno inc mov int3 subps mov int pop jmp pop add mov mov xor fwait adc sub and adc xchg cld ljmp test fimull clc xor jl enter and stc mov mov ljmp pop aad add xchg add push or push movsb ret adc add iret push and jmp mov mov pop mov mov pushf leave bound lds test add push loope imul mov test and mov mov mov adc mov fistpll mov sbb lds add or dec (bad) test xor add jno mov sub and mov dec loopne daa lret movsb mov test mov or addr16 mov jmp int3 or loopne mov pop (bad) idivl sbb gs xchg xor add add (bad) idivb sub call movl xor inc stc adc call enter cli js lock lret es jns or outsl les adc stc mov dec xor ljmp cmp mov xor inc or pusha push cmpsb inc jp pop repz or cmc inc push push fsubr (bad) or movsb inc testb and pop sbbl sub (bad) insb inc nop je imul pop stos lock add je ss mov or mov sub jl cmp add xchg adc das pop adcl adc fs fdivs inc gs xchg cmp cwtl cmp pusha test sub pop pop dec inc sbb lock mov push int3 pusha sub or pusha jnp push push xor inc mov imul dec test lret cld pop push jb aas push mov imul pop xor popa subl in lea pushf mov in sub mov rolb dec cld inc mov lcall les or test sub ss test scas inc clc jae push push (bad) ds test jo jmp pop es add push gs xchg cmp je rol dec adc lret dec in xchg loopne sub cltd sysenter outsl rorb data16 jecxz (bad) xchg add mov push lods pop adc sub or pop repz flds pop push decl in or sub cmp addr16 loop nop fldl out mov or mov mov mov dec mov add (bad) cld or ret or inc jg test ljmp jl and dec je jb inc dec cmp cld ljmp or or xor xchg xor pop cmp popa fistp dec and loopne stos (bad) lcall (bad) dec pop mov orb inc jb pop pop xchg and mov in imul pop (bad) mov mov adc lods divl add lock push enter push push scas aam adcl inc cld imulb inc xchg mov imul test xor in lods (bad) mov in mov nop call cmp js cmp xor cmp and push fcoml ds into adc movsb hlt out sub mov fs or xor repnz and mov mov mov and into int insb mov pop inc in add jl add fildll les out mov fdivr rorl inc (bad) jg (bad) jle rorb fsts into ret xchg cmp inc movsb jl add and mov das xor inc pop mov inc scas clc lock cmp sti or add adc fldl movsb cmp int3 (bad) ljmp and or add mov cmp inc mov mov push test xchg add push mov insb inc cs mov adc je add inc movsb or test add clc push cwtl int3 push hlt sub mov and lea das iret push out inc add jnp mov and xchg add incb fsubrl lock jg add aam in pop add insb je sub (bad) not pushf movsb add cs lods dec xor mov pop jb cmp cmp jns (bad) mov mov js add xorb (bad) pop insb add xchg stos adc add mov mov push xor movsb sbb pop sub clc adcb xchg add xor mov decb bound cmp xchg push fdivrl mov sbb pusha inc cld addr16 mov push cld add push add andl push push ljmp or test xor add cmp sub loope inc or dec ret add or (bad) lock pusha sub or arpl js add jb jo mov aam cld jp add lret mov mov ss cmc call xor inc popa push mov and fildl fstpt test mov jae cwtl gs mov mov jp js stos or cwtl outsl mov mov (bad) bound cmc push xchg fstpt sub add out mov icebp or jne imul enter or mov mov shr adc negb imul mov ret mov add ljmp gs jge inc shufps push add jg xor push repz and mov push mov test pop xor inc sti out mov inc cmp or lahf sbb push jmp (bad) add xorb add adc insb inc mov mov xchg jmp mov (bad) push lret sub or add lock daa add inc mov subl adc (bad) cmpsb pop add dec idiv xchg mov movl js roll cmp pop pop ficom add push sbb int3 repz les fwait inc enter addr16 push mov jmp ds call inc pop add (bad) mov and push arpl jmp stos (bad) lock test lods sub pop mov push movb popa movsb pop out mov rcl xor inc in les aam rcrb mov incl pop out and jo push (bad) rcrl jo bound and cmp or bound adc xchg mov popf add mov push xchg mov add repz mov arpl loopne pop (bad) adc pusha and add xchg out out iret xchg les fistp add inc dec fistpl add test aad cs dec inc or sub fildl cli inc cld ja xor pop mov stos into push xor add pop pop sub add cmp mov popf std push dec xor and adc cwtl push repz iret pop or xlat jmp lahf outsb mov mov fcoms int3 xchg inc adc repz add (bad) pushf cs test cwtl add mov xor ret inc mov daa nop rclb add and mov in adcb repz cmpsb sub adc je or adc jg or pop dec xor jle jns mov sub fistl inc push and inc cli pop sbb xor nop and inc mov mov push xchg adc rcrl push or xor sub jmp xor adc mov and xor inc jecxz cmp mov cwtl test lods mov add outsb mov movb fcoms (bad) push js xor add lcall sub imul imul cmp fist pop jge cs mov pop std jle sub add or in (bad) sbb stos jns out inc add sbb call add loopne lret push dec sbb jmp nop pusha lock sbb stos mov add scas add fstps aas movsb mov mov mov movl pop jle mov add cmovo sbb jge adc sbb pop xor xor cwtl add pop mov aam jns call (bad) jne push push add push pop push add ljmp sub add rcr ret push pop test orb aas mov or lods mov pushf testl test test and dec pop add out cmp jnp and loop add add cmp mov add push enter cmp xchg leave add roll xor mov negl sbb jmp add (bad) push lahf pop mov imul add pop rcll fild rorb or adc in xor int inc enter push (bad) clc or jb sub mov rcrb enter add dec rcl pop push popa sub ror cld test or or mov cmp outsb xor pop sub and shrb or out pusha test cmp mov push or mov sbb or lock fistl test mov (bad) xlat adc push (bad) in ds sub in mov jne add adc mov mov hlt fnstenv add xchg and and add (bad) cmp test jae and movsb sub or or loop sbb je mov xorb xor jmp imul cmp pop push cmp jmp mov pop call test cmp test adc aam xchg add add xor dec sub fdivs add xlat in out xor xor xchg aad dec xorb (bad) lret mov jmp addr16 stc fcoml test adc inc lock push repnz icebp add enter and loope insb jno lock dec in mov inc push xlat lahf push movsl and sub repz push xchg test mov fnstenv adc jge clc push in scas jp cmp lahf cs add and popf dec ret sub enter imul xchg pusha test add pop add call data16 cs mov (bad) xchg add sub push pop inc call test add cmp dec clc push rorl lods nop dec sbb or test jb,pt sbb lock bound (bad) dec cltd int3 xchg popl mov xchg test adc push (bad) sti adc sub sarb or add inc or push enter and xchg js sbb pop inc cmp (bad) jns jg push inc call fsubrs pusha or pusha mov rolb pusha iret test add cmp jg fstl adc rcrl cmp ss lcall adc aad fsubrs gs loopne (bad) xchg pop orb dec int enter xchg clc push add add mov xor loope add jae sbb (bad) (bad) sub push data16 nop mov inc adc in sbb cmp mov iret push movsb dec push inc mov cmp cmp ret add add adc push (bad) xor xor sub (bad) mov scas rorb add cmpsb sub cmp orl sbb cwtl inc and rcrl popa and and mov in mov enter test cwtl cmpsl subl sub or sub int3 adc ja xor testl hlt xor push pushf enter cmp test arpl fisub add push or paddsb pop xor push stos xchg dec rolb adc push adc sub push add push add jmp repz mov bound add xchg and popf adc xor sti test mov ja jne dec xor nop mov lret add pop add data16 test call add push notb dec call cmpsb or lret xchg add xchg xchg push aaa (bad) and mov jg dec add add mov xchg and minps push test hlt sub add sbb pop add scas xor aas add or jmp inc test cmp or jb nop add dec inc xchg loope add xor lret push rclb std adc pop or (bad) sbb roll das nop sahf cmp sbbb int fnstcw inc stos and push fnstcw test xchg sbb jmp into or add adc sub dec push call hlt fnstsw hlt sub mov dec cmp add adc jge mov out icebp sar adc dec cmp (bad) adc jge xor cwtl jle adc push test inc dec add popa push lea jns add and leave mov add lret sub or push ret mov add mov jmp add lock cmp loopne add add jmp pop push test psubsb push add mov adc jne jmp iret mov add add lods movsl dec xchg and mov push aam cmp sbbl pop test add pop jmp sub mov les add sub jl mov jmp xchg mov sbb xchg lret push mov push mov outsl mov xor pop fsubrl shrb shl mov cmp inc addr16 cmp push adc loopne mov js push ret mov pop push jmp mov xor leave negl jmp sbb enter push pop mov mov loopne jmp repnz jne cmp or pop jmp xor dec lea mov loope and test js leave adc add fs bound mov add jecxz and jae push je add (bad) outsb cld mov enter lea in stc (bad) sbb subl xlat adc or shll add xor sbb xchg cld cld add lret jmp imulb inc xchg pushf ss add dec sbb sub and add xor jmp or out jnp sbb xchg adc and sbb adc cmp shlb jge sub ret stos fdivrp dec int pop call pop fstl jbe dec xor pop push pop push (bad) dec sbbl in (bad) pop cmp mov sbb psubq push and pop mov jmp push pusha (bad) or outsl jne pop add add jbe imul in iret pusha mov inc pop xor pop fnsave sahf pop and ss xor dec mov andps add xlat inc fist push mov or and or add sbb dec jge cmp cwtl out pop jmp mov call mov mov and or add clc add jmp xchg outsb sahf fmul or ss jl adcl dec into pop push sbb into adc loop jge gs dec push jle add data16 sub mov popa adc pop push call in mov dec (bad) str pop dec push dec cwtl mov jnp test adc or test push push xor in xor dec dec sub sub movsb cmp les addl mov dec cwtl int3 insl jbe lea rorl clc sbb shll jns sub jg sbb adc icebp (bad) aaa or jbe inc jno enter movsl cld das sub or mov mov add push pusha jae (bad) pop mov sti pop imul inc loop (bad) push mov sbb inc insb loope pop push lahf sbb pop cmpb movsb ret push add push out inc ljmp push loop jmp or or cmp cmp add sbb add adc rorb push call jle push push call add mov adc mov cmp cmpl add fwait mov pop mov or push imul or add adc push push pop pushf fisttpll sbb in leave mov test leave iret int3 lock stos ret orb inc xor pushf imul (bad) daa adc jmp fsubs shl add idivl (bad) mov add xchg mulb and push and pop adc fildl inc add jle pushf cmp iret mov or dec sub xchg adc pop pop (bad) inc pop mov mov into push pop jae jmp sbb adc add (bad) push jecxz test push xor pop test movl ja sbb dec lds sbb cmp pop jne add xor ret loop enter push imul xchg jge inc icebp sahf push fist les push ds pop or mov mov mov mov ljmp out and (bad) sarb mov add lds negl jge sbb sub jne adc sub je push mov test sbb gs push jmp or scas in jmp scas sbb cmpsl add jnp mov adc jmp jmp sbbl les xor jne data16 xchg out dec js cmp or adc out and add xchg dec inc mov in nop out cs sub test xchg or sbb xchg xor jmp xor incl push sbb mov not cmc add jmp shll cmp (bad) cld mov insl jo adc fadds add aas xor jge push shll das adc adc inc and popa lds rclb mov in addr16 sub sub mov push push jecxz jmp adc jbe push or lret xorb mov add and sbb mov lock arpl out mov cmp jle xchg sub push repz mov mov nop cmpsb (bad) adc add adc mov add cmc fistpll or pop add js add xor push jmp mov mov pop sub pop jmp (bad) mov pop pop jge pop movsl xchg sub add mov jno loope das nop movsl loopne jo repz dec mov xor in sub xchg das xor (bad) sub xor inc xchg and mov push add rcll out jg lret inc addb dec mov pusha jle xor xor xor outsl pop adc popa sbb push add add add stc ret push dec xchg push cmp dec sti add outsl xor sub popf adc je add (bad) daa push or movsl fwait (bad) dec lods scas mov add pop add sub pop push push popa bound cwtl out sub push sub or pop push mov xor cmp addl addl orl ja cmp in mov lea rcrl xchg fsubrl repnz xor pop in daa sub mov loop (bad) inc sbb shlb mov mov (bad) sub in ds out jge cmp test ffreep out jae aas out cmp or ljmp test in lods add out and add (bad) jmp js mov mov jb mov xlat cmp adc mov inc mov sbb xchg sub lds mov sub outsl mov mov xorl or sbb cmp lea inc push or loopne daa call jmp int dec es jp mov popa add int adc jmp cmpsl popl dec inc xchg jmp decb adc pop jg adc stos loop sbb popa cmovg pop fld pop pop es add xchg push dec and ss sarl xchg xchg or arpl call nop (bad) push add fmuls cld shll loopne jl ljmp into stc add test icebp pop xor roll and dec pop add push fdivl pop jge cs clc inc out and add sbb aam arpl push or incl dec xor or add insl or xchg sub pop ret jno repnz add or xor fs jle rcll adc add sahf ds pop and sbb repnz push pop adc push hlt je pop adc rcrl ja es jge mov ftst adc fistpl xchg add push nop lret out and clc or pushf cmp pop push xchg push addl pop and pop lret push in add (bad) pop sub xorb pop adc xorb mov mov negl rolb ds fildl xor mov addr16 xchg jmp (bad) jo pop push mov jmp je push imul jmp shrl fs movsl test push pop push mov iret jne fs jns push mov insb dec cmc je cwtl sbb mov es and xlat fstl sub push xchg rorl dec aam in and jmp shlb clc aas sub mov shrl add jg xor mov add mov xchg xor call pop push popa lock mov aas inc rorl xlat sub dec into add out mov stc pop sub mov pop push add cmc jne fs xlat lahf ret or push add push mov jl sub xchg insl xor or xchg insl pop fadd pop (bad) aad sub xor sti xchg xor into add jmp test jnp mov push mov imul sbb mov pop add test das fsubrs push adc test inc sbb popa and pop or test push adc jns jbe (bad) cmp aad jnp xor mov enter sbb lds js and inc scas mov lret mov stos dec or push or mov (bad) mov mov pop mov push movsl inc jmp pop dec inc adcb dec sti push gs cmp dec mov pop jnp push cwtl pop lret and hlt xchg mov cmc jl stc lret pop pop xorb sub jno std add add ds mov rcrb inc pushf cmp jo jmp mov jne sbb pop mov pushf dec sbb jp jbe mov insl ljmp mov jae dec leave mov enter aam sbb inc push cmpsl movl pop push dec cmpsl or sahf push pop punpckhbw sbb cmc divps add pop pop push inc and xchg std jg imull xor mov lahf test hlt cmp clc xor jmpw mov ja das mov mov mov jge out dec addr16 loope jmp shl xor dec inc rol push int cmc iret ret or jae cmc sti call arpl sub xchg mov imul or sub mov jo push ljmp dec pop pop or in mov jg pop jb addb jmp xor cmp add sub (bad) lahf repnz and sar adc add or outsl xchg loop and mov dec jmp pop imull cmpsl movsb mov sti jbe add xchg stos inc repnz cmpl std cs popl push dec push inc ljmp jne sub or pop xchg movsl jecxz and add rorl arpl lahf sub pop sub push or push or xor jl mov push xchg popf jae push dec inc adc push andps jmp sub adc add stos or (bad) into movsl mov lods push adc dec add loopne lea sahf ficoml dec sbb xchg xchg in aad lods xchg push push pop xor les jo mov add jl std popf das push das cli dec pop cltd test adc mov (bad) popl imul pop loopne jmp push push mov inc push (bad) mov jp mov subl push ss pop test push gs mov pop stc sbbb add neg dec jmp add jp push adc jae cmpsb and push loope jmp mov decl jmp xchg das pop insb sbb sub lods movsb jb or cli xor xchg pop psubsw xchg and xchg mov push (bad) jmp repnz lds adc adc test (bad) hlt stos jge lock jno test loop js and mov jge dec mov in or xchg sbb mov jbe sub pop sub cmpsl sbb jge loopne sbb adc push dec and rcll dec rcll jbe jge and mov jae iret inc sub xor loopne push or inc mov daa mov dec lock pop jmp out mov loope imulb add icebp lahf mov inc sub fs push mov dec lds or mov sub lds xor ret push roll insl mov mov dec pop inc xor xchg pushf xchg shr jmp mov aam xor sti xchg mov push sub loop int3 testb fldt sub repz inc add and push pusha sbb call push jmp mov add xor sub cwtl sub in or mov pop or cmp and cmp in mov dec dec rorb aam fidivrl and jb and adc push jnp or add sub adc pop xchg rcrb dec jb cltd insl add fidivl and jg and inc xchg faddl or pop jecxz jge add mov mov dec sub xor mov inc mov jmp pop mov sub cmp shlb sbb sub and sbb sbb sahf sbb cmp dec in lahf add jmp in outsl xor xor add pop pop pop sub or pop mov nop adc (bad) mov fsubrl daa pop inc dec or hlt cmp mov sub pusha cmp adc mov add push mov out icebp divb jle jne add les push pop loope fldcw lret data16 movsl insb jmp add adc out mov pop mov enter xor out les movsb out push and (bad) repnz (bad) or fsubl movsl add adc add (bad) out push pop push jo mov pop mov mov jmp shrl ret in lods enter or push lds xchg (bad) aas add shll mov xor inc sub push pop pop imul pop pop leave or cmpsl cmp mov xchg pop xor ljmp pop cli pusha (bad) mov pop ja (bad) loopne out test mov pop push xlat sahf pop cmpsb ret cmp lea into ret ror pop idivb pop or cwtl mov aaa mov mov shrb add inc ja adc cmp mov push loop xchg iret pop jbe pop push not add in std mov xchg pop lret push aad sub outsb jl xor (bad) test or repnz dec mov out rolb lea gs movsl sbb mov lock repnz fistpl push cmp and shl push das fbld aam ds mov insl pop push mov dec or xrelease dec jge inc and or divl cmp cld (bad) loope mov sub or test jmp fldl pop pop pop pop pop add div sarb xchg mov jg rorl pop sbb xchg pushf and cmpsl pop xchg mov and sub cs sbb push inc jmp repz cmp adc rorb enter add fistp mov pop inc ljmp outsb jg or or xchg test (bad) sub push cvtps2pd mov jg shlb pop shr pop inc (bad) out std icebp jmp fiadd xlat inc sub lea sub push xor rolb mov inc ret mov bound divl lock or dec popa js pop xchg in lahf xchg negb sub and or push sbbb push in lds pop mov xor repz aas mov push jmp add jg jnp add rorb jmp into sub push jmp jb out aaa xor jmpw xor (bad) xor fwait or cmp mov lock add cmp or sub ljmp fs loope shrl pop out mov pop test dec mov imul push xor in js cli test fistp and mov into mov pop (bad) ss xor popa push mov mov mov (bad) ds sub push lods add or cmc pmaxub adc pusha inc add push test loope test lret xchg clc mov xor or lcall rcll add insb jl dec xor lret aaa or xor inc in xchg add cmp jp xor jmp repz pop andb dec pop jne cmpsl jne lret lret jg test xchg push mov mov sub sahf sub dec xor pop dec mov repnz push pop fs and dec mov sub add mov add call pop dec push mov inc repz mov sub roll scas push push adc cmc dec jl push or loop shl fdivp sub mov repnz sarb into loop fwait mov ret and mov pop call ret into mov sbb pushf cmp cwtl jnp cmp add pop neg or pop (bad) imul stos xlat add out mov sub push ret or sahf mov push and test test dec out pop rclb hlt ja push mov pop sub sahf scas cmp imul cmc mov mov mov adc xchg pop mov push push das outsl xor sub out push scas loope xor scas es movsb adc push pop xor mov add jbe or cmpsl inc rcrl add scas fwait pop daa push push cmpsb adc dec mov lock add mov std adc stc xchg or cmp mov inc cmp inc sbb mov push lea es out shll inc sbb insb clc dec sbb jle mov popf lock or fcmovb push pop sbb jmp mov or subl ret mov test mov inc mov aam cmpsb das fist fs inc pop pop ret lock lea out add add rolb ret mov icebp repz cmp pusha and ds inc ljmp cs mov mov sub sbb adc inc sbb (bad) xor push adc jmp cld push cmpsb sbb arpl or pop (bad) (bad) add xor test dec mov adc xor adc dec add xchg xor add into push or in push push ret and andb push data16 xor ljmp test icebp (bad) xor repz mov inc data16 pusha and mov and in enter pop or xchg mov es sub xor dec out add or xchg and pop push ret inc cmp cmp push jle fildll jecxz add popa add or aam adc shll sub out lods loop sbb (bad) out orb mov xchg adc (bad) mov inc push dec xchg xchg pop into aaa adc or fcomip movsb out inc adc repnz mov dec pop jp sbb add add xchg into xchg push xor sbb repz test add sub mov ret cltd and inc sub popf rcrl pushf rolb (bad) inc fdivrs movl or inc add add xchg inc cmp sbb in bound iret and enter mov cmp rcrb loope lret jmp mov mov sbb jmp ds lods mov xlat loope xor xchg adc pusha mov fcomps aam xchg (bad) cltd pop mov pop push nop and fadd sub sbb jmp ret pop roll xchg xor sbbl js and or repz jg sub add stos add cli mov or sub and xor sub rolb or mov lds or clc pop test push push pop xchg test mov pop out or jmp test inc pop add or jmp push fs sub and stc lret testl loope jmp fs int3 dec iret nop sbb push inc and loop and adcb inc (bad) jmp ja add nop xchg push mov and ja ret sub or addb mov inc add push xor test test dec push imul or cmp xchg sub and ljmp add cmp mov push push repnz add and mov movsb pop xor outsl (bad) shrb adc icebp inc adc ror es mov je adc add js and test mov jle stos and or xor es js lods and cmp push mov xor or ds add xchg fwait jmp je,pt hlt adcl mov fimull idivl push lds popa xor ret push and (bad) and iret rol pop jmp nop inc inc inc loope push lock pop dec xor mov ss arpl push jbe inc xorl (bad) cltd or out sbb dec ljmp xor push test add sbb adc sub sub sub out adc fimul push mov adc and cmp jnp in pop xchg enter push or cltd add xor out and and cmpsb sub (bad) sbb pop lods push jmp xchg (bad) dec roll xor mul int mov mov jmp js adc xlat imul inc out cmpsb and sarl sbb daa push dec test and xor jge pop mov sbb cwtl daa repnz mov inc mov add sub push or xchg out jae out cmp sarl movsb fld and aas add dec sub cmp add aam add push push daa fs or cltd repz inc jge add aas int3 sub ljmp decb mulb pop pop js cli sub and bound rolb or lret xor scas es push jo adc in ljmp daa and into iret mov subb sub push and repz ret inc outsb adc sbb add mov loope push ret test adc mov inc push imul cmp and dec jg xchg sarb mov lret inc call sub mov add or sub sti cmc mov or movzbl cli icebp mov add jns movsb mov sub xor mov (bad) xchg add fistl add and mov dec pusha jg add adc popa sub fs or mov adc (bad) xchg jmp data16 adc mov dec mov pop add loope fistl dec or or mov cmp fstpl mov ss and icebp inc mov mov pop adc push loop dec pusha roll or bnd pop insl inc dec shr dec pusha xor mov sahf and sub popf sub or shrl add out pop adc rdtsc (bad) mov dec iret inc add out adc sub sub test dec or xor add mov dec ss call mov pop sbb popf (bad) inc bound sub push (bad) js sub or sahf inc cltd rep sbb push pop stos add fcomi test sbbl and daa call xchg mov and sub xchg out cwtl imul jecxz mov jo xchg pop and cwtl mov ffreep roll push mov mov das sub add pop pop cmp sbb imul and imul adc (bad) daa sbb es es fdivs mov call lods dec mov mov in sbb cs xor push inc add sub dec out jecxz adc mov std dec push pop ss into mov dec add ret mov sub sbb push inc add test lret xchg dec and adcl icebp adc xor ret pop sub mov (bad) in rorb out mov rolb and (bad) pop sbb loopne mull nop ret xchg push aad xor inc sub mov mov inc (bad) xor mov mov cmp js xor pop scas sbb add jecxz int push shrl pushf jmp mov inc mov int sub rorl push mov xor (bad) mov dec xchg xchg stos imul fimul or mov imul (bad) ss pop add (bad) dec cmp adc cmp mov out mov dec in (bad) dec xlat xor or ljmp pop mov and add adc or stc bound mov and jno mov cli mov push xchg into push fcoms mov mov fldcw xchg add xor (bad) in enter das sahf jmp das add pop or xor fcomps add inc push fcoms jmp xor xor std pop clc mov shr push scas das adc mov jno add or xor mov lret mov imul push stc in (bad) call mov push add pushl inc xor iret sbb sbb adc ret cwtl adc and ds or xor mov dec mov icebp xor ds xor inc or xchg cltd mov adc mov ljmp enter sub and fs cli stc call js fsts lods rcr sub lahf sub outsb dec subb and sub into mov pop push lret cmp mov aaa mov adc adc mov test fxch scas adc loop fidiv addr16 push add cmp adc mov mov and fptan fimull sbb scas es imul adc mov int insb dec fsubrl daa mov add xchg mov shl pop repz jecxz and cli push and pop xor shl nop daa cmp xchg fptan insb addr16 clc add mov pop jecxz sub lock jno inc xor sub dec jno inc or (bad) xor out jbe dec into xor and pop mov dec or or pusha push jo pop dec (bad) (bad) jmp pushf mov dec pop lret dec fs insl mov ret mov sarl int3 or repnz rcrb ss in xor pop xlat xchg dec sub xor (bad) mov dec xor ss (bad) jecxz icebp nop jb and xor push mov mov jg out das adc testl or orb xchg push dec or das add mov pop push cmp adc cs lahf push mov popa fidiv pushf adc iret inc adc xor cmp (bad) adc jecxz adc jmp add sub sub idiv int cmp jg pushf push inc lret sub daa or cwtl jge (bad) jnp pushf mov jge insb aad loope add repz repz jp sub xor or ret xor push shll sub and pop cmpsl xor mov lret icebp mov pop mov push mov in or rep or (bad) sub lock cmp and xchg lods inc adc out mov mov adc xor aaa inc mov xor mov leave inc or push sbb cli sbb mov into sbb or xchg adc and (bad) push jmp das cltd shrb ds lret xor and adc or rorl jmp add jg ret leave or cmp add jb stc sub and fs repz push gs dec dec dec out insb mov adc and add repnz add jo xlat push lret fimull push cmpsl fmull add mov inc ret and rolb in inc sub call xor fcomps divb (bad) jno add sub rcrb and and test xchg js fs inc adc lcall fisttpl cmp pop sub and pop sub mov jg mov out (bad) or decb repz dec (bad) cltd mov es in leave and xor xor xchg xor mov (bad) dec add sub mov pop mov push out sbb pop push mov ret xchg and and stos jmp and adc cmp into out rorl jl mov xor or xor and shl in push and adc addl and mov adc push repnz xor push out loope xchg les or test test mov adc daa add sbb inc add loope xor add pop pop pop pop popf ret in inc je or iret mov sbb sti dec jo dec and pop sub lret je into sub add shr leave sub xor sbb xor shr and adc arpl push nop sbb push inc cld ljmp mov jb sahf adc out pop mov negl es jmp push aad outsb dec in fcomps mov in leave test inc mov int cmp (bad) fidiv sbb les push pop out leave (bad) mov sub xchg ret cmpsl cmpsb sub pop out adc sub or andb daa popa push icebp inc inc and test pop leave sub jle es jno and push and stos inc loop xor or sub jecxz push mov cmpsb jno add or pop xchg ret or mov pusha inc scas daa sub cltd enter cmp and sub dec iret add js push dec push mov pop cmc mov xor mov mov mov push add xor mov mov pop sbb loop adc or (bad) mov push loope daa add sub stc pop mov (bad) rorb shl xchg pop out dec aas cwtl iret repz mov ret rcr push hlt mov ret sarl mov popf adc xor mov adc sub jle leave aam icebp and add rcll xor jmp loopne ja jle cmp adcl leave xchg jno mov mov and pop mov adc leave in addr16 fisub adc jecxz sub push mov gs test xlat or jmp scas jl shll xchg xchg jg sbb ljmp mov imul gs sub fs mov adc add es pop xchg loope jno imul into cmp pop push sti push pop das sub (bad) dec inc jne push loop,pn xor call stc sub xchg mov into inc imul mov (bad) in dec mov fsubs push imul cmp mov sub vmovhps sub dec add push xor dec ljmp lds insl mov dec and push xor mov xchg adc sub lea repnz jmp das gs xor jne mov push cltd mov add sbb testb cltd fsubs fldenv dec lock sub pop int3 adc jbe inc sar adc cmp inc cltd xchg inc fucomp loopne xchg mov out xor out outsl push lret xor cmp mov iret movsb pop nop xor add cmp xor or dec jns xchg xlat popa lds or mov jg data16 mov outsb xor sbb or fs mov dec bound cmc ret xchg movsl lcall fimul push xlat cwtl (bad) inc mov imul mov push sbb (bad) dec jne or ret inc sub out insb es push xlat cmp shlb push ljmp test ds adc gs mov pop push fs daa in jo mov mov test lock ds popf rcrb pushf daa (bad) mov push and mov xor mov add arpl ljmp pop jl push iret clc ret mov lock cwtl mov mov xor add mov cmpsb nop repnz int3 stc sub mov xchg add dec inc xor cmp into add imul pop mov mov mov push enter mov mov daa loopne jecxz out cltd sbb dec xchg lret leave sub mov add sti adc push push add xor pop pop sbb test pop and mov push cld push mov pop (bad) xchg into and out xchg adc mov or jne mov stos push mov shr aas aam cmp sub fucomi (bad) mov les mov mov ret mov int3 xchg imul lods out xchg and divb incb shrd pop cli jmp add or cltd mov (bad) mov jecxz sub notb outsl fimull xor rdtsc fs xor dec mov add ja xchg or or in pop lret aas and (bad) sub das lds pusha rorl fldenv imul enter xor sbb mov xor or dec fcmovb dec int aas and xor xchg out mov adc sub add xor (bad) mov cwtl aad iret gs mov mov lret xor popa or jne add mov sub int loope cmp add lret pop mov add xchg add ret je adc in ret xchg nop mov leave add cli sub xchg inc inc ret test out or iret add mov mov add iret dec lret adc data16 sbb and dec mov xchg pop xor xchg dec outsl mov inc pop int3 mov push aam sub divl cmp sub fsub xlat pop inc lods sub sub sub je testl pop and push dec and das addr16 out and cwtl jg pop shrl pop mov jmp and jnp or and pop cmp rorb notl mov mov leave xor sbb and push mov mov bound jb daa pop mov stc mov mov sbb sarl clc iret mov jmp lods mov mov repz mov loop test cmp cwtl push je es aam sub push sub mov dec ret pushf (bad) mov popa and mov push pop lods lock nop outsl mov decb negl cwtl neg or sub dec xchg popf add and rclb pop daa sub movsl jo test sub mov mov push aad jmp jmp and pop sub or xchg dec mov and xor mov les test je stos jbe dec and pop pop jmp xor mov ss daa shrl inc std push movsb jb loop and or push fsubrl (bad) dec std inc mov cmp adc xchg xor mov divb push push js xchg adc (bad) je ret dec add or mull sub add or inc pusha in movsl faddp es rolb cmp pop mov fdiv xor ret (bad) mov sub xchg fsts pusha cmp mov scas fldcw cs xor add out sti mov or push rcrl stos xchg xchg pushf stos inc lds lcall flds xchg enter ret dec jmp push sbb mov xor sti in fadd or cwtl xchg xchg stos stc mov je mov jge and pop add mov xchg test orl or sbb mov in cmp popa adc dec ss ljmp sti lods or insl das outsb out add dec lods in cmp jecxz mov jns mov mov sub rorl pop push cwtl in int fdivs into fwait loope (bad) mov dec icebp adc inc jnp movsl stc dec (bad) icebp inc sub push fucomi jns (bad) adc mov adc xlat mov pusha cld xchg sub cmp cli daa lcall loopne xchg dec or inc add push fsubrp and mov into in xchg out xor push and adc popf inc aas adc insl into cmpb hlt and pop sbb mov or stos sbb mov fistpl mov sbb or xchg nop xor xor (bad) xor dec sub or sub sub test imul repz das and mov pushf and icebp ret push xchg stc pop cmp dec out mov mov dec nop xchg test lcall mov js adc ret sub bound jns xorb xor mov add add leave cwtl lods dec popf xor scas add sub push sub mov in inc push or xchg mov mov out std pusha outsl into mov bound fimul cmp cmp dec dec test sbb adc mov xchg and mov add sub mov xor fnstcw mov test add xor xor subl ret gs stos add xor repz out sub or nop daa call adc adc aam xor and sub xchg lds dec testb call jns test leave cmp (bad) lock bound je iret pusha and mov or (bad) ljmp ret or xor inc or sub ret mov xor fdivrs pop xlat cmp stos mov sub aam jne int push jmp jle es fs leave add (bad) push and sbb xchg adc xchg dec inc add push cmp daa rcrl pop movsb lret rol xchg push add pop mov jno cmp les adc xor add jns push fildll out clc and xor sarb stos cmp or sub push and dec stc rcll pop dec dec push sti xchg fist mov pop in icebp movsb (bad) cwtl mov ret pop cmp lret jmp and add sub pop int jge xor jmp inc mov mov add inc (bad) decl jmp xor mov stc or push or repz stc js mov shrl mov push (bad) imul imul add mov imul jo cmp neg les leave sbb (bad) mov mov dec es sub sahf add lret inc lret push mov bnd inc std pop xor daa mov cltd movsl icebp arpl or bnd je mov cmp cwtl call enter jl insb mov lock and (bad) jae or pop (bad) aad push sub in xor add call xor (bad) sti out mov push and pop pop xor adc fdiv add xchg stc rcrl sub divb es mov dec xor or add dec mov jae add xchg pop js enter or rcll in js push or or push into repnz mov and movsb push push les jne adc imul js daa (bad) fs std lahf inc shrb out xchg mov jmp pop shrb repnz in ss out or add or push pushf lret rcr mov bound and and mov or shrl jmp (bad) fnstenv jo mov sub in daa cmp add dec adc negl popa popf iret inc cmp movsl push sarl or or jecxz sbb xchg push dec (bad) and lods push test push shl pop xor ret in pop out add push sub repnz adc inc add pop dec je mov and adc sub mov sub and and lret jmp jmp imul ret lds cli push movl repnz or mov in cli pop sub iret mov jno jb xlat fsts pushf add mov repnz mov push xchg inc jp lahf push popf arpl adc cmpb or adc lret test inc jne popa dec repz insb push mov dec or sbb rorl icebp js ret add mov movsl mov out roll shr sub sub or out mov lods test out adc dec adc add divb in and lods mov lret xchg jg subb mov xor dec test and add dec (bad) repz sub mov repnz inc xchg call dec adc mov mov cmpsb (bad) push pop in mov and mov mov sub gs mov into mov mov jno orb cli sub movsl jp mov in call imulb sub xchg sub mov add sub mov fisubl ds sbb lea lahf out xor aaa int3 cltd imul aas or pushf repz cmpsb sub mov pop push jmp test mov pop rclb jl sub lods add js adc popa into rorl nop inc mov push add pop push mov movsl dec pusha roll pop or add add dec dec aaa mov imul leave fistpl sbb int3 push add fs or add sub inc loop pop push mov pop shrb sub pop out pop (bad) mov jmp movsl xchg ljmp inc mov pop inc (bad) sub das add mov daa pop sub mov das push stc cmp out mov pop cmp loopne cli and jmp or xchg mov into outsl or movaps xchg sub and or or pop or stos mov insb pop mov sbb xchg ljmp sub adc add mov outsl dec and xchg into lock rorl imul push addb mov mov pop or lods aam call xor (bad) mov xor gs daa sbbb xor outsl pop scas icebp subl shlb stos push sarl cmp xor mov cltd repnz jecxz test and mov gs inc stos jb leave out fcomp pop mov addr16 movsl iret fnop js mov imulb jle mov sti (bad) jle mov xchg dec lock (bad) inc or add sub scas push stc push sub ret sarl xchg imul cwtl bound sarl push mov mov mov outsb sbb adc lahf jg mov (bad) sbb xchg call xchg xor or sub and or xchg adc (bad) stc push aam (bad) or pusha mov fcmovu pop inc and insb lcall and and rorl (bad) xchg add sbb add sub or icebp decb mov aas (bad) rcrb mov mov sub out cmpsb lds push outsb stos push scas fs push hlt jb xchg mov icebp (bad) sub jnp in or push push add mov push outsb sub xor fldt (bad) mov in mov pop adc dec pop repz and xor mov fdivs xchg inc ss mov aaa (bad) ffreep fmulp pop adc imull fcomps or mov push cmp insl ss xor sub and hlt out xchg dec iret mov pop add adcl idivb xor inc and (bad) loop push fcompl (bad) leave inc or in icebp xchg xor adc push jmp and jb call fadds in adc xor inc fyl2x cmp out mov popf xor ret (bad) arpl mov and out pop xchg inc lahf dec jmp ljmp ss or mov (bad) (bad) xchg sub sbb mov sarb push aas fldt daa add int3 mov mov jle and add lcall cmp mov pop ret or xor xor cmp (bad) dec jne cmp or lret inc aam add clc jmp shr cmp in lret xor les xor mov int3 sub mov sub test data16 mov outsb xor adc jmp add mov and and inc mov add xchg aad notl call dec hlt dec add mov leave (bad) jbe push or push imul add je (bad) bound xor xlat xor ss pop add and ss (bad) dec mov and inc in out (bad) xor xor push jnp pop adc icebp or clc and and or adc shrb add mov inc jl out jmp jl sub int3 or xor mov icebp and mov mov in call dec sub xor (bad) adcb mov jge xlat test fs mov mov or mov dec mov idivb lds dec xchg mov or in push mov movsl jecxz pop sub pushf jmp sbb sbb jp stos imul loopne test mov mov divl fbstp jecxz and imulb je push out inc inc das mov mov dec xor in jge out and enter (bad) or andb mov negb and sbb mov push adc add mov scas insl jo test (bad) test dec mov outsb push jns aas movsb mov add test sub pop lahf mov inc cmp xor (bad) arpl pop and adcb clc push movsb push cltd lret mov pop test add aam in loope out cmpsl outsb repz sub adc jecxz dec in incb mov leave jp dec daa (bad) aas pop add or mov cmp mov (bad) dec ja stos jmp cmp out push push or push push (bad) mov mov sarl jns mov (bad) mov pop enter pusha cmp jne scas xor (bad) mov xchg dec and xchg cld or inc push and inc mov cmp pop sub jbe push mov mov cwtl push mov dec mov lret rcll and mov adc scas sub add out loopne or dec jne (bad) nop and xchg mov adc xchg sub push xchg xchg cmp push mov jnp mov das xlat js (bad) adc add inc test add push cmp jae xor sub add imul mov mov jb out mov lock das ret clc jmp pop sti cmp (bad) repz push pop lock leave and (bad) xor cmpsl jge fisttp lea and dec cltd cltd andb dec mov ret repz and sti outsb and mov add mov pop or sub sub mov les pusha lock xchg in imul pop das into jge (bad) out xor aas cmp mov add and cli in mov enter push push jl into cld sbb aas jmp push xor mov inc std test mov xor test mov shlb adc xor ss mov loop (bad) or mov push cmp or popa mov lret paddb mov and xchg lds xor add clc mov and and mov sbb add jecxz xor sbb aaa out cmp push mov leave ss xor mov and iret xchg cmpsl jb idiv aam out sbb lahf cmp and add outsb jne mov bound ret adc xchg jle mov cld dec mov imul (bad) dec cmp inc pause rorb loop inc mov rolb je mov and loope dec sub loope out in sub ret repz push dec std xchg rcrl sbb xor hlt mov and push add repz leave mov or (bad) xor xor popf addr16 lret movsb mov or pop mov fnstenv scas push or mov xchg xor add jl fs inc outsb test ret mov xor stos mov pop loopne and pop mov setno aas lods xchg out je mov or add scas or fmul dec loop mov or outsb jb je sarl sbb jg cmp mov out scas jmp xchg ret or add xor add mov jno insl lcall pop out and lea push and arpl fldcw (bad) jecxz es xchg repnz subb (bad) sbb lcall repnz lret daa outsb in js cltd ret bound jne xchg int3 lret xchg mulb dec sbb js pusha pop xor sub sbb mov dec jmp stc jno nop out sub sub fisubrl (bad) push mov or clc into xchg lds mov ffreep repz jmp fs mov popa push (bad) cli ret mov jl or pop adcl push (bad) sub leave pop sbb jl lretw mov fisubr imul pop and rorl out or mov mov js mov push mov call clc mov pop into ss in movsl cmp sub daa xchg and and mov js (bad) mov into stos aaa jge xchg out scas sub xchg mov xor (bad) xor int3 adc add loope jne xor lahf add negb pop sti push xor dec cltd enter push insb cmpsl and je (bad) xchg outsb out nop iret xchg xchg pop sbb fsts mov fsubs jno or cmp enter mov pop ret in movsl fdiv bound pop pop ficom aas bound aam jb out push cld lret jle sbb mov mov push movsb clc or (bad) xor add mov inc dec das and fldt mov in in mov in add lret (bad) (bad) add dec xchg inc sub insl ljmp bound jl pop flds sbb add popf push dec std dec leave repnz dec adc add sbb add fwait rcl daa (bad) imul lock loope xor pushw and mov xchg or jns inc or rcrb push mov and adc jns data16 add (bad) mov imul xchg (bad) mov adc test or push mov dec int jp jg dec jne loop xor insb (bad) and cwtl rorl sub repz mov arpl or cmp or imul jne push or and lods mov jb movsb xchg jmp loop loop mov inc (bad) movsb add and inc push and mov notb sahf add repz jmp sub add jae add xor sub pop je or out and lea cmp cmpsl cli cmpb sbb xor or (bad) mov xchg adcb and cmpsl adc incl push push push add (bad) xor mov inc jl out pusha fmuls jg pusha orl inc mov mov outsb add pushf pushl or pop aad jl pop std sbb mov mov repnz and into inc push mov fstpt sub push sarl mov into lcall test test push fisubrl sbb push push daa loope push ret jne jne movsb ja icebp push std xchg pushl out aad stos fwait punpckhwd sbb test fs cmpb arpl icebp mov ret pop mov imul push in popf nop mov mov cmp out xor or inc xchg pop xchg ja push jno dec aas mov pop push push xchg add pop jecxz loopne outsl jae lock jle test roll dec sar icebp scas sub arpl push push dec jnp cltd sub in xor outsl xor mov shrl push pop lahf jo mov xchg into std mov mov dec sarl in jne and bound ret or outsl and stc decb mov out or add (bad) jge jecxz addb dec push mov ja divl jp jo dec jnp dec jg addb out sub pop idivl les ja lcall mov (bad) jg xor pop xchg push xor mov sbb lock cmp mov jae and xor jne xor mov out xchg fldt lret add push cs scas and sub dec or subb aaa mov loop xchg mov daa xor sbb mov lds icebp idiv daa add fistp out lds dec lret inc jo es in or and and loop hlt (bad) and es (bad) nop notl push pop repnz rcll cmpsb cmc adc enter pop sbb sahf pop dec out sahf pusha xor aam inc add sub shll sub mov mov sarb fadds cs pop (bad) push push lret pop or (bad) xor push popf test dec aam daa inc jo inc xlat push mov ret stos jnp xor adc jmp lea lds xchg inc or fbld push xor lret cmc shr and cli les mov outsb xchg call sub add push lock or cwtl and mov push rclb cmp fadds (bad) cs xor cmp pop mov xor stos push pop mov jmp sbb dec inc je xchg xor and iret pop mov and je push iret das jecxz dec (bad) int and ret idiv imul scas sub mov mov insl popf xchg xor sub dec das mov into mov jg fwait jne stos mov test ret cmp (bad) lds clc cmpsb (bad) mov leave mov test mov mov ret divl stc sub or std cmp negb test movsl mov test loope imul mov int loope ret pop int3 or push or or addb mov xchg xor sbb popf fimull push jae cltd xchg ds decb es dec or cmp daa jle push sub sbb push dec dec jne push mov add lret aas sub push fisubl fbld pop mov daa and pop lea xlat add jmp mov (bad) cmc outsl sub jmp nop ss xchg roll movsl je dec jmp out outsl int cmp (bad) loope mov (bad) or or mov movsl (bad) test les cli mov sub jb lret test outsb out iret mov add push insb mov push sbb out or ljmp mov mov int3 test sahf push fucomip mov sbb dec cmpsb jo mov mov mov (bad) mov sub rcll test rcrl sub (bad) pop loop cmp add icebp testl push and pop leave test jns add repz sub gs push add push ljmp xor enter inc cmpsb push lea test cmp cmp jne mov cs rolb xor call add add or in ds xor xor jmp inc aad into xchg int3 dec sub add mov sub mov idivl cwtl (bad) pop sbb icebp and add cmp insb imull out lods adc pop inc aas loop push and mov pop mov sub or or xor lea push out sub jnp inc stc xor loope idiv sub inc movsl xchg test out shrb dec ss call jmp nop fistpl and dec lret es (bad) icebp xor js (bad) mov dec cltd pop add movsb out orl and imulb and or clc ds out loopne iret dec and movsl test dec lret mov ret sub aam lret out pop adc dec mov mull (bad) xor mov in or xchg repz xchg or mov outsb ds (bad) dec and je,pt push pop pop lds repz stos test adc rcrl repnz bound jno adc fiadd mov mov outsb les mov dec lret mov pop bound xor and lret cmc icebp insb sub xor adc mov mov mov in in cmp pop (bad) push pop jbe,pt scas pop mov out jp mov cmpsl (bad) or mov xor cmp (bad) out sti aas xchg pop adc (bad) mov add xchg adc sbb adc lcall or fdivl xlat stos (bad) shr sbb or pop inc cmp and push add and flds loope mul push jecxz or cltd mov sub out mov pushf adc sub xchg sub fsubs and xor cmpsb das iret in (bad) jmp mov call sub and test mov sub or mov jns test mov les stos adc dec out dec jecxz adc adc subb push ss int3 cltd mov pop add fwait add adc aam push pushf xchg popf adc mov mov push xor push out pop mov cli dec test sub push cmpsl jo dec sub inc push add leave (bad) push cmp aam pop dec jecxz (bad) xchg test mov notb xchg mov fimul mov movsb xlat mov shl xchg jle mov xor sbb inc daa push adc out dec clc shl add rcrb test pop jb outsb pop hlt pop cmp out mov js in sub dec inc or xchg (bad) pop (bad) sbb lret sub pop in repnz nop sbb and in dec or fidivl dec push and or xor adc iret pushf and ss (bad) mov (bad) lods mov and fadds push int3 mov dec adc and sub sub or es stc scas adc into js cmpsb out jb mov mov into sub mov jmp jno mov mov loope and adc mov dec (bad) stc std shrl gs bound in xchg xorb icebp sub (bad) in mov push aad movlps mov lea stos outsl sub pop pop or inc pop adc xchg mov inc push adc loop inc icebp push add xchg mov sbb pop mov jbe addr16 mov mov mov (bad) cltd lea and mov adc add dec (bad) mov cmp daa cli icebp xchg movsl hlt mov lcall test add and das jmp adc jecxz dec xor xchg int3 das add divl mov dec ret dec jp hlt out mov or xchg cmpsb cwtl imul inc bound fwait icebp icebp or xor xchg ret pop popa leave or adc adc dec call lds lahf lds repnz fs xchg mov jno add pusha mov mov or sub repz iret mov test fiadd addr16 sub ror xchg frstor leave pop ret ret pop (bad) fdiv mov pusha mov mov dec iret xor or sub xor subl mov dec (bad) aaa mov cmp and cmpb pop xchg into (bad) rolb xor call or call mov and mov inc jnp cmpsl stc dec inc testl pop ds mulb loope pusha xchg loop add into and scas fnstcw xchg call xchg leave bound adc sub xchg mov pop mov rcrl or sub jmp mov mov add xchg out gs jbe mov dec add mov jns (bad) xor push xor and imul mov lret jbe dec call jle inc mov and (bad) xlat arpl mov jnp xlat adc adc mov ret and fcompl or lret xchg scas insb push out pop and icebp or loopne and gs mov fadds push add ljmp sub dec inc push int3 jmp mov sbb popf push cmp (bad) into mov std push xor das or cmp add into subb test jo icebp pusha pushf in adc sub or or ficom mov (bad) dec jmp jmp cmp add out mov push xor (bad) jecxz add (bad) (bad) iret mov sbb mov popf test add jno lods out scas mov jge jecxz xor out leave enter sub inc adc add add sbb shrb notl xor fs add ljmp outsl xchg loop sub movsb mov in cmp sbb push and xchg pop dec pusha ss stos popa inc add lahf inc xlat or and mov adc add dec mov idiv mov jb push mov dec sub imul push push in clc icebp xor pop loop shrl shrl or cli mov push jmp push test pushf jg pop xor cs mov sbb mov add adc mov push pop push mov out adc add nop movsb mov xor xor or jns adc xor mov icebp mov lret inc jecxz or aam popa jmp pop repz xchg pushf mov mov fstpl fwait xchg stos sub and sub jmp insb and out adc aad add mov mov xchg jmp sbb or pop mov loop xlat mov push fnsave adc xchg repz sub or cltd xchg mov jnp fs xor jl push bound mov (bad) negl push shrb ds inc loop (bad) mov push ja in or xchg jg sub cld lods cmp aaa (bad) out leave pop and rorl push call pop mov fs sti outsl pop xchg adc xor sub jns sbb pusha rolb cmp mov arpl jge fldcw inc xor loop jl jmp int push insb movsb or mov or dec jae dec mov and les sbb sbbb sbb and add xor or push xor sbb js iret lret std pop ffree cmp (bad) sbb sub xchg or xchg xchg stc idiv push jno popa add fdivrs clc xchg fcomip inc out xchg call addr16 cmp dec call sub fsts xor xchg push push add jbe mov mov cwtl push or dec or add stos aam in mov test repnz push xchg (bad) dec lock sbb push pushf scas rcr add sbb fcmovnbe loope daa lods adc pop mov jno push or mov roll xor dec repnz test stc and (bad) jo push negl fwait incb mov in push xor pop mov rcll push mov mov leave fisub dec enter sarb pop decl (bad) je (bad) out mov mov and push ret xchg aaa adc sub mov outsl fdivl ret and loop subb bswap pop mov push add aaa rolb out jb sub addr16 bound (bad) insb (bad) fwait dec mov shrl sub pop xchg into leave fsubl pop add dec jecxz xchg mov adc pusha xchg cmp jle and mov popf adc mov pusha adc xor stc jle or mov push leave lock das fldt test mov or pop cld xorb out xchg (bad) in clc mov fsubrl mov mov xchg test mov ljmp mov cmpb lds cmp lret xor inc lret stos mov cwtl iret loope sub imul (bad) jmp sbb adc leave inc jnp mov and lahf fsubrs popf in cld mov (bad) fdiv popw add ljmp in lods jecxz test add frstor dec scas pop cltd dec out mov fnsave in xlat lret cmp cmp and inc mov lds fisubr sbb or cli dec stc jg push movsl pop fbld mov (bad) push test and xchg xchg loopne into mov sub in cmc cld clc jmp test lea mov lods jle push aam test jmp adc and mov pop ret mov pop stc pop sub bound pop jg dec push pop or cltd add push mov popf test das or or push divb rdtsc cli inc pushf xlat lret pop (bad) lahf jns dec mov dec addr16 jmp cwtl push add data16 jmp cmpl dec pop gs into xchg call mov (bad) daa mov fdivl fprem sub lahf push call pop and dec jae divl loope add mov sbb cmc inc loopne shlb xchg shrb sbb fsub cmp das or repz sbb loopne (bad) mov imul add decb mov outsl bound repnz push xchg (bad) mov inc mov xor mov call gs sub dec stc std mov mov cmp inc xor mov mov jno cmp pop aad xchg inc fbstp jmp loop or xchg inc jno call or sbb out sub push ror shrl sarl cmp rcrb inc push ret xor mov sub outsb mov (bad) mov push push mov xchg je test (bad) push popf lcall add shll mov and dec (bad) adc inc mov pusha data16 jnp out mov les adc int sub int inc inc xor les int3 and push sti sub add sub pushl popf cwtl setl scas ret outsl out les push lcall pop dec or fnsave sub add hlt push push push xor loope leave and aad jmp ret jge scas jmp scas dec mov xor pushw push pop or mov add pop test jmp repz popf sub lret pop jnp or and loop (bad) and cs cmpsl push loop jno or xchg sub addb sub add ss mov push mov (bad) loop xchg scas arpl out push je cmp ret mov mov leave sub dec call in int mov (bad) pop push mov and ret dec cltd inc jae dec dec pop or xor pop ss sbb xchg pop adc adc sbb add enter pushf loopne sub sub pop and call rorl push mov mov inc inc smsw mov push stc (bad) (bad) ss pop cmp xor mov imul loop pop ret jo (bad) mov add fadds sub and mov or lds jge adc out aad adcb mov push inc jb rorl js (bad) add and clc popf out dec xor popa cwtl (bad) jle cltd dec jl shlb loope aaa adc jecxz adc fbld lock outsb jbe adc stos mov and hlt fdecstp add xor mov ljmp aas mov dec mov fxch mov outsl out bound lock outsb or fcmovnu pusha cmpsb std or icebp std xor mov mov mov (bad) mul (bad) dec (bad) lret xchg push (bad) and repz sub and out mov decb or adc enter xor and out add xor divl and dec mov sub movsb xorl xor inc push std xchg ret xchg push (bad) negl pop out sub (bad) test dec out dec (bad) cltd in mov xor mov int3 mov sbb dec sub test lret adc (bad) subl xor push xchg sub das lods adc adc (bad) dec adc adc divl cmpsb (bad) jb,pt or out pop divl mov xchg cli popf nop xchg mov leave push leave lahf pushf clc shlb (bad) jp mov pushf mov and mov xchg fsubs xor imul sub xchg iret loop std or dec jmp dec mov call fucomi jmp xchg in mov pop mov fldcw fnstcw add mov cmp lock xchg out or add out jg mov das imul or lret lret (bad) and fbstp sbb jecxz and mov cmpsl dec lea inc adc sub mov pop and and fdivrp pop jne fstpt pop jmp push iret test into sub dec ret jmp sub (bad) dec lret loope mov and jns movsl inc aad push lret sub scas jmp mov pop leave jle (bad) jae dec mov outsl jne test cltd sarb in mul loope (bad) jp add sarb xor in cmpsl pop sub lret dec mov add std inc nop adc pop mov movsb mov popa dec out or clc stc lret cmpsl ret mov arpl inc pop sbb aam dec and movsl jmp xchg bound cs xlat das cmp out rorb movsl sub jmp jmp pop imulb xchg into xchg (bad) sub pop dec or cld roll or jb pop call lret notb popf xor adc sbbb imul arpl pop mov lret push or or mov cmp sti jne inc and (bad) negb xchg test dec into lods add mov dec jp fdivrp pop cmpsb test pop jmp and xor mov adc add cmpsb scas das xor and lret add (bad) sbb mov in adc or loopne (bad) and outsb sub movsb dec in and xchg (bad) xor icebp shrl fs mov or loop pop or pop imul jb mov mov test and add add sub cmp sbb mov icebp test js add test stos (bad) addr16 and ror stos popf (bad) das lds push jb je lock jne sub in push repnz cmp cli (bad) into sbb xor push and cmp lahf movsl icebp rorl jmp icebp or hlt hlt (bad) mov mov dec push and inc sub dec sub and lods sub leave sub fcoml xor or xchg jg int lret mov and push mov mov pop push sub add add jbe cmp cmp out sub mov in sub adc xchg movsb adc or mov dec xchg lcall pop cwtl mov ret mov push lret rorl cli pop pop into xor fisttp pop div loope add fcomps add (bad) repnz and mulw dec andb xor sub or inc in or roll push push out dec sti mov and das rol add pop sbb addb mov and add adc rorl mov push xor cmp testb enter xor add xor stos leave fcoml adc lods jae cmp sbb and jle add pop mov out lret xor and test loope out mov xchg or inc mov aam imul fstl divb test bound fcomp out jecxz cmpsl stc jl jbe jbe out add or nop iret (bad) xor das mov xchg cwtl xchg scas daa and shrb jae adc enter jae and xor movsl lods imul dec loop dec dec and les stc dec push xor scas insl cmpl jp lret stc lock pop sti push lods xchg pop mov jbe dec pop sub mov rorb in dec push jmp iret and or xor pop xchg out push adc xchg jbe jge (bad) mov dec hlt testl aas and iret and or ret sub xchg aam add rol mov imul fild mov sub lds xchg xchg add stos or pop les sub and (bad) or aam pop add adc cmp and fld popf jmp dec gs sub test fnstcw mov enter icebp fsubrs popf (bad) iret mov sub dec or add mov dec xor jle push ljmp mov or sub idivl lds xchg adc or jbe xchg data16 xor je imul jp sub mov fadds icebp leave fistpll mov daa rorb cltd push or (bad) iret inc aam dec and scas cmp mov or int fidivl in and inc mov or lcall daa dec mov movzbl pushf arpl mov (bad) bound push xlat mov decl imul lock sub inc movsl lods or mov in and or xlat xor jle jmp cmc ljmp xchg (bad) xor call sub stc ret aas add movsl push outsb xchg jl mov imul fldcw sbb adc or aas mov sub jns scas jo mov pop ljmp movsl call push and stos and xor add add leave rolb test popf xor mov (bad) dec notl or iret xor mov repz ret std movsb mov xor out lret (bad) add out cmp std jmp add in push mov mov andl jle daa mov pop xor add cmp pushf (bad) movsl mov jbe mov mov jae lods (bad) outsl repz adc dec pop mov mov or dec stc xor xchg inc sub dec push popf jp sub add insl imull mov mov mov push fsubr push cwtl and fidivl lahf in push pop loop (bad) in rclb adc and cmc sub movsb jmp push outsb and shrb push xor add lret jno mov mov and test loope xor adc leave mov (bad) mov xchg and push jmp call push das negl sbb jae lcall xchg mov mov jecxz push mov mov jmp fcomps xor pop int3 lret inc dec in sbb jle inc sub or test mov movsl or stc mov aaa testl aaa xchg xchg (bad) scas push stc sub inc repnz add mov and or sub mov movsl inc inc push push cltd xor xor or in xchg aas cmp dec mov rorb ret nop enter add nop std iret test outsb and stc mov je cli mov xor dec sub mov xchg lods ret imul pop repz or iret adc int3 push int sub jg gs xchg cli mov sub mov mov call pop mov mov ss imulb or (bad) ja sub mov (bad) xor scas mov stc (bad) dec inc sbb loop rorl out (bad) xor dec lret inc or dec lock push enter or xor xchg mov fsubl push push xchg int cmp vaddss cmp jno fildl test (bad) lock fistpl cs js (bad) mov iret insl mov or adc and dec or add mov int scas aam jbe scas mov pusha dec icebp mov xchg scas pop repz push and mov or mov push mov push adc test xor cmpl call inc leave jl loop sarb lret xor or shll xor sub sbb jno add push xchg loope cmp out add jp in jnp ret dec fs mov rol (bad) jae adc add pop pop sub mov or aam leave xlat sbb sub xlat out dec mov adc (bad) cmp mov movsb in jbe push imul lds lods mov dec data16 mov dec fs inc pop mov dec ficompl sarl (bad) and cwtl cmp pop jge div dec and inc lret push push stc in cltd mov sbb mov shll xchg or xchg dec jno lahf sbb loop icebp inc dec pop mov out and xor popa mov dec call add aad xor insl adc fbld out addr16 xor mov push (bad) out sub dec clc sbb cmp rcr mov fmull dec and movsb push xchg cmpsb sub cmp ss fnstenv jp pop notl fild push sub pop xor push push mov clc dec dec enter (bad) lock (bad) push mov mov test mov fidiv xor fwait or out pushf sub loope aad sub rcrl jge mov movsl jg xchg aas ret sub daa lcall jmp push inc insb push push mov dec mov jb fisubrl mov adc jp enter data16 or cmp lahf or pop adc das pop (bad) xor in iret (bad) scas inc ret stos sub sub jae adc pop sub popa sub std mov adc xchg loope xor aas sub daa into and mov mov adc lcall add xchg fnstenv insb ret xorb cwtl xchg lods fisttp add xor jge pop (bad) and mov and stc push loopne sbb (bad) daa xor cmp jbe les aaa pop add nop mov flds daa fs daa cmp push cmp movsl inc adc lret or out jg adc mov sbb or mov lock inc xor faddl push (bad) sub icebp xchg das xor out clc es cmp mov xor xor or xor xor test sarb pushf cwtl xchg fisubr adc es das js jnp pop imul fisttpll xor notb jp adc inc outsb mov sbb ss sub ficoml push add enter xchg dec mov lret std mov ret adc or mov ljmp dec cltd fstl cmp popf and out inc inc add and xor aad in cs leave out push mov mov push push cmp ret sbb loope add cmp dec add cs xchg aaa cmp mov mov call push sub out (bad) loopne push inc lret hlt xor fnop sub xor xchg cs pop xchg icebp cltd sbb hlt and pop fwait leave cltd and sub add mov cmc sub pop sub in mov inc jne mov lahf add sub xor jl ret aam push aam es push pop sbbb xor mov repnz pop pop sbb lock and js xor clc sub mov sub jecxz div push jnp xchg or adc fstpt mov sub dec rcrl xchg xor sub loopne or add xor mov popf add mov sub imul dec adc call mov mov mov jl (bad) mov dec popf push sub sar pop push loopne or pop movsb cmp (bad) shr mov clc hlt out data16 xchg mov pop popf xor inc movsb repnz (bad) xchg je pusha pop jne fnstsw mov inc and divb es leave addr16 xlat and enter inc and loopne notl fadd lret xchg testb adc lret movsb rcl pop lods jo mov or orps mov andl imull (bad) sbb cmp loop xchg mov das idivb mov xchg xchg inc lods push mov out mov rcrl pop adc scas popa das sti add outsl xor push repnz mov out fs add dec mov xchg stos add jb bound add xlat mov xchg cmp dec mov shr imul jl gs lret cmpsl jns enter cmp mov mov call in cmp push inc loope adc or test pop loope jnp lds push pusha clc xor repz cli loop mov jl jge xchg jbe sub notb std test stos sub mov adc xor repz in sub xchg sar arpl out xchg repz pop or xchg insb xor ret in stos dec and daa stc push insl adc loop xchg scas sub add mov jno xchg loope sub mov xor scas movsb out and out imul or lods cld jecxz in movsl xchg mov pop sub or leave cwtl and push lods xchg xchg je imul cli leave imull jl pop out sbb adc mov dec add test ret push loopne lds mov fldenv sub and mov sub adc or out xor (bad) push xor sub repnz addr16 loopne repz xchg in (bad) xchg test sub icebp inc cmpsl fldlg2 addl aas pushf mov jmp mov or sub or inc mov inc loope xor dec or test push sub loopne pop insb dec mov sub xor ss fstpl mov (bad) sub test mov lret cwtl pop decb jl repnz and mov icebp lret adc pop mov clc push (bad) lcall sbb lret das imul (bad) xor out jns repz xor ror test pop mov add fucomip stos dec cmp lea xor xor cs das lock jecxz rcrl mov sbb xchg lock stos push inc or xor (bad) mov bound test shr push leave mov nop or cli fwait popa sub sub sub cmp adc add xor (bad) shrb popa xor and adc mov scas sub loope sub daa or mov loopne or rorl add test mov cmpsb adc nop mov mov pop icebp add mov inc fdivrs cld push shll sub mov jle and out sbb sti and out out cmp xchg jecxz scas lret mov into inc popf sbb leave push dec and fcomp xor pop repz nop ffree pop pop aam add out inc pop xabort mov dec sub xor and mov add cmp cmp add dec inc mov mov or sub sub icebp mov sub test sub js pop ret (bad) xchg iret into or jl pop sarl inc mov call pop xor clc sub push mov sub xor dec cwtl jp fildll or out or (bad) mov or mov cwtl aad fidivr push subb mul adc sub mov in leave popa lea push xchg loop adc fiadd adc test pushf clc iret sbb jae push push sub daa adc xchg push (bad) in push (bad) stos pop loop into imul jle inc inc add jp ljmp xchg xchg xchg out jbe int3 in jp fstpt xlat outsb pop sub push ss fildll aad pop imul imulb dec imul push cltd jns jg sbb and xor shlb es cmp leave or sub push cltd push into cmpsl xor mov jb jl dec out sbb enter ret xor and mov cld notb mov ret stc in mov pop cltd icebp dec pushf or mov mov stc pop js cmp shll jnp adc cmp fidivl leave jo out icebp lds mov sub mov je iret mov jmp pop shrl scas push and and gs add sub ljmp adc adc jmp mov pop js,pt xor inc pop pop out adc into (bad) bound cld scas fs stos fmul add lcall loop pop (bad) cmp popf xor ret inc pushf das push ljmp cs pop or lods xchg lahf sub mov mov cs cli jle sbb dec push jmp je,pt (bad) repz cmc cmp in pusha test (bad) and xor mov loop xor into lret jp pushf mov and jg xor or popf sti and les divl dec stc push sahf adc paddw adc mov mov shr add (bad) mov ljmp ret movsl cld dec in cwtl ds pusha ja lahf or xlat repz mov jmp cltd push jno adc adc (bad) jns xchg sub imul js cs inc loop outsb icebp xchg push daa fcoms cmpl and loop hlt xchg pop and lods sub clc stos add add movsb xor sbb sbb idivl aaa add xor mov mov xchg or mov sub insb sbb ret (bad) or add bound repnz xor dec imul (bad) loopne je or mov push ret push mov push loop push jns dec aam mov sub sub add inc push into push (bad) inc or push (bad) out dec pop push mov out fiadd adc sub icebp push iret xchg scas sub and mov push cld pop jg inc fsubl or or xchg mov and or data16 jb sub mov mov cmp xchg fsubr iret xchg out das or mov jne je scas sub icebp jmp shl push dec cmp js mov mov sub mov pop (bad) add sub push out popf xchg test sub push xchg jb inc jl imul push out push or aam ss push push loope cs mov jle pop fidivrl adc out pop std out and or jmp out inc lods mov mov adc push (bad) xor pop icebp xor xor jl sub repz fidiv pop add icebp inc and (bad) mov mov test and mov fdivrs mov pop xor push imul mov orb leave sub and cmpb push enter sbb push gs sti mov jmp sub daa hlt fucomip lret cmp fildl into addr16 or fnstcw inc jae xchg sub cmp fs mov sahf dec loope pop out jl push fldt adc inc pop push cmp mov gs sub sub imul test dec in std fist rolb into rorb mov cli adc adc add push in ljmp jl pop add in (bad) sub xlat jecxz pop or dec cmc out pop sub xor cli repz popf sbb imul xchg jno sub lods mov lret pop pop gs std mov add jb pop fucomip in add lds and lret push pop mov pop out dec loop or add (bad) jo jo xchg xchg bound (bad) mov jbe cmp test or imul scas mov pop jb mov (bad) or into fldcw jbe and cmpsl pushf dec mov xchg xor daa ljmp jp mov inc rorb leave pop push adc lret insb or xor jne scas dec (bad) stos xor js das loop fdivl arpl dec adc ret jno mov adc notb push int3 mov jae pop mov mov in xor mov test stc fcoms (bad) xchg sti loope push in fist sbb push pushf cmp repz cmp in sti mov sbb mov mov test rorl add sub leave out int daa negb sub mov dec repz xor xor mov dec dec mulb and cmp orl pop shr dec mov cmpsb jg xor test lret push mov fdivrl fistpl (bad) out or cmp in add mov mov fsubr add lea shr movsl daa mov pop (bad) sub jmp mov int3 mov push add out pop daa mov (bad) packssdw popf cmpsb sub mov imul in mov push jae jecxz push xlat into scas bound mov call push in and fmul pop pop stos push daa fidivr xor mov sbb xchg adc jecxz jg cmc mov jmp add lds xchg ret mov push stos fld jp aad aad in and dec stc mov pop pop test or xor jl jmp in adc ljmp (bad) and xor jge cmp jp jg mov mov loop xor push iret add sbb cmp lcall (bad) ds xor pop arpl push xor movsl les push mov lds and mov cmc ljmp into and bound lcall out lcall xor rolb sub outsb ret push repz mov popf and dec inc and (bad) dec adc mov push sub dec fs pop mov fildll mov sub lods xor dec addr16 lret fs dec pop out add pop jecxz jmp sub (bad) xchg dec lcall std add add ret fstpl mov mov push sub add ret pop or inc lock push (bad) dec mull pop mov cmp (bad) mov mulb (bad) ja aad push xchg cmp sub mov cmp xor and sub aam jg outsb std sahf jbe mov rep sahf add (bad) mull pop inc aam sbb popf rcll adc idivb pop stos ret jne push mov fiadd lret ja test pushf scas adc (bad) div lds adc dec adc xchg mov add mov (bad) lea or repnz cld rcrb pop lret push repz mov push push push xor mov movsl push mov sbb dec loop add xlat inc and lock ljmp icebp and shrb into jge sbb push jmp add decl mov inc (bad) xchg iret pop push pop sub sub xor add mov aad xor insl and push leave xchg ljmp repnz sub lods loop mov das lret pop xor sbb and cld jne (bad) adc mov popa cmp (bad) xor pop fcoml mov mov out das leave repz neg xchg sub inc push xchg or push inc pop daa or add fistpll mov not sbb push das daa into jb sub seto pop and or stc push or or sub fucomi aas mov xchg fcompl mov jl mov mov and push iret idiv test add mov sub outsl mov dec xchg pop xchg mov leave push and movsb ljmp cs gs inc or mov dec icebp mov pop out popa xchg movsl roll call stc lods or jns push test cld xchg out pop mov pop push mov xchg mov test mov push cltd cwtl or (bad) xchg test sub mov aas sub xor and jno and (bad) mov pushf in add and and pop sbb out cmpsb aaa add jmp mov cld push inc inc dec lds xchg sub dec in and inc push rcr (bad) out jbe push push shlb insl cmpsl sbb pop mov ja fnstcw sub push lods icebp mov push pop enterw test and mov je cli ret imul leave mov mov int fs icebp mov and mov into pop nop mov mov sub fcoms and pop and data16 xor add cwtl push xchg jno test stos ja xor xchg jno adc push cli addr16 imul pop and add cmpb push cmp sub xor je lahf (bad) cli or sub mov out mov add testb dec lret outsb jmp (bad) jmp xchg push add je dec xor mov add fs push std mov jl gs jge pop adcl jg cmp cmp sbb (bad) std dec mov mov out dec xlat (bad) mov movlps (bad) mov sbb sahf bound inc mov xor (bad) dec and pop inc mov scas mov adc and add mov inc rcl loope pop and (bad) cmp and jnp pop loop outsl repnz ljmp xlat lcall cmp rol fsubrs lret fsubl pop repnz dec xchg test cmc movsb int3 dec or xchg or stos (bad) sub dec push xchg pop cltd in sub dec stc xchg mov add daa out imulb lds pusha adc data16 loop or dec (bad) stc shll mov pop bound stc sti adc lods cwtl mov cwtl cli loope mov xor mov ljmp mov popf jle push repz lret jmp dec test cmp adc icebp stos fwait sbb mov sub or cli sub lret cmp inc sub pop sub (bad) jmp push adc cwtl int mov int3 scas dec (bad) std sbb push imul lret jg pop mov mov pop repz mov pop jns xchg (bad) mov js and lret fsubrp push xor pop push lret mov ljmp movsl in ds xor mov mov lret jo cmc mov mov mov push int3 sub in dec jge xchg pop cmc out test xor push and outsl gs test mov (bad) pop xor push inc mov pusha hlt fcomps das add jae sbb pushf dec mov xchg enter jg push jne push jnp addr16 add and test (bad) mov hlt add popf (bad) xor and imul sub mov loop ja pop sub sbb test or jl jns dec cmp sbb mov in sub sbb in dec add dec or imul shrb iret jbe adc xchg in add rclb jne mov lods dec out (bad) xor add pushf sbb outsb ficom jmp testb xor sub push pop fwait imul push aam out pop push and int3 add xchg ret stc push leave xlat insb inc xchg movsl vpmovb2m inc jne adc pop cmp lods adc adcb ljmp mov (bad) lret or push pushl repz ljmp subl mov pop cmp jns jb adc fisub sub and popa outsb leave and push dec enter cli xor ret xor lret gs mov mov adc pop (bad) in push sub fmuls scas mov sub and pop (bad) das mov popf ret stos dec mov ds xchg imul fmull dec add sub adc enter (bad) sub jo popf xchg lret sahf ss cli mov adc inc or sahf popa inc stos cmp out pop adc out pop adc push sahf adc mov cmp mov lahf fbld imul xchg daa cwtl test jmp test lret jne jecxz jmp mov bound (bad) xchg inc bound xor insb sbb pop lret jmp jp xlat mov adc jno push fdivrs adc jmp hlt jnp icebp and sub push fild sarb xor jmp mov jns (bad) lods adc lea sub cmpsl dec cmp mov mov gs mov jno insb clc mov lods sbb into mov jns lods lock pop pop leave es subl ficomp mov negb mov pop iret cmp mov dec fucom sub xlat fs in scas sbb rcll icebp mov push add popf push fist mov out (bad) arpl push cmp sahf push push (bad) xor movb push dec repnz int3 aas notl aas sbbb jmp lahf repz or inc je fstps adc or divl mov leave mov mov mov sub test push movsl mov and sub cmpsl mov shrl in sub mov (bad) and push sbb js xlat test imul movsb (bad) divl xchg adc lahf or push out dec pop or mov pop mov jae xchg and imul andps out in and pop cmp stc stos fcmovbe dec mov fidiv out mov cmp and (bad) out sub repz subb into test in lahf inc mov cmc lret lds sti push xor add or stos loop mov sub icebp xor sahf push push mov imul jmp inc (bad) mov jle add ds into and push sub xor fmul (bad) out fimull dec dec fdiv loopne mov xchg mov adc pop ret mov dec xor clc das negl imul lods call sbb sub sub lock pop loope insl fmul add inc dec in das cmp pop test xor or mov jmp add rcrb jp jns pusha sub dec lea ret inc ret lods mov loope push das mov insb xchg ret cmp cld aas xchg xor iret push leave (bad) pop in outsl and into push and fucom fldl sahf data16 pop test (bad) scas sub xchg sar pop mov and fstpl (bad) jns out test repnz mov sub sti scas addr16 jno mov sub pop out or popf rclb pushf mov adc les scas out xchg stos push nop lret mov stos cmp pop sub jmp dec adc mov add out and sbb push icebp (bad) add mov mov gs pop inc mov cmp inc add pop stos push andl sbb add and (bad) pop mov loope lret dec pop out and mov add decl loop add test jecxz pop cmp fistpll add leave mov call push jp sbb pop clc shrl dec pushf sub repnz mov jmp mov push lret outsl rorl mov popf sti xchg mov stos mov pop loopne repnz pop je fs sbb xchg ss fnstcw lcall mov push pushf push repnz sub pop cmpsl cmpsl cmp mov aaa mov orb mov or mov clc insb add dec mov sub (bad) and xchg iret or cwtl sbb (bad) mov jbe loop cli cli and and pop test (bad) mov add jge lea clc xor sarl scas dec mov sub mov add mov retw nop dec or lock sbb jg mov jnp dec add inc pop pop das out push push imul mov fiaddl jle icebp subb loop jnp lea rol xor sub test xor out out dec lods xchg test shr or pushf pop and popf mov xchg rorb xor cltd inc sub rcr sub popf cwtl stos xor das and hlt mov ljmp ficoml pop lock mov mov cmp xchg mov loopne xor or je leave fisttp jb dec outsb gs sahf xchg enter sahf jbe xchg (bad) mov add sbb ja ja (bad) in cli jecxz and push (bad) inc imul pop addb sti in jmp jb mov xor mov cld out decb inc jmp (bad) push jmp out dec cli fs notl lret outsb cmp adc mov mov and lods jmp imul bound lahf mov push jmp xchg adc fcoms in mov pop mov lods iret dec subb jae add (bad) scas sub mov sub cmp pop xor pop pop jg mov aas add pop aad popa addl sbb add fld1 add pop stos and fnstsw xchg adc xchg push mov mov mov fstpl mov mov add out pop shl popf sbb movnti pop dec repz add push pop push mov mov pop pusha cmp sbb cwtl adc sub popf sbbb inc xor mov fcmovbe pop shlb add or mov les imul add push lods dec cmpsl repz divl fimul add lea add das pop push pop xor test loop in adc (bad) mov out adc sbb adc mov std jle push ljmp in inc ret bound mov xchg insb inc push pop sarb pop sbb inc or fldt lahf ret pop push push xchg mov pop sub adc ficompl pop add xchg jl push mov push test xchg push pop fstl outsb sub dec cld insb sub inc cld ficompl sub std xchg (bad) std push or mov jae add outsl pop xor adc mov adc fsubr (bad) and loope adc out aam jmp bound sub icebp orb dec mov pop adc cwtl xor push cs jmp add fldcw xor out das loop xchg dec mov test mov fs adc (bad) pop or fnstenv or add or sub or fldcw ja cmp cli (bad) pop pop sbb xor inc xor sub cltd xchg pop mov stc jns enter or loope sub movsb movsl ljmp test mov test mov les xchg test xchg cmc mov pop cmp mov in daa not outsb jns and pop imul stc push (bad) (bad) cmp pop leave inc sbb test sti fldcw in jmp test add mov icebp jno inc dec or xor cltd mov gs push pop mov sbb jne cmpsb std pop jmp sarb pop imul add pop or aas inc popf adc daa sub dec mov and stos push loop,pt test dec stos sub and stos xchg insl (bad) lock mov rcrl repz xchg cs in test ja mov dec push in add cmp sub mov cmp orb movsl push push push add add (bad) iret loope xor mov int3 sti imull add lret mov and ja loop mov inc pushf sbb add ss jo add and mov lods (bad) loop adc mull xor mov shrl add mov pop mov push sub sti lds cmp dec sti sub jnp dec lret jecxz daa fisubr dec inc and and jb fnsave and jno and mov dec repz ljmp xchg fnstcw mov lods cwtl push add (bad) and add movsl ret push add sub sar maxps mov int3 js mov jno inc sub pop sbbl lahf or lds push sahf cmpsl rcr xchg enter sbb stos fmuls cmpsb push pop test mul loope or pop mov add adc ret pop negl mov xchg jns inc sti add repz jle mov sub into sub push iret inc loope in shl nop cld or xchg cmp cmpsb js or scas jb shrl xor inc inc or pop out lret aad cmp sar imul flds fnstcw stc add or sub daa mov out insb aas xor daa xlat flds dec (bad) dec push loopne sbb mov call fcomi lods push xchg jl (bad) popf push das cld pop mov jmp inc mov dec subl insb scas and sub not xor imulb mov mov xchg call sub dec inc loop sarb data16 xor popa lret out push pop in test rcl mov repnz (bad) into and out mov js or jecxz (bad) out sub xor and dec ss xchg (bad) popf rorl pushf jle fs mov fldenv int mov idivb dec jmp add rorl loop push push daa and inc out mov pop adc dec rorl mov fldt xor bound repz pop stos int push cld and out in ficomp sub xchg es jb mov jmp adc mov xchg push cs pop int3 xchg ret inc add icebp xor iret adc sarb icebp (bad) imul sub cmp pop push mov pushf add sub mov dec sbb push dec iret adc push das sarl out f2xm1 sbb test sbb or clc mov fdivrs xchg cmp pop inc movsl idivb iret cmp pop insb shl (bad) and jno and jp loopne or jno fsubrs notb inc mov jmp mov outsb push dec enter lahf pop mov fldenv pop hlt lahf (bad) add add xor pushf push popf pop cmp xor imul mov inc xorb mov jae mov fucomp out loop decl xchg mov in xchg mov pop ret mov push lea sub (bad) inc and add jmp (bad) and add shll mov test inc mov mov test cli scas (bad) ss insb jno lahf repz pop mov sub mov mov imul jne arpl and cmpsb in push push dec push dec loopne ret dec outsb mov add cmpsl mov jne cmp das movsl xchg inc test repz sub push into xchg or add pop stc and les and icebp loope aas push cwtl gs cmp pop imul sbb xor inc or lret push mov push repz movsl ret int3 dec cwtl and mov jmp xor fwait ss imull sbb shlb in imul xor data16 dec lea jp and into inc pop mov repz lret scas add xchg mov cld rclb lret and stos sub rcll and daa mov jbe jmp adc and jne inc push icebp inc mov aad mov stc addr16 cmp or cmp js aaa in out shrl insb jle sti mov push adc mov sarl outsl cltd xor xchg icebp fiadd push ja fcmovb insb inc sub fnop sub inc sbb pop fcmovu cs mov (bad) mov scas sub pop pop sub push addr16 xor insl cmpsl aad sub sub ds push dec (bad) or ret inc pop xor clc mov dec (bad) mov dec data16 pop das and sbb push inc iret push out outsl sarl femms adc popf adc xchg push outsb mov or push out lods or inc sub push xchg xchg xchg lahf jae sub pushf mov dec push cmp pop mov test add push inc mov cli popa pop shll fldenv jmp mov cs jae sub sahf sub mov push testl sub fadds rorl popf in or xor fimull call mov mov leave inc enter pop xor loope outsb cmp das repz in gs dec test push imul dec bound into xchg pop dec dec push and notb fnsave and push and mov in adc clc mov mov push loopne push cmpsb ficom add clc repnz dec pop aas dec mov dec jmp xchg pop mov jge xchg adc pushf repnz lods ds enter or std (bad) xchg mov sub cmp cmp dec in xchg test inc mov cmp inc and dec stc int3 cmp daa idivl cmp push or ud1 gs jg test xchg ret and inc dec pusha lods out push icebp fisub fcomp ret inc adc mov out fs and out or pop sbb add cld xchg ret and pop repnz js add mov (bad) cmp ret divl fstps jl xchg dec sbb cmp pop jecxz out inc cmp (bad) cmp lods adc idiv fsqrt and lret mov and pop shrl enter pop sub dec sub bound dec xchg daa repz or (bad) mov fsubrl jbe clc jg or sbb jbe dec xchg lret pushf cmpsl dec neg pop (bad) dec shrl inc pop leave mov and cmp add cmp sahf xor or sub rcr mov je fcoml sti cld dec pop lret mov cli sub shrl jno mov cmp repz add add mov add (bad) mov push adc mov jne adc sub es sub ljmp dec sbb cmp repnz pop fld loope cs mov mov cld into and leave push mov into daa adc xor mov mov les lds fxch xchg jg incb pushf or inc pop add es xchg (bad) repnz in mov inc mull xchg add xchg fisubr ret dec xchg cmpsb decb pop icebp arpl sub xor and leave push nop jp test push mov mov adc xchg sbb js loopne into and je scas fsubrs add iret cltd inc lret bound jns inc sub xor mov and inc stc test popf fisub out pop (bad) mov mov js adc lret (bad) sub (bad) xor sub mov fcompl loope sbbb (bad) out mov movsl mov cs iret sub lahf adc daa sub jno insl xor in xor les lea adc add sub pop cmp pushf insb mov add mov push aad js or jae lods xor pop inc rorl daa pop or inc repnz xchg dec push jo adc lock shlb aad fdivs mov add pop mov mov or divb lods fsubs je in dec fimull mov pop ficom cmpb call imul dec pop loop xchg ret jle insl inc ss hlt jnp inc sub sub push jbe mov xchg test jns imul gs inc dec dec jmp and mov xor test out mov pop mov pop rcll sti mov pop mov or add xor mov sbb movsl push or mov in aas stc (bad) movsb test mov push and mov pop lea push rcr add or push sti sub les ret sub xor pop ret mov notl stos mov (bad) xor push xor inc jmp sbb push pop clc mov rep aam mov cmpsl push cmpsl xchg shrl xor pop in aaa mov movsl aas repz ret ja mov mov push mov jle sarb mov aam inc sub xor mov pop aad mov inc divb or or push inc or sub scas mov pop lds les stos adc (bad) movsl jbe cmc or cmpsb pop sub cmpsb push imul xchg insl push or and std dec (bad) cli add jl xor lahf (bad) test jg repz adc cmp mov cmc int3 push add test push pop add das rcll pop ret scas out cmc mov cmp sub lds jl daa ret mov pop mov jne pop das push xor push idivl lret popf cmpsb inc pop pop out jl sbb xor les xor xor dec scas dec in imul and mov or mov (bad) sub fildll repnz (bad) cwtl cli mov mov out jl push (bad) cmp push negl xchg ret sub and jne call xchg xchg and in (bad) jmp pop mov mov jmp aam or xlat mov dec mov test (bad) outsb repz xchg xor adc mov and and cmc pop (bad) mov jle inc sar aaa loopne std sbb push xchg jmp add mov add xor fcomps (bad) lcall jne jmp iret imul sbb (bad) mov xchg clc inc enter and rcl test adc fadds mov dec test loop lds mov decb mov and xchg je fidivrl sbb cmovle add loope out sub movsl les clc mov js rorl iret cmpsb push adc mov ret lods sarb fcomip insb xchg pop lret fmul mov mov in jmp lds push and push add ljmp mov in or (bad) cmp xor sarb and ret jne aaa dec xchg fildl or mov mov xchg int3 test icebp pop add add lret dec pop stos gs dec push loop xor mov pop int3 mov adc clc adcb xor sbb inc push pop mov cmc push sahf shrb ljmp xor out lea dec lock push pop xor out sub pusha pushf sub sub das xor fldt jmp outsb sub add repz xor (bad) mov fbld ror pop popa loopne mov out push es ds std mov mov das repnz cmc adc adc ja push jb cmp and pop cmpl push mulb bound mov sub push xchg adc add mov mov out negl sbb push movsl dec daa fucomp jnp popa loop in cmpsb mov (bad) xor outsl xor sti mov ljmp xor xor xchg ror xor or xchg mull stos addr16 shrl pop std dec lahf adc mov xlat xor mov mov fsubrl mov sti faddl shrl push popf mov add daa adcb cmp pop test ret lock push js xchg clc push daa stc sub add mov gs pop mov and nop pop ljmp ja pop daa nop (bad) sub cwtl sarb jmp xor das add idivb orl cmpsb hlt dec les dec or and clc leave mov outsl and dec aad jb xor scas sub adc jbe gs mov add jno repnz roll inc mov (bad) je push fsubl stc rcl push cmp dec (bad) cmp pop sbb pop clc int3 mov inc push cmp mov or negl shl dec idiv sub idivb (bad) fwait push pop movsl fs xchg pop cmp cmpsb je mull xchg loop out adc or jle call (bad) test xor pop out aad cmp add mov adc dec push shrl adc sbb mov inc ret mov add pop mov cwtl call mov inc mov adc jmp insb xchg clc mov jne xchg and pushf sub sahf movsl in adc stc add fiaddl mov pop mov and sub lcall xchg push add (bad) xor rcr cli and les push mov cmp (bad) xchg les repz imul in popf (bad) or (bad) xor or test inc push xor push mov std jbe out sbb clc inc idivl xchg mov dec xor das sub xor movsb pop and jp and sub sub adc add add mov cmpsl ret idivl push xchg or sarb jge add xor mov xor es and movsb in test xlat xor inc test out pop test repnz inc and dec or jbe push push cmp adc sti (bad) push insl enter pop mov xor xor and outsb dec xchg call or ficom iret sti xor mov jne mov or int3 jge sbb push xchg icebp sti out jo dec xor xchg in sub or jns sub sub sbb stos mov add and xor mov pop jmp cld push cmpsb fs adc sbb fildll mov stos mov xchg cwtl xor or cli mov push stc xchg sar enter fist int3 aas cmpsb mov xchg rcrb xor xchg ret push cmp cmp movsl ds addr16 jle and lret pop adc fildll gs cmpsl shll jb jmp pop test ret push add aam call data16 mov push xor jle in and out dec mov gs sbb sti sub lods jmp xchg xchg add ret xor mov add ja fucomip insb push xlat xor scas cmpsb in push repnz xor cmp out repnz lcall or cmp aad (bad) mov dec (bad) or pop dec in insb dec mov xchg lock and push add sbb icebp pop pushf test cmp test sbb mov decb iret call imul iret pop pop sti xor push mov lret jg lds dec push pop and adc out sub imul fbld push shr fstl push dec push clc or loop notb mov cwtl movsl mov std push mov lock jecxz stos pop (bad) jl ret or push push jns imul and mov (bad) cwtl enter (bad) and or fiadd notl push fist dec xor incl pushf out dec or dec (bad) pop adc xchg arpl xlat sbb pop outsl mov cmp mov sti daa xor or idiv mov inc mov cwtl pusha xor jecxz jo lods pop enter push mov dec fadd fucom inc movsb inc loop sbb jg jge repnz xchg xor mov das aaa mov pop in pop (bad) pop pop inc cmc mov stos pop mov and lret xchg clc mov lds iret fs push add push jnp or es orps jb mov (bad) lahf pop and scas iret movsb and pop stc cmp mov je lret add cmp lods pusha mov (bad) outsl xor pushl movzbl xchg add inc (bad) (bad) mov lret push xor js int3 repz adc mov xchg xchg (bad) jmp or jb mov xor sub mov jge pop jnp cmp stos bound xchg mov or adc or cs out sub leave fnstenv (bad) mov jae lock pop jp jge jmp lret int pop (bad) testb pop cmpsl adc adc enter xor test fisubl loope aas cmp add xor inc add pop sbb iret int3 push aas ljmp (bad) mov xor lret mov mov lcall mov data16 dec stc test mov dec shll imul mov xor movl pop dec cld fs jns (bad) lcall test cwtl add (bad) push pop aad outsb ds rcl xor das fs mov in add leave mov cmp cwtl cmpb in or sub mov mov mov jns jmp or jbe jmp fidivl push inc cmp mov icebp mov pop or (bad) insb (bad) rcr mov xchg in call daa fs les xor adc or cmp jg inc repnz and out cmp sub xchg jecxz pop push and test and mov pop mov repz shll aaa (bad) sbb ret cli out pop mov mov and scas xlat and inc dec xor sbb idivl pop icebp loope mov inc cmp adc repnz lods pop add mov cmpsl jge add lret cltd ss pop pusha dec lea inc arpl pop mov jg (bad) lock mov cltd pop xchg lock jnp ret sbb or sub jge xchg (bad) jnp adc vmovaps inc mov cmpsl xchg pop clc sar xor sbb xor adc xor out cltd outsb and jno add enter idivb dec repnz cmp and or pop mov jg mov and inc and ret mov xlat mov push into (bad) cs jmp out jmp push sub leave xor movsl ss (bad) jge loope cmp daa pop lahf cld ja mov push pop andb push dec or mov je xor jl pop dec stos mov dec jmp into popa rorl add pop jl movsl icebp pop add and je nop movsb pushf xchg (bad) mov push fidivl push mov dec push xchg push and pop out loop xlat mov loop rdtsc push (bad) adc sbb leave mov pushf mov or jge negl shll and ds dec (bad) add in and add lret cli mov jmp and jo cmpsb sbb int3 xchg into push and sub xchg ror mov lret js mov dec les push sub sub mov and mov jnp lds xlat (bad) popa or add fisttp loope xchg lahf mov mov je or in insl inc rol mov xor add jo cmp roll divl and test je (bad) and jmp test movsl adc jae mov pop fdivrp stos lret mov mov repz mov clc testl adc das repz mov fwait dec add idivl pop pop sub loop xchg adc xchg jae inc xor in or (bad) jb lea xchg or js pop inc sub sub cmp (bad) fidivrl icebp addb loope (bad) cmp pop fnstsw cmp inc scas cwtl mov xchg lea out push inc lret loop dec lret or mov push into lock xchg icebp inc das ljmp jmp pop subb add xchg out xchg pop or scas mov ffreep pop fs xor fcom adc xchg or mov imul dec lret shll sbbb daa rcrl and lret pop lock repnz in (bad) stc pushf sub mov add sub rcrb out adc pop cmp mov push mov nop les pop insb sub pushf iret xchg sub call (bad) xor mov xor xchg icebp idivb mov loope lods cmp add in push leave xor jge stos out data16 and (bad) scas lds pushf popf lcall pop mov dec push cld (bad) mov sbb dec xlat mov xor mov imul (bad) dec mov add cmpb mov imul add or jne cmp or adc xlat or rolb imul (bad) xor (bad) lret (bad) dec pop lret sub mov sbb sub out pop mov jbe into xchg popf pop call add add sub xor jg jnp insl xchg xor popf adc dec adc popfw adc or sub xor call mov inc ljmp and lahf lcall and jb push repnz scas popf sarb ret jl push push dec daa imull xchg pop shrl movhps or daa jge push mov dec mov test shr (bad) cmp mov in lods aam das fsubrl adc and lahf nop adc pop mov loop push dec sbb sbb rorl cmp (bad) test mov bound negb sbb ret inc push pop fimul lcall xor adc xor mov xor sbb push cmp (bad) sub fldenv ds push mov or sub sti lret out cs imul or fnstcw cli imul xchg rcl xor add sub xor fidivr lret in xor call xchg loop ret and xor (bad) sub sub dec xor popf jno imul jge out or test fiadd daa fnop std mov xor dec xor shrb addr16 dec pop pop adc pop leave fs insl pop mov leave dec jmp xor sub xlat mov adc and mov jne xor sbbb xchg or icebp loope pop mov lds or into lret mov mov lock arpl (bad) frstor adc jle and aad sahf xchg div repz jle ljmp mov fnstsw scas xchg imul out cmp mov mov sub daa or dec fstl cld mov pop xor fwait lea push lahf ret imul inc sub fcoms push add xor xlat das mov loope cmp mov outsb sub cmp push adc out test xor xor and fsts and frstor js push xor hlt out aad or fcoml push and daa call outsb cmc sub push int3 clc aad mov (bad) stos (bad) ljmp popa fimull cmp lods mov in outsb mov loopne cld ret inc (bad) repz xchg inc fucomi push dec sub loopne ljmp adc scas jl jns ljmp jmp in stos xor flds loopne leave dec add js or mov pop rcrb push ds xchg lea call or sub add scas mov ret mov enter sub sub inc mov and push xchg jecxz adc inc rcrl sub add fcoms and mov dec push mov lds sub inc divl fistpl sub neg mov loope lret mov fsubrp xchg dec (bad) je scas cmpsb inc inc mov in sti cmc mov add mov ja arpl adc mov leave das jl outsl xlat call xor mov lods adc push push dec arpl add or mov das adc (bad) pop pop sti cltd subl call xchg jno and add ret dec std mov adc ss push sbb push dec jmp jae mov ljmp push mov (bad) cld jl out or test cmpsb rorl or xor out lods fcmovnu add add adc test lds adc int cmp (bad) ljmp add pop sahf popf cld dec in sub jmp add pusha movsl stos mov ljmp daa out jns inc mov sub mov int ds or mov jl (bad) aad pop sub enter pusha mov add pop iret sti sub rolb add mov lahf add adc arpl scas lret bound sub adc out int aad aas sub sub and pop call pop movsl iret pop or ljmp imul dec outsl lock popf fmull cltd mov xchg xchg iret jne cmp aam and jno ds lcall add testb sahf pop cltd add jae xchg xor adc cmpsb data16 sub in and pop push fs sbb sarl cmp or incl or rorl pop add mov ret push jecxz pop cli sub neg pop sub lret movsl push mov or data16 jbe adc bnd loop mov push xor mov cmp movb les mov gs aas ficompl out movb decb lods mov fdiv jmp push popa pop cmp das lret je outsl fisub popf (bad) jae clc push xchg add mov xor pop popf lods cmc sub es xor loop jne mov scas sub add adc xor mov or ror jo cmp cmp das into xlat sbb mov cmp leave and add pop gs mov (bad) out inc std adc push mov xchg mov xlat and mul jmp jnp mov xor int3 mov and popf push fucomp mov das add xchg repnz ret je and pop and ret and inc cltd dec ljmp (bad) mov inc rorl ret loop inc inc push stos repnz mov rorl addr16 retw pop mov xor repz pop sahf pop xchg xlat mov push pop xchg test pop bound jnp xlat push add out popf xchg pusha sbb xchg xor lret sub lret iret popa and popa call call shrb pushf jmp stos xor negl xor leave out out pop xor cwtl cmp jnp ficompl cmp fidivl push test add push rcrl pushf mov xor mov dec mov adc fdivrl mov cmp jmp jb in adc movsb sahf or inc imul mov lahf push pop mov jmp or and mov or push es shrb lods mov jp sbb jb adc lret pushf adc es fisubl inc and add pop test dec sbb mov add loope roll mov push inc xchg daa in adc and mov mov xlat out movsb xchg repz jle fs mov mov jge jae sti push add sbb dec or test leave xor and push (bad) movsl pop inc cs and adc pop mov push orb inc mov mov dec push inc mov xor xor stos sub (bad) mov adc out int3 pop (bad) mov imul or clc lret lret out adc or int3 fiadd dec iret test mov (bad) or jg pop scas jno mov and enter ret mov std mov or or test mov push rolb inc and dec mov imul dec stos pop jne mov dec add add js ja add popf jae inc icebp rolb pop fdivl push dec pop out inc push and jnp je (bad) stc gs xchg ret inc es enter mov and xor mov movsb mov push in or xor mov adc xchg das ljmp sbb pop mov jmp out mov sub or mov sub mov icebp dec inc or jmp outsb xor add sub das add pop aas rcl movsl sbb ret mov pop test and test mov and pop cmp add das sub ljmp lcall addr16 pop xchg mov sub outsb ds inc daa and mov add addr16 or (bad) cmp push sbb and xor retw cmp jns lcall notb inc cmc jl adc ds enter outsb outsl std dec xchg mov (bad) and xchg movsl push dec push xor xchg imulb lret cld cmpsl sub and pushf push out stos iret mov xlat insb psubb xchg (bad) stos or xchg sub push loop shll or pop fsts pop sbb cmpsb and call jp xor test mov mov bound pop loopne sbb dec es rcr testb cmpsl (bad) (bad) int3 or sub cmp xor inc (bad) jnp mov in pop add xchg mov sub mov out fcompl pop or jae iret sub fidivrl mulb adc xor mov and repnz dec or lret inc mov pop inc stos out sbb add insl out xchg ljmp add mov mov outsb mov lock in enter mov mov rclb or leave clc aas cmpsb jae repz or jecxz adc decb fs mov pop or dec jecxz dec pusha popf pop sub cli mov ret lret add xchg jp bound out je les sub sahf incl push in scas sbb adc dec outsb xor jnp and jnp adc sti popa jno inc sub in movsb push mov (bad) xchg or (bad) and jle cld jns pop push adc xor xchg lret jmp or out cmp imul insl jno sub out push sti stos insb daa xor popa sti cmp aas jmp cmpsb pop sub repnz fldcw dec xor scas outsl stos movl stos lret dec jg push jle fnstcw ljmp lds (bad) fnsave std arpl or jne mov jbe mov decb lret xor jg out xor cwtl xor or cmp repnz cmpsl adc sub xor aam push loop dec aaa popf into divb dec (bad) mov dec mov daa call xchg xor xor scas xor sbb pop jbe sbb (bad) imul into mov jl xchg je mov sub cmpsb jp adc sbb xchg xchg xor mov jnp pop repz cltd mov inc dec or jno bound push xor out xchg mov mov orb pop sti sub sub ljmp sahf decl mov inc add lock mov out ljmp and push jbe jns adc add int3 cs mov mov pop xchg pop mov and sub xorb (bad) es repz or or hlt jnp jbe imul adc sub pop adc clc not dec cmpsb adc jne adc cmp inc mov mov test inc les inc sub loop xchg push mov and (bad) stos jge mov aas jge sub xchg mov out push inc call mov lock lock inc jne or add scas lret iret dec dec pop add repz and lds mov cwtl adc xlat shrb popa fldt repz je jmp aaa jb dec mov sub mov dec out xor mov mov pop dec mov adc rcrl lret or push aaa lret push add outsl movsl out int outsl mov sbb inc bnd (bad) cmpsb lea lret cmc add mov repnz nop imul ss ret mov and and cmovns lcall mov pop (bad) push jae or adc mov and adc pop (bad) out sub aas mov inc adc mov sub mov cmpsb add ret add jne arpl (bad) movzbl or ds cwtl aam repz dec push mov xor inc lret jbe lret repz mov sub mov cmp cmp pop in cli sub pop sub lret jno sub rcl mov fcomp ror hlt ljmp cmc inc shrl adc mov inc jo popf adc popf icebp stos jns ret test adc out and sub adc jmp mov or jno movsl jge insb ret scas mov mov fnstcw insb ss les add ljmp or cwtl leave jmp pop stos loop xchg push inc add add mov rcrl inc in flds loop xchg imul jg aad pushf cmpsb icebp sub xlat cmp leave data16 lret fisub imul xlat stos into scas dec std pop cwtl gs mov (bad) xchg mov pop and out fs scas cltd sahf popa mov jns fs mov idivl movsb or mov in mov mov push and cmpsb ja mov mov roll insb dec inc pop into rorl inc xor sub or or fsubrs int mov push pop imul addr16 out push movsb cmp ficom cli mov daa int3 inc add or mov push lret xor jbe imul loop stos (bad) fisttpll (bad) xchg jmp add cmp jecxz sub inc lock jmp pop repnz mov in andl sarb test and lret jp xchg mov aas loopne ljmp jno lahf flds adcb shr xchg xacquire sbb lret das xchg jae push je and push dec push and xchg jo pop repnz add pushf add mov (bad) aas xor and add popf clc xor outsb leave leave sub dec jle fsts mov mov lods nop mov xchg jno push ret ljmp sbb jno cmp sub leave jg mov xchg or subl cmp mov push xor mov pop jle adc mov sub lahf jp mov fstl call and loope dec in jg ljmp mov loop xchg mov out fnsave mov inc lret cli pusha pop shlb jmp pop sub cli into mov mov or cmp jnp push (bad) xor mov and hlt cmp addr16 or call orl sub xor xchg test sub mov fisub and fcomip inc mov lds subb stc ds jg dec divl scas movsw lds add fdivl pushw jne bound ljmp popf sti push cmpsb leave lcall imul mov or cmp inc (bad) sub stc ja xor jns dec adc cltd pop cmpsl mov mov or push fimul xor xor cmc dec sub sbb ret xor xor outsb lock lcall and das stos adc daa icebp out cld or fcompl (bad) sbb adc dec mov lret repz mov int3 add stos popa cld pop or bound bound ror pop jmp outsb in fnsave je leave in scas inc (bad) mov xor xchg xor sub es xlat int3 dec push dec sub or sbb xor cmp cmp adc (bad) mov push jb ficom push (bad) sub sti das sbb and adc mov data16 cmp push testb imul lret out das repz daa lods fcomi ret test enter dec jp add stos aam ljmp pop negl dec cmp cmpsl and add xchg jmp xor ljmp call push aaa stos lcall shr loop repz xor fist std lds (bad) add cmpl mov xchg (bad) lret inc pop int push cmpb sub subl daa outsb sub sub or mov jg xor add data16 add fsubrs in xor lods cmp xor jle push jne add nop es add inc dec mov jbe add and mov lret out jae dec insb je or je push jne sahf inc ss popf push xchg imul mov imul scas or lret dec mov lret xchg aad out (bad) out pop shrl mov jbe (bad) sar jb (bad) ja pop pop add rep pusha cmp testb jbe idiv dec jecxz dec lds xor fdiv imul adc push sub xor loop xchg int3 jae test xor add mov sub dec and cmc sub fmul testb test test cmp adc cwtl stos and xchg fsubs stc sarl notb add fs popf xchg sub sbb clc pop lret and js mov out mov fsubrl jmp dec and sub xor popf fdivr pop das fstl out mov cld mov jo in les mov add (bad) iret push inc loope add mov mov aad pop bound adc (bad) xchg sarb inc mov packssdw xchg call mov out daa or in mov gs ljmp cmpsl cld jmp lret pusha pop xor and testb pop in nop sahf add mov pop lcall stc jnp mov jns mov int inc jo je in scas mov mov nop or movaps pushf imul push bound fcomip push cld xchg inc xchg add adc cmp cli add scas mov adc sbb mov adc lret pop outsb (bad) out pop or or inc dec xchg xchg jne in stc bound (bad) bound xchg sbb mov ss or cmp add cmpsl adc mov in sbb mov mov div pop sbb adc lahf gs and sub (bad) cld (bad) xchg pop xchg jo mov xchg and int3 mov pop aam movsb adc xor dec adc sbb xchg pminsw dec dec mov fist (bad) in scas repnz cli int3 adc xchg ret out shrb mov dec lds and jnp adc loop jo cs cmpsb sahf fwait jg (bad) and out arpl cmc xchg sbb pop xor pop loop popa nop add push je arpl cmp or mov or call rol mov xor jne insb and pop (bad) pop push mov cmp xlat add mov aad sub (bad) or jne mov jo,pt mov or mov sub cmc out jecxz pop xor cmpsb xor outsl addr16 stc ja and fadds ficoml roll jecxz addr16 pushf (bad) xchg shrl xor sarl icebp adc jnp shrb mov sti gs enter stos mov mov fistpl sbb hlt adc add mov shrl add mov xor push jo mov movsl lret repz push mov out lahf fnstcw push jne outsl sub cld cs mov xor loopne mov cli rcl pop and pusha mov sub fnstenv jb loop push or mov push out adc cmpsb or scas sub and sub mov mov or xor mov or or not mov cs and pop popa test sub pusha xor aas and int3 fwait pop inc xor (bad) outsb fmul (bad) push inc fimul scas xchg push xchg sub fildl adc lds fcomp out mov out stc sub sub stos popa add imulb mov mov loopne movsb popa imul out lods negl jno xor jp xchg and ss pop xor lret mov (bad) loop fnop pop cmp or add jne xor sub cli jne out mov daa out mov shrl fcomps push mov mov iret xlat mov pop leave call mov jbe push sbb inc loop out mov adc dec in das mov shrl add cmp push add push rolb sub sbb pop adc sub mov ja cwtl xor mov or mov ss mov out adc mov fadd out scas mov lret or xchg ljmp popa wbinvd into xor add clc ds lods inc lret ret fs xchg pop lret movsd stos pop lcall cmp dec xor dec sbb (bad) mov call lcall mov push decl add scas push push pop mov std xchg jo pop dec add lock and xor sub sbb test add xor mov ret dec pop and pop or jge add out sub adc cmp std dec lea sub mov int jnp push mov or xor repz sub shr cmpsb pusha or test dec cld xchg push out imul mov movl icebp mov mov into mov (bad) fildll cltd dec (bad) push sub test add das xor xlat dec insl insb jnp xor mov xchg xlat (bad) dec inc repz mov sub shrl and jecxz xchg pop dec js data16 pop sub cmp out fcomi icebp (bad) movl into in cmpsl jl aas lret stos cltd inc and sub test (bad) fwait shr mov pop jg inc jmp xchg outsl loop les cmp mov aas mov stos adc or inc sub (bad) divl mov aam imul mov data16 add mov cmp mov add cld leave test cs mov mov jne pusha test push xor ss popa arpl pusha sbb mov in lahf lcall xor les call scas int3 pop loope sub add dec pop or sub ret je imul mov aad add lahf rorl in arpl mov outsb or icebp sub or fs mov xchg xchg or icebp popa bound push out mov in or negl aaa sbb jg (bad) sub push es add shll sbb es pushf push and lahf out dec push shlb jns call loop jle xchg mov jno test adc test movswl out ror jns xchg xlat or or mov dec push or jo out and lods xchg push xor into and push imul gs adc out xor sub int3 mov jge push imull or ror sub cmpsb mov imul pushf xor mov stc or adc cmc loope push (bad) in and clc sub popf pop fmuls movsl or gs in movzbl jmp js and xor (bad) loop push push pop (bad) movb xor cmp adc pop loop (bad) xchg leave inc movsl daa xor jae push sub mov sbb test repz sub cmp scas mov ds inc lahf loope scas popa into sub cmpsl mov and or addr16 xchg (bad) cmp outsb xlat ljmp add lret (bad) sub lret jmp sbb push xchg int3 sub mov push xchg sub add popa in jmp mov sub scas dec (bad) outsl fucom (bad) mov pop pusha pop inc jnp xchg inc sbb pop imul gs jne and dec adc add insl pushf add dec dec test lahf cli aad into daa mov (bad) sbb out pusha jmp adc adc iret mov lock std and imulb negl mov xor rdtsc imull inc les lcall popf rcll mov in imul push mov ffreep inc cmp and xchg pop dec gs repz adc pop xchg ljmp and or cmp sub jle mov xor xor ds dec lods push dec jmp push das xor mov aas mull imul xor testl mov inc push sub xor stos adc pop int3 in das cli or mov dec repz ljmp das rol lods movsl mov sbb dec popf push je popf mov scas sub (bad) sbb mov jle cmp add shrb xchg jge xchg fdivrs cmp xchg sbb adc in jge rcll adc jo lahf push mov iret leave aad pop xchg or push adc or lods xor out mov jnp out lods dec mov fdivl ret mov xor or mov xlat lahf inc je int3 daa std sahf sbb sbb jmp ja pop aam jmp cld pop jmp mov push inc pop cli lret call ljmp pop dec ss and sbb mov pop imul in data16 xorb test fldcw dec push insl cmp mov push inc aam pushf jae adc (bad) pop scas iret sahf mov jae sub fs in stc jne insb and mov cmp sar popa (bad) add (bad) pop and call pop pop sub cli adc mov nop imul jo adc mov outsl mov cmp jno and jmp xor out call pop push aas popf pop data16 sub push sbb repnz sar cwtl (bad) repz inc sub mov test mov or sti ficompl xchg outsl dec mov inc jmp adc push popf addl mov jae pop mov jmp jecxz push pop cmc (bad) das cld cmpsl mov lcall pop and (bad) push inc call rcrb nop mov pop add je icebp js gs mov push dec mov or add xchg ds cmc daa (bad) std push inc popf adc or mov sub dec ret ret mov pop insb mov stos jne mov clc fdivrl jo dec mov sbb out leave add movsb clc (bad) xchg or mov sub mov jbe daa pop mov ret daa xchg xchg ret mov (bad) push xor sub int rolb jmp out mov mov out inc and stc rorl or dec mov ficom div adc add aaa lods dec mov xor nop loopne cld aaa leave repz xchg and adc mov sarb pusha adc mov jns xor out imul mov sub adc push xchg mov pop sahf lds or or dec sub dec popf add call mov cmpsl ret dec mov and xchg in adc mov add pusha sub mov mov lcall fdivr call add dec mov cli xchg jno into jmp dec push into lret cmpsl leave xchg ret fyl2xp1 jnp (bad) in int xor daa rcpps pop sbb ljmp sub inc sub add push pop dec movsl jne aas push sahf jl mov fldt adc mov mulb mov sahf dec call clc adc ret jmp (bad) pushf into lret sub cmp aas icebp dec pushf xor push push cmp les call xor mov popf xchg gs or outsb into mov or stos arpl rclb (bad) mov or jmp mov jmp notl jmp pop int3 aas sub dec adc ljmp mov or mov into dec scas cmp cmp pop dec movsl push mov mov std popa lods sarb xlat sub lock sbb mov in test sbb addr16 pushw xor push hlt adc mov call lret jmp add sti mov ret mov ror repz leave ret (bad) addr16 push and (bad) pop adc dec cmp push movsb mov lea xchg mov scas cmpsl (bad) jno movsl stc inc or icebp hlt mov push les or cmc mov das dec mov cmp or int3 sub mul (bad) xor repz or std add je div mov add mov (bad) mov iret movsl sti (bad) ret pop sub add icebp jmp or insl into out push adc inc cmc ret push xchg divl mov sub and ds pusha pop nop and push sub and sbb add mov rcll sbb daa push jne and jl and and mov ret lods daa sub push test (bad) out loop in cmpsl push add adc xor mov and stos sub adc leave and xchg out dec aam in adc and mov pop rcrl sub inc jo fildll mov xchg addr16 je nop add mov sbbb clc dec xor decl mov mov mov push test push ljmp adc icebp cltd push pop jae daa sub in xchg out ja js xor ja into mov jbe xchg mov or sub lea xor fcomps sub stos das into int3 mov xor loopne data16 mov imul addr16 or and or out loop shll cli xor add repz pop mov test jmp sub repnz sbb jbe loop xor stc jg adc mov mov sar mov push cmp (bad) lods push add sub cs rcll repnz pop jle mov loop pop pushf mov jbe,pn mov (bad) dec pop aas push das scas je (bad) xor jle push inc or les (bad) icebp test mov cld lahf push jns daa jge hlt lret lods mov cwtl cmp ds icebp mov (bad) lcall cmpsl repz (bad) aam jge out xor loop aas sub fisttpl sti repnz xchg xor sub mov lahf pop loopne mov ret neg outsl and xchg xor idivb jge iret jns inc into add push cmp shrl shlb dec mov icebp xchg aam ljmp dec fs xchg or ret adc popf lods jle jnp stc shrb and in pop cwtl clc data16 out fcom cli mov push sub inc adc sub jbe or les and sbb in addr16 cmpsl jb mov lods pop ror xchg ds mov test clc jmp dec adc jo pusha mov movsb add xchg fnstcw or mov xchg adc mov add les sub adc mov adc mov fisttpll dec (bad) stos pop or pop and jl push lock jnp mov jg cmp ret je ret inc lret icebp lret xchg icebp andl mov xchg lock call push mov sbb lea sub cmp out xchg xchg ljmp lods mov or mov jecxz dec enter xchg mov std repz fstpt (bad) in jne cwtl mov mov iret inc jge shl mov add inc sbb or sti dec daa les mov pop (bad) xlat ljmp adc mov pop sub push adc mov push push sbb and scas and inc lret sbb ds inc mov cmp fcmovnb sbb jl jb (bad) adc lret in je test fcomps add push sub sti jno xor sub pop and fs dec movsb les fadd mov mov ljmp fldcw and xchg loopne cmp xchg jb loop xor adc mov mov push pop pop adc lret cld sbb into iret add mov fildl (bad) mov mov mov das cmp (bad) gs insb xor push pop mov call int3 lock push xor mov mov lret fs mov jg stos or inc mov clc jmp jb adc into cli xor jmp jmp lods mov jmp cmpb orl cmp cmp mov mov dec mov sbb sub pushf pop fdivl add test decb xchg pop incl sub cmp xchg cmp sub mov shrl repz das divb pop and or test xor xor stos cld (bad) dec sub add cmpsb popa adc sub outsb mov addl sub sub mov maxps jg out mov into negl ret sub ret test or in add leave and aas sub out mov mov mov xor cmc sub lock xchg adc nop add xchg js repnz mov push xor sub icebp lock jmp lret and (bad) mov mov test sub stc xchg jle lret jae sub add add fnstcw pop fcmove inc add sub pop (bad) testb and mov mov negb daa ja loop shr lcall push pop push mov loopne cwtl xor pop push stos xor and loop and push push sti add mov mov jecxz mov test mov push mov mov pushl test mov sub add in stos xchg cmpxchg orl aad cltd stos fisttpl fstps ret pop sbb and ror jbe xchg loop jge mov jnp lret stc mov jnp or dec sar and stc mov xor ret sti dec mov push or scas (bad) mov push adc sbb or aam push xor add push out loope sub and jmp or add rep adc lods and mov and daa jmp (bad) and fild xor repz or fnstenv jge ljmp jno lods (bad) das cld cmp add mov xchg mov in pop mov pop lds pop movsl fcompl or sbb movl cmp or sub insb fcoml xlat or in lods or fcoml fsub ret icebp jae out popf xchg and sti add xor lea push or xchg mov mov add imull mov pop inc dec inc push hlt mov ds lds xchg (bad) stos or sub xchg in adcb mov fucomi fs jmp mov fist icebp call daa push aad cmp fs sbb jb push in jg add or stc pop add xchg ja rclb aad sub out pop or xorb cmp add fsubl mov add subl (bad) push sub jns mov mov lret push ret and cmpsb inc or nop sti mov mov cmc pop add in mov xchg pop xor add push add jg cmp ja add jns add rcr jg jae stos mov add shr lods (bad) push not xchg add clc mov inc (bad) push shl or dec call mov xor enter mov push clc pop movsb lds add pop out add sub sub jecxz adc cmc dec incb or shr push or je dec (bad) (bad) adc inc or inc and mov mov mov mov xchg push push stos and cmp push push shl adc mov nop xlat jns add adc fsub mov imul mov int3 out add sub push mov cmp fdivl adcl jnp fiaddl scas adc aad incb push inc andb fisub push lahf jne xor aas mov mov jge inc sub jns mov outsl xchg mov orb inc push push cmpsl loope,pn rorl sub sbb test mov ds or add mov call cli cld aas xchg out ror sub push lods rcr stos add cmp inc popf outsl jbe sub xor sbb push xor outsl xor mov add lock ror mov insb mov xchg not or sbb push shlb xor repnz xor cmp addb mov cwtl test (bad) or movsb add shrb mov imulb xor dec mov push mov or ret sarb pop jecxz pop sti and inc es jmp inc pop daa bnd shr leave dec cmp and mov push xchg (bad) testb lock pop incb sub dec or push jo dec sarb orb inc and push and outsb fucomp dec cmp cmp sbb pop fisubr cs aas pop xor sub push fs mov cltd dec mov test (bad) popa dec mov jl iret cli mov into shr push (bad) lock fdivrs fsts mov out sub pop stc mov push pop push mov pop flds inc out pop xchg dec adc or and inc adc popf pop punpckhwd xchg scas loop orb and test add pushl imul leave arpl jbe in cmp or sbb std dec into sti sub ret int3 imul (bad) xchg loopne fisubrl pop nop (bad) sahf daa push dec pop flds jle addps xor mov and lock jl in mov ret pop imul sub (bad) push cmc iret adc mov sarl sub mov adc orb dec ret insb ret aam xchg xor xchg faddl lcall jmp cld test add iret int3 ja popf repz (bad) enter iret mov mov push frstor mov add inc or add push cmpsb xchg pushf add dec xor (bad) pop aaa sub push pop jecxz or mov repz loop les push rorb loope xchg xor jmp aad leave push jge mov cmpsl (bad) enter bound jg mov mov pop (bad) add das mov sbb mov lahf shrl fimul rorb cmp loope jl push mov xchg rcrl jmp mov outsl cmp clc xor xchg out movb ret outsl movsl aad push or and out mov mov cli out cmp mov test and inc outsl mov and lock (bad) xchg pop (bad) mov (bad) xor cmp mov aaa pop and mov jl (bad) in loop dec std mov mov lret sub popf fstl std arpl adc pop and adc sub jmp shrl sub cmp lock mov add xchg ljmp xor and mov jo jbe in jg cmc gs xchg ljmp (bad) xrelease or or jbe int in push (bad) (bad) jg sahf outsl stos repnz pop adc in adc out cli es popf divb jne adc mov loopne fistl adc jo insl pop repz or sub ja mov call mov stos lods xor ljmp sbb aam push adc sub and push sbb out jae pop pushl popf rorl push mov pop and dec outsb mov add xor stc fistpll ret test mov xchg arpl or sub mov icebp dec and (bad) iret imul and jb push leave stc insl es ret pop pop xchg fs mov ja (bad) scas cmp jbe outsl sub loop add dec sub xor pop and mov pop loope sub xor aaa iret and add enter movsb daa push (bad) push daa push sahf cmp test mov push mov jns movsb xchg out mov mov lahf fsubrl (bad) cwtl movsl in das pop xchg adc mov scas adc scas mov jmp arpl and sub je xchg push ds and mov pop push mov (bad) cmc int3 inc inc lret ret int3 mov pop sbb inc movsb xchg out cmp xor mov lods lret pop xchg or xchg aas and repnz adc pop xchg and xchg jae and fmul imul sub cmp popf lock lcall ds enter pop push inc mov js shrl (bad) jnp imul cmp mov adc out jb pop push lahf ljmp jns out and test sub and clc test push or jne scas xchg adc mov inc dec sub mov stos pushf and mov (bad) cmc inc jecxz hlt sbb lret mov add mov (bad) sub sub mov jecxz fistpl add mov cmp lret lahf ds xor shll shl out pop test mov push xor lret mov ds xchg ds sub jge sarb dec jmp into jmp mov or outsl add inc stos mov add negb dec daa or xchg xor fsubs push inc nop cli mov sub popa and je cmp mov jecxz and sbb sub cmp test iret mov inc push sarl mov or mov and sub cmp scas push sbb sub add ja bound lret shlb loope mov jo mov (bad) pop bound sti into les rcr sub roll aam mov add cli loop test (bad) cli repnz pop xor jmp fwait das add mov jmp dec js lock loop lret xchg movsb scas test loop jg jmp loop fistpll in stos cld cmpsb add dec jmp mov xor lahf (bad) push repz mov mov push hlt or xor loop pop pop mov lahf jl bound pop pop sbb in rcrl sbb sbb jne adc cmp adc into scas jge adc shlb mov daa dec adc daa and and mov ljmp mov dec fidivr rcl and ret dec xchg ret pop jns dec mov and out xor lea into mov in mov mov out dec sbb lret lcall sub pop or sti and sub loope mov fsubl in fwait jg cmc movsb cmp (bad) push xor mov ljmp fbld jne push fdivrs leave (bad) jne stc (bad) and xor pop inc rorl mov xchg pop cmp movsl divb dec jb and sarl test icebp sti fstps clc inc push xor jae int cmp stos jbe cmp iret adc in scas roll cmp stc imull ljmp ja jmp cmpsb mov xor cmp (bad) mov cs test cli loop daa fiadd sub nop nop mov leave testb fsubl inc mov pop out mov fwait dec rorb sub mov sub pushf inc sub stos xor xor jnp mov or decb iret dec leave fucom pop mov inc and cmc test imul outsl dec sti dec inc add aad sbb dec lock idivb or add jge push lahf out lahf loop out leave popf pop mov mov in and stc mov xor push shll dec pop jnp and jge xchg jo mov rcll icebp bound cmp dec out and mov daa mov (bad) popf aam push (bad) xlat or leave or in sub scas mov loop dec ret pop clc xor sub mov cmp push cwtl sub enter push sub push fs xchg jne mov es ss ljmp xchg imul mov pushf sub js xchg into inc xchg loop (bad) hlt das jnp lcall add jmp jle leave je and sbb add sub and adc add add xor mov xchg mov xchg mov pop insb push dec add (bad) js testl icebp jg imul rcrb ret mov push pop add leave fadds cs das scas pop nop ljmp jmp pop fprem1 lret jne (bad) xor js pop mov cmp in xchg dec das dec sub mov call sub decl dec out xor jmp sbb (bad) xchg pop add je les jbe push pop add fs enter out jl clc testb test adc sub jmp data16 pop xchg arpl iret cld mov hlt insl pop in jb sub xor test xor pop (bad) sub add divb pusha sub and int in (bad) or jg and mov jne cltd pop jg adc idivl push out xchg mov mov dec sub fs cld lret mov or mov pop in cmc mov ss je cli loop (bad) mov out cmp xchg lds add adc movsb les stos cmpsl hlt dec lcall adc mov fdivl sti dec or push sub sub dec ffree xchg daa xor xlat dec cmp (bad) xchg popf loopne out sub sbb sub movsl jne push adc stc jmp (bad) idivb push jp lret test iret stos adc dec add add mov (bad) stos inc mov mov std mov pop pop sti pop sub (bad) nop push loope ljmp jle and mov or (bad) mov mov aam int cmp les (bad) out jp into stos and andb cltd movsl outsb mov (bad) cmp and fstp out bound ret mov lock pop jb lea je rol loop sub push mov lret fidivr mov xlat (bad) (bad) out dec in testl adc push into mov lret inc xchg or (bad) imull aam push push pop lret aas fucomi sub out sahf mov insl and das ret (bad) out jb mov lret (bad) xor cs cltd or sub push repz stc add mov mov int3 pop add ljmp push sbb cmp mov decl fsubrp fldl sbb xor xor or inc mov out and pushl vsubsd (bad) lret pop out aad xchg outsb lods (bad) leave xlat je loop and negb jmp push fisubr popa gs mov inc (bad) mov out push pop cmpsl pop inc popa sahf iret daa popa mov pop jne adc fistpll mov loop fild (bad) (bad) pop idivb xor and shlb icebp sub popf fiadd push das pop test ljmp ror jno (bad) pop mov sub sub pop stos push mov add pop loope xchg into push pop mov and adc popa pop or jl (bad) sub add jno (bad) iret add test and adc movsl ja cmp lea enter (bad) cmp call inc in sti mov imul pop (bad) ljmp int aas repz lods inc test sar jp out movl mov jmp push movsb jmp jecxz mov (bad) add and cmp adc xor or cmp pop xchg sub into or popf push xchg cmpsb popf (bad) hlt inc es loop pop sbb cmpsl out outsb pop sarb adc push mov stos faddl add jge stc dec push stos lret dec dec out sub or jns sbb or dec outsl loop sahf push fisubr test aam or xchg in sub push mov popf sbb cmp mov xchg pop pop mov or insb (bad) shr in notb (bad) dec inc loop test cwtl sub sbb scas scas fild mov cmpb clc imul lahf (bad) repnz les fisubrl (bad) fcmovnb cmp sbb and (bad) cmpsl push cmp imul lret xor and inc fstpl push and into sbb out in inc mov orl lret movsl dec jne or mov push mov push jge (bad) mov xlat mov out cmpsb scas inc not bnd inc jo mov mov xchg pop sub repz (bad) push or cmp aad js (bad) xor xchg sbb xor or pop or sub or pop (bad) out repnz lret lds iret pop xor and fwait sti cmp hlt dec fstpt push scas inc lahf xchg sti cli popl adc and mov mov cmp daa iret add or xor adc and test cmpsb mov addr16 (bad) in jne xchg mov xchg or mov in stos and sbb jle add xchg fldcw dec clc (bad) pop jmp test out out dec outsb inc ljmp push mov and fisubl push js mov aas jge inc and add lods or cmp stos faddl daa ds ja les ljmp test rcrb fucomip pushf in icebp icebp data16 lret stos dec addr16 or and inc out shll sub pop in daa lcall sbb push jno dec pop mov push jmp inc inc adc mov call or xor and imull dec loop sub ja mov sbb fist movsb dec in ret mov outsl fsub lret test add jno dec ja loop or movsl push sbb (bad) xor mov xor mov bnd jnp bound fist cmpsb scas push sub lods sahf xchg sbb push cmp scas mov shr int jle pushf and cmpsl insb (bad) loop mov dec loopne (bad) jmp ljmp or inc repnz inc xorl leave mov scas jnp xor push push notl in sbb faddl scas lret jmp (bad) iret jmp mov les pop test sub scas mov (bad) pop xor and dec mov insl push dec mov (bad) sub out mov les and in lahf daa jmp cs outsb or out pusha or movsb sub pop push sbb ja and cli mov lock dec inc ss sub jle out cld xchg push push pop or jbe sub sub repz pop scas lret jge add add push pop cmpsl pop stos xchg shlb mov add jns xchg imull sub xchg sub xor jb test sarl push repz sbb (bad) pushf mov mov cmp test or (bad) mov mov lods inc or incb leave sub sbb (bad) leave dec xor stos sub ficom xor repnz std imul pushf cmp pop movb sbb add pop insb xor mov jge xchg sbb out cltd js mov xchg add (bad) stos sub test sub cmp (bad) mov stos repz add mov cmp add dec adc add movsb mov sub inc lock sub lret mov sub mov pop (bad) les mov pop out mov sub xor mov aad jb xchg add jg pop stos gs mov xor cmp jne pop outsl push cld xor xor and pop inc jnp or sti int cmp xor mov dec mov repnz fisubr int cmp insb push lret and setns rclb pop insb cmpsl loop std fnstenv imul xchg outsb in mov ret sub ret mov jmp out call push call dec pop ret fs xchg out lret popa and rolb lcall fneni(8087 jmp mov xor mov jmp fld data16 das (bad) push dec xor scas lret repnz jl imul fs push and mov adc aaa call add stos mov cmp mov cs je scas aad pushl lods pop mov arpl add fadd adc push (bad) xchg or bound xlat mov or dec mov push adc sarb add (bad) xor lret lds xor mov repz les mov xchg xchg data16 pushf and dec cli pop xor ret sub mov out out repnz sub sub and mov shrl dec mov inc add xor or stos mov hlt addr16 mov push ljmp jl rorl add negl and arpl push mov aaa mov dec push sub gs mov cmpsb out xchg int ss in cmc inc movsbl popf js dec mov xor xchg in scas pusha pop cmp (bad) dec sub jmp jns add mov mov pop loop bound add in pop xor pop movsl ja loopne rcr pop jo (bad) loopne (bad) mul popf push push jecxz sbb test add adc (bad) lods dec sarb push scas (bad) bound pop aam pop lret add fmuls out mov int3 pop dec dec mov xchg mov jb mov (bad) aaa bound (bad) pop pop cmpsl mov push mov aaa das push pop pop push stos jne out xor push xor xchg mov call sbb mov (bad) icebp and dec and lods dec les loopne repz ljmp jne fnsave pop insb xchg and pop (bad) in repnz (bad) je push and daa or (bad) outsb lock xchg ret test cmpb into add int out cwtl adc dec pop fnsave jmp lds mov imul ss (bad) cmp dec fsubrs xchg mov fild sub lahf fmul ljmp jno imull or cld dec mov fisttp sub sub mov aas xlat stos lds cmp dec and test push jecxz inc in lds arpl ja aad push lods in pop xor push stos out sub and adc jl jp fs loop pushl and fistp rclb sub mov jbe and ret xor fistpll es mov in cmp pop ds scas xchg (bad) mov mov sub test push mov ljmp dec jo dec fldcw out mov mov mov inc rorl ret out xor rol out jns sbb in insb xchg in dec pushf dec add push or std lods fs mov add rcrb test enter or ljmp jmp pop insb andl sub or sbb out pop neg shl mov sti jmp cmp ret inc cmp ljmp cli sub jg pop mov or push mov sub ljmp (bad) pop icebp call (bad) (bad) cmp and adc sbb test mov loopne sar popf sbb (bad) leave imul add inc sbb (bad) xor (bad) xor in ror jecxz push or mov pop loopne lret lret out inc mov mov xchg loop sar pushf out loop je push das ror lds test pushf and dec idivb in and sub lods fistpll jecxz rclb into (bad) sub add frstor notl dec mov aas adc pop mov mov jp and mov mov loop jbe (bad) fidivl push jle out rorb mov sbb mov add push lds fidiv xor sti mov or cli pop sub repnz and xchg cmc adc xchg pop mov lret xlat in cli dec jmp xchg sub adc mov repnz or repnz test mov adc (bad) mov and pop ret (bad) mov adc pop sub test cli sub scas mov jl imul lret mov sar imul xlat (bad) vmulsd daa adc and lret xchg mov cmp js dec rorb xchg jle push ffree repnz gs rclb sahf jge out dec mov sub mov xchg mov and pop push jecxz es mov (bad) mov mov sar lea mov and or into sarb mul inc icebp (bad) sti negb jns dec into add mov or mov xlat sub in xchg lds pop cmpsb roll ret lods das (bad) mov xor lods std add pop push jg lods cwtl cld and loopne pop cmp sub sti je mov nop out dec out push mov mov scas loop xchg sbb enter mov stc fwait mov mov sub das mov in xor shrb push jecxz mov xchg sbb mov mov ljmp xor cmp lds sub inc in pop or stos xor in adc mov fadds inc add xor mov leave cmp mov inc pop mov xchg pop cmp pop xchg popa xor mov jecxz in and add fldl jp pop fist imul mov mov mov sti xor sbb fldcw nop testl ja jecxz lds pusha lret xchg add sti (bad) or andb mov pop ja add mov rcrl fsubs leave sbb jno mov out mov push jne push fdivs ds incb xor mov imull xor xchg std sub or sub shrl dec out fisttpll das jmp (bad) cmp mov xor mov lods jbe sub mulb jb (bad) lahf in das dec dec mov (bad) push mov mov subl and and test sub arpl mov popf in cmpsb xor push jns add jmp adc ret repnz neg dec ljmp pop insl push jne popa fdivrs fstl inc iret bound jb enter ret in and mov call mov mov xor movsb inc jno add imul xchg (bad) sub and stos sub shrl repnz cmp cmc movsb icebp lret jno,pn shll xor outsl sub jl dec test mov or daa out push xchg icebp mov daa pop sbb xchg fidiv bound ss mov aas cmpsb mov sbb jmp xor add xchg (bad) loope hlt jo mov je (bad) shrl loop shlb pop xlat fmuls stos mov bound fs dec sarb fs test leave cmpsl mov xor xor sub sub shr dec cmpsb add sub push sti jmp int3 test mov rol cmpsb out xor out lods pop xor fcomps jo leave pop xchg add mov fwait repz lock icebp (bad) cmp and fildll scas jne out jo loope jmp fldenv jmp pop ds out mov mov test sub lret cmpsb adc mov push push movsl jnp mov imul xor and mov shrl adc xchg je and rolb cmc xchg and scas xchg mov pusha or cwtl mov in out les or hlt cmc inc insb fldt and mov add stos pop inc lods je cmpsb cld pop in push xchg push mov test mov lret and test jmp (bad) jmp mov leave pop mov mov xor adc out pop or and and jnp pusha je lea pop add out pop and fidiv sub mov inc xchg lahf pop or pop or icebp inc imul mov xchg stc lcall rorb popa sbb fldt scas bound add pusha cmp dec lret clc sbb add lock sub push add mov ljmp sbb mov xor das sub sub daa add sbb lahf ds and cmp (bad) pop push jns nop or inc xchg ds out sarl in or or imulb fmull orb call scas sbb fcos movsl std int3 jp xor int adc scas xchg lods in sbb (bad) push xor ret aas mov aam push call and xor dec addb sub dec or add push sub in aam in cmp add or cwtl mov movsb cli fimul or xor out enter or cld jo mov pop int3 (bad) (bad) div (bad) xchg test pop pop push cmc pushf les bound sub sub popa xor stc stos fcompl icebp sub fbstp xchg xor and jno es adc pop sub jnp sbb fs dec adc adc repnz das adc movsb cmp lds pop xor jnp inc mov add daa and (bad) repnz xchg clc lret mov (bad) mov les repnz and add adc mov fild repz pop daa mov notb xchg sub aam rol fstpt jmp mov inc mov aad xor inc sub mov or jmp mov sub cltd leave jle addr16 mov fld lods jg adc mov dec pop mov lret cmp pop imul subl cmp xor outsb jb xor cmpsb rclb lahf into add negl mov pop xchg dec into (bad) cmc jmp iret and and fstpl clc daa xchg xlat cwtl xchg adc mov and inc adc imul and imul imull or mov incl push push or lahf mov lcall ret or aas lock inc addr16 div adc sub push out sti lcall pop divl or add mov fs sub (bad) insb add dec pop cli cmp mov push out push pop and xchg xlat xchg outsl xchg decb inc pop xchg ja enter pop push jle daa xlat lds jp adc and dec pop mov lods jmp sarb and popf icebp test (bad) add pop ljmp repnz loopne ljmp enter adc xchg and add cmp imul and rcll pop push fstpt ret lds jae xor les adc pushf xor dec push sub lret mov jg or jge xor nop dec fnstenv (bad) cmp mov leave ss mov rorb shr mov flds mov dec mov xor dec xlat out aad subb or int3 jno xchg pop jecxz sub sti repz mov lea (bad) inc out fnsave inc (bad) and and fdivs lahf jo dec into scas addr16 xlat out mov mov pop jge add addr16 push adc and (bad) cmpsl fstl dec out pop into add rolb (bad) xor jmp lret mov push not imul add nop jne mov and push fstl inc repz adc add sti hlt cltd fs mov leave dec cli imul mov ljmp call scas lods adc test cmp jbe push ljmp out ljmp sahf and sub pop dec sub out ljmp push rcll clc lock mov mov (bad) mov out or or adc sub fnop mov sub push ljmp xor test sarb fist pop out jnp add mov add sub outsl cld lds add dec arpl ja out orl sbb dec mov add cmc push push mov mov (bad) sub pop not in add push test les (bad) or pop push xor pop push jno xchg ret xchg (bad) movsb lahf dec or mov out outsb sub jl add not xlat sub cmp or xchg ja sbb add (bad) pop push mov jne ficomp mov add pop push notl test rolb inc mov push pop push cmpsl pusha cmp xchg les aas pop dec pop dec adc lahf adc add and mov push mov add cmp cld jge xchg in or mov jns sub and push and inc icebp dec sub cltd push insl push in out mov mov cmp gs fwait pop mov nop mov jno outsl dec add push clc (bad) imul andl testb icebp jne sub pop push dec xor aaa xor imul and or cmp push add sbb cmc add adc ljmp add lds add or or (bad) push inc push add dec daa pop jns pushf iret mov mov shll movsl inc xchg mov pop lods sbb iret pop xchg push cmc jmp and aam jge in call sub aaa mov sub sahf cwtl cmp cmp clc mov (bad) outsl sbb icebp push inc sub loop sbb mov xor mov cmp repz xchg je mov imul les jl lahf cld xchg loopne xchg mov loopne sbb sbb add sub rclb pop (bad) imulb das or sub je ret cwtl sub cmp sub adc xlat test sti cmpsl fldt std into push adc xchg negb dec cwtl hlt sub (bad) notl loop xor fist add xor fst ja dec lods pop rorb sbbl push sbb dec std fistl (bad) leave popa inc (bad) xchg shrl jge xchg mov or js pop and in stos sub lock lods lds inc add xchg (bad) icebp mov shr jnp addr16 mov hlt das (bad) (bad) adc xchg gs lods push pop fs scas xor lret loop aad lcall mov shlb dec jecxz loop lahf jle repnz jl push lock ss jp and popf jns imul fldt std cltd sub sub into inc sbb add lock negb mov nop cli push adc push into bound icebp push frstor ret je aam add add adc cli (bad) dec adc xchg mov cmp imul adc mov cmp push pop mov and push jp dec idiv sub rorl mov mov jg bound ret inc push aas popf dec imul jbe jmp ja inc pop add mov out push inc sub aam leave mov jmp cmp mov or and add sub mov xchg mov sub jbe les ljmp jge sbb das call dec sbb or xor scas in addr16 dec lcall add fwait adc sbb mov sub (bad) pop mov mov nop xor xor fnstcw and pop ficoml (bad) jnp movsl neg outsb add xchg xor sub and jg movsb xor xchg push outsl push dec out inc cmpsb pop insl push notl clc push fcoml loop push int3 pop (bad) cmpsl xchg and pop mov movsl test mov nop pop mov cmp mov dec leave aam and sbb add call data16 data16 faddl pop cmp jle cmp dec les mov aaa jmp or fs and jle stc out popf pop adc iret outsl loop xchg mov int3 cmp or adc push (bad) leave and lds mov push inc dec mov fildll xor xor mov iret out flds xchg xchg test lret dec push xor pop xor ja pop lds push add out pop pop xchg push ret jne gs aaa and xor mov xor ljmp aad mov xor pop call sbb in or add inc stos mov and pop sbb leave notl sub dec and sub aam stos lret sbb repz inc das mov push push sub loop pop xor sti int3 sti loope inc lret popf and sub and push into mov add xchg outsl xabort mov jmp and das repnz push xchg lahf or in (bad) fisttpll sarb xor incb addr16 movsb stos mov jge fidivr mov movb gs push xorl (bad) jg sub mulb push adc bound cmp inc adc fldenv mov push xor ds xchg ljmp shll fnop iret xor mov les sbb sub add call stc push dec int push and mov rorl icebp sub test mov jle repz xchg les fisubr inc xchg shrl add divb fcomip mov add cwtl daa ja dec std lds mov insb pop mov ljmp xchg (bad) mov (bad) notb daa pop outsb cmp xchg aaa dec out mov dec xor sub xor jbe adc (bad) fs stos mov lret lods jnp out mov bound adc jle in sub out push push cli jno (bad) and js stos sbb and cmp icebp dec imul pop (bad) mov push xchg pop lock pop and ficomp mov add push jecxz push scas mov add frstor mov loope rorb pop push mov cmp push dec sub sub pop div ret sbb ficoml mov insl pop mov or or or jno jl leave ljmp scas xor sub mov test mov test xor pop sbb add in mov jle sub insb lret mov pop (bad) and add inc testb xor jne in push mov inc adc sarl imulb or jne mov xchg aas dec leave jae jge popf (bad) pop sti cmp sbb pop jp stc dec cmp popf xchg mov mov jmp in sbb rclb mov dec xor dec sub ss js adc aad lahf addr16 fild movsl lcall std enter dec mov push add add fimul into jecxz rorb add sub sub adc sub paddq out rcrl int rcl sub rdtsc negb movsb push and or xchg test and fcmovb dec cmpsl lods dec ret or out inc jo cmpsb dec ljmp daa lcall aad mov push sub lods rorl ret sbb or sub add (bad) push and cmp jl icebp cwtl pusha or sub lcall inc jmp hlt jmp (bad) mov dec sti inc and out pop out in mov mov dec jb sub add mov cmpsb dec mov pop mov xchg icebp fs out adc aas popa add jns jmp iret rcll or (bad) mov mov sub test lods loop int3 lahf jle jmp (bad) xchg mov dec and test mov pop mov sub mov cli mov adcl out das ret cmpl ret pop out sub or aas fs (bad) jb mov push hlt es enter pop push aas dec jbe gs pop pop out pop add imul mov in rorl or dec int3 mov adc xchg and js out adc xor cwtl ljmp aam push adc shl xchg jp push push mov lret cmpsl sahf adc scas repz clc enter mov (bad) fldpi aas cmp aam insb arpl xchg imul xor ljmp loope nop leave jl inc sub or pop xchg icebp int insb add push pop sahf cld mov push add mov and sti loope sub imul lret decb pop out fisttpll scas pop (bad) scas sub adc jge xor leave push daa cmp out mov pop adc inc rorb jp sbb lock lds idiv cmp loope jp cmpsb dec cwtl xchg shrl in adc and movb or rol sti stos negb dec mov mov mov adc push insl int3 inc and ret inc loope je fs out fmul add (bad) cmpsb push sub mov in int3 xchg nop cmp (bad) xor xchg scas lret mov add (bad) into jle test mov xor mov xor es inc jbe int3 (bad) gs mov add test das jecxz pop imul movsb mov jge pop in cmpsb mov div pusha popf call lds into dec and pop xchg pop shl xchg adc mov or dec (bad) mov add or ljmp test shll stos add sub les into scas out dec nop pop rcrl in ret (bad) loope jl or mov adc sub out mov adc mov inc dec repnz sub in inc les xlat stos (bad) mov pop ror xchg inc cmpsl inc lret mov nop outsb jmp jns nop inc dec scas adc enter enter cmp aas in lods xor mov adc or pop sarl mov rep dec cwtl adc mov push ret call sti sub xor int3 sbb lock repnz (bad) mov lret mov rcl sub xor pusha icebp int imul fistpl xor pop (bad) rorl jmp icebp lahf out daa or (bad) in mov iret xchg sub mov outsl into jmp out and add mov xchg outsb sub cmp and jecxz adc outsb movsl scas sub push dec xor add or stc jno ljmp sbb sarl cs cmp stos cmpsl jle or or and push sub pusha xchg push popf push cmp cmp dec orb jns mov movsb scas dec enter dec mov jmp sbb push data16 dec cmp out out mov mov stos scas pop jle ljmp loop test clc repz mov inc and and ja (bad) xchg hlt jne sbbb rcr icebp xchg push cmp cmp add jecxz pop mov jb add or int pusha pop cmp mov or iret xlat pushf pop xchg mov cmp sub (bad) sub xlat mov sahf out into mov push scas sub cmpsl xchg inc (bad) lods (bad) mov xchg mov in ds out out imul enter lods mov jmp popf rcrl mov mov xchg mov cmp xor aam lret (bad) daa (bad) pop inc xchg scas (bad) inc out inc pop ret jmp test (bad) jle in ljmp xor out stc or repz fisub imul out dec push mov js dec sbb leave xchg mov mov hlt call mov add pusha push mov push aad notb sub testl pop sub ret mov mov push jae add pop xchg stc clc nop xchg test sub push or stos xchg mov sub sub adc jmp rcr sarl mov push pop dec jp mov xchg push iret sub in outsb pop popf jl jns jle in mov and insl inc mov lret ljmp ljmp mov push lret xlat dec mov test daa mov clc dec add pushf cmp out stc daa xor mov sti mov xor and movsl push jge out clc jecxz stc cmp jbe push jbe push add mov or scas shl bound icebp pop mov in dec lret mov leave push dec and sti xor outsl mov dec test add cs inc lock loope ljmp imulb popf mov ljmp icebp repnz fmull mov aam das add sub inc out cld sbb int3 xchg jmp incl fsubrs dec fistpl mov push mov clc lret (bad) xor js cwtl sbb inc mov pop push fldcw dec sbb xchg ja (bad) roll dec fcompl cmp fwait enter dec and mov aad into pushf test mul cmc and inc jns (bad) lret xor dec cmpsl mov pop out dec cmp mov clc xchg dec test stos lret mov dec add repnz mov push dec jno xor js (bad) mov out lds iret test daa repz cmc lahf pop pop push pop (bad) (bad) jmp mov (bad) mov mov dec xor stos cmp cli ret loop loop jbe push add sarb repz (bad) je xor pop movsl lret ljmp enter mov (bad) adc stos mov jl and adc mov ret jge inc push lock mov call aaa cs push lret gs out cmp and sub (bad) test scas lods ret sub ret sub mov push and cmp sub lods pop daa mov jl inc pop into jnp dec dec cli (bad) fmuls mov stc loop js dec adc xor div cmpsl aad adc (bad) jne add cmp enter je sub lret mov mov (bad) outsb gs mov cli mov notl es mov (bad) fs dec andb jl (bad) idivb sbb ficom stc (bad) xchg sarb dec lods push sub inc (bad) pop mov sbbb mov fdivrl and mov loopne fidivr mov sub cld or iret jmp sbb mov sti popa in testb and or icebp pop test rol sub and imull pop sub popf mov add and adc sub enter (bad) (bad) mov cmp dec (bad) xor push add out adc loop mov es sub lea xor pop sub jns sub sub xchg scas out dec lods in mov xchg enter lock push fcoml pop add daa add xlat adc aas into aam push jbe jp inc adc (bad) gs repnz aam dec js loop xor cld xor or das cmp adc stos sub faddl push cmp rclb push out mov (bad) loopne ret mov call daa stc dec mov or loope inc xor dec mov sbb pop outsl xorb testb inc fadd ds (bad) fnstenv cmc xor push push mov sub xor repz mov (bad) rclb cmp inc lds ret mov std xchg leave sbb jg cld xor mov mov pop stos repz mov add jecxz push or mov push repnz dec cld insl push adc mov pop std les or lea cmp push sbb outsb cmp es call es jp into mov (bad) jge icebp jbe iret add sbb push aad data16 or sbb xor or sub pop enter xor std leave fild incl iret xchg pop push sbb mov mov xlat lds push jmp jns rorb xor sbb pop pop leave dec dec ljmp arpl sbb sbb movsl loope push xor push stc cmp mov and jmp test inc lret sub push jle push bound inc movsl out jae mov dec addb lahf (bad) mov lahf xchg repnz pop mov sub lret sub mov xchg and jbe add xor cmc dec sub mov aaa cmp test (bad) icebp cmp and fcmove xlat lret icebp fsts notl mov dec mov out mov test (bad) jne (bad) cmp les ljmp cmp outsb mov and sub push xor push pop imull (bad) daa (bad) repnz (bad) dec mov (bad) xlat adc cld loopne shll pop fstpt and add fstl outsb fidivr scas fs dec lret jmp sti outsl pushf repnz adc fmull cmovge jmp jle or ret cmp mov push push stos (bad) jmp pop lds outsl in and cmp pop inc xor clc jnp and out adc sarb cs idiv pop push test (bad) mov and test icebp ljmp mov or xchg das call repnz mov mov pop das inc or pop rcr scas xchg inc (bad) xor mov and (bad) or js test loop leave or xor push stos mov pop ja xor jl leave mov push daa pop mov je daa sbb mov push push dec mov push pop add mov or nop icebp repnz sahf xchg out or jb jnp daa jno dec aad scas lahf hlt dec sbb cs push mov je mov pop xor (bad) mov xchg xchg and pushl xchg push sub out mov mov lea aas (bad) pop rcll dec data16 call dec mov mov fdiv test mulb popf fnop les out mov pop cld lret xor xor xor insb std push pop pop and cmpsl xor xor mov out sub adc or ret jge mov sub and or or rclb ja dec fdivr xor aad scas and add pop decl out clc sbb inc rclb xor sub mov pop jmp ds enter add and or add mov leave repz jnp push je mov ljmp loop test lret mov lret int xchg lret xor sub sub aad xlat fldenv sub (bad) incl cli idiv test lock cmpsl out push outsb jmp loop jne (bad) pop outsb sub cmpsl shlb fbstp into insb push xchg cmp inc pop sub in sub lret aam shll scas and lock adc ljmp jmp stos cmpsl test add jle inc leave cmp mov push pop push push xor icebp or cld ds or pop pop test push scas gs lods jae popf test test xor imul frstor pushf cmc pop jmp mov stos push mov rcll cmp (bad) xor sub mov sbb pop ja push inc inc insb xor mov jmp pushl inc mov xchg dec mov pop mov dec scas or xchg dec jg and cmp dec jle (bad) cltd push outsb stc iret mov push pop push inc xor jle mov and and aaa lret cld xlat test pushf mov push xchg loopne (bad) jg or xor and push (bad) ja (bad) and and xor pop fwait dec ja aam stc or test (bad) imul iret mov mov aad push lds mov ss hlt (bad) iret xor dec stos mov outsl loope (bad) idivb cwtl rclb rsm pusha xchg fidivl and mov sbb pop or mov add sub outsb xor rcl ret test pop inc callw jmp pop js dec fscale mov or jg dec inc (bad) pop lods stos dec lret push cmp or imull movsl xchg cmpsb inc mov jmp insb jo xchg mov sbb push repnz xchg pop icebp push mov adc sub sub push pop mov jnp pop pop (bad) or mov in cs sahf out jge jmp lahf push inc sub orb out daa add pop lods enter lcall jne fcmovnb movsl dec dec cmpsb push push or fisttpll fildl sub shll add cmp sub mov push mov pop rcrb sub xchg or push cwtl xor test and shr sub mov or cmc add bound test xchg cmp push lret std gs stos sub jne push cltd pop in xor pop push fstl pushf scas lcall inc cltd movsb jl dec out pushf in push lods cs mov sbb cmp adc adc and lret xor mov out and test (bad) sti subl rol mov cltd movb push mov dec push popf icebp and icebp add pop xchg push and fs cltd iret cmp pop sti sub push and rcr mul movsl push gs or sub clc add xor jg push cmp leave mov shl (bad) pop cmp ret adc in dec pop xchg push das or sub or (bad) push pop push idivl mov repnz les scas lea mov lds or (bad) shrb push popf sti mov jle daa aad adc sub jns repz movsb xor add mov outsb scas lahf inc mov pop (bad) shrl push or leave outsb jno movsl fistl call in mov rorb int3 popf subb mov xchg paddb std push or xor sub daa sbb clc insb mov xor fisttpl fisttpll nop je lret sbb aaa add xlat daa pop fld fidivl pop pushf pcmpgtb cli fmuls daa or inc cmp add jle mov push or mov xor pop adc movsl test into push dec mov cmp scas xor add sub scas mov inc lods das rcrl sub pop out xor jle fnstcw push xlat push fldenv adc mov xchg notl and test adc and test or lock dec xor js rorl mov push outsl dec incl lret pop adc jmp roll xor loop xchg cmpsl rorl sti mov incl ja js ds cmp lret lret dec clc (bad) (bad) mov mov sub mov adc inc sub push (bad) or lcall movsl ljmp out push sub out into pop adc sarb dec jecxz fildll add andl leave mov das cli sub (bad) clc or aam rol adc enter xor cld dec xchg out cmpsb clc or cvtps2pi (bad) out lret xor adc test lret sub inc inc push cltd (bad) xor iret icebp push cmpsl or mov jmp pop sarl pushf xchg out das mov inc popf aad lods jo loope mov cmp in movsb (bad) repz xor push test pop sarb push ror and xor shrb push enter cwtl and mov mov lret test repnz mov add leave sti sub xchg mov jns ret or and mov dec mov (bad) sbb orb std ret pop cltd pop push scas mov popf inc das push add mov ja je ret cmc pop pop shr mov fcomps mov lret stos sub imul mul ret dec push add shrb mov pop dec movsl (bad) mov dec mov dec adc xor movzbl and call cmp (bad) popa mov and sbb and adc test shr cmpsl push shrl inc dec push xchg inc pusha mov xor nop rcrb mov stos push mov bound (bad) push xchg mov sub push xor xor jp mov idivl sti ffree xchg adc stc cwtl int adc mov jge xor mov dec test mov das das repz xor nop lret lahf inc shufps push push dec mov xor ljmp cld loopne push mov lret mov xchg push mov xchg ret arpl mov add fcoms jecxz pop pushf (bad) daa std sbb sbb xor dec ss or sti sub jge ret dec lret mov or pop pushf imull push outsb jb mov push sub push lcall cltd jmp cmp stc in popa mov cltd pop icebp add (bad) sti gs adc in nop movsl cwtl mov and pop fld dec out push pusha mov adc pop movsb ds add frstor inc mov pushf in and xchg lds sub leave repnz ret in mov daa and mov pop or sub add add cmp or mov daa cmpsl fs add repnz or jns movsl std mov dec fs lret mov sub or ret fdivrs mov xchg (bad) test in mov sub loop pop mov dec mov (bad) push movsl aaa add ret dec popf iret adc scas push inc mov xchg repz mov add mov bnd inc ret add sub xchg pop (bad) gs inc sub add pop fcmovnu (bad) out pop ret mov xor popa mov pushf and add repnz out xor add pop sbb add xor sub jno out and in lds or dec cmp ljmp (bad) pop les lret sub notl imul inc shlb imul xor xor movq and je cwtl and xchg jg xor cmp in test (bad) cwtl xchg gs sti mov stc lret dec test mov (bad) mov adc insb inc mov sti (bad) and add push je imul int3 cmp aam push das or in movsl jg mov xchg mov test hlt repnz and and mov mov out test in pop sub xor add stc mov xor dec and clc mov ficompl aam ds jecxz sub out imul cld test aas repz (bad) or fildll pop adc or dec pop fcomp sarb nop cmc fisubl cwtl sub outsl leave out xchg mov or test sarl and or mov sbbl loop lds sub mov or cmp jge push mov or mov out jecxz daa sarl jbe (bad) mov jae test daa xor pop push xor roll sbb xchg mov sub add mov bound jne mov mov mov scas ja adc scas cmp and jns shlb imul fisttp leave outsl stc cltd lret out pop xchg in add xchg inc mov in popa sub clc imul push in xchg out arpl not sub and sti xor fstpt dec add (bad) mov xchg xor mov xchg dec sbb jo sub js xchg out sbb xchg and test lods adc adc stos mov imul mov data16 ja jne or loop jne xor lret leave clc pushf outsb xor das lea fwait dec sahf (bad) das insl add or imul daa daa cs xor xor cmp repnz xchg (bad) xlat stos push mov pop and or pop sub cltd ds test fnstcw xchg xor mov data16 fdivs div mov push and jge jns aas or testl (bad) js add pushf daa inc pop mov ret pop adc rol sbb add xor (bad) mov dec sahf incb mov adc and xchg enter divb imul push hlt xor test or mov mov xchg shlb mov dec pop pop sbb sub out mov inc adc movsb pop lret stc inc popf xchg sub int3 mov loop imul fidivrl inc add xchg jl cwtl insl jmp xchg jnp sub inc ret sub and icebp mov mov or or or scas loop cwtl addr16 sub and nop les fbld ljmp mov imul push xor sub adc test pop negl mov sub and sub stc adc mov dec lds lock mov lret and icebp fwait push adc jb loope cld cs adc stc pop inc ljmp daa pop iret add cwtl ss mov in int3 inc divb sbb mov push push jg stos pop pop add out mov (bad) dec dec neg adc leave pop insb test and mov xor xor lahf out xchg pop xor icebp sbb lahf ja pop mov pop shlb push and or and aaa sub adc mov push shl leave sub fsts add int3 dec mov stos adc stos jb data16 lds stc pop mov bound cmp inc push cmpsb mov cmpsb push jge sarl enter scas cmp (bad) (bad) gs mov not sbb mov mov pop (bad) out inc or decl push ret and push adc decl push mov das or inc iret and or lret mov mov int mov rol jecxz sub shll mov add mov and dec out mov cld push movsl out mov lds or pop push lret jl inc or mov mov repnz andl xchg or adc sub and mov cmp ljmp cmp cltd (bad) insb dec xabort push xchg lret gs fs int inc out mov adc jne lds ja sbb aas das and adc jle xor push jle adc mov repnz lret sub sub jmp in cmc xchg mov icebp xchg inc (bad) xor inc fimul into dec in and shrl and jb or ret (bad) and leave fidivr cwtl mov mov cmp js or mov fcomps mov cmpsb fisttpl ficomp and insb adc call (bad) cli mov jmp push movsl or mov adc ret movsl dec add fidiv (bad) aad jle cltd cld add out and mov repnz fsubrs mov pop mov cmpsl push adc (bad) cmp (bad) icebp push mov mov movsl cmc mov nop (bad) popf adc xchg and inc and xchg loope frstor and dec sub enter or (bad) sahf push das fmul sub outsl test xchg cmc cli mov and stc pop les mov dec or out popa xor inc bound fnstsw lret cmp jmp pop xor cli frstor pushf push sub jno ljmp aaa (bad) ljmp xchg lock pop sub mov or inc and sub in dec aaa int3 or icebp and mov mov fmulp and lahf aam mov aam (bad) repz xlat jno inc mov or stc push dec jle or (bad) (bad) rorb mov inc (bad) mov cwtl xlat or sub (bad) loope sub (bad) xor and out jne pop pop jmp aaa and dec jp fxch and xor cli gs mov sbb aam push repnz mov cmp shr sub int3 outsb push mov inc mov mov mov shrl dec pop mov sub mov cs xor or mov call mov sub jne ljmp xor dec add ret lock stos lds mov jbe dec mov jae scas pop inc push ret and push cmp and sub jns lods fwait es das dec rclb dec mov cli insl xchg jns mov pop xchg fcoms sub ret pop out gs dec imul push das and fs or cmp stos pop icebp push dec pop dec (bad) fwait int and (bad) mov pop add imul adc or pop lods sbb ficompl push xchg sti (bad) pop lret adc inc aaa or (bad) aad imul mov jmp jne mov int cmp je mov cltd add mov (bad) mov adc jns adc hlt cmp lret lret xlat pop mov out stc xor cld or push inc test mov int fildl mov pop mov push inc dec sub lea test jmp out fstpl xlat or pushf (bad) repnz jg and xchg cli add jl jmp cmp pop xor lock pop xlat daa and dec mov stc or sub jnp lods clc pop dec jmp into add lds cli mov repz jae cmp mov sub cmp imul leave sub test pop scas fdivr xchg out imul cmpsl jmp jbe jmp xlat dec jge andb mov in lret sub mov or or test lods cmp jno cmp xor and jmp (bad) adc add add popf popa scas xlat ja dec xor in imul xchg stc (bad) rcll jecxz xchg adc andl imul cmp mov leave faddl xchg or fistpll xor rclb pop or (bad) xor (bad) out idivl int3 and xchg xor ror push outsb inc cmpsb pushf xor dec sub sar mov imul in mov lock clc pop xchg stos mov pop (bad) mov pop pushl loopne pop cmpl mov addr16 dec iret adc push or jnp adc pop aas repnz mov out out sub add orb xchg test in test adcb xchg mov adc or and stos stc push (bad) repz and lods fist jnp push cmp loope or xor pop (bad) mov scas cltd loope and xchg fs bound adc fist sub cli adc xchg jnp sbb (bad) jmp push cli or mov add mov out push stos sbb cmp inc out dec fadd pop add stos out cmpsl mov or jo popf adc xchg push sbb xchg or sti fs (bad) mov jae cmp sub mov pop mov negl xlat clc lret lahf jne push xlat mov add int3 (bad) icebp xor sbbb in stc mov push sarl cltd lds leave cmp movsb mov std push mov push lret hlt das adc test popf jmp add test movsb sub ja les xchg lds xchg out cli mov adc mov scas pop mov (bad) sahf and push mov pop or repz frndint ffree and or dec les xor sub xchg add mov lea rorb lods jae xor nop mov pushf stos or out notb std sbb cwtl das xchg adc mov sbb mov ljmp inc mov cmpsb fs loope clc and int in aas negl push repz aaa mov imul xor sub jo dec ret stos or dec push shrl popf push fwait movsb loope fisubrl push (bad) or jnp lret cmpsl xchg jp dec or outsl xor data16 xor mov test addr16 mov out mov sbb xlat xchg iret scas out dec int3 das iret and or (bad) mov addr16 xchg xor or mov dec test mov pop mov jne mov lret inc sub dec (bad) call pop xchg addl jmp mov dec sub push mov mov popf sub (bad) mov fs mov icebp shrl mov mov jle imul mov cmp popa sbb jnp xchg movsb cli int ret enter pop pop xor and xlat test mov movsb cltd mov imul sub add mov mov sub rorl nop lock stos outsl or lret movsb jecxz cmp fidivr sub cmp xor add xor or jp lret xor and daa push sbb mov gs and imul push popf sub cmp hlt pop xor inc leave ds mov imul jb fist jmp xchg pop popa loop and jmp dec mov mov sub pop add xor and jge dec and pop fs out mov adc sub jmp enter inc clc (bad) cmpsb push mov cld jno add and inc dec xchg fisttp jge push mov sub mov push push xor scas push insb cli mov (bad) mov daa xlat in das sub jns xchg jmp pop stc stos cmp (bad) lock rcll fldcw mov stos pop mov sub add and xchg dec mov popf pop adcl subl and sub xchg pop mov jmp test stc xchg jle mov add mov xor jae sti mov xchg ljmp (bad) repz stos or jns dec cltd lods out aas (bad) mov lret jle jmp inc (bad) je mov pop push dec stos jo mov or (bad) push jae cmpsb add sbb cwtl mov or xchg into xchg leave je pushf pop dec add and mov mov mov add cs cs push xlat test ret and mov mov cmc fdivrs sub mov inc mov mov jb sub ljmp jb xor (bad) das cmpsl pop mov or ljmp lds mov ljmp cs lods das xlat scas or (bad) jmp mov pop sbb push pop das xor mov ja cmp cmp call or fs push cli and es repz xchg aad xchg push push (bad) (bad) scas jo pop push mov jle mov cs mov and jg push mov and rcl xlat mov jne aad inc in dec pop mul shll sbb ljmp (bad) test mov jne add jecxz pushf loop imul iret aad add sbb out push out lret ljmp sarl sub push xor idivl (bad) xchg pusha jge dec and push push pop pop add call iret rorl iret add inc xchg fldt in add nop xor inc loopne movb cwtl pusha add or add inc mov in mov xchg pop dec push mov or test or clc sbb inc in or rcrb add pop ljmp cmp nop out xor pop fnsave jae inc ljmp adc es aam (bad) flds dec int dec fwait mov push incl pop not shl adc sar mov int sub cwtl daa jne loop insb sub inc imul dec negb add or adc sub mov stos addl or push mov cmc push cmp mov rorb add lds sub fcoml jnp adc pop jmp sbb pop and bound repz adc mov mov repnz outsl xor jmp clc mov cmp stc sub xor push and or mov mov into sub out repnz scas fnsave in adc mov or push insl sub lods and adc movsb mov xchg leave fisub jmp push or push pop sbb push in mov iret pushf scas xor sub xor add ljmp xor cmpsb test dec sub sub pusha adc sahf scas and pop adc scas repnz (bad) out add std out mov cli enter add (bad) lret nop adc adc adc mov and scas nop movl jnp pop repnz sbb xchg fs sbb movd (bad) mov pop push mov mov or xor aad je inc popf out dec fidiv pop lret std mov add xor or inc mov sub push jns imul or movsl out cld test loope and xchg sbbb or fs (bad) (bad) mov mov icebp and jp mov xor xchg test cmp dec test jb int3 stc dec (bad) lret xor movsl fnstcw sub add adc int3 add lret cmpsl cli sub div lret adc xor mov sub cmp jae sbb daa movsb movsb dec leave hlt mov ret jnp or cmp ss cmpsb pop pop stos bound add or aaa sub sar xchg leave push push dec scas (bad) push dec icebp ljmp xor outsl cmp call jb add (bad) mov xor ja inc idiv test movsl cli mov sub mov rcrl jbe add (bad) idivl cld or (bad) add sbb jmp (bad) and pop test jle mov xchg pop out cmp ret push negl mov stc inc pop lret in dec mov dec test inc add xor decl ret mov out notl mov fbstp movsb lods push push shrb (bad) in sub sbb test (bad) stos lea inc daa cmp dec popf (bad) mov (bad) pop jmp push cmc (bad) decb mov fwait and das std sbb mov movsl sub or and (bad) dec push add or xor jle lret sbb jbe push div inc (bad) out lods mov dec les jmp mov pop xor jg out (bad) sub and push insl popa xor jae mov and fadds sub or cwtl cli xor imul sub das mov das xor fdivs mov push idivl pop push mov lret inc dec mov pop nop and jne ljmp shrb fisubrl (bad) (bad) pusha lds push jmp fstl mov xlat and push icebp es inc dec aam rolb insl sub add (bad) popf (bad) and aas mov lods sub xchg pushf loop cld (bad) leave sub pop shrl ret push bnd pop xchg lock pop push and lock push dec push lret mov in sub jg jmp das dec cmpsl sbb out decb or sti jb push jl (bad) out sti out lods mov pushf mov inc sub add or sub popf push jno pop int3 arpl or mov add jg jmp and pop mov stc lock pop mov fisubrl mov inc or lret jo insb xchg and cmp gs aad scas lahf dec add dec inc dec mov xchg pop jmp mov mov (bad) jo movb lahf shl stos (bad) outsl std mov (bad) mov dec mov jmp or (bad) into and es rolb cwtl into or cld mov sti jl or ret das jecxz inc and push mull leave lret lds scas inc fistpl mov lret repz pop or dec in jnp sub xor adc jge or out lock pop sbb and cmp ljmp out loop shrl call aaa fldcw divl vmovaps test ljmp out fadds scas sub cmp adc cli lret push pop pop out pop cmp jne pop dec mov sarl js lahf jo dec rcr test aad jle pop add sub (bad) imul cmp mov xchg sbb aaa jl push adc jl rcrl add push pop push mov fscale pusha ror std popf pop cmp add adc and (bad) stos loop mov out cld jl pop idivb mov add and pop pop pop pop sbb pop popf jne scas idivb xlat ljmp aaa scas ds or mov and dec inc pop cltd fwait mov sub lods das je pop push in jp pop add and mov push adc push cmp mov push jge out fnstenv aas cld cmp xchg mov push (bad) mov stos lret mov clc gs mov jecxz adc push inc xchg fcoms lret pop xor and sarb pop dec scas mov pop lock mov imul sub and scas xlat push aam rorb outsb int3 fs cmp pop popf mov mov imul enter sub daa mov hlt mov mov mov cmc and jb test jbe push lret ljmp nop test xor and cmpxchg8b jecxz lds and cltd xor enter inc and mov and jno inc divb out test mov ficom sub mov sbb add jle push (bad) mov andb lret sbb test scas sub repz sub mov or add pop mul or ds lock cmp (bad) xor push loop xor sti iret movmskps out xchg test dec and repz lods aas rolb mov out and daa pop (bad) pop notl mov insb adcl test loop ret mov adc sub (bad) push push or lahf popa and cld inc inc or jne adc (bad) mov int sub outsl popa adc cmp outsl movsb cld push pushf mov popa es out out aaa mov and rcrl mov jbe (bad) nop pushf test pop mov cli in das test sub mov pop iret dec (bad) (bad) mov aad mov jne add and ret mov bound (bad) and or test add fs jae out push xchg xor in dec lret sarl repz dec (bad) pop inc xchg repz jmp xlat fist sub xchg ss xor repz in xor call and jecxz pop dec loop lret out mov dec cmp mov jl mov add or jp cmp shrl shl adc cmp adc xor dec and pop xchg das cmp dec jns sub cmc cld out das add enter cwtl shr xchg fdiv pop cmp loopne mov cmp mov mov sbb ja mov cmp xor mov mov add jbe adc push mov or (bad) scas je and sub push (bad) mov add push pop xchg add mov jno cmp repnz (bad) adc shll clc push call icebp repz es lods xchg (bad) test movsb mov jge cmc xchg xchg mov or vmovq inc adc int ds sub cmp dec cld out mov jmp out sbb add popf jno cmp (bad) dec imul lds add repz inc sarl (bad) mov je gs xor cld ljmp add movsb xor mov jg mov jecxz outsb cmc sub add fsts xadd cmp sar and outsb lods mov into dec shrb sub and scas xor xor xor sti jb mov jg pop sub or gs pop xchg jnp jg loopne sub jg or fstp push in sbbb sub jle pop push scas sub push xor scas loop sar inc adc mov pop dec rcrb fcmovu sub dec xor dec (bad) xchg out jle push push aam imul das out sbb outsb das mov pusha mov cmpsl xchg stos into into adc add sub sti mov jge (bad) mov lahf je pop push inc xchg hlt pop pop jge mov ja cli aam pop mov cmp mov pop cmp mov lea call out (bad) in hlt loope sub insl inc pop sub pop xchg fsts sti lds leave hlt push daa (bad) es or data16 or or pop mov (bad) lcall fcom negl sub xor mov adc inc popf pop pusha aas mov in ret aaa xchg je test mov rorl mov sbb pop xor or sub daa jnp cmp pop or outsb lret loop outsb imul fsubs popf cmc adc xor (bad) out jge mov ret in sbb faddl imul jge dec fcoms push rcl adc andl mov bound jg mov leave or aad adc lods pop mov pop add jle jb orl mov jmp jbe les push rorl mov shrb test lret sub mov xor leave cli push xchg adc cmpsl and xchg sbb mov sub fwait daa movsb adc (bad) notl adc (bad) lcall lret fwait js jmp (bad) scas xor add movzwl cmp (bad) arpl into pop or sub int3 es push xor nop jae sub andb in out lret (bad) mov add push pop lret inc mov pop xchg flds xor xor mov (bad) sahf rclb cld icebp and xchg sub jnp lret insb mov repnz aaa aaa push lret and jns test mov cs jle imul fstl sbb (bad) inc ljmp push popf shrl lods and shl xchg scas dec les or loope das lea add push or cs ljmp scas out xchg repnz mov mov scas and dec repz add sbb pop mov or jae adc xor mov cmp push out inc sub and mov mov mov dec ret cmc flds loope jne cmpsb stos dec loop dec in imul inc ss adc out int adc (bad) adc dec in es xor ficompl push pop ret mov or (bad) scas pop push lods sbb repnz xchg pop sub inc cld rcll (bad) popf fstl and dec js repnz inc mov add mov repz or mov in das and jns loop add or pop (bad) mov cmp cmpsl inc daa in andl add popf rcrl das stc xor lock (bad) push mov sub ljmp sbb push and mov dec lock jle sbb ds repnz fmuls and xchg dec lret inc roll mov pop dec pop (bad) fstpl xchg inc or icebp imul rorl push leave in stos jo je aam or mov cmp inc and sar lock pop mov fs je out sub and add scas jne adc inc xchg lods jecxz jmp push jbe cltd icebp imul pusha add sbb test mov cld and adc mov sub divb sahf gs sub nop iret or mov out (bad) sub sar dec pop adc ljmp ja imul cwtl lods and mov icebp xor fwait push rclb (bad) stc lea and xor inc xor add (bad) out sub add mov or push cmp ficoml sbb neg imul adc shrb mov and sub mov mov das call jno sub (bad) dec (bad) imull mov mov cwtl or mov lret xor mov (bad) jnp jl mov out jecxz sub sti sub int3 inc pop or mov dec add mov inc dec ret lret sub idivb mov stos popa push or inc and add add or mov add fbstp fcmovnb jg pushf mov shrl mov aaa sti loop xchg pushf data16 xchg aas dec imul je mov dec lahf rcrb pop popf pop test pop pushf loop mov ljmp sub call pop addr16 sahf clc out adc stc es stos lret push and mov mov (bad) mov cmc xchg sub dec scas dec or mov xchg sub mov mull popf and push jmp mov into sub jecxz mov notl dec mov fstl cmp and clc jnp mov or dec or and adc jns ret outsb (bad) push pop pop push push mov cbtw aaa test mov int popf (bad) loope push movsb mov int cmpsl mov scas add sub xor lret cli sub ja es lret (bad) and sbb fiaddl mov shrl jb jno int3 call into pusha xor stc xchg sub add pop pushf stos adc fwait dec out xchg fnstcw mov sbb cs dec daa stc xor push mov or pop or mov pop imul iret pop mov xor andl movsb sti aam add or ljmp push xchg lds and xor stos (bad) cmpsb hlt clc mov das notl xor das mov add mov pop or xor into jne adc mov pop inc dec push arpl and out ss pop fisubr jo inc pushf xchg loope ds mov ret frstor and sub and jb add jne adc fcmovu and into outsb es add add or mov jno popf xor cld in pop (bad) sbb dec ret ror push inc sub xlat push jmp dec je mov xor ljmp movsl mov xor (bad) into call add mov xchg (bad) notl sti decb inc divl ret jne sarb mov loop fsubl pushf dec dec xchg dec push jmp lret icebp mov dec popf dec push movsb repnz pop lock out lahf fisubr push sbb outsb sub outsl idivb imul loope add xor test fistp mov aas xchg jmp out ljmp mov dec pop add aaa pushf mov imul xchg inc stos pop pop cmpl sub adc sub test mov jb into not pop movsb ret lret idivb mov stc add pop cmp lahf jne xor (bad) cli outsl mov pop mov mov test sub ljmp insb mov sbb push lret test mov lcall cmp pop int3 insl (bad) xchg ja push ja cmp lcall and lahf pop sbb repz dec lods stos lret rcl les ret push je arpl xor inc ret fmul jb leave and notb dec les pop scas push imulb xor lret fstpt jb out outsb leave cltd and insb icebp sarb push outsl in inc sarl dec movsb setg stos movsl cmp sbb lret repnz mov cmc and sub cmp icebp sti gs sub or je fcmovb xlat pop sub stos xchg aam jmp ja xor (bad) je mov cmp insb or pop jecxz push mov ret pop add (bad) mov add imul lret adc ret jle imulb xchg mov fldenv call leave mov xor ret or out push mov fucom (bad) (bad) add aam pushl xor pushf inc addl pop mulb xor fwait inc mov out dec cmp xor in or shll mov dec stos lret test mov add sub mov pop push out lds notb sub push dec popf idivb add and sub mov xchg divb inc adc add inc pop jns (bad) out and and fs sbb add push fs cmp out push test mov and mov test (bad) and mov cmovl push add jmp mov test stos mov jle sahf (bad) test loopne ss push pop imul xor clc shlb leave cli mov cmp mov fcom nop push mov jno bnd adc (bad) xor mov push aam push idivl jmp push mov imul sahf or insb jge test ss imul mov out movsb push or jecxz cmpsl jo in mov inc pop and push lret xor mov gs les icebp jae mov xor int3 das sbb pop negb adc aaa rcrl dec pop mov ja dec pop leave jb jae pop sub je or sub adcl and stos cld add lods fisub fyl2x pop xchg sarl jnp shl hlt mov pop mov mov mov call jmp (bad) lahf rcll cmp popa faddl pushf orb pop mov mov push pop sub cmp xor cwtl fiadd movsl in cmpsl inc movsb push cltd mov mov loop dec push (bad) (bad) cmp xor push (bad) fist (bad) ds jb into lods and (bad) sbb rcrb mov sub pop mov mov or ucomiss into jmp cmp push adc in lods and adc xorb imul repnz pop xor mov test or decl pop cmp mov fisubl push push cli push xor ret ret aam leave lock xchg out dec xchg xlat mov jno mov jg adc mov adc mov pop xlat push mov push daa ret push xchg xchg dec out mov in lods xchg scas test cli lods cmp das daa and or pop pop gs xchg iret lea push cmp mov je xchg mov and sub fsubrs sub pop cmpsb jmp fldcw je test aaa sub enter sarl xchg (bad) lea xchg dec out fisub cmp daa xor daa jge ficoml jo mov rcrb xchg sub lret pop pushf pop ret dec andb jno dec xor and negl xor pop aas out sub sub inc pusha push dec lahf pop fadds cli or add xchg int mov enter out sub rolb or pop mov test mov pop inc dec push cmp (bad) sub dec mov xchg mov inc clc or sub mov adc (bad) mov jp out loop jmp inc pop out (bad) jmp lret lahf dec inc push or dec mov lock push push aas mov daa dec jnp (bad) fistp sub repz push ret leave cmc xchg pop jne jno mov jecxz test dec dec mov and fwait push jecxz pop stc imul and scas popa cwtl mov jbe push cltd cmp and jae jle leave je or sbb pop xchg lods adc out repz mov stc scas inc mov hlt jmp dec test loopne scas lret xor adc cwtl sub xchg std or mov add aas mov dec fisttpll movsl leave shll mov inc sub repnz xlat gs push movsb xor mov repnz lret mov icebp inc cmp jno mov and dec loop fsubl outsb and xchg lcall scas jge outsb mov mov and (bad) mov sub adc sub mov in or sbb lret js fcomps into adc jge or rorb lret sbb xor mov dec jmp fcompl ljmp jns fs repz sbb fidiv jbe pop xlat cwtl aas stc xchg adc add nop xchg xabort and and push push mov mov xor sub rclb aaa mov pop mov inc push add shrl pop fldl imul decb ja in loopne push pop mul mov pushf xor and and sub mov mov add mov repz push cmp add int3 cmp divl stos mov jnp push iret lahf jae cmpsl cmc mov ret push aaa icebp sarl and dec (bad) aam in inc ret inc cmp and jge mov jae das fistpl repz das cmp insb dec shll cli bound pop xor add dec je mov hlt leave mov adc and add xlat xchg xor cmc lcall roll scas mov dec loope aas je adc pop or popf loop sbb movsl mov in mov lahf push fidiv out add mov jbe push ja daa cwtl data16 xchg icebp mov rorb jnp push sbb add pop test in rcll mov scas pop inc bound decb add pop sbb (bad) cmp cmp and add mov or xchg jne sbb pop sahf add fistl insb es jp popf hlt jle or cmc shll inc jp popf out das and mov xchg scas mov pop mov xchg push notb test sti jmp jbe test dec stc mov pop push lret jmp stos sub ljmp loope push pop mov pusha out sub mov xchg ret pusha adc dec adc std xchg jecxz and xorb rcr mov jo mov jns mov inc dec jle leave cmc inc or add pop std push (bad) jmp sub ret jne (bad) call pop in push std rolb mov push add push shl dec jbe imul (bad) and sub push repnz or add inc and and pop mov mov icebp (bad) jle lods rcll pop lds out push lret orb fadd add fstpt inc ror bound (bad) lret iret push scas (bad) cmp ljmp int cmp das outsl inc inc jecxz dec or insl stos out sub sbb or adc call loop cmp (bad) mov sub mov iret jg sbb cltd cmpsl imul daa movsl stos bound and pop cmp out pop xor jns mov add pushf jb in imul pop adc mov icebp and neg mov test and leave sub (bad) (bad) lret push xchg xor aaa sbb andl and jb inc cli or pop nop push and add pop fsubl cmpsb in adcl sub mov mov add icebp xor xor incb mov repnz dec mov push push push clc xchg sub clc jnp xor sti ljmp pop test fs (bad) addr16 jmp jo (bad) ljmp dec mull adc bound decl and aas mov rolb loop sub pushf mov inc cmp shr mov (bad) mov in xchg add mov in mov int3 and repnz xlat ljmp outsl cmpsb popw cli add inc inc aam mov push cmp (bad) xor into orb jnp adc shrl iret xchg aad ljmp aad fldl stc decb test (bad) xor out or inc jno dec xor and shl cs sub mov cmp roll lods jge xchg ficomp jnp sub lock jp or out mov shrl shrl out sub mov xor aas sub lret or int sub pusha xor test ret and in lret cmp shrb sub out dec and pop cmp in xor in dec xor jl jne sarl dec xchg ret inc cmp cmp popa jmp repnz sub pop xor pop push pop bound sti jbe or repz mov sub cs xlat lret pop ret pop stos stos call lods test jmp das mov jecxz jno imul sub dec jecxz sub pop nop dec sub stos sub push mov out repz mov pop inc or push mov loop pop dec xor push test orb mov adc mov movsb andb mov xchg add xchg pop pop mov mov stc push scas fcomps dec div sub test repz sahf xchg iret lods nop and (bad) cmp int3 mov or mov mov push xchg mov (bad) aas lret arpl fidivr sub mov sbb sbb mov push add sub push in sub fs cmpsl inc pop mov fild sbb add inc jmp mov dec mov mov xchg insl cld daa pop cmp into pop and push sub sub cltd inc sub outsl lods jnp stos hlt cmp sub popf or dec pop sti int roll lahf rorl mov ja mov pushl in popf sti sbb or adc add jmp mov pop push dec cmc int daa pop cmpsb popa pop or dec hlt jp push mov pop icebp jge imulb xchg push leave test xor or dec nop iret and movsb sub xlat push jmp mov sbb sar ljmp or pop loop pop roll or mov ret test outsl int3 sbb and in aaa xchg test (bad) mov movsl jmp sub popa out jne mov push adc and imul mov dec mov pop test scas push or call cltd js popa push jp int repz int3 adc sub jp aas add mov enter loope pop adc decl mov pusha adc fiaddl adc xor mov fisttp adc repnz mov cmp or mov int3 cmp mov repnz inc pop (bad) sar inc hlt lret or inc mov das imulb repnz pusha js sub pop mov in inc movsb stos cwtl rorl cmp mov mov xchg movsb cld jmp mov (bad) out pop add rorl cs xor add cmp adc mov lret pop and (bad) push cli jns mov and jbe pusha sub push pop dec push lea and into out sub dec ret cld add dec sarb stc rorl mov stc adc fimull jae ds sti daa out aam push adc pop lahf loope imul adc hlt (bad) es lret mov xchg jno (bad) or insl clc fcom sti add xor mov icebp cltd pop pop sbb gs and jno inc push adc sti loop fidivr das repz out fs mov lret dec out mul cmp popf or sbb loope aas imul inc and mov mov mov int3 mov mov (bad) xor shl push in fstl pop loope sub mov dec fmuls out mov push mov les cmp in or dec xor sub mov fsubs dec sbbl int3 cmp loope subb cmp dec xor mov lds mov sub mov ret push mov sub push mov ret jno bound cmp sub pop fidivrl add xchg popf mov pop adc clc pop mov shlb pushl xor cmp sbb cmp lds xchg ret jno mov arpl test mov cwtl sti mov sarb mov xor lret cmp xchg jmp xchg movsl popf push orl jmp gs and add adc mov dec jmp cmp iret sub xorl mov dec mov lock sbb xor out into push xchg jg pushl add xor mov dec mov xor clc push sub mov push xchg push stos adc les jle lret sbb sti andb xchg jmp xor sub pop enter jg or test enter jge sbb and aad ja popa inc iret outsb gs test (bad) negb cli imul lods bound xchg sub sti repz xor push and fsubr adc jne mov mov lea lret inc pushf inc pop fsubs lods pop sub data16 inc (bad) outsl lock sbb or xlat mov test push imul or xchg in and adc xchg (bad) stos pushf (bad) and (bad) sub cli cwtl outsb adc adc mov adc pushf test stc sub leave pop jno dec fstps xorl sub jb pop incl jno (bad) movsl or adc jp (bad) out daa fldl sub inc jp or loope dec mov dec (bad) addr16 outsb push pop jno lock jbe ljmp mov xchg mov pop jne mov mov rolb xchg push xchg jnp ret push xor xchg pop mov lret stos xor test scas cmpsl adc outsb push add dec sbb dec mov xchg add scas lret add lods out es imull lcall pop imul xor lock xchg leave lret shr ret or aaa mov sahf stos outsl adc icebp loope das mov idivl gs ja sbb fist or cmp push inc cs ljmp xchg imull xor sbb sarl add sti xchg (bad) dec pop add xor dec and pushf pop cmp pop mov in jp out jecxz xchg lods orl mov add cmp or shrb out sub mov and lcall add xchg negb int and xchg mov lods push fidivl xor mov inc mov dec and inc (bad) mov sub sub mov fisubr inc jmp cwtl stc (bad) jnp push mov jle push jge or repnz and cmpb xor xor sub lods (bad) lret cli aas leave or clc stc dec div js sub pop je and loop scas je mov mov mov mov or mov pop cli push lods xor jl ljmp push mov test inc push or out shrl mov movsb repz ss ret xchg push push pop in movsl nop nop or xchg mov push jnp adc dec xchg lea xor into js pop inc (bad) cmc (bad) cmp aaa xchg mov stos mov pop lret cmp or xor clc cmpsl dec fimul out clc lea adc pop stos lret sub out xor idivl jle sub aad out sub daa mov jns sahf add mov fist cmp out sbb fwait aam lods push mov aad and das cmp js xchg push sub mov nop xchg and fdivrp (bad) notb cmc and sub loop in fcmovbe int fsubrs sbb jbe inc sub repnz (bad) mov adc and cmp xorl lea mov add mov sbb jp hlt in pop sub insb scas shr mov cmp das inc repnz inc loop leave das cmpb jae,pt mov or scas fucomp aas add (bad) cmp rcl stos and lods jmp mov lret fiadd sbb in add fabs dec mov jnp pop ret cmp or mov inc into xchg mov into or into aad lret les fsubrl jbe push sub in dec xor mov loope pop pop pop imulb fistl icebp gs dec fnsave dec jge stos jns mov pop adc inc (bad) fsubrs push sub add adc cmp cli cmp es jb loop sub in arpl out pop fs add cwtl sar pop xor cmp sub and nop xor std xchg lods mov sub test lcall push popf sbb out leave ljmp pop imul or mov xchg or lret mov push insl push pop xor cmp mov (bad) lods inc or jg roll js mov sarl dec loopne sub cli test into jecxz mov xchg xor daa xor (bad) roll mov cmpsb xchg shrl ret xor ss xor sahf lock xchg xor lea pusha mov movsb jmp adc movl jmp scas loopne out mov mov leave inc jno imul sub outsl xchg push cltd imul js and imul movsl and dec xor and pop (bad) fsub icebp mov repz push jnp pop sbb dec in xor shll cwtl sar cs repnz mov xchg add jns sub movsl in push xorl into xchg mov push pop mov js fisttpl xlat cmp out sub sub cltd or rcr insb in xchg push mov daa gs or add fldcw into cld mov ja pop or arpl pop cli dec sub fidiv daa lret lcall xchg and add fs popf jns bound push ljmp xor imul cmp insb jp mov and sti or ret sub popa jle cs push mov pop in ljmp aaa or lret add sbb insb or sarb adc xchg jle jo xchg insl cmpsl push imul movsl jle cmp je icebp cmpsl xor cmpsl shrb push inc mov cmc dec lods cmpsl test xchg outsb int3 dec or add xor inc aaa sub test lds (bad) jmp xlat lds lods and testl sub add or sti xchg ljmp notb dec xor ljmp or lret and lahf sub mov push mov inc data16 ss and pop rep sub sub lock jbe add out pop arpl (bad) pushl jmp stc pushf imul sub push push mov call lock jno hlt add popa fwait mov or dec or mov repnz ss xor ljmp fstpt out in adc dec inc hlt mov mov (bad) fadd lret jmp push cli and mov sar data16 jmp test divb fs push loopne or stos fadd xorb lods (bad) adc pop shr mov mov divl stos dec das negb sarl mov xchg out mov cwtl lds push lret pop xor xor mov dec inc (bad) xor das in mov into mov mov dec mov jmp inc scas push aaa mov adc rcrl push push jno rep ja call sub pop sub xchg or jns aas cmpsl jg cwtl add mov fs ljmp or stc pop daa movsb push and dec aam scas cmpsl xchg pop ja (bad) sar pushf lods ss xor cs jns imul mov add rcll mov scas or arpl push and rcll incl jecxz das negl aam or out enter popa and and mov clc gs dec lret jle pop loop jle push sbb repnz imul mov sub xchg add mov or lret aas sub mov or mov or imul dec (bad) incb and outsl lds ljmp stos sub push imul cmp inc (bad) test xor mov imul nop or movb in decb popf fcompl xor fidiv jne outsl sub out test enter sub dec ljmp sub xor mov jge mov push out sbb stos sub sub mov and fsubs jp pop movsb out pop mov (bad) dec movsb rorb jg sub mov repz sahf (bad) push push xor lock or or jmp les xor xor (bad) jg cltd out pop dec (bad) movsl stos mov push jns aam pop add add mov into sub (bad) mov std xchg mov and out in inc lock popf xchg int add inc push cmpsl loop nop mov adc mov jne pop stc sarb push ljmp das mov sub jnp mov int3 cli mov add or mov outsb adc ds aad lods push test mov adc cmp pusha cmp repnz loope call je daa rcrl adc mov and sbb or (bad) fisub fimul fistpll ror out fnstsw xchg (bad) cmp cmp cs popf nop fsubrp nop cmp jmp js add cmp nop xor pop or mov in (bad) enter dec sub add ret add adcl push xor (bad) mov in addr16 iret jno mov xlat cmp movsb cmp mov mov pop jg orl push jb je testl or mov gs es sub pop sub out inc ds nop push insl pop pop add fistp sbb sbb inc mov add aas sub sub jmp xor push push loopne xchg cmpsb sub add mov ja rcrb pop pop or (bad) push mov dec xor add sbb je add sub push or rorl hlt cld (bad) rep fwait xchg sbb jg repnz inc sub mov jns push push pop pop aad jl bound mov mov pop orl jl or addb rcrl mov lret add test pop add jae out sub stos xor sbb lahf push icebp insb inc fwait pop dec pop je mov bnd and fs sub or stos adc ljmp lds dec xchg loopne pop xchg leave jle dec ljmp sub into les pop out xor ficompl cmp mov xor test divb cmp push sub jb iret icebp push imul or das xlat mov lcall mov dec lds jmp mov pushf mov ret fisubr lret in shr or lds or ljmp adc fdivrs mov stc sbb cmc les or mov xor fildl xor sub mov add out sub cwtl lds cmpsl add lcall cs sub lods lahf xchg in nop dec scas je test xor clc pop mov mov pushf mov cmpsb xor pop or cld sub cld push or outsb jnp lods pop jno or clc mov into popa test fcom (bad) bnd mov rcr nop add insb xchg push repnz jns push inc movsl xlat sbb mov push sub aam mov dec ljmp jl jp jg test or dec sub xor gs mov sub out jnp pop jmp mov adc and fiadd pop test pop in imul sub dec push cmp fldl2e adc ret pop lods jb inc sbb mov aas scas xchg cmp mov xchg sti (bad) cmc (bad) pop pop mov dec ljmp xchg ja xchg imul shr inc cwtl and add mov call lret mov (bad) inc push add dec ret cmpsb sahf dec jmp cmp push or je and ret sub loope pop lea fucomip dec xchg loopne loop xchg cld lea lea inc jnp pop decb js (bad) lods jmp mov ljmp xchg jmp daa les loop push pop lds fldcw aas out pop xor (bad) bnd mov mov mov xor pop jno test xor sti out dec fs (bad) xchg push fs and lods bound mov sbb jecxz push lcall out leave popf aam push divl inc std addr16 jmp hlt fist adc jo stc arpl xor lock in add lcall jno mov cmp idiv jbe add fidivl mov sub scas lret daa mov aad rolb push mov and add jg or xor out test test out cltd dec add stos cmp gs pop add mov hlt xor inc or je and and xor movsl jge sbb lret push jb (bad) mov outsl loop aad adc cli jb repz add mov out xor cli imul rorb out sub fs lret idivl cmpsl aaa and jno and cmc cmp xchg (bad) imull or sahf or rorl add les mov push xor (bad) mov xorb and mov test sbb scas add out pop pushf mov mov (bad) push or sub dec sub sub dec jbe outsb repnz mov cmpsl inc cs push mov xor outsb int3 mov jb xchg aad pop xchg or jns dec mov inc jns imul push and jl das ret mov mov add adc dec aad fs jo xchg (bad) mov sub gs mov and pushf stos lods sti imulb repnz and push cmp xchg (bad) dec mov pop mov jo punpckhdq sbb cmp add pushf add dec push inc out sub std adc dec (bad) mov or mov fstl test and sub std ds out popf dec ds jne mov stos out cld mov dec loop test iret ret test jmp pop pop popf lret mov or adc mov adc pop int3 lock rep adc shrb out stc mov push icebp xchg push and pop cld sub aad dec inc add push test repz mov push adc sub lret jge negl shl add lcall mov push adc mov lret adc add rorb jge dec sub push loope pop cmpsl push cmp pop cli sub or or lock test or and lahf xor and mov rcll xchg xlat pop xchg sti popa add sbb sub leave sbb and pushf rcll (bad) mov enter cmp push and sbb jg lea xchg and loop jne sub push push ret or lcall and jle lret iret pushf das repz sbb orl push push out pusha cmp pop mov mov xchg loopne mov mov xchg leave or (bad) or sbb (bad) xchg call stos xlat push pop aam push jb in xor and mov push (bad) inc gs xor sub xchg flds jbe aam leave push ds inc xchg leave or mov or popa outsl imull in stos shrb or and iret imul pop shr dec jbe add mov loop sahf lods (bad) jo scas adc jmp aaa rcr push pop data16 in lods (bad) imul mov mov xor jne pusha mov out cmp stc int jmp inc cli pop cwtl lret scas mov pop add mov test pop mov xchg imul adc (bad) push cmp sub popf pop bound mov cmpsb jo fwait adc mov dec mov rcr pop ret leave add push (bad) dec shrb push ret fs out jo inc je (bad) mov inc jmp mov movl pop pop mov inc add stc mov pop dec mov pop lret xor pop mov es jmp push and jecxz cld cmc inc jp (bad) xlat xchg rcll pop mov push xchg and lret sub add cli inc jmp and xchg mov out test and (bad) push and add add jbe fsubl adc sub scas fs adc and lahf adc repnz lret cmp push pop movsl (bad) add sub push sbb dec pop or mov mov mov repnz pop out cmpsb xor mov mov sbb push jo loope aas mov xchg mov pop mov pop aaa xchg pop out adc or push sbb adc cmpb dec push lahf pop int and mulb lock outsl push popa lods loope ret jge fldl2t xor pop out mov xchg (bad) and sub enter cmp dec pop mov sub hlt sahf sub bound (bad) xor clc adcl sahf pop leave jg outsb movsb inc fs dec loop test (bad) scas xor or imul push jne mov (bad) dec jl inc pop xor and mov repnz out cmp jo lret xchg movb out mov lret mov stos shrl sub repnz outsb (bad) repnz loopne sub xor xchg inc imul sub ret repnz sar cwtl push call imulb test pop mov sbb insb push pop fmuls pusha (bad) cmc inc dec xchg icebp xor mov xor addr16 rorl push push shrb jmp or pop push dec mov jns add jno cld movsl (bad) icebp fchs bound push push pushf out cmp mov sti and or sti imul push jg icebp or add insb mov xor out rclb mov (bad) mov mov sbb mov push out cwtl cmc divl cmpsl pop jo aam pop or scas repnz mov xor ss in or mov pop dec xchg enter adc xor jle pop push xlat add sbb inc mov add scas pop jae sub out sarb bound fisubr jb adc out das add jne rcr in adc mov std sbb (bad) negl loop rcr in test scas mov fnstcw clc add out adc pushf lcall ror stos pushf pop pop repz pop movzbl out cmpsl mov xor mov xor mov mulb popf mov in cmp es push lds imulb fsubs jne jle stos sub and jmp pop lret sti int cmp mov sub cmp dec call lds adc sub mov or leave inc or in movsb loop jne sbb ljmp stc add das mov dec dec cwtl jl xchg shll hlt dec lret repz adc sub mov pop mov scas ss or xor out ds jl sub leave or lret movsl add shr clc pop jns and popf xchg mov sub mov push sbb jbe iret push or pushf push sub mov out sub push ljmp ds je (bad) scas xor dec test aam mov in xchg movsb scas lds movsl or push lds cs or fbstp js dec sbb sub sbb repnz sbbb add mov movsl mov mov mov cli mov dec repnz call ss add movsl shrb mov testb push lds (bad) mov flds test call fsubs add enter push lock lahf xor leave xor jmp sbb in pop rorl cs and bound push push orb dec (bad) mov mov pop pop mov mov rcrb icebp scas (bad) xor nop dec mov mov cmpsl sbb out xor pushf in and lret es shll mov fcmovnb aaa aam scas cmp mov or jns pop cmp xor cltd add jbe pop jno stc mov push js xor in outsb add and sbb aaa and leave psllq or jl sti imul push cmp jno adc out adc inc arpl jmp push scas add out movsb mov adc shr mov lods loopne mov dec and add ja jne ljmp popa gs inc jb les (bad) stos add add ret movsl cld popf xlat lods fisubrl repnz daa fdivr push xor nop mov (bad) hlt fistpl xor shrl fildl das or out popf pop or and sub enter push cwtl insb ret xchg xchg out aas mov outsb mov or xor std lds sbb (bad) cwtl xor sbb xchg lea mov and xor add or or call mov pop std sub addr16 loop xlat mov pop mov and scas lds bound jge inc les lods cmp icebp outsb dec sub and mov jge (bad) mov icebp scas mov mov sub xchg pop mov sub cmp sub pop hlt (bad) jb cmp add add or fisttpl cltd lds xchg lock (bad) pushf mov and add mov sub or outsb push (bad) into xchg xchg jecxz mov jmp pop xor inc xor and (bad) cmc (bad) (bad) adc jbe fnsave stc xchg scas inc push ret cs lcall push inc xchg push pop jl lret inc (bad) sahf lea fcompl test loop sub lock fildll scas mov pop xor jmp and jne sarl jmp xchg in xchg sbb (bad) mov insl ret push xor push fld cmpsb movsl pop (bad) dec ljmp add mov adc sub shlb push lahf xchg repnz fldl mov je mov mov or sub push inc mov cltd out mov or je aam daa hlt aas pop sar push dec push shll dec (bad) or sub mov or push out hlt imul movlps lods sbb into faddl adc addr16 pop mov mov pop dec add mov les icebp sub sbb loopne sub mov fnsave or xor jne pop pop stc or push idivl mov mov jge cmpsb mulb xchg cmp cltd pushf cmp adc add add das les loop iret xor lock iret and pop add mov xchg pop repnz pop movsl ja mov leave push in ret pop (bad) std fisttp cmp scas loopne lret push push dec out mov xchg xor into mov push pop rclb test movsl test sub inc or xchg sti inc and jno sub or mov dec clc ljmp sti sub push movsb mov cwtl mov push nop cmpsl dec sub fadds mov push add xor ror push adc lahf out pop repz sti xchg ss es int inc sub cmp dec or or push (bad) (bad) fdivrs lock mov (bad) ret hlt popa roll cltd xchg mov dec pop std sbb shll (bad) in push xchg and sub mov and lahf ret sbb clc jmp sub cmp fild cmp sbb movsb jecxz adc cmp test fdivrp xor xchg mov add outsb int adc or push inc add mov inc dec popa cwtl mov das cmpsb addr16 and sti dec in dec xchg aam adc and movsb pushf mov popa pop ret sahf leave inc das jmp xchg scas mov clc (bad) mov dec sub cltd add leave adc mov inc daa cmp negl repnz test cli mov push out sbb es adc fs and sub xor int outsl add dec push rorl das test rorb roll jle cmp and sub cld call cmp mov xor pushf (bad) pop pushf mov pop cld imul jge movb sub mov mov push repz adc cmp adc pushf inc sbb gs pushf in sarb call jp mov shlb dec cmp int3 and xchg stos int3 rclb mov bound jl push add gs (bad) jne sub jge (bad) mov clc adc mov sub sbb dec mov test lds cli stos int3 and lahf mov repnz inc popa jmp xlat cmpsb cs loopne add xor ret fiaddl jnp bound roll dec add xchg ja dec mov xlat mov push mov sub add ret mov mov adc pop inc or add movsb clc push inc lock pop fmuls jg aam (bad) dec dec in repz push scas fsubrp sub imul jno ret bound ret adc push scas xchg xor lret add add mov mov and sub add mov (bad) cltd out outsb frstor xchg les test jmp push (bad) or lock pop mov cltd int3 fcoms push loop or test ja (bad) push mov lahf jecxz adc and inc enter sub ret pop fs xchg mov or sub cmp add mov push jmp cmp pop pop fisubr mov mov xchg es xor imul inc out push stc (bad) sarb bnd pop adc xor jp dec stos jecxz mov icebp xchg out add push in push (bad) xchg std push decb mov loope into mov cli push mov popa xchg testb (bad) mov ret dec pop aam mov xor xor push pop clc aas and in mov fsqrt lret lcall mov je pusha jmp add scas sub (bad) jmp pop and mov push out dec out or inc dec repnz inc (bad) push mov (bad) sarb jmp mov xchg fcoml sbb or cmp rcll mov iret repnz sub call out push and pop pop or add in les decl pop dec test xchg mov and lahf jbe rolb or inc shrb pop xchg repnz xchg icebp xchg stos loop sarb adc repnz aas aas xchg jmp mov xor jle mov xchg mov paddd sub and adc das imull sub ss pop xor lea imulb in jno mov sub movb lock inc mov insb mov xor clc sub mov pop icebp push pop lock mov scas test and ljmp pop mov in sub jbe ljmp mov adc out mov sar jo add mov mov out pop stc stos in arpl jbe popa and sub lret dec mov lods pinsrw scas push push mov in mov push pop xor loop (bad) sub scas jae adc in or sbb cmpsl adc sub sub jmp or xor jae push shll mov jp add stos and sub or and pop mov jae mov ja xor xor loopne out pushf mov xlat xchg xchg dec into (bad) cmp and popa repz xor dec repnz das dec jg mov push ljmp push or mov jge or scas xchg mov push mov sbb push loope xor add and lock rorl repnz lock ss xor add lcall (bad) jno or cmpsl push dec mov xor mov test stos sub inc push push jp orb push punpcklwd (bad) push icebp fcmovne push xchg (bad) jae (bad) jmp inc cmp push pop xchg xor into jne cmpb test test mov cmp cmp clc cmp repz mov jne int add sub pop inc pop pop sub cli into bound (bad) or sub cli and loop mov pop pop push fsubl push daa (bad) pop aam jb jbe pop cmp test add and adc lods mov stos lret add add dec jnp pushl fld and (bad) cld (bad) xor pop cltd les lods rcl pop mov int outsl adc xchg (bad) bound adc add or or and or pop mov lret mov les out iret mov or pop repnz xchg loope imul xor xchg jmp je call aad cli pop or or or in das (bad) or add mov inc pop dec push dec inc out mov enter nop jbe dec add lcall loopne add mov and pop jae (bad) in lods aad adc xor dec lahf push lret inc into sti cltd cli sub (bad) rclb sub fsts add negl jg sub imul fadd fsts ds mov scas stc dec lret fildll cmpsl (bad) leave sbb sub sti xchg ds shrb sub in loop xchg xor pusha mov jg mov push (bad) es or (bad) stc cmp shll stos dec orl mov test imul jne js mov daa gs jb xchg cmc adc xchg fdiv push mov pop pop jns xchg add jne scas loope bound xchg fsubrs (bad) sahf mov notl push dec and push push dec or out repnz pop dec stos repz xor ljmp mov (bad) je das add inc xchg clc dec add lods (bad) leave adc pop out cmpsl inc xor add or add jns xchg (bad) push fstl or rcll ljmp in and push insb pop sub pop out mov (bad) mov sbb test or mov das mov xor (bad) fsubs int3 test or add mov bound (bad) cli mov add sub xor xor scas cmp js iret mov stc dec and adc or fstps and int3 xchg add neg mov sub xchg sub push daa xor daa fucomi sub aas popf or imull mov stc adc inc add or ljmp jp movsb mov stos jmp or xor add and pop xor and pop add dec mov clc xchg incl outsb clc js fnstsw into and cmpsb daa rcll mov push arpl or in out xlat inc (bad) and daa pushf lcall dec fild dec outsb int outsb mov idivb xor icebp sub mov sub and mov pop (bad) out cmp xor cld ds dec adc js dec lds pop lods inc mov imul and cmp ficompl jbe (bad) stc mov and enter roll icebp mov (bad) negb pop or test iret (bad) mov jp leave les adc add testl ret jbe,pt orb stc rol into pop jns daa push mov loope iret pop jge stos shrl repz add cmp mov loop ficoml push mov pop xor sub and sub cmp inc push fcoms mov les sub (bad) (bad) popf pop (bad) loop (bad) (bad) mov shr aaa mov movsl mov mov add stc jmp mov or test test mov or add arpl and fcomps test or jle jb aaa mov repz xchg scas add add pop push je push js xor pop testb push inc cmp into cmp mov (bad) sbb inc pop adc enter fmuls inc ds sub out je loop pop fistp sub ds xor repnz jns imul inc or sub sub ds sub mov jne ljmp xor addr16 mov add xlat jns inc and adc mov add cld or in jecxz stc xor jge (bad) pcmpgtb xlat cld dec xchg lods cmp inc movsl subl lret bound pop fbld sub push ftst xor jmp jno fsubs jne adc xlat inc push dec icebp mov or out xchg (bad) jbe in lods pop nop xor pop lds aam dec sub addr16 rcrl repnz in jmp mov sub icebp jmp fs ljmp (bad) dec push (bad) cs dec xor cs sub and shrl outsl leave push add mov arpl rcrb mov fstpt movsl sti pop clc pop mov js sub fcmovne and movsl fwait test cmp mov mov movsb stos cmpsb pop xor mov fisttpl pop dec lock xor jmp icebp pop stos in mov jg lret shl fdivs roll dec rorl dec scas loop sbb add mull sti test movsb jmp jne shll pushf sub push popf hlt fisubl mov xor test int3 outsl out dec adc jae test xor jbe popa mov pop idivl push ret lret and mov mov mov xchg jmp outsb xor cmp or pop sar cmpl rcll fcmovbe pop push dec shrb pop movsl jp icebp stos inc ret and add sar enter mov dec pop out mov (bad) dec cltd movsb movsl xor push lahf call sbb sub mov popf mov fcomp add pop scas mov mov xor inc xchg mov cld inc bound xlat or xchg jle jl push xchg pop movsb loopne into xchg lds and pop fisubrl add sbb (bad) mov bound (bad) fnstsw dec push and idivl stos sar mov clc movsb mov and xor or dec inc out fisttpl das add cmp xor mov out or out xchg outsb test jb pop mulb fldcw mov add add outsl dec xlat pop rol cmp clc lret or (bad) sti sbb and mov inc out or enter (bad) int push jge add shrb mov mov sub (bad) cmpsl jbe (bad) xor mov mov mov xor pop sbb cmp loope daa adc xlat inc test repnz xor adc mov sub dec sub inc pushl jg fsts pushf mov out out jbe pop icebp dec adc test test cli scas addr16 jge jnp ljmp xchg ljmp mov test mov sub add in sbb aad negb out int3 push (bad) mov sbb sub sub out ficom cmp jp jno xchg push mov ds add (bad) cli add mov or test sbb or and mov (bad) clc jo jecxz out outsb mov loopne jmp pushf int pop dec push dec mov mov pop pop cltd lret pop ss pop jno dec pop inc or add popa daa test xchg icebp in dec loop rclb repz rcll jns daa push cltd imul in mov sub xor pop jns inc call fucomip (bad) daa jg out or mov and xchg inc or or or clc sbb (bad) js lret (bad) jge xchg nop mov mov add idiv gs jmp mov fidiv test int (bad) fdivr mov fwait or jmp or xor loopne into mov (bad) mov push imul int3 pop sub into mov (bad) cmp push loope (bad) dec daa jne jnp adc jb and xchg mov xlat scas add inc idivl cli fs cmp dec mov cmp mov pop adc pop bswap mov xchg jg arpl icebp adcl push or decb pop xor dec and (bad) mov sub or sarl xor cmc inc ret out or mov dec stos test mov call push dec imul xor fcoms mov (bad) stc xor std out push out out jnp je jl lods fadd icebp and in pop xor mov mov pop mov bound arpl icebp and mov cmp push into (bad) jp adc mov shll sub sbb pushf adc leave jg mov (bad) or add push out lods sub sbb ds lea (bad) xchg inc push sub add (bad) lahf outsl sbb sub xor pop aas sub sub jo pop pop mov xor int loope cmp lret movsl aam leave (bad) clc dec pop xor iret mov pop in daa sbb ljmp (bad) xor aad gs dec adc or pop into imul ljmp lahf pop mov xor adc lret gs bound repz pop pop push jns lahf stc xchg sar push mov jo or dec aaa mov sbb stc jl xor imull cli sub sub dec sarl and cli push jle mov xchg out jb adc push ret dec in mov in and add ja fiadd sbb leave pop je push jmp sub imul call xor mov (bad) (bad) and repz jle mov pop stc (bad) arpl loope mov loopne loope mov pop sub mov aas and pop daa mov je scas jnp test xor scas fs or out cld je xor sub mov scas mov fbld xorl or into aaa push jns imul std mov into sub ret outsb test dec mov or cld dec arpl or pop daa inc ds inc xchg test xchg inc add sbb push cmpsl (bad) mov dec pop dec mov aas add jg add fisttpl and stc cmp sub movaps or mov dec mov lret mov xor es and repnz and bound mov sub push push mov jmp leavew not popa pop testb test push data16 mov pop sar jns or jge xchg cmp pop adc and dec ja sub les out inc ret lahf mov jnp movsl jae daa sbb dec add das sub outsl pop mov pop xor dec jle fwait xadd mov jle imul test lahf jo mov xchg jnp fistp lds repnz mov pop cmpsb das xchg call lahf jno sub xchg imul cmp rorb adc test leave dec mov leave ret rcrl pop es movsb mov (bad) add pushf push adc popf xlat adc lahf adc rcll adc xor adc mov add push test lds sahf daa ja popf adc pushf dec lock repz mov test mov mov jno imul mov add (bad) outsb mov adc jg jg divb mov lret into clc loopne xor adc jo pop stc adc mov push mov mov pop mov and add mov sub mov inc testl gs das pushf or or mov pop push (bad) bound fcoms pop loop push jle push fild push (bad) jno cmp mov cmp add test mov sti push push pushf repnz jae xor or add mov mov mov cmp xchg repnz cltd mov imul sub lret adcb mov movsl fsubrl mov push xchg ret inc int xor sub pop and lds pop mov mov xor add lahf sbb mov mov pushf retw imul lret shll pop jg (bad) divl fidivl jmp sub bound fstps incl jo mov out ret movsl lcall enter (bad) mov jb repnz roll or shll fcmovnbe ss mov in push repz mov push add pop xor je cs and mov or shl dec adc out add shlb (bad) shrb add in sbb mov jbe sub (bad) and jp icebp xor add orl out mov stc out mov (bad) lds xor arpl out enter or les sub sub lahf xor mov insl aas jmp shrb sub sub test bound std lds mov lret and loope loop adc add dec jl jmp push jmp fildll (bad) nop imul leave xlat inc pop test or inc dec (bad) roll adc jmp ret (bad) mov mov movsl jns lods mov fisttpll mov or imull outsb movsb cli fstps push pop mov cwtl addr16 mov and ljmp add mov les cmp cmpsb cmp out aaa fsubp fistpl xchg aam pop jmp mov imul xchg lret ds movsl cld fild jbe out out cmove adc mov dec push (bad) aaa in mov scas mov daa cmp xor mov (bad) xor shl mov or aam push sub xchg cld pop in adc xchg push test xor test (bad) jmp mov mov mov std xor sub cli dec jmp sub flds lds notl mov push jmp sbb push cmp xchg test mov sbbb mov in das cmpsb mov dec xor jno xor sub mov or sbb (bad) xchg loope data16 fild movl scas divb test scas push stos adc sti cmp pop cmp shlb mov outsl stos imul cmp cmp mov into hlt popf push pop je cli movsl clc push or and dec dec out xchg cmpsb rcl push pop scas mov mov mov jb sbb popl mov pushf push in popf push (bad) mov or cmc xor ret push adc or imulb loop xchg mov pop rcll (bad) cmp (bad) lcall jl jno cmp sub xor pop mov mov cwtl aam pop pop repz xor int popa add add or xorb push cmp xchg loope jns shlb sbb gs and ljmp mov fcoms or enter test dec ds sub sar sbb jno jl and pop cwtl sahf xor cwtl add sub and xor dec push sub sub popa or mov mov jne bnd jle,pn xlat xor jecxz dec mov imul pop and pushw mov or je in sub pop dec xchg lret pushl fdivl mov pop ljmp inc push mov jae sarl lahf sbb adc sub jmp (bad) out repz das sarb cmp adc inc mov sub mov les mov pushf pop pop adc dec dec mov cltd hlt xor cmp (bad) enter cmp sti sub ret xchg jbe pop imul inc inc push adc add fmuls out xor ljmp out sub xor icebp js (bad) test fcmovu mov dec or fs sti xlat aaa call push nop popa add dec (bad) dec sbb mov pop or xlat (bad) call add stos mov dec stc xchg xchg scas repnz dec or daa (bad) jne pop movsl (bad) pusha pop out int popa std sbb leave mov mov cmovp pop xor mov mov sbb dec mov out adc xlat (bad) mov pop test cli or pusha movq xor dec lret (bad) shll stos les sub sbb cmp ret shlb and daa mov xchg rcll int imul ret std xlat (bad) aaa cwtl clc jg mov aas push adc repnz mov ret std push add call sbb add xor cwtl insb iret mov dec (bad) idiv mov imul out mov sub std mov dec lret and pop (bad) dec addl or idiv sub aam negb jb mov js shr mov push out cmp fucomp incb add lret repz mov shll scas in mov test clc ds outsb mov cs jmp mov mov adc add xchg pop push xchg into cmp jl ljmp mov leave pop cs out inc fist dec in das into push mov mov cmp in push arpl jmp rclb notl je imul xor repz xchg adc pushf push addr16 jle lds push sbb gs repz jmp inc sub out movnti shr (bad) fsubrl or push dec add jne (bad) mull pop fldt cli lret (bad) and mov arpl test and ds es repnz push int3 pop dec divb les xchg repz and repz dec pop mov mov in repz push (bad) out mov negb mov or xor cmp (bad) das jno insl int3 cs les (bad) mov lret lret je leave fmuls xchg lds xor xor cmc and stos pop xchg je out leave sub movsb and jle push in scas jg movsb pop (bad) mov xchg aas lahf jp lahf das adc mov stos or ljmp sti jb in or lcall lds lods pop xor xchg jne inc push lock pop add add sub xor lods repz or enter gs jmp in xlat in sahf adc xchg data16 cmp sub repz cli jge stos cmp shlb pushl (bad) js cs add push push pusha pop stc (bad) (bad) sub scas js add jmp xchg dec or stc rorb mov mov xor pop mov mov mov pop lahf inc (bad) pop aad mov sti sti and cltd push add rolb and or cmpsb dec mov lret and or mov cwtl dec add mov add sbb push fcoml loop adc xchg sub dec daa popa test adc shrb mov jnp leave inc push nop jmp dec decb mov add cmp pushf popa xchg scas out jl lcall mov loop mov pop jb (bad) in loop sbb inc jl aam addb jecxz and iret cmp dec int3 jne lods lcall ffreep lret stos cld xor sub call jp nop imul xchg cmp pop mov sub sbb shrl sbb mov add pop sub clc arpl xor clc sbb (bad) and adc or and cld or pushl and push popa divb loop xchg stos mov fcoml pop scas or xlat dec mov or mov imul inc mov popa rorl mov inc mov and dec xlat lods adc mov push sub xor dec inc (bad) dec rcrb jae adc adc imul adc pop (bad) imul roll pop loop popf xlat xchg fisubl sub aam cli (bad) arpl and ret (bad) ds clc cmpsb adc xchg or ljmp xlat jg sbb dec cld xor dec sub stos ret pop pop inc xor bound loop push ret inc out inc hlt xchg push frstor mov rcrb pop pop into jmp test mov jmp xchg js mov pop leave loop push or pusha jp repnz pop fsubr cmp and aam jg mov or xchg iret jmp aam daa into xorb int call lret pusha sub divl cli popf xor pop test jmp cwtl mov je xorl jecxz test or nop (bad) rorb or ljmp test loop xchg stos mov dec cli insb in and xorb mov arpl inc or iret cmp xchg test pushf or jo lahf adc xchg push mov outsl pop (bad) fucomi cld push arpl or lods cmpsb xchg adc cmc roll jo jp and add sti leave rcr bound push dec jb (bad) ss xor push clc mov fisubrl pop jbe in lods inc ret clc movsb shrb xor xor mov frstor adc mov jle mov add imulb repz mov into lods xchg mov imul jmp push push mov xor sub js mov addr16 and incb jns xchg and out repnz rorb lds mov mov sahf aad and fucom cs xchg fistpl or mov andb fnstsw jbe shl add lret jmp in arpl adc outsb fwait push mov decl or add add jmp aas loop mov jl adc mov add or jne insb dec sbb ss sbb stc add test sub or nop sbb add je leave jp fisubr cwtl xchg and cmpsb jbe icebp mov cmp pop mov fdivr cs cwtl cmp out in movsl loope out mov dec std or dec xor xor mov and xchg aam jb pop and mov push (bad) adc sub mov xor pop cmp int cmpsl bound mov and lods and xorl jle push mov jmp mov jp lcall fcoms jmp mov leave out fstl mov popa xchg jne mov xor cmp in sahf inc mov shrb sbb divl in mov mov fmul jno sub mov movsl sub or mov adc enter mov imul and xchg rcll or leave mov xor sbb xlat mov pop (bad) xbegin ss dec lds hlt leave (bad) out cld fidiv mov add lret push jbe repnz sub test (bad) mov std and add cmp cmp mov fistl iret inc popf adc clc rcll add and repz pop add lds push cmp and das push push daa cwtl mov (bad) mov imul lret ds pushl mov dec leave test repz add mov repnz lahf jb sbb popl xchg add (bad) int scas or push mov addr16 xchg inc gs mov jp pop sbb pop cmp mov jg lcall mov imul sub dec mov mov and sub xor out lods push cmpsl mov pusha mov js add cmc sahf adc inc dec fs or sub lcall loopne (bad) mov xlat mov icebp add rcr rorl mov dec lods or or idivb pop mov movb fbstp cmp push (bad) test in pop xor in and pushf shrl sub les cwtl push push mov (bad) lret pop or test lret add mov sub dec inc imul cs cmpsl or fdivl outsl out test cmpsb outsb sub rorb roll sub sbb lods rorl out dec adc lret dec out cmpsb shrb hlt lret pop push repnz sub out fidivrl ja ss pop sti xor add and pop cmpsl incb ret dec xor add rorb data16 sbb fild ret pushf inc cltd jne adc sbb mov push cmp dec xor cmc adc sbb add gs scas test xor testl and out (bad) (bad) out fsubs sahf (bad) jb mov and mov xor setge dec repz sbb pop dec cltd and int jg xchg (bad) shll loop sub cmpsl mul leave jbe dec xlat addr16 dec in andl mov pop mov mov movsl and scas clc outsb mov sub mov or add mov pop cwtl popf mov out jle mov test add or (bad) cmc pop xchg mov sub movsb test popw push clc inc out shrl push dec aad mov cs mov sarl mov add cmp mov pop (bad) (bad) mov add (bad) out testb in dec jmp lock mov mov xchg hlt call xchg push and idiv cmp out (bad) imul mov xchg shlb dec and into inc cmpsl sub or cmp sub mov mov orl sub and clc out daa lock cmpsb sub clc push cmp fcmovbe in popa into add sub inc lret fs adc lret mov cmp add cld mov pushf test rcll mov pushf mov mov cmp pushf das sub add jne stc js inc (bad) dec mov or leave add jle fsts (bad) jb int3 pushf pop pop mov push xchg (bad) lcall pop idivb fisub repz (bad) imul lock pop ss mov icebp jmp xchg lahf adc ljmp dec xchg rorl mov cmp aad xchg sub fistl fldt mov fildll sti mov shrl pop dec out xlat jmp jmp mov in jmp mov xchg lods mov sahf int3 (bad) das pop insl or addps pop imul sub cmp gs mov sub push out mov loop cli push pop mov popa adc orb inc popf jle aas enter fidivr xor adc jnp out sub lods stos leave mov mov push sub push fdiv aad push inc cmpsl push push sub mov pop push (bad) imul (bad) cli mov les clc mov mov cli inc je fimull shl adc pop dec jo cmpsb enter out jns jo sbb (bad) repz or pushl nop popl in mov or mov and mov pop adc ret pushf pusha mov jne,pn aaa jg outsl cmc mull or push adc adc lret rorl add pop pop dec inc xor sbb cltd add pop mov aaa clc push movsb mov or mov jb and jns jns jg jmp push movsb shl xor das ret pop mov ljmp out test repnz sahf shl into or das ret dec leave out sub add xor lcall (bad) xor (bad) and sub lock pop push jns std (bad) xchg mov mov (bad) jbe gs cmpsl push test loop (bad) (bad) mov scas (bad) sti jmp xor cli sbb mull sahf dec cld cmp add nop js add arpl xchg rclb pop add mov mov sub push pop lock mov cmp lret call add pop sub and cmc out das mov or data16 mov scas ds (bad) call cwtl inc std out xchg pop stos push xor popf ficomp (bad) fisttpll in sti in mov mov add aam jecxz sub or add jle fs stos sbb xchg inc popa loopne and dec or mov xor stc lock insl pop rorl adc (bad) aad inc xchg mov dec lret pop cld xor aas inc sbb (bad) jb (bad) call fisttpll pop addr16 lret add sub clc sarb aam inc mov lcall lock stos push push push loopne lret xchg push outsb sub pop xchg cli mov and mov dec in mulb mov out std sbb (bad) pop stc add jne mov add icebp in add xchg (bad) pop in test jecxz repz sarb jno sub and push icebp sbb pop push ret or subb mov pop fsubs push mov adc sub inc mov popa adc ja mov cwtl or inc fcomi mov leave dec repnz test fcmovnb imul xor add shrb ljmp push pop dec sub call movsl lret (bad) fdivl (bad) into cli clc loope xor aaa adcb je fimull out jp imul (bad) std jnp mov push fisub jmp in sub jns cs sub xchg repnz lret pop cs adc xchg scas aaa cwtl rolb mov dec xlat lds mov outsl mov or repnz adc stos jb fsts mov cmp lret data16 and or push pop scas pop xor popf data16 sub mov cmc (bad) jmp push jbe fist dec lahf jmp cwtl sti xor mov bound sarl sub cwtl push lret and es dec lret mov rorl push fiaddl mov shlb pop xlat stc jnp roll int3 xchg lret imul loop sub lods pop push cld dec ljmp adc mov mov imul xor inc stc (bad) sbb movsb xchg cld cwtl mov fs pop mov gs shll clc pushfw or push pop ret adc lods mov and mov jmp cmp cmc stc pop and or mov and cwtl sub mov pop adc xor sbb and es jne,pn clc adc adc icebp mov mov leave scas xor je leave hlt nop fsubrs cs pop inc bound leave and lahf negb leave add nop icebp test xor call cltd mov das mov fs jmp jmp or leave mov xor lods and sub daa adc jae pop lock fs xor xor cs leave jne stc or pop mov stos mov mov out outsl dec cmp push cmp cwtl loop add in arpl and iret jge lret xchg dec imul push mov jle adc dec cvtps2pi ret sbb xlat mov imul (bad) lret and jne mov repz inc gs leave leave aad sub xchg mov pop repnz add add stc movsb xchg lods push orb nop ret inc sahf sub jmp aaa clc test mov rclb sahf (bad) loop sbb pop in or push fidiv add mov jg cmp fistpl sahf adc pop cmp fcomi in sahf cmp push daa pop repz scas cmp mov mov mov imul cltd call xor leave out in push or shlb sub and add jb js das sarl scas pop (bad) icebp lret enter mov dec mov mov cwtl dec ds (bad) aaa out movsb into push adc lds adc and pop adc jmp or xor add inc dec (bad) and arpl pusha sub (bad) leave decb fcoms test pushf scas mov sar orl adc lret pop adc and insb push xchg and ja outsb xor arpl cmc stc popf leave add push pop jmp pusha xchg rcl sub cmp dec xchg iret insb mov sub and push xor pop out sub or popa mov push data16 cmpsl xchg inc ja push imul iret xor (bad) cmp fdivs push in sub or (bad) mov imulb pushf cli divl mov inc pusha push sub push dec ror and sub test std pushf add imul ss clc leave test and stos cmp and sub push push jnp sbb (bad) stos lcall test enter add cmc std aas mov xor add sub lahf (bad) repz sbb xchg loop (bad) aas cltd xchg inc xchg xlat xchg push mov xchg sbb sti les test xchg adc popf (bad) sub test lock push pop les stos xor adc inc xor insb (bad) mov nop imul js mov xchg repnz or cwtl out lock add xlat xorl lds out sub xchg (bad) gs bound cmc jnp push leave mov pusha sar int sub mov test dec repz gs and mov call adc pop ljmp outsl push add mov mov lahf pop push in aas sub movsl rorb cld dec test pop ret daa rolb xlat inc out or shll push fisttpl ja (bad) jnp jmp inc pusha sub in cmpsl sti jg xchg push add lds adc mov test adc bound lahf cmp pop mov inc mov aad add mov jle pop sti sub pop cmp or je or sub ret mov adc push dec jge mov rorl fstpl iret stc pop leave outsb jno dec (bad) dec push shrb mov mov cld mov mov jle pop sub iret pop add movsb fsubr rcrb shrb aad (bad) cmp and xlat mov popf push push cmpsb pop or mov push mov ret (bad) repz (bad) push or xor mov jmp push negl or mov jne fcomps mov aas xor clc lds add inc xor ja xchg xor or and call xchg jl addr16 out loopne fst jp outsl insb adc add mov cmp push push leave push rcl push sub push pop xor xchg lret mov in into cmp inc sbb push push mov inc sub add or adc or jle mov enter jbe jle xlat scas and divl sub xchg rcll adc nop mov and jge adc in mov or sti pusha pop mov into repz mov cmpsl pop movb fwait inc pop cmp lret push inc mov jmp jge cmp or push jb lods pop cmpsb imul pop inc neg add add enter jns mov testl or addb repnz push xchg and add dec or fsubr mov push lds out es imul das pop or add jbe mov jae,pn add (bad) adc add sbb pop and pop ljmp gs pop sub push mov dec pop sub and xor lahf pop jle out stos sub sub dec cli xchg sbb lods pop mov divl pushf lret pop xor iret jo lock add sbb popf fdivrs (bad) out add daa shlb pop cmp cld imul jle mov in inc popl subl inc dec xor rorb mov mov sub pop popa mov dec ljmp add mov pop push sbb cmpsl inc pop cld and pop dec xchg mov hlt jno fimul out outsl icebp stos fstpt mov pop cmpsb loop and imul sbb into out pop outsl pop les test mov mov rolb psubsw xchg inc adc leave and aam push inc popa xchg dec dec std das mov pop fcmovnu das jg inc xlat cmp xchg adc adc add xor mov rorl (bad) insb pop xchg or push mov out and out or mov lds or sbb inc add (bad) mulb sbb mov icebp ret mov sbb out mov psubusw mov rclb sbb lret enter (bad) xor pop cmpsl out int in or (bad) out add out int3 add xor push dec add and imul pop dec ljmp sbb sub push pop inc or xor stos into arpl nopl push pop mov mov leave adc addr16 mov pop into popf xchg mov or je out cmpsl inc and stos dec inc jl outsl mov leave (bad) outsl xor ficom xchg and push lcall ret daa pop in daa cwtl pop or lods mov into lods hlt mov pop adc repnz push in sahf cld (bad) out xchg mov push movsl movsl frstor sbb imul fs lods rol sub adc lock jbe out imul mulb pop movsl dec decl mov lret (bad) mov std rcll sub ss dec movsb pushf adc add loope or push inc push add sub mov sub xor call pushf (bad) test ja push dec leave aas aad dec scas rol inc dec ret mov int cmp clc sbb pop or add sti pop push daa xlat loop xchg dec xchg lret mov pop (bad) (bad) jge mov pop adc xchg lret push jmp adc (bad) in adc js mov jecxz adc enter and push cld pushf xor inc aam dec or jp dec mov scas cmp mov mov and mov test pop fwait xlat mov mov inc out mov and pop std lret adc jne cmc dec jb dec repz rolb bound cli inc insb andl cmp or jg xchg push jle jmp add orl mov call add pop xchg ljmp nop fisttpl aaa adc adc jge push mov int3 sub lock add (bad) xor fcmove fildll inc lret sub (bad) icebp loope sub mov jle (bad) repnz adc lods lret repnz repnz int3 je mov adc jns cmpsl data16 ret xlat xchg mov push xlat mov push add jo cs and xchg mov jbe jmp xchg fcomps jmp (bad) xchg sub xchg mov dec (bad) adc mov cwtl and sub pop add imull cmp js int3 cli xchg fisubr int cs cmp popa scas jnp stos leave out cmc in daa jl loop repz xchg cmpb mov rolb xor cmpsb lods xchg hlt stos add ret sbb jg stos mov jp cli loop xlat xchg std push rorb cli in bound shr aad cld pusha inc or jbe testb dec and notl xchg std stos mov dec xchg ljmp and rorl loop xchg adc pushf mov inc push xchg mov mov cmp xchg sbb (bad) sahf pop loope rorb enter xchg and ljmp out clc ficompl mov out cmp outsl mov cmp das jge rcrl (bad) or mov ret inc es push sbb jg cmp add sub fistpll shl or rorb lret sti icebp jne sub or mov ret mov dec cld sbb hlt aam cmp dec (bad) hlt and int3 sub sub (bad) stos sub sub arpl mov or fmuls ja outsb sahf mov mov mov mov clc push and subb in gs cld imul imul les dec enter mov adc je pop loopne movl iret mov cwtl in das jl jae loope mov xchg adc or mov cmp fadds or adc add pop push mov or pop shr out lcall sub pop xor xor push or mov pop orl sbb ljmp dec sarl add xchg or insl mov dec jecxz pop xor mov mov or cmovns jnp inc (bad) sub xor outsb mov pop js sbb hlt xlat addr16 or push dec push aam out test icebp jnp push loop add int3 stos aas dec push push add mov xchg pop outsb fwait or enter stc fsubs cld nop adc push mov aas adc in push sbb jmp negl push aaa fidivrl inc leave adc insb jnp push push dec outsl enter ja out add mov and retw sbb jo add cmc lret xor xor pushl sub shl notl add (bad) sub add pop pop rorl imul shrl int or lar xchg push mov ja fistpl add push push add sub popa es and dec pop out lret ljmp add add into push push nop out lds cmp out mov ljmp inc mov ret bswap std jnp repz push insl add sub pop nop inc mov jnp repz push mov add loope cmp jne sbb (bad) pop leave adc cmpb out add xchg push jae movaps pop dec rorl add add sbb sub pusha mov nopl insl sub mov dec push nop ja mov or xor mov xor ficompl aad dec push inc neg (bad) cmc pop cmp add (bad) enter in xchg mov adc out add outsl and aas inc nop fwait add nop sbb and pop movsb pop sub popa mov sub push je jne sbb pop pushf lods sub xchg pop cltd or test lahf (bad) mov lods rorb cmp jl push xchg gs add jp sub out les iret out cld cmp (bad) pop nop ret mov xor xor push pop mov bound and je or or hlt push jecxz and gs mov aad enter sub or push mov mov cld pop ljmp test sub add mov mov pop out dec into adc divb jbe gs subb dec pop das cwtl mov fmulp push ret sub pop pop mov (bad) dec aad add iret cmp inc ljmp clc sub or xchg jne jecxz mov (bad) sahf test xlat scas (bad) add aas cs mov lahf sub cli add stc xor sub mov int outsl gs sti faddl mov repnz jb xchg xor call jnp shr xchg jp jmp movsl sub fist test repz fbld (bad) clc mov ljmp mov out mov decb clc pushl push aas ret push faddl and (bad) incl repnz push push xchg daa mov lcall sbb das xor (bad) movsb sub jg cltd xchg dec pop mov clc pop repnz mov fdivs mov xlat sub (bad) xchg aad xchg or test in sti dec xchg fist mov subb test pushf or into dec out or lods andl mov sahf push repnz mov popf neg das into cltd ror cmp fs push mov cmpb inc add and pop lret jge sahf pop (bad) add (bad) add cmp inc enter (bad) pushf pop add stos arpl mov push andb add cmc xor sub test cmp sub lock pop xchg outsl xchg inc bound add push loopne xor mov gs fstpl mov out dec ljmp and xlat call out mov cmp (bad) xchg insl jg fstl dec mov mov adc (bad) jg daa pop xchg mov mulps mov or push insb pop mov inc pop das add popa mov dec arpl test das out inc xchg jns sub ret ret mov in xchg mov push jno or stos daa inc jbe push sbb (bad) lock mov adc lods das movsl mov push jno and xor add into div dec xor stos (bad) ljmp jb adc mov pop sarl or negl sub negl out mov lahf mov (bad) add aaa add sub ja loope jmp adc push inc dec inc arpl mov ljmp call xor popf in (bad) fmul ja aas stc cmp pop xor xchg cli and add (bad) fsubs pop pop out jns inc mov jns dec sahf add mov sti repz cmp push inc mov test dec stos xor jge xchg mov push mov lahf mov xchg or dec stos repz adc xchg fstl add scas cmp (bad) cwtl popl jp and movsl sub imul test dec mov rorl pop sub je out out push pushf dec rcl test pop sti jl xor push mov sub mov (bad) or leave dec jmp in movsl jnp mov cwtl cmp dec lock dec popa lcall (bad) pop pop pop out popf clc push xchg xor push add sarl xor pmaxub in or jp les push mov xchg push push push xchg sub gs and test push mov add popf decb jo rcrb sbb mov test mov negb lds jbe pop ljmp xchg inc sub bound repz fbstp mov and jmp dec or dec clc cmpsb dec lret test mov mov push mov push clc xor mov call (bad) or sub outsb ds jecxz into pop and mov fisubr rorb mov repz xchg iret aas (bad) lret or mov xchg out pop outsl stos cmpsl ljmp imul movsl mov jno push push add dec xor sub add push pop ss aaa or mov mov add dec orl sti mov adc add xor mov data16 notb shlb stc jo into mov xchg lods (bad) ljmp dec mov std (bad) mov mov push xor add lcall mov xlat cld xor dec shrl aas inc add adc sub mov sub mov add mov icebp mov (bad) (bad) neg lods (bad) xchg ret sbb scas adc popf add push hlt mov dec (bad) lock and and and jno xchg or push ret mov out iret out out push loop mov sub sub fidiv rcl and pushf shlb int3 loop xlat bound pop stc fmuls mov subb lock jge pop inc sub xchg or cmpsl in or push and aad ss loope sub and and imul jp sub mov cmp aaa push and test sti cmp ret ss push hlt adc aas sub loope sub icebp mov xchg test out mov inc cltd mov fs out push xchg out cmp mov imulb cmpsl push (bad) push (bad) sub test dec scas sub sub pop sarl and les (bad) out dec lock call popl add add sub cmp xchg into push cmp dec in orl in xchg push fildll jbe out inc aam push int3 scas pop xor pop insl fyl2xp1 sbb sub ret aam xor out pop jbe jo lock mov movsb xor aam mov imul push pop movsl lock mov and xchg mov cmc or js push and stos pop pop loop lcall int or ds pop mov xor sub into fnstsw ror xor mov jne add jo mov cmp add xor ljmp outsl or xchg movsb jp movsl sbb out je outsl pop or push out daa sub ficom jmp rcr mov and lsl mov inc lods xor or mov sarl push pop cld and or lret cmp sub cmc add dec sub popf (bad) or repnz mov lods addr16 cli das pop out enter arpl push adc mov ret push push xchg data16 add ret and add mov repnz je in inc xor sub cs xor xor jne sbb xlat xchg jbe push pop and fwait mov fsubrl outsl xor ljmp movb jecxz stos fs das mov fmull call int jle sahf add repz scas (bad) pushf push and mov mov mov sbb mov xor sti cwtl int arpl pop sub dec inc mov lret jo in cmpsl stos int jnp adc dec jecxz daa add push sub inc mov inc std shll sar leave cltd add sbb lret and (bad) ja xchg lock dec dec xor jg sub rcrb lret add mov inc orl inc mov lcall jb dec jmp mov dec repz inc pop pop xchg mov test ds sahf add fisttpl xor out fisttpll adc add outsb fnstcw mov es xor push cltd int loope push es xchg insl xchg testb push sub jmp mov ficom out fadd jmp int pop cmp adc bnd fisub bound movb rcr xchg push pop and xor pop mov sub sub stos int jp jne movsb inc mov mov mov pop (bad) cli std push cmp pushf cltd push jbe imul cwtl push pop inc mov fbstp fwait pop icebp pop lahf sub xchg jmp call into popa inc add xchg stc shr mov pushl lods packuswb or in cs std mov insb scas pop out cld mov (bad) aad enter xor ror ret imul jmp sbb adc mov movsl loopne add mov and out sbb mov mov push insb mov or sahf scas dec (bad) lea add (bad) mov and fucomip fdivrs dec (bad) and adc jmp or or adc sbbl (bad) xor imull std aaa xchg decb mov mov cmp loopne out fnstenv jge dec pop (bad) stos popa push and cmp mov xchg and sub (bad) jnp jl sti push adc ficomp mov fdivs mov fmul xor inc xchg lcall push lret pop idivb gs ret cs xor sbb and mov test add fldt mov (bad) mov mov push mov leave lods fldenv and and jmp in jnp enter sar hlt dec mov dec xor mov mov loop idivl cmp sub mov cwtl add xor (bad) xchg push mov (bad) dec sub dec inc lret mov sbb push ffreep iret out mov dec or cld dec push fstps sbb xchg idivl fmull in aad lret lds (bad) out (bad) inc daa mov les sub cld fstpt or in cmp mov int3 add out pop scas pop xchg jp int3 movb xchg sub jge mov push fldt sbbb sbb lret cmp mov (bad) dec fs jl out cli bound jnp push (bad) test (bad) lret fwait sub aad mov add bound adc cli mov into popf xor stc push js pop mov cmp sti out cmpsl pop arpl rclb sti stos sub div dec pushf (bad) lret movsb daa addb aaa das xor aam cmp xchg rcrl push jne cmp lods mov cld lahf (bad) push sbb lods xor mov mov test mov xor adcb scas flds sub xor dec pop and das xor shrb or lcall (bad) mov in stos out pop jbe scas xor fdivl stos mov sbb roll and pop rorb icebp sub cmpsl (bad) scas pushf loope sbb frstor xor pop aam jb cwtl subl or add icebp inc xchg rcr dec push into das push nop push (bad) js into out jno js daa out and in sub lods xchg push (bad) (bad) imul lods fmuls push stos push dec push mov sub xlat ss lods inc dec sub dec push lea xchg lret (bad) imulb ds in mov repz mov jecxz push cld adc push xor lahf das jecxz cmpsl outsb cmp sidtl mov jp push mov (bad) ljmp aas sub lahf daa fsubrl icebp icebp lret enter das repz stos xlat leave cs das jecxz popl jbe lret sub dec pop add xor xchg (bad) sar or xor sub inc mov xor mov ret out dec mov into lds cltd jns cmp push je das call mov movsl push bound fcomi dec pushl sbb mov or mov cmp pop int3 outsl mov sub fsub scas adc (bad) ss (bad) push mov xor jp scas mov push sbb imul inc xlat fidivr lods cmp mov jle mov and mov dec inc lock fs in jns mov stc bound mov or jge lods mov cmc js popf jl call imul shrb mov lock jl dec mov or lock les add subb rol sahf popa adc or jmp sbb nop dec pop shrb jns inc shrl (bad) movsl pop in mov bound lock add pop sbb pop mov int3 adc int3 sbb add rorb push add (bad) out adc adc icebp mov xchg add jnp push int3 sub movsl fnstenv movsb push inc or and xor add cwtl in or inc out movsl movsl mov fiaddl adc or push insb not push mov cli repnz pop cld jle out sub (bad) xor mov push mov ret iret jne inc sub movsl pop sbb in add push adc in lahf ficom notl mov xor xchg inc into pop (bad) aaa test cli popa dec ljmp in lods push sub push (bad) or jmp fisttp mov out pushl jb or (bad) hlt dec xlat mov or mov lds stos push pop out xchg scas mov daa sub outsb pop mov xorb loope aas lret pop pop cmpsb push pop out jne jno mov jmp lds dec out in and xchg fidiv or xor lods mov jl push and into decl sub push mulps sub push in pop push pop fist mov in and out stos cwtl xor mov aad and sbb lahf dec sbb imul stos or mov cli mov mov xchg test repz inc or xchg out dec cmp push sbb and sti cwtl movsl (bad) dec add orb jne loop fstpt imulb inc loope out push shl jecxz,pt xchg shll add icebp loope cli movsb scas mov jne add aad pop add rcll fs cltd (bad) xchg lahf xchg stc (bad) int3 call bound pop fildl mov and and outsb sub xor xor add xor std xchg mov sbb sub inc dec ds jno stc pop lods (bad) xor iret inc or and push jno xchg (bad) cmpsb fnstsw (bad) xchg adc push arpl and jo pop mov mov dec push sub divl lock jl enter add mov xor cmc inc add loope mov dec scas xor data16 and jmp sub fsin mov repnz sub out and pop sbb push int3 repz pop ret mov xor inc and xor lcall cli add mov bound shrl rcll sub add xchg push inc jno je mov and jno jp fmul loopne das xchg les jmp sti sub in or pop mov add into mov push mov repz xlat xchg cmp pop and cli je call push and loop sar sub mov out daa xor daa fcmove xchg (bad) cmp ret pop push repz jle jmp sub mov xchg roll divb ret outsb arpl out sarb enter add xlat sub fs or cs push (bad) inc repz jne test pop mov pop mov fs daa sub repz xor jmp xchg lods push mov (bad) notl fnop or data16 cli sub sub and cmp popf mov sbb fisub mov inc (bad) sbb sar ds mov (bad) loop int3 pop daa out out adc stc sbb and lret out imul cmpsb jbe xchg (bad) xor ljmp notb push fcomps pop xor cld in jp and dec jns mov repz xchg jecxz pop add mov xor test and push sub cmp dec adc cs push xorl test rorb jmp jmp ljmp adc (bad) mov test rclb pushf xor push nop daa mull sub xchg aam lds lods data16 xchg mov push enter pop and xor dec jo popa and repz jg xor xchg clc lea addr16 pop icebp scas aas xor clc aaa jae or jp into jle ljmp add mov fs cs mov sar xor sub pop data16 xchg ficom push fadd lret pop movb ret add adc int adc pop in daa (bad) push bound xor sbbb dec imul lret stc in sub dec shrb mov imul mov xchg sbb repz stos pushf loopne xchg pop adc cmp and mov mov cld sbbl testb shrl gs shrl mov (bad) out inc mov cltd ja xor sub add scas cld sbb cwtl jne pop bound xor add and loope (bad) xor adc fldcw mov pop lods arpl and ror and movsl mov pop test int and mov das clc push cmpsl or sbb or xor mov or inc xor aad pop cmp mov dec addr16 lret mov adc orb aad ficomp in cmpsb inc jae cltd inc jnp sbb daa stos sub jg ss sbb xchg sar and push int3 jmp test mov pop (bad) xor mov (bad) ljmp daa or push inc and outsb xor ja pop mov lret cmp or popf in pop out lahf gs (bad) add sub pop inc mov lret mov xchg xchg and jno xchg pop addr16 sub cmp lret push push (bad) enter rolb and jns test outsl pop xchg xor pop sub stos jo imul lds dec push shrb dec add pop (bad) dec dec mov push shll mov imul xchg or cwtl add out std sub xchg cmpsl xor push imul mov mov cmp ljmp adc sub or mov test cld out jnp fdivp fcmovnb xorps sahf dec aad jmp pop pop out and mov lcall data16 lcall inc pop fsubs xchg dec pop sahf push inc xor icebp and and mov and jmp aam pop enter dec sti mov vcvtpd2dqy shlb push lods cs aaa rcl xor movl dec pusha sarl data16 cmp adc es cmp (bad) xchg lcall outsb mov cs adc (bad) ffreep sub lods xchg loopne (bad) mov jmp push xchg stc cli dec cld ret cli and pop dec mov into push xchg mov mov mov nop (bad) mov rcrb fnstsw mov lea dec test fisttp scas (bad) jb push mov or or outsl lcall fwait (bad) mov mov jnp push movsl jmp sbb mov sub out (bad) cmp faddl mov imulb test push (bad) out adc sbb xchg or mov (bad) xor sub (bad) popf cli ret lahf imul sub inc xor mov std mov mov ds jp push lret cmp mov jecxz xor sbb mov dec icebp movsb test fild push adc mov and cmp fsts movsl push mov xor cli push movsb negl ljmp mov cmpsb push adc sub addr16 xor xor or or or pop insl inc jmp (bad) sti xor fistpll xchg inc andl or mov int3 cmpsb or mov out aad pop add mov rorb and mov jbe jecxz ficomp jae cs add push stc mov dec dec fistpll xchg (bad) bound repnz pop pushf mov mov call add xor pushf and sbb or inc mov leave rcrb xorb out pop xor or idiv addr16 imul (bad) sbb dec jg stos das loop push or icebp pop imul inc and adc cmpsl add jmp mov test add inc jp (bad) pop mov lret iret sbb cmc push sti sbb stos lret sbb and xlat mov stos iret pop sub sub and (bad) xor sub dec pop jp test xchg ljmp fisub push jge (bad) std jne xor adc cmpsl sub vmwrite mov das lds or adc add daa adc add mov repnz pop loopne loop cmp dec dec mov or or sub add cld or push imul imul push into fistpll or mov dec decl mov and leave (bad) jne inc es dec bound fldlg2 push dec mov or pop ss (bad) cs bound leave sub pop xchg js and inc das dec mov imul lret mov dec (bad) into scas push mov mul push das test fnop ret mov cmp je in and mov mov xor pop in inc loop mov mov mov rolb cmp jns test out or push or or pop aad lahf imul rep cmpsb or jg enter mov or test cmc jmp gs lds gs call popf mov add cmc sbb (bad) call andb add or adc xchg out dec aaa mov aam jp nop dec or mov sbb and dec roll xor test imul leave cmp daa or sbb outsb mov sub or es (bad) xor xlat jae adc lea jo jmp inc imull ljmp add mov mov pop std cmp and xchg test mov cmc icebp xchg dec sub mov aam into lds out mov push out cmc adc adc testb mov pop (bad) out pop push mov rclb lods mov xchg ficomp jmp bound cmpsb dec (bad) adc pop xor and push ret add xor out leave shrb out pushl stos xor stos and out (bad) cltd test mov movsb ljmp addr16 lds mov sahf in scas das pusha je call inc xor repz data16 sbb lret jno and mov (bad) lahf xor insb or mov lock mov ss pop sub mov sbb add jne mov ljmp out andb xchg inc in lods or mov subb jl (bad) lret lods and idivl in stos bound jmp cmp fistpll cmp notl leave out decb adc aam out (bad) je or mov mov jae or mov or fbld dec adc push fwait adc jg sub mov fcmovnu mov sbb cli mov sub and sub cmp push mov loop out or dec push iret lods mov imul sub mov out sub in mov xchg lahf jmp mov shr std pop mov daa add push sub das or fdivp (bad) shlb aaa test and cli inc pushf shrb pop and dec push sub nop pop mov mov jl pop mov pop shr push sti jno sub bound sub les jmp xchg cmp jg or mov jmp cmc dec jnp ss xlat mov dec mov pop (bad) cld xchg jbe cltd inc bound rcll inc push sarb jnp mov fdivrl sub je inc icebp mov xchg ljmp cmc xchg jmp pop and adc add (bad) mov jno int loope bound (bad) int3 pop xor stos lret stos push pop stos xor sbb movb jmp scas sub loope lret rcll out pop bound testl inc add mov (bad) mov pop push xchg in mov mov and jmp call or or lea mov mov sub daa xchg mov bt ja mov jne jmp sub adc lahf jno fs push shlb cltd in daa leave or leave dec lret or lods adc mov mov (bad) ret mov push add jecxz dec call lods xchg and insb fs fadd pushf or mov in push mov mov and sarl lret test (bad) mov mov icebp das xor xor int xor daa mulb add mov insb mov repnz cmp test push jnp xchg fs pop mov mov sti inc das sti jae ret (bad) xor sub inc xchg pop repz sub in arpl sub fdivrl jmp mov cmc push aaa inc repz mov rcl inc hlt push and scas push push dec jmp push rorl xor push sbb and mov fcomip stos xor inc lods mov sub imull ret xchg jne aam (bad) in popf fisub or mov clc out and sub imul push pop (bad) fcomps hlt iret popf cmc push inc xchg loope or pop mov nop out mov sub lcall pop jecxz inc jnp inc mov dec add sub sahf mov dec lcall xchg push sub cmpsb or lret pop push in repnz pop xor lea ds push repnz push les sar xchg pop push xchg rolb jmp mov in cmp mov add mov jp ljmp mov jmp mov adc dec xchg sub lcall jb xor lock or jl int ret (bad) test inc (bad) out stc xor jae or inc inc add xchg (bad) mov pop or js lock xchg inc cmovo xor stc sub and sti loop mov idivl cmp push sub movsb and cmp mov repz call push sqrtps and mov cmc xchg (bad) lds repz mov divl aam pop ret cmp test adc add mov or sarl mov xor in xchg (bad) cmc iret ds add jle dec push out fs fs out clc jo scas repz loop xchg ja sub cld dec stc add test cs inc pop scas sub bound fildll out sbb int add leave icebp (bad) lods test imull dec stos lret (bad) xlat sbb mov push xor sub pop push xchg push ja xor sbb and mov mov dec mov push adc or orb mov mov ljmp test jmp (bad) repnz xchg inc sbb ret daa movb inc xor jb jmp and ret je xor mov repnz lock and xor fisub outsb std jl leave add or cmp pushf mov sub mov cmc in and mov xchg mulb call add lea das and mov sbb (bad) mov cltd pop loope,pt das jno out adcb dec and das pop push mov jmp and pop outsb xor pushl inc lcall lods subl cmp divb lea mov sub xor sub jne loop jo push pop lahf hlt and push mov mov mov cwtl test adc xchg mov loope dec lods jecxz (bad) lcall cltd mov cmp dec test push and mov xrelease cli or loope outsl daa movsl movsb icebp loopne out xchg xchg bound clc push jl fldz jp sub mov pop lds movsb xchg in rcrb out enter mov push test xor lret cmp mov in xor prefetch iret xor adc xchg outsb int (bad) pop ret pop push cmp ret lock xor mov sub mov rcrb mov jl ror repnz rcrl xchg (bad) stos lret xchg fs ret lods cli daa mov scas mov leave repnz pushf negl cwtl icebp ret jle,pt xchg or cmp mov mov je testl sub mov or pop fs cli mov xchg stos int3 xor mov sub jl and lahf mov pop sub or sub std mov addl out loope add lods lea xchg out dec call outsb mov push shl repz sbb cmp scas xchg mov out mov pusha add out pop mov into push lds iret xchg hlt stc pop mov jns lods test pop sti int3 stos out and cmpsb mov and xchg cltd add (bad) mov repz sub and mov or sub (bad) les jo out popa sbb adc shr cmp cld pop clc or xor repz add fstps stos dec jbe dec out sub or jg test cmp mov movsl xor jns mov pop mov out iret xchg in (bad) mov push pop cmc mov pop mov push adc xor (bad) roll ja repz sub (bad) push mov inc dec push jg inc jae dec lods jns adc jl idiv fucom enter add and and inc jmp mov mov dec jo movb adc addr16 dec int push xor sub or hlt cmp mov movsl fadd cli mov dec ja aas push dec leave push push enter push ljmp cltd pop inc xchg adc mov out dec insb lahf fildl adc cmp sbb push add sub imull dec mov push mov sub imul stos push daa push mov imul pop mov repz or jmp dec repnz add dec and pushf icebp xchg pushl cld mov mov pop cltd scas daa lds xor (bad) lret xchg inc nop sub and loop xchg add sub popf jne stos and mov cwtl in int jle into fs mov xor bound (bad) push push adc fsub stos dec push sarb jecxz je push (bad) ret lcall (bad) insb lea iret mov call pcmpgtw dec psubq or mov or lret loope push cwtl bound push or rcrl push lret sub dec or cmp fisubl (bad) sbb loope in lcall fistpl mov mov pop dec or fcompl fstpl cmc lods inc scas jne adc cs in or cld test pop or ja mov rdtsc repz test mov in jo and add xchg cmp xor std mov and imull adc dec cli mov in cmpsl (bad) sub add push dec jnp fsubrs add imul clc add es dec call add lret sub ret sub data16 (bad) das mov fist mov lret aam push dec in mov lds cmp sbb fst loopne sub jmp cltd sti mov cmp dec in in (bad) add push repz sub and test movl lods push or sar rclb loopne xor aas aad adc stos mov inc cmpsb xchg fisubl adc xchg outsb lret lret dec stos mov sub cli inc add mov clc mov mov js cmp mov jbe dec jo push pop push lcall scas jle (bad) in rcrb mov push adc lret xor add mov loop adc mov les mov and sub sbb mov xor add add pusha pop adc into cs in stc test mov add xor cmp int3 inc mov or add adc fstpl sub sub mov dec jnp push cmp outsl std pop negb ret jle jb inc xchg dec repz lret in mov jle lock (bad) idiv nop dec lods imul add xor mov fiaddl and scas dec scas int3 xor lahf adc stos pop push fcmovnb add ss lret mov mov in in and scas clc adc push lret (bad) jmp (bad) jle xor (bad) dec mov int3 scas xchg add pop dec sub scas test sub (bad) jae stc or (bad) sub leave mov or xlat out daa repnz imull add sub xchg xlat cltd movsl mov fiaddl adc testb dec into stos lret xchg push or add pop xchg or inc sub xor cmpsl push mov sbb xor popf push ljmp lret cmp sti mov repnz pop jg cmp in jmp and sub mov lret fcmovu pop jecxz loope mov fldcw xchg test repz jae pushf pop mov xor cld fcmove (bad) int3 js repnz (bad) gs incl xor mov cmpsb mov testl in and decl hlt (bad) in mov (bad) ds insl iret (bad) push or aad fcomi cmp sub out cmpb and imul mov ljmp fstpt xor or xchg into ljmp and jb,pn adc dec push movsl (bad) jbe xchg movsl fsubs out jne xchg fs jp xchg int cld mov push adc mov xchg out das out jnp or (bad) icebp cmp movsb loope cmp out dec mov ret push addr16 dec and mov sbb iret mov out loope outsb repz sub dec iret dec cmp xor enter das pop rcl sub pop xchg sbb pop mov sub in loope or sub jmp fwait ss icebp (bad) mov leave or iret mov scas aas pop insb addr16 popf xchg (bad) sub (bad) idiv lods inc xchg mov or into pop aaa push out das ljmp pop test add cltd or mov xor lea and ljmp add sub cmpsl jmp dec daa shll (bad) mov (bad) shrl pop stc sbb clc push jns xchg fmulp stc loopne push insb js push mov adc out jmp mov sub mov and stc stos cld push mov jbe jecxz (bad) lds mov dec jns cld mov in jns movsl frstor dec cld int3 fnstcw lods mov sub or (bad) repz push bound or and pop aad loope cs ss pop popf fistp into mov push adc clc sbb lea xchg add int3 or xchg rol sbb xchg cld pusha stc or test loop scas xchg imul mov inc add cmp cs ret scas jne sbbb cld jge add subl mov ja sub jnp shrb xor loop jns leave push addr16 or das cmp lahf pop pushf pop xchg inc mov jmp xchg push add mov int3 mov iret rorl jo stc mov jae mov stos ficomp inc mov push pushl in cmp (bad) insb call in mov xor and inc or into outsb test mov repnz (bad) repnz add cmp fisubr lret lods push or rolb xchg adc pushf popa lret fisttp ljmp push loopne sub fiadd rclb rcrl cli sub cmp and pop test and sub (bad) sub dec xlat enter movsl test stos loop xchg mov loope pop adc fdivrs aaa push jl data16 push cmp push pushf mov jb sub and pop push movsb (bad) adc in pop into and pop push mov mov ret arpl gs pop lods mov or add jmp cwtl xor fstpl faddp push lock mov notl dec sbb nop sub mov sub add inc ljmp dec sub push nop push xchg sti lock dec add and or jns dec movsb or pop cwtl pop sub ljmp sub sub xchg arpl fcomip cwtl add mov xor or or mov inc jb lret jmp add inc cmpsl xor cmc in stos dec push add or jg or push (bad) rcrb stc jb ljmp mov push xchg in aam loop (bad) or scas repnz fstl outsb aam out cmpsb jl cmpsb negb imul (bad) or ja xchg mov cs jo iret fildll sub imull (bad) and cmpsb push ret cld rcll inc not and pusha add cli sub sub jecxz adc add xor push jmp cs test movsb repz push pop cltd movsb mov and cmc lcall cmp addl decl xchg fstl jp dec lock and test mov sub shr push ret in aad fcoms imull rcrb testl cwtl (bad) clc lock popf fdivrl jne pop dec pop xor lock stc (bad) (bad) cmp stos sub cltd daa imul imul leave out xor add mov sub sub push adc jbe adc jbe icebp xor mov mov jle and repnz (bad) or xor (bad) mov pop or leave rcll movsl aad adc push sti shlb inc add jnp dec mov lret mov fbstp (bad) je out add jmp orl push dec call xor sahf xchg cli inc stc out mov xor fdivr mov bound jo (bad) jb es scas (bad) arpl xchg and aad ret adc xlat push mov shlb push sub lea adc push xor mov in and fsts push popa xlat ss jb,pt pop incb sbb sub cmpsb mov dec mov std icebp sub cmc js mov pop divb fisubrl pop adc pop jg add push pop pop in mov mov popf aam jmp out (bad) int3 sub jecxz sbb sarb rclb xor loopne jecxz icebp push dec push (bad) (bad) cld gs pop mov lret mov inc sbb gs es cmp mov js call ficom shrl adc loope repz sub jmp das sbb sti mov stos sub sub pop out cmp sbb sbb out pop mov out and test stos xor stos in cmp iret ja xor fadd jo fistp sub cs mov pop mov daa xor les hlt in out mov aas iret inc xor loop mov fldcw imul fs jmp ja ret aaa dec dec in lods sarl jp rclb mov nop div out cltd popa jmp adc repz inc push mov fdivrp jns movsl cmp les hlt cmp out stos loop mov enter test and stc outsb pushf mov (bad) pushw sub jmp push or sbb mov fsubs stos dec jns xchg (bad) (bad) jl shrl out pop add push mov ret lahf mov xchg test cli pop jecxz das or sti ljmp jmp (bad) pop xchg mov jbe jmp adc cwtl movsb and pop inc mov call fistl lret push test dec jl and xor pushl or stos sub (bad) xchg push mov jmp (bad) add add inc maxps mov stos leave daa stc iret dec and xor fdivl push ja sbb pop aas mov mov fcompl pop out xor lret jge lret cmp fmul ljmp adc xchg or movsl daa add or fst jns jg adcl divl leave xor popf add cmp (bad) outsb divb or cli inc js xor call ret stos lret push xchg mov push and dec jg das cmp sub aas pushf sub add cmp sbb test cmp fstpl xchg movsb stmxcsr sub cmp push pop and xabort and sub jl mov pop sti daa divb hlt lret loop aas pop outsb push and and jb xor jg jmp pop mov cmpsb das clc in and ret pop lret test in lods loope (bad) jbe sbb lock sahf mov lds iret rcl daa jp or mov movsl jge add jno add and pop scas adc out cs and sbb cltd or shr jp xchg in daa jg outsl hlt fldenv dec push or ret fcoms out add sub fistpll pusha loopne sub repz jle cli xor sub int3 test xchg sahf (bad) fisttp pop icebp push cs mov adc out int3 mov jnp addr16 jle mov cmp iret ljmp pop mov push (bad) sbb add out mov inc mov das std mov and ja mov push inc gs pop clc repz fdivrs cmc xchg cld dec out ljmp mov inc add faddl sub jg pop enter enter adc push adc pop (bad) fidivrl mul pop mov xlat scas mov leave out mov cs sbb add push or leave sub pop jecxz mov rdtsc fmuls enter out cmpsl in (bad) lods adc add mov or sub dec mov lods imul mov sub lahf in or pop jge lret loope jle in mov loop dec mov das out ja mov add (bad) loop enter sti fs (bad) or pop (bad) sub ret ljmp push adc mov data16 add out dec out mov (bad) pop and xchg xchg or or hlt ss bound push lret call or (bad) jg dec stos stc push cmc jmp daa lret fcomip cmc sahf mov mov add out dec sbb xor dec adc mov sti jle idivb xchg sbb mov or pop dec push popf xlat adc mov repz mov xor push out mov xchg push jae and mov repz push das cld inc test xor shll mov (bad) lea movsb mov fcmovnu xor xchg xor ljmp ljmp pop xlat dec dec xchg pop fstpt lds xor adc mov inc mov jb hlt xor xchg cmp repz cwtl fstpt ret cmc into xor xchg out dec and push popf and sub pop test sub fs add fs jmp int3 xchg bnd xor push ret (bad) mov repnz mov inc ret pop adc or leave popf popa dec outsb cld and and lea or aam sub mov sbb or jmp into mov add and (bad) xlat push enter xchg flds sub aas icebp xor div mov add out mov or icebp add jns (bad) mov sub and adc push pop dec loop (bad) je shrw add popf icebp add mov and (bad) mov loop ja pop mov roll and or cs shll movsl pop inc imul and ja loop imul push aad fnsave cltd xchg cmp cltd sbb mov lods fsubp in mov xlat or bound ret stc or xor pop fldenv add ffree mov leave jl das in mov sbb in dec je gs mov push mov adc mov (bad) pop pushf movsl add pusha test xlat mov es stos xor imul dec repz ret ret sub stos sub sbb jle pop pop dec loope mov jne lds test sub fcoml mov je daa in mov jne flds or pop pop out cmp scas sub stos lret pushf push loop xor (bad) out dec sti fbstp iret mov mul xchg daa sti lahf cmp (bad) fs xor sub sub push scas mov cwtl adc mov fwait in mov mov mov fisttpl ret fidivr and leave adc inc lahf xchg jmp scas inc xchg pop es repz add jg in iret sub jecxz das and jae movsl jne bound cmpsl adcb add iret and in push loopne inc adc cmp pop dec bound test sub lods cmpsb ficomp test or cmpsl jecxz lds push hlt mov add sti xor and es push sbb lret scas or cmc cmp pop cmp dec ret dec fs add cmc pop push dec jge dec dec div lods and inc sub sub mov ret and xchg dec sar sbb cltd clc ret enter addr16 jns lods push xchg dec ret pop fs negl xor sub pop mov dec add inc imul pop shr negb loopne repnz divb decl ss je stos jne mov popf (bad) xchg enter jmp das pop adc lods pop xchg aaa mov jne aam imul idivb data16 sub jp lahf pop jbe cmc lods mov es cmp stc test shr mov imul mov dec mov add int3 and mov jne scas or out push gs mov pop call andl add mov sarb and or xlat mov sub adc testb fwait jp cld jbe out jb or sub fisubr pusha cli jecxz sahf dec push or jbe pop out and mov mov dec leave mov lods sbb leave pop fst mov sbb sti imulb jno test call (bad) cmp mov clc fisttp sub xor mov ja (bad) cwtl mov test pop mov and adc fidiv ljmp sub cmp fbld (bad) mov mov imul push mov in movsl call jmp stos flds mov inc les shr loop adc mov lods xor dec pop xlat scas mov (bad) jg adc data16 pop or xor repz lods dec stos lret leave es ds add aaa jo imul mov mov clc or adc dec repnz scas sub es push cld loop inc jns dec xlat bound pop ret push sub mov adc mov pushf (bad) js or cmp adc xchg shr sub pushf mov imul das sub inc pop mov sbb sub mov xlat repnz sti je ljmp imul insl add mov fcoml jnp repz int and push xor jle jp adc pushl push xlat sub or push mov xchg daa mov (bad) sub fisub push jge int3 adc int3 push mov (bad) mov sbb lret (bad) leave dec sub mov mov repnz adc out push aas test movsl lods in out xor mov jbe das mov fiadd (bad) rep fdivrp decl xor pop daa out sub mull (bad) mov pop ss sar mov xchg sbb loop fistpl sub loope out daa loop mov (bad) inc and pusha (bad) out pop mov push adc adc xor stos lea sub xchg xlat xchg xrelease push ret nop push (bad) int3 mov cmp cltd dec mov cwtl pop push pop out sub jle stc mov movsl idiv pop and mov cmp iret mov lcall sbb push loop xor push shll das adc out int mov dec or into gs lock xchg test in pop xor repz push sub test out dec mov cmp repz push les xlat test sarb fisubr mov dec (bad) jge mov sub jge cmp dec lret jecxz add sti cwtl and mov or mov xchg jo mov sbb cmp lret jmp mov jo lods push popf pop xchg or xchg push cli or jmp popf cmp sub sub les sub idivb or out (bad) mov ret cmp (bad) clc cli mov pop bound dec mov mov xor notb push dec lea xlat add pop jb add stos add pop jo xchg jg cmp int pusha lret cmc xlat lret rorl shrb push or divb (bad) out jp mov mov ret mov mov adc (bad) mov push and inc xor scas cwtl lods and inc daa adc cmp decb js mov push sub adc (bad) clc hlt and mov xlat gs sub fildl into in fist cwtl dec lret sbb inc or sbb cld inc daa clc jbe or sbb sub stos xor out xor xchg ja fcoms iret and push mov sub fs mov sub and jne pop xchg or and popa mov xor scas repz and rcrl jnp or adc pusha push orb repz pop sub add stc mov cltd ss push ja fidivr fdiv sub notb test and clc call or dec fldl cmp bnd or mov cs enter adc jb dec jo add ljmp xor mov xor cltd mov outsl pop inc sub ret and rol in pushf dec or das (bad) cs aaa gs sti repz xor addb shlb fisubrl cmp pop xor cli into xor fs jge cmp dec cmpsl mov mov mov rorl das iret (bad) pop sbb jb rclb fmull in out mull and pushf (bad) loop sub pop pop sub mov fisubrl out push dec ja scas imul pop shlb icebp pop (bad) or loopne cs adc push dec xor sub sub pushf das cld pop movsb out and adc mov mov and mov (bad) cli push cs mov sub mov push in xchg mov fs daa pop mov mov add xor add daa adc repz sbb sub jp mov (bad) dec sti xor mov xchg (bad) fidivl mov and in lods mov push xchg loop enter dec mov cs jbe loop mov add push aam dec pusha push sarb pop lea dec jg push movsl lahf imul add sub mov (bad) push jg mov or add fistp mov push stos jmp sub xchg sub sub cmp xor push pop addl adc orb out jg rcr aaa inc (bad) sbbl sub mov mov addl mov xor jecxz or mov out push mov pop push push (bad) mov stos (bad) adc push mov std jae je cs pop lcall push mov pop pop mov xchg hlt push mov aas shr inc fiadd xorb stc imul imul cli and mov in or ljmp adc lahf insl outsl subl inc psubsw mov cmp mov inc ret outsb pop loope inc pop pop xor sub push push pusha sub jnp sub xorb push mov xchg dec xor lds test pop mov pop jne stos cmpsb dec pop movsb bound adc dec ret mov or and mov add push pop mov (bad) mov dec scas imul mov mov pop jle xor add xchg cmc xchg xchg or or push ja decb std mov pop dec into push adc mov popf std xor push sub (bad) (bad) aaa mov or dec (bad) jmp (bad) mov std adc cs imul jp jno push cmpsb nop hlt pop inc mov rcl adc xor int jo jmp lcall xchg sbb push repz pop ret scas xor jecxz stc dec dec jg sub fisttp lds fstpt lret lret mov jge mov jle jmp (bad) xor add lods push movsl call pop ljmp and sub or dec ficoml mov cmp repz sti sub mov jg mov sub cli mov in jl repz pop inc add push dec mov xlat pop into fadds shll jns sub testb scas (bad) cmc aas mov das iret cmc xchg icebp or test and mov xchg imul scas pop dec lret add cmp repz or xor test mov in xchg icebp aas (bad) out and movsl ljmp or add (bad) lahf repz xchg repnz sbb or mov dec cltd fstpt scas lret xor sub cmp xchg push imulb mov push add add leave add push in sub call mov xchg andl movsl dec lret (bad) jecxz jle aam push fild out mov call xchg pop loope sub inc or cld dec movsb push les (bad) mov and xchg movb xor lret mov pushl stos sbb and cli sub and cmp add xor sub inc nop ffreep jge lods xchg push nop imul sub push jle or pop bound cmpsb test (bad) ljmp faddl push lds pop cmp iret bound jle lret inc xor jbe stc mov adc add sub imul mov mov movsb mov in mov rcll or (bad) daa jns test or ljmp pop mov icebp dec xchg repnz icebp jbe gs add push jnp add cmp loop push arpl imul (bad) (bad) pop std inc test sbbb inc cmp repz dec or je das ja rolw insl mov movsb inc push and out adc inc push (bad) mov in sbb xchg mov cbtw mov mov adc sub (bad) xchg pop xor aam mov ljmp mov das lret insb stos dec jmp inc lret outsb jns dec (bad) mov lret jmp icebp icebp pop and xchg and push push sub mov pop xchg jo lahf adc add mov mov iret cmp dec fs mov cmp inc pusha (bad) mov push xlat mov clc mulb mov sub fsubrl bndstx mov mov jb data16 mov or pushf push mov imull mov in cs dec lret sub push push pop pop push xlat scas push mov sub mov mov and jge imul or scas sub or xchg dec cli test popa popa mov ljmp xchg or (bad) xor add fs ret into cmp cwtl mov and pop xchg pop push gs hlt xchg jmp lods scas fwait ds mov or aas int3 pop sub out aaa xchg pop (bad) inc dec xor sbb mov push outsl inc out scas mov xchg repz or movb sub ja out fmull loope fsubs mov outsb divl out mov call ret pop enter pop xor cmp outsb aas les mov shrl (bad) xor fcmovu pop sub ljmp das sub pop repnz xor lds rclb lret rcr or dec jmp ret mov mov mov call mov scas into rcrl and add iret xor mov ja add imul push aad rcll dec lret clc mov insl push sbb sub mov cmp or mov cs sbb das mov leave loop into ja cs push out jb fidivrl xor pop dec scas jb daa fmulp rol xchg sub push lock push pop inc xchg into push dec ret test scas sub out out jnp sarl cld push movsb lea pop mov ret push pushf or jmp mov mov or sub mov mov push mov ret push push xchg jnp cld jecxz pop popf dec push cs xchg enter add in out mov dec daa ljmp clc xor imul enter stc push pop cmp xlat cwtl clc fidiv dec repz icebp add push jbe push fisub repz inc push mov cmc (bad) xor adc push adc or pop incb sub mov pushf push pop jge negl sbb push or movsl js pop cmp (bad) or pop out cmp xor mov std xchg aam aam cmpsl push jne sub aam pop cmp or push ret dec subl mov xchg dec pushf sarl jns enter inc stos dec pop cltd repz sub jb roll jbe leave or fisubr cli or adc (bad) push and (bad) pop imul jmp and loope cmp cmp das std in (bad) test ret push cmp pop cmp fstps add sub sti dec mov out lret outsl push mov pop jno xor inc dec mov roll or xchg stc scas and sbb mov lret sub and sub (bad) rorb xor clc loop adc arpl xchg ljmp dec add (bad) add mov das lea lock cmp outsl pop mov lret andl inc dec add adc jecxz insl mov gs dec stos insl sub lods jno rcll rclb cld add sub jmp pop adc into cmpsb ret mov shll mov imul movzbl push mov test mov movsl cmp in add cli sub out sub lret mov sub mov sub leave in inc or mov hlt jg cmc fcmovne or jmp lock mov std out dec fbstp sub xor repnz push push mov hlt pop clc cld hlt (bad) jnp (bad) cli cmp or push and inc add sbb pop and mov ljmp ja pop xchg scas or lds or fist add negb pop bnd out mov sub out pop pop push sub or mov pop mov sti lods xchg and rclb aad push out int add cli xor jno hlt pop push into and push sbb jecxz adc sar mov mov add repz sub test pop mov jmp push pop sarb add movsl ret sbb pop pop aaa pop inc xchg push dec sbb je inc and clc les test cmpsb nop daa sub cmp and mov pop add into mov loopne (bad) mov push sti mov pop jne cmp push xor fdivr inc xchg in or sub jo popf or jmp adc rcrl sub add add push adc out sub or or lcall push mov lds test pop icebp ja inc xchg push mov jmp aad and cmpsb push pop call sub add jae pop lods out mov jmp (bad) jmp in mov ljmp lds scas bound jmp or or fsubs or or cmpsb or dec leave sub rorb lret lret sbb add mov je xchg sbb roll xchg lret idivl xlat push dec dec ret sub jp nop jl pop add push inc pop pop popa fucomp jnp and movl dec xor jmp xlat mov jge hlt (bad) jnp mov (bad) pop pop sub pop pop mov sub jp xchg pop mov push jae and in pushf cwtl sbbl pusha add mov or ret bound testl popf pop pop mov mov mov loopne xchg add (bad) dec jg or jmp or cs int push in andl sub jns jp pop out in (bad) movsl stos sub cmp lahf les lret ret mov pop inc jno xchg inc movzbl data16 lock and pop xor (bad) push mov and and inc (bad) bound push pop fnstenv mov and lock test jne jecxz sub or xor loopne xchg cli aaa cli (bad) push jo pop push arpl cmpsl adc pop out xchg cmpsb in daa (bad) data16 or cld fucomi push pop and (bad) jns subl jl cmp and jecxz and decb or arpl lea cmp jns pop pop dec mov jno out sahf push cmp aaa push mov adc pop das fisub das inc test add icebp and jns test (bad) stc cmp sub iret mov cld lods sbb xchg inc divl lret mov sbb fidivrl dec (bad) cli lret out dec xchg push xor xchg or mov aad jno dec sbb jbe pminsw push fmull xchg imul lock push out mov jae xchg add cmpsb sbb repnz and or sbb imul cli mov adc loopne repnz jecxz call mov add js mov xor iret ljmp cmp jns xchg xlat lock clc sub jbe mov (bad) sti mov lret adc add xor loope pop out pop test test jb sub or imull divl adc repnz dec push jmp test xchg push adc fwait js jmp imulb add stc movsb lds je call jne mov es rcrl ss and pushl xor push inc mov and lods lret cmpsl adc xor cli idivl mov pop sub sub xor fnsave out mov sub addr16 outsl mov dec cld add pop das mov fsubr subb je roll xchg test rorl or pusha add sub stos jns roll mov sub add jns lds add and jo and (bad) mov sub dec or hlt test dec scas lock pop jmp neg mov cltd fisub pop cmp outsb stc dec out mov sub push insb lea stos xor xor add stc add or gs lods ljmp shll dec ret or mov cmp rclb sarl cmp loopne out test xlat jno dec lods loopne std mov xchg jl imul add jae loop mov leave push outsb inc or icebp jecxz divl dec stos xchg aaa test mov (bad) xchg ficoml xor loop sbb stc nop jg add and gs outsb je out stc ljmp scas movsl pushf jnp outsb movsl pushf sarb xor adc and mov sub fbstp stos mov bnd xchg daa sub cmpsl sub aaa dec lret xor sub int stos inc fisttpll ljmp shrl jmp dec mov imul dec dec lds xlat ret notb xor test je adc xor out daa xor cltd loope cmp repnz add cltd and jbe out lret je leave jg in and std xchg xor sub mov mov (bad) adcb enter cli daa jecxz cli clc mov leave jge xchg xchg inc add stos and scas or add and jno mov xchg jecxz or roll scas push aaa pop pop icebp rcrb sti test fst outsl (bad) out imul (bad) nop out outsl pop mov addr16 in xor mov xor movsb lds pop cld or cli adc sub sahf std jmp jge jecxz aam repz ret pop outsb jp lret jmp loope rclb pop jmp push adc sbb adc decb mov subb jp int adc mov or xor mov test jo (bad) mov pop stos mov cmp dec adc fsts ljmp gs lds mov and repz or push mov pop and popf push sub dec dec mov pop pop clc test lcall jnp sbb lret sub ljmp xor add lahf mov daa inc ret jg (bad) mov leave pop pop (bad) sbb jno ficomp popf jnp adc mov fs ljmp loopne clc adc xchg push mov jne test (bad) jp xchg mov xchg push ja aam test or push jbe mov ret jecxz fdivrp sub xor mov xor xor je icebp outsl int3 mov xor out add pushf mov ds inc psubusb and mov pop mov arpl je jb xor call ret movsl bound mov sub enter sbb push imul (bad) xor push sub ss mov subl cmc adc dec mov pop dec push or test add cwtl mov test stc pushf rcrb mov xlat in push push adc fisttp iret cmpl cmpsb push or lods mov sub lods into mov mov lea inc add and push dec mov pop dec lret popf dec clc test ret pusha xchg fistp (bad) (bad) inc repz cmp imul (bad) out stc out bound enter sub sub dec xor jecxz je jmp or jl pop daa ret ljmp pop ret xchg das out sub mov push or test add in xor add push and sahf addr16 xor or mov movsl sub insl and and imul xor xchg and loope adc cmp scas dec lds pop movsb mov sub (bad) mov sbb leave repz pop xor mov xor ja je push push lock imul lods stc leave xlat jle push aad cwtl ds stos xor jmp or (bad) jg out (bad) fnstcw fistpl popa pop fldenv and icebp mov sti and mov add cltd sbb dec sar xor cltd je (bad) iret mov add xlat fnstcw add or dec inc pushf std (bad) mov inc dec aaa outsb in jmp movsb pusha scas mov insl fistp imul sub xchg clc into movsl cli sub stos daa jecxz or ss pop cs sub lods out aam (bad) call mov sub fs jne fistl fbstp dec rclb fcmovne jl adc inc jo fisubl hlt inc in sbb and aas fsubr xor pushf jl sub decl mov out into sbb sarb jg cld out mov das movb stos (bad) stc inc sub add daa iret (bad) and add and mov ja cmp daa push shlb dec sub push fbld pop sahf mov lcall jmp stos xchg and gs sti sub xchg hlt mov pop cmc loop mov pushf dec mov iret and scas lods shlb xor cmp ja scas popf repz jno push and stc stos adc popa jb sarl dec xchg xchg in sahf mov sbb (bad) ljmp bound mov fldl2e mov fist out jbe pop stos push icebp insl pusha or xor mov jg sarl and std js mov pop or inc fldcw dec je vmovlpd in mov cli mov stos clc fcomps pop mov in notb mov xchg push cltd push leave cs sbb or cmp add pop or pop add xor addr16 outsl mov push cmp push xchg xor sub dec dec mov push ret mov mov sbb fcomps xchg or mov mov mov cmpsl stc jne je and stc adc rcrb mov iret repz push and xlat dec push dec (bad) mov push xchg scas and xchg popa dec jmp sub out popa fsubs (bad) and scas je in repnz dec iret (bad) or and inc ds das out (bad) mov notl pop into scas (bad) iret sti icebp sub push dec lret ret mov pop (bad) fs jmp or and imul push test pop dec shll mull imul sub xchg dec in das in dec shll xor cs sub mov imul sub in cmp xlat mov repz cmp rcll out push rorl addr16 inc jmp popa adc mov data16 push mov ljmp js mov inc and out mov push jle cmp rcrl and cwtl mov mov sarl int3 aas inc out pop lea jl pop add xchg rolb xchg adc mov popa leave (bad) mov push inc popf mov push movsw inc jb sarb je repz pop xor adc jb iret jne cltd xchg or mov adc iret sbb mov ljmp ja (bad) xchg or xchg cwtl lds and js mov sahf outsl add (bad) jl sbb adc xchg out pop sub test icebp imul dec scas sub inc cmc sti sbb fdivrs push sub push (bad) pop lret pusha pop dec push dec push and and or je ror push mov pop aam in loop fld1 ljmp in add jbe push stos bound test mov into lret jmp inc jge fnstsw jl (bad) cmp xor fsts pop xchg ljmp pop jns shll jp sub mov add add xor sbb rcrl daa daa xor and jbe xchg nop or xor sub ffree add pop rol push adc mov inc (bad) repz data16 jmp dec add enter icebp inc cwtl shrl xlat out movsl adc ja cmp mulb adcb shrb fcoms gs adc sub push lret or pop es (bad) mov outsb test shll bound mov push or xchg sti cmpsl movsl pop daa xchg shrl fld repnz out xor mov sub shr sub icebp push sub scas aad inc in dec sub das (bad) int3 scas pop negb aaa mov test mov and rcll cld (bad) lret rorb pop xchg idivl in push out push mov push testb das imul push mov cmp (bad) out and jmp lods mov sub mov push movsl adc ljmp movb andl fs rclb sbb dec dec loope cli jle push cld jo inc mov in int ret jl lret mov fbld push cld rorl jp or dec or imul mov pop mov mov mov cs mov gs cli (bad) sub insb pop mov push cmp test loope iret lret mov icebp out cmp adc test pop stc mov fist mov push mov mov and pop jge test dec ja daa icebp and push add xor (bad) mov (bad) and pop shl test lret mov (bad) popf push ret xor xor push push ja out xor mov cld imul ljmp cmp out pop and lods (bad) sub loope push loope xlat add ljmp sarl inc movsl xchg leave xchg push xor sub dec daa repz cmpsl adc fyl2xp1 movsl mov popa pop fildll mov mov loop stc lds mov adc xchg lods imul js xchg push mov out mov pminsw rcll dec cmc mov jmp or mov and xor xor movsl loop xchg xchg sahf in and fldt xchg nop pop sub mov inc adc ljmp or (bad) adc pop (bad) push ret add in jmp add stos mov imul dec cs ret or outsl lods cld xchg and push mov (bad) jmp mov cmc push inc imul mov fdivs pop inc movsl in cmp adc test pop bound mov inc lret sub das jl or sbb into mov pop cmp mov lods stc jb pop mov and mov pop adc rclb pushf in add subb mov sub xchg add mov data16 add pop insb pop lock scas test cli sub mov lahf inc mov xchg cltd inc lods popa and mov mov push dec jnp jbe add loop pop bound dec and std pop mov jecxz data16 js push ret adc repnz cmp inc mov jle push xchg in aaa or sub arpl mov dec jl or (bad) jmp mov xchg rcll iret xchg int dec ud1 pop add dec das clc xchg (bad) iret and insb mov push test push lret or dec aas mov pop mov outsb repnz mov mov cs jg lock or jae pushf inc mov mov sahf mov cmpsl add insb jecxz pushl bnd jle inc inc add nop ret stos pop decl xor mov dec fldt (bad) sub inc and pop pop push ret dec dec int3 test rolb mov sub in mov dec dec test mov mov push outsb nop xor addr16 or pop test cmp ljmp daa jae mov and mov pop xor mov pop out addr16 aaa shrl popf fs movsb loop mov movsb or mov mov pop addr16 (bad) pusha ret sub pop leave mov insb adc fmull push outsb aam stos clc adc or cs add mov lcall subl push add decb and xchg jae test mov stos stos mov ds mov push sub das ljmp xchg shll ret sub xchg stos push lods push fisttpll popf or je das fstl dec xor das out je ljmp add lret mov jb aas lret loope mov insl add ret mov pushl mov faddp or pushf push inc inc lods (bad) hlt das sub jg lods mov sbb sub leave div repz or jne jg adcl popf lods movsl jo mov and lods xchg or (bad) sbb std lock dec pop je scas in cs mov dec push pop aam pop js xchg mov (bad) aaa inc pop stos sub adc rorb insb lds mov sub roll pop out test stos xchg test push lock mov fs sub (bad) and lret push int sti mov loop sahf scas dec les fchs or dec jns xor dec sub push push fnsave xchg into movsl popf push mov push or adc or scas mov decb push (bad) mov (bad) mulb rcrb mov mov and and test adc into outsl jb movhlps sti or xor jmp iret mov push (bad) movb adc mov imul mov vpsraw pop push cmp lret fidivr out jmp sub loopne outsb mov mov outsb sub jns push jmp cmpsb idivl xor fbld cmp push sub jg mov and jmp (bad) stc lds xor cli mov dec mov test imull jne (bad) sbb xor ja cmp ret adc clc push pop sub mov push les sbb mov into int3 adc pop call aad inc xchg and add (bad) or dec xchg add ret stos mov sahf jg dec icebp lret scas add push or repnz (bad) and mov cmp mov call or in pop xor mov pop cmp ds adc xor repnz jl jae mov xor addps xlat push and stos gs clc xchg mov xlat lcall pop mov sbb iret jbe loopne loop fldt add push pop jmp mov xchg mov xlat or aad adcl sub push xor xchg pushl test mov push (bad) outsb in xchg movsb ljmp insb ret xchg push dec pop and idivl jne out cmpsb or data16 sub push lods lret aad mov sbb cmpsl dec fdivrl repnz mov jmp ljmp xor jmp mov push inc add or dec pop xor and sub loop mov sub sbb bound icebp and xor xor rcl (bad) jmp loop popa pop or jbe jb lcall aaa sub int sub test clc in mov or cwtl cmp add sub das xor pop je inc jns sarb test push and or push xor gs aad fs iret mov or rcrl outsb outsl daa add fild jnp push iret nop mov loope into push xchg adc hlt mov fldcw push or xchg lea clc scas shlb and sub or sub or lds lcall pop mov adc xor jecxz adc add dec add stc lock push ljmp sub mov mov dec and scas pop pop jle arpl add ret mov sub clc hlt scas cld and sti seta stos lret into ret lock sub sbb mov ret fstl lcall out pushf xchg jge je stos into mov add and or sub fbld fdivs add loopne out fisubr pop sub pop inc icebp mov inc pop into mov outsb (bad) pop out dec pushf mov xlat ss icebp dec and movsl jmp sbb enter pushf out or jne jp (bad) cmp mov test push push cmp and daa (bad) xor adc mov add jmp inc fdivs inc push ffreep cltd insb jno jge xchg call movsl adc xor fsubrl xor mov mov adc out les mov data16 outsb adc jo add scas lret adc aas fdivr mov adc mov and mov push (bad) xor push imulb lods xchg dec idiv sub and dec adc xor rcr rorb xchg inc cmp std lcall xchg or or (bad) imul loop jg mov mov leave mov rcrl or inc mov sub push jns xchg ret stos lret add out xor movsl leave stc dec push xchg test push scas inc xor or xor fimull enter dec push mov sub stos mov call sub jl add (bad) mov iret and xlat add ljmp (bad) cmp add gs lret inc sub add call ds jle fs or mov stc dec cwtl pushf sub inc cmp push mov mov jecxz add jne clc enter leave xlat shrb xor xchg ljmp lea mov mov out xor lods pushf negb mov sub dec xchg sub negb (bad) mov sub movsl adc sub sbb add xchg jmp gs dec xchg pop mov sar seto leave jmp sti mov shrl sub cmp inc or pushf lret add (bad) jge and std test add jne pushf fs and popa and pop add xor std lods xchg mov js das stos sub jmp pop lret faddp pop jae adc xor cmc dec orb in pop test pop les scas mov cmpsb or jbe pop push addr16 pop (bad) scas lret push call fs add lods scas and pusha xlat xor nop dec jl push idivb gs popa pop or ja dec ljmp rcrl mov scas jle or adc imull sub sarl es push and jmp pop fcompl adc in xor (bad) (bad) mov mov movsl xchg push lods sub push inc mov test dec pop jle imul dec lret adc (bad) fucomi popa in (bad) jae outsl jmp in scas pop (bad) icebp (bad) xlat xor sub std out or pop mov aam repnz sub and xchg lods pushf loop push in xor call ret mov push mov pop add fs jne push dec jg inc ja aad pop pop push mov cli call and push push pop ds das mov push add add xor jge cmp add jle inc (bad) push fs xchg jno xchg dec add add mov mov lock dec pop stc out jecxz or (bad) mov push inc mov sbb cmc repz mov (bad) push pop pop cmc jo mov fsubr jnp fisubl cltd or pop sub mov or stos sahf xor out (bad) pop pop dec idivl sub mov xchg lods push xor mov and pop inc lock pop add std sbbl cmp adc negl push dec pop add cmp push sub pop pop dec sbb cld cld mov in xchg adc rol stos je into or test push mov push mov pop push xor mov or shr add mov mov add xchg jns idivb dec and inc aas (bad) xor add pop inc int3 dec or add repnz mov jg jg xchg sbb sbb rolb movb mov inc add pop adc cltd fcmovu ja add mov sub mov mov in or xlat insb sbb adc or xor fisubrl inc lret std push in sub in leave mov bound pop sub pop call push or and rorl jne out sub add dec pop inc pop cli mov out cmp sbb mov push xchg dec dec shlb xchg shl sub add fnstcw adcb repz stos mov pop enter or xor cmp scas and fistpl out cmp jmp ret fs mov and sub and dec mov jmp cmpb repnz and and enter jbe push idivl loope cmp jne int sub (bad) jmp dec test sar sti pop lods mov flds idiv jge pop mov xlat fadd dec out fs (bad) fist ficompl xchg cmp mov add inc mov sub int3 (bad) repz daa pop add or outsl ljmp adc gs mov fcoms iret sub sub movb fimull movaps mov mov xor mov daa fisttpl cmc sbb xor mov sbb lds movsl rsm push call cs pop lret xor cmp ds test (bad) icebp ljmp pop stc add hlt mov pop int3 mov rorb jns cmp xor cld bound sti fldt (bad) mov sbb mov mull das ret subb out test push mov xor adc movsb (bad) loope cs icebp out (bad) adc stc adc or adc (bad) sub dec dec mov xchg mov or ret or out loopne and mov jmp inc push pushl inc sarb out pop inc inc lcall mov pop cltd fs cld test jmp add push jno dec (bad) mov jge add mov inc sub mov xor fnsave popf call sbb test xchg jg fcompl iret sahf pop stos xor xor xor lret jbe clc mov cmpl (bad) cmp insb sub sahf and mov or pop jmp icebp or sub dec adc shrb lods dec xchg cld add pop push out nop out or push or pushf dec dec icebp pop das sub xchg enter push jecxz mov outsb or (bad) cmp push ror push lahf jg pop add push push mov js sbb lds repz pop mov sbb mov jae ret shrl mov xchg xorl adc sbb out orb mov cmp cmp or je pop loope push sbb or and add mov fdivrs sbb loop inc pop fucomp and fisttpll lea dec dec daa lods fcomps and ljmp (bad) aas sub pop cli push add (bad) sub movsb out jle jae jbe dec jg add lea popf jnp jae rolb add (bad) cld or cmpb jg fstl push jge dec in dec push sbb fcmovu sbb jmp in pop call fcoms or icebp inc dec into decb out push loopne int3 inc push out jns or pop xor int3 add pop in das push or js xor lods inc aas addr16 sti xchg add push mov sbb cmpsb in xchg add (bad) jge rol inc sbb sbb pop aaa pop movsl out mov dec and add mov movb loope push adc mov cvtdq2ps pop nop hlt jnp ds xor cs popa xlat mov mov jge out pop rolb shll cmp push dec pop or or xor and cmp xor push out test jmp sahf jmp fiadd dec pop add out nop or fcomps dec pop mov xchg pop pop add mov jg mov pop and aas and xor jo mov mov popf sub pop pop mov repnz dec lock cmpsl push xchg loopne ja fstpt sub add imul dec rcl popf inc sub lret shll jl jae pop add shr popf xorb jno in add adc or pop ds iret mov mov (bad) pop and inc fidivrl dec std cmp pop das lret pop adc addb add and push call lret sub sub pop shl add inc pusha jle add jg xchg push dec sbb push sar ret arpl or jb cmp dec std sub xchg and inc and mov lods xchg push push fnstcw lock mov push fnstenv dec stos in negb cmp mov pushl clc mov cmp pop out hlt movl loop pop jne cmp ret icebp dec scas mov inc rcll sarb pop out jle adcl xor sub imul pop lock (bad) movsb or adc jb inc mov ljmp (bad) xor or mov cli stc std icebp hlt imul leave notb iret jge outsl xchg sbb xchg fwait xlat xchg shll aad and push icebp mov icebp js loope mov test idivl jle mov ja jo data16 adc ds mov sahf lods sbb imul dec bnd lcall and aaa xor push cli fistp icebp and (bad) xlat incl sub lret icebp add cmp and xlat and jmp add adc xor mov mov jl outsb cld cltd movsb repz and sub loopne repnz push push xor pop popf int3 cwtl or mov into fsubrl lahf int3 lods popf out pop ljmp test push xchg dec inc add fidivr and adc xor iret out mov (bad) xor mov cs lahf mov iret mov rsqrtps outsl dec out xchg loop enter (bad) push neg imul mov sub mov push adc sarb addr16 mov das test push dec movsl icebp fimull mov add xlat push add rorb stos (bad) jmp das shrb in or push adc das mov push scas ficoml push pop xor cmpsb sub iret popa scas outsb popa mov mov mov and rcll jmp mov or inc xchg add add out das out das (bad) sbb push jb popf sbb inc mov inc int adc and push lods push adc daa or std push sub push dec bound das (bad) stc rorb dec or (bad) int adc (bad) rclb sahf push adc and or jge cmp push std jo sti mov or fcmovnbe movsl sub daa and pop sbb and pop loope nop test pop push mov mov mov xor dec (bad) mov cmp cmpsl xchg int repz and dec and dec or (bad) mov jecxz mov dec (bad) out xor lret xor pop add lea or xchg add outsb out pop cltd (bad) std (bad) push lahf sub rcrb rcrl mov out lahf push add mov lret or inc cmp inc dec test adc and outsl out sub inc les and (bad) dec add add (bad) sbb jl push ss adc inc imul inc dec inc mov mov ret adc fsubs inc pop add xlat mov cmp jp inc xchg stos mov loop pop push and add add sbb push test jmp sbb push inc push xor and cmp dec push jae movsl inc sbb inc sar cmpsb lea dec movsl ds cmp push movb lock mov aam leave jg sub xchg jno add aas fsub cmp enter adc out push leave ljmp xchg std or and leave push and or pushf aad das xor push ljmp mov push fstps jo out mov pop fisttpll xchg sarb jb add or cmp ljmp test adc aas sub das push or loop sub cmpsb (bad) das int3 mov aas cmpsl add pop pop jmp in repz or popf (bad) xlat dec leave mov jnp je (bad) mov scas sub outsb push and push adc dec and lahf data16 dec (bad) in cmp lods in pop fucom or inc jmp lds and aad sub (bad) testl repnz stos mov pop push push je pushf adc push mov lds rol mov jge jne loop inc ror cmp movsl add sbb ljmp int push mov xchg push arpl lock sub add (bad) pop ja pop out pop mov scas mov jbe in xlat in ret clc inc add out pop pop add loopne roll and push push aas add or aas or sub cli arpl fsts xchg mov roll jg out sub rcl jns out jecxz lock and ja stc pop mov gs andl cmc push pusha push stos int jp push mov sub movsb jp adc jnp xchg icebp adc roll push mov dec cli repnz mov sbb dec lahf jg test push mov lods or xor xor jne cmp push sub add push insb in and in addb push push not test jo test movsb fadd (bad) xor inc mov or mov les pop (bad) aad xor xor or pop dec or add sahf imul or cmpsl push xchg or sub (bad) loop das bswap inc cli mov dec clc add push pop aaa dec mov adc push clc sub fs jmp loop ds and ret pop rclb push cmp sbb fimull jmp and cmp dec pop xor test rcrb scas or das jbe sub or outsl clc mov out mov loop pop or xchg icebp stc sti enter pop xchg add xor mov popa adc repnz push jae test aaa mov mov xlat stos sub or lret or int (bad) or lret add imul sbb cmp dec dec out (bad) xlat sub xchg push add or lods xchg xor sbb xchg stc mov pop xchg pop pop out adc sub int3 inc sub test mov lds or mov leave movsl xor sub insb insb icebp mov and sub test pop sub das mov sub lods jne or adc add and ret sub lds mov sub pop push mov adc sbbl ret and outsb cld xchg push mov push ficoml mov push js and cmc ljmp jns shrl insb xchg lret sbb pop jg add push stc iret jnp xchg rclb out fs bound ret aad mov pop cmc dec lret xchg aad xlat icebp mov mov rcll inc mov dec xchg lods sub jmp mov add mov mov push jae and mov call imul and scas repz lret inc and in ljmp sub dec add je loope outsb je test push pop mov scas stc dec mov mov ffree aas xlat clc dec sar mov adc xor adc divb fstpl cmp repz faddl and nop cmc dec jp lds movsl nop lods xor js pop add dec pop add mov sarb les ljmp xchg adc add and addr16 jne std mov add mov adc std pop jb mov jb stos repnz gs mov mov and sbb ds (bad) jae and sar repnz test pop sub adc stos sub iret jmp pop dec (bad) or xchg sub push and jmp push scas mov sbb je (bad) iret xchg dec mov (bad) sub (bad) lock in xlat call cmp fisttpll jae jno push pop repnz pop mov mov (bad) mov cld mov pushf add and fist mov insb (bad) sarb dec das fwait sbb mov lret scas lret dec jle jb jp lret test pop in (bad) xchg mov inc mov cmp pop into cmp xchg test sbb int jmp add pop mov into sub mov cmp out ja lahf pop ljmp addr16 mov dec mov mov or out fldcw out push pushf mov sub mov lds movsb popa jmp lret dec mov push cmp leave lea adc jno sub or popa and add out pop jecxz dec mov imul repnz ja jne sar mov xor pop push movsl lret aam outsl dec ljmp mov and xor fwait xor mov inc jl push mov popf jnp sbb pop (bad) dec ret and push or pop and in pop add mov cmp inc dec (bad) aam dec (bad) call aas ljmp aad ficoml xlat out popf ret cmp out add pop jae fnstcw mov mov sub xchg roll mov push xchg adc mov jle push (bad) sub xor in pop mov scas or data16 hlt xchg sub popf dec (bad) or dec out addr16 or push sbb add movsb loop pop or or push in rcrb gs gs iret in dec maskmovq mull (bad) xor fs ret mov call call jle xor xor sahf cmp and push xchg dec cmp ret pushf push divl pop add dec lret dec iret mov xor sub xchg cli (bad) ds fldcw outsl inc lock push adc sub test inc and pushl cld rorb bnd jmp mov ja (bad) lahf pop jno fsts add cmp jle push jne push bnd ror push lds (bad) xor sub add push iret shll pop mov out mov pop loopne ljmp fdivrs xchg (bad) mov imul and out ret mov in push adc sbb sub aas pop mov and lods xchg scas adc notl idivb (bad) stos (bad) cmp sbb clc or loope mov mov xchg decb or outsb xchg aas sub dec movsb call jno push cmpsl xchg adc (bad) mov sbb repnz pop gs and sub ret jg jg mov iret xchg pop ds pop push nop dec pop out jl push (bad) sarl lret and adc ret jmp mov adc cmpsl aad cmp pop jmp xchg xchg popl mov pop jmp repz and or mov loop out popf call mov sbb dec pusha sar mov pop add out xor dec pop aad movsl pop jl mov movsb xor cmp insb (bad) dec (bad) repz sti pop push clc fsubs ret adc ret jmp pop cmc sbb insb (bad) and or aad mov cmp xor (bad) movb daa into cmc xchg mov xchg icebp mov mov fcoms fidiv and sub call jle stos cmpsl inc mov std mov int3 push xchg out dec loope ret aam inc in sub out xor mov cmp inc sahf and aad or test data16 shlb cmc cld pop stc pop push push and dec sub cli insl mov cmp negl mov add rorb (bad) add fisubr add inc jmp (bad) imul stc cs xchg (bad) fstl sub jge ljmp (bad) imul or push inc or xor pop mov test jmp sub ss and dec xor dec popf nop xor (bad) or or or sub fbstp movaps leave sti movb and cs push pop lods (bad) aaa dec pop xchg adcl out dec sti out daa xor das jl (bad) jmp lcall jl loop xor bound sub and fldl push ja hlt dec sbb stos sub test in out pop pop mov adc push lds dec stos lret pop cmc icebp (bad) mov in inc inc sub add mov out lret mov sar sub test xchg adc push xor mov out xchg sbb loope mov jl out xlat mov pop xor jmp mov in fldenv and pusha add pop test lret cmc add sbb sar rol (bad) xor and sub mov bound jle fidivr add out sarl cmp pop mov enter notl sbb lahf mov nop das mov cli clc pop mov fucomp jg jp imul ret xchg lds inc pop and inc mov xor adc add mov into xchg fistpll ljmp call fdivrs mov dec pop outsb mov dec jecxz and xchg clc sbb popf rcll repnz jb or xor int3 adc dec and cmpsb imul or sub and cmc xchg inc pop mov (bad) inc and mov xlat cli cwtl cmp sahf popa pop pop adc xchg xchg (bad) jg push add repnz dec mov sti xor xor (bad) adc xor lret out lret mov push sub out stos pop fbstp popf leave sub lods int3 mov stc mov or xlat movsb sub mov lretw mov mov out jge (bad) cld adc outsl daa and sbb lods sub scas sub lods cltd xchg lods hlt lret sbb or lret mov sub ficom xor pop lods fs inc adc pop xlat stos sub sub mov inc fcomi add out dec fist jmp (bad) adc pop sbb cs pushf int test test sbb or rep and dec jmp add lret xor outsb adc imul xorl pop jle ljmp add int3 aas popf adc ds and sub repnz ja sarl sti sub xor int3 jg fistl mov push pop push mov adc mov pop ror mov rcll pop mov stc push mov rcrb movsl jge mov pop cmpsb cmp jmp push in ret into xlat mov xchg je jb out dec jmp je andl or (bad) mov or adc cmp clc push mov call sub xchg or pop loopne jno inc add dec pop mov inc test mov lock push xor add inc mov lahf (bad) lahf pop and mov pop stc cmp jbe add jp xchg aas repz (bad) lcall enter sub pop dec and aaa cmp decb fs mov inc inc jmp xor pushf movsl push fisttp and bound pop out outsb sbb inc or adc cmpsl aad cmp scas bound idivl mov imul and xchg iret gs mov mov mov int3 pop ljmp (bad) xor add mov pop fidiv pop fiadd pop push xor lods (bad) jno leave ljmp mov jecxz dec stc xor add mov jle in mov fild mov (bad) pop icebp sbb and bound loope lds lods shrl fsubrs sti leave test jo test repz add shrb sti or jecxz mov movsl (bad) jmp enter (bad) ljmp out mov cs lods sarl and test adc mov int3 test fisubr test (bad) sub push or lods sub mov add or jge movb popf xor add scas jno ret sub or scas jl xchg adc fwait xchg pop jne pop addr16 (bad) mov pop je imul add mov fnstcw sub jns add (bad) pushw lahf or das and repz jb mov sub mov xor mov dec cmp pop fs (bad) add mov mov out call ficom add cmp or jb (bad) xor add mull mov mov jg lods movsl je push xor out pop mov pop addr16 sub xchg jge nop push xor xchg aam stc es roll inc mov or mov nop fwait shll xchg add out jmp imul xchg call pop out data16 pop mov nop xchg push mov nop xchg lahf push inc push jle out or mov ja sbb leave mov and shll repnz lahf sub xor sub push xchg sub jne mov pop clc or fdivrp ljmp xrelease enter and adc loope sub mov dec jmp int3 mov ja sahf pop add pop sarl out in int adc ds jb pop (bad) mov (bad) out and test repz cld lret mov xor aam (bad) xor add out popf mov ret dec mov in and mov jmp (bad) fmul mov imul add pop cmp add mov shll and lock sub mov adc sub dec ret mov popf fstl jmp popa and mov jge popf pop mov and mov adc sub jmp cmc mov sub mov and cmp push mov dec xor enter add fsts icebp mov xor sub fnstsw push cmpsl ficom mov loop jge test in cmp scas cmp insb das mov test mov test repnz rclb cltd adc pushl (bad) inc jle les push jmp or jl inc add xchg fwait movsl pop add ror ret add mov stos xor mov add data16 cmpsl fadds sbb and fcmovu mov sub or hlt or sti xlat out int add out mov and mov sub leave decl mov jnp and scas jae lcall loope xchg lods nop pop and popf (bad) push lret fadds lahf fisttpl repnz call pminub std movl mov bound rorl mov and push ret jne or dec out testb mov ficompl fisubr arpl pop iret scas cltd jbe repnz jae sub cmp repnz xchg int3 sti and ds les in jge int3 push sbb negl or decl xor add or jmp pop lahf out mov and sub sbb push je imul rclb sub dec sub into daa iret out mov lcall jnp pop movsb out jmp in cmpsl (bad) iret xchg cmpsb bound (bad) jge sub add or into mov fiaddl (bad) inc mov sub xor mov (bad) push stc adc std fwait stc lds mov insb mul jo ret add fmuls sbb mov and lret adc sub test and rol xchg jmp pop jp push jb sub inc jne mov xlat (bad) jg imul xor stos sub xlat das and ficompl xchg xchg jecxz add fucomip add stos xor jecxz sti ja mov cwtl out sub mov and mov mov cmp xchg loope inc add and into push xchg lret inc dec mov jmp imul loop mov or jo xchg cwtl sub repnz pop pop das and (bad) and or imul fisttpll jle inc mov dec inc rorl push xor pop into mov repz jmp add fs and add adc mov mov cmpsb xchg mov jp into mov push setb pop mov lcall mov push jns negl pusha cmp or dec or rcrl repz mov ds mov idivb mov add push xor ffreep ret or mov jmp (bad) test out mov out pop ret mov repnz inc lahf pop addl cmpsb jb xor pop xor sti jl and xor fsubl aaa xchg jae xchg inc sbb into pop xchg leave jmp insb dec pushf mov push inc mov out inc mov xor cltd push clc loop lret pcmpgtd out mov cmp adc lret jg (bad) mov push nop mov pop pushf scas cmp je rorl or addr16 mov ret repz xor inc push cmpsl fldt or sub mov and xor fnstsw int3 frstor iret sbbb push mov mov xchg repnz iret inc cmp test mov adc loopne repz dec incb lods call jge in and mov cmc push mov push add push pop out xor out lret cmpsb push out xor pop jmp lds and and or ret flds scas fs es xor dec dec jecxz pop lret and out test outsl mov jne xor mov adc ss icebp loope xchg cli mov push divl xor fidivl ja cmp out pop lock rcll lret mov dec clc lret lds (bad) repz es and add fcoms pop movb mov aaa xchg or repz into sub add cld out arpl leave je pop into sbb mulb pop imul (bad) jb push or sub fsubs mov mov leave (bad) cltd outsb lret cmp sub loope lods cltd mov push fisttpll pushf xchg jne jecxz mov sub jbe es je push mov test pop xlat mov stos adc mov lcall xorl jmp out sub into dec sub or cmpsb mov pop sbb notb loopne,pt xchg loopne sbb add cmp mov jge stos outsl or ja mov aam cli std adc sarb rorl cmpsb decl xchg mov int3 pop mov xchg adc in jns into dec push mov std (bad) lret xor sub add ds cld dec jo fmuls inc add mov out pop push cwtl mov stos or dec mov (bad) decb mov and sarb lret call push mov mov push dec push pop ret fs loop lret fisubrl or sbb test sub jne scas push daa and lahf movsb and push das shrb repnz xchg icebp mov sub cwtl in jecxz outsl xchg sti mov dec mov push inc (bad) xchg rol fs mov xchg cld cld dec sub shrl lods and fnop popf cld hlt in scas std xor sub cmpsl push and jge xor add pop mov adc add push bound dec cmp pop sub push add les into gs out mov xor mov xchg loop sub sub sub sti jb dec mov sarl stos pusha push mov mov and or lods (bad) repnz xor subb and xor or dec mov mov notb repz lods cmpsb mov cmpsl push into imul or (bad) out (bad) mov jmp inc lret xchg dec lods xor sti leave (bad) push (bad) push sub jg xlat mov mov out jne pop and clc (bad) mov fstpt xchg loope jg jnp (bad) lock xor adc push out bound (bad) fwait imul shrb dec insb jb flds push mov lret out rorl sub pop ret or push adc das jecxz adc xchg mov xchg int3 repnz (bad) out leave xchg imul jg lret lret xor pop icebp fmul (bad) jmp test dec pop pop mov inc xchg jmp push adc leave (bad) std xor push bound push push pop js sbb xchg xor pop mov jne (bad) mov adc jp dec frstor aas lock hlt cmc inc mov dec mov lock dec xor dec dec mov inc or clc cld xchg dec push push jle fidivr inc mov (bad) inc pop add jns rclb cmp (bad) xor push add aad mov and jg loop imul jmp inc push push push (bad) leave push scas push out jmp dec inc pop inc mov pushf and repz push iret inc repnz mov clc or jno out mov adc das cmp pop and cli push add popf bnd mov pop jp inc xchg scas xor (bad) test nop cmp ret aaa cwtl xor test cmpsl (bad) inc (bad) or je int3 incb nop dec movsb pop push pop sub shrb aaa mov mov xchg fisttp fildll testl aaa mov xlat jb add lods pop cmp (bad) outsl lret ret push adc sti fs cmp jge cltd push loop push mov cmp or sbb mov stos gs loope cmp leave pop cltd outsl add cmpsl sbb xchg mov inc xchg dec jmp push ret sbb jnp daa mov ja xchg lret ja loope xchg and cs fstpl cmp scas sub add aaa pop (bad) popa (bad) out sub lret (bad) std inc jecxz notb fwait and ret sar cltd out push xor sub push aaa inc or sarl mov jbe repz mov lods push iret sub mov jnp xchg mov add (bad) pop sbbb jmp lea cli fnsave icebp andb push jge xor or rorb ljmp lret mov push repnz popa pop xor out sub xchg push mov mov je fadd or jbe inc xor add or lahf insb jle,pn mov (bad) sub out pop int3 std mov add inc mov popa xor push jne mov push jb insb or (bad) cmc pop in gs push out xchg push pop cli dec lret sti test jle sbb into adc mov clc je adc add push fsubs and idivb mov aas lock cli lock dec and popl repz pop imul fisubr push mov mov sub xlat stos sub mov xor add sub or fisttpll stc mov mov icebp mov push out out lock jge lret ljmp rcll lock dec cmc shrb push push xor bound mov cld or out in or mov aaa mov xchg add arpl adc idivl lret jmp or iret sub xlat mov jne xor and push ja (bad) sub xor cs jae and xlat push pop xchg or mov and sub dec sub sub or jmp lds jmp in sarl push andl sbb mov dec push xlat shr jmp mov pop jmp mov jb sti popa push loope bound or pop inc sahf lret fnstenv and or cmc test xor les data16 lret lock mov lods fcomps jae push ret sub sbb (bad) enter stc mov jo jbe imul int3 sbb mov shrl es mov out xlat mov xor inc mov in push lahf (bad) xchg call xchg dec xchg movsb xchg pop xor add dec out xchg (bad) cmc mov insb adc lcall mov clc and dec mov adc lret push rclb fs test and fs mov adc add mull out pop sub clc sub and ror sub mov mov movb jbe adc or loop pop jbe leave ret push mov or sub jle imul jmp ret cmp mov das mov pop push jnp out ret in (bad) xchg mov jmp jnp repz (bad) and clc push xlat icebp lahf jp aam (bad) or xor pop out fucomp scas mov popa imul pop sub aad push mov jg or das lret stos add pushf or xor das mulb into xchg lods fcmovb or lods notl ror jbe dec mov push rorl das fsts inc jmp pusha inc xor mov (bad) outsb jmp dec std xchg out jmp dec push pop movzwl lret stos mov push (bad) xor add push pushf dec pop pop lcallw hlt add mov ljmp mov xchg jecxz xor jb jne adc movsl aam pop dec adc test mov mov add lcall and lcall scas pushf sbb inc leave push les fucomi je pop pop push (bad) lret pop adc mov sub mov add mov pop adc rcll and sub ljmp sti xor rorl fldcw mov daa js add leave sub adc (bad) xor mov xor or push cld jo notl imull lds mov sti add outsb mov sub test ds mov fnop ret sub popf jnp xchg xor xchg (bad) pop pop leave or (bad) xor xor das adc mov jge repz push adc dec pop jl dec int3 mov mov das add cmpsb in dec clc lahf leave leave pop (bad) fs das int cmpsl (bad) push insb dec xchg (bad) (bad) mov and lahf xor jge fcomi cmp out cmp dec pop jbe ljmp dec lea clc imul mov jmp mov push (bad) dec sbb add (bad) inc dec cld fs xchg loop (bad) ret mov jo add inc mov sti pop call and int test mov sub jge cmp sub and dec fiadd (bad) sub push pop pop push fwait sub cmp divb pusha xchg adc cmpsb clc sub out xchg inc gs jbe fs in data16 je ficom adc mov sub xor loop inc mov std mov dec lock sub imull push push ffreep or add iret icebp jle mov pop xor test popf in ja icebp icebp lret xor jnp iret mov mov jecxz sub into daa mov jns cmpsl aad xchg xchg iret bound pop fisub push mov fwait add cli cli dec repz and lds and mov pop or gs scas cwtl adc xor inc mov shll lods ficomp xor jbe jmp cmp movsb inc sub (bad) mov sub fstpl cmp icebp or xor jo sbb or push push add leave push sbb pop iret repnz xchg popa push and jle hlt les repz test xor mov mov or (bad) cwtl movsl call jo add pop shlb xor jle jmp pop sub enter or adc jecxz inc (bad) pop and into xor hlt mov lock test stos (bad) mov aad sbb sub push xlat inc cltd pop out ljmp repz jno lret jl outsl xchg adc stos fsubr (bad) dec inc mov clc call daa jecxz gs xchg repz lret push popf decb mov ficom outsb int clc push push bndstx cltd iret loope imul shrb xor mov ljmp mov das les dec or dec scas lret popa and call add push cwtl cwtl or xchg cmp (bad) lret fimull or or pop cmp pushf mov pushf and mov push xchg fucomi mov daa pushf (bad) push pop jle mov adc add adc cmp mov gs sbb mov pop push cld out mov dec mov fist repz sub xchg push mov jns pop lret adc jmp and test mov jg in pop lds lcall imul (bad) mov sbb fs loop jno pop clc pop imull lcall mov fwait jge sarb cmpsb negb sti jb (bad) push push jo inc pushl lods movsb mov sub dec out cld daa movsb out xor loope fdivl mov into mov cltd pop addr16 inc popa nop and xlat cld (bad) shr mov lcall inc xor jge or adc add xor cmc roll lahf pushf lahf mov or enter stos jecxz into loope (bad) sub inc (bad) adc mov aas aaa mov dec jecxz dec add mov and test (bad) sub or roll sar lds pop out repz dec dec lret test inc cs repz ljmp pop push cmpsb push sbbl icebp outsb mov das xor xlat (bad) loopne ret pop cmc pop xchg out cmp mov sub sub mov sub out dec movl sbb xchg imul mov pop sub lock jne sbb and sub adc xor add call lret add aaa cwtl inc popf xchg out ficom lret xchg cmp movsb lea push lock movsb mov jecxz jle push sub sub mov and ljmp repz sub scas pushf jmp push loop aad leave dec test movsb xor (bad) imul jg lds mov and scas in lods mov leave loope insb jbe mov inc inc pushl or bound out pop jno dec popf xchg and daa inc xchg xchg (bad) leave mov and pop adc loop rol cwtl push ret es jno add outsb mov movsb aad mov imul add icebp jle in nop rcl mov (bad) aam test cmpsl imul test ljmp pushf test das xorb push in clc out mov repnz and lods xlat xchg aam pop inc ljmp sbb ret fistp sbb clc clc mov mov divb mov leave push mov sub lea (bad) imul mov and jg lahf or test dec mov xchg pop (bad) int3 jle pop or cmp icebp sbb dec stos xor sub mov outsb or out pop mov pop mov dec cld (bad) into (bad) dec ret mul outsl xor add and mulb cmp xor (bad) mov mov sbb or push pop mov sbb or jecxz fstps imul sub mov mov jmp int outsl ror fildl sarb pop mov jnp std jae or mov in inc mov imul fistpl test mov lret (bad) jp leave adc loop pop das add (bad) pop les out fadds mov add pop push push fnop mov pop add pop add std or repnz outsl xor add (bad) xchg fisubl daa nop mov xor scas mov aas mov push fcomps push adc sub xorb jns dec into jecxz xchg mov sti xchg or sbb loop gs fs push pop sub les jmp repnz xchg xchg cld imul inc ljmp adc or repnz (bad) and cmp cli out popl push jnp xchg mov iret daa inc and sbb xchg cmp lock or dec bound idiv or clc dec sub jle movsl pop in movsl push fcoml xor pop mov das stc or pop lcall daa divl inc adc and fwait pop (bad) mov xor jbe pop sbb and (bad) int sub and mov pop std les mov push push add fldcw ror sub out stc jg sbb dec iret shrw and sahf sub daa add jne cmp and inc repz pop dec mov dec adc cmp je mov pusha adc arpl jmp jle ss rcll or xchg pop nop mov fistp dec or dec push adc ljmp fs lods jnp stos mov xchg jb out out lahf imulb aad mov neg mov into les sbb fucomip icebp xchg fimul jno call jno dec pop dec cmp mov adc orb pop mov push mov mov cmpsl sub loopne (bad) or sub cmp cmp push xchg decl test mov push sahf das mov pop aam stos and test cli inc test pop sub data16 mov insb jl dec add daa cmp sbbb jo or cmp iret push nop add xor jg xor je outsl popf lods faddl or push sti out shr enter mov inc xor push push xorl push jmp push pop push push adc pop push ljmp pop add mov pop mov rorl xchg jg mov xchg mov jo cli push lret jg push in cmpsb pop (bad) jge dec loopne sti lods fild ret rorl add scas dec inc add lods iret int fwait pop cltd stc pop inc xchg out mov orl daa sbb mov or mov (bad) lret or adc pop mov testb popf shl mov xchg push jge flds mov add pop add (bad) xchg pop repnz jle lret jne fstl rcll mov mov fiaddl mov pop push ja stos mov dec inc xchg cmc xchg jnp mov dec mov clc xor lock repz fs les mov push out inc (bad) arpl mov mov dec insb dec aaa or inc fildll push cld mov sarl stos mov or xchg loop bound or scas js or test repz pop mov mov mov adc sub lods jge rcr arpl lahf je push xor xchg pop mov add xchg push (bad) repnz out fwait cmp das sub mov mov dec (bad) dec imul mov and xchg out daa repz cltd fldenv jle test cmpsl test pop cmp cmpsl pop dec ljmp mov mov fisubr ds movl xchg push or mov rclb xor pop pusha push shll (bad) enter cmc add out pop mov sbb pushl (bad) sub pop sbb xchg bound mov imul (bad) test int3 xchg jle insb sub outsb mov xlat leave push popa pop imul (bad) sbb push cmpw jnp cmpb insl xor int3 daa (bad) pop mov xorb je stos mov dec es and sti xor in (bad) fdivl adc jecxz cmp dec xor rcr xlat dec fsubp adc mov jne cld or lcall push mov push fldl testw jbe (bad) fild in cmpsl shl or out aad add xlat icebp loopne xlat sub xor mov insl mov out and ljmp fsubrp fs mov jmp daa aad test into lahf jo (bad) icebp mov cmp imull lret out dec stos popa addl lcall les mov fild (bad) xor mov jl lret pop ss jmp dec dec pop or lret mov push mov push add clc add sub out ja or lret or rol or mov mov push xchg or repnz lods mov imul mov cs or cmp push stos push mov cmpsl sub nop ret xchg jmpw mov sbb shrl mov iret sub std (bad) adc push popf pop icebp (bad) push sub sbb (bad) jbe (bad) (bad) cwtl outsb add out pop mov cmp mov cmpsl icebp ret addl cmpsl cwtl adc rcll cmpsb fstpl xchg cmp dec or or mov xchg stos xor adcb rcr cmp daa jmp inc mov push xchg and sti mov (bad) sub or fnstcw into lds pop pop test shrl push jmp ret leave inc (bad) pop repz or movl or outsl lea mov pusha or and leave pop push fwait lods adc xchg stos mov xchg jo dec xor in jnp xchg inc fcomi pop and jge pop xchg test dec cmpsl out pop inc fisubl int3 lahf mov lret mov cwtl sub roll int3 mov lahf adc and inc pop icebp movsl pop xlat fs xor (bad) adc (bad) push aam gs repz clc ret cmc scas subl (bad) cmc andl rcrb inc enter pop orl pop sub gs add sbb jnp sbb scas in push mov stc (bad) fldenv adc xchg dec ret cmc lds (bad) out sub leave sti lret (bad) and (bad) mov js and jns and mov popf pop pop lahf jbe push fldenv add mov negb push mov or mov mov aaa xor inc popf mov ljmp aaa scas aaa outsl test jmp and js inc sub ja jmp out icebp lods mov mov loope sub iret jle adc out fisttp push fidiv iret sub sub out dec inc mov mov leave xchg jne jp outsb call popa or mov (bad) sbb fsub aam fdivrs test lret add lret xlat repnz pop and in dec shr sub pop loop mov push icebp stc cmp scas sub orb in lret mov loop scas fidiv lret jecxz mov daa enter sti mov push xchg mov in popf jg mov and aas xchg adc decb shlb push rdtsc shrb ss xor add inc loop loop stos jb fsubr (bad) cmp outsb clc fsubs dec popf inc das adc jo mov pop out movsl mov popf xchg data16 pop xor mov movsb shr popa pop out xor push mov mov dec sar fldl movsl add icebp xor jmp dec mov mov cmp outsl push pushf ds bswap outsb inc ds or push fcmovnb add push push dec pop mov ret ror subb adc repnz sub and bswap and sbb sub or std jb lret xor lods mov mov lcall (bad) adc mov mov int mov lds mov popa fcmovne imul sti add mov jbe mov loop pushf movsl xor or xor into inc aas sub push insb jb cli or scas int3 hlt pop and add add dec les scas popa lock loopne cmp ret sub mov in and loop mov sbb out add add and sti or icebp pop into mov cmp cmp xor mov in ret and ljmp fisubr repz popf adc dec cmpsl xchg dec lock popa mov out mov out or mov test test and xchg cmp sub sub daa sarl or xchg stc pop jg fucomip scas mov jg add jp mov sbb roll sbb sete dec call jnp dec into lcall mov add mov xor adc fstl stos shlb jo xchg in aas sub (bad) lret ja loopne stos lods sub (bad) aam and mov sub lret (bad) cltd jbe mov (bad) mov imul shll loop imul dec stos lea add loope cld lcall stc or add rcr add mov in cmp pushf pop push out sub aam jl mov mov aam pop rol dec ss mov xor lods insl test xchg ss pop ret jne (bad) push add push jmp imul xchg ss pop daa and push ds or fist imul enter or clc mov add mov divl jno jnp repnz (bad) into out push sub lret xlat test lods fwait mov mov mov neg dec outsb (bad) repnz les xlat lods sub pop mov inc imul fwait scas push add xchg int3 lahf sbb nop call cmp add xor mov lods or js pop outsb cld arpl sub sahf and sbb jmp das and pushf xor pop popf or add push inc and inc push out popf das sub icebp mov xor lds mov shrb xor movsb lods xchg xchg cli xor int3 sbb push adc jns xchg fidivr rcrl sub (bad) fldl2t xchg or rclb (bad) jmp int3 mov dec (bad) (bad) mov pop mov sub mov xchg jmp cs mov sub test or xlat mov inc mov lret in scas jne xor push push mov xor mov (bad) lock push cltd xchg sub xchg cmp scas bnd ror dec and inc movsb lods push sub add outsb test jmp xchg mov add add nop mov dec shlb adc add mov cwtl jp pushf pop push pop (bad) lods and rorl mov mov idivl sti dec stos stos sub dec out adc or out clc call mov jb call xlat mov pop int out jl jnp bnd sbb push out xchg out add xor sub movb inc xor (bad) xchg data16 and add out lret sbb xchg xchg push sub push sti leave js mov and or dec in cmp cvtps2pi sahf fcoms mov pop lcall xchg push je lea and pop or mov mov inc mov xchg fcomi mov sub mov or sub push mov cmc add and subb jne pop fnstsw xchg mull and ds dec push mov xchg jnp pop (bad) (bad) fnop cmp stos fucom imul jno test add nop test imul mov jno imul push adc sub aam pop sub pop repz or in mov (bad) ds mov mov push or clc mov (bad) loopne nop out into mov (bad) daa (bad) jno leave and insb repz mov sub mov fbstp dec hlt add xor xchg xor stos fmuls mov dec jecxz (bad) jmp push and in int3 xchg pop sahf xlat sahf notl or fmul (bad) cmpsl faddp or inc and adc out pushf sbb dec iret mov mov movsb mov (bad) notb in stos sub pop int sub out pop loop xchg repnz call jmp in mov (bad) jg xor mov inc jnp push mov movsl addb or mov add dec cmp in xchg sar cmpsb (bad) mov or lds push loop or jbe push and or insl or ret jmp sahf cmpsl sbb mov scas sub or rorb and mov or (bad) out push stc xchg (bad) das loope aam push jge negl push leave ds inc movsb adc sub cld ljmp mov mov js ds mov cmp pop stc xor sub jecxz and bnd (bad) lock push into test ja fneni(8087 jle (bad) pop fidivrl movsb push mov or xor xor cwtl rorl lahf fnstcw sbb mov sub add and xor loop rcr daa cmp xor lcall mov mov sarl popf je fildll mov (bad) xor jle xor cwtl test scas repz and nop mov push es or add sbb mov or popf push fwait xchg roll cld cmc xchg stos jecxz lret neg jle sti lods sbbl leave sahf imul pop and stos popf xor loop jge xor mov rcrl stc movsb scas (bad) and dec cmp or iret popa xchg lock je cmp and stos or add bound dec jb daa repz xor mov mov pop xor push mov aaa and xchg mov ss ret fs dec jle xchg cmp pop sub lods or pop fist rorl and movsb and or andl sbb pushl (bad) sbb out pop jmp std push movsl xlat inc xchg pop mov into (bad) and mov (bad) ds add sahf inc les fldcw cld fdecstp stc popf (bad) push or mov mov sahf loope jns dec pop and adc pop (bad) ljmp ret insb pop and inc jp pop fnstcw or aas loop mov jno cmpsb repz out das cli sub cmp adc cwtl cmpsb nop cmpsl lahf xor jg hlt daa hlt adc roll pop jge out movsb xor and mov lret cld scas lret call sbb hlt scas imul fildl xlat inc push xchg loop or add and mov mov outsb bound ret adc cmp sbb in lods out notl pop pop pop loope std adc stos fcomip mov or test or xor mov call xor mov popa faddl add shrl and jge fidivl hlt stos ret out out ds mov insl data16 mov fcmovnb fucom js mov cmc xor dec enter xor lahf xchg outsl mov mov cli popf dec jl movsl mov sub stc cmp ret pop push adc jp mov xor add mov (bad) sub push iret lea mov stos cmp enter xchg inc rorl lock imul push mov fldt pop dec iret imul xchg cmp or mull daa adc mov insb (bad) push xadd and aas nop ret jle (bad) imul stos jb push pop lds mov jae dec sar adc cmp xor jmp push mov scas dec data16 and sub rcrl inc and leave fcoms movsl fsin mov sub jecxz pop ficom fucom aad jo icebp sub and loop mov lret pop iret cmp pusha ret dec and mov subb movsb scas repnz (bad) lret inc repz mov xor (bad) leave aaa icebp fbld sub fucomip inc ja pop pop and repnz fdivrs add or jl xor movzwl cmp inc mov add addr16 xor popf into testb aam mov mov mov popf lcall lahf in sub or xor les test lods scas int sbb adc dec adc sub mul in sub icebp mov sbb xor xor mov movsl inc and bound inc mov xor jo (bad) cld jmp or scas loope fimull (bad) push push in mov aad ljmp fnsave mov fisubrl mov add and in dec daa movb add (bad) sbb mov pushf jbe push ret lds out popf lret mov sub and xchg fabs imul push jbe jp sti ja mov push mov aas mov stos mov xor rcrb popl lahf jnp push notb into std loopne mov sub sub daa (bad) imull lcall sub fst lods xchg pop mov xchg xchg (bad) stc loopne testl pop adc pushf out or fs push mov add sub loope cmpb cld lahf mov (bad) jl ret fcomip push jle or (bad) in inc ds imulb sbb push (bad) xor les jecxz daa (bad) into daa adc xchg scas mov sarb xlat adc mov or loop xor icebp add cld mov ljmp lret dec ret adc clc call mov adc sub sub jmp jge pop outsb or (bad) popf scas jge hlt mov jge,pt orb lret ljmp (bad) xor dec fisub xchg pop stc cmp and fs pop dec push scas and jns sub movsl out ja mov sub rclb (bad) stc cmpsb lds (bad) loope adc aad aaa aas mov (bad) les cltd pop gs mov mov dec into mov jae mov (bad) je rorl adc sub je and jmp sarb and xlat mov inc cmp hlt ret pop ja sbb jge xor mov pop xor and jno xor push stc jo xchg leave ja fadd nop test lahf jl lds cwtl pop lret popf fsubrl out aas loop rcr and out cmp out mov fildll sahf loopne mov sub adc or into jle ret rorb mov pop (bad) out popf dec cmp out and or xchg add mov pop outsb ljmp push mov out nop fistl into ret mov sahf xchg loopne (bad) or (bad) lahf in adc xchg sub in cmp push pop popa out sub cmp mov into (bad) lds fist repz push xchg dec daa push out cld adc xlat sub xor jne jnp adc mov pop pop lds sub and jmp push icebp fiadd loop or decl out mov into and in mov (bad) and decb movzbl inc mov je push push push (bad) je sub adc xor (bad) ss outsb cmpsl je dec pop sub xor std test xchg loopne rorl or out ss xchg clc stc pop mov das ret adc pop fist jge cs jmp and ss aaa sub outsl cltd cwtl add inc inc ja sbb cli ret pop mov jae test mov mov enter or test mull inc xchg scas mov dec shlb (bad) fs push hlt iret aad push lds lret mov mov inc mov xchg mov test das iret sbb or pop adc and and shrl scas mov xor cmpsb scas and fldenv sub sbb mov push sbb jae fisttp fimull sub jl pusha (bad) cmp clc decb mov add add pop ret and xor sub (bad) fs out adc cli mov repz mov fistpll int3 fstl clc scas cmpsb ficompl fwait xchg mov test sbb cmp ret add add rcrb xchg mov int3 (bad) xchg test jb mov inc ret pop daa add xor std jno dec dec cmp out push mov xchg mov and adc lods rclb push cmpsb push mov xor jb cmpsl das fidiv leave and and enter or decw cmp imul jnp xor rcll xchg mov cmp dec and cld xor xor cvtdq2ps (bad) shr fisttpll cmp and loopne sub es and out into adc notl and dec mov add je insl ljmp xchg adc sub pop mov and cmp mov test dec mov inc ljmp divl int3 pop sub sub or cs shrb test cmpsl mov call push adc out lret in out pop scas xor popf xchg jns pop sub adc push ret popf fldt sar jl dec lret mov adc adc sub out and mov pop fstps adc bound pop xor xchg dec push mov jbe or mov or lock pop push mov mov in jg mov mov nop adc pop andl ljmp mov out clc setle and adc sub stos mov mov bnd in test daa into jle imul or dec (bad) cld divps xor leave or cld aad out or ljmp sub inc xchg mov and dec testb mov and pusha sub sub lock adc ljmp daa mov pop mov push mov icebp push mov negb sub pushf mov (bad) out sar adc jb push and pushf mov ret outsb lods mov outsb sub mov add call cmp (bad) or int jo xchg push and and pop js xlat mov jl pop inc mov adc popf fiadd jmp lcall daa rcrb out aas repnz stc and ljmp xor add outsb test lods pop push rcll pop jne xchg jno pusha js mov popa pop cmp push divb outsb call cld mov mov mov cs add out sub movl test xchg rcrb adc mov sub mov mov dec iret jmp pop xchg scas push sub shll in repnz xlat jmp fs dec lock pop or cli mov sub and mov fwait sub dec pop push add scas and sbb das dec add aad fstps jle lret fildll out scas xor lds mov cmc (bad) cld jecxz (bad) aam test xor repz loopne iret popf inc xchg or sbb xor movl and popf xchg insb adc loope xchg bound movb icebp dec push xor bound mov sti cmpsb outsb xchg stos mov inc and daa xor outsb jno cmpsb iret pop (bad) mov mov adc sub decb sub add fs xor and dec jl scas sub je fdivrl push push daa xchg or dec ljmp out popf inc jecxz jp push ret ret dec push insb in testb cmc rcll icebp aad popa addr16 data16 push mov enter pushf and pop xor paddsb in xor mov (bad) repz je loop pushf xorb adc pop cmc lret pop hlt into scas dec mov fstps dec movsb mov addb decb insl into fisub sub mov mov addr16 scas scas dec in and mov pop and mov dec and mov pop cmp clc push mov pop call xchg ljmp cmp scas cmc cmp je les or fbstp or scas mov sub mov mov fbstp mov pop or add push mov sub push outsb add xor insb in iret popf cmp cs pusha movsl xchg xchg (bad) lea lea jle loope pop mov jecxz lret (bad) pop imul icebp (bad) mov in and mov test sbb bound xor mov or sub mov pop sub sti pop add mov movsb sub jl push sub mov fnsave sub cmpsl push pop or (bad) mov cmp and shll fist jo mov lods dec mov cmp iret xchg jns mov sti or dec rclb mov les inc test jb mov and adc (bad) loop insb in and adc lahf push mov and mov mov jle test imul adc and das lret fisubr pop cmp and and cmp dec das shrb (bad) mov imul mov xor lret loopne les call gs outsb dec push cwtl mov lret imul sub loop (bad) lods jp roll inc mov ficom lret dec or add sub sbb pop ljmp add xchg mov and aad std jmp rorl dec pop cwtl loope subb mov and and xlat stc outsl dec data16 fnstsw sbb cli out cmp movsb loop dec xchg pop in call adc dec ljmp adc insl adc adc pop int ds mov imull daa sub repz adc jecxz ljmp mov popl xor out sub imul leave out decl xchg adc ja xor xchg push jne stos or mov lds in popa push and leave xor xor push cmp ror adc lods lahf xchg mov add outsb mov pop scas sub mov cmp xor dec sbb push and dec pop mov mov or int3 sbb adc pop (bad) outsb jb loopne xor lds adc mov adc ret (bad) (bad) adc and lods aam ret ja iret jbe inc fisubr adc xchg mov sub pop scas sub cs pop add mov sub lret pop add fucom dec and jecxz fs and out jne cli iret or pushl popf decb pushf outsl test not (bad) repnz test and cmp jle push stos mov mov sub aas call mov sub (bad) test jno dec dec or dec stos flds stos enter xor inc push in ret mov jmp xor jge loopne and fmull adc jmp lahf stc dec sti push and leave rcr in fisub test loopne testb cmp cmpsb scas popf adc xor pop lds nop daa and mov pop add pop (bad) dec dec mov sbb into sub jmp dec repz inc and mov fldt sub sub inc jle sti mov and scas jg mov pop and fldl mov into fs repz repnz scas out sahf adc scas lret (bad) xchg pop adc mov xchg dec lcall mov add jl lea cmp xor loope mov lods fwait cmp push icebp xor (bad) stc repnz pop jmp leave test negl (bad) mov imul es fs test lret inc je insl jmp ficompl lret fildl or add push scas fdivl in sub lods icebp xchg int and cmp xor negl dec xlat fadd out lahf clc jo fldz movsl sbb xchg shrl iret inc jge mov lahf xchg js out pop xchg leave hlt push les notb es popf sub sub xor ret ja es daa adc add loopne lahf mov mov dec stos and inc xor (bad) mov jle sub repz scas mov repz lahf cld or sbb std push pop arpl scas sub jo xor and xchg sti fbld mov and ret add lret dec cmp ljmp sub ds out ljmp call cmp (bad) and add ror push dec jmp jae mov add push outsb jg add jns inc (bad) stc adc sub sub inc cltd in and out mov mov xchg mov ret and das clc jnp inc sub lds test sbb out add dec mov xorl outsb cmpsb xor or data16 cli out cmp (bad) xor (bad) dec pop in dec and and aas xchg add push repz mov lcall push pop sub xor or mov ret push ret or sbb mov ret popf das (bad) mov dec mov mov cli xchg mov rclb mov ror mov xchg aaa ljmp xlat adc repz leave bnd dec inc sub add sarb dec pusha pop fiaddl pop je xor ret adc pop jmp xchg xor jmp leave adc mov mov xor xchg negb xor xchg jb mov jne cmpsl mov ret fs cld iret movsb mov ret pop lret push repz dec clc xlat test adc lret stc stos lds shll push jecxz cmp pusha lret shlb add dec sbb push pop dec imul or pop cmpsl mov imul das in push lret (bad) fidivr fisubr jb add mov add dec cmpsl in jb or sub stos fs clc out rcrl test jmp (bad) int3 pop scas jb mov push enterw push je inc cmp mov jb ret push pop out icebp sub ja into lahf inc in lahf in cmp (bad) sub sub jmp mov xor cmp repnz ljmp mov ja je add inc dec mov xchg scas fstpl das xor arpl inc mov cmc mov (bad) imul inc std push outsb xor out jo repnz in (bad) sub out or jb dec dec out and dec out leave sarl mov pop insb mov sahf icebp popf inc xor enter idiv loop mov ja subl jg sub outsb iret jne push mov cmpsl rclb add jmp (bad) mov inc xor cmc fs xchg aad mov jmp enter inc not out adc nop ds adc mov sbb lret icebp je jmp inc std (bad) cmp mov pop mov fmuls jmp xchg mov (bad) push xchg jns xor xor adc repz mov dec faddl mov or cmp leave mov rcrb xchg cmpsb iret lds enter pop dec ds pop xchg mov pop idivb pop aam sub cmp dec mov je sbb pusha xchg mov lret mov (bad) lret shrl sub mov xchg je dec push push into mov or stc shlb popf pop xchg pushf cld negb repnz leave out aad add mov out aad mov sbb cmpsb imul fwait xchg cmc das outsb mov xchg adc scas and add lods jae stos test (bad) fs call or jmp mov sub lret add jl xorb sub push sub test mov repnz jae cmpsl xchg or es sub ss repnz nop adc lcall mov mov scas add cld stos add das pop js call pop popf mov lret inc pop scas addb fidivrl adc dec adc daa icebp icebp orb mov adc mov mov test xchg ljmp repz pop add and (bad) lds jb pusha sub inc inc or (bad) mov mov jle loop cmpsl rolb push adc xor call sbb xchg push inc cmp mov out mov je xchg cmc ds dec mov in sub push das repnz sub pop fidivl jbe out mov stc and sub mov incb or mov push jnp xor out pop mov dec mov lret sbb dec cld dec nop hlt movsl scas push arpl into mov fnsave mov (bad) out sub add out xchg pop out dec jbe jmp mov xchg fsts iret mov adc sbb sub mov cmp and (bad) push jne xor mov sub or mov int clc inc outsb ret or and in enter das gs xor mov out out and stos mov and mov xchg test (bad) mov xor add push (bad) ss jle jmp xor ret jns sub xor xchg adc (bad) fdivrl xchg hlt js rcrl xchg xchg pop test and mov popf adc stos out pop out repnz shl push cs (bad) iret out adc rorb mov pop lods (bad) leave inc icebp or fdivs add xchg and fnstsw pop pop test das outsb pop dec xlat test xor icebp ds shrb pop loopne popf (bad) cmp idiv sub (bad) xor int3 xor lock fs pop push icebp or or (bad) scas cmp (bad) int (bad) and add mov lds lods push jl subb push mov mov adc mov outsb test ret sub jnp push out lret loop das or negb inc dec sub adc cmp imul dec das (bad) push (bad) adc test mov mov add mov jmp pop xor xchg xor scas repz xchg jmp sbb adc scas into mov fstpt in sarl aaa leave push cs cmp add aam rcrl or repnz nop mov pop out add sub into pop pop xchg (bad) push enter xchg xchg addr16 (bad) fisttpl aaa or pop xchg sarb sub add addr16 xor inc and jg mov lods pop daa push inc jb hlt push and mov lods ficom and mov push shl cmpsl sbb call iret ret pop and mov or xor sub shll mov add popf pop push pop xor mov and hlt push imul shlb imul pop or xor pop xchg xor in sub xchg sub xchg sbb inc je cmovl das out fistp push dec xchg cmp cmp xchg das xor ds (bad) notb in xor push ds xor mov cwtl shrl (bad) popf sub jns jnp sub out xlat cmc sub insb cmc daa pxor flds pop (bad) inc and xchg es imul notl mov sub lods (bad) aad cltd lahf xchg jae cs bound push xchg lret pop jb sbb or xorb cmp mov ret xchg stos xchg sub out pushf div mov push sbb popf mov mov or in cmp pop (bad) cmpsl add jl jb mov and mov adc add (bad) scas push dec stos loop fcmovb bound or loopne bnd int3 aas das notb pop mov add or add lahf rcrl or (bad) leave pop test xor outsb clc xchg sti ret inc ja adc mov add add sti add inc push add lahf jnp scas fsts jecxz (bad) mov mov arpl add push sub cmpsb jae data16 cs xchg jp in sub jns scas adc pop fstps mov daa adc or (bad) (bad) jl les enter xchg rclb stos daa ret lds mov roll ds xor or mov mov and cmp and sub out mull roll push sub cmp sub out xchg pop mov sbb or and inc (bad) mov push or or jns loop repz mov sti mov push jg pop (bad) add and aad shl and cmp cmp cmp or jecxz jnp and mov dec or sub cmp push daa inc jno and mov sub mov pushf ljmp stos sub mov fs jns dec mov pop outsb pushf mov orb pop cmp inc mov pop pop mov stos gs repnz add (bad) and mov cmpsl inc out mov icebp test mov data16 sub icebp pop cmp mov cli or clc mov cli xchg (bad) fiaddl add mov mov repnz das and dec mov fcomps pop jl in pop pop adc or icebp cs pop sar inc inc daa or sbb into xchg pushf (bad) mul aam push ds mov and and sub leave xor pop mov mov lret push sbb ficom push enter icebp test xor inc jnp loopne add jl xchg sbb xchg pushl dec mov lods cwtl mov xchg pop addr16 inc push xor sub gs sub cmp cltd jae sub orb or cmp inc (bad) adc sub cli int jnp inc stc clc enter cmp pop adc lret loop push sub inc jbe into jecxz push and loope push sbb jne mov sub repnz sahf xor adc lds mov add cmp in (bad) mov out fdivl xor loop jge outsl dec or and mov mov rclb out dec in dec xchg imul xor dec pop sub pop test mov add sub fdivs call and ret lret es hlt and jbe jnp mov fnop adc mov xor jmp shll xchg inc shrl xor es add pop xor pop sbb fildll out jbe fnstenv scas xchg out xor jmp mov cmp adc ljmp dec clc and pop inc inc repz jns pop cmp add pushf mov xor fisubl mov das mov xor push add or xor lea in dec and scas out fxam dec das xchg add adc iret mov xchg out xor lea push movsb dec jge bound lea mov xchg mov xor or or fcomi or sub ja xor mov into push aam loope sarb lock and imul mov ja fnstcw mov stc dec adc sbb dec mov push popa mov xlat sub lret pop in xor mov sbb xchg test sub (bad) xor (bad) ror push test aam mov mov stos loop xchg mov mov pushf daa loopne sbb mov jae dec rorl hlt inc pop push jnp mov cmp shlb mov and add sub mov sub mov popa or or sti mov repz or mov dec pop add jns adc lret leave into in int3 daa roll lea pop daa sbb dec out and mov push add jmp sbb movsl pop mov xor repz pop into andl xor leave (bad) push stc pop ret std xchg add lock notb nop xchg push sti mov sub je dec int3 pop and push mov push inc or push lods iret jge sub mov xor mov shlb cmpsl xchg xchg es and lcall jns rclb or mov and lret popf push cmpsb mov mov into ss sti bound out fwait inc (bad) adc pop pop hlt scas dec and mov xor inc pushl ja xor iret cmp mov or push xchg xchg je stc or mov xor ja test cld add (bad) mov mov xchg stos add adc into and mov jg sub push movsl daa or inc iret mov push mov int ror add fsubs in push inc (bad) enter fnsave insb mov inc add idivl imul xlat repz (bad) mov xor div (bad) fs gs std mov mov gs dec adc mov mov cmp fwait jmp mov leave jle inc push xlat arpl cmp (bad) leave cmp mov or dec cmp push out rcrb push loop xchg stos mov leave test mov cltd test dec mov jle or xor adc and mov (bad) add fistpll cmp loope add mov xchg jecxz add mov mov lods xchg add adc mov addb mov pusha mov lret data16 jmp xor cmp jg jo cld mov xor icebp mov xor movsb fnstcw xlat mov lods cmpsl push out dec xchg rorl jmp xor xor sahf into adc push aam jo (bad) cli (bad) dec mov mov xor std add cmp mov pop mov out pushf (bad) xor pop cmp push gs push (bad) imul push scas leave fsubl and mov dec sbb push ret jne or scas cmpsb xor xor test or mov js into fsubr xor inc dec scas push in (bad) repnz shlb and aaa mov leave scas negl and fisubr int3 push sbb and and pop fnstcw (bad) mov fmull sti fs scas test cmpsl rolb mov dec aas inc shrl push and sbb xor pop es je out or and mov add fisubr ja add lret push xchg mov jmp sarl setbe cs or les cmpsl ss xor loop (bad) rcrl fnsave mov pop fdivrp lds stc push (bad) xor pop dec icebp icebp jle pop cmpsb push xchg jne push mov hlt add (bad) dec adc (bad) jae imul (bad) xor out ret and push popa and push push xchg out lret stos daa xor mov push je pop jg mov popa loopne repnz lcall lods sub scas in test sub xchg iret in popl (bad) test mov cmc add xor ljmp sub sub ror cli or pop push lea out push dec dec xchg sbb xchg lods lods in push sbb cs mov mov movsl jle push mov or leave mov ja adc dec fstpl repz inc scas es clc loop xchg cld rol out clc and ljmp loop mov xchg (bad) cmp add add jne sub lret fs adcl xchg mov add xor popa or aas mov out mov imull fadd xor or and out adc add ret cmpb movb or pushf (bad) cmc lds push shr jg jbe mov sub jns movsb arpl push jo loope repz shll push iret and pop mov add jmp sbb nop testb and jbe xchg out int3 aad add push aad dec and cmpsl xlat into xchg out mov and mov jnp mov jb repz icebp mov out xor pop out in mull stc inc iret or jg pop and mov les mov xchg xor popf xchg icebp in insb loop mov aas jecxz xchg ss fnstcw daa inc pop cmp fidivrl pop or (bad) lods popa pop out add push (bad) out cmp lahf jmp lds mov hlt (bad) out cmpsl inc aas add sub mov cmc adc sbbb movsl cmc jno jmp adc sub mov into cmp xchg (bad) mov xchg xchg rol out pop and orl xchg test pop scas loop xchg dec xor (bad) jns adc lods cmp xor xor (bad) out cmp inc add imull dec lds push xchg in fisttpl imul repz and fldcw les inc ret (bad) add fist aas dec stos data16 xchg je push je lret or jne out adcb mov mov lret push add mov xor xchg push out leave jnp xlat in das out pop sub xor mov data16 and mov movsb stos clc aam or and int adc lahf jo xchg sbb dec data16 xchg mov icebp (bad) lods hlt adc or test sti lret sub stos faddl jle in ljmp sub jg mov (bad) imul dec pop flds clc ljmp call sahf in pop movswl or insl (bad) repz jmp clc xchg arpl push dec out xor scas mov leave cmp scas push inc push pop js cli dec fsts add jp (bad) mov test incb int aas stc in lahf out fwait lods mov xor pop insb xor sub (bad) (bad) xchg gs fs mov inc sub or lea fimull (bad) stos mov dec adc clc fmuls test mov xlat daa (bad) mov icebp daa dec lcall add imul sar mov sbb or clc in scas sub cmpsl dec inc test push sub (bad) mov cs ljmp xor lds sbb icebp xchg (bad) gs ret mov ret lcall mov mov lret daa mov add loope sub adc push stos je test lret out jle push cld fwait das outsb or pusha movsb out add dec xor cld pop in flds enter jbe movb in add data16 mov add push xor lahf push (bad) stos sub sbb pop cmp push pop fs jo loope mov std lds push jns aam and dec (bad) sahf jmp shl jg inc inc sub dec aas in jbe dec gs push (bad) lret mov sub ret test inc jle add pop repnz ret call mov pop jmp mov les adc imul ds cmp mov lret xchg ja cmp outsl push cltd xchg cmp xchg rorb xchg mov and or add dec les cld mov pop icebp push and das in mov (bad) shll add sub movb cmp cmp cmpsb or and sub (bad) mov jmp jo dec leave decb sbb out les fsts sub decl arpl (bad) jp negl scas fwait in es jns gs xor fwait pop loopne pusha mov std (bad) xlat in (bad) (bad) xor in decb sti sub lahf data16 and mov movsb lea nop xor sub jnp movsl inc idiv pop push jg jno ljmp shr icebp add inc xchg inc sbb xchg stos mov add mov xor or repnz dec shrb in push es popf mov test in adc mov cmpb mov andb adc mov mov mov icebp mov push push and jg arpl popa inc adc shll pushf jmp jge (bad) fistp rcl sub add test imul sub mov sbb clc fs jns xchg idiv je adc mov sbb test sub lcall fisttpll test lret mov icebp mov xchg add cmp push or push jb xor pop xchg pop pop pop mov testb jmp das sub scas les divl xor shll add adc dec and repz xor pop inc pop (bad) add dec adc push inc mull pop icebp sub lods std add daa mov sub pushl (bad) xor inc dec ds mov pop mov dec jbe lahf and pop js dec ret push outsl in inc xchg mov leave hlt (bad) repnz or sahf add pop xchg sti cwtl mov xchg aad cwtl mov cmp call jmp lret add add sub scas cmp or mov mov dec scas bound ja xor gs sub add jno negb jb leave ret incl xchg repnz sub loop and sub outsb divb xor int sub (bad) daa sbb das pop xor xor negb pop xchg or cmpsl push xor pop cmp into out ss jbe and jp cli xor (bad) xlat lds xchg imulb outsb cmp jle push lock fimull (bad) out (bad) hlt dec push jmp test imul std ss dec mov in cmp pushf mov add (bad) xchg int3 dec xor cwtl xor lcall or and jge or sub loop dec cmc sub int3 mov dec adc leave shrl lods mov sar mov pop daa jmp sbb cmp push push and lcall jne outsl pop (bad) xor mov sbb out stos sub push nop add jp cmp add jge mov adc adc (bad) movsl push jge add ret test xlat lds xor push adc daa sub insb das xchg jle imul mov movsl mov fcmove sbb shl ja jnp idivb push inc sub dec notl (bad) mov (bad) and pop xchg ja in clc lock loopne lea out jne test sub add jecxz fimull mov push dec dec loop ret shll ret stc ljmp ret js jbe sahf cmp std mov lcall adc mov and mov mov sti xchg mov loop iret xlat cmpsb iret sub es das mov sub add test sti mov sub fmuls pusha dec sub mov fiadd mov mov scas imul repz (bad) es mov lcall out mov push test or fdivrl cmc push movsb clc mov mov dec jp pop scas xor icebp cmc xchg lret mov add mov pushl pop movsb out scas lock push out pop xchg add std pop mov or jns mov in lcall cs jmp insb mov out add mov in or jmp adc push loopne jne pop fadds sbb fisubl lahf cltd sub xor dec fbld xor and sub outsb gs flds sub xchg data16 daa or push adc andl (bad) push dec cli sub data16 fiadd test out mov fmull push jo test mov cwtl pop mov mov iret add pop sub nop mov fisub leave ja (bad) xor sbb jne push add not je mov mov mov fild es scas sbb mov mov inc adc repnz mov rcrb (bad) push gs and arpl paddsb mov jle inc dec mov neg leave pop xlat xchg movsb lret cli sub into addr16 pop clc iret xlat sti lahf jo add mov mov lds fnstsw mov jmp and jb jg cmp mov cmp lret pop or add rcrb (bad) push frstor stos fsts cmpsb imul sbb fistpll lds loop xchg mov pop mov jle out mov and movsb or addl js push or test cld repnz jge cld lar sub scas js mov push push pushf or or push stc repz adc and test mov jmp push test xchg or cli mov cmp rcl lea add sbb push xchg push or icebp mov push adc dec ds lret es sub out cmp adc add mov jbe repnz mov or cmpsb subb mov or sub jg out mov add push sbb mov pop call push movsb movsb shll or sub aad sbb pop jmp and push ret pop jnp daa int3 leave dec sbb in in xchg call daa inc sub fstps mov fsubrs push inc mov or xor out cltd shl loope push adcb sub sub jg por jb jg cmp push mov sbbl cmp in adc add push mov xor pop ds push mov inc push imul push dec mov sti xor inc xor adc jl ds push push jecxz mov inc xor outsl add mov push mov add popf out mov inc mov addl push out jp jns or in ret inc push push adc add sub mov add (bad) aam ret push mov mov (bad) lds test xchg jl imul (bad) jle push xlat out or sarl pop sub (bad) pop adc push pop nop out add cmp rorb and out push pop lahf sar iret popa ja sub jno add dec pop mov xchg imul imul stc inc sub pop xchg cmc pushf repnz jae das inc cmp mov lods insl in jmp aam lret into or add roll push push or (bad) mov cmp mov add mov push and lahf in in and cmp push mov jno cwtl cltd pusha xor add pop push movsb popf inc pop push jne lods je not pop pop (bad) (bad) pop inc mov lret and aaa adc mov ret jmp data16 pop mov cmp dec push aas xchg negl add lret inc cmp ficoml add ficompl xchg xchg jbe cmpsl adc push inc sbb neg pop adc rolb pop pop xchg pop ljmp lea loop ds ja mov add in into pop ljmp cmp xor ret daa aad or ljmp cs xlat jp test lahf jl inc cmp cs repz fistpll sub cmp jmp movl mov lret outsb or cmp (bad) in push gs pushf add mov aas mov pop cmpsb lods inc mov adc pop sub sub call cli nop xchg scas push push mov or movsb pop imul (bad) fnsave sub iret push or lret sub and (bad) cltd inc fptan sub mov xchg lret and dec call iret push cld in or andl adc mov shrl sbb repnz dec lods jp cmp xchg sti xchg push roll das mov xchg out adc add mov (bad) jmp fstps inc add jne and jg outsb mov push sub xchg out mov mov enter sub cmp (bad) addr16 (bad) and lods push sbb into aad lret dec divb push jmp stc (bad) outsb stc enter adc in adcl jmp (bad) sarl stos out fcompl pop mov pop (bad) test pop cli data16 mov aam das dec in lret jmp sti inc and lahf data16 lret mov int3 and sub in and push sub rol push adcb cmc sub daa popa dec cs mov jl popf pop fwait pop mov fs leave xlat push mov dec (bad) jecxz adc nop mov mov (bad) sub stos repnz fisub jnp lods pop mov ret xchg push xchg addr16 add mov add lea inc sbb dec jne push gs into adc mov dec mov (bad) or insl pop fcmovb fstpt cmp ja xchg out ds aas popf ret das int3 xchg rorl mov push out xor les pop popf jmp outsl int3 adc and sti in xchg push pop popa jl pusha cmp pop mov push pop clc cmp cs imul decl adc sub lds mov add imul (bad) leave cmc test out out sub ljmp cmpsb xchg rcll push dec jno jg mov inc (bad) repz es lds inc xchg jecxz shl dec ret call cmpsl push push dec adc imulb aam mov jmp call pop (bad) sub pushf orb mov adc xchg sub or daa shlb add cmp pop pop xor dec lea es mov fwait loope in dec sti sub push mov add jge add xchg xor testb andl into xchg adc rolb and xchg lret inc rcll es fs (bad) aad xor inc das imulb (bad) insb mov mov pop pushf fwait push insb dec aad inc daa xor subb insb ljmp in jns stos and sub jne sti fldl gs shl es scas lret dec adc adc sti in fiaddl lods push rol sahf or sub lret popf movsb and inc xor and lods add popf fnstenv cmp rol std jne mov sbb lcall ret daa shlb roll pop adc adc mov sbb daa fiadd and out add sbb cmp sub ret inc dec les mov mov loop inc (bad) inc leave xor std or test cltd mov or dec scas adc add jmp (bad) cmp fsts fiadd sbb es ret jp int3 cld pop push and out xor fdiv fidivrl adc pop dec ret xor mov push cli add call push mov daa xlat mov pop jecxz jge das les mov or or adc fsubl dec push lea jb mov out fstpl ds and adc cmp out inc test or mov jno sub sub xchg mov jecxz push aas push cmc repz (bad) aaa mov sub bound push jnp sahf add data16 pop fs scas bound push loopne pop cld leave add adc xchg outsb (bad) dec sti insb mov xchg mov imul jbe and and mov aam loopne aam or icebp and aam sub fldl (bad) jno ror inc jo icebp push or pop ret lock add (bad) and xchg add loope,pt and mov adc idiv fdivr (bad) pushf pop das clc and mov add or mov mov mov testb mov stc lods mov xchg js not fdivs jecxz pop stc ja jmp xchg mov and ljmp decb sub inc xchg mov ret push dec or leave xor ss jge fildl aas cmpsb cmp scas je jmp dec mov sbb jno dec sub rclb sbb cmpsb in stc mov add insb repz pop mov jmp lcall bound pushl dec jg idivb jne mov mov test inc sub ds push sarl icebp gs cmc test hlt arpl mov aad pop pop cmp add adc (bad) xor xor out rcll daa push stos dec jecxz jne xchg inc test out or push cltd stc jbe jle mov dec pop mov jmp rolb fcmovne (bad) (bad) imul sub nop sub xor decb adc sub xor shrl mov inc insb leave or pop out repnz and lcall xor iret and cwtl (bad) add jmp cmp or or xchg in inc pop aad fisttp and repz push repnz daa xor mov xor test cli lret jne out or loope jnp jmp cltd push negl outsl mov and pushf das mov jle fbld out push popf dec or sbb mov adc bnd sub push jne mov xchg stos mov dec daa (bad) cmc sti pushl mov icebp push mov iret mov int3 or or mov movsl aas movsl leave cmc inc cmp icebp xor push jb pop xlat and test lret (bad) mov jg movsl (bad) fsubrs sub xchg das test mov add push jg mov (bad) cmpsl leave neg push stos dec jge iret and pushf and xchg je push xor xchg shll adc scas cwtl mov push pop insb mov xlat out jne test lds jmp fisubr push outsb and jb imul frstor add (bad) jne js les das (bad) fs sub cmp lahf push mov jmp push adc add and pusha mov sbbb xchg (bad) out bound add iret jb movsb outsb shl xchg (bad) stc (bad) sarb pop mov mov repz mov add cmp dec mov jge and mov nop es cmp cmp out pop pop dec cmp (bad) in in jb xor imul cs imul loope subb xchg jecxz mov adc or xor or das lods cmc or (bad) repnz mov dec repnz mov xor jne fisttp aam movsw sub imul xor mov mov push fcompl dec sub jecxz pushf mov push sub mulb add push int push push jle pop pop adc cli fsubr cmpl xor and push or test mov push cmp rolb push (bad) test push std pop mov push insl sbbb pop push adcl stos lret mov and jbe imul test or das jge or stos lret xchg add out push and stos rcrb push std jg sub sbbl insl mov in xor or ret jge push out push mov aaa push push pop in sub jg mov into pop int cmpb cld jnp mov pusha push or ret nop pop jne mov cmp cmp or out lahf mov pop movsl pop jo,pt add imul add iret and mov jle pcmpeqd inc sbb rorb nop xor pop sub pop icebp ret mov inc and push shrb mov pop shlb repz jmp jne jae sbb jge mov dec push pop sub lret xor pop cmpsb jp out (bad) fadds cs lock (bad) add adc cwtl aad inc outsb or (bad) adc (bad) out dec repz xor push add dec and or jno inc hlt aaa lret divl sub sarl stos xor ret mov pop cltd pop std add test sub pushf loop mov mov (bad) pushf xor mov sti pop daa repz es daa adc pop (bad) ljmp push mov lcall jg xor or lock cs or repnz push jl fdivr popf dec mov xor jnp scas push and or rolb fidiv leave or jbe mov imul adc dec enter pop adc ret into lret jo mov loop sahf sahf ficom mov or into je xchg (bad) clc sbb nop int and inc stc stc sub sbb adc pop scas xchg sar dec das stc sbb lahf sbb imul mov mov xchg test insb in pop out imul stc addr16 ret cld (bad) mov test mov jne adc mov jne pop cmpsl push sbb push pop push jg mov out scas fistp push popa loop cmp movsb cltd jmp fstpt mov and sub inc push mov xor call addr16 pop shll dec (bad) cltd pop pop add cs xor cmp test sar arpl test push mov and ds movsb push mov sbbb fs mov into scas sub adc rorl xor pop mov and fnsave cld inc mov lret cmp rcrb xchg jne and cmpsb ret inc loope ret ljmp fsubr mov stos mov lcall sub outsl lods mov add in dec arpl mov mov repz shr cmp xchg out aas cmpsl and pop jnp nop adc aad outsl xchg inc and call mov or popf fdivr dec rol jge lds mov lahf (bad) popf sarb sub sub and sahf out mov push cmp das jb lahf xor aam and inc pop movsb ss push sti push in shr (bad) sub stos lret pop movsb (bad) adc cmp jae and ret mov pop mov mov add pop mov das xchg or das pushf push sub pop jmp and mov xor leave pushf lods add data16 pop bound std jns imul pop sub icebp sub int3 push xchg push ret jae jecxz mov subb mov push sbb mov out inc pop or out or mov adc ret or mov into mov mov nop mov sub sbb idivb cli xor test sti aam mov dec sub jae pop rcrb cmp bnd loop shr int pusha movsb (bad) mov inc or out sub out mov into nop notb es lret icebp sbb mov adc mov daa repz adc mov aam fwait movsb and test push repz xor inc xor scas fsub mull or hlt in stc mov rcrb xor jmp rcrl rclb divb xchg push scas in mov mov sahf xchg outsl and cmp jle and test xor outsl adc adc movsl cmpl mov jmp insl jecxz add stos int3 fsubrp shll mov xchg mov xor mov adc stc dec sub xchg loop xlat sub shr mov and dec mov jmp push icebp pop mov xlat mov xor icebp arpl dec mov xchg mov adc cmp jnp pusha jg scas jnp push stos jbe test icebp shll dec xchg mov daa xchg std xor bound push push xchg mov xchg adc pop lret mov push cmp popf pop sbb mov xor mov dec (bad) cmpsl lahf lods sbb lret adc or mov adcl mov sub dec mov rorb mov and fs sub adc stc outsl mov pop lea or cmpsw aaa cmp inc pop jecxz js push cli fst lret out fidivrl ja or decb pop mov das sub je pop adc dec ljmp les push add mov adc pushf xchg out mov pop gs and or pop cwtl push test (bad) adc xchg inc jg dec adc push es mov (bad) aam jne ljmp push push dec dec and ret leave icebp and add sbb dec shrb pop gs scas inc push in into xchg out xchg leave xor push lret cltd or or lcall adc dec add jecxz xchg and xor sub pop pop cmpsl repz and scas dec loop mov and mov bound mov add cltd sbb xchg sub loope sub movsb bound das shll icebp inc sub pop das call xchg xchg pop or dec dec mov add lods mov adc stos push dec push mov or xor push mov jno lret and rcll call sti xlat pop jo add test xor jl ret push (bad) mov (bad) mov scas mov test lea jb push rorl mov push test aad loope sub xlat lds sub jg das jmp jb cmc sub inc lods fdivrl bound add movsl iret rcrb mov (bad) mov sub or push hlt (bad) xchg aam gs pop mov stos xchg push mov (bad) sub mov adc xor (bad) clc ret test test ljmp push inc jp (bad) fistl pop push xchg gs sbb add and or aaa fcoms xchg pop push (bad) push lret repnz shlb aaa xlat push mov inc loope stc adc (bad) lahf clc add and aaa cli lret push (bad) jg inc dec sub stc cmc or push pop pop movb xchg (bad) ret hlt movsb xchg inc lock stc test sbb aam pop out cmpsl lods das aaa notl fisttpll add mov stos mov push out sub fsubrp loope adc rcrl out pusha pop add repnz mov pop loopne icebp add mov xor jl rclb ljmp and or fcoml icebp push sbb pop lods pop cmpb imul cli cltd test int3 jae cmpsb repz add dec int3 pop and or mov test sarb ret scas mov enter nop cs and out std loop into push stc test pop cmpsb scas das out jne repnz xlat adc sti mov fistpll and data16 ret cmp fimull das push (bad) xchg fisttp cmp pop dec jb push ss shrl popf xchg sbb pop out pop mov push mov jne (bad) adc scas sub sub std test adc pop lods xchg movsl cmp sub dec mov xor xor xchg testb cmc pushf sbb xor add push (bad) sub iret out fisubl or scas lea cs (bad) cld mov pop mov ror lea jp mov mov dec in jl rcl bound imulb dec test scas stos sub out mov mov pop xor or xor and fcomp shlb sub xor ljmp or repz jns push add mulb mov (bad) into addb mov daa (bad) pop addr16 xlat leave jns subb pushf pop sub mov (bad) dec mov rorl cmc mov ret sub mov roll outsb mov push imul sub nop inc test xorb push jecxz jp xchg jle pop movsb (bad) cmp sub fdivl fcomps cs bound shrb rcrb mov sub fcoms (bad) je gs data16 or push jns mov imul add and sub cli xlat mov (bad) out inc cmp hlt lods ret dec xor push push ffree jae (bad) xor leave idivl push add jge push mov or call xor adc fwait mov sar rorl ljmp and jecxz je or cmp scas mov or push mov jbe cli add mov cmp lock jno pop nop sahf dec jo and cmp je add (bad) (bad) pop rorb dec dec out lret or jmp jle mov std mov sarl sbb pushf mov dec aad xlat and mov sbb xor pop ret xchg jnp or add mov inc sbbl repnz mov stos xor out mov ljmp call mull and jno jl movsl mov pop shlb fisttpll das clc pop daa sub jae jmp xlat sarb pop and lret cmpsl out je push pop xor or xchg repz push adc jmp pop and jo dec leave in fidivl and sti gs fcoml or add xchg out mov ljmp lret sub aad adc test stos loop test cmp xor int lods fcmovnbe mov imul call cmpsb (bad) adc sbb testb adc fdivp adc in je dec ljmp nop lret ftst cmpsl (bad) jne iret and gs xchg decb pop fadd ljmp movb aas inc xor mov xchg add xor shrl ficompl add mov or cltd insl add test jbe push pop cmpsl cmpsb pop cmp (bad) data16 inc xchg adc mov into mov xchg sti loopne pop cwtl adc fs out fist and and adc loopne ret mov lret imul or and repnz lcall xor lock loope xchg movsl mov or add xor in shr or popl xchg bound jge dec outsb pop mov test ret js ret aaa cmp ja out dec sahf mov andl divl sbb xchg mov and clc hlt mov std dec (bad) out dec out and mov add lahf fsubrl add xor repnz inc sub mov nop push push add push mov xor pop add add subb imul inc sbbl ljmp sbb inc sbb lock pop mov lds inc scas add xorb aas mov add (bad) dec imul mov pop xor aad jns add popa xchg lahf cmp es add sub push dec mov pop cld int3 sahf aas sti arpl mov pop pop push mov jo call repz add pop mov inc mov pop or out or pop and iret inc int push std ja xchg dec push push jg mov xor nop push or and std add mov insl cmp (bad) mov mul jle loop,pn jns or or or add add mov daa pop pop push lock pop icebp mov or repnz mov std lcall mov gs std sti sub cmc adc mov out push shrl mov sub push mov or dec adc mov mov orb rorl sub or add ja fs dec push fdivs popf xchg std aas or adc sbb mov (bad) fsts mov and push ja aam pop jb xchg cld xchg (bad) inc xor adc shl and iret add daa fsts xchg cli (bad) out add and stos lods (bad) lret or dec mov sbb or xchg jmp sub xchg jg popf pop cltd rcr xor fist pop cmpsb or mov imul clc pop data16 add fxch loop push push dec inc iret add pop xor adc (bad) sbb xchg and movsb mov and dec mov pop dec cmp push mov mov pop xor ja sbb and or sbb and dec xor and imul repz dec and mov pop lret add mov mull mulb jl inc (bad) cli loop ret sarl mov or inc outsb xlat sahf ds loop or pop fcompl mov loop in pop xchg lds mov incl add adc adc stos mov je push add (bad) (bad) leave or pop out iret pop iret lret mov mov lret and or jbe xor mov pop je xchg leave cli mov scas daa out push xchg imul stos cmc push mov js ljmp pop ret dec cwtl mov sub sub leave mov or and inc fdiv imul or push jno xchg imull jno cmp or xor scas idivb push xor push imul lret mov frndint cmpsl je push repz cmpsb xchg mov pop and out daa lret and cltd dec cmp jl push jbe mov testl add sub dec aaa pop inc dec or out add pusha dec scas xor fist ror jne stc lds xchg and jmp popa pop cmpsl dec pop sub mov add lods test mov out aad or sarb mov jg pop scas test pop sub mov sub adc adc mov xchg lret cmp out cmc jno dec fsts fstps push cmp sub xchg jnp dec in lahf js cwtl ds cmovnp adc xorb or (bad) dec xor rcrl cli push repz pop in ret pushf jmp out mov and push jbe out (bad) sbb scas dec sub cld push mov sub inc sbb xor out sbb push cmp scas clc mov rclb cmp popf xchg int xor cmp jno ret movsl adc cli bnd mov cwtl in fistpl push cmc mov pop mov cli push (bad) out out repz (bad) pop push sub cmp fist xlat dec loop enter and ljmp aad movsb addr16 jne mov xor adc mov dec cmp dec ljmp lret sub lahf jae jmp ljmp and sub out rcrl imul out out pop pop pushf rcll mov or iret jnp daa (bad) enter fidivr jge xchg out sub sub sti add xchg push daa mov cli enter int push (bad) dec mov test (bad) mov xor (bad) aad add cwtl xlat repz call mov cmp aas push out dec fild adc adc mov cmp ljmp xchg or push btr stos out fisttpll daa sub daa xlat movb aam xor jnp pop (bad) int3 pop jmp xor push xchg pop loope call into or cmpsb xchg rcrl sbb sbb mov leave movsb add xchg mov xor xor xlat mov xchg push repz add and out sub je xchg gs xor lahf fisubrl adc mov sbb lds loopne into pop pop outsl xchg adc mov mov push lock mov cwtl mov pop sub jle ret mov sub repz mov movsb mov ljmp das divl push aaa xchg ficoml ds pop sub jbe and xor push xchg lret add lret mov pop sub cmp mov out sub ljmp cmp xor fcoml rdpmc cmp dec mov sub push lret das fiadd stc rorl cmpsl ja das pop mov jbe xchg push jb or out pushf fildll pushl sub adc sbb fs imul jne pop push out or dec jp movsl scas xor mov xor sbb out ret cmc cltd dec aas cmp jmp pop lds add jecxz pop pop sub cli (bad) (bad) dec jmp mov pop add ljmp movsb jecxz and add stc (bad) je and shrl leave call ljmp sub testb and sbb mov mov shld jle mov clc sub inc add loop xchg aad outsl jle inc sub aam push push dec hlt mov pop data16 gs lods mov pop scas adc scas das ljmp jmp std movsl fstpl lock sub test mov pop or cwtl lret xor lahf xor xlat cs in mov ljmp das ss cmp jo add cmp mov (bad) mov add dec lcall sub sub and lds dec mov fstps or pop jp add push lret inc cltd mov fnop (bad) dec dec sub pop jbe sub mov js jecxz pop sti add jmp pop rcll stos test (bad) lds out mov nop lahf loope pop insb mov add cmp lret sub cmp pop loope and xor aaa lahf dec cli pushf lock negl ret sub les xor dec scas xor mov lret scas pushf sbb add lds aad cmp pop in (bad) mov lret or or mov push pop sub mov or add iret lea mov dec fcoml sub test mov test lock into sub dec sub pop add in (bad) (bad) loope test inc add inc fs iret adc mov xor xor outsb xor faddl scas push lcall adc in xchg jae imul pop rorl lods jns scas lock mov adc add dec movsb jmp leave (bad) cld mov sub inc mov push push lock add movsl andl add adc out sahf mov sti xor lods mov jge mov mov scas sbb inc pop inc aaa movsb push mov inc xchg dec lods xchg es out in scas loop test pop lods lods lret fincstp scas orl cmc push pusha ja xor outsl pop addb sub ss or mov sahf push mov mov pop xchg lahf mov or icebp jbe lret jne in pop mov insl inc sub mov pop data16 add pop or xor push xchg xor sub das cwtl xchg or mov test pop mov sub inc dec neg pop xor or or sub cmp pushf pop push out cld cmp repnz or (bad) cld mov pop jno sub xor sub imul xor pop shll inc sbb xacquire ja cld negl in cs cmpsl xchg pop stos xchg dec dec cmp in inc add mov xor test or xor push pop in dec aas rcrl ds popf mov cmp xor fisttpl jg dec (bad) jno dec fdivs or jmp mov push aad push sbb or loope cs inc pop loope jle sti into mov jb adc gs mov in je xchg push adc mov mov mov and daa cwtl jge dec cltd inc inc or xor mov mov mull sar je dec ret (bad) and and cmp (bad) clc pop lret leave pop cli pop loop pop cmp call or fucomi adc cli xor xchg nop add xor xchg jbe xlat adc cmp add dec test pop sti test add ret and sbb pop lahf out lcall dec mull lock jno jmp out pop ljmp sahf cmp aad jae and push ss inc push mov lahf xor pop pop mov and jne jp jecxz xchg cld pop xchg and popl leave pop and sub iret add gs lcall xor mov (bad) adc repnz sahf psubusb xor sub jle or (bad) mov and stc mov jne lock cwtl sahf sub les add or xor ss ljmp test iret sub pop (bad) movsb mov in push fwait xor out mov cwtl mov mov cmpsl mov (bad) fbstp xlat out pop (bad) xchg add ret add mov push sub int das sti push movsb cltd subb movb add ficomp ds pop lcall xchg jmp push icebp add fbstp push fisub mulb in pop and roll or sub cld sbb testb lahf into stc fsubrl adc (bad) (bad) cwtl lods sbb adc mov repz pop add int3 mov daa mov out mov aaa mov mov out mov cmp adc jmp xor sub rcll fs lods mov (bad) push rcrl (bad) sbb fwait push and pop out cmp mov mov pop xor inc jo cmpsb testl mov or into jg cld push and mov mov ja outsb (bad) sub lds and fsub imul sbb loopne (bad) mov and sbb fldl push xor into xchg out mov xchg push and add xor pop mov mov jne dec cmpsl add cli mov out insl xchg das adc adc mov xchg (bad) lahf jmp cmp mov sbb add fiadd sti test pop lds adc (bad) adc sti mov rcrb push loope dec (bad) pop sub or or and rorl pop fs mov jmp fs mov xchg cmp cld lahf sub lret cmpsb loopne lock jb pop sar xor int popa or cmpsb sbb or aas and sub or fnstcw xchg and (bad) fsts cmp mov pop adc les (bad) cltd push outsl xchg mov les sub push gs adc cmp mov gs mov fldcw je mov roll movl mov fisubl leave mov and imul xor popa and mov mov loopne (bad) notb mov mov and mov fadds ljmp sub xchg bound pop jl push add mov sbb cs xchg jb pop (bad) call or jns imul sarl add jns xchg loop lret mov xor call xchg push mov add int3 adc adc xor ret or repnz sbb rol pop rolb xor pushf (bad) ljmp mov add mov adc add sub push sbb lret ja jmp mull mov jp negb dec mov dec add (bad) js and lods add xchg lds mov (bad) repnz shl mov sub test out (bad) out flds push or mov ret (bad) lret loopne (bad) cmp mov ds xlat push pop jmp into test movsb out mov xor lret neg dec or push and xchg call cmp sar xor lds dec pop inc inc mov ja mov int fimul cmp jne movsb ljmp xor js (bad) (bad) pop xchg scas and add mov cmp lret lret ret sbb mov sbb push xchg xchg inc adc repnz pop mov cltd mov push daa into push jl,pn pop lret in dec push pop (bad) loope xor mov icebp xchg mov sbb aaa mov fisubl rep sbb fsubl aaa fisttpll xor push adc pop cmp cli (bad) mov pop dec lahf mov notb clc inc in loop lret cli push lcall push dec and das xor lahf sub out push xchg fstps add xor and xor iret and adcb xchg mov scas and push movl sbb les imul xchg pop imul xchg loope push inc or push shll std (bad) outsb out pop pop dec es es sahf mov iret xor lahf jnp adc mov in pop adc xchg pop jb bound xor insb dec out sub inc nop stos repnz into mov pop les jns out cwtl mov sbb popf push jge add mov pop mov sub dec xor xchg mov ljmp cmp adc jb ret jno mov fbld cwtl aad int3 add mov fcmovnb sub in push lahf lcall not sub xchg mov loope sub xor mov add push xlat cmpsl loop cld mov pop loop add xchg jo sub decl and data16 fcoml jge sub cmp sbb jns outsb into jle cmpsl ds leave xor lock mul popf push lret (bad) dec mov cwtl sub (bad) or mov pop jb out ja pop inc xlat cmc sarl xor in mov or add mov mov push sbb pop out push sub and aad (bad) fstp gs icebp jo inc jl dec into in fbld dec sub popa xlat pop mov js xor (bad) mov div or cmp js and dec repnz ja je in and mov (bad) movzbl cwtl adc xchg push imul jae xchg test mov test add or cmpsl outsb cmpsb xchg push (bad) bound jge in sub jns sub (bad) les out mov and and xchg sti negb push mov fnsave or inc or xlat (bad) mov or xor movl push or add cmpsl lret cld mov cli inc cmpsb add mov std movsl jmp or popf or push pop cmp and push and cli pop test cmp adc mov ja out enter pushf and sub leave push lds and sub cmp adc rcrl pop mov loope dec xor push jo loope pop xchg rcrl ret xchg mov movsl fucomp jne cmp mov (bad) adc out cltd test xchg adc mov sbb sarb leave nop dec jne inc bound and (bad) aas jb sbb test in xchg mov sbb test pop lret pop loope out repnz dec sub and mov in out adc in scas jno cmpsl repnz add lock or adc mov aad add mov adc mov stos sub jle fucom dec mov and aas cmp and jno imul add jge lret loop ja movsl and or fistp shll jle and inc xchg stc mov cli push shll out cltd push leave cmp imul mov inc cmp pop dec ret add xchg pop push sbb ret mov fmull gs hlt xor xor (bad) xchg scas jge scas data16 icebp fstpl jp in sbb jae mov es in push dec lret adc mov or mov sbb loope roll cli mov xchg mov jp sub nop push (bad) dec cwtl pop ljmp popf xchg or dec stos lret inc pop stos push in lret pop das daa jne (bad) in push jbe pop jmp dec and cmovle fcoms or shrb imul movsl mov push mov out clc cld leave divl in and sbbb sub dec in repnz pop scas in adc xor insl rcl inc push inc outsl sub mov orl cmp (bad) rcrl daa push out cs adc mov scas sub dec (bad) scas sub add fisubr xlat mov pop in aas bound (bad) mov scas pop push enter int adc sub dec stos lret xor out sub aaa mov in cmp jo mov test cmp icebp mov loop,pn (bad) repz dec in add repz mov movsl inc rcrb add sub icebp test mov add pop std inc sub inc xor js pop jne jecxz pop icebp shrl jnp out jle jae out jg jne in mov push ss mov pop cmc movsl push (bad) and adc insl int3 add (bad) out and mul aad pop outsb xchg idiv or inc add push int3 pop dec cmp rcr pop push cmpsl mov sub pushf mov (bad) daa jne jno inc mov and sub bound xor pop bswap pop add cld scas cltd sbb jmp pusha pop jmp dec xrelease jb (bad) imulb xchg push cmp adc mov insl (bad) adc mov mov stc mov lock dec mov pop and popa add cmp or lret scas or incb lock and ret fisub sti dec xor mov add sub inc xor std into addr16 fidivl push mov push add ret push ds pop sar loope jmp (bad) repz pop xor pop (bad) sbb inc jb mov ljmp fs xor dec ret pop push sub mov nop xlat mov adc das repnz rorl test xlat in es daa and jnp lea jno and das fadd (bad) mov cs (bad) incl lret out ja dec xchg repz cmp call dec lret sub adcl test and cmc out sub sub aaa pop mov sti outsl dec ja lcall add mov mov test iret xchg sub jge mov test cltd loope sub mov adc or add mov rclb mov xchg jl mov leave shrl lods into mov gs adc xor rorb stos push inc cmpsb inc pop mov mov cmp test mov add stos mov ret jg pop mov xchg shrl jno das ret jno pusha or sub xchg dec or xchg in sub mov fidiv jle xor aas and call dec adc shr mov xlat dec jae or pop dec ja pop dec shlb pop loope or xor fisttpl dec jmp out pushf add sub loopne jne imul inc (bad) or lret js mov push push roll cmp fdivr int3 mov dec mov rclb sub in jmp mov gs push in add mov (bad) icebp mov divl xchg pop test pop push dec icebp stos je xchg mov decl not icebp cmp loopne (bad) ljmp push insl ljmp cld dec jmp xchg mov mov mov gs and cmpsl pop inc into pop add xor out sub (bad) mov aam pop ds ljmp out sub xchg inc mov in clc das jge (bad) mov es das bound fsts clc daa out popf push add mov sub push lret or or mov push fiadd or insb push push cmpsl adc sub scas lea mov pop imul mov stos mov sub iret adc (bad) fldl ret pop (bad) cmp and xor mov popf add shr jle pusha fbld jl pop out pop pop or or (bad) xor add and (bad) je test repz mov mov jp mov pushf cli jmp or loop std (bad) iret cltd mov inc lret mov ljmp pop into push mov les mov loop jno int ds loop inc add cld xchg dec (bad) lock jecxz xor xchg inc bound cmp lcall inc lret lods or or and pop stc lea out mov lret sbb and xor out and lret jmp xchg popf loop (bad) ret imul in scas fwait jle adc out dec mov faddp test faddp roll mov inc (bad) mov dec leave sbb or bnd push test or cltd movsl fsubrs scas adc ja push sub insl cmpsb test (bad) fist xchg mov xor je push jo sub sbb or negb inc mov popa mov mov cmp popf pop fidivr or push jmp sub in sbb dec mov ret (bad) ja add jmp jecxz out jne gs bound jg jno inc fstps cli or iret mov into nop fbstp sbb push xor mov jmp cmpsl (bad) fdiv loope lock (bad) ja pop jmp fistpll cmp xchg insb sub pop jecxz or jne jo icebp lret scas dec mov inc movsl sti cmpb inc or sub fisub outsb pop sub add sub or and lret mov dec and xchg mov mov js sbb je bound data16 jae push fwait addr16 loop add xchg cmp dec jne out mov xor movsl pop fidivr mov test repnz push jnp jmp je push (bad) mulb movsl or add xchg ficompl xchg jae mov sbb sbb pop add imul incl mov push in mov xchg stos into mov add sub pop dec rorb xchg pusha (bad) mov cmp push inc pop repnz xor inc or into sub mov stos mov push xchg lahf xor idivl sub jbe jge,pn aad mov pop mov dec jmp xchg mov loop rorl mov sbb pop adc lods xchg int3 or outsb mov mov imul stc push std loope fcompl sbb xchg xor sub js add lea xchg adc mov pop xor (bad) push mov ja mov lret out mov xchg and int sub fdivl push (bad) fdivrs sub xor stc cmc bound cld pop mov and sub push cltd sbb mov dec and fdivr int3 jbe add mov scas les insb icebp out dec xor cld sbb and das xor rcrl shll sahf adc nop dec std dec and xchg sahf movsl ljmp pop or xor je (bad) (bad) stos enter rol out cmp stc cmp pop sarb mov add push inc test mov mov movsl or mulb and ds test mov xor (bad) inc shlb fbld mov cmp jno add les xchg xchg int3 (bad) jecxz push (bad) add mov dec sbb mov (bad) mov push pop out hlt test cmp loopne mov or xor mov mov sbb add mov jbe mov add rcrb loopne push fs aam push xchg loop jns mov add incl out movsl test mov pop dec and mov jg cmp ds outsb push mov adc jge call inc mov not jmp adc adc or ret sub sub aas mov decb scas stc and jne lahf mov out add mov imull sbb int3 (bad) xlat mov (bad) aad out (bad) popa and mov jnp sub pop pop mov bound rol mov loop lcall sbb call xor push jae into pop hlt lods adc call fmuls pop push push outsl pop not push add in lahf sub push xor loopne call adc pop push inc out pop stos lock fist adc or pop (bad) std aaa pop cld mov and (bad) pop aam adc loop inc sub push push push jnp add rolb adc aam and pop mov jae and add ss popl mov or dec (bad) into js mov shr or not jno sarl js les or cld ficompl sbbl add out xor jae adc mov stos orb or push pop jne (bad) and nop pop cld dec ds jae inc test pop sub and out push add lahf imul les pop or mov and inc fcomi loopne aas pop dec push pop add and sbb loop loop fbld call add (bad) rorb add call pop pusha int push or add push addr16 pop das pop inc pop fxch loop pop test js mov jmp add push or pop dec enter ret rclb pop or (bad) scas add xchg test icebp pop fiaddl pop shr xor inc data16 aas push roll mov fldpi xchg shr inc (bad) xor mov das or mov flds leave push and adc test cmpsb adc (bad) mov and (bad) es xor lret loopne repz fidivr push mov mov pop lock icebp jge pop cmpsl pop aaa scas jle jp push fs out movaps add or push mov cmc adc wrmsr push loop les lds jbe mov pop insb sbb lahf jne inc rorl mov mov sub (bad) repz xchg in imul adc je push cwtl push div inc dec mov sbb lock pusha sar into and dec dec jmp mov popa in ret ret adc adc das push or sti sub mov cli bound cmpsl push iret xchg adc cmp jmp loope pop ljmp scas add mov fnstcw adc sub lret or addl ljmp js fnsave lret aam sti adc mov mov mov jmp pop xor push push ret dec (bad) mov shrl mov pop iret imul mov cmp mov jl pop or jns ljmp add jle test (bad) mov fsubs sub vmovsd jp test push mov cmpsl ja aaa pop mov jle into dec fxtract aam or ficoml adc xlat dec loop rol jecxz aad inc lahf push test pop pop xchg mov xchg loope cmp lret sbbl stos (bad) hlt mov xchg std mov pop loope insb pushf mov insb dec aaa pop int loope sub xor add lahf insb lea pop and lret fist pop pop mov decb mov mov ret hlt sbb fnstsw sub adcb fadds and pop insb stos jl movsb push jle push cld int ret clc sbb out or adc or mov cs ja jg mov cmc in fs jge jae xlat mov jo loope imul leave xlat adc push (bad) jmp and jb or popa xchg loope stos jg (bad) adc ds pop and sub push (bad) xor xor repnz pop dec call push or sub sbb sub repz and and call or es adc sub call adc (bad) jge push icebp dec shr mov push ret or jp mov in stos mov mov xor out lahf dec ljmp pop jmp mov mov aad leave mov out jge add loop xchg clc inc dec fs (bad) and mov repz xor sub imull (bad) adc leave mov adc jmp gs sub mov sbb pop fadds xor pusha push sarl mov push mov or stc mov xor fs dec add (bad) outsl lret and sub xlat in mov ljmp fsub mov test mov jecxz sarb mov scas and jmp adc (bad) lds cltd push or aaa cmc imul fidivrl xor dec push test sahf rcll dec mov xor cmp sub and cwtl mov or sub jne inc movsl xchg int sbbl dec ret cli mov dec ret pop xchg add mov sbb data16 pop loope imul add jmp sbb adc xchg xchg xchg dec push mov jae scas cld mov xor popf xchg mov and mov add lds popf lods dec adc pop jmp repnz and dec clc xchg dec fnstenv stc repnz rcrl dec cmp sub mov ljmp (bad) test (bad) mov shl repnz lret mov repz ljmp repz sub or movsb scas xor push xor in sub test or in mov jmp popf adc inc addr16 xor lock xlat pop ja lret imul push push push outsl pop xor nop pop repz mov adcl add sarl adc xorl (bad) mov xor mov xor lahf pop mov hlt cmp add fdivl addr16 xchg sub lods dec call xlat jp mov or cmp adc sub mov or mov push pop js movsl decl push push lds mov sub dec stos fsubl push xlat out (bad) fcomps add repz (bad) andl mov push stos mov push inc test pop add popf fstpl (bad) jg mov adc dec jl hlt adc or pop xor mov ljmp push push dec daa dec pop aaa mov dec mov (bad) sub jne mulb pop lods mov outsb (bad) fstl inc sarb adc lret call dec out jne mov mov add sub in or pop push fimull adc insb pusha xchg daa sub push nop mov adc ficomp mull pop lock add mulb ja xor add sti fadd pop gs cmpps dec jg push jg lods inc add xlat xor (bad) jno adc pop icebp loop xchg ljmp xchg push daa xchg repnz jb fcom pusha jmp push fbld cmpsl inc loop lods (bad) movsl mov das cmpsl mov int sub and clc popa xchg add cs sbb ret push mov bound lss fldl repz sub popa std out jl movsl clc sbb xor mov push mov or enter repnz (bad) scas fadd je or sub push loope add test mov mov arpl gs aam and ret xchg ret and fcoms pop sub jbe xor jge mov push lret sub push mov jb push (bad) dec push xchg jl push mov jecxz insl imul sub inc xchg out sbb sbb orb mov sbb mov repz push ret dec int mov sbb jg push test notb sub xchg clc aaa mov fimul add add int aas ret sbb scas pop fs negl and xor jnp mov aaa push adc icebp add ljmp bound jbe pop mov (bad) mov xor or pop sub xor adc cmc cltd sub sub mov addr16 flds dec (bad) ds pop push mov sub loope xor mov sbb push insl xchg or xchg mov xor xor mov (bad) cmp or cltd test add mov fcoms pop or sbb mov or or sti rorb jne fcmovnbe imulb pop add cld adc setg or mov outsl (bad) xlat divl mov xor sarl loope cmp mov mull and jmp int3 mov sbb jo xchg jl inc adc lret out mov stc and sahf xchg std push xlat push loop ljmp xchg mov (bad) outsl ret out jle lods out xchg add (bad) jmp call jne add daa loop subb inc ljmp test out dec sti pop mov add std add pop imul push (bad) xor xor push out hlt rcl dec hlt cmpsl daa mov in je mov lret and mov repz je push fild mov pop cmp push adc popa cmpsb shrb cmp dec jg pushf ret lret add (bad) dec xor (bad) adc les repz sub xchg rcll xor ja push jl loopne and add (bad) fisubr notl pushf sub xchg jge inc test mov frstor (bad) add pushf mov mov jns leave jb loope mov pop cld sahf das cmp fsubrl or push pop inc cmp fucomip cs daa (bad) mov outsb gs popa jnp ljmp out test testb jae loop cmp outsl add sub je dec jmp cli cli push xchg add and mov (bad) sarl cmc test dec out inc cmpsl das fnsave xor gs lods inc fidivrl push dec sarb cmp (bad) mov push aaa ss je leavew jbe mov or and push adc jno stos ret outsb pop xchg das cwtl xchg or mov add pop or jp xchg pop (bad) dec add sub mov jmp sbb inc gs sub scas mov rcrl imul imul jne ret daa or inc das out jge insl lahf icebp test sub das sbb mov gs xchg repz xor add test sti std insb je ret xor pushl lret jne add fldt cwtl push adc inc adc ljmp sbb or enter or repnz cmp aas sub adc xor mov sahf arpl dec loope loop mov sub (bad) in lcall dec or aad add cmc mov daa fnop mov es and aam (bad) cwtl lock mov add fsubrs imul inc pop pusha dec insb add and xchg cltd or push addr16 add seta aad inc scas out cmp inc mov jno dec pop in test pop xor (bad) aam adc es add out dec test js call mov das repnz fdivl mov fdivs out or and pop aad push xchg xchg push xchg pop loop ror shr dec push jmp xlat stos addr16 mov popa add (bad) add jno mov fsts dec lds int3 (bad) jmp les stc ljmp lahf jle insb push popf fsubl sbb jne push imul lret pop xor stc mov ret xchg test inc push int3 cli jne scas bound and enter xchg dec dec into loop fdivp or pop aam popf jbe jno jmp cmp iret test cmp pusha xchg outsb add mov inc sbb dec lock shrb dec ss or lcall loop popf insb jo (bad) scas xor mov fdivrs int3 fcomip daa or jno dec data16 dec (bad) in mov jmp icebp enter and rcrl cs lret pop push pop fisubl rolb pop or std mov push push nop mov pusha icebp idivl clc cmp inc xor and push setb outsb and sub pop sub jnp ss mov mov and or cmp repz mov inc das in push (bad) push ret xchg mov sub push movb cltd sub add mov cmc push mov scas push (bad) and ja,pn inc push dec push iret lods (bad) mov (bad) outsb (bad) (bad) mov inc jmp mov push jo add jnp push xlat and xchg adc outsl or mov movsl xchg jg xor pop hlt sub jno dec lret jmp rcrl lods mov ss mov adc cwtl push jecxz xor jmp std push stc xchg mull lret and cmpsb js mov jae (bad) dec push outsb leave aad das aas test push xor or lret pusha notl das bound push push pop shrb movzwl dec push xchg in iret push jge mov sti js or aad dec jmp lods (bad) scas daa (bad) or or adc add out mov aaa adc divl sbb ja (bad) stos sub jb shll popf shr imul dec ds (bad) sub aaa adc mov inc dec test pop mov add inc lcall push or (bad) xlat xchg and add call imul nop or scas out mov mov es lds out fsubs add in cmc inc out daa adc add pop mov and mov ret push and xor mov add call std jae push adc lret mov rcrl scas and loope inc in pop (bad) mov out pop mov imul mov mov dec repz out enter adc cwtl fsubrp or cmpsb mov mov pop shlb loop cmp jmp or in mov bound int3 mov pop jne (bad) pushf lock mov mov sbb add clc xchg adc pop int3 enter dec pop xchg push cmp nop add pop jmp and jb sbb popl mov jge pop inc in pop cs je jl les or ljmp sub sub repnz and outsl popa sub sub mov fdivs or enter (bad) jo sub cmc pop mov cmp mov add lret test pop scas (bad) cmc stos lods cltd sar cmpsl scas pushf add xchg addl ror push stos les call xchg cltd add jns ds jno dec xchg sub mov and jecxz or mov jne mov std and clc (bad) lahf fdivrl or jmp bound add stos pop add jg lods pop pop cwtl inc jmp fisttpl jne int3 inc xor aam (bad) fucomip out sub cmpsl (bad) push icebp inc outsb sub int3 ret rcll mov notb sub and dec lret sti fldcw jle imul pop mov sbb outsb lods sub jmp adc fdivrs dec leave lret xchg ficom adc into fwait sub in sub fldenv ficomp mov add pop cmp out ret sub sub or push mov push test mov out jecxz mov repnz rolb ficompl cmpsb cmp fdivrl cli mov (bad) pushf mov xor push outsb sub cmc dec jo jnp lret movsb sbb cmp or or pushf and stc enter push jbe je push pop jle pop and out nop add cltd dec outsb fbld (bad) mov (bad) ja lock add fdivrs add sub inc push and sarl mov and xor rcrb sbb and add mov pop (bad) cmp cmp and test add mov push xor lea (bad) dec stos xlat in cmpsl jns xor (bad) in xlat mov ja xchg test and pop mov idiv out sub popf cmpsl pop inc add add mov or sbb add jno cmc ja test mov test add loope push add out xor shlb sarl mov adc aam cltd xchg inc out (bad) ds or jge out dec (bad) xchg and or or push or cmp sub sub push insl rorl dec (bad) mov rorl rcrl clc and push sbb lret lods dec cld lret std outsb lret xor out je aad (bad) mov andb jo jb jl push popa adc push sbb out dec jnp pop mov jb pop fnop (bad) lret popf aad adc ljmp add lcall xor sub dec jmp or sub xchg mov jle les lret jmp sub or mov push fsubl sbb and fild movsl nop mov leave xlat sbb outsl ret out xor out into addr16 or gs cmp or xchg mov push imul jp fcomp xchg inc push out add cld imul pop mov and jge dec adc add int3 add push sbb clc lea rcrb xchg pushf dec ret mov sbb in xchg fsubs (bad) xchg pop mov out bound ljmp out loop (bad) clc sarb mov les (bad) cmp cli mov mov xchg sub into imul les dec mov or mov (bad) mov fidivr mov cmc scas ja adc jae popf movsl (bad) mov jp push mul dec dec ss enter iret xor adc jae xchg test adc mov fadds mov test loope imul ret mov pop pop xlat leave je inc sub cli ss jnp adc sti or sbb jmp fadds sbb sar repz mov (bad) dec lret es push lretw insl or scas sub insl mov xlat inc fsubrs cmc mov push hlt cltd scas push mov rcl bound xchg aas leave imul sub pop fsubl loop dec out jo sub or mov push ficom push hlt lcall cmp sub mov gs es and jne dec in das mov inc lret or out into mov dec nop pop sbb fldcw lahf iret aad (bad) out add stc inc out add or sbb clc loopne iret pop and sbb mov sbb sub stos and pop inc lahf jl jo sbb (bad) pop cmp and dec (bad) mov shlb js push rcl stos loop xchg mov rclb adc inc (bad) dec dec idivb ret add dec ret add push push or sub xor push add pop lock leave inc dec pop and adc dec xor jns std stc adc push add push sub mov dec and pop movb insb inc out mov movsb mull push xor out jge push push sub and inc sbb cli cmc and sub or (bad) xchg loope repz cmpsl jl pop lock test mov dec mov stc sarl lret es pop xor and imul cmp sub xchg shrb sub xor test jbe (bad) adc dec adc aam add aam out scas xor jae adc mov adc mov (bad) fmul push loopne add loop aad insb rep lods dec mov movups negb and cli mov fistpll call lahf jae xchg (bad) ljmp mov bound in notb mov xchg stc inc inc inc in jp outsl mov add insl test shrl sub jp cmpsl rcll dec test jmp sar enter sub adc dec dec inc (bad) pop call shr add ret add negl scas dec xchg lcall xchg je movsl adc xor xchg lods ljmp in sbb jne cmp pop push jp xlat pop ljmp push mov push cmp push ret movsl inc add inc jo xchg adc (bad) jb push mov movl pop xor loope mov dec dec rcll pop mov xchg pusha and cmp test mov popf or add (bad) mov mov jmp stc das jmp adc adc push ds loope scas andb cmp add out xor jmp push adc mulb cmp (bad) in inc xchg subl xor (bad) mov (bad) push mov pop clc repnz mov adc mov and call xor mov mov pop inc outsb adc cmp jecxz and push sub add (bad) loop adc mov jge inc sahf cs or cmp mull xchg lahf popf fnstsw (bad) lret jmp xchg mov mov cld sbbb pop add and out and shll sub mov imul pop testb jb or jns imul or inc fcos sub insl dec cld push movsl out popf in loope jp les add push mov (bad) in add out ret ljmp inc xor les mov dec mov pop adc push sub or push idivb cmpsb dec (bad) das lds add pop lods inc mov mov clc sub add fild pop jmp pop (bad) movsl fmulp xchg and add sub hlt testb dec cli mov push pusha cli pop frstor mov (bad) jmp lcall hlt ror or mov mov mov xchg mull cmp pushl ljmp popf adcb in cwtl push or jnp mov sbb jno jnp das xchg scas mov inc int3 fsts in sarl mov and das mov sub icebp sub add loop les dec lock out mov push (bad) cmpsb (bad) and jbe repz jmp mov xor add mov pop jl arpl sub xchg je push add loop je imul movsl sub (bad) cmp and insl rcrl daa pop out and add int3 aas aaa or xchg cli popa int sarl jmp xor lock fmuls xlat add fidiv and add neg ret idivb add mov xor cmc (bad) imul jo and mov dec jmp testb out mov rorl call popf movl adc ljmp mov pop add rcl sub and mov add xor mov out mov fistp lods (bad) iret stos mov add mov out cwtl lret outsb and stos inc mov out mov push jo mov pop pop shrl xlat ljmp loopne sbb mov xor outsb xchg dec jge add lcall dec les cwtl cmp inc adc add sub pushl vpmovsxbw into or mov push fmuls push ljmp std jns xor jmp (bad) mov push stc ljmp cs popf jp push aas dec inc sbb cmc sahf fbstp xor dec xchg iret cld (bad) mov fisubr outsl test mov or int push aas idiv rorl fs dec or xor push leave fimull into cmp inc daa jmp jle cli scas (bad) and cmp mov (bad) mov adc push into scas adc mov cmp lret out (bad) mov adc call inc xchg mov lret stc push mov (bad) call lods cmpsb les call push fs cmp mov sub inc sti ds dec sbb or push jle into and add sub scas xor fnstcw dec pop dec jmp ljmp cwtl stos mov pushf fadds (bad) and mov ret push push std test mov or lret jo sub lret les (bad) sbb (bad) int mov sbb xchg fidivl cmc inc ja jmp mulb aaa mov dec pop inc xchg lahf pop add mov mov inc cmp lea loop gs leave dec push outsl and cmpsb mov pop js bound adc sub ljmp addr16 in jmp inc movsb ljmp dec int3 xchg or pop mov cld fdivs sub lock iret mov add les aas mov adc pop vmovlps popf sub fsubrs rcl ret mov dec xor sub aaa sbb mov sbb pop sbb mov adc mov jno xor jb,pn add push mov cltd sub rclb push stos mov pusha in mov mov jle imul push mov add xchg xchg sbb mov mov xor (bad) das cmp push mov sti jns ret addl xor out pop lret cmp (bad) movsl fdivs (bad) outsb push xorb push cli inc scas out daa lret dec jecxz idivb pop push stos sub ljmp sub xchg sub sub sub mov pushf and dec xor adc ret js jbe ret jbe push lret push xor test loop xchg shll lds sub iret xor add adc rcrb mov lock shll and sub mov or gs jnp pop leave mov je sbb sub mov or push fsubrl mov aas or and push mov pop (bad) sub out adc and cli jmp xchg adc xor adc sub push add sarb xor pop adc mov xchg (bad) jecxz cmpb notb movb lock repz cmp xor fnstcw push pop xchg pop xor xchg test adc lret repnz ljmp repz pop mov shll mov rcr jnp aam ljmp fs dec mov mov pop movsb das adc lahf push hlt push sub test repz out push xchg enter loope cmpb out mov es lahf fcoml out sub aad jle lock repnz inc add sub fbld out fs ljmp pop (bad) inc or jne xchg ret (bad) roll fcomip shrb (bad) pop or sbb mov push xchg jmp fsubl popf in mov pop push pop test into fildll mov call and mov dec sub sub xor test xor ja (bad) movsb push ret add lds cmpsb les mov ret jns imul into rcrb xor clc jnp (bad) jno dec bound rcll xor mov ds insb jmp sti add clc pop test clflush sub xor jg movsb out repnz (bad) mov sbb mov or jmp mov je data16 sbb (bad) cs pop pop inc dec mov in test add mov cmpsb mov mull jo mov push pushf sub adc ret leave std mov xor data16 sub mov div outsb (bad) jo xchg cmp insl jbe mov mov and mov jp or add jle xchg sub dec cld loope or jno fimul jmp lret jmp sarb psrlq mov xor lahf push imul arpl js daa fistp loope pop sahf add imulb jp mov pusha test fdivs mov lahf xor cmc push cmp bound or and pop out cmpsb push sub xor div pop in mov cld add decl fstl sbb push lret pop ret addb xor dec test cmp rcr mov das repnz iret das or lret sub push cmp jmp int clc sbb dec jmp xlat add mov das loopne ljmp daa fidiv (bad) outsl mov xchg out sub mov pcmpgtb sti cwtl mov cs or stc adc add call (bad) sub jle fbstp das push jo imul idivl rep xchg and scas push mov cmp sub mov fxch imul sub xchg loop sub sub xor fcomps or ret xchg mov ljmp xor dec dec bound in test or pop inc pusha add test daa ljmp pop mov (bad) icebp mulb xor rolb pop cmpsl imul dec (bad) aam in pop leave decl sbb shr push or xchg fistpll outsl pop xor mov or (bad) repz adc pop aas movsl int mulb xchg pusha call and outsb popf mov jno cmp out cs jno xor jbe dec lret pop notb repz xchg sbb aaa push cmp rcrl and lods (bad) lock sbb or push das not mov lahf dec fidivl movsl divl pop and ss pop loop sub mov or movsl cmpsl push push xchg ret pop push push lods inc pop repz xchg ljmp leave and mov sbb xor jne out sub and das fcomps lock add xor inc dec mov or shrb lock fsubrl fist push pop add xor mov mov add lret (bad) frstor dec (bad) iret bound dec das sub push (bad) fsubrl rolb nop dec xchg addr16 push push jne cmp jge notb push div mov lret das hlt or jns andl dec test (bad) jecxz or (bad) or lods pop (bad) or stc fldl mov pop (bad) jnp mov leave or sub outsb stc mov xor push sub negl mov (bad) or icebp sbb cmp je jecxz inc test xchg popaw lock sarl mov jbe pop daa outsb sar sub and adc aaa jmp sub xor roll imul call je jb idiv cmp cmp je push aam aas mov push outsl mov cmc roll popa repz ja incl mov lea adc pop or dec inc int add cmp adc outsb movsl jmp movsl ficom sbb cwtl push pushf enter sbb subl pop xchg xchg inc dec into out lret adc popf push push das mov sub adc out and (bad) stc pop movsl div adc mov notl mov pop cld sub and sub push mov in adc roll fcmovnbe sub fwait js mov pop or sub (bad) jae cli dec pop icebp xlat test xor fldt into cmp or daa inc subl lret jecxz repnz outsb xor or sub pop cmc lcall mov stc jo jmp push mov pop xlat fldenv out sbb repnz (bad) (bad) negb pop mov cmp fwait and fcom mov mov or and lods jmp mov sub adc mov fs dec mov push dec scas (bad) rorb add test push pop sub daa add stc js push int3 fbld xchg fnop in call sti jo pop cmp push and jmp and add aad cli int3 mov icebp ljmp (bad) je dec lods jge mov inc ret push xor cmp jmp sub clc cmp (bad) mov pop repz add lds adc and scas jecxz and jge sub (bad) and shll cld fidiv dec jl cmp ja sbb dec mov mov jae push dec jmp mov sbb repnz cli scas repnz cmp imul xchg ljmp and cmpsb ja add push mov pop sahf push in cli inc scas (bad) pop stos sub or adc insl pop cs (bad) push mov pop popf jns popa fimul fcoms mov push fist sub push lret mov sub mov mov scas loop xchg cwtl mov ds xor daa pop in ret popf (bad) pop loop jmp movsl sub lods mov inc add pop sub (bad) xchg decl xchg jp inc pop cmp subl in pop in ljmp (bad) cmp pop test andb add push mov cmp pop stos cmp cmp push (bad) stos push fnsave jo jne mov add movsl pop (bad) jg aad cmp fnsave push mov add daa add dec jo sub repz sbb mov in dec sbb or fcoml insb mov xchg lea fistpl mov icebp adc jne add and add xor scas int3 pop xor mov push push fisttpll enter outsl sub pop xor push mov add cwtl push pop pop add sub cmp add (bad) loopne sbb int3 aas jl mov inc push sbb sub movsl shr pop fistp cs decb or add cmpsl pop sbbl and out mov fsts pop into lods push xchg ljmp pushf cltd and stc mov sbb pop jo mulb xchg scas sub sti and pop pop sub aam movsb mov mov jl loopne sub stc pushf js dec (bad) jp rolb aad xlat mov sub std sub neg mov icebp jg add leave fs xor xor popa xor in popa mov mov sub push and pusha jmp push add push mov jbe test dec sti xor adc addr16 cmp mov add pop pop insb mov xor push int and std mov call xchg roll xor sub add ds and sub ret out std sbb (bad) repnz jne push mull mov xchg xor call ds add push std ds xor mov aas mov test mov xor (bad) mov sti xor push inc pop jmp shlb fbstp iret and lret repnz ret fsubl inc test fadds jmp xchg js aaa nop xchg push push jp das adc andb pop and sub gs mov push into lods add mov xor lods pop dec loopne inc fwait movl mov dec dec (bad) sub sub jecxz out pop mov lods pop in pop dec mov testb push je cmp clc pop dec clc out das out lds mov lods mov iret mov aas inc ljmp daa (bad) outsb adc xchg in add cmp lods jno and lret push cld inc push (bad) pop imul or add xor mov mov (bad) push or repz and mov jno dec or cmc (bad) adc (bad) in out clc mul sbb movsl scas cmpsl xor jmp gs cli fdivl add pop or push es js popf sarb lret hlt pop mov add sti int3 push lods xchg cmpsl (bad) sub xor mov pop pop xchg cmpsl (bad) ss insb hlt rcrl mov rcr add daa shll lret das sub ret ficomp xor mov daa sti dec or and hlt xor xor mov adc inc out icebp sub insb (bad) (bad) mov jnp cmc adc lret ror pop xor shll or ljmp cli add lret fiadd es mov mov push insb rolb sarb add xchg pop iret push pop mov cmc pushf sub and loop cwtl and rcrb pop leave out mov jno test roll fcomps das or mov sbb out jns cmpsl (bad) adc and gs sub add mov lods xchg sti mov mov (bad) xor ret pop cmp mov ja in push push (bad) bound rcl jnp mov cs fcmovne push lods xchg xor pushf clc sub arpl idiv cmp inc add inc push xchg loope out jmp lods scas xchg mov add sub xor repz out scas (bad) mov ljmp pop mov sub mov add jmp mulps ljmp out lret (bad) pop adc xchg inc cmp repnz and iret sarb (bad) xor popa cmp ficom in (bad) icebp outsl out and add sub icebp ucomiss sbb test in mov and pop add mov aas int3 mov xchg inc dec sarb idivb cli lods cmpsb movsb mov jecxz inc mov pop popf sti cmp stos mov pop sahf int jg add notl mov fiadd subb pop mov clc fild test aad call or cmp sub sub adc popf push imul sub sbb and in insl dec decb mov sub lods sbb lods jp cmc (bad) mov xchg pop loop loop lds pop mov xor inc mov inc test or es bnd in pop xlat nop cmp (bad) sub stc mov shll scas imul popa add cmp cmp outsl jno add and sub jmp dec or icebp sub stc xor mov cmp dec xor pop clc xchg icebp add cs fisubr pop xor mov outsb pop xchg stos jle dec loopne lret pop sub or add stc lea pop mov neg in (bad) cmp aas inc jno xor cltd test sub inc jge mov bound mov or cltd ds cmp rcrl les dec mov out mov daa shrl and pushf xor mov lods fmulp fs out in lahf dec aam cmpsb fs push jl mov xchg loope arpl (bad) movsb mov stos xor shlb int3 xchg jmp and xor jns mov xchg cld jg push dec gs inc mov or or lret jg dec mull je dec ljmp std cmp lcall jl xchg sub iret mov imul or repz cmpsl iret aam popa repz in incb dec inc push notl cmpsl adc xchg fisttp pusha jne mov inc pop enter mov push pop int3 push or int3 jns mov and iret mov xor add mov xchg mov subb mov pop cs cs dec jne cwtl in in aam adc xchg ss xchg push aad and jg repnz iret xlat outsb ss orb cmp add push andb movsb mov in xor cvtps2pi ffree popf jbe push pop stc ret xchg iret xchg roll lret arpl pusha jp test lret sub jne mov pop in mov sbb mov add ret inc dec rcll adc leave frstor cmp je pop or iret mov xor ljmp adc xor imull sub pop xchg pop cli negl (bad) jb data16 das ljmp test cli cltd out cwtl (bad) (bad) dec cmpb sub jbe xlat xor fist (bad) pop mov xor ljmp subb int3 pop (bad) add pop and add mov (bad) and lea jne lock or push push ja pop in pusha mov add int stos and sbb xchg fistp dec push lret les xor test mov pop mov push pop stc xor lds ds jmp lods test dec popf push arpl or and xor lock jge (bad) into or mov xchg ljmp cmp xor pop cli lret mov stc mov xor test test in add test jmp and inc push pop dec sub push dec jl mov mov mov xor jge inc and fwait cmp dec cmp cld in push data16 int stc or and inc pop in dec sar xlat dec ljmp adc rorb scas xor jmp test mov sub ljmp stc test fucomip (bad) jecxz pop pop jp fild mov out push sub mov into scas cmp cmpsb sub (bad) mov divb loope,pt and xchg scas mov daa into ja dec sbb sub or and popf jge cmp push scas fsub (bad) sbb hlt aad repz jp add and xlat mov (bad) loopne pop xchg adc xchg fistl nop fsubrs xchg lcall sub fdivrs mov ja notb sub or jnp xchg and (bad) lret or xchg daa xor sub lods rorl mov dec ret xchg aaa (bad) mov dec repz pop push mov (bad) jg lods lret inc add xor push mov popf inc in dec push popf sahf sub cmp bound push je jno dec sbb mov loope mov jge out cltd nop lret xchg jno jns rcll es data16 jle jne test jmp push xchg out xor neg pop pop or and test jmp pop ret mov (bad) in pop loop aas xor ljmp ds or pop adc cli and or sbb in outsb cmp test shll dec and cltd xchg adc (bad) dec and mov add call xlat int3 sbb lcall fistpll gs stos sub inc das mov (bad) xchg cmc adc popf fist pusha ret dec or add sub jno loopne in sub add dec jge fnstenv rcll incl jmp leave imul jno scas jl adc fmull fistl ja adc and ss xor lods orl clc sbb das pop inc les dec sbb or std dec insl mov mov inc lods pop mov cwtl push jmp pop divb (bad) or jle imul and xchg sbb negb adc sub pop pop lret pop sub jg repnz add sub xchg push repz shr cmp or lcall push inc iret xor push push test in into stc adc and lea clc ror lret mov mov mov mov xchg adc rclb ret ljmp daa ja mov sbb lret cmp push ret xlat jne cmc pop (bad) popa xchg incl icebp clc xor nop adc (bad) sahf (bad) insl dec imul aam leave push (bad) (bad) jl pop mov mov loop test (bad) adc xor fiadd mov sub cmp loope into sub push add push nop sahf inc mov cmc movsb scas pop movsb add aam pop (bad) ljmp pop mov adc call xor ja rclb adc cs mov (bad) lea data16 and and idivl out fnop sub in xlat fcoml sub add movsl cmp and cwtl xor inc add cli jle add cwtl mov divb int3 dec (bad) popf pop jnp and lahf mov sti mov xchg test mov aas xchg pop enter (bad) jg cmp xchg inc in and popf and dec call cmp adc sub sub out sbb inc xor cmp fcompl jb mov jg mov out loope jnp movsl out mov pop iret cli mov daa rcr scas in sub sub (bad) and and sbb sub xchg repz and jg js jne mov ljmp sub cmp std shrb mov stos notl ret push or jnp sub push pushf jg (bad) mov xchg jmp pop nop cmp dec or mov int mov fcompl and adc mov and jno inc xorb jecxz and mov mov push dec icebp pop and or nop into lahf cld cmpsb push jge add inc push add jge (bad) cmc pop icebp fsubrs adcl and fcomi sub xlat xor outsb bound mov rorb into inc dec dec sub push mov mov xchg push mov outsb mov fildll cld rcrb cmp lods (bad) fnop xchg sub fs test mov fcmovne lret test mov das aam jp inc pop or cmp sbb cld in dec push pop xchg sbb hlt jle xor xor hlt and pop cmp jge cmp sub pop (bad) call sub std out and mov jmp jns aam push sub pop scas xor mov cmpsb sub xchg xchg fimul mov cmp test xor fs xchg and (bad) sti add cli xor fcoms sahf das sub xchg inc push or xchg lea (bad) jg dec push aas mov in fwait xchg scas cmpsb jns out dec sub sbb sub pop bnd mov mov add sub ljmp add push xchg adc leave push cld mov ret xchg fcomps das jecxz adc cmpsb stos and jo pop iret mov xlat pop mov mov loope repz mov icebp aam push (bad) jbe inc pop push out cmpsl rorl stos lds rcl push (bad) cli sub mov mov inc mov and outsl cltd in cmpsl aam daa (bad) lret ficom iret push mov add jle mov push add (bad) push pop repnz push push lret push das pop cmpsb js or in pop (bad) push fidiv icebp pop jns dec inc mov ret pop mov mov mov dec jmp out mov or dec cli lcall (bad) push add movzbl mov adc cmp les rcrl add lea (bad) jne test add outsb cmp mov pop mov xlat enter add aam fs out or loope (bad) imul out sub (bad) and cmpsl hlt call xchg fisttpll lods lock xchg (bad) into xor daa dec pop jmp daa sbb ss jp test imul sub jl push sub and push and icebp sbb scas sub and (bad) pop push ljmp incl cmp sub sub clc push mov adc add fisub iret movsb ja push sarb push push (bad) aas mov inc imul mov into push nop jb add ret and sub and cmp cmpsl mov add scas lret icebp cmc imul (bad) shrb gs mov sti (bad) lods mov lcall and imul negb inc je add les ret pushf movsb xchg pop inc sub and outsb and or das data16 jns mov out or pop into mov adc cmp test jmp xchg aad jmp js inc std (bad) xor or mov out inc mov scas add sti mov dec pop mov stos xor aad nop push (bad) popf jbe leave fistp bound movsl jbe push (bad) mov xlat cmpsb cwtl dec repnz stos cmp adc inc xor xor sub push dec in xor cld pop mov inc loopne push mov call (bad) cmpsb sub sub push (bad) leave loopne in sub gs cmp sub imul dec scas mov xchg xor dec mov pushf push mov cmp and xor adc adc inc sub cmp and cmp enter stc rorl cmc dec loope movsl andb xor test loop push cmp pop xor cmp mov xchg mov loope or xlat cmp dec stos and push in rcl xchg pop pop (bad) not cmp pop mov dec test xchg (bad) xchg push jno ja daa fstl cltd or mov sbb jb les fcmovnb iret xor cld adc sti xor test xchg out in pop mov ret push xor cmp add jecxz jle push mov shlb in fist cmp in and ss sub stc lds dec (bad) loop mov push sbb popf cwtl sub adc jp arpl fs mov pop test int3 mov shr int3 jle popf out jge jnp mov aam loop mov jne xchg or stos jp (bad) dec or add in outsb jg pop in jo add cmp outsb push mov lods jo xor inc pop out mov or mov (bad) in push xchg lcall mov js xchg dec pusha sub mov mov push jb jl dec jmp jmp mov add test xchg xor add fiaddl dec pushf and mov cmc or and rcrl enter aam out pop xorb mov inc lods hlt xchg js xchg mov cli or dec mov mov push data16 loop and push pop out mov adc add lret jge in cld out jns sub xor rolb or lret dec (bad) push dec mov mov ljmp cmp or sub dec es repnz cmpsb clc dec test loop mov cmc shr dec sub fimul out adc mov mov stos loopne mov add mov lods adc sub sub push adc jne rcll out mov and push inc into ja subl out in insb out fcompl pop in cmp sbb and mov repz cmp cs adc out popa cmp ret shr mov movsl sub mov insl ds add in (bad) mov fcoml out sub sub data16 push movsl out lods imul jmp inc stc or mov pop insl add mov mov sub mov popa mov sbb xor xchg dec vpsubsb mov inc (bad) mov into test sub negl pop mov mov stc ljmp fdivl jnp and pop das jnp adc push cmpsb clc mov das repz pushf jp pop sbb sub xlat push sub lcall cmp call jno sub push sti and pop aad cs out or (bad) dec (bad) leave and xor dec dec daa cli jbe (bad) lret and mov push out jmp out mov pop pop cmp mov xor mov push ror jb bound lret mov mov mov iret bound lcall aam xchg loop test lock cwtl nop xor sarl mov call test aad cli sub daa sbb leave ds dec jo pop push bound lock xor (bad) mov leave sub and mov out popf jno das push movsb push pop adc xor pop xor or and add sbb and fs rorb jno sahf mov cmp test jmp cmpsl pop testb call or sub shlb add push xchg fwait jmp nop dec fild jmp test and mov idivl or pop outsl and dec (bad) imulb mov cs inc inc std adc xor mov iret call dec test pop (bad) enter push in mov js inc mov sahf mov add enter out ja adc mov add fadds in mov mov repz and jmp (bad) loop popf pop into pop add (bad) xor or add mov scas loop xchg loop xchg int3 lret or sbb mov mov or xchg lods cmp aaa mov out and lret mov cwtl mov nop adc adc fwait and lods rorb and movsl jne sub sub (bad) or inc (bad) sbb sub pop pop xchg fs xchg insb mov imul lahf sti mov add dec sub leave or xchg leave fist xchg jmp in mov mov sbb add or icebp mov fld gs repnz dec jg out push rol or loop jle xor int3 jle mov mov sub pop pushf pop adc mov (bad) or jecxz in cmpsl stos pop or out movsb mov bound or mov (bad) mov aad sar jmp pop xchg mov icebp cmpsb cmpsb xchg and lods lods add add mov lret (bad) cmp inc lock not (bad) stos iret and movsl sarl decl pop (bad) sahf fwait rolw out mov sbb inc hlt sarb and pop out and jnp or xchg add out pop mov js add sub inc mov sub push push inc pop push loopne iret sub mov ret nop push sub fimull push in sbb xlat inc jmp xchg imul jmp leave lods push dec sti shufps mov sub fs sub mov xor icebp cmpsl xlat loope je jno xor cmc lret ds ja sarb data16 pop cmp leave daa fnstcw and and div loop fsubrl xor scas adc rorl xor and and (bad) int pop sub or (bad) jmp es mov sti daa lret data16 inc add stc testb js or into or aas repnz jb iret sub xor or idivl stos and (bad) and cld pop mov pop xchg push and mov mov loop loop xchg (bad) sar out pop pushf lods lcall xchg sbb ret ljmp xor (bad) mov (bad) jle (bad) dec add out jne punpckldq sar lret inc icebp rolb push xor jl mov arpl or or xor pop cmpsl push dec sbb dec pop or sub jbe mov sub fisub cmp dec das (bad) mov pop cmp movsb pop movl scas icebp pushf or or pop pop aaa pushf push xchg cltd lret pop outsl mov (bad) jmp ret adc xchg pop daa pop mov cmp mov divl xchg lret mov and leave ljmp sti push leave xor cwtl cmc repz lods mov cmp sub dec cmp bound and and xchg mov mov in push mov sub xchg (bad) adc (bad) (bad) enter leave pop adc push sub fisubrl add jg std pop loop push mov test and out sub mov daa dec mov mov mov pop (bad) or ss and dec jae repz push adc add or pop mov ret pop and andl add test mov outsl scas leave je hlt add (bad) fisubr or adc cmp and adc xchg gs popf dec or lds cmp stos ret fbstp rclb (bad) int loopne xor loope das jne mov and or xor mov sarb lret add lds loop or jl inc frstor scas rcl xchg lea jmp sbb or int3 xchg lock (bad) stc popf pop mov mov add into ds or out sub sub cmp int3 pop push xchg adc ljmp pop push push xor mov cmp shrl push into jne (bad) dec jnp lods int3 pop push repz xor xor cltd call (bad) sahf lret jae shr sbb or dec push mov (bad) das clc adc inc sub mov cmp loope icebp mov mov mov pop jnp cmp in es test outsl test icebp mov jmp or dec (bad) mov sarb mov faddl cmpsb lcall xchg out mov pop nop in add movl scas adc or mov jo ret push mov fstl dec fcmovnu pushf repnz lcall dec icebp inc inc sub mov or lcall (bad) inc sub int jle aad clc mov sub and lret xchg push movsb gs jl,pn adc popf mov fpatan imul sbb mov pop pop (bad) ljmp jmp outsb push push pop jne and fs mov in adc enter pop sub ficomp in mov or xorb jne andl fidivrl pop jnp sub ds mov loope notb cmp sub mov or jmp addr16 sbb jl pop adc cmp iret out imul cmpb add popf pop sbb xchg jl in xor xlat mov xchg jmp add mov add xchg std (bad) dec fs (bad) aaa mov mov fist mov mov xlat mov (bad) push xor inc xchg mov add push add imull pop mov and and push (bad) nop leave rcll pop dec fbld sbb push sbbb sub aad dec adc and ljmp stc (bad) push jno or pop decl dec push jmp dec pop jecxz add aad jge stc sbb notl or cmp add je sti xor sarl xor xchg mov pop mov leave mov sti sub loopne xchg fistp inc xchg fldcw ror pop or mov xor xor cmp pop xor fwait sarl stos sub dec cmp dec rcrl sub xor jno dec jg or push mov add stos sub test sbb or dec adc movsb push mov and jp insl mov add mov adc mov dec jecxz sub sub adc mov or inc pop push (bad) das xor mov mov dec jmp jno mov (bad) push je cmp stos mov sahf add sub mov scas sub pop daa inc imul mov cmp pop std xchg fdivrl mov mov (bad) inc inc pop cs clc adc lahf movsb push fwait mov das sub and jmp xor arpl sti mov push adc adc aaa push jno inc add das mov in and or ja jno mov mov cmc leave inc mov xchg lahf sbb icebp inc or stc popa inc and dec cmp mov xor mov adc adcl pop jb rcll and insb mov aaa sub in sub daa stc inc inc xor notb outsl sahf sbb mov (bad) aaa rolb and and fs lods loopne add scas in cmp es xchg dec lret or aaa xor mov push stc fmuls fs xor test pop insb sbb fistl adc and sti je add mov mov jl xor dec mov add add das notb mov adc mov cmp sbb inc outsl sub jle xchg mov movsl xor mov jg fimul in xor sub es and mov add adc ret push xchg inc lret fcom mov push popa mov inc mov dec xor lods push test sub cwtl xchg sti lret dec lret mov push hlt xor sub push mov sbb mov push mov (bad) pop ret mov stos mov insl pop sbb or in loopne sub ljmp jg add xor dec fldenv or push dec adc notl jp out pop in and out xchg jl push outsb mov (bad) data16 cs mov rorb cwtl and mov jge jg aam fsubrs or ficomp add mov ror arpl dec cld cmpl cld add cmp inc push loope test stos sub scas repnz pop pop add mov je nopl sbb idiv (bad) xlat pop stos sub fcmovnb push into dec out daa je rcr dec cvtps2pi mov in jge out addr16 test test xor notb sub pop iret cmpsl cmp das enter xchg sub sub xchg sbb or xchg adc mov jns js (bad) pop iret adc cltd inc aas mov into mov orb cmp imul cltd pop stc stc cmp pusha or es cli lret adc dec cltd adc or (bad) and repnz popf inc inc fdivrs cmp sbb fcoml cmp or pushl aad push rorl xchg jae (bad) dec icebp xchg sbb add or into pop imul and xchg (bad) gs adc (bad) adc push xchg jns mov and mov pop aaa push mov cmp adc dec rorb (bad) cmp jl and ror jae les add mov or test sar jne mov pushf aad xor sub (bad) fdivrs mov mov negb jmp mov adc daa fst aas mov fild xor xor pop shr inc xchg adc shrl jae cmp in mov sub ds iret sub orb and push jns xchg shrb inc call push hlt leave adc mov dec lret sub sbb fsubrs out sub mov xchg ja notb mov (bad) jne push jne mov mov cmp lcall shlb cmp jmp int mov repnz test xlat mov jp lea outsb add xchg aad mov xor rcll push xchg sub mov repz sub in mov daa pop push mov in call imul pop movb setae scas out dec popa sub xor adc mov daa jge push lock pop or ret cmp (bad) (bad) cmp dec sub xor mov dec jecxz jbe js add (bad) and inc out mov stos mov and enter cmp adc sub stc in sarb imul out jo add out xchg sbb push xchg out mov imul adc daa lods mov enter sub mov push imul dec test add push mov ret xlat sub mov adc daa add pop pop pop icebp mov sub jmp fwait xor fsubl push push insb xchg dec stc mov adc xor xlat jmp sbb out adc mov in popa pop mov daa clc repnz push sub xchg and pop ret adc mov jmp (bad) repz mov aas call and (bad) aad in mov cmpsb pop xlat shlb mov in push mov das mulb inc in dec cli add add divb xchg mov mov and jb addl cmp stc out add dec cwtl push mov jae lcall int cli std mov pop cld pop and sub into int jmp xchg ret imul outsb push (bad) iret in pop sbb loopne out mov sub (bad) pop pop sahf xor xor push (bad) or pop pop popfw in movsl pop out cmp pop sub dec inc add jmp jge dec pop es xchg (bad) (bad) cmp in adc mov js std mov cli aas addb lods sti insl push mov push out pop add or scas jne adc lds in sahf add fldl pop mov xchg jp push add jg lret dec xchg jb add xchg jmp sub shrl push and dec inc inc and dec sarl lret xor pop xchg dec stc mov cmp ja aaa add sbb cli sbb or adcb pop push mov xor pop jp pop loop not inc (bad) ljmp and mov push add inc dec fild mov jle add or and mov push mov jg or pop mov inc dec mov xchg lcall mov push jp out sub mov mov aad sti mov jne and jo ret cmpsb sub out add loope push mov (bad) idivb (bad) xchg cmp jge xchg cmp add inc add leave pop push add sbb add movzbl adc lea cmp sbb repz xchg lahf or mov add insb xchg and xor fwait cwtl fnstsw sub cmp sarl xchg sub or loope sbb stc aaa cli push insb cmp fstps inc push cmp test pop add mov adc (bad) data16 pop ds out dec mov dec mov std stos mov sbb push pop lods incb (bad) stc scas popf sahf sub sub cmp mov test loop adc mov and dec adc sub cmp inc mov jge sub call sub (bad) push dec and sub (bad) cmp pop jne sub dec adc mov sub or stos lret call add mov in or adc popf cmp dec sbb and outsb bound int3 cmp out mov movsl outsb add (bad) mov or and push pop sub mov adc imull jb notb pop lods xor mov xor mov (bad) outsb mov fs lcall xchg inc imull dec out jmp xlat cmp dec inc daa into inc pop or lret mov and jmp (bad) frstor outsb repz jns shll in xchg shr mov push jmp cltd pop imul jb push into mov mov mov fs adc out lret jmp scas movsl lds mov push pop push adc rcrl stos cmp rol or cli ret ja stos xchg jne xchg xlat xor cltd sub test testb xchg pop sbb hlt sbb jnp out xor loop xor call xor les repnz gs inc repnz xchg jecxz dec test aaa pop hlt pop pop xchg fldenv mov ljmp fnsave dec repz loop sub and cmpsb sub add rclb mov mov inc addr16 fadd sub cwtl mov cmp pop (bad) dec push and das xor mov jmp xor loop ds lret ret xchg out (bad) cld pop cmpsb lret pop into mov push test ret test push pop mov fistpl xchg sub push stc out sti sub out pop xor (bad) cli cs xlat mov jl inc xor test cmpsl lcall iret out outsb pop sub jle adc mov fnstcw xor mov pop or cli sub shll pop imul pop repnz push jle push test mov cld or nop das lret clc dec test sti sbb (bad) movsl gs sub or jbe add push add push pop (bad) xchg jmp pusha sarl sbb add xor loopne inc cmp pop jne (bad) and xor call push inc or xchg inc pop test test cmp pushf cltd push xor lds imul mul rep clc adc (bad) xor sub mov notb aam push inc add stos push insl mov enter testl (bad) aad inc inc xor mov test popf (bad) shlb rcll xchg movsb dec adc pop and push jne sbb inc jg ljmp inc xor ja out repnz or ja clc rcrw adc pop pushf add jne pushf and (bad) hlt inc lret xlat xor sub shr jno sub aas cmpsb sbb pop leave and push test mov mov loop nop pushf pop and int3 mov test pop pop jmp stos adc arpl mov les inc leave inc sub ret dec out shl cld stos sub pop ret sub sub pop int3 leave fstpl int3 std or jnp lods out xchg add or ja xlat jle inc and lret push mov jg out and add enter das out pop dec shrb (bad) movsb pop aaa mov mov dec push or sub xchg pushf xchg stc adc (bad) sub push mov xchg fst fucomi mulb dec add and call stos mov lret popa or cmp jge out sti sub imul pop pop lret mov cmc add cld cli dec push dec lds mov aas jmp or fisubr cld xchg xor sub dec clc mov adc (bad) iret sub push in xor xor cs roll mov sbb push and test dec xor mov repz (bad) cmp ja es xor shll fsubr sbb mov sub test rcrb out jne loop and pushf (bad) mov les push pop test jmp xor jl aaa mov push inc lods (bad) lea or outsl add mov insl jecxz push aaa out jo pop cmp xor fsubp and mov and mov sbb push push adc add mov mov push xor scas icebp jb in jecxz icebp mov pop fnop (bad) dec repz pop pop inc mov add aad xchg pop mov (bad) popf aam cmpsl adc stc mov sbb or pop je jb out je insb fimul dec (bad) mov dec sbb jae push add sub lods pushf cwtl sbb pop imul into jbe imul xor pop jl pop pop (bad) ret sub ret pop in lahf dec mov pop push inc scas sti je or jle rcl pop sub fs jle dec mov xlat lds and repnz lea mov push jns push mov imul dec mov jg and sub inc imul and gs lds rcrl push ljmp xchg pop clc adc ljmp mov adc or push es cmp jbe ljmp iret outsb mov ds sarb test ljmp jecxz (bad) rcr cmpsl mov jns gs sbb cli mov and scas fcomps dec add pop add cs and jb flds pop add icebp xor mov or sbb ret lret ljmp mov mov mov ret std jno push sub pusha imull insl sbb std sub outsl pushf jmp pop mov pop cld (bad) pop pop inc (bad) or push dec pop push mov mov xlat mov in out fisub push aas lea xor push push and inc push loop fstpl lods pop xchg jmp mov sbb xor mov dec test lea mov jns imul incb and bound into fstl push data16 pop dec cmp fnstenv into push push jbe jne jb pop mov je jecxz cmp dec aam lret rcl push xor enter (bad) xor icebp sbb adc mov test xor xlat daa icebp sbb adc add loop aas aad pop mov fmul lahf mov mov mov daa ss test adcw repz fistl and xor lock lods leave rcrl pusha sub and pushf pop ret repnz cmpsl jne jmp mov dec loopne add mov inc lock jmp xchg mov jnp dec decl jae in inc imul pushf mov fsubp adc add jmp data16 add and pop fs rcrb bound (bad) lods inc cmpsb loop pop inc test pop push cld popf and movsb mov out mov popf (bad) cs xor (bad) pop pop repz xchg inc ljmp push imul sub daa or jns psubw repz adc in data16 sbb divb sti sub data16 test lret (bad) pop test repnz repz ljmp test mov xor xlat sub ja fldcw outsb or cmp xchg add lahf repz adc xor adc (bad) xor js sar mov push jg xor jp aam push cmp (bad) cmp out stc int dec insb dec or dec pop daa and sbb sbb cs fisubl cmp sahf and loop push je or jmp sub add mov xlat in scas (bad) jns jae and mov movsb jmp and sub in jmp mov ret jb xchg add pushf ja sbb lret mov inc and (bad) loop imul rcrb xchg sbb xor mov nop roll aad loop sub lret xor dec mov dec movsb insb roll pop int es imul and int3 lods test mov mov mov (bad) sarl jg test push popf pop jle pop and test ljmp sti mov mov mov test sub mov popf out push mov or sub push dec fwait daa (bad) and xlat pop ret stc xor into (bad) (bad) (bad) out jne mov sti les adc iret fimul sub xchg xchg add sub lret pop push adc (bad) ficomp pop (bad) xor mov rcll push les xchg xchg mov call jbe adc roll mov or push adc insl pusha jle sub sbb fstps cli xchg adc notl mov mov xchg pop dec sbb lcall pop (bad) and push sub (bad) pop mov adc call mov (bad) jae idivb push pop sti imull lods iret jle cmp or dec jecxz push add xor aad xchg sub sahf (bad) imul sub xchg cmpsl push ss lahf jns push push ret test mov hlt xor cltd or sbb mov push dec mov ljmp mov push aam leave lcall out leave leave out jecxz,pn xchg in push mov fs call lcall cld cmp les sti roll iret cmp xchg and mov mov lods pusha and imul icebp cmp add and mov or leave jns loope (bad) int3 dec test push imul loope out cs inc and jbe or pop jno inc xor push pop loopne out sbb pushf pop gs and lahf daa and cld xor sub cmc cmp push inc in pop sub fadd addl push xchg outsl and sub and and sub aad dec loop mov adc daa jl and popf jns imul lahf mov into das out dec add test mov shrb jmp and xor ds cmpsb sub sarl sbb push loope cmp mov lds jge aaa xchg cmp add sub lds mov and popf shrw cwtl (bad) mov sub in xchg ds mov (bad) jmp call das js xchg out pop dec add fstpt mov lds fs and mul lret mov dec push or scas mov push shr repz test xor mov pop stos sub jno mov pop add sbb test mov mov xchg scas bound push xchg (bad) jecxz sub jo mov and xchg xor mov xchg jmp lods push mov movsl mov mov shlb add mov inc sub pop (bad) fs xor shlb cmpsb icebp mov adc pop pop and sub outsb repz jns movsl push lret pusha sub xor mov ret lahf sti cltd xchg repz xchg ret scas mov (bad) lret push inc or das push paddusw mov stos cmp push mov xchg aad sub popa cmp sub and push jmp sub adc repnz rol mov push add je loop xor pop hlt (bad) adc sarl sub das int3 cmp dec sub mov push push sbb leave cmpsl pop xor mov and aas lods shl stos xor aas je add fnstenv mov mov mov sub pop aaa jmp or icebp xlat (bad) in dec enter daa sub xor mov stc sarl das shrb data16 arpl je aaa dec bound popf sbb inc leave call xor hlt gs dec xchg loop and icebp dec imul dec mov stos xlat mov leave stc xor or push sbb ja and sbb cli mov cmp ss jo out daa push lret popf addb or ret or push aam js (bad) pop and mov test fcmovnbe mov in sub inc ljmp jne and add mov mov loope pop lret repz out sub push mov lock or cs dec and and xchg or sub cmp decb and clc rorl cmp (bad) mov in sbb or or xor je or jecxz inc jle jb push mov push jo add test pop sub pushf mov push lfs insb std fiadd ret pop out jns pop stos pop rcl enter and jae into jmp mov ficom popf jle imul ds sar inc das mov push mov push out jo sub adc sub icebp cs xor mov (bad) sub in jnp and and mov adc hlt (bad) mov sub add rcrb daa push xor push das rorb pop cmc mov jecxz cltd mov cltd dec loope lret jne test sub xchg sub arpl (bad) out pop dec add jne adc roll ljmp mov cwtl pop pop into push js xchg fsubr sbb movsbl lods test nop push je jno data16 fs ljmp push rolb add in push jne gs fldcw aaa (bad) ja test out add mov pop addr16 push out mov aad insb dec or mov adc and cmp mov sbb sub mov mov lods mov ljmp call bound add movsl popa (bad) ljmp dec mov lods jbe (bad) add out adc inc (bad) xor stos mov dec scas xor mov ret inc pushf decb or and mov or std sub push mov adc fistpll pop sbb dec repz lods cmp popa cmp cs sub mov pop or (bad) jle push or xchg dec pop sbb dec xlat adc pop pop sub sbb add xchg inc mov out jne xchg dec jecxz lahf xchg pop test dec scas cmp dec push sti mov imul mov loop dec cmp std xor loop xlat pop dec xchg ficom loop pop jno dec (bad) int3 adcb and mov mov frndint dec xchg inc mov sarb xchg fsubs out fnstenv sbb ss sub and sub pop ret mov stos fs (bad) test in xchg call sbb or mov push xor pop mov bound xadd popf incb or scas test into sub push or push das aaa lea adc pop push jmp hlt dec out data16 call xchg cmp jb sub mov jg jecxz,pt sub and push stos les call adc frstor mov jg sub xchg aad jns xchg enter sbb mov aaa sub lock popf sbb add ret inc push push inc or xchg out mov dec loope aas and inc or mov gs add sbb sub sub bound or or add dec inc in mov pop les mov (bad) xchg push cmp lock out cmpsl xchg imul inc add arpl fldt fsts and push in push (bad) jge jl push sarl call fisubl lds fsubl out addr16 insw lds add fmuls dec ja mov jg ja sbb xchg std dec mov sbb adc pushf mov sbb mov int push ret mov and jge in scas jge and out popf lock xchg jo or sub push aas stos push ds sub fidivrl pop and fisttpl mov fcmovbe dec mov loope (bad) enter mulb fisttpll and jae adc cmp cwtl mov and adc (bad) loop and in pop ds je (bad) (bad) ret mov xlat push int3 mov adc ja jp test test mov inc aas outsl lea sub (bad) xor (bad) outsl fcoms inc pop rclb sub cmpsl push dec (bad) lea repnz ljmp mov sbb fsubrs (bad) jb xchg dec or (bad) sub jle push sub outsb pop ljmp mov sub cli out hlt add (bad) mov mov jb mov or shr jg add lcall xor adc notl mov xlat or ja cmpsl pop iret out sub loop sti xchg (bad) or adc fcmovnu das adc scas leave idivl inc lods push pslld xchg mov push into jmp fisub cmpsb scas into jb jns lds inc or add repnz sub mov ljmp icebp sbb mov mov aad dec (bad) dec in std sar sub inc repnz pop xchg sti mov dec setns mov xchg sbb clc mov mov cwtl and into mov testb imul in scas push dec daa jo xchg dec add push xor inc jbe add fiadd notb jns dec inc dec mov inc clc clc cmpsl sti fist xchg xor push in dec inc fidivrl sub daa and test dec loop pop adc jmp jp mov nop/reserved xchg scas mov jle mov adc cmc mov mov lds insl dec je test cltd mov daa out (bad) insb call fldl pop add mov mov shr sub aam push push jnp adc shrl pop arpl dec sub ljmp cmp sub cmp push pop test mov ret fidivrl add mov out movsb or ret fs pop ret mov push mov xlat lcall dec (bad) cli arpl aad jne sti mov add mov les sbb mov push jns inc sbb adc pop je jl or cs sahf inc pop add fs xor lret je (bad) movsl lds push (bad) pop stos xor stos or cmpsb fbld push sub cmpsl push out daa sarl cmp test out das xor push and jg or push gs cmpsb push bound movsl in mov adcl adc jmp jecxz dec mov xor iret int outsl hlt inc popf mov out call sahf pop loop pop sti sub aam jb lock push xchg mov add movsb repz cmp inc mov jge test cmp ret push sar jge xor pop sbbb xchg and insl mov mov push adc sbb jno ljmp pop sahf push (bad) mov xor and fldcw ret aam pop jbe bound mov stos xor (bad) imul loop push mov cld lret mov or mov jp xchg lds roll (bad) mov cmp sub xlat cli enter push xor je mov lods pop xchg push adc ljmp nop clc in push mov fwait js lock xchg loop orb test mov xlat xor rorb mov jecxz add xor xchg lock jb iret push (bad) notb scas xchg adc lock mov shlb xor mov rcr inc out or enter sub out mov lds xor or fstpl cltd sarl mov test negb pop icebp cmpsb sub pop sbb out sub jbe add out popa dec out add sub add mov out push pop push shrl jmp ret into or dec arpl aaa mov pop mov mov dec mov lret or enter aaa mov add adcb dec add lock (bad) pop sub xchg xor out xchg mov or loope dec cwtl push add in push push insb andl ret mov fdiv js (bad) lahf fdivrl and mov pop sbb mov inc sub xlat int3 cmp jmp inc cmp orl add and test add push fldt inc cmp orl pop in and fs xchg ljmp or inc dec stos fs bound mov pop es adc xchg (bad) mov xchg push rolb cvtps2pi jmp or cmp cmc jecxz jmp fstpt xor pop fdivrl lret stos sub jle dec inc mov fsubs sbb add ret cmp jmp repnz stos xor mov pop ror cld mov lret jo dec pushf mulb dec jne or in or cmp dec push jnp or or fadds cmp mov xchg fbstp mov frstor sahf scas or inc inc imulb jmp mov pop lods or add inc or pop cmp lods cmp (bad) fidivrl ret (bad) jmp cwtl xchg push lock sub mov mov and sub (bad) stc repnz pop or cli mov das dec out xor cmp adc mov and and test aas mov sbb in inc inc mov and inc and lcall mov or jmp jno (bad) and jmp jmp jno or add fsubs cltd stos sub dec bound fsts pop xor out repnz mov sub and ja jne aaa jmp aad adc (bad) test movsb dec dec cli in les mov lcall jne popf mov lret fs and dec pop ret fdivrs dec iret mov pop out push dec stos lret rcll scas arpl mov into sub addr16 and loope lahf xchg xchg daa int3 xor jmp or or mov test or push jge jecxz sub mov xor xchg pop cmp pop jnp dec pop gs or jnp and adc jmp jne mov sahf imul and adc pop mov je in inc popf out xchg inc inc xchg add sub adc idivl cltd mov sub imulb scas jle shlb add stc add adc or divl jo mov or add or sahf daa in mov repz cmp mov adc jmp into sbb sub pop pushf enter lahf jb popf std push in mov cmp jns push push pop cmc xor add lods stos fdivrs push pop (bad) dec xchg dec out sub mov inc scas inc cmp (bad) sahf daa fcmovnb or and jne xlat aad jge xor sahf add and mov inc mov repnz pop push daa lret jmp (bad) mov pop jmp pop xchg (bad) and mov pop push xchg fwait mov mov cmp adc xchg jno data16 (bad) les sbb adcb adc push or add orl xchg ljmp pop ret mov add push fs mov inc out and stos xor repnz pop xchg or sbb test adc fmul fcoms call pop adc add sarb xchg loop into lret dec mull mov xchg sbb fdivl std dec mov lock mov add xchg xor (bad) push dec pop icebp inc adc cli mov imul in and outsl cmp mov call (bad) shl cli pop jl insb lret ljmp jl es add into inc push stos test and into scas loop lcall or sub fdivs mov mov mov sub outsb push fisttp dec popf sarl or pop dec arpl xor fmull dec pop mov add shrb ret or imul xchg jl js call lahf add mov or sbb sarl es loop add movsl fdiv out mov xlat adc jo movzbl popf lcall xchg ljmp movsb cmc sub inc loope cmp lret xor repz fldenv mov repnz sub sub and pop pusha and xor popf fcoms (bad) or add push add outsl inc push push sub fcoml mov pop sub outsl int cmp add mov cltd xchg dec lret (bad) xchg fsubrp shrb das mov lret xchg aas or test pop in cmpsl sub popf mov aam and xchg add int dec xchg dec lret mov mov lahf gs mov addl sub ret imul lock jno or (bad) frstor sub sub pop fldt jne sbb test test fsub testl xchg shrb mov xlat in scas pop dec push or push cmc push rcll sub mov or clc (bad) enter bound jns or lret jne gs mov add lret imul clc pop mov imul lret and in mov daa movsl push fstl fildll shrl sub repz dec adc ljmp icebp cmp inc jno popa mov pop sub sub (bad) jmp popf lcall mov mov popf in leave mov dec push and lock mov mov aas sbbl pop movsb mov lcall scas arpl adc pop es xchg aad cmc fistpl adc xchg xchg stos push cmpsl mov repz dec orb cmc mov mov arpl add out mulb movl nop imul mov or sti cmp fsubrs jo xchg (bad) cmp cmp xor pop xchg xchg cmc fisttp fistl (bad) fs jns imul (bad) fs lods outsb std xchg call les popf inc xchg stc pop mov (bad) sbb xlat mov (bad) push push or out or mov add pusha dec sub ds outsb icebp sub cmp sub push in lret ljmp sub inc sub mov (bad) daa pop sub push shrb (bad) jbe jne pushf add outsl dec jl lret mov xor push fldenv dec imul nop push and das xor clc rcrl arpl xor lods jo lahf pop aas (bad) lret lds cmpsl gs xchg push xchg je mov inc push and add xor rcrl jns imul lods mov add popf or xor adc out and fs mov and push rcrl (bad) dec test sub add daa in push (bad) popf (bad) jnp sbb xchg enter fbld or push aas mov aad or mov mov clc mov push cmp cmp std pushf sub ds mov dec or cld push mov jle jb push arpl add jnp mov icebp fldt jno mov das scas fs mov mov add test (bad) jmp sar dec dec add out imul xor mov icebp dec xor jo out imul icebp loope adc movsl and mov and ret pop imul adc or fildll sub dec mov lahf int3 (bad) mov cmpsl pop out and mov and adc shrb xor or mov ja ljmp adc mov push mov mov cmc in and cmp std enter addr16 iret jb aas fs out push scas scas sub sti enter fstps pop cmpsb imul bnd insb inc sar (bad) ds leave mov fidivl mov sub pop (bad) stc loope scas sub add mov out aaa fnstcw es les and fimull sub std in xchg xchg jmp push (bad) mov sub add gs in outsb dec je mov pop into pop xchg loop jb mov fucompp adcb inc pop jg (bad) cwtl push xchg ret sub imul xor cs imul orb dec (bad) call pop mov mov stc pop lods mov in imul pop and pop rorl ret repz sbb mov dec sbb lahf out das int3 lcall das jmp je outsb mov fildl sub lds adc adc and jg adc ljmp fdivs pop repz nop xchg pop loop xchg stos adc int3 (bad) xor or mov (bad) (bad) jmp stos aad mov inc adc rorl test push push aas imul lret cmp inc and adc out fisttpll mov in pop iret or call sti popf cli and xchg jo pop mov call inc jno or (bad) jecxz mov rcll sub sub notl and add cmp enter mov sbbl lock adc add dec popa sub mov fisttpll dec xchg inc in add fcmovu sub (bad) (bad) shrb pop push pop jecxz or sub scas test adc in incb jns inc mov test xchg jbe into scas test stos cmp mov or mov inc (bad) daa add mov sub insb sub leave ja push and jecxz inc mov sar or adc xchg xchg cltd inc outsb rolb (bad) out inc jae xchg aad dec jg out inc or ret (bad) fist adc mov jle push cmp call and fs mov popf out sub lods pop pop scas ja fyl2x or aaa aad lret inc mov loope mov push pop (bad) enter sub mov push incl pop xor add jg xor and mov dec sbb fistp or rcrb js dec call push out sub adc xchg lret insl add mov or and pop mov mov ret mov pop clc mov lock add inc xor int3 cwtl lahf int3 and add rorb jge in add in add inc nop cwtl and mov fsubrs adcb add sub mov aas mov sub in jbe sub in sub shll mov jp sbbb or fidiv movsl dec mov fisttpl es mov dec sbb testb mov and sub icebp in test or out out pop in sub aaa or leave iret lock enter xchg pop fstpl or int3 movsb mov out inc mov loop shlb and pusha add mov xchg fistp push mov xor popf sub sub (bad) dec mov inc lret lret lcall loop fwait outsl adc mov lods jb add mov scas lcall push mov (bad) push in cmpsb mov xor sahf push pop out mov in aad lcall mov (bad) mov push in mov jbe imul movsl pop inc popa ds sub jbe sub sbb sub outsl mov xor mov arpl cmp xlat mov xchg shr cmpsb (bad) fs cmpsb jae jbe pusha out xchg movsb pop dec cmp cli xor jmp mov mulb fxch mov and push inc cs fcompl loope insb sbb mov pop mov (bad) (bad) mov mov lds cmc dec lea pop mov (bad) daa cwtl mov insb out xor das or xchg jl mov jmp adc mov idivb adc repnz jle xchg jne sub sub sub cmp dec data16 out stos loope cmp xchg (bad) repnz jo outsl mov jb data16 in ficomp (bad) lcall and dec xchg and mov int3 jne cwtl cld add scas pop (bad) dec adc xor ret adc add (bad) in and (bad) or outsl sbb (bad) lods bound (bad) das cltd mov cmpsl push int3 push xchg mov mov int3 mov (bad) cmp lret test mov rorl jb pop (bad) and in mov pop add xor and test cmpsb adc in (bad) clc pop stos sub lret das pop (bad) pop and daa mov les iret out ja mov xlat sbb inc add mov out dec loope outsb fildl (bad) mov pop std or (bad) movb fisubl mov outsl rcl cmp ds or sahf xchg and test xor icebp cmp in je pop sub xchg lahf in lds adc incb mov test dec and popf cmp (bad) mulb push xchg mov or xor xor rorb mov push psllw negb push and scas (bad) (bad) iret ja sbb dec aas fs out lods test outsl in insl pop iret test hlt int cmp pusha imul dec lret aaa negl xchg mov enter jecxz or add fisubl clc mov ds mov sti repz mov jno movsl cmc mov rclb adc add jo inc or inc jle mov dec shlb xor mov mov jg mov cld mov popf fistpll sub xorb mov push push xor (bad) divb movswl fwait mov scas lret mov int cmp clc and push sub shll xchg imul (bad) dec pop sub idivb cld das xchg call stos scas rcrl dec and insb ljmp std dec stc andl add clc pop mov push push pop clc pop aam add rcrb dec or cmp pop xchg scas aaa mov out mov or inc scas and mov shrl fldt fstpt mov dec or sahf sub and repz aad imull ret mov or pop and clc xchg iret scas repnz in sbb je xchg add jb pop movb mov or loop pop jl jb mov in push repnz and lret or xor add mov sub push inc leave iret push mov es add imul or repz or fs gs or inc push push mov into aam dec cmc rcll out push outsb out dec sbb add pop (bad) rcr sbb pop insl jle sub mov sbb roll (bad) xlat fsts nop sahf repnz adc adc add jmp addr16 je adc pop lret push push jmp aaa out bound fcomps mov lock inc xchg in fmuls dec sar lds pop cli test adc push pushf pop (bad) rolb dec adc mov and cmp bound mov mov jg scas add sub lds scas test scas cmp out pop push or dec sbb rcrl rol loopne jb call (bad) rclb mov jge (bad) add cltd lods shrb mov sbb lret adc popa xchg test dec mull adc cmp pop or test xchg sub mov ror add sub sub jne addl fistp adc std xor mov cmp ficom loop xlat sub dec fcomp sarb or imulb shrl test mov pop inc add cwtl int popf rcll sbb ret mov mov (bad) cmc gs cs pusha out push push stos icebp cmp mov mov (bad) fistp xchg push pop mov mov outsl gs fidivl sbb lcall (bad) mov mov (bad) cmpsl pop cmp add cmp (bad) cmp ret adc sub out popf push xchg sarl mov imul mov push push das icebp push or sti stc push scas loopne and mov in enter xor out push aaa sar cmpsb mov dec lret dec jg (bad) mov rcl inc dec push xor xor imul xor xor or aas loop mov fildll fwait inc mov pop push lret inc out mov rorb ret inc pop xor pop rorl push and and jb stc lahf mov add stc adc scas (bad) mov xchg push sub or (bad) adc iret dec xor inc adc add repz pop std and out sub (bad) js jmp bound (bad) movsl adc and xor add (bad) ss sub adc clc pop mov add xchg adc push dec mov insl int or lods sub dec mov and sbb loop jge inc lods mov arpl and (bad) ljmp push dec and push jbe and dec repnz xlat out dec cmpsl mov jg movsb inc jo jns xor (bad) clc dec and inc push pop mul add rol xchg adc add enter fcomps sub orl rcll gs cmp ljmp adc mov imul (bad) mov jne je outsb xor repz jb xchg lods imul int3 and dec stc xchg (bad) or outsb adc sbb scas pop out fs mov out push mov add insb pop icebp bound pop jle sub out cmp scas cmpsl adc pop xchg push mov mov icebp call ret (bad) sahf push lea or inc fcompl popf lods jp mov and xchg lret adc fldcw fucomi out dec jmp (bad) or or aam jbe push arpl pop ds dec mov lods or das (bad) push cmp xchg fnstenv pop jmp fist jmp jmp leave out jg sub adc shlb sbb out sub lahf out nop mov pop mov je std adc jb out jg mov stc pop sti jmp jnp and fs inc mov movzbl mov imul adc sbb and cmp push das outsb mov sub jnp in out mov (bad) mov (bad) je loopne adc (bad) pop inc out (bad) out xchg imulb and std dec dec je sub push std das lds idivb je adc mov push cmp in (bad) mov jl jnp stc and and xchg subb lods adc das insb mov dec and int movsb stos xor jo xor sbb ret pop add lock jne out test pusha dec enter add das out jg pop fwait add imul out pusha xor or sti ss dec mov ljmp push loop into out ficompl xlat rol dec int3 cltd and mov shrb loop pop and test xor push dec call pushl mov pusha aam or popf shr scas mov (bad) mov daa cwtl mov aam adc stos icebp dec sub imul jge sar ljmp cmpsb daa dec xchg push adc push dec fs mov and test sub out mov pushf pop sub sub xor dec notb outsl and pop loop dec mov cmpb sarl cltd test shr js add stos iret mov pop gs jmp dec gs xor xchg jae scas shll adc ja pop cltd test les jno mov cmp popf inc or scas cltd je inc mov cmp xchg cmp jno pushl mov aas test mov stos sub inc add or rcr inc outsb clc xchg inc mov pop idivb push mov push (bad) cmpsb out into and inc adc inc dec sub adc popa fldl xlat jns test dec lods std mov shrl cli mov adc jae sbb adc xchg jb or hlt sbb add jo push inc mov add or (bad) aam jb mov mov cmp push xchg popa lret (bad) or mov dec xor jmp gs in xlat sub call vcvtsi2sdl adc in (bad) ja notb mov and into pop lret das (bad) or es js xchg adc popf inc and adc mov call fidiv xor dec add or cmpl or rclb inc ret cli adc and mov jg movsl fidivr cmc cmp cltd (bad) add or jbe dec sarb cmpsl (bad) adc jmp pop fsubrs stos insl (bad) leave and pop jne inc test bswap dec dec iret pop sub sub sub int3 xor pop cmp divl jmp add mov fbstp and mov mov sub rorl mov adc sbb popa sahf outsb push enter out ds bound and xchg rcr dec push adc loope out sub sti dec stos and (bad) jle jbe clc cmp xlat repz mov (bad) pop dec dec das add mov sar popa or frstor or mov loop pop fiadd roll xchg mov daa or dec pop dec sbb repz pop or addr16 leave lret sub and ret push in xor or pusha jne or ds mov out xor and ljmp sub popa xchg rcl mov cmpb (bad) scas sub sub test shl jmp mov (bad) lret aad xor imul shlb repz out jp lret pop cmpsl (bad) dec cli push popf sbb movsl stos je dec adc fbstp jmp push dec stos fcoml negb daa pop inc outsl jb sub call mov loopne mov add xor xor jne out movsb stos cmpsl fidiv push lret outsb pop lahf out dec sub aaa pop cld cld js sub add and stc adc nop mov add adc arpl movb push jp sbb out in jecxz out pop push mov or jmp lds shrl dec out scas sub (bad) popa fistpll mov sbb fcomip push daa add dec xor xlat cmp and jmp pop (bad) and adc mov xchg movsb in (bad) jg aam push into jp mov das mov push cmpsl aas cmp xchg (bad) xchg push sbb (bad) out mov test (bad) and into inc lret adc mov int3 cli notl sarl jns imul xchg in inc daa testb lret dec clc inc pop pop push inc repz inc scas les or bnd push rorb inc (bad) ljmp divl jno incl mov xor jnp adc mov imul dec lds pop aad mov lret mov div aam (bad) and sub add (bad) outsb orl fiaddl jl push dec (bad) std mov xchg sbbl cmc movsl es in pop sar rcl jne xchg test loop fistp rcl cwtl gs les adc sub add push adc out leave lds ljmp jo mov jae xor rclb mov xchg mov (bad) out in xor xlat mov jle (bad) fmuls inc add mov or test inc dec fildll stos mov cmp add and mov stc sub sub xor enter cwtl int stc (bad) outsl cmpsb jmp inc pop data16 fs mov add inc sbb inc push iret add dec push mov cmp jae in adc and daa divl pop idivb jg les aam pop subb enter cmp mov add jb,pn xor jg add xor cld mov pop pushf add cmp push daa jnp (bad) mov dec das dec divl pop xchg stos sbb pop cmp ljmp mov jns xchg leave addr16 xor outsl rcr idivb (bad) cmc shrb xor lret mov sub mov mov ret sbb sbb shrb mov push pushf dec cltd faddp icebp scas call imul dec cld aam lret sub (bad) out xchg sub (bad) xor or pop and and mov or add sti jb negl daa lock and add pop in pop jbe sbb sti pop imulb jmp fistpll in (bad) adc xchg popf sbb shrl dec stc int scas adc jmp add add (bad) xor pushl cmp push fisubr rcll pop add sub daa repz out dec fistl push mov flds and sti es aaa add xor jmp cltd fildll aad bound repz xchg je data16 mov xchg cld dec jo or and stc aam fs scas push sub sub sub (bad) push cli insl pop out dec icebp out xchg pop loope shll jo add mov icebp mov inc cld adc add call mov (bad) negb jmp fsts jmp fnsave dec movsl mov fmul add pop pushf std add sub cmp movb lods insb sbb ljmp add rcrb in push sbbb lods loop pop xor (bad) pop clc das in negb stc sub mov daa fdivrs sub ds ds movsl mov adc add pop clc shll cli js push daa imul xor mov mov xor adc out lock add aam scas bound (bad) mov dec inc fistpll cmp push xlat in jp aam imul jle scas lods icebp mov in mov outsl out and add push push pop push mov lock mov xlat ds pop cmp dec push xchg pop mov icebp push adc xchg add jg rolb inc pop pop mov enter jmp push push push pop pop cwtl loopne call pushf fildll cmp push pop mov pop out or add push lcall aad adcb xor test mov ror popa or sbb mov shr add mov mov int3 sub pop push sbb mov jg test or sarb bound out and repz std out jg rclb rorb pop shlb (bad) incl dec neg shr push mov and pop ret js inc adc xor iret clc shr sar cmp push mull add cmc test and aas lar jg inc dec cmp decb test add pop shl and add (bad) fidiv negl mov mov into leave shrl push adc sub sbb push mov shr add int3 out leave loop mov sub inc lea and ljmp add lods cmpsb pop lock push scas loop add shlb and inc nop add jmp pop push mov push enter push sbb (bad) sti push lret add (bad) fdivrs mov fildl xor pop scas jnp (bad) sbb inc test pop push hlt inc ljmp push push (bad) xchg je sub lret stc jg insb add pop testl rol sub movsb or inc xchg mov mov inc negb xchg cmc adc sub outsb andl jbe inc mov and in es js neg push or pop call nop add mov repnz xlat mov imul inc cld popf stc jae (bad) mov idivl imul loopne push push pop lret out int3 jmp std repz cwtl lods add adc pop dec jmp jge push loop inc outsl mov int3 mov cmp mov loop mov pop mov push fs inc (bad) and or push jb pushf sub jmp in and mov push dec xchg mov and cmp aam stc out dec jg mov lea xor mov loop sarb pop adc xlat lahf jo dec lds in stc mov data16 or or sub jmp lcall cvtps2pi ss (bad) jo inc push es pop dec popa sub push or lret cmp and pop insb daa and mov dec pop add mov pop clc rol mov out pop (bad) insl out push adcb xor in mov fdivrs or rorb mov lds sarb sub js dec sti cld repnz mov (bad) xor repnz pop into mov fimul (bad) (bad) pop fisubr outsl loope sub call jl insb dec add pop (bad) sbb mov mov jp les sbb repz iret pushl je rol rclb jmp call and pop xor sub mov int outsb mov dec iret out xor pop cs push cmp ret adc add cwtl dec ret pop mov iret fnsave bound mov imul mov fisub push mov mov pop daa sub (bad) cmp lahf xor fwait push dec jo push dec mov mov xor cmc cmp cmp cli jbe pushf enter pop jg inc loop fcomi scas aas add jge lods lds clc ljmp push pushf int3 jo mov mov in jmp jg pop out jecxz inc mov jb mov shrl jmp out add out in lods insl mov jg adc stc sub mov idiv cltd fidivr sub sub sub xor ret mov inc xchg divl sarl enter (bad) rcll stos in adc pushf xchg push xor xchg ret or lahf inc mov aam roll popf out dec jmp add add hlt les jmp add js js dec (bad) mov icebp popf mov rcl mov rorl jmp lcall inc loop inc imul lahf adc adc or notb out mov push jecxz cmp or ljmp push mov xchg cli int push mov out mov in sub push (bad) outsl test pop (bad) lcall add mov sub adc cmp inc add lds iret scas ja fs mov out xchg mov sub add jmp loope jp fidivrl sbb shl sub pushl cld rcll xor mov lret sub lret dec jge xchg adc xchg jne xchg xchg cli jmp out out je ljmp pop in and outsl xlat cmp push (bad) das pop xor push xor xor push (bad) fcmovnbe insb lret inc leave push add adc lods popf pop popf sbb imulb mov mov into dec pop mov sahf popf jl bound mov int3 push push inc sub aad cmp or adc clc push mov pushf nopl or gs and and jmp and sub sub shrb test cld imul imul dec sub cmp repz add js xor jmp sub pop ret cmp sti pop leave lods sub mov sub fistp sub out js push or and call pop adc and xchg roll loopne repz test fnsave (bad) je sub jo,pt or scas mov fildll inc in test test movsl mov out jae and and pop mov cmc xchg xchg or ljmp xor ja dec jl mov aas negl cli sub mov pop inc pop jne mov (bad) sbb lods movsb stos sarb lcall dec mov loope mov fldl adc dec subb push pop testl aas dec dec faddl cmpsl jp pop imul pop out sub repnz adc sub mov pop xor push out std ret push xchg mov jge into fwait cwtl sub lahf jle ret mov rorb hlt pop push push test sbbb push test test scas leave and jno push xor sbb (bad) ljmp ds stos and dec repnz push mov xlat mov xchg clc jg xor aaa cmp sbb jbe pop inc dec aaa (bad) out push lods imul ja into in inc xchg dec xchg (bad) mov adc scas je push mov or mov enter sub in rolb (bad) repz push sub mov xchg scas (bad) shlb loop (bad) call mov inc and cmp pusha lret sti mov sub jae sbb repnz pop loop dec cmpsb rorl add jns pop fistpll adc pop add and dec inc scas inc fs xchg jne mov push call adc adc push fs test sub dec push jmp ljmp out icebp mov insl imulb clc cmp dec push bound mov cmc xor sbb xor lahf ficomp rorb sub pop mov mov sbb ds jle in xor ja out xchg sti (bad) sbb jbe mov mov in pop daa ja adc mov scas xlat xor add ret jecxz mov mov pop sub bound jmp pop mov sub mov push cltd daa or cmp imul pop cmp and in ret sti mov je sahf inc or lods pop push sub pop push iret sub dec fistl aam mov sti sub or and cmpsb sti ret test popf jns int jmp mov pop cs jmp fs daa push xlat cltd test push inc idiv jns gs scas mov test (bad) imul mov push popf fildl lcall sub or flds jg scas add jne int scas les xor notb ret lahf sub loop icebp pop push imul repz mov pop stos mov iret repz or and pop or scas mov jmp bound add int xlat test or add jecxz xchg out push (bad) add add fistp jge and idivl int3 inc mov (bad) insb pop or cmpsb lahf lahf pop add pop out sub pop sahf rol and jnp (bad) and pop lret cmpb cmp test dec xchg lods inc xchg mov cmp or incl jmp mov cmp sbb xchg xor xor or shr mov push sub cs (bad) dec std inc sub jge mov jmp repnz mov mov mov xor mov cld (bad) mov out xchg add push xchg xor or jge or out sub popf test xor mov shr adc xchg mov mov jg mov mov icebp fisttpll (bad) stos daa add data16 push xor lret mov or sub or ret pop inc and rep popf mov out add jl xlat test les mov and jle jo mov jb les xor notb xlat ss push test mov aad fwait mov ja out lods mov cmc sub cmp fisub repnz daa in adc shrb lret dec (bad) xchg stos dec into mov (bad) fsubrs mov pop (bad) bnd clc ret pop mov adc jmp xchg loop fwait outsb xchg stc jbe (bad) mov xor mov xchg mov leave je in jmp shrb add or leave push pop xchg fstps or frstor test adc cmp cli push mov ljmp inc sarb sub (bad) fild ret cs ja jmp pop add ljmp or jne jl mov adc xor (bad) add stos mov jmp pop pop dec sahf test fidivrl and jmp repnz movsb cli cwtl cs inc mov cmp lds fmul sbb scas lret inc jle sub push sub mov jbe dec xchg leave inc cmp dec sub pop fistp or and mov test push fxch or ja jge xchg lods and inc lock mov stos sbb int cli adc ljmp lods into fstpl sbb stc push lretw or out mov leave push negl jp fldenv xor inc inc xor sbb mov mov mov decb jl leave bound sar mull cmp insb pop pop sub (bad) mov stos xlat sbb idiv mov jnp mov sub mov gs mov lock fucom jle ret les (bad) mov jl into pop mov fcmovb (bad) mov je std push mov dec out daa jge fwait test dec sarb ret jmp test adc pop (bad) xchg push jge lret mov sub add push cs es pop or pop stos (bad) fidivr repz xor mov aam xor fbld add pop cltd cmc xlat jp ret fisubl imull mov lret inc xor push imulb rorl lret or dec (bad) stos add fucomi or pop push push stc mov jge or fiaddl add pop cmc xchg mov jmp insb cmpsb popf cmp mov (bad) cmpsl xchg push scas push xor ss pop stos push xchg xchg loop imul cli jle cmp and mov xor sar cmp xor ret mov andl movsb add cmpsl dec cmpsl popf cmp sub xchg jns mov cmp lods iret dec or stc add jmp mov rorb inc mov xchg cwtl in xor jecxz adc lret scas mov or int3 mov mov add into push push sub fs or (bad) rcll outsl ret dec rcrl pop out dec out fs pop and repnz push loop icebp mov adc cli data16 out mov add mulb jl dec pop les push fnop cli pop jae add sub fnstenv movsl or repnz clc inc xlat call mov lret repz int3 (bad) nop fisub pop or dec push pop fucomp je scas jl pop sti ss add mov dec pushf and and mov cs test sub push fldz int3 and jne shlb mov dec fucomip dec je mov adc xor push cs dec inc imul dec lret lret adc xor jecxz add adc and mov or leave (bad) insl rclb hlt das cmpsb sub loop (bad) sbb or add sbb outsl mov nop fcomps push mov pop mov push je pop pop sahf sub xchg clc push add rclb rol pop sti (bad) jmp (bad) lret push into jb bnd add add jle and js mov (bad) mov (bad) scas loopew push out decl scas mov fisubrl scas push imul mov mov movb xor popa stc pop outsl lods cmp loop test and dec imul jno gs dec pop jp clc dec xor push and sbb mov leave mov and xchg (bad) loope sub mov mov mov fwait cmpl xor lret call test shrl cmp loop sub mov (bad) sub fsubl in into and add ficomp fcompl mov xor out xor ljmp aam adc jae mov outsl or out xlat out fs pushf or (bad) pop stos sub ret inc mov xchg jae decl add adc out je sub and jmp jmp test rclb sbb adc pop stc stos test sub jge and mov arpl push mov in popf push pushf das nop sub add (bad) xchg stc pop dec loop and xchg or xor sti push aam inc insb adc mov mov scas gs xchg sub xlat sub sub ds popa (bad) or pop test dec bound shrl roll xor dec int daa xchg dec lahf xchg dec cmp das push and xchg out adc xor bound daa std mov fsts lret xlat mov enter or imul insb mov loope xor pop leave push pushf cmpsl loope fisubr fdiv divb stos iret in sti fstpl inc mov fisttp mov add cltd insb std out cmp daa and inc mov xor fbld repnz hlt sbb das iret std mov jno xchg sub dec dec (bad) mov mov bound sub movsl repnz (bad) xor roll js pop out mov fist stos xor icebp movsl pop jno push xchg out mov lret (bad) pop xchg arpl adc popf cmpsl (bad) push jnp xchg mov jnp mov rolb xor cmp outsl fstl inc and or rcl popa sub mov loopne ljmp push ret mov xchg int es sub xchg jbe gs mov dec and imul cmp mov lock cmp ja pushf je fs xor mov jmp and mov jg insb idivl cmpsl shlb (bad) jo pop pop cmc cmpsl jg xor insl aas pop mov mov mov bsf shr pop fwait dec pop std add pop ret in push bound fldt and sbb push fild es enter and ss mov das ret inc stos stos and das je ljmp jbe jbe adc and mov rclb xchg fisttpl movsl jg push inc imul add int jg rolb das mov testb inc mov sub (bad) repz sub pop fiaddl mov imul dec cmp dec ret add (bad) sub or jl imul sarb incl jne iret pop out and or stos sub push xor pop jae xchg lods js jl aad xchg out sub xor dec push scas (bad) dec jp push pop pop sub cmp int3 jbe scas sbb sub cmp insl push addr16 xor push fistp lcall jl dec shl shrb pushl mov sbb ret push push les add lret std imul pusha xor in ficompl dec mov pop sbbl dec mov sub xlat push imul or sbb lret push cmc gs pusha mov pop mov jge and push adc ljmp cmc mul and add cld lret pop push cmc gs xor adc dec ljmp mov xor cmc lret jne pop push loopne mov jl push xor data16 jle (bad) fmuls mov or xchg push jecxz add or ja leave (bad) jne add push mov (bad) sub xor cmp fmuls daa or add test ret out imull inc mov jae popf inc pop push repz sub add mov and aaa sub mov sbb imul jbe loopne adc and push insb xor pop nop imul pop add jecxz xchg push fisubr out xor ljmp in bound cmp jae dec jl lret jge jno data16 scas sub mull icebp negl dec adc jno bound adc jmp sbb (bad) loope pop clc pushf mov ret add sub mov test icebp cmp inc xchg (bad) rclb (bad) inc icebp sahf (bad) xor test fsubrl rcrl xchg add xlat stc pop xchg (bad) mov inc std pop in jbe scas lret xchg pop fbld enter pop cwtl das xorb lds bnd ja fcomps dec fldl xor je dec push adc sub and test fmuls add adc adc out call aas jmp mov xchg pushf mov cmpsl mov in adc fbld aaa gs sub mov pop push test sub sub jle (bad) (bad) lret mov ret pop xchg gs mov mull push (bad) cli jecxz jp pop lret (bad) (bad) les sub std cmp add movsl hlt cmp dec cmp and mov pop push or dec and ljmp xchg (bad) mov adc push enter test and mov dec xlat in dec pop or mov and sub mov idivb lods sbb leave xor mov popf dec push xchg mov mov xchg cmpps adc (bad) out pop mov pop notl lods xor fistpll lahf mov or out dec lcall jg inc mov sub repnz daa and rclb mov xlat dec xchg (bad) mov shrb or imulb or daa sub loop push and shlb xlat insb ds (bad) lret mov jmp jns lods jecxz sub xchg push lods sub iret hlt xchg (bad) jmp push shrl or scas pushf and and push insb les fs xchg aam pop pop mov xor icebp pop ja add repnz dec xchg loope pop repz (bad) xor mov lret lret and add cld lret cli pusha pop pop loopne sbb sub or rcrl add imul ret dec add mov mov cmpsl or repz incb xchg data16 mov add loop xchg push xlat ret fstpl or adc xorl mov icebp jg and outsb mov pop movsb push loop mov xchg mov fldt pop mov jge,pt adc or in cmp pushf inc adc mov add imul mov jo ret out lea sti pop (bad) and pop dec cld das ret sbb or jnp popf je imul in jmp cmp and sbb push cmc in cmpsl test repz fisttp lods iret ret out ret outsb in loop sub mov ds jecxz sub sub inc cs icebp popa shlb or lods push (bad) incb xor iret ret jae xchg out popf imul shr into adc (bad) repz dec pop das mov shr xchg imul xchg sar mov dec insb push mov push pop cltd lahf imulb mov xchg add out inc push or mov cmp mov pop mov sub cmpsb add add or jge fs inc imul dec std test adc sub adc sub divb (bad) jecxz adc sub outsl sub les and add jmp insl jl icebp jecxz xchg cmpsl ds test mov mov or push sub jl xchg pop sub sub ja or cmp fdivp stos pop xor mov jo sbb in arpl rorl cli dec inc dec es cmpsb inc sbb imul mov fmuls add dec scas cmpsb or or mov xchg fs mov fnstenv mov pop in mov sub adc xchg scas int sub cmp adc mov cmp mov jmp inc sub mull dec xchg sbb xchg imul sub xchg test out into sub push out sub outsb sub out and std mov loope shr ret shr sbb xor out pop test (bad) mov cmpsb jg icebp stc mov add adc (bad) and push insb xchg mov andl dec mov mov xchg dec imull fld inc or (bad) and je (bad) sub sbb jp mov cmpl leave mov add int adc mov xchg cld and sub int pushf add inc or mov ffreep imul js push xchg dec pushf and xor xchg lds mov stos mov jmp shrl dec nop les inc xor lods imul ret sub out pusha in sub cmp cli mov dec cld scas pop mov and xchg jo xchg insb iret xchg inc sub jl pop pop mov add inc mov lahf rorl jb outsl repz jmp mov fild outsl and or sbb jg mov stc adc mov xchg cmp push out add decb mov stos mov add jg sbb ret jg and (bad) xor into add cmp fdivl cmp cld scas arpl lcall or dec fldenv call sahf sbb loope dec xchg jae cmpsl jl imul xchg ja add and rorl cmp add and xor mov mov or lret xor insb ja iret int cmp add and call das (bad) sbb sub push add (bad) das std push rorl xor sub or mov bound xlat xlat mov loop add movsl in pop jns dec stos (bad) imulb out push pop add xchg lret xor ds pavgb mov enter sub ja pop adc jecxz test and ds xchg (bad) mov jo pop fst cmp imul arpl add stc lret test add adc xor dec popf jge in popf (bad) mov push (bad) fmul dec rcll imull add pop repnz sub cs scas inc add fcomip xor out rcll movl shr jne ljmp sub mov (bad) xor mov sarl out pop les test jae out mov dec pusha inc fisttpl or and xchg add cld adc out dec mov addb xor jmp xor sub mov cmc and xchg or rcrb jg mov lahf sub scas lret lret jg rcr test cs add sub pop xor pop cmp stos sti movsb sub cmp (bad) pop sbb mov mov xor dec loop (bad) xchg push pop mov daa jno bound mov mov xabort dec adc jnp cld sub dec and jmp add dec (bad) jne sti lret out pop stos push mov or sub and pop lea scas sbb stc sahf add push test sbb rclb ret rep mov fidiv int sbb mov mov popf pop sub mov aas xchg mov outsb frstor mov test (bad) mov and cs and test out xor (bad) jo data16 inc jecxz in rcll sub pop int3 inc and xor pop add fs adc or or pop ljmp inc leave out stc fcompl fdivl sub les pop call (bad) pushf pop add mov in xor push shrl push imul dec stos mov add lea sub push pop or pop inc scas rcr lret pushf dec mov popf rol outsl subb fbstp cltd (bad) and scas pop xchg dec mov pusha adc jl sub lods (bad) sti jne push fucomip popf fwait movsl sbb push adc imul xor mov pop stos mov rcrb mov cs and mov fs jne adcl std repnz pop ljmp dec repz pop xchg xor or dec addr16 es divl xor add push cmp fisubl xchg js dec ljmp pop jae and sbb data16 jmp cli inc mov push arpl xchg fstl or mov insl add popf push cwtl push mov adc out daa jge mov sub dec xor dec sbb mov mov push pop lds shll xor icebp and and ds add scas and cwtl rcll popa push ds daa call ret or nop xchg inc mov sbb inc dec ds sub popa sub sub hlt push ret popf (bad) push push cltd sbb movsl sub sarb mov fldl pop cmp repz jmp hlt pop imul xlat add cmp xchg and and add inc in sub xchg or dec add mov cmp sub std outsb test add (bad) push jmp je add popf pop sub rep sbb mov int3 jbe pop adc push jns and mov sbb loope inc jmp push inc lret cltd mov xor enter and sub std rolb (bad) mov (bad) int3 rcrl pop test pop mov in (bad) (bad) mov sbb xchg jno out and xor ret fstpl sbb dec icebp jmp jmp std adc lahf push ficom gs cmpsl push xchg (bad) dec out mov and (bad) aas pop popa call icebp gs cmp test dec sub xor adc (bad) fs stos fs mov mov xchg loope clc push popf cld test (bad) out lahf jnp adc inc daa pushl arpl sarl inc fs add sub mov cld xchg mov pop mov jmp test (bad) (bad) fstps fdivrl out ljmp pop outsl test loop fbld (bad) mov xchg xor fisttp jbe arpl adc sub fisttpl lods push add mov dec inc pop push jp and call (bad) divb adc cld and xchg cmpb out lret movsl repz ljmp jle mov (bad) dec mov in out sub cmp mov pop adc test fabs xor das cld push mov mov ret fs jne push xchg stos add ss daa pop push jecxz hlt rcrl xchg (bad) (bad) lock sub out in jmp push inc push (bad) push inc xchg sub and mov sbb inc (bad) mov mov xor and mov (bad) out xchg enter pop adcb lret mov xor pop push (bad) mov stos xchg push popf les mov shlb xor (bad) (bad) sub je shr adc xchg rol cmp cmpsb sbb jae daa adc add mov mov out adc orl clc (bad) or idivl outsb sub (bad) xchg dec push dec pop aas lods imulb out in or rcll push popa hlt out dec xor jmp jle dec sarb ret sub push fnstsw sub push adc mov aaa fdivrl rorb int jnp mov inc sub xor mov and dec pop lret jno imulb fs les mov or adc jmp cwtl imul shrd mov into and inc xor in aam int jp (bad) or add loope call mov jb adc mov pop outsb dec xchg fldl loop fbld das adc mov jp mov jle push bnd out lret jbe mov negb mov xchg mov stos sar pop mov repz adc (bad) mov js je cmp jne dec dec ret mov push sub xchg dec icebp mov insl xchg (bad) xor ja (bad) mov dec mov xchg xor negb sub sub rcll inc aam imul sbb hlt leave mov in push (bad) in fsubs sub jmp lcall dec je xor pop cmp mov xlat lods jp int jg jns mov loopne imulb sbb jnp cmpsb mov push cmp int3 cmp int3 xor dec sbb add int jle sbb fsubs mov mov or jecxz daa xor and push dec or mov sbb aad scas loop xchg jmp rcr dec xlat dec cmc mov call (bad) mov aas call popa daa lea adcl mov fs daa adcb in les js mov lock lahf int3 jge and sarl push and out bound jbe iret sarb dec je and and pop xchg mov pusha (bad) fdivrp into sarb sub xor mov fisubrl sub pop mov or and sub mov fdiv mov call mov rorb arpl mov popf push pop je out and cmp fcmovu in add (bad) mov push (bad) xor ret stc dec rcll repz shrl or jb mov xor dec jbe mov adc and hlt push pusha mov je das mov ljmp shl mov out sub cmp xor push xor xlat decb in out stc pop stc fnstcw fmul ljmp adc insb dec lahf inc jne xor (bad) fidivr int3 xlat push out fnstenv fsubrs aam fwait lahf loope xor cs mov pop lods leave rclb out mov gs jl or je or stc in sub xor call inc outsl mov rep jl neg xlat out enter xor xchg or cmp movsb xchg sti test or sub pop orl or sarb es cmp add fstps (bad) push pop rcrl je insb mov add (bad) xor call xchg out sub jb or or cmp dec mov jbe mov lret mov xor les sub fcoms dec loop cmp fdivrl push repz pop lods dec mov negb leave aas jne mov dec fistp das clc pop adc and icebp inc dec ljmp mov xor inc inc push inc xchg scas or (bad) xlat push mov pop test mov xchg out (bad) out add jmp cmp sub xor mov aaa push movsl sarb push fistpll cs xor or pop add jl dec cltd sti xchg add gs push dec fs mov dec flds sbb add sbb add loope fstp das xchg pop cli mov push adc cli ds pop out cltd push cli fsts test mov sahf push mov xchg (bad) test aas icebp pop inc (bad) or mov aad aam pop mov pop mov arpl js xor cmp and in dec adc (bad) (bad) mov or pop mov jmp (bad) xchg idiv xchg (bad) push mov test sub push lea clc mov pop jle jmp sub or sub xchg dec stos fcoms mov push aam and and and incb xor or lock daa mov imul (bad) mov push push cmp loope loopne add adc lret mov stos mov mov mov sub stc xor jmp test mov (bad) pushl insl into xor inc cltd push push sbb scas xchg stos fmulp sub and test adc fwait daa cmpsb cmp adc sub sub shrl rol push inc pop inc mov dec and adc scas repnz repz fcomps cld sub lret call nop fwait mov insb pop fsubrs or or push adc xchg xlat lcall or pushf sub aam fs mov or (bad) mov rcrb push fdivl out mov mov aad mov out (bad) repnz or sub cmp add dec mov pop jp cld add adc (bad) int sub out adc loope imulb clc lods xchg mov lods mov sub lahf push push repnz mov out lret mov jge test and pop or and mov push das rcrl jmp mov xor or push cs int3 dec push sbb cmp mov (bad) ffree or or lret aad lods ret testb rcrb lds out push lcall add out mov pop fdivl js mov or dec mov pop or out es jp lret popf xor in push leave enter stc mov stos fsubs xor out mov push or into scas mov movsb les mov cs sbb negl repnz jecxz dec mov popf scas ss mov xchg mov dec leave test or pushf outsb leave ss xor pop movsl push add mov daa or xor cmp jecxz sub jge xchg push push push (bad) ds fdivs or dec lret mul stc hlt enter imul (bad) (bad) xchg hlt and aas sub vshufps shrb in mov lods jecxz pop rcl sub sub xor cmc fldcw loop incl jne sbbb jne scas lods push iret xor mov sub (bad) dec sub xchg and and inc in inc rolb add jmp sbb pop hlt imul pushf loopne jmp adc out cmc xchg cli jo popf adc (bad) cs into in add fs sub ret pop gs adc push mov in ljmp xchg stos mov cs jb xchg pusha dec stc scas shr int3 dec add iret sub push sbb (bad) adc cld xor sahf push enter stos and sub pop mov mov dec je sti aam stos lret or out pop ret sahf pop test cld xchg andl and out bound mov pushf cmpsl (bad) lds jmp and ret fcmovbe pop stc clc insl out mov lds and cmp (bad) and mov (bad) in mov or fild jno add xlat mov dec xchg in mov add bound sbb jae ror dec fstpl insb or lds fincstp lcall and mov out adc add leave pop push xor push fs xchg or stos into roll mov pop adc pop in vaddsubps inc rorb lea xchg xchg aaa dec adc outsl cltd xor out adc lock outsl out shlb sub fidiv mov sub lea fistpll mov sub or mov loop ds (bad) cmc dec cmc sbb dec out test out dec dec push sub mov jns inc sbb adc movsl lods aam pop push pop jns or ljmp inc xchg cli jne stos (bad) and pop fwait outsl pop xchg mov sub mov jns mov jp jbe out aam xchg in dec sub jno gs jno mov das (bad) xor or sub cmc mov adc lahf (bad) adc xor and and movb in mov or xchg pop cwtl (bad) roll dec lret iret int3 (bad) (bad) mov imul dec mov add jnp pop (bad) cli sub pop cli (bad) (bad) and in dec xorl mov subl addr16 jns xchg repnz mov (bad) dec dec cmp cwtl iret out xchg gs addl jge dec cltd repz fiadd repz imul fnstcw fs and or mov cmc xchg mov call mov das call (bad) xor stos jp lock lahf pop lcall ljmp das adc test pushf mov or (bad) mov add push notl jns pop out sub and cmp jg jg push das inc mov or iret jle into mov push aas push jg jmp fdiv cltd pop int3 into mov dec cmpsb inc sbb mov sub xchg cmpsl push adc into outsb in jecxz aaa cli leave aad outsl xor add pop pop je push fnsave sub movsl jmp sbb jnp pop fidivr pop add and jge xor sub (bad) mov mov adc dec mov jae or adc popf jbe out gs cmp and push (bad) in repnz push xchg and out sub pop sub lds adc jne push push mov and add inc ficoml jnp movsb int3 outsl or xlat xor (bad) jmp ficoml add fnsave (bad) sbb shrl rcrl fnop add lahf add leave test lret movsl inc cmp mov jbe (bad) call and aam test mov or call jbe out loope xor or shll test dec add pushf dec mov das (bad) jl daa jge cmp mov or (bad) sub or push push xor out inc push and das sarb out loop aad add ja cmpsb insl ja jl and jne ret push div les int aas lods jns stos adc aaa cmpsl test (bad) mov aam ljmp cld in inc sbb pop out dec fistp fsts idivl dec lods push nop adc fs out fnsave dec adc aaa jp pop movsl ss jns (bad) pop aas jle push inc xor cltd jo pop stc adc (bad) repnz divb daa push and iret insb or add mov les loope sub fs mov or (bad) popf jg push hlt daa test mov inc fs cltd adc push sbb pop push push push daa hlt adc mov cmpsl pop add ss sub sbb dec inc adc mov pop lock xchg movsb insl bound sbb loope lcall faddl jo ljmp pop and xor ret dec lds scas addr16 push addr16 add addr16 or jg mov sub jns mov jl rorl nop add xor mov jae adc adc add xor sub cmpsl data16 and out jne mov pop mov daa pop neg dec mov xor mov icebp mov lods push jnp icebp xchg mov mov sti ljmp push add call jecxz dec stc addl jp nop xlat stc cmp fs fsubs xor pop xchg aad jmp sub mov das push scas leave ret sti jmp mov adc pop xchg sub in mov dec mov jecxz xorb popf les xor jne mov jnp xchg mov adc imul push or jmp pop and sbb or sahf sti insb xchg rep les out adc cmpsb jnp lret xchg jmp daa notl sti test rcrl lret or ds pop mov mov ds mov push les ret rol push lret inc pop mov dec sbb adc mov sti jecxz xchg stos mov scas pop loop lods clc andb out js insb shrl sbb push push mov push test (bad) cli movsl call pop pushf mov and xor in mov cld mov stos pop mov push mov or clc dec cmc scas (bad) hlt sbb (bad) mov cmp xor xchg mov out cmp test xchg cmpsl mov out xchg stos test push pop out cs or mov adc mov dec mov push ret push mov flds adc leave inc cmpsl std hlt test (bad) fdivrs mov inc rolb leave and xchg sarl push dec out or pop push fsubrs mov mov jle push and add jecxz rcrl loop xchg pop cmpl push sub or jae ljmp bound ljmp movsb mov xor pop adc mov aam divl cltd fist dec in in out or mov push scas inc sub jge das imul dec into aas dec scas lret cmp sti int3 (bad) adc push pop popf push (bad) jo mov or inc cmp inc fidivl ret pop iret xor stos repnz xchg or push insb loop out inc out popf gs into or bsf cli lret xchg imul xor jle pop ja leave fbstp push (bad) inc and cmp out xchg xchg rcrl pop out sub jne jmp or rorb sbb or ret push push inc cs dec and ret and add fmuls inc or mov lahf or dec sbb popa loopne add icebp js mov adc cli lods daa mov mov jecxz jmp jbe (bad) mov cwtl sar shrb dec cli test out test in jne je push push (bad) pop (bad) xlat call hlt xchg pop pop lret inc adc and (bad) sub jg mov mov stc add xor imul mov inc pop or ljmp push (bad) dec jmp addr16 (bad) and mov mov mov add mov out sub dec cmp insl push into roll dec jnp push mov aas push jmp mov mov mov adc lret shrl pop add sub ficompl out jae xchg cld aaa in loop inc mov das jg icebp loope pop in jns loop das or push jae cmp sbb inc and sti ss dec test pop xchg jmp pop xchg inc addr16 jne stc dec fimul jl (bad) pop int movsb lock jge imul data16 jbe and pop into xchg and dec pop lods and dec pop xchg shll add mov jmp push cs lret fist into fdiv sub mov xor push push sub lods icebp and pop in cmpsb xchg out sub push lds shr mov dec mov xor mov out call in scas pop inc ret xor sbb daa in sbb das ljmp add add xchg mov jno or xchg lcall mov ret mov clc iret pop (bad) mov enter push mov clc popa mov xchg pop and dec or int outsb mov ljmp scas push fs or sub pop inc mov dec inc push jmp sbb popf dec scas cmp and xor pop and jae adc cld shll xor jle pop ret jne scas int3 jp xchg scas imul cmp push adc add mov pop jno dec jbe fs jp pusha pop add das xor (bad) sti xchg inc xor popa push fs movsb xchg mov push lret pop cmpb pop and int3 into out mov in xchg and add mov popf push mov je push js hlt mov sub push add arpl jno pop lret and mov sub or fdivrs dec (bad) (bad) fnstsw cmp add pop adc and idivb jbe (bad) xor ljmp sub mov ret jl and add jbe inc imull or scas xor (bad) add xor (bad) xlat mov xor and daa add jecxz mov dec (bad) icebp fidivrl lcall das xchg mov les mov decb add jge je mov push inc xor mov pop and into lods fwait and daa leave test clc sub rorl (bad) sub test xchg outsl dec add sbb iret mov and or jns xchg fcomip dec push out or fidiv sbb add lock add mov mov sub mull cli jge mov cmp and lds sbb mov out inc jmp int3 mov push or push in or leave xor cmpsb pop sarb adc sub jno inc aaa adc stos cmp lret xchg mov sub into mov jnp sbb std jnp movsb jns movl inc dec mov (bad) stos xchg iret cmpsl mov jno and mov mov out adc lcall lea adcb (bad) lret xor repz sub mov mov sar cmc sub inc cmp fist dec ret cld xchg loop stos push sbb rclb or shr inc add mov jnp mov xor sti push dec ja pop dec push aas test cmpsl (bad) add pop out mov pop setne or aad push jne xor fnstcw lret daa xlat fstps cmp inc and xchg pop mov mov aas cmp dec ret and and es jmp clc xor and cmpsl cli mov (bad) test xlat rorl rorb mov or lret ljmp sub mov jb fs sub iret test jo enter sub loope push outsb test jmp cli cmp push add dec fs lods popa movsb (bad) int3 fs add sbb push push (bad) sub dec push cmpsb and ja fistpll into add mov jge or inc int pop mov sbb jmp xor cltd add mov ret push fistpll cmpsl xor add add mov (bad) jns mov dec push jge cmp ljmp add pop pop test jns jmp loope sub out and (bad) popf fidivl (bad) (bad) push roll mov (bad) jbe add stos sub leave out inc nop popf (bad) jnp push fs or inc xchg in pop mov ret loop jle in ljmp int3 cld inc mov std mov mov ljmp cmp lods ja cmpsb cwtl jbe icebp loop shr add (bad) mov xor fisttp mov add xchg mov pop xor dec mov mov push out popf sbb mov adc hlt pop push and lods movsl call cmc mov and and push sub mov pop ret (bad) push cmp jecxz sub iret add dec leave arpl jmp js popf adc pop mov xchg xchg mov lds push fstps adc cmp fsubrl fldcw xchg jmp (bad) sub (bad) sbb sub cmp push lock jne dec cmpsl (bad) mov call mov mov loop jge sbb cmovp push sub xchg jle stc or test nop and add inc out pop cmc add mov push and bound aad outsb shrl (bad) lret inc cmp ret pushf jns sarl pop fwait iret or (bad) idivl xchg ljmp xchg or fildl xlat js jns xchg or ljmp mov fwait or push or and mov stos repnz xchg sub addr16 jge test (bad) testb in mov push call pop push (bad) add sub mov aaa push pop ljmp test cmp neg xor clc push xchg or outsb jnp movsl jge clc add sub cmp outsb ljmp cmp sub mov dec cwtl insl mov test cmpsl rclb inc lahf imul out call sub xor aas adc jmp lods sub adc int3 lcall adc pop (bad) cmp and xchg aaa cld pop mov scas push mov pop icebp ljmp aad ljmp cmp pushf jne pop (bad) mov rep scas pop (bad) mov mov mov icebp das jmp xchg sub sub xor add cmp pop mov das lods stos dec idivb mov pop inc pop ljmp mov in mov aaa daa dec adc mov lahf pop adc cmp adc (bad) insb imul pop int3 mov xchg inc cmpsl (bad) or push xchg ja mov (bad) std mov jns adc sub push ret inc add sbb and mov xor add es mov xor mov xchg cld movsb push push sbb lret dec ss xchg fdivs lret mov mov test cli (bad) dec and mov mov pop mov push and popf decb leave xlat inc and push repnz (bad) popa mov cmpsl leave clc pop xchg dec dec ret mov mov inc jl mov inc cmp je ljmp shrb push cmp (bad) negb pop sub (bad) pop in lods inc js pop cwtl arpl xor inc icebp sub ror das add pop inc xchg (bad) (bad) bound stc lods mov sbb xor loop and loopne loop call out fimul (bad) movsl cmp lods push (bad) sbb fnstenv ror push nop das inc out mov sahf dec push cltd fcmovb js (bad) xor cli into lods sub popa pop call mov call imul divb cld push xchg push dec jnp xor pushf daa push pusha cs fisubl dec inc fstps mov ljmp sbb fstl adc jmp add rcl xchg icebp pushl popf jmp pop shr sub pop pop (bad) jmp adc adc mov cld out push and jmp or (bad) lds fsts (bad) pushf movsl xor outsl push icebp inc popf push imul xor sbb or mov lret sbb pop jecxz dec mov mov (bad) shll negb sbb aad pop adc jne add mov jg pusha addb movsb push adc push movl fdivs mov jecxz lods stc movsl xchg and xchg js lock or jmp sub cld dec push mov sti int3 popf or push js jmp repnz test dec test fadds jmp mov loop adc lret outsl cmpsl js xchg and repz xor or sub cld xor repz pop test sub idivb fs cwtl jns xchg push int int3 outsl xchg in popf pop sbb stc jno dec dec clc stos jecxz xchg push xor mov (bad) or jo inc je repnz (bad) dec sti jecxz push pop (bad) lret dec out movsb dec pop ss and (bad) fsubrs out xor push test cmp pop (bad) fldenv adc xor xor repnz sarb jo or and push adc test and push push in (bad) enter mov test repnz daa aam sub jbe fwait cltd dec (bad) mov or xor lods fst stos mov fcompl dec fidivl lds ljmp fidivrl and scas ret jo lahf cmp movsl stos loope ss mov push shll push push push xchg mov (bad) lret mov popf fisttp je ficoml (bad) int3 test inc lods scas cmpsb xorl or sub enter (bad) lds push cmp sub movsb add loope pop popa sub rcrb repnz cltd inc sti js repz dec out pop mulb scas mov popa or xlat push out xor jnp mov popf rcrl cmp je inc sub inc xor adc lds pop push adc (bad) pop popa mov sub adc mov notb xor and cmp mov jb repz jge adc jnp mov das leave ret fisttpll mov push in pop jle js scas mov fildll jmp test add or or jno dec dec cmp xchg add mov jecxz andb call xchg sbb push and and cmpb or jno xlat stc mov push inc or add mov mov xchg icebp sub pop push (bad) cmc cmc stc jno das in push xlat clc pusha leave adc push xchg out and xlat or icebp mov imul daa icebp sbb push (bad) cwtl iret or xchg cld inc push aad roll leave scas add (bad) push xor into cmp adc stos mov sub ja sbb xor out mov stc mov mov mov sub cmp mov jne fildl and xor jmp insb test jb adc or insl mov out leave fstpl inc xor cld pop adc and aam push (bad) jae dec and ds (bad) pop sub out mov jecxz inc (bad) mov xor mov xor imul xchg or sub cmp mov xlat xor loopne in (bad) out or cltd fistl sbbl call out mov mov lock lahf xchg lret jl mov iret popa call test xlat mov and mov hlt and mov and fcoms xor adc dec xor pop mov inc sub loop push out sub xor sub hlt dec jnp push push mov jg inc jne loope dec jo into daa pop and movsb xchg add dec cmc jmp inc dec mov or lret les pop add pop decl adc or arpl xlat mov addr16 push mov loopne ret pushaw and test mov mov ret in xchg xor inc mov jge fcomi jnp adc and xor and xor lods and xchg mov fsts in cwtl out push add mov mov inc sarb sbb sub add pop push mov test cmp add test jnp je jle inc outsl rcrb add mov push and jl push or aas std add pop add add xor dec push mov sub jae shll cmp test sub das ja jo pop nop pop add mov add jns inc mov ja xchg nop out fmuls dec add (bad) es add mov sub jno sahf push leave data16 mov jmp mov les cli out jnp loop leave ljmp lods lock push je testl dec add clc jnp push xor jle and push iret add and push cs aam jmp ljmp xor dec in push and pop pop mov push stos in fisubl rcrl out in imul pop repnz cmp xchg shr inc (bad) fdivl mov sbb inc adc mov sti nop push add shrl inc push push cmp not jl sahf je jbe add xchg icebp xor dec ret xor jge dec jg shlb and xor sbb sbb xlat repnz pop popf testb jle pop mov not adc add jnp sub add sub xor or fnstsw das inc jo ret add call daa rcll cvtpi2ps int add and aas (bad) dec mov outsb xchg mov repz std cltd lock das pushf dec (bad) repnz mov popf loope ljmp mov inc sub loopne sbb adc pop ret dec add sub icebp jp inc xor fldlg2 push stc mov pop mov enter mov sub cmpsb mov out inc add jle (bad) cmc popa adc push (bad) (bad) jmp and (bad) dec inc or add pop roll add fsubrs mov cld (bad) js ficoml addr16 and sub fimul cwtl dec jecxz stc sbb pop into dec das movb add or (bad) xor es inc scas test xor xorl and sarl and pop dec jle push cli sub jmp lock xchg adc cld clc xchg push add sbb fucomip fcoms hlt sbb inc imul pop out mov fwait and mov and jg xchg fs sub jb outsb fdivl push xchg popf sbb and test ror loope (bad) inc mov mov ljmp test les (bad) stos arpl (bad) inc xorb xor lcall or fmull mov adc cmp mov arpl popf sbb (bad) xlat rcr fiadd (bad) notl mov xor mov push fmull mov xchg roll xlat ret jg mov jmp cli das (bad) mov xor add cltd lods push push pextrw imul ret lds adc adc mov adc stos xor mov sub (bad) vpbroadcastq int push test cli int in sub test clc and pop cmpsl loop aam push xor mov mov and mov mov loop mov sbb sbb xchg lcall dec or aas cltd imul popa repz lahf sub cmp sub sub je loopne cmp add inc shrl xor sub stc mov clc mov inc sub pop data16 pushl rorl bound add rcll xor push xchg mov pop ret inc lea pop loop hlt or and push enter add mov shrl dec xchg sub cltd xor sub add test adc push jno outsl xchg divb (bad) cmc cmp in xchg inc outsl subl and and add pop add into xor cmpsl lock cld out or pop in adc iret in add xor mov inc movsl mov mov cmp jo or add out mov mov push out ja xchg test movsb mov setg push mov mov adc scas inc nop out call pop pop mov dec iret cmp mov pusha adc jns dec fwait rcrb or ret jecxz loop push out pop jo xlat sbb leave sarl into add js ret mov or mov xchg stos (bad) add cmpsl (bad) bound fsts xor xorb pushf stos cmp mov loope jle aas mov adc xor cmp cltd xchg xchg pop mov divl dec in add xor and test fcoml push decl sub jnp movsl fldl push push js dec mov in jg lock mov push sub push push mov mov addb push sub sub js dec dec or or jle add and repnz cmpsb std ja int sbb xor ficoml cmpsb cli sub mov cmp xchg movsb repz call push test mov shl push je cli lods mov adc adc jg call hlt test sub clc push mov loop mov cmp pop xchg lret stos add sarb movq push push sbb stc cmp movsl inc cmp (bad) lea rolb daa mov push mov add mov das pop xchg add pop xorb sbb fnstsw and popf adcb pop sbb push push push repz int3 xlat adc aas out jg jmp xor add adc pop push push rorl cmpsb repz outsl sub fsubs push pop push xchg fisttpll ja jge xchg mov mov jmp add sbb pop pop cmp push and gs scas pop dec rclb add aas push push stos flds in jge adc mov add add or xor mov xlat int3 (bad) xchg rcl jl xchg push into iret insb cmp addl add jae idivb sub cmp or pop pop push mov leave inc pop xor shr push or xlat dec lods xor pop lock mov jmp or inc insb cld (bad) lock test (bad) scas repnz leave add test inc xor pop lods pushf mov movsb jge stos stc (bad) aam gs sbb lret adc fchs jb or test jecxz,pn les aaa stos call loop pop jmp es xor jecxz lret pushf pop lcall in outsb and (bad) cmp sub fsubl mov in pop stc iret inc icebp js xor clc pusha dec ljmp jno mov enter rol cli or ljmp pop (bad) je push mov lret sti fstps mov xchg aam or sub dec mov dec jmp and gs icebp decl dec repz xor push lods gs fsub sub notb push inc andl fdivp test jb mov inc movsl adc dec add xor xor or outsl lea jg stc cmpsl out leave mov mov lahf fmuls dec out je mov shll or sub pushf in mov push push pop fs (bad) jb loop mov and repz and incl ljmp mov fs adc (bad) jb sti lcall outsb and sub (bad) and xchg outsb adc iret mov push (bad) pushf or inc inc lahf xchg shrb or popf cmp loop cltd xchg pop push and adc aas and fs int3 pop decb xor add cmp out and (bad) fmull push sub (bad) mov imul push pop pop fs xor pop and xor sub dec add in sbb cmp test mov mov mov bnd mov pushl clc push pop ja ja jae out xchg adc mov rol fstpl fsts inc cmp imul (bad) clc xor stos je pop or (bad) push adc sub mov adc daa leave notl imul push add pop movsb sbb pop shrb mov jmp and cwtl xchg lods notb ljmp mov xor and lods outsb mov test xchg adc ss lcall bound test add popf pop cltd cli or (bad) sarl stos lds (bad) js repnz push push mov ret fimul jmp inc xchg incb mov jnp mov push pop jae cmpsl lcall int3 mov popf test es ljmp xlat gs das or push xchg jbe push jne jle add into (bad) (bad) repnz adc ljmp xchg pop les mov movsl mov lret push sub push stos or test mov enter adc xchg lock pop sarb or dec sub int3 adc pop enter (bad) cs push cli gs sbb daa mov lds out in and fs mov into cs mov scas sub ret jno xchg cmp shrl inc fs scas lods mov mov xor mov and adc ds stos xor lret mov cmc jno rolb or mov adc fmull repz das sub leave jl in mov or xor fnstenv stc popf push mov jg nop dec int3 (bad) sub or jmp pop and mov push adc mov jne mov pop outsb dec adc mov cwtl pop mov cli xchg add mov pop mov rorb in loope jns xlat (bad) bound stos sbb out fnstcw aad mov xchg pop movsl dec loope mov rcrb xor push push push pop aam outsb jg push push popa stos cmpl jne mov push ja mov or rol arpl xor xor imul push cmpsl pop nop and out xor and fucom jno clc adc dec scas xchg leave (bad) fldl jle pop or push add mov lret aam mov (bad) (bad) ss shlb jge aas xchg not or xchg push add sbb (bad) cli arpl or mov dec jo imul les (bad) jle repz in pop xor inc jp cmc lcall and mov or mov or js rcrl xchg dec push fnstsw clc push add push mov shr fisubr sub or mov add xchg in or mov pop jns rcll jne mov dec sarb pop movsl stc jg cs stos mov ret repz jnp lods sub fcomps sti and add push fdivr push push mov mov adc lds in push and inc mov addr16 pop sub lock mov mov lcall dec xchg add das sub pop add in or in popl fbld add sub lock cmp fmuls (bad) xor or pop push mov add sbb and xor repnz decl or (bad) push add inc adc aas shrb mov jne or pop not in data16 push xchg jg nop std add inc aas jle loopne push add cmp xchg jl aas pop js xchg pop cwtl add mulb or xchg add popa dec mov xor mov das repnz mov cmp or jecxz test rol mov daa rcrl mov cld aas dec scas ja xchg lock in imull test sar fnsave roll or ds mov jg iret ffree movl push sub out inc sti mov cmpl outsb fmuls cli xor fstl iret add xor daa addr16 (bad) dec leave ja xor xlat mov jmp je cld fisub xlat ja adc pop pop and icebp in ja sub mov daa stc data16 dec out sub lock sub lahf xlat call data16 jle dec rcr add mov out in jo sbb mov scas clc ja xor jnp cwtl cmpsb lods mov push fsubrl cli adc in pop or cmp mov jg xchg pop push hlt ror mov fcom lcall mov pushf lock (bad) mov cmp inc pop scas jecxz cwtl jle xlat popf jns jmp xor imul pop and shlb sbb xchg in mov push xchg adc and inc das out (bad) mov out push xor loopne out pop mov cmp das clc pop divb or pop wbinvd push xor mov idivl dec xchg xchg clc jae or and jnp loope repnz dec add sub mov sahf out lods out daa repz mov fwait adc xchg mov out sub pop fisub dec mov dec mov int3 data16 sbb and cwtl rcll out fs jmp mov sub test stos mov daa xor xor cmpsb inc and add aas adc dec cs mov les xor xor movsb ljmp xor shrb mov pop sti mov leave dec pop lds (bad) jmp (bad) and dec leave mov adc fistp incl pop call ret xchg (bad) dec dec sub mov leave test stos lret fstl add push lea mov stos fs jnp stc inc loop inc (bad) jmp push jne dec pop pop out add pop js pop ret sub lock jmp fcoml jp rcll mov pop mov or jbe lret inc cmpsl mov xchg in mov les mov addb leave (bad) into lret loope xor ds pop ret xor adc loop sarl jnp movb cmp rcl out dec lock imul pusha pop or pop push mov mov aaa mov mov mov mov inc xor je enter add (bad) scas cmpsl push lcall in out jmp call bound jns xor dec loop (bad) aaa das mov hlt movsb sbb jbe and das xchg std and jnp lret xchg sbb or data16 loop icebp shlb mov sbb shrl inc mov ljmp in scas mov push ret mov shr dec jle mov mov mov jbe dec repz jecxz jb std inc jg pop sbb fmul rorl mov pushl sub and pop sti xor mov shrl pushf jmp iret xchg pusha xchg jmp out sub jne ret jb jnp daa pop dec jle pushl std dec test shl add (bad) xlat pop jmp imul frstor or mov lock (bad) aad sub cli fs mov test mov aad cld lahf mov and add test movsl stos repnz out sbbl (bad) cli and adc push pop out sub (bad) outsb fucomp jle and mov dec mov pop scas fstl add mov and push fdivp push or mov lret cmp jae add mov popf and jnp dec negl shrl stc ror inc lods dec push mov ds mov (bad) hlt push ja ja mov and add sub outsl fistl shlb divl lock inc mov sub popa push ds movsl xchg repz daa mov in scas jge mov mov leave or mov add add sub cltd xor out jmp js pop pop adc out adc sub xor mov jmp outsb sub xor and ret pop push shr lcall lock lods ficom pop fs aam cli mov test loopne lea call addr16 or jnp xchg adc insb popf xchg mov sub jcxz sarb adc bound bound or cwtl mov (bad) mov out xor pop or add push pop add xchg cs jmp add xor test (bad) scas push pop adc (bad) mov idivb and jo mov dec push push pop bound mov push mov data16 xor fnstenv scas sub ljmp pop in out cltd cs inc lcall mov push aad jle or js into push bound xchg call ljmp adc xchg xchg (bad) ss mov test pushf rcll cmp inc (bad) dec add in outsl dec and jno mov dec iret adc add xchg dec push and negb imul sub bound dec or and mov cmp xlat nop fimull enter mov cmp sub pop sub jmp jae mov dec ljmp negb jmp insb sub mov shl iret daa call mov ret xchg cmp jmp loop leave idiv push cmc inc mov push cli sbb add add mov insb fstpl fsub cmp mov mov dec xor sub and xor xlat inc das push jae int3 leave pop mov std mov jmp imul mov mov dec mov lock in jle add mov leave iret add mov jg stos xchg repnz adc add scas jb adc popf and jmp (bad) es fbstp mov imul add pop mov fildll fsts mov add sub jnp rol jb or jmp adc push je bound repz stc pop mov jbe inc or cmpsl xchg pop ret mov aaa pop sbb out inc imul dec shrl ljmp ja inc call or outsl divl mov dec push int cs mov imul and daa lret or and les shrb pop pop mov stc fsubs sub add fadd loope and pop and cmp repnz xchg pop pushf sbb call or sub out hlt adc inc cmpsb mulb jle jne fs sub add inc inc int test popf in repz mov jl pop push xor je push into pop popl cmp pop adc leave ret or (bad) xchg dec ret pop push sbb or mov push mov roll xor mov xor xlat pusha jmp in sbb xor mov cmp inc imul push loope (bad) outsl repnz fist out inc test std push sub jmp lret pop push mov xchg mov scas bound dec xchg or push out jns dec into cmpsb rorl pop idivl test stc pop mov sub jle sbb negl daa cmc xchg jbe sub jbe jo or adc jmp out mov divb pop and or (bad) mov and shll fnop jae dec leave xor push inc xlat icebp out xor lret lret aad test (bad) push push lret pop jns push lock or xlat xor stos repz aam jmp adc lea jno,pt fbstp aaa dec pop and jp ja not aas push mov mov inc sahf mov pop jge std sub and sub pop cwtl xchg mulb (bad) jp and aas sub pop push adc pop fisttpll adc add mov sub and ds pop ret xchg jmp mov imul xchg push xlat dec add (bad) outsb cld sub xchg pop gs dec sbb dec ret inc dec xor cmp cmp loop and cmp xchg cmpsb and inc xchg inc adc shr jg mov add add fsubrs sar lods and into and mov pop pop ds jmp inc dec loop cltd mov aaa cs call mov inc ret pushf sub push loopne xor pop xchg in daa push xchg xchg imul sub out push adc testb mov pop ret stos mov cmp out pop add pop mov xor pop fistl adc dec iret and xchg xchg fs (bad) leave adc gs xchg test lods ja out pop fsubr mov pop call or pop int3 and repz sub mov loop lds xor mov mov mov scas ret stos popf jns push add xor arpl push add pop int pop add and pop cmp mov mov clc mov xor mov pop lods dec lock movsb push mov and xchg or mov mov (bad) popf add test mov sub loop popf push or fs adc in (bad) mov outsl imul and xchg movsl jne (bad) cmc lea sub out push xor scas and mov mov cmp pop mov fnstcw cmp push ror lds mov leave sub loopne add das lods fmulp xchg test popf sbb and push jns jp fprem1 shrb xor and fcompl adc jno ljmp in (bad) scas in xor adc lea sti cmp pop icebp scas mov jl jne out push and addb add mov sub mov jmp fs mov mov icebp stc jo repz (bad) push or andl negb jne xor push mov mov jb idiv dec cmpl cmovg pop cmpsb leave and jno lods cmc or xor sarb mov dec stos xorl js xchg and jge push jno dec pop int3 daa in daa or or daa repz in dec ds cmp xor push in out adc negl cmpb dec stos sub adc add cmp sub mov call cmc xchg fcomps gs mov xchg scas out dec ficompl lods lcall cmp or mov imul mov lret pop test adc test adc xchg out jmp xchg cmpsl cmp out lods cmp jbe inc and divb ljmp rcrl inc imul add xchg jne negl iret jns pop dec pop nop das inc insl xchg out xor add add stc adc xchg push mov and sbb or or ret popa stos mov pop in sub mov stc xchg push fs out lods jno scas mov dec addr16 (bad) mov jmp into mov or push adc mov iret out mov and inc movsl out mov and jge or bound or mov (bad) (bad) ret add jecxz jecxz dec xor enter int3 mov push sbbb mov (bad) imul push loope or mov pop repz cmp sbb lret mov mov aas (bad) pusha xchg ljmp dec cmp aas inc call sub test xchg cld ret mov cmp add andb adc pushf mov adc sub push jo xchg xchg xchg push sbb adc pop in icebp sub cli jmp in jl icebp xchg ljmp iret aas mov mov aad jne mov push in xchg (bad) test rclb dec scas mov das out fisubr xlat mov lret sbb or mov mov add roll sub loop dec xchg sub insb add pop pop pop add jbe sub mov bound sub addr16 cmp pop or stos cmp xchg sub mov lret pop cld (bad) (bad) mov sub dec clc mov mov inc js ljmp insb pop mov xorl push or lea std sbb mov xchg (bad) jmp push xchg imul shrb cmp jnp mov mov xchg pop lock adc dec loopne add pop push loop xchg or push adc jne (bad) daa hlt mov ds jge mov or cli bnd and imul pop dec pusha xchg and and jno pushf jmp es out in inc movsl scas mov call xor jns adc xchg push icebp mov pop sbb sub ret test rorb (bad) jge sub dec out fidivl dec mov popa push daa add cmp das lcall xchg xchg xchg jecxz inc data16 shll add lods xchg jmp clc inc aad xor leave mov dec mov ret pushf daa sub and (bad) push lods sub xor fmuls (bad) and add out mov dec xor fsubr dec cld dec out arpl add mov stos mov inc imul lods mov imul rcrl sub cwtl pop jecxz push xchg mov inc xchg xchg mov scas popa mov and das mov and movsb ljmp jg (bad) loope add sbb sub add xchg pop int mov dec dec pop (bad) leave and das sahf xchg (bad) test mov dec and mov stos pop push stos sbb out mov ja ljmp xchg cmpl ss xor int test (bad) sub ret fidivrl jbe mov ss das cli push and stc int3 cmp outsl ficoml fist in lret sub fnstsw add mov int add mov push inc sub shrl iret outsb lods arpl sub adc adc pop mov lret cmp mov pop jmp push fnstcw adc test dec imul push sub shrb lret mov cmp adc clc ja xchg (bad) cli sarb out jge enter out cmc push push mov xchg scas xor dec lods and mov fwait push pop jmp arpl cmp mov jmp pop push push or jmp sub sbb cmp xor push inc mov add inc pushl call popf jne xchg clc fnsave call clc popf pushf cli sbbl out sbb das mov and and sbb (bad) xor cli mov xchg mov inc and les scas sub jl shrl add cmp mov cs cmp sbb (bad) neg pop insb dec jmp (bad) push leave mov shrl outsl cmpsb lods dec mov dec clc jno les xor push js into sbb mov ret pushf out cmp insb fmul and and xor std or xor call push test in rorb add or jne jg and fildll cmc xchg bound inc pusha sub (bad) xor int3 ds repz sbb xchg bound into jne sub fstp rolb sarb sub pop pop in mov out sub popf mov mov push jl sbb sbb sti push test lahf pop enter pushf xchg das lret and test sbb push inc stc out loopne pop mov jbe gs adc shr lea test arpl daa xor sub or or ja add popf pop arpl cltd (bad) mov std mov into mov stos std cmp jmp xor and in add sub rclb out jb mov jbe fnstcw imul or into jl mov pop repnz add mov dec and aad sbb mov jge nop sbb mov inc sahf roll xchg sub push xor (bad) lahf (bad) dec pusha lds sub (bad) pushf xchg lahf mov (bad) xchg testb and cmp dec lret or mov inc mov add test mov in jns mov mov pop add xor push (bad) sarb into add adc pushf and xlat (bad) movsb mulb (bad) jo stos sub into out loope (bad) pushf in dec fidivr or (bad) mov lret out insl xor add push lods ficomp dec jmp adc and mov dec add push movsb jo xor lods and call mov cmpsl adc xchg cmc dec rep popf pop jge (bad) cmp ret ja std jecxz imul pop sub ret jo add mov cltd push xor nop imul pop movsl push or in xchg fbstp push sub iret and aad push shrl shlb enter dec lret xor sbb push push sti adc cld pop mov xor xchg adc mov jbe repz inc xchg out xchg mov inc mov fisubr iret insl ds lcall mov enter iret xlat fistpl mov or xchg xchg inc mov add xlat popf mov (bad) outsl mov or daa add ja rorb jmp call enter ret xor cmp movl (bad) scas xchg cmc push out cmpsl pop and push push push sar xor push std push jnp or xor mov and cli sub mov xor sti fs sbb add sub data16 mov jmp dec mov adc lret fnstsw and ljmp dec out sbb aaa or and push xor mov adc ja cmpsl jns cmp in and insb push out sub cmp or out dec mov daa je pop mov add mov mov sbb mov adc jno rorl xchg out push fsubp fs (bad) enter sarb mov xchg shl cmp ja xor dec daa dec (bad) daa pcmpgtw lret fsubl movsb dec or or mov ret cmpl add xor outsb mov jp push sarl (bad) push and mov jl lds and or (bad) mov push lcall ret add adc pop mov mov (bad) into xor push push jle imul mov pop cmp cwtl xchg ret adcb aad xor pop fcoms loop xor lods add mov aam data16 das repnz xor hlt add pusha push jbe xor pop stc add clc dec shr (bad) xor stos es and mov push (bad) mov sub negb ds cwtl xchg add xor mov sub mov pop sub push push adc add mov jne dec das mov lahf pop in ja ficompl fsubr xchg mov das aam and addr16 lret add add ljmp enter lods sbb repz pop xor and dec lret dec mov popf aas add scas fs pushf aam xchg push dec pushf sub or add mov jle mov std (bad) shrb add push test pushf scas int out ljmp (bad) (bad) mov imul lret dec pop push adc sub pop pop aam xchg pop adc mov adc repnz ja and (bad) into mov cld mov jo outsb aas dec shll pop and pop (bad) iret cli lret or sub mov mov ds xor loope push xchg rorb (bad) ss bound mov dec pusha or (bad) mov add mulb gs dec hlt mov mov daa test and jb sub xor mov push or repnz mov loop sti sub xchg stc jns or adc (bad) out xor pop adc test icebp jmp idivl shlb xlat mov push mov xchg dec imul js or ret inc imulb mov test insb aas pop fucompp jle mov test aam jmp lods mov mov pop inc inc (bad) xor sub les (bad) lcall enter sub jg jecxz divb or cmp fsts cmp inc lahf xchg lods mov mov (bad) out mov jle cli outsl xchg ss test xchg hlt or xor xchg cmp pop ret jge out mov sub scas enter (bad) xchg clc adc outsb inc inc sub jmp outsb mov mov mov out cs jb bnd jmp aaa xor test add das add fcomi adc int daa (bad) push outsb cmp pop je cmpsb (bad) dec scas and xor hlt daa add cltd nop mov lds sti stos mov sbbb into subl jbe bound fidivrl mov add int push rol nop add lahf pop popf sbb xor imul ret scas mov mov popf loope out sub das fcmovu inc xchg test mov pop push inc or (bad) cltd aam out test xchg pop loop icebp bound in inc xchg xor shr mov jno gs sti ljmp fidivl outsb lds lds add (bad) cmp sarb cs bound movb popf loope repnz movsl cld adc lea or pop jno push or bswap mov or (bad) outsb xor sub insb cmp push dec out fisubr ljmp (bad) jmp in xchg mull test sbb fs mov inc pop inc cmpsb leave jo xchg iret int roll fstps ljmp jecxz xchg inc mov sub stc shrl mov jns xchg mov add lret imul mov dec iret jmp sbb loopne ret xchg pop mov icebp test xchg mov stc fisttpl ds xor fisubr ljmp xor jmp clc xchg mov mov (bad) mov icebp push sub mov mov xchg std ret mov outsb out popf fdivrl inc mov add pop (bad) and icebp (bad) ljmp or and jns sahf xor push jo stc ja and xchg pop push inc adc pop push stos bound dec jle xor imull call xchg mov pop test sub mov adc (bad) push int3 add mov repz cmp add lds mov ljmp or sub push pop pop and adc idiv push subl pop test sub mov popa and mov jb mov ret mov jae adc push add pop xor fsub and ljmp fadd cli add inc cmpsb sub adc ss mov sbb stc leave cmp sub xor jecxz int3 icebp adc adc iret mov mov leave movsb xchg fdivr sub aaa pop pop lret xor cltd fnop (bad) jo mov rcl fs jmp xor cltd xchg das xchg mov mov add mov sbb xlat cltd dec out dec ret sub mov dec mov mov adc inc test lock jecxz xchg mov adc adc adc (bad) xor xor cwtl ds pop pop into or dec xor les into rolb repnz daa cmp stc popa cmp cmp ret or add sti xor push sub dec mov adc fisubr mov jg cld mulb pop mov sbb pop sub xlat std mov sub dec or jo sbb ret (bad) out test shrb inc add test mov repz gs sbb dec xor (bad) and scas mov nop dec sub int3 add scas jl out and jle lods ret jbe push adc pushf mov loope in lret dec icebp mov lahf pop cli daa pop data16 ss inc xor sub das add sbb sub mov imul fsts aaa repz pop aas push xor xor pushf gs mov pop mov pop out dec pusha out pop xchg sbbl xor lahf jnp or mov xor mov jne cmp push dec outsl cmp lds repz daa adc into xchg rcr xchg stc in in rorl out add mov popa lods fnstenv push push or pop mov pop xchg jmp idivl pop mov mov iret rcrl iret xchg jne out add xlat cld sub iret and pop sub push xchg inc adc push ss push or mov out mov out jg stos xchg aas inc xor (bad) cmp jecxz sub or jno pusha ljmp push outsb andb xchg lea pop insb fisubrl ret jns movsl out jl push mov mov pop pop movsb xchg xor out lcall cld into mov jno inc mov lcall xor and inc loop mov pusha xor xchg add pusha lods mov ficoml xor sub cmp leave out in jl idiv sub ret jae sub (bad) xlat popf jg mov fnstsw dec sub test jg mov jmp rcl aad and sbb add mov sbbl and mov out insl daa jecxz mov xor cmpsl insb xchg lea fldt leave xchg iret jo mov sub jno out jmp rcrl aas bound xlat sbb cmp and jns mov pop sub popf test cli cmpsb popf and xlat repz and push push push imul jg dec loopne cmc or lods sub lret push in mov clc mov aaa push rcrl ljmp fstpt adc inc ficom divl adc out xor (bad) mov cmpsb pop es scas dec jo push or sub pop inc xor into ja imul xchg pop lret ljmp mov inc sub icebp add imul xor mov popf fidivr and (bad) movsl jns dec out mov (bad) inc add cmpsl lret cwtl adc fcomi mov dec iret call add fidivr roll sub sbb and (bad) inc stc ds xor add mov notb adc mov sti cwtl sub loope push outsl call insl sub cwtl or adc mov in and push lds or data16 xor sub out daa bound push jg cs inc mov (bad) or aas pop lds xchg fistpll pop lds clc fsubl pop out xor fsubs rep mov xor das mov or (bad) std out pop mov pop into insl xchg in loopne mov pop or push ljmp ja stc push push mov dec push mov mov divl dec pop mov cld push ret or mov shrb add rorl out jle (bad) or mov and (bad) dec sub idiv repz jns int3 rorb js mov in in rol rorl div mov mov mov pop (bad) ret repnz adc jecxz cmp lods or xchg push loope (bad) cmp sti daa out push (bad) xchg and xor sbb cs into mov pop inc and rorb imul dec pop dec fstpl sbb mov les inc and rolb cmp push add jl pusha iret xorl jns pop pop adc int3 je mov jg dec ja loope pop dec inc xchg or mov pop roll mov dec mov test sbb adc dec mov pop aam add add inc repnz out and ds jmp lods mov call gs jno or leave jae and xchg mov push (bad) or fildl rclb (bad) arpl frstor ljmp fisubl mov je movsl cmc insb fst add add shlb aas aaa dec and xchg lods mov fidivrl hlt xchg xor or dec (bad) out jecxz inc lahf jnp mov xlat out add ds add bound jne inc movsl mov xor xor sub and aas push pop test mov test inc push add or stos addl sub out icebp mov and mov int3 mov xor dec mov mov sub and fisub pushf mov xor in out xchg divl inc mov les xor jecxz,pn cmp (bad) xor fistp adc imul mov dec in aas notl adc mov sub out (bad) call jge or pop xchg pop repnz jecxz scas pop jmp pop adc sub movsb scas mov outsl jmp cld xchg imul mov dec and mov aaa rorl inc out jne and add inc into jne mov out fs jmp jle pop js jo loope adc adc xor add mov push add adc sub (bad) dec pop mov mov (bad) xor fisubr fnstcw lods in nop dec idivl jb rcr stos jmp stos jne xchg lock pop imul add pop icebp sbb mov out mov xor cwtl (bad) (bad) mov fs jb xchg out int3 lret lret pop out pop out sub sub lock in pusha push test and sarl jmp jbe jae adc mov cmp ret pop ret or push loopne icebp movsb daa outsb mov cmp out ja je icebp pop xchg sub popf insb sub and add pop (bad) dec sub push add mov aaa (bad) daa shrl out dec (bad) or aad mov sbb lea xor sub push sbb xor mov sbb dec inc adc pushf xor push das ljmp cltd mov sub in xchg test icebp jmp call inc (bad) out push ljmp pusha push repz pop xchg divb ss mov dec cmpsb mov (bad) lds and es or ret xchg dec sub xor sub popf dec xorb add fldenv je les stos imulb cs pusha and xor popf sbb (bad) adc pop fsubrs lcall aas lret pop xor in ss lret leave push jnp outsl and jmp and movb cli fs andb lret icebp out inc add or popf xor lret das loop rolb fmull cli xchg in lret mov push pop mulb daa add inc add sub sub push repnz repz mov dec dec repz add idivb pop mov (bad) sarl jo mov icebp bound and sub inc cmp or test mov xchg add lret dec pusha cli rcrb test lcall rol (bad) lret push push lock mov mov leave (bad) ffreep mov sub movb push push mov push (bad) xchg shr pushf inc jecxz and push ds push ss pop test popa icebp fildl xlat push imul mov inc lret ds jmp xor dec cli cmp outsl int3 mov lahf push adcl scas sbb add dec mov or adc ret jle pop lret push (bad) fmuls xlat dec mov xor and (bad) inc sub xor into (bad) dec loope sub les ficom ret outsb sub in iret repz mov lret leave adc and int std fucomi push mov jmp dec stos les jo cli lret lea cmp cmp dec xor jecxz add jmp cltd add push in pop popf ret rol inc xor push fstps movsl jne nop pop (bad) mov inc mov int pop das push aad ficompl out test xor adc fucomip (bad) sar lret shl add push mov sti add or dec aaa jno inc negb xchg xchg xor in das out dec and mov mov fisubr adc in mov add outsb cltd inc arpl movsb and gs cld das cli push cmp and jne cmp and rep sub mov aam iret dec repnz incb jg nop lds outsl pop dec in inc and push adc test or lret xor jne mov mov jle jle pop jecxz xchg lds in mov pop mov xchg jg mov add (bad) and add dec mov adc inc daa lret out xchg cmp clc das (bad) rcl push fldcw hlt pop into adc xlat and enter negb mov push or and add xor dec lret xor adc pop mov mov push or adc push testb and sti mov scas addr16 dec inc loop decl pop add adc mov dec jno push hlt mov mov pop adc gs mov sub xlat xchg popf push or out cmp (bad) test scas jmp (bad) rclb bound out movsl popf mov fistp loopne sub ret repnz cmpsl push xchg xchg pop ret pop xchg cld in mov sbb adc or in repz mov jno enter pop bound jle imul mov test and and xor aaa (bad) or repz mov loopne dec add dec sti repz mov cs xor (bad) not mov cmp popf mov mov jg out aad xor adc mov or or or data16 hlt lcall pop jbe add nop pop push push xchg ret loop imul fadd xchg (bad) leave adc add mov sbb inc pusha imul popa outsb leave pop adc mov cli das jmp outsl or fistpll leave mul cmp mov fist repz jge les stc ljmp lock (bad) add es add sti bound pop xchg sub incl and call xchg fcoms push mov (bad) icebp repz hlt das iret (bad) daa jp sbb or mov add xchg and sbb push xor out mov cmp dec imul fidivrl notb xor mov sahf mov and mov dec xor xchg lock cmp mov (bad) xor sbb dec ljmp mov cmpsb imul inc sub xor ret test and scas test adc (bad) push push das (bad) (bad) nop pop push (bad) cwtl dec ret jno mov xor and mov clc add mov jmp popa and jmp push pop xor test add lods (bad) in xor imul addr16 inc push push push repz add cmpsl (bad) push mov lods push pop push sub mov lret push call pop xor in mov imull xchg out notl or (bad) (bad) pcmpgtd and xor mov xchg lret frstor and movsl push ficompl xchg lret lock add lds sub and ljmp or sarb jno pop sub divl into in inc mov mov mov jmp jns or xlat pop test out out repnz fild pop push in dec mov sub insb ja mov lock push int3 rcrl and push repz mov adc and pop lds icebp repnz daa xor jge fsubp sbb xchg dec lea stos sub cmp xchg (bad) xchg add (bad) mov pop loop pop mov inc imul test cltd pusha add mov (bad) scas mov add das fisttpll bnd pop add cmp dec xlat sahf sub pushf sbb sub xlat dec mov loop xlat adc das add setne sarl xchg xlat dec test sti or lods mov sub das popf pop ljmp mov push ret lods cmp sub push dec in jae add cmp pop pop cld dec in cli jne mov mov pop cmc pushf push cmp jo arpl add sbb rclb daa xchg rol pusha ds xchg mov and push (bad) and mov xor ret push or (bad) lret push scas xchg and ds jo xor xchg stos xor out ret xchg bound (bad) cli mov add cltd movl jge add pop into add pop jmp stos mov mov inc and aas test xor imul jns add fsubrs dec not clc mov ss and jnp mov adc inc adc (bad) shr leave into push or movsb daa add stc add mov (bad) jmp xor dec cmp cmp pop cmpsl test out (bad) cmp jo daa aad mov fnstsw sbb movsb push imull mov push negb cmp mov in add xchg mov fsts ja lds clc push mov pop cmp movsb mov clc jno test sub rolb push nop aad mov push adc in adc xor dec roll icebp in sub sub add scas and mov cmp psllw (bad) sub jmp lret jge sbb icebp or add scas jmp ss insb mov addr16 mov dec mov xor add test outsl and mov (bad) mov repz loope and adc mov and jbe test sbb imul ret sbb inc push xchg dec push mov movsb dec in mov pop outsb or mov push sbb mov out and add out sub fisubr les rcr fdivl dec into fs xor lock cmp dec dec mov sub incl mov out mov rcr mov testb cmp divl in push repnz mov push out test push cmpsl test mov add pop fsubs mov mov into push push jp clc mov add inc das (bad) cmc xchg mov or cmp add cmc push ja notb dec andb dec leave mov lock mov xor repnz aas gs push lahf test cmpsb out mov add inc cld pusha cmp lea out sub dec mov and and and push jmp mov cltd sub in jnp loopne add sub cmp jl pop sarb out daa cli push ret jbe push dec es outsb leave sbb adc fdivl jo xor mov inc xor push ds (bad) out call mov mov or mov sub cmp fldl add mov mov in jae rcrl or into mov xchg xchg pop jne push data16 mov pop ret addr16 shr fist out sub stos mov (bad) hlt fwait inc repnz pop das rcrb and xchg cmp lock jmp fs dec mov lock jecxz rcrl cli mov mov popf pop outsb pop ljmp xchg jae adc out lea adc int sub out rcll sbb push push sub daa lds lret sbb int3 les xor scas std cmp mov inc push xor div adc sti mov fs jge cmpsl movsl out inc sub rsm sub divl jne mov sbb les and daa xor (bad) stos negb push adc das or jne mov ret jmp jmp and sub xor incl imul add add lret scas fldcw repz pop subl and jb inc test daa pop lret cld lcall dec addr16 and pusha add jge dec in cli mov idivl push add lret sub and cmpsl hlt sub dec mov pop pop movsl fcoml bound sarb outsl mov ja clc sub xchg icebp test (bad) lock xchg sub lret sub xchg pop mov das popf jns lret inc mov jge mov jmp test das lcall push pop add push push aaa test cmp pushf lods in or xchg leave mov cwtl andb popf push into adc pushl jmp xlat add popa (bad) sub das pop jbe daa fidivrl mov jmp dec (bad) push mov push xchg xadd jmp dec pop out add and cld xor aad inc das xor iret jle stos ds (bad) adc into fdivs jp or sti into mov out daa ljmp (bad) mov enter sub xor lds lcall mov ds out lret and dec lret or xchg cmp arpl xchg xchg pop out sub loope ds mov xchg out popf mov push imul (bad) divb fiaddl rcrl and jno out adc (bad) cmpsl cmpsb dec mov jmp jl dec mov les cltd jae test fdivl (bad) (bad) repnz stos repnz leave lret imul inc in mov (bad) and fisttpl cmp xchg test sub and and lea push and adc adc pop pop fwait sahf sbb or mov adc je fistpl xor movsl data16 and or mov addr16 mov push and push sbb pop mov sub in fidivl sub lahf (bad) ja ret mov shlb jmp shlb and push inc loope aaa cli and mov (bad) or icebp mov rorl int3 out data16 or fnop mov call ss in xor jge mov cmp mov jno ret pop out addr16 mov fwait dec mov sub push and aad incb loop inc addr16 xor jmp popf pop mov dec repz (bad) mov bound inc (bad) mov pop jb mov leave inc xor jle aad data16 icebp adc iret jmp (bad) out popf xlat xchg mov sub push add icebp ret arpl movl jg xor mov ja xor add cmp pushf jg int loope mov out pop fwait xchg xor ss aas cmc daa adc adc packuswb adc lret dec jecxz lret dec out and fbstp negl cld mov fcompp fwait cmp adc out gs lea icebp add popf jbe mov es mov sub xor jmp je shrb test add mov je stos xchg decl gs es and add mov lret loop rcrb ja (bad) mov ss inc (bad) jae adc (bad) jmp in inc jle xchg ljmp les xchg mov jg sub stc pop mov repnz xor ss fbstp lock aam outsb mov xlat int3 inc mov and fcoms outsb cmpsl cli pop xchg je lcall xchg (bad) mov daa int3 daa (bad) wbinvd add push pop dec jb mov mov adc arpl mov (bad) sti repnz movsl test cmc push mov mov xchg lds push fbld leave and pop sub mov ret adc scas ret jl pop out sub addr16 push xchg repz sbb shrl mov fcoms jne repz pop push sub pop sub aas (bad) lret dec adc jmp cmp in sbb sub sub (bad) pop iret adc mov lods outsl ret ljmp loop xchg mov and mov xor push sbb xlat cmp (bad) mov subb jp pop inc shrl jmp bound out fcomi inc xor movsl lret push dec dec jmp out and mov mov pop popa enter mov inc iret push sub jl push loope cmp leave ja in mov sub sub iret dec mov cwtl dec fcomps sbb inc aaa daa out xchg inc cmp inc lock mov cmp repnz cmpsb dec cmp dec xchg and adcb mov pop aam or lret jno adc in imul dec xchg push inc dec popf ret xchg in cli mov dec out jb aaa pop icebp (bad) xor mov loope outsl fstp mov out hlt xchg mov xor out adc and cli in dec (bad) mov add aaa and into inc xchg or cmp or xor in or dec sub jg pop aaa stos jb jmp pop xor ljmp push sub xlat rorl insl mov fstps cli mov or mulb daa adc lcall ja and adc sbb cli jmp leave xchg hlt mov cmc pop popa xchg cmp push pop dec fsub xchg pop mov sbb loope fbstp adcl cmp ret inc or jge mull pop mov xor mov clc cmp xor sub rorb push (bad) and or pusha add mov bound xor iret xor stos pop aad mov enter fildll repz mov push int3 popf jmp mov xor xor adc jne inc pop push icebp sub dec or xor add (bad) xor enter mov les lock (bad) xor mov insb inc push call xchg fnstcw xchg icebp scas lret mov jbe mov repnz mov (bad) scas daa add fcmove xor sub xchg negl sbb xchg notb das in mov add inc int jmp xor ljmp nop sbb leave xor lret and imul cld push and push es ret dec ja jge int lret mov adc dec and lcall movsl push in dec std dec push jp popf pop cmp out outsl loop aam jb enter dec icebp int lods jb stos and jno dec or mov pop mov sbb mov ret adc out mov fst popa test sbb std xor mov mov das and add and adc outsl mov dec and test mov or sar jbe mov clc sub aad push imul sub in mov clc adc xor cmp cmpsb mov mov out shrb mov call cwtl ljmp cli out test mov test ret or scas xchg push xchg add mov repnz pusha cltd pop pop sub fcmove (bad) pop kmovb stos lea push lcall jle or push mov push mov bnd sahf sub or sti popf test ljmp ret hlt dec (bad) mov xor sub popa mov cld push shr push pop out lret mov scas int3 jae sub xchg pop dec push mov (bad) fs in add arpl lret mov or pcmpeqw jnp int sub and imul push shr jecxz xchg stos jecxz xchg xchg mov pushf (bad) je stos gs mov jo or mov repz lods ja add mov mov jno ds xchg cmp mov popf aam sub sub mov mov out mov inc mov addr16 (bad) pop cld orb testl out cmp push scas sub lret jae dec lds addr16 pop jecxz and sbb pop add shrb adc mov and imul push sbb das ret sbb insb mov mov pushf imul outsl mov cmp into sub ljmp lret stos sub cmpsl rclb cmp lahf (bad) cmp cld dec ljmp scas mov scas or leave (bad) mov or clc jle or and mov lret mov sub (bad) adc int sub sub sub mov xor cli ret inc inc ret daa sahf mov cmp cld cld movsl mov lret sub imul fcoml inc xor xchg ret loop push loopne add repz (bad) das dec cmp add das jne stos in dec lahf fs rorl cmp mov sub and mov cmp scas xlat adc mov mov add inc jae push fdiv inc add or sub fucom out or or cmp xor idivl test dec adc cld mov das mov xor inc add sub adc cmp jmp stos je xchg xchg out mov or inc jl in push test arpl (bad) adc mov outsl push mov push jecxz ficom fistpll jmp xlat pop xor mov xlat dec push addr16 sbb in sub call (bad) int cmp imul xchg lds jle jb dec gs push mov inc clc lahf push jnp xchg aaa lahf adc mov or pop pop mov cmp popa push (bad) movsb scas add dec into cld out mov inc ljmp (bad) jecxz push in pop negb loopne or cmp sbb lds or mov mov aad imul xchg test inc cmc mov inc push push out dec add jbe and cmp (bad) mov add test dec sub shl cmp ret sub add mov or pop xchg and pop mov jmp adc cld (bad) loopne sub mov in and ret pop gs cmpsl or inc dec pop pop xchg lods leave cmc xor (bad) push daa pop lds sbb out xchg cmpsb out aas sbb roll cmp (bad) mov and into mov sub aas icebp lea inc bound test scas jmp inc push xor jno testl pop sti adc out aam scas mov and mov xchg adc cmc daa cmp mov pop out xlat test std outsb shrl cmp fs mov js bound sbb movzbl or into testl icebp pop xor add pop int mov pop inc jg rcrl cmp aad scas daa adc pop or or pop and dec cli in loopne and movsb inc add pop sbb cltd in repnz mov enter outsb lds mov cmp mov cltd (bad) arpl xchg sub pop gs arpl rcr pop xor mov dec adc mov sub ljmp cmc jp stc jle (bad) scas cmp leave dec nop push mov jg sbb dec lret lret jb fxch cltd (bad) and icebp and stc out push mov add pusha xchg out pop test push stos arpl dec mov add mov mul adc int cmp bound add pushl (bad) mov dec mov in inc pop lret mov sub sarl arpl dec scas lds mov dec mov jcxz add mov int3 and loope loope cld jg jmp jnp sahf xchg pop jecxz pop testl insb sbb ljmp repz xchg pop sbb xlat pushf out cmp test (bad) mov pusha imul pop jno or and xor adc lret mov mov mov out jbe pop or sbb push and sti and push (bad) and (bad) jmp sbb inc mov pop mov jmp xor dec add sub scas repnz lret inc adc lcall outsl sarb ficompl add enter push jns out jmp or data16 and sub and icebp movsl repz xchg xor mov sbb ja sahf xchg js xchg pop jne or test xor or add clc add cmp andl outsb dec out popf dec add mov aad cltd lods inc push adc xchg lds movsl repnz stc xor test out pusha push fisttp (bad) lahf sbb and iret jno jle cmc cs mov and pop fisttpl fldl dec cmp ficoml arpl add xchg jg leave sub add dec call cmp shl adc add push pushf jne out push mov stc flds mov das int3 sbb sub inc cs pop or pop jecxz loope call xchg arpl repnz enter (bad) mov sub xchg inc gs xor jo pop jecxz dec cli and mov loop (bad) fstpt sub popf dec (bad) or ret lds bound cld push out mov bound test das aam jmp xor pop dec ret mov sub (bad) es fsubrs xchg inc jbe dec enter sbb cmpsl jno (bad) and add push mov xor jge outsl (bad) jge jmp dec add divb aad mov lock js mov push pop jbe leave inc jmp cmpsl js pop jmp xchg pop (bad) movsb push gs lods rcll shll pop push fdivs push loope cs cltd out lahf pop aad sub iret and div lods rcll adc sbb pop imul dec test scas imulb mov mov cmp and jl outsb add pop iret insl xor addl xchg dec mov ror int push orb stc mov mov rcl mov add cmp (bad) xor jbe lea aas xchg sti scas lret xor mov xchg push inc imul cld fsubl jecxz lahf push push (bad) mov cltd into repnz mov pop es ret jl (bad) out test pop je stos test mov outsl std dec (bad) jmp mov mov jle les scas sub pop add mov shlb movsb ficoml and adc dec push or ja lahf scas icebp jmp mov inc push adc idivl cmp sbb in adc xchg pop std movsl out (bad) in or icebp notl and imul pop or jl and (bad) pusha pushf fistp xchg scas cltd fidivr push xchg mov xor jecxz aaa fsub dec fnstcw xchg jge pop das jle jge dec xor mov (bad) adc fcompp push sub xchg out or notl mov bound sub sub dec idivb clc movsl push scas lock mov rorl or or imul stos (bad) shl incb xchg inc out xchg ljmp bound cmp mov ds aas xor sub mov adc add jecxz or fstps insl sub test dec dec gs sbb xchg sbb ds lods and call push or mov sub sbb add repnz xor cmc ds lret pop cwtl jl jle adc call cmp bound gs popf mov rorl xchg cmp add xlat clc inc into into dec (bad) fistpl pop xlat push jmp sub pop stc icebp xchg mov mov js mov cmp test lods xchg leave fdivs mov rcrb xchg push dec push out sub (bad) mov inc pop xchg lcall fnsave lock adc test into mov (bad) xchg cltd into enter jecxz js fnstenv cmp imul xchg pop xchg adc mov ljmp gs loop xor cmp push dec inc xor jecxz add in fdivr sub dec sar fwait lods add jns sahf inc ja shrb xchg fwait sbb cmp aaa inc pop lods xchg into loop rep or adcb add mov jl push mov adc fidivr adc ja test or jge adc stos xchg scas into inc pop mov js sbb lock xor xor and scas test mov in fisub sbb push jl lahf adc push dec fsts mov es add ret das iret addr16 adc mov data16 rcr (bad) scas nop jle in imul mov pop or or cmp int3 in xor out fs pop xor loope jg cmp call and sub pop mov test inc pop or pop ja pop jp fistpl sbb inc xchg repnz add faddl popa push mov sbb mov xor enter ret mov gs mov (bad) int3 insl push roll fnsave (bad) push (bad) aam jne (bad) xor cld mov or and in (bad) lret add mov (bad) cs xlat mov out cmpsl cli sbb mov ja cmc jmp push test and in cmp sbb notl addr16 in sbb lea or insl repz lcall je fcmovbe ss pop or rclb mov adc arpl imul mov fistl das (bad) and xchg movsl ret dec xchg out mov daa mov pop inc dec adc fs adc lods adc adc fwait int3 lahf pop add jecxz imul popf jle xor push ljmp imul jno inc sub (bad) inc data16 push out mov or xlat jno leave pop fnstcw (bad) repz adc test xor add lods dec adc and xlat push or test jecxz xchg mov jnp and wbinvd loope mov xchg adc repz pushf cli xchg fisubrl jb xchg scas cltd sub fisttp pop mov cmpsl jo inc or xor sub sbb icebp loopne subl sti ret pop icebp shrb lds add jne cmpb repnz push dec xor sub xor mov (bad) clc sbb or xchg (bad) sub stos dec test inc push pop sbb xor mov add cwtl push jecxz add push mov or pop ds shrb push push and aam int3 jnp mov xchg fisubr outsb jecxz dec rcrb jo dec mov imul mov jg mov lcall inc sbbl mov add fnstenv sti mov out dec mov enter dec ljmp mov adc sub or leave sbb mov loop std mov inc mov and mov jne stos icebp push pop inc das loopne sbbl adc mov mov adc mov popa pop and das mov fcoml pop sub mov icebp add leave push and out lret cld pop cwtl xchg adc popa and add into cmp (bad) push stos (bad) dec mov sub mov sub out repz jecxz adc xchg jbe js iret popf outsb add les jno into inc sub cmc mov inc ret subb sub xlat xor xchg pop out and mov bnd data16 adc sub add lsl push xchg sbb add and adc es jg leave add sub push stc test out push or cli and cmc mov pop dec add add xor xor add das mov stc mov xor xchg out (bad) pop lods pop movsl scas xor mov and dec ljmp cmp sub inc es mov add sti and jle push repz cs cli sub pop orb jmp or sbb pusha xor fiadd ja clc or lds and aas or outsl sub jmp mov arpl ret jp out (bad) lods or in std mov pop and pop cmp clc sub (bad) xor icebp or call lds (bad) and into scas into orl add mov pop ret jne sbb std xchg (bad) mov sub xlat add jge xor xchg jge xchg push sub rclb pop addr16 mov js xchg sahf xchg idivl inc add into cmp icebp inc pop sub outsb push loope clc cmpsl push sub lods dec mov mov adc mov data16 iret lcall xchg pop mov mov add or sub jbe jmp or popa arpl in iret test sbb cs sub adc das or adc and pop xor sbb and es movsb push dec xchg sub xchg fs ss mov sti xor adc loop nop in stos xor scas adc addr16 add iret push mov fistpll mov ret test outsb sarb fidivr ljmp cmp xor adc xchg mov pop xor push das or and mov mov or in lret mov fs jl dec jecxz mov jmp adc ret outsl mov jnp or mov shrl pop jp push sub push mov sbb dec daa arpl sub sbb daa shrl xor cs sub scas movsl dec push adc dec xor (bad) out xlat inc shlb sub mov rcll out cwtl test sub sti and ret jmp mov mov cmpsl ret pop notb pop incb pushf xchg std or xlat push loope (bad) out (bad) cwtl (bad) jmp aad mov loopne hlt ret lret dec rolb lock and pop and fdiv into mov xchg or nop cwtl iret xorb xchg data16 leave mov leave ljmp push ret push sbb pop mov sahf push cmp mov popf mov popa pop pushl sub lock fstl scas pushf bound repz das inc fisubl rclb movb add or xchg pop scas flds inc xor pop icebp sub push or ss mov xor testb adc iret pop ja or xor push (bad) xchg scas imul jg decl pop jne aad xlat sti fwait into das jecxz idiv xchg int (bad) cmc add jbe outsl or icebp lods xchg mov lods xchg jecxz adc (bad) or sbb leave inc test mov sarl (bad) sub add imul push call mov adc repnz in xchg mov jmp xor cmc pop addr16 and sub cmp mov push jmp push stc call adcb call cmp test mov leave (bad) cli inc dec cs push out xchg add sub int sub mov sub bound (bad) push cmp pop pop bound and stc (bad) out popa add sub popf xchg mov shr icebp inc jg ret and pop lret and insb sub inc push inc jno aad in ljmp lods adc or pop rcrl (bad) imul add jecxz loope popa add cld cmp adc sti loopne ret or push das leave mov mov cmc adc mov (bad) mov dec mov dec clc push fiaddl jnp mov dec jecxz inc mov shrb mov jae sti pushf das notl xor ds pushf cmp and mov sub adc push paddusw sti jb dec cli sub or pop xlat adc sub cmp and pop sbb mov (bad) call mov pusha xchg mov arpl mov (bad) lock repz cmp cmpsl (bad) cmp lods sub or cmp inc daa sub int3 ret mov mov mov or pop ret in push in ljmp in movsl nop xchg dec mov stos dec out das rcr inc adc mov out js fild mov and push iret mov fsubs mov (bad) jnp cli xchg enter lldt inc pop and out test fnsave xor mov pop lret sub fdivrs lret xchg push or mov and lods shlb or mov push pop lcall test add pop push notb (bad) lea jecxz enter adc lahf sbb add push adc sub addr16 xchg sub push add cltd jbe add cmp push movsl test xor jmp ds and (bad) xchg jmp pop in jae lret jnp push jmp inc cmp imul aad jle addl jp sbb adc sub fs movsl test ret push (bad) mov fstpt add jne sub dec cs test out and fwait sbb (bad) testb leave leave arpl test shr scas ljmp movsl sbb mov mov pushf adc in adc add lods mov (bad) jae out sub dec mov imul add iret out mov or loopne mov adc leave decb lret pop orb lahf xchg loop sub pop daa sub std mov add xchg stc xchg xchg xor lds cltd in push aam lret jns (bad) into xor or fisttpll fdivl xchg gs shll ljmp xor test rcl shlb popf lcall shr call mov popa sub mov jae ljmp cmpsb push xchg inc pop cmpsb xchg sub add imul loope sub (bad) sub scas mov sub dec adc inc insb out ja frstor rcll sub xor adc xor or (bad) pop mov mov mov pop (bad) or (bad) xchg cmp and add ret test pop xor jae add jb fsubrp scas (bad) mov jno scas xor js mov adc sub js aad mov stos cltd (bad) aas xor sub mov cmp shrl out mov xor (bad) xor or jnp mov adc sbb mov push sub pop jmp imulb (bad) ljmp mov lahf ret and jb mov sub movsl xchg cli ja mov gs scas cmp mulb daa (bad) adc pusha dec out mov popa pop iret sub out mov xchg pop lods test mov cltd mov or sbb push sbb cmp or and jnp adc xchg mov jl jp (bad) into sub ja xor mov push mov jb cmp push (bad) and mov mov add ja and xlat xchg push cltd test jg outsb dec mov sbb pushf push out cltd dec loope sub rorb pop mov cmp (bad) xor pushf xchg ficom push cmpsb daa lds fisub (bad) std mov mov inc into decl stc and mov aas aaa or dec fidivr ja mov leave inc mov xor add or aas push repz inc les adc mov dec mov pop (bad) mov cmp mov or add call xor aaa xlat mov lods js pop out in fmull jle das mov (bad) mov roll lods fmuls xchg mov push (bad) pop negl cltd (bad) cmp clc cmpsl into push fdivrs xor dec mov fucompp out into add std jno loop iret sub jp outsb lret popl add mov xchg ljmp sub add les mov or xchg (bad) jns imul pop icebp xor cwtl das or add and adc pushf or test loope xor in outsb mov mov jmp lret mov and repz or mov jns enter icebp dec mov mov mov add (bad) mov hlt out pop mov adc inc lret add fcomps lods add ret jne bound iret mov iret mov push (bad) xor add add mov lret (bad) je xchg dec mov fiaddl inc mov mov jns inc lret test outsl pop cmp imul aad xchg les int sub adc adc jge lret mov sub stc (bad) xor mov jno mov aam pop mov dec pushf jb mov cli lret lret push mov xlat in add incl add in pop out mov js sub das adcb push and pop pop sbb (bad) cmpsb mov out mov or aad sub sub jbe (bad) add movsl cmp test add ds (bad) jge mov or mov and addr16 loop push (bad) gs pop sub ja iret dec inc mov aaa imul cli dec mov pop lret mov fisubl ljmp mov mov cmpsb (bad) and pop bound imul mov jg jnp mov inc insb and mov add test add rcll ss ja xchg std xchg sbb add ret in sub cmp mov and or imul test mov test or mov ljmp out dec ret dec aaa sub adc cld aam push inc popf mov lock fs mov dec mov and and xor pop mov sub in adc repz cltd push or lret push and mov popf inc jns pop xor mov bound decb cmp aam jmp xor push pop mov add xchg pop imul sub mov sbb xchg iret xchg mov nop and mov daa fcoml daa lcall mov dec inc or mov and mov dec clc mov out sub and sub iret ret int std lret test xchg pop call (bad) mov and fdivrs add neg push (bad) out and inc lret adc dec adc pop ljmp inc movsl adc pushf xor and into pop cmove rorb cld repnz pop adc dec mov pop stc (bad) adc subl daa rcll sbb fldl ret pop shr lret movsb scas data16 xchg sbb or inc ljmp insb xor pop lds cli test aaa lds mov lock jle xchg test ret ja sti cltd into jle sub add stos bound inc mov or movsl dec and and xchg push lods inc and push xor enter shrl mov lods pop test jmp xor xor out js (bad) call enter add pop add in dec movsb out mov iret jno imul fsts fadds xchg xlat sub fldenv popf std xchg push lahf popa jnp aas je xchg cmp mov test dec xor or sub or jl outsl or xlat sbb sbb mov push jae add jle in call lds jecxz test mov (bad) out pop int3 test sbb (bad) lahf ds mov add jbe loope cmpsb pop (bad) stc movsl imul nop lret fld ret sub xor xchg mov push jle push mov sub pop in or and pusha imul add mov adcl pushl repnz stc jg sub mov sub leave mov lock dec xor mov dec stos and xchg clc mov sub and lahf das fcmovbe leave cmpsl std xor xlat out push xchg fisubr lds or (bad) xor push or pop stos gs (bad) pop dec hlt mov fs xor xor clc fidiv adc popf outsl aaa loop paddusb lods or outsb push jg mov setns cmpsb sub out sub mov sbb add jnp out out push cs mov daa pop out adc lcall pop lcall xchg pushf ficom sub shrb jmp xchg gs sbb and cmp insb (bad) xor mov imul lahf loop jns dec jns push gs into (bad) leave pop scas sub xlat out (bad) stc jle jmp lret jmp cltd jle xchg out scas movsl lds loop in xor mov cmpsl push mov icebp or adc or scas add jmp outsl daa aad ret daa lds push mov or or mov xchg add pop inc leave (bad) cld xor cmp sub cltd das mov ret sub xchg rorl xor cmp add mov mov sub test lock pop loop xchg mov xchg in or sbb jmp push fwait out push adc (bad) xor dec stos mov dec out les imul in pop mov dec sub sahf loope mov fcomps int3 aaa adc xor int3 clc sub xor imul xor notl jmp fadds sbb stc inc mov push push (bad) cmpsl dec dec pop iret in adc test and and or push test push das cmp vmwrite mov into push xor sbb into cmp add mov sub divb and pop fildl ljmp andl or xor dec (bad) in xchg std addb xchg dec test add mov push xchg out jae out jne xchg sub stos cmpsb dec imul sbb push int3 in push lea sub loope mov jmp outsl js lcall das notl nop push xchg js mov and mov (bad) mov fs clc xor pop or out mov es mov mov loop sar scas pushf xchg push push dec stos dec xor mov mov sub cltd mov test cmp mov and jp cmpsl movsl test les jp cmp in movsl jge sub pushf adc out insl dec mov xor scas and mov sub fstpl das jne (bad) popf cwtl mov mov cmp push adc push into adc dec push aad mull push xlat int sub (bad) int3 jmp sub lea cmp ja dec ljmp add decb sbb or pcmpgtw je orb add push xor (bad) int mov add dec sub mov cltd ret sub push loop cltd loop into inc sub call loop mov push sub aas pop das inc stos push push xchg inc sbb dec xor test sub mov in enter jg mov adc cwtl jns imul jne arpl sbb adc add xchg xor outsl (bad) clc xor decl testb pop insb xor mov push mov jo dec shl pop lock or adc inc cmpsb mov and out test pop sbb fisubrl cmp sub (bad) sbb divl mov ret mov xor or icebp push mov or mov fcmovu push jno push push cmpsl push push or cmpsb cltd sub pop xchg push cmp mov sar repz fcmovnbe mov mov fsub out fwait sarb (bad) and aad add stos (bad) push ljmp sub mov cltd cmovne sbb push sbb dec push lret xchg xchg push iret add push dec fist sub mov jns inc leave and adcb mov loop mov shr pop outsl (bad) mov xor repnz add lods ret aam lret mov mov cli xchg mov mov and ret jg jnp int3 lret jecxz (bad) adc roll popf negb mull add out inc (bad) jecxz dec mov or or mov dec push and jmp fisubl sub inc sub (bad) in xchg (bad) and icebp jno pop ja and nop repz xchg sbb out bound out xchg xchg mov and es sbb push lret mov rorb or fldenv mov repnz jl mov testl and cmpsb das imul sub sub iret adc out add jbe inc fbld mov lahf jb adc or in jae out mov insb rolb pop mov jne int into mov or xchg or xor out sub popf test icebp pushf dec aad test xor inc add (bad) js aad fild sti sub jnp sbb aad sub pop divb cli or inc push test and pushf jne lahf push loope xor lcall das sub sbb inc stc mov adc js rcrb ret into pushl lock push (bad) sbb mov jecxz fsubs stos cmpsb sub orb dec sbb into rcll in out adcb dec or gs or or xchg jge dec dec fstp cwtl pop enter loope std cmc mov sub ljmp rcr pop std pop movsl mov fs ds out sub leave dec sub mov sub xor mov jnp (bad) and fildll fisttp xor and xchg lret shufps ljmp daa and test inc add mov pop sub sub (bad) xchg fnsave imul ret adc mov orl jno jg std and mul mov dec test jg insb shr js adc sbb inc add repnz cs xor mov ficom add je and orl or aas push ja addr16 out (bad) or aaa or test sbb outsl mov fisubrl loope out sti sub imul xor push loop mov jo sub push jns inc mov add (bad) les and xor repz loop xchg jmp mov insb mov mov dec jg add pop sub (bad) je (bad) add icebp fstl jmp mov jp fdivrp push mov fwait dec mov inc mull jle lret je imul cltd sub fs popf pop jns (bad) test lods loope std xchg pop div dec subl in aad and pushf inc aad cmp pop out cltd sti jo mulb jge xor or into cmp push pushf lock (bad) mov test (bad) mov mov cmp jb (bad) adc je stos aaa mov dec xchg out jecxz and pusha sub and cs stc xchg aas xchg sbb push adcl add out int out jb dec or sub dec lods iret mov xchg xor push (bad) or loope pop mov test dec imul mov hlt bound arpl imulb shr div dec test leave stc push or fcoml mov xor or jns xchg jmp sub (bad) mov mov push aad sub lds sub mov jno xor sub jb mov lret enter cmp stos xor in push add loop fs dec mov test or fbstp adc js dec mov pop sub movsb cld push adc (bad) (bad) daa leave pushf ret dec ret pop add jecxz push inc sub rorb ficom xchg ljmp das shr fnsave mov mov paddq fnstenv xor mov mov cmpsl jge popa lock push ja rolb sbb mov add in or pcmpeqb out les or ret sbb call stc cmp sub iret xor (bad) sub fs push xlat cwtl imul cmp fldcw sub xchg lret jae adc sub xor (bad) adc lret out pop inc int xor stos in mov imul sbb cli mov mov repz xor xor and xor (bad) mov sub mov push xor inc xchg and push das pcmpgtd lahf push inc and and pushf push icebp xlat mov push add aam jmp addr16 mov cmp pop xchg out je imul out imulb jb outsl test mov push stos in jno inc mov add xor (bad) repnz mov adc or scas pop mov pop test fdivrs pop bound insb js (bad) mov push mov inc test addr16 xchg jne pop sub (bad) cmc in aas xor out mov out add scas xchg das (bad) or (bad) mov das mov cs test mov xchg lds mov imul adc fisttpll mov (bad) mov xchg mov push mov jle inc mulb xor sub xor jp jge jecxz adc (bad) out fsubrl mov fmul scas push xchg xor out xor mov jne adc mov pop push gs fnsave adc fisttp xchg nop repz or outsl loop subb insl mov dec sar or shrb xor mov stc xchg xchg mov xor out jae cmp notl insb loope xor adc call insl ss ljmp and add daa xor in xchg negb mov fisubr test lcall mov dec bnd sub pop xor pop pop mov push in sub dec fistpll mov lcall mov mov mov mov push icebp jns aad lret repz sarl mov adc cli sub pop mov loope lret leave aad enter xor pop mov cmp rolb jmp jecxz inc les ret into pop fcom out pop (bad) loop sti aam bound xor mov xor test clc pop loope sbb lock push in dec and ss jge push and jnp lods dec xlat xchg call jp out mov add stos mov xchg inc xchg add jle jns lods mov fs mov pop fld mov aas mov pop cld cmp xlat inc pop pop or sahf (bad) jb or out sbbb adc (bad) out loop xlat cwtl fcmovnb dec and fildll scas adc iret (bad) clc and popa sub jnp cmp pusha out jne (bad) mov jmp xchg xchg mov and repnz xor dec add mov xlat mov in xor inc add mov ficompl pop jle (bad) das jmp fs and test sti mov das fistl dec cmp sub (bad) xor inc jmp adc xchg adc mov dec dec adcb pop repnz je enter je push xlat jno dec je lea xor and (bad) inc mov sbbb lret leave add mov mov leave ss outsl mov pushl xor mov in add push mov pop mov xchg aad dec inc xchg imulb shufps cmpsl fnstsw (bad) and or loope rcl dec dec jg sbb lods repz push lds sub daa out jne inc daa ret xor seta ret ljmp inc stos add pop ljmp mov icebp imul mov les out das add and adc (bad) jno or jne inc sub repnz mov inc push mov and or lret mov lret loop xchg mov push stos lods xchg iret lock notl xchg xchg data16 sbb push pop push pop lds (bad) sti mov push jns mov out dec call fnsave adc aaa leavew add mov (bad) jno pop in dec xchg ret sbb fnstenv mov jo lods cmp add (bad) mov js pop fadds or sub rcl shl or jg jb lahf sti and (bad) in (bad) mov fldt lods mov fisubr jbe sbbl test jecxz std cld fwait movsb out call sub scas cltd out loop insb sti dec push jmp jge mov ds fbld sbb fucom inc or mov popf shll cld pop lret dec mov xor pop pop push adc cmp imul dec fs shrb aas push dec cmpsl push xor call inc fstl fs out lret and (bad) push dec push loop fnstsw inc jecxz sti push push das mov in cmp scas jb inc fwait inc dec and rcr clc gs repz enter ds cwtl or fdiv dec add sub in (bad) rorb cmp insb sub xchg loop ret xchg jmp jle rcrb or lret pop mov push xchg fistp mov outsb jb mov jg sbb sbb inc push mov sbb in add inc push inc pop sbb inc and push mov into pop mov lock adc insb push nop (bad) lret cmp jno xchg add jno ret and cmp lcall sbb dec jp dec xchg sti cmp pop loop jge pop push and mov jmp (bad) ds jl daa in adc mov (bad) lock jle lret mov pop push ljmp daa out pushf test push and dec in xchg js aam push mov lret xor push cld and adc add ljmp pop push mov flds jbe mov push or push (bad) shrl rcll loop push insb and movsb loope pop xchg and fdivr popa pushf (bad) sbb and dec and sub cmpsb nop in jg out xchg inc fcoml mov xor iret jecxz pop test add mov sub repz sbb movl inc shufps push push mov subb icebp out (bad) rcl pop mov data16 jmp or xchg xchg int3 cmp stos fisttp push jle jmp push idiv dec les mov mov lret fdivl in mov add xchg jo pop dec popa mov mov xlat and out or mov jns out and call imul and push sub pop cmp ja mov xchg xchg mov jno scas (bad) push push add or mov sbb pop mov dec icebp push cmp adc mov repnz push test loop test pop in cmpsl fstl add (bad) shr popf in xlat cmp sub xchg jne push mov push je sub jecxz (bad) repnz ret add ljmp cmp sub fs cmpsl sti pop xor pop pop lret lock xchg cmp xor sbb mov xor in xchg mov xchg inc adc jae push add je lret fisttp imul pop push push and pop call mov add jle inc mov into xor iret jbe mov addr16 mov mov sbb sbb scas cwtl out ficomp mov rcrb je imul popf rcrl lea mov xor xor (bad) mov lahf hlt int3 sub (bad) jg inc mov sub adc mov aad mov mov int inc or fisttpll test out push pop ljmp and mov test cli mov push pop test and sub lods into daa ret jge clc out cmp test dec lods popa scas pop and xchg fsave pop sub das xor fnsave pop push add sti sub popf jns imul mov daa lcall mov bound or xlat in xchg shr lea inc mov xchg leave sub adc rorb into mov jg xor lret jno lret or std lds (bad) pusha or out xor into cmp adc jne dec pusha sbb mov aam iret push dec cli fnstsw fnstsw movsb cmp les outsb cli mov fistp mov ja jge imul sarl fucomp pusha lds mov out je out mov mov add pop pushf aam add sub and sub pusha mov pop test pop sub data16 movsl ss repz mov and jl dec mov jnp cld leavew aad mov pop in fildll call lea adc loopne imul lret icebp lea mov out cltd shl idivb leave mov mov (bad) rolb pop loop jg lret mov cmpsl loopne sti add cwtl push and imul jl icebp pop popa add and pop sub fimull sub push push imul repz xchg dec dec cli xchg sbb std inc enter xor mov and (bad) or mov or in xor xor xchg les stos mov xchg xchg daa jb push jmp ja mov popa adc outsl mov pop stc cmpl add out xor negl mov cmc sbb fldcw daa in iret ret xor movb das stos sub aas es les xor test jns repz mov rcl dec addb jb dec leave xor sub and rcr add imul fidivrl and pop sub nop and xchg mov jb repz push ljmp sub or mov test fldenv jg mov clc pop push adc aas pop mov ss xchg mov das sar jb setne jnp pop insl and das pop inc pop out insb xchg lret movsl sti gs int lods sub repnz cmpsb testb lock mov xchg lahf cltd jbe push fwait scas les jmp (bad) pop add sub or cmpl or or enter jbe out pop lds pop push adc lods test jecxz pop add xchg xor ds mov jno cmpsl aam imul ds into jmp dec icebp dec inc sub jp,pt push sbb loope and sbb sub leave les pop shrl sub pushf lds sub mov mov push jmp add push cmpsl hlt jg mov cmp and mov or jmp std arpl gs popa push icebp push dec ljmp or clc sub add lds rcrl jecxz and mov push (bad) sub out popf push insb or cli pop xlat lods fsts pop mov int imul mov das sub das scas pop mov add popa fxch sti (bad) or cmpsl lahf movsb jmp nop popf lret add add (bad) push fs and xchg xor scas pop ljmp (bad) popf pop pushf jl add es lahf inc sbb out pop mov push hlt ljmp add les stc (bad) xchg adc fsubrs pushf mov and mov jmp sti adc std pop push out jno ds mov (bad) or sub dec lahf hlt (bad) mov fsubr test mov mov arpl imul scas push and mov fstl rclb out (bad) mov andl xor imul lcall bound jp fdiv mov aaa ss mov je sahf xchg les test movsb mov push mov out es jg cwtl adc add (bad) mov dec stos (bad) call loop sub iret mov mov loope add xlat jae add mov stos inc xor cltd mov pop xor mov inc adc cli bound add aas into aad or lock test stos cmpsb push js mov das push xor adc mov adc and sti dec mov les (bad) and ss ret fwait pop cmp int jae adc fistp scas (bad) rcrb (bad) mov pop cli fs das decb xchg and lods mov mov ja cwtl das out add xchg imul addb mov dec shll mov paddb jmp pop sub js movsl mov loopne xlat nop arpl inc cltd lods push cwtl aas mov dec mov and mov std sti dec daa push aam jmp loop push call fsubr sbb inc fistpll inc in pop andnps add jg (bad) cmp sbb mov pop dec mov fldt mov jge add clc fadds mov sub sbb sbb cli in je mov fcmovu hlt int3 add pop mov and lret test clc stos movsl mov and repz cmp xor or fcmovu push icebp lea xor in mov mov mov (bad) and mov jl popa (bad) or rclb mov xor dec shrb adc imull mov cmc add push pop push gs push in inc sub das adc fisttp testl addb pop add pop sub pop repnz pop push adc mov mov addr16 dec inc test mov idivb push inc push push push mov and sbb pop shr and push ljmp add daa jg xor ret dec not mov or das dec or push sub jne xor add jno push mov aas sahf pop orb cmc push add mov pop push cwtl lret pop push mov dec not add cmp mov in xor sub or pop add push fistpll imul je jmp mov add push in data16 cld inc nop xchg and cld push adc push pop pusha adc push aad mov xchg pop rcrb push fdivr pop xchg ds test shr cmpsl push cmp dec inc dec loope aas add cmp push rclb vunpckhpd add js movsb ret outsl inc add aam mov out ljmp ljmp inc movsb add mov xor iret add and aaa pop (bad) (bad) mov sbb mov pop ret test call or adc ljmp mov int adc loop shll add repz cld dec pushl mov or (bad) (bad) ret jno sub add and out dec mov xchg sub push pop das cmp sar mov cltd aam lea fbstp inc outsb pop add cs rorl inc pop stos cmp dec xchg hlt pop inc mov pop hlt lret fsubrs mov popf push mov fsubrs push orb dec jne ljmp enter push mov mov lahf jae pop arpl pop clc mov mov xor pop loop fiadd and xor xor lahf pop (bad) push and pop sub xchg loope and push fidivl sbb or pop and cmpsb mov jecxz or sub mov sub xchg mov mov pop cmp push imul lcall and scas mov dec mov data16 xchg sarl imul xor mov stos fdivrs push lahf pusha push jmp subb and mov pushf push leave and mov jo and dec repnz test push (bad) sub (bad) out cld xchg cmpsl (bad) ljmp pop rcll push adc cltd sarb xor into sub add mov mov xchg fistl shrl dec dec dec mov add xchg push ja gs fdivs xor mov sub sub fistp sarb test rol mov inc sub xchg mov adc push repz or pop mov ljmp rorl dec and xor popf fist dec into xor jne (bad) dec fmul and divb xor pop outsb or xlat adc aad mov aad aam mov mov and sub and ja aad sub push add into jg jecxz cmp sbb ret mov adc (bad) mov sbb cld shll lods xchg divb pop (bad) popa stos add insb pop and mov (bad) jnp jb pushf pop push gs das xchg ljmp push iret cli sub xor out jae imul mov mov adcb add adc lds fsubs jecxz push fcoms sub sti hlt pop pop cmc repz inc sub aas mov xchg ret cmpb sbb fs xchg and not xlat cmp jmp cmp lret and mov out dec jmp pop push inc mov ljmp leave add cmp and jne cmc pushf jg jns imul fldl2t out sub scas sar loop xchg in inc fnstenv movsl push out mov shrl gs call lret jecxz pop push xor jmp pop pop inc mov dec jmp out push mov aaa test out pop (bad) in aaa ret push pop ljmp daa push dec push mov ja call repnz scas pushf mov xor fldenv inc ds mov xchg lret iret pop sub test or adc adc sti call icebp xor fisub push or cmp in cmp sahf adc repz mov jb into imulb ja out outsl xchg decl in negl fnstcw dec icebp clc shll test rol sub dec cmpsl pop dec in ss or sahf inc mov nop in aaa popf cltd mov aas cwtl and mov add and jns fs mov xchg mov sub cmp adc fsubr mov sub mov sbb ror xchg and fidivl mov sarl inc test loope xor sub or (bad) add adc scas jnp xchg push sbb add or push movsl stos (bad) or rclb jmp push or (bad) sub fbstp je ret mov add sbb es push push stc xor cwtl adc pop xchg pop mov jp sahf lcall ljmp repz mov into dec subb (bad) loopne,pt cmp flds xor add std into pop mov (bad) dec and stc les pop mov or jmp je push int3 push push jb ror xchg xor xor adc sub jle or pop and pop add mov jmp stos mov mov adc xor adc mov ss pop mov mov popf jl push cmp leave and dec sub lahf sub leave and inc and (bad) imulb add sarl mov mov test gs test mov and mov fidivl cmpsl bound add dec insb mov ret adc mov or xchg lock fildll (bad) mov mov inc adc test push jmp pop (bad) enter sahf xlat mov pop lcall push loop pop sub mov pop (bad) adc jbe fisub lcall jb xchg in sub jmp aam push mov popf xlat cmp jmp or fist mov jge inc push or jne addl mov repz mov or xor sub imul pop sub adc or xor bnd xlat ret xchg imul sub xchg sub scas and mov decb rcrl and test sub dec sti stc add or (bad) shl negl sub cwtl or mov add sub sub mov fnstenv popf jnp sub (bad) repz sub popf out and jmp fs sti (bad) jbe cld dec push push enter dec testl jle in sbb lcall loopne fsub repnz xlat sti popa sub push mov push inc (bad) lods push add mov lds icebp lock repnz inc or pop in scas jns dec fs mov movntq test stos sub or xchg adc jne popa mov (bad) out stos popa mov mov mov ljmp add and mov sub pop push std xchg icebp mov and xchg jg dec out sub mov mov xchg scas add ret mov out sub repnz xchg xchg divl inc pop jns dec (bad) xor fcmovu mov push mov add jns cmpsl imull or jno push inc jmp sub enter adc pop pop mov jle mov sub fcmovnbe push cmp aam (bad) and mov sub (bad) pop clc add fs pop add fmuls jne sub sub in xchg (bad) popa imul fidiv or loope (bad) jmp sti sub xchg adc lea gs bound lret scas xor call mov xchg lods int roll dec clc (bad) push and sub les icebp cmc imul inc clc xor inc daa pop fwait das cmp xor out or dec (bad) out mov sub jne mov std pushf insb dec mul cmc add adc pop mov push dec mov mov and out adc fidivr std daa sub jmp ret or mov loopne jnp lcall mov mov sbb adc sbb in aaa nop mov jle (bad) xor inc aam dec jnp aaa popa lea cmp sub cld mov fisub popf pop testb jne popa movsl mul imul mov out notl daa rcrl mov xchg out bnd pop jle inc sub in jmp inc sub fsubrl daa mov (bad) ffreep iret frstor das lret xor xor clc lds out cmp ret or sub fcomp add sub popa lcall sub mov popf fcoms push cmp pop and das mov cmc sub sub xchg jecxz pop cmc jecxz lret add or fdivs ret sub dec sti sti int jle sub mov inc sbb (bad) mov adc push test cmpsl xlat push bound frstor jmp xor lods int3 mov hlt lods jmp adc test movsl mov sbb xor pop add loopew movl inc add sub mov pop sub mov jmp sar xor jmp push inc lcall push imul or xlat cmp insb mul fldenv das xor ret outsb or jnp ds push loop lret adc ljmp test popf jno ret aam push mov add gs mov shrb ljmp sub fldl mov sub std mov sahf lret xlat pop stos es pop cmc ljmp or sub dec out inc cld imul dec cwtl popf ja out xchg jnp das cld push lods jl jp das jl inc rorb and icebp adc mov dec (bad) mov inc mov and sub (bad) jns cmpsb fwait pop in in xchg stos xlat add mov dec stos mov push sbb and push je inc mov (bad) push push cmpsl (bad) adc shrl stos int outsl int cmp (bad) mov xchg cmp add jmp arpl xor ja,pt ljmp jo call jns (bad) mov add jns mov dec insb mov dec rep fs push pushf lods xor movsl in jnp stos lods push loope sub sub in test mov and sub popf insb or fnsave pushf xor fdivs cld fisub and ret or pop adc xchg jae scas sbb bound pushl sti mov rol push ret sbb push mov add jp jp cs push xchg ljmp repnz leave daa push (bad) cmpsb push or aam xor fldt jno movl test sub pop ret jne adc cmp out rcll add add mov and xchg js sub xchg lods or lret push mov (bad) stc xchg and push push mov pop out mov (bad) mov pop test aad adc iret fidivr pop sbb fild (bad) (bad) loop xchg into in cmp (bad) outsl int xor jnp js out cmp add pop loope push idivl mov enter daa cmp push (bad) ret sub or xchg ror loopne pop mov or jno leave fstps clc dec mov or adc push dec jl mov std pushf dec mov pop pop addr16 fisubr notb imul push decl push loopne (bad) fdivs rorb mov mov mull icebp dec stos pusha call bound add (bad) sbb mov test stc fcom scas negb loop mov mov aad ja,pn xchg (bad) cld jge and adc push mov cmp mov ljmp or dec jle or pushw in das nop iret lds fsubr sbb sub jne push bound shll daa or sbb (bad) lock cwtl cmp add repz jp movsb push inc cld pop pop xor or (bad) mov daa not adc sub (bad) nop add mov adc inc mov sbbl dec test xor std fisttpl daa fldenv xchg lret jecxz inc out mov (bad) lret cli lea push pop and js rol mov repz test or leave jo adc sub inc daa xor sbb jno xor or add cld cmp mov out sub icebp popf and pushl xor (bad) inc xchg jae lds jb lcall scas xchg mov insb lock daa mov add xchg cwtl jns or loop mov out stc add test xor xor dec or cmpsb dec jmp stos pop fidivrl pop (bad) mov dec sbb (bad) repnz movl sub sti push rclb je sbb xchg (bad) into lret pop mov loop pop bound gs sub mov repz and add stc jo jge test lea sbb (bad) icebp cli xchg lret mov lea or shlb fidivl xor inc xor cli gs or add mov sub ret jns loope (bad) jge shrl repnz mov fstps dec sbb or mov lret mov fsubrs jns test cmp mov jae mov les test inc pop mov aad cmc out dec sarb dec jne dec pop fsubr or adc inc mov sub aad testl pop imul pop in sub shll and fs xchg sub das jle loop mov ret (bad) xor ret repnz mov test repnz mov push mov xchg mov insl cltd pop test sbb das pop adc out call pop mov (bad) dec mov cmc or icebp pop sub sub mov call adc out jnp or inc inc ret sbb adc imul xor daa loope jp pushl es add into mov orb fstpl sub pushf icebp out pop xor shr or mov mov loope jp shrl sahf sarb inc xchg mov (bad) sbb mov add in jp pop ljmp ja das dec pop roll out xchg dec sbb or icebp or jno out and xlat ret call add xchg sti (bad) ljmp ss xchg dec dec out int3 fnstenv pop add loope (bad) add xor ret jg sbbb mov jbe (bad) sbb cmpsl pop inc mov mov cli rorl fsubrs out dec sub xlat test inc and inc pop and or js and dec and mov push jnp lahf xchg mov ficom lcallw sub xor push dec movsl xchg aad add imul je pop fstl mov pop enter or pop loop loop or into aaa imul inc dec and (bad) cs pop and or (bad) push lods repz add cmpsb movsl jmp ss addr16 popf cli add or cli sub stos pusha mov cmp adc lahf dec pop fdivl jbe jmp push or mov mov and mov xchg push jmp mov inc test imul scas sub je adc bound js popf fidivr leave fldcw fld aas sub sbb call test add test (bad) call into ret add cli bound fnsave fildll cli icebp pop mov mov pop in or jbe dec cmpsl push out and or out add pop mov pushl pop sbb xchg fistl loopne shr adc ljmp negb lock cmpsb cwtl das add adc jo stos dec ja out into cltd dec jg xor mov jb int cmp sub and jns xor aad push sbbb pop jecxz adc mov std pop ret or and adc jge pushf dec (bad) mov fdivs dec cli mov pushl out test dec mov jnp push dec mov jo mov push stc add test mov sub xor fldenv fbld dec mov mov popf inc jo aaa gs jmp dec mov bound subl push xor add mov sub icebp testb sub pop xor movsl out sub aas and xor out in arpl stos les or scas iret out adc sbb cs stos (bad) cmc pop pop nop xor jge insl pop jno xchg repnz mov pop pop mov cmp add push sbb iret jl and dec add and cmc ret roll sub (bad) mov das xstore-rng cmpsl ret pop sub iret push or mov inc (bad) icebp rcll fcomi test pop jb stos and fstpl fisubrl pop pop mov mov hlt repnz cltd fucomi cmp inc dec je imul adc hlt jge out in movsl jnp add loopne xor icebp imul cmc add iret jmp xlat or rclb xchg imul jmp xchg mov push leave into pop xor (bad) cs inc or aaa push dec imul lods insl dec andl cmpsl cld dec sti inc xchg stc pushf mov xorl ret mov inc test and jg (bad) pop inc aaa stc push xor pop mov adc mov minps (bad) test sbb dec jmp cmc xchg cs ret push push mov test ljmp mov sub lret pop xchg shrb lret cmp cmp adc les clc adc inc shr add or xor in push ljmp mov lret and cwtl xor mov pop or add inc stos and add jno fldt cwtl in pop lret ljmp daa xor and je add mov dec repz ret test and (bad) out or lret sub fnstcw jno mov pop mov and mov pop movsb dec repnz and fisubl push pop xor fldl xorl cmp mov xchg sbb pop and mov pushf out btc movsl daa cld dec in repz js sbb inc cmp out aad addr16 dec vpmuludq ret cmp ds rorb fistpl fwait dec out mov lock mov ret fs addr16 cmc sub addr16 mov push jmp dec cs leave mov jne mov lret sub fxch jbe iret push cltd add (bad) (bad) and (bad) and sub icebp push loope popa fs test push inc push xor mov and sub pop in jno (bad) jno (bad) add mov push test jno lea and scas mov jmp imul cmp xlat stos gs mov or xchg pusha out pop cmp mov xchg in cwtl mov cmp loop das and push xchg jecxz outsl jmp push dec ljmp fs pop ja jg and in jnp lret add xor fisttpll ljmp or sbb add or xlat push and shll test (bad) out xchg inc xchg xlat push scas sti lret or xor xor (bad) divb into add clc in out push inc (bad) movsl jbe lret inc pop pop icebp out pop clc out iret (bad) into pop out xchg loope mov mov lods cli subb cmpb sbb rcl (bad) dec dec (bad) scas bound inc sub sub push jae xor bound (bad) and sti in adc pop pop mov cmp pop xor jg imul cmp (bad) jb xchg (bad) outsl push popa scas idiv lock sti mov test xor add icebp xchg and add divb push cmpsl adc add movsb inc mov jmp aad bound inc xor stc cmp sub cmp mov loope push jle xlat sub mov cmpsb aaa sub ja out mov sub (bad) jno sub cmc sbb mul xchg call dec xor les xchg sub (bad) fist and aam jmp and repz push test aad cmp mov stos xchg mov and (bad) mov out dec inc mov sub push out mov daa mov out cmp icebp mov pop stc adc mov fild push clc mov into std sahf (bad) or pop pop pusha mov cli lods popf dec mov inc xchg mov (bad) mov repz mov sub xchg scas mov dec and push shlb dec fcoms mov inc jns and or cltd jnp cltd dec insb add idivb jg push and cmpsb push jge gs sbb out jne incb ret pop movsb mov adc add xchg pop mov dec test mov pop in adc sbb mov (bad) jmp in daa mov sar lcall ret ss xchg jg fdiv aad cmp jno push cltd mov or pop xor mov pop (bad) sbb lods mov test mov call (bad) or out push leave dec xor add ret rcll or in jno xchg mull sub sub sub rclb jecxz mov lret add sti ret add mov leave push pop dec lret and daa out ret ret gs sahf dec stos pop je push mov cmp das scas inc mov (bad) mov daa cmp pop hlt push add inc ss jg xor cmp repz roll fdivrl push (bad) fidivr fidiv das jecxz push xchg sub lods cld adc xchg adc add cmp in daa rcl add and xlat xor pop mov inc (bad) pushf stos out mov lret and sub inc xchg icebp or pop faddp out and xor int3 pop sub cmp clc loope icebp cmp dec sti adc sub and aas out jno imul push (bad) aas mov inc dec inc add test add xchg mov mov cltd in xor push mov dec cmpsb xchg add loope test mov repz xchg pushf mov xchg mov pop and mov fbld das and loop xchg sbb add inc (bad) ljmp je sbbl pushf pop jo je mov mov adc outsb cmpsb outsb inc lret inc pop and (bad) ds out adc xchg das movsl je inc (bad) fsubs stos adc fistpl (bad) ret lock add mov sbb (bad) mov push mov pop loop jno loop and and push mov pushl xlat dec int3 lods shll out inc pop and xor adc loop xor add popf jge pop fimull sti and jmp iret mov icebp jbe push mov (bad) xlat mov jg push sarb pop fbstp out xchg cmp lds int3 dec add xchg pop push pop and adcl icebp xchg mulb pop pop test jae mov jmp out xchg pop sbb sub out and xchg pop daa je rolb pop lcall cmp out xchg pop les test sbb pop or stos mov sub cmp sub sub inc inc add fild sub dec xlat push stc mov jp incl inc adc push lods fs scas mov mov ds shrb and add clc into shrb cli mov add pop mov xchg pop sti mov cs notl leave popf fistpll jmp inc stos and stos jmp push (bad) pushf xchg int3 xchg add out sarl sub push nop/reserved flds sub bound fidivr mov loopw fistpll inc cmp sub insb and inc shrl pop clc icebp out and and and xor data16 adc push fmull and xlat xor out push jno bound daa mov xor popf into and dec cli repz movsb sub cmpsw pop jmp imul iret dec lret cmp mulb mov sub call and lock pop xor dec xchg sbb xchg das adc push push and (bad) mov out lret fiaddl das inc lods adc mov mov dec loop dec mov imul cmp and adc pop in lods int3 (bad) pop fnop cmc cmp sub loopne rcll lret fs cmc out rclb or sbb xchg push push push xor push xchg aam (bad) fsubrs mov dec cmp fwait push inc repnz sti cwtl iret or adc dec xor lret jnp fsubrl mov or das test sub in pop cmp inc cmp xlat leave dec into ds or xor lock or jns dec pop cmp xchg xchg stos xchg jno inc sub jg mov rorb xor mov mov lahf add sub fldt mov fldt pop cmp mov or mov outsl int3 push aad (bad) div cmp int3 fistp mov adc and leave push or scas sub dec push mov icebp das or push adc scas adc int3 cmpsb sub push and sub add sub add (bad) pop popf push sbb in ss xor dec cmp xchg xchg add sub fiadd sub cmpsb (bad) jg pop and push mov dec dec call lahf (bad) sbb cmc movsl push gs or or jmp popf out lcall xor and jecxz in mov (bad) sub xor xorl daa and call mov pop scas and dec rcll push sub xor pop push cmpsl or pushf jl leave inc sub cs mov push mov and pop inc test sti int3 add pop imul ret xor scas lret push sub adc mov je lret imul jo pop pop mov xchg ja dec dec out mov xchg bound or and into add dec scas icebp pop movsl push insb out mov sub or and or sub xor xchg mov mov scas pusha sbb and popf push lcall pop repz sub cmp push fadds popf (bad) push push fdivr gs and scas out push or adc lahf push test imul xor sbb sahf rcll icebp lea or mov sbb sub fnstsw xchg (bad) int3 lcall xor repnz sahf fwait cld fstps mov sarl stos movsb xlat sbb cs stc sub ret and popa call leave fisubr scas gs shr dec mov xchg mov pop xor pushl adc punpckhbw sbb xchg push int call scas int3 or sub pop int sbb je mov jno inc or jbe bound into jg adc push (bad) jmp xchg repnz mov mov jge lret pop and inc push scas push push cmp or mov jo leave les adc mov pushf sbb enter icebp (bad) daa push out sub and dec cld pop push jmp movsl cwtl sub lds sbb fyl2x subb pop jmp add jle pop sub jno scas push out movsl jge sbb imul lods rolb leave inc cld push in out mul add cmp and aad cs xchg jo jb dec jmp out inc (bad) mov pop push add rcrl (bad) mov daa in or add dec mov cli flds imul cld jmp dec movsl jno inc pop xchg test push fwait scas in jnp xor ret cmpsl jle ljmp add add cmp xchg daa data16 inc loop lret xchg adc sbb or je fnstsw xchg cmp pop push sub pop mov ja sub lods lds test (bad) test xor out lret jo sti gs lea dec sarl insb adc (bad) jnp fsubrl hlt clc pop lret or mov nop pop and xchg mov jecxz pop cwtl out divb xor push mov adc or iret jle push out pop dec out ljmp mov mov lret jmp out pop jp repnz dec xor sub jp sub stos ficompl mov mov mov inc lret ret sbb and cmp or pushf mov xor out pop jne sahf mov dec lret mov cwtl cli or sub pop mov and push sbb aad sub ret pop xor sahf lock int3 cmp jmp pop pop sub loop cmp xor cmp rcrl add mov into shlb sub xor mov push lock or mov daa lds ret mov mov ds cmp (bad) fldt shrb pop dec push adc and imul loop dec cmpsb and pop pop lret repnz cli jne ljmp daa lret mov in jg js cli mov or pop fstps jnp pop out lock les mov imul rcl dec fsubrl fstpt mov ds subl (bad) xchg xchg sbb sub fs mov mov inc push or ja in iret das lret jle dec mov aad push das lcall cmpsb jge jge xor sub mov dec xchg dec test sub clc lahf les (bad) mov cmpsl pusha or (bad) ljmp add ret jge arpl sub fisubr (bad) repz or jp out mov fstpl (bad) xor push xlat fldcw add or push pushf or xchg insl popa cmp mov ss push cs cld pop push out lahf sbb jmp add stos mov aam lds ficoml ret cmp xor adc int jg rorb pop xor bound pop outsb test lret or ds push outsl sub add ljmp popa push ret (bad) mov inc dec fbld push (bad) jne mov gs ljmp data16 xor and (bad) or test xchg cld mov idivl dec ret sub add pop jecxz jle shll cs fbstp xor fist pop (bad) jns mov pop clc imul (bad) sbb stos fsts or xor or pop sub mov pop test lret mov imul repz rorb jmp stos repz mov xchg sti cmpsb arpl xchg cltd push sub and sub cmp outsl sub outsl jae mov cmp scas xchg sub xor std into add sub mov movsb xlat into bound and loope sub shll or daa jg (bad) and or fisubr and out repnz (bad) mov in aas scas ret lcall jg cmpsl or (bad) push stos push mov ja inc pop ds push repz pop jp push mov push outsb vmovaps or ljmp or sub repz or xor outsb xor mov (bad) fdivs xlat xor andb dec push bound aad adc add and out aas dec ret mov (bad) xor fildl std pop mov fimull pop shr bound jno dec fnsave mov pop mov das sub (bad) ljmp jle push (bad) adc sbb rol data16 orl jmp int3 or mov push roll mov aam inc sbb add add pop mov insb std sahf movsb pop daa push ficomp xchg lret cltd dec icebp mov mov xor hlt out stc xchg xchg mov out jnp test aam dec mov notb sub or jmp pop cmpb push jo xchg mov enter or cltd icebp xchg add clc xchg stos lds sti xchg subb or dec dec push cwtl js xlat rcrl jne jo sub test sub divl mov leave out cmc or inc bts adc (bad) ds (bad) cmp inc mov and (bad) faddl or mov or into mov and jb or adc add test mov popf adc mov pushf movsl bound repz push je pop imul popf push repnz xchg out test clc les enter dec jmp scas sub das mov aaa mov add test fidivrl (bad) cmp das insb test sti mov daa mov rcll lret fmuls mov hlt cwtl xchg mov clc mov sbb jge addr16 sti lahf sbb mov pop insb ljmp jmp insl sub hlt xlat daa xor cld stos loop sarl das icebp outsl xchg mov dec out bound clc xchg aaa jne mov fcoml divl stos xor push ds sub jne daa fistl push adc xor (bad) call and xchg popf xchg sub out fldl and and adc pop adc mov push pop fdivrp and (bad) callw push (bad) mov roll aad dec cmp loopne cli stos cs loop (bad) pushl pop pop lret fisubl outsb or (bad) pop xchg call xchg push fcomi cltd clc mov and les mov xchg xlat adc cld into mov sub sub and ljmp ljmp sub repz xchg push dec out pushf xchg repz and sub xor (bad) mov mov dec leave mov sahf sub inc and in mov cli leave and mov scas sbb cmp outsb and pop sbbl dec leave stos jb and jbe xor out lods or jb call (bad) movsl push ret lods adc (bad) dec or or jg push mov xchg adc dec (bad) fwait cwtl cmp mov fisubr push bound mov fnstcw lret mov repz inc fs scas xchg fldt mov enter (bad) dec cmpsl lahf add ret daa jl push mov and sub xchg cld inc push pop jecxz push push xor and daa cli and jbe inc or xor jmp test out jb pop mov mov lds mov (bad) into cmp mov cmc outsb add inc (bad) insb aad or je rcl push cmp cltd mov jge jbe mov sti pop inc fisub mov gs popa mov mov pop into out dec in into xchg cli int3 in inc push jbe out bound out mov and mov sbb es cmp dec imulb and xor repnz push imul pusha pop ljmp les loope mov xor mov jns mov xor adc pop ret cld mov (bad) xchg clc lds icebp lahf dec in imul clc fimul sub outsb std popa movsb (bad) cltd pop bound push xor insb stos sub (bad) popf rclb pushf mov mov enter sub lahf aam jmp jl xlat xchg cmp or mov jns adc cli repnz pop cmp fs pop inc xor or sti dec fidiv push ficomp and (bad) pop jl dec loop ja push xchg inc js repz add or outsl ret ja xchg imul mov or push and les jecxz sub jne cmp sarl inc in push mov mov test or jecxz aam push pop cmp sub cmp pop jae cwtl out movsb xor stos bound pop lds mov jo cltd addr16 sub jno cltd and mov das stc xchg inc cmc in xchg loope faddl sub push dec je scas data16 adc or jmp dec lods (bad) lret mov and xchg out repnz inc xor shrl add and or repz mov stos xchg jmp (bad) xor add xchg and in out stos sub out mov (bad) or mov fcmovnbe sub das pop sbb rol pop pop insb scas push push sub mov xor mov lea mov (bad) mov mov or mov cmc inc cmpsb and inc movsb xchg jl mov xor push mov add xor inc stos sub jmp inc push sbb decl outsb (bad) cmp jo (bad) lahf fisub push and into ja into mov or jecxz pop mov rcrl out adc mov js mov test dec xor dec cmpsb pop xor popf stc inc jmp sub pop fs mov cmpsl out mov dec mov sub add mov pushf imulb popf clc or repz mov fdivrl pop ljmp add (bad) jnp sub outsb pop lea rolb loop stc bound mull gs xor rcll push xchg loopne jecxz inc xor xchg fwait push dec cmp fs jg or pop sahf push in inc xchg mov and insb mov xchg aad into imul xchg imul and pop into mov adc inc clc aad sub add or jg out add mov lret rolb cmp negl adc inc xchg iret mov ret lret mov out add xor cmpsb cmp aas outsb sub mov jo xor push inc pop imul and inc add pop cmp in leave aad loop std out xchg out lods inc cmp push and shrb xor pop push mov adc mov stos add jg rol call les pop inc push push in inc dec adc lret pop cmpl fsubs js aas push scas add dec fnstsw pop lds orl dec repnz fbstp sbb cmp ds mov fsubr (bad) ret int push in or dec in in mov imul stc mov idiv mov into (bad) shll sti rcrl dec cwtl fincstp daa and (bad) and es (bad) (bad) sub and lock repz mov into mov sub aas lods add push enter cltd dec imul push cli cmp add ja popa lret mov ljmp idivl sbb xor or (bad) sbb xchg or outsl push xor xor push or mov jne sub jnp out and (bad) aad push test dec pop addl sub enter push aaa sbb add push lods cltd pop mov mov lea and adc adc add pusha repnz add cmp jno push push lret add (bad) call jns push add inc inc cmp mul xor pop add mov adc lret (bad) dec inc lret inc stos pop mov mov cmp push pusha push xlat xchg clc std inc roll and dec xchg add mov pop shl adc mov cmpsl test or mov nop adc mov and cwtl divb push push mov inc rcrb pusha sbb push mov add mov decl mov xor test pushf hlt jmp (bad) or ljmp sbb call lea push or mov repnz xor sub mov add test mov lahf je imul (bad) es pop inc add rolb stos jb and sbb (bad) xlat mov sbb fild jmp dec stc and or idiv lods sub cmp or mov idiv mov push mov out push fsubl lret jge mov and adc adc jle sub push mov or inc add mov dec adc pop test pop aas das add dec repnz xchg jb lret push pop mov lret ja xchg add cmp (bad) sub add sub cmp popa mov xchg repz repz cmp sub roll dec mov das fcmovnu addr16 xor int adc add mul (bad) lret clc pop mov sti cmp mov mov xor out and cwtl dec out popf movsl jp and test sbb jbe ja jp add push mov ret cs jl push ljmp adc jg dec jmp fnstenv lret mov mov daa pop mov dec mov int dec hlt ffreep mov imul and and and adc adc stos rclb pop and xor sub (bad) int3 cmp dec jmp sbb sub outsl dec add dec sub add push xchg cmp mov mov mov sub frstor xchg adc push or push inc add mov mov mov xor into sub data16 (bad) mov (bad) jmp movsb loop xchg loop or sub jne out mov add jne mov pop sti inc rcll lretw xchg loopne fbstp sbb jb icebp mov rorl cmpsl push or frstor cmp mov mov and sti xchg enter sub cwtl ja in add ljmp (bad) in dec mov cld aad push mov jb add pop mov sbb pushf stos mov stc sub pop or scas jne cmp sbb xchg mov jns imul push sub mov movsl push aas bound sub mov dec sbb ret fwait cmpsl (bad) xor or jmp fucomip test pop lds ret (bad) or inc or push jno outsb push mov and sub clc out mov (bad) lret pop push (bad) int cmp dec push leave pop sbb inc sub lret aam fsubs sub lcall loope jle popf lcall clc aam dec push sti das push mov mov pop mov scas xor mov imul pop jecxz push mov cmp lds push daa pop pop xorl into add cmp cmp or loopne mov push sbb push scas idivb and stc adc mov inc leave sub sub cmp mov mov (bad) popa and xlat ljmp and mov xchg aad aam pop mov dec cmp add jno imul add repz inc push xor scas cmp push mov jl push or sub jmp cmp and pop fwait bound (bad) stos movsl std xchg pop mov rcll push and das xor pop lods push and dec js clc add sub push fcomi adc (bad) mov (bad) out out add icebp sbb sub mov xor fs ret sub pop clc jl xor (bad) into movl (bad) jmp xor mov fist cli test out and adc inc add xchg inc das and mov loop cld xchg xlat dec test jecxz lret enter pop stc clc dec and sti jecxz pop mov mov mov ret sub mov xchg xorl cmp rorb repz xor and and scas out or add leave inc or repz ds dec dec xor sub pop ljmp push xor pop fisubl sub mov dec pushf mov dec int3 and lahf jno xchg je hlt add (bad) push sub (bad) in ret xchg lret icebp pop dec sub (bad) mov std push popa and lock cmp or stos xor xor push sub clc and outsb fstps sti gs dec dec sbb idivb push decl or xlat jns imul dec xor out das and rorl mov and mov std int3 jae sub pop or aad mov xchg xor sbb inc adc pop cmp lods sub jnp es sbb push dec sbb repz pushf scas fidivr mov mov fs sahf repnz inc xchg loop cmc mov outsl in iret mov fucom jle sahf test push cmp adc jae push and mov inc mov mov movsl pop dec mov loop sarb pop mov lahf daa fisttp nop (bad) leave and popa stos idivl rep pop mov subl push mov and scas xchg dec push mov divl insb je fisubr sbb mov pop (bad) out dec test xorb adc test lcall daa inc int pop inc ret in inc in cmp adc jecxz add imul mov movsb xor mov adc stos or call mov sub (bad) int3 adc repnz ret add and dec imull jecxz cmp add adc jmp dec mov add icebp mov testb pop add imul rcrl sub lods dec (bad) xor stos xor decb push sub add xchg outsb xchg mov and inc mov cmpsl xchg leave fs xchg (bad) mov insl notl mov inc inc inc or rcrl dec jne faddp sub (bad) bound flds call xor pop mov xchg stos mov mov and mul dec (bad) ficoml pop and inc or mov sti out (bad) fnstcw dec mov loopne inc pop mov (bad) mov push in test sub mov xchg jmp stos adc shl pop xor xor test dec movsb cmpsb add repnz push xchg scas xchg rcrb mov mov or out mov mov mov push ret je add xor add jne,pn (bad) repnz pop fidivl mov (bad) repz inc lret ds cmpsl shrb or dec dec scas fucomp sub addr16 push dec and mov ljmp mov adc (bad) int jle jp and and or push adc fnstcw push sbb repnz shr inc mov xor mov pop stc adc repnz (bad) mov jo inc test je stos mov or (bad) pop pop cli dec (bad) mov jmp rorl mov pop or cmpsl pop movsb xchg outsb lret jecxz pop ljmp call dec mov (bad) hlt mov mov es sub inc push lds enter loop sub xchg std mov inc mov push std or in push sub adc mov sub daa xchg pop pop dec xchg shlb sbb xor xlat cmp rorb movsb mov das fbstp push xor cmpsb mov and fnsave popf out ds pop fxam cs xlat or push or dec mov scas cwtl lcall (bad) dec mov inc pop out loop xchg push enter cmpsb (bad) das not cmp fstpl xchg mov mov sbb call mov lret cmp and adc xchg jae sub push pop fidivrl and je xchg ret or sub call insl scas rcrb mov mov push loop ljmp gs jp (bad) fdivrs sub adc add cmp pop mov or pushf dec sbb mov loope pop jnp (bad) notb fldl pop repnz adc in test (bad) jno bound push insb push sub jbe push (bad) and push fbstp xchg out ljmp push xchg int3 mov push adc push push clc mov stos lds mov (bad) jns loope insb lcall in sub push xchg xchg ss insb je lret pop xor out jg (bad) mov cld mov pushf add sahf inc (bad) insl leave mov jne fnsave sub gs into adc sti cmp push push fstpt test xchg (bad) fisubrl cwtl shll leave mov dec mov sbb in lea cwtl add js jae mov or pushf add inc addr16 pop leave fistl (bad) das mov icebp (bad) (bad) cwtl sbb (bad) jmp mov adc mov jne mov add mov jge jecxz in leave imul mov xchg into mov scas cmp sub mov mov mov and rcr adc out or rcrb icebp dec fistp (bad) movsl icebp fimull decb push mov ss out (bad) xor negl dec or notl popf push int3 sub ficompl lret mov or jo add adc inc push cmp sbb and mov iret arpl das sbb leave fs cmpl cmpsb jp xchg xchg out (bad) dec out (bad) adc stos sar repz scas rcrl lret and or in out gs and mov mov or fbstp lods jno cmp and jmp movsb add mov sbb lret fldz mov andb (bad) ljmp or jge lea shll push add ret cld rclb das ret aas fs out pop inc cmp outsb xchg pushf mov ret jns xchg mov (bad) push mov pop sbb loop push and adc and xor sub daa sub jae mov mov inc lds nop sub lahf (bad) xor js pop sub mov (bad) mov jmp push gs call fdivrs lret rol sub fstl mov mov rol or sbb xor out xchg jne movsb jecxz shr fdivrl loopne popf sbb add popf inc paddb push ret fistpl sub mov test (bad) ljmp xchg xlat add (bad) fs (bad) sbb sub pop pop (bad) movsl ja mov lahf cmpl sub add lcall shrl sarl insb repnz mov out stc fs push xchg aam stos mov dec test sub mov push stc ss out int imul mov pop or xlat jge sbb inc mov movsl divb das (bad) out mov add xlat mov lock pop divb out loop xchg add or (bad) xor add jge sarb adc inc repnz lret mov dec lods mov cmp stos sub outsb in push loopne scas aas and adc (bad) sub ja aam mov pop mov sbb or aaa mov or call xlat mov mov add add xor mov push sub dec ret sub ret or loope pop push sbb outsl arpl popf shll cmpsb stc jle (bad) fldt add imul dec mov mov xor mov mov in pusha movsb xor pop mov or jecxz into inc lahf test test and cmp sti les sbb sahf (bad) in ret sbb cmp xchg lock movsb mov ret sub and sub out and movsb xchg jmp mov mov push rcll xlat js cmpsl fcmovnbe push jecxz adc stos (bad) loopne not dec and popf test pushf xchg mov clc mov loope hlt scas (bad) mov jg sbb hlt (bad) leave hlt cmpsl push pop lcall loope loopne jl and das or xor ljmp lret xchg rolb incb lret xor movsb cmpsb stc loope cmp adc dec fbld mov shll add ljmp add sub or sbb sub les mov pop lods and lock std push dec scas popf mov int sub std push jmp (bad) iret fwait sub or jno xor sub or daa cltd in ret push adc cmc fincstp xchg enter repz cmp fisubr mov pop ljmp sbb outsb pop shll jmp push out push in mov lret sub aad aad mov dec nop inc push pop adcl out mov pop mov test mov iret ljmp ja mov sub mov ljmp jmp iret mov mulb xlat scas lret xor dec mov cmp cmp xor imul mov mov lock push dec push add pop mov mov icebp pop imul dec movsl ja cli adc add jmp adc out mov imul inc or add pushf in lock pop xor mov xchg fcoml int3 pop pop adc popa pop or dec scas ffree aas test add xor or or repnz mov test stc cli loopne push and xchg xor jnp xor loope ds mov sbb pusha dec test pop into stc jle or push push or pop cmp xchg xor and mov dec in (bad) xchg xchg hlt je mov or adc jmp lods xchg imul dec adc sti jne cli mov sti sub mov decb stos add adc mov rorb sbb and leave add mov jle movsl push (bad) xor pop mov pop jge sti das jmp (bad) out or mov push ds fs decl or pushf pop (bad) push inc xlat jbe jle pop fadd add loope test push and test push fstpt xchg pop mov push (bad) icebp movsl jl lods clc rcrb dec mov mov push xor mov ret pop xchg gs add add shrl xor jns jae pop rorb jmp inc sbb roll loop ss xor xor (bad) xor mov aas mov sbb mov ss out lock outsb pop mov leave loopne jecxz mov stos mov or jmp lds mov popf clc imul test cmp sub test mov js incl dec dec leave lea rcrl sub pop mov pop jbe xchg inc or and and popf add push mov mov pop test cmp ljmp or sub push pop add (bad) cmp repnz sarb test scas sub sbb sub outsl mov sarb sub cmp sbb arpl test and cmpsb adc mov (bad) fbstp cwtl cmp mov push push dec (bad) popa sbb and mov sub cmp ficom mov inc (bad) nop lods lds lock xor test (bad) pop adc xor repnz sub data16 push pop lret pop push shr cld mov ret jp dec setle out inc sahf and xchg into in mov and das mov pop xor jmp dec data16 mov enter dec test std and cmp (bad) leave leave iret jnp lods mov fcmovne jns (bad) xor sub add push sub cmp xor lret add mov or pop fcmovnb sub aad mov adc (bad) stos adc loopne add and int lods pushf popf mov mov dec and es jecxz daa mov xlat dec out mov dec sbb pop js pop rep xor push jle imul std pop xor fisub cmpsb jns gs mov sarb inc mov (bad) (bad) mov mov lea (bad) mov sbb into or xlat (bad) loopne xor or add pop gs mov cmp and xchg sub push jns paddw movsb jmp ret stos mov pop das xor mov or int mov mov cmp stos out or add and inc xor add pushf mov mov sahf cmpsb fisttpll movsl aad repnz or roll lcall daa mov push jge imul mov jne inc xchg mov and out dec pushf idivl jae jo mov jmp cmp je lds repz sub (bad) fmull cmpsl inc in add repnz xchg mov rcll mov push cld mov out jecxz mov xchg xchg xor int3 call xlat xchg sub movsl sbb repnz lods loope mov xchg sub (bad) add xchg in add mov pop out cmp mov add cli pusha xor jo call dec les mov jle (bad) out movsl stc cli cmpsb jp mov stos mov cmp xor or mov jge and mov out inc xlat cmp adc shl nop repnz xchg daa lret fbld mov fs jl mov pop rol ret mov dec push inc scas cmpsl pop mov jle cmp roll jb (bad) (bad) inc or jnp and cmc ljmp daa ret dec sub mov dec call das push xor dec (bad) out pop into mov cmc push movsb sub leave pop mov rclb stc pop mov xor xor imul xor fsub mov sahf add jp mov dec mov dec (bad) or add out mov push lcall std pusha (bad) sub dec or add stos mov shr data16 push repnz push or push dec push adc mov adc (bad) add mov std cwtl mov xlat ficompl (bad) std lcall xor or pop scas fs repnz or ljmp add imul push fucomi mov mov pop mov mov and and fsts inc cmp push and or sarl (bad) rclb outsl fildl (bad) (bad) dec push lock (bad) mov cltd fisubrl (bad) jns aas lods das leave xor jns mov shrl das add push (bad) out dec xor xchg jno inc call stc adc add add inc addr16 jge (bad) nop jg xor or dec int cmc xchg pop dec jmp mov xlat xchg adc or icebp and lods ret (bad) insb inc lds repz push jnp ror insb je push hlt stos lret addr16 gs enter call pop lret lock pop dec in mov icebp xor out jp mov lods int3 cmpxchg pop icebp xor pop mov not les inc into (bad) jbe jbe cs in sub das jo sub inc ret leave fsubrs mov push mov data16 push stos cltd pop jg frstpm(287 mov daa arpl mov dec cli das test icebp sub cmp daa not sbb stc push pop mov imul mov xor std cltd jns imul ret out and imul out sbb cwtl mov cli push sahf lock repnz and or dec pop sub inc adc fsubrs push xchg cmp (bad) lahf cltd sub lahf or rcll out nop loope loop mulb enter testb cmpl ljmp sbb adc es and pop cmp pop (bad) mov repz leave notl or ret mov std dec lods add dec bound cmpsl mov cwtl xchg sub xchg js (bad) jmp scas daa repnz adc mov pop popf add ljmp jns mov or into sub aaa lahf lds add jbe out js jb xlat mov jmp mov lret xchg aaa addb call or out add pop repz in jae push sar fstpl cmpsl push (bad) pop adc nop push popa insb sub pop and dec int3 or dec ret idivl mov into (bad) stos mov push fisubrl fnstcw sub xor dec sbb xor xchg xchg or add daa popa inc out rcrb add mov xor sti aam rorb jne fist mov push jnp xchg out cmp loopne scas (bad) imul lods mov cwtl dec jge in sub mov icebp pop gs (bad) sub push icebp pop xchg fisttp (bad) jg push mov push xor jne add and add lahf addr16 das xor ljmp insb out lret xchg ffreep mov loopne out xchg pop jb adc nop clc (bad) xor cs loop sar push lret xor dec ss movzbl mov pop mov roll cs loop pop adc dec and in cmpsl add xchg (bad) jae (bad) or xor mov add (bad) jno lret test jnp or enter xchg sub call cmp adc sti imul xchg mov loopne mov lds lret mov mov push stc sub (bad) mov lret stc pop int3 pop mov inc into mov lods adc loope jae nop mov (bad) and pushf (bad) mov push cmp cltd mov (bad) loopne call aas xchg ret inc loop insl inc push mov mov sarl push nop (bad) mov lock add fsubrs dec and icebp sub int3 push icebp scas push dec lret leave and sub in fadd adc mov jle leave ja test cs leave and lock mov dec mov sub xor jp adc ror dec daa adc or jb sub add or push imul int push mov fwait iret or adc xor add (bad) cmpsl sub ds mov mov push lock pop or adc call sub jb mov adc push push rcll mov das or dec add mov adc aaa mov xor mov out mov cmp loopne mov ljmp or push and mov add xor push pop xchg add push cwtl pop out jge fcoms jmp lret aad insl push (bad) scas adc cwtl push xchg mov std cmp sbb sub adc adc hlt xor mov dec repz in mov push lahf xchg bound mov dec pop scas (bad) cmp into fistl shll or icebp adc mov mov pop cmp popf mov sub or jp or aad jge je (bad) daa xor (bad) pusha inc shr mov adc sub test mov xchg hlt das dec dec adc imulb das (bad) cwtl shll dec cmp xchg fcmovnb pop xchg xor xchg push nop jnp mov and lods inc cmp add in movsbl mov sub divl xor out push inc popf (bad) sub adc and mov push jmp push add not inc cmp mov pop sub pop or dec push dec cmp sub and jle mov jecxz add dec xchg xor rorl push mov inc add movsb jbe jge jecxz fild or movsb sub in add out pop sar mov cmp icebp test ds cmc pop mov cmp das push fadd push push cwtl push insl mov pop pop repz xor mov shrb push push mov fnstcw sbb jo xchg jg or dec es loopne pop xor mov sbb mov mov or adc pop and stos xchg movsl mov pop and bound icebp pop int3 jp fsubr out mov cmp ficomp fisttpll mov ret jp outsb in inc mov or negl add push stc out pop call lcall je pop loope sti mov aam loop or cltd lods inc jnp sub pop rorl ds cmpsl jecxz out imul mov (bad) add cwtl xchg jecxz dec sbbw pop push adc fldcw gs push add mov stos mov lret adc mov sub pusha add imul xor add incb sub sub mov and fistl nop mov lea cwtl leave movzbl xchg jecxz xor pop jnp addr16 jne cwtl mov repz inc out xchg cwtl jb xor pop aaa insb dec jecxz sub dec xor ss inc inc or repz loope sub jg stc mov (bad) jmp dec popf idiv jmp xor (bad) bound adc xchg jno pop and loop pop cli mov fstl stos (bad) sarl mov pushf pop mov dec adc fcompl (bad) insb ss jne loope jle push or xchg call es fnsave pop push add sub xchg das mov stos daa jecxz jmp jno ret daa adc jmp out cmp xchg pop stos push jae sub inc fwait (bad) lock add add add mov fiadd aam les and push inc cli sub cs das testb xlat or lods pusha jno cmp jg xchg or or push repnz jb popf push push adc mov (bad) jg inc sub add add movaps sub inc add jle sub movsl pop sub out fdivl pop push lret lret pop imul mov pusha xor add mov mov js cltd jo adc mov or sub adc rorb cli das add movsl sbb sarb scas sub xor call rorb push add and int and dec adc xor pop and (bad) xor stos lock lods mov and cld xchg leave push dec fs push mov pop xor stos lahf adc dec call push cld jbe les les cwtl jmp lds and cmp push and xor xchg lds mov and mov fistpl lods fisttp or (bad) test into and fs push repz lret add (bad) in mov (bad) mov push ss adc ret mov push add jge pusha gs pop push jl jno sub jp popa andl imul fsubl cld shrb adc inc cltd lods (bad) mull xor pop into ljmp add scas jp mov mov (bad) pop jecxz pop and call mov or movsl xor scas or (bad) or fisttpll inc leave fwait jno mov and xchg test pop add cmp dec mov dec test popf mov sti sub cmpsl (bad) and mov shrl clc das sub jge mov jae lods cwtl mov clc jne outsb aaa cs mov test rorl (bad) pop repnz decb leave and mov test push push movsb dec (bad) mov loopne lret xchg mov aad lods xlat icebp push dec leave rcrl mov add mov imulb sbbb ret out inc add adc or in cmp xor and inc aad adc je popa mull add fistpll mov pop jmp repz dec out pushf xor cmpsl dec repz mov sub lds sub repz and inc lcall push (bad) push sbb in mov ret or movsb scas pusha test xor dec mov and test xor insb nop and and add (bad) mov sub loope iret stos mov leave lock add aaa shl and xorl jnp mov inc iret daa cltd lods or int xchg push pop lahf sti int ret xchg pop mov sub xchg fiaddl stos mov lret jle fstl stos push add xor xor xor sub and add and pop xchg mov inc cli jge fistp testb out inc mov hlt xor push push jno test xor add jge xchg pop and cmc lods push add xchg lds sub aad std push pop add out mov push icebp mov (bad) mov push fisubr cmpsb scas aam mul push jo loope pop clc into xchg je push jge scas push mov out mov pop inc leave jmp lock loop push pop cld imul pop pop and mov arpl pop inc enter add pop nop inc outsl xchg or mov pop pop call (bad) ret or into or sti movsl mov mov push std jl cmp adc xlat xor or sub pop out sub pop mov or xor fucomip push sti in sub fnstenv test lcall add mov cltd jp lods or sub sarl loopne mov mov sub pop outsl or push dec cmpsl xchg add and and xlat and mov ja jp xchg out (bad) ss add sub and push mov push jae cld dec leave push pop jae jns test es jne call (bad) cmp add push imul jl pop sub push xchg ds cli pop outsb or jnp adc push mov jns jecxz dec not or add add sbb jl add pop (bad) or inc push pop pop ret and dec (bad) push xchg cmp add push pop and je push jmp pushf adc cwtl nop xchg rorl dec push xor lret xorl inc test add add add inc imull jnp pop jbe add pusha push or hlt mov mov and push adc std dec mov je rorl out xor out mov sahf add std xor push adc bound pop dec loop xorb jge mov jg or pop loopne add aas or pop jmp jae,pt imul pop jmp or pop lods mov add adc je movsb or inc lea or push subb adc dec lcall mov insl and sar ja or scas popf aas push inc xchg fild addr16 inc sbb movsl je cmc mov popa pop inc lds mov rorb pop mov xchg add ja cmc (bad) int3 add popf cmp lods mov push dec pop in push jge fs call add ret mov pushl mov push push ljmp repnz jb sbb out xchg shrb mov mov popa jno leave xlat add cmp pop in incb and jle out imul push (bad) cwtl or pop mov inc das inc cmpsl push in lods aam pusha sub mov jno mov jp ljmp inc das ret clc stc pop cmp mov xchg cmp repz adc jo stc push add jge out add movsl add sub popf test iret add xchg xlat push mov dec lret test fisttpll (bad) push cmp movsb add cli cmp jns push cmp xor (bad) shl js or adc pop hlt xor pop imul das icebp push inc idivb (bad) mov enter leave fidivr cs pushf ret mov (bad) scas imul xorl xchg xor and xor inc lret dec call test test and xor mov cmpsl stos or jno dec inc push daa imulb negl pop rolb sub sub scas jecxz daa cmp ficoml in out inc mov dec pop add dec bound repz cmp arpl mov inc lods dec in jp pop cmp outsb sbb mov pusha pop add lcall sbb add cltd sbb sub push aaa xchg call scas bound bnd test inc cmp mov xor sub repnz (bad) add mulb sub inc out nop xchg popa out adc mov cmp mov and dec xchg icebp aad or mov out cmp pop jle in pop xchg cmp adc ljmp lret xor sti imul add push out movzbl mov inc xchg stc movsl call or lods sbb (bad) sub push inc and add repz or mov mov push jle jmp leave nop xor push or je mov sub fist dec call dec out lret mov push adc or xor ret xchg test xor std cmp js shlb dec daa outsl sbb (bad) lret jns,pt dec xor mov lods into cmp and xchg mov fstpt dec and mull mov add movl xchg jl lds mov adc fstpt test test sub nop test test enter add pop mov pop enter add divl rcrl testb jg mov or jmp das ljmp das mov pop shr in out fstpl ds cltd add inc pop (bad) jl mov push sub aaa rcr sbb mov test and jae jmp and and or mov jge movsl fidivr int3 or mov sub mov pop (bad) xor mov inc (bad) leave sbb xor and fdivrl or jmp add mov dec mov or xchg or daa add adc bnd sub sub nop sub mov ret ret repz ljmp xor test lods jnp (bad) cmp fadds pop and add loop jl pop loop notb sbb add outsb pop jp cwtl xor lret mov cmpsl test xor add and mov stos pop out mov divl push pop movb cmp cmp add (bad) and outsl loop (bad) test rol fnsave lock das int outsl (bad) fiadd sub mov loop (bad) mov xor cmp xlat push mov rorl arpl sub add pop mov inc cmp jecxz cmp std icebp xchg scas mov and inc mov ds fnsave inc add push lods mov mov xchg out lea and mov pusha (bad) rcll jbe adc inc cltd xor in gs xor and mov je mov mov and les cltd ja icebp jl mov xchg mov or pop lcall lret xchg dec mov ret pushf jne sbb cltd push mov push mov sub fistpll stos movsl push inc fstl ljmp out xchg dec aam ret (bad) mov stc and pop in or cmp shll and int imul or mov adc add jmp sub ljmp cmp add xor icebp ss pop popa sahf add xor push inc icebp test shrl adc xor cmp mov mov outsb push pop out mov xchg xlat loop iret xchg fsub push pop xchg jmp jge mov scas pop sbb je jae xor ds cmpsl in dec or dec xor and or test mov rorb scas sub and aas sub ret pop mov and mov pusha cmp in jmp cmp mov add and sti lods fucom gs jmp insl fidivl cli xor sti jle sub loop pop movsb out push adc fbld lods push inc push enter cmp mov jbe out mov cs mov (bad) xchg divb das mov xor mov dec out mov add cmp shrb lahf or cmp out mov test lock or jmp inc adc outsb sub add mov dec iret jle int fs cmp ret cmp lods xchg or cmp mov push and xchg add jae cmpsl pop sbb (bad) imul and imul stos lret testl inc xchg ror xchg or xchg pop lret inc pop mov pop test scas add xor pop cld icebp dec jne mov das loop mov inc or or testb xchg je xor sub test and or test cmc or push jnp das pop fistpl jo lret paddw bound fidivr dec (bad) ficoml push push dec divb push das push fmuls sub out adc or ss lret xchg pop mov sub pushl lret aam ss ficom mov add stos (bad) cmc jle iret jle push inc out push sub dec int ret or cs fdivrl (bad) popa addl sub sub xchg dec mov inc sub pop loopne imul sti jb out xor jge inc rorl repz mov test lret movhps lret int sub adc test push or adc push rorb out dec std push add popa cmp jmp sub mov mov lds in jl scas int3 sahf clc xchg (bad) fsubs orl or aaa xor in lret lea push rolb addr16 jnp or dec (bad) loop std inc mov xchg subl jmp icebp rcll mov call (bad) fcmove push sbb cmp repz rcrl push pop pop test (bad) sbb jle add (bad) repnz cmc shrl dec fnstenv shrl stc pushf inc mov sub mov lods cmp call clc and or mov scas int rcr (bad) jmp sarb std mov aas sub dec cwtl dec push push mov cmp push mov adcl rclb push push pop adc push mov or sbb add inc sub sub or sub jbe push push mov cs icebp (bad) ja and mov inc pop neg rorb cli sbb add andl aas cld jb push dec pop popf out add pusha mov sbb clc pop pop add or (bad) mov icebp dec push dec je push pop sub push fildll lret aad scas adc loop jle sahf dec mov and flds or add push pop lahf cwtl int in mov and sub sub adc (bad) push pop xor fstps into mov mov push push in xchg add faddl fdivp rorl mov out into jb cmpsl inc and xchg dec sbb or pop mov mov mov push inc xchg adc ret lahf xchg mov xchg jb repnz cli movsb insb dec push insb xchg pop pop and jle push add sbb or adc xor jp jmp scas mov sbb lds or mov xor or lock aam adc stos sub hlt int or or jne fucom and mov popf jl pop pop into ljmp xor out arpl xor movsb add mov movsb mov mov outsb cmpsl jl xor xor mov mov cmpsb insb fs pop lret ret adc mov int3 push (bad) ja sti das xor out mov das cld ret daa sub jbe pusha repnz data16 xor ret mov lahf push add pop pop add je scas repz inc mov jg test mov repz aam das cld stc mov pop outsl pushf mov mov outsl push adc or sti pop mov lock jbe mov xchg jno outsl mov mov push xor ljmp in adc mov mov and mov and push shr xchg or out daa mov shr rorb jo std and cli (bad) jecxz xor repnz test sub sub mov xor mov leave popf cld stos xor ficom jmp and aas dec cli repz sub push adc jg icebp rorl aam xor lahf xor (bad) lret jp xchg ror outsb mulb and cmc dec leave neg outsb jmp rorl test scas mov inc cs and imul add fcoml inc rolb sub jnp lahf mov jne mov into mov jl repnz mov loop sub loop xchg ret sbb cmp clc pop or mov dec repnz xor mov (bad) jb div fwait fs xor mov cs outsl fldenv adc rclb stos mov sbb and in lahf loope sbb mov xor rcrb xlat stc pop dec aad insb loope jl pop in test repz daa cli and and and cmpb dec push mov mov add fbstp mov or test jle adc mov test sub cmp daa or je jno dec sub add cld test or out (bad) mov ljmp lret hlt ljmp mov jge mov lods pop ret pushl add mov or cltd fldt in dec add push shr fbld repnz cmp mov mov jnp cld fisubr dec jge mov inc mov mov lods insb or xor xchg jno std repnz push (bad) lahf aam pop jl add jbe pop dec mov xchg in test movl xchg cs js xchg cmp jle jmp cmp xor icebp cs cmp push loope lret xor loopne insb and imul inc icebp mov ficompl js cmpsb jb push and leave (bad) cmp pop iret mov and ret dec add scas les in dec daa push lock scas fisub fsubs dec pop mull in lds lock dec (bad) loop xchg mov mov imull leave stc loope loop (bad) repnz (bad) jne or into adc cld shl test stos out pop std xchg sub inc mov divb sti je mov das adc mov sub sub pop std repz or aas shrb sti push fmulp cmp and adc and inc icebp enter adc orl loop lock movsb sti or cltd pop cmp jmp xor addb pushf imul ffree imul fsubr mov gs push dec add jb xor xchg gs inc add jo repz jbe (bad) jmp mov and mov sub jbe jle inc ficom in and xor orl mov cli clc cmp adc sub xor int3 jae dec into xor (bad) inc scas and call sti push (bad) adc out sub in fsubl and jne inc std test add and mul sub scas (bad) into and pop jns (bad) adc jno addr16 adc mov or cmpsb enter rolb lret cmp sub jo out xor mov push or jae fldl lods shr sbb sub mov push icebp es cmp pop mov aaa adc (bad) repnz movsl sarb mov jle xchg ret mov ljmp pop imul dec into daa shll test pop lret icebp pop mull mov sub mov xor push and lret pop dec imul or iret jne outsl dec mov pushl mov aaa daa mov jg jp xor sar fldcw jg out mov inc testb rolb push add stos xchg into jmp or mov into pushf sub nop cs add js or cmp enter orl lret enter dec into lret add mov sub push add sbb scas mov push fildll or dec cmp ja sub (bad) adc mov sti xor add sub xor cwtl in popf mov fldenv cli negb andl das iret lods and cmpsl std nop add mov or cwtl push xchg out lea xchg mov xor repz xchg lds arpl test aaa adc dec jmp xor cmpsl xchg sbb leave cld xchg lret hlt ret (bad) (bad) or shrl mov dec mov xor repz xlat push insb xchg daa into sbb jmp pop add movl mov iret xor lcall inc jmp adc int adc xor fildll mov push mov mov pop jns inc mov cmp xchg dec out add jge xchg mov sub cmp lcall ret adc or adc ret pop stos (bad) (bad) rcll fisub xor mov mov (bad) push push pop aad roll cli cmp mov leave aad in sarb lret sti lret fwait bound enter push jl push dec jmp je or dec ljmp rcl in or dec (bad) pop jns cmpsl je cmp iret add stc push push dec notb (bad) mov (bad) arpl notl sub xor jle push xchg fistp pushl call pop scas sub in (bad) aad sub xor mov cmp pop or sbb adc shl icebp adc sbb lea idivb js dec cmp lahf mov pop jnp adc and mov push and hlt dec jbe test daa into push movsl jmp mov xor clc ds mov (bad) pop call sahf fwait jb xor inc lret sub jnp push push mov fld fwait sub jg pop rolb push int3 lods xchg or pop mov pop in int mov or ret ja ljmp ss mov add and movsl jb popf lock repz cli xor pop loopne xlat mov insb pop jmp aam (bad) je mov test pop pop sub push cmp dec sti sub dec mov xchg stc sbb cltd lea enter or mov push ljmp add jmp out stc popf insb xor mov test sub out sub inc sub xor test loope cmp shr rorl mov mov call xor aaa xchg shrl adc jmp sub mov out or clc sub adc adc loop lret out pushf add mov xchg out ret dec hlt andb icebp pop mov call je mov icebp adc pop sbb add aad std daa jle push loope sub mov mov push aas or (bad) mov (bad) or ret lods mov ds in xchg cmc xor fsts mov dec sti cmp jno dec aad mov fimul sub mov lahf adc jmp (bad) pop bound cmp repz mov insb popf pop mull adc sti shll idiv add cmp add stos push and idivb loope gs mov pop jmp insb out int3 push icebp jmp and fnstsw sahf cwtl mov stc push roll fidivl cmc and xchg ret dec dec out lret ds cmp sub loope loop loop test enter clc xchg shr das add aad mov (bad) (bad) or mov mov les shll movsl inc out sbb cmp xchg scas xchg aam gs mov dec xchg mov push movsl sbb sbb clc int push ljmp das lods call cmp or dec and adc mov and ret mov and and cmp scas (bad) shr data16 es mov dec mov pop cmp stos mov add inc and sub leave sub scas fs rep add pop out nop adc into sahf fisttpl pop xchg mov and xor xchg inc cmp dec jmp and push mov outsl and xor jne adc aas dec sub jbe push push das pop testl subl or and rcr daa or mov push int3 mov add xor add std into sahf mov stc jge mov out cld dec popa push push mov pop mov push and out add pop add push mov orl xlat sbb pop (bad) aas dec sub sbb sub mov leave push sti movsl xor add jle ret mov cmp fldl mov test test mov sub cmp jno sub aad insl fisubr and cwtl (bad) adc lret push ds mov mov jnp sbb movsl cwtl sti cwtl or adc jg lret pop pop ljmp scas push (bad) or imul loop cwtl mov mov pop (bad) aaa adc into fstl outsb test clc mov lret mov xor pop lea dec hlt mov dec data16 jge cmp into dec xchg push pop adc shrl sbb mov ss je and jg mov push (bad) jb jecxz lds add cmpsb mov nop adc adc ret insb sbb cmp lahf or lds pop imul and sub mov std stos rorb sub pop daa push adc lret repnz cmp mov nop add arpl jge adc inc loop xchg or cmpsl or cmp jnp add iret jo sbb adc sub mov jg pop mov or cmp fldcw scas pop xor push ret repnz jle popa aaa xor jl iret fnstcw lock out cli fdivrs mov (bad) rol sbb jns std lahf mov mov and adc mov leave inc repnz xchg loopne jmp loope cmpsb daa xor xchg xchg xchg popa push shl das add jns jmp jae mov inc ljmp mov outsl xor enter cltd xchg add mov out pop add mov out dec sub mov mov dec sbb out xchg mov imull out sub jp in lret fdiv push push xchg lahf ret arpl mov sub mulb mov mov pop les loope adc push lods fstpl (bad) push xor in ret es dec je push add jmp pop scas imul mov jp les es pop or mov xlat popf jbe push fs pop dec loop pop cmc out jle imull movsl js xchg (bad) or mov loopne (bad) xlat fnstsw and divl hlt sub mov fs lods inc dec jno add inc shr mov xchg sub pop and mov mov mov lds push aad pop push ss or add fstpt add dec cmpb js mov scas mov roll or fstl jle sarl repz data16 clc and mov mov hlt mov fnstcw loopne sub or aad std inc lea add lods pop dec popf adc adc into sub into (bad) xor lds (bad) into ror sub in or and xchg xor clc lahf mov popa fsubr jle xor out sub sub out leave popf sbb fnstcw in sub or stc xor js (bad) push (bad) loope lret mov mov push mov outsb sub adc ret jle inc mov mov out outsb test add pop test lret sub scas lret data16 enter lret or repz pop stos or sub dec mov incb add ffree das (bad) cmp cmp pop adc push and xor sbb imul int sub xchg adc mov jne push das lret sti and sub das inc nop sub popa cs sbb pop repnz orl mov imul leave into negl pusha repz mov pop mov adc jae daa fstpl hlt outsb mov sub cmp pop jg (bad) in (bad) mov test fs orl xorl jmp jge fldt sti xor cwtl je out mov jo cs push pop popa or data16 mov sbb inc adc rorb insb inc ss cmp popa repnz (bad) mov js jo xlat pusha call jecxz and cld mov xchg fwait (bad) (bad) lock xchg je testl jmp cmp mov pop pusha or xor or push mov mov pop lods sbb lods stc leave (bad) push rcll sbb xchg or fs scas test movsb cltd daa imull pop (bad) jne sbb test sarb cmc mov xlat cmp mov outsl or cmc in mov xor mov repnz sahf lret notl ljmp sub jb dec movsl pop rclb jle sub stc sbb jl xor enter sub xor sbb xchg fldcw pop (bad) xor jg pop mov push cmp xchg sub mov call jmp gs scas cmp ljmp cmp mov mov mov add jns fs and adc pop lds ret outsb adc push xor xor mov add xor mov hlt sub push dec pop divb push inc rcrb mov sbb leave (bad) lock and fist out out es out or xchg adc adc mov and sbb push mov ret dec lods scas dec int3 pop and iret jno ret inc mov out mov adc add push fmul fisubl push adc push or pop ret and push mov xor or adc aad jae pop jecxz or stc mov (bad) and xchg leave lret xchg or call je hlt xor xor bound pop fidivr (bad) daa xchg sahf gs dec jecxz loop xchg sahf lds mov mov and or dec nop ds and lret (bad) stos sarb popa mov repz xchg cmp mov sbb jp lods cmp movsb mov add sub imul call jle jae lods jnp push cs inc scas mov cli mov shrl repnz fmul decb sbb mov movsl xor mov pop mov aaa mov push and xor aas (bad) fcoml das push pop icebp cwtl das sub iret adc (bad) idivl (bad) test in xchg xor and addr16 mov push mov lods ret (bad) jg loopne or push mov outsb or stos testl jp adc in adc sub loopne jmp call dec bound adc xchg or push mov out cli jno icebp add out mov pop ja (bad) and ret jge out (bad) incl sub add mov out xor cwtl or rcl loopne mov push cmp bound lret movsb stos sub or (bad) add cwtl or mov jb popf fsubrl and mov out sub jle (bad) gs pusha ljmp jmp and mov cmp cmp mov adc add add adc jo mov xor mov imul jns jl mov and outsl mov and mov outsb lods push mov fild push mov xlat insl dec sahf push ret aam fbld xchg sbb mov mov pop or cmp out jle daa ljmp add mov sub iret cmp scas pop push push in pop mov out mov (bad) add jne rcll xchg fidiv bound sbb pop inc dec or xor rcrb push mov fwait dec das orb inc fsts (bad) inc rolb shrb inc adc xor xor cwtl push or rol ret je sbb (bad) mov mov xor movsl sbb and and add dec mov das into sub popf sub clc ss lahf inc push pop inc dec jge xor (bad) mov push sub in jae ret rorl lahf daa js pop pushf ljmp adc add dec lds jle or cmp jnp (bad) add stos shrl adc sti mov sub mov push or mov pop mov jno dec fcomps ljmp jle outsl sbbl loope inc lret add pop lret sub pop mov push (bad) scas mov dec stc mov sub jecxz insb repz pop hlt or fist sub mov add lcall xchg repnz sti sub idivb rcrl stc jae xor ja push lret cmp jmp test dec repnz mov xor xor test ljmp fs dec xor outsb (bad) ficompl jno dec stos (bad) (bad) pop push pop push lret lock (bad) mov push fistl scas mov sbb add data16 mov call les stos imul mov cmp leave adc pop hlt bound sub dec out in lods adc dec inc ret dec dec cmovg jp jmp sbb out sub or jecxz adc xor dec jecxz add loope,pt or pop imul lods shrl (bad) mov jnp sahf pop pop imul inc cmpsb pop les outsb mov popa mov dec lods outsb test mov fidiv ljmp adc repnz sub mov mov jo mov std out add sti sub cld int aas les cmp mov inc roll and cs out mov mov jp (bad) pusha test daa cmp add jecxz jb xchg out adc lret je fsubrl imul je je or mov aaa jmp mov or maskmovq notl stc mov sbb cwtl lods jmp fcompl or pop xchg jo add and pop sbb fcoms imul mov and shrw daa pushf jmp ljmp mov notl xor mov adc test fimul and xor imul push arpl fs push push iret and arpl fild daa mov insb jbe into and push repz je popa mov mov stc xchg out pop adc xor pushl (bad) cmc xor (bad) lcall inc mov inc ficoml arpl out cmp mov dec int das cld xor lods orl mov or add push dec rorb popf test cmpsb and dec les roll dec push out and jecxz out mov add in jecxz dec push lret fldt loope loop mov jle add leave nop dec mov push test jmp xchg xchg nop cmp sbb push fcomp dec (bad) out lret mov movsl aad rcr fldl xor and add out stos gs xor add or clc sub daa imul add sub js xor cwtl movsl sub cwtl push mov mov arpl xchg test lret aad mov cmpsb cmp loop les pop mov mov (bad) pop or sbb out das (bad) and gs cli mov (bad) (bad) pop dec mov sub xchg mov mull mov jmp and idivl mov xchg mov cmp sti xor xor outsl popa and test lret (bad) std gs mov cmp in stos sub loope sub mov test sbb lock scas mov out push mov dec xchg je test mov ficom mov in mov xor lret cli rcrl and fldcw (bad) outsb out divl clc add add test add dec pop outsb and test or cs test negl shll add jge in adc push shrb loop adc pop xor cld scas cld mov xlat cmp jo add dec (bad) sbb insb jno js fstl icebp out fs mov inc or mov test in xchg and and jg inc cwtl gs cmpsl cli mov hlt leave jp inc pushf sub and xchg icebp mov gs adc ljmp pusha out gs popa xchg mov test test push mov mov push cs ja push jmp scas sub ret push add pop (bad) mov adc iret jecxz pop cld fdivrs pop lret les scas sub xchg xchg mov cmp add mov pop test das cmp cltd cld (bad) aaa sti jb cs mov xorl and adc mov (bad) jbe push and sub mov cld and pop cltd mov shrb enter sub or pop inc outsb movsl push add sub jo xor jmp rcll pop mov pushf dec mov in lods mov bound sub mov adc fcmovnbe clc outsl (bad) (bad) mov xor adc inc jg bound xor and or scas xchg lcall mov shlb outsb mov sbb shll repz je rcrl jno leave leave gs mov add xor push bound lock (bad) pop and jno fwait lock std out repnz xchg int xor test pop test pop daa and popf aam imul and daa pop lds clc jnp pushf pop cs data16 push rcll xchg enter dec mov das sub pop sbb push ret arpl adc xor pop ds xchg lret jne jp dec xlat jp loopne pop mov jno xor sub xchg push leave xlat out icebp cmp sub pushf mov nop mov mov (bad) lret fisubr inc fsubrs mov jae mov cmp cmp mov cs fist imul or or adc mov daa idivl es cltd mov mov and (bad) fstps daa inc cmpsb pop xlat and adc add sub mov pop hlt ja jae movsl push out out adc hlt mov mov mov ds sahf das negb and jno test or cwtl or mov cmpsb out dec loopne stc mov mov dec cmp (bad) in insl movsb in (bad) repz in mov xor cmp stos lock add or mov adc cld ret mov gs repnz xor insl xor pop out sub pop fldenv pop sub add mov jns lret cli iret aad inc or xor jp les les cwtl jb jle cmp stc adc (bad) icebp or sub pop leave push push push mov out sub sub sub add jmp bound sub inc cmpsl icebp inc popf adc xchg ret (bad) or fldz inc or outsb push lret dec stos or add cmpl cmpsl daa gs movsl or push add lcall lds mov (bad) lds fnstsw push imul (bad) or enter (bad) rorl inc pop push xor (bad) aas cmpsb push mov clc popf sbb aas leave pop xor clc aaa test (bad) inc ljmp fldenv (bad) adc iret ljmp test test fisttpll sub scas sbb sbb sti cld pushf (bad) and add and fisubl mov frstor mov lahf xlat cli (bad) dec out sub push sbb fidivr mov add mov lods dec movsb in fcoml mov icebp and sub bnd les add xchg cmpsl cwtl lret (bad) mulb flds movl xor ret or mov mov fmull loope idiv fiadd sub sub add pop mov add roll pop push les mov xor leave jmp (bad) fbld xor mov xchg push lret data16 hlt inc bound leave sbb push sarl add mov adc or rol repz pop xor lods pop xchg xor jecxz in mov ljmp imul fildll ror stc (bad) xchg (bad) mov dec dec jns dec ffreep dec inc jmp aaa mov (bad) cmpsb adc xor aaa mov fisttp xlat in jl push notl push cli jae pop jl repz push movsl jnp cs icebp enter xor xchg add jb ret jge xor rorb mov pop xchg mov test test sarb dec pusha or lret add ja movsl adc div dec cld xor sbb add ds out les adc into movl nop dec ljmp push clc push lahf dec inc sub push pushf (bad) add mov sbb push pop jmp cmp mov xchg out cwtl push adc aaa xor icebp ret and add das mov scas push fiaddl jg test mov or pop mov sub mov out mov icebp lcall dec or fbstp push push arpl cli bound jbe add and pop cli out sub xchg (bad) ds dec fdivs lcall jle hlt movsb shll jg mov pop and dec sbb subl cld xchg lret negl leave push outsb es push insl ds outsb mov leave fnstsw mov xlat push push sub fnstcw popf and or xchg clc xchg aaa call xchg fmulp lock aas repz lods hlt flds inc dec push and outsb negb lret loopne mov shl (bad) sub subl lret lock and cmpsl hlt sub movsb mov pop lret add jbe inc adc in lahf lds xchg mov test lods iret mov sub int3 mov dec mov pop pushf adc test mov add sub pushf mov add lret xor rorb pop xor repnz xchg pop notl and and dec jmp insb mov mov xor (bad) cli sub neg rol sbb ret mov stos sub or add inc ret mov mov jl lcall es sbb push dec repnz adc and inc aaa xchg (bad) mov ret add leave xchg mov (bad) sar pop sub lret movsl inc andb ret xchg add inc sub ret jnp adc stos idivb dec or fstpl cs rolb addr16 jno push cmp cmp mov leave add push dec sub inc sub negb xchg push add mov dec out test sub daa sub sbb mov mov leave sarl outsl cmpsl pusha fimul (bad) notb repnz cmpsl fnop and (bad) icebp mov aas xor mov add and or pop nop mov lock inc imul dec dec sti into or imul xor stos repnz scas mov adc popf or jge jle and pop mov jmp jmp pop xor cmpsb (bad) jbe out pop popa xor dec decl sbb aam repz mov mov loopne aas mov (bad) mov cmp cwtl repz push push cmpsl mov xor scas sub and xor lahf ds scas mov daa pushl pop out pop or ds cmp dec add sbb xchg je or sub das or inc sub mov ss and movsl mov les mov loope cmp loop in or (bad) insb rcrl push mull loop dec aaa pop mov std lods mov xor or sub leave sti aaa (bad) dec repnz lds push mov cmpsb stos imul lret sbb jno data16 dec sti fldl inc mov and jl es xchg xor mov xchg lds sarl lret icebp cmp sub ljmp jb sub or push fisttpll outsl jge call xchg and xchg pop popf mov pop int3 inc add pop test aam sub bound inc pop aad add mov ja jo lods add xor outsb rcrl push add add movsb mov aam inc xlat xlat (bad) lret add push add (bad) mov lds stos out dec adc cwtl in dec xchg insb mov fcoml sbb into xchg adc mov loope and xchg out inc xchg or out mov mov add xchg in push dec sbb out test pop fcompl leave jge or xchg jmp mov call sub ss pop das mov icebp xchg xor mov add adc cmpsl pop mov and adc jle sub inc stos add cld sbb stc arpl adc out ror add mov sub (bad) aad fisub icebp push mov rcr jecxz xor in lods mov cmpsb push bound push or xlat clc pop sub in clc lahf (bad) dec gs js or mov push push mov aas xchg or insb mov enter (bad) push add (bad) mov add out push lret adc and adc out sub out jno ds imul leave or push xor mov enter rorl pop (bad) lock movsl decb in add int3 mov dec pop testl mov fstpl imul adc out mov (bad) jmp ret inc and push cmp lods movsl push pop dec sub add or lahf and addr16 icebp mov rolb dec sbb push xchg push es push mov aad push xchg jle imul add ljmp mov aam mov fimul fldcw daa loope movsb or les subb fwait push pop and mov int3 mov ja xchg sub sbb mov sub shlb mov mov shlb (bad) out movsl push lret and ret (bad) xchg mov ja mov ret scas mov jnp movsb and jnp lret pop jmp in stos repz (bad) xor push repnz xchg scas int3 adc pop idiv daa xor cmp mov jg mov cli ss shrl ja xchg jge test je inc add lret sub popa (bad) pop cltd das test shr cmpb ret bound or (bad) mov add in push dec pop (bad) (bad) xlat lcall mov jne sub or sbb inc push push loopne pop sub lods mov scas xchg push lret jge ds ljmp push push inc dec mov dec testb lret inc (bad) mov jb xor sub cmp shrl repnz stc and mov or test mov jne out cs shrb ret add mov push sbb dec mov fcmovne adc sub xor lods stos test dec cs push scas xchg out scas sub mov or leave inc outsb cmp sbb pop in leave popa repz sbb inc or ffreep pop cmpsl xlat jcxz push dec jmp sahf in out and xor test pop dec cmp loop test repnz inc fiaddl fs mov stc setb xor and dec iret pop lock ret mov notb jge enter and fnstsw call sbb negl mov dec aam sub test pop pop mov sbb fildll and mov sub jg pop repnz (bad) mov sub pop jno xlat out and leave idivl pop push mov das negl xchg jne icebp mov shrb jle imull mov sahf dec dec add mov push or fstpt xor out push xor push xor push cs and clc (bad) push push fildll mov cmp shlb (bad) jns dec pop mov mull adc mov (bad) in mov loop lret pop push inc mov lds mov dec pop push xor adc jp jbe push or pop and inc sub inc out xchg pop decb outsb es adc pop add mov (bad) mov lds fs xchg lds dec mov add or mov xchg mov sub push xchg fistpll sti mov mov les dec xchg pop je incl push leave clc adc aaa mov mov pushf mov enter lods stc out and dec sti and pop jmp cmp or dec idivl into xor push pop divb out pusha in sub das loope jg dec cmpsb ret and sbb mov stc dec sub rorb in xchg out hlt out or inc mov fdivr popa movzwl inc popf sub aam out lret mov shlb sub insb imul pop sub pop in lods jno jecxz or cmp movsl test xchg and sub les dec shr in leave divb xor sti push jns movsb addr16 lret je and (bad) add jne int icebp cmc xchg jmp dec lret or (bad) aad push daa jl adc scas lea mov mov scas mov pop push jmp mov xchg les ja sbb sub divb pop push leave jg xor insb sub (bad) shll sub lods or aas sub or pop fiaddl cmp ret mov xor xor pushf jne loopne (bad) cltd sbb jnp rcl pop add loop lcall je les lret mov dec push stc fcoml pop sub or pop or jne pop or add adc cmp mov movsb adc and sbb loop ja cmp jmp cmp push std sbb pushf test adc loopne (bad) lahf jbe cmp or xor and jge pushf ret enter lods adc add (bad) lods pop lret out pop fs daa inc js pop xchg hlt dec jb push jecxz (bad) sbb xlat bound inc cmpsl (bad) iret mov pop jno or inc (bad) repz jp fbld push (bad) es adc push ret or push popf inc adc stos mov xchg cmpsb pop test negl pop push xlat xchg (bad) lret push mov repnz out cs dec fstps jmp ret inc xchg lock (bad) adc mov jne repnz xor into xor cmpsb enter or jle lcall mov cs jmp xchg cmpsb negb mov bound dec js cltd add rorl sub mov gs mov (bad) je cltd dec repz sub mov or or sub jle lret fidivr cltd movsl or and mov and outsb scas xor xor daa or sub push out fisubrl (bad) fs cld repnz jns (bad) or cli cltd popf outsb adc pop inc lods pop mov mov repz cmc repz adc mov jle cmp shll mov adc jmp push pop addr16 notl xor les and aam adc mov shrb jb rolb jnp inc (bad) ja add pusha jle push push sub (bad) push pop rorl fstps xchg or mov xchg mov pop jae lods out roll cmc push cmp scas add mov sub jge lock push cltd pop add dec call push loopne ljmp ret xchg inc push adc jne,pt xorb push add mov pop mov pop das and popf pop or leave out ds int mov cmp cli ret inc negb xor ffreep in test (bad) test add (bad) xrelease scas sub pop xor pop mov jecxz pop adc scas repnz aam fdivs mov jb jbe sbb ret ja js add (bad) xor pop pop push (bad) (bad) mov int into and jmp push adc inc and or (bad) mov fucomip jns ret adcb pop in dec sbb inc dec lret or jae and jp xor mov sbb scas or and ja rcrb lret mov mulb xchg lods sub xor pop rol add sub mov add dec lea shl pop jmp movsb lahf push mov pop in fwait jb mov int lods stos add inc mov loope int xor pop (bad) lock mov arpl lret cmc inc rcr std insb jecxz pop dec lret stc int3 cmc push loop dec mov bound leave cmp mov fisubr movsb imul or sub pop (bad) xchg xchg jnp outsb inc xchg imul or and test xor cs inc jbe fstps dec jo mov out adc pop mov je imul ret adc jne and cmpsb inc out mov imul mov imulb test je pop imulb stos xchg icebp ljmp mov hlt mov daa mov adc add leave xor sub cmc stc lock push call lret mov dec push push jg,pn adc mov mov les lret mov and jns test add or in stos popa dec ret mov in mov pop dec jmp repnz xchg pop imul repnz add mov test pushf movsb insb jo mov mov sahf lods mov imul sub idivb push mov mov test add mov mov iret push ret xor or mov sub nop ja xchg xchg (bad) lock fcmovnb adc repz out ret sub lcall push or mov sub call and fsubrs stc add fisttpl movsl pop xlat mov pop cs out test icebp cli and in pop mov into jp push dec in jmp adc (bad) out test out mov (bad) icebp add pop int3 inc out rol dec mov fwait daa mov xchg mov mov imull into pop push jns mov xor xchg mov sub ret inc add int3 mov out sti cmp sub popa ror pop pop (bad) repz outsb jg push cli and lea push fsubrl adc negb cmp ja adc xchg ss and in mov push daa push cwtl cmpsb add daa sub jae movl loope in xlat cltd jmp push sti js movsl jge mov xchg ljmp pop jno mov add daa hlt push mov jne sbb adc and sub push loope push jmp pop or inc pop lods and hlt insl xorb pop leave bound adc and xor dec jmp sub xor enter fidivr inc out pop lods dec sub xor pusha out jge add sahf sub out dec mov push push fs mov adc fiadd lahf xchg rcr sub imul add ret and or (bad) into idivb mov sub and or dec and fisubl imul or ljmp jp lods add xchg push ss pop or mov lds pop and jle test add lahf dec test xor sub push fistpll ljmp pop ljmp jl imul (bad) xor adc ljmp (bad) pop or loop lret cli cmp ret stc stos inc push mov mov mov xchg pop pop jmp or call leave or into or fadd cld mov imulb mov xchg out int3 loope push div and test cwtl or or adc inc repnz mov scas mov or movsb outsb dec fisubr jmp jmp clc movsb dec mov adc fbld dec add jb out fucomip in (bad) add popf jl and dec jne mov out mov mov mov cwtl sub lahf jae jmp enter adc loope aaa mov adc add pop movsb stos sub (bad) lock mov sbb fadds ljmp adc ja stos mov pop stc mov pop out or or out sarl mov out cwtl cli (bad) xchg in pop fisubl (bad) and mov lds push mov jo xor das pushl push leave leave fldenv jg adc mov sbb xor mov mov sub cmp lods in je adc shr lret cltd enter or dec add xchg inc or pop inc mov outsl cwtl bound std fwait or and dec pop movb add pushf psadbw jae jmp adc repnz xchg out cwtl cltd sub mov lods xchg ret adcb push xor cmp lds pop adc pop cltd ret inc add xchg call jo mov imul mov mov sar pop add mov push xchg lds adc (bad) orl inc mov ret rolb sub ja push loope je jb sub rorb notl mov rsqrtps sbb fsubs ret fcomi cmp xor sti dec test jb lret cltd adc mov push jnp out sbb inc pop test or push push divl ljmp push sub cmpsb jae (bad) adc out jne jecxz and dec or ret mov mov stc xor iret pop mov leave leave pop stc cmpsl negb (bad) aad ret xchg xor rcrl aaa xor push dec pop jmp inc daa sub lock or lret out shrb mov xor or mov mov daa (bad) js leave in cmp cld sub aaa stos mov divl xchg and adc aam in cmpsl nop xchg mov sti lret xchg dec or jmp nop repz stos bound or mov xor pop frstor fadds or outsb push dec and lcall ret or xor loopne and jg inc cli jmp add pop imulb mov adc out pusha adc sub popf testb dec clc icebp adc scas je jmp sbb jmp sub xchg mov mov cmp scas into insl adc or sub cmp imul xor data16 les js fcomps sbb (bad) mov dec xor les cltd mov xchg jnp sbb cmc push rcrl jle xor lods ret and pop adc mov pop lret mov dec scas fs mov or insb nop sub mov (bad) or dec and jae aaa ret push mov mov repz jno outsb or jl popa pushl into jns dec jge push daa sti xor and mov pushf or hlt test sub dec pop xor leave pop mov (bad) mov dec xchg jp (bad) xor add mov push push lahf jp jae pop mov in scas mov pop mov push mov xor or shr pop ljmp add jmp dec incl push cmp dec imul mov sahf cmp mov adc push ret loope ds mov push pop test xlat sbb scas sub js int sti shrb sub lcall adcl and jle sbb sub cmp not sbbb (bad) cli cmpsb test fidivr push aas mov mov mov lds pop mov outsl pop dec scas sub mov xor subl dec cmp test fistpll lret test pop cli out or add repz push aas jg dec iret rcrb ficomp fmul ljmp add movl icebp test xchg leave or xor aam popa leave push push cs pop lahf ret xor (bad) cmc pop mull (bad) in (bad) repnz lret jne sbb fwait mov push pop push inc xchg mov sub pop shl push pop xchg xor ljmp sub out mov pop add mov fildll adc rolb (bad) jne add push mov enter pop fucomip dec mov (bad) and sub pop (bad) cli mov into pop inc ss in mov (bad) ss mov movsl fildll push add push add xor add cli jmp inc movsb shr jnp es sub imul add dec pop adc nop out push mov push mov stos or std or outsb dec cld sti pusha push pushf or insl dec push test or ds or or dec dec dec or dec clc ljmp clc pop pop jg cmpsb dec xchg mov stos cmp out das sbb mov sarl repnz and fldcw repz jb ret jb adc xor stc xchg push or mov mov data16 (bad) push mov jl (bad) into jecxz and mov push sbbl ret jg pop and lret enter or fildl jmp pop repnz ljmp loop (bad) or and pop ljmp dec inc mov incl jno mov cwtl push out das ljmp lret dec js pop sarl mov sar adc or sub xchg push push pop adc scas fcompl push divl movsl loop jge add fdivrp mov fwait inc mov dec decl sub stc and xor jg cwtl mov or jmp and decb adc xor loope das lret aad scas repz xorl fs push dec xor mov aas je inc jne (bad) jmp call insb pop test cli pop divb add sub out arpl mov pop or (bad) pop std arpl fsubs repz or cwtl js lret hlt (bad) xchg push sub sti mov in shrb jp test cmc dec test fdivrl stos test pop imul cwtl loope mull add fisub ds dec js xorl push lret push or cmp inc sub add inc mov xor jne sbb loop xor cmp or sbbl loop cld cltd fisubr mov and mov cmc xchg push sub jmp jae std (bad) repz cmpsb nop addl sub add mov add jg lods jmp mov add mov mov and or loope das or loope outsb movsb or ret lret daa sbb jne movsl fimul idiv push jl (bad) icebp mov cmp adc mov cmc int3 inc dec and mov jle scas push mov (bad) sub out pop or xchg add sbb cmp xor sbb leave mov pop (bad) jmp or inc add iret loop or lock cli fcomps mov and xchg jae add lea add push add fs test dec or call imul add shr testb add add adc les adc add or int das (bad) repnz adc movsb adcl call aas repnz or (bad) jl shll cltd inc arpl mov push pushf adc sti repnz frstor xor jge mov daa or lret ret cmp cwtl mov arpl jmp in cmp icebp repz and xchg add dec stc cld cmpsl mul gs leave data16 ss pop or mov divb loop lods mov xchg lret insb pop cs pop test or dec out repnz dec loope pop cwtl or out sbb in cmp sub mov daa lret (bad) ljmp push xlat test or push cmpsb or cmp dec dec addr16 mov (bad) xor loope xor cmp xor xor div jns imul lahf push adc lahf push stc es mov ja inc pop inc clc inc xchg inc fs inc test enter mov lock jns es enter das fdivrl ret pop cmp ss std cmpsb mov ret pop and ficompl sub inc mov jbe push push dec mov ret jge push stos sbb ds or loope and add mov loop xor pop mov adc sbb sub pop sbb push mov test faddp adc cwtl fucomi scas out mov mov mov push clc mov or pop fisttpl sub test inc out sub pop stc mov xchg push out jne mov jmp pop rol push mov sub jge rcrl sub cmpsl imull std in push outsl fidivr dec repz pop dec dec jg imul mov je lock or cmc cmovbe into push add incb push in dec (bad) adc subl push mov pop pop mov shll icebp mov bound jmp (bad) adc and jp push (bad) mov xlat or add mov pop or popa clc xor sub dec xor mov setne lock popf and mov je not mov and adc add mov shlb stc in cld pop rorb inc and push add add mov repnz (bad) xchg adc push daa in push (bad) or fs enter xlat ljmp movsl out pop xchg (bad) stc outsl mov call test rclb xlat fldt rcrl (bad) rorl and fprem xor pop dec add iret push stos xor dec repz repz add sub xor jmp ja cmp inc movsb mov test pushf divb in out test adc (bad) push rclb pop rcrb cmp adc in faddp and cmp outsb les add cwtl mov adc cmp into lret add push or call dec out aad clc (bad) lret xchg dec and loop in cmp les clc jb fsubrl jl enter mov bound sti mov imul sti lea lret enter sti and sub ds (bad) mov add hlt sub icebp in cmp iret mov pusha test popf bound movsl ja xor out inc movsl sti leave sub enter push inc sbb mov push mov inc cvtdq2ps jge sub add scas pusha cmc sub or je repnz sti jg cmp dec mov sarb xor out lret scas jno xor das mov jge pop in lret (bad) idivb loopne sub mov xor les dec lret xlat pushf popa mov ljmp or xchg ret dec dec sub into pop sbb mov pop add std push lahf (bad) jne out les ret xchg fbstp mull pop inc rorl cmp or cltd aas pop lds leave out dec dec pop inc adc sub movsb pop call ss and dec mov popa movd mov adc (bad) scas xchg xlat or adc xor xor mov xchg dec jecxz lret jmp or lods xchg jbe pop xor mov js sub jno mov ret lock aaa mov in add push das sub jnp movsl pop outsl lock pop outsb call cmc inc ffreep mov loop cmp in ja mov sub sbb mov xchg pop dec scas inc outsl pop add jle push pop jle sub dec mov and adc xor out dec repz stc aam in out mov das jmp sbb movl mov mov je adc jmp loopne sarb or xchg inc adc fsubp mov iret inc ret sub cs sub pop push sbb sbb adc mov inc lret add mov xlat cld sub iret (bad) repnz inc or add aas shll neg cltd pop out jle jl sbb lret daa dec (bad) fsts lods or xchg mov out hlt pop cli (bad) adc pop mov mov ficompl mov xor aaa sub ud2 out out and cs xor xchg addr16 and (bad) mov (bad) repz pop or lret xor mov cmc xor ja movl or sbbb cwtl mov dec and mov push push mov test nop repz xchg rcll jnp rorb pop mov mov fist and sub shrl daa pop jmp mov cltd adc loope in push mov jle pop js add scas out dec jmp cltd test mov sbb sub mov push loopne xor push and jne sub divb fadd leave push ja rorl push dec add xor cmp loop pop mov add sti daa dec and adc scas lret insl sub iret mov mov mov pop lret or enter in das mov xor or mov pop sub jae dec push xor lret lds push inc dec add mov adcb lea arpl pop mov mov adc lods or cli sub jp mov mov ss loop hlt mov mov das fmuls dec lea (bad) dec aam scas mov sarl mov gs push add mov push (bad) mov cltd imul pop xchg jmp fadd pop sahf adc mov pop aam stos adc pop jmp inc rdmsr jl test pop out jmp jl sar mov iret jno jl cmc mov pop cltd mov ja bound add aad pop xchg pop xor inc cmp mov dec mov out pop add mov fcompl sub cli popf cmc sbb add push repz adc fidivrl and or and dec add mov enter mov pop out hlt cs addl jmp dec mov lcall inc sub xchg sbb add (bad) xor int frstor cli mov xor pop add shlb (bad) adc stos sub xor clc sbb adc pop add or mov push mov imulb jg push pop popf sub mov imul xchg (bad) out push xchg (bad) push xchg fnstsw sub sub mov outsb fcoml pop adc arpl lods xchg movsb mov cli lret cmpsl add add lock (bad) mov es pop cmc fidivl into and test into mov fidivr lret mov bound sub jae das aam out xlat xor mov mov repz lock and mov loop (bad) or rcrb push and je mov and (bad) call add js mov adc stos repz mov sbb xchg mov mov fmuls repz rcrl lods scas negl push and iret outsl repz inc xor or mov push shll jbe push xor in (bad) shr out dec jp test fbstp add fstps cltd add mov notb jnp mov jecxz div dec pushf cld add fsubs pop or addl add pop pop packssdw mov ret mov (bad) inc (bad) adc idivl add inc roll lods out cmpb sub jp xchg ljmp push push sub dec stc out cltd and icebp cs hlt in or ret leave and js sub insb hlt call sbbb je mov or mov add add (bad) push xacquire dec push mov push pushf out loopne xlat xor mov sub mov mov imul mov rcl xor sub xor (bad) out pop adc lea fisubr in aaa popf movsl (bad) pop gs fsubl jmp mov cmp popa and movsl xchg stos loop jae adc out mov xchg adc dec lret loopne ret mov loop jnp adc pusha ss add stc xor adc rcrb push shll mov lock loope aaa repnz (bad) cwtl or loop mov lods mov add mov mov jno rcrb cli (bad) dec mov or int3 cmp inc or cmpsb push cmp dec mulb cld nop iret xor ljmp dec dec mov xor (bad) and (bad) jmp ja inc cmp push das inc lcall in stc popf cmpsb setg mov (bad) jo call clc or and lods and into test repz mov sub jl outsb mov push dec aad mov in ret push push fstps lods adc ljmp add lret add dec ret jg sbb stos fs push dec fcmove pop cmpsb fmul fistp insl notl inc out repz jb idiv stc les hlt cmp adc dec icebp lea adc repnz adcb fucomp sbb rcll test clc test in das les lcall test and push fmull cli fisttp cmp jo popf jg (bad) jo loope loop,pn xchg sti popa stos sub push rorb loopne cltd loopne pop repz push in lahf iret xchg out dec movsb icebp xor lea test inc xchg and (bad) xor add adc leave pop add push sub dec (bad) pop leave fisubr lret add adc in mov push mov jmp (bad) cli ret pop fimul push mov das cmp pop adc loopne repnz adc xor push mov adc or push mov jno push call inc mov push insb outsl inc out adc into adc push inc xchg (bad) addr16 xchg mov test mov push in lds mov push inc and fdivr mov popa popl (bad) jmp xchg out popf divb outsb mov and outsb adc ret je xor jnp cmp mov cmp jl out mov fbstp fstpt into pushf test xor add xchg adc sub sub sbb leave dec scas mov push adc jbe jmp scas dec shrb jl push push dec dec or adc and lret cvtpi2ps bound in loope add and lcall (bad) pop mov call pop mov es std inc popf gs push jb bound aam xor adcl cwtl ret ret dec cmp jg fmul mov and fidivr shrl (bad) xchg sbb ficom fs divps pushl add fisubl fstl jmp sub xor fstps cs clc (bad) xor out xchg or movsl mov divl jno bound pop out (bad) lret aam les lret mov out sub sub jne arpl enter adc stos sub ret sub repnz adc mov sbbb imul dec xor xor mov mull and xor mov inc fsubrs mov iret dec std pop inc jp mov leave sti jecxz push mov mov hlt mov and aad inc sarb gs mov repnz ficoml sub jmp nop lcall inc idiv jo (bad) push or (bad) push clc movsl dec adc mov jo cltd push (bad) inc je adc jo mov or jno data16 xchg mov add or push sub add mov push daa inc out cld cmc inc lds ret imul fadd push xor mov cmp and lea add test call stos mov out or lret xchg loope into sub loopne call sbb or les mov scas repnz std push fidivl or mov sub sti sub mov cmpsl sub or mov (bad) xor into aad stc icebp and aas (bad) (bad) push mov jne add lret scas push cmp mov sbb data16 mov loope sub inc sbb aam scas mov sub inc mov sub mov xchg xlat xchg xlat sbb imulb ficom or xor pop xor repnz ja (bad) popa dec adc mov les loopne inc nop js cmp out mov jnp mov xor ljmpw inc add out out mov fistp aad lahf shr adc xchg and ljmp ret xor adc addr16 dec jne push (bad) cwtl (bad) xor ljmp adc add sub ss mov aas bound (bad) add pop xchg ret cmc (bad) (bad) dec cmc cli pop mov or leave (bad) mov push mov daa ret inc add sbb mov push pop or mov mov aam daa jge sub push das sub (bad) std imul or sti insb cmpsb out push push push mov add push insl pop test add cmp int pop dec sub or pop push pop clc lds inc fwait inc es or add push mov popf int push jg arpl adc xchg inc mov pop test add push leave das push not (bad) bound out jle and mov xlat ja jns inc nop or mov jo pop pop push add not sarl mov push add cmp pop pop add mov ljmp push lds dec add add push popa in mov jle sti add repz js cmp push and push loop ficomp dec das or xchg out out or mov sbb jmp add pop fstpt mov popa nop xor pop push dec or les or mov push neg add sub mov jg fidivr sub or push pop mov lret sbb lcall cli loop dec dec loop adc fistpl or mov dec popf pop outsl jge and jne inc nop out jg call push mov inc adc movsl adc idivb or add push push push pop mov mov loop into fiaddl (bad) sub dec xchg xor mov mov sahf out push mov notb or repz xor adc shrl xchg ljmp sbb mov dec pop sub stc jmp mov mov (bad) xlat repz sahf and cmp test adc lock pop enter adc xor les sub js test sub lock (bad) mov imull inc in mov dec ljmp add or lret mov inc or icebp dec jnp lahf (bad) xchg les fsubp add iret add add in jge sbb or lea mov adc sub (bad) mov sub cmp pushf leave cli rcr adc enter jg mov (bad) stos jb (bad) adc ret cwtl leave cmc jns leave jns cmpsb xchg or pop push clc movsl daa iret sub cmpsb or lcall fcomip inc dec (bad) (bad) mov cmpl xchg add cmp push outsl ljmp pop dec iret (bad) je out gs fldenv or add sub and inc daa or jmp (bad) xor mov (bad) enter (bad) push or pop adc cltd jl (bad) xchg sti dec mov dec sbb cltd dec aad scas lret (bad) sbb push push rclb mov rorl jmp pop imulb xchg and xor out pop cmp mov add mov push in in sub insb mov and sti fist lahf adc scas mov sub sbb push add shlb push das and sti pop inc pop and mov inc dec push iret sbb pop jmp lahf sub cmpsb dec aad pop sbb mov das pop lods lods out cmp gs mov mov xor or mov sbb jae fist inc mov xor jmp cld test dec clc pusha mov and lahf sti mov sub mov test lret pushf and dec pop mov daa sub xchg aas sub mov pop mov lret jae push push push and lods xchg push push sub jg int cltd aas dec mov out mov or out mov push push cmp jecxz adc and and mov push outsb jmp mov add push jns xchg (bad) jmp fidivrl xchg out mov mov mov dec lods adc je or sub lcall ret push imul add xchg jnp sub add lock (bad) xchg jns imul dec cmp sub imul in aas repnz aad and es popf mov icebp push or clc js fldcw push sub dec cmp dec mov pushf dec push and xor shrb or je imul dec vpsubb lret dec (bad) test cmpsl clc mulb jmp add xor (bad) mov xchg pfnacc add ss pushf js sbb sbb imul dec pop push jg mov dec insb add sub push test mov pop cld inc pop into cmp mov test mov outsb pop jmp negl pushf out pop popa rolb adcl sub outsb mov pushf lret xchg mov xor xor mov test fnop ret fisubrl xor sbb decl add stc test test mov xchg adc call or pop movsl notl inc pop sar rcll or in inc test movl mov sub mov lea or adc xor nop imul fist out gs cmpsb mov sbb out pop cmp pop gs (bad) es fmull data16 pop xchg mov in mov dec fdivr mov dec fsubl hlt push adc cmpsl mov rolb sar mov shll lahf xchg stc cmp aaa dec pop sahf adc (bad) std out jb dec outsb sub push scas fsubrs aad or movsb sub movsb popa xchg pop mov aad loopne add pop repz cld inc es pop or dec stc pop or mov stos mulb push dec jp mov or dec mov iret xlat repz inc insb movsl divl mov fnstenv leave jle daa sub push adc pop sbb ret arpl xor lret das fmull cmp add jmp sbb mov dec push repz arpl xor dec sbb or out jecxz adc xchg stos cmp in xchg dec mov xlat out (bad) sub (bad) cli or aad mov les jmp test fsubrl fsubl pop cltd pop imul mov ret stos bnd lea test ficom ret jmp leave call (bad) repz push add ja inc daa mov xchg mov pushw loopne push into movsl subl xchg dec (bad) pop cmpsl push add adc (bad) cmp stc jecxz or lret xchg mov outsb jne mov xchg and jmp push (bad) scas or cld es mov lahf push cmp (bad) aad nop (bad) push rcrb add mov insb ds mov icebp sbb idivb or (bad) mov mov sbb cmp out pop leave mov into dec div inc into sub cli mov add arpl or rcr dec jne jae (bad) mov stos mov out inc aad clc ja xchg dec mov loopne out dec mov sbb das cmc mov cmp scas pushf jecxz mov jo cmp lods or push mov push daa pop cli popa inc out sub gs aaa dec rcll sub pop movsb mov xor out mov pop mov or sub das xor pushl imul xor sub (bad) (bad) dec mov (bad) outsb imull std (bad) push rorl aaa mov enter sub pop mov dec loopne inc cmp xchg stos add (bad) test pop xor in daa mov pop lahf adc push dec (bad) dec ljmp sub rorl test and mov xlat cli (bad) pop dec loop ret mov (bad) push push ret popa and xor cmp mov mov mov das jmp fwait movsl idivl jne mov ljmp and push lds mov ret ja shr sbb fdivs ret dec xor dec hlt push push jmp push jmp xchg or add jg das popf idivl sub or mov daa in adc adc sub scas dec mov decb sar imul mov (bad) addr16 xchg flds and sub das mov insb fdivl and out push dec adc (bad) cs out mov adc mov mov je ret adc stc out in (bad) cmpsb jbe div pop call bound mov and inc pop jns test sub stos (bad) fs mov sub rcrb sub test lock inc lahf test cld xor dec icebp test jno push jecxz or xor jl xor or push dec sub cmc divb aaa fdivrs adc xor gs lahf xchg mov imul or jecxz sbb xor call inc ror out mov and mov xchg loop xchg stos cltd mov xchg and lds popf inc fsubp jecxz (bad) cmc mov adc xlat xchg sub jge or inc negb cmp ljmp mov inc lods sub or add call les imul sub add pop sub mov out adc in cltd shrb xlat sbbl or xor mov mov fisubl (bad) push dec sub lods (bad) mov dec cwtl jb dec and xchg xchg (bad) push or fs ljmp mov jae adc or (bad) dec ds je lret (bad) insb cmpsl xor sti jp add call fcmovne cmpsl pop xchg leave mov pusha mov or xor pop push add popf fstl stos jecxz adc mov jecxz push mov (bad) add pop into xor fidivl and cli mov sub jle adc xchg push add mov repnz mov sub aad and (bad) jb xchg out mov popf push sub out ljmp lret pop dec mov xchg xchg inc pop push inc mov addr16 sbb mov and xchg cmc sbb push inc (bad) cli inc pop jne jnp (bad) sbb insl repz lret je sub (bad) xchg inc xchg (bad) mov aam jb push add and lret leave sub (bad) pop and xlat cltd and repnz loope call stc and xchg (bad) sbb insl and std lea sbb out jnp push mov (bad) enter mov lods lcall repz rorl or xor ret pop out jb icebp out fs adc pop adc mov xchg push sub mov notl sti add push repnz mov loop push mov aad pop xor xchg enter mov add js lret ljmp popf fdivl jae xchg mov push das sub loope gs adc push or sarl xchg aas or and mov push xor fldl push sub mov push sahf sub imul jmp mov xor mov cmp scas pop mov push call lock and fdivrs xchg (bad) cld (bad) fistpll xor sbb into add clc outsb xchg adc cli repz out xor adc call or roll test add sub in in cmpsl push out sahf popf adc mov jns push cltd out out xor mov daa out add outsb adc test lret (bad) pushf aaa cmpsl in and je lods cs fmuls xchg pop xor and sub aaa leave push insb inc (bad) divb dec ret or xor xchg lock int scas les call sub jg mov into cwtl xchg popf into pop xchg inc lahf jno arpl lret sub test cmp cmp idiv rorl xchg xchg scas fxch add cwtl adc sbb mov shl (bad) dec jnp movsl jmp in lock mov repz lock pop cld push dec mov test fistp stos sub subl mov imul ja mov add bound adc push stos sub jmp lret lds xchg xor enter jge jge dec xor jne insb adc xor int3 leave and jge adc jbe and sub imul inc aaa dec repz or xchg mov negl mov add sub xor and and mov xlat shl out sub mov xlat out mov jo mov out cmp sub jg push pop insb idivb jbe gs flds std sub mov jmp scas shl pop push test je lret jbe (bad) pop push lahf pushf mov aam push or jo mov mov dec in sub rorl (bad) jnp xor es and pop add ja sqrtps jg pop in mov insb xchg movsb stos adc in xor test int3 into or mov icebp loop mov fidiv call mov push jecxz sub sub or iret push rcll int das cli gs (bad) lret pop or popa jp jp mov daa jle sub sub in daa aam jp in add cmpsb mov push pop add cwtl std sti jnp inc lods leave sub jl xlat std dec mov lock movsl dec out cwtl cmp xchg push test stos bound cli jbe bound shr lret cmc dec jbe pop out and mov xchg xor sub or (bad) and jno out dec inc js repnz repz push jl xchg xchg mov ljmp iret push sub push (bad) dec inc fisub add push insb or ret push out mov clc or add mov dec (bad) imulb ror mov fsubrs ret xchg lds in or sub les rcr inc ljmp pop lds pop lret negb push (bad) jae std insb lret cmpsl jns xchg pop out das xor add add mov faddl movsl adc mov js loope sub repnz (bad) movsb mov jp scas dec aad stos fdivrs fdiv data16 jmp xchg dec stos cmp jg cs neg or cmp cli add loop ja out push call or xor and ret inc sbb and and sub js mov ret cs int3 in mov and rcr mov jmp iret xchg push add sub icebp dec icebp call out (bad) loopne adc pop mov inc cs mov and daa shrb push js movsl lret aas scas pand mov or mov lock sarb inc out popf in mov loopne out inc mov lcall adc add mov mov std out in inc jl leave mov mov or std outsl test sarl push and xlat xor sub (bad) cmc (bad) xor ror xchg mov push mov mov and not mov nop cwtl lcall ljmp (bad) jmp in mov mov rcl jg stc sarl inc pop and das (bad) mov sub pop outsl xchg daa sub and stos xor dec loop or in daa sarl sbb lea cmp into xchg out adc mov or sub mov jle loopne daa faddl mov pop lcall sub cmpsb xchg and adc dec lret fidivl in or pushf imull daa data16 dec iret stos push cmp jp rorl jnp es jb loopne (bad) sbb xchg lea imul xchg pusha pop xor les cli sub cmp inc (bad) mov jecxz pop mov adc out adc int push es std add add (bad) xchg (bad) push dec lcall push cmp ljmp faddl iret xor rolb lods add ljmp mov out cmp movaps and jnp movsl std xchg or jnp sub add and repz sub mov mov aad mov leave mov ret aad hlt imull push mov jmp pop icebp xchg (bad) ficompl repnz lret mov (bad) mov aas jbe gs mull adc test das mov fistp push and jno mov js,pt add out and mul xchg or xor add out mov cmpsl or (bad) xor adc popf inc inc jnp adc scas mov dec repnz repz cmpsl sub out nop pop ret sub sahf dec mov and in dec and xchg out sbb xchg (bad) push out test and inc pop out fs add sub cmp xor or add mov sub sub and ja jecxz jle mov adc inc adc add (bad) sub scas xchg jl fucom std adc mov and cwtl rclb inc icebp add inc mov out addb and add popf je into xchg sti mov mov push lods pusha shrb dec std (bad) xchg push (bad) movsl inc adc add stos add (bad) insl addr16 jmp adc and enter das call or xchg popa and jmp pop add sbb cmp insb incb lods call rol mov mov in mov imul push cmpsl fcoms sbb add out int outsl icebp mov sub nop xchg and jecxz cld aad data16 test ret mov imul fstl das ret fstl lods sbb pushl cli fsts or push xchg sbb and push aaa or aas lea cbtw sub adc mov xor test mov int3 sbb (bad) out test (bad) mov call cld cmpsb xchg pop stos and sub mov dec js fsubrs xchg jmp xor mov jo inc mov mov not stos push push and loopne jmp pop mov lock and add or pop mov divb add bound pop jg ret dec pop daa jg mov inc test mov mov bound dec inc and (bad) xchg mov jle addr16 (bad) mov movsb (bad) lods inc inc adc mov or jbe or add xlat sub push aam bound ficom add iret and scas inc xor xor repnz mov push or addl bound insb divl popf pop outsb xchg and lods ds jecxz (bad) pop jle fs mov adc xor lods mov mov sub and sub into mov repz idiv enter iret dec stos popf mov jns lret or pop lret adc and or xchg dec lret push ret adc add shrl repnz cmpsl insl sub cmp pop or cli incl cmc insb pop lahf out loope sub pop and repz inc pop je imul mov lock jns sub lods jne sbb add push out fstp repnz add or and sub pop jle dec xor xchg loope sub xchg push push ds sub leave aas and test adc inc and sub sar lret in add add mov sub aas mov adc pop negl pop push pop or movsb sub mov ljmp and pop inc cmp inc in or pop iret stos sub dec gs mov dec inc inc and repz jg call call mov std sub std mov fidivr mov push dec cld mov fnstenv (bad) imul mov ret mov mov mov or in xchg cltd fldenv lcall mov test test xlat jmp cmc (bad) rcr fs mov ror pushf sub pop jmp mov enter push hlt add push push mov lods cltd pop in adc pop push jbe sbb sub jg push or mov lcall mov and or clc ret ja not jae das stc int3 (bad) or sub pop clc dec add jae notl xchg fstpt popa jmp fisubl stos push mov mov jno push mov mov imul nop leave sub push mov push negl loop xor add push jns xchg fucomip js adc lock sti notb out and or loop jne xchg adc mov jbe push xchg mov add popf jmp repnz out xchg jecxz (bad) pop dec scas and (bad) daa push stos cld add subb aas clc (bad) mov gs das adc clc cmp xor pop or inc flds inc xor add mov test pop shl je lret dec pop test mov (bad) lock and fnstcw rcl clc pop enter mov mov subb fldl jle push repnz je and dec in push jg jne dec movl add xor and out ret jbe jmp fs ret int3 dec sub cwtl sarb (bad) in push (bad) cli lock add idiv mov mov xchg inc adc jl out pop loope cmp (bad) mov inc mov mov mov jb sub scas mov in pop out lea or pop mov jmp add and sti lret add pop dec sub out lret outsb adc xor adc add inc jmp fs aas sub and out adc jmp dec ljmp daa outsb lods (bad) out mov jmp in push rol fucomp and pop sbb dec mov mov lods jbe cmp (bad) inc jb sbb xor jmp or cltd in ds addr16 adc push adc call pop adc idiv popa out (bad) sub (bad) adc call movsl jp push imulb fsts cmpsb into pop stc xchg in inc xchg scas cmpsl jb shrl mov jecxz or xor (bad) loop shrl jecxz pushf sub mov pop add and xor call (bad) (bad) push dec aaa ds ret mov adcb mov je out imull scas sub push mov push fistl (bad) push iret xor mov mov pushf and xor ret scas ja addr16 jg xor inc in push mov inc adc sar jmp push jge cld jl push je pop ret cmpsl das lds cmp xchg push adc daa lods repz int3 pop add outsb jmp shl and loope aas adc repz xchg fs out adc mov and or mov pop mov fnstcw aam in mov cmp jmp lds cmc lods loope mull or or push popa dec lret and sti dec lock outsb popf xchg add push push leave test lods jp (bad) arpl adc pop lret ja repz jne push data16 rcr cmp lods (bad) notb (bad) repnz cwtl fildl jbe cld xchg jno ss and out sub add loop push mov mov call test add and rol add or test js mov (bad) mov cmp into (bad) sbb icebp icebp dec sub repz mov (bad) repnz inc inc das mov sub test pop mov mov lret sub fwait inc (bad) pop push or add mov pop sbb add sub (bad) in or aad push dec pop int3 xor pop push xchg idiv xchg jmp or add loopne out gs cli je adc push jne in dec pop xor in sub imul std sahf ret or pop jp (bad) add (bad) sub stos fldcw lds cld push in xor (bad) mov push cmc pop into add and out in leave movsb mov jbe add fsubrl ficomp pop (bad) mov lods pop dec je lea jns das in push in popa fs loop xchg fsub out xchg call arpl imul repz pop and imul sub (bad) add jg cs push lea jmp or pop push or ljmp and addb mov xchg mulb js pop and mov xchg pop push out or les pop into scas pusha inc adc clc and sbb lods mov out mov dec aad in push sub lahf inc jne and bound jns add sub jnp mov pop rclb jl or js mov sub in cmp leave lret jmp fstpt and cmpb rcl adc test les stc je (bad) jmp mov repz pop adc or sub fmuls push adc nop movsl xchg je pop push adc jge repz jmp mov out roll repz push clc xor add dec or inc pop sub movsl jae xchg ljmp pop inc xchg iret lods push sar out repnz mov xchg and and es ret sub lds add addr16 stc sub mul pop inc imul jnp push test dec lods xchg mov je push inc inc jge add mov popf cmp lea insb sub mull ljmp adc mov pusha dec icebp loope roll out int cmp xchg mov jb int3 xchg dec sysenter sbb push lds sti scas not daa mov sub mov xchg mov pop lret loopne loop cld test sub bound sahf stos imul sub shr mov and aas mov aaa loopne movsb ds add mov jbe (bad) or jge fwait sahf pop (bad) jge xchg std xchg les cmpsb (bad) dec mov popf pop or int3 es xor add and sti xor std pop xor imul jmp out xchg (bad) notb repnz (bad) lret aad xchg jne xor inc daa and loop sub std mov das adc and cmpsb push inc mov mov (bad) jmp pop dec lock movb movzbl scas xor loope rorl pop jmp popa xchg sti sbb and ds dec sahf in mov mov mov repz jb icebp pop jle shr xchg sub stos cmp sahf daa pop insb pop repnz int3 and pop and xlat jmp in out insl adc pop aad pop out mov xor in mov pop les sbb mov jmp out and leave push xchg shrb sub int aas xchg out sub in jne mov xor xor lret xor cmp popf mov gs cmpl ljmp xchg cltd xor jg dec adc xor mov xchg rcrl or push in stos cld adc mov fistp pop pushf push push ljmp mov test cld ja repz pop fsubr mov in test imul cmp xchg cmpsl shr or int rcr dec sub sbb or sbb pop mov loope xor mov stc ss icebp mov jge push push loopne js out in push sar adc mov mov out jmp imul or pushf sub xchg and repz add pop pop fisttp insb loop add aaa add push push xchg lret or (bad) cmc pop test xor push sbb jp cwtl push cmp fisubr lret push or pop sarb jmp mov shrl jb test adc sti loop lahf adc mov sub scas int dec dec xor pop inc ds (bad) mov mov fs cli mov fild add repnz xchg add sub jno or cmp sub movsl (bad) sub push push out mov mov stos jb pop lret mov jge pop shll xor jg clc sub sub fnstenv xor test mul push popa dec dec add sti mov (bad) popa (bad) cmp adc xchg push addr16 add popf rorb stos jno or and pop movsb mov sub outsb pop jge mov xchg fdivp out cli xor je mov add in mov jne outsb shr jnp fisubl pop cmpsb mov dec sarl xor lock xchg xor ja and inc mov stos dec sub push idivl cmp (bad) lahf cmpsl (bad) cli inc inc mov cmc inc leave push mov mull fcmovnbe dec fs xchg cwtl ret popf mov xor cmp in popf xor add ret mov cmp lret cwtl lret push jno ret fcmovb xor and jg in sub mov mov fs call aaa mov cmp and lods pop ja fsts or jle lret notb lret push inc dec (bad) sbb outsl mov scas xor out xor mov jnp out cwtl addb push jno mov pop ret jmp push sti jnp sub push clc mov cmp pop call aas sub cmp and fimull mov jmp test xor jb dec out popa or and xor mov push cmp push mov std mov jg stos or push push mov mov jno mov lret jnp push sbb push scas sub imul nop dec push test addb and fcomps test movsl mov jmp std push out push mov (bad) out test and push and and roll data16 mov mov dec out dec mov cwtl cltd mov pop sub pop icebp std inc add or xor and insl movsbl js (bad) das out pop scas cmp scas xchg pop cli int3 cmp xchg faddp gs cli fldl push nop mov iret inc dec mov jno mov cmpsb (bad) or jg add fldcw add testb jmp or jl adc pop outsb test ja repz fcomps hlt outsl inc dec add add push fadds int3 pop shrl mov ja nop xchg out xor xor push push pop pop orl cltd jno adc fwait ja sub lcall push mov das shr jecxz adc negb add imul sbb enter xor outsl ja lret jbe flds fucomi aad sahf jbe aam adc fidiv scas or push test adc jmp call (bad) pop xchg or fs fs and sub push push sbb add pop aas movsb pop inc adcb push dec aas push push mov cs mov add pop xor pop xor push jne jecxz jne pop and mov xchg or mov pop test push mov mov pop call dec mov xor addl push rclb sub mov aas xor jmp in gs add loopne and lret dec flds sub test push push imul aad and insb xor or pop (bad) add clc jbe mov sbb out dec sub jnp xchg sub out fs and ret fidivl lret jge sti lahf ficomp loop xlat pop jo or pop mov mov aad call or sbb mov sbb in and mov decb gs adc dec xor sub xchg lods fldcw outsb out mov ja icebp lahf lock rcr aas jg (bad) mov push jns dec jp inc gs (bad) rcl imul sbb mov lret mov aam mov clc add ss mov leave jp cmp outsl jl xor pop je pop dec sahf mov je jbe gs into xchg and sub sub sub ja jg cmp bound jne in ret push inc lret out (bad) lock lock pop test out cmpsb or decl sarl add sti out pop sub dec leave call push pop repnz ror dec xor ljmp test out mov mov ret cli dec push sbb pushf xchg pop (bad) inc mov jo loope pop shlb inc andl add sti movsl adc mov xor mov and imul pop xchg pop dec out scas test dec cmpsl xchg inc xchg cmp icebp cmc adc mov fstpl ja xchg and and adc test mov adc and cmp movsl out pop lahf imul pop xchg negl push jp xor dec fimull fisubr lods std cmp pop imul and lahf push sub pop into movsl jge push out add add cmp add xor clc arpl sub js push mov sarl mov xor push and out dec adc mov icebp fdivrs lods rol fiadd ret dec jp cli xchg (bad) pushf popa add and jne lret in xor mov adcl dec stos inc push lea (bad) mov pop pop out push sbb pop inc enter idiv or add mov or mov jl add (bad) lret out mov subl das xchg rdpmc ds mov aad ljmp (bad) clc repnz aam out jb fistpll push ja dec pop shrl out and ljmp stc mov loope adc call sub or sub fisttpl popf jbe inc add jg xor sub fwait mov xor ja and add dec lods mov lds stc rol mov push out cmp negb or mov dec mov daa cmp and lret pusha shl inc lahf push (bad) push jmp and bound test mov mov mov daa pop testb fmuls or (bad) jge cmpsl cltd mov je (bad) sub inc lahf jno dec cmp fcoml fmuls ror mov adc or int push jb fs sbb xchg cs stc xlat adc cwtl pop cmp fisubrl daa idiv (bad) mov push mov jb iret xor and lds pusha fmuls lret adc mov pushf sub std fs in das mov mov sbb fnop lret popf jle push out jo mov pop pop lahf scas std push pop or jmp jecxz test sti out xor scas cld xor bound push sub jmp in sub pop add and mov stc fs inc popa shl and add daa fcompl jge (bad) in push clc divb mov jmp clc inc les cld add das and pop and dec add sub loopne push dec push or jg sbb das aad jp dec das out sub mov lahf dec (bad) jmp into push mov mov fist (bad) sbb mov mov mov and cmp xchg aad or outsb arpl cltd call mov jns daa or jno inc stc je cmpsb loop jmp xor cmp xor jnp dec add add or mov jg mov xor call test adc xchg pop jmp repz mov jg inc idiv dec into or and push vpmulhw mov aam std repnz mov xor das out cmp jp rolb jbe inc loop repnz mov gs and (bad) outsl or mov not push out (bad) dec (bad) ja fistpl in jns lods jg sub xchg ret pop repz iret decb add outsl mov mov test push jl cmp mov inc (bad) sub in cmp cld movsb and sub and dec (bad) test ret or iret js dec (bad) cwtl out popf jl push insb pop and fbstp push (bad) fldl jbe dec test mov and adc daa pushl or sbb adc adc (bad) cmp pop xor shll adc pop jno hlt call subl adc xlat sar jge cld fcmovb aad lcall ret pop cmp xor and sub aas mov xchg imul sub adc fnstcw test sbb lret adc adc (bad) sub cmp loope or add notl cmp jae and pandn stc mov ljmp pop sarl (bad) fisubr lock fwait xor push fiaddl dec aas jno sub sub jns jnp jne inc fadds mov and pop mov lods dec and (bad) shlb sub mov mov sbb sub std inc mov and lcall enter xor scas test popf and or and cltd fmull sub push jo loope pop mov jb mov mov stc roll test mov fstl xor pop movsl out repz mov and fistpl and mov stc sahf mov (bad) inc mov mov scas pop inc or loope add xlat out (bad) xor into sub popf pushf test cld sub adc dec add xor sub out cmp mov fdivr jmp sub into (bad) pop dec fild dec repnz push in mov cld dec pop in pop xor outsb lcall rorl add push xor jle sub and pmaxsw jae std add inc ret jle pop lds fsubrp cltd and pop (bad) xor push inc negb adc push test mov or xor lock rcrl out mov push imul gs push xor mov xchg dec fadds mov push jp mov mov push or push adc mov and nop idivl sbb and xor cld and call xchg and movsb scas lret test add stos pop hlt popf push pop sbb divb xor daa dec ret loopne add icebp in mov or mov add mov jmp xchg adc bound pop inc out mov das imul add mov in mov clc scas fs movsb dec mov ss xor outsb mov xchg or dec out pop mov popa sub out dec test pop (bad) mov data16 xchg jge sbb jmp ret add jp repz pop cmp pop push dec jl leave bound cmovp jne or pop push out ficom push cmpsb test jge test or es sti xor neg dec fs jecxz adc add push mov fnstenv mov dec xor push out xor (bad) les aam fs cltd push popa and xchg jecxz cld (bad) shlb cwtl or xchg cmc xchg adc imul jne mov xchg pcmpeqb jns les mov or rcrb lret dec add mov outsl pop in sub jno sub and test mov popl mov sub jmp xor and xchg sub out fdivrl je jmp negb sub inc dec jg sub sub pop stc mov movl jmp pushf insb out dec loop test daa out gs add adc mov xor xor add or mov and sub push stc adcl out cmp cltd movsb cwtl mov or sbb mov test sbb test dec sbb jo xchg int3 enter insb outsb das sub jbe push rcrl popf sub pop lret dec xchg (bad) repz sub aas pop sub dec mov pop mov notb in out mov das cmp jne dec add sub adc cli mov imulb inc dec jmp ljmp inc xchg clc adcb pop or sub gs or add ds pop sarl or adc xchg mov sub std subb clc adc pop mov fidiv fbld mulb mov jae in xor xor sub sbb xchg push adc mov aad dec cmpsb xchg mov xchg addb sub and mov adc pop xchg icebp call mov mov int fistpll mov iret lret mov gs mov bound sbb mov or xchg inc cmp call inc in lock pop in xchg push rcll jno ret and sub mov ret lahf sbb adc or dec xor (bad) cmpsb lret lods aam lea mov sti dec or (bad) pushf test cmp fs lret cmp js cmpsl in inc and jne push int (bad) aam leave xor leave out cmc add (bad) enter stc call dec mov lret stc ja cmp jl gs bound add fcom or (bad) sub sarl fildll ds jbe sub je xor xor adc sub add jnp add mov xchg loop add sbb sub lods dec out lret in sti sub add ret push xchg adc fsubr xor and xor push pushf out adc shr mov pop xor mov loop daa fwait clc jecxz add cs xchg cmp (bad) (bad) jge pop mov bound sahf lret xlat sbb add mov sbb imul jecxz inc mov sub aaa jp sbb (bad) fldenv inc data16 mov mov mov andb xor aaa mov xchg pop cli mov test mov outsl repnz repnz gs inc xor in shrl idivb push sbb inc popf adc xchg inc in adc push add inc dec imul dec mov mov lds add fisubr test xchg in imul loope mov das in xchg mov sahf dec mov fxch mov jl jo ljmp or scas and rcrb je pop aas popa out mov mov and fbstp popa xor popf mov add fadd and add ljmp rorl mov rcrl jecxz mov and xor arpl fimull adc fidivrl not stos fistl dec jmp fistpll or adc pushl pop cmp add mov pop repnz inc out popf aam push iret (bad) jns dec jg (bad) lods ret leave js cmc gs xchg or sti mov pop shl imul jmp inc cmp int3 pop add enter dec sub or add (bad) mov xor and mov sub das mov (bad) repnz shr xor push adc enter rolb ret inc stc js fisub ljmp xor xchg dec div pop lret push push (bad) dec rclb outsl dec dec push fistpl fnop pop ret mov sub cmp and je outsl or jge iret inc mov cmp dec ss nop out leave inc in mov fiadd imul xchg (bad) lahf hlt jl inc jge (bad) in or repnz sub ret into loop lret jo in xchg iret mov (bad) aas test add bound rorb scas int cmp dec fdivl cmc icebp sub insb mov push lock mulb leave test and leave je nop sbb adc push mov (bad) ja dec jge mov or add out fstpl aas and inc (bad) push nop jmp out leave jg xor and cmp xchg xor lcall aas push fmuls pop lret ret push and inc push xor sub pop bound adc xor mov jmp out sub mov mov aas mov xchg mov sub (bad) repnz adc mov xor push (bad) stos repnz stc pop (bad) repnz mov sub jne push fs jecxz pop lds mov push and sti add and mov mov les sub push xor (bad) jmp dec push mov jb mov or in xchg into in dec mov and sub push out mov mov sahf ret mov les fsubrs mov pop xor mov dec pop mov pop xchg not outsb dec mov and mov xchg sti (bad) add push mov adc dec add testl jns lcall into loop loopne test in push mov clc mov mov fnstenv test pop push sbb pop jmp add sub lea lock lahf push cwtl arpl push movb es (bad) (bad) (bad) cmp sub add les push fs clc mov inc out (bad) pop cltd test mov rorb test pop pop push push mov pop (bad) negl xor sbb popa sbbb dec das scas outsl roll stos dec sub and pushf xchg push mov xchg sbb mov movl or testb mov push mov setbe jecxz fcoml cmp gs cmp cmc cmp inc fiadd imul add mov (bad) dec ja jle inc or mov xor ss add (bad) jae shrb (bad) je mov daa loopne lds inc lea es pop cltd in iret pop daa (bad) clc mov mov mov add xor (bad) push ret push adc sbb or adc cld ficoml mov and stos or xchg inc xchg add (bad) cmc addr16 push (bad) sub pop and mov push push jae sbb idivl fdiv xlat jns out add out pop jae lret xor rol or add mov mov jmp xor or lds xchg dec (bad) jle push push sub sti rorl and faddl dec ret (bad) dec add sub xor inc mov cs jl andl ja (bad) mov inc pusha punpckhwd inc outsl outsb adc push jo and inc and shr stc (bad) adc outsb sub pop sub jg or pop and cmp mov jns xchg imulb dec mov and or xor outsb imul in pop or ret mov mov out cmpb fistpll lock ss xor push js negl (bad) lock sbb or mov cmp dec mov je faddl push jae adc loop mov mov xor or (bad) or xchg ja adc xlat int3 jb popf pop xor cmp outsb fnstenv loope cmpsb add negl (bad) xor (bad) xor mov add gs stos lret xlat dec mov cmp mov pop ret or jp cld jmp dec and enter in add or or mov repz iret scas popf cmp adc jb sub jno or mov or shll mov not jg xchg cmp add sub test fs pushf lock jp mov jmp and fsubrs mov ja movsb subb pushf dec adc pop mov icebp push iret pop push in inc pop mov pushf and and stos mov jb sti (bad) cmp mov insl or out lret xor mov rcll and add cmpsb ret fdivp push xor push cmp stos jno test and push and sahf lods push sub fs mov cmp lret xchg scas push ret jmp pop idiv mov sbb sub sub pop or aas data16 xchg fidiv adc sub sub xchg pop in in mov cmp and stc dec mov or or ret lahf jmp std dec enter pushf lds cmp adc jb or jno dec inc sarl inc mov pop jl notl imul hlt sub adc std cmp jbe mov or rorl sub inc rol sahf mov stos int3 jecxz dec lock add and push out in cmp leave add mov jnp sbb push in mov xchg daa pop inc insb and scas fsubl xchg add mov mov mov adc cmc jno movsl decl mov (bad) mov jg pop mov sahf mov mov (bad) and fistp dec rorb and sub and jo mov jae lret pop or push fbld pop cmc in jle pusha movsl sti mov xchg ljmp ficoml mov ret jg leave mov stc xchg stc in xlat and lods xchg movsl jle mov sub pop sub jg jmp cmp xchg out sub pop mov pop sub or cmpsb das daa add fwait mov push pop lods sub test mov icebp insb sub push mov sbbl test lods xor divl ljmp jp imulb sub add out cmp notl cwtl or cmpsb cld and mov out fldenv iret add push sar pop jecxz frstor xchg stos sbb cs fxch test mov xor cli iret xchg push jl xchg subl sub nop (bad) or xchg sbb mov jbe jb lret pop add int3 loope and cltd std (bad) or sub aas or or (bad) mov jne pop lahf sbb and or popf insl shll dec add xchg jle jp pop enter popa divl leave xor in mov sub mov scas icebp sbb insl dec loope mov sub mov pop aaa and lock inc dec jae sub leave into outsb jno out sub std inc outsb sub mov mov dec shrb push push jne gs mov aam dec fdivrs into add mov or push andb xchg clc rcrb das out enter pop push mov add sub sub popf pop cmp popa out xchg jmp fcoml jmp sub and cmp mov and jle pop fldz bound faddl (bad) test xor mov imul xor xor add enter sub dec and push es push dec sub rcll mov dec xchg push sub inc subl outsb lods dec movsb adc pop and dec add mov and scas mov enter xorl sub imul sub fildll arpl aas adc dec test ss push test and sub mov xlat push xchg sub sahf das aad test mov add pop dec jmp fisttp mov daa fnstenv and or mov rorl cmp jmp jne sub call pop jne (bad) js push xor mov pop mov ret out sub lods pop cli ss xchg int js popf cmp lock mov add out insb stos aas xor mov insb rorb and jl fldcw lock shl dec fcomp data16 mov aas sub add adc push scas xor rcrb ret test mov faddp repnz ret daa pop in cmpsl (bad) sub xor mov and jns movsl ja shlb cmp pop sub jb ret pusha movb or mov (bad) cmc mov inc mov std sbb sub mov xlat out insl xchg sbb xor ret jmp imul (bad) mov mov adc push pushf pop dec ljmp jmp repnz and cmc xor or cmp pop push icebp xor pop pop push in push jnp sarl out sub in out setne out push das scas xor mov dec fimull aas (bad) scas push incb dec into push jl (bad) jnp pop push (bad) jg add (bad) pop push (bad) sbb stc jnp xchg (bad) mov iret pop roll jecxz jne xchg mov jae int loope push mov pusha pop xor test arpl andl (bad) js sbb das scas xor or or sub mov xchg xor out mov bswap (bad) pop add add push jns imul pop xor in mov (bad) and pop mov add loopne push mov outsl or pop add jno xor push add inc sub xchg pop movb pop fcoml popa sub das scas push and ret jno sti aaa in repz push fisttp fstps popf test xchg lcall lock cmp in cmp pop ljmp xor push sbb adc or pop jmp mov mov push xlat ds fs xchg adc negl jns xor inc (bad) jmp mov xor clc push push fbld icebp mov jnp mov pop jmp mov and xor add ret dec and out loop (bad) add mov mov imulb and adc nop mov jle push and in call cld lods cmp and adc outsl clc leave lret xor push clc out cltd mov div and adc ror jl dec out bound mov xor xchg out sarb xor das repnz xchg repz adc aaa jmp stc jb fdiv mov sub xor or leave add das dec outsb dec cmpsl mov ffreep mov xor inc pop xor (bad) fs mov sub mov inc push mul (bad) sub mov mov outsl call push pop cmp mov fmul orl cmp movsb adc divl ja mov mov xchg sbb imul test out cwtl lods xor xor stos sub imul inc add push pusha pop icebp repz mov je sti addr16 add and dec (bad) addr16 pop (bad) cs imul jp pop sbb push xchg mov out jmp and out into cmpsl push fsubrl call js mov push adc andb pop data16 push bound mov sarb cmp sbbl lahf cld call or dec (bad) repnz fcomip (bad) push (bad) mov and notb out add mov loop xchg mov sbb xor xchg cltd mov into ljmp in mov into pop mov xor fisttpll call imul negl adc mov loope ljmp aad stos sub mov data16 sub jle repnz mov mov int3 cmp dec mov inc dec out pushf insb xor stos fstp arpl bound inc add mov je and pop add jnp mov add jl jno and rclb pop (bad) pop mov push push popf lcall loop push sub jle pop notl add je rol mov add jb fdivrl xlat pop add lods add test jg cmpsb sbb call pop adc dec cmp rcrl cmpsb sahf xchg (bad) lock sub push mov hlt fstps cmp (bad) pop xor daa jmp sub (bad) rclb daa rolb xlat xor or lds dec and push aas mov in sbb loope pop push push push mov add dec jo adc sub sub out aam adc pop mov fisub and sub adc cmp repz cli aaa in sub imul jg cwtl int or ds imul (bad) sbb (bad) js or xchg xlat clc dec (bad) mov ja jl stos jmp add push pop jp mov or pop or add mov sub add iret pop mov jp or pop pop or mov push cmp aaa mov jecxz sar xchg bound jp or push jmp outsl jl repz or jo in cmp sub clc push dec scas lds xor mov push or popa (bad) or xchg add popf mov mulb and mov andb xor push or xchg mov mov push adc call loop orb lret xchg popf push sbb xchg xchg pop lret (bad) add mov movsl int mov leave mov xor sti mov xlat clc shr enter xor pop adc mov mov jge xor ret cmp mov inc xchg lret shrl push xor loop mov or data16 fcoml sub push lock pop xlat fsts mov loope lret mov pop les push aas cld lahf movsl mov mov leave clc pop sbb fsubrs dec xor gs or xor adc xlat mov frstor push push add inc decl sub pop or pop aad fucom jne out add jae dec cmpsb bound and or jge dec mov mov dec stc popf test enter pop scas sub into lahf jne push dec mov jne sti mov pop xchg and xchg js mov sbb mov mov cmp cmp sub mov std ret mov pop pushf xchg sbb (bad) xchg decb cmp dec mov pop arpl adc xor lahf das stc sti daa hlt gs pop mov and lahf adc in or dec repnz fsts sub sarl xchg dec loopne loop icebp dec dec push sti sbb inc fcmovnu test xchg lds sub imul push loop (bad) jmp lret imul mov jno pop enter clc inc mov or fbstp push mov ljmp jmp (bad) ljmp js mov ret push jns or rcrb outsb mov fcoml adc mov dec pop pushf cmp repnz fisub cli pop icebp mov shr in mov mov imul or ret fisttpl sbb jl pop fldenv cmp rol or adc call mov pop scas pop xlat fldcw sub das repnz and xor (bad) jle les and mov or cld stc push idiv mov mov (bad) lock add adc add mov ds add sub lock cli cmpsb sbbb add mov and repz sahf ret (bad) pop aaa andl scas call mov iret xor cld sbb jo add gs xor jmp lret fdivs lds lret cwtl pop or (bad) add sub sbb lock dec mov mov or pop sub (bad) dec push mov pop stos addl push push xlat mov enter fsts mov adc pop iret sub notb iret cmp cmpsb add jmp cmp rep pusha iret fildl adc cmp fidivl pop sub shlb add mov xor xchg pop les call mov add test push movsl xor (bad) (bad) movsl and bound jge out jo loope pop or iret (bad) mov mov jle jmp sbb mov mov mov pop mov pop mov sub inc imul movsl pop pushf dec jg imul pop jmp cmp loop or test cli mov xchg (bad) push std sbb inc jmp or mov mov stos (bad) push les bound ljmp out jo loope out je test adc cmp lret (bad) xor out mov movb test mov pop add sub test adc test cmpsl aam fsubs dec adc xor pop fnstenv notl ja sbb scas push xchg xor xchg in in push push aas leave xchg dec lahf cltd xor and xor pop ret sbb xchg mov imul shrl lret sub mov inc mov enter push add sub insb adc mov fisttpll inc sarb or xchg call or dec adc int3 (bad) loop dec mov cmp pop sub xlat mov fsubrl pop xor out lds into and or lea loopne ret pop sbb add adc dec mov lods loop sub sti or call pop jbe xchg subb scas jne in je jecxz and push std push ficoml loope mov pop jecxz cld outsb mov push stos (bad) das mov das jmp push adc push aaa loopne or pop jmp jae mov and ret (bad) rclb dec or adc xor shlb mov dec std mov iret pop inc sub pop mov jp inc arpl jo push fisttpl sahf test out xchg and mov xor cwtl inc jo scas dec mov sarw loop cmpsl repnz lods sub (bad) xor pop mov imul pop sub jmp popf daa cmp mov xor or movsl xor divb rcll mov mov mov aam jmp push xchg mov mov push cmp cli and mov add cmp and outsb loop sar scas leave into fbstp aam jbe leave fdiv pushf push push push sahf or rorb (bad) cli push mov xchg adc and movsl mov lret or pop or or ret lods clc test dec xor mov cli sub xchg aam imulb xlat in fldenv adc stos into jmp inc pop stc mov inc roll mov out sbb sub xor in adc push (bad) jge fdivrp gs stos out pop out sub jne ror outsl fadd divb cld add cmc mov pop je iret and scas mov cmp inc add test enter and and mov add aad test psubq sbb popf pop mov aam movsl lods sbb bound js lock sbb mov (bad) push bnd movsl out mov or into mov lea sub ljmp pop mov push push add jle mov mov lods js mov in out loopne out stos mov mov jne xchg pop xor adc (bad) lea loopne or mov lds inc jge std into xchg imul stc scas sub lret fbld imul jmp test div aam jg add xor int lock negb jo iret cmpsl pop xor ret or neg out push mov jmp pop and (bad) push lcall dec decl xchg push jmp xchg dec bound divl pop or inc lahf xchg (bad) mov (bad) lock lea das sbb push or xor sub mov popf jl out or or add mov sbb xor mov mov cmp arpl mov add or ds ret test push inc push jmp cmp out xor mov and xlat jae cs jne dec add mov lahf fidiv cs adc pop pushf add (bad) ficompl pop mov jle mov xor mov push lods dec clc int3 push xor mov and fwait (bad) cmp or pop mov push jns inc xor push (bad) xor lods rolb (bad) mov mov xor or aam xor mov hlt jmp mov imul xchg dec ja xchg mov or xor mov lock rolb jnp out or jg es sbb mov neg add push fldt mov fnstsw jmp rorl gs rclb ljmp (bad) call push mov pop xchg lcall ret pop push xchg xor xchg jg sbb xor (bad) rcrl jno add ret sub int3 jle out aaa mov dec loope dec test and or dec cmp in xor iret mov pop add dec sub or sarl dec jge loop std ret outsl sub imull loope sub stos dec out ret inc nop loop hlt dec push push fcoml mov fnstcw sub add dec jb sbb pop stc repnz aad insl mov xor inc mov add xchg fldlg2 repz push or (bad) data16 scas out dec add pop repnz in ja pop (bad) or fstl mov xchg jmp imul imul pusha daa (bad) xor mov clc sarl lea das out and and ret and in rcll je mov sbb mov push pop xchg mov jo push repnz xor fidivl jno pop movsb daa (bad) fadds mov iret lds test test sahf (bad) xor lock sub and enter add add iret cmpb rcrb popf xchg fdivl enter sarl loop sub jno (bad) (bad) in mov lods xor jge std push ljmp call fcoms out or jp and xor leave or pop int3 cs test lret mov push xor jmp imul mov mov sti xchg pushl xchg in inc add mov (bad) cmp clc pop ss push mov or (bad) mov inc mov (bad) xlat mov and inc scas fsubrl and pop fsin jmp lods add and add inc into adc sub mov sub daa and aad int3 (bad) pushf stos push or popf push pop and pusha add cmpsl imul movsl xchg push add sbb lock sub sub lds xchg jl pusha sub imull cmp cmp inc xchg sti bound mov cmpsb call mov cmp xor (bad) xlat adc lahf insb (bad) mov sub pop jge daa add cmc icebp inc xor les mov pop aaa add notl imulb enter xor jnp pop push out or push jmp lret sub inc les call iret xor stc clc and push movsl lahf or ljmp outsb ds sub or mov push push mov mov shrb xlat fsubrl div ja out sti sub outsb mov lods cld lret and sub loopne sub push mov or pushf clc cmp clc jl sub (bad) or mov pop mov rcll pushf and dec repz int jnp ret imul mov aad in mov push pushl shr sub notb sbb (bad) ljmp mov in sub mov into jne nop (bad) fwait push cmp popf bound les mov sub dec or fsubrs jecxz and out sub add rolb sti fs pusha (bad) stos std pop inc fisttpll xlat (bad) adc sbb pop jecxz or push (bad) or scas bound (bad) push loop xchg cli pop iret jecxz dec stos (bad) push les shrl xor jp mov add xlat mov out dec mov (bad) pop cwtl or jmp xchg int3 (bad) lahf dec aam sub dec xchg scas lahf or cmp jo jb pop xor stos mov sub fcomps mov sbbl mov (bad) test mov push xor mov sbb std shrl shll xchg mov enter daa ret (bad) insl push jle push jg cmp cs xchg (bad) cmp enter movsl and mov dec mov pop cmpsl add loope fstl mov fs mov cmp pop rclb and pusha dec scas mov dec mov je sub jle dec outsb notb (bad) je test mov mov out frstor mov pushf movsl icebp adc fldenv sbb (bad) sub and jmp mov addr16 adc movsl cltd xor and ja out pop gs add cli fcmovb fs cs sub jmp addl loope add pop jmp cmovle lock ffreep out cwtl icebp jl add jge dec cmpsl mov mov xchg popf sub pop subl mov pop or mov or push sub xchg call stos popa fcmovb or adc out mov lods xchg subl or aad int3 or jno mov lds jne mov mov or stos sub mov stos enter add enter push or cmc sbb push ret mov and and sub adc and data16 scas jmp mov (bad) in jle (bad) rcl (bad) mov imul sub or or mov sbb or dec inc sub fabs subl addr16 sub cmp aam pop sub push xor adc ret jbe jecxz or and mov cmp adcb push int repz push aas movsb gs mov in pop mov mov cli jne xor (bad) je int shlb shr xchg lcall pop imul push dec (bad) mov idivb (bad) int3 int leave inc add lret mov std or add aaa sar pop and inc jns dec in push stc sub popf (bad) mov (bad) leave xor pop inc lret pop pop mov hlt cmp push scas cltd insb cmp int3 shrb inc mov imul sub movsl mov stos jmp les xchg or daa in mov pushl int3 and xor inc movsl sbb jo xor xor and and stc or push imul and cmp add and jmp loope lock lahf or out or (bad) or dec dec xorl (bad) pop lret jle in dec test mov (bad) mov je pop and xchg insb clc and xor mov pop decl nop divl lss fscale mov sub mov mov aas stc pop xchg adc mov (bad) mov leave xor inc mov xchg mov mov inc and sahf mov add or mov and dec inc cmpsl imul inc mov push add jbe pop mov jg movsb dec ljmp movsl mov mov jne dec ret daa dec (bad) rorl into inc daa sub (bad) sahf loopne jle bound imul dec mov sub loope cmp jo adc mov jl rcr fsubrp (bad) mov sub movsb fdivs and ja shrl sbbl test or jmp ds adc rcr inc cwtl insl xor out cli sbb (bad) pop rcr lods mov pusha mov pop insb lret jg push repnz gs idiv js xor scas fs mov movsl pop push popf jl and inc inc and roll or fdivr add jne adc clc mov out data16 (bad) xchg and cmp sub clc jp fcompl cmp mov hlt aam pop bound call cs xchg mov popf cmpsl fist dec mov jb iret cmc fsincos inc adc icebp movl pop repnz ljmp ljmp mov add (bad) jo xor sti lret rorl mov push xchg fisttpl adc sub xor test cmp or nop daa pop or cli loope je in addr16 fist dec idiv push (bad) je sbb xor mov pop sub sbb pop shlb into cmp dec push or adc lods sti aas mov add ja add sbb mov (bad) push mov jo push cld adc and push cld test lret mov scas cmpsl inc das divb mov add outsb je sbb lods lea lock lret cmp xchg clc out sbb repnz or sub std xor lea sub sub mulb adc and jae mov jbe cli cmpl pop pop or mov imul je or push outsb loope push in out bound (bad) and mov repnz lret jmp pusha rclb les outsl lret out sbb pushf pop add xor and mov or jg push mov fadds inc imul push popf movsl (bad) mov out or sub mov cld or cmp sub bound mov dec popf or loopne sub and xchg or sub icebp js lds push ljmp leave cmp lret pop push add jmp xor orl (bad) lods push push movsb or aaa lahf jecxz ds push mov cmp (bad) mov jbe jg in scas cmp imul sbb sub hlt fistp sub adc loopne addr16 (bad) icebp or and std in cwtl dec lcall mov and sbb sbb test sub fs lods jne cmp repz mov stc xor and mov xlat pop lahf mov fsubs aaa xor loop inc (bad) cmp jb pop ss adc mov xchg shlb xor add (bad) sub das repnz (bad) repz es movsb cmp rcrb and or cwtl pop sub xchg fdivr gs mov sub in cmp add aad push fs insl add inc xlat mov or xor out pop xchg pop or xor dec loop (bad) iret pop int3 xor mov sub jp call dec sub lods sub jb mov cli mov sar adcl or xchg pop mov add fidivrl xor (bad) xor jns ret or ret xchg cmp dec push sub mov mov out mov or add push jl add adc mov pop stc mov mov les xor mov xor loop and xor (bad) push scas pop pop ret (bad) enter leave (bad) sahf lret adc xchg movb push cltd (bad) outsl out pop mov das adc test cbtw dec lea push add adc push jbe lock mov fs push rcrb iret and mov sub movsb scas sub lcall jo test shrb dec mov xchg mov jo xor dec (bad) mov jmp and add xor mov mov gs sub ret add dec in clc stos pop and ljmp sarb adc rcrb ret movsl test orl sti xor in jp fstps xchg inc jecxz sub repz xchg ljmp dec cmp (bad) mov repz das mov jg sub cwtl and and icebp adc push pop sti push push push mov or bound dec das ret cmp (bad) pop repz lahf lahf jae cmp outsb inc mov (bad) stos push sub xchg xchg inc iret or mov push adc ljmp pop out and stos xor (bad) or mov mov fbstp adc stos sub mov cmpb mov mov xchg out pushf loop mov fldenv pcmpgtb xor (bad) lcall adc sub pop and gs (bad) out mov pop int xor jg cmp jne lods cmpl adc lock cld push leave faddp fist or mov das rcr (bad) jne aas push notl fcoms mov gs push add jae and repnz push push ljmp stos mov dec add push int inc pop popf push out orb and lock xor push sub andl inc and xor stos loop lcall dec ljmp mov adc sub notb paddd jmp out out inc mov sub daa fidivr or mov mov mov and in mov adc stos mov push and dec adc mov loop test push mov stc daa or jne mov inc xor cmc in pop sub dec push add repz cld outsb push cmp dec sub sub cmp xchg in mov idivb dec dec mov dec push jle out das mulb scas jbe bound or push jbe dec clc addr16 or xor out xor notb lahf or fmulp les sub mov or insb xchg dec or jae movsl int3 inc add imul and mov cmpsl in cmp xchg fildll lods hlt or (bad) xlat xor into mov mov dec jmp push daa insb push inc or pusha jns loope sub dec xor mov mov jb xchg les in mov or push pop add jecxz arpl dec jle fwait sub test jmp or pop mov into loope shl and das push push dec ffreep jl fsub and push push sahf bound pop push sbb ret xor add (bad) outsb inc add pushf or or dec xor mov fs cmc gs sub imul xchg inc jo mov push inc call jbe cmp xchg xchg push dec mov pop mov mov fmuls loope lcall out xchg mov fcmovnbe jp or jle push ss adc sbb mov stc jg movsl pop mov xor add adc cmp gs mov inc lea inc mov jmp repz and cli cltd xlat push dec scas xchg rol dec lret lret dec and repnz ja and cli aam loop and pop inc xor push push test jne sbb sbb push cmp les pop imul inc mov xchg dec add stc repnz sub lret sbb iret daa aad das and lahf rol repnz mov sub ss sbb push divl dec add mov out mov pushf insl push imull cmp mov andb xor push test pop pop cmpsl loope lds leave (bad) (bad) cld (bad) push cli fbstp jg sbb mov add icebp sub bound pop push ljmp out pop (bad) xlat out leave dec push mov sub mov xchg sti popf mov mov inc lahf push (bad) scas int push and mov and fstpt mov add test out xor lods scas in jns pop jmp out xchg push shll xor hlt clc jmp sbb loop lret dec (bad) into out sub ja sbb pop (bad) fcomps lret inc adc adc rorb adc test or ret jge fs ficom decl and pop adc mov das test mov sub cltd in clc (bad) mov bound ljmp cmp pop fxam xor xor dec mov cwtl imul jo sub gs test mov stos (bad) or cmc movsl (bad) adc mov movsl and andl mov cwtl mov rorl out mov pop (bad) icebp insl out outsb test sub test mov pop mov jb xchg in notl fistl add xchg mov test inc pop adc xchg xor pop mov pop (bad) repz sub rcrl mov lods pop and add jno xor jle mov test xchg cmp (bad) sti mov xchg adc dec loope dec imul sub out rcrb ljmp sub test cli pop fs lahf sti mov or nop pushf or dec and icebp scas dec xchg xchg mov and push roll xchg (bad) push bound pop pop pushf fs cs jmp mov movsl adc (bad) test lds loop xchg loopne fisubl add or cmc (bad) mov or xor iret mov mov fild adc or add int cs je xchg aaa mov mov addl imul test out push jno dec sti stc sub fcomps mov mov fbstp mov mov add idiv clc dec movsb repz dec adc shrb sub ret sbb scas pop pop jmp ljmp rcl mov adc shl jmp inc adc fimul fdivs xchg lods cltd adc in fistpll pusha cmpsb ljmp test loop stc nop pop jecxz shrb add rcrl (bad) or dec iret mul push and cmpl fs mov sub bound fistl cmp sbb sub scas lods lods mov movsb sub sbb jle lds clc or add sub ljmp mov outsb movsb or enter stos mov pop ljmp or ss add mov add dec dec ror xor (bad) je shrl sub scas test dec push pop sub std insb jp cmp mov out sbb les stc sbb movl aad (bad) daa inc inc xor popf icebp pop movsl rorb and mov fsub das out mov xor dec rclb outsl call dec ljmp mov mov fstl jp add leave je sub pop and push cld inc pop xabort sub mov or pop mov repz mov adc dec or pop mov cmpl fs pop mov xlat xor stc and mov out sbb mov add xchg jae popf orl xchg mov (bad) cli imul lret fwait mov mov imul lret lods pop xchg lock pop push mov lcall jecxz push sub cltd jmp pop jnp clc mov test jne fcompl dec adc lret int3 dec mov insb shlb dec pop adc out mov and mov cld dec xchg movsl out in std mov push inc stos insb sub mov push add cmpsb bound mov cld push push sbb (bad) ss out mov push inc pop sub sub movsl popa imul js (bad) and sub movsl mov bound sarl iret sahf jo adc imull mov leave loop push and mov pop and divl inc push jo loope dec push aas mov les fldl sub sub and cmpsl lret mov pop ljmp mov xchg sub jl dec push movsl stos sub mov pop cltd dec (bad) (bad) mov (bad) loope add test add dec mov ljmp loop cltd inc enter arpl fsub push ljmp mov mov pushf push jmp dec and xchg pop (bad) jb push push sti je ret fsubrl jo jnp dec lret mov xlat stos lret or mov and aas jno and and orps mov movsl lcall jb xor inc bound enter sbb jne out and cmpsb inc dec sub add pop pop orb data16 rorl or fsubs insb pop mov imul fs stos std lods pop ret je pop (bad) out and add sub or fstps inc pop inc lock sub cmp and out jo mov or pop sub adc (bad) sbb shll mov imul insb and out xchg pusha data16 xchg add mov and js mov add cmc and pop (bad) out pusha stos or push out dec xchg (bad) fsub xor add not mov (bad) jae sub arpl xlat mov notl xor loope mov push push inc sub push mov jg adc aad ljmp mov pop dec xor xor and adc (bad) jle pusha xor (bad) sub adc adc add and ret dec int mov lods stos dec cmp or pop fildll add or popf jg inc dec icebp inc dec or adc pop add jbe jecxz outsb pop dec pop enter adc jl rcll xchg dec push pop push inc test sbb pusha inc push mov ja cmpb sub lods jg push mov or push daa into xchg out pop andb mov pop inc aam push dec lock xor add int3 (bad) push cs sbb sub (bad) outsl add add sub rcrl mov sbb adc mov repz call jmp and inc rcr and ret (bad) jle pop iret lret rcrl nop push int pop dec cli add ret roll add pop jg in stos xor popa jo aam push push or push mov fsubrs divl dec sti mov dec imul and std xchg lea sub pop xchg add push jmp call sbb adc inc pushf cmpl inc add ret or out jle imul vpandn xlat sarl push cmp or dec shll ja stc repnz xor add inc (bad) push and (bad) sub inc in and das notl adc in stos int push push pop (bad) fidivr dec mov cmp test xorb jge pop fisub sbb out std cmp stos mov and sbb leave xor js cmp and push in mov sub push xchg mov jmp lods push lds dec mov sub mov shrb sub stc loop sub push cmc push xchg push std pop fcoms lret dec imul lret jb lret pop xor cmpsl xor xchg mov dec lock dec fdivs pop add jne (bad) addr16 mov push xlat aam mov add repz push mov daa cli cld ds mov ljmp inc push pop mov (bad) sbb inc pop mov divl xchg cmpsb pop dec and sub and xchg repz mov pop and push (bad) out dec fcomp ljmp inc adc cltd mov xorb jge sbb xchg lret cmc lds (bad) cmp (bad) fs (bad) imul pop dec push mov popf pop mov add jmp (bad) lret adcb push push dec in inc scas sbb mov cmp (bad) incb push outsl push lods mov jp push data16 outsb mov das out dec lret rclb insb and or loope mov bound and pushl adc mov popf rcrw inc push mov scas jecxz adc cli popa repnz jnp mov pop sub pop add data16 loop aad add into cmpsl adc (bad) or mov jmp mov fdivs (bad) jns test or stos jb pop mov dec rolb testb adc btc fsubs xchg test add xlat (bad) jno lret sti xchg add aas mov fnop (bad) in (bad) jmp mov dec aam mov clc cmp bound mov add ja (bad) ja arpl ret aad mull or jge (bad) in sub in (bad) ret ja lds add mov cltd cld movsl pop or or int3 add ljmp cltd add es or mov into push dec je mov mov cmp out mov icebp add ret aas pop and rorb out pop inc push push cmp lds pop mov fidivr pop into fcmovb cmc pop pop test xchg xor xchg jg (bad) lods (bad) jp and hlt cmpsl pop sbb scas movsl push hlt scas or push sbb pop and fs mov or mov repz mov pop mov cmp jle pop sar shr mov add jecxz xchg and push (bad) xor lahf jle lret jnp adc mov dec jb mov sub add les aam call scas push or lret or aad jle fisub and pop mov shr cmpsb dec inc cwtl push add xchg push jne sub loop test cmp (bad) out cmp (bad) xor (bad) cmp mulb jg stos rcr pop jg mov mov push sahf leave (bad) cmp lret stos enter notb ret mov enter sub push js jnp sub mov in and xlat sahf mov xor push loopne xchg sub mov push add add cmp dec mov add hlt push push mov pop sahf loopne jne fwait or inc and xor pop addr16 lahf push mov dec les pusha sub adc repz cmp mov je popf pop ljmp add cmp jb push insl push jnp out add insb test subb loopne inc outsl scas jg inc sahf dec or test mov dec jge loopne xchg scas movl mov jecxz leave push add outsl iret adc aas (bad) sbb mov sahf jne add lret fdivrl push fucomp jns (bad) repnz fimull mov inc or push xor insb pop ret data16 push cmpsb out adc cltd push xor into (bad) jle pop or dec divl push fdivrl ret add inc sub pop rcrl push jnp mov bound or and push rorb jecxz ret mov add adc fisttp inc sbb jmp pop push and sbb lea pop pop testl jle or add and mov pop fistp lahf rcll mov int3 test mov pop pop inc add mov jnp lahf pop shl lods push dec mov in cmpsl ret xchg loope into sub leave xchg in jmp pop sbb movl dec push dec jle adc cmc sub leave mov and jo pop lret mov loope cmp or inc sub daa mov repnz adc gs lea sub or inc add shl and lods lds xchg dec loop xchg stos jecxz add mov mov xlat les adc and sub jg jb out jmp cmpsl (bad) sub adc lods das adc (bad) fs std mov sub daa (bad) or outsb fs enter repnz mov call inc dec add loop inc add adc leave pop mov xchg out or outsb pop sub cmp pusha ljmp jno dec mov or cwtl adc push xor xor and shrl test loop pop repz dec mov jno decl (bad) cmc fild dec mov ljmp fcoml mov mov xor pushf stos cmpsb mov mov cmp mov add test popf mov orl rcr hlt clc gs fisubl cld mov in out lahf xor aad fcoml lret test dec mov ljmp adc xor adc xor ljmp jnp clc notb nop pushf and adc xchg push and mov and dec pop lods jo aaa (bad) or out jge into cltd jecxz ret mov add mov das divl int3 add sbb sub sarl stc and mov jmp mulb inc push (bad) les push cmp mov push int3 aad (bad) bound xchg out std xor dec out fildll arpl mov xor add mov out iret call adc sbb (bad) pop dec daa xchg loop iret xor or lcall cld adc dec repz and jbe cld rcll clc xchg sub xchg out pop and add xor add xor mov inc mov jnp cmpsl mov stc pop dec xlat inc jg idivb add aaa ftst iret repz pop lret dec fmuls or fsubrl cld xor loop (bad) xor imul stos mull test sbb popf jg pop into mov add iret pop pop or push gs sub (bad) dec data16 lea out in int3 icebp xchg insb aaa sub cmc shlb out or xlat sbb jne dec jg out mov mov ret jae daa push jne sbb in fmul fcmovnb das xor xchg pop cmc push clc push (bad) jmp sub dec daa stc jle ret ljmp nop imul test pop inc mov fildll and and sbb xchg (bad) idivl popf rolb mov xchg adc jns imul mov push (bad) push adc jo and test sarl cmpsb sub aam jecxz pop jb push lock mov and (bad) xor sarl js xor jmp sbb cli scas jb add fstl cs inc cltd adc bound bound inc cmp imul shlb fiaddl cwtl jp or dec sbb inc xchg fcomps xor cltd out push adc out enter push imul cwtl lahf dec xor pusha and and dec clc ret aam lret pop xlat (bad) lret and scas jo dec notb cltd repz insl sub ljmp dec out fs push sti add (bad) cltd adc and sbb out dec or fsts mov pop in sub jp xchg jg ds ret sub mov fnstenv push and stc pop sub pop (bad) repz fst mov push xchg or cmpsl inc or cmp or outsb jbe push xor das add push adc movsb (bad) sub push mov push stc addr16 cmp call leave shrb sahf das adc arpl in cmp pop xlat int3 test mov mov mov repnz mov in add iret ja popa xchg popf lret ficompl inc dec mov clc test scas mov (bad) add es pop mov out jle mov arpl rcrl xchg loope sbb call jb sub out (bad) mov pop lret xor mov inc pop in or roll jbe int3 xchg dec mov mov xor popf movb push jecxz icebp test jae xchg fadds dec xlat cli xlat xor dec shrl dec or xor inc cwtl mov out dec add aad loop nop sub shll mov xor or push mov popw imull stos xor sbb and shr out or scas jecxz daa lret push sarb mov dec sti jns loope imul sarl lods dec (bad) cmpsb xor or lods or or ds movl xchg jo mov lods fsubl xchg or out jb (bad) mov jb loope sti xor add and test insb mov repnz dec mov js mov xchg push in lds daa push or dec imul and out or mov inc and mov xchg popf fstpl sbb movl add fisttpll std add xchg das mov out leave pop or je pop pop pop pop adc push adc inc insb dec mov enter adc adc xor mov xor call out aam leave jmp ljmp jecxz sub mov mov fnstcw mov xlat sbb xchg insl imul mov jl push repz (bad) dec mov mov or pop xor pusha lods (bad) push adc cmp dec iret mov mov jg mov mov pop mov das xchg mov out mov out and out ss or out xor pop ret jl sub stos sbb out mov lret mov sbb mov je lret cmc sbb stos shr lret lods daa and jne dec pop add lret imul aaa in fldt sti test and add cwtl loop sub mov xor call idivb (bad) cmp test clc cmp xchg mov insb pop iret pop inc lds leave jb icebp fisubr jle (bad) cmpsl and xlat push test sti leave shl inc cli adc add add scas (bad) in fild add out sub mov into dec xchg adc xlat or lods ja xchg jnp push imull cvtps2pd in (bad) mov leave out leave mov cmp dec pop inc movsl (bad) cwtl iret out add ljmp sub jne ret pop je push fistpll push inc mov aaa outsb ficoml mov (bad) test adc pop sub sbb (bad) mov leave xchg sti lea add pop inc into (bad) sub cmpsb insb sub (bad) jmp repnz clc sbbb sub (bad) out mov arpl or adc stos mov xchg jae xor inc jno dec fild stos repnz je iret dec out push push test mov xorb or mov in stos aam and (bad) pop push cmpsl fstpl lea jbe mov xor mov insl jmp or mov mov adc add cmp sbb mov pop icebp dec dec rclb cmp xlat and lahf into lret lret testb dec dec iret lods mov (bad) mov repz push sbb fcomi pushf js or fisttpll shrb iret mov inc xchg and sbb jl loopne push out sbb mov daa jmp (bad) push (bad) out adc sti mov mov bnd xor cmp jp mov jbe frstor or sbb dec push mov jne and das mov into pop or lock mov into xchg mov mov mov sub in (bad) data16 adc std push (bad) mov xchg mov repz and lret or outsb mov sarb pop mov sbb out cmp sub insl fs sbb bound lock sub mov pop xchg xchg pop sbb mov push push out cmp lds fcomps out mov sub cmp jbe sbb inc test inc cmp outsb cmp sub test int push jnp cmc das mov mov jne dec movl add pushl inc lret fucomip and inc lods or ss insl push ret test je aas jg sets xchg cmc test ret bound or pop int or sub cs dec ret push mov std inc pop push pop adc ret arpl mov sbb mov pop (bad) pusha inc or andl (bad) mov ja addr16 ljmp negb inc push (bad) aad pop lret mov enter adc add jecxz aad out inc sbb imul lea push pop sub mov push xchg decl adc xor fwait in add pop push mov push sub pop add orw cld mov enter jp out mov jmp out jle bound push mov pop mov mov enter dec fistl mov mov mov xor add cmc add xor cs rorb add xor jl es and pop loop pop imul push pop loop pop mov or mov andb insb lcall and ret iret and mov add lahf mov jecxz leave (bad) cld dec push push jbe int ds pop (bad) sub mov push lret andl fidivl (bad) mov call inc lock lea outsb loopne (bad) mov dec hlt ret ljmp push sub call out (bad) aam ss rep dec test adc repz fs push xchg mov dec mov sub sti jb mull mov test xlat xchg test (bad) pop icebp and fwait int3 cmp les iret test jle lods test pop cld jns rep inc bound pop push aam fnop jmp (bad) jg jne sbb jecxz mov dec imul mov dec cmp xlat sti sub add add mov test outsb notb (bad) sbb in xchg leave leave push pushf enter icebp scas xchg mov xchg imul stc pop jle (bad) out pusha nop adc jle (bad) je lret mull ret xor sub mov repnz pop xchg cmpsb popf popa sbb not sub mov inc mov mov or lds jns mov mov cmc mov js dec fcmovb add stos xor negl and push out das icebp adc xchg (bad) (bad) pushf pop out xor sub std xor sub insl movsl jmp fsubl negl push cli xor xor and pop aam ficoml movsb arpl pop pop mov outsb and cmpsb mov jge or sub lods push adc lahf or jecxz cmp into negb pushl or shrl mov mov ja pcmpeqd and popf sbb xor push jge ret lret xor xchg pop daa sub xchg mov enter lock and dec out outsb add jnp mov out notl push cmp icebp or rcrl sub push add add stos fsts scas xchg repz sarl jecxz add ret xor inc (bad) dec jmp je cli dec pop (bad) pop shr or fildl jne mov xchg adc (bad) cmp out popf pop jmp mov dec stos adc push mov xchg or lret (bad) xchg jmp mov and mov xor out repnz and imul pop pop in and lods mov cmpsb ret pop push pop cmpsl data16 (bad) dec add out pop ja out popf pop add add xor ret or mov das data16 lods sub push and and mov xor (bad) cmp dec test out sub outsb test loop aam jns or xor pushf and loop,pt mov pop out mov or (bad) aas push loope test xchg sbb xchg push (bad) cmp in aam and pop data16 pop icebp (bad) sub cmc das ljmp fstpl jg int3 ret mov pop popf xor mov sbb les (bad) sub push and inc dec xor imul mov (bad) ret jge inc imul les mov xchg stos test add (bad) icebp shll repz inc add shlb test jmp jb je rcll sub or xor xlat scas mov sub ret aas mov (bad) sub mov sub fyl2xp1 ret and and mov sub (bad) mov add mul mov pop inc mov mov aam push dec les sub ret lods aad fild jmp mov sbb ret jmp push and imul and xchg daa push sub xor jmp mov pop (bad) mov dec xor push xor imul adc mov xor das pop ret mov out jne cld adc xor xchg (bad) dec lret out pop mov add cmp popl or mov mov mov fisttpll pushl fistpl loope jle out add cli cld fdivl and inc or xchg out out dec and or xchg aam lret aam xor jb xor mov xchg imul pop fs sti or pop sti mov popf insl jbe dec scas je mov cli pop pushf mov (bad) push clc mov sub push push call mov mov mov leave and mov push mov out scas mov roll sbb xor shrb ds adc ret movsl cwtl add lret or ds jmp ror jne dec or mov push jmp (bad) mov pop xor js lret cld dec push xor inc shlb sub sbb dec cmp and arpl and je (bad) jecxz and mov imull inc stos gs mov jne fs mov out mov into out xchg inc clc xor mov add sub mov (bad) adc or gs leave ficom adc mov add or pop scas pop inc enter dec xor repnz fisttp or cld mov daa push jbe (bad) inc ret adc mov mov cltd (bad) cmp jne mov loopne xor dec mov push add xchg lock or aas cmp repz sti mov sbb lcall iret cmp cmpsl (bad) out mov leave out jbe lret xor hlt stos in lds in dec lcall mov adc popa fldt enter ljmp xchg push jp add out and sub icebp mov sub fdivr icebp or push ss xchg cmp mov repnz push adc xchg repz in sub pushf ror mov xlat mov mov mov dec mov repz lret xor or dec (bad) sti fs pop xor (bad) dec push das loope mov xor ret sbb test pop sti dec sbbb xor (bad) lcall call in idivl test xchg sbb (bad) lds sub leave pop mov xor xor jne mov jg add mov xchg fnstsw mov ljmp (bad) repnz mov adc stos gs add (bad) xchg or lret sub decb sub dec das icebp icebp orl cmp fs and mov dec fadds (bad) xor lock jmp jl jge mov std dec mov xchg adc (bad) cli add dec cmc lea rcll xorl loop (bad) jne pushl add les add push fisttpl sub cwtl or mov movaps add add push push pop (bad) xor add daa nop inc jle sub push or inc fdivrs lcall mov out pop aam pop sbb xchg (bad) ja outsl int loope gs sub sub sbb lods add mov fldt lret rolb dec pop cmp mov push mov adc fisubr and les xor dec push inc ret push (bad) fcmovbe lds data16 test (bad) std imul (bad) movsb dec dec mov (bad) sub lds std cli cmc lds sub loopne lds push xchg in movsl cli or sub insb push jp pop push xor repnz xchg mov fdivs pop mov mov pop loop mov add adc imul and adc cmp mov sub cmp xlat mov cmp aaa mov mov shrl lods pop sbb (bad) ds sbb imulb add insl mov dec mov pop ret lcall dec (bad) cli das or and ret add cmp out and and xchg adc popa out xor call jl push cmp movsl aad out test fidivr (bad) cmp inc dec mov mov negb sub (bad) xlat fsts push dec (bad) mov cmp lret inc push cs cmpsb sub dec push cmp xor test icebp cld adc push sbb cs jge into stos xchg push jg out gs add dec ljmp int3 adc and push shlb adc leave stos clc call (bad) test pop hlt cwtl jmp stc xor sub ret jno push pop xlat or popf cmpsl mov mov pusha push popf rcll pop pushf scas cmp add call lret pop ficom add mov stc mov dec and lret lahf add add flds ss adc and mov stc mov push dec test mov sarl mov pop mov push lds push adc add aas iret sbbl call push xchg ret mov xor aam jmp mov xchg outsb adcb ds dec push or cmp sub cmp test mov xor jmp mov in (bad) mov lods mov dec (bad) pop and or add mov pop icebp xchg leave es enter mov jns imul outsl mov inc dec mov js and dec sub pop mov add mov iret cmp jb add les js mov dec mov movsl mov std loop lds inc orb mov bound adc sti pop rcr mov popf push xchg sub into jp sub cwtl adc lret mov or or (bad) or jmp xor inc cmpsb sub pop out pop das sub xor jmp cld xchg mov out pusha lcall mov ror sub lods cld add lret daa pop test cmp fisub push jge call outsb and xchg fbstp push or mov pop out sub mov enter in das pop xchg adc bound outsb (bad) lahf jne jb movl xor das out pop jge push rcr outsl xchg mov mov sti or xor movl push aam ret and divl aaa movsl fstl lcall fadd imul push or iret fistp sub sub lds mov or repz outsl (bad) movups movsb cmp (bad) aaa bound mov sbb jp lret mov lods loope mov inc sarb popf (bad) xor dec sbb (bad) (bad) fsubrl dec and push adc popf rcrl lcall iretw rorl dec fldenv aaa push int sub es pop push mov mov mov sub (bad) call push or xchg aad cmp fisub jo div dec and adc imul es popa call leave sub mov jge sbb add xor test mov adc sub sarl ljmp (bad) xor and (bad) (bad) pop out nop (bad) mov cmp add adc inc dec dec dec test or mov rorl pop or inc jbe std add xchg dec jl out cmp adc shrl stos mov loope add (bad) and insb jne mov mov repnz xorb push lret cwtl adc (bad) mov insb sbb sub incb dec clc loope mov ljmp jno enter add mov sti xchg or loopne,pn test mov sti mov sti add sub (bad) repnz pop sub mov or inc sbb repz or lock mov fstpl call out out mov push xor jmp subb push jp std movsl faddp das (bad) adc dec xchg scas addr16 and aas clc into rorb jmp push lahf push int3 leave mov addr16 shrb inc mov cmp add jecxz adc icebp mov push je in mov sub (bad) mov imul gs jb push (bad) fnstsw mov pop stc inc call mov inc sub fistpll lods jle pop push mov push repz decb pop icebp subb stc repnz xchg sub sbb icebp mov pop sub xchg fist (bad) pop dec add mov movsl fs mov (bad) repz sub mov fidiv pushf shr and mull jecxz or mov mov inc cmpsb adc stc ss inc lret daa call and shr cmc lds xchg fbld add das test dec call les mov icebp out dec call and stc mov jbe xor neg (bad) mov adc dec call dec (bad) sub sti xor frstor mov and pushf sbb pop cmp inc and sub loope sub mov cmp xor lcall sahf push mov add mov jne scas push daa push adc push mov scas imul push mov je cmc (bad) mov jb divb add mov sub cli (bad) xchg call mov aad cmp dec insl xchg mov xchg xlat and (bad) and out lahf xchg mov repz movsl or add aas or push dec add xor call dec in popf push push dec or add adc gs xchg bound lret push dec or repz rorb lods addr16 sbb rcrl loopne adc pop dec mov pop repz stc sti sbb add mov add adc imul repz mov and sbb add cmp or into pop and adc lret je and xor (bad) stos into bound or dec mulb mov mov fsubrs cmp es dec push mov adc fisubr les adc lcall sarl dec (bad) push stc mov test loop xlat mov mov mov aas out pop and test lods inc xchg inc lret sbb pop sub push xchg js das (bad) and adc or sub inc js push das out dec mov xchg test mov add jmp sub (bad) push or xchg mov push (bad) lds iret cs cmpsl pop dec scas xor dec pop cltd xor enter (bad) xchg ret mov xchg loopne sub mov push cli inc or and pop dec cmp pop xor fstps add aaa test jmp mov jl mov push sub mov pop inc ljmp sub xchg sub push fadds and scas gs mov jle (bad) xlat mov jmp lock fadds or xor int3 jmp mov in scas aam fs xchg frstor sbb iret lds iret int sub adc xorb icebp cmc push pop sub call out pusha fidivr mov add mov add das jecxz daa push add xchg fmull sub mov ret dec movd adc mov stos mov push or add pop and ret push imul xor lods pop dec aaa mov bound lret stos or jecxz shrl sbb jno dec iret popf sbb add stos mov sub cmp xor push insb (bad) mov dec push fstpt jmp adc lret and add cmp cmpsl push repz and test call pop aad fwait cmp dec test mov repnz and mov lret mov adcl xchg pop pop jo and or loopne lret popf jne adc add pop aaa xchg adc pop das sarb in jmp add add add mov imul mov or mov loop inc jne repz xchg mov arpl ss or out dec cli test out dec cwtl bound xchg xor ljmp adc add jnp and or jmp enter xchg or push out push lock add mov mov scas pop inc mov push mov push in jl fxch xchg sti and and xlat dec add jmp add pushl icebp lahf xor mov mov lcall pop inc (bad) cmp sub xor scas mov pop add lods aaa fimul fdivrs mov jno lods fisttpll ret xchg jmp jne cli dec push mov jbe and sub data16 icebp jmp sub adc call xor jl pusha or sub lret lods dec xchg cmp lret in adc repnz pop push inc lret inc data16 sub data16 xor out das mov lret pop mov sarl pop sub pusha xor or rolb call rcll sbb out or or into sbb pop movsl cltd shlb cmp mov (bad) outsb cmp and jno push mov ret xlat adc repz dec lahf movsl adc xchg mov stos lcall add jmp aas (bad) mov rcr test mov pop stos dec idivb or mov jmp xlat xor in push mov dec into fsubl pop mov test test xchg jne pop mov xor cmpsl dec test stos cmp mov scas mov (bad) inc out sarl sbb xor xor pop adc cli jne dec jle and and mov sub xchg (bad) ror fdivrl cmpsl push into insl (bad) mov adc dec xlat popf xor xor nop cmp aam sub and out mov cwtl (bad) xor repnz or jne mov ds scas add in lcall fldl aas sub daa inc dec ljmp jns scas mov mov (bad) test xor cmp sub push notl lods lcall sub cltd inc aaa pop jbe jg inc mov aad inc sub jmp mov int3 and xchg lret mov mov jbe fs fldlg2 sub push repz add sub pop je scas pop divl clc bound lods jb pusha imul sub aam adc stc stc xchg cld pusha dec cmp mov out loop sahf xchg leave jb add scas cltd fs stc xor out and je lret mov jmp lret test add mov and aaa and sbb or sub bound pushf and ret fisttp xor repz or aad repnz mov std and scas cmp adc fs xor stos xchg jp lds mov sti out dec cli sub inc push sub mov add jle and lds mov sub outsl call adc add (bad) cld xor stos fild stos jae cmp push or in dec xor nop js lock popf pop xchg cmovnp dec cmp das mov adc mov sub (bad) mov cmc popa fucomip cs xor into aad orl xor push push mov cmp (bad) or divb in pop clc lret xor mov stos jbe adc cs out and test loop pop pop jb jge mov mov and hlt push fld1 das addr16 sub call push mov aas inc pop adc sahf iret push or xchg jp push and sub pop fstpl fcmove push icebp daa cmpsb mov daa jo mov push icebp scas nop (bad) lods hlt movsb out negb and fs outsb mov mov lret and std shll das idivb or cli mov push push add aad dec cmp mov xor fstpl lret cmp adc xchg add testb ret ret or and cmpsl jb vmovaps test fistl add push jmp gs (bad) push jmp xor scas testb add mov in push jg (bad) cmpsl (bad) repz push lahf inc fcmovnbe jae movsl inc out repnz jo and xchg sub add cmpsl push adc test and cmpsl fildl push push mov lods pushf push push imull fiaddl (bad) (bad) sub pushf xor xor jne stos loop xchg jo or insb pop xchg ss xor cld dec out inc out push and lahf mov int int ds cwtl and mov out inc mov or sbb pop xchg jmp stos mov adc xor mov out leave sarl stos test xchg stos lea sub cmp popf rcll sub adc pop and xor (bad) popa dec loope lret mov decl fsubrs es sbb pop and enter std addr16 (bad) repz push lods lods movsl ljmp out sub push daa ljmp fidivr adcl dec pop xchg jle and aaa and push push ds dec enter adc mov cs sbb test xchg inc (bad) mov dec sub push jl pop inc add cmp jle test lcall push lret push test mov mov shr (bad) or mov mov mov adc in cli fs jbe pop lahf mov xchg push mov inc xchg sub mov pushf icebp pop das or mov pop and pop mov stos bound nop pop sub sub clc clc fdivs icebp pop inc mov fisttp repz pop jnp push sub (bad) fmulp cld nop jo adc jno bound xor xchg adc jae pushf jmp test aaa dec fisttpll mov out mov jl push jp inc push scas xchg int3 xchg xor (bad) xlat cmp inc dec pop jecxz pop (bad) mov dec (bad) leave mov jge in and xchg sbb xchg stc mov imul repz mov adc inc es out das mov rorl imul setge pop outsl sub sub xor testl adc cs sub push add repz jb lds push jo and clc sub jmp mov lret scas gs adc into and mov mov push (bad) out push out mov insb push xor xchg push cmp pop inc inc xor mov mov dec xor call in sub add in stos test gs out xor sub push ljmp fidivrl mov pop test ljmp ret arpl (bad) in xchg es aad mov insb rcr xchg push (bad) fsubl mov leave js add stos mov fsubs (bad) mov inc dec test sub aas or add sub sub je or push push dec or xlat sbb add add sub mov pop clc clc dec mov out and xchg mov ret jge sar scas xchg enter fdecstp xlat adc sub mov imul out xor pop add jmp adc jb dec mov (bad) sub stc data16 loope into push aas cwtl incl dec shrb stc fisttp mov sbb or test fimull aaa adc scas xor xor aas cwtl pop out mov sub mov xor fs sub inc xchg clc mov add cmp mov mov fwait xchg movsl les (bad) sub loopne and pop roll push fisttp jno inc das aad lock or lods les sub stos repnz pop mov pop sub and jno dec imul or cmp push add pop mov sub xchg fidiv adc xor lock js pushf dec ljmp mov cs sub and add and and fstpt cltd xor in (bad) cmp inc sub jb xchg lock leave push xor bound and add ljmp test ds xor (bad) sub dec popf je jp daa into xchg call loopne xlat pushf mov and adc xor rorl mov mov cmpsl cld add or stc jg idivb fild push jo mov dec cmpsb test sub mov pushf mov lret lss adcb cmp iret out js out in (bad) mov pop xor mov sub mov sbb inc push jl loope mov xchg ljmp mov fisub lret cltd sub and repz fist push je cwtl pop xor fstl stc pop loopne mov jp ds js das fbstp cmp xor pop sbb loop inc xchg mov mov icebp js jmp (bad) fs push mov dec in xchg mov inc shrb adc fidivl adc ljmp mov es mul rcr idivb lea inc sub jl mov shll pop (bad) mov and fwait mov xchg and fist fldcw mov in (bad) mov subb xor ja cmp sub ret jbe adc loope daa adc add or cmpb jl sub ficom sbb xchg push dec scas cmp jnp mov pop (bad) andl pop movsb and (bad) pop sub pop cld gs sbb shr and xchg lock mov imul cmpsl xlat xchg std cld call popf push or lods mov jge sbb rclb and or cmpsb mov sub adc mov hlt rcrb nop mov and jle and imul and ljmp mov popa rcr jmp mov loop insb push or pop and repz test idiv sub jmp stos cmp aaa xor in out sbb and xor jno outsl out cmp das into in sub and xlat fstpl shll sti mov loop xchg repz dec scas adc ret push inc arpl sbb cs notl pop call xchg rcl adc int3 and int3 lcall jne inc and in ljmp shrb lret pop sbb add dec sbb mov mov jbe adc negb cmp ja push add imul fbld jne adc rcrb xchg out push adc push push sti test push arpl jbe push xor ds mov push out cmp jle leave inc leave sub sub pop iret sub xor into and sub cltd push test sub out adc push into and add outsl mov push mov fidivrl mov sub aam (bad) in lods andb or mov mov mov fmul pushl (bad) xor xchg or rcll andl (bad) mov add xchg lods push cltd mov das sbb adc xlat cli lea mov push xchg push lcall jnp mov pop dec mov xor cs fs mov push aas cli mov mov out mov xlat xor inc or (bad) cmp pushf adc test mov or xchg pushf add and xor (bad) cs mov mov icebp test aaa xchg jbe,pn adc ljmp jne scas or incl or sub mov xchg adc xchg push sub ror ja sub repz ss outsl inc xor iret add cli les push enter lock or push repz pop cld xor add or lahf cld call arpl (bad) cli (bad) (bad) in stos pop stc notb dec orl arpl mov xchg clc or dec jmp push cwtl dec (bad) ja lock decl xchg divl lret sbb sub jmp pop mov xor cmp dec pop pop add mov outsl (bad) sbb cmc sti roll push mov dec adc sub popa into add out iret sub dec cltd imul xor fstps cmp shll jmp pop mov loop clc and or xor enter push aad push loop std push xchg not push adc mov sbb enter xchg ret push out cmp fildll cmp mov and pusha sbb sub mov push int and (bad) mov mov dec pop and xor and mov aam dec sub or jl dec (bad) mov push divb push mov mov xor push sub das and xchg or fucomip push dec (bad) lret jle mov ja lods xlat and lock sub test les ss sbb inc jnp cmp shrl movsb (bad) mov insb mov dec push mov ss das scas icebp in xor xor ljmp xlat loop scas jp dec xor cmpsb aad xor scas mov neg (bad) mov out mov test xor xchg (bad) and xor xchg mov xlat insb inc dec shr or lock mov mov loop mov std in dec xchg imul dec jecxz adc out add ds mov cmpsl mov inc mov dec fildll fidiv cld push (bad) jmp pop notl test mov xor mov jecxz (bad) (bad) insb pop mov sub adc cmpsl xchg pop pop roll adc xor and adc (bad) je inc clc nop gs lcall jge shrl and adc dec (bad) adc dec dec mov lahf push into lods test pushl into cld ficompl (bad) fs test xchg shr cltd (bad) jp stos cmp dec mov (bad) adc xor addr16 cmc and ror inc (bad) pop das (bad) sbb adc or and test (bad) xor cmp add dec inc xchg (bad) or movsl gs loope das sub xor ja (bad) mov ret inc mov loopne and xchg xchg and icebp test pusha cli mov mov aad (bad) push push jg sbb mov loope das jno xor cmp popf imul add sub insb adc call cs sub push pop add scas cvtps2pd test and ds push imul jns jno,pn or loopne mov xchg jecxz mov mov add jmp jns scas cld pushl fldenv sbb loopne lcall xchg or jle jmp mov and dec or lock repnz mov bound insl add cmc pushf xchg or xor (bad) jo popf xlat pushf mov insb sub rorb lret pushf cli lret pop fistp sbb pop dec dec mov leave dec or push inc loopne adc fdivs das mov pop lahf adc add mov js (bad) jae or aaa outsl outsb push imul adc and movsb and and pop and std aas repz test daa aaa aad in aad cmp (bad) or and push movsl jmp lea lcall sbb inc js sahf xchg imul and (bad) inc pop cli ret into push stos enter popf (bad) and fdivr sbb jne mov cmc fistpl sbb cmpsb jnp xchg add jmp ficompl sbb sub and sub ljmp push pushl xor sub add cmp out sub jno (bad) mov lods call mov lret je pop adc in dec arpl icebp sbb roll mov imul mov mov add sti dec or sbb lret ljmp mov jmp add mov pop xchg (bad) repnz mull xorl inc stos mov es xor adc or dec clc and or mov mov sbb (bad) xor fisttpll ret push stc out mov adc test shr pop and pop lret sub push iret lret xor push aam ds sub cwtl jnp es xor in cmpsl (bad) (bad) and loope leave ljmp pop xor das cli sub outsb rclb test xor std adc mov xchg mov jnp xchg pop imul roll cmp sub shrl test pop dec mov xchg pop mulb divl andl xchg xor add into cs mov sbb addr16 mov mov and dec ss or dec shr xor scas push jb mov jno jo cmp mov into xorb pop sub pop xor ret decw xor jmp movsb lds clc lahf dec cmp pop mov jmp cmpsb adc (bad) dec jmp outsb jmp adc mov daa js xchg ljmp scas (bad) arpl jns dec testb add mov pop sub xor int3 push or into add mov push dec mov clc inc movsl and inc or jb shrl cmp dec popf in mov mov or pop jne mov mov mov add loop xor loop aaa pop jle push ja fisubr inc lret faddl flds fidivr es or idivl das mov sbb add mov cmc cmpsl incb cs lret adc mov int3 add lret xor scas mov iret cs fldt out xor sub xor pop inc and inc xchg pop push xor and adc daa mov push lahf mov mov push (bad) scas jbe in mov xchg sub and mov divl popf popf sbb xlat jne mov dec add daa aam sarb bnd (bad) decb incl lock pop xlat xchg dec pop gs sbb push or dec imulb xchg ja mov push in das inc movsl in imul loope and jmp movsb das cs imulb add push sbb inc jge inc push (bad) mov cmp xor lods mov and add cwtl movsb add std (bad) mov (bad) movsb stos mov pop std push aas aas xchg fidivrl fisubr or ret cwtl dec out sub xor jg xchg pop cmp out mov sbb or pushf std imul cmp push ret sub xchg (bad) (bad) outsb test pushf jmp add add pop pop mov and mov add pop jns (bad) inc mov call mov pop fisubl cli notl xchg lret mov subb sbb xor cwtl and mov gs pop lcall sti je mov xchg jmp in adc sbb test mov xor lods push push add add mov jmp jns and scas mov pop mov pop mov push mov loop and je loopne push mov (bad) enter sti sti arpl dec fisttpl adc mov jno movsl (bad) mov xor jno dec leave pop sub fs lods push aam cmp sub jmp and mov and popa lsl jmp fisub jne jl shrl sub jl leave mov pop xlat stc sub data16 jmp (bad) fcmovu dec mov ret (bad) cs roll xlat or push pop ret or in aad cmc mov pusha repnz cmpsb sbb mov mov out cmp and mov push mov dec pop pop lods sti mov mov pop inc pusha dec sub lcall lret mov orb fsubrl ss repz adc mov push mov (bad) pushl push pop test push add xchg push mov je aam stos cld das movsl mov sti or es push and mov aam mov stc xchg mov pop test fucomip xor (bad) sti sub mov fdivp (bad) and leave sub loope jno out and in cmp xchg xchg repz imul sub fs xor inc xor sub pop jmp add (bad) icebp pop int3 repnz call jmp int3 lods mov dec inc mov imul icebp pop dec test xor xor mov stos pop pop sub inc stos add mov or adc add jmp push pop push push bound stc xchg fwait cmpsb pop cs ljmp jg dec sbb lret jl pop push jl mov ret pop movsl or sbb or orb loop sub add adc mov jne push mov pop sarl xor add jge sub pusha ret (bad) xlat cltd (bad) lret pushf outsb cld addb sub xchg iret inc loopne cmp mov fisttp fadds hlt (bad) pushf loope and mov fldl pop sub mov push inc scas gs sub shrb sub dec insb sub loop repnz adc and cmpsb mov daa std cmp or cltd jl daa lret mov imul jge mov scas les cmp xor mov ret mov cmp popf push insb test mov fiaddl daa or and divl jnp add mov xor stc or stos movsw cli mov pop stos add call and jno cs (bad) dec pop scas add out adc add dec xorl or idivb mov ljmp ja and xor movsb leave fcoml lea xor retw mov test lahf push incl and cmp div pusha or mov mov adc ret dec pop push push and and fist xor pop lds xlat xchg xor mov test mov mov and repnz pop sub in int3 rcrb lods and (bad) movl fdivs out jbe or cmp mov xor test sbb dec enter push and sub xor fadds (bad) lods add inc ljmp dec inc sub jg out jne or and xor mov (bad) push dec out test (bad) xor xor and (bad) (bad) xor (bad) sub lods popa mov (bad) ss xor push and jecxz dec leave mov sbb mov je das jle pop loopne pop loopne rcrb mov test mov jg pop repnz in das outsb xor xor nop scas sub out daa or fiadd jmp or jecxz pop mov flds (bad) fildll cmpsl adc pop push xor and les xor ret push mov or mov jno or push icebp insb sub jge and and add mov pop lea add sub mov icebp (bad) divl je clc pop add stc pushf mov je push into loop xchg xor call pusha dec push mov sub loop sub in test xor icebp lds (bad) push xor movsl fimul aad fcoms rol icebp xchg test negb aam mov mov xchg adc and cmp fnstcw xor mov sub idivb sub loope mov sub mov lret mov dec add fidiv (bad) (bad) sbb push push xor dec iret xor push sub and jg mov loop sub repz sub out add out mov ret mov fs sub mov aas dec inc inc mov into (bad) inc push hlt test test dec jmp dec pop icebp add lea add cli xor or dec fst ljmp lret or lods movb sub shrl adc adc mov (bad) daa lods pop lods fildl fsubrl mov into dec pop cmpsl inc montmul cmpsb inc ret jae lods movsl daa ror dec notb dec mov jecxz and or (bad) hlt int3 (bad) mov sub jmp loop push push lret push or dec xor ja ficom stc and loopne repnz imul fsubs loope cltd cmp mov (bad) notb dec mov test add aam into xlat mov mov mov mov pop ret notb lds pop sbb in and add adc push cltd or xor cmp cmc adc into push pushl sub xchg das out jmp add shrl mov loope adc sub in xor or js push lds int3 cmp push test mov lahf mov mov aas sub sub leave ret xor ljmp add sarl in mov cmp or add (bad) aam add loop movsl xor cmp xchg adc pop mov xor lret in in dec repz dec mov xor dec mov stos out imul fdivs and xchg icebp xchg lods imulb gs and push flds mov mov and jbe sbb jmp cmpsl or rcrl jmp insl movsl fisubr add xchg rcll leave jmp pop das clc add ds loop fstpt lods mov leave aad jns or inc aaa repnz repz pop pop pop mov fist mov cmpsl fadd shrb insl push jmp scas popf push mov loop adc ss inc xor std (bad) movb stos lret inc lcall mov out sub cli adc adc pushl xchg mov cmp push mov xlat jno dec push out xchg cmp clc call daa inc fist or flds dec stc int add jmp add mov aad mov in cmp test pop cmpsb mov mov push sub pop popf loopne add jmp pop leave clc jo (bad) mov rclb mov add fs mov xchg mov mov dec dec jb (bad) xor ja jecxz rcrb push cmp imulb call into and enter lret xchg mov jne test mov iret gs add jne pop lahf loop adc jne mov scas lret jmp mov call add pop push mov push dec (bad) (bad) stos sub mov fdivs sbbl imul dec adc orb mov pusha or dec cmp pop insb insb mov jle and repnz aaa pop repnz add lods inc pop out push add push add int3 sub in xor (bad) iret stos mov data16 movl pop cltd scas ret rcrl dec iret add inc adc ret (bad) icebp push fs cwtl out dec insl test push js inc sub notl push and das xchg jae pop push adc sub push cmp or lret mov xchg inc ret jne mov pop je in repnz or in jmp cld inc (bad) cld lods cmpsb xor xor adc pop mov and cmp pop pushf and dec and (bad) xlat sub cs (bad) cmp jb and or or xor aaa cmpsb loopne dec cmp jecxz orl xchg std daa (bad) mov add sbb mov cmc and imul test leave pushf fdecstp mov dec dec ret movsl jl,pt pop jg push dec aaa scas imul movl fsts icebp add lret pop (bad) push lret push gs (bad) loopne es xor fcmovu cmp or lock xchg adc xor clc dec stos push jmp sbb iret add test scas mov push (bad) repz ret jmp mov xchg lcall dec and jmp add mov mov sub xor jle or das cld xor aaa insb test icebp pop mov push xchg xor xor cmp add xor scas aam dec mov lds xor in je stos add loop mov pop mul xchg sti pushf pusha fistl xchg dec sbb stos out xor sbbl jbe (bad) jae adc rorl push xchg mov inc pop mov sub (bad) pop clc push icebp xchg mov ret std popa xchg fcoms (bad) fdivrs dec rorl mov sub or lods hlt sbb ror pushl test cli or aad pop mov ret dec xchg xor fdivs mov push cmp mov jge adc fidivrl or sbb sti add xor pop mov mov sbb mov lret cmp incl and imul xor clc sub pop adc mov dec sub push jb into jne xor sbb mul fpatan or cmpsl pushf push adc cli lret fdivrs repz add xchg (bad) repnz nop or shll icebp movsb and lods divb xchg mov jnp stos mov in or and lods (bad) fldl std in xor push mov mov (bad) jbe cmp adc sti (bad) sarl mov push push (bad) fcmove jbe xor jmp push xor mov fisttpl cli push pop ret daa data16 cld jecxz fild cs sub ret mov fnstenv inc cmp jmp into out lock or cmp fnstcw dec adc dec inc ret mov adc inc sub xchg dec mov addr16 stc xchg (bad) (bad) stc into lods das out inc mov nop (bad) dec mov and cmp add out fadds lahf pop fwait xchg iret dec sub out mov ret cmp add xlat mov repnz gs mov xchg in icebp jecxz and xlat data16 add mov cmc sub repnz push loopne jo mov idivb ss lret cwtl mov in call imul mov test pushf out cld or stc dec mov test aaa add sti jg outsl and xchg sbb sub sbb push sub arpl adcb pushf adc mov sub rorb xor sti out shll fdivrs clc loop or adc notl test mov inc fstl stos bound or arpl lret jno cmpsl mov fwait dec out popl sub xor cld jl xor inc outsb xlat outsb adc data16 ljmp sub xor jecxz dec call dec dec test mov (bad) sub loopne das inc into lods mov add xor notb inc adc lret mov fisub fcoml pop into or and adc fdivp lods sub out mov or pop and (bad) pop lods (bad) dec and xchg (bad) sub adc and neg pushf pop popf aad sbb ljmp or insb popa mov pushf leave out shll add mov gs and push repnz sub scas popf arpl popf add into dec test mov icebp out push or test pop xor and xor in mov dec mov mov xor or xor and hlt shrd sbb or popf sub out cli sub ljmp mov pop mov fcoml mov leave (bad) loopne loopne jp fs or add sbb hlt lret jecxz rorl cmp ss (bad) sub outsb xlat dec fmull sbb dec mov lea mov popf notl adc out adc ret test loop stc stos loope pop sbb (bad) out xor jo fdivs mov sarb xor pop test (bad) not cmpsb cli faddl sub mov test and stc aad cmp lods sti mov out lret jmp push leave aad inc pop addr16 adc cmp out add adc dec insb icebp pop icebp stc iret push in mov sub mov lea sahf or adc loopne (bad) xchg jnp and adc sub scas mov sbb xlat jecxz or or insb xchg aam mov inc shrl inc ss xchg mov pop ljmp mov rolb insl xchg add jns movsl rol lahf pop xor stc pop dec pop sbb jp inc dec pop dec mov dec aas inc int3 pop pop pop xor popa pop mov lock call cld jle pop imul push das cmp adc pop jnp mov xor xchg cmp testl enter dec or loopne xor mov inc or jecxz out xor mov pop push repz dec mov in cli lret cwtl add push and decb and adc int loopne mov or xlat add mov stos mov inc cmp divl pop (bad) dec cmpsl movsb (bad) mov adc fldt shr inc xor add push loopne xor inc add sbb xchg and (bad) dec mov mov cwtl mov and in inc and mov cmp mov lahf and pop loopne out mov imul add es fidivr xor rcll mov or int3 mov lret xor sahf out add xlat in dec sub sub (bad) xor xor mov add into dec (bad) mov (bad) jbe inc and daa pop jmp cwtl scas mov dec sub mov imulb mov outsb sub in mov (bad) ja int sub jg or add or add add mov out dec lods xchg cltd and dec push mov jl and (bad) mov inc pop decb je add adc add outsb divb sbb movsl jmp popf jl push adc jns adc add sub aam adc (bad) aam pop dec dec jg and je jmp (bad) sub xor dec pop into scas cmc xchg jo stc jb push or mov jmp orl fstl arpl mov lods dec jle pushf or or push jge jmp ret ljmp mov les test (bad) mov add jmp mov inc or xlat gs sub jg aaa xor rclb ret test cmp sbb rol (bad) aad xlat pop jmp fsubrl pop xchg cwtl or jmp xchg ja call scas adc lret sub xchg in lcall (bad) jl jmp cmp ret jo or pop add jo jb in and sub dec clc xor xor cld mov sbb and cmp mov lds sbb scas dec cmp or rcrb imul ret fnstcw cmc idivb std lret xchg adc mov and mov push and sub sbb sub push mov or daa and jge sub divl orl cmpsl mov aam sub pusha and xor xchg loop or jno dec (bad) repz jge stos push sbb ret je in or inc inc call in xchg mov ret outsb dec and xchg add (bad) sub xor fcmove cmp mov sub jns loope jno,pn or sub imul and xor in adc out scas jecxz mov jmp aas mov dec or add inc jbe xor movsb aaa cld divl mov sub imul jg jb hlt sbb mov mov adc int3 jle fildll out add ss outsb adc cli mov mov shrl push ret lret sub lret iret aad or and xchg int3 cli mov lods mov pminsw cwtl rorl xor add fs jne repz into add rolb xor idivb push dec sbb incl mov dec pop bound xchg imul xchg sub (bad) push jle push (bad) gs push jmp xchg cmpl push cltd adc sub pushf repnz repz (bad) stos out and pop loope pop xchg jl (bad) (bad) sub enter inc sbb mov sub dec lock lea jae adc gs test adc xlat aas or sbb jmp mov je mov add sub mov test pop std mov mov mov mov push fiadd dec repnz mov pop popf pop fwait inc pop dec iret or mov in stos jl pop idivl cli cmp (bad) push insb pop pop add and leave test inc mov or and or frstor push sub fidivr and push mov out mov and stc cmpsl push sub jbe cmpb (bad) out out cwtl mov xlat mov adc sbb lgs enter test sub dec mov out xor xchg mov inc push push mov jle fimull sub sub inc cmp add imul leave lret pop xor ss repz rcll lods jp clc add mov inc sub je push frstor lret test pushf outsb int inc xor cs test fidiv jp push mov add cmp je sub fist sbb (bad) test fdivrl out xor pop mov xor sub add lock sub mov pop lock mov xchg lds mov fucomp or mov xor (bad) or lock (bad) mov fild add or stos bound ficoml jp bound dec inc call jbe inc ret pop pop je mov js sub adcb sbb in lcall les add xor loopne into mov js dec outsb nop dec sub pop pop jecxz stc mov negl push lods flds push and xor push clc xchg icebp in aaa xchg sti imul fcomps or or daa jne mov loope decl cld mov add shlb pop push je push fs shrb ret ret mov push xor leave jns (bad) lret int3 sub (bad) loopne mov add fs jo dec xor addr16 or lea push pop movsb out and sub mov lds ret or fsubr daa sarl jbe inc jb add add mov scas mov dec jno (bad) arpl and movsl imul jge xchg and dec out cld divb sub xor inc xchg and cli xchg into addl add je mov push xor mov xor push xlat pop or scas xor fwait (bad) sub and dec lock iret shrl in loop fnsetpm(287 lods nop les mov clc jbe dec inc into fmull push (bad) dec push adc mov mov enter dec leave xorb ja sbb inc (bad) inc hlt mov cwtl xor xchg fstl mov add stos xchg psrad repnz pushf hlt mov test sub jmp iret and and dec lret jmp lret mov pop cld iret leave (bad) push inc sbb pop adc push lret sti lret adcl xchg mov (bad) cwtl jnp xlat jbe fcoms mull push cmpsl (bad) imul pop jp dec stc adc imull mov xchg test daa fdivp ret jg mov das sbb add pop mov (bad) negl mov push cs cmp pop sbb pop dec cld dec in cwtl jno mov das fnstenv fs pop jno dec xor pop mov mov jne mov add sbb dec lahf pop xor push out mov adc add rorb test jl es pop fxch cmp lock je ljmp je mov jmp jnp imulb push sub lret (bad) sti imul fs inc std popa (bad) xor mov cli cltd dec jbe js rcrb ja roll lahf in aas loop mov xor adc mov popa sbb jns (bad) adc jns lods js mov sbb test repnz mov ljmp repnz cmc sbb (bad) jo int xor xor fdivrs daa notl ret out stos sub repz fs rorb mov pop ret sub daa nop push xlat mov popa loope repnz clc movsb push pop ja pop push pop xchg and imul xchg pop mov addr16 dec mov clc xchg data16 and and mov (bad) cmp pop jne fstpl lea sbb loope ljmp inc inc movsl cli or (bad) fsubrl adc arpl cmc out outsb aaa push test and add fistp mov jp dec mov jge ret add inc ja jo fldcw mov sub aad sub sub jmp ret or insb adc mov (bad) scas sbb xor jae jmp xlat sub mov cmp (bad) fidivl scas jmp sub add sub (bad) pop repz ret sbb daa stc dec idivb nop iret mov popf and movsb es pop and mov push or nop or aad pop std add xchg lret rcr lcall icebp pop movsl jle lods jns or and push cmp test add mov xchg test into jmp xorl mov out in pop fldl lock and pop cltd call mov (bad) lret in daa (bad) xor lods xchg pop xor add lock mov lock fwait cmc jns int3 and notb or push popf into in push inc test je in mov out and jge mov and (bad) aam jb add or or stc mov (bad) stos mov ficoml cmp ret test mov add mov lret and mov add pop lret push push or fsts cmpsb movsb push mov sti and jmp cli jne stos test push mov mov inc into loope std xor imul dec mov inc popf cld mov out or push icebp jle jle xor stos jecxz adc adc stos jecxz outsb and movsb les cmp jnp xor rcll xchg mov or mov pop xlat or mov (bad) adc inc push jmp adc das rcrl pop and das ret xor jno push out or jbe or mov inc ret decl (bad) jmp loope push xchg dec daa xor sbb sbb adc jmp adc xor das and pop pop fisub mov push sub mov lods push movsl mov lea outsl in sbb pop imulb dec and incl xchg add inc mov imul insl shrb lret xor cwtl mov cltd lds adc cmp ds sub sbb dec jge ss push out fiadd xchg enter push sub xchg xlat mov lea ds xchg cmp fnsave sub xchg fimull lea pop mov dec push in add xor fimul sub xchg inc int3 icebp push sub jne mov iret sub xchg das fwait pop daa inc push and movsl xlat push fidivrl jmp out sub and cmc lret stos mov cwtl mov loope (bad) dec pushf out test dec adc out cmp repz mov sbb sar mov add jno sub jbe dec scas xor adc rcl sub (bad) je pusha add scas mov adc xchg pop xor mov xlat dec sub sbb mov stc mov adc jg and push cmp popf jl pop push jno,pt shrl cmpsl (bad) sub or (bad) mov divl xchg adc adc or lret adc cld jle xchg mov icebp cmpsb imul mov jecxz lods (bad) mov dec aas repnz test add and scas (bad) aam add ret scas mov (bad) xor in xor ss add mov aam leave lcall lret xor cmpsl daa cmp dec iret adc xchg dec pause or fistpll pop xlat sahf fbstp xchg in gs pop (bad) push mov mov repz push and arpl xchg jmp cs lret cmpsb cmpsl jmp test stos loop xlat enter (bad) lock and mov jmp daa mov loop lcall fpatan add sbb mov pop sbb stc aas bound aad aam xchg xor add adc mov xchg lds movsl pop or enter ljmp xchg jge into outsb fstpl lret or jbe sbb std xor add xor push push adc cli repnz xchg in xchg xchg mov es into daa dec sbb mov lods (bad) push pop dec movsl push stos sub (bad) sub leave leave sbb sub das xor aad dec sub repz out imul mov adc lret mov add (bad) xor nop push xchg mov add aaa mov or (bad) xor pop cld inc jmp outsl sub adc mov jnp into daa inc inc es adc shrl daa shrb aam add gs mov xorb pop loope mov mov fstl lcall xor inc (bad) mov das out xchg cmc lods pop mov call nop imul imull push fcomps lret mov into dec jge out xor fstpt and and cmpl icebp cld (bad) cmp jb pushl fimul fsub stc xchg mov jle in add and decl (bad) jmp stc xor mulb test subb cld sti test mov loope xchg xchg sub fwait movsb and sub lea and out sub cltd rolb jecxz sub (bad) dec xchg mov inc out inc jg push mov and sub stos pop jo xchg gs into inc push loop shrb mov dec int ret xchg mov xor loopne ljmp dec rorb rcll out mov pop pushl push out mov or pop neg push xor lods mov add dec lcall xor iret out repz rcll mov pop sti xor xor add clc gs adcl xchg ficoml outsl jae or and or pop mov sub mov and rol fbstp dec fcomip outsb dec les xor mov push or pop jno dec js mov inc rcrb orb xchg mov insl and imulb daa lods or roll adc and (bad) out sub and sbb xchg fadds rcl xlat sub jae and jmp pop dec scas je fdiv xchg cld jno (bad) mov add ret addr16 ror imul push cmp into dec sti les test fisub mov cmp cmp mov jp je cld add push (bad) xlat and outsl lock pop mov ja mov and (bad) jmp ja adc sub push leave out pop lods jl sbb idiv adc pushf movb add rolb (bad) ja das stc sti mov sub jl mov les fnstsw mov clc jne call adc fstpt dec js popf lcall rsqrtps ja xor mov mov mov inc jecxz cltd (bad) xchg mov repnz fs xor popa and popfw pop dec fwait andl inc leave fistl mov enter mov ljmp pop mov aam imul (bad) xor mov sub jmp pop mov cwtl sub sarl sbbb xor sti pop mov inc jmp pop push sub aad jmp pop dec nop fstp jecxz dec push mov imul xor mull mov (bad) mov cmp add das (bad) sti in orl das and mov jno or and adc mov and mov iret jmp lea push ror add stos fs dec dec and adc push xchg fnsave (bad) dec aam fidivrl xchg push movsb dec cli sub out xchg push xchg sbbl mov xor sub (bad) sub jg iret leave and push (bad) fucomp adc frstor and adc mov mov out inc jne ror lods bound sbb outsl and pushf xchg mov imul das loopne divl push fmull push pop (bad) mov adc nop daa xchg test sbb or cli test add repnz movsl notl dec dec fmul in xchg inc mov push imul mov (bad) lret sti lret aas jbe das call pop pushf push or xchg dec or add or out das loopne fsts fnstcw inc ds xchg (bad) mov xor or arpl les jmp pop pop push mov cmp imul dec adc test cmp jg add out bound test fadd sub aas sub fs push xchg lock imul xchg jns mov ja fsubrl add pop mov add mov fsts and inc test push mov sahf fist xlat out fldenv ret cld ljmp xchg into jle daa add in mov pop ror call jle (bad) inc movl sub mov lret sub or and mov (bad) mov xchg sub in loope lock bnd loope outsb jne mov and jns dec lret mov pop ret das mov mov mov mov xor out negb xchg out sub icebp push mov movb pop push mov xchg out mov xor sub xchg sub (bad) and pusha repnz nop mov lods pop (bad) or dec cli mov pop iret and repnz mov push mov and jmp mov dec scas mov jmp (bad) mov push and add nop inc jno fdivl xchg iret ljmp int3 hlt push cwtl dec mov mov rcrb sub pop sbb pop mov jp and or incl and or push push pop lret call out jecxz mov push out ffree repz fidivr inc pop mov cmp xchg cwtl outsl xor das sub into sub cmp gs jmp jbe cmp hlt out les and push xor popa fs loopne xor lock lret sub jmp int outsl std xor pop ret pop loop push adc mov test sub into add pop clc inc jnp push xlat mov sbb (bad) mov cmp pop inc jbe pop xchg lret bound roll xor and and (bad) jle in add cmp fnstsw pop mov ss cmp sbb pop or lods dec sub test and mov pop lods push in imul jg jo xor inc inc (bad) mov (bad) jbe lahf push sbb negb (bad) sbb mov adc lcall mov (bad) or fist je and fldt lea jg popf and dec les pop daa xor (bad) adc (bad) mov out push test scas adc mov sub adc repnz and and loop cmp mov ss add or mov xchg sti mov int3 clc js das out inc inc jnp sub shll fisttpl add insl fldl and xor nop pop dec mov mov and sub js in mov (bad) repz pop pop test lret mov add cltd dec sub out and and ja adc (bad) adc push adc sub repz dec in ret sub stc pop xchg aad fdivs mov dec (bad) mov lods pop test mov into cmp sti test dec lds mov xchg aaa ret dec ret in lret subb mov sub sub xor iret dec iret mov repnz inc jno sub cli movsb xor mov pop mov into (bad) lock mov lea jle dec mov shrb pop shrb pushf inc xchg (bad) jmp mov dec mov xor mov repnz lahf scas gs call dec mov call stos mov call jae mov sub and xchg jne adc imul sub mov cli mov incl jecxz add adc mov pop mov adc cli lret outsb sub dec fmulp loop xor mov mov dec out cltd in das or ljmp add sbb (bad) xlat add xor mov and insb cmp sub mov nop int xor and push add std insb out mov lea and enter fs stos call stos sbb dec (bad) mov inc cmp test sbb cmp xor sub jns cmpsb cs ret pop out adc mov lods (bad) xchg fstps cmp out xchg cmpsl pop xor bound jg into loope sbb cmp add mov nop pop test mov push lds sbb jmp in test mov scas push lcall xor aaa cmp icebp push outsl mov pop xchg and xlat mov and fsubrs mov push aam xor xor inc fucomi das stc cmp and sub or into cmpsl adc rolb (bad) out pop mov mov sub xlat out data16 cmc (bad) imul (bad) mov mov xor cs test (bad) divl sahf out cmp mov xchg push jno cmp (bad) fcmovnb int3 scas cwtl push cli sbb ds fistpl lods int3 jge movb mov fdivp xor loope xchg loope or or xor std sarb mov push (bad) cmp lds or dec or sbb fs mov mov lods loopne icebp mov inc mov psubsw xor xor sub push push repz xor or cmp scas bound les and and in cli sub ds xchg idiv mov mov loop lds mov out scas pop mov push sbb dec add stc sarb push xchg and lods hlt pop add pop jecxz and test fdiv dec inc jg ret fdivrp push or mov lcall (bad) fistl repz cmp cmpl inc mov mov xchg in (bad) adc jns loope cmp jmp jb mov add sbb push (bad) stos mov add cmp jnp sub jmp or data16 inc cmc jns dec pop or daa xor fwait call vcvtdq2pd stos (bad) flds mov inc lods divl pop adc push and xchg cmp psrld dec mov idivb dec lret mov (bad) leave mov xchg ficomp (bad) (bad) push jns jecxz loope lahf scas inc loope out xorl or jo icebp push lret mov push mov adc fidivr (bad) (bad) or mov or or dec hlt dec (bad) out sub xor xor lock stos lret daa lret fldenv ss sub sbb and adc xor loop fdivrl xor cli push or ds stos pop dec cmp testb cs movl cmpsb mov loop test and cs or pop mov clc mov jne sbb jp imul cli in leave lcall inc std mov loop cld addr16 jge xlat lret fisubrl movsb jbe imul insb aaa sub sbb loope sti xor pop loopne inc jns mov shlb xchg dec enter mov dec mov mov push lret sub in test jb xchg test inc cmpsb sub into iret imul loop inc adc outsb xchg mov xchg mov js repnz out imul and ret push rolb stos loop xchg xor test sub es mov jg je addl iret mov sub xchg adc xchg fldenv into mov xor pop mov push or push mov adcb inc push jno jmp stos dec in cmpsl jbe and repnz outsl jecxz and cmp stos lret xor mov movsl lock add mov nop push jnp sbb inc xor push movsb or mov push jge int lret pushf mov dec pop mov dec jb add repnz popa and data16 inc mov push insb adcb jnp imul lret daa js pop iret cmpsl xor rcrb lods out sub xor pop nop test test movsb xor dec and mov and and ret rclb pop mov or push daa ss and lret jns dec rolb lret arpl push sbbl pop lea stc add dec test jg into ficomp adc cmp lods mov sub in or imul les repnz repz aas adc fisubr sbb dec les lret mov cmpsb sbb out xchg mov sub xor and cltd jo pop sbbb mov icebp xlat test adc and mov push push iret xchg ficompl push add inc xchg push cwtl sub out mov lcall jae or (bad) xor add dec dec andl hlt mov fistpl cmp mov jle ljmp push (bad) cmp mov loop dec dec sub test jno dec mov cmp sbb scas out inc lea mov int3 sub stos scas adc adc stos gs gs push (bad) cmpsb (bad) test mov jl cmpsl aad push and leave inc rol cmp fs adc (bad) movsb mull dec cs push inc (bad) enter into popf push shrb push xchg push (bad) jmp mov into pop or inc (bad) jne mov nop pop mov sahf dec in mov xchg cwtl rolb xchg mov jae jmp aam out mov mov or xchg loope cmp mov mov mov add xchg or (bad) fnstcw inc pop and sub out jns rorl sub push pop mov das loop mov or jl lret stos mov pop mov repnz pusha sub (bad) pop (bad) jnp sbb pop jecxz sub cld pushl lret repnz cmpb add cmp out divl lds fist xor jne test aam push icebp (bad) loop mov mull xor mov das or int inc stc aam (bad) repnz sar aad shrl xor mov (bad) repz cmpsl jp adc or push sub cld in or scas cmpsb push pop test xor push jp cmp adc lret xchg fist sti and add ret add and xchg cwtl pop mov cmpsb fidivr (bad) das cmp cmpsl xchg mov add in imul adc out mov nop clc mov mov or out out imul adc or jbe dec mov xor lds add enter div stc outsl mov or xor sti xor movsb push mov in mov xorl sub loop xchg jge and pop mov ret (bad) fisubr addl push iret mov movzwl pop arpl cmc lods cli pop mov into lahf push popa repnz outsl in lds dec rcll adc cltd ja in mov jle cmpsl cs out (bad) sbb sub negb loop push daa sarb je xchg in cmpsl icebp insl xorl sub pop call cmpsl (bad) cmpsb mov adc stc sti jecxz jmp jbe in push pop mov sub leave sti rol mov repz add mov push sub xchg cmc cmp jl jmp out orb inc cltd mov sub pusha jae dec (bad) fcomps jb call das rcrb outsl je fs ljmp and scas in push sti popa cmp push and ja das push mov xchg pop mov outsl lret lods fcmove push sbb outsb call mov popf pop scas (bad) loop nop mov fistpl pop sub int3 xlat ljmp call stc mov pusha or sub mov icebp and xor push sbb lea sub movsl rcll andb fisttp and add (bad) cli repnz xchg ljmp fmuls pop lret cmp (bad) roll dec add (bad) leave mov push test cmpsb xchg dec scas mov sub enter or repz add xor mov pop ljmp sub (bad) into test (bad) mov and push push hlt pusha and cmpsb iret pop repz daa not add jbe and stos push in xor inc sbb and sub lret cwtl iret jg pop cmpsl pushf das and jge jmp push jo aad jno (bad) bound icebp (bad) dec (bad) jmp mov mov mov push das clc push mov iret push je mov dec xchg add loope data16 repnz mov xchg mov lahf repnz dec loope add dec add inc cmp ja shlb mov sbbl jne inc xchg jle out clc or sub nop aam adc xchg mov cmp (bad) ljmp adc xor and mov sub and pop loope repz xchg push stc mov clc adc loop and sub push sbb fcoml xor or aad jbe mov jl pop jmp cs bnd data16 stc and mov jae pushf nop mov push outsb push xchg nop loop bnd pop rclb and ja lret adc dec push add pusha inc dec mov into jg add (bad) mov inc outsb jle pop iret sub mov ja inc in xor lds lock xlat and fbstp nop or or lea popf jge or push dec lret mov mov out inc pop das fsubrl ljmp repz jae loope push dec mov dec push sbb mov adc and add mov mov xor cs adc jnp dec pop jle cmpsb pushf jnp imull or mov outsb popa mov xlat shr pusha (bad) push (bad) xorb adc (bad) sbb fisttpl (bad) jmp and dec push xchg push leave cmc dec into add push pop sbb repz push sbb xchg out jb fs lret cmp movsl mov push xchg popa push out jge xchg ljmp aad mov jle cmpsl mov in jge jmp mov ret je push aas fldl sub lahf xor negb or mov lock notl in scas sbb mov inc push dec clc ret pop loop test (bad) divb inc test imull mov xchg mov nop adc pushl stos fnstenv rcll leave push sub jo ret push or xor adc mov xor stos mov dec xor jne xchg jmp sub add lret into sbb ja int out aas mov fisttpll push cmp shrl les pop movsb stos aam pop push fildll test xor es (bad) lret mov or or sbb sub mov sahf xor cmpsl imul scas je mov and mov (bad) jle pushf jnp fcoml jb les or div or mov xor add mov sti decb inc lret je and lea cli test scas cmpsb adc stc dec xchg jno mov cmp ret int3 adc and jecxz dec icebp js xchg push addr16 aad scas mov lret sub sub cs orl int3 mov shrl pop dec and push leave jle dec pop mov rol mov fnop hlt pushf std push sub repnz or iret std sbb dec inc repz or ds in mov xchg stos arpl pop inc in mov rcrl jmp std sub jne cmp ja (bad) dec iret add movaps mov sub ret dec and fcompl dec (bad) mov adc sub in pop into pusha inc mov mov call int xor add (bad) mov jno (bad) sub adc push shll (bad) in and inc dec adc xchg ljmp cmp pop sti ljmp mov movsl scas pusha iret add dec inc mov xor and sub push jo lock xchg cld xchg inc xor jmp pop int3 dec stos lret imull or cli mov fimull outsb das cld hlt ret std inc mov pop mov push and in scas sbb mov sub push cmp and aad xchg add adcb ljmp cmp push shr cmpsb mov loop ja inc es pop scas xor jb or daa pop jg (bad) repz pop push out mov mov push mov outsb icebp pop sbb mov cs pop (bad) xchg xorb imul ret ds fs pushf mov xor push out mov dec mov iret pop xor sub mov lock (bad) sub xchg lret add jl out jmp das jb dec add stc lahf xchg divb inc mov stc inc das sub fisttpl ret add jmp inc fbld insb xor pop xor (bad) in fist jl xor cltd rcr add mov xchg mov xor aam imul sub lea add xlat mov inc sub push adc lds add fnstenv movsb scas mov mov or xlat int3 es dec sub lock dec dec fwait leave sarb out aaa in into sbb imul xor sub cmc inc xor pop sti insl (bad) cmp sarl dec dec int cmp out movb sub cmp aam lcall (bad) mov leave ja aaa mov bound fidivl test dec xchg add fiadd or mov jp cmp lock sbb mov xchg sets sbb add inc lret adc (bad) sub xor sub adc mov ljmp and pop push and add push dec scas mov xor ja dec xchg sbb dec out mov pop mov cmp inc daa xor sub sbbl arpl xchg adc lock lcall or in cmp push xchg ljmp aas and lcall ret imul and mov or dec mov (bad) sub dec (bad) movsb lds cmp xchg bound enter (bad) imulb jno leave shrl (bad) xor in loop mov or popf xchg cmp xchg or cmp mov dec mov in adc mov (bad) ljmp pushf and pop add lods mov xor mov loop cmp hlt pop (bad) xor stos cmpl ds jmp sub mov pop lret sub adc mov and scas mov xor fisttpl xor inc xor (bad) sub jae pop aam or add sub shr mov sarl lret pop rorl or sbb cmp lea movsb pop add ljmp push out cmp cmp push xchg or repz (bad) xrelease lahf pop cmpsl aaa aas fs or adc adc mov cmc mov xchg pop pop inc or icebp test xor (bad) push cmp fist addr16 pop push jge fldcw dec or ljmp inc inc sub mov les mov movsl lret frstor add out xor xor repz adc push jmp lcall (bad) cld icebp pop fstl inc sub sub fild call mov shrb pop pop mov ret fwait or out dec out mov leave mov sbb je sub pushf roll jl lret and xor data16 test ss or xor out repnz movsl mov out or imul movsl pop stos and or cwtl pop and sub lret (bad) je push and jp popf in xor jno imul aad jne and fstps sub xor and mov call and add (bad) pop add mov xor lahf (bad) and or push xchg dec mulb pop clc inc adc roll mov ss pop test fisttp fisubl mov jbe lds mov or lds cmp mov shr jo call pushf aaa mov aaa shrb sub pushf mov mov stos jl pop loope xor in or xor lret rcrb cmpsl xlat or sub stc mov xlat fs jmp int3 test and loopne movl fisubrl jb dec xlat orb iret sbb movsl dec jge xchg outsl imul xlat adc mov lds (bad) pop mov mov push push mov push int3 sub out mov inc mov mov lds xchg sti jle std loope inc or (bad) lock popa dec sub (bad) jo mov stos mov cmp mov push mov pop cli mov pop loop jg cmpsb in and push or add lret roll adc mov and push in add inc or incb xor pop loop sub pop test (bad) cmpsl inc (bad) pop dec arpl (bad) jle adc sbb movsl or push fadds push push cmp fsubl xor (bad) mov push push pop xchg das scas sub sbb fs xor int3 inc push popf std cmp mov repnz dec pop mov inc push cld or das insl (bad) shrb or or push mov pop dec xchg xchg test outsl push mov imul inc cltd shrl dec gs add jo lcall push ja lret jae or mov add popf cmc fistpll mov (bad) incl nop and mov popf sbb mov orb adc stos push mov adc push mov add pop xchg cld adc or or pushf jp in and adc pop add inc fisttpl stos lea lods imul pop or les jnp loope mov out repz (bad) testl sbb flds jns nop and sub sti test sbb or pop std int3 (bad) (bad) mov cmp pop add shll fnclex clc fnsave xchg iret mov adc bound push and ret iret mov jge lret ret gs push mov dec sub mov cmc out push add inc dec stos fwait dec cmp mov adc dec mov insb jmp sbb mov and (bad) push pop ss popf dec ds xlat rcl mov dec or out add scas adc xchg (bad) jae pop xchg xchg cli dec out sub out xchg pop adc lds lea push pop xchg (bad) out lret xor xor out sub xlat (bad) xor pop mov cmp add mov ss pushf cld lcall pop test mov or jnp and out mov stos cltd test mov lods dec lret (bad) dec adc cld ror push ret cmpsl mov movsb sub repnz stos (bad) loop,pt shll sub jp outsb xchg mov imul ljmp sub xor (bad) xor jl fldt popf repz outsb dec jmp pusha dec or je or fincstp into sarb push inc (bad) leave push in xor cmp jno sub fsubrl roll sub fcomp mov jns test jno mov jns movsb out xchg pop cli cmpsb push inc push lods lock daa ja xchg popf xchg mov (bad) and add rcrb inc mov mov sub mov icebp lods notl mov mov leave fisttpl repnz mov or outsl adc fisttpll ljmp shrl mov leave xchg sti mov stos push das enter mov or lds fs out mov xchg jnp (bad) (bad) stos icebp pop add movsb adc test cli repnz mov jmp push cmpsb es ja lret mov mov (bad) sub inc sbb orb fcoms (bad) and adc lods movsb push mov cmp push (bad) or fistp mov out mov add push popa pminub or pop ficomp cltd sub push cmp add out je out int3 out inc xchg inc xor add jnp jl ljmp sub mov or (bad) jno divl cs mov xchg sub cmp popf push jbe xchg sahf xchg test das pop pop lea push data16 lods and cmp int3 inc shlb sub pop and mov xor lods loopne push int cltd pop movsl imul xchg jae pop ror jg (bad) mov js bound roll mov testb lret rcrl (bad) scas sub inc stc push jbe fnsave sub movsl dec scas (bad) xchg lret push hlt xchg aam or (bad) jae and addr16 sub outsl test cmp mov clc lret or sub test mov cld jp das ja imul cmp cli or (bad) bound arpl mov enter div shll gs add sub cmp (bad) pushl loop dec jmp adc mov or mov notb xchg inc stc cmp cmp roll jle or fbstp data16 mov mov pop in mov add push das insb push add sub gs (bad) cmp xchg dec test xor mov xlat out and cmp stc (bad) cmp outsl popf cmp pop sub mov test rorb lret aad mov dec pop push (bad) and popf push mov pop pusha roll xor push or and leave mov sti jb ljmp sarb mov out out test and loope stos test push xlat movb inc mov xchg sbb js mov imul jg push nop insb test sbb jl cmp mov adc sti xor adc xchg sub repz adc add repnz fidivl dec repz push loope push iret repnz or mov ljmp popa popl fidivr or inc xor add push hlt lret jp xchg pop xor pop inc sahf in test or add out and stos mov xchg lea cmpsb add call xor or loopne rorl adc xchg ds jg push inc testb fisub sbb fnstenv ljmp out mov (bad) mov pop icebp aas repnz dec movsb xor cli fsubl mov pop shrb icebp in push into aam mov adc jmp xchg adc adc mov sub das lods dec (bad) cmc (bad) and xor dec xor loope xchg mov xor scas lods (bad) aaa and xchg cmp fdivl push jns into in in mov scas mov pop popf fidiv outsl mov or pop jmp mov pop arpl rorb sub imul ror movsl mov fs stos loop shrl xor rorb (bad) cld sbb dec mov mov aas xchg call mov sub xchg jno fs sbb jo cmp arpl jne push imull imul add imull insb imul adc sarl mov dec lods test in pop mov inc xchg icebp lcall jae das push test sub mov mov in dec mov daa in cmp adc pop jb repz mov push dec scas fsubrl ja xchg pop mov repnz xor and jp xchg or mov pop xor jmp lahf dec test xor add sub push or lock mov (bad) cmpsb inc sub aad inc and inc out sub shlb movsl adc sub and leave fldcw (bad) repz dec mov lret xor fbstp test fcom ljmp test orb or inc nop rorb mov test push xlat mov rcr neg or fbld and lods outsb xchg clc sub popf jne push inc lgs ret sub popa sub test (bad) jno pop test ja cwtl mov xchg or xor in jle xlat ja sbb (bad) icebp mov inc out enter test (bad) jmp lods xchg push (bad) int in push mov add mov jmp xchg lods cmp xchg mov dec in outsb cmp insb mov mov add aad stos mov out sub loop xchg mov adc cli cmpsb and repz and scas nop xchg dec lods cmp or sti mov (bad) decb xchg insb imul shrl repnz test stos pushf mov mov mov cld mov insl cmpsl lds lret xor clc and loope inc fist repz out (bad) repnz adc mov mov into (bad) mov into pop icebp subl jae push (bad) sub mov pop sub std clc jp fs and (bad) (bad) jge jne idivl loop shr adc lret (bad) jg adc pushf leave and push adc xor iret lcall mov lahf (bad) fdivs in and xchg fdivrs mov jnp movsl or stc pop dec pop xor mov lods aas movsb out lods jl out xchg mov into imul cmp push and cli sbb stos mov das add in stc in xor cli je test cwtl (bad) divl and lret adc ret sub in das mov xor jp cmp ret movsb test cwtl mov test into scas sub mov sti cmp push cmp lods mov adc repz mov push jmp mov xchg xor mov pop or adc call not or sub fcmovnu push daa jge insb push or test sbb adc pushf pop std adc mov inc jecxz icebp xchg (bad) imul sub inc pop hlt mov lahf rol ds (bad) mov fiaddl imul bnd mov lret imul cmpsb (bad) dec nop pop jg scas xor push test out pop cld dec sub push xor dec repz dec pop inc dec test leave lahf sbb sub sub xchg push dec loope es xor call scas mov adc rcll jge aam pushf xchg ret mov mov imul int outsb loopne ret pop sar jg jns push jne (bad) mov push xor sub shrl add sub mov xlat fs icebp dec inc into xor and lods call cld cli cltd movsb lods sub lods movsb mov bound fisttpll sub adc fsts imul loop xchg ljmp dec sub jbe es (bad) lret sub jne enter (bad) mov mov sub and mov lahf daa fdivp js (bad) mov test adc add sub and js or mov daa and out dec sbb xchg push jmp sti or sub mov jg loop inc dec sub incb xlat and pop icebp cmp sti sbb imulb cmp popf sbb loop sub (bad) nop stos mov popf jmp data16 cmp stos xor test test test cld sbb (bad) in (bad) repnz ret xchg popf xchg (bad) test mov pop insb aam loop dec out push push fs fisttpll and rcll inc dec movups pop or push in adc ja stos test xor aad (bad) push sub bound (bad) push out sub jns xchg neg xchg or sub xchg push icebp pop faddp out mov add mov jae xor jae mov test cmp dec sub das mov mov adc test fs mov mov cli sub mov fstps daa in and add out xchg mov repz mov xchg ljmp push icebp out sub sti ja iret push loop mov sbb clc test ds out and adc jbe imull xor outsb (bad) jnp mov jae add or xor das aaa mov fldcw jbe push lds ret (bad) fabs ret loop xchg add cmp mov decb jge pmaxub mov fldl ja hlt xor in sbb int add push sub inc push repz pop popa cli jl or sub es add mov and jae mov fiadd mov sub fdiv sub popl sub jbe pop shrb dec and in vaddpd stc js cld push imul and mov into and inc or sbb cmc mov jbe sub cmc jno jecxz cmp movsl repz add add xchg lcall sub lods lds pop jb jmp rcrl ret cmpsl inc sbb sbb pop cmp flds daa or data16 cld lret inc mov xchg mov insb xor xchg call add sbb and add or repnz outsb mov add popa pop adc push pushf adc or push pop mov pop push (bad) loopne jl (bad) sub mov inc jmp xchg and pushf enter pop aaa jne xor dec push add push sub pop out xor lea sub ficompl push call cmpsl aaa bound loopne or sub xchg sub repnz dec lret sub mov lods icebp pop lods or jnp enter mov (bad) repz and popa std add or mov dec jl dec testb xchg cld pop push jg push rorb xchg pop inc leave icebp pop mov dec lea sbb outsb call (bad) out xchg lds add lret and xchg mov sub cmp imul out or inc push mov cld push xor adc pop pop mov fcoml mov popa adc adc push cmp leave in sarl idivb enter mov add sbb sti add mov scas std (bad) (bad) mov jb or aad pop dec loop dec bound ret push icebp cmpsl dec push push add jmp jecxz (bad) rcll arpl hlt mov inc mov (bad) test jmp pop loop mov mov iret sahf (bad) mov dec leave mov mov jnp out xor xlat stos or (bad) (bad) sbb pop loop pop push mov in scas adc sub dec nop jle adc sti fdivl (bad) mov cmc pop jle leave fstl enter push (bad) ja adc and push mulb sub imul or push insb inc xchg push loope (bad) xor ja add push mov (bad) xchg mov xchg lret stos cmp mov jno mov (bad) sti inc mov test jle push pop xchg ret in das pop lcall pop sub scas adc jmp repnz sbb ret bound sbb mov sub shr pop sub mov mov mov and stc push addb sub xor xchg std pushf push (bad) repz mov js insb inc pop xor test inc int leave sarl stos xor pop xchg mov pushl inc add scas popf sar mov lods inc add jmp mov lahf cmp les cwtl sub mov leave into dec daa and and jne sti orl inc aad (bad) out xchg xchg stc and fiaddl repz ret push inc mov stos dec jo push arpl sub test mov or rclb dec popf sbb out je sub call cmp sbb icebp pop bound je push and mov adc dec adc into sub mov mov lret and jb out push cli jo ret mov mov vcvtsi2ss or dec cmc mov lahf in movsl sub jp repz mov mov cmp dec sbb jne xchg pop (bad) jo pop and scas lods mov in in pop imul jnp cmpsb push je xor std push jne loope add stc pusha adc jno add jb fisub dec mov pop call leave iret fsts mov sub jno dec notb and sub mov ss test (bad) sub sti popf push add jmp mov adc and jns enter mov clc or daa xchg push dec xlat (bad) fsubl pop mov and (bad) add pushl sub sub rolb mov aam jmp inc and jo and dec aad cs push jl push jmp imul rorl xor mov adc pop pop cmp inc inc pusha (bad) cmp movzwl aas pop (bad) call inc pop popf jge scas sbb cmp pop mov outsl adc (bad) mov in jecxz adc pop out pop bound cwtl dec jecxz jo adc xchg push push sbb inc cmp mov sub xchg pop mov and dec mov sti push out and or aam gs mov cmp insb cli push (bad) fcomip rol sub movsl lods popa mov ja add mov pop pop jle out ror fadds lock test daa fiadd pop fist pop in inc sar leave sti icebp ret xchg cmc lret out shrl stos fistpl cmp sub cmp xlat stc in mov or add repnz jp inc movsl sti mov lret pmullw (bad) pop mov bound push pop mov std mov push fwait mov data16 pop out loope lret fbstp dec add mov xchg xchg push mov aaa scas (bad) leave icebp jne xor stc pop jmp jno pop js notl fs inc movsl pusha (bad) js das adc mov test jbe or int push cmp sbb or mov sti clc cmp xor adc (bad) std jmp stos sub xchg mov cmp in sti mov inc inc xchg sbb mov jmp sub add roll (bad) and jbe rcr adc jge xlat cmp jb sub jo dec imul (bad) subl or aas push in or pop (bad) into in es icebp loop clc xchg (bad) mov sub xchg ret fwait pop adc out push maskmovq mov mov ficompl in jo loop lret add out push sub repnz es xor mov ljmp insl or add dec push jecxz xchg lcall mov pop (bad) pushl jg cmp xchg in int3 xchg mov xchg dec push push dec and (bad) addr16 adc repz jb mov daa aad rorb cmc and lods cmp mov (bad) dec mov mov lcall in sub fildl sarb xchg inc xor fstl dec ja push xor xor (bad) mov jne push inc push push repnz sub add bound das and es sub (bad) add roll (bad) nop sub mull mov dec and push popl mov mov or xor jmp adc xchg jnp inc jp (bad) or int jecxz test and cwtd dec push lret pop js xlat cmpsb (bad) push add mov out and cwtl mov loop jp lock jle add in pop adc mov scas jno mov sub ss lcall shr dec icebp mov pop std sub push shll dec ret scas and adc cmp ds subb add pop sub and or (bad) (bad) aas lods ja add das int3 fisub or scas adc sbb pop inc add je pop and cmpsb jmp into stos lret std dec out dec mov das and mov je lahf fdivl push imulb stos adc push imull and lds testb fcomp scas add leave fimul pop (bad) mov mov add mov ljmp out je jmp pusha repnz fildll xor xchg pop push imul pop xor cltd fidivrl (bad) (bad) bound iret (bad) xchg and notb xor inc xchg test mov mov (bad) mov movsb outsb fnstenv jb cmp (bad) (bad) (bad) mov out rol push and xchg push adc pop push jne or (bad) bswap sbbl jge sub cmpsb outsl mov andb mov xchg divl out fcomi mov jne push (bad) repnz cltd roll aad outsl xchg pop push xchg into sti mov dec jp (bad) pop mov dec sub push jne fucom cmp mov loopne dec cli out xor sub sub push movl adc mov (bad) adc mov dec clc xor mov cmp dec jecxz dec inc data16 outsb push dec hlt sbb xchg mov ljmp (bad) mov inc loop enter xchg xchg sub sti in fidivl sub jl pop jle js and lock or mov aam ret add sti inc mov daa cmp xor test mov pop jecxz add ret sub and dec mov scas in push in dec inc jmp adc nop fldl (bad) in adc push rcl test pop mov das int sub fisttpl sub lock add iret mov jo (bad) setge mov imull xchg and fsubrs push shrb (bad) dec (bad) fcomi int3 dec push push jecxz or mov out lock mov out imul xor or adc lahf jmp (bad) lea mov sbbl sub inc movsl loop loop pop nop sbbl xchg dec popf jecxz push add or sub jmp in push mov cmp push inc mov cmp pop bound xor add movsl pop repnz and es stc jne fldcw std pop and repz imul sub daa enter mov and mov xchg dec ds xchg mov cmp inc (bad) (bad) mov pop and xor mov out sub (bad) cli mov xchg fbld scas fnstenv sbb xchg pop adc cmpsb cs add sbb (bad) jmp pop xor pop or shlb xchg std sub icebp mov clc mov iret mov and daa gs jmp dec sbb dec call and sub data16 cs jns loope push jle shr xchg (bad) mov out sub imul sub jmp into subb outsb movsl and pop inc int popa stc sub inc dec cmp (bad) sub pop or mov sub out or (bad) mov sbb xor (bad) loope fisub outsb cmp (bad) out clc in rolb ds xor stc insl dec call lods aas movsl out aam cli or mov xchg adc repnz xchg xor sbb add pop in (bad) scas dec enter xor mov dec jne daa call jmp repnz xchg mov inc sbb pop jmp pushf fldt outsb xchg call js cmpsl mov cltd clc push or xchg sub pop inc add es bound out mov push rcrb gs das cli xor fcomps xor shll (bad) movb pop rorl jae adc sub fistl rcll xchg xor sub sbb fldcw sub imul call rorl ja scas iret lock loope and out fist xor cmp add ds cltd insb inc mov adc jmp cs jl add sub rcrl jp xor (bad) out xchg gs scas mov jp (bad) movl jg jl push sbb adc lret fsubr xor xor imul push jmp mov out lret icebp adc mov scas sub xor ret leave rorb or sar (bad) lret pop idivl add loop xor daa add cli mov in (bad) and enter add imul pop xchg push dec mov push outsb mov test mov rorb push fldt enclu popf mov mov gs lahf faddp pop out mov mov inc adc ret pop dec inc ret lods pop lcall (bad) repnz imul hlt lahf in sub or cmp out fadds roll push bound lret push sbb or pop inc ja call add fmulp mov aad lods sub cld sub mov jp pop cmpsl cmpsb xchg cmpsl inc mov mov loopne out pushf (bad) push jns xchg add movsb decl das pop pushf push lcall pop pop in aad ret nop stc mov pop xor cmp lret int3 cmp xchg pop je cmp or add jbe leave std insb mov fdivrl icebp cmpsb adc pop dec jno pop pop fist lret les enter (bad) pop mov dec jp mov aam push and or dec stc (bad) aas sub cmp push (bad) pusha and sub mov popf sub inc sub inc pop sub leave mov sbb pop or popf jne pop or aam mov xchg bound test jno sti cmp pop cld sub push mov into pop dec adc stos lods or add xor sub xor int3 mov into stos fs jbe divl fcmovnu rclb xchg and mov or or or jno movsl pop push or fidiv mov add sbb into sbb (bad) sub cmp neg lret call and jecxz push push es xlat out loop xchg stos popa mov mov ljmp mov push jbe (bad) movsl dec jge mov xlat in mov lret testl in push mov mov pushf les cmp jns cmp dec xchg push loop pop stos out jb out mov jb or pop fsts push out inc mov jg sbb jns mov ret xor sub std lock or icebp sub vmovsd sbb mov cmpb bound push pop outsb mov cmp imull add mov cmp add sub cmp mov push push push add mov neg ja jns fs xor xchg js loope stc out outsl mov xorl cld mov sub test push push pop xchg pop mov and push xchg notl cwtl jle je mov adc mov or pop xchg ds push mov xchg pop dec stos ss out pop or push mov jge sbb add sbb push adc sahf jp add push mov push negl imul add out test mov in add icebp pop dec not addb aam dec dec jb sub or mov push pop add sub add insl or hlt rorl add mov sbb push push jecxz or ljmp mov jg dec mov dec scas jle pusha (bad) inc pop rclb loopne fdivrs add adc insb and xlat pop xor cld sti in and cmp jmp adc push stos lds leave push pop sub add negl in xchg push add push push push mov je in add or mov (bad) sti inc inc inc clc pop into add insl push add ficoml fidivr clc stc inc pop lret pop push (bad) or scas or inc add pop mov mov lods mov dec push jmp mov adc ficompl pop and mov inc test mov popf jae (bad) popa jmp xchg fstl inc push arpl mov pop mov xchg mov and inc out decl mov dec push outsl pushf xor cmp mov movsl cs mov or sub rorb lds pop (bad) fist pop popf das mov repz lods or add jl jmp test fdivrs dec enter and (bad) lret nop and push test push out cmp das sar pop lods ja jle mov repz mov ret jle scas gs ftst cmp or push push xor jb (bad) xor mov push mov jecxz in xorb dec pop nop lods mov shrl adc pop (bad) popf das into inc inc je dec cmp mov mov insb dec mov sti mov xor dec jecxz mov sarb or push cmpl push psraw (bad) jmp pop mov pop hlt mov jo mov data16 and add mov dec in imul push out daa pushf adc mov sbb repnz test cld dec movsl dec add int out daa jmp sahf and sub pushl cmp mov or mov cld or push arpl out adc sbb (bad) mov pop mov push jecxz stos xchg out mov dec adc xor aad add xor out jmp dec fsubr push (bad) cmc pop and mov xchg stc dec mov mov jle ret test fistp mov xor dec loopne jmp cmpsl jb stos jmp push sbb adc pop loopne js mov xor xor mov push push and sub push dec pop repnz mov adc dec (bad) fsub add push cmp call (bad) dec es punpckhbw adc inc iret add mov xchg test iret add movsl loopne pop mov ret test jge cmp (bad) bound or jg dec mov push ret xor mov in adc or sub or add mov pop mov jecxz push or add xor stos sub jbe xchg (bad) lock ss and rolb loop xchg push cmp icebp mov cmpsl adc push shrl pusha and das out xchg out cmp pop add ljmp fdivr ret out dec mov cmp and les lods repnz or repnz jg xor repz jmp mov mov push mov add sub daa add inc mov cltd inc add call imul (bad) xchg mov add adc xchg jl cmpsb and xchg mov addr16 sti pop stos lret out je gs ljmp add scas fcoms popf xchg nop xlat xor and (bad) sub jne xchg pop sti cmpsb mov rorl inc pop and lock dec jge xor jbe push aad movsb out outsl sub fbstp lods push push dec neg sahf mov xor jmp xlat inc dec stos fnstenv xchg push iret test push ret adc in sub mov int sbb gs cld and lods incl into ljmp xor xor cmpsb mov and or push fnstsw pushl dec stos mov sub das into mov aaa mov roll pop leave xchg lds mov stos jp scas lret out lret add fbld idivl xor sub mov inc pop sbb adc pushl xor out push (bad) testl dec push outsb cmpsb sub cmpsb out hlt rclb sub stc insl nop inc dec mov shrl dec cmp int3 mov mov cmp aam in (bad) cmp cmpsb mov repnz je cli jno and cs repz jecxz sub push or push mov aad repz out mov (bad) int3 stos and xor iret jmp cmpsb xchg call add sbb or sti pop out jne mov in xchg cwtl xor xor mov bound test (bad) pop lcall xchg jecxz mov xor repz sarl adc jno dec je or pop pop add subb neg int3 frstor inc sub or sub sbb sti pushf mov dec icebp int3 inc and jne push mov ret jbe in dec push pop mov push xor iret pop push xchg dec (bad) in imul push pop cmp decl int3 lret (bad) jl pop rorl das mov xorb mov addr16 xchg mov daa negl mov iret dec inc and jb ss xchg jno xchg out popf mov scas and push inc xchg leave jl or fcomip dec adc and pop cmp mov pop loop insb xchg scas push scas test sbb decl leave stc sub push out movsb es imul gs add add mov jb pop push cmpsb mov sbb push xlat insb (bad) lock sub in adc ljmp xchg dec (bad) xor test (bad) lahf xor sub mov xor or out into lahf pop repnz mov mov lock or xchg sub mov fsubr sub xlat out adc xlat cltd cmp mov cs out jb ret imul leave rorb mov pop sbb ret jno int3 adc fwait cs cli mov push in cli cmp pop sub xor pop mov or cld xor xor dec (bad) mul adc (bad) scas fdivrl fdivrl dec add (bad) push add pop mov xchg pop daa jno cmp push pop ljmp pop cmp insb push les or dec push sub idiv jns xor cmp daa pushl movsl xor xchg dec repz cmp adc xor adc add xor xchg adc or aas std and bound pushf xlat jns and xor dec sbb mov stc ja pop push mov sbb jmp add adc out dec inc call pop dec (bad) add stos cmpsl pop xchg test sub psadbw incl pop repz fisub jb dec inc dec sub mov (bad) mov dec sub push cld sbb and jg iret rcrl lea (bad) and or dec ret push out xor cwtl xor das xchg (bad) repnz out sbb pop push dec mov mov sub lahf jl lret std lcall lea aam add into xchg data16 cmpsl jnp mov jbe mov cmpsb pop cld pop cmc cli flds dec adc sub lds pop adc inc dec xchg clc in mov adcl (bad) out scas clc xor imul xchg ret pop push outsb loop xchg lods sahf mov and sub mov scas mov dec icebp mov pop rolb or dec xlat and fistl sub call sbb push push cld jno mov idivb xchg lret mov shrb lret loop lock adc lret rcll mov daa insl int popa inc ret ds js xor scas mov dec call jno mov sbb ret and ljmp (bad) or push or or jecxz imul push mov sahf stos and inc adc iret sub nop xchg and inc fadd add imul popf hlt test out scas adc dec stc xchg je fs mov dec aam fidivl int3 or jge arpl mov ss fcoml notl push repz dec xchg mov pop pusha jnp xlat rcrl out or push jecxz adc inc mov xchg int mov idiv pop ret push dec test mov dec leave out jge stos mov das cld std mov movb xor testl jbe push rorb xchg sbb adc fst ja mov push inc insl or in ret push outsb push add (bad) jmp push int mov and cs dec mov lret sub jo sarl mov les or icebp mov jb cmp xor scas xchg je test movsl call pushf mov (bad) and popf mov sbb xor pop mov clc jnp gs hlt loop or insb scas or pop and aaa xor or mov cmp xor xor loope das mov loope insb jb jl adc and and sub (bad) popf rorb dec aaa int3 idivw adc ret mov fsubrp leave mov loop mov imul mov and jno dec pop out scas and idivb fnsave sub mov mov (bad) fild out sub aam pop cli jmp push (bad) push cmp call jbe jmp notl add (bad) hlt pop xchg jg jg ret sub jae inc xlat cld mov test or inc jle mov cli sahf push xor arpl std in repz jecxz sub or idivb test (bad) and leave aam ja cwtl inc add rcrl xchg push dec cli cwtl pusha andb push in cmpsl pop cmp and ss insb mov and adc dec (bad) scas (bad) adc aam (bad) or movsl nop ret sub mov or adc mov ret outsl bnd mov lret daa ljmp repnz xchg cld sub cmp aad xchg xor dec popa cmp add or and outsb cmp cmc iret ret jp xchg test adc jne push (bad) into xchg cmc xchg out cmpsb or xchg cld push idivl mov inc pop in daa movsl adc sub fldcw test dec cmp (bad) or mov sti scas ds and or jge,pt jg and ds das or sub xor ret dec repz inc repnz testb push int3 and add mov test xchg in xchg out scas mov xchg inc add add sbb lret enter mov inc jo pop cmc popa out call nop pop cmpsl cmp daa movsb lcall lret mov cltd fyl2x push adc adc xchg xor icebp sbb imul pop and or xor cmp sub cmc xor fisubr sub and mov mov mov mov sbb adc pop ljmp jns icebp int sub sahf aad mov cltd scas lret xor mov arpl or cwtl imul mov (bad) loop stc push js pop jecxz aad jge mov pop push xchg mov mov sbb add push xchg or xlat int3 cmpl outsb xchg (bad) or add clc push (bad) mov sub pop adc sbb (bad) jmp xorb xlat or sbb scas lcall (bad) cli dec xchg adc js iret dec and cmc inc outsb lret push pop mov and loope lcall aad inc lahf or aas daa lea cli lret in and dec test out (bad) dec mov pushl mov mov sbb and and cltd xor pop push movsb inc iret mov or lods lds (bad) bound add ja popa dec push in fstpt inc mull mulb rcrl jnp mov movb pop (bad) stc push fisub jns popf jl mov and or add or adc mov gs je mov cmpsb leave dec add add loop dec lods xchg repnz jge xchg in mov mov int jne push adc and xchg jl push imul (bad) enter test or dec and xlat lret or inc lock cmc mov aaa cmp or pop std jmp fcoms lret sbb into sub inc push sub daa mov pop aaa or lds les xchg out push repnz and or add sub and or push add pop das out mov xchg loopne loopne mov movsl iret sub rclb mov inc fbld enter icebp leave out pop pop mov inc pop sub xchg mov cmp leave or mov aad mov sbb fwait les mull push adc sub int3 jmp lret fwait and jmp movsl sub fs test push inc leave dec sbb outsb push rorb scas nop fmull dec in cmpsb xor cmp mov pop adc or shr pushf frstor cld mov mov cmp mov in and mov leave ljmp mov and scas lea or sub mov gs test mov pop sub adc lcall ds lret daa xchg outsb mov and and or xchg sbb lret into cmp or notl push imul adc xorl mull cli xlat pop stc sub jb sub cmp (bad) and out xchg xor lcall ror xor sub pushf rcl shrb add jl and sarl ljmp ret and push xor test js imul push cmp jae out or and push lcall mov push adc jmp shll and xor pop or (bad) xor mov mov cmp sbb shr pop jno and add push xchg lock jle dec mov cmp out cs and add sub dec xlat lock iret mov jae dec (bad) and test ret stos mov hlt adc cmp movsl pop and test sub ds xlat fs mov les test fnstsw xlat aam pop adc xlat dec jno xchg lods es xchg xchg jle imul push jns scas dec fs fcomi sub into mov and inc das (bad) loope sub stc fsubs pop sahf xor cmp repnz add notb repz add (bad) push sti scas lret add mov adc into cld mov (bad) testb test (bad) mov adc (bad) mov leave sti cmpsl stos mov sbb pop scas sub (bad) int3 cmp add sbb nop sub pop sbb mov fnsave or leave sbb sbb pop push sub cltd xor jmp lds outsl xchg fisubrl fistpll sar out dec mov jmp pop pop dec icebp jmp xor popa jmp mov pop cmp addr16 jl into leave jmp stc into gs stos sub sub pop sub into mov in xchg xor insb stos dec daa popf stos insb add aaa and mov sub ljmp add mov sbb push jecxz repz or xchg sbb addb xlat popf push sbb imul mov insl mov les out mov subl and dec bound repz mov add jne push test mov xchg ds mov cs popa inc sub mov push lret xchg push mov (bad) xor and mov aam xchg xor and and or cmp mov cmp popf daa stc push icebp or adc or dec mov push pop aas imul mov mov mov and and pop mov aad cmc push (bad) leave sub add popa rcrl movb inc sub leave mov jmp (bad) mov mov push push pusha lock dec pop sub add mov int3 call push ret in popf sbb xlat push and daa and pop mov and stos adc (bad) dec lret cmp imulb fcomi into fist jbe mov mov pop aam out loop xchg jmp add mov or inc out or adc cli sti mul push sbb sub and pop out mov fsts adc jmp mov xor fwait dec cmc (bad) sub loope fildll test scas xchg fsubr int3 xchg in outsl or negl dec ret and out dec mov push cmp mov movsl aad mov test cmp fcmovnb test mov lcallw mov lds or jge and fwait repz inc ds repnz xchg cmp ljmp jmp bound ficoml jnp daa neg es add subl or enter adc repz dec je jl jb jle pop sub xor push or das cmp mov (bad) loope sub push mov testl fdivs sub jnp sbb mov push subl and shrb jno negb ja add dec push or loopne sub and iret (bad) ficom pushf repz mov pop xchg popa mov movsb out mov sub pushf jge testl (bad) and outsb lock rclb add mov jb scas cmp into and jb roll dec dec push cmp mov cwtl ds stc xor and xor or mov rcrl cli push inc mov fnsave cwtl add cwtl dec push mov dec pop pop mov in dec adc cmp cmpsl fnstenv ret test jecxz cmp mov orl mov dec inc test fcoms out enter sti loop mov das dec pop dec int xor lods iret or jne pop rcrl cli mov pop cmp sti sub in mov adc sub mov and pop aas sub lahf or leave ljmp popf or xor insb jae dec xorb sub std mov (bad) mov pop xchg dec fistpl rcrb pop divl mov das emms cmp xchg dec out mov jnp test in sub add scas mov or pushl popf int3 or das fistpl mov and (bad) jmp test stos daa ret xchg test jne repz or pusha stos shll repz popf out sub ss jmp add clc and ret int3 sub jae imul dec add (bad) repnz mov or aam inc movsb repz sarb rcrl aam idivl add cmpsb and mov adc fcmovne fildll xchg sti dec lcall pop hlt mov icebp pushf pop leave jne jb mov push iret add adc prefetch in mov lcall and aaa cmp stc xor sarb ret or push loopne mov out sub jbe dec mov dec mov mov out push lahf xchg jbe ds idivl dec sub bound adc inc sub or imul and sub push mov iret lahf fldt icebp js sub and dec outsb enter pop std sbb sti pop sub gs scas lods xchg loop mov pop fsubs popf std or fildl inc iret aas lea lock dec add pop push cmp mov in pop out mov (bad) mov daa inc add cmp sub jne nop pop mov loope sub dec add mov (bad) mov push (bad) jmp or add sub repz jno inc or repz bound lret imul push mov xor dec testl or lcall sbb sbb fisttpl mov and mov add mov sbb pop cltd adc sbb add insb int3 sub jmp adc or (bad) (bad) and inc inc jg sbb mull imul mov ret es sbb sahf ljmp mov idivb inc sub cli jb out push fdivr jb jns cmpsl jmp pop mov mov movsb cmpsb aam mov push jle imull jb dec push scas int3 xchg ret inc sub call pushf (bad) dec jnp and pop push addr16 add mov aad fwait mov mov jmp xchg jne std and mov jno lods mov stos cmp cmp and xlat xchg inc mov ficomp pop test mov rep movsb push es outsb dec push dec mov and sbb sub sub (bad) cmp dec pop pushf adc xchg xchg jmp mov add add repnz mov xchg jnp lret (bad) sti pop pop stos pop mov mov out sbb subl mov (bad) in adc sub mov out adc daa mov mov xor cmpb xor mov push or stos push test lock cwtl int xchg inc test add out mov cmp into ret sub lods mov mov jo lock je xchg and (bad) repz add fldl pop pop sub dec out sub inc insb inc sub test shll cltd or push (bad) repnz icebp cmpsl faddp or out out dec ljmp xchg inc aaa scas mov sub mov add pop movsl push ret mov jb stc mov in dec sub mov mov sub xchg fadds movsb sub test add fist mov inc push mov push jl daa mov into loopne mov insl rorl mov shl jmp jmp xchg cld mov add mov xchg call mov leave test in xchg add pop push inc imul adc in push xchg mov add pop fnstenv sti nop test cli adc push xchg push dec test push sbb das mov mov (bad) pop xor mov mov ss cmp fisttpll adc and in stos or xchg push and mov mov ret aam lods cli (bad) sbb mov push jecxz call xor mov jg es call inc push mull fisttpll cmovp mov xchg mov sbb mov sti pop mov ret mov adc or loop add inc fbld cmc jo pop or (bad) aaa pop mov sbb rcl adc into adc fmul add sbb pop loopne call sub add out int jg pop jmp jg adc cld ret pop lods cmp pusha (bad) jae pop mov sub lret mov mov xchg ret ja cltd std pushf xchg mov xchg xor cmp xchg or lcall dec scas mov dec push in scas dec das jb popf in lods cs dec sub imul sub mov push dec std dec repnz jmp out xchg fcompp dec aam mov pop icebp adc xchg into mov xchg mov cmp out sub notb ljmp mov cmc in add fildl or repz dec xor (bad) icebp stc inc sub out dec and test lahf pop or adc or sub mul add movsb fcoms (bad) mov fnsave (bad) cmp xchg pop lods stc movsb cli mov pop out xor and cmp shll cmp repz idivl out xchg xchg mov roll pop icebp xchg sbb sub scas lret stos ja mov push adc and xchg ljmp lret fist int3 dec add out fs test hlt mov fwait sbb lea scas fisttpll loop lret test and sbb ret mov sub mov fs int3 dec call insb fs mov mov sbb ret jp mov xchg mov loop add mov jb add xchg mov xor push dec stc xchg in data16 imul aam pop jecxz in daa sbb inc cmp rorl nop cmp and mov nop les sub add xchg incb jmp icebp push flds mov stos push jge cmp xchg aas rorl inc mov jmp pop cmp shr fs call cltd cltd data16 xor flds push mov lods pop sub fsubl iret adc les xlat dec mov iret jmp fisubr out jbe sub aad lock (bad) jmp mov std scas mov dec ljmp movl inc leave jg mov sub stos cltd into cs jbe (bad) std sub pop fistp daa inc clc shrb (bad) sub mov add mov jp into clc xchg inc cltd movzwl iret cmp mov gs xor in or or fist int3 sbb dec fst mov jg push mov fisubl inc fstpl jno and scas cmp add jns add (bad) dec jns or out sbbb shrl fdivl mov dec shrb out pop jl inc rcr in and or pop loopne sub cwtl inc icebp cli fstl arpl dec aam ljmp jno sub jp fs mov sub jno xor imul iret in and hlt fnstenv bound push add jmp sbb jmp (bad) sub roll or xor notl or mov pushf lds adc (bad) inc pop push dec fstl sub lahf in xchg bound into xchg xlat pushf je iret xchg int3 (bad) inc out aas xor stos cmp and pop xor fsubrs mov pop or inc lods mov popf adc or rcl push inc inc fistpll mov mov repz mov dec in mov xlat jg clc or sub xor adcl (bad) cld out xchg mov mov (bad) cmc and jne push dec icebp scas mov dec and sub jp lds not jb or ja mov add sbb lods cmp stos cmpsb in sub or jne in add hlt into fs mov fdivs cmpsb jno jno outsb mov (bad) mov repz rolb call add push jmp add xor add and cwtl and pop (bad) lods rcl mov aad cwtl ret dec jmp jns pop sub jae jp data16 sub xor mov jle movsl std enter xchg loopne mov lret (bad) mov push das pop repnz movsl rcrl push lcall cwtl xor xchg inc stos dec mov mov xchg xchg (bad) (bad) shr add push jae and arpl pushf shrl je mov dec inc ret roll iret or push mov leave cmpsl repz inc cmp (bad) mov fisubrl mov shrl sti outsl jle (bad) sti roll shll cmp (bad) and pop ret (bad) fs out dec xor mov test test (bad) xor and les leave (bad) jge std mov insl xlat rcll movsl jne (bad) mov pop cmp sub sarl stc mov mov push lds scas push in pushf jmp ret test out xlat xor sti popa pop testb roll dec mov gs or add inc sub xchg adc xchg mov xor or push outsb imul adc (bad) aaa frstor jne insb movsl pop xor xchg dec cld cmp clc popa movsl mov jg (bad) pushf es push lods je cli in mov sub ret dec sub push add sbb sub sub inc pop jnp sbb mulb dec sub xor (bad) mov lret dec in jg jg mov (bad) fldcw ret (bad) mov xchg test in pop mov xor imul dec xlat mov fisub xor xchg (bad) mov dec mov es out sub adc enter push in (bad) jo jnp mov cmp ret pop push adc add or jb (bad) jne jle push jne mov mov ret add enter pop test mov ljmp int xor lods fmulp sub (bad) ficom xchg mov in and add mov (bad) xor sbb mov movzwl cmc inc sbb aas mov mov (bad) stos or jl call repnz mov inc and add mov ret and fidiv push ret mov sub inc and fcompl mov mov roll and leave jne sbb and pushf sub repnz gs lret incl hlt inc xor mov mov jp daa mov mov shr repnz cltd loope inc adc or pushl and mov and popa stos and insb sub sub or les test movsb stos ret ds nop sbb dec outsb xor dec add repnz (bad) fs lret jb and clc jp and cmp jb (bad) fwait push xor (bad) mov pop and in (bad) test pop mov pop icebp test mov popf popa outsb jecxz adc ret or out daa sub fisttp gs movsl sbb push sub (bad) in sbb jbe pop add sub and or fidivl mov in cmp stos mov mov mov sub cmp rolb add cmpsl jg notl adc sub sbb adc stos sub (bad) pop outsb adc stos cwtl xchg ljmp sbbb pop xor xor xor cmp loop test or jnp ret xor mov dec mov lds and repz dec mov dec jge ss xor sub lahf xchg (bad) fimull (bad) jae das jbe lods pop or out into add mov fcomip dec cmpsl lock xchg gs out repnz stc jge ret mov stc inc (bad) negb add (bad) (bad) mov mov ret add cmp lcall outsl mov and sub test pop adc mov xchg les dec xor enter rcrb xchg add lahf mov loop mov arpl xchg in adc sar mov jp xor and ds imul test movsl mov mov stos push pop push les jmp cmpl jge xor sti int inc pop stos lret in pop out cmp mov cmp lret push adc or xor cld xor or xchg out jmp push add nop mov push jmp ss mov aam pop xchg jns dec out imul adc (bad) adc mov cld add out cmp fdiv sub popf ficomp call jecxz fcompl dec jge inc daa xor test stc pop dec rcrl das add jbe pusha jecxz fcomps xor mov ret (bad) dec pop mov icebp sti out push dec mov (bad) jns add or test sub ljmp pop mov and mov dec fstp push enter (bad) push int3 cmpl shrb inc sub pop (bad) jne dec push js movsl sbb call (bad) das mov mov dec pop adc jmp mov push push pop push divl sub repnz fldcw mov sbb leave outsb arpl in sub sub fsubrp xchg test int3 push rolb jb mov adc xor sbb pop std pop and pop lods push dec repz adc adc pop fbld add inc ret movsl xor inc mov inc add int3 push jmp js inc add test fistp es adc jg push jmp clc (bad) daa mov sub mov push add fdivrl inc (bad) jb dec fidiv stos stos ja pusha das and dec inc ss dec loope sub cld cmc lret icebp bnd (bad) cmp ret fnstsw les stos mov sar dec (bad) xchg jmp ret rclb fxch pusha xor sub hlt lret jns cmp add fisttpll add sub ss sub and ficom enter pusha jle mov loopne out mov dec fs jb mov fbstp out mov fcoms cmp sbb cs mov inc adc lods scas mov icebp adc fisttp sub xlat mov xor or xor jge mov fs loop xlat jmp out imul sub movsb movsl bound gs movsl pop scas or pop stc mov dec and sub fist fmul out das cltd xorl sti add fist imul pushf sti fs xor adc xor inc pop test movsl dec popa mov mov outsb mov mov dec ljmp test sti movsl movlps adc mov adc or cmp jmp add or daa and repz lods sbb fidiv into (bad) stc (bad) (bad) or sub jno cmp mov dec mov jnp lods pop mov sbb adc decb fldt mov lods (bad) mov scas mov or aaa or gs pop roll push fldenv dec fisub push into bound or (bad) cmc mov push push dec lret sbb sub sub xlat xrelease sbb stos out pop xor stos mov add aaa icebp cmp hlt in data16 mov pusha repz imul sti push iret mov jmp or lahf inc lock leave mov mov inc movzbl push and popf xor ljmp ds dec movsb in sub icebp jbe jno push iret icebp pop and and mov dec sub dec test or imul out push aam add dec xchg sub and dec inc (bad) cld negl inc inc (bad) je popa mov push adc insl cmp mull (bad) out mov daa mov ljmp in jae add sarb (bad) and lock rcrb xchg inc and imul push jns dec jo mov dec push sub mov push test add mov and mov out gs scas sub adc cli repnz xchg dec (bad) and dec dec push pop gs leave jne in aaa mov or pop xchg sub mov xchg pop popf inc (bad) mov std jmp mov xor or jge dec push call scas imulb bnd mov (bad) and mov dec mov push sahf and and (bad) mov (bad) sbb dec (bad) ljmp mov pop out into mov (bad) pop and jg fsub (bad) jp dec sti mov inc and cli jecxz xchg mov mov dec bound in and push sahf mov fist popa and and dec out call les in fsubs dec push fwait dec popw xchg ret ds mov lds pop adc push dec test add xor push (bad) jb jnp xor xor es imul mov sub ret jb sub push jmp stos lret mov add popl inc adc dec cli das shr dec into stos push movsl xchg pop sbb movsl mov loop mov jo out and ffree js mov cmpsl loop pop addr16 loop and push icebp jle jne mov push adc (bad) cwtl jecxz mov repnz pop xor rorl leave push in adc and add mov enter mov inc jns jle jmp add lret push popa aad (bad) imul fmull cmp lcall test and ficompl cmpsl jo repz mov icebp daa dec mov lds or sub mov sub sarb aad repnz roll cwtl outsl lret repz (bad) cmp pop aad dec lcall (bad) push mov cmpsl aam mov xor std lods mov imul mov mov lret adc xchg and mov and in sub scas bound std jnp sub scas jl push or pop and add push mov ret lahf mov xor add fcoms iret xchg enter add lock sti repz add js not stos sbb inc jno dec and lret dec hlt lea mov sbb lahf push ja push rol xor fild loope adc (bad) stos cltd xor gs mov repz jecxz push leave mov push dec les xor pop fstl xadd or mov pop lods inc mull and into pop sub or ficom pop (bad) fs jmp out test rorb jb (bad) mov fwait mov icebp adc xchg ret push adc pop daa test adc mov call pop mov and notb dec int3 adc mov push ret push mov cmc icebp xchg movsl mov ret push add pushf push bound (bad) pop dec or jne jge inc jmp push mov mov out add xor mov and adc and sub out test imul xchg push pop push into lahf dec mov and rorb cwtl inc das mov fisub jle pop sub outsb adc jnp aas clc sub test pusha stos fcom out lahf push push xor les sub out je mov sar sub mov popf jnp inc mov popf fbstp scas sbb (bad) (bad) jne mov les test sarl xchg mov sbb stc add push mov insb ss mov mov mov mov push stos imul dec inc aad push pop ret jbe sub mov dec sbb sbb lds lahf mov mov lock into jle pop lcall insl fistpll test mov mov sub mov jb dec stos xchg pushl out and and in ret ja add cmp shrb push push and int scas and and mov inc movsl and and or shrl adc xchg mov pop xor call push movsb inc sub loop mov dec mov cltd imul inc jle rcll xor dec jns aad pop mov scas bound lret rolb repz sub sub aaa test sub leave scas sub imul out push in adc loop sahf shl stos sub sub xchg lods stc sub jne fisubr aam clc addr16 (bad) jmp mov xor or sbb loopne leave mov pop popf mov inc pop xor pop iret lea ds sub icebp rolb popf add and and add inc cmpl ja ficomp push mov popf pop mov ja dec popf aad sbb cwtl xchg mov sbb (bad) cs push jg leave out mov inc mov mov aad int3 popf pop add stos pop scas repnz xchg test jne add add xchg inc pop enter lock dec mov ret xchg push push add movl or push enter in daa push test pop jns or xchg push ds xor ljmp fcomi pop out xor dec add out xor jae xchg mov imul jecxz and jl popf mov jmp add (bad) push out sub popf xchg (bad) mov fs push push jmp test jg fidivr lea ficoml fisubl sbb mov jbe hlt or mov rolb cmp pop pusha sub das cmpsl jno mov push fistpl adc imul pop or lock or cmpsl add and pop imul aas (bad) dec fistl push outsb dec out mov ja mov mov add pop add and adc push push (bad) mov sub jne popf aam pop outsb or iret sbb scas (bad) fadd test push jnp scas xor mov out pop pop lds lret mov jge push das mov std xchg push cs cmc cmp clc insb test cli sub (bad) adc test xor jmp outsb cmp pop sub mov outsb dec aad inc add fsubrs or push mov push rcrb add jl inc and popa test fcomps jg adc and dec xchg adc rorb add xor repz (bad) in (bad) jne jle xchg imul movsl ja cmp mov xor mov addr16 loope jg adc rclb sub hlt cmpsl push jae daa lock dec test adc fstpl dec lods (bad) xchg loopne out dec mov out cwtl loop dec ret cli fstl in ljmp in xchg cmpsb push shrb leave fidivr adc (bad) push stos gs lret dec jne pushf dec cltd lret or les cwtl insl out dec pop int3 sti lock (bad) sbb rcr mov add dec les inc push negl sub mov loop xor lock mov jnp lods in and push sub jecxz or jg xor jmp imul push add xor inc add movsl sarl inc cld scas das fwait pop jnp push fiadd mov call (bad) cltd ret jne sbb insb mov pop lret out fisttpl loope (bad) imul or or imulb daa mov out xchg dec add dec es jns push cmc pushf lock fcos mov (bad) jb stc sbb dec sub mov shr sub mov inc cwtl sbb out int popa les or jns dec push int3 pop xchg fstpl sub xchg mov or adc cmp ds (bad) cmp dec lock xchg out xor lock jmp mov in sub arpl add or clc jecxz fidiv add cmpsl or mov pop movl pop jne dec push inc ds sbb xchg jmp scas (bad) or and dec es stc lods add sub jle popf dec push mov push lds (bad) pop inc xchg mov xchg in or dec push dec add push std icebp dec add imul lret (bad) in cs adc in dec mov cwtl pop sub mov outsl ja add imul lea mov or fldcw push dec in mov pop repz pop xor or dec and shrb mov mov jmp aad outsl adc mov mov in sub or pop rorl imul mov xor icebp jbe jbe movsb add inc scas insb xor icebp add cld pop lret push ficoml into jecxz test and xorb jmp mov and call outsb mov sub clc arpl pop lret adcl fbld xorl clc loope daa or sti or jbe push icebp dec cmpsl mov pop add sub lahf jle insb push jmp out xor fistp or ret fldt and or lock hlt (bad) mov dec push mov adc inc lods push adc xor das idiv pop les add pop jbe pop sub pop xor push out cmp sub pop push xchg cli and arpl lods cmp ss xor inc cmp ficom sub or clc xor scas sub xchg leave mov pushf dec jecxz sub add movsb dec int mov in imul ret xchg pop stc ret pop xchg inc adc mov stos fs fstpl mov push jns lret insb cwtl in test (bad) lds test leave fistl inc or sub mov test mov das xchg mov call ret out das xor mov enter push cmp stc inc and mov jno leave xlat in push pop sub sub and int3 stos add lea sub jo jmp mov cld imul xchg js mov lds fstpl lods stos test movl push mov add mov (bad) leave jmp or shrl jmp pop loope xor add cmp ficom jne fbstp xchg lcall icebp orb ja pop adc mov enter and push int pop je,pt pop (bad) cmc test icebp mov jae mov cs inc and xchg sbb stos jle pop or sub mov dec adc je cmpsl jp xor push xchg dec out into clc adc fisubr shrl das call (bad) rcl dec ja add stos sub add mov leave push jns xchg iret dec sahf adc orl rolb or mov repnz mov shrb xor or sub stc rolb xor je inc push mov aam fiadd clc ret movsl jmp movsb dec xor push add xchg push xchg mov movb in jp inc out mov gs sti testb inc push leave fcmovbe xchg std xchg push dec into mov lret pop adc roll aad test fcmovnb out lret inc imul xchg (bad) mov xchg mulb inc adc xor dec jl inc out jne sahf lods fwait add setl xor ret dec mov and and std outsl (bad) mov loop jne aad mov stc scas fldenv adc test mov sub lods aad rcrb xor ljmp movsl (bad) mov std push and and or push pop in daa xchg sahf pop cmp in mov daa out jl pop pop cld enter or fsubr jle imul and ds push sbb and sbb pop jl movsb aas mov xchg cld vshufpd dec and cmc imul sub mov cmp add lahf lret inc sbb add dec insb pop mov mov cwtl js imul fistl mov lret fisubrl xor cld pop (bad) je xchg (bad) lods fnstsw lds (bad) ljmp lret sbb jmp iret cmp pop push mov lods jae test loop and dec adc pop test mov xchg test dec ljmp xor in push aam stc jno sbb sub shlb dec lret outsl (bad) dec clc mov sti or mov lds jno xchg cli mov fld1 test aad pop cmpsl sti cmp mov xchg push pop fldcw je mov leave jp push or or mov pusha or cmp inc (bad) mov sub dec cmp xchg pop jae add jnp sub add cmp movsl push outsl repnz or les or jge sub daa push and das sub mov dec in cmp dec gs lods jle movsl sti mov jg dec xor dec enter out add dec mov into test xor mov xchg lods nop sub nop xchg data16 adc test ret pop mov mov pop or and mov jp mov dec pop cli push sub jg stos test mov cltd lahf insb out pop pop lret or and mov sbb mov sub (bad) and out mov adcb sub inc xor into jg (bad) dec and push lods jle movsl cld lock mov clc ds mov mov (bad) lock sarl push (bad) mov jl dec das adc add sti or mov push (bad) imul and cmp push ds jmp mov jno jmp into movsl icebp push movsl hlt xor mov out mov into mov sbb push add test pop dec sub mov das or std stos push loop popf mov stc mov js movsb and add adc or pop jo fs cmp xor sbb jecxz adc mov mov xchg push xchg push add lret incb push div loop add dec fdivs lahf (bad) jecxz or stc aas imul xor (bad) (bad) mov pushw das or jge gs sbb jmp pusha add sub or and push pushf mov std int3 (bad) hlt (bad) cwtl push popf shrb sbb stc repz lcall jo sub cmp out dec mov sub arpl push loopne sub mov pop push ja add push stos dec aas mov lds add push ss xor je push ds lret inc call incl mov add test mov fadds and into hlt loopne loop jg js sahf es adc or push mov ljmp xchg (bad) jg sbb mov sub push lahf (bad) repnz push out or fistpl add and add jl xlat scas fadds rcll lock lahf pop mov jp cld dec push sarb add clc mov jb ret divl leave jge into daa jge add xor xchg inc pushl mov scas lea inc popa adc sub pop cli sub sub sub sub cs push push insl jp enter setns mov fcomi stc push ret add and or rcrb aaa sarb imul popf rcl mov adc andb mov and sub mov std out add arpl test add and jle insb sub add inc movsl push loop idiv pop loope mov or mov data16 jmp dec (bad) xlat bound cmp ds cld or notl jae pop gs lods js sub orb fbld lods stos test cld lea outsb pop (bad) ss fstpt sbb dec loop (bad) into sbbb shll inc or aaa sti test in mov jbe pusha repz pop hlt repnz xor sarl sub pop and push xor and iret nop adc mov and dec xor fs xchg scas xchg into pop push inc outsl xor mov cli or jp inc mov push jo test pop jl (bad) push push fsubrp bound rcrl pop repz mov push push or das xor mov pop xor push repz call jo mov add fwait cltd mov stos pop or pop add mov mov cld scas leave jno daa jl or mov repnz sub sahf pop mov sbb lret adc lahf fdivrp ret jle push pop cwtl mov leave daa mov mov inc push icebp aas lods test cltd hlt cmpsl push iret mov sarl roll sub mov mov cli mov in test aaa cmp push mov and insb je lock add jb (bad) push lret xchg scas pop mov xor out jge outsl clc jae das jb cmp push lcall jne push cmpsb decb jo aam mov sti xchg sbb lret xchg adc fcmove lret pop popa (bad) xor rcl insb gs jmp insb or cmp and popa add mov and mov das lods cmp and scas dec popa jl push push mulb pop ss loop cli lret daa dec out lret pop xor mov hlt jb clc mov jno dec ja cmpsl lret in mov ja decb and mov push mov (bad) xor jne hlt sahf movsb inc xor repnz push dec bound cmp aaa (bad) stc mov cmc push lret fs pushf push mov (bad) dec jmp test or shrb cmp notb aaa fild or mov orl clc dec mov cmp scas jp sbb mov jmp es movsl push adc (bad) xor stos mov lds and call fisttpll lret cmp adc mov jg dec inc mov xchg cltd scas movsl enter add pop add (bad) xor xchg push xchg movsl cmp (bad) add and fldenv cmp adc ret sbb cmp ds (bad) (bad) add cmp es cwtl jb dec inc ss cld jge dec loop subb push rcll test loope inc movsl mov xchg icebp add mov lea jmp movsb scas gs int popa mov mov lret enter or xor push and xor xor stos cmpsl cmp and (bad) push ret std imulb stc mov pop jbe push out sub outsl add (bad) paddw icebp pop int3 pop push mov ljmp mov mov leave pop sbb cld adc sti rclb imul mov or push xor cmp pop xor mov adc lds xchg adc adc fldt fstps lea fsubr jle jmp sub aas jmp sub in out pop mov mov pause pop lahf pop xor sbb add push dec jmp cli popf push hlt dec (bad) mov mov vminpd jp pop into adcb sbb (bad) dec leave call icebp imul mov or rcll lods pop test lock shrl sub fbstp cmpsl ja clc and inc or jne lds jmp (bad) mul adc sarl dec scas lret pop dec (bad) sub or outsl xor adc mov dec or jp jnp mov mov add push movsb lret sbb jno or ds sub xchg mov push (bad) mov leave fidiv mov (bad) jecxz cwtl pop or pop adc fcomi mov icebp in sbb adc fwait cmpsb das fistl cmp jecxz pop mov sub shl xchg adc mov enter add cwtl (bad) into mov (bad) jae add daa xchg push pop out inc aas les push push (bad) movsl push jne test out cltd repnz pop mov lcall stos call into (bad) push dec fdivrp sub rorb dec shrl imul pop lds imul pop push or dec imul xor scas sub fbld out lea jnp sub fsubrl and or out das inc inc pop sbb lock (bad) (bad) and xor ficomp (bad) rcr cmp cli or add repz lret cmc adc popf insb (bad) mov and sbb xchg pop lods lea (bad) aam int3 mov popf pop mov cmc ret fidiv (bad) repz pop xor sti lea sbb addr16 fnsave cmp inc and or mov dec or dec pop dec mov xchg inc fs lcall push push outsl fimull pop hlt scas pop sbb push pop mov insb ret aas std iret scas bound adc pop add push lds add inc adc dec push in push es inc das pop push dec push adc pop cmpsl mov bnd xor ds test fisubr dec pop or xchg jp cwtl out call xor cmpsb rorl sub pop xchg (bad) push push inc sub add movsl inc adc add mov cmpsb roll sub mov sub push xchg fs xchg int lcall sub jge pop push sub xor hlt arpl adc xlat out mulb dec lock xor aas mov pop popa adc xor call pusha dec and and cs mov pop xor jl fs movsw insb sti popf daa jne cmp outsb call pop lods aad sub ljmp roll mov mov aad fcoml mov fcomps push push mov xchg out in xor fnsave cmc sti daa bound rcrl jo mov mov fcoms mov mov fsub int sub xor mov adc into xchg sbb (bad) jle cmpl mov mov add pop xor (bad) or (bad) mov adc xchg push xor adc cmp bnd ljmp xchg fisub repnz das xchg ret push pop add icebp pop xchg mov push xchg lahf pop iret mov mov cmp xlat daa iret adc or sbb loop add mov frstor pop jnp mov ret mov mov sub pusha iret cmp sbb sub and push jns mov lock insl mov push movsb lret (bad) push rcr dec fs push into pop hlt (bad) notl push mov pop mov inc and es rorb add and dec sub sub push xchg mov rorb push pop add cld cmp stc inc xchg (bad) mov sahf rcrb sti aaa adc (bad) xor out cmp dec mov sub cmp imul daa push in movsl pop ss imulb dec scas pop pop xchg jmp scas mov add aas mov jne push or push jge push dec call loope sbb aam cmpsb daa adc imull sbb sub das xor mov sub (bad) ja sti rolb dec and inc movsl xchg stc fs (bad) mov incb pop adc imul sub mov icebp jl fadds daa xor inc mov rcrl and jo ret sub gs test ficom add sub popa xor test cltd lret lret std jecxz and test shlb sbb insl mov out mov or mov imul adc sub test dec mov es pusha jle jo push jo pop add pop sbb ss test (bad) or xchg sarb pop jo sub mov xor incb xchg push fdivl mov or jbe das cmp mov adc stos sub sub cmpsl fidivl add push into mov out mov dec mov cmc and xor (bad) push mov das sbb and out pop adc loope mov and or mov imul mov dec rolb pop inc pop jl or mov dec out xchg mov sbb dec call mov adc aad in sub iret loopne push and das sub je adc jno xchg (bad) stos bound inc mov (bad) jo mov inc mov jno mov push int3 scas stos xchg sar pop mov adc popf or pushf ja sbb lds repnz jmp xchg sbb call test adc push call cli cmp mov mov fldenv (bad) iret sti jne aaa imul xchg pop sub sarl jle cmp or iret push xor loopne sub aad and cltd add and stos ja pop (bad) dec frstor mov sbb add loopne jmp cmp pop ret repnz jmp in data16 or jge jp xor jge push mov mov cmp sub pop xchg pop mov rolb out inc and test movsb cmpsb arpl pop push jecxz adc cli dec jmp push imul pushl dec sarl push xor js pop mov mov push xchg aaa mov dec jge bound xlat pop fnsave sbb push push aam sub cmc int3 pushf rorb ret je out repnz pop lods ret cli pusha add pushf and dec pop leave shrl aaa cmc fisttpl in lret cmp (bad) mov ffreep daa movsl std lcall pop repnz jge rol xlat xor dec and scas gs cli testb out cld movsl vpavgw dec clc dec mov xchg lret xchg add jp push lcall mov cmp cmp shll push dec (bad) sahf or pop push mov xchg scas inc loope pop sbb bound test ret cmc xchg ret mov icebp mov adc cs xor xchg ljmp and lret dec sbb out sub push cmp sub xchg (bad) imul push inc add stc and or ds mov test mulb loope loop xchg jne lods enter rcll mov fbld movsl clc push xchg fisttpll ds pushf mov inc mov outsl cld cld mov pop and enter sub sub aam sbb mov imul dec xor jmp popa pop and xor jnp and and mov cmp aad stc or lret add pusha dec mov mov int3 push and cli cmp mov and xchg insl fstpt dec stos fucom std fildll ljmp pop or mov movl int out icebp or sbbb bound fsubrl mov inc and sub pop xor mov aas aaa and (bad) scas into jecxz ret sbb dec cmp pop movsl notb push gs mov jge inc insb sub lods jp pop xchg add jmp popf cwtl sub fcoms push div stos pop jg cmpsl pop nop push add mov lds hlt out negl fxch lock mov cmp xchg daa or pop pop ss push cmp and rclb (bad) push push xor lods es popf fidivr ljmp sbb dec and icebp test test sarl jecxz cmp dec adc mov fucom push call sub movsb mov lods cs bound stc inc lea ret adc repnz add and fnsave data16 roll call mov cmp pushf aad sub je fldenv add outsl mov xchg mov sti cwtl dec pop xchg gs and and loop or and push int3 mov in jmp or pop jp dec adc inc lods and adc scas jns xchg pop jmp pop mov pop into lret mov loopne mov add xor sub xchg pusha xor outsl das and jl jo rcrb xor scas pop sbb push aam push daa fstpl ja sbb xor leave dec ljmp mov lret lods sub xchg cwtl and test mov mov test in (bad) push and sub and jnp dec xor int3 rcr mov fcomi out push mov push adc ljmp ds mov inc and or mov xchg aam imul sub push es push mov clc jecxz outsl xor into aad rcll xor and jae roll aas not dec and out inc mov fsubrs int cmp sbb jbe (bad) stc jns in scas rcrl rorl and sar shrb imulb int sub xor (bad) jge stc xor push lcall mov pushf mov test sti nop xor repz push call test in push ret movzbl dec dec (bad) dec pop (bad) insb dec xor xor and fnstcw push call icebp loop test pop sti sub (bad) xchg sbb mov das inc ret lahf scas jge mov ficom lods pop sbb fcoml or mov push gs inc call pushf clc out mov pop and mov mov sub xchg (bad) jns idivl inc rcl hlt xchg push xor jnp xor data16 sbb mov cltd pop push xor ret mov jmp add sbb dec jb dec mov sub add pop sbb out nop rcrl out sbb (bad) pop and roll ret fsts std lds cli inc mov cld ficompl bnd test movb lcall push dec jmp xchg rcrb dec push (bad) and lods dec mov imul xchg cld lcall negb mov cmp mov pop mov mov mov xor jecxz in test mov shr add sub dec lahf pop inc jb mov std out das divl mov das pop fwait mov jne incl mov inc mov pmulhw jb test ss inc (bad) hlt adc out lret mov pop pop nop imul pop call push jnp jecxz sub loope mov jp sub in cld sahf push jnp or add adc dec push jmp sub or loop lcall xchg fsub xor pop mov sub shll or neg stos dec aad push jg sahf cltd dec fs jp push push (bad) bound pop in sub push sbb dec or sub into call icebp dec pop inc out lcall pop nop sub fisub daa or fcmovne sub into adc (bad) fbstp out xchg xor xor add and sbb jno or imull or or mov or lock pop push dec push testl in add aam sub insb into xchg insb mov (bad) jmp lods xlat mov popf in aas xchg nop add xor inc adc ret fnstenv push leave jge lds lods jp stc pushf shlb das fdivp sub data16 dec or sbb xchg fdivr push sarl fs sub sub push jmp lods mov xor jecxz push push jbe add push adc rol lds ds xchg jmp cld mov incb sub mov jg xchg repnz test and push cmp mov jl lret jg sub xchg fimul imul mov xchg mov push xchg push into xor xlat and sub stos xor and or push push pushl jbe push and push mov mov jb pop ljmp xchg push mov sub jg mov (bad) movsb or lret mov test mov add clc fcmovnbe mov (bad) pop into cs cmp cltd pop out cmp lds adc push in xchg imulb jb inc in dec iret and das bound mov dec ljmp jns xchg adc sti (bad) dec inc dec into cli sub adc mov dec inc mov test mov mov mov out cmpsb mov and and jp in mulb fldl loopne pop movsb dec js dec into mov test shr xchg push lods lahf sar xor js dec sub jmp mov cmp push cmp adc inc orl cmpsb pop xchg mov loopne int3 insl data16 inc pushf cltd movsl adc pushl popf out push pushf mov int jl dec repnz sar and jmp inc cmp mov mov sti sub les xchg nop and hlt xchg mov or lret clc sbb mov in mov scas mov vmovaps or mov mov xchg ret loope lock aas popf jmp xor inc jno imul dec pop pushf inc xor loop push aaa push icebp cli sub mov fwait pop or fistpl adc enter loope loope cmp lock jae (bad) mov pop in imul out movsb mov ss jae mov or out out repnz push xchg mov jns cmpsl xlat bound jmp xor lods cmp inc dec mov notb adc (bad) icebp (bad) cmpsb repnz or cmp and outsl mov shrl cli or ds nop sarl sahf jb fsubp leave aad mov add xchg pop movsb in lret (bad) jnp lret and push enter wrmsr sahf ljmp jb dec or iret ja cmp jb sbb loop rclb cmpsl roll jno imul mov sub jmp xchg pop mov sbb mov pop xor in out out inc cmp ds mov xor add (bad) pushf leave xchg lret loop leave icebp sbb ret cwtl adc mov out add add and mov and jg into call adc into push pop test sub js xchg mov add mov shrl das lock fnstenv mov xchg sub frstor dec jne in jg pop clc cltd adc inc repnz lcall leave (bad) cmp mov pushf cmp mov push fldcw jmp stc fimul outsb stos sub mov jnp pop jns (bad) sub push popa sub sub stc mov cld mov aam add mov push das iret fimul pop mov pop mov cmp or mov jmp test out mov dec (bad) dec xor scas test cmpsb dec mov pop cld mov mov add inc jg add (bad) pushf pop inc cmc pop roll test mov (bad) cs (bad) std clc enter xchg daa lcall xlat push sahf mov scas xchg movsb (bad) cmpsl add mov leave repz sub ret scas xor mov adc (bad) popa cs popa xor and and (bad) call cwtl arpl test push and jmp add sahf xchg and into xor add add pusha lcall add dec push sub or aaa jmp arpl pop fist and dec imull push loopne sub pop xor xor sahf or cmc inc sbb test push push pop inc arpl add pop add popf adc int xchg adc xor (bad) daa fstps xchg or xchg push mov sub insb jp pop push pop cmc (bad) movl mov add push push lahf pop imul push (bad) mov xor push lret ljmp sbb or repnz adc or push inc cld xor mov mov mov dec push pusha jmp jnp add add push mov jg push pop pop not xchg fldl popa outsb jmp push test sub pop add add lods ss pop add mov loopne jge add pop hlt jg call test mov inc inc mov movsb cmp lahf pop pop dec imul pop add jno xchg mov mov dec dec pop mov jno inc or (bad) mov or sub or mov lret push jge push mov mov lods inc pop and adcl add sarb push sahf loop data16 pop mov mov add jnp ja or mov (bad) test mov popa xor add xor mov or vmread lahf daa xor push in and icebp lahf jg out pop (bad) testb flds cmp mov add mov cltd mov push out popf hlt into das pop adc lahf jne dec pop enter add cwtl xchg mov xchg fcoms imul leave jns mov sbb xchg add (bad) adc sub sbb mov xor xchg cli int3 cmp iret xchg out pop xor cmp ja (bad) pop add int3 wbinvd dec leave mov (bad) imul xlat sbb movb (bad) mov dec mov pop roll sti cmp xor inc jmp cmp out xor cmp daa mov pop push sub mov mov orb lahf cld icebp adc stos mov cwtl add out inc sarb orb ljmp xchg (bad) push push mov data16 aaa and pushl fs jno sub xchg ret lahf pop xchg dec mov and out enter fdivrs mov add and jecxz pop mov fistl xchg jecxz sub pop pushf in pushf mov add add imul inc data16 mov cld adc popa sub sbb loop fiaddl pop mov (bad) mov leave jmp dec dec insb (bad) leave jg fwait ror and cmp pop add test lds test movsl push xor jmp cmp xchg bound xchg call push dec cmp sub xor sub or mov data16 mov sbb push jmp cwtl imul mov mov pop mov out dec ljmp loope xor inc dec xor sub adc inc ror add (bad) mov xor jmp inc icebp movsl bound add mov sub (bad) pop pop pop bound xchg xor cmc mov sbb dec test sub out pushf les cld daa pop pop push aaa and scas call in (bad) (bad) mov or xor (bad) gs (bad) out xor cmp xchg gs add xchg pop xchg or mov incl roll pusha mov cwtl inc dec add pop and mov sub xchg daa fimull push lea aas xor incl or leave xchg data16 or dec add dec aad adc fbstp sub fcmove dec add das or imul fcomps icebp dec xorb cli outsb (bad) cmpsl test arpl cld inc pop push cmc testl and push jl ficoml dec adc sarl clc mov stos pop mov pop gs pop shll cmc fsubs (bad) lret fidiv xchg (bad) stc mov ret pop pushf push je or cmp idiv xchg inc push mov or or sub mov (bad) add add xchg stos push sbb daa mov mov cli testl testb and xor pushf (bad) loope mov xchg add dec sub dec fstpl xchg jno pop aam and xor fdivrs cltd shll inc sbb idivl pop loop sub add inc add pop dec xchg sub das and mov or mov jns xchg or mov int xor jne mov xlat jmp lea ret in mov mov sub mulb dec clc jp mov and dec in mov ret into xchg sti pusha xor iret mov ljmp lret cltd dec les jmp mov lcall pop lahf mov and popl pop rorl lock enter arpl add dec dec jmp in dec je push add mov inc test or cwtl push xor sbb jo mov mov add cld sub lret mov test lock (bad) push push (bad) (bad) out xchg (bad) and aas loop mov xor mov xchg in (bad) xchg mov ljmp jg and into pop dec mov rorl adc xchg data16 mov loop hlt mov into in divl movl lods cmp lret pop jno imul inc add lcall scas sub lock add fstpt jg push test and addr16 ds push mov aaa mov gs aas and fcompl sub sub xchg adcb cmp fistp push xor lds shrl int insl (bad) leave mov and ret (bad) dec push mov adc and push rcll sub cwtl mov inc or pop shrb dec jp in xchg hlt push push or div mov lret out mov add test add scas lret adc ds mov into sub ret sbb jnp push pop out pop mov int add adc pop push mov xchg adc repz decl mov mov adc andb sub push add out sub rorb ljmp mov add inc out or aaa pushf cmp sti fs clc sbb daa (bad) icebp mov fstps fadd into xchg icebp lcall scas lds leave cmc add pop scas cltd push cmp mov test xlat mov pop jbe pop cltd dec cmp mov pop cld mov incl mov daa mov in ret cmpsb ljmp gs je pop pop cltd pop dec jg pop cs (bad) sti jns insl (bad) outsl sub dec fisttp pop lock popf adc cld call dec xchg int3 push into push jnp lods mov daa ja movb push pushf adc repnz nop inc xlat mov pop icebp jp pop movsl ljmp mov push loopne lret clc loope (bad) aas lret dec pop mov int3 push xor and mov jmp popf addl xlat lds out ja sub adc es dec outsl sub flds iret mov nop jg add and test fcmovbe cmp (bad) jne or push jecxz adc loopne inc js xor pop and pop testl lret aad xchg fist dec orb and rclb push repnz bound cmp out dec sbb add jne sarb and nop lret xlat sbb push (bad) push add in mov push into push rorl (bad) pop dec xor leave ljmp jge or popa pop mov mov mov dec pop mov mov mov and icebp inc and pop jge ss mov jg cmp mov jmp push pop pop and loop push inc out or pop subl cmp iret and inc and cmp sbb fmul jp mov or mov ljmp xor mov mov popf stc jae xor mov xor pop and aaa stc movsl adc stos sub xor sub xor sub dec data16 mov loope cmpsb (bad) (bad) int jnp iret lock nop leave mov call ja dec mov js pop pop dec or gs mov lahf pusha aas loopne les jmp push adc or sub sti ret or int mov scas xchg icebp repnz test add cmp cmpsl pop out ljmp repz inc js dec sub cmp push cmp (bad) mov mov xchg mov insl xlat xchg stos sub mov sub (bad) lds pop adc sub add mov mov xchg sbb inc pop jg out pop or sub xchg sbb ja jne mov sbb test (bad) mov scas mov nop sbb ret outsl jmp jne negb loop fcoml xor add out or xchg das mov loope decb sub pop xor in add push xchg pop hlt mov sub sti fwait dec or push rorl mov or mov jne jae sbb ja mov or int cli dec (bad) mov push inc repz pop pop (bad) xor mov or lahf xchg adc addr16 ret (bad) in push ss push mov inc sbb test inc clc jg xor sbbl jmp adc xor xchg cld out mov and mov mov sub cmp out jle into ljmp sub fnstenv inc repz xchg enter sub mov xchg sbb out add or mov rclb popf stos mov pop mov fs cwtl xor repz pop movsl movsl adc lret mov adc lret jb lret mov shl add cli in cmp mov mov cmc cmp xor ret jg dec gs mov dec sub pop or and mov lods cmp pop ret mov out fs mov mov ret aad jns jge fisttpll test test xchg sbb in int aas repz adc out aaa xor es adc push mov or in cmpsl in rdmsr cli pop xchg and jmp xor push sub loope lret dec repnz dec stos cmpsb fs in (bad) mov dec dec and lock mov outsb dec stc ja and mov jp sub sbb push and in adc sbb jle jae adc mov xchg and test or and icebp call and push cmpsl (bad) data16 xlat out data16 popf shrl fcomps lret mov inc neg inc mov stos adc in push mov jecxz hlt test pop int3 mov xchg nop es mov cs je sub andb xor mov out or xchg icebp pusha enter sub test mov mov fidivr lahf (bad) sbb mov xchg xlat jmp mov cmp inc clc out fbstp lock stos adc mov test mov lds ljmp lds pop cli rcrl fs outsb and adc pop lds sub pushf das mov push cmp gs sbb xor cmp fincstp pusha and pop dec dec mov or mov das cld popf pop cmp dec and and add (bad) and push negl jecxz xlat scas sub xchg sub jecxz xor or xor mov dec scas lret mov test pushf jmp pop leave xor add jg pop lret ret (bad) jb or ret std fidiv adc cmp hlt jb lret int mov shl jo mov mov lcall iret or int or mov in cmp mov adc scas ds ss fsubp ret dec into xchg xchg icebp (bad) push shrb ret mov fildl fstl adc (bad) pushl rol sub mov jae cld push repnz jmp hlt push inc pop lock cmp (bad) (bad) dec jmp (bad) jno mov add pop push push xor inc stos xor fmuls stc (bad) mov xchg repnz push ljmp push leave mov inc pop sbb sub mov call add out inc dec or daa mov aaa push push jnp push mov subb sub outsb mov (bad) das shll inc sub in jno push out stc aam or subb inc sarl lret add sub xlat cmp xor pop adc sub sub cwtl aam xchg out sub pop (bad) sub repnz je pop dec and cmp push hlt xchg push ja cli dec loopne imul jp data16 repz fs push sbb jbe scas inc xchg lock or sbb fs mov or and mov cpuid rol push push dec push loope mov pop nop pop stos add or mov push sub pop jp aam imul aam (bad) cmpsb mov (bad) adc adc adc (bad) in gs pusha pop ret sub or in pop mov lahf sbb push fsts and dec je stos or iret leave fstpt push (bad) mov stc pop icebp sub out fcomps addr16 into inc pop add ss adcl push mov das (bad) js pop ret mov lcall mov mov mov nop loopne daa pop sbb add imul lret xor loope xor (bad) mov cmp cmpsl addr16 daa clc pop mov (bad) sub cmp bnd iret pop mov sbb mov or push xchg sub adc pop (bad) out cmp scas loop push lds cs cmpsb inc add iret xor xor pop repnz fstpl mov popf mov bnd ret adc subb lret std push iret inc mov into and add and inc sub adc pusha repz push and mov pop pop cmpsl icebp hlt movsl nop aas sub mov add scas mov add rcll mov test shr cwtl xor mov or icebp sbb insb sub push (bad) test pop mov pushf mov repnz cltd into leave jp lock mov mov aas mov enter mov fsubrp xor or ja inc int3 pop andb and pushf lods jnp int cs push dec imul inc mov xor cmp je (bad) arpl ss add and and aas and shrl mov mov or repz jae mov and fisttpl inc out das pop dec push dec jecxz dec mov inc push cwtl aas adc lret xor in inc iret or lretw pop loope orb out xchg popa ljmp scas sub adc and (bad) jns mov call or jne loop pop icebp hlt loope jnp sbb stos int3 inc rclb adc dec loope in xchg adc leave in inc daa fistp call xor mov outsb dec rcl xchg fcmove movsb inc fsubs das (bad) lcall mov add jne jge les dec xlat mov popa lret ret inc movsl mov add xor icebp stos flds and scas sbb dec bound xor xor in dec ss pop sub orb mov lea sub fnop aaa or pop dec sub cmp loop pop imul xor push or cltd test jmp or ss lods test movsl dec push scas sub sahf das (bad) sbb call sub mov in mov sub inc mov sub inc (bad) rcrb test and mov jecxz scas test mov aaa or jmp push mov leave pop in daa push cltd mov mov cmp loope adc (bad) xchg sub or repnz (bad) mov mov cli adc pop js in movsb scas int3 mov rcrb add mov cmp (bad) mov inc sarb xor imulb mov insb (bad) lret add or and popf pop xor jle pop into sub ret repnz xchg mov insb pop rorl mov adc inc out mov (bad) movsb std push mov or dec or stos ret std stc mov aad test int dec jp or loope mov loop sub push dec mov and (bad) out les sub cs sti dec mov or jno into mov repz or dec jnp adc cmpsb std adc mov xchg fsubr push jge rcll leave sar dec pop or leave iret xlat out lahf pop out cli cmp add mull xor dec jl push mov xor sub data16 pop pop daa into fsub in loop insb nop mov insb (bad) fisubr decb loope sbb mov adc fxch outsb mov aad (bad) jmp push ret jge xchg add ficomp bound sbbl xchg lret mov stos dec idiv fcmovb fmuls (bad) jne mov cmp sarb jmp pop or add sub sarb movsl xor mov (bad) jmp jmp iret ljmp cmpsl rorl stos sbb jne xchg jmp dec enter fs daa dec shrb scas or jg loope fcompp mov fimul enter and leave jge dec test mov dec lods mov repz mov cld xchg testl pop add lahf jle imul adc aad popa dec popf mov mov dec stos and enter jbe pop or jb notb and inc mov or lock or xor cld test dec data16 sbb or sbb out fadds adc dec push push xchg (bad) jmp enter into stos lahf (bad) pop into add test sahf adc jmp lcall push in pop es dec xor and cmp adc sub shrl mov sbb jg fimul pop xchg xlat (bad) sti addr16 push adc shrl imul repnz xchg push bound adc dec (bad) xor leave je gs aas cld adc fisttp xor ds iret sub fsub popf fstpl enter incb imul mov pop mov dec hlt add in lea jmp (bad) jbe lret (bad) pop jmp mov mov gs mov fimul push jne push lds fscale rclb push rorl mov pushf cs push sub idivl mov jnp and adc jnp daa adc or popf loope ss push movsb ljmp add ja push daa (bad) mov (bad) fldl fidivl mov gs shrb inc icebp inc (bad) pop loope cmpsb dec mov mov and js (bad) jp jle imul inc icebp clc icebp xchg push sbb out mov adc fisttpl push dec out jno and sub je cwtl pop out popf loop jbe jmp das xchg push or dec sti jecxz sub fwait xor pop scas sub adc xor imul pop loopne out mov cmp sbb add stos xor mov mov jne add push (bad) mov (bad) aaa sbb xlat stos push insb mov inc jb das xlat mov dec fwait (bad) outsl mov testb sub or push out push mulb fmuls sub inc and leave sarb aam sub les jno xchg jbe push jmp ret adc out mov inc test xchg int3 stos in ss cmp leave test ss prefetch pop out leave imulb xor push sbb mov out dec mov dec cmpsb jl mov adc inc push mov shrb mov add (bad) xor sub mov jb fdivl and and add fcomps push sub dec repnz xor (bad) xchg lret and xor xchg mov cltd dec pop daa sub movsl lret pop sbb xlat pop mov lock or dec xor or lock cli sub sub insl das ret inc and div dec and mov insl psrlq push (bad) scas sub sub adc xchg dec daa mov jg fimull fdivl dec ja or imul push ret faddl sub add js pop push push mov push mov xor mov mov xchg fs aad out fldl shrl test cli sub cmp xor mov xor dec pushf lock xchg fcmovbe fs imul jne mov ficom mov pop cli das sub xchg push fidiv inc (bad) sti jo imul push les push int3 stc lahf pop adc pop scas lock ret sbb inc mov std jle xchg mov rcrb jne xchg stc clc pushf mov add out cmp sub icebp aad xlat in and mov je pop xchg xchg dec push pop cmp ret adc add mov clc pop movsl in shrl out out adc pusha stos out xor in mov push xor mov ss (bad) repnz leave pop xor out loope das mov xchg iret shr loop xlat stos add iret xor mov jge xlat mov push or enter inc and out lret jp test (bad) dec mov add sti repnz xlat lock push ret jg cli rol and jns out pusha or and jns mov (bad) pushl (bad) mov (bad) and ljmp mov ret xor loop mul in cmpsl lcall int outsb push mov test sub negb add mov movsl xchg pop mov mov test mov dec int3 fnstenv lret jo and adcb roll mul mov and and add or dec lret jmp ret test sbb shll repnz or (bad) out sti test movsb cli fcomp or xor sbb mov (bad) mov dec mov mov (bad) repz sbb or mov push push data16 fstps call mov pusha xor sub (bad) ss sub leave loope or add or movsb aad cmpsl xchg (bad) scas repz enter mov sub sti (bad) push cmp lret icebp fldt or fstl mov mov mov into mov mov fucom jnp and jmp cmp fisub lahf sbb scas or mov movsb and xor (bad) popa inc add movzbl (bad) cmp add push push adc xchg jno imul push or test cld cmpsb call and mov inc loope adc mov ret ret pop jns push pop or pop and mov adc mov fs jmp std adc cs dec add shlb mov stc lds sbb test (bad) push sarl push add dec jo movsl push and add or push les mov leave not int3 jno outsl aaa shlb add jge xchg mov cs (bad) cli mov and cmpsb sub lret into mov in dec clc test aas or xor xor cmp jns xchg inc xchg out mov dec scas popf sub add push cltd inc outsb mov cmc rolb mov dec inc jmp fldt movsl jnp sub push enter imul xor mov xor movsb push push xor ret stc lods (bad) or das icebp adcb lret fsubr repnz inc daa inc adc test dec mov pop ret les lret lret pop adc dec pop pop mov in (bad) xor test mov push xor and mov lock daa push movsl cmpsl inc leave daa cmp stc les cmp ret xor aaa or sub js mov movsb (bad) rcl aad xchg pop adc xor cs mov jmp and inc push loopne cmp ds mov mov mov inc popa mov cmpsb mov and jge ret loop ret push mov repnz jne stc stc add rcl test cli lret scas xor sti rcl shr jmp xchg mov int3 push xchg dec mov (bad) lds and mov das push sub ss mov pop inc dec push sti and ja add lods cmp test pop pop add push push jmp out cmp clc and xchg inc push rcrl notb and mov out and fnstenv pushf fstp fbld or dec push ret lea lret adc mov cmpl or mov jecxz xchg (bad) flds jnp cwtl enter rcrl xchg (bad) pop add mov ss jb add in mov jmp (bad) jp jb xor imul and (bad) ds xor xchg xor repz cmp movsb push sub fildll mov pop and push je pop aad push pop icebp mov inc (bad) outsl mov shrl inc xchg out fmuls mov test sti and ljmp and pop ljmp and roll or adc adc lret ret movsl inc fxch lret inc xchg enter xchg movsl ljmp add jecxz mov and xor add cmpsl leave jge ljmp dec fwait mov (bad) cltd das or jmp mov stc add mov push sub repz aam sub mov mov mov pop sub cli int3 sub adc pushf sub ds ret cmc idivl dec xor out and sub je cltd dec jbe out and out xchg adc int3 mov pop movsb loope cs js movsb mov lock mov loop test xor xor or sub mov loope mov xor je imul mov inc xor mov push or sbb dec stc jecxz dec push jp fnop and fcmovnu adc mov sub lods mov push push sarl jae stos (bad) test (bad) pop or and ja lret mov xchg outsl pop and ds adc imul cmp dec mov in adc dec pop sti fs stos jmp inc xchg mov movsl and dec fcomps addl mulb icebp xlat lds xlat int3 leave cmp and mov xor cltd pusha xchg xchg add rclb mov sub adc push loopne test inc jmp mov jmp aam das cmp enter pop fs dec xor call sub mov mov aas (bad) das mov js fldl rol and mov and repnz push leave sbb pop movsb hlt dec jmp clc mov repnz xor jge ljmp pushf cli xchg leave mov aaa jmp pop add (bad) sub fiaddl xor pop add into mov leave cmc xchg scas popf repz adc cld aaa mov repnz pop into std pop daa ljmp mov pop lahf leave clc mov jbe imulb jnp adc scas fs inc test cli sti frndint aas int outsb out ret adc xor mov imulb fcoml fisttp adc xchg mov mov repz adc mov movsl push cmp out sub lock add dec push ljmp mov pop in mov sti push xor (bad) and sbb sub add inc or (bad) cwtl lret out lcall cmp ds push add out sarl insl jecxz test repz cmc sub mov and out xor popa cwtl sub jl mov rcrl enter out sub out mov sbb lea out cmp and sub data16 cltd inc int js hlt cltd mov ficom lret xlat mov ret jle or pop pop dec fs jmp cmp lods mov mov daa roll xchg rcll lds pop mov inc dec ljmp iret leave into ja push dec sub arpl jp mov or xor jge cmp out push pop mov sbb mov add cwtl and sub pusha icebp push mov shrl lods rorl pop mov dec js push idiv pop add sbb loop test nop pushf dec xor test pushf dec imul and xchg out xor adc jo mov lret icebp fs add lret sub iret mov jl push ret faddl sub subl adc jmp mov pop loop dec mov out sbb out jg or movsb movsb push jmp idivb push and xchg dec sbb or cld mov das mov ret in add cmp xchg jmp jl test sub mov or xor (bad) lds cli cwtl ss xchg inc jl mov (bad) jle (bad) xor popf push xlat push decl sbb (bad) mov out fistl fcompl cmp movzbl sub aad pop dec xlat or or aad or sub mov mov (bad) outsb adc push daa out aad das sub mov dec push out cmp inc add nop jg add int pop icebp ret jp mov movb sub test add test sub adc (bad) lret clc inc cmpsl push push mov icebp lret mov shrl cmp leave xchg lods int3 popf gs insl inc xchg sub or icebp inc and ret lods xchg cwtl xchg and inc sbb adc push and mov and fs pop sub fildll mov pop cs add test aad cli iret fld xor mov das and push lea or cmp push xor inc dec pop add leave dec ljmp (bad) or idivl imul adc inc and fisubl mov fs mov push repz mov cli hlt sub test dec daa mov (bad) jbe imul pop popf mov icebp jg ss rclb mov sub ss xchg ljmp jge es inc jp mov adc cmp ja out dec sahf push add sbb nop ds fdivs mov and loope xchg js mov dec sub int aaa cwtl pop jg mov into xchg jg jne ds dec daa and cli add or and insl jmp stos jg xor and or xchg xchg sar (bad) xchg fprem gs imul out test mov push fs mov mov push rclb pop out ror aaa or mov push dec cmp xlat adc popf jl push fistpll inc repz sti mov scas je out or xor pop je lds lods adc sub aam sub xor xor mov adc jae scas xlat sub and into nop mov xor sub cli xor sti pop mov mov sbb mov sub sub int3 xor cmpsb dec dec je xor dec repnz sbb es pop xor mov fstpt push out (bad) fs out enter cmp xchg add or (bad) stos push sbb js sahf push shrb cmp push outsb xor ret jne mov or (bad) in push mov (bad) outsb add jg vmovapd dec push cld mov sub scas dec test and or push mov lods (bad) mov lret ficom aaa push out or out adc sub rol das sti jle aad inc mov or fs lds pcmpgtw mov add add into mov cli sub (bad) jbe leave mov cmp or xor ljmp jg xor mov out pop out sahf in aas (bad) mov dec out clc test popf or push cli mov adc sub pushf adc gs icebp cmp mov jns mov xor roll je mov sub cmc cmp jo push mov cmp adc mov roll mov not sub sub or sub sbb xchg or idivl lret or sub sub mov and xor jo mov or into adc and nop fdivrl call sarb test out pop xor aad mov in arpl repnz outsl mov rcrb jge push xor dec inc shrb xchg das out pop shll out sub lods push loopne cmp icebp sbb or popf lcall mov xchg mov sbb mov test lock (bad) push aad in aaa les mov xchg lods into lret add xor pop pusha pop push xchg sbb mov shr pop inc addr16 xor xchg loopne fsubl das adc jo jp aam ret push push lods mov adc aam lea test jl xor int3 mov xor scas test push inc xor clc out and cmc push icebp out sub les xchg push sbb inc ljmp test mov stos push int3 insl dec jmp dec jno xor and dec call cli sub (bad) dec and pop pop rolb sbb add icebp push sub mov xchg mov mov add dec ret jmp aad dec mov lods push xor inc or sub stos (bad) jmp sbb sti adc ret sub loope sub bound (bad) push sub std lock loope sub push sub pop and daa xor aad (bad) (bad) xor mov into int cmp (bad) fsub cmp adc out hlt lahf jp xchg push jnp mov push cmp pop shl xchg dec and and mov mov jb sub push out lsl mov mov sub icebp or orl sub or pushf and add into or and movsl inc fwait sahf add xor mov sti pushf sti sub sub ljmp (bad) fs negl xor arpl repnz pushf sub and cmpsl into lret mov out mov pop mov pop loop mov jg out scas mov mov jp dec jp or sub mov mov pushf fist iret clc shll icebp test fistp push inc adc pop cmc cmp pop jae movsl cmp push mov adc sub xor ror sub int sbb test adc nop pop bound inc jmp mov xlat pushf in out iret (bad) dec push or ljmp jg clc leave xor fnstcw dec test es insl push xor xchg mov mov push adc mov sbb dec inc jnp pop div daa das or pop xchg arpl sti notb dec stos vpsubq aas cmp push fs xor fsubl fs lods lds pop repz xchg stos xor pop pop dec adc pause popa mov mov bound rorb outsb repz cli xor cmp xor or (bad) aad dec icebp lea pop dec clc clc xchg rclb add stc fisubl sub test mov les ret stc repnz cli sub push insb sbb scas jb cmp (bad) dec imul ret popf jnp mov xchg mov (bad) mov fdivrs lods (bad) xor and or cmp and (bad) mov dec and repz ret xchg jecxz dec aam scas sub stc add xchg call lahf hlt and in ds xchg sub mov pop (bad) xchg (bad) push pop jnp xchg mov test push dec addr16 scas mov pop ljmp stos jns test aas or mov pop stc int (bad) mov pop sbb dec ret cmpl mov fistp mov mov pop xchg js mov adc fiaddl pop adc rcll add fistl xor pop mov jb cs mov pop or shlb mov mov sarb sub ja fsubrl or lahf xchg daa xor cld mov push sahf je push push sub jg push jmp pop xor pushf out add hlt movsl leave pop jae sub repz arpl xor pop mov sti mov and push mov push ret je gs mov xor into int3 dec add andl jae es ret cli mov xor and xor dec int outsl cmpsb adc out sub outsb mov cli pushf aad lds xchg js sti lea mov dec call jnp mov mov push cmc sub xlat mov pop call sar int push jl cld and stc sub inc jge negl lds aaa icebp sub and incb or scas sti loope xlat out jbe imul mov push xor adc lods fistl jl pop pop sbb pop out das sti data16 notl dec loope lret outsl lods dec out pop and (bad) push fwait adc or out je mov lds (bad) ljmp in and (bad) jns mov sub mov lods pop xchg pop sar imul pop mov and mov cmc and pushf ret sub pop dec test imul iret das mov leave xor repz inc pop scas pushf jb std cmp (bad) (bad) mov or sub cmp pop call (bad) sub in outsb xchg pop (bad) (bad) sub pop dec sub inc mov sbbl and nop test mov sub jbe pushf aam pop test mov jmp jle jecxz inc idivb sti xchg shr mov xlat fnstcw pop pop das loop cmc xchg movsl cli pushl repnz push (bad) data16 sub repnz adc mov out insb cmc push cmp or (bad) outsb out nop inc test add add mov xor cld into pop mov adc sub and ror fisub and or loope lds cltd std in test (bad) jp or sub and or xor leave mov arpl xor sub fsubs mov scas scas cwtl xchg repz mov xchg mov xchg pop adc and lret xchg sti pushf sub xchg pop sbb pop mov add out loop xchg out adc mov pop xor sub sub sub dec xor mov jae sub jg scas jb mov es add xor xchg push clc lods test movsl std dec es and mov sar fcoml dec iret in das push pop lret xchg out fmulp push or pop in xor (bad) ja ret rorl repnz and dec fimul into flds out xchg rcll sub lret neg xor lds pop xabort mov mov fs sbb sub mov or xor mov fcompl mov fmull test imul shrl push xchg jle imul xchg mov ja xor mov jl movb cs test je mov pop and cmc out ret and mov (bad) stos pushf addl fistpll test cmpsb mov lret sbb loop fadds (bad) icebp (bad) lods (bad) mull adc out and sar rorb push pop pushf bound and dec mov mov sub or lock loop adc insl test add fwait and cmp roll push dec xor jb loope je out std mov es icebp adc sbb jl (bad) pop mov call das cmpsb push xchg shr jp adc mulb push sub sbb xchg in mov cmc xor xor jg pop lret mov ljmp dec cli xor mov out call scas mov cmpsl or push incl out outsl mov mov push and jg pushl pop jmp insb icebp add movsl sbb xchg jno push test fwait inc dec or and out mov nop jp add stc and test jmp mov push inc fnsave ljmp hlt mov imull idivb and mov mov mov shrb pop ret add gs std xor xchg dec and xor push mov or out frstor (bad) js jl pop movzbl das jl leave sub jno inc (bad) ljmp lea cmc addr16 shrb cs das flds test mov les (bad) scas test pop jnp mov aas inc or stc rolb pop jno push lods movsb fadd sub cmpsb mov call sbb test sub daa (bad) lret sub repnz popf imul mov push subb adc mov mov and sbbl adc aaa in cmp cmpsl jo daa imul mov jnp xchg or cmp xlat cltd cltd iret leave out outsb xor lret sub and lea aas test out mov add mov int test (bad) loop sar lea mov pop insb sbb inc ret lahf (bad) jo (bad) push xchg adc lea jg sahf lret imul inc (bad) ret movsb jecxz pop add cld inc out lahf in mov xchg imul imul mull cli xchg add leave cmp xor and bnd dec mov dec negb inc sub pop call and xor or lods jno jno cmpsl jne movsb pop (bad) push push jmp and push mov lea cltd xchg scas and cmpsl aad cmp cs dec and pop inc (bad) cmc ds mov loope adc sub lahf xor aas pop fadds (bad) adc pushf pop mov adc adc xlat out pop mov ret fldpi adc mov cmp into leave iret xlat fsts je das inc lods es xor push cmc dec mov ss js cmc sar shl dec leave xchg adc mov mov xlat pushf sub mov icebp stc lds sbb xchg stos ss add add xchg adc leave test adc sub adc mov pop push fucomi mov mov adc testl cli cmp sbb mov pop (bad) bound movsl push lcall pop movl and pop xchg mov icebp scas bound push push test mov lock mov insb dec jmp out inc mov and xor shl cmc out xor ljmp push movsl mov sub into mov jmp xchg scas jmp lds cs sarl out xchg mov jmp lcall pcmpeqw pusha outsb cmp jae inc xchg fistpll push mov dec sub repnz jb iret popf fidivrl (bad) dec mov pop sahf sub testl add cli gs es lahf out cmpsl fldcw adc inc daa xor sub (bad) stc and sti fcoml mov fsub mov js in xor rcrb ficom xor (bad) mov and sbb xor mov popf decb pop pushf cmp add lods test jmp mov sub and or sbb out pop mov jo pop cs cmp fldl and mov cmp and mov push or rcr cmpsl sbb cmp popa pop xchg lds and scas jmp dec xor xlat fcomps or sub cs mov pusha adc divb and movl dec idivb lds push out sub mov jne std push dec adc xor lret and (bad) rclb scas or lahf fistl pop add push xorb add mov mov pusha xor aaa pop adc sub sub add or mov lds out and and cmp aad popf std lds rcrl hlt lods adc cltd push push cmp cs lods leave loope and lret (bad) sti scas sbb ja mov test stos sub shll add pop push clc mov fs mov dec mov or into xor push out jnp cmp lock (bad) pop stos mov inc mov fs lcall mov add movb out cmp aas clc jbe ljmp sub push and mov mov sub nop xchg stos adc loope sub mov xchg jge insb gs pop ret imul jne fisttpll xchg sbb loop outsb mov mov mov (bad) jno fisub outsb inc rcrl imul mov fdivs jmp sub fcomip mov mov pushf xor mov mov jb pop bound push cwtl daa ret pop mov fstps cwtl aad pop pop inc add iret mov sub mov lret pop or adc pop mov test xlat add pop pop into dec je stos in call mov sbb int or pop mov lea adc inc and (bad) jge mov dec or fbstp bound jnp mov jp (bad) mov cmpsl adc add jno xchg (bad) mul dec mov sub lahf xchg inc mov inc push jmp push xlat insb cld std jp pop cmpsb pop xchg inc rorb xor lret jecxz inc mov stc sub adc inc dec out in adc divb repnz add and nop cmpxchg dec push (bad) popf test stc dec out xchg lahf sti push mov loope add xor and push lret sub imul push ljmp mov in (bad) lret stos jno das inc nop dec bound add (bad) int3 jmp push push cmpsb shll movsb shll push sub int3 inc leave xorl xchg (bad) jno sub outsb lea or mov roll jecxz sbb aam out jmp fdivrl and jb bnd add inc loopne jne mov ss push xchg xor lret les mov pop push fnsave daa push pop (bad) push pop jmp mov inc shrl xor sub mov sbb int3 rcrb mov mov das div push mov (bad) or orb push imul pushf imul test jae add adc mov hlt stos mov xchg int jle shrl jmp ret insb roll sub xor ja sub outsb and jecxz mov pop or mov cs or ja imul aam pop inc outsb add add xor adc dec pop inc loop mov notl push inc cmp dec sub jg lods icebp adc stc xor or push es sub mov jnp push and out mov xor bound mov adc mov popf fnstsw and or icebp add js daa xor jle les stos sub xor pop gs aaa inc add mov fist lret cmc xlat lods (bad) iret leave ret xor (bad) fist mov movsl (bad) xor or sub (bad) xchg push sti mov pop lds inc (bad) add dec cmc xchg out daa sub mov mulb cmpsb dec inc pop or lcall and inc jb sbb pop (bad) out sub stc add xor pop dec mov mov inc xor add mov add ss sub sub ja xlat shr icebp cs mov dec mov inc test cltd push (bad) (bad) gs mov mov inc test xchg jns leave (bad) (bad) aas add aas dec popa mul push xor repnz mov jge adc push orl push bound bound mov push mov xchg adc je (bad) and and fist test ret mov int3 dec fcomi rcrb clc push hlt bound repnz rolb sub add push xor mov lahf aam push adc ds sbb movsl out cmpsb push sub xchg jmp pop and add jne sub outsb xor (bad) les push mov push outsb sbb js icebp inc dec mov ret xchg jnp mov push xchg loopne aam fisttpl xor outsb adc insb cmp in aas lds xor dec cmp or cmc cmp or rcrl icebp daa xchg and fistp out imul (bad) fistpl push xchg adc sbbb out or mov sub mov jmp dec xchg scas jne test out cmpsb add mov cmpsl rcrb adc (bad) push lret test int add call les or (bad) xlat dec jp jmp jg stos not imul jle push idivl mov out fistl cmp das lods lods stc and out test lods jle repnz (bad) xchg dec sub nop clc add repnz ret mov xchg cs (bad) repz iret std out (bad) nop push or cmp iret sub out test mov xchg sub sub fstpl push xorb add or test add sub xlat (bad) xor test pop (bad) pop fs push push popf seta cli mov mov hlt daa cmp jge or xchg pop divb iret and fwait mov aad xchg out mov (bad) mov pop (bad) xchg jmp imul dec add sbb pop push das dec out mov pusha test inc sub dec out cltd mov je xchg pusha call imul imul xor jle aas cltd (bad) sti gs jbe adc sub mov sub out xor mov (bad) sub popf inc test cmp lret lret pop push (bad) pop cli test clc xor xchg loope and ss sbb pushf mov jle fs out adc notb mov push mov dec or in das ljmp leave xchg (bad) pop sarl dec inc xchg pushf in icebp sub xlat pusha jo jmp cmp movsb int3 or mov adc cwtl dec mov sub pop loope jg mov and jbe push sub dec mov push add aad lods xor not cli dec (bad) mov test hlt ja (bad) js nop pop repz and pop lcall add ret mov pop mov jbe cmpsl pop out arpl xor jnp mov lret adc mov or inc push mov xor dec shll adc das mov inc sbb or lret lock xchg xor xlat or lds fldcw cwtl mov lret mov sub mov mov cmpsl dec adc xor dec mov jb dec pop popf inc and dec out repz clc cld dec fldenv xor iret leave dec jge xchg movb scas ja adc cli adc inc divl xchg or shrl (bad) push js and add nop or loope or dec inc xor jl ret rcrl loop push stos sub notl je fs sti mov mov xchg jmp mov dec repz imul sub pop dec add cmpsl cmp (bad) jnp movsl std cmp loopne addr16 daa cmc jl in lods push cltd fs dec inc xchg push roll pop leave lods pop add (bad) dec pop repnz xchg and inc decl and das xlat xchg mov lret xor stos adc lds adc sbb pop mov push out rolb fnstsw cmp repz mov xchg into lret outsb inc pop loope,pt idivb dec or shlb mov fstps cmpsb jl add lahf mov mov jg sbb mov add xor and cli stc popa (bad) in test lret ljmp rcll cwtl jg mov lea das int popa es push sbb pop mov or cmovp mov fcmovu dec pop loopne adc mov jmp pop int3 push mov lahf fisub leave cmc lcall notb sbb adc ljmp fstpt outsl ret popf mov loopne inc or ja pop leave pop lea (bad) jge mov xchg push pop repnz mov stc push ret or add aam ret xchg jge adc dec mov pop ljmp popf and cli adc cmpsl outsb push roll adc mov (bad) xor imul sub (bad) fistpll dec out sbb shll int aas mov fist add push out loop xchg mov cmp mov incl dec nop xchg mov clc or (bad) xchg fisubrl add gs mov pop adc (bad) cmp ja cltd jo xchg dec adc scas ret mov xchg jp pop roll adc addr16 rorb ret xor cmp pop jg fimul and cmp dec std pop (bad) out gs adc sub ljmp xchg out popf mov repnz repnz xlat mov lock (bad) imul call mov jg push xor out sub cmp js and xor push sarl daa push int3 cltd popf pop mov or mov jp or cmp fdivl out jne adc pusha push dec adc dec xchg sub xor ljmp bnd lahf and test bound call or (bad) les repz mov bound pushl fs icebp divl mov sub ja xchg lea outsb cmpsl sub and push jmp rdmsr inc ret fdivrp cli pop stc pop imul imul cltd xor jne mov cs rolb push add aad add stos mov leave sub xchg sub xchg inc jle cmp hlt cmp es js shrl shll jb xlat shrl sub pop pushf fstps xchg mov xchg sti mov pop and mov loop adc and sub pop aad (bad) inc mov push and and cmp push dec push cwtl mov and decb lret cmpsb sbb out sub pop repnz std in lods inc adcl (bad) and rorl dec imul (bad) daa not in test mov xor test fs (bad) fimull or lahf lret test loope mov add push cltd rol sub pop mov cmc addr16 sub bound mov scas cltd imull hlt (bad) icebp xchg jle jo xchg into arpl in push mov inc or outsl xor mov test or jb sbb in loopne mov dec cmp cmp stos push mov adc sub lret rcl iretw mov scas xor jne xor sbb das cli sub aad (bad) mov loop inc mov or push push fidivl mov ds cmp pusha sub outsb push push add jp sub outsb dec dec ret scas pushf mov push pop mov sahf jge sbb inc std scas lds pop mov movzbl ds and add lcall lret cmp xor (bad) into pop push mov jmp lea mov mov fcomps mov fs inc push and push out bound dec sub (bad) leave in cld shll ljmp test jne or cmc mov divb pop inc ljmp (bad) mov and lret add mov pop sti push adc jnp add inc jmp into and push jp test dec add mov jle adc stos (bad) push cs (bad) inc jb fbstp push or out pop jae sub sbb sub mov jg jb (bad) std in and push mov lcall mov pop gs (bad) into xlat jge aas (bad) mov mov push fldl mov in and (bad) gs jmp fmuls sub rcl push sbb mov cmp mov jns xchg out mov adc leave pop das mov lock and mov mov cwtl dec fisub je dec shlb movsl adc mov xor mov jmp cmp jge loope jno into or pop cmpsb outsb jle sbb xchg loope bound lods scas (bad) scas or fstl lret pop jbe jb int3 adc subl or sub sar into stos sub cmp pop dec movsb cmp ds (bad) jnp xchg mov out fldlg2 stc pop insb add xchg scas sub leave (bad) push xchg xlat mov mov daa jne xchg cmpsl pop jnp pop aas mov (bad) sub shlb add xchg mov adc mov icebp add movsl popf dec rclb in (bad) xchg xchg jmp fbstp and cmp hlt and cmpsl push inc cld data16 leave call lret mov out mov dec xor adc (bad) or pop xor pop inc or insl dec rol stc jmp clc adc sahf xlat call ljmp mov xchg test pushf mov call aad xchg stos sub cs sub or xchg jl imul ljmp jbe daa inc or sahf and sbb push outsl mov push add mov dec cwtl dec into cld notb fdivs lds or jmp jp movsb cmpsb inc jge push mov adc outsl scas push test lret xchg add mov pusha test pop in push cltd nop repnz es push push in mov sbb fsubs add mov sub mov loopne enter cli xor out dec mov lods jle or scas mov sub xchg faddl mov pop (bad) jne mov inc pop add cmp in in mov mov bound test (bad) movsl pop stos cmpsl pop cmp jg cld or mov fbstp mov add mov mov movsb add jae out push adc add das popa pop adc (bad) ret call shlb pop loopne (bad) popf sbb movzbl sbb (bad) cwtl jle popf fnstsw push iret add popf push outsl test and pop pop (bad) cmp xlat movsb outsb mov and add imul gs (bad) inc add testb lds ret mov rcl fsub push xor add and mov jp out cmpsb arpl fist stc int sbb or cli mov xchg pop das inc jp lods jl (bad) call imul (bad) jecxz sub das or jns into (bad) bound mov (bad) xchg inc mov or (bad) pusha movsb icebp ljmp fucomip add imul lods jp leave and out ja and xchg icebp clc notb cld mov arpl inc mov divb adc pop fiaddl inc mov sub les pushf aam addl dec mov jbe lods into pop popf outsb arpl pop pop gs pushl pop jmp sub fldcw dec fadd ror push ljmp shr or dec cmp cmpsb stos in adc out dec mov and mov xchg cmp nop cmp mov or inc loopne inc in enter pop mov call lret dec ret mov jbe imul setge sbb mov sub push test (bad) pushf add insl pop push push ficom aaa pusha faddl divl xor rep adc into mov mov out and add sub xchg xor ret xchg xor push dec mov adc cmpsl cwtl dec fidiv pop fisttp movl into jg push pop or xchg lahf js dec out out popl loope ds mov fwait in dec dec push dec pushl xchg in cmp test leave cmp hlt imul cmp lea mov popf pop cmp pop pop push loope sbb adc add imul dec push sub aaa pop out inc loope add call mov mov add leave orb dec dec test outsl lret and (bad) cwtl cmp lods mov je out lods xor sbb cmp mov add popa fnstcw movsb dec aaa sub int push es jo xchg and xor arpl and lret pop in and (bad) jbe xor pop jle and ljmp xlat ret cmpsb sbb xchg lret sub adc scas int lods or pop lret mov aam clc push les aaa (bad) cmpsb orl leave pop in xchg repnz push in sbb mov pop xchg inc lock je cli xor decl lret mov xor mov cmpsl cmpsb mov pop inc or lock cmp out js (bad) into adc cs add xchg clc add sub and js (bad) out sub cmp (bad) dec icebp sub cmp sub adc loopne pop sbb jmp into pop jg dec pop mov lcall aaa das or sub pop out cli int3 cld jmp pop lock cmp inc pop xlat out dec icebp out dec fsts jno mov push jno xchg pop and stos hlt sahf ret jo loope adc mov cmp sub jmp dec sub pop arpl lea adc cmp inc or cmp and sahf rorb jecxz aad in mov rcl add aaa push vmovsldup mov ficom pop incb sbb (bad) mov ret push lcall pop ror inc cmp pop push push push pop push inc mov (bad) rorl or add les not in rorl jmp inc subb pop xor and push or mov rorb add push pop push sarb xor adc mulb int3 jp push jg jns inc push sub sub push mov dec cwtl cmpsl push pop imul mov jg mov aas add pop scas mov or adc xchg add add inc pop push mov not enter lock or jae jge rclb cmpsl jp mov cs pop mov sti jg xorb pop add dec pop enter les mov sbb outsl xchg xor pop or pop incl or mov add push push mov (bad) jae jle and pop add dec push mov jnp push outsl push pushl loop sbb test sub fsts pop je or or pop inc cmpsl add repnz pop jno adc jg aad mov mov (bad) jge push popf (bad) or cmp fldt dec (bad) pushl add push add push cmp inc jg icebp or xchg das cmp mov pop outsl sub (bad) lret mov orl add xlat lret shll and fisub add jl in lcall dec add dec push leave je xchg shr dec xor pop or imul dec imul dec jbe test cs dec mov xlat out pop sbb mov jb or mov push pop sub ret mov add popf (bad) sub pop pop mov push cmp ret sahf jae xor push xor or repnz hlt scas mov loope je ret dec mov dec sub fildl scas mov dec mov outsl das jl pop psubusw ret test arpl gs push je pop (bad) mov and cmp adc jecxz mov test icebp add lahf hlt xlat out adc xor sar scas data16 je jb cltd fs das jne scas lea jmp lret xchg adc outsb xor out sarl or mov das testl mov dec xor std pop dec ljmp cs ljmp inc cmp push or add loop mov jmp inc pop ret gs xor mov mulb popf arpl or dec sbb in rolb sbb popf dec clc dec fisubr (bad) icebp lret cmp dec inc daa out sub pop (bad) scas leave lahf sub sahf jmp idiv (bad) sarb jle notl call mov mov aaa mov mov push or in in (bad) jbe aad add pop (bad) insb sbb lea fist and jg and xor add pushf mov popf ret aam imul mov inc ljmp roll fidivr adc lret call (bad) div push sub lret arpl xchg pusha into xorb test cli in sbb sub mov sbb stos scas hlt sbb or (bad) divb push hlt clc mov aas je loopne clc and inc (bad) lods vmread cmpsb dec dec and es xchg fstpt cmp outsl pusha fsubrp pop fistl cmc dec or jle pop sub xchg cltd out sub xor xor adc mov sub push sub and or inc addr16 dec cmp adc sbb cmp (bad) stos fldcw and mov or push mov adc out fldenv addr16 cmp les idiv fmuls pminsw lods bound test call adc scas ret fisttp jg mov xlat addr16 lock or repnz mov cli push pop adc repnz shr sbb (bad) xor jecxz pop sub mov out sbb pop movsl xor lock lahf pop mov jnp push das mov dec mov pop or cmc inc adc or sub pop or mov repnz mov cld mov idivb push xchg lret je pop call push or or adc xor add into lahf dec test cli ss xchg jae mov icebp repz pop cmc insb cmpl jbe jmp call ljmp in pop mov idivb push sub popf jne sub add jl push leave loop shll sbb std icebp movsb inc mov mov adc or cmp or aam push in jns incb mov push jb call cmpsl dec in adc sbb sub test out lds sarb sbb or stos cmp push pop scas fnstenv mov popf xchg das out inc lods iret dec add xchg cld and mov lds fistp push ss es mov imul (bad) or lcall jnp or fsubs jmp and sub mov cmp clc cmp test push lods fs cmpsl pop stos xchg jnp scas sub icebp sub idivl ret das mov ret push cltd xchg and xor out pop and in sti lods or add add sub inc stos pop cld inc push add xchg dec mov out push pop (bad) out and or jb pop rol daa into ja pop xor fisub xchg clc rorl test jo in data16 ret lcall push (bad) push add inc rcl scas call rol cs movsl movsl lea sub xchg js test dec (bad) dec or mov (bad) divl cmpsb aaa adc cli fs pop leave stc lea lcall fstp cmp pop sti sub lods xchg shrb adc jno push sub xlat lret xchg jl clc ds (bad) out sub inc insb or push jnp stos xchg mov push add or cmpsl xchg out xchg pusha stc push popf adc sbb sti insb dec or sub (bad) push inc fimul xchg mov pop outsl lret notb leave faddl add (bad) push pop imul das push pop out mov mov clc xchg lds adc lods rorl das loopne mov xchg jg pop mov push pop jno sub or rcl xchg or stos aas fsubrl push sarl cmc pop popf pop push mov pop push (bad) add js pop (bad) mov inc pop sub insb and jae sbb lret movsl pop pop cmpsb nop gs out xchg mov call xchg nop out cwtl dec lahf adc (bad) jno (bad) mov hlt popf je push and pop xchg jae add or jp mov test and sub imul dec adc pop sub in sub test add std cmc rclb pop punpcklbw mulb sbb (bad) xor lahf retw cwtl out cmp mov ds mov xchg mov mov add fs xlat loop in ljmp pop ret sub ds call fldl xor cmpsb xorb adc lret into mov cld sbb and and in cltd push ret mov mov mov push cmp jmp jge dec (bad) in pop pop (bad) mov mov adc mov int3 xor daa or lock mov int xor mull mov sub fmuls inc sahf or or mov push cmp ficom ja ss mov roll cmp mov fdiv popf jno imul popf cltd scas loop xor cli ds xor or mov jmp mov xor and movb mov sbb rcrb mov repz icebp and cmp fstpl sub jns fs popa mov cmp pushf (bad) lret popf aad cmp mov dec sahf add mov (bad) inc ss dec jmp fs sbb popf cmp adc fsubl cmp in bnd clc jle (bad) push push cmp adc cmpsb loopne add test je sub cmpsb fs fnstenv xchg lock push stos ss cli fsin das cltd test scas jb sub jmp enter mov sub outsl sub (bad) imul xor je dec rorb repz inc sub in das out dec (bad) scas cmp or pushf xchg (bad) mov sahf es xchg scas mov loope stc jle cmp jge inc mov add addr16 mov mov and clc and sbb mov arpl insb imull sbb (bad) cmpsb nop (bad) cmp repz xor aam sub mov dec adc xor xor int das mov or sbb mov sahf xchg and add add push cmp (bad) push mov lret mov sbb push lret xchg cmp xor divb into fnstcw mov xchg xor push xchg inc jecxz mov mov push dec sbbl repz fldcw sub movl mov std ljmp jno xchg jmp lret push inc lods cmp push lcall add dec or adc add sub daa mov cs mov inc mov dec into cmc push movsb (bad) xchg push or mov dec jp dec dec dec out bound movsb and bnd scas sub pop xchg imull cmc sti xorl fdivs popf pushf fwait xchg jle pop jge movl add leave popf push push das repz rcll pop and bound add jg sbb fdiv ficoml pop mov nop faddl pop (bad) aaa inc (bad) (bad) in mov test jo in push jge or ljmp fstl subb jne xchg lock push loop fdiv popa ljmp cli lret push mov adc cli jge aas cmpl out sub xor leave and mov or sti verw mov pop lcall mov (bad) scas sub adc mov popf ja mov lret add jnp sti jecxz cs mov lret jg bound pop repz xchg in daa dec xchg fnsave jmp lret dec ljmp inc adc and shl sub sub lods std xchg call xchg out mov or test cmp cmp lods popf daa sbb cmpsl rcrl call mov mov cmp push mov out add (bad) jns xor (bad) (bad) push (bad) mov push xor not cmpsb sti test fisub bound aad sub jmp cmc pop movsb mov push push fcmovb sub jne das mov xchg stc jl dec lret std xor sbb push shrb lret jb ret in clc cltd and inc add and adcl in dec mov xchg add fidiv stc sarl mov mov sub aam pop push and enter pop and (bad) icebp sbb testb (bad) or xor xlat xor imul ret comiss sub daa cmp daa xchg adc and aad sub sbb push jg (bad) (bad) sub push movsl insb test pop mov outsb testl pusha pop sbb sub pop pushf fistp sub lahf pop xchg adc xchg outsl out (bad) push cmp pop stc popf xchg jmp xor xchg imul jae dec cmc inc shlb out pushf cs popf mov (bad) (bad) dec inc dec ret mov xchg sbb mov sbb adc xor mov mov pusha mov xor xchg (bad) cmp lods rol shrl divl xlat lds dec out cli lret lock mov wbinvd dec mov bound flds pop imul enter std mov mov jge fldl and and lret xchg (bad) xlat dec mov dec xor scas int cmp dec mov sbb cmpsl mov imul xchg fnstenv jmp shr out pop les push lret xchg sbb ljmp (bad) popf rcrb mov loope jb mov outsb cld mov (bad) ffree xchg call or jne mov xchg or xor xchg mul sub mov mov (bad) rcl and in sub xor in and push jmp inc xlat inc inc das js xchg popa dec andb shr pop dec mov mov bound std repz pop sub jno lods frstor mov bound out dec std inc sbb push loop jge loope sub dec cmp out mov pop scas cmp fs std pop (bad) cmc jbe inc mov xor push xorl mov movsb (bad) call pop nop movsl dec arpl mov push pushf push pushf push daa fimul and fwait adc or out push cld xchg jge dec mov ja ficomp jne xchg push mov jnp mov pop mov ret cwtl lahf call in jp loopne addr16 pop xchg xchg push pop or add adc subps int add fiaddl add fimul clc mov lret ja pop push scas lcall scas cmp idivl sub sub sbb pop adc add jp and mov jmp push out outsb mov subl data16 lcall aad out (bad) jo sbb lcall repz sub jns idiv cmp cwtl ja nop dec xor jl scas repnz sahf in and cmc loopne test in mov push icebp mov adc adc xchg cmpsl pushf imul mov and mov add imul inc add mov cmpsb mov mov lcall ret out gs hlt sub bound add mov xchg cs test mov xor mov aas add out add dec stc movnti (bad) push fimull mov xor mov jle leave inc xor sub xchg loopne fisubrl pop std mov pop roll sahf adc mov push jge xchg mov mov sti push lock or or push mov add pop das cmp in and stos out pop push mov jne lock add fist xchg xor or loope sub les cmp xchg popl es jne and ds rcll aas mov out sub xor xor jg (bad) jmp lods orl adc xchg fnsave ret pop imul xchg sbb loop xor sti cwtl pminsw jmp leave xor or fnstcw or cmp mov dec sub mov (bad) mov mov popf sahf movsl xlat xor call sub add mov add daa sub fcoml je mov mov push xor xchg fdivr inc lret jno aas push scas sub inc pop adc mov jg nop mov leave mov push and mov sub iret and adc mov jg mov adc ja hlt stc jb aaa sub lahf cli addr16 ja in ljmp cmp nop pop out add xchg jl add adc pop loop xchg stos xchg fs mov push gs cmp decb idivl addr16 mov mov xor out jecxz sub stc sub mov add cwtl sub dec sbbb inc rclb cmp cmpsl add dec cmp cmp popa mov mov jae ficom xchg jmp hlt adc push lahf push add mov pop stc fimul push sub cwtl add and cmpsb inc inc mov push inc xchg add (bad) cmc mov (bad) xchg imul sub popf fnop pop adc rcrl adc (bad) or ds (bad) clc jge mov jb xchg jmp adc or icebp xor notl divb pop and and add and out push jmp sub mov in jnp scas dec call lret test leave fistpll adc div sti dec mov or adc shrb push pop adc (bad) xchg jbe push or and es mov lds test pusha add xchg push xchg mov (bad) addl mov ret sub adc mov test repz or ljmp sti into mov mov mov xlat int3 out mov push mov (bad) and mov and fwait dec dec mov mov xchg call mov imul pop ljmp pop xchg jno inc push sub xor xor mov inc sbbl push and ret and sub inc (bad) lcall out in xor pop sub sbb jp in sbb and clc aas mov lock mov inc or jmp leave xchg mov clc or and insb jns xor mov bound push jbe or jge cli cld push push or jl push and add popf jge mov mov and mov mov (bad) hlt pop mov sbb fldcw push jbe xor cltd mov jecxz fisubrl in out in mov sarb stos sub sub add scas mov push mov mov or xchg fwait mov sahf push jge adc jbe mov push mov mov xlat mov sub (bad) cs loopne mov dec out call push jg or pop adc (bad) dec icebp xchg cmp push dec shrl and sti or inc bound pop (bad) mov cltd je das aam pop data16 mov dec movsb sbb and in cmpsl leave or cmp xor ds mov out xchg cmp test mov icebp clc loope mov popf clc push out (bad) adc xchg xor mov jno lods loop pop xchg inc movsl cli movsl ffreep lret mov jne pop pop sub mov aaa call adc sub sbb xchg pop addr16 fiaddl imul lahf (bad) sub dec (bad) icebp iret jle or sarb (bad) (bad) fldcw push add pop ljmp test mov mov int ds mov add adc dec adc mov std xchg stc or or dec jmp and jge rclb pop xor lea cwtl pusha pushl das sub fimul into dec out fisttp daa dec mov cmp mov adc scas loop rol mov inc jmp adc sbb adc loope mov mov popf push xlat xchg out inc aas rep daa leave cmc sub mov rcll sbb gs call ds or adc cmp (bad) test ja jae pop stos sub daa push jle insb test jmp mov or addr16 pop mov inc inc xor imul daa jne insb pop (bad) xor add popa leave sub loope,pn add out pop imul push insl mov (bad) pushf or inc pop aam scas repnz mov inc add popf jg jl in das rcll sub mov andl jmp mov aad lds inc and inc jg mov mov scas bnd es sbb cmpsl subl or cld stos jmp dec fimul daa dec ret lret and jmp jecxz (bad) push mov sub add fidivrl jge lret or inc rcrb xchg sbb jno push sbb loope (bad) push ret out (bad) mov cmp dec (bad) pop outsb sub or xor cmp iret scas sub out adc nop jno push push jmp or push add (bad) inc cmp fisubr sti dec dec ret jnp mov push rcrl mov enter and xorl xchg push sarb loop sub das je stos push ja mov mov adc (bad) (bad) hlt aas clc xor xor in mov push cmpsl hlt xchg imul mov pop adc or clc daa sub mov sahf imul fwait ss fisubl mov pop fistp mov in cltd jo xor mov or mov scas mov and stc inc and imul stos aaa jae or pop mov sub jg mov and daa sarl inc shll push xor stc (bad) dec loope es push pop fistp hlt lret std adc mov call mov popa mov fistpll (bad) pop adc sub push xor push mov mov mov daa mov inc jno inc add xor in mov xchg sar cmovns cmpsb mov clc sub (bad) in push (bad) jmp dec out and mov xchg sub icebp cmp ja ds test xor dec inc lahf loop std jno repnz xchg aad out xor neg and out fsubl loope push (bad) xor iret or pushf leave out lahf push lods dec xchg repnz into xor jnp sub scas sub dec test pop sub cmp mov (bad) hlt or xor jbe cmpsl and sub lret sbb add pop sub scas or and je lret pop lret mov test mov cli sub jns xor cmc sbb jnp add mov sbb out mov mov mov aam sub inc jecxz loope mov cmp xchg add jmp inc (bad) das jg add or mov stos or daa nop xor pusha jne ss loope std in lret sub add mov leave pop dec rcrl sub (bad) or mov mov add or stos ret js mov pop xor in fisubrl les push inc and sub cmp pop lret mov mov push mov mov mov add or mov call lock push push paddusw jne pop cmpsl jo lahf xchg mov ja jo jnp lods (bad) xchg scas aam push out inc mov dec les aad mov inc inc out sbb fcoml cmp xchg jmp outsb repnz call add push jnp stc jle (bad) xchg fdivrs pop gs jp mov ficomp repz pop add cld out pop pop dec les xor pop xchg popa inc call add (bad) ljmp push or mov enter inc xor pop fstps dec (bad) xchg inc into mov mov repz shl imul dec pop sub imul data16 xchg mov and std inc xchg stos loop shr out dec sti bound sub clc loop mov lods dec ret sub jecxz test add and (bad) cld addr16 mul (bad) dec leave xor mov pop ss es daa shlb sub mov dec dec or and (bad) out adc add jge fistpl popa hlt mov xor outsl in sub in pushf popf negl fs (bad) mul lret in (bad) push mov sub jg cld mov jns cmp leave push insb sub negb repnz icebp fdivs adc or lods decb fsts jge cltd mov repnz pop push (bad) adc cmpsl dec xor sub das and lock and add mov and xchg fsts rcl sub xchg adc jp or pop push movsl pop dec (bad) fldl pop repnz push cld cwtl cmp mov pop fnstsw je aas xchg xor sub mov mov outsl aam out cld xchg mov mov pop mov or call add sub in jnp call pop mov lahf (bad) mov bound xor les test stos divl dec mov push and insl scas or mov fstl sub leave stc push iret jno inc xor jne pop jmp push call adc pushf scas ja aaa ret lods pop push cmp adc test leave or mov jmp outsb test (bad) push xor push ljmp mov es sub daa push lock add mov scas mov mov add mov fidivrl add and mov sahf divl das into mov shrl sub xchg push call mov push push mov ja pop pop in repnz xchg sub sub call dec inc adcb pop fsubrl in inc (bad) fbstp add pop insb cld sub insl movsb add dec sti jbe loope jg hlt aaa or mov pop out pop clc sti xor je push push push outsl pop mov arpl shl pop jbe hlt ffree or addr16 sbb popa inc push jge mov jle push add das add mov test mov cmpl mov imull or jl inc iret std inc xchg add xor insl adcb dec mov xchg stc sahf or mov sahf jmp sbb inc orl pusha xadd add cmpl add pop mov sbb into mov mov call jle push add push mov xchg mov add ficompl cwtl sbb out add jecxz testl push dec mov cld mov add mov (bad) xor loop push inc mov incb and pop mov insl lock xor jecxz xor or or icebp pop dec push lods or out repnz fisubr jo and rcr mov sub leave push stc pop sbb icebp mov sub cli (bad) shll push jecxz ret mov sub mov or pusha js das cld adc and les ficomp pop xor and adc xlat cld xchg shlb repz push xchg sbb pop xchg mov dec frstor xor inc xor lods mov xor or mov fidivl movsb sti (bad) push out cmc sbb pop loop sub mov mov lahf or pop xchg in loop push push cmp and test scas lret shll mov ljmp imul push inc or xchg stc pop (bad) es ja sub pop notl mov mov sub adc pop loope sub sarl loop mov shrl adc pop inc sbb lods sub pusha push or (bad) adc call lret mov add data16 ljmp xor clc push je imul popf xor in psrlq sub xchg jmp pop add add xlat loope out mov dec test dec cli sub xor xor pop xor out repnz mov imul xor ret jne sbb push je shr cmp dec into roll pop cmpsb push mov dec ja ret sub repz xlat cmp adc or iret inc push sub hlt leave stc jle cmp push adc pop mov or mov push insl xchg mov sbb pop jge or repz cmp mov ret xor sub xchg or lret pop add lret inc loope push adc xor and pop sti (bad) mov loop mov iret cld andl sub xlat dec mov (bad) mov js ret lods in lret loop rcrl repnz (bad) (bad) mov cli into ds mov cli sub (bad) stos jo out sub xchg pop inc pop ja pop push xor mov rclb out mov js mov (bad) fucomp mov sahf inc or ja xchg and or xor lock shll inc clc or mov mov mov (bad) jns mov fisttp or jnp fcmovnbe loope outsl inc out sar mov das out pop lahf jno mov mov daa idivb xor xchg xchg movsl leave inc jnp dec sbb imulb scas sub bound scas sbb xchg leave in push xlat jmp push xchg xor inc push xchg jge add jmp sub and call in daa ljmp and sub psllw push je jl sub (bad) in hlt xchg (bad) gs icebp lock (bad) push push sarl fwait dec fdivrs jmp loope jle leave test or data16 pop push notb dec fistpll mov es jne mov shrl dec (bad) mov lock subb sbb mov sub fcmovbe daa ljmp fimull jb xor lods push pop push ret and sub add imull pop ds stc addb (bad) sub iret mov push insb loop xchg int sub ror mov push mov movsb das or repz mov pop lock and dec mov sbb add lea movsl mov mov aam into aas sub imul jmp or cmp xor sub scas cmpsl mov daa xor jg xor sub ljmp loopne add or decb sub mov scas sub lods mov popa add lock dec cli pop jbe repz mov call adc lods and adc sbb or ret add (bad) movsl stos lea daa push inc sti push mov daa lds push lods adc mov cmp test loop movsl das out and clc call mov insb pop pushf test and gs iret cmp leave mov repnz mov mov idivl xor andl ss pop cwtl dec sbb es pop in push mov jle mov pop ffree sub flds in pop add xor fs lds mov sub pop xchg push add sub pop mov jecxz icebp xchg test mov push push add mov imul cld add adc mov pop test hlt and rcrl mov cmp test push in int3 adc jmp mov mov inc or test iret jg test test in or shll push and or jle and inc scas push rol mov jnp push push pop pop neg add js fwait jbe jge int3 rolb push dec and and call imul mov lahf out mov add push inc inc mov sbb xor or dec push cld mov adc clc pop xor cmp call loope insl adc push sub or mov mov pusha ds inc int mov add daa outsb fadds add lds xchg add push addl pop mov push repnz mov (bad) dec jge add mov sbb add adc jmp int3 out lret pop pop lahf inc mov xchg xor jecxz mov inc and cltd fmull push flds jecxz add push add out aas add mov mov pusha jmp jmp pop ss jmp push pop push mov and ror sbb popa cmp decb jp negb mov inc cmp mov lcall push jbe jb int inc cli sub mov pop (bad) jmp push (bad) cltd popf cmp pushf mov pop mov adc and mov jecxz mov xor xchg xor and repz fsts push outsb dec (bad) jnp out cld pop adc and movsb loop sub jmp mov (bad) mov js pop (bad) mov fist xor jecxz jle push push pop insb (bad) fs das mov add add mov mov (bad) fcoml jecxz xchg pop sub jecxz dec outsl xchg gs sub mov mov mov xchg iret and (bad) jae xchg pop (bad) repz mov rcrl mov push dec mov jl fs cmp mov data16 adc push out repnz jecxz pop leave (bad) cmp je mov mov adc pushf xor sbb leave ja mov out mov sub jae movsl (bad) and movsl fbld xor mov adc ret xor out sub leave lock cmp sar push push mov ret mov pop inc sahf and mov add xlat inc jb mov (bad) jne jae push push pop jbe inc and ja movsb adc mov mov mov adc call mov adc into sti cwtl decl sbb mov jle lods xchg add mov mov push cld adc das sti imul push add inc loopne out dec (bad) clc mov or push mov outsb inc fcomps (bad) pop lock push jge mov sub stos xlat orb lock xchg mov push jecxz repz jg fneni(8087 or ja mov pop out add (bad) push and mov cs call add loope int cld neg mov monitor pop push jnp cld and pop rcll and shr or sub adc ja mov push mov imul pop xor ljmp shr push mov push add xor negl xchg push out and mov idivl adc add into aad lret orb pop sub es ljmp push jo push bound fimul sbb inc dec scas loop imull adc or cmpsb ljmp imull or pop mov cli push in (bad) testb pop push push lret pop xor sbb push mov rcll std add outsb sub add push push push mov cmp ja dec add (bad) jmp les dec dec add jg push pop inc cmpsl xchg loope push dec movsb repnz or jo pop outsl dec add ret (bad) mov dec nop add mov mov push mov jns insb push pop or faddl sti (bad) enter mov lock add add popa adc and scas (bad) lods and dec cmp out sbb mov mov pop mov popa sub push cmp xor mov or jne or pop jp (bad) jo dec jmp daa xor repnz insb mov es and pop dec shrl xchg out scas mov je in out cmc xchg xor loope fs repz adc or jmp dec pop scas sub pop rorb jb push shrb push add add int inc stos mov (bad) pushl int jnp xor fidivrl xor loop and ror adc and xor mov (bad) ja push pop sub push add sbb test cmp movsl mov mov or xor sub daa pop lds icebp cmpsl sub fstpl xor or sub fucomp pop insb jp lock fdivp mov and aas daa shll sti int aad push push mov sub (bad) mov outsb leave dec stos dec (bad) lea test ret xchg out and incl pop movsb sbb or mov mov ja or mov or cmp dec lods pop mov mov push jl dec cld jno push xor (bad) mov xor popf icebp leave dec cld gs add je fcmovu repz push adc pop pop in enter adc cltd cmp inc mov mov outsb push scas popa stos sub cld cld outsb jmp iret or add lahf xchg push stos adc in sbb inc add jp adc ret imul lds jo mov xor out cld cmp and cmp inc imul mov data16 (bad) or test xor lcall jge pop popf data16 shlb add mov inc adc repz imul mov mov les mov or repz push out adc add rolb mov das jno movb (bad) sub rcrb adc add cmpsb ljmp xlat test cmp adc cld mov adc icebp sub cmpsl (bad) fldcw out jge and (bad) scas sub mov sbb faddl in clc daa xchg call fs das in int xchg push fcoml sub mov mov sahf ficoml fnstenv iret daa jne pop jle fcomps repnz sahf scas in pop sub jge (bad) push loopne and test ss mov in loopne cmp (bad) xchg hlt fwait lret jg in test fisubr xlat adc xchg mov mov movsl mov cmp mov imulb (bad) int loop mov jl imul jmp add loop ret sbb jge test pop pushf mov gs adcb (bad) out mov sub fisttp push jne adc out mov fadds (bad) pop add dec out ret jl imul xchg adc cmp out pop xor (bad) cmc inc and or lds mov mov stos in pop mov mov dec inc ror dec into lods mov cli icebp les mov stos push lcall adc icebp scas xor hlt idivl jmp dec mov dec sbb xlat sahf repnz jbe dec scas xor sub rclb add mov xor xchg xchg ficoml pop xchg loop dec mov push pop xor fdiv sbb sbb lret adc stos std adc cs jp jecxz lock mov push sbb and xor std push test sbb scas das pop xchg pushf jl mov push add loop mov fstl dec rclb mov aad mov dec pop add push sti jbe xchg daa bound (bad) lods fneni(8087 sub cltd (bad) arpl lret sub mov and dec inc xor jmp outsb test sub add in xlat repz cld inc jmp and dec jno cmpsl pop add mov addr16 cli inc pop push or sbb push sub leave std je out sub sub shlb jl insb mov xor jae gs cmpsb out movsl jg pop or xor insl imul sub (bad) cmp (bad) xchg std inc iret out pop xchg stos cltd fisub jnp xor adc test lods cmp pushl xlat fs movsb xchg rorl dec outsb sbb jb ss cs out adc clc cld cmp (bad) and imul out xor dec bound pop mov push jle mov lds enter sub xor (bad) in sub mov add jnp mov add cmp push xchg mov cmpsl push enter ss xchg inc xchg and test call cmc inc add fcoms popf gs add push loope push sbb sbb gs mov cli (bad) call aaa mov or je repnz lret xor jnp lods adc mov add or icebp icebp dec sahf xor hlt xchg out add mov cmp jmp lret cmp xor lret xor push inc adc repnz pushf in add mov dec sub dec call loopne les mov and sbb or lret mov or pushf inc pusha jecxz cmp ret aad orb ds jno xor pop jg (bad) xor mov and call lea ds mov mov lcall add movsb lret rcrb xchg in cmpsb lahf out push jmp pop out lret daa notl (bad) cmp fbstp lock mov or (bad) aam popa adc cmp fadds cmpb out jno and jle jno cmp pushf (bad) outsl mov adc xor add dec (bad) out push add mov lret std adc mov shl mov cs mov int3 data16 jae or fisubr shlb stc jge or sub add cwtl sbb (bad) push xlat or mov imul push gs clc mov mov aad jg gs or xlat pop add cmc push push mov insb cmpsb mov add push bound popf pop pop sub xchg cwtl imul cltd push outsl mov sahf repz fcompl pop jmp mov pop xchg fist push pop xor xchg xchg aad loopne add daa into fsubrp pop repnz lret dec cli stos popf out lcall pop loope jne cli outsl or (bad) sbb sub cmp mulb jns dec fs add rorb mov cmpsb movsb and xchg sub xor int3 out stos mov leave add and shrl dec out dec and xlat and cwtl ret jns dec pop xchg and mov xor sub push (bad) and addr16 mov jmp fs out mov pop shrb aam pop lock je ret xor xchg jb (bad) mov jno popw push or negb les enter in or add push (bad) pop sbb sub xor push rcrl clc mov xor mov lock dec movsb or fimull rol push cwtl mov ret mov (bad) mov mov adc add ror int cmpsl sub mov jp (bad) mov pop clc xchg pusha adc (bad) ljmp sbb fistpll test fstps stc cli push in leave mov rol arpl flds aam int das out cmp js aam dec int outsb mov mov sub jmp out out cmp outsb sahf ljmp dec imul icebp add sub pushf out sarb adc cmp mov cmp negl sbb std adc dec add iret xchg ja sub or out (bad) mov pop scas jecxz pop rclb mov lds es jle jo mov push cmpsl lret or pop mov jmp lahf add loop mov repnz dec xor add cli imul jne cli pushf sbb adc sub adc decb sub ret xor les inc dec and xchg jne lds or (bad) popa adc lock (bad) xor xor mov xlat insl into lsl lret ljmp je jb xchg sbb scas xor movsl repz repz push repnz add and mov pop add (bad) add nop sub and inc mov mov icebp or and out add mov or testl push (bad) mov popa add sbb (bad) popf ficom jecxz ret dec aas cli cmovns mov lahf adc (bad) add leave shrl into xchg xor add cmp out sbb and jle sub into add ret jmp jle push pop inc mov out sbb incb cmpsl push inc ds jae sub and bound adcl mov xchg je mov int jge jge rcll loope cmp sub movsb mov dec mov repz or testl mov out jbe (bad) frstor stos outsw and push and lock lds xchg (bad) stos cmp xlat or sub lods jbe cmp notb imul (bad) add ret mov aad sbb (bad) pushf enter or and ficoml push sub incb push iret dec and mov or sub movsb sub fldcw adc (bad) xor or sub stos mov cwtl xlat mov lahf pop jecxz add movsl dec (bad) xor add std push popf test adc cmp or (bad) sub popf adc dec out mov or pop mov iret incl (bad) lret pusha sub push daa xor dec xor call cwtl js negb ret add push arpl popa dec mov stos rclb cmp add or stos lcall mov mov push rolb xchg outsb sbb pop sbb add sub cli stc add js inc xor outsb (bad) push out sub jb ret aad mov stos mov add repz add aam adc mov mov mov daa sbb cmpsl fist (bad) xor lcall jg mov stos lret sub lret push lahf dec mov dec or and xlat jns test idivb add or out add sahf (bad) sub (bad) xor scas lea push pop push repz (bad) and pop mov (bad) add cmp or add cmp push fcomps subb outsb adc loopne sub lret add xchg mov sub mov mov dec lret xor sub mov pop (bad) daa pop nop push ret out mov bound addl adc xor cld in leave ret addr16 notl sub add leave sub dec clc gs bound jmp push or mov les loopne cmp sub sub sub iret xor push fcmovb ret push je pop sub (bad) popf pop add lods or push xchg insb test xlat and fisub xor or fild dec xlat std jecxz or call xchg enter aam int aas lods dec movsl sbb and jge dec out jmp mov jecxz ret and repz imulb pop movsl add mov dec mov (bad) cmp xor lea adc pop or or pusha hlt jecxz (bad) or aad or aad jmp mov jp inc sub subl sub mov scas das aaa jle test movsl jg jle add inc xor pop or dec out jb (bad) notb out mov roll outsl jmp icebp mov mov int jle inc adc sbb int3 adc rolb lock stos mov pop add pop xor add sub lea insl mov cwtl sbb lahf jae scas ret (bad) cmpsl fisubr add aam out jecxz and in fistl lds mov (bad) icebp mov mov add call (bad) cmc add bound icebp inc ljmp repnz aam lds enter xor xor in loopne (bad) jne jb lret add lahf xor out sub jmp sub mov mov and and pop lret jmp shrb stos pop cmp in mov out mov movsl leave mov jl clc mov dec sub mov adc and arpl and inc lret push int3 xlat mov or xlat xchg sbb or push add and neg adc ljmp fcomps adc lret decl (bad) dec dec test cmp jbe and pop icebp jb cmpsl insl or and sbb roll loopne push adc mov aas push (bad) icebp in jnp push dec jmp jae mov ret icebp es sub rcl add jmp and inc mov sub sti fidivl xchg cli xor cld shll jp shl sbb sbb out pop std jp dec pushl mov sub push add dec enter pop es out pop inc movsb stos pop imul stos add pop pop nop test add push popf loopne cmpsl (bad) xor mov jne xchg inc xchg xor outsl inc add repz movsl insl add push mov ljmp mov pop xchg jg jg inc push lahf or outsl or ja and movsl push in popf cmp or adc mov lahf lock leave lods add mov mov jp dec pop lret inc xor sbb out mov aaa xchg ds push pop sub into jge mov adc jg dec int3 fs xor xor push or pop jne and mov fnstcw cmp adc or pop xor cwtl daa jns jmp (bad) push jbe adc push add bound cld decl or pop mov paddd dec push pop xchg int insl add jne mov rclb mov add pop jbe sbb mov cld jae cmp enter pop add cli xor mov xchg adcl incb and mov ret imul pushf mov xchg neg or sub jp,pt sbb stos xor cmp add mov push (bad) add mov test pop mov inc mov cmp dec arpl mov cmpsl dec pop fwait in shlb mov setg imull pop mov add fidivrl rcrl mov jbe into arpl or or pop aam push cmp adc fstpt sub popf jne leave fildll test jne xchg xor cmp cmpsl push and or push test dec jb lahf inc aam and jle fsubrp lahf inc mov cmp fistl out pop push sbb jmp sbb clc sub add lcall fildl and mov push mov imul popf or and (bad) pop jmp pop stos sub sbb xor fisub dec cmp lret cli adc sub cmp jo mov push dec dec push sub jns sar push bound aad or or lods mov in or xchg push sbb inc into daa testb sub dec test xlat and in pop leave or sub imul pop sbb pop cmp jne lods jp ljmp cli fcoms loopne inc adc loope addr16 nop aaa xor mov push adc mov scas sbb bnd incl sbb jp jp push ds dec (bad) and jecxz movsb (bad) imul into or das pop sti inc ss xchg dec (bad) lret inc out cmp mov mull pop add jmp mov jp out xchg fadd ljmp pop fs out std and ret into mov mov imull mov pop stc aad clc sub mov test movsb mov sbb pop xchg (bad) scas arpl icebp mov push rcr roll negb pop dec jg jecxz sbb das lret and pop and push bound call or leave cmpsl cmp and dec pop adc pop je push push inc jns and out mov (bad) sub and add cmp jmp cltd add pop dec mov jecxz (bad) xor sub sub enter xor sub cmp jg and out mov and fucompp arpl dec outsb sub adc outsl lods scas leave or bound into mov (bad) stos cmpsl pop push out mov in sub push sbb add xor and mov and jmp stos xchg outsl push call popa loope pushf cmpsl xor jae and and add data16 xor lods adc pop xchg stc les inc out add iret mov les or xor cmp or or test out lret xor out jle nop xor repnz add repnz mov jle or jg ret xor ljmp inc xchg out inc and adc repz mov xlat dec cmp movsb test sbb xor push inc daa lods push (bad) mov jecxz,pt sub mov or push and push dec xchg (bad) cmp pop xchg dec xchg nop cmp xchg jmp sbb cmp jnp aam gs test sbb pop mov daa or add cld xchg jmp test cmc ss push mov xchg imul push inc mov mov add or mov cmpsl pop jg pop addr16 repz or into mov xchg or sub scas fisttpll fadd es sub mov pop mov push roll cmpsb jp pop (bad) mov sbb out pop jno and dec xor repnz mov sub and loope into adc (bad) fwait jb and xor (bad) test leave lret sbb shl add inc cli push mov imul sbb xor jne ja sub mov add add icebp xor movsb adc lret xor out add cli fldl or cs jle and add pop dec jmp adcb mov pop not xor cmp sub mov cltd loopne fild or xchg incb mov test dec (bad) and push mov (bad) mov pop and and push mov mov fwait or jg repnz lahf movsb mov inc push fisubr scas mov and popa ss jmp mov daa sub pop sub ror out pop stc in fadds or into (bad) in push mov lds cli and and jmp or fsts push pop aam lret push xor cmp test mov mov jmp (bad) sub and jae mov mov lcall in pop ret sbb sub cmp repz fwait add xor push pop fcoml pop pop nop lds movzwl fldl mov push out lods sub xchg mov inc inc add adc cltd sub jmp inc jbe fadd xor sbb pop (bad) fist sub mov push out sub mov data16 loop fdivrl dec das and push jl mov out repnz jmp push jne scas dec adc inc subl xor jg pop ljmp shr adc and lret pop pop (bad) lea mov cli (bad) mov pop iret fst adc or push pop push pop jg dec lods pop lods inc xor ljmp dec scas and mov xor lds xor mov out and pop pop out add sub xor cmp repz cmp add cmp xor in sub daa fstpl (bad) jl adc mov sub push add or or std dec sub dec sti lods enter jmp xchg pop and fcoml pop and jg pop add fmul (bad) lock popa xor and sub push test jne lods fsub xchg lock or loope imul icebp std fisttpl out call dec dec push ljmp (bad) test lcall sbb mov jmp pop xchg iret testb cmc shll add mov sar je mov mov mov daa or icebp mov and not and cwtl cmp inc aad xchg daa aad xor inc and adc scas aam (bad) fdivl mov jmp adc mov or in imul mov js push test cmp test add xchg daa pushl inc in popf pop test xchg call dec addl push xor fsubl loop pop out xor mov jmp popf fnstsw or mov mov cltd (bad) sub cmp cli notb add and scas data16 pop ljmp repnz test (bad) popa jle add fimull jmp add (bad) cmpsl (bad) push mov push ficom lret or xlat test out popf (bad) push dec push in and cmpsb mov dec sarl bnd rcrb mov into sti add push into sti xchg inc mov pop xchg gs xchg sub mov inc pop dec icebp xor out cmp sub enter stos sub sub mov data16 in jnp pop jmp and or sub or jp lcall or (bad) cmp mov leave pop test out mov mov sub mov pop and adc jmp ficom xchg stc and pop dec mov loope les (bad) leave pop jle push lret jge xchg mov (bad) sub add imul pop and push aad in fs pop mov (bad) xchg jmp mov cmp mov gs ljmp and dec mov mov (bad) aaa loope stc sub (bad) sbb das sub xchg (bad) lods dec leave mov adcb sub ret jbe lret jbe fs mov push adc lret push aas mov in push or pushw xchg xchg adc cmpsb jp add or out and jbe sbb jbe ret mov sub jne mov out lahf rcll notb mov push dec nop and mov mov jbe lods jns push push test test mov stos mov sbb add push xchg pop sbb mov stos xor data16 sti add (bad) frstor and and mov lret in add dec or jne lret sub pop xchg and sbb add xor iret xchg sbb das or int3 hlt dec leave mov stc push scas mov fimull lea and cmp insb pusha loope dec and dec add test scas lret clc shrb sub pop cmp test mov push out push loopne,pn (bad) lahf aam push ret pusha pop mov sbb dec (bad) mov jg ret roll pop jne mov mov std rep cmp xorb int or sub add or push into mov pushf js pop sub mov push jne add out subl sub ljmp and leave push pusha push loope sub mov cwtl pushf add sub mov adc cld mov pop jns mov repz push adc adc mov aaa mov js dec sbb pop test dec leave orl ret cmc dec cltd xchg push clc scas dec mov into and inc roll repz cld add or pop out dec add xchg sub or popf inc push lahf ret cmc je jb or push out adc ljmp aad push or fimull inc pop je notl popf dec fsubr jp xchg cli call inc push and (bad) sub pop push subl sarl pop mov sub insb add xchg jmp sub jg push xchg sbb repnz push xor add mov and std pop loope push mov sarb mov imul sbb mov cs mov pop dec shll mov inc mov data16 mov stos sub sub hlt outsb xlat out inc mov icebp add push mov push nop xchg loop (bad) mov xlat jno dec jb mov movsb mov outsb int das clc mov lcall xchg jl leave pop icebp push dec cmp imul xchg lock mov add jle and cmpsl test aas imul pop push pop push lds call mov dec icebp add jmp lock int3 in sti push adcb gs jle dec sub push clc and lcall adc push pop ja adc or divb sarb jbe adc jnp adc push mov addr16 loop pop jno dec in daa xchg jecxz push push repz ret jle add dec arpl rcr push add pop cld sarb xchg jecxz jl mov mov or pop cmpsb mov stos cmpsb mov repz das xchg jge call loop dec rolb sub adc push mov xor pop cmp in adc shrl fmuls ja aam in lods setle pop mov push pop xchg imul mov adc mov inc xchg arpl push jg add jnp add sub mov out cs shrl shrb jge mov or add push nop loop movsl js mov add scas pop mov test add push adc adc sub cmpsb add xchg xchg jg or mov sub add dec or pop inc aaa pop test movsb mov cltd dec frndint dec adc repz mov mov outsb setb mov mov push dec ret repz aas mov cmp jle loope or daa test fs sarl add or out jmp add pop sahf loopne sbb or cld and popf pushw and pop nop pop out js test sub leavew (bad) aad leave jmp subb pushf push jp xchg leave jnp movsl jne lret mov mov mov mov cwtl cmp clc hlt fbstp cmc repnz lock jle imul adc cwtl movsb lahf mov mov pop add (bad) daa pop xchg jno inc xchg or sub push js pusha lcall push xchg insl jae loop lret out dec leave jg ret aad pop icebp xlat (bad) mov sub lret add sti sub repz loop outsb and mov push leave iret ja enter cmp addr16 outsb dec cmc inc xchg cld popf pusha aaa rcll ljmp repnz mov cwtl fcompl cli daa sti pop adc sub lret pop mov cmp enter in xor cltd in loop xchg push js pop xor (bad) fildl push or inc mov les outsl mov (bad) cmc sarl cmpsb or jnp adc mov iret and (bad) push xchg pop ret xor divb test push jl ss sub les lret aam movsbl scas sub xor xor add divl (bad) jge xchg cmp or out repnz mov bound daa and mov stos cmpsb adc xchg lods sbb add jle clc lods mov add push pushl mov gs inc dec mov int3 test jge pop dec inc push dec pop lret fisttp stos sahf aam jmp cmp jl into fmul sarl xlat (bad) jecxz mov dec (bad) lds or xor les push ja push xlat outsb mov mov insb popa sti lret jne pusha lahf xchg cmp aas incb mov movzbl cmp (bad) into inc aas cli xor cmp ret out pushf scas rorl xor mov push sbb jnp,pn push jmp and jo pop jnp xchg xchg gs cmp xchg in jnp fild jge xor movsl ljmp mov pop aas push jl add call ret dec test bound in mov je mov xchg faddl ficoml (bad) test ljmp dec movl (bad) movsb repnz jno movsb stos pusha add or in xchg rolb dec scas xor roll (bad) mov push out fsubs adc dec mov adc xchg out clc mov sub imulb lret (bad) cmp or imul jnp arpl cld pop adc test mov inc dec ja mov cld (bad) shrl jmp scas loop (bad) out lret cmp mov call mov icebp adc push test mov mov lods stos cmc xchg cmp ljmp lds or decb (bad) lahf adc jp and cld sbbb push ret add push aam inc stos jle (bad) iret scas popf popf sub and ret movsl mov inc xchg add mov fbld sub test imull mov test lods cld push mov or inc sbb into mov cltd dec out xor fidivr cli gs or popf jle stos sub lea (bad) jbe fdivrs int3 js dec inc mov punpcklbw sbb (bad) repz xor negl mov mov idivb or add sbb cltd push pusha or add jmp mov sub test and mov sbb movsl test mov clc cmpsb into sub mov data16 sbb push das bound js xchg inc jmp repnz leave loope jne stos imulb adc shr into lahf add loop fnsave pop std xchg test jae adc decb sbb push pop and mov jbe ret push jne sbb jmp in scas loop test pop ret push adcl test sub and and ja jecxz add test js or in inc les lret (bad) jge push xchg pop jle cmp loope movsb dec dec jae sar (bad) leave push pop adc mov (bad) cli mov (bad) cmp xor add roll lcall xchg fcoml iret scas idivb das repz add pop mov jg mov jmp push ret repz xchg add iret sbb cmp (bad) das enter loope out jp push popa adc into push and sbb mov stc add rorb in mov pop sub jecxz sub and (bad) pop mov fldt arpl pop adc cmpsb in fucomi pop ret lret mov fistpl xor cli cmp push or dec repnz sub mov loop mov fs repz clc (bad) mov inc dec adc mov and nop mov sub jp adc lret adc sbb (bad) gs repnz xchg cld outsl and dec sbb mov add int3 adc mov ja add mov dec mov data16 sub cmpsl (bad) je pop jmp out clc xchg mov pop mov inc movsl pop xchg dec clc scas int3 lods fcomps mov and aad inc mov cmp lock mov mov mull jmp notl cmp sti inc xchg sub sti mov outsb and adc mov xor aad cli or xchg cmp dec rorl mov jge jne out stos fnstenv xchg jge mov das and shrl add jmp sbb call inc in cltd push sti and sub std ss sub xor adc mov rcrb xchg ljmp lahf push xchg dec (bad) into jnp not mov and repz ds jns shrl sub cld iret imul test mov push sub mov dec es (bad) ljmp mov ljmp pop (bad) int jle outsb (bad) mov (bad) rcll sbb or xor fstpt bound icebp jne dec xchg out mov es dec clc sbb add loopne fistp xor mov and jle shll push dec lods or scas push adc sbb jecxz or ret sti sub out cmpsl (bad) negb fmul in inc das push fs ret mov andb cmp mov paddusb xchg in mov sub pop orb idivl fdivs xchg imull xor call gs aad shll cmp add mov pop or movsb lods and stos inc mov sbb loopne and stos xor subl outsl imul xor dec test mov test dec (bad) jbe jb loop push lds cld (bad) movsb rorb mov mov iret sbb sub add sbb std mov add mov sbb xchg xchg pop inc cli test sbb jl pop add mov lds in jno mov out popf rcrl (bad) bound mov int3 and mov stos out add push insl arpl mov ficompl loope pop cltd cwtl enter push dec (bad) (bad) xor (bad) js iret sub jb clc add pop cltd push jno push and inc pop mov lahf outsb jp add and scas push (bad) rcl xlat sub lret sub sub ljmp pop dec stos cwtl mov mov mov fcoml mov add (bad) test call (bad) std lahf xchg mov cmpsl xor mov imulb cmp sub cli mov and xchg (bad) mov punpckldq add popf pop stc cwtl dec std inc shlb sub push rorb sti mov and pop push and mov sarb rcll and push cmp lcall stos imul xor or inc hlt repz bound pop (bad) and mov sub push sub in xchg and fidiv leave (bad) sbb push inc inc das xor or hlt push jae and gs loope pop cmp lea xchg mov das and hlt pxor daa xchg add (bad) dec das out and and fiadd lahf xchg lock std out std and notb popa (bad) jecxz leavew repz lods and jb pop jg pop std xor sahf shrb push dec fcomps shlb imul lods sub loop mov rolb repnz sub mov andb es in mov out dec jg enter pop sub mov cld sub aam mov repnz xchg pop cwtl xchg and or stos fdiv aas xchg push push inc pushf test jl sub mov stos fs shlb stc ss dec (bad) fwait xchg mov xchg adcb mov sub mov imul push leave (bad) mov sbb mov aas add lcall push and rcll iret mov or xchg sub xor rolb jp xchg mov sub add pop mov mov adc mov daa jb lds repz push sub in mov addr16 xchg ljmp jmp stc icebp movsb fs inc pop ret push lds movsl aam adc scas bnd sti sahf lahf adc (bad) clc pushf mov pop out icebp movsl shlb lods push loope mov lcall incl adc loop mov pop js movsl jmp rcrb lret test xor mov dec mov pop lock cltd ret aas (bad) dec das daa sbb popw push rcl ds ljmp add out or jns cmp notl out and mov mov pop inc lret jg idivb cmpb fistpll dec xchg mov test mov pop divl mov repnz pop xor or sbb roll shrb pusha mov outsb jecxz not dec call or movb out rcrb mov (bad) mov inc out pusha outsl cmovge insl sub cmpsb xchg push inc fs ljmp xlat fistp pop and cmc adc rolb bound sbb pop pop xor add push jne sub repnz mov dec dec and pop jno and jbe adc iret jns and add cmp lret xor leave xchg cmp rorb mov cmp push xchg push jmp hlt fisubr push notb jle push icebp xor mov sub cli test xadd movsb jns pop mov scas cmp dec lds add enter (bad) aas int3 pushf xor or out insb (bad) mov ja pop loopne std xchg pop xchg sbb mov into inc nop in or mov into cmp inc insb push ret ss mov sahf popf ds jmp notb sub data16 mov repnz jge jg jne xor pop xchg push xchg iret push add popf ret call pop mov stc cmc inc sub sub rolb push and push xchg scas ret insb xchg mov inc loop lret or sbb inc (bad) loopne lock repz inc call insb cli data16 mov insl adc stos mov pop add fimul cmp push xchg sbb sahf (bad) push repnz sub push or and in test stos sub (bad) xor pop pop lret sub aam stc cs bound xor sbb and fld xor lret test out pusha lods sub or ss sbb sti lcall xchg push or icebp repz cmpsb mull stc gs add jl push ja mov pushf leave fnstsw inc add fidivr pop mov pop push cwtl ss adc mov outsb adc call stos mov in ret fwait hlt into xchg pop loope jnp lea imul mov ds or push or fidiv ficomp std test and inc or movsl (bad) frstor adc pop mov notl jae int3 push sub repnz bound pop mov pop pop xor or fildll iret insb inc xchg in xchg push (bad) (bad) and fimull lcall pusha add rol xchg jp repz xor notl or mov mov fdivr xor loope repnz sti push lret shl mov fsubr mov dec and bnd push lahf inc mov ja gs mov test icebp (bad) jecxz into add (bad) mov mov imul mov mov stc test pop add lret jp cli mov icebp sub pop pop (bad) and sub add pop push notb lret adc add rol xor stos cld (bad) mov lret scas add leave and add xor lea mov out dec mov mov test dec jb mov jae sahf and lcall mov mov stos or ret insb call push dec fs pop je mov scas icebp push pop pop dec or pop fdecstp inc sbb jb sub mov pushf push aaa dec cmc push aaa push cmp pop aad gs or dec leave sahf sbb xor subb lods jp pop in jecxz inc lds pop cmp das (bad) sahf mov jno fdivrp int sub adc xor sub mov cltd lahf hlt sub mov xchg scas arpl push ret push dec test xchg xor fisttp xor jo add pop push dec cwtl (bad) pushf stc out pop mov inc mov repnz test enter fcom mov add mov out adc mov (bad) (bad) loop out bound inc or lret mov clc inc dec icebp repnz fs cs pushf and mov sbb push adc mov push pop nop mov mov jl imul cmpsl mov fldenv push idiv adc and sbb dec stc fdiv call leave cmc xor loope or cli jae xchg sub add mov mov in ljmp push and repz cmp fisubl daa or mov add mov jne mov std lret pop push and dec mov sarl ret adc loop ret (bad) xor mov pop loop xchg mov cs (bad) xor loop jp dec add sub dec test (bad) jb in or mov cmp aaa lock adc mov and fisubr aas sub fcomps sub decl test mov adc and lahf push push (bad) ljmp repnz vmovaps outsl adc jno cmp fldenv (bad) or xchg fiaddl xor ja mov lret in fs dec and sub pop mov (bad) pop sub xlat repz addl jp mov sub sbb lahf hlt ret les test add sbb or and mov push stc pop or push xchg sub xlat rol sti ret push jb shl daa (bad) push jg push lret mov push lcall pusha js xchg call stc out movb mov add lea and sub or into mov mull bound add fwait dec jmp mov mov pusha add pop xor mov mov sbb lret or (bad) adc cmc jg js movsb hlt sbb mov lock mul fs repnz add xchg push insb movsl pop mov (bad) dec popf notl jno out xchg jl fidiv stos lods sub mov add mul and inc outsl push pop divb call or push cltd lock sbb int out imul jg pop cmc cmp fstpt iret sbb sbb imul lds sub movsl mov sbb xorb pop inc sbb sbb roll adc shr fldl insb in (bad) mov lods ficom in xchg rcrl scas popa add push lret mov repz into cmpsb add jecxz gs pop pop add and xor out mov stos jne sub pop xor inc das cmc repz cmpsl repz add scas push invd loop pop xor jmp fimul or sub push sub mov jns cmpsl pop imul pusha xor cli add and (bad) (bad) icebp cwtl push (bad) or leave and xchg loope mov loopne or cwtl xor ret sub pushf mov pop and test cld pop xchg mov pop repz loop mov rorl mov mov pop add mov adc ret mov ret mov and test or or push loope lret adc jae adc rcrb hlt pushf out test sti cmpsl cmc pop dec mov gs and leave cli sub incl test fwait test sub test mov mov sbb dec ret cld xor pop and adc lahf jp pop add mov jns jae iret mov mov mov rcr cmp sub xor sbb repnz das into jg mov adc (bad) stos mov pop xor ret (bad) mov mov dec mov mov xchg mov js push or pop ret jbe leave sub push pop jne jecxz push push and jle fs mov cmc (bad) and add mov jmp lock ret fldenv push out push push arpl in cmp cld pop jp lret scas cmp or mov xor mov pushl out loop into dec push mov sub xor leave inc push pop xchg mov push inc mov cmpsb out lock mov aam lret mov fistl pop add mov stc push dec cmc mov iret bnd push push adc rcll dec jnp xchg jecxz sub iret (bad) rorb mov das mov lds pop adc rorb add jmp inc mov push jns inc sub pop mov xlat ja xorl iret lret and xchg xchg jecxz (bad) repnz pop lret add out pop or xchg sub or sub push nop inc cs movzwl and cmp dec fdivrs xchg leave or bound fldt popa xchg push pop or fcomps mov xor pop aaa lret cmp std ror adc jne mov pop xchg rcrl dec mov bnd pop sub das test movsb mov jae sbb fs addb fistpll pop add out sub xor and mov or in push fwait and mov pop push bound js xchg adc mov jl lret mov and icebp add inc lahf lret xchg cmp mov insl mov cld jecxz xchg sbb xchg add test jge jmp std or sub aaa xchg les mov nop bound dec lret stos pushf or pop daa jb xor mov sbb dec add les sub mov test xorb mov xchg xor mov add mov imul (bad) mov lock (bad) xor pop test jp and xchg sbb add js xchg sbb pop std mov divb enter daa jns mov jge mov lret popf (bad) testb not or ds jnp pushf or mov mov inc jb add xor and loop xor and mov push mov sub mov (bad) std mov pop mov pop in aas lods call divl fstp aaa mov mov jmp mov imul xlat jbe push adc or into sub pop (bad) mov stc cli cmp repz mov dec clc or imull call rcll ret xchg adc je int jnp sbb lret mov pop (bad) iret mov jecxz mov and cli clc push movsl ljmp (bad) into test mov push mov loop bound mov or data16 fisttpll (bad) icebp jb mov or pop roll leave std scas xchg loop jle rcll or lods jmp push into xchg ret cmp int mov pusha stos mov add gs xchg daa xchg (bad) imulb mov js data16 inc mov loopne and negb ret pop sub dec fimull icebp and lret sub pushf pop jns inc sub adc mov cmp mov dec mov mov lods xlat push lds sub cmp mov mov xlat lds xchg add lahf (bad) pusha or iret xor divl (bad) testb sbb mov pop or sub sub pop pop fdecstp sub shrb into rcll dec and int push sbb enter enter and sbb (bad) mov pop xchg push sbb push inc add xchg lret dec loopne pop xchg mov push fmulp fdivs aas fsubs dec frstor lret mov jl mov mov sbb lret mov repnz (bad) jb mov ret lds sahf mov fdivl inc inc and adc or mov das cmpsl push and stos jb not pushf into pop out push dec fldl xchg mov rolb (bad) dec inc test aas fbld popa mov push pushf hlt xlat sub mov jnp and dec add test test xchg stos mov repz ret negl das xchg or cmpsb test fdivr xor or cmp xchg mov sub sub xchg adc and (bad) lods leave ficoml push and daa ret adcb add or in jg mov and mov dec jae mov pop test add shll add cmp leave test test mov mov sbb cmp cltd out or pop mov or xlat xor (bad) loope aas mov lret sub xor movsl mov xor add mov push mov xlat sub xchg pop icebp movsl inc pop inc or or cmpsl mov and dec mov sub lret or xchg mov sub imul mov gs pop add cmp dec stos (bad) sub int outsl or (bad) jne cli pop add or arpl xor cli repz add nop sbb outsb nop mov jbe ljmp cli sub mov inc xchg inc xchg rcrl jne call sub lmsw lret leave push push pop mov mov jl and add aaa or inc cmpsb xchg add lea jp fstps std (bad) fisubr ds sub and jnp mov mov jns mov jmp popa loopne imul or pop inc mov repnz pop (bad) cmp mov out mov notb std lret xchg test fisubrl jns xchg iret stos popf mov mov les enter scas aad loope sub jo ljmp lods lods push mov cmc push cmp pop adc fstpt dec mov jnp push iret (bad) leave (bad) (bad) mov das gs (bad) out fist mov push mov jle lahf jle pop mov jge and ret dec push loope movsb dec dec dec fnstcw popf and add out jl leave data16 jns or xchg (bad) inc daa sti int3 mov in ret jge mov jne je das and scas mov cmp mov (bad) cmc jno (bad) inc push push push outsl or bound jb sub insb sbb loope mov and jo dec (bad) xor lret sub (bad) es daa out adc leave add ds call std inc (bad) cmp sub pop push out decb scas sbb or and int3 and or ss cmp lahf rolb (bad) leave ljmp in sub jb fldcw dec xor sbb mov adc add mov push xchg xchg mov inc jo push inc sub incl das pop mov fnstsw aam fnstcw xlat bnd mov imul (bad) pop aad adc outsb cmpsb movb stos xor mov add xor je,pn call pop (bad) repnz jmp push inc xchg pop scas mov test and cwtl mov xchg push xor scas lret xor and mov in sub nop cmp mulb mov sbb and movsl jo lret mov adc or cmp pop push add repz sub call cmp or out push xor pop pop sub mov (bad) jbe and clc pop add fcomps adc pusha ret bound loop jne (bad) cmpsl test jle stc stos sbb lret mov pop fist jns jnp cld xchg sbb jmp stc fidivr push (bad) and in or push cmp mov ss mov and testb jg xor adc dec mov jecxz xchg ljmp mov test push or adc sub sub jb push inc in sub mov inc sub mov dec dec fdivrs xchg add adc sub enter mov push idiv dec scas cmp sub notb add (bad) dec ficom jmp xchg or ret pop test fcompl or jmp (bad) insb jns sub sub out mov xlat imul into cmp out pop dec or mulb sbbl xor pushf mov mov iret or push in or (bad) pusha add outsb or iret jne (bad) imul insb fimull loop jg (bad) push dec out mov xlat add jnp inc jmp mov sub outsb (bad) sahf cmpsb inc add dec loop out mov (bad) mov xchg adc dec mov mov out inc lds mul sub adc adc jp push dec (bad) fmuls mov mov inc jmp (bad) mov inc lds mul dec ljmp push and mov mov dec jmp pop lret inc xchg mov adc push mov loop xor inc pop and popa sub adc mov pop out ja movsb add adc push add mov mov xchg xchg aam mov push lods inc dec mov out add lock or enter repnz std outsb sar gs je stos adc jmp in xchg sti jne dec movsb sbb (bad) dec cmp add lods je jmp adc cld sbb or or mov scas inc push xchg jg call repnz movsb jl lahf (bad) xchg or inc ret gs and add roll aaa push sti jmp pcmpgtb jg push rcrb add test fdivl data16 xor pop icebp mov leave ffreep movsb sub (bad) xchg lret popa ss into andl mov mov mov jae negl out sbb add adc outsl je pop and (bad) je (bad) cmpsb mov mul pop (bad) jns inc mov or cltd dec movsl (bad) lret push mov sub fmuls leave adc xor outsl xchg push lret lret (bad) lret popf loop data16 jl (bad) pushf xchg mov rclb mov imul loop sub shll xor in lahf nop jle call xchg mov pop mov cmp jb push (bad) out ljmp inc out add outsl and dec pop imull cld xchg btr mov or sub xlat mov repnz icebp mov inc jne addr16 jle lret xchg mov lock mov push loope ret das xor jne xchg dec lret fcomps lods imulb xlat jmp push test rorb (bad) sub test mov dec cmp adc mov test xchg sti lcall leave add or xlat insb xchg dec icebp sti aaa decb jno mov shrb xor xor outsb sub sbb mov cmc enterw fwait mov stos mov outsl pop mov lds jmp sub fbld and fs stos cwtl inc ss push jmp xchg xor cmpb xor insb inc lret inc or loop icebp jno out sbb in push jge in add cmp repnz push mov or (bad) rol js data16 sub data16 push pop push add dec lret mov sub push cmp dec in inc in adc and decl aas fsubs andl pop out aam wbinvd icebp jmp fnstsw or pop or sub mov pop bound or rcll into dec and inc mov push dec xor jne jns imulb push jb mov into xchg xor xchg adc jl daa call nop aad int3 ficoml dec subl imul adc sub push xor sbb lods adc test pop shll aam pop dec mov (bad) aad xorl mov dec jg sbb mov xchg jmp aaa ror xor sbb mov pop icebp (bad) popa mov push imul stos mov dec cli fchs sub enter sub sbb imul mov into outsl psrld xchg inc fs loop pusha dec or repnz mov mov xor sub je les test sbb outsb adc mov mov add (bad) add je lret push or not lds sbb sub or stos lea mov loop mov push in push sarl (bad) add icebp xlat jbe pop int3 push or push in sub mov dec leave xor (bad) and add test out mov dec scas aam mov decb scas adc push mov xor xchg test icebp mov push les push cmpb sub mov cmpsb test idivl mov shrl xchg jle fcoml push data16 scas ja sub mov sub mov loope add add mov and and sub mov dec xchg cmp lret stos sub pop pop xchg ja daa and pop hlt sarl daa repz in ja sub add fist imul push cmp xlat sub push dec popf pop cltd pop lret mov leave add es cld mov or out jge cmp insb cmpsb add sbb jne xlat jns dec (bad) mov and and fild and ret mov mov jle adc jmp sarb test jmp in inc and and mov push mov or std stos (bad) adc ficom lcall data16 fisubr out and fsubl ret push je xor stos test mov lret inc push ja pushf and push sub jecxz rcrb mov inc mov push xchg imul ja and dec dec popf pop movsl mov mov and xchg and mov test enter or pop sub lea stos cld stc pop xchg fcomp dec (bad) pop or adc ficom subb push mov xchg neg ljmp push rorl pop stos arpl jmp divl sbb das push dec sarl nop mov pop adc add xor add lods jo dec (bad) les es fldenv shrb cs rolb outsl sarl or daa add pop mov aam ss pop (bad) mov jbe inc test pop das fdivrp xor cmc xor insb push into mov sar lock ljmp in inc add xor inc into ret push mov stc mov fstl adc test mov in lret adc add push popf imul xchg cld out fisttpll sbb xlat pop xor lods sub mov dec das lock mov repnz sub out xor xchg ror push cmp jmp mov sti movsb stos call push mov mov mov push sbb cmpsb dec push popf in movsb cmc stos mov (bad) ret cmp rorb addr16 dec dec adc mov mov push insl scas lea mul sbb mov inc cwtl push jecxz xchg sub ret fsubl mov inc jmp dec xchg lcall mov xchg or into jp mov sbb dec dec push push data16 add (bad) dec das jmp std adc sub pop ljmp into mov aam jmp adc mov jne bound cmp test decb iret cmpsb mov lock mov push pop mov jg push xchg rorl and xchg sti dec mov xchg push or jmp (bad) cmp mov sti xchg loop and xor xor jp (bad) mov cmp cwtl popa into mov sub mov inc sbb and jae pop enter pop xchg in jmp test roll push jge into pop sbb lock pop outsb sub jle retw xlat pop mov frstor sub test sub push xchg jmp mov xlat cmp dec rol jno add mov pop call repnz and jmp call cmp bound int inc and dec (bad) and cltd (bad) jp adc lea lods pop das (bad) icebp push outsb cmp inc lods and add lret pop mov or in sub mov pushf lods aas add adc (bad) sub add jmp push mov xor push pusha imul lahf out ja sahf imul or aas in iret xchg mov inc and pop ds xor jmp repnz dec fldlg2 mov push jge sbb daa out mov fistpl lahf pop insb repnz leave mov mov movsb incl (bad) mull push push mov iret ret xchg xor cmp roll mov jne xchg lret (bad) mov push cmc scas xchg nop jb jns (bad) (bad) and popa adc and mov inc jne mov lcall mov (bad) out hlt out sub adc fimull jle and push loop xlat sbb daa add sbb mull fcompl data16 and cld xlat pop or stos mov ds (bad) cmc jmp aas bnd and push cld ljmp xchg (bad) rcll cmp shl cmp pop bound imul mov mov scas daa jmp lret add add lahf pop mov fbstp out mov add icebp push dec xchg jae inc sub iret das add dec inc or test mov sub cmpl sub (bad) mov out lret rcll mov lds sub add push and test jmp mov pop dec leave cli mov aaa add stos bound cwtl stc xchg inc pop and movsl inc je jle and mov sbb sbb clc lret bound push aad lahf pop sbb divl fnstenv mov out sub popa daa sbb inc out xlat stos sub pop bound xor loop push leave or xchg add (bad) repnz mov add iret pushf mov je adc cli into pop icebp ja daa dec xlat jl pop inc pop dec call mov inc test push cmp fsubrl jp and aam sub add test jmp leave rcrl js cltd cmp mov stc daa jmp mov mov inc adc hlt rcrl (bad) fcmovne add outsl in jecxz sub pop push stc es icebp cld jp mov pop cwtl mov or inc pushf out out and mov sub push shrb out imul mov (bad) ja lods dec mov xchg loop mov dec add xchg cmpsl jns sbbb cmp iret sub std rorb stos popa je das into mov hlt (bad) lods idivl xorl shlb mov mov jmp stos into sahf and orb adc mov call imul or and into or into dec jmp mov rolb pop and xor xor and push dec out sti sub je push pop inc mov inc mov repnz push jecxz lcall pop jnp inc std or push test add sub aad les adc mov xchg shrb lret cmc xchg fstl movl adc loope,pt es and xchg xor push dec icebp lock fs mov xor (bad) mov cmp push (bad) adc mov mov add mov (bad) jb lahf push push mov mov cmp mov imul push cmc leave cld jo add push mov outsb jge lds imul cmpsb inc pop mov jecxz push and mov js add sub movsb dec xchg jg sbb push shr jo cld push dec pop xor (bad) xor or mov pop aas cli xor mov insb lea pop xor xor std lds and pushf sub lds (bad) cwtl mov jne (bad) dec outsb repz subl cmp repnz mov testl or mov inc ja inc inc push push fisttpll mov aad fbld jg cld cld fcom loopne loope notl daa mov out jmp sahf pop jo pop sbb in rclb stos mov xchg aaa pop sub test leave sbb dec loop jl jmp iret sti sub adc lahf push icebp sub lcall sbb jl push iret cmp sub mov or rclb jl push rorl clc adc jmp xchg mov es add scas stc sahf dec jecxz in mov jbe stos pop std xchg fstps adc add cmp cmp sub xor cmp sub cmp add orl ret stos das sbb dec push test inc pop jae pop ret outsl test scas cmp sub movsb add jno aaa sub icebp pop bound (bad) push in scas push imulb bound sbb pop xor (bad) sbb dec jbe lret (bad) sub xorb arpl or addr16 or icebp rcll les add rcl (bad) shll cltd out xor lret stc lock mov xchg std (bad) or lret in (bad) movsb push mov mov rcl ds adc or mov (bad) sbb in inc inc aam push add das mov cmc mov cmpsl test popf mov push (bad) sub sbb mov add insb mov into mov test sbb leave sub out fs scas lods int call mov cmpsl jo pop ret adc shr jmp adc lock pushf jle ljmp ret sub sub ljmp mull enter pushf out jmp or cmp pop pushf mov imulb jno bound shll pop jno jmp ds test dec popf int3 cmp imul adc mov std mov dec into mov icebp adc xor push fs push ja adc leave mov add insl push add test xor das sub push xchg iret adc sarl adc dec test mov aam incl push sub pop xchg hlt cmpsb lret or shr outsb sarb jae lods rorb or fisttpll cmp xchg (bad) sub add lret push jb sbb xchg popf xor repnz aad sub add jg push inc cltd adc dec mov sub andl insl inc sbb and mov (bad) inc push jo loope ds and sub mov mov scas in mov bound push or call pushf inc xor and shlb cmp xchg sbb sub (bad) xor push in push push mov sub xlat adc xchg (bad) and aad nop jmp aam adc xor int3 (bad) in sub test and mov mov fdivs sub sub insb cmpb rorb lds mov sub out bound (bad) clc aaa loop (bad) loopne xor repz inc loop lcall std push cmp testb imul xchg jge fisttpll sub jmp or adc adc icebp cmp out mov (bad) dec and into dec test clc clc movsb mov (bad) shll roll (bad) xlat sbb cmpsb ret sub sarl lods ss jo mov fcoml ss ja call scas (bad) movsl jmp push xchg mulb mov pop je mov cld movsb jle in cld inc leave cmp add pop push clc cmpsl in mov xchg test mov popa into push add adc imull mov std data16 (bad) icebp and xor lret out stc push fs loop fcmovb dec js into and mov or push (bad) notl test dec loop shrl push pop mov mov and out lret outsb inc mov and add cmpb mov pop sub mov sub (bad) popa (bad) jmp jl mov (bad) in clc mov movb lret lret pop xor sub (bad) lret mov or out lds cli test add mov je jmp cwtl dec mov mov xor xchg rcrl cmp mov dec sbb mov (bad) pop xor jg (bad) cmp or adc dec (bad) in cmpsl mov pop pop (bad) push cmc pop cmp in mov lods lret xlat xchg jg lods je in xchg test fidivr imulb sbb inc subl cmp mov xor (bad) cld les incb daa adc inc repz and add ja sbb xor cld inc adc jmp movsl xchg out jl xchg leave cs aas cmpsl fimul hlt in imul xchg mov (bad) mov sbb pop adc xor out lds mov pop (bad) iret lds xlat or lock int add mov sahf cltd mov mov dec or mov outsb dec pop mov scas jecxz sub xor mov out lahf mov sub ret stc (bad) cmc in mov sub jge mov or das push test iret jge jnp loopne xchg pusha push or pop mov pusha push sub jge jp lods imul (bad) push sbb scas fbstp lods mov and outsb fdivr ror push std js gs clc mov (bad) fidivrl out or mov mov mov push or xor ja pushf pop rep sub add mov pop jno push inc xor sarl adc (bad) lock popf in (bad) xor sub fisttp repz nop out and pop outsb lods mov add fwait test outsl call in out push ds test push sub popf jmp inc mov lret test repnz ficom xor enter scas sub or and mov sti cmp pop aad ds and int3 or add lret call mov loop daa xlat jnp cmpsl or cmpsl push push xchg cmc push fisub push sti and (bad) ja xor jb jmp (bad) popf cmc sbb mov cmp or xchg mov xor jno pushl adc push jmp jbe pushl jb xchg fucomi push rorb dec mov mov push pop mov nop mov xlat frndint insl cli dec xlat inc lret cmp jno sub and pop stos xchg mov mov out jge leave mov (bad) lock cmp inc mov ljmp or ljmp fsubrs cmp inc ljmp fldl inc mov xchg incl xor jg sbb push pop in cs or and sub xchg adc and xor fsubr mov and add adc add fildll pop cmc (bad) lock sub cs add and out sub out pop sub mov jle or fistl sbb sub adcb xor insb add daa dec icebp dec xchg push in xor out in dec movsl mov out or mov cmp fildll idivb in icebp xlat cli imul cli xor add clc cmc mov push gs repnz and sub dec in xchg push mov sbb jp push and pop testb xor (bad) inc xor mov pop lahf dec push popf sbb add add sub (bad) ss xor pop mov pushf (bad) into dec jo sahf adc dec outsb mov les xor pop outsb lcall dec jmp (bad) bound jl xchg pop movsl adc jge jne std mov call xchg adc ret scas sarl out ljmp or std xchg mov lcall push and daa sub std cwtl rcll daa add pop dec sar out mov xlat in loop or sti daa xor jmp imul cmpsl push jo loope scas test test xchg enter repnz sub pop lret movl dec stc mov jmp bnd or inc mov or jns dec leave stc jle inc sarl mov push xlat jmp pop sub cs inc and sbb cli mov sbb pop mov iret into clc mov outsb xchg cmp jne loop xchg mov das mov fildll add fstpl sub fnstsw loopne mov xor (bad) and es push xor mov sub cmp in adc jmp dec jmp cmp xor jns push daa pop add (bad) mov aam push or jbe pop jmp imul pop push jl dec push and outsl mov jno das fxch jle or xchg pushl inc ficompl pop jbe loopne fsubrl fnstsw mov (bad) mov dec pop mov notl xchg nop sub imul je or mov stos cwtl cmp xchg or or movsl int add lods rorl sub and jmp push add (bad) or and mulb pop mov cmp sub daa mov push movsl mov icebp inc push and sub mov mov std adc xor sbb sub sbb or out jbe or out lods notl push loop or push mov mov push mov (bad) jns xchg jecxz adc add xor test lock sub jnp xchg rcl out dec inc call or enter and mov sub (bad) cmp mov (bad) repz xchg mov pop loopne repz test ret mov add push lock and outsb outsl ja pop mov dec jno or das mov mov es ret stos mov push out popf cli cs fs jecxz fmull sarb inc adc jmp lret mov rcrb dec stos into jo or cmp jl sub and dec pushf mov dec int3 fistpl xchg pop cmpl insl mov mov or lahf (bad) mov sahf cmpsb mov cltd cmp push outsb mov sti es and or out fnstcw mov test lock xchg shll (bad) dec pop arpl mov scas sub jo or fsubl jb add (bad) stos mov ljmp fnstsw mov adc repz daa nop pop xor lahf xor imul icebp mov jmp icebp sub sar test add popa mov xchg aaa adc test cmp mov push pop mov (bad) cmpsb cmp mov int3 inc cmpsl daa xor cwtl daa jbe fs stos clc (bad) and pop jns mov cmp adc test cmp test mov loop rcr mov mov outsb test aas popa into xor aas test cmpsb out mov pop lock cwtl pop mov and mov fiadd adc shrl push in xorb dec mov mov sbb push jo jecxz ja pushf shll das jmp push out xchg sub cmc mov and push adc push idiv xchg in mov movsb std dec add and xor fnop fsubrl ficom imul lret push pop scas repnz xchg int sub stos (bad) and xor xlat shl scas aam pop popf adc pushf test push sahf or (bad) push jmp jle daa fist repz pop lods jne mov fcomps jmp loop leave push inc jmp inc in mov loop test adcb idiv inc popf outsl je mov pop movsb inc mov fwait inc or jb and (bad) ja or outsb lahf insb fisttpll xor mov mov dec lea cmc lods or and jmp sbb and sbb sahf dec dec mov dec pop add jnp adc imul adc out mov xor pushfw and in mov lcall xchg jmp mov inc push jg sbb ret hlt out (bad) in dec dec lahf inc test fisubr pop sti lock dec mov insb sbb and test sub sarb or dec xor adc test xchg mov adc (bad) mov les fucomip in int3 mov jmp ss fisub and push movzbl int xor rclb mov or push (bad) das scas sub leave pop pop in pop mov cmp dec (bad) out fnstcw mov out or mov pop idiv cmp jg push adc cmp or out adc je mov js lods push in sti mov dec mov loope cmp (bad) data16 dec push mov lret push aaa and scas mov jmp (bad) add or add lds push push sub sub in pop push add test lcall mov cmp leave mov sub (bad) sarl cmp or leave dec and lret mov rcll stos xor out dec xchg pop mull add sbb and std xor jg fs idiv sub jg cld add adc lret jp cmc cmp notb xor fidivr and add jl ret hlt inc push loop pop loopne fdivl gs movsl push push out adc pop pop decl (bad) mov cli mov and jle aaa pushf sub pop add and jne outsl inc mov mov out xchg ret mov push push sub jns mov out xor mov fisub fnstcw sti cmpsb fs shlb inc dec testl cmp (bad) ljmp push in stos sub xor loopne out push nop jmp test mov sub jno inc or ret mov lods xor sahf add mov outsb lds jmp mov sub cmp jo xchg fnsave daa cmpsl ja push in dec jge jge outsl mov add adc inc xchg pop adc pop out movsb clc lods pop stos js and sub mov xchg push repnz imul sub stos mov loope push mov outsb rolb push stos test push out outsb push inc pop insl sarb cli fs in jle or out xor jmp out gs add or push push inc dec ret ja rcl xor cmp mov adc mov adc ret enter mov dec dec xor cld mov add outsl and inc mov daa repnz repz xor ljmp pop lret int3 js pop iret xchg movsb leave mov iret mov stc je fs cmp leave aad push and sahf jae into aas xchg fdivrs fcmovnbe shlb and out int cmp xor xor rorl out movsb jbe push push (bad) (bad) leave and js or pushf or jne cmp mov or and fistp int aas xor mov add add mov pop lds pop stos psubsw xor cmp movsl and xchg (bad) adc jo aam imul leave (bad) andl xchg nop mov popf mov sbb insl or push cwtl xor xchg ds out pop push (bad) mov movl imul jmp loop pop packssdw movsl dec jo and xor daa add pop jle or jbe dec mov (bad) sub fildll or or into mov lcall push into mov fild shrl gs mov mov and stos adc loop test and (bad) sub dec call add shll shlb hlt test and stc cmpsl xchg jecxz pop mov push xor sub lret negl (bad) jmp sub xor inc loop stc outsb dec dec add and sub inc rolb lods push pushf xchg fisubr dec aad lods mov push cmc stc mov aad fdivs mov xchg add xor (bad) mov adc out sub pushl mov fisub sub in jae xchg push mov sarl int pusha out test pushf push jmp mov or xchg pop lods gs mov mov cli fwait add out movsl das loope imul stc mov jl adc cmpsl (bad) iret movb je mov add fcompl popf xor in pop push ja out inc mov and sbb lret inc das les out sub adcl outsb mov shll les mov es in jns jge xchg dec xchg jl repnz cld or inc pop stos mov xchg scas mov adc pushf mov sbb pop pop or sbb mov add adc into lock ror mov out call int3 pop cld adc out jbe jp mov ja or repnz loope out nop pop pop add xchg loop mov dec sbb mov inc push jmp stos rcr sub iret adc sbb (bad) leave and mov pop push push add mov jo shll jno dec push int3 in jbe sub jb ret les test cmpsl daa aam out leave xchg push mov aaa mov mov dec jp mov fistl lds lret jp xchg (bad) mov inc dec ljmp mov and lods scas push push fwait add adc scas ret popa fsubs cmp pop mull or push sub ret inc (bad) xchg xor rcll cwtl out ret xchg inc xor add push out jg out lahf inc jno dec daa xor icebp subb push outsb loope jb lahf jns inc and loop add or lahf xchg or push add popf xlat sbb mov jno jge (bad) in daa xchg push cmp out push sub add xor or cltd push sbb jno mov (bad) adc xchg dec (bad) aad sti xor mov ret xor clc int3 (bad) xchg adc push or push dec pop movl xlat outsl xor xor daa cmpsb and sub xchg sahf sbb mov pop mov ds xor xor xor push stc sbb ret lahf fisttp stos cmp stc sub ja add aaa in out fstl or mov rolb repnz push loope mov lret je fnstsw pop sarl pop fsubs jmp xor and imul add addr16 sub test ret add xchg cmp xor mov outsb inc fcmovnb jnp ret pop xchg pop mov mov outsb push mov pop fxtract clc jno fstl dec stos mov outsl mov pop out dec mov ret push fmul testb (bad) and movzbl aas sub icebp sub fnop repnz dec mov sub fxch cmp and mov add adc cmp es out (bad) xor and and push rcr ds sbb enter sub imull or and mov xchg dec (bad) mov inc fwait sub xchg fs test lods push stc test lods mov out sub call add movsb push rclb pop sbb ficompl sub stos repnz cmp dec add iret out adc sbb rorl sub xor adc xor dec xor dec xor mov jg mov cmp rcrl fcomps icebp mov ljmp jae sub std and sahf out and sarb iret xchg and in (bad) loop xchg push cli cmpsb or idivl push data16 pop inc or cmp pop inc mov shr div dec xor pushf jbe ljmp mov mov push and xor scas mov jp sar pop mov or jae cmp incb fs notl out f2xm1 cmp fsubs lcall pop or lret ljmp data16 test aad dec out pop or call add jl adc clc mov sub loop incb pop mov mov jecxz mov stos xor jge aas lods leave pop sub cmpsl ss dec xchg fbstp es mov lods test mov or ficoml test repnz jp pop push in pop ss maskmovq mull and sti out pop out sub xchg int xor mov into xor sarl inc dec mov insl xor ret jg pop imul dec mov xlat push sub add popf sbb and and add fidivr mov adcl repz sub add adc int3 icebp xchg fcompl jnp scas mov jne adc xor jg fwait xor mov testl cmp xchg arpl loop mov loop and (bad) scas dec lret xor data16 inc jno sub lea stos pop out push sub mov and stos xchg push pusha sub das xor scas mov adc mov and rcll jmp out mov and lds add sbb mov mov mov mov mov xchg dec add popa dec cmp dec add mul daa into jg mov stc xchg sub mov xlat loop pop ljmp push popf xchg mov jne rol pusha push addr16 movsl pop insl and or pop mov xchg scas cwtl dec (bad) mov pop mov mov pop divb aaa jle insl dec das daa notb je add lret mov lret sub xchg dec (bad) call imul das pop stos daa push xchg pop push sub xchg xor imull sbb mov iret push lahf cld mov roll xchg dec and loop or push jae rcl cs mov dec les lock daa mov pop ds fcomp jmp and mov out call stc pop xor pop xor stc pop add addl jmp (bad) ffreep or add or icebp xor repnz xchg scas mov fldpi dec pushl adc inc scas std test dec ret scas cmpsl lock xchg mov mov cmc sar xchg lret adc pushf push mov idivl mov lahf xchg fistl ret lcall in out fs loop pop mov std cmpsb lods pop sub call xchg inc add iret xor dec or and push loop std icebp roll mov pop sub cli push lds (bad) ljmp mov ds out xchg and xchg outsl je mov rcll addr16 shlb (bad) arpl inc ds mov ret and decl icebp push popa sub sub inc jnp insl inc les pop and cmp scas fwait mov mov pop or call push shrl ljmp sub mov out leave shll mov pop cld (bad) (bad) shll (bad) int mov jns sub fcompl jne jp cli (bad) cwtl and mov int lods mov push clc adc loop mov das pushl fcompl ret mov xor fsts outsl push sub pop or mov or ja sahf sub rep movsl ficom mov push sub repnz (bad) pop adc adc pop fsubrs jmp pop pop sub mov and mov incl mov sarl and (bad) lds lds stc jle push and pop push in inc mov mov cmp jmp xchg lret push (bad) stc ds or gs push (bad) cld mov xlat sbb add mov je mov pop ret mov mov sarl js cmp xor mov xor data16 jl and adc pop xor popl xchg pop clc pushl shrb pop jecxz jl dec stc cld (bad) adc pop lret mov add test push sbb push cmpsl sbb mov loope leave sub or jmp fadd stc add sub sub les add rorb incb stc dec leave cmp sub in jmp mov notb loopne or or lods ja stc icebp inc icebp lds cwtl loop xchg cld dec pop int3 outsb push out sub popa mov pop cs add xchg aas xor ret mov push mov fsubrl ljmp jle pop push jbe push pop push loop insb clc and loope jmp sub fildll fldenv add inc iret mov outsb int3 iret fwait cmp pop call mov push mov and sub xor cli aam rol jo push jno into stos (bad) std push shl push sbb gs mov gs movsl jmp dec stc inc xchg mov pop lds xchg das call push xor push add pop (bad) test sub out or push xor adc sbb adcl dec loope pop repz repnz lock sub mov inc sub dec pop and mov pop lock notl mov out loop leave ret fimul mov add (bad) test push jmp jno imul and or cmpsb fnstenv pop xchg dec jle (bad) je idiv mov out sub repz pop jl gs daa jno movsl pop out lahf inc dec sbb rcr (bad) jmp or lea gs sti mov popf xchg sbb xor adc xor dec xchg pop popf push fdivr inc (bad) xor sub outsl test je pushf dec jmp adc push jge outsl add dec sub mov cmp fdivrs or mov or mov idivb leave daa into ja mov rorl daa ret mov cltd push jl and sub dec add xlat sub out jle push xor das rol hlt cmpsl sub xchg and xor pop arpl and and cs inc sub imul xor adc orb dec mov lret push add and push jns imul xor rorl jns movsl sbb mov stos scas xchg cmp pop loope jmp pop outsl cmpps stc mov cmp (bad) push xchg push outsl lods ljmp inc sub ret push mov lahf (bad) pop shlb mov push (bad) out pusha add ret dec add sub xor mov fcomps sbb adc mov loope cmp dec inc add add loope lret sub mov fsts cmp jne out inc orb cmpsb pop mov fucomip addl or push sub dec sbb test ficomp mov add iret or push adc divl subl fwait (bad) daa or sbb int3 jmp sti dec jbe into lret xchg sub xor add mov mov jmp imul mov cld andl fwait (bad) call into jecxz test loope mov push mov imull pop into xchg mov pop pusha outsl jmp add cmpsb and movsl repnz pop dec dec ret xchg mov pop aam mov (bad) cmp dec aam lret clc push repnz xchg out adc mov imul cltd or inc jne cmp mov icebp jp mov popa jae (bad) data16 rol push repz xchg rcrl push cmp fidivrl repnz mov sub cmp jecxz and jns and fwait push and or shll in fwait adc jae fs mov icebp xchg pop mov pop sub mov bound push pop (bad) mov jbe jp mov mov mov mov fimul and icebp push push xchg adc imull out inc loope adc mov fimul loope insb and lcall out adc iret jmp ljmp out lahf push jno icebp mov jmp pop inc xor jecxz popf sbb xchg xlat leave in cmp xor mov sub xlat xchg lock cmp mov pop pop test mov jmp inc sbb rcl outsl mov mov or rorb add and fnstenv xchg aaa cmpsb dec push cmp mov xchg std xchg xlat dec pop out mov loope gs in and rcrb xor or ret bound sub sbb and (bad) lret or loop pop das pop lock popf push xchg pop jge inc cli mov or lret pop dec ss and movsl adc xor fiaddl cmp jle inc (bad) sub iret sub int pop inc test (bad) inc adc lock test cmpsb pop fmuls sub pushf daa or mul jb (bad) sti das mov add cmc ret sub ljmp pushf nop xor pop stc stc or test dec mov push dec jg mov fistpl xor ds stos sub das negl dec cwtl inc sub adc shrb lcall cmpl aaa mov jmp xor dec push jecxz daa fiadd pop jmp xchg pop stos je stos int das mov cmp (bad) dec xchg pop idiv push in mov cmp mov aam jmp and sub jp mov daa js (bad) jns,pn dec (bad) mov popa shll or cmp movsb xchg inc into scas mov pop test inc insl jge mov push je fmull movsb in lahf xchg clc jp or jbe orl sbb cwtl dec (bad) ljmp repnz xor cmpsl cmp pop mov push mov pop sbb (bad) xchg js mov dec sub les or stos mov pushf sbb mov mov dec fdivrp push cltd mov adc mov jmp fisttp dec (bad) cli lret popa inc test xchg pop add cltd sub lcall xchg jecxz push sub lea jne pop ds dec jmp xor scas mov dec mov out div cmp cld or dec std xor (bad) xchg mov xor lock or aaa loopne lock div daa (bad) and xlat test adc aam stos push pop mov dec out pop mov mov xchg pop or and jno gs rcpps imull inc sbb cmp lret xor in gs pop mov dec xor les fdecstp or fs pop fsubl push aas and daa sub xor sbb mov (bad) ret fs add xchg icebp adc mov push dec pop flds or fsubr pop (bad) adc mov rorb lods dec aam pop rol loope imul je sti sub call (bad) mov push adc popf leave add lods xchg sub mov negl movsb push mov xor out jbe jo repz fimul int and mov scas sub loopne call dec and stc jg sbb xor adc xchg mov fcoms push adc mov fistl xor in clc add mov out pop adc adc or scas mov and xor dec imul or jecxz movsb movsl call xchg mov cwtl push add add pop or repz jmp lret mov je push jge sub cmp test icebp int3 jns cli jmp pop push clc mov stc sub vpaddb mov jns jmp dec imull andb nop cmc inc insb xchg out mov test adc test fcomps inc xchg xchg les (bad) mov daa cwtl das or adc mov dec mov mov es and jbe repnz push (bad) mov sbb dec sbb lret or xchg repz ret jb sub xor ret cs pop mov das popa cmpsb xor mov mov imul outsl dec repnz movsl fcmove fsubrl mov adc ds push out mov aaa (bad) in nop add and push xchg dec jnp or leave xlat sub into ljmp sahf xchg sti dec stos add subl fiadd (bad) sar xor jge cmp mov mov mov mov adc cmp or add sub scas sub add xchg lds ja pop mov or out mov mov jge and int3 lods push rcrb mov out (bad) repz mov call mov add arpl iret pop or add pop mov sbb sbb pop inc push sub and fildll push dec pusha adc fwait (bad) fcoml mov push pop inc pop pop fs std push dec jno add pop pop not xchg orl pop ds add pop outsl lcall xchg mov addr16 mov daa add nop xorl sub pop sbb mov cli arpl icebp inc ret loope cmp negl repz sti repnz lcall stc mov pop cmpsl call or jge jg sub and insl push add push mov add rcrl mov cmpsl xor out and pop mov jle mov and jbe js in or mov pop in add call xchg gs adc loop xchg arpl xchg sub sub push cmp adc out sti adc pop mov and test pop ljmp push jns ljmp aam mov out sbbl (bad) popa mov or or inc sub xchg push lods push sarb jp push addb push adc fcomps sahf push add xchg (bad) aas and or pop add add pop inc neg sbb ret stos mov pop out xchg (bad) int3 ljmp decl push jecxz fdivrs cmp lret add pop jae jmp out cld sub aas fmul adc ficom lahf (bad) adc testl maskmovq mull jo icebp fwait push ret fldt pop add jg mov call sbb pop add dec xor pop sub lahf je in push inc repnz ss pop call icebp idivb jae mov cmp scas cmp jnp add inc pop mov cmpps in jmp xchg mov ret add xchg rcll sub mov xchg push sub je jmp and mov mov loop inc sub and mov sub xor je fldenv (bad) pop xchg repz aaa mov rcrl (bad) sub xor stos fs bound stc push movsl add xlat mov or xor xchg cld mov xlat xchg out sub cli icebp bound sub xor popf pop test daa mov mov shr cld and (bad) idiv lods inc xor jl ret imul repnz dec mov push aam adc or dec pop loop xchg lahf add iret or xor pop ja out (bad) or xchg and sti xchg xlat xchg mov push cld and xchg sti or mov sub lods aad jns in xchg shlb je and lods mov imul dec or and cmp push sub dec js cmc mov jbe lods pop push jb sbb push and outsb mov gs daa lods in in mov mov cwtl lods and movsl xlat insb sbb ret imull sub dec es and ret std jae and mov mov lcallw in mov or (bad) pop push or femms mov sbb push xchg push pop mov dec (bad) cmpsl sbb xchg xor dec mov adc cmp (bad) or or ja cwtl mov rcl jae add fs gs dec aaa shlb push pop cltd add push mov les fdiv mov aaa dec or dec cmp pushw push inc mov lret mul (bad) inc repnz mov add jg ds mov outsl pop cmpsl xlat es fcoml jp pop push mov sti popf inc cmp jbe or cld (bad) lods stos loopne (bad) xor (bad) daa pop push outsb cmc mov aas push and aam insb rolb add jmp push xchg pop push push add cmp out out lods aas jg test pop or mov addl rcr inc (bad) jle and xchg jb icebp or add out push xchg and add movsl jg in and push push pusha lret xchg sub jge add mov rcrb dec mov jl jge shl push pop mov nop in not rorb cmc jo test pop push mov repnz xchg jge push add (bad) sub mov push jg aas int3 or pop (bad) sti out shrl push mov popa popf ds (bad) repz adc or cwtl std jg mov pop push pop mov mov dec pop jns or in (bad) cld pushf ret add or ja repz mov orl gs mov adc sti ds adc cmp or fbstp mov lods ret dec sarl int3 ficoml adc mov mov pop dec rcrl das mov pop mov xchg sbb mov jo mov divl or mov fsub (bad) xchg pusha lock mov movsl fiaddl mov dec imul sub clc push das ret (bad) xor push pop out out sub aam fistp dec imull sub mov add push mov dec jmp and (bad) leave into aam push jge sub repnz xchg mov xlat sub mov ds mov aaa pop mov fidiv adc push pop mov jmp add (bad) je sti pusha push add sub popf (bad) fstl pop sub leave sbb inc sub xor or xchg aas (bad) mov rcll xlat adc push fs iret lahf pop xor add in scas xor xchg das adc imul outsb sbb iret mov gs cwtl ret or mov mov mov inc ret (bad) push push inc lods dec addr16 fsts xchg mov sbb sbb add icebp jp (bad) ljmp sbb pop test (bad) adc hlt fnop mov icebp fdiv cltd lock or jle pop inc or dec decb xor mov or xchg and shrl sub into xchg sbb mov mov or xchg cmc sbb pop clc push add fcomps sub pushf pop and sub shrl cmp add ljmp js ret jge mov pop les fdivrs adc daa dec scas fdivs nop cwtl pushf inc inc and aad cmovns aas (bad) cli in (bad) mov sub jnp or sbb pop sbb enter and jns daa or loopne icebp mov cmpsl fist stc mov cltd dec pop repnz jge jp dec jb add or pop out adc push pop rcll sub push xor popf push push lret scas mov and and icebp or (bad) mov (bad) cmp mov loopne xor mov pop (bad) (bad) outsb push xchg and push inc jno pop sub insb bound ret sar dec (bad) xorl pop loop enter cmp jmp lock cmc outsl loop xorb stos jge cmpsb mov cmc sbb cmp sarb (bad) cs lods mov fdivrs push jmp sbb aam repz repnz add bound fbstp cmpsb mov je xor sub cmp ds hlt loope or loopne mov movl sub ds stos xorb and test movsl mov or and ljmp rcl test (bad) aad mov pop mov ja shlb call data16 or dec dec xchg pop (bad) loopne ljmp in scas pop jo imul xor rolb sar cltd adc pop dec out ret je pop fnstenv sub mov xchg fstl jo or jmp pop into jecxz pushf and outsl movsb loope fcom notb jnp xlat mov xor out push and pop fstpt mov cmpb mov sub or and data16 (bad) xchg mov lock push pop or cmpsb popf dec and mov mov push jnp add ret pop in push daa (bad) or rcll pop mov jl mov xchg test xchg rcrl imul jg es and lea shrl add and xor sub pop and xor sub lock add sub mov push mov adc add pop or dec mov (bad) xchg (bad) mov rol in (bad) add pop ljmp push or mov and popa popa xor outsb add mov sub outsl pop jmp test mov or inc and xlat pop in jp int3 arpl or (bad) push (bad) sahf xchg mov dec ret pop (bad) sub imul addr16 xchg push push or cli cwtl std mov stos mov sub dec add adc push xchg repz sub fsubrp push lret das movsb test mov and std dec cmp xor jmp sub mov and (bad) and lret out cld inc mov and (bad) je xchg lret xchg sarb ljmp repz fdivs xchg xor mov addr16 pop jmp aas or dec mov push pop dec ret ds cmp jg mov fs loopne ljmp push cli jmp test push dec test (bad) adc xor push mov cld ljmp lea or jbe jb lcall xor jge scas (bad) enter mov mov adc stos cmp notb jno mov imul dec ret fsub test les add xor stos enter xchg insl xchg fdivs ljmp inc pusha mov pop mov wbinvd outsb outsb dec xor mov fist adcl std out shll call (bad) dec imul outsb sub lret jbe push ret das mov xor movb (bad) pop idivb aam pop cld xlat es jmp mov leave (bad) lret fdivs test jecxz dec clc mov adcb mov push sti daa outsl or into cmp xchg (bad) jno cmp or aad sub jecxz pop scas bound pop sti mov add jecxz into pop outsb mov out mov mov cltd lock les je jb cmpl scas jne out icebp pusha cs sub repz pop out sub call test add cwtl and in adc sti insl or mov and add and jne inc sub jg dec or mov frstor sub inc je or ror aas and lret scas mov pop and shrb sub into and loope jb mov and data16 jo xchg (bad) mov jl inc dec mov or sbb stos mov mov loopne or lock seta cmp pop dec pop jno imul aam lret pop or dec jne imul dec mov daa aad xchg mov into ja jg cmp and pusha rorl lods push pop dec mov outsb mov and lahf out push roll xchg cs push out xor rol sarl sbb and fdivrp daa into push nop jae inc lods add mov jno inc sbb lret into dec mov adc add jb and adc mov imul insb sbb jo in scas adc fsubr inc and mov mov mov (bad) clc outsb pop dec or sub scas bound push rclb push jmp sbb sti or out lahf mov ficom jg mov mov or mov cmp and aam mov xlat (bad) jno pop sub das or xor add jne xor dec xchg repnz and or gs (bad) mov xchg cmpb mov pop and jmp mov cmp rcrb sbb mov dec sub jmp (bad) mov or add (bad) xor sarl xchg jne mov (bad) jns dec push inc xchg sub adc xchg mov add mov movsl mov cmc mov xor popf or push out add in repz pop lahf jb insb xchg push adc jg cmp hlt icebp lahf pop es cmp pop sbb sarb rclb cmp daa or gs addr16 push adc cli sub push out (bad) pop cs adc adc and add dec inc dec mov jmp bound leave mov movsl fldl sub (bad) mov add sub pop out ds loope test mov and jmp jp (bad) icebp sub jmp inc push sub add and mov xlat push pop cmpsl jne outsb shrb mov jle xchg lods stos pop loop sub xor test cli dec cli adc adc jecxz mov pop testb pop mov sbb xchg pop sub pop in sub sub xchg sub jns dec add lahf jmp sub popf out dec dec ret insb cmp stos lds cmpsl popf pop and aaa idivb cli add mov out test aaa pop mov sbb cmp inc add or in lahf hlt and test aad das xchg xor lock pop add sub sarl or mov in inc mov sub icebp (bad) cli and xchg aad mov pushf dec leave push rclb mov jbe sbb jg pop sahf mov cmp pushf sub mov or mov ficom adc fdivs in jge jb leave push fidiv mov imul fildl pop lods or scas sub jl bound mov push mov rorl pop mov xor sbb int3 cld mov pop jno aas (bad) pop out push movsb dec mov out xor js mov mov lock loopne (bad) fnstsw xchg lods push ret int repnz gs push xor cli xchg daa scas xor pop lea and js mov loope lret and xchg loop and mov std mov and pop xchg inc push mov jge xchg add cmp xchg push pop jge dec loope jne stos adc out or enter push insb add sub mov rcll jmp pop mov add gs sahf and cmp xchg incb mov cmp hlt mov jb je pop loop cmp into or stc xchg jg imulb sbb mov (bad) out and inc adc cmp and push fsubs xor in cmp or mov mov sbb mov fistl shrl pop dec es sub call int3 push xchg outsb push dec fsubr pop push (bad) sub gs loop add xor mov popa ljmp add mov icebp (bad) dec push iret sub mov popa stos jg push call leave or insb push popf mov fsub cmp add popf inc (bad) xor or sbb and enter subl les adcb mov xchg leave mov cmp fdivs jmp mov clc xchg movsl add imul rorl jae mov sbbb movsb pop pop mov ror mov ljmp popf in mov add (bad) add fpatan imul inc ja out add or hlt bound daa aam jmp jmp divl bnd inc sub ljmp dec dec aam aad sti imul push mov mov cmp nop cld xlat cld jmp addr16 sbb outsb out add push shll mov stc (bad) mov negl jnp clc or xor pop mov lock adc mov enter imul fs mov pop jle les repz cmpsl rorb out push sub mov (bad) jp nop dec ret lods sbb scas repz test inc fnstcw dec cmpsb (bad) adc add sub push inc dec jge dec ljmp (bad) xor or inc lods and pop mov test sub popa inc sub cmp or adc mov add xchg xchg xchg xor adc jg xor add add lock daa aam or inc pop inc dec js pop jmp pop pop sarl js fst adc lods jmp push scas in xchg pop xchg fwait and (bad) push push jg sub jnp bnd shlb mov push dec daa push pop cmp imull add or and jp xchg xchg cmp popa and and mov mov add dec xchg xor add aas std mov sbb ds stc add mov jmp or shlb pop je leave pop into push insl data16 cmp and (bad) ds outsl mov ss push xor mov sub mov jae movsb icebp (bad) jmp xor xor popf xor dec inc adc sti clc (bad) scas mov lret cmpsb into push ljmp bsf aad bnd pop testb lret fisub movsl ss xchg lods repnz into xchg jle lcall and into mov xchg in sub add (bad) leave fsts cmp loop pop hlt jae loop pushl adc es leave hlt jno loop bound push fidivr mov jnp mov mov jl lret push inc mov pop mov int3 push add pop cli jne stos mov lret movsb icebp xchg hlt fbld stos xchg cmp mov jo mov jmp popa push inc arpl add pop popa fmull sub je test fbld rcl add mov adc popa sti js pop jo xor mov enter xchg jp nop jmp (bad) mov jno clc jb gs adc mov lret lods dec shr ret mov pop divb mov pop or das dec pop out mov adc xor mov pop dec dec or inc (bad) pop jmp xor ds mov dec out lret stos push add lods jns icebp or cmc push pop mov repz (bad) lods call out push xor shr sub jg mov pop cltd mov je fiaddl scas pop xchg ljmp xor or or sbb neg and jge fmuls mov adc repnz push sbb mov xlat mov dec sub test adc das sub inc cmp dec pop cltd popa add pop push ret xor push sbb mov pop shl cmp mov fisubr bound and mov pop fwait push aad aad xor cld leavew pop icebp sbb repnz sbb sbb mov mov mov xchg inc mov and fldcw pop sub movsb mov mov and or loop or jle in dec enter in xor icebp movsl outsb mull leave aad nop stc cmp and inc or call pop out xchg xchg jmp rorl iret sub xchg mov fs test pop and mov js or je clc mov (bad) mov mov sub (bad) jmp sub inc popf adc daa xor nop xadd push aam dec mov scas js adc adc movsl adc jo xor mov jne test mov stos dec lcall fcoms sub mov imull out push mov mov hlt movsb leave xlat ret inc movsb sub pop fs or ret fnop (bad) into inc sbb imul jns test add leave or xlat adc fsubl adc or push repnz leave adc aas adc xchg loope jnp add push sbb gs movsl out aas mov sub mov xchg adc dec sub pop add in and mov sub test add push imul or jne add repz rol xor ljmp (bad) cld sbb mov loope adc in xchg xchg int and mov sub outsb sub imul dec or out sub das mov call mov test inc lret mov hlt out out repnz stos lock add mov or lods mov add sub xchg test movsl (bad) xor loopne jne xor dec xchg or and cli pushf repnz sbb xor bound pop push sub pop push repnz (bad) rorl and aaa mov dec mov loope lods inc xchg scas fs in mov pop dec jnp ss cli test mov push adc or xor clc xchg aad add push push xchg js mov mov test mov fbstp test aas sarl xor (bad) or incb int3 xchg fidivr (bad) and push or dec dec jmp push jmp enter pop jl pop fcmovu pop js lret ljmp mul pop sub ret ss jne js inc call repnz hlt rclb mov pop mov mov (bad) fildll test pop cmpsb (bad) adc xor out pop mov push push fstl pop insl add sbb mov cmp jl pop and sub es dec xchg fsubrp and pop adc stc adc xchg pop xlat jno xchg sti adc inc cwtl testl ret and dec repnz push pushl fs stos pop jnp pushf lea notl sub cwtl sbb lahf gs das popa inc cli jo xor repz stos repz cwtl dec mov sub test sub lahf icebp inc xchg adc mov pop sub pop lds sub or out arpl into (bad) dec stc jbe ljmp pop or (bad) dec incl pop stos rcll mov mov aas sub lret out and aad mov bound jg imul inc adc lahf jle jb fcoml jnp sub mov aad loop testb cmp ret xor push pushf cli test insb cli or jg fnstsw xlat xor outsl jmp dec jmp and repnz pop call andb icebp mov scas cwtl loopne mov xchg sub adc adc (bad) jge mov or sti test add scas in cs mov add das sub inc jb das ja hlt jne pushf dec pop inc jne out fstpl insl push aaa dec push ljmp xor sbb and dec fnop scas nop mul out popf pop setbe mov xor cmpsb insb or add (bad) loop ret dec test mov rorb adc dec add ret movsb jg sub adc pushl xor dec mov fimull (bad) xlat (bad) or and dec pop xchg mov pop adc outsb sub sub mov (bad) xchg hlt cmp aad xchg xchg lcall pushf je pop cwtl (bad) xor mov mov push dec cld and and in sub bound sbb imulb scas sub je inc addr16 scas adc mov xchg jmp sarb stos (bad) daa loopne adc leave jmp mov and (bad) ret dec jge adc add (bad) ds sub dec jno mov adc stc mov dec mov popf add mov adc ror idivb push mov loop cmp xor pop shlb mov aas sub and adc cwtl and cwtl cmp fldcw stos sub jg mov mov xor shlb shrb aam ljmp mov lret xor stos cwtl jbe pop incb cmp jns pop adc lds bound cmp xor es cmc lcall sub mov fsubp into mov lods (bad) pop pushf mov jl or data16 arpl sbb xchg and repnz insl add fistp out adc pop ljmp loop sub das cmpsl inc addr16 (bad) mov cmc pop inc and icebp mov mov mov fidivrl jecxz adc xlat scas push lcall cs jp ficoml mov mov (bad) mov repnz add cmc jmp daa pop sub repz xchg rorl mov jle dec (bad) mov jp mov leave ljmp scas int3 cmp sub or lret fnstcw loopne and and xchg mov add rcrl xchg in cltd lahf (bad) cmc lahf (bad) jge repz insb std (bad) and bnd add enter sub and xor and outsb fdivl mov pop test dec cli sub or clc mov subl jmp (bad) jmp fprem1 dec mov dec adc dec gs mov cmc jmp test scas mov fidivrl sahf repnz jne (bad) imul pop scas xchg push push dec fidivrl ss xchg mov add pop cmp loop xchg mov lods (bad) dec ret jns leave jle das adc push mov dec and pop push dec cmp xor dec push mov push jno xchg and es adc pop bound (bad) adc cmp mov les mov add adc push call push add das inc sahf inc add imul daa jmp cmp push xchg inc mov fstps or icebp cmp mov int hlt jmp divb dec mov mov sbb cmp shlb xchg push pop and mov xor rcr data16 loop shrb mov adc xlat stos bound or ror xchg out stos enter sub push sbb pop cmp mov dec aam imul aam pop pop inc lret xchg adc sub sub test loope call ret jne mulb xor outsl lds dec cmp xchg mov sahf fisubl and jno or pop jp les (bad) and in sti loop xlat test inc push sub inc dec shrb sub xchg (bad) mov js inc loope jae pop ret ficoml out ret mov jae mov push dec sbb cld dec jge inc mov xchg fsts sub and push dec add (bad) out and and push pop lods iret xchg pop xor inc add inc cwtl (bad) nop (bad) idivl fsubr (bad) xchg xor inc fiadd (bad) jp sub cld xchg mov xor out aam adc repnz pop iret out dec daa lds sarl jbe or add mov sub loope sub notl push xor or mov lods xchg jecxz pop fs sub sub mov test fsub sahf and fdivp int sub outsl lea xchg gs sub pop pop lods xchg or shr mov daa stc fsubrl push pop lret and mov pop out ljmp lret jle pop lcall iret add insb ret dec mov loope push xor xor clc rcl outsb push repnz lea in aas mov cld pop push xchg mov jge adcl or jb scas xor sbb iret sub xor out push subb outsb mov aaa push mov sub push xchg decb and pop mov xchg mov push mov fbld loop pop cmp sub mov mov push idivl shl fsubrl mov fdivl lock inc loopne not das add sahf mov inc push aad sarl ljmp fldl pop iret lea inc repz or cmp pop mov gs pop fisttp and aad in (bad) mov icebp pop imul jp add inc dec scas jo aas ss fs ret push sub insb push and cwtl inc xchg mov jo add (bad) adc sub out sub push mov pop inc xor push push mov and lods lcall jmp pusha xor dec aas push jne and out decb mov das call cmpb stos sbb dec push shrl mov lcall aam ret or mov xlat gs stc popf cmp sti hlt dec outsb lods xchg fist fimull (bad) xor add push (bad) mov sub js dec out jb mov pop cmp jbe repnz (bad) adc daa stos xor inc add mov sub mov (bad) jno movsl xor dec js ja jle lcall out and pop clc in dec push xchg clc mov dec loop sub imul mov adc xor mov cld pop rolb push sub popf (bad) in dec divl testb (bad) fcoms jle nop mov adc xchg into test mov pop jp in in mov mov daa xchg lea clc and sub mov imul hlt jle fcomp loope sub div sti or jge stos or movsb das test mov lock orl mov pop cmp fisub ret hlt jae or inc icebp lahf dec cwtl (bad) lret mov roll dec jecxz iret adc xor dec inc repnz enter lret mov dec aaa dec cmc inc gs mov out sub or cli xor xchg je imul or xor cmp das hlt in push aaa out (bad) dec pushf faddl inc jne pusha ja and mov xor mov fs inc push ficompl xchg sub in mov (bad) adc bound aaa test mov or mov cmp mov and fbstp (bad) pop mov pop icebp xchg ficom adc mov push xrelease ret je nop insb sub cs and ret jg outsb jecxz mov imul cmp pushf xlat cld in pop ljmp lret in add test and sub sbb add mov out ss outsl sub and or lret xor fisttpll (bad) jb je lret out pop adc sub adc mov jb jbe push add out cltd mov hlt scas pop jl adc mov pop cmp movsb push sub data16 fwait dec pusha sti push pushf lahf sti es add mov push call and lret xchg adc mov mov push push xlat push jne loop pop rolb lds add mov add mulb in xor rol and daa (bad) das lret push pushf add or ja and repz mov leave icebp xor sub popa fnstcw loopne (bad) mov (bad) int jnp or (bad) mov mov xor jmp in jle aaa or jbe dec add add (bad) pushf repz adc repz notl or out fcomps push add cld ret popf xor divb adc int scas xchg popa jbe movsl fsubr push jbe cltd pop pusha sub and mov jp or jg push sub out cmp inc xchg xchg sbb mov sub outsb imulb out addr16 repz das cmp clc mov mov mov call and (bad) jno out test jne pop jo or or std out test mov add sub xor int inc cmp add cwtl ss mov lds test pop mov xchg ljmp xor sahf jl xchg leave jmp lods xchg mov jne negb rcl stc jne jmp in or dec call (bad) scas xor xchg stos xor adc or mov stc fucom sti cmp out xor dec (bad) or popf adc cli (bad) pusha push jb mov adc mov cmp test lret call mov xchg mov sub pushf outsb repz add add pop shl dec movsb loop adc xchg adc cli stos lret or mov or leave push xor or (bad) cmc push sbb popa das movl jo cld lcall ss mov stc icebp incb bound jle fnstenv sarb pop int3 push aas ljmp gs in jmp sub stos xchg bound ds pop xor mov lcall dec in das cmpsl xlat dec icebp sbb aas mov ja in sub (bad) dec mov dec je leave pop rcll js cltd stc lds mov (bad) fistpll lsl cmp lea js lret mov call xchg xchg push xchg cld xor pop loop lahf pushf mov mov mov jne mov sub xor mov das cli arpl and inc lahf imul shr jl (bad) pop xor mov jg jle adc call pop dec jl adc pop sub sub (bad) rolb push mov or rol xor xchg mov dec jno loop leave out cltd fadd and mov lods cs xor mov mov mov and out sub insl pop loopne repnz mov lods jmp fistpl adc test dec mov sub xor in mov das push imul adc push adc xchg in and mov sub cmc mov in or cmp (bad) mov push cs xlat mov sub ja pop push cli xor enter sub push decb push jnp inc or int outsl mov add cmpsl jl dec push cwtl mov xchg js aam push xchg jle stos xor dec (bad) out jle xor mov inc adc pop std (bad) push lret and dec std fisttpl and push negb cmpsl mov cmp inc ret xchg aas adc cmpsb fist les mov sub mov aas mov fcmovnbe add fs lds out ljmp das clc outsl xchg into fnstsw sub mov shr cmp scas push xchg inc jb aaa lods lcall mov cmpsl (bad) movsl faddl ret jns (bad) (bad) or mov sub loopne pop add lea mov push mov clc add jnp scas add loope lret xchg push std xchg (bad) push xchg hlt add mov mov ljmp fiaddl pop dec sub cmp mov xchg test sub mov push clc inc mov jge rcrb into dec xor loopne out xchg jno push jp push in rolb mov sbb ds xchg mov or and add sub cmp jmp mov sbb and mov pop add pop (bad) mov and andb sbb xchg mov icebp and jns imul andl (bad) (bad) sbb adc cld rcrl ror and xchg jo sub stos mov or mov rol mov lods push sbb cmc cmpsl test cmc in das jg xchg sub (bad) pop and cmpsb (bad) cmp (bad) into ret loopne iret inc movsl jecxz or mov xlat add (bad) enter loope mov (bad) fisubr xor enter or jb xchg push rclb dec sub inc loop test (bad) fisttpll add mov jo pop mov push xchg push dec sub (bad) dec stc mov xor cmc lahf or fbstp sub pop repz ret mov mov sbb je lds and (bad) scas jge ljmp movsl push aad subb push mov leave or xor jmp fs std rorl xor dec stos sub inc js sub cmc jns imul xor mov dec clc dec dec mov outsb pop cmc sahf cmp pushf or jnp inc jo (bad) lods dec jmp or and sbb or xor lods js (bad) faddl mov addl fs and pop mov pop adc ret (bad) test sti andl dec push push fcomps dec (bad) repnz call stos fsubl mov test pop in cmpsl jg das nop arpl mov dec stos and jbe xchg pushl xor xlat xor jmp jecxz sti js movsb test mov lea sub sub or mov lock mov pop test repnz sbb mov xor xchg sbb enter dec dec ss mov mov fsubrl mov cmp scas and sub push sub out xor lock sti mov dec mov push jbe dec adc sub (bad) popf gs xor mov (bad) jmp scas int add jecxz pop (bad) test leave pop shlb icebp pop repz push aad adc out mov dec pop int3 (bad) loop jno outsl jb jecxz xor gs bound js push pop sti mov mov add jae xchg push mov adc lcall lahf je cli shll fstp leave mov call or jl push loope cmp adc or incb pop in cmp out xchg mov jmp ficoml and inc lahf icebp inc mov (bad) repz jl pop sub icebp or adc mov xlat sahf std inc movb adc add (bad) or scas xor pushf (bad) jo scas pop or sbb add mov ret xor or movsb (bad) or lcall jns dec xor xchg xchg jno int3 cmp jns xchg sti xor loope push xor inc call mov jle loope xor mov lahf dec stos xchg dec and xor daa stc frstor cmp mov and lods ret (bad) mov daa je xor mov enter adc dec enter add lods add sbb outsb mov add jl sub pop dec (bad) mov mov inc add xor icebp jbe popf add adc lcall add pushf sub icebp outsb xorb and mov jle push (bad) jne out push sub mov fsubl xchg adc cli jb add outsl xchg mov pop mov adc sbb insb push add js call out aad jb imull xor push outsl xor xchg int nop add leave pop adc push push loop jge mov jne aad pop jl push sbbb mov (bad) cmc sub mov mov or fimull movsb test sub fistpl pop mul das dec ljmp std (bad) hlt popf jo bound and inc mov pop add aad lret cmpsb adc jmp (bad) mov sub movsl das push popa es es jge ror cli int3 push adc and mov xor or add or nop sti xor mov pop mov hlt shll jmp adc popf xchg fnstsw mov pop xchg (bad) lcall jno imul dec adc jnp xchg adcl repz ja cmpsl add mov mov sbb push movsl pop (bad) sbb jbe mulb aad cmovnp stos xchg mov mov std (bad) and xchg adc jb out jg arpl fs stos mov stos imul aad sub out (bad) (bad) jno outsl xchg mov jne mov inc mov push ljmp jmp jg sbb pop cmpsb and enter dec and icebp in call xchg jmp add test pop sub dec rcrb cmp cmp icebp mov or jae or mov cmp popf roll ds stc mov jne push pop or sub mov and mov popw (bad) repnz or ja mov xchg lods inc sbb sarb andb jo xor or add cmp sub sub scas cltd aam (bad) jp leave movsb pushf sbb cmp call iret movb mov mov pop movsl mov push xchg out pop push jmp pop jge mov adcl repz push jg or fs js js rorl (bad) jno scas add mov mov and cld sub push sbb add in inc mov sub repz leave cwtl movsl outsb sbb push mov pop pop jnp sbb pop cld loope push mov push mov ds insl mov ficomp adc pop lahf lds cmp pop xor add out sub push jmp mov icebp add pop xchg aad subl mov mov je add push (bad) and jp setnp xor nop push push test (bad) jge in pop or pop pop add mov lahf outsl (bad) es sub sbb inc sub or adc daa jge or push mov add lds jl stc add or mov jne mov cs jmp pop dec lcall ret movsl stos lds xchg rolb xor dec incb sub dec inc push adc adc lret jne or adc (bad) std mov pushf sbb jnp mov dec add pop lods xlat jge ljmp inc xchg or es sub add out mov and pop jg sub adc sub std cmp ja inc pop divl dec pop adc fiaddl in push mov mov jns loope ret push fcoml push and pop cmpsl je in adc mov (bad) je jmp repz int3 ret scas jle xlat decl or add push sub into scas mov lret and daa push xchg mov cmp fist cmp movsl lds mov test das sub testb sbb or ljmp fwait dec subl je (bad) mov sub mov cmp or lods ss call mov clc (bad) test dec dec sub orb mov pop test push lret sbb jb add iret mov scas or sbb ret pop mov mov and jmp mov ss rcr xchg iret jmp mov mov mov ja pop xchg push xchg daa jle sub xchg jns out jo dec xor cli add sub mov cltd dec add fs mov pop dec lods sbb (bad) in mov xchg lahf push leave divl cmp cmp movsl out out sub cwtl ja outsb cmp jmp mov gs ret inc push push mov ret and lret je lds out and arpl loopne mov in jmp dec in xchg (bad) idivl fistpll dec mull push push aas and pop (bad) repz mov or ficomp (bad) repz mov mov bnd push and or or or fcoml ds dec ret pop stc inc test lahf pop stc push dec xor sbb repz lret pop shrb mov or fisttpl lret inc and repnz jae inc cmp loop pop (bad) dec pop jne into int3 pushf inc sub mov (bad) (bad) test cmc inc arpl cs clc xchg add cmp ljmp xchg test shll popf rcr call test sarb clc or mov and fstpl dec aam cmp and mov rorb leave out xlat enter push lds ficom add rorl into rcrb addb fmull jno inc and test jb rcr push pop dec adc fisubr and mov fs and adc fist add insb inc idiv cwtl cwtl fistp push pop icebp mov or mov or mov ret mov mov sub movsb pop nop xchg rcll test cltd ds div cwtl adc repnz xlat out jbe pop inc xor lds lds mov push inc adc (bad) lea dec in and add jl (bad) mull jne (bad) xchg jmp (bad) cli mov mov pop test mov lea jnp sub cli (bad) jmp mov (bad) jmp call ret push inc jnp adc cltd pop loopne mov mov cmpsb insb jg (bad) jp mov dec loop xchg cmp leave jg inc cli shlb or lock lea xchg cmp shrb cs sarb divb pushf inc out xor xchg out sub mov mov mov jmp dec mov lods jo repz sub daa fwait addr16 jmp sbb push and pop xchg sub adc and sbb lods nop cmp in mov jmp leave ds push fstps xor dec out pop mov cli bound sub lds push xlat mov shr in sub lods or xor call mov imul jo mov lods imul les in leave aas sub and idivl leave popa aaa fildll arpl loop inc cltd cmp push push mov ret and (bad) adc mov sbb dec sbb lds outsl outsl sub idivl jbe push mov aam pusha or mov pop in fimull daa leave jl push pop movsl mov xor incl dec push (bad) pop icebp xor andb stc mov add add test mov lahf jne pop lcall roll xchg js popf bound out and stc pop dec push mov pop add stc pop jno mov lods xor jp adc xor pop fcoml clc xchg sbb cs push cmp adc ljmp pushf push push divb (bad) jmp mov pushl (bad) sub mov andb sub sub sub push sbb mov adc call sub insb pop ljmp cwtl hlt adc aaa pop scas mov ret mov ja movsl sbb ret sub push inc jae cmp mov xor ljmp daa cmp lahf ficom rcll sub push jle ja cltd inc cmp aam inc sbb mov ret sub sub mov pop push xchg inc dec and or mov stc iret rcll stc (bad) lods arpl mov or fnstcw jmp loop (bad) mov dec call pop xchg adc stc cltd xchg cli fs mov adc iret bound mov sub and or insb inc sub mov pop push jmp notb push or lret imulb sub lret divl jbe cwtl xchg add dec mov in pop lds sti adc inc (bad) adc bound mov mov ss xor jns test hlt pushl xchg rcrl and stos mov daa ret inc and dec fdivrp (bad) adc fsubs aad lret and roll xchg cmp push and sub insl or xor stc push xchg sbb xchg out sti lret inc pop repz aaa negl mov pop mov xlat mov out and into jmp icebp in das xor inc dec jno dec inc sub stc and (bad) ds or pop xor sbb (bad) and gs sub mov fisubr icebp jmp mov lds cmp incb mov scas lret in into shlb scas fdivl icebp (bad) mov test stc fldcw lret xor ror add pushl test lods pusha xchg in push mov fbstp mov aam out pop jno dec adc xlat xchg mov push add das xor lret aaa and jmp cmovb div mov int pop clc cltd leave mov in repz mov ljmp lahf fsubr (bad) out ja mov (bad) mov adc fist xor jnp ds cmc xchg aaa aaa pushf dec inc sbb cmp jl andb nop adc xor test push xor roll inc mov or movsl inc dec mov lahf dec frstor mov mov xchg or sub and fcoms dec ljmp cmp in push dec lock ret sub jle mov add fstpt add mov (bad) xchg dec out xor push imul inc imul popf cltd cmc pop cmpsl cs orl xchg pop mov dec into out lret dec dec jmp sbb pusha imul fsts adc xchg sub add add mov add cli fbld and mov jle imul jnp lret and pop loop jp fs test lret popa jbe repnz sub cs bound inc push xor or xor (bad) jl ret or add sub push xchg mov xchg fstl sbb xor stos cmp cmp sbb sbb test adc and fcom loope sarl jg adc xor pop xchg xlat jmp in and ret sub sbb fldcw push xchg std sti lret and adc mov push pop xlat lret jecxz mov mov cmp jmp jge mov jg daa pop and push cmp pop pop shrb iret ja mov inc jmp jmp in ds mov add fs or sub push mov xchg xchg mov sub popf ret xchg lods (bad) in into inc mov jmp and aad xchg mov lret bound jne push (bad) icebp push add dec inc lods flds loope (bad) ss adc push (bad) (bad) fadds sbb xor out xor out dec out sub decl xchg test pop mov mov repnz aad cwtl clc sub push cs push stos mov scas sub popa xchg cmp (bad) jb iret and add js xlat loope sbb pop pop out xor fildll iret pop movsl icebp jg cmc lahf rol ror dec sub cmp mov mov and aaa rorb imul jecxz in clc popa mov insb fwait mov call mov das outsb fstpt and stc add (bad) pop xor nop call add ljmp (bad) lret es xor mov lock test repz sub xor sub mov add daa jmp mov push pop or popf std adc (bad) ret div aam movzbl sub sub cmpsb sub sbb bound (bad) push pushf sub jge xchg cs or xlat xchg push add sti aaa sub shld loopne xchg xchg pop popf inc add mov or push movsb pop lahf dec cmp lret lahf fdivrl push cmp sub jmp fcomps es sub into cmp sub jmp dec enter ret stos or or dec out test add mov imul xor mov gs ljmp and and sub jecxz pop or data16 push or adc push in movsl movsl loop add sti pushl and das test xchg test stos mov cmpsl or roll mov (bad) dec cli mov fucomp jne and aad sbb cmp (bad) add repnz sbb and sub (bad) in lcall ja fildl popa mov fcom out mov fisubrl add mov push aas jle and js dec divb out fdivl mov leave das clc lret mov (bad) push xor scas jne mov xor pop xor push add mov pusha adc cmp loope and sub loope insl pop movsb std push xlat adc add pop mov cmp (bad) mov mov (bad) dec repnz pop push fldt cmp cli shr jo adcl dec ss add jge addr16 push adc das mov adc add movsb add lods scas cmc mov cmpl leave add leave and sub cmpsb fmuls pop add js adc xchg pop mov add or repz dec xor push cmp inc pop imul cwtl stos out mov incb pop sub test lahf faddp push lret mov add aas mov stc jg (bad) in dec ds mov stos cmp xchg pop mov push and sub inc loop faddl pop xor shlb inc sub or push sub into mov mov xor jecxz xchg in and enter jnp in pop mov cmc push add add xchg fucomp dec dec xchg lods and shlb mov sub and scas dec (bad) pop loope push pop icebp sub stos fs sbb push add imull jne insb pop out loop (bad) jecxz sub pop pop lret inc sub out pushf xor negb or xor aad pop push mov pop or sbb xor lock mov outsb mov dec xor add ds pop lahf (bad) mov call xchg outsl mov xor aam inc and out out lret mov sub or mov rorb popf movsl icebp sarl outsl xchg scas sub adc or roll push lahf mov xor test mov fldcw fs movsl xchg mov data16 negb cmp imulb int3 ja movsb xchg adc push loop frstor lahf rorb sub xchg jnp xor dec lret out lcall fisub jmp mov or ds inc cltd and jecxz repz and fsubrl sub bound stc pop mov lret in mov mov mov enter sarb inc and inc pop stc add scas daa adc outsb fsubl add fistp aas mov inc sub outsb test push outsb popf icebp les mov mov sub in movsl sbb push mov insl out test xlat pushf mov mov (bad) clc jne aas cld into mov push sub movl out aad add xor sub mov jle pop add cmp xchg lods cmp stos sub arpl mov pop push jbe sub xchg pop out xor pop ret cmpsw jmp lock sti in adc hlt loopne shll or mov (bad) lahf std sub pop dec loope ja sbb xor push testl add (bad) mov pop cli gs mov sub add and int3 fisttpl fisub pop ficoml push mov and pop xor sub mov ret pop and jg mov call pop add xor xchg hlt in mov pop xchg call jp mov jnp lahf out push negl pop jle xchg xor push das sub inc nop data16 mov xor jmp pop les (bad) sub push fimull push pop icebp lahf and rorb xor inc fisttp xor inc push shrl push xchg mov mov outsl xor xor (bad) je xchg fidivr in mov (bad) jmp ja ret cltd iret lret add mov stc jnp nop adc jbe pop shlb clc ret (bad) xchg mov in or popw dec mov out dec mov dec mov sub imul lcall mov pop xchg cmp addr16 lret arpl fist icebp jp mov mov popa sbb sub in das mov cwtl or push mov cld (bad) jmp jne popf fs icebp aad js push icebp sbb adc pop or xchg pop pop xchg jno lds and stos (bad) jb push int3 lea mov inc add mov and mov sti lret out push xor std dec popf sub movsl push adc in test jg dec cwtl incb lock movsl ret push jno xchg in fwait stc popw jmp cmp pushf mov stos imul icebp call mov lahf ss and push jae xor sub and mov add inc leave mov xlat movntps arpl mov mov aas clc lds xor xor pop jno in push frstor aas adc ja jmp cmp jo daa pop mov leave mov pop stos call (bad) jmp mov int3 ror sub pop lret (bad) mov ljmp jbe lret pop sub pop pop xchg pop test sub sub add xor notb or bnd xorl ret sub inc sbb push inc mov arpl sti lahf ret jmp fdiv mov aaa (bad) sub add out jns (bad) add mov leave adc ss ds out sbb divl cld push loop push jb insb dec jge mov mov push rclb mov sbb mov push push int3 lds cld inc sub cli xchg ret scas mov add fbld imull xor sub idivl mov mov mov cld stos mov mov push jns imul (bad) inc imul sub add test movsl dec jp icebp mov adc sub xor xor in pop mov lods dec mov in mov add lods xchg xor push lcall daa shr xor repz in push cmp push scas (bad) adc sub push popa jmp xor mov adc adc inc loop xchg aam mov dec cmpsl fstpl or ror cmp and sub sub mov or mov sbb and sbb dec jo fistpll popf (bad) cmp mov leave out ja inc adc sbb jg xchg mov cmp add xor or arpl mov adc andl jbe xchg pop mov xchg push loopne jg jl daa pop out mov and les cld or cmp jle mov (bad) imull fmul (bad) cltd lea daa jbe gs repz imul nop lcall pop lret cmp cmp mull fadd fsubs or lahf cmp imul rol xor and movsl xor shl dec adc sbb xorl shrb out adc push mov imul jecxz jecxz sti std adc and and pop fsubrl push add outsb and sub mov add mov cmpsl push pop jmp in mov arpl not stc adc movsb mov xchg jge out jae test push cli mov lret xchg dec in mov shll (bad) xor jecxz pop stos xor dec test pop daa aam xchg xor mov lock mov les test enter mov test scas (bad) out cld in in ds andl mov mov icebp fcmovnb adc mov dec adc mov (bad) xchg dec xor push les (bad) mov sarl dec (bad) dec xor push nop or sbb shrb cmp xor (bad) roll pop fldcw push enter and xchg rclb movsb pop lret in dec or gs xchg ljmp sub mov stos cmpsl rorb repz sub or (bad) mov out outsb outsl das adc nop pop mov call hlt scas loop test and push lahf jecxz (bad) xor mov push ret or or in xchg push cmp sbb mov ss mov ljmp sub and lock push sbb fstp cmp sarl ret clc add xchg add out mov pop mov jmp or testl pop push mov cltd push cmpsb outsl dec in repz jo jge cwtl add pop ret fimul and push enter lahf mov and scas push into adc mov mov xchg leave mov bound (bad) push test sub adc mov and jo pop cmc jg sti bound ret mov pusha lret and add cmp into cmc cmp cld cmpsb sbb or sbb (bad) cmpsl or lock repnz add push in mov xor push lds test cwtl add imull dec push les pop fldl pop clc popa inc add xchg and sub xor mov push addr16 sbb ds and pop add mov sub ror imul jnp shlb jle ficomp loopne adc lods imul inc adc inc (bad) adc jmp pop and sbb (bad) (bad) push sbb dec pop mov rclb add mov mov outsl xchg xchg lret test sarl daa sub into lock ss pop std push daa out bound adc loop jle (bad) imull movsb xor jle jmp xor jecxz mov aam jbe pop loop fisub jle dec pop mov ret mov lcall movsl stos xchg mov pop mov in enter in (bad) js pop iret bound sbb addr16 iret repnz (bad) je inc add pop int3 inc es xchg vmovlpd scas repz repz add lret jge ljmp xor bnd ss push in imul iret sub hlt incb and das lds or (bad) add or cmc (bad) test scas sub lds add and data16 pop pop cltd fldcw push xchg fidivrl sbb int3 aaa pop adc loope xor xchg popf into scas aam xchg out lret icebp std push loopne jno mov (bad) mov fnsave (bad) and pop imul mov or pop out popa mov fisttp movsl add mov pop dec dec mov lods xchg std push (bad) repz or push in movsl lods mov negb nop pop dec sahf mov iret dec sub rorb aas shrb jb adc mov jmp fcomps sub mov cmp mov add sub aas (bad) repnz mov xor ret sub icebp jmp and push xor into mov pop movsl pop xchg jmp insb cmp sub xor (bad) jmp lahf into mov ss fstps lret or or movsb (bad) and xchg out lret icebp insb cmp adc xor pop sti sub scas movsb loop lods shlb mov dec jecxz lret mov mov jne mov xchg icebp addr16 lahf jno test dec fimul mov fstpl adc mov idivl xchg es into into dec call add mov sbb movsl pop pushf xchg lahf jle in dec jo dec sub fistp adc (bad) ja cmpsl lahf inc cmc xor cmpsb shrb call jmp lret add lods mov lret outsb push push push fbstp mov push fild sub cmp insb ja push pusha stos mull lahf (bad) test add sbb lret mov push adc jecxz movsl dec mov dec xchg (bad) out call scas mov xchg sti loop rclb mulb sub mov in clc ss xor pop dec jmp ror and outsl in das xlat xor jmp outsb cmp inc xchg xchg mov fmuls mov cmp pop jmp mov jns out push sbb xchg mov (bad) popf je pop push mov or insb pop daa iret jne outsb xchg nop popa ljmp pop mov cmp xchg fisubrl inc sbb jmp sti and lods jg test xor (bad) (bad) sub and repnz out cmp inc inc and adc push jg mov enter mov mov sub std adc push (bad) mulb sbbl push cwtl mov or into and int3 xchg sahf dec mov mov (bad) (bad) mov cmp cmp fsubrl bound icebp sub mov cmp xchg jmp mov pop mov stc mov or or inc stc repz imul fchs lret jl or mov repnz pop iret jmp dec movsl mov push out jns pop dec xor movb xor icebp jne fist repz mov scas mov dec pop out jle push fdivl outsb mov fiadd (bad) ljmp cs aad add out add iret cli pushf fcoms pop inc xor fs add dec pop sbb loope lret aad add hlt add cwtl jp cmp pop adc sarl fs fs out lret rolb daa testb or mov push inc dec mov pop rcll mov mov mov ret cmp das lock dec shr int or dec jge inc jbe mov dec xlat popw pop cli in cmp or mov repnz xchg rcrl add cmp xchg leave cmp fldenv cltd xchg iret aas cwtl push icebp dec pop lret mov add push mov or out pop xor add (bad) mov icebp lahf lcall dec aad sub jne das in pop xor pop clc jno xchg dec scas sub lea pop xor out add mov xor (bad) icebp (bad) and lahf add ficompl add ret xchg push jl push push lahf xor mov cmp jne imul stos lea push fsubl pop (bad) test lret lock sub jmp mov inc sub xor rcrl mov pop cli sub divb sub enter fadds icebp pop mov inc mov shr sub cs sbb mov (bad) loop fisub lock push (bad) jmp pusha cmp xchg cmp cs cmpsb pop inc inc or out (bad) mov mov mov (bad) in push loopne (bad) sub lods (bad) mov pop mov jmp out dec push dec sbb dec inc iret mov inc xchg pop ja (bad) mov out inc iret leave repnz or iret mov sub into repz mov mov orb imul out ffreep push add movsb mov dec in into mov jmp ret jo mov xchg out cld jg adc or loop jmp (bad) xchg inc lret xor lret andl pop daa xlat insb imul clc xchg inc jmp repnz jnp add jle add adc adc and js or bound push adc push mov data16 movl fs mov mov imul add mov popf jp xchg cltd adc jecxz (bad) in das jne adc mov in and adc scas fbstp sub out sub cmp or notl inc in loope adc scas aam scas mov pop call stos insl aad push mov lretw pop call stos decl cmp lcall push push push push pusha mov sbb fldl rorl sub cld stc add loopne data16 mov mov in (bad) xor add jb or popa subb mov imul les add xchg out mov and out lahf inc jl xchg not or out imul dec maxps rcl xor std fdiv sub fbld push pop fimul mov mov jle rcll sti int ficomp adc add cwtl pop push pop sub pop loopne mov sub and mov or cmpsb pop jne and mov addl rorl pop mov add push push push outsl pop mov mov push adc jmp add (bad) mov pop mov and or push (bad) mov pop push mov imul sub xchg add test xor push movsb mov (bad) stos cmpsb and pop movsb test fnstcw xor or test xchg lods lret push mov push aad (bad) les notl std into and mov dec or jmp ret add jmp mov repnz mov push test in push les adc popa dec add ds cmc fidiv dec mul pop add fimull (bad) dec mov (bad) lcall imul lret loopne xor loop ja ficomp out jbe fldl clc mov adc mov xor xchg pop or inc xchg or pop cld ret xchg sti add dec (bad) repz adc neg dec and scas lock mov (bad) mov iret cmpb xor idivl and or xchg add lcall xor jbe daa std mov and data16 testb ja out inc cmp jge mov outsl cmp sub repz mov xor sti pusha fiaddl rorb xchg xchg pop and sub jb mov or lock mov sub adc ret add dec stc lret pop mov je adc flds stc mov jne xor fdivrs sub daa add sub lds repz xor leave jp fidivrl sti xchg fisub shll imul je daa pop xor jnp imul std inc aad push imul jo popf jbe push inc fnstcw test jecxz inc jnp xchg mov or scas rol and jb sub xor aas inc out or jmp lret mov add imul loop into jle (bad) test sub jne ret mov xchg mov adc out mov mov sbb mov outsl fnstsw xchg (bad) pop out xor and push out xchg es rorl fstl cld test (bad) out faddp stos hlt repnz cld pop movsb scas mov and comiss stos cs inc iret add fdivs jne and ss add push dec clc ret xor (bad) lock sub mov lret jle outsb xor sub outsb dec pop loopne mov xchg mov dec push fs pop mov mov repz enter push cmovs paddq (bad) fild (bad) repnz jmp repz mov test mov push sti sub daa pop ljmp jne test xchg xor mov fwait pop pop add dec stc dec mov pushl (bad) adc ljmp pop push inc lods xchg and and dec jmp xchg pop jo jge mov mov das pop cmp jo mov in in daa test add sub and push push das cmp (bad) inc adc ret dec stos lret (bad) mov jns cmpsl shr and call out sbb xlat popf jno inc ljmp mov ret or lea jl mov out xor pop inc or sbb add pusha jne nop nop adcb xor lcall push sbb and xchg iret stc ret fimull movsb and movl repnz iret mov lds push xor ficom pop dec (bad) cmp js inc imul enter jmp push ss xor add push lea loope lret pop ret movsl push aam jecxz sub and dec xchg idiv mov dec ljmp adc inc push dec stos mov xchg in jg mulb fistp xor lods divb subb pop lock pop xchg cmp clc icebp sbb pop lea xchg cli push pop aam xchg js iret lods mov or pushf pop push lret fidivr das mov and daa add pop add xchg (bad) loop adc jg mov es add mov test sub outsl ret cmc jae and out adc adc adc repnz fs xchg xlat mov lret pop inc les cmpsb mov cs (bad) xor xor fnstenv dec or bound ret cmp cmc (bad) movsb inc movsl or (bad) cmp inc and lcall das (bad) cmp xchg punpckhwd lcall mov jae mov inc jno inc mov pop aam sub std repnz fistpll dec cs add or shrl out sub cltd jl or xlat and (bad) repz mov pop mov ja dec daa repz cmp add repnz movaps mov iret xor and and add and xor idivl inc dec jecxz sbb or cmpsl (bad) pop dec stos js mov std out xchg jecxz or (bad) or int std enter cmpsb push in jp in cmpsb es sub xor popf jmp addl cmp repz shll xor das mov icebp or sahf inc inc inc movsb insb xor int3 repnz xlat stc adc and stos inc sub xor daa or (bad) outsl dec add and mov push pop sbb jno into dec pop das jecxz fisub sub or xchg inc sahf mov dec lret out xlat mov pop loop je ljmp adc sub bound push faddp es pop jg ss and lods popa mov mov add repz (bad) mov sub jae sub jecxz sbb pop and lds rorl or out int or mov (bad) mov data16 push mov xor (bad) pop out (bad) push out or ljmpw scas pushf shr pop add inc adc push dec scas jl or ret ds sub or or lds push aad or cli xor and pop fistl ljmp and ret cmc ret sbb cwtl adc stc xchg cld adc pop rorb ja adc popa inc xor xor test mov aam lret das fstpl or or divl xlat popa outsb adc out xor sub in ds (bad) pop pop xor jne icebp lea cmpsl and test or add add mov dec dec daa (bad) push cmp add xchg sbb dec scas jecxz xchg stos push mov mov adc xchg shrl mov push lcall fnstcw mov call dec jae xlat rcll dec xlat sbb int3 nop fcmovu fs pop movl popf rcrb or jae xchg add std cmc (bad) xor mov push jnp ret stos leave rcrb mov dec inc adcl out dec mov cmpl lcall (bad) mov jne or idivb stos adc and frstor ja cmc mov mov xchg bound (bad) std test sar mov dec out pop cmp int3 xor and sub pop flds add int3 loopne mov out jecxz or jns xchg out sti mov xchg out fstps je xor mov xchg dec add sub cmp mov bound xor (bad) pushf jmp mov sub jae out jne pop push pusha lods or and xchg aad cwtl outsl lock jmp fstpt mov fisttpl pop sar add push idivb repnz xchg jl stos gs in outsb sub pop xchg lret fsubl leave mov stos loope dec mov and fldt or and push cltd mov mov dec rcrb cmp (bad) lret in mov scas fs mov loop xchg loopne mov dec adc lahf cld xchg push xor xchg jg xor dec iret cmp jae out in test xor and leave mov add jo and inc test fdivp sbb sarb mov in nop or sbb pop stos sub pop fimull andl out mov add sbb clc adc push adc mov (bad) jmp inc sub fist pop imull movb ret jmp jno int3 mov test pop and mov in popa jp clc cs and lret push insb int3 pop sub mov jl outsl dec ret xlat cmp repz adc test xlat int3 aad lahf lds sub add cmp mov xchg (bad) mov pop out xchg xchg jecxz inc addb loop xlat mov dec inc and arpl adc pop das sub sub (bad) adc scas cmp mov aad inc fbstp pop dec std aad stos cmpsb movsb dec in std lret fdivs add (bad) imul dec xor jle jge jl div ret lock push jmp lock pop (bad) les repnz mov test shr mov stc hlt ficoml sar push jo loope xor jl je das mov jns dec das daa orl pop lahf ftst dec push aam and dec push sub pop lcall comiss std xor xor cli jb mov sahf bound or dec arpl sbb xor jns mov stos sub lcall push es sub fsub lock or pop and fcmovu xchg xlat mov testb xlat add ret cmp jnp adc mov lea test mov imul cmp cmpsb sub mov jne cmpsb push rcll push icebp in leave cmp movsb xor aaa (bad) cmc rcr xor xor xor mov xchg lea jne lds mov test sbb popa aam out jecxz jl push scas inc and xchg gs inc add mov lcall jmp or sub in popf push xor aad mov cmp inc sub cmp fs cltd xchg divl and daa pop pop push ja das das add inc test outsl lret into push inc mov out xor cmp or add data16 in jecxz pop int3 push fnsave fsubr add sub cmp movsb xchg xchg aam push sub add add notl pop mov lahf cmpsb scas lret subb test add pop mov adc adc orb mov rorl xor xor pop xchg xchg ljmp popf xchg add and fnsave ret mov jge xchg mov jp lret sti mov fidivl mov repnz jmp xchg cmp or push pop fmul ljmp fwait and or sarb out stos repnz gs mov inc jmp and mov popw mov std cmp lret xchg add enter mov es fucomip cmp jo adc xorb pop dec test lret sbb xchg addr16 lcall xchg push mov and adc adc ja or addb push mov loop mov and push xor in rorl xchg stos and cmp push (bad) jns ljmp mov das push mov pop mov or push push mov lea sti pop in arpl adc cltd add loopne testb push xor xchg or jp sub lea jp push push (bad) loop add idivl dec call cwtl jle ljmp push pop rcrl dec cmp ja fidiv adc leave pop cld jmp pop and pop xchg mov not push mov cmp cli pop xor (bad) sbb enter or aas push push push outsb pop sahf add jp cmpl pop add (bad) (bad) das and out cltd cmc jg ficom pop pop shr cmp push lea data16 pop sub xor pop sbb cs inc add (bad) lcall push dec lcall push adc push jno jo cmpsb fdivl add mov jg pextrw adc fistl pop push sub insb add aas lret adc cmpsb mov js or (bad) sub mov pusha add aas xor mov jo push fwait ljmp or mov fistpll cltd (bad) movsb add push stos or pop pop sub push mov push mov (bad) cmp pop pop test cmpsb sub aam dec pop and push pusha mov roll and or adc pop xlat dec push jge push shl add adc (bad) xlat lock pop dec mov mov outsb adc (bad) stos lret orl xor test xorb clc and push std and iret mov xchg jmp in sub mov push ljmp (bad) hlt mov inc ret adc out push leave clc inc test (bad) stos or pop divb inc add les push mov mov icebp and out cmp mov and outsb std cltd xchg mov outsb mov xchg pushl cwtl leave into faddl daa xchg dec and repnz movsb mov and jmp ret (bad) xor pop int3 dec push cmp sub leave (bad) jne movb sub leave or je (bad) out xor into aad add mov icebp in insl or sbb ret jo fdivs dec mov and mov jnp or sti fildll lret push jns inc (bad) adc mov shlb call movsl sbb inc pop iret inc xchg jl jns or (bad) jno test or jg cmp sti cmp xchg push in xchg sbb roll or or or repz cmp imul fnstenv xchg cli (bad) mov sbb pop lret add mov push shll add lahf jp fs cmp lock lock popf push fwait imul or mov out fs cli adc js xchg bound pop mov mov rorl scas (bad) icebp pop push stos jb sar or or xlat add out fs fadds clc adc sti arpl es fstl (bad) pop bound jae cmc jae scas push push movsl ljmp and pop pushf int3 jae xchg push xor cld lock sub mov xchg dec jmp xchg fdivrl jo pop cs sub lock scas cwtl ljmp fwait dec out mov cwtl outsl mov pop mov ror pop repnz popf stc scas imul sub dec xor push pop and aad jae rcrl mov enter repnz mov test (bad) mov cmp xor clc jle lret pop leave cs or mov cltd add dec stc jle stc loop clc sahf hlt mov je lea and rorl cmp xchg jg jge mov push dec stc mov push sub push pusha leave testl lahf sbb mov repz movsb and or push je jmp (bad) pushf divl add pop inc mov sub inc pop sub adc pop dec scas lret sbb stos pop repz pop mov push jg push or lea push inc push pop pop aam in loop mov cmp push add loope mov mov lret mov data16 ljmp test lea ror dec push push dec je add fstpl mov sub or aad push jne jg pushl movb ret mov pushf std mov jecxz movsb cmp push mov out cmp mov bound negb add fisttpll xor push rcrb (bad) mov stos dec cltd jb push (bad) testb jl shrb iret sub into in rep mov cmpsl outsb pop mov mov fstl dec fdivrl gs rcll mov pop mov or dec push pop clc add mov mov jns enter daa xlat mov fisttpll lret rorb lret ljmp lret sbb adc mov xchg fs lock xor mov jo xchg (bad) add mov mov or das stc mov jle mov sbb mov gs or push pop xor in xor out roll or popf cmp sub xor jmp lods cld or mov dec pop cli popl cmp negl xor or cli fwait mov sbb and pop and xor or ffreep bound cld mov dec out push mov jns ja repz out jns imul out or pop fucomip pop dec mov out dec push and and das (bad) enter jge inc aad dec sub rorb repnz lahf insb outsl call sub mov xor aad dec mov jo mov sub notb push ljmp sti jecxz push xor dec loop call mov xor ja adc adc jmp xchg ret mov or outsb mov fisttpll scas int3 dec shlb jb ljmp cltd pop cmpsb rorb mov jns mov ljmp lods fbld xlat scas mov and mov adc shlb dec leave int loope aaa mov xchg dec jmp sub dec imul sti mov or and jne mov imul adc add jge into and dec imul pop sub mov rorb les (bad) and mov into jbe push fldcw test fdivr add jge cmp out cmpsl xor sub rcl sub sub leave fst cmp adc mov repnz cwtl lcall push xor (bad) or nop mov sub mov lea jmp jb jns sbb dec ja dec mov or mov leave decl popf sbb mov jp fidiv orl push leave and bound mov sub mov imul icebp add pop xor pop jmp je pop or fcmovnbe arpl xor and cmpsb push pop and clc js push jmp gs mov ret add outsb ss loopne out sub lret mov fidivrl ljmp inc xor or xchg inc popa movsb lock mov cltd jge imulb pop in mov (bad) mov or sub inc jle (bad) pop push leave sub imul xchg xchg and pop mov aaa xchg mov and repnz xchg sbb mov pop stc das iret fistpll mov dec sti and ret dec (bad) mov add stos and inc adc add and scas cmpsl insb dec and xor repnz popf out adc mov pop dec enter fdivrl adc mov or push enter fnstenv jb clc repnz mov jbe jmp fwait xor mov icebp (bad) and stos mov (bad) xchg sbb ret cmp mov dec in aam in scas clc nop mov push fcoms mov cld mov and pop das pop adc movsb (bad) xchg cld mov jnp into scas mov sub xor cli ret (bad) shrl (bad) ja and push loop pop test mov aad cmp pop pop adc (bad) mov or (bad) sub push push or clc xchg dec jmp pop (bad) fistpl and or and add xor xor cli out inc sub repnz ret pop jp xor loop repz scas or push cmpsl sar pop add mov or js mov out imul adc movsl inc (bad) dec scas js loop jl (bad) test push into push sbb xchg ss pop mov hlt outsl inc negb sub add dec xor lea mov adc or dec xor stos popa add sub ds fildl dec ficom or fsubp jb sbb jg or sarl xor fcomip (bad) push dec jp sub push push sub push dec mov or rcrb mov movsb stos and and inc mov adc mov rorl pop dec test pusha iret and or out loop notl or pop in jmp scas dec mov out push dec sti mov inc int stc jecxz,pt leave leave mull pop iret stos jne adc loop call enter adc jb and sbb adc sti push loop sbb push out mov int xor rolb cmpb jp es bound rclb scas pop sub jg and popf xor mov es call in cmp sti and stos sub xor notb inc mov jg push enter fist mov loope repz mov lds xchg and inc sar fs scas int3 pushf clc mov mov fidivrl cmp sbb xor pushl scas sub mov pop sub mov std mov clc and dec dec mov lods sub sarb rorl or pushf stos add jne jno dec xor inc sub xchg jbe pop push std add gs and xchg shll and mov xchg enter fistpll in fdivrl lret xor mov leave pop lret idivb xor sub push je sar xchg les adc push or pop mov sbb mov fs les xor mov xchg cbtw mov icebp movsl notl and lret xchg jne out push out dec stc cmpsb mov sub fimul call call jle (bad) pop mov or out sub rcrb mov in mov mov xchg std les daa mov fbstp idivl pop cmpsl (bad) je cmp fimul lret test mov jg repnz test shl addb xchg fdiv jge ret dec pop mov leave test stos std aad xor sub outsl push nop cmp mov bound sub mov sub pop xchg aas out add mov push push mov pop cmp xor pop (bad) dec fdivs or or push jg (bad) dec add sub xor mov outsb add push jne xchg cmp rcl mov jge (bad) pop add outsl dec xor add sbb sub cld xchg shrl test xor pop mov push mov popf loop fisubr (bad) pop daa aam add clc mov sub enter pop adc jl mov pop cmp js ljmp incb push stos (bad) test jmp jns push or daa jns pop sbb jge xchg (bad) xchg insb rolb imul icebp ljmp xor je dec jmp test cli mov and or outsb cmp fnstenv sub jmp push mov and inc or enter lods jle icebp mov dec cld jbe repz push mov mov mov stc mov popf pop or lret mov or ljmp pop mov mov pop fnstsw adc xchg pop pop mov mov jnp jne pop mov xchg gs adc add push push ficom mov mov stos push mov imul add xor and lahf dec adc roll dec je cmpsl aam jo shrl xor mov mov pop pop ret push in and addr16 mov xchg lods mov pop mov je inc imulb aam dec cwtl xor mov xchg out mov imul lea cmp outsl lock pop mov push aam je lods ss daa aad jge jge nop jl sarb mov add or insb push pop mov cli sub cmp lret inc daa mov icebp push loop pop insb fs fstp movsl data16 cwtl dec fidivrl push pusha inc or xor fdivs xchg xchg loope pop lods mov xchg shrl add fiaddl mov mov jmp adc pop adc xor cs sub fstl call inc mov mov fistl out inc (bad) pop mov sub xchg insl mov stc mov mov dec sarl xor (bad) sti add imul inc jecxz jbe push mov mov mov sti fdivrp dec mov fistpll (bad) xor push jne inc sub mov cmpsb xchg jb mov bound adc pop push adc mov pop stc cmpsb dec mov imul push cmc jno ds mov jbe pop cmpsb push add je scas lea cli aam pusha push jb sub testl xchg cmp mov (bad) sti xchg iret das in pop or push mov pop or pop push mov pop pushf and sub ss sub or xlat sbb (bad) adc add mov stos mov sbb push lcall lret and inc pop (bad) jge pop mov ja xchg divl je jae add adc jb add add push mov mov xchg dec pop lods cltd movsb and push jns xchg cli addl dec inc pop or insl add jbe arpl push stc jp in loopne pop xor ss pusha push fs aaa push mov pushf into fdiv sub fldt fs cmp inc out mov inc (bad) pop mov daa xor xchg push aaa sub stos lock pop daa push xchg es gs add mov mov lods ss scas xor xlat call shl push add xchg int add or dec icebp test lcall and movsl lock inc (bad) mov adc and mov mov lret out popa leave sti jmp ljmp push xor ja dec dec out scas lret mov test sub out daa pop jmp add sub pop shl pop adc out and idivl pop inc mov cmc sbb jbe (bad) ljmp pop mov dec sub cmp xor jle ds mov mov pop js lock addr16 add fnsave jmp dec pop fwait test ret cmp pop adc std das sbb push jp sbb ffreep dec add mov sti sbb or mov or or xor add xor (bad) aad ror lods popf cmpsl (bad) lret or cwtl jbe mov xor in clc pop out dec aaa fucom adc loope orl add shll cs push int3 jae pop (bad) sahf test adc fstp outsl int3 xor out pop imul ss cltd adc or mov mov loope pop jnp push or xchg jno cs into xchg lds xor stc stos push and sub aad dec test ja and xor ss or mov jg or add fwait or setne sbb std not jmp push sbb mov cwtl movsb out mov sbbl inc lret push and out xor sbb jecxz sti ret xchg push pop sub imulb fs cmpsb mov mov sbb icebp xor and push mov gs daa fistp push mov fnstsw xor xchg sarb push insl dec das gs sub sarb lds loopne (bad) (bad) icebp popf xchg fisubr and fwait lahf gs cli mov mov ds mov sbb movsl sbb jno roll in dec pop xor dec ret pop sub jns xor repnz lret ljmp dec (bad) (bad) repz repz jmp das lret or nop/reserved test (bad) mov pusha push pop sub and roll sub dec push lret mov mov fistpl adc lds push scas out shrl xorb mov push test pop stos popa (bad) jmp mov adc mov jmp adc fldl2e das jae movsb hlt xchg rcrl (bad) xor inc arpl push pop cld adc cmpsl push inc loopne sub and xchg sbb add xor shrb inc inc and cmp pop out push and cld fs aas mov mov dec out ret cwtl es mov inc sub sti jne imul pop mov mov dec and xchg xor nop xchg push sti dec xchg mov mov cmpb test movsl fstps xchg pop xchg iret or cmc in sub inc leave (bad) dec movsb push mov shrl ret xor pop add adc popf dec out xor pop icebp or pop and out (bad) mov ret cltd ljmp or lcall mov or incl sub push stos leave cmc and iret inc (bad) nop xchg mov cli repz and sbb adc cmc add fistpll jns inc sub mov jne jmp cld popa lods push (bad) fstl int loope cmp and pop mov or xor test out sub mov lea out xor push int3 hlt xchg inc stos ja aaa mov cmpsl pop lcall arpl sub mov lods push xor fidivr jmp and jecxz sub cltd pop pusha add out jnp repnz ffree mov (bad) mov mov popa fidivrl test stos adc sahf sbb xchg or ret clc inc add xor xor ljmp in xchg div sub pop aas fsubs popf sub ljmp push sub ljmp sbb xor and and mov icebp dec or out cli fs les pop imul jp dec stos fs icebp mov lret mov cmpsb insl adc (bad) shr pop in cmpsl nop cwtl dec test xchg lret mov pop push je and cltd inc pop (bad) ljmp scas cmp and das std mov mov ljmp aaa mov push cmp repz cmp inc in xor mov adc sub mov outsl shlb push pusha in adc or pushf loop (bad) mov adc and jg lods sarb xchg aas mov xor fldt and jg add or jae sbb pop orb iret and jae xchg add dec xchg inc push and dec dec lret clc xor and add cli dec scas int fs sti and xchg adc fdivs mov jmp call xchg or (bad) loope sub sub cmp lret mov sbb and add or push insb lret pushl push push add loop pop subl fs xor fcmovne sbb ficom scas loope sti into pop daa and fdivrl add push fwait jle dec divb mov leave push sbb lahf xchg pop cli jae pop out pushf loopne pop dec jg inc popf adc mov and jg sbb push in bound (bad) jge add bound sbb sbb movsl cli out lahf jnp scas in repz jae scas mov push ficom (bad) mov or mov add mov add xor nop call mov cmc inc xor add mov dec xorb int3 fist add decb into adc xor push cld lret push ror cs aaa ljmp jno xorb push movsl inc push xchg jp lds sbb sbb dec mov insl stos inc adc mov cmp mov lret aad cmp and and mov popf rclb mov ret inc push int3 xor (bad) add dec or and popf pop xchg nop mov into mov pop sti cmp add or xchg mov sub push or or fimul xor mov mov cltd cmp push and mov or xchg icebp adc and loope adc adc out xlat mov mov gs (bad) out dec xchg add dec lds cmp jl or in add das or rclb enter and das mov ret loope mov dec mov mov ficomp or jge test shrl xchg iret pop adc rorl add inc jb xor add and xchg movsl push ret push push mov add dec mov sub das out imul sub cmp pop and cs xchg stos push pop cmp insl imul out clc sub fsubl sbb and popf sbb jge sbb je mov add or fdiv iret lahf int3 cmp sub test or mov cli cmpsl mov sar call add pop stc pop inc insl mov jae aaa movsb or enter and test mov data16 mov adc in xchg mov xlat xchg shll xlat xor ret jo inc push sbb pop xchg mov sub and mov (bad) negb jge cmp data16 ljmp pop sub jmp dec push out push jae xchg add inc mov pop repz sarl mov decl inc sub lret lds or fisubr cs and add testb (bad) leave and push push popa (bad) pop ljmp cmpsl lret pop arpl and pop jns cmpsl add mov cmp mov test pop adc fs out out jle pop jne jmp sub lods mov sub jno mov in push dec adc mov inc xlat cmpsl sbb adc bound bnd xor leave rclb mov mov psrad sub rcrl shll mov and pushf cmpsl fstl sahf jg and xchg lret mov pop (bad) loopne fldenv jmp jae out push adc cs pop mov mov or adc (bad) cmpsb pop daa loope mov jg bound xchg and pop jle (bad) add mov mov inc pop lds jle (bad) icebp add loope jb xchg mov sbb dec call jg dec add xchg outsb dec sub xchg jbe lret (bad) xlat ficomp sub sub push xor mov or cmc push test leave push xchg jl movsl (bad) pusha push mov das push cmp rcrl push test mov xor jno or data16 jg mov and mov dec in (bad) xchg inc cmp cmpsb and xor dec movlhps cmpsl or xor mov rcrb jae mov test mov dec xor fdivrl cmpsl sub lret adc fidivr and aad and sub stos xor inc pop (bad) into popf pop adc popf rclb xchg jg xchg inc jo xor (bad) xor clc fidivr add stos mov les lret adc sahf test xlat out fdivr add pop int3 mov or (bad) loope scas out in add ret rcrl jg mov mov mov push ret jg popa and dec enter fisub stc in jmp jecxz pop mov divl jecxz stc std xor jmp adc ret mov adc add rcr (bad) rorl add data16 pushf (bad) in popf imul xor (bad) mov popf jo dec (bad) mov jecxz push adc mov ja pop dec add movsb fdivrs mov sahf and jge sub shr loop ds or mov mov cmp pop mov lret push jp mov xor fdiv (bad) lock (bad) pusha fnstenv push add jmp push fisub sub iret dec aad (bad) cwtl or jecxz sub and les rcll paddsb in add call cmpsb cmpsb mov test sti mov hlt push add xor (bad) or scas and add outsl call pop enter popf fcompl cli push in jnp xchg or and jl and add mov leave sbb sti xchg rcl sub sbb popf daa dec xchg xchg ret sbb mov xor sbb sub jmp cwtl push mov inc (bad) std xchg (bad) rcrb bound lock add movb loopne jl inc xor pop imul mov (bad) xchg test or and aad mov sbb dec push (bad) xchg push ss sub pop cmp stc leave daa decl out add pop out sub mov fldl mov clc dec (bad) aad and mov mov call add jecxz pop mov sub xlat add sub mov xchg mov dec push out (bad) ljmp pop leave loope or mov out mov mov add jp mov adc mov push roll mov mov arpl xchg xorl xor imul dec pop stos fs mov cmp and xchg int aas out pop ss and cmc (bad) aas jmp lea ret mov out cmpsb ret cmp push mov insb repz in and and and iret lcall mov lret xor sub ret mov jmp xchg mov dec rorl lods cmp or aaa dec sub xchg jl pop jmp (bad) xor or daa mov fdivrs ret sbb inc lcall mov (bad) in ds popf jge ja cmp pop pusha xlat and mov lahf or (bad) xchg repnz jns sahf or mov cmpsl fisttp sub sub xchg lods (bad) das icebp hlt sub xchg push leave cmp add cld dec ds (bad) sbb (bad) pop dec jl dec pop jg bound xchg push scas jg fwait cmp mov pop clc add repz add fbld stos (bad) jmp xchg fcmovbe jle adc or mov dec bound xor mov pop jg mov xchg and xchg mov jg push stc test jl xor dec mov in add xchg add loope dec dec popf pop das imul orl push push xchg std add (bad) loop sbb (bad) add push mov jg lcall pop mov xchg jmp add rorb mov push push mov dec jo pop imulb mov test bound pop mov lret mov call and pop push sbb add aaa jae dec loopne fnstcw cwtl (bad) xchg (bad) sub push push mov mov xor pop shl push not xor xor ljmp sti pushw xchg inc sub sub cli mov sub std sbb pop andb jns stc mov push pop ficomp push cmp iret ret or push add jbe outsl adc mov in lea rcrb lds xlat and inc push pop xor pop push pop shr push jns or icebp (bad) insb adc add int and ljmp pop mov (bad) pop adc pop jo fldcw dec cmpsl int jp idivb pop ret add mov add jmp xor scas test decl lret rcll loopne jecxz es scas repnz adc (bad) icebp out call xor cli mov and je aad mov pop test (bad) lret int sub ret arpl icebp fs clc fildll jge movsb cmp and repz nop fs mov inc pop cld in xor stos fmull cmp add (bad) stos gs add pop addl xor mov dec out or enter pop nop ret test movzbl xor and sti leave (bad) jne inc daa cmp (bad) popf inc xchg imul inc out stos fsubs fsubrs das xor ljmp jmp push mov and push mov push call cmp sbb (bad) cli adcb xor ret int jp xor (bad) icebp lcall jne jmp fsts mov ljmp add xor std or test (bad) jmp inc fs (bad) (bad) push mov scas mov add mov shrb cmp and testb xor xchg jnp jns dec mov mov jbe or xor dec sahf enter fldt fcoms sub insl sub inc xchg fild (bad) das jbe or inc f2xm1 inc mov nop ret xor (bad) imull arpl das xor popf pop imul add sarl or mov mov cmp fidivl clc adc shrl (bad) mov fst les dec mov xor cmp mov ljmp repz pop dec out aaa push mov mov pushf loop lret sub das rclb fs cli fnstenv inc clc add repz jbe pop adc (bad) xor cmp icebp iret sbb xor xchg sbb nop jnp adc insb bound in int outsb aad sub mov dec adc cs xor and data16 lahf clc dec xchg iret dec jge cmp xchg jl push or pop jl fs jmp js jmp sbb insl sub (bad) cmp insl sbb sub xchg daa jecxz cmp pop ret int3 fsts ja inc inc aas sub jmp and xor jns xchg ljmp popf or push xchg inc or push daa jl int enter cld rclb loop lcall incl daa fldl (bad) mov ret push fsubr push or xchg mov dec add imul mov dec and or shr jmp mov pop xchg gs add adc dec mov in ja pop (bad) push call push stc xor cmpsl rcrl adc cld push cmpsb and xchg jmp ret push and jne (bad) dec fidivr pop movsl and subb or das pop push pop adc push sub lea xchg mov cltd jno aas int gs popa push sub aam and repz outsl jb test repnz mov push in mov test mov bound or lahf cmp clc xchg xchg jno and jbe jg push out movsl test add mov pushf adc mov (bad) xor xor icebp (bad) jle sub imul pop (bad) mov cwtl push inc test mov xor jg dec pop xlat sub lret cmc fldcw pushf dec aam xor mov cmp std cwtl push and mov or pop cmp or (bad) mov cld push and pop push mov sbb or incl jb push pop loop lcall cmp cltd adc popa int (bad) pop push das add rcll push bound adc push popa testb pushl inc xor ljmp scas mov xor stc icebp pop xor xchg pop ret out pop (bad) or adc xlat test push iret add cwtl jnp or pushf jp dec lret xlat mov xchg rcl push outsb mov insb or push mov test sub jns cmpsb inc inc sub pop repnz dec mov jmp inc mov (bad) xor daa (bad) outsb sub fwait ljmp sub and and xor lea push stos sub hlt out pop popf fstl mov clc clc mov dec ret pop add scas or adc pop das lret xchg mov test xchg dec scas mov add lods ljmp paddusb shr adc call out aas (bad) (bad) pminub inc adc ljmp cmpsl jg ss mov sarl xor mov xlat lods aas xlat stos sub mov pop mov shll xchg jg icebp rorl sbb sub pop push inc mov scas (bad) jmp mov mov out mov fcomps shrl pusha sub test jmp nop jno or pop lcall sahf and aam or push mov and or and xchg (bad) fldl or sub mov out or sub ficom jmp (bad) js or cmp mov dec pop stos sub outsl test (bad) push outsb ja stos fadds daa add (bad) es shr fwait xlat mov call inc xor popf or sub aam les mov daa lret inc imul test movsb mov repz aas sub dec or xchg sbb lret push sub mov push mov jns sub pop jmp roll lret mov mov sub mov loope add movsb lods cmp cltd lret jp shrb test (bad) mov mov loop jl push punpckhdq out xor xchg dec add sar mov sub fs stc push or or ror jecxz and leave mov cvtps2pi repnz fldl2t (bad) cwtl pop push jg and cmp mov fbstp fucompp loop std xchg pop cmc mov insb pop mov repz cmc jns xchg cmp gs mov inc idivl cmpl add dec sbb sub dec fisub cli out push ret clc push mov xlat out xor dec lret sub or std sub push mov and loope ficom insb mov imul (bad) and add xchg loopne add rolb and dec xchg lods rorl xor jne add pop pusha movsb add pop and sub cltd jmp icebp fildll test loop xlat xor (bad) jnp stos push dec imulb out decb stc jl ret sbb leave jecxz in sbb sub add pop sub dec push stc lods dec insb cwtl pop add hlt repz sub mov repz jne adc test loop ret or lret jns mov leave les imull (bad) xor faddl aad cmc jmp sahf mov outsl xor lock call in adc mov pushl or sub add sub mov pop mov lods in xchg stos cwtl out f2xm1 repz js (bad) test xor scas sub cld loop xchg sbb and jns cmpsl fidivr or ds imulb xor icebp pop sub push enter fidivr or sub popf mov and mov jge popa pop mov push rcll jp inc scas bound bound stc or add add ds mov sub testl ljmp xchg jns dec cmpsb outsb mov sub mov pop mov xlat pushf cmpsb sub mov lret pushl (bad) repz xchg fs fwait pop cmc cmp enter rcll sarl call gs jmp rol dec dec mov rol push sub pop xor ss sahf (bad) jno (bad) mov mov adc mov loope out add ljmp aas mov mov mulb push in cmpsl or and mov (bad) mov (bad) leave add sub pop stos sub xor ret pop ss xchg cmpb rorl mov cld stos sub dec cmp dec (bad) xor add mull mov mov outsl jno sub stc leave das cltd jae cmp mov in jne decl fidivrl mov lcall into daa test repz arpl dec and out dec xor pusha mov lret iret adc mov jne adc sub idivl xchg jnp push leave icebp sar xchg mov mov or dec pop mov ret mov dec cmp sub lods das icebp push daa fiadd shrl ret dec pop (bad) sub stos sub fldcw loop adc adc nop mov mov cmp ret insb (bad) mov shll mov lret call sub stc scas adc ds sub xor or jl inc add jb (bad) dec sub add imul or fcmovbe jns inc add xchg popl (bad) aaa ja jns (bad) xchg dec and clc mov sub and mov sbb out dec xor lret add divl bound xor pop out jle pushf dec ljmp dec dec jmp lret lret repnz jbe lcall mov insb rcl stos pushf jae mov push (bad) stos mov adc mov or jge pushl stc mov xlat js mov lret jl adc mov test add mov cmp js test lock or cmp out test mov pop loope sbb or (bad) fchs (bad) sbb sarl add leave jmp pop (bad) push mov jo mov sub cmpsb sub ret ret ret xchg cmp (bad) idiv test pusha and or popf inc ret dec lock daa or in sub fs jmp cmc push loope loop xchg pushf and mov pop pop push imul cmpsl fcomi daa push shr fldl adc adc jmp sbb or das iret pop adc movsb mov sub cmpsb (bad) pop sub sbbl or and fist or popf fldenv sub and cld mov xchg outsb dec dec mov movsb adc leave mov sub pop icebp ret je fs cmp stc mov arpl arpl xchg fwait xlat push jmp mov jb loope xor jge inc fiadd pop testl jo incl mov scas pop loop xchg xchg pop pop icebp xor jp ret into inc dec call jnp adc sbb jmp dec mov in dec xor testb and imul jge mov adc divl mov dec jle out pop insb pop mov out pushf and aad xor mov insb mov dec push xchg ja or push daa ljmp fcoms lret dec sub dec mov and cli data16 mov xchg ja aad es jecxz pushf push or add or inc cmp and lods or out idivl sub cmp (bad) jnp push leave (bad) (bad) stos daa pop adc pop push (bad) inc sub xchg daa shr scas loope push xor in xor cmp xor xor mov xlat sub add pop mov stc push push ficomp insl movsl mov add mov sbb sub xchg push lock and dec repnz push les xchg or stos popf ret adc xchg mov sub sarb xor add jmp scas mov pop jb or inc mov ret pop add pop les mov (bad) mov dec sub cmp xlat sti daa aad ret push int push mov cmp dec lret (bad) in in and sub out popf push xor rolb sbb cmpsb ret hlt push push dec sbb cld jb and gs mov cmp mov pusha mov inc xchg into xchg xchg xchg mov ljmp xor jmp pop sub enter cmp cmpsb xor sahf xor or mov xor adc in jle out jge cs mov pop or stos fcoml push roll push mov in add hlt mov hlt dec scas fidivrl int3 lcall cld adc testl or sub jbe mov nop ret or mov (bad) imul cmpsl outsb ja pop push xchg mov pop push mov xor repz mov (bad) mov testl adc sbb leave push outsl jb data16 cmp jmp in arpl lcall cmp xor sahf push (bad) int3 and dec clc scas lret push adc out and sbb add fs pushf repz mov adc sub mov dec mov mov jg mov dec gs jg xchg xchg sbb fs mov mov repnz xorb xlat ffree cmp xchg ret cmp xlat movsl or (bad) jnp pop jl dec push clc (bad) movsb test (bad) repnz dec push je sub xor ds pop cmp and xchg imul repnz xchg in push leave sti pop cmc xorl aas jne mov ffreep push push jo xchg movsb stos mov sbb or ffree push mov sub movsl mov or mov sub loop cmc test mov stc clc leave ljmp shll or loope sbb sub inc stc or inc ja mov insb mov push addr16 pop iret mov mov cmp out in and dec sbb out xor jns rclb iret cli lret mov push fstpl cmpb ds and jb pop dec fnsave push das incl push pop fsubr lret inc andb fstps addr16 jne inc aas fldl cmp and lret mov mov sbb out mov add xor pop cmp push dec mov pushf lahf or popa out loop cmp leave (bad) ds ror daa jl lret fs sub adc mov test sbb aad xchg addr16 mulb jno inc sub pop (bad) add push fcoms scas xor dec and lea ret pandn mov idivl loopne out sub scas sub or ror roll xor xor push inc jae jge stos xchg out gs hlt scas data16 push cmc sub or test stos sub enter sub mov and pop or lret jns in (bad) int3 add sti xchg jg push jle pop into push add stos dec inc or xor jns inc dec mov inc mov rorb jbe and jne out out dec add and (bad) insl inc jg movaps cmc dec lcall lahf inc test xor hlt popf sbb pop mov mov daa jne (bad) jg popf (bad) mov mov call in jb cs aad and xor out sbb sub mov pushf sub lahf clc test mov fcomip scas je adc lret and mov movsb and das insb dec mov xchg (bad) push add imul aam and add ljmp test pushf dec mov mov cmp js mov fdivrs cs ret repz cmpsl jp and clc adc jb ds pop cld mov or sub ljmp xor dec out les pop in add js xchg inc cmp enter aaa and add cmpsb fldcw xor jle lret je jmp mov notb add into sbb adc (bad) jbe pop movsb (bad) into mov cmpsl pop ja pushw (bad) or (bad) out cmp and sub or (bad) sub pop mov and jmp es cmc adc mov daa adc or fbstp sti ficomp in mov mov test notb push int3 jb xchg adc mov mov sub call push into pop lret cwtl dec mov mov jge cmp xchg icebp subb push cmp sbb cmp xor icebp out lret mov fs int3 bound dec push scas fs stc dec repnz (bad) xchg call repz or imul (bad) mov mov xor fidivrl gs jmp mov push stos loopne movsl lods inc insl pop or and je in mov inc or add inc les decb aas int orb adc push xchg push push pusha or cmp sub nop pushf add inc das pop dec lret push mov jns mov lret jmp or and testb shrl jno sub jp add dec xor fisubr int3 (bad) mov ret push pop ds xchg out fldenv loopne repz and pop cmpsb add or push outsl pop jle enter mov fmuls xor or in hlt out pop xor outsl lods sbb imul xor data16 push add push das mov sbb or fstps mov pop cs and out jne jle in nop movsb cwtl (bad) mov lret and aaa fadds and inc cs movsl lcall ljmp and insb (bad) sbb jmp icebp cli xchg (bad) cmp jge test mov and inc dec lret gs lret int jg lods and lret stos lret push adc ret mov xlat stos dec sub or mov mov adcb sub or sub es mov je push pop and cmp aam daa cmp cmpsl mov sub cmp fnstcw adc outsl and or rcr dec jl and push and pop popf sarl add cmpsb or (bad) fstps sarl das add idivl das out cmp pop lret jecxz or (bad) xchg adc mov adc jnp icebp push cmp ljmp and adc and dec pop adc js (bad) out and je xlat push jle jmp mov inc imul lock aad int3 add loop lahf inc fisubl repnz daa adc mov (bad) cmp add scas xor repnz adc outsb xchg xchg test lret notl or mov or mov dec and fmuls es mov xchg mov or cmp jp popa xchg dec fwait (bad) fwait mov pop cs add jecxz,pn lret (bad) (bad) xlat lretw dec pop xor push aam aaa push sahf es add inc pushf out push xor dec aas add pushf stos pop xchg adc pinsrw arpl (bad) adc gs negl sub test fidivr xchg pop out (bad) pop sub adc in (bad) jge pop mov les lret push (bad) adc inc dec fldenv loop xchg pop mov scas push jl push inc sbb xchg test sub clc pop sub pusha sub repz sub inc push das pop pop cmpsl icebp pop xchg cli loop mov test xor pop sbb add pop xlat test xor lock cld rep jmp repz dec ret push jge pop fildl add dec or lds mov mov adc push lret leave mov dec scas jnp and fs scas mov scas adc lea scas mov mov sub xor movsb sub rorb cmpsl push adc daa add sbb clc bound ret xchg adc adc enter or fdivr adc shrb repnz dec or rorb leave mov cmp cltd repz pop or inc int fmul and scas push or cmp sub shlb in inc dec icebp pop mov adc fildll jle mov inc pop lahf pop or test push cmpsb in (bad) push sub push push and adc imull es inc out jb mov lea out and or xchg push mov sbb out sub outsl cmp mov in shll dec push (bad) fdivrs shrl push inc sub lahf rcll bound nop sub and xchg (bad) ljmp sub jp out push mov mov mov mov sub imul inc mov pop jmp mov xor sbb cmpsb into shrl mov mov xchg imul push ljmp (bad) xor fcoms dec out lods xchg (bad) adc shll pop cmp out xchg cmp xlat loope xor mov push cltd add (bad) cmp mull or jle movsb stos pop add in or ret and mov xor jle icebp cmp mov mov cmpsb fnsave pushf and pop add in aad ret pop dec adc mov adc ljmp clc push sbb sbb add lahf cs jmp or inc test add aas cltd mov push sub jno xor (bad) fildll test push inc out adc out shrl movsl lret adc scas loop (bad) repnz sub dec repnz leave mov add scas gs call jb xor rclb pushf cwtl push aad xchg cmovs mov repz out (bad) leave (bad) jecxz dec rclb and (bad) or lods jnp,pt imul es fldcw mov xchg sti adc pop repz and or or add xchg jnp das ds out adc scas (bad) inc sbb push add jmp cld push push mov repnz mov into es call cmp mov mov das idiv cmp scas fmul fisubl add xchg adc jno xchg or mov mov insb inc push fld ss or or cmc mov xchg xchg mov sbb mov sbb les or push repnz (bad) repnz pushl (bad) jns cmp jno cmp xchg imul orl gs sti jb hlt inc pop lods fsts ret or rolb jmp adc or xor pop inc test xchg push test mov xor mov mov jbe call sub mov das repnz xchg mov insl add inc mov cwtl xchg xor or add insb dec (bad) xor xchg xchg gs adc jmp pop dec jno out jecxz (bad) add ror lds ljmp inc push cwtl je pop sbb mov jmp mov cmp adc mov loop mov cmc cmp xor xchg stos mov ret xchg or (bad) jle jp fiadd jmp sbb mov mov mov xor data16 adc mov inc and lds xchg cwtl add sub lahf jo and add (bad) xor pop lods inc or xor cs inc sub push xor inc mov insl mov ss and cld gs add mov xchg mov imul pop gs icebp imul push mov cwtl xlat xchg pop mov notl imull fbld out jge jg mov or daa psubq and and ret fcoml lret leave jl leave movb inc cmp inc jmp cmp das lods loope pop lods push (bad) cmp repz sub je adc jecxz push mov loope cmp sub movsl out cwtl vmaxpd adc sub les pop dec pop xchg iret das rcrl cmpsl push xlat cmp cs sbb insb int3 sbb mov pop mov test (bad) xor mov das sbb mov inc gs pop lock (bad) (bad) loope xor sahf xchg (bad) pusha ret bnd dec push mov imulb pushl mov out repz or mov lods mov mov inc xor pop fnstenv push xchg mov cs or xchg into lods inc add or lds xor fistpl loope fs mov mov sub or imul scas jge push iret fidivr sub mov inc mov and add xor outsl cmpsb dec (bad) pop outsb xchg mov pop inc inc xor jmp push xchg xor stos xchg mov lcall aaa push inc pop sti mov test sub inc jl bound jmp ljmp enter cmpsl dec lds xchg xchg out sub and xor pop and outsb js bound push ss ja decb or gs sub dec jb ret in add xchg mov xor xlat cmp sbb xchg jmp lock fs cmp pop sbb add scas (bad) mov push fiadd ret jbe cmp pop bound mov jle stc mov jns aam fisttpl sub ds pop add popf xlat decb xor fsubrp in iret test xor fldt inc sub mov mov pop or insb mov flds mov movsl and ret push ljmp xchg sub adc sub mov loopne enter and sub div or (bad) and jle es pop out shr ret jno test push jg sti lret jmp mov push xor pop mov push mov stos sbb mov sbb repnz xlat rorl and jl loope pop jmp lcall inc mov dec cmp jge mov pop dec adc jno mov sub ret movsb jmp imul cwtl xor out je scas movsb out aad scas test and in add outsb cmp mov mov movsl fistpll ret push inc sub sub adc inc pop adc add pushf adc fwait push add ffreep add loop xchg fmull aaa or std jns cmpsb ret push out mov pop (bad) add (bad) ljmp ljmp (bad) (bad) fsubs daa add inc and adcl gs xor sub and ljmp mov sbb loope xchg cwtl repz pop mov dec or out mov xlat xor adc xor adc divb orl jge fdivr sbb mov int3 pop aaa or push or rcr sub pop jl lahf loop ret sahf pop mov mov pop loope pop mov sub movsb push lahf (bad) loopne movsl cwtl add or add test or pop (bad) and xchg ss pop imulb pushl out gs cmp fisubr and int xchg cmpsl push xchg xchg aam in or push stc dec mov dec das or cmp mov push (bad) mov jne rol enter leave std and dec sub push sub mov leave (bad) divl test cmp (bad) lock push ljmp dec popf mov or clc daa (bad) push jg (bad) xor icebp (bad) jg jns (bad) dec repnz and xchg lock push and ds mov jg pop mov sahf xchg scas test jmp (bad) sbb lea cld fist lret stos fldl sub cld xchg ret gs out xchg jmp adc xchg xchg mov icebp mov xor mov cmpsl hlt das add fsubs (bad) mov lret adc mov xchg negb adc mov (bad) rcrb aad xor lods (bad) dec or and popf fcoml sarl stc testl mov push mov sub ficomp hlt dec ret jle mov pop mov sbb inc add mov das pop adc mov inc stc mov les xchg push jb adc pop pushf aas or mov mov outsb lret xchg adc or cltd pop dec jmp imul popf cltd sub mov and mov inc push je pop ret jp xchg mov das fmuls lret pop call pop add int outsl enter cmp in outsl in clc leave je mov addr16 mov cmp and pop sub jae or out adc push push xchg push lcall mov inc mov ljmp mov inc fisubr mov or imull mov or out aam jmp ss or or repnz imul mov mov (bad) in mov jge pop fwait mov push inc pop mov xor cli add (bad) xor push pushf insb fwait (bad) ljmp repz inc mov aad insb repnz sub jle push pop stc mov inc xor loopne and (bad) jb stc test lret push push insb popf inc std fldcw xchg sub add xchg jnp pop adc sbb xor mov or imul mov mov shrb (bad) es push pusha lret cmc rcrb push mov push fs and or adc nop adc mov push xchg sub enter (bad) pop pop jmp stos (bad) lret adc in mov sub cltd icebp outsb cmpb arpl ja adc mov and inc out mov sub adc loop add loope (bad) das scas sub jg lock mov add sub and dec adc gs dec (bad) mov (bad) (bad) sub aad mov mov mov push add adc xlat ret pop push push pop pusha cmpsb fmuls mov push sti xchg xchg jecxz bound xor cwtl loop pop add xor xor icebp scas xchg xlat mov outsl (bad) lret stos jb add mov or shrl sub fnstcw aaa pop jno or or push out icebp repnz or mov repnz cmpsl das movl jge adc out mov pop negl scas lods jmp mov (bad) push mov mulb sub mov stc std inc mov ret xlat pop lcall das ret inc out xchg cmp sub xchg outsb cmp sbb rcrb icebp push xor aam pop jbe fidivrl adcb inc js pop scas sub sub pop mov cltd mov fildll aam inc leave mov out adc out lahf (bad) pop pop icebp and xchg repnz call cmp jo hlt push leave fsubl fs cmp mov imul mov hlt mov sub sbb cmpsl sub adc fildll xchg mov daa push push aaa jmp cmp out movb sub loop pop pop pushf push aam and jmp aas jp and lods sub (bad) hlt sub js pop out cld mov cmc jno dec fcoml les out lock sbbb (bad) and xchg sahf and popf sti and (bad) (bad) xchg adc sti fdivrs test mov stos ss movsb and push push add mov test cmp leave xor jg loopne jne lods popa (bad) (bad) sub loop lcall lods push mov cmc mov aam push dec mov push inc or jecxz push dec xchg iret lea insl sub mov jne rorb inc mov cmp (bad) xor cltd mov out or push mov in pop rorl jp cmpsl addr16 adc sub sti pushf xor fist adc in and xor fcompl xchg push cltd add cpuid push mov jnp add xor xor notl mov (bad) jmp clc fdivp leave lcall test in xchg mov lods leave inc std lods hlt out inc sub lcall mov add inc mov push mov iret sti mov (bad) dec mov ds sub (bad) addr16 in fstps cmpsb mov dec push xor daa xchg xchg sub ja or repz mov jne out xor mov xor out pop dec daa dec mov addr16 stos lret xor mov adc (bad) fcoms add les aaa xor leave (bad) popa pop inc mov stc fsubrs and mov adc push mov jle aaa inc pop inc shrb jmp jle pop pop in jecxz dec lret mov fucomi movsb dec and pop scas or cmp out sub test aad in (bad) mov push adc repz outsl fmull cmc sti (bad) daa lock and dec (bad) mov mov mov std pop ljmp lock daa push adc dec popa icebp out sub shll lods pop rclb les loop (bad) add and scas in (bad) xchg jecxz pop loop pop adc jb jne adc pop or pop mov xor or fdivrs (bad) out jnp iret test sub mov (bad) lods dec xlat mov sub xor in les scas jne scas mov lret pop jbe cmc jmp mov jmp fistp sub mov test fldt leave xor xchg dec mov test test add shrb roll xchg and add fisubr sub sub xor mov sub jns xchg call fldl cmpsl cmpsb rorl bound or data16 (bad) jmp adc shl in lods inc test scas (bad) mov add xchg scas xor ret (bad) xor push pop xlat and ret mov mov inc cmp test std mov clc out jmp sbb add jnp mov clc sarl xchg add jmp jg icebp dec popa mov pushf pop sub inc cli (bad) mov leave fnstcw add pop mov outsl (bad) pushf inc popa sub rorb clc xor bound lock dec adc or (bad) dec mov push popf pop stos adc pop inc xor and hlt dec pop lds inc jne cmpsb xchg and clc dec imul lret idivb ret pop mov daa repz pop jle bound ror ds sub (bad) jae notb out fisttpl movsl loope fldt clc cltd frstor xchg push mov icebp loope mov and rcll (bad) jp mov xor pop xlat mov loop popf xchg shrl mov scas lret je add fs mov lock es sbb pop mov mov sub leave ror aam (bad) (bad) cli cmp or ret and loop push (bad) and inc add iret das or pop sbb (bad) mov (bad) (bad) ljmp sub das xor icebp cmp xor and mov cs push xlat mov jno imul fsubs ret mov cmc jnp adc pusha jae push adc push xchg rorb push aad pop lock test add and movaps inc das add mov mov xlat xchg inc push sub sbb dec imull icebp pushl and scas mov xor xor jmp aam loop (bad) xlat mov repnz add add mov mov lea das in ret pop mov imul (bad) pop mov cmp fldl ja inc pop mov push add mov or mov and pop add mov jecxz fs repnz test push cli pop xlat and push or cmp sub pusha cli sti and popf je rcrb lret mov fsub cmp mov sar pop pop mov xchg inc mov push imul mov adc cli in js stos mov das ss pop pop (bad) fwait sbb int xchg add call push pushf and push (bad) lret dec loop es js ljmp xchg push pop out mov mov sarb mov jo xchg in test mov pop xor das mov jmp sahf adc sub pop pop leave pop jmp scas adc aaa sub shl jb loope mov clc clc repnz inc ss out dec mov dec lret clc ret mov (bad) and fistl and dec das loopne cltd rclb pop sub sub lds lock pop add in scas lret add jmp mov iret call scas xchg enter fsubr mov ret ret push idivl mov dec arpl sub dec dec iret lods sub mov je,pn ljmp mov cwtl pop icebp or and mov (bad) jbe and lahf or and repnz add xchg test into xor scas jnp or mov scas dec mov das ret pop sub mov inc pop repz push cmp popf pop adc xchg add jmp xor cmp hlt divb das out adc stos jp cmp jno mov xor ja cli or ret sub mov adc std adc dec aaa iret (bad) fisub and int3 fisttp lahf xchg and les movsl (bad) pop aaa adc (bad) fbld andb sbb enter pop jns imul sahf pop (bad) xor add and enter push notl add sahf mov ret adc iret jb fstps pop xor mov jne or lods dec dec (bad) imul sub in jo push aad sub or xor ret mov adc fcompl push testl inc dec jge pop lods std cltd xchg add sub pop pop lods cmp lret mov out sbb inc sub pop jno or aas (bad) mov adc roll icebp jne clc imul lahf xchg ss out push (bad) and add jbe rcrw or dec jmp jge fucomp cmp add loop xchg test dec mov out jns fs adc push cmp inc sarb js xchg push testl mov and jbe mov pushf icebp ss pop dec gs inc dec add inc jae sbb mov pop xchg cltd dec mov adc or aaa daa cmp fs cli idiv bound cmpsl fcmovu sbb orl inc jmp lret (bad) mov push ret cmp xor pop shlb incl ljmp sarb xor mov xor lcall push mov xor mov xor and into or and dec lret outsb pushf dec (bad) mov data16 mov test xor jnp mov and jno mov sub ret mov ljmp lods pop cltd dec out inc rcll push out xchg ss test lret pop in enter into mov scas jecxz dec mov add mov inc sub xor cs sub pop test pop stc icebp popa fs mov xchg xor mov xlat scas cltd shrb push aas xor std mov pop mov pop std dec test jo lcall cli push and pop in ficom movb popl lret or adc shr mov mov jmp sub aaa das gs sub int3 add push adc das loop cmpsl (bad) stc lahf pop shlb imul fistl or lret or les out imulb mov add lret push pop mov mov cmpsb pop shl gs lret or add in sub push testb mov in into push xchg jne add stc sahf inc lret mov pop inc xchg pushl dec fisubrl ss icebp imul mov jbe test xchg out or fldln2 lcall leave out sub dec out mov pop and daa les add mov (bad) popf aad push ret loopne arpl dec cmp sub (bad) inc adc jmp pop shr ja sub ljmp jmp (bad) inc add dec mov or leave or jp jge (bad) (bad) mov sub out push icebp in inc push in iret push mov mov or xor dec jno and inc sub add xor repnz es inc aas ret push adc into dec cwtl mov mov cmp pop (bad) out add mov add incb inc and (bad) pop push sbb mov pushl cli sub xor loop mov in clc les or sbb (bad) xor mov cmp mov mov push xchg or ljmp ss in popa add dec addb (bad) mov jmp cwtl pop or les sub adc mov jmp out sub test inc scas sub xor and pop sbb sbbb (bad) mov ja addps pop jns pop and pop test out lods scas mov sbb fs push mov push jg out das sub test xor sub icebp inc xchg add mov (bad) popa (bad) leave (bad) jne jp cs and push adc dec call mov outsl add lock ss pop mov adc inc cmp movsl stos adc or scas ss adc (bad) cli call mov xor fcmovb daa aam xlat dec or sbb mov in mov je pop dec xchg and pop xor sub or or notl push cmp push cmpb push mov add lcall pop ja sbb pop pop adc jno bound push adc imul sub mov aam xor cwtl das movb dec xor ret fucom movsb and pop cmpsl hlt jns add not shr or dec add and add dec sub pop push xor or neg and push insb push mov cmp add ret and shl std dec push negl fcmovb xor pop ffree ret ja xchg xor or push in mov fdivrs pop dec add fwait and pop cmc add mov push xor mov or dec lcall xchg pop nop fstpl mov xlat inc enter dec pop lods add adc je fmul fsubl sbb (bad) (bad) cmp and add or movsl jg mov inc icebp add push cmp loopne dec pop scas lret icebp push add pop fsubs mov add push cmpsb and xchg add inc mov outsb mov push shr ret add mov (bad) in jg js xor sahf cmp shll test pusha ja aam add xchg xchg pusha insl adcb ltr cmc lahf pop sub push mov repz ja lahf or adc loop jbe push dec pop out jnp adc mov cmp and leave fstpt decb lahf adc mov cmp add popf fsubl xchg push movsb sub push icebp test adc sti movsl (bad) dec push push sub sub inc shrb test push out clc insl mov out js ljmp inc jl mov (bad) call sbb sub cld out test mov sub cmp je mov mov jmp repz in pop imul lea bsr push add pop mov fist pop repnz xor jg and popf test mov dec sub loope std pop mov jmp test xchg bound loop inc fdivs cmp (bad) xor jg cmpsl sarb pop repnz xor inc shll inc out add js jae sbb dec stos fsin lods inc lock pop mov mov adc sub sub ljmp das loop std in das or push inc add repz or inc or push cld dec inc adc pop or push lret mov adc xor mov div ljmp xchg in ds and sbb mov dec (bad) clc fwait dec add inc dec rcrl add jge adc loop xchg scas sub dec into or mov pop les jg (bad) sub and and xchg add mov enter clc xor adc sarb cli (bad) repz nop dec adc (bad) pop loope ret xchg dec xchg jg imul popa push push mov push ljmp xchg jb mov imul push mov std aaa sub mov (bad) in sbb mov pop and pop or aad (bad) pop xor mov push mov shrb out sub lock adc dec pop dec rolb push out ja mov clc sub pop inc jle push dec xchg sahf push js xor jg add xchg cltd pop add mov loopne pop sub push add mov cmp and (bad) pop sub jnp jae mov clc dec leave lea bound jbe mov sub jbe pop test add pop or in push sbb (bad) adc xchg cmc popa mov movsl cmp push push add aas jo lret es dec subb xchg loope mov pop dec neg cmc push outsb add mov pop int jecxz scas lods inc push stos fcom mov outsl roll out jg xchg cs add mov push ret mov jg add xchg jmp stos inc sti lcall std pop icebp mov jg xor pop xchg rorb testl fisub and jns mov adc loopne and or js mov push and sbb jg jnp jnp (bad) sub and pop lahf mov shrb clc push jmp lcall pop push sub popf mov shrb out addr16 inc imull push in scas test and pop ret les leave cli jo loope rorl mov test shr or xchg hlt (bad) es lret adc xchg ret pop mov imul jg inc pop xor aaa cmp push adc out push scas mov dec jmp and xor mov adc daa xchg inc rcll sub xor add popa imul sarl dec daa not in lret xor movsb pop pop (bad) out fs (bad) scas jecxz dec ss add shlb mov mov push xchg add lods push in lds in add push mov cmp (bad) repnz ljmp pushl xchg bnd jge je lcallw out xchg pop adcl std test btc (bad) icebp mov jns (bad) sub call sbb xchg outsb and add lret jbe pusha aaa mov add mov pop popf rcrb pushf movsb imull scas decb dec into div adc div xchg daa jmp das cwtl fs inc mov clc (bad) icebp das mov dec out fs adc repnz mov xchg call dec icebp daa sub aas jno add aas mov dec std mov out dec push lahf test call pop xor jmp push fwait adc dec call aam pop (bad) dec bound dec scas xor std fsts (bad) frstor sub inc mov jno sub stos cmp in pop ret decb dec lahf sub ljmp xchg data16 test jo pop test sub nop and xor mov inc add add jb mov lcall jo loope idivb cs adc loop mov ror sbb xor xchg out das sub outsb sbbb add popf loope imul scas mov and hlt mov add xor push mov mov mov dec dec aad xor clc jne xor in hlt in (bad) int3 and jbe pop stc std in repz xor test movsl call cs sub and inc (bad) xor das jo add add jmp jmp mov lcall (bad) stos mov jecxz xlat push (bad) sbb xor popf dec cwtl or pop xor hlt jo gs push jne push ljmp lods icebp mov mov neg jle pop out dec test jmp out jle pop hlt push dec jge push push adc or mov stos cmp mov loop (bad) xor inc push test or (bad) xor sub mov icebp mov mov cmp sbb sarl or (bad) xor sub mov cli jmp loop test clc (bad) inc mov out sbb adc shll dec dec insb dec lds sti je xor hlt xchg cltd lock test adc and xchg sbb mov and insb xor mov lret or mov push or mov jbe pop stc mov jne mov xor or test pop test mov pop and cmp jl push adc pop mov sar outsl xchg cmp sub xor add (bad) insb dec daa mov (bad) cld ss xor repz mov sub (bad) outsb adc scas sub adc cmp ficoml addr16 ljmp leave imul pop aad mov adc mov and test mov pop popf inc add pop cmp sub fwait pushw fisubl daa mov fsubrs repz or and sub xchg je call sub (bad) out sub out mov ja neg xor sub fst pop xchg (bad) lock repz (bad) sub pop in push lret cs jle pop ret jnp or (bad) test mov daa xchg or sub sub push mov xor or mov pop sbb stc xchg push out lret fs cmp fnstcw clc stos flds lcall fsubrs adc xchg out mov push out (bad) (bad) push jne adc test sti fs scas cmpsb fmull xlat mov ljmp por test int and sub jg out loope sub aas aam arpl dec ss mov cs add pusha mov popa or and lea mov add and imul lahf ljmp aaa sub add push xor scas adc cmp scas lods addr16 xor aad por xchg mov dec out sub dec cmc mov cmp mov inc push jmp pop add sbb xchg notl cmpsl or aas (bad) aad popf jmp je adc xchg fwait xchg bound push fimul pop fxch pushf xlat or and (bad) jno and cmp out dec mov repz add cmc aas pop mov mov sub xchg call pop ret out jb lock bound mov or subl pop cmp cli adc pushl scas mov and pop mov outsb xor mov and dec or pop jl jno imul dec stc xchg xchg (bad) std sub jecxz insl mov movsb enter insb or je ret jl push ja mov pop xchg push pop lret bnd push and mov adc jb popa add pop adc add and sbb es cli jg sub loopne push pop into mov xor out sub adc add inc add dec jecxz repnz fcmovnbe test negb mov sub or sub sbb adc mov imul int add mov pop es lret push ret jns push (bad) pop xor call loope fsubrp fs inc xor aad bound imulb push cmp xor sti js shr loope jbe push xor mov mov enter push mov cmp aas add imul pop fcomps dec mov (bad) lret lret ret movsl les push loop pop popa adc ljmp cmp ja push cli dec or stos push push or orl mov adc or scas mov scas push loop ret test out call adc lahf iret repnz fs push nop (bad) shll xchg repnz and test pop adc sub lahf xor fisub adc jne mov imul and jbe pop idiv sub push jl dec sbb add inc push shr adc dec imul push out pop cmp jle cmp and or push sti std or into out gs sahf mov xor mov xchg dec or and ret add push pop ljmp mov lock fimull push cmpsb nop test cs mov lcall pop dec pop inc movsb xor leave xchg adc rorb mov idivb mov xor fisubrl sub cmp push mov jnp sbb (bad) jne adc les je inc in push push and repnz xchg pop mov pop sahf push ljmp clc push in mov jmp lds jno mov jmp das mov push ljmp lret out and mov sub outsl cmpsb xorl sbb outsb pop out jb mov push into or cmp fs jb or add inc aaa cwtl inc repnz lds (bad) ret (bad) notl or or pop sub insb sbb out jle pop scas or cmp push jns adc add scas xor and mov adc cmc in pop inc jecxz push (bad) push imul and xchg mov xor cmp cmpsb mov arpl adc test or pop push adc cmpsl sahf push bound mov cmp adc sub ret jge mov or xor call insb inc dec lret and scas xchg push dec cli xor daa fisttpll pop push push lret mov push mov lahf push xor add jmp (bad) (bad) lock jns xchg icebp mov cwtl xor sarl sub xchg dec pop scas mov and add data16 (bad) addr16 pop jns inc mov arpl div cmp adc scas sub add lret out std pop jmp cli inc (bad) test adc mulb inc (bad) mov fst or sub sbb mov cld les lret into jbe cli xchg pop aam ret push negb shr int3 cmpsl lret test ret adc pop imul pop enter mov pop pop jmp mov sub jmp and inc insb dec mov pop or and dec sub pop xor out loopne rcll sub lods aam mov push xor and and or mov lahf cwtl (bad) shlb mov sub jne adc sbb add sbb jecxz and lds divb vmovlps lcall adc sub xor iret ds sbb sbb inc notb sub aad mov and fnstcw push and jns add sbb xchg dec cmp sahf adc jmp test xchg mov aas sub ljmp mov pop mov mov sbb adc dec mov mov ret cmp das aam jb push jmp rcr flds das test mov sub push std sub movsl or fldcw cmp test add jle lret mov pop sub icebp test mov fs adc aaa call sub out popf inc adc imul jmp push shr xor and inc adc mov lods imul mov xchg add sti idivb mov lods loope add inc cmp sub cld stos mov xor inc leave jmp cs (bad) (bad) mov sub pop mov xlat mov repnz jle dec or xchg push ja popa pop sarb and xlat icebp fwait xchg dec cmc repnz loope mov push dec dec (bad) pop xchg add sub bound mov icebp lcall data16 out add jnp movsb jg gs xchg jecxz sub pop jno cmpsl out stos xchg pop dec adc stos cmpsl and push and cmp (bad) std inc xchg (bad) lahf lahf adc jle sub xchg dec mov or dec nop xchg ds jbe push jge call cli repnz fdivrs push push ss mov jp add cli je lds je lea fcomp aad (bad) mov push dec or clc and or dec xchg push xor and test sbb loop dec hlt sub push mov jo pop mov cs daa ljmp loopne push in adc sti insb lock (bad) rcrl bound jl push pop cld ffree xor je (bad) mov sub mov leave sahf ffreep ret pop mov aam imul pop in adc lock mov js xchg inc mov imulb negl imul repnz and adc mov push rorb cmp (bad) mov or pushf (bad) into (bad) mov pop sub scas pop xchg mov xchg je movb sti xor push ljmp sub popf into mov and scas mov sar fs cli call mov ret mov scas mov mov mov push sub sub cmp cmpsl pop pop mov ja xor pop mov enter dec sbb sub sub push or decb das pop xchg aas repnz inc inc lret or fnstenv and das jbe jle pop add cmpl xlat sbb push imul mov adc daa and rcll test fdivl neg pop popf out push xchg dec jnp xor add pushf mov mov cmp in sub sbb and scas mov and outsb jo push xchg out mov inc cmc lret dec and enter pop faddl loop mov pop ret xor cwtl jmp rcrb xor pop test out test adc mov xor mov icebp jbe lcall out mov movsl lret iret lods (bad) repnz (bad) lods add sub icebp jp das lret mov inc lock mov aam (bad) lret int3 sub or pop or (bad) ds sub adc stos sub mov xor (bad) in sti scas movsl jo and clc psrlw mov sahf push and es dec inc out jmp or xchg jae inc lock mov push push insb adc das pop adc jg jne dec inc jp stos adc or iret or sub out push out dec dec cmp jl push nop ljmp daa popf pop mov ja (bad) pop and movl xor aaa adc test jg and jno iret xor arpl mov je sarb pop stc mov fs out mov sub dec pop dec shll and sub xchg mov fistpl data16 sub mov fs decl lret jns movsl jle imul dec adc shll xor push cltd xor jg icebp add xor aad push mov and call mov das or std add or sub test pop mov pop lods xlat sub or mov int3 xor xor iret and jecxz outsb and test cmp in sub fmul movl xchg jmp enter xor fdiv jo or leave mov dec sub leave add int3 cs inc int3 xchg into cltd xchg cmp loope scas jecxz pop jmp sahf imul jne mov (bad) or sub add cli fsts cmp cmpsl xchg xchg call mov push (bad) iret or xchg ljmp jle rclb dec adc mov dec xor mov adc sbb or mov jmp cmp xchg xor hlt dec and pop xchg xor xchg out fs mov or scas lret test mov insl rol or pop or (bad) imul fs insl jl xor imul std enter arpl sub mov cld loop cmp jmp lcall out mov xchg or aad sub xchg (bad) loope scas pushf mov pop lret (bad) inc mov test mov sub adc pop icebp cltd jge mov add mov dec pop dec rclb sbb xor mov push rcrl xor into xchg jg cwtl int3 fnstcw dec (bad) mov xchg repnz xchg ljmp aas mov ljmp fnstenv sti (bad) cmpsl in adc repnz ret mov xlat int mov gs sbb not pop sub push sub lahf shrl clc adc pop ficoml mov lock outsb push dec mov lock imul mov dec mov jb neg insb pop dec or pop lock out fstl xor (bad) mov pop add jmp dec adc ret shll in (bad) jo mov push add in mov test mov add sub mov bound inc ja rclb scas decl rclb mov enter ss ret ljmp aaa movsb (bad) mov nop mov pop lahf out int3 mov jne mov repz scas mov push inc imul (bad) and flds xor sbb mov out dec out dec sti (bad) fisubr cmp adc ret and cwtl loopne mov mov outsb lret imulb ss test (bad) sub cmpsb (bad) sarb repz xor sub daa pop jbe aam push mov mov repz (bad) dec sub sub or mov scas pop add lret test incl (bad) jge sqrtps sub push lods or add and pop cli bound ret pop int3 or ret inc xchg sbb mov cmp adc test jo int3 test mov in sbb cmp lods xchg pop insl cmpsb ja push cmpl mov add push adc das adc push adc xor daa and jne adc iret xchg test or xor xor mov dec rcpps mov pop les fmulp mov pushl lret (bad) dec insb (bad) int3 dec sar fldenv mov (bad) fucomi add pop inc pop mov divl or pop (bad) imul pop push add xor mov mov jp mov pop add inc add sub add and mov lods inc enter addr16 jge aad cmp push adc mov lcall dec ljmp test jmp sbb cli cmc js inc aaa pop cmpb stos fsubrl or xchg das dec cmp pop movsb stos mov mov lds shrb xchg int3 sbb pop push cmp neg popf pop popf dec and jmp mov imul push mov add stos clc fwait movsl out dec aad nop pop pop sub xchg jnp xchg and fldl inc outsl mov mov shl jne sub mov lcall popa test (bad) das leave int3 ds or jne hlt push mov es lds mov push dec xor jecxz push add mov ret stos mov cld pop rorl lret and dec leave jns mov repnz jmp jl xlat in mov push sub leave jg mov iret and cmp in out sub (bad) mov inc xchg xchg gs mov and sub mov subl add insl xchg das push jb inc cs cs adc out into or xchg xor andl imul rcrl xor adc testl ret sbb (bad) notl pop mov pop pop fisttpll cltd pushf inc rorb mov repnz push sub fbstp sub push leave in cmp ds ficoml shlb dec mov jmp movsl push negl jae (bad) or mov jge cmp jmp test xlat or push cs xor (bad) sub adc stos xor (bad) dec outsb mov mov mov inc andb xchg clc xchg pop out stos sub aas xor or mov xor mov cmp fbld call adc cld inc rol mov pushl leave add sub sbb sub push call call std stc xchg inc xor jg cmp out sub xchg and adc push (bad) mov popf inc and push adc inc adc (bad) mov jb or nop cmpsl push or mov mov pop mov sub sub push xor add test mov xchg pushf (bad) out xchg jle out hlt (bad) int and jmp pop mov daa pop add pop add adc xor xor sub and cmpsl sbb mov push out jne dec pop loope push xchg adc cli int push into bound xchg movsb mov test (bad) lret scas and xor scas and dec je fwait in add jno mov cwtl xor xchg sbb pop mov cltd in and pop push les scas or add sbb jmp mov sar push repnz fcoms scas or inc mov mov xor pop jl jo pushl add mov pop or mov jne popf or js,pt data16 lods in mov mov (bad) les cwtl ror mov rcr int3 pop test pop repnz xor mov fisttpl (bad) mov hlt in pop jbe repnz jg xchg xlat cwtl leave icebp popf pop imul sahf mov rcll or data16 inc negb decb inc lahf and mov arpl and push imul shrl mov (bad) sbb dec lret clc fistp gs or ret sbb add add sbb xor or xchg mov sub into add xor pop dec mov stc mov sbb mov xchg cs (bad) icebp inc inc in sbb push mov inc ret pop adc xchg int3 push pop jmp xchg and ret mov lret mov add ljmp jo pop push pop xor cmc repz scas push clc lock dec pop lret out jae mov daa jg popf and jp add outsb mov or add outsb iret das out and inc xchg (bad) xor inc imul sub stc shlb or cltd jbe jg movsl dec clc cltd leave icebp shl das push xchg jle mov shll mov mov push fisubrl mov xchg jmp mov repnz mov mov cmp and addr16 enter mov stc mov cmc in inc les xor lret cmpb dec mov push repz and bound lret dec or lods dec test jecxz pop dec cmp repnz pop push mov pop sub add test sub jg,pt popf push mov ljmp rcr dec stos loope call pop lods inc int3 rclb pop movb or push enter xchg pop (bad) jb je leave mov (bad) jno cmp push sub cli add or mov jno xchg sub cld push ss pop cmp or loope mov xchg sahf and xchg cmp jb or push jge dec push mov sbb out (bad) lods or push inc sub (bad) xor push fnstcw add cmp out dec and add mov int3 sub call mov and icebp add movsb cli add sarb dec fcmovbe jbe out adc xor mov pop inc cli movsl (bad) in push mov jno cmp adc push dec mov sbb dec repnz sub lret movsb les out xor rcrl or stc jo jmp sarb out adc cmp sub movsb aas and loop mov cmp or push insb rcrl sub jg mov adc mov popf mov mov and mov ret mov popl call lock lcall repnz jg mov cmc outsb out dec xor fiadd insl (bad) sahf bound pop das call ds fs stos loopne out pop scas imul lcall cs push xlat cmp repz mov add test jns dec in shll cmp pop lea jb or (bad) xor notl mov mov icebp jno mov push stc dec fs (bad) jg pop and xchg inc add push lds sbb fnstcw lea sub cmp out pop mov xchg jmp mov pop xlat (bad) cld icebp sar cmp out jae xor and xor popf push pushf ds add mov daa sarl or xor sub dec repnz test and push or add inc jle lock cwtl mov test (bad) jo pop adc xor adc add (bad) sbb xor jge inc cmpsl pop inc aaa ds clc out cmp mov cmp aam repz orb lahf in mov inc leave fbstp sub push mov ljmp sub pop mov pop xor mov add pop movsl test lods (bad) xchg das inc sub xchg rolb rcll pop mov xor mov pop xor and in mov xlat add icebp les jns mov dec pop xor js into ret in push shll ret out adc xchg pop repnz push pop test ret xor pop lret cwtl adcl repz xchg ss add pop aas lods adc cli mov lds mov xchg mov sub loop stc sub or xor scas cmc mov push addr16 or (bad) jne je cli dec (bad) int movsl pop mov add and ljmp (bad) mov cli pop cltd bound add cmp movsl rcrl mov insb xchg call inc push icebp mov pop divl pop movsb aas dec stc int add scas mov aam fcoml fsubrs pop movsl ss pop icebp clc mov ret lret ljmp outsb daa jmp icebp lcall ja cltd pop or int insb xchg inc sbb or stc jp stc mov xor dec rcl scas insl cmc ds xlat test leave sbb test pop mov mov dec out sub aas in data16 jp cli mov and or idivl cs sub sar dec and pop mov sbb shll inc dec dec ss xor sub pusha inc sbb cmp or sub jl (bad) adc (bad) int aas loop mov xor inc stos inc cwtl (bad) jmp adc jno mov or add into shll inc test int cs jge xor (bad) data16 push jbe push push scas push iret ljmp mov add xor jl imul add or ljmp cmp dec sbb gs out cmpsl sbb adc into lahf in movsl push inc mov ror stc add pop bound xchg and es mov xchg sbb xor mov (bad) pop ds xorl pop push orb pop mov sahf ljmp pop cmc pop fcompl movb iret test (bad) or out jmp sub xchg dec leave xchg inc xchg jbe push xor pop dec push sub dec jns fisubr mov pop mov mov xchg cmp add lea jmp mov fisttpl push ret fwait push test or inc cmp lahf push jmp xchg jmp loopne xor data16 iret ljmp inc bound cwtl lods sub lahf inc or xor sub cmpsl jp sub sbb mov iret dec sub adc inc dec sub mov cli mul mov ja mov out mov cs jb xor dec pushf mov (bad) xchg xchg mov xchg inc and add push insl dec jl (bad) xlat mov fstps mov adc mov movsb scas mov sub sbb lds cwtl mov test sub (bad) enter mov bound sub ljmp mov adc mov out add jne (bad) and lahf in movsb (bad) and mov mov ds je jmp out pop and xchg jns dec negl lock cmp jbe jp (bad) mov mov pop or into shr addl imul cmp into movsl jl aad clc xchg xchg arpl inc inc add jb idivb sahf xor lret sub fmulp push jo dec pop (bad) fdivs sti popf pop imul mov xchg addr16 (bad) mov and pop mov xor (bad) sub aam loop imul mov (bad) repnz push fcoms mov mov xor add js cwtl out mov pop clc and out bnd jnp sub push or mov cs adc mov pop jmp icebp jmp sbb sub repnz fs lods adc and or adc lret pop sbb inc dec dec stc (bad) mov mull push (bad) cmp pusha xor jbe mov cwtl cs push lahf loop xlat mov xor scas and movsb or pop dec push jg jns int and popf cmpsl out popf jg movsb pop pop cmp icebp jmp fnstsw pop and mov push rorb je fs lret mov iret mov sub or movsb jp inc out lret test cmc lahf imull push lahf or in sub pop push fmuls std or test or adc xchg mov jmp push sti add shrl pop sub call stos call ds mov loope jno add das loop lcall jno mov rorl movsl lcall cmp mov daa add pop push mov fstpt imul sbb dec mull (bad) shr std xchg dec xor add mov lahf sbb out daa loop jecxz (bad) mov (bad) cmc cmp dec lods fdivl sub dec repz imul fdivl in sbb out inc and or bound mov (bad) or cs or incl fisubrl push mov fbld scas mov xor idivl mov and imul into aam cltd fmuls sbbl aas notb daa std fwait aad sub mov adc xor mov xchg dec cmpsl fisttpll sub (bad) pop cltd outsl js mov mov (bad) dec or je dec add std mov (bad) push mov and leave ljmp jle cmp pop jmp fmull add stc incb int3 ja lds xchg aas adc xchg into sub dec out or mov or xor loopne or mov xor lock cli pushf cmpsb push xchg orl fs fisttpl loopne push and popf fnstsw imul test jne mov pop jmp xor add sub pop test add jle jmp jno bound (bad) push jle xchg rorl push jnp dec (bad) jae ljmp ret repz leave jmp pusha inc mov (bad) mov or jne or (bad) shl in adc mov lahf pop adc jge jp (bad) lcall cmp push push (bad) lahf lds cld cmpsb pop add decb ja mov (bad) mov mov insb aam sti and xor push arpl pop sbb icebp test and mov pop mov pop rorl imul nop dec leave cmc in pop icebp pushf (bad) lret out mov add imul js leave jmp inc push (bad) pop out imul out mov jb or nop rclb (bad) fcomps sub (bad) imulb iret (bad) sbb mov jmp xor cmp fstpt sbb popa daa fucomip (bad) outsl loop (bad) int3 adc mov mov pop sub imul mov inc test cmpsb repz imul ljmp dec fdivrs dec cli bound out ficomp sbb loop xchg lret sbb fldcw (bad) pop mov pop loop shll fcompl mov or cmp test outsb and or outsl loopne sar icebp popf fist xchg cmp ds and (bad) dec lds mov dec push pop mov xor (bad) jnp cs gs into stos fdivrs lahf stc outsb imul sbb div int3 and sub sub mov jb mov jl mov notb mov popa mov and mov cmpsl daa ja jbe fist aas sub and leave or ja cmp icebp adc sub xchg jno leave xor out arpl or mov (bad) packssdw repnz inc js ja movsl das loop ja outsl dec mov or inc (bad) (bad) ljmp adc pop add aaa and repz add idivl sbb enter cli in adc mov sti cmpsl xor mull sub mov imul ss cmp mulb std sub cli les std jecxz int3 xor dec cli (bad) jmp fimul ret sub fwait and movsl rclb loope int3 push sbb leave das ljmp (bad) icebp xchg dec xchg ret and and lret fcompp das das icebp mov (bad) lret mov daa cmp push add xchg sahf adc sub adc and dec xchg dec icebp xlat dec mov or dec cmp sbb (bad) dec mov pusha fwait lret loopne mov dec dec jecxz or inc pop daa and loopne (bad) xor or cld leave push push add cmp aad mov cmp cmp movsb outsl xchg mov negb mov adc dec xor mov ds stos repz mov (bad) scas xor mov mov gs daa ljmp cltd inc imul jl in mov push mov sub cmc jno xchg lock mov dec (bad) cmp pop pop outsl leave iret add vmovlpd xchg sbb adc fdivrs or add or or pop push movsl loop rolb fwait or add xorl monitor xor bnd icebp mov rcr out out sub xor mov daa cmp (bad) cli pop and jne mov cmp out sub push adc decb push pop inc stc xchg lock dec lock sub pop (bad) fsts and cli fsts int3 add mov pop sbb ficom fdivr bound add push push (bad) scas adc xchg (bad) sbb fwait sub mov adc add ret iret mov and dec fstps call or jbe dec stc sbbb pop xor jmp insb leave test dec scas rorb andb test jne push cli add (bad) mov bound pop jl jno or ljmp adc mov lds repnz xchg scas dec mov out push adc push lcall pop and or cld mov bound sbb loop rolb and xor jmp cltd and cmpb and push pop jb sbb cmp clc or div out daa sarb stc fs push leave cwtl mov and fbstp (bad) imul (bad) cltd arpl pushf xchg fidivl cli and xchg cmc test cwtl subb xchg test push push jecxz out hlt idiv push fisubr int or stc aaa movsb mov and rol pushf sub jecxz jnp lods hlt dec lods sbb mov insl push imul fs repz sbb mov sub sub add or mov dec lret lret jg lahf inc mov insl dec sub std sbb (bad) jb,pn mov cwtl lahf sbb leave mov imull pop jmp push mov ffreep cmc in and outsb movsb push xchg loop mov out pop push sahf adc mov or stos mov fwait mov cmp push cwtl roll mov loopne test pop lahf push call cmp lea sti push adc popf test out stos lds pop xchg loop mov gs mov jne lcall imul sbb mov pushl mov sbb jl add repnz rcll or ret push jns dec iret rcll push stos sub add push std bound imul ja out lret (bad) mov sbbb xchg adcl dec ret roll loop jle lret or mov mov mov fldenv mov notl lahf shrb pop cmp lea xor or cmp sub cmpsb leave or aaa cltd shlb sti mov stos (bad) repnz mov jmp in add or adc dec lret (bad) or sub pushf pusha sub sahf pop push unpckhps ljmp shr in jp add jo cmp mov pop hlt scas jno (bad) sub push pop inc bound iret out xor out test sub adc ljmp test pop mov jnp add add sbb loope xchg icebp test jmp lret and push jecxz dec int3 xchg mov hlt sti gs mov dec adc adc add std lahf xchg test js ret add mov add push and dec out push mulb ja push add int3 push mov das mov testl pop inc mov ja mov (bad) (bad) xchg fcomps sbb xchg stc (bad) fcoms pop into bound mov add xor notb int imulb jge inc sub sahf in mov adc sub out (bad) imulb push (bad) mov aaa shrb mov cmp repz xchg adc push jbe lods push aam add mov push add shrl inc push cli cwtl sbb dec (bad) mov repnz sub in mov push jne jo js pop sbb xchg xchg adc test cmp add xchg cltd movsl cmp mov pushl popf or repz mov ret scas sub into jns lret rcr cltd loopne imul fsubl aaa mov mov dec pop ret sub inc xchg or add add jl lds mov mov iret js mov xor push into imul push (bad) jmp mov movsb mov std lret out std int3 enter sub push ljmp inc mov outsb mov popa call lods test xchg movsl jle adc mov in pusha adc push push xchg bound lods mov bound push add rcr cs shl cmp nop sub mov in add pop stos add test rolb push dec pop insb lods popf or into xor cli imul sbb push int3 xor (bad) cld pushl xor add xchg std xchg cmp or push in and rcrl xor sub xchg div jbe movsl push xchg icebp shlb sti pop in pop pushf lret push ret (bad) in sub xchg jmp ja das add stc ret (bad) loope xchg push sbb xor mov xor scas je (bad) mov xor xchg call cmc out call shl rcrl in jp nop sahf mov loop sbb mov and push dec mov loop jbe push into jmp inc imul mov daa adc pop inc push gs daa jge cmp aam sub pop mov add loop (bad) scas lret sti daa repz setno lds xorb ret aas fsubs push (bad) dec or mov sub rcrl stos fcoml (bad) lds scas xchg stos (bad) leave lret push stc add sub cmpsb jnp sbb push lret jp test into std push push popf push add jmp in sahf mov or dec cs or push and lods jne pop mov (bad) cmp add inc fadds out and and int3 aam dec stos bound fcomip (bad) test dec add pop sar fmull dec jo xor mov stos jbe add jne (bad) xlat sub cli (bad) stc sub ret push jb xor (bad) ret out and hlt pop sbb es sub adc stc icebp outsl mov pop (bad) pop cwtl and mov jle inc xor mov ret xor xor inc shrb mov aam jmp push adc push out leave and mov sahf movsl ja mov dec jmp and loope sub jnp hlt outsb leave push jns bound push popa stc jp outsb leave push push sar dec pop push and push idivb out ljmp inc add cmp dec push mov and popf xchg pushl mov mov je insb das mov stos mov add movsl fmulp xchg push mov movsl in add rcrb push aam ljmp imul test ret mov jbe out sub cmp (bad) das (bad) pop scas popa mov mov sub aad pop push push and daa sub fist ret outsb in sbb outsb das push iret pop adc nop arpl imul loopne adc inc inc inc pop or or sub mov sub xchg out sbb and adcb adc mov lds xchg mov int3 mov out or mov adc pop xchg loop adc loop pop bound fsub sub or sahf pop ret dec leave mov pop bnd scas pop jle pop sub jle test shrl adc popa (bad) loop insb in hlt ret sbb xchg ret sti adc mov mov popf daa jb push mov xchg pop sbb int3 inc fcom xor (bad) stos repz pop in test cmp sti cli xor and testl fcomps and adc sbb repz and clc notl sbb cmpsl pusha push xor jp xchg pop jb fisubl std fidivr in nop mov sbb mull mov push jmp movsl push ja jecxz or mov inc (bad) clc push pop mov js push stc push push test mov mov sub mov jae jae daa cmc mov or rorb mov jne xchg xchg sub pop std xor xchg enter icebp xchg adc xor out hlt jmp mov mov ret mov cmp cmp repnz jne jno pop xor (bad) repz adc mov jnp fldcw bnd (bad) sub mov push roll mov adc in adc test clc xlat mov mov push or xor pop repz (bad) sub jecxz sub add sbb mov lahf insb dec mov std into (bad) lock dec mov cld pusha pushf cmp and push pop cltd (bad) inc loope ljmp mov mov leave inc add push sbb sub test mov xor leave mov mov ljmp sbbb jmp in add mov and cli lods ficom insl es sbb xchg jae cmp xor fcmovnbe and push or jle jmp or add inc and push and lret loop dec stos mov icebp ret sbb xor mov aad mov sbb stc je xchg fnsave aaa pop mov sar add push (bad) mov add xor jmp mov ret dec adc mov jnp or jecxz jo xor xor mov push mov sub jmp fidivrl dec out cltd out arpl stc xchg dec mov cld outsl push je dec imul sub data16 movsb dec mov lods test (bad) stos std and insb (bad) pop sub jle xchg negl fisubrl fcmovbe stc or jmp ret mov jecxz arpl sbb dec out push ret imul fs sbb (bad) repnz xlat and jae pop or fs sahf out dec ljmp or ret sub (bad) mov or dec into (bad) fldl sti mov ret or int3 mov sub cmp ds and and (bad) pushf mov xor arpl adc ds call xchg jmp push ja mov jl bound clc jne dec das repz xchg les pop in aaa sub sbb aaa jmp bound xor or sti xlat adc dec ljmp in gs jmp jg (bad) lretw icebp dec popf std jl lret (bad) jno dec pop xor roll mov and stc popa mov icebp movsl inc add xor dec icebp xchg push adc pop or lock cmp adc out mov dec fs mov mov add inc dec push jmp es xchg inc xor mov sub ret push imul mov inc es jno into and insl xor lret inc sbb sub pop aad es cmp mov popf dec jbe xor sti mov add scas mov or xor sub ljmp xor aaa jmp test cmp aaa insb ror pushf mov adc pop mov mov jo dec pop mov fwait and (bad) rcr ljmp stos xor adc xlat fsubs test mov cmpw jo cmp mov stos int3 inc icebp xchg add repz fcmovne daa lcall movb shrb mov icebp sub lahf add push pop xor mov mov add repz xor pop mov xlat loope pop jg aam and leave add sub mov jbe leave xlat ror outsl push mov imul inc in clc push xchg and cmp aaa shld lods and lock (bad) mov arpl jo pop pop (bad) movsb dec aad xadd pop xchg push mov shlb lea rclb (bad) and mov xor lret in rclb pop out cmp repnz (bad) xor (bad) mov sub dec mov fs rolb lods dec mov adc lret sbb push bound aam sub (bad) insb popf push gs or dec dec jne movntq sub add dec (bad) aaa add ja dec aad jmp rcrl fwait jnp xor (bad) aas call (bad) mov sub jb cwtl mov pop pop scas xchg jmp sbb test sub add sti pushf ret pop out xchg out ljmp icebp adc in push je dec add inc cmp xchg push adc dec inc sub in add or push xor (bad) fsubrp fldenv (bad) icebp bound and rorl imul jo test sub jg mov or adc or jns and xor xor test mov cmp mov cmp inc push fistp xor mov mov push sbb mov negl pop push dec jnp and pop bnd repnz or notb out mov push orb rcrl mov sar out xchg sti cmp pop leave sub mov xor xor daa sti das icebp jno fs fisttpll adcb loopne xlat adc jo xchg dec loope xor sbb sub orb cmp ja xchg stos enter lods test pushf ret sbb mov mov sub xlat into xor (bad) dec movb sbb xor sub mov leave and sub xchg cmp mov les push or dec out mov xchg ret pop dec inc cmc cmpsl lcall dec mov cmp mov repz popf fs cld sub movb lret icebp aad (bad) ret xor fisttpl das ret jle bound jle add and cmp jle push push fprem1 scas aam xchg inc repnz xchg mov push testb leave icebp push scas fsubrp dec imulb xor mov gs in add push pop push mov jle add fildll jecxz adc sub dec jns or xchg mov mov and shrl (bad) xchg mov jp pop pop out jns arpl add clc inc mov sub lock cmp adc push cmp xor pop xor dec insl pop push and out out ljmp cmp mov popf ficoml xor push adc in add lds sti or (bad) ds xlat jnp loopne test cld and sbb add xchg testl push mov jg icebp pop add icebp int in orl scas mov and add aaa pop rolb xchg lahf jg jae cwtl inc out (bad) ja xor pop andl and and mov mov push not int3 and push lret adc xchg mov cmp rorl pop fcom cmp mov aas add in roll push xchg ja out test std ja lds sbb push hlt ds aam out push pop mov stos mov push pop bound movb fsts bound fwait push sbb divl inc ljmp xchg xorl sti and xor pop push push or or les pop test mov in les mov add fcoms pushl dec (bad) xchg std test lahf je push fidivr divb mov or adc fisubr mov (bad) (bad) pop ret xchg jp xchg and or pushf lret ljmp fs (bad) (bad) lds test mov xor std shrl or movsl xchg outsb pop out je out bound push xor mov jns movsb push xor push sbb jp xchg xchg mov sub cmp xchg test shr and or mov push add lods dec dec lret out and (bad) negb in push and repz (bad) mov mov sbb cmp mov dec sub adcb push test xchg lods fwait daa pushl lret xor arpl fnstsw cmp cmp mov (bad) push lret cmpsl adc mov stos jne out dec push mov in jae fisttp icebp and dec adc aaa push leave lock out stc fisttpll ljmp popa dec (bad) or jnp cltd in sbb pop xor push pushf andl and mull or out inc adc pop mov mov mov and shrl loope mov jno push cmp insb mov pop cmp pop clc cmpsl fdivrl lahf test daa loope sbb popf pop or movsb dec xorb mov stos mov push add add in and out stos sub jp or repz mov mov add and fsubl lock rorl clc cmpsl cmc sub stc jbe loop adc mov sti xchg add mov push add stc mov cli pop int3 xor push mov ds ret xor push in cmc adc add dec ljmp aas dec (bad) add dec scas push popf in rcrl pop ljmp lods stc cwtl mov pop jg mov fisubr ret and shlb pop sbb idivl mov dec mov shlb add xor and pop imul push je (bad) sub mov imull xor cmpsl sbb orb cmp repz ret (bad) xor lret enter out mov test cmp jl icebp xchg fcoml stc sub or add pop mov (bad) adc jge xor push xor mov jmp inc imul cmp in add out pop adc dec das lock std dec test mov adc mov in repnz mov cltd sub push shll sub push lret imul mov xlat mov pushl iret inc xchg outsl inc mov fistpll mov cmc stos jecxz pop pushl push cmp les jns loop mov pop gs das adc lods add enter das and (bad) mov mov mov dec cmc (bad) and cmp cmp ljmp and mov jmp insb and das negb jl icebp mov fisubl mov subb sub dec mov or int3 incl imul aad lods mov mov fld pop and push cwtl push cmp leave pushl pop push adc xchg ret aam adc das mov fadds xchg or mov stc (bad) lods xchg jnp jge lcall inc push (bad) jmp out or loop sub cmp add scas mov (bad) jns enter into xor dec pop mov rcll fwait mov repz jp repnz or xor sbb aas out sub sarl dec jb cld ljmp mov or sub and cmp add adc jb push mov adc sub and stos xor and cmp sahf xchg imul mov pop scas jno xchg icebp cwtl and mov icebp xchg push call outsb add cmpsl pop pop pop ret out je jmp (bad) das adc insb dec lods dec test pop fistpl push fiaddl mov jbe repz mov dec idivb add mov pusha dec inc jno add adc inc das test and push xor add or jmp das or jns inc jecxz aaa sti mov pop mov add ret jp (bad) shll repz xchg mov (bad) in xchg push (bad) int3 xchg add add (bad) mov adc mov pop push cmp dec repnz jge fdivrl dec leave sbb dec xor in jl push mov int3 mov inc lret jmp mov in scas sub inc and mov xchg negl or sarb xchg inc push sub push inc test fisttpll (bad) mov ja aaa lods cld pop sti ret hlt iret push (bad) pop outsl pop jmp sub inc repz ljmp enter push pop dec out jle xchg xor lret cwtl mov repz adc or clc outsl lret adcb (bad) or addr16 add clc add idivl data16 (bad) jl mov pop out call dec sub fnop jnp in sub das sub aad pop repnz (bad) ss orl movsb cli mov mov cltd jae sub scas loop rcr es cmpsb or pushf aam cmp mov lcall mov add pop pushl push mov hlt rcll adc jne test jbe mov adc push mov xlat cmp lret xchg imul mov imul das mov sub (bad) and lods or ljmp cmpsl push xchg shrb pop mov ljmp mov push adc sub mov stos out test push adc bound pop gs repz add dec xchg jge ret icebp sbb sub call mov test mov xor push cld push push sti popl sbb sub call loop jl fs mov or add movsl inc les xchg cwtl jg jmp xchg into mov out pop ret inc fldz out inc jg dec (bad) lods fsub mov sub or jns dec ja jb out xchg and adcl sti mov neg into (bad) in and pop and rcll mov (bad) jle in xchg or and inc xchg push push mov adc or addl xchg mov push sub dec data16 xchg scas int3 fistp mov mov or sub jg std test cwtl les ds xchg iret mov adc iret mov sbb mov and jb lds shrb shlb sub psraw and jle jmp push xchg adc scas sbb lret jecxz mov je or xchg jbe and dec div inc jne xor lret movsb push out adc movsl ljmp icebp nop inc sub aad in lcall push pop sbb cmp mov add cmc dec push cmp fsubs andl xchg outsb jle add sbbb fistl adc cwtl fdivl nop mov gs push aam (bad) adc frstor xor outsb aas loope lret mov jnp mov jnp pop negb pushf lahf sub mov push call pop into loope sti cmpsb pop mov pop psubsw enter push in lcall sub scas (bad) sub mov sbb mov mov xchg daa add adc adc into stc pop scas pop sbb das jne ljmp mov mov out jmp adc fisttp dec rcrl jae xchg xor sbb mov fldl pop jmp mov out pop loopne scas iret mov dec aam add inc aad dec push add add test and adc and fwait out pause push int3 ds pop cwtl les mov mov jecxz dec jmp mov add roll cmp cld leave push xlat fldcw aad fnstenv dec xor dec (bad) out sub push mov xchg imulb xchg notl dec test add (bad) cs xor xchg pushl ret movzbl or roll into in dec add and xchg loopne aam sbb aaa sbb sbb sub in (bad) sub sub inc adc cmp mov fxch jmp call dec sub xlat dec lret jmp in cld jb roll jmp mov scas inc testb jno cs adc jmp sti std fildll mov and popa lds imulb dec push test fs pop lret testl and cmp cltd xlat mov pusha out pop mov das int3 call (bad) sbb jns add jl (bad) push or mov xchg jnp adc (bad) xlat mov push testl nop pop mov shrl fsub loopne add movsl dec jg lock xchg pop sahf pop jmp add sub out stos aaa dec pop repz fadd int int3 (bad) dec jmp int hlt xor mov jns imul daa mov or leave mov and js xchg insb mov xlat in mov lret addr16 cmc imul mov pop inc loop dec inc jne pushl enter ret mov xor outsb inc popf repz push icebp mov jmp push cmp and mov xchg jg in adc sbb imul sub scas lock add lret add rorl and mov out repz or xor xchg and mov push mov and pusha icebp inc adc aas add fidivr or jmp cwtl das mov and sub repz cmc pop iret fwait xchg call inc or aaa mov or int3 jmp lcall and and pop add movl jge arpl add pop std sub rcr jp mov push push (bad) and cwtl inc pop ja push inc push lret negl mov add fidiv (bad) cmp mov push out (bad) std push pop cld pop pop pop aaa cmpsl aad in (bad) out out lret iret fucomip fwait sub lret stc push (bad) loopne mov sbb push imul mov leave sub (bad) mov mov addb js je mov add cmp jg (bad) cld mov out mov dec jecxz dec dec mov mov pop jno and outsb mov rolb jb or daa pop fist outsb mov cmp divb (bad) mov or (bad) xchg sub js insl xorb sarb in pop xor fbld jecxz xchg push jle pusha fisttp mov sbb das add nop imul (bad) jmp (bad) repnz sarl jns xchg cmp and repz dec sub enter dec cmp daa xchg jp add inc mov push mov add outsl push mov inc dec jg movsl andl je repnz or and outsb or adc and sub mov xor pop push sub push mov or sbb pop push pop mov insl call jg lret mull add ljmp sub xchg test adc sub rcrb dec xchg dec and divb adc scas popf or dec jmp add mov fidiv pop neg dec and ljmp jmp popa add jg call loopne or mov js aas aas es incl or sub xlat xchg xchg (bad) pop jmp faddl jb nop outsl subb fwait cmp jbe cmpsl add xor pop loop xchg mov ja adc and and inc cltd fxam add mov outsl adc test adc sub jmp inc xor loope cld inc pop insl sub loope (bad) pop inc sti addl aad inc or in mov push pop ret dec add (bad) mov push mov outsl ret jl cmc sti push dec inc loop add inc mov movsb add ja add add jge mov jmp and or dec cmp int (bad) test add cmc mov not shr pop popa dec cltd iret aas inc rclb inc push stos pop aam fidivrl leave push sub dec xchg ficom push mov jne mov bound push or mov (bad) cld mov int inc orl push mov jg and jle sahf aam pop syscall cmp inc push mov push add dec fisttp out inc add aam pop mov cld repz add aas pop sub add push add adc mov inc out gs xchg adc mov jp mov sbb les enter mov lahf in inc pop and push push xor orb cmp push add in shrl cwtl push dec repz push out mov (bad) out xchg mov fs out lret xor rcl mov rorl sub inc mov roll pop or into push xchg mov and push cmp inc pop into xor movl adc mov add mov daa jo mov jno (bad) dec sub add les js aam and mov mov loope cwtl cmp hlt lret cmp push les imul add (bad) (bad) in xor es repz js and mov pop stc jge ffree jno out adc (bad) sub mov repz pop nop xchg sub roll pop and xor popf (bad) sub les sbb add fmul js adc add sbb mov pop jo push jl sbb jns mov xor pop lds nop in out sub dec (bad) in repnz and jle xchg and fisttp adc in xchg pop xlat mov pop mov jp add jg std daa and push or (bad) cmc jnp lods rcrb lret ffreep jecxz (bad) sub xorl (bad) xor jne dec sbb fbld and mov xchg fbstp pop (bad) mov or jne test sbb push in mov dec repnz rcl pop mov (bad) (bad) stc rcll adc mov leave ret repnz (bad) test sarl xor test sub dec mov jle pop icebp dec sbb adc es jp (bad) mov mov cmp sti jge loop ficomp lock pop sub mov mov or or fildll jmp dec outsl mov push lds mov dec push dec sub add cs add or push mov jl faddl les add inc mov (bad) jb push pop imul rorb jb mov lcall lds daa ja pop roll push aas xchg dec ret lods iret mov mov inc inc and push sub sub mov movsl push loop sub mov add jbe push cmp sub pminsw cwtl outsb movsl popa cli out add jp add and (bad) rclb xor jno iret inc insb adc add sbb lock sbb jecxz mov ss ja xchg push and mov jmp xor cltd sbb shrl (bad) xor out lea pushf mov sahf dec nop notb addr16 or addr16 scas popa jmp pop jg movl cmp xchg add lret ja push fs sbb scas adc cmp jb pop mov inc ret fisttpl and add cli add or jbe cwtl adc mov pop pop in pop push add clc lahf xorl jo or notb repz cmp adc pop jecxz lret mov lret popa jecxz add out cmpsl in imul adc in js or adc inc sub and lret add mov push int3 gs shrb sbb pop dec out sbb shrl xor dec mov jge mov imul sub xor clc add jmp fcmovbe push sub fs or aad dec popf sbb xor scas cmpsb int stos int arpl test mov test enter rcrb sub dec pop stos lret and dec inc or orb sub add mov xor dec (bad) jle pusha add or scas cmp and mov jecxz fs mov out pop sub xchg (bad) call std sub sbb adc pushl xchg dec orb iret xlat jmp pop enter daa xchg xchg xor xchg out jae cwtl imul mov inc push sub arpl (bad) dec idivl rorb xor icebp (bad) in xor in or cmp lock mov cmpb jl imul lahf xchg repz scas add repz or or (bad) cli cmp xor pop add ret (bad) dec aad stos jbe sub push imul sub add dec xchg ret and adc mov sarl movsl std mov (bad) or sub nop lret dec push xchg xor mov iret jns dec cmc mov into sbb xchg adc aas mov cmp mov out and jo subb ret lret xchg sub es mov dec or aaa fsubs or ret xchg mov xchg inc push mov imul sub and imull mov (bad) sub rcr mov pushf and cmpb xchg lahf je lods fidivr adc jne mov in dec push and sbb mov mov push adc pop or xor int jbe and mov push cmp (bad) and cmpb or push or mov xchg or jmp xchg (bad) lcall test shll jp lcall or pop cmp dec sbb jmp mov loop test push push and dec dec loop xchg xchg stos mov mov data16 adc mov inc mov stc aas mov ror leave pop xchg xchg lret inc sub xor (bad) xor fstpl pop mov or mov dec cmpsl dec ljmp inc and mov cmp or pop subl and xchg (bad) push (bad) lahf clc popf rcll sti mov inc iret mov out sub xor frstor xchg gs mov jno lds sub clc aaa sbb cmp (bad) fdivl imul std popf leave divl dec nop aaa nop sahf mov pop outsb push push cmp inc cmc fabs out call jmp jae std push dec mov iret mov xor mov outsb mov pop and xchg sub dec jno sub addr16 call mov sub and sub cmp mov sbb jmp (bad) or xchg scas imul jmp mov ja dec es das dec inc (bad) sbb test out cmp adc xchg xor and mov es jg add decl mov mov sbb data16 (bad) mov mov add xor leave sub sti cmp (bad) mov sub ja jb lret loope outsb sbb pop xchg pop (bad) mov pop cli int outsl pop sub sti jnp mov ret xchg and vmptrld and or adcb mov popf jno inc inc or pop push push pop add push aas call inc jbe sarb loop jl push divl push or mov jns pop mov xorb movsl sti pop mov fs dec cmp xor xor fcmovu inc imul out cmp je sti loop (bad) loope jnp lcall sub out stos (bad) lds mov xrelease test xchg add rorl jge inc (bad) (bad) and popf push push inc mov mov fisttpll xor fisubr inc cmpsl sahf or ret sub or xlat add stos sub xor push cmp cltd xor je rcrb aam pop data16 mov daa xchg clc push faddp push xor mov fdivr mov mov imul and mov inc bound dec mov inc xor xor pop mov lret and shrw leave pop or sub and add cmp (bad) jmp xchg xchg sti fwait lret add mov push add mov xchg push addr16 mov stos sub cli repnz (bad) cmc lea repnz (bad) cmpsl (bad) in loop mov (bad) mov xchg stos bound mov add xchg jns loope or ds mov add flds add push sub xchg jae movsb adc pop pop jmp fist ja scas jae xor cld repz mov dec aad or std movsb je out mov xchg int and pop bound out jbe push inc stos sub rcr test adc repnz mov cltd xchg mov pop add cwtl sti add (bad) fisttpl jns mov pushl mov negl mov pop mov nop sub cmp mov sti (bad) icebp ja div out sub sub cmc jge cld add jle cmc clc (bad) popf inc daa mov push lret scas notl loop jns mov jae sbb into and and xchg stc sub dec mov test xchg div add or jmp movsb push xchg jp mov pop rol popf sub jmp pushl out jno inc mov xlat pop in xchg (bad) sbb cwtl cmp fdivl std xchg aaa das sub mov negb sub into (bad) (bad) dec dec scas sub loopne sbb add mov das lret dec ret ret jl ljmp jge mov ret and test mov pushf repnz sub xor add mov push xchg and aad out jns movsl mov lds scas xor sub push mov cli mov jle mov repz xlat scas (bad) std pop adc jecxz ss popf bound push sub and pop sbb cmc sub and mov jg addl sub lret rorl imul push adc xor pop push pop (bad) push scas sub shr sub aaa pop loope add outsl mov stos cmp jecxz cltd mov push cld or shlb lret jmp sub and cmp and mov adc scas mov sub cwtl or cmp pop mov add (bad) je jb sub gs push push add (bad) or mov (bad) mov jae pop enter mov jo and or adc xor push xor js cs inc sbb inc pop std push fimul cmpsb cmp popa std adc shrb cli mov sti adc adc pop xchg scas fdivl pop mov jnp or cmpsl test call xor xor pop ficoml (bad) xor xchg pop mov cmp sti pop jne movsl fadd pop jmp in loop adc and pop int3 xchg push fisttpl pushf jecxz lods mov or xor pop mov movsb pop repz xchg mov lods mov cmp pop out lods ljmp or fs sbb pop pushw divb and jne test push (bad) cmovle sub jnp jae ja mov std outsb fwait and dec les loop adc cs aam and loop int3 push xchg dec sub ds add mov mov je stos repz mov jo add jge (bad) sub imul xlat jne je mov inc out mov xchg xor repnz mov sub or xchg push (bad) cltd stc scas xor xchg roll dec cmp imul ffree mov and leave ret je pop das jne sti sar loope mov popa mov call mov adc jcxz in add mov repnz add xchg mov xor popf adc sub inc push pop adc repz xchg ss add popf push sahf xor idivl xchg jnp rclb cmp mov mov mov icebp imull movsl add mov (bad) repz out mov dec fistpll xchg jle ljmp mov ret inc inc or mov imul adc int popa add ja (bad) lock xchg adc push mov scas mov sub mov pop cltd xlat mov loop mov fldcw ljmp cld mov into xchg repnz mov lahf add mov pop shrb into stc cmp (bad) addb (bad) aam ljmp mov or pop xor pop xchg push push or mov xchg add jp dec sbb mulb sar fsubs imul in iret (bad) cmpsb push mov add mov scas mov cmp cmc sti mov sub test mov adc por and insb mov dec testl or movsl rcrb push outsb mov clc or mov or into sub negl in sbb fidivl jmp add (bad) fldcw rcrb and lock in mov lret xor mull movsl decb shrl stos (bad) and xlat pop cmpsb lcall push lahf icebp lods pop jne lock addl stc out sub scas loop jbe jb xchg nop pop xchg cmc sbb push add pushf and push jae pushf mov call imul push xor lret lcall push sub xchg pop push aaa inc imul mov xchg int adc cli fcoms or xlat sbb sti in dec push push fwait clc xor popf shrl xchg xor sub sub lret ljmp and push aas (bad) sti and in jl out mov or pop or fldcw lcall fsubrl inc fcomp ret cmp insl je or sub mov (bad) adc aaa fadd popf rorb xor lahf mulb lock out sub jmp lods push dec and inc xlat jne mov sub movsl push and jmp dec push popf rcrl imul dec and adc mov fildll inc repz lcall nop jl rcll loopne je cli mov stos mov dec xchg aas stc popf mov jmp out and add xor decb jne fnsave dec aaa lds fsubl xor cmp pop xor mov adc fwait sarb (bad) (bad) (bad) xor aas mov mov sbb jle and adc call mov cmp loop (bad) xlat lds or stc stos adc dec daa add dec adc mov inc ret rcll jge jmp loopne ljmp pop xchg adc scas int cmp movb xor test xor insb pop xor xchg pop into jecxz sar xchg sbb dec stos and add fs push sahf push ljmp xchg and sub mov (bad) dec or jl outsb push fs test movb in sbb ficom aaa aaa test dec add (bad) in (bad) pop (bad) hlt fildll pop enter adc cmp jle stc adc imulb pop lahf fnstcw adc xchg (bad) jg push jbe pop out outsl xor out lret (bad) push lcall pop out lahf repnz int push adc fnsave testl mull xchg mov lds xor cmp pusha sbb xor jb ja mov fwait cmp mov mov or lret (bad) vpavgb cmpsb xchg (bad) daa and cmpsl jbe and adc mulb into sti shlb mov pop mov sub inc xchg add fnsave test (bad) mov cmp (bad) sbb sbb push movsl pop adc clc push gs xchg out xchg (bad) mov fsubrp push std aam push dec jle and les int3 es inc outsl adc test movsb jmp in or ret loop xchg leave xchg das mov into insb adc (bad) add jmp push and adc dec lods ss and lret outsb leave (bad) sub and (bad) push fidiv mov add pop loope js mov mov sahf dec sbb stos push pop call out xor xchg (bad) rcll test mov pop cmp mov adc mov fmull pushf push mov ljmp (bad) cli add aaa loop cltd les add aam push sub push in and xchg jecxz stos push gs sub push add mul cltd mov inc test pop std insb adc sub add orl adc jp add out test bound cli sub xchg (bad) aaa mov pop mov ret std insb leave dec and mov and inc push sub inc out mov add sub push xchg and bound jmp xchg les fisubrl or pusha shr cmp sub lahf xor jl fisub imul je xor and xchg notl (bad) dec xchg cli mov and shr mov xchg xchg loop dec inc inc mov (bad) loope lods mov iret mov sub push movsl in enter xlat push test data16 andb sub dec sub mov push popf test xor and loope xchg dec pop mov outsl mov pop mov sub iret sbb and sbb push sbb dec repnz popf shlb fisub xor pop and pop sub push xchg and pop dec movsl mov fisttpll jno mov into pop repz add test jl inc rcl inc mov leave cmp or fwait notl jge (bad) loop loop rolb popf adc stc icebp xor or cmp mov mov outsb xor fisubrl (bad) rclb adc push sub test xchg mov jne xor add dec (bad) push mov shlb popf adc xor xchg stc je (bad) call cmpsl mov test not dec test cmp cmp fist repz xchg out sbb mov ss ficoml call lea (bad) arpl dec and push mov dec rolb push cli pop nop jo sub jmp popf cltd inc iret cmpsl popa (bad) ljmp out xor jne mulb mov sub ss or cmp sub xor out ds lret mov sub pop clc inc fcoml mov ret pop in dec xor mov xor sub push sub mov divb fdivrp push movsl xchg jecxz scas bound dec jg xor mov dec sti xor jb notb dec pop ljmp or xor cli loop xchg cmp insb jecxz lret call lds shr cltd (bad) ds add shlb movsl inc in xchg pop mov test inc mov out clc test and add sub fisttpll push mov rorb notl js repnz ret (bad) sbb fldcw icebp xchg (bad) std jb pop iret imul lahf fadd xchg repnz fsubs push add sbb xor daa (bad) xlat lcallw sub push or and or mov imul enter cltd lea mov pop mov lock cmp xchg jl rorl stos mov and outsb sub mov outsb mov mov mov or add pop sbb add and (bad) call bound imul dec push jns ret popf dec scas lret rcrb int3 inc fidivrl dec mov xchg std imul xchg je (bad) ja test fucomp icebp dec aas sub shlb pop sub (bad) daa pop ret mov out dec fidivr jmp pmaxsw mul lock call inc cmp loop fildll shlb adc mov pop lahf pop mov gs sub xor out sub icebp ljmp dec out push loop mov (bad) xadd jmp jo movlps js ds test sar pop test mov out clc andl shrb imull in (bad) sub or push (bad) push and lret xchg jo add sbb cs mov js (bad) jo shll sbb add lock xor sub loop ja in lds jle jp add out sbb pop stos mov sarl scas add movsl xchg in int3 dec loop sarb pop push fwait sub stc sub and or pop cld scas lds ljmp addw xchg int3 insl mov repnz pop xor push mov add test lret gs cmpsl sbb out xchg nop xchg shr or mov icebp xchg sti cli mov sbb jle mov leave xor leave repz clc (bad) xchg cmp push gs and inc sbb mov pop ret dec mov rorl jmp ret sahf push repnz mov push dec mov (bad) mov lods push (bad) popa loop fldl2e (bad) insb mov ret outsl or clc fnop lds adc mov in inc aaa sti and gs cmpsb ss pop dec push iret lock adc stos mov jl cmp cli popf popf cmp pop cmp mov add cmp stos jo pop out push add jmp mov pusha (bad) jmp fdivrp (bad) lret mov add xor mov fidiv fldt xor pop stc insb and call shll xlat lahf rclb mov dec mov ret pop shrl test xor lds pop mull or outsb mov sub xor fxch sarb ret mov es fs inc frstor add outsb mov push rclb mov ljmp xor stos sub and and and jmp pop pop stc idiv imull repnz fistpll dec test mov push into mov sub scas dec cltd add and add scas cltd mov dec sub mov addl add xchg or xor (bad) sbb jge ret test mov and fmul or sarl xchg les sub push pop xor or push pop hlt loope daa (bad) pushf gs adc lods cmp mov or out pop adc and mov fisub in and iret push adc (bad) xchg or insl pushf jge jl clc or sbb in ljmp adc lret add adc push jmp add (bad) or sbb icebp dec scas loope cmp hlt leave mov pop and setne mul mov mov or lret (bad) mov (bad) add sub mov data16 sub lret scas cli or lods inc in and mov ja cmp xor cltd push ficompl cld and lret inc mov imul mov mov (bad) dec mov or aam loop and adc adc sub dec mov repz jmp pop loope adc repz insb pop and sbb pop jge out sub fs jmp dec sub jmp sbb out add and push out cmp cmpsl jbe push push (bad) imul sub push enter push sub cli je cld inc or sub xor sbb pushf (bad) mov adc ljmp mov les dec and movsb push in lea and dec (bad) push bound fdivl hlt inc pop sub lahf mov stos sarl (bad) scas test lret adc (bad) outsl jne fs mov mov repnz out not cmp daa lret cmpsl icebp icebp mov faddl ret jne mov in cmp pop xchg jns pushl mov popf rorl rcrl loop xchg xor leave test mov mov xchg notb push (bad) stc jns bound enter (bad) sbb sysexit jge mov cmp clc push fcoml popa movsb sub inc lahf les mov push out lret movsl dec jmp xchg adc and sbb pop movsb mov push into and dec loopne jmp adc rclb add les (bad) lods cli xchg mov jle inc push sub idivl ret mov mov and mov test push sub xor repz mov mov (bad) repnz xchg jmp movzbl lret push cld sbb (bad) icebp xor daa and cwtl imul mov loope sbb add pop add lret jns jmp mov fimull pusha subl push mov mov xor out dec mov cmp pop mov sub or frstor jb xchg jns fs mov xlat mov jge data16 cmp mov jae neg push pop xor xchg call sti cltd loop mov xchg pop inc or sub into decb pop loope pop adc xor jmp add xchg push dec fistpll and pushl and jg ret sub inc int3 out or pop mov pop lret out arpl ret mov aad lcall add testb sub js notl sbb sti and add loop xchg bound and and data16 pop inc test cmpsb insb xor mov sti idivb pop lea adc ret lret dec jle cli pop out test icebp sbb xchg pop push mov or in call adc xor fstl xchg out pop (bad) out dec xchg pop out je mov xor (bad) and ja push movsl xlat and or mov test out je jae add mov lds and sub hlt push and or mov ljmp loop fsubrl cmp aas cwtl push iret mov mov stos pushf pop repz lcall inc repz imul popf adc cli (bad) mov in pop cli lret leave fist dec mov or bnd cltd inc mov (bad) add cmpsb lcall ljmp mov inc sbb mov xor pop dec pop stos popa ret jle ja mov mov jp in and loope jg mov jl fidivrl das sbbb lcall dec fimull out mov das int jb repz imul and jae pop (bad) mov pop into mov mov lods cli daa cld xchg ror cwtl jnp or mov jg andl or out das push mov movsl mov popf fadds cmp mov (bad) lret mov push (bad) jecxz and xchg push mov xor mov cs mov outsb rorl xor sub and jne pop xor jl out cld pop movsb cwtl xchg or hlt or pop shl xchg clc fcmovnbe lods jp cli sub out shll cmp popa dec test (bad) and mov test inc in pop lcall dec stos fnstsw pop mov dec out into les and and xchg lcall ret jp movsw mov (bad) xor jnp rcrl out cmp mov out pop sbb aam adc pushl iret idiv pop dec cld push xchg sub adc or cmpsb les pop loopne adc flds cmp out sub xor ret sub add lret scas sub (bad) lcall hlt movl push adc popf (bad) xchg pop cmp add xchg xlat mov jo daa ficomp pop rcrl push pop cmp cmp and mov sub pop mov dec mov jle jbe lock mov sbb xchg movsl out or or imul mov cltd adc imul sub dec pop gs pop push sbb rolb add call and (bad) lret mov push sub cmpsl mov ret push inc cmp into loopne xor or stc push add rcll adc dec adc xor sub or mov sub aad int dec sub xchg and mov xor (bad) mov ret xor out dec add push xor dec scas das test lock sahf loope imul or lods push mov and sub stos (bad) mov daa mov mov out mov or jnp add xor cli gs sbb sub adc mov lahf (bad) in jp push add and loope jns dec ret orb je pop mov mov mov cld aaa loop mov (bad) shlb cmp outsl (bad) fildll loop dec mov mov dec lea push into add pop clc sbb (bad) (bad) jne lcall jnp test pop push sub lret fsubl loope sub loop dec sub or scas cmp sub addl mov mulb loopne pop xchg push xor and scas cltd test sub sub xor aas lock (bad) push jb push movsl and adc pop dec pushf pop xor shlb aaa jg fildll push ds xchg dec mov mov lock dec sub in sub sbb xchg push and add sbb fbstp fmuls xchg flds sub iret faddp rorb stc xchg xchg clc mov adc popl ss and sarl inc xchg pop xchg or xlat pop dec lcall sub mov das xor mov inc mov repnz imul mov mov inc das not cli lea cld movsl lock popf push inc lods popf or adc enter in mov movsl addr16 and (bad) jle rorb pop shrl lret and pop ss and push leave xlat mov jo test popa cwtl add sub loope pop jl jae push adc jge ficomp sbb sbb int3 rcl shll rcll xor mov testl fisubl and fwait or xchg push dec pop jmp mov flds push sbb shll lods lods mov or lock xlat dec mov add repz jnp jmp aas repnz dec stos pop cs sub imull xchg rorb jl or dec xchg lock lock mov imul ds adc lahf jae leave xlat sbb insl loop push jecxz xor mov (bad) dec sbb jnp sub dec xlat push pop jmp in push sbb xor and mov push aaa mov push (bad) or add mov clc cmp movl dec adcb cmp mov pop push in ljmp and pop cmp icebp outsb adc mov xchg cs mov add rcrw loopne mov orl shrl (bad) ja add (bad) out cltd dec out enter push stos test dec push adc add sti lods add fbld mov dec leave xor pop fcom cmp pop xor push mov les push mov cmpsl (bad) pusha dec shrl mov mov dec (bad) xor xor das cli popa out sub push insl cmpsl sbb shrl dec aaa out dec xor out call insl repnz lret daa jno dec jle das dec pop add mov xchg mov iret push daa js out test sub scas (bad) sarl xlat mov and pop push push popf out xchg sub lods lahf push (bad) gs push dec or inc sub mov mov jmp jb add mov lds or push pop insb push dec ljmp add call (bad) out loopne negw test ror cmp decl xor hlt dec lret je (bad) sub add jae testb ljmp inc in cli repz mov shl popa pop fnstcw paddusw shrb test sub mov jge and aam (bad) mov outsb mov sub stos sub sbb notl mov popa jbe cmp jge mov dec scas sub ljmp enter mov mov cmp js mov lret pop out mov scas daa cmp imul push mov (bad) mov mov push das mov (bad) jb jnp jecxz cli ficom dec stos fs and add sub fld rorb xor (bad) fsubrp push pop iret push std lods inc shll sub cmp xchg xlat ds jp inc push cmp mov jge lret inc sub jns cmpsl jo add (bad) adc jb lds xor lret out mov icebp xor and lods sub add jg jle imul cmp or andl sbb xor dec or mov inc fs mov xor aam call pop xchg push pop jnp mov notb and pop pushf mov ret sub pop jmp loop les add mov cmp (bad) sbb (bad) push pop mov jne xchg jle inc (bad) xor push (bad) mov jo lret or bound add insl imul add scas call mov cmp add xchg (bad) lret cmp inc adc and subb cli (bad) mov mov mov shr xor ja jg loope ljmp imul ljmp mov test xor movzwl xlat jae lods icebp icebp inc ds jns mov pop imul popf das test loopne (bad) adc or push sub fbld imul in dec leave lahf lcall jno or bound jp mov jns sbb aam mov pop outsb (bad) imul inc lahf lods out jge pop imull data16 mov mov pop add movsl and scas popf in cmp dec cmp das dec mov lahf rol mov add stos lea cld inc pop mov push lret mov test mov dec xor jmp jp xor fsubl xlat xor imul mov adc sub cltd mov sbb idivl scas and adc (bad) in sbb mov (bad) mov mov pop lret xchg xor sti pop inc dec or lock out lahf push sub fild xor mov add cmpsl dec add inc das aam mov test sbb lods insl sub aam push and inc jmp stos daa repnz fisttp lcall aad out add jle ds insl fnstenv pop dec aad lock mov fmuls lret mov cmp mov sbb or cmp pop cmpsb jl mov add mov and xor (bad) or mov dec mov xchg mov loop xchg dec pop lds outsl enter pop les lret dec mov sti std inc sub test sub mov std ret (bad) mov push inc mulb add shlb (bad) adcb ljmp or xchg push ljmp out ja mov mov pop inc cmp sub iret xchg jo inc sub and and mov iret add push dec mov ret ret and cmpsb mov inc cli xor xor mov ja (bad) jne int arpl (bad) enter or js fcoml (bad) (bad) mov mov pusha and mov inc dec out (bad) fstp adc clc xor push sti and les out mulb jl popf into sub inc and cmpsl testl sub xchg cmpsb and (bad) (bad) in andl mov adc pop das testl es sti gs fstps cmp lds in movsb jge add negl in push add lahf out dec (bad) jmp psrlw pusha mov (bad) xchg jno insl es lds (bad) repz (bad) mov push ja and leave ljmp mov out mov cs or cmp jge das mov leave or movsb popf pop mov in cmp les pop cmpsl fistl or ljmp pop cli cmp mov push adc out push jne out dec cld daa and pop xchg lret xchg shr leave sti pop ror sub lds sub aas push fmul push dec mov pop (bad) jmp cmp or out add testb sub fildll dec mov adc cmp shrl aaa pop or aam scas mov xchg popf adc in fldl ret aas push sub in mov add cmp cmp addr16 jmp aam je push jae sub repz sub or adc push test out mov sub adc lock push jmp dec movsl pop xlat dec rcll mov fmuls lret int jmp (bad) faddp test lahf negl fidiv mov testl jb pop or dec sbb idivb mov ret xchg pop outsl (bad) jns and xchg call pop push ret movsb jle mov jmp adc mov jae into mov bound and add push insb xchg mov fisub push cmp dec or cmp dec mov mov mov clc imull cmp daa ljmp ss jmp cmp and add jno jle jp aaa fcoml daa idivb push ds sarb mov mov dec push and and stos in sbb insb jo add loop add popa js mov aas mov jo movzbl pushf dec inc or test push icebp stos in sub jbe xor cltd xor jns inc sub stc into mov enter inc xchg rcl ds dec mov inc sti fs les daa and adc jb adc inc push and into xchg int jecxz,pt dec mov fildll sbb lods das rcr fidiv ret jg xchg and mov lods stos mov js stc jle mov sti lahf pop cmp cmp pop outsb es push ficompl stc andl inc loopne stc jnp loop add call lret cmp dec mov pop mov xor xor sub rorb sub loope mov loope lods and push ljmp push adc xchg mov gs xor mov in clc ret pop jmp inc subl xchg stc mov pop std xchg pop push in sub stos add sbb add pop sub inc imulb cmp addr16 jge cmp sub movsl mov (bad) int inc repnz xchg stos cltd out test std add shl mov xor push (bad) ja scas int3 mov xchg add xchg pushf loop leave pop mov ja jnp xchg into leave idivl out mov lcall adc sbb (bad) cmp (bad) daa negl mov in cmp jecxz (bad) push adc pop add pop mov ljmp insb jnp sub ljmp sub push xor iret leave (bad) sub cmp ljmp int3 jns dec push and scas (bad) iret and shr data16 pushf dec ret dec cs or rcrl call loop repz mov xor xor iret mov jmp lds mov sarl (bad) xlat xchg dec ja jp into stos sub pop pushf push and (bad) (bad) outsb add out mov loop fisub pop rclb xor ret push dec sbb call pushf dec xor ret popf cld nop daa push gs out add or inc and movsl xor int3 ret iret subb mov sbb adc pop jmp xchg push cwtl inc loopne fisttpll push and bound inc in fdivp and push pop xchg in mov mov test xlat sti mov shll and xor xor or mov mov clc sub xlat mov mov jne sbb jmp andl (bad) push (bad) lock adc (bad) lahf pushf (bad) xchg shr mov dec sub arpl mov loop fcmovne movsb dec popa cmp aaa shrb rorl das cwtl dec mov rclb stos repnz lret out mov xchg jo xchg inc sbb gs cmp enter jp mov cltd data16 js popf mov call mov xchg and (bad) jp std mov inc rcrb push inc outsl shr insl sbb cmp gs divb loop repz push and mov out jne mov leave ja lock lretw aad mov or sub cmp scas jne mov sbb ljmp jg xchg pop lret sub (bad) lds incb cmp pop cmp mov push jmp leave into cmc gs cmp std xchg jae ret mov adc les jns dec rep dec addl and push sbb push adc inc aad pop shr inc xchg xor test xor sbb pop pop add js mov or push push pusha daa fsubrl ret (bad) arpl lahf nop mov add gs dec cmc sub lret (bad) call mov jns dec pop rcrl js rclb inc jle xchg mov add (bad) out jo icebp icebp mov jecxz test (bad) repz inc iret popf cmc adc lahf ficomp and push (bad) mov pop cld popa das pop rcrl mov inc push loope in int3 mov jle rclb adc (bad) cmp das in movsl and cmp jge (bad) rol jp jl jmp push ds and mov outsb xchg hlt and push rol xor ljmp inc or subl outsl test leave out jne or popf divl adc idivb sbb imul cmp cwtl mov pop add mov daa ja inc rcll mov fcom cmp data16 imul in in cwtl sbb add jnp (bad) shl or add in and sub out cltd inc push aam add jb xchg push pop (bad) dec jmp add cmp xchg mov seta outsb mov imul fsubl (bad) hlt mov fs pop into jns movb jns outsb (bad) add int aas adc dec mov xchg cmp outsl fs outsb push jg cmp (bad) daa js mov inc imul jne inc push adcl cmp mov aad pop pop fldenv pop xor mov sub or popf repz mov fdiv std push das (bad) dec arpl jp add xor daa cmp xchg cmc push aas adc mov or pop sbb sbb (bad) pop fdivrl xchg xor dec into out (bad) into aas movl sbb pop mov push call loope add mov mov fist repnz add pop or sub xchg je inc or and fidivl sar das mov out mov loope mov mov ficom mov pop rep daa rcrl jl outsl lret pop pop mov jb and fcoms sbb insb cltd in std stc das xor mov mov repz mov out lods rclb inc and pop mov add repz adc scas in es ljmp imul out dec xchg movsl adc pop jne sub (bad) aas in (bad) or push inc adc aaa nop pop pop pop fs mov jge stos fwait int loop mov (bad) pop icebp dec pop dec mov call addr16 push cmp adc xchg sbb mov fbstp (bad) repz mov sti aam push jo inc aas inc xchg aas push xor pushf stc loop ret das or lret xor aad daa mov pop and popf jae mov sub inc (bad) out scas repnz popf insl fs xor std inc lcall dec clc out lcall scas sub mov dec mov mov pop jne pop xor stos mul adc add movsl cltd add test ljmp fstpl sub sub jb add je pop pop sti mov lea mov lds (bad) mov adc dec dec cmp pop sub add inc push mov sbb inc movsb dec push loop xchg xor out bound adcl xlat mov cmp cmpsb and lock lret js into push shrl mov stos dec pop inc jecxz dec or pop das out push bound aas add test and sub sub lahf xor cmp sub pop xchg pusha and inc push push insb gs add add mov imul cwtl sub loope js into outsl xchg flds add mov gs (bad) notl cmp jge js mov fimull pop test test les pop dec bound ret sti dec and dec out xor dec test jmp insb ljmp jns adc ljmp sub or imul pop push cld add idivl mov mov or xchg dec (bad) movsl ljmp sub cmp ljmp mov mov and add jp cmpsb andl or call not es jmp iret and pusha sub pop mov in jbe and pop test sti scas (bad) cld lret pop fdiv pop in ret mov add cld dec jb (bad) adc mov cltd push xchg inc mov or sti sti test adc notb inc lods push movsb cmpsl and pop adc out loop mov movsl int3 sub out enter fucompp sbb add aas xor xor jle jne icebp jp inc sub xchg jmp repnz nop test add popf jge incb jl out adc mov lret mov imul xor sti sub and mov pushf stos push fisubl jnp mov rorl jmp sbbb imul fldl addr16 lods fiadd rcrb repnz or scas mov dec xor lret inc test pop repnz sahf bswap jge dec dec inc loop xchg xor bound call sbb xor clc inc (bad) stos cmpsb push push adc in insb and movsl adc mov sub popf add pop pushf mov popf std adc popf out jp pop xchg mov xchg cltd negl stc push pop mov pop or fmull bound out out es or (bad) je shr nop mov lret sub clc push aam or and insb and adc ror insb cmpsb adc or lahf imul add xchg pop lahf cmp dec and mov mov loope mov and cmpsl and out mov adc jae push adc push into push add adc (bad) addr16 into adc out jbe adcb aad dec call imul orb int into dec sar push sub repnz ret add push adc or sbb mov mov inc leave repz les sbb mov dec repz or xchg add scas int3 aam in popf dec mov (bad) popf out sub ret push daa pop pop les dec dec scas imul stos xor (bad) (bad) aam lods fidiv mov out inc xchg das jmp pop sbb lods ds dec mov popf push mov adc mov pop mul dec ljmp stos add dec mov inc sub (bad) mov push hlt add stc call psadbw les loopne sbb fisubrl int jmp and push rcrb scas dec cmp in lods cmp adc psubd jb daa push out mov xor (bad) repz fwait icebp cmpb sub mov pop xchg in dec pop icebp rcl in jecxz stos mov cmpsl mov ljmp idivl lahf cmp or scas xchg rcll xor out xchg mov and sti fwait sub mov pop mov mov pop jno add lods adc out and in mov lret subl (bad) or mov mov push outsb pop inc repnz imul adc fdivrl sub aad leave dec cs cmc dec scas jns jp imul shr mov mov sub xor inc xchg arpl gs sbb xchg repz inc jae or push repz cmpsl push adc pushf cmp repz sarl es jns mov icebp fcoml aas in cmp int3 es inc pop jae add and mov xor cmc mov jecxz sarb js (bad) mov out lret or fwait sbb pop das mov lret cltd push cmpsl loope ljmp loope mov ja jmp dec ss sti fadds js xchg shl add xchg gs arpl sti mov xchg stos mov repz sbb in das sub in add xchg je pusha jnp test jp jbe out leave add or mov mov (bad) xor cltd mov js loop aam push jbe fcoms out dec mov jo mov jb test addl push mov pop pop add or inc lret add and inc push mov jg mov mov popa cmpsl sub imul push jecxz popf xchg adc mov push aaa fwait dec xor into sub clc sahf mov and push les aaa sub and push rclb mov cmp decb mov lret xor ret cmp fnstenv shrl jno inc sub push cmc or int3 insb mov adc data16 add jo rep xlat push ja mov mov decl das fisub pop outsb cmpsl jp xchg push leave dec cld lock aas (bad) jnp pop leave pop lds pop mov es fisttpll sub or (bad) outsb push test jne xchg xor test jb mov lds and lea add out test in xor add outsb stc cwtl xchg jmp ret mov xlat pop mov pop sti popa inc out add fldenv aad pop push movsl scas adc sub xchg (bad) call jmp mov lret out das jmp mov sub (bad) nop scas pop mov cmp pop out add push sar int shrb (bad) mov (bad) fidiv js sub ret mov jmp xchg repz mov daa out jge mov int3 push add mov (bad) mov fdivr sarl imul cmp xchg push lret lret or add mov rcrl test or cld sbb jmp lahf dec out cmp fsubrs cmp popa mov ljmp cmp imul and add add iret sbb ljmp mull outsl cmp rcll imul dec and lret mov push stos or mov mov push in pop xchg stos push and push int pusha testb jne ja adc test mov dec stos xchg xchg mov dec xor scas push mov xor std decl jecxz jns dec mul fsts subl xor sbb rorl test scas xor cmp xor xchg rorb add test (bad) js pop out or fisttpll jmp addr16 sub dec dec int3 (bad) mov xor in pop mov push and xor out jg pushf dec cld out daa xchg fmuls ljmp dec mov stos loope sbb push out imul fsubs jmp mov pop mov in adc jmp ja mov pushl xor lcall push xchg (bad) push in fs mov shl (bad) ds adc jmp fidiv dec (bad) sub stc clc fs and pop pusha lcall ret mov push ljmp or mov and rcll cwtl add das mov adc ljmp jg repnz jae xchg lock or (bad) sti mov daa (bad) push lds push xchg dec mov leave jmp push imul xchg cmp in sub mov cltd leave jmp mov ret adc sub repz and (bad) ds repnz popf nop xorb mov test je imul or sti aad mov cs fstps xor cmp and inc repz lock divl cs stos mov fwait sub xor rcrb shrb add inc pop divb xor sbb jge ja sub sub fldl shr (bad) stc test xor cmc sbb sub popf jg sbb rclb or shlb add repnz adc add pop sbb icebp mov sti ljmp out pop jle movsl stos mov push jl leave fild cmp ret and daa aad pop xchg out sub add mov and cmp rcll fptan loope das stos xor test mov xchg jp dec pop jmp incl repnz push adc pop test push mov dec call or mov xchg pop dec loope das faddl aaa mov mov and push int3 push aad dec (bad) aaa xchg in stos mov cmp dec mov fs int3 push xchg xor in sub popf loop push mov adc pop dec adc pop mov shr mov les out lods gs push or xor xchg sbb xchg pop inc add popf in iret pop (bad) xor jecxz lret test out fidiv mov mov xchg ds sub add mov test icebp ss sub incl ret outsb daa add rcrl pop add mov pop faddl ss ret (bad) lret jmp or or adc ja or les dec ret divb outsb push cli jecxz dec lds push or lods xchg fimul (bad) fbld ds cmp add ret and pop in adc ja stc cmovne (bad) ja mov mov test pop lret and cmpsl nop adc push stos cmpsb stc push sub bound add icebp roll repz pop pop or sub shrl pop jmp mov testb add sbb bnd add mov adc and xor mov or add repnz cmp cld inc xchg and add xchg xlat popf dec pop xor xchg xor rcrb ljmp leave xchg pop and test lahf cmp mov testb jle lock out jmp pop scas xchg inc and push out sbb ljmp inc and push jg sbbl sub jbe mov add cmp xchg ret mov das and and (bad) (bad) sub and mov in nop mov jns movb inc mov out dec lea jl add pusha stc add add mov xchg test pmovmskb cs out fcomip dec and xor add inc or add test mov jo lds push mov cmp mov (bad) dec (bad) imul mov ret lds and dec incb sub sub dec loop cli stc js lock jmp outsl push fstps scas jno or sub (bad) jno and test sarb xchg xchg sub pop sub xchg les push mulb jle scas sub lds cmp jb or adc (bad) cmp cld sub inc andl cli sub cmp mov add sub jmp arpl or outsb mov fstpl or stc (bad) dec lods mov or sti in es jae das jae sub dec testl and repz popf push pop imul leave lret push jl lock and mov fdivrp and pop xor xchg into jo cmp add repz sub adc dec lret lods icebp sarl (bad) add into sbb xor (bad) data16 test pop mov (bad) xor sti mov scas repz out arpl test popf rorb repz add mov cld add icebp sbb push das add push jbe pop push outsb inc and (bad) (bad) icebp mov sub or bound mov and and roll test movsl stos pusha in sub hlt shr pop jle jno mov imul adc ljmp ds in mov scas mov call lds mov dec mov test int3 adc inc mov pop aas fs cli mov jg les push sbb test sbb (bad) mov sub mov pop inc lods pop inc dec mov das sub icebp out imul in sbb jo mov adc (bad) imulb push inc movsl sarl jle or mov mov jle xor xlat cli pop pop out jge mov adc iret mov sbb and push sbb mov pop fcoml dec testl adc bound div push jp inc mov ret push push mov out lret mov mov inc or mov add (bad) bound add jo pop mov and arpl mov test and test fdivs into test dec dec mov mov int mov fistpl xor sbb cmp jl mov mov xor stos sub add xchg or stc pavgw xchg dec pop jnp es mov daa xor dec or lret lods (bad) mov jg mov arpl mov sub pop stos cwtl cmc sbb xchg sub (bad) mov mov out add insl mov and mov sub leave mov dec insb mov jle testb test pop dec mov mov in mov pop hlt leave aad and sub jle leave pop add (bad) add xor test adc lret repnz fist jg sti outsl sub sub jbe rolb add pop xor dec push push cmpsb adc decb add cmp bound mov or mov mov (bad) ja or dec out mov sbb loop inc push (bad) das stos popa sbb fdecstp imul rcl and in add lock lods (bad) jmp stos sbb insl pop and ret in push out xor aas div pop jecxz pop mov loop,pn xchg loop sbb rcrl test pop ficompl jb and xchg add and repz pop xor mov (bad) movsl cli mov lret rcrl jb mov adc sub cmc in or xlat jge gs mov jecxz jno xor mov ljmp test push push es xor fcomi xor ret inc mov mov add popf icebp xor enter lea fs in mov fmull push sub std ret xchg sub xor jnp ja pop adc mov addb sub rclb loope mov pop push mov or mov cmp push adc call lods xor mov mov sbb push imul xor dec out dec mov pop cli or imul inc shrb xchg cmp daa add xlat cltd mov mov fldt and push push adc rolb push cltd lea and mov stos xchg push mov cs sbb ficom ret jae sub sbbb fxam dec (bad) orb sub sbb dec push les pop push gs lock dec iret xor and je sarb ret (bad) sti out dec cli ss and hlt std pop and xchg negl adc ficoml or xchg and sti out pop jne bound aaa lahf insb push dec sub ror (bad) pop sub stc pushf (bad) mov pop repnz mov les (bad) cwtl sbb stos pop std orb sbb clc ljmp fstl je call es dec test repnz mov jno xchg aas mov jl cltd and xchg fnsave into inc lods ret scas pop testb sub into rcrb (bad) pop in ret mov add mov mov scas cmp cmp imul mov inc cs mov and sub jp shll pop dec in xchg test push mov sub push xchg ret test inc jne data16 mov xchg sti and jmp cmp mov jg (bad) outsb push xor push add clc add and cli int3 data16 xchg (bad) (bad) adc sbb sub bound pop hlt xchg push push in adc mov pushl mov out mov and and or jbe dec push mov pop dec jmp pop (bad) ja dec sti sub pop repnz dec mov fidivl loop outsl arpl int3 test movsb les and mov pop mov movsb in pop sub sarb std mov cmp out xor cmpb adc mov mov jnp imul and loop sbb adc adcl add mov jns mov mov repz pop icebp nop or (bad) xlat or mov pop jns scas aad sahf add imul jle mov jne sbb push testl icebp dec lret adc in cmpsl mov in mov pop inc lret sbb insb les call xor xor sbbb mov les xor jne jnp jne xchg xchg stc xchg cli sub or das mulb pop jbe out adc mov jmp cmpsb pop daa xor aam lret decl mov adc roll or adc das jmp outsb or push mov xchg push fnsave fstps sbb and ret and jb dec mov (bad) mov out mov dec test jnp xor adc scas xor in stc xchg add leave or aas cltd dec cmp add add jno add inc cmp pop dec mov mov sbb dec mov and mov or sub cmc inc and sbb mov aad push icebp out aas and dec sti xor into (bad) daa push dec sti xor xor and repz dec out mov dec scas pusha (bad) and mov pop inc repz fldcw sub xor sub mov mov stc fcoms (bad) scas enter movsl dec loope stos pop test ljmp adc mov adc adc pushf mov pop xor cmpsl (bad) idivl ljmp mov pop mov add dec sbb data16 rcll xchg sub stos adc mov jmp pop sub mov imul dec scas les pop rorb cltd add and adc dec adc in mov test das or das jno inc xor jg sub and and daa jg cmp rcpps push call in setnp xor nop mov cld (bad) mov or (bad) cmp pop rol cmpsb pop incb cli jp jmp pop (bad) movsb xor xor xor push inc xchg mov loope jns imul bound bound stc (bad) pop popf or jno (bad) leave and hlt shll test push mov pop push mov daa out lds mov sbb pop mulb cmp push (bad) mov je and imul sbb pop and cmp test ljmp popf sahf in sub and cld jnp xchg inc xlat push fidivr adc cmp and aaa mov add sbb fs jmp fst push sub cld dec les sti aad stos fistl mov in push push xor add sub inc xor adc es data16 sub sub push fs xchg aaa jmp pop into cmc or pusha xchg loop out sub lcall push mov bound jle push imul mov sub or repz mov inc or aad push in dec rclb jmp dec mov lret out loope js mov test fldenv cli aas idivb push imulb lods data16 adc fdivl jle sub inc mov popa lcall scas sub or xchg xor sub adc dec dec lods out mov cmp bound mov jb push or jns dec xor aad xlat ljmp in push dec add inc lea pop sub divb sti sub adc leave imul iret scas sub lods and add ret stos pop pushf imul xlat push pop data16 sub icebp sub pop sahf imul mov hlt daa cs sbb daa gs dec xchg lods fistp cwtl movsl fistpl out stos jg shll dec xchg je jno ds aad popf pop dec out sub push mov sub adc mov jge movsl push jno,pn pop and xor lods and (bad) fldl inc jb shrl repz shll add pop call stos test pop pop xor xchg imul sbb push (bad) cld ret andb sub ret daa fidivr mov cmp bound sbb and mov inc (bad) mov or pop lds lret mul adc add fnstenv adc and xchg mov push cmp imul or inc fnstcw cmc int3 je aaa (bad) inc xor push fldt subb push je pop (bad) sub and lret jle jns out xchg xor cltd iret jb add and ljmp add lret rcr ret xchg lds xor jge inc dec in pop sub sub (bad) (bad) out sub cmp cmp or push xlat out pop jmp or xchg inc sti insb call cmpsb cmp shll ret jmp fstl xchg xchg push sarl dec inc sbb js xor rorl sub or fldcw cmp add pop xor data16 dec jmp add pop sbb rclb js and xor pop and sbb loop mov or test sbb and mov (bad) int3 adc mov jne in and add scas xor pop ljmp sarl (bad) stos or sahf jne xchg fnstenv idiv cld int out pop cs js add test mov stc cmp or and or cmp outsb sbb dec repz aaa add sarl push js xchg aam in sti lods addr16 push fiadd or mov cmp cmp loopne jbe out mov add mov clc and jmp mov jg jp jg pop mov adc bnd shll push mov sub xor sub push jnp mov and xchg icebp in lds icebp xlat outsb adc add or out daa call out cmp jo or mov repnz ret or stos add adc loop sbb push sbb sar sub loop mov and push dec idiv mov sahf jg (bad) or lods out stos sub es out push mull mov cmpb inc inc fistpl or (bad) sub xor int3 ss in jmp cmp lods das lea sub mul inc jne jmp mov mov es ja test (bad) test adc jecxz sbb ficom lret dec fs stos xor iret je lret push cltd lret xlat mov ds pop mov sar push lahf xchg pop out sub push cltd ds cmp xchg insb fdivl lret and add mov lret (bad) or push jl xchg pushf incl aam pop flds and sub push sbb inc lds pop ljmp movsb call mov sub fucom ds pop mov jecxz xchg xor fsubs dec or fisubr std mov jno icebp and sub aas and sub mov cld enter and loop jg roll cs and cmpsb and loope out mov dec imul das jle addr16 sub pop call enter and cli and and and adc mov inc sub cmp (bad) dec or or cmp stc cmp add mov dec fstps loope jg add hlt sub lahf push and push scas push lret pushw (bad) dec pop mov inc out sub ret dec or ficomp outsl call pop pushf push lcall std dec pusha je mov mov push dec push mov (bad) or lret test lret (bad) idivl add xchg gs and cmpsb mov (bad) jp push sub pop (bad) sub and sahf cli adc mov pop inc or fist mov es cld sub test lret movl push in cmp or or mov push loop fist fistp sub and sahf cmp xchg call loope inc mov idiv lret and (bad) mov xchg das lahf inc cli jle pop jmp cwtl stc sub jmp mov adc sub sub out divb adc (bad) frstor add sub add das pop adc popf jns lret (bad) ficom (bad) clc sub negb mov call push repnz loop fnop fcompl fnstenv iret jns pop testb sub add sbb pop loopne cmp ret jle push sahf jge pop mov lret push mov pusha into sbb adc add xor test jmp sub mov mov mov and iret in sbb adc sub das and cmp and mov or scas imulb push cli sub push mov sahf pop fcompl adc lds or mov imull lock cmp ret cmp je adc jecxz or mov stc adc xlat ljmp push shr jg jecxz cmp cld sub mov aad sub sub and mov lock push pop ret xor and sti push pop movsl in and xor inc popa idivl cmpsl leave or adc rcll daa in and in cltd call leave out std out pop ret or jmp repz cmp xor or xchg (bad) xor sti mov mov mov clc xchg (bad) icebp adc mov out mov and and jg bswap or adc ss jnp cs (bad) cwtl fcmovnb pop and rorb dec icebp stc aas fisub js fsubrp sub lods add daa and pop mov ss cmp push mov adc in dec pop pop std popf add xchg cli lods push jb adc xor notl outsb jne cs nop jbe repz lock xchg add imul mov or push mov jne repz jmp or stc push clc pop shr inc add and sub fwait push mov sub xor add and xor movsl push push adc popa add or push pop mov gs idivl xchg xor mov out xlat jge inc mov mov rorb add repz outsl shll xor mov xor and pop (bad) leave outsl jnp mov (bad) dec or iret jge cli and push pop ljmp (bad) adc cmp (bad) push jno inc sub test jmp add mov push popf nop sub jmp ja mov cld inc pop (bad) cmp mov add jge mov lds mov cmp (bad) loopne xor add cmp pop pop fisttpl or data16 test incb xchg jnp and xchg or mov xchg mov movups push cmc out test fdivl push iret pop fstps sub out sub out mov dec xchg sbb arpl ret fnstcw xlat inc lods add inc mov xchg and popf jb mov or lods jb out shl inc push mov outsb popf mov movsb (bad) in icebp aad aas push or fxch and and sub mov lds shll inc jo pop mov cmp push lods dec int adc stos xor xchg icebp mov jecxz cld mov xlat cwtl sub shlb ret pop cltd add cmpsl lcall dec sbb xor sub jg adc push and add pop into test call pop mov add pop mov stc fsubl adc inc dec and mov out jmp jno lods sub sarb movsl (bad) sbb shr cmp je les loope shll sub xlat jbe jecxz push mov hlt lods imul jle int3 cli cmp sti repnz add int3 (bad) bound (bad) std insb inc sub push cli or cld dec cs imul pop or cmc call outsl xchg adc fidivl movl pop inc mov or jb (bad) (bad) fnstcw stos test mov pop ljmp xchg push insl dec aad sbb cmpsl pop sbb loop and inc sub add sbb cs mov (bad) fs out scas aam (bad) mov push add data16 cmp pop xchg je jl cmp popa pushf out sub pop jge add jno lods or dec aas pop cmp cmp pushf add sub add inc sbb fdivrs dec pop js lret mov movsl mov test cs je ljmp fnstenv mov inc xor inc adc test cmpsl mov adc sub nop lcall cmc mov mov loop scas and es sub fxch jg (bad) int3 test mov inc (bad) jge mov and mov push push mov stc xchg (bad) repz mov pop out pop das negl mov leave jl ret fcomip dec sub cltd sub xor aam and xor adc inc or inc xchg sub out mov sbb mov pop pop dec jb and dec pop xor loopne or in sti jbe stos sahf push (bad) mov jecxz ret enter lret clc jns fcomps mov nop inc adc push mov push sti imul mov or mov repz cs inc scas sti pushf sub mov mov jbe int3 push pushf insb and adc xchg push inc jmp je xchg add push and sub and movzbl out mov lock jnp fsubrs (bad) mov dec and cmc push and jge dec push and and xor lea jg mov fnstenv div xchg cmp mov lcall outsl mov insl clc or outsb jp notl stc sub xor sub mov imul lret mov and cmp dec cmp std add pusha sub mov cli sar inc xor out sub ret cmpsl cmp (bad) mov sub data16 mov fsubrl imul xor rorl pop add adc push jle shr mov mov mov fcoml sarl dec cli xchg xchg int add jo and and push iret outsb mov sti or ret fsubl push and movsb popa mov aaa je push jle inc mov jge pop lcall adc sbb add rclb jnp daa icebp aaa inc add jecxz pop push and sub and ret test dec sbb mov jo mov addl mov pop test xlat sbb add popf lcall test iret xor sbb das xor icebp fisttpl sti sbbl mov stos push and mov mov mov addb xor add or (bad) aaa dec mov pop mov fildll pop adc and (bad) mov and loop lahf push pop bound and xor xor dec (bad) mov mov or pop mov xchg dec mov jge addr16 adc mov adc xlat sti jns sub mov (bad) jmp sub push and mov cwtl gs jne xchg jmp jo mov sub ja mov addr16 xor out mov push xlat sub ret or into add imul push add test (bad) sub insb lahf rcll (bad) icebp xchg iret scas cmp aaa jne scas pop (bad) ljmp fiadd or xchg xor ret jbe leave mov ss (bad) push inc sub enter mov aad subl mov mov js add sbb into std xchg test inc add dec daa mov inc push push pop jge and pop dec dec pop outsb and fwait dec mov jmp out xchg push in mov test add mov andl xor sbb andl and and rcrb push push push inc dec and notb or leave and cmp mov sti dec add enter (bad) dec pop (bad) sub shrb add scas jne out popf xor aas addb cmp lock and pop out jp sbb dec add pop push dec shl mov in mov sub pop ficomp pop bnd int push pop jg fsts inc icebp xchg dec enter mov into mov xor push adc mov outsb outsb adc pop stos pop fidivr jnp test testl loopne notb cmp mov dec xchg addl add xor add pop adc daa mov or imul pushf sbb jp outsb jne iret dec jmp add sub negb sub jo ret shlb lret outsl mov push or jge (bad) bound sub pop fiadd xor or cmp insl xor jmp mov pop mov cmp je mov js pushf xor and bound cli rcrb mov adc rorb out and or and fldcw add push xchg jg xor (bad) sub ja int3 repnz dec dec mov pop sub mov les xor stc mov dec jge out pop sub sarl dec mov popf sub push mov jge lods jnp mov arpl lcall pop push fs jmp pop andb nop fs push or emms in inc mov inc sub and pop push cs lret pop xor jg mov and sbb (bad) and mov push sahf inc inc ret pop mov mov pop jbe pop jge sbb mov jl adcl mov xchg out mov push xor repz cld fistl sub pop push dec daa jo xchg adc clc notl or mulb in (bad) xor icebp rorb (bad) fildll gs int loope lret stos lret or or xor mov daa jge movb lock sub pop cmp xor pop sbb xor or pop sbb out xchg cmc push movsl inc repnz fwait xor sub push pop mov pop mov decl rcr xor jo pop adc lds jle pop std dec push icebp out movsl xorl pop or add push xor out cs mov adc pop jmp inc jne mov ds xchg add xor out pop adc clc cwtl movsb jmp lcall mov sbb and into fstpl imul push dec out mov sbb lds test rorl jbe and or enter (bad) push jg outsl and call jb (bad) adc or jbe push or (bad) dec sub pop test and adc mov icebp push cmpsl fistpll xor xchg jg hlt lock daa iret push add pop stc xchg fsubr jle js xlat mov mov push pop and out dec mov imull (bad) dec fsubr pop mov pop adc call adc jnp clc orb (bad) cmp je jmp iret push lock push mov icebp add repnz mov mov cmc insl leave pop loopne sub test movsb jecxz adc sbb cwtl and lods daa jno sahf aaa leave jg jecxz ljmp lock gs daa push pop adc dec mov out mov dec inc mov call add xchg xor mov (bad) mov adc add mov cmp push or add xchg push mov add cmp xchg shll mov dec jl xor popa push lret sub jmp or xor jae pop add stc fs les cltd mov int3 dec gs iret lods dec (bad) pusha mov fstpl fldcw iret pop jmp xchg xlat pushf and or leave jg enter sub sbb mov jmp out int3 mov mov dec add push mov xor mov cmp dec (bad) cmp es imul rorl ret (bad) jge push loope icebp mov das call cmp lods sub xor cld scas insb mov add stc sub push adc repz push dec leave fnsave xor mov idivb or clc cmp mov (bad) jne cwtl cmp dec dec sub in fmuls sbb popf adc xchg or pop movsb andl pop call jecxz sub or scas mov loope (bad) in nop cmp cmc mov dec mov xchg pop scas sub and cs shrb sub add jae and pop push iret loope sub movsl sti out dec mov mulb sbbl lret and test mov out adc fnstenv test xchg cli adc mov scas mov pop (bad) sub or cmp jo dec mov xchg fs pushl je cmp (bad) movsb dec jmp xchg loop or add adc rclb popf pop adc xchg stc lods push lock sbb adc and cmpb leave call shll jns into cmp lds fidivl or jge jo loop xchg les scas repnz and and ficompl lods popa fsts jmp mov mov (bad) aaa fmuls xchg (bad) imul add (bad) cli pushf rcrl and pop repnz mov pop ret xchg fstl imul mov arpl push jg mov decl dec pop sub andb int3 dec xlat gs lods insb mov into dec pop mov aaa add jmp cmp cwtl fs mov imul incb fidiv dec adc shr clc popf xchg fistpll push mov fnsave xchg mov inc add push lret mov mov cmc inc loop jl leave mov or xlat mov out or aas data16 pop stos xor pop test cmp sbb cmp mov and out mov daa enter push sahf mov bound adc cmp xchg int3 push jecxz pop xor out dec mov into test test ljmp in xchg sub sub or pop pushf (bad) mov mov leave sarl dec add sti mov aad cmpsl and mov jne xor mov mov jnp dec push mov lea repz pop jbe pop push sbb test iret pop in xor loope inc cmp mov or gs cld mov jg push xor in jns imull sti sahf cmpsl jbe iret pop stos sub scas sub pop or jno mov (bad) mov (bad) aad lea push cmp xchg outsl out sub mov pop (bad) cltd sub fstps das mov (bad) mov test lret aam ljmp mov bnd push in xor ret stos xor ret lds enter fld1 dec or push negl bound test leave lock jp adc mov loop adc shrb repz cmp in mov adc pop cmp push clc cs mov adc push adc int3 xchg xor jecxz adc leave ret outsb mov cmc mov notl fsubrp je dec lcall (bad) jb dec dec scas mov cmp nop dec and dec divb sahf and adc and fs xlat test lock ja pop add or sbb xchg and dec adc inc sub hlt mov sub sub sub idivl mov push adc iret mov imul outsb stc bound xchg adc push int sti mov add movsb in dec sahf movsl cmp mov in (bad) popf (bad) movsb push pop jne sub negb pop cmp pop sahf adc xchg jmp xor pop addb shlw jmp ficom cs add mov adc inc out scas fidiv (bad) not adc pop xor bound xchg cmp mov inc popa cwtl adc mov mov dec mov pop mov jecxz mov lret xor xchg xor xlat inc jge in cmpsl test out repz mov (bad) loop hlt (bad) mov cmp mov call xor cmp sub mov insb sub xor add adc in xlat roll (bad) pop outsb jmp jg mov xchg scas mov sub rclb sti and mov sbb add and das mov shrl push pushf mov sbb jnp ds and sub xor shrl hlt xchg cmp lods mov hlt push cmp adc push push or test decl (bad) decb mov stos dec jmp ja int fstpt cmp cli mov aaa (bad) and scas daa xchg inc add fs push clc (bad) idiv mov mov add sbb ret push jge or rcl jno dec sub (bad) stos and popf sbb sbb and mov cmpl lods adc (bad) iret add sub push dec scas stos cwtl pop lret mov pop or pop ret inc icebp mov jle movsb out push pop adc sbb mov dec push adc mov adc inc dec cmp lds mov jae movsl push sbb dec push out add jecxz push push pop push roll mov sbb mov jge movsb (bad) test fidiv leave ja adc pop test or xor rcr mov fnsave jmp sarl loopne (bad) push dec sub xor xor xor inc ret pop sbb lock fsubrs and xchg mov fxch leave add push dec repnz mov dec mov or ret (bad) insl xchg fs pop mov out mov movsl sub fildll pop mov mov cmpl and adcl mov adc inc xchg negl pop fstps aas outsb lods dec test mov cld and (bad) lock push popf jge cltd xchg in adc xor imul fisubr rolb pushf or scas mov in movsl movsb shrb xor and test mov mov adc nop mov mov push xor ljmp idivb mov mov inc sub dec add ficoml repnz lret out jmp add pop jl xchg ljmp add and mov sbb aam out xor add jmp push rcrl mov and jmp loopne adc mov xor xchg mov push add insl popl and (bad) xchg (bad) mov imulb mov leave xor call push mov jb mov cmc enter xor aaa (bad) repnz daa push push (bad) dec jmp pop fmull fs cmc ljmp mov inc adc (bad) add punpckldq sti inc mov (bad) and (bad) mov shlb cld sub and das lret cld cmpsb dec sti cmp sub daa and jbe lret jle dec ret pop xchg imul into mov fs pusha dec mov test mov jbe fs jmp inc loope xchg push xchg fisubrl test iret add repz add int3 dec xor xlat test (bad) jl shrb das jmp mov pop cmp repnz movsl xor pop fisub iret xor dec (bad) repz mov push adc ret sub pop bound into lret mov or sbb rorb xlat int3 sub test daa sbb je leave testl xor xor repnz popf negb inc sub test mov lcall (bad) push and out adc stos fcoms push out push mov push jg dec loop out jmp bnd jns dec dec imulb (bad) aam bound repnz ja fdivrl fs jecxz gs xchg ds mov dec movl push jb mov mov sub jmp test add in jl clc add stc or pop adc leave adc fldl pop out (bad) mov push mov pusha sbb (bad) mov mov xor mov mov push pushf stos cmpsb les nop mov mov cmp lock lds mov or sbb pop mov js add and push adc xlat sti ficoml push (bad) mov outsl aaa cli mov es inc jle cld fiadd ds push mov pop movsl lock popf icebp dec rcl (bad) and fbstp xor pop dec cwtl xchg mov lahf aam push shrl aaa pop mov stos mov push negb xchg xchg or iret jp stos lea sbb jns or push popa jb and xchg mov push mov add cwtl pop ret dec or adc mov pop cpuid out adc cmp int3 or rcrb or or dec push add pop inc jge bound sbb dec mov dec mov jp (bad) cld aad mov lcall test into divb push dec bound adc cmpsl sarb lahf mov push push mov enter (bad) or (bad) jb pop inc in jae jge sbb shrb pop sub mov or jmp (bad) (bad) into subb je adc cmpb jnp (bad) sbb pop dec pop mov lock shrb push (bad) mov (bad) mov out pop (bad) xor loope das lods ret shl jg add sbb inc lcall in mov add cmp inc adc in ja pop xchg jg sub sbb inc pop cmpsl cmp cltd push mov mov notl outsl jmp in jo stos lret cmp inc icebp ret mov or or or mov xor (bad) sub (bad) scas pop repnz sub inc ret lds hlt mov ret (bad) pop lret fucomip jg ss bound out ja fwait mov je enter (bad) or idivb xchg andb push andl rorb pushl sub (bad) xor sub cmpsl xlat inc int jle sbb pusha test fsubrs mov imul lock movsl xchg ja into mov add rcll sub ljmp or fdivl jmp outsl loopne in mov inc mov iret push adc xchg cld adc sub jns movsl pop insb std (bad) jg inc dec call dec sub std push imul test xlat sub jle push sub mov aas pop clc out fs clc adc and int sub (bad) mov push movsb xchg loop faddl dec (bad) add or xor jg cs fbld clc add sbb or xor mov popa das push lcall push dec inc jbe push lret insb test pop lret cltd sub inc leave decl sub pop inc pop (bad) rcr dec inc mov enter rolb mov adc push ret scas test jno dec cmc icebp stc xchg loope xor fnstcw sub push jge xlat or mov mov or decb mov and shlb or pop dec les movsb pop pop push repnz (bad) xchg loope pop xor gs xor cltd clc ds hlt gs jnp jae mov scas sub frstor push shr jno or sub cmc cmp or mov inc aad xchg fdiv out mov sub jae cmpsl or push adc jle shrb call cli popf leave aas sahf dec pop stc sub orl sti fbstp pop testb mov inc das das xor fidiv mov pushf stc pop push add dec mov jns enter jmp loopne lock mov push or or movswl xchg pop pop pop inc adc cld fs xlat cmp (bad) addr16 mov out (bad) jb (bad) notl mov add in in add mov mov out add outsb (bad) jge,pt jae repz outsb xor add dec or int3 xlat (bad) cmpsb xchg xchg cmc ss mov add pop aam into leave jecxz inc dec sub mov das jb xchg jle pop jg xchg loope lcall push and dec leave jne xchg out mov lods mov inc gs inc das adc jo ss xor push fdivs jnp dec cmc pop aaa daa xor push rcll xchg daa pop lds or adc into jb or repz push into inc add (bad) add sbb icebp movsl mov xor push push mov xlat std push rorb mov push xor icebp (bad) cmp daa (bad) (bad) arpl imul jmp movsb sti jecxz jp (bad) out sub jl sub lret push push cld or rorl pop dec cmp xchg (bad) xor pop dec ja sub jg movsb addr16 and xor push gs jmp subl inc data16 sub icebp out inc mov sbb dec xor or fcomps xor ja xchg ret mov daa adc xchg xor out cltd add xor ret push dec or daa cmp sti test push xor mov push add clc ret mov xor es sbb cmp (bad) and js and push sub sub movsl iret fucom movsl cs or lret sarb aam (bad) out dec mov loopne lods addb xchg push sbb aas sbb mov pushaw or shrl fsubs xchg sbb jmp and mov enter cld xlat imul out mov stos cmp and div scas jbe push push xor pop inc leave roll pop adc leave mov enter stc loope repnz je test mov adc cmp push (bad) sarb (bad) jp test xchg (bad) ljmp xchg or add sub ret sbb mov adc test and (bad) ja (bad) in xor test sbb or add lahf inc das adc xor or or out sub in mov std hlt jg gs cmpsl dec lret add cmp mov sub sbb or mov ret fild mov orl xchg icebp ret ja add (bad) push inc sub mov cltd inc mov add jp mov mov fwait lahf inc dec pop or pop cltd mov adc push cmp push arpl repz in mov sub jmp pop and ljmp push push repnz scas scas fstps (bad) outsl jb push pop jnp jg bound or nop mov mov xchg ret xchg fcoml xchg jne and mov jmp pop into int3 pusha add mov repz xor notl int add bound fwait bound iret pop cld pop jo fwait sbb inc inc iret cmp sub mov es out and cmpl (bad) iret loop rcrb adc push fsubs cwtl pop or (bad) xchg mov jae ljmp out (bad) jae lock shll cli dec inc dec clc xchg dec jmp jno movsl cld in jp push sub ds ljmp dec push in std ret (bad) fucomi cmc and xchg rcrb mov outsl sub mov lods lds adc pop (bad) dec or daa push sub mov mov sub insl pop dec jne aaa push pop testb fsts push or pusha movsb scas ret sub or sahf imul sub daa ja sahf lahf jae xor out jne mov inc mov mov test lods scas jno repnz mov lahf dec mov sub rorl out add xor ficoml push lods (bad) popa es daa jl jno cmp movsb stos (bad) push inc add enter and and xlat add xor dec xor sti int3 neg es popf jmp xchg inc cwtl (bad) imul push (bad) pop into push sub leave out pop pop imul dec repnz repnz enter and xor push inc mov add sub push sub xor shr mov sarl xor xor add shr mov outsb cmp mov lds xor and pop shrl sub pop mov (bad) or xor adc pushf jb ret or xchg adc fs add andb adc icebp dec orb stc mov sbb and scas mov cs cmp frstor add sti or pop (bad) mov ljmp cmc xor loop adc push sub test lret xchg push mov repz mov inc dec mov sbb rorl ss leave and cmc push pushf push mov inc xor jne push in popf in cmp icebp and (bad) (bad) out xchg inc jnp mov insb pop push loop mov dec out mov imul out int3 jle pop xchg out pop je pop dec push jb push scas out imul pop insl xrelease call adc sarl dec pop out aam sub and daa rcrl push fnsave jg popa popf insb jns dec in sub out ffreep into mov push push fistl fucomi popf mov or and jne mov (bad) dec ret stos sub or test mov dec stos jb fbstp jmp pop add and push dec adc pop scas test mov pushf lahf jl push jne mov idivl adc mov dec aaa mov cmp push push cli xchg push fstps ds and inc je test mov mov xor jne or and lods movsb pop sbb ljmp push lods das mov xor out sbb repnz (bad) sub cmp or jl xlat lods sbb and scas gs pusha sub inc lock pushf aam mov inc pop mov out fmull pop sbb dec rolb xchg mov or clc xor notl orl sub jbe dec push push fdivrs mov xchg mov mov shl pop mov or or popf pop cwtl and xor push ja adc mov ret inc sub pop idiv jbe in adc (bad) jg int xchg xor rcl shr or pop pop jno jb mov mov sti mov xchg roll dec cmp repnz (bad) popf adc ljmp lods sbb (bad) xchg mov pop dec push and lret push outsl xor test daa lret in jmp and dec hlt add inc adc push or leave add or pop iret or (bad) push outsl mov pop out dec into jnp sti push xchg daa xchg pop mov mov aad fbld mov sarl mov mov call inc loop xchg ljmp pop xor and fldt test sbb pop pop jg lods mov or pop cmc icebp mov call jmp push nop sbb sbb scas arpl or jl sub add std mov xorl dec sub jb mov inc add push cmc xchg fsts test cltd das and jbe cwtl xor add or inc dec or push fstpl imul enter lock in or scas aaa out jb mov dec decb xchg adc adc xchg decl into add dec lret xlat movb call movsb mov or cltd sbb cmp pop mov and add mov into mov testb inc xor ds imul and jb inc out das mov pop pop pop add ret add push nop js jnp mov negb cwtl push out mov icebp (bad) (bad) sti pop sub lret or pop call dec cmp xchg inc and adc movsl sahf mulb sub sub fadds call leave ljmp jecxz mov sub xor or mov and mov add daa sub or mov leave outsb sbb and dec and scas loopne pushf andl cmp add pop cmp sbb aam icebp loope cld add sub sub mov push and test mov xor mov sarl and add mov (bad) sbb repnz jmp mov mov iret out imul and and jb insb xor shll ljmp fscale sub out sub insl and or scas pop ss xor int movsl mov ret ret (bad) test dec insl or xor jecxz adc mov test and add mov inc pop imull mov bound cmpsl cwtl (bad) and mov leave enter (bad) or jg int3 lock lahf xchg push in clc ret push pop rcrl out adc xchg shrb jo (bad) mov scas mov add cld inc xor push std out adc and insl xchg test test leave stc jle adc adc rcrb jmp std push cmp sub mov pushf push icebp loope push mov xchg insb jo dec mov sbb (bad) sub mov dec jmp jecxz sub int3 sub dec xchg (bad) js add enter pop pop clc jecxz clc mov cmpsl inc and add push flds sub add add gs pop bound xor mov test xor sub data16 adc mov ja or and cmc xorl mov inc movsb sub xchg popa daa inc pop or sarl inc inc mov fcomps js dec pop mov xchg mov add or jg sub xchg inc je enter leave xor jae rcll stc (bad) cmpsl mov loop mov adc arpl cmp das jns movsl jo dec sub mov mov cmp sub inc lock sub fs mov and out les dec faddl xor ret int xor mov jmp mov popf (bad) xor sub xchg cmp sbb lods cmp dec xor mov mov mov xchg jecxz add sub xchg inc (bad) leave and sbb je fisub push jge jb add xchg xchg jg or gs add adc xlat or cltd push clc sub dec lret adc sarl imul mov sub or leave add das jmp add repz sbb push ds sbb and out mov pop push mov cmpsl pop cmp add jge or xor popf inc jmp cwtl push out push ret lahf std and sub push rorl sub inc mov movsb push cmp xchg (bad) iret shrl repz (bad) jg in or pop in std xchg adc or pop lds out dec jle jmp movsl stos je lods jns ret sarb pop sub xor leave push (bad) and sub inc repnz mov into pop mov dec inc add jecxz dec into pop orl movsl or jb dec fnstenv and xor jge in xchg sbb popf (bad) push and lock stos imul movsb addr16 jge aam jns sub fldcw sub shlb divl daa pushl fdivs arpl adc loop xchg xor idivl cmpsl imul or insl mov or adc cmpsb in and push fisubr push in popa rclb jle lock sbb xor mov inc dec out mov dec ljmp subl rol movsl std xor pop fwait pop cmpsb and xchg sbb add xchg (bad) testb leave rcl pop sub icebp aaa jmp pop loopne aas adc xchg repnz leave call and out dec cmc mov push mov sub dec mov push pop leave mov fbld xchg xchg push push repz pop inc push and fdivrs sub fwait das mov imul fucom int mov (bad) cli movsb sbb mov aad icebp mov icebp sbb dec imul pushf or pop add jmp dec sub jl dec idiv jbe xchg enter test movsb cli icebp fcompl or mov enter jmp cmp bnd mov (bad) mov (bad) pop les and (bad) mov pushf ret mov mov adc in mov insb insb sub push fiaddl jmp and scas jecxz adc ljmp xor cmc xor pop (bad) inc and in push rorl mov jae dec jl ret aam (bad) out and repz sub loopne sbb and ret sahf rcr sub mov popa jp push adc fisubr clc jo out jns dec add mov and add (bad) xchg hlt pusha movsl mov loop mov or or push or jmp cwtl sbb out and cmpl fnsave orl mov aam movsb test xchg push (bad) jne adc dec cwtl pop mov ret pop inc sub cmpsl pop inc insb lahf pop mov mov sbbl ror dec (bad) fs rorl inc fist pop stos fdivrl xchg push cmp xchg dec jns rorl popa scas cwtl dec lret add cmpsb lret adc cli adc clc ret lds icebp mov in repz dec sub sub iret test push das mov test lret loop xchg or push outsb stc and dec orb mov and xchg out mov sbb daa sbb mov fwait pop shrl mov lret cltd mov cli mov push inc daa jge out sbb jne pushf xchg lock lea adc bound push (bad) (bad) iret cmp rorl int imul or rcll add icebp (bad) sub pop fsubrl add or mov inc jb mov dec out cmp rolb cmp pop add mov cmp push dec push sti pop fdivs (bad) cmp mov daa ret fwait push movb push fwait rorl test cmp push popa rolb cmp mov es mov add icebp les (bad) ja lds ret xchg or rol clc sub fisubl cmp flds (bad) push int3 mov or repnz pop or or fcmovb jo mov out pop cltd xchg clc ds sarb jmp repnz sti pusha pop lret pop ret aas fsubp mov popf xchg jo inc and or push mov inc das (bad) dec pop sarl and push xchg (bad) fisttpll xchg (bad) jg sub pop stos daa pop (bad) arpl fist lods pop pop hlt xor stos or xor xor or lock mov and movsl std sbb mov imul sub js lahf push rclb mov push or mov ljmp sbb cmp and and daa adc aam adc jg popf aad cmp (bad) movsl js mov and testl pop mov test mov or repz push fcmovb mov mov mov add inc adc jmp mov dec popl xchg in lret and sbb iret andl lods jne test ret mov mov pop pop jmp dec (bad) jge test jmp scas or pop add sub dec cmpsl fs movsb dec lcall scas sub shrb into cmpsb (bad) int3 es mov mov cli push lds and cs mov iret and inc mov into jnp sub dec mov pop fs mov stos out adc rcr out xchg and cmp sbbl xor imulb cmp xor dec cmp mov pop mov add cmpsb outsl xor xchg cli push out add dec in incb sub add jge pushf mov out and mov pop imul jge ss in adcb mov xchg push add (bad) mov and pop aaa inc add popf test fsubr stc leave stc or dec add jecxz (bad) shrl loop pop add inc dec sti lret iret dec xor ss xorl or data16 and into sub sbb cmpsl adc push or push and lods gs out inc jle stos xor fldcw push sbb (bad) or mov movsb mov cmp sbb dec cmpsb xchg add mov push fadd imul icebp pop pop scas popa inc cli add pop cmp hlt sbb roll mov lcall and icebp decl mov dec xchg sahf ficom xor gs sub xchg insl and mov pop fisub jecxz adc fisttpl lret xor fildl gs or sub push or notl shlb (bad) mov adc xchg xchg mov popf int icebp je je and add shlb adc pusha jl aaa jle xchg stc jo ljmp fsubrs clc shl mov int3 ffree xchg inc cmpsl mov stc out pop sub leave xchg add popf xor jne sbb adc jg hlt insl xlat sbb pushf push push xlat xor cs aaa ret lret add fisttp mov pop xor cmp shr jg push imul das mov jge stos jo mov or jno das movsb jle mov (bad) lock inc mov push rcrl mov sub mov xchg add dec mov or jne fistp push lcall cmpsl push pop mov sub xor and or adc cli mov pop test rclb bound adc push cld push adc jmp fist test dec mov pop sbb pusha push xor add jb jmp inc scas mov fldt sub and mov push jno add add mov test add sub cs dec or cmp mov adc lods sub cld lahf movsb stos xchg mov and wbinvd aaa lret out cmc pushf or sub xchg mov mov mov popf in and daa pop mov inc lods push inc jb fstps dec push movsb aaa daa jns xchg or cmp (bad) pop push mov inc scas (bad) call cmp clc mov sub call adc leave (bad) (bad) cmp mov add sub enter mov mov sub sub jno ljmp mov test fxch bound cmpsl pop in lods ret sarl cmpsl jnp daa xchg adc inc in dec stos or adc add sub imull cmp sub stos notb std stos inc (bad) nop mov sub negb ljmp icebp dec ds stos and lcall xlat jmp push adc imulb pop out push pop bound or cmp add or cwtl sbb ss sti arpl xor scas repz dec inc adc and jae lds call sti jmp ret push xor pop mov lret shlb mov adc pop sbb fbld movsb in dec mov hlt fs jmp push sub push jl pop mov and and xchg sti stc enter call int ds mov pop sub std lcall sub clc fcoms mov (bad) jp repz fwait adc fidivrl and icebp sub fild fisub fstps subl jg hlt mov cmp in test repz movsb push daa xor push shrb add mov ljmp mov or xchg mov inc scas and pop mov je xchg inc add xlat dec rorl leave dec inc inc ds xlat cmp (bad) jle cmp push lret imulb icebp or lret xchg jle (bad) xor (bad) cmp and cmp mov jae jge xor hlt cmpsb imul into dec sbb imull lret xor add cmp ds pop dec or (bad) pop mov fisubrl sub fsubs pop and lahf dec xor popa and (bad) sub xchg inc fidivl mov (bad) mov rol fdivrl scas add mov jecxz rcr icebp inc gs dec sbb std int3 rclb jge adc mov outsb popf aam xchg out stos lea or (bad) out mov das jbe (bad) (bad) fldenv xor nop sub std lret vmovaps stos leave mov test rcr cmp pop add sub sub and stc jne xor jp (bad) mov loop ffreep mov insb ret sbbb daa mov jae xchg into clc pop mov call clc in pop xchg in add mov pop xchg add mov xor push test rclb mov fldcw jmp dec into or imul jg xlat mov lret mov pop sub pop call rcrl das daa lret pop ljmp xchg or sbb xor ljmp nop mov sub xor mov dec and or sub and lods aaa shrb cmpsl pop sarb (bad) lret outsb and aad into dec dec mov add sub push jmp out (bad) xchg sub mov js mov pop mov popa xchg push push mov xchg leave (bad) ja pop sub test sbb and sub or mov sub loop (bad) movsl inc (bad) repnz add mov into mov xchg xchg mov clc add add (bad) jbe inc fxch aas mov icebp cmp pop je inc es lds cmpsl lock xchg das repz (bad) jne test (bad) mov sub ja mov daa inc dec push mov jg pop gs push cmp push negl mov push dec jl movsl (bad) push add dec out xlat int3 push xchg adc xor cltd xchg jp adc mov sub pop mov test pushf xor roll leave add les lahf jl pop pop mov dec push add mov mov daa or repnz lahf hlt addr16 shrl lock mov in loop scas lahf push pop je jns dec xchg stc lahf jbe gs sti sub and push jmp or xor pushl pop add aas cld rcrb sub lods mov xchg push out fidivrl pop loope das jecxz dec cld inc shlb push jmp push out fldenv roll or jne or movnti repz add inc sub mov push jecxz fisub (bad) jmp ljmp mov xchg call cli lret mov mov out dec mov aas stc adc sbb icebp dec mov das leave adc sahf cwtl imul pop aad rorb (bad) mov and inc inc mov or shll cmp into xchg push (bad) dec lock inc cmpsl xor sub sub out rcl xchg and fs mov int3 test cmp pop mov dec lods rcl mov dec mov pop pop movsl push mov ret xor add fnsave inc pop cmpsl cwtl cmp xor call lret sbb inc jmp outsl sub enter sbb out (bad) test and cmp mov (bad) mov aad or and data16 and xchg pop mov mov das sub test mov test test dec loopne sbb fcoms stos mov sub shl sti sub jmp xchg mov sub jnp jle push sub and xor push xchg out sub hlt adcl or cs inc jg xchg mov dec cmp cld sub outsl pop stos mov fwait clc xchg fistpll adc sti shr stos pop (bad) adc (bad) repz pop ljmp mov sahf stos cmp aad int sub (bad) bound add jbe push dec dec (bad) or addr16 ret sub cmpsb mov jno or cmp clc (bad) loopne mov mov add repnz mov xor add mov std (bad) js and mov lret sub scas sub adc test in pop push push dec movsl lods and add mov adc pop add jae cmp js dec mov dec sub repz idivl xchg shr clc cmp mov xchg jne mov lret in add push test loope mov xor or addr16 cmc test jp and xor cld fucomi push das repz xor (bad) cmp mov loop push xchg push mov (bad) xlat adc xor out inc loope popa in popf adc sub mov dec cli enter push repz or aaa idivb add test sub dec and lea push mov adc push xchg jmp and push sub pop or std popa cmp sub enter jp xchg std xor rep push jmp (bad) jp xchg cmpsb rclb or dec mov xchg fsubrl call fisttpll sub xchg mov inc xor or fdivrl cmp push xor pop xor repz sbb and (bad) out sbb stos jno and sub frstor int mov xor fbstp dec imul jnp mov xchg enter lret scas lret flds js dec add jae icebp (bad) or loop lods inc rcl jb dec decb leave and dec pop (bad) (bad) and jo sub or add jl jp pushf dec lcall cltd pop jmp mov addr16 out mov or imull cmp ret xchg aas dec lods mov call mov xchg jmp cmp adc push imul push push sbb mov add ljmp push incb pop mov push ret pop popa jno lret cltd push mov cmp push cmpsb add fsts jmp enter notb push mov pop not dec push ljmp mov (bad) pop mov or decl push jmp mov push xchg test push mov (bad) mov add and sbb loopne add (bad) enter std pop pop jl rorb icebp out movsb adc mov xchg pop imul lods sub sbb ds (bad) out push add imul pop aam push mov pusha cmpsl inc mov mov jg jmp push add (bad) loopne outsb outsl pop push adc out loope shr aaa pop pop push mov and pop (bad) xor jns xor lret pop adc dec cwtl dec add loope inc cli stos iret rcll fisttpll mov mov mov pop shr mov mov and stc sub xchg jno lods sub test inc adc mov push sub push mov mov addr16 pop mov sub clc push and aas shr pop push lock loopne and push cmpsl (bad) imul xchg push pop mov mov and das orl fsubs xchg js rcpps push movsb in fsub (bad) or or out jns dec fdivp fs lods dec mov xchg testl std and data16 fwait loope or movsb fisttpll js shlb push pop std pop adc sbb mov ret dec push sub or push dec mov push pop scas in and mov adc fsubrl add inc pusha adc mov sub xor in xchg and fimul out or adc sub test mov rorl (bad) scas and pop adc mov jb dec addr16 mov ss mov sub xor and aas int3 xchg data16 mov in (bad) xchg in and xor mov es (bad) outsl mov push xor mov pop mov dec mov scas rorb dec sub daa and xlat xchg pop xchg and mov mov sub xchg (bad) mov push cmp xor xlat jno xchg (bad) lock call dec mov dec sar mov ja ret inc sub frstor adc and (bad) jne dec ss mov xor repnz mov and add cmp test mov or shrb mov inc scas cmp and aam into jne dec mov imul dec orb inc add shrb mov add inc cmp (bad) stc xchg dec lcall insl (bad) mov dec or ficoml idivl pop mov sbb scas (bad) mov or stc daa ljmp pop dec and or adc adc push out rorb inc btsl cmp jecxz dec in jbe mov ljmp mov xor adc dec into cld dec mov hlt das in push and xchg cmp jo scas xor pop js sbb dec mov insb xchg mov andl ret inc lods mov mov dec mov aas push movsl fist jae (bad) mov je push sub xchg outsb push dec sub pop test push sub dec or sbb in pop fs sub xchg stos jb (bad) negl dec movsb stos shr sub adc lahf jl popa out or sub lods push xlat lock or (bad) das or outsb sub ret imul cltd and push lret rorl shl mov push cmovae xchg int3 lahf clc mov jge cs test xchg xchg pop mov call roll (bad) cmp xor mull lret (bad) repnz ljmp adc aad aas pushf jmp mov mulb into sub mov sti xchg mov add ljmp sbb add mov mov or (bad) mov and mov jecxz lret add mov fldenv pushf jno lahf lds cwtl dec jecxz or scas (bad) dec pop (bad) dec mov or mov and jb dec repz ret inc add xchg pop or fdivs (bad) outsb test mov and cld ret mov cmp mov or jg ret not pop dec xchg mov adc aas fs faddl mov lcall inc shrb xor sti repnz xor fstps mov inc adc (bad) jle xchg inc mov mov loop mov das xchg cmp pusha test out adc into mov adc xchg lds pop add sbb mov sub mov ret lods mov in mov les sub and fbld fisub decl mov fsubp (bad) popf (bad) mov mov jmp xor ret imul rorb dec lret popa xchg (bad) bound stc jbe pop dec pop and xchg mov sub das inc mov pop xchg shll jmp clc push scas xor les xchg sbb pop sbb inc pop dec cmpsb rorb sti int3 outsl or repnz call jge pop and jno fst daa lret or notl test pop and sub pop popf jbe fsts dec xor out dec mov fidivrl pop dec mov (bad) out mov ljmp mov and or sub and fadd leave push mov into scas std mov inc aam addr16 pusha and test mov notl xchg cmp mov test xlat push imul aas bound (bad) lret or pop inc movzwl cmp sub jecxz cmp ret adcl add xor sub push lcall icebp push add sti int cs sub xor dec lea cld inc dec ja mov push inc or jbe ret adc add (bad) inc aam push leave int das (bad) mov mov lahf cld lret adc (bad) test incl loop cltd pusha test inc sbb add ret out fistl das push pop cmp add mov sarl mov into shl mov insb or fsubs testb fcmovbe scas mov and or (bad) cmc in sub push add shlb (bad) push in adc (bad) ss mov scas dec add dec adc jecxz lcall iret scas popf pop imul clc icebp testl das or pop sub cld repz cs or (bad) sub sti xor sub cli lret and je loop shr mov cmp ljmp sub jle and aam or add sub lret sti lret xor lods sub or out or out jle push pop out xor cs shlb xor jne fistpl imull jns imul inc sbb aaa jno and (bad) enter adc xor ljmp mov jmp xchg jmp lret push dec mov jle push and sub lock (bad) shrb xchg (bad) xchg cwtl test cwtl cmpsl mov xchg fdivrp in and dec xor jne movsl pop mov sti and and sbb lret nop and or das std leave popf xchg idiv mov xchg adc repnz (bad) scas jb add add imul xor pop xor adc ljmp scas sub movsb inc pop loop push fwait in mov lahf es or (bad) xlat jae repnz and mov pop dec dec xchg aad ret jle ljmp repz xor cmp inc sbb fisubrl iret and mov pop and mov popf sahf xor cld shlb fnstenv xor sbb imul pop push add dec cwtl mov mov or out xor not repz dec jmp xlat (bad) out pop repz test mov test in mov (bad) cmp jno movsl mov aad jmp xchg fs pop jae lods or daa jbe jmp inc mov repnz xchg pop insl int3 inc xor (bad) imul lcall push fimul dec adc mov mov lret sarb lret sub xor int push rol das or jns xchg (bad) jmp sahf jnp fstpl push out das fstps pop sub lret icebp pop cltd adc xor mov lret lods jle fs mov xlat sub sub and sub test out mov xor push mov pop pop out lret sbbb xor xor jb ret repnz sub popa lret sbb or loope test sbb inc mov dec bnd loopne mov jbe jns and clc mov xchg ret dec pop lret xchg and xor cli lret out pop scas pusha inc or or jbe push xor mov mov pop test repnz test idivl in addr16 das les or xchg pop xor shlb fsubrs add mov cmpsl and rep mov test lret jno cmpsb inc imul rorl cmpsl mov iret lea or jne dec das ja dec add ljmp dec push cwtl dec xor and fs lods fild ljmp sub ret push sahf mov add dec push and mov push dec add xor or subl xor cld sub cmp and iret or xor dec lret and out out jmp jg mov xor int3 das add xchg xor or (bad) pop or pop push lock jbe jmp (bad) xchg push cmp in sub ljmp repnz xor xor mov mov mov xlat pop (bad) jp sub pop sub cltd xchg push out dec scas jne scas subl ret pop (bad) divb xor stos add repnz adc dec daa stc mov push out mov rep add out inc sahf jnp mov jmp mov sbb cmovg repz fxam cmpsl outsl xchg jae cmp lret mov push push lahf aas stc mov inc and add or lret cmc cltd repz mul inc xor and negb jmp and outsb negl mov sbb push sub (bad) sarl fsubs jmp xchg cltd insl xor lds jecxz or ficompl cmp sub into inc push xchg out loopne xchg jne pop mov jae cmp pop jmp dec and scas dec ljmp into and push test inc clc lret (bad) lea jmp aaa test (bad) mov push dec lods scas sub and loop ja lock sbb and push rsqrtps ja sbb loopne lods push idivl mov stos cwtl aas sbb pop and inc lret and inc and ror out pop in mov aas xchg fucomi lret lods pop imull mov dec scas or loop push push enter pushl cli neg adcl mov mov adc push int3 jle les seta xchg es fnsave push pop stc adc and flds test out adc jne xchg lahf (bad) es pop out imul loop (bad) int3 je adc (bad) xlat mov jmp push or (bad) hlt xor sub inc sub add aad mov (bad) push xlat ja aam outsl mov sub sub adc stos adc mov cmc mov data16 xchg adc pusha test sbbb sub leave ss in jmp aam or add shrb add shrb sub jge popa xor mov iret popf mov xor sub jmp (bad) icebp test dec cmp loopne out test jns cmp jb addr16 lock push in or and sub popf mov fisubr (bad) push loopne daa stos cmp sub imul icebp pushl add pop sub sub sarb in add leave mov ret jg outsl inc xor int jnp jecxz jecxz scas sub xor outsb jne icebp repnz pop pop pop pop xor mov sub loop out das sub jb pop mov cltd pop jl xchg inc jnp add mov cs in sbb lods cwtl in rclb sub out popf jmp fsubrs insb adc mov sti mov test in out push repnz jmp scas int3 mov pop cli sub xlat dec js repnz xchg push push pop push lods ror insb (bad) repnz adc stc dec je jne fisttpll sub hlt dec jbe jns outsl inc cli xor xchg data16 pop pushf mov jo mov or out and scas (bad) lock jmp xor call mov (bad) or imul mov (bad) pusha sub xchg enter inc adc (bad) out jmp out or icebp mov mov dec sbb mov (bad) add pop jno out mov je lods mov push idivb push gs es dec dec sti popa or movsl inc outsb lret and add pop add rcrb pop incl pop xor push pop daa lret or mov jmp cld cmpsb lock out repz xchg leave sbb or (bad) lret push ja int3 jns das lods test dec clc stos dec call ret push mov xor xor and aaa mull mov xchg sbb mov xchg dec add clc xor bound out rcrl imul pop sarl mov sbb cli lret and nop cmp fs xor into or mov leave pop push addr16 clc jl dec fstl mov xchg mov pop ljmp add call inc data16 or jp movsb fdiv and test leave add xchg or jns gs sub sub dec imul pop imull negb mov add mov je mov cltd in out mov xchg xchg pop mov mov out xchg push or jg cmp xchg add ljmp push jg imul pop xor mov sub sarb inc sahf fwait pop and push push lret in or or mov or push rcrb push ja mov add or imul xchg lods xor xor cli mov push (bad) jmp pop cmp aas sbb shrl enter pop ljmp xor push out (bad) ljmp stos in cmp and fucomp (bad) jg mov cmpsl stos cmp test aad inc and divl es out fs in out pop mov ja popa in mov ds pop pop lret xor cli int3 push enter ret jns push loop xchg mov int3 inc adc mov stos xor cli dec pop sub add or rcrb (bad) jb outsb icebp fmuls lret out gs sub xchg jmp adc sub xor stc xor mov and jne sbb xor lahf dec aam xor mov fisttp stc and dec fs xchg fsubrs div leave push jle mov mov in mov sti jecxz inc icebp dec (bad) and inc mov xor mov int ds sub push stos aad mov pop jge pop out mov sub push jg sarl cmp jnp sub in test push inc enter jb xchg bound call xor ljmp int3 dec repz fadds imull stos jb or ret xchg cs adc push inc inc cmp lock cwtl mov mov xlat dec out sub lods mov stc mov rol dec mov xchg push jb sub sbb mov inc xchg stc and mov push mov loope imul inc jb mov sub jg shlb jp fdivrs or out jo mov xchg cwtl lahf and mov in xor ret ja and or mov pop pop xor loope cmp (bad) push leave jae or (bad) std (bad) xchg adc xor les cmp cmp inc and or mov and sub or repz adc pop subb sub ficomp mov inc out loop xor adc pop cli jno mov cmp xchg into pop push les out xor call push fsubrp pop call loop mov aas dec lea sub leave sbbb sub fadds or mov sub std mov divl aas into iret lret push add fild mov and xchg sbb js and and sbb xchg out mov dec mov sub xchg pop mov cwtl cmp mov push mov mov or and test in pop das mov add das lcall dec sti mov aam ljmp mov sbb pop into out push rcrl sar mov pop mov mov mov jmp test and movsl nop adc lret imul cltd pop ds pop neg jno mov sub scas mov add fisttp fdivl scas mov or hlt xor mov push mov push dec push pop mov add fstps out (bad) pop mov inc xor xor push jb push pop pushf ffreep rep xlat adc lahf push mov rorl icebp shrl sti push or inc mov movsb mov fild ret sti mov jge stos dec sbb mov and pop scas cld jo (bad) pop mov mov (bad) mov mov push lahf jl push aad xchg jmp sbb stos xor xor insb int or test lret mov nop lret and pop cmc inc (bad) call mov std mov mov bound mov mov push dec mov out imull push sbb sbb call add ss daa out inc xchg cmpsl inc pop and es inc daa aad xchg ljmp aad xchg mov sahf or adc leave inc inc dec mov dec inc popf jno add or popf cli orl and mov and daa imul sub xchg mov rol mov mov dec jo dec adc or mov sub xor loop mov test or inc inc mov add fsub sub pop push add je or (bad) jg or jne (bad) xor (bad) mov add divl or jmp add pop jp dec loope lret addr16 pop mov xor xchg sub lods xchg outsl imul repnz out mov mov fpatan or xor jl jb mov jle imul add shrb push mov (bad) mov incb push aam mov idivl cmp divl xchg and bound jle or clc mov test xorb hlt ret pop pop cmp push das stos sub hlt cmpsl rcr mov jmp add lock cmp mov or inc sub mov adc subb mov push or inc xor lods stos addr16 mov popf xchg or mov add or out mov pop pop stc int loope outsb cmpsb sti pop pop fsubs pop lods nop xchg mov cmp mov shlb in sub mov xor xchg addr16 (bad) mov and lahf loope lret jle ret std xchg push cltd pushf and rolb std icebp push and and xchg jge rcll push leave mov stc gs clc (bad) cmp add pushf or mov dec cli cmp add (bad) pusha push frstor pushf scas dec push out mov (bad) pop ret inc xchg xor fistp daa and push adc aaa dec and lds xor lods xchg cmpsb popa pop mov aas mov sbb sub inc (bad) xchg mov (bad) or and lret out lcall mov test cmp cmc (bad) mov shl int adc mov sbb xlat pushf push xor adc pop mov stos sub inc jle xor sbb call daa and pusha push stc sub cmpsb pop dec jmp adc ret mov mov cltd xchg shlb ss pop mov sbb and (bad) test insl jecxz ljmp (bad) pop mov rcl jns xor pushf das cld cli sub xchg (bad) jno mov add pop cmp sarl testb and dec pop mov stos cmp aas mov hlt repnz out lret repz stos lret and sub inc sarl cmp inc movsl jge out xchg lret pop add stc aam mov pop out xor xor out ret jno scas aam leave jge and in stos adc scas pop and out mov dec jecxz adc ret sub adc inc mov imul out mov or jecxz jp lret sub jne loop adc enter lret xor push cmpsb jne fadd and mov or mov or aad aas mov enter (bad) sahf and (bad) ljmp add pop push and fs dec (bad) imul mov xchg sub xchg into les and pop jns push and lret add push or icebp (bad) xlat icebp fadds out mov push xchg sub inc cmp scas int3 ds mov sub pusha sub jle mov sub or out pop into mov mov sti movsl out jecxz int fsubrs (bad) stos int push movsl (bad) mov daa into jg push mov ret jmp aas sub in mov mov mov mov mov repz jnp or dec (bad) mov pop bound push xchg xor outsl mov mov imul data16 sbb decb (bad) sbb test lods jno mov stc hlt push sub clc clc into and das sbb pop jno gs aas cmp inc pop mov jl icebp out lret xor mov and push cs sti pop pop dec (bad) dec gs lds push rcrl sti push jmp inc jns scas fstpl out bnd lcall stos (bad) sbb lahf aam push mov jns dec subb sbbb xor lret add xor aad sub mov mov popf sbb test in jp jmp icebp dec icebp mov and and scas sub lds xor lret dec fwait scas dec es mov dec into dec sbb jo push xchg gs icebp imul leave dec clc sub push adc cli jb or (bad) out lds or repnz sub mov mull daa jno xchg push pushl int3 enter xor outsb mov jmp stc mov mov addr16 clc aad div icebp lods inc or and mov (bad) fistpll sti rorl into sub push xchg bound mov cmp mov fidivl hlt or jg imul sbb in cli loop (bad) jmp or push xor shr adc push mov lods pop mov push inc xor jae mov into add and pop or fcmovnb mov pop mov xchg popf push stc les xor lahf pop and push pushl mov cmp ret jge cmp or xor aaa lcall pop and pop mov (bad) sbb xchg push or pop jae cmp pop sbb inc sbb xchg or nop dec xchg out arpl mov add mov sbb and sti fisub xor pop or pop insb notl add sub sarb (bad) jle ret fadd push loop std pop popf dec or jbe adc pop cmpsl aad sub call lcall push sub (bad) cmp ja js dec pop orb push leave mov scas mov lahf addr16 movl jmp dec pushf js mov xchg rclb repnz in inc sub ljmp imul ljmp stos xchg lret cld push mov adc and mov dec movsb mov push cmp or or out add xor xchg mov fcmovnu daa shll xlat dec pop ret sub ljmp mov pop sub xchg pushf xchg mov icebp mov divl mov dec scas cmp insb add sub and outsb xchg out fcomps popf (bad) mov aam add repz mov and xor ljmp sub pop notl das enter ret mov mov push or sti push mov xlat icebp mov cmp es mov mov ret pop push std in lods lret add pop jo push mov push sahf imul sbb imul sub outsb arpl repnz adc dec cli sti and push shlb subb std mov lock fsts movsb jmp ja ret pop sbb incb std jmp pop and shlb xor repz shlb mov jg adc aaa jbe push xor addr16 iret pop jne pop fs loop std pop jmp jge lret push adc clc (bad) mov mov cmp fistpl dec push pop sub pop (bad) fwait les mov xchg mov jbe cld mov cwtl dec xor xor call andl gs xor jecxz pop xor loop dec push xor and rorl lds sbb xor sub stos ja stos sti or and sti out dec fldt xchg addr16 and lahf cld subl (bad) scas sbb lock cld shrl lcall push sub mov movsb push out adc xchg lret int3 jle dec fbstp mov int3 (bad) mov dec sbb out loop (bad) mov je (bad) out sub mov fcmovnb mov xchg repnz push pushf pop nop fcoml sbb push jmp sub or sbb inc outsb push lret shrb cwtl xchg xchg pop xchg je cmp or xchg inc fisttpl pop pop (bad) jmp leave lret ja mov sub mov imul xbegin sbb and data16 jmp leave fldcw sub cmp add out adc stos int3 jge mov gs cmpsl inc jle fstpl push loop sub loop push cld stos int3 ffreep xchg fwait jp cmp push ret xor push gs (bad) daa loop xchg adc sub pmaxsw pop mov stos mov and sub or sub and mov and sbb xchg jl cli shr jnp ds aam or pushf (bad) mov sub xchg (bad) mov mov (bad) test (bad) mov xchg (bad) dec sbb inc dec xor mov cld add out xor mov push cmpsb scas sub out mov (bad) (bad) pop dec int3 xchg fld daa sbb fucomip xor jg or in movsb ja inc cltd imul adc gs and adc pop dec pop imul mov xchg js call scas mov inc pop xor sub add stos push fwait mov lds mov xor aad jb ja mov aaa xchg test dec inc fildll mov push and fild mov and pop out in lea add sub dec ret daa xor repnz adc mov xchg in sub or mov sub cli lods in mov in jecxz xchg out pop mov inc movsl sbb es enter cmp rep pop jnp and imul ret fldt sub cmc cmp inc rol inc push cmp cmp imull daa out xchg popf daa add jbe jb adc push mov dec push repz push add xor xchg mov scas test pop push dec inc mov popa pop fisubrl sarb test leave fs mov xor ljmp and and push pop outsl add fisttpll shlb ret clc mov out cltd sbb or xor cmp or or lahf repz lret xchg xchg mov (bad) mov ja cli push pop in icebp mov mov clc je cltd ja mov (bad) cld sahf data16 pop ret or jmp popa xor sub rcr cmp jge popf pop in ret push int3 dec popf cmp cmp stos sub xor stos adc fisubr mov cmpsb pop dec ljmp mov imul fisttpl jmp movsb inc xor lret (bad) mov xor cwtl cmpsb and xchg fimul jo pop mov jmp jecxz dec xor repz or pop mov (bad) leave (bad) aaa dec sub sub xor and mov cmc out xor dec mov add sub jge inc stos push jg (bad) repz out js sbb mov (bad) mov aam pop or jno fs pop (bad) test and add fdivs mov cmpsb or mov shl cltd stos pusha mov mov adc scas cmp xlat decl out aad loope adc adc mov mov add xchg imul pop push and fwait push or mov addl add mov rclb lds std add cmp out xor mov scas cwtl or push add or or cmpsb mov inc mov and sar inc add push sahf and jns cmp ficoml xor fs imul and mov inc sub cmp xchg mov (bad) les mov mov mov inc jns daa or push gs mov mov inc mov fcoms add divl lds sbb jp dec pop cld mov lods adc cmp adc sub and sti fnstsw mov sub add xor dec xchg fistl sub insb adc jmp sub inc int test dec jne sti or std in xchg mov leave das xor xor mov and icebp ds xchg inc out or xchg mov sub add push pop mov xchg rolb adc aad and jmp movsw push repz cmp mov out dec inc pop mov push xchg stos or mov icebp cmp daa jbe insb inc (bad) pop mov imul add xor ret mov in xchg icebp or xor push dec jo das mov std mov add mov movsb jbe pop mov fdivrs and pop inc and std push jp (bad) cli sub jae sarl dec push stc adc ficom cmp loop jns sbb mov lret jne repnz sub mov icebp cmp icebp jl mov lods push pushf dec pop sub mov stos (bad) xor cltd push mov into (bad) cmc cmpsb (bad) adc inc cmpsl sbb ss dec mov or pop sarl xchg mov adc sbb sub shll xchg in das sub push cwtl xchg out sbb adc daa xchg lods cmc ret sub mov lods push (bad) loopne mov rcrl lret mov daa cli dec in decb dec scas sub rclb xor ds clc insl into lcall inc lret icebp les imul pushf negl jmp out lods mov push jnp inc push sub es je push repnz std inc adc mov or pop xor bound xlat mov icebp pop mov cltd xor pop sub sub popf aam arpl adc dec out pop loop xchg lods mov out jge xor xor and cltd ds add mov sub and negl std or push inc pop sbb cmp fldenv push aad mov hlt jne jge mov aaa dec test in jmp sub push and mov xchg jg push sbb or fstl testb int push pop fisttpll push fdiv pop out mov lds sub xlat into adc or sub mov cs and into lret xchg (bad) mov xchg cmpsl gs js dec (bad) in imul xlat (bad) pop pmulhw add push pop pop dec (bad) repz gs cld mov pop in and mov mov sarb xchg cmp xor stos or cmpsl das mov fistp in xor bound jmp push cmp xor sbb sub nop push aam xchg push jns leave shr xor decl insb jp dec jle ret scas push lret aam stos mov pop fs pushl lods mov jge sbb xor cwtl mov dec and jbe sbb out sub mov pop adc mov ret pop jb loopne daa push pushf cmp aam out mov mov pop jg iret dec cmp add dec pop lods xor mov cli int sub bound xor fbstp btr dec (bad) push adc popf xor daa and fdivl imul ds mov lret or mov push shlb mov aaa xor mov adc decb push inc mov sub sub xor negb ljmp xchg pop imul test or and (bad) dec jp shll inc nop mov add shll fimul adc imul out dec in cmp cmp adc add sar scas bound mov jo add mov sbb into mov test jmp sarl leave or stc in push hlt sti fcoms jnp mov sub mov cmp lret icebp stc ret jle (bad) call or daa lds std dec mov dec in xchg in repz imul sbb mov push sub xchg xor ss in sub ljmp sbb xchg sarl rcr xchg repz mov cmp lcall aad sub sti or add adc dec (bad) mov dec ret je xlat dec pop add cmp and pop pop inc daa mov daa cmp or outsb gs mov dec sub mov push and dec (bad) lods cmp cs jno xor and sub sub out fsubl add ja cmp mov jge dec dec cld mov jmp popf jge test dec call lods jae cmpsb nop sub call xchg ljmp aas add rorl sub dec out push das mov jo sub in mov jns and adc mov dec lods xlat push adc lcall and sub (bad) negl das lds pop sti sub das clc fcoml or and test push jae jmp xchg dec mov mov mov repnz lahf into pop popf sbb add jae or mov and loope fnsave xchg ret les jg or sub movsl pop jno out ss jg mull xor mov xchg stc pop enter (bad) dec mov ret out mov sti lea and push and mov and and sub jnp push test sti cld mov cli xor cwtl mov jl adc ljmp rclb adc ds ficom jmp into xchg xor scas (bad) xor mov out adc lea adc aad and inc and cli lret lcall gs sbb (bad) cmp jbe push out sub fwait daa into cld push xchg in add out cli test mov out pop adc xchg pop and and add cld xchg movsl mov in popa aad mov std (bad) xchg add stc xor pop addr16 and push or mov std rcl jb iret adc mov push jae jnp ficom sub lret adc jae out lds xchg dec sub rcll (bad) and inc out jbe and ljmp stc push (bad) mov and in mov mov pop (bad) popa mov mov mov mov mov mov or adc pop mov mov or into and or aad fsts ret test sti stos or xlat inc clc das add cld scas xchg pop mov leave sub dec (bad) out cltd incb sbb fisubl sbb push idivl jnp add xor inc ja mov dec imul or mov bound into int3 mov or mov mov mov fdivs sub clc sbb insl pop or fistpll mov shll ja add inc xor pop lods add mov dec xor repz mov cmp out jle pop ret in (bad) mov jecxz dec sti mov jmp sub ficom dec jmp inc and xor flds and scas and xchg out outsb jb decl mov nop and (bad) gs mov xor imulb xor sub (bad) imul mov pusha jmp or cmp add imull sub push mov or dec loopne sti dec add ret in mov loopne mov mov mov icebp lret les sarb mov insl ljmp (bad) or jge jb icebp lret xchg into push repnz stos fs xchg loop xlat sbb bound push mov bound loop push pop mov push mov sarl cld or mov mov xlat mov mov and sbb pop xchg (bad) dec leave ja cltd xchg xchg ja out adc nop inc pushf xchg push add mov imul lahf loope sti ss pop into xor popa not xchg sarb adc adc cmc gs fist sub out pop fldlg2 jmp inc sbbb repz or fstpl dec scas ja mov cltd loope dec sti xor rorl push outsl gs mov icebp lods test xchg or push mov pop sbb (bad) ljmp ljmp les (bad) mov idiv mov dec and xor sti popf xor addr16 lods mov mov pop in movsb daa xor leave inc test in sub cmp ret leave dec sbbb mov js pop dec out (bad) fidivrl sub jge pop adc cli jge inc mov cmpl sbb pushf cmp mov loop xchg fxtract gs notl inc ret iret or nop xchg test dec pushf je ljmp xor sbb call mov lods popa cld push popf jge mov add es dec notb ja dec pop and out pop stc mov xor (bad) mov mov mov cmc (bad) fdivs xor int3 imul addr16 add pop ficom imulb sti leave or pop xchg inc idivb dec out sub add add (bad) (bad) int addb test stos fs inc inc xor and (bad) mov dec add int3 ljmp scas sub loope mov imul cmp repz jo mov sti xor repz and cwtl xchg ss adc aas pushf dec ret icebp fisttpl jae sub sbb xchg jge or mov dec cmp mov xchg leave sub out cwtl push jmp add jmp cmpsb out outsb test mov arpl orl adc lret rorb repnz sub cli cli cmpsb call push sub loope cmp or and xor pop xlat push out and jp ret (bad) mov ret jge or sub clc repnz sahf test movsl cwtl mull (bad) iret cmp (bad) mov mov ret pop test je imul mov cltd insl jp dec test xor dec loop mulb mov call xchg stos fcos cmp jmp daa das cwtl cmp jo cltd pop (bad) stos (bad) xor and mov jmp pop mov adc xchg pop stos fdiv cltd int aas iret sub add ficom clc stos fcomps mov int fcmovnb mov daa mov pop in subb fistp xchg dec and outsb les in rorl add movsl pop lods adc stos jb mov enter xor mov fs repz or ret sub dec and into fstpl jmp and clc stc jns (bad) sub sahf and xor rorl je push in arpl jne popa lret jg jbe xor push mov mov icebp test subb (bad) (bad) stos test movsl test push call sarl mov rorb cltd pop cmp pop gs fstp add pop jl mov loope adc stos movsb in and fimul icebp mov icebp and xor sbb jne (bad) mov das (bad) int3 jle pop lahf adc aaa sub andb ja mov repnz inc andb icebp nop movsl pop popf adc out pop xor add sahf and sub int das stos push xchg xor lea stos cmp lods cmp test pop out call inc (bad) pushl out or (bad) or mov xchg push imul repnz arpl test xchg sar int3 cli sub jbe mov lret mov dec mov dec das push and xchg out dec fs lcall xor mov add push ljmp fisubr sarl test loop pop repz jbe cmp sub (bad) lods ret or imul or ret lcall fcoms jge pop or mov mov inc pop or dec (bad) mov dec dec lock mov push cmpsb cmp imul push mov mov dec jmp imul cmp ret pop leave iret into jae sub (bad) cmp fisub inc cli xchg jb and add add neg dec mov inc adc xchg pop enter pop lock mov push lcall dec xchg mov cmp mov adcl xchg repz pop psrld add or xor sub mov in (bad) lret jmp rclb xor data16 rorb cmp jnp jns mov out mov orb das lahf cmp inc icebp or mov rorb xchg repz ret jg dec idivb xlat mov sbb flds jmp rcl cmpsl xchg vcvttsd2si stos lret mov xlat in popf movsb lea movsl (bad) cwtl aad fbld mov add xlat xchg or leave cli mov lret xchg or cmp mov lcall loopne mov sbb sub add flds jg jmp rcl das (bad) outsb bound sar adc rcrb cmp pop jecxz daa (bad) push mov sub xor lea push xor int3 pusha add stos dec or leave shrb jae and inc rcl cwtl mov dec and mov jmp (bad) mov icebp pop sub repnz pop test push sub lret and in mov jns jecxz (bad) icebp xor xor in into xchg jge repnz xchg gs sbb stos or push cmc (bad) dec push cli (bad) lret pop mov (bad) xchg mov stos cmp lds xor fnstenv or and cld pop in adc pop mov jo sarl lea ret mov shr inc push and or (bad) mov pop mov cwtl out mov mov rolb lret imul outsb add add or lods push adc shrb add aas clc and fdivrs mov cmpsl mov xor incl sbb push into jbe leave xchg roll ljmp push repz js adc mov adc rcll pushf push push loop pop in fs inc xlat mov sub out lret mov xlat dec iret ds cmp push sarl bound dec mov test lock fs mov scas shrb push insl mov dec jbe imul push xchg pop sti fidivl mov repz (bad) and movsl (bad) notl into add or sub mov jl mov or mov movsl scas arpl pop dec push or cli inc or (bad) ret aas fmuls add in adc (bad) adc icebp inc scas adc xchg inc dec add xor ljmp mov int3 out mov addr16 lcall out cltd xor ret arpl daa or out push xor inc subb mov xor push ss fldl mov push push fwait sub sarb (bad) outsb sahf and lret push ds test lods jl test ljmp pop rcl les scas popf jge xor repnz mov dec testl push dec adc jbe test xor or jnp pusha ljmp (bad) and jmp sbb cmc idivl inc cs movsb sbb cmpsb ja cltd js add push bound inc repz scas outsl test out cld sbb lds rcll xor push mov std (bad) outsl pop (bad) ljmp jmp dec jmp jne mov inc jmp xor cmc popa mov mov mov sbb data16 and push fdivs mov test or aad inc mov scas jl les dec or dec push jmp push jno pusha jbe shll or adc stc fisttp pop rorb shlb mov add out scas pop mov and daa mov fs mov xor mov (bad) neg xor mov inc sbb (bad) bound test fcmovnu xor lret pop and jnp adc xor fcoml mull adc lock push xor icebp pop mov pop cltd test sub sub iret mov fidivl dec je shrl cmp xlat icebp ficompl xor mov stos cwtl mov das inc xor add lcall jge aas pop shlb popf (bad) mov and fcmove lahf repz movsb ret xor push mov mov mov mov mov repz insl lret (bad) push das dec mov je mov (bad) fucomp fisubr (bad) lret in imul test mov jg sbb pmuludq stos mov xchg fistl ret sbb stos mov pop mov adc sti cmp cmp cs push inc dec pop dec xchg cmp adc (bad) jecxz divl mov in xor test daa jecxz xchg pop pop dec daa cmc sbb test mov xchg pop mov mov mov xchg pop and jp cltd mov (bad) push insb dec xchg and sub xchg stos (bad) sbb pop adc clc or sub dec mov push sub lods xchg jecxz mov pop std std movsb ljmp popa bound aas mov and (bad) or sti and stos clc cwtl cmc out mov or mov data16 scas out popf (bad) sbb lds cmp sub cmp mov push pop int add xchg sbb adc cmp xor add (bad) and push sar adc mov sbb cmpl movsl int3 push and adc sub or mov arpl push ds enter test push push in push pop jbe sbb fisttpll mov or xor in (bad) mov enter xchg mov and sub add add testl aas leave mov sarb fs mov adc mov hlt inc and clc mov adc jns xor std ds sub mov dec mov rcl (bad) lahf (bad) dec cli and fistp pop add test pop call in fistl mov jecxz daa xor inc leave add shrl sub sub aaa mov mov pop dec xchg lods js cld clc xlat repnz adc xor cmp mov jmp leave sbb imul mov pop mov xchg insb seto scas cmpsb popa shl adc (bad) mov (bad) call adc fsts stos sub hlt sub xor lock inc or es test xchg xor sub inc push lcall test leave ljmp pusha scas sub or test int3 dec js xchg push cwtl add fstpt pop arpl and pop movsl std popf (bad) lock (bad) dec fs mov out std adc cs inc leave jne or in in outsb repnz or push cli mov or ret push fnstenv test and adc test dec sar iret std or mov push jnp out repnz and mov fs inc or or pushf jmp aam push push cs movsl push inc ljmp adc add xor enter push (bad) (bad) (bad) mov mov in lods jg gs xlat lahf sti cmp sbb cmp cli out mov adc mov push pop gs pop mov push test push push imul lds add mov and sbb dec adc mov cmp (bad) dec adc dec mov lock sbb adc nop pop popf insb cmp imulb push xchg icebp stos repnz sub scas push ror je icebp adc inc sbb push inc mov xchg adc rol jge lds (bad) push in push out loop lds iret inc jnp test and scas testb mov or jo sbb (bad) xchg pushl jl das mov xlat mov cmp sub sub mov js jmp movb push roll (bad) add pop aam inc add in inc and insl stos add jp leave test adc inc cli cmp push cs int cmc lcall xchg (bad) repz sbbl inc and or add pop pop or icebp repz lods cltd mov jg ret icebp jge jg in in dec movsl xchg or repnz xchg inc mov loope aas lods mov lret sub stos leave and ret mov rclb cmp fiaddl inc cmp test dec (bad) out lret cmp ljmp adc mov repz mov mov notb movsb sub cwtl inc add adc je out xor lods lods pop xor push loop fistpll xchg cmp mov pop stc push mov (bad) push adc data16 pmullw jno out fmul cli push call idivl std movsl jg sub and fstl jb adc lret or hlt pop subl and call lret mov cmp or pop pop xchg sub push fbstp icebp push jne dec adc lods xchg in jecxz loope outsl repz mov pop or repnz hlt jecxz subb ljmp cmp shr (bad) push enter packssdw lea and inc das out sbb mov mov add (bad) mov xchg mov and das pop mov ret das fmuls mov jne pop xlat jno mov dec call cli fyl2x sub and lcall mov xor xchg popf pop cmp imul dec mov mov cmp loope das sub lret inc pop movsl mov sub and call or add push movsb add repz jg jbe (bad) lock (bad) sub mov mov shrb or repnz xor jge xor cmpsb dec pop mov scas add sar insb aad iret and add movl sub pop mov in clc xchg or clc aad ret out (bad) jnp xchg sub xor mov bound hlt lahf iret xchg out fdivrs scas xchg into fild daa ror mov and fst pop mov das sti xchg adc xor mov cmpsl pop addr16 idivl es clc mov dec mov xor daa and fs or mov dec add movsb cli push (bad) mov and mov inc mov fwait pop rol xor pop icebp aaa add mov push adc add mov xchg mov inc sar adc fildll enter pop push sbb add das ret out sub push xor push or push sub sbb pop jg into or add pop shlb pop mov cmp daa fs lcall das sbb rcll enter mov mov fcom data16 mov das push leave inc mov in mov push adc or ret mov and dec fisttpl adc mov push pop inc rcll add repnz (bad) mov mov mov sub sbb or push or pop sub iret sahf adc out and jle es xor and out xor cs in (bad) dec and add push fucom add loope jns mov inc loope into sub std cwtl sahf adc pop (bad) (bad) into inc sbb fcmovne xchg negl ds mov (bad) jmp pushf push pop dec ss adc pop in iret (bad) shrl mul mov and pop and shrl pusha decl ret add xor (bad) gs pop ret test test mov jmp ljmp fcmovnb loop fnstsw loope push (bad) or in imul cmpsl pop (bad) lods movsl push add lret bound and fisub sub sub fsubrp call in lret xchg adc clc cmpsl jmp xor imul in cld mov test xor xchg xchg mov cmp or jl push (bad) xchg mov add out mov mov inc scas and push ds fist lea jmp dec in mov mov mov cmp ss sub sub xor mov in jae out push pop (bad) mov mov mov mov dec out cld addr16 lods cmp mov fidivl loopne dec dec aaa cli sub das ja outsl popa xchg and push xor daa cmc push int stos add out sbb sub ljmp lret sbb fcoms call sahf jg pop fsubl pop dec scas mov push inc mov pop sbb mov xor jl cli sub popf jge pop fildll loop xchg mov fs cld jb add xchg push jecxz imul fst jno sub ucomiss lahf push int3 jmp sub leave loope sub sti mov loop (bad) adc sbb test (bad) mulb mov mov and or jp pop pop pop mov fisubr mov cmp pop (bad) int push stos out adc (bad) (bad) loop icebp mov push or cmc push pop mov xchg stos or push fisttpll dec in (bad) shl movsb jle dec iret (bad) sub mov out cmp mov rcll mov aam dec xor jl adc sub test mov movsl xor popa adc shrb iret and fdiv int3 mov (bad) aam iret push mov mov mov and les fdivrl lcall adc stos mov pop pushl adc mov jl das inc dec sub leave adc iret loop xchg ljmp sub out mov das mov dec pop jge or loope out fst xor mov mov sub call and cmp cmc xor push fidivl pushf out nop dec mov mov and mov sub or loope and (bad) out imul aaa gs sub jmp (bad) lahf jne out add lret aas sub add mov in movsb mov out dec mov mov push sub mov jbe stc xor mov mov push and lret out std addr16 adc (bad) popa lret add loopne adcb cwtl lret jbe movsl pop addr16 sbb and xor push xor into ja sub push inc out and xor mov js fsubs mul ljmp pop scas push mov mov push xor pop sahf (bad) out adc jb pop pop fisub data16 (bad) stos adc in in cwtl jno inc fs loopne out mov daa sub ljmp or clc rcrb mov insl sarb push out sbb into sub fidivrl aaa xchg lret lods lret ret nop adc lcall imulb xor pop and sub dec pop shr popf dec das xchg fs dec or leave popa lods sarl dec push sub mov outsb orb pop dec out bound dec loope push ret fstpt cmp lret jmp pushw xchg sub adc sub pop xchg iret cli loop test div adc or cmpsb xchg mov (bad) and jno mov pop mov mov outsb nop cltd dec test insl scas push mov cmc jnp xchg or lock xchg das (bad) jbe jae aas push xor jge int xchg pushf and add out mov xor ret xor js pop iret mov xchg sub das icebp test fisubrl fiaddl (bad) cmc mov mov (bad) dec mov imul mov jle fildll (bad) out xchg mov cltd (bad) icebp imul (bad) dec push ds (bad) xchg xlat mov sub sti mov bound mov sub gs mov pop sti sub pop mov pop dec dec dec imul stos fs dec jmp in jne mov movsl mov cmpsl dec loope cmp lret add xor in repnz sbb dec or jg fdiv pop mov add sbb inc and ss sbb and dec pushf dec cmpsl jp cld fisubl mov sti lea jmp inc ret jmp aas ds repz pop decl inc xor dec xchg neg (bad) movsb jnp mov test adc mov insb inc pop lret add loop push sbb push pop lret jge stos mov into out adc cmp clc repnz and add lret lods les in sbb (bad) into mov neg daa add and jp sbb xor addr16 mov in leave scas ss out mov jne out je inc out test jmp scas mov mov and cmp cli sub sub mov outsl je cli mov xchg fiaddl push sub cwtl jmp cltd (bad) xchg iret je mov dec lret cld pop adc pop daa out (bad) push sub pop notl pop (bad) mov mov dec sarl (bad) hlt sahf in and cs lea mov fsts cwtl dec xor lods lods nop movl and cmp rcrl xor sub out pushf dec mov psraw xchg data16 mov sub int3 cmpsl lret mov (bad) push mov sub out sbb dec into xor out pop out jl mov outsb lret jo xchg cmp or mov in aas cwtl fdiv icebp popf push add jge mov xor cmpsb adc mov rcrb sub ljmp sub loope mov mov fildll mov ss repnz aaa inc stos or push inc nop and lret xchg sub or mov push aaa aad in jmp rcrl movsb cli xor idiv sbb bt xchg fnstcw xchg lds call dec xchg and data16 leave aaa sub xor xor not out (bad) push or fs fldcw das cli into pop imul gs adc sti sub sub lods cmp aam dec (bad) cwtl rdpmc mov jmp xlat xor dec mov mov bound mov loop add bound in lret ret mov lret mov mov mov pop xchg push les stos fs mov xchg clc mov loope mov das into inc leave stc movsb dec (bad) jl out (bad) fsts dec or sbb sub inc xchg call lock lret mov mov jg mov lock inc dec daa xor and or push out repnz adc mov pushf mov adc or ja or pop mov and pop mov add lahf test les push mov jo xchg pop mov xchg ret dec or iret or idivl xchg adc fucom inc sub jo into pop mov fcmove and rorb cli push push xchg lds jp (bad) adc in pop dec mov adc lret sub test mov xchg pop popf jbe lret sbb mul movsb cmpsl inc out add cmp cmp loope push leave sub outsb push mov in cmp mov jmp icebp dec popf pop jge icebp femms xor pop push mov add (bad) and not das bnd inc mov mov xchg or or pop lds cmp out sub jae mov dec dec fcomp loop sbb and inc mov sub cmpsl test cltd sub scas push jp fisubl xor lcall leave test add cld adc and xor (bad) sub fs cmp pop popf cli pop lahf loop dec test ds pop int jl popf push add sbb pop pop in sarl aas clc inc daa sub outsb clc sbb or adc imul cmp (bad) loopne or je (bad) mov fpatan cmpsl jbe pop addr16 push out lret loope lret jns xchg dec cmpsb repnz call jno or xchg repz incl fcoms and push loopne ret sbb jo mov adc in mov mov fdivrl mov pop hlt iret adc rcrl push gs jae adc mulb das rcrl (bad) fdivs jmp fisubr cmp or das sbb out sub pop cmp mov outsl test mov mov jae rorb jmp or mov mov xchg lret dec push mov call mov add jae insl jmp iret icebp and sub cmp adc notb mov pop or std (bad) xor lock sub in int3 mov cmpsl cmp pop in push stos mov mov mov sbb mov mov push xor pop cltd xlat sub incl enter scas into jl jmp push add js leave add lret mov lret mov in das roll lods cmpsl popa sti sub jmp lret scas cmpsb sub add or ljmp ror aaa cmp xchg rolb sub nop stos push push pop sub and repz sub mov push push lods xchg stos int and es push mov icebp lahf bound mov (bad) or sub xchg xchg xlat mov ret das pop xor mov icebp or mov mov lods push mov pop icebp inc mov mov cmp adc lock fs xor mov mov fistl inc (bad) dec adc jl aad mov jne stc cltd xchg and mov sub out mov or sub adc aam dec out mov mov inc push mov xchg pop jge lea add mov orb jnp jp and fldenv and clc mov xlat cld iret jmp mov xchg jecxz mov xlat jnp mov mulps lods mov adc outsb leave mov xor jnp or pop fbld into inc pop mov and into lret push jl jmp pop and (bad) mov repz ret ret stos mov das mov movzbl ljmp xor sub cmp iret and mov jb or pop mov hlt out mov sub pop add ja in or mov outsb in repnz das adc movsb mov or add arpl xor push mov xchg movzwl scas mov dec push les ret adc add pusha mov mov and inc xor ljmp lret dec ljmp jns pop jmp data16 fbstp pop push sub mov push fwait adc stc out mov into push sub and or dec (bad) dec cli flds sub and insl fisttpll ja push adc mov and xchg out or jge jb jmp (bad) mov jne outsl daa jg xor or and fsub scas sub in sub movsl push test mov inc sub repz lret xor jecxz aas mov mov call pop or sub and add cmp xchg out pop clc xchg frstor ds ret and sub sub inc scas xlat out adc sub stc mov xchg sub in addb xor repnz lret jmp add repz outsb sub cmp loop sbb movsb (bad) daa aam vsqrtss std pop test mov or or nop lock icebp in push clc mov or not std outsb mov sub loopne sub out lret scas push pop clc andl enter push into adc add push call mov sub gs push push pop or sbb push outsb test pop in xor fsts shll mov xor clc pop mov adc pop inc push (bad) mov or std stc mov jg stos mov imulb fcmove pusha sub sub divl (bad) pop outsl repz mov sub cwtl iret repz push ficom call ret lds out pushl add mov dec mov cltd loop xchg lods loope sbb popf leave mov jno lret icebp add pop lods pop fistl js pop or cltd inc das cli adc jp jmp inc mov cmp insl pop xor pop jg mov jg or jmp test ret minps and lret into adc test add mov daa or repnz xor sbb mov xlat aas mov (bad) xor xor ds and pop test stos sub mov sub test sbb mov mov jge pop imul lock jg xor cmpsl ljmp dec lods push test pop test movsl mov dec mov jmp popf leave loop inc gs arpl out jecxz mov jle gs mov xchg add and leave ds daa (bad) into sbb movsb (bad) mov pop arpl stos or roll imul repz cs add gs mov sub mov shrl sub mov repnz jnp or loop push lods sti push jl cmpsl mov or ss xor fdivr movsl into lods (bad) dec and (bad) test or pop out dec scas mov and lods dec movsl ljmp repnz push dec lcall push das stos jne xor fidivl pop sub ds xor sub mov aad cmpsl mov mov and repnz cmp and in daa and pop rol xor insb jmp (bad) xor ljmp dec repnz div gs stc xchg adc fcom ret enter lock dec cmp aad fnstcw jmp xor out aaa cmp xor sub push bound jns fisttp xchg notl mov and mov jl pop out stos mov pop mov out (bad) dec push cld or mov xorb and dec iret in jmp aam mov adc inc popf shrb or hlt and lods imul push dec stos mov pop aaa cwtl lret xchg (bad) (bad) or and sub rorl mov (bad) leavew or dec addr16 js mov lods subl or push or out adc mov popf lret call (bad) fld or jne cmp (bad) sar aas mov sub sti sub lea bnd cli cmp daa ficomp inc xor repnz dec iret lret sbb adc aaa nop adc test scas mov xlat mov xchg jmp movsb test test scas idivb dec xor cltd xchg ljmp pop icebp stos pop stc (bad) shrb xor and in movsl xchg vpsubq mov nop adc mov mov mov adc sub cmp incb cld daa movsl mov cwtl iret test jmp notb mov sub add and inc inc mov int3 and mov inc mov (bad) pushl or jae out push adc stos add and jg jecxz or iret and stos jb out push sub aam daa inc mov add (bad) sub mov dec fimull int3 xor dec lret dec or add (bad) or adc mov or push dec mov insl lret lret fstl mov ljmp mov cli rclb popf mov add fidiv loopne pop cmp mov (bad) mov pop mulb leave fsubl out dec push dec imulb cmp test and insl test ret mov dec sbb xor mov add mov add into ret out sub loope xor cli sbb sub or rcl ror pop daa ret outsb or inc add and stc or xor add (bad) mov mov adc pop xchg or and mov mov mov mov dec ss int push roll jmp aas mov pop push mov fwait mov dec sub in mov jg push repz repz add mov jg dec das shll std pop scas (bad) fcmovnb inc es jp fwait mov push lcall enter cmpsb pop mov xor and xchg cli jmp sbb sub js xchg sbb xchg jecxz pop push test ret in daa das add sbb mov xchg notl sub rorb or mov int3 fimul dec negb in outsb testb mov xchg add das cmpsl or sbb mov mov mov sub adc insb (bad) mov pushf into scas (bad) dec dec test mov adc mov or mov stc leave mov lea das cltd sub fsubrs push sub add outsb insb dec leave ret jle popa stc sub je rcrl push pop jp and sub inc add mov inc arpl xchg cmp jmp pusha and (bad) sbb dec jnp ljmp lret sub testb pop fstpl cmp mov iret dec leave mov dec mov dec and mov push xchg or and cmp jmp push outsl out inc mov jne ret imul inc lahf icebp inc add (bad) xor xor xchg pop jmp pop xor ret and fidivrl int3 mov lcall idivb xchg push loop lahf add je or outsb xor stos xor out dec ds repnz xchg arpl xchg loop xchg mov test fbstp jae loope jp xor sub mov mov sub xor mov dec mov ftst leave xchg (bad) movsl fidiv sahf popf popa or cmp pusha fsubrs repz test mov push jb adcl and pop idivb pusha sbb cwtl inc idivl scas mov or mov (bad) fbstp mov sub test pop and add jno jle cmc ficoml stc incl push dec push je fs jmp loop fdiv ret icebp ljmp enter jmp xchg mov lret jg orl push mov cmp loope sti sub mov jmp data16 xchg (bad) sub mov ror out lods (bad) xor xor stos sub out xchg xlat push xchg iret inc insb jg jg test or mov rclb (bad) or cmp nop icebp ret jno inc jo cmpsb loop mov sub dec push gs push lret or mov test mov xchg ljmp (bad) call into mov cltd loop xor js sub xlat adc ret mov inc pop sub or pop push push mov dec mov or xor clc test dec out (bad) cmp rcr mov sbb dec xor push mov pop cmpsl cmp mov ss mov xor xchg notb pop daa (bad) negb loop xchg or movsb lds and popf jle imul cmp cmc fsubrs xchg out adc push sahf and or pop xchg mov in cld dec popa push cltd adc add loop push mov loop inc out push lea cmc mov and addb pop imul (bad) mov mov push pop test out jne fist sub mov sti sti mov mov lods mov mov push fiaddl and sub and fs or and dec and addr16 inc inc int3 cmp mov hlt insl xchg int outsb and clc and shr jmp push xchg mul mov loopne in test test lret and dec mov fidiv push mov lret rorb das test jg rcrb fimull ret jge jb mov mov pop xchg movsb pop xchg add push sub xor and imul sub sbb out mov pop fdivs fadd mov xchg xor fmulp xor loope test mov jg jmp repnz shll in add rol pop cmp xchg push xor mov mov sub add jl xchg xchg dec and or add adc inc adc scas mov inc mov into and dec ficompl gs movsl fldl mov dec sub pop fdivl xchg out xchg ljmp test bound dec dec test aad shr mov mov or or mov cmpsb fs sahf mov jns lcall xor test jbe ljmp ja loopne cwtl push mov and adc sub test cs add push shrl push (bad) xchg cmp std enter loop ror push js mov lea xchg testl leave xchg aaa popf push jnp inc rcl push push push pusha add xchg test leave sbb (bad) or push jnp movsl ja dec adcl mov mov (bad) ss xchg cmc push sbb pop inc pop mov lods sti add ficom pop cmp add cli cs seto pop and cvtdq2ps cmp mov cmpsb jecxz push sub add cltd fisttp aaa and mov loope adc mov xchg (bad) mov enter mov mov and inc shlb inc and test (bad) lods or add push adc rcl dec jge mov scas lret pop and stc cmpsb cs mov inc xchg mov sbb je imul std outsl push mov adc ja dec movsl pop xchg xchg adcl inc pop das sub sahf imul jg jmp adc mov and push push mov (bad) daa outsb fsubs sahf xor mov dec out fstl adc loopne icebp dec mov stc loope cmp insl lret add push xor mov popf mov iret sub jmp mov mov fsubrl xlat mov test sub mov mov insl ja ret xlat scas out adc and push movsb test xor (bad) inc mov insb gs and xor jmp mov ds aaa ret sub lret jecxz or sub jg test (bad) add mov in pop add mov pop dec xor dec mov loope (bad) dec sbb jne pushf mov mov repz push or dec push mov in pop idivl out or icebp ror jecxz pop or push out cmpsl xchg dec mov and sti sub pop int (bad) in inc dec and pop or gs sarb pop sbb add mov jne sub mov idivl call test lahf pop negb loopne ljmp ja mov pop es imul gs xchg outsb mov sub pop cltd out call jp or and xor and clc (bad) lds pushl cld loope lcall and sub xor mov repz aas add cli out fisubl add outsb lret and test adc and push (bad) mov mov dec mov js add sbb jmp mov xor enter xor fs test xchg sti dec xchg mov divl je ja add mov inc mov mov in dec mov mov jle pop pop sub (bad) mov test cmp shrb sub idivb jae or jmp adc sub pop or dec adc mov pop inc dec inc mov mov shr lcall sub iret (bad) das or aad aas lahf jl enter out lret dec imul adc into lea jmp (bad) jb jp dec xchg std test adc ljmp lods push mov jecxz jl add xlat mov lea cmp xor inc pop inc in daa pop push loop mov pop xlat or nop dec pop or jo add comiss jmp outsb cmc enter add repz sub mov (bad) aam lods dec and fdivrp jo mov add pop mov outsb clc push mov pop sbb push inc repz xchg sub outsb int xchg ljmp jmp xor pop jp movsl or adc jp xchg pop mov aam cmpsl sar fs mov xchg adc push insb xor jle cs iret adc jbe xchg out xor outsl jne lods ljmp mov int sub fnstenv mov or (bad) xor fldcw mov iret lods cmpsl adc idivl dec (bad) dec pop in mov testl loope idiv xchg popf popf jnp adc ljmp out mov out sub imul into daa jp or mov jmp ljmp divl in call mov inc inc lods push mov adc push incb mov push gs mov sub out loope inc sub arpl mov sbb inc lcall movsb mov lret fimul cli inc sbb xlat cltd mov int adc notl mov (bad) popf xchg ret or and sub jno or sbb imul fwait sub pusha pop inc movsb std popa xchg sbb loop lcall add aas test icebp mov or (bad) cli imul mov test loope cmp pop js outsb mov mov shlb int3 add scas into xlat daa divb in push push cmp (bad) cli sti sti cmpsl jno xchg pop sub sub mov les jecxz mov ss add add dec dec dec das mov repz aad mov sbb je imul push roll ret mov add pop xchg in imull mov loop loope and cltd mov push fucom push ret das aad push das add ljmp insl pop call test ds xchg add movsb cmp and jnp fs dec add imull xor mov idivl cmpsb insb sahf lahf dec out lcall xor aam add paddsw mov mov add sub into adcl lcall or or pop fs cmp (bad) movsl push lock pushl mov imul inc stos sub fcomps repnz call inc xor ja pop sub sub popa repz (bad) lret call and cmpsl testl mov add (bad) jg (bad) sub roll pop sub xor out ret pop jbe jno insb shlb dec jne f2xm1 add or add repnz loop test dec mov fnstcw lods jl fstpt idivl mov jnp mov sub xchg xchg mov test popa fmuls repnz repz push test in mov (bad) add adc add fmul fistp ret jnp daa xor cmpsb push mov scas fcoms cltd das cmp cwtl xchg inc popf pop mov cmp xor and sub bound xor fs test loopne adc mov cmpl stos gs fisubl movsl jne inc dec mov lret imul push pop jnp xchg mov (bad) stc loop fwait inc repnz jl enter iret loop sti aad ret mov aam shr arpl repz cwtl mov xchg insl and pop scas adc inc xchg scas dec divb push les ficomp push mov cld and and adc xor mov xrelease and cmp fcmovbe jne push imul sub push fldt es out dec cli sub mov mov leave jne push imul jmp test pushf xchg addr16 mov fstl scas (bad) jecxz pop lods outsb mov push and and adc jbe pop ja sub push lods rcl cli les fcmove divl sub mov and xchg add stc out mov and dec pop mov notl gs scas mov gs pushf (bad) sbb mov mov inc xchg mov in stos inc xchg sbb sbb notl pop mov add (bad) push adc pop lock leave pop adc cmp icebp test sbb jl movsb out fs stos repnz cli loopne xor popa xchg mov popa (bad) insl sbb and ja jb mov sbb (bad) sub dec (bad) in fisttpll cmp jmp dec movb sub jmpw inc lret mov push sub repz xor cmp inc sbb leave mov insb mov lret sbb or (bad) loopne out and lea rcll ja adc push pop (bad) xor or sub add mov cld fs adc mov dec test mov xchg (bad) cmp pop xchg inc mov xchg pop mov into inc sbb mov xlat fcoml shrb lret scas xor ffree gs dec inc sub aad xchg cmp jbe lret jmp and stos xlat adc mov lret mov daa out into sbb lds jmp imul sub mov cld xchg jmp ror or xor and into mov and (bad) les and sub out push adc lock xchg inc push pop sahf cmp rcrl dec jae add mov adc sub sar inc xchg mov dec mov xor popa pop mov lret cmpsb mov push jg imul mov xor mov sbb stc push xchg call mov addr16 clc sub mov ja mov ss or lcall bound repnz mov movsl lcall rclb addl xor mov xchg xor stos push push in pushf fimul sub mov jns jmp cli or idivb jp dec out (bad) dec enter push clc xorb fnstsw xchg lahf pop std sbb pushf lds fcmovb daa or xor lret add mov out idivl leave (bad) jl adc cli lret ljmp xor dec inc daa xchg mov movsb and lods lahf mov mov mov push iret or lret decl loop icebp stos rol aaa pop sub sub or ljmp push xchg leave std xchg push mov cmc inc stos adc fprem (bad) rol dec cmc push xchg xchg decb repnz jecxz (bad) xor mov pop sub mov jmp jbe or and stc stos inc pop out dec stos fbstp xor xor add push adc sub or pop mov or dec insl dec mov or and pop lcall out sub xor cmp (bad) cli shrl xor (bad) nop sub dec ds mov test sub pop push xor scas sahf and in movsl out (bad) addb (bad) dec mov cmp scas out mov hlt push daa int3 mov sub jl imul adc (bad) je das push sbb xlat sub (bad) sub stos or testl cmpb sub icebp push scas test mov decl jne repnz leave mul sbb sbb daa testb pushf roll rclb sub (bad) fbstp and daa mov imul es or cli pop in sub in loop repnz aad cltd xchg jmp xor inc nop mov adc es cli push pop call (bad) push lods hlt jnp jne ret bound call cmpsb (bad) pop rcr addr16 fbstp jae lret iret xlat inc inc cmp stc push xor movl ret pop xchg mov dec dec ss out mov pop loope push xor lret stc cwtl dec nop xchg sbb std or cmp adc ret pop inc sub add add daa daa repz (bad) (bad) stc sub lods nop xor daa xor int3 xor mov add stos sub jle sbb ret jecxz dec movhps mov xor loopne mov pop mov fmuls dec sbb lds pushl mov loope hlt jecxz dec pop ja fucomp (bad) xchg add cmp pop sti ljmp and push repnz (bad) fstl dec jmp movntps loop inc mov (bad) movsl push pop mov decl daa loop push jnp leave out movsbl mov data16 bound fist dec fcomip (bad) pop add push inc mov jbe das scas cmp pop and cmp icebp es rclb repz xchg call mov xor leave jl shrb out mov and pop inc and nop outsl sub rcll daa shrl adc jmp test jge test fdivrl negl sbb mov cwtl xor dec pop dec or mov and xchg jge cmc imul popa or cmpsb clc aaa add fbld adc mov mov lahf jge loop int3 movb fimul cmp outsb lods ja adc sti xchg popa inc lret push add xchg lret stos fldcw or pop fcmovu das and jne aam sub and (bad) std cmp sub stos mov sub xlat ja lcall icebp shrb sub pushf inc cmp mov dec push pop and xchg ljmp xchg mov mov jne (bad) pop sub popf cmc mov add cltd (bad) cmpsl jge jl stos mov roll scas gs mov push and mov negl adc clc test imulb mov xchg ja imul dec into stos andb ja and fstpt ljmp xlat lds out sub and iret popf jne xchg (bad) mov pop dec xorl sub sar gs ret (bad) mov sub jb iret negl xchg sub push js iret cli fs mov sub xchg jl insl push jg jl divl enter mov or and mov xchg loop and add es sub push lock pop ja test pop xor sti adc in dec cli je ljmp dec pop (bad) mov adc loop shll push lret and xchg test adc cmp out shrl fldenv roll iret xchg stos adc mov cli clc push mov jle push outsb sub subb inc pop out gs fisubl dec mov push mov inc arpl xor or jmp sub outsl xchg jmp inc push lret sub mov cwtl cwtl idivb xlat dec and cmp insl push sub repz pop push sar jo icebp add xchg sti sbb je scas sbb mov add fnsave xlat leave pop addb adc sub cmp rcrl mov inc pop leave xor fs rcrb and mov pop test pop ljmp xor add jmp jbe enter add push ret adc dec into (bad) xor loop or nop inc fxch daa jno jmp lds and xor push xchg ror dec frstor (bad) das lret ficompl sub xor es in xchg jl aam jp les pop adc and mov std roll xchg mov or scas xor ljmp or negl mov sbb jns fnsave xchg jnp jl push idivb sub gs lock add jo mov sbb inc cltd ds adc xor mov dec lods sar mov dec lods test mov dec (bad) dec daa mov mov aam dec jmp pushf push cmovle pop xchg mov xor cmpsb adc scas jb out fdivl sub jg (bad) xchg das sub dec push add dec imul jle xchg ds aad divb sbb rcr stc cmp ds sub sbb or cmp jae cmpsb sbb add or (bad) lock cltd cmp fstps lods and xor fadd rolb cmpsl roll daa inc jp out fwait sub dec (bad) sub imull divb clc jnp mov xor (bad) sarb fsubr insl sbb rcrl inc pop sub fs adc and xchg xchg (bad) add leave sub add fnsave jno scas mov jmp clc daa dec or popa sti cs lcall add lahf aam addr16 cmp fsubrs xchg icebp and mulb cmp pop adc cmp pop sub stos aad lea mov pop add (bad) jecxz divl lds (bad) clc sub pop daa rcll popf jl ret jno fs lods mov mov jns gs push dec adcb push cmp dec iret jae mov lods mov pushf inc pop mov mov sbb xchg out lods enter jnp mov idivl gs xor mov mov idivl pop mov lods jg mov cs (bad) lods inc jnp sub cmp mov lret rcrl inc xchg cli ss push (bad) pop inc jecxz enter ror (bad) sub jmp and (bad) jle rcrb push lcall insb push lahf lcall outsb dec cli add gs mov and cwtl sbb xchg leave subl movsl fldcw out dec rcll xor ficom sub sbb jl xor lods cltd adcl stos and xchg xchg scas mov movsb xor jno lret sub dec (bad) adc mov lds sub mov inc mov add leave jg inc imul push mov into add xchg sub push sub mov and add cmp sub dec shrb xor adc add ds outsb xchg gs mov xchg popf sub mov dec int insb xchg add jbe xor ret out or arpl or mov xor push aam and jle jb xor das bound out pop in aam sub hlt out (bad) mov mov mov sub jmp xchg shll mov jnp inc ss dec mov and ljmp xchg push adc jae mov adc jmp push xchg xlat dec out dec enter decb pushf stos sub loop fsts test sbb lcall scas mov lret cmp pop das xor cmp and jne fdiv jp mov mov inc movsl pop cmpsb pop mov dec lret or stos movsl scas adc mov jbe call andl add sbb out push out jne scas fnstenv mov mov (bad) or or cmp cmp imul mov in and dec inc sbb mov sub idiv adc ret push xor and push in or pop (bad) push push pop xchg jge mov or xor sbb clc mov sbb (bad) (bad) icebp adc xlat gs mov pop dec inc ljmp mov inc (bad) sub icebp mov mov mov jge pop sbb jno nop mov enter mov xchg out in ja mov inc jmp scas lret stos xor jl push loope adc xchg xor sbb cmp sub adc push out cmp sbb aas jmp jbe push hlt cmp iret mov cmp pop enter into (bad) jnp cmpsl or mov out lret aad imul lods add lods in ret negl inc mov mov lods and inc pop pop fcompl pop push ljmp inc fsubl add icebp xchg mov add mov cmpsb jo jmp jge std pop ret jl dec dec mov sti aaa into sbb gs or mov mov sub jge ljmp mov mov sub or jmp scas add or (bad) arpl aas sahf xor jg mov xchg jmp sti dec mov xor and push mov addr16 shlb outsb lahf sbb call xchg lock into mov in sbb push aam mov rorb push xor mov jns jp gs jge add xor xor jge dec dec jg out xlat fmuls into add les push dec sbb fsubrs mov sub int mov rep les xchg sbb push jmp mov inc inc mov pop (bad) mov and shrl ja push pop test mov pop jp cli xor (bad) or jecxz inc aad inc testb cmp fistp imul lods fwait cmp lock shlb test and ss inc mov (bad) movsl ffree dec movsl pop popa fwait subb pop out push xchg stos sarl xor (bad) sahf jns add xchg jns les popa or jnp cmp arpl inc jge les test mov loop cltd mov enter enter inc sub rolb xchg mov jmp into aaa scas sub push xchg mov mov dec pop jmp in mov movsl push in icebp xchg pushf push xchg daa cmp or sub test insl test cmp movsb lcall outsb inc and adc pushf sbb xchg sbb repnz (bad) cmp test scas sub popf (bad) cmp mov fiadd xchg rol xchg xor incl fldenv mov ja imulb test test cmpsl aad inc add iret sub mov jmp or and test movsb test mov dec sub inc jmp xchg jecxz cltd pusha xor subb push mov xchg je push notb jmp and cmp out mov lock jge inc insb mov stc xchg loop adc fnstenv divb fisubr lock aaa loop inc mov dec addr16 push fstpt int3 inc dec iret int sub sub mov cmp push mov int3 subl imul cmpsb imul inc mov movsl inc popa (bad) or fldenv mov jne ja lret xchg sbb add popf (bad) sub or jae adc sti mov jg dec mov aad std sub imul dec or push mov mov mov xor cs mov cmp add or jg cmpsl rcrl sbb and jno lods fcmovb ret ljmp fiaddl ds outsb mov mov jle pop adc sub enter out lret ljmp and test sbb add call or (bad) add cmp and hlt sbb cmp dec (bad) xlat jno jmp aaa mov push test movsb jmp inc jbe dec rcll or rcrl fwait adc mov fisttp cmp das cmpsl pop cmp imul and call or xor (bad) dec aaa sub (bad) movsb inc aaa adc cmpl gs xor enter pop les mov notl fsubs xchg or insb sbb push jo loope add cmp or jno adc stc xchg sarl mov cmp cmp leave mov out mov mov ret sti fs in mov repz add clc dec mov jo push cwtl movsl repz lods nop push (bad) adc lret repz adc mov (bad) push into cmp xchg xchg aam loope repz jg rclb mov call sti adc in xchg mov js rol pop loopne ss fisub shl imul ja sarl jnp idivl scas sub out pop add mov xlat aas cmc aaa das jmp daa test (bad) cltd xchg sub out loop mov xor (bad) adc enter faddl cmp fmuls dec jg and loopne out xor ja push popf fsubl call dec ret xor cmp adc fcompl and cmp int3 add add xchg sbb push cmp push sbb (bad) roll test add std mov call stos mov or test es imul mov push inc mov orl lock fdivrs or pop (bad) lods xor dec stos bound (bad) inc lahf pop mov push ret lret std xchg push popa sub mov je pop sub out fcom add xchg rclb push call bound pop push icebp scas dec lods sub or (bad) jge lods pop (bad) mov pop inc out jg xchg dec mov loopne sbb sbb movsl lret push jle imul adc and adc cwtl and mov or movsb pop scas mov xor xchg jnp aam outsb xor std or in daa ficom jb lahf pusha add or xchg mov dec jnp dec pop int sub mov rep out lea roll or pop movsl jl mov pop fnstcw dec mov cmc inc mov je imul or jecxz lret pop std jp lret mov inc mov mov mov xchg into mov xor mov flds ja jge out aas mov add fsub jecxz rcll add out repz mov rol dec dec inc mov pop pushf mov inc mov loope or mov (bad) cmp cmp mov rclb stos cmp or mov daa imul out daa cmp inc mov popf (bad) out in mov inc add xchg gs out add adc rol add cli mov dec stos shr pop repnz in ja add sbb repz mov mov pushf pop xor add jmp pop or cmpsl jle sti popf lods sub xor ljmp mov fstl (bad) adc dec jne mov out divl dec sbb add mov repnz jnp mov sbb xchg mov inc and loopne xchg xchg adc add and add and pop fxtract ret repz cli fs scas adc xchg dec out sub stc fdivrs cli add out mov clc mov fidiv mov ds push mov mov pusha imul lcall ficomp movsl fistp inc loope adc inc mov or fstps add pop mov iret into lret cltd xor xchg dec sub das mov jl cmpsl fcmovnb pop out (bad) lcall xchg (bad) jecxz sub out incb (bad) imul push dec repnz adc jmp repz sub repnz mov int3 add pop cmp ljmp add jmp xor dec repnz mov sti push outsb xor adc adc inc add movsl adc ljmp and cmp je or mov (bad) ja test jp mov jmp adc fsts mov loop outsb sub mov or xchg lds rcrl ja mov ret jns adc sbb (bad) mov (bad) sahf fwait dec or (bad) stos repnz lds xor cwtl lret adc loope push fldt sub in mov icebp jbe pop inc push adc stc mov (bad) mov cwtl stos mov in daa nop jno sarb cltd out cmp mov sub mov cld inc jg ret jmp (bad) dec and add jge fstl imul pop pop and (bad) dec ret cmc gs xor add xchg insl test mov movb lret in dec outsb lret test mov das push jb add add or mov cli stos mov pop or call das icebp pop fbstp ja (bad) mov cli sub add xchg pop icebp imul bnd ljmp mov (bad) xchg push jmp xor ljmp mov adc xchg das insb xchg out js pop iret test cmpsb push popf cld in loop push jle push into cmp sub dec inc test dec sub pop pop lret test iret ja mov cmp mov push das or or jmp lock lahf push mov arpl xchg cmp xor sub insl ror pop add push dec icebp or xor loope imul sub mov (bad) repz add jp add rcll cs push (bad) jmp add jmp mov nop iret pop repnz (bad) ja mov sub add adc pushl sbb int3 movsl adc add es jmp mov and xchg mov pop scas add adc int3 pop sub xlat mov mov fnstcw loope mov scas jl and cmp cwtl jo adc xor mov cmp add push lcall push sub jmp sub (bad) movsb stos mov xchg sbb or fdivrs lods dec lock and lods js (bad) cltd call loope xor and cmp mov push fistpll push repnz push bound dec gs cmpsl jp dec jmp jge mov lock cmc dec pop or xchg add setg mov push in popa stc sub outsb (bad) and mov sub mov jle out push or lret cmpsl testl ret fidivr jmp mov xlat mov pushf mov mov imul leave dec mov call and (bad) mov mov cmpsl in sub (bad) jno mov scas test jl inc mov stos bound jne sbb nop imul fstpl dec popf fild xchg in imul imull dec repz into cmp fdiv div fisubr insl repnz adc mov xor fildll das scas adc nop leave cmpsb sub mov fidivl (bad) mov push sub or jns pop sbb (bad) dec into das ret repz bound jo push sub divl fldcw pop jno sub mov out mov rorl mov mov mov cmp jb out pop adc (bad) cmp pop adc sub scas mov and and jg jae sub or sub jecxz lock mov mov adc xchg fld sbb and loopne ljmp icebp xor scas xchg repz or mov mov xlat pop push sahf xor in sub jge mov je xor arpl or shlb or (bad) cmp sub mov arpl jp movb movsl mov jmp push leave mov pop dec inc and jmp fisub (bad) adc idivb xchg (bad) imul daa pop in loopne dec pop jb inc cli cmp mov (bad) dec data16 decb mov add sahf adc lods repz mov sbb out dec ds xor fsubs mov dec loope leave jg inc mov jg sbb xor or xor negb fs mov aam cltd mov loopne repz push aam lock imul dec fcmovnbe and sarl movsl mov insb jb pop rolb fdivr icebp xchg mov leave mov out test and jo mov adc mov (bad) cmc lock mov add jns ds ja push sub fiaddl mov and negl in sub jp ror imul test cmp sub xchg (bad) popf pop imulb adc cmp mov (bad) imul in cwtl cmp jbe pop or leave pop repz mov mov dec push or jecxz leave leave pop cmp dec inc inc jbe add data16 (bad) leave not (bad) pop mov call cmp mov pop add adc mov push mov sub pop fld sarl stos cltd sahf and cs ret ja mov loopne sub cmp and cli bound in and mov and xor mov push inc out ret leave xor xchg call bound push push sbb sub popf fwait ljmp ret je jp insb adc (bad) push sbb dec jge test dec cltd sub mov (bad) icebp sub (bad) into aaa and sub push jl fs cmpsb jecxz and sub xor add mov cld cmpsl adc scas pop scas aaa dec nop push mov mov mov xchg jl test xchg scas dec dec mov or inc in pushf pop lcall stos ret push xor test sub inc lds push inc mov xchg cmp sub mov pop das imul dec mov je in cld or pop lret stc xchg add shr lret adc inc xor pushf inc fidivl addr16 test pop cld aam sti cmp mov fs out aad jecxz mov xor jg ja sbb sarb loop xchg jo jmp push ja pop pop ret out and aas movsl adc mov push add dec ja loop sub jecxz cmp xor cmp fs push jnp adc sbb in (bad) cli loope,pn outsb cld jb mov int3 jecxz push jne iret and aad push icebp mov push push das jbe lods in xchg out jmp pop daa jecxz mov mov mov (bad) jge repz xchg or adc aam and xor out mov scas or jne xchg ljmp sub out xchg jne lret repnz and sub ds and fs stos mov sub ja popa and push int cs fwait and stc adc cli cwtl xchg sahf add jle (bad) out testb pop sub data16 stc popf push xchg dec xchg inc add inc cmpsl jmp push sub je or sub add pop data16 add pop mov jecxz cmp dec push hlt scas add add mov jmp mov and movsl loope add sub data16 adc sbb xor xchg sti out lret adc xor lds push roll clc aad (bad) cmc fldln2 dec jg jb dec jb pop dec pop loopne imul (bad) or lods and mov iret add mov xor andb or fnsave mov js (bad) stos sub imull xor imul sbb pop daa adc repnz iret pop das sub (bad) mov mov adc push into insb mov divb or or (bad) cmp daa sti incl pop jbe (bad) pop or xchg mov add pop aam pop sub add xor pop adc cwtl stos (bad) mov loop xchg call (bad) pop xor xlat dec insb add rorl push mov mov inc out iret ds adc clc jbe (bad) fisub xor jbe imul mov pop mov mov xor and push and mov dec outsb sbb sub pop idiv push push fstps and fcmovb jl inc (bad) dec repnz sub lock and outsb jno inc add rorb icebp push pop stc (bad) (bad) leave push pop (bad) and xor xlat stos loopne cmp negl xchg imul jns mov jb xchg xchg bound shr cmpsl push mov leave lret cmpsl fistpl mov pop rcll jb out push cmp icebp sbb dec les sub xor mov xor jne (bad) adc sub out mov ret xbegin cmovp lahf lods dec and loop cmp mov leave pop sbb mov clc add jo (bad) or fisubl stc mov jmp push pop mov dec ret movsl mov jmp pop sub xor sarb jb enter ljmpw adc add lret out mov fldcw pop push inc mov dec mov and adc rcr insb cmpsl pop repz and cmpsb rcll inc xor mov cltd cmovb incl std push push lret fsubl fstpt xchg or xor sbb inc xchg sbb inc addr16 mov sub pushf and das out in popf push test (bad) xor aaa jg add mov enter (bad) repz cmpsl (bad) ret pop mov mov push push cmp jmp mov popl xchg fcomps inc xor dec push cmpsb into cmp dec mov aam or mov cwtl cmc testl test jp loopne movl outsb fstpl or push mov push mul cltd fwait mov push pop pop add xor insb xor or nop es outsl dec xorl pop mov insb xchg in xchg push loope clc mov jae jl add mov (bad) xor mov dec (bad) mov push ret dec pushf dec leave ffree mov push push jmp into mov mov jg call mov pop pop mov aas push push add popa fistp lret pop out mov jecxz adc pop push rol call push adc inc in paddusw rcrl push pop icebp lds or shrb mov lock inc push mov sub or shl jmp fcoms pop mov adcl adc mov push daa out or cmp mov cmpsl lcall push dec ss (bad) aam and cli int3 aad or jg add push jns jo lret and pop or std xor call add sub jp mov xor add bound popa mov mov inc mov jg,pt pop add in neg sub pop mov and add ds sub push sub pop add sarb fbstp idivl shlb cld roll mov push js push stos (bad) mov push dec adc push xchg pop mov outsb xor sti inc adc je test dec sbb icebp push mov ja sub lret push pushf and enter sub push jmp xchg pusha mov repnz mov push adc sub mov fisub pop lret mov sub pushl xor add jne cld inc sub fnstenv adc negb adc or pop add sub incb mov mov imul test dec mov and sub sub ret test or in xchg sarl jbe,pn (bad) mov loop jno dec (bad) add push mov jmp int3 call sub push cwtl mov mov xchg xchg imul sub jl fbld lock jle iret sub xchg or add mov jns jecxz sub jmp dec adc and and xor sbb jle fmulp (bad) mov add sub sub int3 cmp pop mov dec ret int mov xor stos mov lds dec jecxz icebp or sbb cmpsb xchg mov inc pop repz xlat ljmp push mov je (bad) xor dec mov push pop mov lret or add mov test jg sbb mov add mov cmp shll (bad) (bad) jne stos sub sub add std lcall icebp (bad) dec sub (bad) sub ljmp mov xchg fsubl ficompl lcall xchg adc mov xor cli cmpsl jg lock and add sub idivl pop inc mov xchg outsb mov or mov push dec lret jg dec push adc daa add pop pop lods es xor or mov bound and aad (bad) fistp aaa lds or repz adc mov stc mov lret jmp jp mov mov add lahf push rclb mov lock xchg leave pop out sub or shrl mov xchg test sub repz and loop jbe (bad) pop repz pushf (bad) xchg shl cmp in iret lahf xor out cmp movsl enter lcall xchg lds pusha das mov lds int3 mov or lea mov xchg xchg sbbl test jle (bad) cmp (bad) xor add xchg stc push mov pop mov pop sbb or mov or jns (bad) aas cmp scas fimull mov adcl out jns inc sub dec inc out mov hlt lret push sub aam das fmul scas cmp roll jle adc pushl outsb lcall adc pushf push jmp lret out ja je jl movsb test je inc js movsl xor in cmpsl add jbe mov dec mov out ds lcall sbb and nop imulb sti adc add test mov xchg cld xor les sbb int3 mov cmp cmpsl in mov mov into xchg push cmp lcall xchg (bad) and add fisubr add xor and flds lock mov sbb mov xlat cltd mov mov and dec cwtl int3 data16 notl popf jle jp mov cmc out pop xlat ss cmpsb jnp icebp or mov xchg pop sahf fnstenv mov xor add fldenv lret and mov mov fs rcr in repnz lcall jmp xor das out sub mov icebp cmp iret sti jbe inc jecxz dec (bad) add (bad) or xor sub or popa test inc ret jg pop movsb test mov jo ror cmpsl jne cmp mov sbb outsb ret jnp xchg push or sub leave inc add aad imulb mov or idivl inc call cltd pop int3 cmpsl pop jmp in mov jno sbb or xlat sub cltd out aas mov out push cmp inc add loopne out push sbb sub (bad) mov sub pop gs stos scas pop ljmp loope push xlat clc ret jg xchg movsl (bad) mov or mov or fcom and xor enter mov leave into fst aad (bad) mov jns bound ds rcrl shlb pop mov mov and fstpt ds add out mov inc xchg add test std push mov data16 movsl jecxz pop add insb (bad) imul adc out sub mov out int sub and pushl jns nop push pop test dec pop fidivrl sub icebp sbb jmp imul jno pushl jno mov lret jg sub sahf adc push mov xchg roll push mov sti fdivrs and (bad) or or popf dec lret fsubrl (bad) repz jp out sub adc add jmp jge,pn mov sub add mov and das data16 data16 std add loope out cmp mov in (bad) leave lret std in cmp (bad) dec stos xchg fstpl sahf mov mov in pop out mov sbb pop ret sub das out cmp (bad) xchg jge ret add notb pop outsb test push lcall pop inc xor and jbe inc out push sbb sub jg dec lret mov xchg jecxz sub or std cli add pop jns push insl outsl test or test mov out dec mov push out and or sub sahf cmpsl jne pusha adc bound lods loopne mov jb ljmp test inc jnp mov dec enter movsb daa jmp lock loopne mov push xchg cmp mov cltd xchg add push fiadd jns ret test das inc pop lods cmc in orb jb cmp in pushf jmp test xchg roll (bad) mov sub out out or fldcw sub adc shrb xor adc mull mov sbb or inc sbb loop lret and sub inc mov roll fidivrl cmpsl xchg xchg call dec cmp dec (bad) hlt ret cli jo inc add mov cmp xor sub adc and dec shrb sub in push lea or push idivl xchg and loop in lods mov hlt cmp push mov mov je adc lds push and pop cmpb add jae jo mov (bad) adc add daa lret pop movaps lret into jl pop add decb movsb lcall mov xor mov sub mov sub or lock or add pop push or dec mov movsb aaa add push sub xchg sahf push pop jmp leave je loop pop mov cs (bad) jle adc or mov adc push (bad) mov pop mov fwait sub mov dec mov mov xchg ret cmpsl and xchg mov push lcall inc adc adc dec in jbe mov jmp (bad) imul push sbb aaa mov int3 add dec lret fcom enter push out popf (bad) adc (bad) xor pushl mov ret push inc insl jo mov fistl jmp mov pop imul pop mov xor inc lar and inc inc jge in dec lret (bad) adc lret cmpsb push inc loop xor xchg add fcmovnb loop lcall arpl and cmp sbb loop mov xchg test jns mov lds mov loope xlat imul pop inc xor (bad) movsb xchg or (bad) lahf pop lods imul add xchg dec ret jecxz js pop sbb es icebp les scas adc and mov dec imulb sub insb jne inc sbb je pop sti fcoml fsubrs jb pop fcomip add jne inc and push or cli shll sbb xchg cmp outsb adc or pop imul lahf movsb stos fcomps mov neg mov sarb mov jnp dec repz dec out adc mov xchg xor adc mov pop test in in and sub mov dec idiv and sbb or mov cmp jnp leave mov and dec mov in int sub mov mul in mov cmp jmp jecxz lahf xchg mov push push stos jbe mov out mov sbb sbb ljmp add pop mov add (bad) mov out testb add sahf push (bad) scas or cmp mov jge out or data16 cmpsl jle data16 pushf test xor inc or ljmp jle and cwtl daa add (bad) mov test and cmpsb pop mov loope or loope pop xchg jle add and xchg repnz inc (bad) add or inc sarb test shlb fistpl mov dec mov hlt leave or in sbbl push sarb jp adc lahf xor mov mulb sub jg mov sub pusha inc mov xor xor sub fpatan push mov loope insb cld mov lea cmp lea cltd xchg cltd dec popa pop outsb mov cmp xchg cli scas mov aas daa sub mov inc mov mov shrb sub (bad) and or aad sub jp mov cli in daa pop aad loopne or popf insb add cld pushf mov insb aaa mov mov dec pushf ja shlb sub jb adc xchg mov into in mov sub cmp clc or sub or sbb fcmovne or pop xchg fwait add xchg mov push pop xchg out mov frstor or mov cmp dec xor test xor inc imul push dec lret push xor leave into xchg sarb aas sub adc cmp mov xor gs inc mov fisttp leave mul inc mov scas inc pop xor add out mulb and mov xor stos test mov adc mov jae (bad) sbb repnz mov xor add adc sub and sub jge mov out pop mov xor (bad) lcall bound add xchg xor lret ds movsl test (bad) push popf aad cld into mov mov lea mov cmpsb int jnp sbb jg ljmp xchg xor dec cmp dec inc mov clc movsl cmp xchg int loope into sub sub imul push sbb iret and and xchg push mov pop adc mov mov cli jb (bad) aad lds sub mov stos pop leave out xor iret jne mov and mov mov ja (bad) icebp or mov call ret movl insl or les sub jns (bad) add xor cli fiadd mov jne mov xchg xchg xchg pop lret jb fstpt mov cli sub ds push and xor mov outsl sbb sti (bad) xchg xchg pop mov sub pop sub or xchg ljmp idivb je and xor sub jno mov xlat bound hlt pop jmp out pop imul sub xchg outsb xor sbb or addr16 pushf in jb push rcrb sahf adc fs test push jle (bad) movsb pop test mov cmp leave (bad) add jmp xchg and adc xor xor out cmpsl sbb fbld add stos adc and mov xor or stos pop pop mov cli pop fistl fidiv scas mov mov xchg jl and stc lea ficoml mov sub (bad) xor ja add ret or mov test daa jno fs loop lret iret stc insb inc sub xchg (bad) add je outsb ret mov cmp and fildll mov and xchg loopne pop push pop movb nop add or push or jne das adc jmp mov sbb sbb mov (bad) sbb leave mov dec pop dec mov in fsts jle sahf xchg or add add icebp mov xor xchg pop pop cltd inc dec (bad) outsb push iret sub inc adc push idivl aad inc jns mov jne push icebp cmp add jecxz sar test into mov (bad) idivb sub and pop xor clc iret aad adc jmp cmc imul aam mov mov mov decl lea int3 ffree popf mov xchg out and jnp add or xor leave das add mov lret (bad) sub cmp jl out jno mov or shr dec xchg les lock xchg loope dec enter repz sub lods daa movsb push sub sub push dec inc dec ljmp sub ja cwtl daa hlt or in xor jb cltd mov cmpsl and and xchg sarl sbb out xor pop (bad) and mov std icebp jno jl and jb iret bound dec (bad) mov mov sti dec (bad) xor mulb dec leave xor sarl sbb imul pop clc xor and push mov xor cld and xchg gs add int das fsub cmp jecxz adc icebp jecxz adc rol fildll mov pop out xor repnz and adc scas cmp rorb and mov scas jb shl mov or push add scas sub (bad) mov loop shll inc xor jge cs bound xlat pop pop push jo xor out mov pop mov sub rorb scas test sub ja je out add push adc dec mov add inc mov add test (bad) fistp mov jl add je jo mov xchg pop lock cmpsl sbb cmp sub mov fcoms out dec dec push out sub outsl mov or adc scas mov cmpsb mov jbe pop mov adc jmp add pop xor test adc push hlt pusha jmp push xor out lock cli int3 add stc subb sahf xor idiv lret stos and cmp (bad) repnz daa and push rclb sbb mov mov cwtl add js shlb mov mov incl and repnz jbe jno imul test into (bad) mov scas jecxz das into les daa or data16 icebp arpl jno scas cltd imull cmpsb jae and xlat js pop idiv sbb mov jp sarb xchg cmp dec add push jae adc cmp xchg rclb and sahf mov and aas roll cmp mov add leave ja or cwtl loope mov pop sbb pop das or add inc sub xlat pop dec cmp (bad) xor ljmp cli dec outsl sub popa fcompl lds push mov mov fadds mov adc add pop roll push dec mov addl (bad) inc push sbbl cmp push mov lock or ret pop or (bad) lret test or sbb sbb or stc pop pop jg (bad) jmp or adc adc stos cmpsl push push (bad) xor push mov or push add inc jae movsb push mov sbb push mov mov js cld lock inc push outsl orl mov pop and add ret pop adc mov mov ds add fnsave dec out adc aas pop sub pop inc neg add add cmp and ret addb xor add loope das repz push pop mov cli add xlat xchg dec idivb int in xor xor add out push xor cmp cmp aaa daa xlat xor add icebp popa cmpl imul into xchg clc sub aas lahf push ret flds mov cmpsb pushf cmp inc sbbb add push (bad) mov in cmp sub hlt mov inc mov pop xchg jecxz mov lcall les pop jmp push bound (bad) cmp in adcl dec mov and push adc push out jmp dec daa or rol dec add push add hlt repz imull mov pop rcrb pop repnz (bad) jg or or xor sub out fs sbb or scas dec dec jmp (bad) jg fildll push dec lret jb mov sub mov mov push mov mov add pushf sub or jl or ret sar jp jae inc dec scas lret clc sbb mov or cmp sub daa push inc lahf xchg imul pop adc lahf jnp daa je xchg data16 and xchg lea mov jmp (bad) cmp mov clc lock sbb into sub stos out push (bad) or and imul pop in xchg xor idiv inc lcall cltd movsb mov dec mov mov sbb rol es inc in out mov aam pop insb jp sub xchg test testl cltd cmpsl stc add sbb or rolb fmulp mov test stos mov and fidiv mov sbb adc and xchg lods mov and add out cltd cmp or sbb mov mov lds push ret testl repnz push pop inc shl fimul cli (bad) adc xchg xor xchg push push pop mov pushf ljmp in adc mov add shrb add xor or stos fcompl gs fnop outsb cmpsb sti and call pop mov in fs sbb mov or out pop iret test mov add movsb push xlat inc sti lret fs adc sub and test ja pop pop mov mov dec out enter out cmp stc fs or mov dec out cmp out sub mov sub inc add out xor stos mov and sbb xor or mov popf (bad) mov xchg imulb push or stos jb or call loopne xchg (bad) dec cmp ja mov and adc in popa dec mov jno jnp mov rcl push test add mov jg jnp jge jno out cltd dec jnp inc scas or lock dec pop add sub rcr add jns cmp jmp orb add (bad) int testl jg xor or xor xor dec jmp inc xchg and sub int3 mov push lret mov sbb cmp xor stos mov mov xchg lret pop repz jecxz cld sti movsb ljmp mull cwtl xchg mov sub pop mov (bad) divb loop pop dec mov inc call add and arpl lock and and int3 mov fstp jle cmp incl das cwtl push and xchg push or pop rcr sub daa loopne mov mov and insl fs ljmp xchg fcomps pop (bad) shlb and fidivr dec mov scas pop inc ret pop mov xor jmp adc ret lahf icebp (bad) rep repnz out lock dec inc sub lods jle inc outsb stc aad leave pop mov clc or out cld aam pop outsb push mov std stc adc std mov sub jge mov jge add add mulb movsb dec (bad) fdivp (bad) sub mov (bad) push and dec mov adc (bad) mov cs pop xchg lcall sub aad cmp add and sub jmp mov repz or jmp adc dec aas cvtdq2ps dec ret fs inc mov (bad) or fbstp jge imul mov outsl call and add fisttpl lret pop sbb or jns push mov cmp and mov imul jae xchg sbb sbb rclb (bad) pop in gs and add imul jno mov sub jmp adc push push dec stc imul roll jle adc mov and pop inc out sub adc xchg stc mov leave sub mov mov xchg lret lret xor into jb loop add pop call fstpt (bad) jne mov (bad) ret ret mov sub in mov cmc add in aad mov out adc sti lahf cmpsb dec aad movsl xchg xor rcrl push or scas loope xor xchg sub sub sahf push and jo mov pop xor pop cs sti cmc xor inc js shr cltd andb mov ret fcompl xor cmc adc fcomi (bad) or sub aad out cmp in pop jmp add mov add or inc xchg sub cmp mov test aaa call push cwtl inc negl xor lds pop leave arpl push adc sti mov sbb in inc scas movsl fsubrl fadd testb adc mov mov xchg add pop xlat loop sub jl loopne clc xchg lds ja rcl ja imulb (bad) ret in sbb aaa decb xchg inc mov scas fs mov push jb pop adc out jp push jnp sub sahf mov or pop pop aaa jg aam shrb push mov test sub cli fwait xchg pop mov and jge aas or int3 lods cmp stos call adc and add mov aad xor inc sub mov fcomip mov jbe jmp push aam jmp xor roll leave sub and (bad) sbb jo fwait shll mov push (bad) cmpsl push add xor inc test pop push out push clc adc loop int3 add sub push imul loopne sbb test dec jecxz out sbb xchg push xchg push pushf dec popf cwtl xor and roll stc jbe movsb out ret out in clc xchg (bad) fnsave roll cmp test xchg push cmpsb inc iret dec mov pop test push mov das icebp dec mov sbb push jmp adc or pop lds push mov pushf jmp mov dec adc (bad) insl out adc sbb lds mov push gs add into add cmp imul cmp pop in or imul stos repnz and xchg stos lea cltd out loope sub sbb lahf adc scas mov leave out cltd test cmp mov sub std xlat jle inc test fistpll icebp fs sti bound jmp and mov idivl and out pop dec lret sahf dec imul mov fmull xor call pop xor lret movsl cltd out inc xchg lods fcoml pop test je pop pop lcall dec lret pop icebp rorl push stos pop add (bad) repz push imul pop jmp xchg add test mov xchg pop and jae repz dec push pop dec pop inc test lret jmp add test arpl clc ss pushf mov push inc out ljmp xor ljmp incb popa sbb pop xchg scas pop and jnp out mov lea mov jnp pushf xor (bad) loopne mov and in add decb pop sub add cltd adcl loop mov in lods and ret jne int3 push ret dec add cmpsl sub (bad) pop ljmp cli and pop xchg and jge mov out sahf mov add std bound bnd repz dec sbb adc repz (bad) int3 (bad) sub mov in loop cmp ret add lcall inc and fdivr leave push imul xchg mov and lds mov sub add testb loop add (bad) mov xchg lret jecxz aam sti sub loop jecxz and xchg int3 push dec leave test popa andl es daa sub fbstp xor and inc shlb push add sub push xor stc sahf or (bad) data16 pop (bad) and xchg sub jbe imul test push add les sub mov or inc jg lret int3 dec mov mov (bad) out mov stos sub mov movsl stos jb loopne dec inc adc daa dec dec outsl mov inc xor addr16 add std flds into jl daa mov repnz jns dec push cmp roll and adc xchg mov repz int push adc (bad) mov adc out or stc xor mov popf sbb cmp adc sbb and inc imul or sbb xor mov gs daa pop sbb mov out inc ret pushl push and iret xchg mulb pop int3 lock lahf bound push mov xchg or or cmpsl (bad) in or push lahf lods sarb notl and cwtl sub cmc inc pop es add or jl push out pop rcll mov pop lahf pop (bad) xchg ret or jnp mov add sub das add hlt and out and mov pcmpeqd mov mov push mov xchg cld xchg repz je shr jne insl jp pushf mov (bad) stc add or mov pop and in adc xchg (bad) std int cmp push mov clc lahf hlt ror fdivrl daa xor jmp flds xor ja dec repz out jnp sub jecxz dec mov cmp cli daa mov xchg dec inc lret sub push ret scas xor aaa or into scas pop repz sub pusha dec das inc es fdivrp mov repnz pop fwait inc or leave jns mov enter mov (bad) dec (bad) lret and loope cmp ds dec stc pusha pop xor fstpl cli or xor leave sbb push stc and into les add inc lcall leave sbb test stos sub aaa mov xlat mov stc dec or or cmp in push sub add data16 dec (bad) aaa add clc imul jmp mov iret xor out mov xchg sti inc mov adc insb and fucomip push xor or pop inc addb jb,pt out push dec lcall dec iret pop cltd lret push and aas mov inc nop (bad) jmp dec mov popa js jge lret daa je ret jne xor int3 add adc fisubl ret inc add int out mov enter fisubrl mov add xor icebp ja (bad) lret mov mov daa out xor cs cmp into ja sub xchg mov ret sub (bad) das scas sub cli xor adc cmp fadds mov cmp add push insb cmp out mov cmp sub repz xlat aam push std mov leave inc sahf (bad) pusha push adc loope sub jmp cmpsl clc ds dec aaa movsb out or mov pop sub into and jp push decb add fs xchg bound sub clc and lea xor jg and leave out pop cmp and les sti lods (bad) xor in fmul xor mov adc mov cli fsubs push movsl dec mov xor lret mov int3 push mov inc movsl pop sbb das add push mov insb popa out dec pop sub je mov test mov movsl mov jle outsl outsl fxch jo cmp gs sub repnz mov shrb push add add jmp std aad sub cwtl sbb push fadds rcrb sub out out jbe lret dec enter stc or and enter jo lahf decb inc mov mov (bad) sbb xor mov cmc rorl cmpsb adc pusha sub add das and cli jg dec enter xor jg popf popf negl mov pusha pop mov pushf jmp xchg (bad) cmp fsubr rcr cmc mov or pop out mov push shlb add repnz push repz and out mov pop mov call push es stos dec mov rclb ljmp inc and xor jg mov inc std xchg rclb xor mov push or leave jge cmpsl mov xlat jnp mov leave inc mov mov ret inc xor enclu lret xchg test int3 (bad) leave xor cltd xlat lret jg std add jb nop (bad) dec int3 push add lods pop xchg and cmc inc ja mov loope fs ret les dec mov mov imull pop cmpb or xchg and gs into loop xchg cwtl cwtl inc pop xchg lods leave fistpll leave icebp jae jne mov pop (bad) jmp mov dec leave iret imul and fistp scas std cmp mov jno jecxz add mov mov adc mov push sti lods add (bad) out dec (bad) mov (bad) out mov (bad) add xor dec enter idivb test stos (bad) mov idiv mov push and aad adc xchg hlt sahf sarb push xchg pop call cli faddp enter add dec add ds test rclb stc insb xchg clc pop sbb pop sub cmp jmp sti jge mov and sahf inc xor jo,pn ret cmp cli int3 push mov notb push adc into cmp (bad) ds push push or fdivrl fs xchg mov inc jb or jl ret test imul mov cmp addr16 push (bad) repnz lods push or and (bad) stos je stos push or fs sub sub push mov pop dec dec mov mov imul pop scas jo add sub xor jecxz jno add lret xor (bad) imul xlat dec and mov add insl push nop arpl or cmc inc mov sbb incb sub lods add es mov add push iret push push adc leave dec clc xor xchg je lret pop mov das mov xlat mov mov mov shlb dec lock nop and mov push jmp dec fcomip andb sbb pop insl es outsl jbe sub sub xchg inc dec push jmp jae outsl mov or pop test and mov cmpsb dec and das fistpll pop cmp test lods add ret stos mov dec jmp and or sarl mov or es dec hlt stos xor clc lahf adc nop repz data16 and jg enter gs negl xor (bad) pop push das mov adc stos enter sub stos xor add (bad) fisttp and mov leave gs das loop xlat mov or push add inc push (bad) jp adc and jecxz lret cmp testl jp dec mov mov mov jbe pop movsl fldl pop xor fldenv pop inc xchg dec sti and jmp dec movsb cli fsts (bad) xor mov jp cld test mov cmp pop or (bad) xor (bad) aaa fucomp fildll lcall pop cwtl wbinvd ret push or aam xor and add fcompl adc xchg pop por das mov lds pushf cwtl and jmp xor sub sub fsubs aad cmp loop lds (bad) mov pop pop dec pop or sti popf lcall mov lock rorl and pop adc pop mov (bad) jno dec xor adc mov mov fstl adc stos fs mov jg jo add inc dec jno loope push movsl lods add sub sub mov push dec out scas mov imul dec and pusha and jnp out mov jns jmp jg rcrb mov xor and lret fucomi call push dec jnp dec jno pushl sub push pushf or push xchg mov sarb outsb loop hlt pop jmp inc push or cld mov sbb shll pop lods push mov push and cmp movsb call movsl mov mov out out jp scas mov mov sbb xlat xchg mov lret sbb adc je or mov mov jg inc jne xchg xlat popf insl data16 in pusha dec pushf enter stc pop test sub ljmp jne sbb dec jge dec sub and jbe lret pop repz daa add shrl repz sub and add shll rcrl add repz pop mov popa (bad) and jg orl idiv xchg rol test daa jno (bad) out add or stos lock cmp adc cmp aad aaa jge call xchg fimull mov xor pop jne mov ds sub mov pop mov int cmp dec adc repnz ficompl outsl mov push dec push and lahf (bad) mov pop and push adc out lret lahf adc mov in dec out cmp stos add mov jp jae (bad) jbe jp out add (bad) mov loop xchg call loopne mov loop inc and mov clc cld inc in jmp or lahf inc xor mov rcrw dec fdivrl jno and push scas dec dec sub daa idivb mov add movsl pop mov mov add cmp and fs xchg push cwtl xchg xor popf pop cli imul idivb jno jbe popa inc xor (bad) mov add les fcmovu ret imul dec mov pusha xor fmuls xchg scas xchg cmp or ret sub ret (bad) movsb push or ds add push mov rcll pop pop mov cmpsl aad clc mov pop push cmpsb push (bad) cmp mov dec xor push (bad) sbb cmc xchg jp adc push ret pop pop sub jg int lds mov push or and and and mov movsb repnz repz fldl orb jle push push mov pop xchg (bad) repnz xor push pop mov and or sbb pop push dec xor scas sbb imul mov int cmp dec sub xor and push xchg or mov xor add and neg out lds int jge jb (bad) cld xor mov jle mov dec and add push icebp pop out xchg ret (bad) xor xchg (bad) cmp push out xor rorb push push pop pop aas push mov (bad) push imul aaa lods test xor or pop cmc sub push inc xor ret out jns cli inc mov xor mov sub jmp lret push sub xor jmp mov rdtsc into pop add pop push xchg add or push pop lsl ds push lods (bad) lock push insl push xchg add adc cmpsb push ficompl dec pop or addr16 (bad) lahf js mov repz pop cli (bad) pop in xchg push aad xchg hlt sbb fld cmpsl fisttpl stos jae mov test test cmp scas mov jl add mov pop pop call xchg popl and ja fs mov leave and mov mov movzbl xchg test xor shll sub int3 push push (bad) imul inc ret repnz sub mov xchg dec push sahf popa add cmpsb push and (bad) sbb push pop xchg into mov sbb hlt mov pop stc and adc stc inc sub mov adc mov push mov adc jecxz lret cmpsl das out jo jg sahf mov and (bad) push in cmpsl nop jbe pop mov dec cmpsl (bad) ffree mov xor das jb inc std xchg pop mov jmp clc xor sbb imul dec sub mov jbe sti (bad) idivl lods adc mov push test fstl (bad) fdivrs insb aaa and mov jp test jmp cmp mov mov xchg jmp mov mov repnz adc faddl cmc and mov push xchg lret xchg iret jge out rcrb jle adc mov fisttp mov mov adc idivl pop aas dec nop cmp in sub aas xor fistp mov das incb mov inc ficompl mov sub fwait call orb sbb sub sub inc mov lock sbb pop daa push mov out aaa imul lret fild into (bad) decb sub cmp add mov xchg scas out clc pmulhw sarl adc aaa divb add xor mov dec mov out add adc fcmovnbe (bad) hlt fisttpl clc dec mov (bad) notb mov xchg inc lds inc bnd xchg cli xor add inc (bad) jo or cmp decb cld fnstcw scas std xchg sbb cltd pop add ds jmp mov stc xchg dec and repnz aam xor pop idivl xor daa lret cmp fs mov mov or jecxz mov xchg pop movsl sbb test xor xlat pop sbb sbb mov testl lcall cmp std xchg sarl pop lds daa pop je iret leave mov int3 or mov adc std jno cmp and and mov inc movsl or mov (bad) les mov sub imul ljmp mov xchg lods popf (bad) or gs out mov sub mov add stos fsubr int3 add (bad) stos mov icebp push sub jne sub lret mov mov and vmovlps cld cmp xlat mov iret or xchg mov iret push dec add sub into pop (bad) scas sub jmp add orl inc cs mov icebp mov pop mov inc and cmp push ja adc out sub daa xor push int3 and sbb sub dec and sub (bad) mov adc mov sub push popa rorb cmp punpckldq or jne xchg pop xchg add movsl mov in xor pop testb adc (bad) jo jmp (bad) mov mov out add jb xor push test cmp (bad) fsubl dec out push ret xchg xlat xor jecxz sub mov cmp jbe (bad) (bad) add sbb or cmpsb mov jne xchg les sub adc insl sbb mov stc dec xchg test pop push push cld inc mov xor xchg pop adc or add syscall mov fidivrl or out add call sub clc and mov mov scas mov dec enter arpl adc dec (bad) jmp mov or fstpt pop pop mov ror jnp xor out mov jg test notl mov aam lea sbb lret hlt (bad) jb mov or je jmp jno mov (bad) pop (bad) icebp out mov dec mov pop adc sbb les mov out mov ds mov mov mov adc icebp jae cmp sub pushf (bad) add dec mov mov and das clc sub neg shrl cmpsl fistpll cmp cmp fwait jo mov leave ja mov jecxz (bad) std out das rcrl cmp (bad) pop push cmpsl adc or xchg repnz sbb pop xlat dec mov push xor mov aad stos push adc xchg std mov cwtl ffreep xor rolb or adc cli sub and jnp and push lret cltd in loope outsl into push push xchg and cld adc or jns dec imul outsl mov add jbe repz adc fidivr add jb idiv mov iret adc fst (bad) lret (bad) mov push jae cmpsl std adc (bad) mov dec cmp roll movsl icebp pop cmpsb fldenv imul shl mov dec mov inc xchg repz out test xor subl xchg jmp sub out xchg mov mov adcl jne sahf imul hlt push testb cmpsl mov lds je std jle mov outsl mov xchg dec pop and leave stc imul lret pop jno inc leave out mov jg stc mov cmp and loopne pop lea or push (bad) jmp mov dec mov or xchg sbb dec andl mov sbb cmp xlat push cmp pop bound in xchg scas es inc fcomps rcrb and lods and daa sub xlat out push dec out and or jno or and mov pop pop and imul push pop jle repz (bad) in jo xchg jmp fcoms pop jecxz daa enter ljmp inc cli dec xchg add cltd add pop lcall push mov add jns mov idiv mov into (bad) sub or into or push cld stc pushf adc out sub or negl (bad) out decb pushf mov sub or or jle sub ss add pop sbb outsb mov out push xor lea ds (bad) imul aad jp (bad) or lret and and cli xchg loop push fnstenv imul add mov sub cmp pop rcl cmpsl jge inc mov (bad) sahf mov imul mov std mov cli or movsb shrb shr stc jle dec jmp jmp pusha inc daa lods sbb jmp dec cltd xchg lock xchg sub xor lret sub (bad) cmp test pop jne stos (bad) setb mov gs stos cmpsl decl sub sub jmp pop in outsl cmp popf cld mov xor test (bad) pop jmp push int3 popa adc roll jg int3 adc xor in bswap add shlb mov inc dec mov aam (bad) decl neg jmp jmp fs out loope sbb add mov sbb inc gs sti fincstp lods push nop mov mov ret push xchg out xchg sar pop pop (bad) ljmp (bad) outsb xchg repz rcrl push mov xchg pusha pop mov dec icebp jnp push jg lret sbb pop mull ficom loopne sti imul push push pop stc push mov mov pop jle or mov mull or loop imull mov stc xor call outsb or stos sub cmp das movsl xor inc div mov xlat push sbb mov sarl in xchg imul mov shrl add push imul mov jle jmp or push movsb mov pop cmp push imul notb mov pop push sub les std push and jmp ds or mov mov pop call pop pop push pop or pop clc out push pop cmp pop push add jns js sarb outsl icebp nop mov push push push in pop pop sbbb mov cmp dec add pop push daa not sarl rcr repnz pusha stos je sbb pop add sub mov sub or ret pop add mov sbb jmp push xlat ljmp pop ret cmp arpl mov push push adc or push mov pop cld inc or pop mov pop push dec (bad) enter or inc dec mov sub xchg ret xor (bad) push add lret test aas sub (bad) in pop add fistp out or inc add mov push repz les cli add pop xchg pop lock ljmp jbe or pop pop push test pusha lret int3 xor push aas xchg add adc xor pop pop lahf sahf jb insb add fidivrl pusha mov xchg sub jnp (bad) xchg or and (bad) lds sub imul push nop sahf minps (bad) repnz inc jle xor loop lret dec (bad) fildl ret pop jle or or and mov xchg mov pop pop sub cmpl and (bad) or test or mov fwait jp loop sub push sub xor popa roll mov jle rorb test mov sbb mov xor cs shll test mov sub pop and adc jmp and sub fmuls fiaddl fldl imul sti bound out push aas iret push mov fild fadd sub divl cmp gs pop push adcb mov sarb dec pop repnz out and xor and into or stc sub (bad) mov ret test popa and xchg ret out add add and push xchg hlt test sahf test data16 pop jno in jmp iret or sub xchg popa add sub stos mov rorb jbe (bad) jmp lret ds int jg dec jmp push mov mov test pop cmp test (bad) mov sub (bad) pop stos sub lret test and sbb das xchg dec xchg ja add and not add xor xlat dec push sub sub cmpsb leave and aam or movb mov pop inc cmp mov dec (bad) ja movsl adc adcb sbb add mov mov add mov pop popf test mov loope sub push push or fwait xchg mov gs mov out sbb or cmp gs xchg popa pop into ds sub lods lcall roll add mov push xor dec xchg leave xchg out mov cld push daa cli jae lahf xor icebp mov (bad) loop shrb dec (bad) dec or xchg jp fsqrt sub imul outsb sub shrd shrl dec aam and popf imul lea scas dec cwtl in orl push pop mov loop (bad) xor (bad) jmp data16 sub std shrl imul push jnp add add call add jae and and sub inc push pusha xchg xor (bad) lods xchg pop lods jo loope cmp and jnp mov xor fisubr dec add jo cltd cli jmp imul popf rorb sarl cmp sub (bad) (bad) (bad) fadd xlat out daa mov or and mov loop into dec in sub mov int3 mov in sar fs (bad) repnz in out movsl cwtl cmp push icebp xor lods dec lcall ret in rcrl jge movsl ljmp sbb pop and fs test mov int3 adc mov fcomi and dec loop lret push sub cli lds aam dec mov add jnp jb xor mov push mov push and lock add xor add add imull add mov and mov (bad) pop fstps (bad) jno mov or pop dec sbb dec dec stc xchg inc sub pop cltd out repnz dec dec sub inc add push mov rcll xchg test stos jae or adc clc int and mov jo and xor lods mov shrb (bad) sub add or out mov mov xor leave xchg mov std xchg stc insl xor jmp daa add cmp fs mov addr16 stos loop (bad) jmp int3 fidiv sub pop inc mov loop xchg mov pop lret decb lea mov mov aas scas daa subb rol das mov pop and repz add xlat pop and fwait and mov imul inc add xchg mov daa inc insb push movsb push mov sbb lret add mov adc aaa xchg xchg inc xchg call (bad) outsb gs xor scas test (bad) movb inc test push sub pop sub movl loop out mov dec rorb dec dec push ret jo aam jmp sarb push ds jle ret test clc pusha sbb pop lock into push ficom add loope cmp and mov mov pop pop subb jno mov dec lret fdivs call insb pop add into jne addr16 dec cmp pop dec testl int jbe sub in inc lret push and ret add pushf ja imul fiaddl and (bad) pusha jmp and pop out popf nop inc and ds aas sub lahf xor fdivrs (bad) pop add imul inc add pop xor sub and push inc outsb xor das mov aas jb xor shrl frstor movb jne lds in jne das std push lock ret lahf lcall or fwait dec std test out add lcall in mov test jb xor movb (bad) ljmp adc std mov les add mov or and (bad) pusha pop or test (bad) in test add mov pop mov add mov pop test mov xlat scas jbe pop dec scas jl add ret push jne jb cld movsb cli or sbb mov or or mov bound inc fstpt sarl fcomps pop add jecxz std das sar jo xor sub hlt jb out mov add xchg mov ss (bad) pop int3 xor and inc scas push xor fdivs inc and fist mov pop test (bad) adc cli lret mov jmp (bad) loop pop icebp and and call fildll imul add icebp (bad) jbe and int3 push and push ds loopne or pop repnz dec popa sub sti cmp xchg add enter mov rcll call adc cmp icebp mov scas ret cmc xor mov xor lock adc xor push stc push or and add sti int sub mov xor pushl and xor aas and and inc movsb mov ljmp or sarb movb jmp dec pushl ljmp lock inc mov dec jge in dec add mov and bound xlat outsb cmc popf mov and out mov mov fwait int3 xchg out pop push lods mov sahf cli sub in mov fsub jns stos in dec nop sub out mov aam (bad) mov mov pop sbb aam xchg out adc push (bad) cmp (bad) int3 shr pop inc push jl out jmp mov imulb imull in sbb vpmacsdql enter mov sarb pop mov jecxz push sbb xchg pop rcrb hlt or add fcoml mov mov jge ds es pop icebp jp sbb stos loop sub mov mov mov divl or dec jmp jp aas mov pop push adc and (bad) sub xor mov jle insl jle push sub dec hlt (bad) outsb ret mov fadds mov mov (bad) out xchg mov xchg dec mov inc into test ret add repz outsl or bswap or in (bad) cmc fisttp adc inc dec or ror sarl lock enter jno inc mov insb shlb sbb add decl jne arpl iret mov loope test push jae scas out inc and pop and mov call les inc (bad) icebp subb push pop in loop dec add cmpsb add or xor cltd or cltd mov sbb add int add xor pushf add mov and pushl sub pop in sub jmp outsb fnstsw push sbb rcr jle push (bad) push test jbe imul test arpl fldcw imul pop xor pop mov cli sbb insb pop mov out outsb sub adc cmpsl aad xor fs test xchg cli (bad) divb clc sub sub add or (bad) imul mov xchg sub mov sub and mov cmpsl xchg out xchg dec mull std xor out call sub sub roll jbe xchg bound cli xor ret negb add xchg and mov cmp (bad) mov enter pusha mov out repz xchg push idivl fmuls into jmp inc and jbe in mov aad sbb popf out adc lcall jne adc test loop xchg aaa mov aaa imulb in fdivl scas push jl es xor add fsubs clc popa jl inc sub mov cs cmpb mov sti lock sub add daa push inc in pop mov push negl xor cld les lret mov inc adcl ret cmp push mov loope loop mov pop lods fisub xchg xchg adc lods mov mov aaa ljmp xor fstpl push jmp shlb mov aad out je mov repz pop jno inc sub dec cmp lret inc outsb pop xorb xor mov fldcw dec push and and sub xchg jbe and pop mov xor mov xor push sub imul lcall (bad) xchg sarl inc cwtl lods inc gs and outsb pop dec xor push add jle jmp push nop gs decl and inc or enter lock jbe (bad) mov fbld xor push sti adc aas test inc inc add mov stc jo push xchg jae imul jge shrb clc sub fs ljmp or push and xor stos mov pop mov (bad) mov xchg xlat xchg jge ret cli mov dec les imul roll loopne (bad) dec and rol repz rorb sbb jmp xchg adc cmc int3 imul ret cli lret sbb (bad) jl sub cmpsb xchg xchg adc (bad) out pop adc mov ret test out (bad) in and bound mov jecxz mov mov cltd and mov pop fstp imul jg mov push das int3 xor dec mov xlat mov pop pop add lods xor daa fnstenv cs add or mov inc mov jmp xchg decl repz inc push adc push and loop jo dec shrl xlat cmp mov mov rcrb or push in xor xor cmp mov jge adc imul stos leave (bad) pusha cmpsl add xchg mov jle mov dec loopne fwait sbb mov push adc ss push adc mov jno stos inc fisttpll jmp mov add (bad) repz and jl push add dec sbb je loope nop push (bad) and inc push or pop pop jae xlat mov jne testb scas mov dec jecxz das push rcrl or outsb (bad) sub push out mov adc add movsb add sub mov push call inc into mov add (bad) pop mov sti repz dec cmp mov das pusha push je pop dec dec pop dec (bad) mov pop xchg lret lret sub pop test es or jecxz adc mov pop mov sbb rcrl cmp ret mov sub out push sbb or xor sbb sub lock or int3 and mov ss (bad) in jns lock clc icebp sub sub in repnz popa xchg js popa dec mov mov cmpsb cs or xchg cld lret sub jne call push sti bound pop lret ljmp sub xor inc faddl addr16 add inc out xlat and xor dec inc adc cmp (bad) repnz xchg jg cmp out outsb (bad) test or xor fnstenv lock pop cmp and std outsb mov and ds jns inc mov mov jmp mulb dec mov (bad) (bad) aaa in scas mov xchg adc mov sbb mov add mov sub enter xor xchg lret and push lret in adc ret xchg (bad) pop push or sarl sti fiadd mov or xor or push add fisttpll dec std xchg push pop sbb pop jbe imul jle daa loop xchg out das out sbb aam dec ja pop sbb into sbb mov pop rorb ret adc sub sub dec pop pop shlb push shl xchg adc and fbld mov (bad) push and xchg ljmp mov jmp out ds mul push movsb mov sub fisttpll call add and nop pop mov out mov incb imul inc xchg or xor gs cmpsb mov mov in aas xchg xor sub xor or inc adc call adc cmp pushf cltd xlat leave ljmp rorb loop dec sbb shl pop pop sub test mov fwait pop dec dec (bad) mov push test inc scas sub fimul or pop ror mov iret mov sbb daa xor clc dec je cltd pop imul out sbb jb sbb das jge push out (bad) out add repz add sub mov pop inc (bad) icebp xor mov add cmp xor mov xchg adc shrb fimul add fldl jns push mov or fisttpll jmp pop (bad) dec xchg adc xor and inc (bad) les adc js add cltd ficoml aam repnz iret and mov xor mov orl inc fildl xorb loop adc pop jmp sub xor lods lds and add sbb out mov and out inc and aaa or pop iret jecxz or lcall pusha and mov mov loop ror dec sahf dec sub sub mov xchg push (bad) std (bad) lret mov pop ljmp add iret mov fidivrl jle daa cmp jl pusha sub adc or mov jmp cli outsb sub (bad) stc inc (bad) ss or mov arpl xor pop cs jle sbb pop sarl cwtl pop hlt and sahf ret fdivr push push add mov aas push jne dec push jmp pop shr ficom iret cmpsl fisubl pop daa sar leave ficomp stos gs aaa loope push lods data16 xor out das iret mov mov mov dec jno ss div mov jmp sbb add fstpl outsb imul dec mov jle (bad) fdivl add push aam push (bad) in pop and icebp jp mov push das mov cli idivl adc call mov mov cs aad mov xchg sub mov fsubrp pop xorb jp xchg (bad) push add jmp pop adc test (bad) pushf repnz or pop adc xor (bad) mov push outsl mov adcl sbb and test das and mov or sbb xchg add negl bound jae daa mov repnz (bad) (bad) jb movb cwtl push bound and negl sub fs mov shr fadds lahf inc shll shrb loop fimul push push pop fs imul sub push xchg imul add inc scas jle lret jge inc popf cmp inc jge add or mov sarb (bad) iret iret (bad) cmc lahf xor pop pusha mov cmp rcll sub push and inc jo fidivl ds shrl and push std test (bad) push xor popf and push pop pop loope mov jnp jbe icebp imul sub (bad) sub scas xor lret rcrl mov xchg mov icebp imul adc dec repz sub (bad) fmull sub lret dec inc xor negb das push cmpsb jg in xchg fnsave bound push push or sub adc mov xor pop into and mov mov das lahf ret pop inc sub ja out xor mov cld push sarl xlat icebp cmc ljmp cmpl js pop add mov call mov xor pop add mov xor loopne mov jns mov repz jmp mov push gs cmp mov iret adc sbb movsl ljmp push dec jecxz jbe hlt cmp xlat das negl xor pop dec inc xor ja mov bound xlat mov dec pusha das rolb fisttpl lcall jle jne sub sub lock xchg dec and shlb scas xor mov sub xor sbb repnz (bad) repz out movsl sti xchg outsb (bad) jge mov xor aam mov mov lock cmc xchg mov rorb pop jmp out gs mov pop lods mov mov xor add jno daa cmp inc or mov stos cmp in and std lret mov repz clc xor mov mov movsb les imul insb mov mov sub ss or mov dec mov sub and stos frstor pop mov shlb mov (bad) inc mov out add xchg jle leave pop xor push jp xchg push int3 (bad) (bad) dec mov mov insb lds mov push push mov xor cwtl lods ret or out dec clc fwait adc and ret movsb shl stc jne cmp add xor push pop xchg mov daa lret pop es cmp push clc adc loope inc sub jecxz bound jmp mov leave aas in add ss sub in mov icebp add (bad) int xlat imul push fwait pop xchg adcl sti sub (bad) ficom scas lret rorl or cmp push fdivrp or (bad) mov xchg pop int3 lds xchg adc mov rclb das add lcall add repnz daa in sub jb xor jl outsl (bad) call cmpsl cmpsl cld push pop outsb and arpl lret lcall pop int cmp aaa adc ljmp sub jmp xor sub outsb dec sub fimul or (bad) aam xor cld dec mov mov sub ficomp and adc add in dec out test jecxz in and xchg test sub hlt loop (bad) (bad) iret jle push cld mov lret cli sub mov xchg adc cmp or jmp jp sub std (bad) ror pop xchg leave pop fnstenv or mov dec (bad) xor movb or aam mov pop enter add inc add dec mov mov pop lods pop xlat scas dec push inc xor sub (bad) dec mov add (bad) jo mov ljmp out orb fsts sub dec outsb stc or int3 cmpl jle pop jae subb sub mov pop das ret mov and cwtl jle xchg in cmpsl add mov and fucomi xor loope cmp xchg scas mov lret loope dec into and out pop rep in mov clc or les ljmp roll insb adc xchg icebp xchg leave ficompl sbb pop inc ds jp scas inc or nop jno (bad) imul jg sub or lods adc ljmp pop push add hlt (bad) mov cmp sbb xchg fistpll pop jb mov xlat sub int3 sbb xor out out sub negl jae call fsts (bad) int inc in or mov into rcl mov jbe adc repnz lods in shrb sub jnp adc add cmpb jnp sub lret in fsubl mov lahf add ret xor (bad) lahf sbb mov add mov xor inc or mov push (bad) negl sub xor add dec outsl push mov test flds add out adc mov dec lods xorb lret mov inc out add lahf repz cltd add call pop aam jecxz sub lods (bad) loope pop sub jmp add xchg lock pop (bad) loop lods fnstsw sub ja mov sub and sub mov pop into decb cs pop (bad) ljmp dec stc in jne mov sub mov das or loop sarl inc xchg pop mov sub mov cs lea sahf cmpsl push xchg dec shr divb jl in sti xchg lods pop pop pushf stos mov adc pusha or clc add loop pop lds push lcall cld fbld jmp decl lret loope inc inc add imul xchg pusha std mov xchg icebp pop mov dec mov jmp push repnz sbb lcall divb lret fsubrp iret adc jno mov add push and fildl jmp (bad) lea idivb dec addl lds cltd or (bad) xor add mov cmp sbb mov dec and fidiv jnp cmpsl divl fdivrl lods inc sub jmp out lret mov or push jmp push fldenv (bad) cmc dec pop and lock adc cs xor inc push idivb and ret and inc pop cld adc dec in daa push add pop scas mov add sti cltd sub ljmp sub cwtl dec in mov sti mov outsl lds cmp or ljmp cli loop lret sub scas test jo shr or xlat and int3 jnp movsl jnp or pop mov sar jbe lret pop jno frstor and inc inc or jno test pop xor stos and lds (bad) loop lcall stos adc idivl mov or mov or mov xor dec push dec mov (bad) xchg add add stos das bsr aam daa out es push pop add idiv test mov ret std push mov sbb insb jns push sub sub mov fistpl jo pop cld push daa shrl pop xor das dec add pushf xchg jb pop pop imul rcrb jge aad jecxz mov pop jecxz sub sbb clc das cld xor lcall xchg sub (bad) xor es leave mov cltd int3 insb fldl mov das add aaa mov add popl and loopne adc je or hlt sbb add xor and pop push add repz mov pusha sbb ss add popa les add sbb or or add push mov sub pop pop and (bad) push es jle orl jne jle mov sub and scas xor sbb mov add jp mov fisttpll in cmpsl lcall jge jecxz jmp pushl or mov fidivl xor sub push xchg mov (bad) xor jle xchg add shll mov jb xlat enter lret jbe jg rcll repz add fisttpll jne into and xchg mov test out pop push hlt jns add jge and pop shlb bswap aad mull shr push or add int3 xor pop push jns xor mov push push and or mov inc cmp dec sahf xor add pop add cwtl ds sub sub pop mov pop rolb lahf jmp in out jle outsl data16 adc arpl sbb (bad) sub add xchg sbb hlt lock sub sub add mov ja mov mov pop push add fbstp aaa orl push nop sub dec xchg aas pusha push fild add jp fistpl mov mull add cmp ljmp xchg add push mov mov lods or xor rclb stc jg fdivr adc push out jp (bad) lds in push ja popf popa stc std add sub pop xor in lods mov cwtl mov outsl in lea iret ret rcr loop push jo lahf stc js xor pop sub push (bad) repnz mov jmp push add lret add stc ss jnp adc and lea out xchg mov mov sub pop divl dec xchg and lcall mov push xchg mov xlat popf aad jae cmp repnz shrl mov scas or adc cld in push sbb (bad) pop popf mov ja aas movsl pop mov in xor mov daa push cmp icebp mov xlat xor test mov and sub push fcmove or out xchg xlat adc sub push mov inc fadd dec je and (bad) shrl sti pop sub xor jecxz lahf sub mov test dec push mov ret push and mov xchg aad jge jle dec push movsb sbb sub lock popf pushf cmp jbe fst xchg dec mov sbb pop pop fs pop and stos inc out iret and sub ss sub xor mov pop mov add mov popa xor stc and adc arpl fistpll leave and mov (bad) xor dec movb xchg mov jle daa jg and xchg push xor ds aad or notl and adc ljmp push rol dec push push bound (bad) jecxz dec test cwtl fwait xor lret pushf dec inc (bad) daa inc test stos mov fs xchg negb xor jge sbb push xchg in cli sub sub jecxz sub pop dec add sub cmpsb jmp (bad) shlb ret push mov mov pop outsb or fbstp xchg adc jmp das lahf popf (bad) movsl data16 imul push pop (bad) stos outsl (bad) bnd ljmp or cmp pop pop (bad) fiadd mov jg mov or push push dec shl adc mov xchg mov jb add mov ja pop repnz pop cld shr xor out lods loope mov hlt jbe pop mov inc xor pop jg sbb lret and add lods sbb adc dec les lret xchg (bad) out and rclb icebp cs daa push or (bad) sbb pop dec mov lds rclb les (bad) clc mov fadds and xor xchg hlt xor pop out scas fidivr out stos sub xchg rcrl (bad) js mov lret sub or out cltd roll and leave pop lret jae hlt sti inc cmp ja std aam fnsave mov jl cli pop repz adc mov (bad) add sub mov (bad) pop cli stos fs sti test (bad) mov mov and cmp adc pop jp xchg xlat mov cmc inc cmpsl push clc daa pop aad stos loop aam pop stos je (bad) cmc jnp enter or and cli fs out (bad) mov out out inc clc and (bad) lods sbb fcoms or out lret fistp push pop int3 out dec into neg jns inc sub jp sub push and fstpl inc sub add jns xor pop daa sub pop xchg pop add and adc mov repz xor or aas lcall dec fsts xor out clc nop movsb jmp mov mov mov xor push out cmp insb fsubs (bad) int3 xchg sub (bad) mov fcoml into cmc pop or cltd xor sub dec loop xchg ljmp mov dec pop data16 (bad) sub into (bad) fs loop inc fcos and enter rorb push xor adc dec mov dec jmp sbb sub sti (bad) int cmc xchg lcall data16 ja mov jno outsl and repnz inc (bad) iret and pop push jge adc sti pop je lret mov out out lods cmp cld negb jnp or dec mov or xor lret ljmp outsl (bad) int nop cli dec mov pop add clc xchg xchg xor mov cmp lret push (bad) stos cmp rclb or jecxz aam pop xchg mov push ja popf jne mov cmp xchg mov push pop leave push shll addb sbb fldcw out cwtl hlt (bad) dec mov and push inc mov cli loop and cmp les xor and or xchg gs data16 adc xor ljmp movsl mov push sub (bad) jbe out pop iret dec (bad) ss (bad) es dec leave pop loop dec cld mov mov and insb out xchg push mov xchg push cmp sub std inc sahf roll cwtl int mov xchg leave or repz (bad) rclb out cmp inc or pop pop mov adc jge rorb sarb out in aad clc xor sub outsb mov mov scas into in out mov jle and lret push mov in xchg mov adc mov or add out or int3 pushf fnop (bad) aaa stos dec add push and dec and mov jl cmp loopne loope xor inc adc lds push stc stc dec lds adc push shr fidivrl sbb or out or idivl lods mov mov xchg fisubrl or negb out scas sub push sub mov jp sar dec (bad) dec jmp or lret or out adc inc pop add adc add add fnstenv cli jmp fstpl push mov shll xchg shlb xlat lds loope repnz push nop pop sub adc cmc cmp enter mov mov sarb xchg pop jmp xor and dec fildll sub mov das jecxz cwtl pop mov ret xchg mov add out push adc mov cmp xchg jne pop mov inc xor jecxz shrb test push cmpsl inc (bad) in xchg xchg mov cmc les mov or xchg jb rorl hlt pop daa jno dec jge xchg or xor jl jb sbb sub movb xchg sarb imul mov jns imul jno andl cmp inc and mov (bad) jo dec (bad) mov sbbb mov mov xchg dec jae repnz arpl xchg adc xchg into jecxz,pt inc lds inc mov scas (bad) sbb repz mov xor loope imul mov pop gs jle fisub (bad) (bad) popf cs mov mov das stc jl enter lret xor lahf adc mov aas hlt jne xchg inc orl sub aad inc xchg into sbb xor sub mov mov nop aas std sub sbb lods pop sub mov jne (bad) iret mov cmp fs mov add sub and fistp adc popf fstps add jg jg inc imul sbb (bad) dec das xor add fldenv pusha mov sub xor pop outsb ss sub xor sarl cli imul ret mov sbb test mov scas mov jns or testl pop sti mov mov add push pusha jmp (bad) nop adc push dec fmul push jge push jmp icebp rcrl lds lret stos inc enter cwtl pop pop loopne push sub dec jl bnd dec (bad) mov xor and mov mov mov dec orb hlt and mov outsb in push cli ja,pt test cld and outsb and loope xor cmp and enter mov jg dec xor xlat or or iret (bad) insb fs sti cmpsb inc dec loop xchg adc and or inc sbb sub pop gs mov call mov mov imulb rcr mov (bad) cltd jg out fstps inc mov fistpll ljmp mov and or cld push push xor xchg das (bad) cltd dec mov jge push cmpsl jno dec ja push and add sti scas add xor push sub cli sub and push mov cld mov loopne repnz sub lods sub rorl xlat push lea int or out popf push pop mov ret std mov shll or std out lods adc fadds xlat sub add fs sub add movsb and mov mov js xchg mov mov sti push jge xchg test iret out fisttp ja (bad) lret xor mov sbb es lock xchg jne icebp cmpb xchg mov pop add adc and in adc cmp sub je adc cmp (bad) xor dec cmp jo jno ljmp (bad) mov cli call adc cmp test sub call arpl inc mov out xor fidiv mov test mov lods jbe icebp add test into sub sub push clc (bad) mov sahf lret shrb icebp negb xlat sbb dec or sub fbstp cmpsb push pusha adcl fwait call cld cmp das shll call stos add cmp cmpsb push or xchg ljmp sub inc xor fsts adc std imul xor sbb imul in xor ud2 pusha call in (bad) popa pusha add sub movzbl jmp rcrb cs push add mov xor and cmp sbb ja inc pop subb lahf decb repnz add mov dec mov adc pop sub ss test ret cmp add pop jnp push mov int push pop pop add push mov outsl lock mov inc push das sub jle lret or inc neg shr push mov jg (bad) xor sub jp fadds rcrl xchg (bad) scas cmpb aaa jmp fsts sub inc pop sub pop mov outsb iret pop push mov pop fwait lcall add lret test cmp sub out lret sbb pop inc cwtl jnp xchg push mov hlt js (bad) mov pop pop fisttpl in jp xchg mov and push mov sub inc adc sbbb mov mov and aaa fbld add jle sbb in xor pop sub jg loope cmc sub mov mov pop add add mov push insb stos mov cld ljmp test in cs in pop pop xchg es adc cli ror add cmp pop or xchg (bad) jle shll and pop xor pop adc loope mov (bad) fcomps subl push or pushf push sbb push out sub arpl adc jle add pop negl xor lahf jo rolb cltd inc pop dec ds pop add pop int3 mov push outsl pop push sbb mov sbb repz rol or sub mov (bad) pop in add push or pop std xor or fistl addr16 push xchg outsl subb and cmc pop adc or xchg aad sbb mov xchg scas and les lret adc xchg mov out mov or and push out inc xchg push jmp cmp sub mov and mov dec and and push adcb scas push js cmp cmpsb inc aas add push xchg fadds aaa or and sub mov dec push dec sub jmp add and or jge setne outsb inc add sub decl xchg sub sbb lret and dec out stos int push push push aaa (bad) test or test ja clc loopne xchg fmull (bad) daa mov out jge mov xor jg xor inc xchg out push in (bad) xor and pop rorb and mov scas pop hlt rol ss cmc sub inc pop mov test jl push add lahf dec pop insl dec (bad) stos mov pop pop stc test mov jl push lock cmc insl scas xchg or push aam mov cmp jb idiv push mov jmp xchg addr16 (bad) idivb add jp push sbb std sbb sub mul mov clc fdivrs divb ljmp shrl cld ret jne xor pusha sub mov mov fwait add aaa push into leave test mov lret mov hlt aas fdivrp xor mov sub nop cmpsl ror xchg adc push jmp pop (bad) xor jmp ficompl inc das add push and mov (bad) jp adc sub mov daa inc pop scas xchg out mov xchg mov das fadds xor repnz mov push mov testl pop jg loope stos jb sbb jl roll (bad) cmp pusha int3 mov popf insb push sahf in pop pop addr16 sbb sub paddsb sub mov sbb sbb cmp mov or add jmp inc add lods dec cltd sbb roll pop data16 cmp mov add mov push jb sub adc or mov dec sets repnz jg mov fcoms cltd push lret jb mov jle pop loop lea add loope ds mov sar pushf sbb fldt and rcll es sbb shr xchg or outsl mov cld jnp jg jae mov das lods das mov mov cmp push or mov cmp and adc ljmp mov push aaa push loop pop add popa in aaa cmp jnp sub daa adc gs mov mov sub lds nop xor mov pop dec stos out aas mov dec divl das ret xchg stc push inc push add jnp ficompl mov add mov movsl dec mov imul inc xor test sub mov xchg ret out outsl cmc xor ficompl pop jae (bad) sub xor loop dec jbe jno fs jmp lods sub push pop and and and sub movsb stos cmpsb ss mov lcall mov (bad) ljmp mov pop pop or mov fistpll ljmp subb push std loop jbe push fisubl pop dec push or popf sbb shrl stos cmp sbb lcall scas icebp mov pop xchg es js mov cs or or dec or pop jns jmp push xor sbb push or negl in lret cltd inc mov ror cmp jns movsl adc lds pop ljmp pop mov jo mov loopne (bad) push popa out jbe rolb jle cld rclb mov sbb les cs push lcall and push push pop fs xor imull jle mov or pop adc test pusha push movhps sub fisubrl add add mov push push add pop cld jg out jp ud1 sti addr16 xor sbb mov mov lcall add mov daa add in push (bad) jne xchg sbb pop ffree int3 push sub add push mov jae fldl (bad) mov rcrb pushl cmc xchg jl pop push push leave jns lea inc sub inc pop and fwait sbb ret jbe lcall dec sti movsb inc or lea lods sub pop dec add sti sub cmp xchg dec decl jle cli pop js push ret push push rclb and mov int stos or adc or jge mov cltd sti jecxz mov push cli mov decl popf cmp idivb leave cmp xchg in and mov add jmp xchg repz or xchg inc or aas loopne add pop in pop je dec into repz cli sub push icebp jg ja xor pop in adc sbb or cmp lds mov mov jb mov add das mov daa sar xchg popa xchg lock dec pop lret xor loop lret sub loopne jmp add mov ljmp (bad) lods clc lds add dec and loope (bad) fdivs mov jle xchg mov xorl xor int3 outsl iret stos push sar aas aad ljmp pop or mov (bad) loop sbb mov mov sub mov test cs test out add xlat sbb (bad) cwtl push repz das sub cltd adc mov sub jle add or ret push int punpcklwd in fsub or lods add mov xlat (bad) mov mov dec sub inc mov push cltd daa jne jne sub xor outsl xor mov ss into push push pop (bad) inc push pushf cs aam add clc loope out leave jmp mov shr sbb adc add sub mov mov mov jl xchg (bad) int3 xchg add adc mov iret mov das sub (bad) ljmp imul fcomps out bound iret jge pop ja xor cli fidiv or lds push mov inc cltd (bad) aas not pop cwtl fdivp and sub mov imul mov lret jmp jns repz lds sar sub inc mov dec mov push (bad) (bad) pop xor push fsubs adc aad jne std mov pop daa idivl rclb xlat stos divl jne jecxz and pop xor mov sbb mov xchg cmp xchg sub mov mov mov mov xor inc cld xchg and call aas pop repnz imul add mov loop popa jmp mov fs out add mov ljmp mov mov mov xor daa (bad) lahf rorb lea pop (bad) dec cwtl xor ljmp dec xchg lret clc pop outsl dec mov arpl (bad) lock dec call xchg mov int3 scas cli mov fwait sub dec mov sub rcrl in shr lods jo xchg addr16 ljmp aaa orb inc inc pop add sarl and ret mov (bad) xchg inc fs dec xchg inc lods mov pusha mov cmp adc xchg je pop test lods ret mov push dec dec or mov adc stos jecxz sub ret adc xchg sub (bad) lock out mov clc dec aaa ret inc mov mov (bad) add inc mov push push inc popa push cmp iret inc xchg and or (bad) lret xchg (bad) icebp xlat cli and push sub jne repnz mov sbb outsl daa or icebp mov leave cld test push (bad) loope mov leave (bad) mov add in cs and or out xor aam movsb mov mov xor xchg inc push fsubs shlb dec adc or mov push and or test inc ljmp push insb mov out cmpsb pusha sub in cld out jbe in and or jge mov xor (bad) (bad) in ds das aam dec jmp pop inc mov testb bound mov icebp test (bad) test add add xor sub mov mov xchg jb dec and mov mov jge stos mov mov leave pop cmc icebp jo xlat add sub fidivl in ret sbb icebp mov stos sub dec (bad) popf into xlat gs sub add jg out repnz mov je push pop ror sbb in cmpsl add pop mov mov sub repnz pop sub (bad) lahf data16 mov in push or btc push (bad) ljmp xor and cmp jno sub (bad) lret sub push mov sub (bad) cmc ljmp je inc or jb jno jae dec cmp cmp movsb xchg dec sbb decb push loope (bad) hlt and pusha sbb pushf xor jnp iret inc xchg push leave aaa lods es loop lods aas fimul call lahf mov out rorl and jnp lcall mov ss add or fcompl and int3 in test ret cli jb or push outsb (bad) jmp out imul sub or lea out or idivl adc push and mov jg dec push push leave test (bad) stc addl jle cmp lret ljmp inc pop mov daa ljmp add cmpsl and sbb imul ret outsl std iret lret cmp mov inc cs sub sub sub dec sub cmp daa mov sub insb call mov aam movsl sahf insl jmp out mov mov movsl ror ljmp rep and scas je mov mov or fnstenv add xor test pop popf rclb das mov bound mov cmp out (bad) int3 daa or jp dec mov mov popf xor mov pop lock xchg push xor or dec scas sub cmp test (bad) mov popa xor hlt mov sbb stc sub test inc adc iret add xor mov or sub adc sarl lods stc and add add jecxz and cmc adc or mov fdivrs mov adc popa push lret ljmp into jmp or or popa mov std xor or and cmpsl in jmp ror (bad) pop gs mov fmull ja dec and into dec out iret mov negb es or add lds push (bad) popa pop xor call and inc mov xor mov mov jne jg sbb push mov add leave lcall fcoms int3 push daa xor jo mov shr lret cmpsl inc ljmp ljmp dec push cwtl push xor and mov movsb addr16 lret (bad) cmp lret inc or and mov arpl sarb or jo dec jg pop dec mov xor data16 cmp jecxz or cwtl or (bad) outsb push jo jmp test repnz pop dec jge lods shlb jle leave mov xchg imul jp das cwtl dec repz pop xor lods add lret pop fld (bad) call out dec rcl sbb mov sbb mov out mov mov pop out and dec stos cmp xchg cmp push or adc enter jo add out cmpsl cmp fisttpll das aam pop pop mov iret mov icebp loop test movsb test repz pop ret lret cmc pop hlt mov popf push mov xchg push mov daa mov (bad) pop push movsl ja add pop in orl jmp xlat dec mov pop out pop xchg jbe add repnz sub (bad) mov adc sti shr bound jo je xchg push dec sbb xlat inc sub arpl inc lea fiadd xlat cmp fmulp in test mov aaa and fldl2t jp rorl aaa sub lret mov pop mov and pop mov aas scas mov or push das mov pushf mov mulb fs pop jmp mov (bad) add jns inc or and mov pop mov scas push and mov pop ret repz daa (bad) jg in iret insb rcrl leave popf fist rclb xlat fnstcw data16 ljmp push je or mov mov daa repnz jne stos bound push popf jg sbbl add ds xchg lret inc fldenv gs add inc pushl mov es and pop imul dec loop add lods (bad) push das loope xor add out test lret hlt je (bad) stos test dec push cmpsb mov xchg jb adc jecxz pop test add cli cmp jae (bad) int3 sub sub cmc push in fsubrs (bad) dec pop ljmp cmpsb mov xor mov sbb mov rclb add xor pop in add fsubl push cmp push and lret idivb in mov jl jmp mov lret inc lret lock sbb fwait mov inc movsl fisttp idiv sub sub adc inc cmp in fdivl adc (bad) ljmp push sub pushf ret fstpt arpl ret jno dec (bad) jnp rcrb xchg adc xchg int3 mov and cmc cmp xor repnz arpl cld std push mov negl divb (bad) cld loopne fstpl mov dec lods leave leave mulps xchg (bad) jmp or into mov pop pop sub cltd icebp xchg or jl idiv leave insb or jmp out jne lahf sbb push imulb lret mov pop push jb mov mov push xor into sub stos lret and mov std imul loop sub cmp inc adc jno aas pop (bad) xchg lods js sub cmp popf int3 addr16 out pop test pop clc mov mov pop roll mov sub bound adc rcll push add (bad) popf sbb fmuls lahf lcall cmpsb add iret or xlat xorb fidiv pusha test stos icebp mov insb pop stos xchg xchg mov or add xor jmp jo adc daa cmp fnstsw jp ret sub scas lock mov fbld fstpt movsl or fdivr adcl sub pop cli mov (bad) icebp dec xchg insb idivl push jne imul push (bad) loopne push jb sub (bad) testl fsubr add addr16 adc add push (bad) mov ds daa mov xchg push (bad) mov mov aas lret icebp movsl jp ljmp inc mov fdivr imul jmp adc mov push and nop pushf and in xchg push xchg jbe popl enter imul xor add pop enter cmp int3 insl and xor mov jmp flds fyl2x jp push mov dec sub je jmp add jg mov dec popf cmp sub (bad) or or push ret sti (bad) cmpsl push add (bad) xor xor cmpsl and mov (bad) dec icebp dec cmpsl test scas jo xor cmp je lret mov xor and dec sti ret lahf pushf add push movsb and hlt fcmovnbe out fistp lods std sbb sub jae popa inc divl xchg or in cli mov (bad) mov pop scas imul xchg dec jmp lret jmp mov add cs xchg xor (bad) das pop add and push mov jmp jmp push (bad) add adc addr16 cmpsl xchg insb imul sub int3 mov shll jnp xchg loop dec daa out cmc cmp inc xchg xlat mov iret sub mov and jno dec aam lret nop mov and stos imul divl adc push dec (bad) shlb iret rol mov or jle leave ja (bad) jne pushf daa sub jle jmp aam push push popf cli rcrl jge es dec add pop shr or fstpl or jbe jmp jno pusha aas out dec mov xchg pop pop test dec int3 cmpsb adc xlat (bad) mov mov (bad) cmc pop int aas (bad) sbb cli sub dec out sub mov hlt jne test and push xchg pop mov sub jae daa cli xchg popf push cli xchg cmp (bad) lods or mul pop xchg int and cmpsb je mov jg lea sub test mov scas mov jns leave inc jae popf pop xchg push sub sub pop pop jo adc jecxz cmp dec (bad) lods xor lgs push icebp xchg insl jmp test mov inc pop loope sub sub add mov cs int3 ljmp mov add mov jge dec mov xchg inc jge xchg dec mov (bad) mov test jae test scas sub loop clc cli (bad) in jns test add aam fdivs ljmp out pop inc xor ljmp and lds es js lret clc push inc dec or add popa mov in test mov push xchg and push inc mov pop sti shrl aam (bad) or aaa and in int3 xchg lods (bad) movsb mov fs sub ss aaa fucom add das sub pop lahf jbe imul mov cmp mov mov icebp mov xchg mov sarb mov mov sub into xor ret pop je mov mov scas imul fidiv fs (bad) mov sbb popf and dec jp outsb outsb dec add andb sub push movsl (bad) pop outsb lret and adc mov or xlat cmp sbb lahf sarl fdivr fstps arpl mov scas jbe push pop inc mov (bad) ffreep icebp push imul pop or mov sub xchg push jmp pop mov and mov stc lahf pushf adc mov xchg mov push into xorb int mov pop lret cli sub das sub repnz sti pusha cmp loope imul mov or sti rcll jle in stos ss enter fs stos adc xchg fucomp out jg xchg pop mov into (bad) enter cmp (bad) (bad) mov cmp or add adc out (bad) fmul jl cmp jns lcall mulb push mov lcall and cmp xlat fldenv nop (bad) daa adc add fadd dec add mov jno daa and xchg out repnz xchg incl mov out fimul push ret sub nop jmp jge cmc adc cs mov cmp push xor mov sbb xor call pop (bad) sti or add (bad) nop movsb sub into mov push mov dec icebp bound and push test leave mov mov xchg adc mov inc aaa lock fdiv fistpl adc popf jne int fisttpl movb inc xor negl (bad) mov movsb mov or and imul in out xchg push jb xor inc mov fist mov sub add aas movsl xor pop mov fadds clc mov test xor mov flds cmp (bad) scas dec out xor lock mov mov mov mov aam pop mov pop mov sub aam mov cmp mov in add call arpl outsb cmp cmp (bad) fsubrs dec pop imull fisubrl dec call push stos sub rcr in rclb sub aas sub mov xchg xchg add inc and sbb sub fs ret adcb ja stos and fisub (bad) lods jne test leave xor push neg repz fild pop adc gs jmp leave or icebp cli fnstsw push pop and pop and dec mov adc pop mov mov lea rep cmp stos sub dec mov mov test add divb adc and push fwait add jl aam dec sbb and or cmpsb add and lret mov dec lahf sub and flds and or data16 push mov mov test pop into mov cmp or adc mov rolb push dec stos lds jo sti lods loope xor mov jmp fdivrl pushl inc inc or inc inc (bad) in push jo loope pop mov mov js dec icebp stos jb out xlat pushf les mov push dec add sub ret test dec add push outsl mov mov xchg mov jecxz sub sbb icebp daa mov cwtl jnp or scas xlat dec xor out ljmp dec sti out sbb stc sub mov sub push mov lret add mov mov pop mov sbb sub stc push int3 nop pop and add or sub dec test fildll xor test popf dec sbb sub xchg jmp mov jle cmpsl xchg dec mov shl dec (bad) add mov jbe mov lcall mov cmc pop ljmp sub pop mov jle and mov sarl scas movsb mov iret leave ljmp mov pop or not in das repz (bad) es icebp icebp push leave inc pop adc stos lret test movsl mov sbb bnd leave mov xchg dec jmp adcl or ds lcall ret xor data16 add xchg and imul mov xchg pop sub xlat icebp lcall sub lods mov movsl andps xchg fistpl mov cmp movsl (bad) insl xchg sub push xor xor mov push lods sbb and ss mov jb in jo ss cmp pop fisubr add jp pusha mov loop fdiv sbb pop pop fdivrl in sub xor sbb xlat rorl data16 and or inc movsl pop cltd add jne sbb repnz in mov das cmp fnsave mov sarl xlat xchg fisub imul and push or loopne pop push fcmovne pop scas cmp sub lret call ljmp iret ds sub jmp xor cmp decb out pop sub mov cmp jmp inc test jp and int3 or ds jl mov cmpsb jne sahf dec pop xor adc test dec pop bound cmp pusha push out add add stc or mov mov lock inc in test (bad) fdiv ret add sub pop add jno pop mov mov sub pop mov out mov iret ds or into lea negb mov aam xor pop add lret cmp fldcw xor ljmp pusha cltd add add (bad) jb mov leave or mov fninit pop ret int3 js dec cmp mov and fldcw and in mov sub pop out rorb je dec fs mov and mov fwait and xlat jo mov (bad) aad jmp mov xchg out xor ss fcoms pop mov ret jb mov dec pop (bad) jecxz out fs add jle xor mov inc xor shrb and sbb add lods jecxz sub jnp jnp fnsave or andl gs leave or xor and cli sub clc jmp add mov jge mov mov xchg sti mov add mov sub push sub stos ret jae lret jno inc imul xor addr16 add sub xchg jl add jno imul jb das sarl adc jne xchg sti data16 pop lock in xchg xchg mov lahf fyl2xp1 imul test repnz jae pop loop sub sub leave sbb and xchg cmp add pop in (bad) mov test and pop adc fmulp xchg cmpsb sbb out inc movsb in xchg pop jne jmp (bad) jp les xchg aad push inc in into and push add dec mov stos jecxz loop push gs movsl cmc and push mov ja mov sub aaa (bad) aas jne mov lods jb jle and jnp jg xchg loopne push sub cmp por loopne push add testl xchg xor sub test ret fidiv loop sub add xchg lock add jl lcall jbe cmp mov stc dec sub sub adc dec imul sub mov add ja adc cwtl outsl xor xor push jnp (bad) loopne adc adc imul js repnz adc jg testl inc add int cmp dec mov lret push pop ret jnp push jae lock push add outsb cld stc movsb adc lea divb rorl pop dec xor mov pop sti into mov call pop and lock jecxz jmp sbb push add loope add inc jp mov out sub inc or fisubrl xor seto push ficomp arpl loope and xchg enter and orl mov ja ret fldcw push (bad) jecxz idivl std arpl out jae xor or lock adc enter (bad) add stc pop add cli loop nop xchg mov jb pop es jle addr16 and mov ljmp into bound lds data16 enter inc test add scas adc pusha iret sahf inc push out rorl pop jmp faddp sti ret mov (bad) icebp lahf leave mov std icebp pop mov ficom out xchg popa inc into lods inc mov sbb lock mov cmpsl fstl jp cmp or addr16 or pop lods clc (bad) pop ret inc hlt enter or jp sub fidivr jle inc fistp mul dec pop jbe push or mov fimull xchg inc pop sub push or das test sahf and test cli fsubs or sub (bad) out in xchg call mov jp mull ds add stc xlat mov inc jno mov sub push sub mov (bad) aad movsb aad pop push in mov out xlat pushf lock outsl jbe jmp adc popf mov pop icebp inc xchg pop loope mov sbb dec out mov sub sub pusha fcomi sub lahf outsb pusha xchg (bad) ljmp cmc pushf add cmp ljmp sbb push sbb ljmp fldcw bound (bad) push pusha (bad) out shll jp push testl adc xor (bad) lret or add sub leave cmp test rorl cmp out mov (bad) mov dec mov mov inc or sub scas or je pop in sub sbb dec sub test pop call pushw adc (bad) mov (bad) pop xchg pop ja (bad) jbe push add adc mov and or (bad) xor jp mov (bad) lcall xor or into mov sub popa cwtl int add clc xor scas in cld lret out fcmovu ds mov and mov fnstsw (bad) xchg out cmpsl and pop insl gs or dec xor push xor xor loope jae sbb jge xchg xchg movsb mov ret pop jp push or push xor or aaa lods arpl lcall dec ret push mov mov or pushf dec cmp or add clc ret mov (bad) jbe inc sub push (bad) xchg pushf pop sar stc add ljmp leave cmc xor mov add loop call lret cld cmp add and pop jmp imul jnp sub imul cmp das or cmp dec push hlt jns or or test cltd pop cld in mov sub add add jmp sub sub testb mov sti lods lods hlt daa pop xchg inc fimull mov jmp and mov rorb mov (bad) icebp sub gs idivb lret and xor pop inc test xor int3 (bad) xor and jecxz sub and sub mov xchg call cmp rcr add test das (bad) jg cmc mov xchg xor cli sub add jg jl sub ret andl ds mov pop dec gs inc cmpsb icebp xor daa into gs into adc popf imul mov movsl adc cld loopne lods xchg dec ljmp out push inc pop mov (bad) mov cs ss fmull int3 outsl and es inc inc pop fisttpll fdivl shrl fstl xchg cli cmpsb pop mov sbb (bad) test leave nop add xor out adc cmpsb pop and out enter adc sub leave add daa and fisttpll pop dec adc shl or mov mov pop std xchg cli xchg repz test out fcoms sbb xor pusha mov push int3 lret lahf jl lret xchg push cli xchg popf xchg sbb fldln2 and or (bad) mov scas shrb jmp sti and ljmp je pop dec rcll pop jnp popa fnstcw lret ret and (bad) xor call sub mov repz sbb or jle xorl jb xchg (bad) arpl sub cmc inc sbbl xchg pushl add push mov aas (bad) xor stos mov jle popa sub jg sub mov xchg dec and adc jp iret out fmuls mov shr jnp sbb lods push push fldt fsubrp sub repnz (bad) mov popf ja adcl fsubrs loop cwtl cmp and push ss adc int lds xchg mov lret jmp bound xor es mov mov mov call or pop mov or dec cmp shrl mov dec (bad) cli nop dec lods ret lods inc sub jmp mov int3 dec mov fbstp ret (bad) xchg xlat sbb xchg std lcall je mov sub inc mov roll sti lea insb dec test enter shr mov lret mov movsb mov mov (bad) mov mov imul mov lcall test lret lods pusha adc ret cwtl xor dec xlat insl push xchg loop cltd pusha sub in gs scas push lret jp addl adc and mov popa call and adc inc fs sub popf jae adc pop daa sub add daa shrb adc and test sub dec lahf xchg sub loope jmp clc adc or popf mov mov adc add rcl ljmp mov dec out jl xor int add lret mov sbb ret test mov and lea push pusha xor gs jnp or das xor jg std cmc cltd xchg xor movsb and dec ds (bad) repnz lods mov imul sti insl or add adc rcr jno mov mov inc mov das in pop shlb outsb or add lds cmpsb or sub arpl mov add cmp adc jl inc cld mov test jge loop add sbbl scas in push enter mov pop inc jbe mov outsb lret es dec xor ret mov dec sub pushf or inc jnp pop pop mov mov icebp out fs xchg adc outsl in xor pop stc popa dec incb fist xor movsl pop int3 fs in push dec mov les je push sub dec mov sub ss fstl or sub sub aas and cmp push (bad) xor and mov leave and jmp cmp cmpsl jbe scas cmc adc clc ljmp loop add xor stos in imul leave lret into inc and lahf dec mov dec or sar xor in add cltd (bad) cli adc lds int3 cmp jbe repnz int3 mov jge hlt imul imul imull int3 lods xor mov sti mov repnz mov repz sbb pusha sub pop pop cmpsb pusha dec or popa xchg dec stos cltd mov xor push xlat inc (bad) jmp pop mov xchg ja ret mov sarl xor data16 (bad) (bad) or add ja inc aas (bad) jae mov sub and jmp fcoms add movsb push dec xlat and push sub (bad) mov das mov push popf push cmp xor push ss sub sbb ljmp adc mov mov sub scas fs adc out adc add scas jne out cltd movsl sub fs push imul in xchg or ss loop dec stc daa ss out bound and stc mov mov roll or and jbe loope add mov cmpsb sub jmp (bad) decl cwtl mov dec sbb jno dec inc xchg sub inc and mov sub xor out rcrb and shr (bad) (bad) mov std and pusha fnstenv or sbb push dec divb cmpl xor jmp sarl jle or mov jo (bad) dec sub dec push jge xchg sub cmp pop mov or pop std cs add push lahf cld repz movsl call (bad) nop ljmp ret mov and add and jg sbb sub popa fisubr cmp movsb aam pop and (bad) repnz test stos popf std insb hlt mov hlt aaa mov ds (bad) pusha push out sbb jecxz inc lds mov test jecxz jbe jecxz sub fnstenv icebp and xor sub stos jbe jp das lock stc sub or testb push or aaa pop adc dec push and cmp mov pusha out push loop dec cmp mov and pusha mov movsb imul mov dec and mov shll or out mov ljmp test lret imul mov mov and mov notl dec xlat addr16 mov (bad) add mov lock hlt notl rcr adc jne jg push jle xor fdivl imul jae adc adc jmp addr16 ljmp push ja out and mov mov xor call cs int3 dec sub cmc inc outsb xor sbb sbb xchg mov jg fsts roll jne sbb repnz lock nop notb inc insb stos xchg xor and mov sbb push stc xchg mov push ljmp pushf add inc fs push out movsb stos mov and adc mov mov push test xor (bad) cs cmp lock das into mov or inc fstpl xor add mov inc js mov rolb jne fstl jmp cmp movsl adc (bad) ljmp add mov (bad) push lret xor sub mov push xchg xchg leave mov dec dec lret repnz sub leave add into lcall rorb loope ds push pop ret sub addb mov daa xor jmp or push sub cld jnp and pop orb mov cmp mov ja dec fs mov repz xchg repz dec fcoml xor scas int mov ret pushf cmp mov mov leave out jl push lock sti leave icebp cmp aam daa or lock push clc loopne lret fcompl les lock out push stc data16 ljmp xchg sbb xor movl out mov mov sub mov pushf bound jae lods fnstsw pop add out out adcl sub adc xchg mov notb dec leave or add dec divl mov scas (bad) dec (bad) mov fist (bad) xchg dec mov in xchg adc xchg jae lods stc sub xor sti mov mov mov outsl dec call test add fmull sub jmp cmp xor inc add enter ljmp add popf and or pop into inc dec mov fidiv out ret cmpsb mov iret scas sub fs dec scas loop test bnd adc mov add test outsb sub test pushl and je sbb (bad) fs mov cmp add jl mov fistpll leave rcl cltd adc insb xor mov push add pop ss push jg pop fldt rcr sub enter xor or sub sub daa xchg lretw add sub test or add or rcll pop pop cs shll ja mov bound xchg push out adcl jno push aas rcl call lcall and jle xor dec daa cmc cmp jp movsb pop ss nop jle add add add cld inc aas sub add pop sub sub clc add mov push dec xchg ret ljmp addr16 jbe notl jb jmp push push fbld pop roll xor add pushl sub mov sbb push rorl sbb ficoml aad ja mov fcoms or ret or aas mov cs xor loope pop or leave push add push ds orb mov not xor sbb jge and push push mov jg int add pop rcrl mov mov arpl adc mov push add add shl push xor add aas lods mov jle push xor jecxz add aam addr16 mov jg push mov addl cmpsb repnz sub fwait push push rcrl fsubr add loop mov ljmp push jns dec push xchg xchg out mov int xchg adcl ja sarl movsl jmp and mov dec dec push mov add mov cwtl test dec or xchg mov pop fdiv pop (bad) push popf adc mov fist xor xchg add mov jns nop repnz clc fstl pushl mov mov rol or mov dec out pop shr insb notl das sub jno in in inc (bad) mov jg hlt loope lock repnz sub scas clc shl iret jp ss dec mov sbb (bad) sub jo dec out or add push cld aam adc not repz xchg xor dec ja push pop outsb int cmpsl sahf gs jne sti sub xchg (bad) or flds mov (bad) ds repz shll imulb cld sbb and (bad) mov xchg gs movsl (bad) mov out mov (bad) pop or ffree cli mov test lcall mov rclb lret sub int3 sbb and stos test fidiv sub dec test push popf jns sar cmp and les jecxz jno dec int3 inc daa (bad) je adc cmp inc shrl sub lock fnstenv mov cmp jg inc rol ljmp cmpsl inc or lock jp pop imul dec (bad) stos jno (bad) fs jl push dec mov mov or fimul inc push push xchg movsb sub or cs stc xlat sub sbb inc and push mov lret pop into jb sub dec sbb lret dec push out push xchg test xlat xor in andl mov (bad) sub jp sbb pop cmpsl vpsubd add movb cli bound add xchg das xor lock shrl dec sbb rolb sub rol add xor mov lods jns andl addr16 fildll push xor jb fyl2xp1 xchg (bad) or add mov or pop mov cld into sub enter fidivrl pop hlt test das ret std xchg ds push mov (bad) or movsl xchg fs xor cld ret and xor or mov popf xchg jne sub popa (bad) lret and pop mov xor dec sbb and or aaa dec popa sti or aaa xor add xor inc in cltd jmp add pop push mov sar xor cwtl shr jecxz popa mov jne dec and ret jnp data16 (bad) sub jno enter (bad) (bad) cltd pop (bad) sub mov clc jno inc stc add add stos sub and int loope sub sbb push adc cwtl ficomp int das sub inc xorb cmp (bad) ret (bad) lret sbb (bad) loop out sub pop jne pop popf pop sbb fmull jnp out inc inc and cmp shl out jp (bad) jmp mov mov jg pop push into sub arpl (bad) int3 lods sub leave cli cs mov ja or xchg pop and pop mov repnz cmp icebp add (bad) xor ror pop sub cli jmp pop repz cmp inc mov in scas mov scas or stc sbb xor sti push mov dec dec pop stos inc in roll iret or jnp sub dec jmp aaa dec mov mov clc adc mov out push push sub cmp sub les mov fbstp pop btc outsb and push adc mov icebp out mov pop in xchg sahf das hlt push aad sbb inc lock insb neg xlat add fnstcw lret mov push or jbe out iret inc xchg xchg popf jnp mov mov adc mov mov jge jne or jne lods sub mov jge ljmp and xor fistpll add mov dec dec pop in mov push jno pusha xor add xchg in mov pop sub sub jno cmp repnz mov (bad) notb cwtl mov adc loope int and icebp mov daa xlat xor mov scas popa outsl sarb nop cmc ret xchg push xor xor out and test dec cld clc repnz sbb icebp out mov call rolb pop (bad) mov add pop adc fs jecxz and inc repnz xor mov or sub mov cmc sarl dec aad or les sub add mov mov adc and mov call popf push push xchg or pop xor jne jns,pn pop jg mov lds scas push jnp das aad fwait out add jb je sbb imull pop xchg sahf lahf mov mov mov stc aam cmp ja jno jp jmp jle pop jl dec jne (bad) movsl jl in fldcw add or adc outsb shll aas daa outsb add aas fsubs (bad) icebp sub pop inc cmpsb adc jge mov stc mov fcoms xchg mov mov push lea popf jo pop pushf (bad) sti not jae mov inc inc mov (bad) aas imul xor mov into dec sub outsb leave jg divb jae js sub and sub and or js lds jl jmp push mov cltd iret mov fstpl and in xor mov mov dec and dec lret negl mov pop jecxz stos mov xlat sub out dec scas cmp out adc mov xor not dec jecxz das pop cwtl lret add in sbbl dec das mov popf push or add sub insb das mov xchg xor out test and sub cltd lds sub push push into in sub mov xchg (bad) outsb add and fild es repnz mov shrb mov mov jns pop mov icebp mov scas adc jge add sbbb rolb arpl repz out cwtl jnp push orb or pop lods arpl in push in mov xorl cmp mov loope mov hlt xchg add aam and xor outsb mov dec ret mov jmp add mov and mov xchg ljmp mov loop fstpt xor stos sub ficoml pusha addr16 or std mov lret push and mov fcmovbe dec roll mov shll cli sub xchg in das xlat sbb negl sbb (bad) popf pop adc jmp lods push and arpl or mov push dec out cmp out sub gs mov jnp test xchg inc movsb or (bad) jne mov mov dec ljmp xchg out or out xor push xor mov inc dec ficompl jne (bad) sahf fldenv sub mov pop mov cmc outsb dec pop or mov add clc and or mov mov clc mov dec cs in sub inc and scas cmp jb arpl in das adc cmc add mov mov mov lret push movsb push fsubrl (bad) fnstcw (bad) push or cmc lret cmpsl cld mov cmp dec cwtl or ds jp dec stc push mov test lret add cmp mov outsb and push or clc std int3 or fwait push dec fs push imul leave ret jge push imul xchg stc push imul lcall cld negl jo mov jmp mov push nop mov and add xlat in cmpsb sti sub fbstp sub or push jle mov lahf out or adc lds ljmp sbb sub sti pop xchg repz xor and decb sbb or xor xor push pop or mov sub bnd or xor push repz idiv mov xchg adc stos add out mov shll sub das movsb imul fsubs icebp mov push int3 pop ljmp loope outsl enter xor mov or dec (bad) test leave fs imul dec add sub ret cmpsl fs test pop cltd and lret fist das add pop insb jle mov dec orb stc ret cli mov ret ds jae ds inc nop in cmp leave into push inc fbstp pop ja pop dec or and cmc test daa sahf pop cltd push adc xchg mov add mov fldenv in push sub xchg pop lods xor sub mov mov fldcw icebp or imulb jg daa and pop jg (bad) cmpsl jno xchg incb lret add cmp call jl add out jb call add leave out xchg push pop jg fwait pop adc and pop mov mov xchg test jne cs mov jns mov (bad) call cmpsb adc add stc repnz xor mov xchg sbb ret outsb ret outsb adc add rcr add out bound and xor out xchg sbb and rorl leave fnstcw mov inc in lcall test out sub into push mov ljmp movzbl mov xor lret mov or test lds sbb pushf loopw sub and mov mov pushf (bad) icebp fadds sub pop inc scas dec pop out pop cld add jmp or sti subl cmpsl fdivr popf gs and xchg push addr16 mov test fdivrs adc mov dec out ret (bad) jo and dec push mov adc inc je and mov (bad) sub out (bad) cmp data16 repnz mov xchg (bad) rol dec mov xlat mov dec pop jne scas out das out jno dec imul cltd sti (bad) cmp ret (bad) and bound (bad) out fs (bad) and push lods pop imul scas mov mov ret sub and jg cwtl or jnp cmp lret aas daa stos movsb dec pusha movsl pop mov inc (bad) mov mov loop xchg adc jecxz sub sub mov fmuls shrl imul adc fisttpll add daa xchg jbe out mov test push sub lods js ret in nop mov cmp sar popf mov aaa movsb loope inc sbb mov xor sub or mov das stos jb sbb int jle push mov push push push push imul fcompl jl add adc cmpsb push jl add cli mov mov stos enter mov ficoml ljmp push xor push inc rorb aas push dec sub xchg out test dec and dec xor fidiv icebp (bad) fstpl mov pop cmpsl mov push sub inc sub daa xchg push rcrb divl loop call test and dec ret pop leave repz pop adc push das sub mov mov mov xchg mov popf xchg das push pop xchg out aaa mov pop scas fstp outsl jmp xor or ffreep add popf rcrl ret add ret push jg mov sti stos cwtl bound scas pop fidivr rclb fdivs bts inc push outsl in sub adc pop mov notl add or xchg cli dec jl cmp or xchg fildl movsl push cmp sub or out push jl sub sub int3 xchg mov ret repnz imul cli xlat mov sbb es icebp and clc out rorb xchg (bad) cmp and cwtl inc (bad) dec and fwait adc xor xchg (bad) pop add mov cmc daa pop sbb jae add and dec fsubrs das cltd out fdivrl xor mov sub xchg notb push xor jmp gs adc sub mov jnp pusha xor xor jns and push ror cmp sarb push adc movsb jl adc sub cmp jp inc mov loop sbb mov xchg xchg mov in sub xor arpl mov mov iret arpl xchg sub inc mov xchg mov xor xor jl fsubs mov je cmp xlat fwait test decb and (bad) push test movsl and mov or xlat dec lcall mov scas push push push mov mov cltd pop mov lahf xor incb call ja mov inc jb mov stc sub or ja pop xlat cmp movsb mov xor cwtl dec and ror inc mov fist mov lds stos mov stos lea leave lret cmp repz pushf sub inc xchg pop mov pop in in xchg mov mov xlat push add mov cmp call movsl adc lds sarl xor jge dec and popf in je (bad) sub push arpl decl loopne (bad) and add xchg jae sub jb (bad) in rorb adc push or or inc mov fdivs loope mov dec fisubrl repz scas jge mov jne cmp out push fcmove push sbb movsl jg dec push mov out outsl repnz daa clc xor ret stos lret sub ljmp in xchg mov mov lcall scas inc and push ret lods std adc mov mov inc sub in andl jg xor idivb ljmp aaa pusha or and call imul pop jmp loope test jnp cmp pushl repnz mov sarl jmp jge (bad) xor or xchg imul cmp xor out in pop (bad) int3 ja call mov aam les ret pop ljmp ret jle mov (bad) lds push sahf in or jo imul jne ret cmc in daa fdivrl cld es mov addb cmp ret xchg (bad) mov add sbb fsubr jmp xor out lods fisub aad loopne iret clc stos mov xlat inc jb push add das (bad) les mov add (bad) jmp mulb jmp mulb les in aas cmp jl cmp push in cmc scas imul negl mov (bad) out mov daa (bad) jnp sub gs (bad) cmp jns ret mov sbb in pushf mov mov or icebp inc (bad) out mov pop lea add or stc movsl scas xor fbstp out jmp out pop loop call mov rorb or push inc pop mov aas sub scas dec cltd add call sub into test mov jne sbb neg loop add stos (bad) idiv fstl inc call hlt out and pop mov mov sbb ljmp fs mov push inc lahf daa cmc adc aad (bad) popf adc daa out inc decl adc cmp dec xor mov fs mov pop mov lods xchg sub jmp stos and mov mov rcl imul mov jno pusha mov xor das and push pushf jmp xorl inc ja test ja aas daa fstpl push shrl inc pop sub imul rclb or rcl jle negb popf dec lds mov xor ljmp xlat ror inc mov scas jb push pop mov jg (bad) dec mull mov dec inc popf or ja mov (bad) pop subb movsb inc test aad adc (bad) jp inc adc (bad) test aam roll cmc sub and and xor dec mov sar pop leave xor inc repnz add (bad) sahf call sbb mov stos dec loop leave sbb das and mov shl cmpb and jmp mov leave fstl push add jo mov mov mov jae,pt nop xlat or pop and sub mov push pushf fistpll mov das sbb mov adc jae or inc xlat js pop int jg stc xor add ja add and mov aas out dec mov dec push lcall push ljmp add call push int3 inc sub rcrl push and fadd xchg pop push jl dec mov xor mov push (bad) sub push pop cmp enter cmpb jg mov jbe sub call pop out jg mov mov and clc jp push loopne push adc or jle sub mov lcallw xor fiaddl test sbb mov aad leave xor and bound or push xchg mov out stos xchg negl popa add jae lahf push ret mov lds push pop sub lret out mov add das clc call ljmp je fdivrl dec sub mov or mov add (bad) sub add (bad) jecxz cli pop jbe push nop test pop gs test add mov les mov cmp mov adc xor mov add rorb stos mov sub push xchg inc add cmp xor movsl sbb push mov (bad) mov dec lret and push xor mov repnz jnp or sub loopne stc adc add fs adc mov loope jle sbb int3 incb loope icebp jg mov lret outsb bound test push sub clc mov jp outsl clc aas sub stc in call jp ljmp sub and push daa pop add leave (bad) hlt or or lret dec sti xor test ret add or dec pushl mov pop ljmp imul mov jns mov into scas mov adc mov call mov jns lret fstl adc or sub xor pushf and push add das pop mov cli pop or xor pushl scas and sub mov xchg cwtl imul dec pushf mov pop fisubr incl es push or jne (bad) out stos call xchg inc dec daa ret sbb mov sub icebp mov icebp je pop daa xchg lret adc mov jo in pop ret inc push sub ret mov cmp ret jns jle jb fldcw je xor xor (bad) dec lods add pop pushl cmpb sti stos fstpl outsb inc dec dec jl int jle repz mov not inc pop mov and dec dec inc xor mov xchg (bad) mov stc insl inc or int3 leave js cs add xchg xor aam jb (bad) out pop movsb jge mov push jmp ja sti sub mov repz dec sti and and push mov add pop loopne outsl pop outsl shlb loope sub daa out jne xchg cmpsl pop insb sub test mov xor xor outsb (bad) into jnp push imul sub ds leave pop and or dec sarl clc pop pushf jno test test add sub mov pop xor (bad) xlat push inc push and mov out dec and pop subb mov (bad) (bad) out pop sbb jge (bad) sub xlat movsb xchg jne adc jo cmpsl mov inc loop into sti bound ret and mov sbb sub xchg test das rcl jmp jl push ljmp and rcl mov inc inc push jmp repz lret dec xchg sar rorb (bad) jbe mov rol out pop dec test stos je mov sub pop outsl push daa std mov and out inc mov hlt dec or sub add (bad) xor rolb scas in xor sub repz xor and mov mov pop icebp adcl enter leave and jmp jmp mov cs mov sub (bad) push into movsb push sub mov xlat cmpsl xlat gs out xor jno inc imul scas rorl das xor sbb jle inc jmp test fs push data16 push lahf or adc pop jge sbb in xor xchg out lret adc bound scas sub push add sbb lret dec push and scas clc call clc insl ret (bad) pop xchg or movsl fsubp adc mov out pop cld in push inc cld and scas test imull call ret sub ljmp in cs push xchg in or jle in mov dec jp clc add cli es adc mov jb sbb ret fcomps (bad) je dec and pop pop sub xchg mov sub pop inc mov arpl inc mov add mov push push jne add xor aas sub daa push adc rorb out jne fldcw scas test mov rorb sbb lret cmp stos xor mov mov sub mov fistl stos jg mov adc lret sub push ds xchg mov iret mov movsl outsl and and add out movsb push inc or icebp pop sbb jge imul outsl and sub adc test movsb xchg mov outsb lea call sub add ljmp test xor xlat mov out lret out sbb sub xchg into mov stos sub sub lds loopne movsb shrb mov out sub or ficompl sub (bad) xor repnz mov sahf xor mov and push mov shrb fidivr sbb mov mov add pop es and je jmp lret fs mov je pusha js (bad) mov fs je das out enter test in sub dec pushf into dec jmp cmp leave sbb sbb mov test mov adc sti cs sti test lods dec sahf xor in adc (bad) or xchg rol movsl inc cmpsl into aas sub movb or add movsl inc icebp in jne or ljmp incl xlat lods cwtl push lcall mov enter add mov daa jmp imul xchg jae scas adc xchg add sub leave add and dec inc add and inc dec sub aaa dec stos mov push add repz and jg jge cmp movsl sti fstps test mov leave pushf jl lret stc js mov sbbl pop xchg lods mov dec cmpb sub orl mov aad sub mov dec dec mov sbb xchg ss aad mov adcl out jbe (bad) or int3 les mov (bad) rcr jge lret or rorb jmp add lock add inc orl pop jnp mov push mov add xchg inc je or add mov inc mov sub adc mov mov mov out pop clc mov cli mov leave inc mov push daa adc les or add sub or sub or jp out dec and or sbb and pushl inc daa adc xchg sbbb imul insb adc fldt aas and xchg cmpsl leave push mov jo pop sti add ljmp out xchg cmpsl pop ret add and (bad) shl fstl pop ja add ss sbb sub mov dec mov (bad) pop and sub and xor scas jne mov sub cmp jge fucom aaa subl fxam jb ja ret push lods leave popa xor mov dec dec out pop adc testb mov jg fbstp or repz pop das add cmc adc movsbl xchg jo cwtl cmpsb popf jl push scas xor add fistp cmp ja loope js (bad) or and lahf clc or lret gs or in pop inc jg fs das push jmp pop dec sub loopne fldenv pop xor pop push push pop push inc add inc popa and orb std pop add popf push fistl and push push andb cmpsb jge jg pop loope or mov xor mov insl xor push and aam adc in push push mov push mov add xchg jbe dec push lock jnp mov xor incb or pop imul inc rcrl push mov jbe cmc pop stc out jle out pop push mov mov xchg mov adc enter xor push call mov add ss sbb nop and jae jns mov and sub fistpll inc mov lods sahf outsl (bad) or push fistp pop add jne (bad) add ret mov inc push cmpsl loopne xor pop mov jae rcrb mov jnp adc add push or dec add fistp lods sbb pop pusha pop cmp sti add aas push mov enter jnp or and sub (bad) into ds jle leave std xor sti syscall stc push and push std add and (bad) (bad) mov divl lahf jno xchg ret xchg out and sarb sub sub test mov sbb sarl pop pop lods out sbb inc daa loope xchg add ret test pop inc push enter enter and loope repz sub leave push lret in pop stc (bad) repnz stos jno test lret mov sub movsb cli je mov pop inc jb or out pushf setg jae div inc or mov adc mov push xchg dec and pop and mov fisttp idivb imulb sar mov push or xor aam arpl pop push adc mov mov imul (bad) mov out xchg mov mov (bad) and inc dec ds add cmpsl imul dec lret or cmc into add (bad) jle inc push mov outsb test mov shrb cmp pop scas jbe jnp cs (bad) jne sahf es mov xchg mov cmp push (bad) sub ds cltd mov push data16 or lods inc leave or push mov cmp dec mov sub jmp and xor lock jnp add mov lcall fistl data16 mov jbe or push mov fadds push jmp enter ret adc out cs jns les sub and push bound and repz aam adc cwtl leave daa int3 adc aas adc sbb mov (bad) loope sarb push mov pop jbe stos push in imul fnstsw leave push daa ja popf popf ljmp jno lcall out mov sub test mov mov push ret xchg ljmp test orl out add xor jl (bad) xor push mov bound (bad) insl pop adc dec out gs leave out lret ret cmp cmp movsb mov loope mov mov cs cmp sub jecxz jo ret jnp movsl aad mov sub jb add or stc push mov andb ret xchg inc mov sub and mov sub xchg out xlat cmp shrl pop mov lcallw shl mov sub popf pop imulb icebp daa xchg iret adc jb push jne fsts imul fnstsw push mov add xor cli sub sub mov repnz jmp adc or mov dec daa sub or or ret lret movsb enter mov lock xor outsl int popa mov dec cld cltd adc sub mov and sub (bad) mov and in xor cmpsl dec push mov test negb rorl jp enter lret jecxz aam test int3 fsubr sub xor sub mov dec fcmove cmp jmp repnz sub in mov fs lds ds imul sbb xchg (bad) mov pop out mov fcompl xchg jnp daa clc ficom (bad) repz into pop icebp inc fwait sbb lret in xlat (bad) push mov ds push std (bad) enter sub loope cmp outsb sub and or iret pop sub mov pop test xlat scas int jnp add push pusha ret sub mov inc jo mov add add mov mov leave data16 pop jmp mov mov pop les inc loop sarb push fs mov push aaa and add iret scas jmp stc jnp das fidivl movsb nop jmp sbb push dec mov sti out inc push out outsl xor push insb int3 scas sub (bad) xor int cwtl or into ja xchg (bad) push and cltd js shrb fist push push xor imul ret gs lret scas pop jge or arpl and pop xchg jmp dec sub push inc cli cmp enter add lods jmp sbb push iret xor in out xor sub push std addr16 movsb out and scas mov or mov dec daa (bad) mov pop sub jnp xor sbb sub add testl or cltd je and sub xor cwtl daa out andb (bad) idivb mov dec outsb out jp cld imul dec mov out add pop aas mov fbstp xlat (bad) popa add cs (bad) iret pop inc xchg dec sub and stc pushf and (bad) mov jmpw push push push push xchg and mov mov inc leave movsl jg mov or dec pop (bad) cmp add push aas adc test lock xor outsl and mov dec lock bound pop push sarb jecxz outsb out (bad) (bad) sub repnz out jb mov xor shrl dec sub jecxz call mov sbb fucomip lock push xor xchg cwtl and or pop lret aaa cmp xchg int3 sbb mov and add and xor push aas or mulb and pushf das jmp xor scas xor test and (bad) fimul mov mov pop aam call pop mov and cwtl mov xor lret jbe sti adc sbb idivb sub inc ret sahf mov out loop test fimul push jno lds sub jb into movsb cmp shll add xor jno dec repnz mov (bad) lods (bad) adc mov ljmp dec push test cmp out pop add xchg push pop mov mov or mov and inc (bad) pop mov sbb cli ja pop push xchg add mov (bad) mov loop insb jmp fist or pop out bound repz and sti pop pop inc in out mov (bad) fdivr sub fcmovu and out adc lahf xor bswap imull xlat add fistl fistl ja mov and inc jmp jo and inc or mov lret mov mov lds fisttpll xor pop stc in aas movsl addl inc xchg fnstsw fimul sub sub sub sub mov sbb sub dec cmc jo rcrl pop pop daa aam cwtl dec xor dec and push pop dec push mov aaa stos jge loope imul add xchg fdivl cmovnp push dec icebp mov mov add loopne ret jg aad inc mov push idiv push sub dec xor fsubrl pop fsincos adc std cli mov xor and mov mov roll sbb push or sti cmp add jnp jecxz sub loope ret mov fistpll leave insb (bad) imul xchg jae aas dec mov mov insb stos repz idivb mov jge push inc and sub (bad) (bad) jnp adc xor add push xor and pop or lret mov jecxz adc (bad) jmp test xlat out jo add inc xchg test sar xor imul idivl dec (bad) push sbb jne stc jno ja mov mov daa ret jns imul (bad) gs (bad) fstpt fisttpll scas sahf les and inc adc insl or add (bad) mov pop lock jmp cwtl and push pop lods cmp jnp xlat mov aad xchg mov adc add fwait imull leave movsb mov mov repnz lds pop adc out mov imul jmp scas mov ljmp mov sbb es out push fs pushf scas rcrl leave or je or push mov mov push push cmpsb dec push push ret inc pop ljmp mov into ja mov jnp mov sbb popf gs fadds outsl das movsb or push push cmp mov inc mov push (bad) mov mov shrl xchg pop xor shrb icebp xor int3 mov test dec rorb lahf push popf je lret (bad) dec mov fisttpl in test xchg bound das clc jnp lock iret or fisttp negl jmp push jl popa sub daa lock push roll pushf xor popf (bad) das adc pop dec outsb dec sti fs add test (bad) lcall lods repz iret mov stos xor jp push mulb dec shrl jecxz cmp pop add scas popf aaa das scas sub push xlat out xchg jecxz shrb ja es mov jno xor sub ljmp insb cmpsl movsb ljmp ljmp call sub jns xchg jbe or inc adc pop mov or fsubrp mov sbb lret lcall jo jno cwtl aas xor lods mov inc clc popf lret movsl (bad) and es mov imul jl pop jmp xor ret cld cmp cmp sti pop into lret jbe xchg pop jb mov push mov or in push push dec scas jge dec push ja fdiv and jl popf rclb jle sub sbb sub ljmp mov (bad) mov inc mov sub jbe lret xlat fs or xor pop imul push xchg jl push repz pop les fs clc push leave mov repz sub gs xor jecxz add and xor daa incb jne out or xor mov xor hlt pop clc push nop and movsl inc xchg andl jne jb jb push mul or push mov ds pop mov test dec stos (bad) lcall in sub test scas mov mov mov movsl fsubrp fs mov lds pop sub cs dec lods dec movsb push (bad) divb adc sub das mov mov sub jp pop out sub and or and push jbe shrl add repnz xor (bad) ss leave jb daa sub int3 js or jg loop cwtl pop sub mov mov and repz shrl stc jp push (bad) loop (bad) fsubrs ja lock push sbb cltd sbb jg out lds jmp mov push dec jne or and xor data16 aas mov into andb dec ficom pop mov sbb ja hlt and mov ja icebp inc sub mov clc fbld mov xor xor mov mov xor xchg xlat je clc repz sub sbb pop into dec lahf sbb pop pop or xchg push in and mov dec add push xchg xchg pusha call mov ret rcrb jo fdivrs add mov lcall out jl jb ret xor sar adc ljmp xchg mov dec call nop (bad) out into pop pop cld sti pop mov ds sub sub aas pop sbb add int3 dec pop mov dec (bad) sti sub add mov lods sub loop out dec mov mov gs add mov or ds repnz xlat jecxz js aaa pop ljmp lods stc mov mov inc jp mov jge add rcr xchg out adc pop out or and fbstp das sarl xlat add bound in cmpsb xor pushf (bad) add pop xchg fdivrl push xor sub push xchg mov lods push bound gs mov cmpsl mov (bad) and out outsb iret dec lret jmp mov fmuls cmp jae cmpsl jo pushf jns mov push out dec lret cltd out test out cld pop movsl jecxz adc repz mov push push sub add mov pop pop add push lret (bad) dec push push punpckhbw insl mov pop shl orl add jmp dec test or ljmp icebp mov pushf test rclb and jnp xor add dec jnp sbb or adc fdivrl neg push sub ljmp pop xchg fcoms push loope stos or jo adc fiaddl pushf jnp sub inc lret mov mov ret xchg pop pop sub lods push xchg pop sub push mov cmc xor sub push mov pop out repz and inc adc cmc add pop add lret xchg out enter push decl das mov into fist mov aad out or push jge cmp stc stc cmpl inc push cld and push dec out add push add or dec sub adc inc adc and aad pop jmp dec sbb add int or in sub ret fistpll dec (bad) imul and push push push pop pop push push mov sub (bad) mov inc sub push xchg fs fs rorb negl mov sbb mov std push shlb decb rolb adc push stos in std es pop xor movsb or aas cmpsl jb xchg inc or pop push mov jp mov push xchg in pop cli and jne insl sub pop add rclb test xor or outsb movsl mov pause adc (bad) scas bound and or outsb cmpsb shlb aam retw (bad) sub lods lods hlt and clc repnz das adc cwtl pushf test (bad) sub pop or fwait pop push stc mov std (bad) ret pushf cmc fincstp dec fstl sub sbbb aaa ret or into sbb pop shr repnz xchg stos bound sbb cs sub inc sub aaa popa sub mov xlat adc pop or mov test jb add inc xor stos fldcw sti ror sub mov xorb les add xchg ds sar sbb sti mov lahf add in cltd mov mov das lods adc mov mov adc inc mov repnz aas or xor push mov cmpsl les push enter aam add jl fst and repz or xchg cwtl loope popf int3 mov mov icebp add fsubrs or pop sub mov scas aad xchg mov mov fidivl aaa lods adc loop leave dec in adc xchg cli shrb xchg lret and repz pop fcomip lcall test imul push jecxz mov lret mov lds jmp movsl insl sub jae cli in fisubl dec loopne inc dec mov shll icebp ds out lds mov pop add gs mov or mov cld shl ljmp adc and adc jmp xchg ljmp shll dec pop xor add daa sahf dec pop lret leave loope (bad) cs cs jae sub sub mov jmp mov xchg fisubr in or aad test das into out das aad add pop dec outsl mov clc jl (bad) mov insb jmp or cmp fisttpll or ret push add lcall dec cmp and imul enter push mov mov jns cs add cmp cmp push and loop xchg in loope iret ja enter add push fs sub adc test fstps dec sbb jno sub sub test add push test lods mov cmp ret sub push mov xlat insb jns add fcmovne adc (bad) in inc leave lcall sub mov push in jb das fildl pop xor sub (bad) sub add (bad) mov push aam pop xor out bound and or dec clc lods mov cmc push aas cld push xor and fcoms cmp dec ret mov add mov cmc mov cmc loope and dec fistpll stos repz adc and sub mov add pop xor pop add mov dec loop pushf mov add cwtl push inc (bad) das pop xchg popf loope (bad) ror and repnz or inc pop idivl jae xor and mov cmp jecxz xchg sbb out jnp movsb es insl fildl scas repnz (bad) and and jmp add call jo divb scas pushf jmp push pop add mov sub into sti subl xchg mov xchg nop mov inc xchg fbld mov jg into scas sub sub or push out dec stos inc lret and sbb jg jns (bad) or test pop mov sub and out (bad) mov (bad) pop pop (bad) sub pop jmp xchg xchg sub cltd pop mov pop sbb sarb mov dec add or push xlat and aas mov mov and call mov loope scas and lahf sbb lahf (bad) push loop sub rcrl jae stos ret (bad) dec mov (bad) jbe cmpsl push add sub cwtl pop lea cs mov dec and mov (bad) sub aas xchg push fist or dec jle xchg aaa repnz jp repnz lret movsb cld jno inc inc test test aaa jecxz pop mov movsl cs push jl push or daa and sbb sub fnstcw xchg mov cltd xchg mov ja pop ficom or jg cld sub ficoml sub decl loop jne call cmc (bad) repz (bad) cwtl dec sti mov add mov negl rclb out dec hlt jecxz xchg adc jne cmpsb leave mov dec out sti mov pop test mov xor add clc daa cld xchg pop out addr16 lock and nop aaa add and mov clc push mov xchg ljmp aam jecxz mov pop sbbb stos daa mov ja or fbstp add xor test (bad) or faddl leave mov stos push push jbe xchg jb sahf decl inc call jg jbe gs and xchg dec cwtl stc ljmp xchg loope push xchg mov and js test cmp ret pop pop cmpsl pop xchg leave ja js sub (bad) out sub add popf xlat adc ret cmp sub inc lret mov stos push rclb scas test adc arpl das add (bad) lret daa divl xchg mov pop xchg dec popf cld adc xor fwait mov sbb mov xor bound rcrl test pop or out fldenv (bad) xchg jnp in mov and lock mov imul and mov rcl repz dec test mov fnstenv test std mov adc mov notb iret dec sub dec add (bad) icebp cmp aas and pop test mov outsb divb mov pop stc mov lock iret inc mov popf or ret mov inc push mov push mov pop ljmp cmp iret dec inc sub jbe sub flds fs in push loope sub xor cld add aaa daa sub push and loope push adc rorl and push push cmpsb cld pop xchg loopne lods ljmp push pop xor fwait and movsb pop mov sahf shr mov pop or mov pop and sub dec mov lods (bad) mov pop xchg mov inc outsb sub sub pop bnd adc add sub cmpsl mov mov jmp (bad) scas lret mov addr16 rcll and xchg stc pop data16 xor scas iret dec inc leave add xlat xor lods cmp or cli jecxz pop mov sub mov push movl xchg or xor sbb lret xor lods mov sahf in jl pusha add popa push inc add or scas mov fmuls add stos imull mov fnstcw cmpsl dec dec xor (bad) aad add call sub out std sbb lds scas jbe ljmp data16 adc pop xor or lret cmp jbe xor sarb cwtl push or mov lahf (bad) lret imul or pushf mov and test rorl push mov in add or int3 scas dec loope xor push shr das sbb or insb lods mov or aas ja fucomi sub cwtl scas inc xchg das ss icebp jg mov stc (bad) iret scas cmpsl inc pop pushl lds stos xor loop push sub call inc add sti aam mov jne adc mov pop fs mov out lret repz repz jg adc sub idivb sub or mov xor xchg jne xchg lret xor or call mov xchg sub sub pop mov adc mov jle jnp decl add test popa pop ret testl jb cmc lds xchg jecxz sub cmp jle rclb jbe add add sbb in mov xchg or outsl xlat lods push xchg daa sub iret pop xchg mov lea or and outsl lds and lahf jbe and mov cmc in (bad) (bad) in push jecxz pop das enter sub pop test xchg sub and (bad) cmp fsubrs xchg mov mov mov push pop push je stos out add xchg movsl sub or or mov add cwtl xchg (bad) jbe ds test dec out sti jb out lcall scas pop cltd add sub std mov pop sub cmpsl add das sbb cmp jle ljmp bound clc and add xchg xchg std adc xchg inc nop int3 dec push or clc jp adc fs lds lret cmp daa mov rorb sub or mov mov mov xor push cli sub enter cmp sub push pop add mov and lcall add inc mov jge (bad) les and jbe mov mov daa add lds cmp aaa adc mov mov imul pop add sub mov jg xlat mov sub mov lds push sbb cltd mov add mov aaa mov jmp mov lock pop icebp rclb xor lock sahf push fsts sub and lahf jbe notl ss movsl sub sbbb and test add cs xlat xor mulb jmp aas and aaa mov pushf aad dec adc enter outsb icebp push sahf (bad) jns or xchg insl sbb push mov in lret (bad) mov inc fcomp add data16 repnz rolb cmp jo pop pop cld shrl xchg jmp mov add fs mov xchg and pop out cmp xchg (bad) and lods aas test ljmp jne repnz (bad) jg ljmp push dec loop sub insb jmp out push jno push mov imul push imul xor xor and add mov cmp addr16 cs or cmc pop cs je daa mov add leave mov xor movzbl leave and xchg roll shrb cmp dec popf fldl xchg mov ljmp pop lahf inc push gs ficomp cmc loopne shlb aam add pop xor mov push dec imulb fldl enter test insl movb imul add and dec aas in pop popa ljmp ffree sub cli and daa sti in xchg pop enter popf adc clc out xchg (bad) (bad) push pop fiadd aaa insb fisubrl daa add nop dec push pop fs pop pop bnd test lds cli cli stc jmp jecxz dec lock jmp xchg scas jge sub inc and pushf xchg jge cld jo loope pop pop mov sub (bad) mov pop sti int3 mov push ljmp lods (bad) adc lret lea inc rcrl ret xlat jns dec dec ret test dec sbb fmul adc mov sub xor mov inc jo in sub int loope sub imul mov or mov cld jno lock add repnz adc adc pusha test cltd pop imul xchg loop add jecxz dec mov stos lret ljmp pop (bad) xor dec bound out lcall ffree xchg inc cs and loop mov and out inc mov jecxz data16 lret cmp loop mov aas or push jnp dec (bad) les and bound negl (bad) ror add sub loope fiaddl lahf outsb into pop ret add repnz (bad) testb fldl xchg jge push ret rolb icebp int cs cmpl mov mov pop add and mov pop fsub inc or and ret ja xchg stc cmc pop push sub pop loop sarl (bad) gs mov (bad) iret and xchg (bad) jbe xor xor roll cmpsl movsl repz mov out out xor (bad) cmp loope subl cmc xor scas push inc dec jmp add push lods roll (bad) fdivrs lahf push xchg pop inc fsubl xor add adc xchg mov out fadds pop inc mov push jno and addr16 std dec mov outsb pop mov xchg flds or shll sbb mov jbe ret push jmp fcoms adc push test and sub mov inc xchg jge jbe jno lods push inc mov iret out mov sahf jo mov jmp and lret fisubrl dec divb (bad) jge or xlat mov mov hlt mov dec cmc test (bad) pushl mov or push scas mull xchg mov sub and lods loopne mov mov daa xor mov push repnz mov sub xor mov and xchg (bad) xor mov in push sti adc int3 repnz or push push jbe in jmp cmp lret sub xchg pop and mov (bad) repz pop or sub mov cltd xor xchg (bad) pop test push je add mov mov rcrb fildl pop mov mov sbb scas pushf lock sub jl (bad) adc mov daa jl push or nop loop stc inc jmp testb cmpsl jecxz jno dec repz xor push imul daa call push je add fnop mov add jno xchg mov pusha bnd mov adc or sti dec cli dec daa pop lret imul sbb push or mov jns push dec pop jl push add das lods inc sarl fs sub ja add sub xorb movzbl push mov adc mov ret std sub push leave daa jnp and adc sub out fstps imul leave and mov clc int3 cmpsl add mov mov and inc movsl xlat mov orl sub (bad) je icebp push xchg adc jg push out popf push jae and xor mov add push (bad) jmp out leave sub xchg addb lahf push jo mov data16 pop jnp push adc mov sub popa adc inc insb xchg mov mov movsl int mov add nop das or jl ret pop adc mov mov enter and mov add adc inc mov ret add sub add and and mov add (bad) push fnstcw sub xchg add and and test (bad) mov movsl shr mov (bad) jno mov addr16 dec mov into in dec cmc pop sub sub insb js mov out xor call xlat fidivl (bad) das fsubs lahf push adc lds fisubrl xchg (bad) mov push shl xchg test rcl ja jnp add mov rorb sbb lods shrl xchg pop out dec cld cmp fmull stc xor mov mov stc xchg push adc stos stos mulb inc daa test add xor mov pop (bad) ds adc sub xor xchg and mov notb test mov xlat mov xchg scas xor ret sub xchg orl jle out lcall loopne clc std popf jg mov sub les stos mov fldenv add xor jg imul dec daa (bad) mov or std dec push pop mov out idivl add ret push xor ljmp push sub dec shrl xor push ficom adc shll xor idivb mov xchg dec mov sub dec leave ljmp pop mov fldl and stos in into daa push gs add repz mov rorl jno test sarl repz cld push (bad) jnp mov ftst add arpl call ret lret rclb adc sub sub cwtl (bad) mov adc lret call mov sbb cli sub lret inc push or (bad) jnp out xor (bad) mov inc mov cmp mov or outsb lea clc out dec les add xlat and add popf js dec (bad) jne test dec cmpsb mov or mov xor ja inc pop into call add outsb (bad) cltd out pop (bad) (bad) mov rclb testl add push pop cs movsl mov or je jmp jle ljmp dec sar cmp int lret lods jo pop add pop cmc ljmp stos (bad) adc sub out push mov jne jae movsl nop sahf lret (bad) pushf out lret and lret mov pop mov jbe jmp push or xor clc hlt xchg imull push inc mov cmc icebp cmp ds inc rorb mov adc add mov push xor xchg inc jb data16 xchg inc push (bad) sub push clc xchg jmp (bad) add mov out and or fimul pop push mov mov mov cmpsb sub ds outsb loop sbb fstpt orl adc ljmp (bad) lahf out push ficomp repz out int3 mov jns xchg dec or std pop lret or or xor pop int3 decb mov ljmp and out add insb dec stos xor and movsb outsb es push dec cltd xor out mov rol jo jae imul lds or and and repnz sub mov pop test sub int das clc mov dec mov loopne iret inc pop call ljmp adc sub mov inc call ret and out (bad) or dec sub cmp bound inc xorb test insl or ljmp mov daa mov and sub mov fdivrp jmp rorb inc lock xor sbb cltd aaa mov fistl leave sub xor fnsave pushf jge dec inc (bad) lret or push or clc daa mov jle pop leave pop cmp shlb sub push dec (bad) arpl or dec pop jg cmp rorl sub (bad) call sbb decb jge scas xlat pop shll jle xchg and sti popa sti call stos sub movsb jb push push xor lret dec adc jbe jbe in xor ja and outsb mov and mov dec daa inc inc or test push adc xlat xchg leave int jg dec stc mov ds stos lret (bad) js imul mov jle bound xlat fisttp (bad) jne jecxz popa mov jg dec xorl xor xor mov xor jnp sbb or dec add pop jne aas and (bad) jns imul jns cmpl lret push adc repnz fnstcw hlt gs jbe cltd inc addr16 icebp std push add lods lcall sahf mov xor sub sub mov dec pop jno xor push bound mov xlat test ljmp push outsb mulb push xchg fs cmp test out adc (bad) std cltd cmp xchg xchg lods dec add cmp jecxz sub in pop xor out add jmp mov inc scas mov icebp mov out jnp mov mov jge fidivrl jno call ja jl or test xor (bad) push add sbb jmp add rorb aad out sbb cltd mov in or lods sti dec mov stc cwtl mov jne lahf and pop daa cs add push je xchg sbb stos xchg stos xchg fldt mov mov sti daa (bad) aaa pop call sub arpl cmp repnz mov dec (bad) (bad) scas add jp add (bad) mov cmp xor movsb cltd adc sub aas dec fmull jg addr16 push mov scas and arpl sub xor pushf inc and es inc or decb cmp dec xchg imul push xor cmp movb test data16 add repz cmp and mov inc and in mov sub (bad) cltd test in leave adc xor sub mov fincstp cs and mov xchg mov (bad) (bad) fcmovb push loop (bad) lock fs leave add call outsl leave (bad) cmp pop pop ficompl negb and inc and push xlat mov mov es xor je dec sbb mov push and daa lds cs (bad) into pop adc jo xchg call xor and xchg push dec gs ret fiaddl add mov adc (bad) rcrl and mov jmp gs push daa out mov mov lea lock mov and and sub jnp xchg jge leave scas sub sub je push jnp xchg cmp (bad) sbb push loop cld negb fdivrl out mov dec pop sub (bad) sub lret and or xor jne shlb imul popf int3 dec xchg or pop mov or leave fdivs out push dec push add insb ret stos cmpsb fldt (bad) je stos imul add xchg cmpsl call sub dec bound add sub daa sub dec jecxz pop clc inc pop mov sbb jmp xor outsl aas (bad) jmp movl sub in and push loopne popf push das jns sbb jg lods lahf stc xchg je jmp jns and xchg adc divl cmp aad (bad) (bad) ljmp dec push in mov insb pop repnz setnp mov pop ret mov repnz cltd mov js (bad) jmp outsb lret cli (bad) dec and divl mov jg jmp stos mov sub add cli (bad) jb je,pt out stc xor enter enter and repnz aaa pop sub in adc mov ret cmc xchg push mov popf adc mov pop ret mov xchg sub lods incb test mov hlt push mov sub jmp cwtl and daa repz mov ja sti cmpsb mov xor jmp xor adc out sub data16 xor lcall sti das fs fbld ret aad pop rorb js mov or mov dec stc dec movsl adcb dec push sti xor jl (bad) mov push cmp test ljmp stos cmpsb inc xchg fstl cltd das mov pop insb or xor push pusha popf sbb rcrl push out cmp notb push and repz adc aam scas mov and xor shll pop push jbe add test fcoml dec xor pop jns push mov sub sbb cmp pop gs fs rclb testl jmp push test add (bad) mov and jno cltd push xchg jl xor add jecxz pop mov xchg lret cmp clc divl mov mov inc push xor ds in xlat adc adc (bad) mov repz mov xchg push testb int3 call leave xchg lahf divl sub add int add or and stc (bad) icebp lahf les enter xor xlat dec and mov xor ja test dec aaa xor jbe mov std sbb orl sub cmp aam repnz pop hlt add fcoms jnp test jl dec add into popa (bad) mov outsb xor cs jmp and iret dec mov ror decb cld lock repz xchg push daa mov dec and adc add stos test mov repz add lret push xlat (bad) mulb and add gs sub add cli mov gs jmp inc int3 out push sahf imul cmp adc stos mov leave out jne outsl movsl xchg or and xchg addb add outsl inc jbe xor mov test mov inc sub push jmp add sbb gs xor mov and iret fcom mov (bad) adc or pop inc cmp sbb ljmp mov jo jle push (bad) mov inc jns and cmp (bad) xchg (bad) out pop push shrb inc std cmc sub sub mov or mov cld dec mov adc and stos mov mov mov push xor jbe mov test mov ret push test repnz xchg dec mov jno xchg add or movsb shl out das call mov mov out xchg jmp daa add or rcr aas push in lret add and rorl cmp (bad) bound add jns shll test dec cwtl jge ss setae cltd mov xchg inc mov clc enter jno ret test loopne inc sub cmpsl xchg dec xor xor jg xor sti sahf in mulb push movl mov mov popl movsl addr16 and nop push or jns outsl (bad) push gs orb mov je mov out mov cld icebp push mov aad call leave fwait lods mov sti dec xor pushl dec mov rep dec jecxz inc mov (bad) dec add sarb es sub sar fld cmpsb or (bad) pop push bound clc fcoml (bad) das sti sub mov sub leave ret pop push rclb (bad) mov (bad) mov adc fisttpll pusha outsl and add das cld jns scas fdivs ret inc sub and repz add in std mov push mov mov repz sbb xchg mov out pop out dec adc std and into add sub int and imul clc xor bound pop fcompl dec into cmc mov mov add fcom data16 sbb and rol int xchg push sbb rcrl lods cmp clc mov pop loopne jmp pushf sub stc jp jg mov leave add jecxz push ret int rcrb lret ret pop cltd outsl or xor movsl lock clc sbb sub ljmp jb fnstenv dec push mov aas xchg push sbb push scas (bad) fildl repnz test (bad) cs (bad) lods ds dec jge or mov inc push mov daa sub ja (bad) movsl stos lret or es xor cmp les mov fstpl les lock mov add xchg jbe leave cmp push add scas enter and jne jns push push pop add adc push fdivrs insb sub pop ja jge add mov insl or sub add mov mov popf jg sbb in or out daa sarl mov data16 les sbb test xor shrb repnz stos (bad) not pop jl push movl ds mov dec mov (bad) pushf ret and nop jle inc cmpl push push xor pop adc ds dec ljmp cli lret push mov rcrl test stos mov xor add and push push loopne ljmpw insb outsl or mov mov add add or adc xor inc and shr rolb push push mov aaa mov push xor pop mull loope inc dec mov psllw add mov mov inc inc pop movsb sbb pop xor pop add xchg ljmp xor inc adc in cs into add and aam movsb aas int3 fnstsw xchg clc leave popf (bad) cmp add xchg mov add subb fidivrl xchg pop lahf leave jne insb xchg icebp int lret jge out je push lock add into lret or ja pop dec (bad) add (bad) out jg jo xchg and call sbb or int3 add loopne push clc jp add lods jb dec (bad) pop mov mov adc xchg pop insb or pop (bad) sub pop dec inc mov ret fimul jmp imul sub idivl ret test (bad) test push fidivr in (bad) mov stos or add lahf sub jae and adc stos sarl and ret and lret repnz mov ret and push ja mov cli sub push sub out lahf xorb pop sbb stos xor jecxz pop stos xchg xlat and xlat mov daa push xchg rolb (bad) xchg es mov and fdivr (bad) repnz or mov mov fmull or cs push sub xchg mov adc fmuls call dec scas xlat call mov add or xor dec add add vpsubsw adc lods sub dec and popf jns imul notl lea fs lcall or push xchg add inc (bad) repnz push je push call lods cmp out insb sbb movsl nop das in xchg test mov das jmp out xlat pushl mov sub popf sarb and jns fcmove jne enter mov xchg jmp push faddl pop das mov pop adc lods push inc rol mov push or and (bad) mov mov xchg sub inc inc and pop aad ljmp xor (bad) stos adc xor (bad) xor jne inc ja inc add mov das in dec add or or popf (bad) xor xchg leave sub (bad) adc (bad) dec int3 cmp fisttp clc fistp icebp pushf in lret dec repz mov sub (bad) jbe bnd call adc pop add mov loopne xor xor jne add std or aaa sbb push enter test loope xor ljmp lods mov ret dec push jl push mull fdivl mov test mov sub icebp sti pop nop lret push xchg fcmovbe (bad) bound fisubr loop aas mov jl lods push sbb add into xor mov mov ret fldl jno out xchg stos cmp push push cli popf sarb and mov gs xor in sub out push test pop cli mov push scas leave xchg mov push movsb shr add jo mov cltd aad insl fs and fisttp sub lret mov pop mov movzbl or ljmp xor jns in add mov sub pushl inc into push adc mov iret push int repnz sub lcall fistpll lret or and push inc push shrb pop mov push pop je jp mov xor xchg pop pextrw add in pop mov add les js hlt adc jmp add push sub mov cld repz mov mov xchg arpl lahf sub mov clc add mov add fstps in xor dec adc lds sbb mov sahf mov sahf in (bad) sarb xor cmc dec nop popf jae adc and pop jnp scas jle adc test lahf sti imul or sub xor or insb jge subl ja mov cmp dec daa jecxz adc cmp enter leave push adc aas gs stos mov lret cltd sub stc ss clc xchg sbb mov xchg jnp cmp lock lock rcrl sbb xor lock xchg adc fdecstp dec data16 or call (bad) xor lds sti adc stos mov mov xchg push daa or fstl or cmp jp lret inc jb imul je loopne aaa test dec add fstl jmp adc sbb jle scas nop xor pop mov aad inc sbb or lds ljmp leave pop popa mov inc adc (bad) mov and scas (bad) imull rolb fildll sbb int cmp mov add push sbb and mov and sbb mov xor or and add pop mov inc outsb adc xor mov (bad) popa pop mov cmp ljmp push ds sarl cmp mov jne add aas xor and rcll sbb int3 rcrl mov dec pop loopne pop (bad) ss mov mov jmp jbe cld out das push popf xchg xor inc cli mov xchg out fldenv cmp mov mov push and popa fs or leave clc cli xchg and repnz jbe pop pop leave jbe and mov sub dec js rorb (bad) xor cmc in dec popf ret test cli mov popa lods roll pop ljmp xchg sub xchg rcl mov or cld loope hlt sub or jno mov sbb mov outsl loop dec lods sub out or mov lret lods (bad) repnz out lods cld lock jl fs mov xor lret dec inc add and sub pop test test rorb cld and adc sub ds and subb push out dec ds cs notb ret adc jmp sbb mov jbe out xor lock mov fdivrs call in sti lcall sub jge ficoml jno jb cmp aad inc fstl xchg xchg test cmp add maxps rcl sarl mov mov lods js dec iret loop (bad) div or shrb je test add ljmp dec dec inc call (bad) jmp jmp xchg les adc daa sub xlat xor pop lds aaa pop lods sub push das into (bad) cmp xor pop out cli push push mov dec mov xor sbb popa negb mov and mov jg sarl sub push aaa outsl add sub sti mov pop call (bad) stos and repz and negl ss movsl and inc out sub mov (bad) mov (bad) mov mov sbb inc mov or jp push mov pop push sub inc data16 xchg cmp add out stos (bad) sbb mov and (bad) test or add inc inc aas mov movsl (bad) push gs icebp adc or and and les stos fs int outsl icebp and mov stos (bad) test lret sti mov sub popf jg push ss les jmp cltd sahf mov negb and in iret xchg (bad) int3 orl dec xchg call cmp pop or jae mov repnz sbb dec out lds add ret neg int or or (bad) lock xchg pop fldl movsb inc and stc inc mov ror jbe (bad) (bad) jmp xor or enter scas sub adc jl ror cltd sub andl mov rcr cmp push or pop leave or ja adc mov pop jecxz sbb fwait dec test xchg rorl pop xchg xchg in es push mov lea scas xor mov sahf roll jns or cmp mov jb sub mov dec push lret daa clc jle pop int3 mov mov sti ds movl lods es lret xchg and bound jle pop dec and mov mov mov sub mov jne xchg xchg jbe cmp push rcll add push mov outsl pop dec (bad) je xchg je xchg cmp xchg fisub test insb mov lods outsl dec mov xchg mov push movsb push imul or testb loop mov fs out mov test mov jne scas add movl test sub aam sbb xor xchg and lcall add inc pop popf mov mov lret (bad) push mov daa (bad) call inc movsb xchg push cld xlat movsb and inc xchg pop ljmp rcll (bad) call and and mov sub test (bad) mov sbb or mov loope cwtl inc sub dec sarl gs mov add testb outsl imul mov xchg mov aaa pop fdiv jno jp jge jmp or aad fmulp (bad) outsb movsl pop addr16 mov add pop rol cmp inc cmp clc mov cmpl shll pushl dec mov push (bad) ss pop sub add push or and push add sub pushf faddp test stc or lret ja and dec dec js icebp out dec jmp jmp sub add jmp sbb (bad) mov fistpll (bad) add add fs (bad) xchg sub or jecxz pop std pop (bad) sub pop or xor mov lahf adc mov dec xbegin dec pop sbb pop bound push insb stc lahf add add jp inc lds sbb push (bad) test rcll and in mov xor mov out addr16 add inc imull mov add cmp and data16 mov (bad) roll (bad) mov sub and xchg out or and cld xchg xor jle ja dec stos mov subl sub lea ljmp int sub out sub fwait lds push incl pop out xchg stc inc sub mov pop dec jno jns or pop mov outsl pop mov mov pop mov (bad) aas mov xchg cmp add fildl or jo xchg adc sahf fwait push out mov (bad) flds xchg rorl sti xchg xlat pop hlt fdivl cmp ljmp sub jp test ret mov xchg push pop or (bad) fildl movsb addr16 xchg adc imull inc les or scas sub scas (bad) push xchg rorl out int3 ror nop mov or xchg jl jns outsl stc (bad) shrl out dec sbb dec pop fidivr mov xor add mov (bad) (bad) xchg loope sbb add out outsl sub mov repz sti icebp and movsl lds pusha sbb sub daa or cmpsl push xlat adc xchg cmc xor ss movsl mov out adc or (bad) cmc leave fadd mov xor fimul repz add and mov nop lahf mov cmp or pop push ret adc repnz xchg adc push pop add adc or mov push jg fidiv mov add dec xlat sahf cltd negb mov lods aas bnd test mov pop pop cltd js,pn dec cmpsl jno nop dec pop icebp mov daa xchg clc lock or shrl cmp out lret cwtl inc push xor xchg and sub lock mov dec mov insb mov idivl int fisttpll jns pop std stc sub mov lret idivb sbb mov insb into add xor pop inc mov pop iret in mov sub mov cs mov add out xor jno cmpsl push mov push icebp jnp inc daa mov scas popa jg cmpb cmp mov repnz (bad) cli movsl dec out push daa ljmp notl and mov not sub mov xchg out in nop fmull and andb cmp fimul jns sbb ljmp pop out sbb mov mov mov pop push movl jnp mov sub lret xor xchg xor and (bad) push and or aaa jmp movsb (bad) iret sub sub and fwait and loope fstpl es inc (bad) jo pop xchg in ds sub xor pushf insb imul sti les mov inc hlt jmp sar repz mov push mov mov ja xor dec jmp out or xchg sti cwtl lret or push mov xchg mov icebp int3 mov cli mov xor adc xor inc xor pop fisttpll daa or adc cmc inc sub fisub mov jnp adc les and dec xchg int3 sbb (bad) xchg lods xchg imull sub or cmp and mov sbb mov mov scas cmpsl cld and scas add jbe push xor in dec mov outsl leave (bad) cmc movsb sub aad je out mov ja jmp cmpsl ljmp xor (bad) mov fdiv (bad) subb cmp pop dec jg add js fsubr fisubl sub mov pop xor sub lods inc imul xor dec ret int xor jmp out cli test (bad) xchg leave (bad) pop mov test ljmp ret and xor xor gs hlt lods jle cld inc movsl sarb decb sarb sbb push fstl ret (bad) ss ret testl imul jl adc (bad) push mov jae sub mov inc ret inc mov out popf jae lods shrl xor iret adc fstps rcl fsts jnp je (bad) and pop pop lds stos popa add xor fmul (bad) popf cmp xor and dec pop or and jnp rol decl jno test mov (bad) mov repz into inc mov mov repz lcall mov fcomp mov das mov dec repz mov (bad) jbe ret and xlat mov cmpb sub xlat jne sti cmp push cmc notl or xor (bad) hlt ljmp jl leave xlat ror popf out adc dec mov frstor push mov stos popf adc mov cmp into push add mov xor mov adc sbb (bad) xor mov outsl sub mov cld lret sbb fs xor lret xorb rol jno xlat repnz call pop mov mov stos sub jecxz jbe push inc jg sub imul pop ja mov cli loop shlb xor or inc adc pop outsl ds mov lods mov cmp sbb cmp sub xchg cs push jl pop imull dec xor (bad) jg mov imul jmp pop pop sti add loop dec cmp cmp dec shr sbb je mov mov es loopne divl rcll mov inc jnp adc push movsl push das push scas cmp push inc gs xchg cmp pop xor jbe dec mov shr mov dec orb scas jno xor das stos sub and xor cld jns mov add dec sub call ret roll mov and dec or out dec mov aas xchg notl xorb ror inc in test add mov push cmp rcll add jge lods imul pushf (bad) (bad) es insl pop jmp jae fcomip xlat or push lcall adc daa sub jno test mov or pop addr16 cld mov lea rorl adc and repz xchg jl mov xchg mov cld jns cwtl mov dec lret sub xor cmp enter loop aad shll lods lods cld out (bad) jg inc into pop add add fdivr sub cmpsl xlat (bad) loopne fistpl leave leave mov lods adc or (bad) mov fcomip dec rolb and popf cld (bad) mov test xchg clc mov sti xor divl push mov (bad) (bad) (bad) mov stos repz inc (bad) outsb sub pop push adc cwtl push sbb mov or sub ret inc jl data16 dec or add sti push jns mov xchg nop pop and pop setnp aad daa out jge jne or sub jmp aaa dec stc out scas xchg div dec sub out leave scas aaa lahf loopne into jbe pop and sub ret sub mov arpl cli xchg ficompl mov aad jns push add push sarb push sub xchg jno or cmp mov jl or dec or sub and sub xor scas sub je mov leave mov push cmp dec popf mov int jne cltd aaa aas int3 or nop ljmp pop fnstcw sub mov enter jge push dec or bound jne and xchg mov inc idivl push pop jno dec pop das mov xor and (bad) pop stos fsubr repz lea sbb xchg imul or scas lret sahf into pop sbb add mov aaa mov mov fidivl bound and addr16 sbb stc clc (bad) lock xchg mov mov std loop gs ja stos pushf jg inc inc and xchg add popa xchg xor test dec and and jg sbb push xor out push das inc test adc ret mov mov mov cwtl loop fdivs push mov test lock pop push lret push xor and scas xor xor pop imul jge sub icebp ja adc cwtl dec xlat mov daa inc nop xchg fbstp (bad) ret cmp xor xor add daa jae and leave pop jp mov xor pop in sbb add mov popf mov adc mov jae aam stos cmp leave lahf int3 ss mov jns inc fdivrs inc adc add insb das or fldt sub mov jns cmp iret mov fist mov outsb jl push mov adc stos das divl push push push sub gs pop push xor add mov dec dec or cmp xor cld sti js cmc adc inc mov jne,pn xor daa xchg push add sub mov cmpl push pop repz jnp xor push mov lcall daa dec add jne repz daa aad jno or sub into stc adc cmp mov imul imul repnz fnsave lods fisubrl stc clc cmp cmp mov xor or xor pop or rcll out and or pop dec add loope mov repnz add cld sub jb adc mov stos mov xchg jmp cld outsb je pop mov shrb les ficomp xor dec mov pop cmpsb mov sub sub xor leave rorl jge iret jb cmp je jmp call clc fidivrl test test test negl sub lock rep xor sub cmp xchg call xchg idivb sub mov and je out mov aad and scas mov jmp push fdivs stc sub mov mov fsub or xlat mov mov add or ret out dec sub mov dec mov hlt call sub bound adc or dec jg inc mov xchg (bad) xor or add mov cmp loopne inc mov cmp out mov mov add popf inc mov sub add testl push sbb jne sub add daa ret xchg leave into aam mov jmp outsl pop mov pop int and sbb sbb inc (bad) cwtl popf cltd mov sub mov add cli and mov xor out mov sahf or je mov sub push inc shrl cmp fldenv inc out or stc add cmp (bad) mov mov or xor xchg jno adc std pop and mov aad arpl daa and pop cld movsl clc add pop testl bound pop xchg je leave mov sbb sti xchg mov cmpsl adc add mov out lret jo and sub les cli pusha cmp push jg popf xlat xchg stc dec or shr subb push mov ljmp fisttpl xor stos leave push outsl cld adc and shll jecxz fnstenv imul dec movsb nop decb mov mov sbb sub and dec cli int adc push sub pushf mov cmpsb scas and (bad) xor sub xchg fistp sub insl lock aam mov int3 inc mov mov bound push xchg nop xor pop (bad) scas enter sbb push daa sub add cltd pop jmp mov mov push icebp pop add insl sti mov jecxz or mov mov stos movsl ja fwait jg loope add or cmp and lcall aas pop mov and or cmp aas repz pop (bad) or cs xor push push pop jo mov divl xlat add cmp repnz jge out jp dec fsubr xor push pop inc lds in mov stos repz ror inc shrl loope cmp ficom sbb ds dec pop lret lods xlat test shlb sub scas loopne and ret xlat mov fistpll xchg ljmp xor xlat aam test loop mov push cli int3 push leave stos jae sub mov arpl sti xlat test adc sub pop adc mov adc pop xchg out dec je add inc dec mov (bad) cld int adc xlat xor repnz out mov push inc mov xchg mov jl scas mov inc mov aaa ret shrl xor aas mov jmp adc pop jecxz jmp sub es test scas or cmc dec sub loope mov fstpl xchg icebp rcll xchg ds pop mov xchg ljmp mov fwait xlat xor repz inc mov push (bad) mov pop push movsb stos daa push jp out out daa enter ret xor inc repz inc sub fwait push cmp adc add inc lahf dec popa dec enter mov pop or lret dec decb cmp data16 (bad) (bad) loope lods mov scas out push and imulb insb iret xor mov dec adc pop out iret lods dec ljmp stos (bad) jb ret out or popf test adc mov or jne sti mov das out je xchg pop sub fldl2t mov int3 adc pop (bad) mov ljmp cmpsb mov fcomp mov adc pop cmp sahf jp incb sub loop sub xlat int outsb (bad) out jg jns cli xchg ficomp fdivr xor or dec dec or ret inc pop ja mov xor and setg pop sub jae dec les mov push bound jns and xchg mov mov imulb dec (bad) dec jp push inc and pop mov jg inc xchg je out test out out imul and daa mov sbb (bad) cld fstl sub xor mov (bad) imul (bad) sarl cmp icebp fisub lds ja and xor cmp adc call jle,pt in and cmc xor sub fdivrl and push pushl (bad) cli fcmovb pop clc mov inc jge in sub clc lret ljmp push in push ja xchg movsl cmc int3 xchg mov outsb sbb scas scas adc pop cli cmp mov pop jnp and mov inc ja es jle or ljmp sbbb mov mov sbb cmp inc insb xchg or dec add cmp ret sub loop mov bound push xchg ret lahf (bad) push jle es inc inc pop (bad) dec or and or or mov scas cmpsl xlat inc mov xor cli les push push imul xchg mov sub sbbl lds sbb dec test mov (bad) push setp fwait mov (bad) in divl lods fisttpll imul xor (bad) pop sbb xchg sub adc fsts fidivrl cmc int lods frstpm(287 stos cmpsl lahf push mov adc mov cmp adc cmp jecxz and js cmp insl add xlat add aam jmp loope sub sarb mov ret or xor push mov mov xchg add mov inc out pusha push cmp sbb mov mov sub mov adc loop mov jb mov xor negb iret das icebp cmc mov pop cltd mov add push adc sbb add dec add pop mov out push lret inc repz jmp or inc mov xor mov pop mov cmc or into iret repnz push sub popf lds add movsb and sub or mov cmp (bad) jns mov scas mov sub push add out pop jle leave (bad) je fstpt pop lret popa into shrb or cs scas je mov add adc (bad) int3 call fstpl adc out fs and jmp sub sbb jne scas mov jns mov pusha add add test add iret xor inc daa push movsl fs stos xlat mov hlt and aad ss and pop mov mov jle push push inc decl xor pop xor std fdecstp imul in pop pop or mov in in repnz mov push mov lret cmp pop jecxz jge xor sub mov mov mov dec ja out ret loopne add xor (bad) scas arpl xor sti mov mov lock in or sti int3 (bad) pop iret mov and icebp xor mov (bad) ja test daa lahf xor xor sub sar xor (bad) jae xor scas cwtl inc lret mov and sbb mov pop ret out jmp icebp mov jmp mov lret (bad) fbld xchg loopne ret dec mov push je add jbe mov xchg pop (bad) mov icebp jnp rcl inc ds xor sti les sub popf insb popf dec iret pop (bad) mov decb mov ja pop dec test or movsb ljmp in daa jo pushf mov cmpsb sub loopne fiadd repz fcompl dec inc dec lahf inc cmpsb mov push pushl jle call mov and xchg lea mov into inc xor mov mov push (bad) loop lcall lret xor sub xchg push dec test test sti push add out push fcoms mov jl flds sub addr16 jg xchg jg xor cltd or into add (bad) scas lcall (bad) lods pop std mov mov inc je les loop lahf push (bad) cwtl xor pushf cmp cmp xchg mov push mov idiv cmp pop mov icebp insb out lcall inc orl dec insl repnz stc xchg rorb pop sbb (bad) pop adc sti mov pop mov inc (bad) (bad) call dec mov hlt xor mov mov sbb mov xlat out fucomip and pop add xor mov push cltd ffreep outsb lods sub (bad) mov or jp les pop cmp cmp negb mov icebp cmp rol or sbb ret push mov ja loope sbb jbe inc xor push insb lret pop sar dec lret pop lock pop mov cmpsl movb sub add xor bnd rol add repz xor sub pop ja mov repz adc add scas add and stos and xchg loop pop jp fs lret xchg into stos xor vpxor cmp les cmp jns imul imul dec mov in cltd loope shll lcall cmc or enter jno (bad) leave mov pop push sub sub mov cld push pop and leave (bad) push push shrl out add mov cli add fildll movsl sub push cs pusha push adc loop mov pop (bad) adc int add movsb mov out jnp fwait pop sub bound ja push adc negb pop push mov pusha mov add push cs mov rorl jge insb sbb pop scas sub leave jmp aad add pop xchg inc add and xchg xor in and jp xchg shrl inc fldcw push cmp pop insb jp sarl cwtl scas or xchg ret das sar sbb push cld aam mov xchg icebp dec sbb gs das clc das in in sbb hlt push imul mov iret insb dec lea push pop jle in xchg movsl xchg loope push (bad) out mov add xchg sbb sbb ja insl dec fbstp cli mov xor ljmp mov inc repnz icebp das out jne sbb imul or outsb jnp pop aaa mov pop aad mov add xchg jg aas mov shl vmovddup sbb push and mov js xchg adc adc in das sar call test xchg sub add scas fst std add aas cld sahf xlat pushf gs dec sub cmp call mov jl das pop scas and inc sub inc (bad) (bad) cmp mov stos adc jp and push lahf inc arpl mov dec outsl push add push mov (bad) adc xchg xor jo sbb mov loope sub out jbe sti pop jmp add push lds enter sbb xchg push sbb ds sub sub out rorl sub add pushf mov in and xor repz stos aad or test xor adc and fneni(8087 and jbe push das inc xchg pusha push test daa pop outsb mov xchg inc sub and popf ljmp notl ror dec xor jp mov pop xlat fcomps mov insl or popl and ret adcl inc movsl adcb out pop jp test into movsb mov push mov sbb icebp loop int outsb (bad) jp (bad) push and dec jmp das mov xchg xlat inc pop fisubrl ja enter in sub push or inc test push or sbb repnz fs jg out or jne adc jnp in mov inc ret xchg or xor les jle lods cld movsl mov lahf lock add out imul push int inc pop lret sahf cmp (bad) mov push enter or std xchg pushf movsl xor push pop dec and mov (bad) and mov adc test mov adc sbb dec sub mov ret pop add mov sub fs movsb cs popf outsl insb out (bad) pop push inc sub pop roll mov push and scas outsb cmp sbb orb add lahf dec int jecxz inc es data16 mov fs jmp (bad) or add out jle icebp lods scas xchg out mov out rcrb push dec into leave pop icebp pop jae pop ret scas lret gs dec adc in or lods flds push cmp insl cmpsb jnp int3 pop lret lret repnz movsl sub cs and in mov pop lret call cld xchg out push dec mov mov and cmp pusha mov std ds (bad) ja rolb adc subb push jns jle dec ficom rolb sub adc cwtl sbbb fisubr stos cmc xor sbb jecxz insb pop mov shrb and jno or sarl out sbb jge add lock jmp sti sub pop jo pop pop icebp mov jae stos xor sub sarb shl dec mov jbe cli add int sub test sbb jecxz sub jmp lods jmp stos mov mov repz daa pop add mov mov mov pop jp xchg push loope repz push cmpsl pop mov rcrb sub add ds xor test leave lret in popa xchg xor add mov add lods cmpsb mov imul and imul mov xchg cmp xor repnz lret sti daa shl mov and mov arpl pop cmp sub or cld xchg pop clc pop pop sbb push adc leave mov loopne idivl test scas repnz rcll adc inc sbb (bad) pushf inc imul jno xor dec xchg idiv mov xchg xor ss insb mov jne sub add leave push data16 hlt pop (bad) xchg fmulp imul enter popf out outsl pushf repnz loop mov ficoml movsl (bad) lret xchg scas (bad) cld dec imul sub xchg jge or scas out dec or dec ret push dec out pop test add dec lds sub scas dec rcrl das popa push ret clc popf movsl stc imulb ret (bad) int pop dec popf inc adc adc push addl pop movsl dec (bad) popa in add mov mov pop mov repz push ret imull sub fstl sahf cwtl dec das mov aad or lods pop xchg mov clc pop cld push iret leave out inc cld ret (bad) mov aam pop push rol add jnp and or jo jg adc cmpsl jbe mov (bad) int3 push xchg dec adc add jb ret fs pusha mov das push mov lock jmp add stc mov pushf mov fs (bad) pop mov leave push fsubl cli cld rorb leave sbb mov das (bad) and mov loop xchg lods test lods pop js xchg pop mov xor inc or in mov inc or shll leave shrb pop jb or gs inc xchg jge test out sahf mov loop xchg mov jb clc add lods push xchg (bad) aad pop cmc dec je (bad) push push into jo repz xchg jecxz cs sahf gs icebp clc js mov dec ja mov pop sti mov loope pop in ret cmpsb xchg inc dec jbe sub mov jne das (bad) dec xchg outsb sahf sub roll mov sbb xlat jbe rol xchg sub jmp cmpsl iret pop fcoms push mov push adc movsl leave xchg jl xlat xchg movsl cld shlb xor popf lcall shr gs sbb sahf rcrb insl add cwtl and add pop gs add mov repnz popf cmp inc sub mov xchg xchg (bad) shlb pop adc lret add xchg (bad) or test mov xchg lret repz or mov pop adc mov adc add mov std push daa xchg js cmp (bad) enter or pop rolb ret mov lds lcall out mov or xor mov out xor (bad) fbstp push xor cmpsb daa pop sub in insl (bad) sti push cmp jmp xchg jle push jmp mov push into pop lock mov aad xrelease lcall dec and pop fistl je,pt int imul and dec enter mov movsl pop cld adc ljmp pop lods xor shr imulb mov adc loop pushf test cld sub adc ljmp aam ljmp dec cmp xor cmpsl and ret mov pop xor adc mov jns mov cli jge xchg icebp add and mov sbb pop (bad) mov outsl fmul add mov xor icebp and adc jne and and popf fnsave xor xchg sub sub pop mov inc nop mov (bad) outsl enter inc pop fist and mov jnp and into movsl xor jg fs dec jmp fdivr mov xchg (bad) (bad) lret daa (bad) jg in push mov test and mov sub clc call adc cli fldenv cmpsb fucomp fidivr arpl or and add shl mov popf add xchg mov mov ds loopne mov stos outsl push outsb add (bad) stc dec sahf push sbb divb or daa into dec inc xchg cwtl ret jle mov xor pop popf scas jae xor cli cltd fisubr xchg lcall gs daa and add leave sbb movsb pop ret ret sub ja fstp sub into in and sbb jmp inc and pop adc pop leave cmp loope hlt (bad) pop loop pop pop jp xor rorb lret add mov pop or pop adc xchg lahf cmpsl icebp les iret (bad) cmpsl loopne xor lahf fidiv vpaddusw cmp lds adc xchg stos repz sub add int3 dec lret inc dec push subl sub aad ds mov dec adc dec fisttpll and xor jne mov mov xchg mov mov sti fmull add cmc in add frstor (bad) or mov and mulb jecxz jg cli (bad) mov cmp inc push mov jae or or xor inc jmp loopne pop fdivr lret jno fadds insl mov data16 sub jge xor div (bad) testl shrl sub jb sub push leave add mov sub repz sbb iret push jle das pop sbb jle lahf hlt jbe (bad) xor hlt lods leave cmc or xchg call gs into (bad) hlt test repz mov subl mov lret dec testb call loope idiv je mov push inc inc add adc push test dec les push pop sub pop rcrl daa in aam xor push fwait xlat mov cmp jb (bad) dec pop in sub and lahf out xor lahf clc sub xor sub adc adc bound imul or fmuls (bad) aam mov nop push lcall arpl and movsl inc and push sub mov mov in jb test pop out (bad) stc idiv lods ds sub cmpsb adc leave mov jge js mov pop mov lea aad mov out sub sub mov or or fxtract movsb cld or sub cmpsb int3 mov jmp sub mov shll and enter jl pop push xor shrb add call es jne jne push dec (bad) cmp cmp xchg adc call test and xor in mov xor lcall jae das lods out push cld mov loopne jmp sub xchg jb mov imul ficoml fisubr repnz adc dec cmpsb sbb out je andb and xchg jbe imul nop das call push jmp enter cli jg mov push xor or add test clc mov (bad) stc lahf fidiv push test fdivrl imul popf jbe outsl aaa repnz cli mov xchg pop (bad) loop movsl jb subl cltd out bound (bad) xor test and mov movsl jle or roll dec xor pop es add mov fistp xchg mov xchg xor hlt out xor jg movsb mov pop ret pop insl aaa xchg call es in dec and xlat inc inc and mov xor imul out js insl js push es fstl (bad) setp dec ret push lds add and das mov loop push dec inc orl das xor testb mov and mov bound sti push dec push loop jle imul push or pusha pushf xor sub inc jnp daa je jmp cmp jecxz pushf mov push (bad) xor xchg dec sub jmp lods and pop out jmp cmpsb sub mov push subb adc sarl movb movsl adc mov push shrl (bad) testl dec fcomps cwtl test lahf push inc pop ret mov ftst mov push adc pop repnz xchg mov cmp mov add daa jp aaa out adc sub popf rcrl mov and jo ret mov cmp scas cmp outsl mov push pop xor jmp and ljmp and int3 loope je ret cmc fwait push ret cwtl xchg inc mov xlat sub lods add jp add lods adc cs lret xchg gs inc in mov dec cld fsubl jo xchg adc jg mov cs mov rorb les sub xor mov sar mov mov pop sti add lock lahf adc test popa dec jp movsb scas call sub push in jl mov repz xor dec scas xchg or adc push leave adc or aad ljmp push ret xor or fdivrp inc (bad) cmpsb out (bad) test sub push scas ljmp sub inc mov cmp cmp enter pop test adc and mov cmp xor repnz lret ljmp popf pop jns cli xchg clc add push psubsb dec mov dec mov inc out mov and outsl ret ja test inc mov and arpl ss fs int3 inc xchg push xchg mov pusha out (bad) xchg je gs clc (bad) lret incl mov mov dec adc mov add pop into jb inc into cltd xchg stos dec nop xchg push inc or add (bad) push xchg pop add and or and test add stc inc mov lock pop into mov (bad) push jne push cmpsl (bad) mov (bad) rcrl xchg sbb fidiv scas (bad) pop das sub repz divl pop xchg mov push insb mov das push into cmpsl fmuls idivl sub pop repz test test clc (bad) dec cli jb pop sbb xor sub xor and out lret xor call inc dec stos jne test xchg (bad) and push xor rorl mov pop cmpsb mov sub gs (bad) or push inc cmp std inc add mov xchg mov out int cmp je pop adc (bad) pop leave add and sub mov inc dec (bad) lock jnp sbb xchg ret scas pop adc mov cmp cmp (bad) out cmc sub add (bad) dec out popf cmc jnp lret icebp pop jnp shlb imul push iret insb push mov fnstcw icebp (bad) and push mov loop inc sub pop jno dec test or sar mov add call mov xchg ret adc cmp xlat and add sub jno mov aaa fdivrl es sti insl and cli lods mov inc cmc push mov pop fdivr cmp sar divb xchg pop fisttpll movsl adc cmp jg adc and jmp mov into cmp mov xor pop jne subl and jmp pop jbe cmpsl push mov dec push inc sub mov dec mov xor xor fcompl sbb sub gs mov pop jmp sub adc mov and (bad) outsl leave push gs sub ret in fmull sub (bad) stc cmp sbb add mov fiadd repz jb mov pop xchg pop nop mov rorl movsl stc cmp mov lret mov mov or xlat pushf xchg pop outsl jecxz pop push out jge cmpsb les (bad) jb fistpll push or rcrl pop xor inc xchg adc adc fs stos mov or and dec add stos xor repz xor push or jl (bad) repnz ret lock inc mov movsl pop and mov int3 add sbb es and lea and cs dec mov pop cmp fs inc add fsubrs stc cmp repz in outsb inc into fstps fdivl cmpsb push je push ret dec mov adc fmuls fld1 adc dec jne repz pop xor or add iret shl lahf popa cmp sub mov sub (bad) mov jg aas daa mov pop and lock je imul mov repnz das mov sub (bad) jno xor aam inc add pop jl outsl fidivr sbb (bad) repz push xlat sbb push push pop adc out int3 clc (bad) mov inc xor xlat cs cli or call mov (bad) sbb inc jns dec jne adc shrl in lods sarb mov gs (bad) addr16 mov cmp cwtl jne (bad) mov mov push mov shrl lret xchg shrl imull les fnstenv out lret (bad) das fiaddl into out inc bound xor jecxz xor adc sahf test cmp jp loope mov fisubl mov mov xor (bad) jbe xor mov dec pop and add and add sbb orl sbb add (bad) aas mov pop (bad) stos sub xchg sti xchg xchg sbb mov aam push out cmp gs stos lea cli dec add mov sbb call ds cld lods add nop mov add sbb sti push and dec imul imul out jnp add mov dec push iret inc mov in push pop mov enter mov xchg jmp sbb xchg stos daa inc inc sbb dec push push push aas jne jo pop pop jle stos es fcos icebp mov dec mov jp (bad) dec push mov ss jg lret scas xchg xor inc jb jge leave enter lods and (bad) inc bound push popa jne sub cmc aas daa (bad) push xor sbb and mov inc jns add adc mov sbbl dec loopne pushf dec lret adc jmp jns sub dec xchg (bad) jle inc and push shlb push lcall fdivl jbe push jg jns or notl xor or loopne pop mov pop repz adc adc xor (bad) (bad) cli pop fiadd or jge xchg and fdivrs test dec cmp jbe into jle pop mov scas cld test mov sti call jne sti movsl push cmp loop fimull push jns inc cmp pop dec hlt lahf daa (bad) loope test fwait dec mov xor das popf cwtl das cld add lret ds stos xor mov fdivrl pop jg lock out ret idivl mov or lret mov sub add mov xor out mov enter or lahf repz xchg lahf ret inc xlat lret ds pop and lock push stos mull lret mov out je out cltd pop jnp sbb mov jg or mov mov mov cmpsl add push call out and (bad) mov sub negb sub mov ss rol gs cli mov add in int3 inc loop sbb sbb mov popa sub mov pop (bad) test mov mov xchg mov sbb dec mov (bad) das adc xchg aad pusha iret loope and add loop xchg adc cmpsl mov sub sub xor xchg cmp stos jae add mov fwait das fsts sbb and fisttp stos dec lods adc sub mulb mov add mov daa jmp inc adc pop add mov jg inc shll and adc cmp add dec xchg adc mov (bad) cmpsb jmp loopne out int3 imull (bad) mulb cmp or scas jne mov (bad) (bad) sub fidiv aas pushl push testl xor es cmp ljmp fs mov or div stos and scas adc ja scas or inc push out imul mov push sub mov xor or jbe adc daa ljmp dec std (bad) or add ret sub ret jns xchg leave ret jne rcll pop xchg iret adc (bad) gs cwtl xchg cli push pushf loop xchg xor sbb loop leave pop loop icebp sbb jl sub ret mov or mov pop out (bad) xor xchg leave cwtl xor pop fistpll pusha cmp add mov mov push sub cmp sub shll pop or daa jns dec popf and fisub aaa mov or mov xor test repnz jle and scas repnz scas fstps loope pop xchg outsl and dec (bad) fisubrl in lret jecxz call cmpsl rorb inc dec and sub pushw inc (bad) xor dec adc pop mov pop cmpsl pushf popf push movb cmp clc dec std push sub xor flds (bad) shlb enter xchg mov dec les pop dec in clc mov rcll aas sub adc mov add inc cmpsw jg ret shr xchg shrb out cs out sub add or mov (bad) sti negl cmp orb ret jecxz outsl shr das or repz pop imul mov push out sbb xchg inc daa test in lcall jnp cmpsb jns ret lods adc fiaddl fstpt popf icebp out jne loop xchg adcl push pop push out sub push jecxz mov push pop mov push hlt sub ss pop rcrl das sub xchg addr16 cmpsb mov sbbl stos mov fstps xor imul mov (bad) lcall lods sub (bad) (bad) push xor out and outsb xchg jb nop ja xchg cwtl lahf jae add adc ds (bad) jmp in in imul mov sti (bad) dec out decb inc mov enter xor (bad) aam push out lods dec lds (bad) decb adc and sti bound das repz adc mov ret cwtl loope lahf jno push (bad) fsts mov xor ret dec mov aad rorl pop cmp push leave sub jp add cmp sub dec repnz xchg mov (bad) jmp add bnd adc inc or inc movsb test call adc pop cs mov jmp sbb rclb and decb pop or jl dec sti lret jmp (bad) iret and dec sti mov mov and icebp adc popa int adcb and fwait and or lods mov or out hlt ficom fidivl fs xor andb imul dec orb add andl xchg pminsw ljmp lds (bad) sti jp jmp test jb jl leave pop stc dec inc mov xlat outsl insl cmpsl push adc data16 sarb icebp mov adc movsl mov pushf or dec stos lret push inc and xor (bad) sub mov gs fisttpll or std mul ret stc adc sbb enter mov jno pushf mov pop pop sub rorb push (bad) xchg lds mov shl clc xor out (bad) sti scas cmp push xchg lret aad mov push push mov and mov sub cs clc (bad) sbb or add out jge jecxz add and jp or repnz test mov dec frstor push sbb mov mov sbb mov leave sub inc scas ljmp or jns xchg clc mov push push mov lret sbb xchg gs stc adc pusha lds adc pop dec (bad) mov movsb mov push xchg lretw add xor sarl xchg sub push jge int (bad) scas mov sti insb jne cltd xchg xor and xor pop mov inc test add lea adc or and or push scas or fstl and in adcl fidivl je jp push andl stos mov clc jo mov bound int3 add icebp add scas jne les mov adc stc xor outsb movsb out sub sub mov push sub out (bad) scas insb pop pushf cmp sub adc sti cmpsb loopne aaa pop mov lret inc dec sub or fstps jo xor je mov (bad) xor xor and inc mov and pop mov mov into movsl dec xor repz dec pop cwtl movsl xchg pop cmp inc inc jmp rcl jp (bad) mov lds jnp idivl mov cmp mov hlt xor mov cmc xchg cmpsb iret cmp and lcall push jno test pusha push ljmp jge jno push mov xlat xchg xchg mov mov mov enter sub out xchg pop scas jmp mov pop push mov push pop jns cmp mov sub dec cmpsl push scas mov pop push lds push aad sbb imul imul movq shll cmp sbb lods ret and ja (bad) fistpll nop mov push cld xor aas test jmp sti fidivl arpl pushw test mov mov in dec mov mov mov jae pop jmp out mov adc mov sub mov das xor or cs (bad) testb leave ret push adc shr adc ficomp and and (bad) iret sbb sub leave and or mov cmp movsl cltd inc jp cmpsl movsl (bad) mov sub (bad) mov xor mov inc imul push aad sub mov inc icebp lock test ret jmp ds sub decl fistp das scas xor or call loopne icebp pusha dec push outsb inc imul bound gs or mov insb xchg scas cmpsb mov mov (bad) mov dec xchg popf add aas mov sub sub (bad) (bad) ljmp out pop pushf add popf fidiv xorl js pop push shr loop test repnz push ds les lds push jl xchg xchg and sub mov loopne xchg mov mov sub or mov add add loop dec sbb add or xlat push pop dec jno mov push jmp cs mov xor xor and stos cwtl lret rclb jmp ds mov and orl jnp pushf out cmc dec hlt hlt dec xchg xchg in jecxz dec hlt inc rclb jbe mulb pop js fcmovnu xchg mov xor (bad) pushl mov leave ds push xor xchg out jmp jae repnz rol lods out and push ss mov jle out or add mov xor ret popf in aas push testl mov dec imul imul sub jno sbb insb mov mov or push std gs test movsl inc add mov pop mov xor mov jl ret sbb in std mov jmp push mov dec mov push out dec loop xchg sbb mov or scas pop push and jp leave mov mov lret leave cmpsb sub push add push cli je repz xor pop dec mov fdivl ljmp outsb adc mov out inc mov mov andnps push out mov jo lahf pop adc cwtl cltd adc ja fcoms pushf dec (bad) lods and push sbb sar ret inc mov int3 call inc sub mov cwtl cmp mov divb or testb mov mov test mov lods fldenv mov rorl enter or repnz bound jbe ret sub xor out jmp es out add (bad) mov nop pusha mov cmc pop fisubr cmp inc ds cmp dec sub clc xchg mov mov lods test pop add jmp (bad) jge add sub pop or rorb pop repnz (bad) adc mov add scas cli repz xchg mov adc jno jnp push idivl paddusw inc outsl pop mov movsl insl cmp fisubrl xor fs fildll ds sub mov mov and ljmp mov push add lret out push out and mov sub dec push sub push imul sbbb movl (bad) popf and dec xor stos sub cmp mov pop stos cltd call test cmc popf sub sub js dec cld push dec mov jmp lds cmp or mov mov push pop mov dec or mov and or dec mov add cmp mov xor xchg imul mov adc jnp sub bound aam pusha xor and daa sub mov pop mov push clc popf ja or sbb push pushf bound mov mov push mov add inc movsb scas push out test in sahf jle popf cmpsl or xor jne aam xor mov xor or jp sti movsb mov and sub (bad) add dec (bad) repnz stos jb push (bad) (bad) xlat xor (bad) dec xchg xlat sbb mov dec sub mov mov cmp adc mov fs jl inc xchg orb (bad) sti xor push push je xchg add and lret rcl mov pop mov push mov out adc and mov cmp push mov ret lret jne pop popf push and adc (bad) pop popf leave pop repz nop cld mov insb adc (bad) stos sub mov icebp mov aad dec test dec iret scas mov push dec cwtl pop sub dec inc or mov out xor or sub xor mov jg gs jmp jge bound add xor stc xchg jbe xor mov sti lcall cmpsb push repnz or mov xchg pop mov inc or pop or out out xlat ljmp add push adc xchg out scas cmp sub mov mov adc add xor mov mov push mov mov out mov jnp or ja and sub into ret pop mov mov xlat (bad) jno cmp stos sub add add sbb push loop push loope jb mov test or mov out stos mov (bad) mov and jg push pop out imul sub out jecxz daa repnz sbb xor and sub sub pop lret pop in lods or pop pop ret inc xor stos mov cmp sbb and sub jle mov sub or dec push and adc mov pop clc pop jne repz pop sub ljmp scas int add loop rcrb in (bad) sbb cmp idiv xchg fnstsw or stos lea pop test scas sub push daa add in das fcoms out mov rolb jnp repz and arpl sub mov push xlat in movsb dec ljmp sub jge stos movsl inc movsb add je stos adc repnz nop repnz mov dec test pop into repnz out push mov out mov and fmul aad fstpl xor adcb inc pop scas mov mov in das ja cli pop into mov into mov sub adc mov and out cmp (bad) loop inc das mov repnz das aad pop mov imul enter sbb nop sbb add cli out imul xchg mov (bad) or cli xor xor int lcall aad jmp dec jmp loope stc jb pop or cld jns bound cli jg dec pop jle pop jg cmp and icebp adc in add mov add sub movsb jmp jno outsl xchg adc (bad) push mov mov mov mov xchg (bad) je lret decl jecxz sub or (bad) aad (bad) and mov sub sub cmp mov inc lret ret mov icebp sahf cmpsl ret jno dec pop sub in test or stos or lret and fstpl xor fisubrl cld cmc xchg dec xchg pusha popf hlt into pop ljmp bound mov andl and sbb jmp jg repnz cli fbstp sbb sub dec sti jmp mov dec out xor stos adc push jmp push cmp jmp rol lea daa xor insl pop test mov movsb xchg subl adc mov mov jo dec jmp lea push fdivs stos (bad) in sar add lret and pusha imul fimul xchg stc in jmp icebp rcrl sti sbb and mov jne fistl pop popf push lods mov pop sbb cmp popa nop mov push lahf mov add fisub lds in cwtl mov lret push inc pop into mov gs mov add pop iret outsl loop (bad) mov pop adc imul add pushf popa lret dec inc pushf cmpsl pop jmp xor mov adc mov ret xlat inc fildll add xchg iret outsb les into xor and xchg rcll and dec add gs lods loopne out sub ja aas xchg cli (bad) dec cmpsl scas xor adc insl mov sbb std jmp push out and jmp xchg add popf mov add (bad) sti mov sub jbe inc movl or mov cld je ja cmc (bad) fsts cmp inc into mov sub add lea or lret dec fmull lods mov int jp mov push je pop rorb idivl test sbbl jbe xchg ss int3 rcr pushl ljmp jp divb loop pop int3 push inc and mov int or dec test and cmp int3 xchg outsb dec iret mov sub test sub in or mov xchg push sahf cmp cltd sub add sub clc push jb (bad) int3 iret (bad) jecxz dec repz push mov sub fldt push (bad) int cs pop and dec mov imul mov icebp and inc pop scas leave dec popa add adc lret cli pop rorb mov dec into sub jno mov sub insl fs cwtl mulb dec (bad) stc pop test iret out fnsave ffreep cmp fdivrp cmpsb adc xor jne xor dec and add xor cmp gs scas mov adc rcll fwait xchg dec test mov test scas cmp cmp in out mov lret dec outsb or shrl adc mov das icebp jg mov outsb sub leave pop mov pop test out les ljmp ret fstpt mov push mov movsl xchg dec inc mov ficoml insl jp adc lahf (bad) mov sbb dec mov rorl and fwait sbb cs std (bad) jno loop lds sub sarl popf xchg js adc sbb adc or test or repz adc mov pop adc shll mov dec (bad) imul sbb push adc inc jle fldcw lods mov or loopne (bad) outsb mov mov in lds inc popf inc push das or inc mov and xchg add xchg movsl aad iret xchg stos lret loopne into or or cltd (bad) loope sub (bad) and sbb ds mov loopne adc (bad) call icebp cltd sub mov pusha mov hlt add jbe push add rclb out popf jo pop push mov mov push sahf xchg cmp dec in aad divl cmc ja lods jmp or dec jecxz dec fistl jae sub sub xor add lcall add mov dec mov lret mov sbb adc cmpsl mov pop leave or imul adc add and add mov dec and fildll push xlat inc mov test enter fnclex rclb out inc and insl and mov add cmp mov sub int3 shlb icebp and pop push aam leave jge mov or test leave push out out dec int xor xchg pop lea add aas lret pop sbb cmp lcall dec imul lret loop add push add cs sub aas jbe pop push inc jmp push pop dec je adc test mov dec out ljmp lock fcmovbe (bad) repz mov pop mov lea push dec mov fist outsl mov add push loope ret sub mov jmp loope orl stc mov roll mov (bad) movsb jne sub jge pop pop mov push sti dec jge xchg inc stos aaa xor xchg repnz dec ret push mov jne (bad) out outsb repz (bad) mov lret cltd xchg das dec rcll lods mov aas lret mov dec jmp out test stos call lret adc iret or cld int negl sub sub fs jns push xor cmpsb dec mov shr inc shrb sub adc xchg push and ret in pop aad fwait xor mov int mov mov dec push or fcomps push xlat cmp fisttp lahf aam pusha mov add roll inc cld or push mov test pop cli (bad) xor cli (bad) lret int3 (bad) out sbb xor cli mov scas lret mov loopne mov (bad) (bad) (bad) mov fs repnz inc mov push dec inc mov ret push fimul push jecxz das add xor sbb cld lock mov push cmc gs cmpsb mov ret ficoml sub cmpsl adc mov gs lods and out jb loop arpl jecxz cmp ds jmp pop (bad) mov fidivl and sti ja clc (bad) (bad) and sti stc sub fistpll imull or (bad) fwait out push lds or cmp loope (bad) and push and jo sub sub daa xor cmc sbb add sub lret rcl jb xor jns mov xor mov mov dec jecxz add movsl mov call lahf pop xor or loop add fldcw je shr ret push pop push jmp mov js pop mov test aam (bad) mov daa minps std pop adc mov push ljmp push pop push rcrl dec pushf mov jl scas add xor cltd dec push enter fistpl pusha test mov out fstps cs cmpsb js (bad) adc jne sti repnz leave mov sub add pop into scas mov mov fsts xor xchg sbb lock jb xor rorb ja repnz dec test sbb (bad) (bad) mov or das adc ljmp imul aam fadds add cld pop rclb shll mov popl fcoms gs mov repz (bad) mov cltd neg cmpsl nop jle push (bad) jnp daa push popa push jecxz ss leave lret jle xchg mov sub fisttp iret mov daa aad stc mov (bad) repz sub imul das and push lcall push inc fisttp scas fcoml jb aas inc mov mov add fldt call out mov dec mov arpl mov (bad) mov mov jl mov xor pop pop mov pop in fdiv mov out lret xchg pop scas fs outsb inc pop push and das repnz or dec xor cmp jecxz xor adc xchg outsl sub pop sbb ret stos shrb les cmpsl xor sarl mov inc and scas lock pop (bad) (bad) sub repnz and xchg sub and loop xchg decb mov add ja push (bad) std adc cs and test dec jmp xchg sub daa pop xchg xchg sub (bad) adc lret rorb mov cmc gs movsl insb ljmp imul daa clc pushfw fsubp add or xchg repnz dec and pushf add movsb push movsl mov pop lods push inc popa sbb rcll lret push add fwait xchg adc sub dec mov (bad) loop stc imul icebp pop gs scas adc testl dec and or repz clc mov add shrl idivb sub jge xlat mov divl dec lahf rclb jmp dec jecxz or or jg fldcw fistpll and xchg fstl or daa xor lret sahf outsb ret in push mov je fisubrl aam adc or popf (bad) push push cmp xchg sbb (bad) xchg add inc mov out repnz xchg push pop jecxz pop out xor add out into mov jns jbe lcall and jnp add int3 cmp in jg add into xor mov dec call add mov xor and (bad) push xor mov popa push or cld add ret push and aad cli inc mov jne mov and mov movsb out adc dec aad jg mov jp mov xchg sub shll pop inc (bad) adc mov and and jmp cmpsl sti fistl lahf adc jne lods sub (bad) add ret clc fcoms aam ret push push xor outsb gs (bad) loop shll sub jp scas lret mov cmp dec test lret fildll sbb lds aad xor fucomip add xchg push daa das jmp test call xor add mul (bad) lock inc dec pop push lock mov adc out jbe mov das imul jecxz mov mov loope outsl mov imull out flds or xor (bad) xor push dec xchg cli int3 fstpl xchg pop stos mov scas xor cli in xchg nop dec xchg sti (bad) or mov mov call xchg sub xor in aas jae (bad) mov sbb cmp xor add mov mov mov in push jmp pop sub mov inc pop add int3 fwait ljmp ljmp cltd cmp mov push jge jbe rclb jb flds and or xchg decb cmp mov jg stos nop mov mov (bad) mov cmc mov mov pop push clc pusha sub and jmp sahf mov or xlat (bad) xor lock iret inc gs in jo pop or enter push jbe xor lock lahf addr16 and or xor mov inc and pop test fadd add or std add lods adc adc or idivl mov mov adc (bad) repnz mov gs or (bad) aad aad dec xchg out ljmp icebp call mov push dec pop fcmovbe dec stos loop lcall mov inc in mov mov xchg (bad) dec or test mov add (bad) xor stc push test and aad sub (bad) xor sub sbb (bad) cmp ret out std out das nop sub push add out jnp and cmp add adc icebp icebp mov mov cwtl in lahf mov push xchg add xor out cmpsb mov lea add mov xchg adc dec in adc or cmp pop pop std jmp mov sub test and inc mov dec xchg cwtl or mov sub das in mov push mov cmpsl fisttpll dec xor mov fiaddl das aas push je inc shrl cmp scas test and fs pop jle mov sub push or adc les mov jb out jne call mov and das (bad) sub pop jae jmp aas adc mov mov mov mov mov dec adc (bad) cmc int3 jg adc sbbl mov popf adc mov jb clc or ljmp aad cmpsl xchg out ljmp divb push out xchg int or pop cmpsl jge sbb (bad) mov mov aas sub add sbb daa mov repnz (bad) dec in out xchg add cmp mov jmp sti lret add dec sub mov data16 adc imul into and push mov xchg xor or rorb jmp shr xor out cwtl fwait out dec sub adc lds out iret fimull cld (bad) fisub mov (bad) mov idivb (bad) imull sub xor iret popa enter test fsubrs xchg mov inc mov inc stos sub mov and ss sub add fistp cli xor mov out mov (bad) jo das mov xor clc outsb movsb adc imul jl lret movsb out mov lret lret jnp pushf fsts fwait push cmc (bad) cmp sbb or dec jp and jge cli mov or pusha mov mov xchg push (bad) shrb bound negl (bad) sub lcall ret dec xchg jo mov pushf cmc adc mov pop dec repnz ljmp pop mov and cltd int sub adc orb mov bound jg imul mov push inc mov addr16 leave mov outsb jecxz xchg scas enter xor ja mov cmp leave xchg outsl es out pop and pushf mov mov adc sti lret into mov sbb daa pop adc xchg jne pop dec or sub mov pop xlat push insl daa out gs jne insl sub dec sbb mov dec ret and sti sbb mov ja cs jg adc out or repnz imul (bad) pop jne scas xchg bnd mov ljmp fsubrs cmp call dec mov cmc fneni(8087 das inc call rcr jecxz repz pop or movswl mov imul mov outsl push mov mov dec sub jmp outsl mov sub mov mov mov jmp jg ja push cmp mov mov xchg fisubrl (bad) leave and cmpb mov dec cld push imulb lds sub fistpl jle dec and cmp mov jecxz xor aas pop fidivr stos sub xchg stos xor jg daa xlat popf jmp cld imul or sarb outsb lret sti mov and icebp push fisub dec ret cmp mov sbb icebp xor sbb sub and sbb ret xchg mov sub push in mov leave sbb out jns mov fwait and push nop mov popa push mov aam push or xchg jg out adc xor and call std lret mov mov mov call cli das lds adc pop jmp or and jle fs ja aad std js xor xor and jle xlat pop jmp fsubr sub pop fucom jne,pn sti mov rcrb mov pop mov std movb jo sub int3 das xor xor or pop inc xchg sbb jmp fldt lds adc imul lds out and and and push sub xchg notl xor dec or xchg aad inc mov sbb fisttpl pushf lods pop xchg icebp orl pop mov loop (bad) test loop idivl jnp dec out sbb cmpsl sbb push loop fisttp mov sub and fwait mov mov mov repnz fsubrl pusha pop jmp push pop in adc out xor out pop and ret test mov (bad) xchg mov or push (bad) xchg shrl mov into mov jbe imul rcrl repz mov pop sub jae add sub sub mov (bad) or xor loope dec inc mov in icebp data16 lret push loope sub mov pusha adc and mov ja repnz (bad) lods gs cltd (bad) jg mov lret push sar inc xchg dec add (bad) popf jo pop out stos cmp or or and dec pop inc xor push in push js dec jecxz lret push or mov iret and mov push repnz mov sbb test add jecxz adc (bad) imul in in clc and mov mov pop mov dec mov xor rorl and inc lcall cs dec cmc jne mov js enter pop pushl mov lret insb es jmp xor iret mov xchg stos push out push sub adc rcl mov dec jno in mov imul mov call cmpsl mov sti sub pop cli je xor icebp ljmp dec xor fild and pop nop leave test xor popa hlt jmp jp or or decl pop cs ja or sub inc arpl stos pop xor jmp repnz cmp cli int outsl (bad) push iret push push imul mov stos pop adc mov add jno jnp sti test or repz dec out je iret dec mov fdivrs fild lahf jp dec (bad) call pusha add addr16 negl mov iret (bad) cmp idivl sbb or push sbb adc xor push (bad) test or xchg cmp scas fisttpll test faddl (bad) mov aas pop dec lahf mov xor inc mov (bad) sub mov mov or pop into and and (bad) cmpsl mov sub mov mov lds xor add sub sarb cmp push mov jle sahf aas test cmp cmp outsb fcomp int3 xor mov and jno lret aam push movsl cmp mov or add xor ficom (bad) pop and and out outsl lods int3 mov hlt sub jne out or jmp shll imul sub xchg and cltd jge insb enter sub mov (bad) mulb push sub mov das shr aaa fstpt data16 (bad) (bad) adc outsl dec test push (bad) jne inc call sub cmpsb js add mov mov test mov mov inc push push fmull push pop test fwait mov iret in adc (bad) leave jmp pusha xor and std int push and cli popf add and ror jmp leave pop sti fs stc add add sub cltd je add test cmpsb lret mov mov jge inc dec (bad) sbb dec js cmpsl (bad) das or xlat insb nop movsb xorl mov and sti cmpsl loop adc test js jb xchg sub xor sbb pop mov movb sbb xor ficomp les add pop mov dec stos lret out leave pop push xchg sbb inc or dec xor test sub mov rcl and and movsl xlat in sub and mov jbe pop xlat ret imul mov push cmpsl or or jl enter xchg leave jne test xor js mov mov dec pop xor ret or and push pop mov andb and xor jne mov das mov pop clc sbb mov mov or repz dec (bad) fistpl dec mov pop mov jnp imul fadd sub mov lods sub add push and inc dec lret andb push daa sarb fdivs shrb sbb ret daa and adc pop lret ljmp inc and sub fist sti lret shrb loop lahf js pop or gs stos mov push shrb push lret ja movsb xchg outsb mov inc test add imul cmp and jbe adc inc or sub mov and callw sti cmp sbb mov in xchg ret and push rorl add mov repz add xlat or mov (bad) adc scas fcomps pop fdivrs ja into xchg stos add mov inc cltd inc dec sub scas cli outsl or sbb test inc ret pop dec jg xchg sbbb mov push mov (bad) cmpsl out pop pop push jo lahf push in mov mulb adc mov or lds inc sub sub (bad) cltd loop jnp lock in mov sub (bad) outsb xchg or dec cs jo dec xor xor push or add sub je les pop jmp into add (bad) xor mov cmpl leave push push sti xchg xrelease xchg icebp push jmp pop sbb mov addr16 out mov mov shll lods lods fs clc sub jmp fist add jmp add cs pushf orl sub push inc push pop xor cs sub repz pop iret add adc int3 adc nop push addl dec sub ja and rorb out flds ret push call out dec nop or pop mov mov xchg (bad) mov movsl std test adc cli ss outsl lret lock mov sarl jmp adc or push call and pop shlb adc icebp pop stos test aaa pop insb insb daa xor jg push cmpsb insl or fdivp mov mov pop push dec mov cmp (bad) ret mov iret sub pop loopne pop xchg (bad) and and xor jp jg and addr16 xchg push jno dec jns lahf rorl add mov cmp rcrb mov cmp adc fldt mov mov mov mov mov jbe daa pop push push int scas sti scas andl sub rcrl cld aaa in sbb clc mov fsubrl xchg fisttpll test aaa mov lock xchg mov xor (bad) aam mov xchg or add add test mov sbb push push mov mov gs xor sbbl test leave jmp adc nop mov sarl (bad) ds mov xchg jo call sub sub xlat cmp jnp scas popa movzbl and sub mov adc adc out jns jns push divl dec pop mov negl (bad) mov (bad) loope mov add xor xchg add (bad) std jns dec mov cld faddp stc mov loope mov xor ret not testb mov xchg ficomp unpcklps mov and ficomp mov mov ret repz xchg scas lret leave adc push pushf cwtl stos or scas xor iret mov (bad) negb daa sbb or mov pop out scas fmul movsl cld test out stc inc mov (bad) push jbe push and mov and sti ds lock xor mov mov cmp lods push lock dec jge sbb lds stos adc movsl dec scas mov dec mov in scas into in (bad) mov and or pop fbld scas push in stos (bad) loop fcoml fildl enter cli xchg sbb and scas mov and jl pop mov xchg (bad) loopne ss jg fwait popa push push jmp es jmp sbb xlat mov or scas push jmp pop sub iret mov push mov lret xchg cs pushf repnz mov out stos sub or sub push cmp push and dec or xchg addb cmp out jg idiv inc lahf sbb and push jge and xorb and push pop mov test call jecxz daa clc sti mov rcll std dec out in into movl dec les daa and hlt shl mov xlat jo inc sbb and pop movsl ljmp dec iret dec insl or push divl ret jne cli out dec jmp out popf jno pusha and or fnstsw add insl mov sub push ret mov ljmp mov xlat or inc imull xchg stos mov pop cmc loope xor dec mov mov loop cmpb xlat out sbb cmp or test add lcallw jno inc jae rcrl sub iret pop and pop dec lock mov or sbb push dec scas and (bad) jle mov fldt xor mov adc jns leave ss loop xchg lods xlat movsb sub add fwait pushf cmp mov leave pop jbe es gs xor shrb mov jg sarl push repnz mov xchg ja lret mov jmp es push mov jmp jns scas popf mov enter leave lea mov lds jb mov imul or stc xor cmpl adc leave or rorl dec fistp (bad) push test sub jp sbb or xor or push rcrb negb sub mov jno dec xchg adc mov in mov cmp push jl mov mov lcall sbb adcl mov mov cmp lahf cmp push cmp and js repz mov ficompl add xor sub lret xchg fstpl and xchg popa mov dec sbb nop xlat mov insl addr16 and stos lea out test scas mov dec mov xor lcall sub sub dec and aas lret ljmp cmpsl addr16 dec aad (bad) repnz adc jmp xchg leave lods notb fisttp jne out cmp icebp mov sub xor bound pop (bad) in inc mov pop mov pop (bad) cmpsb test popf cmp jmp daa mov sbb daa inc xor push inc popa and mov mov mov (bad) fwait popf jle leave jo mov cmp mov mov and add fmuls daa xlat sbb and ret dec sbb push cwtl orb dec xor or add loop xlat mov or mov mov push sub aaa mov (bad) sub mov mov bound xor sbb add aam ljmp xor inc int outsb mov lret add mov jne out push ret jb mov fwait jbe cs not arpl jmp hlt xchg jb mov sub and call inc add cmp cmp out aad cmp ret dec pushf adc mov mov pushf (bad) or adc sbb fisub pop (bad) out (bad) (bad) divb xchg pop movsl cli sub cmpsb repnz jb mov cmp orb and sub ljmp lods int mov xor ljmp xchg dec jmp lods jnp repz pop mov adc mov out or jge fdivrl sub or jp xchg fstps in outsl jb and and sbb sub movsl mov repnz fisttpll add pop test lret call cmp int aas adc mov dec (bad) mov mov and mov adc and aas mov mov ffreep mov cmp and and mov push (bad) pusha ds stos sbb mov and fdivl pop ds fsubp arpl out scas push inc pop cmpsb jp pusha xchg stc and sub or into pusha icebp in sub cmp rorl mulps ret lea and xor add add int jp (bad) cmp and int3 cmp adc popf icebp aaa in dec lds sub push or xor or lahf xlat cmp jo bound sub jg cmpsl sbb mov jno xchg rclb bound sbb mov push daa ret jno dec jne pusha sub das mov push mov mov mov sub mulb dec dec push dec sub sbb xlat scas mov lret les mov imul pop mov in adc fcom adc pop cwtl ret push and mov adc mov sub out pop lar dec fcoml call ficomp pop mov mov xchg mov outsb in pop out mov decb popa xchg cmp adc and loope lret (bad) call xchg adc stc pop sub jmp int3 (bad) (bad) pushf jbe push jmp in out or mov out mov mov iret mov sub push and and sub adc orl sub (bad) pop into fisubrl lahf add add mov movl cmp leave xchg (bad) stos repnz fisttpl call xor aaa jp call inc xor inc sbb imul or xchg sbb or add outsb in push mov fisubr nop js ret testb imul arpl add push sbb mov push adc sbb pop add (bad) ja aaa mov jnp testl adc mov jbe das sar lods fs add sub clc mov (bad) shlb adc mov aas cwtl cmp pop je mov cs outsb mov (bad) mov ss lods pusha pop cmpsb xchg jo or inc jbe and repz mov fidivr cmp adc mov sub inc cmp dec rcrl test and mov enter ljmp sub xlat dec jmp mov jge jne fs rorb stc mov pop and notb jbe add repz mov mov rcll cmc rep sub mov loopne fldpi jae dec mov jne add mov dec ret jle outsl dec repz call (bad) pop cmp lds je mov popf xchg mov mov dec cld cmp mov clc xorb or add jae jecxz sub popa adc jle loop sti mov xlat stos lret cmp loopne cmp push and and in mov imul mov mov mov xchg out mov push mov andl adc int3 aas pop xchg aam leave pop ficom mov jmp scas cmp mov ljmp cmp xor rolb xor lods dec xchg or rclb pop xchg mov ljmp cltd gs cmp out call mov cmp adc xchg push jmp test and stos sbb int jnp xor stos je in sti lods mov push ljmp dec lret mov pop cmp stc into loop xor xchg pop mov mov dec cmp cmp adc push xchg jmp mov out sub pop pop lds test addr16 (bad) or jp movsl xchg stos lea icebp xor cli mov pop mov sbb bound fisubrl pop mov lret (bad) add jne in test popf pop iret (bad) xchg add mov push repz pop imul icebp sub pop fldenv xor out movsl fistpll hlt sub xor dec add mov pop pushf add notw inc mov divl push mov dec mov out cli popf lcall sbb imul ret iret pop cltd pop mov sbb sbb (bad) cs or out lea xor (bad) or dec add jnp adc pop mov jmp (bad) lret inc das (bad) movsb lods rcl arpl xor daa rclb repnz mov mov dec pop adc sbb xor xlat xor jne lods pop push cmpsl fnstenv push cld jl mov out jo loope and sub mov (bad) xor outsb cmpsl out dec adc (bad) mov not push mov out dec clc aam ljmp add and xor and stc (bad) sub adc out adc jns cld xchg insl (bad) or (bad) push into daa int3 add imul ficomp push and push dec mov xchg sub push push fstpl (bad) xor push xchg inc lret add stos inc pop cmp mov decl dec fs (bad) mov mov iret and (bad) repz sub jne jnp into mov mov fs or mov jb xchg jge dec and pop xlat stc cmp and daa mov (bad) rcrb (bad) push out mov shr mov repz pop and mov inc dec (bad) scas mov jg cmp sub es pop xor aam enter mov push in daa inc je cmp mov adc unpckhps and iret shr incl iret sub or add lcall scas and push mov push sub cmp jge clc movsl pop sub das jge cli jne pop mov pusha adc rcrl xor mov sbb sub mov lret mov adc push xor jo mov je lock mov or sbb inc add insb pop les xor divb xchg mov add xchg addr16 clc rorb (bad) jp jecxz push ret (bad) cmp xchg jbe leave push fnstenv sub xor sub xchg in cli push lea mov push repnz fstps ficoml and and in jle mov xor and pop and es inc mov sbb ljmp stos sub push or pop jnp rcr in xor out clc adc push xchg dec repnz jmp dec push xor mov sbb mov pop std repnz std mov mov mov insb jmp ss sub mov xor mov decb mov jmp dec and sub imul pop and xchg mov xor rep mov fistpl mov jge sarb lods cmp or notl lds fist dec (bad) jne decb inc cmp push xchg lahf (bad) insl lret push xchg int lret (bad) je int3 (bad) xchg out xlat mov jb stc jbe gs enter xor f2xm1 ds insl push sub (bad) daa out in xchg divl xor ret push mov out add xchg pop xchg stc or mov dec or jge popf sbb rcr lcall mov dec cmpsb jmp adc sub mov loopne std mov and lea pop push test test loope xor scas pop cmp adc mov cs (bad) mov (bad) stc or mov pop mov jne push mov scas repnz mov xchg (bad) mov sub in mov loop dec aam mov xchg popa dec mov push sub mov or fsubrs fildl es sub mov cmp pop int3 mov mov sub out pushf mov and xor sbb out or aam jl (bad) movsl test inc lods pop sti add test scas and outsl bnd xor and xor add mov push mov push xlat jo lret pop fmul and mov mov inc lods pop mov in inc or stos cwtl das (bad) mov add sbb icebp loop pop mov ljmp dec scas mov dec jecxz sub push lods cmp sub aad outsb ffree push dec mov es jns mov mov xchg sub sub test movsl sbb dec push bnd xchg dec mov add imull push mov int3 scas pop push mov je inc or pop shrb cli fcoms (bad) nop ds dec xchg xchg into jno loope sub cmpsb dec lds add std test mov pop mov dec add ljmp ljmp mov test xor clc insl sub loopne sub mov arpl xchg and cli dec xlat cld (bad) jb hlt cltd push add xor scas testb sub and pop pop (bad) jo dec xor jmp mov mov xlat push les stos loopne push xchg xchg insl jo inc or cs mov dec mov or test cmc cmp inc sbb sti jge jo pop cmp mov and mov lds inc sub add fstpl je scas fdiv lock push jmp or mov inc and mov xor add mov cli out cmp push repz (bad) dec sub or add clc pop pop sub jmp mov and push dec ret loop test xor mov rclb push test mov loope sub mov sub decb in jmp push mov aas sub sbb cmp cmp outsb outsl xchg cmp fsubr fnstenv mov mov xlat icebp (bad) mov hlt add xchg in and and xor push ss stos cltd mov in or (bad) mov fisub pushf sarb push xor mov mov pop out and into adc push add cmpsl jp ljmp add cli or xor out sub xchg mov popf or inc lahf lahf leave mov inc pop loopne pop lahf loop push and in loop (bad) popf daa jg aas xor pop fadds mov push sub sub mov pop inc or sub sarl inc je test repnz sub add lret mov dec lock je jae sub xor jae jl pop sbb mov cli shrl aad dec push cmp dec imul push sub mov cmp mov cs leave adc fist xor mov mov cmp push jns rcrl out jne mov mov inc sub fdivrs roll leave out ss and xchg pop xchg dec ffree dec sbb mov mov jg repz leave xor add and sub popf push sub mov in loop lret jl push sub xchg jg sub cmpsl js lahf gs mov rcrb imul movsb adc pop loopne cmovnp aad add dec fdivs mov cmp fucomp jecxz ror mov imul mov pop lock xlat sbb decb data16 sub ja rcll outsl dec rcr lds inc or jns movsl pop cltd fadds xor xor cmc cltd out sub shrl fnstcw xchg push sbb mov (bad) out adc lds adc mov mov (bad) int outsl leave cmc jg mov (bad) insl xor and icebp daa leave sub mov adc inc or lea mov xor test push dec add sub mov xor xlat mov ljmp aam and loope adc lods movsl or and jge ret sbb mov and mov sub mov cwtl movsb scas in add xor notb sub push cwtl pop or mov imul xchg into cli sub mov push cmc inc mov (bad) xchg adc or jle mov into sub sub jle fld movsl int3 roll test add sub icebp dec push scas jb add push sub je (bad) mov mov sub fistpl push loope or loopne and insb adc and test mov ret push jg mov (bad) jp push rorl xor sub mov repz jo dec pop mov jp (bad) mov or clc and xor cmp xor mov jne mulb jle sub sub fldt sbb jne pop xchg (bad) scas jno inc or mov jg std sub mov imul movzbl cmp imul add out cwtl inc out mov jne xchg cmp jne ljmp or xorb loop cld cwtl pop push fs (bad) arpl shr mov rcrb pop bound je test add add fidiv dec lcall test rcll inc mov dec mov fmulp push mov cwtl sbb or xchg mov cmc in and into push dec in pop xlat xor mov cmp int test lods (bad) out push shll jmp pop sbb leave pop insb cmpsl fld test cmc sub pop xor add mov imul std adc hlt cltd daa cmp and lcall mov inc mov icebp pop mov jge jmp mov inc lea fisubr or xchg mov cwtl jne movsb aas cmp pushl or pop push cltd xchg ljmp adc sbb jb add mov jge test sti das je imul (bad) add cli ds and cmp aas pop pop (bad) cli cmp imul sub add lret ret aad adc ror mov sar pop pop scas gs fnstcw movsl sub sub (bad) das imul out pop mov lds out dec (bad) cmp inc mov sbb push xchg jmp iret mov jp dec mov pop int3 cmp or fldl pop jne xchg pop out dec mov xor mov std in addr16 xchg repz icebp xchg aaa call jl push ja lahf lods jne shlb jb ss mov adc in push gs or xor add add imull in xor jb clc movsb mov outsl xchg test rolb testb adc es (bad) call pop push ror xlat (bad) mov mov jns sbb scas jns jb leave leave lcall (bad) ljmp mov cld movsl jb and or (bad) fs (bad) fild fldenv xchg clc push vmovapd sbb pop out fild pushf mov cli and mov sbb push idivb pop sar xor mov jnp add (bad) mov data16 ljmp idivl pop and call icebp clc stc repz out cmp mov test add mov leave not into ss adc pop pusha nop sub xor enter add or in mov aam in repnz test adc sub out sarb out lahf (bad) repnz push in (bad) rcrb les call stos and mov dec loope popa jmp mov xor adcb stos lret push dec loop mov das jge dec pushf push rol xchg dec sbb dec lret loope jmp jo or or rorb adc enter gs mov lcall xchg gs daa decb pop xchg loopne sub fdivs xchg mov mov shlb cli push or push pop mov pop gs imul repnz fimull jge imul test inc into lds mulb mov rol loope sub xor in daa aad xchg cmp lods aas add mov in ljmp in sub arpl pushf in mov lret pop inc add mov pop sti pop repnz xor lods xorl sbb stc movsb into int mov sub mov xchg iret mov dec insb dec xor mov daa loop and rcrl push sub into decl jne and xlat bnd aam pop mov push inc cmp jnp inc loope daa and scas call mov pop repz out jns addl cs das mov jle cld shrb cltd cmp or popa inc shrl pushf mov xchg out xchg pop std jae inc push mov (bad) xor rcl dec pop or (bad) xchg dec in roll loopne,pt negb add call scas add movsl imul (bad) xlat movsb rcrb jle fs mov rclb and adc icebp mov dec leave out push dec int jmp fildll mov or pop out add sahf stos fbld cld int3 shrb add std test adc xor sti int cmp pop mov and sbb outsl cmp cltd aas fbld dec out inc in and push stc sbb sub lret adc push add (bad) fcoml push inc outsl and add or mov jle dec shrl call hlt scas ret pop or mov adc mov aad add add xor mov scas ss jecxz adc icebp lret icebp inc mov pop and rol fucompp sub mov dec push adc mov sub add or cmpsl fsubl das in stos mov cli aad test pop test sbb roll cmp push cmp mov sub aad inc xlat jmp mov fdivl mov add mov jmp inc xchg and pop sub lahf jbe imul lock push ficompl (bad) mov ret xchg sbb mov idivb out das sub jle add (bad) setae out dec adc or or hlt cmp roll mov mov push lcall bound cmpsb imul mov inc inc jb loop xchg icebp mov stos out pop inc dec cmpsl in and xchg fdivrs jecxz sub cs mov shrb fs cli mov sarl sub xchg xor push mov stos fstl pusha (bad) xor cs pop mov and sub adc out daa frndint cmp inc inc mov rcl lret fs call mov imul sub stos clc das movsb push or push jl cmp and push ficoml jecxz rolb jl jp das shll and xor cmp jg clc in (bad) lret lgs sbb inc or sub jg popl sub xchg shrb push or loop repnz mov cs scas lods (bad) das cmp cmp ss push icebp (bad) sub xor out mov mov js mov and sub roll pop cltd dec insb rcll and push adc (bad) cwtl rol inc cmp pop mov mov inc pop lods rolb add stc and xchg xor dec dec aam repz loope rclb divb push pop fiadd fstpt and add cwtl jae leave jmp add push pushl cmc sub movsl adc stos sub test sub mov sub lods jae push mov std inc mov inc out mov test dec add cmp das mov std and xlat mov jl jmp popf jg fildl xchg ret pushl or in push repz sbb movsb imul xor sbb sarl dec (bad) push dec lret lea jp xor cwtl or jno xchg lret mov les sbb add faddl pusha mov pusha and inc les mov add xor (bad) mov lds add fwait ljmp push rcl xchg (bad) mov or mov add (bad) sub adc or push or daa mov mov stc ljmp mov jmp or pop xor push dec xchg mulb bound sub testb push xchg (bad) (bad) cmp int3 stc mov in iret mov and lock dec or xchg notl inc add xor and push sub jbe dec mov out fmull add xor sub in das mov jle pop pushf and cs pop fisttp je and xchg and insb leave pop ds addr16 (bad) jnp insl xor aaa jmp mov enter repz and sub rcrb xchg jne mov sub mov sub test cmp cmpsb pop popf fs mov push mov xchg pop mov repz aaa dec adc xchg mov jae pop loope mov adc and pop push mov into fucomp mov or fldenv stc out ret std xor mov sub icebp dec sub (bad) int3 xchg sbbb jmp pop mov (bad) jnp cmc sarb ret push jle push and mov popf cmp xchg in mov sarl stos bound enter out popa repnz inc cmp pop dec adcb lock in iret stc aaa stos lret (bad) out mov fisubl or add ss sub mov xor call xchg jbe gs and clc push idiv adc and cmpsb jns std xchg popa movsl mov fwait pop call pop push or enter mov iret cli add and inc lods sub ss cmp pop add pop sahf or fst jnp jecxz test mov xor fadds xor icebp imul xlat in cmpsl xchg stc xlat imul push dec cmc xchg rcl mov xchg mov rolb fiaddl shlb lret scas push xor xlat sub and dec das xchg subb (bad) push repz sub mov mov mov sub sbb mov add cmc fcmovnbe mov sub das xor xor push int sub and pop jb in lods dec je mov cmp scas lret mov icebp cmp push nop ficoml out lea or xor cmp (bad) pop mov adc push or outsb inc adc pop addr16 (bad) sarb xor (bad) mov or loope lds loop adc mov test xchg mov shrl cmp and scas ret jnp push jo inc pop and jl cmp sub fstl adc pop lea (bad) add sbb les ret insb gs or ljmp xchg push xchg inc (bad) pop cmp inc push or lods mov out mov mov push je sub cmpsl pop xchg pop or inc jle xchg mov push inc loope fisub rorb flds fsubrs pop sub sti popf xor (bad) pop je cmp loopne jecxz repnz pop pop sub aad push mov stos sub mov xor adc int rep fldlg2 mov inc int3 cld f2xm1 prefetch sub sub lods rcll and pop pop mov adc pushf inc in inc cs xor or pop sbb add ret shl push and sahf enter mov xchg and insl push push (bad) mov mov pop lock xchg fnsave les adc xor xor (bad) push ds (bad) or test sarl or cli out adc inc pop add mov loope,pt xor lock push jmp mov sub sarb sbb push adc insb nop or mov dec test push cmp mov jle and dec cmp sub movsb inc add fistpll pop (bad) int3 lds add mov mov aas aam cmp xor mov scas mov jp out (bad) and add pop gs pop dec divl jnp pop mov push mov push pop loope movsb xchg xor pop push and sub and ficom mov pop cwtl adc pop cmp (bad) mov and arpl or jo mov pop mov sub pop jno mov mov pop pushf rcl push xor (bad) (bad) cli in cmp adc bound mov jge cmp mov push pusha mov sub fbstp xchg pusha xor pop xchg add push jl sbb jg fwait sub xlat cmp mov xchg dec pop pop push int aas sbb (bad) mov xor pop sub add add pop in adc dec testl jmp fiaddl jg pushl popl pop insb xor imull push cld xchg (bad) sahf lret pop pop jne mov sub loop lret pop dec stos xor loop adc xlat out test scas lods xor and and int3 testl bound les and inc scas jb mov loope or xlat cltd add js loop fsub int push pop sub sbb lret adc adc mov jecxz sub das jno xchg repnz adc loop roll inc pop out notl std js jmp push xor jecxz nop out leave xor mov push out add fidivrl pop push aas fnstenv lods mov aad lods cli aam sbb add dec into test mov test xor pop popa adc imul movsb scas lods cmp xor xor decl pop shlb loop sbb mov adcb adc mov and outsb jne fcom into mov aad adc mov xchg call xchg jb dec addr16 add lret add adc sub mul xchg icebp adc and fisttp xlat dec push das sub pop add lds push cli jmp mov in and sbb sbb ljmp jp sub or and fwait and add mov lcall outsb stc in mov ret pop lods adc ja loope fistl loope ffree int3 mov mov and xchg shrl das icebp xlat adc test add add xchg test adcl cwtl call xor insb ret adc xchg mov add imull mov and repz adc push clc cmc sub js dec (bad) ja in cli or push or (bad) scas jb out fstps ret mov mov cmp push adc push imul push stos sahf popa das fldcw cmp ficomp fsubr cmpsb popf dec in rcr push pop push (bad) jecxz or pop jne jne xlat stc cmpsl mov push inc jne pop mov (bad) add aad fnsave inc mov xor push jno idivl sub pop in lods movb lret mov (bad) xor xchg jns mov fcomip int3 xchg popf pop adc mov les sti (bad) (bad) addr16 cmpsl ja add imul inc ja sub push pusha ret ret mov xchg int xor (bad) gs or pop int3 jl sbb inc testl into (bad) jg outsb lods fadds decb xchg push cmp dec stos int3 dec and into pushf sti push cmc clc dec and stc cmc dec movsw std cs lock mov cs out lret ljmp lods xor mov mov scas or add dec repnz adc (bad) (bad) jge pop pop dec in pop fsin xor int3 addl (bad) xlat inc add sub mov sbb leave and sbbl sub pop adc pusha cmpsb push ss pop jecxz push sub call or push mov fcoms adc mov dec pop leave into aam and mov pop adc test jp xlat lods (bad) out jle sbb sti xchg shll loope gs cmpsl pop fsubr pop cmpsl jecxz sti fsts mov push add push lds push scas xchg (bad) mov sub test mov cs call shr push mov sti cld call in ret (bad) sar ja xorl xchg cli (bad) fisttp lcall mov cmp xchg hlt cltd imul pop jl sub or (bad) (bad) es lret jg (bad) mov repnz in mov les cli or ljmp std xchg xchg mov xor or mov jbe pop jns and and sahf pop push mov mov clc popf int3 (bad) and mov xor jne mov push int outsl cld andl mov push mov or fmull push xor jge and in adc sub jnp out xor fs icebp xchg cmp lret adc mov add pusha sarb call mov negb dec mov push pop je pop int3 push (bad) sti arpl xchg sbb fimul push out in data16 shrb push add push getsec shlb loope pop mov dec mov mov cli and lods pop push pop xor mov mov push mov sub je lds pop lds cld xor vdivsd pop xor dec out mov (bad) jnp push pop faddl std adc and xchg add pop adc mov sahf cmp das loop shrb xor inc xchg xor jmp out in xor push mov dec test xchg sti inc xor ss das out xchg rcrl loop in sub or mov int3 inc pop ljmp and jle cwtl vcvtsd2si ret movsl lds les xor stc mov cld pop mov xor fadds clc hlt out jmp xor leave scas cld pusha vmovaps (bad) bound push mov cli and mov out and mov cs gs fildl and insb push es add jno inc inc fstps imul aaa mov xchg mov or mov xlat js xchg (bad) lock ja dec (bad) jge mov mov jg es mov test cmp out jo add mov divl (bad) imul push jp int (bad) mov bound aas xor or xchg mov enter xchg daa cmp xchg notl cs mov mov insb mov fist in fsubl lock add xchg inc mov rcll fnstenv leave (bad) je mov fcoml push push jl ret cmc dec xchg jbe (bad) cmp inc xor mov inc mov sub leave mov cmp cli lret mov add inc fdivrs sahf xor pop inc push mov mov fmull negl add jle push lret and (bad) sub sar cmp imulb iret jge mov outsb stc int3 mov rcrl in das leave push out daa mov pop pop ret adc add loope mov aas dec cli popf inc sub dec mull jmp cltd xor sub int mov mov cmp jo xrelease sub not mov mov jle push (bad) enter repnz cmp or iret cmpps cmp icebp xchg fistp dec es rcl lock add lret adcl xchg and test fist imul pop pop pop sti xor xor push in das adc sub dec mov test stos sub add bound or gs dec mov inc push or call mov mov mov push dec dec repnz leave sbb jmp into xor adc sub inc and push das pop loopne ret mov aam clc sbb gs adc and jmp jg mov mov dec lret das fsubs rcrb std lods xchg enter lret repnz shrl xchg in bnd cmpsb pop mov scas hlt rcll sti mov cmp daa in daa pop mov add push out int jg popa and mov daa pop sti push sbb mov movsl adc mov dec stc lods jnp push push add lret and ja inc stc add popf dec imul pop sub pusha movsl scas mov inc subl mov sbb jle and (bad) fidivr and insl jp jle xlat mov repnz shrl (bad) push lret fucomi (bad) push pushf cmp mov lock or inc push insb jmp incb pop out xchg out test xlat cwtl cmpsl xor ljmp (bad) or jne clc cmc pop mov jo or addr16 and mov sbb mov stos test stc jge pop xor xor dec leave aad pop ja mov fnstenv and mov xor dec (bad) icebp outsb into add push sbb sbb xor sarl sub out dec mov add xor (bad) imul sub lahf push ficompl mov sbbl (bad) (bad) scas sub inc adc xorb mov dec stos jno xor or pop cld and and stos pop cld pop loop or sbb pop adc xor (bad) ss adc fwait repnz cld lcall push icebp mov bound loope push rcll sbb repz ret daa or mov or repnz jp fs int3 fdivl mov sbb (bad) ljmp scas aaa push imul cwtl jbe lock (bad) mov fincstp ret pop cwtl ljmp or scas push xlat dec (bad) cli sub add cmp jae add mov icebp je mov adc sub call sub ljmp pop add adc int3 data16 xor cmc icebp js mov cmpsb adc sti fs jns jle je mov mov fmull adc fdivs or popf (bad) fwait fs test dec fstl dec and ja mov and (bad) (bad) repz (bad) mov push out mov or xor sbb hlt fildl andl push add dec (bad) pushl lods inc mov cmp pop adc bound mov (bad) dec push xchg jmp xor adc lods test (bad) bound icebp push pop fsub jmp pushf mov xchg popf fistpl in scas clc fsubl fsubrs mov fs jmp std xchg rol (bad) lret (bad) cld or adc xchg in out mov mov aas fsts mov dec adc dec scas cwtl into rorl jl sti es pop lret lret sub or outsb mov xchg adc pop push scas cli cmp jb pop into je repz stc mov push pop mov es mov popa fs sub xchg scas lcall cwtl sbb dec mov jnp mov pop push xchg inc mov pop pusha ss imul lret xor outsl sbb pop cli cmp push test loope push cwtl dec aaa add xchg popa push fiaddl add xor rcrl clc cmp (bad) out lea inc mov sub xchg out dec pop sub sti lret sub dec into cwtl cmp xchg repz ja mov inc xchg dec in test cmp fbld dec fdivl sbb sbb mov aaa ret dec lretw ret inc loop pop dec (bad) shl popf repnz and shlb or ja mov cmpsb outsl pslld or mov and imul jbe (bad) inc push adcl test (bad) je hlt fs negb stc (bad) xchg ljmp test xor scas repz sub pop loop leave loop into pop or in push mov cld mov (bad) mov jbe outsl jb sub jae or xlat xor and in sti dec mov pop sub (bad) mov jne adc dec leave fldenv leave pop movsb mov aam dec sub mov les lods adc test dec in leave or (bad) and idivb adc xchg or shrl sub add dec jecxz dec or xor add rclb test mov out out xor push mov fs mov cli mov aaa mov cld mov cli sub lfs (bad) inc cmpsl pop lds dec aad pop pop adc mov aam pop out jmp dec outsb out imul addr16 outsb pop pop cmp hlt mov jle push jp fildl or daa out jne dec (bad) call xchg dec dec and or mov jmp xlat fsts xor pushf dec or cld adc shll cmpsl icebp cmp stos add push mov lods sub leave rclb sarb and fadds (bad) sub lods bound dec sarl imul stos xchg cwtl sahf add mov ror mov adc or adc add pop lcall sub test sbb pop gs shrb in in mov pop sub fnop pmulhw push mov and sub jg sahf adc data16 mov cli repz lock mov incb mov mov repnz mov rorl imul mov push and mov jg inc or ficoml xor push in pop sub jnp xchg bound (bad) imul dec pop jp dec loop lret (bad) pop (bad) jne andl loop sub or mov (bad) mov idiv cmpsb inc pop mov xor pushf fcomps xchg subl jne loop pop mov mov xchg lea push shrb xor jecxz mov mov sbb or aad nop push xor loop out fs (bad) (bad) (bad) pop jno mov (bad) je in test cmp and jne lock test mov pop push popf leave (bad) aam fldt into xchg fistpll loop and xchg out mov jmp mov inc lea jns frstor test stos in sub clc xchg mov insb mov mov std (bad) dec xor pop jb sub mov mov lea in sbb inc sbb jl call std gs ds jge inc xchg (bad) dec dec (bad) lods sbb lret xor pop addr16 lods xchg ror dec leave outsb mov mov fildl out mov or outsb inc pop leave mov popa push jnp xor adc ja dec xchg mov imul ficoml jmp cmpsb ss or mov jne out push cltd sub ljmp fidivl imul pop cld rcll fs mov pop lea loope bound mov and pop mov add or sbb lahf (bad) push fwait jns inc popa fldl2t and arpl adc stc lock mov js pushf inc sub ja add stc xchg (bad) cli add add mov lret ja ret pusha sub shll and test repnz sbb (bad) js mov ds dec addr16 lea imul push lret cld test out fstl and adc xor int3 jle pop clc in cmp mov dec out and or movzbl and jp movsl mov and loop sbb push add lods xbegin leave divb adc lock lahf arpl fist xlat mov pop jnp loopew packssdw inc mov mov lret pusha and jo dec jns push adc lret mov or or mov (bad) testl call stc mov hlt fwait jmp adc inc mov dec cmp sbb sbb add sub and xchg insl push sbb stc and (bad) sti sub adc imulb call test xchg cmp mov cli pushw mov rcll sarb jo mov dec int3 andl xor leave repnz mov mov add xor mov mov mov pop xor push subb xchg pop in pop in mov (bad) xchg mulb ret loope loop inc dec out jl xchg push ds cmp pop sub cmpsl sub lret cmp ljmp test lret pop mov cltd sbb std in xchg and sbb das mov out dec mov int mov fsubl mov rcll dec out mov xor add mov cmp sub inc cli mov test mov xchg pop add dec rcrb aas add mov mov mov inc cmp out jl cmpsb dec dec in cmp adc adc insl dec inc lret mov dec jns pop mov call jb add (bad) bound cwtl and push inc sbb cmp sub and out lock mov cmpsb outsl leave cmp pushf rcrl mov loope ret push loop in sub inc and push pop pop cmp daa sub popf adc (bad) mov fisubr fs xor out adc dec sub arpl mov clc mov mov xor jmp mov xorb xor push xchg aaa push daa mov in lock cmp mov mov xchg lds adc rorl ret mov adc cltd dec int3 mov push lods cltd sbb das mov rcrb sub sub mov imul push pop mov jle push cmc scas ds clc hlt sbb imulb or stos divb fcoms out add dec adc notb mov pop out inc xchg mov popa shll insl adc (bad) je jmp dec cli mov popf jae jno popf inc js ds bound ret mov and dec mov mov xor call or mov mov mov pop mov xchg outsb sub repz and movsl (bad) mov faddp movsb or sti in mov sahf (bad) pop jecxz xor pop sahf sub ret xchg sbbl sbb ljmp dec pop mov pushf idivl andb pop inc data16 test pop mov or cmp sar testb sub in xchg sub fwait mov sbb pop mov jno dec pop jg add clc add mov mov jnp (bad) popa xor xor loop dec jmp stos mov mov in mov or jmp dec cwtl cld mov cltd mov repz out mov mov xor add mov je fdivrp xor lret or jle in out pop ds mov aad in pushf adc inc pop loop mov xchg push ds or ljmp adc loop sbb adc mov pushl xchg test add ret data16 clc push repnz xchg sbb mov adc rclb test push xor mov ljmp xlat nop imul leave jns cs cmpsl iret sbb test cmp adc cmpsl outsl leave adc mov out mov in add mov xchg xor push out out mov pop out jbe inc loope scas faddl das (bad) pop aad testl dec sti sbb xchg nop shlb (bad) dec cwtl inc mov mov jle xchg xlat out jno mov in cmp aas aas (bad) cmp push pop jb decb lods stos out dec xchg xchg jmp stos pop sub mov inc add add xchg and or pop in jle inc sub dec (bad) jmp mov das or xchg cltd and outsb rorb scas mov pop lcall push add pop gs mov xchg or rolb add mov push (bad) in mov jno pop test mov aas add pop ljmp bound lds ret loopne pop mov testl lret xor push lret xor cli adcb imul dec andb ficoml inc inc adc repz jle in cli loop les mov mov pop xchg fisttp cwtl mov push das and jne (bad) clc mov mov xchg iret mov add jnp ret sbb sarb cmc pop lods lods and imul sub add notl and into cs scas mov or dec mov dec std add sbb push pop arpl test mov jmp les pushf push xor out (bad) and mov sbb xlat add add int3 fimul lods int or mov jge xchg fidiv call mov dec mov inc mov mov out int add or mov daa ret into je adc out int outsl test mov sub imul fdivl out xor mov cmp xchg add sub cmc dec add jmp sar (bad) jle repnz add mov cmc adc jmp mov add loope lret cmpb pop int std ljmp outsb dec lret daa and jnp pop ljmp xor fprem imul ficoml std (bad) test jmp in fdivl fiadd sti cwtl cmp popf mov imull fcmove pop (bad) gs push outsl add cmp sub jb adc xor lret cli imul decl mov mov push push or xlat pop cmp jmp jmp scas lahf pop icebp mov hlt pop (bad) fs popf jmp dec mov lret out cs mov mov lret cs mov lret sub xor (bad) xlat jns movsl jle adc cmc ret or out adc or test fistl and popf hlt iret pop mov ljmp adc das push add or pop dec negl mov cmp pop jbe in mov ret jmp loop daa mov pop dec mov int3 insb adc cmp out sbb pop (bad) repnz jne test mov repz lea decl sub push inc daa add add and add mov jmp inc pop xor das cld aam (bad) cmp xchg out sarl sbb ss movsb lods sbb cli mov pop test hlt out int3 sar and sti push rcll and mov jmp or mov sub add rclb mov call xchg dec pushf add inc or xor adc mov cmp mov outsb je mov add test daa (bad) ja sub or pop lret dec lods dec and rolb add in and sub in daa and xor popa fist and fcompp push lret out add testb ret mov mov mov xlat and call cmp dec mov call scas fisttpll shrl lcall dec mov cmp mov mov es xor fisubrl dec adc xor pop loope xor sbb jecxz dec sbb mov cs out out in fsubl mov mov test adc jp,pn mov je out jb fbstp lea scas and sub dec inc xor inc inc daa push gs js sub add repz daa xor jbe inc pop loop mov push or pop clc push and repz mov jle cwtl test xlat mov mov ret out jecxz das call int3 aam jp test (bad) mov dec sahf xor cmc xchg sub lods pop xchg test mov loop addl push bound add lcall cld and lahf pop in sar mov xlat push dec xchg jle dec push xchg cmpb loope mov leave or xor and xchg jbe push xor ja inc xchg push sbb push (bad) ficom loop adc sahf daa imul mov les lret add xor inc (bad) lret and aad call divl mov aas jno add cmp cmpsb push mov pop imulb mov dec sar sub or jno xor jp dec jmp aaa inc xchg jo dec cmp add and das cltd sarl sub test leave scas clc outsb rorb add roll xorb push add pop lret lret cltd rcll jmp mov (bad) jnp test xor mov daa ret push xchg or repz jge rcrb lods pushl mov xchg in (bad) pop xlat mov das (bad) cmc xchg rcrb mov (bad) ja xchg sub jecxz icebp hlt pop sub repnz repz lret or fnstcw sub sarb sbb icebp lds shlw xchg xchg adc repnz and dec sbb mov sub (bad) pop popf xchg and fdivs or mov aaa lods push leave icebp cmc push add scas imul daa pop bound jno imul negb lret insb xchg pop fldenv lods mov push bound imul sub jp test rol iret fnstenv (bad) mov insb movsl pop jmp mov push cld imul pop call sub add jae xor push push sub and inc movsl enter pop mov (bad) rcrl mov (bad) mov pop push mov xor (bad) lret mov leave movsb leave loop jnp repz jno dec aad mov aas lods push mov mov mov and ljmp jg ficom ret mov push scas fstp popa xchg gs sub aad shr call xchg or mov add imul pop mov dec jmp fs adc cmpsl mov icebp xor rclb lret xchg scas das adc pop and cmp into (bad) mov cli and mov imul daa jne adc idivl fcompl push mull mov push aaa dec and xor mov jmp inc rol xor xor test daa pop loop or movsb aaa fildl fsubl icebp cs sub mov xor aas jmp ror into add xor sub cld shrl fcom out xchg ja jl or (bad) jmp mov aas dec jmp gs lret imul xor adc rclb inc mov or mov sub and mov pop add lds popl sahf xchg mov pop dec adc in pop sub popa xlat pop mov test jns mov std aad mov or inc pop test ljmp out mov mov cli ja mov das xor (bad) ljmp bound push pushf ljmp mov nop sbbl lcall lret sub or add dec xor or (bad) stc loop cli xchg arpl ret add add mov les inc js fstl xor jge or scas bound sbb fwait or in sti mov push jmp outsl or jne jnp dec cmpsb push sub (bad) lret xor dec push sbbl pop popa mov and icebp add xchg xor cld jae dec xor out push movsl test xchg test xchg sbb mov inc pop out and addr16 daa roll sub sub movsl leave fs sub into mov sub mov cmp (bad) ljmp rorb push mov aaa and cmp adc fidivr test (bad) mov adc scas imul fsts mov xor js pop lret mull dec in mov push insb push mov or xchg pop scas cmpl cmpsl push roll sub cs xlat mov sub jnp sub ss repz mov pop test pop jmp jmp xor xchg adc mov jmp and mov lods ficom or mov ljmp lahf mov pop xor ljmp sbb dec out dec movsl out adc (bad) (bad) fs sub ret pop pop lret (bad) stos add cmp xor cwtl adc mov outsl cmp iret dec and jle mov add sub or divl (bad) test imul (bad) adc leave (bad) pop test mov mov mov or and pop ret or pop xchg add mov push cmp in jmp cli (bad) mov jbe mov mov (bad) add and push inc mov add adc mov bound das inc pop sub das cmc adc out push push ds pushf (bad) out bound (bad) mov pop or cwtl or dec or fild adc mov sub and sub pop mov sub je cltd and les (bad) sub or push xlat pop divb jns dec je mov push pop gs movsl sbb and sub (bad) pushf xchg push (bad) cld push (bad) dec mov and sub into cmc (bad) jmp sub and (bad) pop cmpsl out mov or adc or xchg push dec pop pop dec sub cli xor jo out pop imul (bad) mov in test pop mov jge dec jne fnstcw inc push push in (bad) ljmp jb push add sbb cmp xor and jle and sahf xlat cmpsb jb and ljmp cmpsb ficoml mov add sub mov mov (bad) push sub ret jge and lret clc pop out cli cli addr16 xchg aam outsl push (bad) sub pop sub adc sub mov imul xor xor jbe iret add sub pop xor or dec sbb mov sub jns adc add (bad) push push nop das sbb cmc pushf test add cmp xchg fstpl daa pop mov add push pushf popf cltd mov dec fcomi push ja or dec mov (bad) inc cmp fldcw cld jns pop mov dec or add rcrl mov sub and or ret fld icebp shll xor movsb cli loop mov push (bad) lock outsb leave add cltd dec push sbb call fadds xlat jns xchg sti dec and xchg cmpsl cld (bad) sub xchg pop pop cmpsl les add xor in xchg pop divl sti xor cmc pop jmp repz adc das add mov das adc add js mov push sub and and (bad) mov adc aam inc add mov lods push bound ficom out adc lahf and leave aad test pop lods or pushf lea jmp imul cmp add scas sub imul fbld jg mov out int3 (bad) inc push mov cmp mov or fisttp ds sub mulb hlt ret sti mov gs out and jmp push (bad) cltd mov add cmp fisubr loope mov cmpsb xor sub repnz inc push dec pop std ljmp inc (bad) pand pop cmp lods pop and cmc mov iret or sub mov in std mov xchg notl and stos bound fldcw or pop push adc xor out and cmpsb or fcomps lahf xchg ss aam movsl int3 xlat dec jmp mov xchg roll jae xchg iret xor out mov xchg and sub xchg adc scas sub mov dec (bad) sub add pop ret and scas pop xchg cld movsl pop ret jge adcl push or mov push xor cltd sub sub icebp scas andl cmpsb cmp push ljmp jnp mov (bad) std jnp daa jbe lret aad rol push lock xor and mov inc scas ret and fildll add xor std mov out pop leave stos jo sub xchg adc pop bsf test add es jl xchg and mov add ret les dec or (bad) and (bad) sbb pop and and dec mov cmc sbb xchg adc cli or lret mov and xchg aam adc cli fisttpll pop xor cmp outsl lcall mov in lret sbb sbb popa xchg sub xor popf push mov shll mov daa dec jmp xor fnstenv je rclb and add ret stc imul sti xor mov pop fadd sbb out adc mov ja ljmp ret mov jmp mov mov xchg and or sbb pop mov ret sbb cmp mov mov mov jge fidivrl pop push stc fs lret push (bad) sbb and fisub inc das push sub xchg mov or popf outsl push sbb or or repnz imul mov imul imul push cmpsl jo add add cmpsl pop push scas test popf cltd mov mov movsb push lret lret int ds fldenv je or sbb stos pop out mov xor les sbb popf shrb jb je jns insl push mov hlt or loopne,pt xor inc or push dec push pushf pop cmp aaa std pop stos jp dec ret mov stos and pop sbb std into or out (bad) and ja jae inc rcr (bad) dec sub testl out js xchg push push ret jbe data16 add aam (bad) shrl sub (bad) sub jg orb push and (bad) movsl lret add in or inc pop sub sub dec xor (bad) cmp fdivrs xchg sbb cmp sbb or sub mov stc or mov and daa and jnp jmp int3 sub das clc aad ds xchg push bnd clc daa add mov pop lods sbb in stc test out repnz into mov out dec scas dec mov and inc xchg mov sbb cs mov (bad) (bad) jae dec cmovb pop pushf mov gs int3 dec iret mov int test jae dec iret inc mov ja fnstsw sub fsubrl les lea insb sti pop or adc fs and movsl rclb (bad) ljmp in outsb xchg stos mov loope pop outsb mov das mov jl push push loopne stc push lods fisubrl ret (bad) sbb das adc and dec mov popa pop mov das daa into jne mov jbe mull in xor mov xor lds mov mov sub movsl pop xchg mov stos and and addr16 and cmp ds xor sti sbb fs aam add dec and dec lahf (bad) iret push cmc cmp xchg (bad) lock shl sbb cltd fcmovb lods mull test push pop daa aad lret pop and ret jae mov and ret dec mov cmp aam inc sbb adc (bad) adc icebp add adc push sub cmc sbb cmc icebp cmp push inc aam clc add int outsb ret push mov ret xor xchg stc inc sub xor inc or cmp call lahf push push mov add divl inc ja idiv mov test test rolb xchg daa or fildll jmp test xchg mov clc adc mov or pop js or jae or inc lea mov push inc fdivs daa testl std mov popa (bad) icebp pop and sub add shrb add cwtl and mov mov dec xchg mov lods (bad) out dec ret or add xchg stos lret jg aam ljmp sub mov xor pushf push aaa ja push daa shll popa xor and jo ret fiadd push add dec and jno sbb add pop jno ljmp jbe movsb gs sbb mov dec stos adc call xchg scas out daa push push jns daa cmp outsb push cwtl or push sub leave test xorl jbe jo dec lea sti jbe pop in ja adc std mov call (bad) loop fimull jno dec pop sbb jbe inc mov cmp fstpt das fdivs in jge cld cmovnp cmp dec bound rolb adc das push lods daa (bad) sbb (bad) nop add and lret incl cmp daa neg xchg jnp jmp icebp clc push cld pop push mov stos sub loope shl push jmp sub and xchg pop or out push imul jp push jecxz pop in add push test je adc add sub test pop add mov mov push call add loop ret xor mov pushf and mov cs mov pop sub lds ror pop mov push (bad) aad inc pop add or push sub cmc out jecxz das leave push mov xchg pop rcrl imul pop push notb movl pop mov out and stc xchg repnz sub ljmp dec aad pop fnstenv mov jl repnz inc xor in pop mov or or and invd or fsts xchg in incb push cmp xor sbb aam nop das popa rol jp dec push xchg jp aam imul repz mov adc scas testb jb in mov push sub sar pop cmp dec add inc and movsl jbe push xchg repz test or adc (bad) mov ret movl adc cli test out push subb decl mov lock pop jo leave fwait jo dec and sub stos sbb cmp xchg cmc adc ljmp es leave call jl mov jle (bad) inc imul shlb xchg adc sbb mull xlat ljmp push adc cmpsb lds dec sbb out mov out sub xchg jecxz lods addb aam push lahf je das inc movsw fcomps mov addr16 repnz out loopne mov dec into xor cmp (bad) idivb sub push sub lret xorb sub shrl pusha sub cmp iret mov sti mov out and xor xor jo sub xorb je mov add out or xor rcl sub shrb sbb fs cmp cmpsl (bad) stc pop sti (bad) sub bound cmp jnp pop jno and xor inc sbb sbb push out rcr jp cwtl iret xchg fbld add bound or test into call jg aad adc dec inc mov mov in lcall mov and jl gs loopne js pop dec lock add mov pushf out stc (bad) lds mov cmp add sbb inc cmc xchg xchg (bad) movsb push xchg pop mov push lock mov insb and pop out lahf inc add mov icebp mov mov leave cmp (bad) scas int3 adc pop sub or and retw (bad) and xor leave push ds mov mov xchg or hlt inc pop and ljmp call je mov (bad) sti in testl add push sub xor les jl push fcoms sub mov xor (bad) pushl xchg insl inc arpl cmp das or out jmp dec fistl cmpsl push test jo mov pop leave mov mov sub push pop mov cmpsb mov bound push cmp in xchg mov (bad) mov push aaa add add jmp adc cmp xchg inc mov mov fisttpl pop xor pop jg mov add sahf add out add cmp and xor fnstcw pushf mov xor rorl sub and and into jmp mov cltd aaa jnp mov jnp sub in sbb ret push ss popa mov or pop gs or push lods (bad) add sub push mov in xor addr16 hlt ljmp (bad) or mov xor add fnstenv mov stc out pop cmp mov add sub adc xor add jecxz ret adc mov sub jno or lock sub or jns dec pop pusha mov and push pop std inc and in cmp in inc (bad) call adc cli mov (bad) sub outsb xor add call cmp and mov (bad) imul mov test inc fs bound out ja loopne xor mov repnz mov sub ljmp add or inc xchg push add push mov xor enter mov (bad) cltd dec sbb xchg jmp adc in push (bad) push mov mov js mov inc jg inc push xor pop addb stos and xchg cld sub lret pop jbe sub int3 xlat cs aas das jb push clc lea mov push (bad) pop (bad) jmp jg dec xor mov ljmp or xchg bound clc add lcall jg xor jae or and leave fnstcw test mov xor test clc out mov int3 scas sub xor pxor jecxz lret cmp dec xor je je cli movsl xchg lds in mov xchg sub cmpsl push mov pop sub mov xchg jo std push lock jno dec jbe lahf mov sub mov daa (bad) mov aad push dec out jmp ss xor (bad) or cmp xbegin jg cli pop jb nop movsb dec sti push xor (bad) sub leave fisubrl test xor jns or aad push mov out pop adc and and xchg data16 sub lods mov je int3 sahf loop inc inc mov lds sub (bad) popf stc add add (bad) mov add add leave pop adc (bad) sbb ficom movsl sub mov aad movsl stos mov mov sub pushf into subl pop pusha sbb jmp xchg rol (bad) mov negl fdivrs aad or movl xchg pop and notl fnstenv cs test inc (bad) into sub and jnp pop (bad) jmp jae sti xor lret into sub sbb leave ja push movsl loop push and mov cltd xchg sbb mov adc lret shr fidivl cld sub loope lret dec and xchg icebp ret inc rorl push jg mov sbb jbe xor mov shll xchg xlat lock mov rcl jmp (bad) xchg les stc scas cmc cli sub sub jne loop subb repnz xor add cmp push and ret dec and and pop mov ljmp sbb xor xor daa push push push xorb jge add push ja sub popa je outsl mov je outsl xor xor cli sub push xor fbstp (bad) push dec in adc sub lcall jl je (bad) lret sub and dec ljmp and jmp mov sub or (bad) insl pop (bad) mov stc imulb mov and xchg (bad) lahf dec lret (bad) or mov insb imul xor and jnp cmp dec fisubrl leave sub out popa xchg loop adc in ljmp xor xchg ficoml cwtl les mov ret mov pop mov fwait ljmp fnstsw divl (bad) je push ljmp dec (bad) ja imul and cltd dec mov (bad) (bad) rolb xlat mov (bad) mov inc cli or jns mov std (bad) loopne lret add ljmp (bad) repnz mov mov xchg adc dec repnz or cmp dec pop jno scas negl mov dec repz das push int3 cmp enter stos mov dec add enter clc and das rol sbb mov sbb jbe imul roll pusha xchg loop sub cli int3 psubusw mov int shrb mov mov loop icebp jge cmp fistpll rcr das xlat adc mov jne add push jecxz xor (bad) sub jb not test in mov jbe js test mov daa rcl fs dec stos dec cld fimull jg xor data16 inc push mov add notl scas mov daa adc mov aam jo test inc movsb sub xchg jmp stos mov or add movsl movsb daa ror inc clc push xchg mov cld out mov das (bad) (bad) mov push aad (bad) repz xchg icebp xor (bad) cmp (bad) scas or sti stc imul mov sbb sub dec jne lods mov adc or (bad) mov rolb cmp lret insb adc sub inc jb or bound dec hlt sub shrb mov shr (bad) mov mov shrb outsb es add mov mov sbbl cmpsl test cmp sbb pushf (bad) jns jle xchg in inc or mov cmp ljmp (bad) mov dec negb add pop jno adc jmp stc lret divb mov push mov xor divb pushf dec sub push mov mov pop das rcrl mov sub xchg xchg cmpsb mov (bad) jne (bad) hlt mov xchg loopne out movsl into mov ljmp or xchg sbb imull cmc or push outsb xchg cmc dec pusha cs mov pop xchg imul (bad) mov imulb aam push je (bad) xchg enter fwait adc out lret mov dec push add sti jge cmp cmp lock pop subb mov pop mov bound push fstpl lds std pop lret jecxz cmp or xor pop sbb or add cmpsb or cli pop ror negl mov mov jb jp das repnz mov das mov aas arpl pushf or data16 xor xchg ret mov or push xor ss xorb out jl (bad) sub test sti sub data16 divl push sbb and daa jae xchg xor cld mov cmp xor push xor sbb jmp mov mov (bad) pop mov pop (bad) sub in inc addr16 pusha mov popf inc mov pop xchg xor icebp aas sbb test adc icebp mov (bad) icebp mov and pop mov xchg cld and ja ds (bad) repz add adc lods gs or cmpsb test leave lods (bad) das (bad) jo push ficompl pop icebp add enter inc js mov sbb add nop adc pushf imul (bad) and dec dec and sar and out repnz adc rorl (bad) ja scas mov mov (bad) mov pop rol incl cmp add movsb dec movsl movsl mov ds lods inc dec scas popf mov fdivrl dec xor mov xchg (bad) sahf clc bound xchg loope sub jl call adc cmp mov xchg mov xor movsl jns lret pop push mov test jne rcll sub or add mov push insb jmp and cmc cmp test push add cmc xchg or add mov xchg dec notl leave fs into sbb movsb aad out mov add and test cmp int jmp notl jp add mov xor mov ja popf rorl lea inc sub push adc add ret xchg repz or (bad) mov adcb push ja fistl adc lds (bad) (bad) or (bad) mov sub jg inc jmp sub adc mov ror or mov cmp cli sub mov (bad) repnz mov xlat sbb mov shr outsb mov aaa and stc pop enter enter pop sbb sub std mov shrb bound push jo sarb in mov dec and daa pop xor and xor ds out jge sti dec pop or jnp xchg sub pop sub jne in push mov subb inc sbb inc movsl jge cli outsb jnp pop mov mov shrb fneni(8087 into repnz xchg fidivrl and mov push jnp dec pop in add cs rcl mov sbb daa out add and or jmp dec cs mov sub dec add jmp mov add ja not in out dec sarl nop in (bad) xor sub sub leave or mov je (bad) fnstsw sbb ljmp into add lock mov in adc mov popa out sbb jge mov movsl or sbb into cmpsl sub sbb (bad) xor jno or jge cwtl or fucomip and dec mov push (bad) int scas mov mov stc daa imul jg (bad) (bad) shlb xor mov pusha loopne xchg jns dec idivb movsb xchg jbe lcall int3 ror pop out cmc in and out cmpsb sahf jl pop xor popf out in pop mov cmp adc xor sti loop (bad) xor mov xor mov imul add jae (bad) mov sbb inc call repnz shrb and mov and xchg (bad) mov enter pop jb mov iret xchg mov ljmp cli adc mov leave sahf add ret mull movsl jae push fidivl scas repz pop (bad) fs add ret add mov adc cwtl mull sub movsb aam stos lods mov sub xchg test cltd push movsl adc jp outsb in adc push or lret into push inc fcoml jecxz shrl mov jns stos pushf or cmp sti xor and push push das pop mov push xor mov (bad) mov pop arpl dec gs pop int inc subl jo sub mov mov cmp lret clc add gs xchg adc (bad) mov xlat idivb shlb stos imul dec decl test jnp sub inc dec xchg mov (bad) lret and mov call and sub xchg in sub xor xchg icebp imul jo into imul rol lret xor ret jp (bad) mov ljmp sbb sbb adc lahf push adc dec push mov add mov jge daa mov (bad) xchg bound jge or mov sub into mov xchg (bad) mov outsl jnp jae pop subb xchg push sub call and push pop lods or add xor or or idiv cltd and mov dec and xchg adc scas cltd xchg and mov fcoml jge or mov and sub rcrl popa imul push ds negb test scas jno or cmp enter int3 aad pop pop lods loop sbb inc popf cltd add jnp pop xor add mov and mov and jmp and push daa pop adc pop cld xchg xchg xchg jge cmp and aaa fisubrl rolb shlb bound dec and inc fiadd out jne mov mov mov mov mov mov loopne sub jle xchg (bad) dec fcmovu adc dec pop fcoml pop add dec iret dec sar in cmpsl inc (bad) imull mov sub out sti push scas ret push xchg mov pop fisubrl test sub subb mov jl pop out push pop xor mov xchg mov aam push mov pop xor jbe dec add pop push jne jmp pop ljmp inc mov and das jge adc add add mov xor lahf push (bad) pop and stos (bad) test jne nop shrb or sub fisttp scas pusha dec and sub cmp ficoml mov out dec js inc andb dec popa or add xchg into jl jo xor ja push notb (bad) dec xchg or daa sub lods lds adc lea arpl add into outsb dec mov dec push dec les pop mov je jmp adc push pop sub jmp mov mov sub xchg xor jmp cmp pop pop inc xor or cmc adc xchg xlat adc add xor mov mov cmp xchg and xor sub notl xchg dec std in mov fstl (bad) jb inc mov jg jae and push push jmp and aam inc sub cli call mov insb lds and repnz sbb push lret jne push (bad) mov ret jnp jg push pop push js cltd sub push xchg sub pop fdivs dec mov lods adc mov lds mov mov add mov and lret xchg sub xchg xchg mov jl ret mov adc into movsl sti into adc and sbb xchg sub xchg push lea xchg and sahf xchg mov shlb pop jmp lret (bad) sbb add insl shr stc adc repz div mov sub pop xlat fld ret stos add mov call lds (bad) xor mov fnstenv or daa icebp jo mov lods cmp cwtl shrl jmp lret or adc mov mov xchg add mov mov and sbb mov movsl pop (bad) sub xor scas fimul inc call or scas add dec jb sbb dec cmovp das negb jbe pop mov enter lock jb mov mov add outsl mov xchg adcl out dec or add add add pop add aas sub std lods insb das adc cs sub pop popf push cmp loop in in add loop push fnstcw cwtl or xchg dec dec notb xor mov and lods gs out mov cmp xchg lret mov push mov mov push loop adc add lods jo mov and rorl add jne dec add popa fdivl lret mov dec pop xchg std push popf (bad) (bad) mov xchg (bad) lea cmp bound leave cmp sub inc inc mov cli (bad) pop leave push (bad) inc push mov imul sti ret jmp xor push inc aas lret insb out mov insb (bad) mov (bad) cmp xor mov stos lea push mov dec stos sub (bad) mov (bad) sub jle (bad) cmp and cwtl (bad) mov mov lret mov out sub and xor mov or and xchg mov mov rclb mov add out fnstenv jl dec fstl iret push (bad) jnp inc mov in insb add out mov xchg lods out in into pop or add inc inc jmp push sbb loop ficomp popa fs es pop scas push test cs jmp lds or idivl add jg adc iret popf hlt (bad) leave jg out cmc inc sti xor mov rol dec ds sub int sti xor push inc jmp xchg in scas mov push imul jp push int3 inc mov cmp sub int3 cmp pop cmp jbe pop mov pop jb xchg sub fwait ljmp xchg xchg pop sbb ds push xchg fisttp pop cwtl or or in (bad) mov gs or add add clc std jnp roll stos cmpsl pop push and inc ret out push mov mov sub enter ja sub arpl and sub push idivb push ss sub sti aas mov xchg jo cltd xchg stc ljmp daa clc nop dec ljmp leave jle pop push dec mov repnz pop (bad) sub mov or imul jmp dec ret mov mov mov inc notb ss adc xor add mov cmp adc outsb sub add std jecxz jmp std jo out lahf in inc mov sub cltd mov jns dec mov bswap push cwtl adc and cli pop jb insl mov push lret int3 xor mov mov cmp sub data16 lds xor jae and loope leave jbe adc inc lahf jl into ja mov arpl xchg mov shl sub push fsub add xchg and add pop cmp xor push push pop push mov pop cs xor xor push or mov or push es pop inc nop push and icebp xor pop ret jae les shl cmp cmc mov bound int3 or pop dec add clc dec jge push mov lret push jmp add fstpl lds sub pop movsb iret lret pop mov daa pop mov pop add push xchg push insb lcall ljmp mov lret mov scas xor ljmp pusha fwait repnz subl mov inc rorl xlat cmp jmp test push mov fcomps ret push xchg mov dec out or pop cli (bad) out fisubrl xchg xchg cmp mov push add shll sar mov adc inc enter sbb mov or cs sbb add push xchg push mov movsl sbbl cs pop mov jp ljmp aas sub xor aaa adc pop pop mov lret lds jns or ja jp cs pop add jecxz pop mov jne cli push ljmp sub pop imul push push mov fstps sub push dec sarl and imul or aam push jge in fldcw (bad) pop pop jmp xor xchg (bad) adc (bad) (bad) loop dec sti sub aaa adc (bad) in dec ss and lods push jno jnp push sub pop sbb iret jns rorl call add lahf (bad) ds add test fist mov xor xor xlat mov leave pop repz mov icebp xchg cmpsl jl leave decl inc fisub test out daa sub xor das into inc ja fidiv pop mov (bad) jns dec fild jl xor inc xor ret mov pop bound lods sbb dec sub repz push add les pop cmp mov pop push push or mov or andl sbb pusha dec repnz pop orb sbb lcall loop jmp nop in push dec notl icebp bound mov inc lret stos sub inc xor inc int3 bound std mov xor lods clc out pop loope sub sub shr xchg ljmp (bad) xor xchg mov sbb aas adc clc cld add xchg mov lret pop sbb leave mov pushf jne das xchg jno lret inc pop iret sbbb seta push sbb and fs stc call imul lock xchg adc rorl dec sbb add lods dec xchg (bad) lret mov mov es mov pop imul inc lods push xor jns movsl decl mov nop adc imull mov mov sub push mov mov xchg sahf sub jne bound js xchg fldenv call mov pop lret jle push push test add aam jae ss pop and mov sbb sub js pop adc and add sbb (bad) jp push out negl leave and pop loope xor (bad) mov into and in mov test add sub xor out movsl arpl push cmp lret pop adc push push push scas pushf (bad) inc add mov pop sbb fcoml jecxz sub sub push xchg adc mov dec fistpl pusha lahf fmulp lret negl lahf dec loopne (bad) es popa iret add cmpsb dec cmp ja cpuid jge jl (bad) popf stos call mov jmp push dec into test shl jle ret sti fistp popl lret mov insl mov das stos jb pop xchg test dec xchg mov adc jo fistp stc das mov mov inc inc adc xor stos cli cld lds ds dec mov repnz and mov sti lods sti and sbb add out mov pop repz lretw jo pop and push cli out das (bad) jne (bad) mov (bad) lods cwtl or xor add xor cli mov pop lret lcall sbb in mov and movsb inc sbb or lock add in out ffreep xchg es les imull aad mov sub bound and push fistpll pop pop in in ljmp imul xor mov xor and scas xchg xchg in out cmpsl sbb or mov loope jno push mov and and cli bound std jecxz xchg out add out inc out and stc movsb pop jmp (bad) bound jg fstpl int3 inc jl dec mov into or jmp fwait push pop xor addr16 iret push adc les sti mov xor (bad) icebp and sub add pop repnz cli xchg aad xchg daa jmp xchg ljmp mov cmp (bad) sub clc dec cli stos fs pushf mov icebp sarl push push cmp stos dec cwtl add sti mov and (bad) fistp (bad) (bad) jno lods hlt xlat loop (bad) aad inc ret add ss mov lcall test mov scas fs out out sbb xchg ja adc jmp aam jne xor jmp loop sbb lret pop pop leave pushf add mov out or push out adc iret mov or clc stc leave imul jecxz adc sar lds xchg ss cmp jmp cmp sub ja fmuls stc ds xchg repz rolb push cs (bad) repz xchg ss (bad) in stos popf adc push inc movsl lods lds (bad) push or sbb pop push xchg cmp movsb adc mov xor test pop mov lods call les sub pop out mov inc adc dec and and sbb add (bad) sbb negb sub divl or test and xchg mov mov clc leave xchg mov cmp push push sub pop jl or xchg xor mov fisttpll or insl cmp lret sub pushf aad loope pop xchg push popf out dec (bad) bound pop xchg cmpsl mov bound sub nop adc mov (bad) mov and sarb daa fstps jl fidivl popa das pop je jecxz icebp mov cmpsl push mov into pop xor fidiv testb lock or lahf fistpl idivl push and daa sub div outsl or (bad) stc call mov cmp dec push adc pop dec (bad) imul lcall les idiv stos popa aam cmpsl ss sub ret cli fnstsw movsb mov (bad) mov daa xor inc daa push jp imull mov push jge lds lcall sbb xor add scas out inc enter cld pop repz shl xlat je outsl mov xor pushf sub das mov imul jmp gs lret sti pop mov mov push adc mov pushf insl lds dec and adcb hlt sub mov push push mov jne cmp clc in movsb xchg icebp xor jle negb dec ret fisubr fcomip mov jge sahf int3 and add decl xlat jle adc test sub lcall mov lock push and mov loopne cmp hlt pop and and pop or mov xor outsl es popf jmp add daa lret nop imul sti add mov (bad) cltd ljmp mov xorl jl imul stos (bad) ds dec mov xchg mov cmpsl pop adc je jno push jno xchg sub push lods or test jp movb leave xchg xlat pushf sbbb enter sub ljmp sub test addl cld dec dec mov mov dec cld jge pusha ja dec mov (bad) jo rcrb sarl loop pop repnz lds add mov lret sub mov in mov es (bad) sub or mov out pop xor xchg leave lret jg add jmp xchg inc sahf xchg pusha or mov loop (bad) incb (bad) std jmp mov mov push adc jmp mov jg lds jl pusha sub add lahf fimul inc and push into insl or movsb mov adc xchg loop xchg pop lret xlat xor js mov (bad) push enter cltd int3 sahf incl sub cmc dec inc and cld adc cli mov xor das and push xor in dec pop add mov fmul repnz rcll loop mov cli pop les lock xor mov push sti repnz pop dec outsb mov adc fdivrs xchg push cmp dec xor stos push dec mov out popf aad loope mov gs sub roll pop cmp mov dec jg or and add adc xchg pop sbb adc or adc or ret xchg add iret sbb loopne xlat mov jnp xchg imull hlt sub fsubr lret or into fldt and dec inc mov inc and popa pop cmp mov scas and pop (bad) cmpsb xchg pop rcrb div gs out (bad) loop and cld inc shrb test xor lods cmpsl sub pop or mov das and add out adc cld rcl pop je loop (bad) xchg scas xor add jmp scas sub pop insb adc (bad) or aam mov repz (bad) ds gs (bad) and iret into arpl (bad) std adc xchg movsl inc or out sbb pop ftst leave fdivl add divl movsl push adc cli mov inc fwait sub je mov mov xchg outsb dec mov iret adc and adc scas pusha popa out xor clc sti pushf add jecxz pop pop fldl sub daa add test mov mov fst jbe sbb les push xchg out mov or add data16 mov push xchg xor fmulp jno,pt push (bad) lret (bad) ja add sub pop fstl cs outsb xlat stos out adc fisubrl leave xor call leave cld std inc (bad) dec inc sub mov stos sarb fist mov ret loop push out imull aad mov cmp into outsl xor adc mov mov sbb test sbb (bad) xchg rcll jmp lret lds jecxz pop int3 pop or xlat out gs jecxz aas popf or ds xor jbe and (bad) mov adc (bad) mov mov pop cmpsl xor push testl bound lods xchg inc loop add aam bound fwait mov pop xchg add lcall repz (bad) xor icebp daa out push scas pop xor xchg (bad) fs iret das sub repnz xchg icebp push insl and (bad) pop out sub movsb jecxz mov jo daa into mov (bad) in jbe add mov das mov scas into ss leave jno movsl inc scas icebp xchg adc inc pop scas int jle pop adc fucomi (bad) dec jle cli lret mov pop sub popa and mov cmpsl xchg dec xchg fistpll xlat mov pop lcall ds inc jo add in in jg cmp mov out xor sub and pop fbld enter cmp repnz push mov lret or mov add xor mov mov xor ja and iret in mov mov xor rolb loopne sub mov dec mov ret pop cmp push pop push icebp cli dec dec xlat icebp cmpsl xchg lahf inc jno out mov ljmp outsb data16 add (bad) jae repz mov int3 bnd repz xor push icebp fiadd sti int3 and movzbl mov call push mov cmpsl cltd (bad) call dec mov sub stos xor stos push mov xor repz xor push pop pop lea aaa jle xor xchg xor test pop dec (bad) in or wbinvd dec and xlat cmp push popa stc add and ret lret pop out jecxz sub movsl je push xchg cmpsl ljmp call shufps rorb ret xchg fidivr into hlt add divl mov xor repnz sahf dec xchg outsb mov negl sub (bad) jns xchg xor add imul aad rcll pop movb xor (bad) sub jmp lock sub mov and in movsb sbb scas mulb push cmp mov xchg or in fist dec inc adc (bad) or pop or sub sub xchg (bad) or xor push adc insb xchg gs mov dec sbb fs std fwait pop mov jmp lock sti xchg pop mov out out pop mov rcr daa and movsl push jae daa popa jg dec xchg pop test fild sub outsb lods push pop fwait lret pop add lods mov and into add jge icebp and fs cli mov inc cmpsl pop leave add sub stos cltd stc cmp int3 or mov inc push sahf push push leave or rolb sub jp xchg mov jmp stos pushf fmull dec into stc mov add mov mov push add sub adc dec scas mov ljmp xchg cmp mov lret mov xchg ret cmp push pcmpgtd sub mull test add shll pusha xchg xor sbb xchg sbb jb cwtl jmp (bad) jo add cmp stos xor into sub mov or cld or repz push dec shrl out jae push out repz adc xor icebp xor jns aam bnd sbb lret divb pop bound sti repz testb ret aam daa (bad) jg add out bnd or and sbb js in sbb divb pavgb (bad) pop push and (bad) clc insl outsl aas js add inc dec fistl push in arpl sub adc mov mov call jmp ret xor int3 movsb das and repz sub stos movb in scas jbe adc fwait nop out mov xchg hlt xchg icebp addr16 xchg mov sub xchg xchg in clc (bad) xchg lds loope fwait movups lret cmp push pusha cmpsb or popf in pop push ret add mov mov jmp sti into pop sub sbb jbe xchg cli add idiv sub sub mov je ret and add push mov cmp jnp cli pop mov sbb inc and mov movsl push cld imul mov adc (bad) mov data16 fistp sub xor icebp fbstp jmp insl or cmp (bad) (bad) jmp ss jo pop inc sub cs pop (bad) add or dec push (bad) sahf rcll cli push fldl pop inc pop pop mov jo lahf cmp pop and (bad) outsl pop into ljmp xchg popf rclb divb pop gs in and (bad) outsb call pop mov xchg aad nop jbe dec fs sub pop scas mov pop insl ds out xor sbb iret out add test jno ret pop insb fisubl imul ds mov negl lret scas add mov xor jge xor (bad) mov add mov lods sbb cmp push jmp repnz mov xor jnp mov fldcw and mov in cmp ffree movsl mov xchg test fisubr jnp cmp xchg das fdivl out jnp fdivs pushf cmp inc fbld adc cs sub add call mov data16 divl inc das dec outsl je cld ds xchg mov imul leave adc fstpl ljmp cmpsb xlat mov adc leave cmp dec mov loop fstpl loopne xor (bad) jnp (bad) xlat mov clc pop dec mov dec lret add (bad) ja mov sub fcomps gs mov add cmpsb jle addr16 cmp ljmp push daa jecxz lds (bad) stos bound add inc lret dec mov jne lock ljmp xor adc mov mov out cltd subl cmp mov xor and or int and test mov jecxz sub hlt push add in push shrl cmp ret or mov pop movsl aam in inc mov jns cs jbe jmp xor xor xchg cmpsb pusha lds stos jbe mov (bad) ja mov cwtl push adc test pushf cld (bad) dec les data16 test movsl test out adc fs les fcomp pop loope jne jae mov (bad) ja and iret mov popf jae daa mov mov lret mov jmp dec pop sbb xchg cmp (bad) sbb mov mov pushf add xor jl stc or test loope inc aaa or ljmp mov hlt mov lcall shrl fstpl mov add lret loopne mov push lods lods cmp je mov and sub mov in imul pop jecxz jecxz je push notb fucomip aam xor jbe sub insl inc or push fsubrs xchg aaa xor iret pop and js xor sahf add pop sub jnp pop dec mov dec repz popa das rcrl cmpsb mov faddl in int loope and xchg add lahf mov rcl push bound push push sti cld xor xorb mov adc in (bad) jb icebp daa (bad) jbe dec mov push pop dec aas pop mov daa lret xchg fiaddl push jg sbb loop xchg mov mov clc loope mov cmp test xchg dec xor loop in lods inc (bad) rep sbb test out mov push xor mov leave cmp push mov mov lods daa or (bad) (bad) dec cmpsb scas pop sub hlt imul pop pop sbb and xor sub xor jecxz fs (bad) scas les mov out xor les fs jg mov adc sbbb ljmp push arpl sub fs or mov mov mov xchg push aam (bad) sub add test fucomip mov clc (bad) arpl add dec ja sub xchg mov stos xchg xlat out push push mov and inc mov or xor cwtl mov mov (bad) dec out xor into and mov mov sti mov xchg popa sub and mov mov push ja push xchg mov pop (bad) mov jnp inc sub push xchg lea hlt mov shll pop xor cmc lcall icebp shlb or dec mov fucomp fistpl ljmp jb sahf push (bad) mov out mov call pop pop cmp ret dec mov into adc jecxz xchg (bad) gs jmp mov aad adc mov out popf aam pop (bad) sub xor rclb in out fnstsw ret pop in mov mov ret cmpl pop xchg pop add (bad) sub xor mov mov or dec pop icebp fmul ret jb lret push and (bad) sti pop or cmpsb (bad) mov xchg sub sbb ret imulb or xor out xchg movsl hlt out xchg daa mov movsb mov and outsl test out mov pop mov mov cs (bad) or jg or jbe into adc js repz cmp sub push mov sbb out (bad) push xchg negb push xor and rcrb cmc pop icebp pop les ret vpminsw adc sub cli pop mov lret dec inc mov int3 les push lcall (bad) ss rcll pushf rclb add mov mov add pop or aad sub cs (bad) mov fcoml lcall mov sub push scas mov mov sti jae jmp mov cmp mov pop imul in jg lcall mov lods add cld adcb aad xor pop jno lods ficomp das push push jmp jle gs (bad) pop int3 sbb mov sbb imul xor call push in and push mov add scas lock stos lret cld in jo pop xchg adc mov sub mov adc and cmp xor and scas test mov mov jne,pn faddl pop cmp (bad) into jmp jmp jle decb adc ret loopne fistpll sub fsubl push gs jns sarb loope mov les rclb jle cmpsl ficom xor lahf ljmp xchg xchg loope push clc mov fs mov dec jo inc add mov xchg mov ror jmp inc push sahf sub push lods push inc mov cmp outsl mov pop stos insl inc std iret das cmpsl shrl out sbb dec (bad) mov and sbb push pop xchg in and test lods movsb lods mov inc (bad) stos (bad) mov xor sub mov rclb and je mov add sub (bad) dec mov (bad) dec mov and add pop mov jg call stos je decb clc dec cmp fcmovnu pop out cli dec popa daa (bad) add jbe pop pop and cmpsl scas in cmp out cmp cmp mov jne stos and enter add vmovaps jne mov das or xchg aam cmp and cld mov pop and mov (bad) mov mov inc imull fcoml or and or jge aad movl mov fwait jnp add lds pop and push pushf inc pop ljmp pop daa add jecxz add mov sub xlat (bad) mov and ljmp aad shrb pop mov outsb cmp repz or cmp and ret ret add shll test test movsb (bad) adc mov iret test dec dec dec adc and sub mov roll mov aad (bad) pop icebp ds mov pop fwait out clc into (bad) push out pop jnp xor fcompl loope xor or int3 sub fist (bad) (bad) je adc das sub jle loope mov jl cmpsl scas add lods add js shl das jp mov xchg outsl shr sub xor gs jp scas out pop add inc add ret adc ret xchg add into xor test stos adc xchg inc add fildl (bad) loop (bad) xor jle mov push test stc mov mov iret or popf fist das or xor inc pop call cmpps push jae fstl jle imulb aaa sub dec scas mov (bad) sub push pop ret lret mov (bad) fistpl xor les divb sub sbb cmp mov js sbb fbld in mov jmp outsb aaa mov inc popf lds mov inc adc xchg ja flds push stos int3 (bad) in xchg pop and icebp call in rcr mov sub push pop mov push jno dec jns push rcrl add lods das insb jle mov jmp shlb dec xchg push fistpl mov xchg scas or ja sbb sub xchg mov jmp add iret scas mov dec inc cmp mov add repnz or div in mov add out stos fs cmc mov pop stos dec cltd lods ss pop add jne mov sub jp out leave or mov and cmpsb (bad) (bad) es pop xlat dec lds push adc dec lret not stos adc or jg imul cmp and ret xor leave adc mov (bad) imul inc sub lods inc cmp jmp scas mov and xor hlt ljmp xchg mov (bad) dec sub add sti xor jmp cs sub lods gs lock mov push jp jge dec and popf mov or xor mov and (bad) out dec pushf jle pop shlb push or adc lret add (bad) lock ljmp sub ljmp dec out xor dec scas adc cltd pop add add sub orb (bad) push lahf pushf lcall addr16 lds outsl bound inc into daa sub inc out jg (bad) mov ljmp repnz mov dec dec add (bad) xor push mov fsubs rol scas les das and pop sub out add and in ljmp gs fs fs mov pop push and sub xchg push stc dec stos (bad) sbb cmp adc add cmpsl (bad) jno movsb mov cs jne test sarl lret into mov repz dec (bad) clc mov xchg int adc dec sbb jb or and mov in xor imul sub (bad) jnp das sbb stc jne addl and mov sbb xor mov insb leave dec cmp push and xchg ret repnz fs cmp pusha das loop shl dec arpl ret mov je adc inc jge (bad) jecxz test pop mov jne xor dec cmovns lcall or fsubrl adc call pop or stos shr cli (bad) xlat (bad) cltd cmp xchg pushf sbb and mov or (bad) xor xlat inc je dec pop not aam jmp sub mov add ret mov sarb mov jmp adc add jno test push mov add xchg sarl data16 xchg sub movsl adc in mov lcall stos lret adc (bad) xor xor cltd pop jb jl sub lret adc mov outsl jmp icebp dec dec ftst add idiv xor jne and enter daa in pop xchg sbb out or inc sti test lret shr cmp sub pop lret pushl xchg sti addr16 enter (bad) xlat loop inc jb xchg adc or jbe test subb or xchg ret fdivrs js cmp gs mov inc pop mov gs mov push lcall xchg mov push cli and jecxz je pop (bad) fstpl lret pop sub mov dec sahf ret adc push jl mov lods in das or je ret xchg mov push lcall adc test mov enter loop and leave pop push adc fwait jp (bad) ljmp fidivl jecxz sub out mov push mov inc fs sub test cs pop lea sbb sub fcmovne ret pop adc xchg inc mov lcall (bad) ja in (bad) testb inc repz dec lret mov (bad) adc pop xchg stos (bad) (bad) mov xchg imul and loop (bad) mov sub jae pop repz sub clc out ret or inc loopne push sub lret ret ja add mov pop sbb push movsl rorl pusha sbb shll iret xor ret cwtl (bad) movsb dec mov or imul (bad) jb shlb sub test jle and xor adc gs push ss test or nop (bad) scas sub test push rcll jae xchg jecxz movsl dec sub aam fwait xchg pop push imul lcall cmp aad xor out add repnz xchg mov addr16 jne ds dec mov imul xchg (bad) cmp out stos sub mov mov mov gs sti mov in cli cwtl dec inc xchg push jecxz (bad) push dec push inc cs in leave out popf sti xchg adc jmp daa dec cwtl nop ret inc inc shrl inc dec xor mov pop or sub xchg test (bad) mov daa (bad) jb div jno inc into mov sbb lds or stos in bound xor inc dec stos ss mov call test fistpll gs mov or out push test fsubrs fstps popa sti pop sub bnd mov pop sub pop lods in mov dec (bad) xor repnz jg je push sub insb ja stos test scas jbe xor cmp sub mov dec pop add pop test mov xor loope mov push (bad) sub add push (bad) popa in out iret mov mov jl loop sub imul outsl adc mov shld in jmp dec mov sub inc mov dec lret pushf and sbb cmp hlt mov aad inc or lds push and sub mov sub das mov sub xor movsb push out and out pop xchg incb ret xor repnz dec outsb pop stos cmp cmp mov xor andb mov (bad) fsubrl jmp std pop out mul gs sahf dec test mov inc xlat add or and loop call mov inc mov test sbb mov sub stc dec mov push cmp in adc cld add jmp and pushf mov lods fildl inc rep dec cli sub pop and push mov mov (bad) adc pop stos push je enter scas jmp popa ljmp (bad) fstpl cmp ja repnz daa and ret lret inc (bad) or test dec popa cmovp mov xchg mov inc mov push ret rcll dec ljmp lods cli shr cmp mov xor (bad) icebp cmpsb lods sub dec mov clc add icebp ja inc dec pop lret test repz rorl mulb and pop (bad) lret (bad) and cli mov xchg in mov jbe adc xchg lock ftst stc mov xchg push cmc insl adcb cmpsb cmp jmp pop je jae (bad) push push pop imul cmp dec pop xchg or (bad) pushl sbb popl xchg add jnp jge mov inc sahf xor fadd ret imul divl dec (bad) insb xchg adc add out jno xor (bad) out ljmp xor (bad) cmpsl int xor inc pushl pop push out cltd inc sti cmp clc push xlat mov repnz (bad) out test sbb or das mov fsubrs dec (bad) stos dec xor pop and ja mov mov pushf pop add xor sub scas repz sub add and jp les push fstpt cmp into mov xchg clc stos mov out sub mov jge les sar dec sub shrb inc out fist (bad) cmp or fcoml ret push mov mov dec inc (bad) pop xor fs shrl mov or movsl data16 inc movsl pop adc sahf sub imul cmc push sbb xchg sbb mov nop xchg dec sub inc add and dec pop mov mov scas stos ret hlt jne sub xor aad insb push imul ljmp add add pop push iret xchg leave outsb jnp int3 xor movsb cwtl sub mov cmc inc add mov and idivl mov into clc (bad) popf rcl and and movsl ja mov movsl pop xor int popf fiadd out add push mov arpl and xor adc mov sub sub scas cmp push jg or or aas movsl sub pushf mov and (bad) mov popf movl dec ja (bad) sub mov mov pop lods outsl rclb and cs cwtl aaa mov pop xchg pop pushf pop lahf jbe jecxz add add in int3 or or dec (bad) stc mov icebp cmpsl xlat (bad) pop mov inc leave add lea addr16 sti movsb test mov mov adc xchg sbb mov xchg and cwtl pop aam imul inc or sbb or fcmovb mov jecxz dec stos jne mov enter xor push data16 sub mov cld sbb lds mov or das jmp jb lea ds mov xchg mov push jle pop push (bad) fstps mov iret cmp inc rcll mov lods push push in daa js jno dec xchg jmp cmp cs mov cmc iret ss icebp ljmp add inc mov mov xchg les lret ljmp out fs push ret and mov push mov movsl adc daa mov pop lahf out and into (bad) mov nop into sub orb (bad) icebp in xchg dec dec fdivs mov imul mov sbb jecxz mov js adc call daa ret inc loope adc adcl cmp sbb push ds and outsl test sub xor (bad) stc shr mov rcll sbb push roll adc push iret es inc add dec gs repnz (bad) xchg jno roll mov xchg pop jp,pt inc ror xchg mov mov popa sbb stos pusha xor dec push mov xor cmp cmp aaa add into (bad) xor dec mov cmc dec or lret inc pop out in jns add pushf cmp xor add mov cwtl jge adc xor and mov (bad) jmp lds stos (bad) dec pop or mov ficom mov or mov movsl stos repz xor stc jno ss sub mov and dec mov loopne divb inc pop add ds scas ljmp sub rclb fdivrl ret adc dec (bad) xor out nop mov pop sub sub or dec (bad) lods adc aas loope sbb pushl mov and cmp push xor mov mov dec adc rol in or add mov outsb mov out push inc push std stc sbb pop mov sub mov lods lock cmp adc mov orl and out pop pop mov pop lds or outsb in or add xor icebp pop movsl pop sbb incb add and or add movsl addr16 loopne sub mov xor push lods mov pop aad pop icebp ss dec mov stc or add stos lret cmp adc cld mov pop rclb xchg sti or sbb sbb mov je les mov pusha into lret mov out insb inc mov inc sub shrb pop sub rolb leave or cmpsl nop imul inc dec add loop xchg test cwtl movsl bound pop ret mov les pop xchg into stc ret movsl aam xchg daa scas xor test sub bound repnz sub sub xor mov or negb bound scas sub call xrelease jo fcomps popa sub out repnz pop inc std pop sub int3 add adc dec out xor pushf mov cli out (bad) mov dec aam lret lods pop (bad) mov aad add adc sbb push sub cld push xchg fidivr push pop sub mov inc (bad) or sub and sub mov test movsb push inc push adc jae mov (bad) jg js cmp mov psrlq mov push (bad) sbb mov push or pop jl (bad) sub pop cs repnz addr16 data16 sub or adc lret jo pushf shl mov sub sub fcomps std cmp jl add clc lds jbe push jl bound sarb dec out dec xchg push xchg lret insb pop mov daa hlt pop daa jnp das fucomi movsl aam push add jge cmp or sbb repz pushf cmp movsl enter inc in pop adc push out (bad) dec data16 mov push repnz jns mov add adc inc mov pop xchg aam pop dec hlt in cmpsb sahf push shrl xchg jge lcall sbb dec jbe cltd cld cs sub xlat sub rcr mov mov pop out outsl xchg shll cltd clc stc pop adc or fisttpl repz xor (bad) push cmp popf incb ljmp adc sbb mov adc mov mov call loop inc out jp xchg push xor (bad) jae cmp pop ds fstpl (bad) adc adc jbe or mov nop ds and and push hlt imul push mov add mov mov mov cmp mov mov or and cmp repz inc lock cmpl das push mov inc and xor imul xlat sub and mov sahf inc call sbb and imul xchg fldt stos add cmp jns leave out aad dec mov jmp data16 mov xchg shrb cmp nop push adc or dec jns into jae push mov mov fxch adc sbbl dec dec sub or pop add fiaddl sahf cld push xor add cli ss cmp or ds push into jle add out jecxz adc add jecxz lcall daa js xchg out out mov loop xchg dec push mov inc add ja xchg notl outsl sub xor push sbb cld fcmove js pushf and xor rcrb roll sbb ret icebp mov push pop mov mull cs sbb xchg imul fs mov int outsb cmpsb xor mov jecxz das movzbl pop adc sbb xchg int3 std and and sub jo mov dec or push xor mov out add shrb fs cmc sub and and repz sbb cwtl cli ror pop (bad) sbb add pop shll (bad) cwtl icebp or or or out jne loope je test outsl ror ja dec outsb (bad) xor inc sub lahf pop pop outsb inc (bad) xor ret adc loop (bad) movl inc rclb (bad) xor and mov sub fidivrl add idivb add mov dec std in cmp xor shll inc add out fs mov xor jmp jecxz shrb pop and push sub push or fbld pop add dec mov push and stos dec call aas jp rcrl and popf gs sti mov loop ret mov loope je lret jo popf sarb or shlb pushl ja jge fdivs (bad) push repz sub test adc mov dec (bad) pop vpackuswb mov aad scas mov fsubp pop xchg dec push add xor pushf fdivrs mov ljmp add cmpsb or fistpll pop lds mov mov (bad) lock (bad) mov outsl and mov dec cmp and test stc push frstor (bad) lret imul ret xchg insl mov aas push cmp (bad) (bad) cmp shrl dec dec cli loope fidivl lahf mov repnz ret jae cmp cmp lods aas pop mov jmp int xor loop je push pop jl lret or ficompl fstps popa daa sub jge fldl cmp or or and pop jmp les add dec xchg inc dec (bad) pop xor and in mov (bad) push mov and div popa mov or and lea sub pop sub movsl insb gs js mov pop sti sub mov clc ljmp jmp cmp fsubs out sub das adc add ret shl sub aad sti xchg add ljmp bound stc add mov push clc jg push mov add dec jp or adc (bad) adc adc mov je push xchg and xchg and and movsl and test loop and and and and mov scas lret and rcl and fldenv and and xor adc add add add std pop push or bound or add adc lahf sbb jb add sub or add and and cmp cmc inc and inc and and sub pop sbb int3 xchg fs sbb orb orb xorb sbb addb push xchg lea xchg and fwait and sahf and movsb and test jle and and and xor leave add add mov add loop jecxz add jmp mov add add add cld push pop add jb add or add push add sbb add sub add xor insb cmp cmp les cwtl dec add dec add push push cltd push mov frstor gs imul outsb jge icebp addl dec inc mov mov adcb cmpsb fwait xorb in mov dec scas add mov lea imul lds inc lret int cmp and and fsubl pop fisub and and xor in loope add hlt add testl shll push or or stc or repnz gs sub or and pop es sub shrb inc xor in or cmp pop aas or or or or or arpl out imul jo es mov popa jnp or (bad) andl xchg mov xchg adcb and cmpsb adc cmpb sbbl inc mov mov inc movb add into push (bad) rclb (bad) xchg jge loope inc out inc jmp inc hlt push inc cli xchg inc lcall in or or adc push enter jb or or or or cmp mov or or push or or pop or pop sbb andl jno mov stos jne cmp jg flds mov mov adc mov or scas or mov in or mov sbb add add mov or xlat add add fild popa loop sti in (bad) ljmp lods hlt add addb or add mov adc inc adc inc sbb inc daa in inc sub sub inc xor jmp sub and inc dec add add pop add jo add gs push ret sbb nop test adc adc mov mov adc fwait adc mov inc test inc lods xor mov inc mov inc mov inc les inc leave faddl mov iret xchg scas fadds add out sub inc icebp testl pop or or or sahf adc fcompl pop and daa add sub xor add cmp test cs add dec add dec add dec add push add push add pop add pop add popa add data16 imul add jp pop jle adc sbb inc xchg outsl inc cwtl mov add cmp mov jge adc les inc enter xchg shll add fiadd fild jecxz test add jmp inc lock jmp fdivr add add or clc incl lods adc rcll add adc dec sbb and shlb gs xor daa xor loope add add push push pop push and cli fs xchg bound data16 push dec insb add jo (bad) je lds outsb jle and lret mov add xchg add cltd add sahf add mov inc cmpsb and scas or mov add nop test sbb and add adc pop fstl or adc in jnp adc sub adc cli adc or add inc or adc mov orb je adc orb push cmp inc subb add push xorb ljmp bound push dec insl enter sub js pushf jge pop orl xchg orb cwtl or fwait rcrl cli cmpsl add add add add add add add or xor add add roll dec xlat add fiaddl ja add add add out add add incl or push cwtl inc addr16 or or adc test adc adc sub aaa add add add inc add nop or pop ja pop jno add push aad add jbe xchg or inc (bad) movq adc add add movsl add stos add mov adc add add nop xor adc aam xlat push rorl sub or jmp pushf out or or stc push push add or add inc inc adc inc sbb and sub xor inc cmp add inc add dec add dec add dec add push add push add pop add pusha add fs push pop outsb or or jae inc jbe inc jp inc sbb test add add nop cltd xchg adc pushf adc adc imul mov jnp add lret add popa roll cmp add add in adc add add clc add add incb iret add loopne imul (bad) testl push add add and sub pushf inc xor inc xor rolb dec adc xor mov adc popa adc sbb subl jbe pop jnp aaa jg add std mov jb nop cmp lret mov adc adc adc adc mov stos les adc adc int3 adc adc ficoml add adc adc call hlt mov mov or flds dec adc pop or or jl add sbb icebp addr16 cwtl or and dec and xor or or xor or or or inc or or push or push or push or imul mov add adc orb fwait test mov cwtl adc sbbl cmp lea add roll lds jno and and shl xlat enter es jo shr (bad) icebp adcb addb mov std and pop les (bad) or (bad) pop adc adc daa pop add and sub xor xor mov add inc add dec add dec add push add push add pop add pop add bound gs imul add ja bnd in or roll mov (bad) adc adc cltd adc adc adc adc scas adc adc mov push mov adc sbb leave add add add add loope push out jns adc out adc hlt sbb notl add adc mov or inc or loopne add push and or add add and and and out xorb push sub adcb sbbb and andb adc enter dec jl loope or or or cwtl stc fwait add subb test mov mov xchg mov add mov sbbb and addb (bad) mov add add repnz adc sbb or orb orl arpl or adc xor adc and (bad) sub shrb ss cmp in inc add add and lea push add pop add jne sub subb outsb addb jle subb int3 test xchg mov xchg xorl test sub nop mov (bad) mov es ret (bad) enter push into or rorb mov or fmull or or out popf jmp loopne or or (bad) or fimul add push or incl lret add lods daa add repnz mov add add and and and and pop and and bound xor sahf push movd mov and and jns sarl js and xchg dec mov out lea mov hlt pushf and mov (bad) test lock and and xor xchg movb enter add add add loope mov add icebp add cmc add sti add sbb add pushf or adc sbb and add pop sbb fidivl js or aas or inc jns cmpb cmp sbb add addb mov and int or ja mov or in mov xorb pushf adc orb subl add mov ret or addb cmpsb roll fildl jecxz stc out insl in cmpb testl add adc adc sbb int adc adc adc adc xor pushf cmp aas add inc pop mov add dec add dec add push add push add pop add pop add bound data16 insl add jno inc jbe loope add jl addb add mov lea xchg add cwtl add fwait add mov xchg test mov mov dec mov sbb mov adc adc adc (bad) adc adc loop repnz or adc adc adc or sbb or push adc fmuls sub push mov and sub inc xor cmp je cmp inc inc pop inc dec push dec (bad) inc push cmovo mov orb insb enter loope or jg,pt inc orl xchg and push xchg orb dec fwait xor cmpb test call add sbbb inc (bad) or or lahf aad jmp enter jge or call (bad) push cli or sbb bound or mov lock sbb inc and and inc sub add mov pop aas adcb lcall push or cmp pop and xor lods jae adc push add and andl xchg jmp and aad and mov add stos xor lods jmp add mov mov or add dec enter add rolb xlat add fildl fild jecxz pop out inc jmp inc lock int3 inc cli mov add sbb (bad) or sub or adc xor in sbb dec sbb cltd and js add add lods xor aas cmp call nop inc inc adc jae dec mov push inc inc pop push inc pop mov cmp pop inc jno inc jbe inc jnp inc sbbb mov xchg add mov xchg add cltd add lahf add mov fs add scas add mov mov add mov addr16 les leave add int3 add roll aad pushf fadds faddl in mov add lock hlt add clc add cld push repnz push mov or pop pop cmp or movups adc bound push sbb test add add add and and and aas aas push pusha push pop push pop scas popa sub adc push rdtsc pop pop and pop jg fiaddl xor cmp (bad) push mov add pop (bad) xor mov (bad) lret jb into pushf (bad) loope out pusha sbb mov scas or mov pop push mov outsb and mov mov cs inc push mov andl mov std shr rcrl ret test pop xor and mov pop mov push adcl adc in cmp sub loop sub xlat adc cmp xorl mov shr out in mov jnp out xor sub add or jg and (bad) dec xor pop sbb push out jecxz inc movsb bound jmp repz shrl mov imul or mov (bad) xor jl jo jp ds add add scas xchg leave pop pop dec mov or push mov or mov outsl addr16 xor ret and pop in cmp sub add sub push rcrb mov dec shr or jns repnz out clc mov insl out push sub and add pushf sbb xor add xor pop scas repnz sub xchg outsl add aaa add xor out pop cmp xchg xlat dec push orl out fild sub jle test mov xchg push mov adc popa push orb dec das sub jg js js push xchg cli add pop mov sbb jns inc sub inc dec adc xchg and daa (bad) ss incl jge push arpl push aas int xchg inc add xor inc jmp rcrl nop mov push mov xor repz jl xchg enter aam notb data16 imul jo sub or sub dec imul and ds xchg fidivrl fiaddl xchg dec sti ret (bad) xor leave mov jo test push pop xor scas (bad) jns rcrb int or xor add out push push xchg and push push dec pop aas xor adc aam (bad) adc pushf out mov lret xchg mov inc jns addr16 pop jecxz cmp iret sbb ret add pop push mov jae int icebp int inc mov in movsb add ljmp mov or pop xor aas sub and push mov pusha bound lret (bad) dec fldcw stos imul push or push in inc daa test inc mulb inc add lds idivl mov xor push or rorl dec sbb cli sub lcall push jmp add and jle add inc or pop jns mov call sbb and ss jb enter in fs inc out neg in xor jmp pop pop shll lods jge pop add pop add (bad) pushl mov cltd dec sahf push (bad) je scas lret lahf add adc push pop dec nop cmc cwtl push or (bad) pop and lods bound jne push test cvtps2pd xchg adc pop outsl (bad) pop inc dec movsb add jb xlat jo and add ret lock ret dec and pop rcrb not add nop fs stc add pusha sbb outsl sub enter pop popa and cmp xor pusha (bad) shrl push shlb bound (bad) mov cmp xor addb sbb jb or ljmpw addr16 pushf out add cvtps2pi add rcl stos pop fisubl pop push dec faddl sbb pop push cld jnp jmp fidivr inc and fistl rcrl and jb adc xor adc ret xchg mov pushf icebp (bad) sub inc repz testb jmp (bad) or sub jle mov mov or add loope jl inc jnp cld pop add dec (bad) fidivr mov pop ljmp xor fiadd mov push lds add in sub test push push test jl rolb sub aas outsb add in notl mov rcrl push sub sarb out aaa gs andl pop and dec cmp mov dec arpl dec dec pushw stc add mov add inc movsb adc (bad) lcall push dec sbbb push and sub in orl add or cmp push push sub and xor adc inc pop pop inc ja sbb dec push inc in add and (bad) ds (bad) loop das mov in inc cmp xchg add adc or (bad) mov mov and mov jg outsb add adc dec ljmp pop mov pop (bad) sub mov stos shr push sbb cmpl pop fs nop out push ds mov and cltd test add xor roll push out out or shr push add sbb loope add fistpll mov sub cmp pop fnstcw mov int3 cli cs (bad) push test mov pop mov push sbb pop out pop mov ficompl push adc shr mov and push cli out out add pop sub inc xor fnstsw jge,pt pop mov push push xor xorl push jmp xor into lods cmpsl pop pop mov ret add loope xlat xor xchg xlat mov push pop or jmp dec or add push xchg dec push (bad) ljmp mov jge pop pop or jmp mov fildl push inc (bad) and fiaddl xchg inc or (bad) jo out adcb mov dec nop mov pop add add mov (bad) jns popf or pop pop xchg ror xor fmul mov jb push in cs ds mov xor lret jmp pop insl rclb push xchg pop xor das xor lock mov sbb add nop jmp cmp pop jb or cmp push mov mov mov jb call push stos xchg adc mov push adc lcall push add into adc aaa inc loop xor pop popf popa sbb xchg sub es test sub insl xchg fistp shrl inc add out dec or or iret add pop frstor push inc call pop xor pop push bound inc bound scas and jb push orb dec es push push xchg inc out mov pop mov aam jl pop sbb xor jbe add inc and pop pop sub jne testl bound push inc sbb pop push loopne lock pop divb in mov aas push lds ds jl sbb push jge out adc dec pop lret add in out push push iret cmp jle push inc dec pop popa pop push xchg xor push mov inc pop mov jno jo das popf bound add leave or and and into fcompl (bad) rcrb aas add cmc pop in push cvtps2pi out mov jle adc cli mov add lods cmp dec pop adc jle popa xchg mov out sbb and (bad) pop pop push inc inc pop leave shrb inc push aam xchg xor popa dec add out add jne push push mov and pop imul cmp sahf jae push shl add sbb and push inc inc mov sbb sub orl add pusha arpl push repnz push push mov cmp repnz dec pop sub in cs (bad) repnz mov mov add pop jo push mov add pop sbb sub sub pop dec mov mov pop idivb jmp xchg and sub scas cltd and arpl mov shl jbe fwait or push xor add aam test pop shl mov lds mov jmp mov mov addl jge loope clc in pop pop mov scas stc inc or and push pop mov xchg mov add pop je jne cs into xor cmpsb decl pop fiaddl stos xchg rcl jo push (bad) mov or fisubl adc sub pop push rorl lcall stos into xchg mov xor mov jne sub push inc jns and lret cmp dec add or push daa add not roll ja cmpsl pop sbb stos pop fistpll mov pop xor or repz scas xchg mov daa ljmp enter mov ja jnp add jae aas pop dec mov or les adc sub sbb or xor sub or test out push insb ljmp ret ffreep out add mulb sub pop scas mov jae out fnstenv aaa sub cmp jg jb jp push adc mov lea test xor pop add fnstenv js or out ja,pt push xchg push add outsb push xor xor fcompl fistp cmpsl stos inc daa pop jnp addr16 pop sbb xlat aas mov insb or pop sbb push add mov movsl or inc push imul xchg and sub xchg cltd or in pop and not dec or add shrl ror insb xchg ljmp repnz lahf pop push cwtl dec (bad) and xor push adc pop popa lea into jmp mov aad test add test add test xor sub pop add insb push jecxz loop stos outsl mov sbb mov add nop lock and or push je and xor adc repz (bad) sahf pop mov jnp in pop pop sub hlt push sbb mov mov xchg imul sub push mov cli lock jecxz cwtl ss inc mov add ds insl pop in lods pop push sub mov pop pop test lret adc pop inc dec in adc dec les scas pop pop or or sbb imul or lods inc pop ret aam adc enter push mov loop mov call arpl xchg push dec inc lods xor mov rorb scas outsb xor fiadd add imul pushf test sbb cltd fs imul sti mov (bad) pop (bad) adc add sbb sti adc rcrl nopl push sub pop ds pop scas inc mov into push or nop adc incl mov insb push mov and jl js inc (bad) push or mov fstps mov notl jp adc test aaa and sarb js or mov lock bound push push je or prefetch push loop and cmp jge (bad) out out aaa jl push (bad) mov jbe sbb stc pop rorl pop xor les dec pop int movsl or push sub mov jnp (bad) inc jo cmp insb dec daa iret mov jle mov cld adc add lahf (bad) jle jmp sub daa repz lock repz push pop inc inc push ret sahf sub ret data16 lods cmc jbe mov xchg inc mov pushf mov ja adc push rcll test or add and pop xchg scas iret pop je xchg pop push addb mov push movsb stos test adc jmp rorl or orb xchg or and add insl and xchg lods movsb adc call and (bad) out out and fstpt push xor pop rol jnp push rcll push sub mov (bad) (bad) push pop dec enter aas or fsub mov push jmp clc xor sbb vminps add test push xor pop repz scas or (bad) mov and jbe cmc and adc pop dec aam popa in inc mov mov push pop pop sub mov sbb test movl pop fstpl sub fdiv fcompl mov adc xchg sarl add sub jge mov (bad) jne jg sub cmp sub jbe xchg or hlt imul sub dec jg pop mov inc sbb mov push aas jbe insb add xchg cmp add gs (bad) jle dec arpl add mov add fcompl jno push (bad) pop pop sub inc (bad) rcr mov hlt sahf push mov fstpl sub (bad) rorl mov sahf inc mov jbe das sbb or adc cmc les repnz dec mov lock add jge ret pop pop pop fistl cmp sub mov imul push sbb leave jg mov sahf jle loopne out jp push push pop add imul jp nop dec cmp xchg ja andb fistpll mov (bad) in mov add aaa add push pusha nop inc cmp push add addb pop (bad) fldcw aad xor cld mov mov dec sub sub icebp jecxz and adc inc or cmpsl jg aas popf jecxz or bnd sub nop popf push mov out push dec add (bad) (bad) adc (bad) jnp in ss inc adc mov imull iret jge repnz jp js ret xlat mov movsb call mov push xor out (bad) out fcoml dec and mov inc shrl fwait push mov test ds jno mov fsubrl fcomp push sub stc cmp push jb add (bad) jge in add push pop rolb jne lock ljmp xchg rcrb hlt movsb push push mov sub test sti add sub add add push cwtl push orb ret add sub push sub or fbld stc in push jnp sub mov cs cld sub mov mov sub push dec rcrb iret sti cmp (bad) aad sbb mov pop inc dec inc pop das adc movsb xchg out fcom sub inc clc hlt hlt mov outsb neg dec addl jle pop or ss popa jmp push sub add xchg test push jne,pn loop dec sbb add pop push push inc push pushl xor cmp mov sub mov outsl cmp roll push pop xor push aas jb add mov aas or mov mov pop sub out add jnp mov inc or add mov (bad) dec jge add sub shr pop adc pop pop fisttp hlt pop and jb or jnp mov dec add jne sbb xor sub sbb adc cmp sbb add shr sbb ja,pt lds or xchg pop mov jns lds orl call movsl addps or in xor sub cwtl test sbb gs out pop insl add sub stc push adc push sbb out push popa (bad) sti imul pop mov or mov adc add adc scas cmp xchg nop fdivs cmc rorl sub lea pop xor repnz adcl out cmc arpl sub pop icebp test jmp pop pop xor or mov mov test (bad) mov push add imul jmp inc add xchg fwait or jae mov pop jnp sub leave push pop mov test push cmp nop xor nop/reserved jp mov add dec test and mov aaa (bad) mov imul mov ja adc aad les dec pushf push int push adc cmpl and or add orb lds inc mov bound pop movnti cmp scas inc adcl mov pop add or dec ret add adc cmp mov ss dec cmp jp mov aas test loop adcb (bad) xor mov sbb jge idivl rcrl enter push mov shll push (bad) repnz xchg jmp mov shlb dec ficomp nop lock mov icebp and sbb les pop shr jl push sub add pop mov pop and rorl das out mov call std aas sub fdivrl jg jo pusha imul mov inc pop std inc cmpsb sbbb dec ret aaa and (bad) test dec push clc mov push push inc add cmp fs add aas ficoml mov rcll popf sub sub add jmp and or fsubrp lock js xlat jns xchg out push pusha add outsb sbb (bad) pop adc out add js loopne neg add gs jnp mov cmp pop pop ret setnp dec or data16 jns mov push dec xchg (bad) (bad) jmp std mov dec inc fisttp aam or pop lds sub pop scas adc jb xchg movsb and add or push push jge sbb mov ja cmp je aad imul cmp lahf int movsl inc dec mov arpl push jmp mov pop cmc xchg js movl pushf out mov divl sbb fadd aas (bad) fstl lahf adc loopne mov sub mov add or or loop jge dec bound icebp jns or aad or cmp mov gs sbb sub ljmp mov test add movsb (bad) jge popf imul inc imul outsb mov fisttp jg xchg add xchg (bad) push xchg insb or pop out out add test ret xor xor dec (bad) lahf pushf dec cltd pop leave addl popa inc stc roll nop rorl sub aas cmp xchg xlat add rol repnz cmp push push nop int3 xchg pop xchg dec add pop sub (bad) scas push pop add sbb or adc pop xchg (bad) lret adc push mov add pushf js in or scas or sub or pop decl inc xor jge jge sub rclb cmc or pop vmwrite cld out push or andl xor push ds inc je shlb mov repnz lcall sub sub push jo ret xlat outsl shr dec xor pusha jo cwtl test pop add gs into xlat loope pop push scas fldenv ss jl add xchg jl into pop daa fistpll out dec jmp xchg or loop std lcall and mov lret dec add push out jne jl mov dec cmp ret fs adc mov test (bad) push ret dec cli ret jb test add pop push push cmp pop jb or push iret adc clc mov aas notl fiadd lds mov mov and aas shr add popa xor imul pop fldcw nop js bnd add pop mov sub fs xchg cmp push jnp adc jae daa ret aaa mov jo iret mov and dec scas icebp xchg mov mov or cmpsb xchg mov and les test repz hlt inc mov enter push mov lods mov andl or mov cli loope out add add xor mov mov mov sub jp clc mov fnstcw sbb or adc jge sarl call rolb pop sub xchg sbb push pop dec pop push add sbb pop add push or jg data16 add xchg mov dec popf jle (bad) or loopne push hlt arpl inc lret pop cmpsl lret jns call lock sub jl jp mov xchg sub pop and fisubrl inc popa adc idivb xchg stc sbb lea jbe add mov adc or or lock fwait (bad) push pop sub addl leave mov scas enter das cmp idiv test cmpsb in lods pop cmp repz stos out inc adc inc out dec push jb jp sbb insl pop push push cs or in pop dec aad dec lcall and pop cmp or dec sbb outsl push aad add nop mov add push cltd lret mov or cmp insb (bad) add pop imul ret test lcall fldcw pop inc xchg je,pn repz adc cmp cli shl aam sub mov xor rclb push mov xchg add rcrb cs inc fisubl mov aas jg lahf dec mov mov jno jne or mov xchg inc inc pop testl xchg and mov and dec pop bnd and scas add lea sub pop fiaddl cmpsl loope icebp inc pop into add push push outsb xor inc out call dec lret out dec (bad) sbbl inc out mov xor es popf movsl popa cmpsb jl pop and repnz sub (bad) push lods sub sub (bad) int3 dec push mov push pop push (bad) jl add mov mov sbbl notl sub inc addr16 pusha pusha sbb lea and jbe inc fimull and rorl adc aam (bad) dec push jp jmp icebp sti pop in dec mov mov es mov cli in jg data16 cmpsb repnz pop mov call pop jne adc fcomps inc pop add sub push std ja out push inc dec or jae flds pop ja mov push andl (bad) cmp inc (bad) out jg imul ds cmp nop add mov lret das scas add lahf imul mov jg pop (bad) ljmp leave pop dec mov nop and push out (bad) sub rol sub and sub adc sbbb or loop sahf jle add cmp scas popa dec xchg pop pop xor nop sbb call aas pop mov add mov adcl push lret scas push or jl push std dec pop push mov lcall cmp and and push call cs push es dec pushf mov ljmp ljmp scas aam out popf mov mov push je mov adc pop aam push add or push xor pop stos push cs pop add cmp dec sbb int or iret dec sbb or rolb cmp ret cltd sti loop insb rol repnz adc push inc test scas add ljmp stos sub jg pop aaa cmp mov sub and sahf cmp push jb or rcrb add push sbb es mov sbbl fs xchg mov scas and adc sbb fbstp sahf and pop and dec neg jl sub sub (bad) popa sar ss pop mov rorb add leave outsb cld jg (bad) (bad) hlt pop imul and dec inc push cmp notl sahf repz mov in js mov add in neg sarb mov addr16 add test xor mov sbb dec icebp shll sbb ficompl jg je push pop push jl and pop daa in add xor sub aam mull pop pushf in add std pop jnp andl jne (bad) inc sub popf or mov add call push pop pop inc adc cmc icebp dec push adc inc xor push pop push stos push fdivrl aam int3 mov test add call inc aad xchg ffree daa sub jg test (bad) jl push (bad) fbld icebp rorl addr16 push ret shrb pop dec aaa pop mov lods dec inc xor sub repnz sbb jg or call push inc and pop dec pop cmpsb and sahf out insl xor cs mov mulps mov inc jg xchg inc mov adc jle sti pop out pop mov jl add enter lahf push dec cmp cmpsl push dec cltd pop popa data16 mov xor mov and add inc pop testb xor cmpsl das outsb and out out imul cmp ljmp test jge pop pop push add aaa rorl fidivrl or sub add push or jae mov xor sbb mov fistpl sbb adc inc xchg push xorb stc imul cmp pop std pop jg das mov in mov mov imul mov subl mov ret ret cwtl in rorb (bad) roll and jns iret jle les cmp hlt cmp rclb mov lds mov jb add mov xlat push cmp jbe push ret pop pop imul stc js sub rcll push cmp or out push in rcll sub sub scas jnp repz dec pop push shrb out out xchg add push sar outsb cmpl fisttp shr sub test xchg loope adc insl mov jl test fcmovnu loopne daa lret out add mov cmp sahf stos sbb pop lret cmc ds int fs xorb or pop pop mov push dec push mov and xchg pop repz mov mov fldcw and sub stc and pop pushf adc hlt iret das jp or popa (bad) das mov or mov jbe or add in je mov add arpl jo icebp ror (bad) std fmul cmp add movsb into jae pop add pop loopne jge dec pop inc mov ffreep jg adc pushf cmp ret loop push subl xchg clc jge iret mov sbb lret cmp std ds sarl enter mov push mov subb or shl lret pop xor cli insl inc push out and cmp popa jle call pop imul jnp loop cmp cmp pop pop xchg bound push pop mov adc mov inc loope out cmp mov sbb (bad) imul xor add pusha mov jno sub cmp popa (bad) hlt cmp movl arpl repnz or add aaa mov bound sub or push add add jnp add add xlat clc add nop jnp imul cmp jp jns mov xor push rcr adc (bad) mov sub jge (bad) xchg or mov out loope repz adc xor mov or adc in stc loop add dec pop es pop xchg push jb push pop push das xor adc stc add in fildll xor cmpsb mov imull sub lret lea fisub adc pop dec mov sub inc dec jmp cmc out or dec push and icebp outsl or fbld ret leave push jle jmp int das nop lock dec push int3 xor or push adc ret aas cs sub (bad) pop fs mov push sti neg and pop leave mov int loopne add in jg xor loope xor xchg jecxz pusha cmp dec lret sarl pop sub push mov sarb fbstp sub sub call inc fwait sub and push xor jp pop ljmp and rorb cs and mov stc lock add (bad) cmp cmp add lcall add hlt pop add jge fcoms inc int3 mov pop and cmp jo loopne mov out mov ja mov xor out gs jnp push mov cmp push jnp cwtl hlt test dec add in add jo jg xchg push sahf mov les (bad) in mov mov jns andl mov mov fldl not xor pop sub outsl add movsl cmpsl js leave mov test mov mov add push pop jp leave mov lea cmp inc lret sbb insb loop andl mov mov aaa inc xchg jge cmp jecxz dec lock imul add pop lret fs push in stos mov mov mov imul add out fildl ja leave bound ds mov rolb nop push xlat aaa stc orl sahf scas out inc inc jg or (bad) les push pop test mov jmp or sub or push cmp dec mov pusha out or mov add and push dec subl imul inc imul sub xchg lret xlat pop repnz fsts pusha dec push mov in push adc pop rclb pop dec push push add or sahf xor inc cmp (bad) ret mov cld idivl add lea and xor pusha scas xchg imull cmp (bad) jge das pop outsb mov loop and inc into or xchg int sbb shlb or cltd and cmp dec hlt punpckhbw in sbb push nop mov jb ss scas add daa fcomps mov dec (bad) and lds and cmp dec mov sahf pop andl push bound popf cli jb in sbb js addb push cltd aam (bad) cmp sbb cmp or xchg ljmp cwtl loop push push mov lret pop mov dec pop inc scas dec push cmc pop hlt add rcl je cmp pop xchg cmpsb and dec jg pop add into inc aaa outsb add (bad) (bad) neg mov push (bad) mov or inc fbld dec pushf cwtl push sbb fidiv and js pop push push sarb adc push add stc (bad) sbb roll cld and adc jle daa (bad) mov mov jno cmp pop jmp mov push hlt das add xchg and jl xor xor aaa xchg pop sahf aas sub in cmp pop mov pushf cmpsb push sub (bad) mov jle or cmp das (bad) cmp js adc mov fwait dec sub enter sub sbb pop mov jg out aam jp sub jp (bad) decb fisttp xchg jbe dec jle jb stos fidiv call and in std pop mov push cmp cmp push xchg cmp cs (bad) or adcb js mov pusha add rcr mov sahf mov outsb and push mov popa xor pop fs cld lret xchg xchg mov popf jl mov mov lcall add pop ljmp add xchg dec sub loope js mov inc iret push in pop mov stos ja aam out xor cld ficompl loop enter jecxz push push sub mov test mov scas shrb faddl sahf pop dec bound das popa jg add xchg push add mov add or lret pop dec and stos xchg loope mov ret sbb fcomi xor push mov or pop xchg push mov ret in nop dec into cmpsl dec mov in loopne shrb push sub int3 shrl dec sub push jl jge movsl sbb iret cmc insl adc dec cmp sbb sbb bound sbb pop into idivl inc push jnp cmp add jle sub out mov cmp xchg ret jns push pop cmp pop int push add inc nop mov or push push test xchg cli push js out mov lea lods xchg sar or fldl sub add aam or pop jnp cmp pop cmp mov das mov sub divl stos xlat inc mov enter mov mov shlb aad sbb pop in add sub dec adc or out pop adc and pop cmpsl adcb or xor xlat or xchg insl xor fwait sub cmpsl jae lods jnp sahf push data16 popf loop jo mov icebp xchg lret pop clc fsubrs jle cli add cmp jne xor cmc push xor fisubrl xchg ret std and or sub lahf pop aam xor or xor loopne add xchg add xor dec out int xor pop in jb or imull clc lds out xor fs mov and add ret adc out xchg cmp insl pop mov ret cmp popf lods cwtl fcoml pop mov lds in out aam (bad) loope sub incl (bad) ja shr jge and xchg adc shr sahf lahf xchg mov (bad) or xchg sub dec ret stos cld andb mov lds iret cmp pop adc mov add cmpsb mov and leave ret push jl push popf int3 mov lds mov xor imul sti jns sbb cs inc sub push push pop test movsb xlat rclb fnsave sti pop add loopne lcall pop fild jmp push push sub mov and add fsubrl adc mov inc dec adc jne jle or not add and pop incb add and inc cmp add fsubrs jmp or mov outsl sbb fwait mov or adc (bad) cltd shll mov pop stc xchg xchg in lods test adc jmp rcrl jns mov and pop dec dec add cmp loope ja loopne out mov jnp std jns jge into sub add scas sbb out es adc call or or dec add stos lret cmp or jp or pop je xchg push popf lods or cs les sub or jno adc ljmp imul ficomp call jmp test add and mov jmp or data16 icebp or push cmp pop sub adc or mov std mov in and add mov push mov push movsl (bad) sti pop nopl push outsl xor pop shll cmpsl fnstenv jnp ds sub in out xlat or inc inc jle or sub aad (bad) arpl fs stos cld sub push xchg push add mov cld cmc xor mov ja roll aaa xorb (bad) xor adc js sbb jb or add cmp mov mov daa cltd inc pop adc lret jl sub inc clc ret adc shll test hlt push adc in lret push push push mov ret gs test or jb mov cwtl or mov ljmp cmp dec dec dec mov icebp adc mov js fiaddl adc fistpll imulb testl pavgb rorl adc add sub or and push movsl jmp add lods jg push cmovne mov or push xchg mov mov jnp push push popf mov add sbb addr16 push out pop mov xor pop or add jnp stos in fldl loopne inc std mov cmp push cli rorb repnz jl stc shr mov movsb mov std sub cmp cli jne out add jmp jle push mov adc inc and (bad) mov mov nop (bad) sub inc ret loop jnp xchg ret xlat adc xchg in cli cmp mov add add jp ss (bad) cld pop pusha and scas outsl fistl sub pop loope fpatan cmpl and int sahf cmp pop and test mov cli mov push sbb in mov inc mov and movq cmpb sub mov jmp pusha (bad) sahf pop mov add xchg push jecxz mov cltd add xchg orl mov popa daa (bad) hlt push jp movsl repz movq div sub jb xchg outsb movl pop mov jle popa mov clc outsl and stc xor outsb adc in add and loopne fwait xchg and sub pop push push movsl sbb negl in std jae or pop dec (bad) hlt dec in xorl leave pop ja loope xorl out lahf lds (bad) jae push mov sahf repnz dec mov fdivrl ja add ljmp pop enter cmpsb sub jmp pop xor cmc xor jl push dec xor loope mov sub in adc (bad) sub pop jbe push sbb movsb loopne pop jno ja sub jbe sbb cld roll add dec inc out mov out push leave dec xchg xor sbb inc pop shr add dec or mov add pop scas jg sub pop movsl or jl mov xlat int3 inc (bad) iret jg cmp cmp fwait lock mov mov ljmp loope mov mov jge int add aas lret mov stos dec mov das jns test sbb mov cmpsb mov pop lea push pop pop push mov xor fbstp and pop sahf xor sub jns addl dec gs add in lahf ficompl imul idivb add jmp dec push xchg andl pop std leave ror add insb mov rorb aas sbbl addr16 push ret loopne cld cs into jae mov mov or leave jnp stos sub icebp lret pop pop shlb mov lcall jp (bad) or mov pop outsl arpl fidivrl repz sar sub sti adc mov dec push adc inc stc pop pop sub add xchg in sub jb lret addl sbb jp fsubrl in sub ljmp fimul xchg gs add test mov ja push pusha and jmp mov pop push pop popl or fnstenv iret mov ret push or or cmp push add xor inc and scas out inc or mov in stos add push push jl mov add mov jo push jbe add pop push push dec out xchg fldt push xchg fldenv clc das add xor inc dec das sarb dec xchg dec dec pmuludq mov push inc adc (bad) dec cli mov (bad) repz leave cld dec cmpsb and add jb testb sbb repz or lock xor xor pop lea dec jg jl adc rcl xor fmuls push imul or pop mov lock jg pop mov xchg mov pop ss outsl fwait test xlat or sub or adcb xor data16 test mov sbb (bad) xor mov add ljmp or pop je pop imul jnp pop ret mov sbb and jae shl movsb fdivr dec jecxz jne or pop mov add das aad jg push mov jg mov xchg clc add imul (bad) out orps pop stc push adc loopne jp ljmp fistpl cmc push mov outsl and (bad) xor pop in test fs add imull xor hlt insl cwtl pop mov stc mov push jae repz ljmp adc mov xlat add pop mov mov gs movsl fsts sub add out ret add cmp fisttp (bad) mov or sub mov cmp fldcw shr and jg das scas cmp mov loop xor mov pop add sbb or das xchg push xchg sti cmp imul loop fs rcll sbb cli or adc dec stc fisubl push jl mov push lret or inc in push push mov mov or sub cltd (bad) das fsubrs or cmpsl push xor xchg dec pop jg aas pushl sub xor pop push mov push call jg pop xor test inc push push jno pop push jl ret ret dec fadd mov mov pop mov pop rclb push xchg inc addl aaa xchg cmpl scas loop xor out pop cld sbb pop jg or or and jmp icebp shld leave push rcrb cmpl dec pop jecxz sar dec out je mov pusha mov xchg jle cmp (bad) xor lods push add pop pop xor sub xor pusha insl sub iret (bad) mull lea adc xor test mov and sbb push push xchg mov test push mov or sti adc addr16 and movsl ret in roll add xchg (bad) cli mov pop in cld addr16 das (bad) outsl push or in xor (bad) jo (bad) lock jnp ficompl out sbb mov cmp repz jle ljmp push stos cmpsl or fisubl xor shrb out subb sarb mov push rclb mov push adc pop sub aaa pop push push add mov hlt outsb scas add sahf cmc fsubrl push aad in leave sbb xchg or pop notl sarb dec dec adc mov js xor mov imul test pop mov mov in cmp pop push push insl mull jmp cmp jmp jl testl out inc adc push jne jmp (bad) clc imul rcrb push pop je jmp mov mov outsl sub test add mov mov bound adc fcom xchg pop add and jns mov nop push sbbl scas pop nop imul inc pop data16 cmp mov stc add cmp icebp jl pop xchg ss in sub sbb rcrb mov sbb mov lea (bad) es xorl bnd mov cmp (bad) lock sbb xchg insb rclb jg xor mov dec mov or pop sub sti add pop dec add fsubs xor add pop cmp in cmc add daa mov push pushf mov lods mov repnz sub mov addr16 dec fs jb xchg stc pop pop ja stc xor and fs inc (bad) mov aad xchg test fidivr add xor dec jp pop adc sub inc mov aaa mov and jo add es aam bnd sub and mov pop sub jmp pop xor adcl hlt loope dec lea ret inc pop stc aam mov (bad) xchg pop jae xor xchg call (bad) leave orl mov mov out setns test xor inc mov adc lock and xchg or fnclex addl sti jmp jb les mov xchg mov and popf xchg dec pop pop inc push mov pushl aad mov xchg jmp shrl mov cltd cmp sub mov and test pop pop js xchg mov rcrb test test mov mov lcall (bad) cmp jo into stos mov adc add lock loope add jne xchg inc popa sbb or adc dec pop jle into push push add add pop or neg xchg lret mov adc pop pop mov or push push add outsl mov pop int dec fwait in and ds mov mov or pop or les cld adc jnp out lcall inc dec fnstsw add jbe aaa scas xchg mov sti push rorl pop repz mov (bad) dec adc sbb lahf inc ja sub mov sub push out or push sub testl ror cmpsb popf pop in ror cwtl inc cmpl jl push push jle jb outsl mov stc inc imul cmpsb (bad) out aas pop sub stos cld jecxz pop hlt in push mov int3 jg push sarl jmp jge repnz adc cmp dec xchg fmull je outsb mov jmp add pop jg loopne add andl out mov mov cld add scas pusha mov push pushf loopne fbld or sub xorb add pop into lock ret daa cmp imul daa repnz cmp dec sub pop add and leave push add add (bad) push mov or add lcall out or dec inc mov add ret or leave cmp shlb (bad) int3 or inc (bad) call pop add pop mov xlat jge outsl xor inc xchg call mov cmp jg ja daa outsb mov div repz or pop loope jns cmp inc jg sarb and xor stos jmp jle pop jecxz push faddl cmp xor (bad) xor in sub mov fldcw xchg push (bad) shrb lds push mov stos push sub imul gs add outsb cmpsb aad addl xor ds cmpb add xor fwait sub cmp xchg and push add nop pop (bad) xchg fs jecxz jb scas ds repz out das xchg adc es pop gs dec lods das mov loop push data16 lods lods int lock sbb jg sbb orl jl mov sarb or test xor ret adc add movsl jmp pusha push pop mov pop repnz jge icebp or jo xchg gs and das push lock mov decb mov icebp icebp dec sub out pusha shl out cmp mov add mov test outsb lret fcompl pop arpl jo pushf xchg push xchg rol jmp shl or out pop faddl jbe sub mov cli mov sbb leave jge std aaa dec cmp idiv aas cwtl push ret es pop mov jb sub (bad) enter popf adc add sub (bad) cli or jle (bad) xor cmpb xchg push dec pop mov pop mov pop mulb incb call es add push push outsl cwtl jl imul adc (bad) scas inc cltd dec mov ret in jno add xchg cmc mov jmp shl into sub stos out pop inc pop sbb pop jno mov mov in popf loop rorb add xchg negl outsl add cli adc adc sahf xchg mov sub int adc and shll out xchg aas jmp imull mov pop loope add aas sub mov pop imul xchg fisttp push add mov fimul in out leave aas jg dec adc adc lods js sti mov sub push lock in ret lea mov xchg push mov xlat mov shrl and jp dec xchg divl sub ja mov iret adc add (bad) or repnz and pop loop lahf push pop or xchg sarb into pop inc xor loop lret and mov mov repnz jo jp cli int mov push cmp (bad) cmc repz push lds popa cmc xor jp dec lcall mov inc stos xchg out daa (bad) and jbe jb xchg cltd je push mov lahf pop and ja sarb call ds push add cmpsl add fs pop mov xor pop or jge call sub mov lret push pop aad cmpsl rclb xchg in ja stos (bad) imul pusha jge and loope mov mov lahf pop sbb cmpsl xor jg jnp xchg pusha imul jbe push mov jg mov pop dec add out jnp add fidivl xor adc add push jnp fdivl or les mov sar test (bad) xor push push xchg mov in mov adc mov int pop les xor push and fbstp cmc dec lock sti stos add or cmp add dec jnp inc push or test mov inc jne inc cwtl push movsb orl outsl mov xorb ja jo xor jmp add nop mov aas mov sbb pop xchg bound add lret sub add fstl nop adc leave cmp fxch add jmp outsl xchg stos int sub sbb jo mov mov lcall mov dec pop imul add cmp push mov and decl pop inc scas jg fs shrb adc daa pop (bad) bound jl cmpsl in sahf jo pop pop xor push fild inc (bad) mov cmc pop pop iret (bad) and push popa ret sub movsl pop mov or dec cld jg lock xor inc mov shll dec cmp rorl subb cs xchg inc or call sbb pop pop cmpsl (bad) jle fidivrl or add sub xlat cmp cmc fldt xchg push add and inc loopne (bad) das neg and cmp cli cmp add sbb sti xor lret ja pop cmp mov pop xchg rcll or or add jecxz cmp adc imul push mov mov outsb dec lcall stos es pop push mov (bad) lods push xchg int3 or push jmp jb aaa jno lock dec shrb jmp out jl pop rolb (bad) insl lods mov (bad) scas pop das pop add call or pop mov and mov lods jmp decb out xchg pop dec shr or daa popfw jmp loopne aas enter mov jmp push xchg fwait adc push lret and (bad) in cmp xor fidivrl test (bad) stc add aad lret insl lock repz sbbl fidivrl scas xchg xor test sub mov daa shr xor push incl mov jp lret mov push (bad) loope mov stc cmp mov dec adcl pop fs pop daa jb jbe pop xlat iret push mov cwtl or and jns (bad) outsl inc push pop mov and adc add add and ja test sbb dec xrelease sub cmp jnp lret push fstpl dec (bad) aas aam cmp jecxz jl test shrl fdivrs cmp lock mov mov cs mov jg in (bad) xchg mov mov outsb (bad) (bad) xchg pop add ljmp xchg pop jbe xlat adc ljmp pop mov (bad) daa pushf mov mov add xor lret push mov pop ja ret loop movsb sbb add out push lret mov xor cmp adc enter or lods outsb sbb (bad) push jl dec enter jmp (bad) jno neg andb xchg mov lock add mov and movsb fsubrs adc pop push stos and test (bad) pop pop aam ljmp fisubl mov mov cmpsl pop sahf imul cmp notl lret mov (bad) insb aaa adc sub ret loopne dec push fdivl xchg ljmp int3 (bad) push js in lcall lret repz dec (bad) xor lds mov jae lods push inc add jae stos mov sub imul orb loope xchg pop sbb ljmp imul push add outsb xor jle sub push in or das jl push mov ja sub mov mov sub inc mov jl mov imul sub or decb mov subb pushf mov adc mov out dec push ret ja sub lock pop xchg movsl fsubl dec les addl ja cli cmp push mov out imul mov movsl sub push loopne jl into add (bad) jl sub fidivrl inc es loop outsl xchg rcrb pop or pop adc inc pop dec cld dec mov (bad) and jge aas inc mov insl mov and arpl pop mov cmpl sub testl sbb inc cld ror sbb int3 jg jbe pusha iret popa adc jnp add nop aas scas lds add mov out gs or gs es (bad) in add mov jp add mov out arpl xchg xchg fdivrs and pop inc adc in push push pop dec xor cld das inc sarb loopne addr16 cmp mov imull adc jnp cmc adc and mov subl rcrl es cs sbb stos sbb arpl nop sub out adc in mov push sbb adc mov inc andl jae sahf mov lcall jns call outsb lcall xor jbe mov cli lcall inc movsl sub popa xchg inc mov mov in daa sub cmp push mov fs push inc popa add mov jg mov fsubr and (bad) jmp iret cmp ret fwait inc pop int cmpb sub mov pop adc or or and das fdivl addr16 jb adc pop pop add cmp dec jle cmp and out xor ja movsl mov scas lock and pop sub mov mov cmpsb cli pop faddp and push dec adc mov mov rcrl ss dec mov inc (bad) jno addr16 das dec sarl push jns and mov das xchg cli adc dec sub jle jp adc out sbb inc jbe adc or aad nop xchg cmpsb lods pushf ss dec mov xlat prefetch int dec roll test dec cmp add jle cmp xlat cmp and out cmp add loope sub jno in popa pop cld mov pop add pop inc pushf jo adc add push or mov stc jns inc xor jp pop test add enter pop mov iret xchg adc adc ror stos jae or xorb or sub (bad) incl ret and lahf sub and imul gs dec das and lcall outsb mov jmp xor iret or cmpsl je xchg jp jns jns mov push fiaddl ret or mov addb (bad) jbe test das add mov addl sub xchg xchg jmp in or out lods adc mov or (bad) aad and jbe and or in xor ja daa mov jbe add cmp sbb (bad) lds mov mov call pop dec leave mulb subb pop jle pop rolb xchg push cli jbe xlat or pop pop jb jo adc jbe add mov sbb or add cltd dec lock push push call outsb inc pop movl jbe fistpll scas add sbb dec inc sub (bad) jno in cmc sbb clc adc pop mov xor push pop push loopne cmp popf insb decl push mov iret outsl push push out or nop rcrl imulb jbe xchg aas lods add cmpsl mov imul jbe pop pusha lret sti or inc inc mov dec (bad) pop and outsb into xorb (bad) xorl data16 and and pop lret xchg scas add jno or sbb divl std sbb or mov sahf dec aaa dec sbb outsl sarl mov inc imul daa fcom mov cmp ret ds es movsl clc fstpt addr16 sub shlb in icebp add xchg cmc pop jle rol xor sbb dec sti lds or mov test and pop js jge fs or or in add push (bad) mov mov sub outsl jg cld std sub cs and std cmp adc jo push jmp ds repz jmp (bad) lret popa xlat sahf test mov repz out dec arpl dec pushf les push jns insl les movsl add pushl inc add ss pushf sti pop mov pop (bad) and or or and mov in cmp fwait ds enter pusha jno dec mov mov sbb shr pushf xchg mov push pop cmp pop mov ljmp rol mov stc das cmpsb decb and add mov dec pop and push adc dec (bad) xchg jp push add add pop sub cmpsl pop mov cmpsb cli lock adc dec cmp stc cmc cmpl int3 inc or shll xor (bad) pop jnp jb std sti cmp gs cld sbb js dec mov jo adc mov mov push cmc or sub jle add add stos adc pop dec clc mov jmp and ljmp and out pop mov iret rcrl stc sbb and push cmp pop sub pop mov daa sbb (bad) xor jge dec jne xor xor mov (bad) mov movsb (bad) rol or mov sbb call push push out orl fisttpl cmp icebp jecxz jge,pn lods jns lock in dec or add and aaa bound scas daa jge sub xor jp js xor dec push jmp xor adc divps mov shlb and js std mov add das sub loop lret and push xchg xor mov add fstps out fbld jl push xor cmpsl push jne adc das bnd lret xchg cli add rorb mov cli jno movb aad jne fldl hlt sti (bad) jle lea adc dec test ljmp cld dec jl pop shll xor (bad) fs lahf insl movsb push pop mov roll shlb sub mov jl push or jecxz and xor iret cld push (bad) out and fmuls mov jns dec clc ss addr16 jmp xchg es cs nop scas xlat shr sbb push jbe pop xchg pusha and ljmp arpl inc or push std mov mov xchg jne mov add pushf rol fstpl pop cmp mov cmpsl pop aad jmp sub (bad) or popf sub adc pusha fmulp dec xchg rsqrtps aad clc mov orb mov adc out std test (bad) divl mov adc jp daa pop adc es (bad) js lock sbb xor adc gs mov xchg mov (bad) testb sub inc or add add addr16 jno loopne inc xor xchg test sub outsb jb shlb cmp xchg mov jnp iret or push ret pushf mov enter leave or les hlt and cwtl lcall sbb pop adc arpl or lods pop xchg push xchg pop subb aas dec add fbld shl ljmp sbb adc sub (bad) js addl lods xor mov jp push jmp inc insl mov pop adc xchg fstpt cmpsb jle sti rclb add mov iret add pop leave jge neg orb cmp sub or mov lock fs jne jmp cwtl xchg mov ss cltd add (bad) jg push push popf pusha divl jns and ds adc add push mov mov es (bad) add pop lret or or or pop xor push mov hlt rclb mov and push and push scas rorb (bad) adc xchg ja icebp lds jne and jl xchg ja sub mov add jb ret jmp inc or sbb sub pop and and cwtl (bad) lret mov in in lcall das pop pop test lcall jg add mov jo out mov and push pop ja jbe or adc mov call mov aaa gs mov xor in cltd lret test cmp ljmp cli jnp mov fidivrl sub inc lret (bad) negb in stos dec xchg jns dec js popf iret les cs inc dec push dec incb (bad) fidivr push inc bsr arpl pop push ja push in outsl sbb or adc cld clc addl sbb xorl xchg test jb pop insb mov or xor dec repnz (bad) sbb (bad) dec in mov inc adcb movsl sbb or scas cs mov push inc mov in test push stc cltd add adc ja push xchg xor push push call ret pop repz pop pop fs dec cmp enter jl mov shll add (bad) imulb inc cmp push xor nop dec xor insl mov and push cmc xor or jecxz dec mov push mov adc cmpsl test push fmul jns (bad) mov xlat cmpsl xchg xlat mov sarb adc (bad) mov out insl clc popa enter fcmovb dec add sub fcmovne jecxz jg pop mov int adcl pop (bad) gs cld sub pop popa in pusha xor cltd outsb pop push inc dec xchg and cli mov ds pop idivl test sub or or push fistpll or hlt gs insb or mov mov mov mov std dec pop or aam dec lods out movsb mov les add dec cld insb mov add scas pop add and gs sub fldt idivl jns lock sti jl jg stc xchg mov nop xchg jecxz js push mov mov imul jns sub call add and nop rorl and call lea lret and mov xor les rcll mov cmp mov sti push pop adc pop sub mov scas add out mov pop add outsl push fldt cmc xor jnp arpl push mov and aas or push or sub sub movsb sub aas std cmp jecxz pop (bad) cmp addl sbb inc xor push pop pop mov out outsb add pushf cs adc gs shll pop push xchg mov push jo neg and jecxz inc adc insl push or xor int inc fsubrl testl adc nop mov sbb xor dec jne pop pop sub loop cmp and sub jno pop or cwtl daa stc pop pop jb add inc sub jl push repz mov in sub xor cmp js mov and mov sub sarl movsb sub or test iret aas nop mov cli pop dec call or jns inc push cld cmc subb xorb les (bad) push cld adc mov add icebp dec enter aaa sub inc xor in pop xchg aad lcall or scas cmpl and fistpll push push and sbb mov adcl sbb jmp rcll adc add jge movsb hlt scas orl jge xchg out push ficompl jnp sub es jg aaa pop pusha int fdiv pusha dec pop fisubr jge ss repnz sbb pop push in push pop push ja enter xor xchg test sub push adc add aas lods mov jb outsw lret jbe mov hlt sahf adcl add shll out pop lcall or adc dec popa cmp cmp or jl mov push cmc add push std in add popf fistpll scas pop xor adc or cld pop pop jbe (bad) rorb jne add loopne lcall clc mov add lret jae rorl adc out sbb pop dec ss negb dec inc in add pop jle inc xchg imul sbb xor sub outsb orl mov adc add aas cmp push pop add ds cmp (bad) negl mov xor add cli repnz inc add shrb inc push out pop or out idivl xchg addl stos cli sbb push pusha pop sbbl sbb fadds pop jge,pn pop cmpsb mov rorl jg inc dec xchg jmp es or gs pop hlt shrb pop push outsl jg lods cmc inc or (bad) fisubl icebp rcll pop mov fist push mov and cmp or and ljmp add pop in bound ret cld or mov cmpsl out je sub sub xor pop add (bad) dec ja sti adc pusha push int3 fisttp push push pop popf rcrb lret (bad) rsqrtps mov sub pop pop mov inc stos ret inc call test repnz or or outsb push in cmp mov or lds fs pop jo mov daa dec mov sub call inc sub jg sub or out add cmp nop ljmp push insl xchg sub jns jg mov add call push mov test (bad) test sub popf fwait jge jns daa push fldcw dec imull jle cmpb push fild jge pusha sub dec inc das push in mov sub dec adc adc jg xor inc xchg push jno fistpl sub mov sbb jne jl jl jp adc adc divl dec stos addr16 fildll cmpb clc jns inc cmp popf cmpsl adc es out repz aas rclb mov push decl stos mov (bad) dec or sarb lea mov xlat into push push add xchg add outsb or dec inc push push fnstsw push mov scas push popf and push js mov push mov in mov mov pop lea test cmp adc call cld push in rclb jecxz aaa decb enter push push aas dec negl sbb sub pop adc add and dec jns in pushf mov jge andb out adc outsl jno addps mov in or adc mov sbb lock inc or mov mov in jl sub faddp adc popf lock adc repz ljmp push ficom add fstpt adc mov pushf scas das cli xor insl jle or ljmp ds jle pop push push add xorl push jmp stc bnd sub icebp xor jno mov imul enter pop outsl repnz jne stc push movsl or push fidivrl xchg xchg push ret (bad) push testl dec mov jbe int roll imul fist out sahf popf mov dec jg add sub lahf incl pop mov mov jg push or pop dec and and sub inc mov fisttpl pop in dec or sarl cwtl (bad) mov dec into inc enter dec jns sub or or pusha jnp push push (bad) mov jmp push xchg pusha fist mov jnp ficoml dec call js pusha ret mov mov lds movb jb mov mov jns or dec jmp ret dec int sbb jbe add stos jge imull mov stos and jl mov pop inc clc bnd mov icebp inc loopne pop push lods xchg cmpsb das imul fiadd jge and ljmp cmp jne cmpsl jg xlat mov test add mov rorb cmp (bad) ljmp or das sub pop cmc xor add adc pop add mov jns cmpsl jmp out test push add jmp or out mov xchg xchg adc add addr16 jmp dec pop int3 test test sub inc sub (bad) pop lahf clc stc add and not inc (bad) int ficoml sub imulb scas (bad) decb xchg push mov mov ret daa out scas jl jb fcoms lahf and jmp ret xor adc push jns into icebp popf cli or jmp xchg idivb das jns add fldl xor push lret call push loopne repnz out inc dec adc inc add addr16 out mov inc xchg jno shrb xlat cltd stos dec cmpsl scas sahf aad pop adc add mov push test xor mov daa add rorb fstps inc push in ds xchg cmp add test stc jo mov push test jns dec xlat cmp pop cmp add imul mov jnp pop sub in rclb add mov adc cwtl in ja adc pop mov aaa jge or xchg push sub sti stos dec jno rolb shr sub xchg lods lahf jb mov and sub pop or pslld (bad) out adc cmp pop (bad) out mov adc pop ja pop lret push sub mov pop pusha lahf xchg ja insl mov and (bad) ds sar mov sub pop int3 cwtl xchg or popa cli dec jle push test fwait stc loope mov push outsb mov pop daa mov out incb sub sbb cmp xor out pop inc dec notl mov fnstcw mov insl mov sbb and jae xchg ds nop xchg imul and jge jmp out dec push vmovaps push sbb addr16 out sub dec pushl and jp inc mov (bad) mov mov inc in dec addl add loopne fist sub sub daa add push xor bound mov orl lds sti pusha jnp arpl out lahf loopne not cwtl pop jg sbb dec insb fcmovnu add add cmp dec pop cmc movsb rolb cs adc or (bad) jae sbb icebp xor inc sub dec lret pop leave xchg push scas cmp (bad) fsubrs xchg pop insb mov dec pop pop arpl mov in (bad) test xor popa rep insl add mov popf pop jbe jb dec cmpsb xor dec and dec xor jecxz clc cmc ja mov sbbb push aaa sub test sbb cmpsl in imul lds testb cmp iret or or push icebp les out mov inc jp push mov jecxz cmp rol xor nop int in mov outsb or out jle xlat sub push movsb nop (bad) xchg loop popa or jno into push push loop mov mov or pop sbb fdivrl jns test jne aad addr16 lds push loopne jle ljmp sub sbb (bad) test add add dec add nop out mov in xchg xchg mov (bad) jle stos adc idiv mov add and hlt pop shr movsl in or and mov inc lods outsl add ja and stos pusha jmp fildll adcl out mov push inc icebp xchg lret mov call es (bad) and dec xor stos mov sub call ret jge fdivs jl mov (bad) xorl call adc push clc push push or ss (bad) adc sub fs sbb adc leave sub or adc or pop push sbb xchg lret mov sbb in cld or and jnp or add sar andl dec cmp jecxz or inc push cmpsb xor sub cltd fsubr (bad) adc repz cld sbb add mov push xlat sbb (bad) jg mov add dec mov sbb pop or (bad) popf add mov adc cld (bad) icebp xor loope mov and pop aaa pop outsl sbbb aam out push test xor jae xchg xlat outsb ljmp (bad) (bad) jl dec aas repnz push fcomps dec sti pop insl xchg add outsl test adc add fiaddl pop adc push loop or mov or or dec test dec jg and or push repnz cli aas jnp testb or mov fidivl dec int3 push stc push sub pop (bad) cmp (bad) psrlq jbe sub push adc lea adc scas jo pop mov inc scas out mov lea fisub add lret call push es xchg add rorb mov popf rclb or add mov addr16 xlat add shlb and je lods clc int fimull in jbe push outsl das mov adcb jbe and sbb loop dec cmp cli inc adc mov mov add js jg out xchg repnz xor enter mov fisttpll mov mov mov loop loop fist xchg adc push push push lock sub ja add into jge mov push test inc jecxz popf fsubl adc mov ljmp ret mov add das jle dec popf add pop jp inc lret jae xor jmp mov xchg push dec test pop push pop inc dec xchg sbb xor and scas repnz into out dec mov insb xor in add daa xchg ret inc sub insb push dec push pop jbe in sbb or (bad) xor and addl js mov daa cwtl call and repnz mov jae push cmp loope addb sub pop test jns cli (bad) jl jmp mov cmpsb arpl add adc repnz fisubl sub sub inc scas jne sub push imul in mov jmp pop pop pop call (bad) test mov and loopne mov add jb out ja inc mov sbb add data16 inc cmpl sub dec nop or mov in cmp jbe dec ljmp ds repz xchg cltd add or lds cmpb cmp pusha mov xor insl adc sub jg pop and jle dec push les adc (bad) shl xchg mov mov or ret or pop add ljmp sub and jge sub rcrl insl jb sbb sbbb fiaddl mov addr16 add leave mov subl mov dec and loopne xchg cli jge je lcall push sub loope daa mov adc repz (bad) jno scas adc adc xchg (bad) mov mov mov aas inc mov pop pop push mov clc pop add sub mov cwtl adc xlat in in mov ja std les mov mov mov add push pop stc (bad) outsl (bad) je jmp (bad) leave lods addl das sbb inc xchg push sub jb sbb nop jp (bad) fmul or add sub pop xlat cmp xchg cmp popa (bad) push bound or mov pop out insl ret mov or mov and pop dec sub divb and sub mov dec pusha scas mov jbe and pushf mov (bad) push add enter and cmc ljmp cmp pop shl dec mov sti xlat sub inc sbb pop push cltd aad andb jbe adc pop enter or das pop int3 in push mov mov add xor in adc sbb push inc (bad) sbb aas jg xor fsts sahf add ljmp popl aaa lds fnstsw or or and jb cld mov addl jp repz mov mov push jle cmp movsb int (bad) sbb (bad) cs lock les ficompl adc scas pop cmp add xor dec les scas mov (bad) mov sbb aad jae into mov jp pop test add cmp add add mov inc and in fildl iret mov test jmp imul adc das xchg or push add popa mov outsl push jle inc cmp lcall in jge mov push pop pop mov xor fcoms lock dec mov shrb jle xchg lods sarb cmc cli nop mov into std outsl js adc lods pop imul or cmp insl enter shr push sub (bad) xor es xchg pop pop inc test (bad) jbe (bad) jne mov adc pop push cwtl mov fild sbb sbb icebp jle fstps jge add xchg mov lss rep in xor add jle mov and add (bad) aas push xor cmc cmp out sahf jae and repnz jmp add stos xchg and pop or pop mov bswap xor sub push push rolb sti ja mov pop jno xor div test add pop stos add popf cld insl sbbl add push sbb loop (bad) xchg or aam pop and dec insl test mov cmp gs mov ds ja imul mov idivl fadd addl daa (bad) ss dec ja ljmp outsb rclb push mov pop jne adc test push js cltd outsb pop dec mov push nop add notl inc add jg jns das add cmp (bad) bound cmp rclb cmp dec jp jns and sub repz arpl push push xchg or leave aam jg cwtl ja dec inc sti dec xchg push loopne imulb push (bad) popf sarl mov or pop into pusha js xchg pop jle jns mov fs out inc jne sbb inc push push xor sub pop sahf inc pop pop add sbb fldenv cwtl hlt jp sbb xchg (bad) dec inc or movb bound jae push insl mov cmp sub xchg jnp in sbb add aad jmp adc jns (bad) sbb stos (bad) jle fdivp mov or ret and fnstenv in rcll xor adc add xorb add jbe mov mov repnz sub push pop sahf push push lret mov fistpll divb out xor add jmp ja iret out mov lods mov add xor ljmp mov jnp mov fdivrp add cltd inc outsb jg push cmp mov ja pop push or push psrlq jecxz pop pop sbb lahf inc fwait push mov rorl call rcrl mov push jl adcb aas or and in out loop fldl imulb (bad) cmp lods idivl sub inc mov jb fwait lahf jae add dec lds xor adc js shlb mov add test push push dec sahf (bad) js pop lods cmp sbb mov popf cld pop rcll ds pop cmp mov ja mov in ret loop outsb inc add das loope add pop notl mov dec adc pop std aaa adcb jl xchg sbb repnz rcll leave lcall pop aas jns or xlat mov pop pop jp nop mov jbe fcmovu bound out mov push push push ja out mov rcl cmp pop xchg sti jmp fsubrp arpl xchg mov out mov or mov cmp sub or mov jl xchg push aam mov mov cmp fstp xchg dec push mov test int3 xorl out jecxz add (bad) lock or test mov int3 insl and (bad) sbb aaa outsb in cmp pop rcrl jg mov (bad) adc or fs mov adc (bad) dec adc shlb inc cld stos sarb aam scas sub and mov xchg (bad) inc push pop sbb xchg push inc addl lods sbb int leave in sub jmp mov js dec and push leave movsb sub mov jbe xchg insb mov fist das (bad) imul insb cmc nop push das or (bad) jge icebp cmc in movsl in stos imulb sbb in adc sub adc pop out pop sarb lcall xchg jg int rorb mov (bad) test sti sbb sbb pop pusha lods push push gs push mov inc (bad) mov js movsb push or push adc out inc std jg cmpsb cmp out shll shl jb jl in sub dec inc sarb cmp es add roll pop xor pushf jmp xchg es or lcall imul sub popa daa addps aas jb pushl cmp in jle xor lds cli push cmpsb pushl inc jg shll test imul lret ret jb sbb sub add dec cmp adc xchg sti lret fsubl (bad) rclb inc pop iret pop and dec or jg pop mov (bad) pavgb (bad) pusha sub js jp mov xor xchg sub (bad) mov pop pop inc (bad) xor imul pop inc js push push inc imulb adc jle scas and mov push cltd sbb repz mov xor (bad) aad imul push icebp aas add ja sbb add decb sub ja or jl add stos or mov ja xor call stos js push or lods in sub cwtl pop sub (bad) xlat stc rcl adc push push inc adc (bad) fdivr xlat (bad) sub rcr jle pop loope ret shlb jb or push lret sub out sub dec and xchg mov adc or push into pop je repz jg cwtl jb jns push dec fwait movsl adc pop or pusha stc jae push das sub or add jne mov (bad) std adcb mov cmp fcmovu mov xchg pop sub mov add jg sub or pop pop outsb iret loop cmp add iret sahf push mov pop mov pop cmpsb inc push lock sub add xor xor dec loop push insl movb (bad) or or adc push pop in add nop xchg (bad) or adc iret jb mov push mov pop jle notl fild push mov add jo ret jae mov lds dec pop jmp pop repnz mov sub push (bad) outsb xchg pop add hlt sub mov sbb (bad) sub lahf fdivrl jbe pop lret or adc add add mov mov add sbb inc sbb mov add add pop je push jl sub ljmp in sbb push (bad) xchg arpl test sub fsubrs shrl add add movsb adc and pop insb push push clc mov ja movsb mov loop neg xor addr16 adc movsl sbb pop fmull decl mov lock jl dec loop out sub or popf (bad) and in push dec mov inc movsl push mov lds les dec push lock mov dec dec inc push sbb int3 fstps dec scas fs stos pop stc add xchg xor lret or ret sub fcomps mov in sete les push ret sar jle ds cmc ljmp jno js jbe sub pushf mov mov es leave ret data16 sbb mov (bad) adc xchg add jne lahf (bad) push add out push push loop leave pop jge addl push push in scas cmp loope sub mov cli pusha js shrb jg rolb out inc (bad) into mov repz push jo or inc inc mov sbb and (bad) cmp in dec hlt fsubs cmpsb jle push clc lahf les xor es push cld pushf in mov cmpsb dec or imul add lcall gs mov movhps push pop mov lock add mov lock pusha mov in xchg pop and out iret adcl pop add pop dec mov test leave std test scas pushf mov adc mov adc or pop int3 enter lahf fistpll hlt inc mov stos add jo or add je xlat and sub pop mov or addl aam mov jns mov add mov in paddq push movl les mov jne mov negb cwtl cwtl pop add jbe stos fs inc add scas adcl icebp cmp mov inc or sahf jnp or loope in add pop lods fucom sbb push mov (bad) pop jp pop enter bound popf mov pop loop sbb iret jne icebp sub jle or add aaa shl (bad) dec adc inc or hlt jae lds push lods cmpsl add daa (bad) push ret jmp push add test jge lds ds fldl pop les or cltd test fcoml jb sahf dec lret jbe imul inc dec sbb or adc pop mov pop test add sub ja cmp addr16 pop and ds adc push jecxz fwait rcll in test das or mull enter inc xchg ljmp (bad) fcmovbe mov xchg push test cmpsl fistpll lods jg scas jo jmp stos pop je mov inc add lcall and jle jbe add ja out loope,pt and push fildl or loope jo inc add push clc hlt cmp pusha ja repnz daa push pop inc test scas shlb jl push push lret adc push mov pushf cld xchg ficompl stos pop mov push cwtl imul add fnstsw clc (bad) js mov dec cmpsl pop dec jnp test dec mov jl adc sub inc jmp sbb push xor add pop idivl xchg imul testl and cs fistpl push inc sbb pop es push mov jae ja jnp aas fs adc ja insb lret inc sub inc jle mov xor cmp aas sub subb pop xchg pop mov in lods hlt imul mov jp fsubl mov std mov ljmp ret mov jg (bad) pop mov adc adc mov and push imul or rolb inc repz fildll mov lcall mov xor cmp ret sub add jo or sub mov adc sbb mov (bad) repz mov add jmp jne bound fist lds inc fsubrs testb mov push mov data16 les inc ja pop xchg add and jge push xchg and (bad) cmp push iret dec in pop jg xor and pop repnz mov xchg test inc adc xor sbb sub loope (bad) idivb sub or jmp xor jnp jp push lock in scas test sub sbb jp sbb xlat mov or or divb pop neg shl lcall mov pusha lods in add sub lcall cli inc out js pop jnp in pop iret inc mov mov call (bad) outsb cmpsb sbb orb std pop add add lock sub test fcomip (bad) pop pop and shl pop pop sub (bad) (bad) nopl aam lods test inc pop pop cli out mov aas pop or push outsb cmpsl ret add (bad) pop jmp mov or cmp mov in test push xor data16 stos add fs jp cwtl add ds xor cltd push jb in loope push rcll mov in push add or xchg cmpsb or (bad) jbe lret or mov (bad) aaa repnz mov xor inc mov jmp jecxz cs loopne dec div fcmovbe icebp stos sub dec mov call dec rolb push nop inc ds out leave scas and adcl xlat jle push scas shrl sub test add push push push insl enter mov ds in daa push mov out jmp das push shrb mov nop clc les enter mov lods test ret outsl popa jo cmpl mov add or cmp std sbb or int adc aad cs sub jg leave aad cmc pop mov jae pop clc mov jb xchg or mov or stos add fadds mov sub or xchg (bad) or dec out jnp xchg (bad) pop or sbb cwtl sti out sbb int3 or push or or push cmp cmp pop xchg outsl push cmpb cmp adc sbb daa aas insl push mov push fisub jge push pop mov repz gs push (bad) lahf cld aad or fiaddl ficomp inc and (bad) xlat lret cmpb mov sbb jg,pt push pusha popl loope cmp mov add pusha das lods iret sar iret fmuls repz out cmc std and mov xor push pop fsts inc add into cli outsl push mov gs pop scas inc jecxz mov pop and xlat test pop pop in dec stos pop stc xchg rcrl sbb cwtl sub dec lret and ret lock sub sbb xchg stos mov sub xchg jp inc lret imul dec xlat or and bound and test jge and dec cmp add add daa mov pop sub xchg add sbb mov push xor xchg stos pop sbb fcoml add adc fs xchg outsl imul sbbl scas jge xadd mov bound adc dec daa sbb fdivrp dec push lret adc int3 cmp addr16 jno and sbb inc loopne mov pop aad lret xchg cmpsl test pushf sti aas xor stos adc dec aas mov dec in test xchg movsb mov sub sub call aas jb sub mov lcall jne stc mov fwait push fldl sub out outsw pop xchg pop mov sub mov cwtl test add pop imul pop jns fcomip (bad) jp mov inc xchg sub mov push cmp push in (bad) loopne cld jnp jmp mov andl repz dec clc popa xchg aam iret sbb adc les out repnz shrb push pop xchg (bad) jmp mov sub mov sub (bad) icebp push jg xchg xchg push popf mov adc xchg sub add pop ljmp rorl loope mov rcl fistp ja sbb mov loopne sub cld out xor sub xor pop push mov lds cli dec or mov pop push nop dec mov test in mov dec push add loop dec lahf dec lret xchg jle adcl outsb dec (bad) lcall mov push fsubrl mov push fist pop xchg xchg das sti dec out adc jo scas mov mov jle fnstsw cltd cmp pushf xor sub xor push add jne xor sub mov mov adc loope add pop inc repnz roll mov js inc loop add sti pusha xchg les fist jg outsb test adc push add inc push adc out test push (bad) jnp jae mov mul xchg andb cli outsb push pop daa push arpl imul mov add mov xlat jmp sbb push out adc or test pop in ljmp inc pop pop popf les rcl shrl xchg in jbe xor or and sarb mov pop inc pusha add mov addr16 andl adc addr16 or xor insl mov or sarl mov or xor add fwait dec push jg mov lds sti je and xchg pop mov std cmc add push movsb popf incb and lock inc (bad) mov aas xchg jl pop pop adcl mov adc mov das dec rclb xchg (bad) dec mov add aaa mov pushl dec or dec aas add and fwait test not aad gs push (bad) xor cmp push mull shll pusha push push inc data16 mov dec ds lahf pop push push test pop adc jne pop push xor dec sbb in (bad) setl push add cld imul jecxz xorb jge lahf xor jge push mov mul jl xchg push xchg push pop inc popa pop adc inc cmp pop push xor or pop inc (bad) add push iret jno addr16 add outsb pop cmp lods in add leave (bad) xor std (bad) icebp sar or pushf lds ja out pop cwtl pop jmp jl (bad) fisubrl dec mov xchg mulb pop (bad) jo jmp adc mov pop into loopne daa mov ficomp jge jnp fs imul ficoml fnstcw add loope jb push insb rcll pop xlat pop add sub out xchg lcall mov inc add mov and orl cmp jg jbe les jbe ds push jge push add cmp sbb out mov mov jge insb movsl adc cld mov in test mov imul dec mov xchg out pushf cmc push cmp in sahf dec xchg in shr adc push daa scas pop lods xchg add addr16 out (bad) mov pop fisttpll adc push stos enter sahf jae xchg add xchg (bad) incl jp es daa (bad) daa fs xchg adc jb stc xor adc or cs cmpsb add lahf sbb jge lock pop mov mov mov push push push sbb jne fs leave shlb lret je xor sbb ja outsb pop add fistpll jecxz adc xor jl imul and bound outsl mov (bad) sbb lods fbld test inc dec and fwait mov mov jbe cmp lods scas aas jb add xor sbb jns cs add xor mov fmull jbe or ret xchg push imul pop jle dec push leave and jne in sbb aas out add ljmp je (bad) daa sti jge mov push (bad) imul aaa inc push testl push notl lret xchg (bad) push mov jne jg push addb iret lds into bound pop loop out dec es and std leave jle push call mov mov push sub add pop push popf (bad) movsl bnd das cmpsl jg sub adc fistpl xchg mov mov sti cmp xor xchg imul jns popf or pop cli push jne adc mov in add out icebp jbe pop cmp pop xchg bound lds cvttps2pi cmp or mov out sub popf mov or adc jl mov xchg stos cmp push fsub push sub and inc test sarl sbb fiaddl jb or xor add inc stos or and xchg popf shl rclb cmp xchg fsub (bad) xor push add xchg aad and loope jno inc jle outsb mov push push ja inc mov sbb sbb aas mov arpl stos lds or add cmp pop insl pop or mov in sbb pusha jno pop sub out xlat or sahf add sub ljmp inc add pop add outsl push inc inc jo cwtl iret pop (bad) push sub and (bad) sbb inc je xchg fdivrl mov mov cmp jl lods (bad) pushf pop rorl frstor pop cmp mov iret neg jnp dec mov cwtl adc fldcw xlat mov add das out pop jmp jl adc push pop idivl mov aaa jo sbb int3 xchg hlt jne dec pop or push shrl push and or jb adc out or lods (bad) or es xor dec inc or adcl xlat add push push dec pop ljmp mov cwtl pop out cld int3 add jg mov push gs add pop call jnp scas add in jbe mov mov imul or inc gs push xchg xor aad mov out aam jg sub sub shlb test dec mov push out int ds mov hlt sbb jl dec mov jbe add push xor lcall mov push add xor pop xlat cmp mov push xor push mov and popf in push fstpl or outsl or or dec std sbb or xchg jae adc scas movsl movsl add and or push outsl xchg mov pop or sbb popf adc jge jnp or and ficom fcoms daa sub addl sub (bad) jb push jno mov leave jg sbb fisubr lret or stos cmc inc jg je das negb lock mov or mov dec pop clc cmp adc dec pop add pop aad dec leave mov xchg cmpsb mov and sbb jne sbb sub gs mov dec dec repz mov push push movaps ja push sarb push lods xchg lea mov xor add push sbb add xchg loop lret int3 (bad) mov cmp fiaddl lahf mov out jg inc push std jge in pop xacquire jmp or in adc xor rclb out enter inc (bad) or daa xor fildl push push push das push and xor inc pusha add mov adc adcb pop testl xor testb xchg aam jbe inc pop popa pushl cmp mov adc push add jo cld and sub add inc shll xor adc ror push cmp lahf (bad) insl andb test xor and mov push mov or in dec nop or out dec xlat lods and popa ret sub mov xor xor dec pop jno jnp push cmp adc mov jp orl sbb push fsubl sarl (bad) in or stos lret or mov dec idivl jnp and fninit jae dec inc cmp sub mov (bad) hlt mov test add push sarb mov insl adc subb xchg mov ds or push lret pop inc mov fdivs adc fmulp and mov push adc add push movsl mov mov pop pop stc or pop mov xchg and or cwtl push xchg mulb dec pop mov lock jne ja sub aas stc cs jne gs jl inc push pop inc pusha mov mov out loop adc out adc cmp leave xlat sbb out ficom jp mov add dec or ja pop and aaa xor cmc iret dec dec push cli sbb (bad) xor sub push std xchg jns addl cmpsl nop aad jbe in out push pop fucomp mov and aam inc add (bad) sub mov add sbb lds xor add in pop inc dec lods cmovbe xchg scas adc repz push push ss mov aad cmp push movsl pop push pop (bad) jge jnp lea adc pop daa pop cmc xor or ljmp repnz popa pop or sub or pop mov jne xchg repz test sub dec adc pop push jl pop icebp or ja xchg es pop loop das sub test or pop jne push bound jne icebp outsb sub or jg or sub or dec pushaw es jg das pop xchg add fprem1 sub add mov pop mov or sub mov xlat jg fcmovu mov mov push add jl mov pop (bad) jmp mov xchg (bad) je clc pushl push int3 das mov cmpsl pop mov adcl pop mov mov out xchg aaa sbb jne leave or xchg outsb and jecxz movsb decb jno xchg sub outsl push mov sti push out int rcrl (bad) test scas jle ja addr16 adc xchg dec movsl addb lds pop popf push lar test add repnz out test fmuls xlat dec ja mov mov push pop scas leave pop jmp pop icebp (bad) lods push cmp cmp jno and mov ret cld out pop sub sbb add adc in pop push leave lea pop scas aaa outsl mov fldenv cmp out add fnstsw xchg pusha leave repnz jnp or or out addb mov push mov xor int3 cmp data16 or cmc push xchg pop dec add mov add mov das adc js daa jbe add cmp dec or push push orb pop lods in out vucomisd (bad) sbb sbb cltd sbb cmp ljmp cmp add sub cmp aaa mov sbb insl fbstp ret jmp push into popa sti fwait jg (bad) or sub add jne (bad) and mov xor cmpsl stc aaa das rclb scas cmp dec pop psrad imul int jl lcall fildl cmp dec lods push divb rorb rclb push add jnp call std mov mov (bad) mov cmp into dec je jge or pop call roll inc pop sbb pop jbe out cld mov rolb lahf arpl adc pushf pop inc iret sar sub pop jbe call sub add cmp xchg xlat adc add push (bad) imul dec fstps inc jmp push xor aad jae jg (bad) scas cwtl pop ret fstpt or mov pop xchg push or scas (bad) xor jge cmpsl dec fsubrs psllq jl and (bad) mov add mov lcall push xchg (bad) daa or push mov ja push and add add rcrl adc or jmp lods or mov out mov daa jge test pop pop fstl push stos sub inc nop decl imul and popf push pop and fst cmp inc jae sub dec xor mov std jnp push mov pop and ret andb das add (bad) push or outsb mov (bad) repz adc fisttpll xor das sub xor mov jns ljmp push js rorb dec cmp or add pop ja cmc pusha sar cli cltd movsl mov and cmp or loopne rcll pop out jge pop inc xor cld test repz pop cli cmc cmp pop pop jo add pop mov in mov sbb inc mov pop add shrb pop or ret jg or adc (bad) pop xor cmpsl pop shrl popf mov std aaa cli cwtl aam shrl push and pop or out jmp sbb cmpl das push (bad) outsl jle loop jg inc or call aas pop jle and or stc fnstcw push aaa inc push fisub adc enter adc rcrl rorb enter push or mov sti outsl sub mov lret clc xor push enter or add loopne (bad) das das cmc roll or sti lret pop loopne popa icebp sarl hlt dec and add ljmp fcom and push es xor adc or adc push aaa ds cli push icebp imul lret pop pushl pushl cmc shll ljmp or rorb xchg js popa lret cmpsl mov mov or call mov clc sarl jle call jo push mov loop inc (bad) mov les fcoms mov cld pop movsl jmp push inc lea mov lahf inc (bad) cmp es cld sub shlb pop jae repz add add sub or xlat (bad) adc lcall push push pop mov loop lret pop xlat cwtl inc push mov inc cld ss in loop js orl or pop xchg jbe fisubl in sub jne icebp dec jg and inc sbb jmp jbe mov dec adc inc push jne mov mov repz stc les repz dec mov fiaddl fldl cmp (bad) jbe enter lret jmp pop ret pop icebp sti dec cmp mov fbstp outsl and pop and pop pop bnd mov mov mov out mov addr16 jnp pop mov dec or push sbb jae pusha push (bad) adc push and inc push jecxz cltd or cmp sbb push pusha repnz ss arpl pop mov jmp je cmp adc sub pusha push or jg jnp pop and mov pop ja aas or ja jmp push jns mov in inc inc fwait cmp vphadduwd and dec test sub pop mov aas mov push pop fistl add xor iret enter ds push add popa jo push not cwtl jbe push cltd lock cs jae aad cmp nop add lods add outsl lds mov xor call les loopne adc add jnp add add mov pop sti xchg test movsl add ss jno mov mov add popf ficom add call mov add inc in xchg nop dec or nop mov es decl or push cmc or (bad) push out pop test daa jle cmp push (bad) loopne xchg dec jg jle aad jnp sbb loop mov lahf jle pusha pop or pop dec iret push push jge push sub cmp jmp pop nop cmp pop inc decb fsubrp clc scas aas and mov sbb rcr mov (bad) xchg xlat inc test mov scas sti (bad) aad notb push arpl jno aad pop les sbb fldl xchg enter pop (bad) jae inc jae test xor fwait pop push lods dec sbb mov stos pusha push (bad) xor repnz aas push xchg je push mov lock adc daa ljmp push and insb cmp repz in mov push int3 and loope das mov lods xchg pop subb iret cmp fcomps mov fmulp sbb mov adc jecxz or lods sarb xor dec subl insb or push inc shl jge cmp xor jne jnp mov sub scas icebp mov mov loopne push adc xchg mov pop stos push or icebp mov mov xchg sbb jl je adcl scas cmc out fsubrl jo stos loop xlat mov add aas push jg into dec and out jg loopne outsb adc inc mov das xor fmulp adc fs call and push aas jg (bad) mov mov lahf sub xor pushf int cld pusha mov cmp mov ljmp xchg sub and jmp repz jmp es mov jp cmpb dec push xor sysenter cmc jb das fidivr fidiv mov add in cmc jge rorb out mov mov xchg (bad) pushf and (bad) jmp push add je jg add lds mov adc popw clc mov idivl jecxz inc lret adc or pop pop and sbb mov mov push mov push lahf or xchg pop sub imul aas fs inc pop aam aad std pop dec mov mov or (bad) xor in in mov inc fisubr inc in rclb ljmp popa push push in mov into bound stos add mov xchg imul cmpl jecxz addr16 movsb insb pop sub mov mov out pop in (bad) or inc les sub js loop dec push sub xor std outsl outsb mov add rcrb adc lcall negl sub das cld (bad) jmp divb sub push rolb mov xchg fucomip arpl (bad) fdivrs xchg pop cmpsl jle and or daa sti ret insl cld mov les pop push pop addr16 ss scas inc pop fcmovu movsl insl sub sub push or lds cmp push push xchg shll mov scas adc stos movsb mov add jg cmp push addr16 popl xchg adc xor jge fistl adc or idivl inc cwtl movsb push jmp mov (bad) fild out mov lcall sti jl sub adc xchg adc pop jle lret (bad) repz cmc movsb push (bad) stos jno repnz ss lock or jne jnp mov inc inc orl outsl ret orl lea jecxz xlat sub push mov adcl jmp ror movsb adc lds dec ljmp sub xchg test test sub xor cltd mov push cmp adc sbb jae cs fdivr pusha xchg push jge sub or pop sub xor ljmp popf pop jmp pop cmp mov lods push pop leave mov push movsb adcb hlt iret out add mov push dec or out wbinvd mov mov jae cwtl push adc hlt inc push jnp dec aas std jnp adcb outsb sbbb mov add push out outsl lahf shlb orl sbb iret jbe push xor sub call dec sub push daa push fnstsw fs lahf call movb cmp fdivr xchg pop jle add (bad) mov in in add mov jl pop or pop incl repnz orl mov sbb inc test shrl cmp push mov pop dec push loopne sub jp jge dec (bad) xchg xchg inc pop or aaa das addr16 mov lret popf loopne mov leave xor and sahf scas pusha xor or push mov sub loope lret and stc jbe push jg adc movsl ja mov fld les add sub push sub icebp cmpsl xor dec inc and push cmc sub int cmp loope pop out rclb sbb out andl pop fsubrp jle and nop scas cmp mov fidivl jecxz fcomp aas lods les fisubrl push inc dec imul lret scas add jbe add out pusha gs lock jns ret pop mov or jo std mov repnz lods inc enter mov fistpll nop stos dec cmpsb sbb cmp leave jge dec (bad) and popa (bad) xor add les out or sub sub pop test fnclex pop add jne sbb push dec jg sub sub jle pop imul dec std loop fsubrl inc push sub mov pop scas xor loop add movsb sbb das mov rclb mov xchg test or dec fcoml (bad) push xchg (bad) or jle (bad) mov inc mov lds xor mov jmp pusha ljmp jno das cld aam sbb jecxz jo cmp jg mov or cwtl mov or pop ss jno inc jo add mov xor push ret dec xlat adcb xchg mov lcall and push or dec imul insl (bad) sbb adc (bad) pop and pop lahf inc push xor movsb scas aam scas sub jmp imul call cli pop outsb jmp sahf cmp lea (bad) pop call and es imulb test sbb neg add lcall add mov mov (bad) or or or jnp or pop (bad) push insl cmc mov or fisttp sub mov add orl divl stos jecxz imul xorl cs push xchg or push sub mov add movsl inc and aaa adc (bad) dec jmp cmpb (bad) mov cltd subb add push dec push pop mov add xor and icebp ret shrl scas je (bad) cmpsl das imul and dec pop mov push std xchg loop or daa idivb outsl roll add inc lods sbb inc subl popf subb cmp repnz push aas jmp mov ljmp add (bad) cmc popf or push add ljmp je cli cmc adc out cmp xor xor (bad) cld jge push mov stos imul add pop das pop inc in lods icebp cwtl jns daa daa jge sti pop xor outsb push jl rolb gs insl pop jne rcr push pop mov xchg shlb xchg in pop fnstenv hlt fbld out jl cmc mov outsl outsl movsb addl call and fst hlt mov mov icebp out jo cld dec outsl add mov jmp inc (bad) setne mov or pop popf push in lret push push push xchg fistpl push or mov or lea mov xor dec repz mov pop pop xchg ret mov mov sbb loop xchg test ss call popf cltd out test lahf jno jp cmp add jbe cmpsb inc movsl push jbe pop aaa std cmp je mov sub adc add push push icebp mov mov pop xchg jmp and dec in pushf lea es into jle mov mov dec negl lahf popa aas xor test ret dec in clc push gs xor test ret push push or out leave or mov add stc push scas sub mov insb or cli cmp and add xchg test (bad) add push adcb out mov or rorb je stos xor sub mov fs (bad) pop sub sub push sbb ja inc xchg neg or in rorl nop rol dec daa ja,pn dec jmp or scas mov out sub xchg loop lret dec fbstp call (bad) xor add push push jl jl add lahf (bad) jg push sub stos xor (bad) outsl add cs or pop xlat and mov sbb add push cmp scas insl icebp cmpl mov or jg in test lret mov inc xchg scas jle push push cmpsb or dec (bad) gs inc adc or push push xchg dec or jmp pop ficomp xor jno outsb lds lahf into fs int jb fs loope sbb sub push imul cmp (bad) in aas lock icebp in push pop push pop pop les lds mov xchg adc test xchg pop push or outsl pushl cmp gs andb out or cmp ja or or pop jecxz das add pusha xor fistp inc xchg add dec or nop inc push xor je daa pop mov add inc pusha or pop std pop lock xchg adc lahf pop mov scas and jp call jle push add stos add scas pop rol jbe dec jg and test (bad) loop pop inc iret bound repz fsubrl or or sbb clc sbb mov cld ja scas mov jne cmpb xor mov or add cli movsb pop inc scas inc aaa jl rorb mov in inc jmp outsl push jp and je (bad) or mov xor pop add push decb push lds sbb push xchg das fstpt adc or add push lcall jmp and mov xchg xchg xor xchg cmp aad jno sub fildll hlt out mov pop mov mov dec arpl add popa imull lds adc adc inc push in sbb pop adc push mov mov mov pop and inc jnp xchg insb add (bad) ds insb popa add pop fisub dec mov mov dec xorb ljmp movsl test xchg or icebp repz push sbb mov daa faddl rorl add cmp lret das mov push add mov aam add (bad) rolb std jns loopne daa ljmp adc or loopne pusha mov pop cmp pop pop loopne sbb xchg sti popf (bad) xchg push lahf inc inc aad push and pop cmp pop mov loopne sti andl insb addr16 pop jmp push sarl jg repnz mov loop (bad) xor xor mov out dec insl push mov daa ror aad rorl pop fsubp sub push pusha lret sahf jge jge pop pop jo jnp (bad) mov rol xchg (bad) (bad) pop mov mov sbb xor add sub or les adcl xchg sti sub (bad) adc pop push pop mov addr16 and ds cs mov push or aad push fidivl mov sahf mov out outsl dec ret mov cmpsb dec mov push fnstcw lcall in lods sahf aaa daa cs shll popf pop mov dec dec lods lods in out ret mov cmp or xchg xchg xchg (bad) or push fstpl sub mov push mov adc stos or bound adc xchg scas leave rcr sti loop jno add cli xlat in jge cld cld cli pop lcall inc mov das lret jno inc sub (bad) nop add pop call pop add mov mov sahf lods pop ljmp mov add sbb aas xlat mov insb push je daa (bad) icebp or sub cmp pop cmp sub ja xlat inc dec pop inc in cmpsl call and ds call mov sub adc mov mov push dec xor (bad) push push cs mov sub cmc adc cmp cmp adcl ja cmp add movsl mov hlt aas sub jmp stc jp les mov and clc pop pop push mov mov test push test stos ret jge outsb pop sub cmp xor or push mov mov adc pop xor ljmp push (bad) xlat cwtl loope xchg sbb rclb out cltd sbb push lock sbb arpl dec mov push dec lcall cltd sarb add jp call in add lret sbb sbb scas fisttpl mov jne or nop ss mov push pop push push push xor int outsl pop pop jbe cmc jge sarb and loopne (bad) into mov mov addr16 outsl sar loop add into inc pop xlat in mov rcrb inc mov out enter push mov pop lret pop and cmpsl ja adc or add pusha jg daa neg push xchg (bad) dec pop cli mov pop sahf dec xchg mov mov push stos sub push adc sub sub and vmovddup call add jbe cmpsl or pop or pop sub xor in mov xchg pusha cld dec lock lock sub cmp mov int3 loopne xchg cld xor jl repnz lock (bad) negb stos add pop gs and notl nop std jg lret xchg xchg jbe cld andb push repnz mov aam xor mov sub js xchg rolb pop call jg shrb pop and push es imul and pop sub je daa jb or daa es fidiv dec inc jp cmpsl in inc or imul dec xchg pop ret mov aas pusha jecxz and jle push popa or sbb inc jge inc push daa add cli sti imul jo popf addb cmp movsb and imul mov bound das lret xchg inc shrb insb pop repz stos sub xacquire aas cmc push mov sahf adc std mov mov dec jns je and fs push stc leave push push enter jl bound arpl add imul nop test movsb add sub mov xor mov adcb push xchg (bad) jo push in mov add fiaddl xor mov ja (bad) cmp mov dec and mul adc pop adc cmp dec imul repz sub aam movsl pushf fbstp push and int lods adc add push xchg add sub inc pop pop dec imul dec add mov dec popa dec cmp loope xchg pop arpl into or lahf xchg fiadd jle mov outsb sub push rorb xor dec cmp inc test inc mov jbe jnp dec mov pop cmpsl dec push call mov add sub data16 pop ds adc adc pop xchg cwtl add push xchg inc mov jns movsb popf sub aam lds pop mov cli adc dec mov outsl mov xchg ljmp rorb or leave test cmp pop mov pop adc mov xor xchg idivb lods jns imul inc mov or mov repz push hlt push add mov out push shlb (bad) out jns dec pop push stos ljmp incl jle cmp pop sub pop mov lcall mov cmp ja cs xor popf or or add push js add pushf pop jae scas aaa sahf rclb mov (bad) mov je pop jmp sbb jle movsb fstps ret addr16 hlt cmp daa mov jecxz mov dec mov ret enter xchg dec adc inc imul jp jno lret jge aas push inc gs sub sahf fs or in (bad) jns iret stos pop jle inc add les mov xchg cld outsl add outsb lods push add pop sub or xchg mov add fildll inc inc or dec iret mov sub cmc pop outsl daa cli cmp das aad pushl lock or dec sti jg daa testb mov dec sub sbb mov rclb xor push sub cld stc movsb adc das pushf lock sub mov (bad) jb or stc aad es xor or sub fist sti mov ja jo iret dec fnop jp cmp mov adc mov fcomps inc add push mov fildl or aad pop push adcb out das mov dec add pop jge inc or pop inc mov sahf test (bad) cmc mov mov push mov lods in dec xchg xchg or pusha mov movsl jno mov scas out out lds test dec outsb mov mov jmp xlat inc sub mov subl clc push cmpl lahf adc aas jnp xchg inc inc push std push or adc or or dec push outsb add (bad) mov add lock or adc jmp scas push or adc pop adc jne cmp mov popf icebp fsubrs addr16 ja out loop or xchg cltd xchg sti call pop sub xchg pop mov mov dec xchg push jae add scas outsl add loope es aaa add sbb xor adc or inc mov add mov jo pop sbb dec scas sub mov data16 movsl decl sub cmp add sar shlb sarb xchg pushf (bad) or dec (bad) insl xor (bad) or xchg lahf mov das stos lods clc jecxz push sub and lds sub repnz and add fldcw mov add das std out cmp pop pop push and push mov aam outsb enter add dec cmp inc mov ds (bad) shrb div outsl in pop nop or pop adc mulb lds or ljmp adc daa pop jg das (bad) out pop stos mov mov jno aad cmpl in jmp mov mov jne push (bad) mov push push pop aad or rcrl mov std jle stc jns xchg movsl and push in cmpsb popa push std (bad) sub adc in aad scas xchg mov jmp xchg frstor or push xchg mov push xor fcmovbe pop ret dec adc dec pop push pop fldcw add repnz iret and mov into sbb ds pop adc ja out imul jge (bad) pop aas fwait cmp andb rcr cli insb addr16 adc pop or jmp hlt hlt dec test cmp fstps lret orl mov add push pop shll lock pop mov loope in lds xor lock or or adc jo xor sbb xlat out xor xlat xor popa (bad) lret adc push jl or sub adc pop xor aam ds in subb (bad) xor das or scas mov cs jno (bad) jge mov or mov fucomp ret loopne sub dec push addr16 add xor jmp adc (bad) mov mov shlb sbb popf jnp xchg outsl stos inc es aas dec shrb cs mov inc add inc push sahf lcall icebp (bad) pop sub inc rorb pop rorl insl mov cmp pop push cmpsb and dec stos cs loopne mov je and inc pop lret push es jne cmpsb imul jae and mov pop pop fistl loope imul inc and xor enter (bad) rcrb mov add (bad) std sub jg outsb mov scas mov mov inc jmp mov dec mov or sbb enter sub test xchg flds flds fnstcw jle cli fs in jp push add idiv mov lock pop sbb aaa sarb jg push xor sub mov repz add mov cld push cmc test ret xor stos adc ja gs mov js rcll fwait repz mov test jge mov (bad) and negb push xor cmc mov push pusha sbb adc pop pop xlat in movl je sub ja fildll mov bound jge xchg push and push scas xchg pop mov std ss mov into or (bad) fdivrp dec dec add test (bad) mov xor sub clc xor aam into inc fstl sub imul jns push outsl or sub or ret xchg in aad jne in lret rorb adc outsl sti and cmp mov mov mov in pushf out push pop adc mov ljmp pusha pushf scas jmp cmp xchg push or push cmp push xchg shlb jo or pop inc mov push dec (bad) jne stc aaa or sub pop pop les add jne sti and mov xlat dec jle jmp xchg stos cmp cmp push pop cmp add mov fbld sbb or ret or sub sub jbe std cmp xor sbb xchg cwtl pop add adc ds cli mov add out pop jecxz push mov and daa jge mov mov pop mov jp ret adc xchg cmp pop inc fisubrl pop les sti cmp aas (bad) inc mov fdiv push or sahf inc jae shl repz test decl push sti cmpsl aam pop dec mov or mov or movsb lret cli mov cmp sbb cmpsb xchg scas inc repz imull pop mov xchg push lds or cmp imul or stc add or adc cs pop mov mov inc add push icebp sahf int3 push rcll pop mov clc inc pop xor sub (bad) fsts sarl push cmp mov (bad) jne cmp dec dec dec mov dec lret rorl jle fcoml jo push rorb cli jg add xor mov mov cmpsb (bad) roll (bad) out cs pop push sub jmp cmovnp xor movsl fdiv sbb lahf ret scas dec push sub mulb aam dec test loope pop outsl bnd mov mov outsb jecxz dec insb push sub xchg jae stos nop jmp call push stmxcsr mov rorb or iret add mov add int3 add pop call packsswb loopne dec (bad) das repz sub sbb dec fstpt out cld lahf lods cmp xor mov mov shrl cmp jg vpunpcklqdq mov jmp mov dec std sbb incb ds jb add sbb xchg mov xchg push add js scas cmp cmp xor cld mov pop or inc push jo jbe hlt movsl pop cmp ljmp and mov push xchg lods add push (bad) pop test loope mov jmp out pop enter sbb cmpsl or aam inc push movsb jle in add test sbb or adc or incb pop jmp and jae add roll ss pop arpl cld inc sti add sbb and nop leave sbb in adc out rorl (bad) mov inc cmp int je add sti lret ja inc aad add jb pop fidivl pop movsb mov jnp and and adc daa push cwtl cmp push inc lds pop pop mov dec pop movsb sbb push lret mov rcrb or pop not call pop jnp cmpsl (bad) adc mov dec fildl dec xor adc jmp outsl xchg jle jge mov mov ds in mov aam dec or push add popa push insb mov mov lods xchg fcmove rolb stos les pop lretw add in mov dec sbb mov pop add out sub and xor pop dec ja sub das sbb rolb or jp add xchg jo rolb (bad) jo or cmp add push cmp in mov pop mov out inc sub sbb data16 popf (bad) adc dec pusha fs and repz rcrl lods add xchg jmp ret (bad) in icebp sbb push jl xchg fbld pop adc adc mov and push mov out push sub or jns sub mov pop cmc cmp push sahf mov inc dec jae rclb xor repz fcoms mov jp test pop lods rol out add lret fnsave adc imull sbb (bad) loope sub mov outsl jmp out test ljmp sub shl imul inc xchg mov aas jp mov dec add popa xchg imul lods and andb or pop mov ja push push push jne and bound hlt inc inc mov push lock (bad) push popa inc add jmp dec mov jle mov or jle push aas push shl mov lahf or sub pop jne push out nop cmp mov scas adc lock psubq inc sub (bad) pop icebp jg cmc pop add lret adc pusha mov push jle and push scas dec xchg sub rcrl subl sbb pop adc cmpsl cwtl pop sbb and cmp or das jnp pop loop shlb push push out jg or dec ret pop inc jle cld fs sub mov cmp mov popf popa sub dec inc and data16 push sbb mov mov ret (bad) mov pop add sub (bad) pop pop push xlat xchg (bad) jns jg call mov cmp jge add aad mov inc mov divb and add push lahf sbb fwait inc punpckhdq clc out xchg stos shlb push jle (bad) arpl jge add es push or aas jg pop lahf icebp lods imul pusha mov mov dec mov icebp sarb mov push outsl (bad) outsb incl ret (bad) or pop mov lret or sub mov pop jnp pop stc jae push push int sub mov (bad) cmpsb dec movsl js add mov or insl ret xchg cld shlb or mov in insb mov mov cmc mov shl loopne pop sub ds out inc test mov imul imul push fidivr sbb fcomps jp rorb and popf inc adc (bad) cs inc inc cmp mov mov and jp into test or (bad) mov je lods push lahf push mov dec xor add (bad) enter das pop pop shrl jg dec jge xchg stc push xlat jg xlat mov (bad) push add ror out mov fcoms inc in aad lret jae xchg mov (bad) es sub hlt pop xorl add push jne ds lcall rcrb lahf rcll test cmc (bad) ds stc loopne out sbb pop (bad) js test or add or push push cmp push bound (bad) xchg pop push lret and clc loop jle pop rcll lods cmp (bad) out fbstp push imul lods stos lret and or daa fcos cwtl mov xor sbb and in xchg daa pop enter jle push sbbb add ret sub dec stc je lods div xchg inc loope,pn add lahf in sti adc scas test mov vminpd (bad) xor out mov xchg pop (bad) fildll inc cmc cmp test add sbb test leave pop push add cmp pop sub mov sbb fisubrl in pop loope in sti add nop adc jne dec add popa inc sub inc jg daa fdivrs dec das (bad) mov stc pop pushf or inc (bad) push les dec xor cltd xor mov pop arpl (bad) xchg mov frstor leave aaa jne mov fucom adc sub jecxz nop cld push mov sub roll pop stos pop pushf jnp repz sti jl adc testb add xlat test xchg shll test mov push icebp dec out adc pusha sbb movsl out pop xchg push sahf push mov int3 mov loope jge jg add (bad) jae xor cmp ficompl xchg dec jnp pop lds (bad) ja (bad) movups ficom into repnz shr fwait add repz lods or mov movsb sub add add pop cmp clc ja std ret (bad) mov xor mull insb dec jne push xlat loope lods sub pop lcall daa xchg cmp cmp pop imul iret outsl std pop jns push xchg fmuls int3 imull and clc add sbb insl sub sbb pop sub jbe ljmp cmp pop (bad) mov add popa add sbb dec pop jne enter xchg setnp loopne icebp or pushl or js add sbb sbb or adc xor mov jnp and jbe ficomp pop push ror lret and negl gs repnz das (bad) nop xchg icebp jbe fistp and and mov pop xchg pop mov sub aas stos push int outsb jmp iret out mov jnp outsb mov and jle jmp das push pop mov into inc ja jl fildl jmp lahf jmp adc inc (bad) mov loopne or ja (bad) xchg add arpl mov testl mov mov pop mov sbb xor repnz cmp mov jg xchg push pop jae add into hlt xorb sti jge shl mov mov xchg popa dec jo sbb xor (bad) dec pop movsb fidiv les sub sbb stos mov push mov (bad) not out cwtl and adc aam jmp and mov mov mov and in dec inc cs shll pop sub adc add push cmp insb xlat or sub pop sbb loop add pusha inc inc jge das mov fildl repnz imul or xor cwtl sub fiadd mov mov adc mov pushf out push xchg pop pop pop in jecxz jbe jne testl jnp ja xchg divl adc xor pop pop pop adc insb xchg arpl mov dec stos hlt or gs and add add xchg pop xchg cli fstps push or inc (bad) mov and adc lret add ljmp add sub inc xor xor ljmp pop loope adc pop jo cld push loopne push push jle cmpl cli push or lret mov (bad) sbb cld xchg ss fidiv jecxz (bad) ret (bad) jmp mov scas cmp jmp pop jp cli aam inc or pop mov xor mov inc arpl sbbl adc fnstsw stc clc cwtl sahf add daa mov sub js daa neg loopne lods sub mov rcll and inc add fildll mov cmp jmp add pushf out jle mov xchg loopne adc addr16 test xor adc cld cld pop pusha sub pop cmc jno or lret push test or inc pop push (bad) push js cmp outsl xchg mov in sub sub or sub mov gs dec iret shrb and cld dec jns subb mov push xchg mov das jmp inc jbe dec aad push pop push push enter dec sarl (bad) in mov mov push enter dec clc inc adc mov and inc rcrl cmp gs fxch cmp les pop dec out pop push push pop xor push stos cwtl jmp lcall stos dec (bad) xor test mov int3 (bad) rclb (bad) fistpll lea xchg mov inc pop mov inc xchg sub popa xchg mov add push cs in xor pop mov pop ja aam add xor mov (bad) adc icebp pop rclb or dec dec mov mov push inc fbstp fsubl mov les jbe pop in pop lds push push and decb out sbb arpl xor jle or subps xor ss addr16 pop daa pop sbb cli xor mov mov push or push inc cmp or adc in (bad) xor pop lock ljmp cs add test push les in es jns add outsl jge fcomps mov shlb lcall cmp lret lds jb (bad) ja push enter xchg loope sub cmpsl dec clc outsl jo xchg and mov out jge xor outsl dec inc inc mov or inc (bad) jge loopne and adc pop push dec pop sbb lcall and and xlat jg sub push mov icebp cmp jns jne xor dec add sbb repnz pushl rcrl je push or mov push push pop push movsl clc and rorb inc lea add mov sub cwtl mov pop lock cmp pop dec push movl pop jbe pushf cmc or cmpsl clc lahf push icebp mov call outsb or cmp aas fcomp pusha dec adc adcb test adc add mov cmp mov pop fwait push lea out sbb imul pop push push push call xchg incb inc neg mov pusha add xchg outsl aas mov pop cmc add and push sbb mov inc cmp popf das mov push push push inc cltd jmp scas cmovns rol inc push push sub jl or loopne xor jne pop loope or sbb sub and das push repz movsb mov or sbb maskmovq push mov jb jne jge cmp add out xchg outsl jo out adc xchg pop cmp ljmp xor cs adc mov test push stc daa xchg cli mov (bad) sub push mov xor lret or mov add cmp cld inc mov sti pop outsb mov jl pop jge cmp push or inc mov insb push xchg mov inc add ljmp xor or loope cmpsl xchg xlat push push mov dec dec jmp mov xchg stos push add mov adc sti je push cmpsl lock add out xchg inc cmp pop xor movsl and add nop jne out lods ja add add add (bad) frstor and imul jmp imul and ds pop pop pushf imul les sti and pop inc mov div pop incl shrb xor inc pop pop (bad) test jbe imul mov scas add scas xchg push and daa adc out pop cmp jnp and clc jle mov jo jmp out inc mov xchg lcall outsl xor out (bad) lret cmp dec add xor jle jbe adc dec cld lods mov or clc lret loop jnp aad and enter mov ljmp xchg lods mov mov cmp gs jbe fldenv cmp leave pop cli hlt cmc xchg sbb test or sub mov fidiv inc sub (bad) jnp movsl xor xlat pop mull push out dec repz jno cltd je and outsb mov mov outsl jge jp pop test je out pop fdivr (bad) dec pop scas sub movsb mov sub out jge mov addl jle arpl scas jle mov icebp imul or popa cld pop arpl push scas push imul out xchg in or add inc mov adc das nop or std push jg sbbb lea push or test pop push fsubr leave push pop xor push jnp pop xor insb repnz xlat les pop mov sub aad clc sub push push das mov (bad) and rep mov mov out or and divb int3 lods jo enter mov dec jmp adc xchg outsl jne and out hlt jnp mov in push adc fnstcw jo cmp or xchg xor data16 fiaddl fcoml cmp pop dec aam mov mov add shrb xor (bad) dec mov jmp inc fs iret or mov push nop mov inc jbe adc lahf xchg test and dec mov or sbb pop push adc ds add sti jne sub and mov (bad) sarb sar inc lods push push push popf sbb movb outsb adc dec or lods cltd mov testw xor (bad) mov dec imul bound adc mov add pop dec pop jge jge add mov mov jg cld jge inc pop xchg or test mov jo mov jmp adc sbb add inc iret cmpsb sub adc loop or addb sub pop pusha xchg push push push inc mov dec pop jg and mov push into xchg out nop pushl (bad) pop outsb les iret insl stos nop cmp fbld adc xchg mov mov add in icebp pop (bad) adc lret mov sti inc and mov outsb mov imul cs or loopne inc sub fistpll push add inc adc xlat xchg lds in movsb (bad) adc aad stos adc (bad) (bad) fild or dec es test hlt mov std mov mov inc fldenv pop ja mov rcrb pop insb add scas push cmc or pop xor pop scas mov lea les lds add mov inc ja roll mov outsb add pushf xadd add lock add inc mov fs cmp pop movsl sub adc xor jp pop pop sub dec jmp dec inc mov and mov jnp mov xchg mov adc imul cmp incb imul add xor xor mov aas clc out push cmpsl xchg mov and mov jnp ds mov in aas mov or adc and add jb fdiv mov and (bad) mov pop mov out in sub jle ds mov mov std or ja test add imul fsubrs mov or xchg add (bad) fisubr inc inc xchg daa in dec loope inc cs pop inc mov icebp pop (bad) pop stos sti push xor fidiv scas mov sahf and int3 inc xor mov pop loope push pusha xchg popa dec in dec cwtl push repz mov (bad) jb insb mov aam and das mov add push cs or aaa popf sub adc mov mov jo jmp mov sub push loop lret jns or jp imul mov enter xchg cltd pusha mov idivl xor add ret pop cli jmp icebp test sbb fdivrp dec pop xor outsl sub rclb aam mov imul stos push int xor xchg or push fimull iret (bad) aaa mov std jnp and inc push push je jb cmc xchg out imul fistpll (bad) or mov pop pop fidiv scas pop outsl in mov fbld scas xchg (bad) mov popf clc (bad) in out add aaa sarb xor mov loope mov idiv aam pop xor gs xor or mov data16 mov push nop add fsubrl add adc sti cmp push rolb mov test or pop in lahf mov or add sbb push fnsave (bad) pusha add pop push enter mov in pop sbb out mov cmp push int sub cli sbb out shrl mov lret cmp ljmp add popf xchg or out sbb cwtl stc add sub mov pop cmpsb fsubl pop mov mov or xchg jle ljmp adc pop mov jle mov mov jne mov outsl (bad) icebp in rclb dec pop cmc add mov mov addr16 add pop les jle test pop sub nop or sub gs dec cli mov inc pop std jge test push jns aad mov fdivr xor jnp aad sbb push out hlt pop jo maskmovq imull jns negb xor mov jmp in fcomps inc mov rclb decl in inc inc or dec sbb outsb or lcall push stos out xchg mov (bad) sti pusha push mov inc mov call pop sub and dec pop push sahf mov (bad) pop ljmp test or cwtl stos mov push xor (bad) bnd sbb xor pushl notl push push pop jle mov sub or ja scas fstpl jmp sbb arpl jae or add pop cld xadd les xor push pushl das xchg sub jmp mov test out outsl das aad push dec push divl ret or ret push enter cmp int call out movsb je xchg cmpsb inc jg pusha xor rorl cltd lcall xlat and pop fcompl mov and jb cld das aaa pop cmc xchg dec aad push mov out push jo fisttp inc (bad) sbb mov mov ja dec add es (bad) jnp and xlat sub cli pop jl int insl mov xchg adc jb xor lds jbe push inc (bad) mov or push out xchg xor faddp movsl lds lock fdivrl mov mov test jnp push or push jne es add add push dec add sub mov stos or rcrb add adc inc or jg mov pop inc shll std or aas movsl or insb inc xlat daa push inc jb dec pop lret dec mov jge jecxz inc stos pop cmp test outsl or add ret stos push xor xchg gs mov lds or sub sbb sub je or xor hlt mov and adc add leave xchg xchg push add lahf jg aad xchg or inc pop cmp in fidivr scas mov movsb mov cmp cmpsl adc xlat jg fldenv in pop lret push pop mov sti jnp cltd iret add lds and mov jl push add daa cmpsl xor xchg cmpsl bound in mov shrb cmp jo arpl jmp jb cld popa sub inc call outsl arpl faddl or pop mov mov xchg xor fs clc cld or fdivp lret icebp pop jge push adc sub scas loop shr sub jae jl adc dec dec push test jl bsf gs mov iret pop neg movl jno cmpsl push inc pop xchg ljmp mov add mov push out outsl push mov add lret dec xchg pop js or rcl mov sbb adc cli cmpb dec cwtl das and xchg mov jp mov push pushf mov cltd pop addr16 das lret ret pop cld xor movsl dec mov inc test out out pushf push pop push out pop out inc add dec mov mov hlt loope and insb cmpsl pop lds push cs (bad) aam clc (bad) jp lahf or imul push push add add fdivl cld call lret and arpl push std lock fnsave lds jb fimul pop (bad) push in jbe movsl xchg daa (bad) adc push pop pop jbe adc mov xchg faddl jl mov push scas fs das lods bound add pop lods jns push mov dec dec xchg mov jmp ljmp push test pop add in ret sbb inc add push into jl call mov xor dec push mov rcrb incl stos out mov add loopne pop sub ret adc test lret clc jae dec mov adc fnstcw xchg pop lock test in mov mov les ret lcall push inc loopne push push sub iret jl lret push pusha add popf add cmp adc mov adc inc cmp pop push push pop mov jo adc adcl xchg xchg jb inc (bad) in add sub push push sub pop (bad) int3 loopne xchg out sub mov jb dec insb xchg xchg cmp pop mov add add xor nop and cmp (bad) jnp sub (bad) loopne sub push jge mov mov (bad) ds jg jge xor or out mov (bad) repz (bad) fs sub pop push xchg sti sub lea cmc pop stos mov dec clc aaa or ljmp imul mov scas fcomps rcrl sub jge sub pop in adc sub or sbb cld mov scas clc mov pop adc icebp jbe mov daa fwait repnz add add push xchg cld cmpl dec imul sub sbb or jecxz fucomi cld incb rcll mov mov in insl sub jmp pop mov test mov jecxz jg test popf inc outsl xchg adc sub xor pop push jno xchg push add nop cld and jg imul in pusha in arpl fsubs mov lret loopne mov in dec add ljmp and push pop popa cmp sub sbb mov mov (bad) push (bad) lret mov aad stc adc int pop sbb xor pop jmp push push push pop mov stos lds sti jle add (bad) mov sub and ja fldt outsb in sub push or jno pop or sahf push shrl imull into cli sub test pop inc mov cmp aad jno mov add ljmp jnp nop pop dec movsb add push xor xor or dec add add fs xchg popf out cmpsl pop push sahf xchg fstpt pop push mov shrb push push fnstsw mov adc ds cmpsl aam rcrb sar hlt outsb inc push xorb addr16 sub call fildll jae es mov add push nop frndint insl push xchg mov pop cmp pop and inc adc (bad) sub or mov outsl mov jmp mov add pop jle xor pop lcall pop (bad) or or repnz aas out or (bad) repnz jbe add adc adc mov fildl lods loopne and jl dec (bad) mov push jg ja dec in mov mov dec mov cmpb mov sub call mov daa js cmc popf inc and add arpl mov adc cltd fwait jno jg shll std in push out test cmpsl add jns decl mov flds inc sbb fwait and push add dec sahf jnp mov int shrl dec sarl mov hlt add sub ja clc les or pop sub cmp fdivrl mov jp dec push sbb mov inc arpl ja sub push std cmp jge icebp addb adc cmp inc cli sub add inc mov inc leave out or and incl mov or mov push ror add fcoml dec stos inc adc lcall test jae mov jbe leave xlat mov push gs test pushf jb inc ss jl fcoms xchg xlat mov pop inc jo xor push or movsb jmp mov popf pop scas or cltd xorl enter nop pop addr16 push push scas aad mov shll pop adc mov sbb dec inc (bad) sub or int cltd sub mov nop test jge insl std add pop sub mov fcom pusha xor push mov aaa repnz jle orb xchg jmp dec xlat pop orl popf ljmp (bad) xchg and fstpl mov or int3 and testl and pop mov loop inc andb cmp je jne jno cs jo pop stc xor bnd xchg cmc mov push cs insb sbb jmp xor jne mov loope in out imul or add and add add addr16 mov sub jb push mov das dec ljmp pusha pop sbb (bad) popf cld add add jnp aad stos sub dec push fnsave pop pop xor orb jg adc out inc or xchg ja push mov test xlat mov sub mov inc or leave or add sbb jnp inc mov add jno jecxz pop or bswap pop sub scas (bad) pop dec mov in iret push rclb mov xchg push (bad) mov pop movsb add jle or popf mov addl div lods sub push dec mov jns fildl dec or add pop sub in mov aas stc inc movsb mov sub outsl hlt adc fsubrl pop or stc notl loope jl push shll jg xor sbb jmp mov sbbl mov xorl cmp lods or scas (bad) ja sbb dec sub popa orl jno xor dec nop sbb and fnstcw lahf or dec imull incb pusha sbb loop sub iret sbb add adc or outsb jne pushf cmpsl lret rcrl cmp jo adc in pop stos (bad) push or test pop cmpsb mov clc dec cld mov hlt add sub cs inc push jnp jmp (bad) mov loope dec cmp (bad) mov dec hlt mov push sbb or pop jbe stc sub add ror (bad) or mov daa push jmp push mov mov jmp (bad) sbb in imul fisubr stc jg int pusha sub sub movsb mov out cmp adc jl push aam sbb cmp pop push addl xchg xlat xchg notb jnp push mov icebp push clc and enter adc xor mov jge fs mov xchg add enter sub mov fwait dec (bad) cmp ds cmpsb outsb or sub inc imul sub pop pop ret les add fistpll or xor mov add ljmp or hlt ljmp push into movsl and scas loope cmp out mov jbe in sbb mov addb dec jg lcall fldt lds sbb mov inc das invd repnz mov dec inc push push (bad) and dec stos cmp mov (bad) int (bad) je pop jle addl bound into adc xor fcomps and jns jmp or cwtl mov cmp xchg clc das xchg pop sub lret daa fiadd dec decb xchg (bad) fstps outsb addl xchg inc out dec aas idivl xorps ja mov lods push push jnp fiaddl inc outsl cmp add dec lret call dec add (bad) stos sub std cmpsb test cli push xchg push pop subb test pop pop ljmp fild mov inc or mov inc fucomi dec lahf lock aaa sbb sahf xor (bad) jnp sahf dec mov adc cwtl and mov out pop pop in sti fmulp or adc mov xchg add mov (bad) fucomip daa pop pop int3 repz or cmc mov fnstsw (bad) (bad) ds adc cmp inc inc jmp addr16 das loopne ds sti sarl mov call fsubrs mov mov mov jmp jbe sbb pop mov xor inc (bad) dec pop insb sbb adcb repz mov in cltd pop aas dec mov cmpsb repnz outsb movsl int adc adc dec into (bad) jno jge cli pop loop inc test jae jl push pop add jo xlat xor repnz (bad) fdivrl pop into jns out push jbe and insb ret sub push push or jl dec and push jo lahf jnp test insb (bad) jns add out movb and push add repz push push xchg ljmp sbb sti rclb pop fisub data16 add jg add roll dec dec (bad) jge jmp pushl xchg dec test jnp out mov inc or push fnstsw aad addr16 adc fmull fldenv imul and sub add test or and outsl xchg lock add sub xchg vpshuflw stc outsl jmp push jle sub aam pop pop stc jne (bad) pop out int3 iret push push mov sahf xor inc or add jp loopne sub pop or sbb ds push addb or pop add fs adc mov in or mov repz das mov sub inc adc mov insb push cltd adc jecxz sarl push les push or or jl and cmpsl leave sub lods push pop popf icebp sub cld loopne jmp lock xchg int3 cmp cmp or stos add (bad) fdivrp je fstpt sub (bad) or xor pop jbe and (bad) iret in in jmp cwtl fidivl cmp dec daa subb jb adc mov (bad) cmp fnstsw inc or rcrl (bad) popf xor int mov push dec leave mov push pop xor (bad) mov (bad) mov add jecxz mov jns mov sub clc add inc scas sub fadd sbb jne ret fsts mov jnp adc jg ja aad outsl xchg pop mov arpl sub lods add inc mov cmp repz out sbb inc insb add in and mov add stos incb xor xchg fsubrl add dec pop in xor ljmp stc lcall pop xchg rolb movsl push cmp sarl ljmp jg or cmp in imul xorb cmpsb out popa es push pop inc sbb out dec ret mov or (bad) int3 nop xchg inc inc out test imul call push push mov push mov std jg (bad) mov push in pusha push and loope pop sub xchg sub cmp (bad) fidiv fdivs or cmc pop ret jno xchg xchg stc ljmp inc inc push mov dec mov insb xchg icebp add inc test cld invd mov sub add pop push stos pop fsubs aas sbb in pop cli adc pop dec pop adc inc subl push push pop out mov cmp inc sub sub or fsts pop xor xchg pop aad inc pop outsb push lcall loop fild add pop popa repnz mov mov mov mov les pop sbb aad imull decb call mov aam adc dec mov repnz inc push inc in mov repnz lret lods icebp in imul stc mov pop leave add sub jl mov mov mov sub ret or cmp imul push xchg scas arpl pop repz rcrb or cmc xchg test mov sbb in fs xchg imull (bad) ds repnz dec subl adcb mov xor ja jns dec sbb pop arpl and fisub jecxz in sbb lahf sub dec stos inc cli jnp sti jge rorb cmp lret (bad) jne xor iret jns,pt cmp pushf add or pop in dec pop fdivr outsl mov inc fisubrl jmp movl inc or dec adc cmpsb adc pop (bad) loop lcall negb push jmp mov push aad jno add sbb frstor sbb jns or pop cwtl or bound inc push fs and mov iret xlat mov pop std xchg jmp jg sub pop push out (bad) add aad push and dec fdiv cli fidivr and sub push lret add sub imul (bad) pop or or or pop sbbl scas daa mov (bad) mov fstps mov out arpl mov sub cli mov cmp push das inc xchg (bad) (bad) (bad) or cmpsl jne xorb les jae repnz sti push and lahf loop cwtl sub cmp adc (bad) cmp rol sbb pop sbb pop mov xchg movsl add and push imul into nop int or lret jge fisubr jmp push sahf jecxz in and push push clc xchg movsb out inc xlat jmp in repz outsb outsl push lods or das rorl push inc repz or cmp das out cmpsl sahf (bad) mov inc xchg push (bad) add or dec pop ja push jae outsb jno jnp leave ljmp (bad) stos add (bad) push sarb scas ret adc pop xor test mov mov lcall (bad) divl sub dec add mov mov sub lret pop add xor ljmp mov pop dec fnstsw mov add pop inc jne stos int adcl out stc cmpb out divps movsb and lock or push add dec cmc arpl or push (bad) aaa rcl sahf clc sti lret cmp adc or cmpsb xchg pop stos fisubrl icebp das push mov add arpl mov mov cmp add (bad) cmpsb pop pop andb mov aam repz xchg (bad) jge jb (bad) loope inc (bad) fimull pop add lods inc stos add sahf int pop xchg xor lret sub jno imul je add ret push sub jo (bad) jmp push pop rcl mov ret fdiv (bad) ja add cltd sub push xchg mov decl pop add pop add jne mov repz mov sbb or mov add jmp scas mov imul pop dec push lret cmpsb pop stc pushf (bad) daa mov sbb sub test pop movsl push mov loope scas jl daa push pushf adcl push cs push insl pop js xchg popf mov mov push sub cmp (bad) push lods popa dec cmp aaa ficoml pop cmp lcall mov rol fdivrs rcl mov ret ret aam or mov in (bad) jl mov inc lock xor adc push dec (bad) mov psubsb sahf jl dec or add push lcall sti pop adc add mov (bad) xor push inc je divps stos and xchg aam clc inc or xor pop jg push pop inc sahf push jbe outsl sub xchg shl pop stc lret push add test pop cwtl int3 fimull adc js inc out (bad) xor ljmp test cmc push std out lret push push int and ret mov ljmp repnz or cmp jmp mov dec fiadd in sti jg sub or shr jge jae mov test or jno mov inc add sub xchg repnz xor cld addr16 push loopne ljmp mov incl ret lahf ss sub cmp push push and pop ja dec pusha adc pop pop cmp mov lea decl ds or mov mov and inc call fnstsw mov addr16 add insl rcr adc add pusha xchg pushf add ljmp das test mov stc jp repz mov fs fcmovu mov les and ljmp iret mov push aam jecxz push out enter cld bnd loopne and jg or mov sub adc loop xlat subl aaa sub add mov xchg fsubs lock cwtl pop jo dec cmc test sub mov inc scas leave pop test or push pop fnop int test cmp mov jne (bad) lock push sub push paddw test inc or mov iret ficoml adc cli push or ss jns pushf and dec daa dec xor mov push js cld outsb and cmp mov (bad) dec imul dec add roll outsl push and repz sub inc mov add xlat jl fcom (bad) movsl jae imul andb (bad) popf cli int3 and push pop aad add mov test arpl dec pusha xor sbb add jo shlb into dec shrb scas xor pop int lods add mov mov jns xchg (bad) sbb xchg stc fstpt push rorl mov and mov rcll mov (bad) (bad) xlat scas cwtl mov add dec cli iret scas add and daa mov adc in lahf mov mov sub pop es cmp shl mov mov out add and dec adc pop ret imulb aaa movsl push xlat dec ror mov mov inc xchg leave push and (bad) jg sbb sub cs inc jg pop out notl mov xor lahf inc cli pop and mov in add into or sti xchg pop push jl add xor jae sub psubsb in in xlat pop out cwtl jecxz movsb sub (bad) mov insl jb mov cmp andl call cmpsb xor pushf inc dec xor fisttpll out and call mov add outsb pop js add lret cs cmp aas mov jmp inc push and into ja push aam add fdivl add mov imul mov sti jne inc movsb movb les mov daa ret scas lock jnp rcrb add lahf sub push push nop cmp ds sbb mov rcrb cld jge mov jp movsb dec push sbb aas es adc lods into add adc mov add out push add mov sub pop movsl ret adc xor jno iret stc mov jb out add jle cmc fcos pop nop cmpl pop ds adc insb and orb test loopne dec lods add adc insl ljmp orb push jp jge in std push mov call mull jl or push jle and aas mov (bad) mov add mov cli push xor sub lret sbb add jl sbb add icebp aas push aad jge dec sub dec std add and inc lds mov aaa in pop sub inc push aas ja repnz add call adc loop shr jae fcoml (bad) jnp pop nop lea fistp rorb push push add sub ret rclb in and pop inc cmp cld cmpsb cmp pop add repz and sbb inc xchg cmp xchg jns push out jmp add mov lods sbb xlat mov dec sub pop scas bound ss mov clc in aam mov push popa mov inc or mov fdivp test loopne sub (bad) je pop jb arpl les pop mov and rorl lret pushl fbld sub pop or fldcw adc pop add jmp nop or dec dec inc adcl or idivb repnz das bound dec dec aaa mov pop pop jbe sub and pop pop push push mov push mov push int mov sub (bad) ss dec sub enter and sbbl outsb leave loop mov cld test test mov jns (bad) cwtl xor inc out mov xchg dec dec push scas addr16 xor aaa or bound iret add cli daa stos hlt pop in movsb mov jmp pop pushf adc or pop xchg pop jb pop push mov or leave mov incl add add mov (bad) mulb xor fistl mov nop push js mov dec cmp sbb cmp in (bad) xcrypt-cfb cmpsl fs jle scas push cmpsl or inc rorb push call inc sub pop pop jne mov (bad) pop jmp jmp jle lret mov mov jl cld push stos adc or (bad) push pop adc fimul sbb add pop mov pop int3 add cmp mov pushw mov sub rcll or adc push ret cld pop pusha pop arpl push cmp fadd add jbe lea jmp (bad) mov das call adc ljmp stos rcr idivl inc out (bad) aam xor xchg pop mov pop aaa std sub fwait orb add inc fbstp imul into ljmp (bad) cmp pop out inc or jno movsl dec int test xchg dec or (bad) adc jl jbe xchg rorb call adc xor and bound subl cmp pop jb je lods mov imul or or aad ja dec or mov push jecxz add push cmp jge out mov add mov push or sbb cwtl sbb out daa stos push rcrw push pop mov jg and push ja add xor sub mov std jns in xor xchg movl cli xor mov imul add push test cmpsl pop mov cld jnp push loop push repnz insl pop in inc adc addl jle jno pop mov add dec add clc leave dec scas xor pop (bad) mov mov test hlt and xchg push inc xchg loop pop jecxz aam outsl ja hlt (bad) arpl sarl pop ljmp sub das ljmp jns nop scas inc jno idivl or xchg or add ds test pop lods testb in mov sbb fimul lods and adc xchg call insl push inc add pop mov rcll (bad) and dec idivb and pop jbe test pop and test add shrb cld aas and ret orl into repz scas inc cmp loop lock aas xchg imul xchg fstps push daa in adc fucomp xor idivb lock or cld push popa xlat das jg jb mov enter cmp xchg not pop or or inc stc jg add and add pop mov dec xor nop push pop or nop rcr inc into jnp fistpll in pop and sbb scas out lock add jl js sti mov xchg lock push enter loope jae insb and xchg sbb mov std jg adc mov jp js adc stos aas aaa cwtl rclb mov decl daa shrb or mov mov jecxz in jb mov jp sbb es mov or arpl lock push rcrb xor mov fbstp hlt cltd xor jne mov pusha add and fsubrs add ffreep xor (bad) hlt in fucomi cmpsl rolb das cwtl loopne or syscall inc dec (bad) ljmp cmp popa hlt das (bad) std and loopne repnz ds add mull fsubr shll dec jnp js mov pusha push dec mov pop popf (bad) rolb loopne jnp inc fsubrs inc cmp fnstsw sub test and adc pop pop pop cmpsl pop cmpsl imul jb repnz rclb dec (bad) sbb pop push rorl pop dec cmp cmp push arpl cmpsb mov jge pop and js and fldenv cld and mov add movsb inc ja daa sbb jb add xor lret add pop push push jae mov inc popf mov dec nop pop pop mov stos scas push mov add bound xor bound jbe push pop push jecxz jmp jbe jle pop out jne stos mov xchg sub cmp xor pop mov add sub xchg fild repz ss shr push add inc mov mov jp or push scas in xchg sbb push inc in adc cmpsb out add and bnd adc mov push sbbl inc jno cmp dec loop popa pop outsl dec test leave mov in imul (bad) jle imul imul iret xor sti xor sarl (bad) insl fcmovne rcr jnp jl pop sti loopne mov call mov sbb jl push push jge int test jp dec mulb popf jnp sbb xchg daa inc add jp pop pop cmpsl mov push cmp sbb add ja loop das push inc jmp or mov add je stc add lds stos mov push jb pusha or (bad) mov subb in jge add xor lds jo clc cmp or fcompl mov and ss pop sub mov mov sub mov lahf add mov adc pop sti sub cltd cmp pop push xchg lock mov out jg push sub jbe mov pusha ret or jg push push push pop xchg mov jle sub xchg sti jle lret sbb lret stos test stos fwait dec es ja mov push push pop lods dec inc ljmp mov and mov and adc fisubr adc add add sub push in push test scas pushf out lahf outsb xchg and fimul lret in rorl lcall les shl mov stos (bad) std jae inc adc jge jg mov jo jge push or pandn stos movsb sbb in or add int3 testl add inc push ja rorl (bad) adc xchg mov (bad) lock sbb xor bound or lods gs mov lret add (bad) sub leave sub pop sub cmp sbb test sbb orl movsb jg adc push pop xor lds nop add popf mov inc mov and in addr16 into or sub mov daa sbb pushf lods cmp sarb or aad (bad) jmp ret arpl pop xchg inc pop pop jne push lea sbb aaa popa push or or icebp (bad) enter sbb cwtl push or push dec or pop dec cli cmp out sub out dec clc cmp mov xchg cli mov cmpsl jmp pop push xchg enter adc jge mov pop add xor (bad) and pop add adc or or ret test (bad) mov adc mov push sub jg cmp cwtl mov gs gs orl repnz in imul push aad sbbl aas sahf sbb push nop push push cmp mull insb insl or jne in imul sbb cli mov idivl fldt pop sbb jb adc add adc jge sub pop push dec dec test fcmovb mov popa fmul push inc (bad) stos scas rcll in fimul pop into ret xorb lods xchg sub (bad) push ljmp dec ljmp fisubl div shr jmp out push pop push rol clc dec xchg hlt das loope outsb cmp sbb or sbb out sbb orps push cld jmp jle pop dec idiv lret mov xchg pop xchg jle dec fldl dec aad xchg sarb in orl cmpsl scas cwtl (bad) xor mov stos adc sbb stos cmp (bad) popa add ljmp ljmp lock sub es pop push jns orl arpl lcall push sub sbb adc lock ja mov xor pop pop enter (bad) cld adc (bad) stc xchg iret ffree sarl loopne data16 sbb js sahf out out sub add ljmp scas xorb and jge xor jo or lock adcl jbe mov pop mov and jno lods adc mov xchg in shlb push fadd add sub adc or (bad) push cli mov movsl dec lds out mov add mov das (bad) jbe ror xchg mov aad mov cld xchg call sub ss andl outsb add jmp test popl mov cmp adc push (bad) (bad) dec pop adc pop and dec fldt outsb sti jge jp adc imul call xchg pop mov js push inc inc int push or (bad) repnz cli pop sar xchg in jne mov mov dec xor cmpl in sti jg les add aaa mov pop mov aaa inc or or es adc add sbb add std pop mov jmp xlat mov fistp cld and adc mov mov inc or mov insb lods push movsb stos mov shlb (bad) jb in mov outsl mov sbb or lock cmp push mov mov enter and inc orl ja jle cli or out ja movsl lock add sahf xchg aas mov inc xor mov test fnstsw lds pop pop ljmp jo cmpsl xorb fwait add cmp rol repnz or sub call xor (bad) jnp (bad) xor cltd mov pop jp sbb addr16 xchg hlt mov testl lahf add dec sbb ret or lea sbb or xchg push lods and (bad) scas or and int3 lods add xor jns sub dec dec repz (bad) cli ficompl dec cli pushf or aas pop int3 lret add sbb pop pop cmc or or adc jle and rcrb inc pop rorb dec pop andl mov mov dec inc out rcrl inc add mov fldl push int inc mov (bad) cli dec cmp imul add aam dec xchg pusha das or xor pop push fpatan mov push pop pop or jnp inc inc sub or lock cmc addl imul inc subb mov mov xchg test mov test cltd imull je or inc sti nop roll sbb aas mov push xor cmp lret int3 imul in jne pop push xchg ja mov or pusha bndldx iret jle pusha cmp ds inc add add jge pop push or loope aas test lods lret ja push or sub and pop push lret lock imul in out sti cmc pop push loop inc pop cltd fsub dec mov pop xor or (bad) jg xchg xchg jmp pop adc xchg mov sbb les in add adc and lahf lock pop ss pushf subl or xor pop cld xchg stc out mov sub aaa mov jo push push inc and ja aam je cmpsb in (bad) (bad) mov lea (bad) pop les int3 and daa push mov mov xlat mov adcl push ja xor dec ds not or or icebp (bad) sub nop sbb and (bad) jg or mov ret or (bad) push pop jb or jae or xchg movsl fcomps sub mov outsb insl sub (bad) sbb xchg and popf rolb push fwait sbb ret sahf cwtl test cmc je or pop rorl lods dec pop movsl into pop or cmp gs xor ror jg xlat lea movsl fldl (bad) ja in rcll push xor jnp movsb lods (bad) cmp mov test pop nop (bad) out shll stc xlat cwtl pushf ljmp cmp into std push ss mov ret inc mov insl flds lock sub push xchg lcall dec movsl or lret insb cmp pusha lcall mov sbb cli sub int mov jge (bad) stc sbb leave mov sub mov push inc out dec mov das (bad) and sbb in test addl je pop js repz sbb mov cwtl adc das push mov xor inc cmpb add icebp (bad) mov adc or add cmc lea fildll dec sub push rolb pusha push xor cld pop je fidivl rcll mov push jmp add or pop in cmp clc and pop cmp ja stos movsl add jle ds je pop jge (bad) enter or mov (bad) push push jle test lahf dec dec and dec insl pop imull dec pop push xchg add ficoml stos pop jg orl sub leave ja mov aas bound add pop xor sub pop std pop popf leave out aad pop int mov pop lock pop das sti pop pop (bad) or pusha push or scas das xorl fbstp and inc mov add cld sub repz dec inc push push inc repnz xor setge fldenv adc add out ja or and jle jmp fcompl add sbbb push inc stc or xor decl movsl out out xor loopne mov cmc pop and stos mov dec movsl outsl push subl imul pop sbb incb loopne inc jle xchg pushf jb aam in push ja inc sub pop mov stos mov decb push mov pop sahf mov pop jle and mov scas fwait mov push lds jg jecxz divl sti into dec pop jmp pop dec stos fnop dec and popf mov inc outsl add les not add in push xchg xor xchg cmp nopl hlt loop nop addb imul stos mov or xor inc pop pushl inc pop imul pop inc lahf pop jns or ret scas xchg out or adc dec and lock mov pop lcall imul hlt push popf cmp aaa inc lock add sti xchg enter mov je mov jmp mov inc iret cmp push push (bad) push fcom shrl out or or xlat push test and gs sti mov insb inc xchg (bad) push pusha loopne jecxz iret jge insb shlb push mov addr16 pushl repz (bad) call imul inc nop push sbb cmp xor dec fdivrs sub pop add pop or mov add sarl xchg adc popa into enter xchg push lret push loopne cwtl popf dec cmpsb mull leave (bad) (bad) xchg pop inc or stc mov adc mov lea aad lcall xor adc jnp scas cmp mov dec pop lods dec pop lret pop xchg mov in jmp (bad) (bad) push (bad) cmp xchg xor in mov shl fistl movsl mov and out or mov (bad) cmp mul shl test jnp cmp outsl add stos mov xchg adc roll jo pop or insb dec or sbb out pushf ja outsb ljmp rclb pop pop xor add cmp repnz xchg inc xchg fadd scas add loop rolb mov xchg leave pop pop cmp cmpsl adc inc negb jmp pop push clc jae push das mov cmpsl adc mov repz xlat lods lods daa pop xlat push imulb add cmp jg (bad) jne into loopne rorl cmpsb pop jp xorb (bad) ljmp (bad) jg mov add icebp jge popl in inc or fstpt lcall and mov xchg add jg push bound push add dec das pop inc mov cmp les cmp loop xchg stos add xor add or sub out ss mov and push mov xchg loop pop mov adc add int repz stos rolb push lret cmpsl out das or pop xor or (bad) sti movsb imul xlat fstl fcmovnbe scas ret xor cmp or dec lods jp mov sub lret stos inc jmp add mov mov add mov xchg jne loope inc mov into rcl mov in out cmpsb lcall mov mov es (bad) pop cmp call out cmp jecxz lock jle push add inc jl jge,pt push out stc pushf cmpsl jns fnsave pop arpl pop xchg jb pop mov (bad) or jb and sub (bad) xchg or add mov aas inc xor outsb adc jbe (bad) insb or sti and aas xchg push and stc dec xchg lcall mov adc stos and out pop push idivb mov clc inc mov jge ljmp movsl pop nop andl mov nop into sub in jns pop jle jp mov (bad) leave sub hlt xor and push cwtl inc jge mov pop and mov test lret or mov add test add mov les pop mov mov cmp repnz pop dec iret adc loop iret cmp mov xor pop ja scas test in aas add loopne cli add add adc xchg (bad) in push jle dec (bad) stc add add loope or pop data16 pop andb (bad) pop leave push or shll jmp mov sti or mov arpl addl arpl dec jb cwtl rolb xchg or imul bound or sbb inc mov jge add je jg lds and pop inc leave repnz dec pop dec (bad) fsubs daa cli aas push cmp in and mov mov incb in push mov out inc cmp and sti cli das out test push pop lods jno (bad) out stos icebp fidivr mov pop lret jnp sbb cmp mov and neg cs or cld fildll inc cmc pop cmp sar shrb jg ret fdivrp dec cmp sub push push and mov dec mov pop stos pop ret mov mov call add jp movsb sub sti movsl sbb test dec imul xlat call sbb push add in mov push xchg add pop aas sub jp arpl (bad) shrb push test xchg pop mov pop in mov pop das add icebp pop adc mov loope or cld inc and xchg mov stos pushf js aas les pop pop pop (bad) (bad) push pop adc dec jmp and cld fisttpll xchg fistpll jle scas sbb cmpsb adc or lods aad add cmp aam sbb fs adc sbb jb pop pop aam (bad) js or xor ret ja inc pop or fsubl repnz es cmp es pop mov into fs scas in lods or repnz add cld iret adc ds dec rorb cld mov or js mov adc xchg in jb cli push nop fwait or and add stos add icebp or jb add ljmp pop ds cmc mov scas lret fwait sub mov clc mov loopne fwait pop popa cmp cmp sub or gs in daa push adc add setno aaa and (bad) int3 lcall scas push loopne xchg stos jmp push scas mov outsl call (bad) dec lahf sub cs cmpsb outsl push xchg hlt sub xlat adc inc xchg (bad) ds (bad) xor inc movsl add bound jns mov test rcrb push pop push test repnz outsl (bad) pop and (bad) fcoms pop jl out jp fistpll xor sub xchg rolb in daa clc sub pop mov ficoml hlt pushf mov or jg or je push and pop mov popf adc or mov dec mov faddl inc lea or or add sti scas push pop pop pop test dec xor push je inc enter sbb (bad) jno sbb out (bad) mov sbb xchg fdivs jb test adc sbb pusha daa jle pop push add movsl pop and or xchg cmp mov mov icebp cmp cmpl insb xchg mov and add or test jmp mov movsl das out inc incb pop pop fidivl and rclb sahf sub xor dec pop add pop movb (bad) fs push jbe pop xchg sub inc in add das fiaddl or mov pop jp pop push dec or sbb (bad) gs push inc or mov and or jg adc cmp (bad) push wbinvd cmp (bad) inc std push (bad) mov adc xor sbb add dec mov addr16 (bad) pop pop push inc mov fnop je xor (bad) repnz js out lret jp test pop aad imul push lds jo leave or lahf ds ds dec adc cmpsb pop ss jne sub jbe push pop pop pop lock push sbb add add jmp movsb or pop in pop push push dec pop movsb push jl push cmp pushf stos in sahf loopne inc and out mov aas into mov or out push out (bad) or adc stos add cli jno ljmp pop (bad) imull sub jle mov adc mov xor daa or push mov sub mov dec xchg jnp shrb jge sbb pop add call cmc pop cli enter mov aas dec and add in aam movsb add pop incb jo (bad) (bad) fisubr or neg shll add adc jg and dec sub les and rolb cmpb popf add scas lods pop repz pushl add jo rorb adc sbb ret decl test add mov sub and or adc pop and or adc or mov movsb (bad) push bnd or out cmp ret repnz mov test dec cld hlt les pop ljmp pop arpl aas jmp loope mov push inc mov rorl fildl aam fwait push xlat dec or test fs fucomip mov xor (bad) mov mov jle dec int leave outsb sub not inc cli xchg jge and fisttp fwait pop sbb or imul xchg imul push push popf jge popa sarb rcrb jle pop push mov jo adc lret outsb and stos mov jmp out sub xchg clc leave (bad) jo inc or shrb or or sub xchg sub adc cli arpl fidivr pop lds fidivrl popf add or aas inc popa xchg push push fadds mov sar js add xor sub sub mov inc sbb fs add sub push scas and sub and idivl push dec adc mov gs mov and scas mov adc nop sub roll ljmp push ja (bad) out xor scas mov or jp in into xlat mov rol push add fnsave dec mov lds iret test push push leave sbb lock pop std shlb lret cmpsl inc inc ss mov cmp aad xchg jmp adc out pusha jecxz fwait push daa jmp and movsl imul jmp pop mov pmaxsw xor repnz push aas dec addl mov outsl jge pusha inc sbb movsl ret shl pop mov inc or add push pop pop hlt jg add adcb inc decl adc sub mov arpl popf bound mov mov mov push mov sub or test out mov dec cwtl cmp and out aam push loope mov movsb mov sbb popa out push cld jmp add sbb les std push jno popf dec xchg adc mov jne jnp test or fistpll paddw jle lock xchg jno and mov mov cmpsb xchg dec adc mov xchg cmc xchg jg fcoms int mov popw and sub sub xchg dec push jmp nop dec cmc out stc dec aaa sub jnp stos push jne mov mov leave pop dec pop lret sub scas icebp lret adc ljmp lods jle in sbb mov pop push push or mov je push inc push pop xor cs sbb push dec dec or dec stos or adc fcmovbe jle xchg xchg fistpl or lcall test shr ss xlat ja fdivl loopne add add mov add (bad) or sbb add pop int3 out pusha jne jle mov movsl pushl sub jmp push stc fimul mov mov pop cltd mov dec aas add das cmp dec notl push mov rcll arpl xchg mov je ds dec stos lret and addr16 push sbb add les out push jmp int3 and es inc xor add mov push mov inc imul sub icebp scas aam sbbb mov cmp jmp mov mov or sbb push jmp jno out loopne (bad) ljmp pop jne (bad) test fwait imul pop lcall xchg fs xchg xchg mov notl add xchg mov cmp xor cmc imul jne lcall aas cs sarb cmp or pop sbb repz neg add or aas add cmpsb jmp sub cmpsl inc xorl and pop push and icebp pop pop fdivrl mov ljmp jae mov add pop jmp jle mov in pusha movsb sti fisub hlt and mov mov jmp pop jmp push fs mov aad ret or jbe mov aaa inc shrb pop add dec nop dec popa dec jmp aaa hlt mov inc push dec pop test mov fist mov lret pop mov aad xor repnz inc dec jmp fnstenv mov jnp in pop std int or fstl popf pop imul mov xor sub pushf inc jmp add add jge,pt dec pop (bad) das or xor insb pop dec mov mov add scas mov ds and or in pushf fsubrs movsb lcall mov dec push push popa inc insl mov aas ljmp mov jmp lahf and cmp mov scas cmp cmp jnp stc cmp movsb jns mov mov out push adc popf jmp and cmp add stos inc ss outsl (bad) pop mov std jg nop dec test insl add and ds dec xchg jmp notl (bad) dec adcb dec sub mov inc push dec shr addb sub jbe push xchg xor mov or xchg std push fsubs jmp int3 dec push xchg sub sub imul sti cmp inc jmp mov scas xor cmp inc daa xchg mov push cs inc inc add gs cmp jg jnp jns pop ret or add addl add inc or jl in sbb in outsl nop and inc out inc scas js jge xor cmc pop mov mov (bad) inc fistp dec inc fidivr mov mov pop push or sub repnz movsb pop xchg pop sub hlt add dec decb pusha mov push inc and or cltd daa inc add sub and mov push test fcmovnb aas movl aam orb xchg (bad) and push bnd mov aaa sub push inc sub push loop sub incl mov cld ror sub xlat cmp cmp in sub mov add mov mov je aas imul negb dec rcll adc inc out xor and nop mov or mov lock pop xchg lret mov or (bad) cs mov adc jg sbb ret push xor xlat int3 push scas jg sbb adc pusha mov adc repnz mov pushl push push xor cmc add mov sbb js out les adc inc mov add dec xor jno add cmpsl jl (bad) jb jb bound xchg cmp sarb pop imulb stos xchg xor jne loop dec or aaa incl inc insb and je out bnd pop jo inc add test pop inc cmpsl or jge orl out dec faddl mov mov incb xchg adc cmp in out call lahf nop cwtl inc fimull inc insb enter xor and outsl dec xchg xor (bad) arpl or add add cli sbb and fwait xor inc cmp cwtl pusha jns in ret out lahf movsl loope fwait or dec sbb lret sahf and lock mov out push jae stos mov (bad) sahf xor out rcr inc lods cmpsl pop or into and in imul aas pop inc stc pop pop xchg jne lds xor daa xchg add sub or mov inc jge pusha pop sub fmul dec lcall and stc mov push arpl mov jge,pt cwtl mov xor gs sbb add add and mov inc xor std jo (bad) icebp scas mov xor fldt inc push inc add sbb xorb in notl mov inc mov sbb arpl cmpsb adc mov pop mov pop leave packuswb xor inc out cli inc dec movsb sbb adc (bad) push add add xchg je movsl aaa pop mov repnz mov lret and xor sub mov call sbb jbe pop out mov xor pop xor mov sbb sahf jecxz test adc inc popf fsubl jb (bad) xor call xor jge loopne call or pop mov adcb push sub xchg push lea leave jns sbb xchg dec inc fadd add inc cld xor fs or cmpsb leave xor add lret sub insl punpcklwd cmp and outsl inc mov es or inc inc and or push lahf xlat sbbb std cltd push add lea stos pop dec iret in or dec push sbb push inc xchg xchg pushf les sbb ds enter jp cmpsb cli add dec lea pop mov rol mov or mov and xor repz add jo sbb or imul push dec and jle add add and into add jg cmpsl jmp insb pop cmc sbb add fdivs popf adc inc sbb gs bound inc sarb ret pop xor push mov je xchg inc daa scas xor pusha adc fild cwtl mov inc arpl loopne push mov in adc jmp sub inc xor mov cli push lods add and mov mov punpckhwd and sbb mov sbb push mov (bad) sbb xor test push sbb or sub insl cld loop (bad) sbb cli push fadd jo gs test fisttpl inc out dec lcall sub and movsl xor (bad) (bad) les push dec adcb lds ss cmp mov pusha addl cld imul push push cwtl cltd sub add or ljmp les out xor inc dec aaa shr mov (bad) je adc fsubrs repnz xchg shll dec dec dec and mov push clc (bad) sbb cmp int int3 mov add jno push jge adc lret (bad) mov fsubrl pusha sbb add and add jae add pop ss dec and (bad) push inc movsl or xor test adc xor add mov add jmp sbb das adc sub movsb fimul lcall sbb pop dec mov jle fbstp sub test pop outsl sub ficomp (bad) xor xor jae insb jo mov mov fdivs sbb sbb xor pushf cld ret dec adc jmp pop mov scas cli mov int inc xor insb (bad) clc std ja sahf ds cmp faddl inc negl enter in rorl pop or into (bad) xor xor pop push test add push cmp add mov sub stos mov add in mov data16 or jb call insb popa xchg sub mov cs call insb jecxz fsubrl loopne xlat push cmpsl je jae push sbb mov test push and sbb jne sub cs pop dec adc jb xor and jecxz test mov sub nop pop cltd cmp mov sub or xor xchg bound sbb cwtl push push int3 sub jo inc andb and enter add (bad) pop mov xchg or in inc add pushf sahf mov mov sub cmp scas stos nop xchg cmc jnp int3 sahf stos sbb sub cmp leave sub adc jb xchg xor push and (bad) or push fistp movsl inc or jp or clc and sub dec fcoms outsl stc jmp cltd dec aam arpl loope add arpl push pop cmc add adc fildl and mov les fsubrl mov jmp pusha jo insb adc ds rcll iret (bad) and sbb sub inc andl inc and test inc jl add jnp fidiv iret cmpsl push int3 xor mov add fiadd jnp out cmp push mov aas add inc int3 inc mov xchg jns imull mov sar std fs dec inc pushf xchg and cwtl pusha or lret or add in fstl adc sbb mov dec fsubrl sbbb mov and sub mov adc int3 jl scas lods sbb jmp fdivrl outsl (bad) pop mov add (bad) cmp bound add aaa loope inc sarb (bad) pop lret push popf inc inc iret push les inc dec fcmove aas push dec int3 ficomp icebp mov sub push sbb jl nop (bad) xor jnp mov add sub out sub les mov inc in psubw push inc add or mov stc pushaw imul cltd xchg pop jns add mov sbb pop pop xorl inc push sub lcall sbb daa push and or sahf daa pop cmp jbe sub cmp mov push cmp or mov popl nop icebp fcoml sbb push mov adc jb mov ss test add adc test and mov imul mov push (bad) mov cmp and sub push add xlat sbb out pop scas cwtl sub cltd and jmp lods jo,pn div das and lahf and hlt fsubl repnz mov orl xchg inc cmpsb mov inc cwtl int3 fisttpll loopne xchg mov add xor sarb mov add jae cmp rclb daa cmp push lods mov cmpb pop and jg (bad) push mov in inc mov pushf jmp sarl adcb ror sbb aam (bad) shlb add cs push sbb jecxz push push dec and sbb incl mov lahf cmp cmp mov (bad) xchg inc shrl and call sbb int clc lret add jp call xchg cltd pusha mov jmp cli test into roll lret mov es inc or fstpt adc inc sahf push std mov rcrb inc push sub push mov add sub push iret inc mov mov das mov cmpsl xchg stc fs cmp stos or stc mov pop cwtl iret sbb cli fiaddl and jg scas cmp or push xchg scas js popf push jae insb or stc andl ds lods std orb and mov rcll movsl mov insb adcb (bad) mov in aas addr16 adc xor push lea xchg dec inc add and xor ljmp xor (bad) nop adc out rcl adc cwtl xor and jl js shlb shrb loope int test std repz jae push xor fildl mov or and xchg mov mov sbb ss push orl jae pop jnp jmp jnp jns add or popa test pusha and ljmp inc pop add outsl or mov pop cmp out jo aad loope fwait push rcll pop out xchg or add es add jmp adc adc (bad) ja jns loop mov mov adc mov xor add (bad) std outsl rcll cmpsb jmp ficompl or js orl inc mov and push shrl in mov and push mov sub iret add push out lret and (bad) jp jbe inc cmp sub int3 mov and push add jbe sbb xchg push cmp jle stc or movl xor aam repnz fwait loop and lea mov ljmp pop xor xchg adc mov adc test fadds xor mov xchg or mov push pushf ss test inc push pop pop push adc mov add std inc dec or dec mov cmc or loopne pop add xchg mov jae mov mov mov rorb pusha pop es dec orb xchg pop add icebp sub lds add push aaa mov cmp push cltd cmpsb pop cmp push insl xorl in add into decl scas cmp ficoml pop iret loope iret mov das sub pusha push inc rcrl or dec int3 jbe mov enter js test cmp xchg iret and xor sar pop xor and or sub shlb adc xor add dec and adc (bad) cmp or std mov rcrl and (bad) arpl push (bad) ja icebp add inc movsb mov lds fiaddl adc aas fcoms sub xchg jmp push dec jne je xchg fsubl lahf ret jns fcoml push aam xor je ljmp sbb test idivl mov add out int lahf add xchg xchg push popa (bad) repnz data16 adc loope pusha mov test adc inc pop (bad) dec (bad) push xor (bad) cwtl xor (bad) fldl (bad) test sbb dec cmp js inc cmp enter xor faddl pusha mov xchg divb jmp iret adc push jae jmp arpl dec fdivrs out sbbb sahf mov jl pusha adc mov roll or sbb xchg pop cmp lret inc mov adc xchg out add mov roll loop call fdivl nop sub xchg addb xor mov setbe sarl add xor outsl ret shr cld mov sub (bad) xor insl or push jb xor pcmpgtb adc mov subb jbe push stos dec nop xchg movb inc int cmp das jbe or lcall cmpsl or bound and (bad) lea testb (bad) xchg xchg movsl imull push loopne xchg (bad) adc les jl adc jmp mov or ss clc sbb mov cmp mov addb in push lods pop rorb xchg dec in xor mov movl and lods xchg cwtl test mov fbld adc or cld (bad) insb or and dec aad dec jne (bad) xchg add sub (bad) ss shrb sub inc or data16 je dec xchg dec xor insl mov insb push inc mov loope or push sbb cmpsl xor cld inc je jle push into rol dec push adc aas push jne (bad) push add push js mov fld1 dec xchg inc jbe add ljmp mov cmpb lret inc sub scas in cmp pop add cld jecxz inc sub add sbb pop pop and xor nop je push xchg jge cmpsb add or mov lahf js push loopne mov mov clc rcrb add fmull leave add aam adc lea adc scas add in dec xchg mov pop sub jnp add stc cli (bad) xor ljmp sub nop js or pop lahf outsl adc in sbb or call es out in addr16 lods fldenv fs pop dec popa lret xor mov and inc in scas test xlat mov jmp loopne mov mov adc repnz inc clc inc es xchg mov (bad) pushf add sbb sub dec popf bound int pop cwtl or pop jle pop (bad) dec adc mov (bad) jmp outsl adc (bad) adc mov pop fs adc repnz popa add sub dec push jle ret dec psubq repnz mov xor push jno test lret pop cmp test pusha daa and pop jle add lret cmp imul cmc cmpsl mov jae aad xchg lock add inc mov add jno or sbb pop addb jne shlb xchg jnp movsb cld add pop mov adc adc fdivl (bad) sbb loope inc mov jb lcall scas aam (bad) inc movsb insb arpl pusha in repnz les and shl mov add inc sub mov jg in dec cmp push xor push enter push pop out xchg jl and mov or addr16 bound sub xor adc push pop cmpsb inc lods sub inc ds out popf pusha and popa pop clc sbb (bad) pop ret pop arpl sub sub es xchg lret inc sti lods inc add push je jp mov or jnp mov push adc and add or loopne ret daa mov sub fildl inc xchg sub add in inc xor or aad sbb test sarb push mov pop pop (bad) int mov sub adc arpl sbb adc stos xchg adc lcall mov sub and popf ret clc adc cmpsl mov cwtl xor add and out cmpsb andb jb push xchg sbb xor xor xchg or mov add jns or (bad) xchg sbb adc sbb pop (bad) ds cmp xor roll adc pop xor lahf xlat inc mov ffree pop fwait dec jp inc addr16 push xor test (bad) inc dec inc lods in sti xlat dec pop mov mov push pop mov sub ljmpw fwait cs stos repnz add cmp jnp cmp push jnp mov pop les nop arpl inc pop clc pushf inc mov sbb push sti add cmp test (bad) xchg jne adc iret (bad) push cmp daa sbb je jae out sbb push jns icebp pop (bad) mov jl sarb loop ret sbb sub pusha or mov inc or outsb jecxz xor iret scas xchg mov mov in and cwtl data16 movsl mov rolb adc and pushf cs pusha aaa and push decl cmp dec add sub and nop in mov test jle or inc hlt adc mov adc add jmp xor insl test imul and in lret rolb add xor jnp rcrl and xchg adc or iret rcr and scas sbb or testb cs jecxz fs incb cwtl push inc es jge inc movsb shlb or popf sbb dec or dec mov add into ror add xor dec or cmp push add add and test inc hlt loopne cmp pop lods adc insl jl mov out pop lret rorb mov sbb inc jge sbb hlt and dec mov nop jnp pusha call add std ja inc adc js cltd sti dec xor (bad) or sub add cmp and cmp mov push ss or mov and xchg add cmp add jae and mov jge push mov (bad) in ror lahf push inc js sub dec push mov ret xchg pushf out sub cmc shll mov pop adc and sub push stc cmpsb fcomps cmp sbb push adc mov adc inc push adc hlt jl dec addb or jbe pop sub cmp jecxz nop pushf pop pop lret dec iret inc add das mov push test jge roll or lock gs in inc mov cmp bound add cs and jp lods add mov add jmp ds add mov cwtl sub mov xchg or sub lock add popl mov cvttps2pi andl add aaa pop scas mov shrb flds mov in inc lods imul fisubrl xor into cmp mov dec and or sbb test and shlb popa rcrl inc movsb mov or push and enterw sub sarb pop add les mov cmp das fs stc or mov add push mov jo adc jmp (bad) movsb push popf aam int3 outsl ficomp imul add add nop dec cwtl dec flds fwait sub adc ljmp lahf sbb add add les or inc sub add pusha popa pop dec push loop add xchg mov jnp aas mov lock jp (bad) adc jmp sbb scas jle rolb pop pushf push sub add ja mov ljmp push call test add or cmpl jnp mov push push xor rol cli jge pusha pop rcrl jmp jge inc call cmp mov daa inc or jp sub mov mov dec daa cmc xchg or jno out jns push (bad) aad fimull pause ret jge mov jo xchg push mov pop les pop pushf les int3 leave pop jno jmp clc push pop (bad) push push jg pusha daa jecxz insb ljmp rcrb out jg div mov push out cmc jle paddsw xchg or and add xchg mov mov sub mov mov push (bad) cmp imulb and stos mov add loop mov mov sbb dec or mov lret add push hlt mov sub push dec pop xor jmp mov in dec push jecxz pop cwtl push (bad) shll xchg mov or imul or push push (bad) dec ja es cmp lock ja mov push orl mov das and sarl add jg sbb or cmp hlt in pusha xchg imul pop shrl lret bound adc mov dec jge jnp xlat mov dec addr16 sarl push sub xor popa mov ret inc pushf jnp add cltd sub mov add jl call fwait das or lock pop outsl mov xor test jmp dec test arpl jge stc sub mov inc sarl divl mov sti push arpl push cmc cmpsb loopne sub jmp sarb movsl out adc mov shrl lcall or repnz rorl cmp movsb stos imul leave push fistpll push or fs inc icebp mov push xlat dec mov xchg mov addl out (bad) ss lret mov adc cmpsb jmp decl and xchg push rol data16 push push mov ljmp adc add imul and push and pop jge mov mov cmpsb rolb xor jnp dec leave mov (bad) jbe nop pop cmp dec or jge mov xlat cwtl in flds lahf lds pop jae cmpsb std xchg sti fwait stc (bad) jmp and pop out adcl jg lret loopne add daa pop or pop mov mov jge test xor std mov xor in pop das or jne imul cmp in loopne mov es lds sar pushl addr16 cmp xchg mov pop dec inc out or push jge test dec push repz fbstp pop push inc sbb outsl or pop add pop mov dec pop add xor fstps outsb out leave pop cmc fldt pop sbb sbb stos mov mov mov bound push outsl enter cmpsb std pop add or gs mov mov and and push and sub dec fstl jmp or xchg xchg pop cmp sbb fidivl in add xlat stc scas dec data16 jmp inc aad inc add and mov cs push insb and adc add jge stos cmpsb daa fucomp mov add dec add addr16 (bad) adc or sub (bad) clc aaa jg jp pushf mov and out push inc and inc loop pop ret in xor test incl test push rorb popf xlat sub pop stos hlt jo std sub or movsl add push cmpsb inc jmp and inc int popa faddp xchg repz pop in lods adc mov enter add lahf inc lods jl lahf icebp dec call xchg dec mov cmp dec bound sub add aas add pop icebp mov ljmp dec dec movsb sub (bad) insl outsb imull jg pop push add mov cmp jbe or push push cltd mov sub push inc outsb les and int3 ss setg lods dec not mov push cmp das out cmp dec int3 movsb in add mov lods ret fcompl pop dec mov ja (bad) mov add pop pop pusha jmp (bad) les cld orb in mov push pop pop sbb sub loope lcall mov push aaa std push movzwl jne stos mov or in add call jge jecxz xchg fdivrl mov fucomp pop or mul jae add repz cmp divb xor mov sub add jb xchg cs aam lock mov sub mov fstpl cmpsb adc int scas mov and dec pusha lcall mov sti sub int rcll mov pop fcoml add or popa outsl add xchg fcomi ret mov dec pop movhps xchg xor cmp pop add xchg outsl pop mov sbb rorl aad sub or push outsb nop mov push repz add cltd mov add addr16 in dec xadd dec lcall add rcll aad hlt xchg out aas add add mov rolb xchg sahf lcall jg fiadd pop mov cld sarl (bad) negl fstl fdiv test outsb jle jge pop pop add xor sbb mov lea daa or cmp dec ret pop pushf (bad) mov std sahf pop pop scas xor push add dec addr16 adc pop sahf pusha insl sbb lret inc add push adcb inc jo sti imul adc call mov pop add shr sub sub inc stc insl add pop pop shr rorb dec sub adc lcall mull xor mov cmc sahf jg test std roll pop adc popf or ffreep or outsl cmp lcall add stos add sbb mov push sub inc add cmc adc adc jg and addr16 in call mov cli fbstp jmp sbb mov sub xchg fldl xor aaa iret loopne xchg sbb push in icebp (bad) pop outsl jno repz xchg cmp out outsb xlat xchg std popa popa push push dec or xchg popa and jae lock or (bad) push lock lcall shlb or in aas jg cmp mov xchg popl daa cmp es add push mov ds xor das outsb and lcall mov push push or dec std ficom dec cmc jns xor cmp mov pop mov xchg rep dec daa xor xchg inc add repz ja ret imul dec sbb das mov xor or jmp xchg leave insb fdivrp adc sbb pop rcrb cmp incl aad cmp mov mov fstl push lock leave adc (bad) ficom aas cmpsl pop pop cwtl lock jp jmp pop inc imul and lret (bad) ret jmp into aaa mov addl je pop or (bad) push sub lods fistp in add out aas sub or out repnz std push cli cmc cmpsl dec adc mov int iret pop nop scas xor xchg out pop movl pop pop push push ds add add or std cmpl fsin and sub lcall dec adc or jmp pop mov cmc mov jg stos test loopne mov jle push mov je scas fstl out pop mov stc dec cmp and (bad) dec xchg aas test popf rorb push push cmpsb pop ja sbb add lds sub mov aam (bad) lret aas cmp (bad) repnz adc sub mov xchg pop cld jecxz cmp push xor loope (bad) mov loope (bad) aam or mov ljmpw jg sub mov (bad) mov jbe pusha sti jge (bad) mov inc daa xor aas push inc insb or inc movb pop fs loop divl adc test ja pushf add lea xchg dec iret dec mov inc xor add pop jmp xor fildll fsubrs add add imul rolb jecxz fmul push cmpsb adcl imul aam lock adc shr out in neg dec (bad) mov push popl sbb sbb sub xor testl mov and (bad) pop das outsb repz (bad) jge sbb ret push xchg and test inc add xchg mov shrb in adc shll jg aam adc and repz sbb cmp push iret sub sti and push dec xchg xchg cmp push dec repz (bad) mov dec jmp std jmp outsb sbb mov or jbe (bad) enter add jle roll pop adc sbb daa add gs push xadd fwait jae xchg pop stos ficomp fdivr arpl outsb jl mov rclb and fildl jmp push jg mov and inc out push cmp pop xchg pop adc loop int3 xor clc sahf xchg pop pop inc sub stc cs pop dec push dec xlat mov dec mov jne fidivr xlat cli daa mov daa (bad) cld dec pop das or sbbl push mov jp cli inc (bad) pop xor push shll adc and imul icebp push into fmul add jmp ret fst inc pop iret cmc mov fnstsw add xchg dec or or push (bad) test test sti std cmpsl add loope outsb mov pop jg mov sbb dec movsb std push push movsl mov sbb mov adc xor pop or sbb jp dec and stos aad pop xchg push shrb jecxz push mov pop xchg (bad) and test int3 push jecxz shr add pop into inc sbb jg jl adc bound xor sahf scas mov test in and inc icebp mov push cli pop sub iret out and fisubrl psadbw cli jmp dec sbb movsl xchg cmp push mov add rorb mov adc rol leave pop ficom jae cmp dec inc fs sti pop (bad) or inc jnp push sbb add pushl call loope pop enter mov inc popf ret icebp out daa (bad) push sub mov mov imul sbb pop pop sub inc sti sbb mov jmp repnz fsubl ds sub add sti mov roll xchg movsb pop inc je outsl pop bound jg push xchg add es cmc inc push or xlat js or or jg inc add push pop mov jge rcll lret scas or add add push inc into xor nop inc mov int pop ja push add add mov pop pop pushf fadds push aad (bad) sub cmpb ds sub add out push push loope pop fisttpll cld scas fs leave or cmp mov cmp and add adc outsb rclb neg roll insl jns bound subl lea ja jns rorl scas pop and cltd push add push movsl fistpll xchg mov mov mov mov add jmp inc dec jg push mov dec orb aad aas mov pop push inc xor mov ja orb xchg popa cmp out std repz xchg inc or fmull inc imul std jo nop fucomp add sbb mov cwtl mov or mov xchg in add sub mov movsl cmpsl fs imul cmpsl jmp sub or and repz stos dec mov push mov add neg dec cli sub xor mov add frstor jge xor outsb mov jno (bad) push inc repnz out in cltd lock dec fwait dec mov jmp pop bound dec lods push jecxz imul int daa cmc jp mov add jb add insl out push jmp xchg daa dec add mov adc or push and mov push dec test jmp xchg scas mov negl or push pop jge movsl (bad) push in mov mov test mov push icebp mov aas addl scas add mov les jbe xchg mov jg mov or pop sub imul mov scas arpl mov ja orl arpl loopne cmp adc lds add xchg je js jb jns lock sbbl add shlb lahf pop sahf ss xor andb and mov push std mov jno test dec mov in pop cmpb incl lret inc imul xlat in les jmp jmp xchg adc dec jmp enter nop ds cli mov loopne ss cmp and cmp pop stc fadds mov cmp sbb adc stos push sti outsl push pop add or push jecxz and fldt mov sub sbb jnp mov rcrb push xor dec jno jnp fcmovu jge add mov add jmp push cmc out jg xchg ds mov jl inc mov adc flds sarb lds subl out test mov add jo jmp std roll mov out dec fs outsb or sahf (bad) stos dec mov mov sbb movb mov xchg mov std lret add ds push dec xor xchg adc dec negb minps aad cmp movsb test adc cmp addr16 test je xchg dec lods in or xor pop fldl add mov movsb or push mov icebp dec imul insb adc mov and imul call push push pop fldenv xchg adc mov mov mov mov imull and leave out or and xchg dec movsb fsubs pushf inc mov push inc jb mov jns jmp mov loope xchg popf mov inc or mov add (bad) call shl loope aas dec nop pop ljmp sbbl orb pusha leave mull cmp inc or sub mov imul push dec or xor push and cmp xor mov push add mov in adc es fdivrl or mov or add push jp push and xchg sub and (bad) or jl imul jae cmpsl jb xchg adc mov pop pop mov fisub add testb adc or or mov std out xchg popa sbb or sub inc push add repz add cmp add or cli fild jle add addb jne test imul inc addl and iret inc sub rorl shr aaa or inc pop push jmp in push and mov insb pushf dec imul push xor stc xchg dec stos clc ffree imul movsb dec adc or inc sub inc push ret xor stos aas push lret ljmp ljmp (bad) push dec cmpb aad mov add mov mov inc push push pop pop xchg cmp les xor sti adc dec adc mov int sub mov xchg pop popf push xlat inc add sbb mov icebp shr xchg xchg loopne sub hlt mov jmp inc leave jb pop fiadd xchg push hlt scas dec add push mov push pop sbb enter nop mov scas add mov enter and cli addr16 loop mov xchg push ljmp xor pop cld dec enter and testl icebp sbb test lock inc push das inc xorb out xchg pusha xchg cmpb icebp fildll push roll in movsl xchg dec push aad mov and adc mov push mov rolb mov xor sbb fsubs sbb sub push mov cwtl and fildl lods add xor gs rcrb inc fild sbb leave enter out pop push iret (bad) hlt negb loopne push or add iret gs add inc fisttpl pusha loopnew push call enter ds fistpll adc xchg rcrb mov pop test and hlt xchg push adc inc (bad) enter add jnp jecxz mov mov cltd xchg push xor andl push roll or stc mov jo rorl loop sbb add adc add dec sarl mov dec pushf pop push push pop jns cmp push push ds test mov fidivrl fwait sub pop (bad) mov adc mov inc adc xchg hlt stc or lahf add shrl add fldl xchg test jl push ss nop icebp push sbb pop add mov jnp cmp add leave xchg push mov cmp mov fwait pop fmuls push fdivl push pop loopne mov jo adcl cltd or push cs dec jb test add or movsl inc leave mov cmc add shlb pop xchg and (bad) mov dec cs pop sbb fnop pop lcall jo push mov xchg inc add push lods jle cmp rcrl sbb lds dec mov xor sub js (bad) fdivs inc and stos leave or lods lock ret dec flds mov xchg repz insl loope push sbb dec add jmp pop mov (bad) push xchg xchg sbb js pop sarl push call nop js mov call sbb push sbb movsb add lock in mov mov xchg xor enter mov push pop or dec add and sbb out aas xor dec xor pop xchg mov xor push ljmp push push mov sub js push sub fs lods pop (bad) jg ret rorb add fstps nop cmpsl mov adc xchg sub inc or test push andb mov sub int3 repnz sbb bound push cmp mov cmpsb pop lock sub adc adc inc add jb insl jns add mov xchg dec lahf es push sub pusha shrb daa or inc ret and inc movb inc flds mov fs pop (bad) imul push ja mov add sbb push (bad) adc imul sub mov lock mov ljmp jp sbb mov adc dec idivl clc test imul mov enter test add adc dec fnstenv pusha and add call jmp test sub inc lret lahf mov cs lcall faddl push mov pop aam jecxz sbb inc lds and ja pushf in rorb aam ss xchg ja add sub nop lock mov loope sbb sub jmp cs mov add into mov and push jbe clc mov fildl scas jb mov mov sub pop or adc adcl mov jae add pop xchg push dec fldt clc enter sbb (bad) xor les outsb pusha rcrb jnp sbb sahf lock push and push adc call aam shr add inc icebp (bad) lock lock ret mov and roll insb cwtl gs cmp or dec (bad) mov or cmp mov rorl outsb (bad) cltd sbb (bad) and rcrl sub push clc dec icebp fwait out sbb dec push add sbb inc and push inc clc add hlt push lock lods pop mov cmp loop xor sub sbb mov cmp jns cmp test add shll je sub inc sbb dec stc push mov shlb ljmp mov add fsubs out push in xchg add cmpsb andb mov xor (bad) xor fildll inc lock adc fbld add or adc pusha in int jnp inc test push aam daa lods (bad) pop lcall add fimul pop and mov inc les out inc pop addb aaa lcall out cmp lock dec fimul jo or pop mov cld pushf in clc jge xchg andb cwtl jne stc and inc jmp fs add mov and movsb mov push xor into scas adc xchg lods mov mov movsl sbb xchg ss xor imul and movsb add add adc pop or rcl adc mov push mov xchg cmp lock pop inc icebp mov cmpsb or jl mov shll mov add and push sbb cld mov push aad je pop inc lcall call int rorl lock push lret pusha sbb xor xchg add mov or lret cmpsl push dec int3 mov adcb push imul inc mov add nop dec movsb jp fwait test and cmp jne in or inc nop ljmp and push cmp fs add pushf outsb ljmp lahf cs cwtl call and pop in inc es pop mov push fucomip pop and dec js pusha mov mov lock push inc or adc leave add aam push dec and ficompl mov ret mov sbbb addr16 push imul jno mov push dec nop adc fisttp pushf adc in addl enter xchg push inc sub jo sub ds pop call xchg cmp or (bad) pushf out dec das inc mov inc push cmp rol and inc xor andb outsb or cld sbb cmp enter mov daa mov cmp sbbb mov mov insb fnsave js push scas add nop in inc xor cmp ss push fcomip iret in in stos add mov jecxz mov dec lods pop (bad) fist int3 repnz add rorb aad xchg icebp leave cmpsb mov adc cmpsl mov (bad) pop pusha js and push mov jg iret sub adc pop movsl pop add xchg inc roll arpl mov cmp add xchg movb pop inc push pop pop data16 jb fsubrs orb aaa sbb or jle (bad) movsl adc inc lock pop ficoml push (bad) mov dec push and jg dec cmpsl push cld mov sbb mov pusha xor push mov test lds dec pushf in lods dec je pop inc cwtl cmp jns pop xchg and mov lock clc mov mov cmpsb (bad) adc nop push les pop out fnop xor inc mov mov mov jnp or and adc imul loop push pop and in mov in and and clts xor (bad) pop push (bad) mov mov sbb inc xchg loope push mov dec pusha pop push mov dec in es test ja cld lahf xorb shll push push rcrb xchg fmull and push nop inc mov cwtl inc out cmp cmp push adc xor inc cld out rorb mov and fsts cmp xchg cltd (bad) xor xor mov sbb or or sub clc pop mov xor mov adc repnz inc adc mov enter mov mov es imul sub pop rorl push cld xchg adc add mov lcall lcall popa add mov mov sbb or add pusha ret push dec rolb stc mov (bad) shrl sbb add fcoml dec test mov stc nop sbb dec ret outsl sbb and cs mov fs jp data16 js and rolb test sbb adc or stc imul das dec into in (bad) push sub cmpsb or mov in inc cli test out push and add push mov pop pop sub push movsb xorb pop xchg js lcall adc lahf cmp test xor inc pop push repnz adc dec bound movsb push nop movsb add mov mov sub cli push repz call pusha pop push mov out ficom and imul int mov xor ror pusha rol sbb mov xor mov nop cmp pop add mov mov push xchg add loopne lret push gs rolb leave mov jp ret xchg out add push fdiv repnz sub or stos sbb adc mov add js pop jp fldl dec call adc rol hlt sub fdivr pop mov xchg insl popf inc loopne ficom mov insb mov repnz mov aam adcb sub dec mov and out or mov mov pop add xor mov xor pop ret test jge fildll and add lret jne sbb xlat xchg cmp jo stos or mov adc push cld inc and inc test dec add xchg pop movsl cmp jmp mov push inc pop subl add mov rolb fsts in cs aam mov add les jnp and jp fbld test (bad) jns subb dec ljmp jbe xor dec mov fs inc xchg sub and xlat imul nop mov push inc pop fs xchg xlat repnz sub test std inc cmpb adc sbb xor xchg pop cltd and test pushf fadds cmp out sahf hlt lock adc rolb inc push sub add hlt sbb lcall sbb adc shlb pop and fild push sub xchg dec fstps push movsb outsl aas rol and (bad) sub clc out lret push pop inc rolb pop fucom or xor cs xchg fwait sarl in pop cltd sbb dec pop shrd (bad) cmp or xor push pop lock inc mov shll loopne cmp arpl cmp mov lcall scas aas lret (bad) mov push pop ficoml leave inc orb daa popa lods jnp add addr16 dec hlt stos iret pop push adc pop sbb dec xchg dec pop add sub mov jge testb clc imul pushf and mov cmp push adc inc push clc shlb daa jg mov inc (bad) cmp adc loope push and jnp (bad) outsl add push test add in lret fisttp mov shlb rcrl imul pop pop push icebp jge movsb jp pushf mov enter jb enter xchg (bad) rorb sub mov mov addb dec mov scas inc and jmp pop pop js or movsb je push mov fwait test push sbb es cli nop xor rcrl aam mov mov sbb mov and sbbl xchg xor ljmp or mov subb fs and push inc ret mov in dec add add bound loopne out xchg mov inc pop mov mov sbb lret dec cmpsl lock mov xchg test call lcall xchg adc pop mov adc ret mov jno and (bad) push fdiv or or fsubr sub jge pop dec mov add mov je out cmp sbb stos lcall scas mov mov sub nop cwtl pusha add incb add push push mov repnz arpl xchg dec into add mov push insb shlb pusha fadds (bad) xor and adc mov je add bound fwait inc jbe sub (bad) push test arpl andb push lds sbb pushf ror pop dec in xor add dec loop es or mov adc jno mov xor lahf cmp mov lea or mov and daa shlb mov jo sti mov add negb dec mov jg mov movsb ret int3 test fs inc movsb xor pop and fbstp and mov dec inc push and push push popf les leave int3 dec enter les add or fisubrl ss and rcll or cmpsl sub or push sub sarb push add jl dec mov leave inc pusha pop lods es sbb sbb call add ds popa (bad) cmpsl dec (bad) mov pop pop aas push push insb sub and out fsubrs push jns dec arpl push mov mov sub frstor lock pusha add mov mov lock jno jmp imul es imul add xlat add xchg stos mov or mov add adc xchg lock adc in dec cli or dec (bad) in (bad) jge add lock call cmp aas ret hlt dec pop andl ret sub mov xchg pop push inc and and pop mov and or sub mov (bad) icebp mov add mov enter jecxz pop repz test (bad) mov loope enter mov shll xchg inc (bad) jp push jns push pop push sub cwtl cld push lahf pop fsts and ss sub in leave shrl jo jae add test sub (bad) mov imul add inc inc push loopne push mov dec clc add lret stos xor dec adc push xor inc xchg lods sbb xchg addl add lcall add daa mov add cwtl sub lock ds fisttp and adc pusha mov loopne mov out jle mov (bad) call mov lea loop inc sub rclb test pop je nop scas or imul (bad) fnstcw add imul (bad) mov xchg add rcr dec xor int3 mov aaa and push add mov push rolb adc inc sbb sub imul add mov cmpsb into adc jne add enter adc mov cwtl xchg sar and xchg nop cwtl cli mov and hlt loope sbb or mov mov icebp cwtl jnp movsb repz ljmp in mov stos add jge jb clc xchg mov adc inc test icebp dec inc int3 repnz cmp bound xor or xchg ss dec inc sbb push jo adc inc mov xchg adc inc imul and aam les dec lcall sub lock or ret add sub or sbb add nop call or xchg flds jmp pop jbe dec in or push loopne movsb dec mov ljmp xchg inc mov test (bad) lock ds (bad) mov ret adcb lock andl sub xor pop and mov jmp inc mov push and and test pop adcb cmp and mov push sub jp and sub pop clc cmpsl inc fnstenv sbb pop rclb jecxz rorl add repz fbstp popf nop mov inc cmpsb sbbl adc mov add xor xchg rcll je jns dec mov sbb rcrb (bad) cmc inc add fcmovbe mov xor jnp fimul mov cltd sbb mov jno inc js in adc and in add into ficomp daa daa (bad) loopne pop jmp mov adc dec incl imul mov (bad) lahf sbb adcb mov scas inc sub xchg in lock push sbb xchg cwtl enter test cld (bad) push jbe or pop arpl push xchg test bound ds jb cwtl (bad) loopne inc rcll stc int3 mov js addb jns add int3 dec push push pushf std in and cmp enter or pop or fs mov sarl inc mov sarb lods xor popa outsl adc dec inc adc roll dec cmc jmp and ret repnz les movsl adc cmp (bad) outsb mov (bad) jle push push (bad) mov mov jae (bad) stc test push jmp sub add jge pushf je or out mov subb fucomi js push cmc sbb dec lock lock and mov cmp dec cmp cmc push mov aas subl stc mov inc add enter mov push data16 dec jmp cmp xchg and add icebp hlt test (bad) cmc sub mov pop add lock lret popf inc es fistp addl adc sti xchg stc add call push adc pop or jmp xor adc pusha (bad) push inc mov sub inc or or scas pop (bad) pop and push jno rcl movb cmp pop imul stc jbe or and jecxz push add mov adc mov add es rolb pusha je adc xchg inc enter mov insb or cmp or mov or bound nop mov adc leave rcl or cmp ror fisubrl mov outsl jno loope or sbb push add leave out sbb pop or rorl (bad) pop loope sub adc je aad or cmp adc pusha and sub fdivr mov ret fs jmp in cmp pop test inc inc rol mov push movsb subl or sbb data16 call scas cmpb sbb adc mov or push rcrl out mov adc pop adc shld sbb test cli and rclb jb cmpsl fs xchg inc sbb dec sub push mov lock cmpsl push inc xchg test nop pushf dec movsb es push jg push test lahf adc add push xchg push scas enter xor mull mov adc cmp or movsb jecxz fcoms ds lret insl add cmp clc (bad) xchg inc mov inc es jmp dec push out popa cmp jmp fidivrl or daa sbb cmp loopne test adc aas ja adc fsubrl popa jl jbe inc xchg xor xchg cmp jl imul mov xor lods sbb mov or inc dec adc pop mov sbb inc inc mov or movsl or xchg adc and lods and xchg mov (bad) test pop out xorb movsl jnp push xchg pop pusha shlb mov sub loopne and adc imul call je (bad) dec aas arpl in gs call fldl2e inc in cmc pop outsl push or je loope dec (bad) mov xor adc lock cmp pop xorl sbb mov xor push add sub jo dec xchg aam dec jns scas sbb jne mov repz add test push call sbb nop outsl cli xor push imul sub dec add or pop jns xor (bad) add push xor call xchg insl or xchg and pop loope dec mov and push sbb sub mov std sbb inc test lods mov add pop or dec adc aaa xchg add push sbb push cltd push push sub sbb sub push mov (bad) cmc xorl or dec pop sbb mov add dec rolb push dec xlat mov sub push lahf js inc push (bad) icebp repnz mov sub es jno inc fwait and xchg xchg pop bound orb mov gs iret sarl adc jne jbe jmp inc outsl xor gs imul xor sahf and rclb or ljmp out (bad) dec mov sub inc and cmp sbb sbb xchg add shrb (bad) shll pop jae add xchg xchg ss cmp mov cmp fs xor push cmp test xor mov call cmp mov cmpsl gs sub (bad) xchg push pusha pop and iret mov add dec sub rcl sub pmullw hlt and xchg iret pusha nop xor mov mov stos cltd cmp inc inc sub mov inc test clts in xor (bad) xchg andb or xchg loopne (bad) push aaa adc jae frstor test lea inc dec and jmp outsl push shrb dec movsb in add pop rcl add xchg and or pop repz lock add mov jp and push dec fstl dec inc push add xor fdivr addr16 pop adc add mov cmp jns fs or push cltd pop sarb and sub add movsl ljmp out popa dec xchg rcr mov jne cmp and rolb aam aam ja add xor cmp outsb popa jns,pn and xor pop and jnp and repnz xor add fld insl pop sbb mov mov add mov in mov push xchg xchg sarl add enter and xor jmp inc mov mov jnp mov mov xchg mov movsb cmp addr16 insb adc xchg xor sub push (bad) rcr push adc push shr mov cli in inc arpl mov sbb add push aad mov ret mov adc sbb jmp pop andb movsl lahf stos xlat inc add mov mov cmp add xor out dec push movsb add add dec ljmp or into lcall sub xlat add dec je and data16 and lret sub in xor scas and data16 inc adc push and adc rolb add loopne xor fsubrs xchg mov push push or xor add fstl adc outsl sub inc shlb sub mov and sbb inc ret pop loopne fldcw testl pop sub bound fs cmpsb inc dec push add sbbb pop into fsts nop cmp pop xor stos leave mov inc push jp adc into push stos cmp rorb pop xor or out and or pop push lahf roll scas push add shrb ljmp in jno jns sub pushf add rolb rorb pop nop enter inc or inc jmp pop or rol sub ss add andl mov sub pushf add lea sbb mov pop mov lock test cmp pushf stos fdivs dec inc xchg push cld add mov xchg addr16 pop xor inc and add cs mov sub dec mov pusha ffreep lods nop sbb or dec and push rcrb (bad) icebp cmpsl mov jae (bad) inc sbb cs movsl jecxz das cmp cmp movsl xor sti (bad) ds push and popf push rcll xchg icebp cmp fdivrl fsubp ror in and dec repz insb mov lock cmp jbe imul pushf loopne add add orb ficom int3 loope dec int3 add out inc rclb loop sub fs mov add pushf adc dec out enter pop test je rep cmp daa add out mov cld cmp test test rolb mov into jp push and lods mov push mov inc add loop (bad) xor mov aas push xorl cmp add fsubrs mov push sbb inc aas and sbb jp push (bad) push fsubrl adc push popa mov cmp cld add test fwait push mov jo and or sub mov enter pop sbb (bad) aas add mov dec lret xor dec push lcall fisttp sbb call icebp pop add fstps cmc (bad) or mov (bad) movsb mov out inc sbb xchg add dec fsubr jle (bad) mov mov jo movsb repz mov lock mov add mov imul test sub popl jmp loope inc xchg out cmp lods add pusha sub sub cmpl adc notl pusha nop mov xor lds push mov adc cmpb pusha add mov int3 xchg aas stc cli mov cltd cmpb inc pop cmp dec add and jno ret jne cmp add stc sbb xor dec ss daa sbb add gs jmp pop popa or sbbb add adc lock add cmp pop adc xchg mov insb addl test jb inc add mov mov nop movsb push fadds push cli loopne or sti mov add jmp push adc (bad) out (bad) aam cld adc mov push stos repnz pop mov cmp std pop cmpsb div push nop mov cli clc pop sbb sub test mov pop push stos std (bad) sbb divb cmp in or lock xor cmp xor stos mull add push pop sbb cld add repz mov sub arpl push mov popa in mov loopne mov in rclb in dec add clc push sar sti dec lods sbb mov icebp scas mov rcrb dec lods jmp add jmp dec lahf loope sbb notb mov mov and sahf jb cmovle in pop pusha cmp aad add push mov push andb (bad) lret pop add mov dec loop sbb js sub pop in sahf lcall (bad) into inc and popf js mov or (bad) xchg sub clc aaa push adc iret pcmpgtw mov popf jg or js addb xchg push (bad) arpl aam mov or cmp adc jnp lods sbb nop push jb xor push xor and cli adc sub stc fmull ss adc mov xlat add jns sbb pop fildl and jl lahf inc cli icebp mov add sbb xchg sbb cltd rcrb push mov lret fildll mov push or aas mov push pushf repnz loope mov push push push adc shr inc sbb lahf push jg test imul xlat pop adc sbb push xchg jo sub sbb dec mov inc pop dec cld pop xchg adc fistpll mov dec movsb ret inc or xor (bad) int fldt cld push adc adc push lods sbb enter push inc cmc jle adc scas aaa sub pop inc icebp and or sub test mov pop cmp mov out adc inc adc jnp fidivl outsb or imul adc inc clc push dec int3 inc jb sbb test test aam xor and pop loope cmpsb adc ds add jbe adc or push jo mov fwait cwtl push push dec pop repnz xor and je sub cmp and clc fisttp push aad adc adc test mov inc sbb inc mov das test aad clc scas mov push aam mov inc aaa or add jns or add or fs sub pop les aam int popl dec inc mov adc add jae call sti push scas cwtl or aam dec ret fildll enter xor dec sbb pushf insl sub push xor xorl movaps nop mov xchg aam inc and (bad) pop mov adc jo pop test flds outsl syscall fistpll sbb xlat adc add push daa or imul insl push sbbl pop sbb cmpsl or pop mov mov sub int dec push and inc or mov cmpsb fldcw mov push sbb notb rcrb inc adc jo xor add sbb jb inc xor mov rcrb test add ja mov js lea dec xor xchg push les inc jb int3 mov sti and rsqrtps rol popf in jle js inc mov push jns and lcall cmc aam cmpb or mov xchg into sbb push std push pop mov mov and jg (bad) (bad) adc or aam nop mov cmpsl stc (bad) mov lods outsl test or aad xchg or lahf and mov mov push push es mov jbe add insl stc dec in jl cmp test cwtl (bad) icebp add sbb enter clc xchg mov push mov cwtl mov add sub xchg xchg add mov jns xor loopne nop sti cmpsb into adc scas push inc sub (bad) jnp xor lea rcll iret and xcrypt-cfb cmpsl in sub popa movsl pop push jb sub andb je or xor popa rolb pop rorl enter sub mov and les jo xchg shr add cld in fldt gs dec push hlt movsb adc test pop push push stos les cwtl lea (bad) or js int push fucomp fdivl sbb pop xchg je es adc add test rorl insb mov xchg xchg les push rorb int3 push lods mov imul int adc or das dec addr16 xor fdivr scas xchg test bound nop xor add or push movsl (bad) dec xor sbb jno call or push jnp and and cmpsl fsubs bnd or push push jnp inc jl imul iret dec test rorb loopne hlt add (bad) jb (bad) cmp and cmp int3 sub xor jmp adc or add add mov cmp jbe into xchg dec testl (bad) or xlat mov call pushl lock sub push nop jae (bad) sub sarb lock rclb mov mov add jg hlt mov repnz sti scas or icebp iret fnsave dec popf rcl das stos mov push cmp add test jno add mov mov lock adc movsl add sub or je jnp mov imul add add (bad) push and adc movsb sbb ljmp cs jecxz std dec enter push pusha test lock mov cmp mov in add out add call mov jb or ret add lret mov inc adc xchg push and fstps outsl pop lea (bad) prefetcht1 cltd clc adc mov push sbb iret cwtl xchg sbb leave jecxz push xor add sbb xchg das cmp or insl pop or sub adc sbb addr16 rcrl in sub jne popa fildl es les xor pusha or call cmpb lock add pop mov jmp mov add cmp xchg add lret and lods test aas incl pop fdivrl push xchg adc adc loope mov sti add les in push and xchg pop push and (bad) push int3 mov ljmp xor xchg aas ss add addr16 jno inc adc sub adc enter inc adc nop inc or leave or xchg and jmp mov jg pop cmp xor sub ss clc (bad) je fistpl dec xchg pop add or (bad) fcmovbe sbb pop cmp les mov and push cld or loop add outsb and imul or (bad) mov and xor dec xor or test (bad) and push cmp dec adc mov or sub mov in cwtl rcrb mov (bad) inc xchg icebp data16 lods popa insb xchg dec and movsb dec andb and adc jge or push jmp add (bad) pushf ret cmpl test insb ljmp push push mov pop mov inc mov es mov push (bad) jle add pop loopne adc call push mov pop push inc pop pop fwait sbbb or pop add or sbb mov sbb inc mov jbe bound rorb dec pop rcrb xor mov mov xchg jo push add push stos pop jge jmp push and mov pop and jl mov out pusha (bad) sar add sub cmp fldl2t sub rcl or pop push sarb dec and pop mov push pop je jbe jecxz test roll mov mov cmp orl (bad) mov mov adc enter int3 push shrl and addr16 nop and xchg (bad) testl icebp and sub sub test aas call pop mov and sub lea mov push add or call add fcmovnu mov xor mov add repnz cmpl cmp andl pop cmp shrl mov icebp xchg sbb adc enter sahf add or add push inc jb dec jb xchg pop jo dec jg mov sarl dec (bad) add mov jmp push mov inc push in inc push mov add push loope or xchg ret inc cld cmp aas rcrl lds test aam clc loope fldenv xchg lea xchg lds sbb mov pop (bad) or shrb and jnp fimul fwait pushf or (bad) sub pop push movsb int3 insb jnp and jb pushf gs loopne aam mov cmpsb dec ljmp xorb jmp lea hlt ret icebp jnp fdivrs jecxz decb fsts adc and or mov xchg inc or pop jb sub clc xchg mov jl fs test push mov lock cmp jmp imul mov jg lds and neg das dec push (bad) insl inc or sbb mov inc add pop mov add or sbb xlat and inc add adc add mov outsl and jne add fwait pop or stos sub sub xor addr16 popf cmpsb inc fcoms push shrb push mov dec inc add shr imul into pop fs pop xor outsb mov pusha out or popf dec mov stos push mov sub test xchg out xor outsb inc stc gs jbe sysret pop loopne subb or and jae cmp sub sti adcb fsubrl sub out lds fldl jmp mov jnp push mov add aas roll and xchg dec mov jns mov inc cmp das pop push adc mov stos mov movsb or in mov pop and mov aaa das fistp xchg jg (bad) jmp jo push dec add sbb jmp and xchg mov int3 push mov mov adc aas test negb push mov subl sub rol popl xchg ss stos (bad) mov rolb repz ja ljmp jmp mov mov jae shrl jl dec arpl and pop xchg mov mov jb mov push xor or cmp adc add add cmp enter or add (bad) jnp xchg pop push jmp sub movsl pop pushf icebp xchg adc in xchg insl mov add cwtl add pop aas mov mov out add xor pop jmp xchg xor test and je xor jmp add mov lret movsb sbb repz pop sbb jecxz cs cmp adc sbb push mov int inc fs push scas repnz mov pop xchg mov xchg in mov push fnstcw enter fidivl pop ss mov jne mov jmp roll mov add and mov cmp push xchg pop repz pop out inc daa fs ja add push sub jmp pop in or (bad) and jmp cmp or or cli loop,pt pop jns dec pop pop aad dec sub inc adc fisttp call jmp and test call imul inc es push mov in clc popa and mov pop jle lret mov loope fistpll ja xor out in pop mov lahf push and in xchg pop mov inc mov or insl andl push cli mov sub jp cmp mov or call loopne jg and dec popf lahf push adc aaa jmp add aad xor (bad) pop add jae and xchg mov in add decl outsb bound adc adc out dec scas pop dec adc inc pslld lock add sahf mov pop js shlb call mov fsubrl mov jo inc je out sbb (bad) cmp jmp lcall cmpb sti cmp sbb cmp popl jp mov mov icebp jg cmp movl and pop mov out add and adc adc jbe pusha mov in add ja lock test mov and mov das sbb sub xchg fs cwtl add (bad) mov jb nop push and push lods or psrlq sbb out es test pop aaa pop sub aas mov outsl jle sbb mov and (bad) and sub ljmp jmp pushf adc outsb inc xor jge lds je jge movsb xor dec nop and cmpsl push mov dec jle cwtl (bad) negb bound inc inc push popa xchg and dec jmp adc sub pop test mov jl mov sub pop push add mov sbb mov stc jecxz mov push aaa cmp stos test cmpsl mov (bad) movups cwtl ffreep stc in pop add push lret and js pop sbb pop pusha (bad) dec cwtl mov outsb add jl mov je jge pop sbb popa pushf scas loope cs mov rorb inc inc mov push cmp mov daa dec outsl jmp imul or add sbbl cmovo mov adc sub xor add inc xor lea aas (bad) clc mov scas mov in sub adc push mov lret push idivl xchg ja xor adc and mov leave lret dec stc das mov das lods xchg lods xchg xor movsb mov push pop shll pop xchg jbe in push pop adc sarb and mov sub and dec and jnp sbb jmp out pop mov cltd xchg sub sbb pushf adc lret add pop jg out inc mov sub fs and lock sbb add mov pop roll sub adc add fldenv test rorb movsl jl add mov insb cmp sbb cmc cmp pop imull insb lcall adc jae xchg push fs or inc orb push jmp bound mov sub pop popa pop bound jb fmuls pop icebp mov fidivrl mov cmp sub out ja add add popf outsl andb sbb pop dec jge or test mov xchg sub aas stos insb mov adc jmp repnz aam outsl xor fwait movsb cmp mov ds push leave xor push inc pop sub push fcmovne lea inc aad out jl pusha jae cmp dec add gs scas or dec inc push movsb jbe add mov (bad) loope sahf sub push mov sub inc push xor jne inc push inc (bad) (bad) jl cwtl pop add push cli addr16 jmp (bad) (bad) pushf test push push adc or add es jle inc enter xor jecxz add pop mov imul push mov arpl mov push lods stos xor mov mov call in pop shr add movsb arpl sub mov or lcall sub add popf in out or lds xlat cmp inc xor fucomip outsb inc cwtl jmp push cli pop jae adc in jne jae (bad) aas or loopne dec or sub pop sti xor mov jg bnd mov inc fsincos cmpsl pop pop mov pop xor pop sub sub shrb shrl sahf sti outsb push or adc fistpll pusha xchg sahf dec jbe add hlt xlat push neg adcb aas mov pop xor xor push and or jg xchg adc or les or (bad) push fsubrl (bad) jg dec icebp or pop cld mov sub pop repz ss sbb out inc out movl xor outsl mov xchg pop sbb jmp jp sahf mov call (bad) jge and std pop leave sbb add jge cmp or xchg (bad) out cmpsl pop add loop repz popf frstor mov mov pop mov test pop mov jno add (bad) xchg and (bad) mov scas push jnp insl jno in movsb mov push dec inc (bad) dec pop aad sub mov lret adc dec add or and add push cmpsb (bad) inc aad in xchg pop sahf movsb mov out add cmpl test jl leave fiaddl arpl std (bad) inc pop adc ret fwait dec add imul push rclb inc cmp jb sub jmp push xchg cmpsb subl icebp out push jae ret data16 mov movsb inc leave cmpsb (bad) push mov in mov icebp push dec xor pop adc sbbb inc mov mov add out add or pusha lcall dec push xchg je jae jp shl fcoms scas add xor test inc pop adc and lds mov mov fcoml mov sahf leave test pop lret popf insb fistp inc or mov enter mov (bad) and jo xor int3 dec inc and push mov inc fistp jmp into in cmp jg out outsl push adc pop mov xchg add lahf (bad) das xchg add out mov sub dec sbb jecxz lahf testb pop data16 rcrl and inc push cltd bound adc call cmc xorb mov pusha jge testl adc jl cmp mov pop bound mov (bad) pop xor rolb mov (bad) (bad) mov or popa add popf push mov (bad) out subl jge shll pop enter lret push inc test test pop push (bad) mov push inc notb mov mov sbb fs (bad) sub push scas inc sbb sbb iret int3 icebp (bad) cmc or sub jecxz xor andb cmp dec enter sub cmp rcrl sahf nop (bad) xchg pop or sub mov xor cmp xor cmp aam or push loop pop jle mov push cmc sti das mov xor push cmp cmp sub push and push sub push xchg pop jmp mov bound movl insb sub je xchg or das clc and xor jl shrl or jbe mov inc outsb jl inc add insb (bad) inc and pop inc inc push leave mov sub das push lgdtl or ret clc sub in icebp and fdivl insb cltd xchg cmp cld js orb data16 fwait popf hlt decb jg ds ljmp xchg add add mov bound mov movsl pop ds mov adcl xor add lds push pop (bad) ja lods movsl ja aaa sub pop pop je jmp fdivs cmp imul (bad) push and loopne std cld pop xchg ja mov stos jae,pt cli popf cmc xchg (bad) or int3 movsl fisttpll xor mov popf aam cli jne jl pop jns push mov push jl gs jbe orb popa (bad) ss inc les (bad) scas in aas add push (bad) mov cmp fdivs and in cltd aam cmpsl jecxz add in mov push sbb scas sub and cmp subl push jne add jmp test lods sub lods mov jg dec pop inc jmp movl lret in add pop enter cs (bad) outsl and dec fcomip inc orl fdivrp adc inc lock insb dec adc pop dec xor push xchg adc mov and adc adcb xchg mov ds mov cmp int3 sbb push cwtl xor loope mov mov pop jns fs out xor dec push das (bad) mov push add xchg sbb adc push aad pop cwtl mov jnp and jg sub test jmp outsl add lea or icebp pop jmp push stc add push ja or add (bad) jg dec repz jmp jecxz dec stos dec rclb push cmp mov xchg sub sub or arpl sbb push pop stos int3 xor jmp or mov and push push push xchg dec push dec xchg pop or jns popa or push mov outsl or xchg adc fadds hlt arpl hlt or mov mov aad andl sub and (bad) iret lods adc mov lret addb inc cs es decl inc pop repnz or pusha scas push mov aas and vphsubbw inc jg mov jmp add cli sub imul (bad) xor (bad) lret mov jmp shlb add dec pop push mov mov leave dec push jg pop mov je jo adcl xchg std sbb das jmp mov js roll sub xor stos call xchg pop and clc xor sbb inc jb xchg ss pop out ror fild xor dec add dec pop (bad) insl jno (bad) das pusha bound in pop cmp sbb les mov jmp (bad) add mov inc hlt push insl dec push push pusha pop notb divl add scas jle ja popa jnp out mov fisttp adc push test insb mov (bad) fs jge adc push pop (bad) pop fsubr loopne loopne jmp jp xor pop mov test ja sub fst or lret dec add push adc or mov xchg add aaa pop mov jp sbb insb mov aas push clc inc xorl sbb push cs fcmovb (bad) scas add pop add fcmovnb pop mov hlt xchg ret mov add push add jae mov add xor in xchg add dec lcall lahf std pop mulps out call in movsl inc lods xlat pop es js ret adc dec add xor stc push iret les add mov xor pop popa (bad) lock adc mov cmp loope das movsb push jne dec rcl fist inc cli repnz jns jmp test pop std mov mov lahf cmp pop xchg push xchg inc repz or push pop xchg push fnsave inc out out scas cmp jmp cmp add push dec add fldl popf xlat cltd xchg pop cs movsb cmp push jo and push push (bad) mov push sub rcrl pop push sub push ret and xchg adc or scas jo lcall mov mov das push sbb xchg cld in push dec mov or test es push outsl int3 jge mov push (bad) in pop add sub jb in ljmp xchg cmpsl outsl jg popf fwait mov pop test add loop in sub sub adc int shrb enter inc xchg xchg imulb add xor mov pop pop adc cmp bound hlt dec pop fmul inc dec mov bound xor pusha inc jmp jnp sti pop cmpsl sub pop xchg js (bad) dec push inc mov sbb outsb xchg fldt in int3 add pop mov cmp sbb xchg sbb call pusha leave sub adc nop dec dec adc xchg pop lret icebp js out inc pop out imulb (bad) add jmp sub mov es push imul out sub pop fnop aam lds std sbb out jmp jle (bad) cld fs addr16 xor mov push mov xlat xor ret or (bad) frstor loop or fwait outsl dec jg add add sub pop aam pop or jmp pusha push lods jle adc or and dec pop xchg xchg lret and pminub dec lea push xchg pop pop cmp (bad) xor out push pushf in push pop ret mov cmc into mov dec jmp or add (bad) and jmp adcb and add cmpb jl sub xor shrl (bad) push mov jge inc add inc add jge shll adc insb ds jg inc iret aaa ja dec outsl mov pop out insl mov adc shl sti sub add and and pop js ljmp cli ljmpw sub aas sub bound test fistp inc loopne sbb sbb adc fcoms jo sbb test data16 notl push pushf lcall out (bad) repnz or push mov pop pop inc adc fisttp mov xchg push cli sarb or inc lret rcrb jmp shrl sub sbb lret jnp jmp stos movsb sbb (bad) stc and cltd (bad) xchg mov sbb fisttpll (bad) xchg adc (bad) enter (bad) or sbb jg jmp xlat cli iret (bad) stc (bad) or dec push daa pop dec add mov push lcall push cs jg mov dec xor aas inc adc scas or (bad) mov or pop mov inc pop dec stos or cld cmp cmp in xchg pop xor test jge or fmuls fdivrs sub sti (bad) mov ret test les repnz leave jge (bad) sbb pop popa lcall add (bad) outsl sub fs dec aad add and jae push and mov or lods cwtl rcll xchg andb pop add out push mov jno and in and (bad) and and neg jnp scas dec sub in jmp pushl loop stc idivb ds aam xchg and adc xchg cld sbb lods cmp xchg jne ret pop ljmp inc push gs push add (bad) mov add or jge repz pusha decl lock (bad) sbb add ds inc sti aas daa add ja jg xchg or jge (bad) push mov jae adc sbb pop shrl push push xchg push jle add sbbl jg (bad) push es mov stc mov imul push and test cwtl fnstcw stc arpl xchg orb adc cmp and jnp push lcall xchg push ret mov xchg add sti dec xchg add adc ficompl xchg jo mov push fs pop mov mov fidivr or inc add stos out jmp out xchg lret add xor and add loopne or inc pop mov add scas clc arpl (bad) jecxz xchg xchg (bad) jmp stos push in call inc scas unpcklps out cmpsb fidivr ror int3 scas pop adc fldpi pushf mov mulb pusha mov push dec cmp add jge add mov pop loope xchg mov rorb imul dec lods add cmpsl mov add in pop add lods shr sub (bad) pop add test dec pop out push inc ljmp mov es scas push xchg xor negl xor xchg add je fidiv pop push inc dec push fldt leave and push push addb mov adc jge push jmp push lock sbb das inc std stc ret shll push sub mov mov js or sub xchg jbe jb sbb outsb fcomps test insl jno cli add jge xchg rclb hlt pop (bad) pop pop pop mov fs loope push jbe jecxz pusha clc (bad) arpl mov inc push xchg jmp dec and dec fs cmp jl mov inc pop out pop add mov inc pusha or cmp lss inc sbb xchg lds xor (bad) sbb mov imul sbb jmp and mov ficomp push (bad) jo mov cmova add jecxz js loopne stos stos or loope xchg cli inc les adc (bad) sbb fstps adc inc loopne inc jge cmp imul sbb clc fistp movsl mov add add sarb ret jno dec mov setbe (bad) push cwtl xor leave dec xchg pop cld push call pop jge xchg xchg add in push adc pusha dec in insb push sub push mov push add jecxz xchg and stos push jo sbb pusha adc xor fist mov mov inc les xchg pop add push ficompl push js es repz pop xchg cli cltd subl cmpb lea ljmp incb rcll in ficompl insb rcrb clc js and out mov adc jmp pusha cmc fisubl lods sbbb repnz add out pop call hlt push dec imul icebp (bad) mov xchg in aam adc repnz cwtl nop add lods dec clc paddusb or push pop gs mov lea jmp or test imul call push cmp ljmp jl cmp jmp ficom mov xlat aam mov les (bad) mov mov pusha cwtl ljmp and cmp test dec mov and push les inc sarb jmp and in out outsl cli imul push call xor jmp pop cmp paddusb ljmp sbb add in fidivrl call or cmpl xchg pop jp add in push xchg dec push xor or call outsb jbe roll mov cmp jmp rcll in mov push fs mov xchg loopne jge pop ficoml not subl xor dec xchg cli mov movsb in mov mov push xchg mov repz add pop js call (bad) movl fmull pop pusha mov push insb cli sbbl mov (bad) test lcall pop popa mulb cli in pop pushf cmp or fbld out or xor sub mov push loopne clc push js roll add mov inc (bad) mov dec xchg add neg push and pop adcl (bad) mov in mov bound dec jo xchg movsl adc shrb pop popa sbb outsl xchg nop sbb fsub aad dec insl and jmp jecxz or push dec test mov les cmp arpl fisttp (bad) fmuls call pop fadds addb dec sub adc clc mov or push out popa sub push cmp nop jmp sub mov mov xchg out and fiaddl pop cmp fstl inc inc inc dec hlt clc movsb js xchg ljmp pop mov jecxz jecxz xor dec rolb (bad) mov or jmp inc adc jns mov gs mov fimul cli loope jl jl xchg cld or lods add (bad) jle pop xchg sbb outsl scas sbb xor sbb mov pop xor dec inc loopne popa xchg push xchg loopne jl adc (bad) add xchg (bad) xor and add orl pop inc fs sub push and add xchg xchg inc jo inc add cli and sub jmp jp mov add loopne js add or fs and mov mov dec xchg dec xor bound (bad) xor fstps (bad) ficomp lock or psubb sbb inc and push lock mov sahf cmp jmp jb pop sbb incl test test call pop dec and adc adc movsb cmp dec test and push add inc in dec add mov jp lods mov push push and add scas adc cmp jae stos add cli cs jne pop xchg push pop pop jb into and popa jbe sub lret jp stos fadd add pop into inc bsf and or add cs xchg xor adcl sbb loop jge lock loopne addr16 jo ret add std shrb pop cwtl jb adc mov nop add jbe movsb inc mov loop dec pop lock mov loope jo jg insb xchg fisubr int3 jl pop je jp ffree leave bound outsl shlb iret fsubs and fcos xchg repnz ret or ja lret mov inc (bad) sub stos xchg mov les fidiv das add in pop and (bad) nop fs fimull aam dec and (bad) divb and xorl loope pop fsub rorl popa lods xchg push jae test imul sub add test xor je pop insb inc cld xchg out sub fnstcw dec adc (bad) mov sbb pop dec and mov mov or (bad) dec mov dec icebp xor jns test xorl lds add jbe test fsubrs les imul xor dec enter and or xchg repnz jmp cmp fdivs lret clc push ret jbe mov adc and jb or jno push jge sbb pop adc sub loope xchg lret lea pop enter adc ds mov imul leave insl aam icebp mov add pop popa add sarb addr16 jne stc push jb movb cmp mov daa mov roll sbb outsl sti dec fstpt mov adc std push add dec mov sbb sbb sbb mov lds shlb sbb dec js mov call mov jb and rclb repz out and add lds or test pop sbb notl lret mov rorl cmp inc mov xchg pusha sbb and pop rolb and jae mov xchg out mov cmp fcmovbe or adc mov ret xor adc xor jno clc outsl popa les mov insl push pop (bad) mov shrb movsb and mov push mov rol inc cwtl cwtl push mov sbb fcmovne push xor loopne and adc xchg inc outsb in mov lcall inc fildl dec jmp push adc outsl push mov and ror sub dec or adc fwait and add sbb inc sub jecxz inc cwtl push out dec mov inc push sbb (bad) jno gs cmpsl xchg insl dec sbbb sub add push sti repnz and incb stos test add push sbb and js push orl int3 push mov lds cld inc mov notb and cli jo cmp jl dec add mull loopne xchg (bad) inc add jl add add xchg test js add push jbe je pusha jle push inc xchg lret sub mov sahf mov jmp (bad) repnz push adc out or pop cwtl fadds cs call cltd jo lcall (bad) cmp lahf pop sahf adc in lret sub adc out cld mov mov mov inc fmul jbe mov subb xor inc inc lods rcrb xchg and pusha enter mov clc loopne mov lods fcomps push dec push mov or popf sti add mov lods loop loopne (bad) push mov or push pop loope pop sub cmp sbbb cmp test sbbl sbb int3 add push cwtl adc fisttpl sbb inc inc cmpsl pop mov mov inc jne pusha push ret push mov pop clc push jo lret pop dec leave cwtl jg pop out mov mov lcall xchg jbe inc pop inc add lret jp int3 inc push jge jns cmpb jecxz clc dec jl (bad) inc nop ret dec push sbb (bad) enter cmp bound cmp rorl mov and es push xor jbe imul or add rcrl add mov add jns cli lock add dec jb add add test inc jb jno xchg mov test and jg xchg fsubl jbe xor nop and jge pop jg dec add ja (bad) lods pop or jle inc leave lcall aas ret movsb les and adc xorb fucomip dec loopne mov push cld data16 jb es mov push sarb xor (bad) mov mov fs (bad) cwtl jo mov and sub jns push jb (bad) jle or sbb bound add mov add loop fiaddl es add xchg and lret xor (bad) mov and xchg sbb xor sub mov movsl rcl jl bound inc clc scas or xchg fiaddl leave scas ss or aam fnstenv in (bad) pop stc add lcall sub movsb test sbb (bad) or sbb pusha xchg pusha add inc dec es call sub fwait std ret adc push pop dec push aas test sub (bad) loope or jbe pop push jp jle sbbl jbe and hlt lret mov ret jns or adc ss incl adc call xor inc call or inc add rorl aaa pop dec cwtl mov add leave fdecstp mov enter lods (bad) pop repnz sbbl push xchg lret pop scas adc frstor js xchg pop mov gs movsl pop or rcrb int jne xor cmp cwtl or jbe and dec scas cmp push mov or add (bad) jbe pop add bound jo nop rcrb and fldl es aas push mov ret sub shrb xchg ljmp les aas lock pop fsubrl push loopne adc sub jne sub cmp mov sbb repnz movsb sbb rorb jle adc add sbb shrb gs mov cmp aad pop mov arpl push inc fdivl or mov sbb cwtl and rolb int3 push call adc or mov add xor lahf jbe lret mov sub push jb sbb pop pop xor xor add mov jge or jle xchg sbb mov js dec nop or inc lods lock adc outsb int3 sub popf clc xchg loope inc inc xchg mov insb mov pop pushf push repnz jbe test inc adc ret jne pop push jl cmc mov push inc inc cwtl mov test xchg cmp fwait xchg or and sbb pop jne xchg jl dec test push and or pushf sbb mov add jno ret pop outsl adc loopne sub pop insb iret pop in inc stos mov mov adc add push mov repz or pop push call loopne adc inc cwtl cmp mov hlt mov imul xchg mov adc lret sti dec pushf popa sbbl dec loopne aad fcomps aam test sbb or lret inc dec call or mov sbb or ficoml xor cmp mov dec jbe lds rcrb push add stos fs jne rol roll dec or push sub push cli std addb rorl mov pop push or (bad) js xchg pop sbb jns pop xchg cmp popf mov cld and pushf sbb movl fcoms jle and and xor push hlt xor andl sbb jo or dec sub flds rcrl shlb call add and das cmp sbb xor or addl sbb sbb clc loopne,pn fs xchg push lcall mov and loop out adc pop insl pop pushf and cwtl mov mov push lods faddl out add insb or xor clc loop rorl jne sub xchg xchg pop loopne lds add dec test push or jae loopne test pop jbe mov sahf add das mov adc mov fsubr outsl and mov cmova cwtl jbe and add xor add push dec xchg add lock hlt shrl fsub jg test pop and dec shrb sbb pop insl pop adc jno pop xchg add cwtl test imul fchs stos mov add fstp bnd add xchg inc in dec ret pop lods inc cli and clc add and inc dec mov js (bad) dec cwtl inc cwtl pop adc lret inc jb out in (bad) fildl shl insb (bad) add mov into xor in roll inc add jmp pop add pop fcmovnbe sarl lds ljmp add and sub lock add ja jl add aad add pop sbb sbb push test loopne (bad) pop adc jl repnz sub add push pop sub push je sarb shrl pushf repnz cs mov mov sub hlt pop into fxch mov pop adc dec or loope scas and in andl (bad) sub jbe pusha fs movsl clc pop repnz jns sub cmp rorl xchg jl leave lret push dec mov mov inc xor mov pop pop jp aad test jl adc repnz mov ljmp or icebp jb xchg in mov orb sub movsb lock loopne dec les cmp add dec dec and or aad sub lret fcompl (bad) dec call rcl sbb pusha or add jnp inc pop rcll pusha mov pop fild adc dec cmp arpl sub inc adc push lret mov cmpsb jns cmp fisub jl and lcall jb (bad) adc gs xor jno inc inc and call push and (bad) ret bound or les and push sahf jl fmuls and mov inc adc cbtw sub (bad) sbb loope sbb test add out push sbb pop pop lock sbb dec mov mov scas jns repz pop pop or push test xor add ret cwtl gs pusha mov cmp pop sbb xor push fcoms jge or test fbld jae (bad) add test insb (bad) sbb sar loopne lock add and add adcl je pop or push and push push jecxz loopne jp pop lock lahf mov sub adc jbe roll adc lret sbbb add cmp int3 xor jg cmpsb push jno or or das dec loopne pushf (bad) mov mov dec pop cltd cli enter lods (bad) mov pusha jge test dec push dec fimul pop xchg inc rclb jno and push mov inc pop mov sub xor cmp dec ds push in enter pop shr add jmp push dec push dec je add xor leave loopne subb or leave enter and inc loopne test and jbe dec mov or insb rorb in loopne loopne pop movsb call cmc pop xchg ret fucom pop cmpl cmpsb movsl lcall insl insb mov and movsb sub add cltd shlb stc xchg je pop or mov pop cmp (bad) cld mov add and insb xor std add and mov fidivrl call pop jbe dec aam ret lret icebp xor push mov icebp andb jmp and fs insb adc or sub xor pop cmp add lret cmpsb sub ret xchg cmpsb shrl dec sbb fnstenv out jb leave pop (bad) inc sub dec test ret shl jno pop pop sub add nop call sub enter jbe push add (bad) dec pop add pmaddwd sbb adc lret or mov sti in jp mov adc rclb jo repnz or in mov jle nop and mov mov inc sbb mov and call addb cmc std inc pusha sub pop stc push mov sub imul or push push sub (bad) adc mov fs pushf sbb and jecxz inc dec jno call jne loopne insb nop xor inc xchg adc (bad) in add pop jp and fsubs lret enter mov fdivrl shrb jge add out (bad) fs cwtl sbb bound mov aam popf add xchg jo sbb shll add mov jne daa in in push andl roll inc xorb xor movsb popf rorl mov sub sbb rclb int xor pop and jbe sub jno mov mov sti or push cli push inc movsb ror pop fbld fcomps mov lcall dec jnp lret and test mov pop negl fimull cmp aas andb jb cli sub or fidivrl jle add adc test test aam pusha mov loopne imul int3 sbb bound push stos inc jl sbb add rcrb out gs clc pop xor arpl andb rclb dec fs mov rol mov mov push mov or pop dec cmpb jmp and mov loopne inc pusha (bad) mov nop xor adc aam cmp pop aam push cmp inc push test xchg mov or aam push call mov push push sub or pop fstpl cwtl in cmpsl xor aas (bad) shll aad add mov loopne jp inc cmp push or subb push cwtl add out in mov push jbe pop cmp and cltd fisub mov mov and jns cmp imul pop adc mov fstps xor js loop push test movsb push aam andl lcall adc ss mov movsb add and (bad) and je mov adc add add mov sahf lahf mov cltd sbb xor fdivl ror popf or dec jb test and sub xorl (bad) in push pop in push cld pop es pop xor and sahf or push or pop pop push jo push add mov xchg jbe adc cli ret popa enter adc jne roll add in ds dec int xchg repz and lret jmp push test adc fs inc pop lahf rcll sub mov add gs (bad) mov push repnz jo jp cmp sbb outsb movsb or inc pusha cwtl jns push sbb sti adc add and mov pop sub and adc inc lods es add movsb xor aaa or mov js mov imul test pop mov call add nop cmp out mov xchg sbb movb test fadds shll jecxz push and andb xchg dec jno push sarl mov xor mov xor lods lret and stos enter nop xchg insb out adc mov fidivl inc dec mov hlt push xorb sarl clc dec push mov int3 mov xor es xchg movsl mov adc and js jns outsb inc mov cmp pop inc xlat loopne push sbb enter sub lret aam test pusha mov and pusha nop mov es bound bound adc mov hlt (bad) js or cli pushf add sub insb fdivs mov test dec sarb jnp adc push push hlt sar int aam xchg jl or addr16 mov les lea jbe dec in sarb cmp jne,pn xor inc loopne arpl (bad) lret (bad) mov sbb jmp (bad) sbb sub rolb in or push jbe sbb enter xchg push pop in add inc dec jbe lock orl jb movsb loopne scas or mov push loopne dec mov cmp sahf fcom xor inc lahf mov fwait or fisubr das and mov jp ret jo xchg adc (bad) add sub add jns in (bad) movsb add or jne sbb mov adc arpl jl add jo mov pop cli fstpl or lret sbb fs in push jbe push or pushl inc add jmp or test mov jge sbb xlat leave data16 or xchg loopne sub fnop les frstor fisub add nop pop fwait add lods jbe add test xorb add cmp or push adc push sbb dec stos clc arpl or stos jecxz push aaa mov jo add cmp fistl orb lret or mov cmpl out ficompl add dec push hlt and add (bad) je lcall in jo cli leave dec daa sub sub xchg jb adc jecxz pop (bad) rolb (bad) pop jbe xchg cmp fcom push jae loopne pop cwtl scas rclb hlt (bad) jne jp dec jbe call loopne ja sbb divl mov mov faddl xchg clc push add cld add punpcklwd aad pusha jo add jp stos lcall outsl mov add mov ss add and (bad) (bad) stos or (bad) pop inc mov call adc xlat test add loopne stos pop loopne js push jl push ret dec or and test (bad) push add je movsl push rol insb mov mov add ret mov lret cmc fisubr pop (bad) nop adc dec and pop ret adc mov movsb pop cs xor jl pushf sub test or mov pop pusha sbb push mov dec lock pop test sbb mov inc sbb fcom std fs pusha push js,pn mov xchg and call loopne jle test xchg in inc adc mov mov cmp dec push nop xor nop lods mov and leave lret loopne inc dec add mov fcoms jb rcpps adc dec (bad) nop rcrb popf pop popa inc sub lock mov push adc repz (bad) jb popa pop testl jo inc xchg enter xchg (bad) and xor lret sti push cld and (bad) sbb mov mov cwtl or (bad) jb or das mov clc into mov (bad) xor shll xor adc add dec jb sub (bad) mov mov loope iret adc cmp scas aad push xor sub daa jbe out adc xchg loope sub pop adc and add cli ds test in dec and dec dec sbb sub (bad) fisttpll in jecxz push and or fsubs add cli int3 cld movsb ret pop mov stc out inc ror push in dec and inc aas jo add sti hlt pop scas aas jp rolb jae jmp popa rcrb lods fldenv imul out and xor sbb idivl popa mov (bad) jns hlt out mov inc dec mov mov add dec pop inc aam sbb loopne add jb fidiv xor add xchg push jbe sahf roll ja dec jne jbe and adc aam out mov subl xchg mov pop cmp repz mov fs mov mov lret pushf or adc mov loope sbb mov (bad) fs loop add test insb imul fistpll mov cmp pop jbe adc sub jl inc aad xchg inc shr test or push lret fisttp imul in in pop push test (bad) test cwtl sbb cmp fcoml push test loopne loop xor xor xchg test repz (bad) pop arpl add lods adc xchg add in mov xchg out dec push icebp cmp hlt ss int3 enter dec int les adc and xchg lods inc xor repz add iret lods out je inc fistpll xchg mov fsub mov xor (bad) and fchs js adc and lret pusha nop mov repnz clc lcall popa jmp or jl cwtl rcll (bad) rep add and adc or inc add pop test into sub inc and cmpb sbb inc mov pop ficompl loopne jns mov pushw (bad) gs (bad) cltd add inc dec pop cwtl inc mov fistp bound pop cs push cwtl inc mov iret jns inc pop (bad) mov pop sub aam loope dec ret mov add scas fcomi pop aam sub in add xorl sub xor mov dec inc out ret push and nop and insl das je sbb loope fidivl sub add mov mov mov adc xor inc loopne push cwtl add dec fcomp call and lods mov dec ret sarb cwtl (bad) hlt push xor xor stos inc ror repz pusha pushf xor lahf psubusb lea and pop call loop stos pop insb jl (bad) int3 pop std test ret pop push jl andb addr16 dec jge pusha mov sbbb push inc loopne enter (bad) mov jecxz inc mov in mov or sbb rcl icebp sub inc jbe enter xor sub add or jb aad push or add aam loopne test cs and pop dec sub notb sub popa sbbb lock jmp pop sub pushf or ret fidivrl and mov mov add loop inc sub lcall push popa or fstps cmp das push and sub adc add movsb pop scas inc mov adc mov mov cmc (bad) cmpsl jp unpcklps mov lahf sbb mov mov lock call int3 push sbb ret (bad) mov push or sub cld add jl add nop xchg sbb mov sub xor dec test fwait xor fdivrs jo loopne add imul iret nop lods aas fwait shll enter sbb and mov pop dec in out push jno ds movsl lcall push lds mull or mov and stos inc mov ret arpl loopne cwtl dec sub and lds add mov pop push js mov inc adc je push lret xor cmp xchg pop into pushf shrl pop les mov scas call mov aas jae test pop scas inc hlt push jb and pop dec clc mov rol mov sub leave lret in cmp xchg pop adc aad jb cmp jge leave and mov inc inc nop cmp das add lods jo insl les insb fs add out imul and cs and imul jb cmp jbe sti das enter incb mov sub xor (bad) and addb test cmp inc (bad) mov cmp test popa mov iret sub xchg dec and mov jns je and pop cs and or dec sub cmp ss push and inc shl imul in sahf and inc jbe and cmp dec sub sub sub and aad call mov jnp push pop sub and push shl push inc pushf cld pop adc push call add jmp or dec test addr16 out add (bad) stos pop cmp xorl inc and add add xchg lret popa and pop stos pop inc add mov add pop aam jbe push fadds gs in lds call rorl push lcall sbb add dec daa sub lcall repz cmpsl cltd lock xchg addb je les orl xchg add or or test adc pop lret cld imul xchg mov aam sub adc xor hlt pusha mov rolb fmuls mov roll mov or mov mov clc in add push in xor dec mov xor jns js std bnd cs call xchg loop ret add push sub pop pop jo jge jb jno sub loopne mov sub xchg adcl inc xor cmp (bad) jo adc xor mov clc add cmp sbb xchg xor xchg and cmp xlat loopne xor ret pop pop ss push rclb sub jae or fdivrl data16 push and lods jnp add fisttp loop cmpsl cwtl sbb lret fwait or (bad) pop dec (bad) mov xchg or ret cwtl cmpsl mov sub test out add loope imul lods call sub aam xchg fmull out push push push sub sub add add and jae test mov xchg xorb jg or jl jge adc jae loopne nop test and ror test sub fcmovnbe into loop aad push mov mov or adc dec mov ja fs pop gs shrb lods jnp imul lret stos arpl scas add aam or stc xor adc pop mov dec add iret dec (bad) or cwtl add lret pop shrl or adc das mov push add mov mov loopne addb adc add pop out daa ljmp jp cwtl popa inc adc xchg lcall loopne jb adc push movsb or and aad test inc lods add (bad) enter pop mov and into cltd inc test mov loopne lret fnstsw xchg dec inc nop aam jl and lock jb cli push fcomp or inc mov pop mov in lods dec neg add stos iret clc call enter pop push and push insb cwtl mov sub scas xchg fnstenv stc les fs loopne jo (bad) cmp add sub push adcb mov test xor fimul jns popa or stos jae inc or mul shlb cwtl inc in scas std and lock sub lret bnd ja pop movsb mov add jge pop xchg jmp sub aam mov out sbb and push cltd cli xchg je pop pop js jle inc f2xm1 pop daa outsl xor insb add push xor cmp xchg add loope sbb popa cwtl adc xor incb mov test mov adc xchg test and pop dec add fnop movsw loopne xchg pop sub mov and push (bad) jae out std loopne and jno sbb rorb push pop scas and mov add (bad) sbb repz sub xchg loopne dec jne call lret xor push mov cli popl xchg mov inc mov orl push andps lcall lods lret mov call sub outsb or movsb add push push push (bad) loope cltd mov scas cmp sbb stc data16 out jne,pn xor adc sbb pop sub add fdivl xchg scas loopne lock cld hlt flds loopne inc dec rcrl cmpl hlt mov add dec add pop aad push mov inc inc mov mov popa jbe clc inc nop sti outsl loopne out sub loopne push dec les lret hlt push and xchg jns test add jb xor out sub xchg mov pusha sti xor add out adcl dec cmp gs dec je add mul jb hlt cmp add inc movsl jg cmp push cld push les movsl mov mov cltd adc add mov lcall sbb fxch jbe mov pop add movsl sub push sbb pushf mov push (bad) pop or insb push bound lock adc psubw pop jbe pop test (bad) rolb (bad) enter inc sub loope add pushf add stc mov pushf js (bad) pop rcrb lods out or (bad) mov loopne mov pop and je or loopne pusha les test (bad) or lock mov pop jb nop pop repnz addb push xchg fdivrl pusha int add incl xor mov (bad) mov addl loope cli mov or addr16 repnz push dec or les aam enter pop xchg push test push mov dec dec addr16 adc enter cld push mov cwtl xchg pop jp int3 dec sahf pop in jno and imul rolb inc loopne pusha (bad) xor ret xor fcmovb pop sbb jle mov lret cmp pop je push aam mov fs jb test jle jmp cmp jae lret cmpsb xor test test iret sub or jo xchg sub pop rclb inc loopne pusha dec mov or leave aaa mov inc cwtl fs push sbb mov outsl fisub pop sub dec sub adc jb jno popf lds insb das test add mov into in nop outsb dec jae mov in pop enter daa xchg pop mov fwait shll cld dec xchg dec sarb xchg dec sbb pop cmp fnsave icebp pop into dec xor cld or (bad) bnd enter xchg clc jae sub pushaw pop dec push jns (bad) icebp push shr mov mov jbe movsb adc lods sub cli fsub (bad) xor dec pop imul scas or loope cmp xor and stos push je xchg xor cmp ljmp andb dec daa rorl add and (bad) clc das adc rcll imul sub jle mov call mov lcall push icebp adc mov inc call dec lock jecxz aam cmp cmp or fldl dec cmp pop rorb popa pop mov fsubs sbb sub adc sub mov insb xchg (bad) mov xchg loopne nop or cmp test ret je pusha or jo cli adc bound jle,pn sar xor mov sahf sbbb leave andb lret fimull into cmp into sbb jl in ds xorb negl lret jno or pop mov fadds mov dec andl mov icebp jb and adc (bad) push pop enter daa orps inc (bad) sub add sub cwtl adc lods push jecxz push dec scas sbb xchg loope clc add pop pop dec testl inc mov cmc push and jl fildl and loopne mov xchg mov call fnstsw jo daa dec jbe mov sub aad jg mov in sarb add aam int3 fadd add and lock lret adc mov cmp ret popa pop insb inc outsl pop loope aas sub inc mov dec loopne inc or rcr jge (bad) lret dec leave not jo fs pop scas dec xor add clc leave mov pushf xcrypt-cfb cmpsl mov aam dec faddl (bad) in lds mov dec mov xchg or cli push sub fildll jb sbb lret jl or (bad) or loopne loopne lcall int3 scas popa xchg sbb xchg out and call test add in mov cwtl loopne sbb add aaa lahf sbb cwtl jecxz or (bad) js jg jmp xchg xor outsl fsts popf sub (bad) ret lret adc enter push add lcall hlt add fnop repnz sub test or sub inc pop mov push stos sbb push push pop insb es loopne or scas mov in lret cwtl stos (bad) lock movsb es in add jns (bad) jbe fdivl or mov pusha lcall imull sbb pop mov fistpll xor lret (bad) lods into pusha les das jl adc enter push pusha inc fiaddl mov sub adc mov je popa pop xchg leave sub stc jbe jmp fs (bad) repz int3 or clc push pop notb push addr16 jne xchg add and pop push inc or sub add mov sub les popa or adc or and enter xor cmp xchg shl pop xorb add repz inc hlt pop jns lret std mov inc call adc pop sbb xor add fisub sub mov mov push repz sti nop cmp js and mov add mov push lock imulb xchg adc mov inc aam add pop inc cmp lret lods ja je dec fsubs (bad) out adc or xchg add data16 in pop ret add std mov xchg sub add or pop mov bswap sarb mov adc jbe das flds test push jp loopne mov shll ja out mov pop nop cmp pop cmc add push insl fldenv cltd ss mov adc loopne pushf inc pop mov les add es gs cwtl sbb add dec insl loop (bad) lret ds pop sbb fs jl and cmp pop lea push jne repz lret xchg sbb call add sub inc lock stos out lret cmp lds pop stos int3 or dec lret loopne jae mov dec push inc fimull hlt add jo pop cmp sub out pop xchg adc daa xor dec jge cld dec jl fistpl fsubrp mov or in xchg (bad) mov sub or stos call cmp incl push imul repz xor in adc and adc adc ja mov mov les repnz pop fucom or push jle dec or inc call sub dec js mov daa lds xchg lods dec js and sbb in dec data16 sub cs sbb stc cmp dec call cmp hlt ja adc sarb xchg add mov scas test jecxz (bad) mov dec push mov fwait loopne fdiv out roll jmp xor ffreep adc xor xor add pushf add sbb and mov add mov add mov int inc dec repnz push test inc xor popa add push xchg xor mov sbb or cltd push dec inc add mov dec in xchg dec (bad) adcb add inc loopne data16 adc clc jns jno xor xor aam mov add in mov cli clc popf gs cmp pop addr16 inc ret jbe jmp add pop jp add mov adc aas and sub pop or dec jl hlt cwtl sbb add push mov pop xchg sub leave movsb mov (bad) shrb outsl add enter ret or jbe pop lock dec and or scas fs xchg push or cwtl inc or mov pop xchg outsb push lret (bad) clc jg test mov or pushf push push add jae add pop repz andl inc test and inc xor jl or call inc out std ret cmpsb imul mov jo aas adc loope mov adc jl cwtl add cmp repnz popa addl xor fnsave inc add sub xor sti add lret and cmpb clc cs clc adc bound pop push push mov jbe pushf in add and mov je sbb enter les jp mov add cmp pop popf repnz ja data16 js mov pop mov jno or push pop sbb rdmsr cmp enter loope jl (bad) loopne mov std sub das or sbb sbb add stos in or lret in jb and mov aam jl jl or subl inc in rolb scas mov inc jl test mov jge test mov leave movsl fnsave add jnp cwtl fcomps les insl jae sub out inc shr lret mov nop in jg cs or stc or sbb pop notb push ret jne movsb push int fildll inc loopne push dec cmpb ja jbe jbe or ret lods lret lret js subl add pop pop sub push test shlb je and daa out sbb xchg push cmp push sub in cmp xorb ret mov inc jge push loopne jp cld add cld lock mov add add pop push and add adc mov inc adc sub enter and adcl push xchg les jb movsb add hlt repnz mov ds test sbb xor lret call add jp ret lret cmpsb push xchg add (bad) repnz push inc aas ds js pop xchg add test push std out xor push out add ficompl dec not std cmpb aaa aam unpcklps cwtl xlat cld (bad) lret adc pop scas ret in inc mov mov cmpsl lcall add hlt jns ficoml mov add adc lret (bad) repnz cmpsb insb dec push outsl int3 lahf sbb pusha xor popf outsb je adc rolb jge rsm pushf cmpsb lock sti lahf mov orb sub push iret jge (bad) dec push xchg mov xlat add or aaa aas push cmp xor or enter sbb pop push int fnop mov notl in or jne mov pop xor or dec (bad) leave fmul frstor or inc adc mov sbb pop dec lret adc aad push ds sub lods pop jl adc aam cltd inc (bad) mov inc pop mov cltd xor mov aam xor (bad) call jbe cmp mov dec mov and addb or add inc lahf mov pop or adc mov adc insb sbb test jnp sarb inc cmp jge test xor enter dec js inc jo mov out or pop add jae mov hlt xchg adc imul mov dec and ds xchg pop pop inc fs rorb popa imul jg jo jb std xor in nop or (bad) or xlat sbb jb xchg push (bad) loopne aam pop adc adc fcomp mov out mov xchg adc mov add fildl mov bswap das inc jl add js push cmp mov ret xchg jp mov loopne outsb je arpl cmp (bad) jb push sbb cli mov sarb sub sub push out mov pop rorb ret or cwtl les daa xchg sti sbb mov or lea mov daa jbe pusha mov ficomp mov push adc push in je lcall push in jb push jl jbe rcl mov aad out push add sbb loope test push scas and mov lods add inc mov lret out mov inc jae sub test sar mov movsb jmp sub cmp mov xchg das and lret movsl sbb adc clc js sub lock test add pop sub or std mov xchg xchg mov lock rorb (bad) aam or imulb jbe cmp jae dec loope xor push add sbb icebp lock cmp mov icebp fnsave dec lea orl and push inc adc andl add dec mov rcll addr16 (bad) mov int3 add mov ja hlt push or mov fldenv (bad) mov jle xor adc test sub (bad) fisubr mov movsb or or adc xchg imul xchg cld inc dec mov xor dec mov fidiv (bad) loopne mov add adc push movsb cmp rolb mov sub pop in sbb dec jb out and in int3 mov popa sbbb fsubl loop dec mov clc rolb dec xchg jb ljmp lods xchg add cmpsl cmp dec dec clc xor push add pop pop js inc dec stos xchg and adc (bad) mov in rclb pushl cmp ret dec jl inc jbe xchg sub adc xchg push fsubs mov xchg out jecxz mov push cmp lahf aaa jecxz mov (bad) mov or adc add xlat pop mov dec (bad) mov mov scas lods notb idiv je rol out pop mov shr jno dec pusha movsb xor add sbbb int3 push jl xchg bnd push mov repz scas (bad) or daa aam cld jbe add popa adc mov mov cmp mov or inc push (bad) pop fsub or or fdivl test les mov sbb sbb sbb adc idivl mov mov or inc dec (bad) lock test (bad) testl mov je and in out add inc notl or mov cmp mov push sub (bad) mov push xchg idivl adc inc push adc inc cmp adc inc test lock sub mov dec pusha mul mov mov not (bad) pop push daa cmp or lret cs jo dec outsb lcall dec in lea stos test xor fiadd cmc xor js and loopne aad inc and outsb ret add cs mov pop xlat cld test pop scas fldl cld add in js mov nop dec aas bound sbb std and jg push and pop xchg loope or add dec movsb mov lods int3 pop mov addb cld sahf sarb jbe pusha call fsubrp cmp inc jmp sub je dec xor daa fmul lret and and or sub lahf fadd fdivrs loopne stos das into xchg push inc add sarb add sti leave pop loopne jae int3 jl clc repz test popa test sbbl sub gs pop adc imul enter testl mov pop xor pop out inc enter pop imul add cmpsb and or andl out xchg int3 push fptan scas fcoms loopne jne and (bad) out (bad) xor inc and fstps add add (bad) dec mov lret das dec pop pop mov je push push sub aam js adc ss leave adc test jb jno aaa das idiv imul mov ljmp (bad) xchg (bad) loope push loopne jg pushf pop popa sub dec movsl dec pusha xchg sbb mov mov lods dec loopne hlt fs jns sbb popf test or sbbb adc (bad) std loopne inc hlt pop adcb test push inc add pop insb clc dec dec inc enter popa jbe cltd cmp int3 (bad) and in inc jnp push movsl loop pop mov dec mov subb sub mov lock xor bound jb fdivrs div jns popa sub adc xor xchg xor cmpsl imul test pop xchg nop ljmp cltd or mov cld xchg add lret int3 sbb stc nop int call in (bad) pop pop inc or sbb mov cmp mov and pop jmp ret loope pop mov adc pusha and inc mov cmp (bad) mov movsb test cli inc adc cld or lret jno adcb add in push pop lods dec dec in jb lret dec imul adc test in loopne in stc push and sti add mov jl es in pushf fdivl aam inc cld sub sub ret std add pop sbb mov lcall es add jmp mov addr16 out clc notl pop insb cmpsb push hlt mov (bad) leave inc pusha and add jmp test sbb jno in shrb loopne mov in rcl jns cwtl fcompl jl add sbbl mov orl xor and push dec pusha orb aad repz jle add les pushf add and pop sahf pop dec or out (bad) pop cmp pop or ss aam movsl jo xchg jno imul je fs and fistp pushf cmp inc and inc enter xorb in lock lds pop loopne cmp lock pop test adc das adc icebp mov push das cmpsb movsb pop mov sub cwtl jns mov lock imul jae jg push inc movsb pop or not jle outsb xchg xchg aam cmp jno rolb andl test pop daa clc icebp rorb leave pop pusha dec sub hlt push adc mov or inc inc rol test test fs and add mov fsubr lret das fwait dec and jecxz in xor add in sub inc sbb loopne or fidivr cmp pushf enter ljmp adc pop jo sub adc sub call mov adc cwtl rorl pusha sub and gs mov mov dec dec lods andl xchg or inc nop xlat or add fmull bnd sbb cmp adc inc aad jb movsl loopne test or adc inc hlt (bad) jae push adc and xor ds jl es mov add cmp mov mov mov jl adc je outsb and add jb jl call push inc xchg arpl sub fcmovnbe loopne imul xorb (bad) in lahf jmp sbb mov add xchg jbe sub and shll inc inc cwtl jb cmp adc cmp xchg aaa sub leave cld inc dec sub push int3 mov pushf hlt mov pop hlt rclb add lds rclb or jle adc sub mov cs jp enter subl rorl mov dec mov jg xor js sbb xor sbb sarb xchg fistpl and xor lahf cmp or lret sub sbb pop fstl movsb (bad) fild pop add or push sub inc loopne je fstpl jmp addb std mov push mov lret and lods push adc or das fucom fnstenv and cmp jae test push andl cwtl push sub xor lret and dec mov mov fcompl mov jb es cmp push fdivrs js xchg (bad) mov lods test dec jp mov mov popa aad into out das shrl dec data16 pop loopne,pn add shrb sbb add je scas pusha cmp sub push test loopne xor (bad) out lods lret mov adc push push or dec dec repz cld pop mov and sub dec notl lds jno add call test adc int sub call jl push je out (bad) addb rcl dec adc add and add inc mov test dec int3 in add cwtl rcr add inc dec jbe jno,pn nop jns sbb aad add lret push and dec outsb enter add cmpsb hlt xor dec mov xchg xchg mov insb (bad) or jb and stos or pop mov jl out fwait pop or inc jle enter push adc and inc test in cmpsl xchg mov sbb xlat and aas cmp in sub mov lcall int3 jb cli pop js mov loopne sub push loope in dec test mov cltd push nop in push sbb dec xchg mov ss loope sbb (bad) pop cmp test mov inc add inc dec movsb adc flds insb inc pop and pop int hlt jbe jg sub pusha shlb adc cltd add lgs lods cmp insb lret mov fldcw pop or into cmp and aad xor mov add mov lret push cs fdivrs xor add fidiv (bad) negb adc lock js or pop xchg insl fcmove inc pop sub adc mov loop lret mov sarb push push sub (bad) jmp xor pusha (bad) decl mov daa push enter daa sbb and or aam das fxch andb pop outsl adc fwait in scas call pop bound (bad) jg push insb lds pop add push insb repnz mov adc push in or cmp rcrl mov lcall hlt mov imul subl pop loop jno and lahf test pop dec xor jmp sbb and movsb hlt jle jl nop jbe mov sub mov test push push mull imul add jo add push adc adc sbb lods notl inc sub leave nop aam repnz dec push mov loopne and sbb ficoml repz pusha movsl mov and mov mov and je add rolb loopne mov jnp xchg ds or test ja ficom fiaddl cmp mov add fisubrl dec push sub fxch adc jmp and xchg pop stos das and in and cmpsl adc pop mov pop fs ja sbb lock ljmp dec jbe orb pop aam push mov sub adc jle data16 add loope inc lds hlt and test jbe pushf pop or and std in xchg cwtl cwtl jbe sarl jb xor push test add not push lret into data16 push cmp repz xor dec add rcrb loope mov aas scas and push mov inc mov inc faddl add insb movsb cli hlt jo or stos mov xchg cmpsl mov lods sub test xchg fwait xor and sub test outsl mov hlt in pop fbld jb test test outsl push mov push and dec icebp pop test mov scas inc (bad) (bad) bound mov lret cmp lock or popa mov rolb enter insb decb mov ret lcall jl je adc mov lds insb mov add in dec sbb jbe lcall jo jo fidivr mov andl mov inc shlb xchg jge outsl shrb faddl in rcrb xchg sbb dec xchg fdivrl jo dec dec add sbb push add hlt ja pop cmp mov loop mov xchg ficomp add jb pop cld mov insb nop pop icebp sub xor push pop sbb mov and sub pusha adc sysret pusha int ja pusha out outsb mov adc push add sti out jno call icebp loopne notl pop popa dec adc dec inc and pop fsubrs adcl rcll sbb xchg mov test out mov adc nop add ja pop pop into pop adc lock (bad) or adc xor sub ljmp pop and sbb enter xor add jb aam pop sub push push xorb daa movb jbe sbb fldenv jge push inc mov arpl ljmp mov or cmp push mov mov (bad) rcrl daa mov add and fistp xchg mov in cmp jne adc mov leave push xor add jg sbb add loope xor pop mov loop dec mov loopne push add or jmp sub fisub hlt fisttpll mov arpl test mov and add enter or xor jmp push cmc jl int jp enter leave adc dec cmpsb fistp add add sub sbb cwtl roll xor pusha adc repnz popa clc inc loopne push xchg push xchg pop das mov sbb inc jb and imul sbb mov pusha call jae mov mov (bad) xchg or xor call in lret or mov iret mov pop nop fsubrs inc mov rorb xchg add test cmpl and int3 int3 xor movsb and sub repnz sub or pop cmpsl fadds andb add (bad) movsl test add sub dec loope (bad) jne cwtl cmc movsb jl lods push inc jbe addl ds lcall lods add (bad) ja imul pop sub jns cwtl clc push adc aam and cmpsb test push adc js dec clc les jl notb loop stc clc mov add cld ret adc divl xchg setae insb mov adc mov add rolb pop mov imul mov or fwait aam push out mov mov or outsl int3 jbe orl mov add lods sbb jb or lret dec imul adcb xchg inc mov pusha dec xchg mov clc divl sarb push in flds pop mov mov sub or leave lret je das pop cwtl sub sub nop clc or inc loopne ficompl jl jae mov xchg inc mov idivl lret sbb insb int3 or jbe fxtract add cwtl push mov push lret testb sbb into int3 insl xor dec xchg clc add outsl dec cld sub fdivs ret popa jl add cmp loope jne sub sbb pop in push popa push (bad) pop jbe xchg and nop cmpsb and into jecxz add pop das loopne push push sub adc adc lods pusha mov lods fldenv cmpsl pop pop add test pushl (bad) jae dec xchg mov xchg iret jmp add rcrl repnz jb sub and mov push dec out hlt cmp or loopne push mov inc adc dec xchg or jmp jns jmp lret insb icebp cmp xlat sub in rcrl sub xchg cmp test test mov sub add or repz imul push data16 and push mov addl dec and xchg imull dec call pop daa jno add cld sahf stos pusha popa rcrl ret ds repz enter mov and test fidiv push fucom jg fs lret ss loope lock add loopne dec or or rcrb test dec xchg pop fsubl int3 das adc cwtl mov les add lods icebp pop or sub and inc fdivrs mov test pop push sub jno lret clc cmpsb pop add test pop jbe out sbb pop jle in pusha jno xor ret sbb test popf and inc sub outsb mov adc lods mov mov int3 xlat push xor add jle stos iret hlt das test iret push or xchg cwtl mov inc aam in push cmp fs or pop cli data16 nop sub aas and adc cld jle stc cli dec (bad) gs inc add in cmpsl jge fmuls jmp add mov scas sbb or (bad) fcoml jne out jmp sub adc sti and mov pop xor clc xor xchg out xchg sbb ret lcall ss (bad) add push addl gs or mov rclb push imul addb mov ljmp pop push jmp mov pop add sbb into mov mov sub subb int3 xchg xchg xchg add jo imul outsb retw popa mov push insb gs jae sub arpl sbb jae data16 jb fs rep jmp iret mov mov imul sbb addr16 push push jns jne or xor jo jae outsb inc push push dec sub imul rcll push insb imul inc ss inc lret imul cmp movups push les test cmp cmp ficomp incb push or dec (bad) adc test sub add rorb cmp or dec mov test rcr and mov mov outsl or adc xor or adc std lret (bad) cs inc adc pop pop and cmp adc into cltd ja pmullw mov sub push add mov sbb rcrl cmp and rcll push add in add xor fcmovne or add and add jp loope mov cmpsb add fnstcw jnp push pop in movsb sbbl jmp push xor ret push pop sbb mov or pop mov cmp call push mov (bad) push push jmp inc jmp cmp inc pop sub mov push and insl jmp shlb outsb icebp cmp add mov xchg pop dec inc sub fisttpll add ss pop push add outsb aas sbb push and fstpt je push cld and cwtl push mov jbe push scas aam push cli dec test mov pop add push ja pop fdivrl out add fmull pop loopew add inc sub outsl xchg xor push in stos inc je push cmc mov xor pusha and pop pop and mov sbb jg fldenv cwtl push add mov jns pusha xchg cmp and pop hlt rorb lahf je imul (bad) add sub sti repnz sub pop pop rol mov es mov int xor pusha (bad) adc (bad) or lock mov push out xor subb aas stos and jmp mov inc out (bad) xor leave (bad) lods or push pop push iret push mov sbb call mov push sub xchg xchg iret pop push push jae and push xchg or sub dec jns xor rolb out lahf jg cs pop popf add sarb aaa or jle push add (bad) push xor dec xchg adc out ja rorl adc pop loopne add fchs adc dec push push jb add mov cmc jmp ret push ljmp jmp mov mov incb cmc pop pop push sub adcl jmp cli xor pop sub mov scas lret pop xorl std int lcall dec push jmp inc add das jmp fisubr add sbb or pop loope leave repz jmp add push insb mov hlt ja,pt jb test push xchg imul dec fstpl pop jmp jmp mov shll dec out test ret incb pop or push jmp mov aas jg shrb push mov cmpb mov jp mov push jmp xor xchg add xor and pop push xchg std push sbb orl push adc movsb jnp mov lock popw xchg icebp dec bound (bad) sub loop jbe pop inc jmp mov add or pop jmp (bad) out hlt mov cli jnp add roll and icebp jmp push inc and add out jle lret xor in out jb xchg add jno pop xchg mov popa dec sub push xchg or add pop push or jge sub fcmovb jns xor js adc adc or dec adcl push or shll divl imul inc or xchg xlat pushf dec mov pop mov test dec insl inc dec sti pushf sbb push hlt inc popf push sub dec stos test inc mul movsb inc and decb aas scas andb mov mov cs popl mov daa pop push dec or inc shll push adc stc and dec push scas and push (bad) cmc (bad) mov xor cmpb jb pop add add push sub fldl adc (bad) ljmp test inc xor in pop xor or push leave adc ja adc and and mov sti and loope scas pop pop jmp inc jmp jmp fistpll add in or sub jb jae lret add pop insb cld lock aas and outsl dec mov push mov popa insb mov mov outsl inc (bad) inc ret or imul xchg inc pop paddusw hlt jbe sub mov lea ja adc das mov ret mov pusha push dec adc ljmp je cli std and and ret insb fisub xor cwtl cmpsl dec pextrw movsb mov jnp pop push pop ret cmp pop ds bound dec or push inc mov or xchg dec int3 jge ret sbb adc sub mov adc mov lahf pusha xchg imul xchg add fcomip fldl es fnclex (bad) rorl (bad) shrb push pop out imul cmp fisub insl push sti and cmp push pop push pop mov or and push pusha std ror test (bad) pop push mov aas push cmp push xchg lcall inc push popf mov sbb inc andl push mov push mov pop fimull and sbb push imul mov (bad) inc outsl or cwtl xchg add mov jp jb add add (bad) dec or mov mov add mov jns jnp incl push sbbb sub addr16 adc push add push push test negl push push dec push repz mov adc jmp jg popf std or adc and mov mov loopne jmp loopne cli dec cmp fcomps jge aam mov iret sbb push pop jns mov pop jge lret cmpsl scas push sub dec inc sbb mov and mov icebp add mov aad push add clc lret rcrb sbb add or pop add push xor push mov rcrl add outsb push popf or and sub xchg pop xor dec scas push popf mov and xor (bad) and fadd loop dec (bad) aaa mov sbb xor aas add jno cli (bad) sti outsl xchg sarl xor lret add dec xorb jl out push cwtl aad aas add xchg sub push mov push mov clc mov sbb mov mov push pop dec pop pop add das cmp aam push hlt out mov cmp xchg rclb mov sbb dec fistp notl adc popf idivl test jns ja mov fcoml jl jmp xchg xchg add loopne mov add add cs xchg les sub ror jo dec mov add stos incb or pop pusha in jmp icebp sbb int push sub push add cwtl into xchg or push push add stc mov sbb pop jae push mov pop gs scas mov xor fist or (bad) and nop cmp fmul daa mov jnp push mov repnz pop notl daa push loope sbb outsb lahf int3 fwait mov sub cmpsl dec dec aam test mov shr incb mov (bad) or xor std push (bad) jns hlt sbb adc add mov loope das imulb xchg and add test or adc dec and and out aas inc lcall mov adc jge fcoml sbb outsl adc xchg fcoml push push lods xor push cmp add inc cld push cs movl lds adc sbb jmp daa or add and (bad) sarb insl js dec ffree inc or mov push sub lock icebp das std subl out pop add leave add push cmp dec push mov test jmp mov jg mov out cmpsb cmpsl or mov pop fiadd hlt push add test into pop icebp add shll inc and pushaw aad ja inc add addl ljmp mov outsl nop repz push adc push incb add divl mov xchg incl jmp push repnz xor (bad) jnp es add sub push mov add mov nop sahf add mov xlat jmp movsb dec dec imul xor sub mov add pop inc xchg mov cld jge or jmp or or push (bad) imul pusha or dec movl cli es adc fisubrl mov jmp mov jne nop or enter xor inc arpl stc xchg add push cmc adc aaa cmpl pop or cmp inc and fiaddl jle xlat sub push cmp xchg scas xchg push sbb outsb out sub fsub lock and jmp test cmc (bad) xor aas pop jbe xor scas es outsl outsb adc pop je cmp clc orb sahf cmp jb inc sub xchg add or cmc movsb mov adc sub cmp push push orl pop xchg mov jge nop sbb mov cli xor ret push sub mov sti (bad) xchg in popf add fadds or pop hlt add add out mov pop rcrl data16 mov scas imul repz ret or dec and adc sahf adc push and cs pop dec sub pop pop mov imul popa inc xchg lcall aam out mov jg les jmp push pop addr16 leave sub les mov or inc mov mov pop daa cwtl mov push adc sbb push pop mov push jmp or dec bound cmp pop xor repnz popf mov call rorb push pop bound imul pop push pop pop ret pop pop imul inc sub add xor jnp push xor adc (bad) cmp xchg aam sbb rol sbb out or push sub or xor and pop in cs cmp cmpsb fnop outsb xchg int3 mov or bound jmp push lahf adc dec lret arpl cmp adc mov das xchg pop int cs insl add test loope clc cmp shrb bound sahf leave call not xchg hlt xor or dec sahf addb cmp (bad) mov sub loop mov pop loopne mov lock std sbb call lods push push push cmp enter or pusha and or adc push mov (bad) dec sub mov xchg xchg fadds sbb dec jg rcrl jbe mov ljmp mov pushf adc xor dec stos daa pop andl or dec mov mov push lret jb xlat jmp xchg js imul cmp pop mov xchg add push jmp mov (bad) fisttp repz das add (bad) hlt xor ret xchg push add aad xor dec xor xor cmpl mov jne je jg imull pop ss data16 xchg aad and out cmc in mov ja push shrb xchg jl pop pop inc sub and loop cmc jbe pusha mov sub (bad) or loope (bad) xor sbb pop das stos sub mov in jmp pushf (bad) mov or mov lds pop test icebp xchg sub mov aam loopne pop ret pusha loope movsb mov fsubrp jecxz popf sbb add (bad) mov loopne cwtl pop sub imul mov out mov adc or and cltd mov stc arpl mov xor xchg jae pop and jmp dec add sbb fisttpll pushl mov jg ljmp push arpl push and ljmp push jmp ret xchg movl push std es cmp test cmpsb adc hlt and rcl and cmp or fistpll mov fcoms add fsub jmp push daa add sbb or mov orl push loop jae push adc mov daa out enter pop or bound and imul out pop orl mul (bad) repz (bad) xor cli push cli roll or xor pop cltd ljmp sti or out add shrb pop test jno mov jg repz mov inc xchg mov cmp push ljmp loopne jmp inc inc jmp and sub jmp insl add out popf adc cmp add jb test jo subb mov scas and adc out ds les es aas adc pop jmp out cmp xchg test sti les clc adc cmp dec je push push xor mov sub ljmp cltd inc push sub mov pop in add xchg loope aam imul push and (bad) aas loop js in or jno sub xlat imul add dec add jmp ja sub pop push and add stos clc jecxz lahf jno jmp add scas std sbb mov mov sub scas cmc sbb cmp jge lret pop cltd or inc add enter push mov and push dec leave cmc sti lret or int negl or pop fisttpll ss inc movsl cmp and cmp dec push mov enter fldcw add test xlat inc (bad) iret (bad) dec mov stos fdecstp add xchg xor movsl xchg jmp xchg fldl mov xor add ss add loope repnz push push sti dec jg xchg xor repnz ficomp and add sarl cmp in out dec xor in test mov outsl jge inc shr or aas mov jno adc sbb adcl icebp pop xor test mov test aad xchg jge sbb inc leave and fwait pop loope add xor dec pop aam scas stos ret cmp sti jmp cmp pop or dec inc push mov xchg test movsl idivl test pop loopne lds add (bad) test cmpl add add test incl movsb sub jl daa outsl add sahf cmp repnz scas jecxz xchg repnz test jne push fisubl pop negl out pop push test adc adc flds rcll or bound repnz idivl orb leave scas and aam and out pusha and je enter push out aas pop shrb push fisttp aaa inc neg push adc adc in jne cmp lock pop cs sbb sbb mov sub aaa add in pshufw in and jmp adc and (bad) incl cld scas loop add jmp bound add loope repnz aaa pop inc rcrb inc mov xchg xor cmpb or (bad) mov sub in pop push loopne out hlt mov pop push mov das add sub in xchg orl pop pop jb add sub mov mov xchg mov add jle out movsb cwtl sub ljmp jno xor inc or pop jb das inc jns mov pop or jmp push adc aaa xchg mov out adc xchg xchg xor cmp adc into and (bad) lret stos cmp dec imul mov pop push push dec in in ja add cmp jg xor add or clc rcl loopne xlat fs (bad) jp dec xor icebp repz lods pop pushf imul scas sub add mov jo mov jae ficoml xor stos cmpsl cmpl pop pop or fidivr and jge push push mov (bad) fwait sbb push and cld add sbb stc push sarb adc pop jo sbb fiaddl xchg repnz cmp xchg std mov fucomip or jne daa dec push out inc or and sahf lret jmp inc sar insl shlb shlb and out repnz sahf (bad) pop mov or loop or mov into sbb push incb enter inc pop movsb xchg stc sbb pop jmp jecxz loope rcrb pop cmpsl push in adc stos lea xor and push mov add fdivr ds and std mov push pop dec jmp ficomp ds sbb rep or add out mov outsb mov mov push test loop adcl add and push add sub enter es arpl scas and loope xchg or push out push cmpsl cli loop fcomp jmp push out imull jno gs mov add out dec movsb jp dec clc mov jbe ficoml cs cmp cmp (bad) scas pop adc jmp mov ljmp add fnsave sbb pop adc add pop aas push and xchg or cmpsb push call or inc notl push (bad) in mov push mov rcr lahf ljmp cmp cmp daa test or xor leave lret lahf or outsb inc sbb adc jno xchg ds les and out cmp jne mov xchg movsl mov and cmpl add (bad) mov fisttpll cltd out scas sub adc idivb add ljmp fs mov int out int and sub dec jae icebp imul pop inc jecxz add jg sub push loope lds inc and cmp xchg sbb xor and pop (bad) std dec ss out and addr16 pop mov push push adc movzbl adc hlt and mov or jmp jle cmp pop and flds xor divb push cmp sbb and jmp ljmp push mov sbbb aas dec jge pop lock leave or dec sub sub jmp pop aad push mov fs xchg dec data16 int3 sarl push mov (bad) lock movnti mov sbb xchg test push into push sub addr16 lds push pop pop and icebp arpl out xchg or push mov and and aaa pop mov adc sbb mov xor out dec nop cwtl add jp shr push mov cmpsb fldt ljmp add dec push lock xchg cmp ficompl fsts iret jne sbb jno cli jno sub rolb and aaa mov ja push pushf add jl (bad) sub movsl mov push shll cwtl xchg xchg cs pop int3 (bad) sbb mov cmc mov xchg sbbl dec cmpsl ret icebp dec nop (bad) sub pop add or das push xchg bound sub mov pop mul xor mov adc pop aad xor push add mov js orl pop inc and sub or test pop movsl (bad) cmc jecxz inc mov pop cmpsl enter pushf int push push xor jg mov pop and jmp inc into out dec push pop cld mov pop cwtl enter (bad) mov pop xor lods mov sbb inc lea sub dec pop mov mov cmp and (bad) mov add jnp jecxz or imul roll repz jns insb lea and loope (bad) cmpsb push inc jbe mov in mov stos mov (bad) jmp cmp xchg cmpsb inc xchg jle inc (bad) jb add dec pop pop dec jmp lock or pop iret daa push sbb jbe shr test and jno pop in dec rcrl sub pop cli into add mov dec inc test fisubr push lods loope sub call imulb jbe cmpsl adc popf push inc inc jbe mov imul dec pusha adc call ret in pop inc int je inc add sti mov mov xor ss pop push sbb ret and inc push ret fwait xor add cmc test or cmpl les (bad) sub adc push hlt dec test sbb and dec (bad) add mov push push inc in sbb sbb stc sub push ret lret clc jae mov popa mov in test test das jbe popa pop ret enter inc push inc add or movsb jmp decl push add sbb icebp pextrw mov add rorb cli xchg fldl mov addr16 add popa imull sub adc jne xchg and push ret xor pop leave repnz jne mov add add add mov (bad) adc repnz cmpsl cmp es adc jle add add lret loopne add dec xchg insl mov add xor test sub xor inc (bad) mov enter les mov es xlat int jmp push mov inc pop add fs push add jb and popa ljmp and add pop jnp popa mov inc add add mov xchg and jle sbb mov rcl or outsl add data16 or sbb or and fmull movsl cmp sbb adc repz dec and sub call mov lock push mov das lahf (bad) mov add enter fstpl push or pop xor mov jl mov add ret (bad) pop mov popa add push cld sub in mov call cld (bad) add push inc cmpsl mov push xor pop jp adc test xor andl enter or movsl sub das mov add adc cmpsl jne mov xor mov and inc jb fnclex mov (bad) loopne lea adc pop data16 add movsb (bad) rolb and pop jnp push push push pop jno mov (bad) imul sbb pop insb and pop jmp dec sbb rclb jae pop jb sub sub cmc in adc jmp xchg xor les repz pop pop xchg cmpps push add sub push xchg push mov mov pop jp arpl fdivr imul into jg push xor (bad) xor jecxz test sahf sbb cmp and into cmp mov lds inc push mov and mov add mov imul loope jp jae mov xlat xchg or repz mov dec out push inc incl push mov xchg push mov cmp neg sub cmp loopne inc cld test stos mov sahf sarl cli notb xchg aad ret loop add pop sub rorl jmp xor outsb pop add sub mov jnp clc dec dec loop dec add fstpl fdivr add insl dec sbb repz xor pop push inc out jmp shl push daa mov inc in int3 jmp pop mulb icebp mov xchg xchg out adc (bad) jmp lods or push in xor scas sbb push push jo or xlat adc xor pop xor xchg cmp xchg mov xor cli sahf popf add add insl sub idivb and push cwtl and and (bad) imul jp jne repnz mov push xchg jg push push lock mov orl push scas pop test and sti mov pop pushf stos mov mov sub push les das std fs jmp test imul add cli sub or int3 sarb shlb cmp pop sbb jle pop imul test out add mov inc xor xchg xor out pop call jge idiv jnp mov pop xchg ret sti je jno dec mov out xor addl cmp int add jno divb or pop inc bound pusha lock and fiadd cli or pop adc dec jmp xor and inc test mov and (bad) cmp mov or mov mov std lret or lret jg pop ret insb das cmp inc movswl jp jns xorb outsl popf fcompl mov xor scas jo int daa jmp pusha add mov add cwtl out mov cmp shrb mov mov add and add and jmp add cmp mov test xor sbb stc add pop daa clc or xchg lods sub cmpb sahf sub xchg aas pop xor cld mov mov sbb jecxz push dec mov lock insb inc daa or xchg push and or adc adc xlat adc in or icebp hlt mov xchg stos ficom push test push jmp xor mov and pop dec mov mov jnp inc loopne aad cmpsl xor (bad) or pop or xchg adc cmp and test adc cltd test push push adcb negl inc mov jne dec jmp imul cmpsl lcall in adcl sbb cld inc push (bad) loope out hlt adc scas mov pusha push int3 int rcll jmp adc and int xor mov mov xor dec xchg or sub aad int les cmp movsb repnz sub frstor dec adc inc adc sbb cmp les loope cwtl adc mov add (bad) jle fildl loopne cmpsl jns push dec mov lods mov ja mov cld aad lds lea jbe xchg movsb inc add in jo icebp add aam jp shrb mov and mov jo mov shr jg in loop xor mov add in pop std jmp stos xchg xchg clc mov mov and stos lods cmp cmp test mov xor out push loopne and outsl (bad) and push std sub push (bad) test push push push (bad) sbb mov fwait ret mov repz jae adc gs int add popa dec aas xlat cli ret pop dec mov jg add out aad dec addr16 pop or or xchg ret and daa pop (bad) popfw repnz xchg jne int pop mov out push invd lods sub inc mov cwtl inc push movl ljmp pop pop xor mov shl or (bad) adc leave push mov fs nop sti pop sbb add pop sahf outsb jg xor adc std inc or addr16 fucomp push xchg repnz fistp cmp xor inc jg out out ret outsb jb stc push lods adc fs inc push pop xor mov xchg jns popa enter aaa push xchg clc cmp or adc or and sub mov jnp stos sbb dec adcb mov add jmp xchg repz push cmp adc pop mov jae add cld (bad) pop pop sub in in jns add add add call dec mov test mov aas not loop test push mov lret push leave fsubrs jmp (bad) jge (bad) add push idivb pop sbb xchg pop jmp push sbb pusha (bad) dec push push aaa sub xchg push daa fisttp (bad) mov dec xchg sarb cs or or repnz in jno addl mov push sbb neg fldl xor leave (bad) cmpsl or or gs cltd pop mov hlt sub insb rcrb and xchg inc mov clc xchg adc fistp mov xor pusha popa xchg sub test outsl sti mov imul xor stc mov dec push loop jbe stos inc mov jg icebp pop mov sub add sbb es pusha std stos imul jp adc xchg and bound ret pop jge or or cli pop test enter fbstp dec and add ret cld jae bswap sub or aaa cmpsl add mov pop (bad) cld or in aam sbb and dec enter mov lods or xchg pop add mov mov pusha rol xchg rsqrtps sub xor adc sub cmpsl pop cmpsl repz cmp pop push aad push mov (bad) jns test sbb fisubrl nop xchg pop xor popf fiadd xchg add std neg add stos xor jge dec xlat ds call fwait divl or imul decb ret and mov (bad) mov loopne jg arpl out mov pop dec (bad) lea mov dec cmp shrl jmp int idivl adc xor int push cmp or arpl xor mov and jge ljmp push in mov pop (bad) mov add cmp add ja out sbb stos aas jle ret add jnp push cmp in xor xchg push mov jge ljmp push nop jo mov fdivrp inc out stc cmpsb int3 (bad) sub testl lahf add nop mov and xor fs push push loop mov cmpsb ret jg movsb arpl (bad) cmc rorl pop rcr lret (bad) scas gs and ret push push loop adc aaa cltd or xchg jo push add sbb add fwait cmp add leave or pusha mov (bad) test stos mov push mov (bad) mov and bound movsl or cli insb jnp sub test xor mov pop push xchg dec dec pop cmp mov add test jbe outsl inc xchg sbb cli adcb cld pop es test lds push nop (bad) lahf jl imul addr16 sub leave jbe mov add aad fimull and jns xlat popa lahf hlt push adc stos popa (bad) sbb xor jmp (bad) fisubr nop sbb call out or roll xlat popa cmpsb pop xor xor mov adc mov cli shrb (bad) xor add fsubl rclb mov fstl xchg add push or sub mov cmp (bad) or pop mov fdivl shlb xorb push daa in ror lds xor ds je inc in repz sbb xor rclb mov in loop add idivb add vpunpckldq data16 cwtl lock sbb mov aas or cmp ret loopne sbb xor testb dec cmp loop daa pop cmp jns lret xchg mov sub push in xor or outsb or unpckhps jmp mov adc mov gs add mov lock add inc je inc lods mov add xlat aas mov dec ret rorb call loopne mov push jmp cmc int3 fbld xlat lock fadd jno mov push pop mov xor dec subb dec mulb xchg (bad) jno in or xchg clc add mov push inc jg jb jno leave rcrl enter (bad) ds vunpckhps sub adc sbb out (bad) or lods fmul xchg push (bad) (bad) mov je xor add arpl cld out test jns sub out push not outsl mov mov sbb and push or xor rclb add fdivrl roll or scas in sbbb mov insb and xchg sbb shlb rclb or loope and xor out les pusha xchg cld and in jb sub inc push mov adc add call mov add idivb pop adc adc mov xor mov pop or cmp dec adc cmp insb jns lret aaa mov adc out stos ss pop sbb add pop loopne aas test mov out mov (bad) scas push push adc or and xchg sbb or and inc pop int mov jg xor mov mov add aaa bound or jg (bad) or mov in in sbb mov push sbb mov fiaddl stos bound add leave xchg subb xor mov xor mov or gs fsubl sbb or inc repz paddd cmp leave and (bad) mov popa adc sidtl ret inc in icebp lret fs mov popf in add push pop fist in loopne push add int out push dec clc and xchg mov adc sub fs jmp addl insb into pop dec xor dec inc stc and fsubl mov mov mov rcll xor pop sbb dec jno lock pop pushf cld js xor cmp lret xor inc sub pusha mov es in in sub sbb xchg mov lock mov test aas out push mov inc repz dec mov pop fistpll mov ret jo adc faddl pushf mov imul adc fcmovne jnp sub push add inc pop add xor lock ja dec adc sbb lea add test xchg ret add repz add (bad) jns aad mov or cvttps2pi pop bound cwtl sbb xor add inc out jmp in jle movsb nop popa test insl mov inc cmp push inc call (bad) aaa add outsb xor inc jle imul inc mov sti adc mov jecxz xchg inc cmp test fldl arpl add and test ljmp mov adc pop out sbb xrelease idivb mov or movsb mov es mov push xchg addr16 jbe (bad) enter inc test inc and mov andb ret or js sbb hlt add sbb lret fisttpl mov xor mov aam inc pusha data16 lea loop push inc (bad) hlt in aaa ret movsl lret push imul fsubrl jmp (bad) sbb nop mov add xor xor outsl in hlt and xor inc js pusha es (bad) leave pop mov jne into add xor jg push xor clc cwtl pop adc cmc sbb mov and loope arpl mov jne pop xor into pop sbb repnz in rorl call adc insl sub push jb arpl loopne (bad) scas add dec sbb test dec sbb xor lock sub jp nop push xor mov addr16 adc xchg pop stos mov (bad) jl aad in add int push sbb pop ljmp cmp pusha stos pop add jo inc daa in mov mov rorb fsubs cmp push push (bad) (bad) pushf cmpl adc mov clc mov inc insb sub jns neg lret (bad) (bad) adc (bad) (bad) into loop jne test xchg pop ja pop ret inc popa xchg lods sbb js pop mov inc xor push dec jbe neg pusha test hlt nop nop nop push call adc xchg ret inc jo stc pop popa dec sti jl data16 gs mov enter jbe test push sub sarl dec out add xchg nop and inc mov mov and loope xor jo mov call dec js cs add cmp bound fstpl jle ss or call sbb push or jnp jo mov push and add xchg mov sbb stos xor mov pop and hlt out lret xchg dec lods push jno cld dec std lcall aaa lret lods add lcall xchg and push jp clc jbe adc sbb xor in or pop push out xor mov xchg (bad) stc sub inc cs inc insb shlb pop adc push ss push adc or insb aas push scas popa insb and hlt mov add mov push add pop lahf pop test or mov cmp loop gs lds xchg mov jae sub mov inc std add inc adc loopne testl xchg push and push (bad) or push add hlt cmpsl jo int loop sub jg jmp lret in les push popf movsb push and sub cmpl push (bad) scas and adc cltd dec adc inc in dec pop imul add jb mov adc sub jae adcb or dec jo gs call cmp adc xor pop inc adc outsb dec dec repz xchg and mov push mov rcll sbb andb cltd pop enter mov cmp cmc jno scas hlt cmp mov jge dec jl pop mov xor movsl adc and arpl bound push aaa (bad) adc inc cmp and loopne outsl out icebp dec jb add or dec stc or in in cmp and dec ficoml dec hlt into ret gs shr inc xor jae sbb sar (bad) add xchg shrb add dec ret sbb inc inc adc cmp and andb mov add sub push sbb mov aas setle sub mov ljmp insb add rcl (bad) popf fs xor adc push hlt mov dec addb cld sbb int3 mov dec jae hlt jno addb and out fmulp jl pushf dec cmp push and sbb or adc xchg stos adc cmp inc sarl pop adc push mov adc cmp pusha inc adc in lock fldcw adc mov sub cmp mov jbe jns faddl xor adc rclb int3 xor mov test adcb adc cmp jmp and push add pusha xchg mov pusha pushl jp pop or pushf dec negb repnz and inc into js push fimull xchg add mov rolb std sbb cld (bad) call xor es mov test push push in and sbb je or or mov js dec rcrl in adc fcomps pop add pop mov or cmp popa call dec mov fcoml leave jno test pop fadds es bound cmp mov pop jp sbb mov cmp out lret sbb inc pop adc add fsubl in rorb in fldt rorl lcall mov xor add mov add sbb hlt sub shl (bad) cmp dec push xchg fsubl push jo and in add xor sub or cwtl hlt xchg push in add fmull nop mov stos mov es andl cmp inc enter pop lods add ret cmp (bad) cmpsl inc xor xor add test test cmp (bad) dec cmp lcall xor fcompl add in xchg stc xlat push dec int3 sub out imul jl add and xor gs out fsubrl push adc gs mov fmul punpckhbw mov sbb push mov popa xor cltd imul lahf inc add aam mov sub cmpsl fdivrl fwait imul sub es (bad) and pop xor push nop mov mov add inc int3 adc add ss add mov dec fiadd idivb mov fmull push sbb in cmp add or loopne shll xor test subb and (bad) icebp mov aam daa mov divb xor mov or sbb je mov or push lcall and ljmp mov int3 es xchg rorb fsubrl xor rcrb push cmpsb nop xchg push movsb inc add jb dec andb sar dec aam jp add mov sbb sbb xor jo adc inc hlt dec mov mov inc lret lock pop or push pop inc data16 cwtl mov insb or (bad) icebp cmpsl sbb mov out lcall add pop int3 adc jp push sub jo add sbb cmpb outsb insb nop pusha dec push int3 add sbb lret fmull dec lcall frstor in xchg mov xchg xor and loopne fdivl (bad) bound cwtl lock xor sbb hlt sbb adc nop push mov mov pusha mov xchg adc loopne adc add push imul jmp sub jle mov mov xchg data16 mov scas xor dec shlb xor fadds lret mov jo xlat add or hlt and mov cmp in aam sbb lock (bad) jl mov lods fs xchg inc pop add mov push insb cli enter xor bound (bad) mov sub hlt popl mov mov pop sbb ret fsubr lods xchg xchg and pop cld out nop or and in xor movsl test pusha ljmp xlat adc sub fild push inc sub pop faddl cmp call insb ljmp inc sti xchg cmp das shrl and fsubrs aam pop dec imulb cmpsb cli bound rolb adc or mov pop jp (bad) lcall jo jns cld mov flds test mov out out lcall adc jo push fidivr pushf and imul xor in ficomp mov fidivl loop pusha es in add mov cmp or pop sbb xor cld arpl test rclb cltd inc and sub dec pop ret dec or or pop and cmp enter fcoms movl xor dec insb aam addr16 mov ss mov mov pop in sahf and cmpsl lods clc or xchg stc cmp rorb movsl flds xor imul pop adc (bad) je lock sbb es mov jbe xchg ds jb ljmp and add and add or outsb jae add push mov rcrb or (bad) pop in add jb mov push ljmp push add test or add aam jne sub aaa mov dec test add loop negb mov adcl repz repz pop xor int dec add ret int3 jl add jo test in add repz xor rol jecxz inc sub push push dec loop mov mov movsl mov jbe ret push adc into xor adc enter lods dec roll cmp xor dec ficoml add or xchg sahf push xor pop in xchg insl loope xor sub mov pop sub xor xor xchg inc leave add jae ljmp push sti cmp (bad) leave rorb inc js pop out mov call cmp insb insl xor pusha cmp rcrb pusha dec clc push add jle inc xor lea or push cmp test pop push mov out jmp adc bound sub mov ja (bad) or dec (bad) in sub sbb and outsb pop push and push movsb les adc hlt adc lock push xor xchg mov and je clc int3 fsubl or lea inc sbb dec cmpsb or inc lds movsl or fildll sub jmp imul insb push cwtl push push sarl push pop mov stos sbb xor std test lret int3 dec or adc imul mov pop mov enter clc pop sub jb xorb push mov cmp gs cmpb cmpsl dec nop jge (bad) add stos lret dec xor fdivs sbb cmp adc adc push aad jmp test inc leave sbb pusha xor adc dec mov popa dec test cli in push and repz sti lea movsb mov xchg repz das jp sbb and js lds addr16 sbb icebp push mov mov and fmull fist cmp and xchg js rclb or nop movsb sub mov mov dec mov cmp xor dec xor loop adc dec clc mov or test xchg stos inc adc inc push test jno xlat add imul dec push mov and inc pop lret cmpb lret movsw sbb or jmp xor dec dec fxch cmp clc (bad) cmp sub pop pop dec cmp pop lcall add push xor das clc outsl mov fstps cwtl bound fsubrl push arpl jo push pop mov pop in jmp loop or shr test hlt adc test lret or addb dec push lock fs dec sbb out fimull xchg jle dec mov xor inc adc fcoms add adc in jl mov inc lock cwtl jo push stc push adc enter movsl add inc inc xor push mov movsl hlt adc jecxz add jns xchg sub je (bad) fadds dec mov or push stos hlt jbe ret test mov movsb dec pop add push dec in mov xor jle jnp inc ret nop in sti xchg faddl imul or fsubrl insb incb pop mov test rcrl and xor test cwtl pop push mov and and sbb scas fs or fs sub mov dec adc xlat int jl and push adc xchg daa cld test js sub sub jo mov loope (bad) negb test push sub cs test push insb repnz mov inc lcall sub mov fwait outsb cmp and fisubr hlt pop xor (bad) mov or dec lods dec cmp cwtl inc push adc lock push xor pusha test hlt adcb ja aas fisttpll cmp adc or loopne add add push jecxz sbb sbb or cmpsl and xor or cwtl js imul push test adc pusha jb add movsb mov es test mov fnsave jge in aad (bad) sbb (bad) or test mov add cwtl outsb inc int3 adc (bad) notl and cltd xor push aaa js push popa lods mov movsl dec and inc add jle add test icebp fs loopne cmp jae or loopne es pushf clc push ret pop pusha rcrb addr16 mov fbld sbb (bad) jo,pt cltd mov or cmp mov inc lods lds (bad) jns add (bad) iret sub (bad) sub mov xchg xchg out add mov orb lods jns pop (bad) mov popa dec sub xchg repz cmpsl aas pop fidivl js or sbb add insb aaa data16 mov imul scas xor out mov pop jb mov or xor les ljmp mov mov xor fcmovbe js mov push pop dec rcrl sarb popa es mov pop add xchg mov dec icebp dec cs insb dec stc dec mov mov fdivrp fcoms repz sbb lods arpl mov or dec (bad) mov jg test add insb dec lret test add nop xchg repz mov sbb pop mov or into out test adc and std xor insl je es dec fmuls inc je stos shrb cmp xchg int3 aam mov cmpsb call fstps dec ds jle fsubs subb cmp pop aas das ret out es cmp outsl cmp adc gs xchg add loopne in call lcall xor aam into in test mov (bad) xor add add ds clc or pop lret add cmp jge add xchg jb dec fistp xchg fadds fs rorl cwtl bound stos and adc movsb loopne cltd rcr or cmpsb fs jne es pushf adc xor fdivr orl inc mov jnp add hlt xchg cmp in (bad) sbb inc sbb outsb into push in and pushf dec add in xor iret xor push call test enter les imul push pop leave dec add jo insb pusha es nop and dec sub aad shl nop add insb mov mov xor xor lret (bad) sub imul outsb pop ljmp fdivr fstpt add pop mov and xor mov add cmc pop aam adc sbbl dec mov pushf add jae and xor cmp add aaa jae mov sbb dec jmp dec or sub sarl jmp jp and jle or notl push std xchg mov data16 decl xor out pop adc mov mov jnp xor aas adc sbb jne add mov and insb rcrl aaa inc (bad) xchg nop add or jno mov dec push and add loope icebp mov mov clc aas adc loop pop dec jl sbb enter shll push hlt cmpsb sarb xchg aaa or fchs pop push push dec xchg faddl cs das sbbb or fimul xor lcall or lock add popa outsl arpl sbb add add call mov mov loop out mov ss dec (bad) jno movsb fwait cmp icebp add nop andl sbb enter pop xor mov mov inc sub daa stos push loope (bad) or pop scas into sub xor push call les jge or aaa lods lret pop sbb or dec add jns test inc add or sub or dec mov mov (bad) sub test js rcll lret cmpsb sub mov dec movsl xor and sbb jl arpl jno cmp subb mov xor dec shrb mov mov or mov (bad) insl aam jb lods sbb mov outsl pushf loopne or pop and nop push jne inc jecxz adc in cwtl das imul adc inc clc dec push cmp mov imul addr16 mov xor xor mov mov sbb pop dec les cmp pop rcl jno and and cmp mov rorb mov mov (bad) xor hlt mov mov sbb fs mov movsb hlt inc push leave or mov cltd sbb cmc sbb mov adc sub insb push add or mov mov int3 enter nop leave jl or mov or pop gs push cltd imul fcompl jnp add out pushf mov pop add add rorl cmp js aam push pop ds adc xchg and xchg inc jno nop jmp mov push pop cmp and imul add dec fcompl sarl fmull push sbb cmp push dec stc test cmpsb aam sbb xchg lret xor push mov sub pop sub pop xchg push add out adc int3 or in pop clc push cwtl fidiv aam mov arpl and sub mov dec xchg cwtl imul xor xor je inc aam and enter cld fs lds add mov sub push fistl pop mov fcoms pop add xor add mov adc lcall push xor fsubl scas jae or mov adc jg js fs adc shrb call sub add dec fidivrl inc js insb add nop mov xor add xchg loopne lea test shlb mov lods xlat enter (bad) mov sbb inc jnp add inc xorb xor add cmpsb lods hlt add mov hlt or shll sti int3 push jo dec fsubrs push popf fwait pusha shr testl test cmp fsubl pop xor dec xchg xchg testb dec rclb inc and imul pusha jb mov xchg aaa fmull ds inc mov fwait insl cmp mov jno cmp call cmp xchg xor inc idivl or leave add inc cmp and cmp cmp add mov cwtl cld pop and (bad) scas ds pop es in add mov popf imul shll or push and popa xchg popa mov fs leave (bad) fsubrl cld push xchg lods into lock test pop add shrl adc packsswb js dec icebp and outsl or ja adc jb or jns xchg xchg adc (bad) cmp jnp mov (bad) mov faddl push jo push aaa loop outsb mov imul inc and out aaa mov and loop in inc in inc mov add jno xchg adc cmp xor jo in and push insb lock mov call mov cmp stos pusha fwait in imul jbe aas dec test movsb addr16 and stc adc lahf sbb sbb sahf add lcall push add add inc fistpll lret nop rcrl xor sbb test pop rorb into add repz int3 cmp imul add jmp nop mov sub sbb xchg push mov into call dec cwtl (bad) xor adc mov cltd mov dec and fcoml cmp sbb mov or cld and hlt dec cmp test frstor ljmp pusha mov mov add dec adcb cvttps2pi cmp (bad) adc arpl add mov cmc adc popl xchg inc nop and sub xor jns inc repz dec inc add test inc xor sub in fmuls mov xor jp nop push fisubrl inc xchg sub cmp pusha cmp or mov clc cmpsl cmp sbb into and mov sub jo jb adc or xor les fild int nop mov fdiv dec adc and (bad) les repnz mov jno xor xor jbe shrl pop and cmp fadds pusha add pop mov nop push sub xor mov ret mov lea mov pop inc lret jge mov fsubrl mov mov gs add es xchg fsubrs fcoml cs nop mov lods xor sub cmpsw mov call push and aam push les xchg mov mov xor pop or (bad) aaa adc cmp add xchg xor dec (bad) push mov cs repz dec xor es xchg xor mov popf sbb enter and pop movsb cmp add hlt and in movb add xchg sahf call mov (bad) scas (bad) ret scas clc aam xchg aad push xchg sbb adc repz inc or dec xchg arpl add insb jb mov jmp bound inc in add fcmove hlt (bad) xor clc popf (bad) cmp into xor out pop scas and mov jle lds sub lods xor lret mov lret lods clc add cmpsl daa inc ret stc ljmp hlt arpl mov aam xor ror push sarb bound les xor je mov pop inc std push inc and jecxz out (bad) push add or loopne mov add mov mov stos repz mov orl jo js in add xchg mov mov std mov (bad) popf jg dec cmp add cld sub mov mov sbb ret clc inc mov dec xor push in push loop call dec mov mov js std rolb or cmp jo jecxz popf inc sbb insl add test or dec subl ror sbb dec push imulb jo and push sbbb (bad) fildl lods bound out sbb jl jecxz pop inc ja jbe mov andb repnz cmp out cmpl popl int3 push test xchg ss ljmp addb out cmc add ljmp js pop movsl loopne jmp dec enter fist dec mov pop cmp and dec addb mov pop mov mov loope mov les into mov addr16 or rcl fdiv and inc mov pusha cld clc wrmsr pop lcall mov lahf xchg jo adc xor pop lret pop and sbb sub xchg lahf cwtl in in aas sub pop clc loopne jno or loopne into mov (bad) dec inc mov sbb mov xor adc and cmp mov push xor int ja jecxz stc dec xchg and sbb adc lods cmp sub pop (bad) mov xchg icebp mov imul inc adcb xbegin cwtl les mov jle cmpsl sub xor mov lea (bad) fsubrs fs mov mov xor mov nop shll and add sub dec and insl jecxz fcomip mov clc add xor dec outsl test mov adcb cmp lock cmpb pop jl lock repnz adc mov fbstp add cmp sub add mov int sub lahf stos and xchg mov outsl femms dec subb add popa jge bound rcr push sarb call repz sarb adc loopne js nop mov mov dec adc or sub cmp dec mov lcall push push add pop mov mov inc mov (bad) sbb mov fs sub inc adc or push lock xor dec sub fist ja call add js mov scas cmp push sbbb mov je xor outsb jle ret pop adc adc sub es cmpsl mov in add loope and and lock sub insb pop push sub sbb sub jo sbb mov add std mov xchg or icebp mov fdivrl sub xlat pop cmpsl clc dec movsb aad ret cli jb sbb push jbe or mov xor cmpsl cs dec pusha in add sbb (bad) xor roll andl dec scas pusha nop arpl dec dec sbb push int3 popf lds or negl es cmpsl or in pop ja roll mov push in sbb mov arpl les pop fisttpll jmp aam imul or xor or and inc sbb mov mov lock jo mov push push cwtl out xor xor xchg dec push fsubrs cmp daa lret hlt jp xor inc imul repz mov fcompl nop pop xor sar fmuls xor and push shlb push test mov pop cmp mov push in cmp rclb nop xor cmp pop xchg xor mov pop xor loop ficompl add mov cmp insl jecxz ja and dec push (bad) sbb clc inc aas push sub cmp movsl pop movsb (bad) xor call ljmp ss sbb xchg sbb sub loop iret sub mov mov sub push outsl test pop insl cwtl enter or daa inc sbb les rcl outsl ljmp les sbb adc jbe inc ljmp loope lcall pushf add addb jle fdivrl pushf fs stos inc inc cmc loopne repz outsb sub lds sbb loop pop mov into sub or sbb js add push loopne (bad) mov pop sahf xchg hlt scas pop xor adc stos sbb dec insb int sub call dec cmp xchg sbbb or sub (bad) lods mov sbb or pop in cmpsb cld and or mov mov adc cld mov stos dec and push sbb cmp mov test cmp (bad) lock movsb add rcll lret (bad) mov jb add (bad) mov es add add push pusha jl es imul fmull subb insl adc shrb lret loop dec loopne or inc rcrb lods fwait cmp loopne ds (bad) xor fsubl adc loopne insb jecxz dec test es in cmp push and lea adc mov pop popf add cmp sbb cmp mov add imul dec or xchg outsl cmp lret mov push (bad) hlt fadds pop ret mov outsb js or sub xor xor lock andb inc sbb aad push add pop in cmovge or movsb dec pop xlat jno pusha imul insl and imul cmp xor jb aam add ds xchg pop mov test add add shr add fisttpll lock ds lret mov add or sub or hlt add mov popf adc ret xchg mov mov jb cmpb mov cwtl mov daa xor inc xchg test fnstenv mov sbb addr16 cld pushf mov inc or div aas popa or lock daa rorb inc push cmpl test jo sub sub lea adc jbe pop lds xor nop pop (bad) nop jo add xor cmp lret rcrl add std scas and (bad) in add and mov repnz lods dec xor add mov ds lret lods jl dec mov pushf mov rolb sbbb str imul cmc push mov call mov in mov sbb adc call (bad) add jle dec aad xchg and mov sbbb mov jo xor hlt inc cs loope push fsubrs push cmp roll loope aas pusha push decb dec hlt xor lahf out add mov adc xchg mov add xor dec imul addr16 mov inc adc sbb jg shrl dec add out sbb arpl iret movsl sbb insl cmp ljmp jne bswap xchg dec nop (bad) adc and pop outsb and jae add push (bad) out add insl mov pop adc push add (bad) faddl lcall out sbb fldt repz nop xor and mov push gs aaa adc divb lahf (bad) loopne in call xor mov push sahf sbb mov (bad) int3 dec clc ret cmp jl bound push pop inc in (bad) push mov cmp movsl std sbb icebp lock push mov sub adc and test int3 daa cli cmp outsl push sbb pop sti or sbbl cmp movsl pushf orb cmp mov shlb and xchg mov jle sbb push push mov cmp mov pop add test mov aad ror add xor fmul sbb (bad) rclb pop stos mov mov mov push ljmp add pusha dec or cmpl mov cmc test (bad) bound sub or jne lock inc roll push nop in fnstenv pusha sub scas aas in pop stos and jecxz xchg cltd add bound and xchg and clc xchg into ss sub test sub add cmp int xchg arpl pop inc rcrb sbb pop aas cmpsb dec popa push xchg es jns sbb pusha or mov and sbb or lds sub test mov fldenv mov ja and les or add rcl mov inc inc xor daa push lret jno or inc or jle sarb add (bad) stos sbb or test xchg subl xor adc pop lods popa test pop sub flds stos cmp sub jbe jae mov or mov mov ret xor call ret scas addb mov sub xchg mov popf or pop std inc adc pop mov mov push xor and loopne mov xor sbb les and or xor and in addr16 jo sub sbb rcrl bound mov adcl xchg in pop mov add add and lock adc mov movsb rcr mov sbb popa sbb dec dec push add inc cmpsb jp xchg cmp sarb (bad) dec (bad) mov sub je jb scas xchg sub adc xchg pop adc (bad) ficom int3 mov xor mov incb (bad) mov or sbb repnz dec popa fisubr lcall pop mov aam add sbbl pop fwait data16 orb mov aas inc lock push scas pcmpgtw imul adc dec push add test popa and adc repz push enter pop stc movb popf jns (bad) js xor ljmp nop aam jp mov pop mov addr16 repz mov xchg sbb pop enter jle sub lock add mov and add jne or push mov inc push and jns fnop rcrb shl ljmp (bad) add notl popa adc (bad) xor mov rol sar push aas lock and push mov cmp mov xchg dec push cmp or or mov fisubl adc test mov pusha cmp es sar lea and nop jp or lock mov orb xchg xor jne rclb pop pop xor and pop aaa addr16 int3 bnd popa inc movsl sbb push adc pop push divl xor add sub pop or jmp sub and push pop shll cmpsb aam out and add jp inc lret or cmp iret jmp es add mov sbb adc xor sub dec mov pop lock mov addr16 inc mov cld fcmovnu push add push fldz push lods jo add loope and inc jae cltd jl sti push enter sbb dec adc mov xor (bad) jle loop jp imul les add pop jg sbbl jno sarl push jg adc mov dec add sar icebp aaa dec mov call rolb push movsl orb and xchg push sbb pushf jne aam les mov jbe sbb sub xor cmp imul sbb jns xchg sbb (bad) jl push cmp aam das inc and pop mov lret push add inc stmxcsr loope jmp popf push add lret ret nop cld pop xor jmp sahf jnp inc add imul pop int3 das dec data16 lods in fmull shrb cld mov mov push xchg or and jecxz js adc adc dec addr16 je mov (bad) loopne clc enter nop inc sbb mov cmp andb out sbb mov mov clc and cmp adcb es and mov sub mov and je and je iret xchg xor mov xor jo sub (bad) inc dec add add cmpsl imul arpl xor inc nop in push pop dec add add leave ja or pop add stos pop fimul cmp push leave lcall cs mov lods add lds fmuls scas pop add jle adc mull pusha fs frstor jg mov lock sub cwtl negb sbbb or jnp hlt xor cmp jne and dec cmp orb scas mov and into popf mov cmp cmpsl cmpsb xlat add inc add testl adc lret mov loopne sub push xchg add xor ret inc or jecxz pop fs imul ja in fadds divb scas inc fs js popf xor (bad) (bad) nop movl mov int3 push pop push add pop cmp mov fiadd add push mov aam sub addb dec or inc shll call jo rcrl aaa sti push cmp sub es inc stos pop aaa add pop (bad) bound cld and cli push rol mov sub pop test mov addr16 sbb push jnp in xor rcrl fisttpl test ret out fcoms (bad) into out ret cmpl add mov inc adc dec jmp xchg pusha adc sub pop mov pusha into inc test mov adc sub test and fsubs and dec or mov mov or sbb clc adc push push mov push jg iret bound push ficompl and add cmpsb pop xchg pop insb les stos cld cmpsl (bad) mov jno jge mov jae inc call push add or std sub xchg push adc xchg inc xor mov mov jp es xchg mov movsb dec inc ja mov push sub movsl (bad) int3 daa pop add add mov jo ret stc pusha (bad) loopne negb jae xchg or aas orb out mov inc int out xor dec cmp adc ret jb dec cli inc lods add insb and pop pop sbbb push stos mov rolb movsl into jns movsb fsub sub mov add int pusha int3 xchg aaa shrb mov pop pusha jb inc ret add xchg mov jb mov sub jg adc mov in adc out push dec enter int3 xchg dec daa adc sub xchg pop xchg push stc outsb mov fmuls cwtl (bad) clc icebp mov sbb popa aaa dec jge outsl add xchg mov push cltd lods lods jl mov xor push or lea cs lods lods jp inc test lods aas (bad) or or mov pop ss add sbb in add lock add cmc aam inc mov enter das and sub pop xor sub clc int3 adc or (bad) xlat and dec jg in fsubrs loopne addr16 rorl add dec data16 cli add std (bad) xor in and mov cmp add lods sbb jne sbb sub test inc cs mov and cltd adc insb or stc cmp sub push xchg test adc xor and test imul inc mov sbb pusha mov js sahf mov mov mov xchg sub or push xchg mov jl call push cs pop inc jp rorb and xor push inc mov pushf xchg in cmp ret mov std mov clc stc out out adc push mov pop leave mov (bad) push inc cmp popa in pop xchg mov and dec add (bad) xchg xor ret mov sahf sub test sbb and stc das daa dec inc icebp add inc xor jo into and jmp (bad) sub scas push mov cmp xlat aam enter negb int3 js push lea mov test insl (bad) dec ficomp jns xor cld insb dec pop xlat push je outsb jge or inc pop add nop cld sub push inc jno cmp mov ja sar pusha adcl mov xor adc add sbb in dec push out cld push or lahf ror insl inc nop mov push imul mov sbb addr16 pop sub cmc mov push jmp cmp cmp adc outsl adc (bad) addr16 outsl xchg in fs lahf out sub sbb push popf adc xchg test add (bad) jbe jns mov pusha cltd mov dec jo pop in insb out xchg insb sub and jl xchg mov xor cmp push rclb mov or mov xor and add icebp loopne in fiadd ljmp xchg repz push xchg xchg call je or cmp icebp fsubrl aam cmp mov xchg je test add fidivl mov and lahf int3 in and push movsb stc les fcompl cmp mov xchg popf cmp in add pushf sbb cmp iret outsb xchg ret and in loop arpl pop sbb mov and sbb inc popf (bad) dec cmpsl xor jl lcall cmp xor nop rolb or data16 add adc test xor mov push stos jecxz pop pushf xor jl xchg test jecxz or fsubr xor mov and and jno fcmovnb fnstenv (bad) sub lock (bad) stos xor mov cmp inc pusha pusha aad mov insb xchg inc cmp daa xor pusha fsub cltd xchg inc test jecxz pushf mov jle call clc addr16 out (bad) cwtl add lret stos lods mov out rol inc gs imul popf cmp push stc pop ret fsubl jno (bad) inc cli pop mov inc mov push pushf outsb xor or or lret add mov loope pop arpl repnz inc sbb into xchg sub enter xchg add fs les mov lea clc add jns dec push sbb aam (bad) push push push lret mov rorl xchg lret push push add sarb (bad) int3 cmp adc mov test jecxz dec mov out inc mov inc inc inc sbb dec dec hlt xchg mov xchg rcl test ret xor enter pop xchg (bad) dec (bad) push jbe imul movsb popf pop test pop mov dec cmp xchg std jo cli xor stos push lock repz js (bad) and pop (bad) movsb jne les stos (bad) pop pop (bad) lock push or and xor aaa in xchg nop dec clc inc pop xor inc les inc fsubl add jno in aaa scas ds inc sub test adc shll sbb icebp data16 out lret movsb (bad) testl jmp jns aad call inc test call lods xor add xor pop iret jns daa bnd (bad) add cmp or mov lea int3 xor mov stos (bad) js test inc ret adc sbbb in rolb addr16 outsl cmp jge xchg inc hlt sub xor pop in cld adc jnp,pn mov popa je or add in jns popa out fmul and aam sbb push nop mov mov popf out mov popa dec mov gs xor adc ss nop into hlt add push xor popf insl and sbb je xor ljmp roll xor imul dec cwtl fsubrl lock xor addl mov loopne imul test jl add stos mov add imul or mov ficompl pop or jge mov inc sbb daa and push pop cmp out cs adc cmp enter or cld sub inc xor pop xchg icebp pop jmp mov mov ljmp enter or movsb es add xchg dec inc add fsubs push dec cmp xchg jns add mov cmpl test fs addl push fwait xor lret int mov mov push (bad) jnp roll insb mov xchg bnd add gs push scas jl ror out std xor pop push mov inc repz es in jns cmpl sbb mov push cwtl fcoml mov icebp je int jle mov inc add dec test cmp ljmp inc push lods in inc pop add test test fdivr cmp lds test mov insb (bad) clc add ret or or adc dec loope adc jno adc mov xchg xchg int3 sub lods outsb or mov inc pop aaa arpl mov sub or mov and fnstenv in cmp mov enter mov pmuludq aaa fstpl in sahf mov aad rcrb aam or dec mov dec shll sahf hlt dec mov push hlt add cmp (bad) sub sbb hlt sub xor (bad) nop xchg pop dec es inc (bad) fs lret cmp cmp loop stos bound pushf push loop pushf and jp cmp xchg cmp cmp ss lds lods aad sbb add in xchg ja fbstp call pushf mov mov test insb (bad) add cmp outsb in idiv jmp xorb mov inc mov add aaa pusha jb lods mov loopne fisubl and dec cli fnop xchg or cmc add arpl lock mov out cltd pushf adc xor out pop in xchg add xorl repz ret test gs sub in popf loopne imul mov call add outsl lahf lea mov inc fmul sbb adc sbb je lea (bad) mov dec xlat xchg xor in aas movl pop mov ficompl test mov sbb ja cmp out in add cmp jb xchg add shrb jmp clc jnp add xchg es in in ds gs shrb xchg in loopne sbb inc mov and jmp loopne sbb add bound hlt add and mov cmp mov scas push add jmp sbb inc jno je dec jecxz xor sub shl lock dec popa cmp inc and inc xchg ja mov in enter sub (bad) push mov ret faddl mov leave divb nop cmp lock push pusha and jg dec xor cmp jl daa fsubrp push mov mov fmul lock mov dec or je faddl lahf gs dec pushf or pusha shrl (bad) mov inc jo adc xchg orl or hlt push pusha dec jo es mov cmp mov rorb or xchg fdivl xor sub dec fdivp cmp les loop jbe sbb test clc js outsl add push fimull sar or cmp mov cmp out in fildl shrl arpl xor sub sbb push jle stos pop fsub hlt xchg ret es jbe test popl sub test or xor rcrl cmp in inc sti out sub sbb mov lcall jno push add adc test add adc mov fs js push add test arpl rorl mov fsubl mov test jo xchg sbb rcrb ja push inc adc dec mov pushf mov mov mov call (bad) pusha jp nop cld inc popa mov sub xor mov aad and push cmp cwtl sarl fsub enter test (bad) xor cmp roll arpl pop mov in mov sub add enter xchg mov addr16 dec (bad) mov dec push ret adc xor add sbb test jns movsl adc push clc xor imul (bad) ja push fwait xchg hlt jo es push add outsb rcrb dec mov fucom int3 adc inc sub (bad) sub and mov mov cltd xchg adc aam and and and mov sbb add add xchg mov sahf fs xor xchg add mov cmp fisttpll push adc or orb add nop mov enter shlb inc jo pop and das and and xor enter lahf scas push jge inc stc dec push xor jl dec and andb dec das sub inc push aad movsl inc xor lock stc hlt xchg mov and xchg add inc popf xchg (bad) inc mov and jecxz in add in scas cs add orb stos cmp sbb push mov jle add (bad) daa ja push push (bad) and push add cmpsl test repnz sub push je lock outsb clc dec mov xchg sahf jo lods movsb add and in mov add xchg lret rcrl and mov or or cmpsl fcmovnu aaa sub popf adc test sbb lods cmp inc jno xchg stc pusha add sbb outsb inc jg fiadd testl push pop (bad) out rclb popf aam imul xchg stc enter sarb data16 stc sbb pop push mov pushf mov outsb push js push scas xchg movsl in cmp xchg sbb pop lods leave add and test adc loopne hlt es dec in add pop fisubrl pushf or daa stos enter xchg push ds mov or jl mov xchg cmp sub xor imul fmuls sar loop xor (bad) ss add fstps in push adcb popa xor inc je sbb add push cs mov pop xor enter xchg fadds mov lock push mov mov ljmp inc aam xchg stc adc inc mov add test adc enter mov call adc inc in and xchg xchg add enter add pop fsubrs ret push adc and int3 cld sti (bad) je retw cmp mov mov into roll lea add and ret push and cltd and adc push push mov ljmp (bad) mov inc call sub (bad) push xor lcall inc inc imul and movsb inc iret or test sub into jb jmp inc cld dec pusha dec xor jnp dec xor lret std in jae dec add mov mov or add pop mov mov xchg rorb pop repnz ss hlt sub mov loopne lldt and movsl fdivrs sub (bad) (bad) ud1 xchg cld push cld cld orb inc jle cmpsl xor add xlat shll fcmovu add xchg adc xchg jmp cmp pop sbb imul cmpsl xchg add mov inc sti subb sub sub add push and sub xor pop fs mov ret stc pushf pop fcoms cltd add rcl (bad) loopne test adc dec xor or adc outsl clc add into cmp inc ret mov mov jle jmp insb repnz add mov push enter cs xchg lds cmp les rclb addr16 and pop test (bad) aam inc sbb cwtl xchg js stc adc fmuls cmp mov mov adc (bad) mov mov dec xor outsl mov std arpl cltd js fiaddl jp loope and nop or dec jecxz inc insb lahf pop addr16 push das mov or push xor subb test push aaa outsl xor cs pop inc fs dec mov les push xchg jge pop ja repnz push and test add push adc ljmp and shrb mov arpl dec push mov cmp push xchg sahf adc sbb push shrb pop outsb pushf sarb mov push and mov and push pusha adc dec stos outsl pusha sub dec pop add mov cld add cmp dec mov add xor divb or cwtl cmpsb xchg js push add sub bound sbb and pop push push cmp clc loope cmpb dec mov sub gs and add jle or enter pop cmc mov hlt cld dec lcall add push mov aam test dec nop dec les sbb ds hlt add jbe in or (bad) (bad) cmc fsubrl push adc movsl and dec sub lods push jecxz mov add (bad) xor (bad) movsl mov outsb dec jo pop out popa adcb out pusha xor sbb fwait push jge jnp lret lcall adc add push xor shrb add mov and jne,pt pop dec push (bad) add (bad) fidiv pusha ds dec push jae jecxz mull bound sbb scas in inc das divl sahf scas mov ljmp mov add adc or xor mov dec cwtl add push mov pop pusha jae rolb outsb add adc dec add popa or add xchg sub es xor imul push cmpsl fldl xchg repz aaa das jb mov inc aas clc pop cmp add lock adc adc cmp test sbb add add inc inc ljmp aam xor aad out mov imul lods xlat or add imul sbb clc and sub jmp mov (bad) jno in (bad) adc loop loopne dec inc movsb push aad add xor nop inc add and (bad) jae fldenv jge xor dec add xchg or cltd and dec cwtl push dec sahf lds or add mov pop mov adc cmp hlt andl sahf push nop add cltd add cmp xor sub push mov dec pusha mov lahf and aad add xlat inc int mov inc hlt hlt lock cmp cmp es add inc inc leave add orl add xchg cmp sbb rcll lds in fwait push sub ja and lods das mov push fdivrl xchg scas ds inc adc aam pop cmpsl mov outsl ljmp mov sub outsl cwtl mov lret incb and pusha adc adc and cmp cmpsb rclb add or push dec inc or and pop cwtl stos push adc mov xor cwtl nop and stc mov lcall mov add sbb add imul jne mov adc mov das lret xor enter mov fwait shrl jmp xchg cmp lock inc jecxz test js pop xchg mov fmul cld aam ljmp xchg scas fildl jl roll sub push jo int push in psllw push andl ss add incl push mov sub cs mov add pushf gs sbbl mov (bad) int add or nop mov xor ljmp jno pop cmp mov add push sbb or pop mov cwtl add push ljmp arpl sbbb fadds std repnz dec jp push sar stos push add stc (bad) iret lods mov push mov adc mov fcmovnu (bad) popf sbb mov dec sbb and xchg add mov pusha inc sarb repnz pop or push rcr cmp ja int3 fs (bad) and cmp daa jl in dec push movsb fs cmp cli hlt outsb push loopne adc daa lea js mov aam sti add add add sub pop pop mov mov add mov insb dec pop pop popa cltd or push cmp (bad) (bad) or mov mov add and and sub mov add jge (bad) jbe sub dec and cwtl sub inc adc inc fcomps mov push mov cltd mov in cmc lods fmull sub fnstsw fisubl pop dec fild and aas hlt je (bad) adc mov pop ds add add xadd jecxz add in and add sbb cmpsb and inc inc push sar arpl xor cld inc jge mov inc int3 rcll (bad) add lret pop mov sbbl jp leave adc or movsb push movsb lea adc rorb iret sub cmp mov add add mov jnp cld push sbb or mov mov mov add and add mov or jo (bad) sbb sub data16 lret push pushf add cwtl push dec les out mov pusha push push mov and pop and lret xor and (bad) (bad) out sub cld test jecxz inc bound sahf fs xor xchg pushf mov dec xor adc mov out into push imul (bad) aam fistpll nop enter or in jno aam sub cmpsb lods sub cmp mov sub add and (bad) daa rorb push pop mov iret cmp cltd and inc mov int3 fcmovnb adc ret dec and or adc mov or cmp jecxz mov mov jbe les mov imul or subb sub pop insb or dec add int (bad) xor lods lret push test add sub mov (bad) adc mov pop seta test bound cmpsl stc sbb sub or mov hlt add jne,pt stos int3 mov add dec popf (bad) in pop xchg shrb andb lret dec jae movsb lcall rolb imul add add jns pusha xor xchg faddl out and hlt les mov sub mov mov adc dec dec push dec in mov out aaa mov loopne xchg sub arpl nop dec repz add adc mov add mov xor dec pop test insb ficom inc rolb popa and sbb xor sub pop xchg jmp xor push push mov pop add icebp hlt (bad) xor sbb insl adc in cwtl movsl lahf icebp inc imul push cmpsb mov xchg jo cld inc (bad) xor jl imul imul inc bound js daa scas push (bad) fsubs test add dec lret pushf scas add inc (bad) nop pusha cmp cld or inc ja adc pop movsl jge jb sbb dec popf mov fsubrp xchg shlb push mov mov lock mov sub inc mov pop and in mov cwtl popa pushf call clc pop xchg xchg enter mov lea xchg pusha bound mov sbb imul adc cmp xor cwtl lock sti mov (bad) mov add or mov mov mov dec inc add mov es call and jmp stos mov adc fsubs popf adc push dec loopne pop repz int3 leave data16 sbb cmc or sub lret loopne push cmp sub jl xor test inc xor leave sbb mov sub nop push mov je mov cmp (bad) shrb fs inc fs (bad) dec sub arpl adc xchg jns mov lahf fs jmp cmp mov jns lods loope test mov ja sub imul outsl xor jecxz lock mov push mov sbb add mov jb push and pop sbb aaa xchg mov and mov inc sub jno push nop add popa xchg mov hlt scas sub loop shrb cmp mov dec inc inc pop mov bound cmpsl inc into cwtl lahf mov stos adc jmp pushf dec pusha xchg cmp add push fmull leave xor inc fxch pusha fdivrl test cmp ret or cld jne mov add outsb pop mov add push ja cmp bound fiaddl xchg and mov xor or mov mov dec shl or adc incl dec addr16 fs add or ljmp xchg adcb lock test (bad) repnz sbb and sub push cltd mov dec shrl (bad) flds inc xchg mov mov cld (bad) adc ficomp js cmp aam testb jo test rorb pop repnz pop lret pusha shlb dec clc (bad) in add and lock pop int adc inc adc cmp dec jne fsubrs xlat test aaa mov or repz loope arpl daa (bad) adc pop or lea rolb int3 adc xchg dec scas and dec pop adc inc push lret or fld fs (bad) push or pushf mov inc mov sub outsb and lods mov add arpl sub insl sbb enter or pop mov nop lcall sti es jno push test inc out rcl stos inc xchg adc push cld test mov dec and dec xchg repz mov dec cmpsl push jo mov xlat cmp mov leave push mov in cmp and rcrb aas dec adc shrl fs dec inc (bad) fs and hlt add insb enter dec sub sahf inc pusha cwtl mov fnsave xchg fmull leave add outsb add jb test rcl fdiv xchg insb clc xchg lock movsb add sub stos js testb cwtl pop xchg jl xlat rcl enter and push add fstpt cmp jmp gs adc (bad) stc int aas mov adc (bad) je jo jo add pop fidivrl mov dec adc dec adc out psubb (bad) aaa inc push pop test push inc pop dec dec xor cmp xchg movsl popa pop add es sbb mov push and nop rcl (bad) pop pop inc mov fmull lret lock pop add fsubr mov test (bad) sub inc jmp xor lcall jg push jbe (bad) push mov sbb enter or in pop add test push dec fs fnop das fnop outsb xor sub or xor push add lret test loopne mov add hlt xchg popf fmull clc jl sbb adc jmp les push test mov mov subb test sarb pop xor add mov mov mov push add push or mov int3 mov bound cmpsb xor scas and rorb add fsubs jno or in pop rcrb (bad) mov cmp mov cmc cmp pop (bad) insl stos dec rol out dec lahf (bad) lock mov hlt pushf xchg imul (bad) fcoms sti xor insb fwait insb ds mov pushf in cmp popa sbb push mov fs inc (bad) repz cmp test lds test inc insb ret fmull arpl cli mov call outsl insb fistpl mov mov push jns sub ret mov outsb push shll mov cmove nop iret xchg pop or xor sarb dec cld pushf das aaa fs add pop scas cmp mov and and add cli xchg jp add (bad) movsl xlat les add movsb rol pop jns outsl lods ud2 pop cmp lret mov (bad) idivb and sub aaa cwtl loopne or enter adc in cwtl and pop cmp outsl pusha incl xchg not mov pushf jmp add insl push or dec add xchg jnp push scas mov dec scas enter push mov cmpsb out loop aaa push mov dec mov cwtl and mov jg mov psubsb loopne (bad) cmp or dec insb mov mov icebp popf ret or xchg stos add mov out and js out out outsl ljmp adcl clc jmp push pop and pop mov jbe gs (bad) popf fsubrs mov mov hlt add xor pop and mov inc loopne mov jnp dec pop mov mov pusha sbb and or jmp in bnd popf add popa (bad) mov mov sub jne mov repz aad in inc addl jne fucomp aas mov mov mov cli push clc hlt stos rclb inc (bad) out into in jl push fxam or or jns fwait test in scas add jmp xor pop inc (bad) or in inc js mov daa sarl jp sub lock test mov jns int xchg aas pop mov mov or xchg adcl shrb pop push mov sub mov movl jne push xchg stc cmc (bad) dec xchg or push xchg je inc inc add into push inc fcoms mov sub sti inc dec add fildll xor push dec (bad) pop aam fstpl pusha inc fistp in add push push orb test fildl push sbbb push addl jl cwtl lcall (bad) jne mov mov xor jmp pop ret arpl addr16 std cltd and addl fdivs rcrl flds adc mov sbb mov xor outsl mov xor or mov or test std out enter push push jle xchg pop je add dec jmp add push push inc xchg repnz jb add int3 jmp cmp mov sub jbe popa arpl das push fimul jmp xlat mov push push lds (bad) rol test out push mov pop mov mov add push push lret stos (bad) or out cmp iret xchg xchg cld ljmp loope add xor pusha add out nop arpl repz push nop push dec shrb fisttpll cmc pop xor hlt scas cltd xor lock vmovlpd (bad) rorb scas inc lock repnz xchg jno std ds mov ret push lahf mov xchg imul fisubr pop pop sub xchg aam push cwtl mov sbb mov jmp pop scas (bad) jle jnp nop leave cmc loope cld mov or fdivrl enter add adc pop rol mov out cmp rclb data16 test dec pop mov add idivb dec iret lret jnp or or mov xchg adc pop setbe xor icebp daa xor jne push pop add xchg and jne push and ljmp dec xchg (bad) rorb and or dec pop lcall leave add and sub out insl ljmp sub repz jle in or cmpsb jno xchg add dec add fmull outsl inc jmp xor outsb je fbstp jae rol pushf add aas or scas ss fnop fidivrl mov lret jns mov and push push xchg mov dec sbb xchg jbe push sar inc and sbb pop push mov outsb aas push pop jae dec daa mov mov xor lahf movsb out mov js fisttpl or lahf jae or fisubrl push sbb incb add cmp cmpsl add cwtl and jnp arpl adc mov pop pop ljmp repnz in cmp mov in dec pop mov mov sub movsb xor push mov and xchg nop xor pop mov push and nop mov sbb cmp (bad) aaa lret cmpsb lea push pop dec fsubp sub xor aas aas divb outsl or mov and add or mov popa jnp inc (bad) inc inc push push addl cs xor add jmp jl jg insb or imul aad nop int3 jae xlat xchg jmp lret out xorb popf pop fisubl out add dec xor mov mov adc or pop adc sti dec pop gs mov mov outsl dec scas inc cld imul jae leave xlat (bad) (bad) sbb mov ror call push xchg push (bad) out fisub adc mov ja jle shlb clc les lret test pop pop mov and repnz cmc test rolb fnop repnz mov into pop lods push push fiadd ds je xlat jmp cmp jmp lock xchg (bad) add (bad) ljmp inc imul or jmp sub hlt (bad) mov dec (bad) xor jne mov lret incl aas lds jg (bad) aaa pop push and lcall jg aaa pop jnp and frstor pop jnp inc cmp jne inc sbbb test lods sahf xorl add cmp inc leave imul das dec iret data16 xor sbb mov dec pop pop push rcl sbb (bad) aas pop mov mov imull stc push iret lods ljmp nop arpl pusha sub pop lods sub sbb mov jl fcompl xchg pop add daa shrl dec cmp pop (bad) stc and inc lods std add ja dec jg cmp sub mov nop mov (bad) xor pop sbbb neg shr adc or add sahf scas mov pop pop xor out jnp push jecxz mov sti add jp int cmp rcrl not jnp mov (bad) mov out out incb aam call fldl2t (bad) mov xchg jle pop iret pop push lds mull pop cmpsb dec insb cmp aas in mov cli jmp jno sbb add add mov dec push pop dec stc push test addb mov and and hlt xchg jecxz inc test dec xchg orb ficom mull comiss scas pop pop cmpl xor push add jmp out xchg outsl loope or mov movsl xlat in imul push and out pop nop data16 iret mov push cmpsb out pop sbb scas dec dec verw inc push add add mov mov push xor mov sbb fcoms jmp and cld pop sub rorb add pop mov in add (bad) pop std push mov jmp push cmp sub stc mul or inc movsl cmp push nop or add jae ret imul lock mov add jecxz inc mov lods ret das std pop xchg ja mov (bad) movsl or lock jns pop jne mov lds enter add (bad) out stos ret lds cmc jg dec in ja adc mov decb ret jmp ret dec jp sub push roll xor pusha lcall (bad) xchg mov pop aas mov test xchg add in sarl inc mov push mov sbb cmovbe add xor data16 inc out cmp adc mov mov pushf jp ret dec mov lods ja sbb sbb mov xor push fsub cmpsl sub sub adc add ljmp daa push das add inc push or jo push in lods data16 xor lods pop mull pop lcall cld lea es xor mov mov jnp sahf xchg and std adc mov hlt sbb imul mov add mov xchg lods lds push and jno test push inc jmp pop push or add adc scas movsb enter cmovs inc aad add ret hlt xchg add push pop mov loop repnz mov and in add cmp lcall nop inc mov fmull dec pushf aas add test sub rol pop adc adc shrd add (bad) icebp je inc sbb dec int3 push lock xchg push mov pop add insl gs pop xor shrb cmpsl js xchg or sbb or pusha xor nop test jb jo fdivrl adc jg lods mov aas loop add pushf rclb and inc jg mov adc in inc jae mov icebp push pushf repz repnz pop sbbl and aas psraw fcompl test popa cli dec or cmpsl or (bad) push xchg sub std xor cmpsl add insl mov inc jmp mov test mov js jmp and inc clc adc dec mov xor movsl inc pushf jb lock js add out sti dec sbb mov sbb mov sub push icebp xchg adc push mov pop dec adcl or push (bad) fmull mov and fisttp aas lahf xor mov sub out cmpsl sbb and or inc clc add push das divl add imul mov push or sub nop jmp test rcl push pushf rep data16 xor mov popa in repz dec daa add mov test (bad) ret lods nop loop addr16 or sarb dec xchg stos movsb cld xor lock xchg adc mov ret push inc les pop xchg loop xchg or xchg dec sub aam pop sarl mov and push insb adc ret cmc and mov ljmp mov mov scas enter mov dec xchg sub je mov mov aas inc inc and icebp pushf and and aas push adc push inc mov cmpsb cmc mov adc add mov roll fcmovnb or sub clc adc (bad) mov popa or xorb hlt mov js repnz pop adc leave or cmpsb mov outsb ret pop xlat jnp mov jle outsl fstl cwtl outsl add pushf aas sbb push inc add lock int3 push xor sarb insl add inc fadds jg jns lods nop add mov mov xor ret xor adc or lock movsb in scas inc add dec xor (bad) and clc add mov xchg nop add ja and sbb mov xor lock and (bad) pusha and dec jge shl and iret addr16 aas mov sub mov shrb mov lods (bad) cwtl in inc cli mov and fisubr mov pop pushf sbb mov and mov cwtl negb cmp and sub stc jb and or inc aas mov mov fmull jo (bad) cltd and jge mov xchg sub inc or adc popa daa xor js movsl (bad) pop add jbe xchg inc icebp sub lret sbb jae pop cltd sub dec adc add shll jo and test jno stos dec stc (bad) je mov sub int3 or sub sarb in mov aas pop mov xchg repz clc adc pop mov inc push fiaddl inc push jmp mov loopne sub mov pop mov mov sbb cwtl stos pop push lahf jge jl dec xor xchg mov lock jmp xor cmp ljmp pop adc xchg (bad) shl xor and movsb xchg push leave cwtl rcrl call daa add pushf jmp mov push cmpsb (bad) ret addb sub mov xchg add (bad) sbb push sbb movsl stos test or pop rcr mov imul lret enter sbb andl and mov cld inc test sub xchg ret bound sbb or mov xchg rolb jg rorb adc jns cltd lock push int3 sbb in xchg sub pop and pop xchg push mov xor adc mov and adc sub sbb push mov push imul aas lahf nop (bad) sbb sbb mov xchg pop xor lahf (bad) dec imul in dec cmpb stos adc sub inc rclb sbb (bad) cmp rolb or sbb imul repz (bad) xor jg add jmp push lea cmp sub stc ret std out lock xchg mov pop xor aas ret lret pushf lahf cmp daa adc pusha mov mov imul mov cmp push scas lods rcrb ret adc fdivrs mov es and push mov test sub or sbb cmc mov loopne pusha hlt add mov jb or mov push lahf push or jns lock or notb adc add jno xchg test imul (bad) in inc inc mov pop daa cltd mov jmp inc or xchg xor aas into (bad) out lds (bad) loopne xor push add push xchg xchg xor fwait xor inc push cmp push out jno inc mov jl je jmp sub cs add dec push xchg xchg call mov xorl stc js psubq test jge cmpl xor in bswap push mov inc (bad) xor ds dec cmp add repz pop or add addr16 (bad) out add movsl movsb je pushf mov add xor clc out sbb mov insb dec rorl add insl mov mov sbb push jbe jmp roll in dec fsubrs or inc or add rcrl rclb push sub lret add icebp sbb bound add mov (bad) test jl in or sub adc pusha cmp idivb (bad) dec in cmp inc cmp and push sub xor scas push pop pop mov add (bad) jae fs mov lea inc jo loopne xor cmp cmp mov lods add push inc lcall sub jmp xor cltd inc rcll rorb jno fildl arpl dec sarl mov in (bad) mov add xor test shr add andl dec or and mov shl imul daa std or in push cmp jmp jbe xor decb fidiv push mov cwtl mov mov cmpsb push les pop xor nop cld xchg or add sub or adc enter sub out jo mov dec add mov cltd arpl repz lret or inc pop lea dec pusha push or es nop xchg add mov in mov mov js mov inc mov and movl fcom xor sarb call es mov das pop push cs xchg adc jne (bad) mov outsb in xor cmpsl xchg push or popf mov sbbb nop js add mov (bad) cmp jb mov and push sub pop jo cmp cwtl cmp test cs adc jmp test mov adc sub mov push push pop cmpsb mulb sbbb ja pushf xchg ret jo sarb jge pop sub je cwtl call jnp add leave mov sbb add stos sub divl mov jb adc outsb rcll repnz sbb xor or adc mov mov nop adc ljmp mov repnz int xorb clc imul adc js movsb sti pop xorl and push addb fcompl (bad) (bad) xor cli mov sbb sbb mov seta mov bound mov push or jo test pop jne (bad) mov mov sbb pop jp jne dec clc add (bad) and rolb xor inc fs fs in cmp inc mov pusha xchg xchg dec das push adc push dec cwtl fistpl cld lea add imul sub add jmp mov sub inc (bad) pop lock sub push push xchg rolb and jo in jbe sbb mov lcall cmp bound loopne andl sbb mov jle fimull adc (bad) ror dec sbb xchg das jns aad mov les int3 inc (bad) push cld pop jl stc cs mov fstl xor dec adc or xchg or imul mov inc xchg push cmp (bad) imull add insb sti pusha shr mov sbb adc cmp add das push aam (bad) js es adc add call mov mov inc out in subb hlt scas jmp aam adc dec (bad) mov mov cmp ficomp out (bad) lret int3 mov (bad) subb or dec add cmp jmp in xor sbb loope lock outsb xchg fisttpll lret pop lock aas fsubp ja mov addr16 add nop jp pusha inc sar mov and adc push push lods push sbb push push add adc jb inc aam fcmovb push cmp inc lods push and iret loopne in nop cmp jge dec inc lock faddl add cmpsl sbb and nop sbb mov cwtl mov jnp lea clc sbb lods in movsb push lods in stos stos push jecxz pusha push sub mov sub ja dec or xor mov aam jno and pushf aam and divb (bad) data16 xor adcb in rol adc movsb dec call sub mov into fnstcw data16 pusha dec iret fs xchg inc xor pop sbb imul fstpl (bad) jmp and push scas add shrl rcrl cmpsb push add add mov (bad) inc fstps hlt cli pusha int3 add lds mov mov sbb adc mov push pop jnp shl mov mov pushf jo (bad) sar imul cld fldl adc and cwtl je xchg push dec dec test stos lods add pop mov pusha std dec sbb les pop pop mov insl jae ror add push xlat divb in add jl (bad) mov and add in inc adc cltd aad dec and iret mov add jg bound inc pusha ljmp push push xor jns rcrl je clc or bound push pusha bound add enter inc popa pusha cmp push mov adc add outsl mov mov lret xor dec adc aad pop mov push mov xchg bound (bad) je jo pop (bad) pusha out pop adc pop mov add cmp lea test fsubrs lret orb or ret dec movb inc xor sub imul int3 inc cmp inc dec lret sub jb pusha push cmpsl add mov (bad) dec sub or cmp arpl pop (bad) stos arpl cmp sbb pop aam (bad) ffreep adc (bad) in leave pop cmc mov xor add and les pusha sbb jnp dec shrl dec (bad) sbb xchg fnop adc add xchg rclb cltd (bad) push pushf mov into dec push mov push cli sbb jnp xor lcall add hlt test test (bad) rol adc add imul adc xchg jecxz es xor stc inc clc (bad) lahf or sub mov sub push xchg or stc pushf nop jnp add nop mov xor add mov lret enter sbb push adc jae daa mov pop and popa sahf inc dec adc adc jge and popa and xor xor je fmuls cwtl add dec insb inc mov sub sbb fadds popa dec addr16 ljmp popf push or call (bad) xor and ret or push out push lahf cmp inc adc pusha xchg fsubrl sbb rcl shll xchg rorb pop jl mov or fidivl mov mov mov cmp nop xchg pusha aam or jp lods adc cmp adc std (bad) and jbe and mov mulb cmp int3 (bad) xor push clc sbb inc flds dec xchg mov inc jnp sahf sbb cmp push xor adc jecxz dec add mov aam mov push test outsl mov adc and or mov lock or xor mov xchg add rolb cmpsl aad adc or mov jb outsl add xchg sub sbb cmp cs sbb add push lret xor xor mov cmp shl xor inc or cmp add stos inc mov icebp mov mov sub rcl adc xchg cmp add adcl push add xor inc test push adcb cs jl sub pop ja mov push fidiv ret or xchg mov add fidivrl loopne rorb fwait lcall pop imul pop sahf rclb mov clc imul dec dec mov pusha xchg push mov or repnz shr or add inc stos aas sub rclb iret push cmpsl outsl cmp and int push xor fldt cmpsl out sub out test fdivl movsb sub movsb dec sub rcr mov push push leave dec lods test jo int3 lods or inc mov aas jne pop add xor xor gs pop shrb xchg outsl cld lcall mov mov test or adc pop frstor xchg pusha xor out mov dec cwtl or dec sub pop test mov (bad) xor xor jno or dec inc and lret add test mov shr push push cmp pop cmp and xor sahf imul cltd int push cmp enter pop mov stos xor lods mov push mov out and loopne call (bad) aad pop push ja addr16 mov out or fisubrl wrmsr fs fnstsw push push mov sbb (bad) adc test jo aas mov push mov xchg xchg dec push sub jg (bad) je ds mov mov pushf xor cmp adc pop add mov pop (bad) sbb into test dec inc add clc inc cwtl cmpsl mov loopne sbb sbb mov sahf dec adcl add sub xor push sarb or mov add ror pop pusha sbb call int3 cmc jl js imul push sub rorl dec pop (bad) jne bound mov jnp subl cmp mov add sub sub loopne adc jae (bad) mov mov pushf push and add icebp inc les js shrb popf cs mov inc dec add stos push icebp inc ror outsl and or call cld stos sbb mov fsubs pop sub arpl adc add and ret inc mov das push mov clc add leave fidivr mov cwtl lret lcall adcl mov push dec xchg inc mov xor pusha subb sbb push add lods cmp add aas mov imul or jb push shrl lods je out and xor xchg and mov and jge and jo lea push and inc jae jb (bad) cmp mull (bad) out push ss pusha xchg in mov push mov (bad) or and jecxz inc imul inc pop in add add add sub movsb jbe cwtl sbb subb dec mov mov (bad) fsubl pop add data16 push xorb adc inc loop inc push and imul lea imul pop adc mov shrb cli jmp fisttpl mov data16 addb xchg inc lods pop in dec mov mov jne sub dec pop inc mov jo mov mov add add cld jae mov sub test fadds add cmpl sbb mov push (bad) cmp dec aam outsl fsubp call lods push mov jecxz (bad) mov lods gs ds pusha mov cmp aas sbb ss shrb fldt mov and xor mov in hlt mov push sub adc cs pushf add cmp mov inc scas gs add jge sbb leave add push sar fnstsw dec (bad) das mov into in pop and cltd test and (bad) inc push data16 adc push das andl js xchg cli andl jg inc mov cld mov lods push rorl dec stos enter jae mov jnp out nop inc daa xchg mov lcall add lock test jb add or cmp jmp dec push aam int or inc and inc das pop push insb jmp mov stc fucom mov mov push adc sbb push (bad) rep mov pop jne pop loopne popf xchg pop loope dec cmpb scas lahf adc (bad) (bad) mov loopne sub int rorb dec call sbb mov jns dec sub mov cmpsl mov ja adc push adc test push push push mov and xor (bad) xor lahf outsl iret mov push les push or mov fcoml inc ret rcl imul scas xchg movl mov das aas adc mov sub pop jno inc inc mov inc jo leave xchg sbbb into inc stos sub movsl test mov imul mov es mov int push mov repnz adc and lahf push lret or mov or push hlt insb or push xchg xchg out mov add adc lret inc jp pop sub sub cwtl dec jne push jg sub popa xlat shlb test mov ds mov pusha mov daa add orl imul push outsl adc add insl rcll addb (bad) mov jle fsubrs enter scas (bad) and or jae jmp loopne and or mov cmp jae jno incb repnz in jecxz adc sbb ljmp stos mov add outsl test sub push cmpb add pop lea gs sub mov cmp sub add test mov adc jecxz inc pop jl add lcall jb shl iret mov clc xchg pop test jmp rolb pop loopne into rcll sar andb (bad) pushf mov sub lock xorl pop xlat shrl sub push sbb mov mov fsubs cwtl loop (bad) mov or dec pushf dec les or ss loope add push hlt (bad) mov fnstcw push inc mov inc stos out push inc aas xchg jne nop sar cmpl push and xor insb data16 adc inc fs dec mov into cmp and stos scas pop push (bad) push add insb push movl pop mov movsb dec pop dec push rclb pop in nop adc (bad) mov mov roll js or add cmp or sahf jp ja xor mov push sub mov jmp adc imul (bad) pusha (bad) sub mov mov cmpsl fild add loop add in dec xor jne cmp or mov rolb push cmpsl mov adc mov out adc adc inc sub inc push mov mov dec add es xchg xor push and push in (bad) mov lods icebp sub sub push mov mov adc mov cld sbbl dec out mov add mov pop ja push add mov cmpsb movsl sub xchg cmpb aad jle mov in add shll and jne rolb mov add mov pusha (bad) mov dec cmp add clc or imul lock test (bad) xor sahf ja popf subb cli adc (bad) mov mov cmp imul add xor jno mov arpl repnz bound dec jle xorb sub lods mov and mov and xor fstps xor pop and or push cmp dec js mov sub imul mov xor fist icebp mov test inc lret enter xchg out jecxz and adc pop push sub out das jp (bad) imul arpl nop sbbb xchg mov cmp (bad) xor xlat dec push ss les mov push (bad) into rcrb rcr not loopne adc leave or push jl icebp sbbb jb cmpsl je add mov mov jecxz scas movsb std shrb fnstenv cwtl add iret mov lret fildl adc hlt aam cmpb adc fcoml xor lock aaa adc jecxz (bad) or hlt lods add pop add sbb sbbl inc pushf mov push insl nop add (bad) pop (bad) movsl add rcl add sti push mov push (bad) enter jle mov pop stos ret divl ficompl push inc cwtl sti popf and sbb stos ds adc hlt jmp call cwtl mov or mov stos lret xchg pop call and ljmp add stc and add icebp imul or sti xchg adc les push jo fidivrl mov push cmc addl iret testl test mov pop mov adcl lea or lret or push (bad) loope add iret das sub fldenv mov rolb cli dec call xchg pop cld pop fmuls push or mov pushf lock pop movsl mov in dec pcmpgtw sub adc cmp cmpl mov pop adc test add add adc lock sbb jp movsb fwait and xor jg mov arpl ljmp ss xor adc mov imul mov lods std push test mov pop sub ret push (bad) push loopne fucomip ds xchg add sub int3 jno sbb out mov lock inc fs xchg xchg aas push mov adc lock or push fidivrl jo adc pop jns repz adc loopne mov addl int sbbb into inc insb rolb xor add (bad) sbb ds movsl add push push sbb nop mov inc or fstp adc mov rorl popa xor xlat outsl or fimul xor adcb repnz lahf dec test jge,pt nop adcl mov ljmp inc mov mov int add pop xchg xor je add jbe xchg cwtl sub data16 pop lahf adc das negb in rcl add or les jo mov in mov fidivrl bound jae test sub mov ret out add sub pop mov xor pusha lret sbbl mov jnp add add ret (bad) mov out pop pop add int3 dec mov cmpsb aad adc dec ror push popa int mov stos jl test in out sub test cmp add js dec dec or pop ljmp xor dec cmc pusha adc int test aam sarb js,pt cs movlps pusha jns mov lds or xchg sbb inc sbb sub icebp clc dec add jb jae xchg mov pusha push mov out jo orb dec push fs push push adc add mov popa dec mov lea mov arpl cmp mov jae cmpb aas out jnp ja adc inc pushf nop test lcall rcrb lods jecxz aam mov imul rolb or mov pop cmp adc add dec daa fadd enter xor loop js add sbb call adc popf imul mov lahf and fdivrp cli xchg insb adc xchg push mov push fildl inc cs adc sub cmp xor jmp ja shrl notl nop and pop mov jmp (bad) test pop pop xchg mov pop mov mov lock cmpsl cmp adc dec add add fs (bad) loopne cmp push loop std mov add lods mov and stos push cmp xlat or push repnz adc (bad) movsbl mov or cmp push nop mov mul fistpll mov jl enter dec and adc inc call int3 je adc mov cmp dec adc sti inc sub shrb add pusha das inc lret sub mov add in pushf dec dec push mov sub pop add cmc push repz insl shll js enter jne int3 add mov sbb dec push imul push (bad) iret jno (bad) or dec in les xor add mov inc add lahf test or pop add fucomp xchg and jns (bad) inc adc inc repnz loope je icebp inc sbb call ljmp sub push mov adc aad jne add add popf xchg repz les add mov mov add dec push rorb test mov dec push (bad) mov sbb or enter pop xchg push sub inc xor jp and xchg pop dec dec adc sbb mov dec add xchg lahf pop xor clc mov lahf test or cs stc mov out push pop fdivr add (bad) sbb clc out inc cld test sub jo mov lret xor xor xor adc xor in jbe dec mov cmp add adc addb ja jle xchg mov push nop dec in test xchg or ret insb xor stc orl icebp push cld popf adc scas jmp inc add mov rcll cmc pop call jns add mov test nop xchg push stos scas insl (bad) adc outsb (bad) fild dec dec or sub xor lock lods sbb or dec or in xor lahf sbb push inc jo or (bad) fwait lock push orb testl outsl xor enter pusha add xchg xor add pop les test pop pop test push fadd push and adc out lods mov xlat js fcom hlt sub push lret dec (bad) (bad) into mov add or jns pop inc pop dec call ds pop cmp test jmp nop jo pop cmp adc and or mov xchg xor mov sti in aam pusha mov lahf xchg (bad) cmp popa rolb xor dec subl inc (bad) lret call std cmpsb add sub jbe xchg sbb stos and or faddp and push popa cs xchg mov adc fs pushf add mov mov out pop add aam add clc jle adc dec cmp xchg xor iret jmp mov lock push (bad) stos add pop add outsb int or nop lock addb pop mov add cwtl cmp add push inc add pushl inc mov mov add scas (bad) clc (bad) add or pop mov mov arpl jge xorb movl push dec pop in pushf ret mov push sar add outsb orb jecxz in pop movsb (bad) xor inc mov imul add sub xchg cld addl push mov ds xchg cmp fldcw mov test inc js inc sub and mov scas jb roll xchg loope push mov (bad) pushf jnp popf pop add mov push push add xchg lcall loope and test fwait mov jl inc cwtl add ficom arpl mov or jl mov and ret fistpll push out mov aaa mov mov cmpsl jle add loopne lahf push pop rcrl arpl hlt and jp popf sbb in test je ljmp xorb add and rclb sub push mov pusha enter xchg adc and lds out shrl or mov js popa xchg mov jp stos push sbb xor push cmp in test imul (bad) sti and jo mov out sbb mov int3 inc lods cli (bad) leave add mov inc pop clc and mov lock xor dec cmp roll je bound adc loopne es cmpsl inc ds cmpb test out xchg or outsl push pop lret sbb add daa pop push pop mov stos test adc and add mul insb inc push into lahf dec push ror adc (bad) mov xor imul add fisubr lock imul in and add je gs aam pop xchg mov inc add in pop dec dec sahf xor popf bound fcoms or aad add jle lods movsl ret mov divb pop push inc or and gs repnz xchg push cmpsb adc inc add jae inc mov mov cmp lcall in sbb add in and movsb cwtl jne jnp or movsb add lcall push jmp cwtl inc daa adc push pop jnp add pusha hlt dec xorl push adc fistpl and xor mov imul jns add (bad) and nop mov ficompl dec mov sub ret imulb jecxz mov stos ss jne les test xchg mov jp push and scas inc cwtl (bad) in xchg leave lret jbe (bad) jmp aaa bound push or cmp popl (bad) mov ret xor (bad) xor nop js vmwrite mov leave addl pop xor mov pusha (bad) addb stos sub hlt pmaxub adc pop lret jecxz add push adcl dec pushf pop loopne into or push test adc mov punpcklwd out nop add lods test push mov or enter repz xchg mov shrl std nop add or jo in inc jne repz or xorl jmp ss push out stos and jg jno ficompl lahf cmpsb ret loop rolb mov aas xchg sbb repz or xchg xor add mov lods cld push cli jno adc fwait test insl adc aam or ret loop and imul pop cmp mov cmp test lock add ljmp dec std cmp jnp repz sub adc inc adc sbb aam into inc add orb popa pop stos lret or mov or jl add mov sbb push fdivrl into insb rcl call clc dec mov cmp and mov and cmp or add pop (bad) ljmp sbb xchg call cmp fadds mov jb or add loopw in xchg mov jecxz pop test mov lods sbb dec hlt pop mov sub test and lock roll loop cmpsl das sub sbbl cmc lock jne jbe lods adc or inc ret xor das call aaa test flds sbb mov jp add sti jne or push lea fistpl push enter xchg roll fs cmp insb aam push les aas popf push (bad) adc outsb lods add insl les andl stos pusha pop ret xor repz add rclb add push in dec xor dec add adc sbb pushf out add jl and loopne pop std adc and repz sbb pop mov xchg (bad) inc scas lds sub jno mov inc pushf jp les jnp rcr sbb movsb push arpl push and and cmc mov ret sbbb out aam inc pop fucomp push xchg xchg (bad) out xor cmp xchg and es inc lock mov lods mov sarb aam pop jnp inc sahf les xor or adc cmpl cmp (bad) hlt hlt outsl xor inc imul loop out cmp stos mov xor mov or cmp adc jo jge cmp xor int3 add rorb pmulhw cmp (bad) xchg mov pop pop mov call lahf scas add push icebp insb inc adc out sub insb fwait cmp clc cmpb inc push movsw cmc das pop add mov pop test inc mov mov inc aad pusha ret push sub clc jbe and fs dec (bad) jp cmp add shr mov mov lcall jp pop repz cltd fsubs loope adc icebp sub xchg pop loopne adc mov je fnstenv add (bad) jnp add mov add aam add lods andb inc test rol mov loopne imul xor fdivr xor cwtl or icebp divb (bad) repnz xor mov aam imul insb pushf sub sub cmp or fild pop dec xchg xchg xor inc mov aaa cmc (bad) xor pusha stc xorb adc std arpl int3 add jg adc adc rolb sbb bswap outsb lock mul mov push jne jle push mov rorl mov add add sarb lahf dec test adc or inc and and add dec add andl sub orb mov or add mov bswap insl cmp mov insb popa dec jo xchg push (bad) mov xor add icebp jne faddp jo mov mov jecxz inc clc and xchg clc add aad adc mov (bad) idivb or pop sbb sub fcomp es and (bad) ss push xlat add lea subb in rolb jge movsb add xchg enter mov dec inc push sbb sarb or mov js pop inc mov xchg push xchg sbb lods pop iret sbb xor mov cwtl loop inc pop cmp inc int3 pop and add cmp mov cmp mov dec out adc sub or mov pop xchg xchg hlt subb pop pushl bsr push xor leave mov insb popa addr16 sub out clc sub fdivrs nop rclb cltd fwait add xor pop or jl popl pop shrl (bad) add cmpb ret cmp stc add jp jl ja add (bad) icebp push es pop shlb aam mov adc xchg sti xlat call psllw aam inc mov sbb or mov ljmp push popa into cwtl ret roll fdivrs in sub cmp mov xor ror addl mov je adc or sub imul adc insl scas jmp add rol or das (bad) inc enter or cli mov test dec imul jae sbb cs cwtl mov xor push cmp mov push cmpl pop in xor movsl inc cmpsl xchg loopne cmpsb mov pop xchg pop (bad) and inc add mov or repz adc pop push add xchg add cmp ss out (bad) out enter sarb push adc (bad) mov inc dec addr16 cwtl sub mov test or and sahf rep std mov rclb fs test adc mov jo rol inc outsl cli inc daa clc call jae add mov fcoms popf cli xor xor cmp jns mov lock xor xchg dec cli cmp mov sub push arpl insl repz push sub and (bad) cmp shlb in inc sub jge cmovg mov in mov into leave js iret int3 and mov xor int sub mov cmpsl daa or leave (bad) fcompl lock loop decl pop popa add iret pop xor nop and jo mov mov movsb add push ret leave popf and rolb xchg nop mov xchg add mov xor cli ds push inc or fs out add loop and loopne xor mov pop inc cli (bad) les lock repnz movsb lock adc sbbl ret mov dec test adcb sahf or and push sub cs mov fimull xchg imul aaa adc jmp pop pop or and xor cmp sub dec dec add jno shrl stc jge and inc into xor movsb adc sub lcall sub jmp clc jg mov adc pop cmp sbb mov sbb jg fstps inc fmull sub inc adcb jbe loopne xchg sahf dec aaa leave push mov inc repnz les ljmp xchg add jo jb inc pop add add cs (bad) repnz mov insl add jle and lcall mov sub out rorl fldenv test adc mov xor fnstenv push dec dec sbb sub inc stos xor pushf add mov sub lock jbe call leave (bad) xchg js loope cmp scas call xor jo dec dec addl stc cmp lea shlb adc sub das jge pop mov arpl mov lock lcall loopne popf arpl cmc add lods fmul cmp jno and jg movsb sub insb sbb lret push xchg cld mov call dec add jecxz mov test adc xlat sbb jnp lock sbb test stos xor sti jmp cmp pop leave movsb add xchg aaa daa pop loope mov or and sbb jns push pushl xor adc es and (bad) in and xor xchg popf sbb pop cmp and imul adc test inc mov pop xchg inc (bad) jl xor xchg enter inc dec mov test cli and add push xchg sbb int int3 mov xchg adc jo je mov sub jecxz or mov jmp lock add scas test xor add add jl push push adc shr and add push ds mov test daa fimull dec iret or ret cmpb int3 pcmpeqd (bad) rclb cs mov xchg pusha xor add test lds or nop adc dec jno pop ljmp cmp test adcl mov out push cmp incb bound sub pop ret xor sub test dec add mov call repz pop sub and mov xor pop sbb fistl adc out and fisubr or or int3 inc outsb pop add mov inc (bad) pushf push xchg shlb aaa dec movsb sub les jns mov mov int lods mov xchg or enter test xor mov in adc sub cmp pop lea sbb cmpl mov add dec sbb push push movsl adc (bad) cmc add sbb add repnz jp loopne (bad) lahf add dec jnp cmp xor xchg mov sub push jp sub (bad) movsl push push xlat add sub ds scas scas sbb mov lahf stc stos add (bad) cld ss jae and cmpb ror xchg mov cld jmp sbbb add lret sbb adcl insb sahf inc ss cmp sbb and (bad) imul dec bound into jmp sbb add fisttpll aas push and inc jg xor xchg mov fs mov sub push cwtl jmp inc daa aaa sub adc dec xor xchg mov add xchg and div pushf rcrb jmp movsl push sub shlb jo mov ljmp clc call add push push std add test sub jbe cmp cmp add ret lret sbb cmp or jl cld add cmp in xlat outsb xor jo mov iret mov xchg enter add add arpl mov cli enter jo rcrb add ss sti cmpsl aas push es pop or and jne fs pop inc test lahf sbb push (bad) jae daa pop mov enter subb cld andb insl aad add sarl nop loopne dec sub imul (bad) outsb iret test fidiv dec push icebp mov and xor or fmull lret ret add or addb sub popf xor xor out mov fwait pop js je xchg mov shlb jae or jmp dec and mov jg dec repz adc inc data16 popa call sbb or xor iret jl dec movsb sub sub loope subl test pop pop dec and sar lret insl lea add inc inc mov pop sub in std les or adc mov jg pop xor sbb lods fdivrl pop push stc mov ja mov js ljmp or in and (bad) xchg ret mov mov rclb fadds shrl (bad) (bad) lds pop or cmp mov sub out (bad) dec imulb stc aam jno cwtl daa (bad) clc inc jnp jnp xor cmp mov sbbl cmp mov and inc idivl test add std (bad) dec sar (bad) call or test pop and fadd xchg and mov ja js vmread sbb adc xchg sarl mov and (bad) outsl dec pop sub pop rcrb sub sub andl pusha pop ss lret xor aaa jp or les xchg jl inc mov cmp jnp and xor and sbb in imulb in xor and adc push ja inc pusha xor jecxz xchg sbb das adc pop mov add hlt loop push inc mov popa and sub xor cld inc iret adc sbbb inc shlb mov mov and pop or jg and je jl test xchg mov test push rcrb xchg or dec push int3 int movsl sbb jne enter sbb jno call and js xchg or ljmp or pop pop xchg dec dec rolb js mov mov call loopne dec add lods negl (bad) sbbl repnz jno scas (bad) mov sub lods or dec inc loopne insb and ljmp adc add adc pusha mov ds or cmp stc jo push xchg in or add mov mov xchg pop fcmovne push inc cwtl int3 loope sub lcall shl inc lds lock out cld pushf icebp test das sub sbb dec addr16 std pop cmp data16 mov jp pop sbb xorl outsl xor mov mov and sbb cmp dec jg cwtl xor jbe mov mov or cmp pusha jno (bad) fsubrs int3 jecxz fs xchg mov into addl inc or int3 mov xor cmp xor sub adc leave xchg rclb jbe sub jle push enter jns inc xchg jmp pop xor dec xor sub out push cmpl dec mov adc outsb daa mov aad pop out cli adc mov xor add or cwtl mov mov sub sbb and xchg xchg mov movsb ret ss cld dec inc adc lods inc mov and adcb xor test lar inc add push out add loopne add hlt jecxz popl into push pop and mov out (bad) xchg and and xchg fidivr inc bound nop mov add xor in xor pop sbb inc push mov rolb xchg cltd mov add push sbb jge mov or lcall test test add pop dec icebp or in mov lock addl mov arpl and iret xor and and dec subl in add ret mov bound cmp pop hlt std call rcrb pop xor push and nop sub mov xor or jo fdivrp icebp dec xchg mov or (bad) mov sti mov jge adc mov mov out lock jne jp insl imul add mov push shr shrb jbe aaa pop pusha and mov gs bound or cmp add mov add loope mov or push mov push loopne jnp cmp in pop test cmp enter movsb pop fwait xchg adc stc aad xor in and or std cwtl mov inc aas mov pop repnz test and dec mov and pop out aaa or test sar cmp and xchg mov adc (bad) (bad) xor das push das cmpb and mov ljmp sbb pop (bad) xor jb or ret call popa push shrb fnstsw mov addr16 jns test mov fs mov fiaddl ret mov popa call cmc add call mov or add movl adc stc lods jmp mov leave cld jg mov adcb decb out mov add pop jo mov cmp clc dec mov add mov (bad) cmc xchg cld xchg ltr fsubs mov sub add fmul imull pop rolb ja dec cmp xlat in sbb pushf add das leave mov sahf mov push jns inc leave jle shlb out js inc cld mov sbb mov aam dec pop or ret icebp add jb mov add add imul mov sub imul mov rcll jp stc xorb pop imul xor stos das or scas dec mov adc arpl mov insl add and adc out out faddl aaa xor or adc add sbb dec jmp add lahf aas cmp mov or add dec mov xchg jecxz xor arpl inc sti mov add jg mov xlat add add add leave and push popl fstpl clc add nop sbbb in push daa lret enter inc cmp mov and mov and jbe fcoms mov ss in xor and mov jne popa loopne insl or add cli outsl dec pop pop mov cmp add xlat sub and adc lret dec fcoms dec shll fsts or inc aaa mov cmp adc push mov rol pop xlat incb (bad) shrd inc inc fidiv jge add sub inc push fidivl test pop jnp les sbb dec rolb mov push xor sbb aas aas sbb je mov sub sbb rcrl adc lock add mov pop and mov outsb adc fcmovnu ret cld add pusha push nop push aam and movsl lock (bad) iret dec add jo xchg test dec cmpsl mov xchg sbb push or or inc mov js cmp add icebp (bad) sbb push enter dec pop rolb mov mov add mov fs xor je push les sub rorb out sbb sub xchg cmp repz fadds jl push add inc mov out imul mov pop daa and scas dec rcll inc cs or dec mov xchg dec notl mov scas jge cmp xor and sbb inc mov mov fs and xchg cmp sub stc jns mov into fsubs cld rcr adc dec push out imul pop sti add js jle add jecxz push cmp xlat fbld aas push xchg add push mov ja daa pop es hlt in ret arpl push addr16 pop jbe sbb xchg sbb nop pop mov js mov (bad) xor cmp xor call add incl mov dec (bad) sub pop adcb les fadd call inc cwtl push mov dec sbb jl add fldenv arpl clc mov aas rclb cs jns xchg pop arpl sbb nop fisttpll sbb xor adcl jp js cli (bad) mov popa lcall xchg push outsl negl ja lds adc out mov mov cmp xchg ss xchg bound xchg lahf or jmp cmp adc add sbbb sbb add std cmp les iret and fisttpl mov push jb rolb push adc mov push pop push xor push or cmpb inc sub nop push (bad) int ss jb jb lds dec cmp pusha sbb int3 sub icebp pushf xor add dec or out fdivs inc mov sub lret adc and adc xchg xchg adc stos dec in jne sbb push aam lds cmpsl (bad) pop mov fs sub inc nop pop pop loop dec fwait inc test mov scas cmp mov lods daa inc cmpsl pop push adcl mov jbe pmaxsw sbb sahf ret hlt dec jle ret (bad) push pop jnp lcall and lea dec lock cmp mov cmp or adc (bad) icebp cmp enter xor pop loope inc call mov adc mov ret ds xor pushf add cwtl pop lods push or dec xlat and cmp add aaa push add in sahf and and (bad) xchg mov addb pop jg repz lret mov icebp add ss hlt mov psllq pop xchg pop sti inc loope jecxz icebp jmp test add lods push les inc xchg lock sbbl mov hlt js pop sbb xchg adc stos lods in xchg clc es dec dec xchg pushf loop,pn xchg sti add mov mov addb xor cmp dec loope mov loop push cmpsl adc test mov sub shll mov xchg test out push ret hlt jnp mov faddl fdivrl movsl js cmpl inc int lahf stc insb inc jae inc decb mov nop add sub sbb out and cmc xchg or or aas lock cs add addr16 mov cli mov sbb add notb and lock loope pop lret mov int xchg rcrb shll mov adc movsl ret adc (bad) cmp repz dec daa jbe add dec xor aam mov jns cmp mov inc ja mov mov js incb add lcall leave or inc cs hlt dec fstpl les sbb xchg lods dec test add nop divl (bad) pop pop mov (bad) inc and mov mov sub das in mov mov sbb mov mov and xchg lock dec lock mov inc mov push inc mov and fmul adc push std fld in rorl aad imul leave loopne jge cwtl sbb inc cmp xchg test leave dec test add mov int nop ja popf js add mov cmp imul add repnz lea push dec shlb pop mov loopne test leave xchg mov (bad) fs or push in int (bad) orb jbe push clc xchg mov dec in pop lahf mov sti in inc in aaa mov lods dec mov test into les (bad) xor pop pushfw clc imul mov dec mov daa cmp icebp fld das mov push and mov sarl xchg dec add and push dec cs stc cmovae cmp fdiv inc int3 addl in sbbl popf shlb mov enter fistp xlat cmp out lcall cmp sar cmp popa orb clc (bad) mov push add and and shrb and imul mov pop lret add cld (bad) repz push (bad) ret push push cmpsl jns pop sub (bad) xor daa inc mov movb push inc pop pop outsb dec adcb mov cwtl adc fnstenv ret add xlat mov notl sbbb cmp cld mov push or out popf adc ja mov adc cli mov in xor inc cltd pushf loopne cld mov cmp adc test scas test xor add sbb add into fsubl arpl rcll cld stos je mov push cmp andb pusha mov aam mov dec icebp clc or je nop lods aas push sarb jg xchg add and dec add rolb lcall ret inc aaa outsl (bad) xor nop and nop add std lea daa sbb jmp aam mov push (bad) in xchg or adc repz pusha mov mov and sub xchg es inc cmp sti push lcall sub push addb call inc mov mov fsubrl repz std je in push adc je and mov cmp adc inc sub xchg mov mov mov inc push stc jmp imul rclb icebp lds in lock ror mov (bad) add ds cmp cmp cmp xor mov clc testl leave movsb lret outsb adc mov sub add xchg and jl cs inc add dec or adc jmp xor mov (bad) mov ror push adc push add and lea sarl sub jmp dec clc les inc dec jns xchg add xchg scas test imul faddl jl add inc sbb inc test adc jo pop push (bad) stc stos pop add mov mov sub mov popa mov sub in mov inc and mov or (bad) in jmp shrl data16 test popa int3 mov sub mov lret dec pop cmp xchg aam hlt inc std mov repnz cld mov cmp jp mov and xchg mov add imul loope movsb push movsb (bad) add push imul and faddl test icebp mov push repnz lret call xor iret (bad) pause xorb pop jnp mov pop sbbl hlt cli mov jmp adc mov or shr test jl hlt rolb out js es mov or xor popf mov mov cmp mov cli push test fcoml dec clc dec enter adc add mov out repz xchg stos ret in inc daa sbb in mov sahf hlt rclb push shr add jmp cmpsl inc lods adc mov add imul pop jmp add xor repnz icebp cwtl mov xchg push cmp loopne sbb or stos aas add in cmpsb aaa lock mov or ljmp test jmp cmp dec loop lds ret icebp outsl xor stos imul mov popa aas xor or cmp jae lea int3 cmp or stc xchg mov pushf xor cltd mov mov pusha xchg fs xor (bad) adc cmp push or test scas cmc adc mov (bad) popf jmp mov idivl cwtl xor dec sbb insb mov ds addr16 xchg (bad) jg mov sub adc jns imul bound inc and repz dec or inc or xor roll cs dec mov mov dec or rcrb add cmpsl sbb int addr16 add out xor outsl jge or inc repz pushf add pusha push and dec inc add pusha jae push pop xor out out pushf and jecxz out and xchg jg pop ds and mov loopne cmp pop adcb xor pop mov add lea movl inc std nop lods jecxz xor push jae (bad) out push mov xor xchg pop ljmp lds pop xlat add shrb push sti sub insl neg or ljmp shrb stos push lret sbb mov mov fcomps pop lret divl ljmp xlat pop push out sbbl (bad) jmp xchg mov pop push mov pop push (bad) inc inc ss pusha mov push sbb adc ljmp flds enter add push inc add pop (bad) adc mov add repz mov das and pop xlat lcall mov dec dec rclb pop (bad) xchg enter mov btr or nop xchg es popf push or pushf imul push nop mov mov mov decb pop xor push xchg stos rolb (bad) push mov and adc pushf scas xchg (bad) pusha nop lahf ret jge jg or sbb cmp sub lds mov inc shl push (bad) ja cld in cmp bound adc repz cli xor dec addr16 mov mov mov je sarb or jmp ror xchg clc mov imul dec mov inc fwait add not xchg fwait movsb pop pop jmp int3 cmp dec mov sti mov inc push lahf sub outsl cld add xchg pusha rclb and mov and jle int dec imul inc add cmp fwait jbe xchg std jb loopne add pop mov cmp push out pop jmp mov stos jmp ss aaa shrb pusha fimul push out and call cmpl enter and fsubl dec cmovnp out neg adc lock ret lret jnp dec iret mov rorl ret fldcw push cs jnp inc call cld ja and and hlt push test cmpb add inc in and sbb pop push pop (bad) mov sahf sahf popa mov repz fnsave mov push xor sub pop dec das cmc cmp insb out inc pop mov add push pop adc out or pop movsb enter and xchg mov push dec cmp rorb mov mov je pop pushf push dec adc (bad) add pop push xor mov jg leave push lea and (bad) ret dec mov cmp pop call pop jmp ss repz mov lds sti cwtl rcrb sbb cmpl inc std aas xor in add pop sub or push and loopne push test shll or sbb enter add loope pop dec xchg movsl pop (bad) adc jbe push mov mov (bad) imul add out out mul into ss xlat loop cmp mov mov add stc sbb or pop adc xchg cmpsb clc sarb pusha ljmp cltd adc push pop add xchg or shr aaa shrl stos sbb mov add xor push add xor sbb aam cmp dec jbe push mov lods insb rclb pop ds cs or out add lds neg inc adc jnp dec std mov cmc fs mov nop scas pop fstps and xor push mov pop add mov adcb std and dec jge outsl jno push mov cmp (bad) push inc sub or xchg imul je (bad) or int3 ret push fs push scas fstpl jg inc dec jg jbe imul lret xchg test pusha dec xorps sub inc xor scas into cwtl dec out cmpsb rorb jo add imul cmp sub shrb mov add inc sub inc dec clc add sbb popf outsl jle (bad) mov mov aam fild and pop call test push mov and or dec mov add out cmp cmpsl outsl xor (bad) or pop push mov xlat add jnp (bad) cmc xchg dec test shlb add faddl cmp push pop jmp rcll scas fs loop popa cmp out rolb fistp inc repz sbb mov or shrl in push and pop popf clc jge or jmp xchg pop xchg jge fadds int3 test push xchg hlt imul cmp xor jp mov ss mov dec lds and nop mov mov inc inc sbb out dec pop dec jp and or adc or ja outsb test or fwait rcl rcrb popf pop (bad) mov insb or jge sub test push cmpsl out arpl xor vpsllw cmp push test sbb in sti ret aas add sub or cmp jg add fstps jecxz fsubs jmp push xchg pop pushf dec jle dec push inc dec repnz or fisttpll jmp pop pop mov test dec lods jae ret inc insb js and mov aam push dec and movsl in xchg push jno cmp rcrl pop jns mov iret ds xor dec push out jge mov inc pop mov pop push imul jnp (bad) pop push cmp dec (bad) sbb push bound push stc pushf (bad) sar fwait jp add add loopne push pop add and dec xchg push sbbb (bad) add xor test cltd shrb mov xor push out inc mov pop cmpb or leave mov jecxz push bound jne pop jg sub movsb add add jle xor pop mov bound sti sub push push je push pop gs push push pop pushf lock pop pop cld movsb mov out xchg jle mov xchg pusha push (bad) enter or pop push and jp add addr16 jno sbb push pop cmp sbb call push mov clc push adcb add jo pop pushf mov rcl or shl mov js dec imul (bad) mov adc stos lods jno jmp aad push adc mov or pop mov jg add xor scas push inc add out pop (bad) or sbb fiaddl loop mov std adc repnz adc out movsl xor pop sbb add loopne into xlat imul cmp fwait dec add cmp (bad) mov std aad or dec push das repnz push dec cli out cmpxchg (bad) and adc add ss xor (bad) jge ficoml cmp aam (bad) mov or sub xor popf test gs and push mov add cld int (bad) icebp or mov repz pop pop into dec pop cmpsl dec or pop inc mov mov out jno dec mull jmp adc lock and inc inc adc loopne xchg pop loope add jne add dec out leave push pop add lods loopne push cmp sub mov or movsl pop js lock scas mov out pop jl pop xor aas push lcall (bad) jnp or pop jno inc push bsr xor jg ja push ds mov jno lock adc xor jp fstl sbb insl pop rorl jne inc adc pop cmp sub cmp movsb or es cltd lods daa (bad) xchg scas mov mov ljmp pop dec inc add ljmp call imul or mov add pop lcall sbb test sub lret addl mov fnstsw std in or pop aaa and push adc imulb popa sub mov imul mov outsb xorb and jne int3 inc sbb lock pop scas mov ja popf dec (bad) jmp test pop push call cmc mov push pop xchg xchg pop inc or (bad) mov ret dec pop pop xor rep dec (bad) xchg nop mov ja xchg dec shl sub inc or pusha jle dec jae pop mov pop cmpsl jmp sbb mov jmp out ds roll push xlat lds push mov push jmp pop xor sbb inc out sbb add mov pop pushf push mov das inc addl mov shrl inc xchg xchg or and or xchg out das cmpsb mov test sbb (bad) mov and fisub pop das out icebp add add repz sarb (bad) mull sub jb gs inc or sti push inc (bad) imulb dec insb sbb push and clc (bad) or pop fildl push cs jmp mov subb ficom jae mov hlt xor and mov jge out imul or dec stos addl push mov cmc xor lgs xchg pop push pop iret pop pop xchg sub push push cmp loopne add cld icebp jg out cmp mov add (bad) add xor mov in adc cmc sahf xchg push jno insb mov repz sub ficoml push decl int3 imul push nop lahf stos push adc aad popfw pusha pop or test sub leave push stc xchg in jge movsl ljmp mov inc mov mov aad mov push jmp mov mov sub mov add (bad) push sbb and pushf repnz push sbbb push sub jnp aam cli neg mov rcrb jmp int3 lsl fimul pop push insb pop add sub add push xchg xchg push push sbb sub pop xchg std ds (bad) jns movsb in dec lods jbe dec mov pop out mov push mov je dec or add push xor inc mov push push xchg xchg int3 nop pop nop jnp jns cs daa xchg cmc jmp jne adc pop or (bad) or pop pop in out ret pusha pop fisub or rorb dec shrb nop add jmp in pop jno scas adc adc mov pusha and loope inc xchg stos pusha inc sbb enter addr16 or rcrb fimull mov arpl pop lcall sub insl rorl adc cs and dec cmc cltd jecxz lock jmp sub icebp pop std arpl out cmpsb dec outsl jns testb jno icebp les in add idivb std scas mov adc into push xchg push daa or push fs gs sbb push cmp mov test scas pop je xor aam leave push jns pop mov xchg mov out lea out cmpsl imul jmp cmp add out ja jnp cmp ja push sti push sub push dec or scas dec add or pop mov or lea and jb push test mov pop jmp mov jp mov sti scas dec pop or xchg push pusha sahf mov inc (bad) fistl sub adcb call adc int jg lcall push mov inc and push (bad) mov sbb es rcr jnp mov mov sbb out xor adc adc test popa insb inc fcomps pop gs stos add jmp add cmpsl les sub jl inc pop pop mov inc mov mov pop mov addl pop add aam stos cmpsl cs orl jge (bad) int3 fiaddl or fnop push mov add fildl dec or mov and icebp pop pop fisttp negb cs pop mov mov sahf xchg add fstpt push dec fstl push inc xor mov dec movsl into pop and cwtl fwait out xor ja into imul jle xchg not push lret fmul sub sarb adc roll lock cmp enter sub xchg punpckhbw outsb iret pushw mov adc loope cmp push and jl adc andl fisubr addr16 test int mov ret jmp sub stos or push sub jne pusha dec pop xor pop js mov jmp push dec orl pop xchg pop mov test leave idiv pop shl dec nop cmp xchg mov jns push in fdivl add mov push lcall push in cmp call cmp lock dec jns,pn inc jecxz add std aas scas or add inc mov popf outsl push frstor add push xchg jge add sbb bound cmp adc jge inc cmp pop andl lock inc push dec inc push and inc add push dec dec xor adc dec in inc push add jmp (bad) je adc jg cmp pop sti lret push pop xor inc push (bad) loope out push rcrb mov test (bad) mov add aaa repnz dec data16 cmp test lea sbb jp rorb xchg add sbb pusha movswl popf inc popa mov lock inc imul add shlb mov mov ret rorb fsubrs pop shr add out mov ds stc ror xchg cmp adc into mov cwtl roll inc cwtl pop add add outsb lret or or cmp sub movsl add sti inc jne mov shlb add fcomps push movsb inc jbe pop fs add pop sti lret pop ret mov stos lret dec mov rol flds or jmp add insb adc inc add movsl or pusha call stos add xchg jbe pop add mov loop popa xchg fcompl scas inc aas lds add aaa pop jne ds leave dec in inc lret divps xlat add mov daa pusha sbb popa cmpsb lret insb adc push lcall adc add mov mov xor aaa cmp xchg mov aad enter stc rcll mov sub mov cltd pop sbb or enter mov inc adc push push mov xor outsb or cmp adcl cwtl sbb pushf and inc xchg inc cmp sbb pop mov out inc xchg sbb fistl or test sar cmp xchg mov mov inc push cmp and ffree out sarl lret pop in add mov pop call and cmpb clc rcrb pop add jae hlt sahf push pop mov fwait pusha mov add inc movsb (bad) jecxz jnp cmpsl pop rolb dec js jae add adc push stos aad xor repz and fsubrl pop outsb jae addr16 imul imul cmpsb dec add xor add ret sub adc popa and outsl or sahf clc mov mov rclb jecxz ret push shrb sbb mov sub jns or mov xor scas lea jno mov and mov dec mov test cmp in andb jle pop pusha nop and push jmp popl dec aaa cmpb subl jl push pop popa in jns add lods fiaddl mov pop adc addl cs enter pop or inc push push xlat ja add mov orb imul pop in data16 ret daa mov rclb jb xor shrl or repz push hlt inc jo dec pop enter lret gs scas and add xchg lods adc fsubrl cmp fistl jb sbb clc popa mov cmc es cltd adc pusha mov aam sub (bad) fwait aad ja imul adcb cmc sub fild dec jnp fistp and fstps or sub pop lock jmp nop mov jecxz lock vmwrite xor lods (bad) xchg pop xchg jbe sbb mov addb lret dec add add mov mov mov test aad push mov jo aaa cltd rolb imul std or sub and and insl shll call cmc mov pusha push xor push pop mov popa xor add pop push bound (bad) and leave mov xor xor orl sbb std rol cmp and mov sarb (bad) hlt (bad) mov lcall cli dec ds or xchg mov xor sub repnz aad sahf mov fnop dec call add add inc aaa mov pop push mov pop popa (bad) and push pusha push mov repnz inc es jle and add pop mov popa data16 or bnd fcoms push or and or icebp jnp in add (bad) je lea mov lea push cli mov imul adc rolb lret xchg mov jl ret ret arpl mov out cld (bad) sarb adc sbb mov mov inc and jmp mov sub xchg fbstp flds addr16 stc pop outsb xlat pop (bad) pop push flds pop jnp adc pop stos out inc jmp mov and add jecxz add jo add jmp dec or mov mov cld jmp or mov mov inc xor not jnp popa cmpl es sbb fdivl mov ljmp icebp icebp add in sbb popf mov push je imul cmc pop pop cmp mov inc (bad) insb cli adcb dec cli push dec scas xor mov pop pop push hlt mov enter imul mov (bad) fnstenv push pop mov sub sub pop je movsl fisttp xchg pop dec jbe push xor bound add jns jno mov sbb pop push (bad) mov and pop jmp (bad) mov (bad) call (bad) aad sub andb ljmp mov lret outsb add fimul fmuls push xchg pop inc or stos stos or sub mov mov scas adc adc sub sahf cmp inc movsl dec cmc (bad) dec lret movsl imul mov fcoml dec shll add popf add pop add aas and dec add push adc mov xor in sub mov pop or pop push jecxz push jmp leave add sbb imul mov pop mov sub dec shl or dec rcrl stos fisubr dec cli fnstsw das push insl data16 pop push pop xchg data16 push push jmp fidivr pop pop mov push push sbb xchg aad pop push inc jg test dec push rcr pushf fisubl or or sbb xor dec leave add add xchg aad jmp xor stos mov pop mov pop sub xchg pop repz add imul fnstsw cmp (bad) je scas enter lds push cmp adc mov fidivr sbb dec push sbb jmp out jmp mov pop push or rcrb or aam out lcall xor pop jp iret pop insb hlt inc out jg pop pop fsts and int3 lret cmp dec je fmuls jmp jmp xor leave leave sub add sbb test or add test sbb out push sbb sub push dec pop dec ret and inc out pop frstor xor sub inc cmc mov sbb push xlat (bad) iret movsl mov add dec out push (bad) add es dec lods sbb add xor cs fisubrl pop out mov fnstcw and adc mov push hlt fwait arpl sbb mov lods add test cs ljmp xor jl cmpsb data16 mov icebp lods leave aam mov push mov push jmp xchg pop imul enter or loope add sbb inc (bad) ljmp mov inc add nop int cmpsb or lods xchg lea jne arpl sub add jbe pushf add pop mov push out (bad) lock xor ret jmp jmp jbe lds arpl pop fnop in clc pop jle ret rcl adc outsl (bad) das pusha ljmp out sarl pop ret or sub sbb and cmp sbb sbb add popa (bad) mov stc aad jle les lds mov cmpsl (bad) xor inc cmp gs pop not pop jle lods lds lods gs inc sub add pusha (bad) jae (bad) mov mov or pop std adc xor fsubr test pop xchg lea push mov sarl mov push inc xlat scas xchg inc adc arpl imul inc clc in push test or or sbb psubusw push mov repz hlt or push dec push fdiv pop ja lds fstps loop mov xor push fs jle sbb or (bad) xchg dec pop lret xchg jmp rorl das inc inc sbb dec addr16 push and ret push push push pop shr and out and lods cwtl or ljmp or repnz loopne pusha and sub rcrl je loop mov xor lea cmp sti dec jecxz add repnz dec jne sub data16 nop cltd lret and decb testb negl mov or jae xchg std adc es add pusha push pop data16 adc pop add sub mov daa movb push and jge lret jmp jmp enter cld jg cmpsl push fcoml test add ds repnz js add ficom aaa pop mov push xchg mov push push outsl int3 fcoms or pop mov pop jmp dec ficomp or inc pop xor (bad) add or xchg sahf add cli stc push add mov lret (bad) int or sub jmp clc movsb push xchg pop dec iret stos mov (bad) jo fcomps jnp mov add push mov aaa jbe mov jle xor xor sti sub fldl cld add jge sub rclb cmp in icebp repnz mov inc xchg mov mov dec push gs inc sbb pop and inc add add cltd imul dec mov add movsb out sbb orl loopne pop add cmc mov push dec stos jg ret scas cmp jns rorl leave imul insb pop aam dec arpl add dec popa lods xor subl cmp lock push es out (bad) aam inc add imul push out xchg (bad) cmp inc or cmp testl inc cmp in (bad) jo add mov popa mov push in pushf pop inc add cmp jno imul outsl and lret mov lods or rcrl cmpb pop cmp sti jb xor aam in fidivl mov or pop arpl fcomp jae xchg xchg add fidivl cmpsb push orl hlt adc push stos jns cbtw mov or mov adc and mov sbb and adc adc adc clc pavgw or shrb lods ljmp std je leave or jnp and push mov test nop push sub dec std mov mov sbb ljmp xor inc add test fdivrs into inc push adc push int3 repnz push cmp mov les push cmp popa pop dec mov orb cmp incb bound or scas pop or push push xor pushf (bad) pop or test sub pop lret lds sbb sbb sbb dec pop mov dec cli cmp int3 mov or out adc mov inc pop push loope push shlb or xchg xchg or call bound dec adc stos dec fmuls adc dec add xlat test inc push and dec jle add mov add dec xchg sbb push inc sti or xor mov cld cmp out jb inc add repnz jmp add push xchg lods jo icebp add xor movl xchg notl lcall pop or pop mov adc add arpl lret or mov imul push jae adc fadds push je or adc xor sub (bad) xor clc addr16 pop sahf adc movsl or orl mov bound mov add (bad) loope mov lahf cmpsb push jecxz test xor sbb and clc mov lret lcall lods in and xchg and loope loopne jg sub mov ret add inc inc cmp and mov pop aad and andl jge inc mov push je jo xchg adc xor (bad) sbb mov inc stos pop xor add add and adc xor pop fcoms lods pop out in in fdivl mov int3 cwtl xchg xchg and jg call inc and push xor pop cmp pop and push inc jmp or dec adc inc dec loope mov sub jns daa inc or push je jge add adc pop xlat xor aas push out cmp jle roll jle sbb jg aas mul xchg adc xchg inc fwait and std arpl popf mov mov clc mov or pop jmp xchg pop lods add imul mov cs sbb fcompl sub adc or pop ja sti xchg in or xor notl xchg sahf xchg xchg (bad) pop jmp outsl out cmp mov lret mov jo loopne popa mov dec mov mov das fwait mov mov or fs mov fstpt daa sahf jmp (bad) mov mov pop mov and add sbb enter push es mov sbb and sar sbb sbb test jmp bound pushf ljmp shlb mov sbb mov mov and fnstsw (bad) push pop fidivrl leavew test xchg sub push pop dec pop shr xlat and addr16 pusha push jnp mov sub stos push push cmp bound mov (bad) jnp cwtl lods ficompl daa mov push pop (bad) xchg mov pop mov cmp or jmp push addb jg push add jmp push add out or or jge adc outsl xor das lds in push in or or jecxz stos stos (bad) add adc jmp or mov psrlq mov inc push pop jne ljmp fisubr mov dec adc clc sahf or fstps xchg sub mov pop ja mov jp ds addl daa jmp jecxz xor mov pop sbb lret jle,pt lds loop mov xlat jae add push xchg int inc rcrb add enter mov shr icebp xchg pushl mov push das add sub fldenv in cmp aad push stos jmp xor cli sbb in ja sub xchg fnsave cmpsl inc mov xlat xchg (bad) add je movsb mov xor ret jne cwtl mov (bad) fild cs mov dec sbb mov scas push addr16 dec hlt into add outsl dec add xor fcmovnu xchg inc push pop out jns (bad) ds mov mov gs shrb popf pop xor push jmp rcll add test into pop mov es and movsl sti (bad) pop out sub mov std pop mov sbb rcr push inc mov mov jno mov scas mov xor insb inc dec mov aam add pop (bad) stc andl (bad) bnd testl outsl push jbe and mov dec ljmp repnz adc shr jne out (bad) mov test jae pop mov add add popf pusha sub decb repz or lods pusha lock leave fbld test push or bound or fidivr cmp dec lods dec push add das xchg dec in sub inc cwtl dec pop jnp dec adc push mov out mov in hlt mov stc cmc adc cmpl pop test lea mov and test and pop stc aad or adc and push push jl aad push add jo ja dec addl test inc adc sbb jmp icebp pop jns cmp out lret inc pop pop pop cmpb or jbe in xchg aam outsl xchg ja mov (bad) divb out (bad) pop cmpsl push scas mov mov pop xchg push xor sbb fbstp enter cs dec jmp push jne xor addl cmp add imul int3 (bad) mov jmp dec pop dec (bad) xor mov or and or (bad) sub fisttp push loope add inc or pxor xlat inc add ljmp lods and pop sub pop repnz or or dec subb pop ds arpl push add mov dec add sahf pop int3 (bad) ficomp adc add test inc dec sahf add add adc je add je mov mov xor test mov cmp mov dec sarl in fisubrl adc lcall cwtl add mov cs xchg or add jnp xor insb adc mov add pop and push rorb xor cmpsl jae mov xlat add test imull roll nop outsb jmp mov addb cli push and nop sub or sbb add test cmpsl dec or das jmp jno inc jl jo xor dec mov pop dec pop cmp or je or cmp dec lahf into adc enter or mov pop imul inc mov adc push or fsubrs dec xor test loop pop aas pop test cmpl mov sarb mov lahf inc cmp cmp cmc pop out sahf cs and adc stos in dec cmpsb pop pop and add adc push ret jle movsb xor or pop jge add and cmp add cmp add jbe dec addr16 jns push jmp insl push adc lcall nop push inc sti (bad) ss sub adc cli mov sbb pop adc dec mov nop jge mov and or add sti inc mov dec or xor inc inc jne test or outsl mov sbb or inc add imul aas pop cmpsb jnp cmpsb ret xchg dec pop jbe mov adc push push or add orl add add lds sbb das nop inc or jecxz or xchg inc jl cmpsb scas into adc mov add push push push nop lret or add stos (bad) cmpsl add cmpl (bad) adc adc jl cld inc xchg mov sub jge loop xchg aas or jp iret cmp push ljmp add xor or adc xchg out add std outsl push mov mov add cmp push mov xchg jmp js inc add loopne (bad) push lahf inc sub pushf or push xchg xor out lcall test jg xor jb xor mov enter cs push in (bad) pop dec sarb jmp cmp ja pslld jne add aas in lret aas (bad) mov xor push sub pop jo xorl adc jmp ljmp ljmp sub out gs (bad) xor cmp fisttp sbb test outsl mov push imul sbb cld dec arpl cmpsb test arpl sub notl cmpsl and cmc xor dec sbb adc dec add ja,pn mov sti pop roll mov xor push pop jge es inc adc inc cld add push push test jg bound insb mov iret xor cld mov dec or adc xor movsb adc iret xor adc mov push popf enter or jne ud2 jmp xor dec lahf pop inc xchg mov dec std jle mov mov les push mov sbb pop pop pop push jb (bad) or iret test jbe xlat aaa sbb stc add iret dec sub loope xor insl pop std loop pop inc mov cmp cltd pop hlt add mov std add jnp inc stos pop dec or imul and jecxz dec outsw and jle push (bad) ljmp xor enter iret fcoms arpl jbe sub (bad) xor add pop (bad) jae dec sbb out inc xor inc adc (bad) fcompl lret shrb and lcall nop mov test je or add inc inc jmp adcb pop shl movzwl jae jge outsl inc push (bad) and mov pop divl shl inc out push jns loopne cmp ror add inc sub pop clc aaa les xorb sub pop lret arpl add jnp mov pop fstpl dec aad and pop mov mov (bad) popa push mov push cmp cmp pop into stc aas push mov in xchg pop or mov mov (bad) clc loop pop mov test mov dec fistpll pop jecxz xor loopne pop subl cmp jmp push cmp jnp mov adc pop dec fxrstor rcrl orl xor test push dec adc insl pop and out out test inc pop test push mov jecxz lock dec inc andl add add pop push test add adc sub rorl xchg cmpsb add hlt jp mov out inc and jle outsl or daa add fistpl sub cwtl add mov movsl push mov xor push outsb aaa dec pop ljmp mov outsb inc stc or dec xor jle sahf sahf jb push inc stos or imulb lcall loopne push and add lcall cmp shl mov hlt movsl mov mov push test movb outsl push stc add xrelease scas push in xor shll mov add jg dec ret dec sbbl pop out lret dec pop pop push push inc mov or pushf push ja sti lds in inc xor sub push mov dec sub cmp repz adc push push movsb outsb xor movl mov add outsb add sub add nop adc outsl sub jp jmp pop inc std push (bad) aam rcl loop push inc mov cltd ljmp or jmp jg inc jg dec mov or movsl xor test jl push mov fbstp or or pop inc push sub jae add dec add repz mov ret mov cmp lods int3 sub repnz lock add or and add arpl in test add repnz cld mov push jns ljmp test push push sahf lods pusha xchg divl jnp pop push jb mov loop popa dec jmp jecxz jmp std cltd push adc and pop jmp or ljmp jo clc sarb cli or imul sub nop xchg fsubl test pushf outsl pop sbb and das lret data16 test in rcll or cmp adc push lods cwtl mul psadbw fdiv movsl fwait xor add bnd jmp add dec add jmp sti push cld mov lds mov adc lret sahf mov (bad) dec test mov or daa jl add xchg mov in shlb sub inc dec pop inc lcall inc add pop or sub add mov mov add movsl (bad) mov jbe lahf sbb sbb iret push in cs lods leave jbe repnz test sbb jb jno push push test test jmp jno pop setge sbb adc into icebp mov mov das lret adc sub add pop mov cwtl in and sub add in push mov pop loope scas rorb adc xchg mov add cmc or nop lahf push push sub push xor sub push push push aam mov rol mov jl inc xor insl adc repz in stc movsb mov mov das inc pusha dec pop iret call jmp mov fwait push shr xchg push add sahf cmp sbb pop jnp idivb jmp mov scas jmp xchg call jmp add inc idivl xchg nop stos data16 daa jle mov and (bad) je ja gs push adc arpl mov mov cmp cmc insl test in xchg adc out sti mov dec push inc lds out pop in mov and js out push adc mov xor or xchg lds adc push mov (bad) cmc adc dec icebp scas lcall mov stc push push add scas ja repnz sub inc sub xchg or inc push push mov pop loop aas mov stos lret negl out cmp mov sbb sbbl sbb xor out cld push shl (bad) outsl jp pushf sub movsl rcrl sub pop fwait icebp cli sub aad xchg cmc sbb cmpsb push xlat or xor rcrb sub (bad) or and push xchg fstpt xor (bad) xor push in xchg xor sub pop test xchg sbb cld ljmp cli sub inc popa addb enter movsb mov divl or gs or mov push popa jb out push lcall mov add push xor and lcall cmp pop popf dec call (bad) js jmp mov pop push out cmp pop mov mov ja shll jle sahf xor pop pop notl sbb dec inc ficomp shrb mov jg (bad) pop leave sub sub in cs aaa mov jo xchg inc mov sarb mov in jle (bad) cld (bad) ss push pop xchg add pop jae mov int sub gs insb xlat add cmp int3 jle dec nop jmp inc mov ret or (bad) mov add sti xchg sbb or adc adc (bad) daa jg imull mov das jno pop fnstsw test dec test jno lret data16 mov xchg daa jmp mov es (bad) cmc add sar loope xor xor add mov aas arpl or repz lret push mov cmp mov add add pop sub adc rcr dec jg lods xor stos mov outsb add add sbb push stos xchg mov stc sldt push and or xadd add sub add ljmp aas sub mov fs addr16 push sti dec jg dec cli pop sub shrl mov out aaa pop push enter pop add hlt jge das cli push ret add scas in jno ficomp daa aad loope mov and adc bound test add sti cmc ja scas and adc bound xor inc pop sub mov push clc sti popf jg fldcw cld icebp or lret addb jg xchg lret or adc test (bad) or pop cmp adc jae out xor push or push push push sti gs push xchg push add ljmp pop and fldl pop mov sti push jmp rol jg jl stc push lock pop push push mov or daa adc rorl pop aaa inc jns testb fwait out fs clc rorb mov jnp ljmp addr16 (bad) dec shrl rorb adc ds mov rep pusha outsl scas shl adc mov std inc int3 jbe cmc pop inc dec push inc xor sbb out lret je or sbb mov add add or jno lds mov and shr popf stos xlat pop loope loope (bad) out orb mov (bad) sub into das pop push jno xchg lods cmp int cmpl sti pop fnop push lock inc leave fbstp mov sub add out pop in dec push jmp pop idivb notl movsl jne dec jnp xor cld cld mov adc imul mov mov push or jmp ror push shl sbb imul push or out mov and idivb int3 stos push adc jmp cmp pop xchg mov dec push faddp push and push jl movsl jmp mov aas lret or leave pop cmpsb or dec nop icebp fadds out sbb cs pop out add dec fldcw (bad) repnz pop decb orl cmpsl jne jmp divb jae push jns daa shrl and pop xchg in push xchg xlat sbb into and mov in cmovno insb in inc inc in daa loopne iret xchg pop pop sbb sub pop aas push ljmp mov hlt sbb or negl xchg xlat mov xchg mov sub add add add xchg into andb push pminub movsb subb and push cld and jmp push nop xor push sbb call add cmc sub mov cmp dec aam into loop jge mov aas sub xor (bad) dec mov jbe dec arpl ret das add and fmul stc and rcrl jmp inc add popa outsb leave push mov add lret std gs or inc (bad) leave adcl (bad) cmc pop or inc sarl stc jle dec into jo mov add sti lret mov es push add jb or sub add out push push push loop add dec mov loop jmp ret sub sarb xchg into inc push mov sbb fisubr jne out test ret add sbb int jmp loope mov ja jecxz mov jno fisubl cmpsl aas sub les jge pop push (bad) loope not jle push push imul aam sti sub dec mov cmpl push movsb and push outsl xchg in inc adc std aas repnz pop subl add inc dec xor push dec fisttpll sub std les push leave cwtl add aas xor inc sahf xorl adcb sub (bad) or pop outsb je dec leave pop push xchg lods and nop pop xor add es sub in or ret test mov pop aas std dec sub idivl and xor pop std mov iret insl dec mov pop mov push ret shlb cmp (bad) mov adc loop int3 popa lock pop mov xchg in and adc sti cwtl fnsave imul cmp xor mov sar lcall shrb loopne add cltd mov jmp sub pop cmc fiadd rcrl fstps loop pusha fcmovbe lret popf clc fdivl pop fcmove cmp es out in push in cmp daa es repz xor xchg push add dec mov jp stc jmp iret xlat or std int3 imul lret test aas push cmp mov pusha hlt xor enter mov xchg mov push mov xchg test push test xchg loope scas add cmp rcll test fldl2t dec lock aad movsl pop test inc fisttpll mov (bad) or sub (bad) jbe or cmpsb xor lds push and inc xchg outsl inc (bad) jmp fsubrs pop push inc std sub xchg push push push fcomps nop outsb movsb or dec mov cmc cwtl andl cmc and out daa arpl push pop jmp push clc cmp mov je xchg mov aas daa mov add imul stos int push dec movsb xchg xchg push call imul xor jns daa mov stc out ret add add data16 mov decb lret jb,pt dec inc mov ss es cwtl adc mov das mov in add mov clc sub les sub test das or (bad) je mov jmp sub mov mov inc pop jp add out bound adc fcoml gs mov dec cwtl jo lea scas imul add addr16 shr pop xchg or add push repnz add jmp inc jge aad pop mov adc add rolb (bad) lock adc (bad) adc gs outsl hlt jge je movsl dec mov cmpsl (bad) mov xor push dec rcr insl sbb unpcklps or add sti aad push mov and ret fisttp cld iret outsl ret add mov inc mov pop repnz je lock jno push lea xor sub push pop pop test lea je lds cld inc std pusha mov inc sub inc sub mov dec add repz lea pop adc inc cmp cmp mov push ret loop fcomps (bad) enter daa out jmp push cmp sarb adc sti ret mov push jno dec mov mov fmuls adc test ss ljmp mov imul jl fwait lds lods jmp cld xor test jo repnz (bad) pop icebp push call popa pushf shlb (bad) lock pop fistpl mov push jmp jo test fs cmp xchg sbb xchg int3 add movsb push sub test mov addr16 jne add adc das insl adcl xor mov add jnp outsb push and cwtl inc lds cmp or inc push aas and mov inc fwait orb lea out inc dec fcoms add outsb sbb cmp xor sbb add pop pushf (bad) int enter int3 or mov fs and das dec add sar xor sub loope in mov lcall sbb xchg popf lea pop inc rclb cltd inc fadds push inc or aam mov dec adc cmpb jo and bound and and aam and int3 and mull shrb lods xchg cs or xchg dec xchg push lods sti dec aam je sub jmp cmpsb fmull lea pop sbb lahf cmp adc test jno xchg xchg int3 pusha and rcrl sahf stos xchg sub aam xchg call sbb or stos push dec clc ret xor lods (bad) adc cmp pop pop xchg sub or rcr (bad) push xchg or add sbb movsb or or in movsb adc ljmp lods pushf xlat cs mov or test and lcall (bad) dec cwtl mov mov or test (bad) insb leave dec lret nop inc cwtl dec mov iret push add dec test (bad) and adc or inc adc add dec rcrl add rcll adc dec add sbb mov movsb xchg jl movaps xchg adc or xchg cld add mov ljmp dec orb and clc push icebp data16 popa cld popa insb dec stos inc les lret xchg hlt pusha xchg or add iret rorl adc jno sub cmp lcall push lret test lods inc sbb seta add nop adc outsl sub inc enter les lock cmp xchg enter sti iret push push insb inc clc ljmp rcl addl or mov push xor add ret enter sti dec cmp add mov push jo cbtw inc dec (bad) les aaa inc daa movsb adc lcall or mov and jl xor fsubs dec xchg jl int3 add mov push mov mov mov cmp sbb mov sbb lcall mov loope xor or push daa sub test cmp adc sbb jge push xchg repnz cmp and add and les xchg inc pop ror mov sub sbb inc stc sub push aam std insl lock adc int3 popf mov fstp pop inc test ret pop lock test mov push cmpsb mov sti mov xchg add cmp ret outsl bound adc inc cmp sub dec and or scas pop push hlt jl push inc pop xchg sti sub push pop push or inc jb mov xor fwait das dec nop push in jb and mov movsb jno stc cltd mov push call add stc fiaddl leave and popa inc je sub push test push pusha movsb jl cmp sub stos mov dec popa pushf je push pop ret sbb popf cmpsb mov stos lods inc sbb mov or rcll inc rcr add pop push int dec mov popf add lds add insl lock enter sarl nop push inc cld test cmpsb imul pushf cwtl push xchg mov loopne popf or call xchg sbb push push mov mov mov sub sub lods hlt andb bsf mov fldcw es push xor xor jnp push fnstenv add andl sub dec add enter mov jne rolb mov adcb int3 xchg fpatan sub rorl inc lcall ret call cmpb popf push pop push jae das sub insl cmp sub in jle add push (bad) roll adc pop sub and jmp nop push aam jb daa cld (bad) xchg adc es cltd out sub mov mov nop adc lods sahf adc or ffree mov fnstcw mov and inc push jmp cmpsb add sbbl sub or scas cmp and inc mov or mov mov and (bad) lock shrb adc adc cld fwait cld ret mov jae xchg xchg xchg dec sub xchg dec or xor int je ss ret mov inc push mov add mov mov or push adc sub inc jns or call xchg adc andl clc addr16 mov pop repnz push xor add rolb xor sub aas cmp popa xchg cs pusha movb mov pop push sarb jne and fxam ret inc lods (bad) je stos xor jbe xchg lahf out adc jl inc mov push adc xchg cld add incl add rcl into add inc sub hlt push xchg or push mov mov add cmp xchg test inc or and cmp jo and and stos pop pop push xchg mov mov push insl xor sbb ficoml loop add cmpsl outsl xlat in jl sbb or stos add mov imul pusha ds pop mov push push sbb dec sub ja test nop mov add sbb jo jg push mov sbb mov ficoml outsl push push cli shll mov test arpl leave inc incl push mov xchg adc mov cwtl pop outsb les out jge into dec movsl ret push pop adc push (bad) mov mov fwait int3 pop js roll mov pop in mov cmpsb add and nop add rorb ret andb jmp xor nop cmp data16 out pop fist adc mov dec add jl insb jne (bad) call mov jb rclb add je data16 add loop loopne vaddpd out push push mov mov pop xor inc inc xchg cmp aaa dec loopne pusha stc pop mov push js or xchg outsl imul adc sbb mov (bad) mov or leave popa xchg (bad) lods lret mov mov cmpsb jns mov outsb pusha setle out cmp jmp pop or inc dec xor lods mov pop dec ja in add data16 inc or adc sbb pusha push imul aas inc (bad) xor loope int3 inc push mov xor xchg adc xchg insl test mov fcmove mov cwtl sub call or add subl je add sbbl mov rcrb loopne add push inc es or in lea add add test cs xchg lock jl jmp or jnp int mov pop pop adc test andb xor rcll xor mov adc cmp fsubrl cmp in jmp enter movsb test das inc call jb inc pop or xchg adc inc mov pusha mov scas out pop cmp push adc xchg subb gs notb adcl test pusha or mov es pop dec mov push sub sub push mov int3 mov sbb push mov push or add xchg lock or add push xchg adc add pop imul loope dec cmp push scas ds lret or xor in adc cld dec cmp inc adc imul imul enter loopne push test div nop xor loope lahf dec mov aad sbbb lods xchg adc movsb mov sbb xor faddl (bad) or enter mov jp lds xor cmp or lods cmp push outsl cmpsl and cmc and shrb cmp js movsb mov popf mov push scas lahf pop sub outsl sbb xchg jl mov mov leave xor or mov addr16 pop daa shl add scas out pop int aam xlat outsb out sahf out addr16 pusha push lods lds mov repnz push cmpsb mov jl sub sub xchg test lods in lods pushf inc xor dec mov cmp jecxz cli jecxz jo jge leave push xorl and mov lods jmp lock or or sub add (bad) dec lods (bad) int3 les sbb adc test les stc and sarb fstp or sbb adc sbb loopne inc jo popa js push pusha les or inc adc movl arpl std ficompl add fisttpll loopne dec xchg cmpsb add mov jb push or push dec (bad) std cmpsb test inc sbb js or xor idivb sarl xor inc cmp fadds xchg and out dec push push sub xor cwtl fs jne push pusha push and xchg imul jg (bad) (bad) insb lods int3 push fildl sub xchg jne cwtl xchg loopne ret add stos push lds inc or lret jo add cmc out rcll (bad) jmp stos xchg out mov mov xchg inc je mov add pop test inc mov cld lcall ss daa aaa nop sbb jae test loopne push pop lea inc xor daa (bad) pusha push push fs test iret dec inc out in add and shl dec inc test cltd sub inc push enter sub xchg pop inc xlat dec lea imul pusha or mov xor sub sub (bad) out sbb cmc outsl mov sbb addl adc call insb icebp xor dec loopne sbb js add sub cmp test rclb sbb or or pusha repnz test sbb fcoms adc xchg sub push push clc movsl (bad) movsb dec (bad) sub lahf jo ss sub lret jo mov xchg bound or fs int3 movsb das dec je cmp inc lret shlb hlt and add jp (bad) lret push testb ss sahf (bad) push rcr xchg mov outsl andb ljmp jns ret adc pop sbbl xor or (bad) adc pusha add push xlat jo js sbbb xor push outsb out add adc mov xchg shlb jbe mov inc jb jo dec in push sub xchg movsb sti add mov pop jnp adc and add adc dec cmp int lock mov sub js cld sbb sub or popa sub dec mov in jg push fnop cmp in inc mov xor das sti mov mov add cltd xchg push test xchg out je lahf stc add mov fsubrl inc xchg dec les pop daa xchg ret test movsb lcall push addb stos adc int3 test les inc xchg sbb adc inc jno mov add jp imul dec inc pushf sub adc and xchg data16 add xchg or inc jae mov push lods add stc mov out and je ljmp mov xchg or xor add daa lret fdivl inc or outsb shl sbb jl es xchg sub xor cmp fwait cld jecxz clc and xchg in mov and adc mov dec outsl mov movsb stc dec in jmp ret mov sub and push and jno (bad) push add sbb sub dec xchg mov fcompl data16 es pusha and xchg rcrl daa ret push inc iret popf or rcl insl sub adc dec lcall leave mov sbb dec sti (bad) popa in fs push cmp in adc or int3 test jns or mov daa mov add push inc fwait cmp xor ss pusha mov mov in (bad) shlb jno ljmp sub sub leave ret int3 xlat adc ljmp cmp inc lods jo pop incb sub jb in sub mov (bad) (bad) dec rorb pop cltd les leave and add ljmp dec adc or jle lock ror enter or xor sub lds shl mov cld das add inc cltd pop ds and pusha dec sbb aaa in sarl xchg mov out jo imul popa dec adc aam mov stc cli test mov push insb insb xchg loopne sti cli icebp or fldl2t rcrl int3 push test enter jno mov call mov int3 lods inc sbb arpl leave in test dec xchg ljmp inc enter add and ljmp add xchg cltd add clc negb push pusha inc cmp add les call cmpsb enter ret jnp loopne or (bad) (bad) pusha jbe ret test mov mov mov adcb mov mov mov leave fdivrp ret jnp frstor mov mov aam sub push sub sarl outsl sub fnstcw int3 aaa rcll in and fwait cmpl dec fildl adc push ficomp xor outsb jns insl mov or jecxz lret ret dec sahf out fldt jnp stos push arpl pop popa test loope (bad) jo pusha pop and inc add sub dec xor dec repz inc mov push pushf adc inc push ljmp add cmp addl inc or sbb out (bad) je mov add (bad) cmp xchg push popf rclb addb insb in and inc push inc aaa or inc cmp cltd ss outsl ret add (bad) jo call andb es mov jmp jmp sahf adc lods sbb scas xchg add arpl aad subl cmp sbb or add fwait lock es and pop mov and sub imul inc pop and arpl hlt lret xlat rorb sbb popa cmc cmpsb jmp aas sbb sub fbld inc push mov iret hlt mov pop xchg mov cmpb xchg cs clc add jns lret and push dec test xchg add add fwait lods sbb mov add popf out cmp inc nop inc bound test ror xor andl inc je leave mov lods fstpl sub add pop push aam lret jl outsb push mov jb ret packsswb jae daa sti jl movsb enter pop lds mov adc sbb addl shrl and mov enter jmp popf xchg loopne out pusha dec xchg lahf mov inc mov (bad) adc mov and push test jns aad lret pop inc test jge outsb ret and sub add jns push push mov push mov pop hlt outsb sbb movsb and dec mov jp push and xor mov xor cwtl add sbb enter shll xor mov dec faddl ss pop push jle sub cmp mov lret cmp sub push stc dec adc sbb sbb addr16 adc aaa outsl jae jae inc add enter subb adc shrb rcl dec and push fs test sti jge in decb push xchg nop pop faddl mov sub (bad) paddq adc jno mov addl dec leave rorb adc add imul loop xchg cmpsb cmp hlt pop dec jno and add adc (bad) add outsl cld xchg int jno add insb adc cmc xchg je mov lcall test stos xchg adc or add repz dec push cmp adc pop or xor sbb xchg mov stos xchg push adc mov repnz ss rorl fsubrs mov repnz add cmp test sub pop in xchg xor pop push shlb cld pusha ja in lods addb inc xor arpl add jo xchg push mov adc ret cltd mov sbb or fsts fs nop bound arpl add jae and sarl sti hlt dec cltd lods and adc aas fisttpll pushf (bad) and cmp and cmp xchg mov stos jl ds sub xchg scas and dec aad test adc (bad) fwait shlb push hlt dec jae dec fs add out jmp outsb add or sbb enter add push cmc jo mov mov push fsts test push mov mov mov add idivb and adc mov add test add jns jbe lahf mov sbb xlat pop xor (bad) mov mov gs inc cmpsb sbb arpl add stos std mov in or add jp movzwl and ret lods ljmp or adc fisubl or or imul push add insl roll mov dec popf lds test scas aad lret inc pop mov cmpsl aad pop xchg aas pop mov fadd aaa pop cld pusha je cli mov pop add es fcmovbe loope jb jmp cmc rcll lret xchg xor pop test test iret jbe fldl push lret rol add lret push xchg inc cmp ret hlt mov add xchg rolb stos fwait mov mov mov or pop cmp dec jno pop xchg fisub add xlat mov mov in sbb (bad) arpl lods xor and adc (bad) in inc subb popa mov es and (bad) je sub inc daa movb popa cs les and loopne call loopne inc rolb loope sub and in or int xchg xchg sub pop sbb cmp cld inc xor cmp add outsl xchg mov (bad) fsubrl loopne in mov (bad) jb cmp mov scas or inc in xchg outsb bound dec adc add jle pop shrl push stc add add int stos jg and inc mov frstor pop notl (bad) loop add pop sahf mov add sbbl pop push pop cltd insb push sbb sub xchg les in inc cmp add lds (bad) and push mov clc lret in lcall adc adc xchg ror nop mov cmc and xchg aad sbb loop bnd cmp and mov pusha pop cmp xchg lret cmpsb add mov cltd cld and adc sahf xor das fsub cli movsb aas div cmp push sub into add (bad) loopne jl (bad) pop mov dec pop inc mov push bound xor loopne xchg stos sbbb jb ror xor adc lret push push add aad out loop mov and mov xor adc mulb cmp cmpps test mov test imul mov cmp dec inc das sbb mov adc stc test xchg test mov mov or mov inc push inc mov pop ret adc jl xor pushf fldenv insl (bad) xchg fs or xor add push (bad) int3 fcoms jb adc pop lcall in vpunpcklwd push aam mov inc cmp cmp mov stos or mov lret mov adc subl hlt pop jns add les adc movsb mov mov add mov js hlt loopne xor outsl mov xorb sbbl lcall je mov enter (bad) push pop jl inc mov cltd adc sbbl add mov cmp mov add pop movsb rcrl pusha jo mov adc leave imul aam and stos js cwtl test rcrl pushf shlb roll mov popf fldcw call aaa dec test adc push outsb aas jnp sub sahf imul fcmovnu lret mov (bad) les aad ret lret pop addl inc dec and adc enter add add fmuls xchg es sub scas gs arpl push xchg shll div (bad) dec fimull arpl rcll shlb in popa in loopne outsb nop in inc je lods andnps inc mov cmp or rcrb ja test jmp and lret push add es sarb std jl cwtl sub enter in inc sub rolb mov aas aam mov arpl push and data16 or push fstpt push int inc add ret xor test loopne xchg inc int3 leave js or inc mov adc sbb test jmp dec mov add pushf adc ljmp or xor pop cwtl in leave cmp pop adc pop imul mov test in adc cmp and pop sub mov jno mov pusha xor push loopne loope push cmp xchg js sub addb add and push scas arpl dec es lods and mov cmp cmp and pop inc sub add add push cwtl std xchg cltd sarb pusha stc jle sub fimul lret test jecxz dec add imul adc jecxz mov ret jo addb add add mov mov and jne add repz mov jecxz imul faddl rclb cmp and (bad) ficom inc in adc sbb inc cmp stos dec cmp pop push adc cmp ret stc mov cs add loopne mov inc add adc imul sub add jmp stos and add cmc fistl adc into xor jns cltd pusha cmpsb les pop pop lock lret and in add add add xchg outsb bound loopne cwtl adc dec roll fdivr and sbbb pop jbe xchg pusha pop mov lcall iret push out mov mov adcb or xor mov mov cwtl adc in add mov hlt sbb xor pusha jno sahf stos add dec adc arpl fs jmp ret mov popf rolb nop dec add push inc mov add add dec je imul ret xchg out push sub mov add loopne icebp add push rcrb push aam or mov ret sub push mov pop xchg loopne xchg adc sub mov insb cwtl xor push mov or jl add pop push jmp cli pop fwait sahf movsb dec mov and dec movsl es stc in idivb adc mov and (bad) sub jbe adc dec fadd loope ja sub mov pop jge mov jnp and xchg mov add push test pop aad inc and xchg mov cmc dec or adc dec imul fs subl pushf adc rorl push fstl popf add aad test (bad) out cli mov mov mov loope nop sbb icebp push xchg aas out pusha jl mov mov hlt dec sub xorb or add and int3 (bad) sbb aaa test xchg sub inc cwtl cmc add movsl popf push cltd cmpsb fs insb mov shl fucomi adc add mov jg inc pop leave xor ret hlt sbbl mov or push fistl dec jl jns add ret jno add sub add add push mov int add scas fldt dec mov call (bad) lret or mov dec push dec xchg adc xor subb daa sbb jae dec popa mov test sahf int cld ficompl leave cmp dec movsb lods fldl mov jo cs push and int3 inc pop inc popa fs adc fs fist add and roll lea in add ss aas js es adc aam fadds arpl xorl popa cmp clc lahf loop cmp add xchg push add jae cwtl pop mov icebp int3 lea xchg sahf or lret mov in xor js lret subl push push cmp subb sub fiadd inc mov js sti outsl pop add xor dec nop pop sbb dec push or mov inc or pop shld xorb push adc mov or mov fcoms jae (bad) xlat pusha adc and enter aad and out leave jge sub inc fidiv and jne leave cmpsl or inc sbb (bad) pop daa mov je xor cmc cmp test aad imul lcall and push subb dec in and xchg sub popa push pop in and pusha faddp (bad) adc push loop jbe addl jmp movsb mov mov or jb test cltd mov js and fild cmpsl and push adc dec mov jnp insl mov lcall cli aam lock (bad) pusha xchg add int3 sbb and or xchg icebp jle sub das mov ljmp outsb and das sbb dec outsb or dec and add pushf out push imul inc mov pop lods push xchg hlt rcrb int sub lock push xchg (bad) and rcll rolb mov pop push and pop or (bad) mov jecxz mov xor inc mov add (bad) sub or out jl aas sbb cmp or lret lcall test icebp add lahf out cmc adc jnp test pop jae jl xchg rclb int add mov leave fs fadd pusha jno mov imul subb cmp faddl or (bad) out and mov add adc je lret je pop add mov cs pushf dec ficom int3 movsb sbb cmp outsl add cs or jp,pt push fiaddl hlt daa (bad) stos xchg adc aad ret or add test pop jge leave add pop dec mov rorb mov and mov cmp xchg sub and jle xchg loopne mov das and inc mov nop clc call ret xor in das mov movsb cmp lret add mov outsb loopne add or push mov icebp push lods cs and jb xor push inc int3 adc inc test mov andl cmpsb (bad) cmp or inc xor pop scas aad fadd shrl pusha xchg mov popf inc dec push and les xlat fdivl outsl repnz test push lahf and dec out nop push lods loopne adc in loope and daa add paddb aas dec or add rcl insb scas mov jae or aam outsb imul sti js leave add inc call mov push es push inc adc jl call pop adcb ret movsl addps and push lds adc (bad) xchg cld xchg add ljmp xchg cltd and adc fistl jns dec mov stos lret inc sub cltd or out push lret sub les bound mov pop cmp push test sarb cwtl pop and call pop (bad) sarb cmp lock fsubrs fiadd stc add hlt popf or xor add xchg cmpsl add and mov fs inc ljmp insb dec outsb mov or push push cmp pop bound lcall rcll enter jmp cld js push sub iret xchg or push les jb or push data16 addr16 call push fmulp mov into inc test fsubl xchg add mov sbb repnz (bad) out or push cld rolb cmp and adc ret dec scas lret cld cmp jg or jo push adc sbb (bad) stos add adc inc jge cmp cmp cwtl pop jo stc add jno mov fldz (bad) mov loopne nop cwtl mov and mov add xlat xchg repz pusha and mov add xchg data16 push test loopne movsb daa in les xchg test push das cltd pop shll shrb movsl lock sub jo and clc and pop das ret pusha outsl fs fsubl test and add addr16 cmp and popa mov lods adc jecxz xor stos push jle clc mov push pop lcall fdiv sbb dec iret andb mov jo ljmp or shll push sub mov adc cmc push test and add outsl jb cld jmp (bad) lret adc ret enter inc jns cld clc adc call rcll mov sbb pop out add sbb mov push xchg mov aam ja test lods lods rolb mov leave add pop cmp jno jns sbb daa js les test loop das shl xor mov mov mov fimull idivl cmp call push mov test das test inc pop and hlt and cmp or cmpsl mov add sub adc mov (bad) pop mov xchg add jecxz or les call cmp inc je and dec cld push inc sub cmp add lods test je push add adc out push test push inc lods xchg push xchg fs int3 nop inc pop insl clc or sbb push clc mov test inc repnz or xchg inc sub add popa lods cmp add inc pop push xchg sub (bad) popa and popf push adc ja push or (bad) mov loop ret aaa rolb dec and ja les push out inc outsb and fiaddl sbb (bad) jno or out pop faddl sar rcr dec pop lret and mov cmp xchg sbb add mov sbb jne (bad) adc push mov mov (bad) xor add js add mov lret and sbb js mov sahf pushf or cmp addb ret fcoml jecxz cli bound lret test xor push xor insl imul loopne mov push sarb sbb sub fild jb (bad) fsubs ds int imul dec jle imul add out fadd cmp aas mov push lods jo (bad) lods leave pop mov dec mov cmp jmp (bad) rcll pop sub shrl das add push mov sub push add pop sub push push lret inc enter or add pushf jns or dec outsb cld es mov clc adc mov fildll (bad) iret push xchg out xor mov mov add jecxz int3 adc push xchg roll leave fs gs mov stos mov pop loopne incl mov iret sarb test push mov jne dec push cmpsl pop xchg sbb das pop add add test mov insb mov push stc cld push sahf aad daa or test xchg or sti in inc loope jns add test iret jno sub fcompl jo add mov aam mov js add sbb sub cwtl dec or cmc cwtl (bad) rolb or fcomps nop or imul mov pop mov (bad) stc lock test ljmp push dec (bad) lock push loop jmp stos cltd mov shll (bad) xor clc fsts sub mov cs xor cmp jae test dec fiadd sub pop and inc hlt xchg inc inc inc cltd add adc sub push pop sub sarb inc jno in push push sti ss lcall or add adc mov mov test popf inc add hlt jno fwait push popa and adc rorl xchg test xchg dec xor add dec fs xor lods orb ret add xchg sub sarl adc adcl adc pop mov fwait cltd inc add push into or out das xlat ds cld and sets xlat push xchg or stos popa adc xchg mov push xchg pop call pop test les cs sbb aas mov and sub adc out cmp sub les add addl (bad) je fwait stc ret aas mov xor rclb push in xchg shr cwtl dec in xor sti pusha mov ljmp lock mov subl aam loopne or push jmp movsl sub inc cmp fcompl inc popf sar fiadd mov sti enter pop outsl or mov add outsb sbb insl and sbb push jge insb and jo or sub cmp in sti (bad) xor loopne cld jmp adc sub stos ror lock ljmp popf loope out pop cmpsl jp lds add push cld mov fnstenv in add lods popf mov sub nop lock rclb loope sub addl dec loope adc ret ds mov movsl jno or cmp aam xchg clc aam add push inc add jbe or test and movsb aas cwtl daa dec add sahf xchg jp rolb pusha add and mov rolb adc push adc (bad) bound in js aas lods cltd clc inc cwtl andb mov (bad) jae pushf add or les bound lahf push push popa dec jmp xor jnp cld (bad) rorb add or and inc push cmp jp push sub cmpsl shll add fwait inc sub mov dec movsb nop mov rcll das mov imul lock sti cmp bound xor push fs add xor int3 out sub in xor cmp pusha gs inc xor xchg mov add adc imul xor pop cmp popa push or cld xor xor or add shr push xchg ds dec xchg mov clc aaa xchg push mov and jnp inc faddl jae (bad) hlt push adc cmpsb rcll (bad) sahf popf xchg add pushf (bad) enter call push lahf push add inc cmp out and les push sub pop pop pop jecxz iret xor call sarl fcmovnbe dec lret hlt pusha and add sti mul (bad) leave xchg fprem push movb and lock or add add ror adc add lea or int3 sub fsubrs pusha movsl mov inc and addb xor jbe jne rcll push fmull call add jle loope jmp or xor test mov pop mov lret repnz test lods adc pop jno orl or add push arpl in mov add jge mov pop fs pop in inc nop push dec or test movhps mov jo push inc or xchg push adc popa fsubl and aas adc pop (bad) dec cmpb pop call ret push jcxz cmp xor test add or xor clc or cmp or adc or or aaa or pop push ljmp mov sub xchg mov fwait jne sub rorl add sub and fprem1 mov push or cmp xor add xlat add jne inc hlt inc in (bad) jo add push std dec add pop enter ret and pop call adc sub cs fwait ja push gs fild cmp push jecxz mov push pop or sbb cli push pop jo movsb jno mov (bad) call jo arpl mov das add and and inc lock leave add aam push loopne jb adc imulb and inc outsb mov push pop test push rcll inc mov add pop or sahf jecxz sub or adc cmp popa shlb scas test mov flds add jb cld pop adc hlt dec and test lds test hlt add inc pop (bad) fildl xor add xor hlt and mov dec pop repnz movsb adc aad scas jp mov pop stos mov mov mov dec cmp pushf mov sub mov pop pop push mov scas push je lock fs dec aad cmp jnp hlt inc sbb cltd add inc loopne xor pusha adc rcr sbbb dec xchg push mov push cltd clc insb and adc cmp cs imul add lods and pushf add xor push or cld push inc adc add mov inc mov es xchg or mov add adcb add pop pop imul lret in and scas loope pop jns aad or or or xor add dec jns xchg and xor addb add cmpsb (bad) jno dec mov sbb xchg pop leave out roll std popa mov dec or pop (bad) add xor pop inc sub inc arpl aam int3 dec jb xor lea sti mov aaa xchg loop pop mov mov ret ret or and add mov mov push xor or insb xor adc fsubl jns ja add sub or ljmp xchg je xchg dec sbb sti out pop popa ja pop jae xchg xchg sub int3 hlt repz sbb fist lret loopne cmpb jb mov xchg mov add pop push idivl adc pushf xchg xor mov addb push inc and sub mov add pushf rol xchg ja lds adc scas cmp jo add inc fcomp push ljmp sbb imul or add into test ret xor jo sbb cmpl mov test bound add pop pop mov pop add aad add push add cmp jno ss mov and and push loopne insb rorb (bad) xorb data16 push xchg pusha inc push stos push mov or sbb loop adc (bad) lock call mov fadds repnz mov pop clc cwtl add jne xchg push scas fsub rorb mov push cmp push call push movsb dec pop push addl shl push xchg movsl cs xchg cwtl or fidivl and push push hlt lahf fptan or jge mov adc inc loope push xchg add push cmp adc stos add jne mov push mov mov sbb (bad) clc cltd and aaa hlt or out dec mov pop inc jp divb fs push push mov dec fwait cmp sbb add dec mov sbbb test jbe sbb inc mov mov sbb iret cwtl sbbl gs inc fisubrl sub cmp loope gs dec cltd mov fisttp inc sub or fiaddl rclb inc bound mov sub das xchg lock adc push mov (bad) int lcall js mov mov add stc les or rcrl insl addl mov adc adc sbb cmp jmp or subl pop test test or add stos test pop adc add dec mov add clc mov xchg add bound ret sbb sti dec add jns scas mov cmpsb or cs jae add mov dec xchg or lahf cmp mov mov dec cwtl call in aaa dec ret xchg fs (bad) cmp jg,pn sbb or and add std push sub lea test inc ficoml inc sub inc dec dec or add scas aam add sbb inc add jne adc pusha jae mov insl add mov inc clc dec nop fs add mov add gs adc (bad) mov dec hlt jnp jo mov loop push lods nop les popf imul mov rorl (bad) mov push nop push add leave scas xchg mov and arpl xchg jge sbb into nop xchg imul dec fcoms and mov mov push aas xlat push les cs enter lock adc (bad) fsubs sub dec data16 arpl nop imul jbe (bad) mov movsl jo dec mov jb or clc call add push (bad) lods (bad) cmc xor adc movsl lods (bad) add or add mov out popa dec movb mov mov jl add xlat jae sub push sti add pop adc addl and roll dec scas mov rolb pushf imul and std int cmc inc cmpsl push jbe sti lods push imul push icebp add or addr16 cmc mov scas sahf gs jns mov sbb fbld sub andb and mov jae push xchg pop bound inc fmuls insl sbbb push scas dec into pop jl push or aam out ret test or jae (bad) arpl sbb aas dec adc pop and xorb and inc dec (bad) gs cmp mov imul xor bound jbe sub call dec add fcomps mov lods adc adc and dec dec cwtl sbbb mov adc push daa bound add cmp rolb lret cmovle xchg mov jl sbb pop jb or loop dec test add jl mov js rolb out mov call in cmpb jle inc nop mov and sahf or xchg inc pop add or dec inc mov jns aas je lock movsb fwait stc inc bound (bad) dec jge add int3 cld dec das fsubrs into test xor pop jo and loop jp add cmp scas mov idiv jbe gs xchg out je inc jo fbld and pusha xor adc mov adc push dec and xor jb fmulp imul ror add mov push (bad) mov daa cs repnz testb xor xchg fsubrs and and jns add dec or adc mov sub push sub (bad) jne cmp and pop or lods jmp out xchg sbb inc lock or rolb sub (bad) nop lret repnz shlb xchg add inc stc popf pop or lock je or nop jbe mov sub jns mov dec push sub fimul gs jo sbb popa push cwtl or pop add rcll jo xchg xchg mov lcall pop movsb mov nop insb fs je sub loopne push jno mov icebp aas xchg pop es or aas pop mov js mov (bad) roll dec fs pop inc das lods add dec imulb ret rcll roll mov dec and iret fwait rcl rorb jns das data16 nop jo fidivl (bad) xor dec fwait adc loope dec call addr16 or popl add out aaa fnstcw out adc in int pushf and or sarl inc into inc ret sti mov test dec mov fwait and mov push in add dec jl or pop mov jno inc insb ret test sub mov loopne imul arpl test cld mov mov mov repnz jnp psrlq gs adc add pop sub mov dec dec test cwtl cmp mov or ss popa roll mov and sbb (bad) stos dec push add pop nop xlat bound add arpl jp repz and adc pusha sahf push je fiaddl andb popa scas add bound (bad) cmpsb lock gs cmpsl mov mov es aaa nop add (bad) and lcall dec and rclb or lock pop add mov and pop movsb cld std pop mov jae pusha add fcoms repz and add mov mov loop sbb mov push add jp and jmp push loopne inc dec sbb xchg int ficompl jmp inc pop add sub cwtl inc int3 adc sub mov js sahf add cmp inc test cs cld dec inc and test pusha xchg cmp les and xor xchg (bad) int3 adc je pop popf sbb jbe cs bound mov dec fdivs pop and dec xor decb lcall push test inc xor rorb sarb inc cmp mov lahf movsb adc xchg adc xor mov xchg adc sub mov mov dec mulb push leave mov mov sbb cwtl pop push mov cmc push mov fwait and mov loopne ja scas test pop jns mov repnz dec cmpsb enter pop jl mov jno add cld push cwtl stos xor mov loopne ret test leave cwtl pop bound cmpsb mov outsb jb sub data16 dec cmp mov lea mov in mov xor push add mov add push inc jp cmp sub outsb xchg add inc jno adc call movl gs jecxz push jo ds ljmp dec call test xlat imul jbe sti xchg js (bad) cmp pusha adc mov sahf mov mov push (bad) push or xchg movsl aad mov inc stc mov adc addr16 xor adc inc jb push (bad) jae je jecxz lcall xor mov xchg sub inc popw xor inc cmp dec test pop or (bad) nop inc mov sub les dec fisubl jno push das jp dec int3 and sahf arpl shll test inc icebp adc inc (bad) imul mov cmpsb sub nop inc lods bound mov push les or loop,pt jmp add hlt dec stc add jp pop sub jno,pn ficompl push loope jnp aam cmp push push cs push mov fwait int3 add add sub push push pushf les push cld in or cmc sbb or mov add jnp into fmull arpl add cs push rcrb mov pushf add sbb and js and cmp push fadd cmp (bad) xor popf subb pushf push mov adc pop das aam addb and mov enter shrb mov lcall xor add push fwait je push push mov adc mov ret and sbb push outsl cltd int3 pop xorl and adcl add cmp mov lock add imul pop icebp lds adc scas jae orl pop loope jl push and ja std inc imul sub test mov sub outsl orb inc xorb out clc pop fs xchg or popa cli aas jp add jg push or lret dec mov bound and dec add lds pushf bound sarb mov rol fwait aad fistpl enter jp repz or test hlt imul lahf rcrb and enter adc inc (bad) pusha ficoml or in dec (bad) jle xor xchg or in mov xor lods cmp sti dec out (bad) xor push add push hlt inc mov xchg pop adcb push sbb jl pop add dec or pmaxsw hlt add mov mov xor out lock cltd lock int3 push add in rolb mov fimull (bad) sti pop xorb adc lods aam mov dec mov jno adc test cmp pushf inc enter cmc (bad) clc inc push lret lds ficompl dec pop add mov clc cmp or ficoml seto fld adc gs addb and push nop or cmp loop mov stc popa ret push lock xchg clc test cltd lock mov cs and sub push pop fwait jge inc or cmp sahf cld add imul mov jp push xchg popf mov xchg pop add icebp jl xor or or inc nop push sbb dec ds lds negb add jp scas out pop lea wrmsr test mov bound in (bad) hlt ljmp xchg add (bad) shrb jl sub add nop dec movsl push mov or push fwait xchg adc cmp inc int xor gs push loop adc xchg and popf imul pusha mov mul and inc mov pusha xchg inc call in jno or icebp in and add cmp lods mov sbb fidivl jae nop or lods mov or sbb cmp cwtl stc pop sbb nop pop inc mov dec fsubs mov loopne lahf mov mulb popa in insb loope stc push inc and mov nop clc mov stos test or nop dec ds add pop daa jo clc xor sub mov and sub mov push cmpxchg outsb ds loop push dec cltd dec faddl adc jp and adc mov pop gs lock lods mov sbb mov inc push xchg enter push inc rol xor pusha aam idivl in or arpl push xor in mov in sub xchg aaa lret add cmp add or xor outsl sub or inc bound adc inc mov and dec fsubs hlt xor dec cmc into fildl ja cmpsl xor push pushf lock sbb in mov sbb mov or clc inc rolb dec sahf sbb arpl bound sub xchg xorl pop add add je or enter rolb adc dec aas neg adc push cmp fcomps rolb jo add xchg and jo fnop jle (bad) jbe iret push sbbb fisubl inc int3 aam minps dec push push fnstcw mov repnz xor shrl aad xor inc pushf sub cmpsl dec xor sahf pop add mov jecxz push cmp faddl pop icebp leave cmp or lods bound fildl popf call mov cwtl xchg or gs in cmp lret cmp arpl sub enter js push push icebp negb push int3 popa loopne pop add stos jbe cmp js add rcr xlat pop mov add mov lret mov cmovb rcll pand mov mov jns or incb popf ss sbb mov sbb scas roll fsubl pop mov add push aaa dec sbb fs mov inc test dec cwtl add mov cmp movsl mov and and dec mov lods adc mov shll adc into mov and cmp and popa in seto inc clc mov adc jne data16 (bad) je mov add or xchg push pusha xor in xor dec add jge pop jg dec adcb sbb xchg cmpsb cmpsl cmp pop int push lods (bad) adc mov cmp xchg iret stc aad push or adc or dec inc sub cmp imul daa loop add clc fmuls jl jge add lret xchg xor jns xchg dec and fwait es xchg iret mov mov data16 mov (bad) mov pop adc lret push add dec mov pop xchg adc xor cmpsl cmpsb cmp pop mov mov outsl or jno movsl cld imul cwtl push je hlt popa rclb xchg js xor jae jl test das call mov push or xchg leave cmp add aad int mov clc jb flds mov mov mov inc mov test cmpsb xchg bound and adc adc cld js rclb or std sub add and sub mov xor add sub cmpsb sbb mov sbb dec pop sub (bad) je mov mov xchg ret add gs jo popa adc sbb cmpsb or frstor add lcall jae xchg lahf push xchg inc add repz mov mov enter xor mov jo dec pushf sub fwait jmp mov cmc xor push jecxz pop pop xor ret mov jb cmpsb loop and in int3 (bad) pop inc int3 inc add xchg outsb ret mov adc add sub adc push mov minps sub push outsl lock shll test dec xor adc popf mov cmp mov in pop pusha adc lss negl icebp add stos cmpsb sub sub jb or jl fldcw negl aaa mov add call xchg (bad) jle rcrb and sub xorb (bad) jp dec (bad) adc jle,pn in mov xchg andl dec cmpl in sub (bad) into int and jne imul add dec add xor mov sub xchg cltd test xor cmpsl pop fbstp jo int3 adc bound test or jg or mov mov call push outsb inc (bad) or in cmp push aam cmp loopne push and push mov into xor loop stos scas xor xchg fstl nop bound dec dec lods sub in mov dec push xchg sbb and pushf and dec or stc icebp mov enter push in mov fisub rol stos pop mov jmp cmpsb inc aam test pop fist pop jnp ffree and jl dec xor pop hlt pusha aad jne sub pusha cmpsb call add out int js sbb mov fdivrl shl mov jp jg jle pop or pop mov out fs adc insl push mov push pop dec push hlt nop mov mov add cmpsl in adc out enter sbb jo jecxz fsubl jno dec loop enter sub or ret lea iret rorl cmp xor cmp decl sub cmp imul push aam push push (bad) out les add shrb mov rcrb fdivs inc jbe mov jmp sarl mov jle push pushf and mov sub pop pusha outsb mov lcall (bad) xchg mov xchg insb xor sbb jnp ret xchg push pusha adc fdivrs (bad) add aaa out dec ret pop add jno test and jne ja pop adc lret in (bad) icebp mov and cld sbb inc or dec out lods add cmpsl mov pop addb rorb sbb addr16 movsl sub or add hlt clc rcl cmc sbb lds fnstsw rcrb lods fiadd xchg jne jle adc int add fistpll or stc decl xor scas xchg sub or out cmp mov enter scas enter push js add push cmpsb sahf sub jbe,pn xor mov and loopne roll andb insb cmpsb xchg mov xlat dec and test ja mov jg inc xor adc aad stos scas pop lcall lds xchg jo stc mov fsubr mov nop add sbb add cmp imul cld xchg mov into add mov int3 and add lods jae mov or (bad) notb iret add inc pop xor cwtl mov pop sub addl mov ret add scas and movsl cmp mov jo popa jmp inc test ss aas lods lods dec mov pop ret out jo movl or loopne ret push lods push jo aad pop mov js xchg adc stos dec sub in add push bound fdivs je jo add jnp mov add mov add xor iret xor decl jns es jns sbb pop fnstsw mov push cmpl jge add push push lret gs insb movsb fprem scas pop (bad) cltd inc aas cmp stos mov mov bnd and lock js inc sbb jge mov xor push push sbbl or jns pop test nop lea into (bad) pop clc loop int3 push adc enter ret mov mov add jp jl jbe out cmp mov insl inc ret movsl arpl psrlw push sbb add fs and add cmp test sub and adc lret dec repnz push fs mov sub pop xchg lock shlb cwtl xorb push lcall cmp and ret movl jbe lock nop insb ja pop stos or mov cmpb or jl sbb sarl aam aam insb cltd test ja and popa inc push in lea jge subb movsl push push sbb movsb cmp cwtl jo fs pop imul call iret sbbl lock cmpsl pop adc hlt fs insl xchg mov jno inc mov pop pop add imul sub mov lcall pop and arpl insb sub and push xchg push lock cmp adc pop divl (bad) fs es (bad) nop sbb repnz aaa leave lahf rolb fdiv or mov add sub mov push adcb jns pop sbbb or test pop mov xorl pop mov or pushf pop or sbbb xor mov sbb es ret add daa jno or jne out fsubs lods push cli rclb pop aas inc sbbb insl mov jae or daa mov jl mov sub pusha push cmp out pop dec xor add ja shrl in inc or imul icebp arpl add add call clc dec nop and mov sub rcrb clc xchg adc xor in push pop adc nop push and push mov dec jg test rcrb cmc fildl in mov test jo adc add pop fnsave and adc jle fs or dec jo mov mov xchg fisttpll and push rorb push (bad) mov jp add dec (bad) mov pop jle xchg enter dec aas sbb sarb pop fistpl jmp (bad) call shlb mov add stos int3 inc pop repnz enter dec pushf sub or out inc mov inc add push adcb mov iret adc mov push add dec pop pop push leave pop xchg cwtl pop inc xor add mov inc sub (bad) adc cmp stos cltd dec movsl sbb es mov dec or in insb xchg imul in shrb fnstcw les xchg repnz add push inc mov mov xor mov xor fstpt mov fsubs pusha in je and test addl or adc jae,pn xor nop faddl pop push test cmp adc sarb add dec jle jge scas jo movsl add repnz loop fs and mov out imul push lahf and jl pop pushf inc lock mov aam mov sbb roll repz add pop or jmp arpl pusha fstl add mov or daa inc clc and adc pushf fcoml push ljmp or daa or test icebp call sub sbb inc pop and out ja add xchg decl loopne adc pushf imul clc loop enter pop (bad) lock ss add push scas fsubl xchg and pop pushf mov aam les push mov pop dec int3 test sub jecxz fldcw or inc adc jmp fsubs sub aam aad and push mov clc sbb push or sbb hlt jo add add xor imul pop test mov in rclb mov lret das mov dec popf ret mov addr16 leave inc xchg sub inc add jo loopne and sub mov sbb rorb xor pushf inc outsb mov or rcrb mov movsl inc jecxz arpl pop mov push iret lcall jns cmp stos mov movsb pop test or rorb and lret (bad) jo je mov daa sub aam or test pushf fimull sbb adc icebp cli dec dec int3 cmp inc mov es orl mov push enter stc loopne cld popa in add nop and cs pop faddl fcoms and mov outsl sbb adc xchg (bad) movsb (bad) mov xchg mov push xor fdivrs sub test fwait mov add test adc push add push inc out cmp add xchg pushf xor in inc add mov or xor std hlt sub sub jmp addb xor outsl xor jp cmp clc cmpb pop jle xchg inc in or mov and fistp js dec push cld cmp xchg mov movsl xchg clc inc test xchg mov outsl xor push rclb pushf inc and je nop xchg adc mov fnstsw andl scas or mov or nop fisubr jns rorb cwtl pop sub cmp xchg add and and mov xor in push js lea and shrl cmp add dec dec fistpll pop paddsw push mov lock ljmp sbb andb mov mov ret ret jecxz or mov jae add das sub sbbb cmpsl mov out addr16 inc orl addr16 cmp xchg test inc mov sub add aam jmp and mov xchg out push lea bound xlat cmpsl adc test mov pop mov sub adc add sbb add push movb into in add cli lret int3 scas mov mov rclb cmp repnz push and pop sti nop push popa xchg xor add push andb sub in dec or clc add (bad) je jmp sub or add imul jo subb xor mov cld mov repz int3 add ss sti int and inc hlt dec arpl sbb stos adc pop icebp movsb push ljmp jo aad sahf xor jno lock mov sar fild cwtl iret jge jae stos lock adc push sbb ja sbb sbb push in push sub adc mov cs add push aad inc ret add stc or inc nop xorl inc enter loop pop pop mov es in (bad) cmpsl adc jp jl add push mov popl movsl (bad) dec data16 fldt add roll out cmc jno jmp sbb loopne mov ret aaa mov add cmp pop js mov sub inc xor cwtl inc pop and es aas sub mov xor push popa mov add adc int3 mov call inc std lds movsb and aaa cld mov aam inc and or addr16 arpl test xor or popf push dec add (bad) (bad) sub (bad) mov std inc dec sub iret inc test loop loopne and cmp push dec call (bad) sahf in add (bad) add int3 dec in test jne cmp fdiv dec mov scas nop add mov test hlt xorb push dec das jnp jl imul in out jo mov xor pop lret aas imul and add ljmp lock (bad) in mov mov mov rcrl mov mov cltd or inc dec or jle or test (bad) jbe xor add add push pop enter (bad) hlt adc add mov popf xchg (bad) dec or jnp rorb test icebp xchg mov xchg add mov sti out rolb addr16 (bad) into std ret and adc (bad) divl dec sarl mov dec mov lods xor add pop cmp inc nop pusha or mov mov sub pop sub bound inc adcl sub pop push nop mov test mov jne add sbb pusha and mov (bad) lods aas push add push mov sub inc loop mov ret or or cmpsb cwtl jo movsb add xor pop adc sbb sti in or cmp sub and stos mov ret sub inc dec les cmp (bad) icebp test pop dec push je cwtl dec sub xor mov mov jo add sbb or mov cmpsl repz jae cmp mov frstor lret jns inc ss sbb pop pusha xor or movsb jecxz pop jmp fsubs pushf mov shlb insb add cmp inc inc pusha nop flds stos inc add pop add xchg xor or mov in sti xlat dec add movl dec add xor rolb dec sbb incb jle into imul cmp add in outsl jg and test dec add insb lods clc mov popf roll xchg add shll pop add (bad) adc and mov mov xor shlb add inc nop jbe xchg out mov scas and mov push pop push inc test sbb add repnz pop cmp dec shlb push add adcb outsb add jbe in shlb cmpsb or mov cltd cwtl jp add pop xor adc popa inc and cltd cmpsl and jb add out pop in inc xor popf sbb stos cmp mov shlb push xorb scas xchg mov sub aaa aaa pusha mov (bad) dec add cli fwait xchg cmpsl sarb inc jl cmp adc pop add xchg fsubr and pusha aam mov addr16 cmp jae mov in xchg add xor xlat and aas lds movsl lea sbb pop pop pushf push xor les inc sbb push mov mov outsl dec lods in int3 movsb inc xorl mov leave js daa outsl iret adc mov mov jne xor mov in roll shrb xor cmp stc ret ret mov enter mov stos movsb je sbb clc pop es add cld mov and pop outsl cltd rorb ds mov clc push jne es push lods xor movsb add mov inc cwtl daa lock mov mov addr16 jge aas add popf inc pop pop dec mov call test or arpl adc fsub cmp daa mov jl out push cmpsb pushf or dec mov inc or xchg pop cmp pop (bad) jo cmp jns sub push sub jno imul pop faddl cmp mov jecxz add lods fwait mov movsl push sbb dec push pop jmp lods dec add ret and mov movsb mov pushf lods mov call cmp and pop mov add xchg hlt xchg fs pop jge cmpsb ja lcall lahf inc dec pop mov add cmpsb lea fs insb jg loopne xor inc inc xor jmp mov pop mov cmp ljmp popa addr16 pop and pop mov scas pop mov inc xor addb daa adc mov add cmp mov xor cmpsl xchg iret cmp pop jo mov (bad) lods mov pop out xlat sub cmp in xchg test cmp adc add add je push test push add dec mov inc stos jecxz xor sbbb lods test add hlt dec cmp or fdivp rolb stos and push cltd xor mov testb sub jne nop cmp rclb inc mov sub cmpl add or iret add and fs cmp dec lods jb jo cmp add add cmp rol mov mov xor pop pop aam imul dec insb in ficoml cmp sbb adc jo dec jecxz loopne pop cmpsl jnp push xor mov add stos outsb push push xor in and adc nop je js bound sbb and cmp pushf adc sti and (bad) lods inc xor fsubl push out out push pusha sbb cmp sbb dec rcll xorl pop mov (bad) mov es mov push push and mov test jl inc mov fcmovnu cwtl cmp xor mov mov pop sbb and and jb loop lahf ja ret adc and add nop mov in pop jbe cmp mov push arpl loopne and addl xor dec ret les mov push leave stc imul push jg pop sub or scas test and jecxz inc mov popa or and cmp or cld xor scas nop mov test cmp adc adc aam dec cmp jo out push mov fiadd rolb mov push cs and push xchg fstps xor and test (bad) mov mov mov add ds mov in sbb ret pop mov fild repnz mov nop dec insb decl cmp dec in (bad) and cmpsb hlt sti or mov test inc pop inc in dec pop and mov cmpsb xor or call and cltd and push cld sbb inc jge or add and inc or dec jl xor fildl sub jl int3 push test and mov and jp in sub lods (bad) dec cmpsb (bad) xor cmp cmp out mov adc pushf sub outsb sub and cli or mov inc fsts xor cmp je loopne dec sbb fstpt mov jnp (bad) jecxz add jo in and mov outsl sub push sbb add sbb mov lret mov mov xor sbb mov rclb add xchg push dec push in stos int3 subl add leave movsl test int3 stc xor add xlat fdivs push out bound xchg mov inc add and aam (bad) adc mov push loopne cltd cmp push jo andb inc fbstp call vsubsd mov dec push in mov rolb outsb addl xor sti inc cmp into les test mov aas (bad) adc sub gs add adc add dec push iret into xlat jmp dec and adc aaa add mov add fsubl or movsl loop cmpsl les xor nop inc dec mov add les pop jmp add faddl sub adc xchg push lcall mov std and cltd ljmp aaa cmp xlat xor sbb or sbb and mov add cmp mov push sub test int3 inc inc cs jo aam mov or jbe aad sub sub scas clc xchg clc add test (bad) fdivs ljmp loopne mov mov jne jp pop add shl mov jl add arpl jmp cmpsl insb adc jnp les pop mov into pop inc mov inc cmpsl js push loopne and add push add dec jae cwtl inc inc or jno insb sub or jl pmaddwd pop movsb pop subb sub pop jae (bad) lds mov ds js mov or test xor fidivr mov cwtl xor cmc lds mov dec mov lcall aaa add sbbl js add ret mov jo jne add or pop and ret jmp (bad) dec in cmp sbbl jb or or adc mov push pop inc rolb jb shrb addr16 mov je add notl cmp inc xchg loopne movaps adc aam lods or leave scas cmpsl daa nop mov lods mov ljmp movsl add (bad) faddp mov mov in xchg mov lret and mov in mov pop out test jle daa pusha or add jns aaa or (bad) lods sub mov xchg movsb and test movl jge rorb lret pop dec jns sub ret jne pop mov jle shl xchg and or adc in or jo jb pop add cmp movsl add data16 cmpsl in pop (bad) cmp jecxz xchg imul and loopne mov pop inc and mov push and mov das ret nop outsl sub add clc xchg call pop mov hlt pcmpeqw loopne (bad) jno add ja lods adcl enter ljmp inc mov push inc and adc adc je pop push jb and pop leave fldlg2 xchg inc mov cmp push adc cld and ljmp xchg push inc and push inc rcl call and hlt dec mov in movsl add aad and nop mov pop push js add push cmp nop pop xchg xchg and sub xor in je xor cmp jo sub mov sub dec or push jo cmpsl repnz mov pushf loopne cwtl and dec aam cmp sbb in add xor and lods sub cmp dec dec and sub push push repnz mov inc lcall cltd dec movsl cmp lds mov sub (bad) in in add dec ljmp bound pop neg adcb data16 enter jae test mov or cwtl and popa mov popf sub cltd mov (bad) enter mov adc hlt inc xchg sub or iret fisubl pusha xorb lods in ljmp sub inc inc sbb jl and fisubl loop push aas xlat (bad) loop enter dec lret lods adcb pop cmpsb mov cmp mov push or or mov pop lret sbb dec or dec inc pop add mov inc dec aad mov push or shll inc movsb dec xor test sarl (bad) andl shrb inc push gs sub mov mov inc fsubl jbe ja inc out cmpsl test adc jns inc es and and ljmp loope sbb xor cmp pop mov pop or insb push clc sti (bad) push add jmp sbb dec xor xor xor cltd pop and cmp mov (bad) fistp sub pusha cmp push inc fildl sbb push dec mov adc movsb je jmp adc (bad) cmc int sbb mov icebp jo dec xchg mov lea add add shlb cs or or enter mov or sub movsl add mov push lods mov add pop out int je loopne subb cs shlb sbbb mov ja,pt push dec and fsubrl (bad) pop jo inc jns and ss pop adc push pop jns sub and inc and stos in out dec pop sub add push scas xchg xor pop sub mov inc and add arpl cmc dec loopne and sahf scas shll mov fisub dec call mov dec mov pop add pop and rclb repz inc jae loopne or add push adc (bad) daa pop inc fdivrs cmpsl and and dec int3 (bad) cmp xchg fimul daa loopne mov and gs jg add mov dec inc lds dec cmp push (bad) sub pusha push faddl loop imul addr16 lcall rcrl xor mov add mov lcall and jne pop xor add adc jo mov js fisub dec and or je push call and sbb xchg sub inc stos stc and in push loope mov push pop movsl loopne pop int (bad) dec push and sbb or nop jecxz and and xor cmp call pusha sub fstpl popa mov xor fisttpll cmp mov add inc cmpsb enter test add xchg fsubp enter repnz shrb xchg sub cmp inc aad push push sti pushf into bnd psubb xchg cwtl pop mov bound push je pusha mov test add inc and add or lods (bad) dec in adc xchg push call sti mov (bad) test enter mov add mov mov hlt inc into mov fs sahf ret rcrb adc dec push xchg aam dec xchg and jl adc push and sbb pushf inc in adc inc rol dec inc xchg sbb xor add out sbb add lea andl cmp test pusha lods mov test push adc inc pushf sub cmp adcb dec and js lods add cmpsb lods out mov add faddl insl or xchg rcrl out mov repz mov sub arpl mov in sub mov (bad) cli inc je inc jl lock adc loop mov add lods push movsb jmp add xor push xchg mov sahf mov movsl cmp call cwtl insl mov push pop mov inc adc mov push sub add xchg lods push cmp mov xor jno xchg jno and jo and or in adc xchg adc jb std and (bad) fcoms andl data16 stos or mov out jl xchg jp ret and mov xchg or mov mov adc cmp xchg cltd mov add fs enter cmp push mov jo jns icebp es pop sbb dec sub test outsl rcrl sub jo or jae aas rorb and add js lods sbb clc xchg add test ds cmp inc adc ss in or add cmp lret dec stc lret jns xor mov push dec mov jno hlt pop mov or mov push pop xor imul movsl imul ds jl dec in fnsave loop cwtl cmp or (bad) sub jne pop jecxz push test or jo dec cmpsl inc mov mov add jge mov stc jo sbb out mov xor es inc movsb cltd ljmp imul inc inc xor outsb mov es jbe sub jl push mov data16 shlb sub add and cmc push (bad) test flds dec (bad) or add mov cmp fidiv aam xor aam popl cmp sbb adc movsb out add lods test xchg adc push fcoms adc add sarb adc adc xor out xlat stos cmp push mov adc shl pusha mov mov adc fsubp xchg push sub or or test popf cmpsb enter mov andb arpl xor dec mov inc jg push addr16 or aam ss xchg mov lods add xchg insb pop mov imul sbb fwait int3 xchg mov repnz sub cmp pop mov pusha je push push push xor adc lea test ja add and (bad) lock add movsl sbbl sub lods mulb cmp push mov mov add mov xchg test add ret xchg adc (bad) mov dec pop enter xor jno xchg ja or sarl push loopne shlb pop (bad) xchg rcrb pop imul nop call jle ljmp ss sub idivl and xor or pop inc pop dec push decb cli les mov test lods and add push cwtl cmp add mov in mov sahf and sub mov jnp ret in lods faddl add lcall aad sub icebp loope pusha int3 gs push cmp mov fmul xchg and iret pop dec int push sbb add inc cmpsb dec inc out pop jp add out and ficomp movsb les mov cwtl sbb jp aaa popa jmp or aas sarb jecxz fisttp (bad) dec sbb subps push jb loope and or mov inc out xchg lods scas movsb jnp inc mov add stos sbbl xchg int dec movsb add lea mov out fidiv loope mov ret lds mov add and xchg pushf cmpb push rclb jno jl add sbb and cs xor mov adc loopne xchg xor test and daa lock add popa lret mov xor test stos faddl clc loopne pop xlat adc pop call fiaddl pop fstpl cmovp and xchg inc ret xor dec inc xor push test hlt dec jmp daa mov inc add pusha lret mov push in and and and jnp mov int3 ds cmpsb add adc div pop sbb add and or or js adc daa inc mov flds fistp gs push out ljmp mov add (bad) jbe js clc push add inc mov cwtl (bad) adc lock outsl inc cmpsb sub jmp out int3 cwtl nop cltd rclb jp loope jmp fcmovnbe enter cltd mov or xor fsub and stos mov add push or add pop scas lods fs pop and or push into mov pop ret cmp and add cwtl mov xchg loope xor xchg mov punpcklbw outsl sub or push stos sbb les sahf add mov and mov mov add dec inc das inc add ja,pt pusha jae test mov mov test mov xchg xlat rorb dec cmp and daa and add lret loopne dec ja xchg out cmpsb in jg mov ret sub pusha adc daa and mov shll fwait sbb jmp adc mov negb mov pop sub push das sbb and cmp cmp pop add in sbb jns and fisttp fwait xchg loope orl or and popa rolb movsb stos loopne out push lods cmp sbb and stos ret cwtl lret add in jmp sbb pop push lods sahf fdivp and fcoms sub and jecxz pop mov or sub inc sub and sub dec add mov (bad) jnp call cwtl popaw and cmp rclb out adc dec sti inc cwtl dec in rcll shlb push imul fsubs xor movsb sahf (bad) sbb hlt pop addb xchg or xor or sub inc int3 je movsb sbb pop pop add cmp cwtl xlat push fsubs xorb xor in test and sbb push call xor add mov pusha call or dec dec xchg aam add clc add pop (bad) pusha test adc mov in nop cmp stos and mov adc dec sarb dec jne fmuls imull and or push push rclb inc or nop add xchg push test fstps push ficom sub and mov push aaa inc test in test push cwtl into repnz dec inc ror sbbb push cli jae fisubr in pop sbb push clc leave es (bad) jb mov xor fistpll icebp sub je add push and and stos add loopne dec mov cli push rcll push dec mov pusha loopne into lret dec call add dec add push mov out push pushf fistpl mov inc push cwtl mov mov push xor in daa enter in inc jnp rorb jmp nop mov inc out inc scas clc stos xchg andb shlb jmp xchg pushf mov jg (bad) add inc and and or js dec sbb push jecxz mov push add mov cmp je mov rolb add jno insl xor icebp xchg cmpb in cli fcoml add int3 dec and andb add add xor cmpb ror add (bad) scas inc repz xchg pop add mov insb jmp dec jnp aam mov cmpsl add mov inc les push testb movsb pushf fwait push mov xor sbb mov fcoml inc mov mov inc mov mov fst call cmp sahf popf andl mov imul push jae out shlb add mov popf jl cwtl or rcrl jecxz xchg aas repnz and addb inc je addr16 pop add lea inc xchg test call mov sbb pop xor mov fmull push add leave mov pop ret mov in iret and lret add negb mov popf push data16 xchg push icebp push add int3 or and lods add jne lahf rcl cmp movsb mov dec into add ret scas mov cli ds stc idivb pop leave cmp cmpsb mov or call or sbbb loopne mov or xchg xor test dec test dec adc and inc xchg sbb and add ret fnstcw lods sbb mov dec fstl aaa sub test inc fadds dec ljmp jl (bad) mov add pop push (bad) push or cmp xchg xrstor inc adc ds add push add push decb cltd scas lock pop (bad) sti mov int3 push loope repnz add add push ss mov cmpb adcb mov push gs (bad) mov cld jb movl jge sti ds adc cli pop (bad) push out cwtl adc xorb sbb or ret lret icebp clc sub jnp cmp fld pop fimul cld mov (bad) xor je push and xor inc dec xorl icebp jecxz push rorb jl mov mov les in xor test mov add push sbb or shl in in mov sbb out adc jge jne add (bad) jg or (bad) pop inc jno es sbb inc push or sub inc in mov cmp hlt sbbb xor loop or adc inc xorb scas sub adc mov sbb add sbb loope int3 neg rorb cltd xor int movsl add fcoml xor sbb (bad) adc popa lods add hlt and repz icebp sbb pop add xchg sbb add pushf mov dec adc and mov pop rcrb adc lods mov mov fisub xor inc in hlt fisubrl adc fiaddl jae inc sti icebp xor ljmp mov popf sbb sub nop jl js pop adc loope adc mov xchg jmp or cs and jecxz mov or decb mov orl outsb xor nop inc jno adc dec mov dec out (bad) dec adc mov adc int3 xor mov sub inc add add roll adc mov sub sub popf adc movsb vpsubsb loope sub push mov je mov mov jbe and inc cwtl cmp push add cmp in sub mov pop leave mov mov pop jge ljmp and inc std rclb cmpsl push xchg hlt pop add mov mov cmp popa enter cltd xchg in lods adc fiaddl ja jecxz push aaa pop dec test cmp mov push aam mov add inc or js add fcmovnb push and lret add repz xor (bad) adc sbbb mov lock incl and scas hlt pop sarb dec (bad) adc add into outsb mov popa cwtl pop jo or mov mov mov add movsl xor jp add jmp adc add sub or in add out test mov cwtl xor js arpl push scas xor rclb mov dec add pop jnp adc dec nop enter inc mov in inc incl or cmp pop add push sbb ja adc call sbb cwtl imul push jb push frstor mov inc test sbb outsl mov pop push xor popf stc cwtl pop cs mov mov inc mov mov push mov mov rol or (bad) cmp lahf xchg nop lock lock inc dec add push jp dec or xor int3 mov xor movsb fadd cwtl movsl mov test sub add ficoml sti and jno fidivrl shlb inc cmp push or xor cld pushf add and popf or cwtl push icebp mov dec push cwtl mov addb jge adc cwtl sarl in inc lds call inc pop mov cli dec jbe dec or jle lret call and and pmaxsw sbb sbb movb pop lock add mov sbb faddl sbb daa jo pop sbb (bad) xor dec push lock inc (bad) xchg mov lock iret leave xchg loope mov pop data16 mov outsl loopne leave in inc adc or cld dec out push jns sub loopne add addr16 mov mov or jp (bad) icebp test cmp addr16 cmpsl mov sti fidivl jno pop add or clc mov xchg jl mov add in out sbb jle xchg mov push add movsl ret cmpsl lret fnstsw jo dec add pop in mov mov movsl push inc outsl mov aam jno pop outsw mov add popa push inc test xlat cmp in js add mov data16 xor cmp insl ret or mov sti mov push mov and lret sbb pop nop pop xchg add insl ja push addr16 outsl mov gs lret sbb mov lods subl inc push sub sbb cltd and sahf jo xor or xor xor sahf enter pop (bad) arpl jno pop jnp mov inc dec repnz ror or pusha mov test dec mov dec in iret dec inc and divl icebp cli (bad) jp sub inc mov add scas add data16 fidivl push icebp jo pop inc sub inc add in and pop out mov and adc add mov or adc popf cmp clc ficomp sbb mov aaa lret add pop js jl ficoml add test stos push add test mov daa stos fisubl mov lea pop jecxz test mov sub pop push out nop shrb je,pt xor xor fidivrl stos (bad) pop loopne jae fiaddl int3 js leave mov push add inc or push sbb adc fdivrl adc (bad) out xor loope cmp out mov clc stc cli (bad) ja scas push adc jo inc push and in and loop lock pushf sub mov sub fdivl (bad) pop push adc popa je xor (bad) jo (bad) insb cmc xorb jo testb mov inc add push insl pop dec jecxz add or sub je add loope mov subb popa test in andb hlt inc xchg lret mov icebp testb cld and icebp sub xchg push fmulp mov test adc fs out sbb sbb mulb pop add das adc add xchg mov lret add in pop test dec pop mov push adc and xor xchg bound mov imul aas gs cmp test (bad) sbb mov scas or int in out push clc lock add mov xor dec inc out cmc ficoml or push adc xor mov mulb add and sub inc sub sbb test mov push pop jl jg idivb fmull mov loop test mov into jae and repz inc mov xchg (bad) mov rorb (bad) inc jnp add mov punpcklbw inc dec push add (bad) adc retw add ja scas subl adc test push popa mov push jne hlt cmpsl mov or les add dec adc inc ljmp pop out push sbb mov or pushf add cmpsl add push dec sub (bad) mov cmp aad sub test ret pop or adc dec addl and cld arpl dec jl adc mov or test inc popa pop inc jne shlb push add test faddl in mov pop mov adcl sub pop data16 adc shlb fs les and add add xchg dec cmp insl pop inc les xchg jl add out pop dec jno ret add dec and unpcklps ljmp add fmull mov outsb add cmpsb mov cld jo or cmpsl dec adc and cmovp sbb rol rclb xchg out inc and adc out push adc in nop fisub cwtl (bad) xor das xchg push mov movsb int inc mov or rcl jle xchg mov adcb cmp mov nop mov mov jne gs addb mov sahf inc aam add sub add dec lock inc lods into mov icebp mov pop sub out mov enter mov jnp lods add cmp sbb mov pop adc loope dec mull and pop adc shr sahf mov add cmp inc xchg push pop dec mov repz ret adc jl jo add dec imul dec addr16 jae cwtl aad inc xor or lods xor xchg add mov fadd insl add lods mov jge clc push sbb mov lods and add jg add arpl cmpsb sahf pop icebp add cwtl add add in pop cmp pop sbb psubb add sti leave lock adc xchg add lock add push adc push xor or or dec jle dec push mov cmc (bad) fdivl jmp mov and mov sbb inc push aas test arpl adc cwtl (bad) cmp (bad) inc jge xchg (bad) rolb push inc sub sbb pushf les incl add rcl cmp mov jl xor add sub (bad) jae xor add clc inc dec call subb cmpsb adc rorl mov imul mov push std jno and aas sub sub test scas and cmpsb aas sbb imul cmp jl pop call flds or aam pop and sub fiaddl ds popl adc lods loopne lea jmpw and sub xor arpl pop loopne mov (bad) jp sarb and and add into out and xchg loope sbb repnz cmpsl xchg mov test rclb (bad) scas pop or arpl ljmp pop push loope fidivl cmp (bad) mov add add and mov jno xor popa sub xor shll sub nop xor push aad fcmovne shrb outsl inc adc popa jne aam sub mov in mov popa jb inc fcompl sub adc jnp aas fwait stc xchg add mov pop push orb mov (bad) mov ret test xor jne add mov pop adc dec cmp rcr stos or lds gs xchg or pop (bad) rol add sub ret rolb lret lods jno rorb mov sbb mov pop test jbe test hlt scas loopne adc je sbb adc jnp xor icebp mov or add je adcb dec loopne les sub stos orb mov xchg sbb and dec and or rolb adc lock movsb fwait mov ds sub in xchg leave jne adc adc gs popa ss in fmul cltd jmp movsb rolb push mov dec jae dec adc add jo push or (bad) push nop mov hlt mov push add inc push pop mov cmp add test test xor pop cs push inc test out sub push cmc or (bad) mov enter inc das and adc dec dec jno pop push xlat leave pop jp rol cmp mov loop and push xor adc pop mov data16 push ja cmp pop add push imul inc dec jnp pslld sub sub adc mov push push das or pop popl inc pop ja aaa pop sbb add adc or fcoms lds pop inc je or xor push sarl push sub es push aam adc movsl in iret and fisttpl adc or (bad) daa cmpsl sbbl sub mov jb mov add jl cmp dec add ljmp das rorb in mov mov fiaddl dec push (bad) popa ds test jg test dec or popa lcall dec cmp es loope pop mov repnz xor test jns add aaa fbld mov add mov shrl dec hlt pusha sub fdivrs sbb sbb jge fs xchg adc sub movsb mov clc out loop or add es cmp adc jb xchg sub mov int3 (bad) aaa sbb inc mov lods nop mov mov and das insb fiadd lcall rorl add in xor adc sarb mov popa inc mov es adc rcll or inc popa cmp jnp sbb or (bad) hlt and adc in inc lret add fsubrs repz sbb jns sbb inc enter jecxz or ljmp roll add stos jno sub lods test out xor push lds sub subb sub xorb and mov cmc mov scas inc lods and fs inc and es mov daa mov daa popa test inc fdivrl test mov fisub inc add xchg adc (bad) xor mov dec int3 dec cmp add adc inc aam std fsubrs push fcmovbe xor loopne icebp nop adc adc push inc mov int dec stos push ljmp test sbb std dec lret add fldl fnop decb inc loope add loopne push jge add sbb ret pop jmp (bad) dec or cmpb push test test cmp xor pushl adc movsl pop (bad) insb test (bad) jae add push scas sbbb pop loope xchg and (bad) lock hlt mov mov fs loope push lock xor js add cmp mov add add int je lock xchg andl pop mov and adc add lock loope lock cmpb icebp add adc popf repz mov pop scas aad xchg fs or or stc into mov lea lods lret xchg add push xor xor and cmp pushf enter push aaa jle adc lea test int3 sbb cs outsl jge cmp in add push test push jne adc jns imul aam lds push and cmp loop jl and int3 ret imul mov fcomps sbb addr16 mov es aas pushf add data16 and ljmp xor (bad) sbb or sbb jno imul cmc pop ret mov lock push insl (bad) (bad) rcrb pushf cli dec pusha in and adc or outsl and sbb sub and shr mov mov add sbb jge xor bound sub (bad) ret lock inc outsl add adc mov test inc (bad) sahf aaa andb lock xor or dec in push (bad) mov xor mov sbb (bad) push inc pop fsubl sbb add insl mov loope inc mov (bad) xor sub fildll adc jnp and cld test data16 inc add fild popa cmc fsubrs sbb jae dec clc xchg add mov testl sub add dec and (bad) push ss push rolb std ret rol lods xchg lock fs pop mov adc inc sub jg sbb add loope es pop ja mov dec add (bad) sbb mov sub or inc dec test xchg rolb or or dec pop arpl add out loopne add ret rorb fildl dec in cwtl fs or clc dec add (bad) cld (bad) inc cmp cmp roll add sub insl add addr16 sbb roll sub sub cmp xlat por add and shl cltd addl push in mov pop xchg dec cmp ja sub jl mov cmc xchg shrl (bad) rcrb sbbl out iret cmpsl daa add (bad) mov loopne orl mov jae fimul js pop jnp sub add jno andl jge,pn or loopne dec mov fs insb xchg add push mov or mov es add aad adc cwtl aam mov fisubr mov add dec outsl nop aas loop loop xor add dec adc and mov add dec loop and jae cmp xchg (bad) push add imul lock lret or mov sub pop testb or mov popa or jo sbb (bad) inc leave sahf movsb adc hlt push out add jl hlt test dec mov xor test aas shlb test dec pop (bad) sbb mov and pop movsb je test cmp inc add cmp notl in fsubl mov pop add push stos mov mov mov and xchg push shrb and adc rclb movsb push sbb imul subb ljmp insl fwait dec test or es add xchg addb fdivrl adc xchg stos adc and stos cmp add in pop in out add loope outsl movsl jmp int3 and rolb in push add and insl add mov ljmp inc insb jnp adc sbb aas cmp jb je push sbb sub add in mov arpl jg popa add jbe mov dec adc scas adc movsl cmp push icebp (bad) lret sbb or movsb test dec out push dec xchg mov xchg gs aam and addb mov xor cmpsb clc jne jae xor loopne (bad) gs add xor add imul notl add xchg xchg add loop iret jns sub pop hlt inc dec in adc fistp mov sub fiadd adc movsl cwtl les ret test pusha sbb lcall sub dec add mov cmp lods cmpsb adc leave xor pushf mov inc loopne mov insb add clc sahf add dec inc inc outsl lret ljmp fstpl or sbb sbb sbb scas sub (bad) mov mov (bad) aas pop testb dec and prefetchwt1 and add lahf test and sub faddl sub (bad) in jge adc ja cmp mov sbb pusha idivl (bad) dec add sbb pop add lock and push dec push adc or or andb mov enter cmpsb add gs mov repnz cmp sub loope cmp cwtl mov adc push push sub adc shrb popa dec jge loopne ja add pushf or enter ds sub push mov in in add out dec inc xchg rcll and lock add jge imul data16 sbb or stos sbb xchg and test add (bad) xor loopne adc sar and mov divl add mov pushf stc pop fadds ljmp enter xor cmp xor seta mov sub and jmp inc xor and std fsubrs cltd rolb out clc mov add f2xm1 jns sbb mov xchg cmpsl les mov das dec and js dec pop and jmp andb mov aad add je fistl mov xchg insb (bad) dec arpl out xor in push fldenv ljmp stos add cmp lea in psubq xchg rolb loopne arpl ss call enter jo pop and xor or lock sbb mov (bad) ds js sbb add add adc das pusha and sub add xor adc cmp add fisubl (bad) jno aam icebp rorb mov aas pop adc pop push xor stos adc pop mov stos push push jb sub ljmp add sbb jo and and pop mov mov xorb push or and mov lea out in xor adc subb fs addr16 cmpsb lods add ret adc and clc nop clc pop icebp sub cmp add outsl pushf in jb add xchg xchg and sub les js (bad) lock pop in movsb mov pusha xor sub cs and dec add fisubr adc shrb fcoms and mov push mov call bound inc and enter fisubr lcall push mov bound xchg shll out nop jno xchg sahf add xor add add mov fbld cmp js and push mov jle lods jle sbb or js or lods sub test aad lldt and dec add in vpmacssww sub lret icebp clc jl mov popf push outsl push out xor add divl ror sub shrl ja add xor fwait dec aas mov sbb xor roll add xchg xchg jmp add out push add (bad) mov mov lahf push dec popa cwtl cwtl cld adc xchg and les fdivrs pop daa int inc es ljmp add shll scas push jo loop xor mov sub push fisttpll inc scas add sbb mov iret insb daa bound pop sub jne adc inc pop mov mov mov sub mov inc adc imul adc pop and cmp push mov and xor jno in je daa ja xor loopne adc sub insb adcb (bad) cld sbb add push dec and xchg pop sub add mov adc aam mov sbb ljmp lods cwtl adc outsl pusha pop arpl jle jno add mov sbb dec loopne adc (bad) dec arpl (bad) popa push mov loopne push xchg pushf fsubl pushf loopne pop inc add mov lods je cmp fimul and inc mov cltd cmp add cmp daa sub ds les (bad) dec ss mov sub xchg push xchg cli (bad) mov push mov push cltd xchg pop add repz mov pop test xchg push mov add pushf cwtl sub xchg mov stc add imul cltd enter mov rcrb ja insl divb pop push cld and jmp sbb sub pop jo lret mov push cmp pop cmp test adc mov adc jp push test dec notl jns mov add xchg pop adc dec pop mov or ret xor jecxz push in mov or scas out lcall fcomps add adcl or add xlat imul dec jge daa mov add sub fstpl sub jne mov shll and dec xchg shlb fildll (bad) je aam or xor mov ret sbb mov fdivs sbb adc inc loopne adc in adc xor cmp fisubrl xor mov add call test js mov add push sbbb (bad) jbe jnp adc adc adc sbb ja dec (bad) testl daa sbb cli push (bad) adc popf ljmp pusha cmp or in or fist xor (bad) mov sub mov or cld lcall sbb or mov adc cmpsb mov cmp roll lock rolb dec shrb enter mov dec mov enter dec mov xor cmp cmc or dec add lock inc jg cld add lret jne ss outsl add jmp out or adc sbbl xchg cmpsb rolb test inc adc dec jnp js (bad) xchg (bad) mov xor arpl outsl leave sub add mov shrb in cmp es sub js jno rcr sbb (bad) xor sbb adc inc add ljmp jle sub mov inc (bad) add testb jnp jle push add mov dec aam add stos js push cmpsb jo cltd mov mov dec icebp xchg cmp loop or enter mov fisttp cmp inc mov cwtl xlat xchg or jo flds pusha in adc nop icebp sub push sub sbb call jecxz cld or sub iret out sub pop lds push add dec lods or mov pop sbb cmc out cltd (bad) clc xor fbstp and sti pop aam mov push add jge imull pushf jo xor or mov and sti mov adc loopne js aas fildll repnz in enter int mov sbb xchg lea cmc imul addb pushf inc dec and sub inc dec adc loope add adc (bad) jbe jno pusha int3 push adc or adc cmp push push cltd call pop fcoml mov jge adc mov cmp shll jbe (bad) sbb pop nop orb cmp pop cmp addl out nop lcall in add test stos imul fbld insb ljmp fldl popa loope loop mov xor xor sbb or or sar cmp mov and (bad) fisttp adc jp (bad) loopne ret mov adc stos enter test leave lcall pavgb mov movsl and cmp cmp jl es je in add dec inc add arpl dec adc xchg xchg enter test jno pop movzbl repz mov arpl xchg mov push imul outsb divb push sub xor ret adc out imul add jge out dec cmp and xchg inc mov fsubs hlt pop jbe mov cli mov pop jecxz addl push xor mov jae add push nop lock or sub fcoms arpl repnz push and sahf test add dec arpl jb mov add add mov sbb inc mov shl add xchg in cli jmp mov adc add sahf jle dec test and mov fildll imul icebp add (bad) lcall sbb jo and rorb call xchg xor jg push mov (bad) cwtl inc pop pusha rcrb add jne mov outsl aam add js lcall cwtl loope cld jl xor in mov pop mov not fs sub and (bad) cmp aaa sbb lods bound adc or movsb cmpl adc shrb rol stos repz or add rcll cmp add jge in sub sbb dec or jo push inc add mov cwtl enter aaa push enter lds in pusha out cwtl dec into roll jle (bad) bound iret push loopne pop lret adc cwtl int fistp pop sub cmc xor inc and rclb push addr16 jne or and enter mov pop inc clc add sbb jb orb fdivrs mov xlat fwait push rorb cli or sub leave (bad) inc mov jmp in outsb outsl sbbb jns (bad) hlt pop insl add imul or bound inc (bad) jb add mov jecxz pop ficoml test sbb push sub ds mov adc xor sti add test addb jno insl add push imul clc push nop mov iret imul pop or add pop std in mov add dec lock xorl ror cmp (bad) shlb in ss dec scas fsubr aam pop inc mov pop xor and mov lods into or mov dec imul xchg add pop mov and jecxz stos pop insb inc and stos movsb mov cs xchg mov (bad) mov mul adc inc mov pop mov lods sub outsl or std pop nop adc sub adc add or adc adc lret sbb jg int out loopne stos jb sub mov imul fs jae xlat cwtl pushf lahf and test xchg test mov add les pop hlt lret jl sub jg jbe inc sub mov add xorb pop test dec sbb add scas clc cmpb stos into xchg (bad) lock fimul push ret sbb xor xchg sbb call adc dec popa push fwait jle int3 mov cmpl adcb xchg fisttp sbb dec pop (bad) mulb jb or (bad) outsl and lret scas push sub add jge cmpsl xchg rcrb movsb faddl mov ficoml sub jge cmp (bad) repz out shlb out das test and lods add sub cmc cld scas and cs jg test or scas add mov pop movsb (bad) jae and cld faddl lock mov lods loopne xorl and jp add out nop or jecxz push clc xchg mov add dec aas call add push rclb and (bad) add sbb adc insl dec test add orb pop popa mov jb iret inc add pop ss and hlt mov daa in jmp dec ret fwait std mov or sbb xchg cmp dec xchg lahf sbb popa loope jmp adc mov cltd dec popf and aam mov mov jns or push popa lock dec cmc add dec insb (bad) jo pop nop adc xorb mov sub add aaa sbb das push and dec les xor mov in in movsl stc test cs loop xor mov loope fsubrl add add xor dec psrad pop leave dec sar repnz push inc push push enter mov outsl cltd xchg add mov mov pop xor cs inc pop pop aad sbb mov inc fdivrs ljmp sbb mov xchg jmp push dec add fisubrl out add lcall push sbbl lahf add lock ds jnp insb fcomi (bad) lock roll sbb loopne add adc mov and mov mov push rclb jns jmp repz add mov pop push push mov insb out and xor adc ss mov xor stos push je push lret int3 add cmp pop xor cld pushf in rorb fiadd movsb and imul (bad) (bad) nop add test jno xchg insb in or xlat add shlb imul add dec fcoml cmp fisubrl jne pop movsb cmpl sub cltd lock idivl shlb dec das hlt and add addr16 out mov in data16 add xor add push shrb fwait test cmp andl add dec ljmp lods stos loopne stos ljmp int3 movsb inc js or inc jb roll pop loopne pop jno jae adc mov call aas inc mov adc add pusha nop stos adc jne push pushf daa lds nop shll (bad) pop xchg sarb stc cs movsb push aad test jmp repz or mov call add daa aam (bad) rorb or call das mov out call and add addr16 loop,pn test dec push int3 cld dec sub stc mov add icebp aad xchg cmp adc nop aas cmpsb sub add inc call jmp sbb nop push and fildl fnstsw cmc or scas mov pusha xchg sbb cmp cwtl cmpb insb dec ljmp testl push adc mov enter js loop in xor sti sbb mov xchg lcall dec push fadds in cwtl mov jecxz dec mov je cmp nop popa mov dec push test in popa and xor cwtl je and sub and and fcoml scas xchg xor lahf mov add int3 push sahf paddw push push add sub push add scas das pop jp adc add jns mov sub sbb cld lret imul dec imul pop mov inc xor ret daa xchg stos mov enter mov mov mov dec jo pop rcl xchg pop lds jmp fs sbb rolb xchg lods add in aas adc xchg and in pusha orb popf (bad) xchg shll in test out jb pop pop and imul sub inc mov mov enter call shr push and aas sbb dec add ljmp fldcw aad push xchg xlat (bad) aad mov cwtl rcrl leave jl and add add push lock mov movsl and dec cs adcb and fildll mov rclb das sarb test jmp xlat add sarl inc mov pusha loopne rcll iret cmp dec adc mov mov pop cwtl data16 mov inc add adc iret and xchg out subb xor pop in dec out cwtl or inc xor loope pop xchg in push fxrstor or bound jae mov cmpsb call or mov stc int3 pop mov jmp or add popa in jg xchg cmp jo outsb push sub ret adc and sub xor aad jne test cmpb xor and mov fisubrl jo les ret int loop ds add push sti cmpsb in mov lods loopne mov in nop in push roll je jmp dec jbe jp mov dec icebp add imul mov shr cmpl jle push push mov enter fcoml jle iret and or int3 lods add dec xor arpl outsb lods adc mov add sub add inc mov dec les adcb aam cmp xchg mov hlt inc test or mov loopne xor rolb mov mov jl popa out xchg daa push test mov (bad) add and mov pop xorl push add and jbe out imul and insl out push jnp fimul in divl in xadd stos sub das outsb cwtl add pop sbb add js sti adc rol pop or sub push (bad) lcall fbld sub fs push sti test add cmp jnp loopne test xchg call cmp rclb push add push in sbb or pop imull add fmuls mov mov in add cmp or pop je and shl xor jmp in and jne jecxz outsl add jb cmp mov dec fistpl (bad) mov movsb add or add jbe lret testb adc roll addl ret (bad) dec fistl cmpsb jmp push xor xchg pop lea inc test cwtl pop adc lcall cmpsl or or mov loop inc xor (bad) mov shl push add sub inc add dec loope push fcmovu jg mov (bad) mov leave sar adc add dec loop data16 in fwait add inc pop mov dec repnz (bad) xchg por adc bound cld leave pop call (bad) jo dec cmp repnz frstor faddl cmp pop or sub test ja call fbstp scas or adc test outsl les movsb xchg insb jl daa je loopne jne je and int clc pop adc in outsl push fsubs pop lds xor mov or add pop movsb mov shl mov sahf adc out push jo cmp or mov xor andl mov in mov lods je das es add jno pop je shlb jo adc jmp insb jg std push inc or adc les xchg adc mov int inc (bad) cmp aaa lret fstp lcall sub mov cli mov (bad) aam push cld mov clc mov cmp js stos aas mov in out orb ljmp loopne ret adc fnsave pavgw pop adc mov jno (bad) pop add or int mov rcr std sub mov sbbb xchg adc jno add hlt jp sti cmp and mov daa mov xor mov mov clc (bad) mov rclb mov hlt sub lods adc pop sbb outsb addb sti cmp lds add lcall lock xchg icebp orl mov adc addl sbb test pop sahf sbbl mov push inc add jge inc (bad) cmp lahf int3 je aad dec call and pusha dec jl mov jnp xlat xor push and outsl or jae mov in scas cmp pop fisubl popf dec pushf loopne mov aaa daa mov xlat jg add mov jo fisttp push sbb arpl dec xchg pop loope and dec mov add xchg jle,pn mov les mov shlb and add pop sbb mov push jo divl faddl es or mov cld addl fbstp xchg imul mov sub add and inc dec out push dec dec xchg add loope imul mov lods xor cwtl and mov call pushf mov int shl scas cmpsb add adc push aad xchg xlat or popf int3 xchg mov aad sub push mov fdivrs mov enter jne mov add and mov inc or xlat cmp cld stc mov aam loopne or mov (bad) ss enter jne jg shll lahf cmp xor fidiv jmp or stos test pop jo nop add fidiv daa xchg lods inc popa push addr16 inc repnz adc call popf xchg dec or lock fld fldl xchg scas adc enter pusha dec orl dec xchg xchg or rol shll iret aaa or mov adc cmp fildll mov sbb inc mov rcll (bad) scas add push je jne insl push dec sbbl push outsl in cmpsl cs or sub test in mov inc mov mov or add sub outsb aam fisubr orb fs test dec adc mov mov sarl and dec jg adc cmp fs dec dec (bad) mov js fadds pop jle lahf aaa lea jbe cmp sbb imul in bound mov dec orl mov std (bad) and xor lock jl add jb sub and push insl mov pusha stos (bad) (bad) fidiv int lods sarl nop cld and add push pop cwtl inc popa icebp cmc mov push in mov pop in dec cltd jl dec ljmp sahf or js popf inc mov fs ja sbb rclb out incl test sbb sbbl push mov xchg push pushaw das enter popf std fdivrs (bad) jne je xchg fwait shrb js pop mov add pusha adc mov (bad) popa js movsl jl out jmp adc and lea (bad) test add cld nop inc inc or add inc lahf repnz add ljmp and sub sbb add cmp inc fdivrl (bad) test out xor testl jp je gs mov adc jecxz dec das test sbb mov push insb das fs mov enter add mov xchg arpl push jg sub pop iret inc xchg js gs jnp sub clc pushf pusha adc lods push mov or or dec cmpb es stos fdivr sub mov imul pop das sub inc sarl adc pusha faddl xor cmpsb sarl inc or xchg lret mov and int inc aas mov jmp mov cmp cmp mov add (bad) sub inc jne push inc (bad) sbb and fdivl and enter aad push mov xorl je jl dec inc in cmpsl sbb xchg cli (bad) sahf mov nop or sbb mov js cltd cld ljmp loopne hlt nop jo fdivrl cmp dec add daa sbbb dec shlb in jo and les lahf jnp js call gs in pusha mov aam mov mov call ret dec in fistpl pop xchg or nop jle out jge dec adc (bad) (bad) cwtl mov fcoms ljmp stos (bad) pop jns fistp jl pop xchg add gs jne or je dec xchg inc sbb cmp mov or hlt mov addb loop sbb and fistpl mov les sbb push sub jg lods clc mov push int fs arpl mov clc clc jle mov lock fldcw sub or fist dec shl mov cmpsl cmp cmp or add enter pop imul shlb xchg jno test fcomi push and out insb mov in xor aad sub dec jnp or inc clc mov sbbb out mov insb mov (bad) pop push je addr16 pusha or inc add mov test divb jae push orb ds pop mov cmp mov cmp adc jmp loop inc pop sub enter mov jl in sub push shlb nop sti nop dec mov jbe roll out cli xor xchg (bad) mov inc cmp cs dec add fisub clc pop adc push je pop repnz xor inc add push roll add ss (bad) jo (bad) push outsb shll push and mov fs outsl and mov add mov jecxz in push orl enter imul pusha lock and clc gs in in adc in fadds flds dec push in or fistl mov das aaa inc xor lods sub mov pop lret xchg in je std xor cld xor jp jmp out dec outsb inc insb push jg outsl ds push sarb popf or in data16 add leave test ret or add imul add outsb dec pop sub add add lcall mov call clc or test loope jae mov in in mov iret adcb in shlb pop arpl xchg sti lock push inc insl pop and dec jg sbbl test mov adc dec imul or sbbb jg push in test adc jl stos in or sahf add adc adc or je call mov push xchg ja adc ret mov push and dec gs mov and or push push repnz sbb in pushf lds add add dec imul jne das lahf dec inc mov fisubl lret out or mov aam fsubs pop ret push repnz in jne add adc sahf popa rcrb add jl sub fdivrl pop fldl dec jmp add (bad) js mov sub jl or clc add push test sbb mov mov loope jp or add daa jecxz stc cltd loope pushf dec out inc jge daa loopne fstps pusha andl rolb dec jg int3 add dec mov add aaa jne das in jmp xchg push fs jo add (bad) adc push sub mov outsb stc das xor jo add sbb xor cltd out pop call dec cmp inc add adc pop dec jno mov sub or or cmp in cli shr loopne mov xlat bound inc add dec cmp je test pop cmpsl add fstl and dec arpl and pop pop stos add leave or jb loopne mov dec cld sbb stos inc sub arpl xlat out add (bad) hlt lods test in addl das and lock jns pop push dec cmp xchg dec sbb fwait mov jo pop mov idivl add xchg cmp pop int scas outsb fadds out adc push imul leave xor push or test pop cmpsl icebp int sbb or (bad) mov jg cmpsb lock movzbl sbb and xor lods idivl movsb jp add ja pop outsl fbld push popa icebp fneni(8087 jae xor les mov dec sarb mov call sub mov mov and cmpsl inc ja out fcompl in add shlb out jo hlt mov (bad) sub inc aad outsl add mov dec test add or and push and mov popa sbb and in loopne leave add ficoml or xor mov jp stos xor mov mov push pop jl xchg rolb xchg mov outsl mov mov or sub inc add mov cld pusha das adc roll xchg xor and xchg mov fildl xchg in mov cmp push mov gs mov or mov je sbb mov cli clts movl mov adc jne pshufw sub leave (bad) (bad) lock out pop arpl adc pop fidivr jge test loopne mov jl mov fstp xor daa loopne aaa rolb popl jnp daa in mov inc movsb push sub mov ss test mul js cld cli mov lds xor popa (bad) add sub sub lcall and sarb lret pop inc aam and arpl jno cltd scas and mov daa imul and lods sub xor cltd (bad) out repnz dec mov jb loope push mov in adc mov jp pop rcrl testl loopne adc sub mov or jo jmp popf xor cltd das aam outsb cld add mov sub pop mov pop ss sbb lcall add fist dec xor or mov adc inc lock rclb dec or call shlb jae xchg aad in aaa inc aam mov mov jbe add and pop test mov test or cs sbb out add pop pop xchg and sbb push scas into loope sbb roll jnp js xchg loop jle bound sbb cld adc add mov fsubrs and xor daa adc adc mov mov cmp movsb add xor push dec mov add mov enter sub cmp call into pop mov imul popa push shrl cmp test add dec std call and or adc movsb movb loopne xorb out scas dec adc movsb add xor es cmp add xchg xchg add lods popf jmp push data16 xor lds sub pop inc adc sti push (bad) addr16 lock cmp jne into pop jge inc js andb jp call and cli cmp sub adc add xchg movsb mov pop lahf nop adc clc adc mov loopne pop mov daa push xchg std xor stos fwait cld sbbb mov mov add xchg fs in ja adc pop call pop int3 inc add jnp cmp cltd dec hlt jns add fwait rolb rclb hlt loope dec cs sub push push ret mov and in movl mov inc sbb lret inc cli cmp mov jmp mov sub ret popf xchg aad inc jbe sbb dec jno sbb add pop sbb out test adc pop and inc mov repnz popf mov jae inc adc popa mov mov addl sub add test arpl sub cmc or call and sbb test rorl jmp and cmc xor add jmp ret (bad) nop push jns inc pop (bad) pusha jmp sbb add cmp add jne dec dec jmp add adc sub jmp rcl push sbb add mov mov mov pusha mov jno and cmpps mov jbe sbb sub add add movsb pusha mov sub and inc add cld outsb sub mov rcrl iret mul inc ret mov inc xchg (bad) mov push fwait dec jmp push ret jb or xchg out pusha lret inc int in mov mov pop stc add push sar xchg les push (bad) xor or mov test int3 dec mov mov nop jo sbbl cmp mov popa imul icebp push mov cmc rcrl mov lret jo inc push pextrw xor out cltd cli bound call sbb and push cs pusha or sub clc or fsubl (bad) add adc les arpl cmc xchg sub out sbb pushf add jo mov add cld aam cmc and mov xor rclb arpl add cmp movl es repz and (bad) cld imul or icebp test pop iret sti nop lcall mov dec mov rolb dec inc add xchg out mov clc dec push mov mov or sbb andb mov adc jmp add pop fwait ror roll lret cltd mov mov push ret mov jge nop or loopne add jnp or and les push sub mov shr sbb pop or pusha xor imul lret ljmp cwtl dec incb xor data16 sbb push out out jle cmpsb mov add rcl mov inc adc mov andb outsb pop shrb (bad) (bad) repz jbe cmp sbbl pop mov and xor mov aaa movl sub call sti out mov mov push sarb or sub loope fadd xchg xor cmp movsb je push push mov out inc xchg iret mov cmp test cmp mov sbb pop adc jmp cmc in dec push mov fisubr or mov mov test cmp push lcall imul or inc dec jbe xchg inc sub mov (bad) lock iret popa cwtl mov or jmp push fdivs pop mov leave cwtl pushf or push rcrb or loope push fdivrs out (bad) es or test pop (bad) out inc mov and sub or push add sub mov push nop adc jne pop jmp adc pop (bad) jg and movsl inc les rolb fild mov sub mov cmp and adc dec mov xor cmp adc pop repnz jae shl dec push mov sarb popf pop nop mov movsl xchg add jge sub in cli loopne jno loopne testb fldl test or pop test sbb iret sbb push dec loop add dec clc adc jmp xor sbb cwtl mov (bad) add enter sbb push sar mov (bad) loope add lahf imul inc or sarl add leave lret mov test dec cmp add test xchg xchg in inc add int3 xchg in mov inc jnp cwtl inc add mov test nop mov inc fild adc jge xchg in fstpt add out cld movsb adc cmp daa das insb mov mov add test mov add lock dec push pop cmp sub mov fs push insb decb fbstp sub call jmp aam mov fwait pushf cmpb shrl xor xchg call adc mov addb mov (bad) fild lds inc mov rorl repnz dec subb cmpsl cmp mov push (bad) iret out add xor test push xchg pop push test les pusha scas fsubr add pop data16 sub orb or lret call in mov or mov sbb xchg push sbb es cmpsl or xchg add cli imul push sahf push jecxz icebp test cmp inc pop lret mov or shrb (bad) repnz mov dec call push mov lea push movsb sub sbb pop popa cmpl je adc ljmp xor outsl inc test fwait sbb sbb mov jmp pop xor push sub push mov mov cmp pop add outsb adc sbb mov push and adc ret pushf test lea push sub adc mov jno sbb aaa fsubs fs mov das sub inc sbb push test xbegin imul stos inc pop pop xchg add mov cmpl add test add cmpsb mov loop add iret push dec mov pop rclb (bad) and loop rolb add test addr16 cmp adc xchg shlb loopne add xchg add lds daa and fisttpl enter jg pop pop out xchg out cmp pop jmp enter xchg jae nop xchg mov adc pop add cwtl dec push lods xor sub in mov add mov pushf xlat andl push add sub xchg xchg jnp gs jae jo (bad) push jno movsb jg jnp mov imul mov pop fdivrs sbb xor ret mov jge hlt add adc and add xchg jmp add push (bad) fstpt mov adc add sbb outsl pop sti inc hlt lret jb or push pusha jmp pop cmp loopne js or aas pushf inc mov testb dec and push in sbb fwait push push test dec cmp test pop xor push mov arpl inc (bad) clc gs mov outsl lods jb adc pop andb xor cmp sbb dec add dec adc mov mov imul lahf mov mov aas outsl mov jge les (bad) fisub inc cmpsb dec mov add xor or mov pop sbb or (bad) sbb mov inc test pop push sub mov orb pop lcall (bad) fbld cld pop rcl sbb and add xchg out fs popl adc push loope add pop out mov pop jge push or das or sub push lcall js dec fldl2e lea push mov push div add jp or sub int shr inc arpl add jno out jo aas cwtl sub bound pop or popf lock push sbb rorb aam xchg xchg mov or in adc rcr movsb imul jg add add les jo or cmp mov push add (bad) in je lods pusha add mov loope cmp fsubrs dec (bad) in jns or mov and add lcall jne out add nop cwtl shl loope notl fsts xchg dec js mov mov in adcl repnz cld xorb sub cmp faddl adc xchg pop fistl cmp or aam ss sbb inc adc sbb cmp or scas pop mov and push xchg add rcl scas inc movsb call sbbb test push add mov and inc daa and mov add push (bad) dec cmp push sbb mov movsb dec call idivl mov insb or dec lcall adc or mov mov fisubr xchg mov push add pop aas ss ficomp pop add pusha mov mov aas sbb outsb mov and ljmp popa jmp push jnp cmp cltd inc sbb cmp loope popf clc mov mov faddl js scas in and popa adc adc les add pop popl iret sbb jecxz out das lcall mov fstpt popf aaa pop aam xor pushl xchg pop push sub (bad) mov sbb cli cmp xchg movsb pop mov pop insl (bad) adc fwait pop mov test add and push daa push insl adc xor sti movsl dec inc xor add pop push and neg icebp aaa inc jo or push pusha mov movb pop xchg cmpsb repnz aam cmovp adc mov xchg mov je xsaves and in roll lods pop push lock xor popf jg mov push jae push pop fimull xor pop (bad) repnz in ss or vmread ret jle icebp mov jo inc pop add jecxz enter push push movsb in and jmp cs out es push add lds push sbb mov leave xchg lods ret and or and mov jo loope repnz mov mov push rcll (bad) jmp scas and add mov inc sbb sub xchg popa insl mov cmpl cmp cmp les jo cld nop lahf and daa sub inc add push hlt sub or (bad) pushf nop jbe notl jbe in sbb sub adc addr16 push push aad add lods sbb mov adc push pusha xor mov jb rolb mov hlt outsb jmp cmp mov xchg fsts aad sub add mov or ret popf mov add fdiv popl sbb pop arpl into int3 jle add lods inc mov sbb add mov data16 cmc or test pop rolb mov shll sbb popa rorl jl jp fmull pop mov stos or lret cmc fs pop movsl sub jno add push pop inc inc out pop add xor or and cld and dec and cmp mov jp push add ss jo nop push mov fsubrl xchg or clc sarb sbb jns imulb bound mov push jnp sub mov cs and add and mov loopne insb rsqrtps push fistpl adc sub jmp inc dec insb add (bad) sbb and bound mov (bad) pop inc test jp sbb dec stos sbb arpl repz pop ss pop out sbb mov pop gs popa jae repnz dec mov push inc rclb (bad) mov jle jns int subl inc inc add xor sub cwtl pusha mov cmpsl fsubrl test inc add repnz popa pop mov sub fiadd sahf test dec cmp pushf dec mov sub xor and inc mov sub pop sub and xor imul inc and xchg sub add mov sbb fs ret jno pusha push pop stc add sub mov cmp cs int3 in clc pop popa xor std or mov or (bad) dec test push fstpl leave dec jge mov sbb clc add xor add daa adc loope lret movzbl dec bound pop xor pop lods push enter mov add (bad) cli hlt jmp or pop add (bad) repnz add mov cwtl pop fsubrl sbb xor cmp sub mov lds std push test call mov xchg xchg cld imulb lock xchg mov inc cmp faddl (bad) ja xor popa push xlat lock into push lods ljmp xchg (bad) adcl pop mov lret loop (bad) xor cmpl pop fwait enter cmp sbb add fsubp push sbb stc ret push repz add jbe addb cltd push fnstenv movsl (bad) jo outsb insb mov out fs adcl mov clc pop popf xor sbb push lea mov mov mov mov lcall mov add pavgb sub xor cli pop xchg and enter cmp pop leave rcl cmp sbb xchg inc inc dec aas test pop insb inc sarl mov aaa add and lea aas sti mov or addr16 fisttpll inc adc xchg sbb add lea or (bad) sarb jb (bad) roll in nop jo or mov add push inc or jmp jl out es add sbbl lcall pop push cwtl roll sub push and imul dec adc push jb inc idivb mov pushf mov es push mov push pop adc pusha cmc cli lahf mov mov shl mov sarb jg ret jmp jae xor jmp shrl sub mov adc (bad) sub (bad) insb outsl pop (bad) mov (bad) inc decl mov xor shrl in push add fsubrl add out mov or repz jo fwait loopne add sbb pop cwtl xor imul outsl repz frstors inc xchg aas mov xchg jge sbb sub andl fldenv xchg (bad) popa movsb mov aam icebp loopne add ret mov shll jmp outsl inc int3 jno add mov xor cmp inc sbb jo in pusha jg xchg push jno sbb in mov xor mov mov dec dec jno dec negb enter mov bound push scas jmp push cld roll int3 jp bound dec mov add and fs lret sbb cmp push mov mov mov rorb push pop repz roll icebp sub mov into inc or dec push fld out movd loope and mov lock jmp or into ljmp (bad) sti mov xchg cltd jle add mov sub dec jle sbb jp fldt mov xchg xor adc clc inc sbb fmuls movsl or aaa sbb dec (bad) inc fwait inc cmc faddl or sahf dec fist and stos sarb loop std subb pop sbb adc push fistl int3 or cmpsl mov dec mov roll sub pop mov out add pop cmc jp add in fistpll dec repnz and inc roll xchg mov aas call insb jb rolb mov movsb lfs sbb inc cmp fildl mov icebp sbb nop mov inc lret push push adcb fcoml (bad) pusha mov test addb nop das fwait into test jle or data16 outsb pusha je js cmp cltd add scas pop add fwait add jecxz pop xor out add sub mov daa pop mov in cwtl rcrb hlt add jp cmpsb xor xor cs push sub mov cli and lret push popf jb mov adc dec decl je inc int3 movsl repz stc add mov ljmp add sub inc loop and add inc mov or (bad) xchg inc sbb pop fwait xchg cmp pusha lahf mov add repz in loope pop mulb lock and cli sbb sbb insl mov in fs adc push into and jmp jne popa adc test jae jnp add fbstp push loope mov (bad) cld xchg dec jb and push add cli mov xor das inc mov into pop or (bad) call cmpsl aad clc cmp fist inc fadds push test mov pop pop pusha xor test sub cs rcrb je mov sub inc pop inc mov sub pop aam and fiadd stos repnz jge mov dec lds inc fcomps in loop mov mov sahf and or loope cmc xchg cwtl lret movl cmc xor mov mov xor inc std jbe add cmp shl mov loopne adc int3 int inc cmp pushf lea push xchg mov movsb sub add lcall clc xchg sub mov imul add lahf mov sub imul mov in and push outsb movsb cmpsb pop inc sbb add outsb lcall imul or inc mov dec fdivrl adc dec out loopne mov push cmpsl xor stos mulb mov push fbstp xchg adc or daa mov add mov mov test cli cwtl scas loopne or stc dec icebp sbb inc jns or movb mov pop call inc push stos popf (bad) sub fcomi fwait cmp pusha loopne and inc shr ret mov jo pop push inc mov bsf or jmp cltd (bad) pusha cmp imul insb stc cli (bad) pop cmp and cli out xchg cmp pop sbb and mov dec shrb push push add push jno inc sahf inc (bad) test sub inc popf add fstpt pop iret stos sub mov pusha loopne mov or loope mov jnp ss mov icebp rorb mov pop fdivr es stos add popa cmp adc cmpsb push loope mov dec sbb popf mov xlat dec lret jecxz mov pop nop mov jns stc sbb mov cld xor inc adc bound (bad) aam movsl xor adc lldt or inc mov nop add ja insb sbb cmpsb std dec inc mov pop xor pop aaa gs add mov and popa pop aaa fwait mov xchg add out mov inc or loope cmp jae cwtl fmull push bound mov or add mov pop cmpsb hlt inc add push jl dec sbb pop sub mov fstl cmp lret jmp outsb jns lret movsb dec mov pop sub push out xor (bad) mov xor mov test pushf or mull inc pop add adcl pop mov je scas sub mov xor push xchg sub inc mov (bad) daa dec dec mov xchg out popa insl pop loopne stc jmp push popa popf jmp xor add fidivrl pusha lcall mov pop add cmp dec sbb push test mov pusha in sub pop or dec cmp mov adc repz fs or imulb out add mov (bad) sub or popa mov xchg adcl inc and mov xchg pop xlat sbb xchg xchg mov adc xor (bad) loopne test aad call cmp lret inc sbb adc enter sub nop mov aad repnz adc sbb cltd stc push mov add or lret clc mov pop call outsb add adc push inc push fadds imul imul and call fwait xorb cmpsb arpl jbe mov sub mov popf sahf push xor call xchg add lahf mov in and add std divb add cmp mov xchg out lret or (bad) pusha or pop flds push adc mov call fstpt movsb adcb fidivl mov imul in add scas jne xor inc lds mov add pop stc sbb rol fs xchg add add and js push xchg test pop outsl inc add test jns sbb clc cmpb aas mov add sub das mov xchg stos xchg pushf inc lcall rolb dec bound sub (bad) sbb outsl das push mov sub add jns sbb mov mov (bad) sbb gs sub or or push lds mov inc das call (bad) and and pop loop pusha and ret jne xchg jg lods inc push les pusha rclb mov aaa sub loopne fbstp adc cmp fstpt call call mov add rorl pop or (bad) cmpsb fiadd pop inc dec cs stc addr16 or mov sbb add aas inc stos sbb xor mov or adc clc roll cmpsl mov js out jnp stos xchg sub xchg in punpcklwd icebp push aas jnp cmp (bad) loope xchg test addl or mov sub push and rcrl dec movsb pop mov pop and mov (bad) stc mov cmpsl icebp and mov xchg jne or repz add hlt mov cwtl loopne add push sub pop pop xor lea lcall inc mov lret repnz fldl inc add pusha mov inc bnd mov mov push xor xchg pusha mov pop add sub push mov mov add push outsb outsl mov popf mov stos sub insl dec scas jno push xchg jno add stc (bad) popf mov clc aaa rorl xlat fldl negl mov and push jp add mov dec clc not mov das mov add jmp add add mov mov pop adc sub jecxz stc cs mov mov dec call popa sbb add inc adc jno aas or movsl icebp bound inc hlt or fsubl mov es ljmp (bad) ss (bad) mov (bad) xchg dec ds xor xchg out cmp mov into es or loopne (bad) cmc mov pusha jecxz dec loop cmp (bad) stc inc and insl rclb sub insb es test adc enter loope (bad) ds mov inc lods daa scas popa pop lods fdivrl pop cli jg,pn pop cld xchg or jp cmp out lock or xor push into push das fwait or push add (bad) imul out jle xor push test mov out imul loopne add mov push imul ja mov mov inc sbb mov mov mov jmp out outsb movb (bad) xor mov std dec lods popa orl lret movb jp sbb push movsb enter push pusha les lahf cltd sub and inc add mov rorb fisubr mov test add mov popf bound loopne call cmpsb pop add sub std add jg pop bound xor jbe fdivrl mov add lock jle repnz xor push and xor xchg add sub sub ret mov jp inc call mov cld scas jo pop arpl dec dec fcmovb adc adcl das inc inc and ljmp lahf push out jnp push ret add xchg mov cmp test into sub mov repnz jp pop push mov icebp (bad) or ret stos insl jo sbb lret nop icebp aas (bad) cwtl adc ljmp xchg add dec rolb add pushl add mov lock xor icebp scas jb pop mov incb int3 mov sub mov (bad) jbe xchg push pusha movsb testl mov cmpsl add xchg mov test dec mov aad adc rcrb xchg cmp shlb loope jp and sub dec popa out dec push ret add jno mov sub lret inc mov mov pop hlt add or ljmp xlat (bad) sub jae add pusha mov stc ret cwtl pop ret fxch dec cwtl dec cmp adc cmc inc mov je cltd fwait push (bad) mov mov inc pop mov imul rolb popf push (bad) adc add fs pop nop iret push mov mov das xor push mov push loop test andl adc stos fisubl movsl inc and mov push enter add (bad) outsl inc mov es sub roll sub mov mov and clc cmp mov data16 mov xchg pop pushf or add scas imul inc inc jmp sub xchg mov call aas andb loope js fdivs mov add rolb scas xchg or dec pop (bad) jmp insb (bad) out mov add roll call add hlt mov fsub pusha or or adc mov lock or pop loop test pop hlt add movsb add push lcall cmp aam or adc and andnps ret sbb enter push lods sbb clc cmpsb or sbb (bad) cld jge cmp sub hlt ss dec mov adc cld or add jbe sahf call mov movsl cmp sbb ret cmp test popf subl mov xor (bad) testb and inc mov popf fist sub add xchg mov ss and adc pusha pop inc xor jp push or dec push popa outsl adc fwait mov mov cmp push jl and shrb iret andl loop add or adcl bound adc aaa sbb repnz pop cld sub xor fbld test xchg xchg push adc popa push pop xor outsl adc push mov insb lock cmpsb test shrl aaa les jbe inc jecxz mov xor pop pop int xlat in lods in pop notb orb movsl cmp sub pop push cld push mov add andb pop push addl add xor mov push pop sub call mov sub repz test inc jb dec sahf mov sbb movsb mov adc jb pop mov jg fildl add push std mov (bad) sbb inc mov mov mov add push rorb lds sbb sub sbb inc mov stc xor sbb dec jo or push (bad) mov add test and adc adc add orl jnp pushf dec sahf or fildll and dec pop or inc repz add fwait xchg int3 aad xchg xor mov sub test add dec call pop pusha cmc jae nop jns add je in lea pop xor push test mov ficompl push movsl les scas mov hlt jo sub sub and and dec fiaddl push movsb pop outsl int push pop mov inc xchg fs insb push inc push add mov mov mov test inc sub pop adc lock pop add out xchg xor cmp cmpsl sti mul push sub ss lea test sbb lea (bad) fdivs movsb lret (bad) pushw or or sbb mov gs mov or rorl or movsl andb and lock push repnz sti fs add into mov add sub popa add (bad) and mov shr mov jns xor jo mov cs outsb adc mov pop sbb jno push mov loope ljmp sub add lods or in jmp sbb xor sub jmp mov xchg jne push loope sbb pop out xor pop inc xor shr cmc test jmp dec and out ss cmp sub and sbb add mov mov fsubrs or dec mov test bound and iret hlt ja push push pop add jnp pop ss cmp (bad) jbe pop in and sub add sbb popf aas jge test inc jnp sahf pop fisub popf mov imul loope xchg mov jno mov scas popa xor xchg push add in add ds cmc cwtl mov xchg test dec fstps mov pushf sar or inc hlt ror (bad) dec fisubrl subl rclb test outsb das add or push ljmp (bad) andb pop arpl adc and adc fcoml mov mov pop mov push call xchg ficom rcll cmp cld fistl fnsave sti xlat jmp add add jecxz mov daa mov xchg mov pusha fstps add xchg out out xlat (bad) cpuid hlt loop adc hlt (bad) aam jb adc inc pushf dec push into mov loopne push xchg or fld sbb cltd les push pop addb cwtl shrb dec inc shlb aaa out mov stos mov popa xchg insl popa shll imul sahf add test das push dec in dec loop insl loope dec cs push insb mov pop sub adc stos or jns daa jecxz jle call rolb stos arpl (bad) xor fs int les bound pop lods sbb in loope inc adcl xchg inc mov pushf (bad) aad test pop sbb in cmp test (bad) mov ret add pop cli push loopne mov mov mov dec test dec aas loope cmp shll adc mov adc mov pop mov arpl jle or xor out or mov iret mov jnp jo mov pop mov sbb push addb add dec sbb repz xchg push loop sbb adc (bad) jne iret movsw adc pop add push xor repnz pop xlat push sub popa push xor (bad) jb test ja in out ljmp xor mov mov dec add insb aam imull or mov roll add roll and adc neg (bad) push pop sbb inc cwtl cmp jbe mov repnz lods popa push scas mov outsl xor xor jne dec fidivrl cmp add pop (bad) push jne imul inc xor and repnz and call push push stos mov cmpsb std addl cmp or xchg mov jmp dec or mov xor adc mov (bad) cmc ss and pop shr jmp xlat mov imul pop sti mov mov push sub mov mov jne xor xor leave push fild sbb idiv dec add pop or outsl sbb mov push and mov sbb rolb push push mov bound push push dec push cmp cld rorb and lret testl sbb jmp and lods loop shll das out ja jnp shll ret mov inc or sub push push mov repz das jge jb and dec pop dec rolb mov daa pop in popf ja in stos sbb sbb cmp lods or adc pop dec aas push and push mov lret pop add jmp lds jmp cmp and inc mov cmp pop adc dec inc loopne sbb (bad) xchg or cwtl mov scas mov lea (bad) cmc pop xor push adc icebp dec decl into scas ret and xor outsl shrb lcall adc bnd in xchg aaa and jge jne popa fstpt adc mov push pop mov and fsubl cld orl add ja je ficompl ja jnp adc pop scas in das inc out push je xchg xor test jne pop shll sub mov push cmp je lahf out es add fcomps jno pop or xchg and addl outsl pop xor add push scas lret pop push les mov mov out or pop pop rolb lahf jge je inc add cmpsl mov cld hlt (bad) adc bound sub (bad) out jge mov cmp mov sbb pop mov daa sub jge pop sub repnz icebp fldt dec (bad) scas cltd imul fs adc scas sub mov mov pop lahf pop xchg adc jnp xor ja sub pop lea neg dec jo lret nop cmp sub pop sub pop data16 cltd cwtl shlb addr16 adc (bad) push aaa movaps push jb repz jl in (bad) dec movsb mov jecxz pop inc push and loope sti imul jle outsl fldl test (bad) sbb shrl scas inc sub and pop jbe (bad) mov sub pop adc push ljmp cltd cmp fmul push xchg ret pushf mov lahf jg mov rcll pusha add pop push mov jp sbb sub adc push (bad) mov jle fsubrs shl mov jge in xchg sbb daa xor dec ja push jp or pop (bad) dec ljmp push jmp (bad) js adc fistl dec daa scas fstpl xor mov or cmp push or sbb (bad) mov jmp insb (bad) jmp stos push faddl push fidivr sub daa int cmp icebp fst loop jbe and in jg outsl dec push fcomip (bad) dec (bad) cmp rcll je pop (bad) mov scas add pop and xor xor imul adc jle (bad) add fisubl mov out clc mulb or sar pop mov rcrb cmp fisubrl pop lahf add push cmpsl (bad) je shrl pop jmp mov (bad) or or addr16 adc (bad) mov push aam cli push mov add pusha mov ds les fistp dec jmp jle mov pop gs rcrb sbb inc push xor adc add idivb loop rcrl out dec jecxz int out mov add mov push xor pop add jmp dec cmc rol pop aas or or inc sub arpl mov and (bad) xchg inc clc jle stos xchg push jmp pop ja push adc lods xchg sub aaa cltd jno sbb imul xor pushf xor lret nop nop test inc inc jmp push je add addr16 stc xor pop xchg in push add pop mov fsin mov mov js cli cmp sbb xchg scas pandn pop jge dec pusha call pop mov pop mov push lock pop ret std jge ljmp fistpl adc xchg fs inc jecxz bound imul add push jg jl push push inc inc push inc mov pop xchg xchg mov mov dec lea pop cs je or dec test push shr (bad) dec scas iret aam push mov nop or les cltd rcrb push add adc add pop lcall cmp add jmp addr16 adc popl scas clc data16 push push pop inc dec mov decl add jg pusha pop pop jmp and ss add ljmp pop sbb mov test inc sbb daa and lret add xchg dec mov loop sbb je add movsb stos pop mov nop add ret jmp cmp add lcall rorb pushf mov out addl pusha or pop scas pop cmp jl cmp iret jno stc mov sbb mov stc and mov sub inc mov imul lret fstpt mov mov sub push gs push mov adc inc dec sar mov jne mov (bad) or les xor dec lcall in inc (bad) xor cld addr16 xchg push xor (bad) in inc xor pusha inc (bad) mov push push scas (bad) movsl mov andl jp xor mov test sahf outsl nop mov sub cs sarl sbb or test js adc push (bad) stos fnsave lahf stos and notb xlat aas add cmp sbb lahf adc adc mov push xor je test adc add xor daa ret add inc mov sbb mov sbb sahf add mov or cmpsl lds and inc add xor mov inc insb dec andl iret add scas push cmp jne or adc jnp data16 sti or mov cmp lret xchg xor insl cmpsb cmpsb add std pop call ds ja insb lret lret push xchg adc popf add test addl sub mov xor cmp and add lock or push add inc fwait add cmpsb cmp add mov cmpsb xor pop inc push popf push push and or cld dec movups pop out mov mov xor mov loope push mov mov rolb jne cmp or or movsl cmp cli dec sbb in repnz inc and and xor dec mov imul cmp pop test add addr16 push xchg sbb mov sbb call (bad) mov insl dec push or dec cs ss cmp cltd sbb or popa popa pop inc ljmp ss mov loop ds enter pusha lret sti inc and ror lea adc ja add and ljmp ret scas imul (bad) pusha add mov orb aam popf adc mov add loopne ja icebp cmp pushf mov cmpb aam mov out push cs mov push xor mov daa dec pusha pop pop xchg fstl pop cwtl jp lcall into jae out dec imul mov into adc std fimul inc adc test jg movsl shlb dec pop jg and jns arpl sbb loop fbld ja ror jns test leave lods scas sub or in cli push or insb ret mov je call sbb mov or push nop pop imul pop and aas inc lock xor sub xor out add int3 mov add dec pop sbb push mov mov fwait push dec mov (bad) inc mov jno rorl and loop inc pop pop pop lock xchg stos enter add or call adc adc inc lds andb mov pushf (bad) hlt mov cld adc adc ret int3 dec jbe decl js dec jle xchg call testb jo psubw xchg xor fcoml cmp and push inc cmp pop enter ss ja jne add cmp or mov test cld outsl jge cld dec adc cmc jg iret pop push leave aaa dec xchg mov pop add pop xchg xor rorb mov inc adc je mov imul and push pop jns lcall xor fisubl push push pop mov xchg sub xchg mov xchg inc adcb mov insb sahf or sbbb pop add imul add push mov inc pop mov into pop dec xor sub push mov hlt push jae cmp neg mov pop and pop pop xor ficomp fldenv xor mov std ljmp aas sarb xchg pop sarl lds mov push or jge sub jne dec icebp add pop std popf mov fisttpl mov imul es jle mov mov pop push add lahf cmp jbe push add add dec andb (bad) fidivl mov mov jmp bound or mov sub ficoml sbb scas mov push inc sti mov inc add pop push pop ffreep jecxz jmp movsb scas lock pop dec mov push out cmpsl scas adc aaa mov xchg adcb pusha fildll and lods sti cmp scas fldl ror push arpl cli pop ja push data16 xchg leave mov push add mov aas pop shl add pop cmc rolb mov ljmp (bad) jge add jmp les add mov stc jae mov sub je and imul xchg push and mov das jmp push push inc les ds dec jns (bad) jae adc adc mov sub sbb dec jnp (bad) out or loop fimull xor cmpsl pop cld sti and dec scas pushw jl pop lods popf fistpll js fwait int cltd add inc cld ds mov add xchg pusha (bad) cmp or (bad) and inc add xlat mov xor push stc pop inc jmp pop pop aam sub cli xor push xor fimull adc push dec inc push in add or add xor mov cmpsb sbb jecxz icebp pop pop dec sbb adc (bad) jnp push cmp cli xchg repz inc hlt das push jge ds std jmp into add fisubl pop pop loopne test jmp mov cli std sbb add sub mov je jmp fstps rcll outsl nop xor jmp mov jmp fiadd call mov or push (bad) in mov (bad) adc pop hlt jbe std cmp xor scas push test out sbb cmpsb add cmc js mov jmp mov mov iret (bad) cmp xlat aas pop sub in or add jmp in push cmp add roll jl push push pop sahf inc mov pop push popa test lret push xor jmp inc outsl push pop cmpsl xor sbb clc or aas jmp and add xchg dec notl pop (bad) lret add (bad) and jp jecxz rcrl sub outsl xor jnp cmp sub xor out inc push pop push ret nop dec fist cs fisubr nop add jbe dec xor imul in mov jmp jp sub and cmp inc shr add pop repz pop push inc push xor roll ror push sub jge sti cmp lods js scas xlat fimull mov or xor sbb test dec lcall xchg xchg mov sub mov or dec jo or lret push add add fdivs scas or pop incb sbb mov add add scas push sbb jecxz xor mov mov (bad) cmpb loopne or xor jnp fcoml mov jg and cmp roll repz jge add pop xor test mov push mov icebp daa push mov popa inc fneni(8087 pusha and sub push out adc (bad) loopne or or cli push ja push lods jnp pop add cld add (bad) int3 gs test cs mov push movsl icebp imul loope ds and lods (bad) pop pop sti adc andl ja dec jmp out adcl dec lret icebp dec scas lcall jmp stc jmp (bad) pop daa pop roll das ret out in out lods movsl xchg sahf xor ds pop shrb add roll out dec fistpl inc pop lahf pop cmp daa jmp push outsl out add ja addl sarl int3 mov push into push inc pop movb pop push add sub adc or mov xchg xchg adc sub (bad) add (bad) xor pop mov push das cltd and sub jmp out cmp fiadd add notb (bad) loopne (bad) int3 xor xor out push push sub call loopne leave mov mov cmp xor and jmp stc out push push out mov pop xor pushf sbb xchg pop mov push push cmc icebp cmpsl add (bad) sahf xchg fildll push inc or sub mov or inc mov repz fildl push dec xchg out sub jp int3 pop xor jle jecxz adc pop ljmp dec sub xchg nop sub lahf pop das pushf dec mov push push sub pop aam movsb pop cmpsb or aaa add and jmp adc aad test in in iret out pop adc test lock pop ret or xchg into test pop ss adc in mov cmpsl jle sbb outsb xor incl pop xor jp push mov pop jg or cltd add les dec adc xor add mov jge push jo mov jnp push shl push pop add xchg push aam pop push test push xchg imul mov div ljmp in das not sbb out and inc data16 js mov and into cld dec rcl (bad) adcb fimul pop sub inc push rcll jmp mov add fstpl cmp ss adc sub into pop sahf xchg ds femms decb (bad) mov inc out add test sbbl mov mov stos aas and not pop sbb push mov inc mov adc mov xchg adc lcall enter push out sbb and lock js jnp stos pop sbb mov mov add out add repz shl mov aas pop xchg not xor icebp or pop outsl pop xorb jb repnz nop xor mov adc cwtl mov mov cmc cwtl or sub stc outsl cmp ret jp push and sbb add sbb das jp shrb rcrl fnstsw sbb and fildl push mov add jmp jmp cmp loope inc mov mov add mov inc into add aam in (bad) mov jnp ljmp or jnp dec lods cmp push push daa mov imul and aaa and insb sub pop cmp sbb popl jmp mov notb lret ret (bad) push dec jle enter xor jae mov and jns and test inc cmc fnstcw ds jne test add lods xchg iret aam test xor xor repz movsl fdiv push xor add out pop roll test add fwait das ja mov pop enter jecxz lret sarl cwtl adc or mov repz push xchg and pop fldenv sub add dec mov lock rcrb stc xor or negl cld adc pop enter sub mov mov pop fdivl mov repnz or dec int3 jne xor mov dec xor clc (bad) xchg out ret stc jne jg out xchg inc (bad) scas sbb jne fisttp bound dec ds mov repz adc xor pop inc aaa lods gs pop popa sbb or jp mov or adc popf call jae add xchg sub mov sahf dec fwait lods daa pop push mov fs push hlt movsb mov (bad) jns repnz xor in or lods inc inc xchg xchg and push lcall stos and xchg mov add imul jae add and mov (bad) enter push mov push nop mov int3 call icebp xchg shr add mov or adc push jne inc test ja movsl mov aas and add adc clc lods xchg cmp js pushf cmc ret fdivs pop add adc rorl mov push into rol adc dec cmp es lret mov jl inc add pop mov (bad) or xor orl insl rcll sbb pop cmp (bad) (bad) aaa inc jmp inc test add loope fs dec jl jge outsl or jns nop dec or cmpl inc loope jbe or out rcrl add imul pop pop mov add dec fwait and mov leave push ljmp ljmp dec jns push push cltd mov push mov sbb mov jno or sub or mov mov adc or les rcr push lahf lcall push nop mov popa or mov das out mov add mov dec dec fld (bad) add adc rclb push (bad) fistl add or mov push xor fistpll lcall push xor rcll sbb add xor popa cmp in push fdivp jl daa lds add jns imul (bad) jb inc (bad) test add cmp sbb std sbb in in inc dec clc mov push mov test test add or test xor aam int3 sbb adc lret pop into xchg adc mov xor shrb mov mov push and popf cltd in ret add dec sahf or inc inc out inc (bad) pop dec mov xor rolb dec test push insl xor pop mov jb xor inc popa cmpl push out add sahf lods xor sti fstps adc movsb add sbb mov hlt and jo inc add jns faddl inc aam add lods push mov xor out scas les hlt or imul push dec stc or jae int3 mov jae add xchg aam xor xor ret or lock mov inc pop ja and jne add ret (bad) add dec xchg lods adc lock sbb pop cmp arpl rcrb in imul or xor je adc xchg xchg fwait adc and or notb or and inc cmc jge sbb addl jbe push fwait sub mov aaa push add (bad) lcall mov lods mov sti jnp or cli mov cmpsl jo mov nop adc sub es lahf xor mov or or push lods pop repz popf mov mov inc push xchg test dec pop pop test in or lds loope daa mov insb fistpl sub cmp test cwtl pop xor (bad) outsb inc punpcklwd lcall add jo out mov pop inc mov push outsl (bad) xlat in push pop movsb int ljmp cmpsb cwtl sub adc (bad) cmp fs enter add xchg je imul xchg mov sbb cmpsb push test mov xor ds xchg lea add xchg push jbe pop loopne jg (bad) mov cs cmc mov mov pop jg jl pusha inc inc out ja and inc and add daa mov test xchg pop rorl cmp or nop lcall lock (bad) (bad) imul mov push out add insb cmp nop push jbe pop pop xchg lcall jle mov shlb jne test or pushl mov pop xchg shl iretw pusha (bad) movlps mov push in push cld lods dec adc add fs ljmp mov dec test mov push les and add aam mov mov daa mov (bad) pop xchg mov inc in js xchg les mov push mov lock dec rorl cmp jmp sahf push ja adc or stos inc inc or rcl adc in mov xchg jmp xor and jno jmp fmul lock enter add sub jle (bad) (bad) pop or push (bad) int iret mov and inc jo push addb jmp addl push push xchg lret lods add enter rol jmp ljmp add jnp pop fist mov mov cmpl fwait xor sub fidivl and daa jg loop or test cwtl pop sub and mov pop jb pop pop adc cmp test lods imul pop push xor dec call fwait mov mov add jp sub js and fcompl jge dec das int3 xor mov jo repz and or sar aas push sbb out insl xchg pop pop popf loopne jmp adc pop jbe adc das fs fwait pop mov add pop adc adc sub dec repnz dec repnz icebp mov ja movsb idivl xchg mov jl add addr16 nop lcall push mov movsb mov mov jns test fbstp xchg mov popf les push xorl shl popa hlt xchg orb mov gs cmp fucomi sub cmpsb es orb lahf dec cmp mov sub adc enter and xor cmp imul js jmp sub loopne aaa sbb (bad) cmp movb pop je int3 mov add adc ds add xchg or das mov js ds inc in stc xor add mov pop push xchg mov ret lock js add add out insb cmp rcll nop scas ds add and add das push push pop out roll cmp sbb pop lea adc xchg pop (bad) jle mov mov ljmp sub cmp pop jo adc sub xor pushf mov xor or sahf mov xchg mov insl mov add pop imul mov cmp mov popa out pop inc xchg push mov leave pop aad and add pop pop das adc daa push inc xor mov inc nop (bad) sbb out mov dec sub pop add or pop dec sbb lret fnsave enter pop push repnz repnz dec lods jae popf pop pop daa sbb decb cmp loope mov mov inc sub jle les pop sti jne pop lods push scas cmp (bad) nop jns add or sub or pop mov mov cmc push add cmp aaa ret xor xchg fistpll faddl daa mov xchg pop adc (bad) call clc scas stos adc imulb pusha aaa xchg scas out mov xchg es sbb jbe inc leave fnop add add nop imul adc jbe hlt jo add cmp shlb add fwait nop loop,pn or testl fcoml push pop popa dec or push nop imulb (bad) add add test repnz and lret stc adc lret popa pop int3 ret repz in pop and in inc aam int inc sbb lds loopne,pn or es inc lock (bad) icebp or enter mov add inc pop test loopne pop add push and adc jnp adc mov lret out mov mov les sub (bad) lahf loope ret scas decl movsl into push xor clc jne mov daa push outsl xor mov and jo lret add push add pop sub fsubrs pop repnz inc xchg jp xor push cmc pop add fisttpl jne xor arpl or mov xlat mov fldt fwait cld sbb sti into jae and or adc mov dec outsl mov sub mov shrl rorl addr16 push sbb or inc pop add pop jmp add jbe rcrb repnz mov adc and sar mov push cmp xchg fisttpl rolb jle into (bad) dec jl or sub adc or test lcall add bound add mov pop subl cmp popf and dec pop test (bad) jmp daa mov lods jno and inc ds bound add mov (bad) shrb push out push inc movsl stc xor or pop ret mov xchg sti pusha sarb dec sbbb gs loopne jns hlt push nop cmp popa pop inc test js sahf js mov xchg lret mov fwait fs rcl push or push (bad) push stos ds mov aad sub fisttp adc stos cmp xchg shlb lahf (bad) dec add and pop stos mov push sbb sarl sarb hlt sbb jecxz adc inc and or jne jg cltd mov inc test cmp daa dec inc test movsb mov cs repnz or rcll adc (bad) int xchg add push sbbb mov add cmpsl hlt mov cmc jo mov dec nop in or (bad) adc std in mov stos lret xor iret add mov sbb inc jne fcoms out cmpb push sbb jmp push mov add sub fiadd cmc sub dec popf mov push add pop mov shlb inc mov jmp pop ret push dec jp jnp push scas push dec xchg jl mov dec test cmc into scas dec scas addr16 inc insb movswl movsb mov xor cs and add mov scas (bad) lret push fnsave ljmp xchg aaa subb neg add add inc mov mov adc xlat add push fisubl add orl decb and xor push cvtdq2ps mov add jl ror or or pop cmpl mov hlt xchg push bound sbb pop cmpsb int pop hlt js mov lds mov xor faddp (bad) or mov (bad) mov push punpckhdq data16 loop dec outsl test int3 mov rolb push insb cmp add mov add ja cld jbe add iret pop stos adc add mov andb push lock mov sub adc cmp nop push dec jo movsb add leave in inc inc sub and out leave cmc adc and add mov pop mov popf cmpsl fsubrp testb ret aas pop ja popl cmp ss aas ja movsb or mov sub lcall dec and cmp in rcll bound test pop mov cs aas sub sub pop xchg mov or pop dec testb (bad) pop pop xor clc gs xchg mov repz push sbb (bad) sbb cld rol (bad) push je bound jg sub push aad xchg or adc mov testb iret xor sbb stc cmp add jp xchg and popa bound push dec sahf xchg push adc dec pop test pop lcall das jge pop aad and nop shlb dec pop sbb (bad) push push lret (bad) std (bad) (bad) fcmove cmp lods (bad) and cmc clc hlt jno sbb stc mov int3 mov clc xchg mov negb adc and or clc (bad) jo pop mov add and movb mov hlt lods shrb stos cmp sbb cmc loop call mov jmp jmp jl mov js repz cmp mov push jo aad in test or xor pusha call adc xor pop (bad) imul adc mov mov jmp pop incb sbb pop nop (bad) jbe push adc cmpsb mov (bad) jae and in sbb cs cmp mov cmp outsl arpl data16 jecxz cwtl hlt in push adc push xchg mov loopne (bad) or mov mov cmp xor cmpsb iret loopne ja pop data16 adc repz or bound pop push sti sbb push rcll (bad) mov sbb imull add sbbb enter or mov mov jnp push jbe je mov inc test sbb into mov xchg int sti push ljmp gs imul lea cmp and (bad) icebp rcrl (bad) repnz xchg adc mov hlt scas xor sahf add (bad) insb imul push (bad) jb jnp lcall mov mov in or add stc add xchg (bad) xor call and in or inc out push pushf je and add das cwtl lea mov dec imul repnz int3 pop stos hlt pop jb jmp pop movsb cli pop push cli outsl lahf add pop push jo repnz inc xor push test jp addb test mov dec popf inc idivb ret xchg xchg jnp add jno inc xchg xor sti insb dec inc sbb jo insl jnp addr16 leave push inc mov in or inc imul cmp fstpt mov rorb adc adc inc scas je lods push dec cltd xor and test cli aam test or inc mov js xor insb push cmc nop (bad) adc pop jmp pusha or sub and xor mov aas push add mov sbb adc out jo xchg in cmc jns add push dec (bad) (bad) imul movsl popa cld lret adc (bad) dec jb lret push stc int pop jp popf ja out mov mov xor test lea inc jle xchg pop add push fs mov mov sbb aas add cmp adc add pop std jne push (bad) jo (bad) leave adc and inc pop push pushf pop cmp and lcall push arpl popa add xchg xchg sub mov movsl sbb (bad) xor or bound add pop push rorl pusha xchg pop jmp idivb stc outsl dec insl xchg add insl es dec iret les cmp ljmp fs mov shlb pop jmp orl or pop pusha lods jbe cld test adc rcr addb imul int3 lods xor and out test pop andl or into inc arpl dec adc lods dec inc roll pop xchg adc lea test add mov lea mov or jle,pt adc roll and jne lcall std sub or out (bad) fdivrl (bad) xchg decl lods sbb jne push dec push test loope add (bad) and adc inc fistl xchg adc and hlt and ss ja sub inc lds in fadds pop outsl and mov pop inc cmovae daa mov pop (bad) ficomp jo push add fwait outsl clc jns cmp dec fs outsb inc pop cmpsb push pop test jno mov (bad) mov imul mov add int xchg mov dec jle daa push push cmp cmp enter outsl dec inc rcl fisttpl and push jne add add push jno (bad) push xor es lret inc pusha mov cmpsl in rolb jo montmul cmpsb ret mov add inc adc test rol push dec dec out add add dec fs pop fmuls jnp mov (bad) jbe sbb pop mov fistpll bswap mov add push nop jb push pop scas fadds adc adc (bad) xor testl push or sub (bad) push jae mov outsl sbb out inc pop test jp dec loopne cmp xchg (bad) push and jecxz mov std inc inc push cld jmp je push (bad) cmp sub (bad) add loope int ficom sarb dec mov rcrb push jp out rorb fmull xchg test xchg push nop scas jecxz mov and adc sub hlt jns push mov or ljmp ja fwait inc xor inc popf adc bound cmp mov mov or mov or xlat sti insl add in dec mov arpl pop inc inc icebp pop xchg dec pop xchg loop sahf into mov jge push inc cmpsb sbb jl xor jecxz adc push pop loop nop push pop or pushf (bad) jg adc cmpsb inc mov mov dec adc add (bad) xlat lock int std jmp mov or xchg sbb jo popa pop data16 pop aad stos int3 xchg addl mov fstpl sub fisttpl cmp sbb mov (bad) sub xor lods popf (bad) sahf mov test lcall pop xchg cmp adc pop or sahf ljmp mov cwtl cmp push les dec adc sbb or inc out mov xor jmp and adc add sbb cld pop pop popa jmp leave or mov fcoms loopne pop push inc mov push mov pop push sub cmp cwtl test insl out sbb movsb lret or mov (bad) loope push lock mov inc mov mov sbb push push ja or inc jge sbb ret push xor iret add shrl xchg sti adc sbb jge adc xchg jecxz jle mov ficom mov xchg cld xor test push add test aas and lret mov and icebp mov xchg mov jbe jae test mov sub push xchg push jp,pn popa add lcall inc aam mov adc popa xchg mov sub xchg dec push mov (bad) push xchg call jb add rclb pop xchg xor mov mov xchg xor hlt lock rolb cmp cmp std adc lea aas testb pmaxub scas dec hlt je inc call sub (bad) dec outsb dec sbb add mov jb push or sbb repz mov das test jl imul repnz pop icebp push push xor and dec test dec lock adc repnz in and dec out lock not mov lret daa dec les pop or xor stos loop pushf popa movsl bound popf add mov and push jp sub or add aaa jns hlt add shrb imul or enter pop add movsb add add stc add xchg mov mov add and clc push pop and add sub pop mov bound gs inc push pushf lret mov add mov and testl mov data16 scas outsb cmpsb sub (bad) sbb mov dec pop imul loopne mov cld test cld ja xchg addb rcrl popf stc push inc std dec in add push push mov lret mov pop out jp lret repnz lret fmuls pop in jmp pop mov fs imul mov popa das out pop cmp xor add outsb inc sbb ja push jne xchg lahf lret les sbb iret inc jae adc jne outsb int lret lcall lock mov jbe invd inc sbb jmp add jne mov and push ret push add push push shll pop sbb push xor js push stos insb jge mov orl mov mov jo mov jno clc mov icebp movsl loopne mov jne adc call or and or mov sbb cmp rolb movsb push fucomip fwait je add clc mov mov and hlt jg mov mov lret stc iret es (bad) mov (bad) (bad) add pusha lock popa adc mov mov or lahf stc mov addr16 ret divb push pop push mov dec enter fdivrl push push cmpsb add lret mov add pop ja call das (bad) cmp cmpsl push mov fcoms shrl fsubrs pop xchg adc push mov jp arpl lret jmp sahf cmp jmp outsl jmp add xor mov jbe lods movsb cmpsb shll inc das pushf xlat push xor enter and popa mov and add imul push data16 cld sarb dec jle (bad) jo push mov fldt inc ljmp xchg sbb push jmp int3 mov pop mov lods loope or inc dec popa mov cmc aas dec add mov inc add lahf sti cwtl daa add stc scas das pop pop ficoml aad or add and sub lods testb aaa sub mov mov xor cs mov lldt xchg sti add and sbb cmp popa outsl ficomp sti lds and (bad) repz cwtl push and sbb jmp cs or add cs push leave and jno inc rclb add mov (bad) mov sbb mov push mov xor dec mov add push push inc pop ja xor shrl xchg sbb push jo jge daa dec ficompl add mov pop dec std mov mov add and in std lret sub mov loopne inc movb stos lret pop xchg pushf xchg xchg into inc push mov xchg daa popa bound mov jb jae in rolb das rcrb dec adc popa cli sub add adc lahf std leave in add mov scas rclb fs dec sbb in shr lret insb aam rolb push inc cmp jb push adc push loope pop dec pop jb and inc inc mov icebp daa das pop inc movsb mov sub xorb daa dec test loopne into xchg or pop jno mov mov mov iret cmpsl (bad) sub ds cmp mov sarl jmp pop fiadd out cmpsl leave sbb adc sbb and or sub xchg inc mov mov faddl addb clc xor pop add aam push or std pop mov mov std cmp xor xor adc dec popf or adc in adc sub test pop mov mov rorb mov je fmull push jecxz out xor loope jb add mov jl or fldcw ret add pop lahf add mov repnz scas or mov add aas imul insb mov aad xchg sub cmp ret rolb pop cmp jle cmc inc (bad) push es push insl adc pop lret mov xchg adc push repz imul ficompl push cmp jo and popf adc loope mov mov popa push add dec mov sbb lret cmp sti (bad) fwait jmp lcall in sbb jnp shrb icebp movsb and decl inc hlt inc xchg cld mov adc aaa inc test or xchg and xchg xor cli push fdivrs sahf pop push mov or add (bad) sub les jl and jb jo aas imulb lcall ret xor mov or (bad) mov nop mov xchg into mov cwtl movsl inc add xor jle mov cmp mov mov test subl xchg mov in daa mov or cmpsl nop push fs or xor in or and sbb mov aam xorl and mov cli lds mov dec mov loope inc cs imull iret test mov mov mov out (bad) pop (bad) repnz imul xor outsb xchg (bad) mov aaa stos enter jb jo rcr lahf loopne aas nop jle push xchg arpl sbb cmp addb sub jno aam scas xchg popa push les mov packsswb mov leave pusha ficomp sahf adc lods sbb roll scas xor mov sub and scas orb mov pop pop adc push cmp add loope mov inc mov sbb and mov push pop jp clc dec add inc mov cmpsb and xchg les xor arpl lock dec sbb inc and mov lea sub cmc push fist push enter into mov mov jnp mov call sub dec (bad) sub mov or idiv rorl add mov stc cltd mov pop sbb daa add xorl or enter mov pop nop xchg lea dec pop add sub sbb jae mov xchg adc les cltd hlt inc and cmp sub jns push or jbe faddl pusha (bad) (bad) xor inc and pop (bad) outsl jle mov sarb sub xchg push jb lods adc sub mov loopne inc push aam add jbe mov sbb nop and pop pop and stos fs jmp mov hlt lahf xchg clc push add jo cmp add ss cmp es mov fstl mov fwait dec jl das or xchg ret call jecxz stos sub sub bnd imul sbb jb mov daa xor out add or popf and les push push or les fs cmp sti pop jo cmpsb add and daa mov mov xor add leave (bad) mov mov cmp pop int3 adc fisub iret loope inc rcrl lret cmp push dec (bad) (bad) and adc popa repnz xlat or push int3 sbb and pop lea pop sbb inc rolb or xor jns ds sub das (bad) jo (bad) cld faddl cmpsl dec or inc les rolb lea (bad) jns add pop jno loopne add or clc in mov inc add mov add and in xchg mov xlat pusha xchg (bad) add jg add out cmpsb nop loope shrb cmp hlt jno xchg mov and add ljmp push cmp ja dec fidiv jbe daa out pop stc inc sub dec jno ret mov dec dec jp dec in das dec test and outsb mov leave mov fistl mov int loope cmc xor sbb sub jle shrb xor dec pop jb push pop push lods dec jmp lea push mov cmc int add pop add xchg and or jmp xchg (bad) dec sub jp dec pop enter mov mulb adc cwtl cmpsl sbbb mov fbld insl movsb add fstps aad cmp pop mov sub dec xchg (bad) out sub out mov push pop mov sub sub sbb call push xchg vmwrite fdivs mov add adc push mov movsl int pushf nop aam sbb ret mov or aam xlat jp adc sub xchg push or xchg cmc jecxz add dec sbb inc inc and sub and xchg xchg popa lods fdivl aam cld xchg sbb push repz xchg push mov push scas call arpl jo cmpsl or popf scas push pop sub push out adc pop sub inc mov dec pop fldt cmp jl xchg pusha mov mov cli popa pop pop pop push mov clc es gs add popf into sub dec loop call lock das mov sbb ret inc add push rcrb add mov fcoml pop cmp sbbl lcall test adc jns push loopne lods mov inc inc or fild pushf in sti xor mov lcall push (bad) pusha mov (bad) push jnp (bad) scas (bad) push sub mov loop aad jle roll nop into push punpcklbw push sarb cmp mov xor push fbstp add addr16 (bad) popa xlat add xlat mov add nop rorb sbb out and add xor xor jo jp or mov sbb imul mov push add xor fistp cs add fisubl add mov cmp mov cmpsb mov mov dec cwtl mov pop add dec movsb cmpb xchg test mov push (bad) jno stos mov (bad) fucomip sub add mov sub add mov std ja rcrl jae mov imul cwtl rcll lcall pop add (bad) and loop add and lock xchg cld shll arpl shlb test sub out xor inc or dec and aaa inc sti and cmp jecxz xchg mov sbb xchg mov jns inc mov ja out and cmpsl shl in add or js nop push push dec das sti rolb test jl imul popa nop sub cld xchg sbb popf add ja cmc popa orl add stos jno ss pop cmpsb mov or xor mov mov push mov gs pop mulb xchg cmpb add cmpsl sub mov adc dec cmp or push mov xchg push pop push (bad) lock sbb or mov sub popa mov mov mov xor sarb add xchg out pop (bad) shll lods pop jp test scas cltd iret xchg enter andl (bad) mov xchg (bad) mov lock cmp faddl add mov divb xor (bad) mov cmp and push mov repz mov nop pop jnp fisubr ja pop add js and push push inc xchg std cmc rolb sbb adc sbb notb mov movsb add mov add out repz mov ljmp out in adc (bad) cmc (bad) pop add mov pop fs push loope int3 mov int3 loope imul push inc pusha fs xchg movsl sub mov pop mov int rclb lcall xchg push addl push sub mov add loopne fbstp xchg lcall loop mov add fucomi add jae mov adc jo clc test adc aam dec ljmp int3 xchg outsl inc add jp mov sbb pop das lret ja lahf mov ljmp scas dec cmpsl inc pop aas sub imul push loopne movsl out andb sbb scas mov xchg lcall push dec mov pop aad mov pop sarl push sub or mov xchg jb movzwl jmp stos and enter enter inc out bound jle fiadd pop sub and cmpb mov loopne jl sbb addr16 push sbb ret mov dec pop shll imul cmp lcall mov mov popa adc rclb mov and pop ss ret jmp pop pop lods in clc xchg dec std mov jnp pushf fiaddl inc or pop jge jae popf ja movsb jmp rolb sbb lock je jo adc jo xchg dec or call push or (bad) jp mov jno sbb jbe adc mov nop mov push jmp insb test bound int3 test (bad) ss pushf mov pop pop mov and xchg insl call and andb daa push pop inc in lahf in mov push rdpmc stc or int3 mov insb pushf rolb (bad) sbb adc mov loop xchg mov pushf jb xor mov rcr xchg or test mov mov (bad) out (bad) (bad) push pop xchg sbbl add and pop push mov ljmp pop push insb or out nop xchg rorb or adc jle xlat xor jo inc dec push mov js lock roll or cmpsb and sub lock subb add rol cmp mov andl pop adc jno scas xchg lret lods mov repz pop stos xor leave sbb jnp jp fisubrl hlt es pop or dec sub sub or add cmp dec add outsb andl (bad) loopne push and or daa push stos int3 jb test out add pusha stc jns insl mov sbb andl push pop and cmp pushf flds xchg xor js sbb movsl inc decb lea sub mov into orb iret dec cmpsb xchg lock rcll ficom or xor loopne or push call xchg shr pop or popf fidiv mov jns aad cltd inc xor mov mov add cli xor jge and or (bad) sbb repnz xchg add or out sub lods sbb or js mov ja mov xor mov add sub mov add cmp into sub add jp icebp cmp (bad) and loopne enter pop nop pop and fstpl insl int push cmp and iret pop push add std leave sti int push xchg divl xor rcll aam inc jg xchg enter mov icebp cmp lock mov scas bound add hlt inc aam pop loope push sub das sahf mov add jbe outsl fist mov dec mov jge insb sbb and test sub mov into icebp popa stos fisubl enter xchg or out jg mov pop ficompl imul shlb sbb cmp cmpsb mov xor fs out loope pusha aas fstpt (bad) clc pop cltd das in test jg push bound mov pusha sub lret dec popa mov lahf (bad) inc sub push into or push cmp imul jp ffree pop out pop out push outsb lds add add jg (bad) adc lock shll nop out cli pushf xchg pop hlt loopne or xor pop jg pop andl sbb xchg es mov xorb and and cmp inc cld push push (bad) push push outsl nop mov sub xor ja or xor sbb shll mov scas jbe sbb pop cmc out mov xor pusha jecxz mov ss mov sub in inc mov mov add fs mov or jbe push vmulps and jbe ja insb hlt dec outsl add dec les incb dec push xchg sub push sbb or pop jns mov sbbb jne add es cli mov bound test mov insl xor popf clc push sarl mov frstor (bad) or add stc fisttp cmc nop aas mov push ret and cwtl sbb mov out inc icebp sub out inc mov out (bad) dec or push pop rcr into inc jne add xor aam cmp mov loopne popa rorb or sub push cmp inc push jae push es leave cmpsl arpl rolb add pop push push push mov loope jge sahf popa jg push add mov lock pushf lods and sbb cmp and cmp jge push in add sub in adc and sbb pop inc outsb pop xchg fiadd mov (bad) pop arpl loope test repnz movb inc and (bad) int3 add cmp data16 jmp mov ljmp stos movsb leave cmpsb add mov inc add mov outsl jnp mov loope adc and xor jae dec xchg out and orps inc push mov add cmp pop pop iret dec dec pushf mov lret xchg rorl inc inc daa hlt xchg aaa adc mov popa push push lods jp add lret jmp push add jp cmp loopne scas adc (bad) imull mov notl dec xchg mov jle and imul adc xchg in push roll int3 xchg fidiv add (bad) hlt stc pushf popf test pop mov aad in pop or repz or ret sub out dec (bad) (bad) stc adc std pop push out ss fildl cwtl pop add pop in xor scas pop pop mov fbld mov mov mov dec sub stc xor xchg jg add xchg std in clc scas add push push push inc movsb loopne pop mov mov cmpsl sbb and movsb pop pop xchg aaa jle div push movsl aad xchg addb fidivr adc in pop dec lea fidivr push dec mov jl aam inc jb add ss xchg insl insl adc add (bad) (bad) in scas mov cli mov jle mov sub sarb mov push push pushf sub loope imul push leave push and mov (bad) pop (bad) mov pusha mov xor hlt add out mov movb (bad) das xor into xchg pushf push mov push imul les pop inc add or pusha mov xchg test fdivrl pop xchg call out dec sarl aad gs mov jae popf jle mov sbb call xchg loop pushf mov push pusha pop pop (bad) adc add cmp int3 push lret add jecxz lea ljmp pusha out repz add lret out nop push (bad) fsub mov push mov test add stos mov xchg adc or jo pop les icebp mov aas std (bad) pop and popf add jmp jnp (bad) or bound add scas push ret mov js xor jns inc xor idivb sahf sub mov jge mov test add ret subb aaa dec orb and mov pop and scas mov iret pop inc movsb clc push in xchg pop stos aad pop (bad) aam jl xchg push jecxz dec mov pop mov add mov xchg add jo aas inc int out jge adc mov and jne es lcall or xor mov subb sub cmpsb dec loopne pop out pop ffreep and cwtl in lahf (bad) je adc nop mov mov jp inc xchg and icebp add adc arpl sub add addr16 stc out push mov in jge xchg cmp xchg or ss repz jnp mov ljmp sbb cli jp or push hlt ja push ljmp in xor add cmp xchg fildll inc pop aas xchg or inc mov out xchg cld cmp or mov movsb and jb clc daa nop and inc xor je popa adc or icebp inc push mov push xor xor dec icebp mov mov sub mov (bad) mov sbb or mov push cmp and adc loopne add aaa jge std test cmp mov ljmp pop mov jecxz into xor jl add leave mov das push and das loopne mov dec cld fildl (bad) add fwait sub add cld nop test das sbb mov negb or sbb fistpll stos orb xor arpl mov xchg push addb pop repz or mov jg gs and xchg xchg ret enter mov mov mov jmp shrb adcb cld repnz lcall sbb es jbe jp aad imul jb scas mov adc push mov xchg pop sbb fisttpll jne jnp add hlt pusha or js addb sbb shr pusha test fwait jle cmp enter in sub pop pop xor and push stos (bad) pop inc push rclb cmpb adc scas xchg adc inc ret add or icebp pop pop iret adc pop cmp or add mov cmp xor in push add jg or mov ljmp loopne sub add add add mov pushf hlt dec pop std ror test faddp mov jmp mov cmpsb mov and lret or mov popf dec pop mov xchg int (bad) jno pop adc shrb sbb popl andb (bad) xorb nop add flds ret das adc cmp xchg pop xor dec cmp mov cmp xchg add dec or cs or fucom test add cmpsb add es cld push loop pop outsl repz mov push mov xor imul jle or pop mov pop xor mov add dec xchg sbb add add fstpt std xchg lcall popf mov and sub add mov dec pop sbb pop (bad) test aam lea je jecxz test inc cmc mov jnp jno div xchg lret xchg xchg pop repz mov mov (bad) xor lods notb cmp jbe mov (bad) fdivrs xchg mov js clc push test pop mov test (bad) ja mov lret xchg mov call sub das push shll lock cmp add cmp or int3 pop pushl aas loop add pop push daa jg add xchg repnz addr16 inc fildl push pop nop fwait clc pushf add movsb jae clc mov xchg xchg out mov xor mov leave jno mov add jge inc popf data16 fsub rclb and jb sub push aaa faddl ja (bad) icebp mov mov xor int dec stc loope sub inc lcall mov sub les push pushl out pop dec lock das loope leave nop das pusha cmp pusha xchg rcrl add mov in pop dec pop in idivb scas loopne add jmp xlat pop xlat xchg cmp pop jecxz aam or mov mov cs sbb dec mov cmpsl mov sbb push rclb int3 xchg and sti mov pop jp divl mov call dec aam cmpsl pop mov aam aam sub cmp jmp add (bad) pop dec adc xor or cmpl cs div and mov mov add sahf daa inc test push dec lods cld or lahf and xchg sti xor xchg cmc cs bound fcomps scas sub ds dec lret sbb mov add push jno (bad) ja mov pop aad sub push bound xor mull xchg mov cld scas out movsb jo cmp sub xchg xlat clc jp movswl or mov jno adc (bad) mov scas sub inc xor adc mov dec adcb ds fldcw lock mov out lock sar sub fs mov jmp aas out add loop ds aad mov rclb add clc jmp add jle ror addl or repz test and jo cmc and popf jno xchg nop mov dec (bad) negb add sub ss inc inc cwtl fdivl in jno sub add mov dec pusha jns add (bad) xchg xchg sbb popa nop outsl fwait sahf adc sub sub mov and xor inc adc add mov stos mov xchg aaa sub out cmp cmpsb push in mov outsl xor push jp stc push and dec adcb xchg mov stos mulb out add rcrl adc scas jae ret push cs mov ja nop cmp mov mov or pop clc mov movsl ret (bad) jg or clc jmp call add dec pushf push sbb ja loop mov call nop mov add popa mov in roll sub arpl jle insl loopne mov adc dec pop fwait jl movsb sbb daa movzwl fldl jg jne mov cmp jne test add (bad) fucompp cmp and in (bad) leave (bad) (bad) lahf (bad) xor jg push js xor lret mov popf or (bad) es push in sub jno ja cmp push or je xchg mov mov cld add out jle jo dec pop cmpsl cmp pop xlat adc pusha sar sbb and stos dec xor cmp out jb inc (bad) sub mov push jle dec xchg push mov mov jne lds sub pop push and xchg loopne pop or rsqrtps icebp pop xor inc lret mov dec jmp loope add push or out add daa inc cltd movsb and mov inc jmp cmpb or nop fnstcw cmp test mov lahf sub mov (bad) cmpsl lea adc cmp adc scas gs call push inc fisubr mov popa inc mov dec mov adc mov lods add in daa jp fnsave add (bad) dec mov add add add das dec (bad) js (bad) mov out loopne adc clc xor sti add push sub daa xor push jns loopne mov lods push fs mov add or mov mov out adc loope adc or add icebp and mov mulb cmpsl lods pop push loop pop scas push or dec mov jo lret cltd outsl hlt in popf cmp out xor repnz cmp xor mov popa jo add add mov jo mov cltd mov pop cmpsl xor bound mov push inc lds in pop xchg mov pop mov cmp add dec xchg inc enter adc mov sub pop and cs add mov xor rorb mov fmull mov js xor movsl sbb (bad) xchg pop hlt pop sub ss mov in out sarb xchg or and and and add inc ja fs dec lea add mov fstl mov fsubs in sbbl call add sbb fs inc ljmp bnd loopne dec pop jmp sub lods cmp enter xlat (bad) mov dec int lods adc lea daa jb in clc (bad) xor pop xor push imul rcr push or mov pop les push (bad) icebp jge add xchg sbb inc js test mov fsubl fnstcw jno push xor push rcrl pop movsb dec ljmp pop cwtl rcrl inc outsl mov mov lods adc dec (bad) mov daa and and cmpsb and push ret out pop cld ds pop int cmc push and in lahf aaa aaa add jmp and jbe cwtl iret mov add sub lcall movsl mov adc or pop clc mov push xchg in add jb cmp pop adc sub inc pop mov mov jb ljmp inc in enter pop push xor xor dec xchg pop jbe call movsb sbb repz bound jg arpl stos pop xor pop jne mov and sub mov jno gs scas jns imul in mov pop adc dec ds out xchg push mov jecxz mov and sub pusha in (bad) push fcmovbe dec mov cmp xor push lock mov test lods pop call iret jae shlb mov inc or cmp popa adc (bad) stos ror mov inc jnp nop adcl sub mov push xchg pop out pop lcall inc sub jb mov popa add and xchg xchg mov aaa scas andb dec jg push push (bad) push or (bad) daa push cwtl test aas gs les je (bad) and jmp clc enter add inc and sbb push sbb (bad) repnz mov add dec stc js xor jno ljmp add xchg pop cmp (bad) ret cmpsb rcrb sub popa clc aad in mov push push sbb jbe cli mov push insb and cmp mov test push in mov mov jbe scas cmp add dec ljmp xchg stos add push xor ret fiadd jg mov add mov or push mov or pop test data16 add mov lock outsl add (bad) icebp ljmp popa andl adc fdivrs je insl and xor cmpl inc ljmp icebp adc adc lcall arpl sub loopne dec (bad) cmp mov sbb mov pop push adc das pop jmp dec cltd lock sub loope push cmpsb xchg (bad) int in pop add or adc stc jb sbb push jno add loopne mov jle xchg and or mov pop pop repz add pusha push push mov popf outsb sub xor add negl jo xchg mov add lret shlb mov imul lcall les mov es stc pop add lret cmpsl or jnp xor jnp mov xchg lock cmc daa mov in mov mulb outsb pop xlat inc jo mov or xor fbstp pop lea pop ds or add xlat push out jno popl push sbb dec movsl clc stos adc sbb add imul subl icebp test repz add jp adc mov test outsb pop add mov jo mov mov nop add mov sbb jne nop jne and fildll ds fwait push add stos push jno add push rol test faddl pop inc ret pop add inc ja mov gs insb xchg add adc bound xlat (bad) enter add mov mov out xchg je dec push aad mov in push loopne outsl jne mov xor ss jns dec xchg daa mov push fld add bnd test adcb int3 test adc sub jecxz add cmp sbb mov add repz idivb push cmp pop fs and mov rclb mov test fnop xor push and pop jbe es movsl pop cltd dec je aam lea or sbb je add sub pusha mov mov add and push decb jb add add add mov dec ljmp mov loope inc sti xor jae push fisubrl or mov jae or add call int and sbb pop mov out xor and jno repnz dec (bad) cmc mov and in insb dec sub pop or pop ret rcll sahf pop jp pop sub mov rolb dec shll insl mov loop dec push rolb fs or add sub cltd out mov push vmovupd lahf fs add imul xor jns mov inc fs xchg mov outsb dec cld adc imul aaa ss idiv ficomp test sub (bad) call pop sub imul movsl es stc mov movsl push push mov (bad) subl jp mov xor sub push and stos adc lods test orl clc (bad) or pop sbb std cmp mov subb inc mov pop add fidiv iret jns,pn mov mov xchg repnz jp stos aam std mov inc mov push addb xchg adc dec xor or dec xchg subps or jno adc jecxz dec push adc loop xchg push pop jp sbb pop and add sahf shrl rcl push jb mov mov addr16 push lcall les mov xchg lcall mov fcoml mov and test jnp jae daa (bad) mov in stos and add int3 mov jbe mov daa sti ljmp sbb dec xchg shll adc (bad) sub or aas loope cmp ljmp movsl xlat mov out in in icebp add pop push iret adc icebp xor shrl pop adc push outsl fisttpl pop out bound mov push add sbbb push xor mov add xchg iret mov sbb (bad) mov cwtl jno cmpsb pop inc adc add daa cwtl jbe imulb roll xchg lret adc xchg loop pop xor leave add push cs leave out cs ds js add mov sbb mov add addr16 xsavec add cld jmp fs test add cs mov lods pop lods stos stos daa fcoml fwait xlat roll mov mov fwait add mov xchg stc push mov es loopne fmuls rol stos cmc jbe fisubr pop cmp pusha mov and popa xor (bad) sub (bad) lahf ljmp popa inc pusha aad cmp iret add mov scas dec ss fwait dec rcll in cmp pushf pop xor sub push mov int shlb in stos adc subl cmc int lods jp add or mov sub repz push push pop add push cmpb and movsl sarb jns lret repz inc rcrl add sbb test comiss (bad) icebp fs stos sahf fnop sbb sbb sub idivl rolb mov jno loop out dec sub lret dec mov pop mov cmp rorb insl jg int push cltd dec add dec mov test jnp hlt mov leave popf cli mov shll stc (bad) icebp daa pop scas rclb xor movsb adc jns test and cli (bad) dec jnp scas jbe cmpsl rcr adc push dec sub pop idivl out repz mov add fs (bad) adc mov cmpsb aad xorl jnp ljmp pop inc jns sbb xchg and mov in and jns lock cmc push pop rorb dec sub std psubsb addr16 ljmp repnz out mov dec jo incb popf add sarl ficom adc call jns lret and hlt push xor cmp and in mov xchg sub lods pop adc pop pop fst mov loope cmp addl andb and pop outsb les push mov xchg mov sbb stc rclb jbe dec clc (bad) int (bad) aad mov and or mov add out and cld or mov lret jns push push xor inc add mov add ljmp add (bad) sarl sub push or xchg inc mov push iret imul dec push in push in and js add jecxz enter (bad) cmp add mov push mov cmc test and dec stos mov (bad) loopne add mov rorb pusha add pop int jg inc adc jb ja idivb and test cmpsb push loope shrl jbe stos pop sahf inc pushf mov (bad) fwait sub aas int3 je lret (bad) pop cli jo mov loop call add add jns mov sar add mov pop cs mov inc daa in xlat dec es or xor icebp adc push pop jmp adc lea (bad) int3 add jle les mov or je nop mov mov jne cltd pop adc sub jl nop das mov out cmp mov sub xchg cmc jns push in add jmp (bad) push and xor mov enter fdivrp mov xchg call sbb mov cmpsl jnp push movsl inc or sub pop add testl sbb popa loop adc jns add rcll sbb mov mov (bad) and pop cli outsl cmp and and imul mov dec inc shlb add add ja mov pslld cwtl and push ljmp or add or ljmp inc and mov sahf sub sarl and test sub mov push scas cmpsb dec aaa sbb add nop std inc bound adc jns add nop and lods cld (bad) add stc out aas sub adc pop int shrb cwtl fcoml xor add dec xchg inc and stc daa pop pushf sub flds loopne jb ja cmp cmp mov mov aas pop aas lock lock mov and sbb pop cwtl xor pop in and loop jmp arpl loopne push ds cmp or test stos rcll mov or mov sub or ret jmp add xor cmc lret stc mov lret jecxz adc sub pop outsb push add in pop daa mov add ja scas shl xchg cltd (bad) pusha les mov pop int mov mov movsl and dec or cmp int3 int3 lahf sbb add push scas test ljmp add xlat adc and add xchg lock jmp out push lods mov std xorb sub in add int mov testb pusha mov stos leave rclb cld fstp fmuls in and enter fbstp shrb leave add mov iret push mov test cmpsl inc les ja jnp pusha cli int3 in pop dec mov enter cmp mov enter cmp and lds fsubs sbb xchg scas xchg stos lret sub (bad) ds mov push popf aam daa rcll and or jp pop movsb andl xchg lcall jb xchg xchg inc (bad) jbe add mov arpl ljmp dec mov jl sbb imul aad (bad) std jns xchg mov sbb out xlat push xor cmp shrb sub mov daa mov popf or push aaa mov rcrb or jne push push cwtl adc (bad) pop pop mov sbbl (bad) dec mov pop sarb pop daa add mov mov xor in loop out enter xchg cmp jge lock inc stc push push inc add leave pop adc add aas rcl test mov mov add out dec aas das les sbb movsl fadds ficom pop js add test daa lahf push push sbb icebp lods dec and test notl mov in adc (bad) out adc mov pop mov negl jle jp push outsl leave or mov shlb mov push js push jns stos mov pusha int3 call pop lods sbb les mov adc loop pop mov xor xchg push fiadd pusha add nop sbb pop mov pop jno or add fistp cmp (bad) mov pop in sti ja dec fld mov (bad) mov bound bound loopne xchg inc or shrl or cmp mov cmpsl pop cmc cmp mov xchg or or push test mov push aad adc sbb push cld scas cmp movl inc je push mov loopne pop mov xor in inc orl pop xchg xchg mov mov push jbe pop sub in mov add cwtl hlt add (bad) xchg clc push out adc sub daa lret add pop add call in lret or and pop pop push sub mov pop dec cmp adc imul sbb in sub cmpsl adc xor scas dec andl xlat inc mov in lret add (bad) loop jno andb add mov adc stos mov test popa push mov pushf lcall dec (bad) mov xchg jmp lods sbb imul jno das push jmp lgs loope xlat imul lahf bound add add (bad) xchg and xchg shrb out pop aam cmc sbb pop fcoms sarb lret out std jg pop rcrl imul jp fcmove pop sbb aam fisubr mov insb push and shll add fbld push ror jmp add mov jmp add push cmc in std jl adc outsb andb pushf lret mull mov je push inc add mov xchg xor adc adc jp add test imul repz mov iret adc adc cmpsl pusha pop lcall rclb mov xchg pop mov stos mov and adc loopne (bad) inc in enter xchg pop mull xor sbb cmp sbb pusha inc mov mov into push add jno push sti and xor pop mov aaa bound pop sbb mov ja add adc xchg lds sti xchg mov add popf (bad) sub cmp test cmpsl jl test call lock cmpl out add xor jmp lods das push and movsl mov adc pop xor sub xchg cwtl insb adc or mov add cltd call push lds ja and mov rclb (bad) xchg mov xchg sbb pop pop inc mov scas sbb push xor popa mov popa push in and je sub pop xor mov mov mov (bad) dec mov test cmp add inc icebp sub mov jns mov push push aaa pop add scas lret push adc mov add (bad) stc fiadd cmp lret lods in addr16 adc jmp imul in daa inc mov inc push jae xchg in lret mov mov pop mov pop and add mov adc stos and push mov subl pop stos (bad) jo clc scas cmp xchg js mov jb mov daa pusha (bad) mov inc sub pop cmp sub rorb insl sub lea mov lds aaa and pop fstl mov jmp lock inc add inc repnz les push sub or scas fisttpl (bad) push fidivl xlat mov xor sbb pop mov mov cmovno xlat mov add and inc jmp fmul imul pop fsubrs push xor shrl sub sbbb cs xchg sbb push adc inc xchg pop mov dec outsb jo in inc mov (bad) call mov popf adc sbb sti sub inc cmp dec orl bound rcll dec idivb popf ja addr16 pop jmp test ud2 push inc test imul sub jne dec pop insl jle pusha add inc or sub mov into pop pop or nop sbb inc xadd push inc loop add scas inc jne and xor stos dec lea mov mov jno in add adc push test xchg dec daa les add pop push push loopne or repz (bad) mov sbb insb mov pop push and inc dec push add call jbe pusha lahf add daa pop dec sub mov xchg and or cmc enter mov inc or push dec push cwtl mov imul or insl sub mov fcomps sub repz xchg dec je push outsb (bad) inc insb sub repnz sbb into pusha sarb sbb sarl pop lret add pop (bad) movsb loope mov pop cld cmpsl or cmp pop (bad) rorb xchg push push sub (bad) jmp out cmp dec pop mov cmp jmp pop roll adc inc add add lret gs add lcall cmp pop add dec push add mov lods fldenv cmp pop jmp jmp dec in pusha loopne gs xchg and adc mov scas scas call xor test mov popf sbb jp leave push mov outsl das adc (bad) mov push lcall pop test or jne stos frndint jnp adc stos repz inc shlb ja add mov jo dec js loopne mov push inc mov sub add jp repz repnz jno push pop gs mov out xor int add (bad) xor jle sbb mov mov rcrb inc sbb jle (bad) hlt cmpl mov mov xor cmp jbe push sbb lea pop stos jp daa cli ror sub jno ret jmp push and xor or icebp inc subl sbb and in (bad) add adc loope add outsb adc jb jbe push mov andb mov fimull lret mov ljmp push pop dec mov test inc popf push dec shlb rclb xchg lds add test leave stos jb add sub cmp aam call leave mov dec mov xorb lock mov adc mov jns add mov fildll cmp sbb cmp (bad) jmp sti xchg scas xor lcall adc test mov or jne mov fiaddl sahf popa out cwtl inc sub movsl mov push inc mov in xchg ret nop pop dec pop pusha insl mov cmpsl ljmp dec lods xlat mov pop pop out mov daa aad pop adc loopne mov mov loope push mov sub leave jae (bad) jle jns mov jp and lods enter mov mov add lcall pop pushf push retw adc add stos add xchg inc shr xor push mov push cs shrb loope push in cmp int3 push fs push pusha repnz push add jns dec or dec cli pop inc mov dec pushf popa insl mov aad fucomp shlb sbb add inc jnp je sbb xor pop mov adc push mov adcl push push add or xchg mov adc outsb outsl popf add dec add test enter shll add adc pop push je (bad) sti aam (bad) dec push cli xor out or test ret mov mov cmpsl add mov psrld push push in cmpsl push dec push test jo or or inc mov inc push push pop fst push loop jle sahf fcmovu add mov sub jl xlat lea inc paddb (bad) mov mov add cwtl inc leave dec add xchg mov mov and insb daa ds outsl xchg mov push or or mov stc xchg add fbld lret clc and dec sub inc add test mov repz dec stos push jp bnd sub addl dec lods xlat jle frstor adc pop adc out mulb jo sub mov mov mov inc (bad) or mov rorb clc xchg fldt inc int3 adc jp clc scas imul adc (bad) xchg lcall jmp sbb add icebp addl dec fistl mov sbb sbb adc popf lock cmp pop pop pushl out mov add rcrb das not push repz or or xchg rclb jnp cmpsb bound dec sbb cmp cmp lods mov jle xor cld sbb das out and pushf xchg dec adc adc and divl push jno mov sti iret pusha das push lret adc outsb add cld jle mov dec je add mov adc shll and outsb mov or in adc fiaddl dec add outsb add cmp mov xchg or pop fnstsw xchg insl out pusha repz add jmp and mov add jo pop or in push sbb adc jb ljmp popa popf sbb xchg faddp out jmp dec or cwtl in push or loop mov inc (bad) pushf or faddl pop stos ja adc fdivrs imul jb mov xchg fisubr jno ja in (bad) mov out (bad) xlat jb add inc sbb daa popf das (bad) mov outsb pop inc ja sub mov rcrl cld mov adc xorl loope pop aad (bad) sub add (bad) cmc mov es jb cmp xchg mov movsb pusha jae push cmpb pop mov nop pop roll sbb jne ss pop jbe aas and xchg xchg or je jb sahf mov pop faddl add inc adc and push pop xlat adc imul dec inc mov xchg mov mov outsl (bad) pop jmp add push pusha aad jo dec imul ret mov push leave sub jmp movsb fmull xlat cwtl popa mov dec enter jg fldl jno mov jge mov sub jne xchg iret push int or xchg (bad) push and or ljmp mov jnp aad scas mov lods dec aad rcl add sub icebp mov jbe jg mov inc pop mov int incl rcl push pop and mov pop test push add pop jmp sub mov cmp aad cmp add fisttpll faddl cmp stos and pop lahf pop pusha inc insb sbb ss pop inc mov jmp stos cwtl mov mov jl sti mov in fcomps outsb pop not sarl add icebp push add dec pop out xor push mov xchg fsubs add sub pop ror adc push fdivl insl push mov mov xor bound out inc or mov inc xor test test dec insb das imul jge gs sbb jp push ja shr inc orl mov sub and repz rolb pop cmp into lret push pop enter add add pop (bad) cmp std jns or enter leave ret add insl or das (bad) dec daa adc mov mov or das stc rorl jmp mov test lea int3 jecxz outsb jb test xchg adc inc mov mov add sub sub mov xlat pop xor enter push pop pop stos xor inc aaa clc pop in inc xor inc shrl dec or mov cmp pop sarl xor shll cmpsl mov js mov aas push sub stos dec je push decl imul pop imull dec scas sub add out call int3 cmpb dec adc (bad) mov fnsave sbb jl cld pop data16 inc dec xor mov (bad) mov push repnz std pop (bad) mov mov cmc pop cmpsb jmp (bad) not rolb pop jge add add or pop es sub mov pop pusha out (bad) fiaddl imul jg cmp scas dec jecxz vdivsd adc dec xor xor xor clc push fisub pop xor lock push dec (bad) cltd (bad) popa fcomps aas clc or push push push sbbb incl pop mov hlt inc sub mov push fwait inc jmp loop and mov cld add push stos gs pop or iret mov int3 xchg jmp mov nop xor mov insl imul xchg pop push ljmp sbb outsl aaa fs inc mov rorl sub out jbe insl pop pop mov jmp in js es js mov arpl testl mov test mov push and pop pop outsb jmp and jle push jnp and or lods imul aam sub out sub and cs xchg inc aas xor sbb test or lcall insb or jmp push (bad) ds push call jecxz fisubr xor mov or test inc das out push xchg mov mov roll gs mov fisttpl inc pop mov xchg xchg push pop jmp and pop icebp sub subl lods add negl loope inc pop mov lods xchg pop xchg mov mov xor inc inc or mov cli sahf cltd sbb out lret push jne gs and xchg jmp inc call outsb lods sbb add cltd mov mov stos pop add pop add aas adc pop js pop add jmp add mov (bad) lcall mov js lret xchg inc (bad) cmpsl cli xchg xchg jle scas mov stos mov sbb xor add pop pop jl push pushf add adc jg inc mov push cwtl xchg push (bad) mov dec jp adc jg outsl fistp pop bound and pop fildll add push and add jb xor in mov pop mov jecxz lea jns inc out xorb or fldt loopne sub dec sbb mov inc jmp dec (bad) pushf test dec mov jb out xchg adc sti xchg adc xchg pop dec jmp out pop stos cmp push jmp adc push mov and cmp adc lahf addl xchg stos (bad) xor pop mov pop pop dec pop dec das push pop xchg inc mov pop add push dec mov or xchg cmp rorl xchg push into add (bad) aaa not xor sahf sbb in add cmpsb lcall sti mov mov dec sbb insl inc mov or dec mov add (bad) cmp (bad) jo add loopne dec or cmp jne add xchg and adc push sbb repz imul adc mov and mov adc push adcl cwtl (bad) jae xor add mov inc pop in sbb and (bad) jo add xchg popa mov xor add cmp shlb sbb test push or cmp dec xchg add mov inc stos xorl sub sbb dec or (bad) jp push iret int ret shrb sti xchg popf lahf mov add or mov dec dec add (bad) int movb jmp add cmp js push sub in lods fisubr loopne sahf lds and (bad) movsb rol mov jnp mov inc cmpsb push dec mov out add mov or cmp mov pop out (bad) adc adc lock rcrb (bad) in pusha inc inc not sbb jl inc pop int add mov setno xlat pop pop jns mov adc cli push or sub cmp (bad) out fstpl fistpl sti or inc jne add loope sub int pop aad push pop in jns ret fstl sub add push es and jg push mov es testb push sbb xor int3 mov loopne cmc push sarl xor mov mov jmp fcomip cmp mov sbb popf xor cmpsl lahf (bad) (bad) dec lock in dec jns arpl int3 aas mov dec or and sub mov ljmp (bad) cwtl cltd push fisubr xor or jle inc mov icebp push push sbb cmpsl adc nop in fisttpl sub push leave mov push inc nop aad lds adc and xor popa jmp push lret cmp inc xchg daa add bound call sub faddl nop test push je outsb shrb fcomps jg mov rorb push add test imul aam xor dec xchg popf add pop mov (bad) add lock pushf (bad) jns mov pop jb repnz sbb inc loope mov mov shll test mov pop jne jmp lret xor cwtl scas in (bad) and ret push fcompl frstor fdivrs lahf fdiv jmp xchg push adc sbb ds pop sbbl inc leave les push dec xor adc or pop adc jmpw sbb loop cld scas lcall gs sub pusha rolb mov push add pushf jb fwait and nop sbb out icebp cld bound orb push inc jbe je add mov jae cmpsb cwtl dec mov loope (bad) aaa stc repz or jecxz mov sbb push popa hlt jo inc cs into test add mov sbb jp sbbb aad inc xor mov je fwait stc xchg loopne dec add and or call xor ret mov aad daa pop addr16 insl (bad) push test bound add mov mov fnstsw inc je jns inc mov popl inc cmpsl xchg cli pop dec xor xchg adc pop mov leave lods mov lods movsl or ret sbb inc or pop nop lds popa pop pusha out (bad) lods push push mov push adc (bad) cmp cmp xchg mov fs push dec stc mov int clc push add push test aad add dec in xchg lock movsl push jge mov dec mov lods (bad) mov mov loope insb xchg pop stos jge push sbb iret sahf and hlt sbbl (bad) jbe fidiv dec (bad) test xor daa pop mov xchg cli enter xor dec xor (bad) (bad) push cmp or nop movsb pop stos cmp pop push push stos lret jo es add jmp cmc pop inc inc xchg adc shl dec sub pop jo or or sbb mov push jb mov notl fucomp sar sti push lods movsb pop negb ja add hlt dec pop ja push incl mov (bad) imulb and shr push imul jge das fcomp js mov orb mov das std dec push pop lock lret add ja mov push mov add fstl rorl pop stos add jg shl subb jecxz push dec pop fisub fprem1 pop aaa cmovns and jle pop or xor dec or dec int3 pop (bad) test sub push pop inc add cs fsts addr16 fdivrs xchg sub shrl sarl sub jle pshufw pop aad ljmp mov push xchg insb gs adc out or pop out sub and xchg jb mov mov push mov add (bad) dec pop lea dec mov mov mov icebp bound and mov pop jecxz push add xor stc (bad) mov or jecxz loopne add aas mov pop es cmp sbb cwtl push int sub jge push popf mov pop mov mov cmp fsubrs enter add sub sub dec stos mov ss jl mov mov aas pop idivl add insb arpl das xchg lea lea pop daa mov call pushf shlb stos in push nop lcall clc jmp inc es pop incl push (bad) sbb pop jmp jp dec mov push mov es pop mov dec push pop pop jb mov sti in pop or sub icebp pop aas imull pop and mov push fidiv fisttpl in dec push and push fsubs pop cmp sub leave fist sub pop not xor cltd andb push pop push lcall pop mov sbb sahf add or scas popw dec imul lahf je insb ds inc mov int add cwtl mov mov enter fmuls iret push xchg subb ds and add sbb cmp dec adc xor mov iret lahf cs xor add rorl mov (bad) sbb push adc cmpb fistp mov push pusha pop inc bnd outsl cli nop xchg fiadd ss push sub adc add push mov scas in nop jmp jo xorb sarb mov test pusha cld popa jmp sub cmc movsb dec xchg dec or outsl ret test scas lods pop dec mov jle add mov int3 repz in out out push shr add je daa cmp les mov push or daa test pop bound or mov pop fdiv inc jo pop lret (bad) out mov xor sarl jecxz repnz mov add popf inc add sub or in sbb push flds adc imul stos cmpsb (bad) push movl loope wrmsr xchg mov push mov dec cmpsb cs mov daa or mov pusha stos pop ret daa xchg call pop push pusha insl push adc dec inc sbb lods sub out (bad) xor (bad) aad push jle data16 push cmp or jo jne mov jno pusha xchg inc sbb aas and aaa ret sbb xchg enter jp popf inc emms pop pop or bound jge push xchg loopne adc adc idivb data16 adc push mov mov lock push inc sub adc fsubp push cld xchg jno inc push dec sub ljmp push (bad) xchg jp das pop jp and inc in add mov xchg add cmp jbe jmp push sub (bad) fldl stc scas and out dec push (bad) movsl sub ficomp add imul fldcw mov mov push sbb push cs cld mov inc leave loope push xor sbb ljmp repz sub xor rclb ds (bad) nop inc fild or mov jns pop add test fmull add bound sub hlt xchg or mov xchg cwtl add (bad) cli fsubs and sub imul movsl stc xor mov or (bad) cmc addl outsl roll lods pop push xchg or cmpl dec jnp aam push test lret pop (bad) and dec ret int cmpsl lock jle push call movsb fiaddl pusha adc mov xchg jecxz idivl jo sub pop testl jg add push and add popa and jp adc xchg jle ret or mov push jp xchg lret cmp stos mov pop std (bad) xor ss mov call (bad) lea cmpsl movsb lods dec sub sub and cmp inc fwait insl jg pop sub insl bound insl lret xor xchg repz imul xchg out mov jmp adc push ja mov add pop ja push mov mov fisubr or push mov adc jge (bad) loopne repz and push iret xor push lahf int rclb sub xchg (bad) mov shrl loope mov inc push push mov add xchg add sahf aad ret xchg pop xlat jo add pusha mov sbb adc push cli popf insl or mov loop add jo out call xlat pop lods mov es add mov movsb jns das push pop pop adc sbb pop push mov ljmp or pop and dec adc std popf rorl mov pop (bad) (bad) sub add aas iret mov or roll add xor es push pop lods adc rolb cmpsb je mov mov lcall xor js fildl cmc inc inc hlt mov mov add loopne jp jb xchg xor cmp or and mov cmp xchg roll push sarl xor or icebp imul jbe sub ja pop and jle add mov sbb cmp scas outsb adc mov cmp or mov test add jno rorb cli pop mov xchg push push push cmp mov sbb lcall popa mov mov fisubr mov add repnz in mov ljmp sub xor jne pop pushf or stc rcr push push mov nop pop xchg mov jnp arpl cmp inc or mov pop loope das mov test jle (bad) push adc cld aas fstps adc fwait jns push lods shrb fisubrl jno push dec adc xchg loop aad ljmp mov fmull cmp mov inc xchg push shl mov fwait add inc push fildll and shrb inc dec and pusha pop add mov fistl pop push cmp out push (bad) xor repz push xchg test outsl fisubrl sbb xor mov mov fisubl out mov sarb add fisubrl cmp xor mov mov ja shll mov leave xchg (bad) and cmp xchg jae outsb cmpsl loope mov mov decb lods gs add fwait in sbb xchg pop loope and sbb pop loope cs mov dec mov jmp mov mov lahf stos hlt inc push add ja stc pop mov jecxz jmp mov push clc pop lea mov cli dec test mov movsb add rclb jo add xchg mov loopne inc mov aam aam cmpsb rclb and mov insl xor rolb add push inc div xchg stos shlb mov fisttpll out and dec add popf out nop jnp jb mov (bad) sti pop js scas popf rolb (bad) xor jo and outsl cld pop cmpsl repz adc scas outsl pop adc lods in je push lds scas push jnp mov pop out push add xchg sbb mov mov shlb insb add sub mov sub xchg orl out (bad) stc pop inc or xchg jbe dec push mov popf lret sub xor daa fbstp sbb jmp pop dec cli mov pop pusha inc popa add (bad) dec jle pop sub push pop mov ror aam rolb jg into sbb jnp stos test pushf or (bad) ja hlt sub hlt dec bound repnz xchg or pusha push imul mov xor das not fxch add clc jge out loopne mov in out jo inc push popa xchg jnp sar xchg mov add mov std aaa jnp pop xor or popw sbb mov push push add jg ja out aaa test xchg inc dec pop aad or out sub fbstp mov outsb and test add shr shrl scas add cmp popa in jno int3 shlb xor enter lret repnz mov sbb fs les (bad) mov xor ja lret lcall leave sub les lea sbb out gs jmp ret daa sub xchg cld add xlat mov rolb push cwtl (bad) lahf xchg jge es pop and cmpb rorl outsl loop imul imulb and or xchg dec pop sbb xchg pop cs sbb push cmc xchg xor (bad) lds pop cwtl mov cwtl pop mov addb adc loope add push ret dec and cs (bad) and inc pop mov rcl incb xor adc xor sub sbb (bad) mov fisttpll (bad) or xor jl pop mov das in nop pop ljmp mov sbb outsb dec add aad xchg les call lcall loopne test pop scas jecxz add mov adc (bad) jo leave dec add mov xor mov aam pop cmpsb loopne sub mul cmp hlt xchg mov add outsb jb dec adcl and dec xchg (bad) mov icebp cs xor mov in mov ja roll sub jnp rol adc ret loop mov push and pop aaa mov cmp shll and dec pusha xor lods imul push push adc push sbb add into or es stos sbb js push fist mov adc inc and repz cld and add adc (bad) inc stos jg mov stos pop xchg add adc mov daa aaa loop icebp pusha or repnz dec (bad) mov and push (bad) fs xlat in xchg (bad) cmp incb loopne sti imul icebp mov add add int3 (bad) xchg jle mov pop jne inc popf aam dec loopne mov mulb mov push fcomp (bad) dec rorb xor les lret mov mov push fstpt xorb mov pushf lcall add inc repz sbb mov jg in hlt mov mov (bad) cli push cmp push and or sbb loopne test bound add inc addr16 sub push aam imul into or (bad) mov add sbb or js roll aaa imul push push push es jecxz fsubr adc inc pusha pop adc fnsave js mov push popf stc lcall sti add loopne jl add cmp dec mov mov xchg or pusha cmc adc pop push dec jnp pop adcb fsts add mov jmp cmp in sbb mov sub pop xor (bad) int into adc fisubr push push jns in xor add loop dec cs ja pop xor mov push pusha pusha stos cmp addr16 add xor mov and movsb push inc rorb mov adc xorl and roll sub outsb pop mov or int3 mov inc dec cld mov adc nop mov xor std add and pop add cld aas test ss jno add es lcall icebp bound scas cltd movl test lcall aam test scas int3 loope add in fimull out aad stc push adc cwtl nop lahf imul or (bad) inc sbb scas pop fwait stos incl adc cld imul mov in movb mul inc mov stos or pop jne mov sub aam sbb call sbb cmp push in fwait dec pop lcall sbb dec sub lcall sbb popa test pop lods test lods inc push mov sub push rcrl imul fbstp jl add xor fcompl push xchg mov ja jb stos out pop xchg cmpsl xor jbe gs call test jo add push js movsl mov mov insl mov stc and dec inc mov pop popa mov lcall int3 hlt mov mov mov gs test pop push or mov pop mov xchg hlt jl sbb jmp aam pushf sub repnz lods add adc dec jnp adc (bad) lock push pusha fdivl mov mov notl ds xor adc and scas andl xchg sbb jno push (bad) mov leave gs fsub jecxz xor stos loop (bad) pop dec imul shlb out push mov movsl stc xor and sub add push repz mov inc lds mov pop sbb repz sbb fsts lea push rol xor sub add and inc (bad) int3 loopne add jle dec lea loop push les faddl pop loop pop mov loop xchg cli xor jge dec std nop mov cmp or ljmp xor add mov push push pop pop out push aam push (bad) mov fsubs inc push (bad) lahf sti in js adc sbb add aas sbb add adc (bad) outsl mov mov jno add mov or mov lods xor mov sub scas inc inc outsl repz xchg mov mov test add movsb sbb add inc xor pop lea aad cmp mov add call cmp fcomps push cmp adcb icebp jo add sbb xor xchg cmc adc nop pusha mov or xchg out lods xlat xor lret into test lds inc popf hlt and push test nop pusha jne dec and mov jmp fistpll lods pop mov cmc adc pusha jb or add xor push ljmp je scas lcall repz bound popf cld out pop nop push out pop jl rcrl aas lods inc cmpsl ljmp repnz mov inc popa inc adc mulb (bad) pop and out and in mov add inc push push loop pop popa jae adc aas shrb rolb mov mov cld in popf push adc adc test int3 add or jns loop outsb add iret out push scas repnz ret xchg cmp adc mov inc ret lret xchg fwait rcl bound cmp pop fisttpll lods xchg (bad) bnd stos cmp jl add cs adc pop and cmp cmp icebp mov gs dec xchg or es flds adc xchg mov or and sub and ljmp sbb xor sbb xor jo movsl int3 ret and stos enter pop push xchg push daa jbe pop in push or scas jb mov sub in js or loope pop jg lcall pop cmp cmp jb fidivrl mov call add jo loop cmp rclb or mov jge mov mov jle hlt add cwtl aam or mov xor push jp adc add aas outsb out dec les adc mov pusha add sbb xchg add push inc ljmp movsl xchg ja push cmc pop sub xchg xchg xchg inc pop inc sahf lods xchg dec mov and test jne fimull les fcomps mov push xchg sub popa push mov jp fdivl inc or xlat push mov jle push jle nop jne cmp and leave adc pop loop lea and push and cmp bound add mov int3 dec dec add and push xor out adc mov jl arpl cmp jo pop mov mov fisubl (bad) mov popa fnstsw cs cmp fldcw lahf dec pop in ds add in testb xchg lds push gs dec pop xchg pusha or gs fiaddl out add fdivrp addr16 jp mov les xor jle sbb and bswap and mov push popa jmp mull sub xchg inc dec push pop (bad) inc sbb daa clc test rcrb pop hlt hlt add mov cmp cmp xor xor js add sbb mov pop jg jae push push xchg aam ret pop mov in adc xchg or (bad) sti rorb xchg push push mov inc cwtl iret lcall pop jmp or push in outsb xchg add movsb dec pop std imul adc xchg xor jno loop add popa ret in sbb pushl mov (bad) and js pop xchg pop mov daa adc add cli lcall push xor push cwtl jle (bad) xor inc xor aaa stos imull jb dec jl sbb mov outsl imul movsl stos stc ds popa mov mov out lret adc push (bad) mov cmp movsb (bad) lcall clc subb (bad) push inc cmp sbb add bound or xchg jbe xchg test cmc sbb or in mov dec int3 inc push add lock xor pop add jg mov mov aas icebp es add test lods and (bad) or sub fwait mov add pop and pop out jp push lods cmp push or insl mov jecxz add sar mov pop imul sub loop sub sub mov mov sub fsts mov dec push out into xchg lcall add ja in pushf int3 (bad) out ficompl addb pop inc mov cld (bad) fcmovbe xchg mov add jp mov or lfs cmc mov sbbl frstpm(287 ror push inc xchg xor fildll mov mov xor movsb adc ret adc pop je aad mov mov pusha push loop add push nop orl pop mov pop adc pop out addr16 cmc mov mov imulb mov dec fucomip sub sub sub jl adc mov addl push jmp sub inc mov pusha xlat cmc adc jmp aad stos dec rorb leave je or das pop push hlt inc leave aad mov mov xchg mov mov hlt out leave lock pop inc sub test add aad xchg sbb (bad) dec dec inc lods sbb rdmsr sbb xchg (bad) out pop ja push ret add pop outsb sbb ja loop test out add aam sti imulb mov sbb cld xchg into popf push mov pop daa lods fs ss cmp negl lcall repz popa inc push rclb jo fcmovnu lret loopne adc and dec pushl in loope (bad) clc loope movb xor pop xchg adc clc sub pushf nop cli mov add arpl jge data16 cmpsb loope repnz hlt dec or and rol pusha sub add jae pop push stc cmc sbb pop add imul dec pusha jb cmp add adc loope mov xchg mov inc mov mov popf mov push add mov add push mov xchg sbb add add jle mov aaa sub loopne dec lods out sub adc fsub add aad cwtl jge pusha daa (bad) pop nop insb and cmp add lret pop jmp and mov test call daa out push les pusha add cs outsb push fisubr loopne adc cltd daa pusha pop and bound jno add mov push lahf lods pop push fwait mov jmp push loope and push nop outsl mov movsl adc popf popa sbb fsts add leave out imul mov sbbb insb and pop push ljmp mov add loopne mov or daa call inc imul and (bad) lcall in add dec ficompl cld ret (bad) mov jo adc inc scas or and and loop adc pop jmp (bad) mov pop adc mov sbb cmp xchg jmp pop je xor xchg cltd hlt mov add cld jle adc mov fsubr lcall or add add sbb (bad) mov fiadd adc popf js mov sbb or sbb pop or ljmp xorb mov scas jmp repz or xchg mov ret sub mov (bad) repz int pop push shrb dec sub xor lods dec stos lea cmp sar rcrl dec sti push in fwait inc sbb jnp add rcrb mov mov cmc ret pop mov fs or sub add and lock jno and dec rorb mov adc mov iret pusha adc and or shll inc mov sub pop xor test ret xchg mov movb xchg inc pop push out cmpsb mov inc ret push dec xor sahf loopne test jp adc push repz pop push mov mov (bad) push dec ret push jo mov test cmp add xorb xorb shlb out xchg or jno mov popa mov xor enter and mov data16 lock cmpsl lds sbb loope stc jno scas shrb sti dec add xchg cmp mov ja int3 or jbe mov test add xchg mov xor lea aam inc movsb jo dec in sarb lds dec sahf enter mov cmp lds lret in inc jg cmp push popa mov add xchg mov loope pop jmp nop shrb fdivr pop sub dec clc dec scas adc jnp push xchg jb (bad) xchg pop push xor bound or shl cmc xchg insl xor xor rorl sub or push popf sub push pop clc mov mov cld mov pop or outsl jp and and gs push push add je std rorb mov scas loopne inc les aam test negl inc jl add jp mov cmp lods push sub adc cmp xor (bad) jnp mov popf aaa incb leave dec mov dec (bad) orl loope adc mov test adc mov and push or pop loopnew sarb repz sti and cmp jmp add int sbb aam aam repnz jg mov outsb std clc lahf or and xchg mov jno bound das add pop cltd mov xor pop (bad) lret imul cmpb sub xchg fisttp adc pusha xchg sti (bad) test xchg dec popa stos lret mov mov test xchg adc faddl inc xchg or jmp or sti push adc mov loope (bad) dec cmp js mov pop mov lods push sti les mov add popf jnp jo lds aam xchg test sub add stc mov push jg cs mov and mov sti (bad) idivl or xchg dec and aad hlt arpl rcrl sub cmp scas (bad) jb adcl outsb mov mov sarb popf jno fs lods hlt movsb add jae mov jb (bad) int3 mov aad in pop rcl and cmovp mov gs repnz jns js push jno ds (bad) std ja jbe test fisttp pusha in sub out jnp cmp add push xchg or test add test negb add mov xor dec inc and xchg pop lcall pusha dec cmp out and fstps or lret mov mov mov imul add movsb sbb lret or data16 jbe xor jbe imul jb mov in adc pop out add mov cmp jno outsl cmp inc fiadd inc rolb ja clc add push and pop jb inc and push rcr pop inc lds xor jo gs pop outsb adcb ficom jp add (bad) out cmp cmp pop pushf add cltd adc and popf mov aam (bad) dec mov push loope xor clc lret jmp sti scas mov lods mov mov adc mov std (bad) (bad) mov dec outsb pop les iret jne fiaddl gs add sbb mov push loope repz das xor add pushf pop fucomi fsubr adc dec mov mov mov mov iret leave lea insl mov sub pop xor jno xlat gs daa fldl leave imul pop jge dec pop mulb push push add or ds arpl popf test hlt add rcl cmpsl (bad) jmp (bad) jns scas loopne dec inc mov icebp jo test adc cli les pop cmp xchg stos sub outsb cltd add push mov push push jge jno std push push jp ss out fidivl pop xor push sbb mov (bad) divb adc stos das fistpll jno aas int3 or cmpsl jno je cmp or or dec add pop (bad) and loopne rolb pusha inc popf jmp sub adc loope mov dec push out and je (bad) repz cmpl push push add bound dec or clc adc push push cmp cmp les sahf loopne inc xor fcoml adc sbb jns cs repz add pop cs pop xchg mov test mov in ret mov sub mov lcall (bad) add mov addr16 or add dec xchg js add cmp mov push inc sub pop xchg out popa xchg pop fnop adc or cmpsl jae cmp mov mov mov out jo imul sub (bad) dec enter mov loope mov mov mov jnp mov mov push sbb lea pop sub aad and push (bad) pop sbb inc lcall xchg push dec xor test mov outsb and or mov test sub or xor dec aas rcrb jne iret xchg push xor xchg inc xor cmp pop int3 cmp mov mov push fnstenv inc icebp xchg or ja into aad mov out lcall mov push jo jmp pop add sub mov cmp shlb adc in cld je movntps mov jmp adc sbb popa into outsb cmp xor out sub adc cmpb cld mov out loope fst inc (bad) mov xchg insl les pusha fs lahf jl ret sbb mov sbb or jg mov cwtl stc mov fs cs pop shrb cmp mov mov rclb adc lea and and xor clc lds add mov mov add fisub rclb cmp outsl add std aaa mov mov sbb mov dec mov add dec mov cmc dec pop mov sahf add adc add push rcrb dec sbb pop stc mov insb test std or (bad) lds mov jl out shrl rclb mov jl or push adc mov (bad) xor ja cltd add call pusha fistl addl out mov push add (bad) push cmp fstps push enter hlt fisttp dec fsubrl jg fistpl or and sbb mov or sbb or cli xchg test jmp jmp gs loopne clc push jecxz pop stc ss pop xor fmul mov sub pop mov das int3 in add add lahf shrl popa jmp shrl push cmp ss add inc testb cld lret in divl iret aaa pop inc jb dec pop dec add in add sbb pop pop xor shrb cmp xchg std pop outsl lods js pop fwait daa add lret pop lock dec fsubr jne and inc rclb add add mov daa je mov jne inc and cmc outsl andl enter add push sub jp jmp lods bound add lock and imul jbe dec out lahf xor stos inc push fdivp sbb outsl jae and pop sbb hlt sbb ljmp push xor mov add or cmpsl cmp movsl pop mov outsl mov push lods push and adc xchg mov xor sahf movsl or dec pop popa fsubl add fimull mov add rclb and xchg xchg repnz cmp sub aas pop adc add fidivr xchg xchg add pop int shrb mov mov and add or jp push dec jb mov es (bad) pop mov add loope sahf jge daa test cwtl in xor jl mov fbstp add mov loopne rcll aam pusha stos mov mov cmp es add (bad) push pop xchg dec gs mov mov movsb (bad) jae fdecstp (bad) cmp mov cmc ret cwtl inc in popa xchg insl inc rcl mov loopne or hlt sub and and ss xchg scas subb jb inc dec fsubrl add sti inc mov pop nop mov sarb push pop add inc xchg (bad) es mov inc push sub (bad) mov xor pop out rorb aad ss jno xchg hlt cmp mov pmulhw xchg repz and dec aam (bad) inc sbb bound mov pop mov test loop loopne jecxz pop jbe,pn mov add add push and addr16 and mov loope and xchg mov daa mov pop sbb inc (bad) (bad) aam mov fdivl sub pop xorl xchg jo inc push outsl in and cwtl arpl jg lret sbb sbb pop xor imul xchg mov imul push out pop fs lret xchg out nop inc pop add jnp jo jo or mov push pop xchg in pop cmp inc lock ja or dec out dec push lahf insb push dec pop loopne fsts xchg and movsb adc es and imul pop sbb add cli inc loopne into adc mov in add sti lcall and mov mov pushf mov mov (bad) mov add sbb or push push sti jb xchg int3 jp mov (bad) dec sub mov sbb insl dec cs pop cli das inc aad dec stos dec push add (bad) sub cmp (bad) fucomi cmp mov fsubl adc jecxz mov dec xchg scas push add dec mov push jmp pop push xchg add adc or xor rorl xor push push push push scas push xor stos or mov pop jmp outsl lahf repnz jne sbb cmp mov or add shr lock mov mov loop insl jp das scas (bad) fadds pusha or bnd inc push xchg jg mov (bad) dec adcl pusha and lret mov push mov jl mov add xor mov movsb iret jmp jmp mov push xor push mov stos mov mov cli mov pop neg daa sub jg aaa cld fistl mov nop jg sbb add pop xor outsb lahf push lods imul sbb or mov cmc add sub push mov test mov pop jge (bad) push adc push mul repnz in lds sub pop adc ret mov loop jmp mov dec in jne fsts pop out lahf mov add out cmpsl sub addr16 addr16 lret xchg add sti mov xor dec mov pop push xchg loope and mov push cli xor jae adc xor test jmp mov in inc adcb out mov jno dec dec add bound pop out mov dec subl cli in dec addl pop sub sub add or movsb push addl adc pop jmp mov neg jae or mov sub jle add insl cmpsb clc sub mov push int3 das push scas inc mov and jmp pop mov stos (bad) lock mov ja setae lea push push pushf mov stos mov mov cmp ds mov mov add cmp xchg movsl jg stos sbb je movl rclb add sub enter jmp movsl cwtl jg,pt pop fwait mov or stos jae and inc cmc pop scas lea dec ja dec idivb int stc addr16 jp popa jg pop and aas sub inc add or pop fs lds stc nop sahf xchg mov mov cmpl or mov in dec dec ds push lret cmp pop push inc cli pop adc repnz not inc ror popa jge mov xchg inc cmp push push scas mov cwtl push and pop mov add add mul scas das mov mov cmc adc test (bad) data16 mov jl dec dec xchg (bad) daa fidivr jge pop pop xchg test mov repnz fdivs mov (bad) ret es fcom (bad) (bad) cmp mov fildl mov cmpsb ja cwtl mov push mov (bad) ss jmp xchg ljmp add lret cld mov add add or pop push call loop addl mov push mov sub (bad) mov mov jle stc imul xlat gs jmp push xlat fildl or xor jmp jo test not cli in fbld xchg divb add mov inc je mov negb xchg add imul repz mov pop test mov cli mov inc jmp xchg mov loope xchg pop pop repnz push add fisttpl cmp pop add in push sub mov mov inc jmp sbb add ret add dec mov mov adc pop popf mov push dec (bad) dec sub mov aad jmp jmp push push and fcmovnb test cmp fisubr mov mov inc out cwtl rcrb loop pop aad sub sti add push xchg ja,pn xor ss push loope pop push std cwtl popf mov (bad) xor cmc or cltd pop dec sbb call push stos adc mov dec cmp dec bound xor cmp push movsl ljmp aas pop fstps mov sti jge push pop dec ret out sbbl or stc dec jg js (bad) or nop rcl cli std mov inc sahf repz or shr mov push push xchg xchg mov mov inc push sbb sub fdivl out imul aam sbb mov push jae addl les insb out sbb pop imul pop push add xor stc jo (bad) ficompl ljmp push pushf idivl loop dec call popa xchg fbstp push sbb out je pop sbb aaa inc xor add push mov cwtl ret in jmp push push jge add imul jns fisubl sar xor cs or je mov jg xchg lock xchg aad ljmp mov jnp mov mov xchg gs scas cmpsl sti and push pop cwtl add mov pop in adc or lds and outsl jbe out mov jmp std nop sahf push lcall add jle pop lods inc mov add mov neg rorl out xchg dec cmp pop dec add out sub jg lcall clc loop aam lret add (bad) hlt cmpsl in and andl pop jge add xadd push cmp mov rcr out pusha pop dec mov cmpsb cmp and jle jnp pop shrl shll imul xchg stos arpl add jae jecxz mov jle add imul mov (bad) sti lret rol ja add mov mov mov into arpl mov pop rolb sbb sti jbe fsubrp mov mov dec add cli add add test xor aas jmp dec pop out into mov sub push sub sbb jae fsqrt scas cmp push addr16 push jbe dec leave (bad) test les sbb shrb dec cld out fsts cmp icebp mov pop out pop std cltd (bad) les adc mov rol xchg cli sub lea inc add fisttpll jg ljmp dec ja jge jae pop jmp ljmp fnstcw jle into loopne imul dec adc add repnz mov add (bad) pop pop jmp or push sbb mull mov push pop xchg fbstp push cltd sub add mov clc shrl push pmaxsw and sbb sub scas in add pop sub (bad) enter ljmp (bad) pop mov (bad) mov mov jne push push jmp fmuls jl in faddl sti dec mov sarl sbb movsl xchg lods mov lock mov rorl push jecxz pop dec aas add push or popa jno mov lea dec xchg push pop or insb (bad) ja push lret adc xor pop jmp rcrl mov sub cs sub lock stos adc cmp shrb cmp aaa ds dec xchg mov cltd cli add ret (bad) and (bad) jmp fisttp cmp push dec out lret and jno sub xor incb cmc in out cmpl mov cld dec or sub rcl jmp mov loope imull pop aad aas push mov gs (bad) out mov psubsw ljmp add pop in jns roll mov inc cmp es fcompl jmp push pop aad add xor add adc dec loopne xor dec pop jns cmp (bad) lahf sbb xlat pop ds (bad) and adc iret dec (bad) mov dec rcr icebp outsb cli adc lret in and cmp inc (bad) rcrb not xor (bad) mov or push xor mov into out pop imul sub cs jne add rcrl jge aaa sarb aas arpl (bad) pop jmp mov xorl ljmp out or or mov js lds and mov xchg push hlt mov adc jge pop pop shlb loop leave dec in add push imul or lcall (bad) stc pop push fiadd and mov cmp mov inc js jbe jge xor test pop and lods loop das fsubs xor test jne add out stc sbb pop inc push jnp sbb cmc mov gs in sbb xlat and fwait add stos jge (bad) aas shr push pushf adc imul in loopne mov or pushf (bad) xchg and ret or sbb imul scas push dec xor jns adc jno ds iret push push inc adc pusha sub or (bad) inc pusha leave add pusha sub adc inc adc dec or sub push cmpsb inc icebp dec push add xorl repz jo stos or ret cwtl inc mov and loope insb mov insl inc or jo cmc fisttpll push and mov jle xchg inc cli imul pop sub push jae ret pop inc and add out dec mov outsb ret cmpsb es inc jecxz cmpb arpl or jecxz dec add mov mov xor pop or mov mov das inc pusha xlat lcall repz invd test and test int3 dec lds call addr16 outsl in push pusha cwtl scas (bad) lcall fs and outsb movsl in rclb cld push clc flds sarb mov cs (bad) mov mov inc push rcrb fcmovnu adc jnp rclb test add cmpb fnop lods push cmpsl xor lods xor sub rorb pop in es nop rolb sub pop xlat loope pop lret mov inc adc inc mov enter stos ret mov lods push inc dec lods loop stos sub pushf cwtl fistl xchg sub test adc mov pop dec fdivrs mov add dec mov bound and xor addb add aad hlt push or fwait pop test or jo movsb add lods xlat push or add mov imul sub inc mov mov (bad) popa lret sbb mov inc les dec nop cltd nop adc mov push push mov imul aad sub mov push arpl lds inc fbld call or mov stos add pop icebp jnp imul js pop insb int sub pusha push mov jg mov xchg add popa fildl xchg sub cmp in cltd cmp lret mov pop inc scas scas pop xor sub pop scas cwtl sbb insl push (bad) mov and mov stos push dec cwtl test mov sbb or mov sub popa fs aam cld cmpsl (bad) rcrb add das loopne dec les dec mov adc nop dec movl add leave (bad) faddp sbbl mov xchg pop dec in icebp in and pusha sbb add gs add data16 dec out fs or sub aam and lcall cmp insb and out add arpl (bad) jae and mov xor sbb and data16 popa pop pop pusha jge imul jnp jg lcall add sub (bad) mov xlat jo popf (bad) pop adc push mov test pop in repz dec ljmp inc adc gs test sub or fwait dec adc aad add int3 add (bad) test push andb fwait int3 js test jo loopne (bad) jmp cmpsl xchg pop jp and mov mov pop add inc movsb mov mov insl add jno inc rorb mov cmp push add xchg xchg add cmpsb iret mov mov push rolb sub pop add loopne out scas cmp pop movsl or shlb mov add rol jmp inc adc sti add xchg ret rol cmp adc add fwait iret call inc xchg (bad) or in inc and iret add xor lcall cmp andl xorb lret pop xor mov in sbb mov pop mov sbb jno pop push mov cmp or (bad) pop jmp test pusha and jge add push seta fsts xchg push stos xor loop add mov xor xor (bad) add les loop and adc aas sbbl jb sub cmp pop cmpb je ljmp push xor daa xor psubb testl sti dec lea incl aad mov xor (bad) dec mov inc pusha and add popa je inc or add in inc fcompl dec mov roll xor sahf add or dec lret cmp or shlb jp push or cld adc inc dec pop dec and (bad) cmc fs xorb push sbb cmp pop pushf js add mov mov std pusha stos and ja enter (bad) fcomps cs test mov rcrl inc loope adcl add mov jmp lock sbb lds int3 pop inc lods sbb add adc nop adc jmp inc sbb dec add pop dec dec cmpsl cmpb or cld pop xor lock popf sbb and rclb popf stc mov fstp dec xor mov int3 lods xchg sarl sbb hlt stos subb loope and les inc mov fcoml inc mov addr16 (bad) push pop lds mov cltd adcb pop inc ss xchg push sub lahf mov xor mov dec jp add mov pop lods or mov arpl xor addr16 cwtl iret shll sub cmp xor push enter sahf fsubrl ss jp dec push inc mov pop xchg jbe arpl inc inc nop test (bad) push dec imul pop mov mov dec (bad) jno sbb mov pop inc (bad) js inc pop push rol sub mov dec dec xchg mov jbe mov push push push outsl (bad) mov sub sbb jne lahf in xchg insb xor rol lea je push push outsl or pop test stos add pusha pop xchg insb and adc xchg add jbe pusha xchg andb cmp imul in (bad) mov pop mov pusha mov add cmp mov or or insb shrl (bad) mov add cmc pop adc inc imul or cld cmp jae pop shr dec popf aam mov shl out pop pop mov (bad) or (bad) aad or or add inc insb mov mov and jno mov imul je pop (bad) aad lock inc loopne mov jecxz jae push ds repz push pop or popa pop cli inc fsubr testb add mov test or pop xor inc pop scas mov lcall gs (bad) xor lahf adc push add ret stos out aas pop mov add popf xor mov cld (bad) sbb mov popa clc scas mov ja and mov cmp ret (bad) cld aaa mov dec sub adc pop arpl ss or cltd lods inc hlt and outsl cwtl xor pop xlat dec or cwtl and cld lods pop sbb sbb mov mov add enter mov rolb and dec popa push mov hlt imul sbb mov xchg pusha xchg lcall rcl cli daa lret add mov xchg mov adc push sbbb cltd mov jbe,pt ret xchg sbb sbb in or (bad) js cmc data16 lods sbb adc lock pop outsb xor (bad) xchg bound sarl adc pop imul sub add cmp icebp into arpl outsl sub push pop test jg xorb jp mov adc mov lahf sub push mov mov dec pop test incl call inc sahf in test js add imul jbe fs add sti icebp (bad) mov cmp and mov inc and and push mov xlat xchg mov adcb pop sahf add stos or xor push push je and sbb decl int3 sbb loopne cmp inc (bad) dec push cmp pushf popa dec push adc push inc mov jbe sub sub inc inc or xchg cmp jno jne pop mov pusha notb dec adc in addr16 lock pushf pop (bad) or add das je add jns (bad) jbe push les mov inc fsts mov cmp and test pop xor bswap rep out mov bound mov mov mov inc xor cwtl pusha ucomiss pop inc xor xlat movsb jg je add cmpsb jbe add rorb leave pop mov add mov push xchg and aaa test out jno or int ds cltd loopne inc pushf es pop leave mov adc add nop clc sub mov push mov inc out lods fmuls cs lock scas or test dec insl add imul invd movq mov and or jb (bad) mov pusha call pop mov inc xchg shll add sbb sbb hlt stos xorb imulb adc or and outsl xor cmc fwait xor test pop scas mov fs int3 sub shrl pop pop movntq sbb es call mov aam test push cwtl cmp mov aam mov jmp into bound mov add sbb jl dec push adc mov enter clc pop cwtl dec push add into inc inc cltd pop add add jbe fcmovb add mov mov rcrl inc jbe xor add jns (bad) cmp sub add add xor nop xlat jbe xchg or loopne popa sbb sar xlat aam mov jbe pop lods cli push mov push jne les mov mov sarb push daa fdivr lock sbbb lds adc rorb and or rcl es and inc adcb fmull mov sub fildl pop adc stos sahf imul in add adc add push mov nop aam dec and cld or scas dec clc mov nop std je sub cmc jmp imul mov iret jno push lcall xor or sahf loopne pop popa push dec lods aas mov jbe faddl outsb and arpl pop bound outsl fisttp (bad) sbb pusha xor cmp incb mov pop cmp sub add xchg sar xchg aad repnz hlt movsl and xor xor sbb popa loop dec mov sbb mov les push adc adc mov inc ja mov xchg in outsl add ja,pt or loop add inc xchg cmp stos fidiv sbb and lret push lock inc sbb nop dec pusha or dec jg repz push test add cmp pop aas arpl pop adc loopne movsb mov pop sub push and sarl and loop pusha hlt lods mov mov out daa mov loopne ret sub in mov divl je pop sbb xorl push jge pop dec clc xor or dec movsb push cli add xor data16 (bad) sbb test cmp push scas push inc cwtl add (bad) ss es mov xchg xchg movsb adc cmpsb jns adcb (bad) leave pop mov (bad) es add in jo push adc enter icebp pop stc (bad) aas jmp sbb cwtl pop gs clc es lods shll pop out sbb and adc cwtl xor add push jbe mov mov nop mov inc jbe add push push nop add popa out push mov inc les stc mov add sahf loop sarl xor add adc lock adc mov xor cmp cmc sbb es xchg adc mov (bad) push pusha adc rclb jbe rcrb push hlt jg push adc adc mov js fildl inc test push ret scas fcoml repz fidivrl mov or xor addr16 roll mov sbb mov jbe mov (bad) clc jg psubb sbb int3 xorb push cmp adc add mov add inc mov sarl dec lret int cld or out in mov dec rcrb in xchg or or xor dec xchg cmp add dec popa pop lods xchg and adc mov adc sub js jno add mov sub xchg mov subb cmp lock in test jge icebp jle adc (bad) les hlt lret xchg insb adc and ja or sti lock sbb adc adc aad repz fnstcw mov fdivs data16 push push (bad) add pop push es sbb cltd pop add (bad) outsl cmp cmp out and mov bnd dec lcall sub lret adc les xor ds pusha add jle add jno gs push push add shrl dec es je add stc pop sahf push lds or jp scas in pop add scas scas mov xchg xchg jle mov and adc stc ret jbe and inc sbb mov lret nop fwait add dec jae jno xor mov sbbl jmp shl inc jge mov lcall jl mov and fsubl mov mov test shr shrl mov dec jl push sbb mov andb adc and pop popa testl ss push xor cmp in sarl addb dec add push push cmp xor pushf and aaa int cmp iret add sbb hlt mov add insl xor les and pop add push xchg sbb aaa adc lock pop lcall mov add xchg iret xor dec addl popf int3 leave pop mov xchg scas js xorb push sbb add in pop cld sbb not mov or int3 fwait test mov stc sti shll pop insb push sub push iret call xor mov push or sub lods pop push sbb inc or add mov inc xchg add je mov mov sbb xchg sbb aad fmull andl clc cwtl xor daa add rorl jg xchg or lcall add push lock or mov mov lea inc loopne negl mov rol fsts xor cmp outsb cmp roll in sbb mov nop fwait loope xor (bad) out orb jns push pop rclb add mov inc add sbb ret and mov cmpsl std or movsb insl stc sarl les pop pop fsubs daa int3 enter cmpsb ret inc push ret repz jp add imull dec or mov inc push and fisub imul mov jbe clc testb lods mov jle mov imul sahf and cli mov sub dec sub jns adc or pop (bad) inc scas add (bad) aam test icebp out and mov rolb pop daa mov or mov jnp roll mov sub movsb mov mov sbb pusha ret push mov subl dec mov adc sbb outsl adc (bad) incb add inc inc jb sbb notb xor add movsb daa xchg adc call adc mov inc mov out aaa add jp push sbbb pop add dec or lret clc out sbb inc mov stc outsb movsb in sbb inc lret cwtl mov sbb adc nop dec pop adc pop pinsrw mov add mov fs inc mov adc jmp pop adc mov in (bad) xor inc push (bad) jo sub xchg pop sbbl adcl push (bad) addb or inc add mov sbb and popa cli es ret mov in fiaddl ret mov ror lods mov sub pushf or dec test add sbb jns and stos xchg movsb mov cmp (bad) fmull inc lret test fild (bad) mov pop repz cli ret lock icebp test xchg add leave adc in iret call cltd dec test dec adc stc push push sahf repnz outsl dec dec and jo jbe std mov mov mov je sub adc leave adc faddl push fsts es lods icebp pop test mov sbb aad pop test cli iret mov cmp idivb push add movsl fmul xchg arpl (bad) mov mov lret popf adc mov adc mov daa cmp push (bad) pushf mov push and jge dec jne lret and or push adc or and push add mov cmp cwtl fdivrl jge orb mov mov mov inc hlt pushf cmpsb mov lcall dec test inc in lcall add test imul pop scas fs lret dec jb es cmp xchg ret and push sti and sbb mov mov lret imul jl pop xor mov dec add lret js aas sub pop inc dec enter in adc sbb mov inc cwtl cmpsb fnsave xor lods and xor aad fsubrs pop loopne and fwait inc orl mov sbb int3 xchg fwait add mov iret mov daa mov negl movsl push push fcoms pusha jns shr ret lock fmul lods pop pop sbb mov es jb mov aaa sbbl push and push test push aam mov push hlt sarb clc mov add stos mov inc ja add cmp and inc add push sub mov sub popa dec mov and (bad) clc pushf rorl cmp in or inc xor rclb hlt or inc outsb push js or pop add aas insb mov xchg jle add stc lret or out jno mov cmp xchg shrl add call icebp clc mov or pop lahf adc add insb mov inc or stos scas jne mov inc nop adc test or push mov test inc inc lret cld xorl mov and sarb xchg inc bound cmc xchg inc or shlb aaa jl je adc push jp inc ja sub adcl dec repz (bad) mov out nop or inc inc mov sarl lcall and inc add mov test popf lods icebp aam and dec lock xor inc test and cmc test add mov fwait shrb clc push rcl pop xor ret mov hlt add dec sub pusha mov dec adc and call ss in add sbb stos push mov adc xor cmp pop test push dec scas insl adc popa or dec inc shld call rclb test xchg mov enter int3 dec stos in or dec test mov pusha mov xchg inc or inc sahf stos adc out xchg cltd inc xorl (bad) adc sbb mov (bad) cmc jns loopne xchg mov pop loopne jo sub rcll es jmp cli push adc out sub test repz and rclb lret leave dec and mov pop js popf and pop repnz stc mov or mov add mov mov dec cmpsl lret cmp loope loopne push jle and hlt xchg sbbb leave lock movsl mov adc push or es das popf dec aam jo push mov (bad) iret stc mov cli xchg je mov movsb jne xorb cs mov (bad) in inc and nop and cmp int3 adc mov cmp mov xchg jns ja mov or dec mov add mov jl and jae dec push ds mov and fisttpl shrb sub add inc bound adc xchg sbb int xchg shll movsb push jp xchg lods sub les fild in rolb cltd cwtl lret jo inc xchg arpl ret adc shrb mov and cmp add sbb xchg adc push std xchg mov xchg xor adc fcoms inc xor sub loop test mov cmp cwtl (bad) sub imul cmp xchg mov mov and (bad) icebp push lds jo lea mov add aad xor js jns test dec out add jmp vmwrite adc pop xchg (bad) and pusha dec jnp add sub push sahf push stos mov pusha test or icebp int inc push (bad) push clc cltd xor mov cmp mov stos lcall xchg dec mov fwait add ds mov adc daa lods adc mov xor dec push adc or fcomps mov sub adc fdivrl js and dec and loopne inc rcr push push fwait mov pop lcall mov push mov jo inc or sbb pop mov lods adc or orb add popa pop fdivl ret sbb inc iret arpl jmp mov test rclb test mov std pop (bad) hlt icebp push xchg push test jno mov cwtl sub xor outsb jl test fildl add data16 cmp add repnz inc sahf add rcrl test andl cld pop adc sub movsb cmpb mov jo adcb pop fisttpll std jmp cmp cmp xor leave xchg repnz add mov mov mov fisttp mov pusha aam push cwtl and jnp inc pop pop cmp dec sbb jo and mov ja inc out ret test xchg jno pop sbb push aam inc repz push insl lret jnp pop popa jl pop cmp push insb es or mov (bad) pop das gs xor cmc stc add loopne dec in mov sub mov shrb add dec xor in and xchg adc (bad) cs inc pop stos adc xchg pushf shr stos outsl sub sbb mov push leave cli pop add imul lret dec xlat or mov fildl mov xchg inc add addb or stc mov insl jl and mov das dec adc adc xor (bad) mov mov dec xchg aam cmp fdecstp lea add sbb addl cltd push pop fdivs adc jp inc push add xor sbb rcrb rol shr shrl subb mov aam push jl or popf sbb lds and iret add inc js dec mov shrb into pop sub xor daa orb lret push sbb (bad) ss sbb cmp cmp cmp sbb fbstp or cmpsl dec sbb push mov sti mov inc sbb test push pop xchg cld add push mov gs jno repnz movl dec lock push mov inc pop (bad) cmp add dec mov ficomp movsl andl sub sbb lock (bad) mov add and pop or loop fldl or out cmp mov sbbl add push mov fcmovne jno sti xor and push dec add and xor leave dec cld and sub mov call push sbb insl rclb movsb jle jl and je sbb cmp jo repnz cmpsb jl xor mov hlt sub ljmp je add and or sbb and add jne sbb push sbb in mov enter ret cmpb and add and ljmp sub mov push fsubl repz jno call jbe addl rcrl pop adc bound push lea jecxz jnp push out or mov mov add push test movsb sub add hlt mov fld mov sbb mov mov or mov cmp mov rcrb popa imul ljmp sub rol fildl or popa cmp jns xorl xchg out sub add and loope cmp push addr16 sarl sbb xchg or mull push pusha addr16 sub push mov inc iret add push jne or and jns push and fild cmp dec leave add insl jnp daa sbb inc dec test cmp subl (bad) jne rolb adcl xlat cmpsl push and inc cmp and xor mov add cmp jae fnstsw or cld jbe mov ret xor mov out xchg scas jecxz mov push xor mov (bad) add sub repnz pusha adcl (bad) int (bad) fcomps repz movsb xorb punpckhdq mov push add (bad) hlt inc call or jno add sub xlat xchg dec pop test aam popa pop jmp mov mov cmp sub push jnp jbe ret (bad) loope mov test adc jns push mov add cmp and cmp push enter pop mov or hlt and out (bad) lock inc rolb cmp (bad) cwtl fmul adc js adc mov jbe mov call adc xchg in jne push roll jnp in or pop or jbe imul push (bad) enter loop pop add jne inc nop cmp lret and loopne rcrl je cmp fcoml pop test repnz cld pushf (bad) roll xor rcll sub outsl sbb jle (bad) mov call popf inc aas test addb test mov add orl movsb cwtl add nop imul push cmp inc into (bad) or cld or sbb enter push rolb pop mov and movsb out mov fwait push inc add xchg jle mulb xchg into mov fcmovnb adc add jecxz add sbb cmpb out cmpb mov inc fstpl aam out cltd pusha mov sbb ret add bound loopne or dec inc or or add ds mov pop test adc mov pop pusha nop sbb test xchg inc add jp mov mov cltd jmp rorl sub add cmpsl or (bad) jne and cld cmp pusha and pop call das adc fwait push push test xchg jb jne add xchg pop data16 fxch jle or hlt fs into add fisubr mov add ret inc and pop xchg enter dec fdivrl orb jp sti dec jo pop sbb dec lahf add lret enter lods push sahf mov push rorb jbe mov add xchg adc push mov jne and push or jnp mov add call ljmp mov mov adc clc sti adc sbb dec push xchg sbb cwtl push pusha mov pop pop pop subb fsts dec pop pushf sub push add add xor mov add mov (bad) test adc call sub mov notl loopne cmpsb test mov fs xchg xor sub fsubs mov inc imul pop push rorb fist xor test bound test mov xor je ret add cmpsb add movsb add pop pop iret nop jmp call sbb cmp inc ret or or cmpsl inc nop push or clc xor jnp test rolb or or mov inc mov (bad) dec and dec repnz insb push add mov mov lds sar jge sub call sbb outsl outsb js xor mov adc or clc sahf imull jbe or jg dec push mov ljmp fmull adc js fildl pop xchg in lahf jne aam (bad) shrb lret (bad) mov cmp in rclb aaa adc dec and jecxz sbb cmc push pushf xchg mov push mov lret mov push dec test jg push mov xchg cmp or push rol cs and test cwtl fwait mov aas or out or mov sbb dec js xchg adc mov jnp (bad) mov mov or push aam push fdivs adc test add movsb dec pop mov mov lahf (bad) sbb rcll daa and cwtl xchg add or loope push jbe clc test and push adc jbe dec nop in and (bad) (bad) testb pushf pushf or fcoms xchg or nop or sbb sub fadds (bad) pushf repz fdecstp and sbb fsubp (bad) cmpb je movsb cld or mov pop insb imul pushf xchg (bad) andb mov mov bound push cmc mov adc push pushf dec mov cli pop hlt pop repnz xor das xorl add call push cmp or andb push test mov inc sub or cmc int or jnp fdivl add jle xor push mov dec adc sbb adc sub int3 and mov icebp pusha mov add add repnz pushf pop add or loopne mov js jne fisub add and enter xor leave inc fmull jo mov int3 lds enter or add cmp pop push push dec pushf xchg push mov loope push adc sbb pop and mov rorb jmp dec add pusha insb repz daa pop pop lods sbb sub nop ds jb add dec js dec sbb js inc push pop xor sahf rolb fisubl wrmsr push ljmp into mov mov sbb push push and pop (bad) bound push jge xchg lods jb sbb sbb fnsave push sub inc add iret and add or add and adc mov inc add xchg mov mov sbb (bad) jle pop xchg add or jne push rolb pop bound and fist jno mov cli sbb jae adc jns push js mov sbb dec repz push into jb add mov retw pop or pop sbb (bad) je mov ret inc jbe dec fs loopne mov mov jo adc pop adc popl mov xchg movsb xchg fisttpll js and xchg test test test lods adc xchg push dec lods lea sti add dec and adc add adc jns dec imul jmp add dec jb mov das add loope pop pop aaa jl or jl cmc dec sbb sub cwtl sub mov mov addl mov les add jl and enter and adcl fadds push adc mov add fwait scas roll push mov popf adc pop data16 adc add cmc add or jae test pop mov cld add imul lea pop mov and stos adc movsl add int sub jne adc call sub ja inc nop xchg addb test imul js sub imul xchg mov je push cmp dec cmpsb call jl (bad) adc sub fwait mov or lret jo sar jl sbb les mov inc clts inc out lods pusha push fsts call jbe test or inc in scas repnz lret fldenv cmp nop ds in les add lret inc xchg sub mov dec mov stc adc lahf jecxz sbb sub stos add mov scas and adc stos nop in jg in adc lods sbb (bad) add push cmc orl cmpsl mov add mov cs roll inc adc jns sbb adc lock push jl add ret pop out mov stos test and push sbb (bad) cmp rorl rolb in insb jl add lods outsl lahf dec loop pusha jo mov rcrl movsl adc push inc clc outsl cmp mov ljmp mov (bad) inc dec call mov xchg or lods sub les rol push mov in mov call fstp jmp cwtl test inc mov mov and push lret add cld mov add lcall in mov add mov ret cmp sbb loopne hlt outsb pop add push jmp add pusha add jl dec inc or dec fidiv js add jge sbb xchg push mov popa adcb push sbb xchg les pop shrb cwtl insl add int jbe fs sahf hlt jmp fs cmpsl dec mov mov mov pop sbb or dec popa test jp jle push pop ret pop mov scas and sbb movsb aam pusha dec lahf sbb jbe sbb inc adc push mov call out add ljmp inc push cmpb nop fildll add sbb push pusha js cmp inc (bad) aad jno push test insb repnz jmp int3 sub nop scas add (bad) fisubl sub lock pusha mov inc test rolb adc shr cmpsl leave enter nop lea mov aam leave mov dec push js adc shl add sti inc push ds addb adc push ret jae mov inc or test push roll inc push cmp jl movsb daa add repnz jo lds mov dec mov mov mov mov pop mov stc adc and xchg or dec xchg mov dec inc fadds arpl or inc (bad) jb fmull dec sub cmp mov mov shll xor add pop jno xor or and out cs in icebp arpl sub jmp mov sub add ss inc and xor add add adc fldcw mov dec sub add cmp push jno (bad) sbb jne pusha dec add test adc popl push dec scas jae fsubl and inc test xchg rclb xor daa mov or popf xchg and movsb add mov mov loop inc add mov mov in sbb sub into stc imul lock mov fist clc jo dec out jle icebp cld sub and (bad) (bad) push fisttp sbb add pop cltd xorl (bad) jno sbb cmpsl inc mov cmp daa jl add adc outsl cltd (bad) not sbb sub push fild lret lea push add movsl adc ret shll mov add pop ljmp jp,pt cmp in add cmc mov fistpll add pop dec mov addb fs sub cmp aaa adc mov xchg mov fcmove sbb mov popa pop mov popf jo int3 not clc add ret cwtl ds andb jb test shll xor adc out pop mov sbb or andb test mov cmp jecxz xchg push sbb es mov add (bad) ret xor out push pop enter cltd jmp mov imul rorb jb sub sub add andb bound inc inc out popa sbb jmp dec add movsb ja cmp nop in cmpsl cmp add add outsl cs jmp adc add push shlb nop loopne movsb add and lret pop fistl call orl mov rcrl lcall pop inc adc push fdivl fdivl aad pop (bad) sub mov mov imul or leave and cwtl adc loopne and in cltd adc in inc mov add lods adc sbb idivb movsl loop lret pop call aas rolb mov inc ficom sbb loope add and pop nop outsb lods push xor (bad) inc xor pop (bad) xor jp and mov add lret scas decl mov ja pop js xor add cwtl aas outsb fcompl jl xchg loopne adc xchg cmp mov ror cmp cs cmp or and (bad) test cmp popf scas push loop,pt ret xor pop mov mov push xor jo inc les movsb fcompl and mov push adc shrl add sbb pop push mov and add and dec sub push xchg addl pop add mov mov lods fiadd dec rcll xor mov mov sub mov fs orb jne and mov push lcall cmp cs hlt andb mov dec mov mov test adc and pop enter add bound popf loope inc dec add lcall push inc xchg clc and mov or inc jne nop loope add dec les xchg mov cmpb stos fist cmp test xchg mov pop movsb xor loope popf and xor mov xchg inc scas cld lds sbbl movsl insb les repnz adc dec push add std sub dec dec push adc loopne mov scas ds add add mov and push and add push pop fld inc pop pusha clc sub aam add std inc and cmp test mov or xchg pop lods push cs lods mov out shrb and jno rolb sub or xor (bad) push xchg das sbb push push cld popa mov xchg std lds das and pop jns pusha movsb cmp or or or mov out shll in mov ja mov andb cs loopne pop sarl inc mov data16 mov ficom and flds (bad) out adc adc out add sbb fnop dec nop mov (bad) mov mov fwait cs outsb add adc add and add dec ss inc lds cld cmpsb mov add xchg mov add adc mov lock fs cld bound mov cld loop push addl inc out pop cltd adc rclb xor jl pop fistpll dec bound or add mov jp cmp decb mov or (bad) sahf add push jp jmp stos shr pop xchg or (bad) loopne add fidivr test add jp data16 dec int3 loopne testl ljmp or fcomps cmp sbb mov or xor out pop pop jae xor data16 sbb ljmp inc hlt call adc lea pushf iret addr16 jecxz pop lock mov adc je (bad) repnz xchg out pop movsb pushf adc fs sub jp (bad) bound popa pop (bad) in insl or xor sbb int stos mov adc lret push enter cld cmp fmuls shrl dec xor and add movsb push mov inc push push loop movsb jnp rorb rcl nop fdivs cli outsl cmpsl negb add lods mov jo sbb xlat adc mov jns stos pushf jp add out je repnz add loopne xchg sbb loopne pop fs sbb ds stc pop adc push xchg lds (bad) out pop add fs testl call inc jne divb outsb dec push sub add xor jae scas cmp popa adc cld jecxz addr16 pinsrw movsl mov lret je xchg inc and jno and mov push movsb mov in jo mov rcrb inc bound pop pop push and add cwtl jo jnp jl int3 xchg inc outsl aas mov add pop sbb sub and jp inc cmc push shr inc lock leave sub cmp das xchg jns or mov mov jo add jno imul xchg cmp fwait add (bad) add mov nop jnp add pop popf idiv xchg inc cmpsl int3 add insb movsl ret and inc or inc mov and jo popf orl add fwait sub or sbb xchg pusha mov xor mov loope cld sbb jnp push pop in inc adc jge mov cmpsb in data16 mov adc enter mov inc pusha xor mov inc jae js mov into sub fistl cmp jns xchg out stc and mov pop sub xor push sbb mov stc cmp mov mov and cs sbb mov adc adcb mov lret mov test stc test and lret int loope sbb call xchg jns outsb lods mov les jge add sub jp (bad) push test bound nop adc (bad) scas cmp out std and or rorl lea cmc jmp jnp setno fistp cmpb in in divb add call jae adc add andb icebp test push (bad) cld dec out stc sbb mov movsb jmp jmp push pop or je js js add int adc mov mov cld pop pop add add xchg in decb mov icebp loopne insl jp xor jnp mov lahf jo pop andb (bad) xchg add cmpsb sti popf xlat enter out adc fsubrp sbb pop pop shlb mulb xor fsubrp cmp adc or movsb divl xchg cmp sub mov (bad) in insl cmpsl stc push ficom fsubr push and or push or test inc add mov pushf jae enter testb xor fldl2e clc pop cmp je jb cmpsl add jns pop add mov mov dec adc sbb ljmp aas pop cmp mov jp add shl push decb mov faddl fs adc mov xchg rolb test and mov cmp jns std into sub mov cltd add fildl or sahf (bad) iret cld xchg sbb in sub or xorl mov sub movsl cmp push out rolb rolb and inc push cmp pusha inc pop adc test pop pop js pop push and xchg (bad) push mov sahf inc mov pop std cwtl popa pop js jecxz jp out data16 sbb mov nop ffree mov imulb mov cmp push add adc adc insb lock cmp test fisubr xor pop cmp mov insb xorb mov std jae pop insb and or add stos test xchg add inc and push adc push mov nop adc (bad) pop add inc add or or mov lcall je movsl and nop mov sub add xor cwtl (bad) and lock lea in jo mov ja sbbb clc lahf add mov inc pop sub add lods cli (bad) fnsave cwtl pop and push push mov cmpxchg sbb ja inc adc mov sbb pop lock mov roll and leave cmpsl cmc test je ret dec pop cmp or or and add add add int cmp xor ja (bad) fcomps jmp or int3 popf sbb pusha adc xchg addl cmp or adc and pop sbb push les and xchg and jl add stos adc cmp push sbb jo adc mov scas sbb fsubr mov mov push (bad) inc lcall (bad) sub rol inc and cmpsl cmp je lahf adc add data16 xor mov out inc adc cmp mov shl mov lahf lret fwait mov cmp cltd adc cmp lods dec xor or mov sub call repnz cmpsb in cld out movsb lds scas inc and dec repnz xchg add dec pop inc mov add and mov pop es sbb dec nop ret add add sbb adc sub pop add fadds xor and add push mov lret inc dec dec insb add daa jle addr16 xchg jo xchg pop or iret jae jb ss cwtl push enter mov jne add popf push adc add and call add movsl loope fsubrl xor xor rorb test mov and fs ret mov js jo jns ljmp movsb aas mov push enter mov and das mov xor xchg adc pusha xchg or add dec rcrb and popa lret jo inc sbb pop dec cli inc insb test inc lds push stc xor aaa loopne sbb daa out add add pop add test dec int3 repnz les jg adc mov and push insl ja inc xchg incl mov dec repnz cltd mov testl (bad) cs ss add xor movsb lret mov pop xor mov movsb cmpsl fcoms mov push outsb je sub fcompl push leave jnp inc icebp sbb push cli movsb jecxz stc adc daa (bad) xor dec push xchg and and xor sub ror xor popa sbb and bound pop cmpsb mov sbb xor or and xlat sbb cld xor add mov mov xor and lret mov pop or fadds mov repnz les jo test fisub enter xor pop mov jp add or dec mov push dec inc cmp push cs test dec inc insb adc pop adc rorl and sbb iret push inc add sbb jmp shlb out fwait in aad or movsb popf or mov cmp test fs pop divl test jle pop pushf inc lahf mov mov ret (bad) imulb and xor daa mov xchg sbb sbb shll adc fsub enter mov je gs xor mov cld adc cs nop loopne cmc mov jo popf mov sub push push mov notl mov jle out adc cmpl pop sbb xchg push hlt enter mov dec jl jns pop cmp pushf xor bnd inc dec push push jl inc xor mov mov dec leave rcrb pop ja pop adc pop fisttpll push dec daa add mov and inc les and xchg clc sahf shrb add lcall cmpsb sahf mov sbb stos mov mov and add pop dec pop jecxz dec adc pusha flds push dec xor f2xm1 nop adc popa sub imul lods shlb nop add mov xchg sub or mov imul or pop movups sub xor je or mov xchg add aas pop test out sub jge sub push and cmp cltd jb dec adc mov ja pop std es insl addb and add (bad) in xchg sbb pop dec std dec pusha pop xor int3 pushf mov clc cwtl test test adc scas xchg cwtl loopne inc in dec cmp test jg movsb icebp inc xor in inc cmp xor (bad) cmpsb scas inc test movsb loope mov insb mov mov mov sub xchg mov and mov movsb adc mov loopne daa cmp mov sub sub jo xchg jl mov leave and sbb add movsb pop adcb add and outsb fidivr or orb add adc outsl stc xor loope in test add dec dec call ja adc cs and icebp inc in jae sub inc and xchg lock push inc nop repnz mov (bad) loop mov nop (bad) push fisubrl rolb inc sbb shrl aam and cwtl js mov rorb call fmuls cli or loope mov rolb or arpl stos lock mov cmp xchg pop adc cltd or sbb add sub fisttp xor mov insb xchg inc mov in mov lret xor pop inc mov mov mov clc repz and test dec lea sbb aam jb aas pop pop add push int3 rorl sahf or pop mov add mov and jb add cmp and mov fldenv mov add adc add cmp je call scas lock adc push add sub add bound mov mov and adc hlt int3 aam lret jns (bad) lods or rol mulb push hlt inc jo test mov sbb mov pop cld lock ja shrl xor lods jns cmp aam add cmpsb xor ja mov jg pop push and inc stos dec hlt cli rorl js in enter xor cmp mov les and fs mov inc dec mov pop (bad) jmp repnz add sbb pushw or sbb or loope mov std cld mov pop test xchg mov xchg inc cltd (bad) outsb or cmp nop (bad) pop and jae gs and or jmp mov sbb add fldt clc sahf or dec sub arpl and (bad) mov aas fnstenv repnz add test dec fldcw fsubrl daa les insb jne pushf or ljmp pop adcb adc cmp ss das inc cld inc and mov inc lret (bad) jno add mov lcall lock and popa call in ss popa xor aam movsb rclb repnz shll jmp lret stc lahf nop add cld decl pop push fsubr je imul je lods orb cmp sbb test cli add in in mov adc and inc xor mov add out push mov in xor jl or and paddusb aam push or adc inc aad xor mov xor mov sbb pushf inc mov leave test imul dec enter (bad) lds int3 test jns popa sahf rclb adc les sarb mov xchg pop mov mov and xchg jo dec cmpsb fs add or test test xor mov adc movsb or add and movsb push cltd adc push inc clc xor mov sub les jo add xchg loopne pushl pushf (bad) nop cwtl xor shr movsl mov dec test jecxz dec rcrb mov cld inc lcall jae fs call lret push pop cmpsb or jns or pcmpeqb mov pop mov je xchg xor loop adc push (bad) icebp xacquire sbb xchg or xchg adc push push sbb addl test stc xchg add push (bad) push pusha xchg ss cs (bad) js stos push add sbb mov pop inc jb outsl sbb pop and sldt call xchg inc aaa test push adc jno or add lea subl dec daa xor cmp mov sbb jne pop mov rclb mov mov add pop push pushf cmpsb je cmpsl add out movsb insb in js push popl cmp dec sbb pop cli subl push outsb xor aad add ss bound dec pop add ret rorb sbb mov and and pop daa je jbe lret dec adc add cld out and sahf cmp or sbb adc sub fnop movsb sub das add push push rcll xchg cmp dec ja xchg inc xor out ljmp enter adc push ret outsl aam je and mov icebp imul and push push insb hlt mov sbb incb pushf popf jno pusha jo lea sub pop in and adcl cld sbb xor cmp xor add xchg lea mov cwtl mov pop adc sarb mov cvttps2pi nop orb lock add jb xor sbbb pop hlt cwtl push mov lret loopne add and lock and or xchg cs or mov lods int3 sbb outsl inc sbb add cmpsb mov xor out inc sbb ja pop add cmp shrl int3 cltd iret lock adc flds (bad) xor jg jmp add mov mov lock mov lods cmp jg jbe push inc sti out xchg iret and add out or aad sbb icebp mov sub sbb ret add dec lcall nop add stos in add xor je (bad) mov jl push aad mov rorb and cmp (bad) dec sub push popa fmul add cmp (bad) outsb cmp mov aas lock cmp dec push and jae jbe push jmp orb (bad) mov out lret sbbb fsubl test mov pop mov (bad) mov add stos data16 and rcrb fisubrl xor (bad) (bad) cmpsl or pop add test add sbb call andb inc stc or adc jg subb dec xchg insb in push mov and add pop aad mov sbb int3 sub and add shrd sbb stc or adc mov push push jl add mov inc fildl rcrl cmc jge mov loope int3 dec add cmp and and fsubr sbb xor jo mov cmp cmp mov mov sbbb add push xor ret and mov cmp cmpsb in add push add cmc adc ljmp mov xor imul jne sbb fwait sbb sbb (bad) jno sbb jmp sarl sub in inc xor sar adc xor enter mov je bound xor xchg fildll jmp sahf std hlt mov adc or mov adc fdivl or push mov pop xchg aaa and arpl mov js jo xchg mov inc and mov xchg inc and xchg or xor cmp nop js dec mov cmp inc fcmove insb js and (bad) addr16 jl mov mov and mov inc jo add add or mov push and ret dec mov leave scas std inc test dec stos pop push divl iret fidiv (bad) je pop (bad) aad aaa adc sbb or sub incb cmp adc pop pushf andb sub clc add xlat sahf stos dec xor mulb xor adc or sbb out js pusha push jno jno imul and add mov dec xor leave test and jl mov push and inc aas inc cmp iret insl in imull xorb imul sbb dec or mov loope movsb or js clc (bad) pop jb lods adc (bad) jae mov cmp inc mov mov lods nop ja jo imulb sub sbb inc adc and es xchg and test sahf nop cwtl mov clc add or stos pop lret jnp jle negl aad xor add ret aam adc add push or pop lcall pusha pop call ror pushf stos in xor test paddd or movsb adc mov mov sbb (bad) adc jle xchg push xchg and jg fsubrl xchg dec movsl orl mov call mov adc fdivr dec jns push mov test mov lods mov xchg inc cwtl insb and outsb sbb aad (bad) lock int3 je test jg aas mov sub testl lret fcomps roll and sbb rcrl loope push cmp in sub hlt clc mov es enter cmc and sbb stos loopne mov loopne adc aaa add fwait push cmp xchg push je mov xor cmp mov adc mov stos xor cmp movsl and in or and jl loope inc sbb addr16 fst ljmp cmp sub xchg fcoms repnz add push rorl adc add mov jle call dec adc mov and (bad) jbe xor add enter fsub mov mov movsb xor cmp rcrb or mov xchg jg dec pushf jbe,pt xor pop sbb flds push mov cmp and addb loopne clc ret push push stos dec aaa cmp push jp mov and lcall (bad) push (bad) cmp push xor leave pop or xor lcall cmp dec dec adc aam mov sbb ficoml stos jbe push movsb and cmp sbb add dec xchg cld out xor pushf xor add sbb adc jecxz cmp adc inc imul outsb repnz enter aaa dec sbb inc roll or stc and add pop jecxz dec add xor add jno,pn test test mov loop jns xchg jns mov sbb inc addb lahf out test std xchg iret daa xor int mov sub mov iret (bad) adc lret sub mov popa xor (bad) pop inc icebp movsb dec and scas dec push push int add add test dec lods stc daa sub add xorb mov gs fwait enter aaa hlt jae test mov adc lds int3 cmp movsb sahf mov pushf pop inc ljmp or or push nop cs pop fadds xchg mov cltd in mov add adc in rorb add shrb cmp pushf int (bad) mov fwait nop (bad) dec test cwtl xchg push lock xchg test pop add add and pop addr16 pop add enter mov lea int3 cmp (bad) and adc movsb int3 mov push nop push notl xchg mov testb arpl ret or xchg hlt and stc jmp les fwait cld sub or les pusha dec add inc jo or mov push popa mov data16 hlt xchg xor insb jle and inc js xor inc and xor mov lods or leave loop pop xchg adc xchg shlb dec jecxz js mov sbb push sub xchg rorb enter sub pop pop test fwait sbb sub inc and (bad) cmp (bad) incl cmp mov dec or pop jae lahf inc stos push pop bound and shrl push adc sub roll mov xor out (bad) hlt or inc xchg popl and xchg jo daa in movsb outsb xchg sub adc repnz add push mov dec test push aam rorb jne or mov xor sub loope lock inc dec ss add bnd adc or fisubrl or stc (bad) or sub push mov add inc dec in push ror (bad) and rcl inc ss xor lcall movsb mov daa lock sub (bad) adc mov addl test dec adc in inc and jge pop dec pushf aas cmp cmp jo test mov hlt xchg or add loope mov test in add add ja pop out push mov mov fild dec sbb cmp and jge sbb shlb fldcw xor mov xchg cmp push mov lock inc sbb inc jg or inc and out sbb sub inc mov les dec ljmp dec dec lods pop out (bad) mov in fcmovb and xchg call aaa xor or (bad) jne mov jo pop or test jbe pop xor lret dec mov or clc lods sub movsb add in push or loop cld sarb (bad) or mov pop jno or add pop cmp adc add or xor mov pop inc adc cmpsl or sub sahf mov lahf ja push std mov clc jae lcall sbb jl or loope in push adc adc push loop and adc fcomp jno fs cmp inc repnz push les add das sub or adc mov push inc mov lcall popa rorl mov jg push sbb or nop jns or mov sub xorl fstpt nop push test adc testl adcb mov ja mov or cmp (bad) imulb call leave orl mov ss jns or fmuls ror dec addr16 xchg mov dec lds and adc lcall jnp sbb cmp movsb add popa subl nop jb add ja mov mov adc add les ljmp push and out andb std aas stos dec out cwtl push add data16 inc loope lods sbbb arpl ss adc inc sub xor jns pop inc and push pusha fisub jbe lock popf ret sbb cltd add mov (bad) testl adc (bad) pusha cmp add movsb pusha sub and add outsl (bad) dec cmp loope icebp test mov inc inc add adc dec scas aam rclb enter xor sub dec dec push mov adc push lds clc clc add or or cmp inc fs outsl jbe or sbb lea sub jecxz jle sbb test cli add pop (bad) pop leave pop and loope fcoms mov pushf add hlt stos push pop jge test xor xchg setl xor pop (bad) scas (bad) mov push adc push pop stos sub dec jle or mov adc xchg enter sarb add xchg test inc or aam (bad) xor call sub mov mov sti push mov sbb insb add jmp push mov adc add pop mov pusha add inc mov fisttpl push jnp mov sahf div popa xchg loopne fidivl pop sub shlb das jno sub pop add push xor mov in and or mov cld mov xchg pop sbb movsb mov add mov inc inc lds and dec cs rcrl add orb pop push adc aas mov xchg add icebp mov or aaa jge rcll movsb aaa aam nopl xor stos lods repnz fiadd in movsl aam in xor mov dec xor cmp cs gs pop dec cmp cmp stos push lret gs and dec jns sbbl mov or rol fdivrs fcoml sub add outsb jp ret xor subb shr push cmp push jge or js jmp pop and mov xchg and dec pusha xchg jp (bad) sarl push bound mov das dec mov mov fstps add ret sarb push mov lock test add shlb icebp xor sarb cld dec xchg push enter add xchg sub cmp stos sub fistpll ret push xor sub mov inc jle mov call push dec inc jge pop jp stos and gs sub cmp mov add xor pop sahf xchg sub xchg xchg sub xor cmp sub shrb ss mov popf adc mov xchg xchg add stos mov test xor clc xor enter add aaa mov adc sbb or pusha ss insb (bad) sbb or mov pop mov imul and dec cltd mov sti pop adc xchg and cmp mov lock adc dec mov xor enter mov add inc lret jo (bad) add and cmp mov jecxz or mov mov and inc insb xor push xchg mov xchg shlb ljmp push lret mov int3 mov fadds lcall lods xor dec (bad) and xor cmp or mov adc and cli movb adc mov js aad nop xchg enter dec test aam sbb inc dec enter fimull xchg inc add push mov aas stc pop cmp shlb pop mov mov leave push cli sbbb pop mov movsb enter rcl pop lret loope loopne jle jno inc ss jmp adc int fcmovb push pushf addr16 xchg or leave fsub adc inc add in jmp mov dec push repz add insl repz movsb je add jl hlt push sarb add scas icebp cmp and pop xor mov popa or inc les or pop add mov in pusha fnstcw jno fistp jmp add nop adc cmc jl sbb pushf sti cltd and out xor subl lea imul jl mov xlat mov cmp sub aas jae hlt arpl jle add add add jge out ret rcrl nop cld gs sub adc mov mov add in xchg mov ss insb mov jnp cld fnstcw out cltd mov ja or push mov clc pop add xor mov mov test scas and inc mov into out leave insb jle cmp dec xor mov inc cmpsb cmp das jb mov or inc mov in dec or cs lret lds or and jo sub ljmp xor add inc xor pusha lods or fs adc push push or in fsubrp or test ljmp repnz push mov in cmovb cmp rcrb arpl pop inc les adc mov clc nop aam sub (bad) jne xor jbe movsb inc orb or cltd test imul or xlat inc movsl nop fcoms hlt push movsb ss sub (bad) mov mov mov xor mov ljmp gs clc sbb lret mov sbb test jle adc inc and add push mov lods mov test and cs add xor jns nop cwtl jmp pop mov pop push adc mov dec ss scas push lret jno add rcrb adc imul xchg push lcall mov enter inc nop and les adc rclb cld and mov jge fnstenv mov cmp ret push data16 or ss (bad) inc and lcall cmp mov adc adc sbb or push out shrb and lock jae push inc mov pusha mov cld imul (bad) in pop loope sahf lea mov icebp insl cmp (bad) jnp add mov dec pop add push inc xor jmp mov adc push (bad) lock mov and adc ds les add leave call andb jo jp push aam jmp aaa sbb in sti inc les adc imulb pusha test fsubr fist xchg jg (bad) lock jp aam div push popa shrl mov in and jl das push mov xor movsb inc addl scas in mov jecxz enter jb,pt xor (bad) mov (bad) and enter mov mov cmp test mov aaa pop mov push mov or xchg push xchg shlb cmp lret and pushf mov jne dec (bad) mov test add adc pusha cwtl out popf push ret xor mov popa out nop push cmp pop inc cmp add out dec cwtl movb sbbl int add cmp jge inc rclb rorb push pop and icebp gs fs shlb test or add stc and lock mov or adc xor jnp mov xor mov nop insb clc adc mov inc pop mov mov and pop sub add pusha adc insb xchg cmp mov (bad) loopne or or or out and sub mov inc popa mov and fs or mov jp roll loopne or les mov or xchg or repz inc mov xchg call adc mov call push pushf test xlat vpaddq mov mov ds popl add test iret aas stc clc and jb xchg ret pushf shrb or in aas outsl in das (bad) add lds mov lahf sarl push or pop rolb les pop mov pop push xchg mov mov (bad) cmp add xor or sbb cmp jnp inc daa jae jle pause fadds inc or nop sbb or xchg or or cs repnz popa mov mov add sbb and repnz or leave lret or pop push cmpsl fisttpl mov out push je movsb add pusha test sbb aam out push sbb or (bad) lock mov hlt popf push out movsl sub xchg sbb sub imul aaa mov sub cld and and and (bad) pushf icebp jp clc insl das lds mov push xchg inc mov sub pop enter cmp cmp cld loopne lds pop (bad) shrb mov mov ss mov adc dec sub mov fcoml test and icebp and and adcb enter xchg xor imul stos call adc xor insl lds push mov and jmp add stos mov ret fadds mov mov and pop xor mov mov cwtl mov clc jle or int3 mov sub jmp adc outsb xor fs mov adc cmp cs gs or and inc jbe fsubl ds adc mov pushf xor lods adc je mov pushf cli sahf mov adc adc xorl pop mov sbb jle ds stc aam dec in out test loopne cli inc imulb jo das mov (bad) (bad) pop cmp mov sahf sbb leave mov push mov fild xchg sbb fwait xor test repnz scas adc and mov shrl push popa aaa and sbb icebp scas add ds adc mov or pop jae sub adc pop inc sbb mull cltd mov (bad) dec (bad) call xchg push and and and movsb sbb push or jecxz dec clc adc cmp fld1 and outsl adcl cmp adc push dec or inc dec mov mov fnstsw mov push inc xor pushf sbb push in sbb hlt sbb test push xstore-rng cmpsl test nop pusha out popf pop sub xor jbe mov dec in add (bad) rorl (bad) jle jb add cmpsl rcll and dec xlat mov add jb rcl add push mov loop nop aam mov fsubrl add mov xchg pusha cmpl and or in dec hlt add mov push orl aad cltd mov xor mov (bad) or pop adc pop sbb adc adc jl cmp sti addl push xchg in and sub sub js pop imul or mov lods pusha xchg xchg inc sbb sti sahf xchg jp stc adc and testl sub xor test lcall loope mov test xchg icebp add mov (bad) sub jp xchg lahf and leave inc dec pop xchg mov jbe dec sbb add xchg rol or xchg jmp pop lahf cwtl pop mov mov and cmpsb mov sub sub pop inc in xchg sarb sub sbb mov mov or dec outsb fisub cmp mov cmp sbb add (bad) mov add add (bad) mov lcall adcb xor jne pop les rolb arpl inc xor and inc push inc popf push sbb das loopne not and rolb divb add cwtl call push and in cmpsl jb bts lcall adc (bad) inc adc xor mov inc cld fdivs push jle in xorb test sub lcall int pusha cmp (bad) fbld mov sbb mov dec outsb lock sti cmp and mov rcll movsb test mov fcoms mov inc inc mov xchg (bad) sub scas push or mov pop cmpsl or add fadds cmp inc imul clc push sub inc divb jl rclb data16 leave or add mov imul popa and insb fisub sub pop test or in scas adc or mov pusha hlt push sub lahf (bad) fmull test (bad) mov adc hlt je xorb jmp push inc pop and mov mov loopne cld mov sbb mov xor mov add add incl adc cltd and mov clc bound outsb sub cmc sti dec in rcrb push push and and roll (bad) push shrl jecxz scas orl ja sub mov cmc shrb add push push pop mov lock outsl test cmp enter inc or or mov and mov cmc popw mov test cmpb insb xchg mov pop es or or xchg push out stos inc (bad) xor call and jbe lret sub jbe les add fisub pusha sub adc icebp pusha push pop lods or pusha mov shr adc pushf sbb loop mov xchg or mov stc das (bad) lods aaa xchg mov adc clc pusha xchg mov out negb add leave loopne add nop mov hlt push lock push push mov mov scas xchg mov das movsl add jl (bad) mov sub sbb push lcall sub hlt les movsb add dec leave push xlat hlt adc cmp push xor das dec mov enter fdivr clc cmc or and popl bound pushf ss lea mov test fadds outsb call push add inc mov or inc mov call stc ja dec mov nop (bad) in test jbe sbb aam sub sbb add adc add (bad) dec aam sub iret pop sub xor and pushl mov adc cmpsl dec mov mov mov xchg cmp pop xchg (bad) loope rcll cmpsb jmp mov dec call cmp shlb xchg popa enter loope out rcll test adc fs pop pop inc lods lcall cwtl push lds cld shlb and mov and and push xor push or les pop mov mov push nop adc mull arpl cwtl jo mov je jne int3 subb add inc int3 je mov adc cltd jmp xchg ja mov cmp add mov dec ja cmp hlt inc and mov jbe fistl pushf inc sub xchg sbb inc adc (bad) orb fdiv gs loop ljmp lcall sub loop xchg insb push pop pop lods insl lea mov sbb xlat mov xor js sarl movsb pop and mov sub inc testb inc cmp mov cwtl adc loopne and inc and in jl inc enter add call mov popa rorb lret xchg xor or jg push or (bad) in vpmacswd mov xchg shlb mov xor les cmp arpl or fiadd fdivl jo inc xchg and mov sbb xor fdivs fs fcoml pusha (bad) and cmc (bad) sbb in and jne mov xchg pop sub (bad) inc and cmp test int3 and push mov popf rcrb xor out aam push pusha and loope adc outsl xchg mov xchg cmp cltd push add lods mov arpl inc and dec sbb xchg pop sbb inc push adc fstp inc or and add ret mov and cmc cltd mov fidivrl fptan call add sbb fbld (bad) and dec dec xor jb jbe fadds lods or loopne and push (bad) fistl (bad) aam sub test repz pop pushf stc mov jge adc add mov jbe push mov imul xchg or js jl pop sbb mov dec movsb sub sarl pop pop loopne pushf and test jmp pop dec test shll xchg push xor es sbb xchg (bad) sub ret push (bad) cmp push aas inc add jl inc pop leave enter add mov enter mov mov scas icebp mov mov jb mov shl loopne push push fidivrl push mov repnz je inc push sti xchg fs js fwait bound dec stc loopne and pop pop add inc mov (bad) sub popa mov and add mov mov mov push jbe fdivrs cmp xor inc out rep cmp or sub and hlt and add sbb sbb insb xchg jns cmpb push leave mov sbb push cmp lds xchg adc mov bound mov test sbb sub mov jb popa sub in int3 pop cmp or jmp pop push mov cltd leave pop jb outsl idivl leave sbb add clc paddq insl xchg adc inc out cmpsl adc sbb loopne mov xlat jno xchg pop les notl sbb clc mov add movb clc js test add push lock xchg test push or mov les dec movsb imul loopne jl inc sub cwtl sub adc xchg adc and lahf pop or cmp or xrelease xchg push push leave mov inc je jle lcall stos cs call pop dec (bad) jecxz sbb mov test fnstenv pop jae sbb mov xchg or inc mov add xorb mov in xor pop dec fildl mov (bad) dec xchg adc sub dec cmc xchg xchg cs inc je adcl lea add xchg lahf daa scas lods sub pop (bad) xor ds cmpsl sbb mov push in push pop push lock jne pop popa pushf out sub sahf lds and and lock sub call jecxz in or and dec and out nop lret cwtl xor sti push mov rcll cmp rclb imul sbb out mov add lods lcall imul add mov and insb inc xor mov and fldenv sub mov dec pop fmuls or divl mov sub sbb or dec mov push ja (bad) repz mov in jno pushf lahf cmp popa aam add push sbb mov push or sub dec mov cmp xor mov test xor adc adc adc mov sbb das jne (bad) xor inc xor (bad) dec mov jo test or add sub cmp dec xchg enter xchg push inc lahf xor and add add add jbe mov and dec addb add xchg loopne std sbbl and add jbe dec xor xor test and fs ljmp (bad) movsb nop adc sub cld mov imul sti sahf add movl enter jns test mov les inc mov cmpsb mov and imul or inc das and test int3 adc fcmove mov and dec lock sbb (bad) jnp leave test mov dec push adc and pop daa and leave or sbb sub sub pop push fsubl sbb dec xor pop mov mov mov and movsb (bad) ficompl xchg xor sub jbe xor or loopne adc dec or pop dec dec push push (bad) mov dec rorb push or cmc fwait and sub (bad) jns mov push mov mov jne mov mov dec adc sub fbld aam jnp mov and adc push mov xchg pop or xor mov pop into mov mov xchg je (bad) enter (bad) nop dec add and mov out dec hlt loope sbb int3 testl dec sbb dec mov pop rcr int3 adc and sub and negl mov push fsubrl fs jp jno jl mov cwtl hlt outsb lock hlt cmp jbe mov cmp (bad) lods ds jbe push les je mov pop and rcll pushf and jnp sbb push adc add insb mov nop cwtl push ja dec cmp or mov js add je lcall pusha mov dec jnp xchg push cmp fdivrl out pusha fsts test sbb stc dec add (bad) or or in jl sbb (bad) fiaddl (bad) pop inc js pop aaa enter add or push pop add je ret stc addb loopne imul (bad) push addb add xchg ja cltd stc dec sub test or (bad) jl lcall fsts aas inc pop ror stc xchg ss inc sub adcl jns sbb sbb or je adc push pusha push loopne clc rcll jo mov xchg aam mov mov subb loopne jge test adc jns imul insl inc clc sbb aam adc repz movsb add push test push nop inc and notl and jbe mov push or jo ljmp dec and dec rcrl and push jl rol and movsb push lods dec inc roll rolb jg xchg xchg popa mov cmpsl sub inc loopne cs clc pop jl sub sar setno adc (bad) fadds inc (bad) lock sbb dec mov popa adc or or mov or dec rolb mov sbb test adcl rclb pop lds stc test mov scas cmp test (bad) popf sbb pop mov cltd add cmpsb jge push pop sub jo pand ja cmpsl lcall (bad) push sti fcoms mov cmp vmread imul sbb sub (bad) or shlb xchg dec mov sbb xchg idivl xor mov add pop jo dec or sbb dec pusha cld cmp xchg mov inc fdivr or adc maskmovq mull into push xchg mov adc pushf mov inc sub rclb or mov or (bad) leave cld add fs mov sbb xchg adc inc movsl sub adc (bad) enter and add shl cmp mov les arpl pop fidiv test stos mov insb jns lcall loopne or add xor cli inc sub std sub sbb lods or in sub test jno lock fcoms sbb jle add shrb je sbb movsb mov mov ret xor xchg and das dec std sub jmp cmp dec jle xchg push xor sbb add dec jns sub hlt xchg sarb call stc or les jb,pt and and call flds and icebp adc add or inc pushf dec int3 (bad) jns stos lret loopne enter pop inc stos xchg inc test inc pop push or sub psubusb and xchg lds and clc je enter gs mov and leave jo test arpl fcompl out push xchg in push clc xlat cmp jae jo in mov mov adc fstps sub jae pmulhuw stos (bad) fist inc add clc negl lock and jo sub jp je cmp and (bad) xor mov add sbb pop xor inc inc in repnz adc adc adc or inc xbegin cmc aas xchg sbb dec xor adc mov insl and push clc (bad) (bad) mov adc inc or out nop je mov call (bad) pop sub jp pop mov adc mov test sti fmul loopne mov push les rcrb les push jo rcr in xchg push mov sti mov in cmp inc sub pop dec add cmp push sub inc inc xor mov cmc (bad) mov mov (bad) fdivr push xchg shlb bound mov xchg loop jns push xchg addb lds mov fisubr xor dec ret aam xor inc xor xor fadds daa (bad) and nop sbbb push test aam cmp cmpsl add in inc push sbbl mov out and test pop cld sbb add faddl pop test inc sar add adcl jnp fsubl arpl push inc pusha in add jecxz mov je and push cld lret test and mov and pop add neg inc cld cwtl pushf inc cmp mov adc je fdivrl and insl adc ficom add rol cmpsl flds xchg dec imul rolb or aad fdivrl jge cmpsl add push sbb (bad) dec xchg lock push dec ret sub les sahf mov jae imul dec data16 dec jnp (bad) jb pop push jo ret push sarb push enter push (bad) cltd loopne pop repz call test adc dec loop and or push fistp mov stos adc pop fs and cmc std inc fcomip mov loop fsts les enter and lods clc and nop mov dec in pop adc hlt (bad) mov rolb push push lock sbb push xchg pop add xchg jae mov nop jmp roll (bad) jp mov and sub enter xor pusha adc cmp inc rcll fs (bad) xor pop jl dec (bad) ficoml push mov push mov pop and or fstl cmp sub movsb pusha flds pop movsl imul call mov add pop pop (bad) push cmp es std mov icebp adc inc cld pop fildl aam pop add (bad) dec xor and adc es sbb inc xchg or jo push in cmp scas mov cmp loopne ds dec adc nop sahf add mov mov adc loopne or mov outsl sub (bad) cmp (bad) pop push xchg dec jp or xor inc cmp mov dec stc movsl andb xor negl adc pop mov pop adc sbb pop leave arpl jge sbb jmp call sbb adc jno mov xchg add lods xchg mov ret inc inc mov outsl inc mov and psubusb jnp test pop inc outsb aas pop movsb lods mov add sbb sbbb cmp leave pushf mov adc popl shrl or mov push dec lahf adc cmp cmp and add cmp test mov (bad) cmp jbe int and xor adc adc inc popa mov icebp lods out pop sbb int push movsl add mov inc xor (bad) mov jecxz mov add add inc mov les pop and arpl add (bad) nop es and add stos (bad) idivb push xchg inc add mov add add ds jp push insl ds cmp pop and cmpl jbe sbb mulb inc inc dec shrl lret pop sub sub and cmp nop cs xchg or push ds xchg ror dec inc push pop cli inc or pop or or loop push sbb jge js add repz and test or lcall and xor adc sbb add sub adcb xor test inc pop pop inc sbb hlt add mov outsb mov test in pop inc dec mov pop jmp add lcall adc into fidiv aas fs cmp adc mov and or xchg sub ljmp pop mov fdiv and and and lea inc inc mov xchg dec loop xchg add mov mov lods add ds fisub loopne mov push fs push inc cmc aas dec jmp jb pop in cmp rclb cmpsl lcall add sarl inc mov aas enter mov (bad) incb fild iret loope push sub fsub test sub xchg rorl add mov pslld cltd dec popf icebp jbe decb lret or or inc pop pop push mov iret jg xor pop flds jp sti pop and arpl popa or test pop xor xchg cli pslld push int pslld cmpsl cld jg (bad) testl repnz push or aam jg iret lock mov mov jns pop in iret inc add ds enter outsb and incb (bad) lcall js addr16 idiv inc mov xchg mov pslld pop lods jg ret lock push decl repnz insb data16 test sbb jnp lea jle add in inc lahf cld dec movsl aas (bad) ret mov in cmp adc cmpsb (bad) and mov rcr stc fisttp add xchg (bad) pop nop jle repz cld push xchg pop in cmp adc (bad) jmp addr16 sub pop in sub add cld outsb mov sub and sar inc jae push mov std cld ja dec loopne mov mov add leave and push mov mov mov mov lret sub pop arpl xlat loop ds cmp add into cld xchg jp xchg aad aas and xchg and ljmp xchg lret cwtl add (bad) push aad and (bad) push xchg xlat shl stos ljmp dec das xor imul loope mov cmpsl pop fpatan or dec mov jl idivl push cli mov lock cmp pop add jne int3 popf adc sbb pop leave push pop jne push mov mov dec sti gs sub pop mov rolb adc stos inc xchg nop bound sbb adc mov and push pusha or inc les lahf stos sbb ret jnp sub or hlt push dec adc test and leave test loopne inc testb add mov rolb addl call adc ds stos movl daa test cmp pop inc js mov xor cmpsl dec imul jge pop adc insb adc test add nop lods and push inc xor mov sbb inc scas sub rclb cmp jne test or mov inc pop rclb push pusha outsb rorl xlat test xchg aam push (bad) mov jecxz test aad dec fisubl daa (bad) adc test mov test test (bad) flds jae and cwtl cld xchg faddl fiadd and push adc fiaddl push dec xor pusha fstl jns nop imull (bad) mov xor inc push adc and nop push loopne push fsub sub adc and adc loop sub insb and jecxz test inc in or sbb inc in adc push inc sub sbb in std push pusha repz and out pop xor iret sbb and or mov scas xorb testl xor cmp cmpl addr16 mov add fsubrl adc dec and adc or call jmp (bad) js addr16 adc mov sbb pusha call ljmp add xchg test jb mov les inc nop punpcklwd faddp popa call rcll mov or (bad) test dec or pop xor mov sbb mov push add pop or dec add push call fldl2e push cltd inc les loope mov xchg (bad) pushf ss push and fwait loope push ja,pt gs jo push enter sbb dec ficoml inc add test sub rcll fnop sub in pop sbb or add cmp xchg jge lret test lret dec test xor js or dec jmp or dec loope lea xchg push or jmp out add push (bad) aad test out push out (bad) jnp pop pop inc inc push inc push push push push mov xchg fs add pop inc (bad) rep popa push mov add mov mov sbb ret add (bad) lahf xchg push or and add mov cmpl or (bad) sub je push gs sub stos loope mov pop and pop pop movsl push (bad) and mov ss sbb jecxz (bad) dec and and cmp mov push pop adc aad rcrb pop sbb or push mov pop addl dec add jmp stos mov aad pop push jmp lret lcall mov jns divl jmp cli sub loope or aad fwait out fs sub xor pop out xchg mov add ficomp xor imul pop mov push jo mov shrb enter inc push jb lods std icebp pop mov pusha jae mov add sub add jb out cmpsl cld push adc test lret daa mov aam sub cmp and rcrb aas pop negl push jmp jbe add out in dec lahf jle jmp dec imul scas (bad) int3 imulb xchg mov stos xor mov jb xlat cmp aaa pop xor push stos mov cmp jnp ljmp ffree push xor mov mov add or mov jg ljmp add adc (bad) out mov pop dec inc loop add stos pushf add mov jle pop and addb mov ds pop xor into sub or xor fnstenv pop nop stos add xor mov pop je sbb jmp xor dec jg pop xor dec sub imull cmp ret or mov and movl dec orl add fstps roll xchg jge cs push xchg aad out adc pop gs pop pop pop out inc mov jb pop stos (bad) stc lea stos out pop ljmp jmp out cmp (bad) cli (bad) inc std movsl ret mov mov inc cmp (bad) ja mov push adc jo and jge dec adc cmp jmp mov dec inc lahf sub cmp fimul (bad) rorb add test jnp push cmp adc xchg inc (bad) pop sub in pop sub cmc inc sbb mov loope fimull push sbb lcall mov xor jno addb pop sub mov jbe (bad) ja aad push push push mov inc (bad) pop push add test lods mov mov push icebp pop pop sbb in push fnstcw addl jg xor bound pusha test outsb or jmp popa push pop imulb mov and ljmp mov inc es jmp loope clc nop fbld push ss int3 or iret jg xchg push out or negl shll dec sub jle ja and in or dec and mov hlt rol inc rcll and mov pop cmp nop cmp loopne sbb sbb cmp jno mov frstor imul add pop rorb xchg jge test neg xor fmull stos pop imul scas jmp xchg xchg pop ds mov es iret subl cmp mov dec addr16 jmp insl and mov pop sbb cmp test ss push push jmp add cltd jno frstor outsl dec lods pop adcb pop jg call jmp jmp push fistpl pop cmp arpl add pusha push pop mov mov cmp pop rorl (bad) push (bad) push adc jo dec lock or pop push jne jbe inc push dec push or xchg xor mov sbb aaa add add out stos mov inc sbb (bad) jbe cs mov cli xor cmpsb movsl xchg pop mov ljmp out xlat sub push push xor push jmp pop es xor ja rolb dec jecxz and push lds pop xor pop int outsb test sbb std dec or int3 mov jmp fistl mov mov arpl push push pop xchg pop adc loope lods inc mov sub and inc or lea push add testl inc pop pop jmp mov pushf mov pop int3 add adc jg pop stos mov shr lret insl rolb out dec jns add jg dec or popf mov mov sbb jbe jbe sub lret dec (bad) repz jo jnp or push dec xchg jne test xchg and scas and mov adc xchg xlat adc std pop fstl jns subb mov jp push loop push arpl pop dec mov or jmp adc add push xchg push pusha mov mov dec shrb push inc mov pushf mov pop sub pushf movb rclb mov lods movsb pop stos dec cmp mov push push test pop roll in jg push mov and cmp pop out push mov cmp sahf or repnz sub pop cwtl push ret or das lea adc mov iret in add repnz ja shrl add fimul clc insb sti cwtl cld pop int inc or mov call xchg adc push les or dec mull movsb jbe xchg idivl clc mov negl (bad) fildl repnz inc into rclb aaa mov lock mov jg sub pop dec dec push mov inc and mov cmp push into push xchg mov sahf sub lret cli cltd xor out xchg xchg sub out sbb xchg (bad) notl or push mov jb inc test add cwtl xchg (bad) or fcmovb jmp push push xor jge xor pop bound pop push in outsl test mov sub cmc cs cmpsb xor xor outsl ljmp sahf fsubrs push adc xor paddq or pop cmp in incb movsb cmp rclb cmp lds out repnz xorl ja hlt out pop pop mov faddl dec (bad) (bad) (bad) imul dec inc mov outsb sbb leave mov adc sub add or (bad) leave adc inc add mov rcrb mov xor xorl pop cmc add or jb (bad) movsb xor in push inc xchg pusha cli push add into xchg ret (bad) sub fidiv inc inc cwtl in icebp test pop cmp or clc add int mov mov shll cli mov popa and or test xchg fmull add or cwtl das movsl mov loopne loope add push dec add xchg xorb lods arpl or cwtl dec pusha mov pushf mov push aad inc movb adc mov push (bad) lret lret or adc (bad) nop dec shlb aaa rorl leave (bad) cs cs xor cltd aas add popa adc (bad) cli mov leave xchg jge sarb lds push pop add mov lods push cmp xchg lock push push cmp add dec mov inc jl fiadd in enter arpl mov sbb xor pop into out mov (bad) popa or pop out cwtl fcompl (bad) pop fstp or ljmp and (bad) lods cmp andb js xchg sub fbstp dec lret inc xor sbb cld call bound sub pushf imul iret adc sbb add and nop pop insb or hlt mov and scas insl sub sahf add bound pop outsb or push clc mov pop and das jmp mov jmp jnp fs add xor add jns mov sahf mov repz cwtl mov dec ror js pusha xor insl adc jmp (bad) sub or jle inc pop xor mov dec lods mov sub ss popa out repz add in mov sub add mov incb sbb jnp inc mov push add add rolb xchg lcall add loopne jp jb or sbb xchg addl mov add mov imul cmp rcrb movsb or mov dec call enter or iret inc jecxz jno fsubs mov pop push pop int3 adc add push mov das shlb enter xor add mov int or push shlb mov ljmp xor icebp cmp push mov sbb adc add orl pop pop rcl repz and cltd scas push xor inc dec or xchg ret scas adc pop inc and imul pop mov xchg clc cmpsl dec add pop lods (bad) lret sub sbb pusha pop out or in add jbe pop xchg loopne xchg rclb mov xchg jmp ret lret fsub sub jmp addb push out jb or xor pop pop and xchg js add std mov xchg outsl ds push inc fsubl adc xor sbb js mov inc cmp notb and or xor cmpl ds stos mov push push pusha mov lock cltd xchg pop mov xor fisub pop mov ljmp inc fbld or xchg (bad) repz or add add xchg imul sub and fs jg dec inc jmp push jns inc xchg adc push add in push push adc fs dec and insl cmpsb loopne lret push add or and xor lret add in aas add push movsl into (bad) mov xor push roll inc and jg adc mov cmpb push add fiadd inc push rclb xor jg cmp sbb data16 mov andb and (bad) leave jle int3 or (bad) negb and iret pop mov adc xchg lods nop xchg push int3 outsl shlb enter pop jl lea or inc rcll sbb add mov cmp shr in cmp mov div out push icebp orl pop add mov or sbb imul add mov mov imul addl and jbe add cmp sub sbb xlat or (bad) mov cmp or arpl cmp push cld xor sub and add (bad) xor push or xchg and cmpsl arpl cld add or ret mov add add xchg cmp cmc out add push jno fs (bad) fadds aaa lcall xor leave jns dec xchg fs js xor clc sbb push rclb neg add test pusha add (bad) mov shr inc add or pushf cli mov lds xchg ret cmp sub mov inc push or repz into or mov mov test jmp lods arpl mov pop mov mov add cltd push orl and shr popa cmp add out in xchg sub aad add sti push aas jecxz sbb icebp sbb insb and stos cmp pusha stc and fnop xchg (bad) hlt cmpsb or push dec mov cmpl sbb mov or ret scas push iret add ss adc pop mov mov push test inc test jbe imul lea lcall mov bound or inc cwtl xor das psrld dec pop and (bad) pop aam in push pusha lods popa cmpsl sub mov mov icebp cmp jb xor in sub dec mov inc cmp sarb dec add sbb push (bad) and inc add pop push push movsl dec cmp pop add and cld or xchg loope sbb mulb add push nop rolb pop push cmp lea inc push incb (bad) outsl and xchg push icebp jp adc cltd rclb xor dec stos mov inc jbe mov adc ljmp add xchg lods or (bad) and mov add pop and add pushf adc mov xchg fdivl lock cmc mov and les mov mov push push xor andb add xchg sbb xchg call aaa push inc stc loopne lods pop inc fbld mov adc test pop sbb jp lds aaa mov dec sub popa and xor ja adc pop out xchg pop test mov add shrl jmp ljmp push pop or ror cmp cs xor (bad) andl in jne add jl,pn and jnp enter test mov dec jp jo push lds push cmpsl jle and mov test sub xor sbb xorl sub lcall (bad) pop cmp in and fnstenv popf push std shrb in push cmp scas (bad) into pop addr16 dec mov cmp jg xor mov mov ret sar lods pop das sbb push and std and push jp add rol mov or and out inc mov xlat bound sub enter test adc inc mov and jl movsb mov adc popa cmp push pop xor nop test sti xchg hlt mov pop sbb roll push adc stos inc icebp dec sub arpl mov inc mov mov adc sub mov mov sub mov test lret cmp add pop rolb xor in jge inc sub mov shlb mov stos cmpb ret adc in add inc fildll outsb adcl sbbb mov test popa pop xor fimul js push inc sti xorl jp mov fisubl inc pop fnsave xor in (bad) cmp and jno jo xor xchg xchg xor mov push pusha jae cli mov pop add rorl cmpsb xorl enter lds popf (bad) leave std (bad) or cwtl imul cmp cli cwtl fs sbb xor xor mov push ja mov mov test xchg and mov arpl or add push inc int3 xchg add inc pop jns dec addl adc rcll xchg or cwtl ss or js xchg stos aas das add cmc inc sbb sbb add orb adc fmul pop inc dec decb sub jns (bad) je sub jl popf inc add mov cmp andb add dec jl nop ret cmp pop mov fisub xchg decl push sub pop add push and sub jb leave xchg xor adc pop sub push or mov jp lcall test add stos call inc out sub xchg sub popf lcall push mov add sub push sar dec test bound inc (bad) mov or dec scas ds xor loope,pt sub jns mov pop add pop push push jae add cld inc mov ss lcall pop push outsl mov call mov xor out cmpsb xchg movsb sahf bswap mov jnp jmp sub (bad) mov jge add pushf mov mov adc push jnp mov mul xchg mov fdiv mov in cli dec mov and or fldl hlt es add inc cmp mov sub pop (bad) sbb push push push pop subl scas sbb dec repnz sbb rcr jbe mov jns lret jnp (bad) mov or lods push popa adc pop pusha mov add je scas pop fiadd cmp ret movsl jne negb inc xor jmp or mov xchg or jecxz push sbb cmp sbb or inc (bad) rcr repz cs or shl adc sub sbb add mov push adc sbb adc sbb push push inc loop sbb push insl insl shrl adc pop fistpll add mov xor xchg mov mov push cmp push andb sub inc cmp mov sub add (bad) in popa rolb aad push roll cmp std sbbb hlt push or test pop adc xchg test lahf sti sahf mov (bad) inc (bad) psraw xchg inc popa movsb mov lret adc sbb movsb test jge and dec add popa mulb sub pop xor add and lds cltd or les imul movsl push sbb mov (bad) cmp cld add push fs out (bad) mov arpl adc mov into test stos andl les push adc pop cmp dec popa hlt sbb sarl push inc xor jae jbe cmp sbb and add dec lret fdiv jp stos xor add inc adc cwtl mov inc and sub inc dec mov dec pop lds roll and loop ss sarb add fwait lret add movsl lret sbbl or nop sbb and mov test mov imul add mov push add pop pushl iret orl and or or adc or ljmp icebp inc jb sub pop dec cmp xor cs ret lock or mov adc adc cld jbe cmp add insl addr16 xchg xchg fidivr aam lods or fisttp dec adc add lea pusha call sbb inc movsb (bad) mov subb inc mov xor das jne iret pop push mov stos xor and add insl or push std push and push xchg mov sbb sbb cmp jae mov negb jmp cltd repnz add test (bad) or sahf imulb mov push mov and pushf iret adc jae stos sbb mov mov rolb push pop (bad) fsubs jbe jae sbb xor fbstp push movsb in xchg push add push pusha push push imul add insb outsl or cmp rcll stos divl (bad) mov (bad) push and xchg pop dec adc mov cmp mov cmp and aas jae cmp xor ss nop fnstsw jbe mov push adc std and inc insl xor pop in fidivr (bad) (bad) jno adc andb cltd int3 xchg push sbb mov pop xchg or test lret push dec inc cmp mov mov add dec pusha adc push (bad) in or cltd xchg inc cmp jb adc inc xchg pusha jle dec mov cmp (bad) scas jecxz pusha or ljmp mov cmp inc add lea insb insl xlat or pop pop sub jecxz ret movsb out mov xor sbb mov or cli mov add lret push addb fstpt fcoml add nop xor pop (bad) in (bad) jle xor or inc pop mov add (bad) dec xor inc pop adc xchg nop lea add mov sarl push push lock fs subl xor in inc popa sub stc (bad) sbb fildl in mov add dec ss jge jmp lea ret in rorl xchg sub add es or jne or (bad) jle add fmull add hlt xor sbb rol mov xor push inc add or mov iret fucomip push add pop xlat in pop add pop lea movsb pop add cmovp or sbb imul add sbb inc aad jp out sub nop add xchg sub imul dec pop fwait dec orb mov lock jo jge and into jne cli std cmp and (bad) mov cwtl cmp inc add (bad) pop and mov leave rcll lahf fcmovb es das or add inc arpl cs lahf or and cmp cwtl jb inc push out adcl sbbb dec test repnz adc test mov (bad) cmc or (bad) mov mov in or and repnz mov mov scas pop push movsb pop pop pop imul jo insl in daa movsb stos sub dec lret mov and mov in jb rorb push mov stos or (bad) nop movsb push pop sub jecxz sbb scas negl or in xor mov arpl mov sbb ja cmp adc rcll mov xchg adc jne xchg add loope jbe adc testl push sbb rclb and movsl xor adcl bound pusha push out das xor lds rdtsc or xor xchg repnz clc lea mov pop enter or push mov xor cmp arpl jl pop jmp test jmp pushf (bad) repnz mov call cmp stos mov and or or hlt adc rorl icebp add mov add jp fdiv sbb dec push je jmp test (bad) mov mov or fldcw adc outsb pop test add adc mov popa pop pop mov (bad) push fstpl repnz outsl mov pop add pop std jns xchg mov pop cmc dec (bad) dec cmp push fucom inc adcl dec shr mov outsl gs pop add jle ja pop jg or adc sbb sbb dec mov fldenv rcrb jmp fisubrl faddl xor xor in cmp imul pop popf cmc sahf adc mov stos mulb or mov adc adc rcrl js jmp add shlb sbbl loope nop mov addl scas push mov pop cmp popa push pop sub and mov and out call outsl cmpsl push jp pop and mov push xchg adc push cmpsl xchg inc inc and rorl scas jle pushf pop hlt cmpl xor dec mov jnp xchg in jnp mov idiv and cmp add or lret jnp inc mov xchg stc aad ljmp add jecxz add ljmp push mov (bad) push fwait sub loopne push inc mov xor sub sub decb (bad) or sti dec xor mov jns mov mov mov movsl sbb dec jmp rclb (bad) add imul dec outsb dec lret aas push sub lret pop or repnz xor into pop dec cmpl addr16 aaa push mov mov test arpl inc addr16 in mov cli inc jle repnz fimul jno cmp es pusha clc jmp jo insb cmpsb ss jp loop push mov mov adc jp pop leave cld pop pop dec add mov mov (bad) dec sahf mov push fild imul pushl jno inc pop sbb push xchg rorl sti fs shrl dec or insb pop push xlat flds inc pop push push pop mov sub popf std adc pop cmpsb cmp (bad) dec testb shlb daa negl dec xor stc dec (bad) iret jmp jecxz pop adc loopne and inc xchg les outsb loopne repz pop test sbb add adc adcl push pop orb jns xor out in adc fldenv jns ja lds push adc xor bsr out pop test cmpsl add jo xor or push gs jmp (bad) dec cli sahf jg or lret popf ja out push pop fwait inc sbb mov pop jl fisubr iret pop (bad) xlat xchg jle ret addr16 xor addl cmp jnp add add xchg test and sub pop mov jmp sub jnp or sbb xchg xchg and repz adc cmc loopne mov pop push add inc and pop pusha pushf jnp xchg fwait cmpsl pop ret and mov ja shlb and or jmp mov pop inc fimul mov pusha pop sub femms xor inc pop mov push lahf jge aas inc xchg xchg popf out das push push negl adc mov pop (bad) int3 and push lcall cli jne jnp push insl dec push jb dec leave aam sub or and pop and pop adc xchg sbb mov and aas xchg push (bad) nop sub xchg andb and cmpsb xchg xchg pop mov push xor cld in in test test cmp push jg sbb clc sti dec aas xchg push cmp push dec mov in adc mov xor xchg gs loope sbb adc pusha or std outsl (bad) pop inc jbe pusha inc out adc add push jle fwait pop mov mov test lods add mov int imul dec movsl (bad) sbbb lds push leave gs adcl adc pop cmp mov mov in add (bad) out dec push xor push popf in add lahf mov xchg push jmp lods rcrl xchg loope inc sub sbb pop xchg leave stos and rcr enter sub (bad) dec pop or jbe (bad) fistp sbb jp mov mov sti xor xor sbb cmpsb cld mov mov lods or add pushf (bad) push nopl insl es add imul sub jbe and pop push es jno pop mov pop js xor jg inc sbb inc pusha sti fisttp hlt push movsl and cmp sti and (bad) mov arpl lea dec jno (bad) add mov sbb sti jg adc mov xchg (bad) faddl cmpsl mov xchg cmp xor aad ljmp aas sarb add iret insl mov xchg add pop lds dec imul pop jae (bad) into mov push pusha sbb mov outsl movsl pop push cwtl sub adc pop jns shl add les inc and push lock incl daa je icebp mov sub inc (bad) jp mov or xor cli test movsb jne cmp imul xlat decl pop sub sub test loop,pt pop or inc es daa fstpl out pop rorl lds push xchg push xchg decl out mov and add mov xchg mov shrb mov insl pop mov xor xchg jb push dec js sub jg das leave or pop xor mov imul (bad) es xor int3 and (bad) lret add pop pushw xchg add xor aad jmp pop mov sub sub aad sti mov mov pop lcall aad cs lret xchg js pop jmp inc in xor mov mov or push push pop dec inc push add shl in sbb outsb or push xchg push add add ficompl insl cld adc stos jge ficoml in inc ds and dec pop xor in adc push sub adc push lds pop pop sbb lea or jmp or push and add jmp frstor stos dec fbstp hlt repz out cwtl mov push loop inc out jecxz sub push pop out loopne and adc lods movsl imul out fwait lcall sub js ss scas and lods mov jo sub mov xchg jns sub sub (bad) pop push jbe add outsl inc xor jmp inc add fisub mov pop pop adc movsb jmp nop mov inc push pusha mov orl emms sub jo sub mov or xor cwtl xor int or cmc adc aas ret mov push hlt int (bad) push mov dec lcall inc jg mov test loopne or loope lock outsl mov and mov (bad) pop lcall mov xor lock dec or (bad) mov test out inc pop sub out mov xchg jo dec push dec pop sbb ja and add in push push add leave xchg push dec sub adc push lds add and (bad) imul loope jp arpl or out push pop add add inc mov mov sbb lea xchg in add mov sub lret inc cmp xor sub je jle sbb push inc mov jg cs pop loopne mov pop aas mov jmp jge jg xchg orb cmp mov dec cli adc stos pop pop mov pop xor das and lahf push nop push mov adc pop ja pop push frstor jecxz push repz fsubrs callw jp fsubr stc add into pop add rorl adc aad scas xor jmp movsl add aas pop sub inc repnz and and arpl (bad) ljmp (bad) in mov leave sarb pop adc lret xchg sti xchg loopne sahf push or pop mov adc adc daa bound aas movsl cltd cmp push nop and dec (bad) pop sbb in ja xchg or push cld hlt mov dec add and or push (bad) jnp inc push mov jg out andl add sbb jge dec cmc mov cmpb sub (bad) sti test sbb dec decb (bad) test add fildl cmp int3 lock outsb and jmp sub mov cmpsl (bad) add pop dec and (bad) or push sti lds mov jp outsb push pop push inc movb cmp dec jg rclb sub push ja mov sub cmp inc jmp inc icebp cmp in imul js cmp int3 je pop jg xor push pop or aaa cwtl jb pop jg pop insb or fcomps fwait add stos std or push sub xchg popa xor mov idiv xchg mov arpl adc ds mov xchg pop mov push out sub jmp (bad) not dec and xchg (bad) insb lea pop xchg out mov out pop ret cmp pop lods jmp dec scas fisubr jne fcom (bad) lahf mulb out inc or mov pop jmp bound ret dec arpl push push add jge (bad) sbb jb mov je imul lock popa push std jnp and or xor push leave roll cmp ja pop repz mov (bad) sbb pop in pop add sbb iret jecxz fiaddl push in pop pop icebp (bad) cmp sub leave jmp xchg dec add mov test icebp jmp dec fxch std and push mov add stc mov add jmp test shl rcll int ja cmp or fsubr sahf test sbb stc pop neg add mov iret sbbl or pop push push add sti push imulb aam jmp xchg loopne (bad) ja pop dec jle or lcall mov test (bad) adc loope mov adc cmp jecxz aaa add mov adc or mov test dec dec scas push gs pop (bad) popf or in and jbe push and call push inc es dec out shrb add aad std jmp sub stos fcmovb inc jecxz mov add pop movsb jnp push dec (bad) repz jo (bad) mov (bad) ljmp cmp sti rcl call es bound inc popa jge loopne jae mov inc push inc (bad) aas movsb (bad) add stc loope pop loop shll sbb shr add std pop loopne jmp jnp leave notl pop scas inc jmp in leave add and jne popf pushf out outsb movsb add bound movsb (bad) cli (bad) push pop es cmp jp and adc aas mov stc jg adc fmuls xor push add xchg sbb pop call jl movb sti xor pusha rol jecxz add lret iret fbld push and cwtl rorl fisubl push jp cld inc add (bad) xchg jns jl (bad) or stc rcll pop int or mov add div pusha in lahf out jl ja pop stos mov inc rcll outsb out arpl (bad) jno inc jmp xchg cmpsb mov cmp add data16 in sbb push ficoml xor (bad) and pop es notb cvtps2pd out pop push cltd mov pop inc jl mov pop aaa fidiv out add push inc sbb mov mov cld inc movsl loop xchg mov pop dec push push and add cwtl (bad) ljmp test mov clc xchg and test fidivrl movl mov xor xchg mov pop jmp movsb xchg or mov (bad) adc pop adcb icebp add jmp loope or push push lds out xor sub add icebp (bad) pop cwtl adc push jmp pop stc scas jbe push adcl in inc in cmp mov int3 outsb lret sub jmp adc add ret dec sbb pop or mov cltd adc flds mov pop pop das pop insl xchg dec stos sbb inc mov cmpl jae cs jecxz add mov aas sbb push mov ret jmp pop shr rcll add pop sbb cltd or sub or das xor pop imul imul pop jl dec mov xchg add (bad) push push pop cmp lock es push jno xchg adc es jg or cmpb or mov dec jg jno lret mov fsub pop mov add imul xor clc jmp mov push push mov xchg cmp and dec loope add xchg cs pop pop adc dec test (bad) and push push push in mov stos popl cmp sub sub or test inc mov push scas fmull stos add mov pushf stc dec cmpsb inc adc pop lret dec dec mov outsb test insl outsl shrb and shrb movsl rorl pop fstps sub or pop pop das or push inc dec mov add stos lea push aaa jno cmp push std shrb adc xchg pop mov jnp test insb xchg push push (bad) inc mov out outsl out or lcall aam jg xor mov mov inc and mov cs sub insb xchg cmp push inc in out add push sbb jmp inc mov gs (bad) fistl mov lods mov int3 mov and inc adc nop push popa adc hlt sub dec or mov push jbe stos and and sbb cmp into test or add rcll icebp fldenv xchg daa push aam pop mov ja es sub or jge sbb lods jmp hlt iret lock mov xchg mov or (bad) ficom (bad) inc adc aam stos or repz xor push pop push jmp (bad) mov addl int xor jg jne add jb jp in and mov ret xchg jb gs add add mov icebp xchg cmc popf sbb sarb jecxz das add sar and data16 or aad jae test jno loop add sub pushf add out xchg lret cwtl adc push popa (bad) jecxz xchg inc enter xchg inc jae cmc add or (bad) add loop xchg lret push pushf pusha fwait xchg fdivl add movsb out or push xor cmp cs hlt pop add cmp mov mov addl push push dec push and xor bnd les orl inc pushf cwtl dec in lds rolb add lea or outsl lcall push clc psrlw push (bad) repnz rclb insb add jmp icebp test cld mov or xor test (bad) or sub or add jbe mov add mov gs int sbb stos xor xor mov or repz fldt dec add jo push push fs ret iret add pushf push nop dec out out sbb in or nop cmpsl sbb add xchg decl jne dec sti add push subl fisttpl fsubl cmpsb inc iret or cs fldcw pop int3 inc jno sbb dec pop das pop aam push sbb jae sti cs pusha insb inc sub lret jle cwtl lcall cmpsb es ja mov pusha push loope cmp pop jmp pop cmp xchg push inc add fild add sbb pop stos lock call je add movsb cmp inc mov dec add mov add jno add jp cltd inc cli lods call dec xor pop or mov aad dec dec incb pop sbb mov je fcomps push andb and stc dec sbb inc (bad) aas test pusha (bad) cmp scas push mov out gs sub movl inc (bad) adc fistpll in xor ds add gs mov add mov pop sbb je or and xor mov into jp popf call push adcl xchg pop leave add sub mov add or outsb xchg js adc add sub out ja inc xchg or push and daa mov and push add popl (bad) ja inc orb dec xchg push pop scas cli xor lcall faddl add lods pop (bad) pop cwtl mov add mov pushf movsb outsl mov add jl repnz aad in dec sub testb clc cmc jno mov hlt add fs jns add sahf stos add pop push pop sbb ss pop add pop test add pusha pop aam cmp sbb mov test add sbb outsl cltd adc jo jmp cmpsb and aas dec call sub cmp cmp (bad) (bad) push pop pusha cmpsl cmp jp stos idivb pusha add mov mov xchg or sub and cs cmpb add movsl add imul cmp roll cli fbstp imul adc or or sub add hlt ss orb scas insb ljmp mov sbb add mov nop sub cltd (bad) mov fnstsw jbe jg js insb popa xor dec push jmp add addr16 xor in and sub jle xor popa les xchg or inc sbb insl add mov fdivrl sbb sbbl cwtl pop add mov mov add lret mov pusha mov add rclb sbb das and aas in (bad) xlat or or sbb lds or test fsubrl pop js test jnp dec push iret add ret std insb lock push cld mov add (bad) icebp mov dec lock lods ret push push or roll mov cmpsl ljmp outsb push and adc sub mov mov add pusha inc mov jns mov inc rorb xchg mov lods inc test scas cwtl xor xor dec mov cmpl push in cmp insb imul je push adc and push inc xor stc mov lret rcrb xor hlt imul andb inc push sub xor add cld les mov dec cwtl inc mov cmp repz ret jne inc fdivrl and (bad) xchg xlat (bad) dec cwtl inc or xorb adc inc fmull add scas insb push xor jl add aam jle inc nop aam ror inc call in adc pushf push xor and mov adc cwtl adc inc shlb sub mov adc push dec push or dec sub dec mov sub or pmulhw clc arpl xchg insb out rcrl cmp and jp add lahf into orl push mov add add (bad) sbb and xor imul (bad) daa stc and jmp mov call ret stc or add jge mov add inc jl push leave mov mov pusha dec loopne or ret mov (bad) rorb sub fldenv jb xchg cmp push jo add push mov dec mov jb les int setbe daa push inc cmp mov iret jl add fisubr xor retw add pop and or cmp sub lds fisttpl pop test (bad) dec lock jae jns or jb andb decb cmp (bad) sbbb pop sbb das push lods add inc and mov mov mov addl inc rcrb pop clc add lods clc dec xchg pop cmp jg repz inc iret xor xorb mov adc xchg pop xor jne or mov push imul test cld ret sbb adcb mov and or mov insl mov movb inc pop pop lcall inc aaa sbb mov test dec push or sub test xchg ljmp mov loop pushf in xchg cmp cmp stos test lock or mov mov cmp add ret out fmull inc ret std jae pop adc test nop jge or movsl inc add pushf movsb adcb xor rolb subl mov inc lret into mov push test add xchg mov jg add les pusha push repz test push mov fsubl sbb or aam mov jns mov add stos mov sbb rorl (bad) lock mov jg jb inc add xor jnp push inc mov or test sub dec iret adc mov fstps xor xchg sahf dec sbb sub decb add dec enter in jo or pop into popa fsub adc sbb mov jg iret cmp sbb mov mov or mov xor sbb adc sub sub add or xchg inc pop push jg cld ret out pusha jns dec mov jns insb push push fsubs and sbb dec enter insb sub rolb leave (bad) (bad) mov sub ja pop mov sbb cmp cltd mov adc and and lret adc cmp sbb add xchg mov ret int pushf add xor push fcmovne nop pop shrb or fcoml outsl int3 mov lds pop call inc loope adcl add mov inc add xor pop xchg in dec ds cmp mov inc call pop push mov inc inc adc jbe pop fs scas lods adc or in sbb xor (bad) or call in push and movsb adcl dec mov xchg call mov insb add (bad) jo add mov inc sub addb sub cmp or enter push js test mov stos mov add pop cmc and rcr sbb ljmp (bad) adc inc nop sbb push enter cmp sahf xchg sbb and pop orl (bad) mov leave sbbl loopne sub addb push adc pop pop movsb fdivs mov cmpsb addr16 divl adcb mul sahf dec lret sbb stc xchg push add (bad) and pop loop inc cmp adc test add insl ret int dec sub (bad) adc xchg adc xor pusha jo jno ljmp jne subb or lds mov faddl cld aad sbb cwtl dec test jg movb out xor xchg imul add cmp std dec mov sbb jno xor jl or and sbb cmp add cmp cmp or pop int3 arpl (bad) ja dec loopne mull lds enter popa sbb fsub inc loopne mov nop inc add dec jb push adc xor sbb adc cmp sub test add fldcw xchg sbb xor adc je mov push arpl enter jecxz jecxz jecxz lock fs (bad) rolb loopne pop mov shlb data16 push (bad) (bad) addb mov cs jmp cwtl inc rclb and and adc mov and jecxz into sbbb mov mov xadd sbb xchg test and xchg arpl cmp jbe and jno xchg icebp cmp mov sahf lcall (bad) add mov sarb sub cmp add nop push push inc dec dec loopne decl add jo mov add mov inc imul stos aad xor shlb sub sub cmpsb pop pop pusha sahf and inc test repnz insb adc dec push or pop dec inc lods dec call and adc sub bound add pextrw inc mov jbe loopne test js xchg mov adc xor lret jo (bad) clc pop ja cmc sbb inc inc mov roll add inc xchg adc nop and outsb arpl xor push (bad) loopne sti ja decb imul cld call insl mov cmp jo mov (bad) jb ja into popa scas push js cmp add fsubs adc stos sarb call sbb cmp push ljmp jl cmp arpl icebp (bad) shr mov and pop jl dec push mov js imul add adc cwtl mov (bad) lock push ds mov jecxz insb cwtl pusha jns push fwait imul dec leave cmp int3 (bad) xor pop push pop add mov adc jecxz test rcrb mov mov push adc repnz push fistpl rclb add xlat lret rcr scas mov movsb test adc fwait enter mov sbb xchg stos pop cli mov push mov jl mov pushf mov inc inc movsb rorl or and pop inc fcomps scas and mov int inc imul (bad) or xchg (bad) pusha test rorb (bad) cmp mov push sarb data16 or add mov inc mov hlt hlt dec or adc xchg out hlt jmp outsl mov push clc icebp xor pushaw aad orb lret pushf repnz mov mov movsb and add loope adc mov mov addb add adcl loop lret inc rorb push or jb adc out hlt push add cli mov cmc sar sahf mov xor sti mov lret or fcomps pushf lock push jg icebp or xchg stc mov jp jns sbb hlt mov data16 out xchg mov jmp lea pcmpeqb add movsl mov mov add mov (bad) jb mov jnp addl xor push or shlb fs mov add jbe dec divb insl push dec mov and test adc lret sbb pop dec aam mov xchg push ja dec (bad) test dec mov pop add in jp pop jmp sbb mov fcmovb add push sbb pop nop sbbb pusha dec clc mov adc sbb ss cmpb cmpsb ss inc test test aam hlt xchg mov jle xor pop aam dec inc xor mov movsb cmp sbb xlat or lock jbe push cwtl jmp sub jnp enter pop push inc sbb leave and sbb and fs or mov xchg nop sbb xor adc pop inc inc pop dec stc push add test repz push push adc gs int ret mov les and sbb test loope stos push pop mov into mov add mov aas and dec push inc rclb aas fadds adc fcoms push add std mov imull (bad) mov test add in loopne cmp test pop dec sarb in insb cmp adcb icebp fisubl cmp jecxz push fldt inc pop stos mov repnz jmp mov pop mov add aas nop (bad) paddd (bad) fmuls mov in cld xor pusha push xor add cld aad xor push cmp mov adc inc lods and xchg (bad) iret bnd xor cmp inc pop incb xchg (bad) lret inc inc jns cmpb or mov and sub jmp jbe scas ret or lret js dec jnp adc mov sbb rcr pshufw adc dec adc imul pushf inc fdivrl in adc mulb (bad) sahf mov dec (bad) adc pop call push enter je sub int frstor fdivrs mov into mov push xor ret ficomp sub flds mov lahf push orl out in xor xor int shr sbb aad int3 insb test inc jne mov jge mov push mov fs popa xlat loope xorl adc jno xor imulb add push enter inc inc or jl ror imul mov cmp sbb xor sbb push and push jb add xor mov mov lea and pop lods popa cltd popf pusha fwait push dec and mov or sbb test lds cmpsb mov (bad) sub jl jle sub sbb xor xchg mov jbe movsb into jnp add or in (bad) adc xor mov stos call sbbb sub mov inc cmp and (bad) and add mov sub in pop lret cmpsl jmp mov in pavgb dec xchg shrb sbb add pusha rorl je enter add pusha inc pop or push rcrb movsb pop and add mov sub add rcll std sbb and inc dec daa andl and mov test fiadd sti jnp mov je add insl ffreep movsl lods (bad) lock mov pusha (bad) jnp in push mov jge mov (bad) mov std xchg pop lods cmp mov in pop lcall xchg std scas les or dec cmp sub lret mov in or xor add sub aad or sub insb cmp out mov mov shrb mov push mov mov fxch jae (bad) popf sbb add gs pop push inc push add stos cmpsl dec sub sbb test (bad) jnp adc jo adc cmp scas in adc dec and mov lods pusha inc sub cmp inc xchg lret or add mov cmpsl xor jg add scas arpl pop lds inc add clc mov jnp mov jl push ds adc cmp mov xchg mov pop in add aam mov add or jl pop sarb cmp aas test jno dec enter (bad) mov cmpsl lock ja insl or inc inc push fs aam sub inc push mov inc (bad) lock iret fs adc lods scas dec and inc sbb dec dec ljmp enter adc xorl dec inc movsb sub and mov and fsubs lret or test cmp test insb icebp rcll and fdivl and inc rorl xchg test (bad) and or sub add shlb sub in adc jbe push fadds xor data16 xor sbb sub aas inc jo jp mov pop add pop mov mov or adc lahf mov add adc xor add jl test daa loopne push and inc sub mov jmp mov fsub push jp add arpl push sub clc scas (bad) mov xor add mov and test sbb fs mov aas mov mov cmpsl test call jp mov adc test mov dec and in xchg flds nop or cld out cltd add inc dec jne scas movsl enter cmp adc (bad) mov xchg movsb add pusha dec pop in add xchg or mov imul xor adc mov loope fisttpl adc hlt dec add mov loopne jp js insl arpl or add mov lret jge or lahf or out mov (bad) and xor push test add fidivl cmp insb push pushf (bad) jno add mov lods sub andb mov mov insb repz xchg loopne out dec and test or add xor add arpl jne cltd mov dec mov or push and add dec aas inc or pusha stos mov mov (bad) sub adc adc popa push pop adc and int inc or push mov out and ljmp nop test or rolb jne inc xor hlt adc sub test adc popf inc adc jnp (bad) (bad) lock jnp sub inc enter xchg inc test adc into cmpsl dec add shlb (bad) cwtl hlt lahf mov fs jne mov mov dec push (bad) mov sub les (bad) mov jle test dec inc enter andb inc mov jmp mov inc push add stc mov mov lret test xchg in fistl fistpll or aam xchg cmp sub and int3 rorb fistl sub ds xlat dec inc dec aaa fsts and aad pop jge dec mov fistpl mov push repnz hlt mov sub pxor nop pop repz push aam cs fwait adc fdiv sub mov and dec jl or push dec sub fmul mov cmc jmp addl lods and xor lds (bad) test jp inc inc pmaxub add and add sub dec push mov mov dec cmp ret dec push add jns pop fild (bad) lret add repnz pop mov mov das push lock inc in mov sub adc (bad) mov adc cs mov add loop loope lds test movsb (bad) ds push sub jns rcrl sub mov inc mov or adc or cmpb test loop fsubl out in add jo shrb icebp orb xchg add push iret shlb iret pusha cmp xchg jg rorl and fstl and pop dec and adc nop xchg lods cli adc movq dec mov add dec mov inc rorl and push add daa pop inc dec mov (bad) and cmp or js,pt lret add xchg enter and push cmpsb sahf xor test dec add test test cwtl test mov jmp mov cwtl inc les in ljmp divl xlat pop cmpsb fs cmp xor in (bad) jmp in ds ja rcll mov xor jle and shr jmp dec in cmp test popa stos popf add test ret cs xchg pop lods mov pmulhw xchg adc sbb aaa nop out push cmp pop xor cmpsb call pop or in adc sbb pop das adc mov stos mov out mov xor mov push stos xchg cmp bswap enter add pusha xor pushf sbb inc xor nop roll movsl sub cwtl add pop mov loopne pusha xor ss cmp ret or cmpsl rolb clc dec or and pop invd or add mov in movsl test and or out pop nop movsl dec add rol mov push movsb nop jl shr lods shll jmp adc mov mov sahf in or in dec mov xor aaa sbbl sub mov push mov push and dec lods cmp xor movsl adc rorb push fdivrl dec dec cmpsl cmpsb mov dec mov stos out push clc add cmp push fs adc dec dec or hlt add and xor add or rclb stos test xor sbb dec leave xchg call movsl in push pusha dec xor adc xor mov inc shr sti inc xor mov xchg push cmp sub push or cs add ret push stos popf mov dec adc enter ss in sahf and cwtl clc push movsb test and dec mov (bad) pusha clc (bad) stos or dec cwtl sahf movsb loope in push sbbb cmpsb lea pop cmpsb enter insb dec or or dec xor ss mov inc lret dec and add test nop and xor xchg enter enter pop ret add push das stos xor cwtl test sub xor xor loope cmp pusha js cmp mov int3 aaa pop cmp jmp out popa (bad) xor in sbb cmp outsl or xchg sbb dec dec sub popa or nop es mov sub and fisub pop clc add dec movsb loopne sbb dec mov add sahf out push ds mov add and stos xor std insl adc enter pcmpgtb or and rorb call adc or cmp mov arpl dec in sbb inc xor inc enter arpl xchg dec clc popa add dec lock test adc jb add popf cmp data16 jp xchg leave add push jl add subl mov mov insb mov enter xor nop inc incl and jb jo pop (bad) xor or pusha add cmp jo sbb jmp js inc call hlt lahf sbb in jnp mov cli push xor iret inc push repz inc jl sbb xor xor sbb or aam test push pop adc pop jl xchg aas sarb jae rcrb icebp xchg mov pop (bad) out xchg jmp add xorb adc loopne cltd adc pop (bad) push insl fwait rorb stc pop jl adc pop pushf mov jg cmp sub xor lods sbb pop out pop enter jo jno add sub mov adc shrl fisubl jge lock mov test push repnz cmp jnp inc jno cmp cmp push (bad) jmp fstps pusha sahf add mov cmpb (bad) shlb or fndisi(8087 add pop pop xchg inc adc ja mul sarl or sbb add ret jo dec fs sbb cmp mov and inc mov xor jo pop pop fimull rolb iret ss mov inc popa adc cmp sbb sbb inc xchg and sbb inc mov inc and ret xor repz and insl inc insb sbb pop les sub imul mov enter sub (bad) das and add adc dec (bad) mov lds or or mov xor (bad) imul inc pushf and adc (bad) movsb sbb mov xchg sub rolb xchg into mov adc adc enter imul cwtl mov and and lods rol mov (bad) sub stc push pushf mov push xor mov adc adc cmp add into jg dec mov jecxz cmp sahf adc cmpsb outsl adcl leave (bad) ss (bad) fsubl push mov mov mov jge rcrb push jmp inc pusha test pop jns lds sbbl cmp js dec cmp jns add adc xchg sahf jmp les imul fsubl and xorl adc (bad) lock arpl inc xor mov mov mov inc mov (bad) inc hlt imul inc cmp dec xor (bad) repz add dec or inc (bad) jo push shll (bad) addl dec add xor sbb pop add and push aad repz movl sbb fmuls inc ret inc sbb sub das lret (bad) cwtl xchg or nop fsubrs adc sub imul in cmp sbb ja dec mov imul cmp lods rorl adc fdivrl xor ljmp movsb lret pop and or (bad) loopne and push xchg in mov stos mov mov rorb and adcl dec clc and mov jns or (bad) sbb add push mov push sub jo pop nop cld inc jg and and nop enter mov and cmc adc (bad) or test lods sub adc sbb sub dec das mov jns sbb and iret jo bound add inc mov mov pop shll jb test add adc stc inc cwtl (bad) ja sbb pop pop mov fmuls test add or jns xorb inc int jne dec and clc fdiv mov xor sarl in sub add call or ret and dec inc rorl jp mov dec cmp mov inc jg mov rclb sahf (bad) je fcos dec mov and int inc add call (bad) roll sbb add jge cmovo xchg in nop rclb add xchg or (bad) sbb aad jnp imul mov test jl mov fdivr or mull addl aas push xor mov or (bad) jmp or mov dec jl dec jp mov call inc sub clc xor loope mov and (bad) push cld dec movsb lea loope lods sub call lcall fcoml mov dec adc jle or add inc or pop adcl mov jo xor mov adc mov mov (bad) decl gs dec adcl mov or inc add push xor fmuls jle,pt push test xor push scas pcmpeqb es dec rol aad cld add pusha inc dec mov int sub dec and jns pop lea ret lcall nop std pop in mov pop daa dec aas pop adc xor js sub fdivl fsubl mov rol and add or into inc mov jle inc data16 les dec push sub mov sbb and enter and int3 mov and xor stos lods inc cld xor mov dec and rclb add inc push xorb sub mov dec ret dec sbb inc int3 mov dec nop cltd inc les iret pop enter push es (bad) xor adc mov fsubrs cld add nop (bad) out sub jl sub and adc aam loopne inc jb dec insb pop sbb into and mov mov movsb loopne mov xchg jns loopne mov inc int3 mov and fsubrs fiaddl mov adc call or adc sbb es cmp js push (bad) cmp inc je cs hlt mov mov or adc push js mov add cwtl mov test enter hlt cmp mov mov fadds movsb fwait cmp iret faddl push sub mov add pop nop pop (bad) xor fwait and and add adc mov je cwtl adc clc dec cmpb push xor cltd lret pop add loopw inc mov cmp clc xchg adc loope and and xor les sub xchg fadds mov add fmuls and fist in sub les or clc jo andb mov inc test fsub fdiv rcrb fwait jno sub nop or pop lret lea inc dec push xchg jl push les or sbb bound imul (bad) xchg adc arpl xchg rorl decb add jp dec add add addl add iret jp pop or jo inc lods add xchg mov or jmp fwait push lahf lds in iret movsb loop add dec cmp fs sbbb xor call fs orb mov mov cltd stos out dec (bad) iret mov cwtl in stc add sub push inc mov add mov mov add and aas adc (bad) pop test inc aam add xchg or iret jle dec (bad) jne jns add jnp cmp rclb movsb xchg dec scas sbb jge jp xchg test cmp enter outsl repnz cmp in push dec add rcrl pushf call pusha inc inc je inc cmpsl andl push mov je sub mov nop mov test sbb mov dec andl cmp mov lret (bad) aaa test xor mov loope mov push sub nop loop mov add cli daa mov (bad) cmc mov adc les dec xchg movsl mov cld aas roll scas pusha push adc in aam pop mov dec lds pop lret xor mov mov das push sbb mov and dec inc add fcoms cmp sub push nop arpl mov outsb nop mov xor sbb dec lea and out sbb adc xchg addr16 adc mov pop add xchg fmul roll lock (bad) add cmpsl and int3 and lea or sub incl imul addb inc andl lods test movl sub and test aas test and arpl test mov rorl rcrb pop adc cmp enter xchg (bad) mov add clc imul sub and sbb imul mov icebp mov inc mov lcall adc lret lahf es cs dec popa push test inc orb gs xor in in lds mov push imul mov movsb int3 and aam xor pop ficompl pop imul daa sub sub mov aaa xor sub push int sar (bad) xor pop rcr add lock in mov (bad) (bad) shlb xchg adc mov xor xchg (bad) and dec movsb (bad) int3 xor test testl adc push and fs push rcll mov loope enter mov jb in es cmovp cld adc test or add cld rclb int3 pop adc ud1 in lret les les shrb fisttpll imul addr16 fldcw sub insb push xor jb ljmp inc xchg cli pop aas push cmp inc xchg cs jl or pop cwtl add add jecxz push pop shlb inc sbb sub inc inc movb es add mov lods xchg sbb or pop and mov test outsl in (bad) or and aas lret and in push (bad) mov jp or cs (bad) cmp jnp and cwtl inc sub mov inc jo add test hlt popl js sbb jmp jg sbb addr16 (bad) add adc (bad) out xor popf push hlt lock mov sub movsb fcoml inc xorl fdivs push gs add pop fimull sub cwtl and inc jg js aad nop push lods inc xchg add int in cmp sub and push sbbl adc pushf enter sbb inc sub movsl test xchg stos sahf add xor or (bad) sub pusha mov push shrl mov je xor lods sub sbbb and adc in enter (bad) mov je mov fildl xchg stos cmp fdivrl mov or mov add rolb or dec and popf mov cmp dec adc push (bad) iret jl jns addl sub mov dec cmp add add icebp inc cmp dec les xchg dec push insb jle outsl pusha push add adc add and jl subl rorb adc fsub push inc aad or aaa add sbb cwtl lds push repnz popa jmp and test jns cmp add lret ret mov movsl xchg inc push mov jno icebp or adc and dec out xchg sbb (bad) mov jg stos adc pop or rcrb enter inc jb sub or in (bad) dec push xchg mov fs inc lods inc cwtl add mov inc rcr add jmp imul nop mov pop or xchg mov and add cmp js inc add push inc add lcall xor mov rclb inc fadds mov in sbb and push outsb push (bad) in dec cmp push pop out or xor or xor jbe popf sbb js test les pop jns pop pusha dec or sub andl movsb dec mov arpl movsb cld jo dec sbb lret add adc popa push mov stos lods inc mov mov insb and push sbb pop xchg stos adc inc jle adc mov adc xchg test xor jp insb xor xchg xchg test fmuls sbb adc inc nop and pop jno (bad) or lea js insl push xor xor test notb lods js imul dec push jge subl cmp call or adc nop sbb inc pusha and inc mov sbb pop movsl mov mov data16 xchg inc ficoml cmp cltd in out test cmp sub sbb enter mov jmp test pop xor imul or inc in (bad) cwtl movsb and jecxz adc sbb push scas movsb cmp push scas sbb mov ret xchg cmp sbb mov xor fdivrl lea xchg les xor and sub push pop cmpsb sbb lds mov push dec mov int adc ret lcall fcmovnb ret movsl sbb push dec stos xchg cmpsb sbb (bad) cmp mov outsl test cmp pop fnsetpm(287 mov outsl pop icebp popf and sbb and jns add cmp or lea stos sub mov sbb xchg inc push push xchg adc fisubr push lods adc sahf (bad) or stc or mov or andl sbb dec inc fs mov or add jno cmpsl clc mov adc cmp mov sbb pop xchg jmp inc lds fdivr mov mov and sub inc mov mov (bad) data16 mov mov or scas mov in into inc and jno mov sbb dec adc lret les xor add xchg shlb popa xchg or xor int3 cmp sarl les lret bound adc cmp dec dec call cmpb and mov pusha xchg aad in xor cmp or enter push sbb stc mov xchg les mov hlt aam dec mov push push add adc ret inc aam movsl push sbbb mov or adc mov cmp jns clc js nop cmp inc mov mov es add sbb dec sub sbb mov (bad) inc inc sub add fmuls mov mov (bad) hlt xchg test add lret mov adc (bad) mov (bad) aaa sbb into mov add pop jg lods pop js sub idivb add cmp leave or mov (bad) fadds lods sbb xor or lods mov pushf or cmp add (bad) and jle add js mov xor loop sub xlat adc enter lea lds hlt cmp stos mov insb (bad) imul (bad) and fdivrs (bad) fnsave xor arpl test sub clc push call pop push xchg dec and mov sub and aam mov ja,pt loopne sub test fist frstor mul push or pop and int3 cmpb lahf pusha jo mov sbb mov add insb cmp cwtl lds ds push jnp dec xchg mov or xchg enter stos mov cmp sub xchg daa sub dec jl mov loopne loopne fistpl aaa lods insb jno xchg dec and pop pop or dec and (bad) lock into cmpsb lret movsb lds lods add std (bad) aad leave mov vsubps fdivs inc out (bad) dec pusha or lcall sub adc arpl xchg mov sbb add jle fucomip xchg rorb sahf sub dec nop sub ret adc sub stc xor inc mov sti xor mov pop das push mov lcall adcl andb mov in mov add mov dec sahf lret mov fdiv dec xorl shl es pop outsl or int3 xor mov sbb add lock pop add jmp sub enter inc dec idiv cmp loope (bad) movb hlt add addr16 xor cmp push jo and aam insb pop enter xlat adc xor aam dec xlat sbb adc jnp mov movsl and insb stc lods add dec or jg mov sub jnp mov push test shrl aas scas xor jmp jo or fcompl mov sbb std push adc fsts clc push cmp (bad) je leave inc or movq or (bad) sub mov add xor test mov add testb shl sbb mov popa adc cmc pop xchg test pop jbe add pusha addl xchg mov push aam inc or fstp xor lods iret cmpsb or add mov mov aam negb lret pop les lret jg aam mov mov dec or push dec lds (bad) or rcrl (bad) fldl mov and fidivrl fcoml jns pop cmc movl fwait ret fldt and mov rolb lods stos push faddl cmp xchg dec andl mov xor inc (bad) leave mov andb aad je dec pop jg pusha sbb adc leave cmp popa inc and push or sub pop xchg add pop inc jle ljmp enter ss sub pop add mov movsl mov dec repz inc aad mov test subb push rcrb pushf or xchg push pop push xchg fiaddl adcb add xchg call rolb push cmpl (bad) hlt je mov and add scas pop mov ret inc roll jo nop add inc mov jne into push fs or mov lods sub paddsb shll mov test repnz in add add pop xchg jne push mov xor scas add add popa into sub sbb bound sarl in (bad) ficom sub cltd fsubl dec cli nop clc (bad) or inc sub sub in loope jg pop mov cmp sbb mov xchg add dec mov imul fmuls xchg dec or pop cs sbb enter es ss dec inc cmpl fcoml nop bswap add add add mov repnz aas leave push pand adc or add insb or dec dec sub aaa sbb mov fs cmp or jbe ret inc sub daa loop insl int and or aad ds pop pop adc add adc dec pop add jb pop mov push pusha jle scas or adc cmp dec add loope lret pop add inc test aad or pushf add adc cwtl fdiv pop push pop push add repz jle dec jmp add push or dec mov and sub rclb movsb add sub add xor sbb or insb or sub sbbb ffreep shr push and sti fwait cmp bound test sub orl xor int int3 xchg xchg pop sub inc inc mov push les lods stos mov (bad) jae cmp mov mov loop add and (bad) cmp scas int3 add test testb and add xchg rorl or pop test push scas incb insb pop pusha inc dec addb sbb jmp test mov adc jns pop rcr movsb addl inc insb mov pushf pop jle xor dec mov nop adc ljmp movsb sbb adc pop dec sub lods mov push or sub xor cwtl cmp test cld and mov add cwtl mov jbe add add sub (bad) sbb loopne aas test and mov jo mov xor insl adcb ds or add xor sti lds mov faddl fmull xor pop xchg or in arpl (bad) dec add clc adc (bad) subb sarl shlb adc into sbb jae pop sub flds jb add dec sub pop mov cpuid js lret fimull ss or mov add xor addr16 sub mov xchg jl jl push inc mov inc pop cmp pop jl out mov dec les (bad) xor pop xorb mov mov cmp std pop dec pop das lods scas cmpb lock xor lcall divb shll mov jp cmp cwtl and xchg adc mov mov lods subb les dec movsb or ret adc and nop add leave cmpb bound aad iret jno mov inc fisub cltd mov and push pusha xchg (bad) shrb mov rcll xchg sub or nop mov adc clc add fwait or shrl fs in cmc ss cltd in mov scas mov pusha mov cmp sarb jb jo lods clc sub mov adc sub rolb pop (bad) inc ja cmp stos mov and bnd jno dec or inc and les pop mov mov or sub call mov adc sbb in xchg les je inc inc inc sbb push inc adc cwtl sub xor dec mov and inc add imul jle out xorb dec pop sub dec add les xorl or es fmull rcrb or imul dec call adc stos inc mov insb xchg (bad) xor add aas dec push pop and sbb rcrb cmp add push mov mov out cmp (bad) mov dec xchg ds enter rolb jns or das cwtl add xor int loopne jbe lcall scas sub xchg call popa roll add dec fsubrl and js jbe mov mov test xor (bad) add enter (bad) mov xor call dec pop mov cmp adc sti xor mov cmp jae hlt add inc mov int3 mov xchg fnstcw adc adc aas or add sub mov mov fisubr mov mov sti add push cli sbb mov jb stos test fildl rolb aas enter fistp js mov cmp in xor pusha nop inc push or jp cmpsl adc in inc pop sub es and adcl sub popa (bad) sub mov rclb or call decl les xchg xchg xlat push or inc fnsave add lahf and mov push lods mov dec mov es int mov add mov and daa mov push push pushf repnz mov dec inc rolb jle (bad) idivb jo add xor xchg xor mov pop inc sbb icebp movsb loope add mov push mov jne lock les cld orb xorb and jp fwait push test jbe mov in lcall jecxz xor or xor mov icebp xchg xor push sbb cmpsl fwait xchg mov cwtl movsl ds sub fs push pinsrw bound jmp xchg int xchg aad repnz mov add xor cld cwtl insb pushf (bad) mov mov mov add (bad) cmp jns subps xor and and je roll ljmp xchg pop stc arpl mov movsb push xor cmp jg xchg push adc sbb pop fisub push mov dec pop add (bad) add push (bad) jne jge pop int3 outsb mov push test add incl mov sbb xchg pop cli inc arpl xchg mov or sub adc inc ja sbb fsubrp pop (bad) fidivl add aas push sub add rol or stc (bad) mov add add xor ret jbe add xchg jle cmc push testl scas dec pop xor out dec xchg cmp das jle pop (bad) or cmp pop arpl push fsub (bad) aaa lock (bad) cmc sbb push negl insb xor and sahf add adc aam push ljmp mov aas fisubrl add es jno in (bad) sbb pushf or adc xchg jns je add mov out add xchg popa loop (bad) arpl inc jecxz pop xor negl dec hlt adc fs and pusha mov lret mov or jae stos add lea mov dec inc xchg add notb test and stc xor inc pusha clc inc andl jno subl (bad) sub push add cmp fwait jne hlt test mov loope into mov xor add imul sbb gs jno or scas sbb pusha adc and enter lcall leave jne sbb adc bound add test add mov scas lods jle add movsb shl pop (bad) jo arpl push xor cli loope pop dec aad sbb negb sbb pushf inc dec iret jae pusha test out add mov mov dec dec pushf ret stc and push sbb sbb outsl sub loopne adc and (bad) in (bad) test arpl inc add mov xor xchg mov mov arpl xchg sbb mov rcrl mov testb xchg sbb divl add push nop and sahf or push (bad) cmp or xchg in cwtl call push subb repz cwtl push add nop mov in clc add das sbb and shrb xor repz cli movsl push dec xor cmpsl loop or arpl push aas gs sbb mov add sub incl or data16 in cmp loopne jo add adc call pop (bad) add ror sbb xor ret mov or push stc adc pop cmp mov inc sub xchg lock aam loope rcrl es xor push int shlb mov xchg pop mov ficoml rcl les loop sbb adc push insb loopne or xor lret xchg aam fsubrs jns inc int3 sbb mov add sub shlb fs jb pop and in mov into fwait js jg test xchg mov int3 or bound or es (bad) andl jns jns pushf pop xchg dec cmp fmull and sub test mov test inc inc int3 or pop sahf addb xorl mov sub add cmp cmp sub loopne dec push cmp clc inc sbbl popf or push mov fcoms adc pushf or mov add mov scas mov or popa clc push std or lret je xchg add jno sbb arpl dec pop jmp cmp dec mov (bad) lds popl inc mov loopne pop out xor ret jno pusha fdivl pop ljmp gs popf xchg mov imul adc add adc add outsb bound xchg pop pop mov ds cmpl lods jg jo inc cltd dec adc sahf add mov test jl and xchg mov jno inc and in cmc lcall addb jns sbb sub ljmp xchg (bad) cli stos inc shlb adc test (bad) (bad) insb popf sbb sub lret and dec pop push mov mov fidivr mov sub bound es inc aam or fwait call and into and sti js loope lock les or mov lea ret adc sbb inc fdivr pop xchg dec (bad) cmpsl mov mov pop dec push ja and mov sbb (bad) negb dec popf int3 aam and push lds push mov sub data16 in test mov fs lods mov test mov add fnstenv je add gs pop or adc xchg lea pop dec cmc mov cs lods inc add lea sub xor ds or pushf (bad) (bad) popa pop cmp xor in lea ret push mov or mov roll pop mov mov mov sbb fisttp jo xor dec inc out jle test or loop pusha cmp or enter repnz shr add lret insb push dec aam fsubl push ret mov imul sbb js add or inc clc mov in xor into and adc xchg mov cli enter testb fbld and push mov add mov mov movsb xchg push inc pushf in out inc inc or aam xchg enter jnp adc sbb test gs aam stos mov insl mov push sub add and hlt add pop andl xchg sbb push out ja mov rcl pop sbb fcoml jb mov (bad) xor fcompl decl jl or loopne or jne fcomps sub and repnz cmc lahf aam (bad) in add push cmp jo add pop mov mov add mov and push cli subb sbb mov add add cmp pop loopne pop fwait pushf and cwtl daa test adc cwtl mov xchg jmp sbb and push pop scas pop iret cli int movsb push xchg test mov pusha jmp test mov aaa jns nop pop dec call pop xor stos inc sahf xor loope mov xchg xorb outsl and pop sub popl test xor adc xchg roll cld xchg (bad) or add mov cmp add mov cmp mov mov sahf je loope (bad) out cmp cmp and inc fs cli pop mov xchg cmp es pop dec ret lcall sub subl ficom mov mov (bad) hlt jo xor nop xchg add xchg pop cmpsl inc mov jge fisubr push sbb leave sub fsubrl xor sarl fs sbb aam adc sbb mov or or pop xchg xor stc cltd xchg lock pusha dec cld and sub lcall jl and jmp es arpl in inc fmul add neg test dec xchg int3 cli mulps xchg fs mov mov mov je cmp push repz xchg xlat inc add out test insb imul mov (bad) mov arpl inc and cs mov mov mov lcall mov jp add sbb sbb inc push int sub xlat inc cli lret cmp roll dec xor or dec fs cwtl sbb sub add and es dec mov pop add mov adc inc sub jns mov push lock and rcrl repnz xor or data16 stc and sbb push add push sub cli mov cmp xchg pushf push push test mov mov sub xchg scas in dec cmp mov repz mov call adc xor mov mov jo inc add testl and imulb add sub pop adc sbbl (bad) pop lock rcrb push dec xor or inc hlt cmp jmp imul adc jae fildll inc xchg ds js add jbe pop sti inc mov ljmp push aad popf dec stos fsubrs jmp pop push lret add in cltd inc aas daa xor sbbb add shrb lds popf adc dec (bad) jo mov pop xor sahf fildl fadds sbb jno or loopne popf xchg push mov test xchg push inc aam add xchg pop test sti jmp or call das add pop daa lods add jb aad lods jge stos popf cld jno push add mov add pushf xchg test pop pop sbb xor lock cmpsb mov adc loopne xchg sbbb test fistp das add ds sub test mov mov mov mov orb xor or mov adc sbb int3 xlat inc mov adc mov in test sahf mov das jecxz mov add add push add icebp sbb pop jle mov mov mov sti mov push cmp mov shlb out jl outsl lea aad insb pop mov xor and sbb lods pop ds mov add mov lea pop insb add nop jg dec aam mov or adc pop in cmp roll fwait sub jae pop jmp add and leave scas cwtl les aad arpl sbb fstpt lock mov jmp mov mov inc jl ret sbb push add fnsave out cmp fs rorb cltd lods ret inc sbb call mov mov ret test cmp add mov sahf lahf cltd add js popa inc (bad) xor or ficom les pop leave jmp push lods int3 clc and in enter or jg push call xor add repnz push in lcall into jns xchg pop jp add ret hlt shlb add or rolb in pushl movsb fcmovbe insl add (bad) jge loopne jb (bad) sub adc xchg add jmp aam in cmc rclb mov (bad) pop sahf sbb inc cmpsl pushf mov sub nop fwait cs pop jl,pn and sti jmp outsl push adc popa add inc pushf mov mov fwait and cld jae lods add sbb and add inc call push xorl lods loopne lods (bad) arpl (bad) fnstcw pop xchg mov loop and pop es nop pusha lret sbb fcmovnb push adc adcb push add sbb add rcrb sahf push insl int3 imul inc or (bad) lret movsl add push push xchg leave pushf adc aaa mov (bad) jo add mov xchg clc add rclb sub lahf rclb push inc mov xchg (bad) xchg cmp int3 aad enter xchg and pop adcl fwait xchg orb cmova mov lock test loopne or ljmp nop mov cmp xor jne sarb and pmaddwd pushf js scas and push push xchg loop sbbb mov scas dec mov push add sbb nop int3 push rdpmc inc push adc rcrb dec movsl sbb cmp lret sbb adc (bad) in jbe lock xor aam bound icebp sbb inc fwait jle xor xchg add xchg out pop mov mov or xchg nop add call cltd mov mov adc inc stos cmp das xchg (bad) cmp inc hlt add sub xor dec and inc ret add cmp (bad) mov cmpl sbb adcl mov clc jnp push pop dec add sbb sub xchg adcb adc and fisttpl shrl imul ret mov add fiaddl mov into pop add subb jb push lods mov push add shrb mov cmp inc pop mov enter pop addr16 pop add sbb add popa inc pop and xchg add mov mov xor je jecxz mov movsb sti sbb aaa popf (bad) in int or mov pop sub test or sub mov or jne or scas mov aas jns (bad) repnz jbe rcrb jle lds movsl leave pop xlat lcall push xor add sti push sub xlat mov in and stc sbb lahf mov popa pop ret cltd lds outsl cmpsl out xor aaa mov sbb lcall pop xor stos adc cmpl arpl rcrb push add jns adc inc ds add sub adc test jge out mov and and test or xchg out mov inc or scas addb xor mov inc or popa or in push stos fsubl test mov (bad) cwtl inc les adc pop xor cmpsl cld ss and mov inc mov lods add push cmp lock fcomp jo jae andb rsm cld mov mov adc std add subb push test pushf fmull lds lcall cs mov lds and outsl or inc icebp sub es mov cld popa cmp sub pop or loopne and inc outsl push aas pop push inc pop cmc sahf pusha bound mov add jecxz add push jecxz add call sbb inc ficompl add scas dec andb add cmp ss or jo pushw cmp aad add aaa in pusha stos jns and mov push (bad) aaa popf pusha jne xchg loope ds push jg jecxz push inc xor jp or imul mov inc lcall fmull mov add xchg je and add test ss xchg sub cmp push push aad push sub int jns cli ret cmp mov and ss mov or aas adcb sub and add jns mov and test inc gs inc cmp scas les fnstcw test pop fs ljmp adc out xchg adc lcall jb lahf ja jecxz or xchg shlb mov xlat or mov mov inc inc insb mov inc pop shll mov jo sti add xchg ret movsb fsubrl imul mov pop les adc test jle push enter dec cmp mov bound aam ret cmp and addr16 and xor stos aam add or lret push sub pop push out rclb movsb mov adcb sbb cwtl push push pop andl sbb cmp inc mov cs stos leave sub mov shr add dec aad sbb add (bad) lret mov add movaps xchg andl sti dec les mov popa push jns sub dec shrl and into test addr16 or (bad) fdivrl mov nop pop push push std je nop leave xor je add addr16 push mov xor mov add test sahf cs mov loopne (bad) cli mov loopne sub add insb jns add cmp fistl push mov (bad) and add data16 lock add sti adc lret stc std gs inc push sub pop mov jmp insl dec (bad) (bad) gs add xor outsl loop xchg sbb sub rolb fdivr idivb sub outsl test adc inc pmulhw xchg xchg (bad) sub sarb out xorps ret jmp sub stos loopne sbb add fcoms scas mov repnz js mov mov out push adc lods daa cmp loope xchg js push loopne scas cmp sbb push aad xor sub pusha das cwtl cmp test ljmp add out adcl mov push out sub and add into adc mov rolb jnp ret jmp mov dec lea mov push imul stos add gs aad (bad) fdivrs inc mov mov jecxz (bad) sbb add and lods add mov jns in scas arpl xor pop ljmp jnp dec leave or add aam loopne sbb out adc pusha and imulb mov icebp (bad) lock test imul mov aaa sarb test xchg ret clc lds popf dec xchg sub and sahf and add xor jmp frstor xchg adc leave mov jo enter imul out and sbb push xchg xchg xchg jle dec cmp jp or dec add lds jno outsb nop mov pop sbb test push add outsl sub faddl fidivrl rcrb mov sub mov xchg call cwtl add hlt add cmp cwtl add mov or xchg sbb or pusha add add fs dec jnp adc movsl xchg adc enter mov or cmc push push and test adc sub or cmp add dec push sbb add pop or mov pop sbb pop adc test mulb cld mov into int3 xor cmp je push movsb and ds mov dec call mov js xor les cmp add xor adc cmc (bad) xchg mov xor pusha xchg enter push mov add push clc in imul mov mov ss hlt inc inc xor inc mov gs add jmp scas and pop and add addr16 mov test mov sbb cltd nop mov add push call add lds orl cmp add sbb pop js pushl cmp push pop lock fildl js test push pop mov push push adc repnz inc adc mov adc adc push clc pop or xchg cltd loopne mov popf sub jne,pn or mov mov adc lahf lds push push and (bad) adc xlat shr (bad) cltd pop xchg pop sbb mov adc enter (bad) sub xchg add pop and outsl pop mov test adcb out shll mov mov dec lock loopne mov and (bad) mov push xchg pop jbe pop mul add shr ljmp jo aam out inc pop sub add jle add sub decb in (bad) clc ret xchg sbb xchg xor xor insb add dec or pushf push test popf xorb or aas pop pop lods dec mov pop add add fldenv mov xor dec addr16 add mov shlb or xor fs lds pop cmp mov add adc mov mov rcrl push (bad) (bad) xor lret xchg insb pop sarb xchg adc jp sub push xchg jo clc clc jge sub popl rolb mov add push mov psubsb xchg dec inc xor stc mov push (bad) mov loopne xor add aad cltd rcll fldl test inc mov mov sbb xchg aam (bad) push sub loop inc push ja push pushf mov mov nop pop xor and fsubrs sbb xchg mov test cmp insl js mov adc dec mov and add mov add test neg xor cmp data16 les (bad) xlat mov cmc jecxz pop inc cmp lock sub mov out sbb adc orb adc jmp clc add xchg jbe xor into xor mov or bound fadds mov or sbb fstl mov xor loopne in xchg add add jl mov repnz mov or cs (bad) xor push pusha movsb sbb or call cmp push cmp push sbb pop xchg pop adc mov dec pusha data16 lahf dec xchg addb mov xor cmc xchg pusha dec and mul test add sarl outsb push dec dec adc adc jg adc insb lock sub adc gs js mov cmp cltd mov cld lods and mov fwait mov mov pushf fwait insb cmp test hlt jnp xorl push (bad) rorb cmp or jge lock call and xchg cli push mov jle push lea hlt push cmp or insl repnz pop iret add mov scas inc xor jnp imul jmp (bad) and shrl cmp xchg inc lahf enter xor mov push lcall movsl cmp push or roll sbbl cmp jno sub js,pt add data16 aam sbb jnp pop pop es rcrb add les add sub dec mov in jo xor add pop enter push push je add cs add in xor inc enter xchg xchg or add pop xchg pushf cli dec icebp cmp dec (bad) out in das sub push or inc mov add (bad) addr16 xchg fldl mov sbb test je fdivr push jno mov verr cs xchg cmpsb add push jmp add jne,pn and std sub andl and push pop sub pop sbb (bad) icebp in mov cmp cli pop dec stos mov cs mov push cmp hlt out push jle add sub loopne fmull sbb jecxz jns test and orl dec je pusha and popf data16 jg add in mov push or xchg pushf xor or (bad) in outsb pop movl cld mov xchg add lods std ss or jmp mov and add dec cmp jmp das jle or andb hlt dec lret jp or fchs cmp xor dec push mov aam jmp sub dec loopne add mov mov add (bad) mov test mov push adc push sbb xchg ljmp pushf add insb pmaxsw inc xor mov fsubrl daa add pushf lea insb leave mov push add jnp inc negl pop sbb cmp add cmpsb sti xor data16 jmp inc cmp popw cs iret lods and cmp daa ret cld movsb xchg orb push add jo sbb mov daa and xlat push add (bad) dec movsb cld ret pop notl xor add or add push rol push inc clc lret inc test and jnp add fidivr add push mov in cmp orl stos sub or out das mov dec rcrb cmp cwtl xchg inc je fnstenv or inc dec add int push dec xor adc or subl pushf fisubl addr16 mov pushf and or fdivrl lea sub pop out enter adc data16 jo daa xor inc pop add lods lods cmp jecxz and mov in add (bad) fdivr push test andl inc cwtl call cwtl jno cld daa aaa add outsb jp sub and leave mov jbe pop ja add gs cmpb les sub clc jg,pn call daa iret icebp push dec pop add popf cmp add cmp fcmovnu inc lock aas add enter sti dec ds and sbb pop (bad) mov lds cld enter cwtl les aaa popf xchg cmp cmp lret loope ret jp test int or daa dec clc xchg mov cltd movsb test jmp push add scas sub (bad) aaa inc inc lahf popf xchg int lock xor fwait or int mov adc cmp jl pusha mov (bad) stos or push mov cltd rclb out cs xchg int3 mov mov outsl jnp nop stc insl sbb lret mov add cmp add add sub dec jp add mov or cltd adc adc add add (bad) push xchg mov or sub les and clc cmp or outsb push mov in fsubrp push cmp push add (bad) pop dec shll mov cmp xlat aaa fiadd xchg addb jne fld sub incl daa mov gs (bad) adc push inc cmp pop jno pop push aas jae int3 lret call sbb inc cmp roll push mov stc les shll mov sbb pushf (bad) sub mov call push xor stc cmp inc dec push and lock loopne enter test mov pop pop xor cmpsl pusha mov cwtl or cmp ret jmp mov mov adc movsb pop adc or popf inc mov nop adc mov outsl dec xor pushf push mov sbb mov (bad) mov jo aad mov mov icebp in popf pusha push push add test mov sub pop scas loopne mov scas rolb rolb mov fld1 xchg sbb pop fimul movhps les sub add adc int adc test ja add push icebp jo xchg std (bad) sarl mov out jecxz add or ret addb lahf jns xlat lea stc popf adc mov push iret shrb add lea fcoms push or mov out loope addb xor cli dec call leave (bad) and outsl (bad) mov cwtl pop (bad) mov movsb or pop mov xor dec pop or mov enter mov sub jno into orb xchg std xor sub pop test add repz ljmp subl rol dec jo push mov out mov sbb (bad) inc xor pop or jo jb arpl out addr16 adc mov pop sbb movsb inc pusha sub pop ljmp add inc andb xchg inc mov (bad) rcrb imul lock dec pop adcl push (bad) push aam mov pop xchg sub nop jmp repnz insb inc je leave aad imul dec test mov xchg (bad) (bad) cld add inc les dec adc pop and psrlw fisttpll in dec scas xor cmp call mov cmc sub inc cmp fwait dec adc or insl jo or add aam push adc lea insb xchg sub or fs inc aad and xchg inc icebp or popa sub mov test mov scas pushf icebp xor adc sbb or xor mov mov call mov test and lret push adc (bad) xlat inc test out popf add ret push jle push inc sub es and es sbb mov push hlt inc test shrl pusha inc ds fdivrl or cmp mov shr mov insb loopne sub mov test adc mov mov jp cmp xchg mov dec lods jp and leave or sub xchg addr16 xor mov aam sahf sub loope jl dec cld fisubrl sbb push push (bad) lret jb or mov cmpsb mov mov lods dec dec int3 jl test inc int3 xchg cs lods call out daa xchg jo xor and les pop out add mov jmp xchg and mov into dec cmp repz xchg add dec jo push dec mov (bad) cmp push out jnp (bad) xor pop add ja aam inc jecxz mov mov dec sbb icebp xor hlt dec shrl push aam add aaa dec test jmp jecxz cmpb xchg push cmp mov sbb stc and sub repnz fdivl outsb in mov inc sub push push icebp insb push push cs xchg cwtl addb dec sub sbb adc push fwait or push jl (bad) mov sub mov int pop inc and aam jl jge ret dec lret add stos sub cmpsb test roll push xor add imul and into (bad) sub pushf jmp jmp lods mov test inc mov aaa inc lods cmp mov nop inc shl sbb outsb add imul inc mov and or aad das les daa inc cwtl fcomp mov sahf xor aad in xchg (bad) pop xor ret pop push mov add dec je not fldl mov mov jns dec rcr sbb add mov mov gs adc sub push stc jnp imul jp test and and leave dec int add pop repz inc nop mov (bad) xchg push popf mov (bad) pop add icebp sub test test shlb test add fidivrl sub test xor mov insb fs popa and and repz nop xchg test push insb (bad) xlat leave mov and pop (bad) insl (bad) mov fsubrl xchg xchg js insb mov aaa jb pusha adc dec imul mov pop loop (bad) sti mov and sub xorb push loopne aaa jmp push fmuls negl xchg movsb (bad) or and push out mov inc push cmp es mov mov xor mov pslld add sub ficom inc std dec pop pop adc inc cmp loope jae cmp and loope subb sub fsubrp adc xchg iret cmpsb dec jl sbb sbb mov xor pop mov cmpsb js jne add mov ljmp xchg pusha add mov shl inc in mov sbb mov jns mov js pop cmp and lret mov add dec mov cmp mov inc stos loopne mov repnz iret faddl push or add outsb fcomip test (bad) out popl push in (bad) pop adc and adc add stc adcb add ret mov mov add adc pcmpgtb fstps or je pop add or scas loopne pushf subb lahf pop ds jne jge bound out je cmpsl mov jle test add adc xchg hlt mov call ja and cmpsb xchg out dec mov dec add sahf arpl mov lods stos clc inc rorb js xchg mov enter ljmp and mov popf mov add movsb dec insb (bad) sti push inc incb add ret dec push stc sub add out sbb pop add iret xor inc (bad) push push dec lahf xchg add add outsb mov enter and loopne xchg ret inc push es addb (bad) popf jmp lock lods sub adc movsb dec push fcoms mov pushf dec aad add stos aam adc xor xor orb fldl ret push jnp enter add mov pop loopne pop xchg (bad) enter jl lock dec out dec hlt jl loopne mov sbb nop clc pushf or ljmp adc cmpsb loopne push test pop test add sub push pusha inc push lret push inc scas xadd (bad) lcall add xlat lea jecxz xchg (bad) push test mov sub movb xchg scas es or test add (bad) inc jecxz push mov rcll dec xor mov mov push and fdiv inc cmp sub mov movsb dec jecxz xchg popa push push lods js lret or lret adc add pushf sbb dec pusha js jmp cmc adc shl and sub or dec leave mov push cli out ljmp xchg jg inc sarl sahf push clc and or push add out shld jmp in or inc es test and ds or fwait sbbl sbb cmp cltd roll int mov pushf stc les ljmp mov or xor pop mov lock leave arpl mov adc mov sbb mov add cwtl sbbb dec pushf jns call sbb jl add adc pop into add adc mov xchg je push (bad) dec sbb fucomp mov movsb (bad) test cmp jmp sysexit lds stos sbbb add pusha adc sbb dec pop jae int3 cmp push push ljmp bswap adc mov push mov leave and movsb hlt icebp dec into adc dec sub cmp jecxz sti and stc adc mov push je sub mov mov jmp xchg xchg cltd lcall or sti dec lahf jbe lds inc inc and mov add jns pand cmpsb sbb dec scas adc rcll inc push dec sub mov add push mov lds adc nop and mov cli xchg jge cmp cmp shlb das mov push sbb mov jo cli push fnsave mov es pop js mov in (bad) loopne lcall xchg add add cmp inc inc xor and mov xor sbbb mov sbbb mov add out insl xor jo lock inc jnp mull add sti clc pop mov cmpsb mov mov xchg sahf xchg adc sub adc pusha adc fs test mov iret roll andl mov push adc movsb add pop sub pushf lds mov imul cltd push add push pop sbbl sbb je add adcl int lahf rcr add add cmp test fstpl stc fsubr and add mov dec hlt jp push aaa xor int3 bound ljmp ss test out fnsetpm(287 sbb push cmc cmp cs gs pop divb pop cmp arpl movsb xor lret fnsave rolb shl jae cltd into mov pusha pusha pushf add rolb xchg int xchg cmpsl mov cmpsb das xor push mov inc (bad) mov fcmovnbe (bad) dec jmp ret jnp mov pop push test testl shrb (bad) loope enter shrb xchg push inc daa (bad) or inc aad out mov adc mov js cmp fisttpl out stc mov data16 jbe sub pop inc (bad) test xor push adc (bad) rolb xchg dec lahf sti inc inc rorb mov or cld inc jp add ret mov dec and fs or shlb cld loopne pop adcl push nop popf jge,pn push fs jno adc nop and and clc (bad) dec jnp add adc inc mov incb aas inc sti orb or and or lret loopne sbb sub mov sarb mov lock mov or inc ror pop iret test adc xor adc dec mov sub lahf pop hlt mov dec fnstsw movsl add jl movsl mov fmul xchg (bad) lock dec lahf pop mov rcrl pusha and sbb fs mov xchg add loop jo add inc hlt aam out imul and sahf mov int3 out inc dec add out mov or push (bad) jo pop push xchg and push mov fmul adcl int (bad) leave out cmp sbb cmp jnp xorb xor push xchg loopne movsb mov push jl xor mov stos icebp out or inc clc adcl loope and (bad) dec sbb icebp insb push xchg mov adc je cmp fs loop in adc out mov cmp or (bad) mov cmp cld add jg lds mov cmp dec pop (bad) loope and loopne sbb in inc mov lcall je add movsb fwait ds cli add sahf loopne notb (bad) loopne or and lods ficoml outsl add add mov dec or shlb pushf mov mov add es fcoml rorl jne mov fdiv add inc outsb arpl rcrb (bad) enter adc mov cmp popl adc add dec push add bound rclb xorl jge add xor inc and sbb pop dec cli addl sub pop push add int3 or mov subb sub mov mov lds fisttpl clc sbb add ret fsubl nop add leave lret jp shrb and test xchg xchg pop mov pop neg (bad) pusha cld and icebp int adc pop jo mov in and jecxz test pop (bad) es pusha xor dec lea add leave popf ret push fadds pusha mov lods xor adc mov or mov xlat inc movsb adc sbb mov cwtl rol xchg sar fildl push inc jae dec mov mov outsl cmp jecxz subl loopne es cmp in xchg pop adc add and (bad) stc sub or sti sahf in leave lcall lahf mov mov cmp adc pushf xchg pop hlt sbb adc mov add mov inc test add lock mov rol sti cmpsl add sbb mov std push mov and add das scas stos add movsb icebp pop jle push pop sub xlat nop pop inc and mov fs bound inc inc jecxz ret mov jge sub cld add mov leave xchg lods adc dec (bad) rorb sbb hlt out or push pushf arpl lret dec daa and je mov sbb dec outsb lock fsts mov push lods add lock dec cmp mov mov mov pushf cmp inc gs inc rcr leave call mov daa cld add jmp outsb iret sbb test jo and jbe mov xchg rolb jo ja pop lock mov and mov jb add daa (bad) mov imul mov popf mov aam jge pop icebp cmp mov lret or sar (bad) adc btc inc xor pop cmp or jo jl mov pusha sbb inc jno adc pop js inc imul mov out loopne fnstcw lret dec xor out insl mov mov ficompl cld test lock jae jle pop mov es pop mov add in fwait push xor loope out add adc push cmp lock jmp inc pop push add cwtl jl and cmp daa and stos mov sti aas add jge xlat push ret jle xor mov es nop mov lock cmp or test mov ficomp lret add test pop add add in int and inc fwait mov loop mov inc in scas sbb lock mov pop cmp cli leave sti and pusha jp sub inc js add jo mov or fbstp pop jo sbb stc inc xchg in (bad) (bad) idivb iret ja mov call push in xchg xchg mov iret and ljmp and push div jb dec xchg sub inc adc xchg mov add lock add push dec and and xor jle add sub jae dec fs inc inc adc les pop mov pop dec out int xor fwait inc add sbbb pusha inc sahf jg pop and sub xchg add mov xor cmp pushf out sbb add cmp dec in sarb pop std mov add pop (bad) fwait cmp dec xchg cld push pop stos inc cltd ss cwtl or lods dec push test adc call in nop cmp and bound push popf sbb movsl pop nop hlt lret pusha jae mov cmp test pop test add dec jmp mov loope lds sub daa cmp jle outsl out outsb inc add ud1 cmp mov fimull aad aam adc movsl jp les lahf int3 push imul adc cmpsl movsb inc cwtl mov adc pop mov or outsl pop add aas inc or stc lock (bad) lock adcb (bad) dec jl add pavgw cmp add mov sbb cwtl adc (bad) push pop adc dec sub test shlb and aam sub outsb xor pusha sbb add sbb xchg add push inc adcl out push arpl dec add or stc pop pop js rclb cmp inc xor add mov dec mov je andl sbb add aaa bound sbb inc pop shr test or mov cs cmpsl push push rcrb pop outsb xor xor add andl mov inc sbb (bad) out js fistpl add add cmc push test xor or sub enter in xchg xor xor imul daa fisubr repnz es or push cld pop fmuls int3 mov xor push pop fninit loopne mov es or daa mov add add cmp cmp cmp sbb xchg add test test push mov mov fwait mov or and sub cwtl cmp rorb cwtl xchg popa add aam mov repz xor lcall pop adcl cmovo push mov mov scas ds lcall mov sbb or cmp mulb inc push lea sub in jp mov outsb sub xchg fmuls pop add push push and jp ret popf mov cmp pusha add sbb addl sbb add jl mulb (bad) mov ljmp sbb loope mov fimul nop dec ljmp shlb jle push jnp push xchg add fs aas pusha add mov sub popa xorb jae jg xor lods lock push add sti cld test cwtl lock xchg add lods sbb and xchg jl orb mov and les fildl add repnz xor shrb add adc mov jl mov cmpsl add ja jnp ret lods imul jbe dec aas dec dec pusha fwait pop xor pop jns pusha cs xor in add cmp jns dec add jge outsb ficom in or xchg out xchg fnstsw pop push and adc push xorb mov pop je add je (bad) repz push in mov testl mov or jbe or cmp leave sbb ffreep or sub push add loopne fmul xchg rclb mov shrl jbe shrb js push ret adc inc xchg xor or (bad) sti faddp xor sbb or xor push dec sub push loopne pusha push pop scas cmpsl insb xor push push mov lock add pushf jne or loope dec adcl xor insb data16 mov adc clc and mov cmp push or mov clc fwait les xor push xchg das data16 into enter call mov xchg xorl jmp dec popa nop sbb mov xor sub cmp adc xor mov dec inc push or mov add es push inc add sub inc push shrl add andl cli jns je sbb cwtl (bad) in lea and or adc pusha sub add push and push pop fucomi inc popa add xor test xchg mov sarl (bad) es inc add jmp pop mov lret mov ljmp nop mov cmp push call lret sbb push dec pop stc push into (bad) and sub fsubs imul lret rolb pushf push cwtl inc aaa mov push dec test clc add pop cwtl sahf incl pop cld sub lcall mov jae out les lock jle (bad) shll xor out jmp and out movsl es roll imul test (bad) into mov xchg std push pushf dec and rclb xchg cmp adcb cmp and mov or push inc call dec cmp adc test xchg int3 cli xchg or mov cmpsl shl test ret lock mov hlt xor jl add mov stos ds rorb sbb or addl in cmp mov movsb mov aaa sbb push pusha rolb add jge and aam push dec sub push fmull push dec dec call lcall or add jp movsb inc popa cmp ss dec push popa fidiv data16 (bad) cld lock and push adc jge rcrb and dec cmp movsb xorb or andb aaa lods inc xor jmp cmc xor push mov push jl adcb sub xor js pop mov add cs cmp jg mov (bad) mov mov leave sub lods mov xor add mov pop ret push dec or popf sub or add and outsb pop pop cmc or cwtl push add xor out pop add jns test or pushf xor in inc add mov icebp mov out ret testb inc mov dec sbb paddb orl mov fisttpl lret pop incl xchg inc js (bad) xor push add mul jle dec jne aas mov les out lods testb adc cmp in loopne shr xor inc jle dec std xchg sbb dec add movsb hlt or subl or jmp sbb sbb outsl push adc (bad) inc jl cmp inc add in mov add fsubrs xchg dec mov sbb xor insl add add push xchg mov cmp leave add add mov inc sbb xor lcall or test mov inc loop jne std subb or fdivl pop loopne (bad) fdivr push mov or xorb ja push lock pusha outsb rclb ds lock clc mov rcll pusha add sbb xor daa nop adcl mov lock cld or sbb inc (bad) arpl mov mov inc pop sbb inc shr cmp xchg and sarb adc sub lods mov cmp jo loop mov jb cmp (bad) je cli jge jl (bad) xchg xor mov call adcl and add fcmovbe icebp add mov rcrb xchg or cltd and pop mov movsb xor in mov fnstcw sbb loopne aaa add inc jmp and inc xchg cltd (bad) mov inc mov adc testb notl xlat sbb fadds bound mov mov add add test xor and mov sbb or inc sub (bad) cwtl jno outsl das inc cwtl loopne in inc iret push bound and xor pusha or adc icebp mov ds int mov jno add add or imul (bad) and xchg and xchg push jb (bad) and sbb mov pop inc (bad) add mov fsubs inc jmp mov mov repnz lret mov fadd mov xor (bad) repnz dec push mov and (bad) and xor mov mov ljmp inc add pop cmp cmp pop dec and pop sbb adc (bad) mov mov test jle insb loope push push add mov pop (bad) out pop nop xor push imul cltd nop pop sub fisubl sub daa sbb pop rcrb int3 sbb xchg and add ja aaa mov push pusha cmp mov push mov (bad) repnz test adcb xabort scas xchg mov leave rorb sub adc xor cwtl loopne fisttp roll mov push mov cmp nop xchg mov mov loope test dec jb lret xchg and mov mov pusha dec cmp sbb stos and in sbb bound cmpsl jns loopne push mov les jg rorb sub sar push sahf daa mov imul xchg or push mov fcmove rclb sub push sub shll xchg add loop sbb ds pop push addl sub in repnz rcrb scas mov xchg iret ret (bad) lock pusha sbb push inc std xchg mov adc add loope dec jo add lock (bad) xor dec dec mov pop in add jmp or pushf cmpsb cld add ds push fild xchg jae les mov dec test or pop (bad) roll push and push mov gs cmp jmp dec ret sub dec popf cmp adc aam pusha test lock adcl test leave enter sbb mov daa jb push pavgb insb sub cltd xor imul inc inc dec inc movl mov or push or ljmp xchg mov cmp xor mov aam int3 nop xor dec xchg movsl sub mov cltd mov or add inc mov xchg fadd cmpsl or add jmp out xchg arpl sub mov jb add xor mov push loope xchg add sbb lret sahf mov mov fs add decb add cmp nop push dec adc imul dec and cld (bad) pop movnti xchg push leave stos call insl lods dec cmpsl cld jge out dec mov clc (bad) int mov out jle pop jo inc leave add push mov fs rolb cmp cwtl pusha test mov mov mov or push in shlb jns aas hlt mov (bad) xchg ja fdivl jmp or xor addr16 push lea and sbb and mov inc lcall fnop jle add cmp push add add dec test aaa daa sub or push mov sub shll popf mov (bad) push pop push enter cmp inc add clc sarb add bound mov arpl shrb mov call pop cwtl push psraw aam (bad) jnp jbe add in mov ror inc cmp int3 add jbe adc mov arpl test test sbb aad push push pop (bad) fwait into mov cmp stos std mov add jl js or dec sti xor mov cmp adc and cld pusha xchg pop sbbb lea dec loop pop or addl in cmp popf aas add int3 adc cld loop ret jp hlt (bad) mov jle inc sbb push addl int3 push mov push in fwait out inc jbe inc shrb cmpb push jge mov add and call jl jo pop pop pop jle les push rolb jle mov add repnz xchg mov pop and dec or hlt push dec jecxz push jo in jns pop dec sti aaa movsb adc adc add dec ror aas (bad) cmp enter push test xor mov mov cmp xchg popf xchg aam sub sbb inc loopne sar jns add (bad) inc aas fistp in dec addl or mov pop jbe insl adc or sub pop ret dec pop nop fsubs fisubr xor push iret hlt sbb mov xor or and in inc mov push push lds mov js cmc bound call push add dec fmul add sbb jg movsl sbb inc sbb pop push ret cwtl imul adcl push adc mov sub mov clc popl cwtl pusha popa push xchg adc test loopne sti push add sbb mov mov repz out sbb loopne ds sbb pusha aad sbb add repz (bad) repnz pop and sarb xor dec mov or sbb lods (bad) dec xchg popf addl push test outsl rorb mov js xchg shr jno or xchg adc dec add dec jb cmp inc mov rorb pusha push pusha int3 out jne add out fstl jae int xchg dec out add aad sub in add mov jne (bad) xchg pusha (bad) test call mov enter push in and sbb push inc loopne stos inc insb lret ret mov lock inc xor dec pop mov push mov mov fsincos andb add out sbb mov adcb adc push sbb mov add mov ja cmp add call cmp adc or shr fdivrp add dec movsl mov mov adc pop mov stc (bad) add add inc sbb mov movsb mov adc sti push addb cmp jbe cld sub out fwait xlat sub jno add and xor nop pop subb cmp push xor cmpsb cs je mov movsb xor nop loopne insb test mov aad fldl jno jg mov sbb and scas jmp fs nop cmp pop in xchg icebp fcoml push adc adcb pop cmp dec mov je fadds push sub lcall mov adc shrb sbbb mov or adc inc (bad) ja pusha mov inc adc and mov nop mov xchg mov mov cmp inc lret mov in mov cmp hlt mov jo inc sti and mov dec in iret sbb xchg sbb lock shrb push sub xor xor mov cmp mov sahf xchg add imul out push clc push pop mov sbb cmp outsl orb adc fwait iret pop adc add pop inc or jns shlb in dec push pop incl and cmp lea lods out pop pop dec sbb fiaddl int ss adcb and jnp,pt loope dec mov subb icebp pop or into movsb enter shr mov icebp fisttpl cmp icebp adc mov pop or push (bad) sahf cmp add push push or xor lcall aas imulb xchg mov dec pop jl inc jb repnz pushf dec mov dec add xchg idivb clc fs mov push jl shl outsl adc js adc movsb loop pop xor mov cmpb xchg xor jge repz pop aam int3 sub pop rcll push add (bad) popa adc sbb int sub js jo test js jl add xor pop add mov fidivr add sub repz popf push enter sub jg mov repnz mov test xlat mov fsubs fwait nop adc mov test xchg mov inc es xchg mov fmuls xor cmpsl sbb rcl lods jle push lea xor or mov dec add adc das jno loopne scas cwtl rorb rorb imul mov and inc pop dec movsb inc int3 cld incl shrb ffreep test insb push movsb loop or aam dec cmp mov pop push popa xchg je xor hlt sahf adc out inc lods mov test pusha inc js loope dec add repz je int3 adc jecxz pop pop cmp stos xchg lea rolb sub and les jb fdivs jns or xor mov pop add add xchg or stos cmp mov (bad) pusha xor aad repnz xor mov fwait rcrl add jne sbb push icebp xchg xchg in adc inc mov mov in sti adc push and in add dec mov jb xor cmp test aaa (bad) push insb rorb roll sbb jecxz mov sbb nop rorb test js sbb gs cwtl jg sub lahf mov ds nop int enter add fnstsw push negb sbb ret setnp and rclb cmp xor and (bad) dec xlat pushf test or (bad) sbb icebp out bound sub loop push jp stc cmp test pusha cmpsb test inc push (bad) sub add pop into addl test xchg pop adc je popf repz push das andb mov rcrb pusha enter in fwait or scas mov mov wrmsr fsubrs stc ret or dec rolb xor fistpll add movsl or push mul and int3 out icebp push subb into xchg xor sbb adcb js mov (bad) fist xorb scas jbe or adc pop push add popl cmp call xor cmpsb fldl (bad) cmp testb lods jg lret xchg inc pusha loop lods sbb pop aam ds dec popf inc mov adc or repz mov sahf gs cmp jecxz leave sbb dec ret mov dec jo xor dec jle push dec mov (bad) (bad) mov cmpsl xchg dec iret add mov std leave add jae lcall and clc mov cmp pusha in adcl push les addb adc int dec push hlt lock inc call lods imul nop jecxz les cmp add popa mov clc mov mov pop aaa pop and sbb ja out inc jo push dec mov loope mov cli mov loop fcoml adc dec call fwait add inc push loop or lahf add cmp sub (bad) les test les push lds xchg mov js (bad) and adc pop js lea mov pusha cmp fstps xchg movsb clc pop aas loop lods xlat push rcll push sub in test lcall inc inc mov xchg sub ja jnp nop or add add mov mov mov sub cmpsl push (bad) (bad) fsubrs mov pusha add xlat mov stos (bad) pop mov les and jg add mov inc add into jbe adc pop sbb (bad) repz mov adcb inc test jmp inc imul mov addb sbb add mov lods mov js add mov jnp fcoms mov mov or xor test pushf stos (bad) cmc enter sbb (bad) jne mov dec jo cld fcompl mov orb imul test jl pop sbb lea mov stc cmp xchg jnp xor push gs and jno andb iret lea jbe mov mov fwait pop jo dec push shlb xor call mov dec out das stos and adc loopne shrl sahf inc and mov add sub xchg push call add and jle mov jl movb adc push push push mov or fs nop cmp push push cwtl mov sarb (bad) fdiv pop loop add lea dec jle add xor inc stc mov mov lock outsb jg pusha cs (bad) sbb xor pop and (bad) shlb hlt xor sub cwtl cmp push cmp xlat sbb sbb lret jo imul mov dec sub or out push mov pop push aaa nop adc lahf mov in mov aad outsl sub adc in call jnp lcall mov inc (bad) or sti out jle add mov je lock push daa sbb jg pop stos inc call jo dec mov lods inc out or cmp mov sbb add pop push add add jnp and inc repz js pop int dec push sbb sarb in jo fldcw add jno xchg adc daa add lsl cli lret pop nop push mov push or mov inc and inc add push add inc jb stc sbbl aaa test cld xor ds das sbbb jg insb pop mov jnp mov je loope mov adc mov jmp mov mov sar inc mov clc imul outsb or repnz push add (bad) adc mov or std ja test fmull mov lcall insb mov fdivrl add and out xorps xor pop fsubl push repz pop sbb push inc in add fwait or mov jns inc mov xor mov sub sahf cmp aad cltd push js push int movsl pop adc add push xor dec dec nop push in iret or cld js bound shlb mov xor adc mov adc push test mov mov inc (bad) fcoml (bad) nop cwtl jge rclb mov popf adc sub out mov pop in push xchg jb gs test adc xchg cltd cwtl sbb lods test and mov fiadd test pop shlb sbb and sbb add out xchg add nop push cmp jae es js pop ret fadds or les jae sbb add aad iret cmp dec arpl add add pusha xor xor or mov addb shll ja pop out icebp cmp clc adc xor pusha push push in fisub xor inc ja fwait adc cwtl or ror into nop sub cmc pop dec cmp dec cltd push xor arpl sahf push insl mov add lods dec inc mov and test sub imul in mov bound mov pop add rcl push in lock dec jg push pop sbb or lea dec mov inc loop push repz fwait dec adc pop pop (bad) lahf outsl in dec adc sti pop ret aas adc xor cmpsl imul cld pop adc sub loopne nop push sub mov fmulp sbb dec icebp sar xchg and adc je xchg mov add notb jge mov int sbb aaa out xchg dec jbe adc cmp add imul fmuls add call (bad) arpl dec fimul ret and add lcall mov popf adc jo ret pop add lret js clc jae xchg data16 insb pop lret repnz add mov or cmp or shll test out pop xchg adc or cmp jge in rcl test test pushl adc mov bound xor add jae pop daa cmp xchg add cmp ret aaa ror sub in sti inc cmp cmp sub insb nop add scas sbb mov out js add push mov rcrb loopne subb fwait push test dec sbb xlat adc loop mov push add popf fucomp out mov push push in mov fdivrl mov lcall rolb sahf add pop pop inc stc adc xchg movsb sbb jno xor xor pusha lds adcb cwtl sbb adc fs pop out data16 xor clc cmpsl std push inc ljmp add movsb call bound (bad) in stos xchg adc fldcw mov sbb sub int cmp inc mov (bad) cld fadds adc adc loop xor xchg mov aaa inc dec push pop shrb lods jbe and mov pop xor xchg mov cs clc clc popa sbb ds xor rolb push (bad) sub stc js pop popf jmp sub push mov aam pop test add jl mov sub and sub sub or mov aad lds inc cmp adc das lods cli icebp cmp mov and add lea sub mov stos aas pop mov and test cmc push (bad) ljmp push sub jecxz sub mov mov cmp ret mull and shrb aad stos iret rorl in les xchg mov (bad) lds cmpsb in mov pop inc push stos push cmc and in add inc sub add std cmp xchg shl cmp aam rcll jl dec test andb xchg negl clc cmp int3 adc jno and mov les sti dec sub add inc ja cs jge nop icebp inc add faddl xor rorb cmp cmpsl sbbb fisttpl push jg pusha roll sub xorb push test and xlat mov ljmp das mov mov paddb add test call jo dec xor mov out cmp pop xchg pop movl lea cmpb lret cmp ret dec lds outsb stos xor adc cmp mov (bad) cmp outsb test seto cltd inc cmp sub jge and and ljmp dec xor movsb dec jl push dec xchg inc xor clc cmc fistpll push (bad) sbb mov ja add cmp sarb and push leave (bad) cld ret add jne inc pushf pushf je mov sbb pop cmpsb jp and push out push fwait sbb mov rcrb mov dec iret push call stos cli insb sub out lods add movsb loop (bad) ja imul sbbl mov xchg jmp mov ffree loopne xchg add sbb mov add jae push (bad) mov xchg lods mov xor and fnstsw inc sub dec rcrb (bad) les xor ja jae xor xchg fimul fsubrl push dec add lods sbb ret and dec fs dec sti cmc push mov add inc mov sbb lods sbb pop cmp xor pop std imul icebp xchg movb daa lahf mov cmp inc jle mov mov nop add stos in dec sub and int3 (bad) mov mov and movsb add scas inc mov scas daa or dec add rolb jge mov push pushf pop lahf inc popf stc and aaa push and xor daa or adcb stos aas fstp pop in pop sub pusha daa mov test adc sbb pop pmulhw xorl (bad) jno std lock arpl or inc add lds adcl push push xchg inc and mov pop cmpsb mov pop lret orb daa add cmovbe add jecxz shrb bound push add push sub es xchg xchg add neg push jns push xchg addl adc pop inc in cmp mov mov rcl xchg popa mov mov jecxz mov add jle or inc scas jns sahf cmp add cmp out xchg add in sar popf jns add or mov jo cmp add subl movsl push pop sbb inc add pop inc add xor dec lods js lock out pop mov pusha dec xchg mov and test or mov arpl int or xor mov or psrlq leave add push mov outsl insb mov enter or push add xchg inc test pop outsb and leave pushf adc xor adc subb add into (bad) and and add test pop xor inc mov xchg nop fstps pop aam and jl add jno subb pop fisub cmp mov icebp test and hlt pushf pop leave gs push nop xchg add and pop aam sub sub (bad) adc scas mov mov dec fild stc les cmp mov adc andl push cmpsb loope jns or and inc pop int3 push jg xor push inc popa cmp scas in lods or inc ret ljmp adc outsl sbb dec push bound sbb and imul les sbb add sbb iret pop (bad) sahf mov inc jnp loopne call cld cmpb mov inc fldl stos nopl mov cmp adc jbe inc add jmp pop jp jp sbb mov ret pmullw and pusha sbb aam xchg dec fwait mov cwtl cmp cmc rolb cmp outsl cmpsl movsb push or cwtl andb xchg int3 add insl addl cwtl xlat add cwtl push jp mov push push les mov aad rcrl in fmuls cmp ds test adc xchg add test (bad) xchg sub loopne jae cmp aam inc dec add mov test je dec or fiaddl xchg sbb les outsl jo test xchg cmp add or push or outsb hlt inc test or mov icebp push dec (bad) rolb inc and pop mov dec mov cmp popa add scas pop nop sub pop mov add icebp pusha rcrb mov inc or xlat add dec stos dec incb adc xchg ds orb adc js xor call lock dec pop data16 fldt enter add push sbb jne fdivrs cmp adc pushf add xchg aam dec loopne push cwtl push lret jno add jb add fcompl or xchg push xor push aam and inc push lcall xor mov xlat add int xchg dec fldl inc or cmp (bad) ja cmpsl push mov sbb (bad) mov das rorb mov enter adc mov mov cltd add shll cmpsb stos jmp add iret rorb push add addb mov js aas or inc test xor push mov dec test mov pop add call or fadds nop mov sub sarl fmuls mov mov inc popa (bad) xor or add hlt push add div test rcr add cmpsb jl mov lock outsl lods mov andl push ss dec adc mov add les jo pop and xchg cmpl or push mov loop bound imul sbb or outsl pop aam push adc inc mov fadds or imul inc out pop test fmuls pusha pop movsl add mov lods imul sti adc xorl push pop cmpsb inc int3 es mov sub dec js inc push xor cmp push std mov lcall ja (bad) in and leave mov and and int push jno rolb inc lcall inc dec add ret call or lods test pop fs inc sub cwtl cmp xchg sub movsl pop add add (bad) push xchg outsl xchg mov jbe inc movsl gs pop aad int3 pop adc adc push lcall or test xor imul adc lahf rcrb inc add inc int sbb xchg push adc push mov stc inc mov fadds add lods add popf xchg rolb xchg (bad) movsl mov insb xchg push pop push ljmp addr16 mov dec mov and ficomp cmp adc aam inc adc inc jo inc dec push rolb adc outsl lods cmp mov pop test ret loop js es and xchg xchg add sbb loop and mov pusha movsl fs iret (bad) add xor cltd push add sub add adc mov (bad) xor dec jbe call jmp xchg xchg cmp pop dec sbb pop lock nop iret sbb rolb sub add push mov add sbb push jecxz into inc pop cs jb cmp pusha push lds xchg sbb xor dec and add icebp inc enter jmp sbb push mov nop and mov ret fwait xchg rorl inc add popa testb lods outsl pop dec sbb andb push ljmp inc in pusha test pop mov push cmp sub test push js stos lcall sbb loope fiadd add enter sbb mov (bad) or adc inc bnd (bad) cmp xchg iret or add push (bad) xor cld inc jmp inc shlb sub mov xchg aad ret mov xchg hlt fcmovb adc xchg or jle insl mov call inc loopne dec addb add sub mov fsts enter inc inc pop sbb sub sahf mov pop mov and popf add xchg and or add jmp mov in inc mov inc fwait ja rclb gs out push mov ret nop inc or fwait add and xchg sub repnz mov mov lret add push (bad) icebp jo outsb ss xchg stc jl or mov test (bad) jp inc add scas cmpsb push sahf jecxz mov sub leave mov sub js or aas push mov mov inc cmp fwait mov iret test outsl adc mov cmp mov or popa add pop test mov inc xchg movsb mov out icebp pop sub or lahf rcrl in mov adc fldl sub lea or mov insl xchg xchg xchg cld cmp and enter jno add xlat dec jmp xchg lods push sub add loopne dec (bad) das in jge and mov rcr adc xchg pop sbb or outsl in orl cs cli add cmc jns icebp dec inc xor or pop pop (bad) int3 nop mov notl cmpsl add shll sti add adc inc dec mov or jle bound push and clc dec loop,pt xchg pop sub fisttpl jne or fdivs inc lods addr16 shrb add fcoms sti pop add icebp xor xor fcomps or adc xor mov pop cwtl sub mov pushf mulb inc xchg cltd push fnop insb out xor repnz rol dec or (bad) mov (bad) icebp out inc or insb mov lock outsl jo inc jbe xchg dec add mov out aaa dec popl scas pop dec lods dec lret sbb jl jl or pop inc sub xor lret imul xor sub jp push inc stos ja sub add in pop dec xchg lods sub add aad push js outsl jmp cld mov cld fwait mov add sub rcrl adc imul or fwait jae orl dec cmp push xchg hlt ret dec mov add or das nop jo and dec cltd xchg add mov dec and pusha movsb adc adc cmp lods movsb in (bad) pusha or sub out jbe cmp outsl cld cmp aam bound xor mov lret inc jecxz sub aam push mov and ja xlat adc (bad) rorb icebp es xchg dec or je xlat scas ljmp xchg cs pusha push mov mov mov das xchg rol cmp fisubr xchg lds test dec mov dec sbb mov data16 add sub push sub movsb jl cmp inc and xor loopne test and fcoms adc int3 (bad) mov frstor mov lock leave add mov into mov dec cmpsl mov dec and and adc aad lock xchg push in aaa js cld bound adc icebp pusha and addr16 and leave es inc cmpb (bad) sbb je mov push cwtl aas test pop stos and jae push dec loop test les out mov dec test sub fnsave mov or lahf icebp or pop orl push mov inc xchg adcl addb hlt fucomi es add push cli mov pop loopne (bad) pusha jecxz sbb add jbe ficoml and or pop in sub bound adc push std inc test mov test pop in movsb push pusha (bad) fcoms int xor and ret lcall cwtl stos jl addr16 cmp lds cmpsl add mov loop xor adc out lcall mov imul jmp push les push xor and pop ficomp lds mov pop test pop add incl test lcall mov sbb mov jmp jecxz adcl rorl mov scas and sbb pop push mov push cmp inc push and sbb mov cmpsl iret (bad) sub pop addl add add pop fwait mov adc shrl pop mov clc push mov pusha adc jns mov rcrb lock sbb lret aaa inc clc or setge jns push mov popf imul xchg hlt sahf stc mov jmp loopne xorb mov push rolb shlb (bad) in (bad) xchg dec mov imul inc fcom pop in jle mov adc adc cmpsl data16 pop jno es cmpsl pop insb xor adc fwait (bad) movsb xchg imull mov scas and push jnp cmp (bad) dec aam sbb cmp repnz pop adc pop or or add (bad) xchg mov mov jmp jo add out mov (bad) js xchg cmp mov sbb dec cmp mov xor sbb aas push mov aam xor mov push ret nop pusha mov imul push stc addr16 fsubrl sbb pop cmp js incl pusha sub add popa clc add push mov incl cltd pop and mov dec pop insb jmp push aam cwtl add addb je xor insb add jmp loopne mov sub arpl cwtl pop and sbb loope inc int3 mov insl push aam inc cmp push mov iret out pop andl dec jo push sarb jmp jl sbbb xchg mov aas fwait mull sbb pop jmp lea and pop sub aaa add out pop mov add mov in addl xor loop int jo enter sub nop lcall in ret nop mov mov cmp and push jmp lret shlb dec and addl jns xor push cmp jmp cwtl push pusha mov rclb lds adc call or xchg or inc xor sbb sbb ja (bad) or sbb or mov repz mov sub adc mov push xlat sub mov addl jge inc sub in adc sbb push shrl push shl ret mov add or clc or cli add pusha pop jne movsb sar pop dec aaa cli imul cmp push sbbl popf imul push dec sub xor mov in xor adc psubq and mov sbb add ss mov lea (bad) mov leave scas sbb rcr ss int3 add int arpl cmp jo rcrl jge inc hlt loop lcall add jne insl xchg mov int3 orb push cli sbb push dec xchg sbb jbe pushf jne mov mov bnd ret lods (bad) fstp add push dec inc and lock sahf mov in cwtl add nop sub xor xchg leave or mov or xor cwtl cmp jne mov in cld add pop repz push xchg insl jl arpl imul mov (bad) pop push stc insb add mov popa jbe fwait mov mov cmp arpl int cwtl in (bad) cmp or test mov lret xchg jne push divl arpl jno fildl rol dec mov addl sbb jle loope sahf lahf cmp test xchg push push addr16 (bad) jbe,pn nop cmp mov stos push outsl in xor sub mov arpl xchg in sub movsb movsb dec push push adc roll push cmp out add and jbe inc mov adc lds sbb push dec mov jbe sub (bad) (bad) gs or hlt dec lock add out loope popa and add (bad) mov jl lock push add push mov inc sahf push jbe adc loope or aam add xor int3 arpl jmp stos sub fmull push std or dec and adc hlt xor push aad dec dec pushf (bad) push adc mov imul sub rorl push pusha mov cld adc mov push pop hlt pop js cmc jo (bad) add mov shrb add lods jns fcmovnu xor jbe add fnsave movsb dec dec cld into sbb add pop mov imul ret fstpl fmuls xor add push insb aas in add pop push out xchg movsb sbb add mov rclb jbe rcr inc loope and aas in xchg push jns pop scas pusha jmp sub mov lods push rclb jbe mov or pusha les rcll add mov pop mov cmp es mov push int mov mov arpl dec adc push mulb andl in fcomps fnstenv rclb clc dec call clc sbb or andl push loopne rorl imul pusha pop fbld dec ljmp ja dec sub and mov (bad) (bad) ds addl cwtl pushf mov jbe or movsb fs jbe stos ds pop push out mov cmpl cmpb mov mov out xchg pushf pop pusha sub iret in data16 sub popf insb loope xchg mov dec in push mov mov je shrl add jl loopne adc and dec (bad) and (bad) mov out stos mov iret mov and aam add push js ret icebp loope sahf outsb adcl movsl xor pop pop and bound sar pop and xchg andl mov add xor ficomp sbb and add dec popa pop in mov push jne loope or dec js push arpl pusha (bad) mov les scas mov (bad) jmp inc scas push mov sbb (bad) xor test scas or test call insb lahf gs jmp test dec arpl sbb sbb subl cld in add push dec dec xor faddl mov addr16 out or fyl2x mov push aas rcrb in mov add and leave sbb add bound (bad) mov outsb imul push into fs inc in cmp sub inc cmp into push pusha and int or push sti add add in dec jo sbb push outsb or int jmp or cld push inc (bad) imul pop sahf pop icebp rol vpsraw cmp xchg dec inc (bad) insb rcl or xlat mov mov xor xlat pusha or adc in outsl dec or adc sbb data16 test pop sub enter inc xor or xor arpl push je jo pop push mov and adc lods sbb lock xor xor aad or pushaw lods push cltd lods les dec sub add dec lods hlt enter inc in xor cmp lock ds push xor sub cmpsl and cmp mov aas lock mov push sbb movsb cwtl push int add loopne mov lock dec sahf addl jnp jo xor push stos cmp add mov mov rorb add aaa sbb cmpsl inc stos mulb inc call icebp scas int add js cwtl stos ds cmp mov test adc mov xlat add push add movsb add dec lods add and insl push push push cmpsl push sub inc movsb push aad pop xchg xchg rorb sub movsb and shrb lock arpl sub sbb xchg mov sahf sbb mov sbb mov pusha inc cwtl lahf sub ret jo cltd add cmpsl lods xchg shl outsb lcall int adc and rclb les adc mov mov sub jl leave cmp adc xor lfs adc push lods and mov xor push add cmp cmp cmp inc push cwtl add sub cli xor jl add mov sub inc cld mov mov (bad) nop or and lods xlat test cmp add mov add adc out fnstenv fsubrl xchg inc loopne add test or sub out xor add pop lahf decl push rolb xchg adc lods pop pusha dec insb mov fiadd xor outsb nop adc jl insb mov add outsb mov pop push lret int3 pop mov fs test icebp xchg jge and add lds pusha xchg add or jo add inc fsubs mov adc (bad) aam shll cld and aad pop adc mov mov fs jmp inc or inc test hlt es test faddl dec jns xchg call cmp call outsl mov popa xor adc jmp and xchg adc test pop pusha and popf int rolb add xchg cs add push add fistpll push dec (bad) jo push and xchg add inc or scas sub dec test push test sbb dec pusha iret lods mov add sub mov adc (bad) xor lret jge andl jo pusha les mov jp bound les xor nop into mov cmp sub pop xorl fdivp aad and mov and push imul sub jne int3 jno mov in shl mov and and notb add jnp cmpsl add es jno,pn add mov insl xor jb imul mov adc push jo aaa hlt sub sub orl or les adc push dec bound jecxz and mov push sub pusha es in and sub mov lret xor aad push adc das inc xor nop mov inc mov mov lock data16 cmp sub or add test js stos add cld xor jns inc jo xchg add sbb pushf leave mov test push sub inc jecxz mov dec wrmsr adc mul lods push push shlb popf mov add pop push cmp stos cltd nop aas adc shlb and pop int dec nop loopne adc or int3 add jmp add adc or (bad) icebp and js mov sub mov push dec or dec cmpl (bad) push mov cmc mov push lahf fisttp cmp push push (bad) lret adc orl or korw xor es inc or rorl xor insl pop mov pop das jne push jns and pop repnz sbb lods sbb mov xchg jg adc inc add pushf cwtl fdiv adc scas jmp inc lahf (bad) loopne fs cs sub hlt inc pop sbb imul sub or xor add movsb cwtl mov les out fdivr pop adc (bad) and les stos (bad) push dec fs or cmp and xlat xor xchg sbb mov mov nop push sub ret fistl jl sbb js add cmp lock in clc add (bad) rolb idivb xchg add stc pop dec inc (bad) out xor icebp inc imul mov inc movsl dec sahf hlt xor xor adc insb xchg and movsl loopne adcb push dec mov dec aam les mov repnz xchg into out (bad) rclb cmp lods add mov adc in cld pop jo dec das icebp popf dec jno sub sbb repnz mov movsb dec adc xlat dec pushf xchg (bad) (bad) leave sti pop int3 mov push subl cmp mov or in cmp hlt dec sub cltd fs nop push mov jg outsb mov sub aaa mov and mov jg fwait iret push (bad) call dec dec cli adc cmp xor out jo nop popa and mov cmpsl sbb sbb movsb stos or sbb lahf rcrb fwait xor push jmp dec ret nop sub fwait rclb push mov les lds cltd push loope jae or popf dec inc mov ljmp push jae (bad) push inc test sbbl or jns mov jo jns movsb js cld and xor popf cmpb les int add iret xor xchg int3 or xlat pop dec push dec js pop xor mov cmp pop sub imul sti jg lock xchg mov icebp pop fs fbld rclb test js lds inc repz pop andb mov lods pushf xor bound pop dec pop add cwtl and cmp sbbb stos out hlt test dec das push add xchg test sbb jnp cmpsb lahf and test xor xchg mov test mov repnz and adc cmpsl adc pushf aam dec int3 cmp xor rorl rolb xchg stc test xor rolb insl fidivl pusha and cmp add cmpsl xlat (bad) add popa test xor loopne jg (bad) aas push and (bad) pushf push inc sbb and and mov addb (bad) jae dec and sub or test nop or xchg fistpll mov popw mov dec lods inc sub inc dec nop sbb xchg (bad) loopne jns test repnz out push and sbb cmp lret jle add lods mov stos lret mov mov jg sbb mov cmp lahf xor mov pop cmp xchg mov mov notb mov push dec push into inc sub ja loopne scas xor rcr mov sti sbb sbb popa in or and movsb shl fdiv jmp call add mul mov mov and inc clc push adc enter mov bnd sbb and (bad) dec adc sub xchg push jmp cmp bound adc daa sub xor dec mov cmp sarb les pushf lret clc sbbb in sbb add push test pop push syscall iret xchg decl (bad) pop mov mov or fcompl xchg jo jg sbb adc movsb push jne pop loopne sub add xchg loop add jnp dec popf cli fiaddl lret jl mov mov lock inc inc or loop js pop jg ds int3 mov add out fldenv inc into inc int3 push ret rolb pop xchg call add mov xor inc hlt (bad) mov aam mov and jns je,pn les adc shl jbe sbb sub stc add or dec add mov cld cs lods sahf dec pop rol adc sahf push (bad) xor push shrb hlt dec push inc xchg aaa xchg test fcoml mov xchg adc push push ds jle dec aam insb sbb inc mov jle jmp das inc ret cmp adc lods xchg pop push and pop and sub sub lret adc mov ds sbb rol cmc mov mov mov rcll incb or add sub xlat jp sbb imul movsb fs mov sbbb insb dec arpl push in add (bad) stc add ret push lret bound aam call or add adcb fstpl inc cmc (bad) in add gs xor movsb stos leave add sbb test pop adcl jae mov repnz sub pop les jge je lahf rcrb (bad) adc sbb xor in mov add and xchg out or leave jmp mov add addr16 add add mov adc cmp add or rorb xchg sub sbb inc inc cmp xchg push cld sti inc mov mov add mov roll repnz push add cmc shrd jge xchg dec cmpl inc test fcompl dec jl insb ds and test and add jno repnz outsl add mov xchg adc adc ret sti inc in mov cltd or push inc dec (bad) mov xchg or and add mov data16 (bad) shlb inc jns cmp cld add inc loop,pt sbb ret outsl push jae,pt add adc push pop sbb fcomps cmp mov inc repz out lock test out in (bad) mov outsl cld insb add mov sbb inc mov mov loop cltd (bad) fsubr popa mov mov pop xchg std rcll add mov mov add push movsl jno push ja aam or lret and and mov cmp (bad) xor insl mov or pushf mov pop lods jo mov inc and mov cltd mov into mov pop jle inc or or je (bad) mov clc xchg or (bad) loope pop mov adc mulps mov xchg ficompl ret cmp (bad) cmp push (bad) aaa lods adc push or push pushw or add mov subl fmuls cmp jmp es add popa clc mov andb lahf sbb divb mov pop mov or inc test cwtl mov pushf push mov or (bad) pusha mov out jo mov push outsb sub cmp inc icebp in dec in in cmp add les ds push lea or jne add fadd test cmp push pop mov popl daa pop sbb mov stos add xchg and shl adc div cmpsb leave ljmp sbb jns xor outsb dec jg dec sub fdivr inc mov movsb jl mov push jmp jo mov sub jns insb orl xchg mov cmp pop push pushf insb (bad) xchg call lahf inc add xchg sub repnz mov pop and pop rorb jmp jp sub andl jne xor fistp bound cld pop nop jl mov sbb shrb rcrb and mov add notb pushf push inc fisubr testl (bad) out mov xchg sbb xor and adc xor jmp mov cmp xor cmp xchg pop repnz cld popf test (bad) cmp addr16 sub inc pop mov lds sbb cs jecxz cmp icebp cmp sub clc lock push cs test lret cld jl cmp sub cmp scas xchg cmp cmp scas addr16 mov jae jg js add inc mov icebp jg and (bad) test lret rcll jmp popl lahf sub add pop faddp shr sub cmp lret dec and out add icebp je jnp adc pusha push add xchg mov pop cld cs push movsb cmp out sub pop cli loopne pop jne jl aaa movsl aam mov push jbe sarb cmp insl je push and mov jecxz (bad) xor repnz xor repz add pusha xor std ja sbb loopne rcr mov cltd inc popl adc cmp out nop inc xchg inc es inc in and fs add mov sbb scas jl ss or mov call (bad) cld out shrb and mov adc inc loop mov or (bad) leave insb jp and or sub test sbb mov add pop mov add ret fwait addr16 mov jg test inc test jecxz adc arpl stos inc leave sbb cmp ret jnp dec xor lock insb push loope push aaa adc add dec cmpsb jmp xor insb cltd dec cmp mov inc pushf fdivrs fst andb jmp pop mov int fsubl add inc dec xchg je push mov in outsb cmpsb fsubrl xlat mov ds jmp (bad) mov inc add jns dec dec js lret lods imul (bad) mov sti in fs ljmp repnz js xchg ret mov in add in popa add and jp add mulb add add movsl pop cmp das sbbb ds mov jl cmp call sbb push jle lret ds sub jg push enter shrb inc sbb popa rolb inc clc fadds mov dec sbb add cmpsb bnd lret or push add lcall and and push sbb mov xchg insl ret add lods dec sub clc dec add mov (bad) xor jne and xchg ret sbb mov mov inc jne pusha inc or pop mov sub jo lock jg pushl insb xor sbb (bad) into int3 xor in mov test xchg push inc in jo inc jb pushf mov sbb inc jns pop xor pop icebp jmp and adc xchg or (bad) dec faddl insl add ret mov and dec dec aam int3 pop jmp cwtl adc ds mov enter shr mov mov inc xchg and es arpl push add sub js (bad) fcoms xchg mov (bad) arpl nop movsb arpl or add inc sbb sub adc cmp shlb fnstcw lret int3 cmp popl int3 cmp push xchg lds subb push in mov shlb loopne,pt fs add lock inc add aas xor mov setno repz jl fbstp add push pop je jl lock dec push (bad) mov insl and or push pop jae cmpsb push jnp leave mov sbb push mov cmpl jl sub add mov fnstcw push in adc mov shlb dec inc clc leave mov adc (bad) (bad) insl xor mov das add or enter divl (bad) jo dec lods dec pusha mov (bad) xor mov add enter or sub stc xchg leave mov mov sbbl xor out add pop nop insl es (bad) je stos (bad) dec push pusha push jmp mov mov (bad) je or mov sub and jns insb ds mov push pushaw sbb sbb aam add dec adc inc movsb xchg dec cltd cwtl arpl ss mov mov fs xchg cwtl or jno or push xchg mov pushf add mov sahf inc out sub (bad) in lea cmp (bad) out and shrb fnstenv add dec je add push xchg ror push and test (bad) int (bad) out pop cmpsl add xorl daa imul cmc xor push (bad) data16 pop lods jns or dec lahf dec dec inc jae or push cmp xlat ss lock movsb cwtl add inc int mov je test enter dec and dec add jb jne jb lret jne cwtl push mov push inc xlat xchg pushf xchg jge fs lahf push adc sbbl add mov jo add subl fstps or jg cmpsl cmp mov aas xlat (bad) jns and or push jo jns cmpsl (bad) xor insb cwtl add les xor roll add sti insl cmp rclb add pop lea jo adc rclb pop mov xchg mov lcall and dec add xchg mov arpl (bad) or int3 adc in sub add push dec xor adc sahf mov or xor and data16 jmp xor ret (bad) jecxz mov inc (bad) jl rcl test rorb mov pop inc hlt mov sbb js adc in lods (bad) sbb jmp lds fsub pop xor or jb mov fnstsw subl xor adc mov popf mov xchg push or outsb xchg mov pusha mov cmpsl or adc mov xchg xchg cmp dec jmp clc xchg loopne xor addr16 adc push cwtl or cmp or jg inc out or mov inc (bad) mov inc icebp add adc movsb jl clc loopne fistpll cwtl aam pop fbld lret frstor mov xor jb and sbb push add mov xchg pusha (bad) adc sbb nop add push push jmp add pop mov add and sub (bad) mov xchg pop push push mov add in push out xor pop inc add add fcmovbe scas ret pop scas jmp rcrb enter sub mov clc or gs rclb pushf test out popa mov pop and xor lods jmp add mov movsb pusha lock or mov ret sbb pushl dec jnp and cmpsb inc or clc mov stc aad sbb hlt faddl aas call loop in add jecxz mov xor cwtl imull add fadds mov add lahf pushf inc or add je jo adc (bad) xchg inc pushf imul jl (bad) stc in push mov inc push orl in dec imul cmp or outsl mov xor icebp orl out in js mov sbb (bad) iret jl adc push xchg adc add mov pop insl mov enter and sub add mov sahf lea orb (bad) pop xchg mov inc xor lock add mov xchg push dec cmpsb into scas jbe bound adc mov adc ror mov push and in repnz pop stos add movsb les add add sbb movsb stc jae inc daa adc rol dec inc add lds fdiv (bad) cmpsl pop and sub in addr16 aas loopne (bad) jle push mov push pushaw inc andb pop and int3 out jno push inc pop insl lret lock sbb dec xchg add stos jmp clc xor nop or rcrb rcrb (bad) xor mov in push inc mov rorb sbb add nop (bad) and movl int into mov addr16 in nop rclb xor sub push pop popa outsb mov mov sbb mov das sub pusha cmp cltd repz pop jo pop sahf add lret mov ret dec jl mov dec je xorb es push dec addr16 or dec add adc ja stc inc rorb xchg pushf pop leave int3 add add cmpsb adc pop lods es xor push out mov adcb jmp fs daa clc addb jb add enter aam loope (bad) or rcrb jecxz cmp and pop add push les movsb faddl cmp fdivl mov push nop movsb mov adc pop icebp jmp add adc mov xor xor add mov sbb adc inc jl jecxz int3 xchg push mov in imul xlat inc xchg dec mov push pop mov fadds xchg xor cld cmp add out pop add mov jmp (bad) xor cmpsb (bad) dec fwait cmp addr16 js adc xor push in xlat daa fucomp add jmp sarb pop xchg (bad) popf data16 (bad) (bad) int jecxz xor xorb and xchg (bad) pop rol shll movsb jne das cmp jle jo sbb ss and inc mov inc jg js aaa loope and mov cmp outsb cwtl mov daa sbb loopne setbe in adc shlb cltd pop sub xchg cli (bad) repz orb jle lret cmp clc addl idivl adc and or add add jno nop (bad) jge mov inc add cmp dec addl dec add xchg test cmp sub pushf add popf psrlq and arpl mov daa add leave jae add dec mov mov xchg imul or fs call sub fmul jecxz mov (bad) cmpsb push (bad) arpl and arpl push xor dec daa aad jg in pop rcrb out test pusha cmp call pop or out add pop cmc pop pop outsb nop lret (bad) gs adc pop ficom fucomip loope,pt test mov push or jns inc adc sub outsb lret xlat aaa fistpll cwtl mov mov adc cmp ror data16 add mov xlat popa or cmc or mov cmp cmp push repz and sti add pop (bad) repnz adc cmp daa add jo sbb mov inc adc bound movsl cld push pop das ljmp sbb negl inc add adc xchg fcompl and scas xor in test loopne (bad) cmp cld mull adc sbb dec or adc pop imul roll jne in (bad) jle dec push ss cwtl sub xor fistp cwtl add jp jno mov xchg pop mov rcrl inc sbb faddl inc pop jo or adc add push xchg push jl xor cmp push cltd add jno orl jae pop dec sbb adc add add inc push xchg dec or arpl loopne clc in xor xor mov mov push push orb pop add popa push sbb mov mov cli or inc mov cs int push dec fcmovnu jb mov int3 mov out mov lret sub in in mov (bad) enter (bad) inc les fmul add push xchg (bad) mov dec inc add ret lock jp je mov orb mov cmp (bad) pop sbb mov cld and pop (bad) xchg mov roll cwtl cmp dec mov mov data16 xchg test push or inc shll adc out and in in das pop adc outsb mov cmp ds xchg adc arpl jle xor addl xchg and dec mov jo jb add or iret (bad) out and adc jns shld and repnz adc (bad) pop or ds lcall adc test cmp dec dec rcll lret or (bad) xor mov push push sbb cwtl lahf sbbl js dec xchg pushf fsubrl scas xor scas jge and sti repz push jecxz rol mov mov push in mov sub xchg add bnd add jo fdiv clc mov cmpb out inc add sbb add inc iret nop roll push adc movsb ss jb xchg js xchg enter jle push psrld (bad) lock pop repnz or sbb push pushf or pusha scas ret mov add xchg push ljmp hlt pop adc or movsb add dec and cwtl jge mov mov jecxz fcompl ds mov or adc ljmp pop pop or add cmp insl sub or adc inc xor arpl jns cmpsl shlb mov mov in add jno pusha jb pop imul inc (bad) xlat jl cmp mov aam rcrb jne adc mov fldenv jbe mov sbb mov fcoms mov fadds fnstsw jno add jns mov je fadds add call (bad) jg and jb add jmp and shll and cmp pop adc mov nop les inc pushf pop rcll hlt or and mov xchg mov or out sub xchg add subb dec and and test in ror sti movsl roll cmp push repnz mov dec cmp xor dec in sub aas lds mov fisttp adc inc movsl cmc cld mov jo sbb nop push add xor shrb aas leave fsubs fsubs lahf mov mov mov les cli lds cmp jmp inc or jae cwtl jl rol xor pop test adc iret int inc test cmp cmpsl pop xlat xchg sub mov mov das cltd (bad) lds iret pop xchg cmpsl js cld xchg cmp adc fs cmpsb mov adc add repnz adc pusha sbb fs xor push sbb xor shr jp (bad) xchg hlt push repnz xor out or inc xor dec js adc in inc scas adc xchg xor pop pop rolb inc jg cli aaa nop js cwtl test mov pop loopne loop adc nop pusha jmp add inc xor (bad) negb mov call inc push dec (bad) mov and inc inc mov in jnp dec jl jb add insl push add fdivrl enter dec pop cmp mov pusha mov add in push cmp inc add push js xor (bad) or in or mov add mov mov mov xchg mov inc (bad) adc pushf cmp cld out sti adc js add dec xchg mov enter aad push pushf jo inc cmp js inc xchg fild jmp and push cmp fmull and jmp call or lret dec jl cmp jle mov pop lods xchg xchg sbb nop or push add aaa dec cwtl jne bound insb (bad) notb daa jmp push insb and rol adc lods inc cmp pop pop testb ret lahf mov mov xchg pop jae or adcl cmp dec or lret dec out push pop add out dec xor stos or cmp jge das xchg inc push lret dec mov rclb pop test (bad) int3 in push cmp icebp adc add mov lods add shll addl xchg push sub scas lods jb adc lcall jne dec aas jae mov or push adc sbb pusha add adc push lods hlt dec je xchg inc xor and xchg adc inc cmp movsb cmp call rcll push pop pop fsubl in nop or mov xchg ret les sub and or and popa stos inc sbb popa in add pop lods fimull call mov sbb add cmp js xor jg outsb jns (bad) add mov xor repnz sbb les add enter push test dec lcall and andl mov pop aam mov xor add pop xchg cmp and ret in inc insb jle fcoml loop (bad) je push lock sub sub add in rorb fwait push daa sbb xchg mov add push pop sub cltd mov aam jle call mov add sub hlt lods lds mov rcrl sub daa sub mov subb or je adc mov mov jae mov add arpl adc insb jnp jb and jmp push or or jge in cwtl xor push fbld or and lds andb andb setne pop xor inc pop cltd xor and adc loop outsb pushf adc mov stos int3 and pusha xor push dec or fdivl pusha mov out jge push cmc nop mov push and push ret int out add pop cmp pop add and xor or push push call add insl out sbb fcomps hlt icebp pop xor sub movsb pop adc jb push cmp xchg (bad) ss or rclb mov jne daa aad ds jg insb and je dec cmp add or movsl mov (bad) ret test jp mov add hlt add xor ds movsb dec insl mov adc dec inc sbb andb dec mov dec pop insl stos dec and inc mov push scas les shr cmp inc cmp xor add js xor inc sub mov add mov (bad) and and add cld dec paddsw push lds inc ret and xlat add sbb push xor lock cmp sub sbb or mov adc test mov push into jp dec hlt test pusha js pop inc ss push jo inc xchg jo test mov es movsb mov xor fs cmp add lods icebp nop inc mov push inc add adcl loopne push std aam cmp or arpl leave pop or mov adc int or add mov aaa cmp data16 jmp outsb loop add add or pop pusha inc sub cmp enter enter jo add xor inc cld (bad) mov lods ficomp ds mov pop mov mov push mov (bad) sub adc cld or mov cmp iret enter test (bad) enter scas mov sar ja lea jg jp add xor das sub loopne in cld cli push hlt jb cwtl push pop sahf mov push ret mov repz cmp jl cmc leave dec inc test mov sahf test adc adc mov pop pop lock add lret dec cmp add fbld int xchg cmp mov (bad) sbb add add xchg pusha push cltd in push pusha mov inc push jecxz inc push test loopne add add fadds jl popl dec (bad) in xor popf dec ficom loopne daa loopne mov xchg mov inc cmp nop cld xor xorb push push xor mov stos xor add lods add xchg mov mov mov dec jg lods (bad) mov mov mov cmp call inc mov test fs adc dec hlt rolb test lret fs lret cld adc call jnp lahf inc fs cmpsl mov push push insb out and push mov subl dec jl lock shlb insb jg sbb pop adc cmpsb bound sbb sub pop push stos sub test xchg pop add sti rclb fldl orb in adc mov mov mov cli lret inc add std aas and add enter aad sarb push pop cmp add xchg test dec cli add inc rcll mov xor xchg add aaa stos sbb jo aad cmpsl mov inc push jmp push add add pop out adc lds adc call add incb popa mov mov add inc pushf adc enter jl sbb mov jne ret mov in es test (bad) xor jns push mov adc mov xor ja (bad) inc shlb push mov imul adc negb jge xor aas and cld adc add out pop xor dec addb mov stc and mov clc data16 rol or jae mov adc cmp daa cmpsb (bad) fdivs lea xchg add inc inc sub mov stc mov nop int lahf shr xchg aam or cwtl add jns mov mov sub int in ljmp jl pop xchg sbb and lods dec mov lcall push add add bound sbb sbb add and js cmp cmp mov push scas ljmp jp sub in push je movsb insb pop cmp mov add lret cwtl push aas sti pop add mov clc nop add inc cmp xchg mov mov insl push mov adc cld add and dec sub pop pop mov stc and stos fs add lock sbb test int3 int3 cmp lds les jle loopne sub sbb iret lods jmp fs cmp cmp mov dec ss jmp inc and and (bad) sbb shrl or sbb pusha sub popa loopne or test jb aam inc dec inc and pusha cwtl mov or sub mov push mov or js clc add pusha mov sbb and dec mov sbb outsb push cmp cmpsb lock jb dec xor lods in cltd clc cmp push leave scas pop iret mov sbb out (bad) fsubs adc sbb dec jmp inc mov sub xlat adc dec cs sub sbb inc ljmp loop aas xchg adc mov jo inc adc jo push and addr16 sti mov adc dec out aam add dec cmp cmpsb xchg dec mov mov adc movsb mov add jl sbb stos mov dec adc cmp negb int3 ret inc push insb mov stos xchg mov aam imul jg incb aam mov aam cmp and std push les sbb jb inc push lods dec repnz add xor (bad) (bad) xchg and cmp in lcall and xor mov mov cmpb lret loope cmp add xchg aam and test icebp jecxz lahf xor sbb sti bound in lds xor mov les fisttpll jl enter sbb and mov jge mov mov mov and or lret jl adc jp pusha mov repnz mov mov clc xor mov lods pop inc xchg loopne cld repnz cmp rolb xchg lods int3 push push sub push adc pop sbb aam js or add push fildl cld aaa pop xlat add int es or inc mov adc std out push dec int mov loopne push xchg jo cli adc cmp xchg inc inc xor out xchg leave xor xchg movsl mov jl cmp add sub rdtsc cmp push push mov push pushf cwtl pop jb mov jp and push in mov test push push data16 mov mov js dec jo xor jl sbb dec into pop mov addr16 test or adc sbb les add (bad) jbe ret and es ds push int mov je sub push in push dec loop sbb pop call sahf cwtl xchg adc pusha sbb xchg test insl push xor lret push xorl andb mov pusha rolb xchg sbb bound mov (bad) icebp jno movsb add in das push in movsb dec dec fiadd sti sub (bad) leave in mov inc movsb fist xchg fs and pusha ret push inc sub cmp movsl add (bad) or int3 call int3 push movsb cmpsb test lods or daa adc repz les mov stos scas xchg push aas cld nop pop add dec outsb sub das ds inc mov and jle jb mov mov jns (bad) stos in inc xchg and xchg xor jge inc dec daa adc (bad) sbb ss out mov movsl cli fcompl dec mov add xor pushf movsb scas (bad) jnp add jl je dec jns push xor mov pop mov ja lds in mov xchg int3 enter sbb xchg add mov mov add mov les pusha cwtl cltd lods add or testl mov jmp hlt xor lahf sbb nop sbbl xchg fdivrl fcoml stos dec add and dec fildl pusha cld adc lods adc (bad) jb and lods add iret arpl dec pop cwtl cmp ret into imul xlat movsl xchg xchg push push pop dec sbb sbb add push repz lahf mov movsl push test das std xor sbb dec andl dec and and add lret mov es sub adc dec push jb stos es cli insb cmpsb adc add mov cld andb sbb dec xchg push dec pop fisubr nop in mov ret or lock add clc jb sbb dec push mov insb test inc sbb and imul cmp int3 lcall call loopne movsl dec adc cmp movsl repnz lods sbb (bad) lods adc jno add jbe cmpsl notb xor aam sbbl add sub (bad) mov add negb xor into out lds cwtl mov pop pop and sub data16 and mov rcll cmp aam sbb dec dec cmp or ja jno or lds pusha jp and (bad) cmpl and les je addb aad inc out add aas cmp adc inc sti es cmp sub and sub mov jns je call cmp or xorl sub dec aad leave mov add add or stos (bad) mov mov and adc lods test sub nop mov mov jge mov out (bad) in add nop lods std jl inc andb mov add and (bad) fiadd mov fwait mov pop dec inc into lods mov arpl sar sub cmp lods mov pusha add int popf ret ja and test aas push mov jnp push aam test scas addb jne sbb out add dec xchg into mov mov jmp sub popf das xchg leave adc ss mov add outsb mov sbb mov pop insl or push sbb (bad) push add sar push push popa dec dec jne ljmp fisubr inc xor xchg add xor or xor mov add mov pop loope pop getsec inc test int imul cmpsb sbb lods xor add iret mov movsl or test aaa xchg pop xchg adc push and int3 lock add icebp lret dec insl rolb push jl pop push xor xchg fs pop sub push aam jl xchg das scas pusha xchg sub jne adc or inc repnz pusha add inc lret add sbb inc int lds push mov and pop add sub mov (bad) mov mov pop pop arpl dec les push lods popa and cmp clc ret xchg cltd add sub sub fs pcmpeqw sub rorb call cmp adc (bad) fadds push in stos push mov das fsts out push mov orb std or jo mov mov je xchg jl fs (bad) cmpsb jns pusha dec xor push push loope dec cld xchg inc pushaw jns test xor sub cs lahf xchg bound push bound and xchg and test dec adc dec pop clc or orl inc into popa fsubrl mov adc movsb add inc inc add mov enter xchg xor clc setne push xchg sbb inc idiv enter les mov lods push or (bad) movsb lret test and or cwtl addr16 orl xchg mov mov mov mov int3 pushf cmp xchg popa adc into sub sbb into pop sbb push sub sub add roll mov (bad) (bad) mov fistl push adc xor push jne inc add sbb sub push outsb pop pusha add or js push inc rcrb sbb jmp cmpsl inc or cmp adc out mov lds add lea add adc ja inc imul insb andb jg push and inc mov (bad) jo add mov mov sbb add subl sub repz xor and test lock adc and xor ds rcll mov (bad) and sub stos mov mov dec mov xor pop mov fmuls fcoms and lahf cld (bad) inc test lret inc pushf xchg loope mov or dec adc and lods jmp mov fs orb adc and lods xchg rcll rcl mov gs scas hlt sub les or push lock and sub mov pusha in cld ss aam xchg (bad) int daa xor add mov jbe xchg and pusha jl test jns push es add dec cmpb cwtl lock push and mov sub add cmp hlt pop push fcomps inc xchg jbe dec dec mov je sub or xor cmpb test xchg mov (bad) iret xor mov pushf dec mov sbb jno inc sub into sbb hlt nop nop lahf test sbb xchg sub pop icebp mov lds adc bound lcall fucomip inc mov add mov jmp cld rcrb pop jecxz mov and mov ljmp lods lods jl cmp or loopne aad sub xor dec sub xchg mov ret and aad fsubs adc or mov mov push shrb int out adc push or pop loopne pushf push and xor sbb je add inc push jl fidivrl inc enter xlat ret arpl dec cmp sahf sbb inc fsubl stos pop cs mov add add lahf sbb into (bad) xchg cld push sahf (bad) xchg jno inc push (bad) int3 movsl sub xchg push xchg call adc mov push fmull call or add popa and mov adc insl (bad) and loope or cmp cwtl push pushf lods adc mov xchg push xor out shl push xor mov lods pushf xchg adc xor je rorb mov push test sub dec pop sarb push movsw in add mov rcll jnp xchg into xor out mov cld cmp (bad) pop mov adc test sti les cmp add in sub mov fadds adc sbb in adc scas xor pop les inc decb or loope addb imul les add xchg sbb call ret dec lcall in loopne adc dec add mov or lock dec enter cld negl xor sub and cmpsl stos adcb inc and lock fsubs push sub add add mov test fdivrl jne js loope test inc inc faddl ljmp sbb mov nop sahf in ret std in mov cmpsl mov orb mov add ret (bad) push inc mov cmp ljmp mov inc mov add das roll daa into test sarb enter hlt and int xor jbe js bound scas xchg mov in dec inc ds mov mov outsb test std sbb lret call into push xorl or stos rclb les dec pop add xor xor test dec add in xchg xor sbb dec lock adc rcl add mov mov xchg xchg xchg pop test dec jg mov add adc sbb cmp pusha sbb pop jno xor ret stc jne and int3 pop adc fdivrl push bound and or mov into mov (bad) sub cmp rcrb aas add lods aad stos xor fldenv add pop div inc cld nop sbbb push adc hlt imul xor or adc lcall or sbb aaa bts jl or or dec pusha jl add inc mov pop push sbb and cmpsb xchg addr16 pusha ret orb and or stc (bad) jne cmp xchg mov pop movsl dec push lods adc into shrb (bad) repz faddl dec mov ret push xchg jno adc and lods and lahf xchg mov into imul inc (bad) aam test sbb push xor push mov aaa test xor mov cmp xchg mov add and pop xchg sub and hlt push pusha push mov sbb out stos mov push cltd hlt jl and inc in cmp add mov dec add cmp enter aad into and mov add sbb xor mov or fxch xor gs mov sbb jge add jg xchg movsl xchg lret add je andb push ds add setg das mov and dec icebp sub and mov xchg xchg call gs xor enter nop aam xchg and push adc sarl test mov imul lret mov add and cmp insl pop cmpsl push mov movsl loopne mov pop ret add insb jle gs xor add fsubl test into dec xchg add je addr16 or notb hlt sbb or push call or cmp outsb fsubrp ret lods sub and cmp adc (bad) and push test in mov movsb test sbb (bad) pop lds in jl enter stos inc xchg sub mov pop lea sbb roll pushf inc aas fchs aam xchg xor mov inc shrl dec mov sbb dec xor daa mov arpl ss mov aas push call xor mov les test mov daa pusha sbb lahf mov mov mov xor mov or jns movsl inc mov (bad) xchg pop inc mov sahf push lds cmp aaa or mov mov xchg inc and orb sub xchg in or lods enter pop add mov popf repz mov fmuls inc repnz sub (bad) mov add cmp jmp lahf add mov xchg mov mov js xor cli xor adc scas pop xchg dec movsl sbb inc in add xchg adc lret and jns adc and pop iret mov lods inc subl mov test lret inc sub mov xor jl into dec loopne or jo sbb add push cwtl orl cmpsl das jne in add inc push dec pop and xlat into mov xchg adc mov push and inc jle adc jmp sub sub xor (bad) inc lods (bad) inc and dec pop or andb xchg cmp inc dec fwait into imul jo mov cld xorb xchg ja sub int jo pop mov cmp rolb mov in xchg jo push int outsl add mov popf (bad) int3 xchg stos dec sbb cld or fsts xor xor jecxz push mov (bad) add and inc inc or xlat adc aad jo add into aas cmpl int3 lods das test cmp dec mov (bad) cmc stos mov mov xchg in mov rolb mov cwtl sub push mov loopne xor adc ljmp push cwtl stos sbb dec fwait mov insl fmull (bad) lock inc push add dec scas dec xchg fs aas shrl cmpsb ret mov or movsl lods (bad) icebp fadds mov sbb into push dec push je les popf in and sub adc and and pusha test js pop mov mov sahf incb push dec cmp (bad) xor add cld push pop xlat ror iret scas add push push mov or imul in or or mov sub mov dec and mov adc lahf popl ja loop dec lods into hlt mov add dec adcl mov and xchg dec mov (bad) in xor sbb push jne and andl jecxz sub mov je test xor and xor and fsub xor and mov icebp (bad) mov fbld popf add aad dec jecxz dec inc or cmp adc xor mov jnp mov mov bound stos adc bound enter inc mov test sbb in sahf add push lahf xor sub pop add aam popa cwtl cmp fisubl sbbl inc adc fmuls and mov (bad) dec lods popa popa das mov test ds cmp jge icebp or mov dec cmp mov movsl pop icebp outsl xor xchg (bad) rclb dec mov icebp mov subb mov add push rclb xchg (bad) stos or popa sbb adc add add imul mov cli int3 jl aas out xchg inc add sti add or sub push sbb dec rcrl xor add adc mov xchg cmpb mov push jle pusha sbb pop add cwtl inc mov adc jo add mov push popa dec cmp cmpl mov es pop dec add xchg pushf sub xor cld cmp sbb and movsb sbb insb or aaa iret push dec pop addb nop call aas imulb sbb mov dec adc lock and loopne (bad) out push xchg xchg sbb sarb divb adc nop test (bad) xor cld add out jl xchg and adc cmp nop out test nop mov and lock test fucom lret cmp outsl repz or orl enter add inc or fist adc or adc add pop mov mov popf or fsubrs inc mov test xor lret mov jp sbb jne mov inc orl insb or icebp and and mov stos (bad) adc add aad jbe dec push rclb leave mov bound pop jnp jb add inc dec dec add mov repnz adc js pop rclb cwtl mov sahf fcos push loope loopne push mov pop inc inc add test call and sarb loope adc cli mov push rclb cltd dec add xchg xor xor test test hlt inc xor pushf mov jl gs test insb cwtl sub popa adc ja enter sub pusha sub fdiv mov (bad) push xchg push inc pop (bad) push sub pusha xor mov sub mov bound enter nop cmp test (bad) shlb cltd test cmc nop and pop mov ret jb loopne hlt sub fadds xor cs sbb sub dec icebp lret dec add fnsetpm(287 ret je inc mov cwtl adc or sbbb repz lds and js add jecxz test nop inc leave adc lods hlt mov cmp xchg mov (bad) and arpl dec sbb addb mov rcll out ret inc cmp (bad) icebp and mov sbb mov mov xchg xor jmp jno test dec pusha xlat call jmp shrl add mov sahf cmp mov sub enter inc sbb sub fisubl fs inc js add (bad) push adc add adc pop dec pop imul dec test dec or popf cmp fs mov cmp in sub push cmp imul pop dec mov mov or fcmovb adc mov sbb popf xchg add sbb pop jg bound aam inc or dec mov ret aad dec push loopne inc ss push mov sub scas mov arpl in or push lds (bad) (bad) or adc or jo xor cld mov call (bad) inc in or addr16 adc pop mov gs popa fstpl jge lea adc fisttpl add dec sbb jge (bad) sbb add jo insb shlb aaa mov (bad) call insb (bad) push push pop mov loopne sahf and cmp add outsb lea or pop adc jge xor or push push adc std push mov gs mov jle mov push stos in cmpsb inc je lret js mov cld and add mov push jns shll mov aas adc cmpb push leave mov add (bad) insl shrb dec pop cmc mov or sbbl in ret cli (bad) js cmp lds (bad) pop push inc cwtl js popw jmp (bad) dec xchg xor and ljmp pop lea mov imul ret add or jp pop femms les out gs push enter mov dec jmp jnp xchg fistl pop jge insl add insb das addb sub adc in jl add insb shll sar insb xor mov adc or ljmp out or fs aam ss and mov sbb into inc pop xor mov sarb add and into pop mov inc out mov jge mov or pop jnp rorb or add jns push into dec jo cmp sbb arpl jge mov js add sbbl rorl mov js arpl rcll rorl inc aam push mov and cmp add push popf daa dec add neg aaa (bad) mov ror popa jecxz pop int3 xchg pop andb fdivrp daa call mov inc pop fisttpl insb dec sbb add mov loopne xor nop pushf rorb mov push push (bad) lret adc test and jg xchg add js bound das stos sub or ds xor int3 dec mov adc cmpl inc and adc and (bad) xchg bnd jno or cwtl fadds lret std int cmp repnz mov pop mov inc das in fldenv mov lret (bad) push add jo push sub lods dec outsl xor or addr16 or pushf push rorb sub insl push ret lahf in add adc xchg adc inc xchg mov jmp loope mov cmp push jne jne cwtl mov cmpsl jae movsb dec add test mov adc push dec fcomps mov mov movsb mov jno xor dec shlb mov and test (bad) cld imul rclb orl mov jb cld sub cmp int jge lret and stos out pop pop mov jge xlat ret add aaa mov fs cltd cld sbb jno pop and lret adc or pop push scas jmp nop xchg std test sub add and lds jo aam xchg call and adc or add xchg int mov lods inc mov xchg pop std pop mov cmpsb hlt lcall mov push mov add add sub (bad) mov icebp test cwtl iret and mov add ljmp add push into adc dec lock add pop movl (bad) xor test loope dec (bad) add mov (bad) or int3 mov jecxz mov aas int orb dec fnsave loopne decb aaa mov dec inc cmp (bad) push xchg xchg mov rorb mov inc loopne sub call xor mov aaa add and sbb adc fs je xchg mov adc lcall adcl movsl dec in sbb cs inc clc pop add mov std add into jge sbb sbbb push push sti mov cmp xchg push adc (bad) mov adc test jb add and cmp mov nopl mov sarl adc pcmpeqw cmp jmp sbb or mov add cmpsl imull mov add mov push (bad) xor js lret daa mov js rcrl jl rcll sub aaa xchg mov add popf or cmp lcall mov add xchg pop xlat insb jne xor add jge or cmp fist dec push inc jl sub xchg pop rclb sbb adc push in jecxz adc fmuls mov jl add scas dec xchg and hlt fldl lret sub popa hlt add and jo fwait jmp add inc out fs enter push adc lret push mov hlt ds jae outsb or add lcall mov sub xchg sbb sbb sbb mov lcall popa xor mov cltd lds mov add arpl xor shlb xchg xchg insl aaa inc or mov mov shlb sub pop and xor jl xor mov xor add lock and and add mov aam in test push push cmp or add push (bad) lock jbe push push cltd arpl add cmp test add enter mov push sub (bad) xor add shrb lahf orl dec push inc mov push popa je push out into add sbb (bad) icebp cwtl push sar shlb sbb adc lods es in jne add and pop loopne hlt ja and popf js inc int iret mov sbb movsb jns and cmp xor call in das mov xor insl ds add cld add pop mov lret pop push pusha xor jne clc aam hlt es add xchg adc clc adc aas lea xchg mov adc sub xchg js js inc pop pop btcl fnstenv adc (bad) lret lock test mov popa dec cmc dec lock sbb lahf xorb add pop jl rolb inc imul mov int3 icebp loop mov or loope mov outsl add lahf (bad) bound sub jo mov pop cmp jae imul pop push sub rolb lods push (bad) jne (bad) paddb loopne dec mov mov xchg add out jmp mov test (bad) loopne add cmpsl inc push push sub ret xchg arpl cmp outsl daa sahf inc sbbb fnsave sub dec mov jle xor pop mov ficoml fs mov add dec sbb mov (bad) mov cli jl loopne adc fs es out add pop loope scas push sub pop popa gs loop stos fs xchg fimull aam addr16 mov ljmp fdivrl add xchg jo sub lret mov mov call dec inc xchg fcomps xchg dec push out (bad) xor mov (bad) dec xor and pop fisubl jbe insb test arpl add sbb jo sub adc cmp xlat enter cltd lcall decl xor (bad) xor jmp or pusha adc jl mov ret sbb push test out xlat sbb fwait cmp or mul xorb mov jg sbb cli add insb stos lea lcall je pusha and mov add mov xor xchg test aad mov lds mov or add mov jle hlt adc mov sub pushf loope or add pusha aaa jmp leave adc add xor mov loope pop loopne pusha pop sbb stos sub add mov ret lock or cmp add ljmp imul out push add xchg mov sbb addl sbb xor pop pop lods call and repz push adc test (bad) repz or movsb test xchg rclb cmp in adc fisub (bad) xor or lcall adc cmp pusha and mov mov test add mov fdivrp pop add pop in mov adcl loopne mov nop out fisubl clc and mov cwtl mov (bad) or pusha shrb cs jp push jmp shrb sbb push push jmp push and sub dec xchg loopne lock xchg jo push test mov mov aad add mov aas fadd mov add sub cmpsb xlat add pop insb inc arpl sbb xor mov jp sbb jge add push sbb add popf adc int push push jg mov mov into std add test faddl adc inc rcll shlb lahf sub andl inc pop jmp mov lret enter xor pop sub cmp jo aaa xchg pop fsubs add outsb addb and and fwait and movsl in mov push fcomp push data16 clc lret xchg push lds repz andl push sbb push xor mov mov mov push inc add das les mov or int3 fisttpl ret jo (bad) or adc cmp cltd add cld in test jle sbb into jmp inc ret (bad) push pusha xor mov xlat ljmp in ljmp jae push pop scas lret aad addl dec jae mov test add shlb scas mov mov push int3 dec mov pusha cmpsl js rcrb cmp mov sarl or dec inc mov inc movsb mov mov adc out sbb sub data16 mov imul fwait pushf push in outsl and rclb sub loop add mov bound out cmovns push cwtl add xchg stc dec xor cwtl je jmp or adc pop inc adc int3 adc (bad) pop sub lret decb cwtl add add addps add sbb popa dec sbb lds pusha inc rorb push loope mov xchg clc sbb pop (bad) mov int3 movb rcpps adc dec insb roll dec pop xchg popf jae stos (bad) pusha (bad) sub push adc xor xchg fstps xchg aaa cld pop sub mov je xor call shlb test pop dec mov cmpb xor (bad) push enter sbb fcompl mov in int3 and push pop icebp cmpsb and and imul js push push or rcrb mov pushf rcrl xor inc add xor pusha cmp sti sbb add (bad) (bad) ror in dec sbb and or sbb dec dec jne loope pop cmpsb add adc and aas sub mov dec pop adc mov in arpl fsubs add xor incb popf adc adc incl repz sbb pop pusha xchg pop jmp fcoml test inc js add addl xchg lahf add push testb call lods cmp ljmp adc popf or pop add rorl fcoms xor push add sbb mov adc xchg daa lock xor (bad) and loopne xor rclb pop xor xchg inc push pop pop xor sub inc xchg fmuls (bad) dec xchg push outsb push daa dec pop es push rorl dec inc pop and and cwtl outsb xchg dec call loopne enter pushf xchg xchg inc rcll lahf mov test lock adc dec jl jmp mov fdivrs jl pusha mov jno pop rcr push xchg arpl add cwtl scas jl cltd lcall cmp adc bound jp jae mov lods add xchg mov aas cmp enter and xor sbb mov pop es pop fs or nop sbb js (bad) pusha lock and jns shll adc loop or in adc bound int3 outsl jo mov sbb in or inc aam or out and xor test out movsb dec es push dec cmp cmpsl cld pop mov pop pop cmpsl add sub arpl inc adc enter cmpl inc xchg inc sbb add fwait xor xor jo scas add daa dec jecxz xchg repnz rcrb adc les adcl add xchg int3 sbb adc inc fsubrl sub rol add cmc stc mov xchg les clc jne dec aaa mov mov pop mov inc dec les mov fcompl ret test jb mov jmp mov or xchg xorl jnp jno push ja sub scas pop pop mov int3 add xchg inc sub jb roll lea push xor mov add mov or or stos aas bound push push adc inc cwtl fsubr cmp mov enter jl add and mov addb inc add push add sbb int3 lods jns sub in add and or pop stos sbb and mov lds and mov add inc mov sarb pushf adc aaa inc dec das cmpb mov adc in mov dec rcrl gs std movsb and add push fmul hlt aam push pop daa sbb sbb (bad) pusha movb sbb push inc add sub (bad) in (bad) sub nop rol popf shlb adc in mov popf push bound pusha stos or mov or fnsave loopne sub push add pusha imul mov push sbbb sbbb mov sub mov mov enter dec fsubl aam add fistpl pusha push xchg es pop push nopl add call adc lods fdivs inc jg jbe push or movsb leave xorb inc pop inc inc les sbb xchg xor mov adc test jp fidivl adc sbb fs sbb dec je xchg fimul pop jmp rcrb imul push inc adc lret jbe jp sahf sbb mov sub stos js das xor sbb stc cmp adc or out hlt dec xchg mov pushf test dec sarb add (bad) cwtl jmp add les cmp add icebp test dec or les mov push mov pushf icebp test mov sub ljmp xor add (bad) sub ss mov cmp and enter xchg daa inc mov pop stos daa or enter addr16 pop lods in mov adc les add cmp xor sbb es test dec leave xchg sub aaa adc sbb into cmp shrb jmp push inc inc mov (bad) mov insb aas and in cmp pop es push aam adcb cmp add ficompl xchg sbb stc mov push add int3 in mov push sub bound xchg jbe add dec xchg or subb fcomps hlt jbe and loope fadd popa cli xchg lret xchg sub andl rclb std (bad) lcall rcl xor scas pusha jge and lret and or movsl loopne in shlb and lds pop lret inc lahf outsb adc sbb lods sbb dec dec repnz mov add mov cmp pop dec fisttpll clc adc out or xchg cld sub add popf and ret push sbb and lcall add mov sbb andb arpl pop pop xor shrb enter outsl mov inc cmp add cwtl add adc mov aaa jb xchg xor cmc leave or fldl arpl lcall inc add mov jl int xchg add das sub shl mov sub clc xorb (bad) mov xchg cld pushf sub cmp (bad) scas arpl ds fwait (bad) in sub mov jecxz popa or inc ljmp adc dec xor fincstp jnp add cwtl into mov and push and (bad) fisttpl dec add jae and (bad) div cltd jge adc mov daa jp or pop add or ja xor add mov test dec call mov enter mov rol mov mov adc jbe cwtl dec sbb nop cmpsb pusha ret xor leave and cvtps2pd loope test fbld xchg mov xchg nop or xchg out push inc js cmp out jecxz pusha add aaa jp add rol push popf sti adcl and lret cmp inc mov and push dec inc inc mov and and add mov and or pop or inc mov cmp sbb dec sbb inc test lds sar inc fildll pop (bad) mov arpl test movsb or fcomps lahf (bad) or fwait push jp test lret dec (bad) je xorb and add sub adc xor lahf and xchg (bad) add dec dec jp xchg mov cmc jbe pusha mov adc push and in rorb sbb fcoms xchg mov stos add loop mov pusha or icebp cmp ss mov add cmp add sub lret sbbl (bad) mov call out ror mov imul aad hlt or push pop fwait movsl mov mov xlat lea loopne cmp in jb add fs (bad) mov or out dec add enter insl mov data16 and push jg adc pushf mov cmp adc cmp sub mov jl stos or add sarb xor repz mov (bad) fdivrs xchg xchg call test or push mov lahf dec cs out pusha push nop mov mov call cltd add inc aas bound mov inc jo add lcall and cmpsb aad inc test scas or loopne push sub xor mov pop dec daa pop jo je jbe push jno das jno inc dec add inc xor and cmc pop sti in ss adc inc in nop dec push jo lock aaa pop mov adc or and and or sub loopne xor fwait sub lcall xlat or lds shlb addr16 mov and pop insb out sarl sub cwtl mov or int divl bound sbb rolb xor mov xor pop mov inc and pop pop icebp cmc lock add outsl lret add add nop pop insb stos (bad) sub mov pop sarl sub or pop xchg adc pusha xor cmpsb outsl enter xor imul and scas pop test lret (bad) xor rolb loop mov sbb ret fs clc pop add test dec jl push orb cmpsl cmp cli adc outsb icebp mov pop add fs jo repz add xchg int in jecxz add add pop mov mov fldln2 testb rorb cmp xchg jno add pop mov std pop mov xor jnp add xlat push jo or jl add lds add mov add flds jecxz pop jmp call (bad) pop (bad) jno xor sub jl loop addps pop lret inc sbb push jo adc mov insb cwtl je loope xchg xor in imul data16 insl fild push mov push pusha add jg xor jb shrl repz or mov mov jb cmpb addl insb sti inc pop mov push lods or lret rcrb fcompl pop adc push rcrl cmpsb sbb lods push sarb call lock test add fs mov dec jp mov or sub pushf xchg add (bad) stos adcb cmc and enter adc invd jmp lret inc clc insb movl in (bad) xchg int3 inc jg test mov add outsl cmp sarl movsl nop xor push add sub xor nop enter (bad) push add (bad) jne enter inc int jne call outsl aad push pop jb loope shl fs in add mov push mov leave int stc inc sbb dec or push cmp (bad) scas fidivrl and movsb adc xor mov stc loop cmp movsb pop fdivrl xchg cld inc sahf shr shrb sub or mov popa xor cwtl lods lock imul fstl stc add cmp bound sbb sti scas insb loopne push add vmovaps ds mov repz rcrb sbb inc outsl inc movsb add mov dec popf inc push jmp test lock rolb pop adc push inc addb add sub in aam push (bad) push inc movsb add xor jmp add jl iret and out add std (bad) jb hlt sbb mov icebp andb gs pusha jae jle subl add xor add jo mov movsb cmp dec adc or insb mov xor xlat add outsl ret add mov or push lcall xchg sbb enter cwtl push cmpsb jo and fs xorl pop inc clc xchg arpl add push sbb jne rcrl dec mov aam mov sbb gs cs mov stc mov xchg cmp add test mov cmp nop les data16 lock sub adc fisubrl insb rolb xchg push pop push (bad) (bad) lds add mov inc insb roll xor or jle inc xor shl jb push xor pop pop rol xor dec out enter push dec icebp xorb sub cmpsb or and pop rorl sub push (bad) flds adc and (bad) dec push xchg loopne add nop add xor xor pop stos and xchg adc (bad) jo outsb add sub imul sbb push xchg (bad) icebp stos je or lret out add xchg repz adc add adc shrb ret imul sub lret flds inc jge int mov test cmp mov ret pop mov and jae pusha cmp fxch jns das lahf out aas sbb mov cmp sub dec dec or xor push nop xchg adc inc xchg mov jg xchg nop mov sub fidiv pop mov and (bad) fiaddl mov xchg lcall add psubw add or inc inc fstps insb hlt addr16 data16 lret cmp and les cwtl imul arpl cmp fcom (bad) xchg push inc aas xchg adc in (bad) lods rolb into mov inc sbb jne les outsl inc sbb clc scas test ss jno test cmc mov mulb ss xchg shrl push (bad) jae aad sbb dec sbb mov loopw lock xor lock xchg test xchg xchg push sbb or dec xor add insb enter sub fisubr push and jo mov add js rcrl fsubr add es nop dec rdtsc or cltd test cmp sbb cli insb add adc adc ficoml fs inc xor mov loopne in push and dec or es dec inc lods inc push (bad) jg add loopne cwtl or or inc mov stc cmpsb jae xchg inc inc adc in or push in mov rclb hlt stos int3 jo cwtl (bad) dec fwait mov xor (bad) loopne jb sbb adc adcl mov leave bound lods fs jnp test enter movl unpcklps adc push shrl mov and (bad) (bad) cld push mov or fdivl addr16 push inc aam cmp stc jae bound adc and add xor or cmp add and push mov cmc xor dec loop inc nop sub mov inc pushf jge inc add mov (bad) frstor (bad) xchg adc (bad) aam push or nop push xchg int3 inc js sub push xchg into cltd pop stos in test pop fwait and or add adc int3 and movsl jae mov inc das cmp xchg pop mov bound xor and inc fldt xchg aam stos cmpsl push pusha inc mov cmp dec (bad) loopne push adc sbb dec repnz adc xchg inc jecxz addr16 mov rorb cld pop mov outsl add push rcll jl cltd push adc and dec in shrb push cli mov insl mov jb xor loope xchg cmp pop lock popf jns aas (bad) mov out and std icebp jg adc das pop fs loope out mov popa sbb rorb xchg add movsb inc push leave repnz subl mov inc xchg cld dec push call inc jbe xor cmp xchg mov out inc push adc or add mov xchg mov les sub sbb adc movsl or adc mov lds aas subl imul sbb sub cmpsl or mov pop in fiaddl push pop xlat mov xor push repz sub inc cmp mov imul xor (bad) sub mov cmp xor les push xchg mov cmpsl xchg mov push aaa jo enter inc icebp push lea and insb add cs sub add add call pop lret add push aaa shr jl add andl jmp cmp mov inc in cwtl sbb loope or xor jno (bad) (bad) jo shlb mov push xor mov shrl xlat mov pop cmpsb xchg or push pushf mov jmp add movsb cli adc inc (bad) aam fimull pop loopne movsb dec jo sub adc hlt and insl movsb pop cmp wrmsr push mov (bad) pop fwait fs cmp inc push add fs les inc mov adc mov xor dec add xchg shlb adc mov push aam cld dec int push rcrl sbb negb rcrb test sbb cltd aaa adc cmp jo inc add int3 mov xchg out in jne add cld push flds sti jmp xorb pop push cmpsl repz lods jnp nop je adc cmp outsb mov mov pop push (bad) nop push sahf sbb push (bad) decl push rorb xor mov lret mov repnz sub xchg enter jae jo xchg cmp xchg jno add push mov outsb flds es adc pop adc pushf flds enter mov addr16 xchg dec shrb xor and std push ffreep test test repnz rol dec and cmp push add add sub insb cmc inc lcall jae (bad) push mov shl insl jno fnstenv fidiv fcomps or ret mov loop mov push pop and pop adc inc or adc or add int xchg sbb pop cltd add push cld ljmp adc lds add fimull add push shl movsb jb (bad) sbb cld mov cmp scas nop pop and aam fisubl adcb cmpsl std bnd jno sub push and (bad) cld and pop jne repz push js or cwtl in inc or test sbb or fsub in fsubrs roll adc imul xor sbb cwtl dec and and mov xchg mov mov mov shr std sar or fcoms add imul rorb xchg or cmc xor cmp outsb (bad) movsl cwtl xchg ret pusha adc cltd mov stc or or in pop ret inc xor lods push je sbb rclb movsl lret dec repz movsl pushf mov dec loope js xchg mov aas sbb cmp dec int3 jl iret les pop ret fcoml leave sub ror add packssdw xchg in inc adc out dec cwtl and cld rol (bad) sbb adc xor imul mov test add call xabort dec sub mov mov push xchg mov nop xor pop add mov clc pop mov js loop inc and in (bad) xor jns sub xor jl stos aaa std mov rol inc fs adc dec ficoml loopne xor dec (bad) lahf add ror sub (bad) inc adc or jge xchg and cld mov xor icebp call rcrb inc mov rcr in aad pop xorb rcr pop insl push mov dec aam and jo call or fcoml movsl or mov (bad) (bad) mov xchg lods mov adc push int3 xchg add nop jo mov inc loop cwtl push add push fsubr fistl inc or mov js stos pop add cmpsb sbb enter add lods leave xor out out shr adc xchg sbb jl fsubs insb mov pop enter pop mov aam fs les inc sarb nop pop test xor adc std inc dec subb xchg inc sbb icebp mov xor sbb cld in xchg sub pop or in dec aas jg sbb inc sbb out popl cmp call sub xor call cld mov jb lock jmp jnp repz pop push xor fimul pop push fcoms nop or (bad) xlat nop dec inc in xorb push paddq out adc mov (bad) dec imul test xor jle lret aas adc mov enter clc pop clc (bad) inc call shrb movsl pop js mov xchg notl add clc mov fs and add rcl dec rclb mov push add fwait inc pop sbb mov pop xchg pop mov xchg call dec loopne pop es push add out jno lret lods fs stos mov mov jg sbb cmp push out pop add sbb push jle cmp mov daa add cmp insb in imul aad inc fsubrs dec jnp shrb fbstp mov add cmp (bad) js add fldenv push test jge roll mov nop js adc fisubr (bad) daa movsl sbb jne jno add das push cli adc or inc dec sbb add std or or lahf addr16 dec ds orl add add adc mov xchg adc xchg (bad) pop and cmp xchg aam or daa (bad) and pop movsl clc cwtl pusha cmp sub dec cmpsl mov inc ror sub popf mov es stc dec xchg ds test and mov sbb add push rclb xchg sub faddl (bad) lock jmp in mov ror or xor ss mov add adc cltd rcrb lock cltd insl adc cmp xor out incb adc pop fs jmp mov mov loop in and jl mov icebp xchg int hlt pop mov and movsb jo mov jb add pushf xor or jo xor imul xor lods bound add fs mov cmc mov push cwtl sub lods xor and call jno inc rolb jmp mov aam jb inc mov les pop repz and loopne (bad) mov psllq stos mov cmpsl loop stc xor lds cmp in je push std out notl roll incl fidivr (bad) cmc inc imul movsb outsl cmp rcr add std add mov xchg in fs push sarl in icebp in rcll pop (bad) hlt cmp mov mov add add nop mov test rolb dec mov xchg or jo fisubrl fcoml cmp fsub add in arpl or adc cld ret cmp std test inc inc lock cmp mov sbb cld sub inc xor cmpsb and jb flds cmp orb rclb std cmp fsubs xchg xchg ds cmpsl and aam mov test les adc mov dec fdivp cld mov and loope (bad) cmp loopne or stc (bad) imulb push xchg cld dec inc push or sub icebp mov mov cltd cli movsb fcoms clc dec iret push nop add mov jne push inc sub loopne cmp stc pop xchg daa dec cwtl orb data16 mov das add mov out movsl shrb lahf mov jnp cmp outsb push enter jne addl mov mov stos add cmpsl mov test sub xchg shr imul fmull leave cmp dec xor mov std push mov mov in popa push out mov in cmp cmp cld push lock xor loopne mov ret scas das loopne (bad) mov les test gs les sbb mov arpl rolb cli ret cld add mov push xorb (bad) mov stos aad rolb sbb nop aas jno jae dec cltd fs std fmuls cmp cmp and outsl xchg cmpb jge int3 sti pushf mov push shrb or sbb sbb sub inc repz jns imul (bad) dec mov and cmp jp jo lock cld sub test sbb and test and inc push lea sbb ds (bad) jae ja mov xchg (bad) test add dec rcrb repnz mov xor xor ret cld add (bad) fdivp in inc push cmp and sub imul call push (bad) in stos cmp pop add dec sbb mov stc divl add jl xor xor and pop std jno xor das test lds dec in add add cmp fdivs push les inc xor (bad) mov inc test rorb dec inc sub loopne pop popa jo roll or adc outsl sub adc lods fisubl cmp pushf rclb pusha sar das and or mov xchg aaa cmp imul dec jle push push addr16 and cwtl mov stc xor in push cmp ss pop mov test cmpsb push add dec das enter int3 int test loop push adc pop dec and pop cmp out xlat dec dec (bad) lcall jo test or push mov add cmp pop fadds and add movsb inc inc dec sub sbb or insb add call test dec push test pop in aam push sbb pop dec clc lods xchg adc test ficompl cld inc inc dec and sbb mov aam dec cmpsb pop test decl sbb int push cmp jo dec mov cwtl xchg jl mov ss in pusha das (bad) pushf pop adc mov cmp cltd add push and cli pop fdiv sbb sbb add xor mov jmp loope mov mov mov add incb pusha cld in jbe and and sub push ret enter add xor jle dec (bad) mov pop add lea roll ja insl xor leave add jnp xchg rclb je cs and enter inc mov cmp andl popa loope inc mov call fwait sub add aam data16 adc adc aas add test clc fisubl xor cmp jnp cli add mov dec sub sbb xchg bound test dec dec and aas inc and inc pop repz cwtl mov leave adc movsb mov in adc and js inc dec or faddl sbb pop mov mov andl (bad) cmp xor lods dec xchg loopne jne sub or mov push test arpl dec pop aam rcr sbb pop mov mov jo fistp adc adc je hlt sbbl cmp sub dec adc mov loop adc dec test jns outsb xchg mov (bad) xor fmull aas mov inc xor or enter (bad) xorb sbb mov inc add xchg sbb add std sub insl jnp push jbe adc adc and mov adc mov adc xor mov jecxz sbb dec push pusha mov rcrb or (bad) leave insb clc rorl loope mov (bad) (bad) sti and cmp mov cwtl bound pushf pop and gs and inc das adc sbb add jecxz mov fadd mov (bad) repz popa clc call inc pop add pushf mov mov or push mulb aas cltd enter pushf push and adc lock mov dec mov or addb cltd lds iret and mov add pusha sub jae dec push pop jl add mov stos pop mov cmp mov pop pusha inc adc daa mov mov add or push mov or nop fdivs push data16 fsubrl or lret lods mov sbb push fwait push fmul xor in sbb or mov xchg mov add enter sbb test push pop mov mov xor rclb cmp sbb or cld add push or inc popa mov call sahf shlb lock hlt mov in add in dec cld and xchg or shll xor aas xchg inc test xchg jno in test fsubr adc add adc (bad) xchg pop and sub cld sub dec push enter clc mov sbb je stos or xor xlat adc and iret clc test inc jns scas mov (bad) jbe xor (bad) je add adc imul pop rorb mov out leave mov stos jae xchg inc jno cwtl rclb xchg pop rolb inc les lock je push imul jbe sbb xchg add arpl push or cmp push jno adc and xor xchg xor out xor jmp imul ret test mov xchg xchg mov add push adc test pushf cmpb and xlat nop jo aas (bad) add jl sti cwtl ret push add xchg inc les and add jo cmp jns xor add or push daa imul std add test (bad) insl sub xchg or push mov sbb jb stc int3 test ss cmp frstor enter sbb mov lds imul pusha lock mov inc cmpsb test test cld lds test sub shrb and dec adc lahf insb sbb lahf (bad) jo sub xor insl mov fs mov out pop iret andl push enter xchg xor jno jns add (bad) dec addb fstpt pop loop mov sub and push mov mov nop sbb ret lock fnsave push jl xor add cltd clc gs loop (bad) (bad) fwait sub rolb xchg mov and mov xor nop fcoms ret pop orl mov sbb jo xor push xor inc push add (bad) daa mov xchg sbbb movsb sti mov jmp push andl cmp and and push push cwtl mov jno aad loop xchg pop popa mov add enter adc test das (bad) mov xchg call icebp jns les mov out add cmp cmp stos or testl lock pop dec test add rorl mov popf xor js mov sub bound cmp nop inc push and movsb movsl fimull rorl sti ss inc test and mov xchg call test pop and mov inc int3 fsubrs mov lock sub int3 pop lcall adc add sbb cmp push sahf aam ja mov pop add or notl mov mov in movsb shlb stos rolb add adc jmp pushf cmpsl adcl insb or mov jae into xor sub sar repz pusha loopne,pt cmp lahf add call or push in cld jmp xchg dec push lods cmp or mov jbe cmp aaa lods std or add arpl movsb in orl mov xlat in add sbb add jae loopne sbb adc cmp movsb (bad) je push ljmp or cld or mov mov stos and add fmuls mov cwtl (bad) das test xor pop jmp jecxz aad rclb mov sbb mov inc lods sbb jb fcoms aaa popa dec imul mov mov rorl orb and and bound sti push call outsb mov cmp sub adc and add test jmp repnz sbb (bad) pop dec push inc cmpsl jo add out adc (bad) push mov cmp mov add sbb popa xchg dec xchg inc les and add sar ja in loop notb mov dec imull pop adc jae cmpl pop cmp pop push jge rolb cltd xor fstl std das sub adcb dec leave xor inc jge add mov pusha xor cmp bound aaa clc dec call bound jae xor mov adc lds mov push dec xor lcall gs stc add lods dec add mov punpckhbw push ret lcall push add jae pop add xor jno xchg subl and cmp mov add lahf and pop pop xor fnstenv es dec push add push dec daa aad lock add fsts sbbb fwait shlb in lret mov mov xchg dec popf xchg enter lret cmc in pop icebp pop pop inc sbb add imul mov jnp (bad) push stc push jno add dec call adc jb clc push add jmp or inc jmp jle sbb xor add outsb loop pop or or cli adc imul icebp nop (bad) pop aad sarb sahf or pop inc in jno lea mov dec aas scas push or in pop adc mov inc shll rcrb adc js add xor scas (bad) js clc mov daa (bad) mov aad sbbb aam pushf cmp je lods inc mov in xor repnz inc jno nop into hlt mov or or fdivrl (bad) push lea pusha test cwtl push jbe outsl mov mov in add xlat sbb lock test adc sbb add out loopne adcl fsubrl pusha dec push push and loope std ret pusha push xor (bad) ljmp pop test xor inc add lret fcomi ljmp daa movsb neg call mov subb pop add jle jp mov mov sub pop ficomp bound cmp pop adc (bad) cmp enter fcompl mov js outsb loop lret leave imul add mov insb sub lds repz cmp or mov pop icebp inc xchg mov nop pushf jge or jno xor mov aad (bad) sub pop add sub jno and add mov add dec pop fldt or cmp jle cs lret pop xchg add rcl loopne sub push inc or mov orl mov loopne push (bad) jne mov test call mov fdecstp sbb iret insl (bad) xor xchg movsb xor dec jnp cmpsb rcrb rorl cltd sub lds inc jbe cmp data16 cmp sub das shrl mov or mov aad sub inc pop (bad) in mov or xchg mov in aaa or xchg xchg gs lock in push testl (bad) rorb lds repnz ds fiaddl xchg lods add scas or mov imul jle dec pop outsl push pop imul out mov lds adc jno and sub mov addr16 xor push icebp cmp add cli and add ret dec fcompl jl push out add xchg and test pusha js je dec xor jo add or or and fwait push and push push movsb xchg sbb dec dec into or loop and sbb fidivl or push push push cmp fimull pextrw mov inc pusha sub orb scas and shlb adc pop or adc add popa rclb cltd fisubr mov mov bswap and cmpsb aad adc mov dec inc aas es rcr jle sbb xlat and movsb insb xor lahf cmp add adc cmpsb scas add add in or roll sbb push add into fsubs aam and push loopne cmp adc push es imul push stos jp fs add loop (bad) xor hlt and or iret inc cmp mov mov (bad) clc mov orl subb xchg andb mov popa (bad) shrb xor es or cmpsb adc mov jae or cmp pop popa es mov mov jno inc xchg out and inc pop or add adc jle test fndisi(8087 sbb mov mov daa add pop mov in mov les das (bad) xor push add ja push inc js sbbb dec cmp fmul or xor add call adc xchg daa enter xor (bad) test adc dec sbb enter inc js out pusha push inc inc lds fdivrp add and fwait nop lds mov scas pop mov clc xchg sub add hlt frstor outsb popa xor fidivr stos mov pop scas movsb into call jbe ret rclb (bad) mov adc sbb xorb aas shlb cmp test adc dec (bad) cwtl mov (bad) lahf dec ss adc loope adc lea add xchg add stos mov pusha orl dec mov sbb into jns (bad) mov pusha (bad) jbe movsb pop adc jp test jmp cwtl or add stos add sbb or or adc mov rcrb inc xchg insb pusha ljmp lock pop icebp mov test fldcw ret popf adc mov inc cmp rclb sti and nop xchg inc les add inc add fbld add aas and pop mov mov add inc xchg sub mov xchg mov aas add push pop jo add lods jl in adc xchg pop pushf hlt sub pop adc ljmp push cmp add pop add jns jae enter add fsubr frstor sbb enter sbb inc or pop sarb xchg push mov pandn sub mov lods loopne mov ret dec int3 inc lret js std push inc pusha sub mov mov ficomp popa and andb cmp mov subl fsubs scas cmp ja sbbl mov or cmp js xchg (bad) xor adc mov (bad) fsub fadd cmp pop sub fbstp daa pop enter sub sub cmp mov pop fistp jo jp in scas adc cmpsb sbb sub mov pop loop mov cwtl pop loope inc jb and enter push push cmp in addr16 int3 aaa add mov ja aad mov mov add in pop mov lcall cltd sbb and out popa add xlat subb sbb xchg mov and insb jge jo add adc mov mov pop inc test outsl sub cmp rorl and sti or cmp xchg rcrb scas inc xor or sub xor sub cmpsb rorb in sarl push les sti rolb sbb in sbb (bad) lret add test mov mov mov mov test xlat test mov mov outsl aaa pusha sbb dec add mov insb (bad) or repnz (bad) and add pusha ljmp aam mov add push xchg (bad) sti into mov and sbb push push add xchg or dec push inc and int3 or push cmp in and lcall cmp jo cmp data16 hlt cmp insb push jae fdivr outsl dec mov icebp and iret aad mov mov js repnz xor pop (bad) mov mov add dec adc sbb xor fs ret cltd in std adc rol or loopne jo fistp cmp in pop xor xor mov sbb nop cmp or sub add cltd lret addr16 js mov xchg lock push cmp loop sbb mov cltd call and mov pop adc xchg dec push and or jp std pop mov and test dec inc jno cmp mov movsb add or cmpb test xor dec sbb inc adc push arpl cmp or mov xchg pop adc rcrl (bad) fs push mov inc sub lock aas aaa add sbb jns push pushf jnp dec inc jmp add dec mov int3 loopne add mov pusha add cmpsb pop lret aad add push xchg jbe shll mov pop lock mov lock mov rolb roll and push and jg in inc cmp dec out push add xor sbb dec pusha xchg je sbb push or ljmp mov add (bad) pusha (bad) mov inc flds je fsubl xchg leave enter push mov dec mov addr16 hlt test arpl mov fdivs cli sub pop mov adc decl lods cmp sub adc mov cld aam push mov jmp negb jnp xor pop and adc xor mov lods rclb mov fstpl mov cmp dec insl inc dec popa pop push add out pop loop dec test inc lods ret push incb mov sub jmp loop sbb jp sub mov push mov out das mov mov mov pop lods add sbb adc (bad) lds mov rcrl das push inc orb push pop (bad) adc push and cmp xchg (bad) or idivb mov ds dec sbb push add dec pushf imul (bad) add (bad) push mov fdivr fcmovb movsl jg mov (bad) (bad) lock ret cmp pop dec mov xchg add mov xchg lods mov vmwrite sahf (bad) adc sbb inc or fdivs or lock add jge mul mov rorl movsl test dec daa mov pop call dec jge add cmc int pop mov outsb lahf fadd popa loopne pushf lea dec movsl in out (bad) repnz jecxz das movsb xchg inc rcr and roll dec pushf mov xchg lds mov mov je and insb fistl call dec cmp mov mov or ds or cmpsl aaa cmpsb (bad) mov xor sbb shr pop and jl pop mov adc mov sbb pushf add lea xchg cli or andb add fwait add xor nop add mov inc cmp hlt mov xor push pusha pop cmp adc es mov cwtl xorl or call les pop fsub imul in test sbb movsb sbb add shl cmp or jg push mov push fldenv mov cmpsb fiadd xchg xchg rolb adc popa xor jg and out dec daa enter repz das sti pusha pop ss jno push mull mov xor (bad) cmp arpl test jl shlb ret mov or lods lds add sbb orb mov dec cmp mov jnp add inc out sarl xorb or xchg fmul lret pop loope enter das outsl (bad) mov or rep jle and add leave or test out ss jbe and push dec inc jb mov mov leave mov sub lock xchg or sbb (bad) xor pop mov xor push sub or lock test jnp mov movsl pop pop adc sahf mov sbb jns or hlt mov cmpsl and jecxz or push mov jns mov dec cmp mov add addl mov xchg dec jg rorl inc mov inc jo push int mov xchg clc es push mov adc mov fildl mov lret arpl xchg fadd aad pop iret mov inc cmp jno pop sti gs sarb push jge xor outsl inc (bad) and enter js xchg addb pop xor mov dec flds pop push outsl inc mov add test enter (bad) sub xor cmp loopne jae icebp js xchg jle je pusha aad (bad) dec movsl fld xor sub adc loopne inc bound adc hlt inc cmp les hlt out les pop and cmp jno popf dec ds adc add mov pop arpl or test and dec das push inc push inc fcoml decb in lods bound (bad) push dec jle add mov repnz test cwtl cmp pop xchg popf aad and sbb pop jmp in in mov mov xor sub xchg cmp jmp inc rcr xor int shlb mov and gs add xchg movsb (bad) xor stos loopne pushf mov add pop test in dec test add cli mov roll fsts jmp cld iret pop sub bound fmulp xchg test mov dec or std adc dec arpl je je add scas push std into pop mov or fisubrl hlt pop adc add orb data16 nop and jbe addl mov sub mov xchg adc int3 mov sbb out sbb outsl das or call mov popf cmp aaa or fsubrs jp pusha cmp rorb rcrb lds js inc pop sbb leave xlat mov or mov lods nop push add xlat mov sbb aam and or mov adc xlat fdivrl imul add ret xor add gs sbb movsb add mov shll les jmp inc sbb repz lahf push jno dec mov sub arpl and or lret push add mov hlt cmpsl add repnz int3 or mov mov adc mov mov jb xchg xchg je add pushf jg mov andb mov insb pop lods dec aam push dec and push or push cmp movsb pop scas mov adc xchg lods inc int3 outsb inc push xchg push fcomp fcompl (bad) cmp push pop lock mov cmp xor (bad) mov pop adc inc mov cmp repnz (bad) hlt repz pop inc dec (bad) js inc mov idivb sar in cmp pop popf and fsubl icebp dec add lods pop mov stc in fs xor mov push or mov cwtl sub mov mov jmp push daa stc mov std xchg ret hlt add and sbb adc dec adc fiadd mov sub xchg sub test jecxz cmp mov rclb push ss mov cmpsb push sub iret cmp das clc inc shl insb mov hlt xor add cltd add popa lret pop cmp aad push pop push (bad) cwtl mov lods push mov stos inc dec mov push inc aad jp jg push add push (bad) jmp lret mov fisubr pusha cld movsl add stos adc xor incb cmpsl adc adc or lret js clc testl pusha push xlat xchg rcrl jo sbb push lock cwtl cmp sbb add mov scas mov cmp dec pushf xor pop cltd (bad) jmp cmp or in add push (bad) je je xchg nop sbb fwait mov nop mov cs cltd dec xchg xor sbb sbb sbb (bad) in icebp int3 mov pusha cwtl push (bad) mov or xchg xor (bad) lea movsb or inc or push pushf push add ds cwtl adc or xor pusha sbb nop push and mov jae xchg aad out add push jmp xor inc xor sbb stos dec add in sub cmpsl dec (bad) xchg clc lock movsb pusha mov nop das iret je mov fs mov hlt jnp sub push adc testl mov popf and es inc (bad) sub xchg enter or lea cwtl js insb shlb repnz mov repz or inc ss in mov (bad) push cld mov pushf pop adc sub negl pushf dec cs sub ret xlat lcall and rolb dec and stos pop sub aam xchg clc inc dec ret jle pop sub and pushf adc je dec xor daa aaa mov (bad) lock popa push or xor mov cmp in cmpsl jb movsb in add dec inc in adc sub mov jl movsl js (bad) bound cmp (bad) das add fdivr adc aad orl xchg dec dec (bad) push add add cmc pop jbe rorb stc jo xchg js jecxz mov sar xchg and sub stc push adcb sbb roll xlat cmp pop xchg cli add enter call mov ret and rol inc test dec and pop inc test fst pop insl dec in sub ljmp shrl xchg sarb xchg popa add xchg lret pop cmp mov gs fadds xchg adc gs ret fwait dec mov sbb mov enter add add aam andb jo outsl and fsubs or mov push dec push nop pushf movsl pop jbe orl push adc sbb xor (bad) les adc mov pop push subl loopne push call adc icebp xchg or cmpsb pop add cmp dec mov add sub xchg roll inc lods jbe jmp outsb pusha addl scas jmp pushf pop je mov or in popl les inc cmpsb pop pop push fsubp add rcll movntq out lds mov mov in stos mov shrb scas xor adc mov adc mov jp mov mov and dec xchg (bad) sarb aam pop in mov and pushf add mov xchg or mov lea mov add push jbe ss pop cwtl xchg adc jmp hlt sub adc mov jb push adc in fstl popf ja shlb fs jns or push jge enter inc add cmp js outsb ret push das pop inc inc es jno mov xor out xchg cmp sub cs pop xor xor add xchg push sbbb les (bad) xchg loopne iret or imul out sub (bad) push xor push nop mov jg (bad) out dec dec sub popa je arpl frstor mov xor pop xchg lahf dec test sbb mov movsl push imul clc enter xchg pusha jns gs add xor lds inc cmp xchg dec and loopne xor clc inc inc (bad) adc (bad) aas leave test int cmp fistl jne xchg inc jecxz (bad) loop arpl sbb sarb sub imul push pop push add cmp (bad) mov add bound sub jb add data16 out xor xchg imul push daa lods mov mov imul fxch fs pop pusha xor sub pop add in insb adc push pushf rcll xchg jo push (bad) xchg addl mov inc mov out es pop add sbbl mov add and sub addl jl inc and fmull ret movsb mov les push push rcrb pop xor ret (bad) cmc dec ret (bad) mov (bad) and dec ja mov or cltd push adc cwtl or out cwtl (bad) xor pop push in mov mov pop test xchg add and jno (bad) out and aam mov add orl test sbb xor test cmpsb inc mov sbb loope jl (bad) pop jmp (bad) and sub or add fldenv sub sbb push nop mov pop fisubrl inc inc dec xlat push xor add xchg or xor hlt cmpb jnp mov shlb add and ja mov add insb movsb add cmp test int3 inc mov xchg add fcoml cmc (bad) in or stos fchs pop das out pop (bad) leave test sub mov mov push out sub xchg and add push into jno push jl adc fistp add push loopne xor out xchg popl insb (bad) cmp loop pop add push pop je leave pop and cld jg faddl imul adc sub inc push jno lock sub xchg add add mov adc jmp xor int3 xor test movsb cmp in lcall fsubrs xchg or mov dec add insb mov and fwait mov mov je test mov pop bound int3 js xor mov add mov xor loop bound lock in adc or int3 insb sbb or xchg push aam test add or dec imull xchg add and test jb ret mov rcr andb jns pop lds sbb jecxz xchg aam pop cmp fsubrl xchg xor push mov cmp and xor inc jbe int mov bound leave jo mov nop pop mov (bad) pop xor sub xor jno test add popf icebp testb add and cmp or jae rcrb add loopne push aad test add lcall and sbb popa add push sbb mov fsub mov xchg repnz inc pop xlat out aad jb mov mov add fldt inc pop daa mov sub pop push fwait xor inc es in dec dec aam test (bad) jnp xchg jbe jg js out sub insl adc imul and subb fcmovnu sbb mov ljmp adc das mov pop js fs mov rolb fdivrl sub jle and jno test or inc loop and xchg mov xor inc rcl fsubrs push xorl sbb mov mov add cmp gs cmpsl push scas jb cmp loopne push iret insl out xchg xor in loopne cmp and orb xchg add mov fldl ss xor mov push inc push dec das inc gs dec aam cmpb mov xchg data16 xor out pop loope dec outsb in xor test mov or adc (bad) fadds inc enter lock sbb sahf xor ljmp andb pop xchg (bad) cmp fcoml push dec insb jge mov pusha stc mov mov pusha adcl pusha test add fldt add xchg and fnstsw ja (bad) mov and scas pop push jge outsl and das outsb adc popf cmp fsubl jg stos out fwait dec xchg movsl mov adc insb ret test sbb ljmp or and cmp jecxz pushf mov adc aaa dec mov sbb (bad) adc xor mov adc xchg andb push int das ret (bad) hlt icebp sub ret cltd ret mov push or int mov test adc cmp add adc movsb (bad) cmp xor push aaa xchg pop icebp cmp fldenv dec push aas push and je jae andb icebp or inc and ret cli sbb adc scas xlat xchg sub inc scas dec dec push xchg sub add push sub jge cld or dec jecxz (bad) adc mov or in add push push mov or xchg cwtl adc lret sbb sarl or cmp bound fsubl dec loopne stos test outsl jo push or nop shll cmp xchg fwait lcall movsb arpl fsubrl pop hlt xor dec push in lods and (bad) xor ds mov cmp (bad) jge add sub pusha adc aas bound cmp ret jno pop mov xchg outsb or xor lds stc push lods mov mov push push add flds xor test pop outsl xor or loopne adc das and (bad) mov test stos lret (bad) out xor out pop mov jne or int3 sbb lcall jmp push push bound xchg enter je je js hlt cmp movsb mov addb ljmp add out pop mov mov pcmpgtd lds or cwtl sub lret pop xor pop fs xchg loop loope push data16 call push inc mov ja dec rorb mov subl aas rorl push mov cmp mov add cmp push mov pushf fistp movl cmp lds in add daa xor mov in push sarb jl jns add sub mov xor sub cmp inc (bad) or push sub (bad) jg xor mov push icebp loope mov and inc sub fstps (bad) xor xchg or mov insl in mov enter sub mov cbtw call add push pop add stc mov fildl sbbl pop xor jmp incl push ja add add enter inc sbb dec sub rcrb orb mov jbe sub in sbb push push fsubr hlt flds pusha clc sarl dec inc pop push inc push hlt jp inc call pop dec cmp ljmp xor incl mov movsb pop inc addl je xchg das add pushf mov inc mov add nop mov lds or out pop xor xor push or sbb push ret (bad) and popl jge mov sub push add xchg iret pop push mov xchg cltd test pop and das push push sbb addb or xor or pusha adc loope pop enter clc add (bad) lahf or pushf dec push push add rorb and sub mov push mov add pop test fildl push dec or add pop aas std leave or stc xor add jp aaa dec push orb xlat ja jecxz (bad) xchg shr ljmpw sub or pop or and pushf xor mov pop xor jnp fidivl or or pop add mov negl in in xor jnp xor out sbb out cmp in xor sub arpl lock xchg sub (bad) out insb adcl es leave sbb sbb insb fimull push jle push mov jecxz push adc mov inc pusha dec push jo mov push iret add data16 xor or ljmp add dec sub push jg insb jae sbb push pop mov dec leave insb and jae push in jle push loope mov dec lea test rcl adc and pop pop test in leave sbb pop xor imul enter mov mov inc pop xchg leave adc and pop add cwtl sub inc adc cmpsl inc test xchg loop andb test cmp jmp int3 out or sbb popa cmovo (bad) push push add (bad) jle cmp roll mov inc inc test aas jecxz rcrl fisub sub and ds push outsb cmp imul cmp outsl test dec inc push and jp add std ret popa into push add inc sbb inc (bad) in sbb xor push (bad) jne add jle and inc xor push mov daa ficompl mov cmpsb data16 frstor push pop jo mov xchg push arpl add pop cltd sahf xchg inc pop push adc xchg gs and mov mov sub xchg into jle lret inc or pop adc sub imul mov pusha push pop cmpsb or pushf pop stos jno movsb xor mov scas mov and adc aas xchg add outsb sbb push mov movsb dec adc pop notl xchg test lahf fimul add aas clc pop xor enter cmp adc stos dec sub pop fldl repnz fidivl push push es scas (bad) dec pop in mov imulb inc sub push pop fistpll xchg mov scas stc mov icebp jb cwtl ds fs mov cmp and lea jmp add and jae pop sub jmp insb out mov fbstp lret mov popa push push pop push xchg push mov adc inc fsubs and push rorb mov mov sub (bad) repnz dec inc sti jns loop lret (bad) ja inc pop mov repz push in or sbbl xor ret jnp subb sub sbb call leave mov pop in or pop xchg cmp loop inc mov (bad) mov inc push adc adc mov push mov js inc lcall push pop mov mov repnz stos shl adc pusha push mov out test mov push jmp jae jecxz js adc shlb cli xor jmp pusha mul mov add xlat jbe mov mov pop mov xchg ss (bad) (bad) jp (bad) je std in or xchg in or pop adc das or adc jb iret rcl jnp mov jb jg xchg mov popa stc push jbe add shl not cmpsb or dec or jg dec test out outsl (bad) lods xchg sbb cmp cs add mov cs std mov (bad) (bad) jmp lret jl rol lret les push lcall shrl mov inc jge dec dec cli loop pop int daa sbb push dec stos in divb daa aas mull add and testb inc xor add pop mov pop out fwait xchg dec sbb push jmp adc outsb xchg dec jns int (bad) scas sbb popf add mov add mov mov loopne,pn xchg xor (bad) (bad) or xchg lea push (bad) ret push push int3 cltd or lods mov dec push mov jg mov mov add lock sub jne jp push cmp jg push (bad) mov add xchg ret test sbb add xchg popa out sub jno or xor inc xor xchg or push xor mov push dec or int3 xor ret pop push and inc lcall jae or inc ret push pop pop ret sub cmpsl les fcomps (bad) and mull into add cmp shll adc xchg or xor jnp pushf enter inc mov stc or negl fs and orl mov dec xchg and (bad) cmp daa add mov nop fild aaa addl push jg aaa add pop addr16 pop popf sub xchg mov or mov lret sbb push outsl xlat mov aad lret push dec lret aaa adc add push add lock mov out (bad) dec leave dec decl xor mov cmpsl (bad) xor push lret or test xor movsb or dec jae and and subb or sbb pop xchg add xchg stc mov fcoms add lock (bad) xor push mov pop push sub pop inc outsb xor dec xor mov daa jb or jg fadd insb and xor add xchg (bad) mov push push jmp loopne sub or or dec inc imul mov (bad) add hlt xor sub and pop xor add rorl pop mov rorl cmp gs movsl xchg xchg mull adc sbb (bad) not inc jecxz out xchg rolb pushf outsl push jg shr adc cmp call xor ret adc or in inc sub (bad) lds fnstenv push add clc out mov sti aam fild loop daa jnp or cmp xchg or sti insb out pop cmp mov imul add or mov adc (bad) inc add inc (bad) jg push add stos das scas and push popl (bad) inc push or (bad) pop pop pop and mov pop lahf dec inc push js jae arpl aad lea imul push push xchg mov ror (bad) jle int add das pop and mov jge cmovle push dec pop jne xchg je xchg xchg cmpsb push push or adc xchg (bad) test mov inc sbb cmpsb inc push xchg and lods test (bad) jne pop pushf cs es mov and dec adc inc mov ret jno push orl add addl pop cmp sub xchg (bad) adc mov xchg and cwtl in repnz sub push push sbb mov sub inc mov shl pusha imul out mov ret scas pushf adc mov fcomps mov pop xchg xor test sbb addr16 inc or sbb jno jo sahf in cmp imul rcrb popa mov lret (bad) pusha enter (bad) out sbb mov pop adc test sbb adc add add loope mov shl roll mov mov fs mov jbe mov sbb fwait xchg mov push testb sbb sarb push pusha daa ficoml (bad) jg add fildl sub out or adc push sub (bad) cld ja dec jge xchg cmpsb (bad) or xor movsb loope sub lods push cmp rcl movsb push push pusha pop (bad) movsl sarl add stos cmpb into push ljmp or lret add and test std arpl fwait rcll push push mov dec mov pop xor push or xor cltd cmp push subb repz mov dec cltd push push or mov pop ss sarb push and jno insb adc push push push aas sub leave in xlat xlat scas adcb icebp cmp jae loope ja cmpsl addb mov jbe xchg add inc pop pop mov push pop xlat jnp mov xchg mov jae adc testb xor jl mov push loop sarb aaa pop cmp mov push mov or lock xor bound rorb mov dec inc inc and and mov (bad) xchg dec add (bad) mov cmp (bad) adc add andl mov or lcall adc outsb xchg sub lods cmp or ja (bad) xor dec in push dec xor pusha hlt gs fsubrs pop mov ljmp or iret lahf (bad) idivb (bad) fsubrs jne fcompl pop sub pop mov sbb or fdivs xchg leave sub xchg bound mov sub jo adc cmp add mov repz sbb fwait dec ds add mov jmp sbb add adc add dec inc ss and mov push repz pop ljmp pop mov shlb sub lret adc inc or les push ret das nop scas sub clc adc push adc adc pop pop dec das push add jo jns addl addr16 sub in lret or xor pop sub out push shrl bound xor sub cs add (bad) sub push sub out cmp sbb adc sbb sub inc or pop int arpl lret add stos jp (bad) fwait pusha scas aaa dec and (bad) stos (bad) jg popf push rorw cmpsl inc xlat lret lods add popa push sub push neg lock pop ljmp dec rclb cmp add daa mov push stos (bad) iret mov jmp mov leave loopne dec xor jmp pop push push push mov aaa pop (bad) mov jbe outsl mov xchg xor mov fwait add rcrl jb jmp xchg pop mov jl add push jb rcrb jmp repnz leave mov ja loop arpl dec jle pop les mov rcrb sub sub pop (bad) in dec mov dec or fsubr mov jp rorl inc pushf repz push mov lret cli xor push cmpl mov sub or push out mov (bad) je,pt and pop aaa and mov and pop add jl into xchg sub pop adc int (bad) gs shr cmc dec sub xor mov mov imul out lahf push jg jmp or call add pop cmp add jmp sbb push dec data16 mov ljmp push (bad) jbe push push dec mov inc sub addl aas xlat iret call jmp sub sub addb scas lret and test js add pop in xchg add addr16 jmp push mov shr sysexit out lret loopne or pop ja jnp bound jecxz loopne push sub or and dec into (bad) cld inc (bad) adc push inc ljmp test pop leave xchg lcall int3 sbb sbb cmp dec daa inc mov push jmp enter xor and push imul sbb fs pop push cltd lahf aas pop loope xchg sub mov aam mov push jle lahf std out (bad) (bad) icebp lock shr inc iret xchg stc push enter sbb sub in (bad) jmp jnp and jp adc js xchg xor jne (bad) sbb sub mov fwait xor or andb jg xchg pop mov les push fimul add jg pop neg add lea add adc jl imul jbe or mov (bad) insl movsl (bad) gs or into adc jge test inc adc mov loopne sti fild xor dec in mov dec stos loopne or rolb rcrb sbb mov repnz mov (bad) adc add mov andb push push in mov call pushl pop and sarl pop cmp and inc insb or sahf jno popa bound inc mov jg adc fs inc sbb jg cltd rolb mov (bad) xchg push fistp or xor pop and jl inc movsb or xchg jle push mov dec push fldt dec and loop pop ret push repz adc mov cmpsb insb cmp xchg add pop pop cmp inc xor fistpl outsl sbb add sub push cmp xchg call pop xchg stc sub mov je xorb xor xchg insl sbb push sbb lds jl pop pop out add jne pop adc (bad) bound in mov adc cmc (bad) push (bad) lret in in jge testl stos fcmovu cmp in push nop mov inc adc add in or dec jecxz js dec loope dec loopne inc inc xor pop or dec push fisttpl add ja xor add jnp pop adc into pop add pusha push (bad) test mov lea push pop (bad) leave inc movsl leave or stc xchg sub push ret pcmpgtw nop jmp test jno push pop inc mov hlt sub movsb sarb xchg adc rcrl push lret ret (bad) xor negb pop pop push add xor sbb mov xchg pop mov adc adc sti outsl or fimul add inc mov sub imul add sar xchg adc mov test pop mov pop lcall jo push insl (bad) sub test pusha aas (bad) ret inc cli insl pusha and xor in in xor leave sbb testl inc sub pop mov arpl sub or test ret adc nop and daa inc mov (bad) std into lcall jno and sti cmpsb add mov push jp jo sbb add pop jb sub inc push inc push ret hlt jns fwait inc adc mov pop sub movl sti or ljmp xchg insb add ret adc inc push ret xor cs add mov in fisub mov add call insb repnz push inc pusha and jmp loope jae jg inc mov xor or and fmul cs std add adcl cwtl imul es cmp mov add test nop call movsb outsb outsl popf inc jbe in xor leave fwait test cli nop dec pop std inc dec mov mov jb cmp out inc dec add lods imul insl dec ja add xor popf test or jmp mov mov cmpsl push (bad) das sbb pop icebp aas divb rcrb cld iret (bad) enter les push imul testb xchg (bad) jge fcoms enter lods mov call lahf mov hlt pop stc mov push and clc push or add inc fildl popa inc mov adc add popf imul or mov adc xchg mov dec sarb add mov mov test mov inc shrl add out sub sbb push popf ja mov add push sbb ss pusha mov push xor and bound ljmp (bad) decl test xor lea movsl mov push sbb cs in mov xchg inc (bad) hlt adc or or cs shrb push or lods into inc mov rorl adc (bad) mov lea pop or xchg test lret push jnp movsl imul sti xor inc pop inc mov adc sub adc sbb sbb fsubs adc xchg cmp xor adc pushf sbb (bad) add and cwtl nop call add jns mov xchg jo lods inc js popl and lahf hlt insb repz sahf repnz and and jnp in sub and cltd add sub fcoms xchg jo add rolb nop icebp pop cli mov add mov test mov pop add dec pop dec dec mul stc mov cmp mov inc xchg (bad) adc xor test cmc jo pop or or and adc adc or jecxz push sbb js adc subl xor add ficoml pop push add pusha inc scas pop (bad) xchg mov xor shrl xor int3 movl repz or rorb add frstor jbe sahf adc and test stos push cwtl dec cmc in xchg mov xor dec lock jae sbb mov mov or jle cmp aas rclb jne jo test hlt cmp sub fdivs cmpsb js js dec cltd rcl insb in inc push push mov adc cmc mov enter adc sahf fldcw xor push decb es adc cmpsl lcall int3 adc inc enter mov int3 adc adc cli enter jno int3 hlt loopne fwait add inc inc loopne rclb cltd int sbb push test in or repz jl rol cld pusha (bad) xor dec daa push or add clc test adc xchg pop push or fimul fsubrl push mov or pushf pop imul add xlat (bad) mov sahf cmp xchg inc mov cwtl into ja inc or testb test test or pop jb into lret dec rorb dec cmp xor pusha mov in sub sub mov push push test aas hlt inc out jno daa jp popa fs popf add lock dec add ficom aad movb add mov mov push imul pop icebp icebp xchg jo adc lock xor add pushf (bad) push jbe inc (bad) shrb inc mov dec icebp test clc rcrb stos inc lods div add pop in mov loopne imul in test adc jb cli ds mov je xor hlt movsl testb sub fadds xchg jae or xor cmp sbb push imul cmp add negb and adc dec xchg or inc dec push nop sbb arpl mov add jo dec (bad) and icebp jle int3 pusha outsb lret fstps insl inc xor (bad) and cs stos js cmp jge ja leave mov inc pop jne jmp mov jl es std or lock (bad) jnp jae and push xlat stc push mov mov and mov push and popa repnz xor addb lahf sub dec mov or sbb dec cwtl mov cmp mov and dec dec call inc add pusha sahf stos dec and push iret mov jo es movsl icebp and shrl add ja push xchg jp lock xor or xor sub sbb outsb sub mov enter cltd sbb push mov lds call pop mov loopne pop pop insb enter rcl popa xchg xor pop mov dec xchg push push shrb jo dec sbb xor notb cmpsb pop pop adc pop dec or dec xlat pusha lock add test add popf lea sbb sbb stos and add outsl lahf dec test dec hlt and in push lods push cmpsb mov pop pop pop fimull dec inc mov push test pusha sti scas in jge or sahf lret test enter xor (bad) in mov or cmp test aam xor jne popa loopne nop test xchg pop push or enter addl outsl add stc inc fidivl enter sub cwtl and clc daa fsubl (bad) arpl mov je dec sbb add daa lds inc es popf sahf and push adc add loopne ljmp sub sbb mov or decl sub adc mov or adc dec enter sbb and mulb ljmp adc iret dec leave inc testb xchg mov lea fs nop adc shlb adc or push aaa inc rol and lret jl xchg into pop mov in and sub sbb pop dec push iret or inc add xchg mov nop loop mov jecxz xor (bad) mov and jb xor add push lds sti add ret mov loop or movsb push add iret clc sub and add fisubrl dec xchg inc mov notl iret or addr16 inc push cmp icebp and xchg cmp ret sub pop test cltd sbb sub (bad) cmp add inc jecxz mov cmp daa hlt sahf cmp in add push ret cmp or cmpsl mov hlt (bad) je pushf pushf cmp inc (bad) in push loopne,pn rcll mov loopne testb cmp inc push test mov add dec stos jae xor sub cmp sub int3 mov jle mov xchg pusha les arpl adc pop dec jo gs mov or sbb sub out clc scas ret dec loopne sahf dec dec call xor and or push adc or loopne cmp rolb and pop mov and loopne out jne add push inc mov lcall jmp lock inc jns adc ja jne adc pushf out lock mov inc add adc mov inc mov mov mov and dec mov cmp xchg adc xor push cmp mov xchg lock adc enter iret mov inc movsb jns adc dec enter roll int push mov test das and sbb add (bad) mov mov dec and mov nop repz or or dec push add in mov and jp add imul jae push add push mov xor sbb pop cwtl inc sahf lret pusha out test test movsl mov adc pop notb sub inc loopnew inc test push dec shl add xchg jbe out subb hlt int3 (bad) pop xchg push (bad) add test clc gs push xchg and or out aaa sub mov sbb dec inc int jae stc sahf xchg das xor jb jecxz hlt xor pop jne dec aaa ffreep adcl add cmpsl pop add mov dec call insl jecxz pusha mov in mul and lods data16 xchg adc mov mov fidivrl inc pop adc test dec push (bad) pusha inc ljmp pop mov add cmc dec (bad) ficompl fmuls scas push push pusha xor ror xchg pusha nop imul nop lock inc (bad) jbe int3 daa sbb mov pusha cmc inc xor add mov popf and mov cmpb stc adc out fwait cmp mov jg fiaddl adc cmpsb ljmp jl cld (bad) negb shl rcr mov movsl lahf sbb inc int3 push fldt jecxz cmp (bad) xor mov ret ljmp and push in push daa loopne or mov dec add xchg jl sahf inc pushf mov fwait add inc cmp jl or cwtl dec cmc jno mov pop aas xor push nop cltd nop cmp xor mov cmp push dec mov cld (bad) xchg sbb mov inc or jae and push inc inc sub adc hlt inc sub mov rcr ss inc push mov in add lret in lahf mov add xchg mov dec adc sub xchg aaa add and insl aad jmp or or pop nop stos add shlb icebp cmp xlat loope and je lock sbb lock gs sub pop pushf inc dec pop inc divl pop ficomp jnp mov or lock movsb leave (bad) mov test pop js mov out fbld cwtl mov push sub pop shll fcompl into je leave push and and jl into and xchg hlt nop push pusha inc bound insb mov in in adc xorl test ds ds std mov inc add ficom insb sbb loope cmp or mov aaa in aas add xor dec cmp sbb nop sub dec scas dec cs pop enter adc ljmp pop sbb jo xchg push dec pushf mov or pusha pop fdivs mov dec sub rolb movb lret int lret pop xchg shll inc data16 sarb hlt lods icebp or cld addr16 add jbe (bad) repnz (bad) inc sbb call inc mov jnp repz adc push leave inc fdiv lock or adc xlat out adc es or dec adc cltd aam adc xor or jmp or fidivl xor lods adc (bad) jecxz push push xchg sbb or add daa sti adc mov mov lock add push rolb push xorb inc ret inc das fstp pop sbb dec and cmp in push addb lret cmp lcall loope add pop sub daa or inc pushf or mov inc (bad) cli add jb out mov mov xor mov out mov inc jno xchg ret push rclb je mov or aas sub mov jb xor dec mov cwtl sbb xchg mov or adc xor arpl xor pop push add lcall xor inc jl insl mov xor sbb pushf sub pusha xchg jmp add mov mov inc pusha xchg sbb cmpb push add xchg cs fisubr cmc aaa dec (bad) mov subb test push or mov mov push push mov inc adc subb call mov mov jp add xchg cmp (bad) outsb sub pop lods cmpsl mov or push rolb ds outsl xor dec loopne fldl pop hlt dec pusha in mov cmpsl push add sti lds sbb lock sub and cmpb test mov addl mov xchg incb call push pusha addr16 out test enter xchg add clc jle sbb sub icebp (bad) mov or dec or bound pop jne stos scas adc sbb loopne in or add scas add cli outsl push testl push repnz pop xlat insb inc sarb add pop xlat loopne decb jge std jo (bad) outsb dec or mov jb mov dec and or mov movsl dec add rclb cld aad ret aam jns lds jmp cmpsb scas lods out push cmp daa notl icebp lock push enter mov mov sub sub fcomps jno sbbb sub (bad) jge clc ljmp cld cmp jecxz dec cmp rol and testb xlat roll loop mov or arpl sub mov out pop loop les inc cmp roll hlt cltd sbb lock ficom push dec jbe sbb jg pusha mov bound xchg fs xor mov cs cmp out or dec sbb push data16 cmp push jge xchg cmp nop mov push pop push leave dec push mov mov sbb sub outsb clc cmpsl add push or rclb popf sarl cmp lahf or sbb loop cmp pushf (bad) and sahf incl push in fdiv ss sbb xor shrb stos mov cmpsb out jecxz mov add andb out hlt sbb xor outsl shl insl mov dec movb in flds repz pop add lods add test repz hlt clc mov cld xchg lock roll aam or inc add jb xor add daa add loope or cltd mov or aas jae add test inc inc sbb adc pusha sbb inc or cld cmp push test cmp fstl push add pop add pusha dec (bad) xor push getsec sbb enter push les ss add and fisubr out add rcpps daa jp dec stos rolb rclb adc rcr mov or popa push pop pushf and mov nop add push (bad) or cwtl inc adc add mov mov and sbb adc xor mov sub faddl clc enter mov add pop cmp push fstpt add call add insl dec psrlq push orl sub inc cmp fsubrl push in adc mov dec cwtl imul leave mov cmpsl mov aam stc jae add add test add mov scas sbb ret pushf cmc int mov (bad) cmp in sub fs clc mov lahf shlb lock nop sub jl pop enter push sub sbb or repnz mov push sbb add lahf mov mov pop mov xchg fisttp mov ja or lret sbb pop and js mov idivb cwtl xchg add add insb or les push mov (bad) inc out pushw or xchg and lock or and sbb dec mov xchg xchg add or pop es fistpl sbb push or jmp xor add faddl (bad) xchg cwtl xchg add push ret and dec cmc and inc add dec aaa gs std sti add js lock testl jecxz inc popa (bad) loope add pop lahf or and leave jnp pop imul push adcl and aaa xchg ss jo shlb stos dec adc ret lahf jno pop mov imul add lret jne test cmp shl inc adc (bad) mov movsb leave jno cmp pop sub fidivrl sbb cld mov adcb add push enter popa or leave jmp push push out xchg lcall jmp xor imul je call and notl inc cmp mov hlt popa rclb test lods add gs (bad) test mov xor add mov mov adc out add push imul jmp sub ds push cld xor sbb dec xor jmp and cwtl (bad) in mov pop dec and and and popf add pop (bad) icebp dec dec and inc push lods icebp pusha or mov xchg add dec mov adc sahf pop and add mov (bad) sub xor lcall test mov (bad) (bad) sar lock mov loop mov pop jle decl insb cmp push out push sti fwait sub sbb inc push (bad) out mov and lds mov mov pusha mov loopne jle sbb mov and pop ljmp push xchg adc lock insb lods jnp insb push (bad) lock dec and rolb pop loopne in add adc pop sub and jno mov nop dec mov movsb mov adc orb jns push (bad) jo stc js subb shlb pusha rcll das repz add jnp popf insl jl xor call cmp or and stc xchg stos scas inc loopne or mov jge push bound pusha stos enter lods lds loope es add add xor inc xor psubsw divb rcrb add mov cmc sbb add add mov subb pop psubsb cwtl add xor push enter sbb jne sbb (bad) test and jnp dec es jo and leave cwtl rcr (bad) mov pusha jp dec inc repnz xor loope and js loopne sbb std aam fbld iret sbb nop ljmp push mov in xchg inc dec mov shrb insb or lcall jmp or leave mov add add hlt add shrb mov pop lahf jne leave adc mov insb and leave cmpsb sbb jl mov lods xchg push mov mov push clc inc nop (bad) lahf lahf or add xor xlat fildl loope xor stc push insb insl (bad) fwait add push adc pusha xchg dec mov fist les xor mov mov jp mov add aas jno pop test (bad) mov sub (bad) lock call xchg js jg pop imul insb or pop or jmp add add call cbtw xor pop push pop jl loopne xor mov jecxz jecxz jecxz imul mov sbbb jnp add in loop pusha adcb fcoms or cmpsb leave xchg and pop out mov inc shlb aas push sub adc movsb xor fcom ret cli adc dec mov dec add out mov je and or cs stos orb pushf rclb daa adc pop movsl jle pop shlb ror movsb nop xor gs addr16 add aad mov xorl lcall std mov call insl pop pop mov mov rorl dec out pop cmp lret push sub nop mov inc hlt das pop xor and bswap sub mov addb cmp (bad) lcall or and aaa mov cli scas rorb add dec insb inc add mov mov aaa jno sub adc and movsb xchg scas and jns and add (bad) lock add icebp cld add sub insb fildll mov out cmp insb jmp push enter das pusha pop loope mov pop sub nop cmpsb das push aas negb cmp inc gs mov mov pop dec repnz popa stos pop jo nop enter inc push in mov xchg loop mov je test sbb inc cmp sbbb dec sub outsb xchg repnz or enter jns xor faddl adc xor pop pop out js mov xchg lock sbb pop jb adc (bad) js movsb xchg sub adc dec pop inc jl dec sub bound push lods (bad) push repnz mov mov dec push inc aas jae dec sub xchg rolb mov pop and xchg and push and or xor inc xchg pop xor lock je cmp push adc clc arpl adc shr pop lea fs int3 push push jne jns add jb jl push inc sbb aam jmp xchg add fisttp mov jo leave or cmp pusha xchg mov inc mov xchg or rcrb pop dec push cs push cmp movhps ds push mov add inc xchg cmp stos inc cmpsb mov cmp push (bad) loopne sbb jmp push add pop xchg sbb or dec pop mov rcrb add push jge and fmull pop mov xchg movsl xor push pop bound (bad) (bad) cmp xchg lods lret mov or and xor int3 push hlt pop pop rcr xor test dec loopne jge dec and adc jle cmp nop test push sahf (bad) xchg add call push mov or inc (bad) enter xor ror mov dec sbb add les nop vmwrite mov jnp add xchg loopne dec inc dec leave bound mov dec add je rclb push lods xchg enter movsb add sub fimul sbb enter push lods and fcompl cmp hlt lods insb leave xor movsb loopne jns or stos dec les push xchg mov nop mov add sub ljmp push shrl clc add xchg or icebp xchg pop jl sbb pop out ror inc dec cmc cwtl movsb outsb inc mov icebp testl mov or xchg orl outsl hlt mov mov xchg stos and rorb xor (bad) jno das insl jno dec inc xor xchg and inc cld push fs mov test stc repnz add test movsl fwait add mov dec cmc enter dec adc dec les test test push (bad) insl cmp xor fist pop xlat lahf mov add sbb add sbb sahf push or inc in nop and in cmp mov aad andl addl add pop xor subb insb aas mov hlt imul add cmp cmp adc add inc xchg inc (bad) in pop and fs pop xchg push add jno scas es les dec out push sbb push cmpb mov inc mov aas out xchg xor out rorb mov adc pop andl inc dec mov outsb jg fwait add cmp les lods xchg hlt enter mov punpckhbw arpl sbb loopne dec mov cwtl sbb dec fsubrl add (bad) dec repz pusha push sahf pusha xchg adc add xor inc inc sbbb sub iret ds cld cs lcall ljmp dec or leave add (bad) addr16 sub jp je stos ljmp roll sbb pusha jg xchg mov or pop or sub inc mov jnp dec push jl xor dec mov je xchg inc in add or xor pop movsb xlat adc rclb out rcrb and mov repnz push popa loop or xchg stos sub pop xchg cmc push mov dec xor xchg into mov and and lock push mov dec cmpsl pop adc mov addl lahf and cmp push adc or dec cmp int3 xchg enter xchg mov xor jge mov dec ljmp push push fildl lret mov sbb pusha jle bound cmpsb (bad) call imul les and rorb stos mov mov in pop sub adc shlb xor sub push mov mov dec mov insl or icebp aaa xor hlt xchg adc lods mov xchg incl inc cltd jl cwtl rcr stos loop lcall pop movsb out mov and push pusha addl mov xchg pop rcrl xlat pushf dec cli add push nop sbb add insb addr16 nop add inc mov mov dec push mov jbe sbb mov fnop adcl test shrb stos adc dec mov dec mov mov cwtl stos xor outsl sub ret sub push out cmpl shlb hlt ja push jmp pop call enter enter add int3 test mov pop push xor lds lahf fsubrl (bad) mov mov mov lock lods (bad) jns mov fs int3 push (bad) aas dec dec daa outsl inc xchg repnz fild rep movsb in adc sub fs fcmove fs mov inc jecxz push xorl popa jo push aam hlt popa jl je popf jo cmp ror mov cld mov xchg pop daa adc adc adc dec inc push push cltd xchg aas dec push les (bad) sub and fisubr inc jl cld aas rclb fsub adc in rorb daa inc icebp mov jmp mov sbb push and push clc push pusha in inc je inc inc mov bound pushf add xor inc cmp and andl add nop xlat sbbb cld mov cli add sub fnstenv fs addr16 and enter pop xchg js (bad) jmp inc sub and outsl xchg sub add xchg lahf mov ret add aad adcl outsb pop mov jle (bad) dec int pusha int3 jo cltd adc push faddl pop sti xchg cld andl daa insl adc jmp xor mov mov in mov add int3 inc hlt xor ret mov lret add sbb cmp orb ffree cmpsl andb mov jb push inc push cmc enter hlt sbb push push arpl cmp in js and lock sbb sar push add scas lods inc xchg aad mov fadds addl shlb sbb mov adc push ds or ja sbb push xor cmp adc xchg lods test (bad) cmc mov loopne push dec mov cmp mov testl fiaddl (bad) imul xlat ffree test ret lods dec xchg call pop pop inc fiadd jo dec or mov add pop shlb add push popf pop mov sub je add data16 stc or lds mov pusha setbe cli cmc je adc add inc mov lods jmp cwtl sbb sub push loopne outsl dec add fs pop push mov and mov push leave inc sub test int3 sub leave cmp xchg push int mov and mov cmc (bad) int3 xor sub shll mov hlt or push and jge in adc test (bad) sub nop xlat adc adc cwtl cmp inc inc xchg xchg pop in or fmull sarb sub stos pusha call mov mov lods or ret iret add jae cmpb sbb daa movsb add mov cmp iret dec (bad) jmp vaddsubpd (bad) jecxz (bad) jae dec pusha out scas add push dec sbb mov into mov push int3 mov rol pop imul mov add pop push rolb adc test mov in xor jp dec inc rcrb pop dec push mov push sbb pop cmp je dec jecxz and subl pop sub daa popa mov add push wbinvd sbb add fdivrs nop inc fs test js ja (bad) jg and mov je and sub mov cmp mov and sub add inc lahf mov or lret xor push mov enter aaa or in fdivrs shll (bad) das xor insl jo sahf and lock stos add inc xchg push xor lcall sub popf adc xorl push xor dec mov sub or mov inc xor adc pop adc in dec in pop pop fnstcw les push and pop hlt das xchg sub pop jl stc or mov dec push in adc subl xchg cmpsb push add lret sbb add adc insb loop (bad) mov or dec xorb push insb stos pushf mov cwtl and xorb mov ja movsl rcll lcall inc orb sbbb push lds es fsubrs and mov mov hlt clc sar ljmp add gs add in (bad) mov adc lds cli pop xchg mov mov xchg mov xor xor iret incb lcall cmp mov ret (bad) and and mov outsl sahf sbb push jo fildll addl (bad) adc add push cld or push jne lock mov nop add dec (bad) cwtl cld jg lds jnp sbb sub fcompl or push fnstenv in push fmulp sbb xchg hlt push loop jae xchg xor subb pop andb lock es fmull mov xchg sbb pop enter add pop or aas sub bound in dec mov int3 inc add repnz push dec or hlt js pop (bad) lds orl adc add xchg and add gs dec sbb les dec inc js push xor sub pop sbb sub nop jo loope sbb fsubrl rcrl insb adc imul inc push push popf adc rorb pop in add out rclb adc cmp (bad) hlt cmp dec clc or cmpsb fisubr jno arpl jne xchg cwtl int3 mov les push xchg aam inc sbb aas (bad) and inc push rorl adc adc sbb nop jo dec pop cmp nop mov mov cwtl push call mov add push push mov cwtl jns fimull mov inc inc pop inc or sub es adc sahf pop cmp js xor dec mov sahf dec subb ljmp (bad) into xchg lock push pop popf add mov or xor sbbl jns mov or outsl roll lock aad out cwtl pusha inc add sbb rorb cmp andl sbb addb pop xchg in call mov sub sbb xorb roll dec pusha adc fcompl inc push aad iret es xor add jp cwtl mov jb xchg and sbb adc add xchg divl xchg add (bad) mov adc sti add imul cwtl cmp outsl cmp cmp loopne pop jnp mov js,pn cltd cwtl lods sub enter hlt in cmpl pop fcoml sub mov movsl xor stc fprem xor add jg mov hlt gs aam fs call nop dec add xor push cwtl sub fidivrl int3 dec roll push pop movsl testl sbb cmp inc xchg popf add mov cmpsl xchg sub cmpsb adc adc fadds push (bad) mov sub imul adc in cltd add (bad) sub mov imul ret inc popf sub xor jmp in cmp xchg clc or scas (bad) (bad) or xor and push mov hlt (bad) cs (bad) sub fdivl lock xor dec movsl lock mov mov adc ret out jmp dec xor sub les cwtl rorb and adc add aaa sbb push add cmp lods mov adc popa lock xor add lods add cmpsl push mov cmp xor scas jo fdivrs adc and add push movl scas pop bound push ss data16 enter cmpb aaa outsb add test add divl mov mov pusha data16 dec movnti rclb pushf jno rclb imul pop add cmpl xor and mov xchg add je in mov movsb scas out pop shll add ljmp mov adc inc inc or hlt dec push roll sarb pop dec inc mov pop lcall xor or les pop ds mov mov mov test adc test shrb stos inc loopne enter and xor rolb jle adc or in add mov jl lods fistpll mov sbb xor mov sarb mov clc inc jge,pt and ja,pt dec stc rcrb mov pop xchg push push sahf or cmp push movl mov mov push lcall push ret jl hlt repnz cs test sbb cmp js add or xlat pop std (bad) mov xor rclb cmpsl enter fidiv xor or cld insl add enter sbb adc cmp enter hlt jns imul fisub jae out int3 cwtl add jnp enter lods pop js xchg mov inc dec leave mov push fsubrl cltd pushl out inc loopne fucomp add subb dec jg data16 jae adc mov mov and adc mov fsubrs jae subb mov lea stc or (bad) pop push pop xchg pop stc cs cmp rorl lret or es fcoms pusha popa repnz push fsubrl xchg xor mov call orb push xor lods jbe inc push ret orb roll out cmovnp inc adc (bad) add pusha test jge xor sbb or push cmpxchg add push nop lcall adc lds nop jae test pop fiaddl shrb mov popf push inc addb add xchg movsl cltd jb rcll inc subb xchg lret or out push ds or sbb and leave and jae test mov sbb icebp fmull sub add ds xchg dec or (bad) mov pop out outsb dec pop ljmp adc mov call fcoms je xchg pop ds pushf push or xor aaa inc nop subb or cwtl lock addr16 xor mov fstps push adc in aaa fidiv add mov popf add repz sub inc adc cld fwait cmp mov or test sbb fldt enter cld mov sbb pop dec sub mov add mov and test adc sub or stc ret mov icebp cli jl inc pusha mov test jnp add sbb es sbb mov mov nop pop jno fisttp push out fs cmp leave jg dec jae pop sub (bad) mov jno mov cmpb (bad) and and inc lock mov or test dec jl pop clc cwtl les outsb inc mov xchg mov jae loopne xchg sbb shll cmpsl adc add and ficomp xor int pop fisttp insb adc jge adc insl add dec addr16 xchg loope add gs pop or xor add pop jbe addr16 mov dec arpl lock inc xor outsl and and push sub xchg (bad) mov mov sbb cmp js jae sbb mov xor loop out xor lock ds sar clc xchg insb test out and jb rcrl mov mov jo repz scas xor cmp mov pop (bad) fiaddl cld pop cmp adc mov gs pop fcmovnb xor outsb out push das inc mov nop cmp sbb push mov shrb and or sub push add or push pop lcall fcmovu sub ret and inc lcall mov or mov mov inc pop testl outsb je loopne mov repnz sbbl add ret dec dec add repnz xor int3 or and je add iret flds lods std adc not insb dec fs sub jecxz in adc dec adc lds sub iret out rorl mov xor xor test xor mov pusha mov rcll outsb faddl add cmp loope xor arpl jp inc inc dec enter nop fsubr rolb enter push mov push bound aaa pop add stos test ret repz jl push jae adc push in fimul mov cmp pop xchg adc xor lret mov dec into xchg lods dec loope sbb push aaa or or nop sub rcrb inc fs and loop bound and adc inc andl ret inc jae sbb dec shlb or jg adc mov adc or sbb xor aam cmpb ljmp fadd and mov fstpl push jmp jne lret add sti pop stc cltd pop cld cmpsb mov int3 sbb xor xor adc aaa sti add jae roll mov lcall and mov sub push cmc mov add push mov xchg mov mov jb enter inc jle or mov xor popf add dec inc mov arpl sti sub add lock cwtl pop lea je jg add enter mov add call adc iret in jle lret pushf jp add mov les sub push mov dec fsubr cli add fs add repz mov aaa adc or pop add and pop cld xchg xor and sub jle add xchg cli push mov rclb mov lea xor push inc xor dec and sbb mov pop push and jg cmc mov and out mov pop jae insb imul test push add sub add jbe push inc in jmp xor jnp push sub add mov dec cmp loope pop and xor cmc icebp lahf or in cmpsb lret ret or aam and sub and jge push add pop jb test fiaddl push jns cmc inc addr16 xor nop jge add sub xlat pushf leave add das sti enter cld add hlt xchg cld shlb cwtl xchg jo dec and nop push xor mov sar cmpsl mov loope sub and dec jno add push inc daa cmc mov pop or cld jp adc cltd (bad) ds test or mov sbb js mov loope pop sarb jbe loopne stos jns sbb pop push inc sbb xor (bad) and out adc push cwtl add ret or sub and inc mov imul repnz or and inc add popa sub outsl lea (bad) adc pop mov mov enter mov pop adc or mov push inc jbe idivb cld arpl push into push sbb dec cwtl adc and cltd cmpsb mov mov or sub movsb cmc xor lcall cmpsl push sbb inc jbe add or push pop fdivs popf enter adc adc js fsubr adc add std mov subl cmp or xor push push or inc and lods fcmovnb and cmpsl dec pop daa hlt (bad) mov rcrb mov icebp (bad) add push cmc push dec push test pop fdivrs xchg insl sahf mov and mov test addr16 jl mov push cwtl ret cmc adc sub pop or popf addr16 and insb movsb cwtl xor mov sbbb and sub lahf pop push cmp rclb sub cs imull loopne mov clc sbb push jp mov mov rcll pusha out roll scas movsl xlat ror adc adc jne pop inc inc lea in add test movsl mulb data16 push out ds sbb jb ljmp out and dec (bad) cli lods jle mov and sbb jge xchg sbbb lcall cmp pop jno insl in shrl (bad) xor ja,pt loop,pn inc jp daa push inc dec inc add mov cld imul das fs sbb sbb fdivs xchg pop push test jp hlt sbb dec push sub pop xor stos push inc inc xchg add pop or or pop adc mov mov push jl ds pop lock mov into loopne in add jbe ja mov inc (bad) mov dec mov add int3 in jae push int3 rcrb rolb inc jno (bad) pop in mov inc dec xor inc inc pop movsb int3 sub pushf adc in das std mov (bad) aam test cwtl jbe inc pop sti lcall inc hlt nop mov nop loopne fstl lock clc push scas int3 test jns dec popa and movsb sub jbe add cwtl cs lcall cmp mov iret ret aam and jno ja insb nop cmp movsb js testb jmp (bad) icebp jbe rclb push xorb push dec pop pop or dec mov and xchg jo lret cmpsb mov aam or sub pop bound push leave sbb mov sub sub (bad) ja adc sub jl in mov lea inc shll adc xchg jg call mov push adc or fsubrl hlt xchg jo and mov mov xchg clc aam or add push hlt add je pusha jb (bad) rol ret imul mov pusha test pusha sub dec dec and es and sahf rclb cmp cmp and dec shrb push cwtl push stc xor cmc sbb xor jne add mov clc in rclb mov lahf rorb and enter pushf fmuls xchg or mov lods or imul mov fild hlt pop orb out loopne add jbe mov js and rolb dec and add je neg lret add fimull into je sbb mov cli and push adc jecxz add cmc fisub rclb inc dec xchg or cmp dec js xchg mov enter inc pop dec cld or dec fcomps mov roll mov gs mov inc cmpl dec xchg cmp pop mov je gs pushaw cmp rclb mov gs mov and lods cmp inc sahf testl fild xchg add outsl fstpl cmp and fwait leave dec test add xchg test rolb sub add jae xchg mov call or adc pusha mov fildl add xchg stos push or and pop add sti add xor mov and mov test and daa enter in icebp stc clc lret xor xchg push data16 dec mov pop xor in or clc in and hlt mov mov pop xchg enter inc mov (bad) cmp lret inc and pop mov arpl cld push and and pusha fs or lock xchg dec mov mov wrmsr mov data16 arpl mov xor add xchg push inc mov jmp outsb (bad) bound inc mov cwtl mov lods adc sub jnp pop mov sub decb add xchg call (bad) negb rcrb add fs stc lcall push jbe insb pop stos push sub movsb add xor into insb scas sbb push jns imulb dec add lds sbb ja add mov add mov or imul jmp sub notl pop hlt pop push dec and or shlb cmp xchg repnz das mov pushf inc pop sahf fs notb sub comiss and inc sub lock les test push pop adc cmpsb int lods or stc mul jo adc out mov shrb sub ja call test imul int3 mov in repnz enter adc mov cwtl shlb xchg sbb aam into jge rorl fldl mov dec in adc cmp mov dec clc dec adc sub sbb cs mov (bad) xchg sarb fs cli or roll or stos enter arpl xchg push (bad) jbe push xchg adc pushf push bound dec (bad) rorb mov dec xor mov faddl and sarb dec sbb sbb and inc scas xchg xor mov dec fmull and dec xchg jno inc movsb arpl addl or sub mov repnz es mov ja fcomp enter sahf addb mov add data16 push loopne enter adc cld stos jne test add mov scas cs inc and push shr mov and push rcll dec push add pop jbe or cmp xor dec out cmpsl inc enter xchg pop and jae enter clc xor cmp cmpsb clc xchg ljmp fdiv add lahf lcall xor cmp xor dec hlt test lret and inc xchg sub xor testb in subb push and sub loope,pn jle and movsb jno pusha add or dec add pop int3 and dec loopne pop push and or add rol cmpsb es inc push xchg sbb out es cmpsl pop cmp rolb inc clc push call inc sbb add lods fadds or xchg jmp in inc xchg sub lcall mov adc pushf and pop adc (bad) mov orb cwtl cmp mov test in add add pop push rclb test pop int3 pop sti inc xor mov imul push cmp or and inc jbe push inc mov and dec lahf in pop mov add or sbb arpl add xlat es imul sbb or and mov imul sbb mov pop push insb sub sub lds mov movsl cltd jl sbb les mov or or and mov jecxz int3 aam cmp mov outsb or or push adc das dec mov push add rcl jns mov mov xchg sub sbb add leave mov bnd movsb inc and (bad) push test jae aas lret hlt and icebp shll rorb push mov bnd add xchg imulb aam addl pop movsl and inc pop jo addb sbb adc js push push pop mov lods sub pop hlt lds cmp cmp xor cwtl sub daa push or test stos and (bad) repz das and xor pop sub xchg loop dec pusha xchg mov cmpsb (bad) mov lea leave loopne jecxz and push test ds jns scas mov cli (bad) fnstenv cmp lds mov mov out mov and out jae jb into test mov insb fsubs push xchg nop inc adc dec lock shr rorl push leave cwtl pop or mov rolb cmc cwtl mov xchg xorb and push in pusha push ror adc and pop clc mov and pushf arpl pop inc pop sbb clc adc mov jae,pn pop and pushf push push add add scas divb aaa cld data16 or nop push or jbe rolb inc test neg cmp and dec inc adc cmpsb in (bad) inc mov adcb push push repnz pop leave sub mov outsb addb pushf sbb push rcl cwtl fsubrl add hlt inc orb incl pusha insb dec push xor dec pop dec hlt add jle cmp dec jo imul ret cmp inc fcoml pop test sub roll inc (bad) negb scas std iret fisubrl jb insb imul adc bound les nop lret (bad) adc scas cmp fldenv repnz push inc enter and movsb push rorl in stos dec cltd and and xor cltd xchg sub xchg stos add push shl cltd aaa rclb sub mov dec add adc push stc jecxz sbb pop sub dec std lahf xchg int3 leave or dec inc movsl cmpsb and xchg sub or or and (bad) or lock add pop xchg mov repnz (bad) inc inc push aam cmp and jno movsb out or sti add pop fidivl in sub or subl xor inc xor in test lods xchg cmp test hlt pusha lods repz dec sub test cmp stc inc std dec cmpsb cmp es out mov leave insb sbb cmp divl movsb inc scas ss dec mov ds ds add mov pop cmp ljmp (bad) adc pop stos dec les lahf pop xor arpl inc dec int mov fdivs cs add dec add scas out (bad) pusha in js add je push (bad) add xlat sub popa sbb popa fwait inc pop push jne nop nop test adc cld stos and popf adc icebp jmp aam sub and fnop pop call js and xchg xor (bad) push cltd jno cli dec js and (bad) fcomps inc push or pop add inc adc cld mov pop loopne out xchg xor pop dec outsb or fstl mov (bad) sahf adc push push push pushf imul nop or (bad) xchg add pop xor add or inc mov (bad) jo adc or add jecxz jle add test sub pushf sahf fs cmc roll fldl adc addb cli or inc xor xor mov and adc mov mov pushf xor xchg jno dec frstor xor or push fs pop add (bad) aaa aam pusha enter or push inc push lods inc xchg cmp xchg test inc data16 test lfs jbe dec mov rcll pop jmp adc rorb and add and repz pop jo jnp out and xchg push out or and jbe imul sub rclb arpl leave pusha push add sahf sub test movsl inc or je xor in cmp clc leave pusha cltd sbb jmp pop jbe adc lahf orb xchg cltd das cltd inc outsb fs lret and lods xor sub mov xor or test add inc pop ret jo push daa icebp inc xchg orl dec dec jno insb sbb insb das ljmp jns mov adc cld scas mov push lret lahf pop sbb pop push adc bound add adcb daa push mov test add (bad) xor rcr xchg xor pop and out lea add outsb and and jbe sub aam movsb lods sub push dec mov or xchg or or jmp in mov sbb mov sbb cli scas fmul add sub inc mov adc lods add mov xchg mov nop fmuls push bound cmpsb push sbb add cs push pop or ss fcomps mov and jno pop and add sub adc add mov scas xor sub cmp or xor dec lock xchg sbb dec lds inc cltd popa xor add scas into xor (bad) mov push or dec push in dec or popa sub jbe xchg aam push int3 js imul or mov add sbb jo push sbb and punpckhbw (bad) pop mov cmp inc mov aas stc jmp adc pushf les push test lods xchg rcrb enter add mov sarb mov push or imul jle call test addl mov imul movsl jmp mov jecxz ret add hlt jl xor pushf mov mov pop or mov sahf mov sub jae xor inc cwtl call je pop add xchg not mov sub pop xor pushf iret and test stc cmp pop mov js mov sub xor nop inc sbbl movsl jbe pop (bad) xor sub jae enter inc dec pop inc cmovle push push cmp jp fs mov repz outsl jle icebp pusha and test jecxz sub es cwtl or stos or cld xor cltd sub adc or out cmp adc sub jb aas push sub push stc popf leave and sub sti push mov icebp and mov mov mov nop addl pusha pop test ljmp hlt xchg ficom inc stc or cmpl test jle imul cs jg jp or mov jp mov jb xor sub ret jo js push inc or inc ficom and incb lss cmp mov sbb daa mov inc xor pop lcall pushf jo jl test and xor sahf nop loopne in sti lret xor sub xchg pop mov sbb sbb bnd repz inc addb mov mov sahf enter pop or add jp xchg or add (bad) sahf mov inc mov inc hlt xor lret lret les jae ret sub cwtl (bad) or mov clc loop call mov addr16 xor sub rcrb ret inc clc push xchg adc pop mov adc xor cmpsl add push cld inc js dec adc mov das sahf leavew imul adc inc jb xor js pop cli les andl lods ljmp xlat xchg cld clc mov lock dec into lds icebp xchg mov insb mov push and xor mov cmc scas addr16 mov cmp repz roll inc into iret push (bad) push xchg sahf in sub inc mov push or or test add test add mov or adc mov in or sbb mov add dec push sub sub lea ja es imul es test hlt inc aaa inc shlb das and cltd jno or subb pop sbb mov hlt mov clc inc add xchg dec adc shlb daa iret xchg (bad) add fadd push (bad) mov xchg dec push sbb fstps adc (bad) add bound jns mov dec inc add pop mov and test dec xor popf inc sbb cwtl or or sar repz and aam les dec dec and repnz mov mov (bad) dec sbb dec xchg pop out pop inc fs adc sub hlt or leave sub pop adc add loopne adc mov mov and mov cmc daa dec scas fisub imul js sahf pop test addr16 inc mov pop movsl xor in cmp adc lock addb loopne inc loope mov mov mov inc push jae lea notb out scas icebp pop sub in add frstor movsl mov and ret xor les test lret push adc into jnp in in fsts dec insb cltd test or inc and lret pop leave inc sbb cmpsl jb inc mov push (bad) sahf mov xchg pop push adc cltd xchg inc hlt push pop jbe dec fdivrl mov sub add (bad) add subb dec test orb sti and inc cmp popl ds (bad) je out xor aam and sub enter jne dec cld or fs (bad) sub loope mov popf insl sar jle jl add add enter inc loopne mov hlt add mov pop or pop sbb lock hlt xorl or xchg push add cmc add fimul js add mov ljmp cmpsl mov popf mov dec pop cli xor mov or inc out push add repz mov jbe sbb lahf inc mov lods lock stos lock cvttps2pi dec sbb lds enter cwtl sub mov mov push and sbb cltd int addb and cltd inc lods sub into add aas dec sahf test pop sub enter aam mov aam mov adc and mov and and mov fdivs addb or lea or enter js nop xor or dec or mov in add cmp ret ds inc dec sahf jo and loop or dec or movsb jmp pusha and in xor add fmull out and xchg lock sub jl incl inc lods add test das js hlt pop push test pshufw inc mov inc mov cmp jns or shlb mov ret test push sbb dec sbbb pop outsb jo mov add push adc mov test mov cmp loop test subl xchg adcb inc jbe cmpb push rcrl xor popa test imul mov adc jne jp (bad) or imul or add hlt dec mov out divb (bad) sub cld clc adc jne cwtl into movsl dec or out mov (bad) xor xchg mov inc mov testb stc lcall cmovle xorl mov or fsubrl adcb out and divb and insb rcr mov jbe adc jnp mov jp push les pop movsl sahf js sbb mov test sub push jmp out rcl push pop mov pop inc cld es (bad) sub dec mov in xor movsb insl jmp in add aaa mov pop or ljmp scas mov add test inc pop popl mov pop mov sahf mov sub faddp clc adc pop pop inc std ljmp cmc push lock mov orb cmp mov push lods inc les and pusha test push stos enter mov pop dec dec and and and cltd shl sub imulb add mov and js adc ret clc hlt or in andb movb cld aaa pop sub loope popf xor aaa jbe lock inc and sbb lods in xchg sahf call pop mov or test and es xchg (bad) jo cmc inc pop cwtl sub sahf mov inc or jo pusha add mov rclb jns nop (bad) inc add adcl push inc mov movsl pop aam cli test push inc pusha add xor rolb pushf sbb mov sbb fcoms lock mov int3 lock jl cltd dec fsts push sbb dec mov pop cwtl mov pushf insb (bad) pop pusha inc into dec jo jo inc add mov mov mov cs cmc dec inc loope sub test imul pushf lret (bad) sbb inc dec lcall scas in push sub inc stos push xchg add ret les dec js es pop mov testb push inc mov or lahf clc test mov dec dec sbb (bad) push cwtl cmp scas popa mov lds pop and xchg into adc arpl and cmpsl push and call xchg push (bad) popf or xchg mov xor test inc mov xchg test jne xlat dec mov sbb lock and sbb fs sbb lock xor xor dec sbb mov and jmp add sti cmp add popf sahf out push test in xchg xchg push movsl mov sub mov push adc adc inc mov sub cmp mov subl add xor and test xchg adc jbe test add mov inc or rcrl cmp or xchg mov cmpsb daa nop or aad call and push add loope pop and xchg and (bad) push adcb sbb stos lret aam subl movsb mov push sub jbe add or pop pop inc dec sahf repnz add jbe not xchg test daa sahf jne test jno pop mov lods or sub in and call mov mov xorb sahf ja mov jo icebp popl jbe sub (bad) add mov pushf mov les inc nop addb lahf cli add push inc sarb inc push test sub adc pop add jo lods pop xor mov hlt nop and test jmp jmp fcomps jbe adc sbb sbbl dec add xchg and and fdivrl nop pop sbb or inc out stos (bad) call sub mov mov mov dec fcomip mov jg fcomp xor aad jmp pop xchg mov pushf sbb das sub (bad) jae sbb iret push xor sbb test leave js xor cld mov sbb movsb test lret cwtl jo lds aam mov clc push mov and cwtl dec mov mov add jb jbe sahf cmpsl cmp lds repnz cwtl push pushf ss add (bad) lods cwtl inc call sub sub adc push add push pop push push jo test (bad) dec push pusha sub ja cs or movsl shll or or sub pusha push mov (bad) mov sub add int3 lret or test and mov cmp pop mov (bad) dec les or dec clc pop add negb push enter iret inc pop xor in add xor movsl xlat rcrb cwtl cmp sub jnp sar aas cmpsl jo in imul xor mov sub enter adc aas dec and jle sbb adc sti add iret rolb lods fmuls add decb mov test outsl cs pop xor and hlt and push (bad) fsts je test sub sub addl std test add cmp (bad) mov adc mov pusha and loope enter mov (bad) inc adc push jb add dec pop test add aaa xchg add dec pop decb scas add (bad) cmp subl mov das out dec scas jo add cmc test or jp rclb leave jmp addl sub adc in sub push js add pop inc add orb and cli rcrb pop inc xor or xchg pop add cmp rorb (bad) mov add xorl jmp adc xor add mov scas aas ds xchg lahf push mov sbb xor add rolb and movsl add or pop dec decb test dec mov test dec mov jmp pop jge mov test aad nop cmp adc adc lods addb add in outsl leave dec add sub mov sub mov mov xchg and pop xchg push jb and mov and adc enter xor loope sahf adc je stc push call cmp inc adc cld addb hlt and xor mov mov sbbl push push roll cld fmull add fiadd insl jns cli pop sbb (bad) cld pusha inc test std xchg xor push fadd cld or popa lock imul movsl cmp pop mov out cmp jb add aaa add int rcl clc inc dec add push imul cmpl mov into inc (bad) daa ja stc sbb jae and rolb sbb push shlb add adc pop cmp cmp (bad) das mov addl stc and mov lcall jmp jo adc test mov pop test mov (bad) adc sub inc test inc call dec adc les nop and or push aaa test cmp mov pop add jb pop or dec out cmp mov pop shrb sub xor dec stos mov mov add or test (bad) jne cwtl sub mov in cli jo insb mov dec push add cmc pop mov cmpsb xchg or pusha fildll add cmp rclb jbe repnz pop push pushf xor mov push dec push sbb xor mov test dec pop jnp roll mov lock xor jns mov add or hlt loop cmp cmp dec pop paddsw mov jno fildl and and cmp cmove add in scas loope shl lcall arpl xchg aam and in cld add and or js add (bad) out mov imul pushf pop and sbb in and add and or fisubrl or (bad) incb push arpl adc cmpsb push add sti mull cmc inc jno mov sahf jle sub cmpsl pusha adc mov pop mov leave rcl jb push ss cmp add xor add pop or jp add leave jno adc hlt add cld or lds ljmp icebp dec pop adc (bad) mov imul ss cwtl fcomi jmp sub cmc xchg adc call lods sub call mull (bad) lahf mov dec mov enter in inc jmp pop fxch adc cmp (bad) sub and push roll jnp sahf (bad) mov (bad) cmp fbld or dec dec sub je inc shlb jl push das adc sbbl or add (bad) ss (bad) lock push or inc call xchg (bad) pop ret and cmp mov add jns enter int3 cwtl pop pop push mov test sbb mov and xor xor fstps rolb sarb das stc (bad) inc test push add (bad) loope pop idiv mov xor pop fcomps push xchg call xchg cltd test (bad) add movb scas cmp push test push pop xor (bad) test fistpl ljmp adc (bad) es (bad) sbb mov push stos inc mov in enter js fwait add xchg aaa mov popa and clc xor sbb das fs push add jecxz pop test orb push add dec (bad) das sub (bad) aaa stc dec or or xor pop gs mov movsb (bad) pushf push cmp out cmp push sub dec int3 orb popa mov dec xchg inc pusha push mov inc mov mov aaa or and xchg pop mov cmpb stos add mov lds sub cmp adc popf push or test cmpsl enter add sub pop ljmp add add xchg addr16 add xor jb push push popf and sbb jae loope push repz jnp mov pop jb xchg call xchg inc or pop mov add pop or mov push pop sbbl mulb test push inc hlt adc or push call push jo sbb (bad) stc ret bnd dec stc lret loop pop jg (bad) pop shrb pop cmp lea mov push aas loope mov jg arpl inc notb add ffreep cld cmp xor mov mov arpl fimul fdivl adc lcall and xchg pop les mov nop add mov xorl addr16 adc add and faddl mov aam adc out test mov dec and fimul jg add pushf add jl push cld les jne icebp ret lock int push data16 pop lods xor (bad) mov jne dec ret xchg aam jb inc mov pop (bad) enter dec lods pusha cmp das incl xor movsb cmp in lock (bad) pop pop clc nop mov cmp mov pushf dec cmp sub jne out pop mov jle fild or cmp push dec jle test ja (bad) data16 fs pushf sub add cltd fs rolb add pop mov mov cmp shr icebp or test loope aad testl jns test sbb xor mov dec inc sbb push jne out lds xorb fidivrl sub dec test mov pop (bad) mov loopne cmp push js scas push popa add aas push popf mov cmc jns push jl daa pop aam sub fcompl fdivr cmp sbb adc push movsb add cmp out (bad) les jns push addb mov rol and jb jae add scas idivl pop push movb rcr mov adc add repnz int3 loop xor sub jo je inc mov push and jp data16 cmp push cmp sti pop sbb pop inc push ss xchg in pusha jl add sbb and add je dec adc mov push (bad) xor test out jg dec adc popf cmp push inc add movsl or mov push push sub add jge cmp jg jp push jecxz pop add test cmpsb fildl add andl int3 sub cwtl (bad) add jae or cmp xor xchg mov dec sub jno add inc ljmp mov adc add fsubrp rorb (bad) call cld xor stc insl loop shrd hlt sbbb loopne mov pop sbb adc (bad) js adc sub add inc mov cmpsb push add in and jmp cmp nop sbb adc clc stc and pop add pop mov rcl mov add das repz sub std mov pop int adc cmc mov pusha out arpl inc cmp imul rcrl sbb loopne cwtl mov and icebp roll mov imul add (bad) cs outsl ss mov out add sub ds add xlat or xor mov inc mov xchg lahf subb aam lods mov mov push leave adc sub or jbe mov cs add lock adc ret lret xor arpl dec xchg mov test stc fucom fcmovnu cmp in push cmpsb cmp cwtl add xchg stos inc (bad) (bad) int3 aaa mov cmpsl or lds inc stc lahf mov lss and add clc outsl (bad) push ja mov push ds (bad) xor (bad) loope dec cmp sub add arpl sbb mov sub sub adc data16 mov sub adc sbb fcoml xor rcrb (bad) mov pop push jmp adc xchg std pop sub inc pop in push and pop and fs outsl xchg add mov and cmp das dec pop mov xor (bad) nop inc adc shrb cmp outsb or jbe jno sub inc inc sbb xlat jecxz adc mov add insb out jno sub pop orb sub add xor push fwait push add ds xor inc test fistpll jno movsb sti mov movsl push pop add rcrl inc mov iret inc or aas add mov add mov pop or inc aam push outsl fsubl cmp sub les inc mov dec enter dec add aam int3 add push test push lcall xchg loopne ljmp loopne pushf mov mov mov bound clc sbb es cmp and or push adc imul cwtl cmp cwtl jge inc jo jne clc inc andb sbb push imul js xor aaa leave xchg sbb push cmp push xchg addl push les andb fwait rclb jp mov sub push or sbb sub sub fidivl in sub lods add (bad) ja xor test repnz test jg not pop pushaw mov cltd fdivrs out jno adc add pop mov femms sbb or or mov mov leave in inc fcom pop arpl adc loopne es push out pop std sar (bad) sbb popa xor fistl lret cmp sbb xor sbb scas xor leave lret aaa ljmp mov pop out or add ljmp sbb jo (bad) je jno push xchg cmpsb cmp xor in movsb jo push lea in fsubl cwtl into xor mov hlt ds jne,pt pop mov mov fdiv add mov insl dec es xor sbb jg and inc add xor pusha outsl test push sub and add lcall aad dec dec mov iret xchg fstps push cld cmp loopne notb out movsb or mov mov add popf (bad) aaa cwtl xchg push sbb data16 push or add insl cmc xor xchg lods pop and rcll sbb daa nop add test rcl repz jecxz subl mov adc mov ss adc fistl sub push dec insb out sbb cmpsl or fldl fdivrs dec movl ficoml pusha adcb in and aad (bad) lret adc clc or repz hlt dec dec cmp hlt jb xchg lods adc and xchg dec es movsb (bad) adc dec mov sub mov add clc daa out adcb in pop pop outsb add insl sub and mov pop outsl sbb push popa xchg xchg push adc pop inc pushf cltd or inc adc cmp jae mov mov insb push push and (bad) dec inc fistp add and fsubs adc or andl mov xor xor test xor popa inc nop pop in nop adc loop (bad) adc cwtl arpl jb jg cltd sbb nop cmp adc xor fsub mov inc in mov or add outsb in cmc scas or (bad) or add stc dec add outsl rcr test mov mov sbb jmp add clc push dec adc sbb fadd mov fistpl into mov dec pusha jl push call sarl sarb fcom lahf add jne mov xor stc idivl in or pusha adc or mov xorl sub xor pop mov sub push push add adc sub mov xor cmpsl ja cltd mov and dec ss or inc mov pop cmp inc or roll and sub push fmull (bad) inc and loop testb adcl xchg mov lock pop xchg or mov lret pop or jo in subb add lds and jae sub adc jp inc xchg mov scas addl xlat inc dec popa dec add xchg lahf add (bad) ficomp mov out arpl or and (bad) and fwait dec stc jge loope or movsl mov pop mov inc icebp inc (bad) mov push xor into xchg adc inc cmpb jmp inc ja xlat or sub jle xor pop push in push dec enter lahf adc xchg test dec sub test and or movsl scas add xlat jg push sub push mov sahf xor out hlt mov push mov sbb or rcrl daa and and xor mov stc insl push jmp or and sub jecxz mov daa int3 mov dec sbb dec bound cli leave add test outsb pop inc mov inc add js dec sbb lret and add call in or push and push mov xor add push jl add cmp sub outsb mov sbb mov fdivl push add in pusha pop imul jmp (bad) fstps rcl mov addb insl mov icebp sub push push and js xchg add ja dec add add and out inc add aad out push arpl ja or inc jbe add jge pushf (bad) std rcrl idivb enter cld mov jno xor rcrb pop mov jle add jge mov mov loopne (bad) cltd cmp je (bad) adc pop pop in lret lods test push add jp sbb mov and test pop ds enter mov cwtl mov daa mov and lods aam mov lea insb dec (bad) lahf pop fucom call cmp js in loopne arpl mov push sbb mov push pop enter fmull xor fs rorb fistl pop add xor fldl stos push in mov add es push pop pusha sub cs xor js xchg push mov imul mov mov loopne iret in push mov and adc inc hlt lahf mov pop xor lods push add xor les cmp or int3 mov inc sub pop add cmp dec xor cs imul or je push sbb cmp mov adc sub mov sub adc cli dec fisttpll inc out add push xor and ds jecxz ds sbb sbb clc inc push (bad) frstor repnz sahf lea lock xor clc pop mov pop mov mov stc dec subb pusha pop pop pop dec sub test mov ret inc add test adc aaa je and aas ljmp add out pop test mov lods cmp xor loop dec maskmovq adc sti push add les mov xor bnd stos xchg pop add push pop into sub lock cmp dec out sbb imulb vmovaps add enter in rcll pop dec mov cs popa jmp popa jg add inc fiadd jns sbb (bad) add sbb xchg cmp inc and mov ror or fistpll cmp push fst add mov inc jp pushf sub xor push mov adc cmp cmp cmp fdivl pop cmp sbb cwtl test cmpb sbb pop push pusha and icebp xchg adc pushf sub sub xor sub or fwait xlat lcall sbb add xchg adc mov cmpsl aam jbe add adc sub aas movsb push stc mov sbb add int3 mov jecxz jo add cmovo sub or add loopne fcompl and test (bad) fidivr or add push cmovle add sub sbb nop mov (bad) lock (bad) fcoml inc sbb (bad) mov xchg ja cwtl sub pop (bad) movswl pop pop mov add or inc jb inc call push xlat sahf test insb adc rorl mov sbb clc pandn or add pop frstor test es je push sub cmp mov aaa arpl mov test push orb sub push out scas and add xlat ret push loopne ja add clc pushf cltd mov push in nop mov pop leave dec push ficoml idivl xchg and loopne adc ror add ljmp pshufw or adc cmpsb sub add aam jbe inc xchg xchg push cmpsl das out icebp lock add adc fisubrl dec push and mov test dec nop into fiadd push pusha push pop lcall dec scas cltd leave sbb pop sub dec mov js cmpsl lahf push add xchg ss in sarl cmp dec iret sub (bad) or (bad) xor mov or dec fldl inc adc jle xor aas sub fnsave cwtl xchg inc cmp test and dec pop je fsubrs (bad) icebp adc push adc jnp and cld pop adc sbb rcr xor hlt clc push stc test inc cmp inc adc dec adc nop or shrb popa mov jb mov andb cmp idivl sarb lret push inc push stos fimull movsl inc push push lret jae mov pushf mov fisub mov sbbb add xchg cmc sbb and loopne cmp add (bad) loop mov lgs (bad) push mov cmp cwtl cmpl and jns xlat pop or movsl or fsubl rorb in les dec xor xlat xor or sbb add sub and and repz lret clc inc dec mov dec movsl nop mov js add btc mov mov xchg es sbb pop (bad) ficom hlt dec jl and hlt dec or insb js push lahf sub and xor jge inc pop mov or jge adc pop add fwait enter mov xor jmp fs mov lods sub popa adc add scas sub ljmp ss fcompl aas sahf ret scas push sub out or xor mulb add test sub xor and inc jg xchg adc enter push sbb aad out inc jg sub sub add cmp inc mov add push mov push cltd mov pusha fs punpcklbw adcl and int xor aam test sub ror mov push or das je mov add push (bad) nop jp clc or jae push mov cmp push and mov xorl mov pushf dec cmpxchg inc and bnd inc lret jno mov (bad) mov lods stos cmp and cmpsl aam push nop push popa jge pop rcrl leave leave pop test push test push idivl sbb sbb aas push cmp sub lds cmp pop lods add add dec add ljmp or fsts xor pop repz bound lock add pop xor adc adc lock std out inc inc mov mov push aaa add out inc cmp add js fsubl sub cltd pop xchg mov loopne and cld xchg push inc xor sub in mov adc push push xchg inc mov jl pusha jnp inc aaa cs dec adc xlat (bad) scas and sahf test mov (bad) mov fnstenv xchg and pushf xor sub mov pop addl lret addb push push mov xchg jno add mov add jo push rcrl data16 leave ret jbe xchg shl rcrl mov xor subb notb hlt push test adc je sbb addb jbe pushf ss and jp sub push adc mov rorl sbb push xor push or into shll jmp mov sti stc jae lds nop mov mov adc aas xor sahf adc fs cmpsb adc (bad) dec pop xchg and jns aas loope xchg mov inc mov ror pop fldcw pop pop js and push cmpsb nop xchg jecxz sbb adc xor dec pop add nop cmp cmp aaa mov adc in (bad) mov inc sahf sub (bad) fs xchg xor xchg mov movsl shlb lods and inc and jnp dec fs or rcll add pop sbb inc ret sbb mov push shll add aas dec andb and rclb repnz xlat add xor inc mov xchg sbb mov cltd fildll dec das push xchg add jae shr lea mov shrb jb imul mov daa pop xor mov rcrb ror push push or lock mov xchg adc (bad) mov cwtl rolb mov xchg jmp bswap cs (bad) mov es add iret insl out dec mov fwait cmc cmp or lock jmp loop stos scas xchg cmp xor fstl test xchg and inc jbe nop loope lcall fs sbb cmp sbb clc sub dec cmp aas lods xchg adc outsb xor rcll and dec les push xor mov clc adc add sti jae dec (bad) xchg jno add pusha aaa fs shl adc mov mov pop adc sub or insb ret fwait les or push xchg sarb mov cmp cmpsb sbb out rcll xlat or jne clc pop add bnd or pop jno push bound aas jmp mov and (bad) and push lods rolb jl bound mov and cmp andb xchg add vxorpd jp dec fdivl xlat inc pop adc daa addb pop or push and pushf inc or and add xor push int jg pusha push test loope push adc adc or mov lahf fiaddl xchg xchg sub sub cmpsb roll test cmpsl pop mov hlt fcmovnbe test inc fnsave xchg push cmp aam mov push adc enter lods mov mov out ljmp jo or and test in xor jb inc sbb or sub xchg cld or mov sahf push int add and pop pop and adc ret mov leave push rorb push sub lret mov xor outsb sbb mov out loope inc push (bad) push stos or sahf (bad) mov or idivl sbb in and xchg outsb add shrb jns popa movsb fsubrs push or fisttp pop xlat jno fcomp dec cli or inc jb in adc pushf or xor adc adc jnp adc add push (bad) lar jp pop mov test mov loope mov sub pushf sub rcrb inc mov or (bad) sub ret mov fisubr sarl nop cmp mov xchg mov fistpl iret and or inc jo loop inc add push repnz dec dec (bad) cs jb or dec adc test adc push addl ss cmp ret and sub in aas rclb sbb xor mov fmull incl sub add adc aad xchg arpl sub sub adc cmc pushf add sub (bad) fsubs scas das subl ret hlt or xchg mov loopne mov mov cmpsl data16 pop es rol xor mov mov mov ficompl stc xchg cmp mov mov and lock clc dec test aam or pop movsl cltd test mov mov lods inc xchg push sahf stos mov enter jo xchg faddl inc (bad) xchg adc fisttp xor push ficompl dec mov or add rolb ret cmp dec jb call push mov mov aas add fisttpll cld jnp ficoml cltd adc jo lods or daa push jns add pop mov cmp fstpl cmpsb add inc sahf sbbb adc sbb subb push mov (bad) push rolb sub mov subl jb dec loope and js lret popa js add adc adc push out inc daa ret add xchg in repnz int pop jl divb xchg adc hlt sbb mov (bad) or inc and sbb sbbl xchg sub test sbb inc or add lods xchg pop sub push sarb push insl sbb push cmp mov shr movsl mov inc repnz clc inc xchg fcomp inc lods out jb movsl pop dec roll test mov jg sub mov loope add aas mov cmpsb and hlt movsb cwtl mov shrl enter add rclb ljmp xchg dec test add pop scas inc and idivl sub pusha inc lds mov ss xchg test jl mov dec js jp fisttpll xor inc cmp inc inc add or or aam mov fistpll imul sbb push add (bad) mov sbb gs push fs fsubl dec sbbl mov les ficompl jle mov push push and pop mov les mov add push push xchg sbb aas jb dec pop xchg add outsb mov test cwtl lret ret call test (bad) cmpsb jmp add pushw sbb sbb repz lcall xor int3 cmpsl stc (bad) cmp scas xchg inc fcomps xchg add push enter cltd sbb pop add cmp mov pop mov jmp mov clc push aam push mov xor and out lods (bad) hlt mov jo pop sbb outsb xchg dec test add sbb dec lods out jno mov sarl scas pop push pusha ss xchg (bad) clc mov xchg test or imul add push clc cmp enter or mov mov xchg sub and jl imul sub sarb scas sub mov mov xor sub pop outsl aam add xchg xor or or das ret es pop or fwait add into jns adc fsts mov mov das push dec sbb and lret cmp xchg cwtl cwtl mov addb jno dec adc in xchg dec cmp or nop aas clc mov adc cmpsb mov mov mov mov cmp lret rorb xchg mov lret xchg lods xchg js pop test pop push add in cmp sbb rcll mov xchg sbb add jmp dec or in mov cld scas mov xlat lahf ficoml push (bad) aas add xor fisttpl push dec push add out mov cmp pop xlat addb jl xchg insb xlat jns sahf jnp aas test xor mov cmpsl xchg sub rorb jo cs mov cmp pop jb or add fdivl js adc mov subl sbb push (bad) mov fs xchg push jae daa shlb and fs push stos les push push xchg xlat cmp ss das pop arpl mov add cli call mov cs inc add or push cwtl movsl mov sub and hlt fwait lock bound dec rcrl in push pop cmpsb push mov adc pop cltd fisttp xchg lcall cmp add lods aad aas dec mov into cmp mov in frstor into pusha xchg or test push sbb xlat lret xchg pop adc xchg (bad) xor mov push add lea out outsl push mov mov lds adc loope ficomp xchg pop and arpl leave jo (bad) xor and je (bad) push pop pop dec mov inc pusha (bad) cltd mov push aam sub sbb add xchg ljmp jg pusha adc ret xor cmpsl cmp cmc xchg popa add adc (bad) mov add lock fstpl sub add dec sbb mov cmp (bad) aam ret sub mov mov push ja fcompl hlt scas shl add and cltd clc adc lea mov push imul mov mull pop mov or jo mov faddl pop lods sbb xchg test inc mov shrl dec lds jg push (bad) mov mov or sub add dec cltd cwtl mov mov shrb pop jecxz std aaa xchg rcl mov xchg push sbb lahf push xor jecxz enter push sub adc (bad) hlt push or sbb repnz mov jo ds insl cmc shlb push add mov addb fstpt add stos stos jno xchg sarb add pop inc push xchg movsb andb notl dec add add pop mov fsubrl adc push sub test repnz hlt sub add push cmc scas mov mov mov sarb insb sub fisubl lea lods addb jnp add dec mov or (bad) pusha arpl and xchg xlat repz hlt mov clc ret out dec cld in (bad) cmp add pusha mov les sub xlat clc jl aas adc orb insl in pop testb aas cmp hlt sbb je movsl and and push lods fwait lds or mov mov int3 addr16 lock inc in mov pusha aaa mov jl sti push jle xchg inc jecxz add cwtl clc cli mov loopne (bad) scas in add pushf and fldt pop cmp jb (bad) xrelease cld mov pop dec dec or inc sbb in shrb pop xor out sbb fdiv and cli or or adcb in lods insl nop adc repz std js shll and lds xchg sti push out mov (bad) xor lret mov push xor mov mov imul (bad) jne bound mov or or sub cmp pop pusha sub and das movsb push sbbb push imul cmp and inc rcrb les sub dec scas ss and mov and xchg test mov outsb mov hlt lcall sub imul in ret in xlat add nop les test mov mov and outsl imull ds xchg lret inc insb cmp xchg iret inc push std dec push loopne out add (bad) jp decb and sti sarl xchg enter sahf int pop aam cs push out add lock inc mov xorl stos add mov push nop bound mov loop pop add adc pop test xchg hlt or movsb inc pop cmpsl and adc sbb add out inc mov cmp xor dec rclb pop in and jbe icebp mov les fidivr fmuls sub enter and and roll out xor and and lret sub xor jg mov shlb jo adc cwtl adc push cld adc jle das ret sbb mov es shrb adc mov sbb mov dec js in fsts sbbb stos popa sbb add cltd out loopne das data16 add mov cmp pop mov (bad) jmp push fdivrs or ss stos cwtl sbb nop fldcw sarb push and sbb jnp push lahf pop rol test xor inc fs mov adc dec pop add jp jge int stos lcall aad mov dec jns pop mov fucom cmpsb mov sbb or inc stos or pop add mov movsl jl movl inc mov stos push lock je (bad) in rcll into cmc mov xor pop mov mov test sti sarl scas (bad) and add lret test lea fadds adc in and dec sahf (bad) xor mov cwtl push repnz xchg jecxz stc add sub inc pop fsubl xor pop sarl and lret or xor movsb mov sub pop test sbb inc jo sub leave imul bound pop stos inc movsb add test addb jae clc cmp out mov cmp sahf mov add dec lods add insb sub outsl mov ds adc add mov test cmc xchg into pop loopne sub push dec hlt add pop xchg or xchg pop (bad) fadds add call mov (bad) xor cltd fimull pop div xor test in adc and mov sahf push rolb xor pop add popa ret inc int3 jge mov ret pop xchg gs (bad) repz sbb hlt stc xlat pop add pushf jmp sarb jbe push in pusha pop adc movsb push inc jno xchg and pop mov movsl dec sbb and rcrl cwtl add orb mov mov into ret add aaa lahf cmpsl add adc jne mov xlat xchg jecxz lret into or ret jno push pop test push pusha jb pop or cmp add mov and lahf stos inc js fwait xorl pusha xchg sbb cwtl retw call enter xchg xor flds cmp and jmp popa or sti or fs iret and aas shr pop stc ja push dec das sbb js add cltd addl clc cmp adc add call lea adc clc incl leave cwtl subb das add xchg (bad) fdivl jg add flds imul shrb or stos shll lcall out stos dec mov adc sbb cvtdq2ps mov ja (bad) jle pop cli add push mov imulb scas inc adc inc mov in xchg mov cmp stc fldl push aam pushf movsl shrb sub dec add dec push jno xchg or xchg test adc loopne mov leave xlat stc (bad) call inc pushf mov xchg add nop push push mov mov les nop lods and adc aad add xor sbb or or aaa sarb sub outsb arpl shlb lods jg add push loop pop mov fdivrs repnz dec mov scas mov daa jnp sarb imul or jae pusha cwtl jb,pn (bad) and dec and mov test xchg stos movsb mov inc (bad) mov in pusha adc sbb pop xor or je cmp mov jo sub pop call or fs inc sub mov add sahf arpl scas jl adc mov pusha cmpsl pop leave or jl rcll adc pop stc mov sbb mov scas enter and mov xorb mov out fnop rorb dec rcll xchg cmc cmpsb sub xchg aad hlt dec mov cmc notb sub inc cltd sbb and dec add test insb pop repnz add rorl rorb inc adc pop push les aaa inc in iret fdivs imul xor adc mov mov aam int3 and sub out out add cmp loop aad inc add or xchg test jo jmp or and mov insb js dec ret in test cmp dec xorb mov aas cld mov jae popa divb dec mov dec pop push movsb test xchg test mov movsb pusha xlat xchg test aam stos and loopne add fistpll lcall inc xlat sbb add mov push and pop incl adc mov insb push js adc xor add (bad) dec dec rcr clc push sbb sub jle jmp test nop popf gs test inc xlat add mov les pusha sar insl cli xchg movsb mov cmp dec jmp add adc sbb and xor loopne cli clc pop adc lcall (bad) repnz jne pop in or adcb sbb pop pusha or inc (bad) xchg sub test insl rcll mov sbb add cwtl in pop push xchg cltd aas inc cmp cs lds loopne sub mov sbbl (bad) sbb js mov jns cli sub sub mov jo (bad) stos pushf xchg imul iret mov jo out and mov mov mov xor mov sub fucomi xchg push and pusha jo inc pushf movb nop ret add push and mov mov push inc jbe test shlb movsl mov push add jo jne dec pop ljmp pusha popa and stos out andb jb cwtl mov add out arpl sbb cwtl and hlt add andl xor lods inc cmpsl lret jmp nop mov inc or es sbb dec popa and add push cmp clc cltd pushf push inc movsb hlt jno sub je and mov cmp fadds mov lds mov adc loope in jle imul lret test loop cmp pushf loopne xchg xchg addb (bad) push lds mov jo jbe fmuls data16 scas mov and outsl push jg inc jecxz or sbb sub fldenv nop cmp sbbb xchg loopne,pn js js lock les xchg cmp test lods xchg stc clc and aad imull movsb in or mov add fnstsw cmp dec cmp adc mov test popf in (bad) inc cs mov push jno pop jg cmp xchg dec add cwtl mov test lock xor push inc les add lea add adc mov jmp and test loopne aas fdivl inc cmp scas and add lock xor jbe subl mov mov (bad) pop fild scas sahf pop push dec dec dec in lret and shll cmp fsub pop add sbb pop int add and aas mov pusha in stc cwtl or xor shlb add das push cmp cltd xchg aam jl cs rorb cli inc call mov cmp rolb lcall or mov mov int3 pop xor and push pop adc inc rclb repz dec lock pop insb mov pop ljmp push mov cmp stos mov add sbb aas pop out fstl add push dec sub fldt rcrb jns mov adc xor sub dec cltd mov cwtl push aas fisubrl call loopne jne jl push das int aam in add mov and mov movsb pop pop cmp cmp adc mov rclb fimull sbb xchg jne mov push outsb and (bad) jo (bad) jae daa mov mov cmp sub sahf test sbb add dec hlt push ja lods mov jp xchg push add inc or fisttp pop pop mov lods push xchg fsub adc and mov or cmovp clc call mov sub sbb aaa mov add jl orb pop cmpsl dec sub js and je sub je pushf inc lea jp cwtl mov cmp sbb pushf jg or xchg fmuls xchg xchg cwtl loopne dec ret inc inc (bad) mov xor arpl jbe ds fnop stos nop shrb adc pop sbb push pop or mov pop mul push mov or hlt pop in inc enter sub icebp fdivs in xchg push scas inc outsb pop xchg sub ret xor int3 add and mov iret int3 add inc (bad) ja mov int sub mov add and test sub xchg or outsl daa repnz pop and or mov shrb dec jecxz push xchg add fisub and mov cld outsb stos adc rolb dec xor jle cmc gs call add push fidivl xor adc and add mov sbb push mov push jl mov mov out clc pop cld xchg push push fdivrs fst out lods pop nop xchg jne pop (bad) pop nop daa mov rcrb stc add mov push dec rolb jmp xor rcll pop iret add pusha ficoml push cmpl xor push xor xlat pop sub cmp mov (bad) scas pop in jo movsl and clc push mov adc xor cltd cli sti rcl sub call mov ljmp lcall xchg test xchg pop (bad) or (bad) push mov and test xor add pop add and pop jle popf adc push loope or xchg jmp fnop mov cmp stc cmp in sub jmp les fstl js cmp (bad) js inc into mov fnstsw add mov mov or fucomip cld pop push mov cmp jno int3 fsubrs rcrb sub pop aas sub icebp push mov flds repnz js mov or clc pop pop or push sub jmp mov icebp and pushf fcmovu push xchg nop fdivrp jne pop inc jecxz push push sub jae pop ja sbb xor sbbb or jnp call dec pop lcall add push clc adc insb loopne int3 (bad) leave fdivl stc mov cltd or pop imul hlt loope pop mov mov jo sub test jge inc sbb incl loope mov outsl inc push xchg mov fild rcrb imul jne add sbbb xor xchg xchg int fdivrs ds add icebp cwtl add ja add sub addr16 xchg repz adc ja adc mov mov rcr scas mov dec iret es sbb lcall in or jle das sbb adc mov (bad) push test add pop mov xor insl jge flds dec je (bad) call std pop add fldl lcall repz mov xor or fmuls xor lret popa rcll sbb sub jmp xor mov cmc es add mov cmpl mov jl or push jp,pn xor adc xchg push fisubl jle pop inc pusha or dec ror in jp push fstpl cwtl loop xchg aas mov sub aaa pop sbb mov xor mov inc pop xor mov rcl inc adc mov xchg insb and and mov shl cmp pop add mov scas fs xor inc (bad) or out inc add mov clc push leave xlat gs and cwtl test inc push pop add mov (bad) fidivr pop adc cmp add lcall cmc pop (bad) push daa mov sbb mov and nopl cmpsl add lahf pop add fnstcw lods dec cmp cmpl add es xchg loop push push xor and (bad) jo add sahf pop mov daa mov or shlb jmp dec ljmp lea add popa fnstenv or (bad) cld pusha add xor push cwtl ljmp mov mov dec cmc clc jns jp cmp inc in pushf fdivrs jge in sti and push shr mov push andb pushf call pushf or js repz lock idivl and sbb xchg loop add mov fsqrt es pop je push aaa sub std sbb pop pop test add es sbb sbb xor dec pop push pop movsb jl cwtl aaa ror outsl adc mov xchg mov add inc adc ds adc hlt js adc cmp xor jb jl push push sbb jbe daa inc jle movb stos push push pop cmpsl pop iret add adc cmp ljmp mov pushf flds or sub mov orl test jb ds pushf and (bad) inc mov outsl pusha adc (bad) cmp cmp jecxz xor mov addr16 (bad) or (bad) xor dec cmpsb sub dec adc iret jae repz push dec fs add pop lcall hlt or (bad) xor adc pop sub fnop add push repnz fabs les pause mov mov adc sub mov add (bad) cs cwtl je lcall or mov adc aaa rorl add add addr16 or xor mov clc orb sub sbb hlt out popa mov hlt sub mov or sbb push test rol jns ret (bad) pushf adc xlat push fs dec pushf dec inc mov jl xchg sub test push inc or and jo stos or in mov cmp mov ret mov lret outsb pop cmp into sbb mov cmp and flds ljmp and adc and stos test repnz sbb mov xchg roll dec enter mov in adc and pushf mov pop stc or test add xchg push sub icebp jno adc inc mov push mov jns sbb outsb (bad) lods jns or lds fisubl cwtl dec add pop mov jp or test jle sub lret jae cmp mov push nop pop out inc and push fistpll inc adc arpl and and stos bound mov and mov inc mov inc fs adc shrl je cltd pushf and in nop les ret push sahf test nop loopne jae and lahf imul or push je mov pop fadds bound pushf aaa add sbb nop cmp mov imul sub leave mov dec loop xlat icebp add (bad) idivb pop mov or stc mov stos in mulb cmpsb xchg and xor mov subb icebp pop pop lock stc pushf imul (bad) and adc leave in mov xor dec add fwait mov fnstcw cmp je jo cmp fstl adc jbe dec in xchg lahf ja push addb mov nop addr16 dec lods fmull pop fbstp push pushf (bad) (bad) push adc or sub push popl mov fstl or sbb mov (bad) jg add mov pusha cmc push or dec mov dec mov sub fildl insb cli jg pushf xchg dec fs cwtl cld test scas cmp rep cmpsl jb in test cmpb pop mov and rorl inc fadds loop or jae sub push pop mov pop add dec pop pushf cmp or push fwait jp adc inc ss lea sub inc fidivrl pop mov lods sbb jl and sub jno add mov jp fldenv jg hlt or sub pop lock push sbb sarl adc rclb sub bound adc cltd mov mov mov and popf dec in mov adc enter inc mov xchg push scas adc out sub xor pop addb add xor (bad) testb aas test fistp mov aam inc aam dec xchg aas aad pop fcoms iret outsb or and pop and xor jno das sub push jns inc push in mov out fild or jbe and pop sub outsl fwait inc add mov into in jns mov cs f2xm1 dec aam (bad) jge scas push dec adc (bad) dec (bad) push sub adc add add add dec add cmp cld jae xchg cld xor add lret shrb or mov push jne mov pop loop xchg mov cmp push inc cmp sub int lcall movsl nop pop lods and mov mov les mov js sub push push enter jl and xchg xchg lahf loope aas int sub adc js mov adc (bad) mov xchg jne add mov mov jecxz mov adc orb out fmull adc push or add icebp mov xor ret adc cltd cld test enter (bad) imul jge or push aas inc cs pusha xchg or mov sub cmpsb testb aaa mov fsts rcrl pusha push mov int3 pop aaa mov or dec pop xchg dec jmp or pusha and push test lock and mov mov in int3 stos lods fldenv and xchg inc mov sbb cld bound mov or adc cwtl dec aam shr test call out add push inc mov xor outsb nop mov sbb push jno loope push push nop push stos ss xchg cmp inc mov loopne popf inc pusha lahf int3 mov mov (bad) push stos dec add jbe pop jp mov aas xor int3 into add mov xor lret add mov mov out mov dec les xchg mov adc ret sub fwait inc repz enter popa aad sti pop xchg lret cmpsb xor xor adc adc aas mov pop or (bad) inc fs stos mov and xchg inc push xorb adc pop ds add stc or adc adc pop add or cmp addb pop ja lock xchg ret aam push arpl xchg jmp icebp dec mov or into xchg or adc pusha dec pop fs es push hlt test movsl sub sub test pushf add jbe pop cmp or sub or shll flds insl mov mov (bad) pusha ds jns (bad) fidivr daa repz pushf mov fs xor jo shr aaa pop mov cmp pop mov mov push add (bad) scas das xchg push pop loope ret mov add addr16 push js (bad) stc or iret adc fadds int3 mov aas dec sub out je paddq push (bad) mov mov mov sub xchg add xor xchg jns mov test xchg fdivrl pushf pop pcmpgtb mov ljmp aam adc rolb test jb daa ds lods das push pop dec cmovs xchg lods mov mov push pop mov pusha aaa mov xor sub and rcrl cmp (bad) lcall push add cmp sbb pop insb mov adc sbb dec pop mov test dec shrb bound jo jge call cmp jmp add pop dec mov adc push lock aad mov nop add dec repz scas test add mov mov mov add (bad) leave jnp stos js push mov lds xlat cmpb pusha aas push jge mov stos pop inc in lds add mov mov stc mov and andl orl addr16 pop mov dec mov push sub mov scas fs lret inc add into mov sbb das jmp mov xor loopne mov and xor mov push add in loopne xchg rorl fwait ljmp rol nop mov push pusha enter and mov call mov sbb fstp push and sbb add pop int3 loope rolb jnp stos mov add dec (bad) xchg push xchg in add push pusha stos nop mov jo adc rcll lock out push add push mov addl stc andb ucomiss add jmp xchg mov fwait sbb add cmpl sbb pop rorl adc sub hlt xor rcrl cmp andb xor adc mov lock arpl sbb and sbb rcr ret mov push cwtl mov addr16 out add and mov insl cmp add xor (bad) mov inc add jecxz mov mov add ret jae sahf dec punpckhwd or pop or sub rclb mov dec pop adc rorb sahf cmp mov loopne mov mov push aam add std and xor push pop mov rorl sbbb and adc xchg sbb xor sub sbb pushf inc mov test popf and sbb xchg sub mov leave mov pop push mov ds cwtl leave xorw mov xor iret lods (bad) and ret movsl rcrl mov xor ret lods xchg xor mov cwtl add scas out mov sbb jmp js xor pop adc testl sub outsl xorl pop dec xor arpl jae xor push dec sub shll hlt push or sbb sarb out icebp add xlat inc adc xor xchg loopne pop adcl xchg xor pushf pop mov xor adc push cli add xor add stos xor push push add sub jo into inc dec test or in sub adc aam or mov mov and and mov les sub ror jne mov fwait popf sbb mov dec sub nop sub leave sahf shlb mov mov dec inc (bad) pop fdivrs push (bad) or sahf sti cmpsb pop xchg xchg inc clc aad pop jle test mov cwtl lret movsb mov aaa (bad) mov scas push adc and xor add lds je inc cwtl scas lahf adc scas dec pushf repnz xor xchg add loop sub xchg mov mov loopne pop or cwtl rorl and aam inc sub testl cmp sahf xchg or add inc mov add roll xchg xchg cwtl jmp cwtl or gs or mov inc lods add cmc into mov and sub dec and fwait nop push mov sbb mov imul xorb cmpsb xor or pop hlt andl adc dec adc cmc cmp inc xor and cmp loopne cmc xor fs add das sub dec sub lods sbbl pusha cmp ret or test add inc arpl clc lret sub and cwtl add test cmp ret inc xchg inc mov sub xorb test fs pusha cwtl bound aam sub ror inc mov add aaa and inc add add adc into js mov xorb (bad) popl fist enter pop and test ja call mov sub in pushf or cmpsb mov test add cwtl sbb or das mov pop hlt sarb test jle cmp subb add jnp jg xor movsl lds mov int3 clc mov cwtl mov test pop and cmpsb int3 outsb cmpsb call (bad) mov test inc or add scas mov sbb imul loope or in ljmp mov push (bad) out mov aaa xchg push jno cmc addl scas repz stos push jns jae mov pop cmc arpl and add jae into (bad) std icebp loopne mov (bad) je mov sbb xchg jle or xor xorl lods jae sub divb jle or nop test lock shrb pop xor enter jmp sub adc jp nop xor jno mov pop ss xor les sbb and lock test lods cmpxchg jb add push sahf pop mov sbb out in add xor mov hlt xchg xchg dec cmp insb xchg push sbb loope inc or push pusha push loopne or mov jns loopne mov test add mov nop flds add movsl add or ss dec rolb xchg fdivl sbb idivb dec push leave test dec inc add adc idivl xor fs and repz pop or cmp stos fcoms mov cmc or fs cli das mov push add jne nop das sub or popf mov out sbb out push push or xchg and imul mov cmpsb lods aas add mov xchg icebp and jge in js add inc repnz xchg xchg fsubl mov mov lock mov loopne das mov dec rolb add pop daa lds lods mulps push roll cmc sub popa cbtw pushf sub divb (bad) mov leave dec in add sti cmp dec hlt add dec mov icebp gs das test add cmpsb insb mov bound cmc test fwait sbb mov add cmp inc ss test lods and mov cwtl orb sbb mov sbb mov imul fcoms sub jnp ret xor xchg hlt sub mov negl and mov mov bound mov pop cmpsb jae sub dec mov mov jne enter and out mov das jbe and jo cmp xchg fs ficomp arpl test add mov lea pusha adc mov dec loopne or pop xor jp pusha fiadd add outsb pop pop out or or jbe or add cmpsl dec xchg jmp mov pop test dec nop hlt cmp pop adc rclb fincstp pop push xchg and dec push les outsb cltd data16 in in pop add pop call xor adc arpl add cwtl jp push fadd mov lods hlt add lods in leave pop dec inc sub adc sub aas nop pop dec or out mov leave lods xchg mov pop cmp jae sub insb mov out pushf lret add pop inc mov int je push movsl outsb cwtl add stc adcb test mov add incl ret adc or pusha fsubrl adc scas ss xor test or cwtl and cmc push (bad) adc pop mov scas add jno xor pop insl (bad) mov xchg cwtl sbb pop or xchg xchg sub mov add cmc xchg jo pushl add push in sbb push pop sbb popf and or fs mov and cwtl test enter sbb sahf add imul das test mov xor pop adc loopne xchg sbb in mov sbb fidivrl inc in jb sbb data16 sbb fsubs test xor adc mov and xchg and mov ret mov outsb add inc sub hlt movsl aam adc inc mov jnp neg or and pushf xor sub add das pop sub push (bad) or mov call mov cld and cmpb pop in xchg dec movsb hlt icebp loopne or fs scas add adc cltd sub aaa fistl enter or rolb xor mov add loope cmp or or notl test rclb lret jno je test jne add jge xor sbb pop andb sahf ljmp jmp dec andb cmpsl (bad) cmp les enter cwtl int3 xchg ljmp lret lock pop cwtl sub scas loopne pop movsb dec cmp mov sub fdiv clc cltd das std push sub add inc inc push xchg bound testl inc cmp roll pop pop sub sbb pusha pop es mov test sbb sti sbb inc dec add push fnstcw loop stos and and insl loopne xchg in xor lahf rolb dec nop add push sbb xor subb sub fisttp or and es push add mov prefetchnta pop lret sahf jno lea dec push nop jmp loop pusha dec cmp dec add rclb scas (bad) test add jbe xor hlt cmp sti add imul mov mov xor in push loopne jmp push aam inc test mov and inc out jecxz nop ret int add ror mov stos mov pop cmp add push enter jl aas cmp ss pop leave lret (bad) pop ja js and push dec add jne xor pushf adc fstl mov xor adc and test icebp gs adc call or mov aad mov mov xchg pop sub bound add jo xor push outsl or aad pusha pusha dec xor test mov imul cmp or lock add or nop add push arpl ret add jg xor sub push or and inc add mov seto pop pop fldl fwait cmp lods push (bad) daa or xor std add sub jg add inc add sahf iret lds push lea mov sbb rcr rol adc push xchg push mov test in stc mov sub mov or mov pushf mov fcmovbe adc or jecxz mov add in jae cmpsb sbb push push mov mov pop mov sbb arpl cltd jmp jnp roll jle or std pop or cmp jg cltd dec out mov lea cmpsb pop fnop push or add call push sub mov mov sbb movsb mov in add cmp lea or add fnop push dec rol es das cmp ret rorl mov push xchg in jae jg xor add ds jge pop loopne insb bound pop and adc and add (bad) jle test adc jl and cmp lods dec dec mov movsl aam out inc or addb stc jo gs mov mov cmc push shr push xor adc add and or imul dec je dec add loope mov pop aas subl sahf add ds out sarl outsl sub mov mov xchg nop pusha inc icebp xchg jg sub fwait adc xchg add cmp cmp ja add mov rolb sbb or and add sti stc popf sbb add loop or dec xor (bad) cli jb sbb insl sub stc cmc mov in jg pop icebp add ret mov xor sub (bad) ja adc imul dec jp sub push inc movsl cmc xor inc outsb cmp sti cmp and jae scas cld xorl and jl xor cmp push incl inc jmp jle sub in icebp repz jp mov mov scas jle xchg imul dec lahf loope dec stc (bad) shrb nop jge add mov mov sbb lcall pop push insb sub cmc fnop movsl add mov mov mov sbb mov push cmp jl xor mov cmp (bad) mov dec orb (bad) adc mov add test je bswap arpl push fnstcw mov adc dec out adc decb push mov dec repz pop cmpsl enter lcall push inc shlb loope arpl scas mov dec sbb into jge xor dec mov in addb (bad) or pop and inc pop push mov movsb and adc pushf jg dec pusha gs dec mov divl inc mov enter cmpsb into lret pushf inc jno dec mov push addr16 mov and ret mov push add xor icebp sbb sub jns test andl push add test mov pop les sub push mov fiaddl das in mov fs cld fsubr inc scas adc push in scas push hlt sbb jge adc mov outsl icebp sar stc sbb cmpsl aas pusha and inc repnz cwtl jmp cmpsb daa test sti dec mov mov aaa jmp xor mov jecxz dec jge imul push popa les pop push mov hlt cmp lods and or addb scas xchg xchg and movsb inc or pusha mov cmpsl outsl (bad) loope (bad) mov inc movsb dec mov mov movsb out lcall inc or mov jmp mov movsl cld inc xchg lcall sbb sub mov outsb je icebp shl cli (bad) fdivr cld inc mov add sahf incl add lret mov into inc xor (bad) and ret sbb add (bad) sbb mull xchg aaa adc popf rorl adc sub xor push lods add pushf aad orl add cmp cmpsb test es jge add jmp mov add in rolb add (bad) mov es decl sub mov scas (bad) xchg jo xchg in push push and jne add or or stos lods arpl and sub dec lcall add enter mov jp subb scas xor callw js int3 sub into test inc cmp mov and jl mov xchg (bad) out frndint pop xchg nop in xor dec add sub shr xchg aas or adc sbb xchg cmp or xor nop outsb rorb mov scas in shll fadds push idiv add mov xchg add jl loop lea adc push xor les jo sub or pop xor movsb dec ljmp xor jle mov orl call inc inc add test dec sahf or or mov dec int3 and dec orb into mov dec mov cmpsl sarl lds shr or sbb jno sub xor in clc lcall xchg add or jns cmpsb cmp loopne mov add add std sub clc xchg repnz movsb in pusha fdivl daa ret gs push dec jle mov pushf sub add ljmp icebp lds mov or enter add and mull dec dec xor outsb sbb push push add lock cs sub xor data16 cmpsb mov sub mov add inc jo mov ret (bad) xor mov lods adc fild add add push dec xor in mov loopne scas ds test rcl cmp xchg push add lock es loopne lds bound imul out inc test sbb inc and (bad) xchg or enter dec (bad) adc and decb in or loope or mov (bad) mov mov mov sub or xor negl leave mov in xor clc mov mov add (bad) cmp mov jo ds mov test sbb movsl cli xor ret or aas add out ret dec mov pusha push sub in sahf dec aas cmp inc xor outsb ret push pop push cmc mov jl adc and loopne sub inc (bad) xchg pop addl sub mov push lret and cmpsl jo dec and or mov call (bad) in sti adc inc (bad) repz add (bad) negl pop popf xchg cmp pop push xchg xchg sub adc and mov cltd sbb or dec xchg xor les inc imul fwait in loope scas sub mov push in inc inc in xchg cmpsl pop sub lods dec lock adc mov stos add mov loopne imul pushw pop test mov mov pushf dec std mov lcall pop add clc or mov scas loopne push adc in popa push cs dec (bad) push divl adc cld decb adc mov lahf sar sbb dec mov mov (bad) mov jle lods call mov das fstps mov and mov (bad) pusha mov pop ss mov arpl std incl test les sbb aas pop jns cmp cmc add jg pushf dec in xchg lock (bad) xor xorb repz inc and imul sub testl and inc add (bad) dec cmpsb xchg push std add sbb (bad) mov pusha test xchg and test sbb dec cmpsb pop cmp movsb sub push sahf sub pushf repz test and (bad) xor faddl sub loopne mov and mov or iret scas mov addr16 xchg es pusha in mov dec or aaa cld add jle push mov int3 xor insb neg loope,pt and out dec scas inc rolb js xlat push push pushf in xor aas pop sub es mov and lods or inc xor dec mov add dec lcall lock mov mov sbb scas jmp lea scas push ja cmp fcompl outsb dec loop popf or fucomip cmovae dec push pop nop out cmp fs (bad) rol dec lock jecxz mov movsl divl or jge hlt inc adc imul xor mov (bad) xor js nop push iret push (bad) dec mov mov mov pop sahf mov popf dec icebp jo fistpll sub xor in and or mov cmp dec push call fwait (bad) out inc xchg pusha push dec cmp subb sbb xchg sbb es and test or fsubl mov xchg add mov es xchg addr16 pop je in pusha cwtl test insb add sub popa insb fs cltd add mov inc mov push out clc adc (bad) fiadd add mov add push push enter mov mov sub push add and mull icebp sub mov dec ret push and cmpsl cwtl cwtl mov mov add or mov lods or popf leave mov add insb cmpsl les push (bad) sti popf cmc xor adc sahf fwait and andl rclb add push cmpsb (bad) push jecxz lock rolb inc add vmovsd adc outsb mull pop inc push dec aaa lea or bound jnp cs adc ret jne mov mov mov mov xchg and fcompl and divl add sar sbb inc in xchg and dec or inc or loopne mov fildl and dec lcall pushf and mov cs aaa call jg inc xchg les or ror out pop mov or jb adc mov imul jg inc insb push mov pop aam dec add shrl push mov (bad) out (bad) xor add push add fcomps mov and add cld and cmp fdivrl push js xchg add sbb push test xor movb popf and mov mov xchg and jge cmp inc or je xchg in fcoml popa xchg jmp mov sub adc sub mov hlt ret js xchg inc enter test mov data16 sahf and faddl mov jnp add cld shl movsl test jge cli xchg cwtl mov mov add in int3 pop leave scas jl or add and test sahf std (bad) movhps int andb add pop xor add sahf leave xchg fnsave test push mov jp scas fadds jo,pt std cli sahf jmp icebp iret add adc push mov or and test push inc mov mov lock add inc xchg test inc in je lret fs dec outsb and pushf inc (bad) popa push and jl pusha jb insb or xlat movsl inc or or mov inc pusha adc push cld aam jnp mov inc add or xchg adc sub sarl mov dec and pusha subb mov lret popf pop test out (bad) xchg sub push test in lcall pop and mov and aam or mov dec add and xchg dec sbb adc mov jnp sub fmuls fs adc xchg insl repnz or je push testl and xor fmull sbb xor mov or add bound int3 push pushf sub mov inc shlb movsl fcoml and pop mov adc add sbb ret jle leave sub pop rolb sub andl push jl add pusha test roll (bad) xor inc and scas or mov or jo out fs sub add imul es pusha mov or test outsl xchg push sbb je xor adc and call xchg inc mov loopne sahf jae stos xor xchg xor mov or inc insb dec icebp leave mov mov fmull jl popf pop mov lahf rorl dec sbb inc sub insl jecxz push add pusha xchg movsb aam int nop or xchg add popa mov adc inc test xor je pushf xchg xor mov lret cmpsl aam sahf cmp fs mov xchg and cli rcrb sbb fwait loop add mov add ds push les fwait jg or sub mov and sti jl shrb adc bound or or lcall sub test mov cs add (bad) test and jmp in mov and add add sbb and movsb rorb loopne cs push add jecxz mov jp jo and mov jns ret or cwtl leave dec (bad) adc or (bad) xor mov fcoms xchg push inc xor push and ficoml imul or or adc int3 dec dec loope (bad) mov sbb fsub xchg mov sub inc inc test fnop nop test jle cmp out add pop mov cwtl or xchg inc inc (bad) mov push inc cmp mov inc adc call jb,pn int pop rorl xchg lcall inc add les mov test push or loope and stos add test outsb imul stc (bad) je iret push jmp adc jnp call shrb adc enter sbb bound or dec test rcll fs jo sub add shrb js add sub xor add enter test cld inc enter or pop push sub jp mov pop push cmp icebp stos fcompl add jno test sahf repnz (bad) push mov sub xchg add adc push jno hlt incb xor pushf rclb (bad) in sbb xchg xor cmp and lock or jbe rorb int3 movsb sbb cmp or jnp shrb fmul and cwtl add mov jns push aaa or and rcll jae and cld idiv fmul sbb and xor sub pushf dec inc push jl cltd leave mov pusha sub adcl lcall in je xor or sar pushf (bad) scas test fs cmp or cwtl aaa arpl inc stos adc and std add fcompl and add pop dec stc or add mov cmp mov inc push sub mov jb xchg or jae cmpl add xor push imul or adc push pusha fdivrs xor adc xor sbbb rcrb adc inc in test cs cwtl aam cltd cmp pop ret sahf cltd mov (bad) pushf add arpl pop sub lahf out pop dec and push or mov stos cld repnz and stos (bad) shr inc dec scas cmpb or xchg mov cmp or mov jmp push (bad) mov push xchg pushf sarl mov lock popa loop push xchg icebp and nop subb test xchg pushf dec jo add sbb cwtl addb (bad) push mov xchg ret movsb mov push add mov or popf and fidivl cmp sbb test push cwtl mov and sub enter int3 pushf push xchg pop push std push cmp (bad) loope fstpl flds and pop and dec mov jbe fs inc fwait xchg je adc cld mov mov jo dec ss xchg mov inc enter mov imul xchg movsl inc insb int fs cwtl xor inc cmp xorl xor or int3 add push jb sub cwtl push push or (bad) sub popa xchg es inc add int3 sub sub sub push cltd shlb and adc das sbb aam int add in jp addr16 xchg rorb decb test jle js xor sub mov push dec jl pushf clc inc out adc movl mov mov iret cld and and lcall and xchg mov pop or mov in inc mov addl sbb inc xchg xor adc (bad) xchg cmp add dec cmp add js add pop add sub inc push ret mov adc and dec add or inc xchg push inc clc mov jbe and pop repnz push out lock or jg xchg push sbb push add mov jae sub pop aaa in xor mov cmp adc sbb je add sbb das insb dec add mov or loopne ret mov sub jae add mov inc push jae inc int3 aas pusha hlt mov xchg je adc push lods stos mov (bad) cmp jns jmp dec lds into add pop inc nop sbb loope ret sub mov nop sub sub mov ds pushf add push adc push mov test into addl sub loop add (bad) (bad) mov icebp mov pop add xor les add cmc xchg icebp sub fsts out add cmp leave xchg push or mov cmc loope mov (bad) or fmul adc clc (bad) clc (bad) stc cli imul es push pop outsb cld or lds pop add push and cmc movsb or insl jmp clc andb xchg ss adc mov adc ds mov es or fmull stc lock xor sbb mov push aam jl addr16 inc inc and adc or push bound mov (bad) push add dec add lret (bad) pusha add mov xchg push sahf je push and xchg clc std jae add mov or xlat insb push or push sub and and inc sub dec (bad) and add or dec insb loopne loopne cmp xchg add adc fwait mov insl inc lret jae push bound movsb add nop inc cmp lods sbb or jmp pop inc pop mov inc lock das sub enter mov or rclb mov rclb outsb clc in dec cmp adc cli out cmp dec in cmc dec xor mov pop cwtl push dec fistp cld add nop cmp pusha cltd mov pusha notl mov or push push nop jnp mov jbe rolb mov xchg jmp insb adc jb mov clc push aaa pop mov add pop (bad) fcomps or cwtl mov sbb arpl mov mov (bad) or add in rorb mov lods test jne divb and sbb push addl test pop rorl pop add adc push inc mov insb fisttpll int3 shrb xchg push inc mov jbe and push jns mov int3 popf pop stos in lock loopne add push pushf pop add mov fcompl movsb xor push jo cli and add jne shll push jno xor mov ljmp test adc inc mov nop adc cmp dec nop in repz inc or stc and push fcoml into popf xchg add fdiv out rcrl add pop mov pusha aaa js push sbb or inc jns ret xor (bad) fistl insl mov and insb ds add enter and add scas ficomp (bad) shlb pop mov cmp add sti push lahf dec pusha lock add aad mov shl sbb pop stos addb mov mov xchg xorb add and inc push jmp ds xor repnz arpl icebp gs adc nop int3 ret fcomps xchg flds adc jne ljmp test jmp pop xor push dec lock add adc or xlat or add push pop popa sbb lea out push ret and stos loopne in sub clc xor (bad) js jecxz mov mov dec sub insb push (bad) adc or cmp push je push je sub sub popf or movsb inc sub add sbb imul rcr mov mov adc dec mov scas clc imul sub add pop mov (bad) mov mov add push divb pusha or fsubrs test mul js adc add lcall std lret das mov jo aas (bad) in pusha movsb mov pop in mov dec sahf mov pop orl add popf jb shlb add (bad) fcomi sbb fnsave out push push arpl mov nop add (bad) and jb or addr16 addb or iret inc rolb ja inc repz push cld daa rol data16 pop jbe fimul pusha cmp bound out loope fldenv pushf stc imul cmpsl mov push clc sbb adc pop dec cmpsb fwait in cmp push movsl mov (bad) fsubr arpl jp fisubrl mov push test add sbb je cmpsb push repz add and xor dec dec in adc add arpl rcll xchg cmp ret and adc fs je add insl jmp es sar dec mov fs orb and inc mov cwtl and mov stc ret enter mov lahf add mov push add jae cmp ret enter (bad) clc add ja sarb int pop gs mov add loope push pop in jns and xchg addb (bad) incb xchg sbb jb mov cmp cmp pop xor mov rcll call mov cmp in rcr imul roll ficom and mov aaa lock rorl enter aam aas and and mov inc cmp push or cmpsb pop cmp pushf push and jecxz add inc add pusha popf js mov add jae (bad) or push (bad) jmp mov jl inc sbb mov adc cmp test jecxz pusha out xorb sub ffreep ret push mov xor sahf loop sub inc xchg pusha push js stos or sbb dec jns or scas in mov js inc test push sbb mov sbb ret xchg or jp jle rcrl daa lcall rcrb add push sub add xor dec lock push mov test insb or movsl mov inc loopne mov add mov fcomp push mov mov and clc lahf (bad) sarl pop inc in rorl scas add aas mov mov (bad) mov pop jnp int cmpl and pushf pop hlt aam push mov xchg add pop add stos push and adc movsl push (bad) int3 jmp jl xchg push sbb mov jno jmp push mov div or ds andb test push pop outsl insb je mov popl or mov mov arpl adc add dec cmpsl jmp or inc push icebp ss jle mov fs mov int3 lahf dec sarb adc enter es xor dec adc lcall lea pop nop orl nop movsb xchg push mov push dec nop jp out jo mov jne mov xor dec xchg jg cmp or xchg (bad) jo add add movl inc mov or adc (bad) in (bad) cld mov push inc fs lds lret aas ret leave pop ja in pop addl aad mov mov in push jno add mov lods inc js (bad) xor or push pop mov dec decl xor inc and addb movsl (bad) sub out xchg js mov jecxz in shrl call cli mov adc rclb lock fwait sti and dec in add movsb mov inc imul mov cmpsl push push mov cld push add stos sbb shl xchg push cmpl pushfw repz and sbb (bad) lea sahf adc (bad) cmc clc xchg cmp lock jmp in cli or cmp sub scas loopne cmp ds push or std rorb jg and loopne or mov push cmpsl subb cmpsb rol mov sub mov pushf add loope or pop push out cmpl add mov (bad) jo add loop dec xchg add pop inc pop cwtl subb adc add popf or lock outsl pushf mov fwait inc test popl add mov cli xor adc in into les cmp movsb mov and outsl cltd adc cmp lods push push loopne loope xchg push and aam shrl mov arpl hlt adc rorb adc mov loop cmp test in push push dec or pop push adc lock sbb fsubl xor iret inc and mov jne xlat popf lods data16 ja mov add push xor fmuls jo push and cwtl repnz sub andl xchg mov nop push aam fdivrl dec or mov mov hlt insl or loopne push bound mov sub cmp and sub cmc mov addr16 and add pop jecxz push mov mov mov push jb jns xor mov inc sahf or xor fs cmp xchg es xor lea subb (bad) mov add in xchg or push enter fstps adc jp inc dec js sbb dec sub lret add push nop add adc pop dec inc test test lods insb les cwtl sub push mov cmp pop std nop sub imul add stos stos xchg pushf add xchg in (bad) xor add mov test js pop push lret xor push pusha or add fwait add test in cmp dec and nop xchg outsb add adc jb cld das add dec jnp mov and dec sbb je sub add xchg lea mov pusha inc adc sarb adc mov dec dec mov ffree push std sub sbb adc into mov (bad) dec sbb jp insl xchg inc pop loope pop adc inc xor stos add or (bad) push insb js das adc adc add mov cltd sbb cltd add xchg imul iret cmp fs mov outsb adc and push pop add jo out sbb mov das ret test sub int3 mov mov (bad) jo inc adc mov cmp enter adc mov insb cmc cltd xor les pop loopne popf mov ror xchg bound push nop and or add mov addl (bad) enter lret cmc and into out dec test test notl lock xchg mov xor push cmp int3 or stc clc mov loop dec sbb push push add (bad) insl adc xor push dec xchg xchg nop xor stos dec pop loop add stc cmp addb xchg lods lahf in pop sbb add lock adc mov scas inc and pop and cmp cmp pop mov push cmp jecxz or ret sbb lret push jo test test xor push cmp xlat out sbb aad insb mov jns loopne orb xor adc inc jo add test mov jne mov jge mov lretw add mov dec or (bad) sub loopne jl dec lcall push fs xchg cmp sub push pop dec int3 inc xchg or adc sub bound dec xor and sub fstpt inc mov jmp cmp out and push addl xor mov cltd pop test adc or add jo mov mov mov fisttpll (bad) pop mov add pop fsubl pop cmp dec fldt loop inc dec inc push subl loop fs lret fwait nop mov pop dec aas insb adc pusha mov call cmpsl pop inc mov xlat (bad) enter xor adc in mov add jle fdivs ss push pop add inc int3 pop xchg adc push out sbb jne adc movsb rclb push movsl adc js test and int inc adc daa in push push xlat push es or clc cmp (bad) dec in mov lods and sahf sub rorl rorl outsb repnz adc data16 mov dec and ret adc add add daa nop dec mov icebp sbb test adc and push add ljmp stos call add icebp (bad) cwtl lods mov jge xor sbb add out (bad) shrl enter test pop js or fucomp lea xchg cwtl jb iret dec adc call lret cmp sub cmpb stc xor rcrb adc jns cmpsb nop add mov call notb fsubs cmpsl ror sar adc aaa mov aam sahf test aaa aas push dec test lds shll inc pushf or jge jo dec add xchg add lea aas (bad) fidivl and test loop jge stos adc mov insb mov or jecxz push nop leave jle pusha jns adc pop mov call in or (bad) fisttpll into xchg xchg mov dec cmp pop insb vprotd dec je mov lock cmp and cmp pop jg popf push in xor js push add ret ljmp or pusha or fs int3 pop push dec jmp add sbb mov pop mov xchg mov xor mov and mov mov repz cwtl adc inc test lock cs jle add mov (bad) rolb dec jp and and cmpsl xchg dec and mov jbe outsb xchg mov mov aas movsb or or test and sbb movsl jmp and push push dec xor enter adc cmp fadds cmp sub std dec push push shlb pop hlt sarb mov fsub (bad) cmp je,pt movsb loopne scas pusha adc fcoms adc in loopne jne add xor sbbb stc xchg movsb aaa sbb int3 pop ficomp sub add inc in jb xchg xchg push hlt jne add cmp adc mov pop test xchg inc lcall leave add mov push add push jle cmp test cmp das jnp adc cmp add fiadd pop scas add mov xlat add xchg in and or psubw sbbb inc or test jne lock movd mov addl je pop dec icebp f2xm1 enter adc xchg jl or clc call sarb or jp aam hlt call dec mov mov mov xchg or xor add xor sbb mov pop ljmp int3 mov add rolb addr16 addb inc popf je outsl pop inc loopne aaa mov pushf fmul lods movb lods lock push leave add inc xchg movsb mov enter aam nop addb cld xor cwtl js outsb jb sbb imul push push fisttpll or mov fst scas mov xchg add cmc pop imul rorb and fs and mov inc hlt jp add int ss lods mul shlb out jge xor dec addl shrl pop mov mov enter adc hlt add push scas shll and sar sub inc push inc (bad) in call xchg out (bad) adc test cmp lods or sub add adc jb mov lods icebp push cmp mov fwait lret sbb fsub es mov add sub and push lock insb jl inc rclb addl in (bad) mov enter cmp sub mov xchg mov popf add pushf or push popa mov pop adc or inc sub out inc dec rcrl or cwtl jl jnp dec add stc mov out adc aaa clc fsubl adc inc add push push nop pop loope jno adc test test gs jno and adc lods xor mov outsb jecxz gs hlt pusha (bad) out push (bad) jl lcall xor mov sub loop cmp ret js ds mov lcall inc sbb cmp imul mov mov nop jle xor xchg lock add das je dec push fiadd add pop and das in cmpsb dec dec dec aam (bad) mov jle xchg add push pop cmp sbb jl pop mov lods jae cmp test lret sti push adc pop jg,pn js mov je push mov xchg sub pop fs clc jns leave fsts movsb dec or sub sbb pushf sbb mov push add nop cs inc pop (bad) rol and dec dec (bad) dec xchg add cmc xchg (bad) fcoms xorl or fwait jp test xchg xchg lock add data16 les scas and rorl cwtl push add dec adc shr fmull or adc mov sbb dec shrb inc nop loopne mov jl divb cs xor loop mov rolb nop lret (bad) jb sub movsb xchg aaa xor add mov inc push (bad) nop cmpsl idiv add xor inc adc xor and adcl push cltd lret sub push mov pop or lcall mov das xorl clc sbb arpl xchg cmp pushf stc sbb pusha xchg sub inc stos and sub cmp jp cld sbb dec sbbb and jo shrb mov mov mov or lcall jne xor xchg movsl pop sbb rolb push nop pusha inc lods mov into and sub rcr ret mov popf es pushf frstor imul xor imul stc and xor ljmp inc fisub loope pusha sub xor pusha loope or lcall je call sbbl lret sub and stos inc movsl push pushf mov mov je inc test xor lret (bad) loopne orl ret jg fistpll movsb add mov fstl pop and shrb sahf sub in cwtl leave lcall add and sub sbb jg (bad) hlt cwtl aaa fs xor mov adc aad nop fs cmp push test cwtl push inc pop push mov xor xchg sub push call scas xor mov inc (bad) and mov fadd jp lret es gs ror xorl fwait jle add mov dec les push cltd dec and sar fs movsb cmp sub and movsb test adc sar stc test sti xchg mov inc (bad) call (bad) mov jl push or add add sbb movsb cs in lods mov lea (bad) jbe mov mov aaa jae mov repnz sahf jecxz call or sub inc lcall push out push test push fsubp cmp add clc inc leave sub inc test and mov loope test xchg lcall dec bound mov inc mov les mov jl add dec shl int3 lret push outsb xor sbbb movsb fs outsl or add adc xchg in movl or or or int3 mov adc clc mov mov je inc or cld mov aas call cmp out or cwtl cli cmpsl mov adc xor ljmp mov sti (bad) (bad) cmp jge adc pusha push mov sbb cwtl adc mov mov movl mov enter mov mov test adc aad arpl mov popa lahf fiadd sub int loopne repz xchg leave cmpsb stos loopne xor jl cmp jge lock add xchg cmp loopne inc pop or nop pop xchg (bad) dec je mov lods rorl pop inc inc xor out pop lret sarb test or or je int lret cmp mov cmp add xor inc nop (bad) jg or or insb inc sub push lods and push lods inc cwtl xchg xor clc xchg mov lock bound add es mov stos add dec int3 jo jae je add dec sub call add jecxz pop xorl push jno pop adc and xchg cwtl add fidivrl or cltd in adc xchg pop orb pushl cmp loopne add sbb or repz or adc adc cmp loope aas xor xlat loopne push fsubrl nop test scas mov out lock jmp test leave ret pop ss mov inc mov ljmp mov in enter add add jnp rclb fmuls push test dec repz sub cmp aad popf adcb ds stc jg sbb bound mov daa sub mov adc mov lret repz push and adc inc fwait fwait pop sbb sub pop push movsb or add cs xor popa in sahf pop cwtl aam rcll cmp bound xchg popa push mov xor nop cs icebp leave and adc dec and jo inc sbbl insb loope push fldl in cld pushf jg movsb dec and sahf dec lods dec adc cltd hlt and icebp sbb movsl bound les or lahf test pushf std mov and push lret mov adc pushf inc movsb or in cli sar xchg add lret inc lahf loop sub jp jg xchg mov lock jne dec mov popa push popf test lods adc push pushf sub mov xor cmp es fdivl int3 lods sbb mov cmc pop bound sub int mov mov add adc add xor jnp dec cld (bad) jl push push pushf clc inc adcb xchg loope rcr pushf enter orl inc nop pushf test dec mov sbb dec push loop les fs mov xchg or xor adc add pavgb cmpl enter xchg sub cs push cmp sub ja dec clc and int3 inc lcall rcrl and mov ret test xchg fstps inc adc pop sbb xor mov fmull push xor mov xchg adc and mov mov fsubl inc sbb fwait cmp daa and je je push mov inc lcall add jns daa pop jo sbb xor jnp mov outsl addr16 aas sbb xor fiaddl cmp mov xchg or add cmp adc out add or popf (bad) aam dec jae dec das rcll xor jmp dec les push ljmp and test jae xor iret ficom inc xchg adc inc cltd or lods mov jg or (bad) push inc adc rorb fadd jns sub lret xchg inc hlt mov out or sub aam sbb add sti dec and test mov inc pusha or (bad) sbb das add dec and or sub lea add test insl jb push repz add cli push movsl add iret xchg out push jbe xchg and in inc mov adc add and cli int3 shlb leave aaa sbb sub sarb sahf jnp cwtl aad cld mov cmp mov dec dec dec movsl mov into push xor xchg inc sub jle pop push test adc leave fwait xchg push add and scas add (bad) pop dec incl sub add pusha mov es scas pushf push xor std clc and mov les es je dec rolb and iret pop fs xor stc add enter cwtl push call test dec push xor loop mov adc adc add or ds fwait adc adc into sub jl adcl lock add jb dec fmull jno insl cmpsb cmp clc pushf mov test push inc xor sub call mov and push mov shll xor jbe and adc mov xor shll andb or dec imul pop jle xor push or add jnp stos and cmp push push cld cmc call mov in mov xchg fsubl divl add movsb js fdivs test std ret xchg mov test fisub sub into fsubrl leave lcall int lods or and jl add mov dec and pop lock push fdivrs bound stos shll mov adc (bad) mov stos pushf push jo sub mov js push inc or dec pmulhw int3 les mov daa jp mov mov push cwtl movsb and or js lods scas cwtl pushf jmp fs mov jecxz jg dec stos jecxz dec shrb pop sahf ret mov in or sti in mov lock dec or xchg xchg inc add dec addb int out adc add mov test (bad) lock les pushf out adc sbbl xor push sub mov inc sbb loop and push and shl scas outsl rolb add or jmp xchg stos sbb ret jo and mov pop push outsb mov mov xor dec cmp pop gs cmp popf in mov jns dec mov add (bad) add add sahf jmp fwait xchg (bad) testb mov rclb in cs xchg inc cwtl push pop stos sub push or cs hlt or andl (bad) mov sbb mov cmc sub pusha cwtl ret movups xchg into lods mov enter fmull mov stos cwtl push sti (bad) jl dec sbb (bad) je enter pop mov xchg or jl test sub in leave scas test stc sahf cltd int3 sub daa xchg shll data16 test sahf mov into inc mov rolb ja rorb push sbb xchg pop add pushf cs jno inc hlt and into add jge inc cwtl and scas push or mov cmp fsub xchg iret pop or cwtl insl adcl add and hlt (bad) push and and push jbe or or scas mov inc lock out test mov outsl dec movsb jbe sbb hlt pop mov mov mov inc pop sbb loopne mov mov add and add sub or sbb add jb mov jns mov and jnp adc add add rcll add in ljmp xchg pushf jmp call or repnz lods sti jg add paddd in fwait cmpsb add fdiv mov (bad) jl lahf (bad) push adc or add adc mov dec sbb shrb add xchg dec cwtl mov sbb fwait pop fucomip mov xor sub xchg push add sub sbb add jle,pn add push push fdivrl push rolb in or imul mov sub xor imul out dec push (bad) sahf cmp add inc pop cld mov (bad) sbb lods loop add push jne pushf cmp pop cwtl add jae cmp insb or xchg jb mov je add cld mov int loopne mov stos xor add lcall sub mov cltd inc mov or mov shlb mov add and jmp xchg pushf ror cwtl sbb and adc rclb or (bad) decl and xchg lods xorl ret js pop stc cmpsl dec push aaa jl popa pushf test sub sub add jno mov fcoml hlt fldl lea mov mov xchg dec rorl jae jg dec fsubrl mov (bad) clc add cltd xchg or insb in mov jnp adc and jb cmp inc addb mov aad jl fisttp rcrb clc push cli (bad) lret mov jae add sti adc out add jg mov testb jle xchg rol imul mov clc ret loope mov lcall inc mulb iret cld idiv call test push sub or aam add popa mov pop outsb stc scas stos pusha xorb xor push push add xchg and fsubl cld jae repz inc adc pushf test cld adc loopne xchg fidiv mov loopne pusha fs xchg aaa mov pusha cmp sub add mov bound pop cwtl sbb mov or dec cmpsl (bad) sbb pushf dec xchg lock adc xchg data16 jl add out (bad) sbb loopne pop pop add (bad) (bad) jo nop rolb add xchg test xor cld and mov nop mov les test pop addr16 sub or enter mov scas in push push rclb loopne stos mov fmuls push dec inc test mov (bad) and push xchg test movl push enter or in fnstenv cmpsb and fsub or or add jo xor xchg dec cld je sahf xor sub in add clc mov adc xor js lods dec rclb je cmp movsb aam aad lods fs hlt mov loop adc cmp mov jne inc das push push and xchg add mov add push in mov in or fdivl sahf mov mov int (bad) cmp test add cmp or mov cs pop js icebp es push je sahf ret add pop sbb mov adc shr inc lcall pusha cwtl and adc xchg daa jle pusha leave mov fisubr push shlb mov stc push jnp enter or cmp rorl mov xchg popa sahf and daa or leave sub gs shrb js dec in nop sbb cs xor mov test dec enter cmpb ljmp push negl clc or and and add rorb fldenv mov cmp mov mov (bad) fisubl (bad) in add loopne jns in mov or test mov shrb pusha pop push sar adc add mov insb dec fnstenv push xlat xchg das (bad) adc (bad) stos out lods (bad) push test adc and clc in orl push mov xor fsubrs xor (bad) sbb repnz jb dec lret sub add pop cmpsb inc push insl int in pop cmp mov sbb call test mov out xchg cld add add adc or movlps mov pop jl call add adc mov mov daa inc stc mov mov cmc popa sub sti lds (bad) ja out push loopne push ret push cwtl loop adc mov mov mov addb loopne stos or js jno add int jmp icebp lea dec loope mov outsb cmovo sub lea (bad) scas repz add and inc xor cmp or pusha cmpsb jnp lods adc inc aas sub enter jmp test call sub mov adc (bad) out and leave stos and jo mov and jae cmp gs push sbb je daa stc adc test push add loop std cmpsl cmc sbb mov sub adc or mov cmpb cmpsb movsb iret loope and inc xchg addr16 and test adc dec sub test pop mov ljmp call push test mov xchg (bad) sub jg sbb adc jo jmp movsb rclb aam inc lods ret pop jno incl pushf orl push rorb inc push adc fiadd cmp mov fcomps pop inc and rcll add movb dec call add mov pusha mov je mov das sahf lods push movsb (bad) and xchg mov rorl int3 dec add xchg inc mov xchg out dec test rclb ljmp xor xlat and ds xorl mov xor call aad clc cmp xchg cli pop mov cmp loopne sbb lea mov and push sub inc or lret jbe add jecxz jl dec jns push inc add mov adcl lea mov jae mov and pop sub push and out in loop je inc dec decl js jecxz cmp lds sbb dec dec xchg andb or hlt xchg push inc hlt or in cwtl inc sbb clc push pop loop xchg imul bound mov iret mov dec cld int3 fcompl or (bad) (bad) push lock or xchg jo mov xchg outsb or add pop add scas jle mov and jae mov mov or cmpsb jg push inc mov sub sar cmp nop add add mov pop lret adc int add pop ret repnz adc and cltd lcall movsb shrb cmpsl pop push add pop xchg fiadd inc xchg addr16 mov cmp sub fist mov pop andl cltd pop mov vmread push mov push and or mov xchg push xor dec fldl sbb xchg and int3 test pop jo scas bound sbb adc das ret mov int3 adc data16 xor cmpb ja pop stos clc scas mov mov out (bad) xchg pusha pop les adc adc add dec mov stc push mov es add adc adc pop add lea cmp sbb mov fs and pop xor data16 xchg or roll xchg js xor test adc add dec inc sarb jmp xor mov rclb push add inc repnz daa jp push dec dec in loope rcrb in bound sub clc in fadds in pop fs lds xor xchg inc dec js std shll insb sub sti mov bound mov sub hlt addb dec loope jb push or pusha imul adc dec sbb sbb and cld rep add sbb shr add cli jmp xchg cmpb push nop addb les and in hlt add aad out shrb add rcr call dec arpl mov rorb cmp movsb and jns popf lcall push push inc outsb arpl add dec cs movsl xchg sbb lock and and (bad) xor mov (bad) cmpsl sub sbb add inc cmc aam movsb pop ljmp jg pop stc out lcall and mov fsubs cwtl mov xlat and sar repnz cli fs add jp pushf (bad) cmp out pop fwait xchg adc imul push cmp push std mov bound cmp enter mov sub in add sbb cmp popf cmpsl push mov aad or pop (bad) push mov in sub out pop (bad) out pushl jle,pn fstpl or in mov adc xchg jb or ret cmp add cmp xlat sbb jg fs sub enter adc je cmp jmp aad sub popf clc or insb push mov add inc inc pop sbb jb dec push rcrb xchg insl and je sub lods rorl inc add inc rolb fnstcw pop sub add cmpsl adc in push xchg aad popa (bad) (bad) dec cwtl lret mov cld jne mov loope or pop mov jle xor sbb mov push hlt stos or push add xchg dec iret mov shll repnz loop inc cld cmp adc cwtl cld outsb push add xor or add dec inc dec repnz push fndisi(8087 dec stos lods or stos lods pushf mov rol cmp rorb les adc add jbe xor cltd push mov stc sub (bad) faddl hlt push jbe push out (bad) or into mov cmp test push add enter sub jbe dec inc push fmuls mov or into dec add mov mov aas or icebp insl movsb loop or je (bad) jno add test shl mov and jae pusha pop (bad) divl xor adc sysret lahf jmp popa add fs adc sub fsubrl jle pop mov fdivr imul ret shrl call push mov and sbb imul ret mov sub pop pop add mov mov or inc xor imul and pop pop pop dec inc rol pop add mov xchg pop mov mov lahf pop mov mov and and lcall jge lock jnp sub or call sub xchg and jne pop dec add (bad) mov insb jo (bad) dec cltd fild and pop mov mov inc lock inc lock adc cmp or (bad) mov and addb mov and cwtl adc fs ficomp pop xor push fmul movsb pop (bad) mov jmp fld inc jne push adc jo shlb dec or lea enter cmpsb scas int3 imul push enter and sbb pop aas cmp sbb dec add jnp arpl push cmp lods movsl pusha cwtl cmp push cmpl pusha pop dec mov lea sub mov sub sub cli push inc mov stc push mov subl push outsl outsb xor jno lcall add fwait inc dec out into and and nop inc pop push inc dec xor arpl test jmp dec shrb cmp stos sbb dec push nop jb add negl mov fimul xor xchg incl xor fdivs push cmpsb sub inc orb in add loope xchg pusha add inc jge xlat rolb mov jnp mov mov cltd mov mov jnp aaa js dec jno or cmp mov push jo subb inc inc cmpsw sbb jne bnd inc mov mov push sbbb inc pop pop sub dec pop and test (bad) fcompl sub xor xor add push imul int3 and xchg jmp test adc and fisttpl daa sbb fsubrs (bad) sti aad add rorl pop push push lret addr16 les clc popa cmp (bad) xor pop add jl add xchg loop fldlg2 adc cmpsb add pop sbb push pop in test sbb popf enter orl cmp scas pop fmull sti dec popl add (bad) cld push adc iret icebp push xchg pop adc jno shl inc jnp sub jl psubsb rorl lret in iret mov mov test adc jo or in imul aas xor pop inc push fisttpll xchg xor cli jns fmuls out insb jp add ljmp pop mov test dec mov mov mov cmp dec jb push mov inc dec test imul lods or out mov flds mov nop orb cmpl cmp sarb ss outsl add lret xchg dec nop adc fimul lods mov mov add cld movsb or add ret dec in add test mov inc movsb add push cmp inc insb stc mov sbb cmpsb hlt lahf jge shrb cmpsb faddl push (bad) mov movsl push jp pop inc push lds call pusha imul sahf enter add mov add dec mov xchg push adc or dec into call fcomps jge dec gs dec fisubl adc mov les les (bad) cmpsb inc dec adc adc xor out xchg test aad fnstcw mov add data16 push in enter adc test pop ja fdivr loopne cmp push bound fidivrl xchg push push push mov in sub js xchg sbb nop inc xchg pop pop cmc mov mov xor and stos icebp jo pop popa cwtl inc (bad) and add addr16 adc inc imul (bad) fildll inc addr16 xor mov sub pop mov sub and mov jp ds lods data16 cmp mov xor and sti inc pushl ret mov subb sub cmp je rsqrtps and cmp repz aad lods jo add lds push and xchg dec loopne add inc mov add jecxz mov insb orb lock push imul adc mov icebp inc mov ss xor cld je sbb adc call sub arpl into or pop add sub jmp stos test xor add shr and push gs sbb adc pop cmpsb add scas jecxz jp jmp mov push mov out enter out jp sub cwtl or popa pop add sbb inc push test push in xchg inc jle enter inc cmp into xchg jle mov jne and outsl jmp adc (bad) fild sub sarb dec loop or pop orl xchg sub inc es fstps xchg out rclb xor dec insl dec adc jnp dec fist mov test push mov sbb loopne adc add cltd js js jl jl js pusha inc inc aaa (bad) enter add ja insb aam test dec or push aaa test or mov icebp fwait or and iret js mov js mov (bad) addr16 jecxz add pop lods pop imul jae jne add stos pop mov pop out mov cli add dec add pop scas mov insl dec cwtl mov xor dec cmp sti cmp divb xor cmp or sti mov adc sub sub xor loope adc popa push pusha fdiv dec xor ret lds aam test xor mov addr16 lcall xor test aam and int xor and dec push inc and in cmc leave rolb pushf mov loop rolb bnd push (bad) mov hlt inc ljmp and outsl ss pushf add out cmpl adc adc xor das mov add xor scas popa mov push xchg movsl in out and mov (bad) sbb xor stos cmpsb xchg xor inc or ret adc jp dec mov sbb test jle mov lock pop nop lret ret jl or movsl rolb inc cs call push sbb ret mov xchg adc add add push shrb cld mov xchg pop xor (bad) inc pushf test insb sarl data16 sbb daa inc jb and and push leave mov push pushl clc cld jecxz xor and int mov mov (bad) pop andl xchg mov movsb (bad) out lods sub pop sbb push add mov push fwait inc jmp loope shlb inc sbb pop cmp dec lods and dec and sarb inc cwtl xchg mov andl adc pop pop mov pop rorb xchg and or inc and scas mov stos cltd sbb ljmp or jbe add inc test js or push sbb enter int in adc aas pushf adc les mov or pop out and into mov lock and xor inc cmp nop mov lea (bad) push cmp rcrb and sub js inc (bad) or sbb (bad) pusha loop orb (bad) mov pop in fldl int3 inc pop push addr16 xchg gs jo outsl pusha and sbbb ret sub jns es xchg mov xor aas test dec or cmpsb sti sub shlb xchg adc and adc cmp fbld inc mov data16 icebp pop mov adc xchg mov in and fsubrs dec rolb and adc jle ds imul int3 (bad) jbe (bad) cmp addb mov add sbb and fstpt fsubs and hlt sub test shll cmp js nop mov in add inc test xor flds xchg or dec or sub dec cmp xor imulb mov outsb add pop sbb add nop jp push mov xchg cmpb fsubr loopne add mov jle add and dec push stos cld cmp pop add lock add in rclb ljmp lods or (bad) js cltd hlt add cmp sub popa aam dec loopne and or and dec leave pop ds lcall movb fildll pop jl imul adc cmp and dec pop pushf adc mov mulb mov sbb addr16 ficom sub arpl adc lock pop sub fildl pop and rolb dec insb shl lock adc mov cld dec inc in and adc xor pusha mov mov mov sbb pushl sub (bad) or adc bound mov jns sar shll pop cmpsb dec mov mov and mov shr push inc hlt icebp mov xchg fwait je adc dec es sub or adc ret xor mov int3 push sbb jecxz popa sti jg fwait insl and data16 mov inc xchg add push mov dec (bad) and pusha test loop cwtl pop dec add mov push push jle xor add roll nop xchg jno sub adc and leave sub dec mov push adc add pusha jl nop add negb pop js lock push mov js call push xchg insl mov and loop push dec add inc lods loopne or inc mov lods sbb js cwtl sbb pushf and add andl mov xor shrl ja add xor mov in aad and or repz add (bad) daa and pushf mov ja push xchg add push cli cmp push test movl add mov push mov clc pop test dec call enter lret or and in add ret mov xchg int3 mov xor jecxz loop sub jns lods int3 add iret add mov inc daa int adc not mov add pushf xchg in pop xor xchg adc add add (bad) pop add push dec mov out jnp (bad) and int3 das cmp jmp pusha aam (bad) jg jo movb jl or ret jne call adc cmp imul and mov leave js arpl adc xor pop insb mov and loop sbb rolb movsb inc fwait sbb adc inc pop lahf insb fwait adc pop cwtl adc lods push dec xor sub shr rcll cltd imul cmp lcall int3 jmp add xor add out and mov or outsb dec mov pop inc xchg cmp test dec lods adc ljmp daa ja add cmp dec or mov inc and adc jecxz les inc mov stos iret dec sbb sbbb sub or pop aaa cmp jns pop and orb adc aad add dec sbb or add std addl jecxz shr js jp int3 pop dec xor mov test lret adc (bad) push test lds pop xchg adc stos pop adc jmp mov fcoms pop jb or jne test fsubrs movsl movsb xchg dec fs repnz dec pop inc push (bad) dec cmp mov int pop lods cwtl arpl jnp add pop sbb sub jbe test pushf adc push imul fs lock xchg js and xor nop loop push pop ss mov xor add adc cmp add mov sbb pop pusha lock mov xor sub push insb inc lea and frstor jno lahf pop mov or rcr jmp imul insl cld sbb popa je pop inc mov je add cmp push movsb cmp add push ds add fs insl arpl push pop sbb inc add daa lret push add sub dec stos add faddl test cld mov loopne add jbe,pn mov sub mov pushl mov mov add jno callw jns daa pop inc dec sbb outsl jmp cmp clc call pop fldcw add xlat (bad) jne pop cmp or cmp dec pop mov call xor mov push test and mov mov jl mov paddsb mov or aam adc push mov jge frstor push loope add mov or cmp movb and js xor xchg cmpsl adcl or add cld stos xchg test ret dec cmp js movsl jmp fcomps pop add adc push inc dec mov mov inc test push and sub ljmp pop cmpb sbb cmp (bad) jmp push and and (bad) add xor setg aam cltd cmp add mov (bad) pushf mov leave mov inc xchg cmp daa (bad) pop jecxz or and mov (bad) jb adc into or movsl jne insb aaa lock outsb cmp enter aad fs orb (bad) dec ror sbb hlt mov or jns push dec mov mov je jae sub sahf rolb mov and xor adc sbb xchg (bad) mov pop cmp lods pop orb inc in hlt jns add sbb aas cs xor fildl out xor adc sbb lods out mov inc mov dec xor loope leave jne fdivrs mov dec andb adc enter stc xor pop cmp aam nop add test sbb int3 mov fadd xchg lret lret test and pop pop mov xchg (bad) push incl push mov mov or inc mov in cmp pop js jle or cmp fadd popa cwtl hlt jb xor xlat cmp mov mov xor ja add dec aas push loope jp lret scas jge daa loop xchg lods popa cld adc aaa adc xchg ljmp bound fs xorb test add lret das cltd in dec add pop mov lock dec jbe hlt icebp mov jnp pushf and loopne or adc xchg push shrl stos dec leave inc in push aam fcoml gs and lods cwtl shll cmp sbb jmp nop adc nop clc pop mov xor xor mov cwtl lock lods sub pop mov hlt test cmp cmp jecxz std ja adc adc nop adc xchg cwtl sbb stos into jns clc add adc xchg pop sahf mov mov ljmp push (bad) push cwtl in repnz int3 xor pushf pop or scas jecxz inc sbb test push jp incl out xchg cmc mov dec and subl pop es insl xor push shrb inc jle pop outsl inc stc cmp sbb lods in mov jo xor and stos add in dec sbb push push xor mov and xchg leave test int3 mov xchg mov xor (bad) js add je xor sub subb or (bad) cltd inc addb jno sti test jae or add (bad) pop popa sbb fldl mov pop int3 and aas mov push ss pop lock daa int3 mov xchg mov cmp fbld inc or xor or dec inc push push inc or mov mov clc pusha sti andb lds xorb les jo add xor ja pop ror les insl add ret inc or out sub mov (bad) adc test sbb sbb pop mov pushf fnstsw push das fs fcoms scas sbbl push pop lds xchg nop test (bad) and add mov inc int3 movsl nop in mov lea cmp or loop xor pop adc adc jle dec fdivr fs and sbb cmp and dec fsts call jno sub xchg cmp cmpb cmp repz daa test mov rcr or fidivrl or imul (bad) pop les pandn add mov cli popa test mov push sbb insb jne leave nop jb or xor dec cmp sub insb mov icebp cmp sbb jo addr16 sbb jmp aaa sub add aam pushf lds cs pop push hlt and add push call xchg mov add dec lds xchg aam xchg jl and mov adc dec hlt push sub xchg fs das xor lahf call inc sbb mov int3 push add cmp and push js add sbb add sub add mov adc es es push les sarb sub fisttpll fwait push bound fimul mov pop cwtl inc adc mov sbb sbb lods pusha cmc insl add movsb (bad) bound cmpsl jno jnp mov fwait inc inc inc loope jp and aaa or xor stc add loop push xchg mov add mov test pop mov lds nop lahf cmp inc push cmpsb addb arpl xor jmp aas shrb lock xor add mov mov aas aam xchg mov inc add cmp inc dec dec xor sahf adc pusha push pop mov test dec lahf es jo push (bad) cwtl or lcall adc sub add (bad) lret fsubrl and loope mov pop xor push pop in lods mov mov les ret and mov push (bad) (bad) test pop jne sbb out (bad) xor sub bound or int3 add dec pushf jmp and arpl xchg (bad) sub insl cmp jo,pt dec (bad) sarb inc mov (bad) ds pop inc popa jne orl out rcl ds adc loope mov clc fucompp adcb cmpsl (bad) pop les cmp inc add (bad) mov xchg inc mov add push (bad) xchg or popf test add pop (bad) mov incb and aam jno ljmp push (bad) or sarl arpl and mov leave popf fdivrs subb xchg mov insl and clc mov jno or fcompl xor orb jg fsubl push push leave adc sub data16 mov adc mov fs pop mov add fimul push xor pusha fsubl add and lods add cmp mov add sbb add jns cs into sbb sbb jp fcomp dec je dec mov jmp add push push ljmp or adc pop and inc loopne pop xor sub xorb sarb pop lods clc add std (bad) or pop push out adc cmp fcompl inc lods aas test movsl insl mov clc cld lcall or xchg dec push rolb adc sub add or lock add test (bad) nop cmp inc sub sbb mov add xor cmp orb iret orl push ret xchg jecxz loop (bad) in ds dec int3 sub dec js sbb popa mov or call (bad) aad sbb aaa adc ret mov cmpsb mov mov movsb insb nop cmp adc sub inc arpl sbb mov mov icebp push push mov inc nop (bad) stc push enter mov jecxz jl xor xorb mov inc add mov fcomp and adc aad sub test and pop mov cmpsb cld cmp arpl in int3 nop xchg (bad) fwait dec mov mov xor add repz nop fwait insl hlt rcrl add popa push nop adc aaa pop and (bad) cmp (bad) repz imul xor in mov cmp pushf (bad) loopne inc inc ss mov andb or inc pusha sbbb xor repnz punpcklbw es sahf fiaddl mov cmp pop xor xor cmpsb int3 mov iret adc xchg loopne rorb pop push xchg push mov cli and mov inc (bad) or rolb bound shl mov cmp push or sbb pop xorl add call xor add mov test cmp (bad) negb inc (bad) mov xor sbb pusha adc out cwtl push cwtl xor sbbl mov pop cmp loope add (bad) or sbb sbb dec js or jnp mov (bad) sub rcrl xchg xor ljmp lret or jg xlat sbb (bad) mov xor scas inc pop cmp push leave hlt adc in or cmp cwtl dec fcomps jp pop xchg (bad) mov andb jle,pn sub jbe jp add inc push or int xchg lock inc (bad) divl mov cs mov pop sbb (bad) mov lock rolb test das push pop sub xchg dec or xchg movsl push ret xchg sbb pop fisubl lret push adc sub or call les add push push fnstsw push lods push pop data16 orb andl setle aaa add lds roll adc dec js pop mov push ret pusha lock rcrl lret jno,pt sar cmp (bad) ret dec pop or cmpsb sbb movsb test add inc adc sub cs xor mov adc lea rcl mov lods lea cmpsb dec and or arpl adc lock arpl sbb jecxz push pop xchg add icebp arpl dec mov adc or ret or push or rcl call cmc popa aam or mov int mov in pop pusha push add in xchg sbb push sub nop sbb add cli das pop add inc pop push mov into jp movl leave inc hlt inc adc shrb jl je js js popa pop adc mov lahf and enter pop addr16 scas adc mov xchg lock pop flds cmc mov mov ljmp add in bound (bad) (bad) push mov cltd xor lds loopne mov in shrb loopne mov test (bad) xor adc dec xchg inc dec out jo popa ds push push xlat xor mov xor loopne cwtl pop mov push push addr16 imul stos sbb or xor rol lock jb addr16 adc sbbb insb xor (bad) lock inc mov push enter dec jbe mov xor xchg ffreep adc pushf sub dec imul (bad) sbb add iret dec push nop and test aam cmpsl int3 or jbe and jg mov and pop test out mov push mov pop sub scas xlat sub (bad) (bad) xor call pusha pop xor dec mov aam fmull or int or pop sbb jg loopne frndint inc js push cwtl in xchg clc push xor jg jo add testb mov mov sub cmpb push add push andl jp popa mov scas call repnz pop sub cmp and xchg add jle shlb repz xchg mov mov mov sbb and insb add int xor and sbb mov movsb aam (bad) adc fucomi lret pop call arpl jmp jb add inc int jmp or push addb stos or push sub test repz and rclb cmpsl lock ss add pop inc mov pop pusha sti or pop cmp xchg loope rcll inc dec adc test (bad) movsl jbe mov xlat push inc movsb xchg adc adc cmp xor mov xchg push xor mov popa xchg lods cmpsb sub push pop mov fs pop and sbb mov sub sbb (bad) (bad) stos js mov loope dec dec sub cli lods popa jecxz add and repz xchg push out popa mov cmp int dec incl cmp sbb xbegin xorb (bad) push pop push setne in movsb pop imul jno stc push mov mov in push jb pop out and or mov std and aad xchg inc add int push and rcr mov sahf cwtl (bad) call adc xchg jnp nop rolb and sbb movsl push rorb pop push cmp jl es add int3 sub es and sti js and or inc xor js out bound ss pusha mov sub (bad) adc add movsl push sbb call pop cmp cmc addr16 test cmp xor lds aam dec sbb dec imul adc gs fmulp adc js adc in dec adc sbb (bad) or xchg iret push inc xor ret loopne add inc cmpl nop orb sbb add (bad) mov std cwtl xor adc mov pusha movsb or hlt push into adcb adc int3 sti cmp sub xchg and lods push sbb and dec cmp or rclb push push jne xchg mov push push pop push mov pushf push dec xlat (bad) add xor out in add push dec cmpl push cmp cmpb and add ljmp data16 iret imul push push cs test mov cld cmp out enter fistp cmp fisttpl dec jge push jp cld pushf inc sub pop add or or aad bound subl xlat fnstcw push mov jmp (bad) icebp pop dec sahf aad in inc lds xchg jge inc jmp insb popf jge and pop jne push push ja pop jp push jge inc jmp out mul pusha daa jne add test dec inc fildl pop jb or push push popf std sbb dec pop ljmp dec aaa push add pop arpl (bad) jge or scas jno mov jne push (bad) or dec notl sbb scas loop push cmp in pop ja adc cmp jne outsl jmp push dec dec adc and stos sub add ljmp cmpsl inc adcl (bad) repnz jne jne ja int3 push popf xlat lahf popa sbb movsb cmpsb loope mov and xchg add push pop pop ret sub mov jae mov cmpsl jne sbb adc jae andnps xor mov faddl imul mov sahf icebp sbb popf push pop push inc jnp inc lods cmpsl sbb xchg add mov (bad) bound sub test jmp add add add or sub leave je xor ljmp inc adc mov xchg sub cmp push insl jle cld data16 fnsave push das es aam dec mov pop pop add jge jbe sub les lods pop lcall je ror inc xor add mov neg add in and pop xor add ds or scas cmp fldenv add stc jno mov outsb test push push mov cmp lret adcb (bad) jg push adc lcall adc add push push (bad) xor jo or adc dec jae loop pop push mov jp inc adc inc add lea fiaddl int3 xor or jno lret add imul jmp add cmp add sub (bad) sbb aad or rorb mov or insl aas jle mov fmuls ja test and into push add sub sub (bad) cmp pop shrl xchg fsubs imul lock dec ret push pushf jmp call not dec into fild dec mov sub in cmp jmp dec xchg mov dec scas fistl dec cli lcall xchg xor rcrb test push cwtl mov push add or cmp pop pop push ret lahf cmp clc and sbb dec dec (bad) push xor inc cmp push test and mov ffreep jmp push xchg stos push add cmp or stc jbe repz in fs pop out mov sbbl mov stc pop jge xchg lds push mov or pop sarl xchg outsl add out outsb and push dec push leave pop push adc jno inc scas jne lds or frstor sub or stos xchg or pop cmc jns daa ja loope pop mov mov push call in std add ljmp cmp jo ret push cmp fxch jmp cmc popf negl jmp push dec jno es xchg setb into rorl sub and mov jl sbb ds ja sub lds ret ret mov add lods mov popa dec loopne ret xchg pusha jmp test leave xlat push sbb mov add fldl xor push xor mov sbb xchg dec or jne or and mov add movsl add push and mov daa jne fildll dec stos mov ds dec cmp cwtl iret scas mov dec adc stos (bad) fst stos jp jbe pop daa jge dec add mov sbb mov mov or aad cmp aad dec (bad) mov xchg sub and into cmp xchg mov add xchg cmp sub fdivrl or shrb (bad) and dec cmp icebp adc jecxz add mov test repz or jl mov cs pop mov mov push pusha pop jae sub jg add or mov cwtl pop inc xchg pop and jg (bad) movsb sar dec xchg xchg jnp add loope xchg (bad) int3 sub mov fs and das (bad) aaa mov lods jbe out mov rclb in pop adc (bad) clc pop and lret mov adc inc sub dec xor jmp adc push sbb add mov xor dec inc scas into push outsl adc stos pop lock dec mov mov (bad) cltd ret dec sub adc adc lods test and xor out pop jp add jno add jge dec mov dec test cli test mov push cltd mov pop lds jae cwtl dec jle sbb outsl test lret mov add dec aas in in enter (bad) add pop jge cmp push mov ljmp or stos ret adc pmuludq daa dec add add pop adcl push jge mov lods popl add sar or xlat into sahf cmp jno pop cs and test mulb aam pop mov jg fstl cli cld mov jmp stc or stos vmwrite sub mov and fstpt dec fadds clc pop mov imul sub aaa inc dec sub (bad) add ljmp out (bad) lcall add xchg mov xchg ljmp xor pop sub repz jge int std adc (bad) daa jne notb imul adc cltd inc push test inc and mov sahf in idivb inc fwait xchg mov sbb out es stos add loop (bad) add fs mov nop stc inc adc fmuls sbb mov ret rcr outsl sarb pop adc movsb pushf adc push loopne fist pop test lahf fwait mov push leave jno mov das orw cmp es arpl add push cmp jo mov stos iret std je push mov inc push flds xchg cltd out ja xchg sub sub dec out or pop dec loope rol push lcall mov pop mov repz or xor repz mov mov repz (bad) repnz out sahf punpckhbw cmpsb pop movsl push pop inc rolb icebp es pop jmp push pop mov adc out mov inc or out (bad) and lods rolb sbb pusha cs push idivl inc adc or xor arpl jo (bad) dec add test mov cld sub jnp imul push fsub nop jg mov pushl dec xor jmp and addr16 jecxz pop or stc dec jne pop adc and es fisttp into ret aas xor aam outsl ret inc dec sarb out and mov mov xchg insl out mov sti lods fwait mov push nop add add mov mov rcrb pop sub jmp fs inc push inc and xor rcrb xchg repz push or lahf xchg sbb inc cmpsb cmp jae jnp xor mov or dec stc push lret xor jo test pop mov mov mov sub pop ss add push inc xchg cmp xchg push xchg (bad) out adc xor les pop scas addr16 cmpsb jnp adc jp cmpsb movsb test add into mov pop and pop jmp fcomps cmp out inc ss and (bad) xor adc rorb jle push mov add jle (bad) mov xor dec push loope xor and mov popa jnp (bad) movsb scas js dec add fcom cmp in lods push ljmp jmp sbb or bound or push ljmp (bad) andl bound jnp imul notl and sbb addr16 push mov insl sti and xchg xorl mov push add mull enter testb push dec cmp jg pop and dec inc add xor bound dec inc jl lret icebp mov cmp rorl pushf adc outsl xor jno pop xlat push shld mov jo mov out or mov in lock dec xor cmp mov lret or pop inc out lahf pop lahf mov cli in lds mov inc dec in cmp lret inc jne push movsb mov cmpsl add repz les test fs mov (bad) fmul pushf add loopne pop mov repz cmpsl sbb adc incl jns popa repnz fdivs test or mov add push dec push or pop pop cmc fldcw and pop mov sub mov das and lock push jae loope inc add jg or pop neg shl mov inc mov lret jmp (bad) push xchg clc add and xor dec out insb je scas mov jbe test (bad) jmp and shr fistpl pop out mov jecxz hlt sti lods adc xchg std cmp pusha push dec inc mov je and adc jle sub rcll adc stos add add fs or (bad) ds outsl inc in sub inc adc out inc cld cwtl out pop sub mov fwait dec in adc push cmp stc pusha pop and nop pop add and cmp out stc cmc pusha xor movl leave push xorb xor pop or fcomps push xor push or push mov jmp pop iret (bad) fisttpl inc pop pop jb addr16 sub jle mov icebp push and (bad) bswap inc stc in lods push in and mov sarb add cmc jge jecxz and xor jmp mov sub je enter xchg jnp sub push cmpsl push cmp adc fimul test push lods scas cmp mov xchg mov mov jo mov pop inc jecxz add mov add sub xchg xchg nop inc sahf insb push (bad) test adc dec xchg cltd push xor adc leave and jb xchg outsl and adc dec mov out loopne jno nop xor pusha fisttp sub and mov mov inc enter (bad) push lods push pop push push and sbb mov and adc cmc popa push add xchg (bad) loopne jle (bad) pushf push das xor push jne dec xor addl mov mov popf inc adc fistpll fstpt xor mov cmp mov mov jg and pop ss add push jg (bad) jne adc mov inc subl inc push dec imul jge push out jg dec cmp into arpl (bad) aam (bad) xor ljmp cmp pop call arpl pop popf and or and and aaa sahf push lahf jne sub push pop jmp in out push xchg pop inc push push push jmp scas mov mov gs pusha addr16 cmc and cwtl cli pop adc pop xchg ret sbb loopne inc dec jl inc or daa push dec sbb in cmpsb outsl cltd or push push sbbb stos rcrl jmp aad mov bnd xchg sbb mov pop adc hlt pop insb lock and pop jmp leave pop jnp in mov sub cmp inc nop faddl jg outsb mov cmpsb je dec push lds (bad) outsl call cmpsl lods sbb mov pop mov in rorl sbb or (bad) pop and xor jnp out shr push jmp dec fldenv xor shrb xchg xorl jg nop add scas lret jae dec (bad) and mov or aaa push adc add cmpsb add fidivrl mov cwtl push les (bad) icebp test rcr andl insb fistpl not iret repnz ffree push sub mov push adc inc add nop add cmp sub dec lcall bound jns,pt jmp enter xor mov lret mov scas sbb (bad) insb xchg (bad) out and dec cld push sub icebp addb adc jnp fs lahf pop cmp push push push jno (bad) (bad) das (bad) adc mov addl rorl adc sub mov mov addr16 inc mov cwtl dec orl aad cmp xchg adc ret xlat les loopne or jle into or or pop add jmp xor mov ljmp into jg inc cmp xor cli fcmovb xchg xor add mov sub sub or push pop or sbb mov cli push es movsl ljmp (bad) lahf jl sbb jmp and push pop sub dec xchg push jne fdivl in xchg adc outsl add incl test push jbe pop rcll push push push outsb push adc pusha (bad) scas dec jnp cs jo cs jmp sub insl add xor pop add or add mov mov mov (bad) sbb sbb sub cmp push add lods jae mov jo pop ljmp loopne jbe push mov mov inc mov js add mov jge dec add add cmp inc lcall ja enter push pop sub add scas dec ja jno add dec adc inc xor mov hlt data16 ljmp ret xchg mov inc push ret (bad) or mov push mov and pop push xor mov adc inc push push ret test nop sub lret adc ss inc mov push ljmp pop push push xor in inc dec and pop inc push ret cwtl xchg rolb cld mov in aam fsubrs into ljmp fdivrs or (bad) aas pop test inc lea or pop roll cmp push inc jge adc pop push dec mov subb mov push mov add imul shl push shrl dec adc rdpmc aam sbb xor daa mov ds mov cli outsl add js (bad) sbb jge jb pop and ds nop icebp aad or add push mov xorl and mov sbb shll xor mov mov sub inc mov mov arpl popf add push xchg repz mov pop mov jns es pop sub add scas sbbb cmp sub mov fist fldt xchg push mov xor mov loop sysexit clc xor outsl adc xor js addb (bad) cmp clc stc scas aas xchg (bad) mov push dec icebp jle add adc xchg mov pushf sub push lods addr16 sbb lret sahf add int mov pushf sbbb adc and xor icebp addr16 mov push rol push add mov push stc fdivs mov in xor gs adc dec int3 dec addl push out xchg cmovl dec loop (bad) jl out sbb and sahf pop repnz jo push push arpl popa push jmp xchg pop clc mov mov aad add adc arpl cwtl nop mov add and (bad) repz cmovbe add fwait adc mov inc pushf sbb imul subb bnd lock cmp shrl xrelease or xchg mov movsb xchg sub lock add movsl adc insl lock jo pusha (bad) inc fisttpll inc adc je or call fstps (bad) jbe sub lock push and mov test mov nop add fsubl and ds sbb mov cmp jae shlb mov adc or sub mov cmpsb inc jbe push nop push push outsl push mull and jbe jecxz sub cwtl aad adc (bad) nop nop loop popf clc mull xor lods psubusb pop lahf ret jmp cltd ja clc cmpsl mov pop pusha jne test (bad) dec push ret int3 orb push mov cwtl rcr mov mov pop in test icebp add into sbb push fstpt cwtl and adc stc addl arpl or push fyl2xp1 out leave add or mov jmp int3 or pusha mov dec or mov inc fsubr sbb add push dec jbe jnp rcrl scas push xlat xchg jl mov xor sbb xor adc mov mov xchg and (bad) dec dec mov dec dec xor sbb pushf dec mov lea add fisttpl aas fmull push xor es push or insl sub mov mulb arpl adc icebp and dec xchg and mov jle mov sbbb mov pop add xchg ljmp add xchg inc test mov fstl or ja aas push and bswap add bound loopne add jbe xchg xchg mov es popa in xor fldt roll pop mov mov rclb in jne ret enter xor and fdivp inc add add xor and cmp rclb out mov dec add sub mov add or pop stc add ja mov inc push add fimull jnp jns cmp adc mov xchg pushf into push mov and sbb jne (bad) cli fbld in xchg pop adc and add jae dec outsb pusha xchg movsl push add nop stc pop sbb xchg fs arpl (bad) loopne jecxz or xor sbb ret xorb dec pop leave nop rorb loopne add lock bound popa add mov fcmovnu push mov das add sbb inc sub psubw jecxz popf add xchg dec rol pop mov mov into arpl ds mov push sbb sbbb push pusha sbb outsb xchg repz cmp mov add jecxz xchg mov out mov jno mov jecxz test divps insb movsb into adc add fimull jae xlat add ror in jb mov js fldpi dec scas add sub pop pop jge jnp mov xchg add loop pop sbb int3 or fldl and pusha sti or popf add leave pop push in xor loop cwtl or jg add mov mov (bad) jecxz fnop cmp insl rolb ret leave int3 andb hlt add insb lea jnp xchg rcrl arpl cwtl dec repz cmc int3 loopne roll mov mull sub push es mov loopne cmp jmp push dec notb les or jb pop repnz arpl dec sbb xlat ror jl fistpl dec data16 xor (bad) jns call dec fbld dec adc jo mov repnz pop mov jae aas inc sti cmp sbb clc jns mov push sub hlt popf arpl mov cmc hlt add ds roll call inc and push xor insb orb mov popa pop dec dec aad mov popa cld shrl sbb jbe,pn faddl call mov cmp hlt addb mov jbe addl mov (bad) xlat stc add es (bad) rcll xchg pop push add enter and test or jne xchg lods movsb nop movsl mov pop sbb pop adc es and adcb dec sbb mov mov ret cmp mov push in insb int (bad) cs jbe add bound loopne sbb (bad) mov xchg pop add xchg int3 rclb in (bad) fisttpll jbe mov popf aas ja aad test push cmp sbb add sbb or jmp xor pop jnp add pop xchg push les xor dec mov mov jge ljmp dec aam (bad) dec mov inc xor test dec inc lods pusha hlt rcll xchg popl jo leave push add arpl xor lock fdivs lahf inc dec or bound jg pop sbb fmull add jns or int3 cmp add dec push jecxz push les cwtl loope aam repz xor (bad) mov sub stc xchg sub sub adc leave mov jo jo stc add (bad) (bad) dec mov or sbb ja mov cs cwtl sub inc mov arpl add aam xor pusha movsl std push add pop lret and fldt leave repz sti rolb pop out push cmp and dec inc and test sbb mov or (bad) xchg lods dec call mov xor dec mov inc push push dec es fsubrl mov test jmp cwtl clc push mov (bad) ret sti adc sub dec add xlat jae or rorb lods (bad) xchg mov inc mov dec add sbb jbe mov add jecxz jns aas int3 popf and push mull enter dec xchg pop fisub pop dec xchg jne or pop lock or nop jl arpl xor dec xor test mov gs movsb sbb test out mov icebp clc stos mov push add fisttpll add shlb jo cmp mov jl adc inc int3 jbe pushf aad pusha test mov add in pop xchg cmp push addb xchg test ss fwait pop sbb xor adc pop mov mov adc push call in xchg push in mov mov mul sbb sahf lods sub nop mov xor mov stos lret or sbbl scas push es sub jp xchg in cmpsb test mov in add loope xchg and sub js rorb jo loop movsb nop adc nop popa pavgb mov nop or in push sub jle iret xor jecxz ss inc sbb push mov les push in loop pop iret inc add jae sbb loopne (bad) decb out cmp pop jbe adc loopne push add loope adc and jae js mov cwtl (bad) cmp aad xchg or jmp mov mov aad xorl sbb xlat test pop hlt mov cltd out movswl lahf sub fadds dec fimul (bad) in in cmp push sbb add frstor cmp adc push push add adc imul cmpsl je sarl adc mov jbe push ror xchg cmp or insl cmp aad std lods popf mov sbb lret mov mov mov mov pop imul jbe in movd xchg add mov or loope or dec icebp (bad) icebp cmp dec add rcrb js mov in leave mov pop jno sar xchg sub xor or int3 jno imul movsb sti or leave jecxz jecxz mov adc hlt mov or and push repz fdivp pop lea std mov sbb aam cltd mov sbb mov sbb jno repz mov test inc inc pop popl dec push or or pop fmuls adc cmpsb and les lock fadd cmp enter or push fchs cs jl and (bad) push fldl push xor ja xchg push aaa inc add dec push jecxz or push pop addb push mov fcoml sub stc cltd pop or adc shr je cmpb and mov adc daa sub mov das and popa and movsl in xor dec call ret xchg dec mov fwait cmp pop into jge xlat add dec int3 (bad) arpl or je sub and (bad) add inc or faddl adc xor inc outsb mov push pop ret pop lods pop pop or test xchg mov je mov lret outsl and xorl and cld pop unpcklps lds (bad) xor push int3 pusha clc jne sar mov fldl lcall push pusha xchg scas lahf fist sub fmul icebp add sahf popa jbe loope adc or lahf dec pop sbb test rclb cmp sbb add aaa test repnz push add jns mov fnstsw lcall pop roll enter mov jmp repnz and add pop inc enter add call push adc fs cltd shr clc sub enter xlat iret or inc adc xor add and adcb xchg and sbb (bad) pop lock inc and cmc jl es int3 pushf dec lock ret cmp push inc dec or mov or adc xlat cmpl jae ret mov jo mov xor or jl (bad) les clc push cmp test faddl xor pop push repnz ja add and and incb mov or mov std push push sarb or adc out mov fs and add dec sbb add or pop or pop mov xchg jp add mov push mov dec add xor mov popa sub sbb sub frstor jne andb fldl pusha mov sub adc add jecxz sbb movsl cmp push mulps icebp test das mov xchg jno insl push add jnp (bad) pop shll dec push arpl and fistl (bad) in adc test inc mov add stos pusha cmp cmp or jecxz pop repnz adc stos adc push or push inc fisttp shrb movsl negl sub insl pusha push mov cmp lret xor lds shlb inc sbb sbb mov int3 adc sbb add and add stc inc and repnz pop pop addr16 sub mov cmp push pusha add sub lret test jp mov or xor push add fildl loope in insb lock add mov cltd sub lret jmp xchg pop mov cmpsl sbb xor xchg ja rcr psubusb dec or sub adc add inc enter pushf ds or out nop movsb stc int3 into cmp add push movsb inc sbb sub mov push stc cmp in dec incl cmc xor add inc cmp xor cmp add push es pusha mov scas xor dec push hlt mov sub roll jno into jecxz aas icebp enter add pop int3 and or stc dec jmp mov push iret jb sub mov add jnp gs roll int and das ss outsl inc (bad) cmp push inc js sti pop addr16 pop pop push dec (bad) xor mov ret (bad) cmp or and mov mov xor sub hlt movsl fmuls cli sub sub ljmp test push insb pop leave mov dec sbb sbb cltd adc adc sbbl adc loopne push sahf int int3 cmp lcall dec dec enter xor repz xlat xor sbb pop js movsb cmp sahf cmp adc stos push xor fcmovb xchg fist and and in rclb aad jmp add loope outsl popa and or dec int3 int3 pop push sti inc add cmp nop hlt testl or fs sub int xchg jmp fsubrl popa cli adc sbb push jne pop lahf lock or bound in in ret add das xor je add in cmp mov inc lcall xor dec mov jne and dec cs mov or andb xor rorl dec sbb or scas cmp sbb dec cs lock push or xlat pop cmp add push lock push orb inc (bad) and sub adc sub and jmp or cwtl sub nop add add lret mov dec inc xchg jne add mov and inc pop mov push sub lret or xchg sub sbb dec pusha push or push adc cmp xor adc adc mov sub and mov cwtl xchg in dec lods fcomps xchg nop and or leave fwait inc (bad) (bad) cmp fsubrl sarb dec inc jns fdivr les bound arpl mov inc mov push mov mov xor adcl add sub rol rol push roll adc ljmp int xorb frstor mov sbb orl cmp add and lods je aam push mov push mov jmp andl inc push scas or add hlt pop mov lcall and add mov in addb je sbb add stos inc les loopne xchg mov push and mov inc cmp imul in add loopne rorb mov sub mov add dec push add push cmpsb movsl (bad) push mov dec mov inc adc cltd lods cmp fsubs sub pop aam dec xchg out add dec in mov add jg data16 movsb dec push push xchg clc rol mov mov pop notb or sbb sbb push push jns sub or inc push arpl cltd mov repz pop add int das dec pop roll add inc xchg dec lock dec push sbb leave xor test sbb or fimul out dec stos daa xor (bad) xchg pop adc shrb outsb xchg dec dec and dec in push sarl jne mov data16 or sbb mov mov xor dec bound fwait js,pt add xchg sub js iret (bad) mov hlt pop and push cltd push bound js orb inc mov jno dec mov inc jo lock inc sub inc mov icebp punpcklbw popa pusha stos aam adc sub or shrl loopne inc xor addr16 int3 xor in leave ja pop fcoml push or mov leave and inc mov add xor repnz inc int3 jb pop sub add enter push dec je call fwait cwtl arpl (bad) lret sbb imul ret dec or mov imul or movl ds mov push xor mov pop jg add stos pop repz inc sub pusha mov rolb mov jle jbe popl out pop add adc jnp cmp mov xchg iret pop lock cwtl pinsrw gs inc sbb adc mov addr16 sbb ret add imul mov aam hlt lcall push insl int3 add sti xchg pop stc and cmp dec faddl sub cmpsl enter xchg xchg push loop ss adc push les mov or sbb mov mov hlt push adc adc movsb or jne push rclb (bad) xor fsubs or xchg subb sub adc pusha mov sub mov mov or pusha and jne inc popa pop shlb mov xlat xchg stos adc fcomi xchg add ret cwtl cmpb mov fs aaa rolb into add push and mov imul aam xor push sahf adc dec call aad test xor imul push push add pusha test fist or orl push xchg fsubl enter dec (bad) enter or cltd xchg and sub and inc adc xor (bad) js sbb into adc rorb cli sbb mov inc sbbb dec xor lock stos in jnp negb xchg push ja lods adc in sbb push (bad) dec mov jne fimul stos dec sbb sbb mov pop jne in scas roll mov xor enter push (bad) jb xchg shlb sarb lret pop mov mov repnz inc pusha sub push loopne stos sbb adc arpl nop cmpsb add sbb xchg push push push (bad) test fcompl add adc in sarb jo in cmp jns sbb aad xor fs jne and xchg sarb fs or test lock cmc pusha out ds aam or inc into xchg inc xchg and mov (bad) rorb fdiv push fs sbb add jle les ds add fist in add out das aam mov sbb xchg mov inc xor dec pop mov insb pusha rcrb xor es mov pop cmp jns add or jge inc movsb sbb sub insl fdivrs add les enter and cld ret lds inc sbb jo jbe test cs popa mov ljmp in pusha in inc sbb xlat sbb fmuls xor mov jns jecxz scas or jnp and aam adc push outsb cltd clc mov pop inc xor aas lds imul inc in mov les test enter arpl mov add sub or and cltd test aam inc cwtl (bad) mov and or pop sahf inc sbb jl ja clc jl inc or inc (bad) leave jno clc bound xchg out mov push push (bad) cmp frstor and into pop add push cmovo push es je adc nop add adc pop insl sahf outsl nop mov stc in pop mov mov mov dec add xchg cmp data16 rcrl mov imul scas mov rcl jecxz es std mov call cmc in add mov fwait mov and add pusha sbb outsl imul inc cmpsb jp dec icebp and js and cmp dec fisttpl dec add push lahf push out xor mov mov jmp and mov (bad) cmpsb fwait add inc lcall adc test sub or enter inc or adc sbb sbb js pushf push mov rcrb in pusha mov test mov daa add movb mov xor sbb mov enter movsl mov or lret loopw sbb les cmp incb out call aam cmp inc fidivr aas pop push add rolb (bad) mov mov sti pop sub sub xchg icebp or sbb and nop add or xor and enter jge int3 mov pushfw or pusha data16 ss nop clc mov xor stc push inc push (bad) or add in add cmp andb cmp and fmuls dec pop mov or push outsb ss pop add loope clc pop or es subb movsb cli out jge push std sbb pop rcrl jnp mov add sub lcall or mov or adc fbstp add (bad) mov mov cmp jo out jecxz aam add fcmovnu insl fldl2e in and pusha pop sub and loop xchg in in dec push add inc inc sbb stc dec mov in mov and popa xor mov jg xchg cmc cmp inc mov pop call add jns ds pop sbb or popa jbe faddl nop cmp mov icebp rcll hlt lahf call xchg stos cmp add repnz jae scas test lock in orb mov iret jns sbb test mov and xchg push sbb int movsl stc inc adc cmpsl mov fdivrs xor inc mov mov inc adc add mov and push adc add inc jae loopne xor cmp les add jmp shl les out pop push cmc bound dec adc jg add push (bad) dec lods bndstx fsub adc mov (bad) push cli movsl pop pop add sub push lahf add pop ss add xchg clc in fs push sub mov cltd enter in test dec dec rclb xor fildl (bad) xor cwtl mov dec mov mov xor xor aad lcall lods dec push inc cld mov outsl idiv hlt in add sub inc dec add test dec test insl sbb in mov fwait pop jae push xor test test jle mov adc add mov push inc or movsb sbb cmpsl pop xchg test daa and push mov and cmp fmuls jecxz es add int3 sbb mov iret xchg or rolb cmpsl jg fisttpll (bad) jle adc orl mov cmpb sbbl pop push fild fcoml add pop mov pushf adc add stos int fisttpll add mov nop push mov jo,pt cmpb pop pop adc jne cmp mov xor jle popa push pop inc movsl xchg idivl incl enter xchg fcoms mov mov jb sbb (bad) sbb jge test sub cmp notb les addr16 adc dec sub add and repz sbb lods in xchg enter enter bswap push shr mov dec sbb mov pusha clc or inc cmp push rclb lahf sub inc inc mov dec xchg jbe sub cmp cmp adc dec xor and mov inc lods andl jp (bad) xor nop sbb push les inc jle sbb mov cld xchg decl xchg (bad) rorl daa (bad) repz loopne inc add into sub xorb or rolb xchg cmp cmp or test and sub es cmpsl jle pushf push rcrb ss cmpsb xor in push (bad) mov dec iret rcrb adc loop daa sahf nop lods jnp int js andb jbe aam add les xchg mov cmp repz loop sub mov or iret add add insb into pop jbe shrb pusha insb dec sub mov fisttpl aaa inc data16 daa in xlat add push ret std and add jbe testb jbe jns add dec push cmpsl pop frstor mov mov test ret leave or leave push mov sbbb mov xchg sbb int and shr and das outsb sbb mov jo xor add setle add loope mov pop pusha and mov cmp out mov loopne push ret pusha inc pop repnz push xchg shrb mov popl bound cs orb adc cmp xor loopne or sub mov add fldcw sub xor insb mov dec adc hlt sbb lock inc xor test push mov cmpsb (bad) hlt mov je lret and ds loopne sahf mov pusha add push lods scas pop sub mov pextrw mov hlt mov sbb mov orb cwtl jns push loope adc test mov sbb jecxz andl xor popl in or or outsb adc pop sub mov jne in mov or sub mov (bad) mov and das push add aaa int3 repz repnz cmp scas lock sub xchg push lea dec pop std cmp es (bad) dec add hlt pusha jns in jle cmpsl sub jp (bad) test jge or sub cld mov push (bad) arpl jp daa data16 orb (bad) (bad) in push rclb pop xchg aam or lods and adc inc cmp push (bad) dec insb add cli mov or add jo xchg call pop insb inc or xchg pop xchg inc adc in add loop mov dec mov aam xor add xor stos fisub pop shll testl (bad) call jae push test sub mov or xor push dec sbb fadds orl std mov jo and pop stos add pop push fs and stos and add jl add jmp fimull pop outsl jb test test xchg mov es jmp adc mov and sub pop out mov and gs lea insb jle mov inc pusha or leave sbb stos das jne mov jle enter xor mov mov test hlt aaa add jmp in das fsubp loop jae push push ds push iret lods movsl inc jns mov insb sbb cltd leave cld push jo push sbb cmp andl fldcw je mov add dec (bad) lock or inc call add ror (bad) movsb xchg stc add jmp inc sub push lds jno mov jno add or mov add add mov in pop bound add addr16 arpl ret pop mov bound push adc repz jnp in ss xor cwtl inc mov sub js leave and das push lods and or jb sahf or or xchg shlb and call pop dec xchg fdivr adc dec out mov or nop cmp jne inc jns insb jl xor jne xor (bad) sbb imul roll fwait add je jecxz push dec add or add cld and sbb adc adc cmp push xor mov cmp (bad) pop pop cli imull adc out je jo (bad) (bad) cmp or bound adcb dec mov imul jns pop test lret add sub lock add ja repz pusha enter push xchg pop subb push xchg add push (bad) xor in xor (bad) add sahf out xor frstor pusha push inc out rcrl sbb pop add sub lock inc fdivrs nop cmc add add flds cwtl loopne add arpl mov sub adc mov pusha xchg add out imul dec stos xchg xor pushf dec or adc outsb push xor fadd int sub adc test lock call add scas or xor cmp mov cmp pop ret pusha pop jge sub lods lahf add loop inc mov add jmp pop dec nop punpckldq or loopne inc (bad) xor ret push xor (bad) and mov sub test ja loope inc mov pop inc xchg fdivs dec jbe push lods fistl cmp frstor in mov lods mov push jns xchg lret insb in sub mov add xchg push out and lret stos add mov arpl stos daa xor (bad) (bad) shrb lock lcall sub lret and out dec daa rcrl and mov mov cmp aaa and xor xlat pop adc (bad) inc sub cwtl or xor cmp insb dec lock jl lret dec push xorb out shl add test (bad) dec or and cmp cmpsl jge push adc sub fxch ljmp aam push xor jl lods cmp xor or mov sbb je mov jl bound cld es lret xchg jo mov sti inc cmc out adc add mov and add lock addb and jl les aas rorl xchg add aam gs jb roll adc jnp pusha (bad) dec pushf loop sub or jnp loope ficoml repz enter push fildl fsubrs fsubs adc scas add addb pop rorb add testb jbe dec fwait movsl and fdivrs test add or cmp adc add or push ja and les mov mov push mov stc add xorl mov inc pusha divl mov mov mov js bound outsl rolb jo push dec add aad enter add cmp hlt push mov push sbbb xlat xor repnz jno xor sbb xor mov mov movsb ljmp pop test int3 dec rcl call dec int lods js mov outsb ds lcall call and or xor pop xchg xchg xchg dec and xor mov cli mov jo arpl imul ljmp or adc shrb fdivrs sbb and add ljmp dec push add push sar cmpsb dec inc test pusha aam int3 cld cmp mov lcall enter add lcall iret test dec mulb pop pop add mov cmp add push or pop mov out push in inc movsb sub dec sbb cwtl xor movsb inc cld or ljmp rcll add jb sbb enter sahf mov rorl iret mov decb xchg mov sub (bad) pop lods ret add repz imul mov dec test mov inc mov push jp lods and cwtl dec sub lock adc dec xchg push lock push jb enter mov cmp push movsl repnz pop adc push add mov xchg aas loopne jne or pusha mov ds xor mov shrl mov xchg cld fild jl cs jecxz pop adc mov jns xchg ret in add cld adc xchg or jb mov movsb dec inc out add aas or fisubr inc mov mov fldl cwtl or cmp leave mov or xor inc loope fadds xlat clc jae sbb jl mov repz cmp nop dec cld mov add sbb sbb push inc pusha (bad) dec aam scas mov arpl pusha jp inc sbb mov rcl (bad) icebp je ja addl adc pop lods xor gs jecxz jns sarb inc cli lahf push and push jp xchg or and sbb mov loop das fs push mov cld jecxz rolb test neg add jmp out pop sbb js outsl cli add dec lock xor loope or or push xor inc out push fild outsl arpl (bad) rclb pop pavgw cwtl push rolb adc pushf (bad) adc and dec mov cmp pop and cltd ror les arpl int3 in push loop add push sbb loope mov xchg mov xor pushf mov sub int jle adc dec jo jl dec fsubl mov adc ror add test mov cmp mov rorl fisttpl movsb cltd aas orb call nop lea cmc lds stos in or adc fldenv push mov loope sbb int add and inc mov xchg or loop sbb mov mov iret xchg subl and mov or movsb cmp sbb jmp xchg nop adc mov cmp rcrb sbb cmp cld cmp add and adc sub xchg movsb or inc dec or shlb jnp sbb sti in loopne mov sub jg cltd adc daa and xchg xor cmp adc add and or cs dec mov push mov dec and mov hlt es push fadds stc pop lock pop movsl sarb cwtl in pop and inc xor xor xor enter rclb int3 dec repz pusha stos cld inc enter cmpsl mov (bad) jl adc or add movsl cli mov inc outsb bound aas cmp cwtl adc adc cmpsb daa pop rclb movsb cmc add lahf test xchg imul imul cmp push mov add cmpsl sub push inc push das es dec sti aam mov jb test mov lds enter fs mov mov lahf mov cmp pop mov je mov add (bad) lret pop add add pop int lret subb adc xor clc mov imul adc rcr mov mov sbb pop jg mov mov lcall push sub jo or outsl arpl dec push loopne popf cwtl rorb dec mov pop push les xor mov add sbb mov roll movsl sbb pusha or pop dec inc and mov sub shr icebp push push or mov pusha dec das rcrb sbb add mov sub xchg or pushw test mov in add xchg pusha call cmp mov push sub mov lahf cld and inc scas add int fnop push mov (bad) pushf xchg mov pop (bad) mov daa sub fwait sbb push adc repz inc in (bad) inc xor mov or jae cld repnz in les shll sbb sbb xchg jmp loopne test sbb pop dec xor add cmp (bad) ret mov mov mov je js add adc shrl mov in ja or cld push or bnd fstp outsb icebp xchg rorb xchg enter cmp and mov or jle and sub movsb and mov loopne sbb add pusha fcoml sub inc add adc clc data16 insb movl ja push rcrb dec in fldl test loop daa and rcrb xchg mov sti jl cmp add adc addb pop outsb add jnp pushf mov inc push aam js int3 icebp jns add lcall add inc mov pop or push add mov or or xor sbb addr16 addr16 loopne loopne and mov cmp movb leave push push mov nop icebp in pushf dec inc (bad) in jno push mov add xchg lret test or push repz loope cmp add notl mov in loopne daa cmp rcrl mov jno xor (bad) pop and mov mov sub push adc mov nop sbb stc insb andb call jecxz mov lcall mov xchg push mov mov (bad) or sub imulb mov pop add inc popf mov in int3 and or rorl stos mov sbb js pop sbb iret subb inc lods push cmp jle mull shrl dec aam inc lret loopne mov push insb icebp adc pushf sbb pusha inc cltd shl leave cltd lods fildll mov orb mov out dec ficoml in repnz mov imul pusha pop dec cmpsb int3 mov lahf pushf fdiv addr16 dec pusha adc push xchg hlt rcrb shrb rolb sti push bound dec push jno add sub cltd sbb xor lahf rol lret xor sbb lock mov mov jnp (bad) mov call and inc adc (bad) nop add shrl sahf dec mov mov sbb add jmp out and ss cmp xor jp add sahf fidiv xchg xchg or mov repnz fldl dec in cli pop not das lcall jbe add adc dec jns leave jp pop push outsl xor aad dec cld jl xchg lods pop mov sub sahf and mov lock or int3 sbb outsb loopne hlt dec pop enter dec not (bad) int cmp rolb sub adc lods insl adc stc mov dec or and push sbb scas mov mov pop mov mov xor cmpsl add pop sbb xor mov jns or notl pop add pop xchg pushf sbb fcomi sbb mov mov cmp mov push mov mov fdiv jp add push shr ja or cmpsl nop fiaddl int3 xchg dec outsb sub add test or dec cmp cmp or and pop xchg sbb dec fild pop ret inc jns fwait sub mov push fldcw cwtl ljmp cmc or lds push xchg dec adc loop push mov dec and int3 data16 and xchg daa loopne mov int3 and sbb mov (bad) sub popa mov test imul sbb sti mov jnp inc jmp call xchg xchg add iret add sti scas jb dec sbb inc xchg nop test xchg sbb dec and push clc ss pop cwtl push dec xlat adc sbbb pop pop lret adc mov add or pop insb pusha scas loopne hlt lods sahf insb inc xchg mov sub stos jecxz enter cmp das add push imul and je push ja jmp push in dec and xchg fmuls cmpb out ss idivb (bad) xchg mov xor sbb push add xchg pop fbstp add mov insl mov or or arpl insb sahf lock cmc inc dec lods push cwtl or cmp jae xor bswap or orb mov sbb pushf ficom push loopne enter rclb in je jns sbb or leave loopne fcomps dec adc test lret adc xor inc adc push lock sbb clc inc or jno enter (bad) fnstsw cmp push dec je,pt insl lods jmp add in pop mov add lcall insl inc hlt or lahf sbb (bad) jl in add or pop jmp cmp xor hlt jge inc daa xor movsb sbb clc icebp pop lcall outsb push xor xchg xor shrb sub test shrb int (bad) mov scas nop sub jle shll xor (bad) cwtl test and pop inc adcb stos add clc rcrl adc and fstl test adc shrl (bad) xor jae out and xor repnz jo icebp dec jl test xchg ljmp push les dec add popa lret enter shrb mov leave xor out pop test sbb jns mov sbb add adc fsubl inc and adc into loopne mov xchg in mov mov rcl pop js,pt push lds xchg push pop into mov cmp xor int3 sub cmp ljmp cwtl jo das add shrd xorb in push rclb add ret push jecxz pusha mov fstps (bad) lret pushf adc lds or sub pusha and (bad) sbb or icebp adc dec or shll push adc and pop daa adc leave fdivrl call sbb lds sarb cmp cmp pop mov add push stos ss jno adc clc xchg aam mov adc mov adc hlt push test or mov and inc mov orl pop clc scas mov in inc (bad) imul ficom or into add mov jo lahf xorb inc inc rclb pop xor insb add leave cmp cmpsb add aad xchg or fwait cmp dec into rorl xchg in roll fsub xor nop shrl es mov popa add xor push pop fisubl adc jl je dec jge or adc adc jb in in lds mov xor inc mov mov call imul insb les faddp in xor hlt rcr out xchg sub adc nop push add cli mov dec into add pop pop jle mov (bad) sbb (bad) enter lods in movups lds sbbb int xchg or jno adc in loop lea daa push add rcll xchg enter sbb mov mov add cmc iret fdivs add cmp lock pop rolb (bad) or js loope lahf dec (bad) xlat adc mov jne xor pop aam dec (bad) sti cmp sub bound sub inc pushf jnp cmp add push stc push mov pushl mov push dec sbb loop jecxz adc push fadds insb dec sub lock mov test inc mov leave push pop sbb add inc mov sahf mov sbb (bad) (bad) mov dec nop inc sbb or sbb push push sarb mov outsb fnstcw inc (bad) adc cli push movsb pop mov imul imul stc inc loope xchg or sahf int3 cmp mov test mov adc leave out xor scas (bad) mov mov mov jmp movsl call or test js xor pop insl adc xchg out mov push aas in subb or push enter sbb scas adc push pop je fsub out jmp outsl (bad) pop pop push inc xchg test aas dec mov shrl inc outsb sbb inc mov jbe inc and or gs xor sub ljmp in cmpsb sbb test insb fisttp nop sub and adc push mov repnz pop pop arpl push and imul in in or cwtl nop adc mov add pop hlt sub gs or loopne insl jno mov stos xchg mov clc xrelease sbb in insb xchg xchg cmp inc inc pop jecxz rolb xchg mov (bad) loopne (bad) push (bad) push add roll push mov sub jg sub mov cmpb adc das pushf cld fldl mov stc (bad) popf movb fistp sbb xor pop ret (bad) pusha xor push mov je outsb xor fidivl fmuls add shll push in sahf hlt inc and push add mov sbb sub sarl repz push and add stc mov enter push xor enter std jge mov and test jecxz mov dec les mov sbb mov lock dec push sbb inc into outsl dec fs xchg fsubs mov xor or add or std dec add pop xchg pop lcall mov cmp xchg and sub mov inc mov mov add out dec loopne cli sbb cwtl xor sub jb add jno gs outsb and push sub dec dec xor xchg push scas mov repz sahf xchg push jl mov ret pop sbb inc adc nop fs negl clc sbb push and xor loopne xor add rorb sbb mov and in lock or (bad) xchg enter add sub dec cmp sub dec and rcl fmull insb js add fildl push ss daa mov fiadd adc dec dec or (bad) ja xchg and and js js push repnz test cmp sti mov clc lret jp pop or cmp or sbb test pusha test pop pop inc xchg cwtl repz mov dec inc int3 xchg inc or jne push sarb jecxz fimul leave cmp loop sbb pop jp inc cld adc adc xlat clc test fsub decb mov inc mov cmpsb call adc jae add sahf inc xchg xlat pusha clc pop fsubr inc inc add add popf cwtl clc ret mov inc adc adc aam lods xchg add push cmpsb ljmp or add (bad) je mov (bad) int and scas push aam lahf fwait and adc fxch and imul pop fcmovbe xor sub adc aam xor in lds mov xchg inc cmpsl ljmp sub in pop sbb dec and adc pop movb xchg sub (bad) into or and or fcomps sahf loope push and rol ret repz push clc mov and adc add shl xor out dec loop pop pop cmp lods inc add mov shrl mov add pop pop out pop sahf jne add insl dec or add sahf sbbb out mov pop test sti adc test pushf push adc sarl inc sbb pop pop rcr push or bound mov mov xor test or add out outsl mov push stos test add fildl cmp scas (bad) aaa outsb out sub xor (bad) jo insb sub scas arpl push leave jl andb lret bound push in dec pop add fldenv test adc cmp add cwtl ds mov and out or pop subb pop cmp inc xor imul dec xchg popa push nop nop or mov xor pop xor lret mov add dec adc mov add cwtl repz push faddl xor add mov in add pop xchg xor mov movsb pop into int3 and fstpl cmp clc imul mov subb notb in jnp xor push daa adc cs inc mov cltd leave add adc stc out and cltd js or pop mov test jl adc or dec push mov adc adc (bad) test decl inc cmp out roll push xchg leave sbb nop arpl lcall push mov fs testb in aas test mov xchg shlb pop pop mov cmpb loop das push lds xor mov mov xchg ret or daa sbb bound rcll jnp (bad) adc fidiv inc rclb loop and add fcomi subl cmp mov rorb aad cmp outsb jmp test mov push xchg lcall out icebp test add cmpsb pop rdtsc lcall sbb mov and add in fisttp push jge add push add int icebp dec in rorl xor fcoml add ret inc push dec jnp psllw pop pop test jo lret mov pop into or push dec inc inc fldl sar sub fisttp dec fiadd scas les lods mov add pop add push in lea adc mov rcrl ljmp xchg shlb pop js js je lds loopne orb xchg push int3 xchg pop or outsb roll jmp mov or push dec xchg xor dec inc cmp popf push and mov pusha lock add in (bad) es call clc jne mov dec push push add adc and mov xor mov out push add mov xchg jne pusha push push add out mov pop std faddl mov mov pop repz add (bad) mov into cmp inc es and negb cld (bad) pop fiadd push orl stc push mov rorl cmp adc add mov mov outsb jbe aam adcb shll pop add in pusha and pushf andl jo es je add mov pop pop test ror push pop adc gs pop cmpsb push in pop mov mov push pusha mov loopne (bad) rcrb add adc in cld or add roll rclb in pushf cmp ljmp sar and or xchg add aam cmp mov stc sub jl and mov scas jmp mov or or or das jecxz shrl xchg inc dec adc sub push in ljmp jns (bad) lcall es mov pop insb in xor mov inc xchg call inc or sub mov mov adc sbbl dec orb enter mov sub loop inc sbb ljmp add test jbe mov sbb jle loop nop or mov (bad) lcall fisttpll jge mov add jae sbb test xor mov test adc int3 jns dec ljmp xchg adc adc cmp arpl bswap mov in lds mov sub cmc inc and mov and push xchg mov and cmp addr16 rcl xorl insl arpl mov dec add in lret or sub (bad) imul loop mov adc repz add mov ret and and ss loop in or lods push xacquire pop aad dec jge mov sbb in bound jne lock test test add out or addb (bad) scas test into rcrb add mov cltd test sbb je rorb cmc faddl lods enter xchg jae adc pop cwtl xor mov dec (bad) cmp (bad) js shl mov pop mov mov rolb mov (bad) outsl xchg insb push sub and mov add pop arpl jbe and add leave push fisttp lahf add add or dec ss js rolb pop add in (bad) out test shrb rclb enter add sub arpl cmp ljmp loopne testl mov jmp push movsb (bad) lds flds jmp mov mov add pop jle hlt xor enter or jno add cwtl cltd or and ds inc xchg xchg fs dec xor dec fiadd es cltd or cmp cmp ja cmc loop loopne adc mov pushf xor out dec dec xor movsb ret out cmp push jae push and (bad) pop jge add outsl or mov jg sbb dec lods lods mov jae mov movsb xor dec in rorl cmp xor add mov jae xor xchg xor repz dec adc test (bad) xchg mov js repnz insb pop pop imul aas mov inc xor bound stc jbe or (bad) mov out jbe mov add push pop or lea jl ficoml bound push lea loope (bad) ss mov jnp imulb or int3 stos cmp cmp lods lea xor pop repnz (bad) outsb adc inc mov xchg sbb fsubrp mov cltd in or mov pop xor in push push mov arpl mov and push aaa shlb dec fwait clc loopne add mov mov cmp dec and hlt in add pop adc or stos xor jnp dec cmp cmp fild into shl fs test xchg and ret and mov sbb pushf jb (bad) xchg add pop ffreep fnsave xor add jmp mov or std ljmp sub sbb inc in push cmp push dec ds adcl lret jg pusha loope subb sarb xchg xchg mov add test xlat mov inc and cld add pop cmp sub and ficoml dec lcall dec inc jg lcall or rclb addb aaa and mov sub pop in fdivl sbb or loope leave and fmul not out and rclb mov jns shl adc dec xchg mov xchg push mov inc in fadds je and adc adc mov mov mov inc movsb aad or xor adc jbe add fistpl mov jecxz lods test orb rorl lret loope arpl aam adc inc add inc push dec jmp mov test add ficom jmp add les dec sub es sahf pop pop push ret mov jle les hlt push or addb or leave cwtl (bad) hlt fisttp dec sahf inc je and add xlat (bad) hlt icebp rcrl pushf popa mov sti imul cmpsb or adc mov xchg stos sub cmp lret push (bad) push jbe call rcr pop adc gs in in clc mov aam out fadd faddl pusha sbb mov aam jo push xchg out int3 or inc test sub je sbb or jl sbb fsubl std in (bad) sahf pop pushf mov cli (bad) (bad) sub cmpsb andb inc das lock pushf xchg cmp inc sub out fcoml test jae hlt mov mov cmp daa cwtl idivl pusha sub pop pop popf clc adc add rolb sbb dec insl xor ss jnp mov and call mov add adc loop lcall jb and sub (bad) mov in xchg xchg cmpsl xchg sbb adc push mov push lods sub dec xor dec xor xchg lock int mov addl mov add dec cmpsb leave jge add scas jg imul mov scas adc push es add inc ds cli enter adc bound mov fsub add cmpsb (bad) add pop mov mov push add sub jbe ret xchg stc xor and push or mov cmp xchg lods cmp out adc mov rcrb cld cmp dec sub aam mov rcll sbb inc out leave mov rclb inc enter sub dec cld xchg push jns js mov push pop imul clc ljmp inc cmp push les push inc xorl fistpl pushf outsl mov adc or not out repz and sbb pop shll in mov inc dec into and adc add (bad) movsb add (bad) or pop rolb xor or push inc adc int3 sbb adc mov movsl pusha (bad) mov std les or mov jbe pusha mov je in pusha mov cld or adcb sbbb (bad) cwtl lret clc inc dec dec and rol jecxz (bad) cmc and repz mov in dec mov aad and sbb fsts cs bnd push xor pop sbb data16 ds xlat xchg jl outsb loopne add xchg jns sahf inc out or jnp and test sub (bad) (bad) shl cltd test jnp pop mov jmp ds pusha mov cmp add dec jmp lahf pop dec push lea and add jmp imul cmp gs and or (bad) fwait add mov mov adc pop pushf jge mov out mov xchg mov push test and or (bad) xor repnz (bad) lds mov bound in addr16 js mov cs pop sub inc mov mov add mov push inc mov sub repnz jecxz int dec stos cmp mov pop mov je hlt das add dec and test dec xchg cld fs stc in jecxz insb inc in cmp test nop daa je (bad) jmp rol shll (bad) sub lret jns add test or push call xor adc cmp jmp jmp and sub out scas sub fs xor push pop popa test cs es sub sub pop push test stc jb add inc sub mov adc pop movsb les icebp cmpsl loopne mov xor ret pushf or incb or insb dec xchg push push xchg lret jns fcomps sub int jb mov rorl or jne pop cmpsb icebp adc mov jge mov and push mov jb js inc clc sti rclb fsubl test fbld jg int3 and jae and cmpsb inc imul xchg cmp jmp or inc das push shll sbb mov cmpb pushf or cmp add mov sub enter sbb lods sbb js,pn or push jno loopne pushf add mov sbb int3 xor jl bound mov sbb and mov adc in jmp add or insb aad xor imul push fs or lret cmp loopne or clc shlb add outsl and lret cwtl or xlat out inc and sub loop loope add andl push test add jb addl mov test out cmp cmpsl xchg data16 fwait cld daa sbb dec adc orl pushl sahf out jge pusha pop hlt aad cwtl (bad) cmp mov xorl xor lods in push sbb fdiv aam cmp bnd js adc sub ss xchg aaa inc aam mov pusha push push or out inc stos loope xor dec loopne (bad) fisttpll xor push jo and fimul push cwtl stc pop mov inc jne add insl sub or lock jl in cmp dec xchg cmc or sahf xchg inc cmpsl gs adc test nop adc mov add push rorb fiaddl xor mov call mov jns cmpsl cld fs fnstenv pop pop movsl lcall les mov pop hlt ret xchg adc add (bad) mov lret mov outsb mov push xchg mov arpl fsub or jmp mov and movsb loop (bad) (bad) push jb mov js rcrl pushf or je mov sub mov ds mov (bad) adc sub outsb out les sbb jle (bad) and mov cld idivl xor mov sahf fs in and dec mov and repnz add mov sahf xchg sbb sub loop xchg int3 mov dec fnstcw stc rclb pop les js imul in loopne sub sbb jg clc lods push jne (bad) or and imul roll out xchg sbb outsl sarl xchg jecxz dec push aad or repnz (bad) push hlt pusha call pop adc les and pop or sub daa mov movsb push (bad) dec mov mov dec inc dec mov shrb in xor adc add add xchg hlt dec mov fsts cltd call clc add xchg test lea push enter jge add push jp push add xchg cwtl adc (bad) clc cld xchg fcoml xchg lret in adc xchg into dec int jge jb sbb xchg (bad) push cmp cmp sub xor sub (bad) cld sub and inc add loop je cld out pop add push imul jo js mov inc dec and sbb lahf nop nop pushf adc xchg jecxz leave fnclex movsb loopne mov mov mov mov cmp insb inc data16 or fucom stos test popa nop test ds push sub cmp add jno icebp loopne and (bad) mov mov pop xchg xor icebp sub jb imul xor jl xchg ds fcompl les adcb dec push add ret pop jl sar sbb mov sub in in lret and add lcall sub clc pop dec pushf jbe push ret insb mov or ficomp push mov rorb add and (bad) dec dec sbb inc je and xchg sub addr16 and add fist shl push mov mov mov mov js add fcomip mov add addr16 scas notb fimull xchg xchg inc add popa pop jb add pop jb add push inc sar pushf mov sbb push (bad) xor in adc inc movsl xor push push faddl and mov pusha cmc adc add fisttp sbbl out xchg mov push mov scas push cmp (bad) push jnp jns jnp cmp sarl add push sbb not repz mov nop jnp push pop jmp jne or add jae push sbb aam and pop add adc jmp inc push pop popf xchg fs mov mov push or jmp lcall jnp jg addl das roll jne jnp insl nop mov xchg jge push mov xor pop js cmp jae aad mov inc sub fstl cmp fwait push pop call push (bad) (bad) sub inc mov iret pusha cmp cmc sub or pop xchg jge scas testb push adc stos push mov push or jmp cmc imul add lods out mov add jnp dec inc (bad) push adc push jmp enter in add mov mov inc arpl xchg add mov push mov inc push and out das and and out int3 mov mov stos mov jle xchg ljmp arpl pop jo es push cmp mov and jns jo ds lods sub mov sub or push fbstp rcrl inc add bound nop ret scas outsb aas lar (bad) cmp dec add inc sti add dec xchg push test das addr16 and stos jns scas push aam push rclb stos mov cmp and test jnp xor mov pop es add push pop into pusha cwtl movsb xchg hlt add pop std dec (bad) scas aam pusha mov mov add (bad) repnz push inc pop cmpsb mov jmp mov xchg xchg jle nop xchg or mov push stc (bad) mov cmp scas mov sub pop bound pop inc push fsubl mov (bad) push stos outsl xor push scas mov sub push add les xchg sbbl aas incl mov push push mov or pop outsl andl jle or lods sbb add pop mov jmp aad push mov and gs fiaddl add push push push mov xor (bad) sbb mov adc sbb mov bound add or cmp sti jg icebp lret and xchg or pop lock pop pop add in fs xchg fldl out int3 jb adc (bad) mov dec pop add lret cltd inc jle jge (bad) mov mov leave in sub xchg in inc dec or pop and dec xor (bad) mov pushf aaa pushl pusha shr cld jg shl (bad) mov punpcklwd jmp and pop (bad) fs jo xor pop cmc inc lcall in xor jb push sbbb jecxz inc dec or xor mov ficomp call out sub jle addb xchg mov jp xor cmp push out xchg push xor out sarb jbe xor pusha not cmp clc lret add aas sti pop neg add mov daa and dec pop stos sub in dec ljmp flds fcmovnb mov sti mov inc push jp inc add jg pop xor adc cmp push hlt pusha jb mov into push mov jp add cwtl enter add mov pushf push dec mov xchg mov push pop inc dec mov sarl xor aad enter mov jnp or pusha and rcrb inc dec and mov adc add pop sub push inc iret and call ds arpl adc (bad) push fsubp repnz fcomi imul or int3 xchg aam pop push pop ja xchg or pop inc jno mov push ja xor xor inc or dec roll mov and push cmp jbe arpl (bad) out pop mov pop sbb loopne shr xor gs cmp push jne sub jl pop pop mov outsl ja inc lea or in jnp or jp popf sti push adc and gs cld cmp fs sub sti jnp pop mov dec lods mov inc mov lock xchg pop pop mov movsb inc stos repz (bad) add push fldl lret mov (bad) neg add roll push dec scas test iret jge mov ror push add pop dec push lret xchg xor mov sub movsb sbb cmp outsb pop mov sub or mov stc stc adc mov inc into jmp bound add mov jl and inc xorl sub sub imul test (bad) jle pop add add (bad) push nop or ds outsb (bad) icebp cmp rcl xor add (bad) imul or or and sarl dec mov ja lret push test mov dec popf insb mov dec sbb loopne add push jmp xchg ret aas shll ljmp pop mov das add pop (bad) push sub das (bad) dec sub pop lods fmuls jg imul inc pop jo jbe fneni(8087 cli subl mov nop lret pop lret pop addr16 gs repz mov add add jno xchg cltd imul xor pop aaa clc cmp sbb adc (bad) pop add pop jne push mov bnd push jbe jp mov stos bnd pop mov push outsb pop and push and sub push (bad) jnp nop repz pop out push push push insb pop inc shl stos pop enter pop cmp (bad) mov out xchg cmp (bad) mov push aad out mov jmp push (bad) icebp pop jmp adc push (bad) (bad) adc mov sbb lods std jne mov out pop cmc cs aad mov sub or leave push sub xor insl negb cmp cmp imull and hlt adc imul in or cmc jp pop mov push push sbb ljmp dec inc mov jae mov mov add dec add jp cmpsb ss cmp push subb pop jnp adc xchg and cmc inc add bound (bad) sub and adc inc pop jb pop mov cltd aaa add ljmp test push xchg je or or add jnp aad in inc pop dec rorl pop test pop push jo outsl dec xorl and pushf xor movsb shrb push out or cwtl pop push les push jmp sub xor and loope insl andb mov jmp and cmpsl inc xor jne mov xchg inc cs jle rorl adc sub aaa fnstsw dec push xor mov pop push push push data16 fmulp bound push pop mov test andnps or sub sarl arpl xchg mov test aas (bad) ret out pop sbb dec lods push test test or xchg sub leave sub sub sub out mov jmp stos cld add add rolb sbb xlat push (bad) iret pop mov xor dec pop scas dec xchg or testb outsl or xlat lret addr16 out or in add fistl repz or lcall jmp push rolb pop jg lds je out pop lock mov push mov out xor out sbb cs inc mov insb sub mov push and cmp mov out jmp and xor adc dec push cmp sub add imul add (bad) sti dec adc lahf cwtl aad pop addr16 (bad) mov pushl adc mov scas out int or pop test hlt adc into push pop shll jb andl dec add add or movsb xor push push stc sub popf cmp sub inc cltd movnti jo sbbl mov ret js iret dec pop repz or test mov mov or jmp mov aaa xchg (bad) and jmp pop pop int3 fist add std xchg add loop or inc cmp and push jmp call xchg imul xchg inc ret mov ljmp lret lret hlt std pop incb mov xor loope andl pop fnstsw xchg pop test mov cmpsl pop cwtl repnz add movsl push jp add push dec mov pop mov mov mov jmp pop inc and jmp sahf or daa (bad) fdivrl loope xchg or (bad) popa lcall jb cltd or stos pop cld mov pop sub mov cmp adc xchg gs int lret jae inc inc sub (bad) mov jp add stos sub xlat ljmp pop das aam ja dec pop push xchg and sbb sbb out push cltd in push push push or std xchg mov xor jmp push pop imul xchg int3 fsubs in xor pusha (bad) fistpll xchg jle push mov test rclb cmp jo add mov cmp push mov mov pop and shlb call jmp cmc in (bad) jge push or outsl arpl enter pop jle hlt scas mov and and mov xchg cmp je loop add mov mov arpl jmp outsb pop and push pop ljmp js or rcrl xor lahf pop rol xor push pop enter sbb add sub ja cmpsb add or fmull jmp (bad) cmp (bad) repz adc inc push nop xchg (bad) cwtl xlat jl xlat pushl inc ret push push jmp add cmp xor and ret jle and jle mov push mov pop inc add push xchg jge pop mov add pop cltd xor adc add or jno cmp jge ds add cmp out jno adc mov jg fwait into ja xor pop or ss sbb sti dec and adc punpckhbw int3 pusha dec imul xor sti cmp pop sub sub scas inc subb repnz ret outsb xchg adc cltd fildll push adc mov xchg fcmovbe dec dec and dec pop nop stos fsubl pop jns lret or lret fdivrl mov (bad) mov out jge push bound aas dec jl icebp pop pop mov jne sti xor cltd es jle addr16 mov mov xor add pop jmp sbb ja (bad) sbb add mov jmp sbb pop jno sub xchg call imul ja daa jo in xor cli out add frstor xlat xchg leave push push loopne es sbb (bad) shrb push jo or xchg loop testl das clc pop mov xor and dec add int3 dec (bad) loopne pop addb add aam aaa jg jmp and or call fnstsw fimul pop in add repnz xchg push or sub dec adc jecxz stc sub sub aad jl push inc push rorl push (bad) mov add imul addr16 (bad) or lcall push or les stos es mov mov notb lds push mov or popa push shll xchg push mov inc test jmp and push push stc jecxz pop push xchg sbb (bad) xor sub ret dec fdivl repnz daa add cmp cmp insl add movsl hlt ljmp call xchg pop aam dec movsb sub stos mov sbb inc add stos aad jl dec sub jmp mov inc clc arpl int sahf push push pusha lds mov lods inc (bad) or sub cmp mov sbb mov adc push add leave push push xchg xchg inc ror pop xchg mov adc (bad) (bad) int3 pop jne or loop xor shl test into or adc sbb pusha jp mov and sub add add movsb xchg mov jg stos xor dec add loop insb out add mov jnp fdivp rcll jbe cmp movsb (bad) dec std test xor mov pop leave push out daa inc mov mov out inc lahf xchg pop mov mov popa add (bad) pop xchg movsl push dec scas test pop lahf iret xor push lock movb sub jbe xchg shll cmp mov adc mov xchg adc inc adc cli push pop nop loope xchg pop outsb inc daa or mov lret lcall lret fwait pop lcall clc pop jmp aad imul dec lea mov call test adc es (bad) movsl xchg sub lret adc scas pop cmpsl and mov js push in sbb push loopne pop or mov sar mov ds fisubl sbb bound inc popl pop iret mov mov add out push ja cmp push (bad) fisubl and rorb pop add add push push dec dec inc cmp cmc add out stos arpl imul or out or sbb fcom inc xor inc sbb mov insl dec pop pusha in or push rolb fdivrl add mov shrl xchg cmpb mov cs in mov cmp les movsl add jl pop outsl mov pop mov jae mov push (bad) or test mov insl adc movsb mov adc xlat in andb in mov pop add add mov mov addl dec sbb stc rolb inc rorb push pmuludq jnp mov mov sbb out add or push mov test in sub (bad) call sbb test adc push pop int add (bad) arpl add add call adc inc jae arpl push outsl cmp pop in and or mov xchg jo jo test in jecxz inc sbb cmp push mov and mov sbb jb xor xchg sub pop je pop fstpt hlt outsb test (bad) sbb lods push jne xchg into cld and xor add mov sub rclb lods push sbb and xchg data16 sub fs cmp mov (bad) repnz (bad) movsl pop popa sub sbb mov rolb add inc aad inc push dec pop and mov cmova out cmp sub (bad) aas mov repnz xchg call xor subb mov sbb adc add jge pop loope iret xchg mov inc sub dec xor or cmp or (bad) mov dec iret or nop jbe fdivrl js fsub leave pop pop cwtl test xor or push jns mov cs stc sbb mov inc out add inc push adc push pushf hlt sub and imulb psadbw (bad) fdivs roll mov lock lods fs xor mov and int3 cmpsl es sbb scas mov (bad) xchg or xor mov cmp scas iret cmpsb fist sub xchg leave into test push mov xor sbb ret icebp inc (bad) fsubs lock cmp lds adc mov aaa (bad) movsb hlt fs inc (bad) out cmc xchg mull out rolb adc xor test (bad) jno dec mov push cmp cwtl lock inc test loop test rcrb dec and jnp mov xchg shrb fs out repnz lcall gs out gs inc sub push fsubr xor inc test add movsb les lret fmull aaa into sbb or add push fldenv andl cmc cld in add mov arpl add inc cmp push scas jle cli pop add push es in cmp adc inc in scas adc and or mov les loope cltd inc mov adc push fdivs sbb in inc gs lea adc and dec in (bad) dec (bad) mov inc repnz lods push insl and mov xor dec leave sub cwtl pushw jg xor aam fmuls adc and push mov adc insb add ds mov cmpl daa in sbb out sub push dec sbb faddl inc push cmp xchg push pop dec in push mov mov repz and insl cmpsb xlat imul mov out imull sbb mov pop lcall daa add jmp nop insl xor call cmp out cmp lcall xchg cmp sbb inc fs loopne int3 add cmp dec dec insb imul xchg rorl add stc ds mov loopne movups xor rorb jge imul xchg inc push mov mov mov inc test inc call mov sbb in addl mov cld (bad) xor wrmsr loopne test dec inc icebp dec fwait js pusha jne clc ficompl dec inc cmpsb je mov ret sbb fcoml pop adc xor xchg add adc inc lcall lahf mov rclb mov inc add andb sbb or add mov jmp fmulp mov cmp je push adc popa pusha cs loopne pop xchg aam and aad sti cld adc pusha mov adc push addb mov mov push in movsb sub jmp mov loopne xor dec mov adc mov test mov inc insb inc imul scas out sub mov add shlb lds xchg int3 imul leave rorb data16 mov jle shlb mov mov sbb fstps jmp mov cltd push and lods fdivrs mov mov sub adc add or xor cmpsl mov lock adc mov push loopne insl in stos adc divb or iret leave clc pusha movsb sbb out sub mov aaa fadds mov lods add in lds fs (bad) je mov pop mov test cmp add add mov push rol movl or mov sub nop dec insb addr16 aad sti cmp sub add and andb fbstp inc cmp out les mov hlt leave js add call fisttpl cltd lods out insl pop xchg cmp adc roll mov adc dec add sti rol cmp jne sbb push loope fiadd stc lods jae fdivrs daa mov dec in add mov xor or out nop (bad) mov bound fs imul out and push nop or repnz cmp xchg mov pop mov andb cmpsb pop subb in cmp jae pop test mov mov and xorl xor rclb rcl jecxz dec add dec les rorb dec and js mov gs stc inc dec clc cmp xchg sub xor and ja (bad) fdivrs mov mov inc repz cli sub insl pop push cmp dec aaa (bad) test inc pop mov mov add fwait (bad) adc lret cmp mov in test mov insb andl nop mov dec inc ret mov cmp test shlb or pop fs mov sub (bad) lock in pop fcompl add dec das (bad) rol add xchg pushf repnz dec les loope and scas xor imul sub mov xchg mov jb movb xchg cmpsl fisubl or xor cmovo push pop fisttpll (bad) sub rorb je jp add xchg xorb cmpsb arpl cwtl (bad) daa fiaddl pusha push lea add push push adc sbb pop mov add rclb or push inc mov jno add in mov push mov pusha push faddp mov mov add je jg add aad cmp nop xchg mov add and push jmp mov or jno clc fisubl fs (bad) jo repnz sarb cld inc je je iret adc or mov xor hlt icebp push xor ret push setnp jbe ja add push adc pop pop add fsubs push jge xor jle or push popa into push out subb pop or jns test (bad) sub push sbb push icebp pop and mov iret inc push and js jmp cs add pop or and add iret add push movsl stos mov ss imul cmpsb add inc lret push mov notl pop lret insb xchg xchg in dec test (bad) rcr add subl jae inc testb sti and cmp jne fsubrp mov or in mov repnz push idivl inc test xor and cmpsl jle movsb stos and mov enter or orb adc rclb les mov outsb dec iret movl dec (bad) (bad) in mov inc xor pop push xchg cmp cwtl cmp inc stc lcall or push add jbe in lds xchg push movsl sub sub clc flds mov adc xor out xor sub cmpsb mov lea push or mov dec pushf jmp ret insl and test dec add lcall fs enter and lahf xor jl test pusha sub (bad) pop clc data16 pop rcrb inc sbb outsl js or inc xor add (bad) (bad) mull int test xorb pop leave mov test sahf imul xorb or pop sub cwtl add dec punpcklwd icebp inc inc test xor stos xchg xor rolb (bad) insl cmpsb cmpsl jae nop xor mov lods jo cmpb sub and popf and and aaa or or mov sti mov add push iret mov lds lock js sbb dec enter push subb pop (bad) stos push mov and dec xor cmp xor enter pushf mov in dec test pop xlat push push je fwait mov inc outsb inc add addb sub dec hlt inc add (bad) jmp sahf cli iret mulb add adc adc push js inc hlt add push mov mov sbb fimul or xor xor add pop aam in add jge mov ljmp movaps push inc inc lret add insl adc pop test sub bound test pusha neg mov pusha int3 loopne out push pop es cld lock inc adc roll and and lea sub mov pop or xchg xor mov sub adc inc mov dec mov sub jb mov pop shrb add xchg out add sbb fs jno lock jns sbb jae fadds sub add and push dec pusha pop in loopne ret mov inc loope add (bad) in inc ret and dec sbbb out fwait push pop iret js ret xchg push out jmp xchg jmp daa js mov jl jl pop or xor clc lcall sbb dec fwait out stos xlat mov mov and mov add xor mov aad add and rorb xchg (bad) int3 fcomps aad sbb xchg add mov jno enter lock loop push inc xorb insl add jns or add cli inc scas xchg jbe,pt xadd or or subl dec add test add cld (bad) cli scas jne mov or jo pusha sbb ds nop and cli pushf jno aas jge pusha cmp xchg aas push sar rorb enter push adcb test js sti adc sbb jns loopne or jno cwtl call fidiv jmp jbe pop sbb pop adc fs int3 and and scas inc call sub pusha js jecxz cmp test and arpl sbb pop mov xchg xor xor fisubl loopne aaa daa push or fnstenv push mov add popa aaa inc sub in arpl cmp mov in sbb cmpb or xchg cwtl xchg xor xor fildl cmpsl ret addl je mov dec jle mov xor mov test pop push jns push mov pop test ja add jge inc mov cmc unpcklps mov stos inc sbb push std ret (bad) mov cmp pushf add fimul pop add mov xchg or call in xor imul daa xor cmp xor and les or (bad) in je std or inc test mov sbb cld sbb and fs shll (bad) loopne add scas sub jge pop jno hlt mov dec pushf testb mov cmpb call pusha xor daa loopne push jne aaa or mov cmpsb sbb data16 in or or pop enter xchg scas or xchg sahf lea shl dec mov loopne mov sub fwait dec sbb fwait inc cwtl mov or inc xchg sbb call pop (bad) xchg loopne add pop cmp lret call mov ja add loop in pop push cmp repz push sbb add loopne inc add mov push icebp fmul neg pusha adc popf xor jbe xor mov lcall bound add xchg fadd test sbb xchg call cmp lds dec outsl inc add sub sub pop sbb cs cld xchg in sbb or outsl pop shll fwait outsb clc into adc inc repz xchg push or push stc or sbb inc push mov pop aas out sub mov (bad) loop sbb push out cmpsb fwait xchg add add shl mov loopne,pn add mov cwtl fsubl push shlb fildll inc loopne ss fwait mov ret push or push sub arpl cwtl leave jo ss mov xor and cmpsb cwtl adc mov inc imul daa das xor sbb cmp loopne daa arpl cwtl xlat or pop mov pushl or inc push icebp aam xor mov pop xchg sbb pop (bad) cld mov mov mov loopne push inc pop sbb dec pop inc sbb cmp shr (bad) mov add test (bad) loopne cs pusha push jo mov sbb out cmp and ja stos cmp ror add add dec add mov aaa aas mov sbbb popa push or outsb iret arpl add sub cmp int pushf clc push rolb or xor sahf pop add js scas ficom out sbb sub inc icebp out add lock fs andb stos gs sub lcall xchg pop bound dec or incl (bad) aam fldcw popf sahf xchg add lcall xchg cmp add adc mov jle mov pusha das clc xor mov cmpsb std push add leave in add mov sahf fisub xor dec inc dec xchg clc movsl test inc les push mov and cmp cmp int xchg into loope push ret rcrb add adc pop inc mov pop cmp cmp xor dec fwait mov add je adc (bad) sbb inc and in mov orb inc cld dec jno int3 add outsb pop inc pop cmpsl and inc jb jae (bad) je dec xor xor icebp mov pusha xchg (bad) pusha (bad) and or add rolb andb adc movsb mov and fsubs mov push popa or insb movsb sbb jnp and xchg xor mov add popf es pop insb or push lock push sub fidivrl xor inc mov out out cltd enter xor or sbb ds sub dec and jbe dec sbb divl dec imul js inc es cli dec push or or cltd fldcw inc rorb jge bnd pop push inc out pusha cmp cld add push mov xor add add clc nop jmp jbe cmp (bad) xor in mov sub (bad) xor pusha or pusha sub push adc pushf pusha push inc inc orb xchg cmpsb js push fucom or loope mov sbb adc pop push fbstp inc cmp aaa jg xchg pop imul pop add jecxz xchg mov xchg mov push jb add inc jno (bad) in add rolb mov stc xchg repnz insb (bad) mov into in add xchg cmp add sbb cltd lea out call xchg xor sbb add rcrl popf cmp and ljmp dec adc add mov pop push call nop clc add dec push dec dec inc and cld dec push loopne or inc mov mov cmp xchg fsts push mov and cwtl je mov sub mov aad mov cltd push cmpb adc push push add popfw or clc insb out add hlt and sub iret add dec xor inc aad mov test inc push cmp mov dec xchg sbb cmp adc sbb outsb das and sbb cs daa cld jbe test add dec inc cmp mov xor pop sbb or push sbb cmp mov mov xor inc and jns jge (bad) out mov inc and mov cmp nop fbstp stos js xchg je jo sbb cmp out and (bad) das jb jb ret adc insl loop pop hlt mov cwtl mov add aam sbb (bad) mov or jo pop cmc (bad) jo sbb mov rclb cld jae inc mul popa xor and (bad) mov and movsb vsqrtps adc adc sarb js andb push and lahf cmp mov dec or pop shrl mov mov sbb jecxz mov xchg fnop nop insb sbb mov (bad) sbb (bad) adc pop cmp cltd in lahf movsb in test mov sub cmp std mov xchg insb add je dec and sub rolb loop xchg sbb cs sub pushf pop xor mov loop dec ljmp mov pop dec sbb add jecxz into dec inc adc pop aad insb xlat mov xor xchg push or fstl mov mov inc sbb mov roll loope xchg adc fwait push das daa add test pop and stc rcll mov dec addl sub mov jae or cmp and xchg pushf call pop pop sbb movl addr16 repz xlat in ret aad push adc push jge jle add mov sub cwtl lods mov in pop jmp aad fisubl fsub add test add cmp mov repnz cmp cmp push jbe fmuls pop or cld cli xchg and inc fdivs in and in push xchg mov enter adc (bad) or sarb pusha or pop dec push ffree fwait lret dec jns call out add pop cmp jge sbb sub mov or push out inc les pop mov (bad) movsl or mov (bad) int3 sub xchg inc outsl add xchg mov aam sbb xchg xlat push popf arpl cmp xchg dec mov add shrb jecxz clc imul pusha add fidiv test call sbb xchg mov ret sub lock mov pop or pop and push dec out mov mov aad and xorl add enter mov add mov or aaa loopne sbb pop or aad dec mov enter (bad) dec push subb cs int adc fcompl and test and imul (bad) cmp (bad) icebp outsb inc pop sub push rorl (bad) cmp add cwtl stos xlat inc es cmp cld inc arpl test dec cwtl pushf in das xchg mov xor mov loope adc out add xor jno cltd fild jp inc ss mov cmpsb (bad) pop inc nop jo (bad) cmp jecxz cs inc out jae add mov cmp xchg (bad) xor das (bad) cmc in xchg jne jnp add pop adc aam jo shl je mov out ds push fidivl sti xchg add fidiv pushf lods aam and dec dec mov outsb or mov jg adc add jp inc add pop adc xor ret mov dec sbb call sub frstor aam xchg or rcrb pushf sbb arpl or xor (bad) xor cltd sarb inc or (bad) loopne and xor mov or ljmp fwait pop adc movsl mov loopne push xor cmp (bad) repz das cmp xlat clc adc popa dec fwait add sub test or mov add xor mov es add or xchg out xchg push pop and mov xchg push cmp xchg movsb jmp push dec mov dec clc add (bad) je jb in and sub sbb cmp insl inc mov pop push or or call lret mov call out sbb xor aas add cmp push mov and movsb in jge add aas shr pop add push xchg sbb mov push push sub add ja and jae repnz fwait sub stc push ss test ret mov int xor call add lods push pop lret adc and cld popf adc lcall fs xor insl mov xchg or nop inc aad dec and jo jp (bad) xor push test daa mov xor xchg push xchg lea jecxz add mov arpl adc pop and and ja scas or add jnp ds add arpl data16 inc xchg push repz test or cmp enter push cli push lds loope movsb fistpl pop bound push pop or adc mov cld adc lcall (bad) cmp bound or add cs test inc andl leave sub add lcall and sarb mov add jl push test sub es sbb or rorl inc sbb push add ret jge sarl push inc dec adc xor out cmp pop mov notl dec outsb xor sahf (bad) (bad) cli cli repnz cmpsb mov mov ret pop mov data16 add cmp stos xlat ds jg or scas cmp aad add loope xchg orl icebp pop mov arpl cltd sub loop or (bad) fildl dec sahf mov shr push fiaddl shl stc mov inc inc adc ret adc push (bad) mov mov xor or mov hlt or dec fisubrl or in in movsb pop ds imul adc or nop xor jmp je pop mov addl stos or pop test aas mov or adc add sbb int3 lahf sbb add js adc cmp mov sbb enter dec std into dec pusha xor lret mov repnz test add add ret jnp jb mov inc xchg les mov cltd inc and jns jae add test dec xchg push inc adc or bound inc sub loope nop adc je and cmp icebp subl popa dec sbb lcall mov test add ret xchg lods dec clc or js test mov pusha cmpsb sbb adc mov insb aam push hlt adc and xor xor or inc xor jns iret inc cmc fbstp mov mov adc dec sbb nop adc pop int ja dec push pusha lds pop add js ds and pusha mov jnp push sti mov or mov or out sub in push cmp ficoml inc xor or in sbb jge inc mov xchg mov stos cmp (bad) xor pushf or fmul enter sub (bad) (bad) movsl push push push mov adc inc fdivs pusha dec adc lret add insb cmp stos pop cwtl sub xchg push add sub cltd mov sbb cmp inc pop dec int stc sbb sarb mov or add sbb test xchg push sahf ficom jb decb mov or mov jns xchg jb mov mov sub lds dec cs cwtl sub test sub sub sub inc and adc xchg movlps pop stc or push push mov and mov or dec pop fadd loop add inc dec (bad) int3 hlt incl jecxz cmp inc inc in repnz or dec lea push add or and ds push adcb lret lds add or sub int or jmp xchg rcrl nop sub and clc xor sub push xlat sbb test and jge mov fsubs or mov insb mov jno icebp adc lret sub ret or add or and pop cwtl in in add or xor jl and dec adc out lock or enter cmp fiadd sbb add inc push insb cld (bad) out push and sub std sbb sbb mov aam lods cmp (bad) bound xor or enter pop xchg movsl sbb hlt sbb adc outsb call mov cwtl adc cmp (bad) adc mov mov daa and dec sbb fidivr sub and sub add jne lret xor daa fwait mov scas push idivb or outsl fstps icebp push or mov in mov jne jo ret sbb enter das cs inc add clc push mov outsb mov loop cmp push adc ror shlb dec xchg and mov js cmp xlat int3 push jns xor lods dec dec add cmc mov add sti xlat popf or dec xor inc mov adc nop leave clc test pop jp xor rcrl and add in cmpsl ljmp and jne in jo inc mov adc fist mov cmp nopl arpl test sbb cld mov repnz das dec sub sahf les mov fcomps pop add adc cmp push dec dec cld je push (bad) es xor inc outsb (bad) shr cmp cltd adc lcall pusha cli mov (bad) mov or sbbl xchg xchg test mov push add fisttp fcomps sbb xor and daa dec mov addr16 cmp fiaddl adc push lcall adc xchg mov lds jo das or fs pop xchg inc jecxz dec xor and mov mov loopne xor sub dec faddl test push pushf ret adc je inc aad jmp data16 ja in icebp (bad) imul pop lret nop mov inc aam xor mov mov push dec xchg and xor hlt icebp push sbb add and sbbb sbb pop pusha xor add sbb adc and aam push cmp mov inc sbb xlat pop daa dec gs add (bad) push adc pusha aas dec in imul push lods bound mov xor idivl into pusha push rorb rcrb mov adc push fbld jno adc sbb test or iret test lea das xchg test pop cwtl cwtl out inc push sub mov lock xor or insl daa in push aam pusha int3 mov daa push push lock insb adcl (bad) hlt sti rcrl xchg cmp cld adc pop mov into add data16 jne sbb xchg outsl inc xor arpl dec and fmull sbb movsb xor mov mov pop and movsb add push fstpl ficompl cmp aas cmp sbb mov xorb movsl pop cltd dec mov pop fsubs andb pop popa xchg push jl push in add dec out sbb ljmp scas popa outsb and fwait add loopne sbb cmp mov (bad) xchg loope js test mov lock aad leave jno aas cmpsl xchg and fwait mov imul ja imul daa push lods push pushf xchg inc pop rolb mov aaa adc add fcoml mov sbb popa lods adc jnp es cmp pop mov in cmpsl mov in add push sbb cmp push xor dec pop jo cmp and (bad) jo aad in sub xchg les insl dec mov popa in add or out adc insl adc cmp aaa cmp (bad) push call je je js dec push loopne sbb cli jno mov insl mov mov sub clc push popf inc mov fsubs and popa cs inc xor cmp xor mov adc mov shrl dec int inc adc out jae push add mov adc xor into push jmp cld inc add pushf lret adc and out xor and pop in shr pusha dec sub int cmp les arpl (bad) cmp aas in outsl mov dec xchg lods fs sahf call cmp test cmp pop xor fs fidivl pop gs lret jne lock mov push lods in mov xchg inc xor and test pop jo sbb clc mov push sarb push and push ja clc sahf dec lods inc outsl arpl inc sbb leave mov int roll fildll pusha hlt adc and adc pop pop in adc or les jl xchg mov nop add xor mov and cli jmp xchg outsl sar xchg enter add jnp sbb or lods xchg ja and mov stos or ja ja cmp adc push inc mov jmp xchg mov mov inc or mov add and xchg add test loopne inc leave cmp inc std stos jno mov xor sub call sbb (bad) in sbbl adc mov sub fcomps push xor outsb or rolb test cmp aaa push cmp je lcall sti aad fild push push cmp sub dec push aaa lock cmpsb fisubrl pop stos add push xor aas data16 adc cmp and fldcw add jno and or out (bad) in cmp in adc sub shl adc and fwait push dec movsb lret fs aam add xchg pop popf dec inc adc bound cwtl sbb xor inc sub sbb sbbl cmp fcoml lods xchg std inc xchg jl mov aas std mov cld jmp out aam dec sub loope dec rcll cmp xor adc inc test sbb ja pop pop movsb inc jb fsubrl adc jb lods cmp lods cltd loopne add cmp push bound push adc fcoms pusha dec cltd cmp push outsl sbb jg mov iret inc imul (bad) aam popl movl lock pusha scas fsubs add push dec outsb dec mov and test dec je in stc pop pusha aad or subl xor imul inc pop dec sbb fdivrp out or sbb rorb mov pop in adc dec cmp nop mov pop data16 adc jo inc jp xorl nop mov mov adc push add js add jno sbb mov pop xor add (bad) and jns cltd cmp add adc daa fs xchg imul aas or mov pop hlt xchg inc pusha sub inc cmpsb xlat push test test loop dec xor pushf and xchg pop cmp mov inc xor adc adc or adc or mov add xchg mov subl dec adcb into push sbb test inc push jl movsb push push or pop cli insb or (bad) mov js mov xchg (bad) jo xchg cwtl push fs mov mov inc sub cwtl add add xchg sub jle daa sahf adc or loopne dec (bad) int3 dec call xor inc add xor lods arpl cmp fdivl jae in add add aaa pusha ret xchg pop addb dec dec aam addl adc push jmp adc in out hlt sub mov lahf ljmp mov mov and cli inc clc lods or cwtl into or dec in push and aaa in cmp frstor or aaa scas jae leave add dec jp inc std push daa add mov inc add enter getsec arpl adc imul flds mov fs cld movsl adc add mov mov mov in sbb xor lock cmp pushf and add addb fidivl mov pushf xchg pop xchg and push jl push pop insb iret adc (bad) cmp fmuls pop mov arpl mov je add adc mov sub xchg pusha sbb (bad) mov push (bad) xchg cmp mov mov pusha lahf lret push cmp xor and jl and inc shll mov rol jle push testl lods mov clc popa pusha or sbb rcll add adc pop lock xor fbld or and into adc mov mov lods mov dec es push faddl add mov push and inc dec insb push jp pop adc xor fwait pop (bad) or adc cmp or jo lods jnp pushf sub (bad) push das pop push xor add popa aam dec scas push ja push add lds mov xor or xchg dec inc and pop test push test pop lret add cmp mov mov aaa and adc (bad) aam xor gs stos or (bad) mov mov loop or sbb pop rcl push pop dec insb mov daa cmp fcmovu mov cmp les je push fwait mov add stos sub aam pop mov (bad) int xorb js inc rcrb mov enter mov pushf pop lods pop scas gs repz pop rolb imul sub (bad) sbbb mov inc mov jne loop,pt cmp icebp gs or mov add sbb push movsb dec shlb xor pusha push xor and (bad) xchg fimull jo repnz jo mov mov js cmp in insl xor push pop pop or cmp popa add outsb sahf sub rcrl neg arpl daa pusha hlt in and aas inc lds or loope mov mov mov jmp mov jecxz dec aam lods cmp popa push gs nop jo roll mov or (bad) call and mov push sbb inc pushf iret lea pop mov mov es test sub inc add (bad) (bad) add sbb add clc mov insb (bad) outsl xchg push xor loop sub cmp jb xor mov and cmp test loopne push or nop dec aam (bad) fisubr cmp mov dec pop sbb sti xor subl cwtl mov enter inc mov or mov xor int3 cmp dec or ljmp push js (bad) cs push and add out push inc adc fsubs rorb add clc lock pop ficoml imul adc add sub test add ljmp int3 xor pusha and inc push push mov mov adc inc mov repnz xchg dec and cmp jl push rcrl adc mov pop (bad) testb ss cld mov mov faddl dec mov xor adc fsubrl adc insb ja mov pop mov jecxz xchg lods mov pop adc (bad) xlat sub into xchg add (bad) mov xchg add dec js mov std ror adc test fwait push push sbbb iret mov fwait subl leave xor loopne in iret in ss repnz adc cmp push stos cld ret cmp push and aas add or xchg into sub mov add cli or xor fadds sub jo (bad) inc icebp dec push and adc or sahf mov mov repz fcomps insl test call mov xor add add adc cmp cmp rcrl (bad) pop sbb fadds cmp in jns xchg pop inc hlt rclb cmp imul int3 adc lods frstor sbb push or dec add cmp xor lahf sbb pop xor fcomps in inc add and cmp das adc bound add or dec scas test imul cwtl ja pop dec mov lock mov and loopne cmp lock dec stos push mov jne movb mov rcrl push push jge fxch mov xor lods mov add std inc cwtl repnz (bad) ds cmp clc xchg adc in cmp push or in adcl mov or adc sub cwtl pop pushf mov push or clc and pop arpl fcomp sbb adc adc and int dec mov jns imul (bad) xchg fnstenv cmpsl lock mov push xor add aad popf push adc mov lods or push sbb mov popf test jg in mov sahf mov lds mov nop es mov xor mov out xor add fistpl mov xchg pop lock test hlt insb sbb imul or push add jmp pusha mov decb mov sbb mov sub fsubs xor add and fwait cltd out aaa sub or mov jb sbb push dec (bad) xor adc xor enter frstor roll mov xor mov fsubrl sar gs movsb les xchg xor loope or mov fxch scas (bad) lock pusha cmp push inc (bad) mov (bad) icebp cmp xchg sbb out in pop xor or test add jae sub add stc and clc inc insb cltd loopne (bad) mov jbe sbb enter mov stos lods xor aad and leave imul incl mov cmp add push outsl or insb loop dec inc dec icebp push add jno sub xchg or inc xchg xlat int3 data16 mov sbb or push push add jmp movsb cmp insl in sbb es mov lcall addl in dec fmull add popf outsb pop stos (bad) in mov mov (bad) cmp mov mov lcall sbb xchg mov pop insl cmpsl aam xor test scas cmp add test mov imul lock pop cmp add sahf imull push adc mov les sbb xor adc mov arpl pop pop mov pop dec fistpll sbb arpl add pop inc sbb fcompl leave stos pop mov sbb or add mov add dec negb jns out ds mov cwtl mov fmuls jl inc in test push negl addb sub xor rolb mov push mov imul mov rorb add and lods sbb lock push inc shrb adc mov js fdiv mov xor cwtl in test cmp ds push or sub xor cld cmp inc dec lods into fdivrs mov cmp stos iret sub mov push mov push das test jo or pop jnp add pop mov sbb sbb mov pop shl out test mov pop sbb dec in lods add repnz lds call inc jnp scas push push nop (bad) mov test lods shlb sbb faddl sub int3 lock add mov jno cmpsb data16 pop pop fadds adc push adc test xor sbbl fisttp daa xor andb (bad) xor (bad) icebp pop mov xor cmp fdiv xchg clc xchg add int3 nop lahf mov aaa xor push flds mov clc test es push mov xchg pushf add xchg mov cmc sub mov shlb or in sub ret push xor sbb scas sub push (bad) xor fsubs sub mov clc or enter dec dec test cmp push imul lods insl add push push inc or lds cwtl es jl xor adc inc jmp and (bad) inc adc and int cmp mov cwtl rcll pop mov movsl inc cmp lock movsb js jmp outsb (bad) xchg xor xor call push les add inc mov pop xchg bound popa aam fsubrs mov push xor dec lcall xor xchg mov pushf xchg pushf or xchg add nop das enter aam rcr ja mov xor movsl dec (bad) xor test push adc mov addr16 mov js ret xor jmp jno inc test ss jno cmpsb cwtl and in or dec dec (bad) sbb inc xchg lea sbb sub lods mov insl pusha rclb and and (bad) lock mov jnp sbb adc test inc rol mov stos push push adc mov mov pop das xchg add rolb add inc push js add mov popf add jle insb xchg and add jne xor pop adcb mov or jge jns mov std insb lock or cmp or push lock lock jg push test cmp test psraw adc ret es loop cmp or fs pusha adc daa shr clc std push xchg add popf xchg xlat mov jmp lcall push add pop jge and xchg pop (bad) sbb cld js stos and scas push test in adc push mov mov mov push xor pusha shlb lret loopne fisubr add mov pop jmp and jbe aaa adc insl and mov outsb xor sub pop add dec cmpl add pop ja outsb imul sbb jg inc pusha fadds jle push adcb sbb mov or mov add xchg lret dec mov lahf adc mov (bad) xor stos js adc jno push mov movsb in inc iret sbb adc repz clc or jns push xchg pop pop add dec push icebp inc dec xchg sbb mov push imul cmp mov dec mov mov adc int3 int3 (bad) jbe jno fsubrl jne dec dec pop push adc or xor pop lret nop push pop add xchg std mov repz sbb mov sbb cmpsb mov inc lods daa jmp nop icebp adc add xchg pop inc xchg mov lods adc and add lahf (bad) mov add pop jns ds daa cmp cmp scas inc popa aas lods xor xor nop out inc pop cmpsb fsubrs mov in sub fild xchg repnz add js push adc (bad) xor adc inc mov pusha xor pop ss inc cmp lock dec (bad) jae or push push jne aam pop mov add fcoms jecxz sbb sar adc add jnp and (bad) mov xor jo sbb fwait cltd jns and mov adc test stc add sti mov mov sbb test sbb jecxz mov dec js or or dec imul push enter sub out cmpb dec sub jo enter adc pusha aas pop xor pop push and jne jnp add aam stos jle dec push mov (bad) inc out (bad) in jp dec movsl hlt push and xor jnp xchg adc es mov mov test fsubrs leave les xor call or lods push fsts xor mov xor adc lcall in lods das insl inc adc icebp pop sbb call dec aam (bad) into pop imul mov add xor xchg push lret push push out add xchg int3 and clc les test movsl xor scas or adc pop inc lock add mov push pop mov xor ja test test add cwtl mov add gs das push inc outsb and loopne les dec push add dec dec pop xchg pushf and mov inc push aas fsubrs imul cld lods xorb inc jns adc pop mov (bad) mov mov add fsubl pusha push call fisub mov rolw fdivrs sub dec test rcrl scas sub enter mov jnp and lods dec xchg movsb inc xchg fnsave mov rcll ds adc popf sahf xchg jo inc lods pushf xor nop and push and pop fmull xor lods int3 and mov xchg jmp mov cmp dec call dec jne mov push dec sub adc and ss cmp popa outsb sub (bad) leave push xchg les and insb dec inc mov out push xor js pop test push pop pushf or movsb push sub je inc (bad) cmp pop paddsb xchg add ficompl (bad) push sub es lahf xorb pop adc iret cld lret mov mov aaa xorl jl add add mov les or int3 and cmp rcrb pop sbb mov dec repnz es dec pop pop or test sbb sub inc dec and cmp pop movsb xor pop mov stos add xor xchg shrl mov outsb popf add sahf cmp sti add js inc jge clc add dec aaa sub or subl pop dec test adc pop std mov mov cmp add sbbb aam push inc pop mov jnp sub jecxz mov jno test out addr16 in adc dec loopne mov cmpsl jmp rcr pop add mov mov stos frstor and dec jns in dec adc jge jb mov test cmp push sub xor pop lcall and sbb stc ljmp add xchg xchg call jnp add mov js inc or mov xor jmp hlt dec pusha in cmp inc call push inc cld lock sub in sub jmp and rorb (bad) mov inc pop lahf jns pop and xor fistpl push push adc in xor lahf lock cmp mov add mov xor cwtl dec ret cli pusha push incb iret ret stc pop jg add cwtl mov jmp push idivb add cmpl xchg adc pop inc jle inc fadds or mov lods pop pop or cmp cwtl ds sbb xchg push xchg xor dec xor xchg sbb sub push int xchg pop in push sbb or fcomi or mov hlt nop cmp fsubrl cltd sbb les addl aam xchg dec xor test shr stos or mov inc dec clc (bad) sbb push dec rcl or jo jmp pop notb inc jge rcl sahf and sbb shlb adc inc mov ljmp into scas cmp mov push lea add sbb mov push sub in cmp mov jbe nop (bad) mov sbb pop rclb shrl add mov imull (bad) movsl in xor rclb push out adc pop push cld and call xor fadds popa adc aaa add push movsb mov jle cmp cld enter loopne cli xlat xorb mov dec movsl rcrb xchg jbe add sub (bad) enter lods test popf push pop lret ljmp inc add out jmp add enter mov inc sub cmp stc loopne ljmp pop cwtl adc xor cmpsb fisubrl mov pop mov inc jge jae popa add xor jge int3 xchg nop pop pop out pop movsl inc outsl fdivrs in mov movsb dec and xor flds cmp jo roll adc push cmp or js or test pop mov cmp adc mull rcr cmc in and pop mov rolb adc ficompl popf inc jns jl bound int scas adc mov test stos loopne cmpsl (bad) mov cwtl and adc xor pop mov sub add mov lret loopne andb lock sbb dec adcl mov addl jb or dec (bad) adc xor std inc sbb or dec xor jo es in sbbb ss cmp or ds repnz push jle mov mov mov ss or lcall shll adcl sub push sbb lods daa loopne lret mov mov push adc push jb or or fiadd cmp cmp mov pop sbb test adc mov and scas inc (bad) notb inc test and push iret jbe xor stos cmp in and lds add dec fdivrl daa cwtl sub idivb rolb inc js ret mov shl cld or fmuls shrl xchg movsl jl jb and jae es or dec leave push lods fs adc jnp or (bad) and mov test adc jbe sub cld addl hlt (bad) pusha pop push dec mov and jl or pusha fstps (bad) dec add push add add mov enter mov mov or jnp and test fimul push jns sbb add (bad) xor mov hlt mov sahf je out sbb add ret pop pop mov mov faddl nopl negb lock orl inc insb xchg iret cmp dec js add in push jne dec std andb inc ret adc outsl jae call pop ret jge or mov cmpsl mov les or (bad) (bad) fsub pusha add arpl add jle popf aas sbb xor insl scas and mov test test push aas and ss lea dec clc orb dec sub lahf scas lret fdivl mov fmul sbbl add nop pop enter xchg adc cs mov jecxz ret or mov andb adc jns ucomiss fdivr ret test mov mov add mov push dec mov pushf pop pusha cmp xor rcrb or mov (bad) je (bad) sub mov jbe rolb lret loop push orl and cmp push mov dec pop cmp imulb inc repz clc stos or and pop (bad) cmp jecxz or fistpll mov mov hlt and cmp sub hlt out js inc das imul dec add (bad) sbb inc xor dec inc mov or repnz daa mov fsubrp cwtl xor rclb and xchg sub movsb add pop lea stos or out push adc fadds inc pop sub jo es jne push lock and subl jg (bad) dec pop cmp addb test sbb push das push add inc cld in or adc sbb add popa imul (bad) xchg xor push sub nop mov and cmp fwait add mov addb mov sahf add (bad) insl xor ret pop jbe xchg cli sarb in insb mov sbbb add jae add ret sub and cmp call cmp jle cld (bad) jb lds jl ret call mov fisubr lahf mov xor (bad) push inc mov push sub fidivrl fistp add inc xor or or cmp ja and add subb iret jp xor cmp push xchg mov pop xor sub sub jns fldenv pop pop data16 or xorl sbb movsb sbb mov pop or mov xlat mov add xor stos dec push test popl pop (bad) es (bad) (bad) out movsb jo add iret mov mov add je in ds adc orl and pop mov rcl adc (bad) or xchg mov pusha push push cmp dec int sbb andb dec ja dec mov daa jbe ds leave out xchg test jb adc push out mov pusha int test sbb inc imul xlat dec and out adc mov dec ljmp mov fstpl dec sub pusha mov inc movsb stos add rep popa jbe add xorl lock add ds and arpl mov pusha inc fsubrs add (bad) movsl mov adc (bad) repnz dec les sub mov stc rorb call gs cmp inc subb sarl aad inc pop or mov leave adc js push stc cmpsl jbe sarb mov decb add sbb sti loopne pusha sbb outsl jl nop dec push enter gs jmp add hlt cli inc add mov push adc xchg mulb ss into orb or add mov mov lea adc mov xchg call xchg or mov in mov movsb js daa sub or mov and rclb push dec call mov mov rcrl sbb pop sbb fsubrl dec add wrmsr ret cmp pushf fs sub js xchg xchg fisttpl inc adc cltd jns jnp add std nop mov sti rolb scas xor inc sub (bad) (bad) pop push lahf mov stc push xchg dec lret sbb dec iret call mov insl movsl lods add fwait aam sbb sbb sbb das inc push jp xchg push jl in insl mov push and add lds aaa add jb outsb cmpb jmp sbb pushf pop outsb dec push in inc or addr16 fistl or sub andl push andb sub rorb adc adc and loopne sub hlt popa and in popa outsl pusha cmpsl dec fiadd sub mov aad or fwait cmp aas pop out and adc jne mov sbb fstps inc and mov imul dec aam dec mov xchg loope and cmpsl xchg xor movsb cmp pusha jns or mov cmovns in add test movsb hlt repnz pop sbb push loopne cltd ss fistpll mov out add rolb cmp lods ljmp fdivl add jno je pusha daa mov xchg push hlt xorb pop cmpsb dec pop mov mov rcrb sbb test cli lock sahf loopne repnz and ljmp mov mov sub out mov inc call pop neg sub enter cmp mov cwtl adc dec bnd mov dec dec jmp loope inc xor aas fcoml in sbb xor in add push mov dec adc in test out das outsl jb inc lret push jbe ds adc or lock push cs cld cmp subb cmc and fsub sbbb lea je imul cmp fcoms (bad) sub or fcmovnu add sbb mov dec movsl add and out or sub mov mov negl pop enter (bad) cmp pop fcomps cmp xchg jo movsb (bad) xchg jns or jp mov mov js add mov adc daa pop (bad) jl xor iret popa xor out adc jne pop add nop jmp pop cltd loope aaa mov cmp stc jg lea cmp mov push jbe repnz hlt in jmp mov shrl dec pusha xchg ret mov fs or pop sbb adc add adc ss and xchg dec cld or sub sub xchg pop fsubp aam xchg and push adc xchg add cld incl push lock fidivr ja shrb pop pusha sub push and stc dec push dec lret shll adc andl rolb stc pop or iret mov dec sahf sbb add incb and aad fs sub loop adc inc and and cmp test mov les clc insb addb pop dec and es jno pop push xlat mov jns cmp stc test les nop xor (bad) lods add negb adc inc pop sub add xchg cmc paddb push movsl pop test sbb in insl jmp or mov push faddp or xchg jmp inc div (bad) pop jne rcrl cmpsb cs mov mov or xchg fbld shlb cmpsb add sarl imul sub mov jns xchg int3 bound xor push add icebp test and loopne (bad) adc (bad) stos int3 shlb or sub inc mov adc outsb xchg push adc adc adc nop mov gs push insl sbb sub sbb shrb mov sarb ror inc aas sbb outsl or outsl xchg mov je movsb inc mov sbb add aaa fstl or mov (bad) cmp loopne push dec jg pop xchg xor cmp into xchg add xor pop out pop pusha mov (bad) aad (bad) or xchg stos push push sti popf pop faddl hlt pop ret sbb fstpl rorl mov les or sbb mov (bad) mov cmc mov fsubs rorl stos cmp mov faddl movsl jnp jp jge cmp test or icebp xchg ds sub push mov fsubrs xorb sbb mov pop icebp and inc adc mov (bad) ficompl aas lret enter add mov inc imul cmp pop or das adc sarb cwtl clc add movsl push and leave sbb sub js cltd sub jnp daa pop mov in pop (bad) into call aas iret adc xchg mov adc dec fild adc mov xchg push mov add xchg adc add frstor adc sbb or movsl outsb dec inc or adc jae cmp push pop sbb xchg sub shrb jmp jp adc cmp dec inc (bad) or jno push xor xchg mov shl dec mov inc inc fwait mov lea sub xor pusha cmp sbb mov cmpsl cmp dec mov add insl mov dec add fwait xor adc pop movsl or arpl mov aam or push cld pop addb cmp das rep es movsb loop jno ja nop adc and or test mov xor es popf lock add repnz fsubr ss dec daa pop add or repnz test jnp lcall adc inc dec stos mov mov idivl imul jge mov add and dec mov push faddl lods add iret dec pop add pop mov jecxz cwtl mov imul and pop shrl test push iret jo push pop (bad) cmpsb rclb jo js push adc dec or add mov fbstp inc hlt lock mov mov pop mov mov sbb push lods cld inc sbb out subb (bad) dec xchg xchg fs das sub and shrl inc jb neg scas popa pop adc sahf and mov arpl das fsubs pushf bnd mov daa jl (bad) or xor adc mov sub or jno pop adc das jl adc aas ror dec jp and sahf js pop loope pop nop sub inc jg xor je cs dec jmp fsubrs xor xor fisub jge push adc stos outsl lods pop jo or pop arpl and enter sub cmpl fdivl mov (bad) mov lret (bad) xor orb decb das pop mov jae (bad) and lods enter rol stos loop inc imul push bound das mov in add mov mov and popa dec xor sub int inc mov clc push inc js mov rcrb xchg xlat popf xchg xor enter sub adc sbb nop or xchg (bad) fsubr clc sub pusha movsb sub or mov in pusha inc insl and cmp add mov cmp push js mov faddp xor test sub mov add xor xchg sti inc enter dec push in fsub loope or and sbb pop push and pop fisubl dec xor pop fildl and adc popa adc push sub sub adc or cmpsl das ds pop or aad arpl mov xchg mov gs in js das cmp stos pop add dec test lea inc hlt add jno adc dec jns ret and xchg jo jge,pt lock sub or push stc pushf or and in xor cwtl loopne insb leave adc cmpsb into outsl adc loopne pop jp pop out sbb or ret adc sub bound ss movsb sub xor (bad) push cmp xchg or and cmpsl pop aaa daa pop and push sbb adc or sbb fcomps xor ja mov jo and scas ficom push dec cli out mov pop fwait pop imul push popa in inc cli adc xchg dec jae fmuls mov shrb sarb mov ret and fldcw add sub jecxz mov pushf (bad) (bad) adc test jbe push or add ret pop mov add ja inc popf or jp cmpsb (bad) cmp dec inc mov testb icebp gs sub fdivrs or insl fsubrs adc sbb xchg inc or lock inc xchg add or mov scas xor sbb inc adc jb or outsb out movb int3 int roll lcall out sbb jl aam mov dec mov andl sub push cmpsb inc sbb pop xchg movsb mov push jne and dec mov nop popf cltd adc idivl or sbb xchg divb xor fisttp push push jbe xchg xlat cmp inc and rol or and sub xchg fstps nop push jg les lods hlt xchg fdivl scas je out sbb xchg jne mov sbb dec rcr orl mov sub cmp push imul mov xchg adc push int (bad) or sahf mov sbb aad add test adc imul add inc jmp sub xor orb and test jb inc cmp cmc decb rcrb cmp jecxz fmuls aas push loope xchg das dec sar jo add push lds sbb cmp sbb xor xchg sub fsts mov ret jecxz add sub lods hlt les movsl pop pop add popf mov xchg and lods add pop pop and gs xchg push je les aas or scas sbb imulb cmp (bad) roll sbb sbb cld addb pop xor iret mov out xchg adc adc jle in (bad) jo into adc add dec add mov ficoml mov jnp loopne mov stc mov cmp xor xor int int hlt (bad) add test push add nop/reserved dec or adc pop sbb adc xor ss sbb or (bad) (bad) insb xor sbb shrl adc mov push cld test out test fistl aas pop lea aam dec ds popa add int3 lods fild jne add jg (bad) mov faddl xchg adc push fstps lret icebp add call jae and cwtl shlb stos cmc xor push adc pop inc add dec cmp jb nop add (bad) fwait mov push out push sbb movsb insl or enter and fwait push mov dec and and pop mov xor pop jo add notb cmp jbe pusha push mov decl xchg stos bound iret int mov rcl out cld sbb pop or sbb (bad) mov pop or (bad) jg xchg stos push ljmp sub scas aas icebp repnz sbb sbb cwtl mov mov xor lds dec nop pop add enter jbe sub sahf dec inc fcoms xor enter test mov loope adc xchg push adc adc sub inc or pop xor addr16 inc fbld and lahf sbb xor xlat inc dec repnz arpl push pop je sbbl movsb loop jb fsubrl test add cmp roll dec jmp adc mov test add fsubrs (bad) frstor sbbb (bad) xor fimull jae mov xchg and and or add adc out movsb or add xchg inc incl push cmp dec pop mov leave punpcklwd adc popa mov pop adcl push jmp or dec jae nop jge push adc test leave test insb out push test out pop xchg cmpsb add ljmpw lcall mov call (bad) mov and mov sbb pop lods pop jno insb popf aas xor addr16 sub (bad) je jo xchg out xor fbld cmp mov test and or enter adc inc and arpl cmp push (bad) lahf cmpsb cmp adc outsb push shrb add jle (bad) in popa rolb aad push add cmp std sbbb (bad) push pop inc pop addr16 sub xor sbb xchg (bad) dec mov call pusha mov scas add (bad) push mov pop dec sbb lods or ss jo dec inc enter add cmp dec daa je push mov cmp push (bad) xchg pushl lcall rolb cmpsl add dec out lods add pcmpeqb or mov lcall or add sbb or add int fimull push js sti or (bad) je push fmull sbb push jecxz push push xor sbb in test (bad) or dec inc loope pcmpeqw xchg mov sbb or mov add ds jg cltd test sub lds lods inc mov add dec xor lret sub add cmp sbb or leave jae pop add or cmp sbb add adc shrb xlat add (bad) pusha pop adc sbbl repz add mov add push mov dec cmp lahf push adc fimull or rcrl andl jno sbb mov cmp pop xor dec pop test cmp or aam (bad) enter adc dec mov add sbb adc adc faddl adc pop jne mov (bad) adc and add negb outsl xchg pushf enter lock cld loope xor icebp stos jbe add xorl sahf or (bad) xor mov pusha inc cmp popa inc dec cld rcrb faddp mov ljmp adc in adc mov xlat add les cmc mov xor or adc inc je mov stc push sbb cwtl mov adc hlt add idivb ficom mov sbb xchg mov push out (bad) sbb nop ds mov xor mov dec insl gs jge jbe add clc aam outsl mov and push dec push mov add loope mov mov lcall std clc out loope fstl add leave or pushf adc inc add imul inc xor ss pop sbb movsb into push dec imul nop mov jno push xor mov ds add mov cltd lock adc movsl push test pop pop ds stos sahf xor sbb add in leave mov adcb leave popf or rcr rorb cmpl sub inc mov and or sarl hlt popa xchg inc adc and cmp xchg pop push pop pushf lods pop mov fsubrs xor mov jg ljmp add aaa add nop fnstcw sar jmp mov jmp inc scas mov push jg loop mov scas and push and or push test adc pop dec test push pop mov adc xchg push stos movb push shrb test inc lahf cmc ss sub mov mov xor scas loop add sub inc push pushl pop mov push cmc sub inc dec jmp inc jg cmpsb ficoml cmc out xchg jg mov loop xor lcall mov cmpsl rcl sbb sub outsl scas movsb leave or sub jne das icebp jp lcall mov or mov jb dec mov pop pop jmp jb mov (bad) dec stos outsb xor inc xor scas das out std xchg adc into inc push rcrl ja fs rcrl (bad) repnz lret push inc popa das lds fisubr fisubr outsl jmp push or ficompl push jno inc push dec dec sub repnz cmpsb or add in xlat iret cwtl movhlps outsb pop sbb push push divb mov push cld cmp dec or int add repz sub inc out neg push sbb sbb (bad) xor jmp sbb gs movsl enter add mov cltd jns pop add pushf push mov in sti adcl push jmp stos fcoms ds dec stos mov and mov nop call sub push pushf dec or stos out sbb lds std int3 xor mov stc or stos dec sub pop (bad) repz xor cmp ja mov pop jnp dec fs push adc sub and les stos mov pop in stos mov repz xor pop dec int3 pop sti xor nop loope fadds xchg inc movsl pop lds cmp mov sbb sbb lret divb cltd add mov out push push push fwait call add mov push ficoml and adc mov addr16 mov pushf jno adc imull stos loop add lock loop dec hlt pop arpl in cmp imul lcall pusha negb aas dec mov jmp push jl repnz push icebp fnsave mov xor sub fldl2e pop xchg ja das dec cltd jmp sarb cwtl add inc popa jmp adc add push data16 xchg pop sub test sub add lods addr16 mov push (bad) lock cmp das out (bad) mov iret jnp fbld loop pop inc and sub or jmp mov sub and cmp es push sub shl stos cs xor add mov mov ffreep cmpl and dec ret and jge adc mov ret or push pop outsb xor fcomps jnp pop mov rorb and sub jmp mov push jnp je dec insb push leave pop push int mov jmp mov mov lea and aam add pop (bad) adcl or js push pop fiaddl adc js fildl int3 mov imul jl aam jae push dec mov mov daa cmp dec add xor inc adc dec jg jl movsb fbstp addr16 jecxz xor pop push adc mov and dec pop push lds sbb jmp xchg push pop push in mov mov sub pop xor pushl into cmc imul (bad) mov icebp adc or lahf and scas add jg in xor incl ljmp lret pop mov daa inc or jne sbb fsts mov fcompl pushf pop jg test sub (bad) imull mov pop repz (bad) adc outsb adc mov (bad) mov xorb aad pop dec incl gs sub nop cmp jbe mov out pop mov arpl clc adc add stos add xor mov xor push aam add sub cmp pop push dec dec repnz mov stc push roll jmp push stc mov push add sbb notb lods or jg iret lods lods scas leave push push jns js jbe (bad) hlt pop int3 fadds and ret xchg pop xchg dec out pop repnz or mov jo xchg add cmp faddl js pop inc inc gs dec movsl and adc mov xor add xchg dec ret inc stos mov mov push push sub lcall pop and add adc sub xor dec repz cmpb leave pop lods and jns mov (bad) pusha and mov test clc add lea idivb shr icebp add and jmp ret jmp mov and jmp xchg imul into (bad) xor sub ficom push add pop add mov adc xchg and lret pop cld fistp test mov stos es cmp push pop jecxz mov lods mov xlat add mov sbbl repnz shll jae cmp std jp adc daa jne and shl sub push ljmp enter and inc mov addr16 lret dec shrb inc sti bound add or add sahf aas dec jne lret leave in add ljmp in pusha lods in mov loopne mov jle jmp inc jl div aam scas mov jecxz push in adc pop loope enter les dec jb inc sti and in sahf daa les inc adc repz push xchg add rcrb mov adc adc rclb or ficom lods pusha and shrb loopne add push jle jae adc push mov lahf gs test mov dec and sub loopne jl dec outsb mov adc sarb add and push movsl inc dec or and push cmpsb rorb mov mov aam aam add sub (bad) mov sti addr16 outsl or aad jg push pop pushf pusha push rorl mov xor mov jge popa and mov cmp cmp add pop xchg ja loope xchg inc push mov jnp or xor xor add sub cmp jp pop addr16 lods sahf push jl pop stc ja jo out add insl test hlt outsl cmp das js addl add inc dec or test (bad) xor cmp mov pop iret stos cld popf iret icebp cmpsb (bad) jle cmp stos movsl pop pop insb insb add scas hlt mov out push push sti adc dec xchg clc cmp sti bound pusha jnp pop repnz enter dec lods repnz or adc cmp mov sub outsb add and dec out sub push and test aas shr out stos orl mov push adc (bad) pop xchg ja (bad) mov inc push pop jnp shr clc and out pop dec pusha ss xor lods mov or cmp fcmovne icebp cmc xor es mov fcompl gs and jmp jp jae mov or out sub repz jp pop mov jae int3 insl test push stos mov push sub daa or dec jg xchg or mov imul pop negb xchg das ljmp out mov test cs lods data16 mov xchg jno fstpl call lea jmp add jle test jo sti add xchg pusha mov jo aad or ljmp mov in out icebp add lret pop mov stc jge ss jg addr16 aas lods push stc cli push cmp das nop call sbb cmpl test and dec cld add lock push jbe and ja (bad) xlat add imul jmp jmp daa dec add (bad) fs (bad) xchg out stos insb pop (bad) pop mov fs out jg add addb sub sbbb mov mov mov jecxz adc xor cmp cmp call cli push sub push jl aaa xor mov or lret cmc or jp push shr adcl arpl jmp rcll xchg push sbb xor imul pusha push test pop pushf cmp mov inc inc or and cltd sub sbb jp add inc xor sar push push push jg or sbb adc push lret push lods mov push mov sarl in fwait mov mov pop add mov mov out jle or and or or out jg cmpsl rclb and dec cmp (bad) loop movsb mov jmp push pop jmp ja (bad) adc add or pop mov or pop jmp lock sub clc sub mov mov pop sbb jg pop cmpw test push and imul jmp aaa mov inc mov in push mov jle push push mov sbb push lcall ljmp scas cmpsb sbb es adc scas push inc mov mov leave pop enter leave das pop ja push mov cmp xchg add add dec sub xor shrb push cmc xchg sbb pop (bad) into pop je mov movsl adcb mov xchg sbb xchg pop not add push mov jmp or adc jmp cmp insl adc cld mov xlat ja mov sbb inc and out push mov jns out xor or das jmp cmp mov add call add cld xor mov jo das cmpsb adcb inc push ja rcll rclb sub dec popa sub cwtl add lret (bad) fnstenv shrl pop push jge mov lahf stos inc orb add (bad) mov in sub js sub pop xchg jl xchg inc add (bad) mov jl fsubrs (bad) scas div dec out sub push dec in adc out or sbb inc push scas cld sub fcmovu mov leave pop push (bad) push inc xchg and push rorl push ja fmull sub ret outsl (bad) or adc stos adc and in and lock (bad) xchg or xchg or adcb dec add lcall xor sub xlat push popl les jb adc or pop or nop inc add sub lss mov xor ds sbb xor adc xor pop ret enter add ret and add mov adc mov jno sbb loopne adc mov mov call rcrb scas repnz fs popa pop ret enter pop inc push ret adc lock hlt cwtl xchg ja in nop les pusha adc xchg add and mov xor push movsl pop les pusha test sub sbb xchg loop cs or jle mov sub jg jb mov enter pop ret xchg mov mov add cmp in push mov leave mov mov and or pop xchg jle adc (bad) icebp ret mov int3 pcmpgtw dec daa je aaa add movl ljmp xlat nop inc push inc jne iret mov ja add fwait addr16 or insb test mov and es lods sbbw sbb lret stc int and pop jae xor mov xor pop add inc mov add and add push or adc add mov add insl add cld add loope repz popw sub or mov add test mov (bad) nop jp add xor jnp or adc pop inc add jno test jns mov adc xor jnp lods xchg mov out cmp daa or sbb jno xor (bad) jae lahf push rolb mov mov insl xor jmp aas adc jno addl xchg mov mov std cmp lret out xor or movsb movsb sub lock lods call aam or jo mov inc fldl dec jae aad xorb ss lret push pop scas fs push xchg fadds nop add faddl or and (bad) in xor (bad) sbb sub ficomp add int mov xor lret jno test jb add dec insl xchg xchg js push dec hlt outsl outsb mov inc mov lahf cmp enter pop pop out lock cmp or adc test nop sbb aad frstor mov ucomiss and faddl enter push push mov test loope inc pop push adc add sbb add lahf mov push pop call inc call jno inc (bad) adc ja cmp sbb adc mov add pop lret std iret sets (bad) shrl and cmp jle ret imul cmp dec sub mov push in and fcmovne movsb inc push adc ret or je and xchg movsl (bad) call into dec adc test and enter cmpsb xor inc inc adc inc mov add in or xchg and shr cmc xchg aaa lods data16 xchg or fsub addb dec fimull mov nop lret and push or addl fdiv jno sub inc xlat add pop add inc movsl sarl jmp mov punpckhdq mov add sbb cmp mov push (bad) rorb inc mov and mov movsb mov cmp insl push xor mov mov xchg test (bad) and inc sbb sbb dec mov loope push adc mov popa and test loopne sub sar inc xor lret dec rcrl mov lret popa test nop or fstps cmc push mov lret in pop or insl fisttp lock sarl xchg loopne test add dec inc lcall jno push push pop mov cmp jge add decb aad xchg xlat stos imul inc nop or addl push jno ljmp lea mov notb cmovs imul mov mov xorl nop nop jg or push ss push push cld lock mov jno jp push cmpsl lods mov rolb fs xrelease addb jne movsb jp mov in insl push mov add loopne aas sub add mov fiadd movsb inc sub in adc nop add and lcall sub pop fcmovne scas add jbe insl xor call cmp outsl mov sbb stos mov fldl pop pushf insl sti lea ja insb cmp xchg (bad) cwtl imul add and inc lret mov (bad) aam es (bad) add (bad) (bad) dec sbb cwtl test stos outsl test xor dec sbb add inc fmull cmpsb mov and add mov or ror jno pop pusha aam inc mov mov jge pop out and fisttpll ja push or in pop repnz cmp mov (bad) fmulp add xchg cld add cmpl mov lret jle,pn dec andb in xor add mov adc cwtl add cwtl int jge jno xchg mov hlt into and fwait mov or jge xor mov and mov (bad) inc dec int rcl adc jecxz sbbb sti pop jp and sar xlat call cs insl pusha sub add cwtl add adc xor jg adc and hlt inc mov push add or (bad) faddl pop subb ja mov push adc je enter fadds jecxz mov aad dec mov orl pop push test jmp inc mov clc adc mov nop jbe (bad) in ret and cmpb es orl dec fidivl cmp xorl fmulp xor movsb mov test jbe popl std dec mov ds popf lods add punpckldq jns sub xor in mov imulb push js je adc or daa enter data16 mov pop mov and adcb imul sbbb insl push xchg fnstenv jb inc insb test (bad) out mov pop fldl test popf add ret dec dec and xor dec addr16 xor fxch push push push ficompl cmp add je cmp add jo adc inc adc ret adc out push push insl xor (bad) lret cwtl rol test jbe sub test cmpb lahf xor mov sbb fdivrl sbbl pusha jl ss xchg sub shlb enter es adc inc adc in cld or adcl fidivrl mov jecxz lret subb jmp and adc dec jo xor bound int arpl lock stos and daa insl xchg jns adc (bad) cmp loop or in dec pop adc mov je je nop loopne jl or and inc mov inc or jecxz jae pop add xlat or rcr lea mov movsb and int (bad) call adc loopne cmpl add (bad) je scas jns std add cwtl lds test jno add test das add maskmovq divl insl push xchg pushf and pop dec dec nop or dec addl jae lock mov js add sbb out (bad) pop mov and (bad) mov loop,pn incb dec xchg test test jae cmp push (bad) in push lret stos xor cmp pushf in mov hlt xor fdivs in popf lcall cwtl push sbb (bad) fisub pop and adc xchg nop dec jo or mov xor lahf loop push cmp push cmp push adc in lret dec insb push (bad) mov jge addb add and push leave js add outsl adc push or repnz loope imul mov pop mov mov test outsl fs mov je jno jg addl pop or loop or jl pop xorb xor (bad) addr16 icebp (bad) lods fsts pop and addb dec cs xchg pop movsb data16 incb push push cltd push aaa test adc dec inc xchg xor and test push les add and clc push aam js push pop mov shl mov dec nop pop inc jecxz call call inc call jno add push js je loope addl fs stc adc jb imul push cmp dec jbe mov je in rcrb inc mov lods enter xchg frstor inc push jno lcall cld xchg les sbbb dec loopne daa or jno add aad movsb mov push in and dec fmul or or cmp cmp call dec outsb sub arpl test frstor mov pop aas cmp add or test push fbld data16 rclb std dec jp add ret cwtl imul loop,pt dec lret lods adc inc dec enter adc test jae cmp pusha fsub out pop sbb mov cmp bound out mov mov mov add (bad) cwtl insl sub adc sub jbe imul jmp mov cmp pop inc xor or test dec adc push pushf cmp sub xchg add jne (bad) xor jno dec mov pusha test ret aaa adc lret rcl lock and add roll mov sub ret or jle xchg sub cs add int loopne or les jb dec or jge jbe jno or inc inc adc or sahf insl scas mov adc addl xor add or xor cmp cmp cli add xor dec nop nop data16 jp xchg insl or cwtl fdivs sub adc or cltd loopne arpl (bad) pop mov dec pushf or and fnop hlt test pop enter jle xchg dec adc aam sbb test loop (bad) pop pushf dec jecxz test jg and adc leave inc fisttpl jnp mov mov mov jno inc mov or rolb test test clts lods lahf aaa push call (bad) (bad) sub or (bad) nop lea loope pop jg jnp or in cmp mov ds lahf rclb add js je inc add repz push test shl popl popa jl faddl mov push adc xor test lret (bad) hlt xor inc adc js es hlt push pop (bad) pop fwait shl adcl js pop add add pop and or loop adc dec fs int3 cmpb push add cs jo popf or add js jnp jno rcr and in out test adc xchg dec add mov rorb lock jo xor lods out (bad) xchg and mov xor xchg add in addr16 loope clc cmp adc pcmpgtb loopne fldcw cs jb add rol add push xlat xchg inc (bad) jae rcrb mov hlt or mov jno sbb inc jo out pmuludq (bad) out ljmp lahf idivl and adc mov iret pop ljmp stos cmp lock jle add jmp repz push jl ficompl insb pop or sbb int3 adc jns xchg or push add mov add or neg fiadd cmp inc (bad) sbb or out push pop push lret or sbb xadd sti inc (bad) sbb push mov imul or add notb out neg add inc repz (bad) sub sbb jae cld add jb cwtl inc cmp push sbb add popa imul adc dec sub lahf iret inc pop xlat jo test mov jmp or movsl add mov adc and lea inc sbb add pop mov pop nop int3 outsl mov xor test hlt int3 push pop and int3 mov dec add mov lahf adc xchg add pop xchg sub cmp fimull subl xor fs cmp cld pop xlat lds repnz cli cmp adc pop movsb add loop cmp sbb pop adc icebp and add push (bad) repz add cmp pop mov roll mov ss add rcrb sbb xor movsb push xor push and sbb rcll movsb inc lods sub add dec add mov pop iret jnp pusha mov or add pop mov jge add (bad) jecxz fsubl mov jg dec les test dec movsb pop idiv xor (bad) cld sub pop scas and leave stos xor xlat test aad inc push ljmp enter gs adc adc jbe mov daa dec lret inc lods (bad) jb cmp fild and ret repz icebp ljmp add out dec sbb lea or dec insb shlb adc fadds test rolb mov adcl stos lods and inc xor push ds orl fidivrl sbb out jo pop dec fcmovnbe sahf inc jecxz cmp mov mulb push mov or xchg ljmp (bad) or out inc movsb or cwtl xchg orb mov nop add adc mov pop mov fstps outsb rcrb out sbb dec xor bound js in sbb xchg push pop js call or out jp add adc jns (bad) pop mov mov pop hlt cld mov in jmp mov pop pop sarl dec les pop mov cmc call lock (bad) (bad) ret mov xchg movsb mov les push test (bad) sbb mov mov mov scas faddl inc repnz adc pop sbb inc stc popf lods jno cmpsb test faddl in push inc adc adc ficompl les adc divb adc push js and ljmp sbb sahf inc sub sub test xchg mov test cmp jno sbb xor sub in (bad) sub mov shlb ss xchg mov add add addr16 mov cmp cmp inc dec mov (bad) pop ljmp xchg insl push mov (bad) cmp loope inc js loopne push repnz add addr16 ds mov and mov inc es push inc dec rclb js push imul dec jns pop add mov stc jmp fmul mov rolb adc push imulb dec daa call scas jge add push cmp out sarb sub rolb ret adc shlb jl xor mov enter clc cmpsl ljmp jecxz ret sub add insb sbb sar movsb sbb ret call inc int mov rol in adc jo test lahf rcrl sub inc add sub cmpsb or icebp shrb and mov sbb shrl cmp cmp mov cmp jl les popa sbb shrb test dec xchg dec mov subl jno or cltd mov adc call push pmulhuw mov sbb mov adc add or in and mov pusha or insb push mov push inc lret mov push lahf outsb cmp aas cmp add dec popa (bad) mov and add pop pop fwait ljmp add movsb cmp mov movb cld mov cmp add bound xchg jae push mov adc nop std in (bad) fisttp je and (bad) ljmp in (bad) push lahf insl jb xchg sbb adc dec add dec insb ret push xor jge sbb mov push cmp xor inc push insb inc jb mov daa clc dec nop in fist das adc js or sbb push jecxz xor lods or add pusha (bad) fimull add pop add push sub sub cmp push push xchg mov loopne jb or pop enter test aaa jno xchg cmp aas adc (bad) loopne pushl push (bad) sub xchg cmp mov adcl push (bad) popa inc movsb dec (bad) mov jecxz mov xchg aad jl ja aam repnz dec loopne ret mov xchg adc dec or pop out adc test outsl hlt mov cmp movntps inc push movsb and repnz sbb loopne les jno pop mov lret fisttp addr16 iret mov cld int3 fcomp icebp leave fsts clc outsb inc xchg rol dec les xchg dec mov inc dec or add dec add dec aad int3 jns movsb les jl cmpl xchg xchg imul dec inc cmc ret adc cli popa test mov cmp rcrl fcoms out mov xor dec icebp movsl addb nop adc pusha xchg cmp cmp pop push test dec xor or inc adc jp imul ret inc cmc add push dec push adc mov sub or imul mov lret pop jae push push pusha cmp insl rolb and (bad) mov loope xor sub mov enter aas xor mov mov cmp mov cmpsb es testl mov jo push xor xchg add enter pop scas cmc pusha rcrb xorb lea jne push add out jg and insb xor movb xchg cmpb push push push loopne jb dec test lret imul hlt mov pop shrb mov shrb mov sbb sbb and mov inc test (bad) mov out add shld fistl lods jle mov xchg ljmp sbb ljmp inc cmp mov aas mov ljmp orl add sahf mov push rorb add out out sbb xchg xchg pushf add int dec repnz sub rcll mov inc arpl mov push pusha adc (bad) xor movl rolb lret cmp fmull xor xor push ja out add imul xchg jo xor xchg inc int fild arpl push inc mov popa mov es mov cmp push mov dec sbb cmc push imul mov add sub popf dec pop or pop xchg xor jg mov ljmp pop jecxz push cmp sbb or jmp pop sbb (bad) and gs sub mov lret mov pop jae in push test out push fidivrl xchg rorb (bad) mull mov mov adc imul mov mov orl mov nop insl aam and es cwtl xchg pusha pop enter add and dec mov fcmovu jle pop add jnp sbb dec js add pusha adc dec arpl fnstenv adc dec dec mov inc dec out lods and fwait push (bad) loopne xchg fsubl inc or dec in mov or imul jnp or add jne lcall popa (bad) xlat xchg jp aad imulb sbb push hlt sub adc mov or jecxz add test lock je cld fcomps adc dec sbb cmpsb scas cmp mov inc or rclb sbb gs or outsb adc pop mov int3 mov sub cmp cmp cwtl in jmp or dec movd (bad) mov lea icebp cmp popa and mov jns nop adc (bad) cmp mov inc inc fmuls lret cmpb sti mov (bad) xor test pop or lea or cwtl mov cltd icebp test inc lods xor into clc dec pusha dec enter mov push test repz add dec dec fisttpl shlb out dec push lods push inc (bad) loopne mov sbb add pop in push xchg ret dec mov cmp add arpl add es outsl jne sbb sbb or ret xchg cwtl xchg aas xor cwtl in mov mov faddl aam inc pop outsb in cmp jne dec dec or mov and mov jnp or sbb es mov pop (bad) jo adc aad push add in and call lahf (bad) xlat incl sub clc jle pop xchg mov sbb out mov dec (bad) jo mov dec addl fildll add mov xor les mov ret push in test adc inc repnz xchg lock and push lea lahf loopne sbb or jmp sub cmp inc cmp sub mov pop xchg test es push push cmpsl ror lods mov jo mov imul cmp mov out out fiaddl mov daa cmp les (bad) idivb rolb enter jo pop xor call orb icebp cwtl movsb and mov call int3 pop je nop add sahf lahf push cld sbb sbb dec sbb adc popa adc leave stos jl push xchg test mov push ds pop add cmpsb pop add js cmc cwtl test adc push sub int3 std cmpsb mov adc dec mov cmp mov stc jmp add add loop insb roll jne pop daa dec cwtl mov sti subb or add cs mov in addr16 push rcl lahf enter dec mov pusha sbb jl (bad) pop sahf dec dec or cmp and loope clc shlb or mov pop ss and rcrb mov adc cs imul clc ror inc dec dec aas mov mov mov jnp pop xchg js nop xor dec pop mov mov popa xor or insb pop (bad) xor popa and jae push sbb shlb and arpl lret popa and (bad) pushl pusha enter testb xchg jle les jb dec test push pushf or aas dec insb sub mov mov loop add mov push shl enter lret mov imul pop push add mov call xchg xchg sub pop add test xor xor cld daa push inc xchg xor bsr xchg xor xor push and xor add and nop in inc jle add sub fild insb xor ds in inc aaa nop mov lea pushf repnz enter js leave popa xor sub fsubrl inc dec sbbl in sarb (bad) ds add fwait cmp sub dec xchg fmull notb shrb pop add push adc adc js and roll mov adc sbb inc or push cmp xchg and xchg aam ret sub movsb add and addr16 js jl or out xchg push or or fildll sub test in add mov movsb je dec push inc imul inc push cmc mov add xchg cwtl xchg movsl sbb push mov jle xchg or push lds xor or cwtl in add clc push mov cmc and idivb inc movsb test push xchg pop mov popa add out cmp pop jle inc sbb sub xchg call orb daa loope fist add das sbb wrmsr add ja fs or jo mov mov pop add xchg aam xor cmp imul inc inc (bad) jbe or xchg cmp pop sbb inc jns shl in and insb xor xchg inc rcll and push cmp movsb mov sarb xor (bad) and int movsb mov mov faddl add into sti int3 add mov dec inc sahf fcomps fidiv xchg sub imul sbb adc cwtl mov xchg ja mov add mov push ljmp add (bad) sarb pop incb cwtl test iret decl add out fldlg2 mov mov iret add cmp cltd sub lock push mov insl dec and or pop jo pop aas test adcl stc fiaddl fwait imul shlb enter push add mov out xor adc jl push imul cwtl movsl add lahf inc fisttpl sbb or out mov dec mov jns mov loope xor xchg pusha jo mov sti imul loopne mov test pop add lods lahf in or es pop mov clc add mov and lock push rolb addr16 gs and dec and lock ret pop push add stc sub fadds sub xor sbb mov clc shlb push (bad) sbb xchg adc adc loopne xchg jg icebp and sub sub lock jns or add adc jp cmc mov je push rcll cmp or ret xor ja clc sub push dec or mov fiadd cmp jne iret pusha enter cs sarb lcall jb lods lahf mov cmp lcall push sub (bad) xchg add outsl sub rcll mov dec andl xchg push push pop xchg scas hlt orb aam add jmp sti orb mov mov sub and repnz xor add les stos cld mov and mov mov add sub sti rol jecxz pop jbe mov lds ret nop mov mov lock sub push adc sub push test imul xor sar or sbb mov (bad) mov rclb rcrb repnz lret xor loopne mov and add pop add ja jl mov sub and fucomi (bad) xchg rol add xchg dec push inc add inc mov jbe pop xchg adc sbb sub cltd test sub inc rcll jnp int3 or inc int xchg push fstpl cmp stc xor pop stos xchg cmp adc loopne jnp cmp (bad) sbb xchg lret pushl push dec outsl add aam scas add bound stos testl scas or outsb add xchg xor inc gs jl or clc rolb sbb pushf or adc xchg test ficomp cmp add clc pop movsb addb mov or hlt addr16 mov and mov add dec pop (bad) adc imul hlt cmpsb bnd xor lcall stos push xchg mov xor push mov or mov mov jnp jl subb adc xchg mov inc sahf call out and inc sub mov movsl inc fwait (bad) sbb add dec aad dec js aam sbb xchg loopne pmaddwd out push xor lods jo adc or pop je sbb push add stc add shrl (bad) or (bad) sbb dec mov test mov rol in cld jbe mov subb or sbbl in (bad) pop cmp xchg sub add jle ja sbb int negw cmpb arpl jns add out les xor leave xchg fwait mov push dec pop mov and sbb cmc push or sbb inc or jae jl in and aam insb sub dec inc lock ret leave shrb inc and push hlt repz sub dec faddl pop lods cli or int3 pop push inc dec push xor pop jnp adc inc test inc sti cmpb pop sbb imul mov test mov jo push enter sbb pop outsl mov sbb lea in shll jns mov pushf fs pusha add jnp or xchg push add xor clc lods mov cwtl ja test sbb xor mov mov inc outsb je pop ljmp sti adc out mov push add or mov (bad) les pop mov dec sub jnp mov xchg inc sub les imul cld sub arpl jecxz pop jo movsl fistpl add push leave xchg lahf dec xor or cmp inc lea insl jo adc pop out (bad) xor addl fdivrs adc pop inc dec xor pop cmp adc (bad) mov dec add and jl inc inc int3 nop js imul cltd bound or jmp dec js add pop loop sbb in or or imul add adc add (bad) outsl and sbb out push jle orl popf adc push ret inc dec jle add rclb push jae psubusw add jnp add sbb outsb sub fsubrl cmp cmpb popf into nop repnz sub cwtl jbe add and sbb cwtl pop in pushf add ds lcall (bad) stos imul pop lret (bad) or rcll imul pop inc in cmc cmp mov dec insl adc jle and aam push add pop lods addl movsb adc add mov mov jo nop dec inc enter add sbb add rclb popf arpl rolb mov sbb adc mov or mov enter push or cli mov cmpl aaa mov fsubl mov (bad) ror cmpb add out sbb cmp cld push mov aas in mov fcompl ljmp test and push push fisttp and (bad) xlat sbb mov in mov mov xor xor fcoms aas add mov and pop nop push testl push rorb sahf les bound test fiadd sbb in (bad) cwtl push mov cwtl mov or jb or jle xor push sbb imul popf out (bad) xchg test mov and jmp sahf dec addb fdivr adc cmp jo aaa in imul xor fcomps je jno dec shld cmpl repnz arpl or popa adc inc (bad) jnp and insl or test push xorb fstl adc leave (bad) sbb dec std enter roll push loope leave cmp (bad) pop add lahf and aad subb pushf lock pop mov inc loopne sahf dec mov popf test stos jbe rolb aam add jbe loopne jle loopne cmc sub lock jbe cmp pop subb mov jnp mov xchg mov mov decl adc mov mov sub and mov loop push jbe cmpsb jl adc clc pop inc dec pusha fimul inc dec mov loop rcll adc cld dec cli daa mov or inc les lcall out and xchg cmp pushf or mov dec push shl mov mov call cmp frndint mov rclb rclb mov in imul (bad) xor (bad) inc cmpb mov dec jmp mov lods xor int add pop pop pusha push mov or xchg inc jp lock add stos int inc nop in push xchg add adc imul ja cmp cli sbb cmpsl test push test push mov pop jno ret test add mov push mov xchg adcb ror sbb inc repnz movb add sti lods lret nop and stos pop mov lea faddl pushf or hlt pop adc (bad) clc call cmc sub loop mov lahf cmpsl pushf test mov xor jo mov or inc inc lock loop,pt mov ret test mov (bad) xchg jbe adc and pop and add mov pusha xchg stos adc adc push sbb std orl push stos mov mov lock adc pop jecxz push int cmp test mov popl test insl daa jmp in sti sbbb mov mov mov jg adc or fsts adcb mov in pop or mov jp mov push (bad) xchg mov add popa adc out bound jne cmp push aaa xor and popa xchg enter cld fmull leave (bad) mov push jns outsb cs loop lds jb (bad) xchg pop mov cli js adc pop cmp dec push mov pusha pusha in outsb jmp push inc lods shl mov les mov sub dec push or jl or fistpll and xor pop push xchg add xor enter dec add aad inc cmpsl push (bad) clc inc popa dec aad cmp (bad) call pop addr16 jle mov pop push xchg push loopne stos int clc add pusha loope jp mov sbb xchg or sub outsb sbb mov push faddl add xchg or push insl insb pop push mov in fadds jg and pop les push (bad) sbb lret xchg mov imul popa andl int repz xor cmp cmp lods sbb xchg adc sub stos add imul (bad) mov push inc push test mov (bad) cmp movsl in addb ljmp add push lock sub cmpb mov nop pusha jbe add xor adc dec cli fs or dec cs cmp mov aam push pop adc add cmpsl loopne push mov mov adcb insl repnz push cli lret or push cmpsb push add insb lods push dec jge aas push and dec out daa adc mov jge and adc out loopne movsb mov mov cs sub faddp sub add or adcl ret dec push int data16 xor push sbb adc push imull dec xchg mov inc inc cld sbb push call sub add test das data16 push popf repnz lcall add repnz sarl lods pop push mov clc jno and mov add shrl sub push les add jno dec push or sbb fisubl sbb js aam mov shl jmp orb or inc fstpl sub popa adc clc add add test cmpsb or add or or sub test cmpsb fs pushf xchg adc add jns xor pusha imul push (bad) add mov dec arpl cmp cwtl mov stos sbb pop aaa xchg rcrb arpl adc icebp fsubrp add and in mov clc in pop fs sub ljmp leave adc adc jecxz xor adc jbe cmp shl and mov int mov dec and lret push sub add and aad push (bad) dec or pop sub rcr pop xchg fsub pusha pop pop movsb andb or das outsb popa mov int3 ds movsb es mov arpl es mov mov repz and and dec sub int3 dec enter jmp and pop stos lahf sbb (bad) push (bad) loopne cmp nop dec repnz jmp (bad) xor or les mov xor js fdivrs stos add fild push add jle lret repz and push mov cmpsl or ret pop loopne push (bad) loopne sub push mov aad inc andl xchg jbe stc xlat push mov (bad) mov cmp add fdivrl inc fdivr data16 xor add cmp dec les adc lcall fwait fs inc rclb mov mov outsb cmpsl fsubl mov mov inc jns add dec ds (bad) pop mov push decb mov add fs mov adc sbb push mov inc clc or cmpsl push addb xor push adc daa mov add xor fnstcw outsb ds push xchg pusha shlb add mov adc add sbb jne jl sub pop cmp or daa inc xchg (bad) sbb (bad) pushf dec mov js and mov mov iret es out in pop cmpsl xchg sub sub sbb xchg add pop mov mov test call xor lds in test jo jo cmp movsb mov adc cmpsl dec xor add and sub or inc fidivrl inc push add ds inc dec rcrb cwtl idivl pop icebp or fs andb jae and mov fsts jl sub js imul jmp movsb jge call stos add xchg or sbb lret lods add xchg add shrl jb mov add addl cmpb inc and ds pop add js pop xor loop jecxz mov daa push incb xor add not aam sub add clc mov pusha enter add and outsl lea popa les cld enter mov jae inc jle inc in cltd inc adc jno pusha sub pop popa in cmpsl int3 and ret cmp pop dec call or xchg or into in jno mov jp nop add aas xchg and je jp mov xchg mov dec dec and loop dec xor xlat pop mov ds pop int3 cmpl lock out pop pop cmp or (bad) mov push popf inc sbb cmc xor sub mov push xor or cli (bad) aam in jns pop push dec or xor add jo fucomip sbb out adc (bad) jb xchg ljmp sub test ret aas xchg add cld (bad) pusha dec addb test xor mov push jge dec add or fidivr insb cli or call dec pop lods pop rcrb rolb mov and bnd add les jo jo sahf push subb push int icebp add bound mov fdivs sbb movsb sub fadd aas mov mull pop dec xor cmp daa insl add inc pop adc clc hlt xchg adc inc jl mov sti clflush inc ret cmp test add movsb cmp addb or xor hlt shrb arpl adc pop bound js shlb cltd iret leave pop or adc sbb sbb cld fdivrl sub push ret (bad) adc sub sbb loop inc xchg jecxz mov mov dec inc dec xor inc mov dec and xchg orb int3 les mov loopne push icebp xor sbb mov divl adc or xchg pop pop add pop cmc lret mov jb cmp ret pusha mov xchg shl dec dec test jecxz,pt adc xchg or adc inc and rcrl add (bad) mov sti loope,pn rorb in pusha es daa inc in and mov inc add add mov jp clc nop cmpsb js rorb sbb lods pop sub repz (bad) xor lret add rorb dec cmp push je (bad) adc dec das adc scas mov sub add out and pushl sub pop arpl push mov cmp and sbb cld push pop negb or ret xchg out incb pop inc notb mov scas mov xchg sarb ds add mov mov lds add mov std xchg xchg pop mov dec or pop (bad) lock add test add xchg cmpsl xchg fadds imul loopne push xor and sub dec aad lods xor shrb xor mov jp sub sbb pop (bad) or je dec pop inc jno gs xchg in sbb pop fs add test jp add inc sbb xchg cs fcoms (bad) hlt push js mov inc pop cmp fwait ja fmul adc push mov xchg (bad) or pop or inc push mov bound nop jmp adc rcll pop repnz add in sub stc dec shll lock adc ss sbb sub dec nop cwtl add (bad) mov sbb repnz xor out repz outsb jo sti push jp add or xchg lods lret ret adc jno test pop roll push loope sub add int lds enter fwait or pop push sub movsb pop iret push loopne insb lods (bad) daa (bad) mov aaa das movsl loop scas mov addl rorb in arpl sbb mov rolb push mov or mov clc lods call hlt rcll sarb mov les out dec inc push rorb mov stos cmc jo add jb sub (bad) and cld add xchg xchg movsb pop cmpsl mov test add fwait aam cmpsl cmp cltd les cmp mov pop sub faddl xchg cmp sub xor lds in push mov frstor ret adc fnstcw push xchg js jo sbb es push or pop jo,pt mov cltd cmp lcall inc dec and jl cwtl adc jmp push or xor outsb mov xchg dec pop pop lock jbe jl mov inc mov mov mov jg sub push mov sarb push stc arpl or mov dec outsl out (bad) push xchg addb pop aam popf add mov push lahf stc out ficompl mov test dec test repz in (bad) repz in mov icebp outsl repnz les adc in movsl adc in cmpsb or jno,pt data16 jg js orb lds dec or scas nop lds jbe mov dec mov stc fistpl and aaa shr and sbb adc js xchg in lret adc pop mov jbe add jl adc push les out cmp push aad jmp shl add nop test cmp pop jmp nop mov pop insl clc pusha cltd add push es ds add es subb push pop add lahf push insb or mov out jg rclb mov in imul lods mov or jo mov push imul add mov pop jae add adc fwait push test nop sbb add push (bad) lcall fadd jle nop rorb dec je inc inc inc (bad) test shlb inc lods fnsave dec insb cmpsb pusha sub ret (bad) push or mov mov mov aam sbbl stos and test int or mov fs outsl or arpl nop idivb adcb enter push js sub js pusha cmp mov popf xchg jecxz nop mov enter sub jb inc bound jecxz cmp fiadd xlat lahf rclb xchg xchg push les out sub push minps rolb push mov mov arpl dec dec inc mov test int3 cld pop pop add (bad) repnz jl insb (bad) adc push and pop push movsl fs xor xchg mov xchg daa notb xchg jle hlt and jo call pop mov in out and inc pop int pop sub and fstpt andb dec add fildll pop mov xchg daa adc push fwait mov sub xor call lock push and xchg imul in adc sahf lods pop add mov aad sbb stos and int3 and xlat into addl clc cwtl add scas fs sub sbb pushf or test sub popl mov fistpl add out pusha int3 cmp js mov ja mov add push in mov cmp scas cwtl cmp inc dec repnz pop xor in jmp fisubl aam mov hlt loopne cltd adc add lret dec setp ret test loopne les pop test je lahf lea mov (bad) icebp insl das fcomps lock pop icebp sbb inc push mov les jle add add cltd and lcall xlat (bad) sti push fildll mov in or dec push push cmpsb add xchg (bad) test fisubrl mov fsubl push add mov inc add leave mov pusha pop mov adcb lods (bad) fistpl xor inc clc or mov outsb mov mov and push je fs adc out clc pop mov call dec push in nop add fldenv (bad) adc or loope pusha test and or and loop dec int3 int3 dec cltd adc xorl imul adc cltd pusha aad push shr add dec add ljmp mov int3 (bad) pop mov loopne sbb fildll inc push shrb std push notb clc cli fcomps inc movsl (bad) dec pusha cmp testl inc jmp mov nop mov sub jnp mov sbb and sub fimul inc int3 push cmp mov das pop lea movsb fistpl fsubp mov mov inc in or jne ss es mov pusha cmp xor xor push or cmp dec jns addb adc in fnstcw fcmove movsb cmp xor cmp dec jo push add pop sbb dec pop sub xor sbb sar sbb out pop fstl leave aam and push xchg clc sbb add adc (bad) int3 rclb mov icebp sbb push adc subl lock mov lds add xchg jb,pn mov hlt or inc mov (bad) cwtl adc inc and add ret in or outsb pop mov rcll mov scas movl les inc add xchg xor fwait pop scas inc add push cmp mov (bad) out sub loope popf enter test push bound pop ret xor test adc mov sub lods mov sub andl mov fs mov push (bad) and popf mov dec sbb mov lret loopne in mov in pusha sbb fsubrs or sub sbb and jecxz dec pusha or xor add add adc mov add aaa js add sahf in rorl lods clc push sbb repnz ljmp and mov add lret daa push push test lods loop adc add fnstsw and add dec mov add stos outsl push or fcoml and mov mov popa cltd mov inc mov mov xchg fldl pop loop clc sub cmp jo jne pop aam mov adcb add push pop ret jb add aas data16 fidivr or lock nop and orl add int3 and or sub and ss adc cmp mov lret adc pop push inc mov xor cmp xlat mov lahf and jmp or jae push pop cmpsb insb inc jp pop cltd xor sbb jmp dec in ret lods add popf test add popa push or push out sub adc push add push inc mov leave dec rcrl jb dec loopne sub shr fs in enter clc fs test sbb loop (bad) das xchg and scas ja lods idivl jle adc pop (bad) dec mov add cmp pop add pop cmpsb mov stc xor dec add test dec inc (bad) aas fldl xchg adc jno mov push jne lcall shlb js pop lret push mov mov fimull js sbb and imul in and clc jns (bad) cltd loopne xchg test int3 test mov sub mov call lods popa lods cmp pop orb arpl cwtl push push (bad) aam pop jae dec cmp call popf push jns inc sbb cmpsb (bad) xor add or pushf sub inc mov add xchg cmpsl mov (bad) xchg mov sar add sar lahf daa jo icebp movsb add and push test add jo xchg movsl push and sub add test movsl mov xchg daa inc cwtl xor or mov clc sub repz (bad) jmp jmp mov add shrb lret negl fnstcw aad pusha int insl add mov lock adc mov push leave roll and mov mov and movsb jne iret outsb aaa dec push test jp aas addr16 or outsl (bad) mov pop and lret adc add xor pop test mov push cld dec push adc and cli outsb mov xor xor shrb lods cmpsb in dec lock je inc xchg and sub or sbb pop jmp jmp je icebp and leave xchg push and fwait aaa sbb push pop or testl dec inc je mov add mov mov xor and adc mov add leave ss mov and jbe,pn aas or or xchg or jbe in jp inc or test cmp add test lods inc mov add xchg xchg pop jo jo sti aaa aas xchg lock out sbb out rcl cmp add loope mov inc (bad) and pop mov stc mov es jecxz xor enter fsubs cmp mov inc testb sub lods sbb shrb xchg dec sarl push push jae add flds xor jo outsl popa js push pop adc lahf push ret fdivl sub add aad jmp mov roll or mov mov in fwait xchg jo cwtl mov fstl pop mov cld aas or sbb stos sub (bad) dec nop inc adc pop lods repnz add and jecxz clc sub das jo xchg push or or or lret stc mov (bad) xor or jns (bad) mov push xchg test push lods test cmpsl and cwtl pop dec popf into (bad) shlb stc jle sarb clc dec jl add cmp stc in xchg es fnsave mov sub lcall sub cmp push adc jl pop (bad) sub cmc loopne lds jo jo or les lret pop lods cmp enter andl ds mov cmp nop xor daa and (bad) xor cwtl xor add or loopne cmpsl mov (bad) push rcll je aas inc mov xchg lret sub or inc adc adc mov cwtl fnstcw shl push inc cmpsb adc xor add dec out adc sbbl dec (bad) ficoml int3 outsb (bad) lods or daa pusha mov popf pop pusha pop dec mov and inc mov les inc push mov dec add lret inc mov pop add mov cltd add ljmp or leave daa adc sbb ds outsb xor xchg push mov dec add cmpb (bad) lret sahf add jnp inc jge sets inc rolb std je int3 popa cmp jno sub add jbe push lahf cmp js and add scas jno xchg jl cmp sub daa push sub add pop xchg jne sti or add mov cs pushf pushf arpl das rolb dec jg add add sub pushf add lret mov outsb loop test jb adc cmp add mov out mov add out mov add sub or fdivrl cmp rolb or pop icebp fsubs jae in push call mov std adc or lock sub nop mov adc inc das or mov inc mov daa sbb add xor ret xor add shr daa nop enter aam inc jo dec add cmp inc int3 mov pusha cltd adc ret xchg mov push cmp dec mov pusha mov or pop fwait inc cwtl rcrb aad subl xchg adc mov adc lret loop mov in sub sbb cmpsb xchg mov mov stc adc clc (bad) dec sbb xor mov imul test rclb imul push out scas test lret movl add mov fldenv pushf push mov cmp movsb test sub mov sbbl push pop in cwtl inc lahf aas int3 in ds adc xchg loop rcpps mov jb decl pop add xor cwtl addr16 ljmp pop (bad) mov sbb insb cs cld or push inc mov add clc loope add adc addb leave add or rolb popf pop stc lea inc sub (bad) or fnstsw sbb dec add mov xor adc stos les andl adc push pusha in fcmove cmpsb ret pop adc dec movsb pusha push rcl or imul cs popa push push push jnp pop xchg or fwait jno aas push pop jmp fcoms add in mov imul mov jge out (bad) and (bad) aam jno sbb cmp mov scas loop mov aad mov leave cld clc loopne js mov push insb pop mov add lcall or fldcw (bad) cmp test cmpsl nop cs push pop pop insl (bad) lret jae mov loop cmp pop ret jno dec cli add out sub nop push mov in cmp cwtl clc dec iret mov test xchg inc sub sbb and icebp rcll daa jp pop mov outsb (bad) adc lods sub jns orl test push sub push pop xchg fdivrl add cld mov fcmovbe cmp cld add dec aad shlb and outsl in xor jmp sbb insl mov dec mov js rorl mov add cmp mov xlat (bad) mov cmpl pop push leave pop pop mov jg imul mov (bad) xchg jb pop push adcb adc ss clc adc dec add xor pop add jecxz call dec cltd pusha jge mov out jecxz or jb cmp and add add pop inc (bad) fnop or out add jo sar xchg mov sbb add pop adc add repz adc call jo and adcl add jae mov pushl hlt js or jmp push js je mov iret test jo in push add mov add sub pushf add mov fisttp or nop jo bnd mov jbe xor sbb mov lods es push pop push les call add and push jle lea cld nop daa daa lret push mov xchg dec data16 insl pop adc into lcall loopne int3 test inc cmp adc jp rcrb xchg ret fildl or aad out pop stos es push mov jmp and fstpl adc enter int adc test mov and into lock scas mov dec insb int3 xchg inc pusha jecxz mov je xor icebp cmpl or add pop lock add xchg lret (bad) mov mov shlb xchg add dec in cmp push call ja lret xorb (bad) mov mov sub icebp loopne cmpb mov sti or or out insb pop mov mov sbb add inc pop cmp mov jne ror add aad test xor out sub dec btc inc (bad) aam loop lahf adc mov jne dec cmp and idiv mov sbb rcl add (bad) mov adc inc iret mov faddl xlat sub mov int dec adc iret icebp push addb hlt pushf std in pop xchg arpl jmp je mov dec adc pop adc pusha mov stos xchg lods pop add inc inc popa mov and push imul (bad) pop add xor dec repz xor fs add and cld popa or (bad) adcb jmp adc aam inc lods ret push call mov sbb adc int cmp pop xlat inc pop scas or add or fdivrs inc pop mov call jl cli mov xchg hlt (bad) jno sub les pop pop mov lahf xor lret or jecxz and dec out mov repnz or adc mov xchg subl (bad) fdivrs adc and inc insb add or jo stos and xchg (bad) lret divl inc lahf lods jl jnp cld ss aas jl inc test push outsb imul (bad) jne pop sub jl fdivrl inc dec repnz jecxz xor xor (bad) xor add xacquire pop out mov push mov inc mov fisubr inc movsb add or rcl and or movsb orl sub loopne pop mov or js dec pop xchg add (bad) out push fisubr js adc jne stc mov push inc mov mov cltd xchg add lret stos cmp dec mov add insb lock (bad) test dec or xlat jne xor ds in sub int xor mov call cwtl repnz mov and or mov add jo loopne outsl dec sub hlt ret aaa cltd adc and int3 fstl sbb adc mov mov or dec mov and dec push fcoms mov (bad) mov aas hlt xor add hlt lret cmp mov out enter add xor (bad) push mov push into and jbe sbb cmpsl lahf stos xor sbb xor pusha lea add popa push sub or or jne movsl xchg fmul lds out push test (bad) inc sub je cmp xchg mov dec imul or jne movsl fidivl (bad) pop nop daa ss in xchg sub lock into ss xchg push inc shlb add pop sbb dec loopne or adc insl out pop idiv ds inc and xlat add jo cltd mov stc cld add fildl repnz cmp popa je test xor imul dec insb nop jo push add cmp repz push pop add fmul sub rol icebp mov pusha sbb es mov js add mov (bad) xor jl mov (bad) jg test cmp rcrl icebp add add pusha cmp scas fiadd cltd mov push xchg and jge rclb call push add daa or in push add or xchg dec clc lahf sahf cwtl add adc mov inc sbb mov aad adc enter add sarb ja push push fcompl jns add repnz rorl inc lret in push xchg push negl lods test mov cmp inc and xor xor das loop andb lods es adc adc and push (bad) shll inc cwtl (bad) xchg pop add outsl xorl mov arpl dec stos dec test ss mov add mov mov push mov cmp or lcall jbe push jg or or fwait push pop jecxz inc stos dec into lods jg dec mov pop pop lret inc add xor pusha xlat mov movsl adc (bad) enter mov int push mov cmpsl nop loopne (bad) xor mov divb frstor loopne dec or jecxz or add inc xlat lahf shrl inc push aam js lahf add imul data16 or dec jnp insb jmp xor push (bad) pushf js add cmp sbb (bad) and mov aam ret xchg hlt orb adc hlt add xchg pop lods or add jnp mov cmp incb or pop sti push add aas lods mov sub fmull loopne stc mov xchg (bad) pusha sbb movsb fisubrl xor mov or fwait shlb mov mov adc push mov fcompl mov loopne pop and sbb jle mov mov pop dec les xorb popa mov out iret adc stos jg es loopne into mov lds add mov xchg mov add sub cwtl mov daa xlat shrb jae mov add into jno,pn mov pop rorl (bad) sbb or roll xor shll or test mov sbb mov push adc cmc fs or loop fbstp hlt adc ljmp and xlat pushf fs sbbb mov add fwait dec data16 add jle and mov xor add iret mov xchg orb divl mov add daa sbb in add test or outsl add jo add repnz and cmp adc cld movsb mov sbb push jae push cmp sahf lds dec in cltd sub cli (bad) scas xor sub jo jg hlt dec or popa inc sub inc mov cwtl xchg push mov sbb and repnz cmp jnp lgs sub mov punpckhdq xor (bad) dec jnp pop jg arpl jmp js xlat or cmp add lcall popl adcb out mov add pusha into icebp sbb mov icebp gs sub mov cli popa movsb and loope icebp (bad) ja fidiv lods imul test add jp roll cli das xchg or mov push lret sarb ljmp movzwl or add rorl or jmp xor mov in imul push adc pop push inc pop mov sub das mov mov notl cmpsb dec cmp add hlt in (bad) (bad) adc or add cmp and cli sbbb push loop jle scas and mov scas in stos mov loop fnop ljmp push inc in cmp mov (bad) jno outsb (bad) jns inc movsb push mov sti xchg adc xor adc data16 loope adc repnz or push or popa cmp mov movsb (bad) std fcmovb and addl or ret xor jge push call ljmp shr xorb dec push xor push cmpsl mov mov dec shll int3 (bad) pushf lret mov fdiv inc aas push add push cli imul mov out mov ret adc loope adc fwait rcrl jb add and add pop into lret fcmovb mov push aad hlt pop add repz xchg aam stos cmp not inc scas xor add or add sarb jbe push inc add das fdivs pop add xchg mov jne icebp (bad) jg jo daa hlt icebp bound es (bad) iret jns int and fucomi popf shlb bound mov xor cmp xchg and lcall stos jl cmp shrl inc sbb insb test outsb bound lcall test lock sti xchg aam jbe pusha sub lock out popa cwtl sti cwtl loopw sub cmp sbb arpl adc in loopne loopne out mov jmp js clc lcall mov mov fstl hlt cmc test lods lock scas repnz jg movsb (bad) lock pushf cmp add sub adc lock xchg adc pop nop mov in dec sbb add cmpsl push ret pop je cmp lret (bad) sbb mov mov push (bad) scas lret or pop addb push sub add cmpsb add lcall leave (bad) sub mov add dec add insl xchg or jbe inc test out push movsl outsl xor inc es sbb psubusb adc test add loope xorb lret cmp mov (bad) loopne sub add scas stos out mov repnz jg cwtl out add pop cmc in in or repnz test lock push cltd xlat movsb add and mov enter add movl dec pushf mov ja push jbe and and and inc xor push (bad) mov fbld xor push cmpsb sbb sbb repnz and sbb jp inc jno fsubrl cmp inc fsubl xor cmp sti xor iret test loopne (bad) jl push lock movsl add adc xor mov mov je jo pop insl pop mov je xor xor xchg mov inc les ja adc movsb mov loopne inc test xchg or and jb out data16 mov cmpsb test sarb jnp imul dec add in mov or out fildll bound xchg repnz pop inc dec push cmp ja inc pop fs rcrb add mov imul dec jb cmp dec mov jae ret cmp shrb ror add push aad inc movsb ljmp mov fdivrs mov sub push (bad) jb jo add (bad) daa test in adc dec inc mov inc icebp lods clc call lock or adc inc ja inc jb hlt (bad) shrl call cmpsb out sbb ss sub inc sbbb or sub arpl dec outsb sbb inc das xchg es pushf add lds mov js lock jb dec lock int add mov add lds sub cwtl cli add sbb icebp inc xchg hlt rorb out add call xchg xor (bad) adc shll sbb xor inc roll mov and lds adc lcall fs dec mov pop xchg sbb cwtl or xor roll icebp mov stos cmp xor arpl aam imul cmp push sahf (bad) dec push mov mov ja je mov add cmp dec inc and jns je xor xor dec mov cmpsb or fwait out dec mov xlat xor gs cld sbb pusha mov lock xchg push cmp lret cwtl push loop lock xchg cmp add xchg hlt jne xor sub loope inc (bad) or pusha jnp xor inc pop push jecxz add push inc aam enter subb and add mull push jle add push imul les jmp xlat add mov into jnp push std add xchg inc sbb pop mov es mov es xor movsb out sbb xor and add and cmp push ds scas mov cld fistpll cwtl sub pushf sarl sbbb cmpsl insb cmp add push bound push cmc leave ja mov dec jno shlb scas aad jb xor cmp (bad) dec lret mov mov out es jne cld cmp push mov ja test popf shlb ljmp cs aam adc hlt mov test insb jo fdivs sub inc pushf (bad) push push pusha xor inc cmp ret add pop lret jno push data16 fs or (bad) cmp xor stos rorb into sbb lods xchg pop leave stos loopne inc out inc mov pushw lret (bad) sub jge pop shrb adc pop clc daa lock pmullw xchg ret sbb or push data16 cmp cmp js loope sbb mov (bad) push rorb cmp or sub dec lret adc pop cmp je flds (bad) sub rcll or mov and (bad) adc popa cmpsl add pop and push outsl lock or mov cmp jg mov add jmp sbb fnstenv dec cmp scas jp add mov adc cmp dec cwtl or clc scas add nop out push cld cmp xor jno ds insb mov fadds lods aam divb add dec pop or cli repnz pushf push and cmp jle rcrb mov dec inc xchg fimull jb clc push int push shrl jo (bad) faddl and xor (bad) aam into cwtl je movsl or lcall loopne mov sbb test stos mov ljmp and rorl fcoml and cmpsl mov push push (bad) fsub enter mov sub jl aam rorl sbb (bad) fmull mov add dec dec sub hlt add xor jmp cmp fistpll fsubl inc (bad) push pop and sbb in jbe loopne inc adc jle adc leave cld les test popa scas cwtl fiaddl roll inc js call (bad) xor movsl fsubrs addr16 or (bad) lods xor cmp dec hlt and mov mov jle mov jns xchg test jb hlt inc adc inc je ja repnz add xlat jg sub lds mov dec xor movsl hlt inc cmp cmpsb sub pop cmp enter cwtl loop xchg dec mov xchg jl sbb mov mov push adc sbb in cmp jne push add bound xor aas inc imul xchg test pushf sbb jge (bad) les sub mov xor out aaa loop cs stc or dec jo adc pop pop add (bad) lock inc add sub cmpsl sti fcompp movsb (bad) mull cmpsb fsubs sbb mov js and mov (bad) aas nop int3 dec test add das dec xlat movsw fs nop xchg adc es inc add movsb in cltd or sub mov mov mov xchg movsb adc icebp jbe cmp or jo mov and mov add pusha add in fs enter leave push xor sbb xchg (bad) je movsl inc cmp mov das or mov cld rorb push pop pusha mov jp hlt xchg or sub xor pop push sub pop mov push inc imul adc aam loopne pop jecxz add push in adc pop add jno out (bad) repz cltd ret push add lods lock das push xor lods mov adc dec clc data16 (bad) push adc scas jno,pt lds pusha js jbe push (bad) cmp push idivb and popa repnz push lock sub mov int push or das shr jl in clc imul lods test pop enterw imul movsb push sbb mov inc lods pop mov adc (bad) das cltd bound cld movsb scas flds mov lods jo jmp stos mov scas out jle add loopne cmp test repnz in rcll cmp xchg push adc insb add add cld fsts nop lret insb popa (bad) iret lret jns push jne dec mov movsl mov xor int3 push movsl les test xchg les mov scas dec sbb repz cmpsb cmp mov popa sahf data16 cwtl lret and mov xchg jg mov mov adc xchg pop test cwtl in loopne inc mov aam jne cmc jns push js gs sbb xlat leave cmp movsb cmpsl out sbb aaa sub mov and mov fadds jo mov pop sub add cmpsl cmp insl imul test shrl cld fiadd sbb pop adc pop mov or (bad) pop (bad) pop sub es lock cmp (bad) mov and cmp rcrl rcr out popa imul fsubrs xchg mov cmp add hlt jo or xor mov mov shlb cmpsl or fdivrl lods scas and mov mov push in or cmp out rcrl hlt push cmc cmp cmp cmp rorb test push aam mov mov push pop loopne shl orl adc xorb pop push outsl movb cmp mov (bad) (bad) out out pusha xchg nop push mov clc or je dec pusha in shlb push mov mov lock pop movb faddl shll cmp inc aam fs jmp push call xchg inc sbb inc mov scas lds fst stc cmpl fnstenv sbb fs addr16 dec inc sarb aas add xchg mov and jo add xor jg scas jo or (bad) mov pop insl adc xlat inc movsb and repz adc jo push cli xor push mov pop icebp mov xor xor sub add mov rorb add push das mov push es sub pusha xchg inc cmp sub pushf jo or int xchg popf fs cld insb lock test xlat push pop (bad) pop dec int3 adc push xchg mov sbb adc das mov loopne xor or pusha xor pop and lock test push mov ja fisub add adc ds inc int lock push mov dec mov in in cmp jecxz sub or pop and cmp nop ja movsb push scas mov sahf insb mov jle cli or enter movsb mov adcl adc push jo and pop cmc xchg xchg jl and pop ds dec int insb mov (bad) stc cmp mov jnp sub test and rclb sub mov push daa sbb imul mov out sbb out push js (bad) cmp popw jge pop xchg add lea lret push cltd fisubl lcall mov jnp or sarb jne movsb loope call loop jge xor ret lock int3 add andps sbb arpl add xchg insb add lods sbb dec stc xor add aam std rol lret mov (bad) test icebp cmp push dec xchg mov xorl add or adc inc jge in ds mov mov and xchg xchg xlat aam loopne (bad) add dec movsl lds ret ljmp daa in les stos (bad) xor popa add hlt ljmp mov inc movsl add jo mov or mov inc lcall adc cmp ret nop cmc pop scas xor in xchg xchg (bad) mov lret pushf inc popf push cld mov lcall dec je,pn jae repnz out arpl and inc or sbb mov in int3 dec aaa xor add sbb pop jne pop inc inc cmp lcall sbb fdiv les add mov ret es mov out dec xchg js daa push (bad) lcall push fldcw pop push xchg insb mov lods adc fs jns inc mov xchg adc lods dec pusha mov cmpsl mov sub or inc and push test mov sub or (bad) pusha or adc scas je pushf mov pushf pusha fcoms mov xchg add (bad) jae (bad) mov mov sub cmp and dec in mov cmp ljmp mov jp cld movsl xor fwait nop pushf mov pusha rol xchg dec (bad) into test out test fucom mov xchg fstps mov pop mul stos pop pop xor push pop adc ds mov imul rorb ds outsb adc pop mov int3 nop push mov or mov mov cli test jl and cmp rcr jbe pop cli cld pop sub and int3 fbstp pop test jge hlt andb dec mov add call sbb dec and adc mov xor xor adc or mov stos int3 add rorb out popa jo fsubs xchg movsb or fs js sti mov jp call pop pop inc pop jmp and sub jle pop sahf and mov fsubs test lods jl arpl lods push push inc sbb adc aad sbbb ss xchg fs out in jno stos push loopne mov mov jmp mov xchg int in test xchg lret xlat push adc dec push mov cmp inc insb (bad) lock adc test (bad) mov or sbb adc stc xlat mov mov sub mov js pusha cmpsb dec negl int3 cmp out in cmpsl cmp add mov pop lahf outsb movsl das xor jmp mov xchg (bad) add mov add xor daa sbb mov mov das aam xchg ljmp xchg sub das fcompl inc movsb nop call ja cmp ja test push inc mov xchg movsb les mov or (bad) and cmpsb add mov insl je push cltd push mov mov mov add mov mov lret icebp push inc stc xor mov pop xor test jg int3 pushf adc clc cmp cs sub sbb and insb and mov adc fldl2e jle and pop enter xchg adc movsl fisubl scas ljmp cmp inc cmp push mov push outsb mov mov fidivr divl (bad) push mov clc dec xchg movsl mov cmp mov xor stc out push out push mov push sbb jge fs push jecxz jbe and and (bad) xchg xor lock aam icebp aaa mov add jmp das addl sub push or jl xor or add or movb jecxz in hlt and xchg cmc and sbb std jno cmp lcall pop add fwait cmp loopne xchg (bad) jecxz pop push dec push mov jmp cmova and xchg ret jo or mov daa jge pop pushf push sub sbb push inc pop pop lock mov add add in mov pop stos in dec subl or push iret push pop mov into adc andb dec push add xor sbb addb test or push add xor push pop adc out mov mov sub adc and stos test push aad dec movsl aad roll push push mov pop inc add shlb inc jl cmp inc pusha mov pop repz sar pop add dec or pop sbbl sarb inc mov mov (bad) fcom roll das mov adc stos xor sbb sub test push mov fcmovne lret mov fidivrl push pusha pop (bad) ss dec jns aaa mov xchg xor out pop in or sti jp (bad) rorl mov mov xor stos dec test and jge push sub sti cmp push dec pop sti cmp dec mov or jg fstl xchg (bad) jnp dec mov les push jmp jo adc push ljmp mov push pop repnz mov rorl pop cwtl hlt add push add sub xchg or lcall cmp mov pop push push cli movb das mov dec pusha mov inc push cmpsl addr16 push mov sbb hlt push xchg push dec push divb add loope push cltd mov repnz push pop mov idivb xchg jbe rclb mov pop jns jmp pop outsb xor dec movsl cmc cmp adc (bad) mov (bad) movsl or sbb mov xchg call or popa pop sbb mov xlat jg xchg add jo ja or and out jl push in in sbb push in pop daa inc adc mov daa dec cmpb or pop popf jns sub adc sub jb lods adc jl xor (bad) out pop dec push out lret je aam scas call dec scas mov scas fld and pop int3 xchg jge mov push push or sub pop xchg (bad) xchg (bad) and inc and ja xor int fisttp dec shr lret ljmp divl push stos mov add and xchg mov xor in mov sub scas push arpl push mov xor mov repnz jmp pop pop rcr movsl aad out pusha adc push jo mov xchg pop imul cmp repnz sbb mov ja stos nop mov dec jmp or jge leave rcrb flds jg jp adc enter push push (bad) push cwtl xor sub mov mov ffreep jl inc cmp add hlt pop lret mov inc sub scas pushf mov ja cli dec pop scas mov mov (bad) mov fstps jno add sub dec in sti imul jl inc into movswl xchg mulb inc add or xor sti lcall sub xchg dec dec inc add in push sub pop enter jne dec xchg lret inc xrelease insl xchg imul mov jno (bad) jg pop jmp or xchg jbe push xchg cld nop jmp push mov push (bad) es ret jmp pusha push sub sub inc sar ficoml pop inc notb fadd add mov js cltd jp inc adc roll add daa test push lcall insb xor inc jg mov inc pushaw pop push xchg or test jg add pop or orb pushl ficompl shr cs xor popf xchg push fimul aaa inc pop aam aas addr16 and pusha ss rorl movl popf xor or sti popa mov pop jg sbb xchg or loopne aas andl int xor jnp xor lahf xor loope movsb push cmp mov repnz and dec scas fimull xchg mov bound cmp mov nop cmp lea imul or cmp xor jnp jge nop pop adc or add or lcall scas or call mov clc cmp or mov repz jmp rcrl nop (bad) xor insl pusha dec fcompl push pop cli ljmp cmp mov pop pop push pop les add imul ret mov jp shl repz hlt pop pop mov rclb inc add jmp pusha aad rorb cmpsl xor in roll cmp or push sub inc roll sti fsubl insl test fldt mov and ja xchg pop aas mov cli adc push push inc or dec pop push and es push neg xchg sbb mov jge mov int jmp ret cld incb pop push sbb sbb cltd fist pop sbb pop fstps or idivl cmove xchg call cmpsb sub lea or adc xor add push mov repz push ret xor add rolb add fcomi stos mov xchg mov dec jle dec inc test push xchg (bad) (bad) dec or dec xchg ficom out int3 dec out pusha ret pop xor loopne and in pop xchg or jnp dec aas stos shrb mov clc ret out fcmovb jg cmc iret loope inc or push mov stos xor jg cmp mov sahf and push mov jecxz inc push cld loopne push push jmp sbb imul and jbe xor fbstp nop mov outsl sbb idivl fisttpll stos add mov pop add in jmp hlt (bad) out sti xchg je inc mov sbb orb pop js and mov cmp add in sub and adc dec (bad) ljmp xor cs and push data16 dec sub mov dec repz add or or mov push push push mov dec pop pusha arpl data16 out sub or adc pop pop cwtl dec mov push outsl gs jae jle and in xor inc or xor sub fwait sub adc mov xor jno dec inc cli je mov xchg add mov and cmp lea pop add aaa pop pop lods fimul xchg or xor adc lock arpl test pop subl and adc inc and cwtl mov xlat xchg iret mov jecxz adc outsl sub jmp fiadd xor mov mov mov sahf push pop pop push xchg mov nop mov cmp mov mov cmp fs lcall add loope aam add push xor cmp add pop imul icebp pop and rcrl divb testb xchg pop out aas test icebp repnz push cmpsb inc sbbb ljmp pusha jmp jae xchg bound add (bad) and xchg adc mov xchg dec jns dec adc loopne test sbb push sub nop sbb dec mov push xchg sbb dec cld jg roll push jmp pop inc hlt pop push repnz clc dec mov xchg sub inc jmp rcrl sbb sbb cmp dec out add rolb jae (bad) ss push pop shr in inc insl jle imul pop xchg push mov jg sub cld (bad) or add sub dec std aam dec and xor sbb push cmp xchg pop ljmp push push pop push out sahf loop ret jae mov or pop out dec mov fisubrl sbb loope cld fs dec into (bad) mov addl inc jno add jne fsubrl pop pop test inc aad imul dec add sbb imull lods es out add jmp adc aad incb ljmp add lods push add cmpsl add pop push push mov push and jl test cwtl (bad) dec idiv leave movsl xor jbe (bad) xor or popf dec or les test mov int3 adc adc sbb adc and sub pusha sub mov push popf push insb push aas cs mov pop and or mov and and aam dec and push push lret loopne dec or les loop jbe cmc mov rolb outsb jo enter xor mov inc test popa enter lea mul adc inc das in (bad) pusha bound repnz int sub pusha push rcll cmp movsb outsl inc xchg std sbb xchg jne mov mov mov pop mov mov mov (bad) jg std push add add std pop dec sub push jmp int or gs pusha add pop push jne mov push xchg sub inc jmp push sub push and adc roll jns (bad) cmpsl pop sub sub or stos sub dec push add xchg sbb hlt xchg pop mov sub pop fmull icebp (bad) stc test stc movsl lcall or decb adc mov es mov push or sub clc shl fucomip add call mov scas std nop xor dec mov not inc aas pop mov dec push add mov jg arpl repz jae xchg cmpsb cmp mov out add cld add jmp call sub mov add sub mov sub fcmovu xor push jae cmpsl sbb add icebp jmp fist sarl jnp loop add pop push (bad) sub xchg add jmp cmc add insb in add jmp dec fwait cmp jmp aas mov push and and xchg cmp mov rcll sub (bad) dec mov lret stc rclb in xchg push jne jns jle push adc movsb and negl cmp popa mov dec and jg mov inc xlat aas das and jns ja outsb pop jne mov sti adc mov mov pop mov test push aad hlt jnp xchg jle push jb jg dec ret pop fstl xchg shll jmp jle adc int cs out in cmpsl xor cltd data16 in adc pop inc and (bad) popa push push inc outsb add (bad) jmp popf mov sub mov pop push movsb jns rolb push cmpsb inc mov xor aas jmp stos cmc mov jg subb pop pushf cli fmull push add push jno adc enter sub divl cwtl mov sbb xorl xchg inc das pop jmp cmp cmpsl lds test add addb inc ljmpw add and inc mov pop adc xor in (bad) push icebp xchg test ret loop fincstp int3 nop add mov shl push push add sub daa cmp (bad) jb sbb ljmp mov cli adc mov xchg add rorb outsl loop jmp add add push pushaw (bad) stos mov push mov inc pop lret or icebp shll idivb pop addr16 jo popa negl ljmp inc ljmp test sti or aas xor sbb std inc sbb jp mov inc rorl push xchg outsl mov lcall sar dec jae pusha (bad) gs jge xor lret add imul es adc jp (bad) pop mov dec pop stos xchg stc mov jl (bad) mov lods cmp (bad) mov lock mov aad mov orl js lcall sbb (bad) pop pop jbe push inc cmp fist pop pop decb push lock cmpsb cmc add push ljmp icebp push ss (bad) sub not (bad) std in add (bad) jg imul dec jmp loop fnstcw lret xchg sub ret mov test jecxz adc arpl mov push call fs clc dec sub insl jp adc cmp jg pop cs sub push pop xor pop cltd sahf adc cmp outsl cmp or jmp dec or cmp jmp (bad) mov pop pop xchg adc or adc pmaxub push mov jne in leave mov dec push les cmp rorb push mov jo adc rolb cmc pop sub dec pop lea xor mov mov mov jnp into mov aam aam shll mov jmp adc (bad) in adc push pop add lcall jmp mov mov enter xchg sub sbb mov sbb xor loope in push add push mov aaa pop popf fdivl jmp xchg pop imul mov or sub pop (bad) (bad) mov adc test sub push pop add cmc imul push mov call rclb adc fiadd push push pop fbld (bad) mov jg add push xlat test push neg in hlt mov dec btrl add pop dec or loopne (bad) mov jmp insl sub or clc jmp out add imul mov scas dec in outsl mov dec sub andb pop xchg adc das or ja dec cmpsl jmp aaa shr add or sub aas subb inc mov pop mov (bad) or sbb aas xor cmpsb daa lret mov pop mov or fidivrl stos imul xchg sub daa movsl pop cwtl inc je push and cs pop shrb cld nop adc jnp addr16 mov add jge adc or add repnz push popa aad addr16 pusha sbb lret bound sub clc pop add xchg stos out and dec xor add xor andl or sti lea mov ficom jge test loop or push push repnz or sbb mov (bad) sub pop pop jns or add dec das mov sub icebp xor xchg leave adc pusha add or and ret test adc inc sbb jecxz fadds cmp out mov dec (bad) out sub xor jbe lock into sub (bad) mov enter ljmp adc inc mov mov cmp cmp lahf js xchg push mov jne add pop inc xchg stc mov sub psubb lods xor pop sub and pop movl jge fucom add add xor mov add xchg sbb pusha dec sub std jge mov mov add jo push sbb pop call js pusha or adc pushf mov mov inc movsl loop nop jo pusha jmp jb sbb mov inc in cmp test jb insl pusha movsb add mov clc sbb adc sbb push int inc movsb pop aaa adc clc mov in dec add scas inc or enter or inc add xchg loope pop xchg call pushf sub jne push cwtl ds push shr shrl (bad) pop clc fisubrl shll sbb sbb pop adc js (bad) js sbb orl and adc js mov fs mov jns or sbb adc push mov enter inc push fcoms jmp jb call pop loop push lods in inc ficomp add pusha fwait mov mov scas pop js (bad) clc imul popa mov adc and out push sub pop cmp popf inc call fucom mov add ljmp xor orb leave rcrl (bad) aaa mov and mov psubb cwtl push fisubrl cmp lods inc outsb xchg call push adc mov out scas cmc sub js sbb adc push (bad) mov lods aas pusha clc sbb pop or sbb addl nop xlat ja pusha and sbb imul daa nop rcr xchg icebp cld and inc add rep adc (bad) xor inc dec stos in add in nop adc lret fldl or or add cmp mov sbb pop mov mov (bad) inc xchg cltd sub test rorb in sbb xor and add xchg pop inc push dec sub sbb dec jp cmc lea push adcb add jns inc aaa or pusha adc aas sbb js lahf jle add insl xchg push lods (bad) jmp idivb nop and movsl lock sbb cli pusha in jno and cmp adcb stos adc mov xchg stc stos add and add mov adc popa inc lds push xchg addb scas cwtl adc cwtl in adc and lock or fcoms int push cld or clc mov and and dec add jle fimull and adc inc xor addl fwait and jp or sub lea out push jbe sbb add mov into lods les int cli lcall add xchg js mov mov fnstsw aas add pop push jo repnz jp adc and js sahf adc sarb loopne dec mov mov rcrb iret (bad) mov andb dec push xor inc sub mov loopne jb mov add mov data16 cli adc inc add mov js lds push pop in stos mov jno adc cmpsl adc jnp and add testb mov test sbb gs adc test adc adc test fsubs mov cmpsl xchg movsb pop int pushf add pop pop in xor inc adc popf inc rclb rolb stos cmp test dec mov shll adc mov (bad) pop js mov cmpsl pop (bad) in std push mov sbb pop loope and jno and or out mov dec clc lods mov iret adcb ficompl cwtl and sbb fimul js xor xor adc and cltd mov xorl out inc and mov test pop inc nop mov fildl adc cs jne xor sar scas sarl stos scas pop fsubrs add push add sbb (bad) cld fiaddl scas sub lds pop xchg or pop pop cwtl shrb es sbb push mov iret incl pushf adc es adc inc es dec or call push add popf loopne cmc jae sti or add rcrl sub stos inc stc rolb adc sbb mov std jl jle repz nop cmp pop loopne adc inc dec pop and sub mov and mov aaa push jns add mov add dec imul inc pop adc add bound pushf in inc and inc insb or dec jns pop dec lods js cmp aam push push (bad) test dec sub pop adc addl mov push fisubl js or ret adc fmull lods ret imul mov and xchg sti adc push incl test dec movsb jo inc jl pop add mov sub and es addb cld jp sbb andb xor (bad) jne pop jb fmuls arpl sbb xchg push aam in ficomp inc push add es jne inc adc les add push bndldx xchg mov xchg enter inc xchg pop sbb sete add inc sbb push inc and mov repnz lods xchg pusha and xor mov lock dec push js clc les nop inc pop adc xchg push adc ret jecxz push push xchg movsl cmp add push push sbb lahf lods dec or subb adc dec dec in mov subb pop push test pop pop dec es mov xchg push shrb enter call xchg aam scas lods fadds inc addl (bad) xchg ret adc push stc mov (bad) aam pop sarb pop push add push fsubrs ret mov movsb (bad) inc sbbl lret mov add adcb mov add test es mov add jmp int adc iret shrl movsb out push movsl es xchg xchg sub adcb add stos adc dec movsb loope add xchg orb imul and clc (bad) pop call out mov loope dec cmpsb lret dec push add sbb mov clc push js out test or add test ljmp fistl jecxz mov pop pop adc add mov xor and movsb mov cmpsl scas cli mov aas inc pusha dec pushf sbb inc mov add jl or cmp and dec fiaddl cmp repnz adc cld add sub fcoms cmc add sub (bad) dec test adc fsubs sbb (bad) sub aas xorl call addl (bad) sub inc loopne jbe add hlt js dec movb int mov xchg mov push repnz push xlat sbb std lods pop jmp stos fdivrs hlt mov mov mov pop lods push adc loopne test test xchg jo mov adc inc xchg dec ror fcoml insb cmpsb jb dec add sbb js or sbb aad pop lock insb inc lahf and adc push jnp adc loop sub adc pop sarl add cld sbb mov mov sbb es mov mov aas add in jge sbb stos in pop gs add imul add cmp sbb sbb mov jl out jae dec and and hlt push movsb pop cmpb enter movsl or (bad) sbb clc mov lock dec or xchg xchg lea mov push mov mov lret mov mov dec mov je in jns cltd dec cmp test pop mov push adc (bad) xor cwtl add pop or mov clc and lods scas and js pop sub in or add lods call adc add xchg add or cmpsb mov add jo inc dec aam inc ljmp xchg or cmp cmpsl sbb adc xchg or (bad) icebp mov fcomps out push xchg xor or jp xchg cmpsb inc add mov cs aas rolb inc or lods imul add sar cmp mov loopne leave mov jp mov add ds sbb ljmp and dec adc (bad) push cmp or push jg push cwtl lds es lods adc hlt xchg xchg faddl mov sbb mov sti add cmp cmp or xor stos js sub dec sbb pusha cmp push mov mov adc lock ret sub orb cli sbb mov cmpsb lods mov add es cmp and cmp popf push js xor fcoms dec hlt inc and lods out stos pushf out add sbb pop or call movsl xor in popl mov stc mov add loop xchg call mov or adc lock js ficomp or negb add mov adc addb adc cli data16 inc popa jae cmp into (bad) cli inc mov and and add fdivs das je push push sbb orl clc loop imul jnp ret sub leave add mov nop in add push and mov mov outsl cmp rcrb adc cli nop xchg outsl adc cmpl sub lea cmpsl push add jnp jo or (bad) mov mov cli pusha add and mov inc adc cli lock leave add jae mov out (bad) mov push xchg ret push mov or dec aam stos cmpsb jp cmp or test nop and jae mov dec in sahf sbb mov aaa add fwait cld and subl adc and or test pop mov adc aaa xor into sub or adc xorb add or and mov out mov pusha add cmp mov lret out (bad) in push sahf mov jne insl cmp test xlat test inc enter aad inc pushf pop shrb rcr push js rorb mov jnp int popa aaa test add into enter xor dec cwtl test lahf sub sbb ret add fdivrs mov jae jle push jecxz shl call cmp aam xchg add (bad) movsl push rol lret add dec ja xor cltd ret add adc adc sub add mov add jge pusha pop setp aam mov push jns pusha add loop cli mov push imul aas mov nop inc pop or or push adc imul and lock mov out sub notl xchg xor ss insl cmp sub xor pop dec sbb sub mov jmp inc pop ret sub in adc xchg test rdseed aam or das and lods inc lea adc push and sub cmpb gs out orl jmp rorb faddl test in add jae inc fldenv popa jecxz in (bad) repnz or adc and (bad) fcoms and test push insb sbb fiaddl loope std fcoms mov adc and subb enter mov adc dec add and add pop cwtl add hlt and test and es or mov sub testl cmpsb sbb loopne addr16 inc popa inc das mov inc or popa sub imul fdivs and hlt push sti aad jns out adc jle lea sub (bad) add or inc aaa test jg jmp mov les xor pushf dec in or add add shll push mov push sbbl adc push jne and and das mov adc divb and sub gs pop adc cmpb jae mov or ret and xor adc dec or sub add cmp xchg or mov (bad) add aam push sbb inc nop mov push out mov sub cmp push test clc add xor sahf or dec leave out iret mov loopne xchg sarl pusha xchg gs clc pop add or dec sbb int3 cmovg sub inc xor xchg adc add or xor adc add mov add cmp aaa nop add dec popf push adc mov ret cmp nop leave fisttp movsl push das movsb add aaa sub jge xor cmpsl repnz sub bound jae in sub cld inc add mov (bad) mov pusha arpl lods test add pushf movsl or mov dec rcr or and pushf inc jnp cli pop add pop mov lock adc cmpsb jl pushf mov ret or lock adcl sub fs out shlb mov hlt movsl pop jae xchg mov push and int popa ret in lret xor ret jae xchg or and mov xor add mov les je xchg or adc push cmp cwtl cmp or int mov mov pushf loop mov jge mov xor rclb stc call mov mov das sahf rcll cmc cmpl mov or cmp les inc cwtl cmpl notb stos ja in dec out xor jg cmp (bad) lods adc mov adc push popa das lret xor cmp sub lock mov fs sub js rcrb pop mov enter jnp push xor movsl popa add sbb fcompl xor sub push mov fisub out stos pusha int3 es pop es push popa repnz mov xor movsb sub ret mov mov and cmp ret out sub or mov out sbb xchg and and lahf push sbb sub add ds xlat test outsb or mov push push cmp inc or enter lods cmp add les sti sahf mov pushf jo xor mov push xor in and adc bswap push shlb roll dec sub push jne or jne jg and push sub sub aam jle imull repz fiaddl jo stos mov sbbb sub xor loop mov rol sarl dec dec cs cltd add je test inc into add outsl cmp xor out dec popa mov jae pxor mov pop roll jl (bad) leave xchg push adc (bad) hlt loope lods sahf pop imul mov mov fimul add add arpl (bad) shll dec push xchg (bad) mov (bad) xor mov mov test pop push lcall enter cwtl jecxz cmp out inc jns sub inc dec add inc push adc xchg pop add fistpll push les enter mov mov daa add shrb push lods daa jae cmp cmp test xchg or enterw jg sbb cmp and shrb pop dec dec adc enter jl add xchg or mov shll dec xorl sbb test jmp sub jecxz sbb int xor mov imulb cmpsb lcall mov ss jno popf jo add fcmovb (bad) mov lock ljmp loop xchg mov daa mov sbb das dec (bad) xor hlt fs test (bad) jbe mov cmp mov fcoms fucomip inc xor fldl push adc push push and popa inc sahf ss sbb mov xor mov or movsl xchg cmc mov fdiv js sbb lock sub adc or xchg xchg lcall and jbe add fdivrs dec xlat cmp jecxz das test (bad) out adc (bad) jb repnz mov imul cmpsb mov push sub cwtl std (bad) pusha popa push loopne xor jmp xor cmp xchg gs (bad) imul sub bound adc cld or push pop int xchg (bad) jle and outsl inc add cld dec (bad) movsb dec adc inc xchg call ljmp mov xor mov lea mov push inc mov outsl sub adc inc push mov movsb je push cmp mov push test push xchg lods push xchg popa (bad) sbb (bad) loopne test and imul cmp xchg imul adc add mov (bad) xor stos mov fdivrl adc cmp adc xchg aam jnp fcmove rcll or daa aaa (bad) ss and xchg adc or xchg imul (bad) loope das mov ficompl ret sbb loopne jle insl fcoms js push add roll es js lock cmc push fwait cld or (bad) jle adc or pop rolb sbb pop rcll mov push or adc push jle adc lcall outsb cmpsl jae shrb adc psubsb js cltd jmp adc pushf mov notb or test data16 stos pusha cmpsb mov lahf adc in shr movsb fnstenv xchg mov mov push test push inc cltd or sti pop jo imul fisubrl mov xchg push push (bad) out (bad) decl mov sub loope ljmp add mov aam and lahf pop and and out nop xchg ja sbb jns enter or rcr inc in add (bad) pop lods iret mov xlat data16 testl in std ficompl xor pop mov cmpsb sub lahf aam adc out push inc and aam scas add fildl cmp push adc int3 fstps xchg popf xchg push sbb sbb cmp arpl loop mov incb pop andb sbb add dec in fs xor jbe in or mov or add test or cmpsl es lcall fwait adc xchg cmp adc mov subb mov movsl add shll das sub test mov in xchg insl icebp or xchg test dec sub xlat or mov push inc sbb fdivrl and jmp test xchg sbb inc mov addl lock mov fsubrl push sbb cmpsl push aaa push dec aas lds xor je xchg adc add sbb imull int xchg or or pop xor mov pusha jns in xchg sub push enter sub or stos and sub dec jmp adc imul nop sarl ja scas imul pop mov sub inc push pusha (bad) or sub es xor jp lahf adc sbb dec scas cmp fistl pop sub xlat sbb hlt adc mov popa in adc fs fadds insl arpl mov cmp or clc add into jl pop pop inc clc leave sub ljmp add xchg divl jb lcall jg jbe cmp jae int3 mov xor cmpsb xchg faddl (bad) adc std sub cmpl jmp mov adc xchg lcall popa mov and add shll and outsb cmp xchg or xchg lret inc dec in daa cmpsl leave add (bad) or mov cmp adcl outsl fbstp cmp loopne outsb (bad) lret cwtl xchg add push jecxz mov out and xor pop pushf clc jnp fiaddl sbbb xchg mov jo push inc pop sbb sub sub push xchg out mov xor mov add dec xor mov pusha (bad) pushf test stc cwtl jl pop push fldenv cmp hlt sti sub int3 jmp call js xchg pop inc push add add gs (bad) dec sbbl push pusha mov mov loope adc or loop xor (bad) ss loopne arpl cmp sub sub ret mov mov out inc sub mov sub fs daa lret dec icebp push sbb push lea test loope roll or pop (bad) xor maxps inc mov adc sub (bad) sub js add gs or mov int in and jne xchg leave adc xchg adc rclb les dec sub mov lods lret sub and push (bad) mov das sub add in add int3 and cwtl mov mul fs lds repnz aaa loopne (bad) insl or cmp mov bound add sbbb adc into push in movsb repnz fisttpl add fadds or cmpsl popf push into xchg adc xor addl incl (bad) mov (bad) push sbb in mov sbb sbb xor shl mov mov test fcom leave xor adc xchg addr16 sbb sbbl mov les leave popa cmp shrl mov mov jecxz push push roll ljmp cmp jb pop fistpl xor inc mov (bad) lret mov rorl test test and dec sub ret inc mov pop gs scas das repz pop shr movsl test add jmp js loopne sub pop aaa push or je es sub mov inc xchg xor pop mov scas mov add xchg cwtl or xchg fldcw mov add shl lret add push pop add mov mov adc movsl insl xor loope xchg cmp sbb cmp push dec xlat call mov rcl gs movsb sbb pop loop mov fmul push mov push mov out mov xor pop dec subl adc addb xor fldt and xchg xlat mov mov pusha mov cwtl mov jecxz out repnz push xor sub fcmovne jle sub scas add mov aaa iret sub push mov xchg and std js jl push test inc add int hlt add js dec (bad) dec scas adcl mov jmp add sbb rol xchg js xor cwtl cmpl adc por cld mov adc cwtl xchg shrl adc xor lods (bad) cmp mov mov jmp icebp inc sbb (bad) mov inc xchg add push test push pop sbb pop cltd fnstsw bound sbb dec add xchg arpl sub cwtl pop mov push cmp dec addl in cs mov pop sub pusha inc sahf ljmp or shlb out loope adc sub stos loopne mov add out mov movsl dec cmpsb add jmp mov insb ret cmovp jmp push inc hlt sbb sahf mov into cmp pop int loopne mov mov (bad) test mov push cmp jne repz jns add mov xchg dec sti in push cwtl pop inc pushf in rorl test xlat xor cld mov fwait (bad) dec test es adc add adc fcmovnb mov adc adc repnz aam mov push sbb pmulhuw mov or popf roll lds sub add xor mov nop int3 push mov nop test jp adcl aam and or sub xor pop adc jmp scas andb cwtl sub or xchg das cmp sub inc cwtl cmp xor or xor repz push sbb pop jle dec gs xorb add mov je xor test mov adc ror (bad) mov lds je add mov arpl jns aaa stc cmp inc test mov jno hlt push aaa adc lcall or jecxz out je adcl adc cmp enter out (bad) xor sbb leave jg addl xor ljmp arpl je les fisubl test inc leave sbb or jo and fcoms loop and int3 sub dec sub out das sub dec movsbl insl aas mov pop adc or repz jae push lock mov daa hlt lds push shlb in mov sub or sbbl mov or cmp mov jl xchg sub sub or sbb notb mov dec add mov jno cltd jo and sub ret inc xor cs sbb xchg add push in mov dec pop out jl data16 aaa (bad) xchg mov cmp cmp add jnp in fisub xor loopne pusha out dec hlt inc xchg jne add and or fdivrs cmp pushf or adc lock imul fisttpl add test roll pop xlat add lret mov dec cmp scas jb and push sti int3 mov adc sarl loope adc mov mov sub das mov adc (bad) inc and xor cmp add dec jno insl emms xor push or mov xor push add loopne ret lock inc or inc xchg or mov jmp add xchg ret out inc cmp inc or out test mov add (bad) mov dec or out sarl inc lock fbld sub xchg pop sarw out xor out jl and in lahf test movsb test aas das js bound adc fs (bad) sub and mov test fwait into add add data16 icebp mov xor (bad) mov xor (bad) stos or test xor mov add xchg ds divb ss test xor pop adc cltd mov rorb loop inc mov pop jo sbb xchg dec or jecxz movsb cmovnp in cmp loope lea push fnstsw in mov jo pop sarl imul fisubrl push mov xor into sbb cwtl mov repnz in add pop mov popa cltd mov add icebp lahf cs mov jo mov inc test fdivrl sub inc and sahf divl cmp mov (bad) stc aas pop insb push mov aaa pcmpeqb loopne sbb loope mov add xorl pop mov pop es add sbb les push lahf test loop mov cmp add cmp inc inc xor loop mov dec mov push lock or out mov or fisubl lds mov mov mov cmpb push stos test mov cwtl adc sub xchg lds inc adc pop add adc sahf and sbb inc push fldenv dec mov fs or sub js nop call test adc mov jo and mov rolb cli mov test inc dec lock je push adc mov js arpl adc movsb cmp mov and sti rol mov enter xor pop (bad) adc mov dec popf cmp jns add scas sbb sub add and shl test add adc xor xor sbb cmpsb es call add insb shlb paddusb mov jl negl mov xchg sub dec enter adc jl cmp sbbb das dec xchg mov (bad) aad add movsb sub jae movsl cmp test out les pop inc xchg xchg push jmp push loopne sub sarl lret lcall push out nop movsb loope adc cmp sbb lock stos mov fs sub and cwtl push mov cmpsb sub lds or and cld pop pop mov add mov sub mov add xor fwait test sub push into mov nopl jae push in rcr add pop sbb jnp xchg add adc ret fmul adc loop (bad) push add enter fisub rol jno pop ror dec inc adc pop add fs stos les jbe stos and pop lret push pop adc lret fisub bound fs xor add pop sbb and sub or and (bad) cltd add lock mov cmp hlt add divb xor add mov mov loopne xchg andl adc and aas or or push adc pop clc jne ss push jp es rdtsc cltd pop addl sbb xor fmuls sbb lret fistpl adcb inc push sbb jg add sbb or and idiv hlt test fsubs rolb lods pop (bad) inc mov (bad) jmp addl jge lret sahf pop sub mov data16 adc xchg test add sbb cli inc cmp mov xchg push add cmp loopne mov jae dec test adc push pop lret xchg add push outsl sbb xchg cwtl icebp dec mov and pop or xor fcmovnbe out mov adc popa mov dec xor rolb sar cmp int3 cmp sbb xchg je jg cwtl ds cmp ss fwait rorb mov cmp pop pusha push inc pop mov pusha int3 pop add decb xor xchg insb lret and adc addl cmp nop xor test push ret mov cmovp inc push test fs add and cmp cs cltd in push ret or jl and (bad) in iret nop adc pop inc les enter mov cmp inc inc xchg imulb pop repnz jno andb lock add xchg sbbl sbb push out fs cwtl addl sbb call cli xor test insb int3 mov loop xor out or or and xor mov pop cld add adc test rcrl subl jmp in lret cld push mov xchg pop aaa scas ds dec loope jae loope aas cld test xchg inc dec mov lods testl (bad) ss loop enter add add add push xchg add test add in cmp movsb cld fidivrl sbb out xchg test push shrl in cld xor aaa stos add loope jp or add sub mov jecxz mov adc (bad) xor and add psllw push inc pop std dec push inc pusha lea ret xor fisubr (bad) cmp push add test push push rorb test pop cmp out sub xor leave rclb (bad) int lock dec inc sbb sbb loope in push call nop out (bad) popa xchg mov cmp xor mov add cmp call arpl or push out jo xchg push loope adc xor std test mov add inc mov shlb ss xor xchg mov mov les push jb mov xorps add pop es sbb insl add faddl pop (bad) xor jl rcll call xor push imul xchg mov inc sbb sahf or stc adc sub push mov jns push push scas add insl pop xchg test jecxz adc jp loope jg jl sbb ret cmpb dec pop sbb test add cmp jno cmp imul in pop sbb into out and adc push repnz push add add movsb jns xchg inc cmp jge jno pusha arpl fstpl and enter inc mov cwtl push imul push add xchg add (bad) sti cmp jmp mov cltd jne jo movsl mov adc pop rorb clc aas pop jno adc add push and mov inc jbe rolb jge iret ds pop add in in adc test mov int3 in sbb fild push mov lret cmp add aad scas mov js popa pop push jns in lods orl (bad) xchg ret stos arpl rcll xor or out add xlat sarl (bad) gs sbb add add xchg mov lock scas mov jl test in inc in add mov inc cmp insl in fcoms fmuls xor cmp test and add jo jecxz in fimul and dec imul adc push add jb dec test fnstenv pusha mov std rolb xchg sub fucom jno mov es adc adc inc out and xor sbb adc (bad) imul (bad) xor cwtl mov mov mov call mov sbb xchg cmp pop lcall test mov (bad) mov or loopne adc add outsl into jge xor mov mov xor or test sbb loop pop cmp loopne rolb pusha xor (bad) enter pop dec add ja das jne loope cwtl add out jl ds pop jns mov iret sbb push test push repnz cmp adc mov xor (bad) movsl sbb add sub mov jmp (bad) cmp mov out push adc popa pusha mov mov jmp xor and test (bad) cmp inc or adc adcb inc arpl fld or sbb test dec cwtl mov inc add lret jp test mov js sbb add adc inc add rolb test jmp pop je push pushf movsl mov xchg (bad) xor mov xor push mov rcrb sbb inc sbb ds paddusw call mov in cmp arpl cs dec sahf push and inc lock aaa add test insb mov in sarl fs add jo test dec adc sub mov call in and mov xor or push loopne and and into push and pop mov add pushf nop and test aad enter push mov jnp and or pop loopne fldcw test test cmp mov loopne jo pop mov cli in add test lock (bad) jecxz pop faddp scas lods or adc add (bad) mov loopne bound mov cmp xor in call nop mov in (bad) or sub add inc mov (bad) in mov jg add mov xor clc and ret pop add es mov adc sbb les xor adc out lods inc mov xor mov cmp pop cmp out and add outsl and mov sti dec lods lods lcall enter xor xor mov nop cmp adc pop inc mov mov add mov mov int3 dec mov xor icebp stc loopne adc push and mov pop add add int3 or adc mov sub add rclb test fnstsw dec dec cmp mov cwtl shr in mov loopne sub add cmpsb pop arpl inc sbb pop mov rorb mov cwtl mov dec insb or hlt adc adc call iret push inc push or inc push pusha sti es cmp add test or shrb insl inc push (bad) fadds rorb push cmp clc sub adc in fs (bad) in mov dec adcb mov lea push and push dec mov (bad) mov jg inc leave mov test add jecxz push insb jge add loopne movsl xchg aad or add mov adc jge mov jns loopne dec js adc jle repz test in (bad) jb dec mov sbbb or inc aas rclb fs cmp pop xor or and mov mov lcall sahf and jl sbb xor push xchg mov dec test sarb xor out push lcall or jl xorb jnp out repz (bad) inc jp lret mov inc divl add push add jne adc sub imul sub jl loopne movsb cld sub pushl mov mov add xor or out addr16 cmp fs (bad) mov xor jecxz test mov adc pop add or sbb pop jmp out inc sbb sub jnp rorl mov pushf push xor sub pop xchg jno imul xor pop xor mov fistpl ss cs add fiaddl les xchg push movsl push pushfw add add rorb cmp out dec dec add xchg mov push outsl (bad) or dec jmp cmp jecxz dec mov nop pushf loopne jb js mov push and mov aaa mov dec and out jl ficoml adc data16 xchg mov nop cmp or scas orb xchg jbe cmp add movb xchg mov gs adc addb mov jbe or loopne mov add clc or scas mov jno pop popl jge xor dec adc adc xchg fistl idivl mov es xor ss or adcl movsb aas sub pusha jp jns mov out fistp mov enter lock push (bad) and add imul mov pop dec fchs xor adc xor or mul test rol push or push fdivrl add mov xchg mov mov movsb or mov lret jl xlat mov jns jo rorb lds sub loopne sub cmp test outsl push mov mov loopne and push pop push xchg lock jno loope adc into add jmp pop aam adc add rcl es je jmp loope jl add ja,pt repnz test rcrb dec rcll subb mov pop mov fs inc neg int mov mov sub fisubl mov fadd add xor cli or push sub (bad) js inc push push jae inc or xor cmp aad loope xchg mov nop and lret cltd inc dec lock int adc (bad) sub add loopne or push and jl packssdw lock mov cmovo cmc shlb lods movsb daa lock adc add sbb inc les add rolb mov mov push fistpl xorl cwtl shrb cmp test divl adc int3 add cmp dec outsl fcmovbe add sbb jecxz adc jge loopne lea mov adc ficomp and movsb fistp xchg mov int add int3 rolb (bad) xor sub faddp xchg cwtl add inc pop mov enter cmp sarb pop push outsl addl orl aad inc enter push and push shlb sbb xchg pop mov cld dec jo mov rolb dec cltd out stc insl mov sbb inc (bad) mov mov test lods push js out add cwtl push shlb add pop std and cmp pop insb icebp sub add xor add cwtl sub hlt add add (bad) dec in mov add lods jne or rcrl cmc lret adc mov add rclb or add (bad) add addb aaa dec clc lds adc gs lcall cmp int3 mov push dec add movsb adc add out lds das xchg ror xchg pop xor xchg sbb or lahf mov fist pusha fimul xor mov fsubs test dec add xlat jne xor bound jno dec inc mov mov pop in pushf imul cltd push jno mov scas test imul ja int pop hlt dec pop std inc pusha cmp adc add loopne (bad) fs fcoms ltr les or xchg adc mov int3 add jmp in add fstpl lahf add adc and loopne add scas inc sbb (bad) in mov dec loope pop and icebp add pop pop fsts and adcl les mov std daa nop push fisubl sub xor inc mov cld ret push push push pop pop shr lock sbb mov dec rcr iret xor or inc pop add xor cmc sub xchg sub les sbb fxch inc nop pop adc push inc imul dec dec cld lods sbb add and adc negb cltd addb scas addr16 fcompl cli cmc pushf adc push or popf sub or inc sub push clc dec push nop leave nop adc mov jecxz cmp or push adc mov orb ret fistp (bad) pop ds add add dec or dec lock xor je xor lds adc arpl jns sub mov adc push jo mov jbe data16 pop cmpsl leave or jb sbb xchg test repz dec test or add test adc adcl aas lcall adc icebp loop dec rcrl fldenv or adc int3 loopne fmull dec shll aam rclb mov push add push xchg add cltd inc jo xchg pop sbb loope and xchg icebp mov inc sub dec adc sub outsl dec in xchg jmp fs (bad) (bad) imul fidiv jns shlb (bad) adc fsubs mov sub fild jno add aas pop jmp stc mov jne cmp add jg in mov jecxz rolb lods jmp or lcall in stc push nop xchg je js loopne jnp dec (bad) in xchg inc movsb or push mov (bad) rcll cwtl adc lock inc pusha sub hlt adc or push or sti add pop lods push add pushf aas push nop dec add fcmovu call imul push xchg aam call xchg jge or xchg push dec out lds add in xor ja mov xchg sbb dec loope js xor dec adc adcb das mov (bad) jne adc mov adc (bad) loop push iret sub ret add cmpsl sahf xchg cwtl add and mov orl jno dec je inc hlt and or inc mov stos cmp xchg fwait dec mov cmp nop hlt hlt cmc addb xor (bad) icebp imul mov sbb adc and adc movb pop sbb jo testl or inc xor jle imul in nop or aas inc add dec loop add mov stc std mov xchg and daa push (bad) insl mov and or addb scas sub push and push pop add sbb jbe movsb dec add inc jecxz or pop or sub movsl fidivl add cwtl adc mov pop add cmp stos cmpsl push fsub and lods xor cmpl inc in push in mov pusha mov out xchg push dec (bad) mov daa stos les imul mov jnp nop in xchg mov gs scas xor cmp pop inc sbb sub in enter xor pop cmc jl loope mov lds sub lds enter loop or inc or push xor mov or sbb movsl mov loop cwtl nop add or mov sub xchg sbb (bad) jge push push cmp aas fcmove dec inc cwtl gs rorl mov sub call sbb adc jmp sub jae fwait and xor add dec and sub add mov pop (bad) mov jp ret (bad) call xchg icebp adc stos fs dec fninit je push mov les fmulp rcl sub sahf push add add aad sbbl jae rolb test add jge xchg std ljmp push lea pop inc add bound aam popf test (bad) fs test dec test mov outsl mov adc pushf fs jecxz mov or and cmpb sbb out mov mov ret (bad) mov and sub xor jo inc dec cmc pop inc cmp les mov mov shl (bad) int3 int3 movsb shl cmc add pusha stos or lock mov inc fcoms outsl (bad) or or loopne add xor jae cmp (bad) push sub xchg pop imul push inc ds xorl das iret or stc pop mov mov les add iret lret clc mov (bad) jno hlt fldcw push shlb lea mov xor mov push js (bad) add mov adc mov pop cmp jmp rclb sub (bad) sbb sub pusha js sbb pop push fildl inc movsb gs xchg je cmpb dec and dec adc pusha test push neg or xchg cwtl jo or or inc ds sti pop mov rorb repnz mov movq cmp or and in sarl es fsubl aam test aas pop je mov sub cwtl adc add pop scas inc jne inc pushf movsb lods imul xchg jmp inc nop jle or and addb adc or lock add arpl xchg push push icebp or int3 push jle mov add mov idivb inc loop ljmp cltd push les and inc or mov js (bad) or push or mov nop xchg dec xorb jl (bad) and (bad) push push jo push push or lret or nop push lods push xchg fwait mov cltd xchg and mov add ret xor daa pop mov scas sub lods sbbb cltd nop cmp (bad) mov add xor call xor fs mov jmp fs sbb jb cmp sarb dec out rclb inc flds mov adc inc cmp out (bad) jns nop lds inc adc test add cmpsb or jmp les cwtl adc dec hlt insb in xor or aad xchg (bad) lds add stos mov mov push sbb pop cmc jb xchg sbb and (bad) pop jmp popa and push aad nop int3 push fimul cmp out mov pop xchg and inc jo (bad) pusha stos sbb sti pop nop es jno outsl pop jecxz dec in ja rcl imul cmpsb lret test mov in loop aad dec not push dec (bad) jns and mov lahf add xchg cwtl push add daa es test hlt rcrl into lret frstpm(287 jo jle mov imul mov js ret mov and push int3 sbb shrl add sti pop lret push sar pushf adc inc mov jmp pop je mov inc adc mov inc (bad) jne incl or adc or in cmc pop pop fistp add pop enter add inc mov xchg insb cs xchg xor and sbbl lock ss jmp mov lods mov scas add les sbb addb jl add mov dec shlb nop rolb rcll sbb enter xor cmpl in lock inc xor mov nop addr16 dec pusha mov cmp (bad) jecxz ljmp push push adc sub add xor xor push jno arpl jbe pause aaa punpckldq mov inc inc int3 test aas rcrl enter aas (bad) dec fdivs out (bad) ds stc sbb adc js lods movsb dec or fwait and lret adc mov xchg repz gs adc (bad) hlt pop jp call pop push mov sub ja cmp scas or or mov inc jb push mov into mov add insl and out shlb pop (bad) xor inc mov or dec pop pusha fbld loopne xor test xchg push push sub and jno xchg xchg loop and lods ja sbb lret mov pop jo negb mov ljmp lods sti mov jg mov add insb mov xor xchg out jo adc xchg fimull pop test orb je call lcall lock loopne xor push aas or rcrl sbb and jae int3 push fwait sub cmc pop pop xor cmp xor mov repnz cmc ljmp popf adc jnp sub aas rolb in enter push lock mov loopne mov andl nop mov xchg pop rolb add inc and dec dec rcr jle sbb clc outsl ja mov jb cmp push mov call pop shrb test cmp nop mov xorb mov push xchg xchg lods ljmp lods sub jp push div out cs and jl (bad) dec pusha inc and push mov add mov cmpl shlb lahf shufps sbb pop sbb adc xor andl je rcll daa mov js mov dec subb orb es sub add fwait lret or test sbb mov push or lds add push fs pop dec sub cs cmp and cmp push inc pop or and cmp mov andb jno push cmpsb in fmul push and adcl lods mov fwait lret inc test mov (bad) cmp push jb jns cmpsl cltd mov pop sbb cwtl push aad lcall mov xchg test mov adc daa mov jmp mov xchg push inc aam in or insb cmp xlat and dec or movsl addl sbb jg int3 or ret loope enter add jne rcrl mov mov cli or adc xor adc cmpsb push inc xor cmp sub pop add ficompl mov push push into jl sbb jmp mov xor xor test inc mov sub cli scas or icebp add data16 mov imul fiaddl inc cltd xchg call js mov pusha lds mov pop add imul cs rclb adcb sbb jmp in mov cmp scas bound sub xor flds mov xor mov xchg (bad) and adc push push rolb lahf mov nop and dec nop inc jle push aam addr16 adc mov call or pop pusha jno and push es div loop jmp xchg inc jo mov lret aad jae mov add scas push add or mov pop rcll add xor sbb leave pop jb pop mov sub adc sub pop add adc rorb add push jmp xchg adc mov sub xor mov mov xchg dec mov fadd pusha mov lock push scas sahf add xor push js bound orl rolb inc call (bad) dec adc mov sbbb popf incl and ja sub mov fadds push out pusha pop sete movsl inc cs push shrb jle imul pusha add mov xor iret and add cmpl inc (bad) cli mov hlt les mov addl dec adc xchg add enter je sbb lcall inc fwait movsb adc (bad) and insb and pop insb push add outsl test (bad) jns inc ds adc movsb mov hlt repz sub test xor mov out sub aas mov mov mov mov jmp js test adc xor fwait pop inc push mov xor loopne cmpsb inc stc popa cmp bound repz shlb in jmp mov dec cmp iret clc inc jp dec ds xor sbb xchg jp or inc mov movsb je xchg xor mov cmp pop add fstpt aas jl add mov lret sub fiadd jmp aad pusha add jns movsb test sbbl test mov jno (bad) loopne adc xchg sbb inc lahf and fsubrl inc paddusw mov movsb addl dec jbe mov mov daa stos inc jb nop inc xchg fcomps sti xor jp xchg iret jne pushf jo push and (bad) push adcl js xor jp xchg mov cld lods iret pusha mov stc popa or inc jb add mov sub cld in mov add adc mov jo loopne add xor push add mov add fmull xor testl outsb jl xorb lods lret add enter sbb dec xchg (bad) enter clc mov and sbb sub xor stc mov addr16 lret inc mov iret mov xorl stos xchg adc add add mov fnop add sub lock adc mov (bad) shr dec xor add ja xchg lods mov rcrb clc push and mov mov fwait and push rclb xor ljmp rcll push sbb pop push jmp jmp mov orl dec das sbb rcl xchg enter or xor movsb insb and mov sbb mov fidiv add movsl out out mov test cmp inc loope fild fmull mov aad pop add popf loope,pt add jne test and lods sbb js mov jecxz pop rolb and pop mov jl lods int lods mov cmp pop pusha loopne fwait test add cltd movl jmp inc pop push xor inc cmp addl inc add outsb ret inc push in addr16 insl mov and sbb nop adc scas adc jno xchg nopl repnz shlb dec push out aam movsb sbb testl roll pusha jno in data16 add sbb mov in int3 add sbb inc sub pop adc xor sarb jne enter icebp ja aas (bad) sbb mov fldenv dec out cmp js mov push fidivrl adc xor sub dec or mov pop add xchg push in movsb movsl mov inc add mov jmp add rolb lahf mov lods add sbb mov inc icebp sbb inc test pop iret or outsl push insb loopne pop lods pusha aas enter add mov nop (bad) adc jnp push and (bad) xchg pop (bad) je insl fs repz mov push mov xchg and sub xor adc movsb repz hlt shrl jg (bad) sbb (bad) std scas rclb ljmp jae enter lods pop outsl rclb mov inc xor cmpl div (bad) push nop shufps je pop movl fdiv sub js push xor pop sbbl inc repz js test mov add cmpsl pop in pop jno stos mov enter dec (bad) or mov pusha (bad) mov mov or cmp insb adc js add jns loope push pop and pop icebp shl fmuls rorb nop sub addb rolb ret into mov or addr16 out mov pop rclb jl push lcall mov mov mov xor cs aad push dec jp lret gs in mov push push ficompl lcall jg xorl pop (bad) mov aas mov jg out sub loopne ja add ret lret or je jo (bad) mov sti cmp rcl inc rcr stos push xchg lea dec add xor std sbb cmp add add pop pop add lahf fidivr xor dec in daa pusha nop and jl add dec dec inc cmpsb out mov aad jmp mov sub jle icebp ret (bad) xlat mov push adc (bad) in pusha xchg call adc sbb mov cli lahf imul inc mov hlt add add xchg inc pop xchg xchg cmp dec outsl dec incb pop enter jbe inc add mov add dec jge pushf cmp test jno add sbbl loopne ficoml sahf call cmp mov xchg mov out and pop fs or ja hlt push ficom aad enter push test inc enter push dec jle push and inc clc arpl pop mov pop popa or cmpsb movsb ss rcrb enter xchg cltd mov xchg mov insl in addb pop ret adc mov insb (bad) inc (bad) jae loope jne pop lcall push cmpsb inc dec and add test int3 mov jno sub loop or mov push test push scas ret subb faddp nop add inc scas sbb out aam jl in es or addr16 mov push pop ficomp pop cmc cmp or mov add jo mov add sub jle inc negb into lret mov adc and xchg inc (bad) shr negl mov and sbb sub mov les incb (bad) jae cmp add bound sbb xor add jns dec out xchg loopne add mov test push pushl pusha nop and ret or out leave push mov in mov jae adc and subl mov push out jp add ret jg cli push pop or mov cld dec xor lahf leave and mov lcall out out mov outsl ret fdivrs sarl add shl out adc cmp xchg mov lds nop push sbb fwait js cltd adc pushf inc mov adc add cmpsl lcall jnp and out sub push pop xchg push (bad) aad push jecxz sbb sbb cmp cld sar insl xor and mov sub inc out xor ret sub test push adc push pushf popf lods adc jp,pt sub imul mov jne in xor out sbb xchg xchg scas pusha test mov and sub (bad) pop xchg shl enter icebp sbb rolb ja ds leave add xchg mov push cwtl dec aaa adc and add out call xor or fmul roll cmp jmp roll or jnp cmc jo mov negl dec je inc jecxz pop and mov aaa push jns orb es je setp inc and mov mov icebp cld (bad) mov adc push fistl mov xor inc mov mov lahf clc mov and or sub pop insb mov pop inc iret inc or lods add lds xchg and call enter add adc scas and add xor mov add mov push push sarb (bad) xor push (bad) lret xor add jae outsl (bad) mov adc hlt pusha aas inc cli gs test les inc hlt sahf xor std lods lret add ret faddl dec sahf xorb fcoml pushf push ljmp insb xchg push adc xor aam sub aaa ret test pop or sti inc gs pop je pop push sti and lock jmp add cld adc and fdivs push mov jne pushf mov js add and or adc mov xor (bad) xchg push test jbe or sub bound fcoml and add add (bad) subb xchg adc dec subb xor stc outsb mov into inc mov lea or mov push or cmp or push xchg mov adc jcxz dec movl clc popa inc mov in dec ror test rcrb pop das in add xor adc inc adc test adc out ficompl dec pop xchg cmp lock shll jmp rcll mov enter dec in inc in pop test jmp icebp push push andb cmp lock pop xor xchg and stc mov (bad) mov dec mov clc and ret dec cwtl call (bad) dec aam bound lcall enter or add xor mov pusha sub xor pop dec cs sbb xchg push dec pusha fildl add jp (bad) xor pop fsub add aas pop push pop mov std pcmpeqb jle sarl sbb sub sub inc cmp jns adcb xchg mov inc and js adc dec add push stc xor imul adc dec jp cmp xchg mov cs pop xor xchg mov mov fstps in out sbb incl mov mov aad out mov rolb cmp cli outsb js rcrb and push mov mov inc sbb jp sub sarb cmpsb add loopne pushf jl sbb ljmp jb loop add fcmove call or push xor jb cld aam mov xor stos rorl rclb and or (bad) stc sbb jbe fldlg2 out mov push rclb adc movsb mov outsb (bad) pop mov jo gs push jno out mov int mov or (bad) fs call jg inc enter cmp fsub add pop sub outsl (bad) and popa movsb or iret xor add cmp hlt sbb sbb pusha and pop insl sbb es flds mov sahf mov add push bound push adc pusha add cwtl sbb and inc fldenv or adc sbb cmp stc punpcklbw and push sub rcrb outsb pop into xor popa adc add jl dec ret cwtl imul outsl jns cmpsb cmpsb (bad) xor push inc dec or cmpsl ret roll sub xor lds (bad) mov cmpsb clc into fsubs or sbb outsl or adcb in cmp shufps xchg insb and xchg sub je fnop cmp add jp andl popf xor or addb mov nop xor cli jne sbb add in das popf cmovnp js inc (bad) (bad) sub imul adc dec rorl aas xor jns adc mov mov push sbb mov bound inc pop test and push (bad) cmp inc jns cmc mov mov divl push sbb xor repnz (bad) call rcr xchg lret lcall je test scas mov rcr or push mov addb das decl cmp mov sub fadds psubq repnz mov jb rcrl inc pop cltd sub addr16 rclb adc dec pushfw xchg xor sub jp xor std call inc mov pop xchg cs add popf add mov out xor stc rcrb sub ss xor popa movl fadd aad cltd mov mov xchg lods ja cli into inc and je mulb rclb mov dec sbb je adc or sbb test loop add mov rorb into outsl sub add sbb xor and jg adcb loopne or in mov sub xor xchg and movsb ret and f2xm1 stos jg add lods addr16 jne add add dec add and mov movsl cmp imul cmp aas pop push popa push dec push mov jae fisubl aad notl out loope pop dec faddl add cmp jo xchg pmaddwd cmp sbb jecxz sbb adc (bad) cwtl popf dec sub inc jns addr16 cs into add sub jae cwtl cmpb sbb test sbb xor jmp das xor or mov dec inc roll ficoml pop pop inc or add push inc cmp cmp and pop cli or lock aam negb lret repnz or lods add shl arpl dec xchg jbe cmp and ficompl or sub adc pop js add xchg ds ret mov and xorb jle enter push testb (bad) les fcoms dec std add mov cmp cmp bound cmp pop pop roll cmp push repz rclb hlt aaa adc cmp xchg jmp and bound les fcmove shrl and mov or add and adc lahf adc mov push add cmp inc enter shlb lret (bad) icebp (bad) repnz popf or or loopne xor (bad) stc mov lods mov push xchg repz js aaa jbe pusha push dec add ficoml and out (bad) int3 lock test or sbb cmp call jp adc dec popf mov inc nop cmp notb cmp xor movsb push jno test and add jae hlt ret mov add dec ret data16 or test inc add in push popa pop sub aas push jns (bad) repz mov sub mov iret and add insb and cli cwtl call cmp push out or cwtl stos movsb aas mov add insb adc inc pushf loopne and fwait arpl jno or cmc cmpsl sub add call dec or push xchg xor and inc sub push mov std mov inc adc call fsubr or push mov adc sbb and and xor sbb jo leave inc loopne jge add xor pushf fcmovu orl inc insb movsb push imul mov adc popf and sbb mov mov sbb inc jne add cli cmc lods into xor adc imul lret into dec sub (bad) inc test ljmp cmc mov and sub faddl xchg inc pusha (bad) cmp daa dec mov xor adc inc inc push (bad) mov mov insl sub and pop cmp jns setns add enter or std adcl call cli aaa aad cmp pop ror rolb call or mov subl cwtl mov add movsb stos adc sub aad and add xchg cltd xlat lret xor dec aam push les in lock (bad) aad enter pop sbb adc mov or inc rolb nop clc lds (bad) les mov mov xchg or mov xlat popf xor sub or and inc mov loopne pop add nop pop aaa decb iret xchg or fimull mov leave repnz mov xchg dec jo pushf lcall cmp pop lds (bad) pop nop dec into das inc add cmp jnp add leave pop fs xor iret dec xor pop add cmp mov inc (bad) pushf (bad) mov mov pop xlat cmp cmpsl les add test je cmpsb and sbb and scas sbb adc add stos and dec mov test adc adc add mov out lcall jnp hlt adcl inc rcrb lock mov jno cmp dec mov cmp das jbe aaa push pop xor cmp inc inc dec iret fidivl loopne pop fstl inc dec xor shlb pushf push push dec jns cmpl cltd je rol (bad) mov inc pop sbb mov (bad) aam sbb fcoml movsb adc xchg cs push cwtl and pop add mov nop fsubl faddl je test stos nop mov dec addb mov icebp aad iret lahf addb xchg addr16 or add cmpsl push push push into loopne cmp popa mov adcl sub in add jge fbstp jmp pop (bad) repnz add push daa xchg cmp dec mov cmpsl out mov or lock dec cmp shrl xor jb cmc xchg adc adc lods or lock cld fcomi mov sbb xchg lcall and add mov clc pop outsb or jb enter jne inc xor sbb or test es popa push add mov sbbb xor insb mov dec push cmp leave in inc push subl es mov (bad) aad rclb ss cmp and js cs clc xchg aad add jle add iret cltd in fwait idivb pop mov dec popf or mov pop fs add pushf or inc sbb xor pop jl mov lahf in or data16 les lret sbb test arpl pop pop add sbb xchg mov fdivrs mov xor xor add dec outsl mov lcall orb rcll xor loopne dec notb adc pop xor push add cmp shlb aad sbb mov adc mov sub ds stos jg test lret (bad) mov mov movb inc enter mov adc inc insb imul and call or fsub mov out loopne icebp mov test or popf xchg insb dec sub adcb dec dec adc push adc enter and cmp mov jo mov aam push push lea dec shlb les sub mov test mov outsb test cmc (bad) push push cld add add popa xor js stos cmp dec or adc adc cwtl or mov ljmp sub mov rcrb xchg and or incb add push aad imul and mov imul test sub test fcmove or add movsb mov adc fwait xor pop in dec pop adc pop sub and leave lahf mov fsubrs dec ss push cmp bound mov and xor add or inc mov arpl add ja test pop xor and jbe adc mov hlt cmpsl adc test stc adc mov mov sbb or out ja cmp cmp sub mov jne inc dec mov pushf add (bad) in imull mov xor sbb pop and and inc lahf sbb sub loopne mov sahf xchg int3 and xor or fmuls add or rcrl movsb or (bad) int3 bnd xchg cmp and rcll test jmp (bad) xor in sbb mov nop push add in mov mull sbb scas push cmp lea test push adc xchg fs sub mov jno inc loopne (bad) xchg mov stc push jae mov adc cltd pop mov loopne add adc mov in add sarl sub add gs adc (bad) or dec cmp ret inc mov in das sbb fs or sub rclb inc adc das jnp jl cwtl insb sub sub icebp or in add pushf mov test cmp add scas jp xchg mov jno ror movsb cmpl sbb into pop test lret push ss cld (bad) hlt jno lods mov pop inc xor or inc or cwtl and adc aas add jo xchg pop or stos fdiv add mov add xor or cmp std xor nop ss daa add cmpb sbb push scas repnz jmp pusha push jecxz add mov cmp daa loopne rcr nop dec inc and lret into push movsb mov call add iret cli sti mov dec cmc notl jae pop fnsave mov lcall rcrb nop xchg add xchg or cltd and xor xchg cmp enter sbb inc mov cmp push mov outsb aaa xor and sbb into cmp adc inc enter movsb fldl jb enter cmp loop and das sub daa push stos enter or jnp fs cmpb mul xor test mov and mov sub imul mov and insb in cmp xchg add jp add cmpl adc push jp dec push sub pop sub adc pop sbb push inc test xchg and add pop xchg fdivs add dec or sbb push test mov cmc icebp sbb inc imul popf inc pop pusha xor adc pop pop adc stos cmpsl adc sub enter in pop xor jb xor cmpsl mov mov and sbb push jns mov sub aas adc adcb sub bswap mov cmpsb test or icebp rcrb add dec cmp lret and adc mov pusha or inc movsl test mov mov aam aam and or cmp mov or add mov daa aas sbbl inc xchg dec or and dec into jl aad or pop les int3 dec and push and push cs adc lods add mov insl fisubrl or push add cmp xor test pop call and fdivrs inc xlat in aam sbb pop cmp pusha cltd bound (bad) xchg (bad) pop xor inc enter aas call mov les xor (bad) sub test daa dec dec mov and scas test dec jbe f2xm1 xor (bad) fwait test cmp insb jle js dec dec or addb fs cli adcb lods and sbb cli scas in add jl pop jp adc or adcb lods add push rclb ror and mov sub addb ret push and jae mov fs (bad) jae popa mov xor xchg xchg hlt notl and xor clc push fcoms mov adcb mov mov das cmp add fdivl data16 mov in test dec cmp cmp push mov insb and leave mov cmp pop add inc bound and inc in cmp pop loop repnz rcrb shld hlt lcall ljmp scas add push pop mov and pop or and rcrb sub test jae fwait push jo push xchg inc dec lods fwait in pop inc enter and js pusha or cmp push pop movsb cmp std ljmp dec or aas or pushf jnp or xchg adc sub mov je stos aam xchg jl (bad) mov pop repz fisttpll dec jns mov ljmp add loopne lret popf imul and mov mov push push sub mov (bad) lock add mov mov gs mov xchg cmp cmp pop jbe jmp cmp inc jo sub psubsb enter les and mov adc ljmp out hlt add loope inc mov add cmpsb or dec inc test sub add cmp loope lds sbb xchg jmp or adc inc or icebp ljmp (bad) lock inc sub dec or pop aad arpl scas and add xchg insl jp pop xor (bad) aad jb jl scas insb and or imul xchg pop mov add icebp aad mov call sub stos add add jg jecxz cmp xchg insl push dec in inc in icebp jne push jb sub cmc rolb sub adc call fcmovnu or into mov xorb lock leave ss mov cltd pop mov fldt dec and enter lret orb or pop sahf adc jg mov sub out sbb loopne mov loopne je enter sbb jae out das movsl lahf mov or mov pop jb cmp cmc mov ret sbb nop adc cli (bad) in fisttpl sub xor pop inc and push sub enter add insl sub aam nop out and add xchg pop jecxz enter add clc mov sbb or mov sbb leave and cmp xor xor add shlb test pop (bad) jae test xchg push mov ret or mov adc cmp aam loope rcr add jbe add enter je pusha scas and imul add test xor rcrb mov xchg daa adc adc scas into sub cmc test insl mov push cld inc adc call mov jb lock jne and and rclb les divb mov mov dec in or popa xor mov sbb dec or push fisubl jl cwtl ror test mov pop mov cmp adcb lock add ficompl mov add inc jno repz dec enter pop jl insl add jmp divl xchg jno add cmp dec mov pusha or repz adc fcoms sbb nop cmc lock (bad) and call push cmp pop mov (bad) (bad) rcl sbb dec jae lods or xlat jno pop cmp push and add icebp stc pusha arpl add (bad) cltd gs pop cltd rcl aam push les test jmp cmp xchg dec jp les andb jno dec adcb sub lret nop xchg arpl int3 rolb cmp rorb ss and hlt clc or sbb and inc shl rcrb idivb jae add cmpsl or pop dec adc aam mov dec and stos push add pop push mov cmp std push out (bad) push insl sbb sbb cmp xor dec (bad) repnz xor outsl pushf pop push fs (bad) lock sub add repnz add stc scas les push cli adc sbb sbb push mov or pop sbb or push fwait dec sub jbe pop pop xor es fstpt and or pop popa xor xorl clc repz pusha hlt add push jns addl mov jo imull xor scas leave xor int jmp jns jnp lock xor movl jno add ja jmp loope clc inc inc lea (bad) push xchg add cs jle outsb ret das shrb (bad) int3 sbb rolb ds repnz imul outsb push loope mov cmp add mov cmpsb xor mov xlat mov stc cmp aaa ja jmp nop push fcomi add inc stc add imulb add mov icebp stos (bad) mov add cld adc or in jns adc cmp inc sub push and sub mov imul add mov ret clc movl dec shrl pop stos repz inc dec push pop and sub add clc adc mov pop push jns inc mov fwait repz cltd push dec inc push cmp sbb mov pop outsb cwtl mov add int push sbb push xor icebp adc fwait and rorb mov jno pop add gs popf or orl mov pusha addb mov mul add bound clc jns jmp aam ret add insl imul les xlat xchg adc push and inc xor push rorl fs addl movsb and andl fildl mov mov lea add inc gs jae stc enter xchg mov cli js out loopne mov xchg inc fdivl leave xor jno loopne and sahf scas addb jl (bad) mov jae mov sbb in pushw sub adc jl scas test nop xor push pop push cltd in mov or or fildl dec pop in jno (bad) inc popa dec adc add in js inc test lcall or shufps mov ss cmp ljmp fsubrs pop inc pushf addr16 repz inc hlt jb scas sbb dec xchg ret enter in jl xor movsl inc js movsb mov xchg and mov add es push pushf outsb loope clc dec pusha xchg mov jge mov and std or call sub lds mov (bad) push dec xchg fs pop mov xchg inc and and add xor rcr iret jb dec xlat adc test dec xchg nop push cmc icebp mov fisubl daa add stos nop add add cli popa lock rolb add popa pusha pop (bad) insb in (bad) fwait shrb push add push sbbl mov pop xor mov shrl inc push fs pop les add push mov jne das jae jo push inc fldlg2 (bad) dec jae push xor inc stc mov lret push (bad) inc test fsubl mov xor sbbb inc fs add mov (bad) mov mov andb inc mov jnp jns mov add das xor push pop push or sbb jno mov pushf cmp nop xchg das ret add xchg push cmpsb add mov adc xor sbb lahf dec movsl push pop mov into mov sbb xor dec mov mov pop mov push movb push mov (bad) xchg in insl stos aaa decl cmpl xchg add ret dec movsl mov sbb je add test cltd insb dec orb push mov xchg inc ss xor iret add cli mov mov push imul decl icebp aaa mov mov jno sub adc mov les sub rolb push icebp sub pop shll roll ret sbb cmpsl xchg call push fsts popa xchg daa inc out inc mov dec ds xchg movsl orb cmp dec rcrb add addl das call push or xlat adc xor xchg mull test lcall sahf add test ret nop jnp aas mov pop notb or les pop inc addb add sbb sub mov iret es movsb inc cmp jnp push sbb or add insb out add rcrl mov fiadd mov jl xchg test notl mov inc sub call out aam adc add or add jl int3 je hlt nop dec test in enter movsl dec lock pusha lock fistpl inc mov call fisttpl mov push repnz dec mov push mov add or lea dec call inc push xchg (bad) xor cld scas adc pop push add sub repnz ror es popf dec pop push ljmp cmp cmpsl inc shlb cltd xor sub aas dec lock and xor mov dec mov and dec data16 jo jno xor dec pop aas repz mov movsl jecxz fsubs std and xor movsb insb mov rorb mov cltd cmp daa rclb cltd test and rclb dec lock loope mov dec gs mov rolb lret xor iret rclb inc outsl add inc (bad) scas lds arpl popf cmpsb cmp or sub insl dec or xor mov add xor aam mov push adcb sbb int mov addb orl pop lahf pop push cwtl xor push in mov imull mov es dec mov push inc inc test movsb rolb push cmpb dec cs xchg push fdivs mov pop sbb add insl push cmpsl cmp xor mov dec orb shlb adc push int ret lahf and mov inc lret mov pop cmp adc xorl int (bad) pushf movsl stos lea lods test in sub aam ficom xor xchg sbb lcall clc je bound xor loope loope icebp ss outsb pop ljmp loope fstl push inc mov insl jbe push xchg jle out inc cld loope inc sbb enter add mov sbb mov cmpsl hlt test adc rolb mov pop scas sbb xorb je pushf mov outsl insb pop cmpsb mov jmp in and stc sub test lock inc jl jl icebp xchg and inc sbb and addb in ss mov mov inc fldenv xor inc clc xor jns call pop jno mov mov mov out les test sub pop dec add leave fisttpl aaa scas add and dec xor xchg repz data16 in pmaxub sub add sub sbb sbb xor call sbb mov sti dec sbb pop sub lock movsl addr16 dec dec mov mov mov dec mov or dec fdivs fwait xchg inc pop outsl mov xchg pusha and push mov rclb and seto js test aas and mov fisttpll sbb iret popf adc enter fdivs rorl pop or rorb lret aad nop into adc paddsb mov add or jbe js jg sbb test add jp (bad) adc push lods (bad) jno mov cld stos das adc and pop and rclb inc out sbb pop clc xor xor in adc add dec popa inc mov mov shrb and jno cmpb cmp lods dec (bad) adc or pusha mov int cmp into pusha sahf pusha cmp mov hlt fldt test fs adc jp cli insl rcll jo shr inc hlt add xor add outsl add pop ljmp jl inc sub pop clc rorb add adc clc and or cmp mov std dec cwtl clc adc mov mov adc dec enter sub sbb cltd int3 xor sub arpl in pop add xor fsubl cwtl lock jno cltd jnp dec push loopne scas int3 mov mov inc sub adc popl dec nop (bad) popa sub xchg ret and sbb inc xor mov sbb xchg xor push push dec pop nop mov jp dec mov arpl and movups fmuls push xor fistpl xor jl cld cltd insl inc push mov pop add mov inc clc mov es mov pusha pop outsl xchg add jae dec imul add add mov xchg lock mov ds cwtl jne push outsb mov push pop les and adc fstp pop mov add lcall pusha mov push rol outsl dec cmp or movb push mov push hlt sbb add cmp mov mov pop int3 js push sbb sub push cltd sbb xor push push dec mov pop sub decb adc repnz add ret xor lds push jg xlat cmpb sarb stc outsl es fs add dec inc nop icebp mov jl add daa hlt cmc xor cmp push add (bad) dec jecxz mov sub sbb les test imul or sub ds adc push cli orb int3 lea pushf ds add jmp push gs aad imul pop pop clc jne cltd addr16 push (bad) push or pop test nop subb xchg mov popf loopne std andl les mov sbb inc out sbb xchg mov aad xor enter mov arpl jmp xchg pop or xchg cmpsb or add xor mov fs and adc inc pushf ss inc add cmp sub push lcall xchg pop mov ss adc cmp call sbb daa adc cwtl jns sub ss test int3 movnti test push loopne andl test jno xchg xor inc mov sub inc inc pop cli outsb and sahf jb cld aaa add int imul aad mov pushf pop mov or cmpsb nop add xchg mov jge push aas orb add out addb jl adc push aas mov sub cli jbe cmpb js dec aas adc push lds jno sbb jp cmp hlt jbe push add mov xor dec jno and cli push sarl lds inc and testl sub pusha je mov and mov test or push hlt xorb ljmp push jnp add sahf push inc in adc cmp rclb xchg pop leave adc or add mov (bad) cmp or mov sbb or mov rorl mov rcrl je mov push xlat fadds std mov in int3 or in leave inc and rorb mov add imul ja cmp push incb std loope sub xor cmp or rclb fcom js cwtl pop add mov cmp mov enter movsb mov cmp sub lcall or mov sub inc loopne icebp fsubs xchg int3 add xor loopne mov mov or inc xor mov and mov inc popa xchg cmp cmp mov lret mov jl sub aam adc mov pop std sub or inc push dec adc imul int3 inc adcl mov push jp rolb dec rcrl out add in inc sub fs test (bad) pop add add pusha jge dec repz pop sub subb xchg mov scas test xchg sbb cli rclb push or add cmp outsl shlb adc sahf add mov push inc test cltd shrl mov pushf add frstor lods jp sbb (bad) fdivrs jecxz jp push or sub xor mov movsb mov sbb xchg das movsl lret add push sub hlt (bad) stos add cmp bound adc shlb adc lods rolb add cs dec loope dec lods dec sub cmp or inc cmp adc push xchg aaa or dec in mov pop xor mov inc xor mov or imulb inc mov lods jnp lea mov rol (bad) andb jns movsb sbb cwtl and enter jmp sbb inc and xchg pop loope add pop pusha in push out add (bad) adc pop dec jmp (bad) mov jo sti (bad) adc loope pavgb and dec xor inc add inc pusha call pop rorl push jne push js inc pushf (bad) push or mov out cmp xor cmp insb xchg (bad) dec les add cmpsl cmc adc lahf push popa or dec in mov mov pushf loopne push xor lods dec adc lods mov cmp xchg add cwtl lds sub (bad) mov or int int3 inc push xchg jge xchg cmp test cwtl pop sti push push cltd inc and adc jo mov push test jo aas and mov sbb mov nop cmp xor insb (bad) (bad) adc data16 sub in nop jns mov iret cmp mov pop cmp add dec les imul pop dec (bad) pop stc aas push add (bad) pop sarb dec lock js mov enter outsb lock cmp sti adc orb mov add imul pop push dec fstl or lock sbb xor add (bad) fwait cs call sub and push outsb enter aaa imul xchg shrl in and in xor jae pop scas inc testl in sub pusha mov sub test into or add lock adc dec daa inc clc cwtl inc jnp xor sub mov test push xchg sub push push int3 and cmpsl pusha add jb mov xchg mov lods xor mov mov cmp sahf sub add inc cmc xor fdivrl roll sub and pop (bad) nop jo sbb mov (bad) or adc cmp mov push mov adc or adc mov push cmp cmpsl clts rcl sahf mov or stos subb pop movsl sub (bad) out mov mov jnp sbb int3 mov jo pop sbbb (bad) mov iret lock mov nop xchg mov int3 add roll iret cld xor (bad) and mov sbb mov andl fnstsw in sbb adc add imul xor dec call or or stc add js fucomip jne lods add mov imul push enter mov sbb outsl repz jg iret es mov sub inc fbld daa outsl push push lret in imul je sub jns add xchg add sub arpl dec (bad) cmp popl cmp or and in add add cmp scas and mov movsl xchg les daa (bad) pop roll cmp pusha xor sbb stos sub xchg xor fcompl mov orb movsl call fwait int3 add sahf out lods add add cs mov mov pop and sub sbb mov and shll xor push jmp pop rclb outsl negb out in loopne mov mov mov dec jmp xchg push push or jo xor mov push push inc jnp mov decb loope aas add or lds push xor mov mov sub aas or mov fstpl pusha aad cmp pop jecxz xlat popf mov rcr mov pusha mov loopne adc adc jge xchg xor or ficomp inc mov icebp movsl aam push fsubl push adcb (bad) (bad) adc pop cmp mov sub mov pushf dec lea out into int3 sti pusha cmpl je rclb test sub jnp loopne add repz cltd loop mov js inc ds enter pop lcall nop add ret js aaa xchg xchg xchg cwtl dec ja sub sub mov and in pusha aam mov push test pop test or (bad) loopne in jne pop mov or xor mov nop sbb jmp int3 xchg inc les jg rorb xor fmul sub rolb mov dec dec out ret ss pusha mov test sub add std inc clc dec lock push arpl push mov sbb mov pop inc sahf xchg vcvttpd2dqy pop and add js add mov loopne bndldx jnp inc enter (bad) jo push adc and jo pop sub test sub and arpl fs test idiv fiaddl andb out add push add icebp pop mov gs push fdivrp bound mov jne mov mov push dec dec inc pop push cltd cmc cwtl push jbe dec movsb (bad) jo repz sub or out cmp cmp mov stos movl lds mov mov mov dec sbb mov jb inc inc sbb or push cltd in mov dec xor jle rorb ficomp mov (bad) cli dec int3 dec aas test leave rclb popa jo,pn int3 mov aas outsb jmp test xchg lret and pop inc pushl lret xchg icebp jo (bad) fdivp test xor lock jmp or add pop inc and lds pusha push cmpsb fwait xor xor mov loope push push ret fadd xchg loopne sbb add mov jno test imulb dec jmp or dec daa imul sti or repz cmpl sub nop and cmp xor sub dec stos push add leave mov mov fadds xchg pop lret arpl jae outsb add add mov cld mov jb mov dec adc shr push cmp sbb adc lcall jecxz adc ret call sbb call and cwtl jg jne add or loopne dec dec rorb (bad) fmul lcall adc add xchg fidivr adc dec or inc adc (bad) dec push cmp mov add mov pop out nop lods xchg inc and leave cli or pop inc pusha les imul int and nop pop imul repnz push call movsb pushf jge (bad) dec push mov cld sub ret lret sahf (bad) shrb add mov mov dec add or test ljmp add inc xchg mov and sbb int3 and in cmp jae addr16 lahf insl mov sub lret add bound pusha or lods xor clc xchg sarb inc or sbb aam cwtl and mov mov jb movsb test inc movsl xchg add mov or fadd hlt mov out (bad) in sub xor orl add (bad) mov movsb fadds loop out xchg add and repz push mov dec jae inc fs pusha jns push stc loop mov cmp adc or data16 xchg xchg movsb movsl dec loopne or movsb xchg addl xchg mov packsswb mov ret push aam inc mov fisub (bad) jo (bad) xor sbb aas mov adc jo or mov int add mov add inc iret pop sbb aam scas mov jae xor and lret cmpsb rclb mov mov add (bad) (bad) jo sti xor faddp notb xor ljmp mov jo adc je lods xor fimull or insl stos lret and mov in dec push aam int3 or and scas sarb pop xor stc sub inc sub cld mov je mov sti pushf cmp lahf cmp insl xchg sbb test mov fisub mov add pushf sbb test mov leave sub push mov push inc cmpsb xor dec or mov inc jno xor aad clc and sub or notb mov pop mov adc pop jg,pt ds add or into sbb pusha imul jae mov std or sub popf push aam ret nop dec jo popa rcll mov cmp jns test je,pt aas cmp add push ss or lret pop ja lock js (bad) xchg jmp adc lock js,pn in or pop ss fnstsw pop pop xchg stc inc fadds cmp and xor sbb pop add jmp mov lock push rcll icebp mov mov sbb push cmpsl xchg mov pop daa int3 dec sub (bad) xchg xchg mov add (bad) mov in inc add gs loopne add int cmp mov add xor sbb dec sbb aad cmp adc sub adc adc push pop int3 sti push mov insb aad (bad) push adc loop adc dec imul cltd jo inc adc (bad) xchg cmpsb inc add fsubl pusha inc xchg or sbb mov mov push pop pop popf cmp and gs and outsl push and inc fiadd enter or sbb lock cs sbb nop xor movsl call notl and cwtl push pop and stos xchg inc and popa dec (bad) jno movsl cmp xor pop test aas mov lea sub xchg inc insb mov (bad) sub push aad sub cmp xor (bad) lods movsl add test loopne es push or sahf sbb sbb inc cltd lods push sbb pusha pop add cmc fdivrs inc add leave loop fidivl fsubs push jns inc add enter inc insl and cli mov out sahf arpl mov push cmp mov lret mov inc cwtl les movsb cwtl add aaa stos lret xchg jl cmp cmp popf movsl or xor push popa test push ret aam cmpsb rol inc pusha xchg cmp test adc lock or sbb add push add mov lock loopne inc and or mov stos or cwtl and sub daa sbb xor enter xor mov pusha dec dec cmp dec pop jae sub lods fisubl mov js lret jg add push mov push loopne xchg add add dec sub jo push dec iret das xor cwtl mov adc add (bad) clc jb fisub je or jo lahf jae push add cld xlat out je xor rclb and insl dec mov jecxz hlt cmovl hlt add dec mov cmpb add sbb or and add inc insl ret das push jmp mov sub add mov sar cmp xor jnp xor sbb xor pusha cmpsl pushf add (bad) lret (bad) in add xor add xor sahf inc and add test movsb mov jmp dec xor cmp leave jl test push fsubr icebp xchg inc inc imul in xor je mov les xor sub and dec cmpsb sbb int3 lret pusha cmpsl pushf les (bad) lahf push dec pushl nop or in pop sbb mov ss xor pop add xchg jmp lods add icebp pop rcrb sub or cmpsl pop or xor mov fstp add dec flds sbb (bad) cmp xor jle push aaa adcb jg and lahf lcall and sar sarb lock sub mov fcmovb and cmp rep and adc jnp inc out push subl ds bound adc call stos inc jae sbb orl clc cmpsl and xchg or add lods rcrl in (bad) out movsl adc inc pushf jo sub jns les and xor fistpl mov dec cwtl mov les inc mov pop insb or mov inc mov add out and lods sbb out xchg loopne mov add addps daa mov aam adc sbb xchg dec mov jg and es dec mov add pusha sub or sbb inc cmp mov popa test pop adc cmp add (bad) add dec pop icebp adc add int3 lcall insb or push test and jns push out sahf dec loopne fcompp jle add cmp movsb or xor lcall fcomps cmpsb arpl aad mov les mov roll add mov cmp cmp sbb sub add lock sub push cmpsb call push and lds add lcall pop jbe sub add fistl sub adc add sbb xor ret psrad test (bad) inc loop push gs daa mov lods cmc jg push ljmp movsl mov sub and push mull cs in sbb mov dec add sub mov xchg mov es pushaw inc mov and sub sahf lock add call test xor jmp mov cmp jbe jno mov loopne sub and add ljmp repnz or push ss mull push sub movsb mov and test and lds fnstenv sub icebp imul mov sub add insl cmpb daa and mov cwtl fstl or loopne add rcrb ret adc adc mov jecxz test add addb push mov mov push jb into push sub push push popf cmp insb or mov xor push sub add jbe imul xor and and (bad) xchg push add pop hlt xchg and mov inc mov and lods add adc sti outsb inc sub scas jmp push mov (bad) jmp jnp je push add jmp push xor out (bad) daa test repnz or cmp in loop push mov sahf dec or pusha mov repnz (bad) sub and adc or and adc call sarb or jnp sahf and sbbb pop mov shr add loope and lock or add out cmp adc sbb fsub sahf push loope sub lods add sub pop and adc cmp (bad) mov or add sub sub jno sbb pminub cmpsl sub or cmpsb sbb and or dec add mov scas mov pop ds push push fimull xor popa mov nop xor lea push fsubr stos xchg addb arpl push test inc xchg dec and js and mov sub dec stos rorb sbb or xchg or ja xor push and popa mov cmpb out rorb (bad) xchg mov inc add sti nop call cld aad cli and cmp pop xor add and (bad) ljmp or mov mov fdivs xchg and test lds or add arpl push and or lcall mov mov push add aam mov push sub push add xchg mov imul cmp xchg jmp jmp cmp and add (bad) in sub subl aaa mov fsub enter pmulhw xchg inc outsl mov add dec (bad) cltd push pop xor outsl sahf sub jbe xchg js adc mov loopne test mov cwtl add repnz pop mov inc mov mov packuswb fldl or mov dec cmp push and jo mov mov sbb (bad) mov cmp cmc sbbb enter (bad) outsl xchg push jmp fcompl fsubrs inc lods xchg or popf sub int3 popl or inc mov add cmpsl add test sbb sub ficom icebp xchg call inc jmp pop pusha sub into int3 and pop call in mov (bad) roll push lods insb mov (bad) mov popf ljmp sbb (bad) test add add sub insb jge cmp mov mov jae test pop fimull sbb or orl or cmp and imul inc nop js sbb xor push xor mov (bad) jle inc xchg mov add and call movsb adc sub cmp push mov cmp sbb movsl std shlb add out mov or or (bad) test dec adcb inc insb or aam into or movhps arpl mov pop ret and sbb outsl int3 test jnp sub and pop in (bad) add xlat push push jp imul ja (bad) ss je adc and int3 push xor pop test jno frstor ljmp adc out mov xlat pop jne inc movsl inc pusha sub xorl js cmp mov and cmp repnz and call (bad) pop (bad) adc fsubrp and adc loope cwtl ror mov nop cmp pop fwait les ss sub or fdivl and lock subb insl aaa pushf mov mov idivb cmp and cmpb add movsl add jg mov shrb mov (bad) sbb sbb xchg adcb lock xchg xor nop push mov aaa sahf mov add fbstp test test in pop (bad) xor out andb stc popa jno or jo fldt or fucom or pushf sbb push out loope add cmp fldcw pop push inc push enter and or lcall pop fild call or pop mov pop in std add add pop jg xchg mov cmp push loopne sub add je jno movsb mov pop movsb jl ja jp ret loop mov or and les lock in test push stos and jp (bad) test dec int3 jmp xchg nop adc xorl or dec or xchg sub das lds sbb cmpsl adc jmp pop pop (bad) xor mov add (bad) xchg mov and mov adc pop lods add inc and sub das xchg fmull out jle push inc jge,pt add add add adc inc inc dec pop out sub cmp lret movsb sub and test nop mov fcomi test cltd mov jno in shlb out add mov fucomp sbb cli stc push sbb cmp (bad) mov push push or cwtl mov or sarb cmp test xlat dec sub or xchg mov mov enter popf xchg xor dec pop and clc mov pop and xor add fs stc pop xor add rol push or cmp mov mov rolb cwtl push add js addb add and out aam (bad) sub pop jl cmp cmc mov les sbb ja or adc add jo mov dec push enter xchg pop xchg movsb pop inc push pusha nop out add scas sbb es loopne clc xchg ja (bad) dec movsb pop (bad) push fsubrp out pop push pop sub fsubl lahf sub insb aaa popf and dec jae and and or ljmp dec sti push shrl and aam jo cmpb std jne outsb aaa pop cmc in cmp enter xchg test cld or pop mov or mov fldenv mov jnp fsubs pop ds nop sub sub push inc ret add add and jb dec fiadd and mov mov mov or inc push jno add dec xchg inc and and pushf sub rol pop mov sub lcall scas push (bad) int3 xchg pushf pushf ds lods mov mov dec xchg sub xchg pop in mov or xor add sub cmp adc xchg push test jl jl nop test (bad) and nop inc mov adc jmp xor cmp in cld xchg xor enter in imul test dec enter jo cmpsb inc sbb es push out push (bad) loope pop je (bad) or and dec sub jo adc mov push adcb mov adc cs daa mov pop rcrl frstor aaa adc or outsl xor mov or xorb dec imul xchg pop enter pop scas out es lock sbb inc lock loope pop inc nop pushf mov lods adc in inc jo (bad) cmp pop add mov and and outsb fcompl sub xchg dec push icebp jbe push cmp (bad) sbb adc (bad) pop push push call data16 inc movsl add adc fiaddl mov push pusha orb xchg arpl (bad) and ss dec sbb lea add test das pop xlat xchg loop in pop loope add sbb add std pop loope xor mov mov xchg inc movsb push add fiaddl pop pop jge fdivp inc jno jl sbb ffree jp pop outsb pop adc jl cmp and adc data16 dec mov push (bad) das and xchg xor mov add testb nop jo or inc je (bad) mov jg jmp adc and int3 lret mov pop popa mov adc test call pop cmp mov ret out outsl xor sti cmpsl stos inc mov repnz popa mov inc sub cmp pop push xor mov test mov rcrl jb mov clc call xorb das xor push cmp cmovns add sbb inc pop arpl mov ret pop adc in pop xchg hlt jns les add es add stos inc in jnp add (bad) nop and ret or les das imul pushf inc pushf or pop (bad) mov mov xchg (bad) enter js stos rolb nop pop iret adc and dec icebp push faddl cltd pop inc and pusha pusha test dec push dec xchg xor cmpsb js lea and xchg pushf inc inc push jg (bad) or repnz or mov cmp mov or ljmp (bad) sub lock jp add mov jnp xchg cmp jl pop fmull je stos and xor (bad) test push mov cmc out add and cmp sub and add xor lahf mov push jno rcrb (bad) leave add jmp ss sahf adc sbb xchg shrb inc pop cltd pushf jo fs mov push push jbe out mov adc sub push add cmc fcomi in fdivl stos outsl jl enter js add xor cmp mov je lret lret jno pusha adc shrb sub and xor jl adc mov hlt and xchg mov adc das and xchg add inc ret xchg bound int3 js sub pop sub xchg mov data16 jnp in (bad) sbb dec adc imul sub add loope shrl arpl clc jl xchg mov pushf xor and call test aaa mov push add push push sub mov mov xchg in (bad) scas sub dec sbb add xchg dec fcomps mov jae pop ljmp dec and push xchg bound cmpsb rorb fildl sub xchg mov call push dec cmp or mov test psrlw fldl mov leave fimull add rorl adc gs imul in cmpb sub repz stos pop aaa mov sub pop cmc jae cmp loope test test pop xchg inc sbbl mov dec test pop lock sub cmpsb std shr add push outsl adcl push dec dec sub xchg xorb rolb xlat (bad) pop add jmp or add popa imul sahf mov mov jg cmp and fisubl mov jo mov loop fs lods addl lretw and add out mov add out or mov sahf lock add shr test cs cwtl and int add sub mov xlat add lret mov jmp push lods or xchg or push outsb mov in jecxz test mov jnp in fwait xor xor pop inc mov test popf dec fistl and and pusha ss fisub sbb lret js,pt in xor sahf lods lods outsb cwtl (bad) mov lret js mov xchg lods adc punpcklbw ds dec xorb fisttpll push add pop dec add test cmp add pop lret leave fsubp pusha push (bad) icebp fwait jle rcl lahf add sbb loopne push sbb orb js fcmovnbe pop lret or into clc in cs add inc pusha fbld test sub std push pop add call (bad) xor sbb or and push popa cmc aas lock add fnsave js sbb mov push sbb (bad) into (bad) mov xor cld xor and inc add inc int pop and adcb xor out enter push enter cmc or and add fsubs sub push inc and (bad) mov add cmpsl pop inc fs cmp inc push mov add sub (bad) xor or mov cvtps2pd add add subl mov jb xchg add insl and add jne jecxz sbb and push add and aad daa pop nop mov test rol les inc movsb daa js nop pop jmp jne je mov adc sbb movsl xchg add inc xchg pop outsl and (bad) push movsb loopne (bad) ja (bad) jno fcoml jne fiaddl and jb aas (bad) aad rcrb (bad) shlb sarb sbb repz and and push add aad inc add imul sarb push dec je mov or loop dec and out jl bound mov and lods sbb lods sub add ds scas dec sbb test or daa int3 je pusha add and nop nop addb add mov xchg mov cmc mov scas mov lock sbb ficomp fsubl add mov inc roll fcomps pop mov jbe jb add jne or mov fistp movsb aam and ds inc sub cmpsl pop xor out leave js xor in data16 add cwtl ljmp dec ss stos cmp add sub addl test rclb xchg dec mov lds rclb sahf add enter mov sbb pop fld mov pusha sub and or addr16 sub mov ret sbb negl add xor push add pop mov mov and sub addr16 fimul dec popa inc loopne pop and push dec and rcrb jns sbb out jno call dec or scas in mov or jge pop fidiv mov jo or lock pop cld mov cmc fdivrs dec shlb dec or fcomps gs xor pop rcrb mov adc dec test pop push sti add jae scas ficomp dec mov cld pop cmpsl fsts add mov add xchg lock add lea add into mov mov mov or call sbb jo rorb je ja nop xchg cmpsl pop xchg aam daa xor mov push imul jnp (bad) xor out push lods jo mov stos pop mov fstl aas and add mov mov inc push sti aam loopne mov xor xor idivl mov jp rorl jb and fwait xor sbb inc xchg mov adc push adc test jbe add cmpsl add test fsubl and lret jge mov mov mov xchg xor sbb dec cmpb test lahf (bad) mov jne xor cmpsl adc lock insl dec popa mov cmp adc add sbb mov sub mov xchg jp push fwait cltd outsb sbb es mov hlt push add jb jne inc sub pop add (bad) cli test xor (bad) decb pop mov xlat vandnps cwtl sub jb sub pop push mov adc inc lock jbe inc add addl addl push jnp sarl fldcw test sbb xchg or add lcall fdivrp in arpl add fldcw jge dec test in xchg aaa mov iret sbb dec cmpb jno cmp sub or jl add imul dec cwtl mov scas sub repz xchg add les test xor jne call sub push pusha and aad pop gs mov jae pop sbb push jle fcompl pop push adcb pop daa adc sub (bad) scas jo aaa arpl adc lret call mov xchg fs nop push mov loope adc (bad) xor add and (bad) and push dec push sub insb js add or xchg bound mov cmpsb jg sbb sub sbb lahf js inc les and push or jns cmpsl leave mov subl fcom sub dec stos and add inc xchg add movsb pop lahf add popa (bad) pop mov push fbld push mov and mov mov adc mov roll ja xor stos xorb inc pop ret jb sbb fdivr or sub int3 rol mov jne xor lods outsl xchg add mov loop xchg jne add xchg mov pop ljmp adc dec mov cmpsl sub pop inc adc adc fiaddl mov sub add (bad) cmc mov pop fiadd push pop lds add mov rorb inc push test nop mov sahf and adc or subb (bad) mov or add sets rcrb and jge jno sub ljmp add imul or add inc pop nop in pop and or loop and ss dec jl sbb sub xor ljmp sbb mov mov imul adc pop addr16 pop inc pop xor inc pusha gs mov scas pushf in add lds icebp sub add xor cmp lcall nop cld cmp jg into lds aas mov pop lock jo xchg hlt push and and pop fdiv lret pop cs and pop das (bad) jl and sbb push incl push mov add pop pop (bad) push mov cmpl pop cmpsl and push hlt sbb xor mov add and cmp test out inc sahf adc xchg (bad) imul cltd test (bad) repnz (bad) or add push jo sub stos inc addr16 out out inc (bad) cld imul icebp in (bad) pusha xor jle ljmp cmpsb sbb js add xchg movsl inc jne std fistp add jecxz mov sbbl push test and test fnsave xor mov add mov push ja push add jae gs adc imul sub sbb xlat add fstl add decb and movsl adc and xor out sbb clc lea gs je add dec lods and push popa sbbb rorb (bad) jbe pop mov push mov pop les add call pop enter cmp mov or add clc jmp sub fs lds push in dec xor jns add jne aam lods inc and push test mov jo fnstsw inc push clc push mov scas fisubrl inc push push movsb push pushf or and enter roll xor push enter inc (bad) add or add mov cld add sub in add out (bad) clc mov ss and add add push fbstp cli mov rcrl jo imul shr adc jno loopne mov xchg pop jne mov int3 je notb in mov movsl xor mov fmuls movd add in mov arpl add mov inc push and lds repz dec sbbl or cwtl adc push add jno add insb sub mov jns fs mov xor xacquire mov pop int3 sub push or dec aam add jmp jp cld int3 jo dec sub fwait rclb cld xchg pop mov adc arpl pusha and lcall mov add aam (bad) pop jp add adc cmp lcall mov adc push sbb rcrb xchg mov dec out dec ret lods je xchg insb pop mov mov mov nop (bad) mov lock jb jne push push cwtl test je (bad) addb add xchg push das cmp lods inc loopne xchg imul dec adc or call sbb out mov add jb dec cltd les fsubrs jbe adc add jl inc je add inc scas adc and cmp into jbe test out cwtl leave js add add sti push pop popa or les jmp mov clc movsb pop mov iret mov jle push fdivs cmp adcb les push outsl add out in push fwait or xchg aaa or fidivl dec cmp sbb cmc mov push insl jl cmpsb mov mov lcall add insb xlat inc inc sub cmp jae iret je push xchg xor cmpsl fsubrs jl mov fcoml inc mov or pusha (bad) icebp std movl shrb pop sub insb jno add das icebp in ds push add mov test andb pop pop popf sub push pop dec mov jge mov push inc repz adc mov (bad) ficoml fildl jl out mov pop call or pop mov mov sub addb inc cwtl mov lret in es adc jmp mov pop pop mov adc addr16 mov daa push leave sbb loopne mov push push jb jnp mov (bad) mov mov inc push pop rcll mov push mov xchg xchg fs push dec hlt popl arpl and inc lock jo and xor add jp jns add pop les shl xorb sub add test sbb push xorb enter jnp adc xchg add pop stos into cmpsb test fsubrp testb jne ja pop xchg les in sbb jmp popa stc jno out adc fmuls sub xor push fimul add out jo fcomps fs (bad) (bad) jb sub loopne inc sbb push nop mov inc add lds dec adc sub mov stc in stos fisttp bound mov rolb cltd or xor jp inc daa js xchg cmc rorb push add pusha dec mov (bad) push add sbb pusha dec add and jae add or adc pop mov faddl lea pusha push adc mov and and add int3 js mov mov pop adc jns inc and pop rcr sbb fsub jecxz push (bad) hlt xor js (bad) sub pop enter rorb jb sbb jae mov cmp push rolb inc xor or jne push pushf mov repnz cmp add and or scas fcmovne in xchg fdiv push mov clc and and sub mov js shr fsubs in aad cmp add dec ret fdivrl out jbe add add sbb dec fwait pop ficoml push inc sarl mov push sarl outsb fucom inc or rcl jnp or pop push cwtl dec les (bad) and and jne jno lods pop push pop sbb iret imul orb xlat adcb inc and mov add fbld push jmp mov pop sbb push shld pop and insb add cmpsl mov push push xchg or mov mov add int3 je fiadd pop push (bad) mov jle mov push in add sbb test mov lcall je mov adc add jp aaa in fsubrs lock daa sbb cwtl loopne jl adc add add scas mov and nop movsb mov add fnstcw scas pusha test pop icebp mull lods js ja lods jmp cmp aam sub fcmovnu dec adc cs nop lods subb mov or adc xchg mov push addb lods rolb repz (bad) repnz pop test adc sbb orb push pop add pusha dec test nop aaa mov sub sub dec pop push add mov push or or faddp adc dec divb push jg fcompl out and or vmovaps loopne test pop hlt imul popa mov add in inc jb sbbl stos push jno adc add pop dec outsl and add push cmp mov dec jp add inc repnz test scas cltd inc sbb (bad) mov push sub mov xor xor xor addb mov add out xorl push xor daa mov dec xchg sbb add test (bad) outsb test push inc mov fs adc inc js or mov push inc xchg pop bound test sub and aad mov add push push jns rolb jae insl cmp add es in pop adcb test daa or add jo add cmp hlt add inc jl pushf cli lds je add orb cltd je jno gs inc jbe cmp sahf inc fildll mov je jnp adc xchg or fwait int3 int3 int3 add pop mov fisubrl jbe lods sbb int stos aas mov inc fsubrl push daa push cmp add icebp cmp jle pusha gs subl pop push sub add push shrb xchg pop lahf ret adc sbb cmp movsb ja adc movsl pop roll pop hlt sbb loope ret scas and das rol jns js sbb in adc in xchg cmp push icebp fmul jmp push je clc inc es or icebp push scas (bad) enter add jae adc sbb je ret mov sbb mov mov fs pop xchg loop sbb out pop pusha jle jno fwait into cmp cld roll sub add lods mov nop enter idivl add daa mov xor rcll pop test (bad) jmp push cmp add movsb andl mov addb movsl push push add (bad) call mov mov add lods pusha sbbb movsl add add (bad) popa mov mov sbb or pop fwait repnz (bad) ss les cwtl adc inc and add push mov push inc gs jmp aaa ljmp dec cli lock clc cs fldln2 inc cmp xor xchg aaa sbb add dec mov scas add inc push cmc stos mov add sbb add icebp fdivrs and push fisttp punpckhdq jmp aam adc pop jne aam stos mov cmp pop mov or das push mov xchg insl mov bound adcb (bad) stos dec pop clc and dec mov sub lods inc jl jp mov mov enter pop cmpb sub outsl dec or cmpsl inc std xor je inc out sub xchg dec cs jecxz pop and xchg push inc xorb cwtl int3 lret or pop cltd push xor fwait lret shrb push xchg test leave add (bad) pop rcll or jmp mov push mov clc add jl push out daa add mov dec add mov inc into inc and mov inc dec clc (bad) faddl or pop (bad) jge test (bad) cwtl and inc push inc aam test sub add scas pop fdivl mov ljmp and adc loopne and adc push push push repnz daa rcrb pop and jae hlt fidivr (bad) mov cmpsb mov int3 pop sub xor hlt and (bad) test out in sub cmp lahf mov mov pop test pop xor add clc pop cs mov mov pop lds xor mov xchg cmpsb ret add inc addr16 jg add mov adc js mov mov shr and mov and pop cmp push js add daa (bad) (bad) push test add push inc pop pop sbb clc sbb fldl2t cld or cmp loop add hlt sub scas loop add pop popa shlb sub add dec xor int3 inc pop movsl cmp jge adc mov call scas fist cmp add icebp or adc int3 sub les mov xchg or jbe inc adc mov movsb add push mov add cmpsl mov add (bad) mov adc and jge push rcrb inc rorb and add or add mov shll lahf add lcall sub nop cmc xlat lods movsl mov lret add or cmp (bad) or sub mov jno xchg add fs jne or mov cld pusha pusha outsb mov xchg idivb clc mov lea xor (bad) cmpsl bound out add out (bad) leave mov incl add mov and xor dec mov lods push mov fwait xchg push pop inc test jo das cs sbb mov shll add dec mov (bad) nop add inc jle icebp and adc andb add cmc pop lods lret movsb jecxz adc popf adc and daa sbb jne cwtl mov or push pop add xchg lods xchg insb out mov ret loop add fimul popa loopne mov and sbb xchg mov mov imul push xchg std add test add stc mov adc xchg add sbb mov add pop arpl and (bad) sbb cmp xor add sbb es fsubs ss adc pop test sbb push add sub int3 adc sub pop dec mov add lea int mov add mov stos push cwtl scas or xchg pushf rorb add sub adc mov cld mov pop add dec jns aad push add push cmp xchg movsb imul inc call cmpsb stc lcall pop pop ja and push js and add xor mov test call loopne bound pusha inc lock adc dec add (bad) jo add cli nopl dec mov adc or ror pushf les and cmp jmp (bad) scas cmp rolb pusha and adc jns dec inc subb icebp adc or test aam int3 mov (bad) (bad) aaa add add aad pop add adc lcall inc or in adc add movntq loop push add add push mov ficomp insl (bad) call inc pop imul bound push sahf int3 inc push or pop add push adc mov popa and shrb add fiaddl push stc mov push mov clc or push (bad) sbb and in sub adc cwtl int3 inc ror (bad) call dec scas fcoms dec add pop push enter andl sub pop fisubr in adc dec sti rolb cwtl pop xor sub inc sbb add in mov mov adc das push dec inc add enter mov adc sbb mov add loopne and jo andl cmp (bad) in lret dec je and xor lods gs cmp sbb jmp call pop xchg test and mov xchg lods xor inc add cltd add fs adcb mov dec xchg add fdivrp les jecxz mov sub in xor pop adc lock (bad) icebp gs je sub and es ja repz push aaa bswap jb pop jo ds arpl jecxz cmpsb pop push push aas mov xchg push out faddl rclb push (bad) sbb outsb cmp popf dec xchg dec xchg adc in add and jl and data16 cwtl adc dec and movb mov add aas mov push call pushf inc cld jge loope xchg out imul fsubs adc add inc jnp orl add cmpsl jecxz pop dec push loopne rol add adc leave inc dec jnp add push fs nop loopne mov movsl imul lahf test (bad) fcmove sti fbld pop dec movsb and sbb xchg push xor fs add out nop js push add jne aam lods mov subb adc xchg add mov mov out (bad) and inc test lock sbb sub test sub test xchg dec icebp adc sbb cmc fwait ds mov aad (bad) mov dec jg add pop fsubs rcrb xchg xor sahf fldcw jne jl jnp sbb and clc jb push sbb add jno es pop daa mov mov mov pushf jbe cmp push lock cmp adc adc je in loop loopne repnz int3 cmp add sub push iret (bad) outsl movsb mov sbb insl push push add push add or sub xchg mov xor jle adc mov lret cli enter les xor sti mov clc ret test cmpl pop lea cs stc das mov mov sub stos int mov xchg mov stos adc fs sub push test xlat (bad) pop outsb or sub sub js sbb fidivl loopne cmpsl cs faddl enter add mov jl fidivl daa dec mov jl mov sub loop add xor (bad) xchg inc loopne fs add sarl aaa sub jne push and inc mov pop push xchg popf pusha adc pop faddl das mov shrb lock aaa mov and cs sub lahf rcrb pop sub bound jne fstpt outsb mov fwait adc scas loop movsb movsl fwait dec sbbb cmpsb nop push xor adc mov js adc pop ret stc dec jo idivb das cmovge xchg out mov push lahf inc popa (bad) jb,pn xchg cmp (bad) and movsb dec cs pop pop xor icebp pop lahf adc rcl je adcb or pop or pop pop xchg add or aaa and scas icebp sub js or ljmp incl loopne shrb push out shlb js xchg or (bad) inc in xor adc xor push mov pop jp mov ret hlt dec push enter test (bad) sbb inc jae add leave (bad) sbb mov data16 add mov and je add push (bad) push dec fwait int3 add test dec inc jmp xchg push add mov jge loopne pop adc adc add xchg or movsl ret push outsb push and adc es xchg sub or jge int3 inc pop jp pop cmp les and mov add jno inc pop mov rclb push cmp addb mov fs sbb pop imul or rorb mov jae xor mov out and and subb shll jne pop outsb add push and or push rorb scas fisubr cmp xor mov pop loope pop fidiv push add push dec les cltd je add push imul pop fbld (bad) hlt movsl inc push pop mulb and jbe xchg pop loop cmp cmpsb pop xchg push dec xchg cwtl inc jo inc cld enter and rolb sbbb sarl jne lods cmp cmc sbb pop fidiv mov add fcompl pushl pop mov mov loope push test xor fmull mov inc das xchg sub stos and or popf sbb mov jno push in and clc add lds adc jnp movsl in (bad) cmpsl cmp dec mov jno inc mov cmpsb stc out fiadd push mov mov addb sub fstp pop and pusha outsl leave add xor imul aad rclb or mov jl adcb call dec aam dec add inc cld (bad) mov icebp add xchg xor es xchg add je mov push add inc pushf push cmpsb adc sub jbe cld add add mov enter test cmc (bad) xor mov (bad) pop pop popa xchg dec pop adc push and outsb pop insl sbb sbb into add xchg int mov pop loope sub ja (bad) test fisubr push jne mov loopne (bad) in pop and jae cltd jo add aad cmpsb sub in test cmp mov add sbb pop add jbe jne adc push pop cmp cld add in cmpsb add sub xor pusha push jb adc nop xor pop popl cmp mov add fstps mov push mov stos rol sbb add pop loopne adc mov hlt pushaw adc or pop mov call pop inc in inc lea push int3 xor xor mov mov pop inc (bad) out lret outsl cmpsb clc adc daa int3 pop movsb pusha cmpl push dec pop call push or je push xor pop loopne imul cmc mov dec push sbb xlat mov data16 and imul rcrb mov ds sbb mov nop test dec push jle and cmpsl daa mov or pushf iret (bad) mov adc xor sub pop add and jle mov mov add je addr16 cwtl movsl cmp andb rclb or dec jo dec (bad) jo add mov lock mov sbb loop xor lret push pop and (bad) repnz lret jg adc cmp and push (bad) mov push loopne jo add lea sub xchg ret sub nop mov inc add and fbstp push lahf loopne xchg mov mov es aad and and lahf adc add ss jns push fcmovne add mov pop movsb add sub test stos xor inc and in push jb sub sub mov call call add or cmp push ret push pop pop mov jge or ljmp and sbb add sbb cmp rcr add pop out mov and pop dec xchg mov add xchg jmp mov (bad) adc lods orl sbb mov inc ret xchg cwtl (bad) mov mov imul inc rorb pop push mov adc aas fsubrs cmp mov cmp cmpsb test test lcall pop rcll jbe push aam loopne mov aad cmc add push lods clc sahf mov pop sbb push pusha dec xchg test mov add sub das mov inc cli dec lods in cld xchg aad fiaddl push push inc lods lcall (bad) cmp mov fmull jge sbb (bad) sbb dec nop and js js dec arpl bound sbb inc push (bad) jbe icebp lock add mov sbb add pop adc fmul fsubl popa cltd out repz jbe mov add ss add cmp push popf sub lods inc cmc pop int3 in pop dec pushf cmp add rcrl aas mov mov outsb call (bad) call pop and int3 fiadd ljmp dec test orb sarb sbb add ja call int3 ljmp and mov (bad) mov cwtl js jne cmpl pxor and call push add jecxz (bad) iret (bad) jo call sub mov jb push pop loope add adc sbb jb add dec dec or cs insb fsubl xchg ficoml ret std xchg adc or xchg push shlb ds scas or inc jns lods nop pusha mov ficom pop or outsb insl xchg nop add adc and push adc (bad) (bad) mov sbbl and mov (bad) mov in aas dec push mov cmpsb (bad) push push cwtl bound stos sbb inc and pop aaa rol pop sbb js mov add pushf cmp popa xchg xchg mov lret sbb out int push movl test call fisubr jecxz gs stos imul push inc sub pop or rcrb xchg add sbb scas fadds add ja enter adc cltd inc xchg fildl pop inc xchg adc cmp negb push cmp dec scas push pusha (bad) add in fadds ljmp inc add repnz cwtl xchg andb shrl cwtl xor add (bad) aaa mov lods add dec sbb sub pop and imul pop xchg imul and xchg mov ss or imulb movsl xchg pop movsb or repz stc mov cmp add cmp add adc push and mov pop and rolb dec enter sbb int3 je inc adc pushf add inc hlt loopne movsb mov jnp push rolb repnz pop in add loop pop cs cmpsl aas (bad) in cmp js sbb shrb je dec loopne add push jne mov lcall or test mov jo loopne pop push jne jb test addl push daa outsl sbb mov nop xchg stc pop xchg xchg sub mov adc sbb jae mov cmp mov sbb cs shrl xchg mov jp loopne inc xchg mov (bad) fstl imul jp sub das inc je loope pusha and add xor shrb (bad) push adc pop loop pusha int3 in lret pop push and and in dec sbb setp and sub jb and sbb mov mov push aad out or lods sub es and das cmp push daa push and clc jne pop jle mov es int3 jbe enter pop pop adc push lahf testb ljmp nop addr16 add inc aad nop inc or mov or fildl mov push add pop mov adc sub add lahf xchg cmc mov add in loopne dec icebp sub movsb lock pop pusha and frstor pushf test inc inc jl adc ret clc push sbb popl push nop (bad) mov fld1 pusha dec jecxz cmp dec movsl test es jp (bad) arpl adc (bad) les push dec push dec mov mov add push inc lret subl lods fisubrl pop pop xor and rorb jo fsubr sbb cmpsl inc sub pop dec xor adc int3 xchg mov pusha push imul xor xchg loop or and add in push lock mov movsl cltd add or mov aaa jne jmp movsb cmpsl sub cmpsb aad and add jo ss stos pop fisubrl adc aad xor pop push fmulp mov or idivl add mov test sbb popa ds cmpsl (bad) arpl pusha je adc xchg mov and sbb push int3 jb inc push stos sub cmp mov les hlt xchg mov xor pop inc adc test mov test sarb push inc or mov push mov push adc add out insl mov outsb popa hlt (bad) or add js or and push sbb add push sbbb repz mov add mov or adc rol dec lea xchg nop gs test (bad) out xchg int3 pusha and (bad) adc dec cltd sbb or xor into sbb sbb mov jo mov ss mov mov mov sub xor fwait push (bad) jmp jg shlb rorl pop cwtl int add in loopne xchg or sti (bad) icebp mov add pop xchg xor pop addb sub lds mov sbb push ja or addr16 cltd sub fstps jo sub (bad) lret pop (bad) dec or int3 mov xchg sub mov fs jg sub loopne xor and dec ja pop fcoms adc nop mov nop loop (bad) jnp add pop test pop add xchg push call call fcomps mov xor fsubs jbe repz inc jne push es mov pop loope aas dec push cwtl les repnz adc mov (bad) push (bad) sub mov xor push fs sub mov dec in ja mov rclb jnp sub sbb and sub lock icebp movsb adc sub pop sbb test mov sbb test hlt mov dec cmp jo xor pop and cld push cs pop imull xor lods xchg mov inc jne test fistl push call int3 or in dec add mov loopne scas cmpsl cmpsb mull pop pop enter mov adc mov enter adc xchg inc lcall shll push cwtl adc dec pop test mov jnp cmpsb push add xchg push adc addr16 pop les mov (bad) mov insl cmpsb add or loop mov mov jnp fld1 ds mov add jne loop jnp pop pop (bad) and leave add jl cmp pop cmpsl int push cmp inc movsb adc add mov fisubl cmpsb jl push xor cmpsb adc mov out pop cld test jge add pop pop push out adc xlat (bad) int3 jo aam pop adcl stos cwtl or loop loope lret enter add loopne xacquire nop out lock out xchg push mov (bad) in pop mov or jl pusha aam push ss jne push lahf in mov imul bound scas in and pmulhuw cmpb lea fisub fmull pusha (bad) fstpt push mov sub push mov ljmp div adc iret sub (bad) fsubrl daa mov pop pop jne xchg cwtl mov inc sbb scas adc add jecxz mov repz out hlt fisttpll (bad) lahf adc retw add push fcompl lea stos imul aad loopne pusha and cmp insb popf inc or clc fabs xchg xchg (bad) sbb add push int3 jp out add mov and ret cmp lahf mov int3 dec push jp mov bnd fcomps pop pop mov mov jbe,pt add xorb test test jl cmp mov lea pop cmp imul (bad) (bad) mov mov hlt iret imul pop add scas fistp add pop mov sbb sub pusha mov sbb mov sbb sub and jmp adc jg idivb pop fild rcl inc daa lahf dec and add scas adc (bad) ja cld stos add clc icebp jo sbb jno ds add es cmpsb js scas and add call js aas or add in adc pop rolb lock test cmp pusha mov pop push jo test int3 cmp dec das lret jb sar negb cmpsw aas scas shrl or shl lret test jge js dec push inc (bad) mov add jns add rorb and and xor insb rcll cmp cmc or popa imul pop call out push xchg lock leave pop dec lahf enter or clc xchg xchg sti aad (bad) xor aad addb ja add (bad) decb cli cld xchg mov xor stos add out add js div add push sbb push pop jae loope add cmp js inc lock push mov scas lea (bad) sub mov add mov mov pop pop rorb pop pop push mov pop xor cltd add jns xchg in dec push add (bad) mov aad pushf sbb dec flds fsubr xor cmpl fcmovb push ja push add adc sbb mov imul rorb cmp stos push xor add aaa mov mov dec add mov jbe pushf cltd loopne sarb add lret dec fcoms outsl pop add mov inc mov fcomp and outsl scas test and pop xchg add leave mov fcmovnb cmp push mov leave pop lret jo sub cmp xor fiadd mov addl out push outsb dec push clc lods adc cmpb mov in outsb jbe inc pop ss cmp pop stos adc add xchg cmp and xchg pmuludq sub arpl out addb fstpl lret std aas cli ret add jl out push adc add mov or push out cmovno lcall insl inc push test dec mov xchg push rcrl and add sub mov std pop in mov in and push cld inc xor add xchg mov push fidiv scas aas movsb and mov mov movl dec mov in adc sbb je inc cmpsl icebp call mov rorb adc fstpl je outsb icebp rclb insb pop pushf cmp mov clc cmp add sarb push pop sbb and outsb or mov decl add dec stc out mov daa mov add pop scas mov rclb mov add dec (bad) jle rclb push push jge pushf and inc repnz outsl test and out mov push and jne sbb lock push stc mov xchg lea add mov xchg pusha jle xrelease xor enter xor out add mov sub nop insb inc cli std push xor dec cmp and mov sbb push mov or dec push inc add sbb popa pop sbb xchg jbe sbb add mov push int (bad) mov dec jle jg les out roll fmuls mov jb cld jecxz add dec mov jg jns pop (bad) lods pusha je ret pusha js cmp std push cld dec dec mov ss mov icebp sarl lods and dec push mov sub add mov inc out xlat push mov out es push mov inc fcmovne add in mov adc (bad) sbb dec popa sub imul mov add shlb insb jno mov push mov xorb jmp dec jle jns movsb sahf or inc nop add cmp cli pushf inc addb stos pushf add xlat cmpsb or and in add je jo loop out js push aaa or (bad) fcoml cwtl dec loopne in adc push sbb push cmp jns add pop mov dec mov push sub (bad) jl add pop bound xor xor push mov inc mov xor fadd sbb dec push add pushf fsubrl js adc sbb jle lock clc cmp outsl jge sbb imul (bad) cwtl jno pusha push xor sub push and imul int xor (bad) std ja or xlat mov inc das std ret lock es loopne xor rolb xlat mov cmp pop sub icebp test mov call in gs popa add jg pop scas pop cmc add inc aaa imul fdiv inc lock jmp add jb leave cmp add (bad) jecxz adc fidivrl cmova repnz sub jo fdivr add pushf dec xor push test mov mov pop xchg mov je repnz int3 mov lods add push dec jb loopne push or addr16 inc sub aam shr loope xchg fdivr adc arpl fimull int dec and inc add lds rolb pop push and cmc cmp dec (bad) push pop push sbb push jge push das rcl sub dec test sub pop shrl jl push inc mov and ja setp dec (bad) int fdivrl lock push and mov pop (bad) lods mov or jns shrl add mov les adc repnz add test (bad) pusha sub dec mov push pop mov hlt in mov xor cmp lods in push imul cmpsl mov (bad) xlat jle ret not inc adc cmp fnsave cmp clc inc add (bad) mov out std and sbb sarl inc dec stc clc cmpb or xchg dec imul pop in pusha sbb cmp jg inc fidivr fsubrp or lods nop je mov loope xor mov pushf loopne xchg push push in fadds dec add pop mov lahf es push pop sbb add or xor jbe add add insb adc jne inc and ss shlb fdivrs mov add hlt add ljmp loop adc dec hlt cwtl dec inc rolb sbb add jns add inc stc pop fbstp lcall cmpl pushf add xor cmp or push mov es and int3 nop shlb repnz les cmp add add or xor xor adc std and in test xor push int lock push in orl (bad) invd je sub pop out int3 xchg or lds in movsb adc movsb dec push push mov ljmp out out inc and (bad) jbe adc cmpsb cwtl dec push add mov movb (bad) in enter add (bad) mov sarl call push loopne je push mov sub int3 sbb sub mov loop jns xchg pop test int3 hlt mov inc cs test jo sbb jl psrlw test fcompl push or adc shrb ret cmp mov push fsub je pop into (bad) stc pop aas sub lods cwtl jo int or add in dec fcoml add clc pusha xchg cmpsl jb in xchg lods daa or test cmpb pop loop out add addr16 ljmp add in mov and ret sbb mull je jns cs (bad) dec push sub mov pop xchg mov mov je shll ljmp enter call enter hlt jl adc dec nop test mov xor add (bad) (bad) in int3 pop fnsave dec aaa popa mov jo xor loope (bad) push jo fadds call imul xchg inc rcr or sbb imul scas pop in loopne inc mov fdivr movsl adc mov fcompl mov xchg mov lock mov pop leave enter xchg xchg mov push pop call test mov out inc mov mov loopne cmp ljmp add cmpsl ss inc jle sbb into ljmp or push enter bound and call pop mov sbb adcb outsl jnp fcmovu cmpsl fcoml mov scas mov mov cld xor test ljmp stos pushf xor inc adc jno inc xor je inc jle adc xlat jns,pn in icebp add pop sub shll mov cmpsb jb cs pushf add or sub out in clc xlat push fwait jo add xchg inc or xchg rolb hlt jg clc lds (bad) mov fbstp fcoml xor jo test fildl and cmpsb outsl popa adc jl and addb in dec and (bad) in or and sub mov jmp bswap out push clc xor popa inc mov aas out jl dec xor cs push sub jle jae cli cmp rcrb inc mov in xor adc adc lock loopne lret nop imull adcb fmuls jl dec lods push xor push xor scas mull adc nop loopne loop dec xchg sbb mov or push in fdivs push pusha sbbb leave dec (bad) adc sarl (bad) adc inc inc xor stos sub (bad) adc dec pop fcomps jle pusha inc je push lods add cwtl xor dec add and mov push orb pop clc fdivl shr (bad) mov jp fisubr inc rep pop adc pop push imul cmp dec push data16 xor test dec push pop and lret push sbb fdivrl rol dec sbb add dec data16 inc pop add inc push xor nop insb cmpsb cli pop or insb push into mov xor sbb ds incl cmp mov pop cmp addb add or out cmp mov test sub jmp xor inc dec fsubs test dec (bad) push jmp cs fdivrl mov pop add test cmp js pop push xor mov push and cmp jle pop out fdivrs and lds adc inc sub add (bad) lea ss fdivl jbe lock adc lret loopnew cltd (bad) push pusha add dec dec jecxz sub add mov jb jnp mov cltd jo push nop test push push jmp and (bad) je and ret sub add xchg xor inc xchg sub and lea cld and daa xlat or (bad) xor stc inc sbb sahf repnz add cs or jmp shlb mov add mov inc pop mov add addr16 clc frstor sbb mov xlat dec mov push mov mov adc sub fs and icebp add faddl enter stc aam out movups fiaddl mov and and enter aam lds sbbl pop xchg in pusha mulb xchg xlat dec mov cli adc push and inc mov scas (bad) push cmp adc add inc fmull loope pushf dec xor sbb xchg xchg or adc add imul dec iret dec cld sarb les dec test mov shrl dec lods pushf or pop mov fdiv fist and jl hlt nop rorb cmpsl fcmovb push mov cmp mov cmp pop and dec mov js mov inc xor cmp sbb fisttpl lods arpl test add mov jne data16 mov inc or ljmp imul popf (bad) mov pop pop jmp dec test jbe cwtl xor rclb addl push dec pusha cmp dec outsb xor add pop jnp push xchg dec xchg dec add jmp push dec fmulp sub lock hlt sbb xlat mov push pop mov lods les add inc add jo in jge cs push insl loopne push mov test lds sub mov in push jecxz rclb or xor inc xor inc rolb popa ds push pmaxub jge fbld or ret jmp mov push ljmp inc sbb call leave cmp icebp add mov rorl push mov xlat loop outsl inc lods inc popa add lock ljmp in stc cld add int loopne mov ret pusha mov idivl enter xor gs and js out jg pop fnstsw insb mov addl dec cmp mov hlt add sbb add insb mov or jp lods cmpsb mov add sbb cld es xchg push and je sbb dec push std cmp fsubrl out mov add dec xor mov jl xlat cwtl aam mov sub mov div jp and outsl or ss xor les dec lods movsb push loop fcoml xorb out test mov jg lret pop jecxz fadds push dec adc or lods cli imul shlb pop dec cltd jecxz mov xchg xchg dec das or jns pop cmp xlat lds test arpl xchg mov push in gs icebp shld mov mov adc push daa mov add cld repz cmpsb sbb sub out sbb xacquire js pushf sahf pop mov add push inc mov test dec psubsb lret add fiadd lahf xor imul popa add adc loopne xchg pusha and inc push aam out andb sub inc jmp addr16 mov js daa or (bad) add dec test incl aam mov mov fsubr adc out loopne add fidiv stc add insl adc mov pusha rolb (bad) sub pop lret cmp push cmp mov mov loope mov adc incb mov enter push loope xor (bad) add test mov test or notl mov fmuls add dec jbe add jge int3 or arpl adc xor add lods bound popa or mov add add xlat xchg adc lret lods popa (bad) cmpsb sarb shrl in les daa xor cmp out aam pusha xor inc in lahf push nop push or xor fisubrl sahf nop loopne pop aas mov xor inc test pusha sbb add mov (bad) leave fistp sub sub add cmpsb inc and adc pusha das sbb adc jnp repnz sub in xor xorb xor sbb jae or les js add mov stc or leave xor inc in add xor aas fndisi(8087 cld inc or outsb push rorb int3 add cmp loope out rol xchg xor jne mov popa sub or stc xchg out popl cltd repnz mov fwait bound cltd push add dec fadd xor cmp repnz add bound in roll and mov imul in push sub mov pop enter call cmc test in lahf push mov jo jecxz enter or call addb clc mov dec mov push and rolb and rcrb sbb dec lahf pop add dec push scas clc das or in inc add orl and inc (bad) rorb adc pop cmp push push shr rolb int3 imul and add or nop and mov out (bad) stc aas call or mov xchg jno or icebp mov sbb outsl mov pop enter pop adc (bad) repz call pmaddwd out out incb mov jne out out sub arpl add push inc pusha ss (bad) (bad) (bad) pop loopne xchg sbbl push gs std imul sbb push jmp les and daa xor imul xchg call imul sarl add insl fs imul xor imul sbb mov outsl and loop add pop xor pop enter add mov cmp (bad) lock mov xor insb dec rolb loopne fild dec aam or ljmp adcl jbe or repnz xchg add or inc jle or sbb mov cmpsl nop mov fmuls aam daa es stc mov cmp js in int sub movsb jmp add fmuls pop xor enter fiadd aas test lret mov add add imul loop enter shlb or mov xchg je mov xor mov cmp je cwtl (bad) dec xchg jo dec sbb pusha fimull push xor jnp sbb pop fcmovne inc or push aam repnz and jbe pusha add push sbb mov or ficoml fwait mov push popa ret or shl add (bad) mov cltd and stc in mov add lds xchg mov incb pusha pop cmpsb pop jp pop pop cmp mov add iret negl test xchg leave es or movsl jecxz adc cmp fsubs nop loopne cmp popa popa xchg and pop push mov xchg mov xor (bad) cmp pop inc sarb jp insb dec inc fcoms mov sbb push loop or mov insb imul sub enter test sub es in pop lcall mov imul test pop inc and scas add aad addl pop jl inc nop sarb in and shll xchg mov into mov pop jb lcall mov add (bad) sub mov mov test cmpsb dec or loope fisttpl loopne sub pop and lret cmc mov xor pop clc inc xchg inc xchg in shll mov std mov inc repz or sub xor lods jnp aas js push sti or dec pushf add cmp (bad) sub loope or mov cmp js and pop into int add inc push or imul pop js or xor lock add mov stos mov int test pop rclb repnz ret mov dec add sbb xchg sub xor adc sbb outsl aad jecxz sub dec mov orb imul les sbb jl adc sbb mov add inc sub cmp sub and xchg outsb mov std adc cs inc push addr16 imul pusha mov mov lahf jle or sub sub out add sbb ret pminsw call loopne push lock mov leave dec adc or xchg movsl cmp (bad) jb jmp mov leave sub or and mov add popa (bad) int3 in aam rorb rolb in push (bad) dec pop cltd push in sub xor (bad) pushf push xchg loopne les and push xchg enter aas ffreep xchg das fwait xor (bad) outsb dec or les jle (bad) push and jnp imul cwtl inc mov dec jae cmp jno adc cli and xor rorl loope fmuls cltd adc mov add stos jp sbb lea xchg lahf lds addl pusha ret jl jmp and add insl (bad) cltd mov or push adc or fildl jg insb xchg es add imul push (bad) add mov push movsb mov test cmp jle (bad) and stc fisttpll mov sarb sbb cmp xchg xor je aaa int3 add mov outsl dec fisubrl add ret add add inc pop lret add jle popa es jecxz adc stos fimull mov sbb das cmc cmp or xor jl pusha maskmovq testl ds jp cmpxchg leave dec or pop mov test add jmp leave mov repz (bad) and adc cltd and icebp jl cmp push xor loope sub fisub adc jns stc pop cmp jo dec adc nop mov hlt daa sbb and push cmp in inc mov out mov popa inc dec cmpl adc pop fisubrl pushf cmp pop jo add sbb daa out or xchg dec jbe ror xchg xchg mov imul mov jo scas cmp xor or add stc add add and in test cltd pop scas pop sub sbb outsb mov les outsl jmp add jge xor pushfw shll or mov inc xlat or pop add mov lds push les cli dec jecxz add inc sahf xor jp xchg or (bad) repnz xchg xchg sub sub imul adc insb dec push add orb movsl pop sbb xchg and ret or jl and pusha jnp sahf rclb and mov stc push and mov fs sub jne sub out add (bad) sbb ret sub into dec test (bad) cld and xlat dec push adcb pusha lds (bad) jo lods aaa mov or sbb js pop dec je inc or add enter insb pop ljmp cmpsb lock in aas out and fdivr sbb mov pop ret test sbb or mov js leave xlat jb cmp aas mov ljmp mov jne mov hlt cwtl or pop cli lahf rcrl je daa dec stc and jae aas adc arpl add jns lcall imul pop stc cwtl fist dec (bad) jmp dec mov pop xor mov add or leave in or daa sar push je stos jge fstps add lock cmp add sbb sub lods cmpsb loop movsl xchg cmc int in lret pop push jp push xor hlt cwtl sub ret (bad) std sub sub push je or pop in add lods test sub fmuls xor jp xchg xchg andb pop cmp addb test pop adc adcl js xchg xchg iret add scas std cmpsb pop mov and arpl inc sbb test jg lods or popa out in and mov or dec or add test prefetch sbb add pop es scas mov inc sub add push push sbb in pop or pop cmpsb jmp les inc rol stc dec rcr out adc fidivr cwtl (bad) ret pop xor test sbbl jo pusha mov loopne jb aam add fdivr ret add std add cmp pop lods add xor or cmc mov mov int3 jno cmp mov jno ret lret pop xchg je add lods pop push (bad) rolb sbb ds stc or jecxz aad (bad) or popa enter movsb in sub insb nop xchg (bad) add dec data16 clc decl nop dec or push test movsb xchg cmpsb fimull mov push adc mov movsb pop lret inc and inc push shlb dec imul jg push pop fist adc or cmp push out popa add out sbb jns imul lock or jl imul sub sbb adc cld or pop xor or test rolb popa pop dec add test popa sbb inc cmp add sbbl sbbb adc sub loop add stos (bad) cltd xchg iret inc xor inc and arpl sbb fsub shrb xchg pop mov add jge rcrl pusha pop push lcall xchg adc adc enter mov add or inc cwtl add movsl (bad) push test std int sbb ret fisubl test mov add sub lods ja add mov test lock (bad) fs ds pop rcrb mov sbb push js and jle xchg sbb std sbb cmp cld cmp add movsb popf and pop push pop push clc mov out or pop push dec sbb xchg add bound rolb mov sbb aas or shlb sbb and adc add fstps jo cmp std pop push hlt (bad) aad ds add add add pop out (bad) hlt pop cli aam sbb jle dec shl xor clc mov pop test nop dec cmp xchg xor inc push shr adc add xchg mov add sbb test push or imul cwtl pop lock or push mov or fsubl incb mov adcb push or faddl rcrl sub paddb nop push and outsb rorb pop add scas xchg and cld repnz cmp sbb (bad) mov fcmovbe loope add mov sbb pop sbbl lods lock nop jl test js,pn mov enter dec mov add sub nop or dec (bad) mov or cwtl pop cmc push andl mov movsl or xor sbb push or sbb rorb inc dec xor loop or ljmp add pop pop mov mov adc test push or or shl aaa and es and (bad) imulb lods emms mov nop add xchg xor mov add lahf rorl inc or mov mov lock sub inc push nop rolb icebp sbb das rcr daa and int3 jmp cmp and sub and pop clc add js adc cmpsl push adc pop imul cmp ja loope popa mov out mov fiaddl icebp movsl (bad) cmp push xor push nop add stc aad xchg xchg popa and (bad) dec push mov lods mov (bad) cld leave aaa xchg add in adc in sub test cmp push int3 sub jno mov pop ss xor (bad) hlt jno adcb inc inc jmp movsl fs call xor xchg pop mov movsl int call cs aam shll (bad) mov or push mov add mov mov clc mov sarb roll sub dec push mov jbe mov or popa lds cmp pop fidivrl jns out adc add push cmpsl arpl mov es in add xor scas jle sarb rcr mov add xor fldcw test loopne popa and lods pop flds or xor xchg cmp jo and popa add xor mov add adc cmp sbb movsb (bad) out cmp xor cwtl and shlb push scas push push jle sub cmpsb inc push lods cmp push jl add cmpsl adc in aam jns mov adc push test aad bound imul mov movsb fs aam or les sbb (bad) adc push inc dec popa and adc and inc sub shll dec int3 nop stc imul xchg add nop popa mov cmc mov iret outsl pop fstpt idivb popa mulb call adc enter sub mov xchg movsl and xor dec cwtl push xchg lock lods pop and cltd adc and inc scas lods inc adc push or adc inc xor mov add mov or lods xchg pop sbb mov popa cwtl loop lock sub sbb cmp dec cmp popa fildl hlt les pop mov movsb dec push lret flds or popa icebp xchg sub out add sbb xchg mov sbb flds push xchg xor mov xchg add mov mov push or sbb dec push rol andb jle mov nop popa push cli jo jo cltd fdivrl mov cmpsb lods enter adc imul adc aad cmc xchg mov adc or xchg fcmovb dec mov push xchg lock xlat push (bad) xor pop dec mov mov hlt fstps sub jle and mov rcll adc out in add wbinvd sub inc popa repz mov add and push pop add add xor in xchg jo in lock stos xor test mov sub out mov movsl mov adc mov daa cwtl xchg sbb inc loop movsl xchg mov popa xchg rolb xor or jmp rcll movsb fldenv and scas shll mov and ror add movsb or ljmp cmp and nop push sub adc jne add mov mov lahf xor popa inc aam cmpsb aam xchg inc cltd adc or cmp xchg imul push lods cli loop nop or or adc pop clc xchg xor or adc pushf cmpl dec imul pop jno cmp push les psrlq daa out and (bad) jp gs xlat mov movsb push cld add insb inc js mov mov mov movsb sbb sub adc push lock in andb mov cmp xchg js sbb jae nopl in pop scas jge inc pop and sbbb ret or dec stos adc push andnps in (bad) sbb xor push adc jmp (bad) in sub mov out push rolb roll sub sbb out or sbb sarb shll sub dec std add mov pop mov adc outsl fimul dec cltd sbb rcll clc mov rolb adc jb outsl add sub xchg lret push test sub xchg js les mov sarl mov inc outsb push mov sub sarl add and sar clc push add sbb push (bad) movsb leave rolb stos call mov jno mov jmp leave xlat mov daa add push jae pop inc mov orb jmp xor (bad) lret cmp cwtl iret adc popf (bad) sbb rolb or xor shlb pop loopne cmpsl ror rclb mov cwtl xchg dec push push inc push insb imul cmp (bad) sub jmp sub fadds outsl adc push mov imul icebp pushf lock test popa js shrb test je jg mov cmpsb mov es sbb pop fwait push mov jno adc ds aaa shrb dec cmp movb movl lea cmpsb inc cwtl dec add add mov xor inc arpl push inc add or shlb inc sub cmpsl faddl pushf sub pop push adc push call jecxz push fmuls mov pop fwait add dec (bad) push int scas mov in sbb test rolb cmp js rclb or mov adc inc sbb jae dec pusha roll loope (bad) mov push or cmpsb mov adc mov push and sbb cmpb and mov enter xor cld aad add xchg jl cmp push in adc xchg popa dec mov jge shrb mov ret (bad) dec sarb pop inc pop jmp sub les sbb mov adc mov (bad) sub out inc dec xor add xchg pushf and cwtl mov add (bad) (bad) shrl dec and jae dec stos sub sarb lret jo call (bad) pop daa ljmp mov mov cmp sub cmp dec (bad) lds xchg xor xor iret mov dec ficomp popf add mov fcomp cmpsb aas push fildll jae add ficompl push push xchg xor add xor popf es enter xchg xchg mov push cltd adc dec inc (bad) mov adc test push mov rcl xor push push cmpsb or shrl loop pusha add fdiv lock and pop std out and adc scas es add add movsb std dec cmpsb ret sub stos mov and test testb iret enter xor out fs stc pop inc xor pop and mov call xchg dec out repnz inc or adc xchg add mov das jo dec aas arpl test (bad) sub xchg inc inc movsb ljmp add pop or stc in pop mov and adc dec ja pop stos je fwait out adcl loope rolb inc jl push test sub jg cmp js and or bound cmc loope cmp mov cmp lds jnp push fisttpl lods xor or mov adc fadds sub inc lock stc data16 cmpsb iret mov scas shlb sbb mov mov shrb fstl ret jmp icebp addl and nop adc imul outsb sbb mov mov inc pop (bad) mov xchg rorb xlat sub loopne pop bound cwtl dec lock and sbb add mov sub mov in cmp inc cld gs aad mov jle sub movsl add std int insl add push js push adc xor fcoml fcmovu test pop outsl aaa repz xlat scas pusha push mov mov std sub int sahf fs addr16 daa enter and xchg cmp cmp add js xchg sbb sbb jmp ret mov (bad) fiaddl push out enter cmpsb paddsb movsl lret adc xor divb jnp pop mov lds inc in movsl inc lock clc js lock mov out lods jnp daa add pop add add negb push cmp sub mov fcompl adc ret or clc sub shrb pop pop rcrl test call and ror and add jns xchg mov cmp cmp and nop add sbb ja xor sti fstpl pop and mov gs out addb (bad) mov pop aaa push lods js push jg dec push leave inc jl adc fs jno sbbl pop ret in adc xor shrb xchg test popa dec pop dec test stos insb add icebp movsl loop mov lock inc std fstps mov lret addl cwtl adc mov add push inc cmp sbb stc sub mov add les inc scas cld loopne pxor push mov or movsb sub inc and fwait adc or sbb jns xchg mov jb and les popf sbb or repnz xchg ds jae or imul jmp les sub jmp add sub not (bad) mov and jp fdivrs sbb dec push int lea sbb push jl adcb mov shr mov scas lret pop ljmp and mov cmp add xchg adc cld xor fsubl pop les cmp lods sub xor int sbb hlt xchg test scas (bad) ss nop inc insb pop add cmp sar sarl test mov les add mov popa in and in stos push push aam movsb fs xchg cmc rorl stos push or cld popa das dec mov int3 pop xor loope sbbl push pusha add js xor test mov inc add mov pop mov int3 loopne cmp ret loope sub rep jl xchg mov jle cmp and or xchg mov lods jo insb imul sub xchg sub mov sbb jns xchg xor clc cmp adc inc jo add xor (bad) xor int xlat sbb push sbb add rorb fnstenv add in lods ja add inc in (bad) xor pop (bad) enter and lret add mov xchg int3 lahf subl enter test or rcrl jl lea cmpsl or fwait add add (bad) mov sub push mov lods xchg pushf adc out mov mov gs in inc movsb daa loop repnz mov icebp in add (bad) mov incl add icebp pushf xor mov rorl imul pop adc mov mov pop mov pop repnz ljmp lcall (bad) ss cmp cmovae (bad) pop loope push repnz inc rorb lcall mov test popf pusha add adc push decb pushf xchg pop addb cld je mov and xor clc fidivrl sub push sub adc inc pop or vmwrite push loop adc or jge pop adc xchg pop xchg mov push cmp jo inc mov add xchg xchg mov add pminsw popa lcall mov and sbbl xor cmp dec fnstsw add rorb add loopne in add or cs lods dec mov (bad) ss fcomip push lods add loopne xor pop aad pop sbb ds mov jl cwtl dec mov stos loope inc pop sbb sete fildll (bad) xlat add xor push aad rorb fisubl je outsl subl js mov jb push int jp adc cs add aaa mov and pop xor (bad) out insb fsubrl add sub ds add test gs lods add fcom loope dec add mov push test add sahf rclb cmp push flds outsb popa fmuls outsl mov das mov ja add sbb xchg pop std shrl test add (bad) cwtl cs shlb lahf cmp xor inc xor stc push pop mov push push aam fistpl fisubr or js and pop mov inc dec mov clc rclb rolb mov or andb cmpsb mov fwait dec fsubrs dec incb testb adc stc xcrypt-cfb cmpsl fs bound dec pop in xor popa mov loope push dec clc or mov mov and inc mov add mov test add push bound add movl mov cmp icebp and adc xchg orb pusha xchg xlat push loopne mov adc adc adc sbb xlat push mov cs (bad) mov loope loope add push or loopne pop gs jmp cltd scas bound mov nop dec fstps add inc xchg dec xchg rcll dec xor add mov cs sbb pushf (bad) (bad) mov (bad) fmuls cli jle faddl xlat sbb add clc cmp push jl pusha dec xchg (bad) call sahf mov shll test sub lock add data16 jne and imull fistpl aas adc or inc xorl adc rcrb add gs push and lock movsl dec xor jg add and out add or pusha (bad) inc fadds pushf jo add dec test xchg adcl adc rcrb sub push int3 sub clc or jle xorl jae sbb push js rolb pop dec xchg mov dec and iret sbb int ret pop ds add sbb xor cld jno pop push xchg insl in test dec cltd mov add ds adc push mov loope mov shrl jo dec cwtl jne and pop cmp out enter ret mov (bad) mov js,pt add lods jmp arpl aaa fldt mov push test add mov mov rolb pop jb aad pop lock in push mov repnz hlt es mov xor dec push jge mov inc cmpb aaa dec clc xorb (bad) cmp je mov pop xchg js rcll pop cmp sarb add xor mov mov mov xor pop nopl scas addb mov stos push jp dec push shll lea or pop outsb and sub pop mov int3 clc stos mov push add aaa mov add iret push out pop rcrb cmpl aam cld pop lret sbb jne xor inc add mov lock or fs sub dec pop in push rolb push jmp and mov imul in jmp pusha lret push in push shr pusha sarl outsb (bad) and add call add sub or cltd or bound test test jo lea (bad) in add in ja jge lahf xchg scas pusha inc adc into leave lret push rolb and push pop sbb arpl or xlat and mov xor scas ds imul ja cmp add push fildll xchg rcrb lahf or jbe adc jle jae test out cmp xchg xor mov pusha lock push add movsb inc pop aaa fldl2e push ret sbb pop mov xlat add mov pop (bad) out xor xor inc xor and dec ds pop cwtl sbb in and push adc jecxz cwtl shlb xor cmc cmp ja rclb int3 jns xor inc aas ds ds add mov pop cmc mov cmp add loope out cwtl das cwtl test mov js out test xor inc jle shll cmpsl ja mov xlat sbb sub imul sbb stc pushf insl dec and or mov (bad) adc nop adc add out mov repz aaa rclb nop mov and das (bad) jo lods dec push mov and push push loopne fwait pop add lock aas sub mov cmc cmp fisttpl and xor les fcomip sbb add (bad) lret pop gs xor mov in inc (bad) adc mov or cwtl add test jp lods xchg insb add das inc cmp cmpsl movsb and xor ds jl push sti movsl test int3 pop cltd add push jno adc sub jmp rorb push sub dec aas sub inc or mov or inc dec inc and iret push insl and das mov push jae in sbb in and in and and mov roll xchg push dec or rolb je cltd cmpsl add and out xchg data16 test add lcall sub ret leave sub mov stos movsb lcall inc je out push inc cmpsl dec repnz xor add and xchg mov outsb and push xor push xchg insl cmp sub mov push test aas pop inc mov fcompl into std insb lret pop imul out and adc inc add ss mov fmuls inc or dec testb rolb scas scas xor pusha dec pop aad push xor loope sbb cmpsb xor jne xchg add xchg cmp inc push sub sbb enter cltd lahf xlat xor jmp sub jne popa adc mov add lret add das movsb hlt add popa out jnp aam dec in xor call ja test aaa jmp and es add imul dec mov jae mov mov mov popl or cwtl rclb cmpsb sbb push test ffreep cmp sub mov movsb mov (bad) add xchg lods lret mov inc dec add fild push out mov inc (bad) test or lods test sbb fwait jnp cmpb xchg adc pop mov xor in dec loope add xor es in cwtl dec adc pop insb ffree test xorb add inc movsb dec pushf adc mov shlb aas sbbl or test xor lret cmp add xchg mov scas xchg pushf adc jnp cltd nop rcrb inc and stc add fsubrs mov fwait adc sub sbb jmp add mov inc popa imul or fwait add test push repz cmp push out add or out push jbe pop imul iret rolb inc inc in cmp jp mov push mov adc add movsl cmp mov xor adc (bad) aas imul (bad) jo ret dec xor (bad) xchg xor lods aaa mov (bad) xor rolb sbb push dec adc je add es pop jns pop jae mov leave and (bad) mov in je in adc les inc jne insb les cld popa pop xlat adc ficompl pusha add adc lcall sub jle adc jnp push popa and cltd and dec aas mov jns stos arpl pusha mov sbb aaa out ljmp or mov xchg inc mov out (bad) (bad) scas fs ja in jae fnstcw jmp es jno push or push rolb test rorl icebp (bad) or fisubr fist and xchg add repnz fildll stc lds cld mov rorb subb (bad) cmp fwait mov inc and xor shl rcrb pusha test mov push inc add mov xchg or aam cwtl dec dec test pusha nop add lock ja dec adc js shrb xchg or pusha or movsb or movsb adcl inc and add idiv lcall jecxz lret fs or sbb test aaa les jnp adc and inc mov adc sub cmp aas and dec mov xor push dec push add repz test mov xor mov cs cmp jmp enter xor inc incl (bad) sbb lods inc mov mov ss nop adc xor das xor inc jo cwtl jmp sbb cmc push cmp push jg xchg cmp lock cmpsb add dec lret data16 das or icebp ret test insb xchg mov lea cwtl sub dec ret fwait push (bad) dec pop lds enter inc fisttp or pop jmp and xor add mov mov vmread push cmp aaa mov mov cmp inc pop pop into and xor xor iret mov movsb loopne aaa sbb cmp or sbb cmp dec add lret mov mov in loop sbb or add cmp outsl dec je sbb add cmp mov cld inc xor (bad) pop dec jbe mov adc loopne clc outsl loop jg or (bad) pop pop add inc pop es stos and pop arpl xor out out bound push push push shll pop xor add xchg add gs inc mov add and adcb in mov cltd insl push andl add push cs jecxz add in mov cmp testb movsb inc and inc sub or out bound loop mov sub mov xor and fnop les inc add lcall rcrb or sub mov jns push jmp call fwait loope add ljmp xchg sbb inc test jb pusha xor push das or clc add (bad) ds ror mov push test and xor add les aas das push (bad) push dec or addb xor jp push adc loope aam inc add ja add lea call pop or sub je decl cld add ljmp xchg pusha cmp test xor outsb sti add pop add dec pop push and add sub jmp mov adc cmp xchg movb xchg xor jmp or adc pop imul mov leave add loopne xor xchg and fadd push mov nop das pop push jo call out or adc testb dec mov pop push mov mov insb loope and cmpsl loopne rorb mov gs (bad) xor inc inc sbb rorl and repz xchg and test leave das xchg test inc adc xchg nop mov (bad) add jae adc loopne test ret repnz xchg and cmpsb mov mov dec pop dec mov sahf dec inc orb and xor mov dec add repnz xchg jmp add nop and jne or cmp cmc pop test xor cwtl aam cmp mov hlt fisub jo xchg push or xor mov mov xor xor or clc sbb test rcll (bad) xchg push movsb mov rclb and jle pop xchg mov mov ret pop cmp jp sub mov sbb fs dec xchg mov lods icebp inc mov dec (bad) cwtl xor loope arpl dec test test mov movsb and outsb lock pusha add fbld add pop and ret cltd jbe mov mov data16 popa scas push (bad) xor (bad) adc dec call cli pop cmp loop cwtl mov dec and push jo sub andb mov jmp cmp rolb movsl clc xchg test inc ret and push inc test fmuls add lret push nop mov cmp cmc pop insl sub inc or fistp loopne and xchg rorb dec out out adc and int3 push xchg loop mov (bad) adc mov push inc mov mov idiv xor or outsl dec subl (bad) lock push push mov mov fwait pushf aas mov test loop sbb sub jmp pop dec mov es or mov hlt cmc and push insl mov pop add mov and ret nop sub cmpsb sub pushf adc enter subb and adc cmp cwtl outsb mov mov fwait add jns rorb je mov add dec shll inc inc out and scas stos push cs sub xchg leave rcll rclb mov pop push int dec sbb pusha les fimull rcll mov lahf sarb sub xchg nop aaa loopne lods iret cwtl adc cmc pop sti popa in mov imul loope sbbb mov xchg icebp xor add lcall push push jl addl pop test nop leave and push cmp pop lcall dec leave in lods dec add popa add data16 (bad) pop xchg inc jmp mov sub add (bad) dec pop rolb add test jne rorb ja xor pop test cltd js pop adc sbb sbb push rol push out inc push ds sarb in or cmp mov and inc nop xor mov (bad) sub loopne jmp mov outsb cmp adc nop rcr int outsl mov ret adc mov out fisubl loopne xchg or icebp or lahf out pusha add add mov arpl add pop ja dec or xor xchg test mov sbb test push mov push stos mov mov fisttpl fs add dec jo adc lcall add mov add invd push mov dec aaa mov clc xchg loop call xor jmp mov sbb repz insl (bad) mov cmp jmp insb daa ja adc test jle sbb pop sub fiadd rorl push cmp pop int3 push inc sub rolb add ds jge or mov rcrb inc pop leave mov mov mov hlt xor xchg test repnz xchg xorb shrl push jae (bad) fist mov pusha fldcw xchg add add mov pop inc out dec shlb xor data16 loope push lret mov pusha xchg (bad) jb xchg cmp fiadd and xchg bound out dec sbb inc cmpsl scas pop sti fcoms inc lods divl out dec insb add jns (bad) aad shr fs xchg fmull (bad) sub and inc clc adc (bad) push fdivrl sbb je sub es jmp ret sub rolb jecxz lods dec loopne clc push mov jb pop imul mov or and cmp jp pcmpgtb call aam push inc lods mov inc xor jmp pop outsl ljmp out and outsb lea push js inc lret movsb lock (bad) and ja and cltd cld and xchg mov xor pop inc mov jmp mov mov sub push cmp aas add jecxz imul lret push nop ret in clc pop pushf jl dec lcall call pop adc les mov cwtl lock sbb enter or mov or xor push cwtl test inc add jno sub mov ret dec adc fdivl add dec bound and movsb (bad) xchg repnz push out jmp mov mov xor add rorb pusha clc push inc dec sti mov add call add inc inc hlt or out jmp (bad) sbb and (bad) mov outsb out loope lcall add bound (bad) adc xchg mov (bad) mov insb sub aaa clc mov pop aam sub add test clc fsubl (bad) jo insb mov push fsubs dec jb,pn add ret inc sub push std add daa add lret lds sbb in mov mov pop mov mov in mov or and jo fwait pushf xchg xchg or pop popa cwtl or xor and dec push cmp sbb shlb leave int rcrb popa imul sub adc icebp add xchg inc fsubr or adc cwtl les shrl pushf pop cmp int3 add mov (bad) out pop add arpl dec les dec aaa cmp xor cmp lcall fs and pop popa out leave lds or and add mov movsb xchg int3 roll push xchg data16 hlt xor mov aam and out xchg faddl mov lods jmp bound outsl pop xchg jnp fisttp add add pop or out arpl clc int3 cwtl add inc or sbb mov add xor xor aam mov loop add inc or call movb outsb or mov test jmp outsb jmp push subl loopne add mov xor in adc dec push pushf test adc mov (bad) dec mov fcoms data16 mov loopne lods (bad) pop out fcomps outsb add add (bad) or cli fsubs sub sbb js adc inc call jns adc in and adc (bad) or and push cld mov aaa rolb jbe add push push xor inc xor mov movsl ljmp dec fstl (bad) repnz dec mov and xchg and add rol add dec aas dec add cmp outsl xor xor orl pusha xor insb jl int cltd mov lcall and aas and mov or pop fwait inc fsubl test mov xlat add dec test mov test test sbb loopne add lret cld pop xorl push rclb xor in push jne add in les cmp cmpsl in pushf mov pop jbe in pusha fsubr es or test push add sti sbb push or mov outsl dec cmp pusha jp fs push cmpb lods fst bt push push or fs fdivs lods mov movsb pop out sub rcrb loopne add test cs push rclb xchg push sbb mov nop xor pusha mov lock adc daa mov or inc push es add (bad) (bad) jge pusha rorb inc mov pusha dec jo xchg xchg pop fildll adc nop jl inc je mov add xchg out push outsl pusha lret dec loope int3 out dec sti and in outsl mov add lcall lock jecxz test aad or dec mov add hlt (bad) pop outsl inc and shll jl or push in dec in lea cmp dec in scas push sbb lods (bad) xchg adc add xor adc arpl push push dec or stos test sub call adcb mov xor fidivl adc int3 mov push mov adc xor or icebp xchg mov jno sub cmpb pop pusha xor add mov add daa insb lahf jnp or dec out mov add jecxz add xchg add xor inc ljmp call out sahf push add loop cmp pop loop add and cltd pop arpl lds sub mov fs add xor add push jmp jae call and jo inc rcrb mov push enter adc cmp sbb adc cmp sbb sub jo add fs mov (bad) mov faddl cmp iret (bad) mov inc enter test inc mov xchg mov mov xchg stos nop mov rclb xor push push add xchg je add mov das nop test mov dec dec inc pusha fisttpl aas lcall jo idivl xchg add add seta adc popa jg and cwtl fnstcw arpl add adc add int inc (bad) mov insl dec jno or (bad) lods je or movsl enter dec and add out repz loope dec test nop ret add inc inc pop inc mov mov push pop cmp or ss inc or je cmp in fwait lcall loopne cli add lcall or mov jnp add ret in dec push push lret pop add mov pusha mov pusha push mov mov aaa and pop mov les clc dec sbb sub mov and xchg outsl js loope xchg mov sbb imul mov jbe mov cmpsl jno add inc cli push add scas sti add and insb xor xchg inc stos jo,pn pop mov sub dec das mov imul loope ret idivb out (bad) lock inc add stos inc inc out (bad) mov or aas ss bound and adc add outsl call mov movsb lods adc inc aam outsl dec shlb lods pop cltd and or enter enter shl or or sbb cmp pop push outsb hlt adc pop mov dec in push jmp push adc jl sub js call and add pushf and ljmp add fsubs adcb or scas in mov (bad) push ss fbld adc outsb std mov xchg and xor in in iret or int3 repz push jb cwtl pushf add mov xchg or fisubrl inc mov pusha pop test pusha adc mov std pusha orb cmp (bad) pop movsb xchg dec call add xchg inc out add rclb or add dec add xlat jnp sub sub mov add inc out xchg add push outsb arpl mov hlt cmp cmpsl push loopne mov repz lret mov push popl add fwait das push mov lock dec dec add jnp sub dec jp bound int3 push in add pop dec stos jb addb dec cmp ljmp pusha jg cwtl xor popa add jl shl dec or test mov lds push sub jbe jb movsb frstor sbb add adc pop push enter jg xchg dec mov insb in lds inc addr16 cld movsl test test sbbb imul and jmp paddd aam dec sahf test mov call or pop popa dec mov (bad) or fwait insb add orb cmp lods pop mov add movb or mov pop pusha ljmp mov mov mov flds lret mov and and xor orb sbb in adc mov cld test insb hlt jle add jbe sbb mov les push nop movsb add mov xchg cmp cmp test fcompl or jecxz mov inc in jbe nop lods pop scas hlt adc adc mov inc adc call imul frstor ret sbbl pop inc jp jg pop xlat in inc mov popf subb jne sub push xlat jbe subl cld fmull movsl cld sub jp add cli hlt jg sub xor dec add inc fdivs adc movsb pop push push and pop (bad) rolb out out and (bad) adc cmp iret sbb pop sbb test lret adc xchg cmp push sbbl inc clc pop push mov (bad) data16 jg or dec inc or jo pop sbb (bad) rorb add fldpi loope add jnp cmp imul pop fcompl sahf or call out scas rcll lock add jmp cmp mov jl nop add and mov imul in mov sub pop incb test add dec nop icebp add testb out ja mov std xor jnp sbb mov push adc add faddl inc inc xbegin cs push cmp call std mov add (bad) sbb xor mov rcr pop addb add mov lods and or mov mov test lahf scas and or xlat pop or sbb decb xrelease mov test cli adc imul mov add stc cmpsb add and mov cmc jmp movlhps nop pop xor pop sub ret adcb mov push xor xchg hlt arpl jl pusha dec (bad) loop xor inc (bad) nop cmp popa pop stos or pop arpl mov xchg adc xor jae add gs sti add or (bad) and jbe shrl sti pop mov cltd dec cwtl pusha adc mov fwait insl fcoms adc inc popf add jl sbb sarl add cld mov xchg sbb add test jnp stc xor cmpsl mov lock or add std add mov in sbb sarb cld add add pop xor push or add ss aam xor or inc lea cmp cmpb mov dec xorb mov js add iret fs or sbbb es dec add sbb xlat cwtl cld mov adc test popa pop nop iret cmp sub sbb loop inc arpl (bad) inc pop cltd pusha mov cmp movsl mov xor clc xchg outsb in orb fisttpll sub mov stos push inc dec cmpsl adc add rclb push push add les sub sbb stos lahf fs add mov xor rorl scas repz inc (bad) loope fs push enter cmc hlt out mov sbb adc inc test sar nop clc adc cli jbe mov and addb aam inc sbb call js mov xchg inc add cmp loop sbbl icebp cs add stc add sbb lods in int3 or push sar mov pop nop insb inc mov lock in fisttp subl inc mov pop sub push nop in popf (bad) int3 inc and fisttp add inc xor inc mov dec mov mov jo loop or add push mov pop mov push sti ss loope (bad) mov push cld cld inc mov xor orb mov jmp adc cmc push aam jg lock add sbb bound loope sub add pop jmp mov ljmp (bad) aad lret xchg outsb add rcll pop in add and jbe clc mov pusha jnp or or dec lcall cwtl xchg loope pop out push push mov out in xchg popf cmp jne inc pop lods inc (bad) ja (bad) pop ss pop pop and adc data16 ds sbb lea push int3 das adc or aaa sarb sti adc lret out pop lahf popa or adc mov xchg xchg pushf call sbb push mov repnz pop dec jns test orl and aaa mov fs add inc inc inc sahf test add leave rcrb loopne lock pop push xor adc je pop ret sub movb or pop out jp sub cmp sub xchg pop ret fcoms enter (bad) push lock xor mov sub aas or dec shll adc add xor ret in icebp xchg jns outsl or incb jp pop xchg pop pusha mov aam adc xor dec inc inc mov adc push hlt mov adc bound and enter stc jle sarb mov hlt movsl xor adc sub lcall (bad) push xchg (bad) lock cltd pop cld fucomip loopne insb add cmp push imul aad addr16 out mov loop xor and cmp push mov mov xor pop std call movsb add sub lret enter mov inc lods mov in jp xchg add jns rcrl enter add outsl dec popa lea mov lcall (bad) jmp icebp mov and and xchg xchg int js add push loopne xor movb out ret xchg rol adc fidivr pop arpl xchg pop mov push out mov mov sub sub ror and pop pop adc pusha xchg adc (bad) mov faddp jns and mov das add and mov scas (bad) adc pop or push or adc inc (bad) dec xchg sbb push loopne outsb mov lea les test fwait call xchg push cld aas movsb fbld cmp pop pop int outsb sub fsubrs call and out je js cld out cmp and add mov jne loopne pop (bad) jo,pt add pop insb fldenv nop cmp mov ss xchg jmp negb xchg add jmp sub mov std incb xchg dec jns or mov xchg movsb add aas mov sub ror xlat xchg and xchg je outsb push mov or xor icebp cwtl sbbl enter (bad) test scas gs lock inc les lcall cmp xchg nop adc stos movsb pusha add popa or call scas push out clc clc cwtl or call or lock and data16 js clc pop mov add addr16 call rclb insb xor add addr16 xor shl ficom push push pusha mov mov insb ret repnz data16 xchg mov pop loope outsl inc push (bad) gs sub add adc or ljmp mov enter sbb in inc mov adc add test lds pop iret enter cld sub dec or pusha mov sbb or mov mov and mov xchg add pusha jnp mov and push jb mov js arpl adc and repnz cmp orb fidivr jo aaa or mov xchg dec je xor xchg xor scas add cwtl call hlt adc int3 (bad) inc sub pushf dec out aas push fcmove sub xor xchg mov jae andl test inc adc push test mov mov push push xchg pusha mov mov jmp dec inc push xor (bad) (bad) enter mov dec in xchg adc inc addb push cmp pop insb cmp imul cmc ss cmp test pop inc int (bad) jne xor sbb add popf add cmp or int3 call fsubl addb loopne test push adc xor mov cld mov or and and push int3 lahf or push xor fisttpll mov (bad) mov jecxz push mov xor in ror push js add mov jo dec adc dec insb and sbb cs outsl sarb popa mov inc mov lods rolb test mov roll push mov mov ficom shr repnz jno push mov xchg add inc fmull sub das aam sub fwait adc or pop loop sbbb ss dec mov leave in (bad) mov jne ficom push sti cltd xchg jns mov xchg andb out std pop xchg sbb add in aad pop lods aam pop out add popf add sbb pop sub cld lahf cltd mov mov push lock add shr mov push adc inc jno or aas rcrb iret add sub shl xchg jns and pop ds in call outsl imull inc mov mov int3 pop pop ds jo add ret add push orb repnz pop mov sub push lds push add pop ja mov cwtl xor jnp dec cltd sub outsl fs jns xor mov test fsub imul inc xchg sbb outsb fsub cli jl dec jo test cmp in enter mov xor lea or call nop fcoml inc sub shlb call out outsl arpl mov sbb inc adc sbb jl notb mov dec enter jbe inc pop rcr in shl icebp int mov (bad) cmc xor shrb add and add and addl push sarb jnp sub sti daa mov adc or push sub jno or outsl dec and nop (bad) imul jnp inc test xchg (bad) out dec mov cmp mov add pop add outsl insl mov cmpl push jo mov sbb adc and xor mov dec xor add data16 push orb pop xchg inc fsub pop xchg fs add hlt sub std fsubrp cld mov les mov add movsb push push sbb jp push pop sbb or push pop int3 pop in and cld add insb in xchg les cwtl and adc push xchg add xor outsl sbb cwtl xor les insl cmp clc (bad) js je add jmp dec ret jnp in (bad) mov push aam xchg sub mov or sbb mov imul push call int3 xchg out fisttpl pop xchg mov data16 pop cltd jo and in dec or lret popa fs dec push and sbb mov test enter cltd pop dec push nop xor mov shr xchg adc xchg push inc ss movsl mov rcrb sub mov in cmp cmp rcl (bad) jmp inc das lods call insb movd sbb adc leave insb test repnz faddl or in insb mov js pop outsl jecxz cmp lods cmp retw call jp xor xor push jns add shrb jo dec mov (bad) dec xchg cmp jmp insl sub and mov sub leave daa fdivl and inc lods fs and push mov sub jo inc enter lods fxam call inc push popa aad out dec or fsubrs jno sub or das pop (bad) push mov inc ljmp add ret shlb and xlat dec dec call pushf in jp sbb and sub push mov (bad) insb cmp inc add dec mov stos in imul fnop fadd inc stos (bad) mov push out out mov or scas bound push (bad) dec shll xor cld je outsl fmull mov push loopne fiadd dec sbb sbb outsl out jmp xor dec jns add mov jno orl adc shl js push inc or mov fs xor mov adc add xor lahf mov mov fsubr push movsl pop sub xchg mov sahf insb out js push adc and mov push adc mov sub xchg xchg xor jp push sbb mov dec mov and mov out outsl cli mov cmp hlt xchg (bad) les rcrb fldl or icebp push flds loope push jo rolb sub test xchg pop sbb lret sbb insb sub and (bad) stc gs jl xor out mov dec pop es and pop xchg mov (bad) mov adc or lods or outsl jne sbb push add mov (bad) adc inc xchg push sub cmp inc cmpsl add add dec or mov imul add lea jo push insl adc leave and int3 sbb add cmpsl push add inc jbe xchg xchg dec pslld loope sub call jbe aaa loope clc fildll cmpsb dec daa jae dec xchg dec pop xchg dec xor mov loopne (bad) psubb loop mov add aaa cmp clc mov repz inc or repnz pop xor xor je dec push lods lahf lret add and push lock add roll pop in cmp mov jbe inc xchg push fbld or (bad) mov add adc xchg push jmp insl ds push out or add cli or nop and and and jg cmpb mov adcb out icebp mov fdivs cmp insb push stc (bad) shl xor out jle xchg push mov dec outsl jle or daa fildll js decl cld mov mov dec lahf pop adc nop mov mov lods sbb push and shll xchg add (bad) jg pop (bad) xor inc and inc xchg inc jle jbe sbb pop (bad) stc push cmp mov cmp adc fsub (bad) mov pop in push or mov movsb mov or nop gs or adc xchg push pop in rorb (bad) or mov fnsave push jl mov add call incb cmp jae add adc loope dec xchg fcomps sbb ja jmp fnstcw (bad) repz adc (bad) sahf add out xor adc add and inc xlat shlb adc loopne sub pop mov push clc sub and mov rol mov mov push data16 nop lret pop es dec adc sbb addb push mov imul sbb or mov fbld pop pop pop in into jo mov adc fsts xorb sbb sbb jnp xchg call sbb jno shrl push jmp or sbb mov xchg jle add fcoms mov out pop jae xchg sahf xor jg sub and push lahf jg mov mov push sbb sub mov push sub jle fisubl (bad) lds pop jl scas mov mov xor cmp adcb push adc test and (bad) je rep sbb push int3 jmp fwait sub add add jge outsb add mov and mov sub mov mov aam pop jb test std inc or jnp fsubrs pop pop call sub xor lahf add ja test sbbb add jge ja scas inc add lods int3 je push inc cwtl adc mov jne test popa jp cld and or int3 or cmp lock inc out pop (bad) pop insb mov stc lea in or pushl sub jnp nop jo std pusha scas and in mov js cli ret imul shrb sbb dec push dec insb (bad) pop jno add es xor xlat insl clc mov cmpsl jne test loope adc fistl stc mov arpl pop hlt std insb adc fs pop lret xor or out aad cmp xchg or orl jbe adcl cwtl (bad) dec mov dec cmp push xrelease xor mov gs imulb ds cmp js add repz jg jnp xor fadds add andb daa test stos adc inc sarl push lea xor cli push sbb pop push fs daa pop mov jmp lock rolb mov test mov (bad) adc pop sti loope pop popa mov add xchg cmp add pop push jge sub mov push ja push inc lods xchg icebp hlt ret in pushf sbb mov sahf mov push out mov or test fs clc add lds push call movsb add add and jge xor adc loope and mov pop xor ret loopne cmp mov push dec inc out lret cwtl fs movsb ret xor adc lahf enter sub lcall adc das sbb cmpb jo cmp sbb pop test adc mov and lds adc add outsb sub leave push repnz call fmuls mov shl frstor pop xchg stos add inc rol lcall lods mov jno push es sbb xchg (bad) add push pop cwtl aad clc add push sbb jge adc inc jl lock arpl pop rorb sarb adc lcall aam add mov xchg inc test mov push lods cmc mov xchg mov jecxz mov dec out stc sar add loopne rclb push (bad) mov cmp adc push add popf loopne push pop mov xchg mov jbe mov inc push fs test jne sub addr16 call out push addb xor cltd jnp roll movsl bound jae cmc and mov mov enter and jle js sbb inc lret mov xlat pop and movsb loope and dec pusha mov mov mov enter xchg bound sub push sbb pminsw sub scas shl lahf or sbb push adc ds outsb adc popa ds pop punpckhbw cwtl push inc adc loope or xchg jmp add hlt scas jge pushf lcall rcrb push jmp lods lea clc imul push mov mov adc add dec pop pusha inc inc cwtl push es add (bad) push mov push shll xchg in add lret rolb (bad) cmp (bad) mov add movsb psignd je xor mov sbb and xor mov fisttp flds aas sbbl mov cmp push ljmp sbb mov pop add popf dec add xorb add sbb pop movsb fcmovne add stc dec loop sarl les or test cmp sub add shr mov adc and xor add push sub (bad) ds arpl pop mov add push imul inc push bound mov test inc pop inc xchg inc sub imul cmp jns adc mov lods iret subl mov sbb rcll addb call in imul add jno mov xchg clc subb rcll jp jmp mov mov and xor ficom adc sub lods xchg sub sbb add cltd push xor inc int repnz sbb mov xchg jmp imul sub or pop inc call roll adc divb sbb mov pop xor sbb fs repnz and seta xchg xchg jno mov std adc mov dec and push push jbe inc add cld jl or cmp in ja sub insl jb sub (bad) rorb pusha mov lds ror add adc scas stc stos add in xchg mov rolb dec scas mov and cmpsb push push mov mov sahf cmp ret push adc (bad) loope add fdivp dec hlt mov inc pcmpeqd lcall lods inc xchg iret cmp sub ja test inc sti aaa mov jl xor pop pop repz and sbb popf push idivl add int3 xlat rcr rep ret and in cmc xor andb in xor mov dec cmp sbb addl pop cmp cmpsl enter orb mov mov xchg xor sbb mov (bad) jb mov adc out fwait sub adc ja mov pushf mov subl (bad) jne push and sbbb mov xchg fnstcw arpl (bad) cli or mov jg mov pusha std nop inc add jecxz rorl jp (bad) or fs mov pushf push or outsb push cwtl jmp test fiaddl or mov imul add add aam out mov xchg xor jns inc aam jne sub je cltd cmp adc push adc jg orl (bad) or xchg out (bad) jns aas cmpsl pop cld xor xor call divl pusha out ret push adc sbb inc jecxz nop pushf shlb decb rcrl push mov xor or xchg mov sub fs (bad) sbb lea imul dec mov sbb push xor mov int mov rorb (bad) sqrtps movsl pop out add mov in rcrb sub test jne sub jp mov inc xor xchg sub or lcall mov imull out inc or push sub cwtl outsb lcall push imul push jl dec insl sbb sub out ret inc cmp test jns cmp mov adc sbb and les add add add cmp pop mov mov ja data16 repnz jmp ds clc test xor mov lock sbb mov jecxz mov cmp mov adc add mov and sbb mov add push hlt xchg stc pop sub dec pop pushf arpl adc in mov cli cmp iret outsl cmp mov jl push add cmp fild adc cltd mov dec les xor sub imul sbb sbb and add add mov ss scas shll and adc nop outsl dec sub or add into repnz add sbb ljmp sbb jl inc push lahf hlt rol pop (bad) (bad) jo or shrl fmuls mov sbb test add sub cltd rcpps mov ljmp adc jl mov rorb jle pop push lret outsl (bad) and push pop xor push cmp pop add iret fucomp pop adc add insl xchg int mov sub cmp pop imul jp sbb repz sbbb xor jge sarb call add test or dec inc js jns addl sbb push jge cmc add mov (bad) faddl push repnz dec xor add mov stc push lock jbe cmp jge xchg mov call mov adc (bad) add fs fucomp and test in sbb push sarl xor sarl mov and sbb loop sbb push test push loopne and and cwtl add dec dec inc jae push in push lea push or (bad) lods or mov int sbb adc fstp ss sub cmp popa mov add pop lcall pshufw pop mov and arpl push dec sti and push lock cmp cltd or into cwtl pop mov hlt repnz add push jne orb addr16 bnd xchg push sbb mov inc inc mov adc pop xor insb (bad) call sarl dec add sarb pop push or cld jl cmpsb mov push pop and pcmpeqb mov push jno xorl jo mov jle jns cli sbb sub and adc cs mov lss movsl mov lock adc test sbb les add sbb adc repnz adc sbb pop adc add jns or inc outsb xchg jle cltd jnp adc and lcall dec jnp test std or push hlt aas icebp ret adc push frstor test fcoml and xor push and lock push (bad) cmc adc inc or xchg jle add leave out pop cmpsl sub outsb idivb pop add jp test nop dec xchg sbb jno repz xchg lock xchg mov cwtl adc and cmp mov nop adc xor xor fcoms add jl and jle sbb fsubrs xor dec cwtl shrl add (bad) sbb jno ss pop jg rcrl mov push adc fwait aam adc les dec out pop (bad) or pop and xor xchg add xor std inc push sti jb push push mov sbb mov sbbb adc add repz leave mov jae push mov in inc loop add cmp test pushf sub xchg add test jo sbb shl inc sbb addl arpl jo cmp bound mov pop out stos and xor xor dec jmp mov dec and pop inc mov int pusha add repz loop add (bad) sti divl pop push dec int3 xchg orb in inc sbb aaa xchg mov push sub inc mov mov sbbb ljmp shl push mov inc add lcall mov addb xchg and out add les and nop cmp andb jne shrl and les pop andl xchg jle or int shrb shlb add incb inc xchg lds jl (bad) mov shl enter mov pop arpl scas pusha adc lret cmpsl dec adc add mov cmp xor aad adcb loope sub dec (bad) lock mov in or and andl mov add out jae out adc les xchg sub shl pop cmp pop scas add fldl adc xchg jl test or adc pop fcom adc cmc pop inc call cmp xor and or mov jo int3 sbb inc sbb mov add mov mov nop test xor lock sub push es cli test xor sbb sbb add daa pop cltd cwtl popf and ja add add jl nop in out add push lret arpl jbe hlt dec mov sbb cmp mov mov fsubl dec pop jne (bad) pop add dec cmp inc cmp rorb jae idivl test add mov std repnz fnstsw js pusha in xor or xor in lock cli addr16 mov mov or push xor add add ss adc mov or sbbl dec data16 mov adc jle es jns or lock add stos cmpsb inc add shr sbb test ja xor sub mov cmp xor in pop sbb pusha addl pop std sub fnstsw mov xor lods adc idivl dec jns mov inc mov jecxz push into mov mov imul daa jecxz inc testb incb fmuls mov (bad) (bad) das xor jbe lds nop in or cmp inc or pushf lods and (bad) loope int add xlat sub ret mov daa jbe pop (bad) mov or je pop lods inc nop std mov add ljmp push cli cwtl test dec cli add pop dec fmuls sbb inc or pop and dec xor insl dec loop adc push hlt (bad) int3 add repz jb hlt pop add mov scas dec popa arpl inc inc jg in mov ja and inc popa xchg jp sub cld and sub mov hlt (bad) mov inc pop adc mov in in sbb and das add ret sub out fstp icebp pop or scas pop inc ret or sbb xor push lock stos (bad) ss xor and orl cmpsb int repnz andl sbb add inc outsb pop sbb jl add test xchg sti sub in inc dec mov dec mov mov mov arpl dec cmp mov dec andl lea orl xor inc inc inc icebp lock (bad) fnstsw jmp loopne cld or fs mov cwtl jp add add mov mov sbb and inc push inc cmp dec fldenv adc push xchg or repnz push imul or jo daa jnp scas xor movsl ds add ja mov inc test mov mov daa or (bad) ds xor test mov test push add int3 or aam loop pop outsb sbb mov std add outsl cltd js inc or cmp (bad) sar or cmp xor mov cmp fdivrs xor movsl cli les mov add aad mov mov push aas das std jns js xor dec add mov (bad) cwtl push test pop out push jmp sbb sub or (bad) pop mov or mov inc or push and sbb push hlt sbb std xor lock sbb hlt inc faddl (bad) dec jecxz mov push mov and mov add fimul orl int3 and or sbb aas stc inc dec pop in jmp andb test push add insl cmp hlt dec xlat jl call mov (bad) sub je xchg sub dec dec cwtl add jo xchg and test adc cwtl outsl sar dec add js dec mov add daa push mov mov or dec sub (bad) or xor flds cmpsl push loope lea cmp mov mov dec into pop flds add test call in hlt sbb ja es data16 bound std in mov (bad) dec push push push pop dec sub or xor mov jne lods in rcll pop inc fdivrs push les xor dec sub or sbb test xchg sub dec push push xor sbb sti add dec sub sarl or add loopne,pt pop dec and xor and int xlat rclb mov push push add xlat sbb push xchg jbe inc push and fwait adc xor and push repnz icebp fs cli in pop (bad) add push xchg mov add mov test inc push stc outsl mov es inc scas testb or test jno dec cmp inc push repnz out and outsl or or sub movsl and and xchg fcompl pop mov xchg inc pop notl test cmp dec shlb adc cmpsl cmp fnstsw add xor fdivrs shrl push or jl dec mov push test dec hlt fsubl scas dec repnz test je mov and pop jmp je jl sub sbb in mov mov lret xchg insb cmp les pushf (bad) gs adc push add scas dec mov adc shrb push xchg rep add les mov dec dec dec mov sub xor xorl mov xor mov lea gs sbb xlat out scas add sbb in mov loop,pt cld pmaddwd sarb fwait out push fs test cmp loop movsb xchg pop je gs ljmp mov cs push jmp xor test push sbb cmc nop pop xor pushf je loopne pop je xor mov mov xchg fmull jns les ficoml mov loop scas fcomps sub js es push or jge lcall sub xor xor mov das cld inc std cmpsb mov jbe push (bad) lods adc test dec inc pop add movsl (bad) in cs je or mov test mov add or adc mov subl scas in and (bad) fcoml addl push mov cmp adc aam repnz mov sub hlt inc andl sbb stc mov xchg pop fsubs add cld or les push jl cmp es clc jp mov imul sbbl mov mov nop cmp call push add inc fdivrl or jns bound divb out push dec add sarl outsl push add lods (bad) fsub xor xor test hlt iret lods inc pop scas xchg aam jecxz mov cmp pusha subb xlat imul xor roll adc loopne test push fimul xchg fs mov ja (bad) and daa pop ljmp dec dec cmp js in pusha inc push bound stos frstor fdivs adc mov fmull lods lock fdivl pusha test fild jg or sub mov or mov ja dec js xlat dec mov or cltd ss test dec add fcomp in push pop bound lock dec cltd adc xlat loopne mov out and adc shll sub and dec ljmp popa imul xor jno inc mov xor scas movsb adc or push das pop sub hlt inc les adc aam imul push inc jns rcll fcompl mov rclb jno sbb sub and sete rcrb not gs in xchg pop out cwtl orl fmull inc xor sub std add mov daa mov int3 add dec out fmul adc xchg add push and pusha adc test ret (bad) inc and ds loope push sbbb mov clc xchg mov test xor mov rcrb jns nop inc adc rorb rclb fsubr inc call movsb add ret fsubr int3 and les and mov jns lock push rclb jge and push mov xlat pop icebp or dec or add out add rcr pop aas jo lods ljmp daa add cmp inc pop fdivrs push mov inc in and cmp (bad) loop lock ja mov xor cli lcall push push stos sarl hlt loope adc (bad) nop ljmp dec mov aad mov in sbb adc add rclb add cmp sar sub fnstenv mov pop call (bad) mov repz sub jecxz fwait dec insl sbb or addr16 mov or insb push and or loopne cmp xchg rorb testl in and cwtl pop pop dec adc rolb inc jo or xchg in push (bad) xor xor or test and fadd je push rolb cmp loope and add dec push pop and jb pop ja mov test jne fwait mov adcl shr and inc add xor jae test mov inc scas mov js or in mov or adc or xor cwtl rolb sarl pop imul xor jecxz sbb inc xchg jp in les xlat jmp mov ljmpw in pusha add lds pushf es pop or add in imul pop xchg test fs or fimul and notb xchg jl lds int3 out push imul xchg cltd hlt pusha sub or insb loope push out pusha add pop scas jb cmpsl insl mov or faddp imul add jae xor stc test xor pop loopne cli and inc xor mov and xlat js rcll dec xor jmp data16 cmpl (bad) push pop ret stos xchg inc sub jns cmpb popa xchg in sbb je loop lret adc jle fsubr fdivr out orl aas mov pop sub stos adc adc cltd iret andb dec fdivrs sbb cltd xor xchg push arpl mov xchg fs sub test jmp mov and mov and nop mov jle nop and scas xchg and push jmp daa mov add dec in xchg ss imull aaa stc popa mov ja jae js and std arpl xlat std mov jecxz notl fmul (bad) cld inc pop sub adc add or pop adc xchg loope cld je jecxz adc xorb stc packssdw fimul and cs sub (bad) or mov mov rcll into out mov call les pop aam pop and cmp loope clc add leave cs imul mov in out or dec push lret sbb xlat (bad) or jmp mov and add jae in outsl mov sub test mov sbb and dec push nop mov sahf lock cmpsb fs jmp lds ret push nop rclb das xor pop fnstenv insl or lea jmp js add mov inc gs add push xchg rcll je lret subb bound nop mov lock bound and out paddusw ret pop ret push dec dec sub lock icebp jne push adc (bad) rolb pop push sub xor aam movb pop rorl or lods inc jp adc jne or cwtl (bad) push push cli sub clc js sarl pop push sbb inc xor cmpsb call adc fadds pusha xchg test dec add jge and pusha les mov in repnz jl push cmp mov add cmp sub mov in insl xchg nop and inc mov imul lock mov pop push fwait shrl inc icebp nop nop stc iret cmp insl add or cltd in je sub or push inc add mov loop sub cmp mov daa sub push jno popa hlt add lock andb loopne inc mov cmp ret pop and in in or adc push dec (bad) mov pop fnstcw or (bad) es cwtl add jb cs subl push scas data16 clc aam or adc shll mov adc push pusha jl jns push sub mov jmp mov adc pop pusha cmp out movl sub jmp sub push notb adc push push in xor pop add daa xchg rorl jbe clc push repnz daa push in scas pop repz pop push (bad) test dec out jge xor repz sti add inc add pop pop mov fsubl mov or push mov mov pop lcall mov or pop mov mov sbb and pop roll mov sub out pop add jmp mov pop push mov xchg sbb pop mov mov cld add pop inc mov push pop pop (bad) aas adc (bad) add mov inc dec add cli mov push orl into push enter add pop jmp fistpll test mov fsubr fwait les add loope jg ljmp mov aaa inc pop roll sub mov addb fmulp addr16 xor push pop push (bad) or js push nop mov push lock and decl (bad) sti pop test mov addr16 nop xadd add mov pop repnz add jne dec push mov mov jae aam push jo push mov or pop add cmp aad rolb in in (bad) fimul xor adc add and ljmp enter movsl push les in pop sub fmuls push cmpsl dec push shrb cld mov addr16 inc or in xor bound pop pop jl sub push loopne and dec add and dec mov mov mov jge jmp sahf adc add sbb xor adc inc into pop pop pop add sub (bad) cmp dec inc pushl add sbb jno stos out sub orl sub stos xor sbb push dec or dec mov push and adc and pop sub iret hlt or jnp dec dec xchg ja shr or inc out jecxz pop movsb (bad) jg rep sahf or mov sub ds aas pop dec xor sbbl bound div sbb dec es int inc ret sbb xchg or xor (bad) adc dec push pop push and jg inc and sbb clc mov mov ret pushf mov dec cmpsb rcll pop pop pop es movsl cmp clc add pop xor fdivl aad mov inc adc pusha sub or lret rdmsr leave xchg sahf and adc pop inc lods ss adc mov movsb data16 push mov and in jns repz and add add in std mov dec or jnp add aad jmp fcomp pop xor and pop lret nop es sarb pop js push push ljmp xor fdivrs sbb mov pop and add pop push jmp inc and sub subl fxch or into (bad) icebp or cmp add jge dec mov mov or xchg mov jnp push push nop dec sub jmp aas (bad) (bad) pushf xchg es fcmovbe jle xor adcb scas insl negb push pop popa inc xor sub int3 sub mov pop ds sbb adc pop shrb push (bad) pop pop fild flds (bad) cli or dec push cwtl adc and xor leave push push mov add pop sub sub add lcall not andb xchg push shr pop inc jmp add push movsl jne xor mov inc push push out pop ret and add lret shlb jg and mov fldcw mov xchg imul jno add pop mov jmp xor mov (bad) push xchg mov adc and sub add add push dec mov jmp pop pop xchg dec xchg mov push mov xor inc push das add and lahf add sub jg movsb cltd jmp cwtl jo jle add pop push adc xor lds dec js sahf cmpl or mov xor adc test out xchg add rorb cmp sbb mov enter jo movsb jne rorb decb jae pop sub add movsl ret sub pusha cmpsb sbb gs ja mov cld ss into outsl inc loopne movsl lds gs pop pop xchg mov sbb inc xlat add jecxz test xchg es and push out dec sub cld aaa leave add shlb in push roll pop ljmp das imul inc add and mov cli lock (bad) ds mov fsubrs inc cmp add ja test cwtl jo add sbb add xchg das xchg out imull pusha insl aam test fwait sbb loopne and xor movsb add addr16 cmc add jno test lods and pop loope add enter mov mov xor lods xchg shll test pop pop mov inc in sub jp (bad) xor scas add insl xchg out xchg push add fs hlt mov push cwtl insl std rcrl stos inc mov int3 dec aas jl fdivl js rcrb xor inc inc lock push inc loope sbb (bad) cmp or loop pop out add movsb jmp push sub les mov test test (bad) stos mov or mov sub mov std xor es stos in jo xchg push xchg sub pop adc (bad) rorl test push sbb xchg fs push cs insl xor add lods inc cmp mov fwait mov int3 adc push pusha mov add test push inc les sti jae xchg movsl xchg pop and push mov add divl mov xor add push stos inc xchg hlt and leave addl xlat sbb fucom push mov sub ret orl addr16 add lods ss or mov dec inc jnp aas pop push lds leave lods xor ret pop movsl loop inc gs push xchg and (bad) in xchg push inc sub or lea sub jo,pt sbbb jecxz sbb and xor mov sub movsb add rcrl push jno mov and jmp pop push insb or lea xchg jae add ljmp fcom clc and jo fwait dec push fs cmp pop shrb inc les jl imul add (bad) xor sahf or lods insb jne push xor enter in test std stos movsb fs enter (bad) rol sar rcrl mov movsb enter gs push pop xchg and dec sub mov push cmpsb add test pop dec jmp cmp scas adc sbbl cli and enter add xchg into nop sbb jmp hlt add pop subl or and gs cmp dec ret cwtl movsl xor test pop data16 xor lock or les mov add into or imul push dec sbb xlat push sub loop mov cwtl dec cs inc mov mov jp (bad) mov jo mov adc fstl adc jae xor es mov clc cs cmp daa out cmpb pop fcoml cli add data16 es xchg mov fwait insb sub enter aad cmp test test mov sub cmp stos nop mov sbb sar imul push dec jae cwtl insb add movsl fnstenv xor or jno mov xchg nop test insl pop scas stc cmpsl cli xchg mov mov sub roll test inc pop xor xchg jecxz add lods pop cmpsb sub in pushf test pop mov adc andl lock and jae xor nop mov sbb xchg mov std adc push mov push enter mov call xor shrb sbb cld outsl lahf sbb xchg pop sbb and lea jl adc jle mov clc clc ret dec (bad) xchg lds add fcmovbe gs stc out mov (bad) mov or jge dec push and das fs out sub cs inc push xchg add orb call ret cmp pop data16 outsl xchg dec xchg sub mov loope (bad) movsl mov add xchg adc lods xchg adc les rolb rcrl rorb dec xor cld ret inc sub fmuls add adc pop sbb mov sub cmp int lock mov sub jo cld pop clc inc ret sub lods es mov inc cmc cmp cmpsb adc or rcrl adc xchg mulb push inc add mov fidiv xchg push push pop mov (bad) mov enter dec jmp pop xor xchg mov jo jb add or loop xchg mov and aam inc dec imul xor addb insl cwtl mov addb inc pusha lods icebp and lock enter and mov pusha cmp jl (bad) in lea sbb or les pusha sbb mov add int3 mov add aaa xchg test xor inc insb data16 add scas adcb packuswb insl jo clc mov ret pop or pop inc in daa pushf aam cltd add pop push and idivb adc push imul cmp repz ss mov clc enter inc or sar cmp mov dec lods dec int3 or lods packssdw les stos outsl jmp fisttpll inc rcl xchg sbb mov inc aam add sub aam sbb movsb push push test mov cmpsl cmp leave push js imul lds movsb and xchg ljmp push call and push or cmpsb mov add push push sbb pop pop loopne xchg add jae xchg fwait push sbb cmp out dec fmul sti imul push xor stos xchg sar clc adc and push add out in inc pop xor add cmpsb pusha pushf xchg mov jns cmp stc add sbb popa pop out cwtl decb pusha mov push cli lock mov clc inc lock xchg mov ret js dec or sbb push cld or sbb jmp or mov icebp cmp jne jns push shrb loopne add data16 pushf jno and addr16 or xchg decb imul ss push cmp bound out daa roll push sarl lds add pop adc ss flds in push scas lea pushf mov es or pop pop add add repz add xor lea fwait cwtl out mov fs mov adc jae rorl dec push sub int3 xchg or cli add mov and push cmpsb cmp pusha push inc cmp repnz or out hlt test pop add enter fistpl int xor notl push cs mov fistp lock and and es mov push xchg mov imul dec out shrl mov sbbb test add or add (bad) mov cmpsb sub loopne cmpsb xor pushf pop lds push lea push push pop xor sbb jle pop cmp add sub enter fwait push push mov dec lods negb or inc add and push sub mov add imul mov lds or mov cmp lahf push shl sbb mov and or test sbb icebp test mov sbb add add xchg in in jbe inc cmc popf inc and add adc sbb mov adc mov shrl pusha sti pusha jb ret scas pop aas mov sub jns insb imul push jae push fmuls pop dec dec mov addr16 (bad) xor xchg enter imul jo inc ss pop adc or mov sarl insb sar sbb xor push pop inc adcb (bad) out push or sbb (bad) xor dec test push aas insl sub or icebp pop mov push mov ljmp adcb add mov pop mov arpl pop cmp add xor jne adc sbb push js (bad) xor xchg xchg rclb scas rclb dec cmpsl push cmp shrb cld jb movb ljmp out or jae adc lret jb mov test xor or cmp add fwait push bound aas in loopne pusha jmp xor dec inc shr mov jno push xor lock mov push lods lret enter (bad) mov mov add adc mov lret add inc out mov push test jb test sub push aaa add loopne test gs push jae add shll js ljmp subb push lret xchg mov jg repnz popa push mov adc rcrb jne call xchg cmp lret lods mov add int3 sub and add push inc xor mov sbb cmp push xchg js lds repnz fcoml cmpsl test shll std negl dec cmpsb scas lds sti mov cwtl xchg xor ret inc data16 adc sbb jmp push into (bad) mov iret inc rorl add xor mov (bad) es cwtl pusha mov (bad) xor lods cld repnz xor adc mov gs nop add leave xor repnz sbb mov add rorb mov xor cmp sbb aas add inc jp shrl xlat add repnz ljmp inc add movsb sbb in enter enter mov xor xchg popf cmp jo adc (bad) xchg loopne cmp shrb shlb lcall les mov fdivrl sbbl pop test ret call cmpb add push test pop xor roll mov sbb ss movsl xor pusha nop jo or cmp test int3 or and je sbb xor clc or lret hlt jno lods fisubr sub cmc int3 pop js or (bad) mov inc sahf cmp inc push jne pop addb dec les bound pop aaa add in dec jo pop push mov jmp scas clc call inc psubsb mov mov xor add dec test dec lds jecxz test pop ret sbb cmp (bad) ss mov test (bad) mov arpl fadds inc mov es aam adc sub dec mov mov aam fnstcw xor pop and dec adc inc cmp dec orl in insb lods ss pusha addr16 mov jno sbb nop or shl imul adc (bad) (bad) xor xor arpl mov repnz mov pop push scas mov or and mov lock aas fsubrs in pop pop pop xor rol ffreep jnp dec test push or cmp push cmp jge sbb lock imul loop rcl shlb cmc add and add lock jne or (bad) add shrl add sti imul mov outsl cmp jmp ds mov mov icebp xchg pusha ja or cltd and adc or or or xchg inc or pop adc mov rep sbb pop push pushf gs ret aas add mov jecxz arpl (bad) hlt xorl xchg scas addl lock lds mov imul es adc and insb sbb or loopne or xchg lret xor std nop xor jbe insb mov cmp lret jo sub xchg stos movups ds test mov push xor cmpl inc mov xchg dec outsb mov or sbb or jl and push mov (bad) rolb add cmp push daa pusha mov nop mov je out mov in add push js jle cwtl js mov and or aam test push popa add ss fninit loop pusha mov sub jns mov dec fwait and inc jmp adc mov and loope cwtl or jp pusha jmp lds jno or outsb xor jle pop push test jae sub cmpsl call mov cmp add pusha cmp ja test sarb test xchg jae,pn pushf dec push pusha sbb add cmp repnz or loope insb aas push add in fwait insb test inc add mov pop movsl rorb mov and xor orb add repz sub cwtl and adc xor mov mov sbb (bad) or jmp sbb out mov enter nop subb sub (bad) rcr sbb adc lock loopne out pop imul mov inc adc nop add cmpsl sub inc sarb cmp or rcrb dec lock push inc pop jl cli shlb aad fnop cli int3 dec mov pushf pop ss sbb sbb cli add jge leave push ja mov cmc fldenv cli (bad) push xchg roll (bad) in sbb xchg pop add cwtl std inc pushf jp testl xchg jnp into rol sbb xchg or sbb nop xchg (bad) out push lahf adc xlat fsubr sbbl ret add sub test cmp or sub (bad) leave lock loope orb sbb or xchg cld into sti fnstcw out xchg hlt adc mov leave adc cld mov sbb mov faddl arpl shr add dec test les test jl mov mov test dec imul pop lret cltd test fmuls pop push xchg sub adc addr16 add sti out fiadd (bad) mov cmpsb sbb roll movsb dec repnz push mov and les test push xchg bound rcrb and je in push nop push or sbb es adc jne cwtl daa xchg cmp xchg mov pusha mov stos movsb xorl adc into xchg push push xor xor adc pop cmc xchg push or fildll les hlt push adc out inc dec adc mov scas add adc outsb loopne clc cltd add push pop sbb mov push mov mov jo mov sub sbb xor pop adc cwtl inc shrb es adc jb xchg and jae icebp inc push cmp dec nop mov push pop insb or sub jmp adc sbb sub push push mov cld mov addl lret adc (bad) sbb (bad) sahf inc je les (bad) mov push pusha and (bad) mov adcl or add mov pop cmp add popa add aam cmp xor add rorl imul cmp or xor lock jge sti js add scas inc or xchg sahf add jns,pt mov sub incb sarl mov pop ret cmovp mov imul fs adc sub add lahf cld mov in insb sahf sbb and movb push jae daa std xchg out jb xor xchg test mov push iret pop insb fwait addr16 cwtl mov cmp addb jb dec jmp sarl xor inc mov add enter mov outsb in or mov pop pop loope inc xchg jmp fwait stos or sti pusha loop,pn aad push sbb add aam push and divl clc shlb mov outsb add leave cli insl loope inc (bad) clc mov and add pop in dec xor sar mov cmc inc cwtl inc bnd test sbb sub sti sbbb push sti xchg mov imul mov push add iret mov add aad sbb andb push xchg or mov sbbb dec add jns leave in test pop mov lret rcrb repnz mov lcall xor dec xchg dec or ljmp (bad) fnop out mov sbb rclb in and stos pop scas add fninit ficomp addb mov cmp sbb or xchg add fwait or stos popa lods fadds scas test or lods movsb push mov pushf imul sbb jl inc and and in movsl add or out in dec (bad) call xor pop adc ds lahf mov adc push je repnz inc out or push push movsl lods sbb aas clc xchg es nop cmpb sub insb or jns aas sub fs in mov xorb add movsb (bad) out jne push xor stos aam sub outsl std insl enter pushf or xorl push clc jmp mov mov mov sub or xchg sub mov loope scas insl xorb xor mov sub fsubp sarb bound adc in sub clc mov pusha mov cwtl lods (bad) xor and sub mov call sahf pop push std nop inc out dec cs push pop add jnp and sub (bad) xor fwait mov adc outsb sar cld pop int3 int xchg in mov inc inc lock adc lcall iret adc int in pusha pop mov enter fsub lret cmp or call lock adc sub cmpl push lret fmull dec call adc mov xlat push lcall add inc jo mov sbb add push jno sub sbb adc add mull in xchg fdivl add push mov lods sub add popa lock pop mov roll dec cmc add ret movsb notb or push mov or jno nop inc lcall lds dec sub lret inc xlat add ja xchg loopne push sub sbb pusha in lods popf (bad) shlb fs mov loopne loope (bad) call xchg fild mulb xor jmp pusha rcrl push mov (bad) sub hlt call xchg or les lock nop add enter pushf test imul inc mov in in xor add aaa ret insb ret cmp mov fldl fldcw push sub pminub add pop add aas sbb outsb je mov popf cmp jnp adc mov xchg repz or jbe (bad) out sbb xor lock je or repz call mov pop es test sub sub jmp cmp jae dec movsb sbb or lock in push mov ror call xor fwait (bad) lock pop or cltd aaa and or call adc cmp dec cwtl shr mov mov push cmp inc push inc popa ffreep push mov mov add lods sarl pushf aam int3 or inc inc (bad) movsb hlt adc arpl inc outsb pop add add (bad) imul push add jg lods flds lock mov xchg pusha sbb or add mov push jmp (bad) out sub sbb mov inc mov mov inc pusha lods hlt rorl stc jne sbb shrb inc (bad) lock jae cld and movsb pop (bad) xlat mov and inc or dec xor ja mul xchg enter push sub ljmp push fs jge mov or sub mov xchg add mov pop sbb stos add stc cmpsl or sub insb pop mov mov lods pusha pusha fsubrs dec cmc insb jge (bad) jp (bad) loope mov stos imul or jb mov inc jmp inc scas and sbb mov pop (bad) sbb fwait mov dec push pushf mov rcrb loopne mov dec xorl hlt xchg fcmovnb mov mov xchg into ret inc and in insb inc xchg fimul or push shrl and adc cmp cld sbb inc les aam fldenv add sub xchg pop jno add enter pop shrl subb into xor sar pop push add rcll sub lret in lods xchg ds cwtl pop and movsl or xor jmp (bad) cli mov in ja add pop data16 adc add or pop (bad) or aad rorl lods and jecxz add lock cmpsb sahf jmp cwtl les or adc xor rorl in push jo ret adc jg mov mov sub leave lret pop fwait adc sbb pop add mov aam shl push or push outsl es xchg xchg push inc mov (bad) jb orb (bad) xor test xchg add dec mov xchg fisubrl add jo or pop rolb xchg xchg pusha test shlb jb add add ficomp rclb pushaw in int addb and xchg add sbb jnp aas outsl sahf subb mov addb push popa and add int lahf add jg (bad) cld fadds bound aad adc xor sbb mov lock ret pushf clc loopne cmp mov adc sbb adc push mov push ljmp inc xor adc je or shlb cmp test lods ret push mov int movsb js or movsl cmp adc xor jmp out imulb push std or fmull fstl xor xorb mov icebp push mov hlt cmp lcall push jae loopne push stos cmp lds add outsl decb in jae ret shrb push inc sbb mov mov js clc loop test lret push movsl jmp jp add arpl add sti inc mov adc cli and repz outsb fidivr inc pop sbbb lret cmpsb pop jecxz std inc sbb clc mov ss pop adc fdivl push dec call negb mov jl mov xor cmp dec jl loope bnd cmpsb inc or ja hlt cmp aam inc jne add in inc inc sbb into add xchg ja xchg repnz movl mov pop je lahf fistpll cmp cltd cmc add popa inc pop push lahf add imul cmp outsb pop mov lea pop mov inc lcall cmp xchg test jmp add inc cld lea xchg xadd sahf jmp pushf pusha cwtl lret out dec dec jne add int pop push js mov or add pop aas push dec mov mov inc dec dec stos (bad) fnstcw xor repnz add and adc je aam ficom jnp mov mov roll cmp sub outsl jb roll (bad) sbb int3 lcall in mov inc orl aad add mov xchg into call stos xor xor inc cli andb (bad) cmp jno cli push xor ljmp out ja test repz xchg lret jnp test push hlt inc fwait xrelease cmp je (bad) in mov mov fisttpl mov xor or pop test stc mov add (bad) xchg insl add inc push xchg sar lret ja jne add repz movsb mov push mov adc ljmp jo test loop rolb (bad) mov fcoms ja dec mov mov mov in xor cmp xor int and hlt ja cli jo fcmovne lcall jge mov in cwtl push inc insl dec je jnp pop mov add jae xchg add add (bad) xchg push dec mov sub sub popa lds add adc cld lock hlt jnp mov in fisttpl mov in push sub jno dec popa xor repnz sahf xor cmpsl icebp or loopne cmp xor fcompl sub add lret lds adc int3 add aad xor mov fistpl clc dec adc xlat pop int3 adc daa lock xchg (bad) push mov add push loop jno mov ffreep pop add or jmp popa je add test mov in (bad) mov inc add adc or dec cld add dec dec cltd inc test hlt lret inc inc pop fs mov ret and ja jge lea leave inc add iret pushf movsb add ja test dec xchg dec cs add idivl sub jmp push stos in str imul into loope daa test dec lahf hlt cmp add movsl inc mov xor and insb es in loopne hlt xor add xlat push xchg pop jge ja fcompl add loopne lods aam mov int3 dec add jge movsb inc xor mov es fdiv adc adc (bad) idivb adc cmpsb sti inc loopne cmp pop pop cld push out sbb shlb in pop cld shr mov add call cmp xor mov inc add movb push insl mov push aaa lret shll int es icebp in cmp add imul mov mov or js add mov or xchg adc cmp fsubrl enter sbb jo mov cwtl or nop adc push int lret push (bad) (bad) xor jl es or pop cmpsl inc mov push dec adc sti jnp push shrb pop mov stc sbb push jl es push es jmp sub addr16 pop cmpsb jge adc push ljmp and movsb aam adc out adc adc add mov mov pop mov clc xchg xor inc cmpsb divl insl mov bound add cmpsb pop ret mov adc or loop shrl dec jl test xor pushf mov (bad) cmp cltd hlt xchg hlt subb test jbe,pt jp movsb fcomi dec mov dec repnz mov jmp cmpb loop add jnp sbb clc gs inc sti ljmp into mov hlt ja aad rorb in fnsetpm(287 mov inc lock sub mov add aaa push add arpl pop pop pusha dec inc je loope mov addl in cmpsb cwtl inc sbb rorb mov add into jmp aam lock fild pop movsl pop jbe pop jl push into pop test insb repnz les ret sub pop add dec xor dec sub pusha scas mov jno std inc push int adc dec add push push or out fs pusha and dec repnz jae xor xor data16 pop jecxz sbb adc xchg ja out inc lock data16 add xor fiadd or test cmpb mov add mov cmp sbb sbb cmp add adc mov xchg jno pop rolb mov xchg sbb jbe and aas movsb movsb inc add fdivrs data16 test xor enter or mov (bad) ja cmc test cwtl cltd mov xchg stc nop adc jae pushf dec fs adc and bound jnp lods les in pop std setle sbb inc and cmpsb lret add je and jo pusha hlt out jns push div jnp inc cwtl icebp and aaa test push and aad in orb out bound or pusha ret mov enter cli lods inc push add adc repz xchg xor pop xchg sti xchg inc dec dec push movsb and cmc inc mov lret cmp test loopne jae je dec mov call lock pop mov mov jle mov pop jo adc out mov enter in neg sub pushf push icebp sbb jmp cld add (bad) push repnz cmp sbb sub ja leave imul stos cwtl and cmpsb in mov cmp or les imul paddsb inc nop addr16 enter cmp sub rol fxrstor mov jae dec gs je push icebp lods add adcl add xor fisttp stc dec cmp mov adc outsl (bad) push or mov movsl pop mov dec rclb testb cmpsb fld xchg add add and mov aaa rcr sbb insl inc mov push add mov in push xchg mov shlb mov (bad) aam sarb xchg addb repz out pop in xchg pop jo mov dec xor in sbb test jae mov imul gs dec jge test into loope lock jo insl sarb xchg adc and and dec cmp fbld faddl lock pop ret xor in cmp sbb (bad) adc sarl xchg fwait stc adc in jl (bad) in fmul dec cwtl out inc sub xor pop push (bad) repnz mov sti inc inc test sbb add in xlat and xor and add inc push clc or and loopne adc sub sbb in xchg insb inc rcr and mov and in in or js cmpsb xor sbb adc and inc pushf loop js and jmp cs cmp add inc inc mov mov fsubl jno push or aas out int inc lods add mov nop loopne test jae ret inc push push scas jg rolb scas shrb movsl cmp lods jecxz sub sti in ss imul std and jno add call jmp mov sbb xchg or fs (bad) icebp lret jae add sub (bad) push test out hlt push sbb adc ja push pop enter cwtl and mov inc pushf and scas dec popf jo add dec push xor data16 cmp push in add sbb call jle xor inc dec rcrl inc aaa mov push sbb sub xor lds (bad) loop,pn dec pop add je mov iret or add push adc xchg imul mov pop test or inc dec popa push jne call or in lcall aad lret rclb popa xor fdivl outsl mov out adc cmpsb push inc dec inc inc loopne in add xchg lsl in scas push fs adc or dec cwtl js leave push sbb cld lods dec or inc and jp jae mov lcall pop (bad) push xor cwtl repz pop inc subb push add stos (bad) testb sbb fisttpll sti jmp push push orb test push (bad) sbb push and add mov sbb js add dec jnp adc in mov pop mov cmp xchg mov int xor sarb (bad) lret (bad) imull push pop jns shufps cwtl ja adc das std and mov sbb adc nop push rcll sbb loope mov loope in aas inc pop outsb add mov mov into xor dec push jmp lods push add int3 mov loop or addb and sbb xor cmp sbbb fsub mov ret mov mov fdivs push mov adcb xchg add push fistp pop mov adc add dec jo xor and rolb sub and adc mov test sbb push push jg aam pop push dec ffreep jmp jp inc dec adc int3 mov lods repnz fisttpll jo mov adc pushf add mov pop adc xchg jl sbb add fs fsubl pop aaa popa mov shl sbb lds push in and sbb mov rol pop and test rolb cmc or mov pusha (bad) pop cmpsl js dec nop xchg push push adc jg sbb and stc mov pop fsts fstps lods loopne xchg add iret jecxz jle jg aas enter mov sbb xor mov or mov insb xorl sbb (bad) hlt inc sbb adc jp in cmpl call xchg roll jbe fldl (bad) adc pop ret adc or mov mov nop adc jmp mov inc pusha sub mov test mov xor sbb pop cld xor add jg lock cmp cmp xchg pop add repnz test nop pop test sarl pop sbb mov popa xor or add fidivr in mov ja and sub xor push or clc pusha ror fistl andb hlt add gs in enter add ret sbb and test dec (bad) mov push ret or in or js inc add inc inc nop and jge orl stos call xorl adc sbb pushf dec mov adc and lds cmpb dec dec inc and pusha or cmc in and push rcrb push and in les xchg mov dec sub in ja orl mov and iret inc loopne push sub jp js sub add mov cmovo fs cli aam mov sub repnz inc inc jmp test jle sub pminub stc xor and clc rclb testb sbb test sub lret orb add iret and xlat inc pusha lods cmp push (bad) mov jmp (bad) icebp mov sarl inc inc adc xor fcomps mov or adc aas orl pop test adc pop mov pop pop mov in movsl jl fs sub in ror mov call mov push sub jne or mov cmp mov and jge lret daa and add or cltd jnp subl and xchg and adc (bad) xchg test push scas xor add adc lock in addb ret inc push mov lret adc push bound jno enter mov ror test leave cld fstps inc inc js sbbl popa call dec dec enter fsubp mov dec jnp sub mov nop mov dec pop daa mov shlb and bound lock sbb or push adc orb sahf ja scas inc push xor popf (bad) cmpsb sub js and push test add add mov dec add pop loop or and rolb rcrb test sbb subl push iret inc adc stos (bad) inc js xor add rorl sub xchg xor lods nop shll int3 jl in cmpsb or std mov or add pusha jns (bad) jno mov ja jl (bad) mov das add arpl xlat jp adc adc add enter fs xchg test test inc lock ret mov and cmp adc or cli fs or in pop jns (bad) pop sbb and dec dec dec in mov adc push adc add ljmp fcoms adcl js imul test mov jg or xchg inc pushf aad subb or jne sbb xchg push inc push shlb test mov adc xor sbb loope push mov nop sbb out ret pop scas lock movsb imull mov xchg lahf adc jb push cs aaa push mov addl sbb js ljmp cld mov and mov xchg inc mov call xchg mov movsl mov and scas jbe xchg divl mov pop and mov mov cltd cmp je jnp enter fcmovnb xchg sub push sub sbb pop movb or and test movsb in jnp enter popa or in and xor and xchg mov inc stos nop push movsl ja sbb aam pushf push enter push repnz push in sub outsl adc dec add adc stos pop dec test push xor cmp fild xchg dec bnd inc rorl pop xor lcall in and lret adc mov xchg adc les je cmp and ds mov xor lock jno (bad) pop jle popl (bad) ljmp and adc sahf pop jb add mov sbb sarb rorb sbb aam and jp mov add jb pop add pop lds xor inc shlb addb in daa sub add inc fmul inc add imulb dec (bad) repz adc jle xchg adc xchg jecxz insl iret add lcall jne inc les sbb push sbb inc and movl inc daa test pop int pushf dec jns xchg or hlt inc pop and cmp cltd popa nop test stos mov jmp cld push sbb dec pop clc fmuls inc sub cmp or push stos pop inc call add push dec cmp (bad) mov js add popf mov sbb cmp or jmp dec sbbl stc push sbb push (bad) mov cmp xchg inc cs int pop pop add cwtl stos into addr16 dec dec (bad) cmp sahf cwtl pop sbb fsubs enter adc lds and add es and pop pop sahf mov cmp adc (bad) push inc adc mov out out pusha jl mov mov lock pop sub mov movsb add adc lds in add rorl inc jge push sbb sbb cli adc or dec push sbb mov xchg or jp dec and dec xor fsubrs add xor sbb fstpl add adc pop jp arpl sub mov (bad) cltd jecxz pusha xor stos mov xchg jns adc sbbb cli out add (bad) fsubrs cmp pop dec test or in sbb cmpsb dec jae xor add aaa adc nop add add hlt mov sbb sarb rcrl sbb outsb (bad) jb mov lahf aas sbb dec push jb sbb ljmp jns push leave jne or lock jb inc cmp cmp imul jns imul mov add add sub xor mov xchg mov adc imul les add ret ljmp and mov lock adc pop push dec dec add inc gs repz lret sbb mov jns das ret xchg push in adc insb adcb cltd mov push push fidiv (bad) mulb das (bad) jne divl adc add int sub dec rorb mov enter in aas mov jb fnstcw jp mov lods sbb jo (bad) push xchg sub or adc stc or insb push push dec clc adc xor adc dec or inc mov bndldx mov popf inc rcrl adc or or fdiv mov popf add sbb mov sub sub mov jecxz fmull decb add in pop mov dec fldenv testl (bad) lret in pop adc lods push xchg mul loopne inc and mov add pop dec (bad) jae push push aam push stos xchg movsl movb mov cmp jmp pop cmp dec sub clc xchg repz mov leave mov (bad) jae add es mov and fadds fistp repnz aam dec xchg aam jecxz (bad) pop dec in pop adc xchg mov sbbl push add rcr push inc shlb sub xchg or adc push test icebp add cmp or add insb cmp or popf cmp push lock clc dec add and sub add jge,pt (bad) and xchg in jo cltd adc sbb jg les mov push add stc push mov insb outsl mov pop imul (bad) or dec xchg dec icebp inc push jo push pop loope (bad) jo adc inc call xlat pop es inc push (bad) pusha fsubs shr push rolb pop xor call add adcb addr16 and movsb inc add pop idivb or shlb push test sbb pushf enter inc inc aaa sbb sub insb and inc daa loope test repz mov cmp pop add cltd ret push fs mov or jl lods movsb movsb sbb lods dec push adc mov mov (bad) popa imul call jnp fdiv mov xchg pop jo pushf xor sbb xor mov xchg idivl inc dec into xor mov pop outsb jb xchg out adc jno inc lods out sub and (bad) mov and adc mov push or fwait xchg inc sub sar mov pop enter je or sub (bad) push and aaa mulb loopne add push fldln2 or dec mov adc xchg lock cmpsb frstor push nop shl add pop push push inc movsb push add je out int add jle xchg sub mov adc cmp inc enter dec jae jo push or pop in jo xchg add xchg lock dec call cmp add movsl add lods push fucomi pop pop lcall add movsl add mov push dec push lods pushf pop or dec fcompl adc inc jmp loopne and lock inc in adc (bad) je and or push test (bad) cmpb popf inc adc jmp int3 mov outsb pop inc mov jno (bad) pushf adc dec adc pop mov adc pop mov cmp aad aam sub push dec inc or jmp insb in mov sub add jo les and adc lock xchg add ja je inc mov nop sbb (bad) pcmpeqb adc jmp mov jb inc subl punpckhbw lahf addb mov mov cmp mov xor pop cmp sbb jmp rol push sub lret (bad) pop dec sbb mov clc cld mov fwait xlat popa stc jp push pop or fisubrl or and push pop mov orl lahf push clc cmpb sbb jg movsb add dec add push dec outsl pop ror out daa test pushf sahf loopne jns add add push or add dec dec js mov pop jo jp sbb dec or push xchg sbbb out das xor pop sub adc cmpsb push subb and jle (bad) xchg dec xor int3 call fs rcll adc popf add push rcrl adc repz rcrl stos jns xchg mov mov pop (bad) inc and or mov push xchg mov adc stos and inc cmp and pop dec jo adc mov adc enter pop dec test mov sub pop inc movsb and sbb addr16 add sub (bad) jae hlt adc leave mov xor and aaa add xor cmp adc jp jo sti xchg mov shrb hlt dec clc fbld sbb call sbb and xchg (bad) sti test and pusha rcll add ja test push cmp or jl nop daa imul nop loop nop push jp (bad) mov rorl dec push add roll int3 add int3 push push sub cmp or jg loopne xorb mov inc and push das mov and xchg sub mov jb cmp jbe adc inc or mov in mov loop movsl pop adc mov rclb add dec movsb nop sbb (bad) out and mov popf add sub cmp hlt sarl test pusha jp jge add xor or fsubs mov jnp lods shl cmp in mov add and cmpsl rol mov lcall test sbb push ret test in mov or lock mov xchg and add inc fisttpl stc (bad) push push push movl dec sahf xor adc das es push sbb or insb int xor add sub mov push jnp test in inc enter cmp (bad) (bad) or test and xchg pushl or sidtl push rolb mov or lock sbb add test and outsb fisub and je adc mov rorl sub cmp jmp clc in rorl sub sbb call add ret stos inc or mov popa sbb sar dec inc jmp and mov and jg outsl pop nop sbb fild jae subb jb fmul jne inc sahf add push fcmovb loope push insb add mov lock or into sub push add dec mov insb int3 mov outsl push int sub (bad) jmp add leave movsb inc and mov cmp fdivrs push xor add gs mov lods pop inc dec cmp jmp inc pop sbb loope mov fimull add (bad) mov bound packssdw sub js fldenv js or fs or in aaa ds xor dec aad cmpsb cmpb call dec and cmp test xor stos push int imul in mov enter mov mov mov (bad) mov push (bad) lahf mov cltd push sub imul or add xchg pop ja popl mov out jmp stc mov mov popf pop cmp xchg dec or mov add dec inc lret in pop lcall adc hlt cmp rcr push dec push add (bad) roll mov outsb mov fiadd and stos lock outsl add scas and mov push test pop popf mov push rclb or or loop jnp sub or sbb pusha popa dec sub inc je mov inc mov mov adc xor sbb push popf push xor in es add enter mov sti jl pusha idivb lods adc dec push enter pop adc pop dec pushf push and das add nop add or pop add dec and cmp sbb inc (bad) loope fwait jl mov stos daa jp icebp rclb ja or add clc movb enter add in mov shr jmp movsb mov inc add inc addr16 push sub lret adc insl pop mov mov add nop cmp add add mov mov inc into pop sub and ja push pop ror pushf shrb add push movsb add incb jae and loop cmpsb enter les sub dec insb (bad) mov dec and aam cmp scas subl jecxz sub int3 adc and mov sub pusha imul mov dec pop push inc xchg cmpsl sub add imul sub sbb (bad) sahf dec lock push rolb xorl add jecxz insb mov mov in shlb pop xchg movsb adc popl ja mov insb add lret and rcrl adc test nop or dec call call lahf adc fs mov sub pop adcb popf sbb xchg add (bad) lock into push and xor (bad) adc inc sbb xchg mov add adc dec adc jno mov xchg push inc add in dec pusha js mov add mov test faddl xchg movsb mov mov add (bad) into xchg sbb mov mov ljmp push mov dec (bad) mov mov adc (bad) loop push dec cmove push inc add add (bad) xor inc mov call pop sub cmp push orb jge clc test jmp lea mov dec and clc decb sbb fs jmp les dec pop sbb sub popa cmp jne lds loop inc cwtl jmp dec add xchg inc push popf loop int3 or xchg or dec push in and xchg loope mov mov ret mov rorb das test cs jo rolb je xor lods (bad) pop dec jg cwtl fdiv sbb (bad) int3 mov jge in dec jecxz mov pop sbb mov fnstcw bound cmc pop nop enter add hlt ret jmp mov adc cmp push inc inc shr lods adc add loop xchg mov pusha cmp add out fmulp sbb add xor jle popf add sub pop add es mov sub leave push add sub in es pop mov nop mov popa imul push mov sbb dec add mov mov or jmp sbb test sub mov sbb mov mov push inc lods loope mov and adc sahf xlat push stos mov add or loope xchg sbbb lds loopne mov mov mov add or popl fs dec sbb and in pusha dec xchg aam mov int3 jno add adcb inc add cli les pusha sub jne sub inc addl daa or popa nop shrb test dec inc popf adc xor subl enter dec dec or add lcall push cltd in adc adc jg daa push adc pop aad xor cmc mov in out cmpsl dec daa mov inc inc adc or push enter test es pop xor adc mov stos int3 and (bad) shlb test add mov mov stc xor in in xor mov dec push mov add xchg xchg inc xor or loop xchg pop (bad) sbb lds cmp mov ror adc in push or and and and movsb or int3 les jle sbbb loope popf cli mov or or mov hlt inc add mov mov ret arpl jo cmp out out and mov daa jno mov out jl test push dec mov xor mov cmp loopne inc sti xchg movsl dec jge pop push stos pop pop pop mov mov pop mov xchg jp and add (bad) adc add mov add adc cmp push sbb pop test add and lret fldl2e movsb add out adc es mov xor mov scas push in sub mov rol inc and xor adc in and push addb in outsb int3 xor or jmp arpl cltd popl test in std add push aad dec int3 in cmp in pop and (bad) notb sub add adc push lock enter mov or add push mov lock shrl and insb adc push mov and sbb adc sub pop adc pop xor inc inc les imul sbbb movl ds dec push jl shl ss roll xchg mov ljmp add mov int3 adc mov das lcall sbb test fmul xor loopne insb das add dec and dec adc adc int3 mov popf scas adc lea xchg pop and leave cmp add and dec sub nop xchg or sbb xor pop mov add imul cld lar sbb sbb sbb lret dec pop and cli inc hlt mov push pop lods clc sub subb (bad) cs call test fs addb add (bad) push xchg push mov xor ret jmp push or add (bad) xor jns lock call jge stos cld jl and sub adc add adc loopne xlat add call cmp outsl push inc addr16 or sbb inc xor mov and js sbb mov jle push pop or ret movsl inc inc fimull add outsb popf out xor xor add pop pop jae loop andb cmpsl cmp dec pusha jns xchg bound fs pop push or aas and les in push test out jb dec outsb hlt jge xchg cwtl (bad) ja hlt and in lret pop xor mov dec stos in sub inc and unpcklps test add out mov sbb sbb std dec dec jo add push sbb pop in shrb jecxz lods lds pop pop add mov outsb lods cli dec push repnz mov pop inc add dec ja out cmpsl repnz sbb pop or out fstp sbb cmp sub movsl adc fiaddl adc imul xchg add and call mov shrb lret mov cmp mov cmp or mov jns je jbe pop rep sub movsb stc cltd mov ds sbb test shll adc mov loope (bad) push dec pushl rorb movsb clc fnstcw sub mov lret xor cmp add lret aam movsl dec inc pop pusha lods lret clc mov subb add jmp aam pop dec loopne gs xorb adc push mov aam inc and xlat lret add push push sbb rolb fsts jge lret add inc shlb xorl add orl xchg sub adc ds xor jp add cmp add cli sbb adc imul adc mov sub pop scas lea mov and orl jp (bad) adc cwtl imul sbb cmp and dec int lret in sub insl or out xchg and xor push test int shlb push jl jl popa andl leave or pusha add xchg push rorl lret adc jb hlt gs (bad) les adc stos mov rorb add andnps mov and add push negb lock sbb mov mov push pop shlb mov imul pop cmpsl fldt xchg push sbb call add add ljmp test test push call cwtl cpuid xchg (bad) cmp shlb xchg cmpsl mov lret jo add xor mov popf pop call and jo out shll push js jecxz in enter out inc mov cmpb lret add add ret pop cmp ret cmp loopne push repz std sarb xchg fcmovb push arpl inc es mov aad add cmp push lcall dec or lret add mov mov xchg push test pushf (bad) roll aas xchg jl dec test jae adc fistl mov movsl pop add aam or les nop push dec in inc jl call pushf jp pusha adc nop xor lock jl lea idivl jg or pop inc mov adc jae adc mov sti fsubrs or popf nop aam iret daa xor inc test and (bad) xor aam add jb mov sub popf outsl pop sub push and dec push aam movb add jo iret adc jl or push mov (bad) js loop test push mov js sbb pop out mov mov dec push ds push xor jnp pop insl je lods mov std mov mov push scas xchg insb enter jge jns add add add pushl xchg sub xor mov and stos leave sti mov insb cmpb rcrl pop mov cmpsl test cs ljmp orb lds pop js mov inc add mov fcompl stos int3 add rcl loopne jno add fsubr inc adc test enter push cmp push enter lock dec clc pusha add fsubs pop lcall movsb mov les or cltd jo add jae rdtsc pop daa pop movsl sub cld test movsl addl es or xchg add fild sarb fisttpll cmp mov cld push sbb nop mov jns out iret nop icebp mov mov out jo cmp enter cwtl lahf pop sbb movsb pushf sahf pop add add (bad) lods add mov push jle or cmp push subb cmpsb scas adc adc test inc xorb jl sahf xchg mov jmp into lods jo ljmp addb cmc sahf imul je adc and xchg sub mov sub jo cld mov test lret jp ds int xchg repnz mov popa hlt in add int3 jno sahf jl cmpsb (bad) xor xchg dec in insb xchg sub in or popa outsl and sub loopne in pop xchg rolb push mov clc imul lret inc outsb pushf jl jo add stos or rolb add loopne xor shlb mov pushf dec xchg sub xor and cmp push xor jo dec iret aaa in rclb enter push sar sbbl or pop jge lods mov cwtl mov mov adc dec jp ficoml mov fistpll outsl or fcoml adc lods inc in loopne mov jmp test in repz xchg dec sbb hlt xor iret loop inc adc inc inc mov dec leave orb cs js enter comiss mov inc scas clc (bad) cmp cld jne push mov subb add sbbl cmp insb pop jns in add jo addr16 jo sub sub lret pusha imul rolb cld mov sbb stos jo jbe or mov sbb int3 inc sbb mov (bad) lret xchg rcl mov push in aam repz jl clc or mov cwtl lods cld jb pop test sarb popf pop (bad) paddq cmp push ror adc add adc inc sub mov aam add sbb push push pushf push mov lds cwtl and les imul xor in jecxz fsubs dec icebp inc fs outsl pop sub movsl dec and add sbb xlat (bad) popa les cmp test push jno pop fnstcw and or xor xor out jp ss mov xor and lock mov (bad) insl clc mov repz dec adc pushf cmp or (bad) sbb adc push pop hlt lret mov lahf add stos push mov (bad) enter jnp sti shl jmp int or in lea and or xor dec lock pop (bad) enter pop jg mov cwtl jp in jo mov in lret hlt push inc mov stos push dec rcr mov scas cli js add jne push pop mov pop mov jge nop lods pushf cmp iret xor dec add lret stos sarb cs into or outsb mov or mov xorb cltd adc repnz inc movl aaa mov add xor mov or leave movsl popf pop xchg adc pop add les shr ljmp fstps inc mov or pusha push push lret pusha pop mov fstl add add jnp inc lods inc inc and dec xor xchg pop cltd pop stc hlt sbb popa push and mov js and or jp mov scas push cld daa or ss and out icebp sbb dec repnz pusha imul sbb mov sbb (bad) mov ret ds and rcrb xor jnp adc push (bad) (bad) jmp cmp xchg cmp dec cmp jbe test mov mov or dec ja mov push and adc je (bad) cltd hlt xor stos ljmp sbb inc mov lods push pop sub cmp adc jl movsb add pop (bad) jo mov adc jb mov mov add add int3 sbb inc (bad) add nop jge in jns dec movsb pop add push pop add mov pop lea xor adc jb fwait (bad) cmc sub xchg in mov pusha mov push or call add or xchg and outsb adc inc jge aaa cwtl push or pop insb add cmp insb add inc fcoml lea cmp xor inc enter and leave adc xchg push rcrb pop mov xor xchg xchg adc into nop jg nop addb jle add cmovp ds or xor mov imul push or (bad) pmovmskb loopne shrb ret push pop in hlt push (bad) mov jbe stc mov movsl adc cmp mov push daa inc insb and aam movups test cmp rolb push lea pop and test or and dec adc nop in daa mov dec mov lock add out cmp dec enter rorb leave xchg loopne and bound jns test jo arpl hlt fyl2xp1 shr jns repz push push (bad) cmp jl jns fiadd pop (bad) leave lret pusha add jo int jl idivb test imul adc adc push push out int3 popf lods fadds fnsave stc push adc nop fdiv add (bad) jl xchg lcall push (bad) enter imul xor adc mov and lea pop les call sbb lock mov adc jbe xchg xchg lret movsb mov jge or xor insl popa pop push sbb xchg loope psadbw test lahf pop fmull pusha mov fbld add push sti ret cwtl dec lret mov dec aam cltd mov pop cmp in add das movsb jecxz jecxz loopne imul cmp sub add fidivrl pop aas jae cli add jp,pt dec ljmp inc mov inc daa adc push out xchg test clc cmp lcall mov fist mov xlat inc pushf jl cwtl out xor outsl xchg repnz (bad) xchg int clc xchg sbb icebp cmp and xchg adc aad mov shll ror mov icebp add xchg enter mov mov or lock push mov sbb inc mov mov popf adcl cmp leave push xchg sbb add adc or int3 add inc (bad) je push xchg mov mov in je adcl out add imul jl loope ret dec js mov add or lcall mov jo mov in and jp inc loopne sub loopne,pn ja mov loope jo push in fistpl mov int3 pushf fwait sub lods jo nop add jno stos ret mov sbb jns inc and stos shl popa pop popa aad xchg aas or imul add lds fwait ljmp roll call lods pop sahf fs aaa in mov sub sbb (bad) inc out inc xor pusha cltd inc mov dec nop push pop test pusha decb inc dec iret sbb xor or inc sub push cwtl inc dec jp sbb jmp outsb (bad) jno and xchg inc or inc xchg pop cmpsb imul stos ljmp call mov xchg mov enter loopne sbb dec fnstenv and adc clc fisubrl popa andl (bad) jno push dec out mov cmp adcb cmp js dec stos test xchg mov dec add arpl pushf sbb sub cmpl sti and add cmp dec mov dec push mov pop rolb jns ficoml cwtl pop xor mov aam rcrl jns add mov jno cmp imul xchg test jbe lahf test hlt pop mov lret inc mov xchg push mov arpl sbb cmp cmp sti les fiadd mov sub faddl push mov sbb xor mov pop inc jecxz vmovd cltd add icebp lock xchg mov dec add out jb mov xor push into xchg iret add pop repz add gs push xchg push xchg nop aam enter imul add mov jo ficom and inc inc icebp or push mov add add dec cmp adc arpl xor adc hlt hlt ljmp out mov imul dec xor xchg lock cwtl add scas jp cmp xor leave bnd add lds clc sbb cwtl sbb pop pop cmp lret lds sbb dec in add and js mov sub lcall aad sub iret inc mov js pushf mov sub xchg imul jnp and push push scas cmpsl xchg xchg xchg arpl mov iret add adc pop pop jmp xchg or push into mov inc fcoms out mov cmp jl cli ret lret dec sub pushf lods nop enter enter nop (bad) mov xor mov adcb fwait add insb out movsl add in xor lret mov add loopne fnstenv lcall add pop xlat repz bound push xor add aad rorb add push out cmp xlat test lds mov fistp loopne xchg scas push mov add adc out mov stos shr mov jge add lret or (bad) insl (bad) std add or jne or les fadd (bad) sbb push add push jp adc fs pushf add mov loopne pop je dec cmp rcrb pop movsb inc mov sub push sbb fisttpll repnz xchg xchg syscall ss mov in or add fistp mov mov call dec lcall outsl and dec xlat sub iret add insb and cs push pop fisubrl ss and sub cmp out cmp mov cltd adc mov mov sbb fwait inc dec push xchg sub (bad) adcl sbbb cmpsl pop test xchg adc (bad) dec test rcl or xchg mov mov inc lock rclb xlat sbb and or or scas push lock add cmp in mov nop mov insl rol sub ss push cmp add mov repnz adc and dec lods sub pusha push sbb je push pop mov movsb xchg enter add nop pop js popa pop and jecxz adc sbb jp ret pop or daa mov adc fs dec adc rorl dec or jge fsubs cmp xchg add out sahf into pusha mov mov pusha fldenv ds mov sub mov ret add data16 hlt addr16 jnp jo movsb loopne adc add pop rclb arpl and or cmp xchg jp sbb popl push lock add jp cli rclb (bad) xchg push add mov cmp insb mov jl push lods repnz add xor arpl daa cmp sbbb shl das nop clc inc or sub stc push or or add out loop mov xor push dec (bad) mov movsl push (bad) fdivs nop jle mov add jb push je test and (bad) ficompl mov lds lods dec add and add lcall add out pop iret ret or dec xchg jb je pop cmp push add adc hlt insl push pushf pop mov xchg sub inc lods scas or imul ja add xchg pop xor mov mov insb les sbb jbe adc dec (bad) je xor rcr incl rorb js mov mov adc cmp test pusha aas mov or xor out ror mov sub mov xchg in inc inc call and cwtl mov dec push or sbb (bad) (bad) dec inc and adc add cmp lret push dec jne pusha in mov out lret push into inc cmp xchg add cwtl push xor test pop cs or or add or jmp movsb xchg push cmp cmp stc add mov inc dec add (bad) repz in push xor push xchg adc jmp dec mov mov mov addr16 add ja push push jbe xor add lds add and add leave inc inc sarl mov sbb jmp push add in and std hlt call push cmp xchg jno js mov add cmp sub adcl xchg test inc test add lret cmc mov xor and or pop jmp dec jp icebp movsb sbb inc into test xor sub xchg clc mov xchg pop cmpsl into mov push inc lahf pop jbe pop andl sub sub (bad) shrb sub stos scas lahf add fisubl insl jb and inc insl nop add aas (bad) and mov dec movsl test mov roll dec xor add sub fnstenv inc or push and mov fadd inc sub pop and add call cmp test fcmovnu mov hlt lock mov repz mov xor inc in jae lock es push xchg hlt jl pushl pop push or push pusha pusha jo pop imul dec dec insb mov and les outsl and add ret xchg cwtl xor cmpsb jae jno push arpl data16 push out fdivs add pusha decb loopne mov jp dec ror pop push push sbbb ljmp lret and es mov sub jl pusha jecxz push rorb movsb into cmp add out aaa mov xor sbb faddl lds out sbb mov mov or lret pop ffreep xchg cld sub js test sub aad imul mov mov (bad) or mov mov mov ljmp sarb addl add xor aas add or xchg add push adc sahf jne add pop inc mov dec push sbb jmp push xchg pusha sub mov das mov jbe pop ljmp aam iret pop enter add popa fildl xor push cmc pop rol mov sbb dec int3 cmp sbb ss sti mov hlt scas jns and jae add fwait adc lret add adc xchg lret loop sub jo je or nop xchg add mov pop add push stc xchg popa addr16 (bad) arpl loope outsl inc pop lods jmp jnp aaa or jbe shlb mov hlt pusha lcall xor rcr (bad) mov roll mov outsb push xchg subb push call sbb int and (bad) adc xchg stos data16 push jo xor insl xor mov shll xor jo xor (bad) in or imul push mov rol add and rcrb and enter xorl dec add in inc adc cld xor pusha das xor pop es lods pop dec xchg add or jp ja into test das mov cmp dec js add cli ret cmpl (bad) xchg adc daa sbbb push sbb int repz stc movsb cltd sbbb lea inc mov mov push cmp mov mov jge mov mov loope inc and mov mov frstor push testb movsb mov and xorl sbb shr repnz sub lds pop js bound and test or data16 xchg je mov add add pop mov or add mov sbb mov addr16 cmc mov sbb dec outsb and add aaa adc repnz mov dec xchg mov fcomp add nop dec inc in call mov adc mov aam lock sti and es out sbb into adc dec les and js dec xor jne cmpsl bound dec int3 (bad) xchg js inc loope sub xor loopne cvtdq2ps or jae lret sbb xor pusha jl out ficoml xor lret inc push negb fistpl int3 cmp sbb sbb (bad) into lret mov jl or lret mov mov fsubl inc mov push xor adc ds sub hlt cli adc fstps imul mov pop jnp shr push add mov int xorb push add (bad) pusha pop (bad) jo jns mov js add scas jl (bad) xor jnp nop push lock lcall loope das es mov aad test sub xchg add jnp add mov cli sarb sub in lods rorl mov inc push pusha mov add xlat cmp add jp xchg sbb or add movsl inc bound mov popf inc xchg jae push mov sub repz pop xor add pop in add sbb pop mov inc mov adc (bad) adc adc inc adc ljmp add xor dec xchg and inc popf clc lods adc cmp push dec add cmp cmpsb bound jo pop xor in push hlt cmp cld outsb (bad) fist xchg adcb loopne add rorl insb jbe mov sbb int sbb cmp cmp nop fsubrl mov or ds enter xchg enter mov inc and lea and rorb mov sarl ret jbe lahf scas js imul jl pop insb pop dec lock mov cld insb pop aad cmpl fs inc mov or dec daa outsb lock cs cmp dec jp dec sub sub dec cs lock imul cmp std sarb mov or scas push ja das stc adc in test (bad) rcrb mov in fstps push lret fs xor (bad) pop pop cmc test les or loopne xchg add js loop pop or loope sub xchg nop mov jns in mov mov push lcall inc add and sti stos and (bad) add das cmp dec pop pusha ret lock and dec jmp scas pop stos adc jne cmc hlt xorb fs scas jo sbb pusha jmp mov aam sub out push sub lds adc orb jle aam or clc inc mov iret adc out jmp cltd popa cmp dec push js xor dec pop test movsb int jno jo imull pusha incl inc jecxz mov add test jg push mov loop jge jne insl clc push cmp add cld cmp and sbb out jg mov loopne sub mov add (bad) xor jb sub add into jno daa movsb mov add inc in mov insb push adc aam in cmp arpl nop leave jae mov outsb pusha int3 dec outsl std pop in or fisubrl jecxz in sub into lret push xchg xchg or roll cmp nop cmpsb mov (bad) je (bad) mov push cmc mov mov jg movsl (bad) pop andl lods fsub popa and jmp mov lret push lret sbb jmp andb pusha adc nop dec stc sub test add cld mov jl xchg inc adcl cwtl jae loopne inc bound leave pop adc pop mov xchg fcom cmp test inc lret outsl imul test setno lods cmpsl dec xchg lds pushf xchg inc add mov xor xchg cmpsl and dec shrl mov sub pcmpeqb mov call insl enter xlat orb jb int3 shll pushf (bad) dec jne cld data16 cwtl sbb jg mov sub arpl adc mov or cmp cmpsl cmp lret add xor xor negb push test or pop in fs lret push and int int3 aas lret jl (bad) mov fstl stos inc (bad) jo xchg mov jb jno jge add ljmp ljmp adc dec jno nop in (bad) repnz xchg adc sbb popf push push push out xchg dec popf dec jo add dec scas mov or enter test jge adcl clc shlb adc push adc mov inc dec enter mov pusha sub aas jl cli fmull mov ret jno popf push mov addl pop mov test sub jecxz xchg jmp push test movsb fmuls and xlat mov add mov hlt or pop fdivrl int3 push adc sub inc push and push push sbb pop push add inc imul sub adc sbb cmp mov mov clc jg lret or stos arpl (bad) call dec out ds int3 add test mov mov (bad) cltd enter pop xchg inc add push and sbb push mov xchg clc insl nop cwtl add sub push xchg pop pop add stc jl inc mov popf ret dec jo popa add pop sub cmp in bound ds nop add sbb mov xchg insb sbb jge or into daa mov mov int xor sbb push ds and push int3 shl add xchg test scas fild xlat mov push push mov pop (bad) addb or or mov test mov sub mov or inc flds push aaa sbb pop sarl lock pop xor sub sahf cmp push data16 adc (bad) subb rolb bswap clc adc punpckhbw pop cmpw test push movsl push jle mov loope cmp out add fsubrs xchg push adc das push cmp inc mov xor pusha mov aas rcll add clc ja add xor loope xacquire xor rcrb jae pop sbb sbb sahf ret pushaw mov jge aas jmp pop adc fs and loopne das add pop notb scas or mov inc aaa stc loopne sar cwtl js sub js xchg enter or outsb mov and ja and and or pusha cltd add out jne cmp mov inc xchg sbb cmp and shr icebp flds cmc sahf adc sbb mov daa lahf dec and clc cmp mov cmp or mov and push cli fsubr push (bad) aam outsl clc push dec stc sbb (bad) mov pop adc or adc mov nop outsl fstps test punpcklbw ret push mov or and sub in jae fistpll shrb int sbb push shll dec cmp ret lret inc push jmp cmpsl add jns pop mov mov xchg sub pop and fisubl rclb add daa dec and addl xchg mov or ljmp jp aad xchg add adc or add cmp push mov incb repnz adc pop hlt and pusha pusha cmp std fnstcw jl or and sub pop test xchg push mov (bad) daa mov or pop mov inc test aaa xchg in lret scas pushf ja mov daa stos pop jmp xchg loopne pop and and iret add test cwtl cmp sub insl jg fiadd pop push pop sarl sarl (bad) or loopnew push addb and movsl lods mov test or outsb push add jg xchg inc aad fldl push rolb mov xor and inc hlt outsl aas jge xor adc inc push data16 and (bad) push insl jmp paddusb push mov or jl push cmpb pop and mov les shl mov getsec rcll pop ja imul aas roll cwtl xchg (bad) repnz and cmp int3 sbb add mov inc jnp nop xor pop fadds pop dec jmp mov and inc call fisubl rcrb shlb cmp mov ret mov fistl fs ficompl cwtl in adc and push mov push add and cmp movsb xor xor loop pop je cmp or mov cmp mov push xlat add sti sub adc cmp ds sbb cs or add icebp push or push cmp and clc fsts mov jns sub test or push mov sub sbb clc add xor push inc imul adc cld inc sbb or les jno hlt xor adc movsb and fmuls pop and jno enter sub and mov jns popa xor bound xor sbb ss xchg push dec and or mov or xchg or fnstenv enter xor adc pop pop dec xchg pop xchg js in adc (bad) ret inc push pop popf pop xchg mov and xor pop mov (bad) or sub push hlt loop aam adc sahf inc rcll insl popa enter or mov aad push or adc add pop (bad) pop adcb add shrl aas add xlat mov xchg shl dec add scas (bad) fnsave add aad xor push inc js add mov push mov push (bad) dec cmpb es dec pop out add mov inc rolb mov xchg xchg cwtl or inc das mov add mov sub or loop pusha cmp cmp mov sub xchg cmp adc add or pusha (bad) cmpsl test cmp test ret xchg adc adc lds or mov dec mov outsb or push in aaa aad (bad) lods add mov and and int3 sbb pushf lcall dec mov daa mov push mov and aaa fildl inc inc or cwtl sub pushf gs push and adcb pop pop jg loope jo mov aad ds push inc xchg jmp or ljmp xchg xor les mov push and xor inc or call mov xchg inc sti fucomip push dec lock add adc das test cld je jge push xor sahf nop fisttpl mov or cltd movsl loope dec inc retw push and and cmp and dec push cs cmpsl mov daa dec dec or pushf sub ror fs sbb test cmpsb aam adc insl adc (bad) cmc lret out pusha pushf cmp sbb mov test jbe cmp pop xor in fsubs pusha shlb rclb and pop mov fisub adc xchg jo push mov inc jo pushf sub cwtl add adc sbb pop fs pop add sahf fs nop dec test movsb nop or xor insb add push movsl and mov js xorb mov mov subb or sbb xchg push rorb movsb and jo xchg sub jl or push dec fisubl pop or push xchg imul add sub add inc stos je dec aaa or loope add (bad) mov dec sub or addr16 and mov (bad) xor int3 and mov and arpl inc pushf sahf pop and xchg pslld xchg rclb xchg js sub mov xor or cmpsl or adc sub sub pop and mov flds or push mov lcall push subb push mov or lcall and lods loope inc fistl aad mov pop sbb out pop jg xor nop (bad) cs adc pop pop xchg mov lret dec aaa loop roll mov adc sub int3 sub and call inc push and sub loopne sub xor mov imul out stos push and cli je or fs adc push lret mov xchg movsb adc push cmp nop movsb lcall or les inc (bad) ret or pop dec xor cmp dec pop xchg pop xchg sbb xor xchg inc push (bad) mov sbb adc outsl and lcall xchg adc pop lret add and sub daa jle mov aam mov pusha and push sahf or cmp mov add push (bad) add aaa or jb shl call movsb and sub xor es sub inc cs jae call jecxz push dec dec int3 sbb inc clc push int3 inc je mov adc faddl or mov xorb fisubl jo mov imul sahf lret mov jb shrb nop mov test push add add es (bad) hlt cmp sub ss pusha outsb (bad) push mov lcall add pushf mov scas xor or (bad) cmpsl jmp jns or adc insb inc jl jecxz mov outsb adc pushf test mov add scas xor in push dec pop pusha xor fsubrs shlb cltd add js and lds sbb mov mov jl out sbb test xchg mov das add or push push addb add and aad sbb pop cltd pop jae gs mov lret and sahf add xorl fmuls fdivrl add mov add aaa push mov mov test fsubs loop inc loopne adc icebp fisttp inc push test add ljmp pop mov xor inc sub data16 mov das call aaa fist mov dec daa sbb fmuls sbb mov push xchg outsb inc stos pop sbb mov adc jno ficom pop dec sbb into dec sbb add sub call movsl pop inc fs mov loopne mov xor add xchg aaa fnstenv push scas rolb jno rcr nop dec jl loope test and xchg daa aam push add cltd mov pushf fs cmp fimul (bad) push movsb cmp or xchg add ds add (bad) mov jae fild movsl cmpsb mov decl (bad) mov adc or xchg lods push adc jg in sbb inc fldenv notl push addr16 popa add sbb adc cmpb jl out pusha fs adc cs cmp pushf sarl sti sbb in jnp adc sbb xlat fs cli sub ret sub lock cld mov test xchg nop shl mov test cmpsl dec sub mov push push sbb adc stos dec sbbb movsl xchg pop in add insb (bad) mov xchg mov inc and fmull adc sub ret out dec inc push adc pop hlt mov add mov outsb test es mov inc xchg add in movsl adc lahf push movsb int3 mov inc mov xor add call lods add in push inc pop movl dec sarl cltd jbe das cmp push push js,pn aam sub mov les xlat test stc sub add adc arpl ljmp and xor icebp cld adc push insb or loop pop pop mov rcl ret inc add sbb add in and pop jecxz popf idivb insb std cltd jb js jno xchg in fs mov or shlb and xorl (bad) jl movntps fsubrl adc test or jge push or or data16 shr loopne adc xor aas mov les outsb inc adc mov rcr lret add aam sub adc out dec push dec (bad) lock cmovne jg cmp mov push sbb je mov add test inc (bad) adc (bad) push pop stos mov ret sub ret mov in pop cmpsl stos cmp mov sub xor popa add ret pop inc xchg pop mov adc mov pop mov test fistpll xor xchg adc es (bad) add pop push les loop jbe addb jg dec jmp dec fsubrs mov dec xor pop mov add xorb insl je test sbb dec lret insl mov jge push loopne sarb sub xorl (bad) and and pop bound mov faddl or scas xor mov adc add sub movsb mov adc leave bswap xchg or mov repz mov into hlt cwtl int3 xchg js mov pop test mov mov adc std inc push or fwait inc xchg add push flds mov and or or (bad) in pop test lock outsl adc fwait jle mov nop mull cmpsb shl dec or outsl out add add jg lods and lods mov or dec mov push mov daa xor arpl mov sub or sar in or ljmp mov daa add movsl or pop hlt ss mov movsb dec fdivs and inc pop test lock xor and nop aad gs cmpsl stc inc sub cltd or in je inc (bad) ss test test or lret push lahf add pop cmp data16 call add push fwait mov mov add sbb loope push clc xor sbb jp cld mov ror cwtl dec sub adc inc mov dec cmp aam cmc xchg movsb mov dec cmp loope hlt adc leave lcall sub int push mov sub inc fadds movsb iret mov add xchg adc mov inc sub add aam notb mov mov sub lods (bad) inc shll mov push jge sarl loopne popa sub and dec add enter and sbb test icebp cld dec mov dec sub lock push jb mov in (bad) popl adc punpcklwd dec scas or or xor mov loope or or orps int leave pop add scas sbb push jge pop fsubrs adc outsl ljmp mov add push arpl push mov xor cmp sub aam and and les mov rorl dec in jae add imul cmc cmp mov dec movsb adc stos add cmpsl mov test clc dec push rcll fmull leave add add outsl adc test jl cmp rolb (bad) mov sub add in mov cmp cmc inc sub mov addr16 and add pop add andl cmp lcall sbb add mov ret inc jo fwait xor sbb push fld push lahf mov add dec push movsb push adc mov xchg inc (bad) iret addr16 sbb sbb push (bad) arpl sub jle mov addb inc test jo sbb sub mov aam xchg jnp add mov outsl loop add and jge scas pop jae fsubr cmp mov mov popf les fbstp jge pop inc mov xchg nop mov jp or (bad) dec push lahf pop (bad) fildl inc cmc add test roll jno inc js jo jecxz mov sbb xor pop add dec dec test dec inc pop or ja movl (bad) mov pushf adc add andb fsubrl stc cmpsb out test sarb lods add jno xor std and pop add or int inc jne ret arpl add sub fs mov mov xor dec mov (bad) mov pop aaa sbb sub xorl dec push outsb cmp je iret xor or cmovno adc cld mov sub rorb jns mov testb mov xchg mov hlt sub data16 lcall mov inc pop ror (bad) sbb push push cltd mov test fcomps das add (bad) jb js imulb sub xor scas xor push stc sbb add in xchg fnsave sarb push add packuswb xchg xchg cmp in fstpt mov scas add jo fbstp leave and test in into pusha pop jno mov mov jmp popf mov ficoml pop and push into test push xor push loopne inc ret mov jmp dec outsl jmp je jmp push mov mov ljmp scas cmp sbb movsb imul push cwtl push enter popf arpl popa imul aas lret jp mov test xor notb add lods mov mov xchg in mov popf xchg mov pop inc mov add outsb cli xchg dec sti repnz call xor xchg dec jo in movl xorl rcrl and jnp clc push loopne mov repnz add sbb loope and mov and repnz sbb jmp inc lods mov inc loopne movb stos mov sub popl sbb pop xchg fcmovb pusha jp pop add repnz lods sub inc popa push data16 push out loope mov pop loop daa add adc mov lds fldenv sbb xchg mov lahf inc push inc je fs iret push add rolb pop push or add sahf cmpsl or sbb ret call xchg stos xchg cmpsb ret cmp sbb jb jo jne push cmp ret or stos js add pop jg mov sub ja pusha dec rorb mov mov (bad) pusha subl adc js mov daa dec mov rcrl test pop inc mov inc shrl ja lds mov inc dec mov add ret or mov add call popa or adc test adc adc mov adc mov or cmp stos ja subb popl fcmovu pusha cli cmp lahf mov gs roll mov jge mov xchg clc sbb xchg incb fldenv insb mov pop movsb ffree icebp inc jae add in jmp add push adc mov iret test and lods (bad) sbb adc mov pop and int cmp clc sub (bad) int3 fisttpl adc adc test ss push push add pop out mov stc mov mov insl stc fadds test push dec or iret dec ja repnz sbb nop adc sahf adc aam into pusha loopne mov mov int les or ljmp insb orb sbb push jne aad push dec fdivs mov adc and notl insb add test (bad) adc dec add popa (bad) adc adc aam inc fiaddl xor int ja andl int3 mov xchg (bad) inc adc rcrl je incl xchg mov imull dec les add fadds inc cli test xchg and sbb dec push and mov pop push pop nop jmp daa fldl xor (bad) jl lods pusha xor out sub test cmp or adc xor dec inc sbb int push sbb sub jne movsl cmp mov es mov sub je inc dec mov mov add jb fwait mov bound jl add jo sub mov sub xor adc and add adc hlt push test addl inc push xchg inc inc push or loopne jns mov add subl stos xchg das mov sbb xchg sub and xchg je rclb int cwtl or add and cmp out cmp push lods ret popl fdivs cmp inc ljmp addb jecxz push jae adc or mov aam sub add cmp mov lods fldt popa mov loopne add lods (bad) hlt sbb add scas test rcl shll lods sbb in or mov adc adc lods sub add mov (bad) sub int shlb adc (bad) fmuls sub lcall je loopne push add pop orb rolb xchg scas aaa shrl test imul or subb sub ljmp mov mov push aaa call in pushaw jecxz popa in sbb push mov sub or dec or and sbb (bad) sbb push inc dec or sti sub sub jne and push rorb add cld and or hlt int outsb rcrb sub cmpl sbb sti mov or aam and insl mov sub pushf cltd orl mov shrb add aas std enter push jmp ljmp or call pop and and or pop std pop adc enter or push sub or pop xor add rcrl add cmp mov cld add dec sbb inc lock lds xor bound mov clc adc (bad) mov mov and mov mov mov (bad) cmp cmp insl loope int inc push (bad) sub adc bound jl jmp int shrb mov mov rcl (bad) or cmp cmp mov les and mov mov ret pushf jle pop cwtl nop or xchg adc lods testl pop adc and add aaa outsl mov pop leave adc test push xor pop mov std xor test lods jle xchg fs ss xchg inc test movsb inc inc pop add or add call add fldenv jnp lods nop dec lods pop mov (bad) sub mov mov adc and pop sbb sub add xchg adc ljmp jl and mov or or push add sub insb rcl mov sbb jbe dec cmp stc gs push add mov lods cltd lock inc (bad) add sub sub fist call add sub sbb sub repnz inc test out mov xchg cli inc mov lahf jae add fsts add sub adcb incl pop mov pop mov add imul mov mov pusha push (bad) cmpsl sbb (bad) mov add sub or mov jns addb pop or outsb pop in or ret xchg lods add xchg and sub test iret (bad) xor sarl mov rclb xchg clc pop in sub mov cwtl jo repnz lds sub mov push cmp test adc cld rorb sub (bad) mov lods mov lock mov mov rclb sbb es mov add (bad) xchg rol lods ds sub pop lock and push scas nop lock sbb shl push test adc test test subl aam adc aad test mov push addr16 orb xchg cmp dec test add push movsl test xor popa cmpsl in jns clc and cmp sub orl nop pushf add out std lods (bad) jo push dec out loopne into mov cmpsl pmuludq or sub xor les enter int3 mov sub adc lahf cmp scas add fs push mov movsb pop mov push sub add mov and mov into fnsave inc xor nop xchg pop dec and jne or pop lret hlt lret sub or scas pop xchg push cmp sub jno xchg pop cmp idivl lods cs bound push and add clc mov mov xchg pusha adc mov add inc dec pop pop (bad) mov add push lret lods daa adc das clc incl movsl push (bad) dec icebp jbe mov cmp hlt daa mov js adc and or mov xor xchg repz fimull (bad) andl inc call nop mov and mov adc push sbb mov rol or push sbb test jnp and nop mov mov add push mov sbb (bad) cwtl or add aam add stos sbb adc and mov mov add popl cmpsb je add inc fwait cmp sbb dec es mov push test bound cmp popa pop aad call cwtl adc inc sub fwait adc in in lods nop sbb xor push test pop mov and mov inc cwtl add in shrb test adc popl clc add pop sbbl cmpb add add fisubl push mov sub mov arpl jg and test push ljmp and sub and fistl or testb into fist inc mov push and dec sbb inc or btr aad cltd out adc jp fbld adc or sub fildll adcb fisubl jb cmp lock pusha stos and add dec cmpsb push int add mov aad jmp add lock data16 xor add mov or mov scas dec pusha aam mov and fist push jnp pop adc fwait inc xchg ss sbb into add dec clc aad (bad) cmp push clc js clc push push mov int adc cld inc hlt mov outsl cli (bad) jb mov imull lcall es jp inc aam scas stos mov lock adc cld cmpsb les aaa mov mov bound push mov int3 mov test jb add cmp cld adc add mov popa xchg sti add mov popa mov sub xlat mov lods rcr icebp adc outsb test inc xchg cs mulb inc (bad) ss mov addr16 sbb jae mov jle and push xor adc xchg mov mov add adc loop pop inc cmp ds mov rcr call jle adc (bad) daa subb mov cmpb xchg cmp fild stos add int xorl cmp pop pusha scas push sbb lock mov adc sbb mov pusha mov ja or cs sbb mov subb mov jecxz loop outsl and leave mov loope cwtl adc push push jae adcl push xchg fiaddl clc out mov push aam (bad) (bad) or lret jb dec movsb inc mov add clc add pop lcall xchg pop icebp sub outsb insl sub sub rorb cli push mov imul and xchg add fild add lock add aam adc lret aad xor pop cs popa add inc sbbl sahf roll mov sub lods shl pop pop lret cmp push pop push cli out fcoml stos add ret std push stc xchg dec cmpsl imul (bad) xor ss mov lea xor mov std add sbb inc jnp mov mov xchg sub mov cmp push adc rorb add lcall nop push pusha fsubrs fisttpll push flds inc pop mov push add push js sbb bound outsb fmuls xor push in cld addb cs lret outsb and add mov inc push scas mov adc pop add fisubrl push or adc (bad) cmc xor nop pop push pusha jl xchg ljmp clc adc push xchg int3 pusha xor lcall rcrl mov (bad) mov icebp dec adc push sub lods loopne sbb sahf nop hlt movsb adc push add jnp in xchg adc std inc popf push insl movsb pushf sbb imul fcompl divb lret pop add ljmp add js mov add mov add (bad) xchg push pop call cwtl add mov cltd (bad) xchg adc out mov in and or cmpl adc stos push stc cmp stos mov lcall pop adc aam out rcll inc popa dec sbb ss inc push jb pop (bad) fldcw bound mov js mov mov pop stc add pop jne popf inc mov dec ret (bad) jnp mov add fs mov inc in sti jecxz add cmp sbb push js add pop sub into push lock pusha inc lods lcall sub pop add std inc data16 pop push or mov mov orps and sub (bad) push or pusha sub cmp adc push dec and sbb sub mov and es outsb cmp dec or mov xor fcomi xchg neg push pop mov pop fdivrs fs je add sub aaa rcll mov stos cmp insb push mov inc sbb fisttpll imul es inc dec ret adc inc push stos mov jns ret inc shlb xor or out sti cmp js les jne jb movsb cmpsb mov fisubr cwtl sbb cld in aam (bad) cmc mov hlt dec xchg les mov jo or cltd test adc push into or fs xchg pop dec cmp sbb and inc outsb ror setle cli and repnz mov fdivl cmpsb cvttps2pi out mov sbb gs outsb xor add push fnstsw test insb sbb mov or xchg jp mov and je cwtl sbb cmpsb and fstps sbb outsb xorb mov cld xchg add ds out lock insb sub aad jb sti sub xchg mov adc lock fsubrl das test add mov push sbb hlt xchg adc and rolb clc push pop ja repz inc dec jmp sub and xor sub lahf inc or fldl clc test cmp or rclb popa cmp push clc and leave pop and sub pop lock jne cwtl sbb mov mov cmp popa jb mov inc xchg xor mov jmp adc add inc dec (bad) je pop jo and xchg int3 xchg push std jmp mov outsl mov sbb xchg or push jno es push and mov sub inc add adc mov mov outsl mov movl xchg scas pop leave sub adc inc sub sbb testl pop test mov inc loop add mov sub fcomps or inc lds cmp nop lock mov mov outsl (bad) clc jno xor stc into jo addl daa insb nop cmp arpl mov xchg xor ret pop sub lcall pop (bad) lcall dec add mov adc pop sbb sbb and cmc cwtl frstor es mull fsubr inc pop daa int (bad) repz movsb cli std rolb imul in push pop insl int3 xchg add stc inc xchg pop sbb xchg loopne pusha fsubrs add movl mov insb (bad) push mov pushf add xor cli xchg xor sbb scas call imul xor xor int outsb sbb enter pop test pop pop movsb aad test push in and inc dec ret aam cmpsb imul add nop cwtl test push pop lcall mov nop and push js cwtl mov aad or sub adc push push adc mov pop jp faddl mov pop mov and inc lods int3 dec dec xor pop add fstps outsb add xor lret dec add add jl pop sub je cmpsb call dec inc jb repz loop aam sub js addb in (bad) inc cltd inc add adc adc xchg add insl mov cmpsl ficompl add dec aam int and leave shr (bad) neg shrl and inc dec xor dec xchg fdivr pusha jecxz ja hlt sahf inc inc outsl and aam cld push sti adc cmp add adc or mov out in and scas popa push add mov fsubl and pop jmp fildll (bad) sub addr16 out inc pop add or lods sub mov xchg cmc outsl and mov fnsave loopne out xchg jmp leave sbb and cmp add jecxz mov inc mov cs cmpsb mov dec jp dec add scas push fldenv xor pop pop cmp cwtl andb xor sbb rolb push mov cld push xor test adc mov loopne mov hlt xchg (bad) and push lods sub sbb out ljmp jo rorb mov jge add (bad) in pop inc or ret mov (bad) dec loopne cmp adc rorl lods mov push add outsl roll enter inc mov dec add lods add push adc outsb push xchg in mov jb add mov push add or xchg inc (bad) lret cli pop sbb js enter push jg xor rcrb in sub xor dec (bad) or les adc ss insl lock push lods add push imul xor outsb jp out xchg and mov push aam mov inc cmpps xchg pop mov or fldcw orb fisttpll pop int3 mov add pop lock lods adc sub addl or xchg ret or sbb (bad) cli aad insb push inc or mov popa rcrb push jmp imul jge test loope scas iret outsb jmp push jl rol mov sysexit push (bad) adc stc pushf bound sub sub lods dec and test stos dec add cs cltd pop dec andl or mov (bad) or mov pop cmc dec mov dec scas sbb cmp cmp sbb sub ret les mov pop add sbb test jl and sub xor (bad) fs sub in rcll mov xor dec stos sub into adc mov add mov xor and sbb add cs mov jecxz je xchg js fnop lock movsb cmp pop fneni(8087 xchg jb pop mov jns xor (bad) jo das movsb call adc or sarb ret aam imul jmp pop jecxz adc mov push fcoml movsb and or test lds push inc (bad) push jl cmp push dec outsb (bad) cmp mov ret or push les repz or add sub cmp add xor sub dec dec pop icebp loop outsl stos loope jo pop js xchg and ucomiss fst call mov sub push add and daa or adc dec adc and add sub lock aas jl popa push test and and jo cwtl mov add sahf sbb lcall mov bound mov inc loopne pushf je shl jne pop in cmp sub xor pop push adc (bad) rolb daa jmp add or test leave int3 xchg inc push and mov jo add sub cmp ja mov adc dec sub nop push es sar in xchg xchg fild add in je inc sarl xlat orb stos mov fsubrs xor sbb xor in mov push add dec add outsb ficom add pop jmp mov inc clc int3 push mov dec mov aam sbb repz and fmul ja cmp adc jns add or dec xchg cltd (bad) jo (bad) je or xor inc sub test and jle xchg push call and add (bad) aad and adc mov and adc and mov scas sub das mov (bad) or push sub ret push ss das lock mov add cli xchg adc adc pop ja mov mov bound jno sbb jmp in ds add jg jb add push sub cwtl xchg adc or ds add xchg dec mov shr fldcw add cli dec sbb out sub stos lea cld cmp add data16 nop sub xor xchg or movsl mov xor sub dec inc pusha adc cmp xor add sbb push or add pop incb xor xor adc movsb inc pushf leave xor jne sarb dec add mov sbb adc xchg xchg xlat imul movsb in and inc sub es mov pop add inc daa xor std icebp jnp add insl pop pop xchg push into sbb aad sub stc (bad) sbb xchg rcr inc xor inc or mov jmp xor js xchg pop mov cwtl add cmpsl fsubrl sbb dec add mov cmc xchg jo (bad) imul test addr16 popf and fldenv sbb add data16 push shld mov pop or nop xor add in xchg inc cltd mov mov je mov cmp adc or cli pop sbb xorb xor push sarl mov pusha add xlat adc icebp inc xchg loop pusha iret push mov xor lret mov xchg push call inc nop clc sbb pop push andl xor and pushf add mov icebp in sbb fildl and adc (bad) (bad) push orl add lock cmp das xor mov pop cmp fwait xchg jge mov add sbb adc cmc insl xorb mov subl lds cltd pop lret cmp rcrb adc loopne mov sbb sub (bad) or jl sub jbe fcomp rclb push pop and push outsl pushf add sub adc setae dec xchg xor sbb mov fisubr fwait push cltd mov loop adc sbb cmp fldl sub pop sub jns addr16 clc cmp jmp or add xchg pop or cmp fwait mov enter sbb cld mov sub sub mov jg mov je scas pop inc sbb dec xor cltd dec xor mov pusha and pop cmp add inc imul adc loopne mov add push sbb and pop fnsetpm(287 mov push cmp fidivr add cwtl adc test mov dec enter adc mov test sbb mov inc pop mov push nop mov lldt out cmpsl mov add jns xor (bad) hlt or adc inc sub mov jns sbb inc icebp xchg pusha add cmp rcrb sbb insb repz jmp xchg (bad) jne dec shlb add ss sbbb rolb cmp mov mov sbb (bad) push test add in dec xchg xchg push mov sarb inc jge clc fisttp aaa mov cmp pushf adc xchg rorl adc cmp add je ficoml cwtl cwtl in in loop ss push and push cmp pusha sbb push adc push push (bad) nop pop out adc and mov outsb add and dec xor stos adc inc dec leave xor adc inc cmc outsl in cmp add mov sub fcomps pop mov ret push std popa add and or cmp cmpsl inc add scas fdivs es cwtl pop sbb test sub mov push ret cmp dec pusha leave sub sbb mov mov (bad) cltd nop fs xor xlat add sbb dec cmp in lcall add shlb mov dec mov loope int3 mov call enter pop mov add dec sbb cmp cmc jne or push mov mov fisubl scas mov call mov xor mov sub nop js sti mov adc lock cmpsb push push xchg aam xor mov adc shrl jae mov flds negb sub dec mov mov sub add ret addr16 xchg subb sbb cmp add movsb lahf rolb add add test sbb or or rclb mov rclb jle sbb cmpsb pushf test mov xchg push mov int sub addl add pushf adc and xchg dec or pminsw and bound lahf cmpsb adc ds adc sahf clc pop lds mov bound (bad) add mov dec test or pop outsb push jle mov jl out adc clc mov jno sub rclb add scas inc not (bad) js push pusha add mov leave out mov mov xchg mov stos arpl xor movsl mov cmp in xchg pop xchg push adc and scas inc ss stos dec cmp or sbb xchg cwtl cmp stos jl fcomps cli lcall ss test mov dec in pusha xchg test inc js pop arpl mov int add push cmp pusha outsl bound fxch lock adc nop ja pop mov aad hlt andb push cmp adc sbb sbbl mov pop sbb sbb jl hlt in sbb rol andb and push fwait mov ss loop push adc mov xorb add lcall add adc ret mov and push cmp dec pop aaa loop push pop sbb fwait add mov pop insl out fs arpl and clc dec adc in sbb push lcall pop add (bad) hlt je popa test test orb sbb mov add loop dec sbb out or and add mov add es xor push mov lcall cmp enter rcl mov nop insb rorl fwait popa push add shrb imul sbb mov cltd movsb cwtl inc jmp pop add sub xor jnp dec mov adc and jne push loopnew data16 lea mov adc and or cltd xchg xchg adc pushf imul sub xchg push add (bad) and pushf pop push mov aam dec sbb sbb lock push push mov shr inc fs add inc ficompl mov pop add push jnp push jae adc imul mov adc pop mov lret ret loop sbb adc lret in leave pop andl popa push sbb lcall sbb movsb in inc ss sahf inc (bad) mov or ds sbb and mov int3 adc jae push and mov or out jecxz xchg cmp pusha ret jns inc jecxz test push sahf add or xchg or mov fmuls arpl lcall test pop test bound xor add pop in popa (bad) sub ret out dec fnstcw inc lret dec dec add cmp sub xor es dec es test in das sbbl and dec cmp push (bad) into cltd in dec js add (bad) cmp sbb xchg enter dec into cwtl mov add in rorb (bad) cmp mov bnd add push dec adcb mov adc loop mov enter mov adc hlt xchg cld jbe add xchg pop pop gs jecxz enter adc inc add cmp cmpl mov je xchg pop adc pop rorl xadd or adc pusha dec test ret sbb gs add movsl add push pop mov xorl leave add cmp push sbb sahf arpl dec xchg mov cmp add cmp andl mov loopne loop cmp jl cmp fisttp push cmpsb dec add test mov divb (bad) jo sti sarb jp cmp dec jne loope mov lock or fwait loope mov (bad) je mov (bad) test jmp xchg test adc sub (bad) jge imul loop ds lods rcl test add push mov adc lret and dec loopne nop or add push xchg mov push aaa xor and sbb mov js mov leave xchg jbe or pop mov (bad) je or inc ss jle cmp popa mov cltd mov add loop jp jne jb sarl imul adc insb (bad) stc and stos nop test and dec jns cmp inc lret jae xor sub push adc test mov insb xor mov int xor loop push popf adc cmp enter fwait rclb test cmp mov jnp add add add lahf cli mov cmpl rcl addb outsb mov mov cmp add movsl jp ret rorl cmpsl dec mov cltd fiaddl mov cmpsl dec loop jns add cs mov nop push mov pusha in sub jbe inc or xor inc adc imul test jmp add sub jne add inc enter aaa and dec lret cmpsb or (bad) mov mov popa add jo xchg and jl add pop and ret mov (bad) faddl dec in pop sbb mov sahf je jne sarl aaa lret rorl movsl rcr push push mov or popf pop mov jnp add cli jmp add cmp (bad) push add jne nop xchg add shr mov push shlb mov dec inc add (bad) jns adc pop jno add mov cmpsb repnz je cmpsl and cld cmp push inc cli je hlt mov fmull dec xor and cmp jle dec mov inc jnp push outsl fbld pop add inc jb (bad) adc push sbb lds adc popf enter enter stos push jae cwtl jmp stc inc add mov xor inc dec or push fsubrs stc loopne push lahf pop fiadd stos pop lods test sbb cld xchg sbb or jns inc scas pop push push addb pop adc dec pop mov imul adc add sbb add push loope lods jp enter cmp insb pop xor cli adc push push sarb rclb ds xor out andl jle orb sub sbb test xchg lods jo data16 pop push arpl sbb mov cmp int dec add jecxz mov js jbe pmaxsw adc sbb push or dec sti pusha ds inc jecxz pop lahf test arpl xchg loopne or pop push dec mov add inc pop ret push xlat xchg sub xor cltd out xchg mov mov add adc stc sarb push jg aam jle sub les outsl das (bad) mov arpl loopne stc dec add jbe cmc pop sbb cmp add inc add pop add clc push add fldl adc adc call stc jns mov scas rcll lods sbb xchg xor mov fucomi loope lret icebp inc mov lods int3 roll ret pop add lcall xor dec xchg add pop loope push jb adc push aad (bad) pop jmp inc add jp push das xchg adc add (bad) stos (bad) inc sub inc and test mov add (bad) imull mov loope xchg inc adc pop dec mov sub sub sub popa addb dec dec and mov std in mov add dec sbb fdivrl test xchg and lret cmp push pavgb mov mov xor js xchg (bad) xor test jno rcl sbb adc (bad) fwait add idivl stos add (bad) adc stos add loope and and in arpl addr16 imul (bad) mov mov xor xlat ret mov lret fdivs das add (bad) push mov shl pop (bad) bound std sbb adc lcall adc roll (bad) rolb es addr16 xchg loopne sub (bad) enter push fstp popf inc adc iret pop ret lock push lock scas add jle loopew pusha int3 push mov mov dec movsb adc or rolb adc xchg addr16 pop cs sarl jo inc inc aam push scas rclb mov push pop imul or add xor leave jns and clc mov mov dec rclb mov and loope pop mov sbb nop cmp pop sub jle adc jo xchg pusha leave sbb jle clc sbb roll pop imul jmp addb push gs pandn or call mov mov mov sbb ljmp push xchg lods (bad) mov cli in movb movsl jmp sbb pop and rcl mov inc mov push or fsts fist adc jae push inc jl mov pusha decb jmp mov sbb inc mov dec mov add cmp inc repz mov jne lcall lds jo mov sarl and in adc cld pop lods cmp mov aam mov or sub rorb roll push inc (bad) dec loop add test adc mov jmp add add pop lods std mov mov hlt (bad) and cwtl xor mov fsubs or mov daa inc lods inc je vmovaps insb mov (bad) dec fsubs hlt jge xor rol adc iret (bad) fs add test cmp or fdivs fs inc outsl pop inc inc push cmove in dec (bad) sub je aad add mov inc sbb dec lods mov int mov ds mov loope es adc add xlat cmp xorb repz add and jge or push jns pop inc add dec sbb or iret sub pop and pop enter inc (bad) jno inc inc ljmp mov (bad) js mov mov dec (bad) or js mov mov dec mov push xchg sub jns movsb pop rorb xchg int3 and sub cmp xchg scas add cmpsb (bad) sub outsl mov pusha and cmp mov jb adc pop add in add or add fiadd shrl or xchg xor mov push add jle xorl fdiv jns fmuls stos and xchg sbb loope shlb inc add movsl stc dec icebp cmp idivl lret mov or loope mov push dec out push addb jb xchg cmp dec aam lock pop add pushf les mov les xor addl adc mov incb mov test hlt jne inc or rol andl push xchg cld stc or addr16 or mov xchg mov ja add sahf adc inc add pop (bad) mov outsl push imul mov int mov loopne dec hlt inc and aas add rcrb enter dec mov dec or fsts mov shll aam adc lret or push stos mov sub call inc jl mov adc mov mov sub movsb and (bad) xor push or mov and aam or pusha adc iret or push fs test dec jnp int3 jno rolb xor inc jmp fwait mov shl push sbb sbb (bad) inc xor or push (bad) fmulp mov (bad) jo mov add shl or (bad) mov hlt xor adc or sbb test imul add jns pusha add mov add push cwtl dec fcmovu sbb xchg and adc mov push imul sahf adc lret inc and and sbbl aam jge sub add fsubrl pop xor fsubl push cwtl dec push test mov mov xor sbb jp mov and popa cwtl movsl xchg sahf test into mov test inc movsb cld lods int3 cmp jae dec in add ljmp lret add out enter push jp sbb sub cmp or mov shrl stc fisubr iret or xor cmpsl sbb in sbb push mov pop ljmp xchg cmp loopne mov dec pop dec insb push call sbb scas push or push push sub push movsl js ljmp rolb mov mov stc jbe mov ret push jp fsubl cmp sar add and inc add (bad) dec jmp xchg xor push ljmp (bad) sbb sarb out sub lea pop pop dec add nop add jno mov mov cmp jbe sbbb rcrl pop lock cmc sub mov (bad) and fmulp rorb inc adc js adc add bound pushf mov inc jg cmp movl cli sbb es mov movsb fs cld push xchg add (bad) (bad) fildll cmp fmull iret and mov and lock xchg add mov aaa scas call jnp push stos jp roll xchg dec pop in shufps push fucomip jae daa push cmp add inc xchg add or mov push arpl loop cmpl inc adc adc push fbld scas jmp pushf pop add fiaddl jl loop or jle int3 push std sub add mov pop aam cmova jecxz xor lock add rcrb fs pop ljmp sarb add xchg mov pop (bad) loopne pop (bad) ret rcll loop sbb mov je (bad) pop add pop or fmuls insl outsb jno xor mov clc xor lods jmp mov mov out aas insb push out nop int3 add xchg inc cmp jle or dec and adc xchg (bad) cmpsl fistpl push or or inc lea adc cld fistp push nop sub je aaa adc nop sbb push (bad) fistpll int test mull test jl add mov jnp or sub cmpsl rclb subb mov dec daa adc enter xchg xor adc adc push sbbl pop movsl fistpl pop pop fwait add adc movsb jns or cmpsl xlat push nop add sarl ljmp mov cmpsb xchg xchg inc add add push lock jbe std or mov xchg adc cmp cmp test ret xchg push in pop mov xor sub scas or jo fs je sbb lcall inc test jo lret cmp xor clc int sbb sub mov jnp mov pop mov pusha nop pusha lret movsl and sti cld add mov cwtl mov sub scas ds sbbl cli inc add and and push xor call and push in enter outsb add data16 iret push scas rorl adc aam mov xor or in imul and mov sub lods sti dec dec push cwtl adc (bad) leave mov xor cmp mov gs (bad) xor lahf mov mov xchg fcmovu aaa pop or out mov mov add ja ljmp pushf xchg jl insb jl call movsl mov imul add xor add cmp rolb stos jp sbb push push fcom orb push jno jb (bad) mov jle into add sub pop testb das push add push cld sti and test pusha inc or inc mov mov mov iret repz pop imul lods xor inc cmp push imul mov clc add lcall (bad) movsl ret aas push and add or add sub push jnp cmpsl xchg cwtl and call (bad) fidivl pop push lret jnp add dec fdivrp or sub add (bad) add and push (bad) in cmp std faddl sarl mov xor es cs dec dec es lea (bad) cmpl pop rclb add insl data16 and mov sbb or dec xor sub mov or pop xchg jl lcall int3 testl jne adc xor fcom mov test addl cwtl (bad) push pusha pop push pop mov sbb xorl and mov mov inc cmp (bad) ja cmp popa subb dec cmp push dec lret jecxz (bad) fdivrs sbb mov jb data16 pop cltd xchg out divb mov lret mov movsb nop add pop pop sub push mov dec and push ds pop xchg lods push xchg mov push fnsave lret add mov cmp push ret inc loope xlat out stos ret fisubrl xchg dec add jmp xchg adc arpl mov icebp mov pop lods inc bound scas nop xchg and inc ss jmp nop pop xchg icebp inc cs mov clc push mov pusha das fisubl add (bad) pop and add lea mov add xchg xor sahf pop add push xor out lcall push add push fldenv xlat icebp call cli stc mov dec jg mov movsl test enter cmp cld adc roll xlat inc xchg dec cld adc arpl daa loopne dec dec pop in sarb rolb lcall add mov or orb pop dec call clc out or pop stos push rcrb pushf pushf call cmp rclb subb or inc or xchg or cmpsb dec fcoms push dec push inc cmpsl cld (bad) pop pop push add xor add mov xchg (bad) mov mov pop cmp dec clc iret imul fldcw dec pushf adc and push lods adcl call push incb jne mov push (bad) sbb repz pop ljmp loop push mov and inc popa int xchg imul mov add adcl arpl (bad) pop push jl sbb sbb or pop test push test cmpsl adc out iret test xor sbb scas jl adc pop lock scas push dec cwtl push js pushf mov adc stc sbb enter mov xchg sub rolb cmp outsb lock sbb mov mov sub add mov test or cli mov test cwtl dec inc int3 mov mov jge adc add js (bad) lret fmull dec inc inc and lcall mov sub and push int3 mov push xor adc mov push (bad) pusha dec inc test push push xchg test movsb mov faddl or mov cwtl clc aaa cli rorl sar enter jae das inc into jns inc call mov adcb jp push jge mov pop les mov mov mov inc sub in vmread mov adc xor aam dec (bad) inc add imul pop fcoms inc xchg lret adc das xorb (bad) fsubrs fimull stc addl cmp adc pop cmpb movb outsb dec ret push xchg shr or imul fs sbb nop fsubl push enter mov xor mov inc push aas lock sbb rcll cwtl mov bswap dec hlt or sti dec dec inc add adc fcomps sbb subb les add std jle clc mov adc je jl pusha xor mov jle cs ljmp lock imul icebp in mov xor push and movsb movsb mov dec adc pop nop scas test shrl jg lock or iret pop mov inc (bad) (bad) add xlat cmp stos js jbe (bad) jo dec cwtl dec gs clc adc or adc fs loopne ja mov mov jb push mov jmp cwtl insb pop dec gs inc outsl in insl pop dec pop enter dec xor add pmuludq lods addb add jno xchg pop das loope cli and xchg lods cmp cmp pop cs inc add inc xor lock jno lods in mov (bad) and cmp inc popl mov fidivr mov jae pushf add hlt xchg mov enter loop cmpsb add and dec push cmp or inc in ds inc mov adc cmp push jne (bad) in cmp pop jmp lds movsb loop sahf sbb xchg jecxz std cwtl (bad) mov add inc dec pusha inc adc jo sbb adc jmp sub pop lahf mov imul mov jno and (bad) arpl ret sbb add inc and mov xor push dec pusha and scas pop sbb or jns sbb pop call inc (bad) je sbb mov fsubs push pop cld sahf outsl rclb inc (bad) or or std lods mov xor push jns stos cwtl sbb inc pusha flds imul xor cs xchg sbb pop pop int3 dec push mov mov jbe pop pusha jg adc or jno and fwait gs add adc mov lods insl jne pop pop jmp iret push mov sbb fcompl cltd pop popa mov mov xchg push pop lds fisubrl or rorb dec adc mov fs sbb xchg push dec xchg xor push out cs test cs xchg fwait stos dec shrb loopne dec arpl je in lahf and or pop sbbb test dec test pusha cmp mov jno dec fisttp push adc adc adc push add test xchg mov mov dec xlat mov (bad) icebp or fsubrl add add mov jns xchg mov xchg (bad) lcall jge cmp dec lret jno test clc ret repnz add and add rcl inc rcll inc sub les sbb add cmp shrb xlat jno (bad) dec sub mov push nop pop push push outsb aam fdivs and and push (bad) add (bad) lods ficom push int3 and or mov ret or pop jg pinsrw adc or loopne ljmp and xchg je cs sbb lcall add add test sti mov push and jp pop in mov dec cld inc add rolb mov test mov hlt xor fadds je inc pusha xchg in add or test pop aam push push (bad) xor add inc pop loopne jmp repnz lea push xor iret adc shrl (bad) lock or pop sahf mov dec lds jne pop sub push sbb or sbb stc inc push mov ljmp test add and adc inc or out xchg add lcall cmp jo jb adc lock dec inc rclb dec xor pop lds loope (bad) decl cmp and clc add push push mov mov mov dec negl or or sahf or sbb mov add jno or pop loop add insl movsb (bad) stc inc je dec fcomps jbe jle loope xor imul add inc add movsb mov fdivs mov xlat add rorb mov push jns mov add jl sbbb dec and lods call mov xchg insb or rorb or clc lret mov aam cltd out loopne and insl test and mov and xchg or fs and jmp hlt sti scas cld or adc orl movsb adc shrb cmp xchg jg dec inc enter jne aas pop sub adc add lods aaa adc lods out or or mov stos sbb inc leave rcr lods aaa dec inc jno repz or inc adc negb popa movsb adcb test add mov inc xchg roll add (bad) pop call (bad) cmovl (bad) push or inc adc daa lahf push fs sahf jne adc mov and add ds jl push pop adc add pushf (bad) sbb or lds iret (bad) dec rcrb add dec push test pop ds lods push mov mov mulb mov int sbbl (bad) sbb in cmp pop inc or mov pop cmp push call add push (bad) jns sub call jno ja ror orb xor pop dec cmp test xlat inc add test ret pop jo test add lods and xor inc xchg push sbb add popa test dec mov inc aad jl or add push in out pop mov fs inc lods movsb mov mov lds aam add adc jmp mov addl jle mov add ja mov adc lods inc cmp xchg movb dec sti outsl push mov xor pop sub in add push dec jge enter adc and fildll sub add push adc sbb adc out add push mov jle fistp and push lds xor stos inc dec out mov lods add or sarl sbb push movb pop jmp insl scas sbb addb add cmp add jmp adc jns add xor roll and mov add and aam add leave inc in int3 (bad) sbb rcrb lea sbb or sbb stc add imul lcall clc or mov inc call pushf jb adc pop dec jo push insb and call cwtl add and mov add mov leave call adc push and sub push mov movsb inc mov xor dec inc push repz sti cld xchg pop pop call adc in sub add add sbb jno mov pop pop in dec or insb and push xor dec mov les or pop inc aam nop not dec xorb cli or inc jl sbb push test in (bad) push cmpsb mov aaa stos pop imul mov js pusha mov mov hlt (bad) icebp push jne adc in in add lds sub push jns test or push call fucomip pushf das loope test test or andb push dec jno fbstp popa pop cmpsl enter das or (bad) into fsubrp mov sbb push lcall int3 adc sub jle fcomps cmp jns fcoml imul jl and push pusha inc mov mov aam pop dec ret bound pushf dec mov hlt mov out xchg sti faddl lock xchg inc mov stos pop (bad) pop addr16 outsl daa sub mov add cltd pop loopne add dec sub dec loope in rolb clc es dec add inc es push cmp push pusha (bad) mov nop add mov sbb cld add xchg test push xor imul sub stos sub mov pop inc adc push in xlat lods les loopne iret lea add xor ljmp cmp enter inc test xor (bad) cmp imul (bad) jno or push xchg out nop inc or pop add js pop dec pop imul adc dec jo inc es pop inc xor adc adc push in clc inc sahf lea xchg in mov or cli je (bad) scas lret and cmp std xlat inc rcrb mov rcrl dec sub rorl hlt int (bad) add and and inc (bad) enter add popa jp rcll pop int3 xor daa aam sbbb mov pop mov shrb mov inc push rcl dec jp in cli push rolb xchg icebp dec arpl xchg pop mov ljmp xlat (bad) jae or push dec mov insb add inc int shrb add pop cli adc add and inc jp les stos mov or mov (bad) mov (bad) ja fsts push fmull dec xor jmp dec or jl dec mov aam add pop rorl icebp in push mov xor icebp sub inc adc xchg push addr16 daa xor mov adc push andb jl sbb ficom jmp inc dec int3 add adc inc cmp call (bad) and adc sbb rolb loope inc int popa pop loope jns add lret jl int cmp or add mov hlt clc xor xchg (bad) sub adc ret cli dec or mov sti add mov mov jo mov push loope in mov cmp dec mov inc dec dec mov and sbb add push imul lret ror cmp sahf jl test mov es gs movsb jns cld push rol add or jno push add mov inc sub pushf incl mov add xor jns lods pop inc pop xchg mov xchg jno dec add (bad) cld mov sbb mov roll (bad) imul (bad) xchg push lret or adc pop and enter push inc mov sub mov sub mov add sbb sub (bad) pusha mov add into push add sti and mov jg adc sub mov fsubl rcrb rol cmp data16 jb push test adc subl hlt js sub cli lods pusha sarl add mov fwait shl lock jno in hlt sbb int3 or mov jecxz push sbb jae xchg imul add dec and xchg or xchg stos dec test inc xchg sub pushf xor mov mov sub xchg and cmpsb xchg (bad) (bad) ss mov mov inc xor jns mov cs fnstenv iret mov aas add in xchg bound fisttpll movsb mov shr sbbb cltd jb push repnz jecxz mov sbb clc and xor in fadd mov xchg mov enter inc imul sbb mov shr jg ret sarb cmp mov (bad) hlt jp pop mov rclb mov scas scas push fs mov add les cmp fcompl cmpsl add dec and sbb cmp out int dec hlt das and add mov add cmp roll jns cmp xlat test popa clc out sbb lret mov push jno push push pop cmp cmc imul ret lds jl or imul aad inc pop mov (bad) cmp and jmp mov enter pop wrmsr dec push xor adc sub js jmp sub roll mov cmp mov nop jns push inc push sbb test fs rorb loope mov jge push mov lahf incl mov xchg xor pusha (bad) icebp mov addl popa dec mov leave ljmp lcall adc bound ds nop sub (bad) rcrl push or mov jge mov cld pusha adc (bad) movsl push or in lods (bad) int3 cmp push mov inc sbb xchg mov mov out gs lock xlat adc popa pop or imul adc lock add (bad) mov adcb (bad) xor jo xor movsb or adc sbb ret mov stos fwait rolb mov leave push mov into rolb add incb dec mov inc and mov pusha scas and addr16 push mov sbb jmp (bad) rorl pop and mov xor adc mov add sbb fnstenv mov adc sub aad lock add or pop mov popf or cwtl nop call adc or lahf fs add addr16 adc out add mov cmpl mov dec aad push outsl mov cmpb orb adc cmpsb inc cmp mov roll sbb push sub mov (bad) pusha adc mov incl loope or add mov nop int3 fmuls push jmp mov mov lods dec sub pop inc push clc rcll fsub add daa rorb adc orl mov pushf fisub mov jg outsb mov ljmp test insl adcb or mov jo dec nop sbb sub or sbb lods out addl and push rorl inc mov add popl jle mov adc add lods cmp insl inc pusha sbb je push sbb push sbb mov fcompl insl cld addl test (bad) call (bad) imul ret mov dec mov test (bad) je into mov and roll (bad) out dec pop xor and jne leave lods add int3 into add out push push mov pusha cld loopne lahf dec xchg in pop fucomp loope add sbb add add add mov adc jmp mov add jns mov mov lock jo mov sbb cmp push adc out aaa test lock mov sbb add movsl push scas sbb dec (bad) in leave xchg sbb or xchg and (bad) sbb dec fnstcw addr16 cmp nop xchg decb jo imul inc push inc xor popa pusha dec sub pop popf (bad) (bad) xor sbb or sbb pop mov add fildl and adc (bad) mov pop and lds test sbb lods add fimul cld lret push and bound les sub (bad) mov fadds adc ss je clc inc pop xor add pop sub push sub add adcb imul cwtl nop xor fs outsb daa add mov je loope sub test mov add sahf pop add sbb add (bad) je xchg inc stc fs add fistl or jg enter add test push xchg insb lahf sub sub in push daa int3 adc lea jecxz adc dec adc adc fwait nop mov scas add idivb add rol aaa jnp loope xchg les mov jmp jmp pushf xchg pop sahf fwait add cmp cmp iret lock adc adc add pop (bad) dec fnstcw add adc mov mov clc sub pop cwtl add loop nop pop inc push (bad) mov movsb les sub sahf dec pop mov subb dec cli push ljmp rol mov xchg xchg inc pusha pop imul adc inc lock push cmp sbb fsubrs outsl jge pusha arpl mov add pop lds sbb jo jo nop dec mov (bad) in test ret xchg scas jae dec pusha and mov jl dec in cmp xchg xchg in add std mov sbb rorb leave mov xchg add push push (bad) add (bad) jae or sub push and mov aam mov mov dec add or roll lock pop and mov add cwtl xchg enter pop mov xchg jno clc xor push cmp add scas dec push mov and jle bound push test inc (bad) jno sub sub add rolb fstl lock fcoml rorb mov insb mov inc nop mov mov mov pop xchg nop dec cltd mov mull repnz dec out pushf sub cmp stos jno je std or adc loop jne mov add or nop cmp gs or pusha add movsb jg repnz fs lcall mov jo (bad) js or lretw mov and dec nop lds fadds dec frstor add cmp ret jmp add out xlat add sbb mov clc (bad) call lret dec mov adc rolb add popf scas inc cld adc lock mov (bad) ud1 xchg outsl test fisubl cmpsb (bad) push sbb ret and decl lock add mov loopne mov dec (bad) or nop sbb sti mov add inc sbbb je jge mov repz add pop data16 mov call add add push push icebp pop xchg xor sub push cltd insl mov and (bad) and dec sub arpl loopne mov adc sbb dec aam add mov dec adc inc or push mov mov shll fisubl jl jmp stos shrl sbb sbb or lahf add in or stc mov mov mov out push sbb push push std jb mov lahf mov add adc cmp and popa clc cld insb call and jl in lcall iret outsb pmulhw push loop jl inc movsb ljmp dec dec out stos pusha mov and mov jge js jb jl lods jbe test cld cmp sbb push and jg sbb pop cltd pop aas add ror jo sahf xor fprem1 je out cmpb mov push dec and ljmp sub cmp rol lds test jno push push or add test stos (bad) add loope jbe loope xor sub add dec popa add jno add pop and repnz lods clc call xchg mov es fcoms add stos mov sbb hlt nop inc push add push gs and xor inc dec dec sbb sbb mov sbb jb dec adc add fs mov (bad) pop movsb or movsb mov fmulp mov out stc mov (bad) and ja add fs and push xchg ss insb rol cmpsb xchg or mov and out stos xchg loopne lds loopne cmp mov ds pusha sbbb lock add push mov pusha data16 js xor add ja mov stos lds mov fadds mov lods clc and jl pop mov mov nop jmp lods ret test sahf mov add in push pop pop cmp pop mov or push and (bad) xorb shlb pusha pop sub sbb push jnp add bound js inc jae lock and sti aaa pop lds mov fs push jmp fadd (bad) mov jne jg jge fcoms clc push jl mov enter xor mov mov xlat in mov mov daa push mov push loopne dec cli test sbb dec add and or mov insl cwtl test inc mov cmp jno push in add add repz movsb test cwtl cld cmp in jmp mov pop mov push lods adc stc aam loopne mov jmp in mov sub sbb cld pop orb jne mov sub jg and add sbb dec push xchg and push add cmc mov or push dec xorb add mov mov test jne mov push sub leave or (bad) xor loopne loop adc sub and add mov subb xchg mov or hlt fmuls js enter lock sub lods fs or cmp sbb clc cmpsb loope dec cmp clc lods dec pop xor movsb and push or pop xor dec movsb pop mov iret fiaddl test xchg and pushf xor leave mov in decl add int repz jl add jb test dec stc push aam pop mov add stos pop cltd loop xor stc sbb out mov clc mov mov jo cmp stos insl mov pop cmpw aaa inc movb push push int3 xor xor mov stos cmp push sbb or and add mov mov push pop gs pop (bad) xor lret adc cmp sbb mov das sbb jmp add adc adc jns or add dec ficoml jl add xlat test lea adc mov dec das inc add pop inc mov stc push orb xlat sbb call add test jl push jo inc cltd push scas push push jnp adc or fwait adc mov dec pop xchg clc push sbb sbb test fdivr sub pushf mov inc pop adc mov add fildll cmpsl cmp test push mov movsb fwait lock add mov or out and pop nop pop adc inc cmp movsl dec sbb add das xor mov lret cmc push scas addr16 or imul push add mov movb aad xor add fstl (bad) aaa mov xchg fsubrl pop add push dec shll or dec rorb in cld rcrb push mov (bad) cmp jmp sub outsb push test push lock add adc adc std lods dec int3 xchg aad aam test mov scas repnz sbb mov test hlt rolb and popa mov fstpl test adc jns mov movsl cmp sti mov incb xor pop pop add jp std mov aaa gs push dec jmp pop mov fist scas in jns jne test push adc (bad) xor sti and test or and leave dec inc cmp dec cli push pop lods cmp push dec and scas adc xor ret cltd sti mov sub push jecxz (bad) cmpsb cmp push mov or push das cld mov add arpl imul xchg aad inc mulb jl inc sbb movsl sbb push sub add cli xchg inc mov nop data16 orb aam xorb fnstcw pop xchg add mov arpl xchg int3 add add xor cmp push lds insb in mov sub lods lods add dec pop loop dec dec cltd data16 pop or and push add (bad) mov cld je xchg pusha jns mov aaa popf rclb push sbb nop fadds sub insb adc mov sbb outsb (bad) aam cmpb xchg jl pop jno xchg imul dec jne and jl ror push sarb pop cwtl hlt es mov mov mov pop dec (bad) ss out nop mov pop cmp adc mov addl inc cwtl mov je mov hlt jl inc add iret out aad lods adc dec add sbb sub dec movsb cmp cwtl nop mov sbb jl and lds test lds dec inc into dec and inc lret (bad) jge fs loope add dec rcrb (bad) call jmp mull xor add xchg lds mov dec and adc dec and aad add mov loope movsb inc pop push dec push addb ret jmp rorb std mov push add or dec cmp clc add test adc aas call popf lret fcomip cmpsb jnp xor mov cltd jo and xchg push lret (bad) dec pop mov add cli cmp int3 es push clc imul into add jns nop js mov adc js pop push mov pushf pop jne xchg pushf enter add push nop lods adc pusha xor arpl loop mov clc inc pop mov jo jns xchg test add shlb dec jmp adc imul mov pop push cmpsb faddl sbb inc jecxz fwait xor lock movsb clc inc in inc cmp cmp add cmp pop out and lock test js pusha shrb sbb xor mov push add js rol movsb lods cwtl pushf or inc cld nop add es push xor cltd mov je nop fdivs add ret mov dec pop sbb popf jns mov int loope sbb fcmovnb inc ret xchg rolb leave sbb cmp jp push test pop mov stc (bad) in xchg mov inc mulb xor or add jg cmp les inc push cmp repnz dec mov or dec mov test inc mov mov add jg testb and imul xor in fwait dec sub lock pop out push rcrb add daa es and cltd xchg jg push mov or mov jle lods jne or loope in cmp push call mov push rolb jno rcrl push adc aam cltd mov dec pushf (bad) (bad) loopne in pusha pop bound mov push sbb sbb movsb out xchg outsb (bad) hlt dec and scas je test or loopne and in sub fwait mov add cmpsl mov pop push jecxz pop mov mov xor insl stos (bad) hlt scas out dec mov inc mov js pusha shll std sbb mov scas movsb or clc inc daa add and lock mov shl sbb and dec pop fidivr call out xor or and sub aam push inc lahf shlb jae sub rol dec arpl sbb loop test pop sub add dec nop scas les into jne mov lods (bad) mov test push rclb jns sbb nop (bad) insl adc adc dec or cmpsl and xchg xor rclb (bad) and xor push or push adc pop push pop out adc hlt mov fs push jne cmp and popa xor (bad) (bad) nop rolb sbb push fwait jecxz jb in test fldenv lods inc inc test das jo call insl or cwtl inc pusha dec inc iret ret aaa push cltd int jnp sarb add xlat xchg jo pop enter xchg mov cmpsb (bad) movsl pop pop add sub add push andb in sbb add pop fcmove lods lock cmp mov or ret adc cmpsl fwait dec test push inc xor mov push jle mov and dec push test and jno jno ja lods cmp mov sahf aam dec and adc test jg,pn or rcrl lods iret leave add sbb mov and add hlt mov add out jo add movl adc xlat jl add push das jecxz sub or mov xor lea sbb sub pusha pop add jae push sub jle sub iret (bad) mov aaa xchg fnstsw pop add fcmovnb in cmp push movsb fimul into sub mov mov sar hlt mov loopne fdivl sub call pop inc and clc push add ret stc pushf xor fsubrp xchg inc jecxz sbb and imul movsl outsl (bad) je negb adc lcall pushf jns mov ret movsl mov cwtl mov ds dec mov cmp dec and add cmp fcmovnbe sub jle pop test aad add dec cli inc fnsave sbb mov mov lods push sub out iret pushf push icebp sub pusha jge dec mov neg xor mov pop jmp mov into sub xchg loopne cmp jmp jb dec pop rolb or inc fadd cld out or fimul pop hlt inc cmpb pop adc xchg addr16 lahf fnsave pusha lods cmp shrb mov adc repnz add and jno sub inc call fstpt inc xchg pop mov popf arpl test lea add (bad) (bad) mov dec fnstcw xor in out pop aaa in stos call cmp add loope add xchg dec ds cmp sub rcll or fisub mov adc inc sub lcall mov arpl movsl adc and fisttpll fisttp cmp cld les mov call cmp inc fisttp test in inc movl icebp popa add add bound fs imul test dec mov pop push inc dec cmp mov jno mov jp adc (bad) xor xchg mov and daa loope in add xor sbb pusha cmp sub push daa f2xm1 std add pop enter jae xor sbbb xchg pop es bound rorb sub movsl jb pop sbb adc inc xchg mov lock dec cmp sub push inc xchg popf add sbb add mov sub iret rep cmp sub jae sbb push pusha mov insb jl mov movsl xchg push add or lahf xchg std jo pushf sbb dec and push mov out nop hlt pusha inc push cmp andb sarb es roll fdivs jecxz inc xchg pop loope xchg adc mov add cs and add fidivl iret adc fwait inc sbb sahf std fcmovb jnp cltd xor addr16 sub mov insl jnp xor lret sub sub dec movq cmpsb lods and in pop ret add adc stos add movb or lods jmp mov and shrb sbb and loop enter add es iret mov add push (bad) gs push inc add stos aam rclb or push sub xor int3 or mov add xor inc add (bad) xchg rol test xchg lea bound add sbb add dec adc mov cltd pushf pop in or jns aad xlat push dec adc lock add mov xor subl sbb (bad) mov push (bad) scas cmp hlt and jecxz mov test jno inc aaa xchg and in lahf inc jnp into mov aam xchg das imul add imul mov jne xchg adcl jnp pop loopne lock and mov push mov ret add pop movq push sahf shrl sbb int3 push fcomps rcrb lret clc xchg and popa and mov in cmp jo into push or sbbl dec rcrb pop (bad) dec sbb pushf icebp lds jl pop sbb jae sbb js push sub mov inc inc add loopne pushf mov mov (bad) mov lds loope adc cmp jge add not lahf add adc repnz insl add xor lcall fidivrl add mov add in movsb fist sbbb xchg adc inc leave push scas ss into inc mov js jge ret cmp fisttp les inc insl aaa cmc pop push cmp aaa fisubrl shlb pop inc psubq push (bad) and sub mov inc xchg cmp mov out adc es xor or mov sbb and add inc adc out arpl orb add cmc push sub loopne dec sbb cmpsb lcall testl xor jo mov add test cmp in test in rcr shl push sti fcmovnb subb pop or xor cmpb jnp arpl rclb insb ficomp lds mov sub push and xor lds pop dec loope rol push mov fadds shlb mov xor jge pop stc adc aas push rclb lock add test cmp test lahf int inc and cmpl cli inc and cmp pop push dec sub test nop add push or ror sahf mov adc or inc repz lods or pop loope push inc push mov mov sub xchg fwait inc popa test loope mov aaa test mov into inc enter pop adc xor jmp mov cmp scas xor pusha pusha (bad) and gs aas or sbbb mov xlat sti adc dec jae mov or in fadds inc lret (bad) fmuls adc (bad) xor in push movsb movsl aas add jecxz mov loope push lret jg andl mov push lahf add sbb roll dec add pop mov js test in push mov mov jmp pop mov mov dec orb (bad) pop sbb cmpsb and mov add inc cmp push add outsl lea xchg or xor jecxz inc push mov mov gs sub inc orps push xchg andb pop mulb mov inc inc add pop das pop sub push add sub jo xchg fcomip es cmpsl loopne loopne adc add movsl ss xor adc and fimul loopne lahf addl jnp aaa cld faddl pop shll lods faddl icebp aaa in pop xchg mov push test mov add lds iret (bad) shrb jns js lret jg cmp out xchg loopne sbb adc sub enter lahf pop js leave adc sbb ja cmpsb es dec jl pop xor inc cmp outsb arpl cmp loope les add or xchg sub jl xchg test push xchg inc inc inc ss and mov adc arpl add or (bad) push lock push subb mov sub in enter movsl add sbb push shlb add cmp push out mov in sub add shrl adc outsl jg das fdivrs inc lds or mov pop cwtl loopne loope dec pop rcl push or inc inc inc xchg cltd test pop jg dec mov and mov cli and add rcl cmp seta inc jmp xor loope and inc sub add mov ja popa push adcl mov jecxz add mov sub (bad) pop mov mov inc aaa pop sbb adc mov cmp scas or cs pop pop rolb push push dec xchg mov pop add sti les outsb and pusha std pop movsl pop dec adc or xor inc mov inc test fadds xchg mov test aaa xchg or or xor jmp xor (bad) jge cmp (bad) push sbb and bound out add inc scas outsb hlt push ljmp sbb add cmpsb lods inc push push add aad adc mov add fadd out (bad) je adc mov mov cmp testl jno add or movsl frstor push imul add inc and push nop adc push cs into push sar test mov test insl imul popa adc test push (bad) cmp push mov push or insb xor pop rolb movsl (bad) inc pushf cmp xchg mov push pop sarb out jecxz add rcr add loope cmp xchg sub push inc fcomps insb cmp leave fcomp mov xchg js cmpsb xlat sbb das xchg inc aam fsubrl rcrb and (bad) mov cmp loop pop into das or push lret fsubs sbb int je ficoml dec push loop aam (bad) in das inc mov fild sub mov sbb cld sub cmp sarl sbb inc push and movb xor sbb outsb mov nop add mov shll sub add cmp mov pusha mov lret add cwtl pop pop stos ret dec jbe push enter sbb jecxz pop cmpsl pop and jg call xchg repz rorl sbb popa sub sbb leave mov jo mov shrb mov cli pusha ss scas out into xchg mov imul mov in mov js sub fisttpl push jge out inc cli pop cmc scas lea mov inc inc fist and inc insb cmp aam cmp movl aas cmp fcoms into xchg test xchg inc fild sbb inc pop clc aas pop mov (bad) xlat inc push push mov out nop int3 lods es jno add push push das nop nop stos inc loop inc loopne inc mov stos pop stos iret xorl sub ja movsb lcall dec cmpsl enter dec sub movsb dec rclb push add push and cmp push mov mov mov dec (bad) pushf cmpsb fiadd adc inc aam aam add in pop mov pop pushf insl loopne mov cmpsw enter adc aaa fisub or test lock enter les add sbb add leave xchg adc ficom rdpmc lds xchg dec mov add sti repnz mov mov dec fsubl pusha scas push jmp outsb xor and or cmp out insb scas inc test fiadd test test lahf int dec add insl add loop les dec mov test gs popa lahf rorb push lock and push or and scas push cwtl stos aas jo adc sahf in insb rcrl and hlt cld or add sbb in mov popa sub xor and sub adc add outsl fmull inc daa lds sbb sbb cmpsl stos sbbl aam ret pop inc (bad) dec push add add mov je sbb in les xchg sub test sbb loopne cmp or fisub je stos loop pop cs outsb mov xchg cli push iret roll sarb mov push call and aaa push xor in dec xchg mov test leave mov dec stc ss xchg add mov and mov out popf loope loop mov jb pop fstpl cmpsb dec imul lock int xor xor inc add xchg in add mov lock cmp sarl cld and test fistp jae mov jbe lcall fcoml push in insl pusha dec cmp lods mov int call jo add test xchg xor ret pop and adc xor xchg cmp inc pop pop push and outsl les add lock mov mov xor mov movsb jmp pop push insb sub sub mov sti (bad) insl or jge mov push sbb and (bad) cs mov add lds sub jb nop sub pop jl mov cmp cmp rcl leave cld push cmp lods mov pop lea fwait push push clc mov rcrb aam jb jg or test xor push call test out inc lea int3 mov push cli xchg add (bad) insl mov jne fadds outsb jb je xchg nop jbe clc faddl sbb xchg and cmpsb rorl and inc repnz pop add push mov push mov js mov sarb inc lahf xchg imul cld mov das sbb stos push or sbb out lds and mov cmp cwtl leave shrl out icebp cmp add mov and fbld bound inc push repz and sti call adc mov stos fild pop cs mov sub clc stos adc fcoms je popa out sub or push sbb add enter xchg mov (bad) mov (bad) or or outsl add xchg (bad) sub jg add js sbb pusha adc sarb idiv shl in xchg push push add jge cmovo sahf sbb lods js add mov loope add mov movsl mov sub out sbb inc adc mov rolb out scas sti jp lret es ss push cmp hlt ljmp (bad) pop mov sub xchg mov and mov ret imul sar cmpsb or add loopne cmp ret lods lds shrl outsl mov test cmp dec xorb and rolb add subb pop adc clc sahf pop pop fcomps scas xor repz push and repz jns incb test lds mov shll adc aaa aas jg sbb pushf les mov mov mov adc js into adc out enter inc xchg and pop mov add lock inc pusha adc add les scas add push cmc lea inc mov fnop and inc sbb test inc fsubrs push clc add fcmovnbe stos push xchg and xchg enter or sbb std test or bound add mov fwait sub inc clc and push aas jno cvtpi2ps imul push sbb mov sub cmp sarb aad add je xchg in shlb pop jg mov sub adc int mov cmpb cmpsb sub xor push fldt nop cmp mov enter mov sbb pop mov and orl das rolb mov sbb sbb (bad) ss inc mov cmp mov add aad out xor inc int3 xchg dec xchg (bad) test add clc cmp les cmp or rcrb test testl sbb xor (bad) xor ret inc or pop xor mov jo push cmp add dec jmp dec inc loop les dec pop add insb nopl fiaddl mov mov cmp cmp call and add (bad) mov and dec xor popa dec dec adc inc jle sub or mov (bad) mul orb (bad) lahf xor call or push mov add sub jbe je inc mov push cmpsl sbb xor insb inc cmpsl xorl jle dec aam inc call or ss cwtl pop sub movsb add xor in add mov jnp add les divb ja movsb xchg and pop push data16 cli mov and sub push enter add or mov inc mov sub clc xchg sub cmpl sbb mov mov pop or clc and inc loopne cmp xor fmull out lods leave lds and inc addr16 mov sub mov (bad) stc pop or pop fldenv pusha xor cwtl sbb les fs lcall push (bad) imul jp arpl leave or mov lcall fsubs andl or bound push cmp pop (bad) sbb cld add sbbl inc sub push test enter xor lods mov pop xchg xor popa test push push inc or xchg xor dec imul les pop pop and pop test add pop or cld push dec or xchg mov (bad) fistpll pop movsb cwtl subb sbb loopne clc or dec lcall and mov mov mov in adc mov test insb scas lret and or cmpsb movsb or and xor rorb add adc and inc dec sub clc xor mov sub loope cmp enter sbb add dec push mov sub lret int3 adc (bad) cld push bound and mov add adc add rclb adc jo nop or and in lcall aaa pop sbb nop mov fadd dec pop sbb dec dec mov test inc ficomp movsl dec mov pop cmp xchg add pop mov adc dec (bad) add cwtl add addl cwtl clc sbb xor xchg in arpl adc mov add add mov mov pushf (bad) shlb push mov push jp push push mov movsb rclb imul dec push add fisub push adc test sbb add push xchg mov fs adc test jnp out adc fmull xor pop stos insb mov xor add insb sbb mov inc lods pop fstps (bad) and pop push leave sbb and add adc and out or loope movsb and mov and nop or xchg cmp add dec add xor mov popa test test (bad) and movsb mov movsb sbb add and jge hlt cmpsb mov fdivl ffreep xlat xor pushf adc xchg nop and andb roll pop in inc mov pop lods add (bad) jbe inc xor pop clc mov xchg sub jo cmp adc repz dec leave lcall xchg add mov adc or cmp jp lock jp psrlq sbbb sarl arpl mov add sub jns or shl sub dec popa pop ret mov adc add xchg lcall fdivrs and xor out cmp arpl lcall (bad) call mov xchg xor cltd rolb imul pusha push mov stos sub dec mulb fsub jno aad jle fcmovbe jo stos xor mov aad mov sub add cltd xlat mov cmp or mov add jl test add imul ficoml movsl sub mov sub adc jl hlt and test pushf lods pushl decb pushf add sbb enter add dec sub mov test fistl loopne pop mov add test cltd hlt sub inc sbb negl pop or std and test andl mov pusha mov rcrl jl mov xor sub fcom hlt or bnd pop or mov lcall je enter pop imul fcoms fsubrl inc out loopne rcll fildl and test push sub mov mov and jecxz mov loope cmp mov hlt stc sub mov pushf jo sarb inc sbb xor hlt and or mov and cwtl dec loopne repnz xor or or scas cwtl sub leave mov mov add js arpl dec sub stos dec sbb mov add arpl ja daa sbb pushf sbb and stc add push out pop pop mov sub xor sbb jge imul ljmp mov aaa xchg adc add cmp in add fidivr mov inc sbb stos mov es loope sahf js popa and dec mov mov data16 push movsb aad push mov cmp das clc push movsl insb test sbb scas cmpsl (bad) mov mov fcmovnu or movsl int add mov mov push aaa into mov cld fcoml adc inc jo repz hlt in or dec mov add addr16 lahf cmp push je push stos mov xor addr16 movsl push pop fiadd repz sub sbb jge pop incl adc inc movsl daa andl es add scas rcrb popa popf add js pop mov sub jge inc aaa jae jns bnd fistpll sarb jle sbb sarw jb cmp mov stos push sbb pop hlt cltd sbbl mov push iret push sub inc int3 pop scas cmc xor mov mov movsl pusha pop iret sbb push aas in lods sbb loopne sahf cmp ss mov or jo sbb mov or in mov sbb ret adc jecxz,pt out ret call pusha cmp push adc hlt lock jmp lret test and fwait imul jo jns sub insb pop daa xchg dec pop std adc and stos cmp loope into popa sub jbe mov test js or xchg test or sub adc jne mov pop xchg and insl push and pop mov andl jmp adc add sbbl (bad) jb pop lea adc adc jnp dec addb repz das loopne cmc dec xor mov xchg jg cmp scas (bad) and test or cli sbb push popf jle add sti loope cmp xor out mov sbb sbb or adc fbstp or jo (bad) mov mov pop xor stc js mov mov cli std fs cmp (bad) (bad) lret mov push dec sub addr16 int add js mov adc sub pop repnz mov mov call cmp test nop cmp lods lret add imul mov jae xchg pavgw leave popa add stos xor (bad) into incb mov dec addb out cmp inc add ja mov sbb mov mov push aad movb cmp pop paddsw js call adc add xchg push mov sbb add out inc stc xchg insl cmp lds arpl inc js ss aas adc sbb pop dec leave dec jge add and pop jg xchg out sbb mov push cmp sbb stos jle sub jo push ficomp dec js cmpb mov xor cltd test aas lods adc gs insl fbld (bad) lock add pushf add nop cmp data16 mov pop (bad) jb icebp pop push aad push xor (bad) xchg repz bound pop xlat rol add fmull mov xor cmp mov pop jnp ljmp jae mov aad jno mov adc mov mov adc xor or movsb push in add shll (bad) mov jg or in aam adc mov or cwtl mov leave adc sbb fs adc test sub (bad) or int3 lods fcompl ja add cmp xor nop pusha sbb mov dec adc add out mov mov outsb (bad) xor jle lahf loope aad lock adc xchg sbb add push xrelease sahf xchg repnz add or es call add xor adc xor or mov in push dec xchg sbb xchg xchg pusha lock mov fsub sbb jp pop add xchg add xor pop leavew dec movq mov xchg stos mov lods nop adc mov pushf add add (bad) jmp sub fsub add pop iret mov adc mov inc dec sub ljmp and sbb push adc pop cmp cld dec lods cmp mov pop outsl (bad) cmp adc ret pop inc sahf or dec flds icebp cmp cmp or cwtl into add or push ret add mov jnp xor loope add mov add div mov dec pusha lods ja add (bad) loope and xor adc rcrb imul add mov xchg fcmovnu inc jp sahf and fdivs fs xchg cmpb movsb aaa add std jb or mov pop cwtl sub push je cmp push xchg xlat xor sahf add jnp pushl popf je add jo mov cs in add push xor add mov fs arpl (bad) (bad) fdivl xor aaa push popf add jbe nop sbb leave cwtl stos lock dec mov adc lock js cltd in add push mov cltd hlt lahf jno pusha sahf or mov test lods sbbl movsb fcoml mov inc sahf jmp bound xchg mov icebp pop inc or or test sarb add mov cmpsl test xor jae sahf call addr16 ss imul sub mov enter call xor add cld lea inc fdivs roll pop fsin hlt popa xor rolb enter xor dec sub lea das ja lahf test lock add shl dec cwtl ss jb dec adc add sbb mov pop pusha (bad) jp nop mov push jb add popf int pop or sub mov xchg ja mov mov add pop sbb mov ret sbb popf andb mov mov mov push loop sub jo decb mov dec loopne nop outsb insl sar in add insb scas test cmp out add jne sbb sti mov pop nop mov imul lock ja or (bad) and xchg xchg icebp xor xchg jl icebp and push idivl cld loope mov mov inc movsb mov dec mov packsswb cmpb jns mov dec pusha cli jp cmpsl or imul adc pop sbb add xor ret aas (bad) and mov or (bad) dec mov stos adc clc or xchg adc inc push aaa mov mov jb mov mov cs rorb xchg sbb cmp jne xchg sti sub push es add or add jbe iret outsl test outsb pop mov add in mov cld in adc sub imul fcomip push hlt pop mov mov loop adc inc insl sahf test adc mov inc xor pusha fiaddl loope int3 push sbb mov leave and out enter js sub jb or dec mov js add pop push fcmovnb dec mov rclb mov test jbe add (bad) and mov sbb aam addl mov test pop bound xor and insb mov adc mov or mov lahf adcl mov jae adc xchg inc ret adc in or clc inc lcall rorl ja (bad) cmp and and jle mov sbb xchg cmp int3 pop add mov repnz xchg or jae or jns repnz pop adc or or sub ds mov push add (bad) jg cltd cld adc mov cmp add (bad) in test push xchg pop lea mov jns sub xchg ja daa inc test iret or clc enter mov push push sbb lock lcall iret arpl add outsl jmp or cli int3 inc lock lea add jns push xchg das xchg add outsb (bad) out call push in xchg out xorl es cwtl add or icebp add (bad) in js adc (bad) adc (bad) xchg andb pop adc mov mov out xor push mov jecxz and (bad) rorl cmp push push into pop repz adc dec push in and xor rorl push mov jle test jnp addb vorps cltd mov add push jbe (bad) cmc push and sub and pop pop mov int3 mov xchg dec mov pop push aas inc je repz sarb (bad) add movsl lcall jbe dec ficoml dec dec sub adc adc cmpsl sbbb pop sub and or adc sbbl xor add ret movsl xchg repnz and mov adc mov sbb inc mov mov mov fsubs xor jbe test aam xchg js movb mov daa adc and sub sub push cmp fcoms dec cli add adc xchg adc xor cmpl ds popf push xor add out mov and cmp pop popa pop or insl push sub push or jmp adc xor lods ret rolb xor int xchg pusha pop test loopne paddsb xchg push aaa xorb adc mov pop adc movsl adc add jnp xchg xchg add sub das outsb or imul push and jno ja xor or inc repnz jl leave mov fdivrs cmp xor test fwait add inc pop mov jmp sarl xchg movsb adc popa mov jb test into fdivr adc cmpsb and or cmp icebp inc mov lret mov jns add cld add sarl cmp in dec int3 cmp sub loop inc js,pt sbb cli ljmp sarl pop loope add shr pushf in addl xor mov pop xor inc xor dec jno jmp lahf imul lret xor sub inc fcomp jbe push add xlat sub lret mov xchg gs repz adc pop ftst push std pinsrw sub lret jecxz xor add mov dec enter push and flds xlat ret cmpsb sub mov mov mov cld jbe stc push fmul dec repnz icebp xor sub (bad) mov lret pop lahf (bad) xchg cwtl jne dec sub ja or mov cltd pshufw inc shlb mov add js xchg out call or (bad) int3 pop xor std subl lahf jae dec call dec add rcrl sub push jne inc dec test (bad) jae sbb sub sub rol testb cli dec xor inc mov jns imul and sbb out pop int or xchg sub pop cltd cld xchg push mov popf insb rcrb faddl sbb roll (bad) gs call mov mov loopne je add in dec movsb and cmp and test inc (bad) inc push mov mov les and into insl xchg js sub pop mov rcrl mov or jmp fnop inc sub nop in mov push and (bad) mov lret outsb xchg push xchg shlb je inc pusha push dec inc or xchg ss adc fadd shlb sbb cmp xchg push mov cmp inc negb add cmp arpl pop inc mov cpuid pushf mov mov adc icebp inc add out les ret dec lret push mov sub loopne sahf jmp lea sbb push cmp lock mov xor enter add icebp pop and or ret push adc or jns shrl xchg pop sbb ja add or ljmp and std pop and pop dec cmp jnp cmp in dec add mov inc add jno iret cmp adc loope sub add aam add fist lods into inc pop rcrl mov inc sbb sarl xchg xor dec enter mov pop and cmp inc or pusha cld ror js mov lods shlb popa jmp mov cmp or lds add js adc adc aas sub int3 test cmp and cld or repnz lahf dec push andb arpl mov xor xchg cmp push xchg or add dec sahf xchg jb lret dec mov cmp sub or pop mov (bad) jle lods push pop mov mov repz cmp or or jbe int3 cmp cmp inc or or sarb xchg adc xor stos push (bad) mov std add xchg adc bnd les test enter iret inc fs test adc mov sbb cmp adc loopne adc xlat ret sti mov lret loopne ret pop and je or sbb mov into xchg cmp je dec or jl add pushf and mov sbb add sub mov dec shrb add sahf mov lret pushf mov inc fsubs and leave xor jae imul mov add sar xchg xchg add jbe pusha (bad) popa cs hlt add daa shrl ret push movsb xchg lods pop or cmpsl mov in xor pop add pop xchg xchg mov or jmp push test mov sub inc (bad) aam lcall cltd and lock jbe imull or pop jno cli xchg add inc cmp jne cmp and loopne pop (bad) xchg sub stc add or jmp add or (bad) pushf xchg dec inc mov andb cltd mov loopne jo xlat sbb repnz insb aam nop js mov ret mov push pop xor adc xchg movsb add (bad) lock sti mov xchg fisttpl add pushf or add xor or mov cmp ljmp arpl jne inc and pop std mov jge and mov and jecxz mov cld push or rclb xchg add sbb ret inc (bad) hlt xor mov xor mov ds jbe mov add xor je mov cltd xor fimull cmp divl add push mov popf enter push dec add xor sub xchg mov cmp mov fdivs xchg mov pop push pusha cs sbb subl call pop test mov jo movsb or inc adc mov and mov ret std aaa popf push stos (bad) pop add sti sbb mov sub scas les add jns push aad mov dec and ja mov ds and pop mov pop call fwait jns cmpsb adc shlb mov fldenv cmp pop enter test stos (bad) mov inc jns add mov push adc das sbb fistpl cmpl mov (bad) mov push call push xchg xchg dec fcoms cs icebp jecxz in xor adc xor cld stc ret adc cmp lret cmp mov push cld pop adc or mov adc push pop push cmp xor (bad) rorl add cmp xchg (bad) imul call or loopne sub sarl xchg and pop mov add cld xchg clc pop add sahf push rcll adcl test xchg loope dec jnp lret adc jne cwtl adc dec loopne cmp pop jp mov mov ficom rcl jmp push inc xchg cmp inc shrb mov test jle add sbb xor imul cmp xor iret iret jb in pop xchg dec dec les push push jbe cmp je out ja lods scas (bad) mov (bad) xchg cld xor popa mov rol scas and enter push dec push mov in xchg mov add repnz add dec mov (bad) sbbl mov add (bad) pushl or xchg (bad) jbe fwait jno pop xor inc inc sbb repz mov sar (bad) cmp inc and movsb add (bad) sti lock sub push xchg mov dec pusha inc cmp pop movsl subl andb imul loop cli jno or pop push mov jge loopne add adc dec jmp push pop ret test push leave jno dec inc mov sbb sub sbbb aam cmp add xchg stos mov push lods es movsl mov mov popf jp cmp sbb sbb xchg and aam inc rcrb sarb cmp ret push fstpt fmull jle (bad) movsl pusha xchg xchg nop cmp orl adc add adc or sbb mov sbb fisubl xchg test adc jne add mov enter mov and nop add rcrw mov sarl loop gs aam or or dec jl in pop sub inc stc inc cmpsb (bad) jae lock add lret js cmp pop ret out dec lahf clc dec add call sbb add add je cmp jle sub mov inc loop popl jo repnz imulb dec push adc addl movsb aas add aaa add jp rorb aas cmc popf cwtl mov xor or pushf xchg sbb cs xor add jmp pop jp add xchg out push lret mov mov ss or popa xor lret shl loopne call sbb xchg lahf inc add cmp out and jo ret sub rcr add ljmp inc mov adcl add movsl jbe jno add je (bad) xor subb faddl mov jmp inc cmp xor cli (bad) cmp push scas sbb (bad) jbe mov or xor inc ret loop sub dec mov in jo mov xchg out xor push and jmp test add add xor xchg add insb pop fiadd lock icebp arpl push sbbb sub faddl (bad) stc jg xchg int3 xor inc movsb pop xor and out xchg jae cmp sub or mov or lcall xchg pop xchg xchg mov dec testb mov or xchg imul sbb in ret aam popf inc das sub and push and inc cli mov lea mov bound sbb insb add xor hlt xchg dec push push mov xor pop lret xchg or loopne orb cmp xchg and mov sti xor stos pop add or int3 lock rcrl adc mov jp add mov add mov adc movsb or orb jg pop push or (bad) cmp (bad) lret push sbb mov cmp mov pop xor and push inc cwtl add loope jmp sub add (bad) pop pop inc pusha mov jge pushf and adc dec enter sti pop xchg pop sub cmp neg add and lods loopne xchg adc shlb fdivl cmp xor pop (bad) xor jbe mov xor add fistpll add sti mov xchg fcoms xchg xor clc pop mov add aam addr16 test sarb push int3 mov xchg out add icebp add cmp add inc hlt or xlat jle or add xchg gs dec jg jg dec rcrb sub imul ret xor stc inc prefetch aas sti insb loope (bad) test (bad) hlt add jnp lret lock insb loop push inc mov and lock push adc nop pop mov stos xor adc sub fcoms lock xor jb push fs cmp dec mov xor (bad) js jo hlt sub cld loopne mov das or adc push pusha sub imul cmp jbe sahf mov dec sarl inc adc push sbb add cs pusha add lret and jmp jp mov xchg sub je inc mov push (bad) mov inc lahf insb sub int3 int3 xor and sbb ljmp push mov or call fldz pop xchg mov in mov sub test mov test mov sbb int xchg push loopne jo loopne jae add push cmc cld test lods adc sbb sti or cmp pop ret dec lods sahf inc cmp dec dec lea cmp cmp xor das add mov in jl mov call cmc subb jp mov movsb fsubrs lret inc fst or (bad) push inc cwtl xchg pop movsb adc and (bad) loopne fs pop push xchg data16 test cmp cmp fstps and or push xlat pop inc adc or inc shrb dec xor add jbe sbb inc xor dec and mov jl mov jmp sub movsb pusha cld dec (bad) push pop rclb lcall insb inc outsl and (bad) mov add std mov repnz fcoml mov mov xor sub xchg and or push popa xchg mov outsb insl xor xor stos orb ret push or cwtl in iret push pop sub add adc gs test mov inc nop movsb sub leave inc mov pushf sbb adcl mov (bad) pop jecxz sbb pop stc lods aam js pop ss dec or inc sub mov xchg add inc mov inc iret icebp push test adc and or enter ss and enter in push jo lods js xchg cmp xchg xchg push mov and (bad) enter xchg sbb jbe push sub mov dec popa test mov cwtl add or cmc add jbe push sbb cli pushf push push mov and jno adc jl cltd movsl pusha cwtl ret cwtl sahf sub je cmp or pop iret roll andl int stos sub xor ret xor pusha xor jge or or cmp add pop mov mov sbb or mov add push push push and mov loopne (bad) jo adc and sbb data16 jmp cmp dec sub mov loopne push add rol callw add rclb dec les into sbb cmp jo les push scas sub shrl jl rcll sahf jmp add sub cmpb or or and lods pop pusha xchg jbe xchg addb ja int jle lds or scas sahf add xchg mov xor loop aas int mov scas lock add push push fwait pop pop pop shrl add cmc jbe pop cmp test jge repnz inc ret inc repz sarb hlt inc xchg add and cmp xchg cld pushf adc loop sub mov call xchg sbb push ljmp xor pop test sub in inc stos es insb add std lahf lock enter stos data16 inc mov xor mov sbb out pop mov cli mov and iret inc je cltd add mov ret and or xchg xchg sbb or push les js arpl nop mov inc xchg jg test push pop lret cmpb push adc pop pop addr16 sbb mov xchg test mov add pop mov fmull push movsb xchg jns sbb sub add xchg lods add out rcrb nop hlt add add arpl inc or lock inc lcall ljmp jns int3 push sahf xchg ret and and loopne inc pop lock shlb sub and icebp add popa mov fwait pop mov test test pop popa lret sub cwtl pushf or (bad) mov nop stos jmp movl les mov sub mov dec jb pop (bad) (bad) sbb stos dec lods ret push in imul push adc aaa lods push mov cmp mov fild sbb lret mov rcr pop adc and cmc push arpl push bswap or enter cmp mov mov inc and rorl imul (bad) jae mov adc adc (bad) (bad) int3 xlat fnstsw cmp pop inc addr16 lcall imul or xchg sbbb fs fcomps fdivrl and xchg sbb addr16 inc cmp int3 adc mov sbb inc repz xchg popl dec jp jecxz subb jl pop pop mov fildl sbb bnd push mov std and test pop push jge xchg inc inc ud1 addl out pop clc leave mov fstpt aas sub mov stos fistpll inc test repz add decb add insl gs xchg test sbb jbe push out add adc loopne pop jg (bad) push or outsl add jae lret add into mov dec in fnstsw dec test sbb enter lods mov jl push repnz jb out popf mov mov xorb pop sub loope inc pop sub jb addl adcb repz add add mov out cltd cmp sar pop mov sbb ss andl loop pushf nop add xchg insl iret cmpsl add mov lods jb pop pop ficomp jns or ret cmp xor jle mov test rolb push push gs popa cmp (bad) outsl (bad) and jl add js adc (bad) add dec xor or xchg add cmp insl dec insb pop daa add add mov push outsb pop pusha dec jo sahf mov sbb sub inc (bad) xor loope mov dec jb add sub outsb hlt mov xor sbb pushf jae pop cmp pop rolb xor push popa outsb (bad) (bad) lock ds mov jb or push insl sub mov mov add faddp xor jp mov pusha or leave shlb add lods mov add dec in add add and fs dec mov mov ret add dec xlat and adc (bad) and inc out cmpsb rorb and mov push in inc les mov and add outsl (bad) jbe sub xchg jge or dec jne adc dec and add insl jb data16 arpl inc ss push in test add pusha push out sub mov add psllw adc and mov les or xor add sbb addb push sub je bound add sbb jl lret mulb cmp xchg rclb sti aaa enter sbb sub push (bad) test inc xchg sub xchg jmp ljmp sbb rorb sub into addr16 jle add stos cmp popf insl sub scas cwtl xchg mov push hlt es xchg je push imul ljmp push movsb sub dec sbb dec lcall push mov add popf repnz mov je add rcll leave jecxz mov inc mov add faddp call mov in add add pushf inc sub and pop mov inc cmpsl or test mov pop pop out lahf sub lret mov data16 bound mov ffree ret pusha insb roll (bad) xchg push cmpsl jle aad sub dec or and mov out add mov xor xchg rdmsr pop jmp add pop idivl jp aas lahf xor and xchg add jp mov cmp int je jne xchg xor sbb out add dec mov add mov push call scas outsb ss push pop frstor mov or je mov jno and add fldl mov mov popf in push imul xchg mov add dec nop pop fcmovbe adc pusha xchg mov insl jno add xor pop aam lea adc mov pop mov rclb add or xchg mov decl (bad) mov pop jecxz mov adc or add mov add outsl cs popf inc pop test and insb push cld add rcrl pop add std adcl je clc mov (bad) xor or xor xchg test sub cs add ss jbe cmpsb fild leave (bad) js adc xchg xchg mov xchg jne push test or lock sub cmp xchg sub mov fnsave mov add add sbb pop cmpsl fnsave mov sub mov inc add rolb mov adc adc push fidivl mov or fistp and clc (bad) out pop stc pop add andb xchg jns mov and call out jb dec rolb or je and pop mov dec ja or nop sub movsb lods shll inc mov inc cwtl xor insb ljmp ja pusha or mov imul xor add out pop pop jle,pt sbb or subl dec inc mov aam test push push or insb pop lods test aaa inc xchg adc int push pop add addb hlt std sbb cmp mov jg clc xor sub mov or je outsb mov and lret repz add mov push add out in test je mov fwait cmp and aaa imul add je int3 loop ret jne add push rclb jo lods add and (bad) add jge jbe cmp mov movsb mov add (bad) mov and push cwtl xor dec jge das and mov (bad) sbb ja lock repz cs or loopne jmp test mov in adc test xor sub imul loopne push fistpll in movsb xlat js cmp mov sub mov xchg mov dec or nop sbb add dec in jo mov aas icebp push pop pop test lea loopne in mov cmp jno cmp std enter xchg nop inc cmp clc sbb xchg lods outsb (bad) (bad) xor mov in or add fdivrs sub jp mov movsb sti cmpl push test loopne mov js pusha adc jo xchg fwait pop sub or xor imul xchg nop loopne das test shrb mov and lods jp xor cmp sub fcoms call dec inc push inc in jge add (bad) outsl mov ja push int3 icebp mov push mov fsubl add stos jns,pn sub sub add mov push hlt and fisttpl mov push cmpsb mov and fs stos into xor adc (bad) loope cmp fdivl call adc push cld inc int3 fistl or add jae fistpll xor mov mov lahf dec in stos push add pushl jbe insb jge cltd xchg mov jp (bad) mov sbbb sub sbb or push xchg in mov dec push lret xor jge pop jns mov fcoms ret jmp jge pop popf push add out sbb xchg ss insb cld and faddl cmp mov sbb mov je nop push mov daa or or dec and jp or insb sbb mov movsl mov jo and lods lret enter mov jo add fcoms mulb sbb add push out loopne and sub xchg lock clc add es xor push vhsubps push or stc add pop and jo push iret sbb lods xor xchg inc arpl push mov push add inc addr16 lahf add lods adc daa and mov jl outsb mov rcrl enter mov jae and and jnp je ret sub inc shll aam mov js in ja ljmp jmp in jmp (bad) push std or fstps mov inc or push dec xor cmp shrl sub (bad) xor mov jecxz hlt add lea loopne sub xchg or push dec xchg xor mov lods xor daa test xorb push loop cmpsb stos lahf (bad) fcmove or sub or (bad) mov mov xchg and adc adc movsb or or stc cltd les sub in lods lret push add lcall sbb push mov pop mov pop nop push sldt jge mov int add out mov sbb xchg stos int lea lods xor out repz loope xor je push or sbb mov clc xlat movsb and int3 mov push xor movsl push in pushf pop xor xchg popa icebp fldl mov add jne or jno pop add pusha add ja push (bad) lock pusha xor cmp test mov gs lds mov add xchg mov jnp repz dec aam nop fadds out mov jg mov je mov jmp mov sub int jo mov mov pop add int3 fsubrs xchg dec mov jle pushf add add mov dec push sbb push sti (bad) xor ljmp addr16 es jo and add hlt or fist cwtl out xchg sbb jge dec les and loopne add lods mov hlt loope inc jle int cmpsb seto pop cmpsl jo add (bad) pop and stc mov fldenv insl je aas (bad) add add mov orb loop add pop jnp repnz sub jp and adc icebp inc cmc mov mov mov fbld pop daa dec and mov imul and ret loopne xor add adc add rolb daa xor add lea push ret or cmp jle cvtps2pd dec mov jo cwtl jae add sub or and jl insb add mov xor faddl (bad) daa or inc out push pop icebp pop jp xchg aam inc bound orb dec lods sbb (bad) into adc dec insl and sub mov mov lcall getsec in fs lods pop inc imul and xorb jne sub pop sbb pop push insl push lret xor dec sub xor cmc (bad) ds or adc insb add push fbstp xor push sbb dec dec mov sub test cmpsl xor shl dec mov inc test pop cmp stc push pop je mov mov jmp dec outsl xchg xchg mov dec sub or int and sub leave mov and mov xor rorb mov mov or test (bad) jo or insb stos mov adc push hlt (bad) mov add lock adc xor dec fsubrl cwtl mov ja inc dec and fimul pop add or pop mov push (bad) mov scas mov dec ss sbb (bad) add push xor mov imul ja shl fs mov fadds xor sbbl mov or mov lea xorl mov add repz sbb pop (bad) ds (bad) (bad) popf pop push and lods add out sub jo mov xlat (bad) fisttpll push ds and fcomip cmp je sub add das or and add (bad) lock cmp fimul arpl in push push or subb or lds ret push scas add les (bad) push mov cmp sbb adc rcrb pusha enter push sbb jle adc mov jbe (bad) je or pop fimull movsb pop xor cmp jno iret add ljmp fistl loope stc (bad) xor jne add ljmp into daa sub bound pusha adcb in cli adc (bad) mov jp and pop add mov xchg add mov les pop loopne (bad) push sbb jo stos and cmp fistpl std add mov mov jp jno push fdivs xchg test out mov add jl cmpsb ljmp add out lcall jg push (bad) mov xlat add insl inc popw in jb insb sub mov add cmp xor fnop pop hlt cmpsl loopne jle enter xor mov pop add xchg jp std mov sbb (bad) or adc push repnz dec inc adc adc pop or or and ret dec push scas sbbl fnsave xchg roll les mov cmp repnz push pop and adc out or or sbb inc add inc pop fnstsw roll scas push pop push jo jmp push movsb stc loopne push xchg movsb inc sbb or sbb pusha push and int out jp mov scas movsl and lret enter sbb jge clc add mov jp and or push xor mov sahf pop mov test fistp fsubrl mov mov mov adc add mov movl rcrb movb shrb sub es loop dec mov rolb add xchg in and negb out icebp lret adc jle inc mov cmp ficom scas rcll repz mov ja mov dec jns sub add mov sarl cmp lods int3 orb addr16 rol pop mov xchg repnz cmp das add (bad) jne ja test dec xor mov add mov and add mov cli out dec add popa mov inc mov add flds jmp jo add int3 push pop int incl adc sbb pop out shll enter sbb stos imul pop mov icebp cli data16 add jbe pop add rorb mov shrl outsl mov nop pushf adc add imul dec xor pusha jg stos nop scas inc sub lods dec mov ret adc pop mov fmuls pusha push xor xor cmp sub leave popa mov and mov jg hlt or popa xchg pop xor and mov and (bad) or xlat add inc or xor xchg shlb push push pushf inc add or (bad) fstp add lret xor es xor mov adc clc call add popa xchg fstpl mov adc scas ret mov sbb add jg jl popa outsl xchg inc adcb or cwtl ret or adc add fcomps mov out pusha jmp in add mov xchg cmp pop push push pusha add negl add aam dec sub sbb (bad) adc adc test sub and or stos mov mov add test jl nop and jns stos xchg mov mov mov xor mov mov add mov inc lret es mov lcall rolb shll pop push sbb or jp (bad) mov cld adc inc mov rcrb xchg imul (bad) add jnp int subb lret add and sub (bad) stc decb add fbstp push jecxz iret lock fdiv sti loopne sbb push sbb xor inc push dec (bad) jbe sub adc or mov rclb adc push mov and mov outsl push adc sbb dec ret insl (bad) sbb vmovaps js pop outsl jno data16 mov jl mov out loopne push (bad) sub cmp add rorl xchg lahf cltd lea jge decb mov mov clc mov inc fs sub test outsl sbb xor scas js dec xlat les dec or stc add mov (bad) lret loope lret jnp icebp pop ret and mov mov xor adc inc push sub loope pop lret mov push and das dec mov test std rorb mov push mov add cmpsl push pop inc add cmp xchg je add aaa or push lret adc cld and es push fild call pusha add sbb stos dec or inc fnsave mov add mov adc enter add inc das fimull mov into cli je inc sub dec in adc jno fsts inc cmp stos mov or movsb jle pusha or (bad) scas dec pushf sub dec andb mov ss lock adc dec push mov shrl push out and jno cmp hlt mov les pop xchg mov call pusha sub mov inc bound sub repz push adc in sub js sbb or xchg and or adc pop je aam scas paddusb lret add popa arpl fsubrs add mov and or stos nop lret mov push push imul fsubrl iret pop jo add or rcll int dec fbstp or sub (bad) ss repz test adc adc mov cmp lods lcall push pop cmp pop test jnp cmp dec dec jl int3 stc scas inc ret push ja enter movsb in insl (bad) in scas jecxz xchg add pusha mov cmpsl pop pop (bad) aam in movsb mov pusha int fdivrs pop mov mov pop lret pop bound pushf xlat jnp in jmp sub and jb xor rcrl xlat push jae outsb inc jnp or in fisub sbb pop fsubrs push jp xor test inc sub dec test aad push lods adc ss adc add pop add cmp mov adc bound jbe mov or dec inc xor or out arpl and (bad) rolb scas xchg dec add push jns int3 push sbb lods pop int3 cmp into adc or cwtl dec xchg mov jno push xor jne add push dec mov scas add sub test cwtl jno cmp lds push xchg inc dec ds dec cmp add cwtl andb shlb xchg pop jbe inc ret repnz inc jmp inc jmp in cmp ss test movsb dec mov addr16 push jl push mov inc inc inc cld lret push fsubl push aas push lcall mov cmpsb call push enter push sbb fbld push test loopne orb add repnz pusha test pop sbb icebp adc xor and xchg (bad) bound or clc les adc mov jo xchg sub aad mov cmp fcoms inc ror test push rolb adc push xchg fcom inc push loope pop jg repnz sbbb or jbe mov xor and cltd inc xchg ret add or arpl inc insb call mov xchg sbb aam ss adc jnp lahf arpl jno shlb lret pop into push jnp aas adc lds sub dec add mov and mov adc and push or mov arpl lcall popa sahf and rcrl xor push cs and xor subb jge and dec aas les faddl ficompl xchg xor pop insb xchg or lock and cs push push stos sub add pop lock add sar mov inc inc push and (bad) pusha mov insl dec sbb sbb add cs ret subb mov addl mov (bad) daa pop or lods dec add jp add dec inc mov nop or arpl mov call stos add into inc mov mov xor arpl inc push xchg nop cwtl xor add sbb nop lahf add in jle sbb enter xchg inc mov pop sbb xor inc hlt mov and es lret lock jg or sub les lock and xor (bad) lock sub loope inc xchg and cmp ret inc cmp adc stos sbb fbstp and mov push aaa mov jnp lock mov fwait sub or out and outsb sub scas or repnz (bad) ds pop mov sub mov inc or push into xor int3 hlt lods sbb cmp xchg ret cmp jae int lret rorl add sub inc stos xor jp cvtps2pi mov mov shlb push lock inc mov push das test pop inc dec mov mov mov cmp xchg adc or xchg push cmp push xor js mov add andl pusha sarl js ficompl test pop (bad) xor push inc cwtl mov aad add jno (bad) jne fist sbb or push pop mov push mov mov jo inc mov pop stos repz and adc sbb in dec jbe (bad) push bsf mov and push jge stos (bad) cmp xchg orb jle jl add int3 inc sub mov push inc mov add rorl cmpsb push cs popf mov push outsl mov nop sbb xchg fs or adc cs out mov add push push and sarl mov scas push sbb movsb inc or imul dec adc popf add adc test xor ret sub add daa add mov imul aad adc mov int3 sub xor push orl es jo out test cmp out add jecxz scas lcall push adc xchg cmp cmc push or call add mov or add xchg bnd push jg stc lods into mov jp daa add pop cmpsb les shll sub push sbb adc insb push test xor jle mov add fistpl pop sub xor inc xchg push adc mov fadds test inc aam inc mov add sbb xor out movsb mov and in jne inc dec out pop or fs insl lods add jnp ds cs jp mov or sub (bad) flds adc add repnz call sub cwtl jp jmp fmulp dec mov push les mov mov fs fs add or add cmc mov xorb (bad) inc pop pop jo mov lock cmc jl pcmpgtb pop inc loopne and xchg fiaddl scas fdivrl repz je xor sbb add scas gs lds push mov (bad) mov addl mov add scas jb jecxz adc pop add cmpsl mov mov addl sti inc (bad) sub push pop fs scas jecxz cmc xor scas jge stc add mov mull xlat nop dec push subb pop dec or sarb push ss cmc push jae out xor xchg jle in add in or sbb neg push push sbb add push das cmp lret add in xchg jle outsb adc cmp xlat xchg mov pop add js pusha sub jns add pop not sub in rclb or out lock fwait andb dec add xor rcrl push stos mov movsl sarb lods lret xor mov add pop push add cmp es lret push rcrb jbe mov rolb mov and aaa je xor rcl mov dec fs inc mov in cmpsl push call jnp dec test xor inc and cmpsb pushf cmp inc add (bad) cli jp mov add or sbb dec daa pushf enter leave jp pop sahf and stc test in push sbb pop ror adc xor pushf mov cld cli add cmp cmpsl test add push jmp dec add (bad) mov pop fstps fistpll call leave adc in mov pop enter sbb sarl push xchg call loopne in ret pushw je stc gs call pop jge pusha mov dec int3 mov add jnp mov or (bad) leave sarl mov rcl aas pop push je out fcoml xor js jle pop aam xlat or add jns mov rcr les mov and adc jno add or mov jbe movsb add add mov popf cmp inc mov mov mov dec and sbb outsl sbb xchg mov sbb jno into gs ror mov mov (bad) popa stos sub mov mov pop add xchg push sub pop lods fnsave addl stc dec (bad) mov sub pusha test pop lahf (bad) hlt cmp jg adc sahf int3 shr jnp jb xor fldl hlt imul cmpsb sbb adc test mov xchg push enter rclb dec jnp add imul mov mov ja mov sub mov jp xchg jb repnz push scas push imul je add pop ds fidivr test mov movsb lock (bad) inc mov dec adc in cmpsl xchg pop or leave push dec sahf or pop mov add xchg enter lahf jmp (bad) repnz movsl jnp rorl jp cs cmp push push pusha mov push jb repnz in (bad) pop (bad) aaa dec insb int3 cmp clc xchg or cmp ret inc dec dec and jb dec es sbb call clc stc pop add xor mov shrb pop push lcall pop ljmp sbb xchg cltd stc sbb mov cwtl sbb xchg add pop push sbb repz int3 inc inc mov fadds and hlt adc jnp lock out add popl sbb les dec adc adc std sub fsub test adc push in dec call xchg mov bound xlat mov int3 and mov jmp orl cltd sub mov rorl fisubl and (bad) mov test fisttpll int3 cwtl xor cltd mov push push cmp bound stc faddl cmp setne repz fidivr push pop xlat and insb int3 andl cwtl roll jae bound pop mov mov cltd js rolb std push mov xchg sub mov add in icebp fdivrl add (bad) mov std dec xchg mov test xchg pop pop or adc mov mov popa add push push addl cltd sub pushf sbb es xor shl sbb jp adc insl and dec or mov push cmc sub cmp mov xchg cld inc and cmp lcall xchg jno mov lea (bad) adc inc pushf cmp mov inc out sahf push lret add sub add adc push mov and inc js mov push mov ss inc add je add pop and stos jge fmull pusha xorl int or mov rolb push sbb pop (bad) add lock adc lds xor pop jne cmp adcb xor pop mov out cmp xchg ja stc rolb enter xchg dec sahf inc movsb xchg mov lahf add ja aam mov jp or bound sbb pop mov cmp xchg sti (bad) lret cmp inc add mov jl xor sbb sub xchg pop push sub add test add inc popa mov inc (bad) pop sbb sbb loopne daa add jo lahf add sbb call and movb fidiv xor add cld add add jl xchg lahf cli push insl repz roll xor fs inc inc les cwtl pushf adc add fwait (bad) mov mov dec scas je movsb test mov jb mov and nop mov insb and int3 sub mov rorb xor andb idivb cmc cmp add sbb push push add jno jnp push nop and mov or sarb rorl movsl enter dec inc and insl repnz fs sbb aas add cld mov or leave inc mov and cmp loope test push push cwtl stos cmpb scas mov (bad) hlt push mov frstor sub arpl mov aaa rorl dec shlb lods push xor jnp xor int3 mov movsl les (bad) sub inc nop cld add ret dec and aam adcb subl (bad) mov xor dec jno sub cwtl xor mov addr16 mov jo in pusha xor in lret std mov and jmp outsl cwtl add add lock xor and arpl pop jl cmp stos loop ds cmc push pusha xchg lock ficoml gs int sbb mov pop inc jnp push sbb and cmc pop movsb rolb call mov pop push ret add insl movsl xchg cmp shlb add mov nop je fisttpll lret jns mov nop call aad call mov inc rolb sbbl fwait ds arpl xor inc pop add (bad) orb xchg dec push add repnz mov jns mov cmp cli jbe icebp testb add xor jo add pop enter add rol mov xor mov xor adc jp ror xor and pop inc pop flds add mov jno cwtl dec mov or inc sbb psubq clc jmp movsl xchg add aam pop cmp repnz outsl scas push std jno rcll shlb mov mov mov popa cli sub mov adc inc (bad) or negl fwait cs xor ja xor popa dec repnz ret sti ds dec mov jb mov mov iret iret sarb pop and add push daa rol movsl popw xor mov js in add ss cli mov loopne mov mov xor andb jl push nop or add mov pop inc push dec dec or outsb loope js sub jnp xor sub popa mov xor push jbe dec mov mov and mov push ja mov movsl jns insb push or sub push loopne xchg xor inc pop mov imul shlb cli dec and xchg xchg leave add mov mov mov cli scas dec inc movsl ret subps mov out jp and mov movsl push cmp lahf sbb dec jno sbb cwtl adcb ds adc rorb js je lds lret subl mov mov xchg lahf mov jns pop shlb adc les sub fs ret add add test mov pop jle imul es cmc or in add mov mov cmp lahf repnz cmc xchg adc insb mov (bad) mov add mov test stos loop sub out xchg and sti out pop dec in xchg pop cmp out (bad) arpl add out jge xor lock sub insb repz fidivl iret into push roll inc or sub popa lods ds cmp xlat lock sahf out ret add inc sti sub pop div dec imul cs insl loop jnp movb iret mov or inc bound lret shlb rorl nop lret push out data16 fneni(8087 nop inc push fldl or outsb enter mov or push jmp or mov inc push aad adc xor or xor (bad) mov jns outsl andb test cli dec ss pop dec add and pop sbb aas or into out in js cmp (bad) insb add (bad) stc jge jae js add push mov add jbe imul flds cmpsb (bad) xor push xor add (bad) cld xor jb xchg lret xor daa jecxz mov xchg mov cmp mov mov or add std push dec mov dec out jecxz js js out icebp outsl lock pop int fadds (bad) (bad) in adc mov mov cmpb repnz or cmc pop (bad) jg cwtl inc cmp adc fdiv add scas and (bad) jmp or pop in lret add fcmovnbe push pushf jmp sbb (bad) out scas xchg mov and lods rorb mov jmp (bad) push cmpsl push dec mov add fwait mov shll mov loope ds fwait out push add (bad) sbb sub cltd js addl and add lods and pop mov or mov subb imul jle add sbb xor jo push push rorl mov sbb and mov adc (bad) loopne pusha sub aam xor xor daa inc add call outsb das or (bad) std mov add imul lock cs mov es add push mov rclb jge push lret jl xor (bad) inc cwtl fdiv clc cmovg cmp lea in les add and test pushf pop fs into add xor sub sub and and add adc loop fsubrl movb shlb push push in or pop hlt loop faddl xchg adc sub mov or mov jp (bad) jl sbb jb mov popa enter divb mov inc add fs cmp mov pop and mov pop xchg cmp xor and adc pop lods je add pop nop inc adc in cmp sbb mov push nop pop in cmc rcr add mov dec push push lods dec mov leave or and mov ror mov or mov lods add in xor lock mov xor jp or cltd loop or int3 out mov push andl andb sti or add jo into leave stos add pop mov jp adc sub fsts cltd jo and test scas inc jmp in dec jbe or inc lock (bad) leave inc xor dec js mov add mov cmc or mov inc xor inc fadds pop nop lods fbstp adc mov push xor test aam dec dec aam adc mov add nop aad add in add out mov dec pop scas and rcll or dec jnp jno add hlt (bad) fdivrl xchg pusha mov imul scas mov loopne testl nop mov popf pop jnp in nop xorb btc int3 jns cmp inc loopne (bad) or movsb sahf and add outsl jle fsub sub adc scas in sub test xchg decl push or movsl or add jecxz mov dec add das ficoml out aam xchg insl pop mov loopne mulb pop jmp clc push xchg jo cmpsb pop xor sbb xorl sbb mov add push ret add sbb mov cmp outsl xor pusha xchg jge pop fs cmove xorb dec and sub sahf add dec fwait xor or insb xorl fmuls icebp call paddd or jge addb cmpsl rclb add out xchg push aas movsb js add sub shlb add pop adc sub and cmp (bad) mov outsl add dec xlat aad movsl lods lahf sarb mov jl xor (bad) jg ret aam popa mov cmp test cmp movsb test loop nop add adc fmuls mov push cmpl adc jns push add pushf outsl adc mov push jno scas push testb sarl sub xor add stos jo (bad) xor add test add loop cmp fcoml add mov dec and or inc clc cmp add xor jp dec lret cmp pop aam lods lds mov clc iret push cmp adc loop push dec mul es add test jg mov dec xchg mov mov js or push stc pop xchg (bad) pusha xor sub fiaddl add lahf push mov inc repnz (bad) nop andb add mov loope adc gs mov add push lret shlb xor mov mov push or call enter aaa and stos cmp add cld mov fcoms inc sbb je xor adc jl mov int3 bound pusha mov ljmp push sub add push jb out sub xorl dec inc jns dec or clc stos push and xor pop ds mov test test inc mov rolb or xor xor lret lock cmp rclb je add inc and repnz jg loope cld add pop andl adc movsb das js pushf ret push jo call aaa jle or sbb ja jg rolb adc inc sbb stc lock and lret dec stc dec rcrb fdivs je push pop push inc cwtl dec add push std adc xor gs mov pop inc add pop orl add mov xlat mov fisttpll (bad) jo sub dec (bad) or inc jb push cld dec test jns cmp cwtl jle cmp lods test out jecxz pusha aaa jp xor test sahf scas addr16 lods inc and outsl jl push mov ja add ret sysenter dec subb jne cld add ficompl pop int fadd in pusha add push stc repnz loop jl xor gs mov cmp in add push fstps dec dec js xor mov dec lret mov xor pop mov repnz and xor xor adc cld jo,pt xchg pop sarb leave fcmove (bad) enter popl xor out mov add cmpsb bound mov enter xchg subb je movsb ffreep (bad) outsl or adc or xor and je xchg mov dec xlat rcl dec or and cmc faddl mov pusha stos ret push adc inc pushf add hlt out or pop or xchg (bad) jl loopne imul mov xchg cmpb and sbbl add orb call pusha pop fldt pop and add bnd xlat mov mov (bad) dec bound fchs xchg mov lds xchg sbb rclb add sbb je dec or sti jns mov insl stc ret sbb not cmpsl sbb add push and lret add xchg test orb sbb mov sub hlt add mov jnp pop cmp add push mov adc push jno add adc push add cli cmpsl adc jne rcll faddl imul popf dec scas xorl push sub aam add adc cli pop stc mov sub add fdivl cwtl pop test fs loopne cmp cmc xchg adc fiaddl dec cs jns ret orb enter push inc ljmp mov nop in mov dec adc pop inc pop movsb pop pop inc sbb cmp sti cmovs mov inc (bad) mov pusha mov sbb xchg sbb out mov push repz dec inc call and cmp nop rcrb stos xlat mov or cmp lock mov (bad) sarb sub jb nop mov das dec xor add sub rolb pop and test add add cmp inc aas dec fs aam in out xor adc cmc in sub push inc pop les cld mov outsb cltd add mov adc xchg shrl jo lds faddl and mov inc inc insb inc mov addr16 sbb lods inc cmp add (bad) lret or fild mov pushf stos or or xor scas xchg cmpsl xchg mov sub xchg sbb dec push pop data16 xor jbe pop cmp into mov enter sub sub sbbl inc test or mov cld mov jo aas add je lret ror add insb ja add ret sbb jmp outsb popa rorl jne pusha jo inc orl lret fbstp cmp (bad) push dec pop xchg xchg jo enter cld insl push fsubs lcall and inc call rorl frstor cmp adc insb inc sbb mov (bad) sbb cltd pusha inc add add mov mov test enter add push rorb outsb ret xor sbb sub add and push in sarb dec mov lea loop adc jo adc pop xchg das sbb out xchg or jo pop xchg cmp movsl icebp push movsb dec fs xor or or out sub and inc pop sbb or scas inc cld cmpsb (bad) jbe inc or sbb add xchg nop sbb lods fidivl insb xchg hlt xor subl add pop push scas push sbb aas out addl out and stos lret mov js pushf add adc add sbbb jg adc hlt push int mov xchg pop xchg (bad) sub dec or add leave lret insb subl iret jmp adcb mov mov sub rclb xorl imul cmp pop (bad) fmuls rcrb mov inc fwait xor xchg addr16 movsb (bad) insb push jl pop inc sub (bad) xchg lahf and xor test call pop xchg add jbe sbb push jbe add cmpsl push or and call sub addl mov adc cmp orl inc fmul enter pop dec mov sbb (bad) sbb add stos cmc adc out shrb mov cld sub mov (bad) mov mov jge aaa pop xorl jl pop nop les mov xchg pushf daa mov dec push mov test cmp xchg adc mov jbe cltd lret or dec and fistpll mov inc mov data16 jns add adc mov jmp in adc into cmp mov cmp add inc or popf fmull sbb jl xor int3 add mov mov lcall shl (bad) xor adc mov lods out fs sub inc pop aas dec aad jmp loopne shrb push adc or sahf roll popa in (bad) mov roll mov test adc stos or xchg mov add lea popa mov stc xchg mov cmp xchg rolb xchg dec jp adc add pushf pop mov adc and loopne ds sub scas fwait leave mov add into bound sub insb stos iret js adc movsb adc in es inc loope lock jl rclb neg mov mov sbb mov fiaddl scas pop in lock push into adc subl bound push leave lock or and inc mov sub (bad) loop push sub pop cmp xchg into mov adc xor orb je insb xchg push or repnz mov jno xor faddl xchg je jne sub lahf loop add sub xor loop scas sub leave or in icebp fsubp pop adc sub movsb add sub mov (bad) adc rclb jo ret jg push insb adc xchg push nop add das adc cmp xadd negb xchg mov inc cmpsl pop enter jmp jle add jp or pusha sub xor out and (bad) mov push push dec add dec rcrb or rolb pop xchg fsubrs paddusb ds add lds aad loope pusha out adc add stc pop mov inc pop ret rcrb push jno mov adc add aas or rorb xor xchg pop add sbb addb mov insl add sarb call mov (bad) jecxz loopne xchg jb xor cld loopne push lea mov sarb mov jo sbb ret mov inc loope push or test fdivs and hlt bound xchg or sub dec outsl jmp std sbb repz ficom add add xchg pop dec mov fmul cmp pop cmp mov mov repz mov and cwtl or jno sub stos pop in sub in xchg push push aam pop clc cmp aas rolb xorb jb pop rorb dec sbb xor cs dec xor (bad) jno and dec adc dec cltd mov xor pop inc and pop or addr16 rorb rep add and pop jnp sub push (bad) xchg (bad) clc orl add inc stos (bad) xor and add cltd add mov add or clc or pop fwait jl or xor jl test sub adc and cmp cmp lock lock imul sub aas jno cwtl call movsl sbb rorb mov adc inc mov mov adc xor arpl test mov jl add into out ds stos fildl gs push mov jbe add in xchg insl test hlt sbb sbb xchg in pop add dec inc or data16 int3 pop outsb jl ret xchg cmovno arpl mov lret adc (bad) ja or cmpsl dec sub ret aam cmpb out dec (bad) xor xor add in outsl and xor sub les and fdivrs and xor cmp adc test xchg insb sub mov (bad) push (bad) and fs xchg push cmp scas lods cmp inc mov cmp sub dec mov lret and fdivrl adc mov mov leave dec mov sar dec cmp rorb std xchg mov in sbb push call or push cmp and add and enter mov ljmp push lret mov push (bad) jae popa or dec fiaddl shr adc stos cs les add dec std dec xor mov pushf shl cmpsb sub cltd pop mov push insb out cmp jne sbb push mov mov sahf xlat xor or lcall dec andl adc add xor mov cltd sub mov xor push dec enter cmp xchg and ds mov mov cwtl jge fcos adc lock xsaveopt push rclb lods lock mov addb inc sub inc jno out xchg inc mov jbe or in fldl inc pop jae push sub jb xor cmp (bad) cwtl outsb ret mov (bad) jg adc and cmp mov adc ffree or fldt mov xor jo test orl iret enter testb xchg stos mov pushf lret (bad) int3 mov je paddsb decb sbb pop hlt je add (bad) notb inc ja or movsl adc test xor sbb push imul inc add fistp inc fs cmp je sub push or call (bad) mov pop fs xchg mov dec jbe xor push inc xchg mov mov addr16 mov sub or (bad) sub jl xchg add lea xchg or mov out add orl loope ja cmp test mov sarb nop jmp and add cmpsb in pop and sbb out or cwtl pushf mov out test movsl jl dec jns and loope adc adc pushf mov ja test test inc outsb cld push cmp cmpsb mov jmp dec adcb shrb je dec fidivrl dec cmp lods add sahf inc outsl scas fnsave adc add xchg fadds xor jp mov jo pop adc add movsb lahf les inc ret jno sbb add sbbl sub movsl nop mov add ss in mov mov and add addr16 movsb fcompl dec push sarb mov cwtl test addr16 mov jbe xchg imul sbb popa loopne mov andl enter xor icebp arpl adc (bad) xor adc xchg jle dec add push addl add (bad) call mov add adc cld add clc push mov adc jg pop ficompl pop out in push add jb pusha mov dec rcll jae (bad) scas push adcb mov setl into or and inc jge push mov test cld mov mov sub add add push aam push sbb pusha xchg fistl add (bad) pop and jo sti xor in push sbb and add mov pop xchg jg loopne inc fwait jl add mov test push xchg out xchg pop subl dec outsl les ret movb adc xchg inc add mov (bad) ja dec inc (bad) xorl bound test push mov mov sub out dec stos mov and push and insl cmp xor mov pop daa xor mov (bad) or or cltd lods mov pop cmp sub add dec and add mov js cli add lock (bad) mov inc test loop pop inc xlat xchg mov mov stos xchg sbb mov jne ljmp add or xchg stc ds or paddsb xor push ret xchg or ficom ljmp dec xlat add inc add test jle add fistl sub fs pusha lock and push and jo std out outsb ret pusha pop or and fwait jne lret sbb aam mov add (bad) add push test aaa and xor bound dec and es nop mov lret outsl mov dec pop sbb xor jb push jmp inc js and pop (bad) inc mov in adc mov fs fs jmp rcl and icebp mov daa cmp inc mov sub xchg test push nop add icebp mov out int (bad) mov xor sub rcll stos inc pushf call xor orb push sbb jg lods sub mov cwtl test cmp add repz push add stc adc sub lret test arpl scas add imul xchg sbb es ds pop and out xorb adc xor pop sbb push int3 bound adc in int3 add sbb pop xor pop jno fsubrs out rcrb je (bad) push adc in push fdivr jle sbb xchg push push sti and dec push divb adc out in loop add inc sub dec mov and insl test inc push xor repz or sub (bad) sub sub cmp cld inc rolb lea and xorl inc int3 leave or and imul loope cmp dec nop leave cli setl sti or xchg test sub push adcb fcomps lods jb pop popa add pop add scas mov cmp fwait xor pop inc addr16 and adc stc pop mov loopne push clc sbb sub or sub jns or ss add cmp and dec inc adc gs add insl pop and push cmc dec lods or dec inc jl je fidivrl es mov mov cltd inc jl in adc addl and lods add aas test and add push sub insb mov or insb push js adc loop add and imul int pop cmp adc inc int3 js mov or ret xor or mov scas and test pop xchg call dec dec sbb pop cmp xchg fsub dec shlb lea dec test cmp outsb push fisub icebp js lods cmp (bad) mov mov and pop inc lods add cmc jl (bad) mov cmp mov insb int leave cmp outsl popl cmp fcmove add lea iret dec mov shrb xchg lock into xor arpl fs sbb popf inc push movsb adcb adc imulb or aaa mov add nop rolb icebp loope test xchg fimul insl push (bad) cmp add fdivrl subb add pop mov enter cmp addb mov xchg sbb lret call cli mov push sbb dec movsl (bad) fadds or jae xchg leave dec shrb daa addb icebp repz or (bad) inc xchg cld adcb nop sbb sub inc and insb gs adc fdiv in jge bound adc loopne mov xchg and scas mov leave mov je cmp mov inc cmp mov jae and mov or int cmpsl je,pn out adcb shlb cltd xor mov cmp add dec sti sbb daa ds cmp and popf dec outsl push and jne adc xor pushf lods mov cmp (bad) mov mov jo adc or test ja pop in lods clc add cmp jo inc sub mov adc add imul in adc jae in dec xor xor les cmpsb ficompl xor xor push cli adc std and pusha sbb mov push jns and add mov int3 add sub or rorb sub orb loop cwtl cltd lods mov dec inc push push rclb addr16 call (bad) lcall pusha test sbb out cs inc cld outsl pop mov les inc sub imul inc aam movsl mov mov mov fs shlb adc (bad) or inc add pop std pusha js shll mov insl add icebp cmpl push jmp loopne mov add mov cmpsl mov test incl mov and mov cli lods or incb adc (bad) lahf adcb mov xchg mov or loop nop lock sarl xchg (bad) dec popa inc cmp frstor jecxz mov stc daa je mov push mov clc bound out test push das fcom mov movsl fstl cmp xor ja sub lods loopne mov js test sub ds adc add push test lcall and sbb mov ffreep xor xchg es pusha pusha cmpsb jne test nop je pextrw inc sub jmp shrl movsb sub in inc add sbb je decb negb fcoml xchg fidivr sbb in ss xchg shr repnz (bad) mov pop inc inc or (bad) mov or pop in pop jmp jge sbb jl inc push push pop jmp lds adc xchg lock std mov push not pop jl enter mov (bad) push outsb mov (bad) imul pushf adc jecxz xor dec clc test mov mov gs in test loopne mov cmp aas imull jmp mov ds rcr or mov mov xchg jbe hlt clc dec mov jmp push xor clc mov add icebp sbb rolb orl pop sub sbb imul add jnp lsl (bad) and decb insl or data16 cs push (bad) int fimull xor jbe lods idivl int3 jae adc adc nop lock shrl fs add dec xchg or int enter scas dec (bad) mov sub aaa imul sbb (bad) mov sub and into xor push leave mov aaa jecxz inc loopne jp xor jo jecxz imul mov push add mov jnp xchg dec nop or add pop notl es pop add xchg add in mov stos lock push andl arpl add (bad) cld loopne xchg (bad) cltd inc pusha sarl pop push shrb ficompl pop fldt insb rorl (bad) jo mov out push push sarb and mov nop pop sub jae jl xchg fmull pusha jle adc add xor mov dec xlat fs pop or jl addl and jne rorb outsb pop mov lock add ret xlat and push ucomiss inc mov push add sbbb scas adc cwtl add in sahf imul fisubl cmpsb cmpsl pop roll scas mov arpl pusha mov sub cs inc cld dec add inc loopne stos mov mov add or sub adc add daa fdiv mov sahf and je int3 inc inc imul int3 and pop cwtl add jno lock and mov or jl je sbb and mov sbb sbb insb movsl inc js clc and sub xchg jl scas fiaddl lock add xchg add fmuls add mov and push js mov pop sbb push adc and les mov clc aam dec jne,pn sets xor lds movsl sub dec and test xchg pop call in cs fsub pop or inc xchg call xor xor cmp add outsl or mov mov xor insb fs sub xor inc das (bad) fstps inc pop inc jmp fldenv jno mov adc sbb ljmp js sbbb dec dec mov ffree xor and add icebp pmulhuw test push (bad) ja aaa shrb xchg or sub jl in inc movsb inc lahf mov xor test or jnp mov mov int3 int push int3 cs jno add mov mov add cmpsl ret jae cwtl insb add loope outsl neg (bad) movsb and xor cmp add or mov popa (bad) in push inc sbb add rclb icebp jg ficoml sbb cmp pinsrw orb mov mov cmp mov cmc jl mov out outsb xor adc sub dec cmp jmp dec push in pop jnp bound cwtl inc jl adc add mov (bad) outsl subl or push ftst pop cwtl lods cmpl cmovl mov xchg sub in adc jmp gs mov movsl jo cmp jae and inc add movsl movsb sub jo xor dec out cmp pop call rorb xchg ja inc jno or movsb shlb int3 pop xor (bad) jbe mov lock (bad) mov popf pusha ret fisttp sub xor add sbb or pop add mov xor mov mov add inc xchg push push pusha mov cmp mov inc xchg dec inc mov movsb mov xchg fcompl fwait jae mov movsb clc jnp xor jo out sub pusha push pop stos out mov inc sbb and add (bad) mov (bad) movl adc clc and mov jp xor xor loop hlt lahf test sbb rclb mov and dec xorb xor jo add (bad) xor inc iret or imul adc pushl mov xor loope dec iret push imul push sbbl or and add data16 cmpsl push dec es inc lret pop mov ja sub daa sbb sbb xchg and je dec xor and fs add mov mov pop jg or mov pusha add mov cmp lock xchg div pop inc stos leave lock test pusha imul dec mov rolb outsl mov push fmuls mov dec inc insb adc enter enter ljmp pop shrb movsb mov sbb decb mov dec imul loope out mov js cmp je in push cmp adc jl (bad) push rolb add sub add mov mov pop les iret adc pop pushf orb xchg lods adc xlat fisttpll pop push xor jle pusha sbb xchg mov dec insl pop (bad) pop jmp jg push inc mov sbb imul dec dec cmp fist (bad) mov lea inc bound cmp mov mov adc push mov push push xor pushf sarb sbb lods ss dec arpl pushf js repnz pop xchg pushf subb push mov lea insl lock leave icebp mov dec repz mov adc nop fidivrl dec iret cmp test inc hlt sbb and gs xchg scas jg and js xor sbb lcall mov fdivs scas add xchg mov cwtl cmc inc pop cs adc push push xchg xor xor (bad) clc xchg and inc or pop icebp mov leave ljmp nop add inc cmp insb test pshufw cmp movsl pop and or xchg loopne and stos inc pushf pop rolb rolb or out test mul outsl sbb xchg xchg mov mov add lea ja (bad) into les jecxz mov je xor adc mov and repnz sti cmp sub popf subl push les mov imul fiaddl dec mov add es test loop add mov (bad) inc (bad) popa pop push sub mov fsubrs mov andl data16 dec call fwait cmpsb (bad) xor cmp xchg push pusha cltd dec aad scas add xchg cmp sahf pop sub mov jnp fisttpll in push mov jl add stos pop ret rolb jb mov pushf daa cmp and add jmp arpl loop cld rorb dec push icebp movsb add sbb sti mov or push fnop outsb test mov xchg push fnop arpl fucomi ficompl xor ja xor mov ljmp int3 cmc mov inc push fmuls add imul inc add fdivl mov scas mov and and (bad) arpl in ds sbb sbb push mov test outsb mov ret mov vhsubpd or (bad) mull add xchg loop inc or roll cmpsb nop and gs mov clc in push cmpsb lock in mov fsubs mov xchg shrb dec sub add mov cmp xor (bad) fwait pop insl (bad) mov sbb repnz out pop ror sbb push lds mov inc out and negb push mov loopne (bad) or sbb add in inc popa cmp clc dec add mov int lret movsb pusha cmpsb add mov push xor add sbb daa test xor in mov push out cmp mov sarl mov cmpsl popf add in mov nop in repnz jne rcr int3 rorb iretw das fwait adc cmp icebp rorb jmp leave mov and cmp idiv or sti fnstsw sbbb adc (bad) je cld es in dec lods ret mov pop mov and in shlb bound sbb into and lahf dec (bad) mov repnz push inc mov push push fisubl jge sbb imul js or xorb cmp add movsl in in cmp mov xor shlb ss push cmp add or fs call pusha idivl inc sar aaa lods jge jno pop push cmp push fidivrl cwtl arpl clc push mov cltd (bad) or call fstps sub jle insb clc sbb pop add push test add jle leave cmc sbb inc inc pop imulb xchg mov or scas sbb leave aaa nop fadds ret fs in inc and scas adc mov (bad) add pop mov adc jnp out imul sbb mov or or mov lds and xor lret cli (bad) arpl rolb and pop pushf mov loopne and xchg push stos xor popf mov or out hlt sbb mov (bad) sbb lock sbb pop fcomip out or lds aam sbb repz sbb jg aaa in and dec (bad) adc (bad) movsl cmp lods add aaa pop push aam aad dec (bad) lret add cmp stos jl cmpsl or add xor rol cmc fmull lcall push inc or push js sub stos rcr dec adc xor mov xor xlat and jns push pop add insl mov xor fiadd nop nop js je mov push jg and stos jl mov adc cltd fdiv daa push jge enter mov jmp (bad) xor jae roll xchg or xor cmpsl faddl xor push xor sub lea jge cmp inc xor (bad) imul pop dec add jbe inc fistpll in (bad) in loopne inc and pop push lods mov in dec push xor cmp (bad) add sub daa sar add movsb xchg sub std rorl or movsl cld adc and or ds xchg mov faddp add scas je les or add or icebp cmpsb dec inc test (bad) adc insb mov and leave and push and or push aaa jge sbb or mov in add cwtl (bad) xor fsubl sub xchg lds add xor cld movsb mov adc inc mov or leave mov (bad) cwtl fcompl movsb or pusha inc clc add or enter cmp insb adc lret lcall ds xchg sbb test push rcl fidivl orb mov jnp lds leave xor xchg jp mov test add outsb cmp or arpl je adc into repnz (bad) pushf ds push andb add ds jbe pop mov js rorb inc or xchg (bad) and bound sbb cmpl mov rdtsc lock cmp sbb popa and sbb xor inc scas insb iret add subb je cmp (bad) lock ja push mov push mov mov mov in lock mov ret add pushf insb or (bad) lds xor std dec adc push and xchg and xchg mov jp add or jbe ret lock pop loopne sbbb xchg inc xor pop push push add push outsl jnp add testb pop dec nop sub pop jne arpl clc or aad cmp into add xchg or push cmp pop out lods lret add int mov mov pop ljmp int3 in aas pop inc cmp mov xchg fldl adc and pushf les movsl and andb sbb xchg call loopne adc popa nop adc je mov push and andl or xchg (bad) push loopne pusha les adc rolb in xchg dec pop push loopne cli adc (bad) pop movsl stos pop cli inc pushf add inc cmp leave sbb ss nop inc loopne xchg pop fisttp insb clc inc and insb cltd mov xchg sbb shl fidiv mov mov das lods push (bad) (bad) mov es jbe push sbb mov push mov or xor add cli aam out fidivr xor adc imul clc std mov cwtl adc xor xor jmp sub add or add sbb mov adc popf icebp xchg rorl push or jecxz in cmp pop or add push and movsl loopne andl pusha fmuls cmp adc xchg add or xchg lods push (bad) xor (bad) or sbb test xor mov aaa ret or je dec outsb mov dec stos mov and or mov dec (bad) ffreep sub loope dec (bad) xor js pop sbb sbb loopne and outsb fcomps xor inc pop imul cmp punpckhbw loopne and aas pop adc push mov sub test inc inc and sub ret mov lcall or (bad) sub jo cmpsl cmp xchg adc mov mov loopne xor and add pop xchg pusha push shrb insl dec adc icebp and test mov or xchg adc lret dec mov pushw test fcom or outsl xor jb and js cmp rorb cli call xor int3 xor pusha fisubrl dec into orb mov add cs sbb mov (bad) je dec (bad) je mov push push inc add cltd shrb cs lret cmp dec js lock cmpsb cmp or dec xor gs lret nop mov loopne cmovl fstps jge mov movsb dec call test adc sbb data16 ret rolb mov and inc fmuls fisub insb add cmp mov js stos or dec push sbb rcrl xchg sub inc scas mov pop enter mov ljmp mov inc fdivrs iret inc adc mov mov subb sbb add lods (bad) mov push add add mov mov inc xor lock inc inc push xor add js jecxz and pushf ljmp add or test jo xchg clc push pop jne enter jl adc clc js (bad) mov cmc (bad) int3 adc mov fcoms add sub outsl insb add mov adc scas clc pop add jecxz arpl dec push xor sbb les daa jae add subl push lea push outsb icebp pop sub test pop (bad) lods mov inc fdivs pop mov adc pop cmp cmp leave shlb shrb xor xchg jb faddp es daa daa and mov cld aaa jecxz nop subb push mov es jne add inc fisttp xchg jne bound test lock push icebp mov repnz xor cmpsb loop daa sbb mov insb and bound adc adcb pop pop lahf inc cwtl sub pop sbb add fidivl push inc arpl sub ret sub jnp or mov and and xchg mov call sub ret xor inc jp (bad) hlt or jns pop dec fcompl sub shrl rorb xchg xor fs sbb scas cmp mov and xchg inc add and shlb pop int3 xorb mov add into fidiv push cltd (bad) cwtl call ret popa sbb or adc inc pusha negl mov xchg cs sbb xor dec loopne add cwtl in mov ret pop pop xchg movsb adc hlt cmp mov jp data16 (bad) pop rclb flds outsb sahf lods adc sub int pop (bad) fdivrs dec or xchg or xor and xchg xchg lahf add aam (bad) inc in add xchg fldcw push pusha xor leave popa push inc insb dec dec out lods dec adc pop mov dec xor inc dec dec push aas lock pusha enter add sub scas add popf mov rcrl cli cmc or stc ret les (bad) call cmpsb pusha ret add push xchg cmpsl xchg movsb cmpsb sub loopne cmp out add or aad frstor push cld sbb cmpsl in nop add stos sub (bad) into jbe inc xchg bnd mov dec and pop adc cmc add (bad) add xor mov inc js inc pop mov int3 imul aam mov or add loopne pusha lret jns dec clc cmp pop dec sete hlt je pusha lea js mov cmpsl (bad) inc aam pop mov sbb and dec dec xchg cs adc pop fisubr dec pop mov or dec clc (bad) fist or std aam pop in insb clc mov inc lret punpckhdq js test ljmp cltd and jmp add test and inc push cmc pop leave sti and dec pop jo mov (bad) into test or cmpsl mov and repz (bad) cmc push mov mov add xchg mov xlat mov or or addb daa xor cmp jno cmp adc pop je lcall inc pop xlat in add ss nop or sub faddl adc mov and or scas rolb jl adc add jnp push xor fdivs mov icebp or or ret add mov push mov dec and adc mov sub adc fs leave test lds mov sbb jge dec fs push loop cltd sub sbb dec mov adc and add adc jnp or int3 pop mov and stos mov dec xchg xchg sbb add (bad) cmp into inc cmp push mov hlt push js lock and sbb push ja and inc test xor shl sbb cmp add sub jbe pushf ret fs enter in repnz dec pop mov or xchg aas add pop rolb dec int3 push add cmp push movsb mov enter dec and xchg adc (bad) mov dec pop negb loope cmpsl pop jno fcoms dec fadds cltd repz adc movsl into (bad) dec dec ja cmp in jl popf add add cltd fwait adc cmp dec pusha and out insl xor in nop jae int3 shl (bad) jae adcl xor pop push sbb push jbe cmp loope inc test push lock xchg sbb mov popf in cwtl add and outsb jbe sub or dec cmp mov inc xor cmp pop popf test clc movsb add call mov pop push fldcw push mov pop mov sbb mov inc pushf adcl test sub jns (bad) mov cld add mov enter and and jg sub push and adc sbb push add and cmpb (bad) arpl ja add enter xchg repz sbb fcoml add js inc xor mov adc insb push lock sub xchg in std adc movsb jge add dec add fmuls xchg (bad) or mov adc add cld pop push lods add outsl jno fdiv inc xor jne jnp add movsb rcll lea das add add imul adc add and push sarb push movsb mov push leave pusha jl scas add addl mov mov mov and sbbb xor add stos hlt aaa adc add bound int sub add or mov arpl loopne (bad) xor push das mov test lret (bad) jecxz ss lock into repz push mov arpl popa aam add dec sbb inc mov mov jl jmp imul scas or sub das mov loopne push add add xchg loopne mov popf mov test int3 add and mov ret pop lret push fcmovnu jp inc (bad) out mov and in orb sub pmuludq in xlat mov inc add cmp inc je inc jp (bad) sub xchg adc ljmp pop andb xor sbbl pusha lcall dec loope cmp pop sti cltd and sub lret clc sub test dec pop push jb aad jnp inc lock (bad) sbb mov mov loopne mov bound lods ret and mov repnz and add add fldt repz sub add test adc cmc sub cmpl mov jmp jmp add cmpl nop cmp jae dec nop call inc fistl imul jp adc inc fdivr sbb les xor mov test sbb add mov ror je adc and cmpsb adcl xor jo stos les add repnz roll in adc push sbb pop pop fstps mov cmp xor popa jno ficompl cmp ljmp loopne cmp jb add bnd sub push addb inc xchg out orl mov jo test pop xchg mov lds call pushf subl inc xor add fldl ja sbb movsb add sbb (bad) add adc scas sysenter addr16 es jns mov mov xchg (bad) jmp pop mov adc inc int inc pushf fwait sub add mov ffree jp push pushf push sub mov sub ljmp adc or jae and jne js rcrb popf or scas xchg push bound inc enter xor sbb push hlt or or int mov mov insb cmpsb add dec cmp xlat pushf test mov adc mov jp adc mov or sub (bad) mov movsb inc fsubr subl dec xor loope sub pusha push sub aam adc add or jmp and int3 dec popf popl mov test inc adc push sbb cmc mov in roll ja jbe out std out xor add mov outsl jne or fs xor clc and lock mov fnstcw fdivr andl je jbe push out jne mov (bad) repz decl cmc jb inc add stc loop bound sbb sbb popl loopne enter adc fxch jmp or pop xlat dec ds adc inc jae and popf mov (bad) mov jmp and out test leave xchg xor pop cmp xchg lods arpl xlat loopne enter subl in fdivl xchg adcl out jp xor fmull pusha mov and xor cld xor xchg ljmp xchg or add xchg mov iret loope invd in (bad) jb rolb dec xor lahf mov pop sub (bad) or call scas mov in inc cmpsb sub and les add in sub xorl fidivrl les imul mov add fwait xorb mov pop push or add inc test je iret mov jecxz roll insb loope int popl and adc cwtl mov (bad) mov inc mov dec cli test jb mov nop dec jp mov jp in and or jl in lock jae sti sub fidivl (bad) sub fwait pop std pusha and inc call fs xchg dec or outsl mov js popa cwtl or aam push sub std push test test sub out push popa xchg repnz fsubs cli pushf nop test lret stc add rolb or loopne add pop (bad) sub fbstp cmp mov or mov and adc (bad) sbb or cld adc cs or and out mov pop popf aam test xchg mov stc (bad) jmp jne pop insb sbb sbbl pop int es cmpb inc das test fs and xchg inc xor lret fcmovnb mov rolb test mov enter sbb cmp loopne push add push in add push add ss push or je push imul dec and stos and mov add dec mov and cld adc mov dec pushf adc cwtl inc call aaa pop je jo clc test hlt xchg loopne adc nop enter imul fnstenv jmp clc mov cld rcr movl mov add sarl jno adc loop rorb push (bad) sub adc loope or inc sbb xor jle out je int3 sub cltd xor fdivrl clc ss push cmp lock hlt mov test dec mov jmp inc or adc push and and sub mulb rcr adc mov dec call movsl mov push (bad) ss std pavgw (bad) pop mov or imul pop adc jne add popf adc aaa (bad) pop hlt sarb test jbe addr16 jle bound inc jecxz sbb test pop inc out divl mov or lods jge sbb inc cmc es xor xchg std sahf mov jle pop pop inc lret scas and loopne in sbb loopne sbb popf lods jo repz mov xor test std jl or out cwtl adc mov push mov pusha loopne shrl enter lds pop fldl rorb nop dec test sub movsb dec push mov call lret cmpsl xorb xchg sbb dec jecxz and cmp sbb sbb push adc adc fidivr leave pop stos or jo mov xor xchg and add push arpl and dec out mov repz push ja jbe xchg mov pop cmpsl neg dec clc orl je adc pop shl and xor mov dec push and inc enter loopne mov sbb imul cmpsl adc or inc push movb repz enter cld dec and dec les in pop mov jno mov sub (bad) cwtl and idivb arpl mov sub and shrb enter les pop mov loop pop adc gs and dec popf sub int3 push out cld sub shl loopne clc fisubl mov movsb test lock add adc jae dec add popf jecxz xor ljmp and aad out and add xchg ss sub inc ret or (bad) (bad) out push in cmp mov jno pushf hlt lret fadds roll sbb jle pusha xor add add inc inc pop (bad) xchg sbb inc mov lock daa js aad ds fdivl ficom push add sti pushf or ds js push fwait int sub sub add cmp push fchs stos arpl inc mov (bad) cld sub mov loop in notl and in xlat mov adc cmp push xor push mov andb adc pusha cld add sub mov mov popa adc test fcomps mov hlt mov jle adc cmp int and cwtl (bad) push xor inc jae inc das adc jl fmuls sti xchg push mov (bad) or inc dec add subb adc hlt in lret fstpt imul push out test add andl add sbb dec icebp int3 adc add mov sub pop add sbb add nop add out loopne outsb mov push lds fwait mov push icebp add add imul in loopne adcb test jg adc (bad) aam jl mov fdivl mov mov std (bad) push cwtl mov push xor mulb xchg clc sub ret jl mov js add pop hlt inc pushf addl add (bad) or push adc stos aad repz sbb add popf jle add outsl rolb jp icebp test stos js inc cmpsl call out rol ss cmpsb push inc xor jns pop jg adc orb ja add sbb stc xor add cmpsl mov subl into jg xchg pop test sbb cmc xchg pop jne jno sahf sbb testl cmc inc rolb add (bad) jg ljmp sbb or andb (bad) cmc xchg in std mov lock lock push sbb insb xchg push movsb cmp dec adcb (bad) or daa cli ja stos mov push or pop push test outsl adc sub aas sbb sbb test mov sbbl sbb add adc dec lret and inc daa fadds addr16 lret push movsl add jg cmp jne mov push cmp dec inc push push inc cmc xlat xchg add xor loop xchg sub dec cmpsl in subl daa dec ror xor push test jge int3 fdivrs adc scas sub mov add gs jae inc cmp repnz push int sbb inc pop ja jg test rcrb pop test and loopne push adc cmc mov pop sbb in sbb clc inc in sbb es cltd sbb cmp adc and xchg dec add or and cltd jno add mov adcl adc js and nop or add mov jne xchg mov or add jbe nop cs jle outsl movsl xor and and lret add mov in xor sub add or inc add mov jb xchg cmpb pop add add pop and sub rcl inc loop test pop cmc add sub and inc xchg add xor jo or mov mov sbb add je jo jnp call movsb (bad) cmc dec leave jl xor jne inc repz adc add or dec sbb aam xor adc jo cwtl add test jnp or mov mov mov daa mov pusha or mov ret jnp loopne add sub push add jg pop cmp dec and (bad) in add add enter clc mov rcll lahf inc aam add iret lods mov jne adc mov add xchg jge ret sub add jl lcall or or mov nop lcall ret dec xchg pushf shll push push (bad) add les mov je cmc sub or lcall imul add stos lcall mov add dec orb int3 mov data16 mov xchg mov jno mov mov fimul and xchg pop outsb out mov mov mov hlt add adc mov adc cmp cltd mov das pop lods shrl mov nop adc aad enter popl mov loopne sbb or sbb inc mov shr or test and inc pop mov cmp jae push push inc push nop and (bad) sarb pop test inc mov outsb or je dec aam cmp ljmp subb dec mov shlb or fsubrs movsb xchg and ja and or or stos mov inc push lea lods rcll pop enter add dec mov add ljmp ret lea cs movsl sub call ss add (bad) adc dec add scas sub pop cmc mov sub pop or testl bound or and or inc leave outsl pop mov inc jmp mov loope inc adc and mov rolb inc mov add push mov icebp mov movsb sbb imul ret or out ret mov xor pop push fmuls lret mov sbb ficoml xor add aad stos pop cmp jg inc adc stos sub cmpsl aam js inc mov add xchg inc pushf adc sbb or into mov mov sub rolb addr16 cld inc imulb sbb lock out add sbb or cmp nop mov mov insl push lds nop xchg scas sub mov jo int movsl push xchg lods mov xchg ret cltd andb fldl ds test adc xchg inc xchg sbb andl add mov into cltd ljmp (bad) and push imul pop insl xchg movsl add pop dec cs ss xorl mov dec inc pushf cwtl jp add cmpsl repz add outsl rol stos add movsl dec pop adc data16 enter or lea jae add cmp (bad) lret scas cmpsl lods or sbb mov mov test mov or mov push inc add test mov roll fxch sbb mov sti cmp and fbld xor das sub fdivl stos jmp lods movsl add ljmp dec push pop jbe fs movsb jl int3 and movsl cmp mov lods adc outsl lock mov mov (bad) or dec mov or movsl test (bad) icebp pop jns (bad) iret cmp int3 in loope hlt pop sub ljmp inc test adc push addr16 inc sahf adc fstps add stc push stos cmp mov push ror pusha inc clc adc add aas mov je xchg btr cmp test decb cwtl cmpsl xchg inc leave adc jns mov cltd pop mov loopne cwtl testl mov add paddb test bound movsl add dec add add add pop add out (bad) xor push imul cmpsb clc div in add scas inc and inc add adc in mov and and adc adc xorb cwtl or adc mov mov out xchg sbb dec mov and cld movsl or ljmp sbb pop adc add test scas xorl (bad) pop sbb enter dec jae mov mov (bad) fistpll dec jmp add scas (bad) (bad) dec adc cmp icebp push and sbb pop push push mov mov movsb jecxz inc cwtl dec cwtl sbb shlb mov push mov data16 jbe add fsubrl (bad) or lock (bad) xor and test add mov icebp cmp ret jbe fmul mov das jp mov mov cmpsb rolb scas je jle or and pushf sbb and inc adc or and outsl fmul pusha add cmp mov sub clc add cld lahf xchg out dec lret lea xchg or mov pop cmp add mov aam xchg popf (bad) xor pop dec int fmuls adcb insb jnp,pt jns cmc adc mov adc add in aaa (bad) or int mov xor pop popf dec jo xor shr push test inc clc iret je mov mov ret push movsb fcoms test push mov mov adc sbb push (bad) icebp in or xchg jnp sub sahf decb xor fcmovne sti inc loopne xchg cld loopne jp add test add xor outsl (bad) pop loopne dec scas cld jae out test mov add arpl insb or int3 inc sahf mov cmp and aad cmp xlat movsl adc mov ljmp mov ss mov and lock (bad) mov insb dec jbe aam les sub cmpl mov inc jbe or xor dec int3 pop lds add mov insb loop push or adc bound pusha push cld push xor lcall push int cmp pop es call mov mov inc mov mulb cmpsl mov and aaa fcoms cmpsl push or or lock int3 jns mov aad add (bad) stc cmpsl imul add mov sbb add pop out cld or mov daa and xor movsb pop push jge in mov leave test int inc add inc xchg adc and gs or sbb js out outsl add leave stos push cmp dec aaa mov and (bad) jl dec jle xsavec pop or xor andl lret test in outsl loopne mov ret iret movsl les inc mov cmpsl xor bound and (bad) enter and nop sub pushl mov add push loope inc inc lods lock push enter fisubl and ss je out call pusha aaa jge add push ja mov mov outsb add lahf xor cmp (bad) sub xor mov xor mov repz sub pop loop test lds (bad) jo mov add sub push (bad) mov fist lret faddl pusha sbb loopne aad push rcll cmp sbb mov or and sbb hlt cmp jne jp jecxz add push mov cmp fistpl push sbb sub dec ja enter mov push jne pop dec insw or cmp fcmove pop jecxz lock clc sbb repnz mov cmpl iret loopne cmp xor les leave pop fidivrl rcl fwait adc subb xchg sub mov lods or jo jp (bad) xor cmpsl push mov pop inc push int3 popl repnz (bad) mov popa cmp or mov mov push shrb leave addr16 cmp mov sbb dec les add mov dec add es jle xorb inc push mov and add pop mov fild add or pop out cmp pop sti sbb pusha mov fild ja imul repz scas std pop insb outsl inc pop jmp dec and in push or sub pop and mov push add cwtl notl gs imul decb or in aaa sbb push leave jle add repnz sub idivl mov xor mov popa mov and and iret sbb inc cmp mov dec notl setbe aaa sbb dec sti add scas repnz add insb daa clc incl cmpsb add repnz add jecxz inc or add xchg scas subl pusha push jb cld mov xlat sbb dec cli jns pop mov push sbb bound add bnd xor mov sub popa lahf adcb jge test mov outsl in pop mov push invd icebp push xchg cwtl push add or or mov gs add outsl aas js xchg repnz mov dec (bad) std mov push repz lret mov stc or sbb xchg rclb mov aaa xor jo test or xchg addb movntq cwtl mov fwait icebp sub xor popa xchg sbb arpl push mov dec jmp andl (bad) inc maskmovq testl add insb inc fdivl and xor inc mov icebp loope mov pusha test xor scas js cmp add dec cmp pop dec or jecxz js inc lock cmpsl sub or push dec shll loopne ss js loope cwtl adc and test sub push xor mov insb in arpl or xchg push call icebp fs pop call push loopne push inc ljmp pusha add and sub pop push mov xchg or aaa xorl mov and ja scas lock push aam aas pop call in push dec in dec mov push xchg sbb inc or cmpsb and xor push js sbb adc and out call into in sbb and and js cltd scas in in push inc cltd xchg add xchg xchg mov enter or subb repz dec sbb ljmp insl in dec or fistp sub cwtl add in inc xor fistpll dec mov cwtl outsl mov inc scas or in xchg es pop ja add fldenv dec movsl loope sbbb nop and outsl popa inc cmp call xchg jne fsts out add stos rcl add ret repnz push lcall test shll loopne mov repnz ja and lea fs sbb (bad) aaa mov inc out add outsb outsl ficompl sub dec or cmpsb js fsts add pusha aad inc cli cmp cld lock imul pop add pop ljmp push je sub pop mov add les and dec adc mov adc mov pop lcall add adc mov xchg mov xchg mov testb enter aaa xor sub xchg (bad) mov mov sub xlat mov insb or imul in les sbb movsb js push movsb or inc and pop rorl imul dec repz fistpll sub imulb xchg xor pop cwtl mov push jmp pop sbb shr cmp aaa gs and mov jmp and push call ss mov or mov fdivrl mov pop and ljmp jo int3 adcb xor es and and pop pop xchg jo lret call int3 and push les ljmp add lea pop mov mov gs xchg movsb rol pusha ja xchg cmp cwtl jno mov jne adc inc adc or mov sub pusha push enter xor in adc xor rolb and rorb adc arpl sub add add xchg mov out fucom push es push inc or rcll dec cmp mov add or pop jo inc jns add ffreep push lock xchg loopne pop sarb cwtl call aaa in outsb orb notl movsb pop inc insl mov fisttp jae cmp push jns cmp faddl rcr cld pop dec pop sbb orl rolb xor cwtl bsr jl rorb arpl add cmpsb fprem mov jno notl sbb jno push dec ja add xrelease xor adc imul rclb dec lcall andl add dec (bad) xchg mov aaa xchg pusha (bad) test pop dec adc dec pusha outsb push fistp enter repnz ss xor lea (bad) shll int3 pushf lret mov je dec enter les xor or mov shll cmp push jl cmp es or test inc mov lods sub rolb cli mov scas sbb test dec loopne dec push add or jl pop add jnp repz xchg mov inc (bad) rclb add fwait xchg (bad) testl inc pusha (bad) jb jecxz scas aas and lock cltd xlat out or sub fisub scas or mov pop jle pop subl addb push ret or sbbl pop mov scas xor add push pop add scas (bad) lret jl mov sbb mov adc pop scas je inc js aam or add stc lea movsb mov cwtl ja add or outsl push adc mov je popa fcoms (bad) into mov out (bad) mov cs add cwtl add dec push mov inc mov out xor and rcrl or icebp mov mov jg mov xchg mov int3 push and xchg mov xor xor flds mov mov adcb jle or xlat mov and xchg movsl out add mov jle cltd mov mov dec mov rcrl adc nop orl cld or xlat lret fcomp xor xor push stc add ja,pn push pop mov movsb mov (bad) icebp push aam scas push push call sub add subb mov fldl je push shrb xchg fnstenv push add andb iret jp jl leave js test cwtl in xor sub jmp adc cmc int andb xchg mov je inc iret sbbb push lea (bad) add imul popa jae cli dec outsl mov adc cmp cwtl add scas (bad) je pop add scas mov pusha xor sub xchg leave adc xchg xchg add fcom sbb iret lcall add push cmc mov mov movsl pusha cwtl and sub pusha and or push ret call in fdivrs (bad) xchg cmp iret mov mov pop mov mov pop shll vxorps add je int nop xchg adc jb imulb gs jnp lock add mov dec add xchg andb movsl mov pusha cmpb cmp loopne mov int3 inc int cmp push dec pop and cwtl mov add push sarb fbld insb or pop rcrb not rclb xchg scas fbld jns add jmp test add or int fldl (bad) cltd cmp pand loope add aad or (bad) xchg add jno cmp lds add popf jo or add inc push mov push mov fsubrs and add lret faddp dec ret adc nop sbb or mov (bad) and cltd loopne ja iret popa add ret add cmp xchg pushf pop pop enter inc je xor and test mov mov jo subb mov dec push aad lret shrl int add test mov daa pop (bad) js mov cwtl cli or scas (bad) and sub pop inc sbb aas arpl jle pop inc jecxz push rdtsc (bad) into mov adc pop lcall je aam mov pop and pop test mov xchg push iret int repz scas enter dec or jae rcll add daa sarl sub aad jns or in xor lcall adc iret mov pop std rorl jecxz sbb jns and add dec std orl cmp stos or daa xor test xlat add xor (bad) jl inc in es inc dec hlt rclb cmp mov pop xchg mov dec and push cwtl pop adc xor movsb popa xor sub push push mov ror add dec outsl cwtl xor pop adc add pop mulb cwtl add jnp lcall loopne cmpb call push and (bad) int fmull inc in lea pop lock pusha push push inc sbb mov pushf je lret sub jmp std push (bad) (bad) data16 roll or xchg outsb push xor sub add xor inc scas jbe jne pop les add es imul sahf or push add je cltd mov inc or int cmp sub add sub push int loop xchg mov add xchg (bad) mov je leave sarl or mov call sbb stc aam mov add iret jns xor rep add jmp loopne fidiv cmp ret ss xor divb add bound pop xor fldcw fnstsw mov ljmp push out sar push aad lahf rcll adc stos add dec jnp sbb sbb push outsl or jl mov or xchg inc adc mov sbb aas lock fisttpl xor shl test push rorl orb fidiv or sahf sub addr16 cld push fildl lret add sub pusha sarb les mov add pop test into add (bad) out sbb cli lods lock xor fistl (bad) xchg cwtl mov movb pusha cmp adc mov test shrb push mov in fadds mov cmp push insl or mov lods mov mov loope inc fstl xchg sub add test outsl fsts mov or xor frstor into in xor aam xorl xor ret enter xlat xor jge mov add sbb loopne adc cld nop dec add pop dec clc push lea in mulb add mov mov sub cmpl cmp push test cmp inc movsb mov add add mov roll xor sub jns mov and sub inc cltd sub shrb lods sbb into pop push subb add js rcrb gs jg push out sub push nop mov cld popa ljmp mov inc btc push inc jnp or rcrl and cwtl xor dec nop push jecxz fxch dec push shrb shlb jb ljmp cld inc push pop lcall cmp movsb push xchg inc loopne jl jmp mov les add and inc sbb push imul cmp mov das dec xor sbb inc sub stos popf sbb sub leave orl cmp and (bad) add test fldt stos jmp and push sbb jmp adcb and nop test bound adc (bad) notb push or xor mov fsts push fcoms add mov cmpsb loop cmc push xchg sub mov push subl push adc pushf imul jmp lds push pop or outsb (bad) test xor test and adc jp add or push (bad) leave movsb and orb enter outsl sti mov sbb xchg rclb or and and push fwait rcl (bad) mov push xor or into loope and xor push mov aas xor jl push and inc add add js or aad xchg pop sahf pop inc orb rolb xchg xor outsl pop fs cmp adcb sti lcall dec add dec mov dec mov adc pop dec jmp mov lock test sub lcall add aad loopne rolb ficoml ds pusha mov sahf es orl or pushf sub push fidivr jo dec mov push arpl ror add jo ret movsb or sbb pusha mov aam adc js hlt add cld rorb pop push sub fcomps adc rolb or pop sub loopne (bad) mov (bad) mov sbb push (bad) jns push cmp shlb es sub sti xchg jo sub mov das adc sub add pop in into repnz cmpsl or xor les adcl xor dec mov jnp pop add xchg sbb and lcall xchg cld xor xor mov shr and repnz sbb or push add rcrb xor stos mov mov add push iret lret in pop sub push adc adc xor mov fistl (bad) loopne push sub sbb push lahf or xchg mov in rclb into mov outsl or cmpsb cltd stc (bad) push in fs dec ljmp xchg pop out rolb (bad) int push mov mov data16 insl xchg lcall xor lods lds jmp fwait imul ja cli mov add pop or nop push sbb cmovo sub sub shlb dec push ss push dec test or mov xor add sarl add sbb xchg movsb inc movsl loope (bad) adc js mov rol pop in jns loop inc inc jae subb mov scas mov addb jecxz dec jmp sahf cmp xor pop clc and or je fisubrl adc sub insb push xor adc rolb xchg xor dec sbb add addb aaa cwtl nop add mov leave in sub xor sti in aaa into xchg aam inc or jo push xchg pusha add mov and jnp xchg inc mov sbb jno lock jle cmp add repnz popa les stos pop in loopne test add add and sbbl lds pusha inc add jo test pop add mov int3 aam nop clc xor pop cwtl pop mov and cmc enter es dec idivb jecxz mov xchg jb add sub lods jge lret mov adc mov jno sub xchg nop cmp rcrl lret loop pushf jae imul or lcall jg pusha test jle loopne test add dec insl sbb fsubrl xor add jnp ja popa xchg (bad) and pop dec (bad) push stos mov lock jne pop add cli jl ljmp les clc sti mov mov cmp add add push xor aam (bad) hlt cmp sub cwtl pushf dec ja incl outsb je inc cwtl xor (bad) pusha add addr16 insb clc xor push inc xlat rolb cli add loopne inc adc jae jl fldcw push (bad) lea mov (bad) push subl stos std push in add xchg xor es mov mov imul enter loopne (bad) adc jecxz pop pop int add sub test and add pop cs mov sti aaa xor ret ret mov mov jecxz lds xchg std test xor push dec xor push pop or push hlt xor sti movsb fistpl cmpsl scas sbb stos push inc pushf arpl repnz stos mov sub add test jno adc nop and fmull xlat push lock jl div pop ficompl daa add push xchg cmp jge mov pop add mov sahf jb add sub or fidivrl cltd jo push inc push jo or jl mov dec mov add imul insb (bad) add dec out jl push add mov sub pop popa or xor adc dec push into push jo cmpsl nop rol ds pop add popf incl lods lock mov mov xchg rclb and mov add (bad) stos daa es imul pop dec shll int pop nop (bad) xor rcl addl xchg rolb mov orl cmp call fdivrl test incl sbb fdiv or or rorl mov lcall stc cmpsb add cwtl dec lret into sbb fisubrl pusha and xchg repz sub push pop xor fisubrl pop xor jae adc add mov xchg xlat int lods xor push out sub dec nop mov rorb js or les add sub cmp jo pop fstps mov xor xor and push call push mov sub push std xor xchg mov xlat sbb adc push lods xor jmp fisttpl lret or fadd push add (bad) rcrb shrb popa scas push fmull (bad) xor mov mov mov mov enter jbe or incl add adcl (bad) jne (bad) jb js imul sub pop bound xor xchg daa add xor in sub adc add pusha add xchg mov mov xchg or fs cmpsb add and push movsb lock xor test in sub adc cwtl lret mov or push add xor pop sub loope and pop out cmpsl outsb sbb sub xchg shll ja in int3 pop xor pop (bad) pop sub add inc (bad) enter adc dec add xchg (bad) cltd add stos rcrl into adc popf insb push add out mov sti mov mov mov xor ficoml dec mov cmp lods or xchg and imul imul cmpsl pop aas add sbb into pop jbe loopne pop add inc mov lods push add inc and sub clc lahf add test inc mov out ret movsb sbb (bad) stos add mov lret xchg jae add mov je push sets push push mov jmp adc add or cmp or dec adc add xlat sbb mov leave sub jo sub loopne mov sti or nop mov and ljmp lahf mov (bad) adc cmp cmp jno xor out cmpsb test sub lcall mov or jg xor jo xchg aaa icebp (bad) mov jge add sbb add mov xchg cmp mov cmpsb mov and jbe jge xchg adc or (bad) cmp arpl cmp and lea sub ficoml test xchg mov adc jno adc cmc lea push mov cs mov lea enter cmp push (bad) mov mov adc sahf and ret add xchg sbb popf mov adc nop push sbb inc add int mov add es lock cmp xor and add xchg mov fcoms pop lcall push adc fnsave dec pop jns cwtl and sub or daa inc dec mov orb jl cmp fdiv sarb cmpl push inc mov cmp fwait push xor and push fs cmpsb add js cmp jb cmp xchg repz or cmp push jl fdecstp push aaa ja (bad) (bad) mov add inc dec jb or add jb push cwtl add jae push adc aaa dec or jno mov es lods cmp and xor (bad) lret js jbe jb imul push movsb test pop and divl es mov push sti lock lsl mov jne dec mov jnp mov andb mov inc cmpsl rcrb add dec js fsubs in addr16 inc int3 push pusha subl faddl xchg cmp cld mov je mov jp ds inc jo (bad) push aam rclb gs out aam enter pop popf adc dec rorb xchg adc int3 push lea pop xor cmp sarb movsb add jecxz xchg push dec jle sbb xchg push roll mov dec push pop and mov cmp add es or pusha cmpsl test add aaa jmp jae (bad) mov and xor test out cmp call mov in push or dec sub cltd push out cmp mov adc mov push mov push adc mov or xchg cmpsb fwait and bound test cmp xchg fisubl jp hlt lods cmp jl idivb push rcll xchg and push lcall pushf inc aam and mov pushf popa cmpsb push into cmp sbb cmp xor es xchg adc daa jb xor dec sbb mov push pop lret movsb movsl je or rorl loop hlt in lods push dec jl arpl push sub stc inc lcall cmp inc pop mov sub inc xchg addb mov repnz xchg sbb and in mov pmulhw xchg jl push (bad) adc sbb addb or dec push cmp mov cmovno sbb jb sub or xchg dec sub loopne (bad) ds mov mov add pop movsl mov addr16 scas mov mov pusha mov dec push rorl inc xchg mov inc push mov dec jge xor aam add and lock dec daa loopne add dec andb mov sbb cmp (bad) es or push cmpsb add enter mov cmpsl xor xor xor adc mov es lea shll adc jo notb js call push dec lods mov dec dec ljmp add mov cmpsb xchg clc and idivb (bad) loopne mov and movsl sub rorl shr xchg add mov and xor pop (bad) fiadd adc push fdivrl sub xchg lock cmp js dec lcall test ret movsb xchg push adc cwtl sti sub add xlat mov jo cld and inc int3 or add pop (bad) xor lds push cltd inc xchg pop sbb pop push sub int xchg lods andb adc jmp xor jnp pcmpeqb cli and cmp cwtl fstl jge pop add push pop jno shrb add mov aaa jae jmp dec mov pop dec cmp out sti pop add scas adc sub inc test ds rorb sbb ret rcrl test jne cs mov pop dec mov nop xchg mov lock rolb dec mov jg jae cmp xchg add dec xor add sub jae mov push fiadd add push sbb add ds cmp lcall dec int3 nop lods je add mov jmp and xor pushl add pop js (bad) jae dec sbb inc roll push jae adc daa or push lods jo mov ja inc pop cmpsl aam (bad) in xor test inc add mov dec push and add lock adc dec add lock push sbb cmp dec lods push and sub add xchg and into xor in sub push add sbb xor mov clc (bad) mov jb addr16 mov in mov and orb outsl inc mov insb adc dec (bad) add test adc or lea sbb push mov xchg mov adc pushf (bad) push dec fs add mov call call les xor nop add and adc test leave pop xorl nop rolb dec adc sti cmp in adc push test mov daa iret lcall xor lock aam rclb in sub pop rcrb dec add pop jns rcr test cmc mov lcall adc adcb icebp fs xor push jo cmpsl xor mov jae sbb add dec fsts cmp rolb inc sbb xor (bad) or (bad) movsb hlt movsb and mov (bad) stc and and or inc sub mov adc es adc pushf push jae or sub add out and dec cs inc jecxz ret movb sbb or in hlt and icebp cld test fwait loopne (bad) mov adc push cld fdivrs jae mov cmpl add adc sub mov lds or stos adc add inc nop and sbb outsb imul movl dec push fdiv adc mov icebp inc push imul es out scas sbb ficomp mov push adc testl push scas lods mov xor push and push (bad) cltd xchg or insb pop adc or mov mov or dec push andl sub add into or push (bad) pop sbb icebp mov add pushf mov add pusha and add push cltd sub (bad) lods xchg dec fsubrl pop or mov and and loope xchg and cld jl,pt inc inc not movsb xor inc daa push enter add dec dec xor and mov and push push inc lods xor (bad) cwtl xor es mov jge mov arpl enter iret xor cmp dec cs fadds jb fs adc lock push xchg int mov push jbe or inc faddl fwait push loopne test sub sbbb fsubs dec (bad) dec mov xor adc jbe nop sub cld lea mov dec fisttpl xchg pop jb clc sub ja daa loopne int3 imul add cltd das data16 stc push dec add mov cmpsl andb pop sti cmp add mov pop fs int lret test es add dec (bad) cmp orb clc ljmp fsubr push sbb inc pop out or cmp mov pusha repz fcoml add rolb xchg xor js add adc mov fmull movsb daa add call add lds and sbb in add mov add int xor add movsl call (bad) sarb push xchg dec mov cli mov (bad) pushf hlt mov add xor push aaa notb adc jno stc add outsb lods add mov sbb jo cmp js fimull cs cmp sahf (bad) xchg dec adc pop out sub movsl sbb lret (bad) cli cld int xorl cltd (bad) mov pop rol pop inc or hlt test test adc xorb mov mov je into mov and sbb rep cs std inc add mov push lock and dec or cmc (bad) mov push add mov mov cwtl mov pop lahf or dec xchg scas fs pop mov pop punpckldq int3 in mov xor cmp mov addb dec js push adc push pushf push addr16 test ljmp cmp jp adc sub sbb pop hlt loop or inc adc add or mov jp and xor mov js arpl xchg jo lock stos sub clc push mov notb ja iret ret and xchg adc inc insl inc cmpb sub cmc insb orb mov cld add mov retw push mov icebp roll loopne aaa mov rolb add repnz ss jns push add mov mov mov stc je adc dec sbb scas adc add or setae fmuls leave add jge pusha sub addb mov sbb adc es jl adc int3 adc les adc mov call jl add mov xorb loopne out and (bad) pop dec or popf mov jo rcrl punpckldq jge stc jo add cmc out push cmp pop cmp inc int3 ja add sbb fwait and jb andb lea sahf (bad) adc adc cmp je push lods xor aad rclb call sub jl adc cwtl pop nop enter outsl push int3 sahf les jl sbb pop or cmp xchg inc dec mov test fs pop int3 add sgdtl hlt movsl ss jnp xchg adc outsl push push and mov rol popf and jae sub add dec mov inc adc pop jb call add push (bad) dec mov and aas js fisub adc mov push inc cld xchg push js cmp xchg mov mov cmpsl and js pop pop pusha test adc sbb stos fs sbb mov xor cmpb (bad) add mov cmp dec mov sub orb std inc pusha (bad) jo jnp xor mov lahf sti insb sar dec test orl jp repnz add repnz xchg in inc cld shl test push or stos int3 inc add pop push and adc sahf in inc leave (bad) shrb or lods daa push or into xchg xor xorb cmpsb add push addb in push adc loope lods push and add push pusha cld jno in add lds mov push inc insb jg,pn dec dec jo cmp cmp enter xchg scas addb sub ds (bad) rcr lret mov lahf adc data16 loopne jne (bad) xor push add sti xchg jl loopne xor sbb dec in pop add ret add cltd sub mov fldl mov cmp dec adc imul sbb (bad) ficompl lret and adc sub push ljmp addb xor insl test adcb aad loopne cmp adc add pusha outsb jbe mov add cmpsb cwtl mov lea sub add rcrb loopne pop iret enter in and rolb pusha and adc mov jecxz jmp mov and cmp js mov pusha arpl inc faddl cmp imul or mov flds inc aaa andl or cmp or dec mov scas lods pusha mov mov add mov add ret pop jo xor inc add cmpsb aam pop lahf add fimull movsb mov in imul push inc dec and clc shl pushf sub lret or mov mov test push in cs and cmpsl and push inc nop sbb and lret push add mov or cmp mov sub test xor test add xchg cmp fadds call xchg andl mov jo xor test push enter pop les test orb fcmove clc fsubp push xor mov sbb pop out dec idivb add or mul mov call js dec cwtl push pop sbb add add bts mov jmp dec and out or js push cmpsb jnp add mov rolb push aam aad sbb mov jb cwtl add mov rclb sub xchg jo clc sub outsl add add sbb ljmp jge test clc ret data16 lods push cmp add das pop test dec out jnp add mov cwtl mov repnz cld dec pop jb xchg and (bad) cs fsubrl enter or cmp jo xor add ret xor xchg and js xorl mov xor pop xchg push mov pop or mov loopne add xchg push into (bad) adc test aam sub lea clc or xchg in arpl test xchg push or push aas adc mov and fwait xchg fsub sar aaa inc in and js and iret push test push les adc lock cwtl jge sub movsl int gs sub or sub cmp inc and mov and sbbl mov test or sub dec cmp and push or test loopne jb and out jge dec sub das rorb pop lods mov mov sub call bound adc (bad) mov and cli call js je dec cmp and movsb xchg adc hlt out aas xchg shll fs lods cwtl inc jo sub mov and pop aam adc pushf xor xor sub jp push sbb ljmp push dec jnp shlb push inc sub mov call cmpsb pop test (bad) sti xchg dec in xor adc sbb outsl dec cmp out dec or jg imul test arpl jl test adc in and add mov enter lret add xchg mov fwait push aam jns add jmp js add xchg xchg jbe or jecxz dec add aaa dec dec leave add sub notb lods loopne movsl pop repz add (bad) cli stos or pop push lea add xchg push dec fwait sub push pop rcrb dec and add add in sub lcall scas aaa call out or (bad) (bad) daa mov mov sbb push lock cmp gs pop mov mov insb and jae mov mov push inc fstl lcall lcall mov xor mov in add and scas lret test jg in cmp jno clc xchg xor xor fidivl jl push clc mov sbb ds and cld cmpsb aaa push (bad) push mov outsl (bad) push push sub jl aam fld1 dec rclb jae stos das fwait jp leave inc aas clc inc jno add jle cltd pop jmp or pushf movsb dec push sbb sbb mov ds add outsb fimul ret js and inc sbb cld dec mov jo cwtl push jmp adc movsl jne cmp mov mov out or dec ja xchg aad je les lahf push test add outsb mov add rorb push shlb add cmpsb shl int3 inc and scas jnp and aad rorl xchg movsb and sub xor pop test sub and aaa push push cmp push add jmp test dec or test mov in add push push and add pop adc ds adc pop add mov int3 push mov rorl aas lcall mov add mov inc dec push sub or mov dec and push fmuls lahf lock pushf push test sbb rorb pop lods movsb mov clc push mov ds js jns out xchg or mov push fadds inc int3 pop mov sbb lods xchg cmp sub int cmp in (bad) jl adc pop add add cmpsl push clc xor mov dec mov cmp fadds add jb imul sub sbb mov mov or and lcall nop jmp mov loopne dec lcall cli orb iret dec dec cwtl push push cld pop jge adc push es adc inc mov add xor push jb inc add add jg fmuls mov mov out push add es jbe nop rclb andl sarl aaa fwait xchg nop insb cli dec negl jb mov xor call je gs loop mov jno adc lods test cld into enter mov ja pop repnz dec jbe add test add jmp aas sub dec jb sub add push push cld (bad) arpl sub jae ds rorb add dec lahf lcall inc pop mov inc int3 mov sub cld mov inc out pop xor in dec xchg mov ror xchg adc add pop add daa add int3 push cs push cmp repz sbb insb pop aas or sbb adc xchg add xor inc cmpsl orl or call mov jmp cwtl mov dec cmpsl and xor sbb loopne mov pop aas aam or and (bad) imul call fisttp add divb es cwtl mov push push mov jo or sbb shrl dec shrb dec (bad) lods andb add inc enter pusha and or push movb jl cwtl xchg fs mov sbb scas dec pop jg mov shrl gs into lods sub mov inc inc add adc inc imul jns pop fistl inc cld ds stos and or stos or mov xor sub cmpsl gs xchg or clc cmpb and aas cli jne and xchg cmpsb mov xor je push cmpsl rol mov rcrb iret imul and inc or stc inc and scas lret les and push daa sub insb pusha add inc mov dec int adcl fidivr mov push daa (bad) dec clc sub leave cmpsb inc lods mov das jb inc lods test (bad) test and mov negl pop lcall cltd mov xchg mov lock xor mov and dec mov mov cld add pusha stos cmp sbb daa jle adc jae mov clc jo out cmp mov fimul pop pop test cmp xor pop add jno sub add xor jb stc mov or loopne outsl jge adc mov leave scas add (bad) push cmp jb mov imul adc ljmp xor add inc aas (bad) (bad) mov push icebp xor push fs idiv sbb or push aam jo and jecxz pushf push (bad) loopne push enter xor daa gs push ffree scas rcrl xchg sbb daa adc icebp lock mov cwtl lock adc jle pop mov loopne (bad) xor jno cmpsb and jb inc lcall daa add lret push fimull or mov cwtl pushf add cmp mov dec sub or lahf test push mov push push test test sub add loope jae cmpsb int adc movsl inc jl lahf add mov add xchg push lret inc adc and adc add push dec and mov inc aas divb pushf or loopne fcmovbe mov push sbb add jmp push pop addl (bad) pusha out fidivrl ret stos jp xchg add or sub cmpsb sbb cli and ret dec fs mov (bad) fcompl adc ljmp pushw xor xchg shlb cmp imul cltd xchg pop aad push mov xor and es test cmp fwait fs add es mov sub add and pop in jle fldt dec daa loopne mov dec xor stc sub sub or mov hlt adc pusha notb push cmovo pop jg dec sub scas mov leave mov call or xchg push add scas sbb ficoml adc mov pop add lret xor push mov clc sub int3 es cli sbb imul or imul inc lock mov test stos push jge jae rcl add cs xchg decb add xchg call lea add cmpsb or jne inc mov mov bound mov fldenv cmp dec pop inc add movsb cmp fimul jo daa add lods inc shrl sbb and mov je sbb mov mov mov repnz and hlt loopne mov cld jmp adc andb cmpsl sbb sbb or call fidivl inc pushf out stos inc add xchg mov add jb lret and jns scas loopne push repnz je mov pop cmpsb and mov add inc mov mov pop push pop (bad) cmpsl mov mov cmp (bad) mov and cmp test jle xchg adc cmpsl aas push and les pop (bad) xchg dec push hlt sbb mov je je mov push xchg es xchg jbe inc mov inc pop cld mov xor jne mov movsb dec sbb loope aaa movsb sub push mov push add nop or adc push pop inc jge gs imul xor idivb out mov cmp add adc stc clc outsb or sahf and or int3 dec cmp sbb test mov or leave or add dec mov and jb push nop jle xchg rcr mov test push or sbb add rolb push or sub cld test dec or js loopne outsb xor mov gs sub nop ljmp sub mulb inc mov push into js shl in jecxz pusha add add jo mov push xor inc fistl dec and xchg jb sbb mov jno mov mov arpl dec jge add xor mov fs pop pushf addb push pop (bad) leave aam js cs xor jecxz ds add add inc ret loopne cmpsl mov mov push int3 jl es aam lock add pop jbe dec icebp enter (bad) arpl adc cmp jmp cs cld jl or insb enter push in and jb inc in and jl int add mov add mov cmp pop mov add dec cmp or rcrb mov out (bad) jb outsb xchg inc lods and or cmp inc jb cmp xchg adcb daa lds (bad) jb dec stos adc inc rolb enter add bound add push push push add mov sub lret leave or aam jecxz xor inc xor mov pop decb mov jno dec dec dec add dec sub sbb les and jo mov push sub sbb mov jp fdivrs mov push or jg mov idivl dec pop or rclb xchg ret mov mov les sub adc cld mov push adc or es cmp add fnop shufps imulb kmovw and xor xchg push nopl add inc push pop lods rclb xchg dec stc aam and ret sysret fs bound sub dec inc dec (bad) popf cld add mov js and cmpsl insb dec aam mov pop mov or mov xchg sub mov icebp mov dec shl sub mov and mov outsb imul pusha nop bound aas add push out adc cs mov push jp sbb std add jbe lods (bad) mov xorb push enter pop rol ds xchg inc or dec jge push out cmp repnz lods les mov add mov and jno cmp lret xlat pusha mov sbb push fbstp jp dec add inc inc jmp add pop popf adc rorb testl stos or cmp dec push push (bad) mov jb xor push adc ds add dec jb push and mov sbb adc rorb in xor pop sbb roll xchg cs push and shlb mov das adc or jb mov inc cmp addb pushf inc inc jne mov or mov dec mov pop sarb adc js inc inc cltd rorl shrl into aaa push subl ficomp cs add fcoms subb mov mov xchg xchg inc in stc ja push (bad) jno lods js out sbb inc add pop mov sbb xor xchg mov stc (bad) ret adc add hlt rorb enter jl push cwtl add mov das clc (bad) dec mov dec dec inc clc inc xchg xchg pushf add and test sbb or xchg lret adc jnp jno pop dec sub xchg sbb rorb add leave dec push (bad) dec mov mov mov push xor mov test fldt add es mov mov rorl fdivrs (bad) int3 das add and es sbb icebp jl dec pop (bad) push andl or fnstcw add lcall pop scas dec (bad) mov push insl (bad) xchg cmp sbb (bad) fdivrl imulb and xchg shlb test popw mov ret push pop int3 cld out sbb repz jns leave cwtl mov pop loope lds pop inc insb fmuls cwtl ds (bad) cmp test clc loopne repz stc xchg fidivrl addb pushf andb icebp into add pop loopne mov cld pop jno test mov sub add lods cli pop add mov cmp fsave mov (bad) ficompl in sbb movsb out sarl mov loope mov or pop fs (bad) xchg es fmuls adc pop push add mov mov pop int3 popf add push mov sbb fwait clc daa push in push add pop pop push xor jg push sub js decb add notl push imul adc (bad) into mov inc sti jle xchg and and sub movsl int in fs push sahf rorb out cwtl movsb and inc and and pop mov jns inc push fdivl sub and or cmpsb jl add xor sbb xor mov mov xchg cwtl cmpsb or data16 push jns test in add loop sbb aaa cwtl imul adc add push push scas or mov lret dec dec xchg and mov add int mov mov mov add ds aam mov rolb jnp imul mov adc rorl sbb pushf dec repnz movsb call and jb call cmp push addr16 xchg aam or add insb dec cwtl xor dec and inc fidivr push pop jb xchg and mov xchg mov int3 je jb and adc adc fldenv data16 jg dec xchg lcall adc scas mov add mov ss nop bound pop mov in push mov (bad) repnz sbb pop cmp js fisub hlt mov add (bad) mov std add nop mov pop lods dec jnp sub pusha cmp jne lds add rorl sub imul mov loope sti and call mov mov cmp add sub faddp fcmovu nop mov fs add mov pushf xchg loopne add add xchg es jb push jb or push fcoml or sbbb enter or and faddp aaa push pushf cmpsb or pusha shlb int3 cmp sarb sub mov dec or ds (bad) mov xor dec sbb cmp sbb stc sbb and bound push ja push enter je or and sbb jne jb xor fmuls test mov dec xor cld sub cwtl lret jo xchg leave repz push xchg sbb leave dec dec repnz lods imulb daa cltd mov xor sar mov dec movsb mov add mov mov dec cmp pop aas call jne lcall hlt add lret inc jb dec cltd lret pushf push mov mov ds cmp mov pushf je and push sbb inc hlt stos mov test sub add in push jecxz lock pusha xchg and imul dec pusha and lods ret and and daa sbb dec pop mov clc push shrb (bad) inc cmp pop or mov aaa push lcall mov rolb mov mov sub jle inc cld mov out fldenv in cmp cwtl add mov adc shlb dec test xchg mov icebp push lock cmc int3 in jbe pop and in fsubs mov adc pop lods add pop test pop mov lods mov les sarl jb orl add cmpsb cmp and mov int3 sub rcrb add mov pop in test loop fidivr lods mov or xor mov cmp sarl in cmp sti dec push hlt test or bound rclb fbld dec loope int3 mov cwtl mov cmp jl mov ror movsl inc cmp ret fisubl out and cmp pop packssdw loopne mov adc and pcmpeqd adc cmpsl and mov fwait cmp sub (bad) scas and or or dec dec xchg (bad) mov jb pop nop jo or enter out add mov call nop into and pop xchg and inc adc jl jl or push dec push sbb cmp movsl push jo xor add lcall add mov pop add les jl mov adc adc push and dec mov jmp ret cmc dec mov aad cmp nop sbb sub xchg add add stos adcl orl push push (bad) icebp pop call add jbe cmp jle mov sub clc daa dec loopne jnp pop add adc ss lock pop int pop xorb sub fwait xchg pop rclb pop dec sub (bad) dec fildll pop ror or mov jno add xchg add ret into rcrb xor nop sbb and jb mov mov mov lea lcall sbb sbb insl mov sub pop jmp cltd mov ds sbb bound cwtl loopne les xor and push ret inc pop enter mov popf dec jl shl lds ret xor ss mov push sbb das adc inc xchg sub test sbb out add adc lods clc push add and enter dec adc add mov add (bad) hlt sbb in mov cmpsb add (bad) pop xor lcall mov jnp or cltd xchg mov adc sub and mov je cmp mov pop (bad) xchg sti sub or push in dec xor hlt scas add or pusha add mov xor inc aaa out nop mov lret rclb clc arpl mov out xchg dec or (bad) add sbb push rolb inc fsubrs add pushf hlt mov sbbb xchg adc sub push mov ja pop std jp lea sbb movsl mov cld pop pop ja jg insl mov xchg loop js push ds stc mov lahf mov sub mov roll push sub clc bound inc cwtl mov sbb lret xchg jb add xor mov dec mov add cmp xchg in das fwait pop mov mov rcl inc inc adc fucom nop add inc cmpsl repnz int3 push fwait mov and add xor fadds fs inc push cmpsl dec in mov mov aas sub popa adc fbld push adc mov test (bad) mov leave in and (bad) sub jnp adc add add sbb mov xchg adc sbb test ret data16 rcr mov inc idivl gs out mov lahf out and push arpl add mov hlt inc sbb (bad) stc jae add pop movsb jnp hlt push add lds mov repz jge aas pop push xchg mov repnz jl fsubs dec push ja mov cmpsl mov adc add push sub add jmp pop mov test jecxz dec add leave sti inc iret push (bad) xor inc in xchg out dec lds cwtl into clc call adc pop adc add data16 sti ret ret and test (bad) rorb and inc add cmp pop andb or sbb js mov jle mov inc adc dec pusha jns sbb sub subl mov icebp (bad) in mov or sub xchg push adc jmp sub ss add cli push leave fdivr push or ret adc adc inc add sub adc jae add fs call cltd das mov roll pop fs test inc aam addl xor xchg adc mov xchg rolb fcoms fistpl pusha sarl leave xchg dec add nop sbb cwtl push ja daa or scas repz stos push ljmp inc or xchg pop add jp sbb push mov popa add ret pop inc cld push iret or test push adc scas adc js dec nop adc (bad) loopne add xchg (bad) into xor lods add mov lods mov sarb adc fwait add dec and cld cmp cwtl lahf cmp mov test xor jo mov bound xor pushf and out dec adc pop cli orb pop add jle lea dec arpl sub push test xchg das or add subb fmull add sub std roll mov rcll mov (bad) inc mov mov nop out ror mov jae push push pop add cmp popl and jnp sbb fsubs clc or pusha xchg pop xchg push sbb int3 out int sti lcall or or ja adc hlt mov xor or xchg imul push rolb scas rep jne mov lods es cmp rcrl mov dec add ljmp pop and gs add mov add jp mov jge test dec add xor jmp icebp xor in mov rclb lock jo sbb in (bad) js add out (bad) stos sbb cltd maxps mov iret cmpsb inc enter cltd cld mov nop sbb dec scas fdivrs cmp xchg push add mov negb std ret cld push shlb aas loopne test push sub add test rcrb sti adcb sub nop cmp std add ss popa nop mov adcl push jmp inc xchg push cmp xor lret ds gs sbb mov bound sub sub inc push popf push aas jno push lods mulb mov mov cmp add xor jl and add jno inc test adc or mov jle in inc push push push pop cmp and sub xor or sti or aas lock mov aas (bad) pop sbb mov xlat sbb lcall push or inc adc fs push pushl (bad) jb,pn js or inc add and inc aam jg sbb sbb xor sbb inc xor out push out loop ds mov js,pn xor js stos aaa mov dec push add adc mov movsb lret dec add arpl inc lods adc add dec xchg jbe push mov sub pop imulb cwtl and inc push pusha xchg js in xor test and or test mov sub sbbl mov pop pusha pop out and inc es push inc dec sbb add lods or sub push sti xchg ds mov pop test clc jl sub rclb lahf or add jle arpl sbbb jne add cmc (bad) mov or add dec add push (bad) mov add xor jnp mov data16 imul dec add sub jbe sbb mov jp (bad) dec adc and fmul adc adc shl add pop roll xchg cld cmp data16 sub add daa dec and loop mov std or pop test andb xchg mov cmp adc testb mov xor pop jno (bad) mov add inc iret les test xchg sbb adc mov xchg cmp nop sbb sub sub and xor ss xor and push xor jo add movsb outsl push je enter mov dec fnstsw popa mov push icebp setl fildll add mov sub insb xchg loopne xor subl hlt shr das add (bad) mov sbb mov push rolb inc pop add push push add adc push push add mov cmp and cmp cmpsl add pushf pop or jne mov les push negb push ja sub cwtl lods loop leave mov and js cwtl sbb hlt sub adc lock jno add sub in add dec cmpsl popa add cmpsb mov inc jg xchg adc imul lret lds sbb sbb pop push pop sub jmp icebp or sahf mov sbb pop push test jge jmp mov xorb and sbb aad in es sbb xor adc lock add cs out fs inc xchg lahf cmpsb jns adc pop sbbb sub sub aas mov add push mov ficompl adc xor addr16 popa or cmp xchg rolb test fs std ret hlt ds andl icebp sub jnp adc mov fwait (bad) int3 pop jo cmp sub repnz push arpl repz cli cmpsb push call stc enter xor inc cwtl mov nop add (bad) movlps (bad) xchg test jp mov and fsubs cmpsl inc insl pop dec xchg rcrb mov add lcall jecxz mov mov pop cmpsl clc inc in push cmp sub inc insl sahf in add ss jnp insb das adc push rorl ja bound lret adc push xchg sub ljmp pop xor or cmpsl xor mov jl fcompl sbb xor cmpb repz adc fldl or add fistpl xor cwtl (bad) add arpl push adc add fwait test adc fiadd sbb inc xchg mov lods into xchg in and leave lret sub fisubrl add ja mov sbb inc andl xchg xor push adc xchg sbb adc test pop ret repz in jbe pop lcall sbb xor mov adc ret sarl adc cmc cwtl jg ljmp cmp or pop mov jmp mov ret mov cmp mov test stos push push js lods shrb mov (bad) pop loope cwtl add mov arpl inc cltd ss lock clc leave pop ficompl mov xor bound mov iret adc mov sbb mov in (bad) or enter cmp sub dec mov xchg push cmp push inc cmpsl add loope dec loopne mov (bad) xor jmp imul pushf push addl fadds or imul xchg and mov nop rolb int3 mov scas stos dec fs xor adc pop dec mov jo push ja in inc add lods lds loopne stos push popa mov pop inc xchg popf add dec jmp dec bnd lahf xchg int inc add mov int3 cmp mov add nop leave testl lds aad inc mov jb add pusha or aam pop imull add xchg sbb mov arpl sub scas aam mov xchg sub loop pusha or ret or jae push push lahf mov or ror mov aam sub cmpl inc popa jbe xchg xor mov cmp jnp add jmp or lock fcompl mov ja enter es mov lea ficomp lret mov (bad) int3 aas sahf lods das mov or xor aaa movsb inc rol xor dec add adc pop sbb loopne xchg les rcrb mov add mov xchg mov int xlat jb mov enter pmullw popa dec adc mov inc mov mov adc nop shlb lea rcrl xor nop dec adc jne pop push js mulb mov add xchg dec shlb dec movsb mov jmp and rorb inc lods mov pusha lcall test out jns xchg ret cwtl (bad) enter lock loopne mov daa ljmp adc cmc jae lahf cmp inc sub rclb cltd jne or and push pop rcll add mov rcll mov data16 lret in xor daa inc cltd rorb stos jb rclb shrb stc cmp rcll daa push in jbe pop lds insb cltd add xchg pop mov pop cmpsb fildl dec adc and and xlat into jg mov mov pop inc js push push mov sbb dec xchg xor xor (bad) push decl xor jmp jbe inc scas lods push into adc and (bad) fsubr fcoms or mov cwtl lock cltd in xchg xchg add clc ds xchg les mov lds add push and and xchg imul adc jb push nop xchg adcb mov and test inc xchg sub and pusha insb (bad) xor in inc mov jne rolb ret (bad) leave mov outsb cwtl lds nop mov cltd clc jmp inc xchg pop movsb and pop dec xchg push test rcrl nop mov jns inc inc jmp rcrl adc add or or lea andb jmp and out int3 sbb lea adc dec hlt pop mov das push test lds inc mov sbb cmc ficompl cltd cmp add xchg mov and inc pusha mov push mov and nop lret inc mov sahf leave sbb sub lds cltd enter movsb enter addl lods xchg dec fildll stos add ret mov je add lcall adc movsb mov cmpsl add xor inc mov push mov cmp dec loop jecxz inc adc iret aas mov xor int3 incl sarb dec stos rclb outsl pop and movsb dec xchg push dec std inc cld jne pusha adc fiaddl clc (bad) dec or mov add push cmp mov adc pushf add mov cmpsb xchg sbb inc or xor into stos out loope and jmp pop fistp les rcr es lock inc xchg sti xchg mov orb notb or mov or inc repz mov imul adc mov and or mov and cltd push add pop iret cwtl bound xchg mov aam cld int3 mov or push lods mov repnz mov insb pop jl pusha cmpsb cmp lods and iret popf mov inc adc dec je mov adc adc inc mov inc fmul (bad) xor inc in jb dec and jno push jl mov inc dec and test sub lods mov out out (bad) or lea out or adc insb xor adc cmpsb xchg xchg adc dec xchg movsb cmpsb or inc bnd dec xchg aam cmp and aas nop or sbb lahf imul adc cmc or les sbbl aas pusha cmp inc addb dec xor adc sbb add rol loope icebp adc stc cmpsl ljmp outsl mov imul push leave test (bad) nop add (bad) ljmp cld adc scas mov in jp (bad) cwtl ficoml or cmp dec push in dec adc dec xchg je xor mov test and shr push cwtl jge mov lock leave mov lret dec mov cmpsb cwtl lea adc cmpsb aaa enter mov dec popl sub push and mov pusha or jl and cwtl push push aaa sub adc cli adc or orl adcb enter (bad) dec pop in jb dec cltd in pmullw imul pop inc rclb nop push imul rorl mov xchg inc jbe nop sbb pop mov loopne jl pop add jge lcall inc mov lods add dec adc and inc xor mov add jbe icebp xchg jnp push clc data16 insb mov jbe fdivr cwtl add xchg pop inc out movsb int cs jp scas sbb or push mov and icebp mov mov add fs and sahf xchg out adc dec enter mov sub bound inc xor stos subb sbb mov push sub adc inc inc adc pushf mov mov cwtl cwtl push sbb gs call ret xchg pushf rcll push pushf cld inc mov add sbbb or inc inc (bad) rep ljmp push (bad) add mov pop movsb and andl loope lret adc lods xor fs mov (bad) fsubp xor mov imul gs shll mov push je pop pop aam dec rorb mov pop xchg cmp sarb subl jne adc add add aas std push push or movsb xchg enter shlb xor push test add adc xchg push imul movsb jo inc mov xchg xor imul imul mov and ja clc cmp lock and mov mov xchg adcl pop xchg jo mov xchg je xor push jo mov and add pop pusha lret add push mul ror mov push add jecxz or add add pmulhuw scas pushf add mov fisubr dec jne test loope jnp mov or inc int3 dec jecxz cmp inc adcb cmp test ret cmp mov cwtl sbb cmp ss cmp xchg lcall push (bad) mov sbb adc pop insl add jp pop xchg or out mov addr16 xchg inc add sbb xchg push jp and mov or loopne xchg ret mov xor add or shlb data16 movsl add dec shrl cltd loope xchg sbb mov xor push call xchg jae cmp mov iret jno add fwait jl push pusha stos nop jp and xchg sbbl (bad) fnsave pushf cmc inc add sarl sbb bound and inc mov test add jo jp jmp push enter jns inc sbb or int3 rolb sbb call adc call or pushf add cmp add and clc sbb jae mov aam sbb lret xchg sub add sbb pop (bad) mov mov xchg pop mov xor not leave movsb xchg test dec adc add xchg sub mov mov jne cmp stos das imul rcll mov dec mov adc adc ds add add test mov test push pop lock aas les cmp or mov or push adc add call and xchg aaa inc dec inc mov pop add xchg stos xorb movsb dec mov js or and or arpl jg cwtl mov or and nop mov sub add xchg adc testl and push jo repnz and sbb sbb mov aaa lds insb jge imul mov cld out sbb pop adc cmp add inc inc rorb push mov push add sbb sti pop xchg xchg adc inc xor push adc xor clc xchg adc sbb pusha mov sub aas (bad) stc push aam push xor mov pop and mov dec adc mov stos add inc sbb or leave cwtl sub xchg add push inc add outsb cmp xor push add daa jo cmc orb sbb or enter mov or xchg shlb (bad) imul sti outsb push add clc lahf jecxz add ss ret out and mov add and or mov cmp pop pushf (bad) fldl add int mov adc and xor sbb xor loope lds jno and or pop mov jge mov stc inc add inc adcl jl xchg and inc orb mov lea (bad) xor int3 outsb or cs es (bad) push lds outsb jl mov or pop and sbb mov clc in ss fwait push dec xchg and push or add pop js dec sbb js loop cltd add add imul pusha inc pop pop lcall insb test pusha andb aam enter hlt fimull enter ss rcrl adc add mov xchg add je adcb enter inc mov or push mov imul rcll inc in xchg push inc jae mov jnp xchg and jno xor mov clts aas ljmp repz xchg pop lock fisttpll or cltd push add sbb push in mov pop je int mov cwtl sub mov pop imul add push (bad) bound pop fadds lock sub mov sbbb push jbe (bad) mov jge aam das out mov or or mov and mov sub stos pop cs nop mov std or repz pop sbb ja test aad mov pusha push cmp pop fcmovu cs push pop cwtl loop add adc mov aam adc inc in pushf pusha add stos push add mov shrb in sbb jno in mov xor outsl pop pusha push loope movsb addb xor inc and mov pusha add scas loopne pop push jg add les push pop outsl or push inc add mov hlt fiadd out repz sbb out mov jnp add or jo out cmp repnz faddl or jno nop dec xor adc mov adc push adc and in jl outsl inc stc iret push (bad) divl jo pushf jb push aaa je jno jmp les popa in jo loope ja in sbb loope xor or ret pusha inc inc icebp sbb out rcll ljmp mov mov jecxz enter adc test pop aaa (bad) xchg (bad) push rolb push test xor test inc mov xorl out mov sbb cmpsl add stos mov inc add loope sub sbb inc jb or pusha hlt adc rclb out push das inc movsb sub or es or shlb pop in addl repnz das outsl push stc addl xlat add aad jo incb and sub in add xchg inc jmp insl add ret sbb mov xchg xor andl rcpps or mov xchg and push test or pop lods adc dec scas adc or movsb hlt cmpsb mov mov and dec xchg fsubrs sbb fisubl clc stc adc and mov adc les subl pop inc xchg and andl or dec jmp movsl xchg shrb sbb movsb frstor out add popa std sbb inc xchg fwait icebp ror mov adc jg mul stos lods sub pushf and sub pop adc popf add cmpsl or dec (bad) clc pusha sub fwait inc push mov dec bound int cmp loope add sub push push aad add into hlt fadds pop and outsl and jp mov or sti add into outsl in jno dec testb test jle inc cltd pop test insl push dec pop adc xchg aaa or lods pop inc cmp add sub cmpsb pushf jo add mov mov xchg sbbl mov loop subb mov (bad) clc ljmp or pusha xor scas mov or xor int3 mov xor insb add mov out dec pusha adc add sbb inc add dec push cmp aam imul stc mov js add xor fildll repz sbb xchg sub xor jl xor push xor das lock push add sub cld dec adc pop xchg push adc inc and and std mov xchg in sbb mov popa test xor fmuls (bad) xor sti out or rcll mov lahf notl ds add dec das stos adc mov imul mov and jae hlt cli add loope adc dec lret mov lods mov pop xlat inc enter dec sbb add stos add xor in nop add mov out aam call imul mov cmp sti add aam push xorl fiaddl hlt add push and mov jo mulb dec clc xorl iret adc xchg sbbb sub or mov push sbb push in aam test push inc data16 mov pusha mov jbe adc ret lahf ljmp cmp pop inc clc mov pop (bad) mov add popa aam push (bad) repz mov loope pop inc scas xor inc flds inc outsl out cmpl sub pop sbb or xchg outsb pop loopne out addb dec fsubs xorb (bad) mov adc loopne subb xchg loop movsb fsubs mov and les add mov jb test in testb pop rcr fstps test orb dec ljmp or xchg mov dec sbb pop and inc push mov cld sbb popf adc cmp cwtl add push xchg jo out fnstenv fsubrs jmp cli test dec cmpsb push jo mov lahf push mov and insl mov jp test out sarb insb jle dec mov push test xchg pop push adc pop and xchg adc adc sbb and mov sub xchg mov jae int3 mov pushf (bad) scas shr pop (bad) mov test loopne js clc cld and testl mov sbb xor (bad) (bad) js sub and mov and push lds or or es dec adc mov xor adc inc adc (bad) push mov lds in sti adc sbb jno mov sbb push inc sti dec shll mov popa andl inc jns push test mov fwait push clc dec push jmp adc add pop cmpsb mov inc ljmp fisttpll push call and out add inc or lods (bad) jo pusha mov cwtl adc add and fs lds mov sbb imul cwtl jno cmp xor add clc push into mov mov sub bound add mov cwtl pop hlt popa pop dec cwtl xor xor mov cltd (bad) cltd rorl out and pop mov (bad) sub push (bad) mov pop test xchg mov pop mov or pusha xor sbb and repz lds movsb jl inc push push and mov in xchg mov mov add push cltd push xchg stos sbb lea jle pop xchg test cltd add sub dec js mov mov (bad) cmc push ds inc lds sbb or pop add dec adc fistp xor mov es pop dec jg (bad) fldenv fadd sub out jo loope add or fisttpl mov icebp or cmp pop adc adc sbb lcall rclb adc push push lea adc xchg sbb mov mov aaa std mov test xor pop sub cld sbb lds scas rcrl add sbb push xor les cltd sti in adc adc lcall enter enter popw imul stc out and adc mov xor movsb and mov ja loop dec dec xlat xchg and add inc or pop outsb jne sbb dec adc mov repz aad inc sarb mov and add dec mov mov adc ret lcall cwtl xor dec and or adc enter pop inc mov or dec mov scas push mov sbb pop add sub adc lock sbb lock and and scas imul push loope dec mov lds cli pop mov fisttp add and jg outsb repz loope adc lret lods lock cmp cwtl mov add (bad) sbb pop mov jmp and pushf inc xor in jb adc (bad) insb and mov (bad) sbb adcl adcb imul hlt in sub push or pop test inc daa pop pusha push (bad) cmpsl xchg xchg inc mov or popf or enter or cs out mov mov sub sub push sbb out cmpsl sub lea lods jle in in dec mov hlt adc lcall mov adc add inc xor sbb mov stos dec pusha dec xchg (bad) jmp add jns sbb int mov xor loope mov repnz cmp jae mov hlt pusha inc imul mov idivb in ret test or mov iret popa or xor popf adc adc adc test or in mov xchg leave cld loop push movl push dec mov and mov adc add xor cmp (bad) adc test cmp mov or inc add ds (bad) std imul add ret cs lock icebp xchg or dec loopne stos jecxz lods lret andl mov test dec add leave cmp inc out jo sub xchg inc lcall dec test iret inc jp sub (bad) enter and jecxz sbb icebp inc inc fsubrl clc ficom inc in cs sbb lret mov xchg adc push push int3 xor insb xor push test lds pop daa mov inc mov push adc xchg cmc lds pop loop mov add lods jno leave mov aaa jns imul sub cli xor movsl loop push sti mov add and adc shlb ss push cwtl flds lds and pop (bad) fnop cld pop hlt sbb inc rclb imul push cltd or (bad) xchg adc (bad) jae jg pop js jbe (bad) int3 scas mov jo and ljmp leave adc sub orb xchg jne sub adc inc jecxz cld push pusha adc vmptrld mov jg cmp popf sbb xchg cmp mov movsb cwtl and imul cs mov mov jno pop (bad) out push mov cwtl ret add or sub and lea and shll fdivl cmp inc mov cmpsb mov aaa fadds inc popf (bad) mov jo xchg push test push or and cmpsl mov test mov mov (bad) jbe push sbb add pop pop add mov cmp mov cltd xor pop repnz xchg or xchg hlt ljmp (bad) xor inc (bad) (bad) aaa push adc in push fs mov lods imul aas int3 and xchg hlt sub xor inc cmp xor jmp sub adc add add push in (bad) aad loop adc sub les or subb or mov xor jo pop fiaddl in mov add les add popf nop and xchg imul fdivrs dec adc adc xor mov (bad) gs adc lds xor les adc mov jae or sub lea sbb pop ret sub and adc mov jae and jo jnp xor jne inc and ss add cltd mov jecxz mov xor mov jg shlb pop pop (bad) jecxz xor or mov shrl sbbl cmp (bad) nop or ljmp and jns (bad) std dec ret sub xchg hlt add mov fiadd cmp js int3 mov bnd push pop inc push das ss sbb hlt imul jae push fidivrl repnz mov inc cwtl fnstenv cwtl dec cmp push andl test pop add int3 xor mov and inc int3 pushf mov fimul pop mov adc insb and fsubrl pop ret xor push test jb and add mov test pushf add mov ds lods add jb (bad) mov sbb add aas lret es add rorl movsl or sbb loope sbb sbb sbb adcb cwtl xor mov dec pop testl xchg iret out nopl mov test pushf pop and loop inc mov enter mov cmc dec adc rcrl push (bad) dec sbb popa ss sbb push mov dec or pop add or jne in adc dec jp add scas cmpsb push pop sub xchg fsub aaa dec stos adcl or enter jo cmp test test and sub imul lock add jne mov pop ds and adc rol test mov mov adcb idiv loop mov jle dec roll pop dec ljmp jl add rol int mov imul and cmp in imul pop fstp xor mov add inc mull loop mov cmp ljmp pop add ljmp push or dec mov sub movsl movsb push (bad) mov sbb cmp mov sti rorb adc push jns in jge mov cmp les repz and inc mov imul mov xchg cmp pop shll inc pop add add scas rcl mov dec mov nop mov dec loopne ss loop dec mov add scas enter imul les hlt and mov mov pop sbb imul test or add jge shr je add xchg ljmp inc xchg out push or lock or dec fcmovnb cld (bad) in jl imul xchg cmp shll aaa mul xchg jns pusha push lret js in inc aas add and cmp mov call cmpl sbb scas mov loop pop or mov dec add sub scas adc mov xor rcll mov or (bad) mov mov aas loopne loope cmp imul mov jno sbb jge lds push push cltd add aas xchg mov xor and sarb inc add scas rorl xchg cltd xor sbb xor add pop push and stos mov jo or add leave mov cs xor jp stos rorb (bad) jae les pushf add add push dec adc cwtl js int mov inc xchg mov jns lahf cmpsl cmp mov popa and pop imul sub mov or popa and jbe lds pop out mov ljmp sbb add push pusha xorl fcmovb xor mov movsb mov add cs cmc (bad) arpl test add xchg cmovnp testl sbbb push out movsl push mov fwait fs jmp or mov cmp movsl pop scas add in cmc push les aam adc nop push mov xchg sub xor dec lds shrb ret lods pusha cmp add ds mov jg add in sbb lock or sbb popf sbb mov std inc sbb sbb mov call (bad) incl mov test pop clc ret pop ret xchg push mov dec pusha leave dec inc test lods add lret mov mov repnz inc add mov and dec mov (bad) enter lret jmp imul lds pop bt jo lods call popa inc mov and jge push mov test push add add popa sbb je adc xchg push rolb jae call std je cmpsl pop pusha pop push es xchg imul push pop cmp ljmp lcall in stos sbb (bad) test or inc ret je sbb imul leave sub ret dec sub xor scas loop rolb cmp ret cmp sbb mov (bad) icebp pusha push aam mov bound ficoml call insb decb mov (bad) (bad) mov arpl ds or add popf jmp and test out rol adcb fisubl add enter mov out and xor daa sub aaa les add call mov adc loop incl fild adc add mov sldt sub std stos idivl bound inc dec inc mov rorb inc fcomps pop arpl enter jbe icebp or xlat mov sbb add add (bad) inc (bad) adc insb cltd pusha dec test mov mov aas loopne xor sbb rdmsr add sub inc xor shlb icebp rclb pop stos jb ja addr16 push cwtl jb mov add adc jo push jne rolb test inc lahf pop icebp sub mov in popl fild popa adc pop pusha mov jbe ja ret orb clc addr16 mov movsb mov sbb and (bad) stc inc mov fwait cwtl push inc mov inc aaa pop aas lret xchg add aad mov or les out mov push cmp (bad) cld rol push mov lock push inc enter stos rolb jne and iret je andb arpl pusha pusha xchg and out fildll loopne jae sub or pusha sub push inc pusha dec mov scas lcall sub or jbe add and sub lahf leave add sub mov out or mov push sub ja call sbb fistpll dec or (bad) je rcll sub pop nop cmp and gs mov mov xchg xor test jbe mov flds add push hlt data16 add enter cmp addr16 icebp sti in inc sbb (bad) cmpb sbb mov mov (bad) and fsubs xchg mov test add (bad) fucom (bad) nop int rolb pop test (bad) les popa or mov ja cmp jb jae (bad) hlt std data16 add sub sbb lahf sub loopne jae pop test ss xchg (bad) pusha hlt lock jg mov cmp shlb rolb inc loop subb mov sub cmpsb icebp inc cmpsl test out add jbe add icebp (bad) push mov mov add cli test sub lods jo pop arpl enter rorl imul mov cmp mov xchg cmpl xor dec add test xor addl jo pop jns outsb insb fild and clc lea movsb data16 out enter jbe jo cmp pop or and xor sbb (bad) cs and add add test shll xchg inc xor lcall sub or in (bad) cwtl cmpb add mov scas jg and inc adc or or sub clc (bad) pop mov ret and xlat fs add adc repz pushf movsl pop (bad) jecxz inc test push adcb orl es in cbtw roll mov aam push cmc cli add js outsl xor movsb das cmp xchg jbe pop add rcrb outsl mov movsb add push add mov in mov mov dec add outsl mov push pop xchg push dec test dec mov les xor inc stc cmp insl cltd sbb inc xchg jp in clc add adc jo addr16 add popf movsl inc mov outsl cmp shl fnsave sbb lret (bad) pusha sub mov jge addr16 cmpsl rclb push add notb das mov pusha or je sahf or repz js pop mov lock jle add popa sti adc (bad) movsl or push mov cmp lret sub pop rolb mov pop lods push int3 movsb call mov push imul test dec jle movsl loop jo add lock mov loopne adc enter jmp adcb data16 pop rol add out sub lcall subb les mov and and cmp cli jg inc xchg add mov popa mov mov mov cmp push pop mov or adc lcall outsb shlb test xlat add mov mov aas sub cmp pushf pop dec and mov add add mov jl add add ss xor add mov sbb mov std ret cwtl cwtl loopne cmp sbb jecxz adc xchg je repnz jle or or fistp les pop pop bound mov mov or add xor js aad rcll rolb lock inc xchg add pop xor add movsb or ja loopne popa rcll xor enter xlat in sti rcr imul sbb nop loop ror or sub add sub aad fcoml (bad) dec outsl orl push lahf add adcb and add stc repz push xchg sub (bad) xor aas daa add or popf add lock aad and sbb es dec xchg lock lods adc mov push out test cli lret add sbb and xchg sarb cltd adc add mov cld cmp dec orb mov or add push inc lock dec insb add ret xor mov ret lcall inc bts movsl push dec add or jp and (bad) pop sbb adc pop mov dec xchg int3 cwtl jl inc es xor mov adc int3 mov loopne je jne cli ss and dec adc add adc cld lahf adc out (bad) jbe and push or dec add insl push pop mov test roll out std ret int inc mov add pop stos arpl and lret or je add and add loop xchg dec (bad) add lea test add jecxz mov mov inc jmp add cmpsb in loopne mov xor pop sbb fcomip cs notl add in or xchg mov push or mov inc push scas pop push lcall inc or mov (bad) adc flds xchg cli jae push or (bad) das sti adc add pop jne setno or mov adc (bad) fsub imul lock (bad) mov adcb push or add lds adc xchg mov cld inc (bad) or sub add push mov int3 sahf sbb mov mov (bad) imul out in mov stc fnstenv mov or and sub inc add pop xchg fs fldl dec repnz popf orb (bad) es call jl dec jae add js (bad) mov fwait sti sub push test popa int3 shlb adc sbb fstps inc xor sub (bad) js addl icebp orl xor out cld jge inc add imul inc nop xchg and pusha or pop add repz lret add dec jg pop pop sar add sahf and mov mov dec lds push mov push cmp rcl xor nop mov xor xor movsl leave xchg adc add ss xor dec inc sbb es dec or hlt sub les js pusha and bound mov das cmp clc or inc jge test xchg push mov in aad nop add add mov jmp push add inc inc add or imul data16 scas adc sbb inc loopne stc sub xchg push adc daa fwait movl rcrb xchg add pop dec inc adcl xchg shll add es addb mov int3 movsl jle mov push inc daa sbb inc sbb sarb xor add mov jg insl dec aam add mov add cmpsl mov pop sub push adc jb adcb pop pop mov (bad) dec rcll xor int3 in cli sbb fist (bad) aad or fmull dec xor inc xor xchg push ret jg push sub add dec add ret test mov mov inc or popa and je mov sub cld mov out and popf iret inc int3 dec or pusha and clc add fwait push xor adc les inc add enter sbb inc dec sub xchg add arpl add mov and pop dec push inc inc call je inc push sbb and add push or mov roll xor shll push adc cld add dec add jno movsb mov mov mov mov pop ret cmp pop or and sar pusha bndstx mov sub sub and mov mov adc or xor popl add sbb dec insl mov mov imul sbb and mov sbb mov sbb pop xor mov test or movsl lret enter out push or mov pop cmc inc ss adc or xor jbe pop inc dec adc mov dec xor testb test sbb or scas and pushf or outsb nop mov dec js bound inc adc xchg or cmpsb shlb lret or or inc mov mov cld add xchg and nop add lods lret fs (bad) fisttpll movsl (bad) in cmp dec add jb or ret out rcrl push push aam imul sub adc cld inc popa fcoml mov pop adc fucom rorl test jp out add pusha sbb mov push leave or rclb aaa ret or js mov inc and paddusw sbbl addb shr enter xlat xor add fdivl les adc ret fdivrs rcrb and xchg sti adc adc jge sub insl clc enter add (bad) mov xchg add push adc js cltd int3 aam add das insb dec mov lock addr16 imul jl bound sbb dec subl adc push in cmpsb push mov jae dec mov xor xor sarb xor inc test fcompl mov incb mov dec test jb xchg xchg lock pushf add and clc cmpsl ss and incl cmpsl ret shlb adc rorb mov dec int3 cmp inc pop cld dec and add insl cmc mov push fs sarb imul add and pusha dec cmp sbb mov cmp popa adc mov add fldl hlt psrlq (bad) push inc cs dec push adc xchg addb loop mov cmp cmpsl jno js mov or sti ret sbb adc shrl enter jl lods add sub adc jmp inc nop loopne xor outsl ljmp cld pop inc sbb xchg and repz aas (bad) xor dec add dec daa pushf adcb das mov adc or add je adc pushf adc push xchg je iret cmp inc jb inc mov sbb or mov mov jae insl sti out js add inc pusha and mov xor push add cld insb cwtl movups insb add sbb add mov cmpsl push xchg dec add sub xlat imul cmp or sahf add gs push cmp int xor adc mov sarl adc inc movsl jo out sub xor and mov jge (bad) stc movsb test sti imul sbb adc push sbb sub xor cmp sbb sub mov and addr16 sbb inc sbb lock lock inc add faddl cltd ficom push cwtl orl push mov cltd mov sahf sub xchg adc xchg hlt loopne cld mov loop sub or jb xchg je (bad) and in dec push pusha dec inc mov scas sbb mov test mov (bad) jne add mov mov (bad) je sub sub enter (bad) clc and rcrb dec or sahf scas test push or stos adc add mov outsl mov pusha add adc sar xor push cltd mov push dec ljmp scas xchg negb clc or add and or and jmp int les mov dec push (bad) or fadd and and jo inc mov test and mov out inc into xor sbb or xor sbb or test fdivr adc ss jbe pop clc sub mov inc wrmsr adc xchg jecxz cmp cmp fwait xor test xchg cmpb lods jp add mov cmp inc fs movsb test or inc mov fwait lock push cwtl (bad) and dec mov push cld pusha mov sub inc add mov mov add mov xchg leave pop mov pusha pop test js sbb dec movsb clc and nop and lret cmp xchg jo mov pop push sub and lret pop mov adc cmp nop pop aad mov or addr16 in insb sub cmp sbb dec out aam cld in sbb data16 add jb push movsb pusha mov pop or stos aam aam ja mov lret out fidiv jno dec dec push inc fild push std add xchg aas ret add (bad) xor add cmpsb dec lds adcb cmp out ja adcb pop (bad) cld loopw dec cmpsb sbb je inc in in mov sti push adc sub inc (bad) dec stc std xchg sarl mov sbb mov pop and and data16 adc mov mov std out push mov clc sbb mov xchg test mov aam lret inc push adc insb mov sbb gs mov inc jg in fadds clc xor sbb and mov fsub adc add or push lock and rclb sbb pop test lret out pop adc add push adc inc mov pusha int3 insl addr16 inc sahf pusha or in fs shl xchg and inc fs xchg inc ja loopne sub inc or (bad) pop repnz or test mov loopne pop sub (bad) fcoms cwtl xor cmp add sub orl into xor and dec or out out inc add popa or xor mov je (bad) jb and mov add lock mov out sbb rcll adc cmpsb jns inc (bad) and mov inc inc dec movsl xor xchg cmp xchg stc stos mov add movsl pushf leave add push xchg enter dec inc sbb xor push ror mov bound mov mov xchg adc push enter fsubs nop sbb rolb cmc push push repz sub jmp (bad) ljmp clc xor sbb cmp loope or add sub inc xchg ss lock push jbe addl pop repz add out pop dec es xlat adc sbb sub enter loopne out mov lods cmp insl xor (bad) xchg les or sarb sbb jmp cmp test je and push aad fadd (bad) lods sbb push shll jo add ss add rcrb clc add and icebp jne cmp out jno rcrl adc mov movsb sahf or mov jb fmuls add mov mov add and fdiv movsb add pushl add in arpl (bad) rorl xor mov clc mull add decl mov fmuls sbb inc sbb leave mov icebp mov pop add dec divl sbb sub mov (bad) xor adc fidivrl lock (bad) rorl in int mov adc mov pop inc test aas fidiv sub popf add lock pop out mov repnz shlb hlt jo repz iret adc fwait mov push or or inc cwtl imul loop add pop popa (bad) test sbb sub int3 jbe in mov xchg mov mov arpl icebp mov inc cmp insb mov and cmp imul imul xchg enter jge sub and xorl fsubs adc mov sbb push ds insb adc jl test fmuls add pop jo jae inc cld lds pusha (bad) test mov insl dec cmp push add (bad) out imul lret nop sbb push icebp pop mov mov clc jecxz test movb movsb movsb mov jbe push sarb add lds mov ret pop sahf or sub aad push sahf js sbb jmp push fdivs loopne push mov div loop cwtl or out jl inc adc add hlt repz xchg mov xchg in jle add mov clc fcoms paddsw repz inc out xchg mov mov pop loopne int cmp popl out and xchg leave jl add fildl and mov fld add push out shrb stos push mov pop sbb add push lcall fistp jb popl add (bad) stc xlat sbb push push lcall les add pop pop hlt or xor fnstcw loopne cmp pop fildl ja add fsubl jp popa mov rcrb enter out lret add mov push sbb int sarb and jno dec add sub add push jo lds add cmp mov xor (bad) scas sbbl (bad) (bad) xchg dec mov xchg or push and sub loopne xchg or lock xor xchg pushf adc loopne pop daa subb xor test popa iret pop add aam rol add ss idivl xor js in cld xor pop cmpsl mov loopne xchg pop fimull mov jno add mov adc inc adc loopne inc aaa or (bad) ret xchg inc add jb daa mov pusha dec rcrb inc lods test xchg (bad) fstpl in jo jl add pop inc ret lds sbb push cld xchg and lock pop and jo in test (bad) lret call add fidivr cmp xor cmp mov movsb lcall mov sbb cmpsb in mov nop dec mov jb jo (bad) nop xor xchg ja adc xchg je cmp adc lea push int3 inc push xchg mov xor insl pop scas pusha mov fisub bound or int3 test push outsl cmp pusha xor mov sbb test sbbb into inc cltd insb or mov leave jno mov and cmp mov dec sbbb jno dec test xchg sbb stos fiadd adc or fcomi (bad) push xor or mov (bad) cld sbb xor incb xchg outsl jnp pop call xor mov fistp dec popl jno mov dec xor pcmpeqw or cmp and xchg adc adc add mov mov sub cmp scas and in (bad) mov es push lahf negl loopne sub lock shll lahf das test inc gs xor xor lods xchg xchg xor mov andl enter cmp mov shrb sub pop pushf (bad) push sbb xchg lods push cmp xor push out ljmp pop pop arpl orl test pushf stos jmp xchg xchg cmp push add jp dec mov in pop and popa ret loop nop jl or loope clc test into das js icebp and adc js clc xchg pop xchg hlt mov mov clc jle xchg mov inc icebp (bad) xor mov xor and sbb test adc clc and in mov cmp cmp pop push push mov pushf sub aas pop add sub bound stc xorb dec xor pop sbb xor pop stos xor imul jb repnz cmp push hlt cmp dec mov mov and sub jae pop mov subl leave push pop call dec add fadd mov dec mov pusha scas (bad) rcrl push out cltd gs jge and sbb sbb jl fmull mov and sub or pop sbb leave mov cltd add clc dec mov cmp adc ss loopne mov insb adc sbb fldenv clc cmp cmp and dec mov in xchg push fild sbb inc loopne cmp cmp dec add mov (bad) pop ret mov dec andl jno mov mov das jo adc fist insb sbb or cmp aam aas xor or push pop mov cmp jne lods cwtl insb mov pop or push mov arpl adc clc cmp aad pop (bad) mov (bad) mov fwait cwtl popf mov daa inc adc arpl test pop sub in inc adc cmp jb cmpsb in rcrl call clc or xchg push push lods ss sub pusha jg (bad) les or (bad) jbe movsl inc nop ds add push cltd inc adc cmp out push add subl cwtl add mov mov (bad) jo xchg ss push cwtl xor cli test adc jg test aam insl sub inc mov or mov rclb xchg add outsl imul clc test push pushf xchg inc sub lahf pop mov outsb (bad) dec les rolb xor jbe inc mov inc pop dec xchg jb add addr16 cmp adc inc jae leave cmp cli jo dec lret test add jle popa sub cwtl sub mov add mov and adc call aam scas sub sbb jns int3 addb mov dec cmpsb xchg mov or push sahf arpl jae rcl lock adc loopne adc and lret (bad) xor fnop fsubs mov insl fmul hlt setbe leave std idiv sahf cmp lock dec xor adc lahf inc xor leave jl or mov xor mov xchg roll xor or cmpb pop xchg push fs inc mov icebp mov inc repnz xchg fstps xor push pop sbb or sbb std cmpl and test (bad) mov mov ret loop add mov loope add roll scas dec mov popa push dec adc hlt stos mov lock in cmpsb push (bad) mov dec mov sub pop test mov xchg (bad) adc pop je pop or and mov xor ss push inc mov push inc movsb jp shrb jbe add sbb fnstcw out mov add lods add xlat mov xchg jo add pop sbb in mov jns mov je and leave sbb pop leave repnz xor inc je pop leave sti imull sbb xor clc pop jp xlat push addb cli lock into lret clc sbb nop push and sub negl sbb fcomi add (bad) aaa pushf pop repz bound push popf loopne sahf sub xchg clc dec icebp sar leave inc mov xor inc and ret xor inc mov lahf jge lods xchg (bad) jl add xlat xchg pop push push lods cmpb add test (bad) pop add sbb push mov sahf out sbb lods mov add jne push cmp shlb xor cmpsl jae loopne leave call js mov adcb xchg mov scas idiv lods fs rolb addr16 les loopne adc add sti and mov ret fwait rolb push pause pusha movsl sub sub out dec es xor sbb insb sub into (bad) cmp push xchg push add jecxz psllw xchg mov lret rcrb (bad) and dec sbb lods add scas dec jbe leave in adc pop cmp jo mov cmpsb cmp adc cmp jbe cmpsl mov sar mull rcr scas add xor mov add (bad) dec clc or or sub nop add movsl mov add push dec inc pop jno lods pop fwait mov mov push pusha cmp xchg dec mov fnstsw xchg fwait or clc or int (bad) xchg mov adc jle cltd mov cwtl arpl aaa stc rorb movsl pop mov dec add sub mov pop leave das mov lahf mov mov int3 je cwtl les in es (bad) or and add xor push pop dec sahf sbb sub cltd cs mov xchg xor lock stos popl ss in and movsl dec sub sahf mov xchg sbb or xor mov mov loopne jl mov and test pushf sub cmp sahf mov xor sub add inc cs or (bad) sbb inc jo ja rolb mov ljmp mov pop sbb dec pushf gs xor push adc cmp or addr16 adc imul nop jo jo les (bad) mov clc jne xchg nop mov pop add jbe pushf orl xor test pusha loope cwtl xor jmp cs imul mov not and out dec xor (bad) xor sbb pop rolb push jecxz and bswap pop cmp mov add test mov pop loopne mov mov xchg adc adc mov sbb shll adc add mov push inc jbe shrb lock rol cmpsb jb mov cmp sub push movsl gs jo ret jo mov icebp das and test cmpsb imul (bad) bound dec in in xor js jp and jns jo repnz in mov jns dec rorb add in loop test cwtl mov cmp stc cwtl imul loop add inc faddl mov add lret subb inc mov xor int3 in pop xor leave adc xor xorl adc jns loope fildl lea sbb mov dec insb sub mov insb lods cli add inc xor pop xor push push cmp adc pop ljmp iret scas das sub push loopne faddl push icebp mov ret sti jo jge mov ljmp jo rolb xor enter jb repnz pop faddl or jbe ljmp push sub mov fimull jmp int3 mov add out add popl daa pop loopne aam ljmp mov ja int3 and test push mov mov out and emms push push in and push mov sbb loope mov and xor fldl and add or adc sbb out push add pop add aas cmp imul cwtl in cwtl (bad) loopne xor (bad) dec (bad) cmp sbb mov icebp shrb sbb add loopne hlt mov les out xchg out add push mov adc jg push dec dec sub test je mov into mov mov call jl xchg xor mov icebp test das sub jl ljmp jns in or mov movsb add pop jmp jae jae loope mov jmp add mov js sub jl shrl aam nop lock je test imul hlt movsl push jnp add adc mov mov xor or nop dec (bad) lds jg (bad) sub imull sbb jae leave in dec pop sbbb cmp push fcomi js jo pop adc cwtl je add outsb push lods mov inc add rcr jg add xor clc or out shl fs mov movsl (bad) pushf pop add sub cs inc (bad) xor push mov push and outsl adc or fcoms enter mov push cld xchg adc inc inc jp jmp test mov cmpsb sbb jmp and pop push loopne pop cmp fsub push cmpsb popa xchg dec xlat push aas daa das inc and pop mov popa dec xchg mov test and loop jns jno rolb data16 (bad) mov mov sahf sub bound mov mov loopne ficomp sbb cmp addl mov and aam insl inc add movsl xchg je cmp mov fcompl xlat bound fcompl and mov je fisubrl das rolb cmp jge insl jne mov movsb je pop test into sbb sbb or push int3 adc inc xchg mov and or mov or or insl cmp adcl outsl and mov adc mov les cmp iret bound sbb fs aas aam sbb xor or jl js jmp sbb sub addr16 sub or mov js test mov mov data16 jb and jno or cmp push adc movsb inc lods sub fisttp cmpsl sarb (bad) repz adc mov pop fwait psraw push add movsl lds lock (bad) test push clc xor dec loopne out xchg js mov (bad) cwtl push popa xchg aaa and sahf adc adc (bad) int3 fidivrl lock gs test add jns fs adc mov jp inc push cltd add in adc mov sub pop loopne mov adc xchg out mov inc mov das movsb jge mov pop sub xor es or das and or and pop cwtl nop mov loopne jg lahf sub ds inc js add in adc cmp mov das mov js dec into or sbb or and jle lods and (bad) jp stc cmp loope shl or push (bad) in xchg in and (bad) cwtl nop adc add int sub or dec sbb cli xor mov loopne mov cmp sub sub mov mov fsubp cmc imul ror sub popf mov js pop xor dec push add adc lock cmp sub pop leave loopne dec stc add mov push fmull lcall movsb inc mov sbb arpl mov add (bad) ss mov and adc mov je lret decb mov nop or clc dec aam lock cwtl pop adc adc pushf dec mov call inc lock fbld pusha aam scas inc and and adc jle pop adc sbb push xchg (bad) inc inc mov sbb cwtl data16 test sub push push or arpl and aas xchg add mov or mov jl sub inc aas (bad) aaa push pop or jae mov xchg jmp push lahf gs dec cli cwtl push loope push adcl mov arpl js pop fcomps insb cmp popf adc js xor rorb mov (bad) das test dec out lds les movsb jno stos inc cmp stos into movsl sbb adc mov outsb push data16 shrb rcrl jae dec outsl mov cltd cwtl or cmpsb or movsb add rclb inc stos pop in mov pop adc and (bad) push aaa xchg jo sti cmp shl lock es inc mov mov cmp in cwtl dec js mov cmp loop mov or or or arpl or and stos add dec cwtl insl sub xor inc fistpll and and xor les add fldenv addb js mov sbb mov into inc mov mov inc dec mov mov pop mov xor pushf enter dec sub jl orl cmpsb mov in sub pop pop or dec sarl sbb roll mov mov sbb mov bound insb dec jge rol xchg out insl xchg add jb int3 push addl mov pop dec cwtl cmp pop adc pop pop xchg out xor dec mov add rcr jl inc ficom pop pop es call mov or jnp and icebp dec mov test rorl adc mov xor inc test mov xchg dec add leave inc pop add and mov bound push loopne loopne lds sbb inc bound popw adc push out xlat cmpl scas lds mov mov adc sbb int3 and jge sbb pop jae inc mov or stc sarb dec and add or or cmp inc mov push into fsubl pop sbb mov xchg (bad) xor icebp loopne in inc stos mov test bound jbe pop in xchg les pusha push mov xor add cmp mov sub popa mov dec add jecxz test cmp notb cli add mov mov sbb sbb cmpb mov add fsubrl mov add (bad) jl xacquire cmp dec jp pop cmp stos insl test add cmp clc sub pop jns xor or adc push adc out ds mov add pop fimul cmp test add out and sub jae mov pop stos xor add fwait icebp jno add xorl into es stc rolb out pop rorb movl xchg xor adc mov jno,pt jmp dec fsubl sbb cli add sbb repnz xor sbb fidivrl inc mov mov dec mov mov roll sbb add or adc or adc xchg adc mov je add mov add lock ret xchg xor xlat data16 rclb add mov inc mov cmpb pop sbb mov mov pop adc inc fsubs or or test sbb mov mov xor push shlb push (bad) xchg pusha mov hlt and jno push mov incb dec rclb push dec jmp cld clc test fcoms out dec mov and push call jns aad ds mov cmp sub mov or push (bad) loope ja dec jb lds repnz sbb popa dec jno inc call dec cmp js and xor lret mov xchg jle pusha cmpsl pop repnz add or pop dec add (bad) data16 outsl pop imul lea xchg sub adcb (bad) cmp (bad) cmp lock into mov inc fwait xchg (bad) test rorl sub lret cmp jno mov xrelease ds ret and fldcw aam dec jge lret repnz inc inc addb xchg or cmc cwtl out popf test rolb adcl jb xchg mov push icebp out jnp add cwtl jne pusha mov (bad) dec xchg cmc inc cmp in sub outsl mov sub adc mov test stos cltd push sbb and fcomps in and dec push clc mov fwait shlb and ds pusha xor adc test adc pop (bad) mov shll add jmp fldenv sbb into inc dec push push mov stc and xchg push or ret sbb mov ror sbb xor xchg sub cmp mov inc movsb dec sbb or inc push mov addl arpl push adc inc cmp insb xchg adc notl push clc insb or dec sbb sbb mov rolb mov xchg pushf test sub aaa in xchg adc jae push inc sbb mov ficomp inc mov adc xor and cltd roll cmpsl cmc add pusha out mov ljmp repz xor pop adc jecxz or adc mov sbb adc jp movsb (bad) nop int add out push inc xor dec into dec test adcl nop or int or fstpl mov in and inc cmp mov addr16 add popf (bad) mov jo mov enter dec cwtl cmp add out inc push cmp push and lods dec xchg cs loop xchg push (bad) leave loopne sub sarb cmp pop mov int3 nop jnp out inc imul inc loope loope add cwtl mov mov inc outsb mov xchg ret scas incl je inc jmp mov push mov jno stc xchg mov dec nop (bad) dec pop lahf pshufw add fnstcw sub mov lods jno add bound xor cwtl jns jge jmp test cmp jno sar rorb pop add aas in xchg rcrl stc mov test loopne add push rcrb and add jp pop shll cmp adc jge jg cmp push adc jp xchg sub sub (bad) aam jge adc jl cmpl pushf mov test push lock and icebp inc pushf xchg popf mov push dec push leave pusha lea xor jmp adc adc repnz add add fs les addb and popa xor fwait repz cmp loopne mov fiadd shrb mulb sbb push adc push jbe arpl inc sbb dec and or cmp xor ficompl mov jge and aad inc xchg mov sbb or and push and xchg xchg lods and (bad) and pop sbb xor adc push sbbl push sbb sbb aad inc inc sub popl inc xorb mov sub or cmc inc xchg jmp xchg lock rorb jle cmc iret stc cwtl sbb or jmp cmc push adc jl and and jns xor mov xchg daa adc or sub call mov add jecxz fs enter xor jle xor aam xor or loopne mov push dec or cld je subl lods add enter add loop xchg xchg cmp mov push fmuls das pop sbb loope lds xor or out mov clc jle or jo add insb push add or xor xor icebp push pop lds jo movsb outsl mov sti shrl mov add lea ret add cmpl dec or add adc push scas insb mov fidivrl dec test mov sbb mov cmpsb xchg adc loope xchg aam adc lds imul push loop pusha je faddp or call aad inc out jl or cmpsb sbb call ss or adc or adc je jns aas aad jecxz cltd loop mov rcrb arpl out dec lock repz jmp dec imul cmc sar dec ljmp mov jl xor xchg daa and adc push xor or jne mov xchg clc daa sub add pop mov cld mov cld sbb adc out or and xchg fs adc push push into les jne sbb dec push xchg or adcb mov push mov mov jne fimul enter jne inc mov loop inc ljmp or xor data16 or jne sbb sahf and inc mov mov xor xorb xor cs fstl sbb or or fistp or clc pop xorb fstl mov push xlat or pop mov adc jns gs xor mov or push xchg out fs inc out mov pop mov hlt push xor inc clc inc and rcl adc sbb sub inc fcoml push jne inc push xor sbb xchg les or rcl aaa les cmp aaa dec or add dec nop jp mov adc adc sub insb add add and shrb int3 mov add cmc pop and sub or and jno xor jmp dec mov xor push aad call jo lret test daa pop cs pop push mov xor cld fidivl mov lahf dec pop scas dec inc and jecxz call out add mov aad ss adc orb xor or sbb (bad) cmp push arpl or jecxz loope aad cmpsl loopne clc adc fmuls (bad) push or fsubl nop call scas or sbb and mov adc ud2 sbb call es push sbb xor jmp inc movsl or fisttpl icebp sbb jecxz hlt sub jecxz nop out xchg sub stc lahf xchg pusha adc cmc and popf js or into fsts std pop pop adc fcomps cwtl pushf jne adc inc dec add or sbb in xchg and jp cmc xor fcompl inc fiaddl sbb or or add xor addr16 outsl add je (bad) xchg rolb inc imul and (bad) fimul or aam inc dec fnsave or xchg pushf arpl xchg rcr dec xchg cwtl sbb jo lods or xor les dec dec pushf fucomip lds out pusha loope or dec adc shrb or push sbb cmpsb xchg sub or dec dec addb sti push rolb adc gs and sbb sbb loope push pushf rolb enter add inc mov inc js xorb inc subb int3 mov rcrl xor add subl inc test mov jo aad sar test xor imul adc hlt in push mov out mov lcall ss cmp cwtl in jmp faddl adc add (bad) ja daa gs xchg pop adc (bad) jl or and inc outsl lock cmp bound xor call std nop or mov or dec aas inc adc jmp nop arpl cmc test xchg enter mov push subl or xor sub cmpsb adc sbbb cmp dec sbb sbb or arpl inc or and adc js jecxz adc xor call or adc inc and insb cwtl (bad) or lcall adc pop jmp lods shll (bad) pop rorl in enter xchg ljmp out sbbl loopne or sub push cmpsb or xor ficompl hlt cmp arpl daa adc add pop xlat aaa dec dec or sub pushf mov pop inc inc sbb adc and repnz nop fwait sbb or into sub mov test movsb add ret adc cmp xor push or mov inc sub xor cmp mov loopne or or xchg or add loope adc mov inc mov clc dec jecxz and cmpsb pop addr16 xor adc or jecxz inc push rorb xor stos push jecxz inc loop int or int stos or ret jne bound pop mov sbb stc cwtl (bad) (bad) iret loopne push cs fwait scas sbb int3 or cmp dec sbb aad cmpsb or or xchg mov dec mov push js and pop cs mov inc or fwait sub push dec mov dec or lds mov sbb mov jecxz cmp es nop ret js cs dec or add invd xor cmp data16 nop pushf popa loop xchg jecxz add add imul push add ds bound adc and lods dec lahf add mov jecxz sahf xor pop or fs in mov or sbb cltd cs jbe js shl nop mov es sbb mov rolb fimull jae mov xchg fistl ret subl mov push adcb push pushf aaa xor or mov adc pop bound mov mov pop sti sbb adc in push insb sub sbb popf loopne daa jge xchg push mov mov jo cmp push sbb xor test cmp push sbb (bad) or mov loopne dec jl sbb sbb or pusha xor cltd xchg jmp xor (bad) dec sbb mov and and popa pop mov lahf add sahf inc imul outsb or add xor insl or add dec sbb cmpsl dec nop int mov or fimul jbe,pt adc lahf mov and inc push push loop inc or mov add test or add loop and (bad) pushf sub (bad) adc inc jne adc aaa ret mov cmp push add dec add push add inc dec dec or pop nop pusha sbb pop adc cmp inc adc xor sub adc or push push add nop lock enter xor sub push mov js sub mov ret rorl mov pusha adc icebp enter ret xor in punpckldq and pop or or daa mov dec andl or adc addb mov outsl push or or test xchg or js aam mov lahf xchg mov repz std jl ret inc rorb sub sub jge lods sbb mov add jb pop scas rcrl dec enter push adc dec and cmp dec call mov fmuls (bad) jmp or jp sbb bound subb jg pop aam adc sti and xor cmp lret bound add int3 sbb and dec mov stos or bound mov push cli adc loop rolb nop sub subb or mov cmpsb inc push fwait les ret bound cmp arpl addb lcall push or push cwtl adc or sub dec lods cmp inc (bad) mov test cwtl push movsl or jmp bound or les add pop fdivrs mov or imul or fdivs rcrl fimull loop das cwtl popa add and cs dec xor bound int3 sbb jo xor cs push adc sbb xchg mov and jo or (bad) push xor or push fsubs test aaa leave or jl inc mov data16 loope inc fcmovb xor sbb xor or add and pop int3 adc or dec and lea mov rolb rorb data16 or xor mov (bad) lahf lcall and xor or push or (bad) movsb and inc xlat add int loop add in add push or sub inc jbe xor or loopne call fisttpl ret inc add or or add or imul fimul or adc adc sbb bound aam xor cmp bound or or popa lea lcall lods or adc xor sub pop sbb loop and dec cld xor xor jns loop insb (bad) ficomp ret loopne dec xchg clc outsl dec inc sub or and nop fs or test or dec in cwtl iret sbb cmp push in shr jmp arpl dec xor fs mov xor repnz xor add je jg mov or dec sbb les add dec dec aam or mov (bad) cmc sbb adc or sbb mov or sub pop loop adc and and and ja sub rcrb loop push adc sub (bad) push cmp or mov mov nop dec leave adc fdivs or ret dec bound mov loopne cmp addr16 adc or fiadd and mov and lret and xor xor inc add hlt or adc bound (bad) pop jmp cs fwait sbb jecxz and inc inc cmp cwtl or (bad) inc int3 sub mov cli stos and dec into nop fcoml ret out dec jmp xor (bad) xor into test cmp inc js or or mov in or and add and add enter outsl or test push enter and arpl or dec lods cmp dec adc or ret sub xchg rolb dec lock mov and add fmull mov sbb dec sbb (bad) sub pop test mov xor or and xchg nop stos movsb or inc fcomp or mov xor inc leave aam add sbb push xchg pushf or mov adc aam fdivl push mov and add or and sub mov or adc and and arpl or and jo ret (bad) jmp xorl jns gs jmp or inc inc hlt xchg or or or or aad adc or pop or bswap mov jl frstor and or inc or add sub or add int3 pusha push or pop (bad) and push adc icebp xor pop addb add mov jmp aam or inc sub sub jno or fwait sbb enter add and fdivrl test adc or sti jl dec loopne ret jns and (bad) xorl mov lock dec sub sub ja xor daa and loopne push mov imul les xor les xchg and pop cltd or sbb stos adc or add inc xchg adc (bad) test mov je repnz aam test mov loop leave xchg mov jecxz dec out sub pushf loop mov xor adc push inc mov lods dec add popa shl add pop or and mov inc hlt (bad) jl js lcall cmp bound bound push and sub mov dec in rorb inc rcrb sub xchg push sbb jb pop nop pop mov and or sbb add or loop sbb push pusha and sbb es pusha mov fs rcll and data16 mov leave jle mov (bad) loope jg out clc (bad) cmp xor or andb adc xlat jb lods jmp shlb fiadd add test insb adc cmpsb lcall mov jns popf dec in xor lods dec push js jo push inc call sbb push xchg cmovns mov test inc test call pop in ja cld or adc aam (bad) cmc dec aam addr16 or test dec or ficom xor mov movb jle stos push inc cmp mov adc mov pusha scas movsb sbb test add jnp inc rolb push into inc pop leave sbb rorb sti push call mov adc cwtl jb and (bad) sbb aam lret jbe mov sarb push les or popa jo js and inc sbb adc add and sbb enter and aas xor xchg xor inc mov xor inc adc or inc and mov pop (bad) mov bound cmp imul or repnz or and icebp add push adc movsb push push cmp je or cs or fs add clc adc and das movb aam mov jl fwait or cmp jnp and or xchg inc popf sbb mov fisubrl xlat mov cmp loope ss or mov pop bound (bad) dec dec xchg shrb das adc mov ret andb lock fcomps ret and rorl sbb sbb xchg call clc push aam add adc ffreep fucomip mov and out inc cltd cmp dec fstps (bad) and xor add ret or sbb and sub lock sahf nop adc sub sbb or dec fdiv mov mov fs (bad) or sbb or sbb cmp or nop (bad) adc and adc lock sarb push test sub xor sub pop mov adc mov inc movl sbb or adc adc hlt mov stc mov add fstp sub push int3 (bad) jns out dec hlt mov lret in adc and pop fcoml movsb subb xor or scas dec inc test xchg push inc add (bad) (bad) dec xlat cmp les xchg adc das adc popf xchg mov enter adc lods nop sbb loope movsb cs test sub ja cs in std jb roll or into ret inc adc adc leave loop cwtl dec adc inc xchg sbb jo or inc cmp xor pusha add cmp adc push aam pusha jbe xchg mov inc inc dec mov dec and je xchg les mov add xchg test mov add mov cwtl and pusha andb or cwtl sbb or add or add bound cmp push lea inc mov loope (bad) dec inc add sbb adc int3 lock bound je les dec or aaa aam dec stc or rclb dec frstor cmp cmp bound inc mov aam repnz shlb insl sbb mov inc mov adc xor push ret fmuls dec js cld js dec pushf xor aad push imul in ret addl loop (bad) lock push mov push hlt je sahf int3 pop inc rclb call test adc ret jl sbb push test xchg pusha int3 ljmp xor lods inc leave adc cmpsb (bad) xor fistp dec mov shl test loop pop push (bad) xchg cmp nop (bad) scas xor test mov inc imul int3 pop in jo push dec add jnp mov (bad) cmp dec pop inc jo insl adc (bad) lds mov loopne adc (bad) inc jl inc and cmp in and pushf and dec add addr16 pusha dec jo (bad) jno ljmp cld dec (bad) (bad) or (bad) mov push jmp ret bound xor add inc xchg bound and adc inc sbb dec movsb or (bad) sub xchg inc imul add mov adc inc shlb test push or add add bound or add jecxz das loope xor lcall pop or jg add dec loop sbb inc mov addb adc and es and and xor insb and and sbb addb andb in push dec dec or pop xor cwtl cltd jns bound cs lock or inc addb (bad) push andb add pop adc push jge clc jns (bad) mov (bad) mov mov sbb adc inc rcl mov adc xlat or inc mov sbb pusha enter ret bound les mov adc or shll sbb cltd xor and pop data16 jne inc addr16 imul jno mov dec fcmovnb adc or loop sub and or (bad) shl and adc push or sbb outsb cmp nop sbb cmpsl jl test add andb mov sbb or cltd adc arpl popa and pop inc jae leave or mov or cmpsb mov aaa sbb movsb or inc pusha and into sub inc push mov push or xchg in mov ja sub loopne push (bad) jo adc or (bad) xchg add adc inc jl and in add cli sbb (bad) decb and in and mov and loop lods push test daa add arpl test cli (bad) or push sbb or sbb sbb (bad) das inc xor inc inc int3 cmp and aaa aaa or fisttp push sub mov or xor push and arpl bound ret inc nop adc popa adc bound aad or iret aas mov or jecxz (bad) xlat add (bad) inc add adc sbb (bad) pop add addb enter hlt xchg lock add and mov and (bad) daa adc xor cmp aaa and xor push js and data16 jb fs outsb adc hlt or or bound fild add add adc (bad) add adc sbb bound add sub add cmp push inc int3 adc xchg and xchg add mov or xor cli push (bad) jg mov and mov inc xor test xor nop or adc cmp push sub or and pop inc pop imul insl cltd push test mov or nop adc sbb loope daa push pop or add and xchg push loopne sbb push add cmp inc add jae or add cmp adc out ds mov (bad) fimul pushf shlb mov dec test push (bad) (bad) aad js ret dec dec in or or adc shrl mov or push mov icebp add shlb push lock and adc das adc sbb xor xor sub data16 inc xor aas inc pop ds dec fisttpll sub movsb push dec add js cmp lret or or outsb add xchg (bad) rolb fadds (bad) add xchg aam push inc loopne cmp and and mov bound inc leave add repz pushl adc call es pop or (bad) je add pop push or jno in es dec xchg or mov xor cli mov stc aas sub (bad) or lds mov add xor pop dec into add lcall (bad) dec add add mov inc dec or mov fbld sub sti ret aas mov sbb lahf add movsl in sbb fwait adc repnz notl sbb fs aad pop test adc daa fcoml es or shlb adc test loopne mov jo dec mov add lcall and movsl jno push dec sbb mov cld add lods push pusha cld cmp scas and inc icebp lret outsl sbb xor int3 inc jno inc and sbb sub sbb inc sbb add dec in sbb in or mov cmp cmp push xchg je inc add sub pop sub or gs cmpsl dec and adc add lcall in nop jl ja xor pop sarb test sbb enter iret inc xor xor inc jno (bad) ret (bad) leave call push mov mov pop int xchg imul and cwtl push inc inc add rorb add lods xor int3 dec sbb adcl adc enter movsl inc adc rorl adc and sarb mov dec xchg sbb je in mov and add or and add dec movsl adc sub sub adc or cmp nop lds movsl xor sbb xchg adc syscall in cmpsb test or (bad) inc je lret or inc out scas pusha pop fisttp (bad) jno gs mov mov or ds mov in mov push mov or enter (bad) fwait push jbe and sahf jo jne inc aam inc add add sbb add cmp xchg sbb in add dec aas and xor pop loopne lret enter cmp sti into fsubrs and or or pop movsb xchg std add lds inc sti xchg cmp insb lcall das cwtl add mov pop fsubs test dec sbb inc xchg data16 in clc xor adc mov int push or lds mov mov mov adc mov add rcll fs aas push test or pushf adc in je dec test orl and inc xchg jno js xchg push jb rol inc rcrb mov fstpt cmpl xor jmp lock sub and xchg int3 sub or jo add loopne fs dec in jecxz (bad) push nop adc (bad) (bad) movb push dec pop add add sbb (bad) xor xor sbb fsubrl mov ds rcrb js sbb dec out aam into mov (bad) dec ds xor or sub xor fstpt stos sbb xchg mov xor movsl (bad) (bad) rorb sbb in cld pusha inc aam or loop and push inc into adc and shr add mov mov sbb xor sub dec mov sub sbb sub mov sub mov mov in or xor (bad) aam lods (bad) mov (bad) push pop aas sub adc cmpsb (bad) loope mov (bad) out dec (bad) cmc add les outsb aam adc and lcall sbb mov nop push popa loop into or mov lcall sub stos sahf insb js mov ds and or xor std or nop sbb or pop orb cmp mov cmp lret mov scas dec push mov sbb fstpl or mov mov pop or lahf mov cs adc or add add sbb andl add jae jle movsb and fimul into jmp sti or add and adc pop adc mov sbb push sbb cs testb sub js or add cmp adc popa jno out inc (bad) cmc jl lods and lcall pop xchg cwtl xchg xchg push mov lahf nop into sub adc jl fwait sbb std orl push (bad) cltd push cli and or inc je mov dec adc inc cmp mov pop out or xor adc cs or or out into xor wrmsr jo mov sbb sbb sbb popa sbb jg mov pop xorb and outsl push or sub ss pop jno xchg fmuls inc out lds or faddl popa hlt divb inc aas out sub jo or mov mov cltd and je pop jle sbb adc push cld jbe shrb xchg push pusha jae mov adcb out ret mov xor mov add jo xchg and dec cli rolb xor fstpl mov aam cwtl test cwtl mov mov scas push mov mov mov jmp add fadds test xchg lcall bound sbb sub add aam adc int3 pop enter shrb hlt cwtl inc rorl sbb dec jno jle into movb xor mov xor sbb mov loope mov push insl faddl sub xor mov xor mov fwait shrb loop add sub xor into xor push gs xor mov mov sbb cs xor or jmp in sub xchg and xor pop clc add push push loopne and and and jl scas jg addl pop or (bad) or jl (bad) rcr mov dec xchg call mov cmp or adc dec sub or push jmp inc jo scas je andl fcoml adc aam cwtl add add xor pop adc movsb or or cltd or jb or mov sbb popa and js aaa daa pushf sbb mov mov into xlat es sbb or loopne loopne es or push lock into gs xchg icebp out (bad) js les loope adc insb notl (bad) cli dec mov leave in sub pop or or mov add push imul das adc push mov or dec in adc sbb sub movsb and das call test and or sub or in xor test aam push scas cmp adc cltd ljmp pop je fcoml lcall in jo pop call and xchg imul inc popa cmc sbb stc lret cmp sbb std jo add insb rolb fisttpl and push sbb jge popa out or fisttpl add mov ret or sbb int popf adc and lahf adc adc or mov fisttpll into shlb sbb sbb sbb out sbb pop xor call inc sbb cs push sbb outsl sub push gs cs add test lock into jo mov and mov nop ds out fmuls sub les outsb insb add add xchg mov and sti jecxz inc xlat xchg mov jo mov loop (bad) outsb cmp inc out sub push lods and hlt insb ja sbb cltd pushw cmp xchg inc clc adc push sbb inc andb orb add xchg jl in out outsb dec mov jg enter fiaddl (bad) imul mov mov xor clc ret add pop (bad) xor shufps jns or sub adc enter into xchg pop and or dec sbb dec and push inc cli inc and and xor cmp nop mov es sbb loop fsubs aad or adc xchg pop or cld xor data16 push or cmp xor or add mov je test mov scas cmp icebp push xchg flds ret lock or and sbb cmpsl daa inc mov pusha and enter sub or dec or sbb sarb jmp outsb pop sbb jns cmp mov lods je sbb out nop sbb inc sbb and fisubl xchg dec cmp sti sbb jo or clc xor mov adc pusha push push fwait xor aam cmp jl es adc test loopne stc pop bound or add add cmp dec cmp ficom jmp fdivl or or add bswap xchg dec add or movsb mov or or mov mov mov scas sahf mov insb enter fsubp js gs aad in or ljmp sub out scas or jmp adc cmpb xor repz or or dec call sub or mov dec or or cmp cmpsl inc mov xor inc ljmp cld add clc xrelease into leave or (bad) mov subb rclb push ret and add insb add or add (bad) mov imul sbb in xchg or sub or sub cs add xor out sbb or push (bad) jo jmp test in mov (bad) mov adc and or xchg adc add cs mov fs or sbbl bound mov dec push or iret or arpl sbb and fsubl pop icebp fistp or sbb pushf mov lret out xchg sub add jl xchg aam out cmpsb or imul and mov fsub pushf sahf mov adc enter or or dec orb subl dec mov pushf ret and cwtl les mov inc out dec add xor or data16 js or xor or movsb or orb subb scas test or or call in enter pop fs cmpsl and faddl scas stc in cld nop jno push into rclb shrb shrb jp stc orb mov into stc fdivrl or add into jp mov mov sbb aam inc jecxz gs adc push icebp lods adc loop ljmp rolb sub imul sbb fstps out in adc or sub fs and arpl mov cmp or jecxz xlat adc into in adc sbb (bad) repnz lock xor push in insl enter les push and or aas pop sbb mov into iret jmp cmp or xor in sub leave test lahf or icebp jmp xchg dec adc mull mov xchg leave mov pop fmuls dec mov or cmc sub dec xchg xchg push sbb imulb inc (bad) int3 adc push dec (bad) les int3 nop mov jns enter dec push nop pop adc xchg pop cltd cmp test push in mov jno subl mov lret adc push (bad) or adc cltd push or or orb sbb inc sub and and or jl adc sub inc nop mov inc push xor rcrl and or lods add push push pop add pop sbb sbb jmp loopne or sbb sbb or sbb sub dec mov arpl sti sbb dec add inc pop pop xor sbb dec in int3 push in or jle sbb js and sub push lods or mov mov and push sbb out scas subb xchg adc fwait jb xchg xchg adc sti mov xorl les test mov inc and cmp pop insb add cld dec sub aad jp adc xchg mov test insb xor repnz jae js jo and daa push or mov or sbb adc out call push popa or scas pop decl lret dec dec and adc je jae cwtl push je mov repz and data16 sahf in lds nop cmp inc cmpsl into pop lods or out pop cmp pop fcoms dec je or mov add mov xchg xchg adc orl adc add mov bound nop or push push sub jno pushf xor jmp outsb push andl inc xor test call imul iret mov mov xor ret mov sbb inc fnstsw or adc cmp enter inc repz std fwait jo or (bad) lock and lock mov dec rol mov cld add xor dec sahf xchg push test out shll int pusha xor and mov mov scas sub pop sub pop les jl pop insb push or inc orb (bad) jae insb mov inc sbb sbb ja out jnp push shr or dec xor and loopne pusha xchg inc inc bound xchg push mov or xor sbb out sahf mov add adc sub orb add or pushf test jae nop ljmp inc or or bound (bad) and out and inc cwtl adc dec mov outsb inc mov xor or add sbb add and push pop adc sbb adc or push push xor push push sbb fildl outsb out sbb ret add inc and dec and xor jp mov movb fisttpl or fwait and or loopne sbb lods inc xor arpl or push and je dec mov fwait lea loop fsubrs cs sub cmp push ja and ret cs or mov fisttp les mov or leave sbb nop or (bad) fdiv stos or shll js,pn sbb adc xor and inc bound xor push mov push pop je adc adc xchg pop or pusha or pop pop int3 dec lret or sub (bad) pusha pop or sbb or and and lret daa xor or sub sbb sbb xchg ss sbb ror jp les adc fdivl sbb arpl and push aaa xor pop xchg clc push lcall or cld add mov add add bound adc push mov cwtl add sbb rcrb lds mov push jne loope and rorb cwtl xchg je mov sbb pusha and fstpl out or or loopne fdivs and popf and pusha nop or adc pushf sbb xchg cmp nop nop popa fsubrl or xchg and (bad) (bad) je pop push lea add add rolb pop adc dec fs pop and adc or xor sub lahf cwtl and daa or xlat call inc inc xor or rcrl cld mov cmp in add pop add into ret or hlt enter sub sbb push inc inc dec pop add aam fdivl dec punpcklwd mov outsb shr xchg ret and or adc and lock or hlt es jmp sbb test sub dec inc adc sub or outsb and cmp xchg and daa adc iret mov rcrb xor int3 ljmp jo shrb loop mov sub inc sub int3 stc mov or fsubrs xchg rorb pop adc add pop js xchg dec in mov cs dec clc inc or dec or dec or add push movsb outsl int3 sbb mov dec nop sbb fwait leave mov adc sbb or dec sbb push sbb scas pop mov call test (bad) or jno push jns or or mov andb jmp lds out sbb inc and inc daa gs pop pop adc scas xchg (bad) popa push and push pushf or push icebp and and mulb and cmp or pop loop int3 or data16 jo inc jnp inc mov or in hlt orb adc cmpsb dec xchg or scas mov push mov dec rcrb and lds cs in or pop (bad) cltd push fcoms fistpl xchg popa out jmp movsb repz cmpsl mov mov out idiv xchg and fmull or pop jl call inc incb into lcall lds mov sbb xor movsb jmp mov mov or inc lock add pop add lock leave enter jo or loopne je outsl out mov pop fs pusha test and insl fimul or or (bad) fisttp adc or or dec add jae shrb andl stos xor pop je xchg inc xchg ds mov outsb (bad) add or or sbb or js mov and or shlb pop clc mov xchg adc pop stos add xchg out push rcr js sub lods arpl call push adc sahf pop sarb xor enter mov inc add or or sbb fdivr and sub into mov or stc sbb (bad) in and inc call fstl cmp pop add lock cs in add loopne popa pusha loop mov mov add inc add and aam pushf lock xchg add loopne inc jecxz hlt fs mov scas dec pop add int3 ret in stos or in and std jmp push adc leave mov cmp fistl inc in les xor dec push push cmc insb cwtl mov add xchg sahf xor inc inc dec enter test sub test fisub mov push and xchg sbb mov addl mov lcall and dec cmp mov mov roll mov add in pop cmp jp sbb xor xlat sub orb or (bad) test popa mov cmp sub adcl sbb cwtl push je scas mov rorl popf mov xchg inc shll inc (bad) dec pop decb pop pop pushf inc cmpsb icebp mov enter jl add std mov mov pop add (bad) aam loopne insl into bound push lcall stos subb push fs adc sub and and sub inc pop push lret (bad) cmp and loopne into les loop,pn xchg jns fmull xorl push pop pop xor dec push sahf sbbb or mov xlat adc es push or das mov bound out fsubr cld and sub sub cmp adc int jecxz push cmpb mov push dec lret hlt jns call pushf mov loop cs inc sub adc mov pop dec adc sbb hlt cmp cmpsb dec dec jl mov faddl mov adc loopne sub or scas mov outsb nop and out fs or adc push xor ljmp scas jo into jae sbb dec jp outsb cmpsb sub (bad) and out dec sbb les or push or arpl inc fs mov sub jnp or xchg lea jecxz mov outsb jl into jge out jle cwtl push in xchg or daa dec loope outsb xchg or mov fadds or mov mov cltd adc or or dec or inc dec push pop pop push dec and add mov dec xchg sbb push lods adc pushf sub jno inc (bad) push inc cld dec inc std decl or call add shlb push and inc inc push inc imul dec loope pushf loop xor or mov outsb add daa mov or adc sub data16 or sub orb scas mov fmul adc sub add sub or pop or sbb lcall or sbb notb adc or inc or mov lahf int3 or xchg cli or xor ficom jmp push add sbb xor loop add std add xchg add xchg (bad) xor fwait or cmp xor or inc add add add or aaa out mov sbb inc xlat xor xor loopne scas aam or jmp push pop (bad) fs or or inc xor rorl cmp add adc adc jl enter orb sbb stos or lods orb xchg or inc jae fs ja push stos or in inc push movsb inc pop xor mov push xchg scas xchg nop mov out mov roll cs or xor and sbb inc push enter dec movsb push dec mov scas inc mov data16 and xor pop or loope negb inc cli outsb jle andl adc or out push and mov xor orb dec cmc cwtl decb add lret subb xchg mov dec dec pop (bad) clc and or adc mov in mov push adc les mov dec mov fwait leave or fsubr out xchg or dec xor scas cmp inc jns inc xchg cmp dec out inc cld imul outsb or jne arpl scas cld daa inc xchg or dec clc xor orb sahf mov ja and dec mov jmp into stc sbb or and scas sub dec push inc or in subb adc scas loopne into out dec sub pop test hlt add insb add jb mov adc xorl or dec jne ja fs jl into (bad) push adc out add mov les clc adc adc sub xchg and movsb xor or idivb sub or adc mov push xchg add nop and add rolb outsb fsts cmp dec arpl cld sbb je cmpl lock into or loopne xchg or out scas or dec sbb cmp cwtl adc xchg xchg into or sub and inc dec mov mov and xor repz jo fs or adc adc xor mov or in xor or pop loopne sub or mov dec mov loope hlt incl scas in add xlat das mov test inc push push push or lods dec cld xchg lds in outsb out mov int3 and or mov push add cs add arpl sbb mov outsb mov and add subb xchg adc aaa sbb or dec or and and fildll (bad) sub sub call or mov pop or push or (bad) icebp jne into lcall adc push rcrb out and je orl clc xchg js add pop adc cld adc sub sbb dec add adc (bad) xor sbb xor nop dec adc adc nop enter stos or cmp into test out mov adc push nop mov adc xchg xchg dec xor or lock pop add jb cs into mov hlt and negl cmp or mov sbb or and addr16 xchg dec pop aad mov ret pop ja or rolb call xor or cs mov adc int3 and or inc and faddl cmpsl orb mov mov xchg sahf and and loopne mov adc lock or push insb dec or scas test dec mov in inc out xor sub and push xchg mov and rcrb and mov mov mov push aad enter fistpll je xor push pop lds and mov popa lcall and cmp add adc pop or (bad) xor sub add aaa mov roll fidiv xchg add mov fadds xor clc leave add fstpt and mov outsb int3 inc mov mov int3 or (bad) pinsrw std fisttpll loop pusha jmp cltd out ret stos (bad) gs lock xlat sub xchg dec test or das jnp xor cmp pop aad jecxz xor sarl test (bad) aam push mov lock jne add xchg bnd insl mov addr16 push fsubrl dec jl adc or divb (bad) incb cmp or call stos dec cmp cwtl push or gs inc scas sbb inc rcl loopne lds stos sub jae add jns adc sbb cmpsl icebp inc jecxz psrlw fcomps repnz sbb fsubr loopne jo ss divb dec add das xor sbb rcl xlat dec jae ud2 jg es arpl (bad) jbe pusha or xlat jge movsl cmp fisubl jns jg cmp push mov rcrl add push rorl jnp test xor sahf repnz fcmovne lock jae push jmp out pop or sbb adc jge xchg inc mov mov mov cmp or icebp pusha bound mov flds orb hlt test add dec jae add add add add icebp pop push je lret enter mov mov jns push jbe shrb jnp jb popa testl jno jbe pushf nop jnp lahf sbb jno mov cltd add inc jno add int lock inc leave jmp pop pushf sub stos xchg xchg pop sbb insl icebp adc fisubl jns (bad) (bad) or push inc aam pop psllq fistpl adc adc cmp nop (bad) mov cmpsl cmp pop pop jecxz aam mov or sbb jl pop (bad) mov test cmc lds add enter inc mov inc (bad) nop xor jl cld add jnp inc xlat push xchg rcll enter adc sti adc loope and inc sbb add jns dec leave fdivrl add (bad) das adc mov push add lds cmp mov cmpsl xchg movsb xor push mov push inc add mov dec jl sar inc nop nop inc jns pop add push or (bad) or sti jp inc sbb xor sarb lock imul and sbb add dec (bad) mov xor test rep call push sub std test pop addb mov fsubrs dec jae jge loope or je or push pop daa les enter mov insb iret int3 pushf (bad) into jmp and and xor jge push shrl test and and jp in inc and loope icebp lret inc mov jae mov popa adc sbb dec mov and mov sub jae daa dec (bad) imul jb invd inc sub mov mov add and dec cltd xor add call les aas add pop mov adc ret dec cld lea dec fisubl xor dec add jo add push mov xchg mov fisubl or stc fisubrl or push cld es aam add cmpsb jmp add fidivl mov add mov cli inc mov inc int3 icebp add lock add bound dec mov popa add add pop int3 or jmp inc addl jo and add stc inc pop orl ret in test (bad) sub insb dec sbb jns mov xor xor es or or repz mov cmp hlt and pop or adcl aam imul enter dec call pop icebp popf push mov and dec ret jbe roll mov cmp pop subb cmpsb xchg pop clc mov inc movsl and addr16 test xor test jae jnp cwtl pop add and addb mov out pusha sbb mov adc jl add add cs shrb ja (bad) jno call or leave cmpl dec jp lcall lahf add jb cmp jae stc cld icebp dec repz dec stos push sbb addb sbb xor inc and repz and lret and jae out stc or xchg add jnp sub adc xchg stos add pusha lods xor and dec sub pop mov (bad) inc stos push sbb test or push dec jae pop loope sub add jnp je push sbb stos in pusha dec rcrl pop jnp dec mov out lock mov stos movsb add push jae lret negb jb inc lahf nop add lcall hlt dec dec data16 sbb enter xchg and mov push pop (bad) idivb sarb je pusha or mov jne cmc rolb sarb dec clc fisubrl xchg jle fistpll ljmp adc andb mov dec mov xchg push inc repz xor testl jmp hlt push jp mov and clc inc adc mov mov mov inc pushf scas push mov fisubl cmp pushf lock divb push mov lock xchg and dec test xchg in fadds push adc jo hlt adc aad dec mov cwtl mov dec mov ret pusha sbb jnp,pn pop pcmpeqw mov mov or mov fnop in xor es add sbb add or xlat enter mov cwtl es rolb dec jns cmp adc nop enter mov mov push shr sahf in push mov and xlat add stos jmp mov std mov mov fistl dec aam inc pop (bad) cmp ret rorb or hlt adc movsb inc aam or and xchg mov inc pop lret les jb xchg pause cwtl cwtl orb rclb cmc cmpl adc jge pusha leave cwtl clc stos jno adc fmull jg bound sub je and mov lret xchg repz push or call daa dec or dec add jnp movsb incl sbb cmp ficompl rcl push fisttp xchg rclb mov orl and mov or pop push outsl addl maskmovq divl inc pusha inc repz mov xor bound aaa fistl (bad) xchg fiaddl repz mov push sbb in jns mov xor lds jl dec jge cltd rcrb rcr jns and pusha sub in lods xchg stos lahf cmc push pushf daa xlat insl cmp jae movsb inc test push add (bad) repnz inc sbb or clc dec sar and add imulb rol and jno int3 pop mov subb mov sti inc roll pop adc movsb dec mov dec jge or aad test add push repz lret jae arpl and and les cmp sbbb dec jno push pushf enter mov insl int3 adc js pop cmc enter lret or add jne lret mov sahf inc sbb inc lret jl pushf cld addb fcoms lock pusha dec loope mov cld push xor mov fucomi add pop mov mov jmp jg stos dec cvttps2pi dec aam xor pop push (bad) mov mov and jbe test mov add lds repz popa rcll adc into jmp je les repz mov mov jno shll into jo sbb and (bad) je jnp lods insl std push bound ja repz mov and xchg mov repnz dec js bound les or inc inc jo xor cmp sub popa pusha mov and adc inc repz and add adc add rol dec ja xchg pop rcrb cltd lcall xchg jb out fistp call or or jl xor enter and cmc sbb lods xor adc imul jb add dec (bad) and call icebp push in hlt jle adc pop add cli repz jae add pop in push inc and lock sub addr16 add mov call add add xor inc push adc cmovnp enter xchg inc repz aam jmp cmc inc rcr xor ret pop enter pop inc mov icebp test or sub add jp inc add bound adc stos dec pop enter sahf add mov mov add xchg out clc mov cmp in repz xchg xor cmc pusha xor pop dec and mov mov add dec jae add test les push push fcmovb push add hlt fstpl push jo ja xor pop sub ljmp add (bad) or push fstpt fadd adc jae push rcr or push fdiv add addb das push xor fcmovnbe sub mulb add xchg pop jnp fisubrl fs xchg sub jne pop jecxz popa add mov mov push sub push jmp dec sub mov xorl inc loope add rol mov sahf rcll dec clc pop pushf inc pop jne das leave mov mov pop imul sbb xor jmp xor push and orl (bad) shrb push adc add xchg xchg rol mov outsb mov dec xchg ror pushf pop jmp add fnstsw mov (bad) or pop add and push daa in mov xor stc popa sbb jbe push loopne imul and add (bad) add add stc subl xor leave into iret and push inc inc add adc daa mov push ret push push pop mov push pusha fimul clc arpl push xor ret mov adc cmpsl cwtl or mov add fmull (bad) mov pusha fidivl test movsb add pop inc popf cmp movl inc jno xchg pusha sub scas mov inc xchg in ja and movsl rcrb mov pushf adc (bad) jl sahf jns fadds sub add xor imul das add dec jbe jecxz pop add cmovo loop pop test in cwtl add and cmp imul (bad) mov rolb sbb scas jb bound lods add dec loopne in mov jmp cmp cmp add gs call ret pop repz inc or pop mov jns add out cmp stc mov pop xchg push and jne pushfw (bad) mov mov mov or xor and inc and pop incl xchg mov xor or adc sti jnp or or sbb push sbb inc scas rolb addr16 int popa pusha cmp stc cld adc add data16 add icebp push push mov leave hlt inc mov xchg daa int mov sub dec hlt add mov cs (bad) repz push dec adc adc adc xor cmp and lods cmp movsb cmpsl mov and jns in jo rol lock mov lds or or lock out stmxcsr pushf int stc inc fdivrl pop daa fcompl insb mov addr16 xor push xor xor inc loopne js sub cwtl xor (bad) and sbb and sahf flds in sar int leave mov add dec xchg xchg dec mov mov cmp xor adc addr16 (bad) push pop outsb cwtl in adc add out add stc or pmuludq xchg sbb or xor inc cld pop or xor add mov jecxz jbe mov inc in pop shrb js jnp repnz adc out in bound mov add mov inc add fs fwait mov xchg divl add cmp int mov and mov inc pop mov mov es call add int3 fcmovu inc mov mov inc repnz or sbb push or sbb add int pop inc push sbb out mov jb jae icebp ljmp cmp sub les (bad) (bad) mov push sub inc cld push inc iret test push ljmp add mov stc shll xchg and inc insb adc cmp inc pop add mov (bad) cmp rcll dec cwtl or inc jecxz pushf test or xchg hlt mov adc out mov std arpl mov daa or mov or adc mov aad push hlt in into es shlb inc mov xlat add or and or lret mov outsl mov xchg insb add scas push mov adc push leave icebp cmp and scas lcall adc loopne push mov ficomp movsb and out mov std pop sub aas (bad) jp xchg fmulp test jo inc out xor and insl int fisttp nop outsl iret dec push push adc std or push in inc nop adc mov cwtl pop mov fcomip (bad) test imul and inc push test cwtl add aas hlt or int in es dec and sbb adc pusha in mov mov lods ljmp sub cmp or xchg or mov decb arpl jmp add lods xchg dec (bad) or lcall mov inc in mov pusha cmpb push vmovaps rclb call xor repnz xor push rorb cmp in mov and cmp popf add les (bad) or (bad) hlt sub mov sub inc jecxz test and xchg and inc out mov mov jp xorb jbe nop sbb cmp push inc cmp ds mov mov jno movsb xorb add inc mov dec adc int3 outsl jno add mov dec lock xchg int mov xor sbb xchg inc fdivrl add or xor mov pop mov jb decl (bad) mov lret mov xor sub in loopne or inc mov pop or sub pushf add (bad) lea pusha push loopne incl xchg xchg or clc push or adc mov icebp pop lods jo fs pop sbb mov adc psllw and enter (bad) mov rclb push call add pop fsubs mov addr16 push cmp inc decb scas xor push lock pop jb or or js ficomp sub inc popl push push loop in xor adc mov lret nop xchg push dec and xorb out mov es lea or (bad) loopne sub cli rcrl mov xor or jmp loopne cld fadd iret jbe stos aas mov sbb std fldenv dec add fs lret es aad (bad) xchg adc out jb xchg mov jne pushf inc sbb enter fdivs mov dec rorl adc cmpsb or or loop cli jp add insb sbb aas popf int mov mov xchg popa ror ja pop loope pop lock jb call jne add scas sbb pop inc or xorb scas mov stos or adc mov insb std popa mov data16 sub lock leave pusha cmp adc adc cmpsl sub xchg sub fidivl cmp ja sbb cltd fnsave push or in clc mov add in xchg test ret and xor test and cltd sub or call in xor je add (bad) jne or push push daa out or ss (bad) push adc lds mov insb cwtl enter (bad) lock jbe test add or or loopne xor loop jno rclb mov or ret loop loope mov push add or mov or jb mov pop dec add mov xor mov nop movsb dec repnz rcll pop and mov fnstenv out adc int3 inc inc lock mov imul gs push stc sub inc hlt mov push mov bound cwtl int3 sbb (bad) mov pop sbb pop cmp (bad) out pop pushf and jno xor inc xchg pusha cmp mov pusha enter clc dec inc pop sub mov xorl cltd (bad) xor jb or xchg (bad) in or add pusha ja xchg enter mov jmp push dec xor push sahf inc add cmp int3 into das in dec repnz pop mov es ret cmp cwtl pop sub push sub dec rdtsc mov dec movsb push arpl xor sbb dec leave loope xchg adc cmp pop daa pop bound das mov jecxz sbb adcl arpl inc movsl outsl add push jnp cltd mov jno ret rcr lods add cmpsb imul fdivs and test in rclb fildll lcall aam call mov icebp test mov pusha push cmp loop out add xchg jl xchg (bad) mov xor mov cmc aas cmpsb push and push icebp in sbb fdiv sbb pop pusha lods mov sub mov mov pop jmp pop jae xor movhlps inc dec jnp in rcrb mov cmpsl jnp lahf add sti mov jo add or push add repz rorb scas xchg sub add (bad) cwtl mov mov push icebp sbb rolb test fcomps mov sub mov (bad) jae aam mov push push test hlt or mov aaa outsl sub ds add xor inc ficom decb loope and (bad) movsb dec repz sbb mov xchg fcompl adc add movsb cmp call mov mov (bad) andb push je fdivr sub iret adc ret xor jns arpl dec dec call cmp ds adc sub pusha sbb add rolb add leave fidivl inc jmp loop push lahf pushf xorb cmp pop dec repz adc in adc and or mov call jmp adcl je mov mov add lcall sub or popa or sbb mov xchg test adc push or jns (bad) test mov adc dec and (bad) sub shrb sub dec xchg adc sbb and push dec arpl and lahf fcomip xchg pusha addl gs nop xor sbb repnz and lea cmp cmp movsb inc cmp and out insb and dec add icebp sbb sahf adc fstpl mov cmp adc inc pushf gs fisttpll ja pushf sub xor xor xor aaa mov and out add sti mov xchg pop jge in inc jmp pop arpl add out jbe xchg test in out shlb movsb push and push popf mov cmp mov cmp pop jle ret stos add imul jno roll movsb movsl mov nop dec mov icebp pop testl test in jb in mov dec shlb fmuls mov jne adc push repz imul pop add jge icebp (bad) jmp xchg xchg mov adc push loopne xor jmp test add and push fsts test and sbb xchg mov hlt xchg pop out add adc adc sub xorb and test adc jl js or push test rcrb icebp enter jae pop jge sbb pushf loop out xor clc mov sub mov and out loopne add fidivr fs mov push and dec (bad) xor std add arpl and loopne nop xchg in in movsb (bad) dec fnop mov aas cmp push jl,pt pushf mov jnp andl loopne aam es or iret jecxz jl je dec push and adc fcmovu add lods fsubrl roll and pop pushf mov test mov outsl jl xlat add jle ficomp pop push in int3 test dec lret cmp call cltd push dec mov pop add cli adc xchg add mov push add outsb in je es icebp pusha inc or mov stos mov ds xor mov pop lcall lock add ds and int push inc jne cs popf mov cld mov lds adcb mov dec lret pop inc outsb add jl in cltd aad and adc test arpl orb divb idivb pushf cs and sbb sbb in push jl adc inc rcrb inc mov xor rorl sub xor je fisttpll inc sbb and inc inc add inc std or clc decb int sub xchg or add sub lods gs add scas mov sbb inc cmp add xchg out pushf call sub nop adc icebp sbbb xor xchg or add xchg mov shrb les xchg xchg int3 stos (bad) je push cmp xor inc mov sbb push (bad) lds lcall (bad) xor adc xchg mov daa or js inc fistpl pop ret and leave dec shrl in inc xor cmp push push xchg sub mov push or cltd roll bound aam in inc ror and push outsb movsb sub adc je andl jb fld loope popa xchg adc and mov jae (bad) movsl lret push add push inc cli sbb mov and sarl (bad) mov xchg xor cltd fimul pushf push test enter jno decb cmpsb sbb subl mov push xor jo adc stos add mov push (bad) xor rorb (bad) clc ret call hlt pop pop xchg or cmc leave mov dec scas add fcmovnbe stos in jb mov xor lock ficoml jp lock mov pusha addr16 call (bad) iret add ja mov jo adc mov lock xchg push inc add repz loope mov push test push loopne and into sub mov imul and pop std mov add mov cmpsl xor fdivrs sub inc dec iret ja (bad) xor pushf adc mov add xor je xchg pop and cmp (bad) push push add inc stos pushw sbb mov aas and jl pusha lret add (bad) lock std mov call push shlb movsl add and cmpsl xchg inc mov pop fmull es pop dec js sbb push mov push jmp aad cmp xchg clc adc out inc mov sahf push xchg insb jae jns orb testb shll dec inc cwtl dec adc je dec (bad) push push jge nop pop enter sbb and test adc das mov clc negb mov xor out inc enter mov es enter or fwait xchg xchg bound (bad) or repnz or add inc inc xor out push inc lock push das and adc add xchg sar fisubr jae cmpsl andl jecxz jb xabort sahf sbb pop pushf and pop cmp inc test js sub sbb push cmp mov add mov enter pop sbb add test sbb sar cmpsb mov push xor cmpsl sahf jmp sbb pushl mov or fisubrl fcomi pop dec xchg test rorl cwtl js iret clc mov inc fldl sbb cmc mov add push mov dec int3 inc sbb mov lea mov mov (bad) mov mov dec dec push inc jecxz push (bad) or fadd test lods or push sub and push out es jns adc jle push mov arpl mov fdivl mov notl jmp push push sub test inc (bad) lret cmp test les inc les adc jns lock enter cwtl test lret add mov sbb adc pop std sbb push xchg stos adc jge add inc mov add aas jo mov dec out leave cmp rorl sar sbb add ret pop push orb psllq mov in inc out inc cwtl cwtl lahf add inc outsb xchg inc fisub xor adc lods popf movsb add mov lock aas dec xchg sub repz fiaddl mov dec movsb mov jg imul imul minps xor mov pop pushf mov xor rcll loopne cmp adc (bad) jle out jg push bnd add inc sbb cmp imul repnz fsubs ret sub dec fs and mov add nop jg jno (bad) adc or sbb aas add in add jne push add nop les pop inc aam pop jno inc pop push bound sub jmp sub pop pop loope xor jmp mov ret lahf (bad) clc les push pusha sbb xchg add inc cwtl mov xchg jo sarl fildl and ret mov enter xor test daa or pop push adcl rcrb pop inc test add fdivs and cmp add or pushf inc nop aam js add test (bad) mov dec repnz scas xor cmp xor jo inc cli pop jg add scas or add cmp imul sbbl dec dec es add add rcrl push push pop inc dec sbb dec iret or shlb negb dec jle push hlt roll lret aaa xchg or rolb shll and xor xor add cmp movsb pop stos jnp add dec add push xor and sbb push sub in add add xchg test movsb mov pop stos inc mov cld add and mov inc mov mov or cld aas add mov push xor popa adc insb dec sahf cmpl cld jg or fwait popa xchg mov dec icebp lds insb outsl add mov pop lahf scas cld add lret add cmp bound fmul loopne push add (bad) in pusha sbb pop cmp stos and dec pop jmp adc sub ret jecxz fdivl or or mov orb and ss push or add jo cmp add cs pusha add pushf mov fmull ds test xchg mov or inc call xchg test mov repz clc (bad) jno add and jne mov cs ljmp pop pop or cmp jmp ret mov inc outsl push nop mov sub xor scas add aam inc pop jns lret mov lods fldl int3 shrb dec xadd mov xor xchg mov dec sahf add call inc les loopne lcall dec in pusha cmp pusha dec mov push (bad) out jge outsb mov (bad) out mov dec (bad) pop icebp dec inc mov adcb movsb mov insl jmp inc imul out sub idiv inc mov mov mov movsb sahf jo lock dec cld addl dec push inc imul sti clc or sub jb divl (bad) mov xorl or enter jecxz and mov add xchg shrb dec aad lock test mov mov and push jno push dec mov add jae adc jp call inc movsb (bad) fistpl movsb subb xchg lods mov lods xlat push std movsl mov adc pop mov ret cmp les ja sub inc sbb cmc add fild stos mov jp add lods orb xchg jl lock cwtl pop fcoms sbb xor inc dec (bad) jno pusha lods mov mov movq andb sahf add data16 mov hlt fidivrl xor push hlt and mov add into sahf test fcoml outsl je ficompl mov mov add add cltd aam jmp (bad) movsbl cwtl xor inc mov xor mov xor hlt dec add sbb jae add sti mov (bad) leave push popf sub pop fcmovnb xchg aaa push jmp out jecxz mov negl and pop es in (bad) push scas imul and (bad) mul mov pop add xchg fdivrl add push and add fbld cwtl push and lock out (bad) scas aaa dec mov add adc add hlt dec dec inc xchg nopl fidiv mov test inc pop orb inc mov lods cmp cmp dec shrb rclb loope in cmp cwtl xchg rorb xor (bad) mov les pop loop dec les test fwait adc add mov lock and xchg cmc dec repnz fiadd mov dec ds cli xchg insb es add outsl fcom adc pop neg push scas pop push jnp ss xor pop js lret lcall add push and dec aam sub mov sbb mov in mov xchg add hlt add dec ror pop std and out add jne adc dec push jae adc fmul xor in aaa inc test (bad) rclb lods (bad) mov (bad) rolb pop jae pusha and jo sub loop mov lret xlat js test or fisttpll xchg popa (bad) jle scas call enter add jbe in sbb int3 xor cltd xchg sbb inc orl into or sbbb mov test jle rcrb pushf or inc lods adcb ljmp add adc ss xor sbb insb dec inc (bad) nop adc (bad) cmp add sub sbb xchg out loop dec xchg mov fadds cmpsl mov add dec jo call push popa mov push arpl or inc mov and lods mov fdivrs dec and test xchg out mov stos and pushf pusha mov outsl inc add (bad) iret mov sub dec inc mov insl cmc (bad) std xchg or dec cmp test aad push test dec mov call out imul sbb jne ret lds jb loope (bad) sbb pop or inc call or fsubrs push rcll in lods stos sub or mov or std jno add sbb aaa pop mov adc mov xor fdivp popf mov dec fcoms inc jnp sub pop daa stc cmovns xor in dec mov bound punpckhwd sbb or xor test nop adc (bad) aas mov push jb test in sar sbb fild mov sar xor add push js push pop jo add mov add aaa pop sbb push push adc scas sub jns mov lods mov push mov jne sub cmovs add andb xchg mov shr add lds lods mov stos nop cmc repnz add ret sti ds push xor add inc ficom sahf rcr cmp loop fcompl (bad) fucomp add out cltd adc jno pushf in movsl sub imul ret gs mov add icebp sub les jne pop addr16 pop jno pop push adc mov sbb daa mov push xor xchg dec mov or lret and (bad) fwait lds fidiv pop int3 or movsl inc cmp daa dec sub mov out fildll mov out adc mov xchg add add mov xchg add jmp mov loope icebp add pushf push cmp mov scas adc mov xchg or pusha push mov or or cmpsl les loopne fisubr add sub push add push inc aam cmp pop jg sarb addl add inc push orb out xchg test mov add pop lret bound adc cmp outsl pusha and pop daa inc sbb les or mov adc sbb ret sub loop inc jmp sub adcb popa rcrb les xorl cwtl xchg sub mov mov je cmpl mov inc push mov push mov pop mov bound dec cs stos lods add daa icebp and (bad) fildl push pop scas shrl movsb ja nop add mov xchg cmpb inc (bad) jmp cmc (bad) jp test outsb push arpl daa push out cs mov and add gs popa test test dec shrb xchg dec mov push pop and xor shrb mov ret or jns add add sbbb call adc imul push js add clc adcl push ret std cmpsb mov add add mov pusha inc xorb addb cmp out in jbe mov ja lods jle sbbl dec int3 nop mov sub mov push addr16 mov sti lret pop mov push add adc sarl xchg push push mov andb insl push in mov add mov aas xchg xor dec inc and nop jg test or out jl add in fs cwtl and jo ret inc add pop pop insb xchg adc push cmp push fwait icebp ret idiv enter push mov mov (bad) nop shlb or jns push cmp dec xor push clc dec addl nop xchg adc add sbb and sub sbb ret ja push mov xchg js or stos mov rol xchg test cltd sub in aam pop lock pop pop (bad) cmpsl push (bad) neg sub into xor fdivr leave xor aad cmpsl (bad) insl js ljmp jmp push adc push addl push xchg and insb adc dec fadds adc cmc mov jge daa and inc dec jae test fs mov insb sub rcl cmp stos push xchg insb rclb orb add data16 cmp leave inc rolb (bad) (bad) push sti inc rcll mull sub or andl mov xor mov add sub test xchg stos xchg adc (bad) add js mov pusha ret add stc mov cli add fstpl pop jns dec mov and xchg movsl mov cmp cld int push and jne dec and and add inc out pusha hlt or shrb int jns pop cmp mov jno push add mov cmp add aam jp in aas out push stos loope hlt add ss mov mov pop push hlt jne add or fiadd lods in jo scas push cmp mov out je adc je and cmp hlt sbb xor jbe xchg push es mov xchg in sbb (bad) iret mov push shll push outsl push and mov icebp xchg repnz adc mov pop xchg xor dec stos mov or jo pop and dec mov xor loopne dec jo or js inc aam outsl mov decb stos pmuludq add mov cmp das lret add add inc pop std faddp sub cwtl test idivl dec shlb add insl push inc jo and orb jbe or lret push imul xchg adc scas lock inc pop cs test fnop jl aas push movsl rolb in in push or sub or stos inc jl test das aaa xchg rolb movsb les mov lock cmc add mov fsubrs or rcrb adc stc out dec push inc and lret sub jmp and inc and daa mov and cmpsl int sbb and adc enter nop scas pushf sbb mov fwait (bad) cmpl inc xchg cmp mov (bad) xchg dec sbb mov cwtl mov inc enter int3 or iret cmp mov cmp clc push subb mov lcall push add stc hlt (bad) dec mov jo lcall adc pop js pusha and pop iret arpl (bad) mov movntq call stos push pop test or adc or mov pop adcb mov sub cmp dec dec mov pushf xchg inc je (bad) dec inc movsl push sbb and lods movsb dec mov cmp mov daa cmpsb seto xchg cmc (bad) jae mov and sub pop add sahf fnstenv repnz scas cmove out loope sub xchg or repnz loopne xor or es (bad) lods pop pushf test dec int3 cli aam lahf or (bad) or mull cmp xor add sbb dec nop mov pop inc jae or je adcb sbb mov fild xor sub jle sbbb xchg cmp (bad) in sbb push jnp lds jecxz push sbbb cmc pop dec push clc xchg rclb mov push (bad) mov mov cmp add xorb aas sub dec inc pusha and add cmc jno sbb mov lcall movsb mov adc add mov adc clc push push pop sbb fdiv test cmpsb fcompl sbbb pop out add lods aas jb std (bad) cmp inc fsubrs inc call sbbb jbe lret cmpsl cmpl (bad) adc xor push xchg ja rorl push cmp push ja mov add (bad) ljmp stc xlat fwait loopne jne pop addr16 jno xorb loop sub push mov jb dec add insb inc mov fs and jb dec xchg mov and fidivrl jbe push sub pop jmp sub inc mov popa es scas add and push jno add out decl add fs fdivrs cmc cwtl sub jbe rcrb adcl xchg in dec pop test bound loopne (bad) mov push add inc call insb test rorb xchg jl insb inc lods mov and or mov and es popf cld xor lea or adc dec mov test pusha rcll inc lcall daa xor dec movb and mov sbb jge add adc mov mov je mov cltd pop xchg inc inc adcl shr sub lods sbb and out mov adc ja jo mov jne and ret cmp mov mov pop fistp xor loope adc (bad) xorb inc pop jno sub fadds jmp aaa pop ret call inc xchg sarb cs fadds or les inc out add dec ss and inc dec or in ja aam lock sub mov xchg mov mov inc mov movsl fcomps pop fs inc repnz hlt inc xchg adc mov adc out add (bad) out sub push push xchg pusha loope repnz cmp and jl inc xrstor out ja mov pop stos lcall lods xchg je mov push cmp movsl xchg lock aas popa call sub xchg pusha sbb sarb (bad) fdiv test mov in lret mov addr16 (bad) mov sbbb cmp pusha outsl mov sbb jbe adc inc dec je push inc out fwait nop cmp pop (bad) cld loope into je or or and xchg loope add pop fdivrs sbb inc adc into pop add mov insb stos jg je jb add sub dec mov (bad) xchg les out and xlat call or pop xchg inc cmpb lret mov or sub fdivs je mov fimul push mov fs lods mov pop loopne pop into xchg mov popf leave cld adc sbb xor or xor mov int mov jb or add es test mov add cmp bound xchg push adc fdiv xor jns push cmpb xor stos adc jb aam jne pop addl and mov arpl pop or sbbl jp leave push sub lock rorb in pop pop js nop add sbb xor inc adc xchg cwtl (bad) hlt mov mov ror push jne cld sbb sub push inc (bad) or gs add lods pushf test sub mov cltd lods lahf sub sub and inc in push les test fcoml mov jne daa fnstenv movsb and adc jg dec dec bound sbb sarl rclb das fsubrs mov push dec pop leave shlb test adc or inc mov clc faddl in outsl popf int jns xchg inc loop mov cmp icebp test repnz jge repnz lcall test jl xor int dec out roll aas cmp lock insb push lahf xor jne ret xor in xchg push aaa mov mov rclb jbe cmp push int3 sub daa mov mov loopne lcall push xor dec mov cld fdivrp cwtl outsb cmp popf inc rorb inc adc dec bound je mov and push cmp (bad) pop imul jo imul fisttp js inc pushf mov push push in test idivl add leave es lcall insb inc pop out xor sub je mov das pop or jno int and lock icebp push xchg sbb pop add jl adc or aas orb int push push je jbe cmp mov ja dec sub daa int3 jbe cmp cld lea mov clc imul mov test repz inc loope stc out aad pop sahf xor adc hlt test push cld and mov xchg cwtl mov ss subb pop adc cmpsb push push pop and (bad) push (bad) fcomps push fimul jecxz jb int3 loopne or test pop mov andb mov enter leave clc incb sbb add or iret jbe loope dec xorl std out loope add jmp aas sarb in cltd test pusha sub adc (bad) loope push fidivl xchg jl sub bound sub mov xor (bad) test movl fist push pop sub sbb pop adc mov rcll adc jmp or dec jle bnd andl xchg or mov and fcomps test add add or inc cmp data16 int sub xorb jecxz aaa lock push call rolb add cmc imul cmp xlat jmp ret xchg movl dec cld clc pop push jle adcl leave cmp popa out scas insb addb jle add jbe negl sub inc xchg lahf in pop jae xchg mov xchg xlat scas fstpl sbb and ret cmp in xchg add mov lcall gs repnz aas aaa adc jo sbb in sub cmp add pushf cli add loopne bound add add push or and ficom addr16 and add push subl loopne les jl cmp jl adc (bad) les xchg cwtl mov jb xchg jo lret out add enter (bad) or cmpsl fist lea add push shrl std cmp fildl add int3 pop xor addr16 js pop mov mov jbe rcrb jae (bad) and out jle jl aad adc mov data16 xor fcoms inc sbb iret add dec rcll sti dec stc rcrl test jg mov mov add and incl mov jle scas cmp enter pop push xchg out js (bad) xor cmp test leave dec cmp push pusha cmp mov rcll push aam and loope lods sbb push movsl dec stos sbb inc fistp add sbb mov (bad) (bad) cmp mov xchg cli adc add push xchg sub push rolb nop cmp push push push pop jg iret add mov jmp and cmp je sub sbb xor add paddusw mov rclb mov shrl push inc lods loope dec nop inc add sub fwait pusha andl popf aas and addr16 pop xor imul or aaa (bad) cmp fsts cmovl rcl add stc sbb nop and fnsave or stc popa sub and push cwtl xor fadds mov sub rclb and xor bswap call push push adc inc sbb andl mov (bad) or sub add sbb adc dec jo xchg cwtl popa mov pop add xor addr16 xor test xchg movsb jnp inc jg add sub xchg std add (bad) in loop js add int pop push (bad) mov sbb popl mov pusha and ret mov (bad) cwtl push fs in add pop mov lds xor pop jp nop xor hlt cwtl xchg and adc and xchg xor les sub icebp int3 shlb daa pop cltd sub cmp cmp mov add test dec xchg pop cmp adc addb add xor (bad) mov dec or and out icebp dec dec pusha add dec xorb sub stos jno mov mov stc xchg lahf fadds jl push cltd and cmp into pop inc jle rcrb adc xor jl cmp add pop xchg cli mov dec push popa xor nop xor mov dec add adcb fadds add and and int dec jmp sub movsl pop sbb adc addr16 dec jl adc push add bound cmpsl into xor pop cmp cmp cmp sub or in les in adc mov paddusw xchg mov fcompl enter cmc mov bound adc sub loopne movsb inc loop stos int and lock jae push sub adc pop dec (bad) add scas mov inc xchg cld nop add aam ljmp rolb or adc push aam mov adc jnp inc fcoml pop xchg add and and jg addb cs jle sbb add push push and (bad) xor dec scas push cmp sub mov imul add (bad) or adc or pop loop stc dec in ss dec and fsts add stc xor sub std pop xchg xor fsubl mov orb movsb andl or pop add in or sbb xchg and or pop inc gs cmpsb fmuls pusha xchg mov or jmp cwtl (bad) inc movsl push dec sub pop std pop push xchg sub inc and sub and dec push add add test push cmpsb insb or call ljmp je test push jns fsubl sub orb je mull sub sbb das dec adc lahf pushf add push scas cs and add fwait cmp loopne jb add sub in popa lds lock or add cmp sub test sbb add pusha in movsw cmp cltd sub cmp rorl (bad) cli sub jge sub push call mov lcall push sub mov sbbb es scas test loopne pop add jmp sarb mov xchg push mov and pop jae jmp mov aas pop sbb je mov mov pop js push push push xor sub lock pop sub dec xor movsb mov ret and adc add incb xor es and rorb icebp rcrb jb cmp cmp or loope jge scas cltd (bad) jnp hlt adc adcl addl ret cmp xchg sbb mov ds push pop pop es int3 sub cmp lock push inc or cmp sbb bswap add sub and inc xor mov and jno nop add dec sbb lock or xchg addb add bound mov (bad) mov cltd push pusha add call scas jmp jb adc cmpl enter add mov adc push mov sub aam test mov data16 adc push or lahf (bad) xor (bad) cs xchg pop add mov cwtl pop pop inc in xchg lahf xchg push or mov loop xchg or (bad) jno mov jp clc sbb mov cmp and or addr16 xor int3 lock nop add and (bad) hlt subb mov loopne mov and push xchg scas aam rcll mov inc scas push movsb xchg jmp test mov cmp push dec out insb inc test jg nop aad sbb xor add mov cs xchg push test enter leave daa fstl cltd add pop xor and pusha repz (bad) mov lea lcall (bad) add mov enter jge add lcall push rcrb cmpsb call push mov jns es adc xor lock pop cltd and or loop cwtl adc pop inc cld xchg pop idivb inc stos aad cmp cmp test scas in orb xor pop popa in lahf and dec sbb enter xchg or enter es or test or sub add mov sbb mov ret pop mov xor cmp xor sbb mov pop mov iret (bad) xor pop push sub inc push xchg xchg or shrl sub add lea mov cs push push and xor (bad) mov clc mov add push int3 push sub dec adc mov sahf test or fsubrs cltd test push or mov rolb into sub xchg xor push shlb pop mov and dec clc iret or mov subl test add sti loopne fsubrl jecxz mov call pop xor add add adc xchg cld bound inc or pop (bad) mov mov sub and jo ss daa mov sub test and js lods dec and lods sub push dec lds adc iret xchg icebp jb add xchg jmp das outsb fsubl mov pusha sub rcrb and lods (bad) movsb mov int3 push xor mov sub mov leave (bad) inc cmp or por add or mov sub inc add add dec or test add or lods mov xor pop mov je add in (bad) cld xorl push dec call cmpsl andb pop cwtl rcrb add add and and add mov pusha je and xchg mov add sub sub push cmp push sbb andl xchg mov cmp fmuls loop mov inc stos sub rclb mov inc push xor dec sub xchg int test test push cmp adc sbb inc jae je xchg add lret pop adc xor inc dec cld add outsl xor xor std pop in mov sbb cmp cmc flds or push sub rcl jns subl mov add and push cmpsb sub lcall mov outsb fstpl lds push stos movsb sbb (bad) jo orb pushf push sub jp mov adc ds add cltd dec mov arpl orl adc movsb (bad) movsl dec jp pusha push (bad) clc sarl popf psubsw mov cwtl sub mov and jmp popa loop mov (bad) dec arpl aam mov jecxz int test out add (bad) mov fwait sub inc loop stos adc adc sbb dec adc jns rcrl into lea ss pusha mov fiadd loope add mov sbb mov fnstcw cld push into aas jnp test stc fs push pop fistpl adc and fdivrs hlt lahf add lds fist clc mov mov cltd flds popa pop ss sub jmp jp jle popf mov (bad) inc inc pop or andb imulb pop ret ss cmpsb add rep in mov jp sub test mov push adcb bswap inc mov ss mov pusha lcall pop inc cmp xorb les inc ficomp in clc push mov shrb leave hlt arpl pop mov insb mov (bad) faddl and dec sbb mov fcmovnu mov lcall add mov or mov mov or inc cmp inc ret or leave dec repz mov icebp roll add mov xchg je and (bad) insb cld test lds in out adc xchg lock aad nop add cwtl test test rolb sbb push xchg clc movsb pshufw loope rolb pop ret or out insl inc dec jnp nop dec mov insb add inc and pop cld adc push mov inc dec aas cmp jge add test jns xchg xor fsubl mov add lods mov push adc jp jo dec push cltd xorb into dec mov mov mov ret or mov orl and xlat or dec mov fstl sub mov seto movsb daa inc (bad) cmp call paddusw andb mov push mov rolb subl and in mov ficompl in cli adc rcl (bad) lods xor dec push iret cwtl sahf add jl push and test mul xor outsb dec dec add cmp out jns addr16 jno dec dec jp mov jne pop or sbb dec loop rolb sbb pop push jns (bad) add pop add lcall movsl add testb mov mov xchg add mov testl inc sbb dec push cmp or rorb ss mov adc adc mov sahf movsb xor jnp test pop enter jae aas into test dec cltd js sbb rcll jmp add mov jle push inc pop xchg test call pop and pop xchg mov mov and mov insl (bad) xchg lock loopne add push adc sub pop add sbb inc andb dec clc repnz icebp add ret jne testl xchg and mov leave out inc add sbb ds scas arpl inc jae add ret mov cmp (bad) cmp roll inc push xchg ljmp cltd dec cmp jg orb inc add out enter push mov jmp in jbe pop sbb lcall lret ss add jg add movsl aad hlt xor push cmp (bad) lock mov mov dec test into xlat pop leave sub jg mov pop xor (bad) sub pop add subb bound push jl adc cmp repnz xor ror lahf aad pop (bad) jg mov iret lods xor pop lds sbb repnz inc repz mov mov sbb ret jno mov inc aaa pop call sbb fs ficoml add inc stos dec mov cmp std add ret and dec add cmp scas shld icebp jne push out call ja iret cmp sub or mov mov enter or sbb add pop mov add sub and loopne cmp jno cmp andb hlt pop jne aas cwtl dec cmp movsb js dec sub push std mov xor clc icebp dec enter subb pop test add stc xchg fnstsw dec dec loopne mov ret imul adc mov (bad) out (bad) push and stc ljmp xor and popa add and add cli sbbl add ret pop pop jnp add out fwait xchg (bad) div or fbstp call sbb in add xor ja insl push dec enter aaa js and dec mov (bad) cltd jo adc out mov xorl xchg inc loope lret nop add cmpsb push inc ja ret js lds mov jecxz not add xor test jb std xchg push imul or loope repz cmp mov push cltd imul push jb and in es sub mov add mov and out dec in jg mov dec add leave aaa dec andl fstpt xchg mov mov out movsl add repz adc les add std sbb in inc cmp jns sbb adc (bad) push mov pusha inc fwait pusha in jl sbb xor jae dec push cmp mov test (bad) inc mov fidivl lock adc xor inc xor daa pop xorb jb les push mov roll insb and jp mov aam mov outsl sub int3 mov in push adc cmpsb addl xchg push daa out sbb add sbb lret imul mulb pop sub inc mov cmp and cs scas dec out test stc and test jge and sub or lods in rclb lock mov cltd xor test push imul popa (bad) ja push aam dec aas loope int3 lds inc mov fistl shl add inc mov cmp jle in pusha xor les lahf cmp stc xchg mov cwtl add in ret and imul jg roll pop sahf mov dec scas dec push sbb push mov mov and dec sbb mov ret cmp pusha add jmp (bad) (bad) lock lret or test fcom pop add xor call dec xchg push mov ds das dec xor lret bound mov dec loopne lock cld insb test cwtl enter dec test mov repz jecxz adc mul in cmp aas jne or daa sbbl js xor add cmpsl cmpsb jnp int loop add push add jne sub cs fldl call lcall xor and cmpl icebp fwait shlb dec cltd pop dec lahf lods nop xor push jnp mov inc xor add loopne test fwait add mov xchg and jl and or (bad) hlt add andl cmp jmp push cmp xor imul in dec adc lds clc inc inc inc dec dec idivb mov shll xor mov or jno cmc xor inc mov lods loope fcompl iret int3 push push sarb imul add mov (bad) pop js aam mov int3 jo test nop sub push and nop (bad) decb rcl add add mov ds push js aaa add movsb jb lcall test mov (bad) in xor pop lcall xor inc shrb adc xor push cltd dec or sub movsb mov sbb jge test cmp hlt pop cld inc aam idivb add sbb ds add cmp and dec mov in stc inc cs xchg insl add data16 hlt mov es test xor leave jb pop cmp and in or or pop (bad) hlt add cld adc std leave and sbb and dec int mov nop sahf xor inc xchg lahf and fidivr test cli mov cmp pop sbb add test push mov movsb cmp and pop lcall dec add aaa push or test movb les cmp or in out sarb (bad) int3 sub pop and test lcall xchg cmp xchg cmpsl push cmp add test or lds pop shlb call jl fdivl pop loop add je cmp repnz add push cltd pushf or rol inc out (bad) push movsl mov rorb lret repz mov sarb push and push (bad) fs in nop pop pop xchg cmpsb or inc adc sub inc xchg add mov in aas sbb add orl rolb or aas int sarl imul enter add aad jmp xor sarb xchg pop movsl test enter fdivl sub imul nop inc and jo add ja daa mov hlt rcrl inc jmp inc add lahf into mov cmp jp dec mov xchg aaa dec pop cld ror in inc jb cmp push cwtl enter mov adc (bad) add nop mov popa rcr jno bound pop add enter mov data16 push pop xor inc cmp xor test sarb push aaa fs lret cmp rclb add push repz inc mov fwait mov adc xor es xor popf in sub int3 dec push add rclb aaa xor push mov cmp notb or and mov push pop ret and data16 (bad) mov and test fld1 fwait clc add scas mov pop add mov xor clc in adc adc nop sub iret inc mov dec and xorb je push mov ret sbb push and ljmp sbb dec js leave cmp sahf mov mov rorb or add js stc in cmp test inc inc sub mov sbb lret mov pop movsb mov xor inc dec add add and test outsl loopne lcall ret jg imul pop add mov dec int3 mov loopne mov xchg sahf add std pusha addl rorb sbbl add nop mov orl mov or sub mov cli (bad) hlt jae jnp insb addr16 dec adc add xlat ja push cltd cwtl repnz je inc decl mov sti cld cmp cltd cmpsb or stc sbb add pop mov mov xor jge xor clc lock pop ljmp mov push js lds jmp test mov pop add xlat sti adc add xor lock jns orl and dec pop icebp and sub shrl aas movsb cmp dec cwtl add lods fstpt cwtl into loop,pt incl ret push pop push lret add test les mov cmp sbb test lods out sarb xchg loop mov lret push adc dec stc in and scas adc xchg pushf pop add jns mov push insb jb (bad) adc stc mov scas push add push mov es rorb pop xor xor sbb pop pop call repz cmp loopne stc add mov xchg push push add add sbb scas xor cmp sti and cmp rcrl (bad) jge fbstp test popa cld or jmp add dec pop and and pop xor cmp out mulb test pushf xchg cmp inc repz test jp dec mov add cwtl xor pushf mov push pop inc btc aas mov push dec add shll push pop mov jle add gs in out adc dec mov aam push pop stos pushf enter nop out mov test pop xchg push (bad) (bad) inc adc push insb enter out mov leave adc push ret imul mov mov and arpl cmpsl adc loop sbb dec cmp mov mov or lret or cmp push stos jg roll imul mov leave rorb (bad) sub push fadds adc dec divb aam mov pushf cmp jl adc nop sbb les fstpt scas sbbb push add push lcall add push mov das adc jmp cmp lahf push dec call outsl call jmp ljmp mov mov inc test add outsb cmp dec dec jl xor mov mov cwtl xchg and inc sub int cmp lret into (bad) ficom nop pop arpl cmp and push pop (bad) pop ret and mov dec xor push (bad) mov pop lret jno cmpsb mov mov inc rcrl lret pop aam add xor fs daa jmp lock mov jmp push lret pop dec js test pop cli xor and jp mov dec dec dec mov push cli sub (bad) loope and dec stos adc aam insb mov inc add inc cltd push push sub push aam xor fcompl xor fs xlat fwait adc push sub and in push test (bad) cld popa nop outsb mov js pop inc sub in adc xchg js dec pop sub jg pop cltd or mov pop adc pop add loope push sub imul nop and test mov loopne out shrb cli push xchg pop mov fs add push (bad) out mov mov add inc (bad) sbb icebp fiaddl dec je mov stos or add inc cmp mov stos add ss lret push and mov mov push addl sub aam fwait and mov pop lds push cltd cmp sbb pop out mov dec pop jmp sub inc or cmp push jo daa adc ds sbb and or cmp inc sbb nop ja cs pusha in inc rorb mov pop jecxz lods inc sub adc rcrb add jne jge clc rcrb aam adc xor cmp movsb or sbb lock pop sbb cmp push scas or lahf adc mov fiadd je add (bad) push lock test adc jnp nop (bad) fistpll insl or jg add int ljmp (bad) cmp popf jecxz loope lcall ficomp sbb inc test mov xor aam mov push rcrl rcl aam inc pop (bad) sbb xor and add (bad) inc inc jg add inc push mov push mov push jl pusha rcll sbb adc sbb sar gs sbb addl cmp push add aam xor lock je lds push sbb adc aad ret add jg mov andb out mov add xchg jp sbb mov sub and cmc add bound repnz mov add push popa sbb pop add out add sarb inc or fistpll (bad) mov test lret frstor mov sub sbb std ficompl lgs aam cld mov xor xor movsb cld add mov stc dec mov adc push and sahf sbb (bad) or cmp ds and ret mov xorb dec mov loope jnp inc stos outsb nop (bad) xor and loop cwtl push enter inc sbb je or je push in add cltd mov fs lock and mov push nop pusha add jg sub cmp adc inc cwtl inc inc dec xchg add scas movsl in pusha cmpsl (bad) cld scas xor add jb mov push pop and or ret scas repz push add iret xchg cmp add popf inc stos push add sbb cmp add aas and scas rolb adc mov mov outsl sahf sbb sub and sbb lock pop rcrl add lcall cwtl sbb mov mov jg shlb out mov aam pushf xorb push jge jg and sbb xchg dec pusha add push mov fdivrs cmpsl jo jge cmovb and add aam ja hlt jne and enter (bad) addr16 sbb cli jno push in or push stos out nop add jle stc xchg fldl sub add es fs arpl push fisubl frstor in pop inc popf in and xchg (bad) sub mov dec or lods pop ret sbb int3 clc adc jge pop xor adc gs out ss mov fwait and inc lock lea xor insl pop in adc ds push push les pop hlt add sbb imull movsb aam lea cmp and push jbe jl addr16 cmp sub bnd push not sahf inc cmp (bad) loopne cmc cmpb add mov testl adc mov xchg or and ss es pop insb jae dec dec and add mov add and push adc mov add sub pop rolb adc add mov dec (bad) enter cmpsb push inc insb incl mov jb,pn add jecxz fs sub mov jmp int3 adc pop les int3 call add jno (bad) sbb mov push inc pushf cmp push (bad) out out adc add enter mov cmp and and push adc dec or pop sbb and subb add ret mov xchg int inc add mov repnz inc js popa dec jno mov negb and or xchg (bad) rclb pop sahf pop fcmovb sahf add or cmp push mov aam je adc lods sbb jno or stos repz adc dec (bad) in movsl push cmpsb add cmp dec fisubrl jb scas jne add and data16 or sub push sbb sbb sbb adc dec dec cld adc aas or sbb in arpl inc nop and push test push sub sub mov mov xchg sub pop sub rcrl add out fcoml cmp (bad) add or mov sub jno mov pop cmp and sbb inc adc stos dec pop (bad) dec xchg in mov add xchg lcall insb fstl js lock in popa adc sub jns add movsb mov sub sbb add xchg mov js and or pop lea or mov int xor scas fwait cmpl cmp push (bad) cmp cmp mov rcll in iret enter mov mov and and xor adc jge sub cmovno cmp shrl add out dec mov lds shll insb movsb inc xchg mov jo (bad) push clc mov and or out repnz mov dec cmp sarl or mov inc call xchg push stos jo mov pusha insl test xor pop xchg push add shr and cmp xor xchg cmpsl add sbb fstpl add mov loope push lret sbb adc cld ror cmc push js push jne push add iret add and dec mov divb cmp pop scas stos or push sar jo mov xorb cmp imul push push sub mov adc add xchg seto loopne (bad) out cmp sbb pushf or mov xor and mov (bad) and stos in stc mov jo pop outsl jp sbb and sub popa or jecxz sub xlat and test mov lods jnp add test push and add sarl inc fdivr jno mov mov sbb leave mov int3 add repnz pop loopne clc add loope rcrl sar mov dec pop or movsb add mov js (bad) aam or aam inc pop pop add push call call xorl outsl sarb lds cmpl mov fcmovbe pushf mov les inc jns add jge push or aaa movsb cmp in fwait or nop mov and movsl cs leave jns cmp enter jb pushf out es cmp sarl mov add movsb inc ret cmp dec and pop popf sbb pop data16 mov adc adc lock cs mov adc fmuls add jge xor loop daa shrl dec rcl mov ret xchg mov pop cmp add cld fsubs sbb push pop adc mov adcl (bad) insl fldl2e or mov xchg sbb add jg shrb and jno pusha cmp adc in daa add roll clc cmp (bad) in xchg inc inc xchg xchg mov add xor lods lret call mov add mov push pop inc inc adc jg ret add scas inc sbb pop mov adc inc push ret dec mulb sti cmp stos add add cwtl hlt dec sbb sub jbe push adc (bad) adc (bad) call (bad) add or adc mov stc stos les jae add js loopne add push xchg mov repz and mov ss out scas xor dec jl sub scas mov stc fmul ds jg test das mov cli repnz xor push stc and ljmp adc add sub or js adc inc add dec and dec push repz xor or repnz (bad) add xchg leave fadds push aas cwtl rorl jge lods pusha cmpb lods mov je test sahf xchg jb or inc nop call loop and jb ret es inc clc push lcall (bad) push jecxz loopne (bad) push or xor adcb andl out sub push lock test push iret insl test push test and cvtps2pd xchg in inc or (bad) inc xchg or lock mov pusha add stos push xor adc (bad) add push xchg cmp clc add xor call add jge pop add push xchg pop out ja or jno adc popa inc pop imul add pop roll gs push or inc add xchg cmpsb sub jmp loopne push clc inc fsubrl loope nop (bad) popa rorb jae add enter mov pushf sbb jp aas cmp add inc push push cwtl and or xchg push iret mov fs scas fwait push movsb xor mov outsl and inc mov jmp xor dec and add xchg push orb push cmp inc in ja les mov push mov dec insb fs fdivrs fisubr loopne jl mov pop push sbb test mov push rorb or pop (bad) aaa mov sub dec adc scas adc mov push inc adc js push xor cmp xor test inc iret in into add sti in mov (bad) xor imul push ficoml or dec or ds icebp int repnz xchg sbb pop popf jno add ljmp or or jns nop cs je hlt dec mov mov jmp cli cmp push dec push xchg cmp and cmpl or stos mov jns and pop aam cmp xchg mov mov and sub jmp mov sub hlt cmp mov repnz jnp sbb (bad) jle and scas sahf jge mov fsub sub popf cmpl jno add sbb mov sti lods loopne sub in xchg and movsl jle dec test movl call dec and roll or outsb sbbb lock mov push mov shrb jb into push popa xchg int3 movsb test or jecxz inc xchg pusha cmp sbb cmp mov pop add (bad) or inc je rcrb jnp pop xor idivb add sbb cmp popf sub and fs pop lahf call or rclb lods push inc mov add mov mov ljmp jecxz adc fldt push and pusha in inc out call sbb or mov cmp inc lret mov sbb xchg sub in adc adc mov jne icebp jns xchg pop and ret movsl adc js sbb cld orb fucomi call loopne insb jne fs inc test int sub push and sbb (bad) sbb mov dec nop mov mov std test add loope fdivr loope shr (bad) adc test popa out in mov jo mov xor mov and outsl add lret testb jmp cmpsb jecxz xor cwtl sbb (bad) cmc popf pop out in jmp mov mov adcl mov push mov cwtl inc lock mov cli mov in xchg mulb pop mov clc push and es stc and ficoml mov stos aaa je jae cmp test adc loope push jb add dec inc jnp add sub repnz push cltd nop mov out sub lahf in mov xchg add cwtl and or add cmp dec add push cwtl int3 aas fwait add pop cmp push pop sub push add movsl clc jb,pn add (bad) data16 add not or or ficomp call les jl jle inc mov in add scas inc leave aad fwait (bad) jmp pop mov add fstl shlb aaa sub rcl sub clc xor and sbb add push mov es imul rolb rolb sub cmp scas popf sbb xchg mov popa xor inc test das je andb mov xchg (bad) icebp in andb popa xor ja cmp add cmc xchg jl enter pop cmp inc inc jmp add xor popa out jg push adc mov call xchg adc and add jnp jbe insb ret mov xchg add sbbl xorb cmp inc addr16 icebp ss adcb mov cld add mov lea rolb or in cmp sbb popa arpl js loop call loope (bad) hlt mov jmp adc daa jae,pn and insb icebp inc and mov dec mov cltd adcl lcall and test xchg in mov cmp xchg in mov xchg fs test and mov mov test pop mov mov push out push cmp dec push mov test (bad) aas or cpuid ret mov pop cmp popa add loop or sbb pop fmul dec outsb enter sub iret mov add xchg push sar js cltd jp test mov lock add fwait jo dec roll or lahf xor mov mov std sub (bad) lods and (bad) roll ja mov lret inc xor cld mov fild mov pop aas movl in pop adc xchg mov addr16 xchg outsb add (bad) xchg or sbb xor repz lcall out xor and (bad) lock jle cwtl pop add aad sti (bad) xor ret pushf clc scas int3 jg imul shlb or nop dec and add push les into repz sahf inc je xor pop pop cmp inc mov fdivr imul rcrl popf and xor or and dec adc push mov (bad) xor fldcw jl xor adc jbe jnp pop xchg adc hlt mov sub lcall pop push mov push inc aam pop push dec je jb mov mov push in or inc mov add pusha js imul sub jno nop (bad) and ljmp jmp faddl popf mov andl addr16 lret push and and jno movsb or jne scas and adc mov sbb addl or mov int3 lcall push scas nop test adc pop push cmp enter js or dec mov andl push sub loope adc xchg out sub es push ja inc (bad) mov cmp pop popa mov or push add imul int3 sahf cld and or xor sahf push push xor add sahf add mul xchg lret push push pushf add ljmp inc add xchg dec fistpl mov inc test dec inc (bad) xor add xchg aas outsb mov inc inc sbb lods out nop add push leave (bad) jo addl pusha cmc sub ret (bad) jle dec arpl sbb (bad) and sbb pop popa stc cmp adc pop fwait sbb xchg insl clc push loopne mov js dec cmpsl cmpsb daa cmp fcompl or mov mov add push xchg or pushf nop adc or fldt lea or fldcw (bad) pusha ja nop sbb pop add int adc popa push dec or jecxz push xchg xchg fdivr mov adc inc sahf rclb popa adcl push cmp (bad) fisub dec push data16 in pusha dec xchg (bad) mov add mov dec push inc hlt jne or push jno cmp mov jmp je add fwait inc xor push nop adc hlt adc dec std cwtl push scas addb stos pop jmp lret hlt push sub sub mov inc lret jecxz cmc add cmpsl in fildl lock test movsb stos add push add and push popf inc sbbl idivl cld sub inc dec shll push orl jne pushf jno ficomp inc pop rcrl enter inc adc jbe insb mov push sub pusha or gs and pusha in ficoml popf pop insb stc (bad) aam ja lock into and fnstenv or aaa mov (bad) inc pop mov dec sub mov inc popf adc mov push mov cmp enter sub mov movsl notb mov (bad) fcoms cmp fstl lods stc add ds roll in and jl mov mov aas inc (bad) int sbb loope (bad) xor shr push int3 pop jmp rolb jnp rclb add stos inc add mov pushf inc aam xor pusha imul (bad) sub pusha mov fucomp test or xor (bad) pop out push outsw cli repz mov jnp and add jl push push xor cltd hlt mov adc loopne xchg leave fildl jmp clc sbb aas mov imul adc push (bad) pop lds sbb and inc sbb xor (bad) push adc add xor or adc jo xor test sub cltd push iret repz or fadd int dec dec test nop mov arpl push mov inc (bad) hlt cmc call incl push add inc jo icebp inc movsl pop in fidivl rolb (bad) roll adc and fchs fstpt or xor scas negb sbb xor mov sbb pop xor lods xchg loopne test aaa dec lcall adc movsb loop inc clc xlat mov rcrl addb (bad) xor mov cmp decl scas pop jne pop pop sub out mov push inc add stc les fcoms adc inc (bad) jbe or pop push pop add in dec pushf push add mov and add pop jns or pop dec loop call inc dec scas add jge cltd rolb cltd mov add loope hlt jmp xchg add test test jns mov aaa fldl adc jnp add xchg and ficomp and ret loopne inc popa or scas or mov mov outsb inc xchg add jns cld dec push iret inc (bad) push inc or pop cltd pop mov jne adc cmp scas or fmul ss jbe push mov add dec add jbe testb fcompl rolb dec stos (bad) xrelease (bad) neg mov into in and lods mov inc push es in add or sbb (bad) mov subl daa or dec leave sbb nop popa add ss hlt sub push loopne xchg loope lods pop icebp xchg or mov or cmpsb xchg lods dec repz mov and dec ret sub push add xchg (bad) xor lcall test test mov sbb and cld adc mov mov xchg (bad) test mov mov clc push lds jl repnz jecxz and xorb mov pop xor mov sbb (bad) dec xor subl adc lods hlt unpcklps lods inc (bad) xor rcrl insb and pop cmp movsb xchg bound repz outsl adc (bad) sbb mov cmpsb add stos and aam jns iret xchg ffreep les ja and sbb stc pop (bad) mov push mov push cmp add and pinsrw pop and aas loop add sub push mov add mov pusha inc movsl sub or enter aam push add rcrb inc mov push (bad) inc inc xor pop add mov pop and mov idivb sbb mov dec cmp fild les stos arpl inc add mov pusha arpl dec test fldenv (bad) mov inc add insl xchg pop jp jle fisttpl xchg fs rcrb mov or jg pusha sbb add fucomi push push cmpsb fidivr push dec push fistpl push mov jge sbb (bad) in or pop pushf add mov fldt add xlat and mov test cld lcall outsb mov pop mov cltd add pop sti mov jg cmpsb aam adc nop sub rorb imul clc push data16 pop or jo mov jo or mov and cmp dec inc in enter add inc fadds pop sub out sub cmp inc lea add cli leave and ljmp sub adc cwtl mov subl and pushf popa fisub xor aas cmp jp in mov dec out mov pop xchg cli or es and inc mov sub mov pushf orl sub or adc push mov xchg fwait mov std sub out dec add lods popf push fadds inc dec icebp pop les faddp ds and orl (bad) test aad xor mov inc (bad) mov subl test js cmp enter fidivrl cmpsb cmp call xor jo xor (bad) loopne xor (bad) movsl add iret push lods int3 add pusha testb mov lret std xor or and xchg pusha sub enter add scas movsb pmaxsw push mov sub arpl push hlt arpl sbb and add test push sub sbb or xchg add dec pop sub adc int3 push or and adc add xchg pop add inc add pusha popf dec daa mov popa cmp sbb lahf pop lods add insl dec fisttpl mov jmp add mov (bad) ss icebp and ret mov (bad) sti mov mov push cwtl push loopne or mov adc inc ds add outsb js mov popa flds adcl inc xor icebp ds je mov or pusha scas sbb sbb push incb adc pop pop lret mov insl push nop xchg mov sbb inc add mov dec or push add sbb sbb or fsts or pop movsb jecxz lcall xor stos sub insb add pop enter add popa xlat movsb pop jnp cmp mov arpl xor pop pop adc sti lds adcl out rolb xchg pop test xchg nop sbb fdivl xor iret mov loopne xor lahf xchg out adc ficoml shr ret push inc rorb add (bad) and add dec int3 sub leave mov cmpsb out (bad) stc inc push andl das xorb es add push cmpl cmp cmc mov insl cltd sbb addl repz pop add test pop outsl jo cs xchg mov movsb add mov int3 jmp xchg xlat inc add xor xorb add (bad) mov jo enter aaa add (bad) push mov dec into inc sbbb xlat mov ljmp das dec sbb mov fdivl adc add mov out enter inc mov push sub insb stc dec xor push sub add ret push or gs rcr xlat push call sub dec add and mov incb cltd inc and sub mov inc sbb sahf leave enter mov mov aam push or inc and dec mov jns popf sub mov leave dec dec std bound call add (bad) fiadd sub pusha or (bad) loope cmpsb add fs mov (bad) ljmp xchg fldcw jl sbb adc negb or pop out add outsl xor mov jmp push adc and (bad) add insb fadd cmp nop adc sub or pop cmpsb movsb testb sub cli aas pop xchg mov aad inc jnp stc or add jns sub mov sub add dec add fsts bound enter nop pushf push sub mov lods adc add rcrb inc xorl (bad) imul dec sub addl inc std cmc fistpll icebp inc loopne addb gs pushf add push std daa cltd fiaddl push adc sub sub notb xchg mov (bad) sbbb dec dec pop xrelease dec test xor fmuls mov pop xlat mov cmp mov movsb mov dec push ja push mov (bad) add or jle or jb jnp inc sti pop inc mov or adc push (bad) or and or adc adc sti popa push adc dec xor add (bad) or add inc push add add test out pop mov xchg and cwtl xchg sbb loopne add (bad) mov push mov sub rolb rol (bad) leave cmp jbe adc dec out clc add mov adc mov sub cmp loope repnz ds fisttpl add (bad) push dec mov or sbb sbb jns rorb dec leave add xchg jo inc rcr xor pop push sti (bad) pop adc add mov add mov movsb push fwait sarb mov adc test insb aad adc push adc jnp add mov sub pop dec and inc xchg aad inc nop add mov mov dec dec cwtl movsb mov jo and sub add call mov mov sub andb mov add add (bad) lret cmp scas in push sub sahf sbb test xor xorb mov js xchg adc or fisttpl xchg mov mov insl movsl mov loopne sbb les fwait inc sub push emms rolb arpl push cld dec sub call pushf (bad) xlat (bad) movsb pusha repnz sbb cmp pop lret sub adc in clc faddp xor orl or nop insb mov jl inc popa movl out pusha imul add add adc cmpsb hlt add popa test int cmc shl pop movl ret and mov add xchg test (bad) add xchg sub mov lock daa scas in sbb ret jmp lods and cs inc pop mov mov es and inc or inc lcall adcb sub dec dec popl lret pop mov jg fs add xor adc dec mov mov fistpl stos adc sbb jae cmp dec cmp mov (bad) ss popa pop or shll les mov inc add cmp imul lds adc mov pop jno cwtl mulb sarb adc xor call jbe push sbb stos mov adc adc sbb inc outsb and clc inc push test fadd xchg jo (bad) in sarl or das mov andb cld cmp pusha mov adc imul dec add mov jle mov mov pop sti bound out test cmp pushf and add mov mov adc (bad) out popa sbb cltd loop ret and mov push and or jbe dec aam mov shrb fisttpl lret push add push (bad) out adc ds inc (bad) jecxz add rcll xchg add loop jne cmpsb and add jecxz ror lock mov bnd dec fs cmpsl loopne dec sbb cmpsb adc imul mov push adc clc test mov cmpsl adc fwait ss mov sub cwtl subb mov cmp es (bad) leave sub nop sarb cmpsb dec or xor xchg rolb andb iret rolb pop pop stos sub add mov sub and add std sbb jg jmp pop pop lock fs aaa add aas lret cs add into or fidivl mov sarb hlt daa imul std roll xchg sub sub cwtl scas pop cmp mov add movsb jae add inc mov inc jp mov test pop xchg popf add xchg xor addl pushf mov test mov add xlat sbb outsl icebp xorb add sti mov loope mov push and pop and cmp int push push inc stos add add cmp add sub insb or pop sahf inc or rcrl leave mulb mov jne pushf insb mov add mov insb pop xor add xor or push lock jp xor iret and rorl insb jo icebp or out cmp leave inc cs cmp adc add dec or je xorb imul push mov add jmp mov pop push aad mov dec mov mov adc mov xchg ljmp xchg xchg shrb (bad) sub sub mov test (bad) cwtl sbb sub aam std andl xchg nop adcb jb push adc cmp lcall sbb in imul movsb jl sub adc xchg mov aas dec adc jnp orb sbb lcall add add jb adc aam inc inc loop add mov cmpsb or leave push xor mov sub or mov cmpsb pusha les inc repnz sbb pop mov orl ds mov push adc jle inc xchg inc dec mov pop iret clc ret xchg push add stc pop pushf cmpb xchg sbb pop sub loopne or sub mov pop lea fistpl (bad) xlat mov frstor sbb (bad) mov dec xchg lock ficomp (bad) pusha aam ds dec push pop (bad) mov dec pop rcrl (bad) xor (bad) adc adc adc std add xchg xchg jecxz cmp aas aad rorb or pop dec cltd and xchg mov hlt mov push pop sub mov add cmp jb add xchg aad (bad) js and xor pushf add sub popf (bad) repnz mov popa jbe jo pushf movsb inc stc sbb sahf push adc sub push ror addr16 add loopne inc (bad) enter jae dec or into add test pop sbb out mov shrb pop pop repnz fcoml push sbb add sahf lds xchg jle pop movsb add fsubrs push or cld subb xor add mov pop dec ds sub clc mov shlb in dec sbb je rorl mov jae shrl mov pop sub test add and mov movsb pusha int3 add mov aad sarl mov inc popf jae enter cmp arpl push shrb pop mov (bad) dec pop and sbb add cmpsl sahf xchg sub pop addb int inc jnp xor xor cmp test (bad) cmp add dec loopne or dec push cwtl pop pop or notb insl adc jne or push js pop mov (bad) cmp jne in cwtl add pop xor cltd js xchg mov jbe enter mov inc pushf lret add stos movsb popl mov mov clc (bad) dec dec or push and cld inc jl inc and and sbb and mov mov dec and sub imul stc mov adc add mov push test hlt jge arpl dec xchg shlb push or inc xor stc mov adc cli loop add idivb cmp cli enter ret sbb or push hlt call popa and loopne test sub dec negl or add sub lret inc adc das jbe dec fidivl subl out xchg jmp hlt and jg dec mov stc add (bad) enter ret mov out pop int3 xorb mov ljmp notb clc loopne sbb (bad) xor xor pop outsb pop or add dec pop push push pop sub adc lahf pop push sbb fmull sbb dec rcrb dec jp add add shlb push mov add lock add into cwtl sahf sub adc out sub xor cmp out dec or mov test cs mov mov inc jge pop sub mov mov xchg pushf les dec xor das and lock and ss jno pop bound sahf fisttpll pushf pusha outsl mov and iret push inc inc push cmp cmc add testb mov dec enter and or add mov jmp arpl dec in adc pop adc and mov push add sub lret pop and pop inc rorb xchg mov js mov cld xor in aas xchg jno ds inc push fnsave dec mov movb pmullw inc pusha lret int3 lret xadd cmpb jg or loopne aam testl movsl sbb pop mov andl dec clc mov pop add pushw enter inc fsubp rclb and inc jmp adc mov add xchg mov pop or pop addr16 js,pn out std cmp push iret ret (bad) je jp sub add sbb (bad) push mov decb bound aad mov stos jg nop or cld inc push mov sbb xchg (bad) cmp dec dec xor fisttpl adcl mov and aas cmpsb (bad) adc add test aam test aas add xor cmp fldl add cmc loope lock mov pop jge xor or or test adc sarl mov std dec cmp adc jo cmc or mov push inc aaa mov and add sub xchg push test in add cmp xor mov movsb push fildl push xchg push push lret mov xor add insb cmp pop add lret adc dec dec or das inc in sub (bad) or push pusha inc mov (bad) hlt pop sub sub lret call or push rsm int add sbb cli lds cmpsl mov jbe pop xor pop or push mov mov inc add ds adc mov (bad) test cli insl test notl int3 rorb movb (bad) lock sbb loopne push pop or pop pushf xchg add mov and jle inc push jmp rorb push negb inc jl dec adc sub ljmp aam add mov dec add xchg (bad) (bad) notb inc int3 push sar add inc sbb add andl loopne arpl xor or insb movsb aam fsubrs add dec sbb push xor pop sbb test mov inc test test test add gs clc jecxz pop data16 add aas cmpsl and and inc mov leave out popf dec add fsts sbb faddl adc xchg mov mov push in push or push out fmull cs adc pop inc inc xchg rclw jne pop imul mov call cwtl js mov inc or and add sti push jg imul xchg sbb lock into push les in negl add lahf add and aaa add xchg inc out js pop mov xchg sub andl in rclb fistpl imul adc inc jle inc enter cmpsl jecxz aaa sbb add xor fisttpll push aad out test nop (bad) push mov push fs das dec pop adc jp adc mov ret out and sbb fbld push or and pop leave insb pop pop xor testb pop cmp fsubrs push sbb inc in mov dec mov ret out inc xor movsl test leave dec sub mov je cwtl xor das jb and or test add mov (bad) int3 mov inc stc cmc xchg lds imul mov ja call mov daa add fimull pop sysenter add xor call xor inc mov mov dec mov test test scas test rorl dec dec fld1 add orl xorb add imul push call bsr add add fs jne inc push xchg sub xchg sbb inc push xchg add push mov pushf xor das (bad) mov je and adc or lds in mov ja andb mov dec push popa add jbe test mov sbb pop push mov pop push and inc insb sub push ret sbb pusha mov neg inc push dec dec pushf dec sub loopne (bad) dec mov mov mov test push loopne notl push sub call lea enter and add and mov or sub pop fmuls inc ret popa pusha enter and adc sub dec cmp cmp pop daa ret add scas add sbb packsswb push loope and add push or aas lcall neg mov icebp fstpt enter (bad) push movb mov adc enter pusha xor add pop pop mov and cltd ds mov mov dec lds mov sbb fwait add jl dec jmp add rclb jge inc add jmp pushf fisubl (bad) push nop add fstpl pushf and fiaddl cmp ljmp jb and rcr inc mov je cmp js test inc dec mov movsl mov xchg and sub push xchg fcompl stos addb jns repz inc test fiaddl (bad) insl (bad) dec ret sbb lods jp inc pause shrb sub jmp adc mov xchg and pop sbb test loop or in xchg pop sub out add popa sbb jmp sbb add js call popf mov repnz add lds add rcl mov push adcb pop testb rorb leave sbb mov aad and xchg add stos sbb popf divl jge nop push dec loope pop xchg mov mov dec in xchg les sbb fildl cld adc sub and or push sub lods roll in js and test sbbb add dec sbb adc mov push lods (bad) dec mov nop mov das xchg pop ret fild or jge pop inc out add xor add stos es adc mov adc pop stc cmp (bad) mov pop sub mov push inc adc jecxz dec or popa rorl xor sub add jnp (bad) out cmpsl lahf xor mov das push xchg pop scas loope in inc (bad) (bad) inc push out roll sbb test pop cmp inc add sbb push cmp dec or int3 inc push add sbb (bad) (bad) pusha pop sarl dec pop add movsl pop mov mov cmp jns pop or and inc loop (bad) hlt dec stos dec xor shll rclb lds jp hlt xchg testb jp test adcl adc orb add jns iret push xor or and movsl adc adc or adc les out pop repnz jg in rorb pop sti or or cld xor add icebp push inc and add out jmp in mov mov mov cwtl enter adc push add xchg enter sub mov pop mov pop cmpsl cmp clc pop mov xor adc add dec jae push inc jns fiaddl sub jne (bad) dec push dec nop jl inc lcall das lcall and call push mov arpl mov or inc sub fiadd aas ljmp sbb decb negb (bad) inc imul and xor pop icebp dec sub jle outsl sub add (bad) cli and arpl enter mov mov int3 add jbe mov subl popa dec mov or add adc sar clc pop mov in xlat jle jo imulb xchg imul and inc es iret fs ret and fisttp lahf sub das scas mov sahf cwtl inc jb shrl leave setle inc scas mov pop and mov jo cmp loopne add mov mov (bad) mov push dec inc mov xchg cmp (bad) fstpt imul mov inc loopne xchg inc inc and jle xchg add outsb mov push pop cltd add lock fmull lret ret fucomi hlt popf adc push repnz inc adc cmpsl or cli sbb fcmovnu (bad) sbb and inc add (bad) add lock sbb je fwait cld dec mov add mov out pusha fcomps movsb pop xor les cs push fs dec push outsl mov loopne inc cmpsb push fnstenv stos jo add xchg mov inc js insb or mov mov fs clc dec jmp test mov cli insb xchg in mov popf addl adcb faddl popf add mov push add xchg mov and (bad) fidivl mov xchg sub cmpsb adc dec nop fistpl test sahf xor mov mov cmp push xor clc push loop sti add rol cmp test inc or mov mov popa dec add andl dec orb imul pushf lods add addr16 push es cmpsl cltd pop xor pop mov mov mov cwtl and je call mov incb loope sub rorb insl xlat jo xor loopne mov dec add inc mov dec xchg cld pop (bad) dec popf loope (bad) xor mov add xchg pop mov or adc ljmp xchg pop ja pop xlat repnz add mov add out mov adc pop lds loopne add ja shlb daa dec ljmp add cmp arpl inc (bad) fisttp mov dec cmp test add iret add mov bound dec pusha pusha and stos and jl es add fldcw inc cmp sbb mov dec and add xchg icebp mov sub loopne cmp dec iret inc aam lret add push dec pop subl push adc wrmsr mov jmp pop inc sbb cwtl xchg or cmpsb cwtl inc (bad) mov shl sbb add aam insb sbb push cwtl push or (bad) adc and xchg and and (bad) hlt movq add push dec dec les nop mov fsub inc dec pop sub clc push inc mov dec mov pop dec xchg lock mov lahf loopne push mov pop push leave in sub mov adc clc push cmp push sub jmp lods rclb or or in or fwait rcll gs (bad) shrb cmp or icebp dec inc nop push cmp push cmp je sub xchg inc rol mov fcmove push sbb lahf nop adc mulb pop mov pop (bad) je pop fadd movsl pop enterw lsl xchg add in stc enter mov arpl sbb out jp outsb (bad) clc sbb mov (bad) sub sbb dec loopne mov aaa add into rcrl and push pusha xchg add (bad) push and adc dec sub and ds cld es xchg mov cmp mov loope jp inc adc jmp pop fs and and leave dec icebp add mov je,pn (bad) pushf and dec jmp mov mov insb ds test in add add stos xchg (bad) or adcb pop pop rorb inc jl push xlat pop out movsb test repnz pop pop aas mov fnstenv and test ret mov les cld adc cmp push popa push mov mov jecxz xor push orb push and popf mov xchg popa in mov inc and mov int jmp pusha mov in sub and in pop leave test stc (bad) sub (bad) mov pop pop cli push add mov jl sbb enter mov mov xlat jg es xchg cli loop rorl test push hlt inc subb inc test lock push fistp lahf (bad) or mov inc jns enter loop add jbe test cmp xchg add cmp jmp pop lahf lock add leave das sbb call popa imul push (bad) pop adc sahf in inc inc push into mov cmpsb fmuls leave (bad) and inc sub hlt mov nop add pop mov jae dec xor enter sub add mov test and lods mov js add jbe in inc aam xchg sub xchg ljmp roll jmp enter hlt or (bad) out adc (bad) ret ret fdivrs jo pop daa stos jnp dec adc xchg dec or push pop inc out test add xchg les jo jecxz mov xor dec negb add insl call iret add subb mov das and jns cmp xchg mov mov fimul mov popa sub mov ret pop mov das lret arpl cmp fadds int pusha negl mov mov subl in dec fild ret cmp decb pop clc or jg ror imul rorb add mov and mov jno xchg call cmp enter add xor mov sub mov sbb loopne mov push add clc adc daa mov add sbb add iret ret push lea push add or inc mov dec push mov hlt add mov ja (bad) xor add push or jmp repz add imul scas add mov sub pop push leave mov aas clc into add lahf sub jae ret inc pusha int dec imul into add and shlb pop jnp or push lds aaa sub and jnp scas push incl mov xlat jbe sub jge jno push pop push pop popa push add dec xlat cld mov aaa stos jbe mov or js pushf ja lock mov dec push inc enter add xor out jns add in (bad) pushf xor push cmp cmp mov xchg push lods or inc incl dec fadd leave or mov mov inc sbb push sub sub jmp mov mov add and xor add rorb in dec incl add mov lock pop (bad) repnz and push add test incb lock push xchg sbb ret je add dec push cltd jmp mov inc test cmp aaa loope je cmp add (bad) push mov inc sti fwait and sbb mov divb inc andb lcall add mov repz or add jns mov add adc in rolb inc stos inc test cmpsb arpl sbb lcall icebp push aam or hlt add jno push out push mov fwait adc sub cmp cld push sbb icebp push sbb aad mov push cmp inc adc xchg in adc cmc adcl dec enter sub xchg adc sub jl jmp jle xor faddp inc push sbb sub test mov pop jb xchg jae jnp rcr push mov mov mov aaa cmp rclb inc mov jnp and fdivrs sbbb rcrb inc lahf movb int and dec aaa cmp pop cld sub sbb and adc sbb mov (bad) hlt scas sub mov scas pop and and and xor popa pop add fsubrl lret and in sub cmp mov jae mov (bad) mov loopne add ja adc dec and hlt mov (bad) xor jo xor subb je sub nop mov inc inc push mov enter jmp cltd sbb or popf outsl in add mov in out js add clc jns xor ret call sub or cli or fisubl mov adc cmp xchg inc fimull movsl cmp cmp inc add out jmp in lock mov add ret jno pop lahf bnd les mov mov pop mov mov inc sbb push add andl out pushf add stos js aas ltr outsl mov pop dec or mov cmpl mov push dec cmp mov cwtl xor jb jl mov test cmp mov test iret pop cmpsb cmp pop loopne dec adc into mov xor scas or mov xor mov call fldcw and ss or sbbl frstor adc add cmc sub rolb es mov mov mov pop imul fistpl add hlt push mov adcl fmull sub and cmp jae sub sbb mov enter fwait and lock pop push inc jp add pop fucomip in jge add xorps pop sub lods inc push fcmovne inc jne mov dec push outsb rorb jecxz adc and push xor (bad) std nopl cmpl mov or xchg or sub pop xor add sbb xor inc xlat xor dec mov jl add xor pusha cmp push mulb xchg adc xor add pop cmp cmp sub add imul mov (bad) lret add jecxz dec rcr movsb xor sub xchg add icebp cli mov add sti clc mov and pop xchg jmp sbb in add or inc xor and lcall shl sarl mov sbb jmp inc cs icebp outsl out jg add aaa lea pop mov scas or ret int or (bad) (bad) int3 or mov push add imul (bad) push icebp andb js mov fiadd xor arpl mov cmpsb das mov add inc mov add mov and add enter es mov add dec ficom xor or rcr out sub pop test add outsb xchg or push sbb shrb mov mov push add lods insb out push or add or mov inc xor cmp mov mov or push lahf inc mov repnz xchg and in xchg je lret movsl xor xor mov mov nop aaa cmp inc out bound loopne jae cmp mov sub inc movl aas lds xchg movl adc gs insb into push (bad) mov icebp jno rolb sti outsl jge test lock or sbb nop xchg xchg scas ret inc cmp cltd adc mov out (bad) add lock aaa or cmp xorl (bad) repnz sbb loopne dec bound cli jno dec addr16 jb leave inc dec cwtl jge sbb cmp mov cwtl lods inc inc or fcmovnbe inc adc lock xor aad aas inc mov adc fs pop cmp sbb test nop mov (bad) stos and enter lods in add sub push sub mov sbb xor inc pop divl clc mov cld add sbb pop pop push xor (bad) mov or dec mov add adc sub mov pop hlt push xor aam pop pusha jno add mov addr16 scas repnz jle adc shlb add mov mul insb add sbb lods xor lret cwtl add cmp lahf inc pop jno mov xor rorb adc pop add push mov mov jp jnp jnp add hlt imul int dec or sbb mov cmp mov and or or adc subl ret mov rcrl add fbstp add push mov mov (bad) mov push mov mov ret or add cmp mov mov insl inc mov add push cmp adcl add or or cmp cs add push jb xor or ret inc or jae jo add shr outsl push mov sub rolb adcl push leave fldcw (bad) sub inc mov loop xorb lea popa stc (bad) mov test (bad) pop insl jo sbb nop xchg mov fnstsw cmp mov push jbe push (bad) outsl xor adc fcmovu add add xor add or cs xor push xchg add jne fwait cs mov cmp add jns adc insb cmp stc outsl cmp lahf and sbb push popf sub call sub adc adc outsb addl mov adc pop mov (bad) mov lock xchg and lods adc into xorb lea xchg push inc js mov shrb fsubs push mov sub pop mov pop lahf sub out add sbb mov ficoml adc repz sbb arpl daa adc pop mov mov ljmp (bad) test mov xchg movsl sbb and int3 cmpb xchg or mov sbb insb enter call test inc les ret clc mov (bad) mov inc ror adc sbb mov adc sbb inc (bad) scas and mov pop dec add push and ret bound push pusha adc dec push jl add or lahf lods or clc xchg inc push xchg ds pop cwtl mov add xor mov push and add mov js add hlt push daa pop mov inc ljmp xorl cltd stos dec xchg pusha add sbb lods iret sub sbb iret push mov pop sub punpckldq and pop sbbl pop pop and adc add movsb test add xor push inc fisttpl ss sbb cmp or dec lret imul pop clc vpunpcklbw dec test lret add arpl jmp pop int3 add out xor sub aaa je pop pop push adc cmp dec pusha inc mov inc pop pop inc in xchg ret cmp lock sarl adc pop loopne mov push dec pop sbb inc leave cmp and cmpsb adc xchg out nop out pushf mov jns cld add pop outsb push push or or xorb and add adc xor aad (bad) mov or cmp dec xchg mov push rclb je push mov xor mov rolb mov sbb (bad) adc testb int3 test mov into rol daa (bad) jo pop jae add pop adc insb dec int (bad) mov lahf ret sub aaa bound add clc sbb mov cwtl rcrb jl pop dec nop fistl xor sahf sub cmp sub adcb ds (bad) aaa dec xchg dec jge fcompl in fimul add push mov stos cmp adc mov sbb or mov sbb out or xchg add jnp ljmp (bad) jno cmp dec fcoms jle ret xor sbb sub pop pop xchg arpl jo or cmpb adc xchg and sbb call insb cmp pushf lret lods inc xor (bad) imul (bad) repnz ret add mov mov lock inc fnstenv mov jo cmc mov add clc mov adcb or test andl push lret loop js hlt pop (bad) icebp ret sbb inc mov push (bad) rolb cmc popa pop gs push leave add (bad) inc stos repnz add mov test addr16 inc adc jbe pop inc or bound mov rcll xchg or inc adc lea js pop call arpl cmp jb or aaa in dec mov fs xor mov push outsb push aad lret add adc add ss mov repz aaa daa push sub xor rorb jle add cmp jle dec lret push bound dec repnz jne fs (bad) add into sarl adc push nop add pop mov add xor js and mov pop dec bound cmp test repnz xlat fwait test sbb xor jle daa mov mov and out add jb loope sbb pop addl cmp bound cltd ja sbb xor les mov addr16 inc xor frstor insb lods inc xorb sahf sbb pop insl or add and pop or inc mov add jnp add mov xorb mov mov push cmp and icebp mov sti cmp out movb popa jl add add xor jns into loop add mov mov int add adc mov rclb (bad) jb les in cmp xor xchg jae into pusha cld or in or in xchg es push es fwait mov mov sub mov arpl les (bad) mov loope adc cmp adc lea add repz sti adc fidivl sbbb mov sbb fcoms add ret dec fs lret adc (bad) les cmp dec pop mov into add sbb mov sbb iret out in lret inc int3 fdivrs add movsl pop pop mov push cmp pushf push inc mov inc xor cmp pop nop jp lock and xchg lret fildl push lock fstpl or or cmpsl adc das rcr iret notl clc flds cmpsb or dec sbb xor shlb add sbb xor pop adc mov mov das inc int3 stos or repnz dec xchg add mov jp outsb shrl jecxz inc push cmp jae arpl add push dec out popa xchg cmp adc adc negl push jl add fisub sbb mov enter sahf mov rorb push xchg in sub xor jnp aad push mov leave prefetcht0 cmp push push adc je mov add ljmp pop into icebp mov mov add cmp subl cmpsb inc imul inc jb idivb and pop lods add push add mov roll and int fldl aam pop or mov and dec mov jmp dec add mov and icebp mov mov add xchg mov add dec sbb mov xor repnz in cmp call mov divl mov xchg mov mov push mov inc les xor jno leave and xor jp add insl mov fadds lret dec xchg out jle xlat add psllw mov xchg cld fs push mov scas dec movsb adc inc jae and add xchg fwait shrb dec roll or mov adc pop fwait imul sub inc insl or xchg add sub xchg scas add insb xchg inc (bad) or cli sbb add sbb clc lret mov std adc dec push add enter lret icebp dec imul xchg lock js xor mov cld and and or cwtl cmpsb mov cmp add je or mov or stos loope packuswb cmp add mov push pop insl test bnd or out out subb lock pop repnz jecxz mov mov outsl cmp mov pop mov jns cmp cld fldcw adc mov orl repz push jl fs inc cmp es sbb sbb mov mov xor dec inc int inc lods and rorb cwtl (bad) mov jne adc adc (bad) cltd dec cmp imul aaa jne push xor mov push and push pop inc aas addr16 incb pusha mov roll es or pusha mov (bad) push mov repnz mov jmp int cld push xlat mov int sbb xchg mov aas pop push adc (bad) push ds aam fcoms add adc cli xorl add outsl adc shrl mov and add xchg in inc pushf jle push xor (bad) icebp xor cmc dec daa lea out add push cmpsl jb xor (bad) xor jl fadds pop popa sbb mov fist add jno cmp mov xor xchg mov adc cltd mov jp gs or mov cli daa add cmp call mov add sub (bad) mov xor faddl pop xchg clc loopne fwait mov fcmovnb imul and xchg xor scas rcr popf ret pop dec mov jae adc test leave pop or add addr16 mov or stos jg punpckldq leave and scas sub mov movsb add adc dec and je call imul xchg out add mov pop mov and test (bad) mov add mov popa add or add sahf (bad) mov sub nopl jo pop inc xchg mov pop cmpsl call shrb mov mov das mov mov out mov add stos xchg ret add mov push dec inc and or hlt jg in (bad) in sbbl or xor test pop fisubr pop push scas adc sbb xchg inc in or sub jae fistpl sti xchg inc add mov push lods pop xchg mov jbe mov mov xor scas les roll xchg mov outsl adc call or dec mov pop jp lds jae mov cmpb adc and call fisttp in int3 ret pop dec dec and add fcmovb sti lret das and int cmpsl add or ljmp lret lods sbb (bad) addl mov mov jns repz int popa pop sbb push loop sub cmpb (bad) (bad) cmp hlt or (bad) push jp xlat push sub das cmp sbb mov fdiv ret les mov pop add sbb dec pop test lods xor sbb sbbb dec in add cmp fsubrl aad cmpb cmp xor je jb sub xor outsl nop or lahf mov aaa sbb les and cmp mov sub or mov (bad) sub lock mov add das lcall adc mov mov add lods sbb or or add jp loop xchg bound fs inc jno or lcall pop mov test sarb mov and or xor xchg fsubrl fs adc and pop mov sub popf dec fsubs fisttpl cmpsb add sti xor mov fwait sub cmpsl mov les or fild pop repz dec shl (bad) adc inc cmp cmp js sarb clc add mov pop mov push dec push xor repnz pop mov repnz popa sub shlb (bad) loopne add lock sbb cmp add pop add xor test dec mov call inc mov jecxz je test add sbb add add mov insb adc orb cld adc clc aas mov iret inc push fdivr mov repz cwtl add mov popa js push orl jae in mov mov pop (bad) dec add mov mov push out or push cwtl push push das loop stos add clc test cmp jb (bad) push add cmp pop mov xchg push xor add andb les cwtl nop ficomp js pop adc mov mov das inc add lea jno inc dec add push mov ret cmpsl xchg rorb cmpsb mov aaa ljmp add lahf jmp int fnop fcomps icebp imul bound out inc sub or lret cmp mov aam or inc dec cmp xor icebp inc call inc mov (bad) incl or lds test lret pop scas (bad) cmovp jp or mov pushf add shlb ret dec es add mov (bad) cli xor aas mov call sbb roll and into ret push xor (bad) int3 je add ret inc stos lods movsb mov push push (bad) sbb frndint mov cmpsb mov and jmp xor add add sbb xor jl pushf sub pop clc add jnp cmc adc mov pushl gs outsl pusha push out cmp pushf sub (bad) pop ret push je (bad) sbb (bad) pop add add jl mov sub sbb shrb cmp or mov dec popf repnz call out adc push fs or pop jne dec mov add jl (bad) pop std add add cmp lahf sbb sbb out test push mov add or les pop test mov insb or inc in jl pshufw loopne push dec lock cmp mov xchg cwtl test int movsb addr16 inc xchg aas push inc pop push fmull inc (bad) jb aam jle mov sub lahf in adc mov xchg and sub pop xor fwait adc aaa dec cmpsb shr inc leave jg or sub rol rorl cmp hlt or mov add or mov inc adc test (bad) cmp sahf push outsl add test pop add and call push cli jnp add cmp lods lods ljmp add notl pusha cmp pop add enter cmp loopne insl mov push cltd xor and divl or adc sub mov loopne mov shl stc sub sub xchg jnp and pop mov and insl (bad) xchg cmc jp loopne push mov jb popa aam rorb pop cltd adc sbb mov and sbb aas das sarl clc mov adc sub lods hlt popl lret push jbe mov jl ljmp xor add movsb mov push mov mov addl out nop mov lret or in add mov xor stc sbb mov push xor data16 lret lods fwait sbb mov xchg xor pop mov sbb jne lahf sbb adc (bad) mov pop push pusha sbb and add or mov mov stc xor hlt xor fcomps adc add push jle adc push outsl and mov iret in enter inc call enter inc rolb rolb leave daa (bad) into jmp std shlb sub adc push repnz sub scas adc int xchg fadds into push push mov iret add stos clc push insb mov mov xchg xor aaa add mov mov xor nop push push enter jecxz outsl dec add pop dec push cmp les cmc or or dec dec sub pop mov pop add dec loopne and xor fs xor add sbb pushf xor add mov lcall add cld into add or lock jns add push or inc cmp clc mov inc xor mov mov pop mov and adc dec adc jg je adc in outsb or icebp jno xor cmp jl leave addr16 adc xchg jmp inc mov push dec (bad) sub arpl loopne jge sbbl and mov xchg adc or sub es data16 sub cmp pop cmp mov ds test adc mov sub arpl daa lods mov enter mov ja jecxz,pn cmpl dec or mov or es mov repnz (bad) xchg sbb pop hlt add lds pop movsl mov mov ret repz clc push repnz mov cld add lcall test xchg cmp lret loope ret dec pop loope or cmp pop add (bad) daa lock pmullw push sbbb jae add lock xor in sar and xchg cmp jle popf roll js add inc jns xchg lea pop xchg sti or jb sbb lret js cli insb cltd pusha adc jbe sbb add adc lret add inc cld cmp insl mov fs push int3 push pop or add sbb in or and cmp jno nop or or pop mov dec jl je or push mov mov fmul shlb add mov and cld mov sub add cld mov fisttpl xchg insl rorb bound add push inc (bad) mov and dec rorb (bad) mov mov notl sbb cmpb and sbb adc ja (bad) femms sub add cmp add loope push imulb (bad) adc mov cmp xor inc pop sarb add or fs push jbe add std pop leave or xchg inc les sub icebp stc sbb dec js orl out inc mov ret test push or pop inc outsl bound ss imul ret xchg adc push pop add sbb xor or and xor cld mov xchg cltd repnz xor nop sub push cmp movsb pop add pop lock or dec pusha push jge jb fwait and mov inc sbb adc sub (bad) sbb (bad) leave ljmp pushf or fs and mov out and push out andb inc fcoml or ret or inc cmp push imul pop sahf or pusha add hlt out add ror inc cmp (bad) in ja mov adc push fcomp dec cltd adc (bad) or cwtl iret lock push adc enter lret dec cmp cwtl in arpl xor or sub cmpsl adc or fild xchg lcall test mov clc push pop mov inc inc xchg inc call or js js mov aam mov sub stos popf pop xor (bad) or add dec je jmp adc sub insb jbe leave out xor subb into aas and les or sbb (bad) loop jno (bad) lock addr16 cmp aam mov xchg and ljmp mov xor xor movsb pop and repz lods cmp or lea in lods call sbb push adc andb stos add cmp mov pop mov mov add pop xchg mov cmp adc fiadd in in mov cli faddl xchg pusha scas pop mov and and mov lcall xchg lahf int3 out or cmp cmc call repnz aad add ret and xchg out or mov mov xchg je mov enter adc mov sbb movsb and cmc xchg mov loopne mov xchg add outsb ja clc jne add pop mov shlb mov adc das sub cmp das scas pusha mov mov jne mov pusha add cltd or inc adc xor lock (bad) in stos sub loop cmp cld (bad) in push xor and les or sbb xor andb (bad) or xor insb add sbb cs ret or imul xchg outsb aam mov outsb loop popf sti sbb push mov add adc pushf push mov scas or sbb aad andb add sub (bad) sbb mov enter mov cld add xor push add outsb cmp jbe pop into sbb loop loope xchg ret subb or xor and xlat ljmp jo add mov cmp addr16 and or test cmp daa mov faddl add push (bad) mov es dec in mov loopne rolb pop push cltd sub push pushf push xor rcrb dec push sbb (bad) jl outsl or loop sarl and add pop (bad) jae or rorb mov pop add sbb jp outsl ret mov aas jo cmp jl push pop mov cmp add mov int3 test or xorb pop add inc addb les push clc push mov nop rorb add pop lock and inc cmp adc sbbl lret mov add pop leave data16 mov mov push add lret inc mov shll lret int3 push push sbb push in cmp cmp pop fcomps rolb adc sbb push (bad) dec or ljmp inc (bad) fdivrl adc push inc pop pushf rclb (bad) jl add xor ret sbb lahf pop dec ja pushf add mov or dec out add bound dec mov inc daa in nop enter and adc jne adc mov call push inc sbb les es andl fs (bad) int3 pop sbb mov cmp mov call pop mov pop adc push add xchg pop pop faddl pushf cs cltd push icebp mov xor xor mov pop or mov mov hlt dec fsubl les insl addr16 dec test xchg lahf add in into scas out lock xchg or ljmp les cmpsb jae jbe or cmp sbb xor xchg in mov rol hlt add xchg repnz rorl xchg imul inc ljmp aaa int cltd jo lock mov xchg test out xchg sub mov jo or xor pop mov enter inc shrl mov adc inc sbb sti pusha pop push add and add clc pop orb ret push enter add inc test push sub add test add add addr16 cld sbb pop adc movsl fldcw test cmp push push (bad) out aaa xor je add push lret lea in add aad mov adc in dec popa lcall mov or lods or (bad) inc lahf push mov repz (bad) pop xchg add lret imul fiadd jp or movsl int or xchg or cmc cmp inc xchg add shll scas mov ret fsubs pop shlb or sbb out sub mov adc pop sbb test inc cltd mov es les fisttpl push repnz (bad) xchg aas test arpl add mov add fs dec mov hlt and jne sub lcall and sti dec js inc adc pop add pop adc das push stc pop int inc addl sub sti lds fmull mov push mov add lret outsb scas jg sbb jb lods adc lock adc mov movsb lock mov movsb add jmp add (bad) inc stos add xchg test mov jmp adc test repz loopne add add add cmp jmp adc lret adc xchg push test sbb mov je in (bad) mov jecxz cld enter ljmp pop and jmp dec ss adc pop adc mov or jge dec (bad) lock fdivl repz add lods cmpl adc bound inc adc mov popa xor add sar ret dec sub push push dec mov inc ficom jp push sti enter jno mov adc shrl ret movsb add mov stc lahf loope cmp test add add or icebp or nop ret inc add (bad) adc xorl sub int3 add fwait out lock imul mov adc clc add mov push sbb cmp gs xor pop imul enter mov mov sbb jg loopne jmp lahf add (bad) jns dec push cld or dec sub add popa pop jg xor add push push mov cmp rol (bad) sbb aam mov add mov pop lret nop mov in addb cwtl ds popaw push sbb in outsl or shll adc (bad) jmp paddsb inc xchg gs sbb xor popa push mov xor loope dec jmp xor cmp lret out or mov add xor cwtl in push mov je cmp and sbb or pop jecxz add decl fildl loopne ror scas out and cmp out mov test xchg mov or add inc or jge adc add lds (bad) dec ljmp jae adc dec rolb cmp popa adc push lock cmp xchg rolb pop mov mov pop mov js fadd push mov pop xchg xchg push iret (bad) lds adc xor pop test mov lahf push lahf pushf cwtl push fsubrl cwtl push mov pushf xchg sbb cmp outsl mov movsb xor add cmp ret push lahf xor mov outsb add jns sub and adc xchg fstps sbb psrlq lcall mov or loop add jecxz (bad) cmpsl add dec cwtl and sub mov dec push mov lock (bad) mov sub sbb nop pusha push int repz ret adc fsub or repnz push pop push inc mov addb repnz test jmp add sub out or imul pop inc jb mov push outsl repnz (bad) xor sbb xlat xchg js pop pop adc test mov jp fs sbb jb mov in adc or mov mov outsb pushf lds lock (bad) aad rcrb sub fsubrp cmp and mov add test push roll push cmpb aam sub clc aad and bound mov mov (bad) xor push popl rol ljmp mov mov (bad) (bad) cld push inc test push inc lret (bad) cli sub out (bad) leave cltd push pop xchg dec cs inc dec sarb add sahf movsl cmpsb xchg push xchg pop out cmp fcoml orl fisubl test out mov jmp cwtl icebp andl push cmp jo daa das ret mov lahf test cmp outsl ret add push test mov leave aas setne xor or inc jno dec clc call imul mov clc pop cld push xor shr dec inc lcall lock pusha pushf fs inc cmpsb rclb lcall lret xchg mov hlt add ja xor (bad) mov es or pop hlt pop loopne mov jo lret into mov sahf pop and pop sub aas xchg add mov int3 insb add pop jno and mov cmp stos nop mov and xchg out sbb adcb mov incb add imul pop inc insl icebp test mov mov mov xchg mov inc xchg outsb or dec das cmp popa push aaa xor push ljmp repnz xchg in add lock xchg cs dec fwait cmp xchg cltd sub and xor cwtl rcr sub fcoms add outsl and mov sarl adc xor loopne in xchg popa fs je mov mov inc sysret pushl sbb rclb or mov or jb push ret fist addr16 xchg add dec scas arpl push push enter sti cwtl pop fld jg push mov outsl lock lock cmp mov inc add jno ret adc add xlat or pop mov test push or and dec mov add mov mov mov imul mov aaa js ret adc ficompl xor jg inc test add adc mov shrl mov jp es neg and pusha jns push cwtl or or cmp adc lock add in popl rorb add sahf and jp cld mov add adc mov adc xor sub fiaddl push or sbb jp pop sub mov and arpl xor inc xlat inc idiv cmp push cmp cmp aaa int3 jo and leave test add mov cmp cmp add dec cli push repnz push movsb jl or hlt mov (bad) jbe ja icebp pop push push push aaa mov push scas sbb sub xor sbb pop (bad) push inc mov mov pop clc popl scas mov cmp into cwtl jle imul les out cmp in rorb (bad) lods das mov push enter cld mov xor or js clc dec in mov hlt sub (bad) outsl sub call test push inc add addr16 nop out enter in mov loop inc add sub adc loopne ret or xor cmp push adc jp add mov loop fmulp test cmp rorb xchg mov jmp int adc ss insb mov add (bad) (bad) (bad) shl clc out or add xor fldl inc dec repz push add cld mov pop adc popa mov and dec shr lea repz push jl fisubrl or cmc in sub mov je mov sub or push aad das loopne dec nop movsb add or or inc mov dec push dec add xchg lock lahf mov lods je jge adc pop stc adc or fcoms in adc lret mov cs pop or add movsl lods add lea rcr daa adc cltd inc add sub je sbb testl fcoms out int3 sbb leave add roll insb cmp out fcmovb inc dec or lods pop in cmp gs add push addr16 (bad) adc cwtl inc push or dec jbe push mov mov mov cwtl add arpl xchg jb adc (bad) adc mov push pop sub test test inc add mov (bad) inc or add dec push xlat add cmp xchg cmpb call test xlat scas or repz inc pop sub cmp loopne inc js pusha mov jae lock add lods mov add push pop xchg leave cs push pop repnz sbbl sbb lock mov jecxz aaa aam cwtl pop jge push nop pop and negb cmp outsl mov aaa inc vsqrtpd add mov push call sarb stos cli pop imul inc push daa insl add (bad) out push sarl sbb lock pop nop or js add dec xor xor dec dec add add bound lcall shl add push fldl lock dec add xor fisubrl inc call in push cltd rol jg stos cmp js outsb mov mov push (bad) xor aas adc repz adc pop hlt pop mov dec cmpb sbb ret sub lahf xor mov add lea or in bound jg mov out dec in popa adc xor mov jge add ret add jns lea mov aaa or les cwtl adc add sub mov sbbb rol in out xchg loop lcall add movsl xlat push icebp iret mov dec pop in arpl sub psrlq sbb push push addr16 adc cld mov jae scas jle and gs push pusha cltd add lock mov lock imul add pusha mov and sbb inc sbb in roll sub (bad) add andnps push and fidivl scas jne lock popa jg pop or call pusha adc mov pmullw ret cli push enter cmp sub adc imul mov inc (bad) fmul out push or adc pop mov pushf loop sbb pushf aam mov ljmp (bad) push in das add and jmp sbb shrb movl xor hlt dec negl pushf add jb add (bad) sub add jo xchg adc pushf loope xor add xor add lret stc test loopne sub pop pusha add add jge notl mov mov xchg or mov adcb sbb loop aad cmp pop add xor (bad) sbb fadds sub pop or xchg shr add or lea push loop cmp and ss jle dec sbb mov lahf add imul add scas push mov icebp push add pop dec out xor fist js js add sub mov adc popf xor nop (bad) out cmp and pop pusha lods rol outsl add mov and incb jne mov lods xor cmpl cmpsl or add std mov push lret xchg add push sbb lret inc add mov ds sahf in mov aas ret add (bad) js mov in scas xor push rorb popa jg adc jno dec jbe sbb insl add cmp and pop mov lds mov mov jmp adc add iret test push out mov sbb inc or lods adc mov mov daa pop loopne std loopne xlat add cmc ret mov scas and or popa add and mov mov dec stc add cmp (bad) xchg (bad) jno bound and dec mov jnp dec dec insl hlt call into adc dec jne lea pop add push gs xor ret lldt mov mov dec test adc std dec in aas int3 mov nop xor inc mov movsb pop and imul push call lahf mulps call or adc or rolb mov adc or adc adc push add and mov xchg xchg jmp lahf or add lds nop aam movsb or test das mov scas (bad) add inc in and sbb sub push xor sar push call movsl add test mov jecxz add out jno inc (bad) ds inc cmc mov add cmp ljmp cwtl add dec pop out sub decl mov xor cmp xchg sbb outsl push (bad) mov push mov sti jns orb mov in or mov sub dec int fstpt lahf add or test add cmp push and add mov mov adc jge aad mov andl add mov mov int3 jg outsb xchg cmp mov out outsl sti cmp popf (bad) rcll dec dec mov ja rorb or mov loop inc faddl push addr16 into lret out mov cmp fmuls push push sub push jg int3 fs mov pop sub add jbe call into jp inc mov inc das sub add sahf hlt adc pushf cltd fisttp mov mov sub ds imul cli push pop enter xchg mov imul mov in (bad) notl data16 mov mov push scas addr16 push sbb icebp fadds fcomip les jne xchg cld adc xorb mov mov add cmp arpl cmp ret mov add jecxz notb aaa ja push bound jns int sbb xchg add cmp sbb pop rorb push in xchg (bad) sbb arpl stos cmpsl icebp nop mov pop xchg dec movsl dec mulb mov adc dec adc xchg fldz imul jo movb add in (bad) daa cwtl jnp nop mov sbbl fs mov mov je imul daa aaa adc daa xchg aas adc addb sti and test sbbb xchg sub into mov sub insb jmp in in mov clc add leave dec sbb and adc jmp test testl in add and adc in add push mov lods test in push and sub (bad) dec shrb pop imul cmp loop add cmp clc adc push cli add sub out dec mov adc jle inc dec ror cwtl adc add xchg imul hlt lods int3 add xor add push inc dec mov xor fwait dec mov or push rep loopne mov inc mov clc push data16 dec sbb cmp inc push jnp dec ds sbb xor pop xchg test push or leave and clc jne mov inc mov cmp jne mov or mov mov push lock jmp mov push cmp push xor xor sar rcrb adc std or mov mov add xor mov push push mov aad xor test or push cmc sbbl lahf cld cmpsl (bad) mov bt jmp adc and add rolb push int3 arpl popa shll (bad) or lock lods fsubr inc jmpw hlt or int adc or mov add ljmp pop les loope std faddp mov inc pop or daa push mov jg loope cld jle pusha notb dec and xor nop mov push pop sbb fisubl inc cmpsl jbe cltd mov mov add icebp cli or xor aad push shl add lcall cmc cmp cmp mov mov nop push sbb adc adc mov pmullw in push hlt enter fstpl push out jp ss mov or jo (bad) xchg mov adc lea int dec inc fsubrs xchg lret and and aas pop inc dec sub xor addr16 pop add test xchg faddl add xorb or loop sarb out gs inc jl addr16 pushf push hlt test xor or cmp add imul add je pushf fs in inc icebp test movsl push (bad) aaa adc mov adc jbe pop popa xchg push rolb and mov xor add test pop lahf sti std sarl inc sub aam push andl movsb cmp out pusha cmp sub lods dec aam das jbe mov lcall das cmp cmp add aam ret stos mov icebp pop imul push stos add pop or jo inc ljmp jl push aam enter loope int3 fs sub ret add (bad) insb cmp incb shlb add dec add dec xor lret fwait pop xchg (bad) je jno push outsl add movsl mov pop lret sub jb and inc mov inc xchg jno test lahf sbb or adc or or push push mov mov dec add mov cmp (bad) sub pop push nop lea popf pop pop repz int call sbb cmp mov addl or xor pushf daa ret das mov fdivr push loopne fdivrl add xchg sbbl cmpsb les cmc jns mov push pop xchg push test push mov mov add dec adc fidiv jns inc add mov push insb les icebp push jns add (bad) lahf adc cmpsl lahf sbb or ret cmp pop mov inc push negl mov cmp cwtl mov into add adc rorl pop push mov cld pop mov stc sbb inc cmp fldl (bad) jae mov inc pop ljmp and pop pop jmp xor leave pop add xchg jg les push lcall fdivs xchg xchg popa sbb inc push adc mov into movsl xchg call jno inc std dec rcl clc add test cmp push pop cmp jae cmp lret rol vmwrite mov (bad) lods or mov add inc loope enter dec and test or adc mov jmp in rolb ja push loop xchg inc add inc das xchg loopne jno dec pop jae subb and jne sub mov push mov xor stos test stos daa fdivrs mov and mov enter inc inc mov add je xor in or hlt les inc mov dec mov mov inc jge cmpsl pop inc int add lea jno mov xchg or jg dec dec dec dec les cmp cmc hlt aam xor or inc pop mov pop jbe pop repnz cmp mov faddl jne test clc sbb or adc sub int3 shr pop pushf jp loop push xor and cwtl pop or imul add enter xchg push push pop cmp and push sbb dec mov mov aad mov call add or push jnp dec aas inc shrb sub je clc xchg dec cmp int3 repnz pop sub xor mov test enter add lahf adc inc adc (bad) std add popa inc cmpsb cld add dec (bad) xor pop mov xchg add rcll add les add in addr16 daa mov xor xlat cltd test (bad) ret cmp (bad) fs inc and jp and add movsl pop pop cmc imul out mov pop cmp mov movl loope inc or fiaddl loopne jbe popa addr16 cmp mov and xchg mov cmp and (bad) cmp add or adcl (bad) (bad) (bad) cs mov pop jo (bad) or pop int adc lods mov pop test add leave pop insb adc rcrb add mov cmp dec dec mov mov mov sbb cmp les test insb jecxz or add cmp inc push loop mov add ret xchg imul call dec fwait in mov jbe (bad) mul insb mov sbb loope mov int3 xchg inc mov negb xchg fisubl push pop cld pushf imul shrb aad or push repnz push addr16 rcr sub pop cwtl lss hlt add pusha leave mov mov sarl add imul shrb cli push add adc mov scas adc adc scas jo sbb addr16 or (bad) inc pusha (bad) mov cwtl xor or ret inc in push add pushf mov add add pop or bound dec push push dec or lock inc aaa notb or mov les jbe enter rcrb add subl push sub xor or pop ljmp js arpl call sbb stos mov or mov (bad) lcall sub mov pop sbb pop clc andl sub mov popa xor jle jmp enter push add cld outsl or scas adc mov aaa ret add aam hlt sbb or out xorb xchg jl cmp icebp outsb lods and loope lods xor inc mov cmp out jle sbb fcmovnb inc pop mov loopne or add mov sbb add insb (bad) lods dec adc cmpsb mov sbb fdivrs sarb dec int cmp add mov inc jb or and or sub mov add xchg jo sbb push push add cmp and add xor pop push push or adc fisttpl (bad) jo imul movb icebp inc cmp cmp dec (bad) enter loopne dec mov add pop out xchg or outsb cmp pop test dec (bad) shl rcll cwtl xchg jns dec pop add iret pop cli ret or pop (bad) lock xchg sub inc jmp and jmp clc cld lods pusha lahf arpl add div pop sahf mov push dec shl add xor insb cmp lock xor rolb dec xor adc les xchg hlt addr16 test or arpl insb mov or add cmp aas cmp push fs int dec je add pusha repz cmp xchg je pushf imul shrb push ret lahf ret push xchg xchg test sahf inc or out lods movsl mov ret int cmp inc (bad) clc ljmp pop pop sbb imul cmp dec mov mov gs ret (bad) lods (bad) lret pusha aaa cld adc sbb push mov lods cmp test add cld xor mov mov cmpsl mov test xchg js sub push xor mov imul rcr xchg test jb loopne es and std or add out dec stos mov js test dec cmp movsb in mov rcrb mov or cmpsl fisubr je jge pusha call adc out cmp and xchg imul adc add pushf add fnop add iret pusha xchg nop jb daa out fldcw mov sbb mov icebp mov bound mov push sub jo mov mov jl dec pushf and ret cmp inc xor pusha adc popf sti sbb test add std test leave aaa fcoml cmp mov mov mov add mov pmaddwd mov bound ret lock or movsb ficompl sub aaa sub jecxz cltd rolb imul xlat cmp loopne dec dec xor or and aam pop icebp je push jmp jo outsl frstor loope mov jo loope rcrl sbb test mov pop xor adc mov shlb add pop pop insl mov ret lds dec or ja dec dec cld add dec adc adc mov lcall pop mov lds mov frstor fistpl cwtl cmp adc dec inc das mov cmp into or and mov lret jno add fiadd push jg xchg fnsave inc sub inc push loopne sub push mov adc add xor add orl outsl add pop jmp pop mov xchg cmc sub inc jo cmpsl push popf cld (bad) in adc sbb mov mov sub aas jg mov pushf or pushf outsl dec loopne repz sbb pop ss lret xchg jge and inc enter add int3 pop int push lahf lret roll inc ret fiadd mov fldl add jbe cmp lahf or or or sbb add xor fcomi push hlt sbb add dec mov add dec dec jmp lock fistl jecxz add dec pop mov cmp dec push bound adc les cmp adc insb repnz lret int pop aam inc push in outsb cmc add xor jb aaa insl je test popf push or imul cmp das cli out add lods imul aaa (bad) and repnz jle jbe dec outsl sbb adc sbb inc pop (bad) out fnclex inc and add lods sarb push aad xor push add jmp cmp mov inc out iret pop xchg ud1 add pop dec jmp in and push and add int cmp call and je arpl call stc push jle lret jns aaa icebp cltd mov sti cmp ret adc push dec inc cmp int xchg jo lds sbb movsb inc add (bad) stc ret leave roll add mov int and out pusha and movsl mov leave sbb and cmp in add icebp repnz pop outsl or and inc and lods aaa dec cmpsl test lret test data16 xchg loope imul fisubr add fistl dec pop dec pop aaa hlt mov int3 scas push leave jb cmp mov roll movsl and imul addb sahf add mov outsb or mov pop lds and (bad) cs mov les dec jo rol inc add sub stos inc mov enter andb dec pop add leave test nop mov pop push adc fmull outsb add insl pop clc or movsl adc shll lea or aam loopne fimull es imul (bad) (bad) or add pop movsb in mov sub pop cmp pop jb imulb cmpl stc inc repz inc inc and xchg cmp int or inc fstpt loopne sub outsb sub mov fadds popa rol test add rcl adc andb xor and adc (bad) (bad) loop cmp and xlat or sbb push add pop aaa xor les mov pop std add and inc pop pop jns es mov bound mov mov loopne add pop and xor iret inc in jne pushf pusha addb insl aas pop mov cmp daa test sub (bad) dec scas push xor dec imul mov mov sbb lret push xchg stc int3 test sbb lret xchg dec lahf cld call negb test mov add or loopne xchg dec add sbb pushf int or loopne outsb or inc and clc rcrb push sbb push (bad) inc mov or imul out lret dec fwait cmp mov es add lods popa jns inc (bad) pop scas and cwtl dec jecxz or (bad) xchg call orl or icebp add icebp sbbb (bad) add call push imul rcr popf jae das mov add mov (bad) xchg jno je or outsb insb mov jl movsb add mov sets sbb adc cmp lock dec push ds andb sbb fiaddl dec or and inc fcmovb add jmp xchg jne push adc je enter inc fiaddl clc add dec fisubl clc rorb rorb in flds mov add dec sbb jnp das sti mov jg rclb dec popf jl dec mov sbb inc mov leave outsb cltd mov data16 cmp dec xchg stos xchg xor pusha mov mov push sub jp flds mov cltd pop cwtl or pop cmpb lock add cwtl jae insl and aas fwait mov add lock adc (bad) test jb pop cmc scas add arpl add cmpsl pop add and or (bad) sbb or sub push add xor lcall sbb mov mov adc movb inc incb shr stc lds call pop shll jne mov or xchg stos mov (bad) je inc inc dec pusha push jmp test cmpsl fmuls adcl inc andb int add dec add loope dec rorb sbbl mov or cmp jl add xorb jmp mov sahf add add ret lcall cli mov adc gs dec or clc nop das push insl shrb mov mov fldt sub imul inc shr nop shlb fdivr jl cmp fiaddl stos jno sar popa das or nop andl mov or lret xchg sub xor into fcoms insb add jl sub test mov add or in adc jo mov mov nop cmc pop pusha mov add lds fsubs rorl (bad) mov add test xor sbb fsts adc mov test lret jo jl inc jmp xor sbb arpl mov mov (bad) adc inc in lcall shll mov in inc push cmc imul jmp fmuls add loope addb lret xor je (bad) clc aaa inc add add adc dec push clc repz jmp or stos xchg or (bad) push mov mov and mov movsb lret push or loop sbb stc mov pop in xlat inc or insb mov in outsl dec push clc xor add vpaddw xor mov jg sub (bad) jo test (bad) dec pop pop bound and icebp cmp xorb push jl pusha lock in (bad) test sub cmp in loopne nop mov nop adc adc cmpsl xchg mov cmp push add ljmp in or mov push mov cmp pushf push mov xor sub add mov enter mov call push hlt pusha or mov es sub or faddl in mov clc sub mov mov mov mov test and insb cmp xor add mov sub adc push sbb fildl leave repnz lret push inc or add inc dec pop mov jl sbb jbe aam mov inc jo xor jmp xchg mov cmp mov daa xchg out jno cmp inc and push pusha rcrb outsb ret add sbb test ja cmp movb fmuls shlb sub mov test and inc adc xchg sub test and jge cmp xchg dec push add cmpsl push mov enter out pop test xor dec fdivrs pusha sbb jb sub and jl nop js lock sub pop mov jo jle es pop je or std add add cwtl and repz cmp mov jo nop sbb fcomps dec pushf mov out cmc xchg sbbl mov jl dec and movsb insb mov or imul repnz push push stos push in xchg mov push aas mov sub xor or dec dec cwtl movsb push adc sbb sub dec adc cld mov mov pusha cmp dec test inc inc test push xor cmp adc aas jl jo add push pop dec repnz xchg pushf add mov test mov add push stos dec jne push in call xchg pop sub dec int3 xor mov ss jmp dec lock mov cwtl mov fs pop mov in pop mov jmp pop lds sbb outsb mov xchg inc dec xor lahf push (bad) lock popa sbb inc ret mov ret inc mov add sub ds mov dec or or into push jb std dec int3 (bad) mov push int3 xchg dec je pop sub inc xchg xchg arpl ret add push cmp mov rcll lret add jno sub mov and and seto inc xlat js pusha adc and addl in popa jge jg push or nop adc mov adc cmp xor jo or mov adc cmp mov js add cmp push enter or mov out cmp les in andb fdivrs call dec push sbb xor (bad) fisub mov add subb cmp (bad) mov adc fsts (bad) xor mov inc and sahf xor cltd sub nop inc xchg popa fsubrs xorl lds dec sub mov clc dec xor es aaa or add cmc sub fdivp fwait pushf (bad) xor hlt sbb test andb cwtl push sbb add call inc fs add mov jmp in out idivb imul or add add mov in je inc add jbe adc js popa sbb push add lret inc add add out stc push loopne xor test pusha cmp dec sub and (bad) clc stc fwait xor adc stos pop jle add or push add out mov jp add or pop or aaa (bad) hlt test inc outsb or imul in addl fninit popa mov test sub hlt add sub fwait pop int3 mov enter pusha mov pop aam cmp inc (bad) stos inc les loope test or pusha xor xor jns pop hlt xchg jo mov in xchg lret scas push in dec xchg adc subps int or shlb mov sarb enter enter mov sbb or fs mov fdivrs sbb mov add fmuls add fsubl je mov dec sub mov sub xchg bswap lock (bad) cmp subl aaa xor xor sub mov dec mov and xor aas pop push dec subl adc or mov add dec flds mov or mov xchg push das test cmp lea stos subb xchg push test mov mov push outsb and test call adc add fbstp sahf clc cmp rcll jo or mov rcl aam aas out loop sbb pop faddl rolb fistp aaa jg push test jo icebp jl mov and xor inc outsl dec push pop mov adcl pop add adc andb jge nop loopne add test inc sbb adc push movsb dec xorb pop adc adc pop test pop xorl add sub cmpsl ret xchg sub xor in stc inc add test clc outsl insb scas adc movsb fisubrl push or adc jle xlat shr jae loopne xchg in stos fnstcw push fldlg2 add cmc cmp push bound inc inc into js lsl test sbb xchg cmpsl add lret mov aad out inc push jae xchg popl into pop test jne ffreep sarb or rolb jecxz leave aaa call lcall ja test test (bad) data16 lods in jno in pushf sbb mov les test mov mov push repz xor push repnz cmpb mov mov and jl roll sbb lret pop mov mov xchg mov xlat adc cmc fbld sub orl (bad) mov push sub mov rcrl inc pop in push testb adc das cwtl cld js pop dec inc xor fisttp inc data16 aad dec sub out pusha cs mov insb or xchg addl cwtl mov mov add cli mov mov ret clc xor pusha andb aaa clc les sub jecxz sbb push out jno sbb lock pushf shlb hlt fidivrl ds adc push inc sub enter decb not or dec cld mov nop (bad) jecxz mov mov inc sbbb mov xor jle cld or lret sbb mov push dec stos inc dec in add js sub inc test dec scas leave jnp (bad) xor (bad) cwtl jle loope js push je ljmp adc cmp push push clc add (bad) and xor xchg fnstenv movsb dec inc nop je lods mov and push push mov cmp push fdivrp je xorb or loopne mov cmpb cmp add and add mov dec inc js mov out cmp add add xor and jp or push dec xor in pop ffree js das sbb push or or (bad) cwtl dec lcall scas or mov mov jne add call xor mov cs js idivb or lds sbb je inc aad lret mov pop and mov (bad) mov cmc jno and add mov das mov push jo sbb adc adc and lods add jnp cmp add ja dec xor shrb sbb cwtl or or int3 (bad) mov int3 push fisubr test dec adc xor xor jne test add idivl ja jnp add jp xchg (bad) data16 ljmp daa add (bad) mov and push scas ret fnop pop push mov pop jne jg dec push movsb cmp and mov pop xchg je and mov sbb aam adc fs mov out mov mov lea inc mov add adc popa ds clc mov sbb (bad) sbb fisubr adc inc ret les nop add in mov push js add cmpl lret rcll pusha clc jns mov test mov dec xor fildl lds push (bad) adc rolb ja jmp idivl aaa std add sbb mov push sub maskmovq idivl add xchg repz xor adc cmp mov leave ljmp push sbb add lret fcmovnb out lds sbb add out sub mov aad in lock add sub int3 and roll pushf cmpsl dec xor add ficompl cmc loop xchg push xor and xchg cmp cmpsb push pop add in (bad) pusha mov mov xor adc cwtl sbb mov adc nop add ds fisttp xchg and mov xor adc arpl daa fs sbb pusha test nop adc pop lods sbb add lret add xlat call sbb xchg in pusha xor adc lock (bad) clc push add inc js mov or mov ljmp pop add jecxz nop inc dec mov push lret xchg sub aad mov mov add (bad) xor xor rcr mov jo push sub movsb adc imul rcrl or enter add xchg cwtl cmp (bad) push rorl sub mov jns repnz cwtl push sbbl xchg xchg or loop popf push or (bad) (bad) dec mov jmp jp push jbe sbb or inc sub sbb into lea jo and fdivr imull jg clc xor cmp adc pop or fiaddl inc sbb cmp jns js add test loope inc xor pop sbb mov pusha lret adc inc pushf mov sub orb fstps xor mov (bad) jns ss xor xor lea inc inc or mov xor sbb sbb xor pop dec cld mov data16 inc inc mov test xchg sbb add gs stos jge xor sub mov xchg or cli sub pop inc add es call fimull and (bad) and xchg adc cmp sub sbb mov das cmp and adc and sbbl mov pop push jp mov sub cmp in (bad) test shrb sbb mov or lcall sub jo or jecxz lcall add leave adc add bound stos popa xchg xchg (bad) mov fisubrl in xor pop cli add jmp xor push cltd sub cmovno das dec outsb and adc js jl stos sub pusha push mov dec mov mov jo test popa mov popa add mov movl jge or push mov xchg xor xor ret adc lret (bad) xor xlat pop test loopne dec sbb jo dec mov movb push xor push pop cmp sub pop xchg fmuls int3 mov lret mov adc fcmovbe gs and or and in mov hlt (bad) fadds pusha lea mov cmp std fidivl push inc push and in xlat ret leave mov jl add xchg sti test test mov sub mov or adc sbb cmpl mov test jne add out shl xchg and rcr dec fs ja xchg jl movsb add mov int3 mov les test popa mov push push push jae pop add fdivs inc xor xchg push hlt mov jl cmp popf push nop inc test xchg push add add mov cmp push push roll lock das loopne and and dec dec sbb push nop adcb cmpsb dec jbe jnp add sarl jle push push add cmp testl mov mov mov sub inc pop pop jne loope das cmp lods mov add loopne sbb adc pop out dec int3 addb lods popa rcrb inc shrb les cmpsb (bad) cmp sub (bad) enter ret int3 daa xabort test mov or jle fild cmp adc rorb mov je xchg je add sbb push xchg rcrb add sub test lock jo jecxz dec add popf pop daa imul add mov sbb adc push jne dec movsb jmp xor cmpsb test test or es movsb loope dec jb mov test push outsb (bad) fsubs pusha daa (bad) stos les push imul call (bad) or fmull and mov jl and add cld cltd js lock and loopne in test sub mov scas sbb mov or sub mov adc das mov mov sarb movlps cmp arpl xor mov dec cmp nop lret mov push clc out rcl icebp orl mov cli lock push loopne les arpl push xchg push xchg inc std inc dec orb add icebp jecxz out sub or add das sbb in fmull (bad) pop imul sbb fildl lock or lds rorb mov push push addr16 xchg sub adc lock cltd movsl add mov pop shr aad push movsb mov mov mov mov ljmp call jl inc sbb mov pusha cwtl cli or pop dec rcl or pop pop pop dec sub and dec dec xor mov scas push int3 xchg adc add aaa sbb rclb add push ss adc shrb cs jmp adc adc ds pop lods inc bound stc lahf lcall inc dec jmp mov pmuludq arpl pop dec sbb or mov lods dec jbe dec xor cwtl push xchg stos dec pop nop les sbb fucomip mov test and fmul and lds inc adc mov cmpb lds push mov js add (bad) adc add test call in dec in xor iret inc xchg test adc les lret adc sub int3 push pop out or fnstenv mov jo add inc rcrb dec or xchg ds cmp (bad) sbb lds sub mov (bad) js in fs mov fsubs ljmp sahf loope fwait pop rcrl add sub mov add clc sahf push push sarb mov fsts adc (bad) push cmp inc jl je leave fldcw enter push push or scas inc in test call xchg lods mov cld mov std push call ss or add mov out adc shrl inc test xor sub inc loopne (bad) repz rolb push mov adc add adc sbb cmp or inc aaa add sbb pop sub in xchg add add mov aad ret mov xchg test dec adc (bad) xor jo ficoml cltd mov and fildl bound jl shrb iret mov mov faddl adc jecxz ds push xadd lock mov inc or jl push packuswb push xor add bound jbe imul jmp inc fwait jno pop sub pop cli jl sub push and mov or sub sub dec mov mov cmp or popa jne mov add lret pushf mov test daa add bound sub xchg in xor sub rcrb in out inc cmp cmp out xchg hlt popa add sub in lret adc ret je pop add ja dec add popa add or dec rcll lds sbb clc mov mov cmp pop adc jo and cmp mov ret push aaa add mov dec sub ret or cmp sub xorl cmp loope clc xchg sub in and pop pop add mov stos inc sub sub add xchg or mov movsb addl or jecxz add rclb xor dec orl pop test mov in cs inc aam sbb mov mov std lds bound loopne scas mov pusha or jne sub xchg cmpsl xor sub mov in cmp mov pop jge daa mov pop lods inc js xchg and mov add xor xor mov lret sub sbb or adc xchg mov aas lock xor sub imul add or iret out pop jg pop popf mov add adc (bad) jmp shrl dec mov or ljmp das mov pop xchg mov int3 fs mov lret push cld add push cltd ret adc sbb sti js subl sub (bad) pop dec shrb mov push add aad outsl out dec and movsb pop jo or (bad) les add and push scas orl sbb xor enter lea sub loopne and adc add insl (bad) mov clc add inc gs sbb lds das add xorl pop into cld sub cwtl add jmp and test rclb dec ret hlt test mov enter mov add and insl gs es ret mov sub pop cmp (bad) (bad) pop inc and sahf dec mov mov fldt pushf pusha repnz lock pop sbb rorb add mov fiadd in loop cmp in pop mov add add jne dec outsl call je pushf cs add xchg or add cmpl add xor in je inc or movsb fisubl stos pop adc xchg sub lahf xor adc pop adc and sub sub pop cltd dec add xor (bad) sbb and push jne xchg add mov inc or gs lods mov pop test pop xchg pop xor pop (bad) jo fmull mov adc movb aad inc jo mov hlt mov or xchg stos or push sbb inc je aaa jle and add and push cmp rcrb push add lcall or push shrb pusha mov (bad) in mov add jg jbe (bad) pop sbb data16 lcall cmp icebp int3 adc mov testl lahf push cmp add call aaa mov sbb loopne pop pusha lahf mov pop loopne lock lock rcrl add push cli mov scas inc add push or mov out aas add jmp enter scas rclb or inc xlat stos cmc pop adc fwait add mov ss jge insb mov add bnd cmpsb cmp aas add push test push sbb mov je mov aas mov test rol cmp repnz add or mov pushf cmp pop cmp daa sbb test mov ljmp adc mov test push adc (bad) cltd inc fdivrp pop sbb aad (bad) jne js lret sbb dec movsb add add lea inc mov ja add dec sbb movsb mov mov mov cmc add orb lods mov mov (bad) or mov stc mov or sahf mov in pushf mov and cmpl mov fnstcw xchg cmp mov popa test fwait or lcall shrb ficoml add add fsubs add push daa (bad) push divl add jb add bound cwtl loopne test add mov cltd push icebp inc add fdivl add dec in subb sbb or cmp rcll (bad) cmc mov cmp dec add lods xor (bad) lahf icebp les movsl in xchg pop jmp add xchg test lret cmp jae in cltd inc aad out ljmp xor (bad) mov in adc mov dec dec movsl cmp and push jmp xchg aas pop mov sub inc cmpsl test xchg mov jbe dec sbb dec jmp movsb out dec mov rolb cmp mov (bad) stc inc cmp in cltd fcoms std pop xchg sbb jg cmpsl nop in or aaa mov fadds or inc xchg cmp in cwtl orl aas repz jo dec movsl nop add dec imul xor xchg aas mov or sub jae test out or movsb add test mov push add sbb mov jmp cmp inc xor xchg xchg sbb mov xor sub mov dec cltd loopne or cmpl ds pop cltd loopne or in shll pop sbb push loop add dec enter push mov pop cmp hlt adc mov aaa cwtl and cmp xor lock and add xor cmp and sbb mov test or push xor inc in push adc xchg inc jne and orl push cmp arpl lock sbb add add mov mov data16 jo lea pop addl xor leave and push (bad) je repz xchg sbb mov shrb mov adc das subl push mov xchg (bad) mov (bad) je pop pop daa jbe mov lret push dec shrb push jb nop hlt cs sbb xor sub inc fistpl incb lds (bad) cld xor hlt xchg insb push (bad) hlt je sub sbb jg jns nop out add das dec adc stos xchg and mov fs or loopne dec cwtl das xor bound add scas insl shrb mov mov test push mov xchg add out add pop xchg outsb mov cmp or xor cmp test loop mov in call mov (bad) lock and mov divb add sub iret call jne sbb das xor clc and dec rorb loopne xchg fsts sub sbb popa cwtl jnp sub inc js mov cmp cltd sbb into pop fbld pusha xor out inc xchg fstl adc insl add lock lahf test hlt adc xor mov (bad) adc jecxz pushf testb push lods sbb inc or mov popf mov xchg and shlb cmp or mov lds imul mov and inc nop push pushf inc shrl lods leave hlt add sbb clc jp orb lahf jecxz mov sti xchg enter ljmp js in ljmp movb adc and inc fs cmp lahf jnp fildll mov ret packuswb mov cmp (bad) aaa js jae jle pusha stos andb mov loope push mov mov cmp pop inc repz xor cmp sub jl and clc rcl push in (bad) icebp push js lock add clc push stos loopne adcb cmc ds and scas js addl adc sbb mov jp sub jmp out orb test dec mov sbb shrb sbb ja sti mov inc pop mov push cwtl pusha (bad) mov sub mov add movsl dec (bad) adc sbb or add and inc mov fs insl shrb ds jnp fmulp inc in cmp xchg lods mov cmovs and inc enter ficoml hlt adc ret aam loopne push or rorb mov mov cwtl push cwtl pop mov mov inc fistl sbb lods fbstp je loop inc pop or rcll and push inc adc test xchg lcall scas jle xor add add cmp push notb pop insb jnp rcrb mov mov fadd dec mov das insb lret mov sbb sbb xor enter and xchg sub inc sar pop mov imul jecxz mov push xor sahf mov or andl sub jmp js push sbb inc loop xor or test add push fwait out jp xchg sbb xchg push add xor adc pop lret adc xchg push stos jmp xchg enter orl adc jae add sub xchg movsl je cmp shr or dec sub ret xor xchg xorb nop xor imul test add jnp cmpl mov mov lret dec fs fmul insb push mov push sub jl and fadds jg sub adc add iret pop xor push fsub sbb and cmp fmul adc std mov pop stos mov ldmxcsr mov add fisttpl pusha movsb push rcl (bad) lret jae rclb push movsl jmp xchg call test (bad) adc aam dec enter adc frstor sahf xorb jmp call dec iret jmp push bound push repnz sbb fistpll or xchg pop lods in sub pushl jns outsl mov xchg jne cltd push inc jo popf or jecxz cmp mov and mov adc xchg or les fldt adc adc sbb int3 jno mov pand jb sub sub dec jbe jo add (bad) mov sub xchg adc xchg aas or mov mov inc cmp fbstp xor mov jmp imul loop mov les adc sbb inc xor ret sti cmp mov mov jae pop mov insb test pushf leave add mov pusha dec arpl xchg mov xor (bad) mov add dec js ret push jge pusha bound or adc or lock jge data16 les rolb mov fld nop or xchg cwtl cmp arpl sarl xor call movsb add pop cwtl and or xchg inc mov inc xor inc lret or pop pop ret cld adc scas repnz sub cmp mov or fldcw xchg cmp or inc add into jo xor add into imul cmpsl adc inc outsl ja jbe adc dec test push add mov jo stos jbe or addr16 in cmp xchg or fstps aam repz stos orl cmpsl outsb or add mov pop push mov mov jbe (bad) pop fs cli push jnp mov dec aad les add pop mov (bad) outsl cli push mov cmp pop sbb sub sbb cmc or rcrb cs xchg adc and or dec out adc adc imul and or cltd add stos icebp mov dec rep and add (bad) incb jecxz push cmp or js mov cmp rcll or or aad xor fsts mov sbb call in ret dec popf je inc xor pop cwtl mov add imul jl pop jnp mov lahf in mov rcrl push add aas into dec adc xor rolb lcall jbe and push fs and nop test enter jge or add insl enter inc sbb push pushf cltd inc add pop mov pop stc enter cmp mov mov push movsb cwtl mov pushf xor sub daa in adc jno cmp mov call xor jo mov mov loopne js add jp into dec pop sub push aam loope inc sbb xchg rcrb pop lock data16 inc pop add and pop hlt nop pop in andl or push jb add adc (bad) dec jae cwtl cmp in js cs imul inc xor xorl fbstp xor mov (bad) pop (bad) or push xor data16 mov mov orb pop push jbe les push add and fs loop jl or js shrl lahf mov loope mov mov lock mov sbb xor jl sbb rcrl sarb ret popf hlt mov push jle pop xor ret jo faddp test dec (bad) and int and mov jne dec hlt orb shrl mov fdiv fidiv out (bad) xor mov sbb sbb ljmp repnz adc or (bad) xchg repz add xchg inc add mov push (bad) scas sub pop jne ret mov push push and cmpsb fcoml repz (bad) icebp sbb bnd push aas xor adc faddp add adc inc loope dec int3 stc mov or hlt shlb push inc verw xchg out mov sbb aad mov add aaa (bad) mov outsl sbb sbb popl push mov pop movsb (bad) js push jne imull aas inc or orl or xchg clc movswl add je jae add ljmp and and stos in jae movsl inc pushf jmp or bound add ja and aad cmp xlat push shrb mov imul xchg add cwtl cmp sub nop xor jno cmc push pop dec jae les push sbb sbb cmp mov push mov imul pop repnz aam shrl xchg pop fs imul cltd jge int3 sbb inc pushf lret sahf or lock push xor cltd mov sub sahf add fwait add movsb sub out mov cmpsb or aam iret addr16 bnd and mov push sbb mov lds call or lea or pop call test ds jg dec subb call mov popf add call (bad) aas add cmp pop xchg sub hlt sub lock or or pop adc lahf or enter and cmp cmp xchg rep sub lahf fcompl mov xchg and ret mov sbb mov je lock jbe pop in push pushf mov adc imul sbb sarl sbb jle imul insl in out movsb jno dec nop enter xor inc fdiv repnz adc add xchg lods in call jle adc jo movsl xor jne imul std jae jo ret and xchg dec or jmp movsb xchg inc or stos jmp mov mov test aam fcomps adc pushf gs cli xor sbb repz es xor out push cmpsb push dec push es add stos sbb add nop add es mov inc cmpsl mov xchg or das in pusha ljmp fdivrs addr16 rol jg sbb dec jno xchg dec loope (bad) sahf scas jmp adc lcall aam and sbb lods mov sbb inc xchg es xchg cld push and adc jo fs sbb jbe jmp fildl dec mov loopne or fildl cmp sbb xor adc ret adc pushf xor pop mov cmc mov mov inc pop push test lock cwtl and int3 pop mulb mov cwtl adc test dec mov add xor adc add cltd sub xchg or cwtl mov (bad) jno pmaxsw inc fs or data16 mov js rorl bound jbe and in and aaa enter cmp cmp xor fadd rol ljmp or pop in pop lock pop leave mov push mov jp sbb ds cld xlat ret adc cmp loopne data16 orl pusha sub std or js fcoms mov outsb push addb (bad) ja xchg out loope ljmp mov bound repnz loopne xor jb test sbb mov jg aas (bad) incl mov add jmp aaa or push in shll out and aas jo (bad) mov dec cmp stc (bad) incb jp cmp aad inc rcrb aad add (bad) out add cmp divl cmp rolb jnp popf adc fwait mov fcoms enter push js xchg lods xor mov pusha mov cmp jbe mov mov mov and pusha push sbb push add sbb inc or push popf (bad) or sbb pop add push sbb or sub lock addb mov xorb lahf outsb add or dec sub and mov mov aas pusha addb add adc int lock push dec add add popa andb mov push mov aas mov add dec add aaa jns popf and lcall fnstenv loopne lock add lcall adc add push xchg xchg in in fs push imul pop cltd inc fsubs je xor or xchg sub adc add aam adc (bad) jo mov test sbb fwait mov mov fcomps into inc subl xor sub in sub (bad) clc ds fcompl lcall test adcl jmp and adc dec xor xchg imul stos int or std cltd pop pop pop scas jmp mov fidivl push das or or push lods nop pop fucomip imul mov sub xor fs push add frstor clc rol insb or je mov xchg out fwait sbb cwtl adc mov sub xorb dec ds loope orl roll icebp sbb hlt or cltd or add or sub aas or stc jno out ret mov and fiadd (bad) lock sbb popa inc jns add rorl bound in and mov fadds and sbb pop push add sbb js mov sbb pop inc or pop addr16 cwtl xor push aad pop nop xchg add aam cwtl jns jl pop dec sub mov pop push or cmc pop or in or dec cli in or test popa pop les test (bad) notb add jmp mov push ror jb adc cmc jno sahf and jg test push in test aad sbb lahf std adc mov mov mov pusha bound imul movsb pop add cmpl or into rolb sub nop add pop sbb xchg pop dec or or inc popf xchg push pushf addl push fisttpll leave ret shr repnz in push test xor dec call sbb jae nop mov and movsb insb xchg cmpsl push in xor push icebp out jb ds mov int (bad) sahf push xchg push add sbb les add repnz push pop push push mov dec pop aam cs test mov pushf js (bad) jns test and movsb scas fadds or lcall lds movsb add in or sub aad mov xor dec mov (bad) cmc in shll xlat add ret in fmull movsb pop pop movsl xchg push cmp add sub add hlt jp ret and rol push jmp mov and xchg adc and pop and xchg and enter jp js test lcall mov jle and test pop repnz sub push or dec jne add cwtl add xor (bad) sub in jnp sub shrb xor cmp sub push adcb or lret mov xchg ud1 xchg outsl loopne (bad) pushf adcb push jl cmp pop jns es movsl mov xor pop fwait ja jbe adc push dec inc adc std sbb inc inc call ljmp push leave imul movsb pop adc push in nop jecxz add mov mov shll fiadd (bad) sub adc jmp fmuls mov in sbbl or rcrb inc push outsl lds pusha pop push mov pop pop adc out rcrb add test loopne lahf ljmp shlb sub push xor test push sbb mov outsl cmp xor js push sahf mov cmpsl mov push clc dec or pop and add iret pop cld dec scas mov ret ds and (bad) jmp (bad) inc jae,pn inc add lods sahf test xchg fimull xor mov shl jns nop add xchg (bad) jo or das and insl sbb mov jnp and call xlat lret adc in rcrl pop lret adc jb hlt lock loope icebp and addr16 or test addr16 sub mov cmp add das addr16 push shrb xchg int jle push popa mov adc in mov and push dec add in add jge jp push (bad) xor int3 cmp lock sub (bad) hlt mov jb push lret push sbb jg jbe clc ja pop fldenv or xor sub xor adc out or pusha nop mov fldl mov cmp and add mov or addr16 lock mov call sbb pop fcmovnbe faddl mov sub mulb sbb orb jmp testb adc and ss xchg xor mov mov dec nop js sub dec pop xor ficom adcl icebp adc or les dec jbe sub out repnz mov push loop fimul inc test loopne popf cltd dec sbb in or inc out pop les or pop out or mov push cmp (bad) xchg and adc mov je dec push or fwait and scas fisub and jmp test mov cmp pusha mov pop decb orb jae mov adc es add dec jnp test cmp repnz adc das mov jns popa pop or jno cwtl sbb jg nop imul in cmp pop sbb stos mov sbb scas pushf and mov sbb daa sub pop jns aas pusha mov add sbb js or fwait or pop xor cwtl pop scas add xchg or gs cs int3 fs and test mov push xor fcompl fimull sub jns inc enter and outsb xchg in mov push push push out mov add xchg std and push call pop add mov and movsb or add xor fldl mov jp sub call popa ret add outsb jp add loop fistpll or std or sbb add adc test cmp ficom dec mov subl cwtl cwtl fs or cmp inc repnz les xor repnz xor pop push xchg adc jl arpl ror mov movsl mov or cmp fmul leave or test add adc xchg or dec pusha repnz pop in (bad) cwtl push mov mov adcl fmuls aaa jbe rolb push push mov mov inc dec adc xor dec bound sbb cmpl lahf out push dec sub ja adc fcoms ss mov dec sub add inc in mov nop add pop lea clc mov sarl repnz enter dec inc movsb add mov test in insb call cwtl dec mov pop xor cmp xchg mov shrb dec sahf cwtl arpl ljmp dec push add iret insb ja mov pushf adc mov iret hlt mov rclb arpl xchg and xorl jmp dec int icebp call or (bad) scas push in xor and and mov sbb push fmuls and in mov adc enter xor lahf lcall repz imul lods xchg dec push cwtl or sti push test in mov imul xchg xor and inc add push push pushf int3 inc fnsave xchg pop xor sbb and push pop jecxz call or or stc inc test lods aas mov pushf dec adc xor pop pushw xor hlt repz pop mov jmp push int clc dec cli mov adc popa and jno insb push hlt or leave mov cmp fisttpl cld sbb add lss xchg and repz sarl dec (bad) fnstenv mov xor fcomps lcall push sub xor pusha in add jbe or xchg cltd jb pop pushf xor pop stc mov xorb std sub fs add test mov pusha arpl mov rolb pop pushf mov fwait mov add ljmp div mov fsubrs xchg sub or mov jae mov sub ret push adc addl mov xor or aas test jle sbb mov gs pop pop pop or fnstcw adc or and pusha pop ljmp movsb xchg jge insb xor cmp jg jb xlat sarb int3 push and xor jbe jp sbb add psadbw and shrb aad pop (bad) pusha (bad) xor loope push xchg call repz sbb in sub in lock add inc or mov adc cmp sbbl dec push movsb and adc leave testb and sbb sbb insl inc mov negb popa fwait ljmp xor add xchg loopne or or ret pop mov ficoml mov push sti mov add repz cs sub testb insb dec repnz int cmpb jle push mov add (bad) clc push dec in clc pop cmpsl int3 inc jge jp loopne dec sub mov leave bound cltd jae call pop mov push adc or add repnz push add in leave bound (bad) mov cwtl or mov xor bound fcom push push sbb mov dec enter ss xor cmp lock adcb sbb xchg (bad) sahf sbb push js sahf lds cmp mov andb js jb dec jmp sbb push xor call cld mov js dec and add jge out cli rcrb fldl cwtl subl ja mov fiaddl push sub stos add mov loop sub lods clc ja outsl loopne icebp js jno add out fldt add out adc adc mov popa cmp xchg sti call push sub mov mov push adc (bad) or jno leave sbb adcl mov movsb jle imul icebp (bad) fucom xorb (bad) aaa sbb call gs adc push aad pop dec mov pop clc mov out ficoml out dec inc dec in inc movsb movsl andl test or aaa imul inc fwait clc lea pop or push and or add mov pop in push out cld fidivl xchg movsl sbb outsl leave add jg and sarb pusha sub xchg les pop lock push add iret fstl pop js pusha mov nop jl (bad) nop inc popa out add leave rclb cmp (bad) mov pop mov push push push insl fisttpl adc sysexit mov (bad) sub repnz sahf sbb add mov add (bad) add add (bad) mov adc mul and enter mov (bad) iret cmc rcrb jl gs pop sub mov pop mov cmp sub and inc add ret sub xor sub enter xor jne pop mov in call and mov lds pop adc rcl loopne in ret mov adc inc xor fldz (bad) lret pushf arpl in mov add push xchg mov int3 dec pop adc sub xchg imul xor out pop fiadd push (bad) sti or test xor mov sub (bad) fildll add push (bad) loope out popa (bad) hlt addr16 push ja repz leave adc add ja add adc push add mov (bad) xchg lahf inc mov fst sarl jle leave mov sbb sbb orb push push das or add daa enter jb xchg cld add cmp in in fldcw out das andb push xchg mov (bad) hlt xor dec jecxz adc pop push adc std dec mov (bad) out or daa mov cmp (bad) das fistpll and mov ljmp test je add in lock add outsl stc push jno sub in mov (bad) sub out (bad) jmp dec push push and cwtl pop loop out inc addr16 subl adc inc test mov shr push inc pop aad lods fldl jp js test addr16 enter push testb mov xor lock outsb or mov mov push (bad) mov fildl subl xchg int3 add loopne sub push inc pusha and mov int xchg sub add insl outsb or inc and sub outsl test inc pop xor push sub lds adc cmp fsubrl mov lcall mov fnop push add pushf pop sbb fimull das lcall aam lds add sbb bound xor div sbb sbbl fs lea test loope push sub int3 sti (bad) mov out sbb sub out push inc mov sub sti mov add sub xchg cmp repz clc (bad) mov inc mov mov addr16 cltd jg add inc loop test and sbb bound test nop orl sbb pop xchg arpl sub lcall ds test pop pop daa xchg pop loop lret xor add icebp fiaddl bound movsb aaa cmp lods or ss mov cwtl add in sti iret and lock mov fistpl mov fs fisubl xchg add pop push flds jecxz sub add push xchg mov addl lret addb addr16 add repz add pop outsl iret out mov push xor orl shll and loop je icebp out pusha or mov xor int3 xor insl mov push and add js repz inc add fiadd test in inc sbb add insl loop mov or sub hlt adc clc sub lods enter inc adc or mov call (bad) push sbb xchg lds int3 mov xor ret sbb push sub pop or push push jne xchg xor xchg and sbb xchg mov cmp cwtl shr push add cmp cmovns and jmp loope sti mov push inc fidiv sbbl sub inc pop out lret cmp push inc not adc xor cld enter (bad) adc ss sarb add sub lret add xor sub enter cmp (bad) jne aad sbb cs out in fsubl call jb cmp dec xor iret dec inc loopne jecxz xor pop (bad) js lds test inc mov iret sbbl lret clc pop pop sub jae out dec jp dec sub (bad) in dec sub sub test add adc inc cs push inc aaa mov and gs mov pop cs or inc flds sub mov pop jo fcompl test (bad) mov mov add sbb cmp and sbb iret in pop fsubs test jns mov pop fs or cmp and push or mov add test mov or dec pop iret shr adc out flds jp push test out test ret je popf pop (bad) ss pop mov fwait add inc (bad) lea mov and sub sbb add sub xchg aam sbb test loopne clc add pop and fildl pop sub xor int3 and nop cld sub test mov jo lock and mov rclb cmp xchg call dec (bad) mov out xor pop (bad) (bad) rcrb loopne iret xor jnp xchg es in int mov pop (bad) into fdivrs test cmpsl xchg mov push movsl xchg mov lea cmpsl xchg cwtl inc jg iret pop jne jbe and mov xchg pusha push movsl shlb jo dec bound add cmp xchg pop adc popa and cwtl dec out fnsave testb cmp test loopne nop add dec aas shrb pop call je cmpsl add push inc sarb jl or aam cltd add and into cmc cmp lcall (bad) jp sbb sbbb mov les imul pop daa movl into shlb pop sub (bad) repz ret inc xor mov stc add iret xor xchg call out push or and mov mov sub sub aaa mov nop jg das adc dec (bad) and jle int3 aas dec out mov dec add (bad) and fcompl adc notl xor inc fdivs inc xor push lret or bswap cmp mov mov add and pop lret sub xlat dec lods dec sub movsb loopne lret cmp jecxz xchg sbb jmp pop mov mov inc popa rolb clc fisttp dec xlat xor stos sub lds or cltd shr addb mov adc and or adc jp add out (bad) aad and cltd xchg fist cmp rclb sub push sub imul cmpsb or out xchg dec cwtl addb pop clc cmp push push jle dec rolb cmp sahf insb and lret push fcoms pop adc aam std add aaa clc bound add or in nop add dec addl (bad) outsl mov int3 hlt dec mov icebp lret pop mulb and gs sbb xchg inc push iret mov push pop mov jmp dec (bad) inc rorl push add cs in and std clc add aad (bad) aaa mov test loopne sub test xchg pop outsl cs dec mov das cs mov adc sub jmp xchg fadds xchg js enter pushf dec nop xchg mov inc inc push push xor pop or mov jg mov pop push pop sti mov aas jg add sub ss add cmp xchg jge rclb mov pop (bad) or into iret aaa loope cs push or lea cmp pop push sub or sbb ret lret js imul cmpsb mov jg rcll test dec test mov lcall sbb jmp inc (bad) rcrl push cmpsb in je or fxch inc and sub xchg sub pop push test mov rolb leave mov xchg stc iret (bad) clc dec hlt sub pop fistl push pop mov adc outsl lds and pop sub ljmp out nop jmp sbb push sub push push mov push ret or push pushf dec xor push add into loopne push adc sub mov push test pop sub lahf cmp mov iret sti mov nop mov repnz loope,pn sub cmp les push addl xor jnp mov in and cmp mov xchg mov add daa leave push subl mov fs pop mov add push es (bad) in xlat xchg or xor (bad) xorb mov in mov push mov pop adc inc sub fs dec add sbb add sub dec cld addr16 mov adc (bad) ja jmp push (bad) pop cs or xlat iret jecxz fnop dec sbbl push dec dec gs cmp (bad) aam sub loopne pop int3 call loope dec add bound cmp push xchg test ss sub mov test add or in out dec stos dec sbb ret fnstsw mov jo dec (bad) dec sbb pop inc or insb and int3 push pushf aam and and cltd in xorb cs icebp int3 arpl fnstcw pop rolb dec jno or or andb add mov sti ret dec add push push and popf outsb bound cmp gs dec pop push push sahf adc add xlat cmp jo aad and test test and jp ret cmp (bad) int cld das cmp add les push lods add cmp daa js adc jnp subb cmp clc sub xor in sub arpl pop push insb cmp call add pop mov (bad) shr lret out push adc and fstpt jmp push jae dec loope loope jmp fisttpl bound or mov cmpsl push movsl stos inc mov xor xchg mov xor cli cmp aas add fcompl pusha and mov inc ffree in loopne scas int3 add pop ja xor lahf ret clc pop mov mov and cli clc cmc pop push mov test popa (bad) fild xchg or fstps popf jae push jp das push xchg xchg mov dec dec mov sbb iret mull ja insb cmpsb push stos int dec out fsubs dec and sbb out add (bad) mov pushf sbb push fild or mov cmpsl xor aas subb pop add mov or enter inc clc xlat add jle pop sti push sbb test cli subb cmp push (bad) lock xchg adc jb mov ja fistp pop (bad) repz inc pop mov pop or pop jbe mov dec mov sub xchg pop cwtl add pop mov stos je or lods pusha cmp mov sbb ljmp add lods add jbe (bad) insb mov inc pusha jmp add jns loop mov cmp je or push mov push data16 pushl push add loope sarb pop jmp sub jb or push dec push cwtl insl add xchg roll jle add dec mov pop xchg leave adc (bad) sahf inc or mov lock mov pop xchg inc or add lods mov or pop jae in mov sbb (bad) jo mov add adc loop add stos ljmp sarb mov mov std mov push popa inc adc outsb cli xor dec pop xlat hlt cmpl aas mov mov test sbb cmp cmp nop mov add or pop fisubrl pusha pop jg adc mov mov (bad) or mov jle adc xchg out or test inc xor fmull adc inc add push dec xor call bound add add xor xchg loopne add add cmp addr16 cwtl add mov jmp icebp mov jl add mov push or cwtl hlt xchg xor or popa push inc mul enter adc mov dec je push pop or adcl xchg daa stos or sbb adc lods pop pushf out cmp lret cmp sbb push xor sbb repz loopne dec movsl pop adc sbb lods andl out xor dec add leave mov or dec rorb lock cmpsb sti in and mov xchg (bad) push mov pop js push jge fldenv xor add out jae add cltd sbb lahf mov aam pop orb push inc call cmpl js mov xor add fidivl add jmp push sub les dec mov hlt cmpxchg jo cmp push dec lahf and mov push push fisttpl nop or push add cmp add mov and mov js adc sarb add push xor jl in or dec nop loopne out rclb jg add sbb loope inc inc or push les lahf jmp nop (bad) jg add pop enter add xchg lahf jl or push negl dec cld sbb push mov (bad) popa adc dec inc icebp rcrb repz mov jl or mov xchg push shll inc pop out inc or ret fsub xchg aam popa push and xor loope xor nop mov dec nop add jg mov fildl popa mov les sti out pop (bad) add loop lock adc xlat dec pop mov jle push cmp mov ja add jmp enter in jbe loop cli mov in add stc lds jnp pop (bad) adc jo pop pop inc pop cmp pushl movl popf sbb sbb ficom lods jns cli cmp add jle xor (bad) xchg jb movsb fs arpl sbb xorb jnp jg pushf sbb cmp mov sbb jmp adc in xchg lods int lock pusha xor cmp mov ret pop push xor xchg xor in add mov mov and mov lcall sbb adc pushf cmp loop orb repnz add cmp imul sarb cwtl cmp test and cwtl add js sub decb in push sbb or imul push divps or add pop mov sbb push js mov mov aas rcrb mov sub xor xor lock nop dec push xchg adc andb dec xchg pop clc subb cmp mov pop mov pop movsb test xchg add pop loopne adc (bad) cmp mov in lds cmpsl es insb (bad) add cmp cmp (bad) cmp dec aas lock pop loope and aaa add (bad) adc push pop sub mov xchg cmp orb adc incb clc (bad) scas push lea push lods xorb inc js add inc inc int3 fwait xchg nop and nop lds mov movb test and xchg pop xchg inc mov push sub mov push mov sub std cmp jb or xchg jl mov mov add lds sub sets cmpsl mov or jge js push jne roll pushf xchg and les sbb xor stc inc pushf pop test push add jbe or andb and test scas mov addb mov mov add pusha push or ret add daa jle or add inc add sub imul test adc mov les pop dec cmpsb mov and ss arpl pushf push mov in aas les movsb inc adc sub xchg insb add jnp inc push pop rcll mov and es cwtl pop js clc rorb xor or pop cltd dec (bad) jo imul sub ret ja dec pop je and dec clc xchg (bad) cmpsl xchg pop fsubrl adc ret pusha fistp lret js mov mov xor iret das sbb cwtl adc mov jno sbb std or mov sub ret inc xchg sahf (bad) movsb push and mov jecxz or sbb imul fs pop push cmp adc jno lock call pop das xchg mov inc dec adc clc and das mov jne les clc (bad) cmp test leave nop movsb mov lcall (bad) dec adc dec sbb nop test jmp dec and and cmpsb sub sbb lds lea sbb pop lods push in movsl loopne cmp pop in outsb push dec xchg movsb bound xchg scas out pop push and and pusha mov inc lods daa ds and aas dec inc mov (bad) push xchg jnp pusha sbb sub lret or or mov dec nop push scas (bad) sbb enter dec add cmpsb les out jnp jl clc es xchg mov mov shrb shlb add inc les sub dec fs call out int3 idivb scas add cltd push mov loopne adc insl int xor inc addl xchg test arpl icebp sbb dec jge xrstor scas add pushf ds mov cmpl sbb roll repz add call sahf mov pop in push rol cs movsb mov add lret sbb mov inc add imul jl mov and lds into sti add mov (bad) mov mov sbb (bad) cltd cmp addr16 stos sbb fsubl jne aas add mov test xchg inc lret sbb (bad) clc test and mov clc pusha in les ret xchg cmp inc lods adc dec cmp xor and pushf insb xor ror and ret stc adc xchg pop mov jno and cmp or sbb je push sbb sub ret scas dec or inc es scas jo mov cmp scas adc sbb jns inc sub andl cmp and fs shlb enter inc test pop sub daa les and inc lret aaa ja es xchg les nop cmp fwait mov dec xchg push cwtl mov jg cmp stos data16 xchg scas iret mov rcr add movsl fisttp cmpsb rorl popa lahf stos cwtl dec xor xlat pop cmp add lea fwait xchg pop adc sub and xchg sbb and cmp push and push and push sub fisub xchg scas pop outsl sub push lret xor xchg aas movsb xor lds dec cmpb mov mov adc dec pushf (bad) push and xorps pusha enter push bound inc and ja rcrb and clc add pop addr16 mov test sbb fstl inc nop or push pop xor aam scas insl mov cmp dec and pushf xor lods jl or xchg add in lret fstpl mov sbb push xchg out in cltd loope int3 push mov sbb push daa inc sub orb les sbb into mov or and cmpl sbb call pop adc or mov mov (bad) repz ficomp mulb xlat pop pop pop stos inc and and sbb outsl adc or dec lods add jae mov roll xchg jae adc push inc and inc xchg fisub sub mov lret popa xchg fdiv xchg sub scas mov sahf inc lods js lods mov or push shrb sub dec insb xlat sarb lret adc and in jo push pusha (bad) mov inc leave pusha push or adc or nop pusha add xchg jp test ds push mov add jne cmc nop clc add xor add das fld add imul dec cmp test out nop mov scas xorl pop mov xchg mov hlt in (bad) ljmp xor mov mov or and jns add sub mov pop dec and es cmpl dec push fucomp xor mov xchg pushf xor or jmp in leave cmp mov insl sbb dec sub inc call adc lock fsubrp out push add rol je cmpsl aaa add (bad) inc mov inc mov incb aam mov xchg jae push add cmc loopne aaa add mov popf add add out push addr16 xor mov add ja cmp loopne xchg ljmp lea cmp cmpsb in add test xchg and (bad) out dec sbb cmp lcall sarl shr sub mov add sbb cmpsb sbb xor sbb pop xchg pop cmp mov add arpl mov rolb inc mov xor xchg pusha jle xor pop hlt pop add sub fcmovnb fiadd cmp jae mov lods pop das cmp adc sarl add add inc inc pushf xchg or bnd mov shlb ds lar dec pushf cmp sub (bad) push sbb xor sub or (bad) jns or sub cmp mov mov mov dec sahf pop lcall aas cltd inc inc sub out (bad) mov push lods in add sub fwait shrl add mov addr16 push scas xor loopne inc adc je and jg and xchg test mov jge adc and sbb add add lcall mov loope push imul int3 test sbb sub and repnz pop movsb jmp adc dec xchg or mov push xchg adc fdivrl jge dec mov push push test sub (bad) in test dec xchg add aaa xor mov sbb push nop pop sbb mov and dec jno push xor outsl add (bad) lock mov add sub sbb mov add add xor leave xor clc push dec mov dec cmc mov test cmp mov xor push loop push mov push ret mov test mov mov jae jb inc std add test sbb add sbb mov mov sbb dec mov inc jg dec xor and lods add xchg test mov cwtl mov mov cmpsb les js cmp loop ffreep pop js dec mov sub inc aaa or push into lods push pop fcoms cwtl inc or pop and lea call enter data16 mov inc and add xchg sbb and jo dec stos adc icebp inc push stc call add mov andb add jge test in mov cltd adc cmpb fldt add out aaa mov sbb pop mov adc loopne cli mov inc adc push sahf (bad) fdiv repnz xchg dec movsb pusha loopne adc pop js mov mov sbb aaa mulb leave or ljmp sbb add (bad) popf sbb leave mov pop inc xchg xor iret mov loopne sub or inc mov pop aam xor adc aam pusha pop ds dec js (bad) xor mov jo gs js push pop adc aam push jo mov pusha add adc add sarb adc mov dec and push or test mov sbbl pop dec xor sub or jnp push mov insb dec dec dec jl ljmp in cmp push mov cmpb cld cmp xchg mov sahf cltd mov mov sub cmp (bad) xchg cmc pop test je cltd loopne aam call icebp add pushf aad add jecxz mov ret call (bad) testl sbb cmp mov push or xor and test cmp (bad) push in add xchg (bad) jo jg js je sbb out adc xchg add (bad) cltd cmp sbbb push daa pushf add pop stc data16 adc xor pop (bad) andl jmp loop jp jb adc sbb mov mov std sbb faddl inc mov sahf xchg cmp pop inc cwtl loopne sub subl leave adc movsb insb inc int3 mov loop pusha (bad) out cmp mov adc icebp push jo dec lahf inc add xor (bad) sbb push xchg mov inc (bad) fprem1 stc pop add in or inc jge shrl jo adc adc jb add xrelease notl aas add movl pusha xchg repz pop mov clc icebp (bad) mov jne scas sbb cmpb or pop dec add xor push add icebp lods xchg inc cld mov shrb add jno in pop lods sub push dec jmp rcl rcrb mov mov add clc ret adc dec les xor mov and adc scas lahf adc pusha xor mov andb sbb enter outsl mov dec orl pusha xor inc pusha mov adc and (bad) cmpsb lcall mov mov mov (bad) add add rorb lret aaa xchg jb and mov sub mov cltd adc cwtl add sarb push mov jp ret subb mov add lock jns xor push std and ret loopne ds or cli scas mov push add iret aas cmp or and and jmp mov into insb and test gs lock cld (bad) cmp mov adc into pop icebp stos push pop add out push adc and inc cmp fstpt xchg ret mov jp and stc movsb xlat fs adc mov sub sbb add int3 inc ds cmp fucom andb es push mov loopne movsl jnp mov inc push mov fs add dec or sbbb add test pop dec add push mov fisubr call cmp dec mov daa repnz out (bad) sbb leave inc pop pushf mov int3 lods jmp int3 mov sbb call gs in mov xchg je rcrb cmp xchg pop push cmp test out loopne leave pop jmp jne fbld das mov push mov pop fsubp adc adc sti ret and inc jmp daa fimul inc xor xchg or inc jnp cld dec fsubl inc icebp jge sti sbb adc je add pop dec sub iret popf inc sbb enter jecxz (bad) jbe inc fs push xor ret inc adc sbb (bad) pop lock pop ficoml push push jne xor jle pop insb mov inc fnop mov mov adc mov insb scas (bad) mov cmc pushf test pop out les sbb (bad) jo add cmp (bad) push icebp out sub xor sbbl popf dec stos iret sbb mov lcall subb mov xor dec and sbb and and outsl sub into xchg dec cld cwtl pop xor adc aad inc test nop das xchg sbbb sbb dec jle and or lods aas xor mov push dec jle leave pushf js pop jecxz (bad) add inc call dec mov mov sbb jge inc bound mov add je add jae nop insb add popa (bad) sbb (bad) lock sbb adc xchg dec pop aad sub mov jecxz fcomps push cmp fs mov mov stos stos push add cmpl pop nop int repnz mov dec in fsts lea sbb fdivrs or in sbb out jne pop rdpmc mov push dec sbb push cmc js sbb cmp sti shrb add dec mov nop aam scas xor cld add lock lds ds and jle adc addr16 nop clc fisttpl cmpsl and lret mov add mov mov (bad) pop add xchg add xchg add int3 std dec add and sub js pusha jbe jb add std push mov mov or cwtl add adc add or cs push fistl insl add cmp movntps mov cmp adc pop repnz mov mov lea ljmp popa lret shr mov xor incl scas xlat dec mov or adc or aaa addr16 pushl test push rcll lahf fadd dec (bad) (bad) jge pop in sbb inc cmpb push shl mov push jmp mov cwtl pop xchg cmc adc push mov mov xchg mov sub add insl pop push add lret pushf inc icebp jo sub add test and clc (bad) mov and add push movl xchg xchg addr16 cmp add cmp dec jl mov mov jg dec xchg or add xchg sbbb insb pop stos mov rcrb movsl int3 add add aas loopne or loope fwait pop pop movsb (bad) rorb jns je push dec enter rclb add mov cmc push aad movsl inc (bad) fistpll jp or arpl out gs pop (bad) and lods fldcw jge adc daa stos clc add push ja sbb push int pop and sbb dec dec in adc nop insl mov lods in movsl pusha sub sbb add imul (bad) jae xchg jno sub and clc repnz cmp (bad) repnz push and inc pusha mov jle add pop (bad) in adc repz sub and or fiaddl dec into xchg adc nop xor repz mov pop mov pop pop in aad imul cwtl sahf xchg add cmp shlb xor mov inc xchg fs sbb adc loop xchg xor out push add lock dec sbb clc int3 xor jo dec mov clc pop ja sbb hlt js (bad) movb pop lcall in test push mov mov push mov sbb cmc iret pop pop cmpb sbb test add je push mov xorb jo jl push (bad) pop idivl inc daa pop lret iret out jmp sbb pop loop cld mov lret fcoms test fcmove cmp into movsl sub inc cmc test xlat push loopne inc aas sarb sbb jno fmuls pop jmp adc cmp aam movsl mov bound (bad) icebp jge adc add into jl jb adc pop sbb cmp adc jns mov pop xlat (bad) and mov add les push fmull mov adc cmp int3 sbb or adc mov sub je pop and pop add mov dec push cmp cmp rolb mov lds or inc icebp dec out push mov outsl jp and insl mov sbb mov mov adc popl fisttpl xchg jmp inc cmp xlat leave sbb and cmp call pop and into and stc das fwait add movsl push cwtl fmull nop (bad) js or cmp jmp sbbb cmp sbbb sub les arpl add mov cmp shl movsl lcall leave les (bad) mov fwait or sbb arpl test fcompl imul mov add adc inc roll fsubs jns bound xchg dec adc je aad seto scas out add pop sar in mov out inc enter cmp in add or cld add out inc push sub add push subb call loopne popa and dec add (bad) andb sub xchg fwait mov and loopne rolb xor pushf push mov jecxz mov pop adc movsl jle shlb xor xchg fbld jb ss sub hlt loop (bad) aam add cmp push cwtl mov cmp lahf pop cltd mov or sbb and stos jp push cltd call and adc xchg ljmp call and lods jle push rorl cmp lock add (bad) das fstl test ss mov inc gs stos sahf sub add xor loopne bound out mov sbb loop stc add cmp mov adc lock inc jns push les mov xchg adc int3 pop in lock jmp std and push add and test push xchg or imul pop add icebp jno cmpsb jecxz xor aam hlt fcomi jge add imul jb adc sub hlt or inc inc (bad) mov xor clc cld or fisttpl in push (bad) sahf out cmpsl orb sbb sbb and rorb movsb mov fcoml lea sbb add icebp ret and adc push and lahf and and jle mov (bad) nop pop sbb cmp and int3 and add add imul inc rcr pop jnp rcrb sahf aas push dec sub or and cmp sub cwtl addb pop aam cwtl add pop xor addb jnp mov mov fldl pop insl lret lods and xor enter mov pusha sahf add pop mov imul jo loope nop in ja add stc movsl cmp push mov mov pop xor push or cwtl and hlt mov adc push (bad) int push jmp (bad) lock stos cwtl fcoml push xlat inc mov in mov mov xbegin cmpsl mov add jno cmp mov cs or and fisubrl popa test lea adc cltd imul into dec cmp roll sahf add mov push mov adc pop shrb mov push je jle lods es jg xchg dec shl fs paddd mov test add cld inc test rorl mov cmp dec dec movsb test jne and mov pusha dec pop xor imul push push pop mov xchg push out add adc inc add sbb std cld or mov ret test jle adc jecxz hlt mov mov bound jns xchg mov mov xchg mov dec jp rcl sub add add cs and (bad) or aad cwtl (bad) xor lods xor subb aaa arpl xor adc or mov inc aas cmp sbb and jo lods sbb arpl adc xor stc mov add test mov lock sbb sbb and inc xor xchg mov add flds jo movsb adc mov pop aaa inc rol jo add xor xorb xor fdivrl pop mov sub cmp dec in and mov andb int3 push push xchg cmp lock add lahf rcrb mov sbb in sbb sbb mov and cmpsl push xor cmp add jne pusha (bad) mov push jg testb pop imul sub roll (bad) int3 js mov pop add jb xchg xchg xchg test cmpb mov push push mov inc in test xchg xchg lahf stc rorb clc fsubs jae push add adc movsb cltd add cmpsb or mov movsb shrl add cmp cmp mov push xchg sarb sbb mov pop scas and jle and loope decl loop lods inc inc xor ret lahf in push sbb adc pushf xor aam add cli mov or mov add jb stos and dec pop push inc jecxz jnp and mov in mov add sub mov nop mov (bad) repz cld scas and cwtl mov lock mov adc pop adc lock xor sub lea aas mov enter test outsb sbb mov clc dec bound adc jl addb pushf or jo push xchg loope lahf mov jo into icebp xor push test fdivl mov xor fmuls inc into pushf sub adc inc jne hlt xchg cmp push fcoml mov xor pusha jl mov outsl cli xor pusha cwtl mov jl pusha add mov or adc aas dec pop adc imul test add fs add int3 loope sbbl enter test out dec movsl in aaa subb ljmp pushf or dec pop xor pop enter outsl mov loopne push xor adc xor xchg fs jp cwtl nop or or lds add sbb movsl jno js dec cmp mov mov out fimull push add xchg outsb ret sub jae ja mov lods outsl leave inc clc add mov (bad) flds sbb out test cmp call lret arpl inc sti cmp or and mov lcall cmp mov pop adc xchg leave xchg ret jno imul jp aas in add dec push or fs adc dec sbb sbb ljmp jge xchg xor (bad) nop sub and push in adc sbb push dec les adc mov xchg add lock test add push into mov mov mov mov xor add (bad) fxch inc mov and mov push pusha rolb jne adc and repz fadds cmp sub cmp inc fs les adc aam sbb lds je mov sbb add and (bad) dec push movsb es inc jae or jle push fsubrl (bad) ja add push fbstp add dec (bad) cmp pop cmc jne jbe out dec jns add or sbb or xor bound ficomp stc cmpsl inc mul ror fdivs test hlt inc sub test insb dec shrb pop or add paddq js notl fidivl nop add mov idivb call rcrl cld adcb mov dec (bad) sti xchg mov xchg pop fmuls cs andb scas rorb sub adc movsb mov call sbb push push sti cld mov sbb pop fidivl add (bad) loopne add fmuls jl pop test rorb and push dec lock add jae ficoml jns push cs dec add add dec push cmp dec sbb add cmp or lret push test sbb mov out testl call je fnstcw sahf leave jge rcrl (bad) rcr sub mov rcl sbb or ret push je mov mov or ja mov jp sub bound mov xchg popf les mov loopne inc xor movl add add add jl rcrb es jnp (bad) push jno xchg mov mov add ja pushf adc inc cmpsb push fnstcw mov (bad) mov in sti mov add call (bad) mov inc adc push push cltd test or xchg daa fsts rcr adc add add add les mov dec xor es xchg mov aaa rcll call xchg nop mov mov dec cmp loope pop stos adc leave add popa into movsb pop mov mov sub xor push mov add dec xor int enter add mov add in push enter or and rolb sub in jle push dec cltd cmp adc ret inc loope jno xor cwtl add xor and js sub mov in mov out add inc push push and push add adc lret in sar aas mov clc mov mov lds mov stos out loopne rorl (bad) (bad) jle or pop (bad) push std inc loopne push (bad) mov out add xchg dec adc lahf push int3 nop xchg cmpsl mov add lret pop pusha (bad) in lock pusha loop xchg lea xchg int3 mov arpl sub jno inc mov xchg inc nop jmp sbb mov xor dec sbb push fidivl inc cs adc mov aas inc dec mov cwtl push das pusha test lods insb xchg imull inc popf pop push (bad) data16 shlb inc (bad) mov aaa sub loope xor add out pusha adc inc rolb pushl dec mov add stc pusha test loopne mov lahf pop or fs adc and (bad) loopne loope out jae inc (bad) or or stc sub cmp add mov add and xchg and fsub mov je xchg sti mov insb aas add lods adc add mulb push jae xor xor add inc push inc mov test dec insl mov jmp jnp sub push dec push pusha dec jecxz scas xchg out ljmp cmp int3 add sub adc into and and and push add mov dec in test dec je hlt push mov cmpsl pop fdivl lea ja movsb ret aam stos or aas xor add scas pusha sub fmull lret sub mov mov lcall cmp rorb dec xchg bound dec mov or push push mov add xor stos in push mov adc mov sub jecxz mov xchg xchg sub adc and adc daa dec xchg js,pn inc inc inc and cld mov dec inc add sub xor adc push lds jge push test lret jae adc xor movsl or sub loopne add in add int pop or cld rclb sarb mov adc inc int3 xchg ljmp fisttpl fiadd mov add jl gs adc jp psubsw mov popf popf adc adc lcall add gs sub mov jecxz add hlt sub mov add pop insl ret lcall push in inc orb xchg inc dec add pushf xlat or xchg mov pop ret ret mov cmp fldl rol add sbb jl (bad) cmpsb sbb rorb loopne push xchg or add add sbb fild fwait dec lods sub dec or add cmp push icebp (bad) faddl (bad) adc aas and jle shrb dec test hlt dec daa repnz clc jp pop cmp cmp sub cld add dec inc imul jo add mov mov test pop xchg cmpsb fnstsw in jbe aam add int push jp cmpl mov inc subb xchg fistpl add mov sbb mov out push mov cltd out cmp jg clc jp or and loope repz pop ss imul add cmp loop push push xchg dec aas mov lods and pop sbb add mov mov pop sub sarb (bad) mov xor and sbb and mov sarl arpl pop adc andb jl adc or add test (bad) mov jae aam add shlb adc xchg pop add test mov jl jge pusha nop jg shlb inc push push xor pop or push in or mov cmp jno loop (bad) and hlt dec imul lods nop mov sbb std enter mov data16 cmpsl jl mov iret fstl jo dec inc test mov cwtl dec popf sub dec or inc jp cwtl sbbl movsl enter test stos call mov and roll js inc popfw (bad) loop jb rorb jge clc shrl js pop or stos das nop add aas mov mov jmp push mov or jnp addl mov xchg aam in jnp mov dec ljmp dec faddl lea add rolb xchg (bad) test pop in int fdivs les sbb cmp (bad) jne ficoml and or outsl fldt mov mov out sbb push adc loopne lods and xchg cmp loopne mov inc jns and push test rclb dec mov sub mov sub inc pop (bad) inc lods dec mov cltd in adc sub stos xchg push test and inc test sbb add mov mov ffreep aam adc lret clc jp sbb push push popf data16 mov leave mov and push loope mov push fisttp clc int3 mov add aas clc (bad) sbb fdivrs mov icebp jecxz mov xchg add (bad) and dec ljmp jl mov push imul jmp addr16 inc mov insb mov add mov pminub add dec dec mov push aas test pop mov cwtl sbb push rol adc popa add and enter lock xor gs icebp sbb or jp adc xorb add inc xchg mov rcrb and mov repz push fs out jp mov xor and and push or sti (bad) xor xchg ret add cmp pop (bad) nop addb (bad) push inc faddl lret push ss add (bad) cmp lods jmp inc icebp dec les cmp pop popf and jmp ficomp movb lock aam data16 xor addb rcll sbb jb and les sub add mov or aam mov icebp fmuls pusha loop jle or push (bad) call cmpl insl xor mov imul lds cwtl js sti ret jle lods push js dec dec jo inc mov mov or inc jle lret xchg call nop lods outsl xchg lods and rol lods pusha and mov add das dec test jo ss test pop lods add pusha pop xor rcrb xchg jg hlt dec stc aas cmp jns pop inc mov sub mov cmp arpl or xor dec xorb push and sub mov push ret jnp aaa ja cmp stos jno std sub inc pop mov cmpb faddl loop cmp pushf dec nop lock push xor repnz xchg sub cmpsb sub loope imul lret and pop or xor cmp xorb push xchg jp sahf cmpsl cltd hlt inc push scas xchg aas shrb jo cmpsl in pop or mov dec inc mov psubsb lds or pusha push cmpsb add push sbb les or out mov jecxz mov xor pop in add cli sahf jne push sub addr16 cmp (bad) and xor mov int3 xchg sub outsb adc movsb movb add inc and (bad) out pusha and les mov add sub add or mov push push lahf into dec sub or je or inc jo pushf (bad) ljmp push loope arpl push mov mov pop xchg lods rorb jle cld dec and xchg sub mov or les and sub xchg sbb popa push sub pop mov shll xor (bad) jb xor jbe push mov push push sahf lods lock and mov pop add push hlt into aas pop int sub add stc imul divb (bad) hlt pusha sub mov daa lcall ror lahf pusha mov pop ds cli pop mov stos popa or add lds or imulb imull aad or lret das cmp mov mov push or gs fucom sub cs add xchg push mov aaa sub andl xchg mov xor inc add xor xchg xor int3 pop or scas test icebp cmpsl scas leave fiaddl aad mov mov repz xchg pop inc add sbbl dec dec cmpsb and jno scas pop cmc jg enter lock bnd xor xchg lods add ljmp or aaa mov pop lcall sub push mov and inc or bound int3 aas and jmp mov add icebp test pop addl lcall mov xchg mov insb int adc push sub xor inc xor mov incl call (bad) xchg jno and loopne clc sbb les (bad) push inc and hlt mov cmp dec jl notl mov add inc mov (bad) push lods dec sub lret push mov pop insb mov lods xchg fwait mov enter lods inc lahf adc int3 sbb adc push pushf stc ret shrb test lahf lods nop (bad) sahf mov fbstp mov adc inc jno (bad) scas fstl sarb (bad) push cltd adc clc pusha in test xchg ret xorb inc xor lcall lock mov add leave iret jo insb xchg xchg push ret shl pushf (bad) add lret push pushl pop sbb mov push xor adc std mov push jle sub sbb or movsl fiadd in jge (bad) (bad) mov and add jo mov lahf lret and mov cltd enter sub and jb mov dec lret mov push xchg add jns scas aas fbstp mov ljmp push jae sub mov dec aad jmp nop jb add sub pushf pop fwait pop mov ja jecxz pusha inc pop dec jbe pop movsb xor or and xchg add jnp sarb inc mov loope xchg add test (bad) fild or data16 call xchg sub adc cwtl jbe add push out enter and adc aas test mov decb test pusha cmp push fdivrl push xchg xchg andl movsb jns xchg xor sub inc mov aam xorb add add mov mov xchg or cmp adcb mov add jnp int3 adc cld and jbe jp pushf push and nop sub fmull loope inc push in add js xor or mov inc push jl nop rolb clc mov inc pop pop add mulps adc loopne mov lock jne ja mov popl sbb pop push aas or and cwtl cwtl leave xchg adc dec dec or das stc mov out mov cmp inc mov (bad) mov add cli jo or sub mov inc mov js mov cmpsl fnop cmp decb mov mov cmp xchg mov xchg xlat add lret and mov dec jl xor (bad) fmul (bad) xor call in mov loopne sbb pop sub mov dec inc add les dec les jbe fs inc clc mov movsl fs out jo js les sub fcomps add mov shl adc add or hlt mov cmp movsl int3 and pop (bad) mov dec pushf mov add cmpsb mov push repz push push sub mov xchg sub lock or mov mov icebp push mov div inc push sahf pop inc lods fisttpll js or in add mov xchg and repnz cmp and or fisub adc lcall repz mov cmp sub incl gs add lods mov mov fsubl ret scas or cs or cmp mov rcrl mov cmp add sbb scas push cld rclb pushf sbb push adc cmp dec inc lock (bad) lcall aas movl mov add test les addl jp or sub or push xchg leave cmp mov or mov fisubr lea or nop rclb arpl add xor pop sbb dec xorb outsb sarb out sub adc cmp fsubl jl add (bad) lcall jae idivl or das cmp pop or pushf push or adcl xorb pop stos mov inc mov fmuls repz and xor (bad) sahf pop mov mov leave popa out fs add mov adc ja pop loopne js xchg aad test add mov (bad) jne dec add stos adcb xchg mov mov or es dec shrb lods cltd lock inc jl lret ljmp adc pop test pop mov sarb ljmp push pop icebp test xor sbb inc add inc sbb mov mov fiaddl xor or cmp fs sub mov mov and jg and adc inc pusha mov mov int inc aas roll stos or or pop mov rolb sarl dec call push cmc lea movsl repz cmp inc pop adc pop out add rol movsl (bad) or add or push in mov ljmp loop roll add jns popa or add xorb shrb or addb xor push jl inc into add sub imul stos inc addl aam cmovb add ficoml test mov add hlt (bad) into je xchg pushf ret loopne insl mov push mov jbe cs add mov andl enter or insb mov mov or dec rcll push outsl push mull sub je adc jle jo pop icebp xchg enter leave mov shrl sub into push dec and rclb (bad) mov adc in sbb fcomip insb add push fs mov stos popa xor and sub xchg dec mov lea add imul and hlt and cwtl sub inc orb leave add lret in (bad) fdivrl nop insb lret or addb pop mov sarb sbb and and xor pop add push sar adc test inc aad adc or jne xchg dec iret sub mov repnz mov pop and xor cwtl popa insl push xchg xor addr16 xor enter ds jl or or int3 in xorl mov lret mov jne dec xchg roll push (bad) notb mov and popa and lock sub sub cmovns jmp cwtl test inc rcll and ds (bad) cmc ljmp sub push inc pop cltd stos lods sbbl imul outsb xorb dec sub aad xor cmp pop fdivl iret ljmp cs mov insb mov adcb adc ficompl rcl pop out or ret in xor aas pop clc cmp pop jecxz stos in loope ds jnp sbbb add xchg clc out (bad) test push xchg sbb movsl push es lahf movsb add cmp jb mov adc or pop inc pushf inc add dec data16 adc cmp adc cltd pop mov cwtl orb sahf ret sub and (bad) push dec mov push pop jmp mov sub sub inc add jbe push push xor and es or enter lcall fstpt xchg push adc je movsl jg cmp xlat mov push les cmpsb inc sbb nop test data16 loopne add or test lea xchg sub inc test or fidivrl pushf add sbb push movq or std inc daa mov mov pop xchg aas shlb add push dec mov or xchg aad clc vmread popa and push inc or inc adc dec mov mov adc add lret cmp add pop cmpsb nop or cmp mov gs fistl fnstsw fadds cmp pop jl jb iret test loopne mov or mov dec aas clc mov js adc adc not and shlb adc adc inc aam adc cmpsb js imul mov mov mov mov mov inc test (bad) mov push jmp xor movsb inc imul dec mov pop lea cmpsb cwtl inc orl outsb mov mov scas mov cmpl mov ds inc add add add rorb push xchg jo test int dec test inc movb repnz pop pop enter ljmp hlt mov loop fs rclb mov and aad ret rcrl (bad) push (bad) mov xor bound xchg fstl ret xorb arpl sub inc jp sti pop out fistpll repnz orl (bad) pop or fcomps or movsl inc je fstpl rcll mov pop cmp (bad) xchg push dec out dec dec aam pop outsl add pop xor int in add in or or dec sbb cld fsubrp cmp repz clc xchg cmp sarb mov aad into clc fldl lock les (bad) adc jge pop mov and adc and adc fs adc loopne,pn cmp mov sbb cltd push mov push mov inc cmc leave add mov cld es mov mov arpl mov nop pop pop mov mov jns pop dec mov jne data16 lea rcrl jmp cltd scas clc js pop sbb arpl movl xor jp and cmp xchg loopne repz jnp leave sahf movsb inc ss pushf add out (bad) nop int3 xchg insb add dec push pop fs pop pop pusha mov or jl cmp repz nop movb loope or xchg jge ret test aaa (bad) mov pop js and call mov and mov sbb add aas dec imul add std cmpsl pop xchg lods mov (bad) int3 stc cmp dec in jne pushf in dec andb leave movsb and dec test push in lds (bad) lock call aad mov pop int3 mov lods pusha or dec ss pop ljmp xor mov and dec jo sahf mov nop pusha cmp push adc call dec xor cmc cmp fistp xor mov push bnd mov inc out faddl movsl nop cmp (bad) add inc (bad) in fdivl inc sahf cmpsl mov jl pop test add push popa fisubl lods xor cltd adc mov push scas add movsl xchg lock in mov sub in inc jmp cmpxchg adc in mov inc jp pop mov in pop cmp add jbe cmp jmp mov fs (bad) cmp dec popl xor dec je xor aas mov or in ss xchg push add xlat jne lret movsb dec push adc xor inc sub dec xor cmp aas movsb nop imul and movb push cmpsb fmull inc aam into adc call or (bad) xor jg push mov cmp out mov idiv stc adc sub mov jmp mov enter mov test mov push xchg sub sub call ror loope or add loop cmc push jecxz xchg and in pop push and fcoms je jecxz jl mov enter pop mov ja sbb int3 in (bad) sti mov jbe mov leave pop inc adc sbb or mov sbb xor and jne sbb pop xchg push mov xchg inc adc iret jae mov scas jl ds sahf adcl add jae push mov testl cld jbe nop add dec in outsl fnstcw mov clc push sarl je dec sub flds or sarb xor add mov add pop add mov pop jae popa xchg inc pop in lea inc xorl popa cwtl call rolb xor adc nop (bad) aad popf mov aam addl or repz fdivl push lock cmc pop push pop sahf test in sub repz fdivr enter in xchg cwtl in les sahf mov sbb shll les aam or sub pusha data16 xor lods test ds movsb xor cld and add sub pop loopne enter mov jo mov xchg add fcompl sahf push xchg shll xor push adc push mov shlb aaa pop hlt jecxz adc pop pop jp sub push flds out sarb (bad) adc mov sti add data16 call adc out push xor push mov in sbb pop fldcw leave jge adc add mov sbbb dec and mov xchg xchg imul inc sarl adc icebp out jmp test inc mov push mov loope mov idivl cmp jg fimul cmp test sbb clc test pop push pop mov push xchg jns jp push sub outsl pop (bad) dec fdivl divb sarb add pop test pop mov and inc test cltd sbb xchg push shl outsl ja,pn adc mov mov pop pop popf adc shlb stos cmp decb scas and lahf enter lock pop aad sar xchg nop push push out or pop cmovp lcall insl clc test (bad) lds inc and gs inc dec push push lock inc add add inc aas fwait repz jp aam popa arpl iret ret (bad) into xor lds xrelease sub ret mov int adc rol loopne (bad) lret fdivrp add sbbb jp je add pop std pop mov xchg xor inc inc or mov add popl push fsub imul xchg divb inc mov lret mulb and xchg test je and adc add pushf das enter in sbb es pop jnp pop add shll inc (bad) mov mov arpl sbb and std inc call add mov sub cmp xlat ret mov jge mov mov mov je jne or mov sahf sub pusha mov xor (bad) xor xchg add add call adc sbb insl test push cmp pop imul nop daa jl add xor test mov mov adcl ret dec and mov or cwtl lahf xchg xor add push pop inc add xchg je dec push cmp jae mov (bad) aaa push jle adc outsb or cld mov icebp push lds test mov push push jbe lret mov add ss movsb (bad) or xor sbb mov insl xor adc aaa outsb mov cltd mov add xchg push push inc imul js or mov xchg cmp jo and xchg xor (bad) inc and cmp xchg adc pop shrb sub lahf aam sahf dec or add fisubrl jecxz rclb xchg sbb inc cltd sbb push lret popa pop add fiaddl sbb push call fistpl push out punpcklbw mov subb leave xor add bound (bad) and cmp mov fdivs mov iret sarb test js fildl push jb rcll push sub mov inc inc xchg add unpcklps and dec push (bad) test inc popa jecxz mov mov cmp (bad) push outsl mov inc pop mov xchg outsl shlb add ret sub addr16 js and sbb je sbb pop aas push ret mov sarb inc jl push test fcoml pop xor arpl js lods test cmp lcall dec xchg mov ret cmpsl repz leave cmp pop add mov xchg add nop dec lods push pop mov mov pop addr16 dec fild mov and pop sub dec dec and ficomp mov cmp xlat cmp pop mov adc incb add rorl icebp add nop sub test mov adc nop outsb mov test add pop addr16 sub fadd pop xchg ficoml dec fwait pop or outsb into les adc bound adc les pop pop adcl adc ret pop mov stos pop add xor or inc (bad) (bad) sub fidivrl dec ds xchg js sbb pop pshufw mov icebp ds test adcl push mov mov adc outsl mov adc sbb sub push je pop shl mov cli rol (bad) push adc hlt cmpsb pop lods loopne mov pop or fidivrl dec inc pop test sub cmp cmpb lahf lods bound pop fldcw push shrb add add push push stos fdivl mov adc push inc test mov or into jmp rcl add jo add dec je sub cwtl push loopne push sbb int sub and aad dec inc adc lcall cli xchg mov cmp enter inc adc mov jns dec fs push int3 movsb mov adc xchg (bad) push rorl pop cld add sub jo or ljmp mov lea mov push cmovle dec shl pop add pushf js sub inc push jl (bad) leave sub movsb add adc dec push push enter cwtl and mov jle rorl pop adcb imul subb add repz out jns add insb shlb jecxz cli rcll lret xor pusha xchg jno xchg or ljmp adc sbb xor inc push gs fadd add dec ds add mov cmp jecxz fimull mov into add (bad) jns (bad) sub movsb pop jmp insb sub bound and ret (bad) push sub pop sahf outsb mov and lea push inc imul and pop es int3 add ret insb adc sub sbb js,pt push sub dec xchg inc pushf rclb dec out loopne int3 xor out xor and xor (bad) xor rolb jl or loopne sub fadd inc shl inc dec inc mov ds pop dec jo aad and nop pusha popf lods push sbb fbld mov ds or lret mov ret mov add xchg mov pushf sarb insl jns movsb mov in ret inc cltd push rsqrtps jecxz push xor add in leave in (bad) faddl inc movsb xor notb push dec ret ret push push cmp cmpsl inc mov dec sub ror or movsl in pop dec movsb in mov flds mov in push pop lret cmpsb or or outsb mov cmpsl loop popf std dec push daa (bad) je add es icebp or sub fildl cmp fdivrs mov xor dec add jno dec inc wrmsr pusha xchg fdivrs mov xchg and pop and fiaddl imul cmp outsb mov push xchg xor mov dec aaa mov push mov orl hlt lret inc or sbb or cltd into mov xchg dec sarb push add push les bound ret push fcoms ret sbb test arpl xchg insb or pop add push clc xchg inc cwtl fcoms xor xor cltd ret mov jle push push test or loopne mov hlt cld icebp fildl test rcrb add imul jl fs sbb (bad) xchg lds pushf rclb push push mov ret and jl push lods dec call push mov mov xchg and cmp sti and pop push (bad) cmp loop nop test nop cmp sets (bad) addr16 mov (bad) or or mov es cmp aaa and divb adc push adc xor fwait in xchg incb mov pushf push add pushf sbb jge inc aam adc cwtl js dec jns movsb or jmp aas mov mov jo sbb add pop inc jbe (bad) test movsb mov sbb mov adc pusha inc adc xchg or xchg js test add cwtl xchg add mov jb imul or loope jb add and les add (bad) cmp and add jmp lret outsl pushf clc push ret js orb adc or divb jmp inc mov test pop lods lods orps jl sbb dec add sbb sarl inc xorb icebp jns and add fwait adc lock sbb dec dec push inc enter call dec in les and dec ds pusha stos cmp ret clc dec mov es cmpsb pop and inc pop inc cmp movsb push cltd (bad) mov lods cwtl movsb inc aas add cmpb mov mov adc mov push and jb sbb ret js xor push pop push mov (bad) and inc (bad) dec jp test mov mov xchg cs (bad) (bad) or in push cld movsb add test cwtl rcl sbbl fsubrs daa and int (bad) pop subl ret add add xlat add push pop test les mov inc rolb and aam cmpsl push je sbb and push adc push adc sbb add pushf lods rorb shrb js sahf add mov push scas and mov js jp sub mov mov repz or push push pop push dec cmp nop adc push mov push test add push rorl dec mov iret add movl jb adc sti jnp push in add inc or pop add inc or insb rorb cli ret js in and add xor jmp scas add mov or mov sar repnz scas adc or lcall jo push or popa sarb jns mov push fiaddl dec (bad) pop sti gs add and dec bound mov leave pop cwtl cmp mov lods jg into and (bad) es push int3 adc add test insb xchg lds dec loopne (bad) xor cwtl jnp mov aam sub sub aas nop mov mov add cmpsb iret mov lret nop push add pop xor push dec scas push push fcom sbb adc or mov out or fild call insb arpl lahf setnp cmp ret ds mov imul or or push pop sub cwtl movb push push xchg into (bad) repz not (bad) xchg lods aam mov xchg ret jg ds lcall (bad) pushf or call or test je sarb xor scas dec xorl mov dec sahf sub or adc mov enter clc stos rcrb insb iret or adc shrb call enter les test cmpl jl inc and pusha rcll xor scas rcll push sbb dec xor add add or std or sub inc and mov (bad) int3 lods adc shlb xor add dec dec andb fidivl mov daa xchg (bad) movsl adcb iret mov shrl xlat fwait adc mov and cwtl fstpt or nop push into nop pusha loopne in int3 scas sub iret in add test push cmp insb and cmpsl pop inc mov cmp mov pop daa call xchg ss test enter cwtl clc data16 or pop adc pop ror data16 cltd nop xchg inc call or loop cwtl rolb popa xchg add add mov mov mov and pusha add mov lea and push or jo sub or into ficompl add sbb adc scas mov push pop adc enter cwtl int3 mov xor dec dec add icebp das aas movsl fisttpll rclb cmp xchg or test pop adc xchg adc push fmull repz or stc xor out inc pop sbb imul jg adc xor (bad) popa sbb push pusha leave adc test movsl adc sbb xor roll pop push xor lods pop cmp test cli add (bad) pop enter or ret jge and push mov push add and xchg lea mov lret xchg pmaxub mov dec pop adc aad test in add jecxz pop push cmp in div xchg lock add mov outsb (bad) jo jo add stos mov xchg movsb insb loopne inc icebp lods sbb dec test cmp dec movlps push inc cs mov push js das inc dec add scas xchg in out or xor and cmp roll test shrb in mov inc fcoml loope adc and or sub dec or fsubrl cmp jg ds sahf sbb and aam cmp ds cmp andb addr16 mov mov mov nop in mov aas add int3 mov sahf fnstsw sub aas or inc push dec and std or push pop xor nop push inc cmpb adc lods mov pop test adc sbb popaw cmovs push adcb pop out and aas pop adc rorl loope jns sbb testb lods add sub mov mov sub jmp mov sahf insb mov sbb mov (bad) sub (bad) std adc sub mov inc ja es or adcb scas fdivr cmp add sbb mov (bad) fldl popf cmpsb in jno push add xchg or adc add movsb xchg xchg ror sub mov icebp add adc popa adc cmp addr16 xchg lock add mov sub sub sub call aas loopne add pop xchg shll clc inc add xchg dec pushf adc and cwtl pop cmp mov xor inc dec call adc jecxz aaa inc xorb inc xor mov lea cltd sbb roll jne inc and in xchg inc sti add cltd lea mov sub scas pop and (bad) loopne inc jl cwtl pop js cwtl push mov and lea loope icebp xchg ret add inc rol inc enter pop fadds sbb sbb aad fs adc fdivrl or sbb lods pop mov and cmp adc dec les ret loope (bad) xor and sbb icebp (bad) jo xor jo mov mov nop sbb pop shlb sbb lock xchg push mov lods fwait mov add mov pop xor bound inc mov xchg lahf pop xchg push add outsb sbb cmp dec dec sti inc inc insl xchg push addl pushf stc sbb xorb out pop and add clc jno jo shrb adc (bad) ja imul addl mov add or hlt inc add sub xor adcl mov inc add jo and mov pop outsb js xchg pop lock int3 pop add jno fldcw push (bad) and cli clc fs dec xchg add sti and add jl clc ja add call cmp aad mov or and dec mov add inc outsb push mov mov les mov inc ret xor sub adc rcl add lcall popa dec icebp pop stc xor ret pop (bad) and sub jo sub add mov push xor cld in arpl and xchg fcompl inc and rcrb mov inc leave and or lock add push imul xor (bad) xchg cli mov add pop jo lret cmc or jg mov push and mov jl inc xchg push iret jo cmp sbb adc push mov imul mov sub jbe movsb add and and sahf dec (bad) hlt add ljmp jo bound pop in cltd jno cli inc inc mov cmp or js push sbb adc test and mov mov adc cmp adcl clc dec iret outsb lds inc js mov and mov and aam push sub enter aas push push jmp cmp mov mov (bad) sub test sub mov or sbb sbb xor sbb sub and sbbb out push cs sarb cltd or in adc insb add jl jae mov xchg or xlat mov adc rolb jmp and add push cwtl and mov out inc clc arpl inc or movb pop sbb rolb out jg jp fistl mov in sbb pop lea cmpsl inc pusha insl faddp mov inc int3 rcrl movsb pushf add popa pop fnstsw loopne mov data16 inc mov xchg xor mov dec adc add andl sbb aad lods push test jno jb mov add inc fst orl and in xchg sbbl and pop mov in push popf add cmp punpckldq pop (bad) mov cmp dec sbb cld adc repnz add lods sbb jns jge or dec push cmp xor inc mov sbb add rcl pop jecxz mov adc add rorb rcll jmp add sar (bad) or add add xor mov cmpsb and std and push or sub push and loope dec add pushf pop push add or nop imul push pop cli add mov add jo sahf jle sub or adc inc sub je movsl jne out and js (bad) and add pop fdivr pop test jp jecxz xchg cmp in mov xor add dec lret adc call shlb inc and inc or fnstsw mov push push xor inc adc clc popf bound insl fiaddl jnp (bad) jo pop sbb lods dec loopne add (bad) xor lcall sbb push jle pop sub ss xchg aam fwait push sbb pusha jae dec loopne adc add push loopne push aam sbb dec insl lods add mov fsubr aaa xor add into fucomi pop xchg mov cmp push inc pop adc push xor cmc lret push iret repnz xchg (bad) xor sbb add scas cmp jns jp clc lret cmp xor dec call xchg adc mov jne clts movsl pop out push ficomp (bad) mov dec add ret xchg shr je add push je add xor fnstenv std test mov mul int or adc orl adc or repnz xchg arpl sbb push pushf ret mov xorl xorb mov (bad) or xor ret and aad fdiv (bad) jo cwtl xchg add xor aaa arpl mov sub in add sbb dec jne or and inc ret add cmp cld push loop inc cmp jg ret in push movsl les inc or add mov sbb pushf pop fbld sbb ja cmpb das lock push test dec jno xchg dec sarb dec jns sub out test inc push add add push dec rol xlat adc and repnz mov add and (bad) lds pop sahf add mov sub push add mov pusha add dec xor daa sub test cld hlt stc or pop movsb and inc pusha ret movups aaa or inc add lods (bad) js jmp adc fsubrl cmpl getsec push loope incb dec test shrb jo add sub movsb sahf mov test divl push adc inc inc add loope xchg pop push sub sub add lock adc stc xor inc popa inc imul sub or repnz repz jge push and flds or pushl icebp xor pop fmull mov js cmp leave mov sahf add out clc adc pop add xor loopne fadds sub lret pop nop subl pusha jmp sbb into ja ds mov or das jmp cmc fmull cld mov mov sub repz lods adc nop dec dec adc stos sub xor outsl mov xchg and or testl std xchg insb cli loopne or xchg sub pusha cmp or inc movsb cli inc cmp or adc roll ja and aas movsb add mov js adc pop xchg or test nop pop jnp in cmpsb adc clc jb or fldt enter add adc mov sub nop jecxz adc aas mov add push add push shrb xchg inc or xchg mull loop inc xor xor push fisttpl and addb je pop mov imul fstl jp hlt sub push fimull xchg shlb dec mov sub js int call add lahf leave lea adc mov lock and mov xor mov lds add imul or popa and push andl adc outsl add mov mov iret and sub or inc adc sar fmuls pop and xchg movsb pop mov dec adc sub in leave adc or imul push and movsb dec mov pop jnp or ret xchg push call add cmovns xor and stos sbb pushf push cltd pop sub loopne sub jbe imul adc pop pop and xchg pusha pop test fs int3 inc dec mov xchg shrl and stc add cmpsl inc mov nop cmp (bad) mov and lcall push mov mov pop adc sub cld nopl arpl fisubr sub cmpsb jp xorb fxch icebp sbb sar stos and mov push lock aam and inc add xor push dec xchg pushf cmp aam (bad) dec and aam (bad) mov enter rclb or dec mov add xor dec sub xchg les popf hlt add xchg xchg into add fwait jb lock pop mov mov (bad) xor in adc add push repnz lds test mov (bad) insb popa mov sbb je scas mov pop arpl and mov xor es jo xchg sahf or pushf arpl ja jnp add test mov mov mov jb push push bnd icebp mov js push pop pushf dec cld adc hlt or mov fimull sub xor adc scas add lock icebp and cmp push mov sub add jg add lock test mull add and int andl and jp fwait or sub and clc loopne (bad) mov dec repnz test shr data16 pop enter xchg mov movsl push mov xchg adc hlt int3 cmp adc lahf add adc dec jo inc pusha aam push pop push scas shr jnp mov cmp popf aas leave enter xchg fs dec int3 sub push add cmp mov pop adcl dec inc sub hlt pop ds in scas push sub adc clc repz push cltd sbbl stos arpl mov subb icebp les jo mov adc shrb pop or sbb jo mov sub loope jnp sub xor add (bad) mov mov jecxz test shrb xchg (bad) mov adc or inc and inc js lods sub sti mov dec pusha rclb xchg mov mov in add xor pushf cmp mov popa fwait inc xor xchg es jl inc xchg add jp (bad) or lods push aas movsl faddl loop pop mov add inc mov push push in nop test cmpb outsb insb rorb add data16 imulb mov and inc lds jp pusha push sbb mov adc lock sbb xor mov cmp push or adc xorb inc fnstsw sub mov xchg nop les out movsb aad jl mov ljmp mov pusha sub sbb ret adc xor add cwtl and pop sub and test jb mov jl lock sbb sub fcoms cmp adc pop sar dec mov xorl movsb aam and xchg (bad) dec dec dec movsl push cmp and fcompl sub shlb stos adc push add sub bound add fsubrl les mov mov adc fldcw lock scas inc adc mov cmp and lfs mov sbbl mov fs aas push inc xor test test cwtl cld adc outsb inc sub rorl andb (bad) (bad) popf (bad) cmp jecxz sub sub mov leave call mov (bad) mov sahf fwait add ss test out (bad) mov pop sahf mov cmp add jecxz cmp cmp or testb and xchg add js xor xor fdivrl enter cmpl ret sbb sub mov icebp cmpsb lock mov lea mov sti xor into xchg cwtl xchg loopne push loope js pop dec andb push lret pushl add lret add xor and pop sti int3 fcomps (bad) jo cmp test orl sub and rcrb xchg loopew lret (bad) pop sbb popa repz mov lret xchg sub xor and mov sbb inc movsb cltd popa and inc cmpb aam popa movsl add cmp jge jmp inc fsubrl fild cmp inc aam mov sti xsaves and push xor out fwait movsl add (bad) enter fdivrs (bad) or jge jle and imul sbb dec sub add and cltd mov int3 add insb xor scas imul adc adc enter and (bad) mull loopne push push mov mov fnstcw sbb cwtl (bad) jo sub fsubrs dec push mov fwait adc adc sbb mov nop add int3 push xor in and iret mov addl (bad) imul pop cmp add fild dec jne pop in call add lahf (bad) adc frstor xchg push mov cmp clc or in sbb clc add lods jle inc ja cld cmp sarb daa mov cmp lret or jns mov cltd cwtl mov addb push xor adc cmp dec push loop pavgb jns or push cmpsl mov sbb outsb push imul add das inc rcrb orl bound loopne or cmp sub pop sbb and imul mov add je or sbb xchg sarb iret pushl push fwait (bad) xor jge call add popl sbb out js pop lahf jbe aas cld les fisubr ret push adc mov push jecxz ds add cmp xchg repz xrelease mov test adc xor pusha movsb inc pop cli loop (bad) aam test or js ret pop adc or or repnz ljmp (bad) loopne (bad) aaa push loopne movsb or pop mov and mov sub cwtl mov cmp sub and mov adc int3 pusha aam lods lcall pop xor pop loopne (bad) lcall adc cmp push sbb clc xchg nop sbb arpl dec push xor sar fs stc nop sub fwait rorb or lea cmp jno sbbl test cmpsl arpl insb mulb lock adc push out add fadds leave adc mov aam pop rcrb pop sub jecxz mov or lret and or pop or mov xchg imul popa jmp mov mov outsb sub (bad) mov gs icebp dec xchg rcrb sbbl test jp pop xchg sub jno test cwtl lcall cmp into adcb mov jne jns rorl xchg sbb ret in clc sti es push stos fwait stos add add aad jmp add jnp xlat or dec lret add dec lock xor adc inc pop hlt imul mov shlb sti push mov jle (bad) jnp jnp add push push cwtl in les xor bnd mov mov add je es ljmp xor mov out cwtl jp lret xor mov pop in push or clc cmp mov cmp sub mov adc mov xor stos xchg jno dec adc in loopne mov fldt sbb sbb xor (bad) adc add aaa repz push sbb sbb cltd add icebp or jbe push arpl sub mov cmp lds jmp fs icebp add cmp add stos mov pop pop (bad) call dec test clc or pushf pusha sbb test mov lock and loopne push push loope sbb nop mov inc (bad) hlt inc insb sbb inc sbb mov ret sarb mov jg fistl xchg sub jb mov xchg cltd sub push mov jo or and mov mov shll mov mov sbb xor mov xor int3 in mov xor mov pop sti dec and (bad) in pop push mov jbe and stc pop fadd adc push adc and addl sbb adc sbbl fistp sub sbb ret mov ja sub jo or cmpsb pushf push mov in insb xchg call jae cmpsb jl and pusha out inc dec xor cmpsb js imul pop sbb out inc sbb and sbb push pop xor push sbb mov sbb add jns ret movsb fistpll scas xor test lock (bad) addr16 call or xlat mov add mov js jmp adc loopne cmpsb and aas pop and xchg rorb cmp add mov (bad) push mov test inc push sahf cmp and pushf call lock aaa add cmc sub sahf and lea jns inc or mov js xchg rclb mov mov dec xor sbb add add repz jns inc dec push loopne cmp xorl cmpl loopne pop add mov push add mov mov cmp (bad) out inc and xor mov pusha fwait xor in or (bad) mov xchg loop cmp ja bound jne mov mov aam scas hlt int3 mov xchg shrl sub sbb inc lcall and andb mov jo (bad) sub dec fiadd or jecxz sahf or jnp lret jns add flds mov lock aad jg (bad) mov xor or mov cltd loopne cmp inc pop pop cmp dec fwait insl dec cld (bad) xchg cmp ss or imul pushf enter stc std mov jo roll xor pusha js push xor xchg or stos jae add sub mov ficompl fwait scas inc repnz and add cmc daa mov ret subl (bad) outsl dec add adc push xchg push cmp lret stc add jo orl inc cs mov loope (bad) cmp or scas ret adc pop clc insl add fwait sub outsb and mov jl (bad) jg test mov (bad) enter xor push mov stos pushf inc pop dec or jge and adc fs js cmpsb xor je clc xor aam andl sbb sbb cmp mov orl fistpll jl mov mov in ret in or xchg hlt test movsb xchg and cmp mov nop fisubrl or incb cmc lock dec inc movsb lcall ljmp or outsb loope leave jnp push xor cmc add sub fwait jbe les and (bad) jns mov fs (bad) mov loopne push inc xchg cli std push or lock ds mov dec cwtl addl rclb add frstor enter mov and sub cmpl lret pop dec lock loope leave inc aas jge fstpl imul dec rol sub nop or xor adc add pusha dec cmp scas pop adc jmp addb out push add xchg pop leave cltd incb add nop je js repnz pop mov loopne in fstpt outsb push mov mul add xchg pop mov repnz mov gs in mov fwait push push fdivs add loopne ss xchg push cmp cwtl mov push pop mov insl loope xchg mov add add icebp xor xor ss mov stc pusha aaa cwtl pop dec jno bound leave repz clc jl enter aam push push lock adc cmc and fadds dec icebp or lock xchg mov enter es pop add loop mov jmp dec push cmp cltd js inc out pop rcr add repz ss dec cmc insb mov mov push clc pushf jmp dec or sbb sub xchg sbb dec test sub bound sbb subb inc (bad) jnp lea in push test imul adcl in out arpl jbe jp add (bad) incl jg addr16 call lret ja fmull sarb add rcll pop shlb loope jg cmc mov addl popf mov push xchg push test inc cmp jge stos add add pop push push (bad) outsb loop (bad) imul or or andb lock mov dec add leave and sbb (bad) and loop add into sub mov cmp pop add popf sub (bad) xor xchg xlat add or subb and pusha stos and push aas pop in cmp incl pop cmp jnp test out orl stc cli and add es push add insb aas test sbb mov push imul push loope in dec subl add adcl sbb andb dec sarl idivb push lods bound push sub push adc mov mov adc leave incl lcall sbb mov inc ds int3 pop add sub fcompl mov (bad) jb popf leave std inc cltd add ret fwait lahf xchg add adc or add test cmc add cli sbbb mov ss sbb out pop dec lds xor xor sbb push push lock cmp jnp rcl sbb and (bad) es push lock adc push (bad) hlt jno mov inc fsub das out add outsb daa mov dec scas or aas push dec mov add or lret mov aad repz out dec fs push shr sub xchg push jg roll dec jne adc sbb cwtl sub nop add dec fisubr aam icebp insl push cld stc hlt add jge cwtl cmp lock dec push addl dec or or cmp add adc (bad) or ret outsl mov inc mov subl dec push or mov xor pop nop movsl in push loope (bad) jo imul js add and insb out mov sub sbb xor xor sub iret add push mov sub pop xchg adc cmp lods add sarl or adc cli sub int3 in cmp mov xchg add push adc add jg add cmovb bound fnop sub add cmp jae fs mov in cwtl lock fwait sahf sbbb jns shl add xchg adc mov loopne mov cwtl orl les sarb sub fadds sti dec push inc xchg add sub test inc cmp adc xchg (bad) jno cld (bad) insb icebp xor adc or mov lcall mov add dec push push aam jge inc stos jno cwtl ds jp add sub gs add dec fadd mov cmc movsb add jl inc stc test jbe outsb mov and fbld xor (bad) cmp mov roll and subl loop xchg sbb jae add sbb push mov jae or xchg sbbl incb and adc cmp call lea push or rclb sub (bad) loopne dec rcrl pop and mov mov sub push add shl push jp xchg push and fildl or inc jge dec lds sub inc arpl (bad) sub add inc hlt jle psrlq mov dec pusha pop aas outsb and insl adc xlat dec jnp es shrl mov scas addr16 xor jmp jg cmp jl push fmull jecxz sub inc (bad) push pop xchg ret xchg int3 add xor add xor mov nop and xor add mov fcmovnbe bound shlb mov or jne mov add mov scas in jo and out inc pop arpl pop lock push sub mov shr jbe inc scas jle push sarl xor add or push int jge stos inc adc push mov inc fucom cmp push add std pop sbb and dec xchg mov mov and adc or pusha xchg push loope adc xorl gs int3 js sar push sbb cmpsb xorl mov arpl jge clc push popf ja xor stos jb jns fidiv inc pusha cmp adc mov clc pop dec push outsb fist or or cwtl lock or dec loope jecxz stos xor inc pop push mov (bad) mov add dec les adcb mov cli pushf push insl (bad) push addl pop rclb (bad) mov dec (bad) in xor icebp push lahf or add dec push (bad) aad data16 cmp sbb dec cmp push add add xor sarb add ret add mov and cmpsl pop lret rclb jmp jecxz in int3 jo jns shlb lret jecxz add stos xor loopne add and jnp add dec les xor pop or add cmp loopne (bad) pop lock pop paddw sub adc in loopne cmp mov out (bad) mov test fimull push lods data16 mov push xor add jo inc and (bad) aas enter loope into push jecxz js add daa les and out add pusha mov push or sarl int mov or or movsl ja xor add sbb adc mov mov clc insl or push add jns xchg mov sbb xchg inc sarl mov cmp mov jecxz jb cmp xchg or push rorb std inc pop and add push les mov adc add shr inc mov mov (bad) pop fiadd mov in push add out push test inc pushf add xor pop cmc in enter mov std inc adc pop cmp stc bound add mov faddl insb roll cltd arpl mov and add sbb shlb jle fstl or or jbe cmp sbb call adc decl sub les inc jo sbb movsb movsb or jle jbe mov rcrb pusha imul cmpsb in loopne fcomps or mov rcrl pop push jo fiaddl mov cltd xchg (bad) mov pop adc ret jl and aas push or cltd mov inc test fcoms pop clc xchg push addr16 add mov andb jo pop xchg lods inc (bad) inc adc enter stc ja mov loopne pop pop mov inc sbb dec in sbb and pop dec sbb cld push sbb fs int mov iret pop xor inc mov in lcall and inc add cmp lahf sbb sub dec dec sahf lock addr16 pop push mov clc pop jp cs mov pop pop int3 xlat pop pop or dec and cwtl sbb push or xchg cwtl sbb int rolb rolb call lea add (bad) and pop pushf add lods (bad) mov fistpl push xchg inc mov add mov push mov icebp xor adc push inc pop push popl cmpsl cmp movb mov cmp pop add sub aam cli test adc fadd mov cmp adc out xchg mov data16 mov imul jbe pop fwait orl bound add outsb mov sbb out push cwtl sub int3 pop or add popf inc adc hlt (bad) mov and add mov das pop xor call mov xor mov xor mov movsb jp inc lods inc punpcklwd adc add push mov inc push xor mov xor mov push sub push jmp sbb das add lea addr16 mov sti gs mov push mov ljmp iret dec jp and lret cmp clc xchg into mov lea pop (bad) mov sub lahf jo adcl mov call cmp pop xor int add add adc cmp add pusha mov sbb mov mov xor shll mov rclb (bad) xchg in xorb xlat rcrb dec rcr sbb test dec int3 push add push pusha shl popa and ljmp mov fwait scas dec add adc mov repnz dec dec sbb lahf clc test jg rorb fbld and movsl inc ja lods add inc push jge daa outsb xorb sub and fcompl aas add cmp cmp xchg add out inc aad test shufps out pop mov add dec cmp add mov add hlt xchg outsl sbb and add (bad) fisttp ds setae out andb xchg pusha (bad) lahf jge add or std adcb js inc push fiadd sbb cmpsl cmp add mov mov xchg loope stos cltd mov push into movsl in mov cs shrb mov dec mov cmpsb inc xchg sbb mov add scas stc lret jg add pop dec loopne (bad) xor xor pop (bad) hlt jns add scas daa lret cmp orl orb mov add mov add inc jb ficom mov push xchg add jl push rcr dec ds cs pop sbb dec push xchg sub or pop cltd xor mov xchg test sbb push sti ret mov fsts lock adc sbbl lock add ds faddl xchg add arpl fild insl adc cmpsl cmpsb mov jae enter cmp jle (bad) cltd add psubw aad add ds enter add push hlt cld add sub (bad) insl xchg and mov sub or xor loop xor icebp int3 movsb (bad) xchg xchg imul movsb lods push aas push rcll scas dec xchg inc pop cmpsb aaa mov mov mov pusha js pop mov stos movntq negb xchg inc xchg cltd xchg roll xlat cld push out inc mov repz add nop mov jns rcrl sbb mov ret fs sub cmpb push sbb xchg adc mov xor movsb cmpsl push inc jl fist push add hlt dec fimul call add push xchg mov add insb fwait cmpsb mov xorl inc inc rcl (bad) fcoms and add push mov mov in mov push sbb inc push cltd push lods pushf push call push inc jo cmpsb test sbbl incl mov loopne scas add enter and orl out jmp rolb cltd hlt mov push push mov or adc data16 push push mov xor add xor mov xor inc xchg xchg repnz push xor sbb jge test roll push pop jmp add mov sub xlat fistpll pusha add inc xchg xchg jnp loope or adcl pop icebp cwtl add jecxz push lods loop pop xchg mov mov jmp jl test je adc sbb mov mov push xchg pushf fild mov xchg cld mov adc lretw xchg sbb dec fiaddl or add pop fcoml lods icebp repz and push adc xchg inc pop call mov or jns ja lret pushaw stos in xor add cmovnp aas loop mov cmp popf add cmp lock cmp mov jb fwait outsb xchg test in mov test pop imul popf fiaddl sbb xchg (bad) jns xorb clc rclb adc sub add (bad) jae popf mov pushf repnz cmpsl imul mov sti sbb add mov add cmc fsubs push lock fbld add mov xchg out mov cmp insb cmpsb pop xchg aas xlat cmpl sbb andl std call sarb mov roll out fadd rolb cltd xor test imull sbb ret mov xor or movb and xchg lret lcall fdivrs add loope push or cmp stc ffree andb rorb adc dec outsb loopne or mov adc aam lods push sbb es leave sbb out sub lods int xor (bad) and pusha jo out push (bad) sahf lret orb shlb test mov nop adc cltd xchg pusha and push push sub or pop inc lahf mov test fnop or lret cmp mov lahf (bad) pop fsts cmp jecxz push sub fldl ror imulb xchg pop add dec add popa add dec fldenv andl mov add in cld sub addr16 mov mov or enter dec cli add sub cmp push in inc push jbe jmp fstp cwtl push sub mov push cwtl or jmp or jb sub dec pusha adc push mov inc orl into inc jo enter test push mov int3 xor mov mov sbbl fmuls jmp aad jecxz jecxz sub inc mov xor cs cmp push add cwtl in xor js data16 loopne mov xchg loopne fidiv ret flds addl add or cmp mov xchg cltd xchg push popf aad lock add fwait es mov sub insb mov cmpb pusha cmc ja and mov gs mov movsl shl inc pushf jle dec mov arpl es jo add imul sub fsubrl (bad) or add movsb call cli je sarb push hlt fadds mov sub sbb leave adc pop push or fsubl and adc sub or jbe inc or and nop fistpl mov popw inc aam orl sub inc rclb insb lcall std pop sub sub and mov out shlb mov pop test call clc jmp mov dec mov repnz clc push outsb sub fwait or pop pusha pop iret mov sti xor lods sbb (bad) int3 adc andl (bad) pusha outsl adc hlt add sbb pop hlt jl lock push xor call push lret mov icebp inc scas scas sbbb jle sbb jns andl lock enter inc in xor aam cwtl add push mov and pop mov inc adc mov cs lock adc and pop xor sub inc pushf popf push cmp add (bad) mov mulb mov mov jo xor les aam imul mov sarb jl in add fxtract icebp and (bad) xor xlat or sbb adc push jnp imul gs jns mov mov js sub xor mov pusha mov (bad) enter leave pop inc sbb mov jbe in aas dec mov sbb pop stos insl cmp cmpsb int push pop fadds mov xor in adcb in cmpsl xor lods pop ficomp lcall pusha mov mov xor dec iret push pusha pop push add fmull add repnz inc mov or mov inc add test add sub in cmp inc in dec jae add ja xchg rolb pop inc push add and xchg dec or mov fstps inc sbb jle rclb dec rcrb sub rcrl js shlb sarb push inc fwait sub cmpsl xchg dec add xlat aas enter lcall cs cwtl or sti pop fcomps jge xor mov push add add mov xchg dec inc xchg sub xchg lods add insb sub pop jmp lods shll sub cmp lods sbb test dec aam aaa add sbb aam push inc add add adc nop mov stos addr16 add push (bad) je les push pushf test cmp pop dec mov cmp mov sub (bad) (bad) mov jne xor add clc mov daa add into mull fs add ret push in lret in mov aad dec mov sub xchg pop ds mov je in (bad) push repnz push mov push (bad) ss lods outsl icebp inc les stos sub pop mov cwtl adc sbb jo xor and out (bad) aad hlt mov cmp jno shrl dec clc ret pushf cs push dec xor and inc adc fnstsw lods add inc pushf cld cmp sub inc aam jl jo dec test mov (bad) and add scas in mov scas les test and push call mov mov clc adc cmpps sahf sbb xchg mov mov cmc sub icebp mov add add xor pop sbb je test mov mov cltd je dec xchg cwtl push ss or mov adc nop jge pusha xchg enter repnz test cmpsb add inc xchg dec sbb adc push sbb (bad) hlt xor nop mov sub sti andb adc push daa (bad) shl or icebp mov clc dec cltd push xor inc mov rcr and (bad) jl ljmp lock cli mov push sub test shl daa nop mov pop fsubrl pop gs xorl lahf fcomps outsb xlat clc rclb dec jns jp pop sar loop inc ret loopne xchg or nop jmp cmp mov outsb xchg add sti inc or add add adc aas scas stos lods and xchg mov sbb mov jb lret xchg js sbb pop (bad) in cmp int adc (bad) icebp ljmp les aam (bad) and mov xor cmp mov inc fwait dec mov (bad) cmp frstor sbb (bad) testl imul jns dec mov cmp dec adc mov mov add fprem1 and mov daa or mov cmp jge,pt mov adc loope mov pop mov sub out shll add push adc testl data16 bound movsb mov sub mov in andb icebp arpl arpl lret cmp pop ds add ja dec sbb adc fldenv dec sub stc sub mov xchg cmp cld fsubs xor cmp jge add xchg and adc xchg mov cs xchg xchg sub jns pop (bad) pop jno add in or cmp rcll xor jo daa mov arpl xchg in dec andb jecxz mov fs sub or lea repz inc movsl pop mov nop or or js lahf lea mov mov inc push cmpsb pushf andl push sbb jns pop fsubp adc sub xor movsb xor push add hlt add pushf icebp aaa sub gs xor jnp nop add fildll repnz jae out hlt bound fimul add xor add pop or rcrb mov sbb addr16 adc xchg or pusha lds test add fstps xchg lock addb jnp cmp mov and dec dec inc mov int3 pop js sbb adc mov rorb pop cwtl sbb movsl adc mov jae (bad) les fidiv pusha xor cmp mov add cld dec sub or add lea add or sbb lret sub in sbb fisubr mov sbb paddsb pop cmc add rcll xor mov push inc lods and (bad) adc es xchg sub mov mov mov ret lea mov mov and and xchg xor or lds pop iret insl push dec mov jns rol xchg scas fsubrl adc cwtl mov aas shl sahf dec dec push lea pop inc xor cs push je mov or pop push movsb mov loop dec les imul mov or bound mov dec mov and adc dec pop xchg nopl sub bound addb outsb or push jl adc sbb xor ret ret insb (bad) dec dec cltd inc xor xor (bad) inc cmp cmpsb mov lahf and aam and or nop add ror clc cmp xorl push xchg push out inc add repz inc cmp cmpsb sub cwtl sub into enter leave (bad) fnop add xor xor pop add repnz sbb loope loopne fs sbb sub inc push and inc add jge ja fstps mov or out repz shr inc jp inc cmp pop sbbb (bad) mov imul idiv bound out add lret sub movl mov icebp daa adc push mov sub movsl push fsts sbb push pop cmp rclb lea out pop cmp push pusha dec jnp mov or fsubrs mov add push push pop and add mov roll nop dec or cld inc push lock mov pusha sbb and std inc mov mov sbb lock (bad) cmp pop (bad) dec enter es push movsl lret ss or push mov pop sar test cmp lret push test cmp cltd jp push sbb scas xchg xor mov cmp sbb dec flds out fs pusha js mov dec add xchg in and push addl cltd or in cltd push sub fstpl mov add mov and les pop mov rorl stos into dec int cwtl mov and xchg mov imul sub test addb xor es mov add andb divl push push jl add lock aam cld mov inc or add cmp inc mov cmc into lcall movsb push repnz push mov add push rolb jp xchg or inc ror and jne inc int fsubl aas push pusha push in cli fdivl dec montmul cmpsb add mov sbb movsb add pusha mov adc int add or test lods sbb arpl mov add sbb mov and jb pop and mov pop sti lret outsl push and mov jg inc aas and add test roll dec mov pop rcrb mov pop add mull sub cmp mov in test add jo lret jbe add in or faddl and mov or mov jns xor dec push stc xchg inc add sub lods dec test loopne out mov js (bad) dec sub movsb sbb push mov in mov xchg sbb clc icebp cltd lock sub and xor sub mov jnp mov and lods cmpsl inc mov mov pop cwtl push add in dec mov mov (bad) (bad) pop jae add out cmp (bad) lcall pop test enter call or mov inc add fsubrs bnd insb dec xor jge pop jo adc ds fiadd in out andl jecxz (bad) imul dec cmpsl movsb add or push xor xor out add dec js cwtl insb dec sbb jne dec adc jbe dec andb mov pop (bad) sbb dec and add push xchg pop xor and subb fnstsw mov mov ljmp jp sub maskmovq notl add rcrb or clc dec orl movsb jns jmp lods pop mov clc xor mov xchg (bad) jae sbb rorl adc (bad) data16 mov sbbb fsubrl lods ljmp add loope movl inc pop mul pusha testl je cmp dec (bad) pushf dec sbb inc mov xor dec jo dec jl inc mov hlt aaa sti lds (bad) addr16 stos sbb scas add inc movsb insb das dec aaa mov scas paddq (bad) aad inc (bad) sbb scas sub scas mull jge add in insb pop pop and add sbb add enter or std add iret imul sbb push fld add jl addl add inc or fsubrl adc mov add (bad) stos out enter dec fldcw jl mov loopne jne inc adc rol and fdivr jg adc mov inc sub mov pop xor std dec loope,pn jne inc mov dec adc xor pop or jo xor mov pop hlt in add (bad) loopne push jae pop or pop mov stc and xor add jno pushf jo mov cmp jle add fs dec ret imul pop (bad) flds cmc and je mov and or (bad) xor int3 fcoms pop jnp stos sbb movsb ret cli iret add ss cmpsb inc (bad) arpl mov mov test mov loope gs jo adc cwtl test lods push mov (bad) movsb mov loopne push addl jg pop pop or rcrb aam les cmp push xchg (bad) pop je mov iret orl ficoml push or fsubs xchg adc adc sar jo cmp (bad) ljmp and repnz pop fcmovb mov movsb fst std cvtps2pd popl xorb inc lds test test push clc mov pop adc andb sub int cld and push xor test sbb dec hlt mov nop hlt ja xchg add inc cmp les inc or pop push pop xchg mov and (bad) call xchg lods das and mov popa dec dec mov dec xchg xor add push ss gs xor dec rorb or (bad) movsl fsubrs int add aam add adc add scas nop out jo jl add (bad) outsl add je xchg hlt (bad) xor loop fist jb in add fdivs xchg arpl xchg lea clc or inc fisubl push jl pusha xor addr16 int3 lds pop dec add outsb adc movsb mov pop iret push test xor inc adc or inc mov or xchg pop shrl inc push xor icebp adc inc fs in (bad) repnz and loope xchg fnclex mov les mov mov push and cmpsb pusha subb adc add inc pop dec pop imul and dec fldl push es sub pop js mov xor xorb sbb mov subl mov dec (bad) sub pop mov mov pop pop in adc pop cwtl inc cs imul (bad) add fmull inc mov out adc sbb pusha and xor mov hlt inc in or or xor inc in dec adc out sbb jl xor pop and movsb xor addr16 cwtl lea loope adc call xchg add pop and xor adc leave (bad) iret fcomps (bad) jbe mov cmc test inc hlt test dec test cltd sbb mov inc adc push and in xchg jecxz and xor push mov fiadd dec add pop dec rcrl ss out adcl inc hlt add ljmp js or and and dec scas mov sub cwtl sub dec lods nop add fcomip cltd mov jmp cli addr16 je mov sub fldenv lods lods mov dec sahf js xor dec js repz out cmp add fiadd mov jo adc mov test jns shrl int3 mov inc push (bad) loope icebp lods data16 push clc loopne data16 cld hlt cmpsb frstor (bad) mov (bad) push xchg and jg dec xor push inc adcl inc stos loope or pop add test cmp lods std and push xor cltd push jmp out mov cmp cld popa and icebp and out sub dec je mov int3 insl repz add stc or (bad) mov stos cltd push loopne add les xor pushf xchg syscall mov mov xor mov cmp add push xor and pushf ret mov aad and fcmovb mov dec sar add dec pop std lahf ja pop pop fnop enter jne andl test divl sbb icebp and mov shr jg add hlt cmp pushl loopne mov inc mov jecxz fsubrs mov sbb ret (bad) inc mov adc js jl sbb int add sub jae xlat data16 adc adc jl mov xlat ret or inc movsb pop adc sbb and addr16 add imul mov into wbinvd jbe loop mov nop add push mov cmc in cmp lds icebp and and and jno sbb ds ret mov or sti popa icebp sub mov ret inc popa lret add stos out or (bad) (bad) or and mov in or mov adc pop mov (bad) mov mov or xor sbb inc fs stos sbb jnp fyl2xp1 loop and mov inc in pop jno daa add in jle movaps addr16 leave cld out mov (bad) fistl add cwtl mov add scas and add push adc andl mov mov jns xchg (bad) testl sbb arpl xlat sub cwtl test (bad) aad pushf mov add scas test mov outsl dec sbb xor orl loop cmp int3 lods popa cmp jns mov stc ret nop sbb rol outsl cmp push pop dec pop test fsub lret jb sbbl dec js xor and ss mov (bad) add popa jae nop add les add gs cmpl inc in mov add dec cmp loop dec decl add repnz adc add xor mov and push rol mov test fmul sub pusha jns fdivs pop fisttpll mulb or inc mov mov fstpt shlb pusha mov outsl sbb push cmp andps test loop scas sub gs jp add mov mov dec add jne xor mov cmc xor sub repnz and push adc je mov lods add das jns mov js push maxps adc leave push int inc call inc (bad) and push mov pop nop lods add mov jge or test (bad) fisub rorb and add lahf mov or and inc xor or add stc inc enter mov pop inc pop inc cmpsl lock rolb xchg mov js push outsb outsl andl fsts dec loopne xstore-rng cmpsl ret popa lock or mov sarb add cli loopne and mov daa add push cmpb sub stos adc lock jecxz sbb sub xor xor mov movsl xor and mov call mov xchg xchg mov and scas jmp mov ffree test in ja fdivrs ret test ja in mov mov ret out hlt mov mov add lods mov mov mov mov enter sti shll mov mov clc add jae mov jns push lds mov cmp add popf rolb or xor or out lods in push or mov lret sub (bad) xor mov call inc mov inc adc mov push int3 popa (bad) je addr16 or sbb test (bad) insb sub js cmpsl popa push dec or or rcll repz inc popf idiv sbb mov insl fdivrl loope popa (bad) xor lret pop xlat je je mov mov cmp sbb add add sahf mov add loop xor test mov nop fcomps add outsl xchg fadds (bad) nop and or add loopne idivb xor and dec fadd pop adc push gs popa jns bound call rol prefetchnta out ficomp (bad) mov pusha push mov mov leave mov fsubrs scas and xor movsb rorl sub ja fwait jl leave je xorb aaa nop sub (bad) mov mov push sti loopne dec mov outsb int call lar imul divb xchg and adc mov js cmp inc xchg fimull adc testl mov mov lcall mov or mov ljmp pop movsb fwait jl aam insb xor ret add push dec sahf mov lret push test mov icebp pop clc adc cmp xchg aam dec popa sbb sbb mov jl and pop lret mov or push addr16 pop inc pop xor dec popa test add jno flds cmpsb pop pop sarl cltd mov dec and pushl iret cwtl dec add loopne xor cmp mov dec jle pop divb jo push fsubr stc fmul or inc pop (bad) call popa adc mov rolb cwtl xor lret nop cmp pop adc mov call outsl cwtl pusha jl add xor dec add xor sti adcl and add push pop scas xchg push mov adc mov pop pushf pop mov mov nop mov push cmp or or outsl add popf pop adc jbe mov std mov pop ja popa mov sahf push pop mov cmpsl or xchg pop scas aas psubd push mov adc jge xor addr16 (bad) sahf mov loopne and push ret xorl or pop outsl and mov shlb popa or jl aam out icebp lret or sbb add sub lds aaa and inc mov cmp ficom sub add (bad) rep popf (bad) rcrl leave cmp ret and add mov data16 sub mov or sbb popf rorb inc (bad) mov dec mov push or adc add xor (bad) out pop add and push cmova xor xchg push mov es (bad) mul iret xchg or pop cmc jae jl rcrl test test int3 jg inc pop insl adc mov in ret shll loopne rcrl add adc xchg loope pushf sub subl je les popa in lock sbb call je xor test pop mov add repz push clc cld add cltd push push ds xor inc iret call stos add pop and xchg push repnz cs adc pop (bad) flds mov std push outsb rclb adc push fs sub mov jge xor add adc cwtl jg mov push pop adcb jge add (bad) aam mov les jecxz mov ja mov add pusha add push repnz or cmp mov add cmp cmp test scas cmp push pop add cmp sbb cmpb dec add divl cmp mov xchg jo mov cmp push mov adc xchg outsb movb gs js test xchg push cmp inc sub mov in aam inc mov (bad) push sub lret pop popf lahf or lahf xor jp and stc subl or int adc mov and fsubrp frstor xor in jle outsl adc scas push pop les out dec fs jp cltd push fwait cmpl or push mov jae mov and push mov fsubl add sub push push mov and sbb inc mov sbb or psrlw call xchg mov or adc adc enter jmp mov push adc movsb cmp or gs aam xor dec es inc cmpl arpl sub popa lea inc or push inc cmp (bad) in cwtl xor cld add add xchg inc lods jns shrb or sarl mov icebp xchg ja dec nop call out in lcall lods popf pop jno es mov mov enter push jmp add fdiv loope mov rclb cmp enter popf lock mov hlt adc aam cmpsb lods add mull lahf add fstpl clc adc test rcrb in hlt nop dec or inc add xor jno add and rclb outsl xorb and cmc sbb or (bad) fcoml sbb add jp and and test in es mov adc sbb push stos or adc or rorb cmpsb sub pop add adc mov mov nop dec out or pop inc cld inc stos push (bad) movsb and push adc fistl loopne adc fs rol mov mov xor leave xchg or mov add xchg mov movsb inc lret cmp je mov pop xchg mov pusha movsb mov sub test out (bad) jnp pusha xor add leave repz aad inc sbb stos icebp pop xchg add mov or add std dec xor add (bad) and push loopne ljmp (bad) (bad) adc bound lods xchg enter add outsb aaa pop jmp and mov add push ret int lods add fdivrs inc scas xchg add fcompl jle mov and xchg mov (bad) sbb lret jmp insb roll push sti jle adc sarb shll jmp data16 (bad) cld push jbe jmp nop xchg jl movsl lock xor cmpsl clc jle adc or or popa add mov mov fs add insb xor adc daa mov (bad) cli and add inc pop and jo js and stos and je subl mov sub add aad call or cmpsb shrb into sbbb inc add sahf jo pop push xchg cmpsb loope test pushf or or insb pop fwait lods push faddl pop mov ja inc jle popf or negb mov sbb sahf mov lahf inc pop mov mov faddl test (bad) mov add jb push (bad) je add bound xchg jo add (bad) and out mov mov dec inc add jge dec sarb mov jnp aad (bad) inc fsubrs icebp scas shlb pop cmp aaa inc ret and mov mov repnz xchg loop mov mov insb add inc inc add jp repz xor hlt lcall cmp movsb xor and test clc dec lahf test or sbb outsl pop test jo add sbb push or push addr16 rclb lret mov jns icebp xchg add jge cld rorb call les sub jno stc or pusha mov sbb lret lret xor xchg inc jo movsb mov inc pushf and aam or sbb xor icebp mov mov pop inc sub nop (bad) mov cmpl int3 fldl mov sub dec pop pop inc mov push mov in or push dec xor inc mov dec sbb or mov arpl lods pop movsl inc mov adc sub enter adc push loopne int3 mov dec mov (bad) xor lock into inc mov mov mov shlb xchg sbb and jmp repnz cmp mov popa ds loope and aam sti jne xchg sbb mov loope add outsb add cmp jle fist push ror xor mov sbb gs sbb out add popf xchg movsb mov shlb dec sub cmp js sti jl test jne fimul xchg out adc subl add jbe push sub or push inc jmp retw pushf cmp adc aam lret arpl push adc cmp xchg cld or nop xlat (bad) js repz jp idiv add scas xchg pop mov mov ret jo lock sbb rorl scas sarb imul fidivl or cmpl (bad) xor xor mov into mov test rolb inc pop out push lods fsubs enter cmp mov movsb fsubr inc mov inc sbb rclb cwtl and and jb jle inc sbb popf add insb (bad) sbb mov mov arpl rorl fbld call push sbb stc or in pop (bad) lock jbe ret fsts test testl xchg xor roll loop call enter xchg mov sbb test mov xor xchg sarb or daa (bad) jb xlat push fisttpll sbb sbb dec pop aad daa inc loopne es rcll sub fdivrs adcl and out cli cltd push sub adc xchg leave aam call addr16 mov pusha fidiv add mov sbb decl scas jbe aam pusha push cltd mov or sub mov sbb cs adc mov arpl insb mov sub sub jno pop jmp test stos icebp cltd movsb adc out lcall sub je sbb jae call pop andb clc cmpsb push call pop addr16 mov sub push loop add insb into lret int3 dec xor in popa imul pop sti push xchg mov and arpl pop xor adc inc (bad) dec inc cmova in and push repnz hlt stc mov loopne in ret pop adc dec mov orb andb cwtl (bad) pop imul movsb pop movsl (bad) mov sub imul fsub inc xor jmp mov (bad) jae mov (bad) or xchg leave inc jae enter mov jl or inc js sbb lret jmp and adc pushf add stos cmpsb js push cmp xor add loopne mov loopne and pushf hlt push mov xor les sub add loopne sub push mov add fwait sbb cmp cmpsb xlat fild arpl and popa je int3 xchg or into enter icebp jno,pn fsubrs sub iret (bad) (bad) not pop mov add jg daa and movd cmp loopne mul push popf cltd fdiv imul xor mov sbb loopne out add pop jge shll or cmp push push decb je and in mov clc mov (bad) flds int3 adcb mov add test fldcw sbb out rorl popa xchg push sti ret dec lock sub inc inc and icebp mov dec adcb fcmovbe popa and lahf test cmp sub mov sbb mov lahf repz setbe cld add js cmp clc push inc mov in add pop hlt or leave inc in mov xor (bad) hlt (bad) pop sub push nop jb mov in lods stc and pop je cmp lock gs cltd cmp xorb cmc lret (bad) dec ja pushf adc dec xor lahf fcomi nop stc stos mov adc mov outsb (bad) adc push mov test sbb jae gs mov inc jge lods shlb stc dec repz sbb adc popa out (bad) fdivs mov mov rcrb sahf mov lock pop add popa bound jmp cmp lahf ret cmp sbb (bad) jle jmp cmpl add inc pop and arpl stc sub clc add out aaa scas rsqrtps xor subl movsb mov outsb popf mov or pop add cmp mov lret mov cmp movsb call xor push xor mov inc aad fsubl sub pop les xor mov cld mov imul or js jne pavgw sub stc dec fwait into leave mov fsubr mov dec sub add cmp fcoml xor mov push jp push std jmp xor jbe sbb xor mov adc push adc scas adc xlat lret inc loopne pop pusha mov out cmp and adc add stc cmp sub adc mov add enter mov xchg cld push ret fsubl popa aaa ja (bad) and lret dec jmp inc add icebp or pop loope mov or inc cwtl mov pushf js xor cmp popa dec test or mov enter jp nopl lock lret sbb pop dec push and test stc cli mov ret fmull and mov int3 movsb mov inc and (bad) adc bound add jmp movsl ror cli sbb xor rolb cmp rol lock enter pop sub add (bad) imul mov gs std mov adc insb hlt je xor mov clc sbbb enter sbb push pop or bnd push sarl push mov negb aas dec add icebp or pop sti sbb mov cmp add cmp or add call fcoml inc dec cmp data16 sbb std add jg pop rorb scas lret sbb sub inc inc rcrl add imul insl jg mov inc mov jae sti adc inc test xor push push sbb movsl imul call ds jecxz mov cmc xlat add push jmp mov dec ljmp or dec mov popf or out sti adc or cmp xchg pusha jecxz pop sbb jno pop or cmp add sub pop add ret pop bnd add pop out jmp jg andb cli dec popa or mov aam icebp stos add push ret idivl and nop adc fiadd loope and cmp mov lock adc jge call sub add int jp add or pop push xor mov in adc bound leave jl or xchg in push add aaa push lcall lock sti cmp mov add roll add sbb push cmpsb movsb hlt mov cltd cmp jg,pn jl jbe popa jp je loopne stos mov mov cmp jg pop mov stc xchg inc sarb xlat sub arpl je addr16 imul lret rorb add push hlt and shlb insb jmp js outsl das push add cs inc add clc jb inc test add add rcrb sub (bad) addr16 (bad) mov int3 cs cmp nop dec cmp mov xchg add add cmp or rcll pop jg and mov f2xm1 adc add in inc rcrl mov adc add dec into dec inc mov int3 xlat mov add bts push cmp sub inc mov xchg and jg js push sbb push insl (bad) sub jo add mov pop movsb add push mov xor sub iret in loopne xor in sarl mov add add push imul aad mov mov inc inc push push ret outsl test fdivrs jno movb add daa mov push xchg and cld pusha addb jg pusha mov push loop cmp cmp in enter dec jo rclb dec loopne or mov (bad) sub and xor ficom add loope mov (bad) xor js xchg insl add sbb pop jno add pushf or mov fwait hlt loope inc add rolb cld jnp sbb test ret xlat adc sub sti insb xchg fnstsw cli mov push gs jno jmp push into add dec sbb cld and and aam div or adc shrb call sub js inc or ss xor xlat push fild push mov (bad) dec test inc mov pop dec popf fwait add xchg cmp test pusha ja push adc lods add jbe lret push mov loopne pop add cmp push dec stc negl jg cltd lods ds js push sbb fdivs js pop rolb leave sub fwait ds jle fcomip nop jl xchg mov pop call pop setbe add daa mov imul mov fs out dec xlat popl movsb jp jg sub push xor pop inc aaa enter sub lcall repnz adc and add loop leave mov jge jl dec add add enter cmp xor js gs imul inc push add aam je jns push push fwait jmp add (bad) lock inc push testb scas mov push push sub int mov jno adc clc pusha mov jmp sub cld das pop roll sub pop call jge std pusha jbe jne loope daa mov or inc add das mov js inc mov lock cmp data16 rolb sbb aas or jmp sti lret jb lfs adc call jne xchg and mov add jg lods and add pushf cmpsb inc jmp das dec in js mov pop clc inc or loopne mov mov pop in arpl test dec (bad) lock popa lods mov add xchg xchg mov cmp icebp shrb loopne xchg aam shll pop adc cmp insl mov jg sarb xchg fsubp out loopne add cmc or add xor lret inc xor fwait add rolb pop push or cmp insb btr stos add enter push mov and push insl xchg mov adc ja xor push adc ret dec and sarl test in and and imul cli push jge movsl andl or add js xor lret fs inc add out sti xor mov add cwtl inc adc and add lock popa pop in inc int3 frstor inc adc and and push xchg mov loopne imul (bad) lret mov in add and pop fadd xor mov push cmpsl xlat leave loop ljmp push lods cmpsb (bad) (bad) ficompl adc add out jle or lods sub or inc xor jno mov scas or adc es sbb sbbl jge and adc adc mov or insl test dec jne pop sti pop and jbe pop adc icebp inc (bad) cmc mov or loop fildll jecxz mov andb aaa adc jo movsl sbb mov insb lret add jle rolb cmp sub sbb imul push mov (bad) dec ss shll mov xor cmp xchg mov aaa mov int3 and sub js ret add mov mov jb add mov mov in dec inc dec inc mov clc fisttpl add lret jno pushf sbb mov enter jnp movsl cmpsl sbb xchg in add and and and sbb sti or popa jo cmc mov aaa xchg add dec pop xchg (bad) mov inc loopne adc push imul add ljmp pop and loope call xchg and pop out mov sub add and lcall inc xor add xchg push adc jno xor ret outsl cmpsb iret cwtl or mov cmp adc data16 dec into xor popa cmp out xor or mov sub stos into add pop jecxz popa in xchg inc cmp dec add adc xchg nop push movl ds inc sub pop jo mov aam out push push cltd xor inc test testb jb cli adc add fsubrl loope iret dec xor add lret andb xchg fldt popa xor insb test sbb xor xchg scas fmull cld lock mov leave mov jmp in sbb or jo and push jo xlat jae shrl scas (bad) lock sub mov out fwait adc ficompl mov je sbbb cmp mov js dec repnz addr16 mov pop mov and les addps fsubl adc cmp pop imul dec mov lret je add movl mov nop adcb dec and sub arpl mov mov ret cli and fcmovb mov addr16 (bad) imul stc insl sahf jmp loopne adc inc fnop inc gs mov imul pusha int3 xorl and and pop dec sbb data16 icebp add mov or xor and cs icebp cmc dec clc push outsb mov add xchg push push mov int loopne jg dec push icebp iret xchg je (bad) pop divb test mov in jecxz mov jmp pusha (bad) add add add jb call es add loope mov lret push dec hlt fadd mov add (bad) mulb roll adc pop sub adc ss ds rcrb lahf mov dec adc add xchg (bad) outsl out mov sbb xchg (bad) push (bad) push in add dec or loop cmp add call sub xchg dec inc repnz shlb add lret adc aam icebp cmp xor and push ss mov pushf and add cmp lods mov inc shr data16 adc sub or clc add subb xor in push xchg pop or fs in (bad) cwtl pop outsl nop sti adc and adc rclb push mov mov push std adc jb cmp add cmp fsubr pop xlat mov in dec lods add fwait iret sub sbb inc or cltd add je nop jno xchg and divl shlb loopne call push sbb (bad) mov and xchg sub adc push add and rclb icebp rolb cld and xchg mov subb adc jg mov sahf inc shrb add popa mov push mov ja mov or leave cmp sti ds orb (bad) pop je pusha dec (bad) clc dec jo fwait jb clc fstl loopne inc adc sbb add (bad) imul arpl sarb fwait or lods lret xchg subb pop or add cmpsb add push arpl xchg pop xchg xlat rcrb stc loopne xchg ret outsb (bad) bound sbb sub push sbb popa and add fistl and inc hlt sbb jb enter sahf loope sub pop and pop hlt popf stc stc fsubr inc and mov add clc test lock xor fcoms and pop mov mov mov dec mov aam cs mov shrb (bad) adc icebp dec stos pushf fnstenv addl add dec stos adc in xchg jle pop ja mov dec jmp outsl xchg aaa add (bad) dec sub stc dec add push push cmp ret mov and and fistp add (bad) lret pop test pop add and bound inc fcompl mov mov push outsb test clc pop jae cmp jecxz mov pop mov sbb dec aam dec sub adc sbb inc cmp adc (bad) pop push mov add sbb push insb daa mov cwtl sti aam push ficompl add pop cmc add rep hlt jo sysenter add loop mov jb jp add test add mov iret inc aam pushf (bad) icebp std push js sub or ss stos adc rolb cltd and add popa aaa xchg jmp dec mull int3 sti (bad) mov adc leave push movsl jle icebp sub mov or push add nop enter (bad) adc or or cltd add cld fildll push inc mov jnp fs add push outsb lock outsl jl ret mov xor ja stos add insb dec prefetch mov das sub aas inc or mov mov mov cmc mov pushf jl mov adc mov jb adc loopne add xor and into jnp mov push call jo sarl add and pop hlt add and mov and mov mov or xchg dec cwtl js adc jmp dec sub sub sub adc pop inc pop inc pop outsb arpl cltd out sub and aaa dec add jmp icebp pop sub or int3 add popa jmp adc inc jbe cwtl mov push push sbbb inc and push bound inc mov push push adcl je push pop fwait adc in mov daa cmpsl cmp cmpb jo add or inc push lods push jno sbb mov dec xchg test repnz push mov aad sub les adc jo mov mov adc mov jmp cld loop in sub mov pop sbb or dec sub pop lds adcb cmp iret add sbb or adc mov dec test loop je add push cmp cli bound das sub sub mov pushf or movsl sub je add shlb mov jmp mov push lcall cmp or cmp add insb xchg jp lock mov insb sub lock and fxch xor addr16 jno call xor mov rolb aad ja dec mov ss lret sbb add pop cmc orb jno push add push xchg mov aam aas addr16 nop cmp dec push add clc cmp xchg mov and add mov cli aaa adc jae stos mov xchg add or push push aaa inc pop push dec outsl dec mov lods popa cmp mov std xchg sub and push xor js mov sarl xor push cmpsl hlt mov add movb adc (bad) out js andb out jmp ja loope dec mov push nop xchg lods jo push and push imul push or push mov lock (bad) jecxz push xchg add pop dec aaa pop (bad) mov ss je jmp push lods add or mov and jbe xchg loop dec jno (bad) mov les mov fsts aam das mov or data16 aas aad pop push pop mov inc sub (bad) adc push repz push xchg push sub adc gs or add push jg cmp mov jns fmuls add or cltd rolb or rdtsc push (bad) sub icebp xor or movsl sub (bad) sar in dec fdiv addr16 int pop and inc addr16 mov mov inc fcoml mov jge out push xor mov or pop adc inc leave fsubrs push jbe add (bad) and iret lret sub nop mov sbb xor sarl add daa in ret pushf ror insb mov mov aad cwtl mov popa negl out lret mov lds xor rolb and xchg push (bad) cmp mov out add pop inc or jmp cmp xor scas pop cmp rorl push sub or inc jp mov movsb and add bound jmp mov daa mov cmp push jbe popa or dec mov add dec aas add xchg pop popa test in cli pop or inc sbb outsl add mov jne ret jbe pusha or xchg add sbbw xor xchg subb or (bad) ljmp idivb and ja lock jno add or std pop dec jmp xor mov xchg cli arpl adc sbb dec out cs pop add (bad) pop mov pop jnp (bad) jae add enter pushf ds lods lret inc inc xchg mov lods xchg push adc lods and adc pusha hlt pop ja push sti sbb pusha cmp adc testl and fmulp or clc mov fs add ss mov cmc ja pop lds arpl je inc daa and ja sarb cld addr16 or test xchg pop pop cmpsb and inc adc jo jg nop cwtl pop data16 or insb pop icebp mov sub dec adc jp push testl xor xor pop ficompl mov out pusha sub jecxz cwtl xchg xchg jg dec inc sub mov ljmp cwtl add cmp xchg in test push roll icebp out das dec shr and cmc pushf push inc xchg outsl in pop sbb jno (bad) sarb pusha mov cmp ljmp inc pop loopne add push std stc movsl (bad) pop aam cli jp sti cmp das mov jae sbb and pop sub icebp push pop sarb pop (bad) negl and sarl ss add sub mov dec out aam cmovae mov rcrb clc loopne orb ja or pushf and jle fwait mov rclb or xor fiaddl hlt adc cmp loop jnp pop stos ret sbb jge pop leave push rcrb out rcll mov mov fldl fildl test xor push adc jg xchg nop repz xchg inc iret fcomps into sbb mov sbb test add shrb xchg mov arpl jno cmpsl outsb std mull adc (bad) insl mov pop repnz jns jo rclb pop pushl mov push ret shll adcb call jns int3 in cmp xchg out pop cmp insb add adc pusha add fildl pop pushf jecxz pop jmp int mul fs xchg lret jl mov retw addl nop (bad) add push sub cmp mov je add sahf out setns loopne and adc cli add and add insb jp out or jno inc decl adc addl cwtl lods push add lods and xchg cmp add fs add add dec ss mov push mov insl lcall in stc add dec jmp scas push mov xor shll and add notb inc and sbb cmp cld es mov rol push pop mov js jno sub rolb inc les adc sbb enter ds test in rcrl pcmpgtb jmp popa in mov inc insb lock jne cmpsl ljmp pop into add push fnstcw cwtl sub add xchg repz sub movsb or sub and or inc add adc outsb or dec push ret jo ljmp enter pop lcall pusha lods (bad) jl add cli sub pop mov bound pop or pop inc jge inc xor test dec jb pusha push add pop xchg mov inc mov adc popa mov xchg push std jne sbb aaa mov test jg addl cmp (bad) lock mov jle and push popa push adcb scas and jno mov add pop or stos cs fcomps mov (bad) cltd and pmuludq adc movsb add adc push pop jmp cmp dec pop imul int3 sbb cli and xchg aam add pop or shrl mov jmp push mov punpcklbw sbbl fadds jnp adc pop orl gs jecxz jae lods pop or ljmp aaa dec sbbb mov inc cmp cmc push add out stc or dec iret jmp aas jbe mov test sti addr16 and cmp insb jo fsubs dec sub mov cmp push inc sbb lcall jmp cli ss cmp int push pop mov adc sbb lea jecxz outsl sub push rol movsb loop add inc push call mov (bad) add dec mov adc repnz imul or xor (bad) lret lock mov pop add mov sub adc scas push xor xchg add pop jge rcr cmp les stos or xchg add xchg jle sti xlat sahf push push xor mov dec jmp mov or lret nop cmp test mov add inc andl cmpsl mov pop or push cmp mov push adc add scas and or add je es rolb (bad) mov fldenv loop inc lods mov jge int3 inc mov push adc cmp add cmp out cmp sbb pop pop jo push jle in scas mov mov pop add cltd pusha pop push xchg pop pusha xor push and mov or ret jecxz cmp xchg fild ds mov add cwtl add fisubl jl add mov lods push xchg or cmp jl pusha pop pop adc (bad) cs cs test mov fmul xchg fdivl and dec xor aam cmp push inc add aaa adc xchg inc int3 sub mov push pushf shlb repnz insl add cmp stc data16 jp xor jo lock xchg inc lods push sub sub add push adc (bad) mov les xor sub xchg add and mov nop fsubrl cmp stos loope add jmp push shr mov inc lods (bad) loopne cmp push pop sbb sbb inc and add in shrb cmp jns stc jp jno leave xor xor push jbe xlat push and add (bad) adc dec jae add lock cmp mov mov add xor jg out xchg or ficomp cmpsl add jno sbb std les outsb add mov jmp dec lret cmp in mov mov icebp pushf test orl movsb mov (bad) out (bad) push out movsl and imul fsubrl and adc popa inc jnp mov pop sub andl adc call pop pop pop cmp mov call xchg adc lods je add jmp sub cwtl dec push xorl sub push mov cwtl mov or (bad) aaa mov lock orb inc stos mov inc jp inc shrl cli mov icebp lcall ret jo sbb iret mov nop push repnz cld loopne and sbb mov push iret or push fadds loope lods dec ret mov shll xchg sti sbb and (bad) lock cmp or pop pop outsb (bad) enter lock arpl mov enter std ljmp stc out sub xor mov xor loop cmpsl add sub cmp push push adc sbbl push cwtl add add in rol imul dec cmp jecxz fisubr int mov add mov cwtl call push (bad) xor or lods xchg jb sbb adc test dec stos jg dec add scas (bad) gs add jl pop cmpsb fcom xchg aad and xchg add ds (bad) cs xor jge adc jg rol aaa cmp jo xchg (bad) push fisttpll cli shll in mov push jb adc pop pop dec (bad) sti lods sbb add ror pusha js jo inc stc or (bad) sbb cmp add mov lds add into sbb jl adc add in adc mov cmpsl adc scas (bad) pop into add arpl stos xchg and icebp mov (bad) xor xchg lea dec jns jb mov roll adc (bad) sbb add mov inc xchg mov cmp mov pop adc add jns outsl adc cli loope lods add xor inc in dec push jne push stos call add or adc add add and lock mov fstps iret lock add addr16 adc pop mov pop add inc hlt xchg daa or sub mov push sub (bad) incl pop mov cwtl fmuls pop mov and dec dec add stc faddl fnop mov inc pusha pop push mov dec sub sub mov mov add enter stc jle sub add mov mov xor (bad) icebp mov sbb add cs mov adc pop mov test scas or sbb or imul (bad) lret pop adc pop and add pop pop mov jg lods sbb and add xchg sub stos xor test subl insl test movd xadd cmp (bad) cmp mov push xor mov call pop xchg pop xchg cmpsl fsubs mov clc pop les notl pop or daa lahf and mov dec test daa (bad) jle jb cmp sub inc jbe movsb add inc push out das aaa mov xchg loopne fistl repz xorb cwtl cld or outsl xchg adc and rcrl push pusha rclb icebp xor xor pop jne mov outsl and test push adc xchg ljmp stos xor fcomps adc setnp rcrl mov (bad) rolb mov fcoms movsb aaa loop add xchg rcl out clc add std inc mov (bad) jmp call int3 repnz lods jo stc ja push add add popa je pushf xor imul pop cmc push add adc xchg test pop es loopne jp aas mov stos and dec aaa out jmp pop insb fsub mov jnp xor push loopne push sti add cwtl add jne hlt sub sti fcoms push add repz rorl sahf nop xchg subl data16 jg jp and adc xor jo aad mov xchg sbb add pusha mov and mov jns add movsb cmc out (bad) mov aam add sbb add jl pop and mov push mov popa add and add sahf shlb mov sub sarl add mov push enter add add call jno fildl pop frstor fidivrl repnz clc call sbb (bad) or jmp imul add daa pop and xchg rorb aam data16 dec inc aaa add lock add loopne or repz or neg (bad) pop jo dec lret xor mov and cli out cs jle inc rclb pop enter mov and mov lcall sbb shrl imul pop jno or mov pop aam jo out cmp adc nop scas mov ja add mov add inc rcll sub out add ret es jmp adc pop aam aaa nop cli adc mov xor inc xchg lret cmpsb adc and add pop add pusha push xchg in jmp popa les inc dec icebp push jns imulb cmp addr16 pop jge mov or xchg loope loopne sub and mov add inc xor cmp (bad) xchg xor in mov fildl js push rcll andl push cwtl enter popa (bad) wrmsr out rolb add fsubl and pop mov mov imul pop fstpl mov inc movb in clc loope sub or (bad) js mov lret mov add repz sbb push adc test cwtl pusha push gs or and nop push pop mov sti adc clc mov inc push aam es xor push mov clc add sbb out test bound orb pop hlt xor imul pop mov inc repnz out sub pop lret pop add in mov ljmp xor fs cmp and dec jo inc mov cmp jns jl fld in repnz insl and test cmp mov sub aas xchg fcomps push sub adc cmp jno sub pop lahf mov pusha dec dec loope inc in popf and and or (bad) jnp pusha cmp sub clc and call lods mov jge xlat test cld adc call (bad) jne inc loop nop xchg les rorl icebp inc jmp fsubs and adc scas jne mov add mov xor sahf fild xchg add je popf xor pusha mov xor xchg mov jae pop pop in jno inc xchg sbb js dec xlat mov adc enter push pop cli xchg repz pop dec outsb jl lcall loopne pop cwtl pop dec cmp cmp and les mov add add sbb aaa xor xorb nop pushf out fs push (bad) loopne hlt mov movsb ljmp in add rorl sub clc outsl stos ljmp or (bad) rclb das psubd mov xchg dec es xchg test clc xor add push div (bad) icebp sub add pop mov movsb fidivr xor in insb adc inc sub pop aaa jmp les shll cs sub ret push sub and fnsave sub and les loop cmpneqps shlb cmp andl mov push icebp and loop fistpl add or mov push mov or (bad) push subl repnz rolb rcrl (bad) mov inc jno loopne repnz sub dec sub dec inc push movb sti push imul add pop mov mov cwtl aas pushf push add fstps mov arpl pop push jecxz pop add into push hlt (bad) cmp jle jmp call adc cli daa icebp pop add sti add pop (bad) ret outsl xchg pop pop inc add mov mov fs or jae add jne sti and pop and jb lods (bad) mov jo cs test add and dec orb mov je cld imul dec cltd adcl icebp mov (bad) push test pop cmp adc ja adc lret or popa add sub jbe or xor add in ljmp dec add fmul fiaddl xchg add loop xchg mov xlat mov cmpsb lock or xor out jo pusha test sub insl sub xor shlb pop test inc mov fiaddl and (bad) bound add jo in out pop push (bad) icebp daa push push add scas sbb add icebp add lea pop inc and scas add and out mov adc cwtl mov inc addb clc lods insl lock out or mull in hlt pushf add aaa scas rcll or push cltd xchg aad add push or mov mov cld jmp mov call xor ret popf loopne shll jg dec (bad) mov push add mov xchg enter push inc jge jne and mov adc mov out cs pop out jg nop shlb xor xor sarb mov pop add stc test pop cmp add pusha mov call scas or movsb bound dec orl add sub or (bad) jecxz push mov lods add (bad) mov adc adc inc les pop out leave dec clc js xor lcall xor pop movsb sarb jg xchg test mov inc aam mov sub mov lods add jl loopne call fistpl ds add test test cmp xchg cltd xor sub es cli daa sub and xor and lret mov (bad) add inc shlb out adc adc std movsb inc data16 xchg mov rorb out add sub jbe aaa leave or lcall (bad) call popa push (bad) dec jge and jns cld add or dec test mov jnp mov int3 cmpsb sti and call fcompl sub mov jmp sub xchg or insl lcall mov inc add fisubl mov add test or pop push mov dec (bad) enter js push or jp or cmp roll and das in adc or push dec add (bad) adc cmp rolb iret push stos ss and xchg and cld mov inc js js cmpl xchg aad and cld pop bound pop and pop fwait cmp cmc int3 or ljmp inc mov icebp adc std or add push mov sub pop and adc add push cli or add pop pop mov fldl add fwait mov movsb jae sbb or xchg test movsb push sub enter lcall in clc jl aam mov mov jle in nop scas adc in sub jo inc pop mov mov cmp add stos inc das or repz ljmp lock aas cmp repnz and aam movsb push cmp rcrb push stos mov pop insl xor cmp add sub and adc add ret stc hlt enter lret bound loop add xor movsl sbb jp add and inc ss arpl dec stos xchg andb fsts test and aas ret push pop pop lret daa and mov mov test mov xor stc data16 popf cld dec mov jno mov rcrl mov or testb dec mov sbb or outsl dec pop and sbb aam dec xchg mov pop mov add jno xchg ret mov xchg inc insb cmp stos jg push jne lds or rolb xlat mov push push push aad push decb mov xlat xchg cmpsl xor stos add add mov xor outsl pop test mov sahf loope jb add mov add mov xchg lods lds pop pop jg cli loop sbbb dec js lea (bad) into jg cmc enter loop pop fisttp test andb mov shll iret pop out add repnz cmc cwtl and add sub jg aam adc push sbb inc (bad) ja push pop repnz add cmpsl pop add out cltd mov enter sbb clc clc and add pushf mov fildl and icebp xlat js sahf ret addr16 adc stc loope ret add loop sbb (bad) cli cmp outsb cmp nop dec rol pop sbb (bad) jno lock push test xchg inc xchg stc movsb (bad) pop shl cli push rorl inc pop xchg mov sbb int3 push cwtl ret sub hlt fidivr jp add push jecxz push mov xor sub inc loop xchg add add lret sbb sbb dec or mov add adc mov rcll nop stc xor cld add adc inc (bad) xchg pop lret sub or mov fisttp xchg inc jg cli mov orb ret inc dec xlat iret pop push enter rcrl mov add inc lock xor xchg (bad) nop test sub lahf add insb add in pop pop and add mov jo mov nop dec dec inc mov lock cmp pop enter fildl pop push cmc dec mov xor mov es sub mov jns nopl adc lds xchg icebp fadds mov dec (bad) jno pop mov pop shrl je fldenv mov add dec lods pop pop push push dec bound test iret loopne mov mov lcall mov outsb or pop xor pop das fs add and in inc ja adc jg enter addr16 jmp adc pop fldenv pop mov inc lcall (bad) dec xchg add flds in push sub nop pop xchg subb push mov iret addr16 or cltd aam xchg shrb ficompl lock push clc aas add or out jnp cwtl hlt sub inc inc outsb sar jne xor push movsl call fs in insb xchg je pop jbe mov lods (bad) mov inc push test into loop add xor loope mov xchg cmp shlb add xchg lahf in shll inc mov mov rcl sub mov lret pop or xchg in lahf in adc fs xor or inc aam push or mov andl icebp mov std add pop (bad) divl les or in call or inc sub fs push (bad) fildl xchg xlat pop cmpsb add xchg add loopne jo adc push push mov jbe push xor cli add ret push scas xor xchg cld jl push adcl sub pusha or arpl push (bad) mov add je insl push ret add and jmp pushf movsb cmpsb mov scas (bad) jmp and or mov push fnop js icebp daa adc adc sub lock jns push lahf jo adc push popa dec fiaddl mov dec dec add int3 sbb test add call cmp xchg bnd push mul pop add cld les jae lock out lds out imulb (bad) lret or mov dec hlt das push push jno sub jbe loope xchg jecxz popa pop mov dec add or mov flds lock or flds or push aaa (bad) pop pop or andl (bad) hlt jns ds lahf pop ret sub out mov fidivl aam inc pop push dec xchg add jne mov das cmpsl xchg addr16 jecxz (bad) mov add mov and cmp and ss lods sub and cli dec and dec cmp (bad) fdivs pop call dec fidivl mov adc xchg clc sub dec es (bad) lods test imul adc adc cmp loopne ja lods xor mov into cld ss pop testl insb lret js aas xor sbb or add add or rcll add mov daa adc hlt sbbl ficompl mov addb (bad) xor icebp (bad) das add test mov mov mov jmp sub fiadd in jo pop pop add push push mov pop int3 sub xchg or jmp xor daa (bad) shll jp mov ret jmp sbb and xor push or rcrb jb scas aas arpl and add cmpsb out mov mov mov mov mov unpckhps sbb cmp popa mov push aam push bnd loope inc sub adc insb pop ret rclb ror inc lock addb mov out fcmovnu (bad) repnz pop mov imul lock jg fwait add outsl sahf pusha push call pop cmp pop pop pop push sbb ficomp push push adc pop call nop mov nop push pop jo (bad) or testl add lret cmpsl and mov ja imul inc mov ljmp adc mov je push loope cmc lret push pop jne pop add stc bound or xor pop pop fiadd add cmp int3 (bad) jmp rorl pop icebp sti and add push jge xchg pop add movzbl pop add adc movsb out xor adc (bad) in dec xor test call int or inc add sbb lock cmp mov or cmpsl (bad) adc add mov ret stc clc inc xlat add test pop jmp jb clc andb mov dec call fwait (bad) sar es out pop push call adc mov out jb inc sbb pop andb dec mov pop sbb mov xor pusha cltd (bad) inc adcl push out mov mov xor and pusha inc popa test xlat pusha sub add add jl cs mov (bad) mov pop jmp add pop push jnp pop ja pop xor popa jmp in ljmp les rcll cmp inc and add inc loop add and clc push push cld inc lahf lock add je fistpl adc call pop add adc (bad) jp and insl push or adc or adc jne add add add cmp sbb xchg jbe subl push mov test test dec xchg xor stos add inc push adc in jae add push mov ficomp loop pop cltd repnz ret cmc adc mov xchg jo mov pop pusha mov push pop dec popa mov cmp inc push add inc mov jno js (bad) aaa push sbb xor scas jno les push cli sbb pop sbb inc pop add mov pop add mov daa add lock push add (bad) (bad) (bad) lahf mov mov pop pop add cmc pop ret and cli ret orl push add sub mov sarb iret mov jmp sub xchg jmp test push sub (bad) xchg lahf out enter enter mov and fs push mov mov pop mov les mov mov xorl pop push push and adc or cmpsl push imul clc xchg mov (bad) test sub mov push (bad) and lea mov or call pop xor dec cltd outsb arpl adc dec rcll stc dec add jnp les fstp dec pop push adc mov js inc jnp arpl adc xchg or add add sub add lret xor cmp cmpsl push mov pop mov xchg in pop rorl mov sbbb popa dec cmc iret add loop or jmp jo or jl adc or shll in adc add add xor and insl test mov cmp rcrl or or fldcw sbbb cs push jbe mov incl (bad) xlat jo test dec movsb inc rcrb mov mov add data16 sub ret pushfw (bad) mov andl stos stc daa push out js ds mov push add pop cwtl idiv fistp fnsave add in lahf je into flds mov dec pop ficom or pusha cmc test mov int3 movsl add push rolb sub add and add inc add add add lods lods lods cmpsb cmpsb cmpsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb cmpsb cmpsb cmpsb stos stos stos add add add cmpsb cmpsb cmpsb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp add add movsb movsb movsb (bad) (bad) jmp loope loope loope loope loope loope loopne loopne loopne loope loope loope loope loopne loopne loopne loope loope loope loope loope loopne loopne loopne loope loope loope loope loopne loopne loopne loope loope loope loope loope loopne loopne loopne (bad) jmp add add (bad) (bad) (bad) (bad) (bad) jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrp (bad) (bad) std std std std std std (bad) (bad) (bad) (bad) fdivrp (bad) (bad) std std std std std std (bad) (bad) (bad) (bad) fdivrp (bad) (bad) std std std std std std (bad) (bad) (bad) (bad) fdivrp (bad) (bad) std std std (bad) (bad) (bad) (bad) (bad) jmp add add std cld cld (bad) (bad) (bad) jmp out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrp std std sti sti sti sti sti sti std std std fstp (bad) std std sti sti sti sti sti sti std std std fstp (bad) std std sti sti sti sti sti sti std std std fstp (bad) std std sti sti sti cld cld cld (bad) (bad) jmp add add std cld sti (bad) (bad) (bad) cmp xor jp dec scas cmp (bad) cld sti cli cli stc cli cli stc cld cld sti (bad) (bad) cld sti cli cli stc cli cli stc cld cld sti (bad) (bad) cld sti cli cli stc cli cli stc cld cld sti (bad) (bad) cld sti cli cli stc sti sti stc (bad) (bad) jmp add add std sti cld (bad) (bad) incl jl (bad) cld jecxz cld loop jl (bad) (bad) (bad) (bad) fdivrp sti sti stc stc cli stc stc cli sti sti sti fcmovnu (bad) sti sti stc stc cli stc stc cli sti sti sti fcmovnu (bad) sti sti stc stc cli stc stc cli sti sti sti fcmovnu (bad) sti sti stc stc stc cli cli cli (bad) (bad) jmp add add loopne fdiv in add (bad) std in std in jg mul jmp (bad) fcmovnu fcmovu fnop (bad) fcomp fcmovu fcmovnu fcmovu fcmovu (bad) fcomp fnop fcmovu (bad) fcmovnu fcmovu (bad) fnop (bad) fcomp fcmovu fcmovnu fcmovu fcmovu (bad) fcomp fnop (bad) (bad) jmp add add (bad) cld lcall aaa add add add jmp in cli sti clc div clc div stc clc clc fnop fdivr clc clc clc div clc div sti stc clc (bad) fsincos cli stc stc clc idiv div stc clc clc fnop fdivr clc clc div idiv div (bad) (bad) jmp add add pushl sub mov (bad) (bad) lcall xor (bad) stc div cmc hlt repz cmc (bad) (bad) aad div hlt cmc repz clc hlt (bad) push in xlat (bad) push (bad) (bad) cmc clc clc hlt div cmc (bad) (bad) aad div hlt hlt repz cmc repz std cld movsb movsb movsb add add add movsl movsb movsl (bad) std (bad) push cli mov enter cld idiv cli cmc idiv stc (bad) cltd int add cltd iret mov clc std clc hlt cmc cmc hlt hlt aad aam repz cmc repz cld hlt imul mov cld hlt div hlt aad aam repz repz repnz cld cld movsb movsb movsb add add add movsl movsl movsl cld cld cld cmc hlt repz cmc cmc xlat aad cmc hlt repz hlt (bad) cli std test cwtl int (bad) clc cld clc cmc cmc aad aam hlt repz cmc repnz push mov mov decl and div aam (bad) hlt hlt repz repz sti sti cld movsl movsl movsl add add add movsl movsl movsl cld cld sti rcl rcl aam aad aad rcl rcl rcl rcl fcom (bad) in fild (bad) mov fcom xlat aam aam xlat aam in adc mov into call mov fcom aad aad aam aad aad rcl std cld sti movsl movsl movsl add add add movsl movsl movsl sti sti cli repz div lock aam repnz out icebp out out icebp out out repz lock aam idiv xchg lret mov jge shl fnop fcomp stc cmc repnz cld icebp lods mov adc mov daa mov std repz aam cmc not in out out cld cld movsl movsl movsl add add add movsl movsl movsl cld cld clc out ljmp repnz in out in in in in out out in rcl (bad) repz std repz cmp std imull mov in (bad) push stos scas fisttpll loopne (bad) into loop add (bad) sti sti movsl movsl movsl add add add cmpsb cmpsb movsl (bad) cld imull mov imul out out ljmp iret into int in in icebp in in cld icebp hlt xchg lret scas add adc les out aad into repz cli imul test ficom lds mov lret lock stc stc movsl movsl movsl add add add movsl movsl movsl sti sti clc div in cmpsb stos fmull fnop imul lock jmp in in iret into int in in out in jmp lock (bad) cli notb lcall (bad) cli hlt cmc icebp out ror into out out in repz (bad) stc hlt mov bound hlt lock cli stc clc movsl movsl movsl add add add movsl movsl movsl clc clc (bad) iret iret lret int3 xchg cwtl leave or leave xlat (bad) int3 rcl int3 iret iret int3 into into lret rcl lret fnop int3 xchg cwtl lret sbb leave push xchg cltd add fcmovbe aam rcl ror iret fcmovbe (bad) mov mov xchg cltd pop and xchg xchg lret lret cli cli mull add add movsl movsl movsl clc div ljmp (bad) int3 movsb stos ficompl sub iret shl cmc repz div ljmp xchg xchg lret repz enter cmp rcr push clc int (bad) add in aad stos fisttpll sbb stc mull add add movsl movsl movsl div cmc out jecxz call repz cmpsb xlat sbb rcl loopne fcmovne cld cli call and aad out in call lds xorb xorb xorl out lock int3 repnz out mov clc clc cmc cmpsb cmpsb movsl add add add movsl movsl movsl div cmc in jecxz in lret ljmp test adc mov sub icebp out int3 enter in out (bad) in repz (bad) (bad) in jg (bad) in repz call jmp jecxz in div cmc movsl movsl movsl add add add movsl movsl cmpsb div hlt in loop in lret out jecxz jmp adc (bad) mov mov ljmp jecxz out stc jmp add vpmulhuw std in jg stc jmp ljmp out in loop in div hlt movsl movsl cmpsb add add add cmpsb cmpsb cmpsb div cmc (bad) mov mov aad (bad) adc mov call and aad (bad) lret enter mov mov leave int3 aaa pushf outsl add add aaa pushf outsl ror int3 leave mov mov (bad) (bad) cmc cmpsb cmpsb cmpsb add add add cmpsb cmpsb cmpsb div cmc loop fsubp loop mov in fucomip ljmp mov insl lret loopne in mov jecxz loopne loop lock fmul int out out in out loop jecxz mov loop (bad) loopne div cmc cmpsb cmpsb cmpsb add add add cmpsb cmpsb cmpsb cmc hlt repz fsub loopne ret (bad) (bad) (bad) loop fucomp jmp out in fucomip call loope faddp (bad) (bad) (bad) (bad) fucom loope mov jecxz loopne loopne (bad) fucom loopne ret (bad) (bad) (bad) (bad) fdiv hlt repz cmpsb cmpsb add add add cmpsb cmpsb cmpsb cmc hlt repz fcmovu (bad) ret (bad) (bad) (bad) (bad) fnop (bad) (bad) loope (bad) (bad) (bad) fcmovu (bad) ret (bad) (bad) (bad) fstp fcmovu (bad) ret (bad) (bad) (bad) fstp fcmovu (bad) ret (bad) (bad) (bad) (bad) fprem1 hlt repz cmpsb cmpsb add add add cmpsb cmpsb cmpsb div repz fcomp (bad) rol fstp fcmovu fcmovnu (bad) (bad) (bad) rol fstp fcmovu fcmovnu (bad) (bad) (bad) rol fstp fcmovu fcmovnu (bad) (bad) (bad) rol fstp fcmovu fcmovnu (bad) (bad) (bad) rol fstp fcmovu fcmovnu fcmovnu fdiv hlt repz cmpsb cmpsb add add add cmpsb cmpsb cmpsb div hlt (bad) aad fcom fcmovu xlat fcmovu (bad) fnop (bad) fnop (bad) fcmovu (bad) fcmovu xlat fcmovu (bad) fnop (bad) fnop (bad) fcmovu (bad) fcmovu xlat fcmovu (bad) fnop (bad) fnop (bad) fcmovu (bad) fcmovu xlat fcmovu (bad) fnop (bad) fnop (bad) fcmovu (bad) fcmovu xlat fcmovu (bad) (bad) aad xlat aad cmc hlt cmpsb cmpsb cmpsb add add add cmpsl cmpsl cmpsl clc clc div cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt hlt cmc hlt cmc cmc hlt clc clc mull add add rol cmpsl cmpsl cmpsl cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsl cmpsl cmpsl rol add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add leave test rorb enter add xchg (bad) dec jno hlt xor out insb data16 add xchg push cmpsb (bad) add add add aaa xor xchg xchg (bad) xor out add scas mov icebp pop push repz lock add xchg xchg cli pop pop stc je stc imul cwtl (bad) lret xchg add add add hlt add add sti mov (bad) pop pop stc int3 jg enter add pop push ljmp mov ss dec xchg cwtl cld pushw xchg sti rorb mov jns ds mov mov add mov dec dec repnz add add hlt add hlt dec inc repnz pop push cmc xchg cwtl cld push dec repz pop pop cmc add add ljmp mov ljmp out lods inc lock lods inc add lods inc push add push lods inc (bad) stc lods inc (bad) clc lods inc (bad) std lods inc (bad) ljmp and add inc add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add add add add cmpsb cmpsb cmpsb jmp movsb jmp movsb jmp movsb jmp movsb jmp movsb jmp movsb jmp movsb jmp movsb jmp movsb jmp movsb jmp movsb jmp movsb jmp movsb jmp cmpsl cmpsl repz add add add cmpsb cmpsb cmpsb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp add push add add movsb movsb movsb (bad) (bad) (bad) (bad) jmp loope jmp loope jmp loope jmp loope jmp loopne jmp loopne jmp loope jmp loope jmp loope jmp loopne jmp loopne jmp loope jmp loope jmp loope jmp loopne jmp loopne jmp loope jmp loope jmp loope jmp loopne jmp loopne jmp loope jmp loope jmp loope jmp loopne jmp loopne (bad) (bad) (bad) (bad) jmp add add add movsb movsb movsb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrp (bad) (bad) (bad) (bad) std std std (bad) std std std (bad) (bad) (bad) (bad) (bad) (bad) fdivrp (bad) (bad) (bad) (bad) std std std (bad) std std std (bad) (bad) (bad) (bad) (bad) (bad) fdivrp (bad) (bad) (bad) (bad) std std std (bad) std std std (bad) (bad) (bad) (bad) (bad) (bad) fdivrp (bad) (bad) (bad) (bad) std std std (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp add add add movsb movsb movsb (bad) (bad) (bad) (bad) (bad) std cld cld (bad) (bad) (bad) (bad) (bad) jmp out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrp std std std (bad) sti sti sti (bad) sti sti sti (bad) std std std (bad) fstp (bad) std std std (bad) sti sti sti (bad) sti sti sti (bad) std std std (bad) fstp (bad) std std std (bad) sti sti sti (bad) sti sti sti (bad) std std std (bad) fstp (bad) std std std (bad) sti sti sti (bad) cld cld cld (bad) (bad) (bad) (bad) jmp add add add movsb movsb movsb (bad) (bad) (bad) (bad) (bad) std cld sti (bad) (bad) (bad) (bad) (bad) cmp jnp incl jp decl cmp (bad) (bad) cld cld sti (bad) cli cli stc (bad) cli cli stc (bad) cld cld sti (bad) (bad) (bad) cld cld sti (bad) cli cli stc (bad) cli cli stc (bad) cld cld sti (bad) (bad) (bad) cld cld sti (bad) cli cli stc (bad) cli cli stc (bad) cld cld sti (bad) (bad) (bad) cld cld sti (bad) cli cli stc (bad) sti sti stc (bad) (bad) (bad) (bad) jmp add add add movsb movsb movsb (bad) (bad) (bad) (bad) (bad) std sti cld (bad) (bad) (bad) (bad) incl jl inc cld jecxz (bad) cld loop add (bad) (bad) (bad) (bad) (bad) fdivrp sti sti sti (bad) stc stc cli (bad) stc stc cli (bad) sti sti sti (bad) fcmovnu (bad) sti sti sti (bad) stc stc cli (bad) stc stc cli (bad) sti sti sti (bad) fcmovnu (bad) sti sti sti (bad) stc stc cli (bad) stc stc cli (bad) sti sti sti (bad) fcmovnu (bad) sti sti sti (bad) stc stc stc (bad) cli cli cli (bad) (bad) (bad) (bad) jmp add add add movsb movsb movsb (bad) (bad) (bad) (bad) jmp (bad) push in incl jg inc std in (bad) std in add push in jmp (bad) (bad) fcmovnu (bad) (bad) fdivr (bad) fdivr fcmovu fcos fcmovnu (bad) fcmovu fcos (bad) fdivr (bad) fdivr fcmovu fcos fcmovnu (bad) fcmovu fcos (bad) fdivr (bad) fdivr fcmovu fcos fcmovnu (bad) fcmovu fcos (bad) fdivr (bad) fdivr (bad) (bad) (bad) jmp add add add movsb movsb movsb (bad) (bad) (bad) (bad) (bad) (bad) cld (bad) lcall xorl incl jle incl xorb mov (bad) (bad) (bad) cli sti (bad) clc div (bad) clc div (bad) stc clc clc (bad) fnop fdivr stc clc clc (bad) clc div (bad) clc div (bad) sti stc clc (bad) (bad) fcos sti cli stc (bad) stc clc idiv clc div (bad) stc clc clc (bad) fnop fdivr stc clc clc push div (bad) clc div (bad) (bad) (bad) (bad) jmp add add add movsl movsb movsl (bad) (bad) (bad) (bad) pushl jp decl (bad) (bad) (bad) (bad) (bad) (bad) lcall jle incl cld (bad) (bad) stc div push hlt repz div call (bad) aad div cmc push cmc repz clc clc hlt (bad) (bad) push jmp in (bad) (bad) push (bad) (bad) (bad) cmc (bad) clc clc hlt push div call (bad) aad div cmc push hlt repz cmc repz std std cld jmp add add add movsl movsb movsl (bad) (bad) std (bad) (bad) push cli pushl (bad) (bad) cld idiv (bad) cli cmc idiv (bad) stc (bad) lcall jle lcall clc std (bad) clc hlt cmc push hlt hlt call aam push repz push repz (bad) cld hlt ljmp sar push and ljmp sar (bad) cld hlt push cmc hlt call aam push repz push repnz repnz cld cld cld jmp add add add movsl movsl movsl (bad) cld cld cld push hlt repz clc cmc cmc call aad push hlt repz repz hlt hlt (bad) (bad) cli std incl jle lcall clc cld (bad) clc cmc cmc call aad push hlt repz cmc repnz (bad) push decl and (bad) mov and push div call aam push hlt repz repnz push repnz (bad) sti sti cld jmp add push add add movsl movsl movsl (bad) cld cld sti call rcl call aam call aam call rcl call rcl call rcl (bad) fcom (bad) jmp fcmovu incl xor (bad) mov (bad) fcom xlat call aam (bad) fcom aam out (bad) call mov (bad) mov es (bad) fnop aam aad aad aad aad aad aad aam aam std cld sti jmp add push add add movsl movsl movsl (bad) sti sti cli push repnz push hlt lock aam push icebp out push out out push out out push icebp lock fcom aam push cli call jge call jecxz jmp fcomp (bad) stc cmc repnz (bad) cld icebp ljmp sub call daa mov (bad) (bad) std repz fcmovnbe aam cld cmc idiv xlat in jmp jmp (bad) std cld cld jmp add push add add movsl movsl movsl (bad) cld cld clc jmp out (bad) mov fcmovbe push repnz (bad) in out in (bad) in in in (bad) out out in call rcl push lock (bad) std repz xchg leave mov add mov ljmp and jmp in (bad) (bad) push ljmp and jmp (bad) dec loop incl (bad) aaa lcall sti sti jmp add push add add cmpsb cmpsb movsl (bad) (bad) cld idiv stos mov incl sbb (bad) stc imul (bad) out out ljmp in jmp iret into int out in in push in in (bad) cld icebp hlt call mov decl pop (bad) ljmp stc out call aam push repnz (bad) cli imul ljmp and (bad) jle mov call lock cld stc stc jmp add push add add movsl movsl movsl (bad) sti sti clc push cmc in jmp and (bad) clc imul push out jmp out in in dec into int out in in (bad) out in jmp cmc lock (bad) (bad) cli idiv push xchg lcall movsl (bad) (bad) (bad) cli hlt push icebp out call iret into (bad) out out in push lock (bad) (bad) stc hlt decl cmp bound cmc push lock (bad) cli stc clc jmp add push add add movsl movsl movsl (bad) clc clc idiv iret iret lret fmul call and call (bad) int3 call ror dec iret int3 dec into lret call ror (bad) fnop int3 call and call cltd incl mov mov mov call rcl call iret iret (bad) fcmovbe sar mov mov call cltd call and call lret (bad) cli cli idiv cmpsb cmpsb movsl incl add push add add movsl movsl movsl (bad) clc div (bad) ljmp (bad) fcom int3 jmp sar shl push repz out ljmp stos (bad) mov call div call test jmp rcr (bad) push clc dec (bad) incl test jmp (bad) jmp sbb (bad) sti stc idiv cmpsb cmpsb movsl incl add push add add movsl movsl movsl push div jmp out (bad) call int push repz mov sub call shl (bad) (bad) lret cli call decl and call aad (bad) out in call call cmpl incl xorb add scas (bad) clc out lock into int3 push icebp out mov (bad) in in in clc clc cmc jmp add push add add movsl movsl movsl push div jmp jecxz jmp in dec leave enter in repnz in mov daa mov call sub push icebp out into int3 enter in in out (bad) (bad) in repz xorb (bad) (bad) in (bad) (bad) in add (bad) (bad) in repz in call enter in call in push div jmp add push add add movsl movsl cmpsb push cmc hlt jmp in jmp in dec leave (bad) jmp out (bad) jmp jecxz stc mul call into (bad) (bad) mov daa mov (bad) in ljmp out jecxz jmp jmp incl jg inc std in vpmulhuw add (bad) stc jmp (bad) ljmp jmp out jmp in jmp in push cmc hlt jmp add push add add cmpsb cmpsb cmpsb push div inc (bad) mov enter mov (bad) rol call and (bad) mov int call and call rol dec enter mov dec mov ror int3 pushl pushf outsl incl jg incl jg pushl pushf outsl call leave int3 dec mov inc mov mov inc (bad) div jmp add push add add cmpsb cmpsb cmpsb push div jmp loope jmp loop inc mov jecxz loopne in (bad) in ljmp adc mov jmp (bad) in ljmp mov loopne jecxz loopne out loop lock (bad) fmul int cmc out (bad) out in jmp loop jmp jecxz inc mov jecxz loopne loop (bad) loope fdivrp div cmc jmp add push add add cmpsb cmpsb cmpsb push hlt repz (bad) fdivr loopne fdivrp ret (bad) loopne (bad) (bad) (bad) loop (bad) ljmp (bad) out in (bad) jmp loop jmp loope inc (bad) loopne (bad) (bad) (bad) (bad) (bad) loop (bad) mov jmp loope jmp loopne (bad) (bad) (bad) loopne fdivrp ret (bad) loopne (bad) (bad) fdivr (bad) fdivr cmc hlt repz add push add add cmpsb cmpsb cmpsb push hlt repz fstp (bad) (bad) fdivr ret (bad) (bad) fdivr fstp (bad) (bad) (bad) loopne fdivr (bad) jmp loopne (bad) (bad) (bad) (bad) (bad) (bad) fdivr ret (bad) (bad) fdivr fstp (bad) fstp (bad) (bad) fdivr ret (bad) (bad) fdivr fstp (bad) fstp (bad) (bad) fdivr ret (bad) (bad) fdivr fstp (bad) (bad) fcos cmc hlt repz add push add add cmpsb cmpsb cmpsb push hlt repz fcmovnu fdivr fstp (bad) rol (bad) fstp (bad) (bad) fcos (bad) fcos fstp (bad) rol (bad) fstp (bad) (bad) fcos (bad) fcos fstp (bad) rol (bad) fstp (bad) (bad) fcos (bad) fcos fstp (bad) rol (bad) fstp (bad) (bad) fcos (bad) fcos fstp (bad) rol (bad) fstp (bad) (bad) fcos fcmovnu fdivr div repz add push add add div hlt (bad) (bad) aad fnop (bad) (bad) fcmovu xlat (bad) fcmovu (bad) (bad) fnop (bad) (bad) fnop (bad) (bad) fcmovu (bad) (bad) fcmovu xlat (bad) fcmovu (bad) (bad) fnop (bad) (bad) fnop (bad) (bad) fcmovu (bad) (bad) fcmovu xlat (bad) fcmovu (bad) (bad) fnop (bad) (bad) fnop (bad) (bad) fcmovu (bad) (bad) fcmovu xlat (bad) fcmovu (bad) (bad) fnop (bad) (bad) fnop (bad) (bad) fcmovu (bad) (bad) fcmovu xlat (bad) fcmovu (bad) (bad) (bad) aad fcom aad div hlt jmp add adc cmpsl cmpsl cmpsl (bad) clc clc idiv cmc cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt (bad) clc clc idiv cmpsl cmpsl cmpsl incl add or cmpsb cmpsb cmpsb mov cmpsl cmpsl jmp cmpsb cmpsb jmp cmpsb cmpsb jmp cmpsb cmpsb jmp cmpsb cmpsb jmp cmpsb cmpsb jmp cmpsb cmpsb jmp cmpsb cmpsb jmp cmpsb cmpsb jmp cmpsb cmpsb jmp cmpsb cmpsb jmp cmpsb cmpsb jmp cmpsb cmpsb jmp cmpsb cmpsb jmp cmpsb cmpsb mov add add add add add add add add add add add add ja jo je loopne jno jo add add jp loopne stos xchg inc jne jmp sarb jo jnp out js in les jne add add sub scas sub and scas int inc sbb jns mov movsl (bad) jae or xor lock xchg xchg (bad) ljmp es cld into jl push xchg arpl repnz cmp ljmp lock xor cmc das daa out sldt add pop pusha stc scas pop pop stc sti push push clc rclb neg dec dec (bad) leave sbbl loope jne aas add add cmp icebp cltd xor lock add add add add popa das loop pop sub sti mov (bad) lcall std pop push clc add add add add int3 jnp aas leave js lock in mov ss fs lods mov push stos mov xor mov popa das loopne push scas fs sti popa (bad) cli scas int inc in mov (bad) mov push int aaa call xorl xor lods xor add add jle jo jl loope jns jo add add cmp push cmp lock inc cmp lea ss mov inc inc hlt push inc cmp fnstsw repnz cmp icebp jo add add hlt jecxz cwtl cld (bad) cmp add add jo inc hlt loopne repz add add ljmp pop ljmp push aas lods inc sarb inc loopne lods inc add lods inc push add push lods inc push lods inc (bad) clc lods inc (bad) clc lods inc (bad) ljmp add and add add sbb test add xor adc add add add add xor and add add add jne adc add add add add xor add push add add push add pop add inc add push add dec add pop add dec add dec add add add add add add enter enter enter add add add add inc add add add popa add inc add insb add dec add data16 add add and add add push add popa add jae insb add je imul add add or add add add add je jb imul inc add insb add dec add data16 add mov add add xor xor xor cmp xor xor inc add add add adc add inc add insl add add je jae add inc add push add add push add add add adc add inc add insl add popa add jns dec add insl add add add push add add add push add add add add add add jb outsl add add je dec add insl add add add inc add add outsb add add add add add add imul push add jb jae imul add add add add add xor add add xor add sbb add push add outsl add add je push add jb jae imul add add add add xor add add xor add add add add outsb add add outsb add insb add popa add add add insb add add je add add sbb add dec add imul outsb add insb add imul outsb add insl add add inc add add outsb add add add js add push push push call int3 pop mov inc sub sub add cmpb jne movb mov push push push push call add mov pop pop ret push mov push push push push mov mov shr mov mov test je xor add add dec jmp pop pop pop pop leave ret mov add mov mov popa inc xchg rorl inc loop sbb cmp jb jge movsl arpl sub mov xor pop push subl mov add add sub mov sub and sub shl dec xor xor xor sub push decl pop shr shr and xor mov mov 