jbe sti call in push push xor call repnz mov test je mov mov push push or aas add add (bad) outsl outsl add add cmp pop pop ret mov push int3 pop xor sbb in out subb cli push or dec and or fldln2 mov xchg pop add dec cmpb (bad) xchg and add (bad) fisttpll fs dec jle in adc push mov push (bad) (bad) (bad) (bad) pushl mov inc test jne sub mov xor xor mov mov mov test jle (bad) add or adc sub jmp cmp mov push add nop mov cmp jne movb lea jmp movzbl (bad) fucomi fisttpll mov jl push je dec dec jns mov mov (bad) cld mov add mov sar push or pop clc mov mov neg fdivrp rorl push add shlb shl or mov out (bad) in mov or js adcl out add (bad) int (bad) cmp jl hlt pop pop movb (bad) jnp inc pop mov pop ret or jmp mov or pop dec mov (bad) mov add cs jge (bad) std jne push push mov clc nop mov push lea add or movsb popa mov lods xchg mov push push add movsb call lds jg insl fisttp jbe,pn les xchg mov inc or cmp or mov popa sti fidiv hlt sbb (bad) push xor xlat int push ss movl mov or sub inc add mov pop add push inc add rcrl fistl xor imul or ret movb jne adc loope arpl xchg mov jl add dec cld push push push (bad) lret stc stc out pusha ljmp push rcl int3 pop divb or add fnstcw sub inc push cmp (bad) out jo mov inc add orl and shll js mov jl sub rol inc sbb wbinvd push mov fs push inc add jmp mov sub mov cmp lds mov mov cmp mov jbe iret jbe clc in std mov jne (bad) mov popa (bad) pop movsb xor shrl (bad) pop push ja lea movb fldenv std sbb xchg cmc cmc push jp sti nop cmc lea sbb dec outsl movl jbe push lea out fstpt and push inc rsqrtps push push lea sahf cmp push push ja ret popf jmp sub mov pusha rorb test xor mulb xchg mov mov jge mov push push movl je neg sbb popa pop sbb add dec popl cld ljmp icebp push cmp cltd mov jne mov mov movb mov cmpl xor push jl decl xor inc cwtl push xchg vmwrite adc xor fcoms imul push decl enter std (bad) mov push jne cmp je jnp mov mov insb fcmovnbe mov nop and adcb inc mov inc add into sub add mov push insb test or in (bad) or cmpl cmp nop inc mov sbb mov cmp inc test xor pop insb arpl fldenv cld xor push nop in stos cmc sub jmp and lods jle push pop sub mov mov mov sub fsubrs mov and repnz fldl loope pop cs mov in icebp cmc cmp mov sti mov push faddl dec adc (bad) mov (bad) lea dec fcoml lock sub and sub adc iret insl xlat flds lea adc into add mov cmp mov in xchg inc cmp je inc or cmc jle sub int ret adc cs pop inc adc (bad) pop sti std jle xor push jae cmp add or push push adc ret adcb cmovge or pusha or pop add lods and adc (bad) jne or pmaxsw add pop fwait cld mov movsb clc adcl mov sbb xchg mov xor (bad) jl test mov int3 nop mov into dec xorb add insb jne addr16 pop cld cmp cmpsl xchg add pop stc cld clc cld sar or xchg adc shrb dec add clc mov xor bound inc sbb scas jne movsb dec mov mov xor sub adc sbb xor or adc gs adc icebp fsts dec lea in inc dec dec push fldt lret cwtl inc push adc and cmp mov mov mov shr mov and rep je pop (bad) lret pop push pop add xor test xchg insb outsb xchg adc stc jo inc imul mov jno adc inc std jbe movb or sbb out test js je inc dec cld sub dec push push adc int3 xor xor push mov cli push nop push outsb inc and xor xor daa or inc pusha ret pop push add cmp ljmp sti jmp les daa icebp sbb jns push jae lcall call push add iret outsb addr16 in (bad) lcall xlat pop add dec test (bad) fiadd popf push sub insb js cli sub ret push push aam and les push inc je xor add xchg loopne fwait in (bad) pop mov insb outsb addl jb mov in aam leave fcmovbe test ja jno stc jmp (bad) push (bad) pop fimull mov insb data16 in sub pop cli clc adc jp xchg mov xchg mov sbb xchg pushf fidiv fmuls lea sbb rorb pop idiv pop mov dec cmp into pop ret push push repz inc adc xor rcrb mov inc rorb clc pop ror sbb sbb (bad) cmp pop lret push push push push mov adc and inc xor xor push test loope fs mov fdivl xlat inc loope jo loopne sbb aaa sbb fistp dec in push call or push xor je push add jl cmp push jnp in sbb jmp loopne mov test fildll outsl mov xor mov mov icebp popa sbb hlt push test sahf xor push mov and lock fwait adc adc enter imul (bad) xchg pop push (bad) insb jo sbb sub xor or pop push jl ss or fistl es jp jae or push push xor adc leave cmp insb dec (bad) mov lods mov pusha sbb fist aam fsubrp and mov rcrb into jo int push outsb adc add test js roll sbb xlat mov add pop cmc call xor neg sbb and cmp cmp adc nop sub cmc stos inc cmp push xchg add pop jne imul hlt push mov push jae hlt fadds add pop jne loopne fisubr pop pop setne cmp sbb das push and sbb push mov mov dec push lock pop popf fcomps in in xlat mov and leave push push int mov (bad) in (bad) in cmp pop or test or adc repz inc and mov adc and lcall add (bad) (bad) fldl clc cmp repz cwtl in lea jo xor in lahf add mov in jb inc jne lea push pop push (bad) push popa sti out lock adc or xlat jae in add push lea add mov push push push sub mov mov cmp lods pop push cmp adc jne stos mov addr16 cmp adc and sbb or push data16 ss or into insb lret aam mov inc cmp jl and rclb notb bound rorb adc push or push dec fwait mov int3 test or jl insl int sahf roll (bad) xor shlb pop loopne mov in push mov subl decb push iret loop dec add lahf fsubs jbe adc fmull cwtl dec mov add push push dec pop inc jg dec clc mov aam mov fstl popf enter add gs adc fstpl in cwtl inc xchg jp xchg int3 or pop xor cmc ja int push mov and hlt add pop fsubrl jnp and std or xchg inc fistl sub xor or and or sub int3 das or pop test faddl je xor insb clc cli adc inc cli sbb mov adc int3 push or insl ljmp orl sbb inc and ret push cmp loope mov out mov rol rorl fcmovnb mov mov xchg xchg or test and xor (bad) insb (bad) enter add std roll jb out cmp sbb jbe mov scas xlat inc jbe hlt and or cmp pop mov xor pop test mov cmp mov mov pop inc inc mov inc mov iret xchg or push out push mov insb xchg nop mov xorl in add pop fwait and xchg dec mov pop xor add insb dec incl add inc sbb mov xchg push sbb lahf mov add inc jmp popf xor push cli je in mov or rcll pop enter fadds daa mov push daa dec mov push fisubrl inc push sub push std pop insb add add cmp je pop mov and aas pop lds arpl inc sti or cmp sbb sbb into in or xor (bad) xchg inc or fsub bnd and mov mov scas push call push inc cltd cmp sbb mov es sbb popa cmpb pop test add xor sub add mov mov ss add in mov (bad) sbb addr16 inc and and inc push dec jg ret enter pushl jne dec in add sbb add mov mov dec lcall (bad) faddl adc insb or or aam fdivl cmp test jne pop mov std sub jle or mov sub jecxz incl inc call cmp push xchg xchg adc movsl fmull sub xchg rolb push and push movzwl int3 sbb (bad) in sub lea mov pop sbb repz fsubrp (bad) (bad) lahf pusha add mov xor add out addr16 andnps add or dec jbe adc push cmp pop pusha mov fildll mov add push push xor mov push and xchg test cmp je inc mov fstps push pop add outsb test add sub push fdiv lahf nop and js nop cmpb inc cld imulb dec jns ret movb push lea sub decl (bad) jle lahf or mov xor shr xor and inc (bad) fcmovnu not add shl rorl (bad) jl stc add in flds dec mov sub mov and sbb and sti fs or cltd cmp scas cmp das add mov lds xchg lea mov nop or (bad) nop (bad) xchg cmp incb iret inc adc test mov pop not mov mov int3 lea in push or xlat outsb clc push push data16 cmp jmp lea lock fsubrl sub rorb lods std (bad) imul dec cld jne lea (bad) sarb enter jecxz adc (bad) loop sbb arpl jnp fiadd push test or icebp pop mulb mov push jbe xor adc xchg mov std rsm xchg adc mov stc lods ja daa inc adc incl jbe ret fldl pop stos adc rcll popa lds cmp sub sbb in sahf xor mov mov lea pop sbb or jb push scas cwtl adc std in std sti mull test pushf lea hlt ljmp aam sbb sahf push call sahf rclb pop add dec mov add mov addr16 sbb jae ret xor lea (bad) sbb add add sbb pop hlt pop pop lock and adc xchg mov xor jecxz lock out jne jbe mov adc lods push ret jg cli or add sub je and adc sbb fidivr adc mov mov call add sub pusha jg sahf mov std aaa inc mov hlt nop popf in add lea mov or pop arpl xor mov push mov xor movsb je int push lods pop pop cmpsb adc shlb (bad) mov mov dec (bad) (bad) cmp jb lea nop pop push lret data16 mov sbb jne cmp xchg xchg lcall or pop cmp push (bad) sti decb push lea mov cmp jo sti push bound aad out inc mov push insl incl xchg sbbl mov pop ja sarb pop push test test mov loope je test sub pop divl jl mov addr16 mov iret subps mov mov jne xor dec jne pop movsb mov xor push xchg or adcl (bad) mov jns iret sbb push mov cmpl xor call jns xchg lea inc lods jmp or mov pop lea mov adc ror repz movb sbb aad mov hlt add inc jg popf mov cmp (bad) test sub in xchg inc icebp (bad) lock cld xchg cmp (bad) pop in sub mov les lock rclb lret lea fsubrs sbb and sub in sbb scas sbbl mov test stc lds xchg movl in sbb loope subl or pop mov inc xchg adc add mov shlb cmpl cmpsl add bound dec pop lods jbe xchg xor mov push xchg add ret movb or icebp imul (bad) stos pop insl jne in mov add or or mov push test sub xchg gs jl insl push gs xor rol sub and push mov xchg adc push mov add fisubl mov test es mov clc (bad) lea aam jg xchg sbb pop lods (bad) mov das xchg hlt jmp movb xor bound (bad) (bad) sbb mov push dec dec push pop movb sub (bad) fldt or pop jne xchg pop push cmp dec jbe sub loopne out cmpb aaa xor xor push (bad) mov sbb jb popf dec dec pop cmp push pop lock stos add std loop mov inc pop cli fstl in jns ja cli pop or inc inc outsb push jo jb inc jbe prefetch or inc sahf fsubr push mov xchg lods adc jo lcall jo xchg push popf sahf cmpsb out in xchg add cli add enter cli into push add mov or std lcall (bad) js push jns push dec push lods mov xor cs push mov xor ljmp stc decb add pop xchg gs (bad) rcl shlb inc fstpt ret aam leave popa sbb mov jmp xchg movsb add mov mov inc ss repz and adc in lahf sbb push push adc adc pop and inc into pop push adc xchg outsb dec push enter clc (bad) popa push mov mov add stos push pop adc mov pop push add test pop jo sti inc push add xchg jo es jl inc mov js jp inc mov inc cmp inc sbb daa push inc adc xor cmp jne pushf insl pusha mov xchg mov movsb xchg dec and sbb xor push sbb mov stc jb lds inc push std imul dec mov je mov cmp push mov push cs cmp and and mov bound dec incl (bad) mov fiadd mov ljmp sbb or loopne xchg ret push aaa xchg punpckhdq push mov sub jge mov rep (bad) sti cmp jne xor push jo pop adc scas sbb jmp cmc fs into call push pop or mov mov xor or xchg dec in js push aaa js jnp sbb daa fisttpll mov pop pop leave movsl fucomip das (bad) push mov and fnstenv jno out mov add mov add cmp in push fadd pop test mov or aas fistl xchg dec repz (bad) jne (bad) fdivr lahf (bad) jle mov test je add les mov xor xlat fisubr fucomip stos xor mov jmp mov sti dec rorb movl jne dec mov push arpl sub insl and popf in nop mov xorl subl enter ficompl pop xor jne dec mov and pop cmp jae mov sti ret ret add jae and push xchg push mov dec dec je,pt sar sub inc lock out sbb inc mov mov add pop pop or jmp bnd push add rclb push inc and lock sub stos incl add ret andl push push and mov xchg addb andl sub (bad) xchg add cmp lock push xor sub sub dec fiadd neg pop dec cmpsb into inc ja push test ja pop jecxz mov (bad) xor mov ret or mov lock mov mov movl sub das sub in daa jne and je lea shr aaa sub jne adc pop bound test jbe jne xchg out adc ss insb mov xor or mov jae lahf mov loope cmpl rolb mov push je add test test bound sub cmp sbb testl xor push fsts test or pop arpl int jne icebp ja mov or dec (bad) xchg movb cmp adc rcl fldt jbe dec insb mov add mov push rorl sub pop push loopne dec jo pop daa pop jg mov adcl sti (bad) cli sub pop or incb testb jne addl add or mov popf enter das mov push aaa push fs jge inc cmp or push push or call (bad) das loopne fdivrl (bad) je pop sub cmp pop adc cs outsb das repnz or mov cmp je clc andl std (bad) mov xchg and push jge sub arpl and lret in add jmp sub lods addr16 in std mov clc mov rcrb je sub lcall push xchg rcrl ss lea sub daa cmp jne lea je jns push cmp or xor dec rol pusha sbb jge sti out (bad) xchg adc sti mov and je or cmp or inc mov and jns (bad) add cmp jne dec push cld insl jbe or in mov jmp and imul adc arpl enter daa xor mov jo inc adc xor js pop in mov xcrypt-ctr cmpsl sbb pop mov add xchg dec push das pop jb leave je dec maskmovq cmp scas sbb imul testl jge mov je inc sbb subl ljmp mov loope aaa das lock mov pop sti push jb lds push call mov mov sub add jmp cmp jb fildl lahf call (bad) clc mov xchg jo xor aas mov imul es sbb cmp ja pop mov mov xor mov les out idivb sub call mov sbb fidivr mov loopne (bad) in xchg cmp xchg add js gs pusha adc jmp in leave sbb idivb push je shll sbb or test mov sbb repnz loope mov sub adc or aas xchg xchg ret (bad) jmp test loope imulb sub daa insb cmc jbe xor sub mov vmwrite sbb sbb andl pop add jo insb xor sbb add sbb jl xor push fldl inc rolb out movsb mov mov push insb ret xchg sbb (bad) mov les fucomi imul push icebp movl add (bad) pop add int dec imul sbb dec push jns test (bad) js out testb mull mov mov jne orl pop or test jne cmp stos or fstps hlt cs fistl jns int3 jg fldl fnstsw adc mov cmp lock enter jo loopne (bad) pop add pop mov imul mov cwtl mov push lock mov adc pop insl mov add mov jne rolb lcall je jbe xor cmp (bad) sti jo xchg push mov pop adc dec xor mov sbb mov out scas pop sahf aad mov loope and and adc or lock pop popf push cli xchg test and xlat les movzwl jmp in fimul push push inc outsb sbb push das jne mov sbb (bad) aam or call outsb fsubrl xor add mov insl or dec jo mov arpl psubq mov ret or fwait fwait fwait adc mov data16 fnstcw or xor mov add fld fidivl pushf (bad) mov add insb cmc cld mov inc or scas mov sbb xor adc movsb scas push mov xor mov or (bad) lods xor mov lock test push mov mov fmull movsb jnp dec les int3 shlb push dec or dec push sarl out enter dec das xor and (bad) in push cmpsb sbb cmp test loop add mov fs xchg loopne push stos dec or inc adc insl cmp or push test dec gs popa subl inc jne push xchg add xchg xchg stos jmp xor in add dec sbb dec mov mov sbb xor and cmc gs jns stc call (bad) mov sbb jb xchg pop mov sar (bad) cmc push jo loopne add fsub jmp icebp pop call je and add fldl push (bad) pop test and xor and aam sbb mov push int shlb outsb cmp test daa jmp pop and call sbb ljmp xchg or js mov mov jmp aaa fsubs rclb or push daa push xchg testb or pop pop jnp cs inc jne aas push jmp mov cmpsl push xor movsl sahf stos adc add push cmpl push cmpl jne adc (bad) jle jg adc add fcomp pop clc dec addb add lcall std andl fs mov enter fs push and sub xchg add mov (bad) pop or lods or dec cld loopne addr16 pop dec jne out iret ret mov enter lret and sar or sahf out or lret jg fwait daa sbb dec mov out and ret xor adc jp jno fsts mov mov fwait add out rclb dec and fstpt adc mov jl loopne pop ja jbe test (bad) fwait shl outsl lfs fimul xor das in pop sar pop decl add ds jno (bad) fidivrl and sub mov add and lock pop arpl repnz sub dec add je or dec dec je or das sbb or push in adc addl inc cmp sub in negb mov or insb pop add popf negb mov mov or lret or mov and nop call mul or add push mov inc dec je add je mov pop pop insb je ja (bad) or sar add cmp inc adc shlb adc incl and push cmpb mov test add cmp arpl xor insl pop sarb fs cmp pop sahf in sahf outsl ss js cwtl in es push fisttpl cmc movsb std or mov jne push (bad) mov mov xchg bound andl xchg (bad) mov mov dec cltd and clc xchg (bad) mov int xchg add pop loop push mov imul adc icebp lods sub xor ret test je dec inc add and mov sahf add pop push jne sbb outsl insl mov js sub sti or inc cli push ljmp dec leave push sbb dec mov push mov and mov out jnp jg rorl mov shrb pop inc cld mov pusha sub push push fsubrs inc je mov pop push outsl jnp mov mov jg loopne int cmp xchg push xchg sarl cmp (bad) xor add cltd mov pop imulb ret lret or sti fwait jl inc xchg xchg pop push lods xchg out mov outsl mov lcall or mov add je sub test add jle adc into or push aam inc jmp andl call cld jae sub lods pop sub pop fsubrl or or or arpl dec (bad) fmuls pushf adc cld mov mov add or sub pop lea mov popa mov xor mov call aas push adc addr16 adc push mov mov or daa adcl jle mov (bad) pop sub dec loopne roll ja adc mov fsubr or pop loope ds inc mov xchg mov fiadd test add mov jge adc icebp (bad) push jg sbb (bad) lock out test sub dec push sub dec mov add cmpsl call sbb and cmp or fldl sbb insb ret push pop inc sbb or fs ss xor outsb cmp push lret es out loop ret push adc daa cltd adc adc rcrb xor cmp dec out aad or movsb pop or adc adc addb jno sarl adc dec movsl inc leave (bad) or mov sub mov cltd and ljmp test jg jl jae neg adc neg mov push nop mov test or insl jne push add andl dec pop mov or adc lea fs push xchg ja (bad) (bad) push je mov cltd push push push cmpsb mov mov mov (bad) xor jne cmp inc fmuls mov dec jmp cli repz inc sub dec fsubr aad scas sbb mov cmpb je outsl pop out decl inc jmp dec popw cmp mov insb lods add jmp lock jb std inc jmp dec cmpb fwait je in sub imul mov ret inc xor insl test stos sub sub add int3 bound adc sub adc adcl fwait sbb pusha mov dec dec mov lds pop add imulb xchg add (bad) sbb adcl jne lods lods or mov fistl pop jecxz (bad) jmp pop jne jno pop sti je or or jp ret xchg hlt jb or (bad) bound fdivl cmp sbb nop xor popf cwtl cmpsb jne jmp push mov sbb loopne sub es add je mov mov insl adc (bad) movsl adc fwait shr jp ficompl jle and das add dec mov shr cmp mov push xor dec movsl out or cmp cmp cs rcrl sbb ja or pushf and pop push outsb inc dec push sub jne pushl dec stos loopne movsb mov in jo xor add sbb and mov push inc push test pop in aas add xchg clc push (bad) in mov jb enter shrb pushf (bad) jno push cmp lods xor in sbb sbb or and jae loopne adc mov inc lea lea sbb or or pop pop mov fcoml add loopne jle inc pushf rcrb jo sbb adc ds jmp pop sbb mov ret (bad) push add int mov sbb add mov inc mov div lea pop adc push pop mov push insl jmp mov push pop cmp sbb and or outsl inc xlat inc xchg das lret adc jae adc xor add mov add ret insl bound out mov fnclex lea and shl push or decl jne ret mov add cmp je test add sbb jne or push jo jecxz push or incl mov lret add add xor aaa aam or cmp loope jne and push je add and adc fwait pop mov cmp lcall (bad) je cmp je out call out pop mov xchg sub mov pushf je std cld and inc jb mov hlt mov loope pop aam adc out cmc dec int in xchg adc outsb out sbb add jg repz push mov push lea cmpl test ljmp push mov enter xchg push mov roll orl lock loope pop inc jmp cmp stos orl jmp or jne aaa mov add adc mov add push or or sub fs and mov mov jge or (bad) adc and adc xor jo xor adc adc pop lods movl mov mov fwait lret or mov and loopne insb out std lret sub mov cmpsl add lea cmp adc insl jmp adc sbb lods cmp clc jbe mov test ret sbb or decl sub cs mov imul subl cld decb icebp mov jo test cmp jge fisttpl mov jmp jbe lahf notb mov je das inc dec add adc pop sbb mov lock cmp and ret negl (bad) adc jmp and loop je sbb hlt test mov sub add (bad) cmp dec mov sub fs imul xor iret daa and jbe push lret xchg cmp jno lret dec aam add addl mov das mov pop orl out rclb mov mov push or popa add fxam mov sub mov mov loopne lcall leave and push pop mov sbb sub sti pop std and pop ret or sti mov xchg mov clc pushf pop js add inc lea inc adc pop sbb loopne jecxz push mov adc mov jno es cmp push cmp pop xor mov (bad) adc xor and testl mov pop jbe test pop jo (bad) mov add pop imul or dec addr16 dec repnz sbb or inc lds insb pop imul nop or sbb cld mov xchg clc mov mov fwait sub out push adc inc mov xor pop add clc mov adc add pop movsb or sti jb pop cmp je or stos fdivrs adc rcll in int adc cmp lea push inc pop mov push jmp or stos push shrl pop push mov adc mov or add out loopne loopne into and xor dec pusha inc sub cmc push addr16 les xor mov or clc dec push jb inc add in mov je add sub aam leave aaa push add mov jne iret pop (bad) je or ror add sub xor sub adc ficompl cld mov dec clc xchg dec add adcb ret mov jne xchg rcr or mov pop insb in and xchg dec hlt mov jnp or add cmp adc (bad) ss push sahf lods push sbb push call mov loopne or dec (bad) sti inc pop lods std lods add add dec xchg fadd in mov loopne scas add (bad) je mov inc jg sbb jne into dec inc cs cmpsb and (bad) push cmp mov ret mov test cmp insl loopne sub or and add inc add push loope mov push add push sub push jne lods pop fist push ljmp sti (bad) fstl pusha xchg out or push rorb fwait cmp insb dec or loopne mov push jmp cmp call and add (bad) dec imul mov stos mov test cmp or adc dec mov add lcall enter mov add or loope or inc mov stos add (bad) (bad) into mov mov inc dec jne mov sub pop lret push insb adc dec es push dec rcrl (bad) out call mov loop or mov xchg out sub test and out adc sbb adc add outsb ja sub inc push lea pop cmpsb push mov push push mov je xlat cltd insl jbe jo outsl push jnp push scas add push xchg sbb pop aaa fstps jp push push xor rcll inc and popa rorb and aaa mov xor inc data16 push orb stc lcall adc adc ret fisttpll mov xor pop mov lock in divl mov sub mov push mov rorb ja fs lea jmp mov cmp cmp or loopne jmp lods jle ja inc cmp jb cmp mov (bad) dec roll mov push ss mov aam dec int add mov ret add cmp inc ss sbb jno daa mov (bad) and sub mov mov ss push push or mov mov pusha xor adc leave and fistl ds sub jp add xor int3 and dec mov jne enter push mov push cld dec gs add js les sub xor fnop push test xchg push test movsl mov mov inc loopne aam or js fnstsw jns adc fstpl xor and xlat (bad) je or js mov movl adc mov sbb inc fdivrs jae roll xchg pop call out mov (bad) or imul (bad) aam sub mov dec test imul mov jno rolb add sub push pop sub and loopne adc movsl out mov sbb dec ljmp cmpb shrb jmp add fcoml cmpsl fwait movl mov push mov js mov sub std hlt pop mov in arpl lock repz outsb mov clc pop jp sbb negb addr16 jg mov and push mov inc dec jne mov mov push and jmp imul stos jnp cmpsl cmp adc push enter fs (bad) hlt loopne or fsubl and jle mov repz sahf test jno push and sub roll pop insb decl mov call cwtl push push nop cmp mov dec pop and imul push jl shrb daa push mov push inc pop les sbb xlat testb ljmp popf add xchg xchg mov adc push cmp add test jae or lcall mov call or in sbb mov adc jmp jne sbb adc out lea dec push int insl outsl enter cmc xlat sar aam cli pop push and sbb push mov push test jns ja adc std adc pop xor dec test push push xchg scas or mov xchg xchg add nop mov push icebp lea or cmpl arpl je mov sbb pop rcr movnti or aam push adc rorl lret lcall xchg sub loop loopne sahf xchg sub push mov cmp jne or cmp mov (bad) cltd cmp mov cwtl rorl iret or cmp rolb xor sub test adc mov rclb dec (bad) aaa call call cmp sahf mov pop jne shlb lods inc jg loop xor pop test mov pop cld adc fldenv add and add (bad) mov cs cmp movsl mov xor divl mov and in pop sbb pop dec cmpl add push add cmpb out dec ja and lock repz and insb ds fwait sbb inc cld addb adc in jmp sub and cmp mov push aam (bad) mov sub mov adc mov (bad) ret stos sbb sbb add sub repz sub push jnp lea outsb mov push sti mov (bad) adc pop out mov fbld mov je add xchg inc adc add push add dec dec pop adc and ds mov inc rclb mov insb scas xor pop adc mov inc sbb or mov or cs push add add ret pop pop cmp pop and mov fs jnp dec std dec das adc addr16 insb pop imul (bad) js or icebp addr16 adc inc rcll enter clc mov sbbl sub xor adc inc and xor inc dec xor cmp adc jle pop or dec dec pusha push push movsl je aaa in fcoml fdivrl insb mov inc pop cmp (bad) hlt aas inc or inc test sbb pop out ss into mov xor push insb clc ja andl and adc sbb dec inc mov inc mov add fcoml sub (bad) push inc and or pop cmp and pop inc or bound outsb out jnp jl mov xchg nop mov xchg test jbe js pop dec inc adc mov mov and lods lcall mov arpl insl xchg cwtl in int (bad) dec mov mov aad iret xor arpl sbb push lea rcrl or stos jle and push or in shll jae mov popf pushf inc (bad) lcall mov jmp jge insl or dec (bad) add lock lods jge ret adc push mov xor pop and inc adc out mov adc mov pop std movb in mov mov push sub leave push test xchg cld stos inc push mov jo clc push push push inc sbb (bad) (bad) jo cld stos mov cmpsb outsl cwtl adc pop je rorl add or mov push dec (bad) jo mov ljmp add jmp cmp jge (bad) mov pop mov adc push test and adc push out xor sbb mov pop mov jmp mov mov incb ror stc mov (bad) pop and mov rcrl popf fldt push nop pusha out shl push pop mov or ds icebp push xchg cmp mov into pop int3 in jb sbbb xlat (bad) push pushf jl xchg lods cwtl in test fist jmp ds jb add mov sub add je push push adc orl mov or cli movsl mov dec rclb sub orl and adc ljmp jo addl call es cmp ljmp jo xor xchg dec sub push cwtl call xchg insl hlt add lock inc cmpb je mov cmp je cmp lods sub and out push ret ja gs mov sub outsb je or mov outsl inc inc sbb pop ret jg data16 mov prefetcht0 inc xchg jg aaa mov mov (bad) or or je pop jae repnz je add je lods test cmp fiadd or lds fild test inc (bad) mov push lods pop inc es pop mov lcall jecxz jge lret add (bad) repnz leave ss sbb je and outsb jne mov pop mov je xor push inc add add ss or jmp cmp cmp mov inc and xor and pop xor or cli jmp mov andl jmp fsubrs daa jnp adc add or andl add sarb fiadd add jne sub jbe add cmpsl xor add mov add push in or and mov push pop les jle sub adc jmp push or push sub movsl adc add shll sub insl mov pop imul add mov pushf mov adc xor inc (bad) pusha sub pop mov cmc in dec shlb fstpt (bad) xor pop xor (bad) lret add inc stos (bad) mov sub xorl mov cmc punpcklwd lea xchg ja pop lock daa xor pop rcll mov pop bound aas loopne mov sbbl jmp lods xchg loopne aas in arpl and jne mov sub xchg hlt cmp adc imul sbb jmp mov in cmp popa mov cmp mov (bad) and or mov sbb dec mov mov push push jne push (bad) jb add add pop sbb sbb push push push dec push lds call mov pop sub mov sbb or idivb lea lea or cmpl int3 js pop ret fcompl test xor out popl push les inc add into loopne mov xor pusha imul subl je adc or pop and mov add adc pushl imul mov sbb sub js mov popa sub push xor aad add ljmp and pusha or out ljmp inc sbb outsb adc sub insb or mov sub movsb push mov pop sbb push mov pop push push or movsb in (bad) sub mov test lods cmp cmp push outsl xchg (bad) jne inc mov sub pop pop sbb pop lahf pushf sarl (bad) push lea push ja jmp leave sar mov aas add add mov daa mov rcl inc push push and push sub testb aaa mov test mov jecxz and add or out pop and outsl and popa test push and pop mov sbb sub mov icebp imul (bad) adc mov jg movl push inc in andl xlat mov fwait pushf or or add test sbb movl xor push hlt mov push push int3 mov dec jnp test xor sub add lods mov enter sub out insb mov stos dec stos push mov mov mov xor ss and outsb pop test and pop hlt push pop (bad) mov cli lea push cmc push sbb not cmp or insb xor sti mov mov cmp ret sbb jno add inc mov shr imul divb mov in add add or mov out insb data16 sub inc mov xor sub jmp jne test push fdivrs sarl mov orl lds idivb push call jg pop data16 xchg and test add je ja (bad) sub mull sbb sub dec add mov (bad) push sti fstps xchg add push mov and ds in push (bad) cmp movsb lcall push mov cwtl sub (bad) imul std leave lret sub mov mov xor cmp pop inc inc imul dec inc and test movb inc inc adc lods pop mov jb xor lock sub (bad) xor jge inc add add sub sub cmp loop jbe in (bad) mov rclb dec leave movsl btc idivl pop mov pushf std adc fiadd into mov jo imul pop mov mov add adc enter push adc cmpl add jbe sbb inc sub sub pusha out push sbb orl sbb mov stc pushf xchg pop jnp sbb mov mov loopne push rcrb push rolb mov sub pop (bad) lock push push test fiaddl push rcll sbb lret cmp inc xchg pop adc (bad) jp mov add add fstpt jg jmp adc es mov adc or push push dec aas mov fs rcll and mov jo adc shlb popa pop dec cmp push adc sub into mov dec xor sahf dec popl loopne popa lret int3 inc xchg sbb mov sbb and sbb mov or lods mov pop frstor jb add add loop adcl (bad) jo test js cmp mov sbb fadds lcall lock ljmp pop lret inc xor inc mov push mov xor pop notb test mov gs mov sbb inc push andl cs cli dec aam mov add shl and jl jne test leave cmp sub or pop mov sub push jg outsb loopne repz fdivrl sar notl jne outsl jmp add push jo pusha andl pop or das or lcallw inc jno enter scas pop mov xchg jbe leave stos or jae mov je loopne pop stos sbb mov fwait adc mov outsl jb jge testb cmp dec xor push dec lret aad insb adc push fisttp push daa push das cmp clc xchg add push incl sbb adc pop mov fdivl dec insl insl test loopne scas hlt adc jb dec push ss add inc sub and sub cmp jmp cmp shll scas pop fidivrl (bad) jbe clc xchg mov mov aam adc lods push sub cmp cmp out jne stos mov call adc and jne pop jo or rep jmp mov sbb jmp add imull popf jb push lea adc ja les lock and mov mov cmpsb mov add mov or sub add add nop and xlat or add xor insb fs push mov sar mov mov call xor (bad) lock hlt clc lcall adc add clc or dec roll mov insb pusha scas add or dec or fcoms mov pushw sub cmp sbbl xor jne inc jo mov in dec xchg jmp xchg xchg stc sub nop or lcall add outsl add mov out add add fwait and flds and xchg sub mov scas pop cwtl arpl pop xor xor idivl add sbb xor rcl xor sbb sbb xor dec rcll adc dec rorl or dec xlat sbb add mov xor (bad) mov mov inc cwtl sub push inc sbb push cmp lods sahf push mov lea test addb (bad) adc push ljmp sbb xor sbb rol or cmp sub and lcall mov stc push pop (bad) data16 sbb add push fildl pop add add pop orb fcompl cmp sub bswap and push jmp inc jmp dec test je (bad) mov add xor idiv or lods fmuls add roll (bad) enter push cli add inc pop faddl mov add sbb ret push sub inc adc add mov inc test repz (bad) movb push and cmpb add jge inc aad mov lret addb je fisttpl or iret cmovs cmp sbb inc add enter rcrb enter fistp and pop in fwait fs call out push push jle sub loopne outsl push push push pop test push mov loopne or dec push xor or es pop pop sub cmp hlt je push dec jne pusha cs push and xchg jmp and or cmp add es and lds add (bad) mov aam and and sbb push or pop jecxz loopne jle mov sbb mov pop leave testb pop mov psubusb inc cltd cmp add and jecxz loopne adc ds dec std inc faddl cmpl jno incb xchg pop adc and mov push push cmp mov loopne mov nop jns push test inc xor pop fdivrp in mov fist push jb movaps (bad) mov cld add jns sbb outsb insb rcr stos mov pop int shrl mov add pop jbe mov cmp out pusha (bad) cld roll scas ss loopne push sarb xor cmp mov push xchg jb sbb sti mov lcall xchg lds jo xchg pop sub sub inc nop hlt out jbe aaa sub mov sub push jo lahf or mov inc mov stos loop sbb or adc movl mov test add mov in push mov je cmpl sti sbb je (bad) or mov sbb je pop or inc cmp pusha push mov push or pop shrl dec or jbe xchg sbb jne push stos dec add xor inc dec pop pop rcll cmp mov pop push add sbb lds xchg cmp rol push hlt daa dec jge cmp (bad) pusha mov xchg or hlt fcoms push mov fstpl mov push add lcall sbb cmp add sbb in ljmp cmp movl adc jle nop jno sbb jae pop cmp (bad) iret and xchg cs stc jae cmp mov lea pushf jns push cmp imul leave call repz inc enter loopne or pop lret jb or jmp xchg mov das mov and mov mov pop and cmp and leave mov pusha mov cmc jmp jge addb xchg rcrl scas jne fadds int3 (bad) adc add ret sbb notb cmp add (bad) les add ljmp dec in clc pop mov jg pop mov inc push jmp xor xor cmp sbb fs push idivl jne adc add repz (bad) pop xor jae gs xchg add jle xor jne pop and and push mov adc les stc push push jne repnz pop cmpl daa ss pop mov push mov aas ja jno mov adc cmp add sub rolb add xchg jo jp mov xchg push inc dec adc push out out or jge pusha pusha outsb call inc xor cld lret test and or dec mov mov jmp lds push cltd repz jmp dec ja mov ror mov lock add imul call je lods es data16 movsl in add adc jmp add pushf xor mov shr lock push mov add leave jne lret shll mov inc xchg jne aad cmp in xchg mov imul fdivrl (bad) and sbb push inc fbld jbe jg imul xor adc cmc pusha pop sub int3 fmuls add (bad) xchg or cltd mov sbb and sub repnz in rcll pop mov das inc mov xchg js clc push push sub fstpl jge call fsubrs cmp xor add jl inc mov movlhps test xchg ss cmovg sbb xorl jg mov ret ds jno inc pop mov inc add subl cmp inc icebp add imul je dec stos push mov xor lock ja adc clc inc stos xor mov insb add cmp (bad) pop xor decl adc cld sbbl push jae mov or ja dec jmp push push pop push sub jmp push movsl dec roll in dec xchg push (bad) loopne cmp jae mov inc aad add cmpsb inc movsl fldt push rcl frstor or mov jbe loopne mov sti add int push in out mov pop loopne inc call sub roll ret mov (bad) in jne xchg in outsb jge mov xor test sbb lea (bad) jne xor mov addb add int3 cmc outsb mov setb into xchg cmp jb inc (bad) fstl nop or fstpt add add pop imul mov sbb out mov push (bad) xor sub stos inc scas or fimull cwtl push lea xor mov aam push cmp or inc jo in sbb sub dec sti jl in repz lea xor push orb jmp incl mov inc sbbl cmp pop adc mov insl sbb das inc push ds fwait jae adc mov inc add lcall jne or je (bad) pop es scas les xchg inc add jl mov repz and outsb enter imulb cld nop mov add movsl sub sbb jp cwtl cwtl xor add jle dec fst sbb jg xchg shll add add and dec mov lock mov or sub call sbb mov xor or push sbb pop adc lock xor pop loop or cmp insl mov test dec mov or loopne or fistpll push mov xor pop inc jmp dec adc mov dec dec lock adc inc or add outsl sub outsb jmp mov jmp push push mov xchg mov cmp adc cmp iret js cmpsb and lea and cmp sbb outsb push mov loopne movl push or fcomps add mov test add rorl lock mov loope sbb out adc loopne (bad) (bad) sbb sbb dec mov (bad) sbb and push mov cmp dec or negl dec sbb jmp or lea sbb je popf adc (bad) or sbb add mov xchg and (bad) push inc test sub inc push xchg mov sbb fidiv mov mov (bad) xor test jb icebp lret enter in or sub add mov (bad) (bad) adc add add cmp in dec push mov rorb das into add jmp cmp rcrb add add test jl jmp adc sub leave and or std cld or mov dec sub adc stos mov or shrl loopne (bad) fisubl adc orl mov add outsb cmp hlt outsb add stos data16 mov fildl ss je or xchg inc add adc imul bound aad es jne sub jb sub in xchg mov test out jo xchg cmp and mov or add gs mov mov adc movzbl dec aaa fiadd dec jmp mov data16 inc jp push mov add incl sti jbe daa cmp ja or add jno pop push lea mov pop les inc push sbb loop push add sub push sub and je stos sub or or cmpsb icebp mov aaa push ret mull mov inc aaa jp jmp pop sub rcr xlat mov cli shr rcr or hlt div das and mov inc mul sub push jb jne or sub sbb adc sbbl neg mov ficoml push mov lret addr16 mov push and cmp movsl push xchg add outsl les add xor fldenv fsubrl jmp sub push adc out inc sbbl stos pop cmp mov daa ljmp add sbb pop rcll inc add push inc mov push mov daa inc sub movb or clc movb inc loope adc and das call or adc ss test mov push adc sub inc add faddp push fs fimull enter ja or or mul arpl mov mov or mov cld mov pusha fcmovnu adc cmp pop xchg mov scas or hlt pop test cmp ja and or in push in xor movb rcrb push dec dec mov adc add cmp es mov jl sub inc xor jg cmp dec popa mov jmp xor sbb gs jle push fcompl lret push push adc or int orl jmp aad push ficomp cmpl xchg pop or or xor push inc or or and roll andl icebp dec push mov out int mov and add mov push test adc mov sbb lret test in sub push xchg inc or call sub xor sub notl xchg lret or or or push or sbb fildl lea cmp je std insl push insb cmp (bad) jne outsb inc and push push mov and or pop rcr inc cwtl rolb mov jmp (bad) lock addr16 or rcrl flds xchg adc xchg bound xchg hlt or pop inc hlt sub inc jnp jge ja fucomp gs std ja pop je mov sub xor sarb das or sar dec inc lret inc pop loope push cmp sbb jle push icebp imul add (bad) out jb imul fs mov add sub push stos and pop rcrb fadds addr16 pop xchg or adc inc sub sub jnp jo test mov clc jmp pushl push xchg pop lea outsl rcr fsts sub insb call or and mov iret (bad) int3 jmp or enter (bad) xor add mov and jge pop (bad) lahf mov cmp dec mov jecxz insl or push xor int3 or lcall sbb pusha mov mov int3 pop fnstenv jne or mov sub pusha dec fmull xchg add cmp mov mov mov rorb pop pop mov nop aas inc pop add sbb dec mov add in add pop pop insb sbb ds push or fmuls arpl add pop push or dec dec fsubl and imul lret jg cmp test lock out pusha bound adcl mov inc push pusha fwait mov xor icebp bound add push push push rcrl mov lds stc jb lds fstps popa sub dec push call out or push add push or xor dec nop pushf and xlat lea push xchg sub decl inc and call add pusha jnp movsb js sbbl sar mov xor dec stos pop sub aas fstp mov loop icebp adc sbb test hlt scas jns dec cmp into fwait mov leave xchg ret pop xorb ret pop sbb push stos mov in or pop inc and mov xchg rorl sub sbb ss cmp add jmp xor call icebp xor fnstsw xor xor jb mov adc bound dec pushf mov and mov xlat adc lret lea mov push gs mov push sarl adc sbb cs cwtl dec xchg and mov es and mov fisttp mov or fstpl add (bad) mov mov inc (bad) sbb mov shr push mov pop mov leave jmp mov cwtl sub (bad) clc lock or (bad) and push idivl cmp sti add test call test gs test add or sub stos pusha push (bad) xchg push fxch xchg or sbb xchg popa cltd sub add sbb and sbb test push aas mov lock sti notb shrb mov aad xor pop add cmp jge ret mov mov push test in and in jo xchg xor push push xchg arpl flds or sbb adc insb mov sbb push and and nop inc push sub nop inc push sbb cmp xor inc inc push sbb dec dec push sbb push pop (bad) pop sbb pusha fs insb jo aad push sbb mov xchg pop ss sbb or and leave and mov mov cs enter leave fs mov and leave and aam xchg pop jb hlt clc dec es cld add add mov or adc adc sbb xchg dec and xchg dec cs cs mov es inc dec dec inc cs pop pop adc xchg dec pusha sbb pop push test fsubs in sbb nop mov adc cld xchg xchg add cwtl jbe cmp pushf enter adc sahf dec or fadds js orb or sbbb or enter mov enter fsts movsb inc add sbb sbb mov test out add shrb sub or lea dec ret add jmp sbb test pop insl mov sbb mov jl mov fwait adc cmp mov add push jne cmp lret clc sub add loop repnz mov je dec jne inc mov rep pop mov aaa (bad) mov jmp xchg adc test add sti pop loop lds cmp jne xchg cmp aaa inc sub and inc add insb push mov adc xchg mov js or or rcl add inc xlat mov out jmp out lahf sti fnstcw xor pop add fcomps xor lds ljmp (bad) adc add lea and jmp stos enter add inc xchg xchg out jg cmp jne mov or data16 es jne call incl shll push xchg add fcmovnbe outsl (bad) jb jmp vmread add jmp or lcall std jmp cld mov xor cld jmp insl fsubr or scas dec std adc inc lcall or or pop stos push dec adc or cld nop or lea stc test adc push decl xor adc insl add jge test cmp inc push inc and nop/reserved add dec add call sub mov adc pushf and inc jmp push popf lmsw xor xchg test mov cmp mov add mov in shrb int (bad) lods call call jmp fadds and fcompl inc insb out fldl push test mov inc jne testl mov int dec incl outsb mov mov add add sbb push rorl sbb dec push add push fwait sbb hlt mov xlat add sub insb call sbb imul jmp xor or adc shrb pop mov add ret cwtl aad mov mov or and mov pop fstps subb or jmp imul sub mov push cmp popa loope jnp,pt jl test pop or lea cmc ja test and add xor scas adc orl add or sbb xor or or pop mov pop test (bad) test jo adc lods int push movsl (bad) push fmuls push xchg pushf inc and jl pop xor pop sbb jnp lock or sti rclb add loopne clc cmovnp add enter xor outsl mov je andl cmc xchg cmp cmp mov mov decb pop cltd pusha adc cmp push (bad) shrb inc inc push lds mov ss sbb lods (bad) or enter decl or sahf stos or mov mov mov cmc fsubl pop mov mov mov pop push addl jg mov andb push dec jle roll fldcw and je ljmp push in addl cmp shrl les enter pushl (bad) sarl aam (bad) sbb (bad) mov mov dec mov adc adc aam jle mov movsl dec ja jge fsubl (bad) mov dec in lret aas cltd push adc inc cmp sub daa pop and adc test lock xchg incb popa add or inc mov lea adc add add push je inc lods cmp into hlt pop and cmp inc cli cmp xchg xchg cmpb jbe lret (bad) add jbe add pop jnp bound push or mov inc cmp jo pusha mov push push or fldenv int3 push adc rorl push xor add sbb fcomps je push pop addr16 (bad) sub cmc pop insb xchg cmpl mov sbb ja mov sbb fcoms add add imul pop and jne cmp gs add inc sti jne push (bad) jmp fldcw ds lcall out test push mov test mov aad cli int add cmp jg sub enter pop stos loopne xchg mov dec incb and arpl jmp and or cmpsb lea cmp or sbb test xor enter and js icebp push dec dec rorb lock and movsl mov aad xor addr16 add and shll inc into and mov cmp sub or dec add jae aam and jne cmp (bad) aam sbb rcrl and and sbb jo cmp mov lret add push lret cmp popf sbb scas pop pop adc movsb loop inc add cs add jg outsb ret jmp pusha pop mov mov icebp loopne mov add nop loope dec pop pop mov cli pusha aam push (bad) fistpll pop arpl cmpsl sbb loope push mov mov data16 dec loop sub inc sub inc in adc pusha pop sbb adc mov dec test lods and mov idivb add or mov (bad) rclb cmp aaa cmpsb repz adc sar sbb mov loope shlb lret and inc cmp fnstsw jo jb add add jmp adc jb sbb fcmovne ja sbb pop sub clc lea testb xor sbb jmp ret jle inc xchg cld je fmulp popf inc jb pop mov mov fstps je jnp inc and dec sbb sbb dec dec dec dec in cmp dec cld cld jae sub into jb repz or (bad) arpl inc shrl icebp mov add lock jmp adc enter movsl xor inc adc xor push daa lock sbb cmpl push fwait je test popa cmp psubb adc xchg in mov inc cmp outsl arpl leave adc push fldt and and enter rolb cmp pop (bad) and jmp mov fs repz ret test adc popf sub adc stos jo xchg fs sbb push push add cmpsl dec cwtl mov mov push mov js fsubs outsb pop jo add repz xor clc adc dec cld aas xchg call sub and subb ds loopne insl add loopne pop or or arpl sub mov add xchg cmp xchg mov cld sub push cmp push outsl mov inc insb add or jl pop pop popa xor mov or mov mov fbld data16 mov cmpl subb push or push xor adc fiadd mov lods rorl mov or push or push push pop pop pop pop pop ret mov pop push lock cmc rol fadds mov pop leave and adc rcrb mov push lcall (bad) mov leave mov inc adc mov inc mov add sub cmp jmp adc cmp and into xor sub loope inc push add cmpl lods mov jle in mov and (bad) jae ret xchg mov divb mov faddp dec dec test and xor pop add jb cmp std orb push stc cltd pushw mov mov rcrl rclb jecxz pop pop insl lds mov add cs rol std and and or and mov xlat movsl add shr push xor loop pop jae dec fwait sbb xor mov mov insl xor jo pop sub adc add xor push push test xchg mov cmc jmp (bad) enter roll movsb or adcb mov lret jl cmp insl mov sbbl icebp addl lcall xor fwait inc enter sub test addl lods jmp push ljmp adc pushf mov dec mov sbb sbb ret sub mov fisubr int add iret int3 xlat push popf enter mull add sub es pop jne popf jo adc nop jne push add lods popf inc bound mov test scas or data16 and lods mov das pusha xchg cmp adc inc xchg orb shrl push xor cmc push jb lea lea jb ja mov mov adcl pop or pop cmpl push arpl adc adc pop or int3 fdivr push repz mov pop or notl or mov xor movb mov mov mov xchg out (bad) cmpsl sar dec add mov pushf add test pop (bad) inc fisubr icebp mov popa pop xor push loop adc pop (bad) call pusha push add xchg int3 xor fldl mov or and test jecxz loope cmp or stos enter pop dec or add adc xor jne and sbb inc fiaddl into shrb pop fisubrl gs mull addr16 shrb (bad) mov and daa push fcoms add add outsb hlt test daa jg ljmp jge shlb outsl push add add and gs xor add jg jg outsb mov (bad) inc add push jbe jle sbb ss jg jg jo (bad) mov mov inc dec jb jg cmp lea xchg xorb out nop (bad) rol sub push mov sbb xchg repz das push mov sub maskmovq negl ret mov ja sub sub push and mov ret xor shr dec pop mov popf inc rorl cmp test or dec adc add shr pusha cmp add das not push xchg mov cmp movsl add rorl ret es xorl and pop mov bound inc push ret adc sub jl clc es inc mov jo and ljmp xor mov pop mov outsl mov and loopne ds or add xchg fldl jo repz adc sub add pop nop in dec xor je and mov mov cwtl dec sub jecxz add sub xchg fdivrl or dec xchg bound jae (bad) and ja xor sub mov in cmp sbb xor leave invd insl sbb mov pop xor push mov xchg push sub addr16 mov lea sbb fisttpll test ret jne aad sub push enter add add adc mov test ret push pop push (bad) stos and lods mov ficoml (bad) add push out movsb arpl and add outsb fldpi rclb pushf sub icebp mov mov jmp jnp repnz test xor dec adc pop fs cmpsl dec jne push fistpll lea xorl mov push push inc dec (bad) pop sbb fs adc leave pop aam rorl push push ret sar dec pop pop lods push push or popa out push test dec es popf inc fistl lcall add popf dec (bad) sbb cwtl push push ja gs dec push lods inc or dec sub cld push jbe pusha adc push mov (bad) jbe lods dec in push sbb adc inc in pusha add mov push or xor out rclb (bad) jo data16 mov (bad) call aaa movsb icebp jg inc repz add xor inc arpl sub inc inc mov lods aaa inc inc push mov out inc in push adc negb adc sub lret insl stos push jmp inc outsl das mov clc popf (bad) mov inc and pop pop adc adc fldt ja imul push mov xor add shr lret int dec pop push std adc lret push or pop negb push push loopne adc test movsb add mov lock ret sbb or outsl stos insb dec xor pop inc add add stos jns daa adc push dec pop dec mov dec and fcomi je mov and pusha adc add outsb rcrl push push xlat rorl add in cmp fisubr mov cmp inc jb sub pop mov or or or lea adc add test gs push sbb mov nop subl mov mov shll and sbb and sbb fcomip stc or sbb js mov iret dec xor dec xchg jb push mov (bad) xor or push sub mov adc mov add leave cld and std pop add lcall rcrl jno add mov dec outsb das pop (bad) sar in adc mov adc out neg std lods sbb mov jl jae push inc xchg push cltd or pmulhw es dec cltd mov lock mov gs pop lahf stos and decb (bad) and je in call test sub adc sub adc (bad) imul add add xor enter data16 test pop xor in dec xor scas lods mov push push xor cmp mov in mov add push (bad) mov mov add sar mov mov insb insl out hlt pop xchg push push sub not mov adc mov les mov pop jp imul pop ss or dec add mov push gs push pop jl or mov hlt in (bad) sbb sub add testb fildll fildll mov or (bad) (bad) je aad fwait sar add push leave pushf pop push add push and sub aas mov adc sub xor xchg add sbb xchg outsb enter es clc out jg push (bad) pop pop pushl cs sub xchg push je pop mov cmp xchg xor xchg ret inc stos jns je outsb adc cmpb int3 mov hlt andb gs insb ret mov outsl lods sub pop cmp jae mov sbb scas or xor add inc mov ja dec cmp jae lea dec or inc ja sub movb mov loopne incl mov rol add dec orl sbb insb in dec sti movsb incl mov outsl fsubrl jmp cmp outsb sbb xor inc nop cmp adc push out inc in enter push sub test xor ret inc mov add xchg dec mov xor inc fidivrl xor dec adc out jg jl push dec and pop scas lock call movsbl mov cs test inc mov fsubr inc ret (bad) xor inc mov ljmp mov xor mulb inc sub xchg rcll pusha pop fstps jnp jo stos aam push jae add xor sarb pop fadds jbe lods adc ljmp ljmp push jge std add dec xor jne mov jmp adc xchg adc xchg add pop out jno mov fnstcw adc sbb sub ret outsb stc arpl fiaddl mov sti in decb push lea push cmp adc pop hlt inc mov pusha adc and mov sub clc mov and divb imul mov lret push jmp cmp sub cmp inc or inc sbb (bad) je insb and or add cwtl jge loop adc mov (bad) sbb test gs pop and xchg insl pop lods jno and dec push loopne add cmpsl sub push xchg adc arpl test mov inc sbb test mov xchg adc pop or sub outsl loopne bound fmul mov push movzbl sbb cwtl add mov add sti clc push pop addb pop add add or orb xchg xor jmp adc jbe jmp adc mov pop jmp sbb and imul out jp and loop xor pop xor jne xor or add call mov mov fadd fidivr push add fs sub dec fist sbb sbb (bad) mov xchg clc inc mov mov xlat pop in push sub daa leave and ljmp cmp jb cmp ja add cmp or (bad) cmp sub shrl cmp inc push pop jb neg fisttpll and and pop add dec mov inc out or ret push lret or xchg mov pop xchg ss cmp and rcl aas cmpsb iret dec mov xchg loopne pop sub and cmp mov out and mov push jmp push mov mov and push jne dec inc pop pavgb aam cmp dec mov or xchg jle,pn rorl cmp add adc push jns (bad) jb and dec inc cmp push add imul sbb (bad) sub lds pop inc adc adc or mov addr16 sub or add call jb jo add xchg or leave sub cmp xchg mov lea mov sub or rorl cmpb pop jnp ret inc lcall add push push das or negb push icebp sahf pop or movsb ljmp pop add mov in sub sarl xchg push push inc xchg gs int3 clc push hlt dec insl fnstsw cmp sub inc mov lret lock add mov scas scas jne sub add push mov stc aad and outsb outsb leave or adcl cmovg inc or or dec leave adc pop ret mov fs mov sbb pop aad mov loop lcall ljmp cmp les cmp add xchg fldt or mov jne pop inc shr cmp pushl xor bound and insb outsl arpl je outsl outsb mov in clc sub or add xor outsb jne xchg mov jnp add add adc add add fcomps add sub cmp lods call xor push push push int out fisubl and add pusha push jo or mov pop add add mov inc outsl jb js je jb jae (bad) add mov outsl add add add imul jae fs pop sub and dec and jns xchg mov add pop das das adc iret je push pop inc inc insl fstpl insl ja pop bound jbe jb adc je outsl push imul xlat pop jo and and pop add jns fucomp into fsubrl jnp das imul inc jae pop xchg inc pop bound jne aaa popa adc xchg scas mov fdivs xchg ja pop xlat jge addr16 popa dec jne fs jnp,pn and mov or inc fs pop aaa popa frstor jne dec mov xor jne jnp sbb insb fsubs dec inc jecxz xchg insl insl cmp xor sub dec and jns in shrl or dec add inc gs bound dec outsl jbe imul xchg or je or jo adc jne inc (bad) dec fnsave cwtl dec sbb outsb enter ds jo imul bound jnp cmp outsb or push xlat mov inc inc aaa jns pop push mov lahf jne fisttpl pop or jae mov mov push gs push jne jae arpl jne inc cmp mov daa and add inc add mov xchg add xor or mov out jae gs stos je pop add mov jne inc inc inc decl mov add add or (bad) (bad) (bad) call adc sbb sbb push pop and and and es sub sub sub cs xor (bad) (bad) (bad) pushl xor cmp cmp ds inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push or push jno (bad) (bad) lcall pop pop pop pop pop pop pusha popa bound gs imul jo add sbb ja jns jnp jge jg arpl lahf sti test push push inc sub ss fisubrl sbb or inc dec pop add and addl and sti jo add aaa pop xor inc popa fs fs setne daa push shr imul imul sbb out xchg push add sbb adc inc sbb das cmpl repz xor sbb imul dec aaa test mov arpl arpl push insl sub jae mov rorb popa pop leave scas scas imul addr16 mov dec pop imul pop insb jp popf lahf lea push pop daa fs arpl divb jae insl stos pop stc fcoml jnp outsl jne jo push arpl sbb push insl fwait mov movaps mov fistp outsl mov mov push sbb and imul das add inc mov cmpl adc pop popa sub ret idivl xchg inc insb inc xchg xchg xchg fnsave dec or xor int jmp out or cmp mov pop dec outsl in mov mov test adc push xor test mov push xchg mull and jb popa insl lahf and (bad) cs (bad) fadds rcll xor cmp popa adc hlt push add mov loope and or leave adc inc movsl outsl xor jo push jbe jb jne movsb xchg je mov sbb sbb and arpl adc das mov arpl cmp outsb and out outsl insl jg inc mov iret outsl pop add mov push cmp dec add push mov adc inc aaa jge or insl in push push fldenv pop das jo popa add and gs arpl xor jo fidiv stc sub sub ret jmp and push add lahf and mov mov mov mov in aam xor and lret xor iret dec push xchg jno ud2 dec js js popf rcrl xchg adc xchg test or sahf cmp fadds pop fbstp or fmuls orb leave and adc loopne adcb sahf cmp cmp fsub sbb and jns leave and mov inc sbb lock xchg daa (bad) cmp pop fld1 and in nop js jns jp cld xchg sahf sub or sbb xor push sti adc lahf sub sub dec add or pop sarl jecxz add xor sbb pop addr16 jl cmp add in ss inc adc pop inc test insb push dec cmp movsb jmp cmp sbb sbb sbb nop add xchg xchg xchg add add cwtl je or push addb xchg mov or add add mov adcb sub cmp and mov push push mov sub mov or pop js pusha add fidivl add add sub dec add dec enter adc add adc orb (bad) add mov and sub add insb ret add add sbb add push fldcw incl adc test adc add mov das out flds insb notl add (bad) (bad) mov test mov nop xchg xchg xchg xchg xchg xchg (bad) (bad) (bad) call pushf popf sahf lahf mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov (bad) (bad) pushl mov rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) (bad) (bad) (bad) call fcomp fcmovu (bad) (bad) loopne loop in out call in out out lock repnz cmc (bad) mov push clc stc cli sti cld std (bad) ljmp mov dec push (bad) jg sbb mov pop jg outsl lds push jae jb bound arpl dec push cld outsb outsw jb popa ds sbb ss imul icebp notb addr16 outsl js push add jno pop imul dec inc adc lahf and inc outsl insl jo int iret outsb dec and dec stos imul and subl jge jns inc pusha arpl jo add inc gs fsubr pusha and jb jns adc fstps fsubrs and mov inc ja inc or leave fldenv je adcl xor fs pusha out outsb iret psraw arpl mov add sub jne imul pusha and jg mov fldcw fs insl sub gs and add imul imul pusha gs fwait lea xchg bswap push notb es mov push fmuls popa lea fimull add sub (bad) or pop arpl hlt pminub pop leave fsubrl cmovno outsb gs mov jo (bad) fsubl xchg dec xchg dec and push push push mov jnp dec add jns rorb push cwtl push fs sbb mov hlt arpl and daa ds aas test xchg mov imul je xchg adc or mov and add sbb push mov test popa jne je jg aaa popa mov mov push push add mov inc mov pop pop je outsl inc sbb mov or outsl lcall cmp cmp jl (bad) jne das add xlat cmp add sub idivb rcrb add add sub or fdivl fnsave sub div es dec cmpsl cmpsl and cmp mov jg lret daa pop pop jne loope push outsb pop jns or imul jnp outsl jmp fisubrl push out sbb data16 imul and push arpl int push ds jg sub lock clc in loopne xor rcl enter jmp xchg (bad) or adc xor (bad) xor insb pusha pop pop (bad) xor rcll dec inc dec (bad) xor inc cmp xor sub dec (bad) xor and sbb (bad) xor rcll or add imul cmpsb imul cmpsb imul inc and in loopne dec (bad) xor mov or in cld in enter cmpsb imul jmp les dec pusha xor ljmp cmpsb jmp insb pop add mov push add dec outsb push loop dec push push outsl imul inc or pop mov mov enter push dec push sub sbb daa mov fwait ss inc mov or (bad) push out scas je inc js movhps mov sbb icebp xorl fwait divl lahf mov sub mov inc push jb push imul je (bad) adc fs inc mov (bad) fucomi imulb jae sub movsl das mov insb push push or jo push fdivl push das mov jnp stos dec cmp je mov xchg push jns je imul shrb jnp inc ret jo aaa mov push rolb pusha ret pop add add mov adc loope mov push int push dec inc std fs dec xorb and das push push je jae adc ret mov ret or xchg iret mov aaa mov shrl and psubsw in mov xor dec add push shll push and push inc inc lods sbb (bad) clc inc xchg stc insb push ret ljmp push sub cmp stc add jg lcall aaa cmpsb imul xchg lcall push pop or cmpsb imul cmpsb imul imul and sbb sbb lcall and and lcall imul inc lcall or jp add aad jg xor xor sub sahf lods (bad) imulb cmp dec push dec inc and adc push jmp jae dec jge aam mov jg and sub sbb cmp int fs sbb jecxz scas inc inc push jae and dec loopne outsb and pop cmp and xor sar sbb and and mov jbe dec cs sbb add and ret insb or push inc mov fwait push inc mov fnstcw add ja,pn bound arpl cmpsl adc pop jle add jnp loop mov bound lret pop and rclb pop fs inc fisttp dec push pop mov out fwait fs inc push inc jo dec dec pop dec (bad) pusha (bad) push push mov int mov fs push inc add imul jae sub fmull negl xor pop mov dec inc push push inc push inc pop or fimull or inc and shll push sbb dec adc lods pusha push xchg pop and push mov mov jae dec inc xchg push dec cld aaa shll pop jbe pop inc cmp cli fidivl push das push cmp jp (bad) (bad) popa jns imul (bad) xor pop cmpsl xchg fsts inc addr16 movsl jle data16 je and jbe jl sub jo cmp das loope std or push dec dec inc adc xor and jae insl out (bad) mov xchg ret jle cmc or dec popa xor push sbb xor xorl rclb mov add mov sti (bad) mull roll shr and add daa inc mov sbb jbe in add or sbb mulb adc mov dec mov add in (bad) adc jae push and inc cs mov mov testb pop je,pn leave mov xor stc fs pop sbb sub cmp addr16 sub or dec ret pop leave pusha sbb adc (bad) popf nop mov inc add (bad) mulb cmp aas and and cmp pop fcomps or mov sub pop fisttpll in sbb jmp inc jb push (bad) jo pop popa das jecxz adc jno inc jbe pop and adc xchg inc mov push mov (bad) or cmp into pop leave mov inc popf adc test lods pushf inc enter jb popa scas popf mov cmc and addr16 or push or mov loop (bad) call fldl sahf or inc inc fsts stos test dec sbb lock mov mov (bad) (bad) jl ss mov xor rcrl add xorl add fmuls sbb push cmp sarl out fsubs fistp pop and xor push xor pop push pop push pop pop dec aaa fsubs insb pop insl stos and or xor jb das orb pusha mov pop (bad) pop xorl sub mov pusha orl test xor mov adc and inc xor sub add aam sbb xchg test add add or (bad) and stc leave mov cld inc jle test into push and cmp mov mov inc sub ljmp pop iret mov in call fucom jle (bad) push add pop pop fisubrl xor in push rcr fsubp stc cmp jle cmpsb sti je inc aad add enter cmpsb imul cmpsb jmp mov xorb lcall imul imul cmpsb sbb add or cld hlt (bad) xor shr fnop aam mov test add add mov cwtl nop mov (bad) jo push inc sub imul hlt in in cmpsb imul cmpsb imul jo pop dec add xchg cmpsb imul in xor rcr aam cwtl test dec adc mov xchg cmpxchg push jecxz out jmp push ret jmp in jbe fucom adc pop add ret or pop xor adc test pop imul sbb nop inc mov rcrl lods movsb sti pop pop xchg popf (bad) das dec dec push sub cs sub sub popa dec pop das fs (bad) leave mov stos jecxz in and pop bswap push add xchg addl inc inc adc test inc pop (bad) fdivr loopne adc dec inc sbb pusha jae adc es enter add push add or (bad) sti pop push pop pop add or or or or or sbb prefetchw or jbe fidiv or pop add xor pop adc arpl xchg adc add inc pop push pop or (bad) insl cs mov je lods add mov add add push adc pop and xor std decl and rcll bound cmp int bound fcoml push sbb xor cld mov xor inc or ret mov xor dec pusha dec fmul add xlat adc addl or lcall and and push adc pop popa jno and adc sti insl stc lret xchg mov lock loope icebp fidivl fadds or xlat fiaddl or mov cmpsl and mov addb add adc add orl orb push add nop inc add add xorl adc add nop push add inc inc add add add fs adc nop push add add orl orb adc adc nop push add add orl orb push add nop inc add add xorl adc add nop push add inc inc add add add fs adc nop push add add orl orb adc adc nop push add add orl orb push add nop inc add add xorl adc add nop push add inc inc add add add fs adc nop push add add orl orb adc adc nop push add add orl orb push add nop inc add add xorl adc add nop push add inc inc add add add fs adc nop push add add orl orb adc adc adcb ljmp add push add nop add pushf add add (bad) (bad) mov ja call push add dec std (bad) (bad) jg push jb addr16 insl and outsb outsb outsl je bound jb outsb and pusha (bad) mov and fs and sbb pusha ja,pt out (bad) mov add jo inc popa pop jnp faddl mov outsb fldl inc in sub inc cmp fadds in aaa ljmp imul in aas in fisttpl inc mov push adc add and add or scas jmp nop lock sbb add pop add add sub inc or cmp push clc add movsb and mov dec loopne or pushf add jae repnz xchg cmp xor pusha add inc cmp mulb xor popa mov inc jb,pn jb add dec fxch add rcrb push test xor xor jmp or or and jecxz push add jp es enter mov addb add icebp jl mov sti call dec push push jne add or mov insb add adc cmp incl push push cmp mov pop push call jmp lea sti sti decl xchg or mov cmp je add adc jecxz adc and xor push sbb push jno sti (bad) movsb mov add daa inc add (bad) (bad) (bad) (bad) call adc add cmp mov xor or adc or inc add in js lea adc mov jge jne adc jo (bad) (bad) mov addr16 data16 (bad) (bad) mov jle push add inc mov idiv jg test ds sub and orl (bad) mov sbb mov imul popl sbb (bad) (bad) (bad) (bad) add mov mov mov sbb fs and push inc sub pop loope fcmovnbe fidivl mov (bad) cmp (bad) sti cmp idiv incl pop out pop and sub xor xor add sbb js mov inc pusha and or sahf and fadds ret sbb xchg (bad) (bad) pushl xchg mov add push xchg jno xlat jo test jmp sbb adc loope ret push pop je and decl fidiv push std push add cltd push mov (bad) sbb (bad) lock push push or xor push sti (bad) (bad) call xor arpl jae mov push push jnp sub xchg je or adc add hlt (bad) (bad) (bad) jg adc out mov and cwtl or and aaa jbe or push and sbb test call sub outsb add mov int3 add push cld jg (bad) pop scas sub in (bad) roll pop push cli and add mov aad pop aas insb mov push sub pop xor test cli fwait out jg jg lcall sbb push mov rorl sarb decb (bad) push pop test jg and pusha sub fsubr xchg push push loopne pop mov fwait mov xchg (bad) mov in cld inc test clc lcall out popf (bad) in push mov adc push mov les dec ja (bad) ret aas jecxz rep fildl add xor sti incl int shrd sub ja adc movl (bad) fistpll mov or add pop jbe sbb outsl or or loop (bad) mov push ja (bad) jg or add push lock add add call or push lea cmpsb in fcomi xor ljmp xor arpl push sbb sbb decl adc (bad) xor pop in push adc push push lahf (bad) mov movsl in add js adc jb sbb fs xor test cmp clc cmp pop jle or test divl push push inc push (bad) (bad) outsb mov push adc rolb jg push (bad) out inc pop mov add insb push push inc mov pushl mov fild in outsl pop adc dec pop daa out js insl test ljmp dec xchg xor lock sub push js sbb (bad) (bad) cmp fldl2t add push loop xor clc fnsave adc and lods ret insb push push daa push cld mov fdivl pop pop mov ret dec sti pushl cld sbb push sub fwait cmp nop and (bad) xor mov dec int3 inc sub outsl iret mov push lods sti inc outsl sub fucomip xchg mov js (bad) push sar (bad) (bad) jg mov jmp pop cmp ret in call push pop xor int sub jg loope jge lea pop test es (bad) inc rolb pop insb addr16 cmp pop push inc adc in das fcompl cld icebp mov mov hlt push out lret or add xor aam xchg out or fbstp adc inc neg xorl out hlt pop cmp ljmp and xchg adc sbb andl pusha sbb std sbb aaa sub lea jp dec (bad) aas add or ljmp fucomi shr push adc xchg fdivr std and pop pop bound neg outsl insl and loope sbb les mov in (bad) or (bad) sbb daa xchg xor aaa (bad) lcall stos or xchg ljmp jl pusha sar (bad) (bad) enter sbb fxch or (bad) into repz pop notb pop rcrb mov (bad) fucomip adc rcr mov out mov ss push das icebp outsl lods mov aaa cmp or mov (bad) in fdivrs scas fwait push (bad) mov xor push xor lods push outsb notb push (bad) clc ret adc cmp pop shll mov jge out sub jg mov jnp push mov add cwtl mov outsl std call mov (bad) ds mov test add sar addl pop jnp outsl cmp cmpb jno push xchg adc ret sti sti ds aad push adc jae sbb push fnop in pushl imul stc in sbb sbb push imul sbb push out mov test or jg mov push jno adc inc adc mov into ds xchg jle mov dec (bad) dec in lea sbb fimull pop pop cmp in jmp cmp in xchg in cmc cmp mov loopne outsl pop dec mov popf sbb jmp idiv mov pop add arpl jge push inc inc movsl scas mov jbe sub push xchg sarb dec adc pop push pop jge dec xorl aaa clc ret push adc mov je sbb cmc mov ljmp xchg jnp out shrb jne mov cmp je xchg test jp imul popf sahf push adc fsubr or or (bad) (bad) (bad) jp push and mov mov lea mov (bad) fwait cmp cld outsb out mov incl mov add rcr test test (bad) (bad) loope ret fistp ja or idiv jo addr16 and push push les mov popf fsub xchg cwtl and (bad) sarl xlat xor sbb js or leave in xor fisttpl in or mov mov adc jecxz xor jg les cli jg mov pop fdivrs pop cmp jg hlt or pop out fs arpl or sbb mov in mov jle addl fwait in imul fiadd orl lret adcb xor xor ljmp std xchg ja bound xor enter add out data16 in in push push ds cmpsb neg jnp lock mov testb mov ret jo (bad) dec mov fildll pop mov loopne lret cmp mov cmp or (bad) (bad) pushl cmpsl test fstl std mov jnp jnp mov aad lea push xchg adc (bad) call (bad) adc daa or sub das pop jnp lret cmp call das das pop dec fdivl lahf fwait dec jb adc cmp jg mov out mov std jne repz xchg in aaa lock jl or cmp in outsb cli mov add pop (bad) (bad) inc push imul decb and jmp push and (bad) mov decb mov fwait and pop or pop (bad) fistpll sti aam out or extrq sbb or push fsub (bad) lcall ds dec or adc jge insl sub std mov jns pop bound (bad) iret shr jle ljmp pushf jne add testb sub lods insl sbb push jne shr (bad) cld jl jbe (bad) xchg push in dec cmp push fcmovnu add inc nop cmpsl je push ret jmp lods add mov pushl adc adcl clc rclb add jmp mov add (bad) (bad) aam inc je push fstl sbb adc cmpb je incb mov jmp adc xor jne push push es decb pop in jle nop pop std inc hlt sbbl mov mov mov sbb mov jbe mov (bad) mov mov mov lock cmp or add mov subb in sub pushf sti call dec push adc (bad) incl inc out insl test cs (bad) ljmp imul and push call das sti jmp popa dec mov lods lds aad mov dec xchg fimul push call sub aas or jg mov sbb pushl or and dec mov sti insl pop mov loope fildll or add mov jne add mov mov vmread and out xor xchg (bad) pushl pushf inc mov pushf cmp jo dec ss cmp push mov std mov sub mov pushf pop add dec add pusha fidivr sub inc pushf and and sub out fistpll and insl roll dec ficompl jle pushf push mov (bad) incl add setl fwait inc adc sub add iret rcr push fisubrl xor ret jge nop add fmull (bad) (bad) pop push xor mov jecxz inc mov popa pushl mov test nop sar (bad) jg mov jne and sub add pusha mov loope lock aaa pushf ret pop mov arpl or movsb in aaa mov jp sbb adc lods mov fwait or mov stos xor add dec mov pop pusha lods sbbl cli pop or mov (bad) add popa mov (bad) pusha inc add cmp push outsl pop push leave bound or inc incl xchg shrb into jle cmp jbe mov xor lcall adc in cmp push or clc pop pusha insb mov pop xor adc in arpl mov xchg fnstenv inc cwtl in (bad) popf aad push mov or mov aas nop push sbb cs ffreep aad clc outsl jl dec lcall (bad) add lahf xchg je (bad) std cmpsb mov fcompl fldt in mov imul xchg aas adc cmp or cmp loopne loopne inc enter insl popa sub (bad) cmp inc mov pop jl fist xor inc sub push mov lret push or std das icebp or sub sbb and cmpsb pop and fs loop insb lea in and in out (bad) xchg clc je xchg jae pop loope jnp cmp faddl and (bad) mov cmp shll je cmp adc add mov xchg loopne dec adc jp sub inc mov adc cmp (bad) jg mov or and je mov lods adc jne jne mov mov fiadd rorb xchg bound mov (bad) decl out sbb add jae jae popa push nop cli mov mov test xchg sbb and pop clc lcall arpl add sti enter sbb popa mov fdivl not and test push fimul sub jg aaa test dec push adc je or jo cld call pusha movsb and lods jmp cmp dec loopne das cld outsl das sbb iret hlt cwtl cmp fs popf jnp aad dec loope fistpll mov rorl xchg jbe adc pusha jae fcoms (bad) (bad) mov lods imul lods push push dec pop rclb test (bad) gs pop or and clc (bad) mov lcall inc sbb fsubrp clc popa lock (bad) mov or mov mov adc or dec pop daa cmp cs mov aad push ljmp in sub stos jg aam pop mov js sahf insb jbe or xchg sbb addr16 inc and or sbb in mov pop inc jns jmp add xor cmp ret mov or dec hlt xchg xchg (bad) aaa clc jg cltd or dec test push test or mov aam cmovl pop or scas mov ja or das hlt or je push roll (bad) mov or (bad) inc fildll and push or inc and jmp call jo pop mov xchg xor mov jge mov aam (bad) hlt sbb lret (bad) or or cmp into push mov pop sbb push push cld add repnz and adc add popa push mov jmp pop (bad) std pop cmp addr16 pop cmpsb (bad) fsubrp pop je inc test sar add or jg xchg (bad) cmp sbb and adc aaa fsubrs cmc push rol jo and out inc adc aaa (bad) faddp lcall icebp add clc dec lods sbb enter mov jnp frstor add fldt jg cmp jb push jb mov pushl and mov loop aaa divb mov or sub and cld or inc pop mov subl shrb loope (bad) in aaa loopne add fnstenv loop sbb and mov mov icebp (bad) inc pop jb neg and push js loopne cmpsl inc sub sbb aas sbb andl andl mov pop mov addr16 (bad) (bad) decl push add cmpsb aad push add stos aas fcmovne js pop das cmp and add ljmp mov pop inc and adc cld mov lahf jp xor push test xor inc out ret sarl imul or cmpsl sar mov jp idivl jle add or push int jp xchg mov and add or js add or add pusha jp adc cld fs sti jg ljmp les push js mov les (bad) fdiv (bad) lahf jns xorl push add mov xor adc add mov add pushf mov ja bound add xchg mov add xchg pop pop push add inc mov nop je cmpl stos mov push push pop xor mov pusha fs add subb sarb xor xor mov and mov cld inc (bad) stc faddp sbb push jnp adc (bad) mov repz adcb mov dec xor sbb je clc add xor xor mov add mov inc clc out add or icebp lcall sub cltd inc orl add xchg cmp jmp pop pop leave dec jmp push xor xchg outsb mov (bad) and mov jle (bad) jp clc add jecxz or inc pop lea enter (bad) loop jle jns daa add pop xchg ljmp pop pop ret inc cmp (bad) ljmp fwait cmp incl les sbb jg fs shrb (bad) cld fisttp push gs pop xor ljmp sahf sbbb push or fldpi xor mov pop cli adc ds mov aas push lods cmp pop jg gs clc inc xchg insl sti iret test adc mov mov incb mov out cmp mov mov outsl decl sti out xor cs addb xchg call movsb fstpl push add in aaa inc jae add outsl dec rorl out or add addr16 aaa push or adc (bad) mov sbbb xor aas mov sub mov pop cmp into sbb jno and pusha outsb jl (bad) decl hlt test xor out push jbe add add enter xor mov push sbb lods add dec sbb cmp jge test mov popf jae ret pop std (bad) call jmp mov fnstsw leave jne lret (bad) je cmp clc test mov sub (bad) fildll sub cltd jnp and or or loope pusha jmp testb inc or mov inc mov fist stc xor cmp adc mov mov push add inc adc add or jecxz int3 andl sahf test lock stos jmp fcoml or adc loopne or pop fnclex xchg loop scas (bad) jg stos add mov int3 or sub inc loop or push mov outsl sbb pop sub jno inc sysexit inc in pop jno aas add fnop bound xor aas sub inc cld or (bad) pusha outsl add ds adc jne test mov push inc in jo dec mov mov mov (bad) push add in dec test mov mov inc jmp sbb in test pushf mov (bad) call push dec and pop das jl push push fadds and and outsb cld push mov inc pusha in mov xchg rorl mov ret jns cli imul add in ffree movsb mov mov inc mov add mov cli mov movl fsubrs lds jecxz (bad) in movsb mov pop jo xchg (bad) mov mov pop iret sbbb sub cmpsb mov dec push push sub outsl jae lea mov loop adc adc sbb ja (bad) or sub adc sub pop (bad) xor incl inc jl test incb cmpsl dec daa jmp out je fisttpll adc xchg hlt testb dec ds push cmp sub mov (bad) ffree mov aas divl xchg cmpsl mov mov insb inc mov aaa jge or ljmp (bad) jg dec incl sbbb adc or icebp (bad) mov loope adc call mov aaa std add ja jle outsl arpl xchg xchg dec or add sub rorb aaa std ljmp aaa aam inc rorb popl push movq dec dec add loop std out cmc pop nop addb sub sub hlt ja or add rcrb add inc inc cld addr16 inc and (bad) lods push push mov inc lahf adc cltd out or and sub add pusha mov subb fs fwait loop decb jmp ret ficomp or cld outsl in jle nop mov xchg dec and pop inc pushf fcomps ret and ja das cs add call jb fbstp outsl cmp ret orl insl mov jle push or mov mov add jl cli test push lods decb test sub ljmp and inc pop and decl cmp lds push test (bad) jg add xor outsl add jg push insb addb xor js stc push sbbb mov testb outsl pushf push add (bad) pop sub jge add fsubl or cmpsl pop push mov mov mov cmp lahf mov mov nop push or cmp adc jge add inc add outsl hlt inc les cli or (bad) aas mov xchg andl std (bad) aaa clc mov pop pusha fcoms movb ds and and test enter inc mov jl sub (bad) xlat icebp pop pop push or fnstsw inc adc pop fdivrl out cld ljmp jb pushl (bad) repz add ja add mov mov cld and out clc mov ficompl push push pop lret sti aas dec mov mov inc mov subl mov cmpsl sti js movl pop call push inc ljmp inc adc ss sub sub add fisttpl pop int3 rclb xor decl push addr16 jmp es lret incl xchg push mov dec js addl out jnp loopne mov cmpsb imul mov pop std jnp add daa stc sbb sbb push idivl orb xor or ss cmp fs leave sbb or loopne,pn inc cmpl mov (bad) lds cmpl std fild adc pop mov inc cld push std lahf jmp int3 rcrb mov rcll decl test mov and das mov and clc stos xchg mov jl push inc cld out lcall adc jg out xor xor pushl lock jg jnp xor lds adc sub add cmp movsl xchg inc xor aas sub fucomp pop cmp add xor addb in (bad) mov adc and push dec xor sbb decl andl (bad) mov movsl (bad) mov aas dec sbb lahf dec ret fstpt in subl fnstcw enter jg pop push faddl (bad) sbb popa push adc or cmp icebp lahf clc fbld aas movsl es mov xor je pop jne fstpl gs push sub pop aaa xchg xorl test mov sbb iret (bad) mov mov aaa incb push add add adc mov pop rcl fistpll xchg (bad) (bad) insb sub xchg cmp mov js shrb sti outsl cmp ret mov test pop bound or push inc insb lret icebp pop cmpb add cld scas jle adc push test mov or sub dec and cmp stos stos mov into mov std add sub mov and adc adc cmp xor or in sbb idivb cld or dec fcom cmp jbe cmc or hlt test fwait push adc adc hlt mov cld add adc mov movb xor add cmc outsb xor sub (bad) or mov sub mov cli daa xor push jnp sbb idivb push ffreep push jecxz inc fimull and push push mov cmp mov adc xchg and cmp and (bad) sti jo aaa mov sti add push (bad) cmp (bad) add push (bad) jmp inc add and bound mov fucomip mov mov adc test lods lahf xlat fsubr mov js mov or add inc add add insl cld icebp lcall push in mov in push call push add add mov decl test (bad) xchg mov add sub incb push dec and xchg mov pop add xchg sub lcall (bad) push pop adc or gs cltd pop sub jmp sbb pop in sub xor lds cld out arpl mov imul ja icebp outsl or dec loop cmpl jo mov (bad) aaa mov (bad) push xor pushf push lods inc fcompl pop (bad) ja lret inc sub cmp adc data16 jg out fs add insb add in push lock inc lds (bad) push jmp dec (bad) mov in mov xchg add mov add adc incb sub lret jmp sti mov add adc lahf add test loop lock cmp xor xchg pop cld jg xor and stos or mov orl dec (bad) sub sbb loopne jo dec sbb icebp call sarl outsl jmp lock jg push push inc (bad) or or dec addr16 mov push int cltd sub int add sbb aaa sub jp add decl jg rolb mov ja dec incl xor push ret mov rcrb lea fwait cli ja roll adc pushl cmp inc fucom stc incl add jmp mov jmp js pop xor pushl orl or lods or adcb mov mov out jge add jb cmp movl lods fcomip sub sbb jns test incl and mov mov test and cmpb test (bad) fisttpl movsl lds push push clts push inc mov mov push add xor cmpsl out stos stos cmpsb cmp fistpll mov (bad) adc jge jnp out ja mov (bad) (bad) jbe fmull int3 xchg inc mov into or push inc adc xchg mov pop and and mov adc lcall lds cltd fpatan pop push add jl add (bad) out (bad) outsl cmc sub aas xor test ss cmpsl lods or push (bad) jg andps subb sub xchg fsubr call add fistl or or rorb ficompl lea lock mov pop or cmp (bad) fdivrp jg movsl xchg cli (bad) or jmp sbb add loopne (bad) ljmp jmp pop or sbb sbb out sahf clc xchg call (bad) outsl inc inc add adc addr16 cmp mov jmp lods push jmp jmp (bad) push xor mov out ds cmc pop push push daa adc cmp test push mov adc mov punpckhbw ja pop xchg mov adc inc adc hlt xchg mov sbb or add add aas or sbb mov mov (bad) call lods lcall std fwait call movb ljmp ret jmp inc sbb or imul fist jg movl jp aaa aaa clc outsl icebp mov test mov dec mov das hlt rcrb ret push loope xchg push add dec mov and popa mov add scas cli mov cli push ljmp push addr16 rcr push loope or ret ljmp das cld add ficom sbb fimul scas or fcmovnb dec (bad) mov leave lret es dec push imul lock inc mov out repz xchg decl sti inc push lds adc cwtl mov push add xor loop dec and jle aas jge cmp pop mov push int3 push call stos stc cmp outsb dec push cli outsl cld inc rorl jbe xor and test add xor mov pop mov mov bound dec test fisub adc adc mov mov data16 call jg push out test lret and cmp xchg js fistpl mov fdivs add (bad) fucomip (bad) cmp jnp ljmp sub or es inc mov push mov push inc adc repz rcr clc cwtl jmp xor mov aad mov xor sbb mov (bad) dec and jge outsl cli or push stos stos mov fstpt mov or pop jb leave sahf dec add inc mov cli or pop in fist and adc nop push add xchg (bad) ljmp xchg add (bad) fistp inc and mov sbb and mov or dec (bad) jnp pop in xchg sub cmp sub ds xor add (bad) clc ljmp ret mov xchg test xor add repz icebp or mov cmpsl andl inc dec or test pop or and es xor outsb lock ljmp jge stc cld out outsb pop mov aam mov mov mov andb push cld add popf enter mov lods mov aas adc jmp sbb aaa (bad) outsl loope adc cwtl add std mov push push xchg inc mov scas adc scas pop int inc jl rcrb fdivrl xchg (bad) (bad) jne sbb adc push (bad) popf or jne add clc movsl lcall adc xchg (bad) testb pushl inc outsb jne fbstp movb add and data16 inc int3 fdivrs add cli imul dec cltd push jbe mov (bad) call nop loope mov xlat movsb adc push dec or out adc jg xor push cld ja ficoml les add jg aas and mov dec sbb pop orb cmpsb cli scas pop or or fisttp in outsb mov daa push pop push decl jmp inc add (bad) (bad) (bad) mov inc pop call or xchg dec add xchg jl and jb jg inc daa rcr push push fsubrs aas jp aas sub les add jle pop or mov adc aad push aaa fild cld push jbe adc mov pop out or mov pop popa aaa mov cmp iret jo inc inc cld or pushf mov loop std cmp push mov add mov and sahf push pop sahf mov test fwait movsb sub inc fistl inc sub repnz push add (bad) je loop dec push add mov (bad) mov out addr16 add (bad) roll bound (bad) outsl mov add mov cld xchg stos inc or std fs clc inc or (bad) movsl cld mov mov (bad) (bad) ljmp insl mov and fsts jl ficomp test push mov lahf push add fcoml sbb mul add mov les movsb fwait (bad) mov sbb mov jo dec mov sbb mov mov cld and nop pop jge lcall cmp aaa cmc inc inc xor or (bad) push or enter jle and fiadd adc dec mov nop fwait dec out add jg mov and jle and outsl lods icebp (bad) (bad) mov subl and (bad) negb mov xchg jbe mov inc inc cld xchg mov lods sbb jg pop mov jl pop aaa out fsubs dec les sbb in cmp sub xor add inc into cmc add je add (bad) (bad) fnstenv dec xlat add mov push xchg dec bound icebp cmp mov repnz lcall adc push out out imul pop push add hlt jae hlt mov jg enter enter lock jno adc mov add in cmp add cmpsb jg lahf cs mov adc push pop mov loope daa inc jp (bad) jg jg sbb pop mov aam jno jno enter scas cmp sub pop out push add jle add push pop mov std dec push ljmp push and les mov xor movb xor pop cmc add addl add pop pop cld or inc scas and xor icebp js ss in movsb out adcb add jbe adc dec cmpsl inc inc cld and sbb cmp movsl or cld lods and add movsl or cld pop adc fwait mov test push push push sbb test mov (bad) xor add or loop push cld daa add outsl icebp xor add sub in clc sub cmpb adc and mov in clc frstor xchg loopne dec das ds ror or call and fistpll sbb sub mov push mov dec or subl outsl cmpb add jmp fs loop decl and scas sbb in inc add push jge test add fimull outsb fmull add add emms mov and outsb mov add pop (bad) lock fcos mov bound pushl pop xor (bad) xor (bad) pop xchg lea incb icebp insl popl pop das xor push push and xchg aas fisttp mov jne fcoms test jmp push pop adc ret (bad) mov cmc imul arpl jbe jo inc mov jg pop outsl pop (bad) std push out cmp adc mov cs ss mov (bad) ds movb pop addl sahf add pop pop push add idivb (bad) (bad) jg jae inc sub pop dec es addr16 push setg mov clc mov inc sbb (bad) and xor or pop sar pop jge fdivs pop jl jae xor mov cmp (bad) ljmp jg mov lret push mov mov rorl (bad) lcall mov adc dec push mov sub sub fbstp or mov inc mov movl ss pushl fmull call (bad) jb inc mov fldenv dec hlt and or js sbb lds mov adcb imul fild pop or daa adc adc mov sbb call inc aas mov adc dec (bad) (bad) jg xor pop or dec inc adc or jno cmp pushl mov or subl std movsb and jbe std cs test lcall mov sbb push das and enter mov out aam mov popl cmovnp out mov add xchg mov int (bad) fadds adc sbbb sbb mov outsl jmp cmp mov adc and push inc adc inc dec inc push fs dec rcr sbb dec mov jbe std aam leave cmp inc cmc pop pop cli add imul cmc hlt sbb adc push sbb mov pop lcall cld arpl cmpb pop cmc and into mov ljmp fiadd mov adc inc pop cli add dec ds rcr cli aaa adc add push insb cmp jle mov cmp xorb scas call (bad) std pushl pop mov adc popa xor ja or stos add and jne jmp sti (bad) adc and inc fwait jle int3 negl mov mov es cmc aas sbb int3 fs jno adc addb lret add ret in aad jnp in call rorl insl jbe gs cli ja jnp andl add sub and jle or mov icebp pop adc call (bad) lcall mov fcomps test pop or test ja add (bad) mov (bad) stc jg add ja mov js xchg clc lds aas sub adc pop or sahf mov cmp and pop inc in popf sti and adc pop aaa jne outsl (bad) lcall adc call shl rcrl xor int loop call pop or test pop icebp inc (bad) std lea sub mov cld mov add adc sbb sbb outsl and pop adc out add or (bad) aas and pop ret push cltd ja push pop adc scas mov inc adc push adc les push add enter sub enter icebp decl jno loope push and jg popa decl add rolb pusha js cmp std xor mov fcomps pop in add mov in adc inc jg sbb or test cld ret xchg test inc fcomps xor cmp and incb sbb test decl and ja xlat or (bad) jne outsl add rclb (bad) mov aaa push dec pop (bad) mov or lds dec fisttp or nop pop push das stc decl (bad) out ss dec (bad) dec push sbb mov or push test icebp ret int int3 out aam addr16 les and mov cmpsb nop and jmp mov adc div outsl lock pushl inc dec pusha dec sub pop xor dec lret dec mov mov jle add pop call mov hlt hlt clc ret lcall or hlt sbb mov xor add out dec or and add icebp or xor fcoms mov adc pop push sbb jle xchg mov movsl jmp sub add test dec pushf cmp decl imul cmp stc sub and dec mov pop dec leave or mov daa imul decl fadd adc pop dec mov cltd jle adc adc mov test cwtl jae int add pop mov and mov mov adc ret (bad) xlat pop pusha add js xor fidivr jo sbb pop sbb rcll rcll adc (bad) (bad) (bad) out or or fwait insl rcrb mov xchg fsubs jae pop hlt fnop dec add aaa jae cwtl adc mov mov clc dec mov adc and andl push dec mov mov dec icebp adc dec imul jbe test dec decl pop mov cmpsl js xadd inc aaa adc push rcll mov or sar cli add xor (bad) jmp cmpsl test nopl add stos scas mov (bad) (bad) adc xor nop lcall call mov std (bad) xchg je mov or add sbb icebp push dec sub sub sti push push call pop pop mov pop and hlt mov dec stc daa iret xlat or sbb push pop aam (bad) in lcall test ja in loopne push (bad) xor (bad) mov add or pop rclb decb lret push ljmp cmp add add ret aad push aad pop mov pop push je (bad) lret call add dec add je xchg sbb pop outsb mov add adc sbb mov pop fnsave loopne in mov mov rcrl and xchg mov mov daa jmp cmpb (bad) movsl sub ljmp ja add jmp add push (bad) in pop inc cwtl int inc or or pushl cmpb adc int3 inc cmp jge jg sar movsl xor xchg add (bad) rolb or sub aas pusha add es test dec aam mov and cli out sub or fildll dec sbb rolb das lock pusha and mov sti mov inc jg clc push (bad) or int3 stos sub xor push cli fisttpll inc xor pop negb sbb add pushl cld popf pop roll mov jmp xchg dec popf sbb rorl popa xor adc inc jl push push or lds mov sub outsl adc mov push in incb push jae jl jo clc std decl or mov push sbbb orl mov enter adc aaa cs dec mov nop cld addb (bad) sti or dec adc xchg fwait or es xor add add outsl dec je incl mov xorl (bad) mov dec icebp and cld (bad) ljmp adc repz and inc push pusha jo cmp rorb sar xchg or sahf aas out ljmp roll sbb inc xchg sub xor xchg out lret mov arpl cmp dec pop mov add push sub add sti push xchg adc add cld sub xor adc mov rclb (bad) ds sbb sub fstps (bad) (bad) (bad) (bad) outsl push add outsl push outsl pop fsubrs pop fisttpl jg jg outsl data16 mov push (bad) ljmp outsl jbe jle and cmp fwait int outsl jecxz out sub mov in add and inc mov mov incl dec pop inc lods lds add or icebp push mov lods scas pop faddl or sbb lods inc ds fistpll add scas and jg push mov inc xchg ds inc dec xor add cli jmp outsl sbb mov and test sub xlat ljmp popa sub incl scas xor add in mov es mov push add mov sbbl scas daa sub push fsubrs fcom dec fnstsw adc push jne sub testb daa mov inc jb add outsb das hlt pop ja fldl or inc lock pop push or mov shlb sbb lcallw pop pop enter sti mov mov mov add leave pop or pushl sti jg (bad) xor int add (bad) mov pop push enter dec clc xor or cmp ret adc mov (bad) fmulp ret testl fildl movsl xlat sbbb mov in sarl pushl je mov or cld jo inc icebp and loop lods loopne sub adc arpl mov insl sub imul xchg popf sub lock adc xchg lea data16 loopne pop sbb sbb arpl or and jae inc push cmp sub insl mov test bound and fistp sub add cmp hlt sahf sub add cmp mov mov mov jle lcall and mov mov adc sar leave jno popa sti pop push mov pop iret lea xchg sahf add (bad) jmp inc loopne push jae bound in pushl mov fistp add pusha jl pop mov mov adc ja and sub mulb ror pop decl les stos lods test aaa cld ljmp daa pop pop in or mov sbb les pop loopne push ljmp or ret les add and and adc daa add xchg adc ficom cmp mov or or or cmp out pop out (bad) jg sti out xor adc lahf int jge movsb mov pop into adc jbe (bad) mov sub mov add mov cmp add mov and flds adc mov add inc mov (bad) ja add jb movsb adc inc or sub bound lret add mov push das lahf mov add popf and aas and les loop out out pop addb or ret mov add cmp push clc ja les sub bound or add jg mov add repnz pop hlt mov in adc out pop push mov loop or ret dec repnz adc (bad) out mov daa cld add jmp cmpsb mov inc inc in sbb insl mov or in mov bound cmp lahf (bad) out add add rorb push ds mul fild cmpsb pop cli (bad) fistpll add sbb rcrl int3 add incl mov cmp xor fwait cmp adc inc pushf sub dec (bad) out (bad) mov push xor daa pop inc pop ljmp inc add inc add sub pop and fildl add loop inc add sub jl xchg pop test rorl xchg lcall decl add mov add pop pop nop and add xchg or int cwtl add sub pushf lret xchg or invd cmp jmp decl cmp shrl (bad) sbb jmp add add unpckhps and lea sbb push fnstsw das pop das cld out mov cmp pop inc inc loope ljmp add (bad) sbb mov cwtl jbe adc je out push xor push pop jo and loop fstpl add mov dec or jae mov sub mov mov dec ud2 arpl pop xlat insl mov or call jns add outsb inc and fnstenv scas lods sbb (bad) cmp jge out add jne subl mov (bad) jg dec sub pop mov popa add push outsl je aaa push mov sbb andps jmp push jae mov (bad) dec jge mov imul rcrb dec aas outsb xor punpcklwd push (bad) or sahf addr16 pop pcmpeqw aas addb (bad) out repz and fiadd jmp inc add add add pmullw or or ja mov dec adc add sbb std sti fs lock xchg or mov fnstenv (bad) insl clc xchg arpl insb inc cmpb jle sbb gs add add or mov bound jnp jb or (bad) adc pop xlat jne add aas scas add out (bad) sbb outsb testl mov jecxz inc in jle dec or mov add (bad) scas dec pop sbb push (bad) jno add aaa cld pop add xor mov outsb sbb call adc jb pop inc sar decl popf pop cvtps2pd xchg push and and mov push inc xor sbb mov pop (bad) ljmp inc and pop push push pusha fbstp add fstl imul das mov dec dec lock aam lahf mov dec add pushl (bad) adc adc imul (bad) (bad) (bad) jmp jno gs idivl test pop jb outsb xchg and push sub xchg xlat dec imul std scas jmp imul dec jecxz sbb (bad) in lcall mov mov jae xor and outsb jae dec popf test (bad) ja sbb push xor xor pop mov in mov out insl adc imul cmp dec lods ret adc pop sahf stos cld movsl dec hlt leave xor push loope leave jge addr16 dec xor clc movsl sub gs jl or loop xor lcall das popw js ret pop outsb pmulhw add inc lods jnp incl outsb loope outsb sti (bad) or pop and roll int hlt shrl sbb ljmp xor jecxz cmpxchg out xor out outsb cmp mov jns mov pop cli jmp and (bad) cmp ja (bad) arpl in cmc out callw (bad) mov xchg lret mov and xor icebp push ret inc pop (bad) call or mov push add or mov (bad) jg fisttp cltd rorl inc jl xor sbb mov aaa jno in dec mov fs mov pop cli lods fisubrl ja lods inc and pop or mov dec mov sti test aaa adc pop loopne add mov dec pop fnstenv sbb dec cwtl in ljmp jo aad loopne sti jbe jb mov adc (bad) mov in insb cmp jo test das pop (bad) pusha ljmp lea or add cmc idiv lds and daa mov cmp imul mov pop ljmp scas icebp fs out push inc sub idivl jo arpl pop add xlat cmpsl popa pop jmp sub lahf inc cmc loope scas insl cmc push xchg push ja loope mov imul sub out loope and jmp inc and cmp or jge (bad) clc xchg (bad) (bad) call je push sub xchg enter popa push xorb addr16 xor xchg mov fwait inc clc pop setge jmp rolb (bad) aaa (bad) pushl out xchg insl leave pop inc mov inc jae dec xor clc sub jge jbe outsl jmp pushf test dec (bad) (bad) (bad) pushl cmp cmp iret lds jmp sbb push iret call pop or sahf aam pop cld decl add out insl mov push mov and sti (bad) incl insb sarb mov pop pusha adc adc sbb sub push mov das xchg push jns enter rcrb nop pop push dec pusha cld lcall adc js hlt cmp push jns xor sbb hlt fmul outsb pop stos (bad) enter dec mov popf jo (bad) movsb adcl adc fnstsw cmp in pop cli pop cmp lcall and mov subl lahf orl push cs or call decl addr16 popa fist dec imul push ja ds out (bad) faddl aas in and (bad) decl shll loopne in jae repz push add mov lcall mov add in test in add orl pusha inc (bad) loopne in fisttp ret push aas pop push and push adc fwait (bad) push fbstp rorl xchg std pop (bad) add add add adc add fsubrp inc rcll nop and sti push ss and das in xchg mov or fwait int3 or pop add sub add std scas add push and push add add inc mov and and fcoml inc popa and or inc pop insb push fstps add and loopne xchg xor dec or or stos or test jg pusha rolb cmpxchg or jno (bad) mov nopl add push fiadd add push lcall sbb push lahf (bad) add les mov mov sarl jle pop sbb adc sub (bad) xchg lock jp xchg shll or inc cltd pop adc xchg xchg push (bad) adc jmp inc and in inc (bad) out stos jo std aas inc push xor loope dec insl sarl je mov push mov inc mov arpl arpl mov jb outsl popa fs insb popa dec pop xchg push jns pop loop xor insl repz ljmp or cmpsb gs xor inc stos push and arpl pop xor outsl adc aaa enter xor sub pop (bad) (bad) jge add (bad) sub es mov (bad) notb clc and add mov cmpsl jns (bad) dec outsl xchg (bad) mov adc ret fldz xorb pop add insl adc test das aas fsubs (bad) (bad) test pop pop fucomp sbb xchg mov push clc das loope loopne xchg outsb push mov iret pop insl mov cli ja fnsave aas stc xor pop xor cld decl jne xlat jmp xor xor js push mov aaa add outsl aaa imulb (bad) jmp add push js mov or test call repz cmp ret stc popa xor fstpl xchg sub test outsb and mov das aaa mov lock push into jne gs pop push dec inc out clc and (bad) lea icebp dec hlt loop insl push popa dec push xchg out (bad) stos lock aas push jns cmpl add cmp add arpl or add pcmpeqd pop stos jp pop or sub mov dec testl jle xchg adc std inc ljmp xor js add mov mov (bad) jl or xchg dec add cmc fstpt mov adc sti adc aam outsl adc add insb cmp adc imul push stos and mov leave inc daa ret jle sub sbb mov jnp xchg mov outsl inc sbb pop std push (bad) (bad) jnp test add or repz push jbe scas sub push ljmp int3 jg adcb mov pop (bad) xor cwtl add pop mov outsl pop fdivs inc xchg lahf pop cmp cmp and rorl pop les adc dec mov cli adc ret fiadd (bad) in mov pop fidiv out (bad) fild in or xchg push fild mull cmp call mov in fnop aam xor les sti scas notl sbb jo push add inc cmpsb jmp sarl xor sub and lcall or lock mov call or inc fwait into jne xchg fs lods add subl xchg or mov mov dec into in mov daa pop or std add lods jle mov add sti pop arpl arpl outsl dec sub push arpl add cwtl jmp push arpl arpl ljmp fldt xlat arpl iret arpl pop sub adc jmp lcall add lahf bound ret mov pusha xchg xchg imul ljmp pop add cmp lock out jo mov popa push mov xchg add in mov adc pop jno xchg push clc incl push movsl adc cmc fwait adc or cltd loopne test push rcr add add ret loopne sub or stos sti pop push cmpsb fild in mov ret or loopne adc jg inc jle pop std pop andl test cmp or mov or mov das subl pop pop jle xor xchg xchg (bad) mov sub fs push xchg push pop (bad) aaa cmc das enter scas jnp ja pop rcr push lret pop fcmovb clc cli or or pop add xchg add lea jg fisub sti or inc cld outsl lock push cmp push adc mov mov or notb xor sti fsub mov pop jp push pop push xchg daa clc jg pushl data16 pop scas insl setae mov test xlat les enter (bad) lcall add rolb js stos rcrb sbb dec xlat mov add std inc outsl ja pop (bad) fmuls cmpsl lahf push (bad) std push rolb push mov mov adc add mov pop insb icebp add or lock test out cmpsl xlat add ret dec std (bad) (bad) inc cmpsl outsl add xor cmp shll push mov lods loop add mov (bad) jnp adc push adc (bad) mov inc stos add add sbb xchg inc imul sub and (bad) and cmp insb sbb outsb sbb sub decl nop dec imul jb push push lock stos sub add arpl insl cmp gs jo push popa lret inc push clc lcall fldlg2 int ljmp mov add pop or push aas in (bad) outsl cmpsb push (bad) cmp jg sbb aas or pusha outsb xor out sbb push dec loop stos sub pop xchg mov aas mov in scas arpl dec pop xor leave (bad) aas cmp mov jne hlt js sbb mov lea or sbb xor lock incl sub inc adc cwtl push jmp fadds outsl (bad) outsl push ss dec jae fistpl gs nop inc bound jl rol cwtl adc ds gs out loop rorb adc dec dec iret sbb (bad) ljmp inc cmp push adc inc icebp push ss insb cmp cwtl mov dec mov ja test add (bad) stos push adc cmovno cld or or push mov mov arpl ja,pt cmp cmp mov lock sbb inc popa (bad) or bound addr16 test xlat inc outsb jnp mov cmp add fiadd push pop jbe mov addr16 dec scas add mov test inc jo ja out stos or (bad) fldenv and inc sbb push loope jo push jne outsb inc sub outsl jg xor iret adc dec fbld pop jae sbb in push jo xor cmp push imul in aaa sbb mov icebp mov sbb inc sub jmp ljmp mov jbe xor shr aaa cs jae dec cltd inc push call or fiadd je jecxz xor cmp (bad) adc outsl (bad) push jne push cld sarb add (bad) fnclex scas gs stc push jg setns push sub push in dec leave fdivrp addr16 adc sub sub jbe mov fldl repz push fs add fcmovnb incl dec inc dec jae insl clc or out fwait push jbe decb (bad) ffreep or or adc (bad) or mov test jg mov int3 xchg jecxz jl jne mov outsl fisttpl es cmp jmp sub das push sti call add xchg pushf fs mov (bad) mov adc sbb popa lahf out incl addr16 adc mov ffreep pop (bad) jo inc data16 (bad) or inc mov sbb fdivrl xchg adc sbb sbb and inc and popa xor add jmp push adc pop and adc stos push or adc adc pop fistp or adc or or pop xor (bad) (bad) decl push push xor or dec push pop pop push sub or daa or sub lods add ss jg inc lods fistpl inc push pop or or pop clc dec shrl insl ja adc or inc loope cmp or cmp mov sub outsb push sti movsl jl or or cmpsb pop mov mov std out jle or outsl mov (bad) push or and not (bad) (bad) fcmovnu cmp jp or or push femms sbb add ficomp or or add mov iret add push push ja or and lcall sub adc push aaa add sbb (bad) call inc jne adc add or or or or mov es sbb sub outsl inc pop adc and ljmp int3 adc or cmp inc or adc lock sbb dec or and sub push xchg or sbb lods or or sub jge,pn mov push and sbb adc push fstpt das out dec dec push ret js,pn jae cmp cmp in mulb jne (bad) xchg dec or or jae lock xor outsl pop jne adc mov xchg clc insl sbb loopne sub sbb das push jge inc sub dec fidivrl imull and mov cmp add popa dec mov das insb out jg loopne or cmp add fisttpl and pop pop mov or xchg jb (bad) mov or jae xor adc lock add or mov add hlt cmp sti lods ret xchg sbb add sub push inc or pop add ja sahf add or add or aas push scas mov push aad mov in mov (bad) cmp sbb add pop push xor cli or add mov mov add sub lock inc out cld dec and in cmp add popf and testb sbb mov pop pop mov pop or (bad) mov add and mov ja adc xor push clc pop jnp sbb ret sub std fwait jp add fnstenv roll call mov xlat pop or rolb mov icebp dec cld decl loopne test les and andl aaa adc (bad) ja (bad) out push out jae (bad) xor xor mov shlb (bad) fldt mov lret cmp rorb sar jg ljmp pop clc mov cmp int3 inc orl inc xchg or (bad) (bad) ljmp cmpsl je and jae mov mov add jbe cs jb,pn popa je bound push push (bad) (bad) in repnz pop nop ja cs andb fsubrl cwtl add mov shr test sbb shrb mov add dec mov fs add pop outsb add int3 cmp cld test add add inc add shlb add test jg fcomp add fstpt mov add outsb inc fmull pusha mov jo jg pop loope or jmp nop nop nop inc mov inc add jne mov sub adc fmuls loop jb xchg adc shlb jne push jae xor subl push jo or sarb das leave or and adc mov sbb pop or ficompl andl lea inc mov cld jbe mov inc xchg shr arpl adc xor push lahf inc out add icebp cld jmp (bad) mov mov sub cmp ja cmpb jne mov mov sbb lcall shr rol xchg sub sub jp add inc xor adc daa jge fdivr lea push or xchg sbb fsin pop mov xchg dec or dec repnz push adc inc add ja mov testl push mov popf imul sbb cmp ja add mov jo push js pop jo loop mov inc mov scas and stos fimull pushf jle mov mov call lea (bad) pushl sub adc lea push cmp jne sub push push add xor inc cli inc mov add add (bad) add add sbb add mov xchg pop or inc mov add cmp sub data16 jns js insb outsb jae nop jb add mov cmp push insl mov arpl cmp and mov xor and outsb imul aaa xor xor and push xor jne adc dec xor cmp (bad) push or jns adc or gs and push mov mov fcomps pop xchg insb add rcll scas jne inc arpl test jb das cmp pop popa xchg jl jge stos push hlt prefetch inc test mov adc sbb adc xor cmp fldenv xorl mov lcall enter in dec inc push xorb dec inc dec xor cs dec dec add push inc push dec or fiaddl pop sbb jb pusha in push push or inc or loop mov nop mov pop add or test or les scas pop mov sbb inc fisttp push scas xor xchg add add and xor lcall add adc nop push push cwtl cmpsb jmp jb jns xchg aad std add les xchg jo mov stos or sub cwtl sbb dec rorl (bad) mov imul insb xchg insl divl inc frstor cwtl aad mov xor xor xor push inc xor mov mov xorb mov dec pop add or les enter insb or adc add push orb out pop imul bound xor inc out or push or and adc adc int (bad) xor sub fdivrl push les add fs xlat fidivl mov jge sbb xchg cwtl andl movsb inc mov fidiv push adc je and sti test pusha fisttpll cmp dec inc inc dec data16 and loopne cmp xor lea jg sub and cmp out insl pop test nop jne mov mov or inc jnp fs dec fsubs push jb push iret or or or push inc mov jo push adc inc addl test push lods and popa sbb inc ja (bad) dec ss adcb and movsl lret jo js lea repnz dec adc lods dec ss aaa pop sbb adc imul inc pop popa mov inc mov in add push push (bad) jnp es sub and icebp inc test imul outsb daa mov push dec sbb or jns inc sub sbb mov and mov adc outsl fs mov cwtl nop xchg adc sbb jnp or mov adc push popa imul push es popa push les fwait jno (bad) pop push (bad) fs dec push inc test xchg xor icebp cmp jmp sub lcall push sub lret jp adc inc jae movsl mov pop movl and push mov int mov push or inc pop adc movsl sbb xchg mov inc sub mov cltd out imul dec add inc adc and in add ss mov ficoml call or inc cmp orl adc jno jmp movsl jae add and add xchg and or pop jne cmp out in xchg (bad) and imul dec fmuls and clts add sbb or add sbb adc and fisttp add sub sub sub or or sub pop ljmp fldenv or adc daa dec sbb adc (bad) testb adc pop adc and push adc pop sub and push das pop femms test or sbb pop (bad) jbe jmp and sub push pop push and inc lea push sbbl (bad) jbe pop xor cs aad or in in or mov or in add adc and mov push push dec sub or (bad) (bad) pushl and push adc lock add xor ds or push ss mov add push and cmp aaa gs outsl mov mov or sub and mov sbb adc dec pop adc push adc add lock add lock add lock das xor or sti fcomi mov pop sbb bound mov or push add (bad) mov in pop lock add sbb adc lock ljmp lock pop add or jb sbb adc inc add sub and or adc cmpl mov or xor adc adc or or adc xor lds addr16 mov dec push mov sbb cmp cmp push das add sbb or adc and push adc mov das (bad) cmpsl add pop pop pop sub or adc adc in push (bad) call and and lock pop lock add (bad) xor inc pop popf xor lock add or dec je push adc xor dec push add cmp test mov cmp movsb sbb push adc pop in inc push sub dec mov add and jno or iret sbb push mov push sbb mov and icebp jg ret dec or mov push pop clc int cmp pop lret xchg add sbb icebp mov insb inc loope inc push mov dec mov enter lock adc es push add mov mulb or or subb adc inc cs sub daa push cmp lods pop add xchg mov test push and push sub sbb sub inc adc cmp and aam ss push add or push mov lock add mov jl pop sub jns lock mov mov ja aad mov leave sbb adc lock loope insl and add add shrb outsl push adc lock sbb lahf lock add add xchg sub mov adc adc (bad) xlat or orb add in popf sub add add and cwtl clts inc mov fnstcw and add and jbe or pop mov xchg pop or xchg addr16 incb add rorb addb and and jne add movsb mov (bad) add cld and dec insb adc add and mov cmp ret dec pop mov out mov cmpsl test das je,pn js push mov fcomps nop jmp jp mov sub push xchg adc sti and sub dec lret out fiadd cmp xchg js es rclb add sub imul repz bound xchg or xchg inc fiadd mov imul daa and inc add add repz adc and dec dec adc add add and add pusha mov lea push jmp nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov push dec repnz push call or je mov add jmp call add lea xor mov inc or je cmp ja add mov xchg rol xchg add mov jmp and shl mov add jmp mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp add add add cmp inc add add add add add add call add adcb add push add add add add add add add add add add add add add add add add add add add add pop add add mov add pop add in add add add add add add add addb addb add add add add add add add add add cwtl add add jo add add in add add add add add add add rolb addb add add add add add add add or add add add adc add add add add add add add or add xor add push add pop add inc add push add dec add pop add dec add dec add add add add add add add inc mov add push add inc mov aas add add add add add add add into add add add je jb imul inc add insb add dec add data16 add stos add add add add xor cmp xor xor bound xor add dec add add add outsl add jo popa add jns dec add insl add add add dec add arpl jb outsl add outsl add je and inc add jb jo outsl add popa add add outsb add add add add add add imul inc add jae arpl jb imul imul add add inc add je dec add arpl imul add and jno test push pop or pop sub pop ja add add add add imul push add jb jae imul add add add add add add add add add add add add add add add add push add add outsb add add outsb add insb add popa add add add imul outsl add imul add add js add add add add popa add add jo jns jb imul je add test add arpl jb outsl add outsl add je and inc add jb jo outsl add popa add add outsb add add add insb add add imul je jae and jb add add jbe add add add add add jb imul outsb add insb add imul outsb add insl add add inc add je dec add arpl imul add add js add add and add outsl add add je dec add insl add add add dec add arpl jb outsl add outsl add je scas add add imul outsl add jae scas add add jo add popa add add add add jns jae je add add add inc add add add jb outsl add add je push add jb jae imul add add add add add add add add add add add add add add add add add popa add inc add insb add dec add data16 add add and add add push add popa add jae insb add je imul add add or add adc jae insl bound js insb outsb jae and outsb cmp push sub outsl jae data16 arpl cmp insl jbe,pn and insl popa outsb imul jb imul xor ds je jne je outsb outsw and insb outsb jae and outsb cmp push sub outsl jae data16 arpl cmp insl jbe,pn and or and arpl imul and and cmp gs gs gs jb jbe insb gs or and and and gs gs gs js arpl imul insb and gs cmp outsb jbe imul and inc arpl jae cmp jae and cmp jb jno gs gs js arpl imul insb ds and and jb jno gs gs jb jbe insb gs or and jae arpl imul cmp je jne je outsb outsw ds jae gs bound push inc pop jbe add jbe add adc add adc add jbe add adc add jbe add jbe add add add jbe add add add jbe add add add ja add add add push dec inc dec xor cs dec dec add push inc push dec xor cs insb add inc push xor cs insb add dec dec dec inc push cs insb add dec outsl popa fs imul add inc gs jb arpl fs jae add push imul jb je arpl push imul insb insb outsl arpl add jb jne insb inc jb add add imul jae add dec jo outsb push jb arpl jae outsl imul add jo imul add je jb gs jo outsb inc add add pusha adc add cmp add sbb add xor sub add add (bad) sbb xor xor push add sbb or push add (bad) aaa add add pop xor xor or push add (bad) aaa add wrmsr and and cmp cmp cmp dec add jae outsl add add add add add xor xor push add sbb jns (bad) pusha (bad) arpl outsl js cmp jae (bad) sbb xor add add adc jmp jl dec pop ljmp cmp or dec xchg or add orl push adc pop inc xor push add adc gs gs and jo xor adc add pop adc inc jne bound jbe insb insb xor xor or push push push xor push add adc push and jb imul outsl outsb xor xor add push push push and gs popa insl jo outsb and xor pop or xor xor xor xor pop pop or xor xor xor xor or or add push adc push push xor push add adc jns popa outsb je arpl inc outsl jb outsl jb je outsl outsb xor xor push add add daa push jns popa outsb je arpl push imul insl jo outsb and jb imul and (bad) add xor dec xchg or add (bad) add add (bad) add add lods mov push dec xchg sbb or and sub mov imul cs pop sti adc jbe inc add inc hlt call int3 and mov add (bad) dec in mov imul inc cmp inc into inc adc (bad) mov sub cltd push lods jb es jno mov (bad) push popa add stos cmc dec sub js movsl das mov out out mov push aas cmp clc jnp in or lock inc pushf inc add stos xlat insb lahf xchg imul enter fcmovb xor xchg and jl out dec sbb ret sahf sub out daa push jge negl push mov in cmpsl sub stos gs fcoms dec dec inc lcall loop pop xchg or push js inc int inc jle rcll lds leave (bad) jno add add mov divl sbb push add add pop lcall lcall in dec subb xor push or push add add xor and or push add xchg push das das outsl arpl je,pn popa ja gs xor push add adc add add xor add incl add xor push add pop add xor xor xor je jo das das arpl je,pn popa ja gs das push push push imul jo outsb addr16 inc arpl xor push add and push or push add xor push add sgdtl incl add add xor push add adc xor movsb sbb xor push add add adc gs je insl jo xor xor sub or xchg (bad) or add addl pop xor jecxz sbb pop aaa pop cmpsb push lahf push (bad) ljmp insl jmp jl call jae adc test sub mov pop xchg add (bad) xor cld loop sbb sbb jns bound aaa push and mov fstp push aas sbb push push pop cmpsb cmp adc mov (bad) add xor add add adc or js xchg fidivl mov enter or dec xchg or add pop xor xor push add push adc push push xor xor or push push gs push imul arpl xor xor or cs insb popa jae and and bound and imul gs imul outsl outsb and je outsl jb je xor pop or xor xor xor xor pop pop or xor xor xor xor or add push adc push push xor xor or push push gs push imul arpl xor xor or push push gs push imul jae and je outsl jb xor xor push add or xor arpl and xor and jb push imul arpl and and je outsl jb jp and and insb jns inc xor add add cmp gs push imul jae and and bound and imul gs imul outsl outsb and je outsl jb je and (bad) add xor dec xchg or add (bad) add add (bad) add add and or jp sahf pusha or out cmp jl cmp sbb sub (bad) sub stc push or cmc icebp lods enter and sub clc mov dec mov (bad) jle push in out inc (bad) adc movsb fcomp clc loopne bound cmp lret test in (bad) sbb ret fadds push dec rorb rorl divb jnp dec push rcll mov mov xchg addr16 hlt push add nop mov cmp hlt cmp loopne jmp mov hlt xlat lods repnz cmp xor sbb and and sub (bad) aad dec in arpl cmp or inc mov xchg scas push popf aam inc shlb adc jle aas lahf jae xor iret pop aas xor xchg mov push call add add (bad) add clts add adc add add xor add pushl xor add pop add xor xor mov and je cmp das arpl jbe,pn jb jae outsb arpl das jo popa xor arpl xor push add sgdtl incl add add xor and xor xor add sbb xor push or push add push sbb je jo cmp das ja ja jbe jb jae outsb arpl das arpl xor push add add jg cmpsl ret mov inc cmp add insl push or push add add xor pop mov push xor or popa addr16 imul pop push add sbb (bad) in sbb ret iret subb sbb sbb xor je cmp das insb outsl outsl jbe,pn jb jae outsb arpl das jbe insb outsl outsl imul push add add xor xor or push add xchg push das das outsl arpl jbe,pn jb jae outsb arpl xor dec xchg or add addl lea push xor add push shrl cmc push and cwtl mov push mov cmp xchg sti xor adcb add loop into xor popa adc (bad) icebp outsb repz push inc jle ficomp mov xor or jno fmul fisub loope adc fdivrs cmp push mov and lahf push gs mov mov xor add add adc iret hlt cmp (bad) mov push sbb push xor dec xchg or add pop xor xor push add push adc push push xor push add adc jns popa outsb je arpl inc outsl jb outsl jb je outsl outsb xor xor push add add daa push jns popa outsb je arpl push imul insl jo outsb and jb imul and push pop or xor xor xor xor pop pop or xor xor xor xor or or add push adc push push xor push add adc jns popa outsb je arpl inc outsl jb outsl jb je outsl outsb xor xor add add sub insl popa outsb je arpl push imul insl jo outsb and jb imul outsb gs sub (bad) add xor dec xchg or add (bad) add add (bad) add add arpl cmp and jmp xchg mov fldt outsb incl adc std test popa jns pop leave dec xchg loopne dec and rcrl dec out test mov fs lock mov xlat sub int loope arpl pop mov pop mov cltd pop test sub pop out xchg (bad) inc push sbb xchg inc cld stos scas mulb inc lods jo out out int mov sbb shlb movsl sarb xchg pop gs out pop je inc xchg fmull dec mov ja pop push fisttpl pop xor fldenv dec popf cmp (bad) or icebp mov fnstenv add jp mov scas cs jo mov sti or loope sub int add add mov (bad) add or add adc add add xor xor push add and or or or push add xor push add sgdtl incl add pop xorb push or push add add xor sub or push add xchg push das das je sub ja,pn jae,pn insl popa outsb je arpl arpl xor push or push add xchg push das das je sub ja jae,pn insl popa outsb je arpl arpl das je jae arpl xor jb cmp add pop add xor xor mov sub je cmp das je sub ja jae,pn insl popa outsb je arpl arpl das je jae arpl xor insb xor push add adc xor movsb sbb xor push add add adc gs je insl jo xor xor sub add push add add inc (bad) imul arpl aas pop ss push add and xor adcb cmc outsb pop int3 int3 je aam jge aas fucomi dec subb xor dec xchg or add (bad) add add mov sub dec lock bound aaa js test pop outsl sbb aam add lcall jns and fidivl hlt sub arpl in fs or testl mov mov frstor (bad) jno int je mov fidivr out mov sub mov mov xchg push adc cld fstpl dec pop push inc inc inc outsb or mov fimull jno cld sbb mov jnp imul push sub jg or lret insl add cmp loope hlt pop test sub dec sbb and push ret xchg cmp xor jnp,pn fsubl or jno push pop iret call mov mov and push lcall cmp xchg loopne mov xor add mov add pop jbe mov divb mov xor dec xchg or add xorl adc push push xor xor or push push gs push imul arpl xor xor or push push gs push imul jae and je outsl jb xor xor push add or xor insl jae outsl data16 and and je jae das das ja ja jbe jb jae outsb arpl das jb popa and arpl xor xor xor add add and push imul jae and and fs outsb imul xor inc inc xor pop or xor xor xor xor pop pop or xor xor xor xor or add push adc push push xor xor or push push popa imul clts add pop adc push popa imul and push push add or push jne gs imul inc outsb je jb popa imul xor add or xor je insb and and popa jae and and jb jae data16 push outsl data16 popa jb and insb imul jbe xor xor push add add push jne gs imul inc outsb je jb popa imul (bad) add xor dec xchg or add (bad) add add (bad) add add pop out jge inc scas ret adc xchg cmp clc inc mov xchg (bad) adc push mov push mov sub jge mov jnp sub inc push mov out test lret xor fbld test jno sahf mov jge sub xor pop adc insl cld hlt clc pusha or imul in ljmp pop sahf arpl mov (bad) lret cmpsl aaa ror fbstp and dec stc aas div (bad) cmp fnsetpm(287 call ret or sub cmc xchg sbb mov popa pushf mov rorb cld ljmp pop fiaddl int3 mov std (bad) xchg sti inc add (bad) cltd rolb out ljmp add fs shrl sub imul icebp icebp lar add add (bad) add or add adc xor xor push add sgdtl incl add pop xorb push add pop add xor xor xchg push das das arpl xor sub jbe jb jae outsb arpl das inc push inc xor arpl xor push sbb cmp cmp or dec add pop add sub sub or push add push sbb je jo cmp das ja ja jbe jb jae outsb arpl das jb popa xor push add and push or push add xor or push add add xor and or push add xchg push das das outsl arpl jbe,pn jb jae outsb arpl xor push or push add xchg push das das arpl xor sub jbe jb jae outsb arpl das inc push inc xor arpl xor push add and xor adcb test dec leave mov out jecxz cmpsl popf xor push or dec add add add add xor push or push add (bad) aaa add sbb xor add add add xor dec xchg or add (bad) add add scas dec pop or jno ret loop dec lea and inc jge (bad) mov hlt sbb mov rcll gs mov dec sub cmp xchg sarl rclb fldcw movb clc fisttpl xchg pop add add and in xchg mov faddp inc out xor jb stc sbb inc add push mov ret rcrl lahf pop xchg idivl mov jmp enter push test orb (bad) pop loope movsl cmpsl and pop dec mov sub pop and mull cs jb mov push mov jmp inc jno dec add stc fildll aam dec stos daa loop ss test insl mov and repnz movb test loop mov add add inc xor add mov add push add stos and in xchg leave aam xor xor dec xchg or add or push add push adc push push xor xor or push push gs push imul arpl xor xor or push push gs push imul jae and je outsl jb xor xor push add or xor arpl and xor and jb push imul arpl and and je outsl jb jp and and insb jns inc xor add add cmp gs push imul jae and and bound and imul gs imul outsl outsb and je outsl jb je and push pop or xor xor xor xor pop pop or xor xor xor xor or add push adc push push xor xor or push push gs push imul arpl xor xor or push push gs push imul jae and je outsl jb xor xor push add or xor insl jae outsl data16 and and je jae das das ja ja jbe jb jae outsb arpl das jb popa and arpl xor xor xor add add and push imul jae and and fs outsb imul xor inc inc xor push or xchg (bad) or add (bad) add add (bad) add add and movsl xlat mov imul in es sbb xchg divb imul jne xor push push int or mov cltd loope aaa dec pop into cmp xchg (bad) cmc daa xor cmpsl mov pop mov sti int bound sbb icebp jecxz cmp nop add cmpsl jbe jg add jle rcr add imul inc add fist jno push add add dec inc cmp mov insl orb aas sbb das xchg cli in ja mov mov cmp sbb bound push (bad) hlt pop xchg sub jle std movsb xchg cltd jg int movsb jne out adc sbb cs cmpsb mov dec jle mov icebp xor cmpsb ss xorb movsl int xor mov add add mov (bad) add xor push add adc add add xor add incl add xor add and xor gs or dec add pop add push xor push or push add push sbb je jo cmp das ja ja jbe jb jae outsb arpl das arpl xor push or push add xor sbb je jo cmp das ja ja jbe jb jae outsb arpl das jb popa xor push add sgdtl incl add add xor or push add add xor pop mov push xor or popa addr16 imul pop push add sbb (bad) in sbb ret iret subb sbb sbb xor je cmp das insb outsl outsl jbe,pn jb jae outsb arpl das jbe insb outsl outsl imul sbb sub sub and je cmp das arpl jbe,pn jb jae outsb arpl das jo popa xor jb xor or push add add xor xor or push add xchg push das das outsl arpl jbe,pn jb jae outsb arpl xor and push or push add push or push add xor push add adc xor movsb sbb xor push add add adc jb push imul sub sbb push add add iret cltd test dec leave mov out jecxz cmpsl popf xor push add and xor adcb cmpsl ret mov inc cmp add or dec xchg or add (bad) add add out movsb les dec mov psubusw in jp and inc cmp insb sarl sbb test (bad) push cli adc dec and andl mov arpl inc call add test jno out add cmp pop adc (bad) aam in jns or jb aaa and or lcall nop pop cld cmp cmp cmp adc and int3 dec and nop pop pop mov cmp in (bad) outsl movsl and scas or mov outsl xchg pop mov pop (bad) jne arpl into xor sbb test lods xchg cli lods in xchg mov ret arpl adc cmp sub cmp add dec xchg (bad) xor add add add or or or add push adc push push xor xor or push push gs push imul arpl xor xor or push push gs push imul jae and je outsl jb xor xor push add or xor insl jae outsl data16 and and je jae das das ja ja jbe jb jae outsb arpl das jb popa and arpl xor xor xor add add and push imul jae and and fs outsb imul xor inc inc add pop jbe mov divb mov xor push add sbb adc or push add (bad) aaa add or add add sbb or xchg (bad) or or or push add (bad) aaa add add sbb or push add (bad) aaa add or push xor or push add (bad) aaa add adc sub add add push add aaa mov fs sub push or xchg mov or dec xchg or add add jnp in sbb aas lds add xchg pop jle stos jle mov mov dec mov xchg inc aad jl push mov ss repz addr16 into pushf inc in push sub daa call mov mov inc ret rclb pop (bad) arpl mov pop leave mov out mov dec das dec cwtl inc mov add icebp mov popf cmpsl hlt add push (bad) fstpl test clc leave push popf loop sbb scas pushf fldt inc add stos aam mulb cmp mov movsl es adc std cltd pop xchg das out jecxz (bad) cmc jne lods fcomps movsb mov jb out outsl (bad) call mov test add adc jae sarb push sub outsl sub adc add out leave lods mov (bad) add push or xchg (bad) or (bad) add xor add jb pop xor xor push add push adc push push xor push add adc jns popa outsb je arpl inc outsl jb outsl jb je outsl outsb xor xor push add add daa push jns popa outsb je arpl push imul insl jo outsb and jb imul and adc iret hlt cmp (bad) mov push sbb push xor push add sbb sbb or xchg (bad) or or or xchg (bad) or sbb or xchg (bad) or movhps xor xor xor xor or xchg (bad) or push add jg incb mov jae or aad inc mov xor dec xchg or add add inc ljmp push pop in xchg lea icebp pusha lret push mov fmull out (bad) (bad) out push mov cmc jp movl sub (bad) (bad) jno out pop pushl in (bad) popf mov (bad) push or inc mov pop outsl mov int loopne pop cmp sbb dec inc push sar push jno aas subl push (bad) jp leave vmovdqu jnp dec fadd xor fadds lock cmpsl mov cwtl jo xchg out sub mov pop cwtl in dec mov mov ret int3 mov cmp lret pushf jo jo stos fwait pop cmp cmp shrb inc sbb xor or dec xchg (bad) jp ss or pop push mov fldcw add mov jno or add add (bad) fmuls push jle imul cwtl and jo (bad) jo jmp add (bad) test lock mov jb je inc clc mov jae imul sti jmp and shrl cmp insl lea outsl pop adc pop mov add cmp test stc xor sbb mov loope (bad) xchg sbb xor dec fdivrs and lahf loopne or push popa cmp jle push pop mov xchg inc add add adc flds insb or das sub subl sbb jne ds movsl and je add inc xchg sub ret sbb out fadd loopne jmp push sub pop or lahf cmp ficomp pop lods jmp push lock adc dec rcll adc inc stos mov adc inc aaa js jl add cmpl imul sub and lock pop lcall or nop or (bad) xlat das adc inc push popf push outsl xchg sub pushf cmp add (bad) dec xor ss cmpl es shrb mov test inc pop dec outsb and push scas add or or add push lea lea movsl add inc and out test cli ds jb sub pop lea mov sub mov push or add dec push push dec inc pop cmpsl nop das inc push popf cmp mov cmp in test test inc inc mov mov xchg mov xor push aam xchg dec xor jne lahf cmp push pop jne mov mov adc push mov push adc or mov and repnz mov inc inc cmc and add pop jo imul push out inc cli (bad) (bad) (bad) or or out fdivl and sub mov push sub pop jne dec xor repnz jmp ds add adc aaa mov push push inc fmull mov sahf mov insb popa jns jae xor cwtl pop xchg movl je pop daa js fbstp int3 jl adc fstps pusha mov xor push inc mov inc push mov xlat dec dec das das cmp pop jb adcb jb out lods lods dec sub xchg les (bad) sub and test fdivs adc lock out push pop lods inc push dec inc push dec adc dec push inc ja std adc inc insb lret adc sub das mov nop add fsubl fadds or lock shrl cmc dec jae (bad) (bad) mov js cmpl jl xor push cmp fistpl dec push addl cmp in and fist sbb dec push adc add pop adc pop xchg cld mov pop rcll mov std rorb cmp inc or jb pusha (bad) outsb movsb ud2 popf and mov call fmuls adc xor or fbld or (bad) ds adc jnp,pt in (bad) add test adc (bad) sub andl sahf fdivrl sub aam add or dec popf sbb fsubr rorl cltd adc dec dec fmuls (bad) cmp inc lock sub aam cmp or dec push fsubr cmp rolb leave push int cmp rcr mov sarl fidivr pop sub push out push idiv push jns jnp pop push movhps out push dec and loope jg mov ret dec inc cltd (bad) icebp sbb xchg cmp data16 lcall in xor dec loop push inc mov movsl leave aam rolb jle ja es (bad) decl mov pop and sub out mov and mov xchg movsb adcb dec iret int3 aam jbe push or test mov movsl mov popa mov andps dec sbb imul stos jae jb dec xor int inc xlat mov inc sub fnsave add call pop inc je cmp add mov inc or push test stos cmp shlb subb add sbbl sbb or sbb jae sbb or mov or clc or and lea incl push test mov rcrl cmp inc fstl xor repz xchg xchg push lret xchg pop test loop inc mov adc or pop aaa add jl leave xor or (bad) lcall (bad) jp shll mov cwtl fnop mov and in dec add stos push jb (bad) mov push xchg clc adc adc test adc push ljmp rcrb and inc sbb jmp fstps shll adc inc inc call push lock push clc inc std in sbb jmp mov cmp je jne push sbb pop les repnz pop daa loop mov xor and pop fcoms adc adc jnp xchg jmp lea stc inc fmuls ds jmp adc add dec or in xor aam sbb pop mov mov inc test cmp cs mov imul mov push fild pop frstor and push sub dec scas mov inc mov jmp mov xlat inc xlat pushl and jnp scas push adc (bad) cmp pushf cmp xor divl (bad) rcl dec xchg mov add pop mov rolb mov stc inc dec icebp daa pop mov mov data16 mov cmpl mov and aam pop loopne push loop sub fdivl push mov xor pop leave mov inc ss sbb mov popa mov dec dec mov push mov loopne iret and bound sub dec dec cwtl sub inc shll jne push xchg jp arpl dec sbbl xor sub (bad) mov and cmp sbb sbb sub push stos cmp fistpll inc mov mov dec das inc and inc jle push or fdiv or push scas call lock testl jmp shrb jmp pop rep add cmp adc loopne add dec push push aas dec add mov mov clc mov addl pop ret subl movb or dec push xchg (bad) std add out mov ja fisubl aam fdiv mov ds pop dec call stc cltd xchg dec test jb push sahf xor orl mov sbb jmp dec ror fwait inc pop (bad) fcomi fsub rcrl or lock mov xchg jge (bad) (bad) pop push inc rolb lea sbb cmp dec loopne mov outsl jp mov adc cwtl pop sub rcl mov sub lock or enter (bad) sub mov cmpsl and push lock jge arpl ret faddl arpl in aam pop test xchg adc sub push sbb mov mov pop loopne fcom push iret negb pop jmp xchg push xor pop mov or in orl add ja mov fildl lock hlt adc outsb jp cmp das (bad) out (bad) jg push sub stos sarb ret sbb rolb pop and mov enter lahf or arpl lds mov stc inc xor sbb xor mov arpl xchg sbb and push sbb add pop push stc mov fistpl sbb xor or and mov call push imul sbbl sti inc inc xchg and dec je or das data16 adc rolb mov aam xor inc add add adc mov imul les dec sub aaa popa test (bad) xchg xchg sarl dec in add out sub mov hlt pop xor ret loopne mov cmp sub bound pop sub adc xchg jbe and cmp or inc xchg cld out mov aaa jne mov sbb out mov sub out in stos pusha inc jo cmp jne pop (bad) fs mov push mov mov (bad) popl test cmc decl cltd dec sahf adc push or xchg idiv or fs fwait inc sbb sub adc ss jp sbb sub fisubl outsl pop adc pop or cld imul rclb (bad) mov or adc dec enter mov std mov push outsb sbb add push bound or cmp dec daa adc cmpsb push and popa jmp aaa adc xchg inc mov jo or mov in dec insb fs or push fisubl mov daa or bound movsb imul pop fs (bad) gs adc je jno gs pop sub xchg fdivrp and cmova jae testb mov push inc mov aas pop lock adc (bad) mov mov push popa jo jns enter xchg frstor dec (bad) popa push stc iret dec and add mov loopne popl jb and insb imulb out jp jb roll dec mov pop pop mov push inc jle sub outsb outsb mov push sti dec gs pop inc je outsl (bad) and adc push repnz inc fs or dec xor sub pop push adc push push xor xchg (bad) sbb and mov xchg (bad) fadds aas inc popa jb dec jb jg cmp xor insl push cs lods pusha and imul mov inc out lcall inc adc roll outsl daa or insl hlt insl jae mov popa pop adc in lods or enter pop jns (bad) aad popa jmp inc jo inc aaa jno sbb mov pop pusha sub imul or push push xchg imul (bad) mov dec call stos xor popa push push gs popa push pushf jne xlat lahf push test out xor lahf adc mov loop mov and xlat sbb dec or or mov pop push idivb mov mov (bad) cmp test fisubr jno call insl shrb pop fist push fisttp popa imul dec loope xor mov dec dec cmpsl mov sbb mul addr16 arpl adc or mov (bad) test aas adc pop add push xchg test xorl dec in sbb ja sub pop das ret pop cmp jo aaa pop pop add push xchg inc pushl add adc inc inc cmp inc sbbl (bad) jg add push xor cmpsl int3 push adc adc out mov es movl pop pop ja jl or outsl unpcklps (bad) test sbb xchg adc es sbb pop je and or das add or ret arpl mov adc outsb push adc dec (bad) out or push imul mov inc movl jo inc roll bound (bad) and pop outsl dec adc sbb dec and pop arpl (bad) or addb addr16 mov pop aaa iret lret mov hlt test dec orl jbe inc inc add test push pop call push in movsl cmpsb daa data16 xor pop daa push test insl imul lds sub adc aad das adc je sub adc add cmp dec sub sub out add pop or cs pop xlat xor (bad) pmulhuw or inc adc (bad) push mov inc mov insl adcl push outsl int3 jns gs pop aaa rcrl mov stos and pop sbb mov xchg cmp loope mov into ret jne cmp add repnz add add inc enter sbb mov mulb adc push int3 lahf pop adc push cmc popf pop cld push add mov dec in jle pop sub pusha push push push push insb out and adc testb adc or or add and mov mov sbb mov inc aad xor jl sub dec sbb mov or in sub xor inc cmp and dec outsb testl movsb movsl push cmp sbb mov orb jle mov mov xchg xchg inc notl daa imul aas rorb repnz push sub mov mov cwtl mov and (bad) sbb xchg pop outsl stc mov push dec pop pop add pusha punpcklbw (bad) cmp xor test (bad) fisubl xor pop ds jo inc and mov test dec enter push icebp add push inc or or xchg fisttpl mov push xor mov movsl mov inc dec and or cmp inc arpl cmpsb xchg pusha (bad) aam dec enter xchg pusha in pop rdtsc jge pop sub dec pusha das add ja in bound (bad) fstpt push shr jge call add rolb (bad) out cmp push fs roll jle and movsl mov shlb jae rol in pop pop mov daa or pop pop cld add jb pop sahf or popf push or push pop mov inc xchg movsl add mov add xchg add pop push adc loopne pop nop inc inc dec push inc xchg cmp lods test and ds cmp insb mov adc call sub inc sbb push inc sbb jmp and imul dec add xor xchg (bad) sti cmpb add std call add add js inc sahf clc push fsubrs adc sub jne andl lock fnstcw insl mov jle push rol adc xchg mov loopne mov or add rclb xor jae mov arpl aas jg mov mov ret movsb jno xor or and jecxz daa or or out rolb jle imul push (bad) dec lock pop pusha pop sbb push (bad) xor push xorl lods in inc add add subb mov roll dec mov fs aas add xor xorl xchg pop push or add outsb adc cltd xchg aam push je add mov xor pop pop lahf into push pop add sbb dec dec mov addl stos mov addr16 pop push mov addr16 dec addr16 outsl test inc xchg or or and pop movsl shlb mov pop in movups xchg add push test clc (bad) jb mov cld sbb cld inc ret and pusha adc add dec dec test jo out wrmsr test and pop push imul and (bad) repnz outsb (bad) jnp dec fsts and inc add xchg (bad) mov lds scas dec add fmuls das aam mov cmp rolb cmp cmp fistl js (bad) int3 leave jae pushf rcrb jnp iret mov xlat xor sahf fildl js ja xchg push xchg sarl inc cmp movb in xor jb mov in cmp inc push cmpsb fucomip lret in addr16 cmpl sub leave iret mov sbb call mov add aas fdivrl push add data16 ds pushf inc fmull push dec jbe cltd xchg js ss and pop and add push call loopne jae xchg jl mov loop adc (bad) adc pusha movb jo sub int3 dec jmp clc and xor fimull test popa lods neg sbb andb dec ret dec sbb lds inc mov inc cwtl dec mov jmp cltd movsb mov mov adc sbb (bad) mov and (bad) mov or je call cmp clc pop pop and push test and int3 add movsb jae push mov adcl dec movsl xor or sbbl out sbb fs cwtl dec mov shrl push push shrb maxps cmp and push add sbb aad test (bad) test sub ret das sbb sub stos pop outsl jae push inc mov fistpll imul adc imul outsl and fdivrl fcomps and add (bad) push inc lcall jae in jne test adc insb adc jb add imul or dec movsb xchg test push pop push jnp adc xchg mov xor repnz shrb fnstsw jne mov xchg or je jle nop fistpll sbb pushf add fldl mov out rolb les or or jb insl xor in sbb sub sub arpl leave adc mov aad cmp inc es fdivrs push pop inc adc jb cmp xor sub push (bad) xor or in and cmp xor cmp dec scas add cmp push sar and inc push push push pop jbe iret sbb sbb inc lret add pop adc pop push imul das xchg outsb jo or (bad) mov or dec aad xor into lcall adc fs popa js jnp dec push pop xchg pop jo pop sbb in or icebp hlt aaa in and add nop mov pop add push es mov add jo,pt push popa mov in insl (bad) lahf fsubrs mov data16 and iret data16 push mov mov scas jo push push iret data16 pop adc push and das in mov fldcw js hlt xor xor pop test push scas stos js insl push pop into cmpsl sbb fdivl push mov imul js je or jnp dec sti xchg mov mov push mov (bad) fwait in jge lods and push mov add pop xchg add adc jns fstps cmpsb aam ficompl mov lcall nop mov xor or cmc fcoml cmp sub (bad) adc jo xor adc dec outsb add xor arpl inc gs pop es enter xor push add rclb inc add add push sti str dec push imul enter in dec sbb xor jo add push imul aas cmp inc add bound frstor mov or or pop jmp es fwait push popf or sub prefetch mov add dec ss call scas sbb movsl sbb out mov das mov pop or pushl invd dec dec into sub shl int adc jmp jno inc sub bound outsl jo jo outsb or mov aaa jb jmp in or or mov loop or xor mov push xor rcrb mov push mov and jne sbb adc faddl idivb sahf nop push or jecxz daa stos nop nop or (bad) sbb jo mov adc adc cltd add adc cbtw into (bad) in mov push push mov inc pop fcmovb gs pop jge (bad) dec aam push add and xor dec jo (bad) mov cmp fs mov push xor adc add adc or sbb cmpsl sub outsb push (bad) pop jae push adc and pop and cltd mov add ret push push fiadd jno cmp adc faddl mov or imul or dec add scas iret je or (bad) pusha (bad) jns add push rcr cmp (bad) hlt roll jne movsb and jo xchg or dec das pop add sub add mov push mov add mov jae push push push dec es push or add fwait fs inc and add neg loop push outsl add pop cmp or ds pusha add test ret pop xchg mov out adc jne add fwait push in xchg sbb inc insl dec inc fdivr cmp jne outsl or jo loopne inc adc inc int3 inc jbe or xchg insb push js cli mov cld (bad) rolb xchg add mov fxch inc lods and mov aaa push and sbb subb repnz push add add test add add mov add fadds add ret test test ja data16 fmul xchg add repnz cmp add jo call jnp add icebp jl lods inc mov int jle lock add inc (bad) and aam flds js popa test mov ljmp mov jo sub cli das or push pop add add inc add push add push and addb push add das testb mov mov mov mov mov mov mov mov or pushl and cmp inc nop ljmp (bad) in (bad) in ljmp ljmp pop or pop es cmpsl jmp dec (bad) and dec jmp push push aam in pop out mov cld nop push in mov sahf int js or pop nop out cmp icebp cmp imul in hlt mulb outsl mov push push les clc mov sbb add sbb iret data16 (bad) icebp fadds les and mov shrl dec es push int iret repz jo enter rol cmpsl fldcw mov cmp or call fnsave push jnp xlat jecxz movl jl int ljmp lret shr sbb enter add push push pop and pop add in xchg mov (bad) call push (bad) push cmp jo add nop xor in push adcl jg addb dec pusha divl enter add sbb dec scas jo bound push inc dec int3 jo call push and mov push pop cmp test push pushl or add enter add lods adc pusha (bad) adc sub add rcrb loop jns insb xor enter push sub dec xchg dec repnz fistpll fldl cmp push add add out and add mul adc adc xor pop jmp mov pop mov add aam pop lcall pop je xor add mov inc sbbb nop pop push (bad) (bad) insb and jo and jnp jle dec nop jno enter dec sahf add out mov inc mov lock pushf add (bad) int inc mov clc fiadd push mov sbb add or push dec jp in mov push add testb arpl jmp pop add fisttpll jo xor sub sub imul adc jnp push push call and adc sar je jno (bad) arpl test pop arpl hlt add fldcw push add push pushf jno std inc lock push push jae xorl pop jl jns pop mov je adc push es cmpb push pop mov cld dec les aaa and inc jb dec push flds pop (bad) sub js pop mov pop (bad) lds adc sub pop cmp push ss mov sar aaa cmp lea push (bad) jb lea sub cmp clc out out mov hlt jmp add dec test push dec out mov push adc and movl lock or mov dec pusha das and cltd mov dec jne daa dec and out push call jbe mov mov sbb lock cltd dec dec add nop sbb les xorb dec arpl test jl sbb mov inc inc outsb (bad) aas mov test adc (bad) fwait dec xchg pop dec and pusha fidiv push or sysexit push push movsl mov add rcll dec ss popa mov push gs scas adc andb aam aaa arpl xor add out sbb jo xor xchg xor add sub rolb int (bad) xor cmp push in pop les rcll mov es jge lea andl pop mov dec je inc out in aas movsl dec sbb mov cmp lea add or cmp sbb mov mov repz or (bad) jne inc sbb jmp push test mov rcrb inc movb add stc scas jae shll xor insl inc lret enter mov and push sbb dec inc loop lods mov or dec and inc adc push or push ret push jbe (bad) jb adc push dec inc cld enter js je fmuls inc push stc inc sahf insl inc push or or inc xor or sbb orb lret pop mov and pop dec add xor pop or jl jnp push sti dec add cltd sub add dec sahf xchg rclb iret mov and pushf ljmp sbb lea call dec inc popa movsl out loopne jne pop enter repnz pop bnd or enter ret sbb and imul jae dec enter cli xchg enter dec sbb loopne pop mov add push fstl bound push mov jbe gs in mov add jle mov or clc push stc jno pop xor and lock loope in lock push inc mov mov xchg or sbb sbb loopne pop xor xorl fnsave xchg sbb sbb pop cld sahf dec push aam fsubrl clc sub nop (bad) rcrl pop mov add add arpl push sub mov pop pop dec nop cmpsl sbb inc (bad) dec xor in cmp mov out enter repnz es enter rcrb or mov loope xchg inc add jl out dec dec dec pusha add test rcll push mov into popa push push add loope or add push mov inc dec arpl pop sub shrb je movsl adc adc gs out shl sahf lock cmp push jb shl pop and and push orl sbb and mov cmp jo add pop stos and add test inc mov mov mov (bad) mov rep fimul aam cld adc ljmp cmp test popf pop lds pop sub push inc sub push push add jne ds or push cmc (bad) mov (bad) je movsb push les stos add adc push dec add adc (bad) cmp inc xchg push sub push ret ret ret fsubrl pop in or add ja inc xchg ds add mov emms sub inc cmp fimull cld pop test stc mov push dec inc dec and jb jge xchg mov push cmpsb push dec jo sub and add jo popa push push cmp mov jns mov and or mov sti add push aam push inc jle mov lret dec scas pop and fnop xchg repnz push fisttpl adc and add daa (bad) mov in cmp inc push insl (bad) mov loope adc leave sti adc adc add imul ja push push inc outsl je cmp test lret inc mov or inc and cld (bad) fs bswap and inc xor inc adc gs xor add sub ret int3 iret jb mov dec mul cmp jno xchg dec or les jne or dec jmp push je and sbb pop lods push popf dec stos test loopne fsubs xor or (bad) mov jo xchg je push jne loopne xlat and mov add repnz sbb pop cmp fsave xchg or xor or push das jmp xchg mov and dec sbb and imul xchg lcall mov adc or rcrb repnz mov xor sbb inc sbb add sbb aaa cmp scas hlt je push jg push sahf out (bad) adc pop mov cmp add inc dec add pop or rclb hlt mov jb jae hlt dec dec dec pop jg jge jno pop or sub mov ret sbb xchg mov xchg inc cld loopne fsubr sub nop sbb lock push sbb in or xor icebp mov sub fisub mov sti jmp lcall bound sbb xchg dec lret cmp je stos ss jmp test jne call push pop mov sbb int sbb cld push cld mov jg or insl leave nop xor je mov inc cmp or es sub int3 push aad lock add ret clc enter xchg decb (bad) adc nop std out or iret addr16 mov cmp jne push cmp fisubrl inc das ret mov bound or mov mov xchg adc sub adc mov jp gs xorl cltd sub cmp invd pop iret sub out test push je fs and jae je cmp xor sbb push loopne movsb pop and out cmp sbb add add sub add or xchg out pop or adc loopne or les jge add mov add adc ss add sbb je push jle jg testb sub xchg out adc add (bad) cs add add cltd mov xchg push outsl adc sti add mov sub lods enter arpl clc pop test or jmp int3 mov mov pop xchg xor or cmpsb cmovns inc cltd int3 sub test loop sub (bad) push movsl add lds or dec lds in sub lock inc jb push aad jns or push mov xchg imul (bad) and cltd add mov dec test mov cmp inc adc pushf inc (bad) sbb pop and lods jo cmp sub ds push pop test rolb into inc pop xchg (bad) xor (bad) xchg inc insl (bad) insb sbb mov inc push sbb lea movsl popf movsb mov adcb xor fs popa or js sbb pop xchg fadds hlt and inc add and sbb pusha fstpt adc aas je mov pop xor sub mov jmp cs add sar pop cld add adc mov xor add add dec cmp jl mov cld inc inc es push add (bad) fist xor dec sbb add pop xchg sub dec icebp and push dec push add push sub add insl lcall lods inc mov ret cmpsl fadd push test sar adc add jo pop movsl repz cmp push push cmp cmp jmp sub pop cmp mov mov add adc dec lds mov fdivrs pop mov adc sbb mov or (bad) mov push xor test int iret pop xchg clc mov (bad) fldcw jbe mov out adc cmc push mov jp in imul fisubr cli add xchg adc stc dec add js enter cmp pop hlt neg jmp arpl and adc subb dec cli and mov movb loop and movsb gs (bad) pop and push mov int pop xchg push lock insl sub xor ficoml or leave inc or lds push outsb insl xchg sarb pushf cwtl pop cmpsl test pop mulb cwtl jle nop rcrb mov rcrb cmp ret movswl push mov inc sbb in rcl push xchg lods (bad) jne mov inc out mov mov pop adc cmpsb aas add jge subl or and push dec xor movzwl and icebp dec inc enter neg (bad) jmp inc inc or mov mov sti adc sti jmp xor lret inc push push mov movq jle push sub cmpb jle loope and and (bad) xor xor (bad) xor or dec or sub push push or push sti rcll fs and fs bound cmp (bad) es inc (bad) pop das outsb mov inc lock mov mov stos push ss add scas lds add dec cmpsb movsl bound mov gs add cmp out out fwait wrmsr pusha lcall cmp shrb and mov out and cmp add cmpl lahf push fmuls pop pop dec out fs push push inc inc inc (bad) and les jno fcomps fwait add gs adc insb std stos inc jg cmp je and jne hlt sbb jae push rorb out aaa lcall add push and push sub fldenv or sub push dec inc sar inc xchg adc push lret lcall or adc lods and sbb mov fimull ja mov test ss adc je pop das wbinvd push pop push inc in ds add sub sbb mov pop mov clc sbb mov adc adcb lret or (bad) push xchg loopne in xorl js ds push pop ja inc es adc in ja sbb (bad) xor js sbb cmp mov pop or xchg jge adc push jg insb dec clc add bound add ret cmp mov jbe sbb mov jne (bad) cld cmp mov inc push test inc sbb xorl sbb add add push xor push xor add mov popa sbb sbb inc jb and inc xor xor sub leave sub andl lea sbb mov jo ret ret clc mov lret test push push push ret push inc aad push (bad) sub sbb add ja lock loop sbb adc or adc push or cmpsb imul push movzbl add push mov pop push (bad) adc lea jb mov aad sub or or push pop sub ljmp push aam adc or mov fimul or dec mov sbb and ja add add sub call inc dec adc (bad) mov addl add xor andl pop cmpsb add out addr16 mov int3 add push dec pop inc mov or dec xor push push sbb xlat ja add hlt pop mov faddl adc or loopne pop lock xor and mov es pop cwtl out addr16 pop pop sbb cmp syscall (bad) shr mov ja pusha mov inc add dec sub je lock cmp std mov mov int3 lds loopne xchg pop (bad) mov outsb roll ds inc aam or mov dec rcrb ds jg mov dec ja cmpl pop jg cmpl adc fidivr xchg pop je mov or into mov mov inc fstpt rorl inc mov ja and push outsw pushf adc mov repz or mov movsb lret call mov add xchg je in cwtl pop es test or inc xchg jmp dec outsl push (bad) push in push and add popa les mov ss xlat popl adc inc sbb or xchg ss mov enter cld xor mov xor xlat clc pop cmp sub add sbb sbb push pop add push je into sbb inc clc jmp fs sub fisttp push push lea push andl aaa push loop pop adc call or pop cmp jne (bad) jge sbb out sbb pop mov jno push jle mov and xor ja mov inc in fcomip xor sbb nop cmpsb or stos inc (bad) enter push dec or sub ficom scas call adc mov sbb jne imul push push or jo dec and mov in push in iret adc or push addb inc sub mulps movsl adc cwtl xchg movb push incl ja cmpsb push add je mov inc xor xorl shll dec mov lods mov arpl xchg xchg out adc push stos mov adc xor pusha (bad) mov notb pop xchg jb jo cmpsb mov xor jne fstpl dec mov mov cmpl test popa jns push push cmc inc or mov inc aam pop xor jp cmc adc (bad) sbb shlb add sub xor push jle cli push sbb push neg int3 cmpsb data16 and sahf into insb add mov and movsl add in cltd bound cltd shlb mov cld lock cwtl daa cltd ja add (bad) stos shlb mov and and loopne sbb add or mov cmp lods sarb mov pop mov test sbb jo sub in xor arpl inc and ljmp sbb std lea jne pop add test add dec or jl rorb xchg pop mov (bad) cltd add in cwtl insb mov addr16 movsl fdivrl add push xor jl mov jne push mov xlat xor sbb inc mov in das sub sub mov mov repz icebp nop rorb and test in mov mov adc hlt and andl xor mov ds flds and or inc add sub xchg bound and call xchg push jge xor cmp daa orl adc mov xchg adc movb fldl lods add adc lods add (bad) addr16 iret cmpsl sub mov jo pusha jno jae mov add mov call add xchg add cmp cli (bad) push push and mov cmp mov test test cld or imul pusha lods leave sub mov pushf ljmp adc mov dec mov mov mov push sub orl add xchg jg loopne inc xchg add inc pop pop mov mov or aas jmp xor aaa or lods jge lods (bad) lret pop sbb je add add pop call or cld frstor nop ljmp (bad) push aad aas dec add adc pand mov mov inc mov xor lret add cmp jo fcmovb mov push push cltd sbb pop leave stos lods sub movsl dec ret cmpsl arpl out (bad) cmpw xor fsubrl sbb mov jnp xchg sbb jmp pop pop cmpsl pop jne adc mov cmp xor sub nop xchg inc std and push sub add cltd and jno jg pop les push cmc insb je dec add sub jnp daa test into add adc mov movsl test lods xchg pop push cmp cld dec mov scas lcall jecxz jbe mov cwtl test fstpl outsb add xchg add rolb mov jne sub mov cwtl test xor or sbb roll push emms (bad) dec push mov sub subl leave cmp inc or adc les adc lock and (bad) xchg sub inc fwait das dec add mov in xchg es adc or mov adc call in xor hlt cmp hlt mov adc orl cmpl (bad) incl jg (bad) adc cmp je les imul dec insb xor sub pop into aam sbb fsubl std mov out dec or jmp lock and or fadd ja (bad) enter mov pop sub and jl fstl je mov xor ss into sbb leave or and pop inc xchg sbb cltd rorb dec rolb mov mov pusha lock and dec mov xchg and les xor sub or inc push mov dec jmp xlat mov push cwtl test scas push add mov add xchg mov iret repz mov dec loopne xor mov adc and sbb ljmp pop stos mov pop ror imul dec inc leave ret (bad) mov insb dec pop xchg mov adc lcall addl jnp xor inc xchg xor add pop sbbb aaa test ss or push dec test dec insb inc lcall sbb shl rcrb clc pop rcrb adc jae inc xchg pop or inc and mov ja arpl xor mov inc inc fs add popf add (bad) aaa es mov jecxz,pn (bad) fcmovu outsl aaa sbb inc mov adc stc das adc push adc stc aaa pop jns inc inc mov js mov push movsl les jne pop mov aam cmpsl test addr16 shl cmp sbb bndstx lds or jae insb add or and nop aas adc in adc loopne cmp loop cs xchg fcmovb and data16 push pop pop test mov jl mov xor call js xchg cmc sbb mov push imul or mov negb cmpsb test imul out rorl cmpb fisubl les inc in pop out sbb xchg insb and adcb or mov mov pushf not stc (bad) cmpl push js or dec pop xchg clts cmc xlat inc sub dec rorb add jb loope test fiaddl adc xchg fistpl sbb and or cli adc pop cmp clc pop xor adc adc shl frstor ret or push cmp push cmpl jo (bad) lock xorb mov rclb or cli mov inc pop mov lcall add bnd pop bound icebp imul sub inc cmpsb lock in mov inc xor mov sub lock fisttpll clc jne popf aas imul xchg add add pop and lock outsl add movsb mov (bad) or push pusha cmpsl test mov cs hlt call or loop int xor mov jmp adc sub adc test mov jo test aaa inc inc mov xchg ret dec sub sbb cmpsl cmp push cmp inc (bad) dec clc add mov mov sbb mov insl xor ret xchg push adc mov jg inc push or xchg sub rcll jo or loope or inc adc imul inc pushf lret add or inc jge testb push jp orb adc outsb mov jl xchg xor dec clc add mov push dec lret mov (bad) fcoml mov cmpb cltd add in cmp into add add adc add popa sarl mov aaa sub xchg mov add pop jle les jnp mov xor mov and mov push sub jnp inc mov jno sub fnstcw mov xchg in lods cmpsl mov add fsubrs adc subl mov mov dec sti add ret adc call jo mov mov sub scas jmp dec or add sbb push cmp jge push mov ret es cmpsb pop add sub fwait lret add mov insb adc lock loope mov and aas sbb push and sahf xor lods xchg dec mov mov popa mov neg imul xchg subl int3 shrl jb add outsb insl lahf add pop sbbb dec sbb cmpsl xorl ror mov test int sbb jl xor cmp sarb add iret push repz inc cmpb dec (bad) adc xor pop adc imul je lock ljmp fs stos mov pop loopne in jo and mov pop adc clc ss or test push call mov mov dec nop scas inc xor nop nop inc mov repz sbb (bad) xor sarl add rcrb js lods xchg jne int3 adc sbb inc add (bad) insb int add add out jge sbb mov add push add fbstp and pusha imul sbb pop pop cmp or insl inc jmp out mov es fnstsw sbb adc sbb jae xor dec pop or adc or sbb xlat xor (bad) sahf push push lea jge dec rol clc (bad) mov daa adc ljmp mov fidiv in inc shrl test sbb hlt pushf add add outsl pop dec sub dec cmp push xor leave mov daa rcrb cmp lea lea adc sbb cmp shlb sbb pusha movaps incl jo and (bad) out cmc cmpsl push push push outsb cmp xchg movsb xchg push and nop or or adc leave nop cmp test adc add sbb fldenv aaa adc adc cmp mov inc add add hlt inc sbb into lret and jp fdivr adc daa lock loop jg sbb popa enter cmp push xor dec sub lahf adc jge daa jo add ja ret sbb ret mov jo lea outsb push inc add movsb adc add pushf (bad) mov dec movsb add in je inc xchg add mov loope imul cmpsb stos inc test rclb inc enter loope pushf (bad) ret movsb loopne add pop sbb pop sub adc lret test inc xchg or dec mov movsb jle int3 lock mov neg addl (bad) sbb cmovle adc adc (bad) jno pop push fisttp sbb into stos aas mov andl push mov inc decl sti jle sub push adc sub push push push push push mov cmpb popf mov cmc insb adc pop hlt addl or cmpsl cwtl out jg movsl cmp or mov dec jle ficoml inc cmp push cmp xchg mov inc sub sbb jecxz arpl adc jp fcmove in (bad) sub pop push push inc or mov mov push lock mov sub mov xor xor inc add mov je or push adc jno jo xchg dec popa jnp xor sbb inc add adc pop lret and (bad) add out lock push les (bad) ljmp add push lods mov sbb adc lret dec clc add dec loopne push jno and sti mov xchg mov cmpb inc jne sub (bad) adc push rcrb adc push test adc mov iret (bad) or nop (bad) pusha jmp adc and push add add xchg (bad) enter add add jns inc inc jno push inc mov or and pop pop pusha or cmp sub adc cmp pop sbb adcl pop inc cmpsl adc adc jg pop inc or arpl cmp add stos lds mov lock push test push sbb pop jns jmp jns out (bad) bound (bad) cmp jle icebp (bad) mov andl pop js mov mov neg mov push cmp cmp stos rolb jle lea sahf idivl fucom test jle xchg and orl rolb insl mov mov inc mov popa je aaa xor (bad) adc or mov jae mov mov lods cmp cmp push or lret loop call adc inc movlps cmp lods and inc push push inc jge pop ja idivb xchg jno test mov cmpb in (bad) xchg iret cmp addr16 mov add jge cs cmp jg cmpsb xor or mov loope icebp fcmovbe jno (bad) sub and popa icebp sub xor movsb mov (bad) push dec dec cmovnp sbb iret pop sbb (bad) inc mov cmp cld (bad) push mov (bad) lock xchg jmp in push mov les je orl pop (bad) sbb xor sub pusha xchg mov and push adc pop add int3 test scas xor cmp cmp je add inc in adc jne push fnstsw gs sahf push daa sbb outsb or in sub jmp sbb sub inc sbb sub xor lea cmpl sbb loop pop shlb mov and sub cmpsb mov push sbb mov add pusha sub nop or insb cli xchg cmp les pop enter lods arpl adc xor addl mov or xadd push or dec leave add push mov mov in push jmp (bad) sub mov sbb jle sub je adc xchg inc adc push stos and sub (bad) and adc or test jo movsb cmp sub adc loop xor psraw push scas inc and sub xchg popf push (bad) cli sub cwtl ja push add or push push fsubr and jne and (bad) je mov sbb dec imul xor xchg push push cmpsl jne dec jbe repz lret in jne js popf sub in rorl xchg push lret (bad) dec (bad) lock dec stos xchg inc outsl push mov (bad) cli add enter mov adc rol and xchg mov xchg roll mov not cmpb mov mov and aad mov jns add es and add pop inc cmp push dec lds mov push push and jmp or js jae rcrl jecxz jl mov dec xor xchg ljmp (bad) cltd (bad) js inc rcll int lahf adc pop sbb push cmpl add fdivs movsb (bad) mov popa inc int3 jmp cmp movsl cmp pushf mov cltd mov in add xchg lock mov jge xor ret rclb or gs es mov mov sub sub jne (bad) and inc and cmp and testl vpsubusb and cmp shll pop fs pusha jno outsb loope aas cmp pop dec sti and sub fs aaa (bad) jl test rorb dec loope add mov cmp mov add (bad) sub addr16 lea adc jne sahf push in fdivr (bad) sbb add mov subl or cmpb sbb in das inc cli mov outsl jle mov lds cmp and and add pusha push add repnz mov sbb lock xlat cmp cmp push xchg xor jae jo rcll sub das push fucomp adc ret lcall cmp mov cmpsb inc pop insl pop addl dec ds sarl in add and push add pop pop sub shrb in shrl xchg (bad) mov xor mov or jo inc clc mov push push jp xchg fild cmp sbbb mov pushf cmp jne outsb pop pushf push xchg ljmp in xchg mov pop fadds xor pop (bad) rorl addr16 mov mov mov cmp cmp imul xchg stos inc sbb push outsl in fmul nop cmp inc add and jp push xor test add aam mov mov jns add jno xorb push ss jo adc pushf aas cld sub inc xchg push adc addr16 int3 sbb icebp adc popf pop push cmp sbb jo je xor movsl jge subb ss sub scas sbb pop jno cmp sbb imul das jbe or test cmp vpsubb rolb pop add push cmp mov cmp arpl cmp lods or hlt pop fmuls sub in push sti subl ret pop jae (bad) dec outsb mov xchg or xor sub shrb imul pop orps ror or bound fidivrl mov arpl add and cmp das outsb push dec and push test cmp clc dec insb insb movsb cmp data16 dec jo push inc or rclb adc adc inc aam sub and pop cmp cmp jge sarb pop inc inc and test jne mov mov pop xor (bad) jo scas cli lcall adc or ljmp mov pushf pop push sub or test cld mov adc mov (bad) cmp sub jne xchg in test mov rcrb sti or adc sbb arpl mov mov push and lahf jne cmp cmp xchg inc inc xchg fcomps mov loopne outsl in xchg xor cmpsl push adc sbb ljmp sbb inc rclb fidivl das xor push inc insb lock dec imul xor outsb pop adc and fwait add adc cmc into push jne push push jnp sbb movsb adc jmp pop push push faddp fstp jne mov add adc pop test mov insb cmp add fbstp jo push jno hlt popa sub nop add jmp dec inc cld xor sbb adc (bad) inc outsb adc and or daa scas jbe nop cmp inc or ret js inc jmp sub jmp imul sbb bound clc sub push and mov mov mov lods pop js mov addr16 mov push inc push and dec add iret mov shrb frstor lods sbb jg sub adc lea push lea lea test pop cmp ljmp sbb (bad) lods xor mov add add rclb xchg push push push jl mov mov jno out adc push movsb adc xchg lock inc outsl fwait pusha cli sbb mov mov sub cld lock lret je xor loopne jae mov inc sub repz roll push mov and insl and or ret mov sbb loop (bad) (bad) xchg dec inc pop adc imul shlb stc cmp push int3 test js inc or cmpsl add sti movsb inc pushf shrl sbb mov dec out push fimul push mov push mov lret ds pop or jmp jge mov and fidiv (bad) lcall ljmp rclb jns es popf (bad) xor inc add push mov jmp dec pop or xor insl lds ljmp mov int3 mov popf cmpl add (bad) xchg push dec enter rcll cltd pushf or or adc lret popa test xor ja cmp dec inc dec push mov dec call (bad) fucomip xchg mov mov jo jne lea add or or or lcall or adc imul mov loop push test test cmp mov add mov fwait cld mov jae cmp incl testl pop xchg je mov (bad) push inc rcr push adc xchg cmc and dec ret shlb std cmp je jnp jne add mov push jne push pop cmpsb bound xchg dec shrb add jmp mov mov adc jmp popa jmp and imul fnstenv mov xlat test sbb sub lds mov fidivl and xchg fisubl jnp cltd out inc loope fist pop mov arpl (bad) out rolb mov push fnop andl jmp fnop cmc jns aam adc ja adc add and pop cmp and cmova jne dec xchg test imul xchg les fadds xchg or push js mov pop inc bound loop add je in pop adc add cmp je jmp add adc aam xchg sbb or ja enter (bad) lret inc inc add adc and mov mov out lcall daa xor jmp inc loope adc inc shrb jbe xor mov add aam adc (bad) and mov loopne ss sbb jge repz mov cltd adc testl mov push (bad) xchg pop inc jnp mov sbb inc sbb mov fistpl jno push xor daa dec dec jmp out add and aas mov addl or in mov jl jne rcrl jle shlb js mov rolb pop lock in cmp insl lret or dec add imul xor (bad) xor and hlt sbb pop loope mov mov mov mov mov loopne jbe cmp add sbb xchg lock jne cmpsl (bad) mov popf adc outsb mov sub dec or push add mov stos adcl dec inc fmull adc add cmp in dec adc inc not and push push or cwtl mov (bad) pop fmull ret les stos cmpsb and inc pop rcrb pop add pop and inc ret and jg cmpsl and push mov add add imul sub (bad) jmp mov pop cs mov mov inc (bad) cmpl inc sarb sbb (bad) rolb jge cmp or insl sbb push pop or push sbb test rorb xchg mov daa loope xor adc lret out push int add jmp inc rorb jns pop mov cmpl mov and inc inc je out je dec push sub push cmpb rolb mov mov push stos jns (bad) mov fadds sbb nop jge std adc jbe adc sbb xchg sbb inc jecxz pop adc pop xor fidivr mov popf mov push outsl out push adc push ret jg popa inc dec mov add xor mov xchg rorb adc ror and ljmp xchg add lret add fimul dec aaa fcompl ret xchg xchg or fcomi add mov outsb and mov hlt xchg xchg jno out mov fiadd pop xor adc fwait mov shl adc imul add test and push push or adc adc popa or mov jmp sti nop mov outsl mov jne push enter push xor rorl jecxz or pop xlat cmp push dec inc adc aad jecxz movb sahf test xchg inc lods loope pop mov cmpsl loop mov add dec stos jmp popf dec mov sub push push clc es ljmp hlt aaa sbb inc mov (bad) jne pop ljmp lock and sub jb xor add jl (bad) mov pop and dec aam out add cmp roll adc push fwait cltd outsb pop dec clc cmp divl dec jne gs lods mov (bad) addr16 xor jg sbb jne rolb jmp or test (bad) das mull mov (bad) xor jmp push ja aaa sbb pop enter faddl adc inc push pop or movsb add repnz or daa inc sub les inc adc mov add dec ja sub inc movsb out scas sbb and add xor pop jo test or xchg cmp push daa cmp and call push mov mov pusha dec repz and int3 push mov cmp sub mov and dec pop push xchg stc movsb mov push sbb and sbb add push pusha add dec push or les aaa add adc in aas je mov test jo push adc sub and or push in mov inc decl imul or aam push push adc je popl imul loopne dec push (bad) sbb mov push pop mov and jl pop sub add mov cmp ret dec mov movsb mov xorl xorl pop add xor stos mov push xor lds cmpl bound jmp mov ss cld inc jle movsb mov jne add jne inc test ret and or dec pop inc cmp mov xchg sub enter adc cltd push js push iret (bad) push mov cwtl hlt das dec loope push loopne inc sub pop das cld or mov les add or dec xchg (bad) and outsb mov aas movsl adc addb mov mov mov or imul popa adc mov or gs pushf mov or xor cmpsl cmp (bad) adc jp (bad) ljmp jo lahf outsb jp and inc inc inc add inc lock mov cmp lret pop loopne mov jecxz or lahf dec lds mov inc pop and cmp dec push jmp call lds xor in xchg cmp dec sub pcmpgtd xchg imul out mov add aad push mov adc cli sbb (bad) xchg sub jp jbe add xor pop sub push or pop mov push daa adc stc or nop jp ljmp push repz clc mov xchg jle pop mov std mov inc add inc add push add pop xlat lock add mov sbb lret orb (bad) inc rorb in in jno imul mov movsl cmp or sub or lods rolb and push sub add jmp divb add pop adc add push loopne (bad) cmp adc xor cwtl test in add mov rorl push adc inc and cmp jae inc or jge or in ret or push inc xor mov call scas clc pop adc mov adc stos lods ret dec adc sbb add xchg stos les fwait (bad) sub test xor or stos arpl ret loope test repnz xor leave aas pusha shll jns pop add cmpl adc pop push xor fs add mov outsb adc addr16 imul int3 add dec and std mov push push test push ret shrb mov adcb fisub or pusha movsl add rorb (bad) (bad) popf (bad) xor hlt cmp or mov xor sbb scas mov sbb out xchg mov mov out out push data16 jmp (bad) jecxz push cltd mov repnz out xor jge push cld pop fstl in sub mov mov imul popa mov dec xchg outsb mov call and jo loope and mov and sub pop dec repz sub jmp add clc ds inc cld mov adc inc out rol rclb shrb lods jb dec sbb cs jg inc push push hlt imul jbe mov adc add sbb and or xor inc and sbb xor inc cli push test add sub roll (bad) push jge sub mov push mov movsb call in or loop fadds hlt or adc or inc into pusha sub fnstsw repz pop xchg xor xchg cmp inc dec jne pop js movsl adc dec jne jae sbb test push addb push fneni(8087 dec push sbb inc xchg lret and inc and push movsb and dec dec and inc movsb mov lock (bad) enter idiv (bad) mov add loopne adc jo push syscall shr jne lock sbb pop sub dec or rcrb sub movsb inc sub lods jg xchg sub sub push cmp sub test insb jecxz mov push push jg insb jle loopne or mov xchg pop lock and adc add inc mov inc adc mov add add sbb jle sub ds stos xor in (bad) jge xchg and imul mov mov iret sub xchg adc imul gs inc xor xor test adc jo mov push aad inc add ret xchg pop and xor mov pop in and adc stc dec add inc xchg or loopne add mov sbb push inc pop mov sbb push cmc setge mov movl pop jl lcall je or je and inc dec call adc test movsb jbe and or outsb sub add jge sbb ljmp enter enter (bad) loope dec andb xchg add and push jp adc cmpsl inc mov add cltd in cmp stos push sbb dec (bad) push dec and push and lock fisubl int jecxz cmp pop pop fwait mov dec sar repnz ss roll aaa in lock dec sar jns adc jmp cmp sub xor pop mov lahf push cmp jge sbb inc cmp jge fisub push or add mov xor shrl xor fdivrp (bad) xor ret jae test pop jne mov add push sub cmp (bad) js mov adc psubusb add push cli xor dec add (bad) ret or push (bad) icebp inc cmp push repz push inc push dec inc imul pop nop repz add xchg lock dec lock (bad) (bad) cmp mov lea xchg inc adc and cmp les xor divl jo inc fistp (bad) xor dec shl or jbe sarl insl cld push movsb (bad) xor adc call test dec mov (bad) imulb insb enter mov cmp pop adc (bad) mov je,pt push sub inc push (bad) fldt jo movsb cmp dec insb imul or stc mov mov cmpsl and notl jmp das inc cs dec popf movsl or mov mov inc and xlat add sub call sub ret shlb (bad) sub enter scas lods push popa pop pop das ret fs cmp loope jecxz sub xlat sbb aaa into iret push dec leave push fild push outsb inc pop inc lcall or cmp add push add push cld add sbb dec cmpsl movsb and (bad) (bad) repnz xchg enter stos test or repz ret jmp adcl hlt test or pop addr16 and stc pop lcall add aam ljmp out inc xor (bad) cmpsl aas mov daa testl jge jecxz jne sbb xor mov out jl faddl aam sub subb mov and pusha jo das mul sub cli in and xor push stc add or mov cmp jg adc inc jo xchg lea sub addl xor adc por loopne rcrl inc jecxz test mov insl pop sbb jns aas push orl fild add jo dec clc xlat lea imul adc sbb std and mov stc sub add jecxz xchg inc incl cmpsl jbe xor adc iret mov clc sub mov das sbb or ja inc push (bad) push repnz pop push pop mov mov sbbb cmp dec sbb jbe js pop xor in fisub sarb pop pop sbb lea pushf or icebp out or in push pop mov dec adc ss or stos je or inc mov add mov mov xor dec mov xchg inc cmp outsb ret insb insl movsb gs stos outsb pusha mov outsb das jns push mov or adc loopne cmp cwtl aad or sbb jecxz mov fwait movsb (bad) orb sub roll pop icebp mov insb inc mov dec flds out test inc push or cmp mov sbb or test das cmp cmp mov out xor push and cmp inc pop mov fiaddl jp lahf and mov mov (bad) pop arpl js sbb and or or popf or or pusha outsb push and loopne test jae popa push stc and mov mov popl es push je rolb mull xor or je push in adc jb push jo adc xor inc rcr fmul pop push add push xchg dec or add adc xchg hlt andl mov jne inc sbb mov xor cs insl inc shl fistl pop loope push mov cmp stos movsb adc add push (bad) add (bad) (bad) jmp mov xor or pop mov adc push in cmp dec and and push jmp ljmp jno adc xor in imul cwtl repz test in loop aaa pop dec (bad) loope inc sub sti or bound inc cmp aam jnp outsb sbb mov xchg push jb push ds neg mov push rorl or pop add xchg or push or or orb test test repnz dec jecxz xchg push cld loopne dec xor addr16 or add shll or dec cwtl inc adc rcrl adc cmpsl fiadd fdivr pusha or adc add push in lahf mov mov jp jg dec dec (bad) pop out or push icebp ja inc mov lods icebp pop pop or and xorb fidivrl and cwtl push fsubrs cmpsl or mov insb add mov inc mov inc stos dec cmp aaa pop fild push dec cmp jg mov and xlat inc cmp sbb aaa in xchg mov pop and inc and stos sti dec or cmp or add push xor out add test sub (bad) sbb and sub out hlt rolb mov sti jno pop and iret cmp sbb mov add repnz sub nop push mov imul or daa lahf push xor (bad) rcrl inc lcall xchg rcr pop sbb (bad) mov js and sbb pop orl add leave dec xchg push add fs xchg into ds mov cmp loopne (bad) push add mov xlat sub int add cmpl add out lods sub xor or and add add (bad) mov test das test psubw xor cvttps2pi adc test xor adc add inc enter push fadds imul pop pop or scas sub fldcw or dec mov jle push xor fldl dec or sbb inc cli mov test or xchg mov or mov cwtl rorb insl movsl outsl lock cmpl es xor sbb (bad) in push inc loopne xlat pop insl rcrl int3 inc dec rclb scas sbb outsl xchg inc and jmp or das pop add and jle cs xchg jmp jae push fwait nop insl pop xlat jle lock call pusha cltd pcmpgtb in call packuswb dec clc sub xor sbb mov mov adc inc xlat pop push inc pop inc lea mov pop xchg jno xor adc fs jne or sub mov mov push das jmp push insl adc pop scas jge test insl inc add iret cmp xchg push and les jg push (bad) mov pop mov mov movsb cld or es lods sbb add add push das mov pop and mov push inc xchg mov aaa das xchg jbe sub pop sub add sbb ljmp aad adc adc in push pop push mul test adc ret adc dec xor ret pop ret test jmp aam mov int3 jbe test or fildll insl popf rolb push sbb xor adc push push pop sbb mov xor sahf sub push push pop push pop lret je or xor sbb inc xor fisubr testl mov stos inc mov push mov nop nop or add test xchg imulb cmp mov push dec xor cmp xor pop in xchg pop pop sahf (bad) jb lds lea movsb lock int3 pusha and cmpsl flds nop hlt cmp mov push (bad) ret (bad) pop leave and dec add dec jb imull jb ds pop sbb and cld push push mov lea scas pop pop dec cmp sub incb push xor cmp enter loop cmp cmp dec sahf dec jo xchg xchg nop add sbb rcrb adc dec fisubl rolb shrb rcr dec adc sub loope rep cmpl xor ss add mov push call pop xchg addr16 (bad) inc sub jg xor pusha mov test mov out jl or jle (bad) mov jo es nop mov pop xchg mov sbb int3 inc mov jne out imul fnstenv xor add or jmp dec adc mov call or pushf mov mov and push pusha cmp sbb lcall or mov mov add sbb mov jne sbb adc sbb pop lahf ret mov pop mov add mov mov pop out repnz sbb sti xor pop xchg push test je lea or icebp inc lret (bad) rolb loope add outsb add push add lea jne sti (bad) jecxz sbb movsb std scas popf adc or cmpl mov lock loop jnp mov add lahf popf mov mov mov ret dec cmp xchg std adc sbb aas movsl jo popa or (bad) or push out jno xor inc adc movl mov inc and popf orl arpl xor and dec ja push adc mov sti gs adc les push jns jne jae pusha jl fiaddl and in and mov push xchg fs adc adc data16 inc or cmp inc fcomp and pop add add lods lea pusha cld jb push push xor cmp (bad) mov dec pop jbe mov std push add push ret jne add sub rcr pusha xchg dec xor jae je mov data16 sub pushl pop js or pusha sub jmp cmpsb lods dec push dec adc cmp or and or fwait pop pop sbb sbb rolb mov and (bad) movsl adcb add jl incl pop lret int3 insb pusha das insb sub add inc pop adc add push sbb xchg mov ja repnz add cmp pop sbb pop loope sub mov or push sbb sub test out dec (bad) or nop pop sti sbb (bad) dec lcall (bad) xor mov adc and lea inc pop inc (bad) fadds int3 xor push pop pop and mov xchg icebp or cs push push es mov out (bad) mov ret push mov clc dec rorb orb loopne mov loop or dec mov and dec jmp mov inc jae (bad) adc fcoms sbb pushf fs inc or addr16 outsb sbb mov sbb inc fs rcl dec scas add sahf pop pop insl mov pop sub xor jo std mov mov xorb sbb ret jle jl dec push js or sub sub data16 outsl or cmc nop push in jmp and insl ss adc pop mov inc int lcall push push sbb add cs push (bad) adc cmpsb cmp sub mov mov ja jmp sbb xor outsb mov pushf sub jo pushf rclb test mov (bad) mov or jne gs cmpsb ljmp add (bad) push dec cmp sub in push add repz add xchg push pop add scas push mov add sub frstor inc or xor (bad) mov (bad) lock sub pop add insb insl jmp sbb pop lea xchg mov add adc gs add add pop inc pop add mov pop inc popa (bad) pop cmp cmp dec mov jnp test into xchg aam add in fadd cmp mov arpl add jg dec (bad) sub lahf inc cmp je out add sub xor in rcll inc std mov mov jb cmp lock fisubrl fmuls subl insl push sub push add divl pop outsl fsubrp dec sbb push mov (bad) lock add in fldcw mov pop into mov subl imul push xor fcmove xlat mov lock flds fisubl pop sbb sub (bad) jbe pop mov pop adc add popa and xchg movsl add xor (bad) sbb je sbb dec inc int push test pop sbb lods and push and idivl jbe (bad) add rorb aaa dec dec push adc push adc xchg pop lret add arpl ficomp xchg jp popa and cwtl ret ret jmp (bad) sub cltd movsl push and pop mov mov rcpps or cmpsb fistpll cmp cmp jmp out cs push cmpl mov addr16 adc pop push add push cmp cmpl cmp ret pop arpl pop lahf xor push cwtl sub inc sub test ret imul scas or (bad) lods (bad) jo mov bound jne push jbe out inc xor fsubs add imul pop test xor sbb push pop and mov mov leave je in or adc imul in jo or jmp inc cmp jg ret and fdivr or or or aaa or or xor es cmp mov hlt movb js idivl call pop pop xorb add sbb and pop xlat aaa inc clc xchg jmp push pushl pushl or jns (bad) pop pop test mov inc pop cmc push pop loope and pop pusha push mov mov sub pop scas push in jecxz push (bad) mov dec call insb and aas pop mov xchg dec sbb or daa lds sarb dec jge lods or data16 (bad) sti lods jne pop add xchg or xchg xchg jns inc xor inc xor lods je popa subl cwtl mov pusha xor cmp inc pop sbb call fsubrl je or sahf addr16 or add mov cmp daa cmp ret adc rcrl xorl dec clc fldt dec aaa (bad) (bad) arpl daa xchg xchg pop xchg jge in gs push add cmp lahf lret insb cmp (bad) mov add and adc shrb xchg (bad) cwtl xor hlt adc push jb or sub pop icebp or xor push add sub sub add pop jmp jns pop add xorl insb std cmpsl push mov dec inc dec dec dec inc dec dec push imul pop cmc stos mov mov jl dec adc adc in mov inc or popl inc sbb cs mov cmp and movb rolb rorb movsl lods addl push fcoms das mov jg and aas pusha lcall (bad) lods add adc (bad) in je jnp in mov jle push inc dec lods movl mov xor xor cwtl mov cmpsl cmp shrb push aam dec pop inc subl inc addl pop xchg lret popf test loope xor inc add (bad) inc inc lcall jae je sub sbb test data16 sbb ja aam fwait mov lret popf and lcall dec mov outsl dec pusha jo das ret inc movsl jecxz xor lods mov (bad) mov (bad) jo sub add fdivrl in fsubrs and and imul inc mov sub test adc movsl sub sbb mov or push inc ljmp inc adc fwait add sbb jmp push insb inc js test pusha fbstp sub aas add (bad) stc and jne fnstsw bound inc xor je cs shr js mov rorb scas nop adc inc (bad) cltd inc nop daa pop inc jb jp mov mov and inc ja mov jle lea jle lret or inc add in pop (bad) push or inc negb dec xor in fiadd movsb pusha add and push and dec (bad) sbb pop xchg orb dec leave push jp (bad) inc sbb adcb push fs rcl aad or aas incl out mov or xor dec add push mov mov push in adc mov sub in jbe mov push jl inc inc lea mov sub pop xchg pop sub cs dec mov pop fidiv jecxz rol loop adc nop cmpsl xchg js push and inc sub aaa mov insl cwtl xchg loopne es cmp xchg mov or cmp and addr16 cmpsb push or and push or popa mov jo clc jg xchg sub cwtl inc adc lcall jo subb or inc push lret inc ja cmpl dec mov mov sub fbld mov sub add push pop and inc dec nop rcrl or push call stos sbb cmpl int lret fiaddl daa (bad) incl xchg movsb adc pop in in cmp sub out and push mov dec aam loopne loopne jecxz xchg mov sti and decl stos add push fistpl enter push test adc jp jp bnd dec pop sub leave das add test mov cld and or cmpb sub es pop and sti add mov in sbb test mov loop sbb inc xor and call test iret loop imul xor mov push push xchg push jbe pushf push pushf dec fs pop xor xchg sbb add les xchg mov mov rorb jns mov mov push dec push pop adc pop aam ja add ret ds or mov inc push lds daa xchg mov test pop sub call and fidivrl pop cwtl sarl cmp loopne mov call ljmp out cmp sbb lcall loopne hlt add jns les aaa test xor paddsw mov daa xor dec push push cmp sbb imul pop add dec gs add dec ss dec sbb add data16 and imul dec cmp fcmovnb loopne pop jb cmpsb sbb xor adc lahf add xchg pop push add fldcw fistp dec out add ret cld xor (bad) repnz (bad) cmp jp push push adc push or fstpl jecxz clc dec mov cmp mov xor je add mov add sub movsl imul or rcrb movl (bad) sub sub lcall sub add mov xchg lods sahf pop mov movsl scas or sub test mov pop or cmp jae and mov inc adc in daa cmpl sbb cltd adc in mov xchg mov rcr dec jne cmpsb jbe inc (bad) js cli clc add push cltd loopne add mov mov pusha std mov inc cwtl aaa push sbb insl sahf dec or das push sub mov arpl mov mov fisttpl dec cmp and add sub adc add cmp jmp out dec pusha push (bad) adc aas cmpsl ucomiss cmp int3 xchg push jae xor test data16 inc cmp and add adc xor loope pop xor dec outsl pop (bad) ljmp test push (bad) dec inc sti dec icebp rolb push shr adc xchg and sbb adc in decb jnp sbb into or lods and or imul or jne (bad) pop into push gs inc fsubrl popa add sub ret cltd dec jmp xor (bad) out sub jmp push in mov jo clc mov add xor cmc jmp and outsl fsubs or fsubr insl inc mov cmpsl add inc or movsb add pop inc sbb fs test leave cmp pop xorb into cmpl sbb add inc push outsl adc and mov je jp mov or mov hlt add push push sbb iret sbb mov adc sbb stc (bad) lds inc sub inc (bad) lock and inc cld sbb inc add pop shrl ja test rorl loopne icebp shll cltd (bad) adc adc xor sub imul popf rcll or lods and xor mov mov test insl jmp mov movsb push int test das int3 or repnz dec dec dec bound adc add xlat or inc inc mov jnp pop cmp je and sbb adc pop sarb pop cmpsl popf fmuls pop int push leave movsl xchg scas cmc jne mov dec pop popa fdivrl push xorl and mov mov movsb mov sbb adc mov xor (bad) sub pop es jmp sub adcb add adc mov neg mov dec xor and cmpb and bound cltd (bad) push jecxz pop clc xchg inc add in sbb or loop (bad) pop xchg jg in icebp mov mov sbb test lock loopne sahf sbb icebp pop call sbb push js js jne add inc push xor cmp lods pop pop cmp lret adc cltd loop push inc int3 repz mov movsl jne jns add popa (bad) or out loopne xchg and outsl pop pop mov in in dec or outsl fimul rorl mov js into movsl jp push or push xchg push jnp and cmp push mov push dec and cmp pop orb int3 sub or ja mov outsl inc jl cmp mov cmp lahf xor cmpl pop cmpb push push sbb mov aas push mov sub and jnp sbb inc xor sbb popa cmovbe inc jns jns xchg mov jmp sbb ret xor mov imul call jo adc xchg mov int add add dec sbb stos popf inc cli (bad) call xchg mov push sahf aaa aad push je daa cmp sbb fsubl mov pusha add or pop (bad) jmp bsf adc (bad) adc adc fcmovne cmp pop xor sbb loopne iret lods push cs jno xchg push push bound or xorl insb adc in or stos rolb and or add add xchg dec (bad) cmp and pop popf xor (bad) jne lods or sbb xorb clc push (bad) cmpsl jns push pusha lock test fcoms fsubr or adc mov xchg outsb outsl mov fcompl and pop push jne rorb (bad) pusha push sahf xor xchg jns add out aas enter adc inc mov sub ret inc movsl dec add and lea outsb mov lods add dec popf xchg dec loopne push andl cs loopne lock or sub sbb sub inc push call mov mov inc mov (bad) ret push mov (bad) nop lock adc clc sub fistp stc (bad) or shr push sbb push ja out mov or push fsubrl cmp adc std loope in jns adc pop pop outsb imul mov mov pop lock scas inc daa insl cmp mov mov or (bad) add loopne test movsl sub mov inc pop aas clc clc sub inc out sbb daa lods mov mulb adc cmpb test inc fstp in and adc inc jbe sub fsubrl out aas mov pop mov sbb sbb divb divb push push add pop stc sub out jo xor or adc add clc dec inc xor ret jle js (bad) jmp add (bad) das sub mov data16 cmpb and adc mov popa sbb inc iret jecxz lock out pop inc xor mov test and dec or daa add (bad) repnz push push dec dec and aam cmpl cmp addr16 lret xchg aam lds push scas jg loope push (bad) movzwl push push scas je fld mov pop jecxz xchg jo or stc dec sub pop cmpsl (bad) lret mov frstor ja mov cmp add fldcw pop je mov xchg sahf fildl repz xchg lock data16 sub push sub sub add lcall add sub adc iret aam idivl rolb stc enter jle mov ret xor or mov mov call sbb andl inc jne and mov movsb add fdivrs (bad) dec push adc inc pop iret adc push enter inc push inc dec cmp inc xchg ret xchg xchg and mov loopne addr16 mov test ljmp adcl test jne and dec pop xchg je shlb adc pop mov dec movsl in or mov dec (bad) aaa loope das (bad) sar pop xor pushf cmp je mov pop in mov jg push push nop cmp inc cmp add push jg movl aaa hlt inc push xchg roll int lods andl lods rorb mov adc dec xchg add ret pop sub pop ds jae inc sbb xchg cli imul sub lcall sub or jl sub inc adc xchg imul jnp or insb jmp cmp inc in mov sbb jo movsb pop cmp pop adc adc adcl roll syscall pop cmpsl or clc and add push adc and daa or adc pop xchg or add sub jmp mov or arpl mov rorb ja ficom lea inc mov adc cmp push sbb lret (bad) pop popa add sahf test add adc jne in adc push test pop or std or adc insl cmp xchg fdivl sub fs outsl jge xor mov (bad) sti push or cmpsl dec (bad) adc mov pop fdivrs add loopne int pop test (bad) in test int add push mov loopne (bad) jne sbb pop in and xchg inc or dec call xor mov sbb addr16 pop push mov testl xor jcxz cld mov insb sub sub mov sub lahf mov mov pop jle cmp xor out jo data16 sub popf pop aam jmp sarb mov push and push mov xchg or sarb xor push and out add lock wbinvd cmpb cli add jle lods cmp sub (bad) jecxz mov sbb mov sbb (bad) in pop sub lea outsl (bad) idivl inc adc pop pop enter call mov push jmp enter aaa inc push dec and mov mov mov push (bad) add test push xchg loopne push inc jp stos addl out or gs xchg roll test pop clc (bad) mov jne daa dec in jmp add xor inc jmp cs test push popa fldenv (bad) push inc or lock pusha lods lea add lods pop xor or push je arpl arpl sub scas xchg or movb mov mov test scas mov mov or push aas jge jp mov arpl push inc or add add jb mov hlt and in outsl int jo cmc push mov popa andl add pop mov bnd in out adc jns aaa sarl movsb mov outsl int3 rcrb push sub loop aas xchg mov roll cli add insl jnp clc clc jge,pn mov sub jge loope pop xchg dec mov push inc push sar or add movsb xlat inc lret add mov testl loopne out or mov add inc out mov cmp imul add les add mov ss cmp push shrb cld aam roll mov sub xor xchg aaa fisttpl mov or dec popa out pusha cmpsl push repz mov sbb aad pop inc mov sub dec aas fisubl sub dec add cmpsb nop mov dec mov or xlat xor je icebp xchg add and mov movsl xchg icebp adc jmp xchg daa les inc lea push xchg add inc sahf notl push inc mov add push fsubp pop shr push scas ficom mov add adc inc pusha jne inc (bad) xor mov inc or mov pop mov add loope int3 mov pop lahf andb out and jbe add mov sub push enter push movsb or js xor negl aas jmp jo,pn js jo pop sbb mov sbb push (bad) pop scas inc mov or mov push push aam js or int mov and lea cmp test sub sarl and ljmp arpl dec add out aad xor addl sbb bound xchg int dec mov lea rcrl pop push or pop mov jne mov cwtl pusha or test and dec adc lock repz inc pop adc (bad) fdivs aam push aam push sub int3 rol ret rolb pushf inc les sarl dec mov adc ret (bad) repz hlt dec push add push add cmpsl aam pop fimull sbb adc sbb dec fsubrl or or push shlb adcl xchg in sbb sbb add jo dec mov xor sbb stos test push adc lea xor lret lods mov faddl inc fcmovnu pop add jmp mov add pop cmp jne pop sub test push hlt fsts cmpl dec inc insl rcrb les imul scas aaa call cmp sbb and adc inc mov pop pop add lea adc (bad) xor pop mov pop jmp mov mov sub test sub pop das push inc ret mov push dec sbb push pop adc rorb sub xor rorl sub mov insl icebp sbb xchg xchg dec cld clc adc insb xchg (bad) out or daa add fstps les mov add push call cmp inc cmp je test aaa push mov lds and lret xor lock stc push lock jnp add sbb xchg aas add sqrtps mov xchg (bad) fsubrs fildl outsb mov loopne push pop in push cmp push inc jb push addl lods es hlt sbb outsb sarb push sub outsl pop inc je bound sti push push adc arpl int movl sbb add inc or dec mov mov mov fstpl js adc sbb mov or cvtpi2ps pop das ret inc pop test movsl mov add inc or divl fistl add and pop mov sbb xor aaa pop and sub pop iret es mov mov jg mov or insb cmpb or clc lea fistpl inc test lcall inc les lods mov cmc imul or mov cmpsb in hlt jmp sbb and push mov adc sbb push pop xlat lds xchg and shll nop mov fisttp mov mov xchg inc ljmp movsb lea inc cmpsb nop sub dec inc mov xchg out push or adc movb push add jg xchg inc inc pop mov push aaa jo xlat mov insl push or adc cmpsb imul and mov cs (bad) loope push xor or daa and add or jne push imul or adc lcall inc mov pop or inc ljmp into add mov pop lock or pop (bad) mov or (bad) add jmp cmp jae cld in je mov inc jne movb push and je imul adc sbb int movsl adc sbb jecxz mov and out sbb imul adc test pop ret test int3 push scas popa jno inc imul fildll lock cmp cmp divl lods daa jns scas add sub cmp ds fdiv aam lods je lea icebp bound pusha xchg nop lods sub xchg adc test dec repnz pop lret loope insb add fdivp and jne sub ljmp mov adc pop and insl (bad) idivl cmp push popa jb add and push adc mov loopne repnz sub pop push mov adc pop lahf mov or pop sbb adc and (bad) cltd cmp add push or mov mov test add jae fdecstp aas push pop sub sbb js arpl cmp lcall fwait icebp push sub movsb lcall push xchg mov add add nop shrb insl pop fstpt sbb fwait add ficomp add add or ds std push in adc insl popa das or or aam popa insb adc insb stc movsl in mov xchg xchg test fwait dec (bad) and add sbb xor sub add add add out outsl test mov cmp cmp push dec push mov sub idivl rclb add dec out cmp jns push sbb inc pusha push jno lret ret pmullw mov subl fisub pop rolb jae push xor jne push scas adc loop icebp jle jns push mov insl push adc int3 pushf mov jle mov stos jo test test mov pop push mov dec scas std (bad) test dec pop lods test cmpsb movsb insl fidivr cmpsl je push sbb add cld xorl sbb sbb repz xlat mov inc xlat add test nop xor into test imul xchg pop cmp leave iret xchg add inc jb insb imul dec cmp jns pop mov add cmpsb jne sub int3 cmpb stos or push push nop pop add scas dec cmp add add mov aas xor test or cmp aaa insb xor shr dec jge sbb orl or or sub adc cmp int3 add pop hlt mov xlat cmp xor inc imul stc cmp push or lods gs and pop sbb aad and pop push (bad) or pop aam pop pop dec sub cmp in pusha inc fs popf ror loope add sbb push popa fs stc std xchg add push pusha xchg cmpsb loopne inc fwait add xor pop jge jb jnp ds hlt out rclb pop fistpl add pop mov cs and pop adc cmp sarb ds adc outsb dec pop sub repnz mov int3 pop pop add dec das arpl daa fs cmp stos mov pop imull mov rolb mov push mov or negl push inc data16 pop lods pusha subl stos orl and or push out add jl add push adc add add lret movsb jl add push or inc push cmp scas add outsl test jo leave cmp adc add dec pusha pop add adc sbb xor in mov out adc fcmovne (bad) leave popf test push xor loopne cwtl dec les mov ret inc or pop inc iret fsubs mov scas outsb dec dec push fisttpll dec cwtl or pop pop add cltd add pop insl orb and adc popa push inc out and and dec bound out and and or fcmovne xor xchg sbb add sub pop inc mov or cmpl in sbb jo aad lea mov and push sbb mov nop into addr16 push push add (bad) addr16 cld test inc hlt in js sarb rorb lock pusha mov lods inc push outsl jb mov cld pop and adc inc pusha ss or test mov sbb add fstl pop ret cmpsb and and ja cwtl in push or xor mov cltd insl or jns or addr16 imul jecxz sub mov jns mov pushf and push imul test jo jo sbb push inc cld xchg cld jl mov add adc or test rol ficom lods outsb nop (bad) mov les jecxz push add cmpsl loopne mov xor xor or ss cmp inc inc inc lock (bad) jg dec dec dec dec dec dec dec dec push push rol push push repnz xchg testb xchg mov sbb arpl fs rcrl fidivl imul out imul pop add jmp inc fidivrl rclb or adc neg je lretw jae dec add adc add cmpsb addb fs jmp push sbbb loopne mov adcl adcb js add pop (bad) pop lret inc xchg test xor mov incb arpl sbb sub out insb inc push push (bad) dec cmp jecxz sti or (bad) int sbb push inc jge shll dec or sarb mov in cli push sbb adc je mov cmp sub dec lods cmp cmp repnz jl or lea mov ffreep xor clc jmp inc inc jbe fdivrs dec pusha sub call and int ret inc dec insl loopne xor bound call mov sbb sub push (bad) mov and loop xchg outsl insb stos and jb and mov fstpl cmpsb adc pop xchg cmc test insb dec insl mov mov and pop test sbbb test clc (bad) pop mov fnstsw sarb add stos mov ret pop shrl into pop pop notl jae sahf ja xchg (bad) outsb mov roll fwait adc dec pushf push das aam js das adc xchg lea cmp clc scas dec ret dec imul data16 mov orl outsl lods xor rolb gs mov (bad) adc je jmp cmp gs movl push sub jne fiaddl imul rol or lock fwait sbb sarb jmp inc (bad) call jne cmpl inc sub arpl sub outsl loope add (bad) in (bad) mov and aaa clc stos adc or mov jo fwait data16 pop adc out add cmp xor and adc xor fadd (bad) sbb pop incl cmp arpl add mov call div clc icebp js popf les add jb pop push xor inc or add mov jno incl and inc popa jmp in or test jmp das inc dec js add jne jle imull (bad) mov jmp cmp adc in addr16 sbb mov outsl int3 pop xor pop sub fsubrp pop cmp je in dec aaa cltd nop into push add pop rcrl cmp pop mov in in fist clc pop add in or (bad) test imul pusha xchg pop adc add loope adc xor xor xchg add sbb (bad) xor sbb cmp cwtl fcomps outsb or mov testl mov jl aad (bad) out push inc imul pop nop sub or sbb es pop cmp nop (bad) loopne popa sbb les arpl cmpb leave xor xor movsb sbb insl cmpb ret gs inc pop adc push sub or bound pushf addb js cmp push lock ds add and ret ret js js (bad) xor rclb (bad) and nop mov dec pop mov jns jb fistpll subb jnp shll mov jns (bad) mov aaa cmp roll sti aas cmp inc cmp cmpsl add push jo fdivrl inc cmpsb lock movsl or pop jg xorb add dec xor adc jle sub pop ja inc add cmp add aas lods mov fimul push movl add pop je mov add mov push ficompl and orb negl push pop sti xchg jl sbb xor jmp and fwait leave dec jg aaa adc out jle mov and jle fwait lods adc (bad) adc inc rorl js rorl push sbb (bad) adc lcall push sub nop inc push and xchg or testl jg arpl sbb add push xor (bad) cld or mov add jmp cmpw pop sub mov ret jnp push inc test test jne (bad) and inc mov jae mov mov test dec cmp je test fnstcw call shrb les mov xchg out lods push mov or jle scas xchg adc add push dec fild inc rcl mov mov jecxz mov je repnz push (bad) je add fisubl add mov cmpsb inc cltd or push jg pop cmp xlat cmpsl xor popf dec adc xor (bad) cmp dec or pushf or cs (bad) or ficoml cmp mov cmp cmp fwait xor fwait xchg add jb outsl aam inc sub movsl fcomp sbb mov int3 inc or xchg dec sbb adc out ret pop js jae or sbb adc adc mov sub (bad) mov and outsl in push or push in icebp inc pusha or aaa cmpsb or imul das imul mov inc dec sti xor mov es pop add icebp pop jo and pop xor mov adc out arpl dec or push fmuls mov or adc es push (bad) pusha outsb push jmp or and movsl out testb stos scas add out add (bad) push push es mov and mov adc imul adc xchg adc nop push push adc push hlt mov jnp cs das (bad) mov xchg testb push fwait sub mov or and cmc xchg insb out pop and and xor add ret or push in decb inc pop adc add adc push inc jg push dec adc xor pop sbb pusha iret inc inc lret add push test in mov xor arpl int pushf inc cmp jge aad movsl cmc jae cmp jae mov cmp xor sbb fmull sub and lods cmp addr16 or ja add push or insb push adc fisttpll lds imul fsts push aas pusha aad dec test loopne ljmp or pop mov xor repnz xor ret dec jge and cwtl loope,pn enter divb cmc pop mov add stos imul adc add loope cmp movl adcl movsb sub pop mov jge xchg pop ja sub jle jne outsb daa lods add mov adc lock lea add push movsb nop pop inc (bad) and int3 shrb (bad) push out jge and add mov fsubl cmp inc pop adc scas or pusha fwait sbb aaa addb or mov xchg or adc sub inc je or mov push mov dec hlt xor cmp sub or popa mov pop cld nop fldenv mov iret movsb repz jns stos imul inc push pop adc add mov push icebp out je inc movsl push xchg sbb data16 jmp jo xor test add (bad) popa sub ret mov mov pushf add pop or add in xor mov or mov mov sub adc cmp push inc mov push add push sub cs xchg add mov push pushf dec add mov mov mov (bad) jae sub jg and andb enter mov test (bad) subl lods push rol std adcb add fs rorb pop add mov cmp scas arpl jecxz and inc arpl cwtl icebp call mov mov wbinvd mov mov xchg fistl jle inc je (bad) cmp dec sbb jbe push adc xlat dec sbb imul daa or or (bad) clc mov addr16 mov fnstcw push add sahf jge mov add lea inc imul fnop add mov cs add jl (bad) xor xor push adc lsl add mov pop lods and dec dec or sub loopne sub int3 push repnz js lea aaa push loopne fildl aad add sbb jle sti adc jo add xor aaa cs and repnz loopne popa call sub in mov addb inc and jo mov loop sub add xchg sub repz lock fcoms popa leave lcall enter fsubs jmp and sub fmull rol iret push cli jne push mov inc mov fwait movb outsb lods iret push shlb les pop fsts sub jbe inc iret (bad) pop push es pop pop cmp mov test add pop cmp inc (bad) jle push hlt sbb and imulb dec les popf mov dec dec or movsbl into lods into add push pop mov sbb sbb cmp out jnp imul dec or fmull mov adc pop repz sti sub push push cmpsl fmul mov inc push pop push pop dec loopne sub pop bound jnp dec xor push add jo add push mov adc cmp cmc cmp xchg (bad) movsl sub call adcl jmp pop movhps ja inc loopne jmp cltd jge mov sub sub jge inc sub mov add aaa add mov int in and lret and sbb or movsb cmc cmpsb mov popa loopne int add sub push sbb insl xchg cmp add lds sub jb and daa adcb sbb or leave (bad) xor push mov mov lret or dec mov sub mov rcrb iret inc and mov pop push push push iret and popf call adcl and push aaa out test jne add dec enter js inc mov lea mov add enter or leave or jl gs add loop fdivrs xchg adc jl jbe xadd adc push sti cmp add add leavew pop scas jp int out inc lea push (bad) les movsl fistpll push and or pop sub add and mov add push fadds adc fmull and push inc and mov jmp in jmp mov mov push pop cmp push fmull pop psubq test rorl adc ret push test repnz and testb iret xchg (bad) (bad) jo and and dec aas adc jecxz or or sub wbinvd pop xchg clc test adc inc je stc ds sbb fsubr add xchg xchg xchg call ljmp cld stos lahf (bad) ja mov (bad) (bad) mov inc cltd pop inc cmp nop xor sub je outsl popf test push jo inc adc push lcall and add enter popa (bad) rcrb cmp pop fisub sub sti repnz loopne fcompl enter in push push pusha pop pusha or push movsl jno (bad) mov jns or sub or add jns add mov mov bndstx sub icebp loop dec or fcomps dec cmpsb jecxz orl push sbb push lea or pop clc or in pop imul dec push dec jge pop push fisttp (bad) inc adc adc test xchg (bad) adc mov or lods dec jg clc out xchg xchg push or cmpsb dec popf add rcll push or and jno sub cltd in push xor (bad) inc push sub cmpl push es pop cmpsb fsubrs lret adc out scas push in and add or dec cmc fmuls es add sub lds sub shr push xor ficomp jno imul mov (bad) pop and pusha push fsubrl mov or push add repz dec cmc imul loopne pop mov push pop jnp inc adc push mov out sti push loopne aas leave fmuls (bad) push or dec add sub lock ds adcb push cld adc mov xchg jno dec ja addb loopne sub dec shrl xor jo insl jne ja push adc gs push bound lock mov sbb add jne mov mov ret or sbb lock clc pop movsl dec sub sbb sub pop dec lock movsl push rorl in loope push bound inc sub ret sbb test cld hlt popa adc adc or xor or sbb sub (bad) jo adc test adc outsl pop sti je loope addr16 jl add test out sub out out sbb clc jmp push jne adc les stc enter sub push (bad) pop inc enter push inc mov sbb xchg adc dec loopne orb pop xor xchg pop or and mov adc in lods loopne adc loopne call fdiv dec fadds loopne jns sbb xchg xchg test inc leave stos cwtl cltd dec mov mov xchg mov mov xor adc pop bound add inc inc and xor sbb adc fmuls xchg pushf test xor push mov and bound sbb jns pop (bad) inc movsl push lock mov in lock adc and mov pushf jno ret imulb adc ja pusha xchg mov pop sbb or and jecxz push jnp add jg adc sbb jl rcl mov insb stos cmp rolb je jno cmp adc roll sbb dec mov and ja mov mov popa cmpsb mov mov into insl mov ret rcrb push sbb cltd es rcrb jle mov push in call xor push int imul add xor adc push inc add loop or add inc loope call fisttpl and test adc shll cmp sbb or aas scas dec popa leave adc inc adcl push out and pop fsubs movsb push fs (bad) ja lea jl mov jl addb ret sub fisubl lods cltd bound aaa movl ret xchg inc sub jl cmp sbb dec loop shrb outsl fistpll push test sar in and pop dec mov mov adc nop xchg mov inc mov movsl repnz and loopne je loopne lcall mov cmpsl mov not add push lcall or or add push clc insl or mov ss push sub jbe out icebp jo pop add call sbb add sbb in pop cmpl sbb or sub or and sbb xor mov fs lds adc push xor mov jmp scas cltd and fcom fsubs or pop lods or mov jo data16 pop cltd je (bad) push repnz xor sarb divl pop adc es lret xlat jne inc push and and dec js add int3 addr16 jecxz in pop int3 xchg xchg and sti enter hlt in shrl sbb push bnd inc fcompl fisubl les push cmpsb xchg adc pop sbb movsb loopne mov add into mov or sub push cmp out das loopne mov call orb jge xor movsb xchg dec sbb movl cmpsb pop adc sub or stos jno (bad) fadds mov das pop (bad) jg adc ret sbb bnd stc and and jmp mov sbb xchg sbb pop out cmp gs sbb popa stc in xor push ret rorb sub add jo add out xor and jmp rorl cmpsl inc mov sub (bad) std dec or les mov mov push adc test add outsb aas xor add xchg or cmp fadds xchg es subb mov test adc popa xlat or movsb adc mov movsb or xor arpl popa sbb imul cwtl inc (bad) orb daa push xor lea fidiv icebp sahf inc dec cmovl js movsb inc cmp dec scas pop pop dec sub add push mov dec aas cmp push js test adc outsl adc inc mov mov pushl push inc daa fldenv inc je mov cmp push loopne add subl sbb cmpb scas xor mov je cmp js inc sub pusha jbe ss mov lock add (bad) outsl lahf mov aas je (bad) cmp adc add ja add (bad) enter mov orb adc cs inc xor test xor adc lret iret imul nop pop data16 mov ret outsb out movsb pop or inc inc push inc inc sub add outsb mov (bad) jne out (bad) sar cmp mov mov dec outsb push cmpsl adc mov in xor test inc add lret xchg sub dec push xor je jae in pusha or into add mov dec in ret mov into rcl pop in imul cmp je pop cmp mov rcll adc lret and cmp imul jno pop lret test push pop test pop daa push ret ret fs cli mov jo jle (bad) jp push cmp push outsl pop mov add rdmsr out xor push lret adcb pop aad popf mov aas jbe and push dec dec adc aas cwtl (bad) adc jns inc xor mov sahf test pop push sub xchg or ret sbb or jo insb cmpsb into pop push push data16 xor cmpsb or outsb dec imul jnp add and push call jne mov mov xor or cmp jecxz clc mov sub fwait adc popf sbb or dec mov push fidivr jle ret outsl sbb (bad) (bad) popf push arpl hlt sbb imulb pop mov xor lods lods sarb mov adc (bad) xor cwtl dec jbe sbbb (bad) xor pop addr16 inc add mov in (bad) or push lock test xchg andl add push pop sub adc fsub andl sub jp add or lret push add mov sahf dec popf push insb bound adcb setle adc mov jmp mov ret imul mov xlat (bad) or sbb adc int3 mov mov lods rcl xchg loopnew cmp push or push jg mov mov push rcrb pop lock or jo sub adc xlat aad xchg aaa gs sbb dec cmp jo inc sarb mov lret lods es mov ret mull nop sets cmp mov cmp or xchg dec jnp (bad) or lahf jecxz and cmpsb adc sbb jl mov xchg loop lret pop pop (bad) adc xor int hlt add or cli jne mov sub lock inc je push pop daa sub outsl pop jb inc pop mov ret test mov jg fimull shll cmpsl sub cs pop cmp xchg mov add push cmc sbb mov xchg or lcall mov and imul xor lods mov pop scas (bad) dec dec imul test push aas and pop and sub pop leave inc jb cmp jb pop and or mov push or add and mov jle rclb dec adc mov pop adc xor mov sbb adc lds mov add sbb pop dec rol lret outsl rclb pop xor or arpl pushf cmp jle pop scas fsubr push jmp jne jns ret push (bad) jl repnz mov adc cmpb nop xor mov pop cmp add sub es mov mov push xchg dec xchg mov mov inc enter aad xchg inc fbstp inc movb enter mov dec mov test push add dec ret adc jae in and into addr16 xor rcll push sbb pop in sarb call imul adc insb mov dec out insl mov mov add cmp fwait ret dec clc push out mov jnp inc das xor mov jae aas orb loope mov cmpsb push test nop push push (bad) mov pop mov xor inc fiaddl sbb push jo imul sbb sub cmc movsl jne mov or xchg jo mov push sti jmp pushl dec inc add or xchg adc and mov cmc mov add ret or push sub add jecxz arpl pusha pop sub sbb pop push (bad) mov fcmovb sub (bad) adc inc mov ret mov adc sbb cmp push add outsw clc daa xor (bad) repnz popa enter sbb dec dec clc cmc mov shl or int3 fldt addr16 cmp (bad) testb sub add mov pop adc jo mov dec push (bad) xchg movsl imul loope out jmp sbb or scas pop je push sbb cmpsl cmp push out mov pushf mov pop out xlat fisub jp jne cmp push cmp shll pop cmp imull call flds jge js jns ret add or loopne xor xchg jo ss xchg push mov inc sbb ror jmp sbb in sarl cmp test (bad) ja je lods rorl subl mov cmp inc cmpsl sbb divb or xor jle mov adc adc imul pop pop jo pop mov jo loopne fs mov pop test mov pop insl mov fnop adc or fsubs cli push mov sar mov xor (bad) dec mov stc sub add sub outsb lret popf cmc (bad) ja pop push push sub inc imul xchg mov mov leave lods sub adcl jl push (bad) jmp push xorb xchg cmp aam sub test stc fsubrs xor js daa xor pop xor (bad) push add outsl stc aam add push cmp add mov jl loop dec pop syscall test push cmpsl shlb das cmp mov sub sbb or mov push pop xor xchg sahf push cmpsl sub jl inc rcrl mov sbb je pushf inc sub movb mov sbb mov pop inc sbbl pop idivb mov inc mov mov sbb sub xor fsubl sub jl jle aaa dec (bad) in and pop (bad) jne pusha mov rclb cmp xchg inc rolb pop or mov adc and cmp pop sub sub and push cmpsb pop cmp add adc paddw add push cmc sub pop or out mov jo aas mov js inc inc mov or inc push push cmp enter je (bad) adc addb sub inc inc xchg ds cmp push cwtl or xchg test das mov and in dec adc inc stc dec push daa fsubl pop mov sbb pop push add add push testl cmc insl cwtl lods je mov push enter sbb bound int3 and add pusha xchg pop hlt xchg out xor dec pop xor pop clc and push push dec jl js mov cwtl inc sbb insb adc imul loopne sbbl or (bad) mov or orl or and xor call mov jmp add sbb insb fdivp inc fs js aam push and stc out sbb xor xor xor or mov aaa and push movsl push xchg push int3 adcb in test aam add cmp inc popf adc enter add inc into aas popf dec sbb xchg sbb cmp leave es enter addl ret (bad) pop sbb pop add sbb or push xor addr16 ret (bad) mov or push loopne scas les test xchg mov out push ljmp sbb or iret int3 add push ljmp dec and or std xor pushf mov cmp stos popf mov mov subb rcrb (bad) or clc mov mov pop jmp data16 rcrl movsb lcall jmp mov xchg add rcr mov and dec insl cmp lods mov mov (bad) repz mov pop push pop add dec mov ja and xchg pop cmpl daa or mov imul ss sub mov push jp jl into sbb sarb push addr16 rolb dec lock ss add adc and and jge xchg mov sbbb mov push and add jle pop hlt scas mov inc imul cmp fbld test dec mov add add add inc fistpl sub push add inc jecxz (bad) hlt jbe xchg repnz outsb cld movzwl mov push cli and add jecxz jmp fldt cli mov jp rorb movsb add call test sbb dec cs jp rclb dec dec mov add dec sbb or cmp inc orl stos xchg xor pusha add push xchg and leave (bad) xor mov rclb mov mov movsb data16 hlt xor and xor add das xor out movsb addl cld add scas jmp repz rorl daa mov jl scas adc lahf repz add ss or js popf sub mov gs inc push push xchg fcmovu inc add jae int3 xor pop dec dec mov adcl lea mov sub mov rcrl or mull pushl cli add rolb ret xor dec jo xor or fstps or mov cmp inc cmp add rol popl lea lea pop or cmpsl imul imul ret es or orb cwtl dec dec jl lea sbb dec and in xor push lahf pop lods push add movb lret leave in inc push add inc inc add mov cmp jne scas icebp addr16 ret mov or add inc adc jge nop insl lea push sbb sub adc mov (bad) cmp push adc mov jge test push sarb add faddl pop ret pop adc jl lds adc js je (bad) dec jge in push push adc sub inc mov iret adc clc pop inc insl inc flds sbb iret fnsave test mov inc xor out push lock scas out jae and loop mov jnp loop cmp xchg pop jle xchg add xchg or (bad) popf es sarb int cs dec and ljmp add je pop jp fimul pop (bad) xchg and lcall or nop inc dec xor gs inc dec inc dec dec push cmp mov (bad) scas cmp push rorb imul mov test pop add inc arpl xor outsb popf fcmovnb sbb push or int3 into insl jecxz add add fsts inc xchg adc xor mov test hlt push sbb add xchg pop bound lods inc xor add pusha dec shrl fisub cmpsl test clc push mov sarb clc jmp and insb and mov inc stos mov pop outsl and jge stos cmp (bad) jne pop add sti cwtl hlt jp das pop hlt inc xchg bound xor xorb dec (bad) mov xchg add enter ds shrl (bad) mov int3 cmp arpl rcrb mov and lock test jo and sub mov or or adc cmp mov test lock sbb xchg idivl (bad) jmp sbb mov pop adc pop addb pop or (bad) xchg pop add cmp jne (bad) xor decw jmp mov jp jb mov lret or push in sub or xchg sbb adc jl inc sbb aaa in pop fwait inc bound jns mov je cmp sbb ss and clc dec mov xchg inc jo dec punpcklwd dec push and adc (bad) push ds or iret push jo cli add jl jmp lods dec add sub xor sbb div or cmp xor inc inc rcl nop push daa inc inc push loopne cmp pop out sbb and ficomp dec pop xor mov shl push xchg rol rclb push sahf push xchg mov stos cmpsb cmp and and arpl jne xchg and push outsb inc sbb inc cmp or mov js cmp adc popa adc and xchg xchg dec rorl sub adc pop loop xchg jne fwait and out cmp or icebp add and cmp or in adc jle jns pop sbb nop ss cmp dec pop xor xor or mov cmp or add add in mov add sahf adc xchg (bad) adc (bad) jbe iret hlt movsb hlt addr16 cmp ss or or push or add mov xor daa sub iret shrb adc or pop add dec divl adc fs mov add je adc cmp and stos nop loope pop mov lret dec gs push hlt lret nop add add jl jl and call out push pop adc inc add adc scas les nop jbe xlat push repz jecxz and call adc cltd dec push cwtl bound push sub sub sar mov add push loopne inc or lcall ljmp cld pop bound nop inc in fiaddl push xchg iret pop mov mov cltd int ficom rorb xadd xchg or orb sbb add scas push or and inc adc push adc dec sbb add jg sub (bad) xor or ret in add ss leave into daa fsubr cmp xor mov pusha in inc cs scas add (bad) xchg push inc fcompl addr16 adc in push addr16 ficomp xchg mov cmp xchg outsb mov cli rcll xlat rolb in iret mov iret inc add pop inc dec iret sub pop inc push sarl fmuls cmp das in pop adc push dec jnp xor sti jne sub pushf add pop hlt test (bad) (bad) xor push dec mov mov dec xor pop shrb add movsl popa call (bad) pushf jmp push lds ficoml jecxz mov daa xor adc mov push mov nop test add and rorl scas push fadds add add or mov dec pop lcall test (bad) popa add stc or inc popa add add pop popa bnd shrb add inc mov pusha pusha push mov dec enter inc push lahf jo sbb mov pop fnstsw mov add push jg xor jnp xchg fist or in cmpb rorb jo fisubr xor xchg push pop dec sub ret or sub add vaddss roll xchg daa or mov inc xor sub into (bad) in gs jg xor xor jne movzbl mov push push push inc push cmp ret sbb shl or das dec lock rcr add es movsl and pop orl push pop (bad) jle rorb in pop shlb mov add mov aas and dec je add push sbb sbb aam nop ret add jmp push enter ljmp push test xor and out adc and test scas mov push sbb mov xorb dec es aaa pop pop fs push sbb dec pop dec sti jmp pop inc sub push roll xchg cmp and ljmp sub jne jl mov test sub xor lods sub dec test jo sub insl (bad) out cmp setge mov sbb imul add movsb add (bad) (bad) inc testl outsl es mov fsubr push sbb pop inc jle ret cld xchg xor jle lods add mov mov and cmp jl mov xchg jo les fcompl dec or sahf movl dec mov jbe cmp sub (bad) lret das clc ret add fcoml or sbb mov cmpb insb rolb or into jo cs push xor or dec rorl lahf aad rclb xor test mov push jo repz je insb cmp pop fs jns jns pusha fs pop js cmp out pop xor jp push mov dec dec in push dec aas inc out pop ja inc dec mov nop js repz cmp mov push xor in inc mov cmp imul push fs mov jl je mov repnz mov pop push inc or add jae jb xchg cmpl push xor flds insb sbb sub pop or lret jbe or push stc popa insb push mov lahf add adc dec or xlat jo sysenter fsubs (bad) jl add insb add cmp les sub or aas sbb push into add dec movsl mov pop and cmp or (bad) fcoms or inc push and dec dec enter add xor push fmull shll dec nop fimul push push in pop pop cmp mov test xchg add flds enter fiaddl xor xchg cmp fxch xchg mov mov sbb cmp bnd inc js fxtract fidivl xchg push cmp add add pop js roll push xor xchg pushf push aam jl notl push mov insl pop lahf fimull sub push movsb pusha cmp cmp lock add daa pop nop adc aas fistpl test add add int3 cs dec fdiv clc push push and adc push jmp pop sub or cmpl push cld add jbe fsubrl lods leave push shrl cmp mov jg orps les dec pop push jo pusha cmp cwtl add nop pop in jns and fnstsw sub add cmp push les js fisub sbb sbb shrb fidivr clc (bad) or nop fwait negl cmp adc inc and or es pop cmp ficomp push sbb dec or (bad) dec pop xor adc or xorl fstl out outsl jne shrl out mov insl (bad) fcom mov insl bound rolb or mov in int3 or fistp imul adc mov or shrb mov adc aas fild add mov das or or cmp fs das fdivrs pop jae sub push into jbe add push ficom xchg adc js fs ss add pop add or fcoms dec push push aas push enter fs mov imul into imul out nop ss or push pop sbbb out mov xchg mov cmc fistp lods repnz popa imul jl imul insl mov jae jns fildll add add jnp adc sbb fstpt insl push cld in sbb pop xor add push out xor jmp sub sbb push loope dec jbe mov cld pop xor ljmp add imulb pushf add or js leave dec dec mov dec into pop ret or (bad) leave out xchg adc add stc pushf pop xor add add pusha ja mov xchg xchg loope (bad) jo insl push dec cmp add or mov mov enter (bad) cmpsl xchg xchg mov add mov and jle cs add xchg out test add pop sbb dec je inc inc loop or jo fstpl pusha push das add rolb and dec or shl pusha pop and (bad) jo ss das add leave inc add psubb or and sbb addl loope sbb stos sub add (bad) or es in pusha or out jl setg xchg mov cmp fcmovb mov or pop inc and or pop ret xor add adc or insb stos and (bad) cmp cwtl or push shlb ja push add ss mov mov or inc sub or xchg in jbe ret jmp imul inc test or fild adc jecxz adc rorb jo sbb adc push test jb jo std pop mov or or les sub mov xchg fdivl arpl es (bad) xchg fiaddl mov fmul push iret push xor adc add hlt out or or jmp pop call mov roll add mov jmp out pusha push sbb enter pop add leave inc ret mov add decl xchg add adc adc add aas sub or sti pop add adc dec pop cmp or add add dec gs add push andl mov lea or jo (bad) iret (bad) bound xchg (bad) cmovp mov push and pop push jnp push loop add daa out rolb decb adc in js pop sub fwait push (bad) jmp pop inc cmp or sarb add push lds push lods add shrb ljmp mov inc cmp or add inc add sbb inc mov mov mov jmp push in enter lahf ljmp jge dec test and mov jg push add (bad) mov push inc test xchg jg sub cmp add mov add inc xor mov test add es push loopne in mov pop add cld fildl inc add add add add add inc sar add pop add or pop xchg or mov mov add xor adc sbb cmp cmp mov mov dec or incl stos jmp ljmp jmp jmp pop movsb incb xchg jecxz loop loope loopne fisubr and (bad) (bad) (bad) fdivr (bad) (bad) fcos fcomp (bad) call jmp call call call out iret push adc dec mov dec loope dec ror dec inc jns int fimul push movsb dec mov mov mov pushf push test addr16 sub loopne nop mov enter push dec push jl sahf int push push and pop xchg mov ds push push cmp lock pop sbbb es push jle inc jbe xor neg jge rorb xchg cmp or clc int out shl sub push js dec push cwtl cmp pop loopne jle aas insb lahf data16 pop mov adc aaa sbb (bad) loopne push push cmp xchg push and insb xor mov out mov cmp push and push and ret sbbb cmp nop jg test sbb mov or sbbb lock mov add mov call inc pop sub movsl inc cmp in movsl add add addb and cmc or push add mov xor je and (bad) pusha loope pop lods incl mov inc test pop adcl mov sub and push js jp sbbb nop mov fmull inc mov xor mov inc addl push add inc js pop je pop xchg aas out mov pop scas cmc inc lock and cwtl cmp repnz pop mov mov inc push sbbl and and (bad) cli outsb lock (bad) dec sub ja pop jo mov sbb (bad) dec pusha lods flds xor jns sbb jo inc test movsl push rcrb cmp mov xchg fsubl mov inc xor xor add loopne outsl icebp sub and add test cmp adc and js and pop test movsl adc arpl xchg and push adc and xchg repnz sbb mov jl pop xor dec jg in movsb ljmp jns pop rolb add clc sub scas pop add xchg add (bad) repz aad (bad) cmp mov rorb dec add cmpsl cmp sub push xchg cld in push xchg mov jo add add add add inc or mov lock mov jbe add add add roll adc push cmpsb adc inc sarb push add aaa mov lcall test cmp adc cld mov mov mov and and mov or ljmp bound add push mov xor cmp scas push rorb je dec in inc inc inc inc decl push cltd cli ret inc inc mov or int mov mov mov mov pushl mov cli (bad) dec push rep sahf addr16 test in xchg cmp addr16 jl (bad) call cmp fcoml data16 jge repz sbb fdivr data16 into mov mov jbe push mov cmp mov push mov iret mov fimul push sbb xchg inc pusha jl mov cmp rcl rcl sahf addr16 clc movsl add cmp cmpsb inc add les iret jmp xor mov out lods or sbb fidivr mov push cwtl (bad) stos push cmpsl mov imulb cmpsl push jns imulb insb cmpsl jge negl mov ret mov stos pushf (bad) fwait fwait sahf cwtl sarb jb enter rorb fcompp insb out shlb mov sahf (bad) negl out push mov mov mov jnp mov fsubs (bad) insb mov data16 inc and ja fwait nop or outsb scas pop and jl or pop jnp pop (bad) dec pop sub xor adc and pop icebp into mov into pop iret or shr es bnd sbb pop pop sub test ret cmpsl adc jg mov inc and jl lret testb mov lds fdivrl (bad) dec (bad) ds pop push enter add add push in add lret cmp mov dec xor enter mov fadd cmpsb scas pop and mov sbb rcll sub jo adc in mov add add push (bad) or enter or insb imul or andb fwait or cmp (bad) repnz mov cmp repz push dec mov pop cmp repz imul repz movsl mov mov loope stc sbb (bad) bnd cli push sub cli in aas addr16 mov fadds add mov int3 push loope inc push std clc decb addr16 ds ljmp jnp in push clc fisubr loope subb push inc xchg cmp insb (bad) cmp cmp (bad) mov push and aas lea jne inc pusha outsl gs mov aam loope rorl add jge in inc cmp adc fdivrs hlt and outsb jae test and xchg xchg dec lods pushf push rcrb lea pop jle sub jl mov adc movl push cwtl xchg push and push iret call sbb nop ds int3 and jne leave pop outsb xchg sbb mov loope cmp ja ds test jl xor xchg cmp adc imul cmc cld push adc xor imul pop out adc ficom rcrb lods mov lods insb addr16 push push xchg inc ret lcall lock pop push fs mov push lock xchg ljmp pop xorl nop sub or repnz lcall loopne nop inc push inc or mov or add or push daa push mov jnp xchg dec outsl and daa dec push jo imul scas mov bndldx push inc mov movl or das imul shlb mov push inc cltd outsl daa insb addb pop mov pop fwait pop sub push push push or cmpb or add jmp adc lret sub dec add ja es mov ds inc (bad) sti jmp push add add cmp inc push cmovo cli pop ss insb out cmp inc dec bound sub je in leave sbb jbe add jbe popa pushf sub add sbb ret inc jo push dec dec outsb add cmp mov mov cmp aam jle add add (bad) adc sbb sub push push rsqrtps fcmovnb sbb mov add inc sbb xchg jne xchg les push fs pop dec and jle jg rorb or xor repnz in lret and lock enter addb pop ret js adc add cmp and pop add cmpsl popa (bad) xor lea popl lret and je push push cmp fs pop imul adc add xor jmp add jmp sbb inc cs or call sbb mov outsl leave mov sub mov inc das jmp sub pop or sub ret sbb lcall or imul imul imul jo mov jg mov dec add pop mov dec add and xor mov push fidivl aaa xchg (bad) cmc inc int mov ret add and je sub je insl and mov mov std dec je and mov movswl or movb mov or mov jno sbb cld addr16 or adc jmp mov pop ret sbb js orl shlb inc xor jne (bad) shll test sub inc sti mov or mov sbb xor sub movsb xor pop mov pop lea pop insl movsb adc pusha push mov fimull or push or nop pop sahf mov mov or add dec or mov (bad) pushf sub mov xor shrl jge movd add xlat enter test add popa xchg ss jle pusha add fstl dec dec jecxz sar fiadd inc fisttp loop andl inc inc call jle and mov or negl xlat pop push bound aas test and or mov inc cmp and jecxz jae mov in cmc inc mov daa and dec push jno and mov add test repz and mov pusha mov sbb dec inc je dec lea sub push fs pop dec test icebp cmpsb inc imul push pop subl pop pop mov ret or lret xchg jno adc adc or (bad) testb jle movsl imul dec push sub push lods inc lret mov aam adc dec or adc mov into xlat add sub neg mov push js push dec iret push out xchg pop daa fidivl cmp dec outsl out adc add mov fmuls mov lock jno sti cmp imul and pop sti or pushl add push enter iret pop les jb jne movb mov insb pushf cmp push enter (bad) xchg sbb mov sar test add inc jne xchg pop push fwait mov ret push ret xchg dec add xor dec je xor mull dec inc or mov jge cmp sbb pop lods lock mov add push pusha movsl in sub pop ss cmp sub or pop mov adc xchg sti or in pop xchg pusha in push xor add lods jbe mov rolb xor icebp cmp adc aaa in sub jbe pop mov loope sbb jnp mov rcr imul and (bad) adc pop (bad) loopne xchg add jecxz cmc xchg leave mov add cmpsb pop or add push push add xchg jns pop mov and gs sbb test xor push mov nop sub outsb pop pop in jecxz add jecxz loopne nop aad mov push push dec fsts sbbb sbb xor je fbld or inc les cwtl push (bad) (bad) jo cmpsb lock and incl and cs ret test sti add sbbl or inc fbstp inc pop inc fwait js jne cmp pop inc loopne cmc sti popa lock jl add adc or test xchg pusha insb sbb call (bad) and daa sbb pop and loop sub and sbbb fild push push pop js (bad) sbb bound add int3 xchg arpl dec cmp jne es or lock sub cmpsl mov sbb push add sub mov push jp stos iret mov imulb push push mov cmp adc outsl imul and pop inc pop (bad) jg mov xorl or stos adc jmp cmc lock sub fisttpl push mov add inc loop cmp pop add sub lods or pop test test pop and insl (bad) aad mov push pop and jb or mov dec rolb pusha das add jo cmpb jbe mov dec xor dec mov xchg stos ret xchg cmc add jbe and int pop xchg pop pushf and add adc sbb jp into xchg add cmp jne inc (bad) cmpsb mov add loope jae sub in xor fidivrl inc add mov mov add adc je js test es mov xchg fldl shlb and jge int3 cwtl (bad) lcall (bad) iret mov int3 into mov push sbb add insb je jmp ror adc add mov cmovae adc insl jb lret insl roll inc push addr16 outsl pop push es sub aad fbld jbe fisubr sbb loopne nop aam mov add ret mov popa or testb jne cmpb dec sbb jo in adc jne sahf pop or fstpt or push and xchg jmp pop into mov xlat inc stos add movsl sub cmp sbb ljmp push inc xchg cli out pop into loopne or cmp js sbb test daa rcll inc pop pop fcoms inc pop sub lock push imul cmp (bad) dec add add repnz mov lcall sbb xor xor cmp adc fs add insb jecxz mov mov inc or iret out icebp cmp aaa jl movsb loopne fistpll xor dec dec les test inc imul mov or stc push and imul and mov dec or (bad) fdivrp fstpl fwait jmp jl add jno add (bad) push add fistpl and imul inc subb insl in mov cmp cmpsb push push adc movsl cmpsb xchg popf out jmp pop mov mulb pop sub test sbb xchg mov stos push stc or add sub adc dec sbb pavgb clc push xchg add daa add adc xchg (bad) xchg dec in dec inc xchg popl adc lcall mov daa scas iret arpl jp and sbb cmp xchg jecxz sbb fidivl cwtl or inc pop dec push movlps and cs mov push jmp pop sub dec jo addr16 lret ror jo mov sub cmpsl inc xchg sbb loopne dec call push call jnp push push sub add dec add pop jno mov pop sbb loope mov mov test and sbb pop push sub dec clc inc mov test fwait add add adc dec imul and fisubr add sbb (bad) js add sub cmp mov xchg or sub mov mov push jo lcall cmpsl jmp out fwait pusha sbb lock pop inc dec into lods hlt cmp das push (bad) lock test xchg mov sbb fwait lods mov int3 out lods xor loopne imul add (bad) jno sub xor inc or fnsave sbb jmp and jae adc mov mov push sbb js adc mov pop xchg mov into push jo arpl xorl sbb test xchg fwait adc xchg mov add loop (bad) mov push loope mov iret jmp lods jno test or jbe loopne sbb es nop pop mov jp mov clc add sarl adc lret mov clc pop ja mov sub inc push adc xchg mov mov call and add int3 mov orl daa adc mov jp pop notl push out pop add dec out adc inc adc mov pop scas mov popa inc mov sbb jns and daa add cld jb cmc daa je test jo push jecxz outsl insb inc pop imul stc or sbb (bad) dec adc mov mov cwtl push out rol nop inc orl es sbb jge mov lret mov jle enter push push mov or jmp cli mov dec adc push add or push push dec or insl sub push or test push lock bound int3 rolb stc adc mov movsb hlt mov cmp stc lock aas jnp in xor pushf das or inc stc sbb jne or jge cwtl mov dec sbb cmp lret ja sub sbb fisubrl hlt pop stos pop adc popf pop adc dec inc push lds mov scas pop ljmp jmp mov jno insl inc in sbb add dec add fistp pusha pop lea mov sub inc dec ljmp xchg (bad) dec hlt pop add adc ficom test add movsl xchg push mov xor cltd push pusha pusha ret movb cmp cmp add ret fstpt jns aam pop (bad) inc orl orb rol mov lahf ret adc aaa jl in mov outsl fild cmpsb imul adc xor fs daa mov sbbl sub xchg and std outsl add jmp cmp je mov or rcr push adc adc push sbb cmp push or adc sub dec pop je xorb mov fnstsw sarl jecxz fs or cmpsb dec popa shrb cmpsb sbb imul hlt movsb adc cmp (bad) push cli andl in and imul jb (bad) je in sub js (bad) push cmp xchg mov inc loop inc jne popa arpl inc sahf in or and stos adc or push pop out adc inc mov adc fsubrl sub sub sbb clc cmp and sub stos mov lret xchg sbb sub cld or sarl xor and xor add addb dec fsubl lret xor (bad) mov fnsave cmp pop (bad) nop imul xchg and ss imul sub jb bound movsb (bad) adc loopne incl push xor add and dec out pop int3 and sbb loope sbb add test scas sbb nop cmp xor add mov or xor push sbb neg mov js xchg sti mov cmp ret mov xchg (bad) lret and pusha loop xor xor xchg xchg inc xchg pop add test rcrb xchg cmp xchg inc add js cmp orb xchg sahf or invd es test inc sub sbb sbb cmpsb sbb inc xchg cmp (bad) hlt adcl les insb movl aam inc push add pop (bad) dec rcll pop mov push cmpb in pop add jle stos add sbbb (bad) repz stos das or ret jg or pop cvtpi2ps cwtl inc inc dec shll inc inc add and lock mov and and mov dec imul push sub insb mov int movsb push push nop push cltd cs (bad) cmpsb pusha mov out addps pop add sbb adc addr16 rcrb (bad) ds aaa clc mov fisttpl pop adc dec add dec push or adc fnop adc out and dec pop lods pand out pop add dec jecxz (bad) cmp push dec insl in or pop sub cs cmp outsl sbb and dec cmpsb mov mov jg cwtl add mov (bad) dec aad push or and inc mov push sub dec je jo testl mov jne popf cmp aas or xor outsl sub inc or scas inc lea andl orl and enter xor insb insb adcl cwtl aaa push xor addr16 mov push cmp shrb je or cs xor cmpsb les inc sub fadds or push data16 adc push jo xor xchg push loop xor mov push xchg outsb inc dec jle ljmp pop dec mov mov sbb xlat in inc add iret add div cmpsb je or inc mov xchg in cs fadds rorb inc or mov cmp jmp leave dec sti xor mov jmp push xchg push or pop jp adc add pop cmp vpsrlw jae or ret or lds nop jmp sbb test mov xchg push pusha jle xchg adc adc mov std sti aad rorb xchg sarb ret jne fsts ret sub insl mov fnop adc push dec push sub dec dec mov idivb cmp adc xchg lret (bad) xchg pop or and xchg jmp add mov xchg xorb push or xchg jmp loope sbb jl (bad) adc je cmp adc dec test push (bad) pop push mov push mov mov cltd addr16 dec inc mov xor inc test or nop add sbb iret inc dec xor lods push cwtl fs pop xchg mov adc pop cmp js (bad) decb sbb movsl clc sahf inc add lods in sub icebp lods and pop sbbl sbb add xor and jne add frstor jns xor dec sub sbbl mov sub and and imul or add push push imul dec or fcomp mov pop jnp lea cmp dec pop mov (bad) aad inc sahf xchg mov xlat mov mov mov and negb jg lret inc imul inc lcall rorb fisubl iret dec mov cltd pusha inc push or or push mov popf call jg addr16 clc or sbb cmpl pop and push pop and inc mov andl les leave mov (bad) xor lret sub gs xlat push pop movsb adc mov or or in xor aam gs sti and les mov add outsb jmp sub pop add arpl push push mov dec ljmp out mov test xlat inc sbb arpl pop fsub xlat sbb or sub dec ljmp andl mov or xor addr16 pop lock jo add add inc ror sub sbb dec or icebp xchg mov xor into push mov or jp iret xorb sbb sti push or sbbl sarb jge jbe add outsb push addr16 push mov cmp aaa icebp rorb add test aaa orb mov xchg (bad) nop fbld xchg push repnz nop adc sahf aam or sbb jp out push add lock mov (bad) or add mov add testl stos mov add mov pop inc inc add (bad) cmp xchg pop je imul andb enter cwtl fs movsb cmp adc or pusha daa sahf inc stos xor pop sub add and dec adc das loope push jne push jae loopne sub dec shlb or cmp add sub aas inc mov add jb mov mov or adc push adc inc sarb jle xor push pop sbb inc mov add fsubr dec call sbbl xor mov outsb inc je xor (bad) adc xchg jo jo add inc dec inc mov jmp or sub sbb sbb dec or inc mov xchg fstpl push jns imul inc or adc data16 int3 cmp es mov imul loopne adc in pop cmpsl xchg fcmovnu lods daa lods pop push call jns pusha inc js,pn jne je je pop push adc pushf xchg add mov popa adc loop popf mov push or add rol sbb or pop (bad) or xor iret xor testb je mov test xchg and dec fist inc or push add lods xchg clc jo cmp push sbb inc jns sbb push loop or pusha or lds add popf xor mov mov sbb test mov sub in pop js cmp fnstcw popl and mov add loop adc mov xchg out cmp mov lock cmpsb cmc cwtl xchg push mov test push sub sbbl in xchg or pop push add or sbb jle jns jo cmp mov ret cmp adc xchg add xor adc push ret mov adc or pusha mov dec mov and mov adc sbb shlb inc xor sbb ss (bad) or ret (bad) push aaa jbe je mov or inc pusha add cmpsb stos add push mov and lret mov clc xor mov xchg pop jecxz ss (bad) mov xlat push inc jnp or nop cmp xor mov mov adc pop je mov (bad) sbb test daa jns femms aas or nop (bad) stc mov shufps pop or cmp add cmpsl dec adc rcr movsb (bad) leave and pushf sbb or enter enter pop pop in cmp push xchg sbb pusha cmp sahf jl mov xor test xor jmp xchg rclb out add cmp fistp iret sbb clc jmp xor rclb cli and xchg push sbb js aaa push aaa xor cmp cmp xchg cmp cmp sbb cmp jno rorb aaa mov sbb xchg mov mov lret pop aaa loopne dec scas add je pop adc jg push or xchg (bad) rclb ret cmp push and xor sub mov sbb lods lea sbb or mov adc pop mov insb pop outsl mov and push lods mov outsb jecxz xchg imul testl (bad) xor stos daa (bad) pop inc xor xchg or dec out pop pop adc jg mov (bad) adc adc ljmp out es pusha sbb push std push dec sbb and add pop xchg ret aas push xor call orl mov xchg outsl clc pop nop adc into xor lret sbb incb xchg ds loop push pop adc or push flds imul and imul adcb mov call mov sarl out sub adc or js push ficoml inc std xor push inc leave (bad) inc xchg jp leave in xor aaa jo,pn push insb and or add xor arpl out adc pop test inc mov dec sbb and imul or mov mov mov int sti (bad) pop inc pusha pop cld add push popa inc mov sbb dec push push int xchg (bad) ja adc mov sub pop cmp dec fldcw outsb sbb jecxz mov mov and dec leave outsb and ss inc pop mov sbb adc push add out sti and jne cmp mov sbb imul mov insb (bad) and cli xor iret lret cmpsl lock or pushl iret testb jno test dec sti mov or aam test mov push (bad) pop addl jecxz mov mov push insb add gs push sub fwait xor repz push inc test inc push sub and add aam jp mov add adc add in ficoml push inc push and sbb daa push cld mov or inc stos add fsubrs subb and iret ficoml dec and sbb insl cld ds outsb adc fistl decb fildl fsubp sahf mov xchg mov fnstsw jl xchg (bad) and ffree adc dec mov add outsb or push dec ss (bad) xor imull mov cwtl mov xchg pop insb cmp mov add ret sbb fcoms add inc ds pop rcl jb xchg sbb cli cld clc mov xchg adc add cmp insl or add stos dec or (bad) xor adc pop push fiadd jno enter mov inc divb (bad) xlat xchg cmpsl sbb xchg push or negb inc ret xchg inc aad jne jmp loop add dec xchg inc adc (bad) (bad) test sub mov out cs pop icebp insb ja adc fdivs mov jb je fsubr adc enter js mov imul xlat hlt and dec push (bad) in lea or dec clc push call push or adc push loopne dec dec dec pop and or xchg push or mov xor popa mov test push or add pop and fistl jmp sbb or lcall fs insl add rcl leave decl dec (bad) or push sbb loopne (bad) sub fdivs in testb dec jl imulb add (bad) cmp (bad) aaa call fldl das in or push in push xor adc mov inc call push sub or mov call orps jo cmpsl ljmp and mov arpl clc aaa fmuls sub inc add push or jp aam stos addb pop inc adc mov outsl fnstsw mov pop mov push cmp or or (bad) adc or ret std lods ja and inc fidivr inc or xor xchg mov or shrb pusha xor lea int3 test movsb mov std mov mov add sub xor mov imul and stos push inc mov shufps dec dec mov lcall inc (bad) sbb out push imulb int3 push pop jb loope jp call sub jne jnp inc mov cld into jmp fist rcrb xor xchg mov push cmp mov test insb fs test inc rorb xchg (bad) (bad) or lock bound push sbb lsl adc push adc sub cmp lea push imul add mov addb adc xor jb test pop rcrb push loopne mov inc (bad) add sbb push jle rcrb jge ret das cmp in adc sbb jno adc inc sub scas int3 xchg add pusha and pop and push lods xchg (bad) aaa loop aam pusha ja mov pop test push cs sbb or mov movsb xorb stos jne cmp pop add xor sti rcll or sbb inc (bad) jp pop cmpsb test lods dec push jp std sbbb xchg cmpsb push popa cld xchg lahf test or add pandn xor xchg cmpsb pop jg cs inc or loope jbe cltd mov jmp lock popl mov push jecxz ja add cmp add sbb add adc or xchg mov divl test push je xor jbe out callw rorb adc lea mov push sub sub mov or (bad) lock push adc inc sub ret loopne ud2 or sub int3 add lret adc sub lret mov add or repz pop add jmp sub push pusha mov loope jge or push es fsubl push dec or and push adc xor test xchg mov andl lret adc jp rolb cmpsl rsqrtps push test mov test jmp add sub jmp lahf movsb xchg clc and fmulp dec les inc or sbb sub inc ret pop loopne dec test call adc and (bad) cmc cmpsb push adcb adc push mov scas sbb test popa (bad) std and jo sub dec test pusha insl test adc out frstor test ss jns xchg dec adcl mov insb push (bad) add sub xorb add or add or les rcrb insb outsb iret out add lea lods inc into jmp repnz or xchg xchg sti lret xchg mov bound movsb and dec jl mov addb std mov add and sbb aas add jo jge xchg je aaa sbb sbbl inc rorb mov push insb mov xor sub pop out sub xchg add mov sbb dec in cmp subl push xorb pop sbb movsb inc js sub stos outsb (bad) dec push add jle push (bad) jmp xorb sbb popa push incl and push lea mov and movsb inc hlt mov cmp mov imulb fwait (bad) xor in push out fwait pusha dec adc ror sub add (bad) mov (bad) sar dec dec fld xchg out lods fsubr jne movsb add cwtl dec loop fstp push jge movsb or stos cmpsl mov aas lret jne cwtl mov add and xor xchg xchg push iret sbb das adc inc sub dec lret fimull cli repnz insb pop xchg inc cmpsl xlat pop test imul lods sarb inc pop nop fcoml orl sbb or add wbinvd cmp push add dec popa xor jmp (bad) cmp jne xchg jne mov xchg ret push jne (bad) scas cld add dec insb dec jo rorb scas test cltd inc inc dec ficoml mov cmp dec test mov and js in xor in mov sbb mov hlt xchg add inc cmc out out mov or ss xor pop mov push dec and add add add test add pop insb sub mov cvtps2pd push aam (bad) push ljmp xchg inc outsl mov add inc mov aam ss jbe sysenter outsl add dec cmp outsl add or xchg dec and bound dec jo test or mov xchg xchg xorb and dec mov andb mov push rclb add popa inc inc cmp pop les adc sub shrw repnz or arpl push dec inc pop iret push pusha inc pop inc add mov les (bad) jmp xchg inc push xor in daa icebp cmpw or dec jle and push or and push fdivs shrb scas and xor in or dec addr16 add pop adc add nop test xchg out xor or add or push push jmp dec and (bad) xor dec scas rcl cld xchg push les xor sbb xlat adc pop jmp xlat jmp lods pop out cmp loopne outsb add (bad) mov add sbb cmpb inc add fisttpll aam rcrb cmovs or xor sbb cwtl lods dec fwait jne sbb pop lea int3 in lret pop push rorb jns shrb lahf loopne add push xchg inc cmp add scas add push mov lret mov xlat cwtl pop mov cmp adc jnp inc mov pop cmpl dec pop xchg mov xor dec ret mov pop rcr insl adc inc scas nop imul rcl lcall mov xor popa pop shl add cmp inc jnp rclb xor pop jb mov lods int3 add pop add (bad) data16 cmp mov push xchg cmc inc jnp xchg jmp push dec out sbb pop adc pop xchg aaa inc mov add mov inc sub mov ficom sbb xchg sbb sbb jo pop inc adc punpcklwd mov mov push add or loopne sbb shl sbb pop outsl rcpps jae mov jle (bad) (bad) mov mov or or adc adc lret jl push adc or push lcall inc aas inc leave je pop pop mov lods testb adc and lods dec pop loopne adc addr16 push cld inc ss mov xor push inc inc sbb add pushf inc das push stos pop add add je xchg mov adc xchg adc inc test daa lods dec or outsb push dec je movsl push (bad) adc push push inc push in jmp push and cmpsl push inc jo sbb add dec lahf repnz mov mov inc cwtl loop pop fwait je mov jo in iret mov push mov lea (bad) in push add loop mov test push rcrl mov jo adc cs test sub adc lock mov loope dec lods mov inc adc fcoms outsb jecxz dec jns xor imul pop dec and inc adc or int sbb sub pop push fcompl in insl test cmpsb inc push mov adc lret add gs and adc xor adc loop,pt cmpsl xor and imulb (bad) xchg xchg into repnz adc cmc lea adc sub sub movsb popa dec sub sbb insl cmp addb movsb pcmpeqw clc pop xor and add (bad) (bad) lea les loopne mov and out add outsl mov dec hlt or dec dec sbb insl push dec or fnop pop mov push cld aam add pop xor push fcmovnb fs out mov das adc or push test inc mov push dec xor jmp sbb push (bad) and roll and jecxz mov mov push push lret pop test clc fstl test data16 add dec xor cmp imul or pop adc dec ljmp adc cwtl les dec push cmp enter cmp add add dec add (bad) imul jg dec xor bound xchg mov pusha push daa insb and mov mov xor insb adc dec push lahf aad movsb xchg mov jb mov or rcrb dec pop sbb and and imul nop loope push adc adc stc mov pop and sbb pushw mulb cmc fwait and ret fimull fstpl jle xchg fcompl or int push fiadd dec jne not fwait je js xorb pop dec inc js mov pop mov sub lock mov jmp imull jns test push add insl cmp push add gs mov scas lock sub mov movsb or movsb sub out or sub call jl fwait sbb and xor fwait cs movsl mov sub outsb jg cwtl or je add jmp bnd in cmp fiadd aam int3 mov mov adc push or and subb xchg push push dec daa mov cmp pop rolb imul pop mov mov out xchg jmp sbb xchg icebp dec aam dec test inc sub xchg ret xchg ljmp out jge mov mov cld in scas sub adc adc adc xor les mov movsb scas adc cmp or mov xchg cmp sub push test popa ret adc adc cmpsb iret out rcl xor cli and push mov popa sarl nop mov inc ss ljmp jo aaa lods xor std sub xlat and loop dec aam lahf inc or jmp mov push mov test arpl inc dec push dec les outsb je dec int and iret (bad) lret mov stc lods mov outsl js mov je push mov (bad) les pop jl orl xchg xor loopne inc iret pop (bad) cmp inc outsb push inc jne (bad) cli rcll and mov rcll inc test dec or rorl cmpsb lret pop mov cmovs mov mov cmp inc addb push mov pop inc jge cmpb and jns push sbb sub adc and in xchg add push sbb ffreep aas add movb popf movl and xchg or aas and push testb push xchg or xchg sbb jbe adc fs add mov lea xchg add xchg cwtl xchg xchg push leave or (bad) repnz mov inc les ja loope inc and add lods dec add pop lds sbb test jbe add xor sarl test mov or mov insl and mov or cltd dec pusha mov insl lret or (bad) dec pop pushf nop push enter pop dec sbb aad dec or enter lods and test and push sarb ret mov adc nop push popa test sub mov test xor and dec into xor add dec movsb (bad) pop xchg xorb xor pop shrl (bad) xor mov mov inc out mov push ja scas incl mov push add clc add cmp decl pusha loopne mov std adc push sbb in ret ss add adc dec or aaa pop sbb adc jb sub out lea sbb outsl jge (bad) andb adc inc adc and nop xchg mov loop mov jns xchg nop cmpsl and add mov inc in idivb fstpl pusha and xchg leave sub out test sub jmp pop jne pushf mov cmp mov dec out divl add or add mov jns in jmp outsb arpl aad hlt jmp arpl pop cs imul xor jne data16 jo xor xchg data16 and insl jae inc or popa sbb lods dec push loopne inc lds pop sub cmp lds lods icebp test mov ret call fild adc cmp movsl cmp dec push add mov loope into fcompl dec cmp ja imul gs push fild out es imul mov pop add imul cmp fildl cmp orl fbld xchg into dec mov inc mov loopne stos (bad) lea fcoml sbb or inc or mov inc mov cmp xchg cmp pop xchg es xchg add insb push movsb (bad) mov sub mov (bad) push lock andl shrb push movsb outsb sub loop push movsl not lods add pop jmp sub mov mov sub push sub cmpsl and test pop pop mov lods inc in xchg xlat or pop adc inc (bad) roll dec push jo push mov cltd popa sbb push add add daa mov rcrl sti cmp or fsubp loope xchg insb (bad) addr16 or jno addr16 push je addr16 lods negl sub sub and xchg adc adc and js dec inc rorb inc sbb jbe xchg push jbe frstor xlat ds xlat fimul lret lds enter mov mov test xor sahf xchg mov jno addr16 cld xor call leave or add insl fst bound fadds mov out or mov lock jmp jg pop jns pop sbb pop (bad) sbb cmp jne flds div cltd dec pop loope stc icebp aad adc cmp mov pop add adc pop and imull push leave nop sub add mov adc iret sbb or pop dec imul push cmp imul je hlt and (bad) xor xchg pop (bad) dec add dec xchg sarl lcall adcb pop and sub insl xor sbb hlt push loop (bad) out xlat mov int into jecxz das enter int3 pop cmpsl jne jmp sub addr16 push sbb gs sub and mov dec sbb (bad) mov hlt cmp pop add lcall push (bad) test ja push mov sub mov or sbb mov mov jb pop aas sub xor test xchg inc sbb pushf fisttp xchg das imul add adc add daa orl sbb (bad) aad add jb fisub icebp cmpsb addr16 cmpsl imul inc xor add mov insl jg xchg cmovbe adc imul xchg lods push rcrb mov (bad) pusha push out adc call add paddw insb in lock inc xchg sub inc hlt hlt add inc pop leave insb test inc sbb imul enter sub call add (bad) ss sti and test jmp and pop insb mov sbb fdivrs push sub inc call nop in add add (bad) sbb or out inc or adc shll inc aam aas xchg pop sarl jl fidiv pop pop adc xor test adc cmp fucomp push test shlb mov jmp (bad) sahf fild movsl sbb xor (bad) jb data16 into push sub mov adc lcall adc daa (bad) mov xchg or lret dec adc outsb add aam das dec push xchg imul call cmp jae pop lods cmp sbb test sbb mov aaa dec dec adc push fmuls add mov cwtl add mov mov mov add or test mov add sbb dec pop repnz adc popf adc mov std and pop push ss out not or mov push pop adc add xchg sahf xchg dec add les sbb cmp hlt sub push mov (bad) repnz or mov sub movsl xor sub repz mov add jg popa mov xor (bad) nop mov cmp jle movsl mov jmp sbb (bad) and mov je ret (bad) and sbb ret test lahf repz dec daa jmp add int3 cmp push cmp push and flds cmp cmpsl and dec std nop and push pop loopne sub sbb dec adc mov xor ja or jbe add mov pusha adc sbb and inc dec ja mov mov inc adc sub inc push nop sub (bad) leave fbstp loop dec mov add inc mov test jno dec mov fwait cld add dec sub sub loope jnp,pt xchg cmp lret jmp loopne pop dec lea dec (bad) xor inc adc dec sbb pop or add or sbb and add movsb push sbb add inc cmp inc xchg mov mov inc xor dec movsb push enter (bad) xchg sarb add mov das inc decl adc cmp sbbl jnp jb add mov inc repnz mov sbb jns sbb loopne inc (bad) clc dec jmp mov out mov lea cmpsl mov push inc mov test jo dec cld xchg movsl jmp push sbb mov lods sub lds jno cld fiadd mov (bad) aas push xchg (bad) xchg iret cwtl push orb int aam loopne js dec out add or jns mov pop sti mov popa and sub fdiv add insl es movsb mov nop js inc push or add adc ret xchg add sub mov inc das push push sub addr16 sbb or adc or mov sbb adc push cli loopne (bad) xchg sbb xor arpl sbb test dec cmp bound fistpll adc insl mov (bad) mov cmp inc inc test push xchg and in xchg outsl add lcall fs das dec add loope or xchg add lahf bound push push test cs mov cmpb mov aaa push cmpb fnsave cmp sub inc popa jne add xchg rolb or push push adc scas aas cmp dec jl sbb test scas pop int3 add insb add mov aaa mov cmpsl outsb test pop sbb add (bad) (bad) ja push and icebp or sbb faddl pop add mov dec or sbb xor arpl xor lretw xlat pusha sbb mov aad dec xchg inc pop mov lcall std sbb rcr pop dec or adc fdivrs fldl push sub lock jmp push xorl pushf mov or test movsb repz mov sbb in adc jl jl and or and jbe arpl jb addl jo adc or and shll dec out (bad) sbb add mov or push ljmp sub xor loop mov ja ret (bad) xchg xchg xor xchg pusha pop movsb xor xchg clc pushf add mov cmp inc and sbb adc sti sub add out cmc add inc push ret mov test les loope mov inc gs xor inc xor mov fs add dec sub mov xor inc xchg dec imull aad (bad) out fildl pop bsr push aam dec sub xchg pop je push xchg and xchg in test add sbb lret ficoml inc pop movsl pusha movsb leave rorl lret test cwtl and inc and loope js ror jp (bad) cmp outsl or cmp fildl pop (bad) leave aas in mov fs inc clc mov or mov cmp enter mov pop jne or sarl or rcll and mov inc shlb cmpsl pop pop adc inc or inc mov add sbb rclb push popf mov inc movsl mov std cmp cs jge add adc pop xchg cmp mov sarb jl mov (bad) adc pop inc pusha xlat leave faddl lret jne movsl sub jae push bound mov int out add jo pop repz dec fistpl pop lahf inc xchg xlat test dec push mov call or ret add adc push or int3 movsb add leave mov jge fisttpl stos imul sub push lods shlb in leave scas loop ret das mov daa adcb sbb sub jmp fadds inc fistpll add hlt loope sub or and stc cmp adc xor fcmovnbe adcb clc add mov movsb hlt outsl test or adc pop rorb mov xchg dec sub inc jg push jnp repz das hlt data16 je (bad) adc rorb and outsb loope je add je in add dec repz xor lock xchg cld js dec iret pusha cmpl lods or mov je lock jns mov or add (bad) pusha das or jge push mov faddl lods mov mov sub insl int3 sub mov and rcl or sbb cmp xor or xor cmpsb rorl xor lea fildl dec roll into jp jns xchg into ret mov sbb or sub sbb mov adc cmp sub notb ja cli and cmp pop sar mov lods push es or push xchg (bad) dec add gs into movb fcompl add adc and lods inc or aaa pop in sbb mov ss das dec cmp sub mov mov ret sub pop and cmpsb movsl pop pop pop insb lret mov jge mov mov inc xchg loope add ljmp cmp lcall movsb lods mov adc mov or (bad) push jne orl repz add add outsb dec push xchg cli pop jg fldl2e (bad) push ss pop add dec or imul roll sub mulb jl inc xor int add pop mov sbb jns cmp ljmp xchg pop (bad) add push and push cmp or and mov dec jmp and push sti fidivr (bad) (bad) mov push rol mov add fdiv and mov into add jne pop jo dec loopne pop lcall dec clc and js dec cmpsb jnp sub sbb xchg and inc mov xchg cmp sub or enter icebp xchg js jp dec int3 push push adc sub sbb inc mov test cmp leave (bad) inc jns jbe cmp xchg cmp mov add xchg in addr16 and roll push pop or lock adc jne popa sbb popf sub leave pop (bad) aaa ret test jb movsb sbb pop fsub (bad) ret cmp aam xchg movsb test dec test je vmovmskpd xor mov fcomps pop push (bad) pusha or or les (bad) sub sbbb sub fs pop jne subl adc add inc cltd fwait push sub fsubl mov repnz scas call dec mov lcall rorl or adcb out jo lods jnp insb mov add add add (bad) jle sbbl dec into test inc psubusb addl js mov in pop cmp pop or push (bad) les pop and dec and xchg add fildl inc (bad) xlat addb adc popa mov cmp mov push adc adc inc clc scas pusha jo rcll add sub cmp jb add jmp inc push jb jmp scas add pop rorb test xor addl adc adc outsb mov cmp mov jae pop cmp ja pop data16 test cmp and adc sbb test cmp fs xor mov loope mov scas ret ret negl pop mov push push mov adc loop loope sub adc xchg les and jns mov mov leave jnp data16 inc dec int3 jg rcl inc cmp pop aaa pop push pmaddwd popa sub je jecxz andb clc mov adc push push push add add or push in popf dec je push inc cs xchg jne mov lock (bad) mulb xor imul pop arpl push ret xor fdivs mov insl xchg test or pop fnstenv fstps sbb mov fnop mov and sti icebp sub mov daa xor xchg jge adc rorb pop lahf (bad) mov jno lea xor jle mov mov xor inc daa mov fnop and inc lcall add (bad) aam add or loopne sub or mov xor iret mov ret loope fwait jmp cld sub fisttpll pop mov call jno cmp sbb faddp add or cmp icebp mov mov shrl mov ret lret and jne loop or cli sub pusha mov xchg repz (bad) je rolb fstps and push lret mov push sub xchg adc mov mov outsl push inc rorl or sub arpl dec out test adc inc mov and scas pop xchg dec mov mov or inc jne xchg popf push mov or push and repnz add rolb cld rclw (bad) insb inc mov mov adc inc je pop aad and cmp mov dec jbe inc cld push add aam lea jecxz inc dec dec cmpsl (bad) sub into aad cld mov push jno xchg loopne clc inc or in dec push scas mov mov jmp push inc add je aam or mov sti or mov icebp dec cmpsb stc fidivrl sub test and test sub test lea addr16 or jmp add mov in mov popa push cmp xchg sub push test or sub sti cmp push movsb push jnp scas or push push adc jb push xchg adc jmp xchg fldenv (bad) test shrb bound cld adc rolb lock xlat mov ds add xor mov lret stos pusha mov xor push or add lahf xor adc xchg ret xchg popf test les pop iret adcl add jle clc fs lret mov out repz aad jae push sbb mov add add or sub es nop pop or sub (bad) shrl mov andl mov add shrb xchg mov push divl lcall inc dec and popa and idivb cld std lods xor mov idivb jb idiv dec push mov loopne push (bad) or enter pusha and push lock xchg fcoml mov xor repnz out inc or lock or aaa mov inc fcomip add and ret and mov add and jno aaa es adc rorl inc sub fild pusha add divl mov fidivl loope mov jge popf pop add mov mov pop push test xchg xor or jecxz cmp adc sub cmpb icebp pushf inc or orl push add inc popl mov fstps xchg mov ret push xchg stos xor or sbb xor push nop jle mov adc out rolb or dec mov in add pushf call mov cmp push sbb shlb pop mov jae sub in clc lahf add lea lea pcmpeqd inc and or mov jp iret sbb (bad) jecxz fnsave pop movsb test cmc movb pop sbb pop push sub out fist mov jge push jp add xchg mov loopne js pushl and sbb nop add mov lods lock jbe imul (bad) jl sub test popf cmp inc cmpw mov sub fcomps daa sbb jmp cwtl (bad) hlt mov movsl pop inc cmp aaa xchg mov aas ret jl aaa xchg (bad) mov test jp movb int3 pop xchg daa add and lahf clc jmp pop (bad) mov sbb sbb sarl adc sahf inc add sub add movsl or mov xor je lods pop lea ds xchg rorb js cmpb fadd dec xchg movsl and in push adc and and xchg lret push adc dec xchg xchg cmpsl mov das cs dec xchg lret pusha and inc fcomps loope mov pusha sbb sub ds mov add push inc cmp mov cmp jne stc sub dec cwtl stos push lds insb notl repnz lock add es cli cld clc pop cmpsl andl add dec sbb mov cmp jl enter add rcrl into loopne lea in ljmp sub pop and outsl jl nop sub mov sbb outsb daa cmp shll mov cmp pop and das pop aas mov push push iret (bad) or push add inc push enter adc push or xchg enter nop cmc pop jae xor (bad) adc int arpl stc and ds sub pop dec mov mov test xlat arpl mov xchg lret add push dec and in add (bad) mov dec xchg imul inc fistpll outsl lods ret daa and xor stos and (bad) (bad) mov xor add cs daa adc push out add lahf sbb call pop mov nop lret mov xchg jne mov mov popa dec adc mov pop inc jb sbb jp pusha sbbl dec imul jo (bad) shlb int3 repz and add sbb push xor jmp mov out adc cmp sbb mov xor pushf jae xor movsb add lret movsb adc or call jge bound cld stc ljmp ja loopne push sub sbb mov xor pop push pusha push mov dec pop or mov sahf mov enter fimull sbb add and push test pop dec xor or pop std push mov mov sub inc ljmp mov lock add lahf sbbb adc mov dec dec add jmp adcl dec mov dec fwait (bad) cs pop out xor push sub add push add adc or add test jecxz push cmp inc cli push push sbb jmp (bad) push dec ss pushf mov aas mov or jbe data16 pop jae sbb pop (bad) adc sub data16 mov or xor inc data16 push lret mov mov inc (bad) mov xchg mov mov xchg fcoml mov sbb nop lret sbb push push mov push leave xor sbb lahf insb rorl fstpt and insb and push jnp aas into addl pop adc loopne (bad) mov inc js and pushf test push adc mov popf mov orb mov and lahf cmp adc cwtl adcl mov and les jo pusha add add sub cld or data16 es xchg test inc loopne jne sub or popl pop pop insb testl cmp mov and sub enter lea xor mov xor and mov xlat push (bad) rcrl or in pusha sub or mov imul test jg (bad) xor add (bad) outsb push or popa lahf cmp scas adcl ret lock in cmp lock inc call lds shr aad pushf add ret shrb adc clc ret pop xchg pop jne xchg (bad) cld jo (bad) jns jle xor shrb (bad) push cmp and jge jns jecxz movsb divl and or fsub pop mov inc fstp fbld dec ret mov shrb inc rorl xor lret and adc stos sarl sbb les pop or or rcll push mov push push sbb inc or jae pushf push fnop and or in insb jmp dec cmp cmp mov pop xadd push add cmpb push sbb (bad) adc inc dec fnstenv lcall or mov movsb aaa pop jecxz in cmpsl ret sub mov mov (bad) notb adc sub or loope aam adc (bad) fistpll xor mov jmp pushf sub push loope or mov aam adc or cmp dec les jecxz cmp js ret or and mov bound rcr jne dec jne dec fimull inc mov aaa imull popf dec xor movb push inc mov lea xchg dec jge aad ret xchg push inc or addr16 pop iret fldl xor adc xchg (bad) fnstcw jb mov jmp insl xchg mov into push and (bad) aaa jb les and add cmp add ret dec (bad) add aas sub sub (bad) push dec adc dec clc pop jne pop mulb inc xchg push js loope and inc pop ljmp push adc gs jmp add pop (bad) push (bad) jp lahf pop popl add sti adc inc mov mov sbb dec andb and add xor push mov cmp aam dec icebp jae push pop nop jnp les sbb cmpsb inc xchg or shrb add inc pop sbb call imul jo pushl adc sub push je adc pop jmp add and xchg jb,pt ljmp jmp lock push enter dec cmp (bad) add test dec inc fdivr imul xchg inc push test or dec push sbb por add adc adc inc out aas jns add push inc test push or xchg div push insb mov and add push and into and das in adc lods addr16 out inc mov xchg xchg adc je je sub sbb adc xorl adcl adc jmp pop sub add inc xchg push pop jmp fdivr or add cmp mov cmpsl push pop movl (bad) lret adc and lea and in gs fwait cmp (bad) lahf icebp int cmp adc dec dec dec sub cmp adc sahf xor push jmp xor cmp loope mov sub insb or stc add inc gs adc mov cs or or test or (bad) or sub or imul or cwtl in inc push imul xor jne inc ret es imul inc add push inc insl or push imul or xlat jg jo mov xchg int3 sbb outsb add stos sub nop int3 cmc add jb daa sbb rorl aas mov inc or cmp add sbb adc clc xlat imul mov pop mov dec test sbb mov mov enter dec mull imul adc jle and daa pop ret movsb inc add inc pop pop rolb or out xor pop nop jo mov testb adcb lods xor mov sbb sarb hlt decb ret out and rorb mov sbb mov pop jne es or xor bound dec xor inc add push or mov hlt mov imul mov add adc inc mov mov or mov mov adc loope push sbbb loopne popf push jae add jp adcb dec and and jmp sub (bad) lock mov add fildll imul ss pop (bad) movq sbbl mov lahf xor inc addr16 pop fstl aaa lds pop insl push cmp inc je cwtl das sub nop xchg push mov or sar or and xchg arpl cli add aas mov sbb push push shrd fsubs sbb cltd cmpl jge and pop sti into mov aaa add cmp jle aas ss lods cltd dec mov cmpsb testb xchg (bad) loopne (bad) fiaddl test push cmpsl pop push lea sbb test divl adc addr16 das jae xchg nop out call push cmpsl or adc ja pushf in mov push cmp fisttp sbb push shufps lea add movl aad pop inc lea icebp (bad) inc adc mov in mov stos arpl mov mov shrl aaa minps (bad) cmp ret xchg push add adc pop out jae mov xchg fldt mov cltd enter xchg test je ds add xchg or mov pop or adc xchg add hlt xor roll adc mov or jmp push xor inc stos movsb mov andl clc sub adc add adc loope aaa sub or adc dec jmp push push cmp bound out test push or adc cmp ss pop mov cmc mov mov mov rcrb je mov arpl cltd pop icebp repnz cmp mov dec push mov pop popf (bad) cli mov test jne pop pop or outsl adc jno xchg mov xor or or push loope mov js cmp pop adc push test cltd push push cmp add dec gs push inc flds ret je mov mov push fcompl aad pusha add and cmpsb xchg dec repnz clc sbb seto inc push add or and loop mov outsb das aaa pop js push daa xchg or clc sbb push inc movsb popl je adc jbe,pn es jbe mov je jmp or pop imul sbb or rorb subl pop aam dec jnp decl fs sbb sbb out xor data16 je xor cmp mov js inc adc add in notl add or mov xchg subl daa mov adc ljmp pop fildl cmp pop jne imul push pop frstor insl inc sti mov stos sub add cmpsb lock in test add cmp push sub push pushf push lcall cwtl out shr or call roll mov jmp addr16 repz enter cmpsl or add push pop inc push int3 inc sub dec dec das add in movsb push mov mov mov orb xchg outsl movb add addr16 mov jo outsl mov xchg test inc cmp ss rorb xchg xor add add mov cld add sub mov or xor jo or nop xchg add shrb mov dec movsb imul inc mov push test mov pop jg out adc pop jmp mov (bad) jo jbe jge scas adc loopne jnp cwtl testl or aas mul mov push and jle adc jmp sbb xchg sbb int3 add mov push mov imul mov push sub mov mov aam xor or add aam sbb add xor dec stos loopne (bad) jge cmc pop rolb jle sbb imul fstl imul sbb insl xchg cmpsb jge fdivrs enter in in xchg or dec les cmp mov add adc hlt (bad) repz jb add add xor (bad) or mov cmpsl xlat add push add inc and inc xor adc mov jge insb xchg add mov je sub add dec out fs push js inc or jge dec sbb ret hlt das insb or xor mov jae add aas pusha xor fsubrl hlt sbb xchg add dec das adc xchg jno mov movsb add js xor in je xorb xchg js test pop cmpl pop jmp inc jne sub and sub stc cmpsl sub jge sub lcall test push sub sbb (bad) jmp jmp dec jne gs adc enter push cmpsb xchg add ret xor aam std imulb add or sub sub lods jno orl add dec in dec aam cs push mov add loopne fsubs movsb push imul add fwait sbb add aas push inc mov popf adc call imul rolb sqrtps adc dec xor lock add sbb and add mov notb sahf sub adc fmul pushf pop pop add inc or sub or jne ret and xchg dec scas xlat push add jb xchg or fimul inc imul dec aam rclb xor pop popa icebp int3 lea lea js out and add sub pusha cmp aam mov lds mov aad dec movsl jae sub adc xchg dec xchg rorl ret mov nop pop mov flds mov sub pushf push fcmovnbe mov testb adc add push cmp das add sbb (bad) pop adc mov cmp (bad) imul jg sbb or adc loopne cmp cwtd jns pop pop cwtl fistpl clc jno mov aam dec icebp mov jno (bad) jno imul enter xchg test and rcrl and mov mov push aam mov push cmpsb cltd mov xchg aaa adc push add or xor or sbb shrb mov adc adc cld mov xchg (bad) mov pop pop shlb movsl (bad) jle mov inc mov inc or push mov adc and add add add nop mov shlb enter dec js or jnp les push dec inc pop add std add orl add sbb nop cmp lea jmp or pop inc jae sub add sbb mov out fidivrl mov push mov sbb or adc shlb sbb jl add call ja xor add xchg dec xor or out or and inc pop xor inc sub jbe dec or dec or daa jl ja xorl (bad) lcall flds imul mov hlt sbb add mov push (bad) fisttp mov movsl xchg sbb sub psrlq and call or fcmovb std inc mov mov push or add bound cmp push nop (bad) ljmp add dec rorb pop subl xlat rcrl and lds lock adc add imul push dec das hlt cmp into pop xchg pusha pop xor cwtl and imul xor rcrl adc nop dec div mov addb adc sbb sub leave addr16 scas xor insl lea ret add data16 inc or xchg in out in mov addl (bad) enter cmp pop adc add inc jecxz add loope ret mov or test push sbb ret jg sbb scas pop fs cmp ret xchg stos push rolb adc rclb (bad) hlt xchg popl dec (bad) adc cmpsl inc add dec sbb mov fisubrl xorl test adc pop sub add pop ret jb pop jbe push aad mov mov dec imul dec add inc popa andb xchg pop mov fs push dec dec and mov sbb add add push sbb add pop repnz icebp mov mov pop repz mov in xor xchg adc jbe insb sbb movsb (bad) sbb imul test jo adc pop ficoml adc xor test cmp addl add jns mov fs add js jge jae mov cmp insb dec call outsl jb call mov pop sub push push cltd sub dec or data16 xor xchg pop ret adc jbe xlat push setl jns sub adc cmp push push (bad) xchg in rolb xor sbb sbb das pop bound jle frstor xchg lock or iret fiadd adc xor ret addl jg lret mov lods pop inc loop xchg push jp lock sbb pop popf push add out cmp pop jg dec or jle js fbstp xchg mov addl push or jg (bad) inc or dec (bad) mov dec dec mov lock mov adc mov jge xor mov sbb sbb adc push ds sbbb sub lea mov pop in mov rorb aad imul es inc aaa and or xchg rclb shrb push in mov inc cld push xchg mov add dec loop bound cmc push or leave je sbb sbb lea and movsb (bad) mov dec push sbb lret rolb push scas xchg mov xchg sbb in mov jge dec dec fcmovnu dec cmpb int sub in push js fstpl jg int stos and pop neg push xor inc jl push push (bad) push pop cmp mov or mov aas enter ja je push mov fimul subl mov in imul cmp inc insb repz fildl push and push jne js sbb pop xchg cwtl mov push or and out and movsl or jl clc jae or pusha cmp jne xor js shrb or xor subl cltd mov movb in xchg dec sub mov jg aam lock mov push xchg xlat popa jne inc iret xor mov je xchg out push rcr or or lcall mov sbb cmp cmp nop addl bound test iret mov and (bad) dec inc imul rclb lds insl rorl daa cmpb push sbb inc fs es and adc sbbb (bad) push arpl movsl lock sbb mov xor fcmovbe je hlt push sbb test inc repnz test push das mov mov popa mov rolb jbe sbb push out xchg mov xchg inc or cmp xor insb rcrl ret push add mov lahf dec inc fcomps and ret (bad) pushf pushf pusha pop mov push push dec jge fidiv jp inc adc inc add js jo addb ljmp cmp inc mov sbb mov je push jne ja add sub popa add arpl mov (bad) lcall cli or movsl inc mov cmpsl sub jne imul mov sbb fadds insb int sbb pusha shr adc sub mov cwtl sub dec dec enter push inc out xor mov push mov call outsl or ljmp cmp add mov je popa lds dec xor jg xor jbe adc mov mov adc adc and and out adc inc or add or push mov xor aad and mov daa or inc cmp fild fnstenv ret cltd (bad) sub outsb and cmc add dec aam mov fs push add arpl inc adc sub mov (bad) mov dec mov pop cmp mov inc sub sbb jecxz loopne sub mov (bad) mov or shr cmp or (bad) (bad) pushf pop fimul ljmp in daa dec jmp add test aas add test pushf push adc nop lahf cmp or add repz les rcll pop mov mov or adc sbb push jne push cmc test fistpll je and inc adc add enter dec adc push push nop adc inc mov pop inc aaa fs dec fiaddl out push mov sbb test and mov pop dec sbb (bad) inc and mov inc ja call mov clc mov jle and sub or inc imul or and sbb xor inc (bad) lods aad ret comiss imul dec fistpl adc (bad) sarb adc rclb sbb push hlt sub fstps data16 pop in mov clc dec iret mov pop sbb es movsl dec or cltd es xchg add ja sbb test jo and xchg adc xchg rcrl push cltd dec sbb outsb das cmp jmp or pop lret (bad) stc ss adc mov rclb pop xor inc jg scas mov cld cmp fcomps in push cmp mov sub jge rcrb dec cmp mov mov dec call cmp cmp inc test add add mov push xor imul push sbb dec mov sbb or add add addl cmpsl jl mov decl mov or jp add hlt add cwtl inc andl inc fdivrp cmc test ret clc add xchg adc and jbe insb pop aaa or out movsb and push cld sub insb adc ret mov clc test or addl fstpl push sbbb mov adc pop xor push add ret add (bad) mov mov loop sar inc xlat xchg fcomps scas mov and mov hlt pusha nop inc sbb les jne mov hlt and xchg adcb idivb daa cmp or cmp mov int xor pushf push (bad) cs pop insl adc jge fcoms cmpsb sbb and pushl mov mov rorl add jne xrstor jg mov or mov adc pop mov mov aaa push fs ret subl (bad) mov fbld cmp add fstpt shr xchg adc shlb loopne cmp dec dec ret inc cmp and (bad) or jp jmp shrb or vmread lea xor mov mov pop les adc sbb or adc sub push mov add sbb or push fadd loop imul mov sbb fnsetpm(287 bound int les fs cmp xchg push xchg aad scas andl ficom mov pop xlat sub inc dec dec inc movl (bad) loopne jns inc int3 or orb or or push fwait mov push sbb les ret lds jmp xor sbb and and popf rclb repnz repnz lcall loope cld test sub xchg push or push push movl push movsb imul or sbb or push adc jne or pop adc popa mov push popf sbb or mov daa sbb daa cmp movsb jb addr16 (bad) sub xchg pop adc fldenv lcall pop push nop or mov xor sbb add ss inc or xor imul or or dec and sbb lock adc adc dec xchg ret sti add xor fisubrl lret sbb sti mov sbb dec jg ret add cmp and xchg lcall pushf add sbb shrl dec cld popa std pop sbb push dec sub cmp jge repnz jmp adc scas push xchg jl or sbb push xchg jg idivb imul and sub add add ret enter int3 mov out sbb push js lret gs sbb and sub adc or push roll xor add pop int3 gs stos test add adcb inc inc in dec inc fwait (bad) sbb xor out out inc (bad) aam push das xchg sbb cmp jbe jg daa adc and out add lock xchg add pop in (bad) cmp add inc in xor sbb iret inc out nop lea pop jne pop jb std movups bound fist inc es cmc and dec sub xor sbb jo aad or inc roll add jns cmp aam adc divb mov ret call hlt adc push sub (bad) sbb das or add push or (bad) jle and ds into movsb push or xor aad aaa mov leave mov dec mov in lea and and pop mov in or or inc roll fs pop (bad) outsb loopne xor outsb xor in pop leave popa scas push push je add flds jmp pop xor jl shrb les mov mov in dec or mov mov ret popa adc and pop inc dec in rorb mov loope pop cmp adc adc shlb insb sbb xor fistpl push adc lock dec (bad) jne test push adc andl enter sti insb (bad) pop mov cmpsb inc push or jo roll xchg fdiv lea insl fistpl and jae outsl pop add adc or dec std movb (bad) pop jecxz roll roll sbb push pop or xor jp fs dec aas outsb xchg test jle push or push (bad) push mov jbe mov or (bad) or jae inc fsubr push pop jle sub push inc jge data16 push xor or sbb loope xor inc jb leave out and or cmp mov inc shl or fisttpl adc mov rclb adc lock in pusha cmpsb xchg stos jmp jae dec nop push lea adc mov add xchg rolb cmp ss and sbb mov add outsl pop ljmp mov aam add or in dec adc and fstp mov xlat push mov xchg fmuls pop adcb add lret dec and xor jl or dec or adc and and mov push xchg xchg cwtl sub pop cld pop push pop xchg cltd test xchg outsb sahf or pusha clc jl int3 pop out add push inc or adc mov dec sbb inc or jecxz xor out push inc push dec cltd outsb rorl sbb push pop inc or xchg dec add inc xor loope imull sub mov adc adc dec push aaa out js add and mov imul in add adc xchg push lods lcall stc add and cld dec call sbb outsl pop mov ret cmc inc (bad) leave xor jmp das xchg scas cmp cs dec jo adc lret inc and cmp jne cltd pop add lret (bad) loopne imul (bad) dec and stos loop adc mov mov add or jno cmp add push xchg lds cmp arpl (bad) lock mov outsl add and sub lret and sbb sub sub lea mov lret clc lods cmc jns xchg or inc push push or mul push cmpsb ljmp or pop pop pop mov xor cs and sbb xor in or inc sbb fdivrs lods inc and addb outsb loop sbb in test cmc insl or sar jns add sub xor dec dec xchg fwait rcr mov jne add rolb jge hlt add ret jg iret inc jmp xchg push std fs pop icebp loopne popa xlat sbb lods and iret leave adcl xchg ljmp lea in push pop push outsl push add or jbe fimull leave sbb in mov pop sbb enter pop cmp cli das dec daa cmp fisubr (bad) dec push pushf movb movsl dec jae dec push test dec ljmp nop and push xchg inc movsb popa sbb pop cmp (bad) mov mov stc cmp jns lock popa test dec pop popf gs xor fldz movsb sub add sub xchg sub add outsl stos inc xchg dec pop movsl push mov rcrb fcoms mov ljmp and mov mov jb das rorb or (bad) divl add out and sbb jecxz (bad) push and hlt add mov mov cmpl inc jb call into into (bad) cmp sub push adc fdivrl pop pop pusha and cltd inc dec cmp ret roll adcl lods add (bad) shr daa cmp jecxz pop mov inc pop inc sbb mov or rolb fnstsw push ja add xchg inc incl rcrb (bad) leave mull xor std jp jle cs cmp ret in pop inc push push fistl jle jne fldenv adc adc adc mov push gs clc sbb add or ret mov adc lret sbb xor inc sub sbb push or arpl fsubp and xchg sbb sar inc repnz jne push inc or mov or pop inc cs sub sub dec scas ret add fildl dec inc mov push adc pop fist mov dec sub out push icebp or lahf xor and sbb and lods adc fnstsw dec xchg pop imul push daa hlt inc fs xchg add pusha or adc scas xchg add cld or jbe lret scas adc fwait sbb and (bad) sbb fdivrl mov or dec fiadd mov cli hlt dec pushf xchg adc out loopne es repz pop or in lret enter addr16 xchg or xchg lea repnz push rcrb hlt cmp repz dec adc adc and jo mov icebp nop gs sub jl push xor fdivrl cld cmp aaa or push or or or cmp pop xchg sbb lret dec add mov lock mov jmp hlt add sub arpl pushf arpl pop xchg loop icebp sbb movsl daa aaa sub leave cmp clc sarb sub andl push hlt daa inc lcall adc mov inc insl repnz call addr16 (bad) push movsl xchg jne jae add sub push fstpt jo adc (bad) jne pop pop or adc cmpsb cmp and dec addl (bad) faddp push or imul push daa call pusha cmp das pop mov je lahf sub sub pop add cmp jg loop xchg stos insb xchg push dec xchg mov jecxz sbb test aas shr outsl push imul adcl add or lods inc mov cmp mov and int dec or (bad) cmpb mov js xchg push push jmp mov push loopne in add and and pop loopne mov adc minps push loope scas or dec pop loopne push sbbl inc xlat inc cmp xor pusha ss cmp orl fdivrs test add add xchg cmc add repz adc push adc inc dec fstps inc mov ss cltd xor push adc xchg mov jl fmuls rcl lret andb mov dec jl arpl or cld je xchg ret fsubr popf inc mov fucomip jle pop inc mov pop inc and pop daa sbb popa js push cmp jno hlt clc movsl cmc cmp and nop cmp (bad) mov imul mov or lods xor int3 clc push push rol outsl mov mov mov mov add add sbb scas outsl inc push xor into cmp cmp lret nop jl cmp out ss ss out inc ss es and push mov insb sub (bad) or js and cmp lock icebp cli adcl push popa dec sbb adc jmp or sub adc rorl adc aad pop and mov and jo insl add pop fst inc das or adc inc aam out and mov jmp mov cmp xor inc or inc jo (bad) ds cmp data16 stc pop sub nop add mov sbb pop insl lret jae cwtl and out insl rcll lret dec aaa and sub inc (bad) xor dec push ret or fidivr cmpsl add xchg adc cmpsl add cmp and or aas mov notl outsl pop rclb inc cmp adc sub popl ret push fimul (bad) (bad) dec inc sub or pop xor push cmp xor cmp cmp cs jp ds sahf iret ja sti inc sub jno add xor scas and add adc test loop cmp xchg jbe push sbb dec and jle or clc dec lea (bad) cwtl aaa andb les inc mov adc sbb and and inc mov adc rcll lahf mov sbb or or and jecxz roll adc data16 mov mov jne and int mov xor (bad) insl jge sub cmpl push adc inc adc addl es jae daa data16 clc xor push xor imul sub push fsubrl ljmp mov mov fiadd sbb dec push xor lcall movsb and or pop cwtl jl (bad) xchg pop pop stc fdivrs aam in outsl dec andl cld test and popf mov push add inc inc add sub inc add inc cmp or push pop dec sub and movb insl or sub dec xchg add ret or inc cmp jae jmp mov lods sub add and aam push scas push adc inc movsb loopne test sbb push adc jge loopne jo (bad) jnp mov jmp add aaa stos enter pop mov push fnstsw push sbb repz addr16 jne pusha mov adc or out rorb (bad) pop sbb inc int and adc sub cmpb or or jo cmp lahf (bad) and iret or jno sub or or aaa mov or movsb pop repz fisttpl add fmulp xchg pop pop xor enter jmp push lea push push adc inc movsb xor ss cmp fldpi cmp adc push in mov hlt ret xor add push insb std fs push test adc add jne fdivl lea pop lds dec jmp loope sbb das and pushf imul dec insb mov mov jns cmpsl sub dec outsl faddl leave pop outsl int3 push push sbb loopne push cltd insl cmp inc aaa mov ja push pop push out sbbl push push or jo add dec cwtl xorl xor in in xchg js arpl pinsrw call xor push in and fdiv jmp sbb jne mov nop (bad) pop add movsb (bad) or adc jo add (bad) stos arpl or push sbb lds or inc xchg mov xchg sbb stos out mov add push push fiadd insb rclb ret jl mov sub andl lds aas (bad) addr16 and fisubrl in ret or dec inc xlat rorb ja sub out imul arpl push stc mov inc or (bad) pusha fist lock cmp inc mov jecxz fs into push stc fild add dec mov mov adc pusha adc or insb sbb mov pop add cs pusha cwtl xchg (bad) push daa and js mov cmp cmp insl aas sub (bad) adc inc fsubl add push jge sbb addr16 jmp mov sti ret dec push shrl cmp cld pop leave cmpl xchg jne mov cltd stc adc xorl or int3 mov sub adc cld jno add je popa les add cs dec pop addb mov jbe cltd pop inc adc nop cmpsl sub in aaa test pushf mov mov lods int3 shrb xor rcr aam iret test add sub push mov pop dec in in call pop in xchg xor jno xlat mov push push add mov dec dec dec dec push (bad) (bad) call dec dec inc add insl or (bad) dec dec push inc xor cmp rcrl gs movsb or insb xor inc jbe pop inc sbb das push lods insl and test push cmp das dec mov out fneni(8087 in mov jae pop (bad) jbe dec fistp jno das test cmp sbb push sub and dec add lods xchg pop add mov push fs in mov or jge jno mov enter push push sub out or fisubr fadds push sbb das ja mov (bad) shr dec rorb and aam pop jo or int3 mov xor incl loop sub pop adc mov xor jp movsl fwait movsb leave and push sub pop imul addr16 orb push inc xor int je xchg push hlt flds push mov fadds mov les mov int mov cmp mov cld add xchg dec (bad) (bad) xchg into jae pushf lock test pop in mov push and xchg mov hlt lock call lods jno add add adc xlat mov sub inc xchg leave sub fstpl or (bad) fdivrs or movsb (bad) mov sub push repnz pop mov or add add or popa lret popf out push xlat daa adc cmc fdivrl or das aaa outsl pop cmc inc add gs add movsl or or xor mov and rol rcrb dec arpl xchg push (bad) xor push (bad) inc or or or nop push cmp xchg inc cmp or or add sub pop mov rolb je adc sub fs xchg loop sub or or ss xor fdiv add or sbb fnstcw cs and push adc dec lcall aam pop (bad) xor push xchg sbb (bad) pop jnp ret (bad) pop dec adc add mov (bad) fild and and int sahf mov mov addr16 xchg jmp or cmp int cmp leave std or pop sbb aad push iret lock inc and nop sub into ss inc xchg adc pop inc or cltd xchg popa inc sbb xor adc dec and xor dec or dec adc andl mov test sbb pusha ret dec and push mov insl and mov mov (bad) jmp and push pop loope cmpsl add mov push mov add mov (bad) cli jne xchg aam enter cli xor jp mov dec pop fiadd nop syscall or jo adc pushf icebp or outsl push pushf push push fstpl es aam jmp inc daa sub push (bad) xor fnstcw aas or dec imul lret push add jne add outsb jnp stc std icebp arpl insb push arpl imul inc outsl pop mov aas bound pop es les jb popa or gs fsubrp fisub insb bound jbe es ja sub jo or jbe jb addr16 divl and cmpsb insb jge mov jg sub (bad) stos outsb insb das je cmpsl sbb fisubrl bound and pop fs daa inc mov loop je and pop jb arpl fdivl outsl dec pushw das gs idivb imull add jbe inc pushf xchg ss divl push int3 clc lcall clc outsb add sbb loop inc (bad) fucomip inc inc push push outsb je fs pop hlt inc push and or hlt mov push mov add punpcklwd cmp in xchg shrb insl push mov xchg dec test add addb pop pop push rcr push push lds enter jl or pop xorb and mov dec mov push lock lds jl inc stos movsb dec add push shl mov jne test xchg ss mov outsb fldcw ret ljmp popa sbb dec xlat sbb leave test mov adc add inc lock subb inc or loope jno xchg jne or sbb xor cmp or xor dec sub and cmp aam xchg (bad) cmpsb pop adc sub cwtl add aas movb pop mov stos xor adc sbb (bad) xor sbb or push or sub inc mov mov or ret ja push pop xchg fsubs push into repz out sahf imull mov imul rorl aas add xor pop xchg lret and add dec and mov aaa push mov dec add shlb inc aas push add pop or or or repz or or or repz repz adc push iret repz pop sbb sbb sbb mov aas sbb and and fcoms repz out adc jns out push mov scas mov add repz and cmp repz cmp mov adc add and in pop cmp add cs xchg imul dec in lret or push mov or push cs push xchg dec sub in lret sub mov adc adc test cmp sub xchg lret push inc pop dec movsb jb in dec sbb pop push mov dec xchg push cs sbb xchg pusha ja push popa imul pop and dec in dec adc and sbb push push test loop and jo xchg sbb fiaddl xor xor mov fcomp sub push stos and mov adc sub push add popa or cltd xor xor add aas push cwtl adc cmp or or sub or jae sub lock mov push pop insb inc sub insl in xchg addr16 lahf loopne faddl subl push jb cmpsb popf dec insb mov and cmp add push sbb push enter xor mov xor adc addr16 (bad) rorb fldcw pusha pop or (bad) xor dec loope push out cwtl mov lret cs push pop imul push sbb or jbe push push xchg inc dec jo ja and push shl aas enter sbbb or mov or and bnd add rcrb add in les cmp sbb ja push mov mov insb pop add lods daa cmp call xchg sub insb outsl push fmuls rolb in sub jle lock test jge or and rol push orl pop inc cmpsl and xchg add adc pop je dec pop or mov push xor mov aaa icebp jbe je inc mov clc aas and push lcall sbb rorl adc fnop cwtl and jg aas xor add dec cli ds cmp sbb add or mov dec inc rolb jecxz xor rorb mov mov dec stos push cmpsb loopne jecxz or and sbb add hlt (bad) bnd movl sbb inc add inc sbb dec loope pusha xor sbb mov invd and mov add ss cld add sub icebp or shlb ret or pop insb sbb jo aad enter ret cmpsl xor out test gs (bad) and lock mov test lock push out xchg push xchg xor lods daa push cmp lods scas push (bad) fdivs pusha jbe test push xor clc pop daa pop adc xor orl push pop jmp mov ss cmp and js addr16 subb hlt inc xchg push out addr16 aad (bad) sub mov mov popa (bad) rol lcall call jnp mov push les cld xor bound dec jo fdivr fs jae push or ja or rcll lahf dec fwait loope inc pop je cmp inc loopne mov cmp enter push je sbb rol add aas pushf jmp inc hlt mov xchg cmp (bad) adc add jo js ljmp mov add mov mov push insb (bad) iret test inc mov mov pusha aad ret xchg out xor jg pop xlat sbb pop (bad) push enter push sbb push scas nop std stc pop (bad) add push xchg push out out mov ret jecxz mov les popa jo pusha je inc inc inc mov out js in sub dec cmp mov jecxz add dec add adc jle add aaa leave inc push adc out and jmp and cs jle or clc push sub push xchg ret push mov xor adc push inc rcrl and pop add xor push pop mov push add (bad) or aaa inc std adc push (bad) add mov mov mov ljmp xchg pusha push in cmp (bad) dec inc lret mov sub pop loop andl rolb inc pop mov adc xchg xlat cld je jb in xchg pop inc or or call pop (bad) lahf mov sub add inc inc adc outsb mov dec add adc xor les sbb clc pop push movsl loop push adc pop in sub loopne and push mov sti sbb sub add jg xchg add lock sbb mov jl add fbstp add out (bad) jno or xchg sbb pop xchg xchg xchg lret call dec sbb sub and in insb xchg and in xchg mov sbb sbb leave in imul sub mov add cwtl jns and jne (bad) and mov es add ljmp inc inc or and int inc push inc add inc inc sub dec test jne aaa jmp popf rol aad push gs cmpsl inc inc rorl and sub sbb into inc pusha and lea mov lea or imul and adc int cmp (bad) jl pop sub enter xor push nop add sub push pusha orb xor lret movsb cmp call int3 jg xchg inc add dec and or sbb adc (bad) ss (bad) aas inc xchg inc cmp pop (bad) int3 shll jno xor and cs or ds (bad) out mov mov inc dec or cmpsb dec xor dec xor sarl imull adc cmpsl fist lcall add jbe or out insb loope mov scas (bad) ljmp decl fidivrl mov lret cmp imul mov add mov sub stos cmpl hlt mov pop clc ds fwait (bad) movsb sub jl add rol pop add jg call adc add lahf fisttp lods inc adc outsb orb xchg lahf inc cmp fadds xchg or dec in icebp jg scas mov sub add push xor sbb add lcall fsubl or int3 push cmpb popa jns add idivl lock adc adc adc cmpl dec xchg mov je (bad) imul dec popf mov test pop jp call adc push sub jae mov cs mov add dec inc imul (bad) adc js push ret movl adc sub inc push in xchg inc xlat in ret fs dec in pop and imul push outsb or pop dec inc fstps (bad) incl sub shlb in addl cmp sub xchg insl pusha mov in or sbb in aam aaa adc les fwait or add call push push enter inc sub rcr leave sub xchg mov mov imul sub pop sub out fcoml lcall dec add pop imul mov or or xchg orl icebp insb dec jnp or and sub sub icebp sub xchg and adc jns sub or call inc xor mov or add fidivl es and jecxz fstpl mov or (bad) pop mov add cltd adcb xchg lock dec jne lock rcrb and or adc mov scas sbb movsl adc push pop and push and adc das cld jb dec scas jl xor sub dec adc pop into inc fs pushf mov sbb or push push or xor call js lods sbb outsl ja or push repnz push pop inc ret push movsl popa add xchg (bad) push cmp ret push (bad) xor sahf jle decl mov ljmp pop (bad) xor repnz add and add cmpsb cs push das sub adc in fs addr16 add in add sbb (bad) and mov out fistl xor push mov adc (bad) mov add fcmovb mov pop xor mov jo mov and pop xchg add lods cmp sti or adc in push das les xor push inc add xor sbb ss pavgb std cmp fidivr enter imul in xor and insb mov test push pop pop cltd icebp (bad) mov sub pusha mov sub and xchg pop in xor cmp and adc adc add les mov sub pusha jle or sub rdmsr pop push pop or clc pop ss mov fs push add mov ja add out (bad) jno ja sub push and push sahf pop sub cmp sub enter sub mov sbb cmc cmp repz test shl sahf out xchg das push and jns out cmp inc dec dec outsl mov out push das push pusha push mov or cmp inc push pop aaa pop add test js xchg aaa test push (bad) mov mov lock ret test add inc xchg inc inc iret mov jl movsl incl rolb jg inc xchg mov rclb xor aam lret out push mov push sahf jno lea pop popf add dec xchg pextrw xchg sub (bad) cmc sbb dec mov shl mov adc pop dec movsb jnp pushl movsl xor daa jp (bad) add and ficoml pop js adc dec mov scas nop dec cs lock in scas jo add fcoml cmp or aam xor inc jg xor test ja stos sbb pop jmp xor push mov pop sbb and inc xchg test and adc shld ja,pn je dec add outsl sbb pop add push sub xor in shll xor xor or mov jne daa sub cmp jecxz sarb adc inc sbb adc xor lock lret aas xor jge add push pop cmp and dec mov int3 push outsb stos dec test or mov ret sub inc and cld cmp or sub mov xlat sub test pusha mov or adc imul mov ret sbb (bad) jbe push sbb lea stos push xor test sbb push mov or adc mov (bad) mov jne call or mov test fmuls cmp mov push sub imul and cmp sub mov inc mov sahf xor rcrb ja pop in cmp lock loopne test nop xor dec inc inc mov dec in jmp mov push hlt inc sbb adc push dec popa push mov jne mov lds jno bound arpl pop jns or add push mov add scas xchg pop and cmp gs pushf sbb add xor dec lcall inc sub lcall imul cmp push sbb lods mov mov call scas cmp and lcall or cmp cmp xor fsubs ds inc pusha jb imul push ss shrl fmull push push insl aas xor jecxz or push push inc mov adc mov pop cmp and jb inc inc push icebp sub clc ret adc xor push neg test or jle out aam push mov jnp push ss and mov (bad) mov sbb adc bound xchg xchg jle insb leave addr16 shr pushf add sarl or icebp add push and push arpl push movsl pop enter jmp scas popa loope cmp or outsb pop (bad) or test xchg (bad) enter dec cmpsl xor insb lret notl xor sub mov rcl js ret adc jno xchg push aas lea out jb jge and mov inc jl and and jl and and jne jnp push insb jns push imul test mov mov jg sbb mov push loop js cmp je call pop inc inc xor testb pusha jecxz or bound scas sub adc adc xchg xor or mov mov sbbb into movsb or testb mov inc jge or and cmpsb lods sbb or stc push cltd and fisubrl xchg mov mov lret and add adc and mov pop add push movsl rcll popa mov test enter sub idivb fistpll or rcrl mov adc call out sbb pop add inc jge popf les add inc test movsb movsl fdivrs stc push push clc movsl mov xor rclb inc dec and (bad) mov xor mov pop adc addb lods mov and and and cltd add add cmp add pusha sub movsl mov movsl fstl mov xchg rol int3 enter lods iret cmp inc mov push rcl mov sub jb or pop lods je es xchg lea push sub add fbld xchg enter (bad) jo sbb cltd fcoms inc jp sub scas dec mov xor inc sub xchg rol pop xor lcall or xor je sub push inc and es push push das test aam add pop mov loopne inc adc test lods and inc dec and ljmp sbb xor inc sbb xor xchg push test mov aad lahf ja add add je xor mov sub fcoms jmp inc xor adc ss mov out mov stos add fcmovnu mov jle popf cmp jo jne sti push lods mov add gs dec hlt aam in sbbl jb cmp pop enter pop enter cwtl mov pop jb int3 in in pop clc dec adc pop enter dec scas sub xchg add and das push dec inc je sbb mov popa cld nop cs aaa scas push xor jg dec jb fmuls pop psubw stc adc sbb or in decl inc aaa xor daa push pop fidivl jnp or arpl xchg pop daa xchg sub pop inc jb mov dec dec push push je addr16 sub or daa adc add or out in push sbb or addb clc dec outsl popa fs das aas andl mov and push daa pop push adc push mov add add aaa add jmp dec pop clc pop cmpsl adc inc push push (bad) nop lock push adc lock push daa cmpsb test mov cmp sub scas lds fdivl fisttpll pop add or jb mov outsl leave jbe and test ss add adc fldt int popa scas mov insb insl lods push lret xor loopne mov fildl sub lock push sarb insl jae mov int3 xchg sub push hlt inc imul es push mov add ss lret push rcrb int3 dec nop insb fildll push aam push push imul xor outsb push or outsb ficom and les mov dec fcompl push push je push jae mov addr16 push pop pop sub push pop pusha pop shr push push sub or dec push add loope nop cmc subl jmp pop pop negl test or fs inc dec xor jne out jb int3 or adc sti sti mov xlat adc repnz mov or es outsl push sub xor push or push das cmpsl clc lods pusha shlb daa cld cmpsl add push dec test (bad) mov jl (bad) xor adc push mov cmpsl in dec sub push dec mov (bad) in mov mov pop shll and (bad) xor leave pusha jmp sar mov in test leave sub sti fabs clc movsb fidiv fcmovu js out push aaa fld1 mov xor loope jns sub pushf ja in mov jl clc jp out sbb push mov int andl xor movsb add addr16 xorl shlb out jo inc pop rcr push inc fs jl xor and leave mov and mov push mov paddsb in lret in add hlt ror aas mov push and mov cmp arpl inc push dec call and pushf mov and inc cltd cwtl in pop xlat or xor dec or and fmuls js nop shrl and mov or stc mov leave xchg mov jle push mov lret daa pushf (bad) jno jl or pop aaa nop incl cmp leave mov pop cmpsb lfs jle jns pop sbb adc sbb sti lcall push cmp lret movsb push sub daa xchg xchg aaa xor xor in mov call adc ret jg sub xor push insb (bad) icebp jl pop sub push adc (bad) dec hlt push popa jb mov repz xchg xor cmp loope (bad) call movsl repnz mov jne and call push lcall sub aad inc aad pop dec or mov test inc insl lahf mov pop jae and int3 xchg mov adc call int3 (bad) repz (bad) sub das add call into popf leave sbb shr in dec dec cmp sbb xchg ret adc imul lret rcr ljmp mov pusha jnp lods call (bad) addl jne mov cmpl call sub cltd rolb xor dec (bad) fs xchg and shl insb call push cmpsb xor out js mov or aas xchg je jo call int3 shrl pop cmpsl mov and enter dec push dec push in fidivl std lock int and xor ss sar aam dec cmpsl in dec push mov (bad) mov push aam dec cmpsl cmp dec imul stc in and cmp mov pop rcll inc xchg cltd adc les loopne jnp pop in lret ljmp aam xlat push lds iret (bad) jmp pusha mov fld1 push xchg push mov into inc fildl int sub mov daa sub add rdmsr adc add sub mov nop int3 and movsb jns xor add xor dec lcall andl jb pop mov aas pusha push jo inc jb pop orb cwtl mov mov xchg pop and shl mov inc jb add mov and xchg mov and and das xchg mov shl add dec and jo pop leave inc mov xchg mov cltd dec pop and add leave mov and pusha add loopne push inc xor adc mov orb or int mov push or push (bad) jg fcoms lock int3 enter enter push es (bad) fcomp fxch (bad) (bad) loopne jecxz in or rclb or bound gs and popa inc adc in and ds andl scas test xor aam push push adc das add movsb imul aam addb adc pop add cmpsl insb mov (bad) xor or outsl mov outsl pop add and jl test repz xchg pushf movsb lods repz repz (bad) int3 aam repz fsub in hlt cld fs out sahf add adc and jns out xor inc dec push out sahf out fs je scas out sahf test cwtl inc adc sub enter push push in imul pmulhuw enter lods insb or jb jb fs sbb sbb addr16 xor arpl test jg push outsb insb pop clts (bad) out icebp inc or adc mov out add enter cld cmp rep (bad) or sub push repz repz je xchg movsb int cmp mov shl hlt idivl sbb add adc iret (bad) mov ret icebp push push inc or (bad) mov nop sbb pop add (bad) mov pop add push inc sbb mov test das iret mov cmove sbbb das (bad) insb dec insl push js mov sbbb rolb mov scas dec decl loopne out push les stc enter add sub cmp fadd lret pop dec cmpsb lret (bad) sti je mov fldl mov enter inc mov psubb enter pop cmp dec add fs xchg mov js sets mov in push in cld or adc xchg and sub dec sbb cmp enter push mov (bad) sbb aam loopne lock xchg mov push sbb xor enter inc or fadds sbb repnz add or xorb and push (bad) push jb enter mov and sbb mov fiadd enter (bad) js add ljmp adc jg inc fidivr bound or or pop (bad) mov push pop bound xor or js sbb out ret or enter (bad) push cli cli scas mov adc and lock inc std cmc out cmp sub clc fcoml stc in cmc cmc mov cmc fidiv repz xchg jmp clc cld out cli push adc cmc out jns pop stos sub loopne inc (bad) out aad (bad) fisubr js in xchg fidivr incl cmc (bad) cli fdiv lock out fiaddl pop push or cmp in jns xchg les mov orb xchg decl push (bad) stc enter int pop push add xorb jg sbb xchg push pop mov inc in push pop push fcoml push shrb sub movsb pusha jg jmp and xchg out sbb push or and and pop jns mov cmp push sub insb jmp xchg jp mov call sar lret int3 lods mov and das cmovge outsl mov jg push cmp out nop push aam in ja insb mov fisubl mov mov enter lcall hlt jl push adc data16 xchg push pop jns cmp jno mov mov cwtl fbstp in imul push push cld (bad) mov in push cld jg adc cli lcall mov stos push stc cmp lods fsub mov pop xchg push shlb push mov pop or jns dec add xor loopne push add xor insb mov pop sub cwtl inc imul into int enter loopne stc jnp add sar pop sahf mov mov mov jns orl pop push nop push (bad) cltd outsl xchg seto movsb xchg add mov xchg xchg int3 sar mov mov test sbb jo cmp sub mov mov jo mov push fdivrp jb call pushl (bad) out in fidivl jns lahf (bad) pop add mov fsubrs ljmp jns xchg push inc inc lret pop mov fisubr out mov ja cltd scas add (bad) rcl sarl pop jle inc (bad) pop add pop int lret nopl nop xor cmc cmc dec addr16 scas xchg aas push imul dec cmp sub (bad) fsub test lahf stos clc rcrl cmp xor aam aas repz ja lock cld or iret repz xor push pusha jo fnstcw jnp in in hlt cld mov out sahf out sbb sub inc insb xchg fisubl (bad) xchg adc xchg nop sbb adc add xorl outsb fildll pop push xchg mov cmpsl mov xchg out sahf mov jns out std (bad) incb add jge out (bad) test sbb jg cmp loopne add mov inc and dec or jbe repnz jae or cmp mov and dec pop inc add sub dec xchg add dec mov add xchg pop ficompl addr16 and or add cwtl add or lahf (bad) flds nop pop std inc das push pop std push cld js mov pushf clc inc mov mov (bad) neg cmc in hlt in xchg das incb repz and mov jb lock out pusha out je enter test cwtl jmp ljmp and mov jbe ret jmp dec dec inc addr16 add adc push adc jp (bad) stc bound cld out and inc or or add jns out push push push jns out int3 in or iret adc xor push pusha cmp repz mov iret repz aam push add in bound push loope pop daa bound cld jge mov mov movsb movsl insb adc push call int3 push sub add fidivr or lods out popf out inc (bad) pushf push insb in fadds lcall pop mov push ficom push push movsb lret cmp push pop sahf test les in cmpsb popa jbe push cmp sbb mov out xor pop scas lret adc sahf call push je xchg mov add add repz scas hlt jbe out or fiadd mov mov jbe cs jo iret add cs sti dec cmpsl ss bound test sub pop popa in es mov test mov (bad) js xor inc (bad) sahf mov into xchg push jae xchg add push pop aas bound lret pushf cs sbb mov inc xlat test sub ds xchg ss pusha or in les (bad) sub das dec push and push fdivrl pop hlt xchg ret bound dec xchg push mov sbb inc and add cmp in pop into add or ss xor shrb (bad) jge or add addr16 out jns cmp fs mov push scas addr16 pop inc pmuludq adc inc adc (bad) notb sbb inc xchg movsb cs push inc addr16 jl es into jnp mov push int3 jae or addr16 push imul into insb jae movsl fidivr enter xchg hlt mov dec push sub pop sbb jnp dec je aam data16 test xor addb je,pt push out ficom ds jl pop das mov xlat or pop fsubrl push ja cs es fcompl sti jno addr16 es mov mov lock cs lret or inc ja pusha and add jmp sbb adc pop into push add push in or push and add adc test test or aas adc inc add dec add or inc add push add (bad) cld dec add add cmp inc inc xchg idivl adc adc sbb fidivrl sub pop dec cmp and mov or dec xchg push dec es fidivr ffree sbb or and inc adc fcomi sti aas inc bound dec push daa dec pop push imul das bound jns ja scas dec xor fisubl push push pop add aas imul inc dec pop clc or inc lods das aas mov cltd inc add push pop mov fs mov int mov decl dec jmp insl and outsb outsb outsl je bound (bad) and outsb and inc dec push and std outsl fild and insb dec adc sub and daa push sub stos and sub pop jnp inc jnp mov sbb mov out push sub es and scas aaa sbb repz add cmc cmp push push pop push and add or cs xchg push (bad) sub arpl add cltd jnp insl prefetcht1 imul and out or pop xlat mov jo add stos jns aas pop add rcrb sbb cmp mov test (bad) xor mov mov and jb and pop sbb jnp aad dec test dec pusha add fimul jae arpl xlat int push jo push lahf dec gs outsl arpl add inc add in or pusha cld push add adc xor call stos adc cmpsb push push jge push and dec inc or mov add push add mov lea mov sub in push add or ds mov insb and fstpl xchg call lcall sub lock and les lock lods rol or scas incb lods or add into insl not or push push inc or rcr scas fisttp faddl outsb push fisttp fidivrl and call loopne inc cli adc and jno in push inc (bad) push (bad) jg es mov push mov lcall or adc mov jle out ljmp inc xchg xor push es stc push mov xor lock push (bad) adc sub inc das and rolb pusha add pop push mov (bad) gs dec and add lret lock stos or sub inc or sahf sbb lea pop jg and sub pop or cli mov mov fisttpl or or adc fsubl or movsl pop jg (bad) push jae outsl push pop push mov xchg or mov adc adc xchg dec jne xchg adc push mov sbb les push aaa add push push jle xchg add and lods push fist add and (bad) sbb insl mov loop (bad) ss mov and inc add pop adc sahf nop or pop xlat sbbb mov push mov or fiadd lock sbb mov clc mov incl ja pusha inc fldl decb ds out gs shr cmp je cmp xor mov sbb cmpb lock jne pushf inc or pop mov (bad) xor lea repnz or xchg dec in popa jne or xor orl lock loopne pop jg add mov enter mov rcrb xor sbb scas mov adc sub inc pop ss add jnp push mov adc call dec mov add sbb nop add push (bad) mov ret xchg add in test scas clc sub xchg pop jno adc cmp inc stos or mov pop jo (bad) fimull stos stos sub mov sbb and gs xor sbb mov inc notb ds mov out data16 sub pop sbb sbb loop sbb repnz and cmpsb xor sub xor or aas cmp mov popa and inc cmp or push sbb sbb mov pop push aas inc (bad) pop rclb push (bad) in inc xchg pop adcl or mov pop pop push push sti daa cld cmp inc lock cmp add jle push pushf into in sbb jp add call test push push adc leave movsb lret sbb (bad) push mov adc pop mov xor test mov fisubr fisttp push loopne lea cmp xor cli add in cmpsb inc outsl (bad) mov call xor (bad) jmp lods cmp repz cmp je or push inc inc mov mov iret call or push lret mov or xor pop (bad) into sbb add cli push dec or and pop add movsb aas test (bad) jmp outsb std push dec xor (bad) mov or push shlb lcall mov push inc and iret mov fild pop leave mov push pop out sub or rorb mov rcl sbbl scas add push sub cmpsl pop push ret pop push add (bad) sbb add pop sbb mov push push lea add xor loop movl out pop push lds sbb sbb mov ss add rol and lea xlat mov pop sbb ffreep repz rolb mov sbb dec mov xor ret outsb aas mov ret push clc call or inc rcll mov cmp or rcll testl sub push push adc mov arpl rcrl imul inc and mov push jo or icebp int3 movb incl mov stos scas sbb xor cs push lock add rclb popf sub mov nop pop iret scas into xorb (bad) cwtl add ror jo push cmp (bad) dec mov pusha lret inc insl dec jnp push inc add inc xchg add xor call mov inc test sub sahf loopne pusha (bad) int3 orl xchg daa sbb sub es pop push rolb fisub test lods mov sbb call push sbb pop dec lea inc xchg add pop add aad test push ret pop inc stos inc jg xchg push sbbb and dec icebp adc movsl mov mov das (bad) pop cmpsb add out fdivs add mov adc in mov adc ret enter inc or (bad) cmp and inc (bad) cli js shll jb rcr push (bad) jnp add and push xlat mov mov or stos add mov loop jne popl pusha mov add movl push js jae test inc jle push inc repz insb sub push fstp push js add inc mov es push aad scas loop cld jmp push adc inc out or testl lock mov jo lock dec xor in mov jmp xor jne out mov add and push add iret cmp mov mov divl push cmpsb dec fbld mov cmp cmp add jno mov push add or mov addr16 mov lea je push inc mov inc xlat clc or sbb or add and jl out repnz jo cwtl or adc add enter repnz (bad) sbb call lods fstp inc push or sub add mov or mov and pusha sbb push sub and cmp add pop push rorl push xor or dec add or outsl jl xor sbbb xor and ret movl test outsl add inc dec mov pop aad pop pop data16 jnp push dec addr16 andb mov and xchg sub pop dec mov push sub inc clc add jne ljmpw add lock pop sarl adc test mov shlb push bound jo sbb js add dec sbb xor fmull mov xchg sub out jge xor xchg data16 add cmp pop or pop fidiv rolb in gs jno fs and lock dec push or sbb push jp jbe pusha dec test pushf cmc jmp lea cmpsb loopne mov xor movsb sti outsl (bad) iret jmp add add mov inc xor inc jl sbb or (bad) imul jbe inc push sub mov sbb cmpsb or sbb mov sub sub or jl mov push cmp mov xor imul or mov movb inc cmp aas mov inc call adc push nop imul sub cmp inc imul cmp push bound daa fimull mov fs push arpl add sbb adc cmpb mov mov pop pop pop mov imul lea lods call gs dec popf push fsubr addr16 jle inc cmp pop xchg sub add push pop mov jle mov pop sbb mov mov insb add cmpsl movsl test push out mov sbb imul aas or xor pop xor js mov adc push stos inc (bad) call outsl adc inc roll scas aaa sub add rcll xor or sbbb add js jno adcl or ja ret mov and test xor xchg es or cli outsl mov or addr16 popa inc jnp je lcall push mov and outsb pop cs inc cmp push imul (bad) or push andl inc xchg mov sahf insl sahf repnz jb pop cld call mov add andl jge jne insl movsl bound add jge xor shrl call scas sbb lcall mov movsb mov push or inc roll push lahf xor xchg jno adc fneni(8087 pop push mov rorl andl jg push ret pop in sbb xchg mov push leave in add xchg adc in add mov rorl fimull andb cmp test pop fiaddl add fdivrs lret call push sbbl (bad) movmskps std cld rorl lret std xor mov fimull out xchg (bad) dec wbinvd xor outsl fildl addr16 pop or jle cwtl sub mov popa pop iret pusha pop fimull xor pop inc pop mov inc push mov adc mov cmpsb cmc sbb sub cmp aam call xchg fcompl lock js or push add je lods adc jne push out (bad) dec (bad) int3 js movl (bad) movups or jbe jg push inc pop push xchg enter std dec mov or sub call in fidiv sarl pop jae adc mov cmp xor sbbb cmp fstl loope pop pop jmp pop jmp data16 mov jae pop call sub pop clc inc mov inc (bad) roll cmpsl mov inc and or add push xor add sub mov mov pop sbb fdivs adc lahf dec push jne pop sub cmpsb sbb xor imul dec call jmp push push xchg mov cmc sahf fcoml aaa dec repz fcoms lret pop adc insb add cmp jmp and orl out (bad) mov pop push mov cmpsl push jne div xchg pop clc jbe xor or sub fs stc sahf inc sub cmp das add loope loopne daa cmp push push add pop aad mov es jne (bad) xor sbb in or cmp movl mov mov cs ds push pop int3 or mov into call bound inc hlt jmp jnp xor or out stos call inc push add iret clc add push call not setne push (bad) fwait pop inc sbb (bad) incl dec imul pcmpeqb xchg pusha and add movsb mov jp jne jns cmpsb cmp clc xchg rolb call push mov ljmp outsb int jle inc and cld ret pop add mov and cmp out add pop sub enter or adc loop cmc adc cli cmp push lahf and iret call cmpb ljmp bound jo pop jle mov pop mov pop jne iret cs jg std jae mov xlat or fs int stc arpl adc sub fisub (bad) sub jbe mov sub push dec sbb stc pop movl sbb ret mov push iret rolb lret lret lahf push or mov jmp dec dec int3 and jnp js add fcmovnbe pop dec jo les add pop cli movsb stc sub mov add daa cmp and rolb sbb adc pop js pop fsubrl pop cmp and fmull or daa mov push sbb cmc xor ss push mov or sub xchg (bad) jne lds adc cmp push add test cmp mov jmp add add (bad) je mov mov lea mov loopne lret rcl pusha adc pop pushf dec xlat test out pop ror or vpsrad mov je mov ret and nop add jne subl cmp push push divb xchg ja ds insb shlb in add jnp push and mov add leave xchg add aad mov mov cmp add lea adc jmp fsubl inc insb mov test add pop mov mov push adc cmp jne repz icebp sub jb mov add sti mov mov int gs ss ret add mov insl fadd pop test aaa mov xchg ret das pop movsl xlat sub shl add inc or lods mov dec in jae clc or das cltd mov push dec pushf lahf jnp in hlt (bad) adc push ss fisubl mov mov out sub ja fnstsw and fsub push data16 adcb mov lods or xor push add cli aaa sbb push push mov push and and gs push fwait pop push cmp mov fnstenv sub cmc call fs push or inc jb add gs add jge or aad test push push call add sbbl loopne leave jbe negb mov test nop xchg sub mov neg cmp fs add or aaa or push faddp cmp imul or add cmp rcrl pop mov loopne push sahf pushw lea lea and movsb pusha sbb cmp or xchg sbb cmpsl ret jne sbb pop jg sbb pop es xchg (bad) jb orl insb in push push cmpsl dec dec inc mov (bad) xor mov push imul mov jmp movsbl loopne cs cmp (bad) mov inc add push push cmp movsb pop cmp mov inc inc xchg lret or jb mov mov lea pop das lret push inc adc pusha adc add sub pop push mov push and push inc inc mov cmp xchg lret pop je (bad) push cmp and add xchg sub pop push push or add jl movsl insl ss push push rclb push lret push fs pusha add dec pop repnz add sub and and je push inc pop sub xor push aas sbb (bad) pop dec lea pop cltd (bad) dec push add in (bad) jae movsl jle cmpsb mov add rcr mov (bad) jns outsl mov and jne adc jne cmp pop jne adc and shll rorl ficompl fsubp lret push (bad) mov jno mov cmpsl lds xor lcall mov scas or mov loop fsubrl pop xchg sub jae dec popa cmp cmpsl inc jb lahf dec cltd (bad) out xchg js push in mov test pop xorb icebp pop outsb pop test (bad) sarl call dec adcl mov ja pop cs mov xchg lret cmpb lret in mov mov pop push push dec mov inc int3 inc or jb pop pop pusha fs insb jo js xchg lret in orb mov pushf mov movsb test mov in mov les enter rcl fmul in mov mov lock clc cld cs out jb add or in mov and lret and sub xor out mov cmc push xchg lcall gs and aas out testl pop push hlt mov and orl add scas jo cmpsb inc int3 cmp jmp add add add decl js negl or push adc in cltd ret outsb call mov in std (bad) arpl loopne adc fidiv jmp call or or faddl in sub inc cmp fistpl sub cmc gs lock or (bad) jnp add mov pop scas or or inc xchg ret add loopne cmp mov push loop mov add hlt jne mov fsubr rclb jbe dec ret dec xchg aam cli and push aaa and xchg cmp or push call fsubs pop sub push xchg mov mov int3 dec jae movb insb add out xchg jbe pop fisubl rorb sub add dec int3 dec in mov mov pop mov test shrb cmpb (bad) mov std loopne add decl lods sbbb cmp dec mov rcrl fnsave adc add ret call adc (bad) not push adc or xor add out in inc mov jmp fidivrl mov call xor inc sbbb and and or cli cmp (bad) xor fiadd and inc insl aas or or testl xchg mov cmpl xor js jecxz adc fldt push and sub in cs jb fdiv cmp daa in in popf popf out int xor push push push mov sbb test inc adc popaw cmp loope mov inc jmp fisttp push push call cmpsl add mov call sbb mov js xchg push mov insb push lea and das sbb xchg mov sti mov xor xor sub rolb into in adc sbb jg enter inc mov jp lret mov xor push outsb cmp inc xor push cmp mov add fidivrl xor setge xchg lret ja jb rorb mov push mov pop das stos fcomip es or sbb or mov lods mov call loopne jne fs (bad) in sbb jns test lret int3 jg ds call add pushw (bad) std mov inc pop ret lods dec sbb mov xor push or cmp xor fmulp ret inc sbb sbb pop jmp or das mov add mov xor push push mov xchg adc lea imul inc (bad) addr16 shr mov sub push sub je in dec jge jbe or testl jmp sbb jne cwtl test and insl jge ds jbe jl dec movl pusha or je stc aad jge mov adc dec je dec cli lret leave or xchg sub cld insb or loop inc sbb mov xchg les jb lods jmp insb idivb (bad) fcomps jmp pusha sti mov popf out dec lret (bad) movsl loope sub aam lcall loopne jle and outsl rcrb das sbbb dec jo and dec add ficom pop in jns fdivr sub cmp sub pop and cmp imull cmp xor ret aas jmp pop je cs push adc sarl cld dec push inc push push pusha jl jns out stos mov fmul sarl repnz sbb dec inc sub ds push push (bad) fldcw pop xorb push inc pop outsl adc cmp cmpsl insl cwtl add lcall pop sahf out sahf pop push bound jl out pop dec dec pop jns xor in (bad) jae add push cmp data16 insb adc popa adc out pop (bad) jge jns push push outsb ss es movsl or data16 or sub jnp,pn jnp push fisttp sbbb data16 mov movups add out imul mov ds jnp in jg (bad) lret adc mov dec sti mov xchg push dec pop pop mov jns mov push jae nop push cli cmpsb or fdivrl cld push lcall ljmp fcmove mov sahf out sahf out bound cmp out sahf xor sbb cld dec loopne dec imul xor fsubrp xchg push pop mov adc sahf out sahf or pop add push and outsl xor aaa sbb ja push jb dec repz push ret repz inc lahf push ror jno inc fisubr cmp repz add sub sbb (bad) lcall xchg aad test inc mov fs and rolb (bad) jmp adc lods jb stos lods outsl xor mov add pop in inc mov mov inc push ds (bad) (bad) incl mov add mov fwait stc push add pop jnp inc ja rolb push je fstpt add jb push insl push jbe cwtl fcoms sbb push fimul test jbe inc push dec arpl add mov mov adc adc rcrb sahf add scas xor sbb mov mov and js push push push popa push call xor xor and dec andb cmp das sub (bad) cli inc inc int3 sub add cmp jp insb insb popa das xor xor sub add jo je cmp dec push dec inc and adc in cmp jbe outsb int3 jle push (bad) cmp mov mov ret add xchg xchg lcall sti sub dec or push adc xor and (bad) lret sbb mov jge push dec mov xchg add jecxz sbb jp idiv nop sub mov outsb push push lcall dec inc push iret repz cmp sub and repz adc or jns cmpsl stc cld xor lock fcom int3 (bad) sahf out sahf sarb sahf out pushf xchg nop mov js insb data16 out sahf pusha pop push dec dec inc jl out cmp xor and dec repz xlat mov sbb lcall cli xor je out out call incl push jg jle (bad) movsl arpl in xchg or sti mov push jo cld call and dec dec inc inc push and xor and dec add das xor (bad) pushl lcall fistp adc insb cmp jl call add push adc out fs pop das mov rcll cmc lcall test or outsl cmp adc adc sbb inc rclb mov in sub mov sub xor (bad) mov dec outsl bound pop popa outsb pop push push out lahf out mov in xchg pop in mov stos scas and in mov in (bad) mov sarb push push adc arpl cmp jo (bad) (bad) jo stos fild dec das jmp repnz pop ja daa lahf cmpsl fstps xor (bad) or iret repz xor jnp jg xlat (bad) sub push and out or enter out mov dec and and cltd add and pcmpgtb add lods lea dec je scas prefetchw mov adc dec scas mov in mov fldcw fildll mov lea adc add dec jo fbld pop add hlt dec cmpsb adc xor ja pusha movl cmp mov xchg out xchg push jb dec les fmull or jb dec in dec push lahf adc cmp sbb negl dec dec inc push pop in bound scas fs mov inc shl (bad) jo xor and enter fdivrs call es inc cmp mov dec dec test xchg (bad) dec mov jae cwtl out add ss cli inc add adc push lea mov pusha pop icebp add js pop push pop jb push and or push cli out rcrb inc js xlat or dec and pop jae sbb data16 add mov ret add and lea roll fcomps out pop xchg outsb mov out cmp insl pop repnz adc or insl arpl je pop dec outsl xchg adcb lcall in and add je insl faddp gs inc pop inc pop pop pop or fcomp add ss jp mov stos jb adc push aas xor cmp inc push inc inc inc sub and popl mov repnz fs jae imul pop jo pop arpl pushaw push aas inc add add shlb inc dec mov mov loopne sti hlt jbe inc outsb insb add subb xor shrb push or loopne mov test imul bound add rorb js jnp pop das imul inc imul inc jns adc inc nop gs mov outsb push xchg sbb cwtl test inc push cld or jns scas add sarl push dec pop inc pop mov push push inc pusha dec inc cmpsb sub cmp in add mov or xchg add xchg mov jmp cmpsl sub mov rolb out push pop sbb adc dec inc push call inc dec jae add and popa (bad) dec push outsl cs adc sub push mov sysenter mov pop jg dec lock adc inc inc push push sbb outsb or push clc push mov daa mov sarb or mov push jns push xor fisttp rolb adc lahf hlt testb cs dec push sub push pusha sbb adc xor adc nop push cmpsl jns ja addb inc cmp imulb inc inc and adc and sbb fldcw pop loopne adc es push lock popw loopne rcrb push lock sbb mov divb shlb push shlb push addr16 jge and push push es pop xor rcrl outsb pop fisub push mov test sahf cmpsl stc and outsl test jns out mov in add repz sbb jne mov fbstp add cmp mov fiadd pusha xchg mov faddl sarl sahf lret pop aas out cmp jbe shr pop add jns cmp fistp add or fbstp add or imul dec adc or rcrb pop jo lret push popf das and shrl js inc add ret sub addr16 xor jmp push sub fsubs (bad) neg sbb inc inc push xor cmp clc push inc inc movntps in fidivl (bad) push sub pop mov xor scas popf (bad) roll das pop aaa (bad) ss imul inc and popf mov bound or aas dec aam push inc pop inc add mov rcll or pop push adc fcoms daa xchg jo imull jmp dec add add loopne xchg test dec inc rcll jnp dec push inc pop push cltd (bad) push mov cmpl insl pop in andl pop jo je push fstl hlt inc dec inc rcrl pushf ja,pn push push addr16 jo fadds push stos ud2 sbb dec pop inc (bad) mov out outsb inc inc jae ret pop pusha add push loope or mov xchg xorb fadd cmp jbe inc or jnp sub pop ret popa jo dec inc mov xor aam adc cvtpi2ps add inc outsl xchg push roll dec in adc push jnp outsb iret mov test popa xchg sub sub pop or imul xchg jnp jp and dec rorb andb mulb adcl mov lret inc lea push dec enter mov lret add cmc add cmp fcmove cmp pop inc push inc pop sbb pop or mov cmp sahf jae stos or mov push pop push lret inc (bad) dec je lea loopne jg inc lds movsl lods lods push xchg dec push arpl xchg jae cmpsb push inc addr16 insl xchg gs push (bad) fisubl dec sbb push pop push push out xor outsb cmp cmp imul cmp xor dec nop mov jns push dec pop dec sahf mov adc popf aaa aas inc push mov cmp bound add xchg xor sahf mov or dec pusha jo add xor mov pop or shrb out dec sbbl outsl mov out incb pop (bad) mov cmp arpl push lods imul insb add data16 div or xor add mov idivl pop inc inc insl stc call jnp mov das dec push dec cmp bound insb pusha insl dec mov out jge push add add lar cmp jo imul mov add push stos (bad) mov jb push aas sub aaa or outsl cmp or and cmp mov dec push es fs mov push jbe dec addr16 or ret jo push and jnp aas adc inc bound addr16 sub cld inc divl add in dec pop imul sbb pop sub xchg les je inc test push cmpsl sbb push pop popa ja dec sbb cmp mov popa push aad push mov test in (bad) (bad) (bad) decl add adc and dec xor xor xor xor xor xor xor (bad) (bad) pushl imul xor xor xor xor fdivl dec ss (bad) (bad) pushl xchg ss fidivl adc arpl mov into cmp cmp cmp jns xchg cmp cmp cmp cmp (bad) (bad) (bad) (bad) cmp cmp push cmp cmp cmp cmp cmp cmp dec bound aaa aas mov or divb jo xorl (bad) (bad) decl xor xor xor xor xor xor xor push xor xor aas clc inc xor xor xor pop xor cltd ss sarb aaa imul mov cmp cmp cmp mov lcall cmp cmp cmp xchg cmp cmp cmp cmp cmp cmp xchg cmp (bad) (bad) (bad) cmp imul ds ds aas push aas mov aas aam insl sub xor xor das adc xor xchg xor xor xor (bad) (bad) pushl or xor lock xor xor xor pop xor xor mov xor outsl movsl pop push fdivs fidivr ljmp xor add xor xor xor xor xor xor xor xor (bad) (bad) (bad) mov dec xor xor xor xor xor xor xor xor xor xor xor xor xor (bad) (bad) (bad) pushl xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor (bad) (bad) (bad) pushl xor xor push xor sub cmp dec xor (bad) aas cld xor push jbe jl (bad) xor xchg xor lret xor pushl cmpsb lods ss mov divl xorb aaa xchg aaa lahf aaa cmpsl aaa mov mov aaa lret aaa fnstenv in ljmp cmp cmp cmp cmp or (bad) (bad) (bad) incl bound jbe jmp cmp xchg cmp cmp cmp cmp cmp (bad) (bad) (bad) in cmp cmp cmp cmp cmp cmp dec cmp xchg lret cmp cmp cmp insl cmp (bad) (bad) ljmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp inc ret (bad) pushl insb xor je js jl xorb xor jg cmp cmp inc xor xor xor in scas lock hlt xor mov or cld aas cld lcall pop xor xor xor push ficomp jle jle pop lock pop cld inc xor sbb xor inc push xor js xorb (bad) incl push cwtl mulb xor mov mov decl (bad) xor aam fsubrs loopne in call (bad) jg (bad) xor cld xor ss adc adc sbb sbb and call pushl and sub sub xor xor cmp inc ss ss ss ss ss ss std (bad) (bad) pushl pop ss ss ss loopne in call ss ss ss (bad) (bad) (bad) mov adc sbb sub sub xor cmp inc aaa dec aaa push aaa pop aaa pusha aaa les enter (bad) (bad) (bad) cmp cmp cmp cmp cmp cmp cmp and sub cmp push cmp test scas cmp cmp ss cmp cmp (bad) (bad) ljmp cmp cmp cmp cmp cmp cmp cmp cmp cmp dec cmp jo dec xlat (bad) decl mov aam call cmp pusha data16 mov and add dec xor pop icebp sub xor sbb xchg (bad) or sbb and outsl (bad) out es or or add sbb sub out (bad) aaa xor mov mov wrmsr and mov roll bound or cmpsl add insb fdivs clc call insb inc andl lods aam or incl push push mov jle jmp jl dec pop lock std ljmp xor (bad) aas js orl inc xor adc and or call aaa push or xor adc jne bound or gs jb imulb or popa ja and push mov (bad) pop out ds or xor xor aam add insl jo int3 (bad) out push inc xor pop or insb jnp inc sbb or cmp sbb or jb pop push push fisttpll mov jns mov jo fstp enter xor daa cmp test pusha mov and (bad) add inc add or mov and add or push dec mov mov push dec xchg sbb (bad) (bad) call or and sub mov imul cs pop sti adc jbe inc add mov mov ret je and mov ja les (bad) dec in mov pop (bad) (bad) (bad) incl roll adc (bad) mov sub cltd push lods jb es jno mov (bad) push popa add (bad) (bad) jmp add mov out out mov push aas cmp clc jnp in or (bad) (bad) (bad) push jne inc pushf inc add stos xlat insb lahf xchg imul enter fcmovb cmp pop or stos lret je daa out dec sbb ret sahf sub out daa push jge loope jmp cwtl jno mov in cli in cmpsl sub stos and fcoms (bad) (bad) jmp sbb inc pop xchg or push js inc int inc jle rcll lds leave pop je call add xchg sbb roll adc lcall lcall in dec subb insb call or les insb add (bad) pushl xor xchg push das das outsl arpl pop sub (bad) je,pn cs add adc (bad) xor or or in (bad) ja pop add xor xor xor arpl ja loopne jno mov pop pop cs lahf sbb or add movsl imul push xor jecxz fwait push adc pop movsb test sbb pop shrl fwait jae mov cmp fistl add (bad) jns jg xor jecxz sbb (bad) incl cmpsb push lahf push (bad) ljmp insl jmp jl call jae adc (bad) (bad) (bad) ljmp sub mov pop xchg add (bad) xor cld loop sbb push dec test sbb jns bound aaa push and mov fstp adc addr16 pushl xchg push push pop cmpsb cmp adc mov add and call cmp (bad) mov push sbb push push test mov push enter cmp inc leave enter xor push imul xor (bad) ljmp mov mov dec mov popa or mov (bad) (bad) (bad) (bad) fldt outsb incl adc std test popa jns pop leave dec xchg (bad) (bad) jmp loopne dec and rcrl dec out test mov fs lock (bad) decl mov xlat sub int loope arpl pop mov pop mov cltd pop test sub pop out xchg (bad) (bad) (bad) (bad) (bad) inc push sbb xchg inc cld stos scas mulb inc lods jo out out int mov (bad) (bad) call call mov xchg pop gs out pop je inc xchg fmull dec mov mov pop push fisttpl pop xor fldenv dec popf cmp (bad) or (bad) (bad) call icebp mov fnstenv add jp mov scas cs jo mov sti or test adc jb int push and and in dec xor sbb gs xorb (bad) cmc leave and xor push je sub (bad) ja jae,pn (bad) aaa push cs stc add push sub pop popa fildll arpl xor mov xor (bad) mov cmpsb mov fdivrs mov xor lcall mov push dec adc aad ficoml pop aas pop ss mov jle and pop cmp mov adc js mov (bad) call cld sub dec lock (bad) cld js test pop outsl sbb aam add (bad) (bad) lcall (bad) jecxz lret and fidivl hlt sub arpl in fs loop (bad) (bad) inc addr16 testl mov mov frstor (bad) jno int je mov fidivr (bad) incl out mov sub mov mov xchg push adc cld fstpl dec pop push (bad) ljmp lods outsb or mov fimull jno cld sbb mov (bad) (bad) incl std pushf mov push sub jg or lret insl add cmp mov (bad) jmp mov pop test sub dec sbb and push ret xchg xchg dec cmp xor jnp,pn fsubl or jno push pop iret (bad) (bad) (bad) (bad) call mov mov and push lcall cmp xchg loopne mov loopne add dec add daa sbbl fwait daa enter adc dec lret ljmp xor adc sar inc inc rcr dec push xor xor (bad) push aaa pop clc cli cmc mov xor fdivrl shlb xor xor xor jns stos sbb xor cmp adc adc or in xchg in lods in (bad) daa jb or pop sbb or in ljmp nop (bad) out mov test mov out and or jmp push inc add jne lret cli (bad) (bad) (bad) (bad) lcall add lret aam inc clc sub aad cmp mov dec xchg fmull jecxz (bad) (bad) (bad) (bad) in leave jbe mov scas jb add in lea sti dec xor pusha (bad) adc sub (bad) (bad) dec or and es jle loope popa xor lcall cs lea jle (bad) (bad) (bad) incl jle xchg xor lea cmpsl jp,pn loope cmovno test mov (bad) (bad) call shlb sub (bad) ss push jmp push jnp add jg or mov adc rcrb xchg sub cmp mov mov (bad) (bad) (bad) pushl adc xchg lock enter push pop xor jo push insl int cmp pushf mov inc (bad) (bad) inc add sbbb dec pop iret in outsb call dec scas inc add and scas add push cmp push notb or add push aad xchg jne jae std mov (bad) (bad) incl shl sbb mov jo dec xor leave dec and outsl xor xor adc dec xor jae mov xor xor or xor and xorb sub cmpsl jb addr16 dec aaa imul mov shrb sub and je push and or push orl push call add and sub sub push mov xor jo push fstl jns adc js (bad) (bad) (bad) jmp lcall cwtl pop mov or loopne cmp jmp mov jle jle (bad) (bad) call unpckhps hlt push sbb cltd pop mov imul ret bound aam pop clc bound (bad) (bad) (bad) ljmp pop mov mov push jno jb sbb orb cmc pop test test (bad) pushl scas notb lock enter inc jg leave mov mov cmpsb das sbb push fld (bad) (bad) (bad) jmp sahf aad adc or mov add fwait hlt jmp pusha pop dec or (bad) (bad) (bad) ljmp pop aaa scas repz cwtl lock or or test outsb inc pop xor xchg out (bad) (bad) (bad) dec ljmp xchg outsb out sti jns cmp push insl jne lods test fdivrs dec add incl rorb in lock lds jae (bad) xchg call adc inc imul out lock xor (bad) sub outsb lret mov inc xchg gs hlt iret insl sbb push xor xor and je (bad) inc int imul xor push loopne,pt xor adc jbe push push or gs and scas dec jb xor push sbb mov mov test push adc dec sub sub sahf ljmp sarb cmp aaa xor xor xor xor sbb pop fdivl pop xor sub sub add rolb cmp pop pushf xor and in insl jo xchg push pop add (bad) (bad) (bad) out fs xchg adc pop jp fisubr mov cli cmpsl mov mov (bad) cli fldenv loopne clc call call jp mov and mov mov xchg xchg dec (bad) (bad) (bad) mov add push mov adc push movsb or push or jno (bad) (bad) (bad) lcall loope sar addr16 push pop jo fcoms lcall jp push jg cmp nop pop out push sub or data16 (bad) (bad) pushl clc popf sarl repz loopne xchg xor stc sub in divl jmp cli adc scas adc (bad) pop outsl incl add int3 inc aad dec nop mov or or ljmp sbb adc daa xadd loope push jp push mov push dec inc enter dec ja mov or (bad) incl ja lret repnz or out adc inc aaa and xor hlt (bad) (bad) incl dec cmpl lea cmp and sahf aaa (bad) ljmp aaa shl mov adc or push ss mov outsb mov push (bad) (bad) jmp pop imul cmp orl out nop std mov push in out fldt cltd mov mov or mov xor aas add jmp and mov push fs xlat test inc and fcoml (bad) (bad) jg inc jb dec sbb std test cs (bad) (bad) (bad) decl out dec movsl pop lret (bad) dec out push xor mov call cld adc fnsave xchg ljmp (bad) jmp comiss mov jl inc pop jg sbb lcall pop pop sbb (bad) incl (bad) fs pushf adc stos fstpl dec mov fdivr (bad) call iretw push (bad) icebp mov mov and xchg aad (bad) sti cmpsb and push xchg inc xchg cmp test std andb test add incl or xor cmp cmp dec adc (bad) jb add sbb jmp in inc cmp xor test jg insb icebp orl jae cltd pop mov xchg std push clc (bad) mov jecxz je jno cmp sub fcomps add mov lret push int xor jecxz cs in xor sbb ja (bad) fisttpll jp imul popa push mov mov lret addb (bad) mov add push or out lds mov xchg and pop pop pop xor mov (bad) jg inc push and pushf fldcw sbb sbb mov (bad) (bad) lcall inc jno test int fisubl push add mov in rol add out mov mov sbbl lcall addr16 loop decl add imul cli cmp (bad) (bad) (bad) cld mov adc pop push sub dec loope lcall sub dec lods mov pop fs dec cmpsb mov call inc mov sarl mov add and divb mov cmp xor cwtl mov outsl (bad) mov movsb dec arpl fsts ds mov xchg (bad) (bad) decl or aaa test inc mov push into flds jp (bad) icebp mov jg adc pop mov outsl (bad) cltd mov into push gs (bad) (bad) jmp xchg nop andb mov push imul test inc push les xor popl or (bad) les cltd xor ljmp ss gs loop (bad) (bad) (bad) decl ss xor push pop xor jno popa pop cmp loop enter (bad) (bad) incl lret sub jp fcoml nop push (bad) insb add mov fwait push mov (bad) (bad) call cmpsl jecxz mov imul stos repnz ficoml aas jns sbb jmp (bad) lcall std push mov jns (bad) mov or aas push shrl lahf aaa sti loope lods or outsl jg mov popf mov xor dec mov pop dec cld and arpl popa xor inc mov xchg sbb xchg adc add rcrb add leave mov jnp cmc cmp add push or xchg xchg movsl (bad) (bad) (bad) pushl bound jns loope lods lret (bad) mov sbb ljmp and (bad) (bad) pushl mul inc leave je fisub stc push cltd adc lds lds pop mov (bad) (bad) inc (bad) sbb and add fsubrl cmp xor add lea fnstsw stos int push adc xchg push andnps fldenv ret (bad) (bad) (bad) call (bad) test fdivrp cmpsb stos jns and in cmp pop jno add jle add (bad) fcomip and xor out ret stos push push pop ret lods sti cmpsb mov movsb push sbb (bad) in inc popf mov loope cwtl sbb mov jl cmp sbb dec mull pop push or lcall mov xlat cmp add pop cmp mov dec (bad) (bad) (bad) lcall cmc sbb mov pop adc dec inc push and or xchg insl lcall scas aaa fdiv adcb fstl xchg bnd in jg sti mov dec movl or inc fwait jo xor push rol pushf vxorps sbb (bad) jg stos (bad) lods (bad) or push ds dec aaa inc pop rcll push jg sub pop pop leave mov iret in push mov cld pushl jl fwait lcall mov xchg cld aad les shrl pop incl aam jnp sbb inc sub mov hlt js les and jg,pn inc dec or imul or sub cmc mov inc sub (bad) (bad) (bad) jmp lret mov dec sbbl hlt shrb cmp iret sbb daa (bad) fistl adc (bad) ljmp and clc data16 daa xor push roll arpl mov and mov sub add or (bad) ror pop repnz xor je shlb and xor lods cmp dec push mov cmc test mov xor cmp cmp (bad) (bad) decl push or push test loope outsl bound xchg push push insb push clc mov push mov imul (bad) (bad) fbstp cmp push loope adc xchg fs xchg aad icebp jo jg ljmp decl push pinsrw jae (bad) sub loopne xor mov pop (bad) (bad) (bad) jmp cmpsb bound lock int3 (bad) adc inc or call mov mov call jle aam adc and dec or (bad) (bad) (bad) lcall loopne notb loope mov jge push pop mov push aaa idivb ja (bad) (bad) stc xor or and dec test inc push fldt cli nop cmp add dec xchg mov sbb mov mov add mov (bad) or ljmp xchg hlt sbb push int cli adc imul mov sbb mov push pop jmp sbbb cwtl mov jo pop push pop clts adc in pushf add add jb test scas arpl pop js or jecxz lds xor ficoml jmp xor popf xor clc xchg mov cmp mov pop sbb add mov (bad) sbb mov and icebp (bad) (bad) flds aam enter mov xor add lea adc push pushf nop mov daa and loopne out inc dec mov mov ljmp cmp cmc sub and adc xor xchg (bad) (bad) (bad) pushl mov cmp insl xchg (bad) cmp je mov fisubr imul sahf pushf pusha cltd call xchg ljmp inc jecxz xchg lret je cmpsl push cld xlat enter (bad) (bad) jmp push bound mov hlt clc fidiv sub push out jge sahf (bad) (bad) (bad) (bad) (bad) jge or xlat mov mov js sbb fs inc jb adc mov incl and (bad) faddl dec (bad) cmp nop pusha shlb int3 push add fbstp (bad) cmp test cwtl and lahf divb dec xchg test aas insl stc fistl ret stc ja (bad) (bad) imul push divl pop ds xchg ja sub std pop stos jg xchg test push lods add mov lahf sub mov add movsl (bad) mov loope jo or test pop stos lock inc cmp nop xlat enter mov lahf add add xchg mov divl sahf mov imul mov and rorb sbb or mov popa stc mov mov add jo rorb mov pop fild test movl jnp pushf (bad) (bad) pushl push push add negl pop je fwait dec cmp sub popf jg cmp push gs sbb pop ja and sbb sbb add mov test push sub fs js push out (bad) lcall xor inc jo mov adc data16 mov test mov loopne push jne (bad) or popa sbb ret mov push stc pop je out push mov adc imul (bad) mov or xor mov inc loopne or adc push outsl ficomp mov sbb push and jo add lahf or divl jg pop popf divb cmp aas dec sub addl and call in xchg cs push mov mov add insb and sub cmp push and xchg cld js divb dec aaa xor inc in push out pop xchg shl insb xor mov shrb sub push mov (bad) sbb xor xor loope clc iret insb rcrb xor sub leave add gs or fistp xchg fisttp inc mov mov pusha rorl inc inc jns mov rolb or js cmp test ja punpckldq inc or aas ja and vshufps jno add rol push lock or add les or or mov or aaa fidivl pop or ret repz xor js scas or add dec clc mov add ljmp aad sbb mov sbb add cmp jge ret sbb and int adc pusha xor inc or jns jl and repnz mov add pop sub sub pop add pop and add mov sub or dec cmp mov int3 hlt or push call adc lock daa push add or lods adc push nop cld jbe idivb in xchg mov mov nop mov cltd sub movsb lods mov sub sub stos sub dec and sub inc (bad) sti and push push idivl icebp lock mov and js mov mov inc cltd nop (bad) mov pushf push dec sub scas (bad) xor add sub cltd insl pop aas clc and add adc sar (bad) scas ffreep mov rol in add pop cli xchg fs and cmp setg inc hlt pop notb pusha mov jne dec xchg (bad) dec pop insb xchg neg push or es push push adc sbb jbe jbe sahf ljmp pop or push and mov sbb adc insl pop imul outsl lcall push sbb push sbb pop rcrl and and add sub sub add xor sbb or ljmp push add (bad) (bad) call cmpl movl pop cld add pop dec call out adc xchg adc jl mov add lods sub add push push enter add inc pop mov and xchg sbb xlat sbb ja std cwtl scas cld jbe mov push push mov sbb sbb nop icebp xlat js push sub push push jns loop sbb call scas mov iret inc iret int dec adc (bad) push pop mov rorb clc je call call sbb jo jl sub ffree or push inc lods and repz push push pop mov push and sbb push (bad) (bad) push popa rol (bad) inc cltd push aam sbb jp fs lea call stos sbb xchg inc popa pop push cmp fidivl rcrb fimull (bad) lods jge or insb cmp cmp cld jo xchg addl pop sub add cmp jl imul je sub cmp xor fdivrs cmp jle xor or popa test push push push push xor xchg add mov lock inc adc out cmp xor cmp cmpsb std sbb call pop push add nop ljmp push pusha add pop rolb jmp sub cmp add cmp insl scas ja sbb mov sbb stos sbb mov jns imul imul fdivs fldt dec addl inc rorl dec mov push xchg (bad) repz dec dec inc fcmovnu loopne jns mov inc cmp fisub jg pop dec mov push cltd (bad) or pop es rol outsl push push xchg xor cmp inc push adc pop es pop jno adc pop test add sbb lret sub dec sub icebp scas mov clc push ret loope cmp sub cmp mov mov mov je,pt push mov add or add dec adc adc inc xchg mov mov movsl mov xor sub xor ret into xor stc adc sbb sbb in xlat inc xlat roll adc fstl cwtl rcl cmp fxch loopne jb movsb movsl daa pop pop push add cld mov lods (bad) adc (bad) mov push jo sbbl addb inc clc inc xor mov push add (bad) xor or adc sbb inc (bad) xor mov or inc mov mov xchg push imul xor decl inc mov jmp inc push hlt sbb cmp jbe out mov adc add push inc sti dec or push xchg push pop ret mov inc call or inc shrb popf adc xor pop push and jp test divb addl gs test int3 pop sub mov xchg lret add xor push xor out dec lea lea mov mov adc testl xchg jle movl sbb push shrl sbb jp popa push cmc jb sub pop adc out sbb sub push push dec sbb pop inc xchg xlat jp jecxz pop ss cmp xchg in mov pop inc jle outsl mov in jb insl in adc fmuls pop sub cli sub push lret je jne xor pop add ret add mov or test adc and clc in adc and mov neg or jb mov (bad) cmp jmp (bad) daa test std add je sbb xchg mov es or jmp fstp jmp rcr cmpsl jle lea lret test or cmp cmp lea cmp adcb fidivrl push xor adc pop imul mov dec adc xor clc jo push sbb sbb push (bad) decl adc push add add cmp jl jl insl mov add add cmp movsl mov xchg ljmp fadds or lahf sahf jo pusha push xchg mov les push imul jmp or pusha mov push es js mov mov shl mov jo lret mov inc xchg popf iret dec insb jle inc pop push jg push cmp push insl inc pop enter push std ret enter and jmp roll inc xor inc mov shlb ret test test adc mov lock pusha rorb jns xchg (bad) loopne push rclb ror push mov test movsb jl testl pusha (bad) cs inc (bad) mov xor inc call or iret dec and and push adc add nop add push rolb sbb sub js push enter imul test inc je inc mov scas xor add inc jne mov mov test jne fdivl out and push mov adc scas adc dec cmp dec test push and int fs incl sbb sub jnp jae jge out sbb cwtl sbb pop ret ret jbe mov jo imul add sub je push push fistpl xor mov mov call add inc mov adc hlt jne mov push jbe pop mov rorb cmc jl mov sub pop insb xchg add adc push sbb popl pop push mov imul iret (bad) jmp and or ss shrb or and adc (bad) add shll shl push (bad) inc dec ret sub inc cmp and xchg cmpsb or cmp lcall pushf xchg lcall cs cli cmp pop jb or sbb and inc sbb int jg out je call and jne pop jmp sub push adc push sti iret add aaa sbb sbb jbe jns sbb or int pop or push sub adc jmp pop sbb sub sar cmpsb shrb push mov mov dec jecxz inc add fsubrl mov cs sbb hlt cmp fs negl stos push add jne pushf xor jge stos cmp cmp lret in jne jno adc call or shrl push loope (bad) insb jmp sti call js inc sub cltd xor pusha js dec (bad) xor dec add xor cmp xor pop push icebp sub sub lods push push js (bad) call aaa and push dec sbb int3 addr16 and or sub xchg lods add pop in loop loopne push call push or adc mov xor out pop les adc pop xor jmp cmp pop roll mov (bad) mov aam hlt and mov (bad) lea cmp std mov add sbb cmp adc je dec je or and clc mov jge aaa outsl mov call mov fiadd sub mov addb fcomi push adc in xor xchg movsb jge sub ljmp cmpl adcb add cli sbb pop xorl insb dec jne mov adc loope int3 popf mov sub mov inc push nop dec mov outsl sbb jae cli fs mov cmp add sbb mov push mov lcall shrl push lods dec ds sbb arpl fcomps test pop call cmp fmull jle mov dec nop cmp xor arpl ret inc and fxch jp ja mov fsubrl fildl dec pusha dec dec add mov add jge adc jp fcoms sbb lret call sbb xor mov test out pusha add ja pop mov or mov shl pusha inc mov add aas add (bad) stos xchg push outsb mov cmpsl pop pop xchg fstp out dec xor push adc into popa cmp and incl js gs cmpsl ret test push xor inc push test jmp pop adc insb inc adc mov adc push movb mov push rclb and dec sti xchg pop ja mov adc pop scas pushf and aaa pop mov pusha pop push aam dec push mov popa call rcr mov xchg push dec out push dec daa add shrb inc cs dec call push mov aad jmp inc mov lret ret out das int dec sbb call stc (bad) hlt sbb xor (bad) aad faddl dec dec sub pushf xchg (bad) test jmp and into js push or mov out adc add aam ja and cmp sbb pop mov (bad) in jle and dec pop cwtl sbb mov xor push jg scas push or lahf and fsts cwtl lret pop and je call add in insb inc xchg push movsb fsub adc imul andl lret hlt lock ret xor daa xchg jg push sub cli int3 fs add insb jg mov mov cmp cmp sub data16 icebp or in (bad) jb cmp out in jb in in out je xchg iret fwait out lret call clc add pushf stos jecxz pop imul pop (bad) mov cmp add in orl mov mov fldl push pop jle mov rolb mov call adc jo add mov pop adc aad pop jo jb add loopne xor rorb js loope fwait cmpsb imul dec incb cmpl dec jno and mov lret push inc jb leave pmullw loope xorl push shl loope adc repz loope out loopne add mov adc add dec loope mov push cmpl inc call out sbb das sub xor inc xor inc fmul push add mov lcall and xchg ljmp sahf loopne cmp xor pop xor sub int3 push and push adc jns fisttp jmp in sub fisttp out inc push scas pop jo call sub repnz xor or pop adc pop jmp adc idiv imul lock call sbb sub sub ljmp jg imul jge or xchg cmp jg ss dec loopne cmp jl sub shrl add arpl test rorb test pop (bad) cmp push aaa shrb or push enter aas test mov call sahf bound adc or stos add jno or lahf addl add push xchg add scas in xchg and js inc call call adc js js lock xor mov dec outsl ja fstl dec xor ss or push rorl test rorl push xor add mov jne fwait pusha roll mov push leave test lahf push sbb add mov mov jno mov les fildl in repnz push sbb pop inc inc ds mov add stc ds aaa shlb rorl outsb jns inc xchg cmp rorl movsb sbb jg xlat fldcw pop sbb inc xchg inc testb test jge ds mov push inc and sbb arpl inc or adc jg inc ret sub aam dec cmpsl jecxz inc and addr16 inc dec pop sub pop ss in add sub insb xor repnz add daa xchg lret add sub sbbb in adc in push xlat into lahf or pusha call push rorb adc adc cmp dec pop adc out in icebp or lahf push push adc call rorb sub mov repnz inc inc lcall inc inc ret pushf je out xorb fldlg2 jo sub int lods insb xor testb ds mov pop push push xchg enter mov js push push push mov xor inc push or jge ss test mov mov outsl cmpsl dec push pop sbb popl pushf dec sub jns enter scas xlat inc insl jae aad iret push jmp test jp sbb sbb in pop cltd and pop add loopne (bad) mov adc dec (bad) pop add push jmp jno sub popa js pop xor pop pop xlat xor inc add movl xchg pop subl adc jne push mov fsubrs sbb sbb sidtl mov cs adc xor sbb push inc or and mov xchg cltd or add aad sbbl push ret and in adc test es inc cmp clc fidivr xor pop and pop or mov sbb nop push add cmpsb add (bad) orl adc cmp xchg fnstcw clc or test jl cmp outsb sahf inc jg lea or imul call push fmulp daa call add sub xor dec xor rolb out jmp xchg mov jo pop and dec pop call dec cmp sar pop jle add adc js aaa and cmp outsb push and shlb out mov add add cmp mov in rorb pop or test ret nop mov insl leave fwait negl cli inc pop or cmp enter push adc add sbb gs and nop inc enter roll jns repnz hlt inc adc pop (bad) jno enter sub push and sbb push and pop fbld mov pop fstps sub adc mov sub and jecxz rolb loopne dec sbb adc js and lea sbb adc xchg pop and pop fstl dec rcrl push sarl dec out and adc jno int3 rcrb pushf jo fiadd push add mov repz and push ficompl test mov inc sub or inc call pop sbb fs xchg mov xor mov call lock add lock mov pusha xchg mov mov inc mov faddp test xchg adc sub pop pop pop (bad) movsb nop add or insl hlt add mov add or das sub xchg int pop xlat inc dec dec and dec daa or xchg mov sbb fxch push call jne and seta popa dec xchg clc xchg rol daa cmp sarb mov pop les les lock in inc jg gs cmp cmp add in into insl pop call nop int3 dec int3 rcrl or inc push adc mov insb int3 cld inc add lea pop and (bad) fisubr aad fistl mov inc xchg xchg cmp popa mov add sbb and adc dec or jo sub or in mov inc sbb inc in enter es es data16 sbb sahf mov mov pusha add mov fmul xchg cmp leave xchg leave xchg mov data16 lret and and pop mov and (bad) inc les dec es jmp dec cs pop xchg lret sahf mov lret cmc sub or xor (bad) jae cmp lock enter stc mov fs xor popf and or (bad) xchg lret inc push cwtl pusha scas and sub leave es test xlat mov dec push fsubs push ret js sub sbb cmp scas (bad) mov (bad) enter out adc inc in mov dec fmull ljmp cmp lea rolb mov sbb in xor mov lds sbb cmp xchg xchg add es cmp adc adcl jne (bad) rorb lods mov xchg (bad) lods pop repnz enter call outsb push (bad) xor (bad) incb jg test leave mov sub cmpsb cmp xor mov pop sub pop in adc jns jb arpl inc or xchg or mov inc js aad (bad) xor ret movsb ret loopne flds mov and adc mov in bound push aam int3 fbld mov or out dec test cmp push sub nop daa aad or loop lods ret ret int3 inc ljmp ret sbb xchg cli popf shr loope jb lret inc cmp mov pop adc in mov cmp fisubl cmpsl push cmpsl mov xor cli push je push xor jae js add adc xor add scas xchg mov mov jl dec mov movl pusha mov sub loopne cwtl add sub andb dec movsl or fiaddl mov and pop sub mov popf pusha or add or cmp xorl sub js adc es push lret fiadd cmpw pusha dec inc xchg adc mov imul dec xchg xchg inc sub call and cltd mov push mov cmp pop and pop (bad) xor xchg or (bad) mov mov or and cld cmp (bad) testb dec shr scas cmp jl movsl (bad) xor pop sahf sbb mov inc push add in test (bad) and inc add add pop clc xchg call shlb pop test add sub dec das fnstcw mov cs lock mov jo (bad) mov sti (bad) (bad) dec add or (bad) push (bad) repnz (bad) iret xor cld add cmp clc jo inc in and pop push add out test imul lods jge (bad) mov push std push xchg cltd add mov ljmp push jo push std and inc mov adc movsb pop shrb cmp add push into mov ret push adc mov pop sahf mov sbb loope lods lods movsb setge pavgw mov (bad) ret arpl mov jo adc mov push push add push aaa in repz lahf mov and sbb test cmp mov mov fsts and flds test leave call faddl adc push mov or or inc into inc insb popa mov mov rorl push rorb cli jae add and mov or repnz mov or enter je pop or mov pushf push inc xor cltd (bad) shrl mov adc jno shlb andl iret push mov and mov pop push ss xor ds jns into mov mov mov mov jl inc cmp pop jbe or and mov push push push mov rolb lods adc test cmp xor add push dec push movsb adc enter add or stc mov or jp xor fstps enter call mov push jns int rcrl add cli orl (bad) adc dec test sbb adc (bad) (bad) fidivrl and adc push popl inc insb dec jo mov lcall test es dec jmp sub sbb in movsb ss xchg les and popa add xor pop (bad) rcll xchg add sub xchg mov sbb mov push sub pop push (bad) aaa add or call outsl test xchg xor xor les (bad) (bad) inc mov in int jbe pop xor and pop cltd sbb lods add adcl into dec in push mov popa fnsave cmp xor mov in and (bad) movsb call call and call ret cmpsb es push mov mov das push inc add and jge call inc fmulp arpl imul cmp or jmp call pop pop je in inc or ret je jmp icebp inc and nop mov stc push mov sbb xor cmp insl and add dec loopne into dec sub cmpsb loop push subl or push in jb sbb dec fs add xchg in mov or popa mov pop pushf dec inc lret pop pop fdivs push icebp pop call push mov sub (bad) xor add enter jmp dec sub stc das cld lahf ret push movl lea lea lods test mov and mov push ds push or lock dec cs push push dec push inc dec push aas loopne adc xor cmp cs xor xchg mov push pop or xor icebp test xor bound dec aam inc mov add pop dec and mov pop push xchg lods jp mov fimul push push xchg sbb push or mov adc xor imul aas xchg jbe mov or adc dec repnz cltd mov pop push mov add dec aaa xchg lea push lea pushf (bad) decb je or or addr16 add sti mov (bad) cs (bad) (bad) dec cmp push mov pop add mov add or negl push dec push pop in es add add add (bad) stos xor dec ss ljmp sbb out (bad) sbb nop inc add and mov dec sub add xchg ret mov push je add add add in fstpt fnop add mov shr and push sti lret push inc add call mov add into push push or call mov repnz add push ds or xchg cs inc push dec repnz fisttp add in mov inc loope ficom mov nop ficomp mov fs ja adc push pop call or xchg push push leave add pushf popa xor sbbb pop mov inc push sbb ret and push inc rol les adc push xor jnp insb and mov pop push call les push outsb dec pop xchg pop (bad) jo jmp aaa xor adc fmuls shrb jecxz inc xchg fldl sub add inc mov cmpsb dec mov sahf mov test ret adc pop xor mov leave (bad) xor rorl les mov inc push scas sarb es fisub add sbb cwtl lods imul inc push push imul lods adc in jae adc fcomip bound adc push mov pop sub pushf mov sti sub js in mov mov add mov lcall sbb es inc into inc cwtl insl imul ja mov or popa jbe and iret lahf and adc pop add rorl dec mov jge out dec jl or or fisubl add mov out cmp jb mov lock add enter aas mov cmp mov add and data16 lret xchg cmpsb xor jne and inc adc pop jo and (bad) imul add and mov pop mov (bad) mov mov sbb push and push dec mov roll lods mov test adc pop mov jb daa pop lcall adc sbb adc mov cltd js push sahf or inc arpl fadds dec inc popa push movsb flds add (bad) out js test fisubrl mull sbb add mov pusha lret and pop sbb push mov add add jb or ret sub sbb insl cvtps2pi xchg or mov xor (bad) pop call lea fisttp inc mov or jmp xchg push dec sbb or pop cwtl cmpsb xor jo sahf (bad) mov sahf daa ds pop push int3 inc ret mov sbb cld andl cmp jg sbb sbb mov and jg into mov add lods add jle sub daa mov call pop xor adc lea and push cmpl testb add xchg mov lahf sub les sbb hlt fdivl xchg sbb dec mov and and xchg and cwtl imul sarl inc test push xor cmp jmp cli jge jge mov insl outsl xor adc idivl je xor inc les cwtl mov inc add sarb jle jnp pop and pop inc icebp aaa fisubl mov pop ret jmp fwait popaw or adc mov and jne int3 xchg add movl dec call dec or adcl loope test cmp push (bad) sbb sub sbb sbb shr daa fldcw neg xchg jb mov push fisub or add or iret or push outsb dec loopne ja add pop adc sbb out mov pop xor mov or inc lcall mov arpl adc cmp push pop or in and mov dec and test xor out rorl mov je push sub mov push jg pop dec inc xchg lea (bad) mov cwtl and jb xchg and xor lea dec pop sub cmpsl addl add cmp lcall mov (bad) jb cwtl loope pop cmp cld movaps mov cmpsb sbb or sub or int3 push loop pop lcall pop test daa mov add add int inc or fimul imul insl mov add psubsb or mov fs sub jle jo data16 lea mov dec push lcall mov loop,pt rclb push add sahf xor cmpsb push repz or mov pop (bad) push adc (bad) outsl dec push call subb out jge sub add xor test add ljmp mov mov jmp mov (bad) repz sub icebp lods repnz xchg rcr ret test inc push test lea add repz cwtl and cltd jmp test push es pop pop lock cmp hlt rorb inc cs adc adc data16 dec rcrl add ret jne add push data16 test pop inc call mov imul mov sti cmpsb pop (bad) and push add inc lea inc add lret inc (bad) sbb or push sub xor push call ror dec push jle stc outsb sub push push ds or jbe jno cmp pop jbe mov add sbb add push push insb incb icebp inc clc push or push cmp cmp es and adc imul jbe or push pusha pop push sbbl push adc ficoml adc mov les or add xor ss gs add loope push call (bad) (bad) ss call ss outsb enter push je dec lock sbb inc push jo cmpsl pusha dec cmp cld test inc xor jnp add inc or mov aas cmp adc mov sbbl jbe xor inc fadds sub mov or mov out push and adc jne xorl ds inc inc add sti jg das or test scas sub mov jmp jo jl add add fldcw insb sub inc in inc jne pop and push or daa jge sbb mov xor lret repz xlat sub and cmp jnp call into xor call addr16 jecxz pop movsb mov sbb mov pop lret cwtl ljmp push cld and je adc xchg lcall test loop add repnz push push call xchg lahf lods xchg or add mov pusha push adc lea imul mov xchg pop (bad) xor lahf lods push fucomp movups add push addr16 mov mov loopne inc ret outsl push insl adc leave pop sub xchg outsl mov mov ja ret call mov fldl sbb inc mov inc pusha addr16 je in push add or int3 lret movl imul push mov sbb inc orb and rclb mov jp daa adc jl sbb test pop (bad) cmp adc xor sbb dec jecxz add fst dec pop push lret add inc sbb mov int hlt adc dec push add adc psraw cmc je mov lea mov and or imul jl into ret jne pop or and addr16 loopne dec push push call enter or adc (bad) pop jl mov xor xor mov pop scas out movsb jne loopne add pop movsb addr16 push pop call (bad) and push out dec sbb mov rcr and mov imul jge iret inc sbb es or sub mov mov sbb stos sahf mov mov push sbb pop pop dec mov ljmp or pop xor add xchg mov pop xchg test call or or cs jge and daa sbb (bad) mov xor xor sub mov jl fcomps add push enter sahf loopne pop or shlb fmull xor fldl adc mov jmp and inc sahf push imul xchg cmpsb jle inc and out sbb inc or push jo xchg pop fisub aad fidivl clc fstps jns out out adc fsts or dec inc in sbb jbe sub fwait sub add cwtl imul xor mov dec jnp or inc sub sbb mov jg push and test pushf mov in iret pushf jg cmp leave xchg arpl cmpsl xor ret lock mov pusha jle dec sbb xor sbb sahf xchg sbb and and jns out and sbb xchg sbb xor (bad) enter and psubsw inc sbb sbb xchg dec fstps cs push incb sbb loopne sub or dec aas gs adc push scas fwait in xor push jle or in inc and or add mov mov sub or imul push push dec push xchg xchg push xor lock add or sub inc cmp iret je call dec movsl lock call (bad) push or ss and adc jge les stos dec ret pop and sarl icebp ja clc add imul imul test pop fistpll ljmp pusha daa or es push hlt push pop lods pop mov cmpb cmp pmulhw sbb push dec jbe lea mov pop push jge insl pop sahf xchg out pop xor in repnz call push fmuls jo je mov sub jl mov call xchg dec xor mov subl push or mov add adc nop mov jnp mov out mov pop jb aad pop adc or cmp rol das cmp cmp inc or xor call pop repnz pop fimul in and mov xchg and ljmp sub cmp jne cmpsb xor sub lret inc sbb repnz push push mov and xor test or test dec pop ror out xchg lret xor cwtl sbb popf pop enter dec xor xchg es cmp inc imul repz cmp jne lcall push repz in in fwait pop pusha icebp fs inc mov js push scas lds das scas adc xor push and push and dec sbb jge fwait js pushf mov mov pusha inc mov addl rorb pusha pop mov adc sbb mov fstpl call or out mov adc scas adc mov (bad) dec add jo movl aad mov or adc add push and sub das mov rclb and pop mov jg sbb xchg adcb adc or or xor or lcall add scas and push stc mov xchg or and leave cmp test lahf out cmpsl cmp sub call xchg shll mov adc cmp mov enter and pop mov test jg in out lds call xor je add ret lds and call inc std das mov lods (bad) mov enter ret or cltd aaa jl inc pop lcall add sbb ror sbb lret in pop sti push or inc push addb cmpsb inc push push sti or or (bad) rcrb lahf sbb shl fs (bad) pop cmp insb mov daa xchg adc lret call lea xor rorb out rcll nop pop mov lock fldenv hlt cltd int3 mov lds sub mov unpckhps push xor lahf or push pop push subl rclb dec stc inc dec add and mov sub and fwait xchg pop add xor sbbl and sbb or nop lds popf pop push fsubrl aas pop jmp pushf cmp call pmaddwd mov fwait push adc jo xchg in (bad) mov shrb or xor jns cmp jnp rdpmc sub sbb and pop or jnp repnz sbb fimull std repnz test imul cmp xor xor pop jb sub and inc sbbl pop dec pop or add inc mov sbbl add stc nop push and lea imul xor mov es fnsave cwtl pop pop shlb inc dec or pushf sbb movzbl sbb stos mov mov push aas fs in test pop cmpb jns les push cmp dec push pop and cmpsl dec pop leave xor jbe jge cmpsl push daa mov mov popa (bad) leave or cmp outsl jne mov dec addl out and jnp or inc jmp loope insl lea leave sub out or out and inc mov outsl insl out test mov and mov les or push adc repnz xchg push mov call mov fildll pop scas inc pop pushf lods push or aaa mov mov rol inc lods setl movsb sbbl push xor inc test jmp jns pop xchg subl jae adc sbb roll loop mov popf fdiv lret xor pop fisubl cmp lret sub push dec xchg sbb push sbb sbb pop pop pusha je lds sbb or push sbb sbb or or cmp adcl enter stc call or sub fstl jns pop xor and movl cwtl call add das push sub push sub inc xor adc or (bad) pop xor sub loope jno mov sub jae call inc dec pushf push notl and add fst inc fisttpll jge lods pop pop scas push scas mov sbb xor in xor call dec fiadd mov mov dec adc xchg lret movsl or mov repnz pop sub test movsb mov pushf cwtl lods xor xchg lret in or sbb hlt mov lock in xchg lret in fnop aam int3 push ss cs nop dec lcall or sub dec mov sub pop aaa pusha mov inc es or jae nop xor andb xlat in and pop or fildll in xchg or xchg lea rcrb les icebp push sbbl (bad) jmp cmp fcomp adc test pusha jne fadds leave jae sbb push mov js push inc arpl xchg xchg loop loop mov jns cmp jl jl js repz adc enter loopne add jl push ds jns loop loop loop loop inc ds inc mov cmp adc add je das dec dec nop js je lret test inc xchg loopne dec ss scas mov lret inc pop leave and cmp enter inc mov out aad das and cmp cmp movsb subb sbb incl pushf inc and and (bad) je xchg add or xor mov sahf fwait sti lds enter call test push mov in ret mov (bad) repz out add mov addl inc dec xchg lret ret cli pop jge add andb adc leave out in movsb ret jl loopne push xor push ljmp xchg addb jb cwtl pushf mov cs mov inc fcmovbe in mov jnp daa aad mov fldenv sub fisub sti lea jmp jmp dec jl mov jmp xchg jmp sub stos pushl xor in repz aas insb incl dec or mov jg xchg test push jns mov ror push pop adc jnp xor clc pop fnop xchg add mull push movsb dec sub repnz pop jo sahf xchg jl sub pop mov lods mov mov sub inc clc popf mov fistpll add in mov movb and (bad) push data16 inc pop mov je jp xlat scas xor pop insb fistl pop pop mov icebp nop xchg mov aas outsl in jmp mov inc addb fsubp and and jmp xor in scas in cmpsb idivb sub fnstsw pop enter cmpsl lea add push sti xor xor in mov sub call mov xor aam add in out lahf ss adc idiv into cmpsl insb and xor out mov scas push inc pop sahf out sahf data16 nop mov jns shlb scas addr16 fsubrs push lods pushf (bad) je repz fs inc xor adc cmpsl stc cmp cli lods in fdivl lcall arpl mov cli add int jnp push push testb notl fdivl (bad) push test ss pop outsb fistl jne or out jns int adc add aaa divl add orps sahf clc (bad) mov outsb dec data16 cmp pushf negl rcrb cmp imul cmp sub sbb push clc lods jne jns in sahf mov mov xchg push scas scas mov inc jns out pop jl stos (bad) repz out (bad) adc cmp pusha je sahf sbb sub (bad) call adc xchg insb jns mov push fs pop mov sahf out sub stc fimull bound je mov push les pop push rol push shlb jnp sub mov add aas adc cmpsl jbe inc test cmp jg inc xor addr16 dec add ja xor inc add xchg pusha sub dec add pop mov push in push dec add push mov or repz cmp popa add aaa inc dec inc js pop add inc xchg je jle mov subl cmp mov fist stc je lea sti pop mov leave mov mov nop fistl fist mov clc jnp mov add or aas push lds xchg (bad) ss nop (bad) decl add cmp dec mov data16 mov decl orl insl mov popl rorb sbb fidivr (bad) lock repz out fnstenv xchg push imul rolb jae and lret add xor cmpl jns sahf add je inc scas loopne pop test jb cs int3 push mov stos clc mov daa nop xchg pushf call ss xchg and xchg adc xchg or cmp test adcl xorl dec cs movsl setl cmp xchg mov test ret add cmp lock stos xor sti adc addr16 push (bad) sub outsb and inc xchg dec push add inc add inc cs and test (bad) daa jae je enter push scas fs xchg dec leave test cmp and jg lods es xchg cbtw mov dec int3 stos and out repnz xor lods test out scas je fidiv and sbb mov daa or mov xchg adc das lcall leave (bad) xchg lods sbb lcall push sbb lcall and stos fwait add imul iret stos rcl xor inc add sti add cwtl pop jg pop rolb inc mov dec (bad) outsl fdivl aaa dec bound push shr add xchg (bad) in pop sti cmc dec jae pusha jbe bound add lds icebp imul mov pop dec sti inc jecxz add or in out pop fldl pop sbb ss or add mov icebp pusha mov movsb mov add sbb mov push addr16 sub push cmp inc mov pop inc push sub sub cmp stos ret adc mov dec push or push ret es jbe (bad) cmp fcoms xor inc dec inc out mov inc out and ljmp rcrb push test outsb xlat cwtl ss fadds inc pop pop push pop add jo clc sbb xchg stos (bad) fwait ret insl mov add inc and aas xchg push mov pop pop mov mov (bad) aaa fs notb outsl jae add sbb (bad) mov cmp sbb sub jnp insl and dec inc dec bound dec dec movsb roll movsl xor push lret pop outsl sbb cmp (bad) mov adc mov xchg sub push mov in sub dec popa sbb jge imul add mov ja mov (bad) pop xor ret pusha or jne xchg ss pop dec or xchg push (bad) mov insb ss mov pop clc mov mov mov sbb lock push push idivl mov ds cs data16 pop push jno sarb adc mov push mov xchg ss insl sub loopne (bad) das out cmp cs mov push repz jge mov mov jnp sbb xor and push (bad) sbb outsb sarb push ret inc jnp (bad) xchg sti mov ds inc cmp mov pop xor sub out mov out outsb dec push mov push and out or mov mov cmp bound cmp insb iret idivb jbe mov (bad) into loopne mov push imul and mov sahf cmp push jbe cs (bad) out sbb push xchg jg inc lock iretw mov adcb adc imul fs pop pop jb adc pusha push popa dec pop pusha negb pop jg out ja cmpsb andb push loopne pop sahf insl or mov into push out jnp imul outsb push add pop push jae mov xorl jns mov and sbb xor jo inc aaa mov aam fisubr pop clc push ljmp sahf out dec bound movsl sarl rcr pop mov iret cmp jl movsl lcall push mov jns arpl lahf out (bad) or cmp inc pop mov jns mov sbb xor xorl jns aam mov inc push rolb shl sahf cmpsl cmp lret jmp repz das shll or sahf out sahf and enter jns xor pop mov loopne les push repz out hlt sub push mov imul (bad) push xchg iret sarl fistl (bad) addr16 rcrb enter cmp repz adc jns out mov scas repz out call out repz pop mov imul mov sbb push sarl mov stc cmp ja rolb iret xor jns lcallw jbe add ds rorb cs decb sub jl lea divb cmp inc cmp cmp rcll push xor dec decb or xor xchg push or sbb inc push xchg add pop jle xor or adc data16 jne lret imul shlb or int3 enter mov inc jnp mov jle jg andl or stos incb mov lea pushf xchg mov add rorb add add adc xchg push and bound inc js imul and inc sbb add push jp (bad) aam push xor xchg outsl mov outsb mov xor mov ret xor sub sub in xor push pop sub xchg sub cmp push xor fidivl imul jg adc mov cmp and jnp scas rorl inc add pop aaa inc or (bad) push pop imul adc ss and insb mov dec xor (bad) fcmovnu cmp dec inc inc sbb lds add arpl xchg addr16 add pop pop (bad) aad pop mov pushf pop dec lds pop mov push pop pop rcrb (bad) imul inc xor pop loop dec jo mov xor pop pop sbb lcall mov push (bad) pusha or xor adcl stos sub sub sub pop push push sbb les push dec inc imul pop fldcw xchg mov adc pop fnstenv mov addl mov inc (bad) testl mov push mov xor imul dec inc xchg xchg or gs test stos mov jno dec or mov pop pop xor mov insl xlat sub ss pop aas add add push mov test or (bad) je inc imul dec dec adcl cmpsl pop xchg pop push scas or popa mov jae pop insl aad push pop push mov (bad) pop mov push addb mov and adc push mov dec ret xchg (bad) pop dec mov push jo add xorb pusha and sysexit dec dec push push jp fcomps sub xlat imul push jmp dec mov pop add push mov insl orl mov pop inc dec jmp negl insl inc mull fisubl ja push dec mov data16 out xchg and jae lahf ja add and inc bound mov pop or lds imul xor push dec push lods sub push cmp push rcrb stc xor gs (bad) nop mov push in ret popl xchg mov arpl or mov icebp jg cmp mov push dec cmp cmc push pop movsl mov dec imul sbb sub pop lcall inc inc rorb cltd daa mov mov fbld test dec push cltd and pusha repz insl and adc mov sbb aaa cmc add dec jae mov rcll xor dec insl mov outsl dec call jae lods inc shrb mov fwait arpl addr16 xor adc orl push or std pop mov dec dec push push inc dec inc pop add mov daa ss xor shr pop add mov popa imul adc inc ja adc xor pop mov inc pop pop les or jnp jl cmp scas pop dec dec ja cmp mov leave lods lret roll xchg leave adcl push inc arpl xchg pop outsl sub addr16 mov pop pop imul jae jmp pop bound mov xor jo das mov loope (bad) xor add adc xchg push (bad) seta adc mov add inc add mov add rol mov mov cmp cli add or nop cmp add (bad) cmp addr16 inc add popl test movsl mov and cli inc xor outsb xor xor xor xor xchg xor (bad) pushl xlat xor xor xor dec xor push xor xor xor xor xor xor (bad) (bad) pushl bound xorl xor xor xor xor xor xor xor xor sbbl ret xor (bad) lcall fs aaa hlt aaa mov leave cmp cmp cmp cmp fwait cmp cli (bad) out push jle cmp dec cmp mov cmp cmp idiv ja bound cmp cmp cmp cmp cmp cmp cmp adc mov pop ds sbbl ret dec stos xor xor xor mov jg lret aaa xor xor aaa adc mov xor xor xor repz mov add or cmp ret mov sbb mov mov cmp jg pop icebp cmp cmp cmp cmp dec jp,pt aam cmp mov fs xor mov mov stc xor xor xor mov ret xor inc or and insb ss ss xor cltd (bad) mov sarl adc aas rclb cmp (bad) cmp cmp inc std (bad) pushl fdivrs adc xor test loop cmp mov lret ds aas dec aas fs sahf aas test lea movb push xor (bad) jg xor xor cmp mov int3 xor xor mov push ss fsubrp aaa add xor das and cmp mov cmp cmp cmp and jmp pop cld outsl cmp cmp cmp ds aas lahf aas lods aas cli mov or enter xor push xor xchg rclb or xor (bad) mov xor xor xor xor push (bad) call jg xor mov sub xor xor xor xor (bad) push pushl xor mov ss fdivl adc and aaa popa or and aaa jae xchg cmpsl aaa fdivrl (bad) (bad) pushl pop cmp mov xchg cmp cmp cmp cmp cmp cmp cmp cmp or cmp cmp cmp jo popf cmp stos or mov xchg mov cmp mov cmp ret mov or jae sub push (bad) jmp adc pusha sbb push xor xor xor or (bad) pushl loopne in clc xor xor xor cli xor or ss mov aaa sbb aaa ret mov (bad) cmp cmp (bad) (bad) fisttp cmp cmp ret cmp pop ds ds mov scas ds call sub xor inc aas dec aas push aas pushl sti jp mov test push xor xor xchg sar xor xor xor mov nop mov xor jg mov xchg ss mov xlat cli imul jg push cmp xchg lods xchg xor xor mov cmpsb mov mov (bad) pusha pop aaa sbb push push repnz incl cmp cmp cmp cmp cmp cmp cmp cmp fidivr cmp cmp cmp ljmp idivb cmp cmp cmp es cmp dec cmp push sahf pop cmp cmp movsb cmp enter clc aas clc ljmp aas adc push aas inc aas dec mov jno jg test (bad) (bad) cmp mov ret aas aad fdivrl in jmp cli sbb push pop adc jmp js xor xor xor xor pop xor or xor xor mov mov (bad) cmc jb xor inc jg aas xor xchg xor xor (bad) cmp decl lcall xor les lret xor xor xor xor push mov and cld push pop adc sbb inc xor xchg outsb and xor cwtl xor inc fwait (bad) jmp xor (bad) sbb ss jg mov mov test das sub aad loope cli add sbb dec aaa cmp inc inc loop clc aaa inc aaa push aaa dec aas test mov cld les or adc inc dec call mov nop xor hlt xor lods xor (bad) mov xor xor xor xchg in call icebp aad hlt xor xor pop add or or adc pop xor mov insb xor test mov xchg xor js cli movsb inc (bad) mov int3 sbb aam cli loopne in in adc or or adc sbb and xor push xor add dec pop xor je mov call movsb xor push push push dec into fcoms xchg push daa mov shr mov xorb ss sbb (bad) fdivs in cmp sub dec inc cmp aaa jo mov nop aaa (bad) mov enter in aaa add or adc sbb test sub dec cmp cmp xor popf data16 cwtl cmp cmp and mov cmp mov xchg xor mov fcoms push adc xchg test incb add (bad) lcall add fdivs xchg aaa pop sbb mov dec mov add and das stos and fcmovb xor cmp xchg push enter push dec lds lds pop (bad) (bad) (bad) lcall scas push mov jns incb (bad) sarl leave fcmovu mov movsl les pop jno popf sub or decb flds and aam fildl jl adc pop mov (bad) (bad) inc adc push jmp fcomps insl icebp mov mov std cmp cmp add (bad) call dec jle repz lret imul (bad) xchg js fcoml in or jmp pop push insb scas sbb (bad) (bad) (bad) call mov aam mov jmp lods dec call (bad) (bad) and inc rcll (bad) ljmp mov out lcall mov sti push sbb leave icebp mov repz (bad) (bad) (bad) ljmp jge cli push lahf jnp imul rorb fisubr imul (bad) call fsts and test inc sbb inc loope subl popl movsb fild xchg (bad) decl xchg (bad) xor test js cmpsb dec (bad) dec (bad) repz (bad) (bad) pushl ja imul ret add mov jp call cli pop lret sbb (bad) (bad) jmp pop mov pop xlat rcll sti test add fstl push aaa subl mov adc (bad) (bad) lcall xchg stos ffreep aas nop in (bad) in (bad) int3 fisubr test leave or faddl (bad) (bad) (bad) fstpt pushf dec pop and in sbb mov jp (bad) mov (bad) mov mov in jecxz adc sub cmp pop clc jle (bad) (bad) (bad) (bad) ljmp lahf push mov leave fidivr in adc cmp jae push (bad) (bad) (bad) call jae mov mov and push sub mov add push and mov cmp (bad) ljmp inc nop add mov dec cs push sbb rolb jo push decl loop cltd push cmp dec mov lock test daa out aas in push ljmp and sti sti in pop mov push and jmp sbbl and mov push es pop mov xor mov pop push mov sbb mov clc mov add fiaddl push pop nop add in and xchg sbb jp and repnz sbb and inc add in xor nop add pop push sub sub jb push aas dec or and inc sbb push and push sbb cmp add sbb in test js pusha inc rcrb repnz sub lods mov xor or inc mov inc fidivrl push dec or add add bnd enter mov pusha sub dec in xor inc pop cwtl adc jns xor es mov push push adc push jne lea neg pop sbb movl ret cmp sub cmpsl aam incb push mov lea pop fisttpl and in mov aas aaa fadds or out or in inc or rorl jne jbe adc pusha add loop insb call and (bad) inc mov clc mov xor adc rol das fidivl lea cmp sub xchg push sub rep adc (bad) pop adc and lock adc add mov and mov or adc repnz xor fidivr movsb mov stc mov jb push add or (bad) rolb add mov cmp push push test pop inc pop daa pusha push fidivl out xchg adc lods push adc add xchg xchg orl inc jb pop pop pusha fs mov sub mov into addb sbb scas and ret push pop pop pop fldt (bad) es and lds sub lock mov fldt mov mov mul shr mov adc sbb and xchg (bad) pop enter push fs lods inc pop lds xchg add leave and (bad) and lea pop fadds loope pop push cmp jbe mov insl loope add add and adc ret (bad) jbe cmp test sar and mov mov sti (bad) mov jl rorb add (bad) decl jl xor sar ret or lret push fiaddl in mov inc lret pop ret xor dec sbb cmp add lock je inc imul ret xor sbb pop sub adc iret cld add lret xchg xor pushw mulb shl or xor wbinvd cmpsl mov mov push mov outsb cld push leave add jl mov lea cli jbe and xor adc cltd and leave cmpsl (bad) (bad) mov add xor (bad) mov shr enter jne fnstenv ds iret xchg ljmp xor sub jno pop jbe loope inc add enter cmp inc mov pop mov daa or jns bound mov sbb inc mov icebp adc je mov (bad) mov std fdivrl cmpsl pop mov inc mov paddb cmp lea jbe enter add sbb pop popf (bad) repz sbb das pop divb dec nop inc mov repnz jmp and sbb add mov sahf or js mov cmp aam jmp xor xchg add ffreep out stc hlt sbb js xorl stos adc out sub sbb or pop or mov std mov mov enter add mov inc cmp jl fadds and inc jae fiadd imul daa add and sbb xchg jl jg das sbb push xor adc dec add pop jmp pushf and mov pop nop insl inc pop insb inc test loopne fdivrl pusha xor push je dec pop pushf fdivrs push sbb fistl xchg movsl jmp xchg out cmp mov or loope stos mov lea mov push mov je test push sub push aam jbe iret enter jbe in xchg xorb icebp jp push lock mov inc fcom mov jno add mov lea lock test in je divl sub pop adc fwait mov sbb dec add js push add xlat or xchg std and das movsl mov push jne (bad) repnz and cmp in insb pop test or adc sub cmp or adc mov aaa push xor push pop push or mov pop loopne orb xchg lea mov add mov rorb pop gs push orb pop push mov clc pop add scas or add pop les push add daa push fs push and mov pop leave and sub push leave xchg add sub enter inc dec push push and adc inc inc add push test sbb les xchg or push push mov lock stos mov push xchg sbb rol add xlat pop or cs call push jmp das stc aad fmuls clc aas bound daa fdivs jno adc push in mov xlat xor mov cmp cmp mov or inc or test int3 push int3 add in les mov aad xlat add rcll add outsl cmpsb insl popf es insb bound and scas inc sti pop mov mov scas cmp pop int3 jne push movsb add lods insb insb stos imul jmp pop fist push push (bad) pop mov mov push push mov fsubs cmp fwait dec les int3 adc mov scas mov mov faddl in (bad) mov fs add call dec insb imul (bad) movsl cmp incb xchg cmp int3 push leave push push sub push aam aam movsb or adc jae mov cmp in and pshufw or out xor and jle or mov cwtl mov leave out or push les sti mov xor or addb mov dec adc add shr add in jae enter or sub add xor call jmp mov test out cmpl call cmp push add mov inc adc rcrb mov push or xchg and push js pushf mov xchg mov and mov jne add (bad) fidivrl pop call daa mov cmp or cmpsb jb (bad) xor adc push bnd pop cld bswap jp cmp jbe sbb add sub roll pcmpeqb or adc or jne adc xor subb jo push sbb mov push jecxz jb add mov fiaddl jmp ja cwtl (bad) push fs push (bad) repz mov adc or ds shlb or sahf mov xor xchg push cs lret pop pop pusha fs pusha mov cmpb pop jnp jge int3 and mov dec jle fidivr add pusha jg das jne insb sbb adc push std paddsb int enter jo and lret pushf imul adc mov add int3 inc inc call ss pop xor push push lea stos leave (bad) mov add ret test or mov adc push add lret ja fnstcw popa test sub nop je push mov add in and pop lahf sub cs cmpsb cmc ret fistp push loopne cwtl jno push mov mov cmp inc fidivl push add fcomps sbb sbb mov sahf mov data16 repnz fcompl xchg mov dec pop and repnz lock jne mov mov add repnz push cmp into add inc push add push push (bad) xrelease in push cs pusha jb inc and adc or sbb (bad) or dec adcb lcall add inc lea xchg lret loope pop mov or je (bad) push pop dec jo cmp jae mov andl mov mov cmp jne rol jno icebp xchg jle inc (bad) xor loope add xchg fmuls and sbbl pop push rcrb addl adc cmc xor fs (bad) or cmp jns add pop roll sbb xchg push xchg int3 adc lods aad (bad) jns pop xchg clc lods pop ret add adc imul in sbb adc push jle xor add pop rol pop mov ljmp add add lahf add pop (bad) cmp in dec ds add xor call aas aam pop (bad) push inc popa add int3 jge jbe add bound ds inc dec sbb fadds int3 jge in mov adc push add (bad) dec inc cwtl add rorb dec push pop js sbb int3 inc xchg inc lea add xchg lret movsl or push push in mov fs cs lret push arpl pop add mov add xor dec in cltd fs cmp lret ret pop leave dec add jl fcoms in pushf ljmp std sub add mov cmp adc mov lds out inc cmp push stc les add (bad) lock daa jns test xor inc cmp ds and faddl and addb push repnz xchg mov cmp xchg iret dec cmp cmp arpl cmp xor leave and lock push repnz in sti xor and shrb xor pop adc test xchg (bad) (bad) mov insl add dec pop sub or push enter add inc sbb xor push mov mov pushf lret mov mov dec subb dec and xchg sarb inc and shrb add movsb mov push out sti mov mov jg jb push push cmp push jns cmp inc add addl movsb cmp pop pop cmp sbb cld sub jmp add xor stc pop sahf call aas push ret mov aas (bad) out or sub sub sbb pop adc add push js mov bound xorb xchg add cmp bound sub dec iret repz pop jo nop lods les ljmp out xor (bad) inc jmp pop addr16 pop iret dec push aas imul sbb cmc daa lods adc lret adc push es inc or ja dec pop int3 mov or clc cmp jbe pusha movsb test lea in xchg scas or sahf imul sbb push notb sahf out sahf loopne mov sahf out jo push dec cmp rcrl xchg push pop adc sbb movsb imul lcall cmp pop mov or out sub push xor daa push add nop int3 fmuls cmpsl orl cmpsl adc (bad) (bad) (bad) (bad) ljmp jo pop inc mov jle sub mov popf xchg or les je and adc jmp ds (bad) (bad) call pop mov gs pop pop lock and and mov push cmp (bad) (bad) incl push cli mov sub insb push addr16 call xorl inc dec outsl sub (bad) (bad) pushl icebp lea jecxz (bad) push adc cld in mov pop ljmp (bad) (bad) (bad) incl shll cmp aaa jg scas imul mov add addl int sbb lods mov (bad) (bad) (bad) fcomip mov dec mov jge (bad) push mov xchg rclb mov sbb (bad) (bad) (bad) jmp cltd mov lcall xchg xor mov hlt dec sub nop lret rcrl (bad) fildll push in pusha inc sqrtps sbb jmp adc (bad) (bad) (bad) ljmp and sbb push test movsb mov xor pop inc pop dec stos pop or mov aaa cld (bad) (bad) fcoml adc test pop add incb dec out xor (bad) (bad) inc enter ret dec sti scas dec dec repz cmp std and and stc xchg cmp (bad) (bad) pushl dec fiaddl pop add ds push fstps outsl push xchg mov inc (bad) (bad) (bad) jmp inc arpl nop lds fs aad adc fdivrs shr (bad) xchg mov fild decl or int adc lahf inc mov (bad) (bad) (bad) jmp and mov loopne mov push jne jmp test fnstsw sub jg dec dec pushl aas sub push mov push sarb clc (bad) lcall bound ljmp inc mov divl add dec mov sbb repz push dec inc sub or push fisttpll pand gs sar inc xchg mov orb push pop ja push add add repnz lcall or add das add push je cmp das pop sub pop out mov loopne add data16 mov add push in lods pop ror shrl push add jo mov out pop push add es fist jo adc pop jg jle and imulb mov and inc es cmp out cmp xor and adc iret repz sbb push or cld sub out div ljmp fcom int3 mov out sahf mov pushf jns out xchg nop mov js insb pushaw sahf out sahf pop push dec dec inc cmp sahf out xor and out sahf out adc add outsl fs (bad) hlt daa rolb out daa jns out call out sahf out les jmp adc sub mov add pop das das rcll sbb test or dec push and adc lcall jp push (bad) imul ds push cmp push cli pop aas aas aas add mov out jbe push (bad) jg call push cmp maxps js (bad) mov push lea imul adc pusha dec lds dec jnp pop pop aaa and adc les pop iret jle pop sub inc sub loop sti add add mov mov and sahf lock pop and cmp push inc lahf add adc pusha and adcl pop push mov cmpsb jge push push andb adc xlat outsl xchg insb ffreep mov mov mov sub dec mov push pop sub adc pcmpgtd xchg xor cs inc in jbe repnz xchg push mov out movsb addb push dec (bad) jg out xchg out pushf out (bad) in mov cmp xchg adc push pop dec je (bad) es add cmpsl push mov movsb mov rcrl call pushf push jp in push cmpl push pop hlt lahf pushf in pushf push adc dec and add les fldl aaa lahf nop add xchg add add sbb enter dec call repz add dec mov xchg mov add pop jno and add dec jl add roll mov pop sarb mov (bad) aam out (bad) or repnz lods add adc leave or add and and jb dec pusha dec jo cmp and inc orb repnz push lds repz xchg dec hlt dec les add sbb sbb cmpsl or inc mov dec mov je scas mov jns dec fs mov stc xor add sub test pop ror lret cmpsl aaa test adc add cmp adc lds pop jo jb add add aaa add add (bad) ja sbb add inc add xor and mov sbb mov orl or push add testl imul add jns adcl pop sbb insb lahf cmpsl and mov inc es push push arpl inc sub cmp add pop push inc insl es xchg fs add mov inc add push xor mov aas sub cmp insl aaa sub mov loopne daa aad mov push int aas lcall nop test femms push adc push lahf nop add sub dec insb and out cmp or jp js add pop (bad) xchg mov adc xchg xchg shrl cmp or and and es stos mov aas sarb xchg xor xor dec lock (bad) pushl jnp (bad) xor xor xor xor xor xor fs sbb (bad) out and pushf cmp cmp aas cmp pop cmp cmp fbld mov cmp cmp adc pop sub (bad) (bad) call cmp cmp cmp cmp inc cmp push lds stc cmp (bad) sub push ds xchg xchg stos fistpll in ds mov push ds ds (bad) sub inc aas push aas mov mov xor subl xor or mov jg xor xor pop adc sub es xor lods sub xor xor xor cmp push mov xchg (bad) mov fisttpll cld push adc inc ss mov xchg ss lea getsec sub inc add or subl pop (bad) jg aaa (bad) aaa (bad) aaa int3 aaa (bad) aaa fdivs fidiv in (bad) pop adc lock divb cld outsb or push cmp or fsubrs cmp aam jmp add cmp cmp push jb insl xor outsb push jp dec add (bad) xchg xchg aaa adc es sahf cmp mov mov pop aas fsubrl in cmp mov decb push cmp and sub cmp cmp inc cmp dec cmp adc push cmp pop sub jle sbb jbe jl (bad) cmp cld (bad) decl cmp nop cmp cmp cmp cmp call cmp cmp cmp cmp aaa sbb sarb outsl sahf jle lea stos cmp mov ret cmp cmp cmpsl cmp add into sarl add cmp (bad) mov ds cmp mov sarb jmp data16 fs jae mov xchg aas mov aas loope imul adc scas mov or xor mov out pop xor addr16 inc xchg push xor mov sarb cmp cmp push les mov sahf test push out xchg inc dec loopne sbb fildl or les enter aam pop test fdivrl add insb jmp pop inc or adc sbb and and xor cmp (bad) popf insl pop inc aaa dec lock insl frstor aaa pop outsl fs push outsl and je js jl cmp inc mov shl cmp mov mov (bad) sub loop sub or or adc sbb and and mov mov out cmp cmp inc cmp cs push cli pop cmp push ja je js addb push insl jmp cmp scas adc test lods mov mov les enter inc add sub add (bad) in in cmp cmp jle jg test je cmp cmp adc adc jmp ret cli sbb and and sub sub lcall pop xchg xor cmp cmp inc cmp dec cmp push push insl jmp add mov mov jo je mov push pop loop rcrb (bad) ljmp in in cmp cmp cmp insl jmp pop cli add decb cmp ljmp jg (bad) jnp cmp inc cmp pop cmp fdivrl loopne jg cmp mov cmp push cmp inc addb pop ss ss call cmp in add or sbb pop push sbb sub dec ds push js cwtl mov loop ds sbb and sub hlt jg addl aas mov mov bound push test xchg insl mov (bad) dec loopne xchg out adc jnp ljmp add lahf push fwait movsl pop nop sub loopne mov pushf lret adc popf aas add mov (bad) incl push mov jae jmp (bad) testb or cmp ds and sub pusha and sti dec mov (bad) gs dec movsl mov es cmc and fcoml lock lahf sbb (bad) rorl (bad) jmp pop lret loop fnstsw jge push cli xchg test mov fildl gs (bad) (bad) jmp dec jge (bad) mov cmc xor fwait or sbb clc inc jnp daa fsubrp mov mov (bad) (bad) ljmp add mov sbb and in fdivl leave fsincos cld lcall (bad) (bad) jmp cmpsl push xchg stos outsl mov jns add out outsl stc mov (bad) imul (bad) dec mov out mov sahf push mov inc adc lret sbb dec mov (bad) (bad) (bad) pushl cwtl popl mov pop pusha pop jp xor movsb gs call mov sub cmp jne sahf repnz push dec and push jg incl xor cmp ss jg (bad) dec in push cs and in adcl hlt ret add in (bad) ds xchg mov rcrl (bad) jb in and divl (bad) (bad) (bad) mov insl mov std stos inc or push test jl ja mov iret (bad) (bad) (bad) incl orb mov jb cmp (bad) in mov fwait cmpsl jl (bad) (bad) (bad) (bad) jl,pt incb or add in xor popa cmp bound (bad) (bad) (bad) push xchg lahf cmpsl (bad) pop pusha mov inc or pop pop addl (bad) decl xor dec xor dec dec sbb xorb inc fs (bad) (bad) (bad) lcall xor inc add aaa (bad) fwait out mov arpl shlb inc add (bad) pushl fmuls mov outsl loopne fucomip push lock push shlb sbb cmpsl inc adc leave jle std mov pop out pop rclb push xchg xor adc mov (bad) ja push xchg adc ds xor push adc enter push adc pop cmp xchg adc cs mov test adc dec xchg fsubrp xchg add xorl cld ja pushf or aas fcoml or and mulb adc stc adc mov cmpsl test xchg sahf xchg jle insb jg (bad) pusha push add lods clc dec or cmp inc add mov xchg leave enter push inc dec out addr16 or pusha sbbb repz mov pop inc repz mov adcl xchg sahf dec push cmpsb mov rolb add sahf add scas loop adc mov push xor repz dec push push repz repz cmpsb mov ret cmp int3 fsub ljmp mov sbb ss jns out pop bound out sahf out xchg pushf mov sahf mov cld out fidivr mov sahf out sahf ss dec push pop push jp xchg movsb lods out sahf out (bad) rcr repnz repz decb push and ss repz dec pop bound iret repz nop lcall mov sahf out cmp cld push mov sbb out and cmp out sahf out bound jne jns mov out ds push rolb in add jns cmp bound mov out lcall sahf out in clc or iret sub dec push push cmp xchg mov iret repz add sahf out dec push fs out sahf test cmp sarl sbb ds repz repz movsb mov repz mov adc and inc push outsb jns out jle sahf stos mov enter xchg push iret repz es pop push cmp lcall repz cli push xchg push out sahf out cmp lahf out sahf mov xchg cmp repz xor pop repz repz nop mov iret enter xchg outsb push sub cmp repz pop jo xchg test cmp movsb scas (bad) shl imul sahf out sahf cs push data16 sahf out jl xchg mov out enter iret repz push xchg push cs fs repz xchg mov iret repz fsub lock adc xor sahf out sahf push lcall jns ljmp out sahf sub push push jns lcall out fdivp or iret cmp mov repz scas mov out clc push fwait and out sahf out bound xchg sahf out sahf pushf scas mov int jns (bad) push pushf sub repz repz push data16 iret repz nop cmpsb ror in repz cmp cli push push popf push adc iret repz cmp jp cmp repz scas rcl jns out repnz jns out pop push jns pushf stos mov (bad) cmp pop jl sahf data16 push and cmp repz pop push mov repz pushf scas mov jns cmp adc and sahf out sahf inc push fs pushf jl out mov fsubr add sbb cmp repz pop jb mov cmp lret add adc dec (bad) out sahf out mov jns (bad) (bad) call out sahf out sub pop push je xchg cmpsb ret int jns hlt add repz pop push iret repz orb repz (bad) out cld jns cmpsl stc adc out sahf out outsb orb stos mov call iret repz xor push pop repz repz lcall shl (bad) or sahf sub bound sahf out mov repz out push test and iret repz inc pop insb test cmp (bad) aam push test push cs push (bad) out sahf out xchg mov jns aam hlt adc repz push bound iret repz cmpsb mov cwtl cmp outsb mov je mov push cmp daa jl in sub add push pop ja xor pusha add je push sbb sti mov jl sub das add pushl or mov push outsl sbb mov insl loopne sbbb jge movsl mov mov pop push call lods pusha ja mov call jl ds xchg sub sti add jmp gs dec push dec adc inc pop fistl lret dec mov mov push es sub mov (bad) jge xor cmp fwait loopne sub out adc mov push imul pusha and flds pop lret mov mov cli inc and or cmp jl mov sub jmp lds xor hlt cli add pop test push sbb xchg loopne roll push ret jne stc push repz pop test cmp fisub and mov cmp cmp das push dec outsl or inc or call mov pop add add jmp int3 fistl shl adc fdivs dec add mov push cmp xor fwait pop jmp push pusha mov imul adc inc jmp outsb inc push cmpsb and and add jmp mov jl das inc cli mov jmp adc sub cmp pop leave push cmp outsb adc enter es pop fimul clc add outsb test jmp ja add lea mov repz clc cmpsl mov pop mov jge jmp ret add outsl pushl and xor or jmp sahf orl xchg dec sbb inc sub cmpb ss lds inc fs sahf (bad) jbe add jle in adc push cmp mov add jnp and cmp (bad) mov pop mov jle sub je pop jmp hlt fwait stc insb adc sbb popa das adc je mov test add loopne enter sbb clc icebp imul add sub (bad) ljmp call in fwait inc add syscall add sub xorps roll pop and jge inc adc sub pop or lret andb inc mov or int3 frstor sub inc rcr sbb lds jo cmp cs mov add mov sub and fist push push out rcl push xchg dec push dec add test aam mov pop sbb pop popl or add sub or orl jecxz pop mov and (bad) pop jns sub xchg sbb loope leave xchg jecxz adc outsl pusha cmpsl enter jne sbb mov sysenter push adc add inc add push test dec in and lods shrl push mov fmull loopne dec jl add or sbbb xchg xchg lea jb jp dec xchg pop hlt lock gs adc gs js push adc dec cmp sub cmp sarl add decb jmp inc mov mov out negb xor jge inc jl xlat shl aam ljmp clc push in movsb xchg sub or clc dec cmp mov xchg mov mov lea cmpsl int3 or clc mov push ret push add and rcrl call je inc clc or sub ret add incl pop xchg (bad) xchg xorl jle inc lock aad cli cs cld sahf jl jmp xchg xor jl dec (bad) jg cmc mov xchg mov div call mov xor roll daa and cmp js fsts and mov fistp (bad) cmp mov jnp jno cmp cmp mov mov jge cmpb stos clc adc add push nop and fucom mov icebp cwtl mov mov mov test mov out pusha jg sbb sub cmpsb roll mov mov and out cmp cwtl add push movsb dec add add and aas lock call cmp add mov pop mov mov lock stos and (bad) or call insl icebp fisub adc ljmp and cmp pop cltd icebp mov add or jae xchg push data16 push push push xor xchg inc es stos lock and push jle sbb ret mov add in cmp xchg xchg mov adc sbb lods mov scas sbb and sbb adc cmpsb mov outsb mov (bad) xchg mov and fcoms add imul lea gs adc ret push loopne lock push push pop inc push in lret in adc mov rclb push (bad) xchg shlb add lcall cmc mov and and sbbb idivb je (bad) or add push pop ret mov jp adc sbb mov mov shll fiadd pop daa xchg ret stos adc sub and ret pop xor call add adc out mov bound mov jp jl mov cwtl incb clc cmp in cmpsb daa dec pop enter aaa and push stos inc lcall pop cmp mov aad cmp or test aad js or ret sbb jo cwtl fwait xchg cmp inc sbb je xchg lret mov inc stc incb movsb arpl inc inc imul inc mov sbb pop aam pop in test shl jecxz mov je dec insl push and popa cld call sbb jp enter pop sbb or xchg jp and enter dec adc sub add jp int mov sbb inc cmp mov nop imul lock add lods dec jge mov lret js mov or enter cmp jle inc inc and adc (bad) (bad) mov rep (bad) clc jne mov add sub jecxz (bad) lock in mov mov add mov cmpsb shl jl add loopne loopne add cld jle int enter or mov cld sbbb sub fbld cli lock push data16 andb mov jle pusha add sbb mov sbb in dec lea push mov (bad) int3 test jns mov mov dec cmpsb scas mov or cmc pop push mov imul movl stos mov push jl mov lods orl xor or pop jns roll and fmuls pushf dec js jl mov cwtl into les inc adcb stos loope je scas mov mov add sub mov (bad) xor xor xchg adc icebp test hlt sub push adcl jg cmpsb or xor push push push mov fs stos add adc add pop cli and jp xchg pop int inc icebp roll jae mov fnstenv add mov adc inc jmp leave repz or nop lret xchg xchg pop add pop jp push inc add hlt or imul add push xchg and fsubs icebp mov movsb psubq jbe bnd add mov cld ret call or (bad) mov out push call sub pop jne loopne cmp and jmp mov sub inc and add dec movsb push rcrl push xchg sbb push sbb jg adc stos mov push into or add cmp out fisubr mov imul sbb lods lock enter loopne pop dec add push jmp add jge xor push push pop adc pop ficomp cmp jne add fs dec mov or sbb mov mov mov ficompl lea popa add mov js add (bad) xchg pop dec xchg sub (bad) in adc push jbe mov iret cmc insl sbb push xchg lret rcrb jo mov and mov xchg dec inc fimull subb add jbe or call jp jl xchg pop xor push int imul mov jl test cmpl jns mov sub addr16 stos out call jo aam rorb call jbe sub outsl sub mov cmpsb dec jle out loopne pop sub fcmovnbe xor jle (bad) mov push xchg (bad) sahf pushf adc cmp (bad) jmp cmp je push ret js outsb movsb loopne sub or cmpsl push ja or mov outsb and pushf mov mov push sbb dec scas mov (bad) fcompl clc jecxz aad mov dec in dec add nop mov pop or add xchg push aam push inc pop push adc sbb insb jne pushf jae sbb xor or jne rolb outsl xchg sub xor ret xor inc pushf lret cli mov sub nop out lods aam and inc sub nop data16 adc sarb and or inc adc sbb ret or ds (bad) cmp insl enter jg cltd jbe mov or pop ds xchg fucompp mov mov ficoml mov jmp stos xchg dec xchg inc push jle stos pop inc or ljmp or clc test insb sbb mov std xor inc adc push les pop mov aaa dec cmp lahf sbb add mov je xorl dec inc cmp scas xchg lods or je shlb ds insb mov push xchg push cmp jne mov cmp test add or test adc jne outsb inc push push movsl movsl fnstsw cmc mov and push fimull xor xchg mov pop jmp stos sbb mov mov add inc xor test add int jge divb aaa js add sub js dec lcall stos ret and call or or cmp fwait lcall dec jno and test add push add (bad) ret into loope pop or call daa xor movzwl cli mov push (bad) pop cli pop sub push sub mov insb fdivs test repnz push inc add adc dec xorb call sub sub nop cmp and ret ret sub inc mov mov mov (bad) sbb xchg and lea loope push and xchg mov sub call mov push push push push push add cs stos jbe add mov test push inc add add (bad) aaa andl insl lahf mov adc imul xor clc add (bad) int int stc or jmp lds add jmp or or push je outsl call js inc push push sub lahf push or and test add sbb pop and adc rcrb or mov add push std mov sahf sub or pop cmp push jne je jecxz cli push inc xchg aas push sbb push push cmp fistpl (bad) mov outsl orl pop push mov sbb les rorl dec js xchg movsl (bad) xchg aaa pop mov sahf push out jb pop sbb and jle dec pusha enter sub mov outsb adc aam add inc xor outsb sbb mov sub or mov decb lea push lahf push shlb in or inc fsubl lods loopne and (bad) pop loopne call lahf mov call je lock inc push sbb int3 push call push insl lock ds loopne push pusha push mov xor inc incl push xor mov mov push dec adc and fdivr jbe cmc push call lock call aad add call das in lock popa in pop push push and movsb int push xchg adc insb push (bad) enter adc (bad) or mov sbb in or stos sub out icebp lock sub out add shl sub pop push push in call jns mov or in test mov sub mov into xor rcr dec addr16 popf lcall xor or jb cmp data16 cs mov cmp xor or (bad) cmp and inc call fdivs loop call testl pop jbe xor fdivs xchg out pop push or or daa mov pop fimul push xchg pop mov pop adc ret loope jp mov call je adc mov aas mov inc push cli call push int3 lret cmp push xor lods xchg outsb in cmpsl (bad) int3 xchg mov and xchg push mov dec sti cmp inc jo add push ficomp adc daa call sbb and loopne push pop movsl or add mov rcl push cmpsl pop dec pop lock sub rcrl in (bad) adc lahf mov (bad) jae in sbb ja jmp jmp nop nop add nop out sbb inc xor sub xor xor add jg shrb sbbl das push or insl pop mov mov xchg fiaddl dec out (bad) mov push inc pop jne sbb lock ja pop lock loopne dec dec mov or adc sbb enter clc jo (bad) aad push adc out and mov push pop sub or insl sbb clc orl scas in shlb lods sub sub sbb cmp lods fiaddl mov dec xchg dec xchg enter addr16 bound jle mov arpl cmp xor mov add sbb sbb jle clc test hlt adc stos inc inc jae jae ret inc insl fdivrl adc insb push mov dec push fs mov loope outsl inc cmpsl push (bad) adc mov cmp iret add call scas les call cmp pushl int3 and and jecxz xchg cwtl ret (bad) imul fbld popa popf nop pop (bad) mov xor pop call icebp inc (bad) jb adc enter sub or out jge dec cmp jl dec pop mov out fwait call test mov ja push and push in xor mov adc movsb mov inc xor fdivrp xchg jbe or insb dec pop jmp jno mov jmp addb clc cmc and (bad) data16 add fldcw or and rcrl fiaddl test call add pop adc nop jmp mov nop sub out sbb and addr16 call and rcl add jne dec int sub mov sbb test or inc je push inc inc or icebp push push test adc mov cmc cmp push mov mov mov imul loopne cmpsl mov inc cwtl cmp jle inc push jmp adc mov testb aam dec push into test mov ss inc or mov sub mov sub pop fdivs clc (bad) sub lret sub dec mov call inc add dec jmp imul dec sub xor add leave addr16 or push jae or mov cmp das push jnp test hlt orl inc inc nop add push push pop mov adc push mov iret sahf mov fcomps mov in or add test push loop lahf mov div fincstp fadds jle ljmp pop or pop iret jle sub jmp call or jp mov (bad) jecxz gs pop adc push loopne inc movsb add xor mov mov bnd adc mov insb sub mov (bad) fsubrs jp dec add movsl xor inc sbb or cmp dec xor (bad) jo ret ds mov add cmp lods adc sub insl xor xlat adc sub repnz jmp pop movsl push aaa inc mov sbb mov aas es movsl fld1 fsubrl pop adc adc inc imull nop cld push add ficoml xchg mov xor (bad) jo adc call popf jg stc lret and call mov xor add test ljmp push xchg xchg repz xor loopne dec mov mov mov jg aad jne out imul add out cmp test sub sub in enter jbe aas (bad) shrl or or pop cmp jmp mov aad mov int3 cwtl push mov data16 adc cvtps2pd xchg hlt clc add scas rorl shrb jp adcl pop push sbb or hlt mov icebp arpl jb btc je hlt xchg pop push icebp xor (bad) (bad) int3 jecxz (bad) scas aam xchg dec stos dec or add xchg and (bad) call sbb adc unpcklps (bad) es lock sbb data16 stos mov iret addl dec andl push outsb scas xchg cli mov outsb mov inc inc nop add es ss in sub cmp adc sahf mov pop jne iret ljmp or push adc (bad) sbb (bad) add push dec data16 (bad) jge xchg mov lock xchg dec scas cli or ret mov mov push jg rcr int3 jbe data16 call int dec fs je ret jecxz mov jmp mull int3 or loopne cmpsb imul and imul and push pusha pop pop add xchg in jl and push push mov jbe mov sbb sbb mov adc (bad) adc orb add jae orb xchg test push xor add jg imul dec push jno jno insb and xor cmp sub add pop and or xlat cwtl mov push adc test sub lea ss popa std rcrl or stc jl (bad) idivl testb into dec or or adc adc iret inc cmpsl push mov add add into add pushl push inc cwtl sbb (bad) pop jmp loope bound mov lods adc rcrb fwait inc (bad) sub and adcl pusha mov pop and jmp dec pop in popa (bad) or arpl sub lcall add dec jp mov dec mov pop hlt push mov push repz inc lods shrb add xor cmpsl push push sub cmpsl fisub dec add call xor rolb loopne and daa cltd nop push scas mov test sub inc xor lret jne nop sbb sub push rcrl ljmp js cmc pop andl call sti and mov or shlb mov mov or das add sub fild add inc std icebp andb or pop push jl pop lcall (bad) fsubr push push daa jmp push mov push insl sbb inc or cli mov data16 push add aaa pop xor imul jno (bad) hlt adc daa push xor push xor call mov inc sub sub inc sbb dec sbb add in int3 xor add int test sbbb fsubr loopne hlt popa nop fs addr16 mov ret ret pop lock std sbb call pop push into pushl call hlt mov sahf dec hlt sub push test adc jbe das sbb jo subl lock les movq mov add lock (bad) xchg scas cmc and push adc popa icebp or adc mov testb aad cmp jmp jp testl dec inc push cli mov add rorb mov sub inc ret adc pop int3 cmp inc xchg rclb xchg scas add movsb test push or mov orl pushf cld jb rcll jns clc push fsubs push push sub outsl add int push and dec sbb imul adc (bad) (bad) ficom sbb and jmp pop mov cmp aas push and dec or repnz add push pop cwtl add (bad) and loopne js stc or loope mov and aad sub mov mov stc aad cmp call bound jae push inc in cmp inc adc fsubs or inc mov sbb or iret lahf rol cmp inc xchg adc stos and je pusha movsl rep jo call and xchg inc add loope aaa adc cmp or arpl cmc jne cmp jns dec lret sub sbb lods lds jns sub scas outsl mov push call and jmp (bad) in scas xchg mov xor push mov cmc in push fdivr sbb (bad) lea aad mov jmp lock push nopl or pusha (bad) or repz push inc pop jo scas jb push push cmp sti xchg add pop je cmp adc fwait (bad) repz sub sbb mov xchg add and xchg ljmp cmp mov mov mov push mov cmp dec sub clc mov jl bound jp cltd test adc out movsl call sub pop adc xchg pushf cvtps2pd dec push fbld sub pop in inc fucomp dec fisubr or cld (bad) int3 jmp add push loop push xchg lock pop (bad) call jb and (bad) outsl or jne aam scas mov adc lret loope fs xor (bad) lcall push in sbb mov or and out push sub mov lahf call adc je jae push mov cmp mov jmp xchg call mov inc data16 mov cmp out in insl push cwtl adc popf dec pop sbb imul push lret mov mov or xor lock push adc or push cmp add dec sbb scas push inc daa cs cmp xor in add fld jmp ds rcrb insb xchg cld add (bad) mov hlt loopne andb cmp test push nop subb sahf jns jle rorb rorb movsl das jns xor jl (bad) cld pop call cmp mov add sub xchg out xchg mov and rol jb sub lds ret in out ds mov inc or lods dec fiadd push lea gs lock jmp jmp push xchg rcl cmpsb jg sub xor ljmp sub xlat push aam pop imul clc mov lcall pop cwtl push xchg cltd (bad) in adc pop pop rcl aam xor add jecxz push out jo,pn call into xchg outsb add sub sub ljmp inc jle out cmp sub mov sub sub pop push xchg lock sbb movl ficoml lcall inc mov and data16 xchg ljmp inc std sub cmp push push push pop mov lcall jb cld push mov or mov mov movl movsb imul je into inc push test push in lret js in jl lret push push sub rcl addr16 mov mov cwtl push pop imul pop inc jns rol or xchg add push mov sbb mov mov gs or mov jne sub lock jo (bad) cs pop add add adc xchg push cmp dec pushf cmpsb out mov rcll enter inc mov push fisubl mov ret in push aad clc cmp pop rcll mov xchg fcmovne xchg inc inc cmp push adc inc jg test out fs pushl cmp pusha push sti decb adc lock pop xchg out push loopne sbb ret add lods je jl pop or test inc lods orl inc clc ja (bad) xor rolb add and sub (bad) jns lahf cmp mov sbb mov cmpsl xchg adc sarb scas xor push jle adc jmp popf loopne out stc add add in add jo rcll push push outsb adc xor push xorl sub test add inc loopne (bad) jge popa es (bad) jo jg push mov pop aaa dec nop mov loopne test fsubrl repz xlat cmp or mov mov pop adcb cmp (bad) jno xchg push ret aaa cmp sub sbb pusha mov lds (bad) out sbb dec (bad) add adc jle lret js and outsb or sub push dec and xor jg (bad) ret add mov sahf jb add cmp lock adc mov cmp jge sbb (bad) sub dec add and je jns ret aam add clc sub pop pop pop ret orl cmp pop add outsl out setl call (bad) inc js pusha dec xchg and jl dec scas cmp adc cmpsl in call cmp ret push add mov push xchg sbb cwtl rcll cwtl aaa pop adc fcoms and push add adc mov repz and xchg mov jp loope,pn xor cwtl jl pop ljmp inc sub dec out or cmp push cmp jne mov push mov jo std push xor fsubs pop pusha out push in mov xor inc jp jp lcall mov push imul cmp pop icebp xchg ljmp test cmp jno xchg or inc xchg cld cmp out test stos add cltd in decl iret and push push lea jmp jb push test popa sub das popf cli dec dec add add jmp sbb dec push xor cmp (bad) sub and inc adc push mov xor and mov push ds xor outsl mov orps jmp sub dec sar push call outsl mov mov in inc inc je stos test or mov push divb nop add push mov xchg (bad) (bad) neg or add jge jne loope nop rcrb ret lea fwait inc call cs cmp out cmp and pop or fwait rclb push imul push or push scas or or sbb or mov movsl sbb insb add xor jo adc je fcomip add mov pusha adc push inc shl cli insb add push push push push jne js pop in daa (bad) fild fsubs or push inc xchg adc stos mov mov pop sub (bad) stc add pop mov bnd mov xor call hlt pop adc call jne shr cmp pusha lds add or fisttpll test add call and test adc mov dec jg pop call cmpl bound push cwtl lret inc sahf mov mov mov lods loop pushf and lahf mov adc cmpsl or mov pop adc imul and xchg jle cmp outsl add clc clc add lock dec sub adc inc push push jecxz pop and push pop push clc pop xchg dec mov das and sbb push pop sbb or test cs push (bad) hlt push mov or push push jbe fnclex add xor or test rcr aas push nop notb push sub dec sbb or imul adc push sub add mov popf inc add mov mov and pusha jns push inc in fisttpl loope loope (bad) stos imull fxtract and pop in aas sub cmp xchg outsl popf loopne jo por sub lret push push push shrl cmp sub pop jg rolb mov loope pop cld outsl inc sub aaa push lds ffreep jecxz into icebp loop test movsl jo xchg jp icebp add add out (bad) insb add mov pop pop je pop testb or negl call div push mov popa pushf imul bound stos lcall and out mov jle xor xlat lock mov pop les out clc sub pop mov pop mov fadd push dec cmpsl cmp and push movsb outsl push inc dec orl roll loop push adc dec insl nop mov fdivrs sub popa pop insb add pop mov push je sbb js dec push nop shrb pop inc xor (bad) push push loopne jns out clc push dec push and enter jbe cmpsl xlat daa adc imul loop mov cmpsl xorl loopne stos and push xchg xchg xchg sbb (bad) out and adc imul push sti xchg pop (bad) ja mov scas xor sahf pop jmp mov sub xlat test cmp jp addr16 pop jns push jo mov dec adc test xor inc mov pop rcll pop xor es push into mov dec or lret xchg xchg pop push push xor jne,pn insl dec sbb pminub xchg adcb dec mov pop pop bound and sbb outsl std imul push or mov and and xor imul sbb sbb inc adc fdiv push mov push push push inc rcrl mov pop sub and add incb rcll negb in notl mov out rol xorl xor lcall div (bad) xor icebp dec test cmp or insl xlat mov mov push dec (bad) imul sbb jbe cmpsb dec add stos mov aaa pop loopne pop fnsave mov es cwtl testl inc adc das (bad) adc sbbb mov adc test adc cmpsb adc pushf loopne cmp push test xchg ret jb cld and xor jne or insl pop and push cmp inc dec cwtl aas repz shrb adc dec mov mov pop lock lea push cmp mov mov and and mov xor xchg jb jecxz push stc add pop jmp lods add ja (bad) jne pop jmp cmp push jmp cmpl jo cwtl add fstl xchg aam repz in imulb lods and jecxz xchg cmpsl mov pop jmp adc fwait xor dec add add adc mov daa xor push add nop call mov mov push jb cmp movsl bnd pop call shr loope cwtl test adc and sub scas adc call jno jbe jnp int add xor subb adc mov movsl push test sbb loopne xchg dec sbb mov test inc mov and sub es mov jle lret sbb add or xor cmc add lock daa lods (bad) jb mov scas mov call add or mov icebp pop pop mov xor push pop add mov or rclb xlat sub sub mov insb adc pop loopne xor subb jmp adc (bad) js jno mov aam std jmp push jns pop fidivrl jmp inc adc add out dec xchg mov xchg roll in inc push jg pop push fsubrp dec sbb rorl cmp add daa in jo je adc rcrl adc enter dec xchg mov (bad) stos subl (bad) xor xchg pop stc lock mov fdivrs and cmp in dec push orl or out xor not adc push gs sub mov ja idivl or inc rol pusha mov pusha and aad push mov pop cmpsl jmp nop out mov pop jno inc push xchg lods xor sbb adc or push and add adc xchg scas shr js adc mov fsubr loop fimul (bad) add dec xchg ret icebp flds push push (bad) add push jge push ss jg cmp jge test lea jge sbb std xchg fiaddl andl dec je lahf and or adc mov cmc push movb mov aam fsubrl and das xchg xchg test mov call lret xchg in clc les nop mov cmp cmpsl mov sub addl xchg rol sbb enter stc jno xor mov mov jno xor dec cmp xlat mov dec test mov cmp dec lea pop mov mov in js cmp aas fcoml sub lods push movsl jg sbb or pusha or push add push sti dec in add in push decl addb xchg add dec cmp push adc aaa test push sbb nop popf mov pop mov push adc insb out dec enter (bad) ficompl mov enter xchg or mov and mov mov out addl and dec xor lcall mov loopne xchg cwtl dec imul cmp inc dec adc (bad) pop cmp cmc mov dec pushf loop cmp mov jns pop jne cmp cmp cmp mov ja (bad) mov xchg xor test mov xor mov popa mov jmp cmp fsubrs fsubs outsb popa rol sub outsb lock sti lret and scas xchg lret in inc sti (bad) shr gs sbb mov cs mov lock xchg shr sub add lock xor rcr and mov addr16 aas add mov pop and dec es lahf sub push sub pusha int3 jle clc jmp je cmp mov or add jmp cmp cmp mov sbb lea loopne pop pop push cmp cli sbb dec insb shlb or push sub fadds int3 ret inc adc adcb lock cld orb in push jmp add dec add (bad) jmp inc jg movd or scas dec dec add call loopne mov (bad) bnd push ss fisub lret or push sbb cmp sahf sbb adc sarl je mov jbe cmp call fs notl orl jle mov outsl xor jne mov (bad) out inc adc xchg inc xor mov mov sahf movl xor jne push loop mov dec sbb push dec cmp cmp pushw adc jo push mov orl hlt shl aas sbb mov sbb in cmp je jmp lock add loopne jmp call mov add mov jb inc dec movb decb scas pop add pop add test mov push or xor cmp xor dec add iret add sbb sbb fstpl shr or lock pushf loopne arpl sub jae outsb push mov adc sub push xor push adc roll inc in lods and adc adc inc adc mov ds pop outsb add push cld push cmp ret sarb cli pop push push aas mov xor fldl cli or push nop jle movl call cmp inc clc mov pop jle jl call or push jge mov adc add ss pop shr lret call mov or mov add pop jo mov mov das mov aad fs and lods (bad) sub mov cmpsl (bad) clc (bad) hlt adc xor push aam sub add and push test imul test andl sbb mov ja add arpl push sbb dec jne xchg and jmp add xor insb je leave pop gs sbb mov shr push and es dec push nop jle sub leave or push sahf int3 xor mov and ret mov dec shr and aas mov aam stos xchg mov mov push sahf jmp adc lock inc and ret xlat ficompl inc mov enter and outsl lahf imull push sbb sbb ds ja push rorb cmp xchg (bad) js outsb mov dec insb subb enter push out adc (bad) mov scas (bad) push movb fwait mov inc adc xchg jmp outsl fdivr cmp sbb roll data16 addr16 adc push mov mov mov fcompl xor nop add vmaxps fiaddl or popa mov testb pop or and (bad) xor bound jb jmp addb push shr repz popa xor mov pop or test or push jnp adc ret push lret jne push sbb and cmp cmpsl mov mov nop (bad) ret mov fnstenv (bad) cmpsb adc movsb divb fwait js or mov ret sbb adc data16 les fcoms cmpsl xor inc xor icebp ret fldenv mov sub mov add xchg fwait orl testl (bad) mov jmp add add rolb inc in cmp lret imul jmp push inc and pop jmp add add mov adc stos add cmp sbbb jle pop aaa xchg pop xor sbb test add and mov in je mov leave test adc jbe outsb xchg aad sbb lea stos jge test pop or inc add or mov add mov add scas jle or adc pusha loopne insb and nop xor add mov inc je incl mov mov out mov iret and loopne xchg sbb rolb sub pop ret dec repz (bad) std mov ffree lock mov pop jg add cmp hlt ret add repz pop dec loopne sub mov (bad) pusha clc imul aaa adc pop test jb test out jbe jbe cmpsb push adc push or ja loope xor and jl push jmp enter jl decl mov sub test and test fcoml jl pop push dec lds add adc shl inc or dec sbb or icebp rcr push cmp push test and imul add cmp push adc xchg push (bad) push pop test testb cmp sub jbe mov adc inc push ljmp xchg dec push (bad) sar sbb add dec lods cmp inc jecxz cmp mov ss add mov fdivl push pop ds adc cmp xchg jne loope pushf xor adc or fcompl das loope ja or inc (bad) jb in lcall xchg cmp daa dec sbb jno cltd jne cmp add xchg in pop dec push fidivr adc pop out push cmp pop mov (bad) ja pop adc call dec (bad) lods insl int3 cmpb add mov push sbb jg cmp xor add and sbb or sub xchg xlat out inc les andl mov mov and mov mov loop and mov rcl fbld iret repz pop popa add push xor push mov es mov mov jl lcall push js sub push test (bad) dec add mov xchg gs test pop pop aad sub mov jle test jo sbb shr mov ret mov sub sbb sbb (bad) mov jmp js outsb ret mov mov jmp lahf xor xchg call add popf xor jne add call mov sub out adc cmp jl nopl fwait data16 pop or call loop xor test loop call mov mov push ret inc sbb cmc ficomp push cmp test and add jb or aam mov rcl sar sub jns rorb pop loopne dec jnp (bad) mov in push ja inc rcl (bad) iret fwait pop bnd (bad) hlt arpl pop inc push das lods imul push xor in sbb mov sbb add imul push aaa or dec aaa jno push push lcall test add repz dec fsts call roll mov and fwait or add jge repz sub add adc inc jne sbb jae push popa adc pop inc cmp add push data16 xor push add sahf aaa sub pop setne xchg roll pop ljmp test xchg fiadd xor and incl cltd inc lods mov pop jmp call js lock mov sub lret cld mov xor test adc adc xchg push sbb pop popa (bad) arpl mov negb sbb stos sbb inc mov je or ficompl adc inc es push or enter jbe rcrb loopne add ljmp inc jns dec mov xchg xchg (bad) (bad) neg mov in cmpsb test pushf push push or push cltd jno mov dec (bad) mov movsl popa fwait jo outsb (bad) add or sbb mov dec push cmp push push dec mov aam mov outsb sub pop (bad) popa sub adc test aam mov pop dec add add jno adc (bad) xchg and insb jne aad les scas push adc or pop sbb xchg add pushf adc mov mov into data16 adc push lods or inc mov add pop or je adc pushf push mov push imul clc jae (bad) mov adc and mov pop pop add mov sub mov pop call ret cmc jae mov ret data16 rolb dec btr icebp inc je stc jae inc mov popa lret stc sub ja int xchg jo and add xor add mov cmpsb (bad) rclb repz lea call std fimull (bad) addr16 mov mov das pop cmp pusha mov jno and mov mov add mov (bad) xor and push and int3 movsl jge insb cmp fiaddl shr (bad) jp flds adc test out pop mov lret add dec jbe outsb sub add cmc or lret xor ja jge add mov jle pop jmpw jl clc push rolb push jp push mov pop (bad) xchg pop loopne cmp sub add mov add imul (bad) or loop jl,pn aaa lock fnstenv cmp dec in ss add aas nop mov push sarl pushf psllq neg sbb xor dec sbb xchg and adc jo xor or jge or xchg cmpsb popf push push add jmp xorl mov xchg sub cmc sub or push add push jno xchg sub in jb mov dec into cs and lock out xor mov lea movsl add jge loopne scas faddl call mov add mov and and lods sti test dec test dec jno or dec inc jle (bad) arpl cmp call lret push cwtl xchg ds cmpl sbb lcall out divb test jb js adc ficomp pushf (bad) jmp popa xchg adc cmp adc and call (bad) ret rorb ds sbb hlt push (bad) cmpsb jecxz sub add pusha mov (bad) adc add fucomp aaa lock cmp mov pushf sbb adc adc mov push (bad) mov push bound cld dec hlt ret test mov cmp cmp push es xor push call aaa fs insb adc ss cmp or cmp ja mov dec dec mov add cs cmp push xor xchg scas dec pushf inc outsb incb ficomp jnp ud2 ljmp das pop mov mov fxch jo sar sub ja lock adc call adc add insb sub jge push dec pusha mov sbb or add dec xor dec sbb jo push subl jo xor mov mov adc or jne or inc fidiv adc les cmpb lahf mov dec in and mov out push rclb (bad) std adc dec sbb aam dec or loopne sub sbb jno mov fdivl in in pop in add and inc inc pop orl je mov jnp sbb cmp hlt and mov in test push cmpl fs sub bound cmp movsb ss mov lcall movsb push divb push sub out jg cmpsl inc mov inc jle push pop (bad) and jo push lcall xchg scas push test mov adc mov xor dec mov and inc rolb inc pop and xlat mov jmp roll aad jns mov pop outsb and xchg lahf (bad) call xorb lea fcmovbe push push add fcmovnb ds adc scas call dec popa mov (bad) mov pusha pop testb mov sarb xorb or lock jecxz add jp push xor iret sub dec stos mov subb and mov sti (bad) aaa jno rol lds fcoms or loopne xor cld shrb push mov inc (bad) mov cmp sti inc addl (bad) xor enter sub and xchg call call daa jecxz sbb and pop adc dec packsswb add lret mov pop rcrb dec cwtl dec or jmp loopne dec inc mov sbb loopne rcpps jo or out decl mov enter sbb mov mov (bad) mov mov test lcall testl in call cmpsl ja mov push call pop add mov cld lock push mov and push fsubr xor idivl push jbe test jne data16 outsl mov pop add cld pop xor fisttpl ret data16 jmp hlt mov mov clc add mov adc stc sbb add and hlt push push and loopne lock dec push in popa xor fimul insb cmpsl add pop inc mov fdiv jl icebp call dec add scas xorl jb adcl jbe ja fs adc push mov jp shlb call repz sub and movsl arpl pop cmp idivb push inc jne stos and mov ret fdivp lret fucompp and sub add loope xchg sub out sub nop movsb jb test add inc jmp sbb insb imul mov roll xor push stos (bad) js fnstsw out jmp jmp push add or rcr or dec add dec in lahf sti xor mov loop xor mov std fcoml adc adc push add push add inc movsl fs add insb and mov mov pop push aas pushw xor or mov push jmp rclb cmp add outsb aaa outsb mov mov xchg imul push add das ss mov pop add dec popf push and (bad) outsl icebp ret or scas dec jg cmp xchg add push adc mov push lret adc jb bound mov or push ret inc jae add dec outsl scas pop mov lods xor loope mov xchg sarl sbb imul inc ret dec sbb cmp mov adc je inc call rcrb mov shlb dec sti sub push add push jmp mov mov call adc out or jl daa jl sbbl insb or jle sarb mov or add and lds call mov fist sub test or or sub add mov das mov sub xlat inc (bad) out or cs es in jl int std jle xlat mov push inc rolb push lret fldcw ljmp (bad) fwait dec test jmp int3 jg in fadds divb fsub push ret test adc sarb (bad) out sarb mov fisttpl addb pop jo pushf inc xchg mov xor add mov mov mov arpl (bad) push add mov adc (bad) sbb pusha mov jl mov adc xchg adc sub pushaw insb cmpb cmp dec sbb jbe cmpsb (bad) iret iret rolb mov sarl iret and (bad) in add insb ds mov inc xchg movsb imul adc das xor jnp dec imul jb addr16 push (bad) jl jb pop dec xor repnz insl (bad) rclb cmp les pop mov mov imul (bad) ror or dec scas mov mov pop rcrb push aaa test test jne and scas loopne nop push add xlat jl mov mov mov xchg out sahf inc mov test ss out inc push inc sbb clc or xchg sub jle loope cltd nop iret add inc adcl mov ds inc out ficom mov leave or pop mov int3 push popl jb dec aam push outsl ret les mov faddl xchg mov test lahf xchg dec sub push sbb sub int stc dec fdivs inc test nop out and lea cmp lock push (bad) rcrb or or outsl and and popl push test sbb shll outsl out int3 add sub pushf subl cmpsb jecxz loop jns repz jne flds push sahf pusha mov push jnp jl arpl daa repz lahf addr16 and call mov das pop in fs and call (bad) out push xor addr16 es int jns pushf cld or push fs ja cmp (bad) loop imul es sahf (bad) mov enter cwtl sbb and cltd mov outsl pop pop repnz push lahf loopne add pop (bad) repz aas fsubs movsb loopne sti data16 xchg add ss cmp loopne sub push mov xchg js cs out fadds and int3 ss jl cmp lahf mov outsb pop es les lock jbe clc push pop out pop mov imul sub jns add push and xchg xchg outsb inc add mov cmp cmp test test sbb xlat test mov popw repnz or (bad) int adcb push push push icebp cmc pop test mov mov lahf imul mov or cli xchg insb mov pop add in leave jae iret mov in jae mov scas orb fs test mov adc out adc or loopne fildll movsb (bad) mov aaa cld mov movsl adc out outsb sbb jl cmp mov fwait cmp hlt dec jae ds mov cmp lahf ja fiadd sti push inc mov insl mov inc inc cmp jl inc jecxz push imulb int and and (bad) outsb and int jge (bad) icebp insl push xor (bad) adc jge pop repz out fidivr sub popf xor sub adc mov mov es jns and data16 cmp and push subl ficomp xor loope xor lahf cmp sti jp in push ljmp pop stos cmp push ds cmp (bad) dec xor cmpsl mov xorl adc cmp pop push lock push pop sbb iret nop aaa xchg pop ret cmpsb push fild fs imul cmpsb out out jl aaa push cmpsl sub xor iret test in es enter test sub mov sub in decl jae fild mov push enter push xor in insb mov fnop cmp iret and sub lea movsb mov pushf test inc (bad) pushf mov xor mov test movl mov push jae scas sub mov lahf mov push xchg mov mov mov pusha or pop push adc scas push repnz xchg mov fdivs rclb into cmpsb nop movsb mov jns or sbb push shrb ret test (bad) lods insb ss dec mov mov push scas fsubs push or push or (bad) sub push mov loopne push and subb call mov popf cmc xlat cmpsb inc cmp icebp into outsl xchg cwtl pop clc xchg sahf enter xor add (bad) and add test and push mov ds mov mov cld add aaa pop inc jp lock mov or scas pusha lret insb jp nop dec add and lock cld cmc xchg mov push push sub and adc jno dec add rorb jae mov pop push cmp push faddl stc sub (bad) sub iret and dec nop sub sub pop es (bad) ljmp xor leave add aam mov (bad) cmpw lods int3 fldt mov lahf enter dec push pushf pop sbb mov outsl pop test inc sbb jmp pop rclb sub push cmp inc inc test bound ja jp aam call pop cltd test fptan test add imul or push mov mov mov xchg hlt or test sbb iret xor mov out and mov add and outsb add or sbb cld cli popf sar or or push or aad loope scas fiadd iret in test adc in xchg jae cmpl aas jne push and fcoml clc sbb add mov push mov add add jbe push pushw mov in in or push and mov jnp xor mov jle test or adc push adc xor mov call xchg xor or cmp inc loopne out jp dec push pop mov lock add cmp pop cmpsl and stos xor jno int3 xchg sub adc pop int3 and xchg add push jo cwtl mov sar (bad) popf popf jbe (bad) push cmp cmp sti mov dec lock cmp es cmp jg mov sbb and inc popa nop cmpl xor dec in fistp and lock fs mov mov stc jne mov mov test and or test pushf pusha stc loope (bad) pushl cwtl mov push cmp xchg jo cs or in cmp notb push push push lods or data16 sbb or mov pop inc push lcall xchg xchg and and xlat rcrb lcall test (bad) xchg popa addr16 loopne outsl mov sub push std or int test or mov ret and jge call mov jmp sbbb add fs xchg push in jp loopne mov sbb mov or or sti xchg aam ds mov inc (bad) mov adc mov inc stc sarb jne cmp dec cmp (bad) add fistp fsubp lock mov mov dec cmp add push ss add and shlb insb add and test rcrl and jne push rorb and xor add call lods fnsave ret fsubs jns clc cmpsl or cwtl repnz imul add add mov push cmp fiaddl adc xchg sbb das jp xor sbb mov outsb add aam adc cltd incl or mov xchg add add call je or in je pusha pop mov add sti (bad) imul daa in pushf lcall je jle int3 repz adc mov sbb and xchg or inc adc push pop imul sbb mov js es sbb addb test mov outsl es push scas add adc cld rorl sbb pusha and (bad) int test dec add push push pushf or pop ret loope js push mov loopne (bad) xor call push mov es adc adc jp push pop push rcll addr16 imul adc imul movsb sub leave cli xchg and mov pop and xchg je stos and es pop iret sbb movsl jno xor xchg dec or xor xorl push push test cmp cmp ss pop xor dec add lsl or shrl sbb icebp enter xchg jl aam ja cmp mov inc cltd cmp call push jb mov (bad) sub push movhps lea pop adc mov js jge cmpsl mov and scas imul push cmp add (bad) pusha adc mov mov (bad) jmp call cltd mov gs inc divb mov (bad) adc lods and movsb xorl in push jbe (bad) lds scas test call insl inc in or cmp test aad inc mov jmp cld pop dec push add inc push aas jnp rcr cmp mov pop outsl addr16 andl mov dec call sar test add push jne dec clc pop add cmpb imul lock test dec push sub mov xor pusha fs insb or inc xchg jnp add cmpsb pop rcrb sub push dec fcomi push mov enter nop call das sbb mov bound into ja push add dec add fstpl mov (bad) loope (bad) sub add call rorb xor mov or dec in inc call call pusha push fmull movsb inc add xchg mov xchg xor jae sub aam push pop inc rcr pop nop (bad) imul cmpsl sti xor xor push add in imul ds test in hlt imull (bad) push mov es ret fist roll push mov adc lock cmpsl xor pusha push js bound sbb xor test scas mov sub push nop outsl sub pusha test mov xchg (bad) (bad) cmp mov dec jne popa push sbb arpl stc dec jns and adcb dec ljmp adc je and imulb scas mov push pop pop mov out loop cmp mov push pop pop mov and push push or pushf ficompl pop (bad) pop mov push add movsb push push es lea mov cmp popf psrld js dec push mov pop sub fwait pop cmpb movsb mov repz mov lods movsb jle in in xor sbb pop add int jl sub rorl adc popf jo xor sbb push add dec jnp dec lock jmp mov test nop (bad) rolb mov adcl xor fisub pop push push jp gs or add and push fucompp xchg mov add push daa lcall push sbb pop mov cmpsl sbb xor or sbbl js cwtl pusha push mov fmuls aad in aas hlt sahf das mov xor add ret testl jb pop fwait inc nop xchg inc dec or dec mov sub jl adc cli add mov sub mov pop loop stos xchg hlt mov mov sub sub outsb (bad) adc cmp and and sbb sub xchg cwtl add nop sbb adcl jmp fnstsw push mov mov pop ficomp dec nop ja push push push xchg pop push pop sbb push push dec sahf in or scas loopne out and pop add jecxz jns repnz mov scas pop sub lock dec or shrb test push or ds mov pusha dec out push add call xchg add andb sub dec cmp adc test or xlat mov push cmp inc pushl jmp mov lods nop inc andl out jmp ljmp into and mov cmpsb icebp sbb mov dec push dec dec sbb ljmp ret lock xlat pop adc jg cmp xchg mov xchg (bad) pushl push pop test and leave daa jmp shr jmp inc jp ret fldl inc fdivl dec and inc test mov aam or and sub mov repnz add mov pop les xchg and (bad) add jo or shl cs or push sti and data16 fistp push adc add dec loopne cmp pop int3 pop xchg pop dec adc aaa push loope insl mov jle aam stos add mov fwait push or push mov and lods outsl jmp or je sub add mov stos xchg dec add (bad) pop call scas gs aad aas or push and add jno popa out (bad) lods sbb push push cli push test lret mov addl mov fnstcw out push jo incl (bad) std or or in mov and dec and jl call sub int3 fwait das subl push push cltd stos jbe in xor ljmp adc adc ljmp xor lea jge pushf add jo push xor sub add add add xor imul jl push popa pusha mov nop pop data16 or and movsl mov rorb addb adc fwait lret pushf pop insb pop movl cltd pop rol addr16 movsb pop xor mov dec scas iret dec push push jl mov mov adc or adc xchg out cmp sbb movsb xchg out push sbb and mov aam pop add ret push inc arpl push mov lods leave cli gs aaa xor pushaw imul sarl inc adc sub daa dec repnz imul movsl mov sarl add (bad) sub sub mov mov sbb xor mov cmp mov addb pop clc out push aaa shll sbb sbb inc inc (bad) jo cmp repnz movsb pop stos movsb daa dec dec test call xor jg dec cld push mov add imul data16 fwait dec pop sti mov in rorl (bad) out inc call fadd ret das js sub mov xchg mov mov sbbl or pop mov dec ja jg or ja cmpsl (bad) jb pop adcb jno add mov ficoml xchg adc in push adcl popf test add sub shrb xor adc add adc fs dec cmp or and stos push adc mov adc popf aaa dec inc mov movl push and jae adc cmp sbbb dec cmp arpl (bad) cmpsb push jmp push sahf add pop dec pop dec xchg insl push arpl adc movsb loope jns loop sbb jmp pop xchg push or movl inc ss add movsb push jle adc icebp sub les out add mov jns ret fstpl int3 jmp popf add data16 push add outsb jno mov add sbb inc clc push push call push pushf xor sub jb cmpsl dec xor test insl stc sahf mov fcomp idivl dec es neg and mov mov inc mov and in and loopne call sbb xchg add movsl pop push cmpsl or xchg ljmp fsubs scas out cmp call (bad) repnz and enter testb inc pop push mov imul out xor inc or cmpsb pop sbb fisubrl cmp inc inc dec dec iret add addb ljmp mov mov adc sarl dec enter mov pop clc dec roll sbb dec loopne add pop ja jbe popf shr outsl pop push pop and cwtl out cwtl push sub cmpsl add push mov mov lea push push pop push add or lock mov sbb cmp fst (bad) xchg movsb inc or test inc add int add (bad) in movsl sub lahf xor and add ficomp pop push mov (bad) jae xor ret xor push and imulb hlt pop xchg icebp mov dec mov mov or (bad) jne pop fdivs cmpsb fsubl stos push (bad) jne dec cmp sbb add daa pop cmp adc mov into fcomps and mulb or and or push xor ficompl sbb xchg mov (bad) arpl ret add lods mov adc add lock mov pop inc add jle cmpsb mov pop xchg rorl das xor clc repz sbb jnp push lea imul aam mov insb stos pop and adc sbb lret fstpl mov or mov or sbb mov nop call push push addl xor push out xor xchg bound (bad) sbb pop dec adc sub js push aas add pop jbe cmp aaa mov call lods js fs inc jge jle xor pusha push push popa gs push es arpl test rorb push js add xchg dec dec (bad) and add xor push test sub mov (bad) xor mov or push popf into subb ds mov and xchg cmpsl jle mov push or mov mov shrb xchg dec fimull jae sahf xchg aam push cmp sub jae mov cmp or mov sbb inc movb dec dec add cli ljmp push mov call jmp cmp sub mov add repnz and and loopne inc mov (bad) dec hlt fwait pushf gs scas dec es loope sbb fidivrl sbb cs dec xor xor jne sub jns push addr16 sbb mov scas insb inc fs push dec dec xor repz mov in repnz dec mov pusha clc iret push repnz lods cmp push rcrb push add jg sbb test mov dec fadd ljmp push (bad) mov scas push mov mov push mov iret jl enter leave repz cld scas sarb mov mov dec xorl or push push dec dec repz push push ret mov shll sbb ds test subb or sbbl in daa or enter or dec dec cmp clc adc pop test adc std adc rcrb add leave cmpsb in cmp insb and aaa add cmp fcmovne sbb sub adc add or mov push ret outsl mov sbb aam adc push ljmp pusha dec push fidivl push pop pop xchg pop xchg adc sub xchg lods add xchg xor sub out roll mov mov inc (bad) stos nop scas push imul cli ja pop cmpsb imul jae es push jp test push inc push sub outsb (bad) cmp fidivr inc (bad) push gs outsl shr xorl dec ja dec push (bad) outsl decl inc cmp xchg sub mov push fimull mov ljmp outsb xor sbb add hlt mov loopne or adc adcl inc div sub cmp jp aad push and aam fmuls data16 je push push clc pop enter push push push jno cli daa xor push sbbl mov adc inc xor movsl scas cld mov shr lcall js ds call adc push cmp sbb popa popl mov sbb xchg or sub pop inc cmp xor cmp sub jmp mov lret nop ret ret call idiv sbb mov adc add int add mov inc (bad) add sbb inc icebp mov mov pop dec or push ret stos sarb insl mov add add sub mov mov js sub xchg mov fimull pop js add pop pop pop mov dec and mov lea lock cs pop ret test inc arpl pop (bad) mov pop mov add fnstenv add adc mov pop add cmp cmpsl pusha les jbe and lock outsl mov sub call iret jno (bad) push fistp out mov mov push pusha xchg pusha daa push hlt imul add or jmp hlt pop jmp push pusha loope insb add pop cli imul stos test mov push jmp inc jp xchg push sub inc inc xor sbb std sub fldenv in sbb adc jae or and xor push ss sbb mov sahf sbb xchg negl mov xor sub in dec add (bad) lahf sbb jmp lea or call into out mov push jno push cmp mov or xor out cmp and popa xchg mov ret jbe dec jl movsl cs aas out cmp or adcl fucomi add pop push and lea pop icebp ficoml xchg dec pop and pop testl xchg jle push dec lea push (bad) lock dec add xorl test call inc insb stos or ljmp jnp mov xchg sti cmp fldcw pop leave add icebp pop push push mov paddd std cmp and add adc pop out int fsubrl jmp pop jns and insb cmp jecxz push (bad) add test cli add sbb loop mov fwait mov daa sbb popa push jl adc js push sbb shrb mov lock jnp lds out pop push jmp jbe cmp (bad) xor push daa inc loope mov mov jo or test adc push les adc adc push je xchg ret or mov ret push mov mov xchg xchg fwait push jo cmp pop jge,pt roll aas or jne loop out loope ret add xor push popa js clc add mov es and (bad) mov hlt sub pop dec in sti (bad) sub adc outsl cmpsb mov cmp mov sbb outsb arpl mov cmp add movsb mov inc dec scas and fisttpll movsb scas and jae jo cltd lret xchg loopne bound push mov sub dec iret mov or dec test loopne push mov or in icebp pusha inc clc movsb adc push negl push xor push mov mov pop dec push loopne and inc lds jge dec test enter inc fucomp pushf add insl and jne push fcoms es xor test (bad) pop popa or dec rolb mov or cmpl ss cmc dec or fstps mov cwtl fs out call push inc js cmp sub xor xchg test mov out xchg test lea add and rcrb lods lret in fisttpll test mov pop cs mov or mov push sarb out dec fs imul inc int3 sti daa add bound dec or mov or inc and mov or inc add test js xor mov popl inc sub call sbb add xchg jecxz ret imul mov outsl rcl adc pop insl es (bad) push scas fwait pusha call fst out xlat push xor jmp mov inc into xchg iret insb mov test in push pop add popa insb popa stos popa sbb jbe in mov pop push rolb fadd inc mov fadds sub and es jo je sbb test cwtl adc pop in ljmp mov ss add fild repz insb iret addb jne popa pop insl rorb push je sbb mov ljmp lahf adc and test (bad) (bad) call (bad) push mov and sahf ret pop mov mov add and xchg js jmp insl pushl les jmp ret mov pop ret push add push rorb add adc pop push cwtl rcrl or fisttpl adc jbe push cmpsl sbb pop mov cmp adc cmp iret mov or aad ret rolb rorl mov push push and loope dec and inc or cltd mov add call (bad) test adc jns inc dec adc or sbb mov mov pop jo fmull and push or push aas lcall mov repz andb out or or inc repz adc push mov sbb call mulb mov sahf jecxz cld or stos mov ljmp xchg add addl les push call mov add inc rcr dec js push loop push and ja push rolb dec test rolb insb arpl mov in incl and xor pusha push sub pop cwtl mov push add addr16 lods inc outsl pop cwtl loopne je xchg cld je cs cwtl daa xchg pop in je aam pop inc xchg fnstcw ss fdivs repz dec movsb test add enter sbb hlt xchg and add mov (bad) sub inc insb insb (bad) and es pusha ror in sub add adc cmpsb cmp movhlps jl sbb mov dec push test insb pop add mov adc inc mov cmp jle fcoms sbb xorl inc loop mov std adc cld sahf je inc mov sbb push loope adc inc jl pop jae clc dec add sbbb inc jmp xchg push or jecxz mov sbb or inc int mov or cmp mov lock fcomp (bad) cmc into push and in mull hlt xchg sub aaa jg data16 xchg (bad) daa sahf dec push xchg mov cmp add in add pop or (bad) pusha add add pop repnz or cwtl push orb decl cwtl in jl ret loopne into and xchg dec cmp dec popa or adc push push jl xor sbb pop pop (bad) cwtl sbb (bad) or push pop mov mov mov popa frstor push insb insl scas push or push out js mov lahf call js (bad) xor xchg push push add and dec xor icebp mov (bad) adc push push aaa jns inc test jge add adc enter and pusha sar je bound jae push sahf xorb add notb test jb push push rorb dec push loope faddl or popa mov inc push bound sub lret lret cmc dec dec fyl2x sub mov les insb xchg xor sub mov (bad) sub fiadd add dec hlt clc adc pushf jp sub cmpl inc push add jecxz clc sti and ror xor and pushf jmp cmp pop pop sbb dec and les xchg fldcw in xor sub dec rcrb adc in xor jmp iret and inc cmp popf out adc es xor mov jns mov lock loopne fnstcw movb or dec sub adc out push xchg into lcall push adc jmp lret sti lods push call es pop sub mov inc mov adc out sbb movsb xchg jo call xchg fldt jne adc sub add add sbb call cmp xchg or in mov mov (bad) in dec pushf lock adc repz test jp sarl and mov (bad) dec imul movsb mov or or sbb fs dec js cs imul inc and or xor loope mov pop pop sub test cmp aaa es (bad) and push dec add push fsubrl xorl lahf pusha add call lahf sub xchg push jecxz adc mov mov sub mov lock cmpsb push or arpl xchg push dec pop mov mov outsl es aam and mov and dec and data16 out fs pop cwtl cmp or dec adcb cmp sbb or or outsl and pop xor fsubrs dec add fs inc dec nop out xor je insb arpl mov insb mov add inc (bad) call pop xchg les pushf jg adc les cmp push lods test cmp mov xchg notb pop aam ss pop pop adcb pop xchg add ret mov mov movb push out mov inc push adcb inc movsb jge xor adc in cmp les repnz cs lds dec (bad) shll mov test sti add dec adc push mov xchg cmp (bad) jo mov jecxz daa adc jbe jbe inc or pop add frstor push adc fisubr and inc imul data16 fnstsw inc icebp call dec xchg mov sbb sub call es xor clc dec mov test icebp add mov mov add adc mov mov pop jmp sub imul add into dec stos lea jo cmp add mov inc in (bad) int add enter mov jns adc xor mov mov stos add pop inc test xchg add jo cmpsl jns dec sub dec xor rcr pushw cmp call sub inc dec aam pop insl add sub xchg jae jno sbb xchg mov add fwait xor dec daa push pusha jmp add xlat ds movsb mov add add stc addr16 or jbe inc jne mov and inc daa jbe test add jl mov add adc push dec xor incl aaa mov cmp lock lret cmpsl test and add sbb or cmp and jge clc inc inc mov jbe sbb jne push sub das rcr push stos pop jnp and mov add in stos adc fs sbb inc dec mov rcl (bad) jmp ret add cmp jbe es movsl or insb and dec (bad) mov int3 stos inc fidiv cs add dec dec sbb add aaa push orb xchg jae js mov movb sub add push shlb insl xor inc and xchg push loopne dec push push out inc and iret fidiv cmp push add rorl xchg and or add mov sbb cmc pop call mov inc leave repnz add scas fsub call push pop daa jo inc pop xchg or adc push sub and shrb push mov out outsb push add pop test repz pop cmovge jbe cmp push test pop inc cwtl xchg sbb pop push fwait push clc mov je outsl lret or inc mov sub clc jo lock cmp push push push adc jge adc xchg insl shrb add sub adcb sbb neg or fild xor mov sarb (bad) (bad) negb ficompl xor cmp adc cmp scas cmp adc inc ss pop jno or lock (bad) std add (bad) idivb rolb lods cmp outsb or xchg jg dec sub pop sub cmp stc push scas xor insl mov rolb inc push lods and int3 lods push jo lret pop cli in xchg mov inc or les vpsraw (bad) lds out (bad) jmp into push call mov std addps rcrb enter sub sub popa lcall adc mov (bad) xor into jl daa inc sbb repnz lret push out lock insl jmp mov clc xchg mov mov addr16 push xor iret and pop ret jmp (bad) push push fwait pop fcomps inc jge cmp cmpsb cmp fsubrl push sbb push bts mov popa test add jg dec and and and add inc insb js mov mov or fwait movb js pop test and loop imul lods in rcr pushf add pop ljmp xor cmpsl fstpl sbb ret mov dec in in push add sbb repz out ret test int3 rorb push mov pushf inc into ja in test sub je cwtl sbb mov add push xor inc shrb shll jae test ret lock das nop nop mov sahf push fsubl and and daa mov adc hlt andb dec pop xchg js pop les or ret (bad) cwtl lock pop imul sbb js dec and cmpsb (bad) xlat cmp dec ja adc jno mov je cmp mov pusha xor xchg sbb call sub test test add sub lcall adc addr16 push pop pushf pop and je icebp mulb inc jne test decl cmpl lea push jno mov ds cmp xor pushf xor jge cltd (bad) adc add or and insl loopne sti fadds (bad) mov push addl clc pop jae and sbb sar sar mov aad fs int3 add and cs (bad) sub lock and mov loopne stc pushl xor cmp sub add cmp popf pusha xor es fisubl cltd pop (bad) movsl push sub jae push sahf pop pop mov add dec rol mov push or jl jne mov inc inc outsb adc clc mov sbb sub or ljmp into adc js inc cs xchg push sarb xlat lea cs loope or fs pop add popa add adc pushf pop cmc xchg rol fildl inc mov dec sub push jmp insb add mov in out in enter int3 call rclb lods lods pusha inc pusha jmp or sbb xchg repz outsl or push lods sar or cltd push adc add into (bad) fnsave push (bad) sub pop adc mov cmp pusha and mov dec and fnop inc xchg sahf or pusha or or jmp ret cmpsb add adc push ljmp lods adcl hlt cld and dec mov loop xchg popf lret aam loope test jle fcompl rolb mov arpl mov je mov (bad) or mov or jno inc sbb lods jge out mov inc pusha arpl mov push or jmp mov test pop add or les or push or or push mov push call ds and jle pmulhuw clc xlat icebp jns imul sub adc shl pop mov jp and mov pop ret inc and mov inc lahf (bad) sbb or cmp sbb pop and pushf and mov jmp mov push jne or cmp and inc ret lock in popf mov lret andl je popf data16 fs mov call pop pop push xor lret fsubs out jb rdmsr xor hlt fmuls push in cs mov faddl sbb out lret (bad) movsl mov test inc push les in out pop bnd jp inc cmp or xchg pop (bad) push add cli jne inc je dec and pop pop mov inc push mov pop mov push fsubr inc lods je push pushf fcoml repz mov add jmp push add lret mov inc in cmp and sub scas adc push pusha lods inc sarb or fidivr sbb js mov or int3 add fcoms adc adc xchg or into xchg push ja dec add dec out xchg orl inc loop and dec adc dec je jmp dec (bad) push je mov inc test inc or dec es xor aam xor je sub push shlb arpl push sbb jnp cmp je xor aaa lock ret ror call push fwait push lret or push adc or sti mov pop (bad) ficoml sub inc aam sub mov cmp (bad) inc xchg loopne xor dec and pop (bad) shrb and push shlb pop mov mov fdivrl in add dec push cmp jne dec pop mov or push push add mov call mov fimul bound (bad) negb inc adc push jno push xor push adc and mov dec or push cmp mov rcr push test push adc lret cmp rolb xchg push ljmp pop iret or (bad) xor imul push scas test and shlb pop mov xor inc push jbe mov jge popa fcmovbe jnp jg test aad push pop inc pop or pushl or fsubl add dec push xchg xor jl and and and jne sub add ljmp movsl cmp adc pusha lock stos call imul fildl cmpsl add leave es into and push (bad) inc push pop subb and ja mov testl imul adc push (bad) aaa cmp clc adc jmp adcb fisubl js in jno push dec xlat mov test outsl dec dec inc and or mov outsl dec pop lock test jbe mov push int shr mov or add add ret add js push xchg rclb and mov popf je push orl mov xchg and xchg mov aam fisubr or pop rolb xor in popw outsb push mov les or push dec or imul add or lret mov call stc lods jl (bad) push enter repnz out data16 test pop xchg cmp jo dec (bad) addl inc dec test rcrb aas add call mov sbb or rorl ret fcom das sub int and fiadd mov add insb rclb add sub rcr data16 jo push or out xchg je rcll inc rcrb pop cmp mov dec stos push (bad) js js dec dec jl push pusha pop aam inc sahf sub pop pop mov pop hlt and movb and call frstor aas xchg and repnz and push inc sahf popl int3 nop shrb ret sbb xchg fildl in ja add or adc or mov rcrb mov rorl add mov notl ds dec and sahf rcll stos test les or cmp mov pushf jp iret xor push or cld mov sbb inc push jbe add data16 push (bad) adc fisttpll shll push sahf ficompl sbb jo jb aas sbb add push add and pop push push js imul push ds incb lcall in test (bad) sub or fcoms mov loope mov xor loope mull xor rol or cmp adc adc std mov (bad) or in js jle je inc xchg jae jmp popa xchg aam hlt push adc and pushf xchg mov fs mov out push pop push mov arpl sub jb dec push out rolb loop mov inc sbb lret xchg sub movsb xorps dec hlt jo push adc cmp push mov andb dec mov inc cmp sbb jne pop dec hlt push jne call xor xchg outsl mov add push test jne dec pushf xor push adc and jne jo xchg imul xor sub out sub sub popa and mov mov jne call pop (bad) xchg rol lret mov sahf xor mov mov and call xchg sbb or sub aam and push (bad) mov out pop addb clc dec sbb mov adc dec insb inc (bad) int jo push sub and imul insl outsb loop cmp cltd clc inc (bad) inc push mov inc or add out nop dec adc jo inc andl add push loopne dec lea fcomps xchg les jecxz inc lods inc pop push pop mov dec or sub xor sub cwtl in mov test push jecxz and mov jecxz jmp mov mov je jmp add adc dec adc and cmp push rcr sbb xor pop adc xchg jbe mov pop sub cli xor movsb (bad) and fcomp and rclb add stc add or push xlat inc ds (bad) or sarb cld ror test out add adc add into dec je inc jl in dec cmc int les and mov and movsb sub cmp stc popa or inc pop lods lods sub fs dec pop (bad) xor clc push shl mov push fisttpl (bad) mov clc movsl or mov int3 andl sbb adc aas icebp jl call mov mov or adc dec adc out pop adc addl and lock and mov std clc and data16 push and push add mov loop js mov dec jge pop lret mov cmp xchg in je dec dec or add pop loope test adc mov dec ret lods sub lods call mov and (bad) jge inc jnp sarl pop push ss (bad) add and aad pop mov jmp rolb push adc xchg mov mov popf and or jnp cmc imul cmp aaa je xchg sahf cltd clc xor cmp mov out pushw lock fcoml fst cltd imull ljmp lret push cld daa push neg sbb inc sbb call test fcomps or push sbb xor ret add stc xchg jne mov sbb (bad) push mov push cmp add cmp (bad) loope cmp mov or and mov int jl js daa jl sub ret fwait mov mov adc dec sarl clc push js push push neg jmp push fmull cmpsb push int3 call ss and mov add or dec shrb fldcw and pop cmpsl add nop rorb adc xchg ljmp lock xchg adc sbb (bad) push or (bad) cmp fwait loope aaa shlb test sbb lcall and sub fistp dec ret and je push pop pop xor mov daa push call in mov xchg repz (bad) and pop (bad) imul shr mov pop sbb mov jmp rclb push adc push push push jo aas pop aam sub sbb jge and mov mov add lret das jl das push (bad) fs mov mov cmp nop call pushf inc jo jg push ret out jmp push xchg movsl mov push fimull and lock push cmp sbb xchg iret inc decl cwtl ljmp adc push jl push xlat adc pop fs xor dec jb push pop dec mov es jmp loopne mov dec call leave xchg pop mov jo (bad) cmp add xchg pop push cmpsl jbe call push ds mov lock repnz (bad) int3 add inc sub cmp fsubrs xchg shlb fsubrs ret adc mov lret jp jne cmpsb in dec lods movsb int3 mov or add adc pop movsl mov inc adc adc xor or add jl or lret hlt cmp je cmp jne adc test mov les adc stos aam jle mov pushf adc push fcoms and mov sub or movd loopne mov mov push pushf bound or (bad) lret or push fisttp and add mov push into mov movsb adc or out js imul mov dec daa mov push out inc ret push gs cmc add ds cld pushf adc imul push clc sbb ret inc sub (bad) pop and mov jbe fisubrl loope fbld adc ss adc add pop jne jno bound sbb je cmp pop push push imulb or xchg mov mov jae lahf mov mov lret push jno pop add mov push dec fisttp cli pop cvtdq2ps test lcall js inc outsb inc fs cmp add xor pop inc inc sbb inc adc or sbb cld jge,pn sub repnz ret rcll mov push jmp jmp ret (bad) scas sub mov jl loopne inc or pop sarb xor nop js push inc (bad) push jmp xchg adc pop dec dec scas add addr16 imul cmp pushf adc sbb shll and (bad) mov movsl (bad) add pop xor xchg sti das fsts cmp add imul sub movsl repnz or jae out cmpsb adc rcll call test xchg cs and pushf aam add test movsb (bad) test sub js xchg addr16 mov mov xor std cmpsl lods test pop sbb inc mov cmp pop pop mov push inc push inc adc std leave and mov rclb cs test das lock xor call jb,pn push push or in jo int pop or out std test jg js js xchg call mov loopne sbb sub cmp jg mov sbb aam push fcomps fcompl mov pusha sbb push dec mov insl insl pop ficompl sub hlt fcmovne les scas out cs call xchg mov adc mov cld ds push lods cwtl or push xchg out in rcrl mov fild jo dec test jecxz inc bswap mov mov adc int3 scas cmp push or cmpsb lea in and enter adc jno popa orl adc es rcrb test shlb ret aaa lret fs pop xor ret push ret lcall lret sbb jo add inc adc and and das mov (bad) test (bad) mov (bad) popf jno (bad) in push test xchg mov dec pop mov add xchg addl test rclb (bad) and imul mov aaa mov xchg xor or jmp cmp out mov mov aas cmp inc or std adc popf xchg inc cmpl adc call (bad) or imul jmp bound js fsubs cld dec dec fs mov cmp or push push call hlt or xor data16 jmp icebp jmp inc addr16 pop inc sbb iret pop sbb hlt inc jo (bad) adc jle mov sbbl pop or call es cmpsb hlt push nop jge cmp je jl js mov sbb or xor lea imul sub push lcall push inc and pop imul in inc push dec xor mov push adc pusha push and and jg mov mov xor test pop movsb jo add or sbbl push mov jl pop sub dec mov test or cmp aad fs pop gs mov roll pusha ret nop out push pop pop jnp movl cltd divl add mov fisubrl jmp test std dec addr16 xor dec not faddl cmp sub push sub inc js jge hlt pop je add jl testb jne test std jns cli pop sub push adc push hlt add dec mov and xor xchg pusha push cmp push push cld gs jle jle push inc add inc cld lea xor or add ret adc cmp push jl pushw and add inc addl btc jmp cltd sub and jl dec pop xchg push les rol pop int or lods insl or push push jbe pop push sbb test add jne orb in sub xor or dec daa or inc inc nop loopne mov lock jg decl (bad) negl aaa cmp add jo pop or cld (bad) jne add xchg sbb adc or lock jb (bad) icebp dec or fs lods and xor add ljmp lods addl mov sub es sbb stos pop data16 lock xor mov mov call cmc inc pop lock mov push ss loopne mov imul in pop fs mov shlb mov or mov out add out pop rcrl enter or inc hlt jne (bad) push or repnz mov fs or loope or adc pusha cmpsl and jo or scas es pushf add rorb (bad) jne adc add addr16 add or loop arpl loopne inc jmp call das push jb mov stc mov add cld jae mov das jl xchg es fidivrl or sqrtps repz pusha bound mov movl aad shlb push test je cld xchg insl mov inc push add jno fsubs addr16 das mov push mov bound ss pusha add xchg insb jae out ret mov jl sub insl mov nop lret int3 insb inc adc div jo add ret sbb cmp add call cmpsl test jo sarb cmp fidivl cwtl xchg push xor xor adc xchg test jno ljmp push es (bad) std push les xor cld xchg xor cmp (bad) lret into and dec pop jmp lahf (bad) xor mov (bad) inc inc pop ret lods push pop clc and sarl cmp xlat mov stc fsts test andl dec in mov and or test mov xlat es inc test pusha ljmp out stos fsubrp cmp push jo adc push xchg lahf loopne outsb dec jo jge add adc je fmuls dec dec nop call mov lea clc push and xor pop int mov sbb adc js (bad) mov xor ja push inc pop sbb or je sar push nop andl cmp iret fsubrl gs xor les lret imul xchg add lock (bad) shr movsb popa jle dec cmc add jmp and or (bad) jne,pn nop mov ss lock mov sbb cmc and call and xor push sbb imul pop push dec inc loope (bad) xchg pop mov test int3 jmp xor pop pop add pushf mov xchg call xchg test mov push xchg and sbb adc xchg je inc or sub push fdivrs dec out clc jge call std es add rcrl shrl lds or enter or ds repz call ss jl jg xor cwtl js dec call cmp pop popa (bad) imul cmp jp je subl or mov addb fldl es mov clc (bad) lock pop add adc in jae xor cltd pop stc addr16 cmp into inc jb pop push pop mov pop cmp jmp push out jmp add cltd pop idiv or mov adc dec orb mov or rcl lcall (bad) adc push je add dec in out pushf xor andl and xor or lds push push push sub lds ds das add pop les in inc mov push (bad) punpckhwd mov fucomip dec adc inc cmp adc loope or seto mov stos adc add push dec mov or mov in (bad) dec push out int pusha test ja or cmc arpl push notl or or or rolb or je in pop inc jae pop mov push fisub mov mov mov adc out mov cmpsb loopne sub and or aam pop int adc dec aas pop fstps push insb imul or mov cmp ss out mov movsb gs fwait and movl add dec push add push xchg mov sbb push lret xchg test in loope fiaddl scas mov cmp (bad) adc sub leave and adc aad js popa and mov in lcall push pop ja outsb adcl xchg ret adc cmpsl add sbb rclb inc pusha xor es or or clc dec arpl aad sub enter pop or bound loope pop popa or arpl je lret sbb loop mov mov jo pop dec adc dec incl (bad) fcmovb test xor das xchg pushf push dec rcrl push mov pop lods add sarb shll addb fcoms add ret je lods test or adc pusha jae dec mov scas push jne cmc or add cltd insb into dec add sbb inc in (bad) lods (bad) dec push testb and dec push adc subb dec loopne add call cmpsl shrl and es fisttp sbb xor roll clc add push out or imul (bad) or inc pop test ror fdivrl or mov icebp sub add mov add push (bad) je or adc dec pop je mov repnz cmpsb push hlt repnz imul mov sbb sub push sub xor adc ja or jo jbe sti movsl push fs or mov clc push pop rcll inc mov sbb js add jmp js mov jo stos and insl dec push fs imul push jnp adc pop or je inc inc xchg clc adc inc inc rclb inc sub xor ror (bad) cmp bound pusha sbb aaa (bad) add mov dec loope dec adc arpl jo dec or inc imul mov dec sub ljmp push push jno es aas adc imul push out add testl mov sahf in inc faddl jl adc repnz je insb dec add mov test icebp push or sub sub mov or scas inc pop add nop aam and test subl je loope insl inc adc mov clc adc cmp idivb add adc in adc xor shl lods inc push jo sbb icebp nop inc lea add js rorb adc lea push adc sbb pop lea (bad) in sbb mov lea mov mov cmp fbld mov loope push or push or enter popa push jl add es hlt aad and aad int3 nop pop mov les xchg jmp popa adc dec div fwait sbb int3 inc inc xor insl roll xchg lods push sbb call cmp arpl repnz mov out cmc sub mov out lahf add mov jle mov outsb js pop (bad) mov xchg cld pop sub push repnz sbb push and hlt stos pop and orb mov jl pop jns push or dec (bad) and pop adc call in dec dec pop add sub pop mov jb push lds jg push lea call sahf push loopne inc or mov and jb and dec jns add xchg mov push pop aas mov sub ss pop nopl ja adc jae mov adc jne addb not pop sbb push push jp aam (bad) jmp jae dec imul call dec fmull lret jae push enter cmp add jle mov pop dec adc or add outsb push bound xorb es or inc push push sbb negl stos jle xor sub push or push shrb fsubrl jbe mov pop in daa es add dec or je and pop bound (bad) decl pop jecxz push adcl cmp aad (bad) popa jmp and mov rcll aaa loope push bnd inc negl xchg add nop push inc lods adc sti daa push je cmp adc or lods pop (bad) cmp jb jns enter or pop les (bad) jge or imull mov add xor insl popa mov jge lea or andl mov (bad) sahf cmpsl or xor cmp dec push push cmp data16 aam (bad) mov ret (bad) enter mov lret into push add int clc enter dec sub and pop mov pop in outsl dec and stc xor xchg cmpsl and jmp mov sub rcrb popa adc xchg pop rclb ljmp jne mov jb call call test lods jg mov push push das sbb mov fimul (bad) adc js test sbb cmp cs movl mov jle and or inc stos adc jae inc imul cwtl js pusha fdivrs out add aas jmp mov push andl push (bad) mov pop mov or add sub rcrl adc aad test sub mov xor movb iret push (bad) mov pop or jns mov jecxz xchg inc arpl mov imul dec ss add stos lock ret orb jecxz push cmc mov into push fmul mov xchg xchg lea mov add lock sub ret sbb add sbb push jp or shl cmp pusha outsl rcr inc cmp pop and jno daa jmp push pop test loope je xor lcall cmp stc cmp add rclb cltd mov cmp adc loop jp xchg pop imul jo nop aam xchg inc or (bad) xor cmp out push ja lea je jg pop inc orl mov pop pushf dec cmp jl icebp in sub push outsb aad lock pop or cmp mov or idiv xor or sbb cld sbb sbb adc dec mov jl cmp inc ljmp rorb sub sbb inc pop hlt jg insb mov jae mov sbb mov sahf push aaa push (bad) mov xchg aas aaa push cmp mov (bad) popa cmp subb adc inc add aam xorl inc push es sub in rorb jge nop add adc and inc add repz rcl or push push push xor push int cmc add add adc push call cs pop mov pop pop jl mov dec repz mov pop or ret add or (bad) in incb and icebp pop inc inc xchg pop push add mov (bad) cwtl mov add rcl lea xor in and gs cmpl xor pop ja xchg xor call icebp add cmp xchg pop in mov fcomps and out das (bad) dec pusha andl xchg lea push mov ljmp mov mov xchg movsl call pop push and movsl adc nop add add das leave pop jge jmp add cmp outsl js (bad) inc pop cmp cmp jg push test or clc sub jo push xchg push jmp xchg call pop pop imul jmp scas xor cmp push mov xor ljmp pop push sbb jne jge or pop incl lcall adc sbb cmpl inc das orl xchg mov lcall add jmp mov xchg or scas data16 (bad) leave xchg je add ss pop shlb loopne dec adc jne add lret (bad) push sti out cmp and ret push call cwtl pop push mov jl fwait adc jno push inc sub xchg jle loope and xor adc dec repnz outsl stc fldt jl add mov dec push push cmp fmull js and jb gs in (bad) jmp fwait (bad) or jl xchg (bad) pusha (bad) ja or scas icebp sub popf mov mov push jle jnp sarb sbb mov lock push mov int3 xchg sub push shlb (bad) jne push and add mov in jo (bad) mov lods lock inc and mov pop cwtl sbb icebp pusha jmpw insb popf or test mov nop xor rcrb into (bad) ds jb cwtl cmc mov test dec gs cmpsb aaa xchg mov call sub add inc repnz ja test lcall dec pop push nop fcmovbe adc cltd mov jne pop orl addl cmc cmp push add xchg or inc mov jge (bad) fisubrl ret test adc (bad) mov js ret sbb jnp addr16 push dec jns das lods pop adc sbb add add in pop rcrb or xchg cmp lea jle xor call or dec adc insb outsb lds push lods mov sbb inc cmpsl insl mov pop hlt or mov xchg and jbe clc adc jbe lea push fnstcw xor sbb je push into adc dec and aam adc (bad) dec pop add sub sbb test fisubr xor aam xlat add inc insb mov mov pop xchg pop inc inc mov cmpsb and inc mov jecxz xor mov inc ret dec fdivp or loopne cmc adc add push loopne les in pop inc xchg insb pop pop mov pavgb (bad) push xor add inc sub ljmp and inc lea pop mov sbb sar jnp cmp adc (bad) sbb push or dec mov je push push push clc jbe push mov gs jge fs jp xchg add arpl mov or push stc cmpsl push fs cli sub hlt test mov dec int3 addb mov pusha ss cmp push cmpsl scas pop js arpl push mov push mov adc and xor mov outsl loopne sti lcall in fmull add inc lods insl jb orl push xor mov (bad) jo repnz jo push push mov pusha jle pop jne clc mov xor mov cmpsl pop sub push mov test pop lea lret inc test jmp cmpsb xor stc and mov jmp mov shlb xchg sub pushf (bad) and add jne xor inc push pop mov push lea mov and insb insb mov fwait lock rol and addb jo clc out insb jecxz pop and cmp fsubrp mov push xchg or lea je mov fistpl mov pop loop les rcll or pop mov les aaa sarb pop jmp inc cwtl jae orl lock cmp mov add scas je dec insb mov add push stc push push add jnp cmp xchg pop xor mov dec dec sarb popa add imul mov or test sbb mov out add popa jnp xchg arpl mov mov dec jge in add adc rcll inc daa loope cwtl adc cwtl jbe rclb pop xchg arpl and push mov dec xor and dec test (bad) cmpl adc repz jle jmp test cmpsb test mov movsb add fldenv dec mov adc andl hlt movb jge adc mov cmp push loop add push mov mov jno sahf fnsave out repnz je (bad) shlb push and rcrb push mov mov and mov push leave add ret lret mov jno cld inc add push push jge and test mov push icebp into fimull adc push sub push or pop fcoms xor push stos js (bad) xor xchg insb enter push loop xchg xchg enter or dec or lea add add xor and or or mov push movsb mov pusha push mov hlt les lret sbb and mov pop cli ret pop mov sub add mov add aad fwait repz dec and (bad) or push add hlt inc push dec addr16 fsub out into pop push (bad) jg popa or ds shlb pop add int3 out icebp adc lahf loopne fnop mov enter and adc pop sbb mov pop jns sti imul sti mov sub sbb in mov dec pushl (bad) xor dec in iret jo xorl and sub movsl lea pop xchg fadds ds imul xor mov sbb out xor into test ljmp push cmp push adc fnstenv add or mov mov shll jmp sub jmp es mov jmp push aam or mov in (bad) aam das xchg mov or dec adc or les inc sbb sahf cmp xor hlt test es sub rcll pop cmp push inc cmp lret rclb inc mov test dec mov add pop and hlt dec push dec lea adcb pop mov add jl aam or es or pop dec push dec sub faddl out add clc outsl jmp (bad) movsb jne push (bad) ret cmp add xchg push push or mov push or mov pusha adc sbb int push test sub jp les pop xor adc cmp test outsl pop sbb cmp adc and adc sbb or dec (bad) iret add xor sbb enter or out in mov shrl popa out and call add adc inc cmp stos fcmovne xchg mov mov sbb lock (bad) cmpsb inc push call xor mov out pop push mov mov push jg lahf movsb add (bad) repz call or dec cmc inc cmp fmull stos or adc inc pop cld test iret pop test xchg hlt cli sub push imul icebp pusha sub dec pop push inc (bad) ss adc outsb mov pusha jmp and inc jecxz inc arpl dec loope popf cmp jmp xor mov or or js pop push test push lea mov test push fdivrs mov push inc or cmpsl (bad) stc sbb pop cmpl js sub jbe lock pop mov or or dec leave movsl es add pop adc push shrl dec loope js mov mov mov pop sub xchg xchg (bad) pop xchg movsb loopne es call adc mov jge jl xchg ja fsubrp jmp mov or pop sub lea cltd repz inc cmp push les sbb fsts inc jg pop test mov add or lods mov shrb ds sub pop int3 mov je fildl sbb insl lods test inc sub inc or addl outsb (bad) cmp dec into inc pop andl xor add imul adc loop scas sbb mov adc sub jge cmpsl cltd dec adc push js lds mov and (bad) movsl add xor mov xor xchg or ret xorb add (bad) call cld insl sub sarl (bad) je loopne sahf xor iret sub xchg loop jmp out iret xor rorb addr16 add test pop ss inc loop add inc inc stos push mov or jge sbb cs sub inc lahf pop cltd mov loope sub fsubrl adcl clc pop mov pop pop mov add hlt sbb imul inc das mov clc or popl inc lock sbb pop and cmp jae mov jns sub inc dec arpl dec xchg push adc xor push loop sbb cmp arpl push sbb imul adcb test in push std dec ja js in movsb pushf jg sbb cmp adc imul andb and js sub insb push add dec pop test sbb sbb add or popa hlt (bad) scas sbb dec sbb test adc sub xorb mov repnz or ret xor cmp loopne inc popf nopl lock gs xor inc mov in bound xchg and sub push sti bound fiadd call jge rorb push fsubl (bad) push pop hlt push jle cmp out jae adc jg push sar incl push push push sbb and inc pusha add adc mov sbb out add mov daa xchg out push mov adc fisttp pop mov and aaa inc cs fcoml xor push loopne and and add mov out mov inc or mov mov cli cmp sub lods cli adc les insl (bad) into cmp push pop sub pop jle out or pop jmp dec inc push dec inc add mov push pop enter (bad) xor ret jae and sub xor inc mov sbb loop inc push test push pop pop adc xchg adcb mov sub lds pusha adcl push lods (bad) lahf inc cmp dec xchg dec sub popf mov inc outsb lret xlat jb pop push imul std add jle or mov call cmp call fdivr (bad) xor je cmp rcrl dec push pop mov add xchg and js push lcall xor xchg dec mov fmull inc js add pop inc pop sbb out ret pop cmp sub je fnstenv xchg js lock add sub sahf mov repz sub sbb or fadds call call add sub adc lea testl sub jge xor or mov pop inc enter daa sbb mov loope pusha pop mov cmp sbb or cmp push (bad) xor movl insl add add test pop add push add add pop pop rorl sbb or imul cmp adc mov push push imul loopne jb,pn (bad) je sahf cmpl in dec or add sbb push pop jmp mov jae lock or add inc stc loopne xchg sbb sub mov pop mov mov pop pop ret sbb cltd dec insb sbb push pop jmp xchg sub mov inc hlt imul iret push sub lret adc aad add xor push add adc push dec sbb pop adcb and nop nop mov adc les clc arpl dec mov es xorb push in sub add and dec addr16 pop es and fs mov cltd (bad) adc rolb es insb mov sub mov lret jne jmp mov adc ret inc add sub inc add aaa in pushf mov dec mov cmp inc imul sbb and hlt mov inc mul pop pusha pushw or lcall andl ret cmp jle dec pusha cmp xchg (bad) gs cmp mov jmp cwtl push cmp les push push push rcrb lahf in mov inc add dec and pop jb outsb jp sbb push sbb push mov mov movsb pop dec icebp mov out (bad) into inc fsubl pop std dec das mov add dec or cmpsl int3 popa outsl and mov fucomip jge cwtl xor mov fs ret mov xchg mov addr16 sub lretw sub aaa and out out fcoml call cltd push lcall or loopne (bad) int3 mov xor sbb dec fs adc and sub lea xor or xor mov js push lcall mov sahf out mov cmp inc xchg push ret rol pop mov ror push out cltd (bad) out mov sub out adc jne mov (bad) xchg add and idiv cli cmpsb adc cmp or fwait jl je fimul mov cmpsb and xchg in or xchg in and ficom test outsb int fldcw jae fild push insb xchg call inc out add push les xor xchg inc pop jno xor xor xchg fldenv iret icebp sub fiadd cmpl push pop and dec adc loope sbb mov pop das jno loope dec pop ja in hlt imul or daa insb adc fwait xchg mov jecxz pop call jno outsb mov and or aaa insb ljmp xchg mov shrb add loope mov add sti mulb dec lods xor sub sub (bad) icebp rcll popl pop call push out mov pop push mov dec jecxz mov clc sbb inc adc shl call dec adc inc (bad) xor mov dec xor mov cmp dec loopne cmpsb aam mov idiv jmp rcrb clc mov push inc (bad) aad loopne adc pop push mov sub sbb dec pop add mov jmp add or inc jp lea fnstcw in ss orl jno orb push push add fadd xchg fisttp adc xor (bad) push gs lret cmp sbb out jmp sbb (bad) std mov aas add je mov sbb cmc add fcoms jmp jl push dec add xlat dec js je adc inc xor loopne mov (bad) rolb loope rcrb cmpsl and adc out or stos and jne daa fstpt pop inc adc call mov inc rcll jp xchg imul rorl add adc xchg and out xorl xchg mov or mov jle call jl jb push push jge add hlt push add lcall (bad) dec pop adcl jmp cmp dec in in push inc cmp cmp mov jne leave nop (bad) dec shrl sub push faddp xchg inc outsl mov and (bad) orl cmp push call and ds push jle pusha dec call pushf negl push stos pushf xchg inc inc push and pusha andl cmp movsb sbb ljmp mov pushf data16 mov mov mov nop mov mov or lods pop or inc push popl movsb dec gs mov popa insb sub push inc sub push rcrb hlt rclb sbb aas loope testb jne sahf loope call push jne sbb dec sbb jnp sub inc xchg mov dec mov clc add inc jl fucomp push cmpsl cmp cmp punpcklbw (bad) sbb loopne add xchg in adc add jle dec adc xchg aas es fsubrp insl out mov pushf cmp je std jle mov xor push adc lea or mov or sub pop pop jo aad jne test push push mov jo mov movb or jno sbb xchg inc inc je mov loop loop jp in stos adc inc adc sbb inc sarb roll or testb adc cld insb adc enter xchg inc ret daa push dec hlt popa and out dec ret dec adc xorl fiadd adc ljmp cmp cmp cmpsb dec sub jbe,pn cmp outsl and adc andb push ret jno rolb dec js adc pop stos into inc mov add dec mov adc clc arpl loop or push adc loope or push je push inc push cmpsl popf call xlat in or add or data16 and jge inc push pushf xor test adc ret mov in pop jmp pusha push mov sbb cmpsl inc or push push or lret or pushf adc data16 lcall adc stos (bad) jne faddl dec push inc jo cmpsb add dec mov push xor ss in out aad lcall leave sbb xchg es lods xchg cmp in inc add sbb pushf ja adc jle repz in dec mov mov and cmp andb pop pop push xchg xor push push negb aaa pop add loopne cmp movl repnz sahf sti popa mov push jge pop mov push dec in fimul dec or je stos jl ret or xchg inc add push pop sbb cmp xor pop xorb add add inc inc sarl jge pop sbb add mov int inc rorl jmp (bad) push cli or add jge jo test or push cmp pop mov dec test enter stos lahf and lods stos add aad sti xor rclb sets adc jle ror enter mov and or inc lods gs sbbl enter pop pusha add mov xor add pop cmp add (bad) enter push cmp adc add add std movsb fild xor je cmp aaa and xchg push xchg xor jge push dec jo outsb pop or and sub and dec mov fs mov into loopne and sbb sub jne add (bad) icebp out push test cmp insb xchg xchg je cli pop mov scas in push call lea push xor push mov loop adc or popl mov (bad) inc push dec or and cmpsb cmp jl pop (bad) add jo cmp insl push fld1 push aam and (bad) les in imul pop inc jnp lock mov mov imul push xchg les jno push cmpsb cmpsl mov pop adc (bad) push push roll fisttp punpcklbw or inc push (bad) and clc or ficompl mov int push or sbb fwait jb cmp aam cmp rclb mov cmpsb sub ja push pop repz fwait dec inc inc xor mov out jo (bad) (bad) mov xor incl stos and (bad) and or test ljmp pop jl dec jl xchg push dec xchg adc dec and inc fldl movsb imul push inc (bad) je mov adc push and daa jl xor out xor add dec jl aaa insb or gs pop hlt pop sbb ud1 or cld rolb push cmp jbe notl dec jl sbb jle movsb inc add adc call in inc sbb (bad) sub hlt and add xor xor sub add sub xchg add pop mov push mov gs cmp jge fisubrl ja sbbl adc sbb jae lock fnstsw adc pop jo jnp dec js push xchg adc and mov arpl xchg push sbb xchg adc mov lea adc add insb icebp xor sub in dec mov cmp push je dec and cmpsl mov mov add stos adc sbb push aad jns arpl rsqrtps cmpsl (bad) out adc add cmp adc mov and outsb shll (bad) push push sbb in clc inc dec cld adc out sbb xchg call mov ljmp push adc cwtl or jns mov mov inc rcll mov sbb mov push insb and aam call dec sbb out insb inc mov sbb mov mov popa add aam adc decb test cwtl lcall das loopne mov dec push add int3 or pop mov dec push pop push xchg ljmp sbb dec lahf push or mov or and idiv inc push ja cmp pop push js adc push mov xchg and imul ret push jo aaa cmp xor push inc inc sbb sbb and push test inc add mov mov adcl les stos inc push xor push rolb cmp icebp and leave fdivrl add icebp test andb stos imul cmpsb sub or add in call movsb jo imul movsb mov sub fs loopne das jmp lahf or inc cmp jbe lcall dec incl lret or lret outsl stos call xor clc call adc mov lock test xor pop inc iret aas test aam in mov pop xchg lods je aas inc (bad) aaa xchg adc xor xor je cmp sbb or jmp (bad) lock jle roll push xchg inc int3 neg dec dec leave dec enter add (bad) add pop pop add jae cmpsb xor dec adc lret rcrb loopne push adcl cs jle lahf mov mov loop push dec mov cmpsb in jmp cmc sub mov push mov push mov or push cmp jae jbe jmp sub loopne mov stc inc jae push fbld and shrb and idiv xchg pop mov adc sbb test clc sub decl fmuls mov imul push cmp mov fildll enter or lock das add into ja cltd aaa pop add sub mov mov push push jle or xchg ja jp sbb add (bad) stc push test and cld mov adc push rorl mov jl rep and loop cmc mov pop in push xor jg nop sbb jmp sbb or test insl or ljmp mov sub adc inc fldl dec gs adc and push push mov mov mov xor jl xor cmp mov clc es push push cmp xchg rorb and ret (bad) mov add push sub imul mov (bad) mov mov rcll adc add adc fdivrs hlt lock or loopne movsl and or and pushf xchg icebp jge into and adc xchg push pop or jp rolb js inc outsb xor adc xchg dec pop lock lods mov push test cmpsl inc mov cltd inc les pop sbb dec push outsb mov fadds cli sbb data16 pop and pusha adc into add jle add int (bad) mov (bad) mov int3 sub adcb ds mov xor sbb sub sub sub imulb clc das divl xchg mov sub mov mov fucomip push aam (bad) mov adc pop sub sbb clc fisubrl inc adc adc cwtl adc sub xor sbb mov push adc xor shrb xor xor and cmp xchg enter adc (bad) push xor sub jmp jge push add bound shl decb aaa push call inc and popa xchg repnz in mov pop add sbb add mov hlt xchg cmp jle mov mov aad shr mov aam aad or enter int or rolb adc mov jmp cmp jle lret repz cmp adc adc sub and push in xor ret mov lcall pop or inc push cmp lsl shl push mov dec out dec les cmp dec xor jo int dec jo xchg xor clc test ret push hlt repz dec or and fdivrp icebp insl clc xor sub sbb das pop imul in add sbb adc lret push jp test roll scas call push shrl fcoms in cs rcll jnp sbb in (bad) mov dec ds add enter icebp or push (bad) insl fnstsw fistpll and xchg cmp cs ret xchg js imul stc into cltd or sti add mov push pop dec in cld push clc mov push xchg call popf and or arpl ja push imul repnz sbb fwait jge and jne sub mov cltd jnp mov mov pop bound aaa add push xor dec xor xchg adc pop imul xchg cld test lods (bad) and and pop mov push sbb fistpl js sbb xor inc add sub xor xor adc and push cmpsl mov test or addr16 sti inc mov cmp and xlat mov clc adc iret push movsb adc adc pop lret cmpw jb rclb inc push imul or jmp mov or cltd insb inc push clc mov inc or xorb push mov jb in inc adc push mov mov adc and adcb jp ljmp add pop add insb rclb jo lahf (bad) sahf adc push pop movsb adc adc dec into xor aad out push movb and call pop and shrl or movsl loop cmp dec cmp push push js dec cmp xor mov lahf mov push lret mov mov mov call mov sbb fs push inc and sub cmp dec jmp or bound fsts xor imul rcpps (bad) scas mov ja clc in push dec mov es in sbb push aam outsl or daa sbb lods jo divl push js into add sbb sbb adc ret imul fiadd lcall sub mov xchg xchg inc cmp or lret or scas arpl popf clc add imulb xchg icebp sbbb adc and test dec jb cmp and clc fcomi push push std ret mov push js xchg push mov je xorl mov ret or enter cmp or daa or push call in or in ljmp jnp rolb push int3 push push (bad) stc pop jmp add push dec int3 call lret aas dec or ja pop mov add in lea xchg cmp push mov mov mov pop mov mov cltd adc enter in mov cs or pushl jecxz inc pop sbb in sbb sub jl dec pop fisttpl inc push fldenv (bad) xchg sbb mulb test jmp inc mov inc adc jae xor sbb add mov jne jl cmpsl rolb adc mov add adc fsubs pop push or and rclb es stc inc dec movsl fldl repz out stos icebp mov rolb push inc xchg movsb sub xor and sub push push push dec pushf push in pop loopne inc lea pop incl add push insl xchg add cwtl add loope or mov xor push into push and test cld loop mov inc lea mov xchg add ret mov xchg mov andl cmpsb add add cltd fidivrl popa insb and in repz or sbb into add cmpsb adc xchg push fistpl call es push cld push jl movsb cmpsb push sub rcr out cmp outsl sbb fucomi cmp xchg sbb rcl (bad) or in push jae adc sbb add pusha add daa cmc cld std mov gs andl nop pop xor lcall adc test loope nop sub or fs int3 or inc adc add pop jecxz adcb mov enter mov and call (bad) or dec (bad) mov add pop jno mov jecxz push mov xor xchg (bad) jle add push sub mov pushl add stos js cmpsl push xor sbb cmp adc xlat xchg sbb lcall add adc adc int3 aas sbb adc movsl pop (bad) cmp (bad) mov out mov jg push push mov out pop clc sub push sahf cwtl sbb add in je pop jo inc test xor jno (bad) xor (bad) adc xor fwait sub mov scas icebp mov or and (bad) push pop les aad jmp les or je add cmp int3 mov jmp std sbb repz pop sub rcll push fidivl push cmpsb xor inc je inc loope cwtl aas cmp addr16 dec or jnp clc sub cmp lock push rcrl jmp inc and push sbb push pop xchg inc dec lods and adc jbe pop xchg in call sbb adc jl sbb or jbe adc (bad) mov fmull fstp popa imul adc push xchg and or add pop and aam jne dec or inc fisttp pop or or imul jo jmp loopne xchg sub inc loopne fsubp fs jns jo lock inc push mov mov push fmul sbb outsb jo rolb sbb push cmp lods xor cmp pop add push lods call xchg mov addr16 lock push ficom or inc loope xchg pop cmp push sbb or adc mov jl sub int cltd nop scas push jmp fs mov cld adc int fs pop dec nop jl mov ds fsubs or inc sub cmpsl test dec andl aam push dec in sub xor adc (bad) mov fdiv mov push dec add add hlt xchg push sbbb outsl mov inc in adc je inc mov push add daa mov xor jmp clc xchg cs sbb sbb sbb outsb es xchg push ret adc and adc dec aas (bad) jae sbb mov rorb lea cmc call les and pushf ret sbb lods pusha lcall and adc or adc repnz mov jo mov or ljmp add dec add fstpt stos pop or push sub stos dec push pop fistpl sub js fstpl roll xchg shll pop xchg xchg mov ret ficoml lea jg or and push into inc gs mov add xor sub sub mov jnp adc dec imul mov movsl mov loop cltd es mov (bad) dec ss and lods popa movsl loopne pop aad add push push sbb test das cmp mov ja cltd shr dec and loopne inc push jns mov inc cwtl push out add ss mov (bad) lock mov pop jb push sahf mov sahf rolb sbb outsb adc enter jmp pop fisubr or pop into ja and or (bad) rcrb mov pop (bad) jg dec daa imul inc cmc clc and mov mov and fiadd out push and pop bound bound test sti dec or imul add push xor nop add leave add adc add cmp dec bound add dec jnp sub dec nop mov sbb dec roll xor inc rcrb sub cmp (bad) lea inc add mov popa popf sbb test lcall push cmp inc mov push push div ljmp out adc xor or lea pop lods or dec pop add mov or (bad) je loop jecxz sbb sub sub aad or add mov nopl notb out (bad) jbe lds add dec push or cmpsl mov mov rcrb pop jp xor dec pusha mov xchg imul clc fstps dec enter mov mov dec inc pop jl push sub and sbb cld mov add sbb sub and push or cmp scas lods sub xchg es dec gs imul inc stos jge pop add jno fs mov lock sbb sub cli mov mov (bad) fmull and sub insl mov aaa push bound data16 ds push and dec ds jmp or clc xchg sub dec jl pop push add int3 and jb pop adc out adc aam aad testb cld cmp mov fcoms or loop push (bad) je leave test push (bad) test stos ss xor inc fldt lcall xor inc jae loop shlb xchg ss dec aas push (bad) loopne dec in mov inc dec loopne cmp sub xor (bad) scas sub jo push cmp bnd inc repnz and cmp enter jge xchg mov pop or xor jl,pn pop inc push inc and scas (bad) cmp pop lahf xchg push mov imul mov jmp add (bad) dec cmpsb push call sub adc dec icebp dec add dec js pop inc dec fiadd xor pusha iret jge jo adcl push inc insl xchg es pop aad les adc push dec or aad inc push dec xchg lahf xchg sarb adc dec lock lcall xor or mov es pop dec cmpsb rcrb adc (bad) jmp or sub or test adc mov enter cs push mov push push cmpsb xor js ljmp outsb or sub mov mov sbb jbe pushf test xor aas push lock ss ds leave push (bad) lret shrb mov jbe jmp scas xchg mov cmp cmc mov repnz inc sub std (bad) jge int3 jecxz add inc jecxz sbb xchg imul adc push cmp xchg dec mov add jg sub hlt sub add push sar test ljmp inc adc js es inc ljmp add and mov mov sub rcrb sub fs mov (bad) pop inc push inc mov das ret int3 pop jmp mov adc adc cld pusha or xchg cld cmp adc jb pop (bad) sar nop add popa dec xor push outsl or test add dec sbb xchg sbb mov stos jnp dec hlt (bad) inc inc (bad) dec xlat sbb (bad) enter add js xor push js add push or jmp hlt jbe in jle push pop fdivr (bad) insl adcl fbld stos dec cmp push ds mov ss sub pop ret mov (bad) insl (bad) ret (bad) es arpl ret jae (bad) mov or lods hlt and mov lcall inc les addr16 sub adc cmp add jne adc mov adc aam mov sbb es ja mov add repz popa mulb sub inc push ds cmp inc mov mov mov xor xchg adc jo (bad) psrad jmp outsb movsl ret sarl add ret push xchg adc rorl xor icebp add xor je out pop fnstenv push sahf xor xor movsb xor xor lret dec es mov push mov or shll add push hlt aaa inc cmp imul imul jmp pop add jecxz jne ljmp gs imul push mov push mov dec jmp test add jmp in lods adc test mulb dec cmp imul mov fsts (bad) or jb or rcr into add inc lea into insb sbb arpl mov pop add and mov je fistpll add sahf or cmpsb cmp in sub or push push xchg hlt testb push add iret (bad) and mov xlat sbb orl enter xlat mov push xchg fs sub xchg rolb mov xor int3 mov cli subb cwtl xchg jne (bad) bound int and and and xchg sub sub in sub jne add xchg pop (bad) lock adc push sbb push jmp mov mov push dec aad dec pop sub cs xor data16 xor or jae xorb jne cld sbb mov psllq imul and sub xacquire or mov push dec inc add adc repnz (bad) leave mov rol adc cmp mov in loope imul mov cmp jb inc mov enter rolb inc pop jmp test addl jp ret fbld xchg sub cmpsl movsl push lret push loopne jnp add adc jge bound jb jl fs push or hlt push cmp mov sbb movsb stc outsb stos stc sbb dec xchg bound sub ds push fs push fwait xor daa jae push aas addr16 out or je lea jne pop mul addr16 jge imul cmp rolb sbb dec push pop push jg and pop fmuls xor xor adc iret test or cmp xor jl dec add subl cmp pushf cmp mov xchg pushf into add inc sub sahf dec add es iret push push mov inc xor pop cmp add das and stc insl dec mov xor iret mov out das dec adc pop daa jle adc sub lahf mov add test or cmpsb push mov or add imul fildll lahf or test inc repnz call cs test xchg sbb in loop icebp pushf and add xchg xchg std sbb push call adc and mov xor sbb imul das mov xor call adc stos pop (bad) call sbb jno add insl test call add outsl daa insb and dec xchg dec sbb mov or adc pop inc push incl fist push sarb adc js add shlb lods push sbb fs pop (bad) sar repnz push and dec fidivrl mov add sbb addl and jge lods pop adc insb xchg cmp cmp pop jb push inc loop add insl or subl jno cmp jne call dec call addr16 cmp and push cmp mov or inc push jne xor je mov sbb cmp stc inc add cs int3 lods out fstl test inc adc cmc pop incl leave pop dec pushf sarb loopne test cmp and push mov mov hlt cmp pop cwtl sub jp fimull xchg and dec mov or or scas jge mov pop leave scas xchg sbbl sub add je rcl mov push sbb adc loopne lock xchg incb je mov lret dec loope es ret decb pop div inc cmp jae orb cmp inc xchg jb js jne pop fimull cmp and mov and daa push leave add mov push mov mov out xlat add sbb and (bad) xlat cmp adc push adc test pop jmp cmp or rorb mov or adc sahf mov stos xor loopne test es fcmovu je add pop add add bound jecxz mov test mov (bad) imul ds add cmpsb and adc jl dec std in xor (bad) popa add outsb and lods daa cmc aad aam jbe jmp or xor mov je pop cld mov ficompl or pop add push push das adc mov je or fs lret xchg aas xchg sub mov cld es dec xor out mov hlt push lcall scas enter dec in mov in fsts or faddl lods adc test ljmp (bad) frstor popa in xchg pop inc clc (bad) (bad) fsubrp xchg jbe,pn rorb inc jge pop mov je add jne sbb push movsb push jl cmpsb xchg inc je sbb push nop pop adc (bad) punpcklbw push cmp push xchg test inc xor scas sub mov pop pshufw inc ret test (bad) xor (bad) and mov mov icebp sub mov xor or lret test lods inc sarl jae mov pushf adc or dec jo lods (bad) je mov loopne mov dec je sub hlt push test inc decl lock mov add jns dec adc sbb movl shrb fsubr enter or in shlb pop in dec xchg sub dec and xchg dec fadds dec sub nop lahf mov xchg das jl cmp jo lods shrb and andl adc pop sarb xor cmp dec jle aas fnstcw jecxz cmpsl adc sub lret sar dec dec push add enter sbb add test push dec dec inc les push lock out stos ja or fcompl xor or aam and das outsb xchg dec enter es (bad) cmp insb pop add jnp rolb inc fstps add add pop mov enter inc enter and dec adc lahf int push lcall mov dec negb jae adc push sbb sbb or and push outsl or test ss push pusha mov push mov lock inc icebp jns je je push mov or sub icebp jl insb jo xchg sbbl mov pop push insl movsb mov mov enter add jne andl mov in inc outsl js add and dec pop dec andb xor or mov push push dec or je sbb mov push sbb movsb pop jo mov jne imul (bad) xor pop in or push mov cs arpl cmp (bad) test adc xchg jbe pop outsl je gs add mov sub shll enter andpd push fdiv mov fwait pusha (bad) mov ja ja nop push mov dec cmp ret stos mov and ja jae xchg add insl add sub pop int3 push xchg ret pop xbegin adc gs popa add fldcw js inc cmc sub jo and push and addr16 imul mov enter xor mov mov enter (bad) js outsl sub shrd (bad) jns push or and rolb arpl movsb dec imul movb out ret popa cwtl pop dec out push stc push pop lods enter test (bad) (bad) push xchg ret fisubrl popa loope je data16 (bad) (bad) fnstenv mov enter (bad) mov mov cmp mov (bad) jg popf cmpb iret and iret mov sub pop lahf inc lahf addl add adc add jae push jle pop add sbb add push addps or sub lods or add dec mov call les mov lea cmp jg mov inc cmp mov (bad) (bad) (bad) mov lea andb testb jne testb jne mov xchg push jmp cli test stos jle jl mov not jne add pop outsl cmp dec sub jge outsl dec nop push sub addb mov or (bad) or push push adc mov or jmp lcall jne mov adc jle inc xchg or addb sub cwtl mov lock cmpl mov adc xor add xor adc sar push push jl popa leave or int3 adc add subb or repz cwtl xchg lods lock dec mov loop iret mov testl push sarl (bad) fidivl dec cmp add shr or jne adc in add jg dec pusha insl test mov cs movsl jg fs push call adc pop xchg cmc inc cmp jl hlt jge outsb add mov inc adc xor and mov jb and or cmpsl nop jo adc adc es mov pushf in mov lds (bad) inc add inc add rcl mov andl cmp lea inc ret faddl sbb add fwait lea or xor jno push daa push mov push push add jbe pop hlt icebp ret test xchg mov mov or jmp testb enter xor movsb ret mov dec add arpl dec movlps sbb dec call xchg jo cwtl jbe iret inc ja gs jl dec inc cwtl in pop sbb mov shrb inc (bad) ds mov jae inc adc fimull les cmp (bad) xor rol push mov cmpb sbb mov loopne push jmp dec dec ss mov test or adc leave jae in mov mov xor sbb movsl push (bad) push test test lock push lock push cmpb mov xchg sub xor je push pop dec cmp dec push std shlb xor ret rorl clc cmp add bound xor mov push push add push add stos cmp (bad) enter rorb cltd je int3 (bad) dec inc sbb je add xor and mov ret dec jmp roll push xor xor pop rclb mov cld or mov adc sub mov loope sbb push loop int3 mov ret (bad) flds (bad) sahf incl (bad) pop test jb dec movsl aam cmp dec pusha add mov or inc and lret xchg pop sbb sub int3 xchg nop push repnz stos mov hlt mov sti mov inc inc popa mov fistp xchg push or test sub cmp fdivrs sbb scas icebp dec pushf and into ss inc fisubrl adc pop (bad) call push mov sbbb cmpsl mov insl mov adc outsl and rorb push xchg dec and (bad) aam sbb jl stos mov inc leave add es push add sub je mov cltd incb (bad) loop cmp lea ret imul adc movsb out cs push ja inc inc in fs or mov pop dec dec pop sbb imul mov push adc pop cmp mov adc packssdw or cmp jns sub adc ds sbb clc pop and (bad) je sub loopne lret jno sarl cld cld dec int3 ja outsb fidivrl sub push movsb mov sbb sbb lods je rolb fsubrs rolb mov push int3 pushf or loope mov (bad) pop push add les aam add cmc inc mov jp in push xchg or adc faddl push arpl push fs add pop mov pop call push fisubl xor lret xchg or xor int3 mov repz clc outsb mov and shlb in in jbe adc sub add adcl inc sbb jae mov add and sbb or fcmovu imul or movsb xchg pusha clc sti sub or jmp adc mov jecxz push sbb add xchg adc push adc aam and push xor or adc xchg je out jo test outsl lea sbb clc sbb and enter data16 fbstp addr16 pop fs movsb mov pop js xchg pop outsl addl das pop test test (bad) fdiv inc or mulb xchg das and sub mov sarb pop add loope or lods adc dec ja xor cmpl adc popa adc sbb in or pushf ss pop lea rcr ds (bad) mov mov rorl and test ret pusha gs cmp xlat insb icebp and imul mov xor xchg (bad) pushf aaa and lock jmp fdivrs cmp fcomip push aaa add add fisttpll adc test loope inc xor and test push push daa adcl push mov cld call mov adc lea into jl add sbb add inc popa mov shll or gs inc rcrb inc mov jmp stos test (bad) ja rolb cmpsl add dec adc sti sub mov lock lock and testb add lret fsubrl or cmp add (bad) mov mov mov dec sub aaa mov repnz cli or inc jl add roll adc mov mov mov daa cltd xchg mov cmpsl sub lea adc lcall in xor inc push jo je insb or cmpsl cmpsb int3 add mov bound or sub rclb hlt cli or adc es jl addr16 mov test mov sbb movsb push mov adc adc sbb fimul (bad) add mov out inc xor cwtl cmp add cmovs lret push inc psubsb pop ds je sbb push or xchg sbb or xorl push xchg jno out sti xchg loope leave movsl cmp sbb mov pop push cmp sbb xchg ficompl jp sub stc pop push idivl xchg cmc inc shr ss cmp fisubl js xor xchg xor aas dec pushf (bad) mov insl inc insl mov test and inc aaa cli push cmpsb and ds adc mov ret sub int aam inc adc xchg pop inc add je xor leave inc add adc mov call stos jb cmp mov pop and in mov lock mov mov lahf sbb icebp ror jge mov inc cmp (bad) jo pop enter (bad) sarb rcrl inc sti rcrb lods sub cmp pop jb lea clc push xchg cmp mov ret sbbl cmp add jne movsl add and cmc push icebp xchg cmpsb call mov pop jle adcb adc into hlt iret andb xor and xchg and rolb js fsts shl lea pop cmp mov push decl arpl lret movsl sub add aad inc xor les jnp add outsb push mov inc and test shlb in (bad) and adc mov mov adcl pop sbb sub aam addl ret or rolb inc cmpb ret mov push jbe lcall call inc adc outsl je in cmp add xchg sub or cmpsb jmp in out data16 repnz mov lahf pop ljmp loopne inc cmp jo je mov or sub ret dec inc insl mov test push sarb pop inc sarb in test push call lcall cwtl pop movsb inc stc int pop push lcall add cmp rorl rclb sbb es push sahf add inc into mov mov sub in mov (bad) push push sub or (bad) sub push jge or xor out fldl ficoml lods outsl add dec sbb orb sbb cmpsl pop je jnp sbb in sbb xor inc adc mov add sub jmp test icebp push jle cltd rclb dec push jle sbb je lods stos repz mov jg push push xchg sub faddp shll mov call out and cli push cmp lock sbb test or xchg mov (bad) cli rorl add sahf and xor das aas addr16 (bad) mov stos push repz rolb (bad) movsl aam loop ja jo lods mulb push hlt call pop add sub sub sub (bad) adc ret xchg fsubl jle clc mov add int3 xchg pusha sbb add repz add clc mov push pop push ficompl rcll imul sbb ds sbbl inc and sub jle ret ljmp aaa sub sbb fisttpl pop cmp adc dec pop popf pop pusha testl rcrw adc sub dec push jne lcall xor xchg xor adc add je cmp inc ss dec ret daa mov incl (bad) es push (bad) stc sub cmp into pop or out jns cmp (bad) test cmp out hlt add sbb ja imul or pop in inc nop push or pop leave xor js add out lcall inc repnz les sbb pop enter clc adc test xchg mov xchg adc pushf imul mov xor mov mov dec dec popa xlat dec adc jb (bad) ljmp outsb sub jns mov cld inc jle mov icebp inc and adc xchg xchg xchg int adc add out jg push nopl loope or xchg fimull mov mov dec sahf outsl push pop insb in aad adc mov cwtl call pushl push push push inc sub push xor jmp lock pop (bad) push ljmp stos movsl add sbb adc cld in push jl mov push ret add cli or or dec xchg call xchg lock call and push subb lock push adc test rorb mov inc add inc xchg iret mov add aaa pop (bad) or sbb mov les je call mov in aas stos jne lahf adc lcall pop test mov push mov add push push adc inc mov jge loop in sub mov push (bad) mov mov nop mov add dec pusha jp rorl adc pusha ret cmp or push push mov mov insl pop push xchg sub pop out dec gs push mov xor or (bad) int3 lea cmp lea pop push daa lods push in test add test inc aam add and data16 int3 call popf inc add xor test cmp mov inc sbb rclb test xor repz imul sub dec (bad) or loopne arpl or push mov int je mov sbb sub adc imul jl popa mov das test jne nop xor inc nop or test adc or or shrl pop and cld cmp lret (bad) cmp adc mov pusha or dec test and sub cmpsb sub movb loopne sbb inc subl sub test test test aam and daa sub xor and (bad) rolb outsl or mov cmp test lock test gs add inc test idivb sub mov lods stc dec push mov cltd cli mov and xor adc imul popf xchg mov xor in pop add push lods (bad) inc sbb aas test (bad) cmc stos lea nop fs jl mov (bad) adc aam or xlat dec adc and movsl jae in sbb in pop lret mov lock sbb push (bad) cltd les (bad) push jmp cmp mov daa test jge fsubrl mov daa mov jnp lret and dec inc cs jmp sbb dec mov xchg out push mov pop (bad) jmp data16 sub xor mov arpl dec sbb or cs inc pop sub data16 test (bad) sbb mov andl xor (bad) call sub jmp divb test aas int fsubrl cmp mov out jge push fsts aam sbbl xor ret in push hlt push imul (bad) iret dec add call call adc inc cmp add adc js sbb sbb in (bad) ljmp jmp and aas jmp test mov (bad) lds inc cli jns pusha test rolb xor inc out adc js mov test scas push stos jne in cwtl fsubr jo cwtl lock in xor sub or mov test cmp lods stos lods jo ret add mov clc ror sub inc pop xor add push push out pop or push push add in jle movsl sti mov popf inc dec jl or sahf add lret jge lods mov dec jl mul inc test movsl pushf lret int3 xor in pop lock push pop shrb mov (bad) jmp sbb xlat mov lahf xchg insl jecxz sbb jl push ret inc xchg and cmp cmp leave cmp loope fbld and and imul lock mov and xchg add nop push pusha push mov addr16 pop test ljmp aaa (bad) lahf enter jb cmp (bad) ret dec xor in gs or jmp or xchg jmp jb push adc test int3 and mov adc cmp inc mov sbbb imul cmp sub and ret jp je (bad) into insb test add xor incb lahf nop cli inc adc adc call dec (bad) mov lret push jno push push pop mov ljmp pushf push fmuls mov cld adc dec sub sub add sub inc (bad) hlt add test pop (bad) cmp mov adc out subl push (bad) fdivrl xor lret jmp ljmp mov mov pop add aad sarb jmp add pop sbbb push dec add nop aam aaa rcrb cmp add lahf iret loopne mov jo dec push and and adc push sub popa lret sbb popa hlt xchg sbb clc repz pop push add inc add movsl pop lds pushf cmpsb insb sub and and adc xor push jp mov or xchg pushf (bad) out outsb mov add imul jl mov mov lcall cwtl sti push lods inc pop push insb mov pop and xchg lea ds adc cmp (bad) push lret fcmovne dec mov (bad) lock vmwrite mov movsl outsb enter push test sub mov add push insb pop or pop mov and adc sbb mov sbbb sub mov das fcoms mov jo mov leave jbe cli jmp jo fs cld adc sub pop mov je or pop sub clc jmp or mov jo sbb gs adc xor cmp fdivs push and daa and sbb lds mov adc or add cmp pusha push xchg jbe xor mov xchg test and mov cmpsb test cld in add ljmp mov add nop xchg mov xchg stos fidivrl or jo les mov loopne aas dec push movsb js,pt jne xchg std add iret (bad) push ja inc hlt jmp mov loope test leave lcall add wrmsr scas imul xor add inc mov xchg shl sub jae and mov clc dec call mov push nop fmull push add lcall sub push ficompl sarb and pop jl xor roll aaa xchg loope jbe inc jae dec movzwl lea jne sbb mov popf outsb rclb pop mov sbb int lea mov mov cmp or loopne adc sub push adc popa mov fsubl lea sbb adc test push or pop xchg faddp mov push push out mov cmp les push decl enter cld mov rorl jg dec pop aaa pop and cmp and out jae in or add lret jle sbb cmp bndldx pop dec lea and or add sti pusha jl cwtl pop int3 xchg inc and imul mov lahf jmp sbb in jbe das cmp fstpl add fisttpl stos pop add das xchg cmp jl push add (bad) sar mov pop sub or iret mov mov sub or sub mov in imulb sub lcall add fmull xchg cmp dec js psubw lahf pop xor jl mov jl call enter dec cs punpckldq cs jno pop outsl shlb xchg in cmpsb xchg jmp xlat inc test cmpsl popa sbb pusha addr16 xlat adc and pusha pop sub or stos dec push adc mov pop mov push mov mov mov inc push push or imul mov (bad) jo (bad) cmpsl mov inc inc leave or or (bad) enter lahf add adc popf loop test mov cs popl mov or out jl stos lock aaa mov fistpl ss add adc add pop rorl call sbb push in (bad) fwait scas stc sub push lods cmpsb xchg mov sbb xor sahf in cmp cmp jnp stos push jp pop mov mov lcall mov push insl xchg fwait in stc mov movsb scas xor in xchg mov fnstsw or (bad) inc bound les or add in add cmpsb in xchg cmpsl push test out or jp adc mov mov movq xorb mov mov (bad) and out mov stos xlat fdivl push in into scas rorb fldt mov add test mov mov sub push xor in mov push dec push adc cmpsb lcall pop mov jp inc popa mov roll cmp (bad) notl rcr (bad) clc adc fcmove mov mov test jp cmp pop imul hlt out mov mov pop sahf and cmc lods push ds and push or push out dec mov and stc push clc roll push dec add jecxz fmull add inc rolb push jae xor faddp sub xchg add repz xchg or jg ret jg divl dec imul es je mov jbe jle shrb ret ret push into out cld enterw or das xorl pop iret jge test fs fstpt subb fcomps or pop in enter push push mov int mov fsts imulb ss pusha sbb (bad) (bad) sub xor insb push fadd fidivr sbbl mov (bad) jo outsb adc jle push rorl test nop push add mov cmpsb std add sbb (bad) (bad) insb inc data16 in sub popa push xor cltd jp arpl scas cwtl int fnstenv dec dec push inc ja test sbb jne fisttpl pop mov ss dec data16 adc scas push rorl push lock xchg pop movsb gs xor mov cld cmpsl dec pop dec pop and mov xor dec mov out push push jns daa mov dec sbbb push fucomi mov push mov es xchg fsts stc pop add daa outsb dec int3 insl xchg aaa mov dec push lds add add sbb out decb cmpsb daa sbb repz mov outsb mov adc or pushf lea push insb fwait int sbb adc cs sub lds inc jge les es pop mov pop xchg or push cmp push arpl dec pushl imulb cli aam push (bad) dec cmp rcr mov inc shll adc movsl (bad) outsb mov dec stos (bad) cmp pop cmpsb enter hlt sub int3 sbb inc lret push add (bad) movsb jbe add adc push pop inc jbe aas int mov sbbb popf mov aad mov ds inc push cli lods (bad) pop jmp push aaa test pop lea push pop movsb push insb adc add jle loopne in popa mov jbe mov into in mov imulb stc cmp sub test repz add scas bound idivb xor sar push insl int add movsl xchg pop xor push fimul aam mov sti push mov mov scas sbb sahf out mov mov inc pop sti jns push cmpsl add ret mov mov insb jbe push push inc mov ss (bad) push arpl mov push jnp fwait mov out fs insl and push nop rolb lret (bad) lcall xchg cmpsb and cmpl push push or into adc pop cmp push mov or push adc jo and and push dec xor xchg aas (bad) mov adc xchg rorb fldt push push icebp inc dec mov pop xchg fnstcw jb,pt inc repz stos int lds jg or nop (bad) push cmc fcompl push lds dec xlat insb scas adc jno andl mov repz cmpsb xchg idivb clc (bad) je imul push push or jle decl adc rcrl lcall out adc jb jo jge cwtl sahf inc adc push push (bad) dec shll gs imul (bad) ficompl ss ficom pop inc sbb (bad) fcomi jns fisub mov inc or mov mov cmp or push jecxz mov mov push loope push pop (bad) adc mov push adc out fldcw cld or pop stos jle into xchg pop out pop mov in addr16 xor lods cs inc add rorb (bad) imul dec add in dec test sub loope pop push mov mov mov je cs push jle push fwait sahf ds add push fnstenv call cli xchg xchg in mov repz pop mov xor mov push mov xchg dec hlt in cs push inc push mov mov fwait dec jge into mov jae mov adc nop jns in pushf mov pop out (bad) gs xor movsb stc xchg add ficompl ficomp xor cs scas test popf push mov popa push popf fs xor lret mov pop fistpll test les mov mov add xchg lcall push decl nop ficoml fiaddl pop sarl lea pop cmp lods cmp xchg add data16 xchg xchg call lcall data16 icebp mov dec sahf data16 push gs mov xchg fsubrs jbe mov fstpl push lods push popf push inc int3 mov xorl mov test push sub or addr16 shr ret inc or sub mov cs xor mov xchg push xchg in out mov cs xchg jle inc cmp repz pop ljmp subl fadds push jnp pop stos add mov aaa mov mov iret jl sahf mov sbb popa mov sti dec fiadd jb push stc lea mov xchg jnp mov data16 inc mov push mov iret xor ss add push repz inc (bad) fldl mov scas or fistpl out out push lcall cs mov or jne adc ss fisttpl mov dec jns sahf push nop es fwait pop mov rorb dec pop stc push pop popa and fldt jbe ds test insb mov cmp xchg ss (bad) mov jnp mov out pcmpgtd loop push mov jg jle sbb jle es lahf inc es daa pop and andl push mov dec (bad) mov sub cmpsb clc add aam nop outsl add or in out insl xchg hlt sbb (bad) dec cmpl add push mov push cld push dec lret outsb mov adc xchg inc add outsb ljmp sub insl pop push jle lock push das out mov cld ret dec aas push add or xor xchg and push (bad) and xor inc es inc xchg pushw cmc and inc or inc and jns lods in mov add push dec push fadds icebp outsb pop push ss sbb dec mov ds out pop cmpsb into test jecxz ret push and pop or lea push push lahf mov divb inc insl lcall push push jne cmp push mov sub sub inc (bad) mov mov js and lods fadds in fcomip cmp add ss sti (bad) pop into repnz frstor inc push mov ret fildl pop pop add jmp add sahf inc add outsb loope fiadd imul loope lds rolb xchg pop dec bound scas or inc mov pop mov push pusha inc mov push push push ss cmpsb push jne stc sub push jle outsb cwtl pop test jbe out fwait or out mov scas into mov cmp fidivl insl or inc out adc rcll pop ja scas stos mov mov dec mov fdivrs add add subl push fsubrs pop mov pop push cmp push sbb insb push add lea (bad) stc cmpsb lock les ds loopne dec clc jbe (bad) cltd aam sub es push es iret sti mov dec es push hlt pop and or loopne mov outsb or or sbb add out shrb cmpsb mov push xacquire lret data16 push mov ss je in scas test repnz push into dec jbe add sub hlt xorl inc enter into fisubrl fidivrl lahf mov lds push cmp ficoml ds push mov mov mov insl add mov jns jge sar pop dec jbe movsb les dec ds daa insb dec test jbe addr16 inc mov inc fwait outsb cs push mov (bad) mov cmp ds sti inc xor jle mov pop ds cs fwait in enter movsb push mov call bound js sbb pop mov pop ss das mov ss xor sahf fistpll ficoml and pop push frndint mov ds mov add mov testb mov (bad) add cmpsl test inc cs outsb mov popa xor popa pop ss sti fsubl bound mov or ss add push cmp out fadd f2xm1 mov push push cmpsb mov outsb jle mov jp dec sbb push push sbbl mov hlt mov addr16 aam or push push push shrb negl test mov dec xchg ficompl push flds aam stos pop xchg mov push imul fwait int test pop daa jg jge inc mov mov cmp scas ds lods mov ss int cmp jnp cli inc push xor sub dec and pop jae cmpsl ljmp jbe xchg inc out sbb ffreep pop cs insl mov cmp add (bad) jp pop mov mov xchg rcl test test xchg fisubl dec daa ds mov mov insl push leave adc fcomps sbb or (bad) xchg mov push cs xchg outsl (bad) es imul push jp dec iret add xchg adc or mov ds cmp std call xchg out pop xchg outsl out push jae cmpsl mov pop cmp fs negb xor shrl sub mov cli jmp add aam cmpsl push xchg pop data16 int3 push push and add or push lret cmp (bad) pop rorb repz cmpsl (bad) xlat movsl pop es (bad) fwait insl jmp add cmp push movsb inc inc shlb cld cs jle leave inc stos (bad) (bad) push subb cmp jns sub cmpsb stos push arpl inc pop pop stos (bad) outsl (bad) mov out orl mov lahf bound dec xor mov es (bad) out daa push xchg sub cmpsl dec push lock (bad) (bad) jmp add jbe mov pop pop xchg mov add mov scas mov mov pop push add add dec mov mov push insb mov (bad) dec mov jmp and mov outsb or or xrelease mov dec pop sub or sarb jb sbb shlb aaa jbe pop push inc stos (bad) outsb shlb sahf mov (bad) clc xchg cmpsb shrb mov cmpsl pop jg xchg sub out sbb jnp in pop rclb es cs jbe insl sbb lods mov mov xchg push test adc lret test push push xchg cli pop adc or mov push sbb push imul incl insl int add fisub lret adc xchg loope or xchg (bad) pushf adc or jbe outsl testb mov adc xor cmp mov (bad) mov or fwait pop sti push push lcall mov data16 mov push idiv dec (bad) out imul jbe jl adc push test or fdiv mov pop push jg add push push adc sti repnz scas loop cld push jl (bad) mov mov (bad) mov push ret sbb out push mulb sbb out and push add pop mov inc xchg dec adc in popa es pop mov push call js loopne pop dec call in push addr16 xchg lcall sbb incl loop jbe leave in jnp adc test adc mov push movb into rep stos ret cs mov mov pop mov push and sbb (bad) repnz scas aad mov testb push pushf xchg mov popa jle adc jp andl (bad) imull imulb ret scas ds mov fwait int testb in cwtl cs fisttpl fldcw adc (bad) out ss cwtl dec fsubrl mov in repz xor xorl mov xchg push jbe test sub push sub ljmp pushf push cmpsb dec icebp sarb idivl push mov and add or push scas cmp out or (bad) xchg and sbb inc (bad) dec push xchg xchg jle and loop jnp insb push pinsrw adc or loope adc jle loope push jg sbb aam mov mov inc adc movsb mov dec add mov insb fisttpl xor jnp lds push xor rcrl fnstsw push or stc sahf out push cltd loope stc push imul (bad) aad popa inc cmp xchg ficom dec mov aaa sti sahf mov pop jmp fucomip jnp push sub jmp jmp out adc dec mov insl and scas dec push in mov jge lea push cmpsl fnstcw in mov rolb cmp jno repz cmpsb (bad) ss add sahf out sahf sbb push push lods ds sti sub pop iret sarb in rorl cmp cmc jle push mov int push ds and and xor dec push push movsl and imul rcll xor lock and xchg leave sub out cmp xchg mov aaa push xor imul lcall add inc repz divb cmpsw fistpll iret les (bad) mov lea aad xchg mov lahf out push pop pop lcall or lahf push (bad) icebp push repz das push sahf add add mov bound addr16 sbb sbb mov out jae adc sbb mov mov pop fmuls lods jbe,pn mov out pop mov ss cmpsb lea xlat push int imul push or sahf sub inc dec sub lods sahf inc fildll mov mov mov push mov (bad) push inc mov fildl dec pushf mov inc fwait movhps sbb cmp pop mov mov push jp call pop inc ds mov ret test loopne cs mov jnp pop notb pop jno addl inc adc cld xchg jb mov push in mov nop sbb sub scas jbe subb cs push fldcw mov sub movsb hlt mov (bad) jle mov push data16 (bad) in popa xor mov movzwl scas lods into jle xchg nopl xor inc mov iret or out fidiv xor icebp mov insl into popa (bad) cs test data16 mov jecxz ret push push aam jp or push push sbb xchg mov fsts mov ljmp (bad) (bad) je mov popf push fsubrl in mov movsb or inc pop pop dec ss int in ret mov cwtl mov dec outsl pusha push jl jge out mov cld xchg xchg jnp push dec xchg lea faddl mov int adc stos xchg pushw add ss add jp int mov ss or inc jl mov mov fisub push insl (bad) stos sarb push push lret jns add dec cmpsl lahf insl mov (bad) jbe xor push shll pusha mov jo dec ret ss and xchg (bad) and push pop out mov sub fidivl push or ficompl lret mov pusha add push int fs xchg test popf popw sbb push mov mov sbb int je push mov jne pop daa into icebp pusha movl push add mov mov mov and mov jecxz ss fwait push add mov mov jnp pop push or xchg fidivl dec je xor jbe ret pop aas stos mov jg arpl jl add sbb mov scas (bad) add cmpsb dec fsubrs sbb pop imul call jp cs xchg aaa push pop pop aad inc popa sahf push fmull incl stc fsubrl pop ds out test or das ss sarl vdivps fucomi or pop fidiv push (bad) data16 rolb cmpsb in clts mov fnstenv cmpsb push jns ja lods add push push js mov dec jbe jmp jo jns (bad) push in jecxz cmpsl pop pop fadds and mov dec ljmp fsubs adc cmc push jae insb addr16 xchg jl,pt out inc jnp push mov cltd in xor scas jecxz aas dec inc dec pop (bad) std (bad) mov dec nop jle xlat or (bad) pusha adc into aas pop insl mov sbb push pushf mov data16 aaa add or fsubrl mov xchg pusha xchg fimul daa cmc inc (bad) mov rclb int3 movsl push gs and sub test xor dec push fidivr mov push mov jbe jle add out cli dec push push mov pop ror or enter xchg mov popa push or js not insb sbb call or pop fwait out and cmp outsb ror adc out ret mov push mov push orl mov push inc sahf (bad) push inc insb ret test push inc ret fistp push or add cmp cmp cs ds xor outsb cmc scas or inc add (bad) ficom cs (bad) mov mov imul push inc adc sahf aad fiaddl xor jle sub adc mov ss or stos push imul mov scas lock pop push jbe imul cs dec push and xchg outsb in add cmp push push out sbb mov stc xor cwtl mov mov jg mov mov push ljmp insl mov jle ficom imulb push mov sahf inc jnp mov xchg jecxz add fstp add test loop mov loope jle insl xor pop sub scas stos test subl les adc adc ljmp leave test pop sahf push mov or dec cli call loopne data16 push fs push fwait gs push (bad) jle or cmp push stos xchg push in xchg sbb cmp sahf mov inc mov stc mov lock push fsub or add jnp repz loopne push dec fs inc loope out sahf test idivb cmpsl out xchg jle mov es repz xchg xor es mov fdivp out loopne ljmp jl mov in sbb inc pop mov cli push sbb loop ss inc jle jle ret push mov xchg es mov testb dec mov inc insb out (bad) cs ds int (bad) pop imul lods add ja xlat in add mov rorb cmpl (bad) cld mov (bad) std es (bad) and (bad) push inc adc fnstsw push or lds lahf testb pop pushf mov cmpb insl ficom push dec pop scas pop jbe ss push ficomp mov addr16 gs aas mov push mov in lds pop cmp push sbb push sbb pop cmp and (bad) jae popa xchg stos and shlb mov loopne push lods fiaddl imulb mov add push int3 jle mov xchg (bad) cmp pop xor or fsubrl or dec clc repz push ss or fadds std dec in or mov sub xor popf cmpsb test adc jbe dec pop ret push adc inc dec pop mov or idiv out push fisub nop lret lock mull inc fldt xor mov das mov sbb mov (bad) dec cmp cmp adc mov push sub mov push ds loop cs ljmp shrb je jbe push mov xchg ds movsl push push mov outsb mov mov ss int sbb inc push add and push inc mov sub mov xor push sbb add add dec (bad) (bad) mov sahf mov into jp push pop xchg fwait int adc lahf lea sti fisubl mov loopne loopne xchg (bad) ss mov push jmp shrl (bad) shl imul pop add cmp test sbb xor rclb into pop pop pop sub imul pop (bad) in push mov pop pop into dec push push push add push fs in xor mov push cmp pop jbe js cmp cmp lcall add (bad) sub or call insb jbe mov (bad) int sub push mov jne ret ss es scas sub mov dec pop push push adc add jle fidiv push mov lock mov popa sti push xor inc insb push inc push mov insb fwait gs push rorb sahf xorl pop dec xchg mov push cmp inc sahf fbstp and mov sub test es iret loope int push int push fdivs cmp xlat rcll sbb jle into (bad) aaa movsl push xchg adc mov outsb into push inc test xchg push lcall ss fnstcw insl inc pop push dec roll pusha outsl mov xchg mov jle jbe adc xlat or xchg push (bad) pop ds sbb daa iret testb push call cmpsb es cmpsl sarl subpd jl (bad) mov push mov stos cmc xor in pop jmp loopne add lods stos mov push (bad) sbb andb rclb outsl out dec cmp add mov mov enter mov add orl push add pop lock aam and pop inc cmpsb mov mov (bad) call and fsubrs sub icebp push pop sub jmp sbb push push push add pop ds ljmp test call ljmp fidivr add (bad) loop jecxz jl popf jp lds push popf loop repz popf in mov push jmp loop sub and mov xor (bad) mov sbb mov or pushf or mov aaa rclb ret pop lock inc or or cwtl dec aad (bad) pop out xchg push movsl cmpsb cmp mov icebp into xor inc imul and cmp mov scas jns in stos ds push pop inc push adc jo pop dec repz loopne data16 test and inc mov out mov mov clc ds fs rcl mov ss dec mulb es test int xlat pop xchg rolw mov out xlat ds repnz cs fcompl or add mov ss add xchg mov mov mov xchg cmpsb mov scas cmp mov es jge sub mov test mov dec cltd add test ds sub data16 sahf dec mov add iret test mov cwtl push push adc mov add movl ss push xorl flds xor insl stos ss push sbb push movsl stc adc lret (bad) cmp xchg add pop inc ret cmp ja pop cs (bad) mov mov xor lods inc add add add pop mov fnstenv out push add pusha flds rcr adc shr jle imul jle mov bound mov push push shrb dec repz xchg loopne add fwait xchg push rorl cmpxchg (bad) xor jbe jg mov shrl jmp js les insb cwtl mov xor add push popa (bad) sub js push (bad) js (bad) iret cmp out sub bound js ss lds dec push xorb add sti aam out xlat push ds mov outsb popa push mov add sbb push clc cmp out cmp shrd sub movups mov push (bad) mov andl push xchg or mov mov inc push and mov fcoms jle jle add cmp ds ret ficom call xchg jle imul imul push adc je add push (bad) cwtl jo icebp (bad) into (bad) adc jbe popa outsb push push ss rorb inc in shrb outsb push sub cmp cs dec inc sub icebp aad jbe mov cmpsl push jne xor xchg push and inc insl cmpsl ficompl jl mov cwtl mov mov into push inc lahf mov cmpsb jbe jecxz adc xchg ljmp call addr16 push adc out inc add inc mov pop jle aaa add jns sbb ds sahf inc dec fildll inc test cmp cmp mov xor inc sub xchg int fbstp inc mov cs xor inc mov (bad) lahf (bad) fs je dec in sbb xor jle das ss int push bound dec and and xor int repz imulb add mov or jle ret inc cmp cs mov lcall push es sub mov mov jb push (bad) ss outsb push cmpsb jecxz mov pop cltd js fiadd or (bad) int les sti cmpsl je sahf pusha mov lcall out (bad) or cmpsl jge movsb je (bad) clc out es sbb cwtl ss std lods or jle jbe jnp add cmpsb pop push inc fidivr out mov push (bad) pop pop leave sahf pop inc dec mov out add dec js out push lret (bad) (bad) out mov or es dec sub jmp mov je ds loopne in roll sub out inc stc mov adc imul mov jge repz movb or cmp inc cs cmpsl stc sahf out cwtl mov push mov jl in imul push (bad) je incb add flds test sti mov push inc jle call idivb mov push das xlat mov clc push fimul xchg out jbe fsub rcll cmpsb scas sub dec ss mov stos addb inc mov imul pop inc into xchg add sarl (bad) xchg out imul sub lea aad out (bad) outsl jnp iret jae push aaa faddl push sahf and mov push mov loope,pt cmc repz out add scas ds push inc fsubl into xchg pop push xchg push jl into jb daa jae dec sti lock out ss push push sahf aad rcrb dec sti add mov push sub js shufps mov mov mov aam clc push jg push fistpll js jns outsl ss jbe dec jnp xor divl push sbb movsl jbe inc test shrl dec push (bad) jb out cli jb jp adc fdivp lock xor sbb pop jle call cmp iret into outsb push xor (bad) push out stc shlb fimul (bad) xor and sbb pop and jmp push outsb (bad) mov inc jp sub cmp xchg shrl mov call data16 add push jle mov loop mov lcall pop push es push imul mov and into fcomps mov adcb movzbl mov into es mov test mov fs jmp mov inc (bad) push adc fld (bad) push out mov (bad) gs push ds inc xor test and inc mov push mov fist sbb hlt sub dec dec out mov jecxz jg jne push scas add cs push daa cmp adc pop pop movsb test pop fbstp push test out xlat pop add pop adc pop inc push data16 and lea shrb lret push jne mov add sub shrl or or xchg fdivr pop ss cmp xchg hlt jbe pop pop pop and mov dec jle or push lods (bad) add lds fwait sahf cld or jno sahf adc scas jle es jo and sbb addb scas jl pop xchg add xor sahf xchg cmp hlt cmp push push in imul js push out inc aaa negb arpl cmpsb ss dec xchg add (bad) data16 scas jmp cwtl ret mov clc cltd (bad) es lock or shlb push mov les test daa movl add inc data16 mov std xchg mul ds push lods dec push test mov sub stos (bad) sbb outsb mov add adc fs mov mov cwtl sbb inc sbb into inc (bad) push mov lahf jge add xchg jbe or lock call xchg sbb mov mov incb and (bad) jo in push ret movl fucomi dec push call sbb inc xor push lock insb sahf lock jg mov cltd jae sti icebp or (bad) mov jo outsb andb imul ret dec fldl inc xchg cmp xchg add pop out fst adc mov mov scas push stos cmc mov pop mov mov popa adc push mov fildl or pop (bad) test fisubl test out inc mov push jp adc or rclb push stc sub pop cmp aas mov jl or mov sub and sbb fimul sti (bad) divb shl push cmp ret xor mov je pop mov es sub dec cmpsb and xchg cs mov scas outsb into or xor cmpsb js push lods mov pop inc lods xchg dec or lods divb xchg push mov mov mov insl pop cmpsb push xchg mov mov call lock insb ss scas data16 aam cld (bad) in dec mov push mov sub cmp cmpsb cli dec shrl jae dec imul jnp push and add xor add mov inc test push pop jbe in nop mov pop push stos stc xor clc enter mov notl push jne push scas jle into jae lahf push pop (bad) and mov push mov scas mov inc outsb (bad) stc data16 dec sahf rcl jle leave adc mov push test in lahf (bad) iret inc add fsubr or xlat push jp and xor (bad) fidiv jle push int adc mov popa adc push addr16 xchg xor push push fisubr inc inc mov or mov out pop out (bad) push mov cwtl xchg push cmp mov cs adc pop pop xor dec pop test inc enter mov add xor mov add imul cs movb aas mov movsl fimul ljmp sub xchg mov ret add data16 or push aam push test rclb cmp subl jl dec daa cmpsl pusha roll pop or (bad) test test push jp mov aas xchg pushw xor add scas push mov sahf mov pop cmp cwtl (bad) sbb and cmp fiadd xchg out lods add lcall mov push xchg push sbb jbe dec ljmp pop lock mov mov sbb loope mov add adc insl and jne,pn xchg sbb fdivl imul fwait add push cmp insl jle dec add fild inc push or or insl or push repnz sarb push mov push push lret dec int ficoml es ss sti jbe fiaddl lret jbe scas fsubl fimul add int fstpl fwait pushw inc dec fiaddl pop inc mov ds dec push pusha pop addl sub mov mov stos idivl push insl push push cmpsb push push mov andl inc fwait jle,pn sbbl sbb outsb iret lods adc push out scas jle ljmp inc cmpsb inc push imul mov or ss je ss pushf arpl push push fiadd jl pop add adc jmp add lock mov idiv stos divb cmpsb mov int mov inc xor out fwait or add xchg scas aam (bad) push mov es insl scas (bad) lcall dec push lret cs cmpsb push fildl (bad) jge ss int3 in aad jmp movsb xchg je ss lods or cmp mov inc cmpsb fmulp cwtl clc loopne pop pop iret xor jbe cli jl aad mov insl dec or in loop fst fldcw (bad) dec mov mov rorb decl out (bad) (bad) dec mov addr16 fsts mov ss push or out hlt add lods or pop insl es xchg fadds lock push jns push xchg adc push sbb data16 or xor adc aad (bad) adc sbb sahf pop int data16 jge out pop cs ret mov dec dec pop js pusha pop push mulb push jp sub fsubl adc into cli mov les ss cs or rclb dec push xchg mov inc rcrl in mov cmpsb jno or (bad) cld push push add pop (bad) jae mov mov push mov ss jbe cmp cs xchg sub dec in add inc (bad) xchg das mov push dec nop ds (bad) es or cwtl ljmp lods out stos in ja cs sbb lret mov insb mov push or xor and xchg add (bad) scas arpl out inc je push push or and cmpsb lcall lret es xor push xlat dec clc outsb daa push sbb inc rcrb loop out mov je push loopne fcompl and mov push xor ja jbe jbe (bad) xchg mov (bad) rclb or insl fs pop (bad) leave out add push fnstsw fildl nop jmp sbb into js push pop loop sub pop (bad) mov jae inc pxor shrb icebp fisubr push and cmp (bad) sarl idiv mov mov mov xor test mov cmp lret ss outsl aad mov sub addr16 or out mov mov push lret cmp vpextrd ret outsb dec push fidivr lods jbe push icebp dec pop jmp sti inc push jl cmp push enter mov outsb push clc push push inc repz fcoml mov sub imulb addr16 cltd ja jp rcrb inc push shll cs (bad) push rclb pop in in test push push test cli inc insb (bad) pop in add or adc pop js push xchg sarb sbb dec cmp sar daa insb push mov (bad) xor push test cs insb dec clc push fcmovnbe xchg push fildl jp sbb mov or outsb xor or clc sbb jbe stc mov xor push mov or out mov pop iret test mov cmp cwtl loop rorb pusha repz pop mov fwait or out sub adc or and aaa ds xchg cmp pop pop insl ss out jle out notb pop xchg out hlt mov mov outsb jbe push and mov lods out imul fs push pop es orb mov pop or pop mov mov sbb sti movsl and ss es je cmpsl ds (bad) mov leave sub dec scas aas test ja mov out sub js mov fcmovu cmp or (bad) xlat jl das push in push insl xlat pop ja xchg hlt fimull into push adc jnp lods lods jle xchg fnstenv mov xchg ss adc paddw or push (bad) testl inc inc in data16 sbb mov out popa push push mov inc testb (bad) imul adc or loopne outsb into add cmp xor faddp add pop jp mov fnstenv loopne cmp push pop stos dec pop add lods mov push stc or sub push stc push push notb mov xchg mov pop mov or xchg adc test lcall add fiadd lret push loope push mov mov outsl lcall dec mov pop popf adc sahf aaa (bad) ret loopne dec outsb arpl scas push pop push or fiadd addl push scas inc xchg mov je jecxz push add dec xchg xchg ficoml cmpsl adc outsl (bad) loopne mov push mov add loop mov mov rolb js push push fcompl dec mov sarl fs ret jae fimul addb out sysret inc out jne pop mov mov xchg dec sub rolb and into mov mov jl ss aaa cmp ss (bad) orl mov popa xchg adc sahf sub adc dec push inc pop jbe sub jns (bad) push dec ja movsl mov or inc cmpsb mov sbb test ret cli sbb lea pushf ds dec adc aad or mov push sbb pop add sahf data16 inc mov into xor cs sub mulb push dec fnstcw popl push mov or pop test pop rcl jae add pop movsl into mov adc cmp out andl lcall arpl dec sbb out sub or pop es enter push or mov pop (bad) sahf cmp inc jecxz xor ds sbb cmpsl ficomp and ds xchg mov in jb cmpsl dec xor mov es sbb or iret jle out mov inc fiaddl or es add mov pop cmp push (bad) and cmp mov ret or xchg push mov rorb loopne cmp outsl enter orl dec push dec pop lock xor paddq xor rolb fiaddl js fcmovbe jo push ds sub cmp (bad) mov mov or cmpsl inc mov hlt rolb ss ret lea cmpsl mov ss or inc outsb push out mov sahf mov repnz add sbbb out loopne,pn pop push test push jecxz sub in lods push pushw ffree push jge add outsl (bad) cmpsb outsl scas fnstcw or mov dec mov test sbb mov push int3 push ljmp jbe mov fmul (bad) add or pop adc cltd pop mull jl int shl fistp and inc xor mov jbe dec jl and scas xchg lcall sti (bad) into ss repz (bad) into outsl mov stos les shrl sbb mov xor add cs lock cmp push fnsave jg xor inc fisubr push push cmc pop jnp mov push mov loope fcmovbe mov sbb (bad) mov divb ja pop out pop xchg mov movsb pop lods jle (bad) into mov cmp (bad) stc jo xor arpl adc push fidivl loop insb mov loop push mov ds xor jle,pt pop in or pop ds test xor push jecxz (bad) mov mov rorl rcr xchg push xchg pushf (bad) push or mov dec movb mov out push pop loope adc mov ret inc jmp popf dec mov xlat add pop jbe pop xor mov ds inc mov incb ds rorl sub jns push test out and orl (bad) out ss mov aam ds push pop cvtdq2ps push mov xlat popf xchg insl add or or js push mov inc xchg test push (bad) lods lods les jbe shrb sti lods cld push daa (bad) add outsb dec std xor mov cmp jne inc jo push stos jb sbb cmpsb mov int outsb pop push inc out insb mov push cwtl pop lods pusha hlt cmpsl pop shlb scas fadds (bad) fisttp dec cmp xchg scas xchg mov outsb pop sub aad cmc rolb imul pop mov jae push push cmp or in popw jbe and test jae loope mov dec xchg inc or jne or ficomp lods es js xchg test jle xor rorl pop mov mov push js cmp push outsb jbe (bad) push sub inc xchg mov or jp or xchg dec sbb fiadd push iret das inc repz push add add mov add (bad) cli test mov (bad) mov push jo icebp dec inc movsl push push lret fimul (bad) pop pushf pop out loop ds test inc pop in lock loop hlt sub es testb push pop and fisubr ss sub outsb fistpll out data16 ja aam icebp loopne,pt das movsb cs inc mov stc push lret lock data16 hlt or orb xor inc pop iret jnp (bad) sbb jle nop xor or (bad) out adc add cs or clc push jmp dec adc orl adc lret pop rolb dec cld jp inc mov pop movsb dec call into into push imul hlt push addl cmp jbe sbb pop inc pop or dec subb push or idivl movsb stos cs and js inc test out es or inc mov ret mov ret cmp add push data16 out add in or dec repz dec cmp repz cli pop pop push or inc rorb lcall test aaa cmp inc inc inc pop cmpsl push add shrb push insl mov push icebp mov xchg inc xchg push icebp mov lods inc ja mov add arpl pop ss repz mov data16 data16 add fwait push pushf push xchg lcall mov dec shrb sarl repnz push inc fimull dec pop icebp cmc imul pop (bad) out push or fmulp push scas adc insb add mov push fmuls pop (bad) jle fs sbb je ss scas push vsqrtss pop lock insl mov mov mov cmp mov sub mov mov mov insb xchg cmp imul ss jle mov insl popf sahf adc repz aaa mov add outsl add fistpll or push cs jbe scas addr16 imul fdivr jbe mov xchg fs push shrl sub (bad) rcr bound pop xor call inc loope insl xor add xor jb xchg cli xor lock shrl movb pop sahf jno mov mov insb mov incb push mov xchg fwait add in add mov je fmuls xchg xchg adc push aas jne test add test push adc cmpl leave outsb pop sbb sub push aam test fstl and mov (bad) pop jge (bad) xchg push fs jmp jae or xchg mov cs push mov sub adc stos into orps mov outsl fadds xchg add js lods out mov pop fs lods jbe mov and outsb mov movb or jbe mov mov push shll sbb xor push inc xor push and (bad) lds sbb xchg (bad) cmpsl xor or (bad) in movsl ds pop add add or or je sbb outsb aas jne push adc xor out shlb add push add shrl push inc iret shrl jl push add test test fiaddl outsb xchg push adc das xchg and mov lret scas pop stc (bad) xchg dec mov cs and ljmp push xchg pop or ss data16 iret xchg dec leave mov decb mov insb mov xchg xchg sahf test pop bound jb mov pop push cs stos sub or mov dec push sahf dec loop (bad) lcall es loope movsb insl daa xabort ja,pn dec push insb sbb mov fwait in rcll adc fwait adc or in enter sub sub (bad) jge in and ss sbb out sarl pushf or stos movsl cmpsl push (bad) cs je insl mov sub dec push adc pop push jbe mov cs jg cs pop inc mov repz push jecxz loope jle rorl dec push pushf mov cs push inc pop push xchg sahf out or push fwait dec lods sbb push lahf push cmc test xchg or jle xchg inc aaa dec xchg sahf cmpsl pop push popa xor xor jbe data16 jo fistpl (bad) sub xchg jmp push int xchg push pop icebp adc mulb jbe,pn data16 lods push jle push ja pop jmp pop cmpl enter popa inc jae (bad) out mov outsb mov int3 mov test push inc lods push sbb mov mov outsl or ss sbb xchg add push sub sbb sub adc adc clc push (bad) ficomp ds test mov or add push inc push (bad) sub push into inc pop lahf push fnstsw or jo push sub lock add (bad) adc sahf push push fildl mov lea xchg outsl xchg jbe push mov sbb xchg movsb push dec inc scas push lods sbb jle push outsb sbb push imul scas mov lods fwait pop daa adc rcrl pop movb ds cwtl xchg push adc out sahf dec xchg pop add jns imul or subb data16 cs dec cmp data16 xchg pusha in aad mov dec int or push pop icebp stos sub cmc aad ss mov js (bad) rcrb mov mov data16 lea popf add mov cmc mov push test outsb or ss mov fs fimul xor lea faddp sbb or adc xlat imul cmp dec sahf rcrl sub pusha out out mov xchg cmp cli dec aad shlb loop jl movsb mulb mov ljmp jnp shll mov push mov adc push fdivl mov lret add lea ret outsl push jbe ds mov in mov out jl aam dec jle cmpsl or add inc bound and lret sub movb add out sahf cmpsl out and test scas or (bad) into push mov scas ss icebp cmp outsb cmpsb mov push push outsb lcall inc add cmpsb sub (bad) (bad) out sub sbb orl scas add insb sbb out sub push push dec rorb negb adc push adc scas imul cmp repz mov scas fmulp adc es cmc push ds popa xor sahf mulb push inc cs test outsb scas popa mov sbb insb mov outsb mov cmpsl pop xchg push ja lcall mov pop es mov inc push cmp mov mov jnp movsb inc xchg lock daa xchg jo fwait ds sub inc popl fldt cmp xchg arpl call pop sahf int (bad) lods movsl cltd sbb popa pop xor push dec inc inc decb test inc push xchg xor pop xchg (bad) jle roll out hlt pop (bad) mov push in (bad) arpl push ss sbbb (bad) xchg call add mov jno push mov and negl outsb (bad) hlt and mov pop jae popa add cs mov xchg dec out adc pushf lcall sbb xchg aas jle ds push mov loope push mov hlt into stos or idivb pcmpeqb push push cmp mov sub xchg sub mov mov or das xor cmp jbe das enter push pop mov adc xor sub sub imul repz (bad) ds mov pop inc jle xor xor jl gs loop cmp xchg pop call lds sahf in es adcl mov cltd inc dec stos add into (bad) rcr lock push in push shrb popa pop mov ficom cmpsl xchg cs xor lea jb inc adc mov addb dec pop jp push lahf or jb das add pop daa stos xchg test xchg in jle (bad) mov in shr (bad) rol pop jo out test inc popf aam scas movsl push mov pusha test or out or data16 pop out cmpsb inc hlt arpl in ds cli sub scas and fbld and push mov xor sahf sub push push cmp and out sbb or push inc jecxz inc jl cld mov push ljmp or (bad) xchg mov cs in sahf dec push jmp daa jbe mov push cli js pusha push mull stos add outsl fidiv ds push push dec and fcomps dec cs xor adc (bad) arpl xor and and sbb mov mov mov jle push push pushf add dec and pop fidiv push mov mov cmp test pop idivb jp stos (bad) mov sahf fdivrp mov cmpsb dec push pusha call xchg dec push enter push pop mov push mov fstl add or mov xchg rorl fisubr or sub push lsl aam arpl push jno xchg pop popf push aaa out push push xchg aad dec push iret and in mov inc and mov push or mov es xchg lcall cltd jbe push data16 and jns in push imul or mov mov dec cmpsb stos sahf (bad) or (bad) rcr mov push (bad) scas rcl ret subl imul fwait out push push xor jmp add in mov cs mov es mov arpl cmpsl lods mov idivb (bad) cmp cmpsb outsb inc pushf movsb jle test mov sbb movsb daa into push pop (bad) cwtl push je sbb outsb mov mov int3 mov (bad) incb nop sar out push ffree push push in sub outsl push jnp push pop mov orb pop mov sub push xchg sub ret popf push loope fldz ds rorb hlt out add mov and inc adc rolb inc push pop xchg push add cmp mov js jbe mov rcr (bad) icebp pop push add mov ljmp or shrb aas push pop in bound inc lcall (bad) adc pop mov subb fiadd push xchg pop dec mov push or mov sarb mov sbb outsb mov aaa dec ss push aam adc push jo sbb rcr out outsl scas sbb pop shrb (bad) divb push outsb jbe js movsl aad cwtl scas nop push inc mov out mov aam scas jns movsb sbb cs outsb ljmp jle cmp dec mov jbe into scas adc xor and mov or scas push jl push push lcall adc push push adc jge sub xlat xchg cli mov adc mov imul push in es mov xor push aad mov jbe stc sahf cmpsl es inc and notb cld add mov xor addr16 movsl rcrb push nop cli jo bound add sub mov cmpsl push xchg dec jnp daa push push dec call shrl dec push adc ss sub dec sub jmp es mov push aaa bound ret push fisubrl sub add sti out call add (bad) and repz mov push outsb and or jmp push xor adc ss jmp mov push push popa out mov mov icebp faddp (bad) enter push data16 insb out bound aaa insb ss int push adc pop lcall pop int mov lahf das clc push add xor mov (bad) jge jg mov pop in sarl es pop jl cmc jnp jae int cmp jge (bad) insb ss out push inc push cltd jge insb (bad) and cmp pusha push ss int out and xor cmp mov mov push je jne cltd jae scas mov push test jp inc int3 and ret mov leavew pop outsb sbb inc add fdivrp stos es sahf sbb mov push pop or pusha mov lock ss int mov mov sub and fsubp adc jnp or std cs imulb outsb pop ds es fs and jb add or arpl mov out mov lret leave cmp repnz adc push ret pop dec pop mov icebp imul fwait pop and xorl icebp push insl xor cmp outsb es inc jmp jne mov cmp push addb mov lock cmpsw mov insb ss int adc cmp cmp or cmp cmp pop repz jns testl push inc int3 gs push mov lcall dec sbb int push xchg or negl push jbe mov loope xchg ja sbbl fidivl mov inc xor dec data16 push xchg inc testb push push adc insb addr16 mov push push mov out pop cmp outsl push push inc mov sbb xorl cs test fldcw in jmp push or loop xor push scas scas ficomp lds call out popa into ds push cld (bad) and dec mov and aaa fldl hlt sub loop dec push incb outsb xchg push jp sahf int sti (bad) ja scas js add insb sub or push push xor data16 adc (bad) mov push dec sahf lds push pop sti xor in jns es and push xor mov push push mov stos push ljmp les repnz and sahf pushf and stos push adc (bad) sub ja xor push adc sarl ds cmp push cmp data16 cs sbb shr mov fnstcw iret inc xchg mov mov jge int rcll adc jmp data16 test and adc xor cmpsl jge mov mov jecxz push shlb (bad) jnp sub mov call sbb (bad) push inc add dec inc push aad ret xchg jle add popa roll popf data16 add out movsl into clc inc cmp add scas and add lret lcall adc mov push sbb mov add mulb jb dec push mov dec push test dec bound xchg or push jb rcrb data16 mov fcom add dec aaa push fildl fmull ret dec loope dec mov push or dec fiadd out call ljmp int shlb lock inc mov hlt loop mov dec clc testl sti out sbb incl add add add or out xchg xor add add add add or mov adc adc adc adc (bad) (bad) jmp dec push add add add add add add sbb add (bad) (bad) jmp add add add add and add add add add add sub add or add and loopne add add (bad) (bad) mov cmp cmp add inc add inc add add inc add dec (bad) jg cmc add dec mov dec add push add push add (bad) incl push add push add pop add pop add add pop add popa add arpl fs (bad) outsb adc add push decl add outsb add jo jno jb jae je jne jbe ja and jns jp jnp add jle jg (bad) (bad) incl addb add add add add add (bad) incl nop add add xchg add add add fs add mov (bad) jmp shrb add add add add mov (bad) out test mov add add add add imul add add add leave add add (bad) (bad) dec add add add add add add add add add add add add add add add add (bad) (bad) (bad) fildl faddl fldl fiadd fild loopne loope loop jecxz in in out (bad) (bad) fisttp nop add add add add add add add add add add add add add add add add add add add add add add add clc fwait or adc add lcall add add add or or or add add add add jg insb and adc add add add add add add jbe add add add add add add add add add sub test adc sbb inc (bad) sbb add sub pushf add cmp cmp add inc push andb inc add inc add add fildll adc inc add dec add sbb dec add (bad) (bad) (bad) decl push add push add push add push add pop add pop add pop add pop add (bad) lcall pusha add bound arpl add data16 push pushl imul add outsb add jo jno jb jae je jne jbe ja js sar incl jns jp jnp jl jge jle jg addb (bad) (bad) call addl add add add add (bad) (bad) (bad) incl xchg add add add add add (bad) (bad) (bad) incl mov add cmpsl add add add (bad) (bad) (bad) incl mov mov mov mov mov mov mov mov add add (bad) mov loop add add add add add add add or dec add add add add add test add cmp aam aad (bad) scas fadds flds (bad) (bad) (bad) (bad) fiaddl fildl faddl fldl fiadd fild loopne loope loop jecxz in in out out call (bad) (bad) (bad) ljmp add add add add add add add add add add add add add add add add add add hlt clc add into mov add (bad) ljmp or or or or or or add add add add add (bad) (bad) incl adc add add add add add sbb add add add add add (bad) (bad) incl and add add add add add sub add add add add add out add aaa add add add add or add add inc add inc (bad) call lock add dec add dec add dec add dec add (bad) (bad) incl push add push add push add push add pop add pop add pop add pop add (bad) (bad) incl pusha add bound arpl add add push add insb add outsb add (bad) (bad) incl jo jno jb jae je jne jbe ja js jns jp jnp jl jge jle jg mov incl addb add faddl (bad) incl mov mov mov mov mov lea mov popl nop add add xchg inc or incl cwtl add add lahf (bad) (bad) lcall mov add cmpsl add add add (bad) incl mov mov mov mov mov mov mov mov mov push mov add add add add xchg test js add add add add or (bad) fmul add add add add (bad) mov add loop add add add add add (bad) (bad) (bad) fadds flds fiaddl fildl faddl fldl fiadd fild loopne loope loop jecxz in in out out ljmp (bad) call add add add add add (bad) push add add add add add add add add add or fdivr add add mov fcoms adc add (bad) cmp add add add add add add add std mov add add add add add (bad) (bad) jg mov sbb add add add add add add add add loop (bad) incl add add add add add add add add add add add add add call xor add enter add add adc dec test adc dec mov (bad) (bad) mov add add add add add add add add add add ss (bad) incl add add add add add add add add add add add (bad) mov add add add add add add add add add add cmp add add add add add add mov (bad) (bad) (bad) ljmp add add add add add add add add add add add add add add add (bad) (bad) (bad) jl jge jle jg addb (bad) add add add add add add addb sar fisttp orb add add add add or xchg add add add add add add add add add add aam (bad) fild mov add add add add add add add add mov scas add pusha mov mov mov das subb mov mov mov add das adc mov outsb or ret add add (bad) jmp out movl add add add add add (bad) (bad) dec add add add add add add add add add add add add add add add add (bad) (bad) (bad) fild add add add add add add add add add add (bad) (bad) mov in add add add add add add add add add add adc push add add add add add add add add add xchg insl push hlt add or incl or or add adc add (bad) call add sbb sbb sbb add and and jmp add sub sub sub add xor push cmpsb loopne ss cmp push xorl add inc add inc add (bad) (bad) (bad) incl inc add dec add dec add push add push add (bad) (bad) (bad) call pop add pop add pop add popa add fs (bad) (bad) (bad) jmp push add insl add jo jno jb jae je jne jbe sar pushl js jns jp jnp jl jge jle jg addb add fiadd mov mov mov popl xchg add xchg add cwtl add fwait add sahf add lahf add mov add cmpsl add stos add lods add (bad) ljmp add mov mov mov mov mov add mov (bad) (bad) (bad) mov add les movl int3 add (bad) (bad) (bad) dec add rolb aad (bad) add flds faddl ret sar fild loop jecxz in in out out (bad) (bad) call add in add out add repnz cmc add (bad) push add cli add std add add add add push movsl push or or (bad) (bad) incl or or or or push adc adc adc adc adc adc push sbb sbb (bad) (bad) incl sbb sbb sbb sbb push and and and and and and push sub sub (bad) (bad) incl sub sub sub sub push xor xor xor xor xor xor push cmp cmp mov push pusha push cmp push inc push inc (bad) (bad) (bad) incl inc push inc push inc push inc push inc push inc push dec push dec push dec push dec push dec push dec push dec push dec push push push push (bad) (bad) (bad) incl push push push push push push push push push push push push pop push pop push pop push pop push pop push pop push pop push pop push pusha push popa (bad) (bad) (bad) incl bound arpl fs gs pushw addr16 push push imul push insl push outsb push outsl push jo jno (bad) (bad) incl jb jae je jne jbe ja js jns jp jnp jl jge jle jg addb hlt (bad) (bad) incl (bad) push addl push test xchg xchg mov mov mov mov mov lea mov (bad) (bad) call add xchg push xchg push xchg push xchg push xchg push xchg push xchg push cwtl push cltd (bad) (bad) (bad) incl lcall push sahf push lahf push mov push mov push cmpsb push cmpsl push test test push stos push stos push lods push lods push scas push scas push mov mov mov mov mov mov mov mov mov (bad) incl mov push mov push rolb push ret push les lds movb push enter (bad) (bad) incl lret push int3 push int into push iret push rolb roll rolb roll aam aad (bad) push xlat push fadds fcos (bad) (bad) incl fiaddl fildl faddl fldl fiadd fild loopne loope loop jecxz in in out out call (bad) incl ljmp push out push out push lock icebp push repnz repz hlt push cmc push testb push clc push stc sub hlt incl cli push sti push cld push std push incb jmp push mov add add clc pop add (bad) (bad) decl pop or or or or or pop adc adc adc adc adc adc pop (bad) (bad) (bad) lcall pop sbb sbb sbb sbb sbb pop and and and and and and pop (bad) (bad) (bad) ljmp pop sub sub sub sub sub pop xor xor xor xor xor xor pop call hlt cmp cmp pop pop cmp cmp pop (bad) (bad) (bad) incl inc pop inc pop inc pop inc pop inc pop inc pop inc pop dec pop dec pop dec pop dec pop dec pop dec pop dec pop dec pop (bad) (bad) (bad) call push pop push pop push pop push pop push pop push pop push pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop pop (bad) (bad) (bad) jmp popa pop bound arpl fs gs popw addr16 push pop imul pop insl pop outsb pop outsl pop (bad) (bad) (bad) pushl jno jb jae je jne jbe ja js jns jp jnp jl jge jle jg adc (bad) incl pop addl pop test xchg xchg mov mov (bad) (bad) (bad) out mov mov lea mov popl nop pop xchg pop xchg pop xchg pop xchg pop xchg pop xchg pop xchg pop cwtl pop cltd (bad) (bad) (bad) incl lcall pop sahf pop lahf pop mov pop mov pop cmpsb pop cmpsl pop test test pop stos pop stos pop lods pop lods pop scas pop scas pop mov mov mov mov mov mov mov mov mov (bad) incl mov pop mov pop rolb pop ret pop les lds movb pop enter (bad) (bad) incl lret pop int3 pop int into pop iret pop rolb roll rolb roll aam aad (bad) pop xlat pop fadds fcos (bad) (bad) incl fiaddl fildl faddl fldl fiadd fild loopne loope loop jecxz in in out out call (bad) incl ljmp pop out pop out pop lock icebp pop repnz repz hlt pop cmc pop testb pop clc pop stc (bad) stos hlt incl cli pop sti pop cld pop std pop incb (bad) faddl or or or add hlt clc or or or or or or or or or or or sub pop or or popf (bad) (bad) decl sbb sbb sbb sbb or or or cmp lds or or or or or (bad) sub adc decl sub or or or inc add or or mov decl or or inc or inc or (bad) decl inc or inc or dec or dec or or dec or push or push or (bad) decl push or push or pop or pop or or lcall or popa or arpl or data16 push decl or outsb or jo jno jb jae (bad) decl jne jbe ja js jns jp jnp jl jge jle jg pushl fiaddl or xchg cmpl push mov (bad) std (bad) (bad) decl mov (bad) nop or or xchg or or pop popa pushf sahf or or or (bad) lcall pusha test or scas or or or mov mov or or or or or (bad) (bad) (bad) decl les lds (bad) or or or or or or or or or or or or or pushl decl aam aad (bad) or test or or or or or xchg ret or or or or or or or or or das mov mov or or or or or clc icebp or or or or or or or or or or or or or or stos push std pop fadds or or or add or (bad) (bad) (bad) jg or or or or or or or or adc or or (bad) (bad) (bad) decl sbb sbb sbb sbb or or or or or and or or and add or or or or or or decl xor or or or or (bad) (bad) (bad) decl cmp or inc or inc or or inc or dec or dec or (bad) decl dec or dec or push or push or or push or pop or pop or (bad) decl pop or pop or popa or arpl or or push or insb add (bad) decl insl or outsl or jno jb jae je jne jbe ja js (bad) decl jp jnp jl jge jle jg orb or or incl or or nop or (bad) (bad) call or xchg or or or or (bad) (bad) jmp or cmpsl or or or or (bad) (bad) pushl or mov mov or or or (bad) (bad) inc or or or or or or or or or or or or or or or or (bad) (bad) call or or or or or or or or or or or or or or or or (bad) (bad) jmp or or or or or or or or or or or or or or or or (bad) mov or or or or or or or or or and or or aam push std outsl push add add add hlt clc or decl or push or or or or inc sar or or adc or or or or (bad) (bad) (bad) mov or or or or or or and or or or or or (bad) (bad) ljmp sub or or or or or xor or or or or or fildll or or inc or inc or (bad) (bad) incl or inc or dec or dec or or dec or push or push or cmp or push or pop int3 pop or pop or (bad) (bad) decl pop or pusha or bound arpl or data16 push or insb or (bad) (bad) decl outsb or jo jno jb jae je jne jbe ja js jns jp jnp jl jge (bad) (bad) decl jle jg orb or or or or push (bad) nop or or xchg or or or lahf or or or call test or scas or or or (bad) cmp or or or (bad) (bad) (bad) decl rorl or or or or or or or or or or or or or or (bad) (bad) (bad) decl rorl rorb rorl aam aad (bad) or or or or or or or or or or (bad) (bad) (bad) decl loope loop jecxz in in out out call or or or or or or cld (bad) (bad) decl icebp or or or or or or or or or or or or or or aad pop add add add add add add or hlt or add (bad) (bad) (bad) mov adc adc adc adc adc adc or or or or or sbb or or or or or or or and or or or or or sub or or or xor xor xor xor or or or or or (bad) mov aas or inc or inc or (bad) (bad) (bad) decl inc or dec or dec or dec or dec or push or push or push or (bad) (bad) decl push or pop or pop or pop or pop or pusha or bound arpl or (bad) (bad) decl or push or insb or outsb or jo jno jb jae je jne (bad) (bad) decl jbe ja js jns jp jnp jl jge jle jg orb or or or or or (bad) or or (bad) (bad) (bad) decl xchg or or or or or (bad) (bad) (bad) decl cmpsb or or or or or (bad) (bad) (bad) decl mov mov mov or or or or or or or (bad) (bad) (bad) decl (bad) or or or or or or or or or or or or or or or (bad) (bad) (bad) decl (bad) or or or or or or or or or or or or or or or (bad) (bad) (bad) decl out out call or or or or or or or or or or or outsb jecxz decl (bad) or or or or or or or or or push (bad) (bad) decl or or or or or or or mov xchg (bad) hlt clc or or or or or call xchg clc or or or or or or or or or (bad) (bad) lcall sbb or or or or or or or or or clc (bad) jg mov or or or or or or or or or or incl add or or or or or or or (bad) (bad) (bad) decl or or or or or or or or or or or or or or or (bad) (bad) (bad) decl or or or or or or or or or or or or or or or sbb (bad) decl or or or or or or or or or or (bad) ljmp or or or or or or or or or or or or (bad) (bad) (bad) decl or or or or or or or or or or or or or or or mov xchg or and (bad) (bad) call or or or or or or or or or or or (bad) (bad) (bad) decl or or or or or or or or or or or or or or or (bad) (bad) (bad) decl or or or or or or or or or or or or or or or (bad) (bad) (bad) decl or or or or or or or or or or or or or or or (bad) (bad) (bad) decl or or or or or or or or or or or or or or or (bad) (bad) (bad) decl or or or or or or or or or or or or or or or (bad) (bad) (bad) decl or or or or or or or or or or or or or or or pop or decl or or or or or or enter or decl push or or clc cld add or adc adc adc or sbb sbb push or and and and or sub sub cs xor xor xor or cmp cmp ds inc or inc or decl dec or dec or dec or push or push or decl pop or pop or pop or popa or fs decl push or insl or jo jno jb jae je jne (bad) (bad) decl js jns jp jnp jl jge jle jg orb or (bad) (bad) decl mov mov mov xchg or xchg or decl cwtl or fwait or sahf or mov or (bad) (bad) decl test test or scas or mov mov mov mov mov (bad) (bad) decl mov or mov or ret or (bad) (bad) decl enter lret or into or rorl aam aad (bad) (bad) decl fmuls fisttpl fimul loope loop jecxz in in (bad) (bad) decl call or in or lock repz lock decl clc or sti or decb (bad) jg push add add add add push or or or or call mov push adc adc (bad) (bad) decl adc adc adc push sbb sbb sbb sbb sbb sbb push and and and (bad) (bad) decl and and and push sub sub sub sub sub sub push xor xor xor xchg clc decl xor xor xor push cmp in mov cmp cmp cmp push inc push inc (bad) (bad) (bad) decl inc push inc push inc push inc push inc push dec push dec push dec push dec push dec push dec push dec push dec push push push push push push (bad) (bad) (bad) decl push push push push push push push push push push pop push pop push pop push pop push pop push pop push pop push pop push pusha push popa push (bad) (bad) (bad) (bad) decl arpl fs gs pushw addr16 push push imul push insl push outsb push outsl push jo jno jb (bad) (bad) decl jae je jne jbe ja js jns jp jnp jl jge jle jg orb push (bad) (bad) (bad) (bad) decl orl push test xchg xchg mov mov mov mov mov lea mov (bad) push nop push xchg push xchg (bad) (bad) (bad) decl xchg push xchg push xchg push xchg push xchg push cwtl push cltd push lcall push sahf push lahf push mov (bad) (bad) (bad) decl mov push cmpsb push cmpsl push test test push lods push lods push scas push scas push mov mov mov (bad) (bad) decl mov mov mov mov mov mov push mov push mov push rorl (bad) (bad) (bad) decl ret push les lds (bad) push (bad) push enter lret push int3 push int into push iret push rorb rorl sar (bad) (bad) decl rorl aam aad (bad) push xlat push fmuls (bad) fimull fisttpl fmull fisttpll fimul fisttp loopne loope loop (bad) (bad) decl jecxz in in out out call push jmp in push in push out push out push lock icebp push bnd decl repz hlt push cmc push (bad) push (bad) push clc push stc push cli push sti push cld push std push decb (bad) std (bad) call lsl add add invd wbinvd (bad) ud2 (bad) pop add (bad) (bad) lcall movlps adc adc prefetcht0 sbb sbb sbb sbb sbb (bad) (bad) (bad) decl and and and and and and movaps sub sub sub sub sub push clc decl xor xor xor xor xor xor dec loop cmp mov cmp cmp cmp (bad) (bad) (bad) decl inc cmovno inc cmovae inc cmovne inc cmova dec cmovns dec cmovnp dec cmovge dec cmovg (bad) (bad) decl push sqrtps push rcpps push andnps push xorps pop mulps pop cvtdq2ps pop minps pop maxps lock decl pusha punpcklwd bound arpl pcmpgtw packuswb push decl imul (bad) movd outsl pshufw (bad) (bad) pcmpeqb jne jbe ja (bad) (bad) decl js jns jp jnp jl jge jle jg orb jb incl test xchg xchg mov mov mov mov (bad) pushl (bad) lea mov (bad) seto xchg setb xchg sete xchg setbe xchg sets cltd setp (bad) (bad) decl fwait setl popf setle lahf push pop cpuid bt movsb shld cmpsb xcrypt-ecb cmpsl push pop rsm (bad) (bad) (bad) decl stos shrd fxrstor scas cmpxchg mov mov mov mov mov mov mov mov (bad) (bad) (bad) decl mov movsbl mov cmpps pinsrw shufps bswap bswap bswap (bad) (bad) (bad) decl lret bswap bswap bswap bswap (bad) psrlw rorb rorl aam aad (bad) (bad) psubusb (bad) (bad) (bad) (bad) decl fisttpl fmull fisttpll fimul fisttp loopne loope loop jecxz in in out out call (bad) (bad) (bad) decl jmp in paddsw out pxor lock repnz pmuludq cmc psadbw (bad) psubb stc psubd push ret sti paddb std paddd (bad) mov add add add adc adc adc adc adc adc adc or and xchg adc adc adc (bad) (bad) fildll adc adc adc adc adc adc sbb adc adc (bad) (bad) jmp adc adc adc and adc adc adc adc adc sub adc adc pushl adc adc adc xor inc mov (bad) pushl movsb adc cmp adc inc adc inc adc adc inc adc (bad) (bad) (bad) decl dec adc dec adc dec adc push adc push adc push adc push adc pop adc adc pop adc adc adc or adc adc adc imul imul adc outsb adc jo jno jb jae (bad) (bad) mov adc js jns jp jnp jl jge jle jg adcb adc nop xor test xchg xchg mov adc mov (bad) call mov adc adc adc (bad) (bad) call adc adc adc adc adc jmp adc adc adc adc adc jmp mov adc out and adc adc adc adc adc (bad) inc adc adc adc adc adc adc adc adc (bad) (bad) ljmp add adc adc adc adc adc adc adc adc adc adc adc adc adc adc (bad) (bad) (bad) fist loopne loope loop jecxz in in out out call adc adc adc adc adc (bad) (bad) (bad) out adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc ljmp test mov add add add adc adc adc adc decl adc adc or (bad) (bad) aas adc adc adc adc adc adc adc (bad) (bad) lcall sbb adc adc adc adc adc and adc adc adc adc adc (bad) (bad) ljmp sub adc adc adc adc adc xor adc adc adc (bad) frstor mov cmp cmp adc inc adc inc adc (bad) (bad) incl adc inc adc dec adc dec adc adc dec adc push adc push adc (bad) (bad) call adc push adc pop adc pop adc adc pop adc popa adc arpl (bad) (bad) (bad) jmp adc adc imul insb adc outsb adc jo jno jb jae (bad) (bad) (bad) pushl adc ja js jns jp jnp jl jge jle jg adcb adc (bad) (bad) incl xchg mov mov mov mov mov lea mov (bad) adc adc loop adc adc adc (bad) (bad) lcall lahf adc adc adc adc adc (bad) (bad) ljmp scas adc adc adc adc adc (bad) (bad) (bad) mov adc adc adc adc adc adc adc adc adc adc adc adc (bad) (bad) dec adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc (bad) (bad) (bad) fcoml fstl ficom fist loopne loope loop jecxz in in out out call adc adc (bad) (bad) (bad) in adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc cld adc adc adc cmp add stos (bad) (bad) incl adc add adc adc adc adc adc or hlt aas adc adc mov adc cld (bad) (bad) call adc adc adc adc adc sbb adc adc adc adc adc jg and adc adc adc adc adc adc adc jg dec cld sub adc adc adc adc lcall adc adc adc (bad) (bad) (bad) (bad) cmp adc inc adc inc adc adc inc adc dec adc dec adc (bad) (bad) decl dec adc push adc push adc push adc push adc pop adc pop adc pop adc (bad) (bad) lcall pop adc pusha adc bound arpl adc data16 push adc insb adc (bad) (bad) ljmp outsb adc jo jno jb jae je jne jbe ja js jns jp jnp jl (bad) (bad) (bad) (bad) jge jle jg adcb adc adc adc adc (bad) (bad) decl adc adc adc adc adc popf adc adc adc cmpsl adc adc (bad) (bad) ljmp adc adc adc adc adc mov adc adc adc adc adc adc adc adc adc adc adc adc adc adc (bad) (bad) dec adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc (bad) (bad) (bad) fstl ficom fist loopne loope loop jecxz in in out out call adc adc adc (bad) (bad) (bad) in adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc mov (bad) adc mov adc adc adc add adc (bad) decl adc adc adc adc or adc hlt clc (bad) aas adc mov adc adc adc adc (bad) (bad) lcall adc adc sbb adc adc adc adc adc and adc adc adc (bad) (bad) ljmp adc adc sub adc adc adc adc adc xor adc adc adc pop add mov cmp cmp adc inc adc (bad) (bad) incl inc adc adc inc adc dec adc dec adc adc dec adc push adc (bad) (bad) call push adc adc push adc pop adc pop adc adc pop adc popa adc (bad) (bad) jmp arpl adc adc push adc insb adc outsb adc jo (bad) jg inc notb jae je jne jbe ja js jns (bad) (bad) (bad) (bad) jp jnp jl jge jle jg adcb adc adc adc (bad) (bad) decl adc adc adc adc adc lcall adc adc adc adc adc ljmp adc adc adc adc adc (bad) mov adc adc adc adc adc adc adc adc adc adc adc adc (bad) (bad) dec adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc (bad) (bad) (bad) ficoml fistl fcoml fstl ficom fist loopne loope loop jecxz in in out out call (bad) (bad) (bad) ljmp adc adc adc adc adc adc adc adc adc adc adc adc adc sub (bad) cli adc adc adc adc adc lods add adc adc jg sub adc adc adc adc adc adc adc adc adc decl adc adc hlt clc (bad) (bad) aas sbb sbb adc adc adc adc adc adc (bad) (bad) lcall adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc inc adc mov movsl mov adc (bad) (bad) pushl adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc (bad) (bad) incl dec adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc (bad) (bad) call pop adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc (bad) (bad) jmp push adc adc adc adc adc adc adc adc adc adc adc adc adc (bad) (bad) pushl js jns jp jnp jl jge jle jg adcb (bad) adc adc adc adc adc (bad) (bad) incl adc adc adc adc adc adc adc adc adc adc adc adc adc adc cmpsb mov adc adc adc ss adc adc (bad) (bad) lcall adc adc adc adc adc adc adc adc adc adc adc adc adc adc (bad) (bad) ljmp adc adc adc adc adc adc adc adc adc adc adc adc adc adc (bad) (bad) (bad) mov adc adc adc adc adc adc adc adc adc adc adc adc adc adc (bad) (bad) dec adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc lods (bad) (bad) fist adc adc adc adc adc adc adc dec (bad) (bad) (bad) jg adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc pop dec cld call adc adc adc adc adc adc test adc fild or adc or or cli push inc pusha or adc push aaa xchg adc sbb aam adc inc pop popa sub call and adc or or adc sub call clc dec pop or xor xor inc (bad) aaa lcall pop inc rclb cmp je adc rclb inc adc lea dec adc outsl adc adc push adc add push adc jge add pop adc pop adc or adc pop ss imul insl adc jo jno jb jae es jbe ja jns out xor adc jge jle jg (bad) jg add adc xchg mov mov sub adc popl xchg adc adc insl js adc pushl cli cltd adc popf adc mov and add adc adc pop mov xor add adc mov mov mov and mov inc cld jg in mov adc ret pop fs outsb lds leave adc clc add int into adc pop rcl adc aad (bad) adc (bad) push fsts xchg lock adc or adc out out lock ljmp outsb in adc icebp adc mov adc pusha jecxz mov sti xor adc pop xchg add add add add add push or or (bad) call or or or or push adc adc adc adc incl cmp push sbb sbb sbb sbb (bad) (bad) call sbb sbb push and and and and and and push sub loop mov sub sub sub push xor call push xor xor xor push cmp sbb cmp push (bad) (bad) (bad) mov ds aas push inc push inc push inc push inc push inc push inc push inc push inc push dec push dec push dec push dec (bad) (bad) (bad) call dec push dec push dec push dec push push push push push push push push push push push push push push push push push pop push pop push pop push pop (bad) (bad) (bad) call pop push pop push pop push pop push pusha push popa push bound arpl fs gs pushw addr16 push push imul (bad) call insb push insl push outsb push outsl push jo jno jb jae je jne jbe ja js jns jp jnp (bad) (bad) call jl jge jle jg adcb push (bad) push adcl push test xchg xchg mov mov mov mov (bad) (bad) call mov lea mov (bad) push nop push xchg push xchg push xchg push xchg push xchg push xchg push xchg push cwtl push cltd push lcall push pushf push popf push sahf push lahf push mov push mov push cmpsb push cmpsl push test test (bad) (bad) (bad) call lods push lods push scas push scas push mov mov mov mov mov mov mov mov mov push mov push mov push mov push ret push les lds (bad) push (bad) push enter lret (bad) (bad) (bad) call int3 push int into push iret push rclb rcll rclb rcll aam aad (bad) push xlat push fcoms fsts ficoml (bad) (bad) (bad) call fcoml fstl ficom fist loopne loope loop jecxz in in out out call push jmp (bad) (bad) call in push in push out push out push lock icebp push repnz repz hlt push cmc push notb notl clc push stc push cli push sti call call cld push std push (bad) push jmp add add add (bad) call pop pop or or or or or or pop adc adc adc adc adc add adc (bad) call sbb sbb sbb sbb sbb pop and and and and (bad) (bad) mov pop daa pop sub sub sub sub sub sub pop xor add xor pusha pop xor pop cmp (bad) (bad) call cmp cmp cmp cmp cmp pop inc pop inc pop inc pop inc pop inc pop inc pop inc pop inc pop dec (bad) (bad) (bad) call dec pop dec pop dec pop dec pop dec pop dec pop dec pop push pop push pop push pop push pop push pop push pop push pop push pop pop (bad) (bad) (bad) call pop pop pop pop pop pop pop pop pop pop pop pop pop pop pusha pop popa pop bound arpl fs gs popw addr16 push pop imul insb pop insl pop outsb pop outsl pop jo jno jb jae je jne jbe ja js (bad) (bad) call jns jp jnp jl jge jle jg adcb pop (bad) pop adcl pop test xchg xchg mov (bad) (bad) call mov mov mov mov lea mov (bad) pop nop pop xchg pop xchg pop xchg pop xchg pop xchg pop xchg pop xchg pop cwtl (bad) (bad) (bad) call cltd pop lcall pop sahf pop lahf pop mov pop mov pop cmpsb pop cmpsl pop test (bad) (bad) call test pop lods pop lods pop scas pop scas pop mov mov mov mov mov mov mov mov mov pop mov pop mov pop mov pop ret pop les lds (bad) pop (bad) pop enter call leave pop lret pop int3 pop int into pop iret pop rclb rcll rclb rcll aam aad (bad) pop xlat pop fcoms hlt (bad) call fsts ficoml fistl fcoml fstl ficom fist loopne loope loop adc test in in out out (bad) (bad) (bad) mov jmp in pop in pop out pop out pop lock icebp pop repnz repz hlt pop cmc pop notb notl clc inc gs call stc pop cli pop sti pop cld pop std pop (bad) pop lcall sbb sbb add sbb sbb sbb sbb inc cmc (bad) lcall or or sbb sbb sbb sbb sbb adc cmp sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb and sbb sbb sbb sbb sbb sub sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb inc sbb inc sbb sbb inc sbb dec sbb dec sbb (bad) (bad) (bad) lcall dec sbb push sbb push sbb push sbb push sbb pop sbb pop sbb pop sbb (bad) (bad) lcall pop sbb pusha sbb bound arpl sbb data16 push sbb insb sbb (bad) (bad) lcall outsb sbb jo jno jb jae je jne jbe ja js jns jp jnp jl jge cld (bad) lcall jle jg sbbb sbb sbb sbb push mov mov mov lea mov (bad) sbb sbb (bad) (bad) (bad) lcall xchg sbb sbb sbb sbb sbb (bad) (bad) (bad) lcall cmpsb sbb sbb sbb sbb sbb (bad) (bad) (bad) lcall mov mov mov sbb sbb sbb sbb sbb sbb sbb (bad) (bad) (bad) lcall (bad) sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb (bad) (bad) (bad) lcall (bad) sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb (bad) (bad) (bad) lcall out out call sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb movsl icebp (bad) lcall negb negl clc sbb sbb sbb sbb sbb sbb sbb cwtl pop adc jg sbb sbb sbb add sbb stos (bad) (bad) decl sbb sbb or sbb sbb sbb sbb sbb adc inc add jo sbb adc (bad) lcall sbb sbb sbb sbb sbb sbb and sbb (bad) push sub sub out out or sbb adc in ss mov movsl cmp push push cmpsl ds add add pop push pop pusha pop push cmp inc test ja mov loopne mov mov test fnstenv or or inc call push cmp mov insb scas or push xchg subb mov leave xchg ret (bad) call sahf shll xor rcrb lahf loopw rclb cmpl add dec mov mov data16 mov cmpsb inc daa jl fisubr jl fisubr add cs jl,pn jo mov test xor jle cwtl enter pop jle jns fdivp ds push dec iret daa pop jle icebp or inc into cmp repnz sub (bad) insb sub or pop or cmp ss movl jl loopne pop es out inc sbb and les (bad) mov sarl push mov inc mov sbb es pop (bad) es out cmp add push fsubs xchg add scas mov into mov mov js push pop fisubl jmp jno loopne and data16 and in repz add and push adc sub adc xchg addb and cld adc or and or test mov xchg (bad) xchg sbb insl pop xor add into jo ja mov cmpsb xlat fisttpl adc in in call in pop clc sub xlat lret movzwl enter mov dec cmp mov jb call or xor push scas push call out sub andw loopne aaa mov mov sbb adc adc lcall mov loop incl push adc jmp sub add mov lahf aaa push and jbe sub rolb arpl xor or adc and test jbe jp mov inc push lock push push xor adc dec out sarb fistp push push push jbe andl mov lods xor mov inc add jae xor inc pop sub pop mov push jo scas gs rolb dec lahf mov xor in pop mov push dec enter aam in jb insb clc (bad) dec inc inc fiadd pop pop and lcall pop inc push fstps adc add imul mov xor cmp push mov mov dec sbb ja inc (bad) cmp and push fildl nop fst roll adc pop sarl or and jl out fist repz iret out inc loope (bad) dec loop imul jecxz ljmp xchg in in decl in or inc add push push call xchg data16 iret sarl out mov pop enter mov dec loopne arpl cmpsl (bad) sub push mov aaa or xchg pop xlat cmp or jl,pn or pop mov js fs or pop outsb je aas jg in add les lahf adc inc push xor jbe insb fisttpl fs and data16 movb cs sbb lock repnz fdivl jns scas (bad) pop out es mov mov inc fs repz stos lret fucomi jns cmpsl stc or sub int in aam out into push ds sar popa es xlat and sub mov mov (bad) ds mov inc mov stos daa pop addl mov testb sahf call int call dec (bad) pop cwtl xor pusha sub inc pop add adc sbb fldcw (bad) fildll and lret push inc iret xor enter orb movsb outsb mov dec daa outsb das es mov sub mov pop out mov push mov mov in rep mov outsl cmp ret push lret dec mov fcmovnu stos push pop in push cmpsl or outsb iret cmp lock enter pop push inc mov (bad) enter lahf sub pusha ret or insl repz and xor aaa setb and in sbb sub loopne roll cmp rorb lea add clc fcmovnbe cmpsl sub and sbbb mov mov and inc dec push daa and add imul das test xor dec push pushf rorb lock fwait addb or mov pusha pop daa movsb pop rclb add pop cmp inc push pop pop subl sbb rclb mov mov add jno add lds add scas shlb cmp and mov and (bad) sub loope cmp or or mov adc dec scas inc adc clc enter xchg push ret out fimul hlt dec fstpt (bad) add or inc dec mov add jo decl sbb sbb jle outsb push fild imul inc mov inc push mov pop cmp pop inc out out adc xchg xchg pop popf sub lret call and (bad) incl xor in mov or push add inc mov push adc dec mov inc sbb mov lods (bad) dec enter sbb testw and xchg or sub sarb stos push aam fmuls dec fldl jle cmp sar fiaddl cld sub pop test pop not mov or sbb push or or (bad) add sbb mov dec insl (bad) xor (bad) cli movsb aaa call mov mov aam xchg jne cmp sbb or pop fimull lahf hlt mov or dec in and (bad) pop adc test hlt (bad) (bad) inc std add in sbb sbb clc lea les push cmp addl ret jge add into movsb xchg cmc xchg or jl lods xchg and mov test fcomps loopne cmpsl fwait push and or repnz xorb inc dec push sbb adc push fild push cld cmp inc inc cmp cmp push sbbl into aas xchg orb cmp pop sbb and inc xchg lock mov stc cs add xchg loopne and sbb jo iret mov aad lock push jmp mov lock lods cli cmp dec xor pop adc jle rclb jle notb sbb jl xchg pop imulb leave jae jg arpl jl sub adc or iret push mov add push cmpsl add jp mov inc jecxz dec ljmp out sub mov xlat stos lock mov xlat mov idivl mov cmp sti pop mov je je shrb pop rolb loope mov push daa sbb or es jb and mov pop or sbb cmp cltd out push push imul lea add push jl ficom es dec and repnz (bad) ss wbinvd dec and push test pop fbstp inc and xor jp ds int sbb sahf pop push sbb cwtl ss fs hlt add std lcall div mov xor inc xlat push sub es mov jg leave cmp jl push fild (bad) lea mov lcall mov jns cmp push aad jo push leave lahf and and jb cmp push sub or inc sarl pop mov lods inc and insb mov jmp inc leave ret cmp dec cltd nop iret test mov es test repnz js jl sub dec push add lods arpl push data16 in xor pop fwait insl jnp lods mov jg pop pop data16 out insb rclb lcall into incl or push cmp mov (bad) in and es in mov push sub xchg pop sub enter push outsb test sahf sub in fldcw incb stos outsl mov inc jns fldcw out xor jnp into into repnz addr16 push or inc jle jbe push pop outsb outsl fisttpll enter popa (bad) loopne and ljmp jmp fidivr gs push push push mov or dec lock stc imul push sub add fmuls and mov das cltd inc jo cli and and pop sub sub sub xchg inc push test mov xor lret and pop mov insl and push jp scas icebp push int icebp pop mov inc lret popl pusha jle mov mov es push dec jge cmp pop inc rcl pushf mov aas insb pop xchg test out adc enter mov das lcall jmp sub jg scas cmp push inc pop imul (bad) push sbbb push outsl nop push mov add add ss das in repnz aas or js add and add push push das mov xorl pop mov adc (bad) adc jo pusha adc pusha (bad) mov push (bad) ds add mov iret mov test mov notb (bad) jl jge jl fstpt arpl testb jno cld arpl xor ja les mov fmull into call (bad) pop arpl sbb repnz lcall faddl and adc cltd sub insb arpl inc lcall add mov jns outsl sub and sbbb mov inc pop leave sahf push mov xchg out sbb and leave aad sbb and fmul das je sub push adc iret shrl (bad) xchg mov xchg pushf cmp ror insb ds repz fucomip aas mov mov repnz push jl or cmp and repz mov fadds (bad) clc push mov das jl rcrl pop sbb subb lds stc or or push (bad) test (bad) push or adc jns addb pushf mov pushf movsb repnz (bad) ja jg push clc bound in cmp sub add ss in shlb insb sub pop les insl xchg cmp leave and inc and mov loopne,pn insl xor call xor das add xchg inc and test es and add movsb sub sub cmp jno ljmp sbb cli out pop fildll sub repnz fildll lret (bad) enter pop and pushf sbb aaa aaa inc sub repz lock inc idivb loopne add jbe inc inc sahf push adc mov bndstx xchg add icebp push bound daa mov les scas mov lods push xchg cmpsl xor loopne and fimul stos or idivb jno pop push test xchg push cmp (bad) dec insl ja jb xchg fs add or stos cmp jb jae int movsb rolb subl je inc sahf out sub faddl sub imul lock and pop stc dec and call or ja insb jl push add jp iret push repnz js adc dec push inc sub cmpsl mov nop dec dec (bad) xchg cld xchg or dec and pop and push jnp aam dec nop cmp push xchg lea mov call inc clc jl mov adc fwait jle out push xor pop rcrl adc mov mov scas outsb loop stc add aas nop cld dec test mov fiadd mov addr16 jmp mov aam jle fcomps shrb out test call mov sub dec shrb add pop shrb lret sub shrb shll and sub (bad) ds xchg (bad) fistpl leave adc jl shrl sbb (bad) adc pop (bad) sub ret pop push lret out jge aam fiadd call sub cmpsl pop lret pop int jge icebp inc scas faddl sti sub jb loopnew xchg add fs pop or je add adc and sbb sub or in fisub (bad) shrl cmp add (bad) testl test aas mov push xchg idiv jl inc push push xchg xchg cmpsb mov adc pop (bad) and orl cld inc rclb sub loopne test test mov push in sub out xchg pop add and fcmove adc scas mov in adc or xor dec xchg sarl iret pop xchg test add shrb add push lea incl push into out inc adc or nop add orl push mov add jno pop push jmp and inc ret fbld fisubrl pop (bad) out cmp js test sub xlat and enter push xchg mov mov repnz sub push js inc mov mov in repz cs fwait mov xchg sbb iret lods movsl (bad) std js pop lcall adc mov inc pop add dec add out add or movsb (bad) and test mov fildll outsl add dec add scas and mov mov mov xor push add and (bad) pop jg push outsl popl mov sbb push jb (bad) mov adc dec and mov mov adc jo rclb in pop and jecxz jg in xlat xchg dec enter (bad) mov mov inc nop testb cmp popa call or mov (bad) lret mov add dec mulb add nop int repnz lea xchg mov mov jb aas sub adc pop dec mov pushf adc mov incl pop push sahf pushf add or mov adc stos into mov push sub or sbb inc ds cwtl mov enter adc nop fldenv and nop out xor ret adc je xor les movups inc xchg mov or and inc icebp push adc icebp iret out leave mov ret pop inc pushf adc sub add mov insb push mov pop push pop and adc sbb pop inc leave out or pop push jl pop call add mov add sbbl sbb movsb ficom movsb add jne xor enter add xchg push jo xchg loop pop cmp int3 add fisubrl or adc fs stos mov pop push (bad) ja push outsb fcomps rcll popa jb adc sbbl pusha or jbe jnp jo cwtl pop (bad) cmpsl es je lea movl sti cmp rorb ljmp push rorb and lcall cmp fsubrl jo add push mov in enter cvtdq2ps jne inc add sbb js cmp mov and xor sbb insl sub (bad) xchg push aad mov pop xchg (bad) nop push call out jl stos mov xlat xor xchg cli push (bad) aad mov sahf cld insb mov nop xchg sub cld xchg outsb ljmp and das in add add das sahf lcall inc push pop cltd pop sub daa imul (bad) stos cmp fwait int repz push sahf jbe out imul ds imul inc push mov cs addr16 jge int ss xor inc adc imul call (bad) repz incl xchg daa enter push insb push pop lods test jbe ret add adc rcrl ljmp jnp cmp flds fsubl int pop push dec repz mov dec push xor fs jg pushf and pop cmpsb jo or mov pusha mov push lods iret int stc dec cwtl js mov fwait push push cwtl dec clc push sub mov xchg mov or dec mov pusha imul fwait or es mov leave (bad) cmc cmp daa sub aas push cltd or and pop (bad) dec and jl (bad) mov (bad) repnz inc ds test pop clc fs dec cmpsb fs cltd dec outsb hlt ljmp push stos pop jl or sbb jns repnz repz cmpsl sub test pushf inc ss mov fwait sub push push xor add mov das clc inc push mov jg inc das xchg (bad) bswap inc das (bad) aaa das faddl test inc and fwait add nop dec and lds jb stos ds sahf (bad) shrb das sub int mov push enter into or or iret repz mov and sahf out jl or aad (bad) jns out sbb pusha clts dec sti mov in cmp push fadds push dec pop sub test pushf add loop nopl cmp insl es scas insb popf xchg cli jns dec xchg loopne repnz enter sbbb insb test push sahf dec or enter push out sub aas fldcw and popf cmc push adc jbe idivb mov out pop lret or push out imul jg inc sahf push in sbbb icebp push out stc sub (bad) negb shr mov pop sub inc sub or lock push insb lahf jl test fistpl jp add lcall test nop dec pushl idivl push rcll dec push push cmp push shrb adc out cmp dec in inc aad xor ficoml pusha lock (bad) (bad) ss pop clc es in mov hlt adcb mov (bad) jo pop data16 sahf sub xor sub cwtl sub jns test sub cltd sub push push or lahf sub loope pop or test xchg push cld jge out dec sahf add hlt sub dec and hlt sub divl mov stc add les sbb sbb inc inc enter sbb fsubr adc stc lea add sub lock add aaa sahf subl repz stos push out das popf push adc repz inc pop (bad) xchg test sahf out cmp in or sub pushf out popa js fisttp add dec movsb push stos das mov nop das add pop movsb ret add insb push shlb out pusha call pop out loope push add movsb insb movl pop push adc neg mov inc out cmpsb or push jmp xor sbb sub pop scas pop outsl push adc mov pop rcrb pop test scas scas pop fs pop enter aam insb sbb inc out mov inc xor or sub hsubps roll iret loope sub iret cmpsb dec push push mov or dec add js cmpsb add add pop (bad) mov push or inc ja pusha call push jo (bad) pop xor fisubr call js sbb mov in mov stc add cmpsl daa push lret and dec je jg js xor call add jns sub (bad) (bad) scas push mov les (bad) addr16 sub pushl ret outsb sbb mov in fsubs add sbb mov (bad) jo fdiv in cmpsl cltd iret out add jb dec cli movsl and test xor cmpsb mov inc repz cmpb add mov test add sbb inc and inc das add insl add sbb push mov dec dec xlat xchg add sbb and out iret push or (bad) or les sub das cli sbb adc test xchg shrb add cmpsb es xor cmc add jb and push dec sahf idivl inc dec jl cmpsl (bad) push push mov xor cmpsl fstps or cld cmpsb add xor dec sti adc add add out mov (bad) mov rcrl sahf imul inc add adc dec sti push dec add sbb adc enter scas and xchg sub add adc fmull into dec leave sub adc add clc (bad) scas inc add sub add push xchg add push pop mov lret clc adc cmp loopne scas dec call ret mov sbb xchg testb adc push pop mov rclb add jo pushf and xor and data16 jle inc rcll or jnp and daa and cmpsb jo or clc cmc push pop dec add add inc inc mov push and pop push jp incl or sbb dec movsb push adc jnp xchg jle nop out daa in push lock call add jmp fstl or out scas adc lahf sub add pop add jns pop dec dec or lods dec push cmp push enter inc push dec add ds scas add dec push mov mov mov xchg or pusha ja lret and dec sbb out fwait sbb lea nop hlt js cmpsl ror or sbb and xorb rcrb testb (bad) push pop jbe mov add push lds jno push mov out das pop pop dec pop dec enter out dec jne push dec jnp inc int3 jl,pn pop xor lods or cmp arpl int jl (bad) ja es pop rcll add and (bad) mov pop (bad) lret and les jo mov (bad) pop ljmp rolb out dec out mov out add andb mov push xchg add inc adc out bndstx add pop enter inc adc into roll out aam pop clc dec pop add add sub mov mov and pop adc sahf cs xchg xor aad outsb xor sub call pop jecxz das cmp int xchg out add das pop leave jae pop add das aaa mov ficompl push dec sahf arpl mov add mov push push or loope das xor dec jle sbb and into or pop clc mov rcrb ret mov into loopne lret cs or mov and adc repnz cmp movsb hlt mov fwait rorl or inc pop repz dec lods mov adc (bad) push cmp xchg ds movsb push mov aaa das mov push test lcall int int rcr shufps ffreep dec cmpsl jb sub inc ss idivb push int3 pop xor lods ds repz push inc jle (bad) insb lods cltd leave daa ja push jne in rcrb jnp mov or inc pop stos cmpw arpl in in daa rol dec rcrl push cs dec push inc ja push pop mov in pusha mov sub xor int3 sub add scas jb out push jmp adc sahf lock lock lock mov add mov mov add adc cmp js and jmp cltd inc cltd fwait sti ljmp xor in xor jnp aas xchg call sbb add lret ret loop fsin push and cli cmp js add negb pusha jo call mov into sbb push test push outsl pop and cmp nop aad insl push sub mov cmp loope test movl sbb lea push rorl movsl and ss loop stos imul ds inc push incb fmuls mov adc dec push (bad) mov or xchg into pop or sub pop sbb lea lret jnp lea sbb or add cld adc call jmp fcomps hlt or adc dec adc cwtl sarb sar pusha mov incb mov imul outsb add notb mov fisttpl or mov adc mov aam inc lret mov outsb insl loope cmpsb jnp jmp dec or ret test push int3 jne outsl cmp in in lds loopne or fisttpl add jb pop or push popa dec or pop fs sbb cmp es lock dec enter test mov pop mov inc lcall pop jg pusha jmp mov inc call out cmp push inc cs fincstp lea xor xor mov cs xor movsb mov sub sarb sub fldenv mov sub aas mov daa nop fwait cmp sub shrl das or pop in jns loop das (bad) mov mov scas (bad) subl sarb cs pop dec xchg push (bad) cs faddl out sub cs add cmp out push ret jns mov fs incb pop pusha mov loop popf daa ljmp outsl mov push mov outsl das xor outsb sbb pop das fistp (bad) repnz sub sahf sub push daa (bad) and xcrypt-ecb cmpsl or and sbb cmp imulb cltd mov dec or icebp add outsl xchg sbb xor and push fnsave das cmp and mov out das (bad) aaa cmp push mov pop fs icebp push outsl mov jl jecxz adc add pop pop xor xchg call pop cs mov xchg mov adc das das sub and rcr arpl pop pop sbb add rcpps xchg nop sub sub test sub mull enter lods orb shrl mov pop dec add mov enter (bad) pop lods pop movsb iret aad mov add enter adc sbbb sbb push inc jnp shrb pop or mov mov inc lcall sbb add xor mov cs seto cmpsb sbb pop mov sub loop cs stc loope out cmp outsl mov pop das adc add pmulhuw or mov loope imul cmpsb pusha jne dec mov push jg pop scas in lods movsb popf xchg add scas cs sub sub inc xor xchg out pop xor jns in (bad) cmp push push popf test or mov xchg stos xchg xor mov dec jle subb add lahf add pop lret or or add push sarb pop mov out fdivl add das negb mov add scas mov (bad) push inc ret out je stos cmp sub jl xchg loopne pop cs scas rol sub pop ja adc lods mov iret fisubr dec mov xchg out lcall fcoml mov pop outsb nop and inc cmp or stos adc jne or mov mov cltd and rclb adc cmpsb dec mov pop pop and add outsb cwtl sbb iret dec xor scas jl fdivr (bad) xchg popa xchg setp cmp into inc push xor js cmpsl and dec jae add test or add jne push pop int3 push xor test cmp dec scas nop ret mov ret add ds ljmp cs inc cmpsb or mov add ljmp das mov sbb arpl cs xor stos inc ja iret sub xchg out mov das mov sarb mov repnz sbbl dec lcall xor lds movl scas push fldl inc outsl rcll pop pop adc out insb scas fimull mov adc mov stos (bad) cmp push outsl stos xor das add mov mov sbb movsb jo jae or or into pop call fwait mov mov or push xor dec push push cmp jnp sbb add inc add adc fisttpll sub push and or jmp out add mov lret dec mov aas sbb push sbb cmp mov lcall popa push addr16 xlat cmpsb push movsb (bad) flds (bad) (bad) jbe (bad) aaa mov or and movnti hlt jge jmp mov (bad) xlat add lret xlat and push (bad) sub out adc fsubr push or jl and or pop fcoml add cmpsl test pushf or add mov jmp or inc xchg fwait cmpsb inc xor movsb sbb xchg adc pop sub pop xchg inc pop jp les fbld rcrb push adc out outsl loopne sahf and dec add adc cs add sub add xor in leave push adc andl push cwtl mov mov call jmp notl das inc add sbb add jl jmp pop xchg pop xchg pop fild loope push enter push test pusha mov ret push mov or js pop push lret xor mov xchg pop inc leave adc add mov jns (bad) cmp jl lret daa jl jnp and cld je daa jl (bad) xor cs add loop sub clc or add jl push loop data16 orl aaa xor add add sbb push dec (bad) pop pop das xchg es pop insb jle nop sub loop push adc jl,pn mov jl dec push pop sub dec push jl sti pop pusha es jp push xchg mov xor gs scas cmpsb push jae cmp xor idivl or mov bound lret js adc insl scas test pushf and insb dec aaa in sar out dec nop xchg (bad) sar nop lahf push push mov jl mov fnstsw stc push xchg les mov clc sbb lods jo outsl jle inc push dec fwait inc ret adc fs fdivl das insb mov push fstp mov cmp cli add adc cwtl and mov data16 mov and (bad) decl (bad) dec dec out adc sbb or adc movsb (bad) (bad) lcall loopne xor mov clc pop jne,pt mov jmp mov cmp out aam adc push add outsb pusha inc mov jmp pop rol sub pop mov mov shr pop shrb daa in or (bad) xchg lahf in sub push push adc movsb iret mov sub (bad) add cltd adc (bad) sbb call adcb loope push jmp jnp pop xchg mov jo or adc adc xchg cmovns fldl inc xor pop xchg pop push ror or xchg in or inc jnp or movsb push adc jp inc inc sbb ja adc mov jle sub push aaa cmp sbb jns jl push push push xchg (bad) mov mov nop jo test push and push add sbb inc imul cs cli das push clc dec sbb inc cmp shrb add repz mov adc mov ret mov dec js and jnp push adc jb ss fwait in subl mov in jne,pn sub testb insl cmpsl lahf push lret dec cmp scas ret xchg out les add mov int xlat jne lock imul xchg cmp push push fsubrs das xor leave jae iret xor xor adc imul outsb xacquire and jnp das out das repnz mov out das dec xor int out add xor add fldcw lods dec pop cwtl cwtl icebp push imul nop pop pop push sub mov lock pop lock add in or loope and and and and loopne mov and sbb xor add enter das nop rcrb add xchg fisubrl lahf fiadd sbbl rcrl jo push mov sub add insl iret sub push add movsb imul out nop shrl aas mov jmp ss push cmp dec mov add add outsl out mov inc repz fidiv out imul adc (bad) mov and xor ret ficompl das pop (bad) and lock (bad) mov (bad) dec mov dec (bad) add mov test mov (bad) mov jns in mov inc nop push adc dec jp or jnp mov int inc add and adc mov cmpsl xor cmp aad ret push dec sbb dec mov fistpll inc mov into pop xchg clc mov lock push int mov dec dec xchg pop stos test stos jmp fcmovbe xor movl in fild mov insb rorl data16 add xchg cmp mov ja dec xchg adc inc inc mov sub adc sbb or sbb mov jle popa jo js cwtl push (bad) les aas push sub jb push das xlat ds pop add (bad) cmp add add cli lods mov (bad) jnp repnz aad call hlt jmp pop mov aad jg push cmc add andb or pop sub lock orb cmc outsb test sub add fildll out das repz push mov push das or jns push add jne or xlat das mov (bad) les arpl xadd xchg inc test loopne inc loopne,pt mov rcrb push inc and mov cs xor out pop sub xor ret dec jnp fsubl scas sbb bound adc enter and adc mov test jb aas push pop and jae in add data16 adc jl push bound dec inc mov jbe loop daa cmp fcomp iret add mov ja lock lahf insb xchg inc lahf dec mov out cmp cmp das mov and xchg push jmp cs rcr cmp jo adc mov xor pop pop adc sahf adc outsl sbb pushf rclb inc cs jno adc cs mov test adc cmp insb dec xorl lods dec js neg and rclb rcrb jns cmp in fcompl mov nop jno addl inc stos mov je inc inc adc in test mov add push push inc lret les inc and mov or or loop lods mov sbb adc adc outsl mov loop pop mov fnop xchg sbb cmp and dec sahf mov mov xchg rolb hlt mov in or lods loopne loope dec dec (bad) and or lods shrb andl ret mov jmp mov and out lds add or xlat pop rorb xchg vpaddw dec insb cmp (bad) (bad) in mov or xor or push in inc (bad) js mov mov push pop loopne in add or mov jge gs movsl popf sbbb inc pusha movsl mov shl push pop mov test push mov jo and adc (bad) pop xchg mov out dec insl mov call mov xchg movsl dec push and divl dec or inc pop push push sti cmp dec cmp js daa jl test adc mov es setl add jnp jg arpl ja push cmp mov inc lret pop jae jle outsb add aaa cs mov cld cmp or or xlat xor daa and rcrl adc cltd es push cli xor push pop push divb mov repz movsl and test add scas hlt adc jl (bad) test mov jne pop daa (bad) (bad) xchg jb adc lahf push adc lcall sbb daa jl jne jl inc xor out cs dec adc jb iret and je or in dec pop jl divl jmp insb ss mov dec jns cmp (bad) lret and mov inc call in daa les mov inc sahf push outsl es movsb test fwait push xor leave dec push xor (bad) mov cmp mov xchg or dec adc lahf std sbb test ret and push nop iret push xor push xor mov push lods out (bad) xchg rcl xchg inc das repnz test xor cmp jecxz pop shrb lahf push clc or fistpll out add adc push dec or pop dec sub cmpb js (bad) jo jno scas imul iret nop inc jmp repnz je in ljmp and mov data16 jnp add out push xchg jl mov add add adc in xchg cs dec mov add cli mov cs fistl mov frstor push xor push and test lods int prefetch or es ret or out bound (bad) jo fldcw push mov mov mov push add mov sahf aas stos push mov nop int ljmp call pushf clc in arpl inc sbb cmp pop and iret xchg sahf and pop lahf aam push inc pop es rolb lahf xchg test mov push cmp data16 les incl mov sbb xchg push and into cs lahf imul and dec push inc test mov das lahf sbb adc jge push sub lds (bad) xor daa xor sahf dec ds test lods dec andps movsb push hlt mov (bad) push mov pop repnz faddl ds pop test repnz movsl inc es pushf es dec lea adc pop (bad) pop enter ds es jo push push or jg repnz cmp hlt fistp xor enter mov jo xor inc repnz in xor xorl inc push test loope xchg aaa pushf cmc cmp xchg jle mov ret sub xchg ss xchg decl mov (bad) clc dec inc add push dec jne aaa and outsl xor add push mov push and addb or inc adc push lahf xchg mov adcl das outsl pop xor xor das out add inc and cs lods push outsl decl push pushf mull mov in lods pop jmp int3 idivl stc sahf jb and sub and nop iret inc xor pop add into test and mov mov es daa lock dec inc jns mov addb scas adc cmpsl adc addr16 shlb scas xchg sbbl sti pop push repnz push pushf xchg cld jbe,pt cs push cwtl mov into test lock cld roll lret cmp cld or ret or out add ret sbb cmpsl add sub ss jle enter jg add push movsb enter pop sub fsubrs push adc push and jmp (bad) movsl add cmp and das mov dec inc cmpsl adc ds inc sub enter add ljmp and aas orb add scas clc incl mov lret inc popa (bad) (bad) decl std jbe cmp push roll dec fisubr test and fisubr enter test sub insb push rolb int3 add cmpsl push mov add loope add mov ret pop sub nop cmp inc repnz cs es jne test mov mov sbb push js negb or pop pop scas out sahf sbb in xchg add fisttpl leave add cld test add jl fild (bad) dec cs sbb andl mov mov adc in das dec dec add movl push xchg ja dec adcb jo ret clc jmp subl xchg mov sahf mov push orl pop enter or rorl js add mov cmp (bad) push cmp or inc or pop repnz repnz daa das xchg or dec mov nop int push fmuls dec (bad) jbe dec adc enter or adc in or dec cwtl cmp pop leave inc sahf aaa dec or jl cltd add insb (bad) jbe dec rclb add adc nop pop inc nop or in fmull xchg inc shrw dec jg mov sub inc and fstps and repnz xchg jl repz repnz in mov cmpsb in add mov jns test fsubs repnz daa das sbb push inc es pop adc dec dec ds xor dec push jb add (bad) xchg test leave mov mov add push (bad) xchg dec lahf rolb sahf cmp jg adc jl adc pop and adc inc loop dec mov xchg movsb adc xchg push adc je and repnz enter add imul mov dec adc add cmp out and mov leave dec push fimull out cmp mov push je dec dec dec inc and and repnz inc sahf mov pop and sub divb ja dec xchg pushf mov lcall sbb mov repnz mov sbb in lret cmp lods adc insl fdivrl and sub mov pop add ds dec ss sbb push (bad) or pusha dec popa or bound in clc xor dec or cltd (bad) push aaa pusha jbe cmp add shrl sbb scas xchg imul adc pop push push adc cs inc and push testl rclb test xor nop or scas inc insb dec adc xor aas pop adc sbb add pop test test nop daa das xor aas xor scas and (bad) into push dec and ds xor repnz dec pop das jl pop das loopne das scas dec cmp cmpsl jp sub sub and and cmp mov enter adc addl addr16 rol daa int3 adc and rorb push add hlt mov sbb ja sub xchg jmp push jo xchg es lock push iret stc xchg add (bad) stc movsb fs popa mov rcrb sub rcrb (bad) or jecxz sub mov lret ja xor scas dec (bad) inc divb jno jae xor into sub movsl xor test adc aam xchg sub and push or inc or and out fsubrl sbb pop scas test lods cmpsl and or movsl ret lret inc sub add dec mov pushf cmp cmp add xor inc and push jo add and ljmp gs mov xor xlat inc sbb and or xchg cmp mov add add mov sbb mov mov shr lcall add repz mov adc jno inc dec xor jb push cltd and ret mov xor push enter sbb jmp bound sub in notb xchg inc inc addl and dec test jmp cmpsl inc rorb push ss out add std push arpl xor push add movsb imul (bad) (bad) pushl aas xchg ficom inc jbe add adc loope or dec and dec fnstcw mov sub xchg inc or xchg mov jmp decl je repnz mov mov jp add pusha add test das jle test fidivl push mov dec xchg and jae js jge pop push add mov sbb adc push ja mov clc outsl (bad) xchg test insl adc jbe xchg add je mov and jne or int and std jo mov xchg dec mov pop jo adc loope sbb add adc sahf fs jmp nop lock adc out (bad) adc adc jecxz add adc xchg xor mov xchg adc nop xchg pop fcom adcl sbb inc ljmp lock xchg pop mov gs or pop push inc js sbb jg jo push cmp push add das inc lods imul pop or inc lret pop sar inc (bad) and pop sbb fdivs fnsave bound (bad) ja out pop mov jp pop enter shl es mov add push stc mov and mov jle sahf add lea lods ret pop subl sub fs mov push cld xchg push daa xchg cmp xchg fildll mov and dec jg sbb jl (bad) imul cs idivl sahf jge adc push jp es gs sbbl fildl incl adc decl cmp insb mov add dec sub mov ret fs sbb or xchg daa ficomp enter and shl mov (bad) daa ja fs js cwtl mov sub sub repnz jo repz lcall fnstcw sbb cmp int sub enter test (bad) add adc and jg cwtl xchg fs (bad) ficom rol xchg mov das push mov std push inc ss sub into add rolb lret push xor arpl xchg pusha add out enter dec sub mov sub stc sbb sbb loope push push ds dec add andb mov (bad) inc xchg jo xchg mov inc lock test ret andl test ds int loopne mov jae fnstenv sbb adc push push xlat insb mov ret cmp inc mov add imul int or iret and and fwait adc idivl es pop jg adc cmp xor dec pop les aas pop outsb pusha (bad) inc xor out push and mov and popf daa mov fildl sbb push das int repz and mov pop mov mov pop adc cmp pop enter push fsubr xchg mov push cmp outsb dec sbb cmp inc push sub into mov dec inc insb mov mov dec push rclb or add rcll xchg xchg inc ficompl or or (bad) mov out lea and add add mov jno or mov and clc xchg outsb sbb push icebp and push and push push addb stc sbb cmp fs les add xor mov pushf cmp dec xor inc fnstenv out dec pop or jle lret bound pop into add and js pop pusha adc xchg and and push js je xchg pusha sub sub and aas addb enter data16 fwait aam jae add pop dec or mov lock js popa addr16 lret test and jge mov mov movl sbb and cs int lock pusha je adc and repnz or sbb jmp (bad) xrelease push cmpsb fs xor or inc mov cmpl mov int3 pop or push hlt incb push xchg push lahf lret and sub pop pop xlat int mov xchg mov test addl adc or out or or movb jle call xor inc jnp pop scas les fistl movsb push nop jp xor outsl xchg lcall sbb lcall mov rorb (bad) icebp push test (bad) ljmp sarb push repnz imul add test jl jo or push add and in call sub add pusha ss cmp inc xchg lea sub inc xchg push mov shl (bad) clc jle dec pop clc push mov sub lds mov push push (bad) insl mov mov je and add pop pop and adc mov ret push jo mov mov sub mov (bad) ret jp sub mov mov je in push pop dec call test aad in push aad inc outsb jecxz test push ja adc or fstpt xchg loop out xor jbe jl xor mov cmp mov iret jge fistp je cmp mov add (bad) js pop push es mov orl pushf add outsl stc test sbb and pushf fucomi fiadd addl clc adc sub xchg pop add out loop jo adc call dec ja push xor (bad) pop cmp pop adc cmp inc js mov rcrb sti inc cs push ret es inc mov les adc pop (bad) and jg rclb orw (bad) (bad) add adc xor fcoml inc mov adc inc inc xlat sbb push cld mov sub push (bad) outsl inc les add arpl add cmp orb loopne mov in mov call les adc cmc cli and xchg testb adcl push xchg movsl pop sub loope and cmpsb sub adc or mov aas xorb adc call inc cmp pop add enter cmp mov mov add pop or icebp xchg sbb rolb stos smsw rcll out ds dec test push sub ds popa test popa shrl in mov jno mov push add mov jmp cld addb or aaa testl cltd push fistpl (bad) cmp inc sub sub out aaa add and loopne insl ljmp testb iret push jno jo sub out mov sahf mov js sbb xchg jbe imul add push mov or (bad) das or push sbb daa fucomi fistl loope,pn sub das cmp xor pop xor out xor cmpl popa and mov dec inc outsl arpl rol (bad) ret push movsb lods xor mov or push push push gs jo test cmp add mov jp inc dec cmp pop dec inc mov inc jns adcl adc insb aam or mov out and inc ret push adc hlt cltd loope mov mov adc jg lret out xchg adc or pop and daa pop stos xchg (bad) mov psllq lods (bad) add xchg xor dec mov sbb cmpsb ficom push addr16 cli inc inc jp xor (bad) pop pop adc cmp mov imul loope iret mov out dec cmp sub call ja sub push or inc push xor push notb sub lock call fcompl ljmp adc sbb pop push clc pop negl sbb cmp mov int3 dec loope add test xor lea sbb lods inc out pop and pop clc inc lea mov add adcl pminub je pop mov cmp inc arpl lods or jno out cs push nop ja mov stos adc leave (bad) cli mov je dec push or push sarb cltd push test pop sbb test fldcw xchg push mov and ja xor (bad) sbb lods mov adc or (bad) std (bad) out adc mov in inc sahf insl lds xchg dec inc pusha ret (bad) pop mov xor je std je out adc es addr16 mov scas mov add pushf loopne xchg jge test dec mov adc addl leave add mov ret push imul sti enter les scas mov aam icebp stos push adc pop jne jmp cmpsb sbb addb out in push aam popa xorl or ds push ret and mov (bad) xor adc jmp and les fnsave fistp adc sbb pop sub or fimull push nop dec cmp or ja jbe ds scas sub fstps push dec push and xchg aaa mov add lret daa fist or xor push ret pushf cmpsl push lods clc das adc movsb nop xchg add adc inc fcompl scas dec popf rorb fdivl ds cmpl cmpsl push pushf sub push lock in rolb repz mov push or mov mov jne lock popf xchg cld scas dec ja push nop out inc or xor ljmp jbe in cmpsb mov xchg imul adc jo call loop mov test push pop sub fadds adc outsb add scas dec adc pop pop scas lock std sbb sbb loopne test in pop scas test dec push addb fcmovne adc lcall dec mov jg dec sbb aam dec in sub pop add mov mov adc or xchg inc repnz jmp iret pusha or and iret adc fadds sarb int3 push and pop sbb push xchg mov (bad) cmp loopne sbb aaa cmp pop mov mov cmp jo (bad) jg push fisttpl jge iret lods dec cmp mov mov mov leave negb test cmpl or sub jle subl ret js push push movsb dec rclb outsb sbb push cmp cmpsl ss ret ljmp mov les mov sbb out idivb sbb mov adc mov jmp mov ret mov add cmpsl add jo je fiadd sub stos xor add stc call jo sbb (bad) adc lcall and add ret movups jmp sti mov mov inc jecxz jmp lea cmpl xchg push insw mov push rcl inc insb xor or loop jmp mov leave test add insl shlb adc jmp enter call pop (bad) test psadbw aas outsl or push notl cmp imul or cmp adc ficompl mov pusha js aas push es mov aas mov nop cmp loopne pusha ds addr16 scas outsl adc fmuls mov aas (bad) js jl out nop inc jb and adc fs jns,pn and push mov jo inc inc and jb fisubr mov int3 (bad) inc push rcl cmp stc loopne rclb cmp mov in push call out nop in mov enter ds sbb or pusha mov and aas pop insb xchg (bad) out popf mov jo aas je,pt sbb mov iret imul jns cmpsb call push cmp out movsb cmp push jo lahf lds dec mov das cld lahf mov mov inc push rorb cmp push and adc cmpsb repnz cmp add jns fdivp push orb push outsb out or push mov mov setg (bad) cmp nop cmpsl lods jnp pusha dec push fs cmp and push inc cmp jg mov aaa inc cmp fdivs lret inc les xor mov push iret (bad) (bad) iret adc dec ss sub cmp adc push cmp add roll inc das leave mov inc adc fimull aas mov nop addr16 pusha test (bad) addr16 js nop pop add xor test rorb insl loopne mov xor fidiv loopne push inc movlhps add adc data16 push cli sbb push and pop cmc lret adc js sub pusha xor or pop mov add or lret movsl imul dec stos pop lcall mov sbb mov add adc js jmp adc lcall (bad) pusha ja call jg adc xchg call ss out adc mov mov movsb daa addl call inc sub (bad) std inc fcmovne fcmovbe pushl roll jmp icebp sub dec cmp out sbb insb add call (bad) jge inc dec out xchg daa xchg and jmp push inc shrb mov test enter and add and rorb mov ror dec or ljmp push ret icebp xor lods imul (bad) push shr dec adc push imul jmp dec adc cs fcom push add pushf inc sbb push dec (bad) inc (bad) sahf xchg in push push in enter xor sbb lock mov xchg adc pop add (bad) or test loop push por cmp sahf sbbl jnp pop mov adc mov cmpsb push popa xor dec lock les lds push (bad) jne jo popf xchg xchg rolb movb popa scas popa mov mov stc and sub out in fdivr mull mov xor hlt sbb jmp xor fs iret movb push sbb es ret pop lea mov hlt dec xchg mov orb inc loope nop jge rol add push jmp add or cmpsl push push mov mov inc movsb (bad) icebp add xchg nop outsl cmpsl push js test and jmp jp lcall dec loopne jo lds cmp push arpl mov repz hlt push mov (bad) mov addr16 popl mov ds jo add aaa adc pop in cmpb pop iret xor fbstp push rcll (bad) pop and pop movsl jg mov sub mov push push xor test dec inc add fldl ds lret clc push mov pop mov ret test and ret (bad) (bad) sbb ljmp inc mov mov xchg (bad) neg push (bad) xor rcrl adc mov and push (bad) cmpsb adc mov jmp scas or testb test adc aas mov or push push (bad) xor xchg loopne or cli mov dec pop and nop adc fbstp pop xchg mov adc dec movsl out inc and lock jo sbb jo shl scas jl add icebp push test xchg jge (bad) frstor cmp test adc int3 adc push fldt pop jo add xor jae jecxz sbb add pop clc gs movsl jmp mov sbb test outsb leave pop push jmp or dec fwait cmp dec cmp je outsb dec pop push (bad) jne adc jge or jo sub movsb lret add dec js add push and and rorb jne sbb dec mov sub push push sbb dec lods xchg leave cmp dec insb mov movsb es or sti cmp mov jb mov js sbb push cmpl lahf repz dec cmovne jo aad cmp rol add xchg in push xor ret cmp sbb mov rcll mov out jle push and mov xor push loop (bad) xchg xchg mov lock sbb mov or in sahf add sbb movsb adc fmul pop mov mov pop sub jecxz mov pop push mov inc xor jp dec and or or add bound je dec dec lcall mov je mov or jno add or cmp or add je cmp push (bad) cli pusha test call jns test xchg or test jo sbb dec push jecxz es xor add xor icebp fidivl cwtl jg cmp dec xchg and bound mov adc xchg push xchg out cmpsl enter sar pop pushl or orl add sub fcmovnbe nop cwtl sarb (bad) sbb jnp fsubrl jo xor repz test es mov xchg add cwtl sub push ds cli jmp aaa (bad) xor or adc sbb hlt decl incl cwtl nop incl push or cmp cmpsl cld hlt mov nop js xorl pusha jge pop xchg adc sbb imul cmc pop test push leave test or pop lahf push gs xchg outsb dec inc test mov push mov cmp mov add mov clc xor or decl ret mov jmp pop pop (bad) je mov xchg lock sub jbe pop and std lock mov call rolb push dec cmp idiv pushl inc movsb (bad) mov insl sub enter lcall repnz leave js push push jo in adc cltd in sub test aad sbb movsl dec pop test adc int3 and xor ficom cmp loop,pn or pop and sub push mov inc mov push fild or push rorb push clc call xor lret adc jbe xor int3 (bad) insb mov or inc jl repnz lock js xchg stc (bad) xor (bad) adc mov lods in push push mov add out or jnp dec xchg cltd (bad) or jmp pushf mov add cmp cld test xchg adc mov jle cmp mov mov (bad) imul adc jp ds orl aaa xor and ja or xchg pop add inc add add pop mov pusha push jecxz bound (bad) xor das out xor push jne negb ret stos mov mov mov cmp or sub mov je pop xchg enter mov inc mov jb hlt and inc scas sbb sub in jnp add xor pop mov or and outsb and cmp adc push dec (bad) xor test addr16 in cltd and add fld stos ljmp (bad) cmp mov dec or inc add daa loope dec pop sbb outsb (bad) jl pop sbb sub sub sbb sbb movsb push inc and adc test xlat or testb or lods push xor xchg rcl pop xchg mov push jle adc push int loop in ret inc and or dec ss and xorb push push mov inc pop addr16 mov mov bound adc push push dec dec orl cli enter or add add mov sub push mov inc sub or xor ja and jmp cmp or rclb aas mov and je pop clc test push loop push and scas dec incb das rorl mov xor push or imul sub je sbb add push fwait and stc mov fdivrs sub sub (bad) mov xor movsb pop inc push pop jo xor (bad) push sbb leave ss mov jmp mov add nop dec loopne or pop or sub lock and pop js pop ds adc lock jns push mov jo gs or ret pushf jle push jb inc xor (bad) lahf pop aaa mov dec push call xchg js xorb push mov jg call adc cmc in ljmp int3 mov push bound test out add inc hlt cs mov dec mov das (bad) mov insb data16 shll push out repz sub lock sbb and jne insb jmp decl and xor mov jb es rorb xchg sub xor dec or inc lods jmp jmp cwtl adc push mov sub daa (bad) xchg cmp dec pop inc or sub dec cmp fdivrl in dec mov aam xchg xor adc fmull mov je push lahf jmp call addr16 outsb pop pusha insb or fadds xor insl adc (bad) xchg jmp pop mov and add add rolb ds adc jns inc pop jmp push fcomps xchg jo sub push je inc loop (bad) xor cli jne push or je test movsb jns mov pop jmp (bad) xor outsb adc cmc rdmsr jg fsubrs push or push into add xor out add sbb fidivrl faddl xchg (bad) pushf cmp jnp sub lock mov xchg movsb jno or lods js call mov and jmp lret in call ljmp cwtl mov pushf xchg sbb push nop dec mov dec jne pop mov outsb and arpl jae scas sbb popf add xchg push call xchg sbb and add pusha dec add popf inc push mov mov lcall dec xlat xchg push cmp cmp mov adc lock enter les mov je inc mov push mov clc out sub repnz adc adc mov in lret xor add int lahf inc stos lods or cli jmp lret (bad) (bad) mov test fbstp stc ljmp sti sub mov iret xor dec popf cmp add cs stc jae inc mov push lds dec lods dec call fnstsw testb add iret js or out push xor pop mov mov je cmp dec adc inc cmp xchg push mov sarb in sbb leave ret std sub lea sbbb mov pusha out inc inc nop imul ret xchg andl aam rorb sub loopne (bad) add xor (bad) fdivl andl jnp aaa shr xlat adc sub adc jne cli andl je cmp push mov pop push inc push call adc in xchg or bound dec mov xchg add clc and push lahf sahf pop sub mov test pop sbb or insb pusha inc hlt rcr rol test aaa clc lds cmp jno lcall inc sub inc add jmp ret sbb pushf xor xchg shrb cmp jl jbe mov inc pop lcall or jbe push xchg push inc jmp movw les imul orb sbb cmp sub das sub add xchg rorl decl insl add xchg mov and lahf cmp xchg and add or (bad) lcall pushf inc lcall jmp mov pop in std jle or shll loope sbb or lahf (bad) cmp pop sub sub (bad) ja pop fcomps aaa mov mov sub addl loopne sub mov adc icebp push js mov insl lcall into xor fwait dec addr16 xchg incb cmp xchg test daa push adc lret mov pop (bad) frstor rolb int jmp or mov mov enter pop dec stos or sbb fadds ss sbb leave mov ja jmp cmp (bad) mov bound ljmp (bad) push mov imul movl (bad) pop add xor test mov push in add xchg test mov push ficom mov lea loope insb lock mov mov arpl or sahf mov test mov enter loopne mov add dec mov jl xchg nop xlat mov sbb imul mov cmp arpl out test sbb sub add sub cmp cmc fsub sbb das stos sti pop rorl test ljmp std cmpsb test or xchg xor add jle pop lock push or outsb call lret adc js loopne and or lcall sub mov sub outsl cwtl xor repz (bad) call inc mov xorl imul and call mov in pop outsb inc mov dec lock jo inc mov sbb enter adc cwtl sbb xor out loopne loope repnz cwtl cmp cmp jb pop ss adc js ret lods (bad) jbe shll push or mov imul push clc inc rorb call or popa test sbb pop (bad) ljmp mov push jmp mov cs in mov and mov dec dec inc add ljmp insb std (bad) mov cmpsl add adc cmovnp ds mov jl inc scas jo adcl or adc nop pusha cmc movsb std mov adcb xor fsubs mov lods xchg cmp inc mov mov in movl imul (bad) std mov stos in lret push call inc and popa call mov fcoml test inc cs lea iret call dec pop dec push cld push xchg mov cwtl daa adc nop lock shrl xchg xchg insb and xor push out outsl adc sti int3 adc cs je leave lods pop repnz mov inc mov popa add mov jne pop rep ljmp add insl sbb mov sbb das xor pop loop sbb dec incl and es fs jns xor and push popa test cld xor jbe fisttp jl sub pop mov push jo test and inc push sbb xor add test inc cmp or mov pushl xor int adc jge sub sbb push jb sbb mov adc push jmp xchg jge xor xchg xor mov cmp dec fdivs es ja mov xchg clc push ss std out insb sbb leave pop sbb inc out and enter add mov jo sbb call sahf lcall push jmp or pusha sub (bad) iret repz xor pop mov adc les xchg adc cmp push mov ret pop nop xor repnz call movsb in les mov mov imul mov and sub pop mov dec das inc ds call mov call mov fbld lahf pushf insl in insl vmwrite loopne aad add mov (bad) (bad) jmp add popa enter in cmp add jmp adc jmp out push test sbb fwait mov xchg les mov fsubrl nop in out cltd mov callw mov xchg dec xor mov jb pop sarb (bad) cmc test out imul sarl repz in and dec sti xor lods sbb int3 pop out fxtract fwait dec mov push jno push and inc icebp out call sub mov fsub jnp (bad) push int3 movb push fdivp push push jmp insb ss out in sbb add lahf out out rorl mov pop xchg pop (bad) dec outsb push adc lahf out mov dec jecxz std iret jnp shll mov push bound stc cmp fucomp jno adc ds imul or ds imul les iret dec push sbb sub dec jno and cli loop sub jno lret cld adc cmpsb std sbb sbb fs js add sbbw ret sbb cmp jmp aas mov enter pop aaa jo cs dec and addr16 jmp icebp cmc enter jb sti xorl cmp enter push push aad imul in mov lahf andl xchg (bad) jmp xchg cmp xchg push push fimul ret mov dec (bad) ja push mov pop mov ret or fstps xchg daa jmp pop jg shufps (bad) xor mov loop (bad) cmp js pop adc mov shll cmp je push in xchg lcall mov popa (bad) cli jmp fimul lock (bad) mov jp aam mov sbb (bad) and scas lea or and stos out adc pop arpl dec xchg imul or lea inc cli sub imul mov xor push ja lret lods sahf fstpl mov pop mov push loopne ljmp in or xchg pop lds pop add add sub mov add lcall pop hlt xchg mov in pushf (bad) je and pop aas push mov ror and mulb push inc adc push cld (bad) imull xchg mov xor inc das (bad) cld sub sub and cmp (bad) adc cwtl jge lret ret (bad) lret aaa xchg mov cmpsl sub cmp push mov push add cmp imul add clc cmp xor (bad) push clc adc mov xor lds popa mov mov ret pusha mov push in loopne subb inc or je adc loopne mov cmpsl lea jmp movb lahf pop mov add sub cmp push imul add cwtl add xchg pop push outsl add push push movsb jno mov jnp cmc and loope xor enter dec inc jnp,pn push xor insl cmp imul (bad) xchg mov and jnp lods add (bad) inc emms sbb xchg mov xlat adc lret rol aas jle add push adc xor inc and mov add inc add or rorb or loope dec sbb jl and popa xchg (bad) std in popf rolb inc xor cmp fsts nop inc or rcr add sub add jecxz jge mov adc js dec and adc add les into jne adc int3 add cmpsb stos inc in dec mov fs mov pusha push enter dec mov enter out pop jmp incb cltd inc ret clc sbb iret jbe jmp xchg mov out push adc jae add jmp test mov cmpsl jge xlat pop and lret and pop sub lret fistp mov and or (bad) iret bound imul mov pop call or inc popa jns js enter into push sbb cmp add cmp andl out and adc lea ja adc movsl pop mov pusha incl dec es jmp gs popa inc jae iret insl adc pop cwtl and or or sub lock cltd lret pop notb notl jnp and out es outsb daa outsl pop (bad) and testl sbb outsb imul ds dec loopne inc mov mov push shrb dec cwtl sahf loop push ds jno (bad) test loop sbb add xchg dec ret je insb inc inc pop push adc icebp lret sub push outsb js xor pusha sbb shll add jl push test lock adc outsl sub inc cmp jge jmp add inc or push jo lock call mov in pusha jnp and repnz dec in inc pop repnz mov sub cld pop push jp loopne scas (bad) cmp jbe adc das push pusha add mov out xchg pusha mov mov popf xlat xchg arpl xor sub pop dec jge and push push adc sbb outsl add xchg push xor or push hlt and icebp adc sbb ljmp inc inc in repz push push jns mov cs repnz push (bad) out push mov out mov out push out shlb push nop cmp jge cmpsb repz ds xchg inc mov xchg push xor pop or mov jl inc js enter cs jl ss push dec mov ror cs ds ja mov (bad) jo sub xor (bad) jne cld es inc test jb iret inc lock push jo sub lods fimull inc ds inc inc enter xchg fsub push dec sahf enter loopne iret and or push add cmc out push out add inc dec xor ljmp dec xor imul ss push movsb iret repnz scas gs (bad) clc jo cmp jl sbbb jo or fldcw xchg out push lock mov jl dec mov push inc push push sub and aad add xchg sbb sbb lock nop je push lods je pop adc iret lock daa push leave cmp pop cwtl pop push imulb dec cmp pop push cmpsl pop hlt inc pop divl int pop int lods pusha sub push cmp fcmovb mov pop add push pop add pop ror add sub sbb adc xlat inc (bad) (bad) fwait push bound fxch sahf dec mov outsl test add and ds in sub pcmpgtd jae mov repz cmp jno fadds xchg or lock and sub dec sbb sbb call xor xchg ja and inc add add (bad) sub mov std cmc mov pop inc adc xchg test add and fstpl std jg sbb (bad) jg ds paddusb sub aaa decl stos leave sub jg mov imull and push in push test push cmpsl stc ror std dec cs jle ss xchg push addr16 pop lock add ja aaa inc cs jl,pn mov cmp out imul imul cld mov mov inc outsb pop push imul add stc push aas cli mov outsl das jg test pop nop ja ja js int gs sub fmuls repnz jo (bad) das outsl mov cmp dec push sub ds add aam scas loopne dec and popa or cwtl inc movsb push call clc jo jns clc jecxz repnz (bad) xor fdiv xchg es int3 push pop pop outsb movl fsubs fldl (bad) fidiv xor jl repnz test push lods addr16 stos adc dec xchg sbb ja rcl fcomp mov pop loopne,pn inc lea fldcw jle jnp test movsl sbb mov dec push inc std mov lret pop jae,pt sub sub adc cmp test or aas aam xchg xchg leave pop and lock inc iret mov and mov not (bad) and fcmovb test neg push push push sbb cmc rcll or movsb rolb cmpsb cmp pop cmp jno fwait js mov (bad) rorb jmp mov arpl into push lret pop mov xor adc mov pop and test xor xor and sbb sbb mov cli push jl lock add enter pop inc lea dec sub (bad) mov sbb dec sub xor (bad) jo sbb push jle pop sbb ret adc fdivr into push mov sub shl lea push pop pop popf lea push scas dec fmull pop pop pop mov jo incl and cmpsl pusha jo cwtl sbb xor (bad) jbe or (bad) sub sbb repnz mov inc in push stos and es xor jp adc insl test loop stc mov mov dec out add push adc push and jns leave xor and xchg ja pop and sub cmp xchg sub sub repnz in sub scas cmp scas in daa out daa add push leave shll (bad) dec and push scas in and and jle outsb and dec sub sub faddl aaa or xor mov fucomi das lret outsl das repnz mov rcrb das out sub insl dec aas pop fsubrl das cmc jg push and das push cmp xchg jl xchg scas das push or das ret dec (bad) mov sbb das daa dec mov iret and add dec (bad) mov daa iret pusha pusha test and loopne jecxz sub sbb mov mov outsl add dec mov or je push das xchg repnz nop pop cwtl scas clc adc test das roll mov adc and (bad) mov push jg (bad) call scas mov push roll out dec out repz das mov fcompl movb out jae add sbbb sub pop (bad) call repz or add clc sub xor push adc lret xor sahf iret lahf mov lahf jo xor popl pop pop nop and iret or jmp sbb jo pushf adc scas jl repnz stc mov add (bad) (bad) cmp and xchg fildl clc loopne mov in sbb mov loope adc ljmp ret incb mov mov cmpb add popa clc movsb mov push and mov sahf or leave fucomi adc cmp dec mov call or (bad) movsb mov mov or and nop jg xlat fcoml xor fcomps mov dec (bad) mov call ja jae cmp mov mov adc or sbb or insl int3 popa sub inc sbb inc or add jmp mov jmp mov xor xor test add add int3 or cmc mov mov inc call or mov xlat dec xchg dec ja xchg xor mov mov adc mov sbb divl outsl pop out add aaa xchg shlb add das in out ret mov and inc dec sub pop repnz mov fsubrs adc adc jae fstps xor sub xchg mov sbb xchg jae xor cmpsl inc lcall adc pushl mov movsb jmp mov jo repnz sbb rorb pop lahf aaa stc cld jle xor dec in pop add lret in test mov testw inc mov pop sbb add lock call xchg stc sub sub lods cmp (bad) and shlb jmp incl mov push imul cmpl add and dec sbbl and (bad) mov cmpsl sbb push push lds mov mov dec rorl sub stos cltd and push arpl call cmp ret sbb jno shufps (bad) cmp sarl or xchg dec ficompl shrb int pop mov inc out and enter enter sbb pop inc scas icebp sbbl lea (bad) jo and mov les push push adc enter pop mov ret mov lea aad cmpl adc dec rorl in push push push int3 mov pop adc xchg pop push sbb and mov lds add push in mov cltd pusha (bad) jp mov fadd xlat arpl loop sbb push pop adc mov pop pop pop adc sbb (bad) push mov sbb arpl das mov je sbb xchg cmpsb inc sub in push cli pop sbb call das adc xorl inc mov sub std rcl xchg xor pop dec jmp mov adc insb lcall ja ret insl add mov pop adc insb adc cmp inc sbb jne push xor je cmp les dec adc adc rcrb or cs into inc imul and jecxz sbb add inc insb lods xchg or pop bound jnp sub sub jne sbb pop push cwtl inc sbb push xchg mov dec stos cmp xor out fcoms iret push outsb int3 jae jmp adc les inc daa das pop pop jnp outsb sbb push add push lock adc jg inc dec inc arpl add pop sbb push pop add outsb in adc jbe call mov push fstps movsl or inc enter mov das pop les add push punpckhbw pop adc hlt mov xchg cld cmp lea fstl dec mov movsb mov push aam ds repnz fwait mov cmp jg out ss jl call mov daa jecxz mov cmp add shrb mov xor pop and inc pop push loop sbb mov mov test dec xor add sbb sub js roll pop sbb sbb inc cmp jno loopne sbb mov cmp mov into pop push adcl cmp in jecxz mov mov (bad) aam sbb shrb sub xor aad dec adc mov insl add xchg imul jle repz jbe sbb stc or lcall xor or add mov into push sarb adc inc mov xchg or mov adc mov popl or das (bad) lock test xor js push push or iret call mov jmp mov push fidivrl cmp scas mov movups mov bound mov add fstps xchg and sbb lods inc es add bound sub mov adc ret jne mov pop or into bound daa test sbb jg sub mov rcll leave jp adc movl fisub fildl and cmpsl dec loop push fcoms mov add sbb int inc and pop sub or cmp jno add inc xchg push or push repnz cmc cmp inc ret sbb iret in dec sbb jbe sbb push jp xchg dec xchg add and jb inc jl and mov (bad) dec sarl stc and fwait xchg dec cmp dec sbb jle inc jmp dec loope pop inc scas push arpl imul bound gs add lea rclb adc mov xor mov jb dec inc pop nop sub adc lret inc xor or test je subb lea (bad) adc pop and mov fs adc adc xchg mov push adc dec xor push rorb sbb ss pop jne mov leave inc std rorb or iret ds test xor mov add add jmp jmp (bad) push add adc jecxz shr inc or out in xor mov adc mov jno push adc lea push pusha add xor aas xchg mov dec jecxz jle,pt add inc sbb call cmp icebp inc mov inc daa push inc dec push push and xor ret push add add (bad) mov adc mov test jg push (bad) sub or bound loope pop push jg fwait addb xchg mov add lcall xchg mov mov push mov pop jp lods cmpl inc pcmpgtw jg cmp and pop leave rorb sub xchg lea sbb inc inc dec cmpsl idiv (bad) aas mov outsb into int cmp sarl insl mov ficomp jmp jmp mov ljmp dec pop inc mov subb fisttpl lahf or insb outsb orb movsb xchg sbb or push loopne inc lea adc and movl add dec xchg xor (bad) idivl sbb mov jnp mov rcrb (bad) xlat mov add push popa mov mov outsb lods dec pop inc iret ds hlt and cmpl dec inc test inc fstpt push (bad) mov sahf pushf mov dec enter bound inc movb sti cld adc lret mov data16 scas adc cmpsb sub and inc in push jb push sbb sbb out std sub ja incl xor shr rcr shr rcr or jne imull mull add jbe add jb and ja jb cmp add (bad) mov mov sar and sar ret adc add jo or jae or jae add push mov ljmp or cmp and shl adc scas imul mov pusha je push dec dec daa jmp rclb cld pop ret call gs inc addr16 adc mov add cmp xlat ja xchg or push jo insb and adc fdivrs or push clc jge addl push hlt or ja imul xor ret dec mov mov push mov test sar in xchg mov imul fldcw adc jo push pop jmp push push je or dec clc xor je lods (bad) sar sbb leave cmp je mov xor sub add lods xchg jmp sub jo or jle cld xor addl outsb inc sub adc xchg sub inc and arpl mov in std pop mov data16 push decl jmp outsl fwait popf fnstcw enter mov push pop jmp pop push loope cli in fcmovnb or push mov dec test dec or addb mov cwtl out cli mov (bad) je pop pusha or or and shr je or cs arpl test nop aam and in push jl mov mov jmp or ds or and push push mov (bad) ror cmp imul and cmp jb push rcll mov xor dec ret pushf or fwait ret push sub jnp clc jbe lods js jb sub dec and pop fiaddl inc jbe jns xchg mov pop (bad) sub mov and fbld dec sbb sub aam mov nop js adc ret movsl push jbe test mov fnstcw sbb mov dec dec int3 pop or xchg cmpsb cmp cwtl pusha add xchg cmp inc mov ljmp jmp and and stc cwtl add push pushf mov mov mov xor mov aad fadds add dec stos mov icebp xchg outsb fimul mov (bad) jge,pn xchg inc xor adc and out adc lods jmp pop lods inc or jle (bad) hlt rolb sar push mov mov push (bad) or or out inc and repnz repz in sbb adc and xchg mov mov dec dec in fcompl fistp loope add add mov or jp in mov mov or or or fsubrs and (bad) pop mov inc cmp movl pop and std xor ficom push cmp sub lahf and sbb vmovapd iret dec mov xchg or rorl xchg or cwtl (bad) lahf or jg pop adc sar push (bad) (bad) imul mov jbe std mov jnp jle imul (bad) aad not and ss rcrb inc dec mov cmp fucomip mulb pop adc leave xor in adc or cmp clc jne xchg add dec imul jmp xor sbb add mov add daa pusha iret frstor push mov clc es dec mov adc out into push lock mov iret mov sbb push lret cltd push icebp imul iret pop test in pop pushf std or push push jmp popf inc mov push sahf aam stc dec dec andl mov or jae and cmp sbb jg bound add arpl push call rcrb pop in loopne roll xor js fnstenv xchg dec and pop jmp dec pop xchg inc iret adc fs ds je add or movsl subl push pop sbb sbb or imul (bad) push pop ret scas cmp es sub xchg enter andl xor std adc push cmp jne testb test cmp loopne and dec pop in jp add adc mov dec out adc push call xchg js loopne or pop lea lea movsl jg aas roll (bad) das les pop adc ds adc lret testb jno and std bound call inc (bad) fld xchg pop test pop dec cwtl inc dec push add xchg jne pop xor lahf jp aas sub push les mov dec rcrl (bad) xchg mov jp and ret mov push (bad) ljmp out outsb pop sub jmp push and and popf lcall push inc push gs call sti mov push or push add push pop pop mov cli ja (bad) sub add call je push xchg cmpsb mov cmovl inc rcrl js cmp sysenter mov lcall test cmpsl or push sti out mov jle adc mov adcl xchg mov xor xor (bad) bnd adc fisttpl stos sbb sub scas cmp pop not and jmp jmp push jle jmp mov pop mov pop (bad) or movsb push call or jne inc loop js mov jl xor lods into js and cmp sub loopne cmp insl insb sarb mov cmp cmp mov cld adc mov shr (bad) xor jmp and adc push mov adc orl ret cmp push shll (bad) pop sub add (bad) pop push push pop add fstps ja adc fsubs and adc dec rcrb xchg xchg xchg sti add stc jle fbstp sbb mov xor testb xorb mov sub cmp pop adc inc inc push push cmp inc cli fcmovbe mov mov inc push or push push jl lret nop sub out mov add and (bad) mov cmp jmp mov jp cmp ja ret (bad) or divb cmp out insb or imul add dec cmp xchg add mov rcrl xchg inc push or xor jo sub mov adc rcr adcl pusha adc push or mov popf mov lds mov fidivl pop int3 xlat mov nop dec sar add cmp jge mov jle arpl test jmp es add stos dec in push arpl push in xor testb test add adc (bad) imul outsb push pop jmp cld cmp adc cmp test adc mov inc jb sub sub sbb imulb or xchg push daa std lods ss ljmp ss mov lea call xchg pusha jp jne cmp cmp push test mulb test inc adc fwait pushw je push adc adc xor mov and movsl jnp mov push or mov inc jmp xchg push pop push adc jmp fdivs adc fimull cmp dec ret or xor push mov push jmp lea insb or aaa inc pushf jmp xchg test sbb imul jbe mov (bad) sub sbb hlt call popf or sahf lret add push jl aad lods ja lea mov mov (bad) in inc add (bad) fsubrs jae pop xor lods out add js in sub or es sbb add fldl test push mov out mov fsin test mov cltd fwait mov jmp adc and sbb and lock mov mov xor sub out shll inc and rorb push out sub sbb inc dec data16 mov (bad) out (bad) or cmp scas push std adc cmpsl mov scas push cmpsl cs ljmp xchg cs jmp call adc push cmpsb jmp or cs pop movsl adc or je mov adc pop and inc xchg mov gs push xor popf adcl mov xchg lock and push sub les je push fistpll mov jmp mov jbe or das mov ret mov sbb mov xchg mov inc mov hlt adc pop loopne or xchg sub out andl push (bad) jae call cmpsb subl mov jne lret paddusb imul mov dec sbb and dec imul mov jmp cmc insl adc sub and int mov dec arpl push cs jl pop loopne pop je cmp outsl xchg mov lahf loopne or stos or push xor enter sbb dec pop sub nop or mov in addb or ret out mov push rcrl int3 xorb cmpsl push lcall cmp (bad) xor aaa add or mov lods rclb mov ret cmp sub push inc movsb mov scas subb cmp addr16 gs and mov ret subl (bad) jl test lret dec fadds mov daa inc and inc xchg or pop fidiv push sbb outsb xchg fsubr ljmp cmp int3 push leave popa les iret enter sub dec aam mov icebp scas sbb mov sbb idivl adc jl int stc mov xchg jmp jmp xchg negb es (bad) xor cmpl (bad) jbe inc push pop mov xor dec bound (bad) xchg outsl xor js stos lods fisttpl mov pop mov sbb insb pushf std add adc or jns jge test push cvtps2pd xor adc sbbl or add imul push in mov lods pop pushf inc test std orl or loope cwtl push cmp test loop and cmp bound neg mov ficoml add pushf and xchg dec and dec je add inc clc jo jmp sub mov mov pop mov repz push daa add and sbb test and js push ja test sub les pusha inc mov and repz mov jp cltd popf xlat icebp push or adc inc jl pop mov or or and hlt daa adc stc sbb jo lcall push add insl mov inc js pusha loop inc inc das xchg mov pop sub cmp inc or push adc pop mov add popf inc adc popa (bad) pop and fnstenv cmp mov cmp mov sub data16 mov rolb add call push das adc ss or (bad) mov push inc fwait xor push and bnd mov in push push test sar je inc jl add test fdivl xchg adc or xchg cmp adc or mov push (bad) in cmp jo repz mov pusha test dec or xor cmp jbe pushf ja jbe adc and jp sub push mov or imul jle cs jmp aam jg mov bound (bad) mov xchg ret jmp andl dec push insl xor push push mov nop incl jnp dec dec xor mov mov loopne cmpsl pop in mov call and pushf ret and lock dec inc sbb jl mov (bad) xor add xorb stos imul rcr clc sbb gs jmp dec sbb js add add jae xor sub add add sbbl pop xchg addl pusha aaa push (bad) lea (bad) and jmp ljmp inc call movsb push in aam test dec jne or jg ret fsubr add je loope adc loopne push add pop and sbb sti outsb and inc mov sbb mov fadd ror subl jmp sbbb cmp loopne andl xchg adc or push out adc mov repnz int3 (bad) push sbb in ljmp rorl daa adc bound add sti jae outsl testb push daa push adc sub jmp add and daa sbb push (bad) jo push outsb push push or outsb pop jp add mov leave jne arpl (bad) scas pop ss and rorl mov xor pop jmp fiadd and xchg jmp pop push lods push lcall repnz cmp cmp (bad) repz pop or or jb call inc dec jp mov roll push ljmp push std inc push push mov or cmp push pop add dec mov scas ss call loopne and mov adc aas adc jmp test push sub or aaa jecxz mov xor add sub out pop dec add push mov push xor cmp fimul push stos add lret mov mov sub iret mov or add int3 adc inc fistpll lret call loope xchg rcrl js rorl mov enter add mov pop mov in mov xchg xchg scas dec rcl xor lahf push jecxz call call mov adc ret mov cmp scas xchg sub (bad) dec adc fidiv cld cld ja ds shll (bad) shlb mov fisttpl (bad) xor inc aam add ljmp cmp jbe mov les pop inc add adc dec rcr fstps inc sbb adc dec les mov inc add add ss push mov pusha jnp or aaa in sub add mov mov out inc (bad) loopne dec dec inc inc cmp jecxz mov xchg jmp jnp sbb xor cmp inc xor dec dec sub jl mov lcall cld icebp xchg (bad) mov (bad) mov jecxz sub xchg lret pop jmp call jmp addr16 stos jnp imul psubsw movsl out mov aaa pop (bad) popa inc loopne push daa insl sahf jb cmp lret pop pushf sbb or sub or clc out fidivl in push push dec mov mov adc xor or add (bad) popa cmp and sub push adcb rclb mov xor and test out and mov mov pop pop rcrb movsb dec and cmp arpl push lock add test jmp sbbb dec les nop mov mov mov int3 cmp add push pop jnp and jmp or lods ffree inc pop cmp xchg sbb mov adc sbb cld pop pushf add add js (bad) cmp sbb fmull inc jle xlat dec lods adc mov pop mov ficom jmp cmp jne ja jmp and je sbb push add lock cmp je jmp insb dec hlt add pop std pushl mov sub fs scas adc (bad) or add outsl std jne call mov cmp jne add repnz out ret sbb clc aaa push in inc xchg mov decl sbb dec jno out rcrb in call push cmp sbb adc and pop jo push add les sub jo (bad) ss add dec jecxz loopne call inc popa inc in jo or rorl or or les insl mov sarl dec adc xchg jge call sbb pop jne cmpl push add pushf lods xchg or (bad) mov mov (bad) jo ror and and mov mov and pop movl movsb test (bad) jne in call jl sbb loopne ljmp pop jbe adc fnop int adc push or test mov fsubrp aaa sbb mov (bad) cld and xor adc dec cmpb adcl and mov fnop push cmpsb (bad) pop lods mov (bad) jge or push ret pop sbb or mov pop jmp mov out jmp inc ret jnp jae sub clc jmp ficoml jns pop aas fwait sub pop call dec fist mov push jge lods ret addb push jmp push pop dec push pop icebp cmp lea jne push jae jp jbe jmp mov aaa jne insb cld fldt or pop pop mov sub sar inc rcrb add inc adc add pop add adc test mov jg sub adc (bad) jae stc push push cmp jmp add mov mov xchg jmp (bad) jb adc imul xor jmp cld xor sahf jmp adc pop xor and mov fisubl repnz add push mov outsl int3 mov into sub push cmp pop add cltd (bad) int3 sti sub xchg mov xlat cmp add mov (bad) clc sub jbe adc cmpsb loopne mov add test stc jne and lea stos sbb pop nop fs sub jp clc outsb test fstpl jbe sti jb mov popa nop jecxz pop jno inc sbb or test push ret cltd std push popa dec cmp xor xchg add idivl push push jbe sub cltd pop or push aam inc push xor pop xor push stos or mov sbb push push fcmovnbe xchg or dec xor xor cmpsl xchg dec jl sub push push cli out pusha and mov sbbl dec pusha fwait lea loopne rorl push lods cmpsb sub data16 les sub sbb (bad) xor add movsl ja rorl jmp sub je (bad) neg push jae push adc adc pop inc pushf cmpl lds jns out pusha push cmp cmpsb push sbb sbb add sub and call jg out add jmp add aad inc xchg mov adc popl pop and shr jae or test fmul inc and aad pop mov popa cld das lock push scas ss pop xor mov rol push dec int cld adc es insb xor pop call inc pop addr16 dec jno cli js adc hlt mov mov push (bad) lcall add std adc mov sar add je sahf push repz call or or add out jge sbb xchg (bad) out pop dec jmp push mov sti cmp outsb cmc push test rol leave or inc xchg lea ljmp inc je mov jae lahf jle cmp aad addr16 fmull pop inc shrb subb (bad) jmp movsl popf xor repz rcrb push jg pop jmp mov lret imul pop insb cmp dec mov data16 pushf and stc (bad) clc xchg (bad) pop dec lock hlt sti lret mov outsb jne and mov mov sub aaa push dec and mov imul sub scas lods xchg sbb push push xor test xchg leave mov fcomps or or add (bad) push mov pop arpl push cltd or sbb cld pop or dec je inc inc rcrl mov xor or mov popf idiv xchg scas lea aad sarb jmp mov add (bad) les jecxz push add pusha jle popa inc in mov cmpsb pop dec sbb xchg xor jbe add jnp in call test out mov sbb cmp cmp xchg adc jecxz dec push adc outsl (bad) mov outsb sub pop mov pop std (bad) stc cld or (bad) mov add shrb jmp sbb clc mov jmp movl xchg call fimull inc cmp or and sbb jmp imul (bad) ss arpl dec mov mov rcl in jns and jle mov dec cmp loopne push xor das jecxz leave sbb push les iret push sbb sbb ds sub stos sbb cmp pop cmpsb jecxz addr16 call xor mov pop repnz adc inc adc jp adc fs lcall mov sbb or pusha mov cmpsl xchg mov (bad) (bad) or loop cmpsl dec and icebp push add std push into enter call nop push sbb and mov push sbb aam addl pusha sub je test mov loop stos push or sub ret psrld hlt or xchg and dec push sub inc dec adc cs insb mov or push xor or adc test or decl jne jmp push add mov xchg mov insl loop jp xor cmp je stos je mov fisubrl push fild and sub ret into cmp push decl jmp sbb push add jmp and or adc and pop out sbb or ret mov dec or inc push pop mov jge (bad) and jge sub jmp and jg push fildl jne jo sub hlt nop add scas inc cs insb and push call cmpl xlat sub pop cmpl jb popl inc and push pop mov pop push and sub mov mov push inc loopne outsb pushw fistpl cmp sbb fidiv adc xchg jg jb mov clc push mov dec shll push xchg inc xorl popf jno xchg test push push out cltd sbb rcrl jae adc mov lea and pop push into in js dec fucom dec jecxz cld insb jmp movsl xor jmp dec iret mov cld jbe call je and jno test cs ret sti jne jmp add fwait mov jmp pop jnp add xor aad das mov ljmp insl add cmp sub inc es jmp or sti je mov call adc dec push call cmp or outsb adc cmpsl cltd sahf and dec adc pop invd add hlt jae das fcoml ret cli sub jne inc fcom and pop jg or or xor jb jne adc test push mov pop movups or outsl and xor (bad) maskmovq imull jnp jmp sbb jle jmp andl iret or arpl movsb std sub bound adc and jmp pop clc rcrl lahf push jb dec push call scas pop pushf mov dec adc sbb mov (bad) ss (bad) or cwtl js sti add sbb in rcrb sub jle and ds aas push sbb fisttpll popa loop sub inc sub dec inc jmp inc clc mov gs jns lret xlat mov fs push xchg ret int les cmp sbb jo sub cwtl push and jp or call push inc push jmp xor sub repz cs add push rcrb push or sub push jns lcall push mov hlt xlat aaa test popa jnp and push sti xor popf inc mov fwait iret mov mov or ss mov enter and bound (bad) testb add sub dec movsl jo shr and js std mov adc add fcmovbe jl cli (bad) test jmp test test push and (bad) adc cs jl ja mov xchg push sbbl arpl pop lock cltd add push mov sub mov sarl xor mov add jae push loop addl or idiv pop or push imul cmp movups push cmp mov rorl and push into dec lds pop pop rorb cmpb and mov movsb sub out movl xchg movsl mov (bad) sti push jmp and test sbb incb sbb cmp adc sbb add pop lock test fcoms outsl in cmp jmp dec and mov pop mov adc (bad) fnstenv je adc sti or xchg test pop jnp mov xchg push jbe adc or mov pop jo push add hlt insb cmp mov bound push call (bad) cmpsl fwait rcll aas mov aaa xor popa call arpl pushl xor adc loopne (bad) xor push mov out xor fnstsw xchg int3 lea jbe or ss jge fimull mov pop ss or out je clc imul and mov and push call pop sub fcompl inc std sarb pop sar dec push jmp cmp pop and push sbb jecxz fsubs cld out pop mov loope push lea test inc adc rclb insb sbb rorl fsubl mov (bad) in push jmp sahf stos cmp pop je out (bad) sti inc jo adc mov adc mov adc lock sbb cmp xchg or jo inc push dec clc xor popf adcb pushl pop add pop add cmp ljmp mov and pop xor add mov pop js outsl inc mov and adc lret push add je lods lods cmpb and push pop js scas pusha ret push mov push outsb inc (bad) bound jl or xor pop add imul push dec jl icebp push outsb test test jnp ss shlb xor pop sti fidiv push inc jmp adc popa (bad) fisub aaa lcall pop sbb mov sub call add ja test mov ret scas ss cmp xchg jo adcb shrl movsb sub or jno jl push jne mov inc inc mov mov xchg mov ljmp pop jmp aaa fldcw push cmpsb xor lret sarb (bad) popf push mov mov sbb inc loopne sahf mov dec mov dec in sub popf insb mov ljmp jne (bad) jo adc cmp mov test fist push push cmp pop and dec outsb daa clc cmp jle add rol push push mov lea shrb pushf pop sub imul sub jmp xchg mov enter pop sbb push push scas or cwtl add lret pop test (bad) aas sarb lret dec test (bad) cmpsl dec adc jle jmp inc stc xchg les ds insb (bad) jmp inc sub fimul cld xor out jmp cwtl and loop (bad) popa iret loopne dec call mov cmp push cmp or mov test jp bound les movsb sarl mov xorb test notb dec pop cs mov sub sub jmp les fild fcoml cmpsb popa xor pop (bad) xchg sbb adc js test jl sets ds imul adc enter push push sub test and pushf inc lea pushf nop addr16 adc fwait enter ljmp ret daa cs out or je cmp (bad) xor sub mov popf inc mov xchg pop movsl and add call adc mov dec dec out xor jl std pop jnp lea pop xor xchg jmp sub sub dec loopne jmp mov out stc aaa call inc inc mov pop enter cmp lds pop cs test (bad) mov mov adc jnp xchg test sbb call push push mov pop jmp jmp out mov stos lock loope xor jno popa loope sarb push add test insb loope xchg mov jecxz fwait std mov roll ret insl inc (bad) aaa inc mov and hlt or jne scas or sub pop rclb es lahf sub push lock pushf dec dec cmpl sbb aam dec pop pop xor sub xor clc push es jmp push add inc xchg cwtl fsubl scas push (bad) shrl push test inc xchg mov mov jo add jae test outsb imul cmpsb and mov sub or pop cmp dec inc loopne add mov xchg inc ret out ds xor push xchg add pop push and out fist mov in test sahf inc mov or jmp jnp test lret fistp adc cmc and push (bad) std shlb es divl cmp add and lahf dec push test sub sahf cmc dec addr16 xchg adc or jno adc add call inc or aam ret ds mov clc imul xchg adc push xor jmp add cmp mov sbb adc dec xor nop dec jne jmp mov or jle std pop cld sbb roll push hlt jmp rorl jle sub lret mov (bad) mov sub lret xor lods iret cmp pop es dec fcompl repnz in mov push sub push and xchg adc ficompl dec js or pop push jl adc es sub int3 or out fsts xchg icebp nop call or mov pop andb xor cs add xor push xchg push in rcr es clc dec jecxz js out pusha add adc les adc lock jnp pop call mov dec push jbe repz lea (bad) mov mov push dec cmp outsb jl ret cs inc insb xchg shrb mov or cmp pop and mov dec push cltd sub or (bad) mov imul push mull dec add ret inc adc sbb add and push adc cmpsl dec mov repnz loope jle push lret and dec and (bad) stc enter clc fild pop mov mov jno aam jne mov and sbbl int sbbb or xchg inc mov std ja xchg mov add mov adc xchg add lock and add xchg inc cmp jb lcall (bad) lret adc add ja (bad) dec jp jmp cmp aad js out imul xchg repz adcl or loope cltd dec jmp inc cmpsl push data16 cli aad test loop shll add cmpsl cld cmp sbb xlat arpl cs jmp add lret mov or js outsl add mov dec jge arpl inc push call icebp test jo es jne push push adc movsl mov inc xor int3 mov test cmpsb cld into mov push xchg pushl xchg lea or js sarb and dec les dec fidiv ret push adcl insb (bad) fcompl adc xor xor adc cmpsb mov add fadd bound and dec test std dec cld orl jmp xor (bad) shrl inc test ret movsl add shrl addr16 ss test stos test shr jbe fadds je or mov js push and cwtl je and jno mov scas push push xor testb jne adc pop mov movsb mov imul sbb mov pop pop jmp outsb stos mov ja push dec inc cs in sub (bad) dec xchg inc loope push mov rclb xor pop (bad) sahf fcmovbe or push out enter push inc je inc ret xlat mov xchg icebp (bad) jmp add dec xchg mov adcb xor nop cld js inc push clc and fisubrl and jbe fsubl pop out adc in (bad) mov adc cmp in add sub pop pop pushf popf sub push sbb cmp sub push setne and pop jl aam pusha jmp dec inc lea or test add movsb mov sub lds pop sbb stos mov sahf cmp pop sub push repz or lds add push clc push or jae lods inc adc jmp xor dec add push add es xchg or (bad) imul adc lock push lea and pop pop adc jb xor sbb pop fildll adc inc push orl and push test push orl bound lcall dec out jbe out mov fsubs or xchg rorl push or hlt shr pop imul outsl cld mov fimull inc cmp mov cmc dec lods repz call sbb adc dec ret clc mov or xchg dec xor jmp fsub mov insl cmp (bad) in shrb mov sub fdivl jmp push pop addr16 pop into gs js mov add push into repz and push popf (bad) jmp repz jg ret je or movl ja or fs push cs jmp xor cmpsb cmp loope sarb mov clc shlb incb adc sub jbe and push push add pusha loope jnp push clc sahf push adc ss inc lret jle loopne xchg jmp xor push mov (bad) sbb add loopne sub pop inc jge call mov cmp test mov test adc push push jo add xchg fiaddl call add enter test sub or fisttpll enter arpl xor jbe push push push jo sbb test push adc lea mov push mov test mov push mov jle mov outsl (bad) js adc imul inc and subb fiaddl pop les push and mov ret sbb nop or jmp mov hlt push nop jb add negl call add push loope mov mov lahf sub jo adc push mov aaa cmp mov fbld cmc and divb jmp outsl outsl rcrl imul adc (bad) jbe mov mov adc data16 inc pusha adc push jne pop lret movb jge bound jg loope cs lret push cmp or push push (bad) push insb dec fstps dec outsb les add cmp movsb and push pop push std fcmovnb xchg cld sub and jmp lock dec (bad) jmp mov ja insl das aas (bad) cmc fs je pop dec pop inc lods int3 push and and fisub adc add add fmuls ret dec ret stos (bad) iret adc mov mov subb ret inc sub xorl inc mov push or jb add dec xchg mov test imul hlt in jmp (bad) cld mov iret call es mov repnz outsb inc and (bad) ss jns mov sub push jmp (bad) (bad) or adc js test push (bad) roll loop lahf adc nop fdiv sbb inc sub rorl inc mov std fnop pop rolb enter pop jae fdivrl std mov pop movb add add fidivl adc push pop jmp mov lods jmp xlat lods mov cmp fwait cmp mov and xlat andb mov push xor hlt addr16 test and xor flds add js in in jne cmp inc (bad) jne mov je int3 sbb push mov loopne cs xlat movsb mov roll (bad) xor adc out or xchg cwtl jmp (bad) (bad) xor pusha adc popa cmp ret mov xchg adc sahf pop sbb (bad) and push ret cmpsl push dec push ds mov and pop jmp and sub push cmc dec jmp mov and mov adc fiaddl pop fdivs push into imul and sbbl js xchg fcoms lahf addr16 adc inc or cmpsb mov mov or pop push pop fimul jb mov inc and stc dec jmp hlt loope nop sahf pop adc lea es sub sti pusha enter pusha cld mov cmp mov or xor sub nop jbe push mov pop push sbb push inc es xor and push inc mov add mov imull imul pop shrb and mov cld sub sub mov cmp mov addl icebp pushf add test pop imul push mov andl sbb test mov loop decl and (bad) das sub xchg ja add jmp aam jmp adc les mov push test rorb imul adc aam mov loope pop das js mov add es cmp hlt and js movsl add hlt lock mov fcomp addr16 mov sbb lret enter adc xchg inc inc hlt sub test mov jne aam push stc out ret dec cmp adc insb push pop pop sbb sbb mov mov call jmp sub inc (bad) pushf lahf ret mov adc scas and push clc les cmp ret cli add ret popl mov push push call sti ret in jp test repz cmp cmp and lods js jnp andl rorl add je inc adc push inc push repz addr16 push xor push (bad) rol xchg lea adc cmpsl clc xchg dec pop es insb lahf pop testb push push popa sbb icebp insb leave imul jp or xchg add mov clc dec xchg shrl cmp xchg xlat push repz xor test leave push add and insl cwtl mov adc or div call mov or inc inc arpl jne push push mov outsl pusha sub in rclb sub push xorl and lea leave cmp inc cmp call or aas mov mov xor jo mov and sarb mov xchg sub imul xchg dec adc sahf cwtl sar adc in jo rcr dec in jo cmp or mov inc adc movsl xchg rcrb fadds sbb cmp dec enter push pop cmpsb cld in or dec test stos sarb in (bad) add lock or xchg call sbb arpl cs into inc out pop rolb int3 fsubr testl test imul push je xchg fcoms fsubr dec xchg in daa cmp mulb loope push jb fsubs dec xchg ret pop pop call (bad) mov jno xchg mov pop clc mov cwtl xchg lret pop jle cld out call dec pop outsb jmp mov mov bound dec jg or (bad) and adc xor sub push outsb fild (bad) dec (bad) and or dec arpl mov dec mov (bad) fstl out mov lahf push rcrb inc cmp mov push jecxz nop cs out and lcall dec mov add xchg std sub mov mov jg push or arpl push push addr16 and mov rcll or cmpb ss sbb sbb inc es dec outsb out adc lcall cmp inc cmp int3 in lods lret int3 adc jmp jo jl out adc xor cs loopne in or outsl or inc ret or mov pop or pop ss xlat ss push adcl inc jecxz dec clc add lret cld repnz (bad) sbb mov pushf std sub shll sbb inc pop sub or lock dec arpl xchg mov dec or mov and or mov fsubrl mov clc cmpsb std jbe sahf mov add das mov jo cmp mov cmp test fidivl sbb movups lods xchg mov add jmp test and inc mov adc adc int mov cmc cld or mov push sbb xchg sub or dec loopne mov call jle cwtl cs aas mov sbb (bad) mov add mov cmp xchg test mov mov sbb xchg fneni(8087 sub repz ds sti pop or scas cmpsb je sbbl icebp pushf add fldt xor loop add and inc sbb xchg ret mov enter push mov mov mov enter sarl (bad) sub lock sub jmp push xchg ljmp xor (bad) rclb out or mov cmp push pop inc and aas repz dec lcall ffree fadds rorl insl addb adc jmp loop (bad) (bad) fwait cld aaa call jmp add pop pushf lods repnz pusha xchg (bad) sub inc hlt cmp in push jg js jne sub pop jmp shr add adc dec add pop sbb aaa jbe jle dec pop adc sarb fdivr lret push cmc sti test sub call add (bad) fnstsw xchg mov jl shlb insb cmpsl loope xor cmp push mov das ret push dec or les mov std ljmp dec stos mov add loopne cld popa xchg sub sbb pop fucomi cmp (bad) and orl cmp fnstsw xchg push lock or scas test jb add mov cs stos mov fs out rol inc es cmp pop jmp add push inc sbb jae out xor push jno outsb int out imul sub sbb or aas (bad) push cmpsl or lock cmp or dec mov mov test cmp fisub adc sahf mov push sbb mov fdivr sbb xchg pop in es xchg ret jmp pop stos mov push arpl cmp sbb pop stc loopne inc mov fs jne push popf and dec and add imul or mov and inc in inc xor les mov nop jp pop push or pushaw movsb addl test and aaa mov test sti sub sub or repnz out xor xor cmp pushl mov (bad) (bad) jge sub (bad) push out ljmp or call pusha dec fs imul or xor and mov popf mov outsl and int out shlb sub sbb dec cwtl inc pop add sbb fsubr add sub stos js push clc push push call xchg xchg and cmp fcomp xorb or mov hlt sahf mov sbb fcoms pushf shrl adc xchg aad std xor pop add mov xor mov (bad) push lret or pusha sbb lock movsl jge mov cmpsb (bad) lea sahf scas xor js pop jmp xchg push push movsb subl add or lcall outsl xor stos orl mov push jb add adc and or or rolb cwtl or dec jne pop jmp xchg inc push adc cmp scas xor xor jne jmp pop xorl push out pop pop xchg inc out jb inc pop inc cmpsl repnz call mov or imul mov data16 cmpsb or push cwtl jae and mov push push xor inc cmp pop loop inc pop xchg jne jbe roll pop es push dec ds and or pop in call inc std sbb ret lock jnp mov jne dec out adc (bad) jle test jno adc pop xchg add add test push add and (bad) into cld jmp inc xlat add push cmpsl sahf dec xor fidiv jp push je lcall add test dec pop call incb xor inc pop mov (bad) add and inc call push add mov cmc ds ljmp (bad) and jne lock icebp push mov add pusha or in movsb sub pop call fildll jns pop je pop adc movsb push jmp adc or push sti or sub xor mov jmp sbb test dec fcoms gs and ficoml and cmp xchg adc outsl adc aaa addr16 xchg jno inc sbb push dec cltd push push mov push xor std inc outsb and xlat (bad) je call pop mov or icebp cmp push mov xchg call dec push dec gs cmp sbb or pop (bad) and cld adc sub cld in call mov sar and iret jae lret stos sbb call xor scas pop adc jecxz inc or push inc or lcall jbe (bad) jne sub cmpsl jne sbb test add xchg lds enter dec movsl jnp ds jge sbb insb pop add mov pop rcrb xchg mov sub add in sbb (bad) xor call daa mov lods fidiv xor mov out cmp adc test inc dec cmp (bad) jns add repz xchg and jmp add ds cmp push jno js push sbb add test pop das jmp push je js and iret roll xor ret movsl push jl mov enter fsubr lea cmp shl inc push aas cmpsb cmp in or jmp call add lahf ret test roll adc dec adc add inc pop and shr pop lret jle inc jmp daa cmp ss enter sti sub or and nop push xor push sbb inc das shll jmp jmp and stc adc jno jb lea push push test pop cmp push iret popa sbb je push aam sbb sub add fisubrl pop adc mov outsl ljmp push dec add jge jb popa push sub lea mov fwait pop push lods pop and pop adc or pop cld lret dec ret inc push (bad) and imul aam push lret and push mov lods cs xchg int3 out leave (bad) cld test push jns add mov jns xchg nop xchg mov loopne or jo cs dec sub dec cld push jmp loop push xor push cmp cmp dec xor add add lock iret jle fcmovb (bad) mov ljmp data16 sub test arpl dec nop inc cmp mov jb out lock loop and jmp push iret lcall xor (bad) shlb jne xor xor and lods jnp jo push adc mov and lods lret nop jmp iret jb push and adc mov js push jle sbb add jb lahf jb scas mov jp xchg movl push jo xor and movsbl jmp je mov mov sarb or in jge mov and xor push jmp mov mov xchg mov jmp mov jp mov mov and popa adc pop sub mov xor test shr aaa fcompl xor loope xchg sbb and cmc js pop cltd std into push fsubr or (bad) jmp lods (bad) sub pop or mov movb xor inc dec or data16 xchg ss pop (bad) fsubr sbb jl or fwait and repz dec test scas cmpsl and in jno add dec adc xchg cmp mov shr push inc dec cli sbb fabs shll inc mov pop xchg scas stos mov cmc pop daa jmp add andb cmp imul xor jp xchg fsubrl pop push and fistp and jp mov bnd sbb divl push push or jmp sub mov pop insb lds or movsl je call push jg dec pop inc les xor and or mov push das add aas out iret loopne in imul push jle out mov fdivrl jle test push (bad) xor xchg aam add jne dec inc mov out mov and jge or mov mov addr16 test add add jmp dec push (bad) sub pop rorb (bad) in rcrl mov jne rcll sbb movsl fwait movsl or dec (bad) icebp movsb and (bad) test sti in pusha xor fimull xor xchg cs cs enter ss mov xchg je inc inc out cli and insb faddl lods je push mov adcb xor push pop loopne je (bad) adc cmc mov adc push (bad) movsl pop ret mov mov stos (bad) sbb jns adc popa inc test rolb xchg mov cld aas sbb call lods adc or pop inc lea sbb (bad) pusha (bad) in or sub mov (bad) jbe xor add inc mov popa jo sarb dec inc mov fimull fwait push push push daa jbe push push call in cmpsl jbe push adc stos add int3 js mov js sbb dec mov mov pop scas js test les add jo mov jmp mov sub adc xchg push inc (bad) std es sub mov repz insb dec div sbb jmp stos mov mov or cmp push jmp or add (bad) fstps jmp mov sahf dec adc mov add ret or call out repnz xchg sbb add adc sub sub cmp inc popa jno sbb shr mov cmp mov cmp mov sbb sub push adc jp push clc xchg add insl nop and sbb pop push or mulb jb call adc icebp add les mov aas cwtl (bad) mov iret cwtl mov and or xchg jbe popa push cmp adc dec aam inc and jmp cmp jmp fldenv sbb fnstsw call dec (bad) jge (bad) jne cld cs sbb (bad) mov rclb (bad) fimul mov (bad) neg jmp icebp adc neg adc fimul or rorl jle xchg (bad) std mov cmp dec call arpl push ret xor out inc cmp (bad) dec je mov jle mov rolb shll (bad) movsl push test (bad) bnd jg jl jae jmp sarb ficomp jmp cmp in or push pop and add cmp lods jl pop adc test or or loopne sub rolb mov inc mov pop or iret fucomip jns or jnp sti movd or mov arpl xor push ret sbb aas in add push jle adc mov push adc outsl lds sbb sbb inc sbb inc jge mov fidivl mov es push or sahf xor lcall out js and cmp adc mov int3 push mov pop fiaddl jne jecxz or sbb out mov mov lcall mov push js add lods les ret sbb test (bad) sbb popa inc lahf fldcw pop fcmovb xor jb,pt sbb adc inc cmp call jb dec cmp call es sub push sbb push cmp es fs cmp rolb pusha sub push divl sbb ficompl dec and add add pop dec lcall inc inc add pushf xor jmp dec clc inc fld1 mov in cltd daa fldl call decl pop in (bad) fisubl dec and add aam (bad) dec sub and adc push in or jmp sub inc aam mov and add push xor push je arpl (bad) addb ds cltd sub call dec (bad) dec loope das call lahf ret adc xchg add mov loopne sahf out mov pop daa sbb mov mov pop jmp ret cmc rcll js test cmp sub imul int3 psubsb fbstp fstpt dec xchg neg sbb push add ds push mov mov ret popf popf add popf call xlat sub fs push cmp or jae push or test jp das add pop mov sub lcall push pushf xor popf cli jns sub sbbb adc repz clc into push ja cmp lea fidivrl je mov mov in jno sbb cwtl inc push ds push pop adc negl or sbb (bad) mov movsb push or mov in mov cs inc (bad) xor xchg test mov or sub shrb jg jb or inc cmp sub sub or inc ds gs dec cmp out xchg test push inc adc mov adc clc andl dec push (bad) sub jmp dec ficoml sub mov jmp inc roll and (bad) je xor adc subb mov adc dec sbb push ljmp inc sub jmp mov pop adc sub pop dec insb clc sbb adc push sub ret lret (bad) xchg push push xchg ja enter sub mov mov addl nop push lods outsl sub jno add xchg mov jge add rorl mov xlat xor xlat and (bad) ds pop inc cwtl dec test jnp nop ret sbb movsl rorl mov inc andl dec adc iret push dec roll in or sbb dec jecxz inc adc imul xor xor (bad) jno jae out pop fbstp jp mov push call inc jnp aam popa xor dec fcoms negl das mov or dec pop (bad) daa test jmp test and pop shll setno add cmpb mov xchg shll cwtl mov stos fisubr add jbe dec inc subl adc inc dec aam xchg adc cmp fcoms cmp sbb dec sbb lock xchg or mov or call sub push rcll loop test sbb mov fistl push lock add mov inc jb into ret mov data16 addl cmovo mov stos popa inc faddl add add fiaddl lds mov push loope adc inc loopne push out adc outsb and loope mov inc dec jbe fcmovu push lods pop movl mov fs sbb test jmp inc cmc lahf lret pushw xchg pushf xor mov (bad) call dec or ret dec scas (bad) pop das push sbb sbb call jo je mov std or jmp rolb lods repz push push pushf shr adc push inc roll and jmp inc lods les out cmp mov add xchg xchg cltd (bad) mov or mov cmpsl outsb mov mov outsl je or jl clc mov jmp jmp dec jbe mov sub pop popw ret mov xor (bad) sub aaa lea jmp fild addr16 aad mov xor and lahf gs fidiv call push inc sub jne inc std jbe push je push xchg cltd inc or add inc inc and das fiadd cmp inc and jne test mov jmp lock lret jbe cmp scas or sub inc jmp push or inc inc and shll sub negl mov in aas in lock xlat sbbl sahf lret int pop cltd movsb push leave cltd xchg push clc sub xor or lcall mov pop test nop dec ficompl outsl pop sar movsb cmp xor daa push inc dec push pop sub xor mov inc and xor inc and lret jno lahf cs pop test pusha and and test jo gs push or in cltd out dec add fistp inc and add idivl pop xor push cld mov adc andb imulb imul adc nop call out sbb lea push or outsb jno rolb xchg xor ret dec jne js push or (bad) xlat mov inc mov shlb sub arpl aaa inc sub mov cmpsl dec dec cltd mov and int add insl and scas sub xchg lods xchg das sbb mov gs daa ljmp imul aaa inc xlat jp daa dec mov addr16 jns mov sbb fs je adc scas jo add mov xchg ja dec pop jo lret inc push xor out xchg mov pop xlat pop fwait dec jne xchg inc dec stc and push jbe daa sub inc or imull (bad) (bad) loopne xchg cmp adc mov cmp out aas dec and xchg icebp sub pop and jl push adc mov push dec int3 push int3 roll repz mov das dec add adc repz jne push xchg mov arpl dec repz xchg ja imull movsl (bad) push (bad) nop push iret sarl in sub sahf cmpsl stc cmp push xchg cwtl into cld pop enter xchg pop add inc pop push fs movsb mov sahf inc add pop (bad) lock bswap int mov adc add imul fs (bad) push mov outsl test add add add outsl and loop jo push jae xchg mov pop daa pop outsl fild mov lret hlt in repz dec xlat jp dec or push rolb scas movsl arpl push adc pop and jns aaa test int inc jmp push inc sti and insl jg in insl fiaddl cmp pop insb and and je iret mull mov and and mov ds mov jne insl ja out sub (bad) das fwait pop push mov js bound pop rorb jnp inc cmp ds je dec adc mov and xchg scas or or add add or insl insl mov mov add incl add and pop mov dec add outsl jg je fadds xchg sahf mov push out ret push push sub dec and add add xor jg out scas lea cmpsl test daa aaa inc add xchg sbb outsb xchg (bad) imulb outsl cld push pop inc es xor enter add idivl cmpsl lret cmp inc daa push inc or pop mov test insb pcmpeqw add add sbb push enter das mov adc pusha jmp in (bad) cltd ss push shll add cld jle or sbb xchg decl call popf inc add lahf arpl sbb add dec add popa dec mov ret push xor (bad) push mov pop mov insl cmp mov pop mov and repz mov ja fwait int (bad) lock mov cmpl addr16 jnp push mov lock and and inc add sarl ja dec mov mov jae subb das add or push dec inc mov les hlt test out les mov (bad) das cmp ja mov mov mov (bad) mov pop icebp sbb inc test jnp or and jl mov movsb push cmpsl arpl sbb xor adc push in pop aam xor inc add xor and cmp rcll popa aas push mov push sub nop push and nop inc fistp (bad) jne dec aaa sub sbb jbe sub xchg mov push loop inc and and lcall sub jnp pop push dec mov cmp outsb fiadd pushl (bad) mov inc inc jo push mov jb ja arpl or mov jne les sbb dec fcompl inc out adc inc imul outsb aas inc arpl pop or mov rolb outsl jns mov outsb addr16 sbb daa aas push mov mov push cmp jge jbe xchg aas pop movsl dec cwtl aas or outsl jo inc insl xor push scas aas jge adc jecxz dec je rcr dec and cmpsl inc and push adc cmp fnop subl dec (bad) or push push pop aaa push insb shl cmp push push inc shlb jmp lret (bad) dec push push dec jo or getsec and mov out mov das fist or fisub push inc iret dec aas push pop push out mov add cs out js outsl push cld sbb adc xlat out mov ja inc sahf out clc dec addr16 icebp decl adc jl sub les sahf loopne mov scas pop ds repnz push or fcmovb imul adcl ret add push and mov out mov push popa jae push inc add push out das push jo cmp sbb pop sbb and inc xor jecxz inc and sub pop outsb imul jns lahf push push adc cmpsl lea cmp sbb repnz or push lds jmp or imul push sbb mov sarb push push in inc call in add add (bad) ljmp repz and mov jbe adc xchg inc pop or mov push inc das out addr16 mov sub pop sbb and arpl xchg mov sbb mov or jnp xchg out (bad) pusha andb sub dec xchg mov push xor dec adc jbe (bad) addr16 movsb mov lock jp adc jns les clc mov xor jg (bad) imul loope loopne aas dec imul cmpsl ja iret push dec sbb notl xor rcl dec cmp mov xor sub lcall dec and cmp jo stos jp ds hlt das sti out loope push and sub pusha and nop (bad) imul outsl dec push lret pop and ret dec dec dec mov xor or cld fcomi imul call push mov sbb sbb pop stc push loope iret xor jb das (bad) and and jge sub les outsl inc dec and repnz pop cmp aaa mov cbtw es jmp dec insb xchg ds in imul (bad) ret push out jno inc (bad) mov dec lahf ss (bad) xlat movsb adc mov jo push dec sti lods nop xchg mov scas mov mov test or std cs bound lahf inc dec dec and mov add nop dec fiadd enter testb les and lods push bound (bad) ss push dec or or add das xchg add outsb and push adc (bad) mov pop dec mov mov call sub and mov pop into fisttp dec cmpsb xchg cs (bad) mov dec pushl xchg and bound int adc push adc outsb push push cmp pop inc sti pusha aaa xlat cmp out daa xor ja and in pextrw cs arpl aas data16 fist in pop xchg push sub inc ja adc outsl cwtl data16 add loopne sub mov adc inc (bad) aam mov cltd outsb addr16 ret insb fstps sti mulb loope sub sbb sub cmp mov xor cmp pop and push push mov and lock or mov cmp adc inc xchg dec xchg dec pop pop pop je iret cmpsb test shrb pusha mov xor nop iret lcall imull and popl movb add pop js,pt loope shrb lahf sbbl inc adc out mov and aam and fidivl inc and mov cmpsb nop sub inc movsl addr16 (bad) mov (bad) ja jmp ljmp xor stos adc add xchg jl rdpmc push inc dec into jo adcb mov bound push ret sbb ret jl movsl jno mov push pushf mov push adc jmp mov (bad) ss negb mov mov dec mov push jg outsb fcomps loopne and idiv (bad) lcall add sub mov cmp push xor jnp aas mov push dec inc sti das mov push loopne outsl inc (bad) inc pop adc test jl (bad) cs xor data16 xchg mov ljmp dec fmulp pop iret adc popa std mov loopne mov dec add fadds add add je jno lock movsb add shlb mov cmp shrb mov add push inc rcl pop fsubrs lahf pop add jecxz xchg (bad) rol mov jg pop and insl jmp and mov sub mov (bad) jle jae ror jns mov popa stc push mov xor sti fcomip rclb test add shrl mov loop and es flds sbb movsb sbb aaa (bad) loopne mov outsl jl int3 out and mov push sbb fidivr push in cs popa in insb mov cs lock mulb xor push fmuls loopne cmp xchg ja inc rorb enter mov mov test pop scas repz add xor add push sub jno lcall (bad) xor jae rorl call mov jo insl nop sub enter clc cmp sbb fimul push cmp loopne movsl ss sahf xlat add addl add idivl push cs pop iret jnp repz leave or ja push jno cmp repz or (bad) ucomiss adc push mov repz mov push or sahf idivl pusha pop gs sub push cmpsl push outsl enter cmp repz je jl repz mov fistpl imul shlb sahf out enter loopne jl out hlt push idivl and cs push cmp repz jae jo and iret repz push push cmpl sahf mov out push xchg int3 out jns out out cld sahf or fdiv cmp cmpsl sub cmp repz enter (bad) jns iret cwtl movsb cmp dec repz loopne in imul sbb cmp adc xor dec sahf out sahf cs cmp cmp out dec cwtl push cmp idivl iret cmp in repz jg mov cmp mov jns out popf and cmp dec mov mov out test cmp out mov shr out sahf int3 icebp fdivr loopne repz jns or cmp sbb sahf out fisub sbb sub jns push inc push out call iret repz js (bad) faddl jns mov cmp push cmp cmp jns push push xor repz test pushf push mov fucom jns cmp cmp dec sti mov jnp,pn cmp test sahf out ds cmp mov out push aas push sahf out sahf push subb xor pop lods and out push loopne lock sarl cmp inc xor cmpsl stc fistpll dec pushaw aas dec repz js cmp push repz cld cmp repz stos fdivs dec add push sbb cmpsl stc mov cmp int cmp fmuls data16 adc cmp jnp push popf shlb repz xchg push nop or pop push and pop push cmp pop push pushf cmpb cli fistpll push mov cmp cmp ror or mov xor out add add push sbb mov sahf cmpsl push daa push mov cmp pop cwtl add cli aam and push sub cmp sbb jle mov mov cmp movsb idivl rcl int3 icebp das outsb lea repz adc dec in push mov dec inc fistpll pop adc inc iret jnp rcrb ds cwtl pop fsubrl add or shrl (bad) lock inc push leave sahf out out push js dec push pop push iret repz mov addr16 push outsl in ds or push mov repz inc dec pop ds icebp xchg scas push pop aas nop lods imul in repz ds jno cmp out push and gs adc cmp repz jecxz sahf out iret ret xchg mov enter push jle push in sti cld repz idivb xor xor cs cmp dec cmp push inc iret repz nop mov jno xchg out loopne xlat clc sahf adc sarl sub inc cmp ds inc push push repz cmpb nop push xchg aas mov mov fwait shl cmp ljmp fiaddl dec cs push lods sub cmp out sahf out js nop jnp out sahf movsb imul fsubr cs dec repz cmpsl push in adc sub lahf out iret inc or je inc jns repz add iret push lcall cmp ds repz in hlt or iret shrl cmp push sub xor out cmp inc dec imul stc jo mov dec (bad) add imul inc test inc sahf ja jns inc cltd inc mov xchg out or add mov in xchg and inc xchg inc cmp das aas loop lahf test fs lahf add jnp mov push mov jo loopne add inc repz in inc (bad) inc (bad) push adc jnp push push push pop cs repz sbb push jmp sbb shll js mov test push cmp out cmp dec sub jnp pop xor test pushf repz repz xchg in cmp xchg out into xchg push mov out cmpsb mov mov iret repz mov repz idivl lock cs repz jnp push and push cld adc dec sbb or xlat out mov add inc add ds jns jnp push sub outsb fsubs jge mov push push int3 gs pop clc inc or jp jl repz push sub dec dec iret repz xchg pop inc js mov out push stos pushf mov ss out dec lret dec repz push in repz push adc iret inc push inc cmp idivl xlat iret cmp test mov out out mov sbb ret lock int mov daa or adc push xor cmp repz push add iret repz mov iret repz lfs jge jnp out je call cmpsl stc cmp dec push mov push dec cmp iret cmp xchg iret push dec inc js jns jge dec into push xchg pushf cmp jnp mov rcrb in imul push mov and adc cmp mov repz out dec jl inc xchg xchg mov loopne dec test jle out repz neg push imul pop iret repz push sbb dec mov cmpsl stc cmp mov out out cmp fdivp sub mov loopne jne mov clc pop add push iret repz sbb xor dec sahf out cmp pop push dec jo jmp jne out push (bad) repz or mov ds push test and fist push or repz inc fsts and out dec pusha std je das mov pop out jns repz and lahf out cmp jb cs add jnp out imul dec sub fiadd push push mov cmp iret push inc test add insb out cltd dec xchg add pop dec in mov dec fcomip dec in in rorl dec sub in in dec dec add dec loopne in mov dec lret dec sahf imull aas mov pop push repnz out out jns sub loope push iret jns jnp sub sub jne repz out out xor fnsave dec mov xor push cmp repz pop inc sahf push dec or jnp cmpsl pop insb dec outsb push push outsl jns idivl jne insl ja mov push xor jg,pn push xchg jns sti lock into xor push mov and mov jns add push inc repz out stos dec and iret mov iret pop (bad) jo iret repz and repz fdiv pushf xchg push xchg mov cld push jl jns adc outsl mov dec mov pop mov js lcall cld push scas sbb repz out xor inc shrl pop out cmp fsubrl lcall out test mov jnp push ret in or out sahf cmpsl sbb sub sahf out sahf cmp push sub jns out cmpb push out les lcall in sbb cmp repz dec push dec xchg cmp repz insb pop jl iret repz mov cmp cmp push int cs out sahf mov pop sbb jge push ficomp lock lods pop pop repz out push mov or xchg loop push mov repz push jmp mul cmpsl jge repz dec lret push (bad) sahf out sahf adc and xor out sahf idivl cmp cmp or push push nop cmp and and popa shrb insb loopne js stc sahf idivb or mov push dec push iret jnp cmpsl sub ds rcrb out push lea add ds movsb push sarb push push das add add xchg jb inc sub mov fs dec push repz dec jbe sar pop cmpsl stc cmp push dec jns jns cmpb nop repz out push pop inc js cmp mov es push cmpsl stc sbb mov cld stc cmp repz insb movsb loopne pop sarl pop nop enter cmpsl stc cmp jo call fidivr test sub enter repz push cmp lock push movsb faddl cmp mov xor imul fcoms addr16 sarl cmpb imul imul hlt imul xchg int jns push add ss jo out cmp fcoml out mov movsb jns out fcoml cmp lods repz out es cwtl rolb jno push test cld jno jl out jb test clc xor iret repz jae jae push cmpsl stc cmp cmpb jl mov sub cwtl rcrb ja jl add mov je aam inc jns repz push jl fcompl dec repz push stos clc xor test clc xor fdivrl iret sarl dec test imul push iret sarl cld push orb xor sahf push movsb fcoml sahf ja cmpsl jns and ds sarl jo loopne test out push mov sub repz rorb xchg lahf ja out in cmp incb fsubl lcall xor jns out mov sahf out loopne mov int jns sbb push push mov mov mov push imull iret movsb hlt cmp mov xchg out cmp repz call shl popf addr16 or mov jl sarl fcoml cmpsl stc cmp xor iret sarl inc js or inc jl lock fs aam lcall pushf aam fwait pop out ds xchg int3 add js,pt fistpll (bad) cld inc popf scas push in mov push nop fstps lahf push repz out les mov ds mov das mov xor fcompl mov lahf out ds jo in dec movsb mov sar movsl xchg movsl loop cmpsb push mov repz aad cmpsl cmpl add cmp sahf out cmp in stos push mov repz or inc jl iret repz repz xor ds (bad) cld xor lcall and pop xchg repz out and movsb int3 repz out mov mov repz pop sahf (bad) in es sarl test mov cmpb sbb push mov cmp mov pusha cwtl loopne repz pushf aam mov jns iret repz pushf in mov jns add fiadd xchg fsubl insb sahf out cmp idivb fs iret idivb adc out mov lock jo add sahf out out add incb push jl cmp repz and pop xchg sarb cmpsl stc push ret mov repz fs cld lcall push movsb fsubl jns mov daa (bad) pusha jns iret repz nop repz out add cmp out lcall call xor push push mov xor pop push jns jns mov push test cs repz push mov int into sarl push mov or dec cmpsl stc cmp test clc xor imul pop lahf mov push mov cmp cmp or rcrl nop fsubs aam cmp out mov inc aad sarb cmpsl stc sbb pusha test mov xlat sahf ja out xlat fadds mov jge fldz push rorb push out ds cwtl loopne (bad) iret sarl in fsubrl sahf out ds sub jl repz stc push or push pushf in fbld test sub push sarl clc cmp mov ds pusha pushf aam jecxz iret repz subb out pop mov jns iret repz add cmp mov and push mov out jns jns call xor out and scas push nop fsubrs ljmp call cwtl rcrb in inc jl in ds sarl insb lods in out mov push (bad) cld out ds push mov hlt sub mov (bad) or cmpsb push insb mov adc ds repz mov cld and jns out dec test out out push je in cmc ds repz mov cld cmp cmpsl stc cmp inc push mov sub fs out cmp or xor jns iret repz inc cli xchg int3 int jns add mov pushf aam cld inc lcall sub pusha cmp out test sub jo jl out lock addr16 jl movb push cwtl rorb add cmp roll lock sarl mov out ds test repz fldenv add out ds mov aad pop movb repz sti cmp in pop inc or sahf cmp mov inc push jl in out mov push mov repz js lock js out cmp fsubs or out clc or fmul repz adc dec add aaa int jns adc in adc out cmp fadds adc sar adc sahf out lock cwtl in cmp repz inc cmpb push pop xchg mov int pop ret sbb repz sbb mov sbb sbb imul mov and dec push jl out sar sbb push jns sbb push addb sahf mov mov pop add lods in out cmpl add (bad) add cs add aam jbe fcoms shrb sbb pop add adc scas xor jle inc stos loopne out fistp test shrb scas in xorb popf fsubrl insb adc pushf (bad) mov shlb enter out add cmpl and pusha out add das nop or in add xchg push inc sbb inc ljmp pop in out xorl or (bad) mov repnz pop add xchg lock pop fwait inc dec mov cmpsl mov pop enter out add or dec sub lahf xchg in add out mov enter (bad) enter cmpsb out scas mov outsb push adcb mov cwtl add iret mov fmul test adc sbb sahf mov das inc and or or (bad) add add push mov hlt push fsub jns out jl dec xor lock sbb lods xchg push testl lahf aam jns nop jmp or enter mov dec jle pop clc pusha pop enter out cmpsb jecxz mov mov or ja cmpsl pop enter cmp andb icebp add sub lods adc add rorl in adc call adc push das lods pop pushf mov sbb and and call dec add push add mov pop mov das sbb xor ficoml dec sbbl mov mov add xor in mov push rclb rolb sbbl sub pop cmp xchg or dec pop jo in mov sub loope cs les pushf mov pop add lods aas das push aam push pcmpgtb seto test out out mov pusha idivl pop das fadds xor xor push xor mov pop insb lods addr16 das ss je daa in sub js sbb js je jne insl mov jp xor divps nop ja jmp or iret pushf (bad) clc push add push mov andl sbbl pusha dec hlt int3 fist pop or dec push nop push add mov or ja add xor pop mov xchg push dec push aas sahf out pop aas int3 movsb push mov cwtl test repnz mov daa or jl pop sub les arpl pop mov add outsb mov mov push outsb pop lock mov lock aas lock add idivl nop or js and mov adc fistpll fadds das rclb cmpl jns xor xor das nop sub bound mov lock mov mov lahf cwtl adc xchg fcompl and nop push sub enter sbb (bad) push jb add adc popa mov dec arpl xor ds fadds xlat sbb iret pop pop stc mov es pop repz outsl add add lock or inc fs inc int3 push decl mov stos (bad) jo jg scas mov xchg cmpsb out pop pop in dec adc mov dec dec lock call mov pop mov sbbb inc loopne popl mov jo xchg dec shll pop add and mov add add in nop push jl mov stos mov mull daa fnstcw mov mov jo pop and clc cmpsb mov addr16 cmpsb ficompl addr16 and or jns adc add mov push and add insb dec sbb addr16 enter dec add cmc sbb cmp inc daa jo icebp loopne lods push test adc inc fsubrs sarb adc clc mov out (bad) fdivrs inc lods addr16 call add add nop xchg imul mov inc mov js,pn sbb pop int3 insb and inc and (bad) pop push mov pushf cmpsl jns (bad) loopne lahf nop mov push dec and loopne aaa loopne sti rclb push pop enter out cwtl adc pop and cld push mov inc push imul jmp pop mov xor nop adc sbb push and enter add mov enter insb push mov insb cmpsl mov and adc pop adc or das in js pop jb aam sbb mov stos popl insl (bad) mov mov insl pop sbbl xor cltd and push inc dec rorl loopne lahf call pushf shrb and adcb mov mov xlat fsubs clc das mov outsb inc lods cmp pop and mov test in addr16 int3 enter or lock outsl or xchg sub lcall and cld or ss cmpsl inc push jecxz inc fdivp mov add aam mov or ss fsubr js pusha or loopne adc add fidivr jo popf in jo and cwtl in and inc cmpsl and loopne (bad) call sub bound hlt pop (bad) sbb enter cld push pop enter and dec mov jno dec mov sub int3 cmpb mov xor adc adc add repnz adc fcomip push rorl je jg dec dec mov push push mov jns fcmovb xlat pushf xchg pushf fcoml js or ret or shr pslld jae hlt add push sbb xor dec ja imull mulb shlb notl imul pop je sbbl inc dec sbb add inc mov (bad) inc dec es dec sub ficomp mov neg je adc add sub loopne loop inc jo inc pop add idivl dec adc adc pop test lock mov mov aam (bad) jo or push mov faddl jbe mov jne aas lods sbb push lahf sbb daa push insb jbe xor mov mov xor nopl (bad) test xor (bad) popf (bad) (bad) dec adc push or test or inc ja stos xchg insb ja (bad) aaa and xchg ja mov xchg cmp daa inc shlb ja scas clc mov ja js xchg pop xchg (bad) cld daa jns push xlat inc cmp pop add add outsl sub cs movsl fisubrl movl or das jl orl scas jl mov dec rorl aas and mov in push jo pop int3 push jns inc ss adc jo add iret lds pusha aam in ds insb mov movl dec mov cmp jp daa nop out cltd jl fs sarl sub enter out je jnp or jp and adc push lock out cmp add outsb inc push jnp push fdivrs fist sub sbbl (bad) adc call adc sub test out inc lcall xor mov in pop aam lock lcall jl dec and jns sbb cmp mov fadd mov jl xchg repz or sub in pusha jge add mov push mov insl sbb mov loopne cmp cmp add aas pop jo hlt (bad) fistpll and xchg mov sub (bad) shrb push jae mov dec (bad) mov js xorb mov jg das cmp (bad) push (bad) xor mov in iret enter cmp pop insb mov jg sub fist sbb nop push les enter fs subb scas pop sbb test inc orb addb inc addr16 stc cmp jmp nop xchg push enter adc cmp fist cs push hlt mov fsts js dec enter pop addl nop js inc sahf stos in loopne enter push (bad) inc and adc inc (bad) aaa fs push fs xor movsb push mov stos jbe (bad) mov enter jl xor stc pop and andl sbbl das das inc test add add orl sbb dec iret jae iret push js xchg orl test iret push jb enter nop out cld nop js mov xor test fs loopne lahf adc mov test iret mov cmp xor jb add xor repnz mov rorb cld push in int3 mov nop pop enter and push xchg inc xor addl iret pushf push in sub mov pop push pop xchg xchg xchg mov pop cmp mov loope adc in out fadds pushf test enter shrl xchg push xchg xor outsl loop lea xchg and jns mov mov in nop insb add cs mov hlt xchg mov jo inc inc mov and (bad) xchg pop enter mov pop repnz mov aam lock adc or mov fdivrl adc mov cwtl push sbbb or sub pop sub orl xchg add mov mov push jb xor mov movsl out dec aam inc sub dec jo dec sbb iret add out pop mov mov push rclb cs and sahf lods pop pop lcall push or cld sbb loopne push cmp orb mov sub mov orb mov nop mov aam cmp pop adc in shrb mov hlt negl pop (bad) pop xor pop jns sbb rorb inc cltd push cmp stos mov arpl and es int popa cmp leave inc mov sub lea mov test or sub les adc call das or pop mov pop sub (bad) cwtl mov test xchg nop add int3 sbb scas mov ja jne pop ret xchg push rclb jnp or or push es (bad) or fisttp (bad) stos inc sub aas jle fisttp (bad) test jmp mov rep adc rep pop into xor ss and nop and (bad) je mov jo mov cmp call (bad) es xchg inc adc addl push push out in adc pop fcomp jg aad add test sub jno dec add test mov (bad) cmp sbb out adc je out pusha mov push mov cltd ja and sub add insl jl xchg or and inc and lea adc arpl flds pop inc and xchg inc cmpsb and lods push xchg lcall pop dec stc pop and stc sbb enter (bad) mov mov inc jmp xchg fsubp enter dec jbe inc mov adc push xor sar je push insb js ljmp adc in inc sti dec aas push cltd pop insb push (bad) imul and pop mov ljmp mov clc xor hlt std cmc sbb push dec inc mov mov or clc and ret ficomp movl loope fimul mov ss dec notl pop mov in adc or jns and stc mov or in inc shr je push or sbb repnz dec sar lret mov jmp call sbb shr dec xor push in add and je xor lahf inc lods jl pop or xor mov or sub xor cld scas push call push out out lods inc mov call das dec xlat lcall push fadd xchg xorb fwait cmp dec sub adc add fs xchg pop adc lcall sub or jp adc ret xchg ret subl repz adcb add (bad) imul inc inc scas notl dec xchg fisubl push inc add icebp js add mov outsl or and cmp sbb jb pop cmpsl and and dec lock cli or sarl xor xor ror je jno jg mov sbb or popa cmpl adc push push inc adc xchg orl push aad (bad) pop mov add hlt lea adc clc sub (bad) jle cwtl ret dec jne push mov mov dec (bad) xlat sbb add mov xchg (bad) sub iret fnstenv cmp jl lock pop imul add nop dec or inc and mov inc fiaddl xor clc xchg pop add push and in popf mov ja enter add mov xchg and push das ss stc adc push sub out sbb ss sbb (bad) cmp cmp cmpsl or or dec repnz push stc or std insl jb in mov mull mov mov push xorb and mov xchg mov mov push and std jmp cli pop jmp (bad) mov and push sbb adc cmp and inc enter fbstp xchg (bad) cmp and pop jo shrl inc mov loopne mov ficomp loop xor xor fdivp xchg (bad) xor aaa sbb pop shll mov (bad) cltd in xor out hlt pusha and mov sub xchg push icebp pusha ljmp push push nop lahf mov cmc mov jl push cmp push mov sub stos push test cmp sti notb test loop jne xor pop sub or or jp xor or fdivrs es jl and test mov mov (bad) (bad) push sub hlt mov jae test and sub sbb sub test add mov xchg mov cmp outsl iret sub add sub inc push push daa add nop test jp (bad) push call sbb sbb cs mov push mov inc insb xlat or imul stc and idiv data16 jmp adc scas cmp sbb aad mov pop jae sub std inc nop imul and add xchg (bad) cld mov call orl sbb mov fdiv icebp adc pop pop add movsb inc dec aas pop sub outsl loop out mov sbb sub cltd fisttpl pop inc add frstor adc add pop and sti jmp sub pop lods mov push jmp mov adcb sti push push insb in mov add or pop addr16 scas xchg jl mov xor bound jmp ljmp and fcoms dec push add lret push inc (bad) popa xchg stos cmp push xor data16 inc adc jae sub cwtl in lret insb add push sub addr16 gs (bad) nop add inc call pop fcomps icebp jmp sbb cmp cld (bad) ljmp ds icebp (bad) decl mov add (bad) xor jne sub and int3 jmp jnp loope scas fldl sub cwtl sub je ret xchg xorl jmp repnz pop fsts icebp repnz imul btr adc movsl jo mov (bad) fcomps enter cmp lea lret das sub jge inc (bad) sbb rclb mov ret vpshld insb xor mov add push ss stos scas leave lods iret call xchg push push or and out jne dec in test jnp push mov add pop repnz icebp imul pusha out out nop xchg pushf in lock fdivp or push repnz rol xor (bad) jne push xor and pop (bad) sbb (bad) call push (bad) aaa sbb dec data16 or data16 or scas or mov xor scas fild sub add insb shrb add mov movsl ljmp call leave xchg push sbb clc mov adc dec jle je adc or mov xor lock add aam std inc ljmp into sub push jo idivl xor inc jo add mov mov cmp xor rolb int3 je xor inc jle mov add cmp add shrd xor call push inc clc std inc pushf testl (bad) cmp pop jl (bad) pop fstps or shr outsl cmp and fsub and je or loopne nop xor mov adc xchg xor stc add inc or sub sbb js cld mov mov fwait or addl inc inc mov call sbb jge sub loop inc dec or in test jp clc push fnsave push xchg sub mov mov jo (bad) aam pop ss jge push mov scas test mov cmp sarb inc jmp enter loop roll push mov mov rolb jge add push mov push sub mov repz call ss hlt adc faddp push add lahf push divl mov cmp inc or cli ds fdivl (bad) sahf ss pusha push shrb lock push dec sub call test (bad) insb clc call cmp loop mov push imul cmp cmp nop shrb fcomp pushl lret jmp mov mov inc inc cmp jne (bad) cld bound test jl or push (bad) dec pop ja pop lret in push or shr mov insb add cmp inc push jb in cld adc xchg idiv xchg xchg gs xchg mov je aam cmc loopne ss sbb dec sub or mov inc or and test push popa dec hlt xlat add sbb push iret mov lds xchg mov jbe jmp jno and jo adc dec call loop aas clc pop inc cmp sbb stos xor ljmp enter sar test adc clc movsb sub lret cmp jno icebp loop inc jne cs aaa mov sbb jecxz dec ret cmpsb jmp inc push (bad) movzbl nop cs fs xor mov rcll push roll sbb rolb inc insl je mov mov inc mov clc push repz sbb call sub pop cmpb pop xor lock pop push jmp pop dec jne (bad) hlt mov (bad) lea loopne lcall mov dec dec sbb cmp mov xchg mov sbb mov inc hlt std lea test inc outsb xor push and or lock jmp call mov mov mov cltd dec jno iret push pushf pop (bad) sub push inc (bad) mov sbb rolb add int rclb sbb pusha sbb xchg mov cmp test mov jmp dec test cld or push in pop imul mov cli add mov cmpsb ss lret add ror xor cld lcall cs adc repnz loopne mov out call jns jno mov std push add cmp adc dec repnz idiv cld mov movsb out (bad) ljmp push data16 popa les out mov pop movsb std daa add lods mov orb push out cltd testb addr16 cmpl (bad) mov loopne loopne std pop leave daa pop cmp out mov fmuls enter cmpsb out pop in dec insb insb movl js pop aam test inc cmp mov lea mov inc sub (bad) mov lea (bad) mov pop mov and (bad) data16 mov or xchg mov fwait gs icebp clc mov fldcw cli (bad) adc cmpsb add add out scas xchg mov adc xlat in jge clc js push adc dec or ds mov adc cmpsl ret mov lret jb adc mov scas mov jecxz add sar je add stc mov xchg jl push mov mov cmp jne iret mov and cmp lcall (bad) fcomip push lea sar and dec lea mov add mov and int3 or mov ja cld mov mov ss js jl hlt lea mov stc inc cld incl lea or sarl faddl shrl jne add testl loopne sahf xor sbb (bad) or std js mov cmp je lock sbb or dec arpl dec js test (bad) mov push add or add push or cs xor adc mov lock sub pop aaa (bad) in pop mov shll mov xor mov xor inc add jb cld push call push rolb pop mov push push loopne mov mov xchg jae push imul or js cmp and push test sub test mov nop pop lods xor cmp lcall and mov xchg push pop mov sbb fisubl std xor insb dec mov push int3 leave and push xchg push test ret lret in loop xchg call xor test inc ds add addl mov mov jmp ja mov pusha pop cmpsl aam add mov icebp repz add (bad) dec aas add dec dec and jo lahf std pop xchg ds jo push add push sub inc cmp sbb sub cmp aaa movsl jae test cmpsb push push sbb fbld loop test js sbb add inc into push add and (bad) je loopne add mov xor mov inc fldenv inc fdivl shll adc pop stc or ss (bad) aam clc add les pop sbb push pop push xlat sub lcall daa (bad) js adc insb or call mov loop popf std rorl push sahf in adc std lea or pushf dec dec adc mov push push inc dec mov popf std roll push sbb fldcw fidiv clc pushl mov std decl sahf std (bad) mov mov push xor (bad) mov jno popf xchg push loopne add add fsub or add and icebp es jecxz mov movsb call stos pop out gs repnz fnstenv loope pushf lret and nop xchg out add pop cmp pop stc ret repnz icebp add lret mov or jb cs mov (bad) ljmp cmp sbb jne,pn es inc mov (bad) jmp mov insb ret mov wbinvd sub lret ss outsb ja add jmp xor insb jecxz jl or xor outsb pop shlb inc (bad) push lea jnp cmp mov nop push sbbl mov popf test aam scas add xchg xor cld (bad) sbb popa insb sub (bad) icebp pop es addr16 (bad) sub pop xlat mov pop cmp mov jle add ljmp dec mov push das inc cltd adc inc clc bound jae (bad) (bad) or rorl cmpsl adc mov std mov fsubrs outsl scas fcomps mov lock jb std jge std aam adc imul pop mov outsl cmp mov cli leave lret or cli push cli (bad) cli fdivl adc stos std pop in in (bad) jl std dec ret pop rol out or mov mov xchg sub (bad) push dec and (bad) out and xor and pop data16 push fnstenv cmp (bad) bnd rclb in xor (bad) lcall xchg std mov pop pushf bound xchg lcall popa cmpsb xor sbb cmp ret fiadd fimull mov xlat mov and push in cld and xchg orb in xchg dec jnp mov clc push push push or ret loop loope setae loopne and (bad) adc dec pop xchg mov jns stc jg sbb push and cmp in flds xchg xchg cmp sbb cltd dec cmp lods cmpsb xor mov add inc rorl (bad) ds loop add and inc repz sti jae test mov adc imul sbb mov enter jmp popf xlat aas popa test xchg std xchg jp leave xchg add ret aad cld test add jmp jb in xchg push aad xchg std pop mov nop mov xchg inc pop rcrl jecxz aam sbb xchg (bad) jns ljmp mov std add cli xchg xchg xchg mov repnz jmp jns je inc stos sarb sbbl add (bad) and inc jmp push lds jmp sbb sbb push push lods dec sbb sub jle mov aad mov or dec loopne inc mov insl xchg jecxz test nop mov inc enter xchg std movsb lods cld jns xchg sti cmp mov andb in fst jbe and (bad) in nop sbb out jns pop js mov adc adc mov repnz std aaa in xchg and jnp inc pushf dec into cmp imul aaa add and fs (bad) sub xor and and jne ljmp jecxz add push inc or fcoms jmp dec dec lret mov add or test (bad) jbe sub js adc xchg into xchg cld cmp sbbl icebp test pop aas cs or sbb jbe inc xchg adc mov ljmp (bad) je or mov fimull mov test mov add cld or andb lds adc cld add (bad) test xchg push lret inc sbb or out dec pop aaa cs pop adc in mov push out call (bad) (bad) add jmp icebp hlt call cwtl xlat jp jg adc insb pop jmp int adc add and or jb add mov push mov div xor sub mov lcall xchg push add jbe xchg cmp xchg or call (bad) jbe aam mov inc or sarl mov xor or ret sbb xor fstl dec sbb or imul (bad) mov aaa stos sbb push cld (bad) pop daa mov xchg in push cmp add and xor addl outsb fsincos adc mov jmp call cmp cmp rcl xchg jbe popa pop imull xor pop stos or out sbb (bad) jb push les inc mov ja and or pop cmp imul mov repz cld dec sub or mov fisttp add xchg add adc mov shrl and jne negl rcr (bad) adc or das xchg test out test cmc push popa orl xor xor dec jl mov lds dec or aaa push insb cmp cmp push inc push clc push iret mov clc rcll cmp ret dec stos fcmovbe mov mov arpl mov adc mov cmc (bad) idivl push (bad) fsubrl inc pushf sbb add pop cmp andl stos enter arpl mov adc mov stos rolb into test out xchg push mov popa or sahf hlt add add xchg or arpl in or xor adc fcompl scas dec (bad) ret test and add or jno mov or cmpsb ficomp xchg pushf sti andl cmp ret fbld xchg and or fisttpl mov test fisubl sub test lret mov pop adc pop push mov test pop enter pop int fwait push jno popa sub shrb pop mov (bad) xchg cvtps2pi add into jle pop jns or mov push sbb pushf xor loope lock (bad) jbe push lods jmp cld out int sub cmp jae mov je lods (bad) jbe and decb jp movl dec jb out (bad) lock and jns dec jbe adc scas and mov mov or mov add daa cmp fildl ret ja jo ja jbe pop dec mov aas push jp out or test sub and or rclb jo push stos sbb inc cmp push daa sti (bad) mov mov xchg movb mov repz je jbe sbb jo pop orb jp rolb pop or cltd mov lods dec inc and out cmpl sbb inc fs mov push add xor sbb test xor pop push lcall rorl push jecxz or lahf sti push inc call xchg mov cmp add dec call call rcr negl mov enter cmc xor sti jecxz sub jne cmpsb sbb js je jle mov dec inc jge repnz cld jl pop cmpsb pop mov push or and movsl push sarb ficompl push shlb jmp jle mov or add xchg push mov or sahf push mov or or xor dec repz sbbl mov (bad) lock adc je mov jbe lret push mov sub pop mov movsb push xchg mov ljmp out inc sbb add (bad) in jo mov and pop shlb cmp stos add lea xchg inc call push movsb xchg jne xor pop arpl jle mov iret xchg mov add push test movsl add fucomp jp xchg push push add lods mov xlat xor pop cmp xchg xchg push jmp dec push sub imul sub sbb sbb dec (bad) je pop push (bad) dec and inc or popa pop fcmovnbe iret jl mov push jecxz pusha cmp (bad) in push out and cmc mov jne xor insl jl jns sarb jecxz out jle push pop jmp adc or pusha dec je mov lds jecxz loop xor je,pn or sbb jge enter jo push cmp into pushf adc push (bad) add ret add inc dec jb cmp dec sti dec int3 pushl movsl push call sbb jo leave and cmp jge (bad) sbb inc push pop inc es flds add push jmp cmp cmp jl or push push push int and xchg enter das add cmp mov dec jmp and cmp inc jmp mov dec inc gs or push test hlt mov pop or jne sub sarl fdivl sar push jnp cmp js mov add inc lea push inc shlb imul push cmp inc fwait incl add sbb sub dec cmp repz and jne cmp and and cld xor add mov jmp or scas push lcall roll cmp adcl aam inc or notl roll inc test (bad) aam push insb jmp push enter sar (bad) sti pop and dec push jb xchg ljmp xor das adc jmp xor or or loop cmpl lahf out inc push pop (bad) test enter iret repz leave sarl cwtl mov pushf jo out lret xor (bad) xor push push jbe outsb fwait movsb mov cwtl (bad) mov adc inc or pushl or push shr mov push sbb add push xchg mov adc jb xor lcall movsl adc fidivl sbb dec xor mov mov fildll das sbb fidivl aad inc hlt faddl rcll rcrb and jns adc or mov sub xchg arpl mov mov lock inc lahf orb dec out imul cmp jne cmp adc pop sti sub adc inc je popa cmpb push xor stos (bad) xor das sub push ret movsb push pop jne or push or (bad) scas and cmp sub mov arpl dec add adc push sub inc sti dec ja mov xor test mov sbb gs mov gs adc mov jo rorb and jns cmp cmc xor jne or xor jle push push push add inc imul cmc les hlt pop icebp and orb or popf pop push jns xchg add sar push (bad) xchg or mov in xchg pop jp jne pop popa mov in sbb pop adc xor dec sarb ret mov popf mov push pop push imul mov mov lods push (bad) jmp dec add ret add push ficompl jnp jp dec push push and mov sarl xchg xchg ljmp movsl lret sahf or insl or inc roll push ret (bad) dec ljmp and repz js outsl mov cmp pop divb (bad) mov rcl sbb sbb push shrl adc cltd add add inc inc mov mov adc mov bound cmp mov test in (bad) pop enter cmpl sbb (bad) adc or pop add or lret inc sub dec pop ret cmpsl xor pusha and xor inc xchg lahf rcrb outsl or loope pop jmp sub inc or xchg adc cmp adc hlt jo and std jb (bad) mov push daa dec ret add pop sub cmpsl ja xor lock ret cmp push add sub imul push inc dec sub dec pop mov push mov loop xchg add (bad) and push int pop insb or (bad) xor push outsb mov adc push repnz bound sub repnz and in add rorl ret test invd push or mov xor adc repnz fwait mov mov xchg cmp inc inc cmc lods and sahf scas mov inc pop jb lods hlt les mov rcrl or daa jecxz std (bad) mov push jno jnp sub mov int3 roll inc pop loopne pop sub sbb pop jne adc repnz andl mov adc sub mov mov or and (bad) pop clc jbe add jo scas adc push add adc or jo push es inc test lock and pop push adc dec lret movsl lock sbb insl out pop hlt bound dec shl mov add arpl and xchg push jbe dec in arpl imul jne pusha aad jp testb into dec adc add add inc hlt add pop push andb scas push scas mov lods enter dec jne sbb xor out push jne sub hlt pop imul popf push test cmp fstpt test xor add pushl call lret sub xor dec lds (bad) fnstenv insl dec (bad) adc mov xchg sub es das mov xor jge adc add or je inc dec dec pop xor xchg inc jne cmp arpl push enter mov imul inc pop mov mov pusha pop rcll aad cmp fsts adc daa dec inc push mov lret lret insl jle sub fnstenv push lock xchg movsb add xchg xchg test jmp enter jecxz and enter push jecxz sbb in xlat mov lods into lret pushf mov outsl push pop mov movsb mov cmp loop lret sub jl pusha push xchg movsl fs stc push mov sub data16 leave or test sbb and call jmp add sbb jmp push jmp push daa test or add mov out pop mov scas push hlt ljmp jmp mov shll xor or scas dec rorb sub aas cwtl (bad) dec cli cmp jbe inc or cmp loope fstl cmp jp (bad) out push add les xchg cmp jl sbb pop outsb inc dec push add cmpsl add cmpsl sub data16 or push sarl lret sub sbb movsb mov sbb sbb push in jp jg mov xchg mov fistl ds mov and scas ret fdivrs xchg movswl dec clc jl lcall lret je push adc fadds dec and loope and shr pop push sbbl ds pusha shr adc sbb lcall sub jge mov insb push imul cli sub sti inc add sub adc pop sbb ficompl add push mov sub in adc cmp loope (bad) data16 sub ss in (bad) sbb int ds fadds aas fsubr push mov cmp fcoms push jns sub call xchg mov xor push inc dec scas add loope jmp cwtl push js je aam dec jb aam add push cmp or pop js sbb or sbb dec sbb push fsubr (bad) aam push imul adc sbb lock add cld add jmp push xor jne je dec push (bad) dec aas sbb movsb cmc jmp in xor jb or xor cltd cmp aam mov call enter xor xchg mov push jl jl scas test push pusha bound inc lret in sub (bad) push inc xchg and roll adc sarb cmp fs push mov loopne lret mov call out jo xchg dec xchg inc or dec jo gs sub adc fisub cmpps lahf push (bad) je jae cmc push roll rorl push daa mov nop push mov call test or mov inc lods pop cld daa mov test inc add (bad) je dec push mov jo paddusw dec add and stc or cmc cmp push ss insb pop dec mov ljmp mov mov xchg ret add xor fisttpll subl addl xor and add mov adc and adcb jne pop sbb cltd ja mov gs mov adc sbb mov cmpsl hlt sbb ds sub imul jge popa mov mov add jge pop (bad) repz dec sbb cli adc rorl mov cmp je fsubs pop sub mov sbb xchg push mov ss sbb or mov jo and lea (bad) xor ja inc sbb mov add ja sbb out enter inc sahf ret popa movsl call mov cs nop call repnz sbb pop (bad) push xchg sbb lea insl dec testb jmp xor sbb xor xchg jl or mov movsb out jne inc and stc or sub cs pop cmp mov dec movl lret add iret sbb aad sbb mov mov mov cmp mull je call xorl add mov cmpl lock test xchg pop jns jg dec enter call jl mov loopne push fild lret negb idivl mov dec jle ja jno push push clc mov inc ds mov inc inc sar add jo mov mov dec inc addl push or sub cltd or imulb mov or fldcw daa and xchg or or mov leave sub inc or add ds ret cmpl sbb mov or fadd jl adc inc adc xor pop and ljmp add aas xchg imul (bad) mov (bad) jbe mov push mov inc sbb dec nop mov in adc mov xor movsb add and or mov add bound sbb add arpl adc add and nop sub fwait mov cld push inc lea mov jbe xchg mov stos rorb add or js mov shlb xchg inc pop fist shl add adc add imul fadds pop jae enter movsb (bad) fdivrs cmpsl mov xor std jmp or out dec fisttpll dec inc inc mov inc and pop pushf push push loopne mov fidivrl push or inc sub out ljmp mov mov jbe (bad) sti jae sbb adc lds push loopne cmp jbe push jp mov jnp clc push jo and jne sbb lods shlb lock lret push jmp stos push jp pop push push lods and or fstl jp (bad) and daa adc ret jb ret xchg sti lock jmp and (bad) nop pop mov push in sbb jae mov add jae cmpsl sub cmp es cmp in push push push mov jecxz add (bad) mov cmpsl in jne dec inc fsts dec dec dec sahf push in inc movsw jl lods dec and movsl clc mov pop icebp push mov mov push jnp fcompl dec paddusb sub pusha in ljmp into gs out orl es sti jp jo add stc mov dec hlt decl dec inc lea and mov mov stos mov je adc sub pusha cmp mov lret popa cltd nop inc xchg das cmp enter inc and push add fs lock add fwait je sub dec cmpsb jge push leavew lcall std adc xor test mov add xchg adc push movsb and and frstor mov xchg adc xchg xchg mov add js je cmp lahf xchg and cmp lods or lock sub mov and mov cmp outsb inc push xor xor inc push adc call dec mov and adc xchg pop mov aad jp pop test cs xor push jb mov lcall jne or addl call add push push and sub imul push mov mov dec or dec call ret xchg lcall pop (bad) mov sub push rclb iret mov push mov vmwrite adc dec mov es addl hlt int3 lret imul (bad) push inc add mov xor inc test (bad) or inc fs lcall mov xor add add enter pop push jle sub sub hlt ds bound loop (bad) in pop xor jbe in inc pop and sbb adc lret inc sbb (bad) not leave stos add mov scas mov rclb das (bad) (bad) icebp rorb lea lods mov xchg ja adc mov push cmp pop push test aas xor rorb and dec in outsl or roll les and add add leave adc and or scas in pop or sub add lahf test pop call inc (bad) fyl2x push test push cmp iret inc add lretw add and jne inc pop and es inc and xor mov ret std outsl pop lock push imul movsl dec sub inc andb mov mov sub mov add ret jo decb inc loope fisttpll insl inc xor aaa daa sub xchg adc mov out dec or data16 inc ss sti mov and mov ljmp sbb cld rcrl call pop movsl dec xor add je stos and pop ja mov dec dec or sbb inc push pusha add pop dec adc push xor pop and rcrb inc jg fbld jnp pop popf push loopne call jae pop enter or in cmp cltd sub add inc repnz call xchg nop sbb xchg hlt inc push jecxz jno jo fdivl mov mov ret add add inc cmp ret mov pop xor mov out mov add cmp loopne mov out sbb add adc sub xchg aam ljmp or (bad) jecxz add lret jmp adc xlat in es xor arpl adc scas popa and cmpsb mov jne adc mov dec xchg popf lods (bad) pop cmpsb or lods xor loopne aam ret (bad) xchg pushf xchg sub dec add insb je inc cmp lret dec mov push adc and sbb je cmp hlt add mov std pop fisttp push int pop inc cmp outsb adc jl sahf dec call xchg xor inc fcmovu pop fimull inc call adc cli pop pop je pop cmpsb add ret ret push xor movsb sbb mov imul mov cmp sbb jo rol sbbb dec lcall add cmp js cmp clc jo ss sbb insb call push movsl pop cltd jle cmc or jne dec jmp rolb rorb pop clc inc ficomp in loopne adc xchg jmp andb inc or out sbb xor mov sub mov jo (bad) ds and push stos mov in or int3 addl push sarb pusha dec inc or sub (bad) inc aam stos dec jne push pop mov add inc inc mov scas and out ret cmpsb fs and mov (bad) sti jmp loopne dec loopne mov mov jae mov (bad) test enter dec xor xchg lret sub leave dec push xchg insb sbbl leave and cltd push inc in test fwait scas and or leave add and sub pushf adcb inc es or leave or xor (bad) push daa inc enter je cmp nop or dec xchg jp dec in mov movsb jle loop jnp (bad) push xor mov xchg fimul gs (bad) or (bad) popa notl dec lret or enter jecxz add inc cli or inc daa ss and pop (bad) popa aas and lahf ja lods cs xchg sub mov mov mov adc ror cmpsl inc dec inc add mov fs mov divb inc push fmuls xchg notl scas sub inc jl pop iret or sub cmpsl repnz inc xor sbb call mov pop popa adc sbb sti out es push (bad) pop jmp rcll cltd (bad) fadds pop xor adc pop (bad) fistpl rcrl cmpsb dec jge fsts cld and out and inc call loope enter fnsave pop mov or and adc jbe mov cld and (bad) in add mov pop cs push and add scas fs jg call mov sub popa aad dec mov pop xor inc (bad) lahf insl inc dec pop aas xchg cli cmc sub add push mov pop mull out les cmp faddp and xchg or popa sahf cld dec cmp paddb call push push xor add or cmp incl push and jg,pn pop cwtl sbb and adc (bad) push mov push xor xor mov push sbb pop cvttps2pi mov lret xchg push sub dec and inc mov cmp and inc pop outsl push (bad) (bad) lcall adc jg and ja sub push jnp insb adc nop popa xchg push test insb rolb js syscall mov ret aam imul push add add push adc xchg push arpl fwait xlat (bad) xor fildll cmp add dec mov (bad) divb jecxz dec leave sbb push push pop sub mov push xchg jge sbb jns iret adc add mov and xor mov test sub cmpsl or jle jecxz mov orl aam dec sahf js jne pop rolb adc xor inc sub jecxz cmp mov enter enter mov push cmp insb and enter outsb (bad) popa inc push std leave and sub fdivrs add adc inc dec cmp or jne jge jle fwait inc sbb xchg add lea outsb or nop push jbe adc stc mov cltd fs loopne xor pop jno add jmp xor lret push mov andl call jp mov and push sbb and adc mov adc add sbb loop mov cltd push hlt push pusha in cmc or pop sbb call add lret lods in dec add and add dec loopne jp or jnp mov lods ja or mov scas jp test daa iret sbb adc decb or xchg out outsb (bad) push xchg adc xchg pusha mov call rcll fnstenv or into jmp push jbe loopne and jle repnz pop jecxz dec dec and dec enter mov loop dec enter dec movsl adc mov movsl mov ret and add mull rclb push sarb in mov (bad) jmp mov jmp ljmp pusha ss pop ja mov mov orl pop or lcall call jne push inc mov bound dec clc sub adc test pushl je inc sub lock jecxz and sbb pop dec mov inc add (bad) lcall rclb lock cltd in xlat ja jecxz or dec imul mov jecxz dec push or ret and test leave xchg mov add xchg out idivb lcall call mov mov push adc mov pushf pop dec lock (bad) lock or inc ljmp sbb cmc lret call xchg mov mov inc andl mov mov lret sbb adc adc in fidivl es xor inc mov cmp xorb cmpl sbb jo jb fcmovnu push fcompl aad aaa add mov mov xor fwait sahf xor jecxz xchg dec cmp (bad) dec push or add call push movsb cmp add mov add test repnz (bad) and jge mov add adc call adc push mov aaa into fisttp popf jl in add add mov adc stos add mov jle push xor pop lcall add repz popa loopne push push push enter sub inc xor clc push ljmp sbb mov mov add clc and hlt testb ret lret shrb add sbb xchg call fwait and aad mov pop xor or jbe inc cltd or jae dec inc stos mov outsl outsl jae cmpsb mov push mov add or ds add sbb jo nop imul test mov add sbb (bad) pop xchg jb inc mov xor call test dec test or mov dec iret push sub pop and xor fmuls and mov das inc or cmp or xor dec or cld inc xor leave or loope dec clc mov mov dec fldcw shll push cs dec cmp cmpsl mov sub fmuls and ret push lahf cmc xor xor popf testb and loope fldt mov add int3 xor lret pop pop nop pop sti mov in inc out sub std mov imul add and loop or leave sar lock int mov nop (bad) mov add cli in repz inc push mov nop std jae push jo sbb add ds fisttpl popa push sub dec cmp je add fcmovnb cmp pop movsl (bad) cld dec cmp dec enter cld or mov dec adc cmpsl pop jno lret adc xchg push imul ja jge jo add (bad) jae (bad) popf xor adc daa in dec (bad) mov insb loopne xchg (bad) fstps xor ds or cli call addl mov lea xchg and fnsave inc push add sub xor mov lcall inc pcmpgtw mov ret and aam out and add jbe dec into xchg lea xor aam in xchg pushf xor cmpsb adc call stos cmp push xchg movsb movsl imul or or popf out popf adc lea movsl pop std and cmp or daa (bad) stc add dec mov pop xlat cli mov movsb in je or pop push ret add or or jno and sub or or cmp aas and call int3 mov (bad) push imul pop inc xor dec inc inc sahf jg cmp bound mov int in test aas test aam mov xor cmp push sub and sub mov or cmp xor add cmpsb in (bad) imul enter clc push inc nop push mov dec xchg clc dec or inc je push cmp and and rcrb loop in lcall push cmp int3 mov inc adc and insl and pop sub scas nop xchg xchg imull insl push inc dec push imul xor out insl in inc adc push pop xchg orl mov popa adc and lds sbb fdivs lret mov imul jo adc push push add pop sub in mov addl xchg inc fsubs stos sub in pop or xor add jmp (bad) xor (bad) int3 popa jge adc mov aam adc rclb clc and call pop cmc mov mov testb cmp push xor or mov push out sub xchg lods incl add movswl lea xchg movsl add (bad) or xor mov push fiaddl clc adc mov push lcall sbb sub mov into cmp xchg std jp jbe or call push sahf mov (bad) cmc sbb sbb enter add push aas or jbe scas pop xchg movsb shl xchg jns add test and lock xchg push jb test dec xor jbe pop roll and mov push enter testl cmpsb jb loopne and dec adc leave add pop hlt inc xchg pop addr16 push dec inc mov and aas jno dec xchg das lods out repz lea dec inc andb loopne lods repz or rolb and mov lods and push imul push mov and pop daa or loopne repz int into leave and pop adc int3 cld sar mov insb (bad) xchg jo test mov in les aas and or call and js jb daa les jge or xchg (bad) push les icebp and bound fs call test outsl and lea lods mov arpl fs mov xchg or mov add fistl inc stos icebp and jp stos in cmp jge xor xor nop or mov es std ja mov call sub hlt or cmp inc sbb cmp lret and sbb inc inc sbb pop inc or push inc scas fbstp fsubr clc jnp in mov xor push add fmull jae cs ljmp pop pop and dec or add call or aaa inc xchg mov xor ja inc inc cld lret cmp sub add xchg in cmpsl cmc nop into (bad) in movsl pop sub out test cmp jae nop jnp push mov inc inc jo pop and enter add cmp inc push leave rorl mov es cld and call call daa mov push into jp push out pop popa call sahf ss push fbstp jbe fstpl mov add fstpl jle,pn xor push mov enter xor in push sbb (bad) js mov inc pop push in mov push add or adc enter lea ja xchg cmp ss in jns inc fwait or push pop dec pop in fiaddl leave mov pshufw rcrb pusha hlt jmp push cmpsb xor adc rclb mov aas dec push call iret cmpsl jns mov and test xor (bad) jne lock pop in inc cmc jne aad xchg jbe lret cld je sub mov jl cli xorl push push ret aam ss stos xchg xchg scas cmp mov mov outsl xchg in jae pop stc rolb imul cmpl xor cld jmp repnz mov mov xchg int3 add mov je test sub xor imul roll jns aas sbb lds inc (bad) and mov xor enter repnz mov icebp pop mov cli out xor mov sahf jb nop int dec xchg out mov xor xor cmp rorb cmp ficoml lds out enter fadds jbe stc push insb add test insl add faddl in (bad) mov add fiaddl repnz pop push call arpl pop jo inc push sub jecxz push adc push (bad) add in out andb xchg add lods xor in test sub mov jle insb pop hlt idivb pop jne or pop xchg mov cld or lea push push cmp push sub pop scas daa scas jl fisttpl jns in cmpsb sub in sub les pop jmp and in or push insb es lcall rcrb push xor push insb test jns inc push pop inc jb ret sbb je mov in mov pop push fisttp daa in or test and and xchg mov (bad) nop fwait mov adc scas jbe stc call repnz push loope sbb xchg cmc shl sbb cmp push or xchg mov enter jl imul sahf add dec sbb lldt das and jle adc xor and and (bad) mov or xor xor cmp add xchg add lret mov xchg cmp das int lea push and loope shll cmp ja sub ret xchg push imul repnz inc mov xlat repnz or les xor insb xchg pusha add loope stos and push repnz push jecxz adc mov fimul jno xchg cmp adc adcl or push dec pop and xchg nop sbb loope (bad) fistp dec mov cmpsl mov dec cmpb cmp mov adc sbb lock (bad) je std add inc mov sbb add or ds xchg cld adc and add dec leave add sahf jae xchg mov cmc insb cli or sbb jno push or sub mov test (bad) mov inc aam ret leave aaa xor movsl test dec daa add out dec push jns or repz sbb ljmp int sbb adc ds jne cltd ficom xor call popf jge inc add call mov bound sti shrb add clc jbe xchg mov or rcrb fdivs lods push mov std fstpl dec stos xor cmpsb jne add inc mov mov daa (bad) jae sbb adc int (bad) int3 outsb jl xchg jae jno jle xchg sbb sub mov xlat mov popa push cmp mov cwtl adc pop xchg and fst shrl nop fldcw nop inc and (bad) fstp cs lea and and add mov movsl call mov imul push ss lods lock push push and push enter movsl popa sbbl in fisttpl insb inc or xchg pop add ret fldt popf cmp jl and adc jl adcl insb outsl or adc adc push cld call pop mov fimull fsts lahf dec mov mov sub fcom inc dec stos and fwait pop test outsb push data16 inc loop jo cmc sub addr16 ds xchg lods or jb push cmc inc fwait call inc mov xor in je sub push cmp pusha cld sarb mov mov pusha cmc pop adc test fsubl xchg test jne mov outsb ret sbb adc mov addr16 cs adc insb add push std call inc and jb aas lea outsb (bad) dec inc push mov dec rorb jecxz mov mov and add out mov push out roll or jle scas push cs leave add pop out add push cmp outsb frstor add mov jne pop or jp imul add push ret mov fsts call sbb cmpsl xor pop add or or scas loope adc or and push mov xlat jns or jge in adc push sbb inc movsb push cld mov sub movsb fcomp xchg scas dec pusha and cld fistl insl movsb mov dec and cmp int3 cmp mov and mov add and in addr16 and ret mov pop dec insl into (bad) or push pop adc xchg push or sarb adc xorl add inc mov push pop push test push mov call mov xor or in movl inc faddl (bad) adc (bad) shll inc js adc add in pushf pop xor outsb loope xlat mov les mov fcompl mov mov mov sbb xor adc mov push and arpl dec (bad) (bad) lock jne xchg fsubl inc xor sub loope mov daa jmp push mov xchg rclb adc (bad) push fucomip bnd lods outsb ja les xor jmp or (bad) add pop push addr16 xor and enter cmp jg lods shl stos clc add or call xchg or push int lea sbb cltd add add or aaa and xchg pusha out aam lret push xchg or xor add shrb push push js aad cmp inc bound adcl cwtl test fs in dec jbe pop cmp roll push xor pop mov lahf ljmp cmp cmp mov mov mov push inc dec inc push pop call out xchg (bad) je movl sub enter into add xorl cmpl pusha popa or insl gs inc sub lret aam test or fsubrs inc inc push insb jb imul push jne inc push (bad) rcrl (bad) mov add ljmp gs mov cwtl arpl fisubr jae ja jae push out repnz jb imul adc add and mov push sahf aaa or inc adc mov mov sbb rcll sub and out fnstcw and xchg push pop xchg or popa pop test xor jmp xchg in mov pop sbb xchg dec test call aas lods lock adc and add shrb bound popa jl adc dec in popf or or mov add adc mov xchg pop stos arpl stc dec and cmp jo fstps inc jo adc shll cld test cmp lahf fcoms sub add cltd adc fucom pop adc and fst mov jb ret inc jno adc dec pop lahf (bad) push lret jg pop int and mov add mov (bad) mov dec cmpl xor mov mov cmp or xor sub imul aas or and mov pop shl and enter loope sbb stos xchg and (bad) jo stc jecxz push sub enter cs dec sbb mov mov test mov add pop daa fmull jno jns insb sbb mov add mov push call jne or addr16 mov xor sub xor lret enter push push gs aam stos add jne dec push and js movq iret mov les sub sub adc adc (bad) pop add in fiaddl outsb call pop addb push dec or jae mov call repnz adc xlat mov pop adc into jns and pop repnz xchg lret outsb add push adc pop into cmp cmp adc aam cmpb out ror and dec sub (bad) adc int outsb adc pop repnz mov nop cmp int xlat subl jo (bad) push adc add dec aad enter (bad) movsb adc int3 add and xlat jae add andl push dec add insb adc or cmp or inc ret nop lret (bad) dec jb jbe icebp imul rclb xchg mov imul push add push enter imul fiadd xchg adc and leave les int daa test je pop pop adc adc push jo in addl sub loop,pn loop loope fisubrl or push in add push jno imul mov loope hlt dec push push mov (bad) into sub push cwtl lea adc add jge movsl pusha outsb sub and call fldenv stos imul fcmovnbe int3 cmp das loop cli lret jns add jle cmp cmc or movsb (bad) aad int3 ja push ds adc andl enter dec cmp in xchg mov dec xor inc (bad) addr16 jmp call lods or push mov cvtps2pd add and mov xor shrb loope daa in cwtl cmp daa dec enter add and adc push inc jle addr16 xorb scas jae dec mov test dec int3 push xchg xor mov xor xchg gs add push clc pop mov iret cmp or xlat hlt (bad) enter cmp inc push mov test sbb insl lds add mov addr16 adc call test push inc cmp dec add adc or icebp and xlat frstor add gs insb cmp rol xchg outsb pop inc add inc dec iret clc dec iret mov sub into sub add fiadd adc add jg add scas sub or call sub xchg cmpsb jnp push adc inc ret cmp xchg dec jae mov sar mov cmp jne inc adc or in or (bad) or xchg jo mov and inc in mov mov ljmp out or add call sub orl push divb adc sbb push or push mov mov popf mov mov pop cmp (bad) xchg add popf mov icebp mov jmp xchg ret (bad) dec inc xchg daa and inc pop iret inc cmp add lret popa test pop cmp cmp or jl dec pop fiadd push mov sbb sub fdivl and inc sub dec sbb push sub aam test jns and or lods in xor call fadd mov outsl xchg dec enter pop call test scas and sbb mov (bad) ss call lds lahf fsubr roll or cmp mov or rcr icebp sub divl push mov fmull pop dec out pusha pop cmpsl dec dec out pxor shll cmp jmp icebp and cs add mov out add aaa add (bad) push and fs add das mov loopne,pn pop scas pop xor push movsl les aas stos sub fcoms cmp ljmp nop push or scas or or lret shl adc mov rcrb je add popa jmp xor and aas push add lds mov inc pop in push jbe xchg xchg in in in add hlt pop xchg jl ja mov test push rcrb bound and scas xchg sub or mov lds movsb cmp jecxz in inc push gs int3 pop sbb sub adc fnstcw push push aam push mov ljmp jne sub xchg les cltd add lock mov sub jmp outsl lock lds rolb xor inc or ret call or xor xchg loope imul and xor loopne testb cltd xor sub xchg mov push mov insl ja repz push (bad) mov inc push leave (bad) mov cltd pop test nop pushf sbb loop outsb inc mov loopne nop inc repnz dec mov repnz xor push push pop adc sbb or arpl das fwait sub mov push ret int3 sub sahf jg mov (bad) pop mov push fstps cwtl outsl stc inc mov loopne dec pop or sbb cmp xchg adc xchg lahf pop add ss pusha test lea pushf cmp push popa xor adc pop ds push cmp push mov dec jb imull sbb pop jo xchg mov push push call in sub movsb jb lock mov cmpsl imul xchg das call les mov inc xor icebp rclb and xor cmp nop fmuls inc imul sub sub or gs aam in dec add pavgb inc dec xchg push sbb jo push mov xchg hlt mov lret lods leave inc cli shrb cmp (bad) inc cld adc data16 loop mov dec or jmp lret dec test rol repnz inc lcall push cmp adc (bad) sbb cmp test cs pop adc out call add (bad) mov nop movsb mov pop adc xchg sub adc adc inc sub add adc pop sub arpl fbstp lods mov mov mov add jne imul sarb push push pop sub inc incb add jl lods or stos pop fmull jg pop aam mov enter dec sarb aas mov sbb mov xchg inc mov (bad) mov sbb jne addr16 and push sbb sub std loopne pop shrb adc roll fcomps fmuls bound or add push xor or and imul or jno push push dec fwait mov cmp gs and in in adc nop pop in sar test dec dec sbb and mov in stos sarb mov loopne lods fs add or sbb xchg jp rcrl sbb add je jle or dec or dec leave test or (bad) and sub xor jb pusha xchg dec add lea sbb leave data16 rcrl insb std mov sub leave sub add and daa xorl mov cmp fs push xchg or push sub inc push btc cmpsl jns mov data16 sub (bad) mov add cld sub je pop inc mov cmpb mov sahf and and into jg das jbe cmp push cmc ds repnz roll sub jo je jae imul jo mov jns sub aam orb inc sahf faddl pusha jbe mov add cmp push rcrb or pushf cltd sbb push (bad) aam in or dec xchg (bad) cld into jbe nop cmp dec dec mov pop jo mov sub lods inc adc mov dec in sbb cmpsl test inc sbb mov dec jle push call push out sub std mov xor rcrb or pushf cmpsb lahf xor dec or icebp adc adc fistl pop push mov mov xor sbb xchg int pop sbb outsb and pushf inc inc push xor pop imul sbb nop int (bad) (bad) call add mov and cmp adc mov xchg jae add lea add add aam jg int3 rclb xor (bad) ljmp fstps test scas cmp adc push sbb popf imul push das aas xor pop mov add adc xchg scas inc mov aas xor movl or (bad) fidivr icebp push push adc cmp sbbb inc sarb add cmp setge and sub mov mov pop in jge fiaddl pop mov push mov adcb mov cmp inc jge xrelease test dec add pop xor add xchg rcll push addl daa popf and push mov decl (bad) scas mov das cld cld lods dec in xchg mov jb lcall xchg lret adc shlb out or fdivs or xor inc push ret mov push sub lods jo in and or test sub lods dec repnz adc or clc lods inc push in das push add push (bad) lods (bad) sub iret mov scas and ret out xlat push mov loopne push mull cmp test fs sub cmp dec or sbb sub sbb push and sbb fs nop call xchg mov test into test vrcpss mov dec sub call or stos mull fsts jne and and adc add mov call fs dec jb inc push ss sahf std aad leave dec dec aaa stos add add lds in clc mov xor and test mov sub cmc inc mov adc inc (bad) lret stos hlt pop xchg sbb out nop xor pop repnz stos inc jb repnz das or sub sub cmpsb (bad) inc xlat dec adc or inc sahf mov mov or pusha mov push aas xchg or push adc sub rcrb out aas mul jle pusha sub sbb lock call roll les cmp test mov out fdivr dec sbb adcl and js xlat out xor (bad) repnz and sub sbb xchg dec and add in xor js cmp cwtl mov mov cwtl lods push pop les sbb fcomip mov inc xor loopne cltd in test fstps mov test mov or pop inc repz pop stos pop or arpl aad lds imul push push (bad) call ss dec lea sbb xor fsubs inc shufps xchg mov movsl inc adc mov in cmp sbb add mov jne ss cmp (bad) in adc rorl in sbbl andl dec aad stc dec enter inc or mov sbb push dec push dec out (bad) sub adc push scas sub add inc dec and in movsl shr dec or xchg inc daa adc das pop sub push inc pop adc push or xor in das cmp add movsb cmp loope cmp addl roll scas daa repz dec adc add adc and push pop or cs les es outsl inc xor xchg fildll adc daa inc scas nop cmp in repnz xor pushf bound add addr16 push sbbb dec es lahf (bad) lret daa adc repnz es out daa xchg sub inc adc add jno push and inc pop test loopne sub push sbb aad cmp cld add xor mov mov mov ret ficoml push jne add aam dec outsl fsubr pop clc je and das inc sahf mov adc inc out add repnz add testl mov fwait aam jb cs pop cltd lea cs xchg cld (bad) call enter jns (bad) call sbb repnz inc push push push jg adc dec dec cs aaa mov dec lcall xorl mov adc pop fs mov aaa sbb inc arpl xchg and dec faddl pop cmp mov popf test mov je add orb ja add inc clc je jmp or mov inc jle mov pusha sub pop pop mov rorl addr16 adc (bad) xor stos push cmp clc or mov add je pop and les jmp lar adc adc cmpsl dec adc dec fs shlb pop sbb ret xchg rolb and jge push jle sarb lahf and add roll push lods sbb jae fs rorb movsb pop inc or mov popa (bad) cmp popa loope pop es push fldl fldl fucompp fnstsw test jp mov mov sbb add cmp mov push adc hlt lcall dec ss xor dec in sub adc ret push sub mov cli in push push inc test lods xchg adc sbbb cwtl sarl mov sub call mov and cmp dec pop jp jns or push outsl mov cmp adc xor jo push imul and inc mov or add stos cmpsb repnz mov sbb xor adc divl or ror mov (bad) pusha jmp sbb or jnp jmp addr16 xchg mov and lods pusha xchg arpl fcmovbe push mov xchg into faddl iret repz icebp push or mov mov ds rorb decl test adc gs cmc push and fadd push test ret jmp movsb mov (bad) jne xor orb jge adc xor aaa and push inc push bound outsb pop cmp pop dec or mov sub cmpsb leave scas (bad) fiadd sbb push ja je inc je push sub loope jl dec (bad) subb push fstpl push fimul out call imul insl je in pop push cmpsb mov cmp sub mov test cli or adc xchg cmpsl shlb mov and (bad) cmpsl jnp inc cmpsb pop clc fs leave cs mov cmp add insl mov in and mov add clc in dec or inc sbb into jbe sub push mov jg mov mov xchg fstl adc pop mov gs sbb rclb in (bad) aaa int and push call ds test xchg out (bad) pusha stos repz dec xchg lret jmp movsl repnz cmp insb push pushw dec inc dec and add sbb add jmp sub mov cmp mov mov jmp push pusha or dec xlat mov adc add push add mov jle das cmp inc dec dec jmp flds int3 adc cli pop fldl in fisttpll dec sti mov mov out iret in clc xlat psrad push cld mov cltd mov int mov repz outsl ror mov mov push or sarb pop mov dec cmpb and iret mov cmp cmpl stos jns push jnp adc xchg imul push xchg add mov insl gs jae fisubr mov scas clc jbe cmp push jne mov push adc cmp call into cmp inc vaddpd push pop xchg mov mov xchg cmp pop add xchg cmp es sbb out push lods mov or (bad) mov movsb test or roll call jmp notb inc push adc add inc or jle add jbe jmp pusha sub mov jmp sbb aaa in inc sbb or or xor lret sti movsb test jl or out jbe inc pusha (bad) cmp sbb cmpsl push testb imul add dec sub jnp (bad) and adc xchg pop in in mov ja dec mov dec xor scas loope rcll in cmpsl or cld imul nop movsb adc in je int push popa ss clc jmp inc jns iret mov cmp dec ret rcrl aad daa (bad) dec leave cmp test or repz jo inc ljmp cvtdq2ps cltd inc dec movsb or xor int3 cmc push push xor mov cmp jbe pop dec add jmp push fisub sub (bad) lock imull sbb push mov dec rcr ja test roll sbb cld ss outsb xchg or jmp (bad) sub jmp outsb dec push mov jae xor cs push loope and aam sti xor inc or or data16 daa dec icebp fwait xchg cmpsl push out jns ja push fwait into push (bad) sarb cs mov fcmovne xchg inc push sbb jmp jns lret adc push imul stc and sbb adc or int3 adc shrb push adcl jnp xchg dec push push push mov pop insl dec sahf out je inc cmp jbe (bad) repz data16 ds inc add (bad) lret and xor das push and mov dec int mov fucomp push sbb pop (bad) fdivl iret and jo jns test mov movsl lea das ja push pusha cltd movups fiaddl and cmp js push testb add repz sbb and rolb imul nop subl push add call aam mov jle inc loope mov inc dec inc mov (bad) add dec sbb xchg cld push es and push lret les push mov mov push adc cmp imul dec int lret add call or push mov adc pop mov enter mov ss mov call sbb push sub shr rorb js (bad) ja pop rolb lret add testl outsl imul push xor insl pop cli icebp adc and test sub ja jae cmp sub mov add aaa mov les add jl or jl leave dec mov andb jmp repz outsb movsl jae add inc mov call xchg mov sub les xchg (bad) mov adc pop (bad) dec add sub jmp sti jmp push cli jnp flds jp std xchg clc and pop cmp jnp push or ficompl outsl repz add imul lahf ja xchg clc dec inc lahf xor mov inc inc add sub ds rcrb addb sbb add das sbb fwait repz inc jmp dec idiv add fldt cmpl adc xchg push mov or jmp xchg add add sbbb mov ret mov cmpsb mov imul or fsub push jnp add fiaddl test push bound leave mov xchg push cld mov std mov call xlat cmp shlb jl pop jl scas or ds xchg dec push adc out push aam outsl nop sub xor mov and adc or add mov xchg pop sub imul mov xchg push popf push jl js mov xor jle add call pop (bad) movaps push lods iret push pushf pop (bad) push stos rcrl cmp loope or rorb mov sbb mov dec sbb sub hlt and hlt mov jl jae lock fsubs imul pop out pop int mov or mov in movsb push stos jns sbb enter popa adc dec sahf je (bad) sahf sahf adc ljmp mov mulb (bad) adc xchg or add popw or sbb ret push mov lock inc adc jl xchg sbb pop sbbb and push pusha push push cmpsb sub aas cld fdivrl push test fcoml cmp add pusha push arpl pop adc pusha sbb add outsl inc jge add push adc jo dec add push cmp push pop imul dec cmpsb push add add sub mov mov ss jg aam sti and adc inc cmp push fnstenv clc xlat jl outsl into fxam cltd out dec lret insb pop sub jne mov sub pop sbb add push add stc mov adc jb fisttpl mov mov in out dec iret fldcw push stos js push int3 mov add popa xchg cmpsl repnz and jb and mov cmp mov loopne je fistp xchg stos jae std push addl ret xchg (bad) mov imul ljmp dec (bad) mov rol int adc pop push pusha push adc sub push jg stc sbb and pop pop xchg push mov push punpckhbw add jecxz repnz in dec movsl nop (bad) roll cmpsb das mov mov test add lret add popf push fucomip mov ret (bad) stc cmp jp push nop pop jb,pn inc div rolb sbb push cli mov push out add or push loope negb roll in adc adc ret and sub sbb add es sub jmp ficoml or add and mov int mov sub pop (bad) xchg aam xchg movsl call push (bad) call lea adc insb pop xchg push add pop test popa push movsb pop push cmp mov inc stos push lods adc pop enter cltd cmc cld xchg adc in aad nop xchg xchg pushf lret push and lods and or fisubr jg call adc imul mov sub gs dec (bad) insb scas jne call sbb jnp (bad) or inc daa jl push push inc jecxz std ss or cli cmp adc mov movsb xor and je jmp pop mov sbbb push cmp jmp aas pop adc pop mov add xor adc push clc add popa int3 daa xorb sub cwtl and xor sub (bad) pushf int sti dec add aam cmpsl jl push cmpsb inc ljmp push cmp js iret mov push in mov lods sub dec or jnp movsl sub push pop dec jmp mov push into pop add adc sbb push push add pushf das xor xor inc pavgb and test enter xchg gs iret out lock loopne jmp addr16 mov in sub fmul dec shl movsl in sub in (bad) push repz jecxz jge (bad) aad and sbb or pop je adc or loopne mov jne add sub int3 into addl ds mov cmp dec arpl nop lret add rol mov xor adc xor pop sbb sub jnp or jmp (bad) cmp xor add or xchg lods xor pushf add jp push push pushf jle pop and out or and arpl pushf je push pop test push (bad) in pop and jb dec mov and cwtl std push test icebp je sbb xchg out dec call push inc enter add cmp je and fisttpll out push call jno fs aaa out rolb aas jmp mov mov and or xchg ljmp add xor push xchg inc mov xchg cmpsl fwait add and cmpl push mov out std sti imulb enter push test cmpsl (bad) fcompl sbb addl inc fs inc pop sbb out adc or cltd sahf jns enter push xor adc dec xchg mov aaa sub jecxz decl js add movb dec sub (bad) adcb cltd gs cmpsl insl sbb jno push mov jmp test add rclb push aad jl dec or add and xchg adc push add pop pusha fnop mov jle (bad) adc push inc vmaxpd icebp mov rclb leave add inc test notl rolb mov (bad) and loope mov dec je sub gs mov or and dec cmpsb mov mov push pop fimul rcrb repnz incl cli decl xchg cmpsb movsl ret xchg xchg cmp sbb mov sbb push adc gs push push das insb xchg popa js fdiv sbb push mov push data16 cmp loopne adc add and sbb insl dec std mov adc fisttp sahf gs cmp pusha imul sbb push mov or or push xor repz loope xor cmc sub cwtl out out mov xor sbbl (bad) and mov cmp sbb mov sbb out mov push xchg ret fnstsw js push dec push xor jl fsubr rclb mov clc mov lret push dec leave into cmp xor lret fs lret cmp hlt ret pop clc repz inc jno push and push jmp in (bad) je pop sub outsl pop in dec dec rorl sbb add rcpps adc repnz pop loopne dec leave add push outsb in es dec dec xor jno cwtl cld xchg and sti nop (bad) rol cmp movsb gs and dec adc sub sub or or stos and add push or add and sbbb push push ja rclb push and inc mov (bad) pop leave cld loope mov pop loope jne sub xor mov xchg in and push or and jge mov inc sub mov xor adc cmp jp sti fild sub or stos ja push pop push insb aam add data16 (bad) inc sub punpckldq cmpsb rcr pop lea (bad) mov pop shl ja or push call repz es test push js xchg xchg (bad) imull outsl and insb sahf mov aam lock enter xor pop mov push jnp xchg ret sbb (bad) in (bad) xor or push into les sti loopne lock arpl mov push faddl jbe les or pop pusha push push sub mov adc call and jp call push imul inc and push jbe loope ljmp in push sahf fmuls pop pop aam cmp jg sbb shrl dec mov ds fucomip je pop stc pop sbb adc inc push test sub pmulhuw push loopne fiadd mov dec (bad) mov mov notb decb fwait lret xor fdivs addr16 or enter or cmp inc (bad) ss or rclb (bad) js adc add inc (bad) jne mov dec fwait cli adc pop add daa pop stos inc sub adc xchg push adc std mov or pop ret push push mov dec cmp or mov cmp push cltd popf jns inc call nop out xor lods push adc and adc jo call xchg add push mov imul mov pop sti mov xchg ds or mov je neg jbe adcl xchg shrl mov or sub jmp adc jne jae add sub push mov push es sbb xor sbb adc mov jo ja insb sub adc cmp sbb pop or add inc add push outsb sub inc jecxz fdivrp push add dec hlt xor mov mov ja in dec inc mov sub mov stos xchg mov sub negb ja cmp cs testb sbb cmp jmp dec mov adc or adc mov cld push psrld inc push sub mov xor call sbb mov loop int push imul or ret add shrb ljmp clc ret inc jne arpl cmp leave xchg xor daa mov cwtl push aaa mov call movsb into (bad) das push inc inc pop mov mov jle mov pushf call aam sub jmp rorl add ret mov rcrb mov sub sub ret leave int3 es cmp or aas mov sbbl decb ljmp cwtl add rorb add or cmp push jae lods in mov jl jg xchg mov cmpsb ja cmp test jnp jno add int add xor loope add push inc inc (bad) xchg cmp pop jno call rolb jmp adc lret cmp mov (bad) cmp jl push insl pop test clc sub dec sub pop add pop fisubr add cltd cld mov cmpsb add add insl mov or sub mov jb xchg pop hlt ds sub and or sbb in mov imul pop sbb cmp in in loopne pop push mov mov mov cmp into add mov mov pushf sarb sbb adc or add (bad) icebp add pop dec pop pop rclb xchg xor mov dec sub push or adc repz notb sbb sbb and ja adc jae clc pop dec jecxz and jno fisttpll out dec daa movsb (bad) outsl add sbb xor or xchg stc popa sub (bad) testb ja call aam add add aam (bad) mov pop and and dec jl sahf or sbb out (bad) inc pop sub cmc xor cld mov cld sub and xchg negb push pop fmuls scas fisubr inc mov add mov hlt (bad) adc insl xchg or out pop jg adc dec pop adc and in in or push adc call cmp add mov push rcr out adc adc add nop push inc es stos aad sbb or loopne scas xor ljmp (bad) mov push or xchg mov out push dec jns jmp orl jge push out and push inc data16 nop add or add sub enter add (bad) frstor dec ficompl xchg pop pop cs mov fldl inc mov jnp nop daa inc insl push iret test imul popf outsb push push jbe adc nop rcll mov mov mov mov inc loopne sub sub loopne aad jle call fstpl fmull sub adc dec (bad) mov mov xchg xchg inc pop pop in xchg out (bad) gs das adc mov popl pop loope or les std mov sub sub dec adc inc adc in add (bad) pop xor dec mull cmp cld loopne push sbb fldcw xor ret in sub or adc and fisubl subl jp nop mov pminsw cs test mov push int3 jmp ret mov cmp mov xor stos pop pushl push nop adc adc shrb adc mov xchg add or in adc lods js cli testb in loop into sub xchg loopne mov push call cmpl pop and add jb mov fstl xor lcall cwtl mov sbb pop (bad) and ljmp int iret pop mov jb sub cmp xchg or push sub nop lea sbb mov je (bad) pop xchg cmp add int3 mov out mov mov pop push (bad) insl inc dec test in (bad) movsl addl call std inc fstpl sti sahf or adc add push sar stos cld jle cmp addl xchg gs cmp pop mov sub popa test or cmpsb or xor xchg mov insb cltd icebp fwait clc push scas jne fldz fstpl adc xchg add xchg mov mov les in mov clc stos fcomip mov jbe cmpsb dec daa arpl mov sbb ds sbb xor push insb dec jge cvtps2pi rorb inc jmp inc inc btc push mov stos pop cmp dec dec mov push xor mov xchg push or xchg add xorb mov dec inc hlt cs lret inc fmul push jp lock push and arpl add mov or dec sub (bad) popa and cmp or shrb mov adc mov and cs ret test xor leave inc les push xor mov add inc lock jo or sub mov sbb paddb mov mov je lods add sbbl jmp int3 or dec and or inc movsl pop and aad (bad) sub add xor or rdtsc dec add lahf jmp out mov rcll jle lcall adc shr mov shr xor mov loope push dec jg jl xchg cli outsl mov jae neg adc neg call das push call mov fisub bound add cmp push push lock jb mov ja aas hlt call rorb or and sbb (bad) cmp jb ja cmp adc jb cmp into adc notl ret imul sbb mov or mov repnz lock ds call or sbb sbb xchg ror pop or inc outsb adc lret pop mov xor add mov fisttp jns jne inc or xor test out lods sbb (bad) xor sti or sbb popa rorb mov xor add or lret or (bad) rclb jl jg jnp or add mov and xor and popa ret js,pn data16 pop mov sbb cmp cmc mov call call cmp pop movsb lcall rclb jmp sub int adc mov int test fwait mov movsb imul push jae mov pop shrb fnstcw or push arpl mov scas dec stc (bad) popf cmp ds cli decl xchg cld add test add push je mov in dec mov icebp pop imul into jae sbb jle roll sarl cli mov sbb or into mulb (bad) js out lds nop stos adc (bad) icebp rclb cld push mov andl orl push and aas push js inc add mov mov pushf addl and xor sub imul test movl inc (bad) decl mov jne sbb sbb jo fwait les cld rol vcvtdq2pd or pop add lea ret jb sub and mov pop int cmpsl hlt std roll in std and inc and mov into jge jmp fldcw push push cmp jbe loopne jns fstpl and or mov cmp cmp mov sub xchg popf iret pop imul loop sub mov jecxz leave push push les sub cmp dec add shr fcom test (bad) call jo repz adc (bad) lock xchg ret pop rcrl cmp mov fs mov out out insl lahf inc orl sbb dec mov mov or push ret iret leave sarl test (bad) ss cmp ret or outsl das pop (bad) out fnsave cmp push mov add fidivl ret hlt lret nop int3 arpl test cwtl call popa mov pop pop lcall add mov push cmp pop imul sti test jge mov ja gs push addr16 cmp cmpsl dec addr16 mov int cmp outsb push jl xor push cmp push cwtl or cmp xor xor pop dec mov orl call push aaa ret jmp push (bad) fsubr popf add insb out jle push push fisubrl push xor inc sbb inc add cmpl aam into pop pop jae sbb or or xor (bad) lcall sub mov mov inc fcoms and mov pop pop xchg in xlat adc int3 shlb dec pusha (bad) add sahf push (bad) std jecxz sahf out data16 pop xor push xchg movsb mov mov add or pop xor add insl jp roll dec cltd xorb pop (bad) je inc insl or jg pushf call jecxz adc inc ss xor jne (bad) scas imul ljmp mov dec (bad) add fistpl icebp add fwait in inc daa loope ret xor or test jge jne nop inc cmp or movsb scas mov cwtl or fcmovnb jg test dec jle jno call sbb (bad) clc outsl lock cli add mov enter sbb adc mov jge shrb addl or mov sbb cs subl adc movsl movsl popf and sbb xchg push add push cmp xor pop jle jo inc or mov call sar andb rorl mov stos mov sub leave mov and insb sub lock adc inc push or in cltd in inc pop dec (bad) cld stos cmpsl pusha mov push jo mov add mov mov out or call push xchg clc out insb les xchg loope xchg fisttpl lods push push mov xor mov inc das jg rol jge add pusha jmp mov outsl xchg pop movl sbb dec sti mov lods mov sub push in call stos dec jl cmp xor and push outsl xor lret push mov mov mov xlat scas mov imul lods sbbb mov mov dec or inc aas push lcall adc into shlb dec (bad) pop loope cmpsl lods inc subl push mov cmp shll out mov dec sbb stos mov push enter test mov and daa stos cwtl adc mov ss xchg xchg dec maskmovq (bad) mov cmp jns lods jb ljmp pop (bad) leave xchg sbb mov sbb addl xchg stos dec cmp (bad) (bad) sti les xchg adc adc hlt pop test pop xor imul sbb test add jl loop or je pushf notb pop pop loope cwtl or movsb sub adc cmpsl stos xchg out add and push js mov mov loope es iret xchg jle jns (bad) stos jmp sbb jbe pop adc pop pop pop inc push and movsl cmp sbb rcrb iret and add sbb and mov adc push enter std sti paddsb jns cmp scas cmpsb push mov cli and out test pop cmp or dec call leave xchg add loopne pop leave push cmpsb (bad) or cmp out rcr pop pop loopne and fnop nop push jmp jp and mov sub inc in movsl popa mov pop fist xchg in in and pop rorb faddl in xchg sbb pop adc jp bound vmread clc dec dec in popa dec (bad) or loopne jae xchg (bad) xchg xchg ja mov cld jge mov adc das dec shr mov ds dec loope dec fadd enterw xchg jmp clc test sbb and push js out in add ret push adc mov xchg cmp and shrb adc push (bad) dec adc pop push int push jg inc dec out mov insb add call mov push dec call fistpl sbb inc push nop and inc popa adc sub in or fdivs adc xor push push js mov loopne pop sub xchg adc cs cld pop ret adc in and mov or mov outsl xor adc pop test mov dec es cmp xor sti push push cmp xchg xor and rclb sub add sub push out inc pusha or fsubr sub dec jo shlb jmp es loope dec and or outsl ret (bad) xlat cmpsb lods dec sbb mov xchg mov mov and mov adc movsb sub add xchg mov stos clc sti push push lret (bad) mov sbb jbe rcrb loop xor call cmpsb push or call or xchg stc adc and add cmpsb iret lock (bad) pusha (bad) xchg xchg leave xchg ds mov push mov xor rcrl ret (bad) or pop inc out sahf shl sti pop (bad) divl jne lea in mov push mov je (bad) in sub (bad) push lret in call icebp rcll adc add sti mov push and push fwait adc movsb dec nop loopne jo fsts (bad) jo shll push call dec es addr16 (bad) mov or cmp jle push or mov ret loopne (bad) cli je ret add push cmp rorl sarb fidivr aas pop push stos inc call pop setg pop mov sarb packssdw popa cmpsb orb cmp add cmpsb in mov shl aas add stc mov mov adc mov or or dec push mov (bad) (bad) add mov jge cmp fild movl leave xchg add push fcomps enter in xor jbe imul pop inc orb push adc jmp lods and dec lods mov inc adcb sbb test nop xchg jne and outsl or movsb add loopne clc push outsb je sub inc add jnp mov je inc sbb test orl or sbbl and movsb add push ret js loop inc daa sar ss xor xor sarb dec push mov xchg aad imul sbb (bad) jb fisttpl pop adc sbb sub (bad) aaa xchg popf and cvtpi2ps fmuls dec push mov mov pop addl push cwtl pop xor xchg pop sub and pop push xlat ss test pushf out xchg cmc sti sbb pusha add jns ret mov xchg and add cmpsb out movsl in and sbbb xor xchg rorb rolb dec pop inc (bad) dec push inc lahf fsubrs ljmp imul out add mov cld mov xchg imul call lock dec mov xor out and adc jno push shlb popa and lea in iret xor xor das aaa bound test xor xchg mov mov cmpsl repnz in out xor mov or cld lahf (bad) inc fistpl lea dec gs or fidivrl xchg cmp (bad) dec hlt mov xchg add jnp lahf lahf pop (bad) (bad) pushl lahf xor xchg xchg add jle cld mov inc mov push mov hlt cmpsb jmp pop jo inc pop and mov xor push lods and fdivs mov dec or xchg test pushf pop (bad) sub cmp popa inc pop xchg stc inc xor das je xor pop cmp or je add push andl lret pop test dec xchg jno dec ja (bad) and pop jmp pop and add testb pop xlat or ret sub pop test inc push push mov lods cmp or addb or daa nop nop adc inc dec je xor testl testb pop dec xor jbe add insl loop mov addb fisttpll addr16 push sbb push jno lea das sar aad add or scas pop fsubs mov in insl jge insl or in and xchg push or mov ret or fwait movsl push add movsl std xor jl mov sub jl jg and jne je fidivrl leave subw ret or inc adc iret repz adc push add push or mov or andl fisubrl enter add sub addr16 add int3 pop fisttpll adc js mov mov roll ss fsub add fstp cmp popf push inc jmp inc std iret cwtl dec (bad) add xor adc jle,pt push or mov and fdiv sub xchg xchg xchg fadds inc adc sbb js cvtps2pd pop ss cmp inc pop mov add daa movsl sbbl dec stc lods xchg jp in jb or addb mov push les sbb dec add dec fiaddl jmp mov adc lods cli xlat or mov adc mov repnz mov and xchg ja jp add inc into push add std lods inc test scas sahf xchg xor xchg ss sub mov int3 add push inc stos inc sub push add xchg ret sub pusha stc adc mov xor sub outsb jge xor push test pop jg inc call les lds mov je (bad) push push lds xchg pop popl adc sub cmp pushf cltd cs or mov pusha js mov xor loope or rcll or and push aaa sub lcall jnp jae adc or inc pop shl cmp sub inc mov or or repz adc add in lods xchg push lods xchg adc cli push xlat stos mov jl mov xor stos pop push dec cmp dec or or inc mov xor sar lea jecxz lock rcl aaa xor jle call (bad) jb and xchg emms stc loope xor shll or pop rol loopne (bad) mov adc xchg push and rcll jb mov or fiaddl jge sbb or test xor std push sbb xorl mov pop inc inc cwtl leave pop jecxz xchg cmp mov enter cmpsb addr16 sub mov out or pop pop jb pusha sbb jo push (bad) xor mov test inc push cmp pop repnz push int add xor xor jl inc loope pcmpeqw fdivs fs or pop negl iret in sub jmp inc adc fwait testb jb sbb (bad) (bad) (bad) sarl inc in push fldz aam fs (bad) call je inc push push jne cmpsl xor dec repz add in xor xlat jle fstpl push push sbb inc (bad) ss in push or or cmp xchg nop xchg dec enter jp scas or lcall leave test mov (bad) lock into data16 pop pusha add ss test loopne loop in fmul pop insl loopne loopne or sbb and sub sub push and push int3 hlt push inc into sbb movsb popf loopne je in mov jns seto add cmp test inc adc add pop cmpsl sbb sbb xor add jns xor gs cmp std cmp into sbb inc or jno add push insl insl and dec jle jmp fcmovbe imul xor ret ja or les popa leave mov sbb inc adc lds les int3 mov rclb mov mov push cs (bad) dec mov mov stos add loopne mov mov insb and jg mov adc mov lret or in repz call fstps pusha xchg out sub push (bad) push fisttpll and inc je xor push loop inc dec frstor xchg or or sub in pop mov (bad) hlt movsb aas shlb or cmp je add sbb dec and cmp adc push aam xchg mov mov jbe (bad) popa jp cmc sbb mov loope lahf and dec sub cmpsb sti adc stc add and push or (bad) movsb repz (bad) dec push lods dec hlt inc pop enter idivb xor mov sub pusha and pop adcb or add push (bad) jo pop fdivl push in mov sbb movl pop push in pushf add xor sbb loopne jecxz or pushf xlat xor push inc cmp sbb mov pusha shld xchg sbbl adc in imul dec lods shlb mov mull test divl sbb and lret adc ds mov or or repnz xchg or sub adc add inc mov fstl inc stc bound xchg (bad) cmp mov push sbb sbb and xchg push jl add cltd es dec inc out nop jecxz mov pop hlt in mov jmp ret jg push adc out mov mov cmp es mov adc lahf cmpl jmp or push das cmp fadds xor jmp mov pop add and rorb insb std jne clc xchg test cmp cld nopl xchg fcmovne insl fcompl add das loopne outsb daa mov pop in aas call dec in rolb hlt adc dec outsb daa aam clc sbb xchg xor adc pop sub andl ret ja lret es or inc add (bad) pop mov inc or inc ud1 xchg (bad) ljmp rol push je dec lea sbb add daa jg or and inc xor adc dec shlb jecxz inc mov or insl pushf aam ja push pop adc cmp add pop xor adc adc call loope dec dec into adc leave or push sti mov and xor in aam ljmp push push test jge call inc or nop lret pop addr16 mov lea shll cltd inc pop scas fs push mov fdivrl mov inc test insl xlat nop dec scas nop xchg in xor push and cmp xchg mov inc and dec xchg test push and ror dec and push repnz adc mov pop mov xor sub lock lcall cld dec pop leave push jb add fsubr sarb or flds jne nop jg fstl sbb pop and jl push adc mov clc jnp adc les fisttpl push xchg push andb cmp imul jno and or ffree stos dec ja ljmp fcoms lcall in (bad) lds popa faddl sbb inc incl cltd and pop jo cmp in xor cltd pop pop xchg mov push in loop cmp aam push add and xchg jno jge sub movsb in inc cmpsl rorb adc in test dec js movsb pusha (bad) or add inc ret imul test add sbb in add lods sar push dec repnz xchg and pop mov repnz xor dec aas lock call jl cld into in add leave outsb rcrl movb mov xchg and popa icebp or adc ljmp fimull mov call jnp cltd adc push jmp xchg push push clc mov push xor ret xlat dec jnp adc xchg lcall push outsb shrb or dec and das mov adc xchg mov dec call pushf mov mov and push das mov rcll jge mov pop push lock (bad) (bad) icebp xor call adc lcall cmp nop xchg in mov add cmp or pop pushf or popf pop dec roll aad xor dec das incl mov call push clc shll sbb fs pop or int3 lock fs dec cs or insb pop lcall mov or sub mov (bad) jmp inc data16 sbb jl and pusha jmp aam cld inc pop enter pushf sbb push add lock (bad) sbb fisubr sub pusha cmp and pop btc (bad) sbb sbb shl aam arpl jns mov pop xor adc lock push gs loop incb shrb dec loop xor in andl ss (bad) ds inc popa mov jle sbb aad xchg in mov cld les xchg int jmp (bad) rcll xchg divb sahf pop inc mov and das pop mov nop pop lods (bad) cmp dec adc sbb xor ljmp ljmp add call add call lods das in cmp scas cmp ret dec repz adc outsb sarb dec icebp push sbb inc cmp mov push xchg pop and rcll or fcoml in mov sub fucomip jbe push xor xor sub outsl fs cmp cmp into inc dec stos insb push inc add test mov daa ja repz add cmp ss fild rorb add push loope clc ds push jecxz add and call or hlt push pusha dec rol sub inc cwtl push aas fcoms xchg jo sub push in adc cltd loope and pop cmpsb jno mov adc fdivl in cmpsl stc mov mov sahf mov in repz add xor jl jns repz fdivr and cmp jl inc push insb push mov push cmpsb call subb mov pop mov inc loop insl jl loopne in outsb mov stc call jo jae fcoms pop pop popf sub pop ret fs jmp pop rorb stos pushl adc dec ljmp aas inc xchg push sbb xchg out and and jmp mov mov dec sahf and jmp mov push mov mov mov xor les mov pop test add mov sbb push xor test jge sub clc inc add adc inc movl int3 stos iret push xchg jl hlt call call pushl xor mov push push int3 mov and (bad) lods add (bad) xchg mov or in push mov aam xchg hlt mov and sub iret insl pop adc sbb ljmp add sub test stos clc xor negl call and imul cmova jbe mov push mov xchg add call in ds sbb inc sbb loope dec mov add call pop lret push lock pop (bad) xor test out jbe into sti push rcll adc clc ljmp push xchg push out mov hlt sbb add incb clc add mov cltd movsl and loopne push cmpsb add das pop inc sub cmpsl addr16 add add fistpll sbb adc sbb or pop movsb or out or fadd adc push sub add dec subl popf cmpsb das lea orl fcomps (bad) jge sar or push adc pop push lret or out shlb push pop or lret addr16 sub jnp mov mov (bad) pop js loopne into mov mov clc clc mov aad insl outsw and adc add sub dec adc mov jle popl sbb sub ljmp cmpsl cmp inc dec adc pop insl fistpll jnp push jmp gs je inc dec pushl das test je dec mov mov clc je shrl jmp push add pusha push cmp cmp (bad) mov add out fild pop mov push fcmovb add es pop outsb loop movsl je into nop pop or add or mov rol jle sbb gs cmp xchg cs sub xor pop add push adc sub test stos xorb jg adc cwtl outsl adc mov and jg call jbe mov add push loopne jl cmp out push lret insb mov test insb add fcoml out lahf push push repnz mov or push sbb pop shrl sub sbb push decl and rorl sub mov push out inc fsubr xor sub out pop push pop movsb pop es xor add ljmp call add orl lret mov es lcall ret sahf in loopne roll test inc in les sub cmp jo cmpsl in xchg pop in mov mov and inc scas pop adc push dec ficomp call sub pop xor je sbb gs push clc loopne out imul popa cmpsb out and jg mov jmp mov push pop add pop dec movsl mov test movsl insb out jl leave daa pop rol lock xchg push call or pop jmp cld sbb sub call call in in push jb in pop leave dec je je enter mov mov xor pop fs je in xor adc fnop or scas cli jae dec xchg pop mov mov pop sbb xor mov inc test and aam pop pop adc (bad) sbb push and test jo stos sti xor and push popa loopne call push addr16 push push inc pop xchg push int sub insl mov rorb out push repz mov cld fbld inc fwait adc out ret cmp jle mov call fnstcw fadds sub push xchg les outsl jno (bad) jno xor mov cmpsl (bad) shr sbb sahf imul or mov aad push mov pop call mov push and call push or jmp (bad) iret jmp outsl inc daa pop leave xchg jecxz (bad) pop out or (bad) sbb and in cmp das cmp jb jb push stc push and ljmp and (bad) aam add cwtl in push lods pop mov enter mov popa adc (bad) cpuid cmp lahf sbb shr iret (bad) into fwait sarb les or bswap push mov jge mov dec cld xor sbb lock pop dec pop hlt push out roll out jo clc mov into movd add adc in pop stc cmp mov sbb aam je fcomip jo adc pop cmc xchg in mov adc loop in sarb int3 sbb and in fdivp lret lret test mov adc add loopne je ret test pusha hlt sbb clc mov jo or fs cs je or or insl dec stc jno sub js ret (bad) dec xchg mov push test inc iret mov or lods or test pop or lock test lds stos pusha dec or add subb lahf sahf insb xchg adc or lcall ds and and insl and or push pop psubd jo add mov push mov cmp fdiv mov mov jbe fbstp fimul or ja cltd ret insb xor fisubrl mov outsl sbb cmpsl xchg adc xor add cmp push push pop push inc test cmp popa cmpsb jo sbb push push aaa pop push (bad) pop push mov pusha js and (bad) jecxz je jbe push daa pop call flds movsb sar add cmp ficom xlat js sub add fs xor lock or test adc inc hlt xchg les les add (bad) shrl loopne xchg iret mov in fucomi push cmp push mov push push repnz mov xchg inc sub adc push xchg repnz cmp add adc sbb lea mov aad sbb aas pusha mov cwtl cmp lcall xor sub test pop xchg leave subb xchg adc int3 push or dec movsl cmp rorb sub pop mov xor in adc out sub mov divl inc add lcall popa xchg jmp lock nop iret mov adc (bad) shlb jecxz jae and inc dec insl xor dec rol adc or jnp inc insl mov mov stc push mov (bad) pop xchg sbbl inc xchg xchg mov mov outsb inc stos or dec push fiadd adc push cmp dec and jg aas dec dec call loope jns les push jmp cltd dec arpl dec cmp pop cmp jle sub push test mov insb xor mov test mov jg neg and stos dec adc (bad) lods loopne mov mov je addw push push (bad) sub push xor out (bad) add pop test add xchg mov jno push or (bad) xor scas xchg adc mov cli and pop addr16 pop enter jno call pop ret mov sub adc ret mov sbb jle hlt jle je push out aas dec jo rorl clc cmp and test xchg test aaa fisubrl lret or jne adc add (bad) jmp mov or xor mov or lea adc lcall gs outsb add lea inc cmp fcomps push push xchg lods adc lret inc aaa adc dec jl mov or adc inc nop add test movl cmpsl icebp in movsb mov mov push or add or mov add pushf inc ret adc test stos pusha cmp pop aam hlt sub cmp adc inc (bad) call js mov lock pop test dec xor xor mov adc out (bad) dec inc pop imul test enter shlb jecxz lret stos pop in sbb negb push or sub or jne xchg mov cmp outsb dec dec jp roll rcl out and retw jmp pusha cli ss sarl sub je ret push aam fmuls cli jbe sub inc or jl add pushl sahf pusha mov inc xor mov fucom outsb sub mov adc gs in enter insb inc imul cmovo push (bad) xor xchg lods push cmc hlt lods and cld and movsb push arpl xchg push outsl lods mov out call mov sbb xor add inc adc and dec jnp push or jo push dec pop dec pop adc xor push popa aaa test cmp push and out cmp sub mov ret jae icebp and adc inc xor movsb push mov in sub fistpll test sarl mov rcll mov int3 sbb and sub sti adc loop xor mov cmpsl out jmp in imul xchg psubw (bad) xlat (bad) (bad) pop and push rolb shlb pop push mov jmp pushf add adc call xor adc call arpl push mov or lock cli mov (bad) mov or adc mov test add es shrl push add out adc inc sub mov mov xor pop mov movswl push inc push push pop mov ja movsb push lea into ds mov pushf push mov and scas cmpsb sub push subl sub inc repnz adc shlb xchg test cmp sub fisttpl orl call pushw xor adc jp pop fisttpll je daa jnp (bad) mov add notb xchg sbb inc shr mov cmpsb sbb mov (bad) sbb mov inc jecxz inc inc adc cmpb adc xchg imul xor stos push jp loopne rolb cli in aaa lret sub pop sub add sub in inc adc or stos xchg mov outsl int3 add ret js,pn subl insl xchg shrb and mov sahf pop int3 (bad) (bad) push jle push clc push jne add xchg xor insl sub inc ss sub (bad) pop or addr16 fcompl mulb lock mov inc dec dec adc sbb or popa fnop dec js rcrl inc ja loop mov icebp push data16 pop add cmc push and rorl pop mov pop inc ffreep adc or jo pop cltd fisubrl xor test sarl jmp insl mov enter les or dec pushf shlb add add xor insl and inc and and lock sub sbb adc sbb loope xor pushf xor loop push pop ret dec popa xor (bad) mov and add add push push add jp cmp mov adc mov sbb movsb clc adc sarb popa lret xchg ret and es sub xor and add ret (bad) pop sub ss sarl pop cmp inc fdivs xor cmp sbb int xor sub adc fbld scas sub movsb mov inc pusha orb cmp sub data16 mov rclb shrb shr inc sbb add adc daa jge dec das adc scas ss movsb sub adc subb shrb fwait add je ret pusha les sbb dec cmp iret mov shll mov fcoms ds add inc mov call inc rorb push inc dec pop ret inc xchg xchg pop sbb xchg mov sub add cmp jge jne cs (bad) and or xchg adc pop jmp jle push fistl ja cmp jbe dec inc mov dec enter dec fildl mov (bad) shrb icebp add jp sbb mov lds xor mov movsb mov pop cmp fdiv jns add adc fistl hlt loop nop pop ror aas lcall ljmp or lret pop sub ret inc je sbb (bad) gs cmpl push sub les sarb pop or dec add movsb lock adc xchg sub orl mov dec adc daa sbb mov lea ja push lods aad outsb dec lcall stc xchg rorb xchg pop out xchg dec mov lahf adc push (bad) or fmul mov insb adc inc add data16 fdivrs dec shl push lods and mov pushl push adc test and addr16 mov mov cltd adc pop xor (bad) sub ja mov in aas pusha adc enter pop adc outsb xchg rcrb pop test sub enter sub add call in imul fidivl ljmp add add or xchg dec dec je push sbb jb cli adc daa and push push shl or lret adc or pop sbb inc push push push imul push dec data16 mov (bad) jmp jmp sbb mov xor sbb jle dec inc dec je icebp add push js cwtl adc mov jns repz adcl mov loope xor inc fdivl test mov lea adc insb jo or cltd add sbb push stos sub or sub adc pop mov xchg xchg mov fadd dec mov je dec xchg push (bad) jo je sub mov cmp fldcw cmp mov or sti add xor decl fs test mov out pause xchg dec or outsb sarl fcmovnbe xchg cmpsb cmpsb or jecxz adc pop pop sub or ret pop mov xor repnz lcall push lods inc test and dec and sub pop xor out lock add inc mov js imul pop gs push dec jmp dec ljmp and leave out mov inc icebp dec cmp frstor mov add mov push sbb xor lahf inc into jbe mov ja or in inc cmp icebp pop pop sbb add ret or push xor idivl dec test dec push rcr xchg sbb push mov push cmp sub fcomps dec push fbld mov subl insb icebp and scas rcl and ret cmp add cmp add jne repnz insl or xchg mov iret rolb adc add ljmp xchg jnp pop push loope xchg repz jle test pop or mov or fildll roll xchg sub push jne cld enter clc inc inc dec push adc push push or dec xor call lea lcall cwtl adc lcall add stos adc add push mov pop cltd ret dec mov rcr add and dec jmp in xor mov push push pop hlt sbb lret jne lea sub divb sbb jns cmp fist out mov loope lds adc or imul minps sub inc or fisttpl orl out je xchg leave add xchg out (bad) cld cmp sub adc cmp leave mov icebp lods in leave mov pop add loope (bad) mov push push ret test push xor sbb call mov lret call add arpl sbb xchg adc movsb sbb cmp or outsb dec aam stos sti mov cmp jge sbb xor and jecxz push mov inc and test mov or xor scas ret mov sbb cltd sub addl notl xchg (bad) test push movsb pusha push push outsb aam pop jo xor lods push xchg scas movsb mov in xor push adc xor lods pushf push pop add mov and and adc push jp dec daa xor out rcrb test mov jmp ljmp or inc fistpl clc insl mov mov movsb data16 add stos push xor loopne jle test orb adcl jne lock xchg mov adc add or dec push xorb cltd mov pusha inc add scas dec inc in (bad) imul loopne add popf js fsubrl imul jcxz push push sub repnz pop jge mov mov dec movsb out sub mov mov inc mov xchg push repz and in inc push jle dec mov out dec mov xor ljmp mov jge aas lret js fcompl push push cmpsb inc stos cld mov pusha mov (bad) (bad) or cli push inc mov sbb lds mov push inc dec push jne push pop inc push xchg das xchg sub jmp or or adc mov jl and or jno pop rclb adc dec stc sub jnp popf cmp cmc mov cmpl shr push pop aas xorb sub test ret or pusha sbb xor xor adc jo adc push xchg xor xchg shrb lds xchg stos mov sbb imul data16 adc and cmpb (bad) ja adc pop outsl push rorb or push mov imul je push pop or fidiv addl imul xchg ja cmpl aad sarl jo pop jo cwtl inc invd in roll mov mov lods cld test sbb or xchg and cli inc mov or push sbb push (bad) jne sub insb dec sub jmp mov inc pop sahf jmp add adc xchg cmp pop jne je pop sti ds dec sub jno je add mov shr push inc sub fisub sub test xchg jo movsl subb pop outsb test ds lds jbe nop or jo nop clc adc jns pop push (bad) dec outsb xchg xchg xchg push pop mov int push xacquire adcl rclb and je sub xlat pop mov shlb divb rcl loopne add (bad) fsubs enter aaa add add je or mov call jecxz js adc sub ficompl adc sbb repnz enter sar jb jge mov or xor or and jl mov call (bad) in jl adc or dec xor daa mov adc push xor add jb (bad) jbe jne dec sbb je add jmp add inc xor ret or pop inc cmp inc ds xor pop imul loopne mov or les in sub movsl pushf add mov xchg adc jns ret addb cmpsb std and push hlt call adc lret gs sub sbb out sub adc loope and insl cmp leave adc adc push pop call and xor into adc xchg mov jle and ret or pushl cmp xor iret and xchg insb jge or sti sub and mov stc nop mov pop push pusha popf add dec add insb mov sahf aam inc or mov lea jbe push jecxz lds push adc lret mov push sbbl cs dec push es ds (bad) adc pop xchg movsb into xchg mov mov inc clc subps xchg inc iret cld ljmp jl or mov popa lret cmp and and adc test cwtl dec inc mov push imul out sub mov test push push jnp adc push mov push or push add push pushl mov xchg xor sbb ja jne add fiadd int sub sub rcr jns adc icebp sub (bad) xor jge pop or scas aam rorb mov add cmpsb mov call fadds cmp ljmp call push or mov cmp es (bad) cwtl push mov mov aas call icebp add les sub cmp addr16 jnp mov (bad) pop insl or jl loop jb mov mov cs sbb push push jns push js lahf out fild dec inc add xor sbb pushf inc das push mov mov and cmpsb dec loop addb lods pushf bndcl or cmpsb mov dec add mov push pop inc (bad) push pop and clc jg add push adc xchg pop mov xchg or or and mov sbb adc jno xchg push (bad) xor pop jne mov sahf loope mov cwtl icebp shr imul out and xor adc and pushf mov bound js pop imul and dec xor cs adc pusha ja mov sub shll rclb xchg push cwtl cs sbb popa sbb sub or sub out sub push jl adc sub add imul fidivrl add mov int or rcrb jbe outsb lcall adc call jle pop pop sbb mov dec xor or and xor lock scas mov pop scas pusha xchg pop adc sbb loopne addb test pop add add andb ss xchg dec sbbl dec add or push ja fildll cmp jb cli and add dec nop lods or push mov or sub ja pushf inc or or int adc or jne adc popa or sbb dec jg je jae add stos sub or push rclb ret push in sbb push sbb je add mov push je adc or fcomps negb xchg enter cltd pop shrb (bad) in insl pop jg lock dec inc inc or hlt push pop rol dec xchg popf inc push lahf fildl or push lds dec jb in inc clc dec stc out pop outsb push xchg adc fs (bad) xchg iret inc lock pop mov mov dec js stos adc lea stc mov xchg add (bad) pop or repnz lret fidiv sub adc cmp sbb mov leave push adc add push imul add lcall push sub cmp mov shrl shrd dec cmp dec in and push and fidivl inc aas and jge add pop into push lea inc sub adc push xor dec cmp sbb xor inc pop cmp xchg mov decl popf cmpsl cmp mov jp inc and pop dec and mov sub fiaddl jl jb jo pop rorb das orb jne rcrb test pusha lret dec cwtl cmp aam pop pop sbb sbb daa sub and cmp mov jae and sbb push ja (bad) inc popf sbb inc inc or test and jmp add xchg or pop push add or inc jno jns ss lds fwait loopne enter (bad) dec sub or cmpb aaa dec orps in fsub add pop sub cmp lock push lods pop std mov movsb pop lret push inc push es lea cltd push loope xchg or in popa cmp clc push push mov push hlt movsb out nop inc outsl xor cmp daa hlt or leave push hlt lret mov cmp push fisttpll or push dec fstl (bad) loopne rcl adc sub shlb xorb xchg push push cmp push sbb mov dec or adc xchg adc lock and fs add pop mov mov xchg push call fstpl pop cs add push cs test sub xchg xor inc add movsl cmpsl inc in push mov outsb xor stos and pop cmp xchg test xor xor out fsubr pop push dec loopne clc and mov clc push loopne cmp in lock daa xchg clc call pop cld nop loope popa movsl dec dec insb daa add sub adc xor in pop call rolb les stc push add push sub clc or inc jg popa lret jp or pop cmpsb int3 rcrb popa push sbb pop sbb push add les and sub cs lahf mov fs inc shl lret xchg cli fsts and push pop cmpsb cltd xchg and and adc pusha jle or sub jo incb cmpb or ret js push mov jecxz fisubl bound rcrb (bad) pop push pop mov rclb jl jmp dec mov sti movsb rclb pop sbb and jno or cmp cmp adc add scas in add insl imul std aam fs (bad) pop fstps push pushf cmp sub or mov pop les (bad) ret sbb push cmpl or or jo mov add sti and or ds rorb push lcall push add clc dec (bad) cltd sbb add outsl pop push adc mov icebp (bad) push push and jg arpl cmpsb mov sub push nop int and add mov lods call je pop faddl sub push pop fs push ret je mov sbb dec dec dec add sbb xchg clc pop adc jmp mov xchg xor mov in pop mov lea les sbb adc add jno sbb xor push out inc add add aaa adc xlat and repz mov cmovo cld mov repz mov lcall rol add in stc lods mov std push imul and fwait inc insb cmp inc and inc push sbb xchg (bad) insl ds and and add dec lods cmp aaa dec xchg loop jne orb inc sub fs or mov mov jge or jnp sarl les lcall out adcb or mov cld repz outsl xchg sub mov jge dec cmpsl into leave cmp xor push cmp jl cmpb pop or xchg ret lret les or insb mov or adc sbb nop inc pop add and lds shlb rclb push inc sub and lock xchg out das adc and and pusha addb sub add jg push mov or pop sbb jno and sti push dec pop pop leave sub or inc sbb clc std or xor sahf push and bswap and mov pop add adc cmp xchg xor stc das sti mov orl sub in xchg clc sbb call popf imul mov adc (bad) push push call sbb sub test push sub adc sub xchg in cmpsb test (bad) loopne xor add push jno mov mov push push cmp xchg lock jmp sbb inc or add test add xor mov xchg xchg stos (bad) xchg (bad) jmp lea mov add cmp and addl scas fisttpl or jle add push sbb push push fs sbb jno xchg lcall in lahf wrmsr dec sub call lds jmp xchg xchg test pop in mov call mov mov shrb inc ret mov shrb adc adc stc mov xor lock js ficoml call xor test daa loopne inc cmp adc add cmp inc insb (bad) je dec js test push sbb adc sub xor mov push das add jg test sub ja test jne sbb ret inc daa jo inc movsl adc out xor xor push fdivs ret sub xchg sbb xchg mov or push adc outsl mov icebp (bad) rorl bsr repnz xchg push data16 push add lods popa dec loopne inc dec inc and cmpsb test add add (bad) sub fwait push pop pop mull mov xchg push inc popf insl or ret push inc es in jg daa sub sbb loope inc aas adc jmp and inc sub cmp pop sbb push in scas inc adc sub sbb mov jmp and pop mov outsb adc xor sub sti inc add push cmp loopne mov mov sub enter inc pop repz jl pop adc pop inc rorb xchg sub mov xor pusha inc and inc jbe std xor push lcall or cltd inc dec pop mov dec mov sbb and inc inc cli mov sbb or xchg jbe divl jle push xchg fldenv push and call dec lock adc dec leave xchg (bad) fstl cmp and push xchg xor inc cmp lods ds xor lcall mov in xor leave xchg mov movl or fs enter nopl imul pusha or sarb xor add jno mov jbe ret movsl movsb xchg (bad) push sbb mov inc inc addr16 mov inc jl loop sbb adc pusha adc xchg mov loopne push add popf inc xchg ss xchg sbb insl push cmpsb add mov imul (bad) decl lods push cmp mov gs hlt adc add add sub call pop xor seta xor or shrb lock enter jp addr16 push in pop (bad) sbb pop add enter adc insb xchg mov rcll and in test gs add lods shrb pop inc sahf jmp inc sub jecxz mov loop add mov icebp jne or dec imul jmp push pop call mov adc fdivrs jb dec std mov ds int sbb mov scas hlt add adc (bad) es out inc test fsubl rcrb nop xchg sahf insl jmp cld inc xchg lcall mov sbb cwtl push (bad) xor cmpsb sbb xchg mov cmp sbb or jg dec outsl mov inc cmp or cmpl mov push loop inc jb addr16 xchg dec pusha pop push inc mov repz cwtl inc xor fisttpl pushf movswl test enter xor mov pop jge cmpsb sbb xor push lret cmpsl sub test pop cmp xor test int3 or pusha mov in imul test and rcrb add jns test adc add add or jns inc ss or ljmp or pop push inc push call mov mov ret add add aad and and dec push js xchg in test jne faddl cwtl add pop testb hlt int push mov imul fadds into aas loope arpl jo shrb dec and add nop rcrb dec pop xor insb sahf inc push je stos out add adc cmp inc xchg push cmpb jmp push lock fimull mov les ljmp push dec or add cli fwait pop dec mov movsl add push xor lret aam out pushf std jo add ss cmp data16 inc js fiaddl sbb arpl aam mov pusha inc add or xor sbb sbb loope pusha lds adc mov and popl cmp mov xor aaa jb cmp jae (bad) movsb sub je push pop fwait ret (bad) aam cmp add and popa mov lods test or xchg jne or sbb adc js out dec adc in pop dec shr dec call je inc cwtl push aam fld and push cmp xor pushf adc rolb ret dec ds pusha mov mov sbb sbb cmp in movsl jo sbb mov lret adc inc lock leave and sbb jns push inc push sbb out or das mov inc mov dec or bound add in push dec andb fldenv pop rolb fdivrs sub mov xchg sbb push call and inc or add xchg test lret add push and mov mov imul (bad) fistl cmp clc ret add dec fdivrl es inc ljmp les cmp mov and and cmpl add pop insl je hlt cs shlb mov push jne dec rolb and sbb or pop daa dec ljmp cltd jb push loopne xor syscall popf jne push cmp jecxz loop or insl and insl cmp fisttp pop sbb mov cmp andl mov sbb push push es dec cmp insb sub adc sti jne pop push mov and mov andl inc cmp icebp xchg push jp add adc xor add mov and cmp andb push xor popf popa cmp add mov jo or das clc pushl aas xor jge sub lea call lea nop jge mov jo add pusha imul lea (bad) cmp push sbb bound add push shrb movsl xor sbb dec cmpsb push repnz adc ljmpw adc pop aam xor out test cmp sub mov adc cmp movl dec nop add cmp push ds sbb movsl mov push es jns subl inc addb jl cs and mov lock fldenv incl cmp shll cmpl enter test clc call clc pop dec jae rorl rorb lods adcb push movsb lcall sbb leave or js sbb loop test dec jmp insb dec adc sbb adc mov call cli out adc cmp dec or pop or dec mov aas mov xchg je cmpsb jne inc mov and int3 cwtl loop inc pop into or push loope out dec aam adc add add pop xchg mov pop clc mov pop mov imul add lcall push cmp aaa adcl inc adc pop cmp jmp xchg sbb lock call inc shr push stc out je xor insl fcoml mov adc adcl jg add sub mov loope popa inc or mov loope stos pop dec pop mov lock jle add push insb (bad) (bad) ja jno jne idivb jb les or sahf jecxz mov pop imul (bad) hlt xor adc and or test sub test xor push sbb mov outsb fbld add add test add jns jle push nop mov xchg insb and cmpsl xchg and mov push sbb inc pop (bad) or das or xor adc decb jl jo call in imul jo xor push movsb xor mov push fcmovne into fadd cmpsl push js lahf mov popf scas fadd cmp mov loopne inc mov lret jg aam pop testl add mov xchg sbb adc mov decl add push call test cltd xchg ret ds outsl sbb mov sub sbb lock fs add into pop jb push call scas fstp inc lret adc aad imulb movsl xor or sbb rclb mov mov adc or xor xchg js add sub ret jge add adc cmpsb loop mov inc inc clc mov sbbl shl sub test imull add test and sub pop pop dec and cld xchg jnp test add (bad) stc mov and call sbb mov mov inc xor add mov mov push addr16 or fstpt lea call arpl sub push jl and cmp mov push cmp jp into xchg pushf jl les and jg add or jge test popa fcoms inc or inc into adc ds mov mov or ds imul jecxz xchg cs jp test shll adc les inc and insl ds xchg into js or xchg dec (bad) and adc sub add mov mov cld mov inc add xchg adc test cmpl xor popf xor fcoms pop xor test lods cmp addr16 sbb sbb sahf pop jp cmp and js das hlt inc push push (bad) cld xor rclb cwtl lods pop call mov mull cmp sbb insl and movsb scas adc je sub movsl rcl or pminsw mov orb lods sub das or (bad) popa xchg es push push add cltd push pop rorb dec mov pop jp push outsl push call mov mov and xchg sbb adcb adc jns jl test inc cs syscall sbb and adc cmp mov xlat ja in test adc pop jmp and sub out rdtsc mov imul add ja outsb (bad) mov jae sub push or (bad) cmp jb push xchg sbb push jmp push jmp push push (bad) rclb pop pop add inc push adc jb mov ret call imull jmp pop mov and pop stc sub pop inc jb pop call adc add add enter hlt or adc call mov mov sbb sbb push orb and push jno ret xor fnstenv add mov and dec adc lods test dec (bad) (bad) aam call mov (bad) xchg cmp cmpsb sahf shlb fadds sub push test sbb pop fs mov je push dec add aad and push or or setno leave add mov test xor cmpl add and fstps outsl add fstp int adc fadds dec mov mov in stc out aam push xor leave aad xor xor or mov data16 jns add xor mov iret addb dec xor jbe and and xorb sbb and fucomip clc jl je jbe pushf pop add mov jmp pushl mov call adc mov loop sarb xchg clc lea ds xor xor inc rorb adc add pushf (bad) xor aas and mov aad ss jg aam faddp loopne,pn pop xor scas cmp ret int3 in pushf fwait rclb popa mov loop (bad) aam xchg mov jge push (bad) cmc add jb push es add push out or (bad) xorb cmp call inc outsl add aaa add pop outsb pop (bad) testb mov test movsl sub es jne mov aam lcall jno imul fdivrs jns flds loope inc and lahf sbb pop mov pop lock in mov movsl call inc sbb pusha ja addr16 arpl dec push mov jo (bad) into fisttpl pop adc rorb andb ja or fisubl and inc insb je std or sub inc inc imul pusha sub movsl mov mov out test sub mov js fwait cmp rorb jnp push push (bad) incl or inc pop adc bound xor into mov xor pop add xlat sbb insl ds sub dec call add mov adc jmp mov or sbb jbe jno ret nop out fild lret sub imul adc jp sbbl xor fwait pop mov mov loop jae jl mov fadds or stos lods or cmpsb add dec add or rol mov and loopne sub cmpsb xchg dec push mov adc or call test mov repnz call push mov loope jo xchg mov test mov pop roll cmp fwait lret xchg lcall rorb popa mov repnz cmp dec loope add ja ret test sti mov xlat aaa mov fs je or je xchg adc mov adc cmp mov or ror push sbb inc push sub push adc rorb insl push jnp mov scas (bad) pop jl stos loopne push mov dec xor pop jbe pop adc pop adc imul sbb pop (bad) adc mov lods push outsb xlat jne nop add pushf testb test dec mov push push dec xor xor div pusha fsubs jbe mov mov jne dec and movsl cmp push pop push jmp push sbb cmp mov mov dec dec add (bad) je pusha cltd pusha inc push inc or jae,pn cmpsl inc and js loopne sub sub pop orl adc xchg movb xor xchg ljmp or (bad) mulb xor hlt dec in and jne adc cs pop cwtl sub lret sbb adc das add xchg repnz add cmp sbb sti pop int dec inc sbb (bad) in dec roll iret add rclb add and aam loopne mov mov rol xor xchg repnz dec dec int xchg js rcrl sub rorb or daa ret jmp mov adc jmp mov add jl ret add sub repnz or dec cwtl fldpi or pop pop insl enter mov xchg mov dec cmp adc add and push jne and push and inc loop inc mov in cmp xchg shr mov dec scas xor add add adc adc iret mov les daa jp push (bad) adc or push outsb inc or sub add add push popa inc in xor add test pop fwait mov int3 ret arpl jbe push add jae add xlat nop cmp push adc ss rcrb jg push mov fstpt jbe push xchg inc cmp jb cmpsl dec popf out or gs movsl xchg out push jp cmp add mov rorl in cltd cmp cs add xor jne and sub inc out es jbe xor out add push (bad) jmp loope sbb adc adc fwait push jecxz jp sub (bad) (bad) or xchg repnz add mov in xchg lret push rclb pushf dec cli cmpb push add in (bad) or inc mov add fnstsw add dec inc pop mov sbb int3 jae adc enter popa imul ds or or mov mov in jne add push cs mov inc pushf sbb sarl add dec jge adc sbb cmp (bad) adc bound stos xlat xchg dec in call out and (bad) xlat clc pop inc push je push cmp mov rol adc push fwait pop fildl dec clc adc jl dec add rcll out mov call adc out sarb aad adc adc sub sub dec loop add adc ret jle dec inc push dec pusha xchg cmc fisttpll inc cmp outsb jge cmp mov jmp (bad) repnz lret dec and push lock cmp xchg xlat in cmp inc dec cmp pop xchg inc sbb add int push repnz sub cs cmp sbb cs fidivl shl mov pop push sbb xor dec pop and and dec ja push mov and cmp push mov test je mov add mov enter and xor sarl adc (bad) push stc pusha or push cs push (bad) sbb pop jl je lds gs push mov push inc push ss sti pop out push or sbb mov mov xor xor adc data16 mov bound lret mov jne cmpsl xor out inc inc xchg sbbb rcrl js pop int3 sub inc sub cmp push pop xchg leave dec sbb mov sbb and pusha pusha xchg xchg lea cmp inc pop int3 int3 les mov push xor inc push push pop call lods call lock ret iret (bad) pop rcrb push xchg (bad) mov mov xor add adc test pushf nop jle cmpsl dec xchg jge out ret pop jno mov test push pop dec sub push clc insl sbb ja mov inc pushl inc xlat adc imul sbb popf in or lret sbb add mov mov std roll xor push push icebp push mov cld mov les adc cmp cmc mov fdivrs dec enter test xchg add adc jge sbb inc add pop sahf lock add adc pop sbb fiadd mov (bad) nop and jns js jb xchg jnp push mov fistpl inc inc adc js add inc dec cli push repnz movsb dec sub in dec movsb bnd cltd adcl adc test clc add scas push cs or out fsts (bad) in jle mov inc mov dec repz inc sub xchg push cmp push xchg lds dec into (bad) js jl jns das aaa mov mov adc dec movsl add xchg out insl lahf mov mov bound testb xlat adc jo jp icebp mov scas dec test out lea (bad) adc pop adc out insb aad js (bad) cli out imul ror clc decl adc add call lock jns jae ret pushl push cli jp sub add mov fnstenv mov ds add mov ret add inc cmp es add push stos jl mov pop xor aad fdivr and adc cmp and jg (bad) std pop dec enter cld mov add jne ss xor push mov cmp add xor jbe or sub cmp adc mov cli pushl dec add jecxz sub dec int3 jl lods dec aad add push bound shrb ljmp fldl mov rorl xor cltd or mov lea add jge int3 mov push int3 or push inc sbb int3 (bad) jmp mov pop xchg stc shrb mov in mov lds inc sbb (bad) test ret jo add (bad) out jae mov je lods fdivl adc jno xor cmp fdivs (bad) jne jge xchg jb es xor jne push jns enter sub xchg aas rclb cld dec lcall mov arpl sbb push imul popl daa into push xor (bad) jmp out lds mov test lahf jo add rcrb test clc xor sub sbb adc pop adc mov sbb sahf push jg scas adc inc sub lock xorb or adc clc xor gs mov cmc fnsave fdivrs pop sbb and adc mov jbe pushf jl dec leave incb pusha push adc add std fisttpll add mov inc and aam fsubr mov test fucom xchg rolb andl imul jbe test aas sar les enter mov je (bad) pop pusha add push cmpsb fs sbb xchg add adc cmp lret add in jo add les jmp adc jl dec pop aam jge mov (bad) repnz fadds add jne dec adc sbb adc mov add out and outsb push sbb or fstp dec mov pop jge mov jnp add inc push sub mov xchg or sti or add add in in sbb inc add push pop mov int3 ds jno addl sbb add pop mov rorl jae dec sub mov ss out or push fldl2t ljmp jge jnp jae mov clc test xor jbe pusha push pop loopne mov mov faddl loopne mov cli cld lea sbb test xorl dec test aam iret jbe jp notb dec pop sbb xlat lcall data16 adc aas jecxz orb cmp add push jle pop lret cli insb xchg dec inc or movl xor push out xor lea lock lea inc sub and pop (bad) in xor mov cmp mov dec xor jo lods mov ret pop or (bad) adc cmc test flds mov jne add call sarl xor inc jmp push mov mov and mov aam call nop iret sub inc push nop ret push cmp je rcrl jmp jne jmp jne popf cmpsb mov mov stc xchg or leave and adc fisttpll adc push inc sbb call adc je jg andl inc and (bad) loop into mov imul jns xchg rcrb sbb xor faddl mov sbb (bad) push or data16 outsl loop pop adc push mov push in inc aam fcom rcr xchg mov sar sbb adc cmp jmp sbbl in daa dec mov or pop inc mov pop (bad) aaa sub ret insl imul xor sub out arpl add push push aaa pop push dec push add adc xor ret jle xor aam fs push pop inc ds push inc or jg ljmp mov cwtl push sbb add inc add dec or aaa mov add mov mov push out xchg inc dec cli dec mov sti bound mov adc or shrb or cmp mov sub cmpsl movsl mov fiaddl push stos pop dec adc pop adc mov jns (bad) negb loop xchg mov push mov movsb aas or inc adc incb decb repnz mov push dec loopne gs fisubl sub roll jl arpl and lea jae push push or push push lds adc mov mov or out push out xor inc fstl mov js call enter call inc mov jbe mov and bound dec mov clc and stc cltd xchg push imul es ss or insb or cmp mov xchg call and dec or sbb (bad) mov ljmp leave xor loopne sub sbb psllw jo ljmp daa rorb std test lods in jo outsl rcll mov rcll xor les int dec fcomps adc and rolb in push jecxz (bad) and sub mov adc and xchg cld push cmp xchg into sub in faddl mov insb jo sbb push sbb insl test mov fsubl mov fiadd out int3 into push sti mov push cmp cmp fisttpl dec lock rorl adc ljmp cmp and add add jp loopne xchg test (bad) mov insl xor in push pop cmp jns add pop sbb jmp mov imul inc je cmpsl dec mov add movsb cmpsl mov sbb (bad) pushf loopne push or fisubl adc mov ds stc pop lock jne pushl xor pop fwait xor addl mov dec adc add decb add dec das pop inc cmpsb xchg cmp aad lea adc push jne mov dec pop xor popa sub inc out push sub mov xor mov (bad) test (bad) push jne add push pop jbe mov sarb xchg call mov out adc and daa sub push pop jno hlt push lahf push add lds adcb xor int3 mov repnz lea adc dec fdivr adc in lret mov sar imul les fisubl inc sub pop je (bad) fwait mov hlt call mov sub or imul or aam shrl adc jbe popf add out frstor incl in dec push push mov daa dec push cmpsb pop or test sub cmp jle movsb nop cmc push add fsubr sub mov (bad) out add jmp xor hlt es test inc mov add lock jne xor cmpsb mov or sub daa std and bound or sbb mov mov mov scas or mov push (bad) test xor sahf xchg lcall adc nop push ljmp stos pop lds and ss gs add arpl xchg (bad) lods push hlt push orl gs scas movsb pop pop xchg nop mov sahf push adc inc pop and fdivrs pop mov nop xchg cwtl jp jmp or push pop add sub int pop (bad) (bad) xchg dec xor push scas adc or aam xchg ja es adc js (bad) mov push in iret sarl push and les ljmp out jg add sub cmp (bad) popa sub jne jns pop dec in sbb adc icebp sub fwait lods shrl adc jge arpl and ds jnp movsb dec popa cmpsl and jns (bad) out and cmp mov or fisubr shrl divl sub lcall xor mov push sbb push dec repz inc xor aaa xor ja js movsb ss clc dec es negl scas out popf push in ljmp fbstp pop into nopl call lods pop das add push push and adc and and cmp sarl pop push shlb jbe es (bad) and mov dec dec cmp fldt insb mov and les sub jg jbe add lea jecxz lret and insl sbb xor call xor lods cltd inc fwait rol scas aaa push rclb shlb inc add pop lret lds sbb fisttpll insl xchg mov jns (bad) stc into scas (bad) add stc mov sbb (bad) jb jmp mov or aad add pop jb lock les ret mov in aaa shlb stc repnz pushl les xor call sbb add mov and (bad) into aam sbb les mov bound imul cmpl xor mov lock jo mov insb add adc jecxz pop xchg ss in sbb ljmp (bad) lock add cmp in je rcrb call mov je add jecxz lret cld dec mov insb pop fnop adc cwtl pop add cmpsb movsl out sub xchg mov push popa jle adc add or sti movsb cltd iret dec aad lods sbb sub xor repnz add addl pop call or sahf xchg cwtl cmp jnp dec iret push outsb sbb pop jp inc sbb nop js scas call and push mov inc add orb adc pop inc psubsb add and mov mov test repz lea jmp mov loop or movb inc xor sbb in pop add loop int xchg sbb fs dec or push pop (bad) mov (bad) mov xchg fwait or dec fwait pusha shll add int3 xchg pop (bad) pusha mov sbb pop push jl imul xor mov iret js jle rcll adc fild out xorl add adc ja sbb addr16 cwtl xchg dec xor test test adc dec sbb dec cs popf flds fmull mov xor lock mov call sbb add add sbb pop cmp pop mov daa lock mov add add jns stc adc sbb mov adc inc dec cmp test hlt mov and or or xor ret sahf pop xchg xor and mov test rorb bound (bad) imul negb jmp js push stc and add xor cld jae sub flds fstps leave repz or insb inc adc dec clc ss (bad) (bad) mov or (bad) jle jb insl push cmp push sub xor (bad) xor lea call call test mov mov mov lock out sub ret out addr16 pusha test pop hlt mov lea pop push call sti push jmp adc or shl repnz call fs sbb or sub or dec add add in push pusha mov out or add cmp pusha push mov and add js outsl jnp (bad) jmp lret xchg jmp shl ja jno jnp test dec arpl les or mov sbb fcmovb mov sub push and daa pusha jno mov push jno pusha adc jne and cs inc dec dec mov fnstsw inc gs rorb sub pop lock mov mov aam push pushf jbe lds add and rcr insl inc mov add dec ror mov jnp mov push leave out inc nop ret popf iret pop cmp xor (bad) ss mov loop lahf pop cmp fildll jbe decb fsubrl dec mov pop imul pushf mov fwait or jmp mov fsubr ss rorb xchg enter sbb adc fsubs push add xor in movsb push das inc fiadd mov sbb add je push and in ficompl insb in or dec push adc (bad) jb mov cli pusha pop negl sbb add xchg sub inc or cli xchg movsl scas and add jmp mov test jmpw lock call adc xlat mov inc push rcrl add (bad) loope mov nop jp dec jp push imul inc xchg mov pop xchg add loopne sbb dec push rclb dec xor enter imul mov movsb (bad) pop cwtl push in dec fadds mov add mov sbb nop xchg pop enter outsl fimul sub xor iret test add addr16 push fistpl sarl mov das loop pop ret cmc fs rolb mulb test je je jne or fdivrl (bad) push xor push imul lods xchg out sub shrb popa adc xchg scas and mov xor pop push push adc xchg mov sbb push push pop dec negb add push push in in xchg into outsl sbb mov dec (bad) mov jmp pusha cmp jns movsb xchg xchg rolb fsub pop test cmp movsl rcrl push mov and pusha add sub adc cmp imul sbb mov inc adc or cmpsb add ret pop dec pop jecxz movsb xor je add jle xor inc call jns add out insl mov sub xchg mov inc out jmp mov mov add add mov lea mov cs pop cmp xchg or jg ljmp aad inc lahf add leave and test lods and mov in xor xorl pusha fldcw inc sub pop dec jb pop arpl (bad) cmp or xchg in pop les inc sti rol inc mov push fs popf xor sbb aam inc enter shlb add or jg das call or adc pop pop xchg int3 (bad) imull call int pusha xchg out lret fadd pop or jns add pop mov lea gs pop fistpll insl inc push add jb (bad) mov sti sbb dec push adc sbb inc inc push adc dec add sbb in dec inc push xchg loopne pop sub repz pop data16 mov sub mov ja sbb and mov in sbbl enter mov movsl aaa out push xchg (bad) xchg and xor inc fsubl push lods add jle mov mov mov and add jl or in jb stc (bad) add add popf add js push adc enter jae mov dec cs aas or mov or and cmp add jb flds cmpsb xor pop das xchg jg sub mov or mov loopne push adc and add leave inc push add negl xchg (bad) mov pop cmpsl fwait jb cwtl push inc sbb jb jge cmp adc or or movsb lods sarl adc and es mov stos mov inc jno (bad) or popa or xor pop dec push std xor loopne jne xor mov jnp add mov fs push adc ret pop pop rolb mov cmpb insb cld cmp sbb cld outsl push js or mov out push push mov ds ret inc inc cmp lea fstpl insl lock xlat fistl sarb cmpsl sub ficom insl jmp push push test add insl outsb popa pop mov mov mov sub add fstl or jmp jns pushf dec push inc xchg je or push jb jge repz rorb iret bound push imul jne fmuls jl rcrb or mov jl inc sub pop in xchg jne lock jmp or xchg xchg push mov movsb sbb (bad) push mov shrb pop pop nop iret cmp mov add push fidiv adc and jo sub cmpsl ret in aam (bad) loop cmp push dec stos mov movsb rorl dec add inc sub repz ljmp je,pt addr16 mov mov inc inc sub inc jb jp jg mov or xor inc stc movsl loopne pusha repz and sub addr16 sbb inc test js dec inc add aam sub xchg jle mov mov shrb inc call push call and push adc je pop mov cltd jo push stc loopne int3 dec push call cld adc bound add lock add je scas jne xchg cs xchg pop sub decb mov aas jae movb movsbl ja xor dec aam mov arpl addb xor sbb pop sub jae push (bad) pop xor js mov fildll je imul pand mov xchg sub and adc mov sbb inc xchg push or iret jl mov jae bound mov setle mov mov push in mov push int3 daa jmp xor mov loopne repz insl adcb jae lock (bad) repz lret pop jmp mov jo es fidivrl jns,pn adc out dec adc inc out sarb sub je jb call stos mov and adc or mov inc mov dec or push lcall cmp or or lock pusha insb sub mov cmp fidivl push mov faddl clc orb dec mov jb mov mov mov or out stc (bad) imul add (bad) je mov stos fcoml pop add cs add mov push xchg mov or or push (bad) jno push or or es push and popf cmpsl add adc xor (bad) lea xchg mov add lcall jecxz jp push jne cmp es fdivs jne mov (bad) or ja lods addl in adc push jne adc imul sbb dec xlat push fs jge pop pop inc cmp xor nop insb test sub and jmp or mov pushl fimull int push outsb shlb and sub sub dec and mov jle or dec (bad) popf aam push aad xor push shlb test mov and inc rolb add pop ja fadds in int call cmp test fs sbb add mov inc push jne rcrl jo sbb xor rcr pop and and sbb test add ret lods add and mov lock mov or addr16 sbb (bad) xor mov arpl xchg mov arpl roll and or jne fimull mov and xchg xor outsb lcall loopne es orl dec lret xchg in lcall push pop add add test xchg addb sbb loope ljmp (bad) pop rolb or push push add cltd call pop add (bad) leave mov or movsl mov push sbb adc cwtl mov xchg add outsl push in pop jae xchg into mov lods mov les pop nopl test je mov fcmovbe inc jnp and dec push xchg out jnp fadds aaa pop xchg cmpsl add int addb imul mov mov xchg mov repnz push push add mov jno fild jmp and or adc mov mov iret andl jae push cmp xchg cli jmp pop dec and es dec shrl sub popf jbe (bad) data16 mov loopne cmpsb inc or rolb sub ds int or aam sbb jno dec jae das (bad) (bad) xchg mov jl and xlat adc into ss scas push cmpsl pop pop jle jo pop add xchg add lock sub inc push jmp pop inc mov mov outsl pop pushf and (bad) hlt and xor dec add xor test ss mov popf xchg or dec inc pop fisttp inc push xchg movsb xor xchg mov loope nop scas xchg pop test push mov mov shl mov or stos pop inc dec sbb out xlat pusha pop jo adc inc jo int3 mov mov dec test hlt and mov xchg inc xor or cmp leave inc les mov cmpl push pop and xor xor inc out dec sbb xchg and cmp push or xor xchg (bad) add leave (bad) gs add xor (bad) add lods and pop (bad) add or adc cwtl cmp mov hlt mov adc sarb lahf lds mov lea inc sbbb in or jl pop add test in sti aaa and add add xchg push pop lret dec and addl dec inc rsqrtps in ss pushf jb push xchg roll (bad) psubsb lret pop (bad) jmp (bad) push pop jb xchg aaa shll cmpb mov fsubrp scas test lahf bound ret jecxz jbe enter add lret ret xchg mov icebp mov mov xchg xchg ljmp xor (bad) call fs adc js push add sbb pushf fwait pop negb loope mov lea or pop jno insl or (bad) xor push adc xor nop mov mov inc sub movsb jne rorb inc sub icebp call mov sub aam jecxz js (bad) jl jle xor mov les inc sub xchg (bad) popa mov pop xor ret push lcall sbb call inc ja jp sub mov pushf add xchg sub jo jo pop dec adc loopne (bad) push clc mov sbb xor dec xchg or fsubs (bad) push and push sti sbb lock arpl and sbb addr16 inc sbb add fstpt jbe xor jno punpckhbw add enter inc xchg add jl xchg inc mov imull dec ret shlb push jbe and mov xchg push lsl push lahf js aaa out add pop loopne pop cltd sbb scas add ret repnz das xor jmp push push mulb loopne add sub mov sub fiaddl sbb or stos adc in mov aaa (bad) push xor popf out ja cmp clc out add sbb mov adc sub movsb push (bad) stc or cmp (bad) and push mov mov add out or cmpsl jnp and fs sbb ret mov lods add sub popa (bad) xchg jge addb (bad) push push pop mov add xchg test je adc mov push add fld enter xchg je and loop pop add in pop sub xchg jmp inc imul pop add cmp jmp mov pop mov pop xchg ja lret pop jb inc add ret (bad) ja sar xchg push insl iret add ljmp or insb std shrl dec xor dec push enter int3 mov mov and mov add repnz pop es add addb shrb and or xor xor loop fiadd dec iret pushl dec in in and mov add rcl jp or cmpsb in cmp dec adc sub pop nop xchg pop pop mov sbb addr16 push daa lock jp push cld jl,pt sub gs mov fildl dec add or fistpll xchg dec xchg sub or subb loope mov (bad) jl push xchg dec loope xor scas sbb mov add jmp add sbb cli xchg enter addr16 sti in leave jne (bad) jmp adc rcll pop mov sbb inc int3 aam push and setno inc mov sbb pop pop daa fcomps sub jge es jp cld cltd pop pop dec add sbb mov insb inc and (bad) repz ret push fsubrl rolb cld adc add outsb ficoml push sub iret icebp jmp or mov add outsb (bad) incl pop lods call in sbb out mov xchg leave pop addr16 test jp sub aam icebp scas xorb mov jmp mov adc les pop ljmp jmp dec inc adcb inc sbb aam add loop cmp out hlt fdivrl int and sub mov aaa and pop cmp jge enter lcall or pushf sbb inc lea and rcrl mov lock sbb xor mov cmc jmp mov xchg cmp movb aaa push cmp test int3 xor sbb imul lods dec xor in add jnp imul and or push sub sub mov hlt adc test xchg call or sub shrb leave xchg iret (bad) cld out and and jnp lcall call or (bad) hlt and add mov sub rorb jno (bad) ljmp loope cmp lods ret push in push cmp outsl ss push or repnz loope add in and xchg pop jo xchg adc xchg rorl mov cltd dec xchg pop dec and enter or cmp pop dec es imul inc jb inc and cmp outsb icebp daa rorl xchg movsl mov xor pop mov or sbb pop es or dec daa xor xchg add xor xchg push cmp xchg or cmc push test js cmp xor push inc sbb fiaddl jecxz mov adc mov jmp xchg sbb je inc add push xor push test dec xchg mov cmp xchg sub jb jno and push or fisubl xchg movsb push nop pop rorl inc fwait dec cmpsb pop mov add pop inc dec repnz and sbb xor movsl and outsb sti push fldl inc mov pop or jns add test and scas addb add call mov xor sbb dec add enter pusha pop jecxz sbb sbb or das sub sub pop xchg inc mov inc rolb cmp faddl fstpt push rclb and jl insl mov push fidivrl sbb adc pop movsl out cmp out and jl or push lcall lcall fs lea pop push dec aam iret imul ss add inc (bad) fucom imul cmp sti cmp out mov jbe push xlat insb lahf data16 icebp adc xchg add out insb lahf aas cmp lods jnp call outsb hlt push jl cwtl insb rorb xor sbb jae add cs push lcall dec dec movsl adc cs out add mov pop es or jo cltd shr mov sbb aam sahf or pop into jmp mov mov jno and data16 cmc xor and cli jne cmp nop mov psubusb fdivrl es inc mov xor js je jo movl rcl icebp adc fwait test adc enter jnp xchg iret add aam outsl pusha (bad) nop inc add push movzwl adc std xor out push cmp insl adc push xchg xchg add push rcrl daa sub (bad) sbb cmc mov aam add xor (bad) in data16 or inc ja popa or sbb push out out loope pushf ror jge movsb insl lock rol sub xchg mov (bad) in aad push inc jmp or cmp jb cmpl jne and xor stos mov or or jl sub push lods sbb stos adc call das shrb addr16 xlat dec loop adc pop inc aas sahf out sub mov ds xchg (bad) cmc push rolb repnz dec aam push fsubs push mov ret xchg sub inc xchg call add aad pop test xlat inc pop push mov popa insb sub out push adc mov and jo (bad) add cmp pop inc mov jne data16 insb or add sbb xchg mov sub lods adc mov and out or pop roll adc sahf mov call add dec test inc push gs insb in lods dec cmp add fsubrl je mov movsb outsb call cs xor adc xor adc push test lea sub addl dec xchg xchg cmp ja and push adc lahf aam aaa pop test ret out fisttpll adc loopne pop popf mov inc pop xchg aad aam or (bad) mov jmp fucomip rorb jns pop and and push inc std outsb aas aaa lock lock push icebp cmp and mov (bad) fidivrl add mov cmc or aam xchg mov add cmp push mov inc push adc pushf or lock xor sub ds push add sbb enter jmp mov les xchg das or jl add and sbb clc cmpsb mov cmp jle cmpsb dec dec in pushf inc mov les mov enter pop ss (bad) cltd loopne aas in loopne rcrb push enter fnsave inc push push pop inc dec rorb xor mov mov inc inc lcall ret call xchg adc xchg out dec jl loopne cmp call xor lea cmp and add dec dec sub adc mov jmp adc dec dec or and ficoml xchg cmp mov jp pop cmp inc fdivrl lea push or sub in cwtl jmp inc push adc mov push jno mov dec fdivrl lcall decb sbb cmp mov rol and jo sti and sub into xchg mov mov adc or (bad) jb add std (bad) mov mov scas cltd imul out dec adc inc out fimul add adc add or and add pop pop inc arpl js test sbb test mov ljmp and inc (bad) lret dec jne jbe mov adc or loopne mov (bad) jmp sbb out sub sbb sbb cmp and dec inc adc leave xchg inc push sahf sbb push mov leave pop mov nop pop enter dec mov repnz mov pop lret and inc icebp fmuls call adc pop sub and sub ret adc mov (bad) sub mov gs adc jmp cld adc adc sub add add mov orb movl xor mov jno mov out mov bound cmpsb pop add push imul stos mov test aam out push sti add sbb test fdivrs ficoml ret or sbb das sbb cs pop cwtl rcrb pusha add leave jle subb loop cld inc xchg lods sub xlat adc sub (bad) xor sub cwtl push dec les repz lahf les shr (bad) fadds in sbb and not xchg popa inc rol jbe or test (bad) mov lret mov sub loopne ss jb pop rorl inc sbb inc inc ret dec dec aam inc add inc lret ror pop je add mov fwait mov (bad) adc mov dec hlt lea lret mov dec add cmpsl mov add pop pop cltd mov xor xchg cmp jl into xchg jg ret mov int3 lea movsb add sti movsb xchg mov add jp popa cs pop roll shrl add jge cltd push shlb jmp js jno dec xchg nop subb pop fisttpll fidivrl jg rorb and (bad) lret mov (bad) cmp fsts pop sbb enter jae cmp add js mov and lret pop dec into (bad) sbb cmpsb xchg jg cmp adc xchg and mov lock dec fcoml outsl push inc xchg sarb stos loopne sbb xor ljmp inc mov fldcw cmp or adc mov add mov xchg push das addr16 or std jl ds and mov xor add push imul mov xchg xchg jne mov sbb adc (bad) aas ret or das stc sub xor loope add pop into adcl and mov lds js int3 or mov jo (bad) push inc push or hlt cs add xchg xchg pop or ja rcll xlat pop push jae jo xorl pop fcoml and loopne add lcall lock pop es mov cmpsb call loopne fcoml movsb add out inc int3 jo clc aas call jo sbb out adc sbb inc mov push fucomip sbb fldl mov jecxz xchg push lock push sbb push pop xchg xchg pop cltd shrl and sbb fdivrs movsl push cld xchg jo pusha cwtl jno (bad) int and pop sbb sarb sahf cmp andl sub hlt inc mov enter and mov (bad) fidivl and (bad) or stc pushw cs or pop adc add jo (bad) mov subb cli mov sub aas jnp orl repz xchg dec pop mov dec aam aad push push dec mov pop add mov push or fwait jns sbbb int xchg cltd sbb adc clc outsl inc dec loop add xchg loop cwtl pop jle fwait mov push cmp aam sbb mov dec adc cwtl into and add sub xchg je adc ret mov lock daa cltd mov adc xor xor js repnz xchg xchg xchg lahf je pop jb adc cld decb xchg add int3 dec out jo das inc mov in mov addl adc push int3 or dec jl sub popl pop xor mov sbb mov movsl xchg cmpsl cwtl push mov dec push int sub xchg fnstsw adc and dec sub mov cmp add sub add adc test outsl ljmp test push add xor sar fnstcw sbb xor mov and sbb mov insb dec push or mov lcall call jo add flds int sbb mov ja sbb movsl cmp inc dec das add push xchg fisub mov lret nop loopne stos enter test cwtl jo clc pop (bad) xor xor and and fild jne call xor mov add add inc add jae push sub mov test test pop jle add mov or leave je add stos ret inc mov push insl or fstpt mov or inc pop popa sbb adc test pop sbb xchg or jo rorl sub cli fiaddl mov inc fnstsw add push test in or or popf aas adc and repz js cwtl or aas lret jo or lock call sub mov mov jo add dec mov mov scas mov shrl movsl cmp or or sub mov or jg dec sbb insl sbbb addr16 or fist sbb shrb pop icebp inc orb or cwtl push push adc cld push call adc adc imul and push jnp sbb mov inc (bad) hlt aaa aam shl push call cltd rorb inc mov popf gs mov mov pop adc add sbb and rclb imul and and mov cmp push icebp adc fisttp or jg jo je mov pusha out loopne add pop jo loop jmp push adc adc add pop dec sub dec push and push push mov adc and jo add add xor xchg jae pushf in nop dec mov cli out or movsb push adcb and cmpsl add loope add push mov lahf mov sti mov das movsb aam and (bad) daa jne int3 aam adc xlat sbb popa in xor and pushf xchg cwtl xor add lds xchg add fcoms mov call and or fidivl pop add adc sbb jge faddp je in int xchg jo cmp xor jnp fbld adc mov mov sbb outsl sarb or pop jnp (bad) movl lock hlt add sar mov add mov (bad) in cmp fistl fs xor inc push data16 pop sahf mov xchg sbb add xchg fildl mov stos sbb outsl lock xor rcll sbb dec or dec pop mov ret sub clc xor push and xor imul cmp pop or or adc adc xchg mov jb movsl clc add xchg jle cld add fwait dec or push out xor sub jmp or gs push (bad) icebp popf jge push adc lea (bad) jbe cli inc jne push ret pop dec add or pusha aaa sahf or jl pushf inc sbb (bad) dec dec push and call jecxz (bad) hlt sub sub or dec xor iret adc in jbe shll loope cmpsl adc sub or dec or push call fisub inc test and xchg mov xor sbb fistpl or and sbb (bad) mov mov xadd inc fsubrs cmpsb ds jae or sub sub stos lret push or mov mov loopne enter xor call outsl mov lods (bad) adc dec jmp or mov jnp inc stos inc xchg in or mov adc mov loopne imul (bad) or cmp push imul out or adc roll leave push jb adc and xchg or outsl add sbb push xor or lods mov lcall lret movsl cs in movsl repnz das clc add cmc inc pushf lret add pop test mov add fadds or (bad) in call aad lahf push dec cs shrb mov push push jmp xor adc pop movsb movl pop add dec pop inc sub mov lea push sbb and cld into fs xchg push sub push and inc xchg ret jge or psllq pop cs adc add sub popf mov push sbbb cmpsl add pop inc push pop mov fs out push (bad) shr add pop call sub inc mov inc orl and sti xor or jle icebp push push and push pop pop sbbl call movsb lret push hlt aad xor test push inc cmpsl xchg fmul rolb add mov sbb adc add test sbbb loopne daa and fisubl dec sub pop sub dec test cmp push fdecstp subl (bad) jne xchg pop push mov sbbb and sbb push enter sub movsl and pushf stc inc orl jne mov xorl inc and daa push movsl pop pop jo lods jecxz nop out fcoml xor pop sbb insb imul movsl add in push inc cmpsl inc pop dec cmp movb sbb ss sbb mov and leave jmp mulb add push stc cli jmp mov (bad) add dec inc rol jp popf adc mov cli cli adc aaa add mov (bad) xor clc jne add rcr adc add outsb sbb mov movsl add xor cwtl dec xchg push shl lahf add mov pop add fbld aas lcall fistp test dec test pop jae mov push iret xchg and mov xchg sti push lock or xchg aaa add add xor stos popa icebp push push add pop jmp cmpl push sbb mov jmp dec inc sub jmp sub mov mov push fstpl xor gs fimul xchg fs or sarl adc test jns addl mov push inc jle push fiadd xchg xchg jmp or adc xchg cmp frstor scas cmpb xchg sbb mov js adc mov pop inc dec sbb push (bad) xor in mov pop mov sub add add lea and inc xorl rcrl call adc or (bad) in lock sbb jae repz lret pop mov int3 sub pop cmpsb daa or movsl add clc or ret daa pop loope daa icebp hlt popa shrl push arpl dec adc cld leave ret sbb xchg sbb loope,pt popa push push outsl add lcall mov out pop push and mov inc pushf fistpl sbb fcomps fistl sahf sbb in test jo test stc push repnz cwtl xor or test iret cmp loop adc mov lods or sbb jno aad add loope mov jmp add mov or pop sub inc add jns cmp xor mov or ret sbb sub scas mov jle pop fidivl das jo and cs or cmp dec mov sub icebp xor xor mov lock push push test add inc int addl adc cmpsl mov ja je cmp push das inc push cmp inc int cmp adc ds adc push imul and pop sub add or lahf fadds ja ljmp mov push loopne mov gs mov jb mov out dec jne xchg (bad) testb insb popa and (bad) xor sbb mov xchg out mov xchg push xchg pop xor sbb and cmp dec push mov imul xchg mov mov push and sar leave (bad) cmpsb fwait jb stc mov add and fdivs xor sbb nop xor nop and cmp cmp adcl test sub mov repz nop inc shr inc push nop std pop inc pop ret in jne call xchg fmuls push (bad) mov fmull mov test dec stos movsb adc lret lock shrl movsb es cmp push aam je loop mov cmpsb sahf pop or xchg (bad) rcl lock cli cmp pop adc mov push fdivrl adc sbb das inc xor adc lret xor lods stos jge xchg lods pop or into dec and mov sbb and rcl rcrl push mov pop push sub cld nop (bad) int3 lods aas or aad mov movb adc adc push inc jmp inc jns decl or clc shrb mov icebp push dec add call into adc adc push sub lock sarb int3 in add adc add jo pop cs (bad) adc lret mov clc call test add pop cmpsb pop mov push adc mov push sub push push adc mov pop adc add and and stc (bad) aam jg cmp pop call xchg and jp push and cld sahf jecxz add popa outsb adc add popf dec fdivrl and push clc push inc das cmp daa pushf movl dec pop cs mov xor out push sub popa inc ss adc mov leave dec lret push xchg add push cmpsl in jne cmpxchg pop adc call sbb inc nop push and or gs sub mov inc jo xor jne or scas enter and fiadd push int3 sahf or and test inc (bad) mov pop fsubrs push or adc clc cwtl mov push mov push sub pop and jae outsb int3 rcrb xchg adc xchg push add add cmp fucomi pop inc adc or lea leave cmp imul insl jne mov stos add cs push and repnz push call xchg repnz pop pop sbb sub mov dec (bad) out sub rol adc inc adc or aad nop add xchg add test sti jnp push cmp jno mov rclb and adc inc cltd cli jne sbb mov mov pop test pop enter dec push xor lcall mov xchg sub repz mov pop xchg cmpsl std jnp push pop gs call ret jbe fcoms movsl jo or push and push push je xchg jno pusha mov mov int3 and popa (bad) mov aam or jmp push push lea sub aaa mov dec or or js cwtl mov pop push adc dec mov lcall js gs jno mov addr16 mov rcrl arpl cli je test bound pop cmp jns jo mov xor add int3 enter subb jo jmp lret push or push or orb mov jns jo mov push repz out clc jno mov int3 and xor imulb lcall mov aaa xlat pop out jne pop inc gs cltd arpl pusha je push or out inc mov cmpsl xchg (bad) insb test pop fadds push sub fnstsw xor call pop mov mov inc lret xor or xchg sbb mov xor and lock inc ret or call ljmp in cs or xchg lods dec sub andl sbb dec mov push sbbl pop or mov pushf cld (bad) push lock cmp fnstenv adc out sbbl aad ss (bad) cli pop jmp dec mov xchg movsl mov fidivl fs push push add je stc cmp call sbb or into jl hlt pop or xor addb dec rcr pop sub add sbb sbb xor cwtl cltd popf hlt sub push outsb jo mov inc push add in das dec sbb add push xchg icebp and and orl xchg ret inc pusha mov xchg push (bad) dec sbb loop pop push mov ljmp pop and mov es fs ja imul xlat mov mov jo insl or push outsl or call add loope add dec or or sub test je clc xchg pop leave push clc inc js mov popf rcrb out data16 mov fadds lods xor imul adc stos cmp jg iret jl divb imul dec sbb pop and stos push (bad) push sahf add push loope mov pop xchg jb and mov add xchg icebp and lea shrb xor pop jmp lock pop mov mov sub out jl dec jb push test les js add out and jno fwait loope dec dec lods pop or add sub aaa (bad) mov add sbb (bad) test (bad) out sti mov xor xor popa inc xlat js out jmp loope inc call test sbb push xchg dec aas add jo shl adc jmp add repz lock out aas push rorb jno push add jnp in adc add cmp pop xorl pop movsb fistp pop imul out and xchg add dec adc sbb test ss adc pop test xor shr mov add cmp pusha jg jge mov or xor push cmp call jmp push call je jge or imul fucomi inc clc push adcl push xchg int popa adc (bad) loope pop sub sbb mov xlat jne into or cmp repz lret adcb fldl dec sarl in pop pop rcrb mov pusha mov js push les or pushf add aad xchg into (bad) arpl out fadds dec cmp xor sub or or shrb lea jecxz lock add adc jb call fcom subb mov data16 mov clc jmp (bad) jns das jp std inc inc lock fs xor mov das and and test popa (bad) sbb or test push add loope subb xlat mov imul popf cmp nop jnp mov test (bad) pop sub sub mov or pop and mov inc add mov dec sub pusha in and test push pop mov std pop cmp sub sar inc mov push mov nop push lods dec rcr dec cmp test mulw push or sar jb cmp adc shlb or jae sbb (bad) sbb pop xor or add adc popa jl adc iret (bad) xor imull ret loop jno mov lret andl sbb xor xchg mov es (bad) shrb sub movsl or mov xor test push fnop lret sbb js and pop push add push lcall push inc push mov mov sub inc mov enter add loope xchg cmpl xchg fs (bad) xor nop push xchg and cld add loope adc adc cli mov inc dec jnp adc push mov cwtl gs dec sbb ror mov push xchg sti outsb add repnz xlat inc add aas mov outsb aaa and push xor push dec or dec pusha sub xchg mov cli jnp fiadd int3 or movsl ds loopne mov setno mov xor outsb jle mov sub loope (bad) nop adc push gs jge pop add add dec xchg into movb into mov fnstenv xor call mov jecxz (bad) add push xchg daa call push rcrl stc mov (bad) inc cmp push xchg lea psubsb adc mov xchg xlat cmp lods sarl call xchg cmpsb mov es ds mov in push call dec (bad) cmpsl xchg mov add dec sub push shrb and and fwait and and ret fidiv insl inc cmp pop ret push jo pop mov xor dec pop pop dec in and cmpsl xor adc inc jo inc in cmpsl (bad) and or stos inc arpl aas fs testb nop push cmp jbe loopne andl mov jbe ret mov es call inc cmp inc dec ss dec or insb hlt cld mov (bad) and and clc add decb xchg jge mov adc and mov pop out es call cltd xor mov scas xor xchg mov sbb lods add pop dec aad add sbb mov mov jl fcoml pop xchg (bad) lods add cmp adc mov inc sbb bnd loopne xchg cmpps inc adcl pop test mov ds lret xchg mov mov sbb mov inc in mov add push (bad) nop inc arpl orb sti sbb ret cld xchg jb fs aas xchg sti or movsl out stc bound adc sti mov xor add call sarl xchg pmulhuw je xorw xchg and add test adc (bad) cld dec test jl call and insb sahf push (bad) dec (bad) sbb adc pop fsubp jo es cmp sub movl jl enter (bad) loopne fsubp pop push cmp mov repnz mov fs adc xchg outsl add inc insb (bad) push push xor iret push add inc sti mov add js cmpb mov mull lock pop add hlt repnz mov clc fmull in xchg lret in in loopne movsb mov test add into or in add mov push enter shrb loopne adc xor ret cli mov sbb jmp test cltd stc sbb xor aas aam stc insl sub sub test iret xor out push or push sub dec clc dec sbb mov punpckhbw jmp pop pop jmp (bad) std fidivr sbb lds push sub negl cld dec outsb jl dec repz sahf into jp mov out ds dec jnp into sti mov iret loopne js push push out ds repz int3 (bad) xor mov mov inc sbb or jge (bad) fcoml ds lods scas fxch idivb rcrl inc sub jl int push sub in pusha inc ret add xlat pop ds sub (bad) int or inc sub mov jge out push push mov and cmpsb stos push sub mov out ret push aad push sbb imul push jo dec push pop mov loope lahf mov lds cmp test mov out push sar xor addr16 mov ss and movsb mov imul dec mov push in push jmp cmp faddl js push (bad) lret mov push jne ficom cs repz addl adc test jbe out outsl fs cmpsb fdivrs repz add push pop lea fnstsw fs jbe outsl pop out (bad) lcall enter adc call mov mul movsb movsl in leave leave test repz mov mov sti dec mov cmp ret xchg test or and jne sub or mov pop or jge push mov std (bad) mov push ja test mov dec hlt fsubp ss xor adc xor pushf sub add xchg les push test jne pop sub mov loopne mov add pushf sbb jge aaa adc imulb or clc dec cmc or sar or jno mov (bad) cltd shlb xlat lahf stc xchg movsb sbb mov push sbb push push bound int pushf outsb jb rcl sbb xchg inc inc dec shlb inc fnsave aaa or sub arpl inc inc ss pop fbld inc lods icebp fadds cmpsl sti add rcl lret pop inc frstor cs enter lods data16 fstp or mov push mov out push repnz inc add push sub or or mov push add xor mull xchg push into mov sbb or fistp addr16 fstpl and out pop in xor xor xor adc jge add add mov mov jo adc movsb jne loop sub addb incb or xchg lods inc push pushf insb cmp xchg xchg jnp mov xchg cmp popf popa mov pop mov mov jne push mov push adc sbb sub inc dec ja push adc (bad) aam mov mov adc add les jl mov js add adc dec or dec imul mov fisttpl pop dec dec xor adc aam mov es fdivrs mov sbb (bad) mov mov outsl dec sub or xchg cmc mov sti jne add adc jne aaa mov je and mov aad add inc xchg pop mov jmp adc and xchg jo adc xor xor mov xor out cmp and mov sub addr16 test movsb mov (bad) xor mov xor lods push jge push mov push loop and add test push ja add push push or dec outsl sbb std cmp gs imul movsl xchg cmp lock inc jg jp add orl lahf ret and dec pop inc adc pop dec fsubr mov adc adc sahf cmp fwait mov das jnp test xchg add clc and in dec xchg pushf ret and test andl add rol sar js into and daa and hlt into xor or pushf jbe scas sar sbb pop adc xchg jno leave mov jmp jae (bad) lock rcl rcll scas fs call dec inc pop sub xor outsb or mov dec js mov push stos dec or sub addl mov jp jo jne popa sbb jmp movsb pop dec cmp into add or adc inc imul inc mov add jno inc and dec xor cs xchg lock cmp adc mov gs and mov shl mov sbb add les add adc mov or rorb cmp (bad) jne jae push stc sbb push push ret aaa adc (bad) xor and and sbb call leave call xor (bad) jmp sbb pop mov sbb mov pop mov call xchg (bad) mov ja dec popf add (bad) (bad) adc pop add and cmp adc pusha sti out cs jmp aam shl insl dec jo pop fs jmp or mov mov dec imul mov push and out adc xchg push mov mov cmp add out lock jmp ss mov movsw or mov in sub mov sub add cmpsl sbb adc mov (bad) mov icebp and mov gs arpl pusha xor lock push lods cld out movsl out cmp mov push test jne test je add andl adc sub sarb or push jo inc or insb push es jbe (bad) jo mov jno pop xor js in or dec add loopne xor int3 xchg inc push add adc sub shr lods lahf inc inc into lods xor jl popa jo rorl lods in rorl gs lret adc dec dec jo clc or or dec sub rcrl push sub mov push call xlat mov movsb xor push adc gs push inc pop mov and fnsave fldl push notb pop jmp rclb and xchg les or lods neg xchg pop sbb fisttp ret aam sbb das dec dec xor loopne dec sbb dec ja add nop adc mov jo addb inc nop mov fwait cltd movsb pop sbb or test je insl push xor clc xchg inc mov (bad) mov or pop mov jnp mov hlt jp into out dec xor add sbb into dec pusha bound insb pop (bad) mov fsubs in pop adc add sahf inc (bad) mov popf or and (bad) jl push out je fcomip shl or and sbb or xor xor rclb push push in sbb sub xor sbb mov pop xchg dec je testb rorl js dec adc xchg dec and mov (bad) or jne lods pusha (bad) or rcr cmp inc pusha push or adc sbb dec or enter nop cli push int outsb and je mov adc cmc cld (bad) ret not shl or enter sbb mov cmp (bad) jo push int3 xchg gs push jl insb roll ds enter hlt mov repz insl test dec pop push jns mov add lahf mov xchg call push clc ret test jne pushf in jo add dec pusha lods inc pop mov dec mov push or scas inc add xchg imul push push lret int3 (bad) push aam clc xor and inc and adc stos sub sub cmp or xchg inc xchg xchg or xorb jge iret jo push (bad) sub aaa dec push (bad) (bad) popf out sbb jae das ljmp sbb dec add inc cmp or xor xor or xor popa movsb jmp push sub push mov or jp in lock mov or xchg push aas (bad) repnz insb into test fistpl ret ds fstl sub or test imul test push push or or mov add insl add inc dec sbb add add mov in repnz add jbe stc dec push nop fwait testl in pop mov adc pop sbb divb sub inc sub sub sahf mov push test and push enter cmp mov mov lcall push push clc inc gs call gs lahf sbb inc sbb std and jge add or push (bad) sbb aad es push push in sub cld jmp add je iret cmpsl pop inc inc or sbb mov push inc sub pusha lods nop dec jbe pop cmp lods cmpsb jmp cmp dec data16 ljmp decb jae sub push push sub test mov dec add push cwtl movb add jns sahf lock fsts mov and mov (bad) push sbb push stos xor in sbb subl mov jge imul mov shrb and pop mov adc push push add call xorl shlb outsb test scas es pushf push pop cmp rclb popa inc or (bad) push jmp xchg add inc fidivl loope push dec mov call add push mov sbb jb and xchg scas adc ss xor or jecxz loop mov test gs jns push inc or dec sbb out jo mov jne mov add adc pop sub (bad) add enter inc sub loope and (bad) xor fcmove or or inc adc and add sahf je cmp push test sahf adc adc xlat clts or stos sbb cmp and lahf aaa dec cmp xchg and sbb lcall push movzbl sub add sti pop pavgb adc loope xchg push ss loop nop jne pop sub movsb (bad) push loope jbe lahf aam and adc inc sbb mov add and je (bad) fldcw pop jns jb outsb pusha pop cmp call enter scas js icebp sbb sub adcl popa xchg dec push ret and adc mov movsl mov jp out sub js xchg mov (bad) roll and pushf movsb fdivl sub and and and movsb repnz movsl fadds insb loope adc mov xor lahf test shrb rcrl ret add mov sbb dec int lahf and enter xor movsb mov sbb adc inc movsb fsubrs mov mov cli add lods lahf enter push gs cmpsl sub dec and aam fisttpll xchg cmp mulb or xchg lock lahf pop rcrb imul pop xor lea ja xor mov xor rclb pop mov push push lods push inc addr16 pop mov sbb mov or cmp push popa cmp xor or ds adc xor or and ficom jmp hlt add pushf or stos (bad) xchg push movsb mov fsubs or movsl (bad) xchg clc aam sbb shrl mov lret aam mov add jp cmp sbb test and outsb cmp jbe loopne mov jb and and cmp ljmp cld sti faddl mov push dec mov icebp fs addr16 jp out sbb js outsl and nop sahf sub sbb mov cmp fildll adc aas dec jmp rorb xorl add add sub dec xor and fwait mov rclb (bad) jl (bad) mov ret call rorl xchg mov xchg pusha (bad) in je and push xchg loope xor repnz jns xor pusha xchg xchg sbb push inc sub or add mov fs lcall sbb fsubrp jae push adc testb and stos pusha xlat add push inc or rcr imul jecxz rorb lahf jnp mov add mov push adc add xor cmp orl dec out dec cmpsb mov push insl pop sti ja fisub aam arpl mov push in ret jns ljmp jmp dec mov aaa call inc adc enter xor mov rorb xor xchg jae push push clc scas mov inc push push ror ret inc push dec test adc push bound (bad) lods sub repz inc add or and in je push dec or call popa jmp andl push mov cmp dec popf test push ret and hlt jne cmp xchg jmp cmp je aas lret sbbl cmpb cltd pusha jmp pop pop (bad) or jecxz (bad) shrb sub fcmovbe pop jmp jb mov mov mov cmp inc cmpsb fucomip (bad) or sub loop mov jo mov test inc daa es test add push js nop pop jns push jmp xor add pushf scas dec shr test sarl and adc adc cmp cld popa push test xor (bad) adc hlt and pop push cmpb shr push les mov sbb and loopne rorb xor (bad) mov adc shlb adc pop sahf inc xor arpl or and cmp rclb adc ret add push push sub fsts addr16 jne cli add cmp sub fdivrl xor and pushf add or dec ja add or movsb push (bad) sbb mov inc cmp lds mov inc jne mov or pop popf aas add dec or shrb js mov inc jmp pop nop and loopne xchg int3 movsb sbb adc push and insl imul xchg adc xor (bad) je push cmp test sub sbb (bad) cmp jb cli dec imul cmp add or push in int3 xchg (bad) dec mov push xor pop imul cld cli sub loope push push call stc in jb push jl cli sbb mov and or mov dec inc mov je daa jmp rorb mov pop pop test (bad) push or pop jmp push (bad) in add daa faddl mov les lea (bad) add icebp xchg (bad) sarb push sti lea cmc add (bad) sub jne lret push add jp add stc push push out or mov loopne xchg movsb cmp push cltd loope daa fcoml ret call sahf adc pusha incb mov pop inc rolb mov fiadd push (bad) fdivl sar add out hlt rorb pop mov jp cli out lea sub out sub xchg out sti call pop jmp ss popf ds adc rorl push pop maxps (bad) out add jl jle das and pop sti repnz cmp jl add daa push xor nop xchg jo and iret push rcrb pop add sbb pop pop xchg dec stos lret dec or and mov mov fs push mov pusha das in adc pusha push mov mov sub adc mov mov ss call ret or mov adc mov (bad) push into cmp call fmuls cmp mov jo ds jl sbb push mov sti push call dec jge sub sbb fdivl loop push sub js nop jl outsb add mov ret (bad) lds repnz sarb and pop mov and orl inc scas movsb imul arpl and pop cmc pop (bad) adc leave call pop mov push sbb fcom jmp pop rorb (bad) call jo rcl push mov add and fidivl call mov adc mov sub clc jne sbb popa jecxz cli sbb shr xlat mov repnz jne push nop pop mov cmp inc xor popa inc loopne or hlt popa xor fs push add inc stos jmp and push test jo inc mov in sub jle das dec sub or push sbb push push dec scas push xchg and jmp dec out dec xor mov lds outsl mov or int3 movsb xchg add loopne and dec and pop inc repz jne xor aam mov ficompl (bad) shll sarb xlat jl or mov and add add cmp xchg mov adc sub xor or sub jmp pop andb sub pop cs hlt sub cmc es sbb fs cld jmp or enter push inc cmp jne fsts xlat adc mov pop rolb adc arpl inc clc mov mov push mov add dec lods out js inc add add push cmp loope js cmp jge lret repnz mov inc add fidiv add leave xchg mov xchg push dec scas jae inc fisubrl clc xor dec xlat dec cmp enter and jmp addl imulb testb int3 les xchg jmp xor in cmp or in and leave xabort (bad) push jno or adc bound adc cld aam push fdivl adc repz mov jp push (bad) add mov (bad) and imul sahf fiaddl inc xchg aam or or xchg sar test cmp and mov loopne (bad) aaa lods dec inc mov sub daa cmp adc pop add add sub inc sahf pop ret xlat rolb imul iret je mov aad mov ljmp dec hlt add sub sbb jne jge push rcrb ret mov or mov push fdiv inc jmp jae sub and mov push pop shrl and inc into push or mov jle cmp sahf sbb push and idivb or sti cmp ret in inc and cmp xchg rorb out fisttpll add in test repz movaps cltd repnz mov dec push ficoml sub insb xchg iret jmp cmpsb and add cmp jg and clc pusha ret rclb repnz or lods sarl imulb shrb dec repnz push shl lahf fldcw pop jo test (bad) inc xchg sub fnstsw movsl push orl jge or adc sbb adc add es mov dec ret mov ljmp and push movsl lds push rcrb xor test cmp adcl mov mov (bad) xchg push mov push push stc sbb aaa sbb and pop je jo push jae xchg ret xchg sbb outsl fwait xor out push popa nop mov mov xor add push fistpl mov sahf mov outsl cwtl cmp sub pusha inc adc adc mov jg lock jmp cli xchg push and in pop sbb int sbb mov scas sti add lods push lea add adc call aam push inc js or xchg inc add sbbl (bad) sbb loopne rorl pop jecxz pop cmp adc call cmp sub push int outsl adc or lock cmpsl dec jnp aad loopne pop lods pop add push sub movsb push ja jo push popa push add push movsl add out and push sub sbb xchg dec or and stos cmpsb lcall or out mov pop cmpsb sub lea inc clc call movsl pop or adc mov lret sar inc sti stc jae mov pop cli jle or jle std je ja push jae je rclb fnstenv jge dec inc sarl push in sub sub xor sbb push lcall fwait inc xor sbb lods orl cmp sbb subl xor adcl ss fdivs clc adc sub (bad) in inc jecxz cmc or mov divl cmp sbb mov movsb pop lods jo add loopne cmpb xor add jmp dec test (bad) push dec aam (bad) sti call int adc mov (bad) imul add push mov push mov shlb and jno add mov and rcrl or cwtl sbb add cmp or pop lods inc pusha add aas imul cmp dec lods add jo sub mov and cmp jnp mov inc adcl lret fwait push inc push (bad) idivb jmp sub or loopne test jl loopne imul pushf adc mov mov cltd andb mov or mov and dec gs pop push loopne cmp cmpsb xor scas inc std adc xor in pop xor jp or fs orl push mov adc sahf adc add push enter das xor in addr16 add jge add aam jno andl xchg push add xchg aaa (bad) sbb shll mov add mov adc add add xchg or jo push js sub and cmpsb je dec mov test pop and cmc sub int3 (bad) es sbb (bad) arpl rcrb mov shlb pop or loope lock jo or fstpt rolb ret mov and and mov divb movsl pop add adc rcl mov cmp sbb loop ret fs hlt add test xchg lods mov jmp cmp and mov jle mov xchg sbb pop cld xor mov neg push sub dec push dec adc jp lcall push rclb xor add inc sub pop (bad) sahf sbb dec add pop sub mov les or cld and dec popf loope rcr pop les out xor repnz sbb add test dec (bad) inc mov mov jo into push test imul daa clc and out mov dec pop lcall xchg fldenv cmp xor inc xchg mov sub subl xor cmp push push adc mov rol rorb ds dec (bad) and insb or mov imul xchg push popa mov pop jmp pop inc lock loop or inc add add add cmp rcll (bad) jne push decl or xor clc and mov pop xchg adc (bad) xchg add xchg xor pop and xor sub repz push movsb xchg sti or in enter inc rcl push sti cmp sbb pop loop or popf les cmp pop sub and roll aaa fcomi sub ret lock or mov cmc pop push (bad) jmp stos dec xor or or mov mov xchg test push inc (bad) jo cli jg sub das lods pusha sbb data16 or add inc test fcomip dec sbb insl pop add xor inc or dec mov push or jnp push shrb repz mov in js mov fs aaa movsb or cld shrb test or outsb test in xor (bad) paddusb fisubrl iret and dec lahf nop inc cmp aas gs test cltd dec cs add or in or inc push dec mov push test xchg test pop sub jmp fstps add pop ret cmp (bad) ret and ret iret xlat jo pop inc add mov pop test fcmovne pushl push mov and movsb mov lret lock push imul or rol xor (bad) jno sbb xchg adc mov adc cld inc sbb dec add scas pop mov or pop or daa pop or testb inc cs in jo push sbb ss cmpb add or mov pop mov fneni(8087 adc je scas call aaa xor sub or and add out call jge loope jecxz push cmp adc jno adc adc jg push call push add sub mov out add add (bad) inc or lock push mov call sub repz cmp outsl and mov add es js imul cmpl push das cmpsl pusha xchg or movsb lock stc inc (bad) mov add cmp push lahf movsb cmp (bad) mov push xchg xorl cs mov push dec adc xorl sbb pop or (bad) xchg lea or mov rclb sbb enter enter xor fadds jbe pop pop jb sbb pop sub daa fwait out adc lds lock repnz or sbb inc mov popa leave dec in subl roll adc pusha sub jns ds mov push push sub cwtl movsb cmp xchg sub dec repnz call aam or add and push push imul xor rol push jae and leave mov and es inc add xor addr16 cmpsl mov push pusha loopne out adc pop sbb sbb fsubs sub bound out sub inc (bad) gs sub inc mov movsl jmp pushf sbb (bad) inc call sahf call aaa cli sbb lret mov icebp popa inc (bad) cld fist xchg xchg adc xor mov dec push test mov jp js sub xlat push pop cld mov lret adc nop mov cmp div or add sbb insl add (bad) pop and pop pop daa xchg scas or out push lahf or adc pop rclb inc jmp and inc add mull pusha cmp pop clc rolb cmp xor (bad) loope es (bad) test enter orl cmp jp or addr16 lods jns fsubrl lret or cli inc loope cmp iret loopw xor or xchg cli mov cmp dec call xor inc pusha xchg pop addb out cld negl pop push mov push lock and imul pop fs jns clc push ljmp mov sbb lods or lret movsl cmp bound inc or mov inc sub and js inc or divb and in pop or aam pop aaa inc imul imul and push sbb push push sbb idivb dec push popa das arpl (bad) adc jecxz jp daa adc sub fwait sbb mov cmc xor js call and or pop push push imul jg je cli sbb add fcoml mov fldl aad dec dec mull adc pop lcall or mov in rclb or cmp or cmp int je adc jno std rolb adc pusha jmp mov out mov adc ds or scas inc xchg (bad) or xlat stos shll loopne inc daa jmp popa add je cmp shr pusha mov pop loopne xchg nop andl add mov pop ds jle adc shr push sub (bad) mov and gs fcoml movsl ret cmpsl xchg mov sbb mov jmp push push sbbl loopne add pushaw cmp jmp flds and jle jge push (bad) jmp lahf (bad) lret add jp,pn mov sbb lcall add nop dec orl pop pop nopl push enter dec aaa (bad) movsl mov test jp mov nop sub outsb popa into push or add add mov mov xchg (bad) das push mov inc sbb divl and jne imul call dec mov lret insb addb mov lods into jne push pop xchg cmp pop mov or pop xor xor mov test daa stos xchg mov lods jle enter jne dec sub xchg mov mov bound imul push push jmp addr16 xor lcall mov repz add cs ret das or call ret push add or cmc scas mov mov cmpsl push cld call jbe lea into push xor xor out push nop std mov call mov enter fnstcw dec inc pop ss and mov xor lock das jbe xchg outsl test cmp jb jb sbb inc or cmp push inc or aaa xchg scas rolb jmp push and ret int insb stos mov fs push jne and mov icebp push mov lahf mov movsl mov xchg cmp inc in xchg lea loopne push cmpsb and cmpsb inc pop and loop inc data16 fldenv (bad) push lods inc mov xchg pop int (bad) bnd xor inc movsl fs cmp leave jecxz,pn xchg repnz sub ret out imul lea push pop pop pop mov ljmp mov pusha lldt xchg ret in pop mov mov add xorl add mov add mov sbb aam into xor rorb cli adc or push push xchg push cmpsl loop pop fcoml sbb pop ds adc xor sarb xor sub int bswap not mov cmovbe dec sub inc inc icebp push dec dec add out jb mov and add stos iret pop popf mov jle adc adc inc stos adc mov out mov xchg sbb mov inc mov shlb or push (bad) clc or mov lock or jne mov jne sbb jnp lods xchg mov push inc cli es out pushf jb enter xchg push jb dec scas fcoml sub or loop (bad) push cmp add jns (bad) jne (bad) jae insb sarl outsb and xchg clc cmpsl test push call inc mov ds push push aas add xchg shll pop sub xor sbbb xchg or rcll mov inc repz mov decb adc popa stc adc fstpt dec pop je mov pusha and jmp cmpsb cmp dec call jo out push stos call sub leave out sub shll imul (bad) xlat push call mov and adc cwtl and cmp mov push rcl xlat xchg rclb adc mov or sbb push inc add aaa sub pop cld mov in daa rcrb mov das sub pop adc movsb or or jecxz add xor stc mov mov sbb orl pop and inc rorb xor aas fdivrp sbbb push xor xchg sub dec sahf fistl cli xchg add push jae pop xor mov mov or xchg rol (bad) sbb and or lods sub push push lods subl or jbe imul adc call push dec (bad) les lods popf add or xchg mov call xchg add or push inc jnp pop dec pop or (bad) ds adc hlt fbld rcll cmp es test lea sbb push call mov test scas sub pop cmpsb pop (bad) mov cmpsl and jno fdivrs adc fsts nop sarb es nop jae add xorl (bad) addr16 mov gs pop sub test and xor nop xchg xchg daa add or adc jle fsubrs cld push shr call lock ds mov lahf je mov or mov out js push outsl pop fldenv je cmpsl xor lods out inc test or call xchg out adc add daa mov adcb inc cmp jl dec daa or repz dec mov mov sub loope cmpl jo push push dec or lds inc pop add pop xor xchg pop jae test jne orl into lock test and in dec imul inc sbb inc ss jns in movsb idivb push subl sbb pop add or outsb add or sahf andb sbb test (bad) insl add out jnp xorb add adc cmp sbb popf or iret xlat ljmpw loopne add add movsb cwtl inc xlat inc inc mov mov sub test insl loop mov pop rorl and sub adc lret adc adc add mov inc push jl sbb adc push popl dec or push lret mov or push xchg pop push jmp mov push or je sarl pushl jmp in jnp sbb insb call xchg or or roll lcall jbe incl mov jnp leave mov mov inc pop adc adc mov stos test lahf cmpsb and sub movsb das sub jp popa and pop jmp js adc shrb jo push xchg cmp push adc xchg fs push cmp ja sub adc loopne imul clc js mov pop nop xor int inc cmp idivl cwtl jle lea in xchg mov js cwtl dec add mov add jge mov fs mov dec sbb or and lea push pushf cmp xor je xchg push inc add icebp or ds mov jne adc and sbb mov jne sbb xor and xchg add jo js jmp call or cmp call jb in sub jns pushf or jl or arpl mov mov shll lock les mov lds loopne push ja add sub call syscall jbe fisttpll push lock aam xchg inc ds jg (bad) and push mov add or imul lock lahf in push mov cmp es mov sahf pop adc orl insb ret repnz fnstenv add or adc push repz imul cmp inc and mov mov push ret xchg idiv add outsb shrb (bad) xchg push cmp pusha (bad) pop push dec pop or push stc sub and (bad) jle faddl dec leave call in dec push in call js sarb call jae mov cmp mov push jne mov cmp sub add cwtl in rcrl push cltd nop das push jb adc jle adc add push jb addr16 clc cmp je or add pmulhuw mov cmp dec cmp sub inc clc lock mov add lret sahf adc mov and and sbb push sahf jl and mov pusha cmp jo nop adc mov in inc repnz xchg cmp and xor jbe pop jns mul push insl xor sub (bad) mov mov cmp mov add push cltd push sbb or adc cmc dec inc cmp scas in cmc mov nop dec jp cmp nop pop add cmpb and jb hlt nop (bad) dec cmp jle jns scas add mov pop leave xchg sbb repz or or (bad) sbb aaa outsb xor dec enter flds jns addl nop daa inc bnd sub scas out ja ss sub lret sub and repnz add movsb loop sbb imul sbb adc add cmp nop sbbl jecxz repnz icebp stos dec mov push jbe sbb xor inc lock push push jbe xchg loopne jnp xorl in sub or or add and pusha repnz jbe lret mov pop jb fs push inc lock push jo sbb out pcmpeqw jb jns je xor or cmp adc lock dec cmpl lea dec sbb jnp cmp mov pushf aaa jmp push std cltd dec dec add sbbb repnz in xchg jns repnz add shll pop mov mov fisubrl cmp inc adc out jns push idivl dec add (bad) jno jae push xor adc rorb (bad) imul popf mov dec pop jb arpl pop xor jns pop dec sub (bad) out lret nop aaa pushf in in push mov jbe or mov test add sbbl sub cli push mov fwait lods icebp sbb mov ss add dec in fnop inc test inc mov pop cmc je enter or adc inc push push jmp insl dec je push xchg std adc inc pop call xchg xor push pop stos repnz push ret in add xor ds and leave add rep in leave adc mov aaa movsl outsb dec in add fstl leave dec pop jnp or sbb and xor adc cmp inc push dec xor insl mov (bad) sti lds and push jb adc adc sub cmc mov loop pusha or vcvtps2dq leave insb jl jb add xor xchg mov and cmp fdiv nop or in loope add inc xor cmp sbb jb divl pop (bad) mov adc xor cmp loope push sbb imul in inc xchg mov in clc pop inc dec adc pushf stc push and jnp mov cmp clc cmc stc icebp rclb ss mov sbb and and mov mov add dec pop push das fwait jge rolb in into lea mov cmc cmpsb xor addl lea lret out sbb jg insb mov call push loop fisttpl add or push add dec inc and jne adc sub add inc loopne add inc or icebp adc push addl and mov out dec jo sub sub sbb mov push stos lret adc xchg repnz ret aam or or pop sbb fadd ja shr add sbb mov cltd insl and xor aaa faddl fistpl int3 iret es pop mov cld add xchg daa repnz cmp pusha and (bad) jnp push pop sbb je fdivs jle hlt sti jnp or loopne inc test cmpsl jb cmpsl or adc movsb push xor xorl jl mov mov movw or xchg icebp mov sbb loopne les cmp cmp cmp call (bad) mov fld add shrb push nop (bad) sub pusha sub pop iret jnp and ss and imul sbb test adc sbb cli lcall inc imul sub fildl mov mov sbb nop xlat inc das push push ret andl ficoml mov dec (bad) xor and inc push test mov or fidivl int3 jecxz xor dec xor add pop push add (bad) stos adc and cwtl hlt clc push or cmp out mov fmuls imul repnz mov cmp cmp inc push repnz or xor ss jp xchg xchg popa (bad) rcr add sub adc mov mov in popa pop adc and inc or pop mov stc sbb test cmp sbb stc orl call subl dec (bad) xor mov mov cmp push inc in or test sub fadds movsb aaa mov dec in call test or hlt and mov pop ja aad stos xchg pop out test xlat lock call les arpl lock and jl adc push mov xor adc lods inc and lret jle adc inc pop add jecxz mov dec xchg push test mov call mov mov cmp mov xchg or or andb or inc add cld aas ficompl mov in js cmp mov or clc cmp jl leave stc inc and inc ds add enter rorb dec repnz add and xlat scas and out inc daa adc cmp add ret sub add xor dec subl daa and add rclb mov add mov inc ret or sbb shlb (bad) daa dec scas call push xor ret je and movsl (bad) mov and and and or sub (bad) jmp jae xchg push int add test hlt mov inc inc leave cwtl dec add mov add addl adc aam cld push cmp imul testl ljmp daa add add pop jl adc cwtl insl sarl lea and les fdivs sbb add cmp data16 (bad) push enter add data16 fs sbb push lea mov cmp jne int and add xor stos test mov fldl xor or inc jge xor cmp inc and and nop (bad) push adc shlb and or gs jg loop nop xorl mov add sub test mov jg rorb jmp decb dec leave out pushf (bad) roll xor idivl in dec push je adc cmp mov or cltd push inc clc cmpb adc dec sbb imul mov stos mov fwait push lahf push jmp ret push test add xor lock push dec sbb std insb lret cmpl adc jle pushf incl sbb adc push mov leave rolb loope outsb test add andl cmp mov stos and dec pop inc push and in and add mov ja jbe sbb sub pop and push xor add sbb inc push imul push jnp pop data16 jp jl pop xor mov inc dec fdivrl addl in call mov inc dec xorb fwait mov sub pop pop dec test pop orl adc in cmpsl adc sti outsb or out xor jbe (bad) mov fcomps xchg fiadd add into jb xchg daa or into cld or and adc push cli test pop pop les cwtl push out xchg shlb mov movsl adc xchg mov and stos adc (bad) adc or inc jg out testb pop je sub mov push test sarl sti pop lds aaa or pushf mov inc push jne mov push nop add sub dec loopne and jbe or pusha mov nop ja imul push push push jge cld nop cmp jmp das xor je nop push rol shl call adc jle add mov sub sub jmp push dec xchg fadds push dec movsb push xor pop mov jb in jg std or inc sti jns in mov ja cli and mov mov pop and lret out (bad) cwtl (bad) cli fs xchg cmpsl test les sub adc sub and and push addr16 ret mov adc pushf mov mov orl rcr addr16 popa add es sahf push outsb or fwait test xchg test jne adc fs pop cmovbe sbb sub add int pop inc xor cmp jns ret mov arpl or rcrb pop add add dec adc std lret jmp cmp mov and sbb pushf (bad) and clc and or add add sbb rcrl popa scas add inc cld mov mov orb xchg lcall ret jmp sahf pop sbb sbb adc in xor repnz mov std sbb mov loope jo lock dec and iret xor push xlat outsl adc std loopne rcrl aam mov mov mov (bad) dec jns je dec mov jbe add mov popl xor pop mov pushf pusha bound add push dec cld pop dec and pop scas movsl hlt nop orb add inc insb and sub arpl insl imul lods adc push mov push cmp fs lods add or xor pop rol or cs enter shl clc mulb lock jbe sub scas push push dec lret jb clc gs pop xchg xor add adc in in loopne adc mov mov test push shl add (bad) pop inc xor push or sbb (bad) sbb sub dec add inc loopne mov and sbb rolb add call push sub popa mov push pop or xor pop add sbb or mov sub xor or or dec movsl dec dec dec mov dec je sub je push inc push das dec daa mov subb mov fs jp mov dec sub dec pusha adc and inc cld xchg icebp pop mov xchg xchg js mov ret pop add in sub push adc push fsubp push xor sbb inc push jbe insl aaa mov and adc scas or stos sbb movsl push or sbb sbb loopne xor jle call je push (bad) xor or push push sub push test jnp sbb dec movsl sbb dec mov test lods jne gs nop mov inc imul fisubrl ret add call or and adc pop mov push and mov mov dec dec mov add popa movsb adc add push (bad) inc inc inc fmull cmpsb loop test and adc sti xor sti nop xchg (bad) and push sub push inc lods std or fst es aas popl xchg (bad) push push and aas std inc loop (bad) pop imul in xchg fldl add or inc loope xor sub in pop mov lods movsb fwait dec cmp mov mov sbb fldt push push jbe (bad) jecxz and adc adc cwtl xchg push ds jp pop jl dec push adc pusha hlt push js fdiv pop fistl push push (bad) incl cmp pop xchg sub xor mov push pop or loopne mov push lret cmc pushl (bad) cltd into inc je xchg lretw dec int mov pop push or inc pusha add xchg je shrb xor mov rorl pusha jo sub dec push loopne cltd dec mov push xor mov adc push or xchg dec std xor in push out push repnz inc or inc pop jl jecxz add adc call inc xor mov and mov add cltd insl fstl lods clc adc andb jge cwtl lcall add adc mov clc loopne push pop or insb movsb push mov pop inc xchg seta cmp loopne call in sbb mov xor lock dec xor mov stos lock add push addl insb clc es call dec imul in adc addr16 jae enter push sbb mov daa xchg sub adc xorb dec mov ud1 movntq out sbb adc cmp push fsqrt pop add jmp mov aas add fs adc push add pop or dec pop add loopne mov adc xchg dec inc fimull dec pusha test adc mov jecxz jb cmp jns sbb cltd pop jge in bound outsl sbb push repnz inc fwait mov adc call pop add dec test clc or cmp xchg inc (bad) jb and or sub pop in lods pop or adc adc xor jbe adc pop (bad) jne mov and pop icebp outsb dec inc jo push add pop or fdivr cli add ss pop inc movsl pop inc dec push pop les sarb in mov adc or jns pushl add mov and inc stc cmpsl repz test and xchg add dec sbb jns jmp pop adc shr xchg adc sbb push (bad) decl dec les mov adc fcom (bad) mov lea mov je rcrb add mov or in inc cmp adcb (bad) mov inc je inc sarb pop inc mov or or movl aaa aas push syscall fwait xor jns pop adc je or push rcl in cmp or mov je sbb mov in inc inc add or mov outsb push pop jp pushf inc push jb sbb ret push and (bad) fistp pusha pusha cmpsl inc out push (bad) pcmpgtw push push js inc jge sub outsl (bad) mov cmp inc sub dec scas clc (bad) dec sub lds sbb int3 cmpsb push ret mov add xor daa jno imul mov cmp cli lahf xchg out and adc mov or hlt xchg jmp mov pop addr16 aam stos dec test and in jb fwait mov push lea jb inc jbe pop notl add xor and call test push mov test decl ds cmpsb jp add jge mov push push sub dec sti cmpsb pop mov imul dec aad insb sub fisubrl push in je or pop or lcall adc stos sahf cmpsb cmp pop jle gs je inc je shlb and sbb inc push mov cld cs pop call testb pop lret lock lahf xchg int3 leave out sbb mov xchg xor and cmp jp test xor cld sub or pop and dec add mov pop stos xor or pop stc xor test daa cmc sahf lock js call jle push add mov dec push push adc xchg push sub jb dec enter or scas add xorb loopne test jne add add nop mov push mov add aam out fldcw or icebp mov pop fildl inc into xchg push sub xchg inc sar aaa adcb mov cld sub push and xor mov fwait xchg push adc leave mov call call int pusha push in call inc add hlt and dec repz sub pop enter call fmuls loopne ret lock jmp ret xor and or ds repnz add or (bad) aas cli mov hlt pop add push gs lods sbb mov dec add jmp out mov insb add sbb out adc ljmp or sub add shrb mov sub mov mov sbb jb cmp mov inc lock pop xorb jb fs pop sub sahf test fdiv push push adc jl cmp out aam dec lahf mov adc pusha ret mov push or mov push pop pop push imul mov sti inc (bad) sub data16 mov adc ds ret outsb lds adc mov mov or cmp sahf pop pop scas sti (bad) incl lds xor mov or push ficompl mov push push and sbb add ret push fwait ss sub loope sub pop imul add mov fmull push add mov mov push xor mov rolb inc aas jl mov xchg hlt adc push lcall insb arpl or mov add mov mov push ja cmp loopne xor dec add xchg jge dec jbe and or inc jns sub test jge jo pop push neg in xchg add loopne lret dec add push loopne add push add call int push pop sub lcall cmp mov xor push and jo or inc cwtl imul add xor data16 push adc jb or in sti add (bad) sbb jb mov xchg in lds movsl inc add mov loop or sahf add inc pop add sahf or aas and pop arpl stos xor push pop push imul xor jnp mov adc jne sub adc fistp andl or pop adc (bad) test pop add mov jnp cmp mov add enter jae out les cmc sub nop fistl jg push in rol (bad) test test or xchg jo push mov pop push les lds sub fwait xchg push (bad) sub inc xor sub adc into (bad) sbb cmp test jae jp and das adc inc add inc popa addl jae mov fstpl call lret in jle mov pusha mov fiaddl enter push dec jne call inc xor pop test mov and jno pop adc cmp out cwtl icebp jno inc aaa stos jecxz (bad) lret mov add mov push cmp jne je jge sahf dec cltd sub add fwait xor mov ds jne mov aam sbb ret adc hlt adc mov pop addr16 mov scas and jmp hlt movl call mov push dec int3 ficom icebp xor push loope orl jno cli fisttpll and or pop mov mov mov xor mov lret pusha sar lods or insl call mov inc je or cld insb ja lock sbb and imul sub sub aam xchg mov add popa in sub xor mov inc fcmovnu mov inc push rorb ret (bad) xchg inc jne cmovl sub sbb sub sahf or lods cmp adc lods cmpsl lds call mov add scas out and imul or imul loop aas cmp adc (bad) in mov sub and sub pop sbb rorb mov jle cmp stos sub fstpt inc push inc dec bound imul in (bad) mov pop adc and or in or jl add mov mov ss repnz xchg adc xor pushf push pop dec rorb pop notb stos and inc cmp insl or icebp jo push sub outsb (bad) dec adc cli add mov or je push jne push fnstenv lock push push push mov cmpl xchg sub arpl push inc aad jno xchg addb iret out push and dec mov mov das push (bad) xor stc or nop loop and faddl test fadds ljmp xchg push push fldenv lcall into cwtl (bad) xor std ss inc pop stc cs jecxz cmpsl imul jge ds stc pushf scas (bad) mov mov push divl out jge rorb (bad) cmc clc mov jecxz fadds or dec clc xchg dec (bad) sub movsl call add sbb or pop add in jns aas ss pop imul outsb xor sub dec sbb push pop lock or mov add test cmp jns sbb cmp add xor cli cmc pushf js mov in sub jno adc dec xchg test cwtl add xchg sbb (bad) inc mov or (bad) rcll adc jmp mov mov xor inc sarb movl sbbl lods mov sbb mov clts aaa pop cmp xchg mov (bad) push (bad) call or dec push popl cmp inc test cltd add aam sbb inc das sbb ret add ret cmpsb mov sti add pop or fidivrl insb mov mov gs lahf xor adc mov or cmp insb or in test divb add pop adc pusha enter mov call xor (bad) fild mov ljmp loop sbb inc add push imul mov std movsb call test outsb lock cli fcos dec add and daa add cld adc sub xor lcall fs sub pop (bad) xchg add cmp xchg nop adc pop mov mov pusha xchg push icebp in rclb aas xor mov (bad) es in adc (bad) dec sbb and xchg jo mov cmp sub ljmp imul (bad) mov sti push cmpsb or add add lea jle mov pusha and add jne jmp push (bad) mov mov scas or je mov or and rorb add call add out mov or add push push dec cmp add push in xchg fist add jmp test jle je jne pushf jge add cmp jl push mov outsb or je add push push mov xor or cmp lea test add (bad) mov push jmp cs jmp (bad) stos push sbb repz cmpsb out (bad) jno xchg cld sub sti xor and fs ja pop jns popa xchg lea sbb adc inc xchg or fdivs ds fdiv xchg fistpll add adc ds loope pusha inc lcall nop popa mov js (bad) sbb sub and out adc jo inc mov mov fucomp sbb mov (bad) rcl fild lea mov ds push pop gs mov movsl dec stos rcl inc dec ds pop push les pop arpl (bad) mov cwtl pop dec add sbb push lds movsl add push leave cmpb or xchg js gs pop jne loop xchg mov aam pop das cmp xor add xchg (bad) or sbb (bad) ss es jo cmp jb cmpsb and aas mov stos mov clc outsl je sub lahf in or push pop stc fs and out into (bad) xor xchg scas cmpsl sbb inc inc mov loopne push xchg data16 xor shlb iret rorb pusha xor (bad) lock aaa in (bad) stc xor sar pop aas imul roll mov or pop jb loopne loope rcrb adcl cli adc insb cmp sub sbb pop mov and jns sub jge rolb in mov aad enter enter sub enter and je nop xchg xchg cld and aam les cmp push push pop and test or orl mov or cmp dec cmp pop std iret rcl test adc bound dec ret adc xorb xchg sahf push jo fimul (bad) adc sbb xchg sub xlat xor or stc movsb add mov cld imul push jo jbe mov xchg pop mov dec push dec data16 and data16 add out insl sub test (bad) pop xor clc subb push test push ds cmp loopne into mov ja or nop daa xchg in cmpl and cmp xor gs jb pusha test push xor push add xchg mov shrb push push push fs jmp sbb or mov fistp mov arpl (bad) in cmp rorb jbe das jbe cmp clc das fmull dec pop push call and sbb ja hlt mov cmp and push adc cmpsb rclb or or and scas mov movsl arpl cltd pop add add dec sbb je pop add or daa sub shll lods adc adc jl test inc pop xchg lret jp jg or lea call lods dec adc and add sub (bad) nop sub cwtl mov push xor out push adc adc movsl test dec scas mov or je add pop mov mov push lods pop or and clc xchg or sahf push popa lock mov mov in outsb add mov sbb repnz movl xor adc or pop inc mov mov mov (bad) or testl adc xor mov addl mov test rorb and pop sub clc adc adc movsl ljmp stc fcmovnbe out scas fwait lock mov mov or sbb and and testl fnstcw adc push ds cld cmp jae (bad) fwait test or or dec rcll sub sbb fbld cmpsb test or mov je (bad) hlt inc sub out adc mov xor into je faddl (bad) adc loopne sub push or cmp clc and jne mov and xor cmp or xchg mov das adc dec cmp enter addr16 pop sub icebp dec rcrl sbb push cmp mov mov ret fwait xchg or push sub and sbb roll jo lea jb dec popa ljmp inc pop cs cwtl sub repz jle dec sbb loopne in fdivrl int3 mov imul js add mov adc sbb inc jp adcl cmp lret or lds dec push insl dec add sbb xlat adc roll movsl xchg jle push test mov push mov or sbb aas mov pop mov int3 je mov call and mov scas in push mov pop xchg lea (bad) nop std into push cmp ret cmp out sub aas js mov lods outsb sub or fldl or pop stos push mov adc orl adc or xchg and je mov icebp insl push mov adc mov cmpb mov xor fisttpll mov cmpb xor pop loope in cwtl fistpl ret add pop mov dec adc loopne push dec xor dec jge sbb inc in and or call mov insl jmp xor mov icebp int3 shrb nop push xchg push push movswl jae shlb pop jnp cmp (bad) sub add rcrb or movl loopne inc mov push or push xchg in rcrb sbb xor mov cmp cli and mov fdivr into pop mov xor lock push pop add mov lea mov cli push mov movsl mov push sbb aaa xchg outsl aam xchg gs inc adc xor and inc push adc cmp fsubr xor shrb jbe inc push push mov aam subl (bad) pop ja inc pop sbb or push adc mov mov sbb add sbb cld sbb jb aaa cmp or sbb in jne rorb push inc adc cmp dec cs aas mov dec push imul push inc xchg gs inc in (bad) insb int3 iret cmp mov xchg les inc sub add jmp clc dec addl and nop mov cmp xchg push or (bad) sub push mov add pushf jne push xchg mov and push nop fldt mov push inc out push adc test sub movsb stos out inc addl mov mov in repz (bad) test int3 mov adc and sti mov jcxz and test (bad) mov mov xor dec jmp jns pop jmp xlat rcrl call jo in sub aam sub dec adc lret xor jmp test sub je fisub pop call push jbe rclb (bad) fstpt ret cmp adc dec inc push sbb add roll sbb push xchg cmp movsb jns adc adc lods cmp xchg jno movsl push negl adc fdivrl dec or fnstsw xchg bound xor insl (bad) adc call addr16 repz and xchg or and in fdivl fiadd imulb push outsl mov dec stos inc inc or add push cmc das sub dec fild cmpsb pop je pusha addl sbb push shrb pop int3 pop and dec loope in mov xchg push or js pop nop push inc add mov push cltd andb scas jae test mov imul and clc xchg jl inc add je pop in add mov je or mov add push push daa xchg jp ret or ljmp and inc (bad) mov and and cmp mov cmp popa mov dec and test adc nop dec (bad) add shr notb (bad) pop ret pop sub imull movsb (bad) data16 adc and fcomip inc std inc je dec jecxz test lret and add xor mov (bad) xor bound cmp and and fidiv cltd rcrb add in add or imul mov movsl ljmp das or xchg xchg ret lcall scas mov or adc clc out inc sub lods mov push lea lea cmpb xchg xor and adc or add jge cmp bound popf cmpsl cmp xchg add jno add test arpl push (bad) shrb test or cmp roll inc (bad) fnstsw arpl add (bad) and mov cmpsl js and push adc insl pop test mov mov mov or es jae outsb int inc cmp iret sub inc cwtl flds imul sub push and cmpsl loope out mov cwtl sub cld mov mov dec call xchg sahf cmc cmpb call loop nop ss jne aaa or (bad) or lock int3 test in mov xor jmp adc sub push fldcw mov push push sbb pop dec jnp movsl lds mov mull int or and or sub mov pop movsb je jmp xor js cmc cmc mov add adc mov jne inc mov aaa adc xor and mov (bad) (bad) push push shll add push (bad) movsl into andb or and add das xor xlat mov sbb lret lea dec pop mov adc sub add pop xor cld loop dec and gs or in shrl inc xor js mov push pop or mov inc imul or jo adc pop cmpsb adcb loop test aaa adc aad pop push dec hlt insl push sbb push or cwtl add push jns inc lea adc mov pop push adc outsl js push (bad) int3 es call or ljmp pop adc popa in lock and in aam outsb jns sub push xor xor or cs mov out rorb push dec cmp and loope fprem1 lahf cwtl rclb sbb sbb fsubrs xchg gs lock jl mov sub add aaa and clc das test pop (bad) inc sub lods les xchg iret mov les sbb lret or loop out ret call xchg and outsb xor pop test xchg pushf (bad) mov mull mov xchg lret fwait hlt adc sahf das adc loopne (bad) mov adc enter enter and outsl mov pop pop push cli lret or paddsb rolb lea inc sbb and icebp xchg test mov push lea ss (bad) call or mov pop pop mov xchg add dec push (bad) sbb adc add xchg mov mov xor shlb mov fistp je cmp je inc lret add fs repnz adc and push dec add pop je pusha push xchg sub pop sbb adc clts and adc dec call test xchg aas mov inc bound mov push xchg (bad) sti imul inc xchg inc push insb add cmpsl dec imul mov lcall sbb fistpl in adc enter mov ds lock add sub lret cmp mov clc and jmp xor scas loopne and and add ds test cltd mov inc jbe cmp inc sbb pusha sub sbb rolb or and or xlat in mov add cmp sbb jo and ret xor or sub push es and mov clc bound jne mov or pusha call jno insb hlt fsubr sahf jl mov and push das in je mov mov adc call aad jle jmp jne cwtl lret test mov call pop mov jge sub xchg imul stc es pop dec rolb les sub add jo sbb stos bound and dec xchg add sub cmp sbb sbb push push push adcl loopne sbb add bound sub sbb xchg push pusha andb dec dec cmc lret or xor pop add pop mov jp pop scas and cmp cmp jl pop sarb ja sub xor scas xchg popa sahf and xor fcmovu lcall and jno inc inc and inc ja cmpb push (bad) (bad) lea popf les inc ret int sub push add jle add inc mov addb aam mov and mov and inc mov adc adc test pop ja je and pop daa stos sub sbb je ja popa jbe or jbe out outsb mov sub jmp and je or and dec push pushf js movsl (bad) mov jmp movzbl loope xor push or mov shl cmp push pop movsl test inc popf out outsl test inc jns jge xchg add add (bad) inc sub lods jne lds and pop loope jo fnsave sub outsb arpl lea movsb dec arpl ds fcmove inc adc adc sbb and dec add inc andw (bad) xor push (bad) adc mov (bad) sub sbb jg out dec or adc jge pop sahf jge sbb clc cltd dec std cmpsb sub adc outsb add cli inc add pop add dec or add mov push sbb inc push adc adc push pop or pop cmpsb push stos inc sbb inc sub adc cmp sub pop push das in or movsb and in daa push or mov lcall xchg hlt sbb jge add and (bad) and inc jmp dec xor nopl mov daa leave inc push inc adcl xchg mov sarb add ss es mov clc lock sahf je mov in dec lret mov mov sbb jp jge popa fwait push sbb stos dec imul cld mov pop jbe add pop out and aad out sub loopne sbb repnz inc loope adc push test sbb add inc pop dec out js xchg gs out ret and pop add ja in sbb clc and add decb lret ja mov das or clc or les pop je inc jbe inc ja push notb pusha (bad) jmp and cwtl clc pop mov loop inc fmuls cmp mov lcall shl pusha mov mulb push test add push xchg enter dec xchg insb xor (bad) or test xchg or ljmp (bad) (bad) mov or mov repz sub push int3 rcr fldcw aas iret aam add add jns psubq adc add pop add xchg pop add mov or xchg fildl xchg movb jno or dec push jo inc mov mov or das adc clc jb push hlt xchg es dec or or int int sub or and sbb xor loop je jne cmp ficoml inc mov jbe sub cltd adc cmp push or ja or mov jecxz jae les cs (bad) jbe pop fxch and repnz and jne sub adc ja adc inc fsubrs jecxz add mov jne pop and adc add adc inc je jbe enter jp lods sub (bad) xor add inc into cmp push xor inc jbe loopne in mov in sub jne,pt in and sub je (bad) add mov inc push mov pop in or (bad) dec and sahf mov mov and js jno in add and jmp or iret cli pop sahf ss push in (bad) fs and fbld pop (bad) or test test outsb jecxz sbb sub inc inc ds out movsb inc xor jge outsb mov clc cmp je cmp cmp popa xchg push adc jbe les pop scas fmuls xchg into add or cmp ficom xor jae shrb int stos cmp sti jns cmpsb jb mov popa adc add movsl jns xor or lds mov cld dec ss scas lods (bad) arpl mov mov dec das mov inc sub push adc add add pusha adc pop jno ss adc adc scas push int adc cmp and in (bad) je or nopl aaa aaa inc jbe dec jbe dec jbe cmp insb cmp inc test jne decb lds or cmp imul add inc push inc (bad) adc add lock sbb andl pop ja push mov push cwtl sarb ret cmc sbb mov mov sub lea loop ret mov cmp jge dec mov clc xchg mov pop lods fistpl cmp orl xlat mov sbb lea aaa fisubl aaa outsl pop cmp jns adc mov adc push ja lea mov call neg clc (bad) mov and cmp xchg cli shrb inc jnp sbb xchg sar call (bad) mov xor push repz mull ret mov ja xor adc call loope fwait xor insb pop sarl adc mov jl and scas in xor flds inc pop pop or push call jmp dec nop cwtl push adc xor sub (bad) pop xchg mov lea test and pop movd jmp xchg or xor les lret or sarb dec stc cld std adc enter adc dec (bad) mov sbb outsl mov into std inc or stc or and jmp pop sbb mov pop cmp mov test mov pusha pushf iret lods ss cmp inc mov mov dec adc push xchg js ficoml mov or lahf movb inc mov add add mov push push out rcrl mov jle mov add pop popa lcall mov daa divps mov jbe std adc es inc push loopne inc ds dec add inc sub and and stos jge push in push mov dec popl pop push (bad) push mov call adc data16 or pushf or adc mov into xchg (bad) repz and leave push (bad) or (bad) sub (bad) mov jmp repnz cld adc and (bad) add pop xchg nop and sti fstps and jae mov repnz push push lahf scas sti lods std jb adc and sub jns cmp cld movsl mov lret sbb loope sbb cld test mov xchg or iret inc jle jmp jne push addl adc cld and pusha ret xchg repz push (bad) aas sbb test sbb adc mov mov adc inc or mov mov aas sbb or inc call nop (bad) stos cmc in xchg rorb test lods jmp push inc or cmc cwtl in adc aaa mov test jne scas insl in sahf out jp inc and and jnp rcll push mov mov cmp sub push mov dec scas aam or ss xor out xor roll pop push sti sahf lods jge lock push jle add jge insb mov or adc mov enter or pop push sub mov mov pop hlt int3 loopne inc inc inc dec cld lock or adc inc dec dec outsb push loop mov xchg mov loopne or cs jmp adc jmp push jne lock scas je dec sbb sub push cmp xchg pop or add adc in push inc jb,pt std lcall pop mov cmp or repnz pop cmp pop or jne adc cltd stc fcomi sub push pop icebp mov push ret or fistl mov pop nop nop pop push adc push test jo in cmp cmp or out nop cmp ss lret addr16 out push dec sbb fidivl mov xchg orl icebp xor push aas inc sub enter push inc mov push add and out mov fwait lea add cwtl in push pop adc bound movsb ss out lahf add sub insl fadd sbb mov dec add mov fsubs arpl js push adc jp add add call or push gs inc repz (bad) loopne cwtl pop pop rolb movsb push jge push pop dec mov push inc loop lock pop dec cmp das mov sub xor and mov sub add mov push lahf dec inc scas stc (bad) mov pop add dec ja adc mov cli mov in sbb pop sub sar or rclb call subl dec popf mov mov mov dec rcl or push andb shlb int3 lcall push orl fs mov lea lock mov test test and loopne fdivrl es jmp or mov xchg (bad) dec sub adc and in pop push push out daa dec pop lods mov aaa mov clc ret sbb test jecxz mov cmpsb jb adc fcomps cmp dec push movl push jmp and mov rcrl (bad) fsubrs xor push mov xlat jbe add cwtl imul xchg (bad) sub cmp sbb xchg decl push lea push adc mov lock cld dec adc data16 enter hlt sub mov cmp js pop decl push mov and jne jmp lock incl add push adc movsl adc add pop pop loope (bad) xor xor lret pop ljmp push loope in push sbb dec scas and ss scas and or xchg or (bad) jne adc or mov cltd hlt sbb mov mov outsl test es adc xor xchg cwtl add xchg adc les sub jle jne je mov insb add (bad) pop pop xchg mov movsb andl pusha jo add ja lret stos rorb aam cmp mov xchg dec fmull outsb je ret jbe cld int3 add push xor add mov adc push les mov (bad) fcomps ja jmp and or sti pop push pop push (bad) sbb add xor push cmp sbb data16 es (bad) shl jp (bad) in and lcall xchg mov gs push push out ret aam push lods jle pop nop (bad) inc jl dec ljmp adc enter outsb cmpb jne imul lahf jb push xchg div repz stos scas test jl test pop mov add xorb xor cld mov add js jbe les cmp mov clc or add lea push movb lret pushf inc leave sbb test popa popa xchg hlt lea mov fs push jle sarb cmp pop push mov fstp jge imulb cwtl push mov outsb cmp out movsb mov lods sbb pop jg add fs subl fbld les push cmp loope lret clc repnz and or xchg xor sub movsl cmp mov xor ret mov mov inc push sbb push movsb sub mov inc js sbb or pop mov mov adc mov sub rcll add sbbb ss int3 stos mov pop add or loop xchg fdivrl and pop in push mov leave cld jl test lcall fstl inc cmp enter add push push xor xchg add mov aad add xchg jp xchg xchg adc or mov mov aaa imul pop lcall sbb int movsl lock add lods adc imul aas movsl sbb sti xchg add xchg cmp xchg lock and clc mov mov pinsrw aas in call xorb popf xchg je stos sbb sbb rcrb xor xchg aad mov add cmp pusha rol push or ret cmpsl cli (bad) int and xchg ljmp mov clc clc jnp (bad) cmp sbb cs ds jecxz stc pop cmpsb rclb inc adc mov dec inc adc xlat sub push or ds enter cs sbb xchg xor sahf pop jmp xchg (bad) ss inc stos mov jnp or inc jle cs call nop fwait push je adc std stc loopne add dec les adc cmp add pop std pop or call pushf and jae,pt xchg sti iret or mov test push rclb dec (bad) ljmp nop orl cmp sbb rclb stc icebp xchg rorl lods xor xchg mov into lret call data16 js and xchg cmpsb pop dec sub ja jp mov adc or inc mov push cld add (bad) pop pop je dec or hlt lods add dec jne or jnp pop mov sbb adc sbb mov jp std mov sub iret jae ret xor or xor shlb mov into add bound cmp mov fsubrs fidivrl mov lock mov push (bad) ss sbb ret xor ljmp jl xorl adc (bad) adc pop sub jmp js mov into in mov xchg add adc xor and or jbe xchg (bad) dec jmp pop mov push int3 cmpsb or push ret push test jo rcrl pop (bad) dec ret sub xchg sarl jp mov xor sub sbb les xor and loopne sub push jle mov adc daa ds les jmp sub mov pop ret bnd inc cmpsl stc xchg pop cmpsl jl stc dec xchg loop xor or push pop and aam call sub (bad) mov data16 ljmp ror faddl rolb or sbb mov jecxz sbb cli xchg mov mov mov call and push push and dec mov adcb adc ret mov sar and sarb mov add cmp lret lcall jns or xor mov aam daa pushf xor or or sti adc jmp sbb rolb mov inc in (bad) je mov sbb shr mov inc lret push fiadd scas (bad) adc dec popa mov pop and (bad) es mov or pop mov jb add add mov imul mov sbb mov cltd xor stos nop or pop enter nop adc adc inc pop inc sub lcall mov in mov popf adc enter mov mov mov arpl and (bad) adc (bad) sarb adc push andb jecxz lods xor addr16 add enter lahf and dec mov add hlt push xor add pop pop pop aaa or xchg sub jg or test test arpl push cltd inc lea rcr xor jle sbb mov cld ror test jo inc mov inc lea mov push or rcrl add xor add dec daa xchg call stos push cs xor adc xchg andb loop sub out fidivl or push xor fs repnz icebp sbb in (bad) add lcall lret jo data16 ss out or sub leave mov mov xor je xchg negb sbb rcll aaa or jg xor push push or leave ja xor pop lds sub inc movsb or loope inc outsb adc insb popa cmpsb jae jno mov xchg add mov xchg sbb imul lea test loope ljmp xor add pop push xchg shlb inc loopne mov outsl jp loope xchg cmp xor pop push inc lret pop lea hlt dec repnz mov iret mov mov (bad) xchg fsubrp daa cld sarl aad mov inc push push xchg leave mov inc mov cmp loopne lret push outsb (bad) sarb (bad) shrb xchg push sbb push jecxz adc gs or pop and jb lret adc jae sbb pavgb jo lock pushf xchg mov xchg mov sub add dec add mov cmp and jnp js xlat mov xchg lods and adc cltd push inc push mov or movsl mov sub dec movsb and movsb sub lcall push sbb mov or imul mov dec inc mov jmp xchg adc xchg out inc and inc adc cmp fs orl add test pop cmp push inc cmp lret jbe add or sbb adc sbb sub out arpl jb iret add loop pop xchg gs mov out test pop xchg dec mov xchg pop pop clc inc push pop mov imul jnp vrcpps mov and pop cld stos sub inc add rolb arpl sbb outsb xor push xchg mov and cmp add (bad) pop pop loopne inc cwtl jne pop pusha lret pop addr16 lods dec outsl addl pop or addb pop and int and enter test (bad) dec stos (bad) xor sub pop and pop ret inc dec or inc mov shrb sub push lock test xchg mov mov dec mov inc sbbl daa clc fwait mov xorb or add add inc add adc lret fs dec out mov and jne cmp xchg mov xor sbb jbe cmp pop jne pop scas pop je outsb and inc xchg out push xor jne pop inc rcll movsl push jmp andl sarl test fs cmp or mov jge or les xchg scas or jns hlt add mov dec inc stc cmpsb lock and xor pop loopne lds dec rorb test je stc push fcoms idivb aam or je adc or ja or lcall sarb movsb and xchg imul pop loopne lret push jle lcall adc fwait pop jle pusha push dec in push cmp add sub int inc dec sbb mov lret push fidivl jbe repz cmp aam push pop add push fmul push aaa push fcmovbe testb jle cmp dec sti aam popf adc call les adc add pop mov dec inc cmp data16 popf out lret gs mov xor lea mov xor (bad) or add pop ss or and mov mov outsb movsb test add dec pushl addr16 shrb add and cld sub pusha mov sbb int3 mov cltd jmp or bound jg je movsl mov mov sbb mov or mov or es cmp jmp sbbb mov lods nop dec or in xor enter or xor cli xchg jl lahf imul jae mov cld clc dec sub xlat movsl inc push dec and jne nop clc hlt mov xor sbb adc (bad) pushf cmc jo daa scas add cs add pop cmpb loopne xor les adc call test subl cmp aaa les mov xchg push loope xchg cmp inc aaa lea adc inc sbb (bad) mull cmpl mov inc mov lods jnp inc pop lods imul sbb add in popa sub ret test gs sub test rcrb stc sub into push or push and cmp enter dec cmp jb ja lret push aas xchg mov lock mov add pop mov dec clc and pop cwtl ud2 sub add inc pop push and add push enter adc push add scas lock mov (bad) jno pop dec rcrl std adc orl enter fimull les add out sub shlb ret adc add push adc inc dec aas inc inc or pop dec (bad) jne movsl cmp les out addl in xchg push push mov imul adc lret and lret lods lea adc cmpsb fnop mov xchg hlt and add out add call mov or jbe mov sbb fnstenv add clc pop add and add sbb xor or call movsl cmp cmp jb call pop inc push add adc sbb into mov lea lods repz outsl imul mov jbe pop fld jnp (bad) or mov out das call jno aam sarb mov sbb fdivrp negl and cmp iret add add (bad) nop std sbb lods ss add inc daa iret xor pop jmp cmp nop xchg daa jo (bad) imul (bad) pop inc sub adc imul push arpl cwtl mov movb and sbb mov push enter or or rclb outsl dec test xchg push push sbb add mov add and stos ret fadds in mov test popf lret or mov jne rolb or shrb cld mov cmp pop icebp push or aaa inc inc pop mov push fwait push mov movsb ja add sbb js movswl out sahf stc push ja out mov ljmp jmp push jmp push jmp push or add rcll push push jmp and sarl or push in push mov add stc add xor adc arpl jne or pop or add int3 repz mov data16 xor cld je rorl divb (bad) jmp pushf push fisttpl leave xor jl or jle add mov xchg or add dec pop or test daa add je loope jp add sahf nop in adc xor imul dec shlb fistl (bad) jmp jo jno les inc cwtl fs push sbb fcmovnbe push pushf pop cmp sbb jbe add imul in xchg adc or sub or adc loop sub movsl or push xchg push inc mov push inc out (bad) dec mov js mov adc push out jle insb or movsb stc sbb fild stc jg or cmp xlat push inc mov jmp insb sub imul mov pop jae ret ljmp xchg push fmul add sbb cmp sbb loopne jle add or idivb jg push push cmpb je jbe insl sub adc add and pop in add out xchg jp addb jns loopne stos adc cli fsub popf cmp addb add imul sbb mov adc (bad) sahf nop js adc push dec jnp and cmp stc xor mov push (bad) lds je dec add and lret aaa xor lea or flds mov sub cltd jnp insl and adc push les add mov les or ss mov aam xchg xchg xor cmpsb sbb or into addl and dec xchg loope (bad) sub fimul pop mul js imul mov jae sbb lret push add jnp enter push or shrl cmp add cmp cmp clc mov fdivl push out fcoml xchg (bad) je sub mov and or (bad) test call xchg xor aam sbb insl push xor cmp (bad) cmpsl inc cmp ds lret and je (bad) call das jbe pop aad adc std cli xor (bad) call jp sub mov adc je sub das loope int jp cmpsb pop dec mov je (bad) or inc jmp aad stos jp daa or xor sbb daa fs cmp inc shrl pop mull in popa add inc inc xchg push (bad) fcmovne rcl andl dec call push (bad) and fisub mov cmpl xchg ja and sbb daa xchg dec inc lds jmp lods inc dec jge adc dec pop push imul and fimul and sahf rorb or (bad) mov pop aam mov popa sti push dec jo push pop sub fnstsw add js outsb loop movsl cld dec aas fs cmp (bad) fwait inc cmp jnp cmpsb push jecxz cmp xchg jp out xor lea decl dec push ja pop jmp jg popa xor push cmp mov or add lahf mov inc pop je add lods mov push mov sbb loopne sbbb sub sub mov mov fs out push push iret mov dec mov jmp in adc mov add cmpsb xchg mov or pusha dec fdivrl loope or cmpsl jg cmp jnp push dec xor or xor and rcrl jo dec adcl addr16 mov icebp jmp push dec add fstl mov push xchg xor (bad) jmp adc add (bad) addr16 (bad) jne mov inc cmp dec cwtl adc dec push push out mov adc add je sbb xchg dec popf (bad) ss xchg xor jp add mov pop sahf in sbb dec xchg rolb fistpll cmp push les mov outsb and movsl sarb data16 test cmpsb pop or adc (bad) mov add scas and mov cmp jl or fs dec inc test test es and cwtl inc xor mov push mov aam out (bad) dec xor pop setne add dec push movsl stos data16 fwait mov ror int3 mov sub in xchg sbb xor sbb test ret (bad) push ljmp xlat fidiv adc mov scas mov stc hlt inc outsb testb and mov cli sbb outsb popa jl jns push pop sub sbb xchg add jmp mov (bad) bts pop add loope push cmp adc fsts dec pusha push adc stc pop adc xor pop out decl ret push sbb push lods leave ljmp mov add inc mov sbb fs jge lock add pusha je lock and cwtl add push pop add insl sub and lock pop js xor iret loop std mov sub mov vaddps shr push call out add push int jle sub xchg in mov mov inc push popa jle dec orl add je ljmp es xchg sub mov sub adc mov dec daa dec adc xchg je add and pop pop inc mov dec repnz xchg ret imul dec push imul sub and out inc jnp dec stos add jb mov icebp test hlt add enter int3 mov data16 jne push pop jg sbb (bad) call into subl pop jmp andb pop add add xchg sahf inc movsl pop ja sbb sahf push jne lock jns les popa repnz mov add loope insl les or call mov adcl sbb out fistp inc (bad) scas dec cmp and aas adc into jnp push ljmp and dec sub out jmp or jmp or adc std iret aad mov cmpsl mov mov lcall push sahf nop xchg sbb rorb jnp roll int inc inc pop and shl xor push and dec cli inc dec stos and jmp into inc jo add repnz roll xchg lock sahf movsl mov andb orb pop repnz push cs adc push xor mov jmp insb popf lock and repz icebp dec sub xchg adcl test inc clc inc and scas dec nop inc lahf sti and add cmp add push into aaa inc sarb adc pop adcb testb arpl sub out js (bad) mov pop repnz lds dec pusha ss adc sbb add outsl in hlt ret popa and out and xor sbb sarb jmp test and mov fucomip dec fsub xor pusha mov add inc adc je arpl jbe enter sbb lret (bad) arpl mov repnz lahf xchg add adc mov inc out sbb pusha add ja xor mov cmpb rorb sbb push adc xchg repnz xchg cli in cwtl sti (bad) popl fadds ficoml push mov mov push lea jbe xchg push cmp and inc or arpl idivb push jbe and cmpsb fisttp es and push loopne push cld lea xor fwait test loopne mov add adc mull xchg sarb ljmp sbb add jae add or adc xor cmp jle out es inc mov push stos sahf das sub or adc push cmp je sbb mov repnz mov cmp inc mov jle outsl pop cmpl mov adcl cmp xchg dec loopne jb pop ret push add or std test stc xchg ret push into push cld push jmp mov rolb call pop nop adc cmp pop lock adc dec ror jo mov icebp add mov pusha mov ss dec out inc jecxz sbb push sbbl sub stos dec and push push add mov fdivl mov pop or rorl jo xchg ds jmp push inc adc cmc fstps and add lea cmp inc mov and call xchg push bound lods es push mov adc (bad) cmp inc in out inc cmp int3 js (bad) mov push and push jb imul test sbb and addr16 sti xchg leave inc or cmp add mov mov push sbb add jb mov xchg jno add add or push push fidiv in push sbb fwait ror jbe inc mov dec xor or or mov loopne loopne mov (bad) pop movsl adc or cli mov jno (bad) call dec mov pop xor sbb mov cmc mov dec add (bad) test and mov dec xchg inc cli xchg (bad) data16 stc insl les xlat sbb lods pop inc inc xor mov lret add aad pusha mov and or lock push mov sti iret stc sub (bad) lea push push cld clc push int3 or and adc push push cltd add data16 mov dec push fsub int3 idivb jo lret cwtl cld loopne xchg inc cltd xchg icebp mov inc xor daa add push jnp pop xchg cmc add mov int dec or and inc lcall in scas lock mov pop icebp je or je stc cltd call jne ja lret (bad) in add pop or jecxz inc jb lret stc arpl or js xchg xor or xor sub xor lahf cld bound fldt ret jmp sbb dec cltd xchg xchg cmp adc push inc lret xor xor add lods and xchg mov mov add adc push inc pop mov mov add inc xchg push mov nop sbb imul hlt cmovb push cmp insb add mov sbb push pop sub je adc cmp add push push or or push pop pop or jae xor jne popf outsb or in in popa dec lea stc push dec lret mov subb lods mov or test (bad) xchg sub mov and or adc in mov pop inc sbb xor leave js ret xchg je lret data16 hlt (bad) or sbb add aas leave movsb adc dec stc std inc adc fwait dec xchg icebp push xchg addr16 add sbb mov sub ret cwtl mov loop pop fdivl addr16 mov enter and aad rcrb (bad) push jbe movsb std stos call loopne pop add out sbb pop je mov jnp inc into test cmp mov and icebp sbb or fisttpll adc jne inc daa test lods into neg push sbb call loope ret mov fdivs xor addl xor fnstsw push mov enter fmull mov cli orb mov sahf mov or xchg sbb test dec cwtl sbb rcll sub out in jo or into int test ss gs out dec int3 lock dec rorb pop push rol cmp enter jo ss test push add out (bad) imul dec rcrl leave divl inc (bad) out inc cwtl (bad) fsubrs add mov fiaddl push roll or add aam push add dec sbbl add add arpl in push fnstsw mov imul cwtl jb xchg and imul cmpsl test repz call inc sbb push push xchg cmp ja cmove and inc pop mov mov imul or into sti push push and mov roll repnz je adc lods or iret ret inc sub mov (bad) or push pop inc add add jns xchg mov aam sub xchg push adc das ds or in mov leave push outsb or sbb (bad) imulb add and (bad) xor pop sbb mov add xor push mov mov or adc stc sbb push ds cmp inc inc insb adc outsl das lods xor lahf dec inc adc enter adc (bad) out iret cli mov dec fidivrl fs test pop adc add call int3 cmpsb add fidivr imul jae subps adc inc jp jns imul sbb push push push rclb call pop jno add and test in js rcll xchg sbb dec jge jl jne ljmp inc push or mov push div jg xchg daa inc lcall rcl cltd fisttpl ret rcpps mov or and jb mov stos fldenv rolb bound js or jne js jge mov push adc adc int3 and faddl stos mov pop sub adc jl les xor mov jbe push outsb jl ds mov push push and ret frndint and add inc test inc sbb fs cmp sbb call jle out xlat or sbb pop and xor pusha add jb xchg xor movsb or rol jb sbb mov ss sub mov adc test jmp jge fadds pushf gs jle (bad) jmp (bad) mov jne repz sub jae cmpsb mov or mov lock add jmp and mov jle or stos mov shrl int3 or sub in outsb test inc cmp nop sub sub ss push stc mov jno lret rolb mov push ret xchg mov test faddl xor pop inc jmp jg add mov or enter in jl fistpll sub or jg mov js out pop movsb sbb cmp je dec jle cltd add bound loopne mov movsb int3 jne sub dec (bad) jge das or jne pop push (bad) add inc or repz inc in fadds adc adc inc and jo dec stos add dec xchg add das xlat mov addl add fsubrs push jmp mov pop adc pop enter out es int cmp jge fs and (bad) mov idivb mov xor (bad) dec inc xor push js mov les pushf xchg (bad) push (bad) sub mov lea jb movsb jne out pop (bad) repz pop push xchg mov xchg enter call clc xchg popl mov (bad) ror mov sbb xchg (bad) mov xchg es xor clc sbb aam xchg aam sti adc adc or sbb or mov pop call sbb push adc imul pop inc jo lcall jbe xchg mov push adc push cs aam fadd fcoml add stos or or rclb push mov enter push xchg xor shlb sbb (bad) mov clc and inc inc stos mov jecxz test add pushf ljmp sbb stos fmull cmpsl fs mov and les push lret lea lret insl xor or jp cli cmp jl dec scas jae sbb call jb add mov lret or cmp and popa loope lret inc xor cmp fistl adc mov or (bad) add or mov addl insb sbb or andl push and pop add mov icebp roll sbb lahf loop xor (bad) add rolb pop push or fs add test (bad) das push xchg cmp pop push pop pop sub mov push mov adc jge pop push popa sti xor sub insb and ja sbb ret clc or cmp and insl or cmp mov dec add leave imul stos lret sbbb xchg ds cwtl add js jecxz in arpl cmp xorb sbbl push push mov add mov or add pop jecxz push pop aam pop and jae adc sub pop test mov xchg and sbb add pop jb les nop or mov cmpsl jne push mov dec push out subb sbb dec je xorb mov clc xchg xchg pop xchg out (bad) rcll ss push inc (bad) and (bad) adc test mul pop jo std mov cmp ja sbb mov xchg mov sbb negb add dec sahf pop add dec push add cs mov sub push sub test and call insb sbb add xchg rcrb cmpb mov push jbe jmp or pop jb add data16 imul push loop add aaa (bad) in xor jbe mov xchg add roll int3 je lds and push mov pop pop gs mov pushf ljmp ss sbb cwtl fiaddl sub push inc dec mov add es sbb mov adc (bad) xchg divb cwtl xchg loope or jo stos pshufw mov cmp add inc gs cmp sub push push jno scas pop bound pop xchg adc pushf inc sbb movsb cmp sbb jmp movsb jno shrb adc stos dec rorb jne add add sbb add adc std adc sub loop jmp inc dec jne cmp push lret cmp sbb add cmpsl mov lds and adc inc (bad) lret (bad) loopne int adc xor mov xchg hlt push stos push cld rcll push xchg or pop inc cld add loope test dec push mov test cmp sub or or out push das lret adc hlt pop and (bad) sti cld imul pop cs icebp sub stc lock xchg movsl adc jne inc mov les ffree cli ljmp cltd movsb inc fsub (bad) mov lret ret stos or pop dec mov mov dec dec daa ds add enter dec inc jmp fwait or aas jno pusha lds jmp jecxz or mov aas sbb push add loop dec inc mov lea or inc and xor push or xor jl data16 dec sbb push sub rorl inc mov or add data16 shll jle int3 sbb (bad) push mov push or outsl xor dec ljmp (bad) jne test cmp push inc cld iret sbb out hlt inc js lock xchg jle sbb dec shlb cli (bad) stc add push jg jae out inc lea sub nop out outsb inc dec inc lods hlt and popf or clc popl inc xchg movb cmp or push and add or lret call adc or outsb mov mov xor mov adc or jecxz and add add mov mov lret bound cmpb xor outsb icebp inc das and lods daa push movsb fidiv cmp je add mov cmp xor pop jne adc jmp inc jmp sub sbb push mov pop je inc ret push xchg mov lahf dec in pop dec fildl enter call sbb mov daa dec mov cli adc push lcall in aad (bad) dec test push or mov scas into and popa lds (bad) mov pusha sbb ja mov icebp cs add clc cmp dec push mov sbb xchg lods out int mov jle inc mov mov sbb or pop mov push movsb fs fistl mov cmp dec pop push cmp les cmp sbb xor shll add jmp into ja adc push mov iret cmp lock iret nop es push out or call aam push inc xor jo mov test in xor pop sbb popa or ret out stc lea or sti sbb fwait dec push in rcrb adc mov push xchg es iret repz je dec fwait pop cmp out mov sub cmp orb stos xchg pushf in cmp les int sbb push test cld adc mov push dec enter and sarl rcrl iret jbe xchg imul and fistl jmp mov ret cmp jge add frstor jb scas pop push pushf loope movsb test movsb or add in imul (bad) sbb push insl stc rolb rol pop testb mov sub pop sbb push rcll mov sahf fsubs ret cmpsb cmp fldl loope push cmp ljmp and push scas dec rolb inc insb (bad) jo jbe pop pop and jb inc or mov or sbb neg mov push push sbb push push sbb mov sub lret ja lret sub push mov mov xchg jle in cmpl dec inc dec fs adc inc and xor int3 sub xlat sub mov jge or je pop test xor out into and repnz sub outsl and xor dec sub and imul inc je movsl jecxz or es push jecxz lret jbe les test call scas sarl xchg dec inc pop xor inc add jmp sbb out ret arpl cmpl dec popf out pushf imul mov or add or xor femms les push xlat lret push inc fiaddl dec fs or loope mulb call (bad) imul push enter cmc sbb sbb sbb popf jnp lods frstor (bad) mov lds shr mov hlt fs popf or cli outsb dec and call movsb add shll adc add add es das in pop xor sbb or inc movsl pushf pop faddp add in add ret ret js out jne cmc leave into insl int3 loop dec push lcall or cmpsb cmc pop sbb call and mov div cmp nop adc rcrb es or mov jg test cmp cmc sub es sub inc adc clc in (bad) call sbb (bad) fbld xchg and sub mov jb pop add cmp sub and fcompl xlat push shrb mov cmp dec rclb mov aam push lock jno pop mov sub sar add sub mov les adc push out or (bad) jle rcll lret loope pop pop inc adc pop dec add cli loop jp xor add mov orl into leave adc jle jns orb ret jae sbb sahf push add mov cs push test add xor xchg mov adc and test (bad) and icebp daa das and push push xchg (bad) cwtl sub scas push adc xor (bad) sub cmp into mov stc and mov (bad) negl (bad) cli mov jle or sbb push add addl sbb jmp jno jne dec or call push rorb inc cmp mov or push pop sub dec ds push and or (bad) enter adc fstl pop sub sub add xchg mov adc or mov push outsl xchg and push jg sbb and test push and dec sbb test fwait aad jne pop inc (bad) mov xor jbe (bad) push mov into xchg cmp pushl or inc jmp fs xchg js stc push fs shll (bad) cmp adc jbe xor xorl adc test js ljmp aas adc add (bad) or or inc leave or mov lcall sub shlb add xchg test pushf or jmp adc (bad) dec and push lret pop je pop movsl mov mov sub xchg rcl pop iret nop dec add lret pop arpl inc xchg or enter pop into dec or enter adc or cmp sbb arpl mov xor push cmpsl lods arpl push mov pusha jle jg pusha inc add aas add mov dec add adc mov call test (bad) xor dec xchg add leave (bad) sbb nop nop mov jp outsb cmp nop dec es xchg repnz xchg sub xchg dec cmpsb fs test leave lds sbb sub cmp add pop sahf push inc test icebp push sub inc or xchg mov push dec clc mov fmull loopne enter cmp push xor or xchg add sub sarb pop add jmp xchg and fcomip jo dec out pop call sbb imul call add jae js mov inc sbb inc xorl (bad) lock push in movsb in or xor int3 or sti push addr16 insb push sbb lock lret dec adc inc lcall jge inc jnp and arpl push clc mov or inc mov ret (bad) dec pusha ss jl sbb ret jbe es add xchg (bad) add push mov bound orl rclb (bad) push add dec dec dec push add roll mov cmp dec pushf (bad) clc (bad) mov lods adc jmp insl pop (bad) mov sub enter sub rcl sub sbb sub popf imul inc mov cmp lret inc jnp or push fmull insl dec inc inc xor xor xlat xor mov mov (bad) mov cmp xlat (bad) or adc xor mov push sub enter cmpl mov and mov scas fs (bad) lods jmp data16 mov push adc cmp add push add int rcrb push add or int fnstcw cli decb or (bad) sarl or fiadd dec mov insb and fmul push sub pop inc mov pop cmp imul mov xor fucomi dec add mull lods lds les jmp (bad) xchg outsl mov aas das add push mov cmpsb xchg xchg into loope sahf adcl jmp movsl xchg popf or test adc addr16 xor add ja cli xchg fcomps add mov mov cli das inc pusha adc sub das jno jmp ret pop nop jo popf jmp movsb loop imul addl or ja add rorl or cmp and dec xchg pop pop push or pop cwtl mov ds lock rorb cmp mov lea xor adc insb xor clc mov jmp adc adc or inc mov enter sub in call dec movsl push cmp sbb aam cmp xchg js push push jmp jecxz out add sbb mov jle jle,pt inc rclb inc fwait mov add add inc (bad) lods testl sub (bad) or adc (bad) push andb push aad jbe xor fcoml or push sbb int3 adc adc mov ljmp sub jae pop cmp mov add rorb xor xor mov imul add and test jmp loope xor rolb inc popa push push pop mov add cwtl loopne xor out nop push icebp test nop mov sbb in (bad) mov dec mull push adc or arpl into dec push push mov sbb call cmpsl sub test mov sbb lock add popa (bad) ret aas call pop or adc sarb or mov adc jmp adc push cmp push ror xor js ja or jne hlt fnop clc sbb lahf lea dec testb mov daa mov mov fwait fwait fwait fwait stc push cmp cmp cmp orl sbb or test jge mov sbb cmp push add sbb inc jns xchg sub outsl cmp std add push into addr16 cmp mov int int add add mov xchg mov dec cmc inc mov add mov pop cmp cmp pop xchg and inc enter and push pop sub adc cmp or jne loopne push pop or jmp and jmp pop xchg sbb mov jne and aaa aaa mov pusha call mov cmp mov and cmpl je and add push and ret fs sbb popf lret mov sub and repz xchg sar pop test pop jmp daa mov daa pop hlt sub iret sub cltd loope dec and sub test sub cld je pop fwait scas and lds push popa pushf cs push or jle xor call addr16 cmp ret push notl clc call jne cmpl ds jg push add jnp aaa js dec push mov movsl stc jns mov cmpl pop out mov iret andl pop mov mov push add and adc nop add loopne xorl pop rcr je xor mov leave (bad) mov and mov mov mov mov push aaa cmp cmp mov mov add jecxz lret mov lahf push inc push in call sub and scas fs gs xchg ja repnz nop mov pop lcall inc xchg cmp stc out pop xchg cli in outsl leave mov pop icebp int mov xchg repz mov fcoms sbb mov out and jb lock pushf (bad) or push push test mov push popa leave inc sahf add aaa call inc loop dec xor pusha js mov stc sbb pop pop icebp sub fucom movsl repnz mov jmp adcb les hlt mov cwtl mov enter add cmpsl adc dec xchg and and out and fprem xchg jne out sub iret sahf mov pop jbe cs out sub (bad) sub idiv pop outsl jmp sub xchg xchg pop fistpll fs (bad) jmp out mov or mov xor jmp xchg sti cmp mov test test jmp lock movsl pop cmp lret pusha lret mov cmpsb jnp sti inc insb mov (bad) lods fwait push les adc scas pop mov add sbb mov or shll (bad) lock pushf aas scas iret call jle negl cmpsb push add mov nop (bad) pop rcr or jg xor xor xchg mov and jmp and xchg sub rorl xor or push mov int adc cmc push push mov jl xchg stc mov adc jp xlat mov or in dec call sbb hlt scas inc inc xor or cmp cmp push roll add (bad) ljmp mov adc push ja scas and (bad) les call add sbb (bad) (bad) or aam int3 repnz push mov inc mov scas add je test into sub adc jnp or pop jge mov (bad) in inc (bad) sbb jae adc add lahf psubw or repz notl or ss or push add cmp dec jne incl sbb arpl stos jnp adc mov sbb into mov fldt and sub inc push xor add cmp call sub jmp js in loope jne loop cld xchg js cld push lret js ljmp cmpb add mov in xchg js js adc movsl or sbb jg in leave xor call jne add fldl push in jns popa mov lret call adc jns ret push sub call cmp inc scas sub sti out mov push and or inc popl push es std adc cli iret insb cmp aad add fmull stos stos push jmp or add xchg imul ret or or lods decb adc imul popf add mov push dec outsl (bad) daa and ror inc push frstor test leave inc dec repnz ljmp and push scas push scas push scas xchg ret mov shlb enter bound lahf repz call push orl test xor arpl xchg subb sti inc mov movl xlat sub or test or jb adc fiaddl push mov cmp shlb or lahf dec mov xchg mov out jo adc mov mov cmp xchg fidivr leave sub (bad) aaa xor cmp jg in pop cmp push nop xchg lods (bad) lods mov aad jo (bad) jmp sub xor sbb adc or jl or fnstcw push push push rcll jp fstpl cmp pop cmp fsubl jl pop push stc insl out push and sbb xor scas les cld je inc mov mov fs adc str add sub aam xchg pop add arpl rol and pop pop mov xchg adc aaa cmp addr16 call push push out jmp imul or or push xchg jp (bad) adc pop xor scas sar jmp (bad) mulb push inc inc inc inc inc and push inc lret mov loop test mov cmp sahf cmpsl cmp mov sub inc inc xchg jmp arpl cltd dec xchg bound enter mov sub sbb dec les add sbb adc imul (bad) cmpsb mov cmpl or lods push lods fsubrs out push in jmp jmp inc push in out pop out insl out jb cmp bound movntq out or pushf sbb das push sub cmpsb cmp sbbl dec jb xchg push in in in pop leave dec (bad) in sahf cmpl add fwait pop push or xor inc jl out imul add (bad) or out jo lods sub cmpl movl xchg scas aas in stc in inc push in data16 jns lcall nop dec ds lcall inc add jmp xchg movsb int test dec pop pop insl or in dec push mov inc jecxz (bad) jecxz add (bad) cld adc dec adc jno mov mov stc out test les inc add dec mov mov jmp icebp push sbbb mov pop add add or les (bad) gs or adc dec xchg sbb (bad) xor mov and adc nop loope (bad) ret insl xchg push sub pop xor or add sbb pop jge mov inc cmp push das pop push sub enter pop fcomip mov push call lods inc sti jb add out pop cmp jmp cmp daa leave lcall hlt out adc sub imul lret fwait ja fcmovu mov inc pop pop pop (bad) dec adc test loopne lock repnz mov push inc sti mov push clc sar xchg add or out inc add adc inc jno and sub sahf out add jne cmp xchg mov push (bad) rorb mov mov adc push add sub xchg ss push push out fild inc xchg sbb pop fcoms adc addb and (bad) or sbb sbb pop nop inc mov popa cmp inc sahf sbb dec and jg or enter aam or cmp pushf pop push inc mov daa clc xor sub enter xor jb add imul jbe pop sahf sbb rorb add inc ss sbb std pop xchg shl sbb ficom faddl xchg push js push arpl ja jmp lret add lahf dec xchg or cwtl (bad) jne xchg push and pop or jns cld sbb mov sub mov insl or lahf push test pop xchg leave dec inc sbb in jmp imul inc cmp jne sub xor push xor mov sarl and sbb into fnstenv mov mov xchg mov hlt sbb xchg sbb sbb sbb mov aad shrb or push mov dec inc loopne xchg icebp fist cmp ds and sbb cmp xor lcall rclb and daa (bad) dec dec fcoms pop and in push push cmp sbb into aam xchg adc fmull test jle jl push je adc cmp xor prefetch lock push lret mov imul movsb addr16 test ds dec cmp adc nop in lods push mov mov cmpsb xor jbe sbb or mov enter (bad) push dec xor or sub sub mov jmp pop add lock (bad) or fisttpl pushf in jl push mov lods sub cmp jns mov orl jp pop xchg add dec xor dec mov sub sub mov sbbb mov orl adc leave and mov mov and call sbb std mov inc repnz outsb add or sbb test (bad) xor stc (bad) inc clc add test lcall sub jnp cmp lahf pop push or adc iret insb add cwtl mov repz daa mov or mov stos add cs and repz push push ret sub add out add test popa les xchg add adc out pop mov mov fidivrl cmpl adc adc out (bad) (bad) and in daa icebp inc sbb xor pop jo insb mov jne push add dec bound and push sbb data16 mov jne ret lcall or push xchg das sub push je (bad) je sub push enter add js xor lret inc inc inc adc (bad) sub pop sub enter (bad) xchg les ss ret stos in aad add lods cmpsl enter fldenv or nop movsl dec and jmp or bound clc dec cwtl dec push mov daa push push push movsl cmp push je int3 and movsl inc sbb insb add fnop cmp jle sarl cmp mov ss push dec xchg imul and in push push iret dec insb and cli xchg pop and mov mov push test ss aad sbb lret or push xchg bound cmpsl aad int3 dec push xor fwait stc mov pop xor jge adc and fidivrl sbb adc lahf dec out jne fbld push mov mov imul push adc popa imul pop hlt jns pop cmp push xchg jo lret jo mov (bad) cmpl int and icebp cmp leave in cmp jecxz mov pushf out pop lret pushf dec nop aad push mov les call jb dec xchg jne xchg cmp jns add nop (bad) (bad) cltd adc push sub pushf jl outsl imul call mov nop jbe fwait gs adc add jge jle cltd mov or mov and repnz rolb push fs pusha (bad) push and or jmp mov shrl mov test mov leave stos sbb idiv inc jb or int3 kmovw lret and js cmp sub lret jns shlb or push enter shr sbb inc rcrb jle fs pop and fucomp pop and mov pop fs call adc scas mov pop xchg outsb lcall mov xchg test aas ss mov jno pop push and mov sbb cltd and jmp push repnz cmp adc sbb cltd aam xor cmp sbb cs stc imul daa pcmpgtb pushf data16 and mov lods out mov clc sbb lahf dec sbb into fs xchg sbbl jo cld sbb jns sbb dec in xor jno inc shll adc mov into (bad) shlb test and pop in clc and rcrb fwait jp ljmp jae adc or push outsl xchg shrb dec xchg push mov xor sarb cmp jmp flds flds les pop adc push xor xor mov out aad jae xor nop inc in (bad) lea imulb fcmovb inc out push ja jge sbb stos aaa sbb mov xchg inc push in mov xchg lods jb (bad) repnz les jge or call jmp pop xchg (bad) adc sub call sbb or fwait ret pusha idivb fwait inc push ret push nop aam fwait push jbe repnz mov mov pop pop (bad) lcall aas lahf adc pop stc adc adc lret xor insb fbld mov inc lcall push outsl dec cmp adc pop enter push call xchg sbb inc pushl jb in inc add and and add in inc dec repnz sbb inc add jge insl mov adc mov ret mov mov push idivb push js sub push je mov or je shll roll add jo cmp ret lods repz and adc dec inc adc test (bad) (bad) call aaa (bad) lret aam loopne leave jmp lret call cmp mov mov sub sub stc call mov inc gs jns jnp inc push xchg xor sahf or cmpsl repnz fsubs nop scas or adcl dec adcl adc jb sbb mov dec enter adc push sbb add inc pop jae or enter sbbb xor sarl fadd or inc int3 mov inc cmp inc sbb pop add (bad) (bad) ljmp xor push dec inc pop jnp inc inc cmp xor sub sub in mov or xor aaa sub xor inc aaa inc jge dec outsb jo mov arpl ja and mov sub jne cmp add mov cltd insl iret mov adc sub insl add or sbb xor sti out and je mov and outsl mov daa jne movl call pop push lock inc aaa mov cs js cmp xor xor pop lcall xor in inc pop xchg addr16 inc ss test in and jge jae sbb movl push (bad) sti (bad) add imul sub adc call and sbb jge jae lock lahf adc push add pop rep or and and jle movsl xorb push and xchg jb test pusha outsb sbb or loope push sbb les adc pop addr16 xchg inc jl out adc or imul pop jg aas add cmp adc in sbb movsb sahf xchg ret (bad) add xchg dec popa mov add pop jbe xor lea fidivrl cmp call clc inc rclb ljmp add mov jl testb mov jne cmpsl std or or and adc push lods adc sub or push jae decb xor mov xor mov inc inc popf xor lock insl aam test imul mov mov hlt add mov (bad) jo movsl sub out push adc cmp add pop outsl sub pop fist (bad) jge ss hlt jmp and push (bad) xor rolb lods xor ljmp clc and push adc push clc scas adc jae enter mov or int loopne mov add enter jb or or cltd dec je inc arpl sbb push dec sbb out sub cld push movsb and xor lock cs push (bad) or sbb shrb insl mov enter and inc mov add sbb or mov adc insl and test inc ret add and mov mov lods sbb pop xor push in push inc push xor jo inc mov cmp or mov xchg int3 push inc and sbb pop and sbb adc mov adc nop fimull sbb adc adc pusha or inc mov and inc mov push je lds call movsl scas fwait pop pusha sbb xchg adc mov sub add jge cld jo and adc movl sbb dec mov xchg adc xchg addl xchg add bound sub sbb adc push or sub imul scas sub sbb (bad) mov stos mov add adc pop jge xchg stos ss sbb and xchg sbb mov sub or int3 out and mov fistpl xor dec shll xor pop and xchg scas es mov or cltd inc adc adc pop das sbb or mov dec xchg (bad) sbb or or jg fmuls nop lds fs sbb (bad) mov adc lods incb or add repnz adc call xor subl push adc add stos adc (bad) (bad) jno pop adc dec push ret fimull movsb lods mov fwait pop pop fs adc aad dec mov gs sbb jbe loope or out dec mov in stos fwait aas and fadds imul jb pop pop dec adc bound jb sub sbb sti in fadd es in fistpl lret aas xchg xchg or sarl mov sbbl add pusha imul sbb insb add add sub mov adc pusha jne or add fidivl (bad) pop adc loopne dec add and mov xor lods in pop adc pop insl mov das and and or adc jbe inc inc pusha cmp or push add mov dec or adc mov push icebp out fadds ret jecxz inc adc ss fcompl sub xchg imul push and push insb xor mov gs in arpl mov push add pop inc shrl aad push inc push and cmc sbb inc and in pop adc mov negb cmp dec data16 adc xchg mov add dec mov out mov or or shrl or cmpsl cmpsl ret sbb and (bad) in sub es sbb xor cmpsl or mov popa adc nop dec adc and pushf (bad) aad xchg (bad) xchg (bad) outsl and and (bad) imul jb enter inc cmp in sti xor dec push and and dec push leave jmp in jecxz jecxz in push (bad) movsl inc jb mov outsl leave and jecxz inc jb enter daa arpl and add mov loop and bound ljmp and cmp xchg loop and xlat jae jne outsb sub adc jmp nop or iret enter mov xchg mov pop mov cwtl mov loopne sbb aaa rorl aas cmp adc or stos jge leave in in sbb lods add inc mov mov adc xchg add pop adc xor and and sbb mov movsl sbb dec sub xor add sbb nop stos add mov add xlat lods adc add sbb dec (bad) loope sbb das mov dec pop or data16 adc sub or adc leave add fidivr cmp xchg push xchg ja cmp cmp sbb or cmp aaa mov daa aas pop sub in testb pop adc mov pop ret sub jmp rcl xchg adc sub mov xchg xchg or stc push (bad) bound inc aas xor aas and mov add dec sbb adc neg nop nop jle movsb xchg lret or cmp rcr or outsl jl mov in jmp or sub adc sbb push sub add lods sti cli cmp inc test add dec movsl push or pusha sbb test dec and xchg dec movsl inc sub xor movsl push test sbb dec je jo insb dec movsl repnz cld stc push sub dec aam xchg dec movsl pop lret push movsl push test dec push sub inc mov test mov adc adc movsl push jmp fs push dec movsl push jo js jl test add clc mov jl es dec push test rcr push test mov movsl mov test sahf movsl push test mov dec mov dec movsl push test test mov dec movsl push cwtl cmp sub mov xchg out push dec adc out sbb push test and sub xor stos cmp jmp adc xor push sub push xchg dec movsl push push push test adc xchg dec movsl or or mov test cld mov sub hlt cli adc push jns lock out push sub loopne dec movsl push enter mov test shlb int3 xchg enter push test mov outsb mov movsl push test test cmp xor sub sbb sub sub and stc dec popf mov sbb loope nop pop mov xchg sarl lds scas mov movsb mov test mov andb xchg mov pop lea movsl push jmp jb push mov push insb inc movsl push test (bad) jmp pop hlt aam test cmp sbb int3 aad mov int3 fadds jbe push test bound popf dec call pop dec scas rclb in lock cmp adc clc and sbb mov add or cmp cld arpl adc xchg dec movsl call xchg movsl push test cmp cmp cmp inc dec movsl push test sbb xchg or pop mov stc sbb lods push repz mov mov dec movsl sbb push aad pop jno rclb in mov pop pop sahf in xchg fptan in loopne fdivl fdivs int3 mov pop pop pop enter (bad) mov mov pop pop pop fs mov mov mov enter mov mov mov in pop xorb outsb nop orl test and mov repnz push test (bad) lods lock sub fdivrl sarb xchg mov xchg push call in xchg iret inc push jb add or sbb sub sub and sub and dec movsl rcrb xchg sbb mov push xchg mov ja and sub fmul dec gs lock xor xchg xor cmp mov sub xchg xchg lret jo insb push push cmp pop dec in jb push push push sub dec addr16 dec movsl push mov inc push cs lret aaa js dec movsl jb daa mov sub test push pop idiv test xchg mov in (bad) nop xchg mov push mov cwtl pushf cs lret pushf mov test test sub push lods dec in test mov mov daa mov rclb xchg add mov nop or xchg popa popf test repnz xorl aaa fsts dec sub adc je push les and xorl mov enter and imul add je and adc or push jne adc xor add add xlat sarb aaa pusha push in push cs push repnz in cwtl mov xchg xchg pop push fs push jecxz testb insb push adc call adc insb rcll or adc cmpsl out push and or and fimull scas in jl jg adc add xor imul sub clc dec mov cltd push or add stc jg push daa movsl fildl pop pop push ja adc in xorb (bad) insb repnz (bad) jb and repnz insl enter stos sub adc adc (bad) xchg sub js xor mov adc es inc jl pop lods push inc or and and mov test stc add xor test lea je cmp je adc test sbb inc and mov je bnd call dec pop nop xor add xchg insb adc push sbb fsubr es add add xor (bad) sbb or add fsubs push adc addl divl mov mov push clc sbb sbb pop ds adc pushf mov xlat adc ds or (bad) outsb jmp sbb jne stc pop fnstsw xor push test xor lea jno mov daa call adc (bad) in sti mov scas add add xor xchg outsl out sbb mov sets push lret ret test and cmp mov lods call rol fisttpll popf in sbb push pop jle pop pop rorl mov or lret movb leave mov inc pop sbb cmpsb subl or sub cmp sub (bad) sub call and add inc lods mov pushf mov sbb test or mov sbb push fcoms std cmpsb pop xchg mov xor or sbb icebp or inc call call jne push clc and and mov cmp addb mov xor aam push fiadd dec cmp sbb call bound or sub and xchg pop outsl adc ror inc jecxz fisttp jne dec orl (bad) xlat xor fld dec movsl insb jge ret dec cmp in (bad) push and dec aaa cmp dec imul mov (bad) into push push les xchg rorb int push push add adc or adc cmp cmp adc lahf lret je cmp movsl dec (bad) jb sub idivb sub lods js jmp pop scas lret jo je add mov pusha xor lret xchg and pop push stos mov es mov sbb cmp add add outsb lret pop cmp loop adc add pusha daa jl dec jl sbb iret scas clc in test and sar call (bad) xchg stc mov sbb adc in or add in mov fs mov inc out iret arpl mov jns jge dec inc adc mov and jle leave and push inc and dec sbb loope add adc mov leave clc ret xchg xchg add cmpsb ds ds mov dec mov stos xor fistp push mov add mov in fsubl outsl stos jg add jae adc sbbb cmp dec les aam or sub test xor add add les or aam clc add fsubr push adc mov cmp (bad) mov cwtl movsl push popa loopne pop push cmp loop adc sbbl (bad) cmpsl ljmp xchg pop andb call cmpsb or into or fsubrl inc jle,pn punpckhbw jle push or fcoms pushf jle xchg push push and in xor nop cmpsb dec arpl push sbb add push pop mov out adc or cmpsl or int3 cmp sbb adc cmp xlat push inc je negb adc sbb jecxz cmp mov pop mov leave mov stos sarl ds in int3 out repnz shlb into in inc cltd daa dec popa sbb jbe xor fsubr popf jecxz add cs call or push pop xchg mov aas jg pushf in mov jl aas mov sub add stos xor cli shrb and loop leave and mov setbe inc fisub mov loope mov jb push xchg jns adc lds xchg push mov cmp mov push sahf dec fistpl pop cltd mov dec loope shll movsl repz or scas mov mov xor add cli xor push daa or insb push shll xchg mov xor shll adc inc fidivrl movl test xchg ret hlt loopne mov std fmull ljmp icebp pusha addr16 jg pop cmp ret jmp push mov imul push push pop call or fstl mov mov push rclb mov and cmp loopne dec lods or adc sbb adc mov inc insb cld jo dec and cmp or pushf cmp cmp xor test cmp fs insl and (bad) jne mov sbb es out inc sbb cmpxchg adc or ljmp xchg push cmp cmp dec push cmpsb stc sub adc mov sub xor adc test mov sbb mov mov push rolb fdivrl popa pop call je sti mov gs scas push dec mov (bad) sub or fnstcw call adc adc inc jmp (bad) scas and ljmp andl inc dec adc sbb adc or rcll sbb cmp push inc rorl dec loopne (bad) movsl scas xchg outsl nop ficomp cmp or push pop lea jne lds decl mov cltd pop jns inc add adc ret push adc push in sbb jg inc jle cmp add daa sbb stc adc mov pop jo je pop inc out cli mov lock xor mov mov les int dec fcoms pushf add mov cmp push pushf fidiv scas repz jbe in sbb xchg call fdivl push test rolb daa cld inc mov scas pushl pushl dec ret inc dec pop ret shl loop ss mov rcr adcb insb jl add icebp sbb push fs inc dec cmpsb mov pushl lcall and and mov mov add sub fs arpl push adc cwtl push adc ret jmp test fs call mov int stc jmp shll (bad) and sbb addr16 and mov leave or shr mov or add add mov pop or jecxz sahf push cmp and cmp cli lret leave arpl pop cmp hlt push adc mov mov lahf sbb iret lret ret sub push inc xor sbb fst sub xchg dec mov test stc and or loop or sbb stos dec inc shl mov push data16 arpl call and pop sbb aam mov mov inc jge push and cmp xor enter or mov sbb jo ret mov sub xor out je pop inc mov push shlb inc xlat lret rolb sub sarl addl imul decb xchg rcrl adc sarb arpl adc call pop lea pop rcr xor mov or dec jo dec push aas je dec call inc testb je pop xor sbb adc fwait pop jp cmp jo push clc xchg and or scas rcrl (bad) push stc out loope add sub or xlat push ret cmp mov sub adc ss and mull add imulb xor lds adc adc movb nop jnp xchg jp xchg (bad) incb sarb (bad) jne pusha orb push lods je jmp lds push (bad) fwait sbb out sub repnz in push out mov cmp add repnz dec enter add xchg xor cs test sbb and ror pop inc sbb es push dec shl int3 test js push addr16 inc push sbb sbb insl adc push inc cld push movsb cmp shlb xchg sub jo mov mov clc pop cmpsb int3 and xor jle rorb call adc sub jbe pop sbb ds mov mov cli call sar jbe adc dec loop inc fnstsw popf push inc in xchg push enter dec jl jmp inc dec fstps inc ret xor ret je dec ss push push adc xor inc rolb push mov dec cmp je ret pop xor adc jne loope test div xchg or mov test jns xor lea mov inc adc lock mov inc mov orb xchg imul and popf jb mov (bad) mov xchg lds dec mov (bad) jae pop dec and (bad) cmp inc or mov cmp and cmp add add adc add or mov adc fwait or sub pop push lods add mov cld sbb push adc (bad) mov (bad) les mov sub inc cmp pushf push add xchg or xchg lods xchg mov jg rol out fidivrl or add inc or rcll push addb cmp dec or lock push inc sub lock jecxz and call cwtl xchg dec sub mov mov or mov add fistl xor add push rcrb sub orb xchg sarl xchg test xor add pop jecxz add or sbb and leave cmpsb inc dec mov fs ret dec cmp js dec add sbb mov jmp and rolb push imul xchg out pop add imul roll lock rclb outsl in cmpb insl ret pop cld movsb (bad) in and cmp add add insb or call mov outsl cmpsb dec fwait nop ret mov rcll mov clc jne stc popa mov push das jns and (bad) enter add xchg pop cs adc inc test fisttpl xchg ret push adc dec inc mov add enter sahf ret subl into aaa shr (bad) jo testl stc ja add add imul push mov inc jno orl lea call xchg cmp mov inc jnp jnp mov adc and xor add mov sbb (bad) xor push popf inc add loop jne jne push jns in (bad) mov mov xorl pushf jnp add push mov or xchg decb leave mov mov inc or pop movsl pop outsb sbb sub pop lds (bad) xor sub xor sbbb cwtl jns dec aaa and add cwtl mov sbb mov mov adc movsb in adc mov add adc insl mov pushf dec outsb pop and sub enter notl sub inc test dec into dec adc (bad) daa push mov or jge cmpsb pop jns add insl add sarl push xor add mov int3 jp add add jo jge push outsb lahf out pop daa sbb push push push scas jo dec fdivp xor pop pop push cmovo clc (bad) pop pop daa mov das jns add dec cli in out and aaa outsb pop clc lea xchg xorb lods mov sub and xchg or test mov push xchg (bad) cli add in (bad) in clc pop push jg push mov cltd les sub stc je mov in sbb sub or xor push sbbl push dec or add outsl xchg jb jl and mov jg test xor push sbb lds outsl push sbb mov adc jnp into arpl popa adc mov fldenv and repz mov jecxz mov hlt lods xor hlt je lret adc jae mov inc inc clc scas or sbb inc mov cmp pop fld mov dec push cmp frstor cmp mov xor mov push add enter sub and stc das dec push xchg shlb aad adc jle stc test sahf and flds fs pop add (bad) in push scas (bad) pop or mov sub cmp jo adc adc pop pop mov dec dec (bad) (bad) xchg xchg pusha mov stc fstl xor mov sub mov inc inc (bad) adc nop mov popa inc pop push adc or fisttp inc (bad) ss cli and fbstp daa ss xor in jmp mov mov cmc pop shlb test pop cmpsb bound stos repz or adc xchg cs (bad) (bad) sti jl (bad) dec adc dec sbb cs mov iret or sub popl and pop xchg rcl mov mov add adc aaa mov adc mov sbb loopne mov inc rolb rolb xor add (bad) ds sub sbb lods mov dec adc jb xchg pop or popa xor scas adc stc or xor xor push mov or (bad) cmpl out adcl mov inc mov jmp cmp data16 jno mov lcall cltd cmp les jge add icebp xchg shlb insb loopne sub cmp push add and call sbb bound (bad) pop lock inc arpl inc dec add fs scas adc xchg shlb cmp pusha cwtl jl jl add out xor outsb popf adc clc popa mov push addl or hlt loopne enter push adc or call inc push jno jae dec sub scas push push inc jg add ds adc repz test stos push bound or push pusha inc or or (bad) xor or inc daa add pop loopne sbb push adc xchg add mov inc adc sub inc mov jno mov adc jo clc and sub inc (bad) test xor mov adc int3 in adc shrb xchg in lock in adc rcll movsb dec int pop mov ja aam xor cmpsb or fcompl dec nop mov jno push cmc and sub popa adc mov and orl xchg fadds fsubrs push std in and pop pusha loopne je (bad) jo data16 fdiv call inc fdivs aad xlat push and dec cmp mov rorb jo pop dec and jge jb mov sub pop stc push scas dec mov xchg inc or notl (bad) fdivrs inc (bad) fsubs mov mov lock pop rcl loope xchg or jnp in add cld xchg dec es add clc rclb adc dec push cltd movsb call push pusha mov and sub pop jb fdivr inc adc movsl imul or push sbb ss shrl and shr dec and cmpsb aam in adc xor jae and jle xchg push in fwait test es mov sbb adc jne mov add mov ja data16 or inc mov js jp push test add test mov push add pop rclb pop dec test addl aas rorb les xor daa adc daa insl insl cs fist dec popa das dec or mov or add and test ja push sbb xorl stos sbb sub push mov sub xor dec repz adc or and pushf inc jp push and sub imul insb adc enter jl icebp adc mov pop pop adc sbb push daa push scas cli aas adc push pop jmp in cltd mov xor (bad) (bad) jmp (bad) fs or cmp fs sub imul fnstenv xor jnp jbe mov adc hlt mov test and jns mov das adc scas arpl sbb xchg mov nop mov psubsb adc inc jnp enter jo xor pop jnp aaa inc test icebp sbbl xchg ret lcall sbb je inc pop rcr inc adc add repnz dec sbb inc arpl sti add adc adc or ret inc ret mov adc xor or adc adcb push pushf jns mov int3 hlt cs imul adc aaa inc xchg mov cmc shrb jno (bad) or outsb mov pop cli cwtl test adc xor pop and or xchg add xor inc add (bad) out in pusha sti ja and mov lock push pop shlb aas dec jo sarb and je sarl ss mov jmp dec hlt cmpsb hlt (bad) push dec jne mov js xchg mov in stc inc in pop pop xor inc addb xorb cmp xor jae or pop cltd into xchg cs mov mov jo xchg mov sbb inc in lret leave shlb sbb xor jecxz scas xor add jl cmp cmpl xor shlb sub add aad or repz add cmpsb jo ja xor dec loopne scas fbld pop loopne popa adc dec jecxz xchg xor mov and js enter xor dec xchg sbb (bad) and sub adc icebp adc xchg or or mov adc adc sub xor imul inc add test test xor lea push or push stc xchg jmp mov jne je sbb mov push gs addr16 pop lcall push push sub push (bad) xchg xchg jge dec or jo push cmpsb push sbb mov iret decl aad outsb mov inc or dec das push adc jno lret jo ret cwtl mov adc inc cmp adc fistl jl add inc (bad) sbb lcall lods (bad) pand sbbl and cmp push nop outsb xchg dec jne push call mov pop movsb mov jb dec vmwrite xchg cli cmpl dec sub xor out inc sar mov call pop sub add insl out sbb ss test gs stos sbb add jns add cld pop sbb pushl orb es pop fcomp adc push xor or mov and mov stc roll outsl ror mov xchg (bad) and push ja cmpsl in movb adc dec dec enter or and sub adc jmp xlat (bad) hlt xor add jg (bad) mov sahf or and popa add gs mov fisttpll add icebp sbb and bound pusha add cmp xor inc insb sub (bad) pop xlat adc pop aad mov pop sub and int3 stos dec jnp cmp insb (bad) or push dec cmp pusha mov adc or fs mov stc pop pushf mov stos ficoml outsb mov inc push fcoml and push loope mov add mov shr xor and mov insl sbb cmpb loope (bad) out mov fldcw mov gs call (bad) mov xor adc aad add sbb (bad) lret sbb sbb push jmp lea xor inc push insb push or push add mov adc lahf pop dec sub pop or lahf mov adc pop jb inc push jg or sbb inc scas xor mov imul scas dec dec lret or pop xor loop popa add push cmpsl or add shrb outsl adc xor push test je lock pop pop adc sub or jl aad dec inc sub je jne lds dec cwtl outsl mov ret push jns add add movsl or inc in rorb pop (bad) and xchg sub inc or adc or insl sub mov sbb mov sti or jne or ret add rclb pushf xor push ljmp mov jg clc in int3 pop outsb mov inc in call jno ds out jge call in fmulp add cmp call jns movsl mov rcrl insl lock or int3 add add rcl (bad) push mov sub movntps les popf and push fdivr xchg adc pusha and inc mov cwtl add daa stc mov xor shlb adc nop orl inc add mov push add (bad) or daa stc inc inc mov and les je in cmp add add ja push inc cmp cs out and and inc notl jo push add daa xor xor xor lea lea and xchg pop and js fbstp and dec mov jo addb (bad) dec or and and dec ss cli repz ror (bad) and pop push sub out les sti add fcoml ds inc dec jge add fcompl sbb scas je mov add dec mov xchg pushf inc sub xor mov inc jb or scas mov in add rorl dec or adcb xchg enter cmp nop outsl add xor clc or daa add je and add fs cltd test sbbl mov call movsb mov pop cmp push xor inc bound mov add xchg pushf sbb and push add adcl xor sbb inc mov push mov adc mov mov stos dec in and jb sbb addl and iret xchg push sub jno dec push jle push cs adc push xchg pop cmpsb aam mov push sahf mov mov and (bad) dec sub adc xchg adc stos lock mov lods leave add cmp mov pop and mov int3 mov mov mov gs or ret add aam push mov inc sbb add sub inc rol adc or sbb test rcl fmuls je fdivl int inc cmp sbb in cmp inc mov adc push cmp call add outsb cwtl lcall mov stos stc ljmp jne push and push pop in push (bad) sub fwait scas dec mov sbb ljmp add jmp ret sbb and bound sbb jle add idiv or jge loope xor sub jge addl cs xor flds jo leave push add stc sarb stc push data16 lret xchg movsl stc (bad) stos stc dec in push je add ja sub mov adc jo test xor add inc loope mov adc and or cmp arpl sub imul sbb xor pop pushf jmp pop add adc dec (bad) xlat stos cltd pop mov aaa ret (bad) xor cwtl (bad) cmp add out loopne cs dec mov xor xor push cltd jl pop pminub imul mov dec pusha jmp xchg (bad) call fsubrs sti mov sbb or cmp lcall mov aas movsb inc sbb adc push or adc inc dec jne les jmp and xchg jl nop cli iret mov adc cmp jg inc and cwtl push pushf push inc add push push imul jbe pop repnz ret andb sub arpl xor or jmp outsl xchg cli adc dec jl cmp jle loope or cmp loopne dec out mov cli stos sbb (bad) cmp pop mov sbb dec js pusha jl icebp or roll hlt mov lret insb int imul mov nop push cltd daa or and addl and pop fistp mov push ljmp fcoml push mov and imul clc mov cmp and dec mov (bad) xlat rorl nop inc das jb inc sbb aas je xor xor aaa ds clc fbld and pop mov sbb je dec push adc jo insl loopne movsb inc pop mov xlat pop push repz or or cmp add xchg fsubs loop adc ja cmp ret outsb (bad) gs test cmpl sub xor popa fs sarl push mov add ss mov xchg loope test cmpsb mov orb test cmp fwait test (bad) lret callw orb push cmpl test jmp call mov sahf (bad) push adc add dec fildl cltd or push insb pop enter or cmc rolb xchg push xor mov out data16 adc mov ret fucomi in pop dec out movl add push jle ret push sub mov jg cwtl jae push and mov push push mov std cli mov ret jge xor inc pusha rcrb cmpl pop mov (bad) mov cmovb or push out fildll (bad) and leave ja or and andl and movsb pop pop int push decl sub in movsb sbb jl add mov pop fsubrl int fcoms pop push repnz (bad) (bad) incl and mov xor fiadd mov add fwait sahf (bad) shll pop jmp call pop cmp jl pop jl xchg lea sbb push or inc les lret into fsubl mov xchg and xlat addl sbb mov dec loop mov mov rorl sbb arpl mov sbb push andb cwtl or push sub sbb out inc push (bad) push imul jge mov fidivr push adc mov movsb mov inc (bad) jo pop repnz call loopne call and aas cmpsb jge je cld jnp and loopne add mov imul pusha dec jne pop xlat push enter mov cld push movsb pop mov dec in cmp xor in test jb (bad) loope sbbl push adc aas stc js mov daa insb cmp jae push jo jge jge add cmpb add lods xchg mov inc mov jl dec dec loopne mov leave add decl fsub pop test and jge mov pop push mov lods scas loopne sbb jmp shll lea (bad) adc mov push idivb sbb xchg fwait lods push sbb dec inc es loopne mov pop imul arpl mov shl dec inc lret test add sbb insb gs inc pop lods mov mov scas in sbb stc mov pop sbb cli hlt clc adc (bad) mov mov adc data16 xchg lods pop or (bad) jno sbb pop add std rcll lret std shl mov in inc jmp loope add and loope ss icebp ds add fstpt xor xor fdivr or aaa or gs pushf mov lret pop cmp es cs push push add in push adc mov adcl sbbl xchg cmp push adc aad inc pop enter mov nop dec pop repnz push aas jo xchg js xor rcll (bad) out insl xchg hlt jl pop dec cld or push cmp clc lret add inc cmp mov mov mov sbb fidivr mov xchg adc add mov movb push in mov add or mov leave gs jo mov (bad) mov and (bad) ss (bad) fsubs bndstx adc mov pop test cli mov xchg or add pop aaa and lods push sbb movsb test push add (bad) out andl add mov insb xchg test add dec mov inc test je sbb dec add jns push jmp sti inc sub scas add xchg jns pop cli dec lcall jne lret test and out jae adc stc push xchg push lock add in cmpsb jbe jns (bad) aam sub push imul jne cmp popa pop clc andl fs sbb ret sbb out dec jp mov cmp inc ret insl (bad) jmp ret or jne add stc js nop jo mov jne xor roll mov popf pusha rorb test enter lret (bad) xchg lock outsb or rolb jl test dec adc adc call add xor clc jmp aad dec cmp push (bad) scas and divb incl loope test pop in leave push mov sub clc stc pop aam ret adc cli dec mov sbb test lcall mov enter lcall (bad) lock jg xlat cmpsl and cmp and mov add je lock dec lods divb call ds cmpsl hlt xor aam add cmpsb popf rcrb mov jnp xchg inc pop out push inc jbe inc scas jae or and popa (bad) std imul or add insb setg js sbb or jbe frstor mov ja in test sbb pusha sbb adc or sbb repnz add adc lock pushf inc add xchg cltd out jae ror test (bad) mov sub push cld lea pop jae jae mov cmp out mov js add lcall lret insl (bad) imul fs cmp xchg add and call outsl cmpsb mov or sahf dec leave es in jb es loope push pushf lret cwtl lret add cli popf loopne clc mov push sarb fmuls inc popf add stos adc inc jmp fmuls call outsb push outsb lret repnz stc cmc stc and xor dec rorb dec push fcmovb sbb jne clc in inc lods adc xor test dec sbb nop jo sub test mov arpl add jmp in and push hlt cmp aaa inc dec or mov or outsb mulb inc cmp add sub xor and movntps cmpsl mov clc add jb cmp cmpb inc cmp call sbb (bad) mov push lcall sbb mov dec sbb adc jl mov adc pop or adc aaa and add jmp mov mov (bad) repnz sub inc cmpsb sub inc or push scas int3 jb jmp cld mov mov xor xchg stc cmp sbb test inc into or loope jno xchg mov in fadds xor call jne int3 dec push push xorb (bad) and test mov movsb dec jae sub (bad) repnz loop js jns xor fadd adc pop and out mulb xchg adcb lcall rol dec inc sbb enter xor sbb loop jmp mov lahf adc pop xor pop adc inc je loop nop mov sbb dec les xlat test or sub xchg jecxz and xor or ret icebp jmp push cwtl (bad) lock std add jg cmp into (bad) pop faddp test in dec xchg stc call jl fstl cli lcall jmp mov jbe (bad) outsl pusha sub fdiv cwtl pop xchg cmovl push cs aad adc pop and push add mov call mov nop jae cli cmp jmp xchg loope out or adc xor lea mov je aaa jge (bad) bound inc data16 and pop cmp and mov or xor pop xchg cld push xchg xchg stos out call add repnz dec xor adc nop mov sarl hlt js cmc mov sbb clc add loopne,pt and sub in lahf add sub je rolb cld ror sub jae repnz ss cmp cli test hlt mov clc imul in mov add call push mov clc flds mov xor loop ja dec in jnp scas jnp inc mov cwtl push sub popf dec add pop je in sub mov jmp call mov adc inc xor call adc das lret dec out push leave test dec (bad) in xchg jns (bad) xchg scas xlat pop sub cld in call pushf lea pop leave scas dec repnz dec daa and loopne decl mov add jmp js cwtl (bad) add aas (bad) add leave imul cli adc lea adcl out inc inc jmp add ret fs xor addb or into adc mov jb jg sbb repnz push xor je and addr16 sbbl (bad) mov pop inc leave or jb scas pusha gs push loopne jmp push adc (bad) and ret adc ss push push dec add mov push jne fisub popa mov data16 dec add sub adc cmp push js xlat hlt and scas and incl sarb add loop outsb xchg loope and jle dec push mov pusha add (bad) sbb les in jmp rorb lcall cmpl flds push dec xor and jo sbb push and popa adc (bad) pop sbbb fisttpl xchg push xchg add fldl2e or test pushf jmp hlt xor cmp arpl bound out sub pop add and sbb pop inc lock sbb icebp push cmp jmp push dec data16 sub dec cmpsl rcl xchg or pop dec add aad push rcl push pop and dec lret js sbb xlat aaa dec push imul mov jp gs push push sbb fnsave cmp in ja and push ds addr16 sub lock or xor hlt pop gs dec fimull es push lret test xor dec scas push fs or rcrb push push aam ficomp and dec sbb pusha dec dec loop add sub scas sahf std and and or add pop jne adc xchg sarl adc movsb and push test inc push leave ret lods in or lcall movsl andps mov add cmp xchg imul adc mov or insb popa fs imul add mov subb jno xor mov push out cmc jne stos push pop jne pop or xchg mov (bad) sbb aam je stc or lcall pop pop sbb imul push movsb scas push mov int3 (bad) ficomp jns or sub pop inc xchg addl push nop popf push and push push mov dec add or adc pop or imul rol in dec fmull xchg cmpsl rcll inc push arpl jo and (bad) sub nop xor push repnz sbb mov (bad) test add mov shrb push and dec cmc call jl cmp adc jl mov pop mov scas sbb sub out push or in sub or adc add mov mov ret fisttp addr16 inc outsb aas jne cmp sub aas inc adc mov pushf push sahf jo inc sbb dec popf lods sti sbb ffree lds xor ret push ljmp fstpt ljmp nop mov arpl xchg adc jbe pop pop inc test es or push cli jo cld and hlt xchg push mov adc mov mov iret add js outsl out call mov call pop les adc or (bad) ja dec and mov adc sub push jns movb or sbb mov inc lds dec popa jmp adc or shr xlat or mov aas je push nop adc push enter jne call sub adc hlt inc pop adc fcompl shrb cmp sbbb rcll or adc in inc mov cmc and push arpl ret dec add ja shrl add iret ror jmp lret (bad) xchg or adc outsb imul pop enter mov pushl push dec (bad) pop (bad) mov ret adc inc or iret test adc je push add addl and cmp fs fimul lds push xor adc rorl into sbb orl mov cmp jl ja call rcll pop adc adc xchg adc lcall nop push dec fwait mov or test gs jl rorb ret ja or xchg mov lret inc mov adc jg ss push fisttpl call xlat cmp rorb mov addl into enter call flds mov nop out cmp pop or cmpsb outsb rclb mov stos pop loopne pop xor addr16 jo ret stc pop dec dec dec movlhps call dec push push faddl inc sub or into or dec add xchg jae inc or or sub mov pusha outsl dec leave or push nop pop pop (bad) ret int3 add dec or fwait or movsb int3 xchg gs xchg adcl notl mov xchg or outsb sub je cmpsb movsb subb cmp mov je out pop add push push push xchg dec movsb (bad) icebp aas lea jmp mov inc push ja sbb pop push xor sbb hlt outsl adc jne cld cmp adc xchg sub dec repnz adc repnz stos (bad) xor dec add xchg sbb call test lcall and jg mov daa leave push jg je dec je add fs or or add js push sbbb pop cli pop cmp insl cwtl push and mov sbb mov pop test add xchg mulb mov ja xor lcall cli imul sbb mov daa ja loopne and adc mov dec jnp jmp fstl negb dec dec sahf cmp add fdivl sub add fildl imul inc or cmpsb imul inc je subb out mov add sbb mov mov shrb out cmp loopne mov mov je jb ds lcall or stos mov jo adcb jnp lahf pushf cltd adc pop insb pop jns mov jmp mov xchg rorl pop mov sub adc add imul or jne jmp dec pop jmp jno ss xor xchg mov lods rcrb imul push inc jecxz cmp or push ss xor push pushf push cmpsl insl clc test int3 (bad) (bad) int push cs mov int3 pop testb outsl mov (bad) pop pop lods nopl sbb fnstsw aas pop xchg psadbw xlat fbstp movsb pop xchg rcl lcall xchg mov (bad) push mov mov shrb lret and jl aas mov mov call mov cs add and mov mov xchg imul and push jp or mov outsb xor pop mov mov imul push repnz push clc dec in lods push inc (bad) lret or fxrstor push pop pusha jge push adc sub xor iret fmuls cmc xor mov dec pop outsl inc sbb xor sti data16 push mov out inc push sbb popf in mov test push cmp dec pop adc test mov test push andl push call and adc and jmp mov jae jno ds mov pop and test push (bad) decl cwtl icebp orb clc pop jns add xor or inc cs adc jns,pn inc fisubrl fs xchg dec mov jbe push jae mov (bad) shr shr add mov loope dec mov cs add jle js and cmp or adc and repnz call bnd mov add hlt dec test (bad) pop or dec ret push sbb ficomp mov push jp je movsl (bad) xor shll test and adc adc scas clc (bad) hlt clc xor xchg xchg rorb repz cmp (bad) and lcall mov push mov (bad) or loopne addb lock xor pop xor xchg cmpsl or in pop or ror mov iret dec fs bound in mov and notl adc in and cmp push push dec pop sbb or (bad) xor fstps push dec shr push or push sbb and and iret mov push das jmp add mov xchg ss and mov gs push mov or mov out aam sbb cmpsb jbe add insl add (bad) js cmp fwait dec sbb out outsl sbb cmp fidiv leave outsl ss push jo mov ja adc int3 clc pop sbbb xchg fldenv cs ja inc dec xacquire pop lcall les (bad) je and xchg ss or in cmp pop push mov daa inc fwait inc ljmp in clc fisttpl dec add and xchg pop into jle in adc iret insb cld jmp add inc inc hlt xor pop lea ss mov sub cmp and js fnsave sbb dec sbb sub clc push call call cmpsb sbb imul push hlt cmp mov lods pop dec cmp test repnz es enter add xchg sub (bad) call fcompl xchg test movsl insb inc dec fdiv mov rorb xchg adc or xor idivl lret jne sbb sti int adc cmp outsl (bad) lahf lods add mov bound (bad) cs incb add imul cmpsb sbb mov or mov push push jle rol in (bad) es cmp dec in add lret movsb dec pop jae inc movb sbb xor sbb jl repz lcall add insb jo and addr16 sub fldcw inc push sub mov dec rorb rcl pop popa push and add movsb add and jo dec ret add mov pop fbstp addl pop sbb clc add jno lret sbb sub leave aas mov mov movsl or pop into adc cwtl jne repz pop insb mov adc jnp adc andl inc lea rcl xor movhps cld push adc inc (bad) xchg lods xchg cmp pop and sbb and or mov sub push xor xor xchg or cmp and adc in mov inc and xor lret (bad) dec push ds jmp dec popf dec and push xchg pop (bad) outsb aas movsl push or push pop mov loopne and pusha pop dec or fimul mov in adc sbb js adc imul cltd (bad) or push inc dec mov or mov stos pop add ret sbb (bad) stos or mov or mov test pusha cmpsl and jge cmpsl call or cmp lds cmp adc mov cmp (bad) mov xchg jo insl mov and test les mov aam cmpsl sbb xchg pop jle and add add push xor notl scas insl shrb outsl mov jmp pop in adc aaa or inc mov add jmp mov dec nop jne lret push and push push mov cmc rclb lret adc jne xchg sub or shr scas pop adc push data16 mov and mov dec and or inc adc add test movsb lock test cmp sbb xchg sub arpl add ret mov jmp pop adc sub jge sbb add push dec mov adc push xchg push dec cmp les lock imulb and cmp mov adc (bad) clc outsl pop fadds fisttp stc in int3 stc mov xchg vmwrite cli or dec cs inc in inc inc push mov fstl jo clc stos leave pop popa push call cmp and and ret movsl dec push into sbb fsubs pop repnz dec push ror cwtl add mov ret mov add pusha or imul ljmp or add mov pop fcmove cmp xchg movsb add and and sub sub add aad cmp xchg mov jle stos and add and in sbb roll dec int popa cmpsl cmpsb push leave mov (bad) ficoml and mov (bad) xchg and scas nop add call mov jns mov and inc xchg sbb and enter pop fisubrl cltd aam mov pop (bad) scas jo xor lds inc pop dec mov xor push enter cmpsl popa pop jno inc ffreep adc adcb mov (bad) in sub and loope xor add pop repnz bnd adc jno xchg pop xor and mov push bound xchg or imul lahf (bad) popf xchg clc call xchg jns xor mov or leave enter cs js (bad) dec dec adc ret push jo in movsl lods xchg pop add adc dec and push jmp dec jo push sbb pop push lea inc sub cltd cmp rclb inc adc stc add add movsl bnd add push push (bad) mov stc dec cmpl sbb cmp popa stos inc add nop xor mov pop mov shl gs or rorl lods (bad) test rorb lsl and mulb xchg and sahf dec pusha and jl and mov cwtl add or call addb and dec loopne andl and lret repnz lock inc inc or mov lock add ljmp mov inc mov cld call ljmp leave imul call inc call movsb orl scas jg push adc push stos xchg pusha adc pop psrlq inc or daa test mov shll cwtl sbb sub and jo rcrl adc push les and mov lret arpl mov pop stc fsubl inc inc sub pusha inc add daa or push cmpsb jae push icebp and jb and add test cmp repz adc mov push adc mov and gs and popf aaa mov mov jo sbb and mov cli jmp mov xchg fsubrs sbb sbb push loope pusha cltd xchg dec dec mov or cmp mov ss jp cmp cmp out or jo or add add les andl adc jns jnp add dec ror lods xchg sub sbb jb jnp arpl jge ljmp jle add call pop js aaa xchg ja or adc push dec dec cltd inc jno inc fild pop pop das mov inc pop pop inc xchg xchg lret daa or adc push pop les pop adc inc imul xor dec push adc (bad) dec shlb push push out int js inc jg inc rolb and pop leave or sbb xchg cmp (bad) jmp xor adc sbb xor adc lret push fsubrl mov sbb notb mov rorl or sub sbb pushf shrl rol jl or xor stc pusha inc pop xor pop es jne dec sub mov mov adcb scas inc sub mov cmc jp adc push in or insl push pop cld dec jne (bad) jo gs enterw xchg rcr ljmp shlb stc mov or or fucompp (bad) fucomp mov cmp add add mov jmp flds sub ljmp pop in test mov and pushf sbb ror addr16 loopne (bad) xchg xlat xchg aaa mov xor pop xor fldcw sub add push int outsb mov je adc movsb pop cmp inc and adc or or or add enter stos jbe mov pushf data16 pop push pushf push cld dec cli out jle dec inc inc jp cmp mov das mov cmp stc insl push xchg jmp or test sbb mov jnp inc xor push or pop lock gs sbb pop sub movsb mov and repz lods add inc add sub mov dec js sbb pop lock or sbb popf stos mov cld and inc jne adc gs dec adc xor push xlat sub cwtl aam enter or and jl push add xor (bad) (bad) ljmp mov cld cwtl or rolb xor push inc sub push mov insb insb (bad) mov test fisttpll xchg movsl add jl jo add cmp xor out sub test push push xor jp sbb movsb pop jle scas call push cmp xchg push cltd mov add sbb xchg or sub ljmp dec dec iret popf jge mov xor subb lds cmp cmp and hlt xorb (bad) jne jnp and push xor sti mov arpl ret add loope sbb jmp outsb clc dec pop sar test jl mov inc add mov and push cmpsb dec rolb push rorb xchg xchg popf lods jnp stos lcall sbb (bad) fs adc scas pushf cli inc pop cs mov icebp in daa pop pop dec aad call add adcl sbb push sub jno mov inc jae rolb in in clc mov or and cmpsb aam dec in mov mov xor cli jl cld or sbb mov sbb cmpsl jl jl mov jmp lea and mov and aad pushl adc repz stc jmp les and add cmpsl (bad) cmpsl xor xchg (bad) xor adc int3 lcall xchg imul sub mull cmc mov adc push add mov ret cmp adc sub push cld push call mov and in push jns test (bad) loope xchg mov (bad) or mov pushf outsb or xchg int inc loopne (bad) and hlt adc popa and add daa ljmp dec push push into add and sbb and in or jo pop test xchg and pop fcomps xlat add out add dec ss and add or mov or out enter dec cmc push add xor fdiv sahf xor rcrl and sbb es pop adc xor adc mov sbb faddp pop cmp adc push pusha push mov adc aas xchg mov je push sbb push js push and js pusha pop rep mov pop lods clc lds adc adc sbb sub rcrl adc inc clc inc data16 dec mov je push arpl ret add rcll dec cmp inc and inc (bad) ret or xor and test fs and insb sbbb and mov sbb ljmp pop rcl push push cmp fbld pop pop mov xor dec dec cmp rolb xchg and data16 or js mov outsl lock pop clc push add jo mov cld add add mov push dec inc inc inc sub cmp push adc and (bad) mov dec xchg shl and sub xor popa mov pop and sbb ss mov push ret test pcmpgtb add inc test shl dec sbb pop rclb test pop or mov push jno mov pusha inc ret stos pop dec out shrl loopne mov mov outsl in je push inc insb push mov call dec inc add add pushf mov out iret cli popa push and cmp add jg sub add push add adc nop ds fistpl loope (bad) and sbb push push rorl pop aam push mov jb rcl add xlat inc js pop (bad) xor pop push xchg dec out insb adc sahf jo nop xchg lods test nop test mov and inc lea je rcll inc mov mov enter pushl push das cmpsb jp fadds add mov add scas decb push sub dec cltd ret jg sbb mov andl adc hlt or cmp push push or lea (bad) inc pop sub test sub stos cmp adc dec jb lret dec pop das mov dec jl out adc pop fcoms and cmp insb ja clc jo cld push push (bad) dec xchg adcb xchg sbb sub iret dec push sub test xor push push mov fmulp and and sub jle out sti ret frstor pop and adc push ja sub push in dec mov out and dec jge mov xchg push xchg or cmpsb je sub xor push imul cltd and sub cmpsb mov mov and or cld ret ss push call xor in xchg mov lock test loope push mov rcl cwtl ret fildl stc das dec push in add cli and pop pop sub cli rolb repnz repnz xor dec sub fcoml mov daa cwtl pfnacc je test ret movsb fsub dec sub lods nop/reserved dec push mov cmp nop or jle lret lock and jecxz scas dec add jo fs adc fdivs xor mov xchg mov mov cwtl lods fistpl adc loopne les mov pop xchg shrb xor ret (bad) cwtl pop xchg add movsl or dec test jo sub sbb pop inc sub inc or or cwtl (bad) mov mov push out test sbb jns mov add sbb call push dec sysexit and xorb adc in gs out mov add ss mov inc arpl cmp rolb xchg add inc mov das dec and or fstpt mov adc push or faddl pusha fs fs jne cltd (bad) mov dec adc mov sti das cmp jmp push cs mov xchg mov mov adc fldenv test outsl xchg fcmovbe ror adc xchg xor mov cmp add inc add xor sub add in sbb insb cmp pop hlt loopne jae mov cmp push pop rcrb inc (bad) fsubr in pop rolb cltd pop cltd push push popf add or movsb xchg loopne mov test loop inc lahf and pusha lock lods inc mov push lock int (bad) iret pop (bad) in push or jo or fs iret enter and loope push push lsl test pushf out into fwait rolb or pop dec adc pop pop das jmp (bad) std call call int3 jmp cmp adc out cmp jbe scas sub shrb push fsubs or mov hlt imul cmp push add aas xchg push je call loop xchg add push sub ret or and fildll sub sti (bad) mov add jo xchg jo sbb int3 xchg add aaa cltd sbb rorb add lock movsb les adc dec adc dec stos adc add push xchg ja add aam push repz sbb push push adc loopne,pn in cmc repnz aad nop loope inc inc dec nop mov lcall jle push iret xlat scas (bad) push sarl fwait inc fstps je mov or loope stc jecxz and dec insl call loope insl notl sub jle movsl or mov adc (bad) int3 (bad) cmp jb mov xchg inc dec adc pusha cmpl sbb shlb jne (bad) jo lods rorb test jo dec push xchg mov aam dec pop dec enter je mov push push fdivl sbb in push adc loopne dec push xchg pop pop inc call xchg xchg push cmp mov push pop jo xchg cld rorb push sub leave mov mov test push fwait and aaa (bad) je out imul mov xor push mov lds push (bad) sbb cmc loope push aaa rclb dec cltd mov or stos dec test movsl adc sahf mov out nop and adc daa and push jne popa inc sub (bad) mov push xchg push aas pop jmp popa sbb fwait (bad) repz rcrb repz sub shrb and das je (bad) cmp xlat les pop mov dec mov push sub dec pusha inc adc sub mov mov add lock add push mov lcall mov adc (bad) cld push sub or adc in out ss and push push push or push push loopne fild or inc jo pop int3 jne jmp movaps js inc mov or xchg cld mov jecxz enter and jbe mov nop clc sbb das or dec push dec (bad) jmp out push inc movsb fisttp clc ret dec adc jmp ja add sahf addr16 sahf push xchg pop (bad) xor xchg je mov mov pushf mov adc push rclb sbb sbb (bad) pop (bad) repnz orb lock test fs pop inc add mov mov pop inc aam stc outsb insl and push dec adc mul mov mov insl and mov testl stc mov lret cld out mov inc fidivr xor cmpsb adc dec dec lcall dec jmp pop pop (bad) daa pushl push dec xor mov jge pop dec addr16 rorl mov sbb orl push and inc je into push loope iret leave stc enter mov sbb nop addr16 leave je sub clc (bad) stos idivb sti cmp and and adc xor jne adc (bad) mov lods cwtl inc pop mov pushf ret stc sub push test test lock gs adc pop jo outsb push frstor test outsl mov jp mov pop ret testb cld sbb jl pop push mov into sti das test and addb mov in test fdivs xchg in lods shlb sahf hlt mov nop sub jmp call adc adc xor push cwtl add dec push or cld dec xor cmp lods dec cmpl cmp (bad) das pop rolb rorl push (bad) xchg inc je dec mov test xor mov shlb stos mov xor jo push decl or test add ja roll test imul dec cmp pop (bad) jns dec cmp iret out push sub adc or ret push push sbb jbe mov je push mov jecxz mov jae inc out sub add pop mov jae xorb or test pop inc nop aam or dec add and je bound or and out scas jne pushf xor push add in js mov dec and sub jg jne testb cmp not pop push adc push data16 leave (bad) mov mov mov push cmc call lock xchg xchg insb dec clc pop shlb fstpt into fistpll mov mov and insb dec repz jns popa leave push inc add mov dec je sub dec xor cmp sub mov pop jecxz add enter addr16 aad sbb cwtl inc cli mov push adc push std add push das das pop sub and add push sbb jmp push sub push cmp add je add and or rcr jb xchg sbb inc mov fs xchg push push push mov mov inc popf sbb ss popa inc iret mov je rcll mov test loope ret in inc jo push je ss jae xor mov inc and mov cwtl insl pop inc adc xor inc push dec movsl ret adc or aas xchg and cltd push es inc test cmc inc or inc in rcl addr16 lea inc adc out push push gs inc cmp call push or jo push movsb pop js sub fsubrp and lret inc cli add (bad) inc or pusha dec sti punpcklbw sbb push test ficompl sub cmp jmp adc rorb cwtl sub jae sahf test int3 cmovae lea xchg jmp cs ret mov mulb in iret and lret mov add orl or mov xor roll push dec push mov mov shrl mov cs push xor xor int3 popf dec clc mov dec das mov sub cltd adc xor xor adc mov push sti lret negb stc or push call adcl inc ss add jge push inc jp push xlat or or (bad) bound push adc or loopne rclb sbb mov xchg and adc gs or dec pop loopne sub cmp js fucomp out idivl adc aas sbb inc gs (bad) jmp mov add lea lock rorl notl mov add inc xchg dec pop (bad) lea pop mov add or popa or inc les (bad) sahf shrb ja push push mov and and dec jne addr16 mov scas adc inc xor gs repz xor or pop cmc fidivr sub lret ret rcrb mov mov pop mov lret in movsb outsl lret lret cmp pop iret orb add lea jmp xchg fldcw negl rcll and lods sbb inc xchg or (bad) pop push sarb and cmp or mov cli inc scas cmc inc les ja rol int3 jo int cmp popf data16 dec call xor loope dec adc aam pusha push into jge nop pop mov loopne setae std invd or in add fisttpl arpl fisubrl mov mov dec nop push xchg xor dec sbb mov cld inc jmp inc fsubl cmp xor inc sarb sbb ss js and call lret adc xchg dec jmp ret in jge xchg add iret inc sahf or hlt cmp cmp sbb sbb enter repnz mov sub inc dec lods into add hlt mov or fwait out dec hlt test je dec or xor xchg sbb rolb std adc ret cmpl pushf nop rolb add into stos xlat testb push fwait xchg cmp je not inc xor out add jle jne loopne (bad) clc mov stos and nop push out or pop and add mov jb cltd stc insb push js pop pop xor xchg pushw adc sbb sub dec push (bad) cltd xor leave ja add jmp roll call add in outsb lret int3 mov jecxz cli push jo movsb push dec push fdivrs or fildl rorb in (bad) ret push fisubl mov ret call jne add mov push stos pop adc xchg push pop dec jnp mov jne cmp out sub (bad) fstl pop push pop sbb enter inc and push ja pusha ret stos push out jns cmp out es mov inc add sarl call jbe lret sub mov inc pop pop jne pop sub pop or or add or pusha ss dec push adc into mov loopne jge push flds rolb aaa shll dec pop shl sbbl mov mov js push mov movsl data16 sub and xchg sbb mov sar xor adc test icebp imul xchg in je js pop jmp mov mov push cli ljmp jecxz xor js jmp jnp and in repnz loopne push mov std sbb or and push repz outsb add (bad) mov mull (bad) je xor push pop in push inc popf int3 lcall neg je cmp and push in add inc sbb out adc xchg adc mov xchg sub sub addl xchg xchg test scas dec xchg pop lret xlat mov jmp jecxz or push add loopne jmp call nop ja addr16 mov pop or sbb insb mov insl inc ds add push push fs jp xchg and into roll neg sti push call (bad) push sub scas sbb push dec push repz add push mov into call sub roll inc ret push add xor orb out bound icebp out repz dec call sti fmull lcall cmp push mov pop cmp mov repz pop aaa or in mov cltd sub dec mov push push nop lock pusha mov in lea es loopne data16 fsubl daa mov fwait mov ficoml add test call fimul mov cmp iret sub repnz pop jmp adc push mov cmp xor inc cmpsb sti mov pusha mov xor dec adc insb adc add cltd jle adc lret jge or arpl int and imul jp addr16 mov add fs jle adc mov jmp hlt pop cs js outsl pop test and addl sarb adc mov mov jae inc add pop xchg test cmp and inc je sub pop and and lahf in mov push dec gs pop sbb cmp shlb rol mov or add adc push inc dec repz cmp or jno adc rorb popa repnz cs jl push mov push pop in sub jae sahf xchg call push test push ja and lock jo ret xor pop sbb ret sbb adc adc outsb out aad xchg and popa push add inc mov xchg adc mov pop mov adc xor inc pop add or sub incb test je add adc mov inc loop inc (bad) push sub ja sbb ret (bad) call push movl adc and mov nop mov xor (bad) mov movsb pcmpeqd adc mov or ja cmp movsl xchg adc mov and idiv movsl in dec hlt and (bad) ljmp and mov jl clc adc or pop imul jb lods inc test mov pop enter leave dec jmp push jg inc dec adc jmp call sub stos jge adc push je xor pop xchg andb or sub sbb js lcall iret pop xor mov loope add push js addr16 imul sbb sbb cmp (bad) push sbb cmp jne adcb sbb mov xor gs dec push clc jmp pop (bad) mov fiadd out push push call push xor js sbb jmp pop and or add push push lods hlt insb js sbb add and test test (bad) iret out je incl ds dec push adc sbb add adc lods or or ljmp rorl in cmpsl sub inc faddl out jle aam jmp int3 pop js in jmp les xchg les sub jbe,pt xchg mov xchg and ja mov sbb or mov mov inc clc mov sbb aaa mov cld sub jns mov in add pop loop clc decl pop push sbb pop (bad) xchg cmpsb js aas add jbe add stos imul fs xchg and cwtl clc adc add add cmp pop (bad) iret xchg rcrb cltd movsl (bad) or mov mov repnz adc mov mov lcall mov add rcrb push or pop fistl xor test mov push and fsubr cmpsb jecxz divl (bad) call cld and mov push inc outsl inc out adc xlat inc jbe adc js fidiv xor mov popf pop pop jp nop popa das popf xchg mov call or je xorl sbb cmc (bad) daa in dec adc cmp mov orl cmp mulb mov jecxz cmp sbb cli clc test mov push dec into or and jg js pop add scas idivl add pop js fwait jne sbb lods dec pop fs dec add lahf mov adc add std aam push fdivl fnstcw je pushf out clc cmp lock lret imull repnz enter loope xor dec push pusha ret pop inc push sbb aam xchg in push clc arpl mov adc and lret or lea pop outsb popa push cmp or inc inc (bad) in or aam pop dec push or call rcrb and add push rcll xchg (bad) xor inc dec push pop gs jge lods subl mov inc lcall push test cmpsl jb ja call push dec inc sbb call mov cli repnz out hlt scas mov cmp mov mov push mov push sub pop xor adc enter insb clc xchg jnp push insb pop jb fidivrl dec subl imul aaa in into ret pop dec inc into inc movsl jecxz dec xchg jle lcall jge loopne rclb inc fcomp xor cmpsb call (bad) add lret (bad) mov insl jle jl,pn jb movsb insb jae xor pop jle popl xor fcoml adc loopne gs leave and shr cmp add mov mov in shr mov sbb cmp jo or inc inc lcall mov push mov mov push movsl or push mov (bad) icebp int inc call in mov inc or xchg insb dec aad dec movsl cld xchg (bad) pop stos jae dec add in mov adc dec dec inc jmp outsl je aas shr hlt les cmp insl fnsave add out stc aam xchg adc push (bad) dec jg popf add or adc lods jb in adc popf test int daa icebp lods mov sti dec add jne pop (bad) mov push call data16 xchg inc or aam push sbb stos sub adc pop fldcw popa ret mov test mov mov (bad) dec sbb rcl clc std stc mov std stc add scas popa dec loope cmp cmp mov inc jns adc pop lods mov sub cmp sbb lods notb mov xchg movsl xor lret mov and push aas andl mov cmpsl adc mov cmpsl aaa adc xor das sub xchg icebp enter and sub es les icebp cmp inc (bad) inc inc cmp xchg pushf inc insl cmpsb xchg sbb pop add fstpt xor (bad) mov jmp or lret ret sub add test pusha je or movsb in out dec clc and dec inc fisubl ret sbb (bad) pop mov jmp roll cmpsb popf xor adc add lret (bad) repnz idiv sbb shr fs les sbb ret mov adc push push mov xchg or push push out sub sahf pop mov imul mov in fwait (bad) and rcr push fsubrl movsl dec popa and test loope adc je mov push bound cmp pop inc ja je push pusha add lcall sub xor adc sub nop or subl sbb add mov push push sub fmuls (bad) movsl ss add adc aam xor xchg cmp adc add int3 and dec imul inc add xorb or push les and or and lret or inc sbb xor jb mov sub movsb dec adc and movsb test (bad) aas ja sbb pop xor inc fisubl outsl add add or imul cmp sub xchg xchg sbb inc mov jp inc pushf xchg aas adc imul negb leave xchg popa add jl jmp add icebp xor jns fldl jns jo cmp lds cwtl jp,pn mov dec jle in mov in push inc loope inc push add rol call or push dec xor sbb adc xor dec data16 dec dec inc cmp hlt test inc pushf jae leave xor in mov ljmp xchg adcl fwait mov lea add in and cmp fwait add es mov and and dec jmp stc sbb scas rcll into mov test cs test daa loopne cmpsl sub and cmp sub dec adc (bad) repz jg and xor jae rcl cltd cli fisttpll or xchg sub test cmpsl in push push mov or and cs add sti out loopne and add sbb push pop adc cmp ss sbb sbb and mov adc stos mov add or add jge pop stos dec xchg sbb sub dec lret mov pop push add pusha xchg mov icebp add pop scas and fabs fwait xor push jmp xor add movsb push lock lret movsb mov xor loopne lods or sub jp (bad) outsl pop (bad) sahf ljmp loop (bad) lcall mov mov idivl or call cwtl fdivl xor or pushf movsb dec mov jecxz js jl add pop imulb scas mov or inc sbb mov xchg dec loope ja and cmpsl or cmp testl and (bad) mov popw cmp fistp cmpb jnp js mov call xor dec fistl push clc jl ficompl mov out jg movsl aad hlt (bad) jo,pn inc mov iret adc or sub or lahf dec xor call mov or adc jmp jo fadds insl pop and sbb int3 push xor rorb xchg inc xorb in sbb clc sub iret dec sbb dec cmp pop xor (bad) or sbb sbb mov sbb adc pop mov or test fisttp push icebp repz mov outsl clc orb inc movsl mov cmpsb lcall jmp jle cmp fwait ljmp dec test jae cmpsl fstl inc xchg inc and shrb enter adc (bad) sbb or mov movsl pop add call loop mov cmp call mov jecxz dec or sbb jp test push or mov mov jg imul loop and sbb scas dec push and add dec jecxz inc push mov cmp inc cmp or cmp jl dec dec pop ss jmp xor mov fisubrl mov in mov mov lock jge mov movsl cmp loope jge movsl push mov jmp xchg ret dec inc in jo lahf or int3 push pop and xor lds lea lret daa cmp mov idiv mov mov or add add inc add pop mov loopne mov pop rolb or dec cli and add jecxz cli jmp addr16 addb push push add test fwait inc repnz mov add mov (bad) mov mov xor mov popl (bad) fsubrs and rcrl xchg mov cmp imul sbb fwait in jmp sub dec sbb sub in mull and movsl sub les add test insl imul daa dec mov xchg sarb add jno dec fwait jo xor and mov pusha popf lods mov xchg add ljmp dec (bad) cmpsl lea mov cmpsl ret jbe and pop add (bad) repz adc addr16 loopne cmpsb pusha push jo je or push (bad) adc test lock sbb loop sbb mov jne les je scas rcll xor jmp adc add cli shlb add gs mov mov jb rorb lcall js cmp hlt add inc push int3 pop jle inc ficompl dec call jo add and pop mov sbb sarl and je xor int xor push xorl push (bad) jo loope data16 daa inc cmp fldz dec xorl mov push movsb inc insb fistpll push jmp adc add pop daa and xor and mov loop mov jmp shrb (bad) push dec dec imul sub add lods out mov fsubrl int3 clc call dec in loop dec or pop rolb pop xor mov test insb sbb or xor xchg jo push dec test adc aas jo pusha pop push jge aam jecxz js push mov add adc mov test and int3 pop pop insl bound (bad) fimul mov (bad) and or mov jb push popf and ja add sbb sub jnp adc fdivl (bad) rorb inc jecxz xlat cmpsb sbb pop jns cmp jnp push mov inc arpl push adc rorb or ret out mov in pop rclb inc adc aas mov in ds adc mov mov jge push in stos mov xor dec xlat clc adc inc dec jge lcall fsubr repz clc cmp or addl mov push jne jp push (bad) mov mov push out add push or jne push sarl and ret push cwtl shlb stc mov (bad) fidivr push loope or sub rclb add jmp ret inc dec cmp add jae ds add inc jb add mov cmp add add pop sub outsl or dec insb xor lods inc loope dec pop loope or je dec je push in ljmp inc sub lock into inc push mov and stos mov insb std mov lods mov dec cmp daa cmp mov aaa divb and push dec push pop call add push imul pusha sub inc pop and ret inc dec mov ret fwait js sti jo ret cmp dec test aam push inc out mov xchg sti and out das adc clc mov lods repnz inc (bad) xor pusha rcrb dec jge or fsub pop movsb xchg or call es sub mov xor popa (bad) test xor cld fidiv inc and hlt adc fiadd decl movsb xor mov push je lods sub mov int3 out jns xor (bad) in lock or push mov mov xchg inc jg push leave or push test inc clc mov pop adc in add fld1 (bad) int3 pop loope xchg adc push mov lahf call mov inc mov js mov mov into cmpsl push jge loop or or mov or sti notb mov addr16 dec mov push mov pop idiv test pop in lahf sub mov adc nop and mov xor inc push nop rcll and ret dec sub xchg cmp repz mov bndldx adcl movsb dec nop (bad) pop pop sahf je insb push hlt xorl jb mov and xchg test jae add adc ss dec pop decl lret mov shrb push fadds leave add nop add sub es into mov outsb mov and fdivrs fcoml shll push cld in inc mov inc arpl test push ss jo push stos loop inc call (bad) push xchg ud2 js in loopne inc mov inc outsb pushf in ret pop jno insb jae loop push and imul add mov xchg push inc mov (bad) les inc add push fadds mov pop add or or jge pop (bad) (bad) or pop adc sub push stc faddl adc pop xchg add pop push popf adc add stos test addb push push (bad) mov sbb cltd insl icebp aam int3 ss testl jne jg or jmp enter pushl xchg ret add call jae,pn or shll repnz sarb and aad xchg clc aas push inc bound ss and sti adc dec and jb dec add les add test jno or sub jp rolb or sub adc adc imul adc add test repnz push out mov and mul jmp lock out imul lds xchg push inc popa int3 xor clc pop adc adc andl sub or icebp std fdivrs mov mov sub mov push push or mov fdivrs mov sbbl xchg lock inc cs pop clc je jo shll js push mov xorl or (bad) pop cmp sub hlt jo (bad) cs lock aaa push cmp ljmp inc rcrb add dec jne lret idivl rcrb ret jmp add jmp sub mov adc add cmpsb dec imul lcall mov lcall dec dec mov rolb inc je or inc jl sub mov aad ljmp xchg loop mov mov xor pop jne and xchg fsubrs inc sbb dec mov leave lcall sbb fdivrl mov lret push in add das lock movsl popf outsb fdivrs jp sbb test dec jmp sub jle sbb add insb je repz mov imul leave jno,pn frstor fsubp pop jnp jmp xchg sbb or stc (bad) jbe mov lret push mov or sub jmp sbb jge fsubr icebp sub (bad) jo hlt in dec cmpsl push imul dec shll insl clc inc or pop add je call and inc pop or cmp push sahf inc call mov sub cwtl cmc or xor loopne cld test inc pop insb xor mov dec or sub and les ret cwtl cmovbe nop cwtl and out lret pop addb fstl mov or push adc dec (bad) adc out daa lods mov shl movsl in les mov add jbe int rcrb dec subb fwait push push xchg test shl add imul (bad) mov and jle rcr sub mov test adc pop gs fsubr add adc in jo cs jge sub cli (bad) movsb (bad) xor push je call push sbb lock xor sbb sub sbb jne dec in pusha mov fcomp dec push or inc or inc cmpsl rorb mov add xchg or jo inc es xor sub out call jns testl sub xor and loope lods mov leave dec sbb cmp popa cmp scas test mov xchg aas and imul (bad) fsubl cmpsb sbb repnz adc fwait inc out xorb call stc inc jmp into insb sbb sub push test add cmc frndint and inc xchg aad (bad) (bad) mov pop add je pop add add fdivr add xor lahf loopne jmp dec add roll outsb addl pop mov shll add daa jl inc loop movsl dec push pop out mov cmpsb add and push inc dec imul push xchg push adc nop add rolb push cmp add or test mov outsl rcl repz int3 cli icebp mov mov pushf or add enter pop fnstenv sbb call test sbb sbb or mov and fs in add pop enter mov add mov xor adc add mov push jno cmpsb or adc in push add icebp stc jl out mov sub imul or adc adc sbb dec mov iret xor call push inc sbb add dec in sub xchg outsb add sub mov fcom call divb or or movsb pop insb stos push add jmp add jo push lea call push xchg xchg jge (bad) push mov sub fimul push mov push fiaddl inc jnp incl fcompl popa (bad) dec adc gs ret fcomp push add add hlt adcl jne jno cltd xor xor ret sbb (bad) test mov jb (bad) ss adc and ja jbe nop pop cmpl pop mov lahf insb mov pop add cmp pop add mov adc mov dec mov jge dec or fcmovnb aaa (bad) in in inc xchg in ja cmp or adc mov sub mov cmp scas jb sahf and sbb sbb lret adc (bad) incl inc and push sbb (bad) xor xor add sbb add cmpsb or ret hlt add mov movsl call adc (bad) bound insb fdivrl fsubs sub (bad) lock pusha jecxz sub call or jmp jbe xor repz mov or or lahf xchg inc enter pop mov dec dec rorl or jmp nop xor push lret cmp pop dec xchg add adc mov hlt (bad) roll jne adc mov movsl mov mov xor mov add inc sub shr mov jnp jl mov push gs popw xchg std and push nop adc jne lods mov pop outsl ljmp sti ret cld fwait cld daa mov mov (bad) (bad) leave and xchg loopne cmp push sbbb jno xor mov mov (bad) lock rclb add mov add xor lock test jnp cmp idiv in pop inc rclb push cmp dec add loopne out repnz xchg sahf addr16 sbb clc cli push sbb jns (bad) call call dec outsb push pop adc jl stc sub mov clc cli cld adc mov sbb sbb add mov popl push aaa lret add cmpl fwait call test leave adc sbb daa sbb xchg insb out push adcb add sub sbb add adc call add adc lods es inc pop or int3 push clc and jb sub mov mov loop test pop sbb sbb xchg out inc push or dec call add pop pop lea cld adc insb xchg cmp rcl jg fisubrl jnp push (bad) repnz neg mov xchg in cmpsl mov jecxz roll push cmp mov stos insl ja mov ret in stc js,pn jl orb fnop mov xchg movsl not and movsl sub shll add cwtl (bad) fsubs lea mov pop mov repnz pop cmp mov push cltd dec movsl sti lods and add sbb mov xchg icebp call mov add movsl jne lods cmp (bad) in adc es (bad) lret in push jno pop (bad) loopne imul or lcall outsb jecxz and pop (bad) (bad) es push add mov or xchg (bad) loopne dec nop incw mov jp dec xchg jne or rcrb add dec add dec xor xor sub push fldenv dec or pop ret add ret bound pop add int sub ror jnp into cmp jae sub xchg or and je mov push ja xor roll xchg or adc sbbb sbb xchg jle ret adc leave ret jle pop xchg mov pop add sub loopne test lea dec mov aas clc les orb jb sub sub rorb loop,pt hlt xlat (bad) cmp fs sbb jne jo jne add adc scas call sbbb sub dec push inc test add scas cmpsb pop xchg (bad) out orb push mov add xchg out push jns xor scas pop in adc cmp je push mov scas dec push push dec das mov call addr16 out stos dec insl (bad) or (bad) cmp je nop push clc call mov push push stos or dec call jge xchg lahf scas insl push push fnstsw pop dec and mov xchg cmp call dec fistpll out sbb xor lock pop mov jmp enter pop push push push stos rclb and push pop adc leave in xor cld push imul lcall and pop or movsl idivl vmwrite push or inc or bound jne adc cmp imul inc jbe ja test push push push outsl stc insl imul es (bad) leave int outsl jle pop jmp push jbe rorb push dec imul dec push fisttp or nop lret inc xor pop add or or jne les push xor mov rcll or jb ja (bad) jb mov adc loopne imul sub pop (bad) or loope sub shr mov xor les dec and insl pop xor daa sbb xor dec adc sbb dec mov adc add push and push mov shlb iret insb jns (bad) mov adc xchg ret xchg clc mov mov pop cmp xor sbb sbb add ret and dec pop cli movsb mov or cmp rolb push daa or adc push clc pushf in dec sti jnp clc cmp xor or add adc pop mov mov scas push lcall xor inc cmp outsb fcmovu jne imul pop and cmp xchg jns das fstpt push test push xor sub jns rcll std (bad) push sub adc add add lea dec or add insl push mov gs add push das aam adc push mov ret pop hlt inc icebp sbb push jmp adc mulb inc out jns lods sbb push xor fdivrl push push fld push test add outsb fnsave ds ljmp mov (bad) sbb cmp push fs jo int packsswb fs fs sub daa add insl jg clc insb dec fs cmp add clc addl fs test mov in or inc add in add mov sub push mov xchg jl add ljmp push mov pop jae dec dec daa into jno add js movsb loopne xor aas (bad) sbb mov inc adc cmp or das jle or or test popa jnp inc add inc aam inc and and orb out xchg mov push pop sub ljmp and push pop adc jne push cld jbe push sbb pop and cld loopne sub outsl mov xchg mov sub popa jne pop xor cmp cmp add push mov or sti mov pop jbe cmp scas (bad) lret add pop mov rclb and aam push push (bad) jo pop push outsb and mov jmp push xor dec jne rorl xchg sbb adc push adc add adc push add int call push xchg mov mov orl and lods jmp inc sbb jmp pop rcrb sub or and (bad) out inc jl dec out ss mov sbb imul adc fdivrp inc adc cltd dec sar je sub or dec sub es cmp xor cmp movsb add or dec popa movsb jle push gs (bad) and dec nop sub fwait pop dec push mov xchg jecxz sub int sbb push inc add and (bad) leave and inc or jl cmp jle iret and je js sbb fstl push fbld inc mov hlt push jne imul fs in (bad) mov or xor cmp sub ss shlb push ret push and (bad) loope js and inc push add adc inc (bad) cmc sbb cltd inc mov mov rcl and cmp cmp js mov call mov cmp xchg xlat (bad) loopne xchg cmpsl lock ret nop es push push push test std in push ss cmp dec adc push ret cwtl fdiv arpl add mov mov cli xor out mov xchg adc xlat push ret mov fwait jecxz insb insl cmpsb outsb mov and imul and pop cltd test mov cmp jl insb ret xlat test in sbb ret xchg mov orl or addl aaa or pop cld adc pop int cmp je jo mov int3 or dec mov inc sub loopne insl sbb add hlt daa pop js sahf test add push jno imul jno stc add cmp enter xchg mov xorb shl adc add sti or sbb outsl jl int3 and js arpl push adc bound cwtl shlb adc inc imul push mov or mov mov lods mov push cmp add icebp sub data16 sub shl push push or cmpsl mov inc gs test xchg sub sub or je pop aas inc mov xor dec out adc leave enter sub inc adc inc enter insb test fs and fistpl adc ja jno sti aas inc (bad) (bad) lahf shr fdivrp jmp cmp lods mov sbb das xchg and lock mov jmp sub rorb pop mov cmp jecxz xchg lods lds pusha sarl push imul fmul inc arpl mov sub jne bts fdivr movups push add cmp add jns test xchg adc addr16 popl cmp mov ret pushl pusha mov mov and loope push push push pushf sbb mov lret ss push gs sub fs sub popf adc xchg lret jb (bad) xor lock xchg push adc movsb pop lds loopne inc and push aad sbb test out in dec fstl les arpl dec ret pop push nop cmpsb add push inc mov test push jl mov loopne add dec rclb dec and xchg jbe (bad) adc loope dec or decl or inc out cmp mov lret (bad) lret mov stos icebp lock dec push (bad) je cmp add jge sub andb setae in pop pop sub inc adc nop testl insb inc xor push pop mov out mov mov out add fs sbb xorb nop mov sub add imul sbb xchg js mov das sub fwait push xchg cmp or lods cmp jo dec mov push into mov pushf adc fwait js sbb pop push add push adc or push fmul clc push xor push dec aam and aaa adc mov push call in inc jmp inc jmp imul sarb inc or cmp push and shl sub (bad) ret push stos mov ficom mov call sahf arpl js outsb mov inc nop cwtl lcall xchg roll cmpl lahf lea lods or fwait adc inc jo jl aaa xor out inc outsb mov enter xor jmp test roll or sbb jae or adc movsb stc test sar iret jecxz jae ret dec inc or stc outsb adc aam clc mov mov (bad) fcmovne jg add add jge xchg or jae nop test outsl imul sbb sub dec mov adc insl popa sub out ret jbe stc dec add xor idivl adc ljmp cmovp (bad) dec (bad) movsb std lds jbe adc cmp sbb orl fadd cld daa hlt push fwait sbb add sbb mov fcomp xor xchg sarl stos inc loope into mov dec (bad) add repz push inc out ret loope imul cwtl outsl ljmp push ds xorl jl andl mov mov push sub sub xor dec addl daa dec jle fisubl xchg dec jp jo addb mov or push mov sub iret test push or jmp and cmp (bad) mov and (bad) jno push cs cmp push or jle add dec icebp testl push sbb lret std (bad) decl jg push pop je or cmp shrb pop mov xchg inc fidiv mov jmp cld jne jecxz cli fsubs div clc mov ret push mov rcll dec add cmpsl sahf fs inc (bad) int3 dec inc add loop outsl sbb into xchg ret test mov (bad) pop jb loope ds cmc fs xchg movsb pop pop ja mov dec popl xor lcall cli xchg xchg imulb push in add dec dec rorl (bad) or sub loopne add dec out xchg lahf rol cld dec add cwtl clc dec xor add cmpsl push inc adc dec fs (bad) xchg dec sbb push jl shlb scas sub lea inc adc sub jbe jo divl icebp push add or stos jg lock push inc xchg cwtl outsb jno scas test inc sbb jb adc daa out or lea scas ds pop stc adc sub mov jo xchg xchg inc jne jo icebp (bad) test jge push push in pop xchg hlt inc ret xorb jmp nop sarb or pop in into inc cmp test inc add les pop (bad) cmpsl nop fstpt ss enter call sub or cmpsl mov pop push pop jns cmp pop out push roll dec test ret xor and out jmp xor mov adc sub arpl xor testl lds xor xchg dec cmpl sbb repnz dec jecxz push jne cmpl outsb sub mov mov jo add adc popl mov shll test jmp out cmp movsb faddl incb dec nop out lods lock mov push or jl enter mov pop mov jl nop or push arpl outsb icebp inc sbbb incl jge and and jne in test aad sub nop addr16 sbb mov sti inc add xor popa cmovs iret xchg cmc rclb rcrl in or (bad) or mov inc and adc adc adc pop inc jmp pushf cmp daa mov (bad) (bad) mov add push cs and sub aam lahf test xor ljmp mov stos add out jo xor pop and jl and in dec ja outsl aas dec outsb shrb add rolb movl cmpb xor push add push std notl (bad) push push push stos cmp aam jmp push push call pusha ljmp inc add pushf mov and or dec pop pop iret add daa add push sub sbb rcrb mov push and xor icebp aam inc aas call repnz loop adc ret mov pop jl or (bad) or sbb push pop and mov push popa jo xchg dec jg rorl pop insb add xchg adc notl inc mov pop add push scas ret lock js mov dec and cmp mulb aam lock or mov jo or int jae jmp sbb lds int3 roll add and or mov gs jnp xchg adc mov je push mov lret jbe inc es hlt cmpsb inc in xchg lret int or mov pop mov iret jne or xor mov inc jb inc cmp dec mov cmp les lea mov add and cmp pusha adc jmp fisubl ja insb mov push dec test sarb roll adc inc mov push rorb jg dec stos add hlt cld into xor or cmp leave push push and aam inc jno add call mov fldenv mov xor cmpsb outsb lock adc cmpsb jae and sub hlt mov lret add lea fisttpl xorl rorl subl mov js jl jge xor adc sbb xor jo dec jno cltd mov insb add jns sbb fisub loope adc mov push push or pop jmp sahf (bad) loopne test mov rol xchg lea ret push xlat orb pop mov mov dec jo cmp push inc rcll or sbb add and jno sub and dec add sbb adc jb ljmp inc in mull test sbb adc push jo sbb mov in mov test aaa fmull call xchg add push ret test pop mov mov jmp push mov dec push xchg push cwtl data16 pushf pop js push nop add or add out adc dec sbb fldcw dec push enter inc or daa or lods fcoml addr16 sub addb mov inc push (bad) dec or rclb ja test or movsb in pushw mov lock fimull jns sbb pop mov (bad) aaa test push cmp aas mov addr16 adc ffreep mov jl add ret jl sbb pop stos pop dec and ret xchg outsl dec movsl or push push sub dec imul sahf addr16 dec ficom dec cmp mov mov and add pushf dec in fstl and mov outsl push add mov jne sub xchg or fs push test aam sub loope pop jg cmp pop je mov or or and add xlat xchg pop xor inc adc dec push cmpsb stc jl inc sub xor outsb test stos push (bad) push pop jmp test sub int sbb push pop or or fnsave pop push or inc push pusha pop push add aam outsl cmc sbb pop pop pop ret dec mov xor mov scas pop jb cmp inc cmp sbb roll inc or pop mov sbb lods inc add fsubs dec jae cmpsb in push inc sub inc sub dec sub in dec inc inc dec or jb or mov mov arpl test push jne (bad) push add pop out (bad) setbe lret inc mov cmp lods mov pushf shlb adc pop lods push add or jns clc mov call mov push (bad) add sarl subb call les lods adc cld or loop insb jne push rorb inc imul sub adc (bad) add iret xor mov lret ljmp gs and and sbb outsb pop pop add scas mov loop (bad) push adc cmp dec mov add push jae (bad) aad dec jbe cwtl push (bad) (bad) mov les push fadd adc mov or sub outsl pusha inc cmp add mov divb les xor pop push sarb mov bound sub out sbb add sub arpl jmp insl jecxz mov inc ljmp xor arpl movsl (bad) mov pushf jmp mov das inc out xchg dec cmp sub xor or dec xorl in sbb sbb xchg push les xorl aad ret rclb imul call mov and pop pop orl xchg add hlt scas mov push lret and jb (bad) rcrb mov or int popa jne cmpsl and mov das or push or out out loop (bad) adc and rorb xchg clc nop dec enter mov fcoml mov std lock sub sub dec js cmp and cld clc cmp dec adc mov adc xchg add (bad) xchg push nop call das lock in call scas or lock std mov sbb fdivl jo and pop adc in iret push popa inc les pop push push push pop daa fsubl jne inc idivl (bad) xor add jmp test mov xchg or ror clc arpl imulb sub push dec push lcall movsl jmp pop and xchg mov mov cltd movsl cmpsl ffreep gs or dec dec (bad) push xchg roll lea (bad) (bad) rolb push (bad) pop jnp push pop nop sbb mov adcl sub jle jne int sbb es insb dec lcall sarb repz and mov shrl cli inc or push mov mov psubsb cltd or roll sub lcall dec or fiadd add ret std xor xor call lcall aas clc dec enter and pusha into bound sarb mov cs insl loope dec jl dec push add xlat xor pop cld dec inc sub mov xchg fidivrl sbb aad stos iret xor push push (bad) push pop push jmp adc sbbl sbb outsb xchg idivl movsl push mov cli ret inc inc gs dec movsl pop and mov cli rclb addr16 push addb pop xchg mov lock dec call aas sbb jecxz add jnp and add push adc xor adc dec fwait cmpsb or or scas jmp scas mov rorl push push call xor sub je and jae imul xchg je cwtl mov adc fwait out dec xchg sbb bound xor push mov sti subb and push mov sub jns mov xor lret sub xor adc daa xchg lret int3 cmp mov push mov inc cwtl fcomp xor xchg or dec add pusha adc lret jp dec jle add or or ss (bad) or sub call fldt inc (bad) imul add lea gs add cmpb test and xchg jno call xor inc add cld movsb lret mov pop outsb mov or jmp call xchg push cld sbb int mov jecxz dec push xchg mov pop cmp mov push sub push mov das push (bad) add push in jecxz cmpsb add das xlat fiaddl mov mov mov in or (bad) dec sub or into nop fldcw cld (bad) into xchg lea jnp pop push (bad) or sub push add pop push call mov mov lret jns adc and lahf push stos mov dec or mov xor push flds aaa fistpl mov sbb jnp jge mov dec sub adc clc jge adc sub pop and mov je aas push imul sub jg push push mov cmp xor xchg dec sbb mov dec mov test inc jo sub jl lods test add dec cmp mov mov (bad) mov push jb jmp sub cli xor (bad) cmp push das or push test mov lret (bad) and sub add fidivl stos push cltd jbe inc or sub inc dec out jl movsb sbb adc (bad) mov inc sub imul arpl mov ret push or xchg (bad) xor push cmp and pop add push ficompl add jge mov adc jno or mov xchg (bad) lock dec aad jmp and cmp in movsl mov push arpl sbb inc push hlt es push xchg mov sub or push sbb nop sbb mov cmpsl mov scas inc cmp xor cmp pop out adc lock add nop lret xor call cmp das sub ja add cmp popf (bad) rcrl rolb pop les lock (bad) dec fsubrs lods jbe sahf or js insl jge or inc mov mov aam push cmc in loope inc leave mov cmpsl fbld adc xchg sbb ret pop add call xchg (bad) insl sbb mov adc and and mov fucomip arpl enter cli add movl cmp adcl xchg add fidivrl sub les xchg pop or xor ficoml jo pop (bad) sti sbb icebp fidivl cmp icebp test xor movups mov or out mov push mov les xchg xchg arpl sub fadds add mov insb push cwtl sbb jp or jb mov les add and clc sbb add cmpsl cmc push xor jmp test mov data16 add mov mov (bad) sub lcall push dec or and inc mov mov mov xchg cwtl shll jne jge or std das stc nop mov pop ret inc add mov cmp or sub lods xchg js mov xchg and xor push inc test inc add mov int3 sub inc pop (bad) inc mov mov insb lds addb pop push shrb push mov rorb jge (bad) push movsl sbb add mov mov dec sbb pop add and mov enter xchg fmull dec lret adc pop incb or sub test push inc cmc cmp pop and pop (bad) (bad) pop adc and add aas test orb imul into decb push sbb mov sti shlb mov mov xor subb insb inc mov jb mov call jbe nop push dec push jns adcb outsb xchg mov stos xchg test getsec movsl mov (bad) enter and jl add rorb aaa jne jmp pop dec push sub nop dec add inc cwtl outsb and add loopne push dec and hlt jl jne mov aaa das inc fldcw cmpsl lret jnp inc mov fs fistl add cld ds or mov imul or mov sub push mov out mov lcall fistpll dec and mov push adc orb adc xchg idiv call add dec lcall sbb or add into cwtl rorw mov inc and sbb js or dec and inc daa pop aaa dec and jnp jl into cmp adc cmpsl sub inc xor adc pop mov dec mov xchg or fnop mov sub add mov and mov mulb adc subl jecxz or xchg fnstsw lods mov je jo xor or cltd push sbb push push icebp hlt pop mov fbstp adc mov movsb and cmp pop pop cmp push pusha dec pop push arpl rorb leave dec out (bad) imulb adc adc (bad) and push (bad) pop xchg xchg nop jbe or sbb lock mov pop les lea movsb jge test icebp dec gs jle ret adc sbb xor adc pop ja leave dec add sarb pop push je push push loopne adc xchg test and sarb mov lcall pop sarb popf adc add jg push (bad) or je push add nop test lods sub xor pushf stc (bad) imul inc leave push pop jmp mov add gs fnstcw mov sbb dec jb repnz mov lods dec adc jns or push add repz pop in sub push pushf sbb jnp mov cltd add mov inc xchg sbb xchg add push mov mov add mov cmp ret lret aas mov push pop cvtdq2ps add ss mov mov rorb insl aas mov dec ret or inc mov xor mov and movsb jecxz mov adc cmp sar decl mov push jae (bad) (bad) pop pop in mov and aam (bad) (bad) cmp popf jl fcoml call jbe add and sub and add adc ds or in pop cmovge ds sbb out into cmpsb mov push rcll mov lds (bad) sbb movsb rcrb insb jg dec add pop mov movsb xor pushf cmc adc dec (bad) enter and jns insb jmp add lock clc and mov ret mov adc addr16 sub adc push icebp leave and nop mov dec pop sbb push jnp and or test (bad) addr16 xor push mov cld mov pop jns pop dec adc adc add inc mov dec jb or and or sbb dec popa pop and imul push jmp pop xchg (bad) enter push or sbb mov xlat (bad) in movsl je jp jl cmp jle (bad) and cmpsb ss adc xchg cmp sbb int repnz lea scas jnp sbb jg jb and sbb adc jbe fild cltd in test sbb ja xor pop jb ja lock push call jns xlat or push push clc and xor lret loope add hlt scas jle mov or jnp call push and adc lret pop adc clc xor adc out das pop movsl repnz push mov mov or cmp pop jp xchg add lret jl adc mov add lods roll inc cmpsl or movsl add icebp sub loope or cmpl cmp xor mov mov jecxz mov jecxz push fsubs jno jns jb call or sub fxch loope bound lock jne xchg xchg and lock dec and andl test mov fimull and ret add inc xor pop clc pop mov inc in enter jb pop jl dec lret xchg imul mov mov adc sub mull sub test inc mov fild push jge push xchg add call cmp leave xor or ss push jnp fmuls and and xchg fmuls inc subl notl adc mov and xor and nop cmpsl ror ss imul cltd sub gs enter adc daa and jo shl pop or subl mov paddw add es insb sub fsub adc addr16 testl and je iret (bad) lcall clc fsts jl,pn je out and adc sub cmp pop call jmp inc dec cmpsl jns (bad) inc aaa jno mov pop xchg jl push sub cs adc gs gs sbb test dec jg adc fldenv mov or push repnz lcall (bad) daa int3 dec xchg xchg (bad) pop sub jns ja mov adc and lahf inc sbb scas mov mov dec and and or or xchg sub in mov (bad) xor or cwtl cld pusha mov push add (bad) hlt add pop adc clc dec nop dec pop fnstenv add or adc mov stc fldl faddl and sbb xchg in movsb lret mov inc cwtl mov int xchg daa pop xchg add jmp jb mov (bad) call scas push in or clc out jmp xchg movsb mov pop aaa je and inc and fadds mov cmp xor leave nop adc push jns out int movsb (bad) and sub sub fsubrs flds shlb (bad) mov imul cmpsl popa rcll dec sbb cmp dec scas and jnp inc dec xorb and push movsb outsl orl mov mov sahf or ss xor and add mov inc adc bound shrl dec and scas fs adc add jo ret fwait ret inc sub sub jecxz mov sbb push lock ret xchg nop push push sbb push sub aaa stc xor stos xchg or das mov mov seto xchg dec dec jnp pusha lods call cmp sbb mov adc dec loopne mov lods or adc sub in push mov rclb into inc sahf cmp addl add or sub jle les inc adc mov and test adc out inc mov scas adc orl adc dec mov (bad) cmpsb insb inc add jecxz add je fidivrl (bad) xor or jno pop je scas mov cmpsb shrb jo jge test sub aas mov push sbb es sbb outsb in jne cwtl fstl add adc pop loop in leave repnz adc push sbb add je iret lahf add ret sbb hlt mov push push decl and (bad) in test add or cmp fldl push pop push add or pop mov cwtl ret (bad) xor andl xchg aam mov in push sub fcompl clc add sbb lock or loope shlb mov insl cmp lock and and push sbb inc andl mov add lock add adc orl mov inc mov inc cmpsb adc in cmp (bad) sub rol (bad) push out push push rolb ret out sub test and loopne adc add sbb fistl (bad) popl sbb test push push sub out int3 jp cs pushf aam test out mov ret sub mov pop js pop mov or inc in or xchg fnstenv and jl clc or ret or pop cmp arpl and sub fldl inc incb mov jge cmc and cmpsl je,pn pop push push adc pop mov lahf (bad) mov test pop enter inc pop push inc imul stc pop or mov inc fnsave popf les push sbb fs and clc iret out inc inc pushf add dec push xchg aad lods inc jns das int mov push mov decl push xorb cwtl xchg jge jp pop push pusha xlat andb xchg pop dec pushf pusha pop jge jne xorl fcompl loopne in mov repz dec addr16 lret call sbbb xlat call inc in std cmp mov insb push cwtl das jecxz enter dec and ret je xorb enter pop sub push outsl mov loop jo cmpsb nop push rclb pop adc mov mov xor cmp je out movl cmc test movsl push ret adc pop out fwait inc pusha andb jmp or (bad) clc mov out in repz scas js js movsb push jp cmp in sub cmpsb je cwtl sarb std test das sete xchg repnz mov cmpsb int3 mov mov sub push jge rorb call (bad) stc sahf in fsubp and call imul lods fcoml xchg xchg xchg pop mov cmp sbb add iret inc cs or paddusb movsl add std mov add repnz or iret test (bad) movsl popf push loope xor daa and orb mov aaa pop movsl xchg clc lock call mov lods icebp dec jp or repnz enter mov fcomps repnz inc push loope movb psubsb test pusha xor call add cltd sub adc xchg and sub scas pop ficompl or pop mov mov cmp insl mov mov (bad) fcomp cwtl xchg push mov imul out fmull jae stc shrl inc lahf in mov add add push mov andb daa adc xchg mov sub popf mov or popf mov sub (bad) adc sub nop add jnp jmp popa test push push dec leave adc dec nop cmpsl nop mov inc imul sbb or in jno adc das add xchg cmp pop je rcl xchg addr16 jae add adc xchg ljmp test mov mov test addl decl adc cmpsl add loopne mov lret push push adc jo jno test imul test and adc cmc dec test add or lea cld dec loopne and icebp jo adc ffree adc nop pusha inc jmp lods dec add out ficom mov push inc adc jno pop dec aas mov push or xor add pop xchg test sub push cmp es cmp mov cs cld mov test cld lock dec mov inc and and hlt daa loope mov jp call mov lahf or fldt add push xor lcall cmpb jb daa sbb (bad) jmp shrb inc sbb jb adcb in (bad) pop and lret lcall pop or add ja xchg (bad) ds xlat xchg sbb cmp add roll push mov scas adc mov mov and emms cmp mov test imull pop jbe add es fimul adc mov mov or pop mov fs xchg sbb push xor sbb sbbl out pop cli insl pusha push mov push adc aaa xchg orb push adc and pop inc add jo add adc fwait push fldl mov push sbb dec mov push pushl cmp add xor xlat inc and push sbb test add js je pop dec pop sub and jo add insl js add jle and pushf stc push mov pop adc sub rorb gs ret imul popa hlt push lods xor sahf idiv (bad) nop pushl cmp pushl adc xor add sub aaa mov mov cmpsl mov and dec lods nop and icebp sahf stos xor sub fnstcw mov jl (bad) out add cmp inc adc enter daa sbb mov mov repnz or and test jge mov sub popa xor push shll mov dec jno dec ret pop inc sub rorb xor sbb or hlt add jmp pushf cld jmp xor inc rolb adc add idivl push cmp nop xchg or or stc mov in dec add xchg (bad) mov loope ds aas and jb adcb push push mov mov jg mov xchg (bad) mov lea loopne sahf mov sub add jne pusha jo add nop jno (bad) test jle mov add jl add adc cwtl rorb movsb enter ret push leave jg ror (bad) mov push ffreep push lret dec pop pop mov mov mov adc add aaa icebp jge mov xorb js adc or push cmp mov popf cmpsb pusha cli int int3 dec and sub xor shrl int out xchg int iret call out adc mov cmp mov outsl ss mov cmp dec sbb sti cmp xchg cmp or adc add rcl pushf idivl sub inc xor lret xor int dec jp fcoms push testb mov movsb inc xchg bound daa ljmp popa cld cmp adc lret es sbb jmp inc outsl push ja and add xor bnd sarl jge inc mov inc inc add pusha mov sahf cmpsl in cld clc push push or gs nop clc nop in or mov push xor in mov lock cli push push test cmpsb cmp sbb (bad) bound (bad) cmp sbb and push out shl sbb rcll addl add mov inc outsl jmp pop mov sub push rcrb add test jne jns xchg inc nopl adc jae scas les pushf les xor mov push mov lret ljmp push pushl aad mov sbb xchg inc inc pop pop daa loopne fcmovu pop xabort sbb scas or loope sub scas sarl push add imul leave in jge adc adc push loope or movsb sub sub add xchg aam divb add insl jle (bad) xor enter sti ss lods mov pop add enter push enter pop in loop sbb jno mov cltd push push mov fwait lods mov aam adc pusha xor adc push je or pop adc adc mov jp js pop sahf dec mov mov lods jno daa movsb aad inc insb push pop shr xchg ja mov xor repz sar nop jo imul test hlt xchg inc push lret mov rol and add jp test mov push les arpl or or cmc mov pop ret cmp jge push movsb popa add push mov stos call fs lret fcomps xor mov mov pop dec enter xchg rcrb in xor mov jbe mov sub sar addl fdiv sbb jle or dec push mov inc push adc pop insl dec jo add (bad) cs sub ss rol mov loopne push pop push dec in dec jl (bad) es fnstsw sbb cmp rorb sbb adc mov or mov icebp inc jl fisttpll jo insl cld and je inc imulb stos test cmp jge xchg loopne mov fsubrs inc or mov pushl xchg inc inc pop push (bad) mov push jp xchg mov or cmp adc push mov xchg push xlat add inc sbb out (bad) or insl adc inc xor lock out adc scas mov inc into jl (bad) movsb pop cmpl add pop sbb sub push leave (bad) xor pop cmp jmp sbb or (bad) add scas pop cwtl jne lahf rorb mov sub test les or pop add mov cmp or adc push xchg lahf shrb js xchg mov rorl or or sti sbb push adc push jmp cs jno cld push cmp nop sub add ss (bad) mov insb mov adc dec push lret gs addr16 mov cmp popa and imul sbb fsubrs lods (bad) or ret or push test (bad) xchg stos fsubrs das sahf test loope jge adc int3 add in cmpsb sbb test sub ss test sbb adc mov into (bad) mov je mov inc outsl dec or test sub push push btc fwait mov cs dec enter pop jne dec int push jmp mov mov aam inc leave lods xor jecxz mov jmp pop orb fdivs xchg arpl cwtl fstl cmp or pop or or lods sub inc and imul xchg jecxz sub jmp rcrb or sub test into xor cltd push bound sar add mov pop pop ret pop xor push addl jne,pt add sahf jge jmp bound in add xchg into sbb (bad) ss fidivrl cmp add dec cmpsb pop push push rcrb adc cwtl push idiv push rolb xchg and inc (bad) sbb loope push dec and outsb nop lock and lds push rorb xor lcall or mov mov add or cmp xchg cmp ds test cmp or cli cmpsb cmp fimull push xlat imul iret add dec clc cmc xor xlat imul mov pop ficoml clc mov inc or xor add rorl xor mov and push xchg push xor lock std and ds mulb sbb push lea add jne push les arpl inc rorb test jb push add jge shrb push mov movsl stc inc mov imul jg loop pop (bad) dec jne push shlb pop loopne pop cmp arpl push sub cmp lcall add stos pusha call fstl push (bad) mov lock div or jne lds mov pop xchg sub enter mov cld test (bad) movsl ror mov mov adc add jae dec movsl and jle and fcomps js pop pop gs xchg int3 jbe iret mov (bad) lret inc jo dec daa movsl insb mov arpl or subb imul jmp xchg in sbb and add out push cmp sub pop xor mov mov mov xchg leave add (bad) or dec loopne push jle testb or jb pop outsb adc mov xchg sbb inc jl lea pop jb cmp xor xor sub mov sub test cmpsl sti or adc fdivl sbb pop pop push into sub hlt add clc in ja add in inc mov aas jo adc inc roll insb mov xor je cmp mov xchg mov mov push jp hlt fstpt ret arpl jbe fistpl mov sbb sub mov mov pusha lret int test sub mov sahf inc stos mov add or dec inc and jge je into in data16 in jo fcompl movzbl mov xchg push iret lret add cmp or lods shr hlt stos stos gs lret cmp or (bad) sbb push add add jge test add pop or in jo adc sbb rcl inc (bad) and test mov mov or (bad) lock hlt fucomi cmp clc iret cmp pop lret fldt mov xor popa mov leave in mov or cmpsl inc fdivrl and xchg or lock adcb lret call sti jecxz subb punpcklwd loope or mov xchg adc pop and shr cltd iret mov jne aaa shrl scas or inc pop dec sub (bad) mov pop test dec cmp or popa notb or or cmp push clc cmc adc lds push add push (bad) and push rcl sbb test xchg pop aaa push cmpsl jp push aaa nop mov dec fs fcoml mov call and pop xor (bad) fdivrs or adcb mov mov jbe add ret pop and lea icebp call jp adc shlb dec mov jecxz out movb iret mov adc outsb inc add push notl ja orl sbb test add add ficompl and mov iret (bad) lock cmp movsl xchg xchg mov push or aaa xor pop mov adc or pop jne adc addl jl (bad) call jg outsl in (bad) ds dec cmp add add add pop jmp daa pop jmp sub push call and pop cmp push and push add dec je (bad) ret jo call push mov pop push xor pop sahf ljmp in or pop lea xor push jmp popf test add idiv call popa sbb or test (bad) mov aam ljmp add repnz pusha call and adc or inc js adc adc sahf xor mov pop rorl adc fisttpl add or scas xorl push mov push push xor lcall movsb stc sbb cmpsb sbb jb add jg insb pop leave inc scas mov ja (bad) dec jb push repnz xor add es test pop mov das xchg fiaddl addl and sbb jecxz dec fdivr call pop insl imull dec jnp (bad) ja cld xor mov inc rcrb insb ljmp divl insl mov dec fsubrl sbb fwait xor hlt dec sbb inc mov xor push cmp push xlat js xchg mov into inc pop or sbb enter push pusha sub sub add xchg dec popa mov clc stos andb mov arpl je xor add sbb nop pop push and daa call (bad) popa mov add repz movsb es enter jbe hlt test pop sbb arpl xchg sbb jbe pop shlb dec or add leave adc sbb lock fstl xor (bad) jge push scas dec xlat push mov aas fucomp lods int3 cmp cmp mov pop mov or inc jmp pop jb xchg adc aad sti push lods adc sub mov mov mov mov push jo or ret pop gs add mov xor insb xchg test fcmovnb adc cli dec (bad) sti (bad) in mov inc (bad) cltd adc insl push popl rorw fwait or mov dec clc das jbe cmp adc sub fcompl push loope sub pop pop sbb aam sub mov movzwl mov (bad) mov in fimul pop push pop call adc insl or mov lea loopne rcrb test jb js lock xor pop fstps notb nop jae push xor and cmp sarb inc cmpsb add imul pop ficoml dec jmp (bad) mov push testb mov xchg or lea mov push mov mov inc or ret test lret jo add add jb jg les inc aad push jno push cli imul and sub dec xchg adc mov dec loopne daa dec push je or or lea int test movsl iret add and jmp xor loopne call js sub (bad) pusha and inc xchg push sarb mov mov imul xchg mov pop sub push lds add dec movb dec xchg sbb jne (bad) fs cmp or ja xor ret shrl push cmp or fldt add loop add add fdiv or mov in inc jp and or xchg sbb subl imul fs rorb or inc jns cmp jbe mov movsl mov cld and movsl sub fildl cmp mulb push push adc ret stos inc add adc gs out push and sub push aam (bad) enter mov jne mov test in inc xor sysenter das and add push add cld xchg push sub jno pop push test and call in (bad) rcl neg jg sbb shlb cmp in (bad) jnp mov int3 daa and xlat xchg addl in cmc nop leave sub add mov and mov sub popf outsb push and addr16 pusha jl test pop push dec push mov out jns dec sbb cld mov dec jge sbb xor cmpsl add add sub ret mov mov bound mov xchg clc inc loop dec add cmp lea pop int xchg push or add movsl gs (bad) pusha mov test movl adc imul andl insb mov mov ja cmp cwtl jo push imul call sbb pushf shrb in loopne lock js testl call add jmp and or mov mov or cld in js or in and xchg gs dec push push sbb push and xchg jmp lret push adcb push push das fs call add mov fsubrs (bad) iret or or adcb call or sub jle cmpsb inc and cmp add push rcrb mov enter push xor push xchg sub cmp fimull lret pusha push ja imul idivl xchg jne push jmp sarb xchg fidivrl fmull xor mov add adc dec jecxz fldl inc sbb push push test push in mov mov (bad) dec jbe (bad) call sarb sbb cmp pop fcomps fldenv test mov xor pushf cmpsb (bad) aaa test adc inc ret xchg lock cmp dec pop add or int3 insl rorb xor dec or ss sub pop sbbl and xchg push int3 dec js mov pop adc pop mov xchg stos jbe and sbb push call mov inc in clc jbe mov mov mov insb jb (bad) std xchg add movsl add push imul aaa adc (bad) (bad) and xchg adc fistpll cltd in imul and stc jbe stc mov arpl mov lea push cmp pop mov sbb (bad) dec adc xor or mov cld xorb inc pop and mov stos arpl or mov adc jbe xor sbb jo sub inc and cmc xchg add xor (bad) cmp ror xor sahf push jl mov pop or xchg pushf sar test iret jmp dec movsb xchg push sbb xor das adc mov fwait push imul pop jae dec or ret jo inc or inc adc je incl jo jno adc push pop dec test or mov dec push pop push dec adc sbb ljmp and adc push sbb add lret mov inc into addl cmp enter mov or xchg and push inc sub mov inc rclb cli adc sub pop push inc adc add cli sbb add cmp scas inc cmp je push push or sbb inc pusha adc mov xchg mov jne or add fist add inc or imul lret jmp or movsb call fimul orl sti mov sub and aaa out subb mov cs or adc pop adc jecxz cmp sbb imul xor add push leave jl dec out inc scas pop push mov xchg sbb les adc jmp cmp pop mov push ds cmc outsb pop cmpsl add dec sub inc mov mov xlat mov or je and sub jl cltd adc mov iret call pop mov (bad) mov add fprem sub mov jne dec loop mov and hlt lea sub call push mov mov clc clc and and in fiaddl cmp in dec call clc cmp dec cmp das mov cmp sub loopne pushf popa ja inc adc movsb pop mov inc jo adc sub shr or pop (bad) adc xor popl in pop jle jb int shlb insb sub clc jne push push xor jmp iret subb xor push push inc sarb mov call mov mov mov jl mov dec (bad) or lock es dec out ret into add stc (bad) jb push loopne inc popa les (bad) lea test xorb sub bound xchg test je sub flds mov inc and dec sub lock sub mov sub cmpsb lret imul lahf test push in clc sub or pop mov pop pushf pop sub (bad) shlb das dec inc dec cltd pusha fsubs js lret pop push adc test add cs jmp (bad) mov dec inc divl pop or xor xlat jno mov dec imul pop and inc aaa cmpsl jmp cmp jge xchg in scas xchg mov insb sbb pop stc xorl sarl jle xchg cmp xor bound or int3 jge push ret ds insb add inc imul pop adc ljmp (bad) jl (bad) call push mov push adc push sbb sbb xor sarl xchg add and test mov mov test in adc inc inc sbb mov pop add (bad) pusha inc das xchg dec xor jb or inc adc lahf jbe jne pop or adc cs neg push int (bad) repz add jp mov nop rclb mov xchg pop or ds or lcall rorb in lock cltd or aad dec loope lods inc les and add push jnp push popf inc adc jo adc cli gs dec ficoml add sbb inc cli mov ret out cwtl ja push add add jae arpl hlt jle xor jg xchg pop call fidivrl insl mov mov bound int3 add gs cmp add lock pop or xchg call mov fsubrl rep jmp xchg fcoml ss push push fs xor sbb mov pop jge pop add insl clc cmpsl xchg nop ja mov pop pop xor insb cmp fcompl (bad) xor rclb es push push out xor mov out sbb add and add push push and jnp xchg cmp push push push shlb mov ffreep (bad) iret rorb js lcall push xor add adc les cmp movsb mov jl mov push dec lea add xor data16 pop aaa add adc push test push push dec adc sbbl out mov cmp (bad) xor jp addr16 pushf call cs mov xchg sub push data16 push push push push jns inc bound gs mov out push mov inc js insl sbb add and stos fistl push or mov loop mov and mov in or rcpps hlt clc cld or fmuls xchg pop into int3 loopne movsb sarb (bad) mov xchg sub add imul cmpb and push pop sbb rolb std imul xor mov (bad) pop xor lea scas (bad) xchg mov cmp sbb push cmp loop in mov add call loop jae mov ja lcall fstpt xchg jle mov push mov add sub or push cmp sbb jno sub jns es movlps and cld (bad) test or xchg daa or lahf aaa int imul mov hlt add mov rcrb cld and adc dec inc insl xlat mov sub push push add mov fistp or add or sbb add jb mov adc lock pop je daa orl cmp and push test jae add sub loopne add push adc push loopne rcll and movb add bnd sub xor pop orl inc or or xchg and loop pop mov je mov imul shl add sbb add dec mov add push adc test (bad) mov aam ss cmpsb xor or add das sbb add xor sub sub adc lods xchg jno mov jno testb sub push or mov add pop mov ret inc sahf push add push ss int cmp pop jge (bad) jmp inc (bad) pop lret push inc cmpsl xor pop or inc add add dec arpl lock (bad) lahf dec dec dec adc jae scas push mov sub out fs lock shrl or loopne add mov je sbb imul or sub test movb fstps jmp loopne xchg mov test cmp cmp xchg popw jmp or test or jno push mov xor movsb xor push scas add inc xor and loopne xorl cmp push (bad) push rcrb push sub and cmp jno mov addb mov cmp and inc iret pop jg add cmp mov cmpsb jl or movsb add loop dec cmp nop cmp (bad) dec or push add test loopne sub mov dec imul test sub hlt mov adc jmp and fiaddl cmp and sbb and imul fwait xchg ret push push aas loopne mov out fsubrp jbe test jno xchg test in add jo test in call popa cmp stos inc mov pop sub push add test fucomi push mov clc ret loopne inc mov adc icebp and xchg mov mov js push cli int3 pop nop push in and and scas or inc cs pushf adc inc or out in loopne int3 mov add (bad) adc test inc addr16 enter mov test stos dec sarl add rolb rcl push clc adc xor out cld comiss stos pop push test xor adcb fsubr shrl mov in sub sub xor cmp xor xor lret dec call negl sub add int hlt sbb (bad) push out pop cmp jo popf xor mov stc xchg test inc mov jmp sub or pop or add pop xchg ds mov sbbb jne pusha xor leave add je or xor andl stos xchg sub add or sub lock out xor inc mov in pop aaa lea pop adc xchg repz cmp push push mov jle pop xor push call and cmp cmp dec sbb sub inc push adc push xor test sar mov or insb jmp scas push sbb ror in jbe inc push cs lods adc movsl and mov roll enter sbb in enter add (bad) pusha fcomp seta pop cli loopne xchg pop sbb and mov add nop push rcll shll xchg stos sti inc pop adc sbbb jecxz (bad) aaa xor out cmp adc cmc add or fdivrs call in movsl lods lret cmpsb jo push mov (bad) testb loope imull test loope mov lock xchg fs sub movb notb and clc daa inc test push mov pcmpeqb sub push cmp les pop mov icebp ficom dec mov test sti pop adc mov dec call dec cmp jmp insb cmp add dec xor mov or inc cmp add sub and lods inc stos test inc xor ss pop jnp je loope je add and addl pop inc adc and jb rorb mov je lahf mov lea jbe cltd sbb add inc (bad) cmp dec and (bad) mov repz xor loopne loopne pushf lods sbb les or outsb mov fcmovnb mov add pop es xorb stos call or mov and loop inc das inc fchs pop inc pusha jbe jle mov cmpl push mov jae mov mov dec adc mov inc dec xor mov or pop test pop sbb mov xorb add cmp fnsave jno aaa add gs add adc push enter push adc adc pop xchg jp dec mov xchg push pop faddl pop xchg cmp (bad) xor or pop adc pop fwait cli and in das or pop push fwait xor pushf cmp in cs add sbb pop xchg call shrb mov or cmovg or or or sub jg enter cmp xchg icebp jmp call movsb das lret cmp xchg insb test xor inc jecxz dec sbb inc sbb mov sahf sub push or jo shrb dec ss fnstcw cmp pop adc sbb inc push or cmpsl xchg xchg mov mov (bad) mov inc (bad) rclb inc sahf push std stos cmp test or rolb sub dec addb add add jno hlt push ret out in add pop test mov sub sbb or out in mov inc (bad) mov or push inc pop outsb and xor mov push sbb sbb sbb in dec sub xchg mov add and mov loopne sub xchg pop cltd fs xor loopne (bad) mov test sub scas das stos xchg xchg mov ret out out cmpl cmp sbb xchg insl xor mov dec dec xchg pusha out or dec test das je adc push es in arpl xor adc movsl dec inc or dec or js add inc add inc mov and and sub adc mov sbb lcall add enter rcrw mov mov clc lea add xchg push add lret ja add in cld ds lea add lret ficomp inc mov push or addr16 (bad) mov fs adcl xchg pop pop (bad) test daa mov scas sub push and and cmpsl lret add push stos clc dec (bad) loopne mov xchg adc test sbb repz or pop test bound imul mov cld mov in das imul xchg push pusha or push fbstp pop push mov jne cli fsubrs cltd cmp inc push mov call fwait lea push call mov sub sub notb mov adc movsl call add cmp jne dec add sbb sbb rolb xchg mov cmp or mov mov call mov or jp mov pop popf and sbb nop lock (bad) leave pop dec inc jo jne add or fcomps jmp jge inc adc je (bad) mov sub jl add test jne dec add jo pop inc rcll xchg es dec scas adc popf xlat pop push push mov insb mov shrb sahf lret call leave inc dec fiadd rep leave adc clc clc add jae push rcrl adc add mov sbb mov sub sbb cmp adc push mov ficoml daa dec pop int3 sarl push fdivl push out iret mov pop enter nop scas add fiaddl mov push (bad) js add add jne das enter mov adc (bad) ds inc sub popa loope cli mov rcl push dec cmpsb sarb jnp add mov nop inc dec pop lret adc or pusha jg movsb ss cmp stc in hlt adc sub sbb rcrl test or push inc mov adc bsf aad not cmp push fmull pop inc lods aam out pop pop int or mov dec (bad) fldt sub mov out jbe sbb movb out cmpsl mov je add jle cs into xchg int3 js adc xchg sub xchg push mov pushf dec push (bad) das loop in das cmp sub or jle es (bad) mov xchg je inc and adc das test adc lods pop es cmp xor ret in mov jbe (bad) stos add lock inc xchg stos inc cmp add lods mov lods addb aaa sub pop cli pop repz cwtl adc and push (bad) xor sub (bad) and xchg push int3 sbb cltd in dec insl sbb jg cwtl xchg rorb int3 adc pop (bad) rcrb xchg lods mov int3 in and out mov add cmpsl insb push dec std push jo xchg ror es mov push adc or inc adc and push movsb push push insl test lods sbb push pop test aaa xchg in push enter add es leave les imul mov push loopne dec std enter push call mov clc cltd out inc nop cmpsb loope jg and inc add or in and outsl stc imul cwtl cld inc cmp and sbb add and add mov fadds sbb ror adc pop or (bad) addr16 insl xor mulb aam cmpsl cmp pusha or pop pusha sub xor (bad) cs shll inc (bad) jo ds (bad) shlb jge jp mov movl push popa les aam stc sbb xor adc das test loop mov dec gs adc xchg fsubs cmpsl cwtl push hlt imul outsb pusha das lea aam push (bad) push (bad) jne add dec cmp jmp js push daa mov xchg sub jnp push das mov dec lret inc cmp pop mov mov dec xchg sub xchg or inc cmp in mov daa sub ret add subl inc imul push popa sub dec adc sti dec or mov (bad) loopne dec rolb fsubr or adc mov (bad) mov add sub xchg loopne rolb dec mov jp daa shrl cs sbb cltd idivl add into mov xor je mov insl sbb or je shrb pop enter xchg fcoms scas mov inc lods sahf mov push clc xchg adc sbb push jl inc and imul dec ss fcmovnbe pop pop out pop mov inc sbb cmpl mov mov outsb aaa enter (bad) adc mov push and mov hlt mov or xchg and xchg add inc ret fwait inc push mov ja pop push jmp js nop mov cltd mov add or mov jb adc cmpsb cmp push add in sbb mov push jmp ret fstps out xchg movsb imul mov arpl gs add sbb mov and les push dec cmc push aad mov pusha xchg lcall rcll scas popf xchg inc scas push sbb sahf sub sub out cltd jbe orl in dec pop sbb cltd js daa mov insl int3 stc lock add add enter dec pusha add pop fistpl inc jecxz rolb xor push fsts outsb adc add js out dec mov aam hlt lea dec popa adc push push testl mov fnsave add xor cmp dec pop xchg or sarb nop xor ss sub add mov pusha xor adc enter test adc mov cmp mov cmp inc mov push aad jp cmp cmp ja jecxz add dec adc sub popa xor push insl mov adc push mov dec fxch in (bad) call sbb mov adc cmp or sub xor cli or jp pop jle (bad) mov fcomip cld push inc (bad) repz (bad) xchg icebp jle xor and mov sbb sbb mov jl cmpl repz outsl (bad) cmpxchg enter add mov cmpsb fisubl icebp imul (bad) and mov shll cmp (bad) aas pusha dec xchg adc call orl jbe repnz aaa jnp mov ss test jbe sbb sub pop inc push lahf mov lds and adc jecxz test mov imul xchg dec xor (bad) (bad) xor push jge sub cmp in and adc cmpl test adc adc jecxz or fisubrl push pop jne xchg add add push lods and push (bad) es push scas and add outsb fadd rcrb mov adc stc adc out mov xchg push aam pop or xchg pop or in or push push adc xlat push ret test shrl imul pop ljmp pop pop or pop cli (bad) clc pop js pop xchg push or sub aas (bad) cmp and js push dec jl inc das sti ret add sbb cltd aam (bad) lahf mul adc lea fs cld cld loopne add lret mov dec push aam cmpsl cs insb enter jle sbb dec clc mov (bad) loope mov adc pop idiv push in mov outsb jmp dec cmp (bad) xchg (bad) add orl pop push lods jne xchg xor popa cltd movsb mov mov cli je cwtl shld cmp je in pop (bad) repnz push stc fcmove call xorl ret into fildl lock cmpsl ret lcall inc and mov xchg mov push xor ret mov mov pusha mov push int pop hlt inc sbb leave mov lea dec inc ffree xchg in push jne or in lahf mov push or mov ret call or popl dec mov pop push (bad) mov xchg mov cmpsb pop add inc or js add xor pop cmp adc adc mov and test aam mov (bad) or addr16 xchg (bad) dec mov loopne mov into int mov push ret mov cmpsl lret pop (bad) xor into pop (bad) (bad) dec imull or dec ja sub sub or ss repz add dec dec loope mov sti nop stc xchg or inc movsb arpl outsl into dec repz jp test push jae clc sti xchg jo or sbb je sahf push xchg jne and into xchg jno push fadds mov pop ret mov mov mov mov adc stos mov inc dec mull or xchg (bad) mov leave xor push push aas mov cmp adc popfw inc aas aam aam int dec add mov mov (bad) je into dec (bad) mov stos cmp xor cltd push jo xor sub xor mov fs add js int3 inc sbb (bad) iret je sbb jne mov adc mov sbb sbb push pop lock push es jno into xor inc inc xchg insb inc adc adc push jo push inc jmp dec jne aaa fwait pop aam stc lods push jno sub cmp adc sub fnsave add outsb lret push loope and int3 push mov add push nop loope lds pop fdiv inc or hlt popf add pop imul unpcklps or adc sub lea adc xor add das dec xor js xor sub (bad) movsb in testb jne cmpl aam (bad) jmp pusha dec fs dec add iret ja insb push mov int3 sub pop jo push call xchg loope aaa js data16 loope pushf stos sub inc mov int3 fnstenv inc xchg test adc adc adc iret repz cld lret push mov cmp jae push add jg inc pop push das adc shlb or and push orl jecxz aad or mov and xor loopne xlat mov push sqrtps lahf dec mov cwtl push adc push jb adc clc (bad) push push fwait sti xchg dec or xchg jne gs mov and add ret popf xlat cmpsl and das push or leave clc or cmpsb outsb jle mov pop xor pop pop push jnp sub (bad) xor sub jb add insl sbb lcall add insl mov and cmp adcl sub (bad) pop add in add daa sbb sub or mov aad jp jmp cmp mov jmp and jne push sbb add lods add pop xor mov push stos gs (bad) stos dec imul adc push test pushf pop push pop xchg xchg cs dec inc push add add sarl pop jne sbb les clc aaa sbb fwait and push xchg pop xor imul xor xor fprem test repz insl ret enter add mov push cwtl cmp dec and test add cmpsb loop sbb sbb pop fs aad dec adc xor push push inc push mov add nop mov xor add mov and pop mov pop sti fcoms pop mov sub ss pop out aas add push pop test adc pop shrb dec ds xor (bad) and test xor adc sub ret sbb data16 mov pop dec jecxz pop daa pop mov xor sbbl or cmp mov imul or sbb and nop gs inc mov nop xchg sub test dec adc adc xchg in adc pop xor cmpsb dec test js xor adc jo mov adc sub and mull or (bad) jno into es jmp addr16 dec rolb (bad) jl sbb pop mov dec js sub lds sbb dec fidivrl inc and add or or (bad) and dec adc int test hlt jle lea sbb ljmp inc sub pusha adc jge call pop add addl or xchg iret inc pop out push addr16 in mull gs mov pop push pop popf imul and imul dec es push pusha test push call pop push repz xchg mov jbe mov ljmp movsl es loopne or cmp jbe cmp inc (bad) dec out and and ss addr16 loopne (bad) mov mov adc in or or cs mov jne ret jp push mov lret outsl add cmc out addr16 nop sub sbb orl adc pop mov adc or stc cmpsb repz xor stc pushl xchg addr16 or push add movsl cmp cltd cmpsb call aam mov xchg cmp xor push and iret mov addr16 call push mov jne loopne negb jl and mov xchg orl je push stos dec and pushf dec push lods rcll notb ret and js ds cs jmp imul add loope addr16 and pop dec loopne es in sub lea pop mov (bad) ja pop add and mov ss pop push icebp adc cmp sbb pop or ret insb fs sbb pop cmpsl es inc push or xchg jecxz test jle xor lods test dec sbb incl in mov insl push mov add push insl add lock or jbe adc daa test js pop mov cmp mov sarb jno push arpl je mov xchg hlt dec or popa iret mov clc mov mov mov inc mov xchg sbb or inc sub mov sub mov cli sbb inc jmp shrb pop lods pop aaa sbb inc xchg inc dec adc sub ret mov jecxz xchg lods decl (bad) (bad) iret fwait jae cmp push push das (bad) pop mov add dec jg sbb leave mov push fist sub ficomp ds enter notl aaa push shrl jle fnclex fstpl push xor push test sti ds adc and mov jle cltd sub pusha cld xchg or or mov call dec push mov orb inc sub sbb mov and or jae cmpl es (bad) push aam pop and pop std repz jp xor add sub adcb xchg shrb sarl jbe test add lock ficompl add ds mov mov lock test push shlb cld pusha movsb jnp jge addb pop out and rcrl dec les scas fwait jnp sub sarb test sub les mov cli jns or imul das aas loope jecxz imul add xchg pop push sub ret movb pushf dec repnz mov xor aaa xor sbb out adc inc loopne repnz push mov dec es insl pop sub mov mov mov pop jo and push out or mov dec inc push negl push lret push sub or ret popa and xchg inc pop inc ss sbb xor pop jmp in call lods push pop lods push in icebp inc xorb cmp loopne cmp xor inc nop dec test (bad) cld xchg imul mov dec mov jecxz and jbe sub and aas add dec xchg mov into (bad) push (bad) ja (bad) mov (bad) repz fstpl call dec pop mov rclb and push sbb ss ja mov popf sbb loope inc mov jmp fnsave xor adc incl rol mov scas aas into mov fisubr sbb pop xchg push sub lea aaa xlat in dec jb mov xor xchg xor rorl push or rcl stos out and (bad) or repnz or pop cld mov and or sub jo jmp lods cld xchg cld inc pop mov mov js mov push js jns xor mov js test add xchg xchg jl dec and dec cmp dec pusha xlat insb and fist imul mov aas dec in jmp in idivl cmpb xor inc sahf dec dec pxor xor or add out cs adcb inc dec dec ja mov fldz cwtl mov clc popf out add jmp xor dec add (bad) cmp xor mov adc data16 or rcrb test mov mov pop xor cwtl adc dec ljmp arpl add xchg fldcw cmp ret mov clc sbb popa push fsubrs movsl adc sbb xor push clc daa (bad) push mov xchg xchg dec xchg cmp fs nop js cmp or inc adc in negb sar call cmp or roll jo adc cmpl int dec (bad) incl (bad) (bad) das push pop das test mov (bad) cmp loopne jne hlt enter inc imul nop xchg pop mov ljmp loop add push nop (bad) in pop push mov cmp bnd lcall das jl pop xorl call pop pop xchg xor and mov je aam (bad) mov test pop mov and jmp inc sub adc aam xchg nop imul mov xor mov cmpsb xchg or int3 ss mov sbb mov jnp or arpl insl jbe inc int3 call (bad) mov cli fdivrp jp inc lcall and and mov mov jge or psraw in sub fisubl xchg mov or push clc add mov xchg sub jae sbb push jb or push notl mov and insl xor jne rcrb sbbl jnp mov js and push jl dec dec mov stc mov leave mov and lret outsl les sub push dec enter bound xchg pop fdivrs push mov sahf xchg idivl movsb ds add sbb js hlt xchg into lods or (bad) mov nop add into dec sbb int mov mov xchg mov inc fldl mov xor jp xchg dec sub dec addl test push rclb mov pop or dec dec fdivr push pop mov push loop (bad) rep (bad) pop adc mov stc push adc cwtl xchg pushf lcall nop adc nop or sbb outsb push jns jge popa dec xor pop mov rolb push jo xchg idivb out call pusha movsl cmp aaa pop dec xor and jge lods sti ret divl mov cmpsb mov scas mov add es das es adc and or in in dec insb push popa dec sbb out adc mov or cmp mov inc movsb daa enter xchg push cmp dec and call (bad) test (bad) xor repnz in xchg std hlt push ret nop jmp and add xchg lods movsl das and aas push or mov popl mov sub add cmpsb aaa push xor and sub push stos movsl mov add xchg inc pop pop aam pop jp je ret fiaddl or jb (bad) xor rcl clc xchg dec dec dec movsl sti push inc lea cmp jae push jne ret (bad) out push jno jne sub imul inc cwtl sub mov push adc call xor xor xchg cwtl (bad) shll movsb sbb in inc mov pop ja jo adcl divl iret mov in mov xor fisubrl jne adc and xor push cmp jmp addb push es jmp push jmp add jge lcall insb jbe out ret cmp and das sbb mov push pop je repnz push lea xchg add mov lea mov push pop loope fadds add je adc dec pop or mov icebp fiadd push push imul lret (bad) mov mov add repnz xchg push out fnstcw dec add stos ds add data16 (bad) mov fs repz xor push push lock je add jo imul stos dec cmpl loope adc dec inc call fs mull aam test fwait cltd (bad) sbb adc push into and (bad) and push or das rcll push sbb mov push and push js (bad) clc mov jae jl push and ljmp add cmpsl data16 sub lock (bad) movzbl bound (bad) jmp add inc inc cmp mov jge jb xor sbb add bound fisubl sbb add test out lcall jbe,pn xchg add sbb pop push sti (bad) out xchg dec call jg jmp jge lods jae arpl jb inc push inc call add or dec xor aaa add sbb inc push lret lock lcall insb movsl xor and or fsubl inc xchg jmp jne cli jmp stos mov hlt pop adc sub pop adc xchg push sub push cmp mov outsb dec mov lahf js pop jp sarl or mov push cs bound mov adc and ja jbe adc xlat and pushf adc mov insb insb inc jns push insl push mov inc je adc mov orb pushf or xorl xchg inc je adc ret ficoml inc adc add xlat cmpsb je,pt push stc cmpsl jmp adc jne push call test add push mov outsl mov xchg test add push rolb jmp cmp popa leave and loopne pop lods popf mov sub or sub cmpb or sub jmp add pop rorl or punpcklwd mov (bad) adc jle jbe jno ret or (bad) dec cli inc rcl call ja imul push and cwtl icebp push iret imulb xor mov into in js ret mov inc push or xchg adc in in das add adc cmovno dec loope adc rorb or adc pop or xor (bad) shlb mov jno arpl add lds and mov test jb and fucomi or push xor cmpsl or subl in fsubrs xor inc icebp inc xlat inc cmp lods icebp lods out mov mov mov enter add cs into out mov pop and outsb int ret cmp mov movsl xchg or decl fsubr push popf jl inc ret xchg pop lods push lret mov cwtl jae and mov lahf jbe adc fwait rolb or jp mov cmp adc sub cmp pushf mov mov xchg add scas nop sbb jae out push or lcall push cmpsl inc arpl dec cmpsl dec inc add xor leave mov ficoml ret inc and les push or inc sub sahf out imulb or or dec mov cltd dec loopne dec lds shr xor pop stc jge lock outsl movsl mov dec test jbe add jl or scas imul mov ljmp cld inc ja push and mov add pop cmpsb lock sarb roll imul arpl test or mov clc movsb jl (bad) jmp test sub xchg adc pop cmp sub popa and jb insl push mov cli pusha mov mov cmp push lock jb enter mov rcrb int3 xor sbbl aam pop push enter cmp pop inc clc jae loopne mov and pusha rclb mov adc in or out popa cmc adcl pusha ds and mov dec pusha mov cwtl rol cmp or and dec rolb jle pop jo divl iret xor fadds push aam imul jnp lea jle or add out cmp sub dec sub (bad) sarb xor ret mov mov rolb xor (bad) bound js sub push push push sbb aas inc or xchg ret mov rol and add xor pop sub (bad) push std test pusha lahf andb fs lret jbe xor je ret movsl aaa repnz mov call mov mov addl push mov mov stc pop ja inc mov fsubs jns pop scas repz inc jecxz pop push sub and in inc or xor mov xchg (bad) and add push ficoml jae test nop cmp and pushw call ret inc call add pop (bad) cmpsl or jl xor add or daa (bad) mov jge clc adc aad test sbb mov jb pop xor push cmp cmp push dec inc jne xchg clc xor jle div cmp add out or fmuls lock mov dec push stc repz dec sbb dec push call ss (bad) or (bad) xor add dec sbbb jmp daa in addl jp les aaa (bad) xor lret es test incb fdivs mov add or shrb mov into fs inc ret push inc push sub sub inc xor adc inc inc mov (bad) lods mov cmp imul or cld lods jns inc mov push movb push call pop inc sbb or repnz jne inc inc (bad) lods movsl jp jmp mov bound sar mov inc scas cli rcl push add inc mov mov and (bad) iret or pop dec shrl xor jo ja (bad) cmp mov xchg sbb jmp jnp lock sub nop add andl imul mov mov mov sub mov xor push dec (bad) aad lock add pusha inc lods (bad) icebp pop jmp leave push outsl push call and push and inc push xor sbb test repz mov clc daa sbb call xchg push popa push ljmp xchg test int int3 adc test rclb or mov js int3 cmpsb add push ret sbb or add pusha mov nop jmp jmp mov mov add mov sbb dec or push lds adc jmp pop xor loop test jmp pop add cmp or or mov sti imul lds cld cli xor in movsb cmp in mov add xor pcmpgtd ret push adc add jle sbb subb ffree pop push push xchg nop dec fstpl push dec jo mov hlt sar divb rcl cmpsb les test inc mov sbb pop ljmp mov xchg xchg xchg aad and jp sub sub call mov or cmp loope cmp push mov popa mov fwait js add inc popa out sbb loopne mov sahf je aam in or pop mov jae dec (bad) sahf sub mov push cwtl dec push insl roll or sarb dec push js pop add popa std mov push in jno dec setge xor loopne xor add cmpsb mov xor push and fldcw (bad) test jne je in dec (bad) jmp jle and push xchg adc add and jg xchg mov push into add mov in icebp test mov pop int dec rcrb mov push push outsb cmp mov xchg nop call inc pop ljmp dec and in inc loope adc mov mov ret add in pop (bad) and pop (bad) and incb push sub push sbb inc add or nop dec jnp sbb sbb les inc xor pop sbb xor xchg lods sub add or hlt add sbb popf push and cmp push add xor push or mov jnp adc xor inc adc xchg ret out or movl ds adc stc cltd dec bound jnp add nop div xchg cs lcall push bound aad mov add nop cli imul ret sub pop push ret jp aam push icebp mov push xor xchg fiaddl ret outsb add cmp js push inc mov or add pop mov jge aad imul enter aam or push out xchg adc pop or ret test nop mov adc cwtl pop aaa add mov sub cmp pusha xchg sbb adc (bad) int iret sbb sub imul or sbb and sbb adc fnstcw xchg ss movsl addl pop dec xorl jnp inc adc push xor and fs mov js xor fsub push xchg pop mov adc mov xor adc dec mov sbb ret add push mov mov add sub (bad) rcl into pop ljmp xor cmpsl mov and (bad) test add mov mov mov subb or lock rolb push pop sub movsb dec loopne scas gs sbb inc outsb inc push sbb ficompl push inc or inc adc popf mov (bad) adc in call sub inc popa adcl adc cmp mov or aam inc mov dec and pop rclb mov lea push mov inc stos sub cmc and movsb test xchg jl push (bad) push mov and or adc add pop es xor cs movsb loope pop nop pop and dec mov and xchg aam sti pop pop mov jmp or shrb push add dec pusha add mov int3 ds and cs frstor lods or (bad) xor fs in adc inc and rorb sbb mov pop push mov xchg push movsb int mov aas cmp movsb inc adc dec dec add aas dec pushf and add addb sbb mov add add imul mov rolb imul insb jecxz jle sub mov bound es push or and (bad) mov dec push or test inc iret mov icebp pop in push lret adc jle jge xchg dec dec call ret fimull push sub xchg clc (bad) and push call lahf movsl lret pop jp mov rcr inc inc aaa cwtl dec pop xor (bad) imul cmpsl daa out jb je push test mov add mov lret clc stos call daa aas icebp mov dec in (bad) (bad) and mov xchg pop push jo orl pop jne sbb xor xchg rolb imul xor mov add inc andl enter bound es and jmp je hlt imul imulb das cmp (bad) popa inc jb mov or pop jo cmp dec mov sbb jbe dec pop dec fcmovbe jne xlat fimull mov mov add sbb minps pop call cs jne dec loope sub outsb popa xor push cmp xchg adc dec pop dec roll xor shrl (bad) cmp lea cld pusha outsl cmp push test fisttp data16 adc jo test call stos dec push jbe sahf insb add and mov test mov or enter addr16 add fsubs xchg or or xor (bad) and add aad adc imul xlat imul pop js and pushf mov mov pop imul fsubl cmp aad xchg pusha push iret lods in or out call add pop arpl push pop stos aas rcrl push (bad) aas icebp les fimul sub adc je sbb add mov lret fcoml jmp (bad) std mull inc dec dec (bad) mov mov addb cmp sbb loopne adc cmpsl loopne dec fs ljmp pop (bad) cmpsb push call jo loopne ud1 pop loop jne,pt out jmp dec sbb inc push imul dec xor or je push xor mov xor data16 imul iret push dec lret inc dec cmpb add dec fwait pop dec inc pop addr16 sti pushl add mov xor popa dec cmovo jl sahf and inc add xor (bad) (bad) sbb add dec repz push lcall loopne scas adc inc pusha lahf lock sbb aam int3 inc loopne dec adc mov mov jle imul push test int3 push fcoms int or jo shll sub sub push nop (bad) aam cli sub add insl mov sub ljmp outsb or mov xor or inc test pop rcll or dec jecxz mov das cmp cmp pusha mov imul add sbb or sub in pushf addl push lahf gs jl shr add push icebp jbe mov push and jp out jns add adc data16 push adc pop (bad) aas inc stc movsl lds pop inc sub cmpb or cs test in xor leave inc and mov imul inc icebp cmp pop jl xchg lods or push xor call push into or add mov sbb sbbl jnp mov test (bad) es sbb inc mov pop call add call jl cltd xchg loop inc fadd cwtl xchg das and pop rcrl rolb test xor rcll and push pause jmp arpl into ljmp or popf xchg lea mov je mov mov roll dec jns adc adc mov js dec rcr cltd cmp test jne sbbl jb jo mov sti inc xchg icebp dec ret lock insb push popf shlb or mov stc push inc push inc sbb and lock sbb or (bad) and xchg ret lea lods cmp mov pushl shlb inc out push fsubl ret sahf add sub je sub cs and or in repnz repnz pop cmp xor popa clc std push sti rorb rorb pop test pop or loop push or mov cli push sbb mov cli cmp lea fcomi xor mov add jbe shll mov or bound inc fsubrs pop lods push roll pop arpl sub (bad) mov cmp sbb into add inc out rcrb cmp popf jne (bad) mov lock mov dec addb bound mov or cmp cli sub jne (bad) xchg pop lods xchg inc pop xchg test pop mov mov scas inc enter xor pushf inc jl scas call sbb and add inc (bad) fstpt fs mov outsb pop push (bad) (bad) push jl cmp push call cmp lea shrl jo mov in xor xor jge pop mov cmp mov lock repnz adc test lods in and add inc add jne sbb sbb into int (bad) ljmp ljmp adc adc rcll sbb cmp xchg add xchg sub cmp std mov add ja in call mov cmovbe dec in shrl mov mov std rcrb adc into imul cmp out push popa out cmp mov push adc fs sub dec test pop or ret and push fs add cs or add pop push je lock pop daa or je cmc add sbb outsl mov pushf repnz aas loop add lds mov push inc inc andl sub or ljmp insl mov inc pop outsb js ret xor cmp repnz mov and adc add dec pop or pop mov mov mov pop inc (bad) xor jo and (bad) sub mov rolb fsubrs pop cld mov pop ret jp lret js mov movsl xorl sub xchg das and pop sbb je ffreep test jle jl cmp adc lret xchg in inc add gs mov adc sub pop add sub cwtl enter xor push lret mov inc or xchg mov push (bad) psraw iret add or jne sbbl dec xchg ljmp add mov inc mov push adc in fildl insb jbe lret and sub or popf aam xor out scas sub pop sbb out es cwtl (bad) enter lds xchg cmp in sbb mov jmp mov and test push push sub divl stc (bad) enter nop pop fwait push add mov shrb xchg adc push sbb push test into push pop aaa dec loopne cmp (bad) out mov add ret inc mov xchg inc stc ja adc cmp jecxz mov mov out push push push outsl adc iret mov in and das test (bad) cmp or and leave inc xor out jl add lret call pop adc mov adc push test sbb ds add or jmp xchg fnsave sbb mov in iret and mov add rcrl and xchg sbb ret enter adc lods jge sbb xor and loope cli and jne cli sub push daa nop or pop or cmp inc inc cwtl mov repnz and dec add inc pop sbb rolb fadds out push jne sub pop (bad) sbb adc into mov lds out and sbb lret inc jg,pt lock mov hlt mov mov push mov push sbb fdivs cmc jl cld push sub mov mov hlt pop sub loopne jl pop lret jmp aas dec loopne rep (bad) adc dec std cmp xchg push dec aad xor test inc cmp test lds or mov out aad js sub add dec push (bad) stc or pop jecxz cld or adc sbb jbe (bad) inc or (bad) and ja loope in push bound in dec popf movsb pop sub fwait mov xchg dec mov adc (bad) mov icebp push das mov andl push je or (bad) xchg jge jo nop inc nop mov pushf (bad) aaa in (bad) cli and fcomps jl repnz ljmp daa sub lock add pop push cmp gs lahf adcb jno idivl push stc xchg jbe and nop cmc rorb pop adc test clc shlb fwait icebp push test pop jecxz loope fwait mov adc xorb or pop xchg inc xchg sbb sbb push adc jb arpl dec fidivl cmp jb push and or lds pushf sub mov mull mov xor cmp dec lock jne adc add ljmp rolb mov sahf pop enter ret rorb adc push (bad) adc mov mov mov and push and mov mov jmp xchg cmc negl and sti mov add loope,pn movsl mov mov in xor imull adc sbb add je push stc test cmp mov ret xor adc mov jae sbb ret and (bad) xor das sbb push ret pop add in movsb test sub adc push adc adc ljmp cltd leave adc mov int3 pop jge lcall add inc add jne xor inc rorb inc mov int jne gs leave inc and dec push adc dec xor shlb dec (bad) xor xor mov stc aam xor xchg add mov push das xchg (bad) insl and dec pop add imull push add mov or aas cmp es addl std aas (bad) or adc xor cmp mov stos and bound jg insl jg js dec scas dec pop lahf xor cmp adc push dec movsl xchg (bad) sbb xor or leave xchg flds pop das xor pop das sarl pop dec push or pop scas jl add cld sti ds vpblendw jmp xor push mov dec dec jmp pop cld sti call adc jle rolb cmpb pop cwtl mov pop xchg mov xchg cli or cli sbb ret adc pop jns and mov rcll lret add bound mov call jle mov fbstp add dec mov cvtpi2ps aam test jge xchg jne cmp stos mov das or jo sub jl jo in and dec mov or cmp mov das cld jmp arpl or sti inc xchg sub andw rolb out cli ljmp cwtl inc jg add xchg sbb or and sbb add (bad) idivb push push xor dec shrl fs cmpsl pusha add mov xor xchg (bad) dec mov add xchg dec movsl std rol ljmp adc jnp test push adc or jb ss (bad) push or and cmc sub xchg rol push arpl call les out cs dec ret ret push xchg gs and das adc je cmp imul mov dec clc cltd iret mov add insl push or adc loopne stos movzbl movsb fmuls movsl or out sub push fidivl lea add fdivrl xorb mov loop sahf mov sub push add in add inc inc mov adc push adc sub sbb jge mov push push or push fdivs imul pop int loop and push daa enter push sub add xor insl add sti xlat mov dec je add and sub jne pop add dec push imul int add add or pop imul pop test or loopne inc mov mov jns mov push push fsubrl pusha or dec andl inc adc push loope mov push fcoms fmuls sub ret cltd xchg fsubrl das xlat pop inc mov xchg sub fwait dec adc adc adc mov inc add ret mov dec dec (bad) fdivs and test sbb lret lret shlb sub push pop cmp ss cmp aam add test xor cwtl inc int inc or sub sar or test jbe cmp ja pushf add pop jmp adc out data16 data16 jae sahf add mov jb outsl outsb xchg scas mov jbe push (bad) rcrb pop xor inc adc data16 xor pop mov mov ljmp ret and dec mov ja (bad) out js or lret pop imulb push or ss adc pop mov push popa out sbb xor sbb mov enter mov add and imul lret mov lcall xchg stos pop enter rolb js push lret jl xchg push lea out (bad) dec adc mov insb push mov (bad) mov xchg pop and les lret add pop push fimul jge adc sub (bad) fbstp inc sbb nop or je xor mov js aad loope push push andb out add sub lcall push dec xlat mov int3 rclb (bad) sbb das or ds dec lea adc jo pop cmp (bad) push lahf mov nop idiv test fwait addb mov je movsb xchg pop mov jne cmp (bad) mov adc dec xchg jb daa pop fs ret jmp sahf inc leave and xor inc or sub mov orb cmp js data16 push dec sar pop leave nop adc adc or or mov push and add add adc divb sub adc or or aad and out inc shrl data16 xchg jl inc adc ljmp sbb nop sub add (bad) lret popa inc lret das adc (bad) fist jmp cmpl inc pop xchg mov dec stos test outsl (bad) fadds xchg inc or dec xchg jne mov mov dec push dec (bad) andl adc xchg jne (bad) daa sub mov or xor lahf sub add pop rclb or or frstor add shrl sub xchg jg push xchg arpl and mov (bad) repnz jns push mov push mov fwait movsl fst shr div or addr16 pop shrb les xchg pop adc mov push sbb dec cmp and cmp imul xchg movsl jmp das sub cmp and and cmp xlat or sbb notb cmp sub (bad) mov cli cld aam (bad) iret test stc add mov rorb ja xchg das add dec imul mov notl inc stos orl rorb or xchg mov sub cmpsl xor pop jns jnp push addb jmp jge mov sti xchg adc sbb je jbe and inc aad xor clc loopne sub and xchg sub imul mov loop adc sub pop mov cmovbe jns pop push call push sti sbb mov arpl popa (bad) jnp inc in add push add insl pop mov sub adc push jecxz adc in push fidivrl lock rorl push call jmp push xchg xchg in (bad) lods loope xorb xchg test bnd leave mov enter jmp push shrl dec mov add test daa sub jb sub clc xor or dec cmc xchg gs repnz add in mov inc sbb cmp pusha dec addl movsb test dec cmpsl loopne or add xor out cmp sbb rolb xorl dec and cwtl hlt loop jns inc dec jo jmp addr16 cmp aaa add add cmp adc jl cmpsb xor mov push std std and mov pop push pusha and std or fdivl cmp xor cmp std inc (bad) push andl sub std cmpsb mov into inc push (bad) mov testl mov adc mov out mov push enter and dec push adc xchg loopne adc mov push add pop imul jo out or sbb fimull push push in xchg sbb mov add xor out ficomp sbb cmp popa mov or lret adc add push jmp jle test mov jl cmpsb mov mov sbb or dec jo jle push push xchg xchg pop jne push sti pop add sub or addr16 sbb mov lds insb add (bad) xor imul jg inc xchg int jmp and lcall sahf sub imul lcall dec xor fcomps push scas incl or cmp cmp jb mov fs sub or pusha mov shll sbb dec lret bound sti jmp push pop pushf mov pop add lea cmp jb sub fwait push ret mov xchg int3 or dec jmp imul sbb mov clc aam jae or mov call jle mov cmc push mov insb add mov pushf out cld arpl push fs add pop fsubl lea push jne enter inc push addr16 pop push fwait mov add mov lea push sub movsb (bad) out cmp dec lret loop enter xor sbb dec push data16 mov fild inc cltd loopne outsb mov sub fsubs out jno pop jne push sti clc (bad) dec adc ja,pt enter sub mov stos sahf or and xchg xor mov cmp push nop test sbb inc cmp xor (bad) movsb dec inc dec inc jb addr16 lea ret push inc lahf adc cmp xchg sub add mov insb jo inc pop bound ret mov push gs push pop pop (bad) jns test xor or mov and ds aaa and add jp dec lds mov lods cmc in scas sahf enter fisubr or add jle adc mov iret test sub sbb (bad) xlat insb loop loopne pusha mov push hlt andb out cltd mov js data16 test mov lds mov add jne (bad) cmp push mov fsts rcll lods aam and out adc mov les jl xchg mov ficoml dec cld repnz add out add movsb sub pop divl sbb sub test rcll lcall (bad) fincstp xchg add fidivl sub (bad) jae mov sbb and jp dec or loopne cltd lret push or push xchg in adcb push push push xchg and xor loopne adc stc loopne push cmp push mov ljmp push aas addl (bad) sub adcl mov pop mov ss jp aam je mov into pusha fcompl or shll push sahf xor fmull pusha xchg mov cltd out repz xchg jns sub gs xor fcompl shrb pop pop adc imul scas cmp push lea pop (bad) sbb push push jnp rcll or jecxz or push shl mov jne push test neg jbe dec jecxz ret xor or (bad) iret mov aad (bad) jno dec push xchg adcl sbb ds adc push xor sub lea mov lock push lds cld outsb pop and or call mov enter iret inc sub stc push dec and dec mov ljmp iret enter lea jae (bad) loope (bad) fsubr mov loope add test mov jl xor or aaa inc cs inc dec cmp icebp push (bad) (bad) mov dec push mov sbb dec (bad) sub dec sub icebp out loopne sub cli adc test mov ficoml xlat push cmpb sub and fisttp pop dec sbb aas cmp xchg or inc jnp sub int3 xchg (bad) ss cmp das pop cld mov sbb fldl out push fcmovbe call lock pop inc sbb inc mov insb pop jge and cmpl int (bad) and ficomp adc dec push or sbbl outsb aad cld add call loopne aam in fs repnz jb add sbb jg and push adc mov dec mov mov enter and sbb adc cld cmc gs jg cmp test xchg cmp mov lret call fwait (bad) and stos add loop push clc xchg out outsl mov repnz jecxz jno nop push lea and lret pop ds pop sbb fwait push xchg add push push aam and (bad) fwait adc dec adc mov cmpsb and mov jle push test leave or cld test add mov rclb dec lock adc mov cwtl ds ljmp dec dec cmp or add push jecxz fwait inc sub sub lea dec mov xchg lret lods xchg cmpsl push sub xlat mov adc jne sbb add push and in mov movsb ja sub cmp or push xor mov orl jle mov cltd sbb push dec sub js into xchg mov inc xlat xchg add and sub cmp les xchg repz jle shlb mov addl adc mov push mov cltd icebp inc lock push jbe pop clc adc das sbbb cmp mov popa fsubl add mov enter stos push sti bound sub push addr16 inc fistpll movsl repz (bad) jae cwtl jns inc push cmp lret sbb cli out adc enter aam and add sbb pop mov mov mov mov jo (bad) dec insl jp les sub (bad) call jo cmp mov mov inc inc aad insl lea movsl jne push or sub rol or add fadds xchg imul cmp mov push jb pop adc mov in out sbb xchg notl les lds js dec stos and (bad) sti ss adcl sbb pop fwait sub int3 xchg cmp imul (bad) jno push mov xchg sbb push jle mov pop dec jge or repz popa arpl sbb lret dec jge adc inc or lock push pop push fwait cld inc sbb stc adc or push mov lea pushf fsubr in jge xor push outsb mov out ss aaa mov xchg test xor jno cltd sbb (bad) cmp xor cld and and (bad) pop or inc pop insl mov jo (bad) push test and ffreep mov adc ret add out aaa jne ds loop or adc cmp repnz jne fmul movsl jnp scas js jge into adc dec push mov mov mov sbb rolb add pop andl shlb imull das push iret divl sysret daa sahf mov (bad) jo push movsb inc incl adc add pop inc inc cmp fwait clc add movsb icebp fist dec or rolb pop sub mov adc or sahf push sub adc jbe sarb in dec jge loopne adc mov inc sarb mov pop add adc jl shl leave loop push xor mov sbb pop in sub (bad) cmp mov or sahf inc mov sub xchg data16 (bad) xchg xor sbb cmp sub lock jb test inc sub push call out xor dec (bad) and fsubl or arpl mov jp das jne pop add or sbb negl outsb add xchg out inc or cmc andl mov mov mov pop sub dec add cmp cmp push call push test mov ljmp inc adc popa ret hlt mov mov sub and sbbl call cli in add and into and cld jb xor ljmp sbb fucomp sarb loope and mov adc int3 jmp pop and sbb popf fisttpl fdivrl sbb or enter adc push push out in pusha sbbb mov stc or cmc sti orl dec or add push mov daa fucomp sbb stos jmp movsl sbb sub mov cld add dec ds xor mov sbb and and gs mov loope mov pop adc xchg insb dec adc andl lret adc loopne add inc push xchg mov sub xor dec pop ja pop test movb inc scas jle or das je out mov or pop dec xlat jbe xchg das addr16 push jns dec mov stos clc add xchg idivl call mov into add stos push adc or sbb push xchg je or into into mov cmp (bad) (bad) jmp and mov idivb push mov add dec leave add test aad or inc sub rorb sbb nop push jb sbb xchg sub mov push inc push xchg addr16 or scas sbb mov xchg push mov (bad) iret stc adc inc xchg or sbb mov sbb addl and push cld dec movsb call mov je and mov inc rcll sub dec sarb fidiv pop out or je mov sub and mov xorb dec (bad) fnstcw and enter notl xchg or test or clc pop adcb orb lret clc pop mov std mov in or inc mov daa xlat add je dec sbb mov and outsl or sbb sub push xor stos push call je mov push scas mov call push pop push pop pop pusha or push fist hlt sub and sbb sbb push test ret cmp jge sahf xor adc (bad) call adc push push test (bad) sbb shll cltd gs mov push push or xlat (bad) dec clc ljmp sbb pop inc scas sub inc pop dec cmp cmp loopne idiv dec test push outsb xor xor push cmp push shl call jg adc add xor sbb (bad) cmc mov push cmp inc nop js mov insb push fs pop dec xor and sbb mov or sbb rorb xor adc push insb adc mov or sub xor sub xor pop sbb and add cmp call or les inc jg sbb xor sbb and pop insb clc clc xchg das mov dec negb mov fistpl call and clc sbb insl cmp inc cmp xor add das jns adc or loopne mov imul sbb xlat cmp xor add dec hlt loopne add add add addr16 or ret jno cmp cltd xchg xchg insb sbb rolb lret sbb andb pop repnz add pop (bad) or or inc jl (bad) decl in mov mov daa xchg cmovp (bad) ljmp xchg cld cmp notl xchg stos dec jns adc (bad) mov mov adc js repnz push xor add daa mov and push mov dec cwtl cwtl stc mov inc inc push nop adc and mov mov in xchg sub fadds push jg clc and cmp dec sbb aas adc inc and xchg outsl inc adc and xor adc dec vmread mov jbe daa push or (bad) or jmp add mov sub ds pop lss (bad) or cmc add leave inc pop jnp cmc sbb mov out mov jle push cli mov popf jl dec or push xchg inc das pop addr16 jp or pop sbb and inc cmp push cmp je mov loope sbb xchg cmpsb add enter and cltd dec jb je inc mov push xchg lret and mov mov sti inc popa ss fs icebp adc pop xchg cmp jecxz cmp sbb in mov mov sub xor or sbb sbb xor mov and popa sub movsl leave and and add lcall pop xchg pop xchg sub pop xchg pop xchg xor push mov xchg cmp xor or and or mov imul jbe sbb addl pop inc mov dec sbbl (bad) xorl mov push scas cmp dec adc dec ret subl rol add (bad) xchg jge mov fwait stos push pop test mov adc repnz outsb mov repz pop ret aam sbb int3 add es cmp stc mov arpl inc bound adc dec and sub out sbb jnp outsl inc sbb sbb cmp adc leave lods or jns sub rcll loop or frstor xchg inc add or inc clc call pop mov jne call outsb shr cmp test and push pop pop or adc mov lcall xor or enter out push add pop adc int mov pop add sub aas adc add push mov (bad) leave int3 lret jo jmp or sbb xchg mov or aad inc test sbb push jbe adc push ja mov xchg and pusha cmp ficompl inc add call mov xchg pusha mov out ss stos xor insb ret jecxz push test fsubrs push and (bad) hlt push mulb and lock mov test push in sbb stc dec mov movb push lcall cwtl adc and adc sub sub jo mov (bad) les add pusha adc adc (bad) mov fldt mov and push xchg lahf orb add enter scas xchg clc les cmp shll add aaa pop pop push notb mov mov sub loope (bad) es cmp es push adc or and jnp push fcom adc xchg jno fadd or and adc mulb movsb sahf xor mov or or outsl inc retw push jg mov call call xorl add jno jnp dec inc aas push loopne call or push push test int xchg icebp icebp pop dec mov mov pop out cwtl jo or nop cmpsl (bad) (bad) clc sbb xlat mov jmp jno cmp stc push push call mul shlb adc (bad) fwait and mov adc inc nop or adc jnp or loope xor call in aaa mov push std sub jo and in in jge ret or dec outsb cltd lret cmp sbb cltd mov negb ds adc pop stos fisttp jns arpl pop mov and jbe inc inc or and mov (bad) push stos or mov and pop mov or sbb mov adc loopne stos inc pop and aaa pop ss adc push in nop fadds ljmp cmpl in adcb and addb test loop xchg push cmp mov xor add push and lock orl sbb shrb push push shlb data16 lods sub test mov in fstpl adcl fwait das and fsubl xchg jbe out push dec cld jg ds and cmp xor push jo add fdivr imul push divl jne mov add sbb inc divl (bad) push (bad) mov and les fadd add push push xchg shrb add sbb push mov add adc rcrb mov mov pop or mov lock inc rorl push dec inc fisttpl mov test out dec mov out and stc pop leave and aam sbb xchg test and or out movsb gs cmc jge lock iret sub xchg aaa jmp mov add jne rorb push enter shrb mov xchg or mov inc icebp (bad) sub mov mov insb push inc xor fiaddl and fwait adc sub mov add out mov or cmpsb clc jne daa (bad) fld1 add mov les test xchg js in stos je adc ja sbb lret addb ret mov adcl xchg adc or push nop lret pushf or mov sub movsb ss mov xlat lods mov or nop sub sbb es sbb aam mulb xor jne inc sub xor daa ror or or (bad) mov mov xor push or xchg cli adc mov and cs sub in das inc andb (bad) xor mov cmp pop mov push adc adc insl loopne add adc out ja cmpsl xchg stc inc inc mov popa pusha sbb sub fwait or insb fld sbb push out pop pop fldl shl mov sbb fcomps or cld or aad xor cmp cmp and xor and xchg icebp mov enter (bad) fwait jo mov add cld or mov int or inc push adc sub jmp cli aam negl add loop add sub pusha jmp ds popa add adc aaa xor xchg popl or push jo adc sub fadd xchg add outsl mov adc rclb daa or (bad) icebp lea imul adc daa lea xchg mov cwtl inc test pop out xchg loope lahf push aam nop je jnp das or test and sbb xlat xchg pop inc or dec dec sbb jecxz adc or nop aad add nop and cmp lret sub sbb loope je inc pop push (bad) loope inc lahf push es icebp xchg shll dec cmpsb push cmp pop mov (bad) insb mov add cld test xor push daa ret inc add mov and scas pop inc popa push outsl out test dec mov push addr16 xchg adc push add mov inc adc pusha pop dec cmp pop (bad) and repnz jno clc lret or lea push popa xor sub je cmc or (bad) fimul xchg mov test call sbb loope sbb inc sbb popf add mov jle adc sahf lods enter lock adc and xorl cmpsb pop test inc xorl jne jmp popf mov call lcall add xchg jl in and fadds and test aam xor rcrb add sarb mov jnp fist and gs es es cmc in mov pushf das xchg fcoms and sub je sahf in push dec sbb mov leave or dec dec pop int3 pop psubusb pushf add add pop imull jne outsb push je xchg call adc ret push negb jns xor inc push stos cmp imul or in insl fstpl xor adc shrb enter xor jnp aam xor fwait xor sub out lret mov int popf xor in fnstsw movsl push scas std (bad) jmp push push movsb mov loopne cmp test loopne js xchg jl je sti sbb ds xlat test push ljmp adc insb cmp and sub adc sub or enter jno cwtl dec in lods sbbl test inc mov repz xor add fs sub and les loopne xor fs push xchg xor sbb das (bad) mov push out inc adc cmpl inc cmp push call cs xor jo jnp cmp jmp rclb fsts shlb xchg out mov sub dec add mov das inc pop clc arpl push jmp cmp and push fcomps sub test mov adc fldenv mov dec and cmp test popa mov push hlt dec adc xchg adc insb repz imul mov mov xor (bad) or pop jle add divb cmpsl das jl dec and jne jg add lahf adc rcrb push call rclb sub mov pushf xlat ja push mov loopne mov loop add adc mov jno mov sub stos add loope pop xor out or rclb stos adc popa lock or iret (bad) stos jne scas arpl and push loopne mov sub in pop push (bad) fldenv test push sbb jge mov jne jmp gs outsl call test jmp loopne adc fadd jmp pusha xchg out cmpl push test add add mov mov lahf inc and mov cmp nop fadds push cmc sub je and dec test add (bad) in xor adc enter mov dec and bound xchg das and cwtl xor inc clc ss mov sbb and and sbb or mov cmc xchg ret fwait test pop enter push test dec xchg in mov add sarl push ss loop mov sub jns mov fdiv testb mov lds dec xchg and xchg lret mov push adc add pushf insl fmul and lods aam roll mov xor mov dec jl jns ret jo dec enter jle sub jge test push testb add or inc imul cmpsb test pop pop inc ret mov jg sub mov (bad) idivb add stos pop jns mov cld stos testb sbb std mov mov add pop sarl fsubs cmp roll sbb (bad) mov xor aas lret rclb mov add ss dec mov les (bad) and pop xchg popa imull cmc pop (bad) je add cli mov cli sub sbb jo push outsb loopne addr16 and jne add dec (bad) mov cmp test shrb add movsb test mov or in mov call cmpsb mov aaa mov lahf and jg and cmp jp cltd add fcoml in sbb test adc xor arpl adc mov push cltd dec add js jp jg xor jmp pop call sti dec mov psubb mov xchg sbb adc add xchg and xor test test push das xor jo add arpl adc fcomps aam (bad) cmp mov or push jl adc add inc add rcrb dec loopne jmp add jl mov dec sbb push mov dec stc loopne sub test jmp adc cmp sahf movsb cmp scas repnz fist and push or inc cmp xchg mov and fwait inc jae (bad) inc outsb fdivrl push subb cmp lds cld ret mov adc and sbb lock inc pop add cmp pop sahf xchg in or or or flds cmpsl pusha pop sbb in fistp mov adc push jecxz push insl out bound and ret cwtl push sarb adc add xor (bad) push rcr inc sub inc push sbb adc (bad) js sbb rol mov test (bad) adc es add rorb push fisttpll ret (bad) mov push test cmp int3 push rolb and cld hlt push xor enter jb jmp or or aas insl pushf dec mov les loop or jp lock mov xchg mov cltd addr16 arpl leave adc lock lret cld jg lock pushf mov push xchg and pushw rcrb rol mov or out arpl lods adc add dec (bad) pop loopne lods adc cmp adc out adc jle adc loopne ss cs stc push push (bad) dec loopne call cmpsl int3 xchg loopne leave push das fmulp push sbb (bad) iret rorl arpl dec pop or (bad) pop adc push mov inc sub pavgw add adc push ss add pusha mov call (bad) mov pop loope sub and lea dec xchg inc addr16 adc push cwtl in fistp dec add out insb subl addl fabs sahf sub and pop add jo xchg inc cmc jmp and test fmuls jmp mov cmp xchg push xor or or and adc pop or aaa (bad) mov adc and rclb movsl in (bad) mov pop dec jecxz cltd movsb sbb or (bad) mov and or in cli ljmp or mov pop dec add lock dec xlat jns adc fdivp popa rolb fsts lock das test icebp xchg inc addr16 je fs mov jmp jle (bad) cmp push jne jp pop (bad) nop cmp lea pushl xchg test stc sbb dec lret out (bad) (bad) jp jno and xor popa scas push cmc xor cli sar xor call push sub inc mov pop rol add in xchg fmull jl scas xor popa sbb or es (bad) xor pop ret or sbbb push xor xor lahf mov sub call xchg lea cmp add out xor lods andl sbb xchg sub das dec adc mov cli adc sub or inc add (bad) mov in and rcr jle or xchg mov and jmp (bad) imul add push mov pop dec adc add dec mov fcoms rorl (bad) jmp adc mov adc mov and jge ja jmp jl loopne sbb push bnd cli ret mov (bad) dec dec jp repz xor pusha xor cmp ret (bad) or mov jecxz adc ret mov and cld sbb and sti jecxz das jl pop push daa cmp cld inc adcl mov testb inc inc data16 enter lcall jne cmp or lret xchg and add push clc imul or push push nop add outsb adc xor fwait add jmp add xchg inc enter call adc out jne rclb sahf or in pop mov rolb xchg cmp dec das xchg (bad) and enter cs inc cmpb lock mov sbb pop ficom ljmp in inc add inc mov addr16 sbb pop pop xchg js addr16 shll and (bad) mov je jbe xor imul inc or adc sub pusha (bad) loopne dec insb xor adc sar loopne jecxz lret loop cmpsl pop addl xor mov pop xchg add test adc imul mov in out out test arpl fcomp fdivs dec movsl mov mov sbb inc call xlat fstpl mov mov or pop push andl jg leave repnz dec stos sbb out adc data16 sub in les test or lock pop mov mov mov sub lock cmp add dec push mov inc push lds loopne imul add and mov js jle jns dec inc mov adc inc fsubrp dec aas mov jl pop mov mov enter nop mov faddl pop enter test sbb (bad) fstps mov hlt add mov push inc mov cli ficompl pop (bad) in in inc xchg cmpsl repnz add int in sub sub test mov or xor (bad) fsubs lods push cmp ret jmp mov adc inc gs inc xor sub mov pop jne push jmp jge sbb pop ret addl fyl2x mov xor fldl2t cmpsl inc movsb test xchg xor ja push call mov imul mov leave and push jle fmuls (bad) inc cmp movsl mov sub sub orl add jmp xchg fcomp icebp pop jns test adc pop jns mov xor call lahf nop and inc jl mov es in ud2 daa inc add and mov cmp adc pop cmp cmpl add cltd scas fs ja pop sbb sbb cs sbb xchg in dec jmp lret cmpsb rolb addr16 hlt les mov mov cmpsb push xor insl pop or clc sbb xorl test aad or xor les insb mov aas pop or cmp adc pop or mov xor mov push cltd push mov sub gs dec push add xor jge adcl push sti rol outsl (bad) jp cmp out add xorl pop adc stc outsl mov cmc dec mov xor orl xchg test mulb add roll pop nop pop xchg insl cli out test sub pop nop adc sti mov xchg pop jb fimul (bad) (bad) xchg jns push add fwait xor or movsl popa xchg jp adc adc xor bound jo je (bad) inc sbb jae mov out fs xchg adc and rcrb add xor test mov jo xlat push jecxz xor dec shl xchg pop (bad) xor pop lods insb fucomi sub jnp (bad) push jmp (bad) xor sbb (bad) and pop fdiv aam xor push je (bad) xchg icebp rclb mul xchg lock fcom mov ss jo push adc std mov pusha dec pop les pop fldl fs scas jecxz add loop jl xor lcall nop sub aas pushf add push aaa add add mov mov and lcall fs rcrl call push dec push push call push push add rcll sub jecxz push mov mov sub call add enter sbb in cmp inc mov add outsl cld jmp fldenv pop (bad) lods (bad) call (bad) sbb scas cmpsb (bad) rcrb inc nop or xchg sbb push stc jl xchg dec je hlt add out mov movsl lcall pushl test test xchg aam js bound fsubl add loope sbb ljmp sub (bad) ret (bad) xor arpl xor aam mov std sub inc cmp jl out aam addr16 clc add outsl aas jo xlat stc push sahf ficoml adc sbb adc dec (bad) orb je pop pop ss inc call or xchg mov rcrb mov fwait inc clc jge pop inc cmp jl pop pop pop fcmovb and pop cmp sbb sub mov mov lds push pop cwtl gs test cmc jb popa std add notb jno dec cltd js mov movsl lret pop adc lods dec dec (bad) fadds and xlat cs test lods (bad) dec dec popf cmc decl and add jge out add jnp in fsubl adcl dec pop inc pop pop enter testl (bad) (bad) dec fdiv push sbb daa lahf pushf cmc pop jecxz pop add push pop jle dec mov add inc inc push push stc rolb pop out outsl (bad) adc xchg subb pop pop push shr xor cwtl cmpsb shll jo pop and cmp idivb lods inc cld xor cwtl cmc in sub push xchg mov sbb adc sbb inc sbb lea xor repnz jp push out and loop fs push hlt adc (bad) xor xor push insb int xchg in push mov jne nop sub jmp sbb adc push cltd mov subb out mov mov and pop enter mov loopne add adc fcoms or popa push imul adc addb or lret nop xchg (bad) mov or stc adc mov inc arpl (bad) xor cmpsb lock lahf outsb fwait rorb xor jo shll cltd idivl mov mov or pop int3 imul mov adc mov pusha add push sti (bad) dec lcall ret scas stos add adc sbb stos xchg (bad) adc push test out (bad) mov dec pop push mov xchg pop icebp or ljmp sarb pop xor outsl mov mov (bad) adc stos mov push xor or add or adc pop mov loopne sbb leave mov loop rcrb push add rorl or mov rcr or cmp mov or repz and push and push sbb inc je sub in xchg jo xlat mov dec imul mov mov popa xor ja mov xchg cwtl (bad) inc pop jno lret and cmp xchg or jge aad jo leave and call adc fildl jbe jg pusha sbb jl add sbb pop jmp add lock hlt mov push jb jg sbb add xchg xor and inc fmull jo dec call dec jle in xchg and nop cmp or orl scas cs xor mov cltd call cmp sti loopne call cmp xlat mull jle lock inc add call lock cltd call cltd pop cwtl xchg js loopne cli lock push lea adc add stos sub dec sbb je jmp lret aas sub sub outsb leave mov sbb push mov call xchg or mov xor mov in loopne nop nop or adc lret fisttpll adc pusha xchg sub fxch out pop sarl repnz push push in lea cmp xchg cwtl lret popa and orb repnz adc iret clc add loope add insl pop sbb repz pop loop ss jnp andl lcall sub jle pop push dec orl push lock mov inc ss and stos inc lret push mov clc into xchg adc mov dec sbb dec div mov inc mov push add and xchg jp and rolb cmp mov ja add dec sti shll popf imulb lret push inc mov shlb roll cmp lds add test addl dec jg bound data16 aaa or xchg (bad) jae lahf cmp pop jge,pn (bad) lahf cmp aad pop inc pop jo fucomi jns adcl mov cmc inc sbb insb fs and or xchg shlb mov mov xor in push jae xchg sbb xchg pop leave nop jbe sub jns and jecxz and mov js cmp cmp xchg sub sbb rcll adc mov xor das jl es mov or nop lds cld sub mov fs or pop enter inc jnp dec and adc in shrb test nop dec pop push jmp sbbl imul mov inc xchg into test xor lock push inc or sub or xor add ret xchg jecxz add lods or sub sub cmpb add dec (bad) pop rcl dec outsb adc jp ret jbe adc add call call scas xchg mov pop adc inc pop fscale (bad) xor inc enter sub movsb aad xchg push or xor mov nop jle xchg aam xlat cld pop sub pop enter inc lock mov push adc mov inc push fsubl insl inc and xchg push push lods shrb cmp mov xchg fcoms pop and xchg dec add mov adc bound jl xchg mulb es imul push daa int3 push pop add add inc xor fadds jo xchg xchg into jge hlt popf (bad) and inc cld int3 lea sar xor jbe (bad) mov cmp inc or inc pop cmp adc adcb fwait inc cld rcl cltd call orl cli scas imul call push push (bad) lock rolb pop adc add mulb fimull fistl rorb add call mov jne push mov mov add jb dec jl cmp xchg enter pushl push cld (bad) leave xchg push insb push les (bad) insb out sub out jb fadds es or inc push pusha mov sub add addr16 imul dec add sub sub cmp add shr pop cmp xor dec and inc and clc jmp push push jns rorl mov xor insb add movl or (bad) adc leave test pop mov jno add cmp loope xchg scas sub jae inc or dec adc xchg ret scas xchg mov push out das adc fdivrs pop xor scas push dec adc cmc jo (bad) es call gs mov sub bound in add add add sarb push into or inc nop imul pusha in insl mov or fnop mov add pop cmp jp add mov test jne das mov adc std inc or xor pushf fcoms jg pop jnp mov xor in sahf or pop fimull sub push outsl call pop movsl jae aam lock mov jo adc mov lahf lock pop out mull cmp or xor jo adc addb and dec add popa lock mov add mov out or outsl pop adc fstl cmp xchg std adc (bad) dec test popf dec fcoml sbb (bad) sbb push push and in sub jl bound and or aas xorl cmc pop cmp adc push leave push cltd sbb and lret xor or lods push or insb jl sub test inc call loopne dec jnp (bad) aaa xor andl mov push push jno decl mov xor jmp push lea xchg pop nop sub mov movsl mov fldl (bad) mov jle xchg into cmc pop pop pop call push cmp data16 xchg mov mov enter fmulp out je andl adc lods inc adc lahf movsl lret add cli lcall pop nop pop ds pop je push js push (bad) movsl (bad) and sub push cmpsb xor (bad) add cmp push out lods pop or fild mov jge pop push leave add sar inc mov jg inc insl bound fbld or push push outsb jb addr16 popaw adc imul in nop push sub or je or xchg sbb add mov clc push insb xorl sbb xchg mov daa insb add push popa loop test loop pusha xor mov leave lds and mov daa xchg push outsb roll ret jno (bad) movsl sbbl cmpl sti int3 adc or movsb xor xchg pop rcr or ret jne mov fisub (bad) cmpsb add fcoms add icebp popf mov mov fs jo inc push pop mov dec dec cmp xor pop iret jle dec mov ret movsb xlat js pop xor jne cmpl inc aam jge push add (bad) fbld loopne sub incb add mov inc mov insl and adc inc mov (bad) mov dec ret push or insb xor test sub sub (bad) test push mov popf stos push lcall push add pop mov mov or cld push gs mov jle dec andl add loop xor sub nop push sbb mov cmp test push push sub into icebp push or fdivrs jo inc ja call loope inc mov call test pop xor xchg in nop (bad) (bad) sbb or out ret out aas (bad) mov jne cwtl xorl idiv sbb dec dec (bad) pop (bad) mov (bad) fild inc test xchg aad insl testb enter xchg sbb cwtl loop inc add cmp outsl add mov in sub or xchg mov cld sbb sbb inc sub sbb xchg dec mov fmull jns push jo sbb xchg addr16 mov inc push mov or jns or push sbb stc repz fsubrl call fldl mov jmp jae jno lock sub movsb cmp jmp mov mov sbb xchg add outsl in stc inc add shlb mov in mov add in sbb (bad) mov in sub in popl mov push inc pusha sbb sbb add (bad) iret enter xlat out or mov adc shlb xchg push in vmaxss or (bad) dec add pop dec mov dec call dec dec sub lahf pop jbe mov pop pop fildl cmp inc insl xor out xor enter test loopne xor loopne stos pusha adc out test and lret jno es cmc out call aas loopne int mov cmpsl (bad) das mov mov testl jl ret mov enter outsl in and test addl loopne xor out dec lock scas movsb dec cmp pushf out cld and out pop inc push jae pop or sub pop or cli mov arpl lcall xor lds aad cmc ljmp call daa cmpsl jbe mov mov inc cmovl push dec adc dec cmp push test sub lahf dec mov test shrb and and push and xchg cmpsb xchg mov mov cli imul inc in jmp xchg rclb fdivrp push les ret and repz es mov jle cmpsl mov daa sub push scas test mov inc add mov daa jecxz mov sbb jmp in nop jecxz std pusha cmp insl inc xchg xor inc cs and in dec mov adc mov cmp dec sbb and dec test dec pop or adc sbb sub adcl pop in es inc jne or sub lds das mov mov lret cmp xchg fwait adc lcall shrb es mov mov xor inc loope cmc mov es dec aad sub jbe jne lds rolb mov lret inc jecxz in sub mulb pop addb movsl and or mov nop dec jo shrl clc and pop mov sub or cmp xor loopne sub mov or push pop mov rclb push mov and loope in ret mov mov cli pop add lods mov test rcll xchg out daa call xchg out sub jns dec pop roll ss adc or or movsb mov and mov fmulp mov pop sub mov pop enter std sub sbb add test ja aam and or mov in pusha jne icebp inc in adc pop mov jge add cltd xchg stos dec lret pop (bad) pop add adc sbbl sbb xchg aaa clc and mov cld adc add fsubr xchg sub arpl dec adc call sbb (bad) out mov push (bad) mov cmpsl cmpsb adc (bad) jl cmp push fild lock data16 mov pushl jne cmp push fimul dec subl pusha push (bad) jle call sbb test dec add push popa sbb lret xchg jno jg inc insl std jmp ja dec adc imul int3 movsb (bad) test rclb (bad) or mov stc in pop lods stc mov insb int xchg dec repnz stc incb xor pop push or push push xchg loope xchg mov xorb rcrb fmuls rclb or jecxz or int3 push loope dec (bad) scas (bad) jle lahf insl sub jl pop mov inc addr16 mov cmp out repz mov movsb in sbb (bad) imul es xchg stos stc push jns xchg test stc pop aas pop test fdivr imul rcll enter mov rolb cli ja ss fcmovnb (bad) mov sub adc dec mov lea mov push test fwait cmp mov loope mov data16 dec stc push cmp push or outsb jmp sbb jge sub (bad) dec subl gs xchg push shlb test pop fwait (bad) insl xor push pop push push jmp mov inc ficoml inc inc push jecxz sbb outsb mov hlt das (bad) pop xchg inc inc cwtl inc or xor mov data16 (bad) fcomps add andl xor push out imul cld xchg pop ud1 cld jmp (bad) push inc aad add push mov ss mov enter ss or sbb out jns push call outsb and clc ljmp lds push push jle xlat or (bad) cld test mov test add xor fimull add dec or je add xorb and adc cmp lea pop movsl pusha mov and dec mov cli jle sub cmpsb lods loop push and pusha and add pop xchg add inc pop jl xchg movsl data16 and fmul cmp rclb jp pushl out inc adc hlt ljmp push or and or adc hlt xchg cmp and orl repnz pop push call in sub add lret push idiv or xchg (bad) pop rolb dec scas jge add add xor (bad) repz inc scas sbb (bad) jb lcall add test nop push xchg enter jmp lahf cmp sub push jns sbb lds movb xor xor jl cs xlat je mov ds fiaddl fdivr insb test lret add jne add outsl xchg mov adc dec sub in not (bad) push push nop pop push rol add inc pop and xchg xchg or lds push mov je sbb push into xchg leave call shlb mov push xorb lret arpl mov push js mov mov jecxz je add std nop out hlt pop stc mov mov pop (bad) call xchg pop enter fadd sbb and or cmp cmp cmp push push add enter out icebp pop add or in add pop gs push pop clc das add dec jmp adc test pushf out add mov push fsubr cmp adc jae xchg xor aas xchg andl adc push ret icebp mov jge data16 push adc rcrb aaa rcl rolb xor push jl or push and cltd cwtl incb jmp pop scas jl lcall test insb inc inc inc ret pop mov cs mov adc nop loope xchg nop xor fcoms and clc nop call adc aas mov and xchg fmuls add fisubl rolb dec sarl rcr dec xor cltd jmp rorl mov scas mov mov pop mov add add push mov add clc xchg iret mul fildl ds sub lds sbb and jmp in sub inc rorl push ret fnsave movl pop add mov sub cmpsl jbe add int3 and sub xchg push scas test cwtl ror and push jmp adc push call (bad) push mov xchg inc pop lods cmp xlat aas cmp mov xchg inc mov pop sbbb xor dec pop mov aaa cld bound or mov push ss jae pop scas add cmpl loop jle cmp add je call jns sar fs inc into test aas adc or xadd jnp jns repz xor sub sbbl pop and sbb pop jb leave dec mov in iret mov jns pop pop mov add nop setno leave cwtl sub cs push cltd and lods pushf sub push add dec pushl test add jns push call fwait push popa nop inc sahf in popa pop xchg stc jns stos popf add jae mov out or add mov sub loopne add push jne mov stc push and jle mov mov push push roll leave movl push (bad) dec mov lahf sbb add xchg stc into jb pushf in mov cmp adc mov push xchg pop push mov dec or daa lahf mov popf stc cmp stc imul ljmp cld push call mov cwtl (bad) ds je mov sbb pop mov std (bad) jmp and pop repnz dec (bad) mov cs aaa and call xor pop loope imulb xchg xchg adcl dec or dec and push pop pop movsb je mov nop (bad) sub add push xchg adc add mov mov xchg mov adc adc mov push adc call mov imul xchg notl idivl mov in lahf divb push inc and mov imul pusha mov cs inc adc test icebp cwtl insl cltd fs sub pop mov mov rolb and add adc cld jbe inc roll cmc xchg fisubl jae ds add sub adc mov xor and leave jl push adc mov jecxz decl sub xor nop imul mov xchg push or mov and mov dec mov jmp ss scas and test dec rolb dec jb add dec pusha and icebp and and pushw push scas lds jmp adc push xlat lahf xchg call fldl and add les out xor aam adc (bad) out jne idivl (bad) adc mov fldt clc mov js adc ja mov push mov addb int3 cmp loope xchg ret mov pop add dec and inc cwtl cli aad mov adc xchg dec je push (bad) insb sbb insb aas jp inc push int3 mov lock inc sbb sarb push mov ret sbb (bad) aam mov sub dec mov xchg sub daa cwtl xchg mov insb inc xor or lea (bad) mov lsl cmp jae push cmc mov mov bnd dec ds stc loopne push sub fimull movsb data16 inc dec lea sbb push sbb mov mov pop cmp jns aas add inc cs or nop sahf insb add in cmc dec rcrb je scas jecxz repnz push sahf out sbb or sbb je xchg xchg (bad) push mov sub push xchg mov loop pop sti inc push sbb mov xlat jnp xchg xor loope out push loope je iret add cmp cmp jbe sub dec sbb mov ficom je fwait xchg jnp decb bound popa inc (bad) test inc mov jl jge arpl and popa pushf sub rclb jg push insb mov pop dec je fs mov imul dec ret add mov mov mov imul and xor and movl sub sub jp je orb rclb pop push mov std sbb mov and and aam push and and fisub or leave mov lret push pushf inc sub ja mov push cmp pop out xchg or pop ret ror (bad) sub xchg cmp jge jb je call lret push gs push pop or lods sbb mov cmc push or and pop add adc test add leave pop sub jne inc jno adc imul and repz pop adc movsb or pop add in or std jmp push rclb sub in mov enter sbb mov mov jl ret cmpsb movsl (bad) and repnz jmp add and stc (bad) cmp add xor adc add inc mov xor mov inc addb dec push push jge fmull ja add xchg mov fcompl jne dec test test ss xchg sarl or addl mov push pop mov cs mov dec jl or add sub mov mov mov jo xchg jp add adc push mov enter xchg and jae add (bad) loop and dec mov enter roll xchg xchg jno cmp dec add int push xor pop pop push and std outsl sbb fsubrl dec sub or pop jge iret jo fs inc or sbb je inc out adc push addr16 pop jl ljmp mov (bad) jmp add and aaa mov pop icebp lahf pop roll adc aad pop sbb and push sub xor mov in inc (bad) or in cmpsl inc sbb pop bound aaa inc jmp testb cmp and call sbb int test in movsl cmp xchg mov ss popa lret inc cmp push lds cmp push and mov int3 add xchg fs jmp push xor mov dec mov cmpb ja mov sbb or dec pop xchg xor bound adc mov mov sbb sub pop jo cmp mov adc dec dec rcll out rclb into gs imul into movsl sub test pop sub jbe push xor inc jmp mov add jbe (bad) sbb repz out add adc shlb pop icebp in gs jmp ljmp xchg mov push (bad) lret out mov lret subl xor or sbb loopne (bad) mov or outsl loop cmp jmp jp sub packsswb xchg popf call loop fwait cmp daa icebp call out pop (bad) xlat test or or xor hlt xchg shlb or dec adc sub stc inc (bad) xchg call call add imul ss mov in sub jns add (bad) xchg or sbb icebp adc add sub jp inc add cs add jb jne and ret sub sahf imul and ja fwait js test and jl popa push mov inc jl add lahf pop (bad) jecxz sbb fwait (bad) in mov in xor loopne bound in or rcl mov dec xor mov je sub push mov movb sub xor push rcrl add imul (bad) mov sub cmpsb jl and adc pusha data16 fcoms (bad) pusha and jle iret pop inc and adc clc addr16 out cmp shlb adc loope sbb loopne jmp inc or pop adc movsl or inc mov sub sub fdivrs adc push or (bad) mov js pop ret sub push dec sbb nop add mulps dec test adc ficompl mov mov mov mov adc inc sbb je or xor stos pop and stos sub aaa test sub or and and test push push add aaa lea shlb inc cmp nop push add popa mov (bad) inc push test pushf sbbb xchg adc cmp dec enter arpl orl or subb test inc pop and sub cmpsb mov pushf nop add lds inc (bad) testl arpl jae enter inc mov add dec or push push aam jge and mov inc push pop jo or popa jnp xor sar xor ret lock lcall sub loop cmp enter adc jle add dec push lret sub push inc dec or push jno push pop dec inc lea mov nop jne dec popf sub jecxz and addr16 js sbb push mov push mov add (bad) mov jno enter xor aad jo lods inc adc std ret dec inc icebp cmp mul sub fsubrs mov iret or xchg dec and xorb add or dec mov pop addb lret add jo int3 cmp (bad) enter push fisttpll insb insl or in outsl xchg sbb add cli jmp mov mov rcll push fcmovu xchg jmp add nop adc cli ret add shlb fmuls adc sub mov and jl dec ret (bad) arpl inc dec mov pop loopne into push add push pop and push and cmp call movb xchg push cli dec testl mov gs rorl out push (bad) lret sub and and jne sahf sub ss clc mov sub add push ss js adc js pop fwait pop and pop add mov xor mov loop aam xor inc xchg inc or cmp insl scas imul push pop movsl ja cmp call rcll or inc sub loop cmp dec cmc jno fs mov test orb inc mov and pop cmp mov inc lahf rclb in mov cmpl andb push rclb xchg cmp fwait inc xor cmp jnp je (bad) sbb test data16 sbb mov test setl shrb mov fwait or xchg mov add fstl push cmp (bad) aaa dec mov push cmp (bad) rcrb sub add jo or and fisub cmp or push and dec jb rolb sbb xlat xor mov mov adc cmp pop incl xor loopne scas and lock test push outsb loop lcall sub addr16 sti sub test or sub insl popa add add mov push push ljmp sub mov xor xchg inc rolb test push jne pop mov push push mov inc sbb push mov clc mov adc mov test dec cld (bad) push inc scas add or cwtl push int ret aaa jne dec hlt lock mov and adc pop loopne fldcw jg inc je add xchg dec or rcll insb pop test push adc xchg fs pop cmp pop mov jb inc inc (bad) mov mov mov je xchg popf dec sbb test and mov pop das dec mov jbe shlb jl mov pop add aad xor sub cwtl inc hlt shrl lea pop mov adc or mov orl mov or push pusha add dec jmp push sbb rolb cmp rolb dec dec test push aam cmp aaa imul jmp xor test jbe and popf inc mov xchg add int3 push sti stc mov or inc inc add imul je lcall ja sbb push mov and jne adc push iret mov mulb test rorb jbe adc (bad) xor dec add aas data16 jbe negl xor and movsl add xchg loop test dec mov faddl lea mov push mov jle rcrb inc imul lcall adc or (bad) sbb int3 scas leave and out hlt nop adc (bad) mov xchg or cmp push sbb cld pop mov push stc dec adc punpcklbw testl sbb mov daa dec into xchg dec mov sub daa push dec fildl xchg add and add ret enter sub and cmpsb hlt jne stc call cmc or aas ds pop push lock mov add mov push (bad) into inc cltd push and roll pop pop and lcall insb mov mov xchg mov mov and repz and cmp daa sti and xchg pushf add and imul mov rcl xchg jp arpl xchg adc mov andl ds (bad) push mov cli adc dec adc testb push mov cmpsb pop fwait xchg daa inc inc jmp pusha insl mov in mov aaa cs or shr adc les in or cwtl fnsave fcmovnbe dec lidtl add and in or and xchg pop cmp out sbb rcll sub lock or mov popa loope xor and js or push push inc jo mov cmp nop xor mov fnstenv xor rcrb jb pop push ret and push shl pop and aam xor fistl adc xor mov aad test jno push and xor inc test or test js,pn lock call jmp mov sbb mov or aaa mov and sub aam adc xchg sub mov inc xor jmp jge xchg arpl movb add dec push add rcrb lods vmovddup movsb aam or dec int3 adc outsl lods fstpt in call and xchg inc (bad) fldl mov cmp and dec or lods cmpsb je pusha dec enter inc stos dec or les sub adc lahf lea aas push cmpsb call push or les js pop imul cmp and cmpl xchg xchg xor mov movb add adc sbb adc mov fs lods sbb cmp dec push insb add add mov sub stos mov xor lcall and cld mov (bad) mov aam push cmpsb jge adc iret je mov aaa push cmp sub jbe push mov inc (bad) cmp dec cld or lret clc lods cmpsb into push pop inc test bnd or mov xor pop addb movsl inc xchg loope jae lods and inc push dec je dec dec sub xchg lret jae pusha or inc adc or xor xchg stos cld jmp scas xchg sbb scas clts (bad) mov inc jl int3 roll and std and or xchg test add out add (bad) jbe cmp jb inc test mov mov jns jne int shlb aad dec adc add pop push dec cs adc ds cmp shll fmuls dec sbb sbb cmc or sbbb pop and js cmp jbe add enter into lret negl movl jo je outsb xor cmpsb imul adc lcall pop rcll sbb or mov add nop mov push sahf call xor push or fdivr or or mov cmpsl jge sbb sub push jl iret jnp push inc mov imul sbb dec mov pop popf push lods push pop jo inc lea int repz stc clc ja jno dec jb jge imul imul push and addr16 xor mov dec adc rdtsc mov xchg ljmp aam jnp pop pushf into mov loop cmp andb popa sbb xchg or add or xchg aam jp push popf add (bad) push fiadd and adc fimull xchg jle daa popf dec mov add and frstor cli pop and nop add sbb cmp lods (bad) xchg add jle add nop dec je xor sbb adc and stos push and adc or in jmp mov divb adc cs mov or sbb or push push clc dec inc in push out mov add (bad) inc sbb sbb fistpl push or inc push mov mov lea pop dec rorl dec mov lods push movsl pop mov inc dec inc xlat jmp cs pop fs adc sbb mov xor inc inc call and int je bound push hlt addl mov cmp mov and xor inc orb test xchg jmp mov loopne aas xor addb or js addr16 dec cmp ss cmp jne cli xor lret je cmovno sub subb push jle push lock pop (bad) xor loopne mov lods adc ret jo (bad) pushl mov jmp call or sbb sub pop hlt leave mov or and sub mov es jno push shrb push pop jno jge push dec jo jne adc lret mov adc orl cmpsb add add adc adc in push pop sbb mov xchg mov pop xor jbe mov call loope addr16 insb add adc nop rorb sbb rclb add or pop cmp in arpl popf test push in dec mov rclb ficomp add dec fdivrs bound stos push fdiv jns or or subb pop data16 rcrb rolb daa test mov xlat movl fcoml push das xchg lods pop es adc test and les dec jo sbb pop push adcb jae dec inc push and cmp lods jo insl mov xorl loopne adc test add stos int3 or and mov jo push test jge mov and xor ret mov mov pop notb mov pop push es loope cmp out aaa cmc jne (bad) jne push adc sbb jno negb cmpsl add in sahf cmpsb cmp or sub adc ret pusha jne inc lret xor in xor mov and pop mov mov call rcrb je cmp fadds imul xor xchg pop add loope lods inc fdivs int3 cmp mov je out dec fstp lcall cmc push je mov outsb inc cmp adc push xor jmp xchg popa mov push xlat inc mov call sub (bad) je push xchg js mov cmpl and pop add rcl pop mov es dec clc or mov or sub cs aaa jnp push mov pop fs data16 pop and andb push loopne sar mov test push nop cmpsb adc loopne or sub or inc cmp call fldl ja (bad) mov push sub pop mov push push sbb nop lock loope ds mov push clc pop inc sbb jle fsubp outsl movsb pop cmp or dec inc in sbb adc les add sbb ret rclb pusha fs push loop sub fsubrl jbe sbb and mov cmp sub or lods dec push adc and sbb fnstenv or sub and mov add dec icebp (bad) in sbb ljmp inc lret cmpsb movb mov sub adc fbstp lods adc fstl lds dec mov cs call xor add add adc outsl push adc mov fs nop dec or push sub jp xor movsb jl mov and lahf mov movsl cmp (bad) js or add jle hlt je in or lea rol outsb stos ja jp or dec and andl or jbe adc sarb bound ror in lcall addl add dec push in fmul push sub pop fsubl int3 push loopne mov cltd xor je push sbb je adc mov ficom mov das imul push jnp adc in sub sbb jl xchg in push cli loopne imul jne push push jns rorl je or dec mov loopne mov clc pop mov pop cs or jne and or (bad) xlat jmp xor sbb js ds lock inc sub or push push dec outsl lds aam inc xchg mov fnop pop push icebp je cmp ret loopne aaa xor clc dec sbb mov dec outsl addl ret lea mov (bad) cli cmpsb dec jp outsb push push fsubrs push fcomps movsb mov (bad) jb sub adc or mov and call or xchg fwait adc dec xchg aaa rclb sub jo inc pop sub js jl pop mov daa jle subl or inc bnd cmpsb repz adc dec (bad) mov rorb inc mov stos (bad) mov cmpsl mov adc inc cs xor lcall mov mov jb fnstenv outsb rcll xlat shl xchg out adc in jl movsl adc stc mov adc sbb and lcall loope inc sub add xor mov xchg push inc lcall jl push push mov insb sub nop ret sub aaa imul inc add add or ja push cmp mov mov cmp or pop pop pavgb cmp dec adc add into dec inc mov stos sbb push pop pop insl mov leave dec or jmp push mov push imul or push adc stc or sahf jp mov les push adc xorb stos mov rclb je or imul jbe sub pop adcl cwtl xor or inc cmp push imul shr xor and dec jmp mov sub icebp or jo add subl enter xor jno push mov inc xor inc cmp adc out jmp push test dec ret (bad) jecxz fs iret ficom jmp and (bad) pop adc cld mov xor jns mov mov pop aas call and addb push or movsl or pusha push xchg loopne cmp outsl add or mov pop fdivs push mov cmp and push xchg in dec cmp loope or sub cs mov sub (bad) lea loop outsl and fdivs push jnp push add fstl adcb repz dec xchg loop adc ss dec mov mov adc imul xor mov fistl and mov adc pop sub rclb push js push je dec loopne callw mov xor cmp lahf subb dec in xchg stos nop hlt mov call push (bad) and add sbb cmp loope push xor sub out cld (bad) sub jmp and pusha cmpsl nopl sarl cmp xor (bad) cmpsl add imul push loopne cmp jbe dec xchg ljmp mov cmp insb bound xor addb or in xor lods sub or and sub lahf push push push insb mov popf add push sbb int3 adc (bad) mov das push data16 add rcrb imul adc (bad) iret inc sbb or arpl arpl jl fwait hlt and jecxz lea inc adc fistl fisubr (bad) push adc (bad) push das inc minps call inc pop mulb cmp fsubrs push and adc jecxz sbb out cmp in push movups mov popf jnp or iret faddp sti push test sbb xchg test add clc or mov sub (bad) mov (bad) or inc insb add hlt es mov adc fnstcw add jecxz lea and dec dec pop sbb out adc fwait leave push lcall xor arpl fmulp xchg ja movsl daa add nop pushf sub pop jne push or xor jg cmpsb ret mov xchg xor dec cmp sbb sbb subb shrb loope ja sbb pushf jp imul insl movsl adc lret mov mov inc test push xor aaa adc fimull xchg addr16 inc or sub xchg jp xorl pop push nop add js loope in dec loop pmovmskb out lea mov cld add daa fnstcw sbb cmpsb rcrl leave call into pop sub cmp inc push ret imul adc lods and mov or fs sbb lret (bad) push (bad) mov hlt mov gs sub inc sub rorb insb xchg cwtl imull shll xchg mov push mov (bad) arpl push add or push mov mov xor sarl mov inc xor mov sub popa xlat dec or jge inc add ds cld data16 push loop adcb mov sarb lahf or xor sub xchg ss xlat cli arpl lcall sahf ss inc xor add xor sbb and sub xor sbb or js (bad) mov sbb sub sub pusha cmp pop arpl dec mov adc push sarl test cwtl xchg movsb nop call call (bad) and xor mov lret sbb mov cmp adc cli mov dec cmpsl mov pop pop sub pop inc push ds cmp je or xor lods icebp adcl test mov imul push fisttpl or aam dec data16 push data16 jo fbld test xchg test pop push mov jns ljmp lods lea sbb pop loope jnp push pushf mov outsb cwtl sub ficompl lock test or mov adc pushf or mov push jo push mov jecxz nop push sub pop add fisubrl rcrl insb outsb dec pop jne js je jo mov dec popl adc std test pop loopne aas pushf sub jbe sub mov dec mov jg push xchg adc add nop push dec test jo lds jae mov xchg add (bad) adc out dec shlb ljmp adcl pop movsl shrl test mov cmp add mov adc jecxz xlat movswl adcl or sbb orb or or cmp mov clc cmp add (bad) out insl push inc ss hlt jmp pop je and repz sub push imul in fildl clc in insb cmpsb inc inc push inc (bad) inc or add lea push push test test ds cmp dec xchg push or jp int addb add out stc test sub or negl es push lret inc cmp cmp add les sahf shrb pop enter adc aas iret push je mov and aaa and fnop dec push aaa dec sub mov pop sub adc jmp rorb adc pop add stc add rcrl insl notb add or xchg push mov add cmp pop cmc pop push mov jl test and or sbb add or mov pop les in (bad) or lea lret test fidivr and outsl notb shlb add cmpsb enter mov cmc (bad) or cli add fucom leave mov jge xor dec sbb mov inc adc cmp xchg add sarb lea int jne add or lock popa das les aaa and mov push add add and fimull les dec cmp cmpsl lret xor dec and popa nop jnp fidivl mov fwait push rcr mov (bad) je cmpsl mov nop jle out incl mov dec sbb out add aam or in mov je (bad) adc or movsb adc jle stos test fwait in push or push adc sbb test call mov mov fadd xor sub outsb push and mov icebp mov pop call inc push add popa mov add xor sbb push js pop cwtl mov pop mov (bad) loop sbb je int3 xor insb test or (bad) or cmp mov sbb loop stos clc pop xchg je push and add (bad) mov repnz aam or mov and adc fwait push xchg cmp sub add cmp je jle andl jno pop add in dec add bt jns adc leave mov add dec adc (bad) mov mov outsb sbb dec movsb pusha mov test popa xor sbb sub nop lock and test mov mov shrb into ja add enter xchg pusha xor je mov inc mov and es or xor sub sbb test ss mov fildl sbb dec inc xchg sbb inc into pop add faddl mov shlb adc pop pop pop lahf (bad) lock and js cmp add push jnp pop ja fidivrl cmp or jl lcall jle mull test loope jb (bad) push pop adc xchg xor fsub mull add (bad) sar add popa (bad) call jp in jmp sbb ljmp and push inc pop lea js dec (bad) jle imul sbbl cld jb or or mov cmp and jg repz clc nop cmp test push add adc xchg std js sub mov sbb mov add fadds jp jns or push sub dec (bad) mov dec orl enter icebp pop or cmc sub std rorb or lret je cmp xchg rsqrtps out xor call or bound cmp xor test mov cmp push lcall mov or add push push xor xlat test lahf inc jae inc xor das push mov jb jno cmpsl pop or mov inc aas imul (bad) xchg loopne xchg hlt jae mov repz mov jle jno add adc insb mov pop xor (bad) popa sbb push fnstsw xchg push sub sarl mov mov push sub sarb adc stos adc xchg mov xchg xchg add loopne,pn mov xchg aam gs mov pop xchg mov mov cmc aam mov jbe scas sbb push jge pop jl (bad) cmp sbb sbb inc add les lret (bad) mov arpl and cli in test adc adc dec aas ljmp push or into dec imull pop or hlt jno dec dec cmp ret push fwait mov mov push add pusha shrb jecxz inc jno lea outsl stc sti insb hlt or sub lahf mov add pop iret imul dec push sub xchg and mov xchg cmp out add and pop js pop mov jmp sbb icebp test dec std aam loopne cmpsb xor adc pop inc sub pop ja sbbl mov add jge ja je mov inc out xlat or adc or pop icebp mov inc or dec idivl push jae jl push aas push rcll iret push push popa loop adc inc and sub sbb sbb aam rcrb add repnz sub push cli adc jb cmp loopne xor rolb or jmp xor je out mov shll fs movsl push insb mov nop inc and mov mov (bad) mov inc ret fwait push sub adc and pop sub repz xor idiv outsb adc xchg pop push mov adc es sbb enter sub and add adc ljmp and xchg sahf fwait and xor sub dec (bad) and adc add cmp fcompl push xchg shll mov inc xor ficomp dec idivb xor in js les lcall je push je (bad) ss jge xchg sub mov mov pop aad fidivrl jmp sub or sbb xor push xor jbe xor aad add cltd sub push inc sub pop push test xor cmp pop mov pop (bad) call mov lret nop or ret xchg xchg dec mov nop mov or mov mov inc pop cli jnp mov (bad) clc lea (bad) mov movsl adc inc dec add decl or jmp adc inc clc add in xchg aaa ds popf and arpl mov push fs adc push xchg lods in call dec push mov and inc mov pop jecxz push adc andb or adc xor cli add (bad) xor inc mov push call fneni(8087 push add add mov xchg cmp add and xchg sbb lret inc insb pop mov push push cmp popf jbe xchg inc stos adc loope into stos sbb shl movsl mov aas cmp stos xchg lahf sti nop ret mov xchg xchg scas inc xchg add or xchg icebp xchg xchg cmp mov fwait mov push sbb sbb dec add xchg mov sbb std cmp and imul inc push bound iret dec mov add xchg in mov or adc test fdivrl (bad) cmc dec push dec jnp (bad) insl enter fwait push les clc rcrl stc jno pop cli mov fimul adc fs je xchg push sbbb sahf add jo xchg jno cmpsb inc adc loope adc loop pushf add jno pop (bad) add test or xchg cmp push and xchg jns sbb imul call or test cld jmp cli and lret shlb cmp add cld cltd push mov mov mov adc (bad) dec and xor cwtl outsl lcall es (bad) and xchg add cmpsl push push fs sbb push cmp and sbb jno nop mov roll cwtl mov jle cmp cmp leave das aam mulb test inc ret fiaddl ret push popa pushf jle pushf (bad) or adc push xchg rcrl jge loope xor inc jnp add daa add xor mov or adcl add subl push adc push lcall rolb test push rcll sbb cmp clc roll stc in mov adc or adc inc adc add xor shlb stc jno fstl and jae adc jo mov push adc call xchg enter mov lods inc les inc inc arpl or mov loopne into outsb loope (bad) adc fist pop mov dec cmp inc dec cwtl inc sbb lock sub sub pop add scas stc adc push adc daa xchg mov loop sbb cmc fist or call out jl push cwtl popa mov (bad) js inc add sub cmp rorb insl jne imul mov call cli sbb and push mov es xor pop pop mov cmp inc add stc dec lods adc rorl push xchg jb in call mov push cltd or add lahf adc xchg movsl jo dec (bad) sbb add adc mov lret scas lret call lea pop sbb loope or inc bound lahf cmpsl xor dec fs mov jg push add mov mov sbb fisttpll scas das jle lods aaa cmpsl xor dec push or jl mov ficom shll pop adc push rcll cmc insl adc mov dec imul jns imul or call push inc in jg gs cltd inc push lea fidiv mov and jmp xor adc adc xor inc call mov push cmp lods or jne data16 add call adc adc hlt (bad) sub addb dec ljmp add jmp jb sbb mov xor cwtl jne sub mov fldcw movsl xor sti movsl iret call inc or sbb in lsl and in sbb xchg (bad) adc inc xchg mov add or push fnop add push (bad) decb inc pop xchg xor or inc add sub enter inc lcall dec add mov mov inc cmpsb sub add lock bound andl lret rorl inc dec pop mov popa cwtl cs mov int je fmuls push loopew inc sub je and nop daa push cmp arpl outsl or je in ficompl and push bound aad cmp pop xor fldl2e nop addr16 inc leave and cmp repnz hlt mov xor mov and dec sub scas movsl mov idiv xchg jno adc fcom jb cmp lcall mov (bad) mov jl movsl cltd (bad) enter or jns add jne mov icebp mov or xor cmp mov push xor pop shlb push mov imul and pop shll cmp mov mov outsl mov mov sarl frstpm(287 (bad) bound (bad) flds test in cmp aas add leave xchg pop jge (bad) fisttp sub leave ret mov mov dec test and test jns push addr16 mov jns into (bad) and adc add repnz repnz cmp fisttpl dec inc dec aas mov mov mov add add inc mov mov xor in ret outsl dec fcoms jge test aam repnz nop ja (bad) repz scas (bad) or fs pusha scas pop mov dec sub test inc cmp jns inc jecxz test out cmc movsb push push mov adc dec jnp xchg dec or dec sbb outsb add or sbb jecxz mov call inc popa adc testb mov xchg push sahf pop inc lcall adc ljmp adc push repnz out dec cli ret mov and cmpsb leave mov lcall nop inc or pushf in xchg cs and in addb and cmp mov and adc add mov mov dec out push sub hlt nop dec add jb xor cmp xchg hlt ror movl mov jg pop into (bad) or sbb dec sar push cmp jne shr in sahf lcall or push fcoms inc dec cltd adc lock jmp (bad) fwait popa fsubrl call xorb inc adc push and push mov nop shrl push sub push insl sbb lods jnp xlat dec add (bad) fnstcw sub and cltd inc or cmp test sbb push xlat cmpsl and dec pop call add xor or roll movsb and cmc clc lea pushf sub out loopne add outsb cmp in fist mov pusha cmp add add pop test inc mov ret dec dec dec fs push xor add mov loop je sub addl push jmp sbb or bound push sub push or pop arpl out cmp add mov mov jp call outsb jbe cmp je inc fs lods (bad) (bad) push sbb repnz add adc dec popl xchg rolb enter adc mov and sarb or add hlt and add lret or add ret iret mov jne dec (bad) mov sub ret adc ljmp fisubl xor and pop push xchg inc out or add popa jns insb nop or adc ljmp mov leave pop mov test call mov sbb pop leave call (bad) test cmp push dec pushf in xchg inc pop push pop cmp out xlat jb push lea nop mov pusha mov popf add aas sbb or in or fs rcrb fs mov imul sbb inc push add cmp pop lret xor xchg mov scas pop adc mov pop fdiv out fdecstp fcom outsb or dec adc jge cmp adc mov jb fmuls mov arpl stos cmp pusha inc add inc jecxz add hlt int unpcklps xor (bad) mov shrl pushf mov pop sbb sub pushf in push mov call mov pop adc enter roll jmp arpl xchg popa gs outsl ret (bad) movl inc inc jge pop or and mov out inc push jl inc pop in lahf sub push mov push inc xor xor xchg je xchg adc lahf mov or xor pusha popa mulb testb add add add mov cwtl push lock cmp adc enter sbb sarl pusha jl aam mov insb imul cmpsb inc add enter pop pop ret arpl and xchg test clc in dec sbb and add push icebp pop cmp push and pop fs pop movsb std loope popf push jg dec pop mov outsl mov push mov push push add mov jecxz inc and sub jnp movb push push xlat xor loopne enter xor (bad) fs mov cld sahf shlb push cmpsl jl fildl xchg xor push adc and pop pop mov and or mov inc sbb xchg mov fs test inc mov inc pop sbb shlb add mov pop jp lods notb jge mov lea add mov add in shrl cmp (bad) xchg call xchg aam xor fdivrs inc insl or inc cmc mov (bad) inc pop es ds icebp dec cmp sbb leave in nop push dec mov cmp (bad) xor xor adc lods sub jno (bad) daa inc imul call lret inc sbb adc and pop stc dec in cli sarb push je pop mov adc and leave nop pusha mov and push push daa sub arpl pop setge lock sbb sbb (bad) in and das sub and mov aam leave mov push pop iret ss cmp mov stos movsb lock add imull inc jg es dec or or xor or je in (bad) and cli pusha cltd ja jmp test in adc ss push mov (bad) enter xor mov sub xchg push mov cltd add add test outsl icebp cmp dec mov or (bad) cmc push insl push lcall mov ret outsl xchg xor mov dec cmp mov insb dec nop sbb adc (bad) lds fdivl (bad) jno add out es and cmpsb in out dec lahf inc (bad) mov cld add push shrb pop fwait cmpsl in enter lretw mov inc cli dec sahf push jp in call roll lods iret mov (bad) push add cmp pushf out push cltd lret iret cmp mov inc scas push hlt mov movsl mov addl xor nop add gs pop fbstp xchg xchg mov cmp inc faddl pop sub xor add nop cmp sub fstl or cmpsl sbb add push ds cmp and je adc in lds xor call fwait pop inc pusha das push hlt pusha jnp adc pop mov adc adc popa add movsb add ss test cwtl lret ret push fs pusha jo or popf mov call fcmovbe arpl aas in mov add loop push subb add cmp mov add xor inc xor add (bad) cwtl sub stc dec push and into jo mov add and movsl mov lea jno loope sbb and fwait add jmp lret sbb scas shll movsb jb insb out fildl mov lods push ds dec sahf push jb std das in cmp outsb or xchg or inc or rorl and lahf test sbb bound jo movsb mov and imul add jno add push push test call xor mov daa jl fnstenv xchg xor cli fcom dec inc bound (bad) enter xchg loop out sbb pop cld adc bound ret push dec pop push das insl push jmp les xor mov movsl mov add xchg xchg inc movsb andl test aas or fbstp fisubl in cli push push mov or pop aaa jmp dec test inc add (bad) (bad) lds movsb xor sub adc add xchg adc or out dec adc insb xor jae rcrl mov pop mov lret cld fsts inc dec lock ds test pusha mov lahf movb push rolb dec cmpsl adc adc jns,pt roll push push push inc movsb lock sub jo and mov push xchg es cmp cmp add adc stos xchg inc nop addr16 cmp jmp inc ljmp loope jns inc mulb dec leave stc xchg mov andb sub xor sub cmpsb out inc jns loop movsb aas xchg divb icebp or push cmp or ljmp adc xchg sar jne xor stos fildl lock stos pop jle add pop mov mov dec pop les mov sbb mov mov popf into hlt and inc jnp adc push mov lcall mulb ljmp sub xor cmp mov mov js push fs sahf push lods dec imul (bad) ss iret repz dec push pop jg imul sahf data16 xor add insb jns hlt cmp cmpsl stc push outsl outsb in outsl andl gs xor or or mov xor add xor pop and js (bad) mov das mov insb dec int3 sub scas and pop or push or lods popf xchg sbb inc jle shrb mul adc je cmc xor cmpsb sahf xor and pusha cs push dec xlat jle add add (bad) divl add sbb dec jnp push inc mov xchg lret leave dec fs daa sbb or sbb sahf mov cwtl lret repz push dec sub stos dec mov outsl pop call xchg adc cmp ret daa xchg add (bad) mov push add sbb es xor xor rorb hlt xor aaa sbb adc repnz or iret sub (bad) dec cld mov das out loope,pt test inc dec lret xor insb adc mov mov ucomiss mov xor icebp xor sbb rcr mov daa ret sub fimul mov and rcll pop or adc mov inc inc push jbe (bad) mov sub inc sbb add adc pushf ret sub push (bad) loop sahf cs lret leave pop repz shrb (bad) les adc sbb jo roll jno mov pop pop gs pop fmuls mov push jnp add rcr xchg shrb and iret or add ficomp push mov and adc les ljmp push (bad) xor and das mov sub inc imul cmp or sti push in and xor in mov movsl push mov iret notb dec dec pop cmp sub movb test jg jbe std hlt js xchg fist push mov rcll hlt inc xchg icebp add in rorb sbb leave inc dec push pop adc pop sub fwait outsl push cli fildl sub sbb fs jl mov mov in adc xchg adc add (bad) xor jae mov fwait jnp leave les lods mov enter xor xchg movzwl mov test push adc xchg cmpsb rorb adc sbb loopne add xchg loop loop fldlg2 or push in pop cmp add mov cmp je inc sub jl cmp cmp adc lret mov mov dec and push xchg stc call xchg adc (bad) xlat push test aas movsb hlt mov push mov mov test outsb xchg and dec (bad) jmp inc xchg (bad) mov xor adc add xchg inc cmp push or push hlt fwait adc loopne mov adc aas xchg push pop mov mov mov je addb or (bad) pop sbb sub cmp gs lcall call mov dec (bad) jo and mov push sbb mov jg mov cmp push and popf or adc pop inc je push push adc xchg cmpsb ja in shl leave add adc loopne mov rcrb fcmovbe js sbb cmp add je (bad) aaa jmp out enter sub iret xchg xchg sbb and sub add mov adc rcrl cmp cmp push rorb test inc incb test or sbb pop jg insb dec push push jmp jp repnz dec jmp adc sbb das adc (bad) xor or add aam pop sahf inc inc inc add push add xlat pop mov xor sub mov mov mov jge mov inc inc jp jg or dec or xor out add pop push add and clc dec push js xchg rcrb mov mov test sbb push fnstcw or mov call inc adc inc lock je inc push mov adc rorb jb pop inc rclb lds repz pop dec je and testb pop mov aam or insl and sub (bad) leave push lcall or add sub out mov je dec ret aas out es rcrl sub lcall outsl or idivb sub push xor mov rdtsc push or add adc and dec loope imul ljmp aas sub mov je and inc push call sub sub cmc xchg cmpl mov adc outsb ja lea nop rcll cmp jge test imul imul mov jmp rcr (bad) (bad) (bad) jmp stc es push lcall movsl jo popa orl jo call inc push mov add outsl mov mov imul (bad) in daa ret dec je nop push jg push popf push clc sbb and push mov xor dec sub fstp inc sbb fisub sbb dec popa out ret adc iret and sbb or leave cmp cmp add fmuls jns and rorb shll jp jp (bad) and xchg xor cs call xorb xchg js movsl cmp xor popf clc aaa inc lods fs test mov push jno add call adc mov xor sub mov pusha jo xchg fistpl xchg xor cmp cmpsb std jo push jne or xchg sbb or arpl (bad) and xor lock repnz mov dec lods cmp scas pop add call popa xchg push movb xchg and add test cmp cld les mov mov sti jb sarb sbb xbegin pop aam lds mov gs call ss jge cwtl mov mov pop jmp push add add and insl rcll cwtl add xchg sub aam in mov sub and inc or test mov test cld inc aaa je lods sarb lock addr16 call inc adc and rorb pxor je cmc pop incb fbstp lea rol add lret cmp pushf out sub sub push frndint mov dec ss loopne int js push push add enter jnp xor test fdivrl jl lcall ret xchg inc push push js ds and xchg mov push arpl mov sub aad shrb mov roll or mov push sahf jo in je adc cltd push lcall (bad) in ss push (bad) push adc stc mov js or mov push out jge mov jmp xlat push mov and fucomp inc mov add mov rolb and pop mov sbb sbb push jns jno push (bad) jmp and jnp loopne sub pop mov (bad) leave or notl push (bad) xor add dec fisubl test or lock pop inc js bnd pop adc fsubl xor and mov xor call cli push xlat ss lahf add fcmovu jnp xchg outsl add adc and cmp popf mov call push mov scas clc add add jl or mov sbb inc repz dec flds push out fbld (bad) mov icebp aad cmova inc add je and dec cmp lcall jne in pop xchg cld pop and pushf je (bad) lahf scas pop add cmp lfs fild adc xor nop push mov sub sahf jmp shr popa dec popf test (bad) rcll push cli cmp add aad enter xchg pop in in xor and pop js mov les rcll lds inc outsb adc and and xchg push das cmpsl sub xor frstor jno test lods sbb jo xchg or (bad) pop rcll push push in (bad) xor push mov or loope pop lods mov xchg mov popf and sbb pop lahf (bad) gs jl xchg cmp sbbb mov orl cmp mov or fcmovnu (bad) movsl push push fldenv adc (bad) ss adc das adc jne rorb sbb dec pop pusha loop fsubr fadds lods xchg mov jmp loop and push xchg dec jl mul icebp dec xlat and sarb pop xor or push imul xchg push sti aaa and std add add insb out es xchg cmp xchg lret hlt scas addr16 and rol cld mov subl push sub test lea push push jmp add adc add nop flds xor mov loop popa shrb mov mov sbb add xor mov push test lods push push xor test jb in inc jnp stc xchg mov je xor sbb xor pushl test je fistpl xorl sti and sbb movsb or test cmpsb ret push sub test or mov jbe cmp subl daa jnp mov nop mov jb out inc inc repz mov sahf sti sub mov push adc mov pop xor bound cwtl or mov aaa ret push nop roll ss aam popf mov inc inc push dec test pop mov jp and pop xor leave clc or rorl loopne xor xor aad test call popf inc push xchg clc jge push clc mov pop leave pop mov xchg and incl sub cltd adc push or inc or fs test dec test movsl xchg rol cmp aas cmc popa subl fcomi mov cmpsb pop mov sub pop ret (bad) es add aaa push jnp ret iret nop nop sub adc stos xor push inc push popf mov adc dec sbb sbb lods jmp mov (bad) and stos xor ss pop shrb test pop fadds je or sarl mov dec add das scas ret inc dec mov xchg jns push jbe mov mov mov add lcall (bad) lock pop pop xchg dec adc xlat or adc mov and adcb out push xlat call cld nop dec loope leave les jo cmp xchg push in rorb xor cmp add add subb and pop sub and sbb ja push add add leave pop and xchg pusha pop call and add sbb pusha andb mov push add pop jb or aaa mov add cmp ds and inc adc xor inc or out inc cmc dec add dec (bad) and cmpsb cld dec cld mov and or fcoms lods in add mov dec movsb jne sbb (bad) out pop push pop lea ficoml mov mov (bad) mov sbb pop cwtl in sahf pushf loopne enter jge sbb and inc insl loop cmc mov shrl pop es std mov popa dec push out and (bad) sub push jg xchg je mov and repnz adc adc push xchg sbb pop ret mov push imul mov (bad) xchg mov (bad) push int3 (bad) mov sahf mov dec xor lahf aam stos movl cmp add pop rorb cmp and das ljmp lock outsl call es or scas arpl add pop sbb mov inc or dec andl inc adc xchg sbb call clc mov arpl sbb ficoml push jge pop mov mov lock call mov add leave ret xchg es (bad) outsb aad jns mov adc sbb cmc xchg xor pusha dec mov sub or cld bound inc or and pushf or lods andb insb orb lock push push sub decl add std mov mov cmpsl fadds cmp mov add push (bad) mov push repnz cmc jge xchg es int ret pop add rcll icebp cld ja and (bad) or shl test add sbb dec mov inc push or rcr xchg or (bad) lea cmp inc cmp add adc add inc push add xchg aad gs or cmp call mov sar mov or add add push mulb lea inc bound sbb stos mov and pushw stos or jge aas and stos inc int pop jmp sbb ja inc or insb jo sub pop sbb (bad) iret mov dec inc mov das popa sub stos call cs je cmp rcll fwait xlat push insl push pop add or sbb ficompl or sub mov pop pop jp (bad) into and xchg or push js jne push in ret mov lret cmpxchg mov pop push ljmp xchg xchg mov cmc ret adc call jno inc mov sti xchg nop dec push add add xor stc jle cmp or add xchg cmpl fdivl mov mov je sub dec mov test (bad) out or xchg stc out out lds xor mov xchg pushf inc cmp aam xchg mov ds addr16 and or jge in minps pushf push popa (bad) outsl inc sub sti dec ficom inc and adc gs cmp pop out not inc dec add or pop dec repnz arpl ljmp lahf scas sub jmp pop rorl call pop gs dec (bad) cmp mov in dec addr16 sbb dec xchg loopne adc mov xchg add jnp pop adc mov aaa cmp pop ds and dec xchg lock lock mov popf into loope adc test call in add xchg pop lret call jo or lret call imul imul rolb add js fidivr aaa stc fchs adc sbb lcall mul imul cmp imul add rorb (bad) lahf dec and pop inc lret leave add or pop adc add and sbb lahf mov adc call cs mov xchg inc fsubl addr16 adc pushf jns ret xor mov add dec int mov aad inc xor mov sbb jo add jmp mov test push loope loop test lock sub cmp push call jp addr16 in add xchg xchg shlb mov add mov ss pop rorb out or pop sub or ja call daa sbb or lea adc rorb sbb enter or dec xchg divl or movsl push adc sub rorl add scas mov xchg loop mov int3 cmp lea push inc jmp lcall aas pusha pushf mov and and lea and add cwtl jmp scas mov xchg (bad) or shlb insb mov test mov xchg imul adc loopne push mov adc das adc nop push sarb ss (bad) stc stos js inc cli xchg xor lret sbb inc pop arpl ret cmc daa dec fadds mov aam sub add les rcrl call pushf jmp pusha out sub iret mov xchg enter pop pop jns imul (bad) fldenv mov movsl aam stos popa sub cwtl loope mov subl mov add je dec add stos and jmp dec in stos popa or dec mov daa orb je jecxz sbb and repnz fcoms xchg add or inc ss and test jp faddl popf stos mov dec pop push pop loope xchg xor xor xor sbb mov xchg mov or xchg mov les add je lret in add loopne nop dec adc fld mov in lods and push mov (bad) mov call loope aam jp ret inc daa movsl mov sub sbb daa add sub cmpsb or jbe mov xor xchg or xor in cltd movsb int3 mov out jb sahf mov jmp and adc call lahf subl je sub adc test sbb sbb inc add cmp jb xchg adc xchg xchg loop add sub rclb adc iret fwait arpl sub (bad) stc (bad) mov add push jne xor fbstp or push dec jne and sub fbld adc lret pop dec js pop stc xchg jbe push adc rsqrtps outsb inc sub sbbl cmp (bad) jb pop es outsl sub or xchg mov or pop mov pop inc addr16 adcl negb mov xchg loopne push and ror mov and enter mov pop push sub out adc call cmpsl jne sti mov insl jp jno cmp pop sbb leave (bad) jns ljmp aaa nop outsl mov jne (bad) mov pop sbbl addr16 faddl (bad) add cmpsl sub push xchg or cmpsl jne inc call jl aaa pop call test es inc adc test or xchg cld xchg jb and lods cld xchg (bad) cmp adc mov xchg imul test mov mov test call inc xorb loopne data16 fwait add std cmc or inc imul in mov je adc xchg into or pop dec and sub push arpl cmpsl dec lea rorb mov out lahf hlt sub or into mov in aam nop int3 rorl mov fs jb lea xor (bad) add or add and adc pop pushf push lea addr16 inc pusha add jmp dec mov pop sub mov or je dec dec and sub sub mov cmp movsl pusha dec sub cmpsb jno mov ljmp or mov dec (bad) fisttp xrelease mov adc (bad) mov xchg push aad sbb sbb mulb sub pop push jnp inc sbb sahf jne xchg aam lds add loopne xchg cmp fbld mov imul xchg sub fs adc ret or inc jae adc push push jns (bad) ret ret push xchg add cmp jbe cbtw inc lock sbb jmp loope cmp adc stos lahf lahf xchg add add loopne cmp loope psubw dec movsb fdivrl sar cmc in add add cmc dec add xor aam in cmp push push xchg and orl inc addl lea dec js (bad) dec mov js call nop dec iret (bad) xor mov mov pop dec inc xchg xchg aam sbb movsl pop push jge mov and cmpsl ljmp xchg clc add push mov es push mov ret xchg jo mov clc test jne aaa push jo xchg rol mov insl test call dec gs mov insl mov add dec dec xchg add and stos lods pusha and pusha mov push sub cs call pop push test inc pop test cmpsl dec mov movsb dec mov (bad) or mov inc cmp (bad) jbe jae jae mov mov (bad) or and xor mov cmpsl pop adcb nop adcl (bad) jno sbb xchg or ret gs pop dec push test and xchg daa fcoms pusha test or fildll imul jl movsb cmp push adc cmpsb cmp sahf out icebp mov or lock xchg ret inc movsb xchg in xor rcll enter and xchg lock js and cmp add out ljmp fldt lcall adc ret mov test outsb (bad) fmuls adc add out enter add adc dec xor sbb (bad) loopne pusha (bad) mov adc xlat push aam gs sub mov add jb jl enter push or ret leave daa stc and call aas cltd jl dec dec sub or sub jns xchg xchg mov divl push lcall pushf mov fnstenv or cmp cs push movups cli mov subb pop fwait xor js adc mov popf sub sbb pop jb loop pusha loop push out pop adc js negb cmp sbb push inc insl add adc hlt adc in nop iret mov inc or xchg imul cmpsb std negb pusha pusha mov outsb or jne cmc pop nop aad pop add scas scas mov outsb jbe cmp ja mov imul sbb dec in std adc jmp lods repnz int xor stos mov cmp mov push nop xchg shlb insb cmc xor insb test imul stos mov les stos test rorl and repnz sbb outsl push (bad) pop push inc sbb aam push add inc sarb test sti jmp repnz inc inc or adc add mov dec push call sar lea pop lock lock ret push jno ss add xor bound js xchg jne jl test inc (bad) mov adc cld sub mov mov jo add sti (bad) lret and mov pop cmpsb inc adc aam inc adc adc scas lock rcr mov add (bad) mov fiaddl push mov add mov orb adc or dec adc jl fisttpl cli shr xchg mov out inc rolb mov push or sbb mov inc add data16 cmpsb adcl jnp movsb repnz jle or mov andl add or movsl mov hlt pop sub dec fistpll jnp pusha pop mov pop inc je cmpsb inc (bad) pop jg dec mov dec and cmp dec dec adc mov jnp test mov add mov dec cmp xchg sub lock insl ret xchg mov cmpsl add enter icebp lods sbb sub xor dec jns cmp pop adc insb ret int3 in dec adc stos add push lock ret hlt jle add inc ss std pop dec adc sarb push ljmp fsts in les xor mov ss xor xor jo xor adc pop cmpsb xor (bad) sti dec mov xchg test movsl movsl insb imul pop fstpl inc xchg cmc xchg fisubr mov mov gs xchg mov in add fcom rcrb jne call mov (bad) jb sub sub insb out xchg sub sbb push (bad) testl arpl mov mov sbb cmpb push inc rol fcom mov insl out mov mov popl adc das or jmp xor inc lcall mov cmpl lods push push fcmovnb inc je jbe dec and jle xrelease push cmp mov or and sbb aam cli add js fisubrl insb pop das rolb lods jge insb pop xorl cmp movb dec mov adc push push enter pop xchg idivb xor rolb inc cmpl inc inc push add xor icebp pop (bad) (bad) ljmp add pop xchg leave or cwtl push ret das sarl add stc rcll cmp xchg stc and insb sbb lock arpl fstpt or cmc xchg stos add jns cmc rcrb push cmp adc lcall jmp and fcmovnu push rclb icebp add sbb repnz call mov arpl fisubrl rcl adc pop mov sub (bad) ja insb aaa xlat sarl cmp cld hlt or lret clc inc das inc xchg sbb xchg ret (bad) lcall ljmp push xchg xchg push jns mov push push push jne add sahf adc dec xlat and and lret inc pusha scas and jne call and pop push sub popa jae sub inc and and inc add fadds add sub push rcrb dec cmc jmp out test js test mov cmpsl cwtl dec rcrb lcall in sbb cs mov and mov clc sub mov push xchg adc push sub pusha leave sbb (bad) jae or pushf add nop popf mov jge (bad) mov sub jns dec (bad) cmc or cmc popa js and mov repz (bad) stos cmc inc dec cmc cmc xchg imull sahf inc and mov lcall dec and pop xor subps popf loope cmp xchg sbb push ss mov push call (bad) aam mov scas xor frstor ficoml aas adc xchg push jmp mov mov or (bad) mov call mov (bad) dec (bad) je or push leave dec add adc mov imul mov inc cwtl or xor imul lret stc rcll lods cmp nop cwtl insl bound push dec pop jbe mov loop add cmp cld push icebp pop inc fxch jmp cmp add mov dec adc ret test les movsl inc data16 arpl insl add inc mov dec aas and sbb out pop jmp add std (bad) jge mov xchg cmp cmp fwait stos mov ljmp or adc cmpsl mov aaa int3 adc push sbb pop xor lods and pop cmp mov xor cmp cmp sbb rolb push and incl cmpl inc jg push or incl add inc inc xor dec sub inc loopne mov punpcklbw rcll mov cld adc adc pop add sbb inc jp adc cmc dec xor mul scas push and adc dec enter cwtl mov (bad) jbe cmpsl jo or sbb mov lea and adc mov popf lods add cltd lret je push fwait sbb jo sbb or jo in adc cmp call fldl mov jns (bad) or add loopne jae push jo cmp je push ss divb mov adc shrl mov cs xchg xchg mov xchg fs sub pop repz inc mov or adcb outsl push into jl in andl push in or adc adc push pop bound call dec test data16 add stos out push dec xchg sahf add push dec xor test dec xor jle rclb mov push (bad) cmp pop incl (bad) lahf fsubrl jmp call jmp lods call shlb stos call addr16 push aas sbb adc mov nop testl pop and ljmp xor add adc rol and mov xchg pop mov roll sbb xor fldenv adc les jb dec ljmp pop rcr loope das dec rcll add add test cmp mov adc or popf sub sub add adc ljmp cmpsb cmp lods inc sbb inc add mov dec xor or call push or add lock dec cmp jl enter push (bad) xchg or mov jge adc das scas shrl jp sbb sbb push add or add cmp imul and loope out adc mov imul popf sub dec jg test loope add (bad) xor fild cmp xor add notb call mov shr (bad) (bad) cld shll vpshlq mov mov cmp pop dec pop mov add mov pop push or jmp loope fidiv lea pop inc or push fldt dec (bad) in cmpsb in mov xchg pusha mov aad shrb xor lahf cmpsl gs sbb lcall dec rorl or int3 xlat cld dec sarb call xor and pop dec lods lea sub sub xchg mov popa sub mov test add (bad) or les (bad) add dec jp add xchg jl call sub push and cmpb cmp repnz mov and inc sub xchg (bad) xor push xor or cmp and (bad) push call orl pop cmp imul movsl push push imul pusha mov mov sbb mov pop call sub cs shlb inc outsb or add into jg andb lret adc xorl sbb fxch in jns jns out out and pop out dec stos scas or (bad) lock out cmp xor or xor sbb imul or in lods cmp xchg cld and mov call rolb popf add sub sub or sbb lods adc inc or add fs and cmp or add cmp jmp fsubs out pusha sub xor ret out pop in cmp mov test xchg xorb sti into cmp ret fs xchg xor jnp in sub jne xor cmp mov sub mov mov cmp add add push (bad) mov push lret je fisubrl loopne mov or not xor sub cmp bnd jmp (bad) js mov test sub icebp or xchg and and jle enter fdiv cld add mov imul shrl xchg push scas and xchg inc in stc loopne loope or enter pop (bad) push jnp push jmp cmp adc xor imul dec adc or sub mov stc mov cmpsl addl push push mov pusha pop jmp jp pop notl inc add mov adc xchg jle mov cmpb in sbb test or xor dec mov add cltd jo adc add or aam loopne fnop sahf add and mov lret add lret adc jmp xorl rcl andl inc sbb or jecxz and dec jne test sbb mov cwtl mov rep in jno and popa pop push stc ret xchg fxch loope mov cltd sub mov xchg gs scas cmp dec scas jmp sahf xor mov lock jp ret movsb out pushf mov xor mov pop sub jne mov add push jge lock insl gs sbb jl add jle les in push xchg jmp pushf mov fcoml jl or orb push clc add out push or push pop xor dec imul out lock add rclb cmp or aas sub je sbb push mov sarl pushf stc fs add sub rorl mov subb call sbbl add push sub sub (bad) je mov sub and sub cmp sub and enter rcrb inc nop push pusha pop dec ret (bad) cmpl jne ficoml xorl add fsubs into outsb dec add xchg je pop (bad) mov pop test xchg jl xlat sub xchg xchg pop arpl xor test fwait jl inc adc mov add mov push adcb imull call insl lods sbb pop xchg popa and movsl (bad) xor loopne scas pop movsb jbe imul sbb call insl shlb mov ret loop mov pushl leave add mov je add xchg dec jp movsl in sbb pop pop mov sbbb jo push xor sub loopne xchg test and xor test mov inc ja call loopne jno js lret je int3 jl out pushf and iret test pop enter es push stc shr sbb jbe sbb addl sbb or std adc mov lret enter enter dec add movsl xchg pop fstp inc mov sbb sbb mov mov (bad) jne fidiv xor sbb sbbl shrb fwait adc std insb push call pop aad test xchg out inc push and fsts rcr push pop inc adc adc es pop mov faddl (bad) inc shl in cmp mov inc mov xchg cli jbe jecxz sti clc (bad) dec inc insl dec or andl push sbb sbb loopne inc cltd inc imul aas (bad) call mov sbb push mov pop shrl adc je push sbb icebp xchg dec add jmp rolb and imul in adc cwtl pop and popa push mov cmc jecxz adc mov lds jb adc adc test pop iret cmp jne adc (bad) add pop mov add adc imul or call leave and add (bad) cmc dec (bad) push or out fsubrp cmp ret or vmread inc bnd dec or mov adc mov add lock cmp rorb imull nop and add pop mov mov (bad) cmc lret insb (bad) (bad) lock or shrl sub (bad) mov ja mov jnp fidivrl loop sub dec divb add bound xchg push clc enter mov sub pop add scas pop mov call lret or and lea lods test push push mov push push jmp jno or cmc add movb cli add cmc xor or sbb mov add sbb shr and add sbbl inc movsb rcll mov sbb jne sbb pusha insb sub push add fsubrs out rcll mov mov iret js aaa or or sub aad sub mov push inc lahf out jg xchg loop cmp inc lea daa lea daa movsl add jno inc mov adc es xchg or das mov xchg mov rcl imul push push movsl sbb add ljmp fdivr (bad) dec jge les xor sub (bad) mov pop dec ret mov rolb add shrb loop pop dec loope push adc jle repnz push das cltd cmpb xchg cld sub outsb add or test pop cs (bad) mov shlb xlat add andb sbb iret movsb ret dec sub or or loope and push xor sbb lods pusha mov inc inc sbb mov mov fwait pusha or icebp leave sbb inc shl push xor fnsave lcall inc pop add lock rolb cmpsl xor fdivs dec pop lret test test adc sub daa pop xor and or add cmp orl gs mov mov rclb mov mov pop test arpl lods add and push jb jae inc insb pop into jae and popa outsb pop ret jbe xor and ret arpl (bad) xor cmp xchg mov sbb rclb jmp fildl (bad) shl lock adcb loope jl adc mov xchg ss cmc push adc je add add dec dec fsubrs cld idivb scas and push movb push adc cmp or call mov and jp push or and and pop or test mov cmp call adc mov pop mov mov ss push sub icebp or mov push pop adc adc and mov fldt jmp jg ficoml ret hlt add mov les pop rolb aam cmc ret (bad) dec lea or out (bad) loopne adc add adc lea push inc sub ret lret fstl mov push hlt lret es adc cmp jno and inc add ret adc sub and and fstps mov or sbb xchg sbb lret mov dec adc dec cmc and push movsb inc and enterw aad cmp stc sahf dec jo js cmpl gs push xor xchg dec push mov adc pop mov xor xchg (bad) sub lret mov ret xor gs inc push adc sbb jbe dec or add and (bad) sbb mov sub xchg (bad) jne jne mov add mov adc push fcmovu mov sbb cli jmp inc xor mov pop adc jo or adc data16 (bad) testb xor and add sbb mov push push or dec xor shrl or icebp and cmp nop add cmpl das sub jae adc cmovns inc sti hlt scas data16 ret or inc xor jo add fisubr xchg and sbb or xchg xchg adc push rclb out xor fist add test adc mov inc sub in lcall adc ret gs pop xchg shrb ljmp insl (bad) xor leave push push imul das movsl out imull add mov arpl push sbb add (bad) pushf xchg cmp loopne adcl popf add js adc daa xor rcrl inc xchg in push adc mov add out stc push lret pop lock sbb lret pop jne mov rorb push jmp addl and iret jae imul adc dec push lods add add repz push dec lock add mov mulb or adc cmp add pop adc cmp loope arpl push dec adc orl aas adc and add ds sbb xchg mov and andl push push ljmp out hlt (bad) xor das cld dec push and inc xor push sbb sbb gs sti and pop push jle insl pushf cmp mov jno push sbb test push pop (bad) mov mov sbb fstl fsubrp pop loope dec imul xor mov fistl call xchg je xchg mov push dec inc and xor add pop mov push adc cmp cmp xor mov xchg aaa rcll push (bad) or cmp xchg pop push mov push add fs js loopne mov dec jl xor lea mov fucomi mov or cs mov mov or (bad) jo fs mov or stc pop sbb test inc mov aaa mov mov push push fisubl fnsave dec fadd jns es sub scas add push jnp xor add mov adc mov rcr mov clc rorl ret inc pop and or push sbb and movsb push adc push push adc xchg jp or adc stos call repnz clc mov dec adc and cmp add and rclb push xchg inc insb lea mov push cmp sub mov arpl and or cmp mov xchg pop and mov xor pop pop (bad) (bad) lcall stos cld sub cmpl shrb inc push add in je add xchg sub cwtl add jecxz cmp daa das push mov mov fsubl movsl add mov dec sbb adc (bad) fidivl xor add hlt subb pop shl push clc mov out in clc lret ret test cmpsb xchg movsl insb jge lods (bad) xor sbb sbb dec cmp xchg jo test (bad) call xchg and imul jge pop out mulb mov push mov mov inc mov insb jmp push jno scas imul fisubl cmp inc cmp test inc dec mov fsubl lds repnz pushf cmp scas in push pop ja jne push jbe (bad) jo sbb xchg adc push call fwait or int jp or insb stos scas cmp scas or push (bad) andb sub cmp in push rclb jmp (bad) jp notb inc or pop pop stc pop movsb push cmp in and sahf test xor mov jbe dec loopne add out fdivs or cmp jmp movl adc or cmp fchs aad add icebp or lret mov pop or imul pop dec sub pop nop lods cltd adc mov sti (bad) sub xor jge sbb adc in fidivl call or xchg sahf (bad) repnz xor ret sub dec inc mov dec test (bad) pop stc lods xor (bad) ss repnz xchg add mov mov mov fcomi in sbb adc adc sub add ss fsubr sub mov aam pop mov rorb inc lea lahf xor dec adc call pause or ficoml roll out ret ds xchg cmp pop (bad) sub shrb js dec jb sahf dec roll xchg enter movsl sbb cmp add fldcw xchg iret and jmp test and push cmp adc pause dec sub leave out pop repnz sbb aam mov adc ret inc dec inc mov bnd xor in dec cmpsl lods add sbb outsb xchg mov dec icebp xchg pop test pop xchg push cmp insb add clc push sbb call inc (bad) jae out push or xchg push xor adc repnz push daa xlat or rorb lods jl xlat push call xchg pop and push add push addl insb sbb adc push or flds insb push jns jb aas xor (bad) cmc pop enter sbb cmp dec out pop mov in inc push popf add or mov mov hlt mov rclb lret push fchs mov jmp mov mov mov xor mov addr16 test push ljmp and jo in and mov aad sub (bad) outsb mov enter mov adcl inc popf aam sub test mov mov and repnz test dec and or and lock aam nop inc enter adc jae cmp jnp xor mov leave addr16 iret mov mov and pop adc rorl roll xchg addb ror sbb loop rclb sub data16 sbb lods jl xchg pop rorb enter and lods mov mov push loop adc jns cmp adc inc enter nop mov xchg loope stos adc xor adc repz (bad) je pop fadds mov mov pop and sub xchg pop daa mov mov dec and popf loopne dec repnz lea adc call or (bad) xor mov pop mov mov leave push inc dec jnp test clc inc lock lds pop sub and dec push or js sub cmp jge cmp push sub bound insl push cmp mov dec inc sub test inc or or into add jo xchg ffree out mov loopne (bad) or push mov js add push ret int icebp rcr loopne pushf dec insb faddl lret or cltd mov dec xor pop rorl je imul pop push and inc jbe xchg adc or fildl xchg dec cwtl jbe push xchg scas xor ret sbb fcomps pop or mov inc stos cmpl pusha xchg jb adc dec cs or int3 xchg mov repz in lret call mov out xor sub xchg sbb notb xor add sub sbb shrb in iret and pop dec and xchg hlt loopne lods jo sbb movl cmc xor sub lcall addr16 addr16 push push cmp mov and ljmp (bad) ss cmp test inc fsubl mov aad jge ror jg daa or fisttpl shrl into push mov sub cmpsl jae inc rolb (bad) or push mov aam call xchg add std call add iret adc into aam add add xchg jbe aam test test sarb fs pop push ret movsb (bad) push mov dec out dec sbb push and add pop jo jne in cmp cli icebp es cld stos popa jmp andl adc lea inc cmp or scas push sbb cli adc push leave popa psubusw or insl aam mov out cvtdq2ps add out and push mov cmp adc push sbb jl addr16 push call or and cmc cmp orl repnz cmp cmp fmul stos cmp sub mov aas mov aaa sbb push jns sub fsub call aaa fidivl es pop mov stos xchg add dec call and sub dec pop mov pusha inc add arpl cmp sbb add cmpsb push push inc cwtl into xchg cli lods loopne lock mov jne inc bound cmp xor xchg add sbb gs int test cwtl mov bound sbb push stos push inc or add push mov xchg in fimull mov xchg add pop test mov leave sbb lahf and inc cmc sub scas dec fcoml mov incl sahf sub xchg test in mov je test loop or inc xchg loopne sub jmp popf call ds cmpsl push sbbl test add and in jmp pop int3 push lea lods sub add js or sub stos mov (bad) sahf (bad) mov push repz mov mov dec inc cmp or xchg gs popf dec mov sbb xor pusha cmpsl loopne jecxz xchg mov or xchg jp mov xchg (bad) rol into xchg cmp add ret mov jno pop pop sbb sub into xlat insb push push or cs jle mov push dec add mov dec clc adc mov fildl or je pop inc jbe xor mov dec fld1 xchg jo ja dec lahf aam psrad pushf fwait inc adc xchg push call push imul cmpsb push popf insb je jecxz sub fidivl xchg pop mov dec inc jl call mov andl notb add mov data16 rorb popa movsl xlat loopne andl cmp std or mov das fild enter inc push or aam movl mov pop jae mov jno and mov popl push arpl push pop sbb xor cmpsb in xor and lcall sbb sub test lock dec jl mov sub mov lret outsb lds dec or loopne xchg xor popl sbb pop mov and (bad) mov fiadd pop inc pop adc pop dec and sbb xchg icebp fcomps xchg ds and adc pushf jb or push cmp xchg sub dec jecxz xor push xor icebp and cmp mov mov sub pop pop push pop push mov test lcall mov sub mov mov inc sbb (bad) je sbb cmp mov or add mov mull es push lret pop sub rcr jp pop xchg ret (bad) xor nop inc jmp jle ds mov add dec pop int3 fmull jb outsb xlat mov inc cmp sahf add mov lock add leave or dec pop call jmp or bound xchg ds jl inc aaa or xchg aam push (bad) std mov xor ljmp mov subb inc imul xchg repnz arpl xorb push jl and int test mov std je adc ss in mov sub xor popa test xor push iret (bad) push xor mov sbb sbb inc xor ljmp ret lret or movsb or xor iret and mov sbb add add fsubrs adc sub xchg push pop loop or cmp push dec in subb mov in push push loopne (bad) faddl mov cld mov scas pop sbb xor out out cmp subl js adc rol adc or (bad) les dec iret sub or and icebp inc xchg push outsb add sub add movsb lahf cmp or adc add js inc adc cmp jb mov mov fnsave mov mov or add or and mov (bad) les cmpsl cwtl or lods sbb dec jle rorb pop inc sub and mov sar (bad) add inc add enter cmp sbb (bad) push adc and dec dec arpl lock mov push mov movsl or push cmp or lock in jnp ret jne cmp adc dec xor cmpl or lock std cmp mov (bad) popa dec mov xor jne add add cltd jp push inc test mov xor les adc adc lea sub into mov cmc pop popf jp mov sub movsl mov add inc dec xchg addr16 add push in gs sub add aam (bad) fsubs pop stos and cmp jbe ja xchg sbb inc daa cmp xchg push movsb repnz xor sbb and loope and mov inc (bad) loop movsb mov ljmp xor and fisttpl cmp add mov enter push ja mov mov data16 jg xor dec into dec in aas cld and pop icebp pushl or mov adc nop das inc jl jae sbb mov xchg sub adc flds sarb insl cmpsl idivb jo ret jl aas lret push add push mov pop cmc jl mov cmp in add lods sti cmp inc stos insb aas or aad or pop or dec pop fmuls dec xchg jecxz sub push cmp push aam idivl dec push jp pop sbb sbb dec add insl jmp mov in pop push xchg push mov sbb mov rcll push xchg dec nop cmp xchg add aam adc jmp push in or stos mov fcoms mov jle insl fwait mov xor inc insl stos shl fld (bad) aaa mov sub into add inc jb fwait cmc js push enter testl mov testl ss lcall lods inc rorb adc imul lea push push in xor xor push sub adc dec xchg xor pusha pusha pop dec push xor fs cmp test adc inc xorl mov cltd jg arpl pop pop mov jmp push dec sbb mov outsb dec shrl popa add insb test or es adc movsb (bad) ss clc dec xor popl lret nop push cmp cld clc movsb das inc in call daa es sbb pop clc cld adc nop and xchg out pusha pop cmp jns je dec pop dec cld jmp xor (bad) cld pop sbb rolb leave xor popa sarb hlt movsb ja mov in adc call add sbb imul lods and and sti and dec jge mov xor inc inc prefetch or lret xchg push cld movsb clc test or jl push (bad) xchg andl and inc jl jne call lods syscall lea and jmp inc outsb jmp sub sti les pusha data16 xchg add adc dec orl les ds loop mov call xchg sbb inc insb pop jl and adc mov loop pop aam nop mov data16 or and fidiv xchg inc push dec (bad) cli add sahf cmp inc adc jo xchg lret dec outsl ret in add and cmpl pop sbb sub out cmpsl popf divb ljmp mov push or fisttp adc or lds in sbb xchg divb icebp out cli add and mov fldl pop fsubr stos pushf jecxz rorl sbb push ret cmpl mov stc lods jl or adcl cltd add les sbb out fidivl dec push ret bound sti pusha push and dec (bad) adc (bad) cmpsb mov (bad) adc pop inc sub pop sub js cmp jae pop sub xchg xchg rcrb xor sbb test push (bad) mov sbb icebp sub pop mov adc add loop imulb pop test repnz and sbb pop push stc sbb cmpsl in sar pop xchg (bad) (bad) sti cmpl lods into insl inc xchg dec or push push adc ss ficom and jle lcall dec lods mov pop jecxz addr16 mov outsb mov and sub adc out and or movsb (bad) dec add adc mov lcall fnsave pusha nop inc cmpb fistpl jbe ss and pop aad pop jl shrb les addr16 add mov xchg hlt fisttp sbb cmc xor cmc pushf dec jle (bad) cwtl (bad) push std jns push xor clc push adc aas cmp lea mov mov lret jne adcb and push sbb jp push sub adc pushf ret add and stc ja xchg pop movsl cmc arpl hlt push xchg mov inc ss jns (bad) and add test incl push fdivrl sub rcll pusha popf sbb decb jns nop cmc lcall call xor popf or xor jmp pop rorl and inc xor mov and mov and push aas add or int3 and adc lds pushf pushf (bad) cmp push jo cwtl test dec mov (bad) cmc add jns mov add test movsb adc adc cmp adc mov push adc pop mov cmp add push call fbld adc imul in lret lea mov mov push fwait inc and jbe mov in andb in arpl xor mov jl push les push and inc mov test pop jo das add dec rcrl or mov popa xor push (bad) mov (bad) jns adc loopne imul and mov adc popf mov dec pusha aas dec xchg cmp adc inc inc pusha add out nop icebp and sar out inc cwtl cmpsl ss iret push into mov xor and cmp sub int or push jo,pt and xor js lods (bad) cwtl add mov dec inc loope jo int push mov push adc xorb pushf sarl mov inc push movsl call movhps mov adc sub pop pop movsl lea ds or out dec aad mov loope in mov cmp imul mov xor fcoms sbb stos outsb pop cmpw inc xchg add xchg sbb ja mov jb mov add test sub cld loop xor jmp push cld shl lret or mov rcpps dec mov lods (bad) add adc es mov or lds rcl stos jg test lock les push daa and push sub mov pusha ret clc mov fisubr rcrb add mov mov mov push repz mov jns adc dec into mov push bound lods lock cmp aas mov lock jmp popf and cmp loopne jp push add adc adc jbe nop aam (bad) outsb dec call loope jp mov dec add mov ficompl and loope mov add es adc pop outsl cld test aad lock sub add call (bad) push (bad) mov jae add mov clc (bad) jb fmull jmp jbe pop arpl adc push fstpl jmp sbb aam test dec test int3 xorb cmp shld push outsl je jmp jne lea mov insb jae push loope mov mov sub sub or popf or add nop and es mov xor sbb xchg cwtl xchg call xchg and dec iret flds mov pop out (bad) int3 mov pand aaa out icebp popa xchg mov sbb pop mov jg adc js add jecxz cli and add lret inc sub inc mov push js or or popa bound arpl andb cwtl ret dec mov jbe popf (bad) int3 jg mov jmp sbb mov add add pop push cmp inc add je das into (bad) jle add cli inc mov or (bad) jo rcll enter add xchg jmp sbb in mov push and outsb daa out inc push dec pop pop adc pop xchg cmpl adc insl test repz sbb xchg sbb xor idivl dec out adcl xchg cmpl rorl adc (bad) jmp test push mov pop loope rolb pop clc push lds test addr16 xor das jns (bad) mov gs or lods inc fs adc out mov jg jg inc push movsb inc (bad) mov cmp lods add jae mov and movsb jnp fsubs divb push sub push pushl mov lods sbb and jecxz mov or or clc add test push adc xor dec add lret sahf shlb xchg fisub rcll xor arpl mov call xor lret (bad) sub inc shll xchg mov mov mov or mov neg or incl push jg (bad) je jne (bad) adc std and out cmp (bad) xchg and jmp cmc add adc add sbb ret test cld aas xor adc js cmp (bad) dec pop add es mov movsl inc push loopne addr16 and sub (bad) jmp pop out ja adc fisubrl mov add cmp xchg mov inc or test mov or in lock push or pop insl xchg test in sbb pop jae iret cmpsb sbbb push inc es je or int cs test push push clc dec sbb adc mov clc inc hlt xor movsl pop repnz inc in lcall jo dec cmp push push xchg mov shrb aaa add les jbe mov adc sub cwtl and cmpsb dec ret out push inc adc jbe cli and cmp jg inc pop and pop scas push jb movsb sbb push inc (bad) add jno movsl add cmc mov imul sub dec addl pop push and pop pop add sub dec bound adc sub cmp inc inc inc dec push daa es inc loopne lret (bad) mov loop dec mov fcmovu shlb aaa adc add adc fsubp sbb hlt int3 popa add xchg insl cltd sbb add sub adc sub dec std imul test (bad) sbb bound mov repnz (bad) add sub or call cmp and aaa roll (bad) mov cmpsb sub lahf mov outsb jbe jmp inc inc add or mov adc test aas mov stos push sub pop hlt add data16 leave in les sub fild inc (bad) loopne ljmp sub mov jmp push ret loop inc add hlt rcrl pop xor cs call fsts clc and sbb adc lret in outsl roll sarb loope add inc inc lcall clc pop into in cmp jb xor pop adc add cmc push js xor loop movsb sub in loopne push jl jne push imul jp sbb cmp xchg dec mov lds push in sub into push inc fldt sub push das loopne mov mov cmpl pop cmp jno rclb or leave xchg sbb xchg stc mov adc mov test adcb mov pop aam cmp xchg mov fstp test mov push sbb jno ret sbb into aas push sbb adc fwait loopne dec or cmpsb cwtl sbb xor sbb sub das sub sbb and mov fsubrl (bad) xlat add inc jne xor mov dec inc or adc les inc inc jg jmp jns mov fdivrl push dec data16 sbb jne cmp jg add or inc dec sbb dec adc jle add push push aas hlt push mov cmp inc or lahf lret sub rclb in mov inc (bad) out test sbb arpl inc jecxz repz mov sub mov js add ja loope stos call and add xor loopne adc adc cwtl and push iret and and addl icebp dec pop cmp inc imul inc mov je enter int xor mov mov fidiv cmp add add call shlb (bad) mov aas leave das adc ljmp enter imul jns bound enter out and sbb mull mov popa and sub sub sub dec sbbb sub dec addr16 push stos cs lock scas movl movsb sbb mov lea or clc and imul sub jg cmp jg or jge lea cmp ja xchg mov and repz jle incl mov cmp sub adc jl dec or or and push pusha stos enter mov push orl jae shlb pop jb jl inc sub adc push (bad) rolb or and aam pop mov push dec fnsave pop pop nop shl add pavgb notb data16 test push or cwtl ds push xor dec mov sub (bad) movq stc push or aam jns arpl pop es dec jns std xchg inc cmp cmp add add dec jp lock loope repz jle clc cs xchg mov dec cmp dec dec cwtl or adc adc push push jo inc pusha sbb dec jns add add shrb or adc xchg loope jnp sbb sbb enter xor sub adc xchg add add add jne lret sbb sub (bad) out pop mov cmpsb adc mov or fdivl adc add push loope xchg and push pop push sub and cmpsb loope sbb inc push rol add dec jne push shrb stos add pop data16 rclb stos loope or loop gs inc cmp inc (bad) repnz lret mov insb ret out or out mov cmp pop jnp sbb sbb dec jl in pop (bad) seto push enter fwait loopne nop add sub call push faddp aaa rolb andl dec in fsubrs cmpb je and iret dec repnz loop add xchg js into sbb sbb adc pop inc mov add cmp jl inc mov and mov jne xchg dec jecxz mov cmp inc and adc or mov ret push lods or (bad) xchg cmpsb bound jae mov int3 xchg or sub or and loopne ret (bad) in push fs xchg in cmovns cmc stc or call xor pop xor cmpsl xor jmp push movsb and xor add and mov cmp xor and lcall dec or lods je ret ds in xchg test add add add xchg sbb jmp movsl sub jb das mov pop jmp xor subl shrb jns cmp cwtl sbb pop orl insb add scas jmp das push inc push fcomip jbe fdivs sub push or xor pop (bad) (bad) fmuls loopne add pop nop repnz dec push push mov inc xchg test lcall pop data16 sub adc fimull xchg cltd adc out xor rorl mov xlat mov sub xor push push popf push inc pop pop and dec jae pop jae inc xchg addb into xor push add inc pop or mov push mov push xchg adc push pop mov inc inc push fcomps mov (bad) dec test sbb test in in cmc sbb (bad) mov incb sub repz call jbe add movsl xchg inc scas ljmp aaa fdivrs ss jns cwtl add aas andb (bad) sbb lea shl mov insl int pop or and adc pushf imul xchg sahf out push push test ss ret lea cmp pop sbb aaa movsl mov mov adc fsubs loop push add in adc mov lea iret mov mov xchg pop add inc add push push jl mov mov stc push inc xor mov scas adc (bad) aad nop loopne xor das insl (bad) jbe rcll imul je cmp je or les das jae mov jb scas jo,pt adc outsb out pop pop cmp mov nop or dec mov call test shll inc or pop cmc mov xchg inc test test enter xchg adc adc pusha adc mov push addr16 ja mov cwtl pop mov les (bad) (bad) mov inc sbb and fistpl cmovno adc dec test or (bad) jno add and inc inc imull aaa xchg adc sub adc ret (bad) cs movl pop sbb dec dec mov ds jge call pusha lret dec in repnz jmp ret push call dec (bad) xlat lods sbb call adc adc sub inc mov or je lock xor jge jne imul jmp mov js mov sti push sub jne cmp jne adc cmc movsb mov out imul mov inc ss mov or xor dec sbb jne sub ss dec push add push out icebp mov pusha mov sub and jns xchg xorb sub dec and (bad) adcl nop mov sbb jmp or ss xchg pop jecxz insb sbb and imul xor cmp or loop daa mov cwtl dec dec sahf icebp dec add (bad) jbe out cmp xchg (bad) jecxz mov xor test pop adc pop jl mov scas ret sub in jmp jecxz sbb mov dec scas mov movsl and cmp sub jmp add js aas cmp lods push or mov or pop repz add in mov sub enter mov lahf xchg out or mov out test int and cmp lock cmp fldenv out push sub fidiv arpl sarl aam pusha shr dec orl mov pop inc xchg lcall adc popa jge lods jmp adc int jmp xor arpl pop inc xchg dec lahf sub dec mov fistpl push xor fisttpl or (bad) sbb lods clc int shrl lea xchg adc and jnp addl movsb dec xorb push push mov cmp rclb mov pop sub daa icebp jl enter jmp jge cmp inc mov loope mov in in add jmp adcl xor or sqrtps adc rorb iret add inc nop rcl sti push push fistp push jno in cmp xchg inc scas sbb popf (bad) push sub sbb (bad) lret adc xor jb add jmp mov push les (bad) or sbb jnp stos mov inc call push sbb rolb cmp ret jecxz int pop je fnop or cwtl adcl push scas jg xchg leave or and ss or push gs pusha push xlat or mov in mov adc dec out sbb and adc cmc cmp lcall sub push fldl cmpsb xor pushf push out jmp push lcall mov loop inc loope popa aam je in push xchg pop xchg mov outsl jne jge mov inc in mov rorl add adc push and jo dec jp mov mull add repnz (bad) cltd xchg inc lea inc xchg je adc subl add mov or xchg hlt lret stc rcrb xor push push mov les inc pop rcll push testl and sbb jmp cmpsl movsl and call pusha add pusha sbb inc or fisttpll popf faddl inc push sbb loopne pusha mov sbb ds mov stc js jb test imul push gs dec in fisub add cmp xor nop xor and pop push ret clc icebp xchg test jecxz push clc add xor and dec mov adc xchg push jne mov or mov out repz scas in jmp arpl or gs lods subl and xchg call test aaa je xchg add shll adc je pop pop and popa shlb (bad) imull cmp imull jle and sbb sahf inc std les (bad) arpl or sarb and cwtl call (bad) jmp mov mov adc and mov cmp (bad) mov (bad) mov test es or ret (bad) mov ja dec sbb fwait and xor cwtl setne xchg test cwtl xchg sbb call test add mov test pusha sbb adc aad mov hlt clc add cld call fsubl iret sub (bad) pop or and dec xchg mulb stos cmp data16 cli inc xchg aaa inc loopne aaa push mov sbb fstpl sbb pop stos and sbb push inc js gs mov je hlt ljmp push ja and mov xlat ss bound inc push jbe incb or xchg faddl mov lods xor or inc or lahf xor in push movsb fsubr mov sub hlt cwtl xchg xor jmp push sub pop fadds adc cmp pushf add js lea xor or ljmp loop popf push and mov out js or or adc dec push xor pushf insb inc pop mov adc int3 or dec ljmp dec sbb daa jne push loope enter adc jo mov lret ret int3 mov inc or repnz in dec cmp fldenv sub xorb test jns add mov push jnp (bad) js adc pushf add test lock jnp out jno std out or cmc xchg loop sti lret rolb hlt push pop fwait clc pop pop sub rol or rorl or mov rorl imul mov or and inc outsb clc xchg add sub add (bad) jg pushf add (bad) fs cmc pop sarl es call jle xor mov inc cltd sbb sahf ja and sbb jl jo icebp daa lahf mov push cmp sub insb sbb sub nop rorb in sub and inc add xchg mov (bad) and cmp cmp mov xchg cld mov dec call negl int lea cmp sub xchg mov fwait adc stc mov cltd repnz and std shr adc inc add and inc mov imul sbb inc test and movsl jo or and test or pop leave xorl lcall in cmp imul nop add insb fsubs mov dec lret pop mov push push mov repz xor push cmp clc push fidivl xor add xor std inc inc push cmp push xchg dec push call or xchg testb or loopne daa xchg pop fs out xchg fs divb mov mov jb sbb lcall sub pop lock or mov loopne sbb fisubl mul in fs rorl fs pop (bad) jmp cmc pop shrl dec pushf ffreep sysret jns cmpsb xchg pop imul sub les cmpl pop mov divl out imul jle push jb sbb insl xchg (bad) pop add sub add negb cmp jae adc es pop call xchg scas (bad) hlt rolb nop dec es cmp nop inc push mov test mov xor and sub nop jb mov es xchg hlt xchg (bad) nop sub or fs add in xor inc es ja dec cmp xchg es jns nop int dec xchg ja rcrl fildl sub ret add fwait in repnz test cmpb (bad) js jbe cmp inc inc push ret add repnz push push sub sbb cli add in pop add mul add nop jbe cmpsl scas adc push fistpl mov xchg fs or outsb aam dec iret (bad) orb adc adc lock jg add sub jb or and nop daa dec jb add fisubl cmp js addb pop jb notb pushf sbb bound ret icebp orb mov and sbb nop das fadds es pushf cmp test mov enter dec xchg push call inc cmp pop adc mov xchg notl xchg sbb and sbb fsubs mov add leave gs xor cmp loopne sub sub in cltd movsb sbb inc cwtl clc daa jns sbb pop jne iret sbb in xchg xlat push out (bad) out and mov sub pop fs test sub push inc cmp inc cmpsb xchg inc cmpsl mov test pop nop xchg fdivrp xor and stos sub nop add xchg orb or jb cmp mov dec inc or or push and std std loopne and jns ret std pusha shl push enter ja roll jg ret dec cmp xchg xor les ss dec sahf jnp jo adc jmp sar fisubl xchg sahf sub sbb testb adc cmp jne cmp scas xchg sub or or and jns inc cld lock or dec push aad mov popf mov xchg jg xchg adc enter push cmp sbb adc pop fimul movsb pop daa mov or jle inc push mov adc cli cmp stc cmp and orb inc jmp cmpl ret pop fidivrl xchg inc pusha jno sbb sub repz and dec jns,pn cmp test sbb imul pop gs push jns or dec sahf nop test inc push jns pusha push incl inc sbbl cmpl mov and and enter test cld (bad) insb add push sub cs xor pusha mov xor cmc pop sub nop xchg cmp jecxz jmp xchg pop sbb adc (bad) test cltd movsb cwtl mov jb sbb orb xchg or or xor and rolb or div xchg (bad) nop ret repz xor fmul dec add pop dec push enter xchg sub xchg sbb outsb jmp and lock nop dec sbb xor std and cmp add push (bad) cmc push xchg lock jecxz cmc test in nop sub xchg xchg repnz enter outsb cs or cmp in in fsubs cmp out jmp out adc (bad) fxtract mov sbb cmpsb bound pop call outsb sub enter push enter aaa cmc inc or cltd ss das cs sbb int cld cmc repz rcr jo (bad) xlat xchg nop nop pop rcll pop aaa sub pop cmp or push subb jmp lds xchg outsl mov into xor xor mov push ret mov lret jbe outsl pop inc clc call add push lock repz and out fistp cmp inc pop outsl xchg sbb movsl je pusha out xchg push adc jge pop mov (bad) insb outsl sbb xchg or in jns add rorb jmp pop inc push enter push or movsl jb test aad jb inc push inc pop jno jo sbb movsl mov jg jmp les mov add scas xorl movsl cmp ja add das dec push cmp pop xchg (bad) repz leave add outsb cmp aam pop dec or dec daa mov out ja scas aam dec sub pusha jle pop xchg mov cmp mov cwtl push (bad) je xchg movsl push push mov ret cmp (bad) out jmp mov adc in mov lahf iret sbb (bad) (bad) icebp jp cmp pop in jmp ds (bad) adc mov push fdivr or movsl repnz nop fs shlb xchg sbb in pusha nop dec aaa add es cmp pop (bad) pop (bad) rcrb xchg add pusha push dec dec nop xchg add pop push sbb enter (bad) and dec or pop mov sbb iret mov jb pushf pop dec movsl sbb adc cmp mov adc fimull cmp lahf out add jbe pop (bad) rcll pop push (bad) stc add sahf cmp dec adc pop loopne nop inc andl gs pop mov push xor nop dec adcl es cmp nop pop repnz or sbb jl dec es and inc pop loop (bad) in sub and outsl in sub pusha and lods das dec or and mov rcrb fldcw in pop int3 out push fdivrs mov pop jb fisttp pop jbe pop cli iret adc add insl stos dec idivl adc (bad) bound lods or (bad) popa inc sub pushf xchg ss lock sub add nop dec aam (bad) repnz mov or icebp or or push daa pop and clc or mov sahf pusha inc fmulp xor lret andl and outsl mov mov cmp xchg outsb mov push out in in jmp out add xchg pusha cs insb push repnz sub popa lock dec mov adc sbb imul mov hlt adc je test pushf add jmp cmpb nop popa mov outsb int in or mov (bad) dec jmp test jg movsb (bad) in ja mov push pushf pop push sbb int3 pop pop leave adc jns nop cmpsb push bound bound add lea outsl nop lods jbe pop jbe xchg decb int3 mov int3 and and or ficompl add mov push aad pop leave add dec out mov add adc cmpsb (bad) add jbe pop arpl adcl popa leave leave xor dec gs clc sbb movsl repnz push movsb xor push dec dec js mov pop cmp fs fs and test je dec adc nop pusha call or (bad) fs fs fs jmp adcl sbb gs lods loopne or mov and in cs gs xor test jmp mov insb gs je lret mov gs int jb gs arpl sub add sbb and (bad) loopne and jbe das adc pop mov dec push push loop add xor mov sbb adc and iret in stc jl cld xchg pop clc test data16 xor enter fdivr into fwait adc mov popa pushw stc mov push in ds out hlt aad pop aam cld jmp pop bnd sbb push or bnd call gs outsl cmp push fs movl push sub push add dec jmp repz int3 jmp lret repnz and ret loopne jo xchg cld es jl add sbb xor out ds repnz (bad) and mov pop push jmp mov cmpsb shlb push popf outsb fwait popf pusha mov test loop sbb adc rcll test xchg data16 scas insb adcb mov clc sub push seto in int xlat or out lock repnz pop xchg outsl cwtl jmp scas (bad) jmp jbe test fs cld hlt mov stc xchg dec mov dec out lods jmp xor iret imul repnz ja push and mov in imul lods mov (bad) out push frstor je daa or inc pusha push push dec out push (bad) or dec (bad) lods push (bad) (bad) mov sbb jmp push in fsubs repz cmp (bad) std outsb sbb pop xor icebp popa mulb xchg lret imul xor outsb and mov stos push jmp jne loope jb aaa clc and pop push jmp int3 push mov lea cld call add push lock sub mov mov cmp and out daa cmp insb (bad) insb stos sbb nop ret lcall gs pop adc rclb push pusha add mov call xchg pop pop mov add and subl insl add in pop imulb pop mov or lret faddp jmp xchg adc xchg je das fdivrs out outsl enter test out (bad) fsubr aam lock hlt cli jl outsb jo adc arpl cmpsl fs push mov outsb xor rolb outsb (bad) cli pop test outsb jge js stos push pop leave adc je add mov gs xchg pushf mov in add nop dec call (bad) (bad) ljmp push sbb mov cmpb pushf push sub pop enter hlt mov sbb add test pushf mov (bad) movsb outsl xchg aam add loopne fbld in in jecxz push in fs iret xor mov add insl std pop dec jo jo nop xchg insb mov dec inc sub and or nop jo and mul rclb enter das rorb sbb daa cwtl hlt inc add movl aaa fs jno into mov add (bad) cmp nop xchg jl add icebp call push mov mov mov mov enter or hlt xchg jp pop in call jb leave cmpb lods jmp xchg sbb out add mov outsl cwtl mov cmc inc sub jb pushf or out jb mov repz dec add push add roll test adc test enter jae jae mov popf inc movsl loopne pop je inc push movsb scas pusha cltd pop push movsb push cltd fist mov pop and push shrb pmulhuw sahf add je or adcb sbb lods push push into mov push fidiv ljmp adc adcl dec dec (bad) (bad) test enter enter jmp iret outsb in add in in repnz lds imul xchg outsb test jge je xchg jne mov loopne sub mov movsl repnz lods push jns xchg push xchg or jle hlt add idivb fs out mov pop loopne (bad) out out push jbe jbe enter mov push sub repnz movsb jle leave pop enter and pusha js xchg faddl jbe jns xchg pushf imul in enter aam xchg scas sbb outsb push (bad) mov test jmp pop and push lcall cmp icebp lahf sub repz lahf dec jl lods ret jo xor inc pop hlt ja js mov testl div outsl sub repnz xor inc pushf test outsb push xchg and add movsb add cwtl mov sbb dec jp fsubr movsl (bad) cmc pop ja mov xlat dec loopne mov int3 js push data16 in outsl cld sbb fildl lods outsl xor sub xor push (bad) mov movsl jb add jmp sbbb je jmp pushf movsb shlb pushf cmp cmp adc and fucomp mov aad fsubr jp sub js push cli mov es jmp push aas inc jp outsl ret xlat or cltd adc jns adc jmp frstor test mov (bad) jno outsl inc pop lret in push push cltd mov iret icebp in add mov jl enter shr jnp sbb iret cmp out sub dec in mov je dec inc sub pusha mov call pushf scas inc xor insb inc popa mov insl in push rcll pop out adc jmp scas jae or inc add stc in add jl push or icebp in add push mov dec adc movsb es push and int mov sub in pusha inc pop ja mov fs pop push jmp jb test popa and jb xchg cs cmp jl jmp jge and test repnz jp jmp outsl pop lret or rcr jge dec outsl in sub xchg lret int3 data16 enter js mov pop jo in aad (bad) scas push fsubr pop (bad) pop sub ds pop push pavgb dec inc sub mov inc sahf inc pop int3 pop fcoms xchg mov stc push addr16 jle cmpb mov mov (bad) out pmulhuw (bad) call jmp idivb sahf or jle push add sbb xchg or loopne daa clc inc pop add in fldcw inc outsb (bad) adc xor scas sbb das sbb push inc lret xchg mov pinsrw aam sbb in adc add leave xor shr in bnd jmp fisttpll es das stc mov cmp pop lret sub push jb iret or pop out out xor sub cs scas ret roll cmp or in inc pusha add test xchg out movups jnp jl cwtl mov pop mov insb incb push test push mov ljmp outsl add sbbl out sub inc outsl loop shrl mov fist mov xchg jle js lock loop add dec shrb lcall jb jo enter incl subl add and add jg push mov (bad) or out aam xor ljmp sbb movsl jo test popf lods jcxz sub in loope clc lods xor stc imull pop lods jns mov jg jmp jl jmp ljmp stc fucomip sbb repnz push push inc jno inc ds mov sub imulb or or add xchg outsl mov jnp aam dec imul (bad) pop movsb decb jbe je xor dec (bad) push imul cmp (bad) stc add xchg or push pop mov mov test stos or add lret xchg ds (bad) mov push fwait (bad) push iret out nop fnstsw or movsb push ljmp dec in push sbb outsb stos mov lods mov mov cmp push jle outsl ss (bad) sub decb test test pushf or inc pop (bad) adc pop dec fsubl add jns add xchg test popa and stos pop nop dec mov das xchg push jle dec xchg seto add fs jmp orl aaa shl sub cmp mov jbe data16 out test mov es loop push outsb insb pop and ret mov ljmp outsl and push movsb jle mov push nopl (bad) call sub out inc push mov outsl clc xchg fwait inc push enter xchg mov outsl (bad) cmpsl inc flds data16 (bad) popa lahf fildll xchg mov ret mov adcl push test clc popa and ja aaa pop sahf mov jbe jmp out out or xor fwait xchg test dec mov cmpsb add pop nop xor lcall cmp pop iret in or in out or pop push jns cwtl mov das pop shr mov or adcl cmp pop xor movsb sub lds push dec data16 dec inc xor repnz int3 das int3 loope pushf mov add mov std pop lahf in jmp mov leave jae in negl dec pushf mov mov mov std adc mov cld nop push dec jmp sub scas bswap fdivp aas inc insb cmpb mov mov movsb sub or mov jg fldenv out fldenv nop cmp push fidivr lods mov cwtl mov adc test ficom and add daa jmp pop lret jl and (bad) cmp stc jo mov fs out add add xchg int mov movsl cmp and xchg ja outsb jno xchg sbb out popa in xor fstl mov out test (bad) notb or lcall sahf je ja and dec xor fistp ss push outsb mov (bad) and add (bad) jp scas mov sub xor pop (bad) out jg jmp inc sub pop call repnz test jb sub (bad) cli mov pop xor push enter lea ret lea pushf inc xchg aas fs pop add cmp add sub orl das cmpl pop enter xchg in mov cmpsb add loope decl in and in inc pop popa aam mov mov aam jmp int (bad) mov sbb out cmp push test add adc inc pmulhuw outsl add ficom jecxz std sbb jbe leave jmp push out inc sub call orl (bad) repz and (bad) (bad) ja or lahf (bad) adc jbe or pop std fmul sub (bad) nop sahf and add sbb fcomps mov lods (bad) mov ret ficompl scas sub sahf jne fsubr insl mov stc repnz gs pop enter mov dec pop xor inc (bad) cmp fnsave pusha xor cld xorl loopne xlat mov out (bad) jmp xlat stos adc xchg or jns daa mov inc pop xor pop cmpsb mov xor mov mov pop outsb and ja xlat jns jno jmp das fsubr popa pop das push dec ret daa inc cmp xchg sub cmp fcoms pop add fstp xchg inc push in (bad) xchg popf xchg data16 sbb testb sub testb leave negb cmp fs dec jo (bad) lret pop jmp jp lahf xchg sbbl adc inc fldenv fsubr inc ja push cmpsl nop push xchg nop xchg insb push outsb sbb push ficomp es mov xchg outsb push rcrb cmp int3 sti imul sbb adc xchg dec in pop inc push cmp mov push cmp sti and dec in and jl cmovno fndisi(8087 xchg push cmp out sti lock jecxz adc lahf pop mov int (bad) sub and dec out pusha cmp inc xchg pusha xchg ret repnz lcall cwtl nop cwtl out cs or dec mov xchg mov in das cmp sahf out mov hlt call inc xchg jb call outsb and outsb jbe out cld fistpll pop lret sbb imul push test jl and cmpsb or and int3 push sbb add fsubr imul call mov xchg push lock jns jl jmp out ret pusha cmpsl sub xchg iret pop outsl je jl or pusha xchg hlt pop insb jmp and mov jae xchg cmp imull fbld and xchg sbb ss cmp nop iret adc push cwtl jo stc popa sub xor dec xchg (bad) xchg cmp jecxz clc outsl push and subl xlat cmp push or int xchg outsb mov add add idiv rol fxch inc pop icebp shr shrb fldlg2 es push xchg mov rclb div cltd xchg mov jp rclb push lods (bad) clc hlt pop insb cwtl nop xchg insb mov ja cmp xchg mov or jne mov arpl daa hlt out jmp cmp or add xor leave iret ja cltd xor pop enter xchg and nop and jo popf repnz adc sub fwait dec notl jns add or lock in loopne int3 (bad) add stos or in or int notl xor fwait into push push xor out lcall mov xchg mov dec popa xor inc xor iret jae jp push adc repz lcall push stc xchg cwtl jmp sub cs test (bad) cli xchg add inc push enter xor enter fwait push fs mov dec popf inc mov movl fwait ja jmp mov movsb dec les in int3 hlt adc cld cmp andl jae xchg fildll xor add das push and nop add lret xchg iret jo mov mov pop jbe sbb pop mov xchg xchg mov dec lods pushf cmp sbb decl mov fs leave sbb test loopne fs scas movsl xchg scas jb movsb xchg push rcll inc insb (bad) pushl (bad) popf mov dec pop je sub mov adc sbb fidivl (bad) in pushf ret sub std call cmpsb inc jb nop (bad) out lock push jmp add mov scas cmp iret mov and sahf notb jno cltd lret seto test inc sub xchg adc es xchg jge adc in movsb jecxz xchg cmp jge int3 std fmulp lods (bad) pcmpgtd leave outsb sub clc pop xor and jns lret inc clc lahf lahf (bad) jbe outsl (bad) mov and dec in push data16 mov push jmp push repnz mov mov stos xchg xchg es in dec fimull je cmpb sbbb mov xchg pushf ja data16 add and rcrb add jne add rcr xor ja xchg leave pop ret mov sahf inc ds add jg sar or xorl xor cmp sbb adc sub nop mov push mov jb pushf mov push leave std ljmp cmp leave adc or iret add and or cmpb mov pop (bad) out outsl pop (bad) movsl jbe leave dec das imul in popa push (bad) mov mov inc push movsb rorb push mov xor push in push or mov mov and inc mov loop sub pop sbb dec adc ja cmpsb daa daa or push inc arpl lret mov sbb nop fs mov les imull ja or outsl xor setge out xchg sbb sbb adc inc je dec push into mov sbb dec sbb jle movsb inc enter mov adcl push xchg push pop leave mov jle call aaa repnz mov dec cmp mov mov xorb pop movsl je sub pusha movsl nop dec mov (bad) pop ja jb add cmp mov cs in jnp mov and pop fcompl xor xchg or dec decb test pop (bad) nop pop dec (bad) dec cmpsb (bad) jmp js xchg out js cwtl mov iret push pop inc adc pop jmp inc iret repnz stos in scas xchg roll or adc jg sbb je mov sbb fs xchg pop sub repz adc xchg mov cmp outsl mov cmp jmp out cmpsl xchg shrb and adc add cmpsl out pushf xor mov out fs (bad) dec test xchg test add push xchg xor push mov inc pop je (bad) mov int negl stos loope test outsl popf stc repnz jmp in in adc xchg mov jmp add jne pavgb and xchg mov adc cltd cmpl xor and in outsl (bad) sub sub enter xor lock xor nop flds push xor fs jne repnz stos cmp fsubrp test (bad) or in dec pusha ret lods xchg sub add sar sahf cwtl outsl mov jecxz movsl push lahf aas pop push in sbb stos stos test jns fstl (bad) sbb inc add pop dec jmp jns (bad) (bad) stos stos sbbl inc push stos mov mov lcall lock (bad) sub outsb shlb bound mov movsb push stc mov popf clc sub inc dec push inc fs insl jecxz jl cs inc lods pusha xchg add push loop sbb jmp jmp cwtl lds jmp incb xchg scas mov scas lods sbb daa in int lds bound rclb iret ss cmp and xchg outsl int3 jmp pop or sub jg pop xor sub fs cmpsb pop jb and lret and test (bad) add push inc xchg xchg lods int3 push cmc mov aas (bad) lea lahf test fnsave sub push aad aas cmp or scas orb lock pop aaa mov xchg orb cmp bound in std daa cmc daa inc push dec in (bad) or sub in loope test shrb add xorl jge iret sub scas xor mov scas jo jmp mov jmp subl sub in enter es in jle jb movsb in lods dec fadds jg outsl push sub in sar es pop add push das sub es (bad) lret or pusha xor or adc cmp pop adc js pop js clc or jns (bad) mov and jge push adc and and es lods jbe lds add and pop dec enter dec aaa hlt (bad) cs mov loop pmulhuw inc adc data16 idivb mov lret push dec outsl dec fs push mov mov loopne cltd mov stos mov mov mov and daa sub in inc enter mov in in cld ljmp fwait or mov fwait lret push fdivp jl and and mov pop mov jl mov mov xlat test emms je jg andl jo dec pop mov cmp hlt sub and sbb mov cmp lods fstl push and daa push imul sub jnp outsl cs lea and insb push jmp or ss leave fsubrl xor pop jnp dec cmp fmuls pop repnz push pushl mov in in and jp or cld or aas cmp add call mov fild enter mov outsl jl adcl adc cmpsl mov aam in sub inc sahf fucom lods jp lock or push jl movsl in mov mov jns ror cmp (bad) rorl sbb inc xor iret mov mov xchg (bad) movsb jle add inc nop call pop in sarb in (bad) ss ror enter (bad) ds in adc out js xor adc ja push mov pop push mov mov cmpb push pop push jmp jp sbb popa and outsl sbbb loopne int3 repnz pushf jl jmp or psubsw stc mov mov mov ja enter mov mov (bad) jl jp test sub enter dec cs int3 hlt adc repnz push adcl add push nop fxch pop (bad) push andb cmp jmp daa pushf enter xchg add cmp adc sbb test push and push jb mov or cmp test adcl pop enter popa mov call inc dec lock cmp lahf push xor fs sbb cmp and and pop jb mov bound fsubr inc cmpsb mov add add jo xchg outsb dec cmp add cmp lahf mov popl jo jae stc lods and fild fisubr dec aaa and out xchg dec sahf sbb and in repnz dec ficomp or xchg mov cmpsb sbb push jae mov test mov pop sbb xchg mov add jl lods fldl imul xor or jno jb rorb pop (bad) call jb mov cmp or daa mov xchg add add sahf cmp mov mull jns pop out mov jmp inc mov pavgb (bad) mov jmp adcl mov out jo mov stc dec xchg push mov xor xchg jo mov mov push movsb imul les dec dec xchg (bad) (bad) fwait or sub repz sbb call adc aas jg nop std fwait adc outsb dec mov in xor call pop jge test pop push sahf jo je sbb out mov add add outsb cmpsb orl in sahf (bad) dec adc adc push in cmp outsb push push in mov leave cmpl inc xchg add adc mov movsb rol bound rorb add clc outsl fdivr ja cmp int push stos ficom xchg insl sub rcrb iret jae in jmp shrl xchg and (bad) or xchg add xor pop add mov ret dec movsl jp inc ja cltd dec fisubl mov sub (bad) push iret popa and add and in scas push ret cmp movsb push mov mov je push cmp pop xor enter mov insb jg jns jae inc insb jl cltd nop or inc adc or xor ret (bad) imul dec mov lret dec negl outsl mov inc rcrl and cwtl ret mov jbe and in int xor adc decl imul stc scas inc or ficomp andl cmp mov fwait or (bad) outsb pop enter outsl pop js nop add sub das in xor cmp push inc rcr add mov nop add nop es das frstor dec daa xchg pop int jmp push mov imul mov xchg repz je adc popf add pop mov and dec mov jns inc cmp lcall loopne add test adcl sbb xchg (bad) in sub sbb sbb fmulp stos (bad) xchg mov mov add in outsl nop (bad) mov add sub mov divb sub mov test subb test in adc dec pushf ljmp (bad) xchg or jae (bad) addr16 jns xchg int lret add mov jmp push jmp push test aam add pop rcl cmpl lock push stc sub into clc xchg div pop mov mov (bad) mov pop inc mov inc sub xchg mov test jmp sbb outsb pop inc test dec lret ss xchg xchg add lock lahf aam dec inc fisub push or pop mov and adc xor roll xchg xchg push cmp pusha sbb adc mulb dec dec gs movsl bnd cmp imulb hlt mov loopne mov (bad) lret lret add out sbb pop add enter cmc pop test in sub xchg mov fs mov inc mov add fadds push cmp lock movsb inc (bad) cwtl icebp enter and dec arpl (bad) stc or mov pop dec push movsb push jl push ja jg lret andl jg pop enter enter incl es add int3 and bound int3 in lahf iret lret iret mov jl cmpsb bound cmp push and mov push test in dec jo nop ss pop fadds mul jns adc int popa mov dec push int js shld inc ja ret outsb testb jl add xchg cwtl mov jmp rclb ds push mov int jl sbb popa or in int inc jns in (bad) icebp (bad) into into pusha roll aaa xlat insb add mov cwtl outsl rcrb pop pop outsl js xchg and imul loopne inc pushf mov xchg xor sbb or leave xor aas jbe mov mov nop sub int3 pop incb adc daa in idiv iret iret fdivrs push stc outsb (bad) rdmsr fdivs int3 orb movsb push mov scas lock mov call xchg seto lock test rcl pop sbb add rcl movsl jmp jle cld jne sub mov xchg xchg jge cmpl (bad) jo pushf jl repz les pop notl out incl cmpl inc out pop sbb outsb cmp in mov pop daa and stos and jg inc cwtl cmp sar rcrl pop jo dec and (bad) dec xchg lods jbe mov dec mov dec xchg add cmp in sbbl sbb pop leave enter rcl and sub (bad) cmp inc inc jle jmp add pop push xchg push mov aam pushf sbb dec mov cmp bnd sbb inc dec push in clc test push jb in (bad) cmp fs add inc ror sbb mov outsl scas pushf xchg adcl es dec (bad) gs mov in (bad) xor jns rorl mov iret sub negb aam add stc and pushf sbb gs push jl enter nop mov cbtw mov fsubr inc fadds push loopne jb inc pop std ljmp mov pop iret sub call mov push movsb mov dec lret xor fmull cmp nop inc mov xchg and pop pop xor add push in push jb jmp insb mov loopne inc dec js test (bad) mov mov pushf dec dec add sar es test ds in xlat inc xlat ficom pop xor xlat in call pusha mov push pop push sbb dec mov jb daa sub lock push clc in or push in cmp jb push scas fs daa pop xor xchg add add mov pushf sbb gs sarb adc cmp xor ds sbb loopne fs in vaddss and dec push nop xchg or int3 loopne adcl (bad) mov jb iret adc push lock mov in xor pop enter (bad) push cmp jo sbbb push movsb jle xchg xchg add in shr pop jb and mov daa or fbstp add leave out push adc fmull inc sub in add jnp aaa add iret add push push pop decb cmp aaa jns push dec (bad) fistl dec pop shrb sub and mov sub lds push xchg loopne sub mov and enter js mov jecxz (bad) (bad) push sub enter in add cwtl dec add pmulhuw roll int3 das pop mov (bad) dec push adc sbb push in cld cmp xchg xchg add ljmp jl pusha ret pop push mov lcall dec xlat jns test loop (bad) (bad) push push cmp lods fisttpll loop scas fs fstp push fwait nop xchg add pushf dec loope nop xchg sub xor pusha ret test inc sub enter in loopne test pop fsubr pop and xor or fs rorb aas cmp ljmp fildll dec push (bad) lahf dec scas push adc push lret adc movsb dec adc dec ja aam sahf cmpsl mov (bad) dec cld sub call xchg adc add mov push push decl sbb or fisttp negl call out and lods es push add pushf dec mov (bad) jmp leave leave jmp int3 add push sahf lods repnz ljmp sbb xchg (bad) mov inc jg pop adc dec xchg cmc outsl adc setle jmp pushf popa xchg mov hlt dec mov fldenv sbb sub lret jno mov pop leave jmp cs (bad) loopne cmp sbb test loop xor push and in dec sbb lock push test dec insb mov push and pop xor mov cmp xor dec xchg adc and testl loop sets fs sahf and jecxz jecxz iret movsb ss xchg push jno dec (bad) pusha pop cltd dec test fist fidiv mov sbb dec outsb dec pop jb push out jo pop stos fwait inc out (bad) inc lock icebp inc sub fsub pop inc imul adc jl or sub hlt dec lcall jle rclb pop dec in in and fnstcw cmp push in lods in inc pop mov dec mov andps xchg mov enter sub adc test in in xchg add in jmp jmp lret xchg iret add in fbld lahf cld leave out jnp and mov loop out inc inc adc fcmovbe in push das dec mov fsubrl lods jae in in or push dec nop pop enter stc movsb insb mov jo inc cld jne dec out fs xchg sbb aas mov ja out andb repnz out (bad) cmp repz test in add dec push outsl in fcoml and fsub add jle xor sub push fidivrl nop (bad) pop test outsl jle mov (bad) jge call cltd jne andb jle ret jle in int3 mov ja inc js mov loopne movsb shlb sub dec push in call enter loopne cmp pop sbb sbb outsl lret pop mov inc call adcb js cld mov pop mov push data16 sub int3 add add xchg not (bad) fs daa rorb adc dec add testb out fstpl repz vaddps inc mov mov mov jmp pushf jmp lret fisttp mov (bad) jmp out jmp das subl in jmp push in outsb popa lahf xor data16 inc mov out aad (bad) pop daa cmp lahf iret push ljmp dec in add movsb add nop (bad) pushf ret fwait pushf xor jmp ds mov mov seto add inc loopne dec ffreep (bad) jmp sub mov inc outsl cld cmp sbb or out adc or insb jg push call inc fdivrp jmp sbb sub outsl dec movsl jb xchg add rcr andl push enter ret and test vmwrite mov xor cmp lahf pop push push in rolb in push jmp outsl insb mov add movsb lcall xchg lret add dec shlb add jne adc outsl adc adcl jns and mov fildl pop xor push sbb xor pop pop std pop xchg outsl js enter add fiaddl daa pop mov mov push pusha test jmp lock xchg add aad idivb out out inc pop mov push ljmp lods lahf sahf mov je shr sarb mov jg cmpsl hlt or (bad) jp (bad) sahf negl stc jb fucom xadd aad jmp stos inc sub scas rclb mov rclb clc push cmc jns cs repz out out inc jae,pn xor outsl mov inc push adc outsl loop (bad) rcrb push sahf idivl js test ror mov pushf mov jle rcr in jns setle dec pop add xchg std js out out sbbl aas in out jl daa cmp js mov outsl pop enter fist push cmp mov pop pop lock int3 mov push cwtl cli popa add ja out gs mov xchg jg cmpsl pop adc mov outsb lea push sbb ds pop adcb mov push imul leave subb scas sbb fmul jg cmc xorb jmp hlt adc jo xchg add aam push xor in mov push lahf sub jmp ss hlt pop call lea bnd ds fdivs repnz in inc pop insb sbb pop roll cmp repnz dec mov xchg nop mov arpl cmc dec adc repnz push andnps push daa cmc jne in push (bad) repz jo pop jle (bad) iret push inc popa aaa xor cmp inc push pop repz add sbb mov repz jecxz jb jg pause repz cmp and mov sbb dec dec loopne iret jae inc add add or sahf sbb rclb call lahf lret in push sub push and sbb test movsb xor dec add in pushf hlt jb ds cmp cmpsb mov lock add loopne add push (bad) ja xchg in es sub out cmp dec seto xor inc cmc cmpb cmp jns jl jo push cmc xor orl and xor cmc cmp cmp mov outsl in or sbb pop enter jmp lea scas in pop mov test fidivrl push push and mov pop mov outsb andb outsb add add and test sbb pushf idiv or idivb neg xchg subl sti jno jnp push seto (bad) sbb push and imul xor out aaa push imul cmpsb sub sub jo sbb cwtl cmc pop notl cmc fidivr negl xor adc loop xchg scas repnz int3 and in push shll mov jmp mov add pop clc lock pusha loopne push pusha jg sub jmp pop cmp fsubr mov dec fiadd clc repnz adc push iret sbb add mov or xchg imul ror repz int3 fs push mov push scas sbb clc sbb xchg or xchg outsl xor ds cmpsl dec inc loop add mov push xchg (bad) leave out mov lcall stc cmp (bad) in fwait int stc sar xor orb ljmp cmp adc ret out nop fucomp add out xor dec pop outsl stc lds (bad) arpl lods or pop je movsb popa push dec mov xlat jb sub lods inc test ret andl xchg or adc lods jl jbe (bad) cmc mov inc pop mov xor cli test jmp sti push dec in add outsl icebp (bad) imull sbb sub dec sti fidivl add nop xchg xor mov idivl fidiv insl insl mov gs jmp xchg mov insl test jp pushf pop and cs pop les inc xor int3 sti lods jl and xchg stc outsl cld sbb inc jne repnz lahf or xchg stc aas movsl insb add mov cs cld (bad) xor sub subb out sbb js out repnz mov pop xor jb mov movsl mov ret outsl cld es daa leave imul pop pop test out xor inc xor and insb std mov pop std leave inc les xchg ret jmp xor outsb adc mov daa pop push sbb es push add dec pop jmp aaa sar push enter out xor pop out jns inc dec int push (bad) jl bound pop decb test jb mov mov dec pop (bad) xor repnz sbbb pop ss sbb push cmp add inc ds (bad) xor inc cmc in je es ja pop test pusha out lods outsb and outsl jmp and mov fldenv mov pop sbb nop or or xor fiadd cmp shrl (bad) scas cmpsl cld in push insb jg add movsb mov xor imul testb add fild enter adc outsl shl push sub inc enter inc add clc sahf pop decb outsb push cs aam cmp pop inc pop xor mov jbe dec xor xor or aas pop imul mov or adc mov add je cmp (bad) (bad) jae pop je or sub mov dec cld es data16 cmpl sub test xchg and jo and xchg into dec push mov cwtl add dec movsl sbb or outsl in sub (bad) mov add add mov add leave subb sub addps je pop leave adcl outsb adc test fdivl jb (bad) movsb pop pop mov pop out inc leave pusha jmp int3 sahf dec in in negb mov dec ds je adc movsb push adcl add sub pushf jecxz (bad) cld pop pop lds fs divl sub test xor lods inc movsl pop push jbe add sub push mov add sub gs sub push push outsl add add test incl add pop pushf push cmp cltd arpl add flds sub push pop mov das addb mov jb xchg lret pop jb push mov lock sub aam or bound and pop xor cmp push xor (bad) nop jae dec sub xlat mov sahf ret (bad) push insb push mov in jb pop push xor mov jp push mov add aaa pop xchg fldenv loopne inc sub xchg pushf pop fdivr pop mov pop imul in es pop pop das orb (bad) ffreep cmc incl in xor xor xor pop xor shlb pop and xchg sbb shlb add stc pushf pop cwtl in jmp loopne dec clc sub pop aam push adc je jl cmp or es loop in or mov decl and movsb push or or enter loopne pusha dec adc shr add jmp mov add movsb push loopne int3 or and orb pop scas fstpl mov imul outsb or int3 push cltd loop pop pop jmp decl or push movsb and (bad) push movsb push mov jb rorb outsl movsb sbbb shlb push jg,pn jmp clc sub fsubr jo int loop or decb xor decl inc sbb andb pop shrb enter test je out dec push outsb scas pop fwait push pop sbb andl cld pop xor push cmpsl push add inc and insb repz fwait pop lcall or pop (bad) enter xchg xor js xchg pop test mov lods jbe pop pusha (bad) jg mov push xchg add decb xor add or jge notl sub mov jg les add jg sub cld es add xor ja pusha test lcall pop in xorl pusha mov test xchg in mov pop mov out mov mov in and push fwait mov leave pop xchg xor add test or add cltd dec or inc fs imul and mov dec dec mov repnz sbb push add rolb mov in pusha pop mulb (bad) aam pop pop call mov out xchg pop push fs xchg add bound (bad) loopne and nop lret and (bad) into inc pop xor inc sahf cmpsl xor mov mov mov outsl and movd push movapd or xchg in outsl cmp subb lret in jmp adc and incl daa cmp outsb (bad) into dec sub mov and xor test ret test out xlat cwtl addr16 pop divl in or add cmp fdivs mov pop add push xlat bound nop ja inc sub lods adc adc xorb adc push adc cmp jmp and fcompl aad sub cmp or movsb or sbb adc in dec jns pop mov adc sbb adc out push adc outsl jbe nop iret and adc and in inc ficom sarb adc xor ja xor (bad) dec adc mov sbb sbb adc adc stc repz repz push jmp xchg test das arpl mov pop lods int3 add mov mov loop cmp sbb and mov push push jmp dec mov adc sbb jg push mov aas or shrb notl jbe call scas xchg push pop les outsl mov jg dec and cli cmp add outsb loop into nop jg push add in fistp adc adc sbb lahf and nop adc stos scas mov fs ds aam jmp inc adc movsb popa and and leave dec mov cmpsl rclb push add lock sbb and das xchg hlt or sub xchg sbb adc jns inc push cmp dec fs sbb movsl cmp xchg js jo xchg push adc test add mov jmp aam adc mov add jb pop mov scas dec push in sub cli sbb sarb leave push dec pop je inc push enter cs mov xchg imul ja mov inc mov aas enter nop pop hlt add dec inc push dec movsl lock cmp jae sbb or xchg pushf insb das pop in lods mov push adc jmp in repz jmp and insl fdivrs dec gs pop fcoml add sbb inc or lods daa push add xchg push pop or leave rorl rolb cs outsl xchg inc ds sub rcll or repz out xor (bad) sbb push pop outsb push cmpl data16 mov cmpsl repnz pop push cmp mov xchg push push xchg and arpl pop in sbb in and push add and pop push stc dec jo push enter dec iret dec jb bnd and cld adc addl xchg dec cmp jmp je fs pop sub mov addr16 mov mov repnz imul adc inc addr16 jp repz sbb adc sbb leave and jns push lcall sbb add test ljmp leave adcl jmp mov repnz scas dec mov data16 scas and add addl push (bad) fiaddl outsl cs pop lahf adc outsl rorl adc sub push jb notb sbb push cmp or into adc pop push xchg push movsb shlb jl xchg fisttpl adc or push cmp dec int3 push mov push arpl call cld add lock rorl repnz adc jb xchg xchg sbb mov sbbb je pusha out out jl jmp outsb lods sbb orb adc sbb enter popf and sbb loope outsl add sbb push or test mov aas push jmp sub nop adc dec in imul imul cmp fs divl push and imulb cmp mov ret dec imulb xlat pop sbb ja push jo fs hlt pop sahf sub orb test fstps nop pop cwtl push scas pop adc add aaa pop and jo add pop mov push push mov scas nop out cmp addr16 in mov adc or mov lods pop xchg sbb test outsb and mov paddw push add push xchg add and or inc push (bad) cmpsl pop and inc and sahf imul mov inc xchg mov xchg stos fmull push mov outsb sbb dec push pop jl cmp cmp mov lea fisub nop sbb dec psubusb cmc ror loopne (bad) popa bndstx mov cmp popa pop das jb in in fisttpl bound bound push (bad) lock dec sahf and daa mov shrl pop mov in mov lahf out sbb push movsb sub xchg mov fbstp fsubs pavgb stc dec repnz addr16 loopne push xchg das into pop in sub addr16 stos iret shlb sub mov test ja cmp mov mov push mov pop imul pop add pop or insb out imul sarb sbb repnz imul inc mov insb sub insb enter (bad) stos insb push and inc dec dec scas in ja andps and mov outsb mov (bad) in mov adc dec mov fmul test sub cmp aam mov jne pop cmovle in fs je scas sbb xchg and jbe ja ja cmp mov mov cmp push fs js cmp hlt and mov add addr16 stc dec fdivl xor and lock pop je das (bad) jp cmp repz add mov xchg add adc aam fsts jnp jnp repnz xchg rcr pavgb call lock in addr16 jge jge enter jge jle push add outsb adc cmpb nop jle xchg xchg and aaa jb jb jg jg in fs dec pushf movsb lods jb in mov and ljmp inc mov xor cmp inc orb dec outsb pop addl pushf cmp mov and (bad) pop (bad) imul mov jg or dec dec lock add in adcl push jle orl leave or addl aas enter test inc pop aas dec test jns call pop ds pop push out je add sub sbb inc or or pop (bad) mov int3 pop das pop (bad) test frstor das test pop js out mov test xchg xchg xchg (bad) lock add cmp xchg xchg enter outsl push xchg mov xchg xchg xchg nop ror xchg dec arpl cmp ljmp clc ret nop push addr16 or mov sbb and sub xor dec dec dec mov jl dec dec dec test dec int3 aam iret mov push xlat mov in in mov fisttpl jecxz xchg push daa mov pop in jbe pusha pop enter sbb mov adc pop mov mov jp cltd aas rcr pop jl dec and mov test push addr16 add psubusb popa xor cmpsl (bad) in fldl pop xchg mov pop push mov les mov add pop sub sub loopne and sub mov incl and add cmpl mov sets pop mov sarb out add add enter xlat (bad) dec sbb and xchg xchg mov nop nop jns xchg xchg nop nop nop push add dec sahf out add pushf pushf cmp movsb or pushf repnz add xchg xchg push pop cmovs in in pop pusha push jo orb cwtl mov xchg sub xchg xchg pop mov daa insb xchg das ja (bad) xchg and sbb xchg cwtl xchg mov in pop push mov cmp leave repz in lock ds repz or (bad) icebp test out das cmpsl loope mov addr16 enter pop inc shrb das xchg xchg test fs out xchg popa sub push sbb jns xchg xchg xchg psllw lock clc add in jbe fcoml cwtl pop movsb clflush leave in leave leave loopne mov pushf loopne lcall stos lods jge jmp push xor push loope fisubl mov div testl mov pop mov mov daa sbb stc inc fistpll xchg mov fwait lret and pushf dec xor aam pop in ss lahf pushf ja (bad) fnop and das push outsl cmp push in jbe repnz movsb scas les fnstcw cmp jb mov sahf das add or xor pop repnz out mov sbb in xor daa mov sbb xor mov inc cmpsb (bad) enter mov das in movsb movsb jnp jb (bad) aas sub insl jb pop and jb int3 xlat mov mov popf (bad) cmpsb das cld pop cmpsl adc jns out add mov cmpsl vmwrite mov jo cmpsl add xor inc xor cwtl xor ljmp outsl dec mov test test mov test xor pop fs fcomps aaa and xor call sub inc inc test daa in xor cvtpi2ps xlat inc fdivrs xchg out (bad) pop push addr16 xor test pop je movsb stos fisubrl in stos xor (bad) mov cmpsl sub xchg sarb in sar sub cmp and loop iret pop lods sahf pop stc shlb lods push add (bad) jno jl add dec sahf mov add outsl daa and mov inc dec add hlt lods push cmpsl mov cmp enter cmp push jb aas mov add in mov pop in and movsl xchg ja hlt lods cld addr16 scas sete or or scas sub mov fildll aaa mov (bad) or mov jnp sarb sub mov inc xor jns mov scas scas (bad) sub pop in clc movl or cmp imul pusha inc fcoml push cmp xor leave sub subps jmp femms dec push cmp xchg push pop js sbb xchg cld add out data16 sbb xchg adc pop mov (bad) lock cmp cwtl jo dec les inc aam fwait sbb xorb test cmp xchg cld data16 sub cmp data16 fistp das fs icebp imul mov aas pushf outsl in and insl sub jo mov sbb jb mov mov aaa sub wrmsr pusha js mov dec jo xchg and pop cs push in addr16 call into das adc js or xor jl mov in out inc push repnz cmpsb in outsb or (bad) sub xchg test push call adc jmp dec leave or test int3 loopne and cmp push sub jae sub test ret ja aad lods mov lahf dec leave out mov loopne adc jg ds pushf sub xchg cmp cs push lds scas insb mov mulb mov push cmovo xlat sbb adc enter scas sbb push xchg jge and xchg pop leave xor fdivrs shll or jo xor aas mov test in sub fild test clc aaa lock and sub sub aas push xchg add aaa stos sbb lret or loopne scas mov add inc dec mov addr16 leave test out cmpsb xchg iret and cmp inc inc xorl jmp das shll daa fisttpll pop test daa clc add movsb ret into leave lods mov mov sbb test les in pop pop and sub clc call test inc int3 fwait scas jns jl push fistp les fwait or les (bad) ja fnstsw das int3 dec aam aam push mov adc add adc dec ja or cmp (bad) ja out sub loopne xor inc jo int3 mov xor xor int3 mov ffreep mov push pop popf pop roll (bad) jb stc scas divl xor xchg aam in jb sub in mov xor xchg iret mov insb xchg jne in mov ja repnz mov je rcr dec push dec adc enter inc cmp dec adc xchg pop mov inc pop jb push cmp inc xchg lock push mov push fdivrl inc add sbb adc and xor (bad) xchg pop mov repnz xchg and mov rorb cltd or mov enter iret xor cmp addr16 test inc fldl cmpb push pop xchg adc mov lahf sarb cmp dec inc jg dec pop and addr16 arpl inc leave mov iret adc fs xor rclb mov enter lcall dec movl or xlat loopne pmulhuw jo incb adc pop mov dec dec enter inc out stos pop insb insb (bad) mov nop pop enter out fmuls enter call cld adc and sub call xchg mov leave out xchg mov fiaddl aam dec leave or clc jb pop leave negl mov sub push inc sbb nop sub pop enter out lods iret dec pop enter lock dec cs xlat sbb in inc pop jnp inc cmp scas pop leave cli pusha (bad) daa rep pop enter inc enter test hlt int3 pop enter lock xor cs fisttpl jnp sbb decl (bad) divb add push push inc inc push xlat (bad) cvtps2pi inc xchg cmpsl mov jbe mov xchg test or dec scas xchg out loopne in faddl xor jae inc mov in leave or jo pop leave test sbb and inc (bad) or js push das fisttp sbb jo add jl enter adc fneni(8087 xchg pop pop nop jns movsb push out push add mov pop and sub popf pushf int3 mov loope pusha push out add sbb pop adc push jp xor (bad) cltd leave push jnp (bad) jecxz jecxz xchg jb sahf mov sub jecxz push jmp dec or mov jns mov das je jg fstps lock leave dec je cmp mov pop out sbb das out dec into fisub das adc negl in cs cwtl call fldt out xchg out add pushl push xlat mov daa dec inc je inc data16 scas call aad dec push addr16 dec loop push xor jmp icebp movsb mov jmp fidivr add or adc jb repnz and ror jb jb fsub dec and dec push in leave leave repz add pop in fs in lods fsub inc inc or mov aas pop fs xchg pop out jbe pushf movsb das aam int3 xor call aam (bad) cwtl xlat sub out pop out sub sub out call cltd cmp pushf movsb mov iret cmp out dec xorl out mov out out pinsrw in out out dec sbb mov enter lock mov ds call push (bad) repnz icebp cmpsl icebp es popf push cmp xlat hlt cltd push (bad) repnz xchg in mov inc xlat iret fsubrl mov cmc stos fisttpll pmuludq clc push leave mov add addr16 shrl pusha push mov (bad) out out xchg pushf mov push pushf sbbl cld push xor in push push (bad) adc nop push (bad) push aaa call xchg push cwtl xchg packuswb and inc adc dec scas sbb out cmc cmc xchg (bad) or fs insb mov cmp mov pop fsubs push xchg icebp bound call push js clc es or enter pop jae sub dec repnz inc lods inc cwtl pop repnz sbb pop div pop mov sahf cmp push psllw add sub sub xor ja xchg xchg xchg fcmovne bsr xchg out lahf and mov leave leave sbb add addr16 mov pushf movsb add pop xor pop lcall dec enter imull pop aaa outsl sub jb add pop sub mov sub push add xchg mov cli mov iret (bad) leave dec or rcrb cmp (bad) jo push (bad) jo daa daa daa js mov jb pop and or adc xchg xchg jns cld cli out enter sti sti sti pop (bad) enter sti out ror enter cmp std std test repnz push repnz or dec push xor jno (bad) (bad) pop and pop push leave xchg pop sub stc jo sbb or (bad) pop loopne inc pop in sub sbb stc or les dec adc xor add add push daa add push clc das add mov cmpsb mov pop mov fstl ja pop xor pop cmpsl test adc pop fdivl scas sub lods add add xchg popf je repnz in xchg div cmp out add jb ror out add add daa in pusha pop outsl shrl int dec test aam cltd xchg pop jb mov gs adc sub dec and in push int3 push adc adc mov pop add push adc xchg mov push mov clc (bad) mov push adcb stc dec lods pop pmulhuw int jl cmp xchg push pop cld adc daa add xor lock scas je ss jnp inc dec push inc je jl in xchg or or jbe cmp pop and jg sbb xor cmp aas mov test (bad) cmp add pusha jns push inc or push lods sbb jmp mov dec sub xor and call sub scas scas lea orl into xchg jl push mov loopne bound les push sub rcll out cmp jmp dec rclb push sub push sub and jg int addb jle sub mov push imul bound out lods xchg mov lds adc push pop out in movsb pusha imul cmove push mov in lea nop adc mov xchg and insb jns enter push add mov xorb lcall addr16 sub (bad) call daa in jb adc fs movsl aas scas dec inc cmpsl sub int3 into pushf scas loope dec and sub mov xor fs push leave jo in paddsw cmpsl in in shrl cmp sbb rcr test in adc fwait cmp xor das aas push iret repz add push add iret repz outsb add iret repz cwtl or or pop xchg or push jp repnz jg addr16 fucomp outsb loop adc xlat sbb mov ret orl push inc test or mov xchg (bad) push loope movsb mov xchg jmp pushf lahf lods sbb jb enter sbb sbb sbb sbb comiss test or jb je push push nop jcxz ret lahf fild in sbb push add jae popf xchg insb ja test dec enter add xchg repz or push cmp nop test out loopne jl insb push mov ja prefetch into enter (bad) (bad) adc (bad) outsb mov push add cmpsl mov adc mov push out mov insb mov xchg cmpsl stc cmp pushf call inc pop push add mov ror xchg jl enter loopne stc pop leave repz add and pop out pop dec mov mov add int3 sahf out ficom pushf adc fs sub and add jns sub push outsl xor xor jns in inc faddl mov add push inc push mov add nop push pop aas pop adc push dec inc dec dec and pop inc fisubl mov inc inc pop ljmp outsl std mov insl in jg dec push push dec nop xor push pop popf jbe mov jg pop lahf jne mov fild cmp test sub ss repz repz insb jle sahf iret repz scas mov push sarb jno es push dec push pop jo lcall aam clc or sbb inc push data16 out js mov lahf out ljmp cmp inc push data16 movsb ds repz shr cli adc jns out sub outsb xchg jns out test (bad) fmul sarl cld push jne ss cmp repz jl mov repz push jbe out sahf out pop jb lcall (bad) (bad) or xchg into repz cmp daa iret repz push insb jle,pn sahf mov xor push mov sahf repnz movsb cs push jb push push vdivps out daa adc adc sbb sahf out sub adc push or or out js xchg xchg add cmp cmp repz pop adc cs jae repz sahf xlat (bad) or jo (bad) je pop ror adc add push es outsl mov jns into loop (bad) push adc add repz or dec bound out push jbe mov (bad) ljmp push ds iret repz dec bound xchg mov mov pop into out idivb sbb es inc push dec repz repz jo pushf mov imul jnp xor pop jb mov jns fsubr add cmp repz push data16 repz lcall out lcall out and stos mov aam out cld adc jle jns lea push dec push insb es sahf (bad) sub jbe sub sub xor outsl (bad) xor mov xchg cmp cmp popl outsb lea push sbb xor dec mov inc lret fucomip cmp daa inc (bad) jns pop js sub sbb push add jp fistl pop in dec or push stos rolb mov push call xchg inc sbb pop inc fidivl js xchg int3 sbb pop or lahf das sarl mov pop cmpsl gs mov sub sti inc scas mov fild cmc mov push icebp xchg popf mov popa add pushf push jne outsb xchg jp push aam pop test imul mov inc push and mov inc mov daa mov aad mov lret sub outsb arpl sub or mov xchg add inc push mov adc insl test fbld popl fs je add gs mov lea (bad) mov mov xchg mov insb sub add mov lahf pop adc and sub cld and inc push dec fs adc fildll push xchg dec adc mov fcmovb popa push imul inc mov dec popa mov das clc sarb fs dec dec outsl insb fs adc or xor sbb add movsl mov (bad) dec cmp sub insb jbe jae scas inc jae or jne enter btr insl outsl lret jb and rorl insb or xor ret sub stos xchg inc lea sbb and enter add fisubl or pop push xchg jbe rcrl enter in mov sub gs fsubrl mov xor adcb mov or lret jecxz (bad) sbb mov data16 outsl icebp push add shll (bad) pop pop jl dec sub mov movsl jne xchg mov inc jne rcll inc clc add lds fsubs sub jno gs jne in js js outsb dec mov jns pop xlat arpl add inc out pop add mov cwtl xor loopne inc push adc je push imull push outsl inc insl xor add sbb imul subb adc and sub and (bad) loop mov ret or add xor imul mov rcl dec or add mov xchg add hlt or sub (bad) loopne xchg (bad) frstor das daa sbb add push adcb mov sbbl ret mulb sbb loopne inc and jae fs jl dec imul cmp leave aas aaa jo lock xchg sbb imul adc mov jb jne sub in fs pop mov push and fadds and sbb sub bound sub adc daa mov daa inc stc shlb jb jae adc or sbb xor adc adc adc jo cmp shlb xor jno test jb push pop fs test xchg push in ss cmp jns (bad) fprem adc sub andl xchg or std dec aas inc bound pop inc push pop mov sbb pop dec dec outsb xor cmp sbb cli mov lock add mov and adc rorl pop fwait dec xor out dec notb inc je sbb mov mov adc jne dec dec add push addl lahf add inc fs lea cmpsl neg xor sti dec jg mov and dec scas ficoml sub adc inc ret mov ds add xor fstpl cltd insb inc pusha push imul js out inc mov lret xchg mov (bad) xchg jae imul aaa daa popa push add dec mov call sub push and jo sti (bad) jbe (bad) jnp push and lods lock xor in sub sub loopne sbb mov pop jge push outsb mov or and popa pop loop mov icebp push or and cli (bad) sub inc inc add mov xor js loop sti adc popa adc mov mov enter fisttpll ret push inc aad popa fisubrl out push jae imul add icebp and sub fisubl je push das add bound jbe mov adc imul xor adc push jo adc movsb lods push add xor loope or lods in mov adc iret jae in cmc ret push jbe mov dec daa cs nop dec jg pop out mov in daa iret and iret sbb fwait iret and adc xchg dec iret and lods push add inc imul rclb lock push dec dec push xor cmp js push or pusha popl lea mov shlb mov das loopne add adc sbb (bad) rolb (bad) je add add jae es xor jg xor adc js sbb pop jne add add (bad) mov inc add popl arpl cmp int3 and xor imul outsl jae je inc push mov insb sbb jnp pushf je pop mov push pop jo clc jb lods inc imul or sbb cmp shrb jb js in mov xor inc pop sub sti xor fucomi xor cmp jns imul push and adc or sahf add add addl ret insb or or decl or mov and pusha insl jae dec divl out bound adc inc lahf (bad) jnp mov imul add popf add popa mov adc adc push pusha gs push mov xor gs jae adc mov add fmuls stos adc add mov ret mov lcall (bad) cmpsl fmuls or jmp incb mov daa insb jbe bound push scas popf imul push add xor xor jl int mov (bad) into dec bound pop ja cmpsb leave add sbb cltd xorb mov lds jae and sbb xor sbb lcall test pop negl stos pop adc and bound jle arpl push mov sub notb data16 ror mov adc lods (bad) mov das adc divb (bad) push loopne add cltd xorb add cmp lahf xchg iret arpl daa in sub pusha sbb fisub jnp xor inc fbstp adc push mov fbstp xchg fnstsw out cmpl fnstcw adc sbb cmp adc mov (bad) xor adc sub scas ror sub shrl xor sbb adc rorl mov cmpsl push adc pop or mov adc mov fisub jbe in outsb mov mov lret (bad) gs add pop mov jbe pop ljmp xor inc push sbb push adc adcb pop xchg or iret mov or loopne mov xchg push (bad) jmp addr16 iret add sbb jge mov fwait jnp insb sbb aam enter test pop inc stos add push add (bad) mov mov inc sbb sti (bad) movsb jnp add insb sbb adc push lret dec popw pop add add fucomip mov ret roll mov cmp dec jg test push stos lds adc inc insb cmp inc ja xchg push mov adcl sub add push roll in das ret pop scas push mov jbe (bad) inc add add adc xchg js loope stc pop pop inc mov ret cld inc in mov adc add lahf pop xchg sub cmp mov jno cmp fsubr lret movb cmp xor sub int sti sbb fidivrl jae pop sub or jae ret ret pop sub or xchg xchg pop mov sbb movl sub outsb out add push xor mov cmp ds push in sbb dec sti data16 pop lods xchg inc or ficoml daa sub bound mov xchg xchg dec and dec adc ds jns fbstp movsb jecxz iret jp or jns scas jp push scas mov sbb mov and inc xchg lock sbb in lds repnz mov das and mov xchg mov imull ret jb inc ficomp jb inc push cmpsb dec cmp inc push lahf mov (bad) orps jns push cmpsb je test xchg jbe sub hlt ret and pop lret stos and add bound insl (bad) (bad) xlat cltd push sbb iret add pusha dec mov xor sbb outsl sub in jne out mov lods sub jbe lods push dec jne and shrb jnp fsubr or imul ret pusha cmp mov (bad) mov cmp mov rolb inc pop cmp jmp inc add ret nop mov dec in add fdivrs xchg imul add push sbb dec outsb push add inc pop adc inc adc mov aaa flds cmpps jae inc dec sub mov push sub mov repz sub or repz or (bad) sub pop push xchg add add push test and push push lahf adc adcb inc and sub inc pop mov mov testl or xchg dec push xchg inc aad ret add add mov adc jnp mov push pop dec jb cmp adc inc out dec mov mov push inc add int3 ret add orl imul shll fs push out aad stos pop adc sbb arpl dec (bad) out int3 pop xchg dec xor sub push push jp jmp mov (bad) ret popa jo faddl das ss or rolb add mov adc push popa and gs cmc add negb mov movb dec jo jne jecxz cld xchg and add je add xor daa xchg and (bad) mulb fs enter rcrb gs gs push out and fucom insb rcrb out inc cmpsb popa and or movsb pop lahf leave popl push push adc call cmp and frstor insl or call or lea outsb and iret sbb fwait lret dec sub adc sbb mov and pop rorb popf inc cmp mov dec mov sbb xor xor out es xor dec pushf pusha add cmp cmp and cld xor mov jne sti (bad) jae and pop in popa xor inc dec push xor xor lea jo jge aaa push or lret out add xchg mov jo (bad) xor xchg xor push dec ja bound jb lea push rol inc cmpsl test andl add lret testb aam dec add dec jne mov arpl cwtl mov daa or sti into sub push cmpsl jo inc add arpl (bad) dec xor xchg inc jb,pt fs inc sbb (bad) out loopne and in das sub shrl ret dec pop xchg mov test inc and pop add inc jecxz popa icebp movsl add xchg xor inc push hlt in ss outsl jp add (bad) pop cmp popa iret insl mov dec sahf mov inc cwtl mov stos push cmc fsubrl mov mov push mov scas push cmpl add dec lahf add jl lahf sahf add add movsl cltd pushf xor xchg pop js push dec out mov add scas and or push sub and jmp movsl (bad) sub xor movsb mov imul mov rcl or movsb add pop pop dec add jae adc pop dec cmpsl and mov shrl shlb in bound out xchg cmp and push (bad) mov or repnz xor (bad) das je dec sti rolb and fsubs lock (bad) dec jae stos das insb xchg push cltd add pop mov mov xchg data16 mov aas iret adcl push orl outsl repz orl dec lcall and mov lcall incb dec loop add adc mov or test add jl fistp test inc jno fnsave add ds cli add mov jg popf (bad) lock cmp adc xor or sbb xor mov and repz and sbb xchg movsl jo push and sub add sub iret sub add test (bad) mov and cmp add test xor push mov cltd mov push inc push pop (bad) cmc lcall add jo and pop xchg jo push test movsb add push adc in mov in jmp push xor mov dec add sbb adc gs cmp jmp mov test sub xor js mov push or fsubs or (bad) inc daa enter pop mov (bad) imull pop daa jp sub dec mov add pushf sub mov push sub arpl lods rcll imul fidivl rol aaa sub add push (bad) mov scas mov adc in xchg (bad) je sti cmc sti pop les cmp sbb xor inc loopne mov or lock dec popa xchg sub xchg mov xchg repz cld jle mov add dec gs pop sub pop or pop addr16 test loope aad cltd out inc xor sahf push or and scas xor rdmsr push push (bad) adc insl xlat pusha es push mov mov adc popa mov orb dec ljmp xchg cmp scas mov and xor lret adc inc insb lods fisubrl jo and jmp pop xchg adc enter add fnsave add daa repnz fnstenv push pop roll push sub jnp arpl add imul punpcklwd mov push inc jge add cmp outsb jnp and pop jnp outsl sbb (bad) in cs (bad) loop test insb dec inc fbld scas loope fs mov out insb loope imul mov xchg xchg pop xor mov or cli push jp jbe sbb pop shrb outsl push sti sub inc aaa sub rcl outsb fistpl cmpsl in push fsubl xlat or mov into add pop out roll push xchg ja bound inc add imul mov fmul sub xorl jne fcomp in xor push icebp loope inc fwait sbb add mov shll ror sub pop xchg insl ljmp jp mov das in rorb lret push sbb bts inc xchg sbb nop sbb add out insb sbb or es dec pop xor mov lcall cmp pop push xor sti aas xchg jg add push sahf xchg push mov cmp xor mov mov orl pop xchg push mov in jno pop push add cli int mov mov cmp cmp iret or adc or pop or mov jb out dec sbb push sub outsl add (bad) and add jle (bad) out subl push fsubs ret adc in mov xchg xor add mov out adc mov test movsl and lahf (bad) loop or aas inc and mov divl add xchg rcl stos daa and or add jne pop cmpsb add push pusha orl adcl inc nop bound xchg or lods xor mov arpl push xchg add dec mov pop repz jnp cmp xchg cmp inc rclb or jb xchg lods in or push push add lods mov stos push loopne repz add mov cltd add mov fwait xchg pusha push xchg or sub jae jo or scas jle jo cs add and pop js xchg popa or add adcb lea push add hlt les outsl test mov mov sbb push push hlt xchg jecxz dec insl push mov xor push cs dec inc sbb jo push inc popa in and dec (bad) cmp out and inc stos or lahf aaa pop add add inc fstpt and mov push shll mov inc xchg push dec mov xchg arpl xor cltd pop iret aas aas inc ret mov jl inc push sub and pop push cmp repz xor jl mov iret jnp push xchg jg out test mov mov and sahf (bad) push out push clc pop sbb jl push repz repz or push push and add aas iret repz push fimul aam rolb sub mov push mov jns jnp sahf jp push pop dec push int fldt insb sahf mov sub cmp mov dec mov and ss push scas shlb jl in mov faddp push int3 push (bad) out cmp jl ljmp (bad) xchg push mov cmp bound inc repz repz es fistpl mov or (bad) xor ja cs push push fcmove fildll push loop es xlat and repz repz les repz xchg mov push cmp repz dec inc cmp stc cmp repz adc cld push out sahf cmpsl bnd out sahf (bad) mov sbb lahf negl jl cmp inc push dec pop imul out imul jp fdiv cmp mov cmp xor lahf push test lcall mov push iret repz adc and cs iret repz xorl repz pop mov imul push decl pop adc jns out xor jns pop outsl jns outsb mov mov pop (bad) fnstsw cs es mov stos jle mov push leave jns mov shl pop cvtps2pd push sub jns in icebp daa fwait mov out sahf mov lret aad jmp repz pop pop adc out jns repz dec ss jnp repz imul repz js push pop push sahf cmpsl stc cmp xchg pop ss ficomp das pop aas popf push mov sarl push or push out out xchg out aad cs push imul int xor pop push push push (bad) pop iret repz icebp in lret jnp repz xchg js push pop push iret repz outsb jle sahf scas mov into cmpsb fsubrp mov (bad) jae repz xchg in mov jl or push dec mov flds aaa je lods add pop sbb insl add mov lds xor mov mov bound cmpsl fdivs inc pop aaa push rorb xor xchg lahf xor fildl aaa push mov aaa (bad) adc pusha add xlat mov les aas cmova xorl push or negl adc andl (bad) push test aaa cli test cli jb cs dec sub pop mov nop pop push push inc push inc inc adc push jno add fsubrs push jns bound aad and inc rcll add and bound or lahf iret inc popa outsl aas sub (bad) mov aaa sub cmpsl and sub mov aaa popa sbb ss stos ljmp fiadd inc or popa les out leave pop push in push out jbe cli push aas and inc fs bound imul mov dec or pop push mov dec inc lea arpl (bad) das sub dec and xor sbb sti mov stos mov mov fisttpll inc push dec inc jecxz inc dec mov inc inc push inc dec sub push adc add sarl cwtl popf and push lahf out iret sbb xor ds sbb xor jno ret aam lcall cmp cmp sarl xchg lahf stos mov cmp repz loope stos repz cmpsl push push lahf ss sbb sahf mov stos cs scas lcall std push push mov jns in out mov js test or (bad) aaa inc mov mov adc insl orl push xor es sub les mov sbb adc aas push dec int3 push std jmp clc es mov (bad) cmc btr in and jns inc fdivs pop (bad) sub mov add lahf in adc sbb out jns out add or and les cwtl or jg (bad) arpl (bad) roll push sbb sub ss and mov ljmp and xchg pop lods pop (bad) fcoms adc push popl dec xor mov mov inc in mov test dec push inc inc inc push insl sub out clc test push inc sbb mov cmp inc inc dec pop (bad) sub addr16 dec mov pop add cmpsb pop (bad) mov and out sbb leave imul mov movsb xchg xchg dec cs das cmp orb int3 sbb jb leave and xchg pushf pop mov sub lock jns and add lahf adc dec repnz adc or mov roll je insl fs dec out mov add xchg inc (bad) shrl sub push inc mov call movsb aad add ds stos cmp aas lret xchg gs adc sub mov (bad) adc in data16 lea and add das in jno andl push int mov imul and dec bound xor mov sub or mov ss inc (bad) (bad) (bad) imul repnz cmpsb mov out jmp insb out sahf sub inc mov lea (bad) pusha mov ljmp shr pop sub mov inc stos and std test push push xchg aad or inc mov push lods adc inc sub inc lea inc test xor adc adc lahf scas roll pusha int (bad) icebp add dec inc sub or mov faddl addl sbb inc dec sbb inc sbb add inc daa incl adc prefetch gs aad inc cmp scas sbb add idivb pop negb loopne test inc dec dec push push dec inc xchg xor movsl scas lock movsl push xchg (bad) cmpsl or movsl adc adcl adc lds sbb add adc xor dec xchg (bad) stos lea add rcr mov jbe pop aaa push or aaa aas mov adc aaa aam bound (bad) sub int3 add clc push xlat rorb pop scas inc sbb pop push mov mov aaa mov arpl push pop aas dec aas lods jbe test aas movsb dec lods sbb mov insl mov leave xchg lds out out dec mov inc jno or ss mov sub rclb pop (bad) movsb stos pusha sub inc pop data16 pop jmp dec cmp pop bound fbstp (bad) pop pop pop pop xchg fidivl (bad) jae aas add shll dec push adc add adc pop adc mov aaa repz mov aas xlat das popa aam (bad) out inc or dec pop dec and mov sub xchg fnstenv adc mov aas pop or mov das dec test pop sbb mov out sbb imul (bad) mov ret outsl or lods xor cmp das (bad) aam mov pop and dec jg and (bad) push enter pop dec das aaa sbb sub push (bad) aaa lea loop bts and pop inc mov adc divl mov aaa daa arpl sbb mov mov pop xor outsl outsl nop adc push fist scas push xchg mov jo cmpsl pop add fcomp nop inc push xchg mov aas ja pop cmpxchg push gs stos cs in mov inc stos cmp inc addr16 iret cmpsb mov inc ja imul pop in sub xor or or aaa sub imul xchg inc pop and bound pop xchg mov xor and dec rclb in jg dec inc cwtl or push mov pop adc pusha and rcll das outsl add daa or adc add (bad) rclb out mov push mov sbbl outsl popl dec (bad) mov or aaa cmp or lahf jg sbb xchg pop push inc test movl jg inc jecxz bound push dec dec inc or ffree pusha mov adc pop das push jo,pt mov mov push push arpl and dec outsl jg push fldl addr16 mov push inc inc or outsb cs pusha sub outsl sub insl inc inc cmp cmp inc je nop pop xlat test jl out clc (bad) lock and out lcall jns out jae jno outsl out sahf out insl insb imul jns imul pop cmpsl add dec push cmp repz out hlt push in ror cmp movsb jl dec sub cmp ds or add bound mov mov and test add push (bad) inc dec xchg add lds push add xchg fildll adc aaa push mov ret das add add pop jl shrl xchg push add sbb adc mov je and add xchg imul pop inc xchg xchg mov out xchg push enter dec xor dec push xor or cltd or aaa mov xchg or inc daa adcb dec dec dec push scas xchg gs push push mul xorb dec push dec dec or sub mov or mov mov dec inc mov xchg mul pushf mov aas dec dec pop adc inc insl and sub xchg or pusha and jp punpckhbw rorb sbb push movsb xchg mov insl aaa (bad) xor arpl das jo inc aas pop inc dec dec mov xorb and jg pslld and inc dec rorb (bad) or dec and js xor leave push adc pop add movswl inc dec out fdivs inc das push mov xchg cmpsl push dec cmp fistp mov xor inc stos outsl mov pop pop sahf loope cmp pop adc insl (bad) aas mov shl das push mov inc xchg test aas in fstl lahf aas je imul or cmpsl push mov mov or and pop out mov push out mov mov inc cmpl cwtl cmp fs inc jmp movsl pop mov adc adc aaa mov arpl push mov mov cmp adc sub pop dec test das or and ja adc sbb shrb mov cmpsl pop out sub popa inc pusha jb pusha mov iret xchg push pop xor aaa xor aas outsl dec mov aaa xchg xchg push fistl notl push mov dec test pop and pop fiadd jo mov mov shl mov inc mov jbe nop xor mov aas pusha test pop cmp js xchg jne push and mov sbb inc add ljmp es movsl jo sub and cmpsl (bad) pop push test and inc arpl mov stos inc cmpsl stc or lret cmp arpl inc inc sahf lds aaa fwait push pop aas loopne push inc pop inc insl (bad) sti push jae notl shll cmpsl out or inc pop xor dec xlat incl dec cmc xchg lods and mov dec pop aas mov push aas push gs shrb dec je push aaa xchg sub mov outsb or mov cmpsb adc adc inc fidiv push fldl addr16 jg (bad) sbb xchg pop aaa scas adc xchg pop and or lods dec jmp push inc andb add out insb push inc sub mov push add scas sbb add push xchg inc pop mov add add or insl ret out push pop sbb iret das shlb iret das jnp sbb sahf push mov stos (bad) or push add das push adc xor pop dec shrb pop inc daa push lock jle or movsl push dec call sarb aas inc pop mov dec pop or pop or dec add and add das stos jge sbb mov cmpb lds lahf sub mov aas xchg xchg pop inc stos xchg pop add adc sbb stos pusha mov arpl mov insb push daa aaa lret pop dec sbb aaa pop fcompl xlat ja mov stos xchg mov add cmpsl out push (bad) or lea dec imul pop or jle sub sbb in shrb gs cmp push pop add daa pop cmovbe or (bad) aad pusha roll sub mov stos xchg pop pop xlat pop sub adc push push or or and sub sbb sbb clc inc sbb aas je sub outsl mov xchg mov or dec jne rolb lock push inc or sarb popa fs jo inc mov sbb negl jno or bound out add arpl inc and xchg mov xchg mov pop pop (bad) jmp mov das ja adc push or xor jb ja or and pop mov daa pushf xorl aaa or push mov sbb in dec adc mov push pop dec pushf adc mul push mov out pop js popa cmp mov and mov lods inc mov inc or mov daa dec jno lcall (bad) cmpsl shl sub cmpsb arpl outsl ret fadds mov (bad) pop aad insb outsl sbb jns (bad) in rcl adc rcrb or mov adc addb and xchg pop xchg ja daa push adc fldt lea and sbb adc push arpl mov fidivl push aas mov sub das inc daa mov sbb or mov mov sbb and dec and cmp add in cmp xorl push in lea push sbb pop dec insb push icebp daa inc bound aaa jg push or xor xorl or sub mov mov mov push scas push pop mov stos loopne (bad) push pop xor add mov inc les fwait cmc daa fwait (bad) pop inc (bad) mov lods sub jb cmpsb pusha and sbb or xor pop outsl adc lods insl pop fwait das mov push scas lods mov mov ljmp mov lods jecxz fbstp and lea mov jae xor cltd pusha das push scas fstpl movb fldcw xlat scas mov sbb aad inc daa push pusha pop jae xor pop mov jge daa jb mov pop inc das push xor outsl mov mov add pop push push jne cmpsb add mov push aas inc mov mov daa dec xchg ret or rol push (bad) push push vpunpckhdq iret dec pop mov and inc js mov and inc mov mov mov add push fwait inc daa push mov inc xor mov das mov inc (bad) push cmovno fmuls inc add in call pop pop lcall mov push (bad) inc (bad) sbb jnp les inc aaa outsl or push push leave cmp je inc (bad) mov movsl or adc push xchg daa jbe xor pop or jb mov mov inc and inc daa dec (bad) lea sbb dec mov adc sbb mov add dec arpl push subb popa loop sbb mov mov add aaa mov push xchg mov sub push pop mov push jb aas push inc add outsl dec outsb xchg inc and dec adcb les or pop push sti js ja mull push lea cs out xchg add stc stos push movb xchg sub push jnp das out sub push and xchg push sbb rcr add or das push xor mov addr16 pushl inc inc and push out jb (bad) dec ss bound idivb (bad) pop movb scas scas fistpl aam mov jb rolb mov aaa shlb in les cld gs ja pop movups pop es and fwait iret jmp mov jmp or add push mov pop push iret aas ljmp inc mov das cwtl shll pop inc cmp stos mov sbb out gs cmp dec or mov or inc ss ss ja dec mov pusha push dec push enter pop push bound cmp dec or mov dec popa jbe addr16 gs mov sbb inc adc mov xor arpl das arpl ret push aaa ret cmp popa sbb rcr loope add add fadds mov push out pop inc mov (bad) lods repnz movsb shrl xor push loopne shrl daa sbb (bad) adc or out (bad) dec imul das push push xor and xor sarl pop push shl jo inc lods enter les lods (bad) and mov pop push das pop xor repz dec faddl and push push cmp mov adc mov ss inc daa push sbb pop mov jecxz daa xor inc mov sarl jp jge jle das cmpsl mov push sbb stc sub mov lds push pop dec sbb xchg aam daa mov mov cmp sbb mov jnp jg arpl xorb movsb sub ret dec mov mov adc fs (bad) xchg sub loopne xchg call iret scas mov clc xchg inc pop push cmp fstpl push pop pop lods mov das rcrl pop xor adc addr16 inc arpl rcrb (bad) xor rcrl xchg lea cmp adc adc adc adcb mov or aam jne mov rclb out or add mov popa ds or inc scas jae or das lea and outsb sarl lea ja lea iret imul ret dec add push das inc loopne pop add popw dec scas insl stos jae hlt sbb ss jmp adc inc js lods outsb sbb push rolb loope xchg daa daa push fcomps jecxz adc push add xchg jo mov fnstcw jnp push mov add cmp xchg xor xor inc push nop sub mov ss mov pop cs add pop cmpsl sub xchg arpl hlt sub add inc dec pop ret outsl pop insl stos das jo les add mov sbb add sti addl lods outsb sbb out outsl push cmp and mov push and mov dec or mov or fisttpl pop int3 les or sbb and pop jmp add jo mov pop xor dec push inc or xor (bad) mov mov add aaa test xchg or ljmp pop pop inc sub imul add dec aaa addl shlb mov ret or inc mov inc or inc xchg or sti adc into pop sub out lea adc shlb rolb inc mov cmp jnp sbb pop addl inc das stos add and pop inc cs addl mov add xlat sbb mov add add pop mov or fisubl push add incl and je addr16 jg adc sbb add push add adc mov inc daa dec out adc mov sbb leave inc cmpsb pop push dec inc addb ficompl cmp subb inc aaa outsb test test or pop orb ret pop pop test mov or (bad) adc inc out xchg dec push add add adc adc in adc sbb jne das dec mov daa add xor aaa inc loop xor push inc mov or inc arpl lock outsb and jge daa cltd xchg mov add pop mov mov push stos sbb inc (bad) arpl push or push das jnp xor jmp inc enter daa enter xchg negb mov pop jmp loopne leave pop and mov sbb addl pop aam out push or test add cmp push bound inc adc es xorl xlat fbld nop adc inc dec outsl insl push sub negb in (bad) pop push pop push lods pop rolb sub pop aas fwait notb mov lahf enter shrb xchg mov aam imul (bad) dec mov ja xor mov inc add jns add jne lcall push lods mov pop ficoml pop in mov pop lahf jnp fldt and (bad) pop enter pop iret sbb xchg stos push push es out inc call nop sahf out lcall ds sarl or adc gs out lock cwtl add push add add sahf jbe enter add add sahf out or pop or iret repz cmpsb add or mov out pop notl std push push adc adc adc pusha adc js nop pop test jns out rcrb sbb sarl sbb pop sbb sbb cmp push pop push and repz mov enter and lock es or adc sub inc cmpb and pop xor js jo jnp testl pop add das jle jle out xchg sub sbb xor dec adc jns out adc out sahf out and and dec repz jno orl iret repz cmp push (bad) jns out push cwtl out sahf out mov enter jns loopne clc adc or cmp repz adc pop repz repz mov iret repz mov sub sub or sbb out xor dec loope jns out loop jecxz sahf out sahf in in jmp jns lock or cli and in adc add push sahf out fiadd push push jns out add repz out or or push iret repz or or pop cmp repz jo mov repz repz cmpsl stc cmp sbb sbb nopl push xor dec and out pusha and nop xchg out test out lods shrl xchg das dec fsubrs pop in jle or (bad) das add in cltd inc adc inc cs or inc or add cs jo nop nop or add cs lods in call or add cs adc adc adc mov cs or adc adc add cs or adc in mov cs adc adc adc mov cs or adc adc add cs or adc in mov cs adc adc adc mov cs or adc adc add cs or adc in mov cs adc adc or add add cs or adc adc add cs or or add cs adc in adc cs in adc inc adc or mov cs push push push nop or add push sub inc cs push and enter add push pop and enter enter pop pop sbbl add leave aas pop and push ja add daa negb clc js mov fdivrs adc or and jnp jge jb dec or jg in test (bad) push add in xchg add adc xchg xchg mov in fmuls jbe dec mov rorb or les xchg pop mov and xchg js daa jbe dec enter fildll enter mov jb dec pop mov test (bad) cmp movsl push mov mov pop lods ds dec movsb push call test fnstcw lcall xor inc mov orb mov mov or imul int loop loopne ds xchg mov js jle movsb or (bad) fisubr fnstcw out mov sbb mov repz ss jle and mov add scas enter add dec mov fdivs mov or dec roll xor mov mov dec ss push (bad) faddl loopne int xor mov mov add and ficomp mov mov lahf add incl (bad) push jg test add xor iret and inc pop (bad) sahf in rolb jns lahf dec clc cwtl add stc cmp jbe dec sti jle add std mov inc (bad) push inc mov add add pop adc dec int ss sub nop jg jnp jae sbb enter test and jbe clc jg adc lock xchg inc nop lea pushf rclb dec enter cwtl adc inc mov daa in pushf jo add mov nop adc mov xor out xorb dec rclb push mov sub in in and xor pop sub cmp and aad dec inc sahf ja and cmp xor lcall sbb pop cld shrb movsl jl push push jbe xor scas incb pop cmpsl imul ss int push (bad) rcrb pop add and mov sarb lock imul outsb dec clc popa in mov ret xchg movl loope add adc fwait outsl or add cmp test mov leave dec test andb testb push subl mov jl mov jl imul xchg ds leave repz add dec ss pop (bad) aas jmp idivb and mov push jo rorl das data16 pop xchg add cmp jo sub dec dec jns nopl fdivrl pop outsb mov das pop jg enter aas cld pop clc (bad) xor xor inc mov outsb jle cmp das add icebp sahf testb pusha add jo sub fidiv pop es inc iret mov mov jg cld aas pop push aas push add loopne les ja cmp dec pop es adc fnstsw das test dec mov push push pop loopne mov clc push stos mov mov enter cs add inc in outsl add data16 mov and fcomps mov mov ja add push pop cs inc cmpb add and sbb dec mov orl ss movl xchg ficompl ss das push and xor mov mov push shlb add fldl es inc push add fwait int push decb cld jg aas lock mov jnp push pop inc push inc xlat mov jo out push test pop xor das or pop adcb testb push test inc loop (bad) (bad) int adc and and and inc and shrl inc dec (bad) xor add add negl ds adcb ret outsl xor mov mov repnz les sarb or jnp jg ds cld ds cmp cmp imul incb clc ds jg shlb jmp ja outsb das sahf outsl pusha sbb push pop enter fldcw jl,pt cld cmp mov lock or or push dec cmpb dec addr16 add loop or mov cld push pop jp xor inc movsb push push fmulp jnp int sub inc sahf inc inc jne jns pop adc mov pop incb inc sbb cmp jae sub in insl fisttpll addb add add (bad) mov rol ret push and aas pop incb sahf mov mov pop int3 addr16 push addr16 add or popf sbb jg inc inc lahf leave sbb xor nopl addr16 scas fiadd inc mov cmp jne mov xchg xor rclb pop add lock addl inc lret dec mov paddd mov or pop sub pop sub xchg mov fildll xlat adc mov push loopne loopne int subl lock ficom aaa dec add and pop (bad) mov nop adc and jnp std and push pop add mov (bad) fbstp nop xorl xchg push mov aas addb or jecxz lahf (bad) sbb mov and fnstsw pop pop sbb out mov into std push pop cs dec push in jg adc enter sahf add jg,pn test fdivs mov push lods push cmpl adc xor mov popf jnp in dec nop xchg movsl add xchg loopne out das aas enter (bad) (bad) stc cmp imul push data16 jg jmp pop jl js sbb es das std jmp lcall loopne mov sbb add negl mov and mov dec (bad) sbb jl insb adc iret jae push add nopl das mov mov push (bad) mov addb add outsb inc push adcl rcrl push inc mov rorl dec roll incl pop push adc mov add xor fimul inc pop pop xlat icebp xor (bad) bound mov dec fwait out stos scas pop cld push clc jg aas and cmc sub (bad) out dec loopne or mov add mov inc jmp jbe add jg add mov aam loope push push push mov mov lods packuswb dec pop xor mov sbb nop das or push into xor jo sub sahf jnp insl bound mov add add pop daa inc cmp ss push inc lahf sahf sbb push cld lahf cld cld dec sbb jns or mov push daa aaa inc xchg mov addr16 sbb adc push icebp push or xchg jbe cs andb addr16 test ss out mov loopne jae ja int popa add daa loopne push push lea sbb nop das or adc push and aam fwait or adc push negb jns cmpsl imul add add adc push ljmp ret push mul jns out cld push clc lock xor sbb adc in mov dec mov sub and and cmp out addb and jbe adc inc lahf mov cmpsl flds movl out aas pop sysret lahf and mov cmp ljmp xor sbb mov push sbb sbb inc and push lock aas dec pop loope cmp outsb jg cld in mov adc or cmp jg cs adc add das xor inc dec dec test dec mov add jle cmp pop aas jg,pn mov inc iret push addl or push push and mov addb aas xchg or adc adc xorb mov push inc add mov or dec adc adc or daa xchg pushf aaa inc push addr16 out jbe iret repz (bad) icebp (bad) (bad) (bad) pushf repnz jg aas clc push jo lock pavgb adc pop loope cmp daa aaa inc push addr16 pop mov or mov jbe stc (bad) adc lahf (bad) pop test lret push ret fimull and mov mov ss add inc (bad) inc jae mov or pop daa aaa inc movsl and push data16 insb ss pop sahf ds cld aas cld jl,pt pushf mov sbb pop pop daa aaa sub into cmp data16 push cmp add out into push cltd push push jo pop pop push mov popw push and and inc inc out sbb iret lahf and mov lret jl pop pop pop mov out lods iret inc add and and bound dec stos push adc adc mov push jp push xlat (bad) add jnp mov jno sub jecxz pop subl dec sbbl mov cmpsb push push push insl lret and xor imul inc mov insb dec sub shlb test mov mov out or imul or or mov mov cpuid add xlat mov icebp or int fwait ja popf pop (bad) ljmp insl pop pop sgdtl jns outsl and fsubrl sbb sub jbe (bad) call pop (bad) xlat outsb in mov xchg in inc add js lock mov lods frstor push daa mov pusha bound daa lock and xchg (bad) scas rcrl or jmp push mov mov push out fnstsw xchg pop es inc inc stos outsb loopne scas push xchg incb clc push test mov imull sti cmc jl dec (bad) incb push daa ss in jne test add fisubrl mov xlat sbb inc mov or clc jo jnp push xchg push push clc jno inc test scas (bad) pop push xchg pop pop jecxz aaa lock sarb jg enter and mov shrb add aam mov add dec shlb xchg test or or xchg xor adc inc imul test mov pop add leave add pop nop lret add xchg int3 fstl sub adc jb mov (bad) sub add sbb lahf pop andl xlat pop dec and inc sbb stos loop pop dec add dec mov adc add das in aaa add push xor dec inc leave rorl inc in jne add mov aaa mov add insl sahf dec add xchg xchg mov push dec xor and scas je push add pop daa inc bound or out and add pop scas cmc sbb call or nop int3 add (bad) int3 push or pop int3 push int3 data16 fwait data16 inc gs pop jbe in pop push (bad) pop sbb pop fidiv push insb data16 mov pop fisttp (bad) jmp add add pop subl je xor mov dec add and xor jmp ljmp test add mov cmp loopne jl or sbb sbb pop xor insl add xchg or xor xchg (bad) lahf add push and sub imul daa xchg cmp cmpsl and pop push xor in xchg add inc push pop xchg pop pop das add insl or jo fimul xchg imul jecxz scas stos inc or iret inc mov inc and add pop dec addl add scas pop out scas push inc dec inc adc pop jp jp inc dec (bad) jb jle rcll (bad) push jg pop mov mov fs add sbb sub mov mov pop daa pop or add (bad) jbe bndldx add push sahf sub mov lret add ficom pop adc adc add jb push and mov cs enter and jb inc cs pop push nop lret cs cs inc lret insb xorb aas enter push push add add lret mov pop pop popa test stos ja dec stos xchg xchg mov mov push (bad) inc mov jb imul push rclb out cmp testl adcb mov inc out add (bad) mov jmp and imul fldl xchg insb add lret or push jb jg test sti push rolb leave add add je (bad) add and or push cmp daa sub dec (bad) jo pop sub adc xlat mull mov push ss dec push pusha inc scas and out imul pop xchg pop imul xor add dec or mov (bad) popa xor (bad) ss (bad) jae mov fs lcall popa push imull jbe xorl push fs loope xchg into and cmp cmpsl cs or lods aas mov dec push daa mov mov pushf sti or inc dec xchg cmp ds arpl bswap mov andb mul pop call insb jecxz sbbl daa aaa pop stos sub cmp (bad) repz or and getsec in sbb fs scas mov fadds add rcll (bad) ret pusha cmp jb pop jae pop aas jbe inc and out or ficom cmc sbb inc aas (bad) jo je pop addl ja lahf je iret pop xlat fwait call jno imul jb sbb repnz ret in add ret xchg mov (bad) mov lret ja dec fldt rcl xor jnp sub sub clc push add pop arpl sub adc out imul sbb fmull ret mov aas fs arpl and jae arpl je (bad) scas xlat arpl (bad) rcr jae pop aas push mov bnd jecxz jle xlat gs mov xchg sbb ret xlat jp stc ficoml adc sub test stos loopne mov push bound imul pop fs push fisttp inc pop fiadd or aaa push and sub and (bad) cs dec lahf insl xchg jmp mov jle xchg or mov outsl aas push dec xchg out jo insw lret sub test cmpsb push inc jbe loop mov es mov iret bound cmp adc jbe jg push ja sbb push dec arpl adc hlt or jae pop fcoml add inc xlat inc jbe stos ds dec xchg insb push mov loope (bad) jae sub (bad) cmpsl add daa pop out lock mov inc iret cmp sub sbb (bad) mov mov stos scas call fs out sbb lret je sti jl mov imul inc jae rolb adc add push addr16 or and bound jns push in (bad) in (bad) mov push add fsubl and roll sub pop stos in jge ljmp aaa jns das arpl ret pop mov lea ss pop adc outsl mov in adc dec mov bound jb imul pop mov xorb pop es mov push mov cmpsl jne movsl stos xchg adc and jnp ss push test rolb and mov or inc iret or scas or scas or jno sbb add and imul adc cmp ja jo ret mov cmpsb sbb add fisubl aas (bad) iret jne sub fwait fwait push dec shrl int stos push jne imul call ja cld cwtl arpl imul aas push lods pusha adcb test aas scas jmp arpl push xchg inc aaa pop inc jg push enter aas and and addl outsl jae or sub dec dec or scas inc roll (bad) mov aas add or mov push andl adc and mov dec insb push adc sub movsb lret (bad) dec in enter imul mov sbb mov gs ret mov mov pop xor mov adc (bad) jo orb inc iret lods pop or pop xor adc loopne (bad) (bad) addr16 jb xlat adc adc arpl cmp mov addr16 pop jmp and (bad) ja dec xlat xor adc mov in insb (bad) xor ja insl imull je loopne or jae gs lcall inc dec stos mov inc adc xchg sub inc das daa lcall sbb mov lds lods cmpb mov divl jg arpl out movhps mov shl jne pop sub daa push ja rcll push push mov enter scas inc lods mov out popa xchg icebp mov arpl xor push repnz mov inc cmp dec loopne sbb notl repnz scas stos xor mov inc push sub sbbl adc mov jae xchg dec jns adc sbb push or cmpsb pusha or mov sets outsl and pop or pop subl and or inc adc mov jnp js sub push pop sub out sbb (bad) das mov sub jo das jo imul inc sub add adc dec sti mov fisubr fidivl mov sbb pop xor push jb imul stos pop inc mov sub inc aaa inc jp add sub adc stos xor jecxz lods ja out popa xchg stos mov jecxz jb outsl sub sub mov push popa add jae xchg mov loop out insl pop xchg imul adc outsb and cs (bad) jno push aaa mov imul cmp stos popa lea sbb xor test mov adc aad sbb aaa imul aam mov sahf sbb rcrb adc mov fisubl mov inc adc xlat jae aaa push dec or jbe mov ret pop les inc ret sbb out (bad) ja add or insl mov call pop jo add mov mov inc add lret (bad) mov fadds sub mov mov xlat jle ficom unpcklps or dec insb jg xchg and dec sub rcll test mov pusha jo mov dec push arpl jae mov xchg insl fild out (bad) jge dec push mov ficoml testb subl data16 add cs mov jp jo js add xor cmp (bad) fldt fwait and sbb mov scas dec mov arpl mov mov mov mov imul add in mov xor loop pop cmp daa pop mov outsb ljmp push jae sub testl or sub (bad) and mov inc push pop jl jl dec adc cmpl in arpl or pop xchg push cmp jp insb xchg ds push iret pusha adc or fwait xor inc (bad) fs das push in lock fstpl mov push inc push push pop js pop jnp xor fwait ds xor cwtl mov push (bad) xor lret or cli insb out inc sub addl ret push (bad) push or mov push add shld cmp ja adcb lret adc sbb daa dec jl fnsave and jg sbb dec mov ds mov imul push jo sbb push bound adc push lods adc mov adc dec add jb lds pop inc imul push cs inc push sbb inc (bad) dec aas pusha fnstsw scas repz roll or pop lds and andb cmpsl stos out cmp push mov sub dec mov sub sbb (bad) stos jae or add dec mov mov fistl and ret (bad) pop push sysexit lret sti cs les sub (bad) jno inc addr16 fwait inc push test das jnp loop movsb xchg jns or call dec loop ret shll push mov push imul ret insl mov push and not sub lret inc stos mov cmpsl insl not push pop outsb pop pop push inc push push pop pop pop add cli inc sarl (bad) push adc addl push dec push call sbb rolb add repz or xchg dec fcoml xlat ja stos and sub in pop mov jnp fdivs and lods dec jnp es cs or mov add test bound scas jae xchg mov sub xor dec mov cmp iret pop das stos loop movsl movsl addr16 rclb cmp pusha jo jmp mov stos loop mov aas dec jb addr16 push loopne lret sub mov or add sub popa iret outsl xor sub push mov and inc arpl xor or lock test jecxz roll cmp movsb cmp add adc inc stos sbb push mov sti xchg scas scas fnstsw das dec into fs cmp das das pop jl xor adc pop rcll adc and loop lods and imul xchg mov scas fstpt mov jbe out or add adc adc arpl ja fisubrl test out sub cmp mov aas andb mov add push lds push dec push rorb push pop xor mov pop and pop (bad) aaa or jbe mov push sbb adc mov scas pop jae push push xlat es dec mov xchg mov sbbl (bad) or inc inc shl adc push or sub mov xlat (bad) outsl insl out sbb mov cmpsl or clc (bad) fisubrl jae and imul jnp push lock (bad) fstpl fistpl xchg xor sti (bad) mov punpckldq sahf xor ljmp sti (bad) outsb inc aaa cmp mov les sbb and push into jae mov dec sbb rorl add pop sbb pop ret push gs pop outsl inc cmpsb shll icebp stos jo or bound mov in xor jne sbb dec jl or xchg pop ret xchg mov pop daa sub push or inc push pop lea xchg bound push mov jg popa add shrb imul rep jecxz inc cmp dec xor rcll push outsl pop (bad) push arpl or mov jae pop add and insb arpl rorl push mov push aaa xor xchg inc scas sub adc pop mov cmpsl and mov outsl pop or mov push das add js sub iret push es fs add mov mov and push add inc iret (bad) cmc (bad) bound mov sbb push ret lret inc sub rcrl inc sbb pop mov add xlat xor mov adc mov sub and gs and push pop outsl dec sub sbb mov daa xlat dec (bad) dec dec jae inc lods and adc jo adc shrl mov ret aam xchg push sub xchg mov testb adc dec add (bad) lock add xor mov jne and jae pop fmuls loop nop sbb outsl pop inc pop in xchg imul and sbb movsb xchg dec pop sarl ficoml imul pusha stos dec xchg cmpsb push xor push cmp sbb imul pop sub imul mov test test ja (bad) sbb push and push or les add sub aad dec pop sti pop in movsl sub push loop push out and jae push ret adc mov inc push ret adc push daa pop in (bad) lods ret call adc ja sbb sbb gs test imul adc es jp js aaa adc adc xchg js insl mov mov adc xchg ljmp sub xchg dec xor cmp push adc add mov inc xorl fs repz or pusha outsl imul sub lret xor aas insl xor sub pop inc ret rorl fistpll notl outsl loope inc stos xchg inc dec rcrl stos or adcb scas add outsl bound and sti fmuls push cs loope outsl popa dec adc sbb pop mov insb or push seta or imul dec call dec (bad) sbb lds das xor imulb aas scas addr16 das dec pop insb wbinvd xchg imul out xor pop cmpsl mov pop div loope into addr16 add insb push inc ret or and sbb aam outsb sub enter mov sub sub pop mov mov pop mov mov mov adcl mov pop gs push pop dec adc ja lahf das mov bound mov rcl adc xor arpl shrl lahf repz lahf aaa or xor fistl (bad) imul push ret data16 add rol mov aaa sub adc and (bad) ljmp fwait push dec jae pop mov add fwait bound outsl or inc pop adc mov jbe xor (bad) (bad) in imul iret cmp es xchg adc or mov mov push cwtl mov outsl mov adc rcrb mov xor xchg sub mov bound roll aas stos dec lods sub sub mov sub sbb mov es je ret cmp das aas lods pop xchg inc cmp icebp (bad) inc fwait xchg push stos imul add ja cmp push dec xor mov cmpsl or cwtl adc into cmp cmp aas bound dec imul and or aam (bad) xor mov aaa or mov adc mov adc sub sbb aaa push pop jae adc call iret arpl or ret pusha pop or scas (bad) push fisttpl (bad) jecxz adc pushf inc xchg jmp push popl push addl mov and mov lods bound mov pop add push xor mov pop xlat (bad) or xchg fiaddl dec popa mov xchg push sti cmp das adc cmp stos push or push popa lret mov out push aaa and xor adc (bad) rcll xchg mov xor adc ret dec adc mov fistpll sub jl (bad) jecxz mov (bad) aas (bad) jg inc dec sub scas lahf negb stos cmpl popa roll dec adc js xchg push shrl mov adc aaa jo push sbb and cmp bndldx jae pop xor lods push adc sbb outsl movl repz adc popf fiaddl ja sbb psubq outsl outsl add ja stos nop pop mov dec jecxz jnp mov imull mov dec inc fwait popl cmp cmp or mov inc mov ja push rclb sub push jbe jae or shrb push or outsl nop outsb sub xorl jg dec dec rclb stc lock mov or aam jg mov aaa sbb add mov lea lods push push shrl xchg sub popa xor sbb xor jmp push add les adc xlat inc adcl add jno jmp sbb inc mov popf (bad) lret cmp add jne cli cmpsl repz inc scas push insb sub jo lea lret or inc add mov mov cmpsb sti inc jns (bad) xchg aaa ret jnp lcall arpl dec fildll outsb nop (bad) add pusha popa les jae popa lds and bound mov sbb inc xor xor push and xchg add inc ds push mov movsl icebp ficomp inc cs addr16 in sub xor sub (bad) aaa sbbl out roll aaa dec inc jmp add mov lret sbb addr16 dec jp outsb movw push inc fildll gs xor xor xor (bad) mov (bad) ss jnp dec (bad) rolb (bad) inc cmpb xchg and addr16 mov xchg jae or jg test dec arpl sbb test inc aas xorl fwait mov sbb jnp mov mov sub pop fbld test int mov (bad) jno lds sub lds xchg mov or add pop dec aaa aaa lds inc push cli mov push rcll ljmp das and or es cs and xchg fs lods imul inc mov jp lock movsb inc das add and dec in adc cmp and sbb sub lret fcmovnb pop fildl adc lock pop out imul dec sub adc xchg xchg xchg xchg xorl push (bad) jmp push dec jne (bad) xchg popa dec mov bound daa inc mov bound inc das cmp mov cmp inc xor rcrb pop cmp xchg sbb mov mov (bad) (bad) aas in adc fnstsw push cmp sbb inc cmp cmp cmp cmp jp (bad) (bad) cmp cmp cmp cmp dec cmp cmp cmp cmpl cmp data16 xor inc aas addr16 cmpb (bad) (bad) (bad) out mov xor xor xchg xor pop xor xor nop xchg pushl adc push ss aaa mov hlt cmp lcall adc cmp xchg cmp cmp cmp cmp cmp loopne (bad) (bad) cmp cmp cmp cmp cmp cmp cmp cmp cmp (bad) mov cmp xchg ds aas jbe test dec sbb js xor xor int3 xor (bad) (bad) (bad) pushl clc xor xor xor jle lahf xor xor xchg xor xor xor (bad) (bad) (bad) pushl dec xor js mov mov aaa mov xlat aaa pusha cmp clc (bad) (bad) (bad) cmp cmp cmp cmp lea lcall cmp cmp sarl in (bad) (bad) jle sub xor push xor xor xor outsb xor xor xor cmpsl xor pushl mov aaa push cmp cmp insl cmp cmp cmp cmp jmp (bad) (bad) jg cmp sub cmp cmp xchg in cmp cli cmp push ds scas fidivr clc adc xor ds cmpl aas int jg je push add jmp push xor xor inc xor (bad) pushl add rdmsr sbb mov (bad) xor xor jns mov in jmp add dec xor xor xor push sub (bad) xor jmp mov aaa cld lcall bound xor or adc xor cld xor xor call xor adc imul mov movsb das push aaa arpl xchg aaa cmpb cmp cmp (bad) inc cmp cmp cmp mov xchg cmp cmp cmp cmp nop xor sarl jecxz sti cmp incl fild aas cmp push cmp addr16 test xchg cmp outsl clc cmp cmp cmp jbe mov cmp cmp cmp cmp cmp cmp (bad) jmp cmp push out les dec jne,pt jnp cmpl (bad) decl ds movsl ds ds mov enter jg mov sbb aas outsl aas js cmpl xchg aas mov clc fidivr in aas cmc (bad) or decl and push xor xor xor xor xor xor mov push cld (bad) (bad) mov xor xor movsl xor xor xor xchg (bad) dec sub loope sub xor xor xor xor (bad) in jg ret test ss aaa jmp mov cmp (bad) pushl cmp cmp cmp cmp cmp cmp cmp cmp dec in jmp (bad) in cmp cmp cmp cmp cmpsb cmp cmp (bad) outsb decl add cmp cmp mov push cmp cmp cmp cmp (bad) (bad) (bad) (bad) cmp cmp cmp cmp cmp pop cmp bound data16 outsb cmp jbe jp jle (bad) ljmp (bad) cmp cmp cmp pop cmp stos cmp cmp cmp lcall std (bad) cmp cmp cmp cmp cmp cmp cmp ds fdivrl cmp cmp std (bad) cld (bad) cmp cmp cmp cmp mov ret cmp pop aas mov mov and push xor xor xor (bad) aas (bad) xor xor xor xor inc adc pop xor xor xor xor xor cmp xor xor xor xor or inc std mov insb ret lea int xor jl pop ss (bad) (bad) pushl mov push outsb ss jbe jp jle (bad) xchg mov mov xchg ss ss mov ss cmp add or cmp cmp decl cmp cmp cmp cmpsl cmp cmp dec cmp xchg inc pop cld sarb cmp lcall (bad) cmp cmp mov cmp imul ds ds sarb xlat ds jg or sub and sub cmp inc aas inc aas dec aas dec aas push aas push cmpsb add pop add bound mov mov nop lock jg aas xchg aas cwtl aas pushf jbe aas test lods aas mov aas sarb aam jo roll (bad) lcall insb cmp xor inc xor dec xor push xor xor add (bad) js jl xorb xor cwtl push mov xor cld lock pushl enter aam fdivs fdivl loopne in call mov (bad) incl xor xor sub sub xor inc xor xor pop xor add idivl mov (bad) pushl (bad) pushf xor xor xor aam leave cmpb call scas das subb (bad) (bad) sub xor dec jg (bad) xor cmp inc xor xor pusha xor sbb pop adc sbb add dec (bad) mov xor aas add or sbb xor xor sub and jmp xor jmp sub mov mov call pxor adc push sub xor (bad) jg pop push xor xor xor insb xor xor xor xor xor xor xor mov rcl xor jecxz rolb pop sti (bad) dec pop adc sbb pop xor and add into or dec dec inc pop subl rcl adc add mov inc or xchg aaa cmp lcall add aaa movsb aaa lods aaa push adc aaa mov lret (bad) mov fdivl in aaa lock hlt aaa add cmp cmp sbb sbb and outsl pop std cmp sub sub cmp add inc cmp cmp cmp call cmp js jl cmpb cmp iret mov push cmp cmp cmp cmp jecxz das js arpl pop add xor pusha sbb stos enter xor pusha xchg pusha sbb mov inc push pusha sbb outsl js xor ret imulb push cli mov cmp imul call scas cmpsb mov jp pop xchg sbb xor cmp inc decl cmp push cmp pusha cmp je test mov incl cmp movsb cmp cmp sarb rorb cmp adc cmp add inc pop add push clc cmp ds cli and adc cmp sahf and sub cmp xor cmpb push cmp cmp cmp jp cmp cmp adc mov cmp cmp fimul movsb dec outsb orl push in call or adc sbb sub xor (bad) (bad) out test xor cmp pusha cmp js jl test mov nop cmp test lods ret sub jb cmp movsl ret lock test cs cmp inc stos dec ds ds idiv (bad) (bad) jo,pt (bad) mov nop ds ds ds mov les leave sarb aam or aas movsl push int3 xchg sub lcall (bad) xor sub add cli out xorb xor insl xor xor mov cmpsl sub xor xor lret cli test (bad) jmp sub popa ss aaa sbb sahf cmp lret cmp mov cmp cmp lret loope cs cmpsb cmp ss cs cmp or add cmp cmp (bad) lret (bad) jmp inc cmp cmp xor cmp cmp cmp cmp cmp cmp or loope cmp out add mov fdivl mov (bad) aas cld outsb cmpb cmp sarl stc cmp dec cld (bad) sbb daa xor aas ds ds ds jle mov xchg out rcrb stos out ds mov jg (bad) (bad) in and sub cmp inc aas push aas jns (bad) out popf aas mov or iret aas ljmp push add or sbb or xchg add xor ljmp mov xor xor data16 xor xor xor xor imul xor addr16 xor xor xor (bad) es andb jbe adc jg in pop cli xor ss jp ss cli incl cmp movsl or ss aaa cmp lret aaa rorb ljmp insb ljmp cmp pop cmp outsl cmp cmp cmp (bad) dec cmp cmp cmp cmp cmp jge jmp cmp cmp mov push xchg ret mov cmp cld push loop cmp mov push cmp and mov jb cmp into mov jecxz lds cli sub sub xor sub sub sbb les int3 and aas fdivrl loopne movsl imul sub aas hlt into mov push sbb xor mov test mov pop jns xor in xor xor push xor loope or xor xor dec xor lods rorb bound rclb jl xorb push xor jbe les enter xor adc jb xor cs xor push xorl mov stos icebp jg xor movsl xor popf xchg je push jl ss or aaa jae sub outsl rcrb cmp cmp mov mov jmp xchg and cmp xchg lret mov pop add cmp stos (bad) dec pop jmp addr16 sahf outsl push xchg cmp call adc push call scas stos out and mov aam lock (bad) sub xor adc xor mov scas pop jbe xor loop adc fstl pop push xor lcall jne adc pop pop xor xor test pop mov add dec ret mov mov fiadd cmpsb lcall cmpsb add push (bad) sbb popa cmp jl mov ret loopne add sub inc cmp js orl shrb pop cli jnp scas push sbb mov add cli cmp cmp cmp cmp mov cmp ja add cmp std and xor jg xchg xor xchg inc jl xor xor jle xor cmp and pop push jo xchg xchg pop jge mov repnz xor xor clc mov aas xor pushl sub (bad) ss mov aaa inc mov push mov aaa fidivr clc aaa aaa (bad) sub cmp inc lret mov sbb cld pop push cmp cmp imul fwait hlt jg cmp enter cmc movb adc adc and sub icebp hlt fbld mov aas sbb rcrl dec (bad) mov outsl mov data16 xor push loopne add xor xor sub inc xlat ljmp (bad) cmp push mov lahf cs repnz cld add pop ljmp adc mov sbb xor xor xor xor sub or mov push aaa int3 adc cmp arpl out jmp sti cmp mov mov jae add sbb lods jo mov xor cmp es push push repnz cmp insb scas call inc clc idivb pop cmp stos mov pop aas pop incl inc sarl sahf lock das xor sbbl sub pop xor jo cmpsl das mov xor xor arpl mov (bad) incl gs dec ss aaa dec aaa pop aaa outsl aaa daa cmp xor push mov out push lock inc pop mov mov pop add cmp cmp loopne sbb repnz and cmp dec ds out test sbb test ja jmp xor adc scas xor xor push out in xor mov adc inc adc jecxz jmp clc adc aaa ss push fidiv xchg (bad) aaa mov adc aaa cld aaa js pushf (bad) movsl sbb mov cmp cmp mov mov adc mov mov or push enter jns sbb and aad out (bad) pop xor push (bad) (bad) iret mov inc xor xor mov xor mov mov xor data16 xor (bad) xor adc das inc jge outsl aam push out ss adc jecxz loop dec sbb cld mov mov mov les les sub add bound jg adc outsl push aad out cmp scas loopne rorl push jb cmp mov in call push pop jp mov push push mov xor lret and (bad) jg mov mov xchg ds outsl ret lods aaa mov inc ja mov or cmp lds sbb hlt adc es push sbb or idivl add insl sbb into xor ret adc (bad) xor std pop fnstsw icebp xor pop xor xor lcall push scas xor lcall push cmp lret cmp cmp cld cmp subl rcl test sahf cmpsb into inc mov pop or inc xor ljmp sbb xor aad fidivr incl iret xor xor imul cmc push pop xor pop ss push int3 ss sub gs xchg aaa mov and inc cmp test pop push cmp push xor rcrb push mov cmc (bad) cmp call test push jbe cmp cmp or and loop cld ds ds outsl jb fistl repz aas sbb push push push mov ss push pushf aas or mov xor xor sbb cmp jne lret add xor xor (bad) inc pop inc push sbb cmp pop ss adcl ss aaa ds cmp subb jecxz inc cmp xchg cmpsb rcrl lock addr16 mov jbe mov push ds sarl fcompl sub mov bound test mov mov (bad) pusha jg andnps adc stos adc dec popf shrb lret cmpsb out or push shl adc and (bad) pushl inc xor mov popf xor xor xor xor fidivr mov bound (bad) xor inc lds xor ja sub cmp in adc pop xchg inc into jp cmp movsb cmp inc xchg mov cmpsb pop adc out push aam sub cli cmp push inc sub int bound fidivrl and jne dec cld popf mulb aas in repnz in mov sub sub jo pop xor xor mov dec jmp add pop mov stos add push ljmp mov inc test jne mov movsb mov js loope jle xor cli push stos hlt push jp push push insb xor fwait stos je es xor push add mov push push es jl lcall aam sarl shlb sub outsb rorb xor cwtl xor in movsb xchg inc push stos dec (bad) sti jne mov and (bad) fdivrs orl (bad) jle aaa pop xchg mov mov mov daa mov dec minps xchg cmp inc jmp stos aas call mov mov cmpsl cmp mov dec pop aas mov mov ret test mov and mov jp pop or bound faddl jg mov cmc xor jae subl xlat adc sub xchg mov js mov (bad) mov xor xor adc sar push lret imul cmp fwait cmp inc int lcall fiaddl (bad) xchg cmp cmp aam out adc and arpl xor les imul pop sarl sbb xor lds pop mov inc arpl arpl sbb push movsb negb cmp ja mov mov xchg push dec push mov imul adc inc adc dec pop push xchg xchg jecxz lahf xchg stc xor inc push rcrb mov stos sbb ss mov jmp cmp aaa push aaa jno jle test cmp stos cmp test cmp cli cmp cmp cs loop push pop sarb mov cmp mov jnp mov into cmp push fidivrl lds fisubr mov pop or js (bad) mov sbb aam push xchg ds ljmp out mov sub dec out xor (bad) jp push out not test xchg pop scas xchg dec xor lcall adc pop xor or es add xor or mov test scas add daa aaa sub test pop xchg cmp jle ljmp ds rcrb sarl loope mov (bad) xor mov xor stos das fsubrs adc ret lds jge sbb shrl inc call pop mov push xchg and test fidiv push dec or sub or dec (bad) jo js adcb adc test mov mov xchg nop (bad) mov sarb mov xchg shrl dec int3 loopne test push xor inc pop ja test pusha jle ret jne add push xchg or imul mov nop mov fildll sbb loopne imul jp or mov or test xchg test mov fnstsw imull mov adc mov js xchg hlt inc adc inc cmp outsb movsl push iret pop mov rorb adc (bad) sub dec xor cmp cmp cmp xlat push add ljmp lods add or iret push je mov add mov inc or cmp jne jmp inc xor imul sub adc pusha inc jne (bad) mov punpcklbw sbb pop loopne dec xor es test (bad) mov lock xor mov xor sti cmp push sbb adcl add int3 and inc pop xchg test inc pusha push sub mov pop and add mov mov jbe cmpsl xlat inc nop rorb dec push sbb or pop stos adc inc pop cmp mov outsb add pusha or mov les add (bad) inc sbb push push je xchg pop les xor loopne cmpl addb cmp in inc and sbb adc add dec rclb aaa push cmp cmp inc jo or add adc mov lock dec call cmp ret popf ret pop push pop pop cwtl pop fistp push lret adcb adcl cmp enter or rclb xorl pop dec loopne xchg add mov lods dec loopne sbb sub sub push ds ds fbld add sbb mov mov scas add enter fdivrs fsubl out sarb loopne call ds cmpsb les add add scas and xor stos add push push arpl sub outsl pusha add add pop addr16 movsb push iret sarl xor data16 pusha ret out and mov addb cwtl jo or repz cwtl xor inc inc adc imul push add dec aaa cmp adc pop dec jmp adc pop xor test cli out inc popa sbb addr16 inc test cmp out test add push adc pop movsb lods or out sbb or or add out fisttp lds insb (bad) je cmpb mov or movsb or test add repz roll add cld jo add stos xor imul cwtl jo (bad) repz or repz jo mov or lods stos lar divl add mov stos xor add and mov sub incb sti or shlb (bad) repz mov in ret addb mov add push jne mov out adc daa push popa test punpcklwd xor test adc movsb inc movhps push test push xchg lcall movl inc cmp lret mov test cld cmp cmp cmp mov mov cmp jmp fs popa adc fdivrs mov stos imul adc vandnps inc sti push outsl inc mov pusha mov xchg xor xor xor adc mov jmp or jmp pop pusha inc (bad) lret addl adcl stos lret pusha or push addb outsl add lret pop cmpl mov pusha inc xorl outsl push pusha adc imul jecxz lds xor movb pusha inc pop inc cmp push jbe addl mov push pop push shl lahf xorl xor aam jl addl inc addl sbb mov xor call mov ret mov call and add add jbe xor scas xor pop xchg ss out mov inc test jecxz cmc ss add adc mov mov out clc aaa std aaa push ret mov adc sarb (bad) loopne in ret cmp push adc add (bad) cs mov push jp push mov andb in adc inc push xor sahf aam cmp add dec xor fs xlat jmp push xchg mul fdivrl or cmp insb pop pushf cmp adc mov inc aad sbb sub sahf jle cmp xor shll xor xchg movb out movsb rcl dec jl aam les loope ds out ds ret pxor add dec mov cmp mov mov fmul mov and pop jnp xchg ds cmpsb hlt and ss es mov add and push rolb mov in inc adc out je push sbb movsb jp imul adc pushfw add pop push mov movsb push aam addr16 push xchg jns add int3 sbb rolb cmc ljmp mov (bad) js xchg sub sub ret xlat xlat scas add test push push push push jns (bad) mov in push xchg dec out stos sub popa addr16 std iret shrb ss ss aaa jge mov sbb mov or (bad) hlt imul pop (bad) hlt xor aad movsb lea and mov push aam (bad) sub add ja mov xlat add and mov pop hlt test repnz dec jle add mov fidivr rclb movsb stos lret test xchg lcall lods dec fsubl or push sbb xlat es mov faddl and mov decb dec into les hlt ret call jnp push lods and mov xor js xor in push pop or sub or rorl mov adc add popa push sbb mov add xor cmpsb push mov addr16 ds ljmp cmpl lcall add aam xor stos movsb cwtl scas iret xchg lods xchg aas loopne add adc xor outsb jecxz dec xchg fsubl repz sbb dec cli inc mov or sbb or inc push dec scas xorb mov cwtl jg add inc test inc jae mov pop inc inc inc and push inc and mov xor aaa xor je push sub fadds inc stos es push test cwtl addr16 popa inc dec pop scas dec sbb xchg stos mov jo lret xor xor dec cmp jmp xor and jmp cmp (bad) mov adc adc cmp add daa daa movsl or xchg and mov aam pop xor xor rolb xlat push dec dec push stos (bad) dec clc shrb jg mov mov push inc dec inc mov jo dec or icebp inc sub mov ret popl dec push ja sbb push cmp addr16 sbb mov icebp inc data16 cmp cmp (bad) or adc pushf cmp mov clc and cmp ds mov sub pop push or aas push rcrb jp xchg (bad) xor and and and cmc or xor push loop andps insl xor adc or adc and mov and cmp or loope movsb jb cmp push lea mov add inc adc push addr16 andb and lock pop sti mov mov sub add clc add (bad) das add outsb add (bad) or mov pop mov xor out or stos add sbb add push add stos lahf arpl lods stos aam inc push xchg pop cmpb cmc adc jb cmp iret pop aad outsb dec (bad) xchg stos sub jmp jp ljmp pop mov or ljmp mov xchg fistpll out xor add sbb push push xchg and push dec insb push add adc stc bound or cmp pop xor into mov fidivrl mov push pop push dec xchg imul xor clc mov icebp ss aaa mov push push (bad) lods xchg add sub cmp nop pop test mov or je les data16 adc stos fcmovnb iret lret scas scas mov lcall js mov or xlat rorl xor add scas xor scas scas sbb or cmc add scas add and xor pop popf clc nop jb push cmpb fwait rclb mov push jp xor test jne sbb fidivrl cmp inc rcrb pop xchg mov cmp daa inc loope adc dec int3 add jno mov sbb sar ja test sbb add lds pop or or scas cli ljmp adc fidiv (bad) aaa cmpsb aaa mov stc aaa sbb xor cs xor out sbb cmpsb shrl push or out cmp cmp orl pop clc mov mov movsb imul in ljmp pusha add out stc xor mov cmc xor xor push xor xor xor dec std sub aaa into jnp lcall lret jne inc incb mov pop cmp (bad) mov call xor xchg andb and inc sub inc xchg add sub jg jae cmpsb lahf mov ret mull sub xor xor xor xor ficom pushf push sbb je (bad) xor xor pop add out xor xchg into int sub rclb xor pusha push add orb add sbbb and pop movsb cmp clc add jge push cmp cs jl or mov pop add mov hlt sub test adc cmp pop xchg add add adc mov push (bad) aaa lea push xchg mov pop jb (bad) inc sub inc popl ja xlat adc aam pop mov inc ja and (bad) and push lea scas adc or ret repz popf rclb sbb jo push pop or stos mov cs cltd cmp sub mov mov test xor push xchg or mov hlt push and push mov int mov jmp dec incl inc pop mov xchg xor imul ss ljmp push roll or adc sahf xor pop sub mov xor (bad) mov aaa divb (bad) xor mov mov inc adc cmp cmp test repnz cmpsb jmp (bad) mov lret cmp inc or aas aad fistpll repnz test xor mov cmp jmp or bnd pop mov or outsb adc ljmp ds dec or lea (bad) sbb mov mov aaa lahf (bad) divl pushl cs push sbb aaa jmp cmp cmp jne (bad) jbe adc test mov or (bad) lret decb loopne cmp push mov icebp ja dec cmpsl lods ds ds mov add mov xor dec les ljmp mov jp stos cpuid pop inc add push sbb jmp xor xor xor xor push (bad) xor xor xor ds sbb popa cmp int fisttp jle mov bound sahf jbe ds imul bound bound aas inc aas xchg cmp add xor xor scas xor add and xor xor cli pop rolb stos push popf cmp xor loope inc push inc sahf lret ljmp xor xor xchg ss xchg getsec and (bad) call cmp test pop cld cmp cmp jne and jge mov mov rolb (bad) jecxz jbe xor xor xor sub out pop or and xor fidiv mov xor adc pop divb adc add mov ret mov and cmp sbb mov lcall mov mov fnstsw adc ds clc call xor scas pop xor mov push mov gs (bad) xchg sbb xor xor dec sub stos xor pop ss mov xchg ss out aaa (bad) cmp xchg ret pop out sbb aad repnz pop jbe cmp xchg ret jge mov imul dec xor xchg pop popf add (bad) ljmp lret pop pushf mov sahf lcall aam stc lcall add mov mov ss mov xchg mov (bad) aaa fidivl jmp sbb inc cmp add adc decb add cmp cmp cmp dec add cmp cmp and popa cmp (bad) cmp into inc or pop out sbb or test xor jg cmpl xor xor xor fidiv repnz decl sub or cmp sub xchg pop cmp out push xlat push or mov add jle sbb xor xor dec xor push cli dec xor cmp or cmp and xchg (bad) ja jg mov fstps js adc repnz lods add adc or or xor stc adc or inc adc pusha iret ret jge test dec inc pop lcall cwtl sbb (bad) mov popa les xchg jg or or sahf pop imul xchg adc xor xchg sbb cmp xor pushf xchg add push in pop bound (bad) sbb les add ljmp (bad) pushf push lea and inc adc pusha and mov cwtl fidiv and ljmp (bad) cmp and jmp data16 aas xchg mov ret add bound pop cs mov and stc stc fnop xor inc xor mov pop rorb mov xchg rorb stos dec sbb lea sbbb xor loopne jl sbb or ret add inc add (bad) lret pop sub dec iret lret mov sbb ret movsb mov lds inc mov les aam in or pop hlt or and xchg push test inc push pop out insb mov push xchg xchg add sahf (bad) cli int3 aas aam repz xchg hlt add mov dec mov adc pusha xchg imul outsb add cmp dec cmp cltd xchg jmp into inc add mov les mov cmp in cmp add adc sbb test add cmp xchg push cmp mov je cmp stos lods mov jno cmp in hlt xor or mov stos cmpsb sbb and jp cmp add arpl mov js xor cld cmp nop or push inc ds rorb popf rorb pop add popa and mov pushf insl loopne les inc add push xor pusha dec out xchg inc dec push cli call jo sbb js mov js test fadds andl add mov rol outsb mov (bad) dec lcall test fmuls adc dec pop lock mov mov mov or add xor add jl lods sub je dec fsubl or dec add cwtl jnp ss mov pop dec inc add push mov out xchg sbb cmpsl ss or cld push push sbb add fsub fwait dec fsubrs xor repz or adc adc adc xor jae pop sarb sub dec movsl xor loopne xor pushf lret enter adc cwtl push jo mov sub add and jg or inc xor add scas push or push push or test xchg (bad) adc xlat push or add add loopne (bad) pop mov ficom (bad) sbb iret push (bad) jmp and call cmp adc jmp sahf (bad) cs push xor clc mov sub pop add inc sbb jg inc mov rorl repnz outsb mov clc mov sub pop fimull push aam add mov pop fs or fadds xchg and push and add test lods jl arpl adc fisubl stos add popa or ret pop movl or in xchg icebp icebp jecxz and addr16 test adc or test jl scas dec inc jl lods xor add push push add ljmp test rolb mov shrb ds sub lret ds push sahf xchg sub test pop add mov test (bad) and addb adcb hlt cmpb sbb fcoml cmp (bad) fnstsw shlb push arpl loop ret sbb into cmp sahf nop aad arpl mov scas jno xor dec xchg test mov fsubs adc mov and mov arpl rorb bound das adc loop xor repnz mov movsb xor pop add movsb cmp dec xchg or icebp and sti mov jecxz sti lret jo sub and arpl in les mov (bad) sete sub (bad) lret pop bound hlt cmp push dec inc dec sub adc and ret xor stos push inc fmull sbb xor daa and loop jae test stos in mov push push cmp je and inc cld adc icebp sub inc push insb aas pop mov les mov jg dec dec ja or jae xlat fs ret cmpsl mov enter adcb sub scas pop add fisttpl or shrb pusha jb popa (bad) pop out xchg inc cmp and pop adc inc pslld push dec movsl inc daa fisubl inc push js sbb sbb push push jmp shlb lods inc or pop out mov imul out jecxz popf fisubl and mov sub xor loopne mov push adc xor call pop xor push test dec and inc loopne cmp pop loopne rolb and daa mov (bad) repz lea fcmovb je outsl cwtl rolb clc call push push mov add cmp jl jge fwait cmp ret sub lret or cld dec push pop aas gs jb mov mov add or add dec clc pushw xor data16 xor push cmp push js cmc cmp xchg or ss cld pop adc cmp faddp add xor xor mov mov cmpsb pop lcall or pop jb inc ret mov aad and pop push push xchg lods inc jg inc xchg lock ja leave cmp popf pop loop outsb (bad) mov mov cmp cmp cmp cmp cmp cmp fmull adc test push cld push cmp cmpsl or outsb push cltd aas scas mov and dec cmpsb inc mov sub outsb xchg sbb xor jp ret inc test xchg ficompl cs add int divl adc inc dec outsb (bad) out (bad) aaa (bad) loop cmp inc jo pop inc push or or stos cmp bound sub adc stos mov jmp cmp mov jmp push repnz aas popa aas push rolb mov and mov fdivp cmc adcl jno loop adc fnsave adc pusha inc loope xor (bad) mov scas inc shl or cmp rcrl ucomiss xchg ss jge (bad) aaa call sub cmp jne lock adc cmp jg cmp cmp aaa test mov ret aas inc sub cmpl sbb fnstsw xchg test push pop adc and jle (bad) mov xor mov lea sub adcl adc add cmp clc cli stos or and xor lea jbe repnz sub xor xor xor or sbb mov pop xor mov pushl outsb cmp cmp cmp cmp dec inc shrl cmp clc sbb sarb or adc push loope je push das xchg (bad) ds (bad) sub xchg outsb loop idivl mov insb ja push mov pop push int3 xor pop pop cltd adc mov mov fnstenv repz or sbb add scas mov scas dec xor jo sub lock adc mov test xchg jecxz dec outsb ds mov loop,pt test lock cs xchg ret iret (bad) jo xor aaa push mov lods xor and push loope lock xor cmp aam add cmp daa mov cmp mov jle push push push popa mov popa stos movsl cmp (bad) push sub lcall cli dec push push and push or fbstp pop sub mov sub add outsl push (bad) out bound aaa lret cmp cmp clc (bad) cmp cmp into push or rcll push cmp cmpsb lock pop cmp ds loopne mov or adc xor mov mov mov push xor push orl xchg jl adc push cli sub mov sub into xchg aaa in fs mov mov xchg pop dec fldl outsl cmp lcall sub xor rolb add outsb loopne imul xchg mov inc pop xor outsb xor xor test popf xor ljmp or jp inc dec inc mov pop fidiv inc jmp add andl andl iret cmp mov add sbb mov mov xor add fwait xor xor xchg inc mov clc push ss ret jp pop lock mov ja jecxz push cmp jbe cmp dec mov lahf sbb mov aas dec pop push (bad) cltd sbbl cmp xchg xor adc mov xor outsb xor xor xor xchg jl mov cli insl sub cmp inc add stos ljmp jle,pn sub adc jb cmp pop clc sub call mov or xchg (bad) xor loope push mov xor ljmp xor popf ss icebp lea ds jb cmp cmp cmp ficomp or test jbe loop pop mov bound in ds sbb xor (bad) ja add or fldl insl xor push sbb xor xor or jbe push lret cs ss or outsb repnz dec bound push dec stos xchg jo (bad) xchg mov or outsl into aaa push aaa sbb sub cs rcrb push mov fwait hlt add lds leave aaa int aad fnstenv push or rcrl lcall and mov add cmp push cmp mov pop pop gs sub dec (bad) cli cmp cmp (bad) (bad) stc cmp xchg (bad) std rolb cmp sbb inc mov and push sbb or cmp jl hlt adc push and fsubrl sarl adc push dec mov inc xor dec test push fist pop xor xor jae adc push and ss aaa push mov stos stos cmpsb jl push or mov mov ljmp cmpsb and dec dec mov push bound jns mov push mov xor push mov xor xchg mov adc jbe xor push ss ss add pop jmp push call cmp ja aaa loope mov xchg mov (bad) sahf xchg cmp mov stos cmp push adc cmp jno xchg or push mov ljmp cmpsb inc cmp jbe bound inc mov cli mov or and add inc pop movsl cmp (bad) cmp or sbb adc lock xor push hlt sbb jp sti lahf nop push imul sub xor cmp jbe push out mov xchg xor jp sub dec xchg mov imul mov pop inc mov mov lret pop cmp adc popf cmp mov mov xchg shlb das xor cmp jo add cmp or into (bad) (bad) repnz test movb mov or xchg mov out inc add adc and add and cli or xor inc ds ds ds loope inc mov aas xor dec aas push pop sub ljmp jecxz icebp xchg pop xchg pop mov test rcrl xor or sub mov push popa dec aas ret in sbb aaa mov sbb dec lahf mov sub popl adc jb mov adc sub cmp cmp jo test push pop xchg cmp lock mov (bad) cmp cmp cmp aas lods aas loop xchg inc or stos push subl mov push cmpsl rolb and sbb daa xor xor add aaa popa push jb stos scas push xor into (bad) adc push loope cmp push cmp fcmovb (bad) test pop clc jnp add add pop dec cwtl sbb jae push cs adc scas mov xor outsb inc fidivr dec push or mov cmp mov pop mov mov ds into adcl pop out mov cmp test add sub inc cmpl (bad) dec mov push loopne ss cmpl adc and mov mov push mov ss shll sarb push dec nop inc mov adc icebp pop ja pop testl cmp cmp mov stos push mov push scas adc jae fistpll add add aad fiaddl xor int inc clc and imul (bad) pop lods mov das sub loope add or (bad) cmp sbb or cmp lock test push scas dec int3 pop call outsb push xor xor pop xor out push add mov repnz ss cmpsl test in imul stos out cmpsb lahf loop cmp push pop loop jl jne cmp cmp cmp dec cwtl cmp inc iret mov adc sahf xchg fwait push mov inc stos loopne mov fcom xor or inc rol add xor cs jmp lock xor (bad) std push add mov (bad) or or cmp pop mov ss mov (bad) sub ss dec popa sbb mov jge sbb mov cli clc sbb and cmp scas sbb inc shlb mov pop push inc and (bad) je dec inc out cmp das jmp int3 dec rorb lea dec (bad) int jge fisttp push lret test sahf jmp push leave mov jno cmp ficoml cmp and dec inc repz add and add iret xor pop or cmp xchg scas sub test mov call push push mov test xchg lock push jbe mov xor stos cmpl mulb rcrb cmp cmp cmp xor imul xor (bad) jmp adc xchg add xor or or das jb xor stos or xchg cmp fdivrs or fisubl jae and orl dec daa dec jle ljmp xchg jl cs or addr16 or cmp xchg cmp xchg or push mov cmp xor aas (bad) pop sub in xor sbb clts inc pop ds mov xchg xor data16 push test test jnp add (bad) aaa out xor sub out inc adc inc stc aaa mov mov loop cmp dec xchg jo (bad) sub out pusha pop (bad) adc stos xor xor ss adc xor cmp mov sub cmpsb (bad) outsb cld adc iret cmp cmp cmp stos sub cld cmp cmp sbb cmp or lock jo test imul (bad) sub mov sbb (bad) push test push pop jle test mov push adc mov push jbe and inc cmp xchg pop test mov xchg repnz outsl sbb cmpsb dec or ljmp jecxz sbb sahf aas jmp ficom xor fcomps inc loope or fnstenv and and mov xor mov sbb cmpsl ss fisubr stos movsb mov and jae stos nop stos aam pop add push dec mov xor cmp test xchg push add jg movsl push test out es jae test pop rclb (bad) ret (bad) and ds loope mov mov xchg int inc das imul jg and rolb sbb and into cmp aaa mov cmp mov aad inc add push sbb inc mov movsl or rolb cmpsb sub xor adc sbb cmpsb out or ds cmp adc xor xor sbb lock xor jnp sbb out stos xor pop mov or add mov cmp ret xchg ror sbb cmp aam pop fisubl cmpb bound ja mov ds out xchg roll mov stos mov xor sahf ret push mov xor push mov pop call out loope lea jp fimul cmp dec loope sahf mov push mov push sbb sub aam push inc dec push scas dec jb test cmp jb mov fsubp ds sahf mov rclb add mov push (bad) xor cmpsl xor aaa add ss mov dec ss pop test pop fisubrl ja mov mov push or push xchg jbe pop loopne add pop cmp cmpl add mov pop es cmp pop jmp sarb fwait aas stc push rolb jp xor xor push test push in stos jo out orb push push pop ss inc sub xchg (bad) and push cmp stos out out push lea insb js fnstcw fidivr in xchg pop sub xlat or arpl jl adc push rolb daa mov adc push loop pop inc out add sub push mov test jmp lret mov jo cmp in xchg stos or stos add fistpll hlt cmp je mov fstpt addr16 jmp push aas cmpsl lock aam push lret inc dec cld xor or sub or movl (bad) fnsave xor cmp in clc add les iret push inc into cmp test inc sahf mov dec xor push dec ret xor mov sub cmp and xor inc sub push and jmp xchg inc dec cltd roll loopne push movsb pop push test test pop push xchg scas cmp jle idiv das xor cmp cmp cmp cmp jo sub dec or push mov mov cmp scas push (bad) cmp mov mov out stc xor and xchg loopne cmp ss sub add inc or jp test mov pop mov scas cmp xor jge je and mov sbb out cld xor inc xor add test popf add xor mov stos cmpsb push out xchg push push loop sub push xchg movsb lock mov jp inc test xor jg (bad) aaa (bad) aaa adc lcall sbb stos cmp fs inc imul push ljmp notl add push sub test int cli movsl lret push xor mov xor cmp push movntq cmpsb cmp lcall addl insl repnz aad jp mov cmp push adcl scas stos sahf pushf fidivrl jmp push fild adc aad cmc cmp cmp mov xchg adc ds sub dec xchg inc pop ja rolb sbb adc insl push stos mov xor test adc sub cmp cmpsb lock cmp es scas mov (bad) adc cmp aas mov pop sub ret sub add dec xor aaa outsb inc dec ret subl and sub pop test pop andb cmp or pop clc inc and cmp cmp mov sub push out xchg lcall bound jl cmp cmp out pop das cmp dec xchg ds orb xor aas jbe pop call ss adc mov insb sar lock xor push test xor mov pop xor xor push lret ret ja mov mov or mov inc pop movsl jmp cmp cmp cmp or add xor mov rcrb xor xor xor dec notb mov xor sub inc xor push jmp xor cwtl xor aaa mov xchg psubusw xor xor inc xor das and push sbb shll movsb cs jmp inc and dec xchg ljmp jle fidiv push fisubl pop repnz sub cli mov pop cmp cmp lret outsb out mov cs inc cmp aas arpl decl pop out outsb adc pop adc xchg imul push mov jns and mov ret lods inc lret aaa push jno xchg rclb out popf cmp jne mov mov cmp sahf (bad) push add ds inc cli dec cmp clc imul nop out dec cmp imul std jle xor sub pop add add aaa cmp idiv stos mov sarl push cmp push test sbb push pusha mov or mov mov push ss inc addl ret push push mov test mov ret xor add jp (bad) pop adc mov push mov mov inc cmp jmp nop jmp xchg cmp inc ds add out xor mov cmp push xor xor incb mov xor xor lret push add (bad) daa out lea fsubrs inc cmp test pop ja js aaa or cltd cmp add mov pushf out dec xor push stos add cmp mov mov js in cmp push xchg das adc push sub cmp insb les jns xor add mov or push stos ret jb sbb scas push push jne xorl pop dec faddl cmp (bad) inc xor enter sbb cmp cmpl cmp dec data16 outsl adc aad lcall mov and cmp jb adc xor xor xchg arpl clc add popf xor or shr sub aad jmp mov pop jb das cmp push and lret (bad) or inc mov mov mov bnd xor lods sbb push xor adc clc mov fbstp out sub testl pop sub ficom into pop push or adc es or jbe sahf (bad) cs push cmp mov mov fnstenv fs xor test xchg push mov stos sbb mov ss mov repz adc push mov xchg inc imul and cmp data16 jns out push stos or jbe mulb (bad) and xor or imul subl (bad) or test pop movsl divps sub aas aam or mov cs pop sub cmp push adc jp sub sub outsb pop fcmovu xor and inc adcl dec addr16 pusha xchg scas add add pop adc push (bad) lods add inc xor add jae aad jp xchg mov xor sub mov cmc xor adc xor xor xor ret add arpl ja mov jno xor xor es (bad) fistl in xor xor mov adc aas sub push stos jnp or mov or jb sub cmp aaa loopne sbb adc sbb and and jp sub jno dec dec inc push test mov add lock lret repz mov push cmpsb sbb and aaa dec aaa push adc imul push mov popf xchg das and aaa (bad) or repz sbb add loop cmp cmp call outsb test mov lcall fmulp push fiaddl mov divb sbb call push test mov xor aaa or mov mov aad lahf aam ljmp or sbb sbb mov fidivl mov sbbl stos add jns xchg xchg (bad) mov icebp aad das das ljmp lods and xor or dec or stos sbb bound xchg inc and sahf push mov or add les rcrl call push jmp call cmp sbb cmp cmp (bad) dec jbe xor push insl addr16 jns roll lahf (bad) and cmp cmp and fisubrl add cmp mov cmp mov or pop add das mov mov test add mov (bad) jg (bad) cmp push (bad) stos inc mov pop push fisubl fmull cli cmp lods and jp pop test or pop push push jbe and sub sahf sbb and mov aas push or mov xor xor jmp mov xchg xor cs add inc push and inc xor sub lcall push fdivs pop xchg mov ljmp push push xchg mov xchg xchg add loopne sub xchg sbb cmpsl cmp pop or sbb xchg out xchg ror ds mov pop aas mov movsb aas lods mov inc pop and cmpsb jo mov test jnp outsb or cmp xor and pop mov mov or inc outsl aaa jle sbb sbb add std jle test cmp (bad) cmp es push (bad) out push sub fcoml lahf jp push test mov into je in cmp sarb ret shll xchg mov ja mov push mov and (bad) sbbb mov call cmpsl loop test aaa add or pop jle push repz (bad) ror cmp add push adc xor lcall mov push mov pushw adc pop jne,pn mov or push xchg and and push mov cli test mov or pop aaa fwait dec (bad) push loop shr mov ficompl jp jl mov mov add xor sbb inc aad je push mov ret ja jecxz mov dec data16 mov pushw mov addb ja mov roll lcall stos pop insl xchg test inc call test (bad) mov cmp lock adc mov (bad) das jns (bad) add lock or push and test add dec mov mov loope test sbb mov sbb subb pushw push testb inc mov push clc adc shlb push mov sar push mov mov adc test stos mov aam orl sahf rcl fs adc xor jmp and inc orl inc vmovaps aas rcll je (bad) ja lea adc mov aam mov pop push mov cmpsl outsb cld test push and jne test push jb outsb fisttp adc sub dec lods cmp mov push push mov pop fsubrp push ds push adc push xchg cmp pop adc or xchg add push (bad) push mov cmpsb pop into data16 outsb jb,pt mov scas mov scas (bad) xchg jge stos nop dec inc sahf rorb push mov push push jne push sub push test dec xor aam test lods aas shrb xor inc mov xor sub xchg push (bad) cmp es xchg test adc scas ds jmp push stos je or lock sahf mov ret loopne push test cmp or adc scas mov and inc mov mov in icebp cmp shrb push jb xchg sub mov lods ds push das dec jne,pn push lods and dec cmp (bad) pop adc sub mov xor xor xor push cli jbe cmpsb sbb inc pop xor inc loop fidivrl test movsb fwait jb xor out test push pop outsb test adc test repnz lcall push xchg sbb jp jbe cmp or add mov cmp dec push mov mov jle sbb cli cmpl mov test mov fiadd or xor jo lahf xor (bad) push test jno fidiv xor mov mov fistp adc (bad) in sahf inc aaa push aaa mov (bad) mov cli fmuls cmp mov out push adc cmc pop rolb out jb cmp inc bound dec mov test cmpsb movsl cmp push or sbb pop xor scas or pop fisubr push dec push sahf addr16 in sbb or push fidivrl call mov aad out push sub or std inc adc pop xchg cmp cmp xor (bad) aam mov mov jne cmp or call push outsb xor or lods xchg mov cmc pop gs fistpl or and xor mov jnp or ss xchg jae rorl setp sub cmc dec push inc and mov out cmp nop rolb push mov mov ficoml test add mov cmp out cmpsb in xor push add ds scas xor call scas outsb or jno shl xchg cli push xor sub pop mov movsb add dec cmc les mov jb or sub add or push leave cmp pusha xor (bad) out dec add (bad) and mov cmp clc call cmp stos and or jp push push test jle aas imul push push adc test cs add (bad) xchg xor inc xchg xchg xchg test lcall pop lock icebp mov into sub xchg (bad) aaa mov dec inc adc push push mov aas xor add xor push loop mov and xor repnz daa mov (bad) aaa xchg mov sahf mov mov mov fisubrl push push lock aam push (bad) xor mov mov xor stos test or inc into xchg add sbb or or addr16 mov and jp test push add push or mov aad add pusha or cmpsb jl push push or mov lcall rolb adc xor and cs mov inc fwait xchg pop idiv aaa pop adc add inc ret mov out mov call mov jl xlat aas call xor mov test mov stos (bad) jo add inc pop push sub into call cld push push ficom ret cmpl cmp push add add mov jns,pt hlt sahf (bad) push dec sub test fwait js xchg pop idivb xor push jnp,pn mov mov out mov adc cs xor and push xor mov test (bad) imulb (bad) push (bad) xor addl sbb and pop add clc shlb xor push sbb mov sbb loop cs xchg mov cltd pop sahf (bad) cmp bound cs mov mov xchg sahf push cli leave cmp xor shrb jb xbegin inc imul aas (bad) nop and mov prefetch pop mov in and push sub dec inc mov adc inc or inc xor xchg mov cli stos cmpsb inc ss test sbb lcall mov pop dec fcoml aad xchg es cmp dec adc daa cmp push out add mov subl inc sub test push mov jle xor push pop aam add (bad) repz addr16 aaa bound sbbl push daa out adc and bound adc add add xchg push jp xchg loop mov and fisub push jo outsb push mov arpl jns adc arpl inc daa sbb sub jae mov outsl mov pushf dec in into dec adc aad scas inc push dec inc mov ds (bad) sub mov rclb fnstenv cs pop daa sarb cmpsl sub stos inc mov jno je xor scas jmp xor and aaa mov ret and push dec je je aaa stos xchg cmp repz xor push cmp cmp pop sarl ret sub lcall es call xchg cmp shrb bound je inc mov mov add pop mov mov aaa rolb mov adcl mov pop mov push stos xor mov mov mov add push incb cs aaa popa shl cmp cmp push lret ret cmp (bad) push dec bound sbb stos push rcll std xor adc xchg jg stos sbb adc out xlat push lock sub hlt (bad) loopne int3 or pop xor xor mov dec mov mov bound add jp xor dec and fidivr push jbe xlat stos data16 push push or and rol push scas pop aad in cs stos push lds int3 push sbb cs adc stos inc mov mov sarl rorb cmpsl push daa mov and xchg jbe jecxz sub jecxz out push xorl push es sbb or insb and (bad) mov or or mov or out out or shrb int cli outsl dec cmpsb xor xor xchg push loopne imul xor cmp adc xor insb dec (bad) push push data16 sahf sti cmp lds xchg cmp cs mov or pop lea xor jne,pt adc data16 xor data16 xchg pop dec and mov ss mov test scas dec inc insl out add or push cmpsb push cmp jno adc stos dec rclb popf movb cmp lods inc adc into fs sbb push sbb push sarb add xor push bswap aas dec xchg or scas ds lods push push cltd add mov push sub (bad) cmp xor cmpsl mov jne push (bad) adc inc xchg out mov adc mov out pop rolb sub xchg adc mov push pop xchg push movsl pop je inc das (bad) cmp es mov xor cmp mov add icebp push or jg scas cmp fcmovnu inc pop sub dec push ds adc out inc sti adc aas jle or (bad) shrl push add xor xchg xor mov push xor pop test xor xor xor xchg xor mov ljmp out arpl decb sbb xor aad outsb jle mov ss sbb rorb icebp test test stos shlb inc jb ljmp xor xchg daa sbb ds es outsb xlat call mov or stos mov mov mov int or push stos add or or xor xor sub xchg lods and mov push xchg loop pop add subb ljmp cmp call xchg sbb adc ss loop cmp mov aas int3 incl scas push xor (bad) out fdiv std xor push inc xor inc int3 mov clc xchg xor add inc loope xchg add ds jae orb ljmp outsb jl pop mov xchg push mov out dec push cmpsb xchg shr sahf imul xchg repnz push les xor lods testb test jb pusha inc ret sarb pop outsl ljmp cmp mov adc xor push inc cmp sbb les xor (bad) xor add cmc mov loop sbb inc js cmp adc sub jae data16 (bad) movsb lcall rorl jecxz push dec sahf (bad) adc fldl and outsb mov rorb aas mov cmp push stos (bad) es loopne push sub mov push push (bad) lret (bad) or push push xchg (bad) push add push mov push fisubr xor add je xor ljmp jb shrb mov mov popf mov pop (bad) rolb call sub adc mov andl shrl mov pusha adc mov loope cmp adc cmp mov sbb loope inc in js xchg jbe aas lea pop stos repnz jo cmp xor add push test jb aam and push movsl mov mov inc inc and ret xchg jo ss aaa xchg push and mov cmp lea bound cmp jb outsb imul sbb and mov outsl ss push test lcall sub jl jb ja cmpsl aas les mov out aam xchg or push rolb pop negb push jecxz and aas sahf fwait xor xor xchg call push (bad) jecxz add mov leave pop or push mov repz push xor aaa adc ss add xlat popw sbb orb inc idivb shrb es outsb push loope es push shll or and or xor push arpl stos fistpl in call ds sub mov push sbb mov daa and xor dec pop xor add fimul and repnz and mov jp (bad) mov addr16 or cmp push or xchg push movsb cmpsb xchg pop xor adc loopne mov sahf adc enter dec cmp xchg pusha lea adc test add into mov or pop mov pop lds add aaa jg jne or sbb xor scas scas (bad) xor pop xor aaa xor inc and ljmp push push inc aaa push pop add push subl lcall push sbb adcl rorl rcll mov jbe nop push push or sbb mov cltd sub mov test adc sub inc adcl ret in rcrb add test adc fisub xchg mov mov push dec dec push cmp jl inc (bad) (bad) jmp sbb ljmp add rcrl pop sub inc sub cmp push and (bad) push lcall pusha and adc jbe adc jns pop jno mov loop inc push mov xor data16 lods roll (bad) mov cmp push cmp mov aam pop repz adcb xor xor out fwait cmp shll adc cs mov sub xor pop hlt dec pusha adc jge cs dec dec push rclb mov sbb test lcall fdivrs mov push adc mov add xor and xchg inc test or ss outsb push shlb mov ss shll add xor inc clc xchg pop aaa addr16 or adc inc adc cmp add add adc cmp outsb xchg add out (bad) icebp adc mov (bad) fsubl sbb inc cmp pop movsb sahf repnz push or aaa ljmp mov push stos push fsts sub sahf sbb xchg test sub (bad) push xor divl roll std adc and lea iret inc mov aam pop mov xor xor and stc mov or imul shrb push das add inc pop mov cmp je xchg xor add loop xchg push inc pop addr16 ljmp lock cld push adc test or sub xchg sub bound lods push and mov inc repz ljmp cmp nop popa jl jne iret cmp jl mov xor jmp jo ljmp xlat cs lahf adc dec xchg mov mov cmpl push outsb (bad) stos cmpb loope jmp cmpsb fsubrs sarb and add xchg mov out and cmp test cmp stos jo xor ffreep xor ljmp das mov xor push fisubrl jo movhps scas (bad) add outsl xor lods add sub push and fistl loop,pn mov xchg inc adc adc ret lcall jnp adcl push xor inc (bad) sbb pop xor outsl mov je ss mov sub out inc dec imul dec out adc sbb push mov shlb stos lcall sub xchg inc stos outsl sub mov xor mov cli call divb stos rol pop cli mov scas std pop imul mov (bad) jle adcl adc outsb jns loopne add mov add xor mov pop cmp inc pslld inc sbb cli sarl mov data16 inc je loop and fsubl lret (bad) (bad) (bad) xor loop fmull lcall cs and mov aaa rorl loopne and sbb push and cs movsl jp mov aaa jnp jo lcall jbe cmp orl test inc repnz das push aaa adc sub sub (bad) cwtl push test popf cs sbb add out scas scas xor or es lcall ljmp addr16 movsl fisubl mov jge cmpsl clc cli inc push scas jmp cmp push loopne (bad) and xchg rcrb push scas sbb adc scas push cmp (bad) adc jo ljmp jle,pt push loop cmp adc pop inc cwtl into fcmovne xor add inc or xor (bad) xchg stos shrb push jecxz cli stos lods lea inc jl push mov lret (bad) clc push mov cmp xchg pop push lcall xor (bad) sub ret adc stos aam scas dec pushf dec push cmp dec inc add jae push and mov mov test mov outsb sub mov sub mov mov pop shrb daa or sub sub xor xchg xor jo mov sti xor or (bad) xchg xchg push sub adc in or cltd test pop inc out cmp cmp stc sbb cmpsb or dec inc sbb stos into nop dec fdiv fs dec data16 and outsl cmp mul xor (bad) pop cli loopne mov push ds jge cmc cmp push or (bad) jle mov sbb add mov xor push or mov and mov leave xor orl call xor push add in ljmp xor in bound sbb push push idiv aaa dec icebp pop inc and pop cmp push movsl stos movsb sub outsb jae jnp dec stos add std pop push ds shll mov incl mov mov aaa mov xchg mov into mov and ret movsb dec loop cmpsb aad push jno daa jmp inc aaa jle and scas mov ret push cmp pop push sub push sbb jo sahf and mov stos cmp cmpsb ret push addl xor xor dec push nop inc jae popa xchg (bad) push xor pop std test repz and xor xor fwait rolb enter (bad) cmp scas call pop cmp cmp imul cmp dec sbbl xchg aas fnstsw inc or mov fwait into add inc ja sbbb or jbe aaa test rolb les push push mov add shrl cmp xor stc cmp add mov inc push xor xchg sbb pusha push inc or jb xchg xchg or ljmp jbe push add pop ret (bad) xor inc into mov dec imul xchg stos inc ljmp sub xor and adc shlb repnz mov cmp popf inc lock adc mov cli pop or sahf pop andb inc push repnz ror add dec sub xor mov (bad) arpl jecxz dec xor (bad) adc subb loop sbb ss add push xor or mov push movsb fldenv ss mov mov imul aas dec push jae out inc aas inc ret inc rcrb add xor fmull fistpll add inc mov mov ja bound xor lcall inc int addr16 movsb push cmc or push adc dec jbe ds loop vpsubd cmpsl add adc or into mov adc ret adc sub (bad) repnz aaa jb xchg mov sub inc jp mov push push loope addr16 add push pop cmp xchg ret imul dec jle test fisubl mov dec adc xchg aam je sbb je xor inc xor aas xor inc push (bad) xor lcall call cmp loop aaa sbb mov xorl ret sub xor adc jno ds push jp inc fildll aaa ret mov cld xor xchg mov push mov outsl jle ss ss aaa inc push xchg stos stos xor test (bad) pop loop add push lcall sarb fimull mov push mov call push out test sub dec (bad) xchg ljmp jns adc hlt push mov xchg xor rcrb ret push imulb xor and xor push and mov push test xor or movsb sub jp add scas cltd ss inc mov je add mov jle xchg mov mov sahf data16 dec addl mov or ja (bad) fidivrl rolb push scas xchg mov ljmp scas pop mov mov (bad) int3 sub add push outsb scas rclb lds cmp push mov (bad) mov loopne lcall gs lods xor mulb adc push out lcall push jg shrb add mov push mov test pop ja fidiv inc push stos sbb inc jp xor hlt inc repz ss xorb xchg inc aaa sub sbb xor dec mov repnz adc aad inc ficoml or pushf cli or addr16 or test add cmp xor andb lcall inc xor add adc add dec leave into xor inc mov adcb mov dec scas sbb mulb fdivp ds loopne cmp mov jo mov fstpt adc inc jbe push mov or xor movsl ljmp add mov lea push mov enter lods cmpsl add add sbb roll ss inc mov cmpl inc or sub pop push and push add es xchg ret mov xchg xchg mov dec iret xor mov mov data16 mov push or bound mov sub mov sub test push mov mov cmp sbb lcall incb mov out jno bound push jp out popf aam mov mov bound (bad) xor (bad) in test adc lea push bound sbb push inc add inc push mov pop lock or adc inc pop push jle jle mov shr (bad) sarl mov or xchg jb sbb lods lcall inc dec inc sahf jns dec xchg push adcl cmp scas inc lcall sub mov lcall push into xor jo mov rorb fiaddl jae hlt sbb das mov or movb sbb xchg add pop inc push adc cmp insb adc jl test lds daa repnz or loop test test add (bad) imul pushf lret fmull push xchg ret or xor xor imul xchg repnz leave xchg icebp lahf mov sub xchg mov out mov fnsave xor cmp cmpsl jo mov mov jmp sub push mov lods out mov and inc add mov pop sub (bad) clc xchg mov movsl stos lea sub mov push fsubrp inc add or das (bad) lods (bad) mov cmp cmp mov scas cwtl mov cmp push test push fimul dec push jno adcb push mov enter adc lea shl andb push test cwtl addr16 mov stos or sub inc pop mov call adc push cmp push jne jne test rol push xchg cmpsl and inc cmp jo cltd and xor test and fwait or add mov cwtl lds aam cli clc adc test xor out ss push (bad) or lds pushf push mov flds adc inc aas pop xor dec pop xorl faddl cmc ljmp fstpl xor in sbb fstl sub je,pt fildll in or or ss repnz push jge jne mov int add add xchg add pop mov popf fnop cmp je add inc stos pop sub inc bnd mov mov mov movsb mov inc clc push xor cmp stos mov or into jg idivb cmp jl stos das hlt addl andb sbb jmp ds ljmp mov js repnz (bad) pop add adc dec aas mov sbb mov pop lds clc lds pop mov (bad) insl push movsl xor repz lock xor stos mov xor xchg xlat ffreep adc mov ret test mov sbb push dec int adc mov xchg mov test fimul push inc call je mov mov je xchg es xor insl es int les jne les hlt test ds mov clc xchg das adc cmp insl cmp scas mov ficomp xchg sbb sbb lahf push mov outsb fnstcw add jb jae inc push out test mov shrb push xor xor push pop sbb sahf push xor mov push and rcrb or jle out dec xor cld and xor aad lods xchg pop imul and daa sub inc pop cmp dec jne fstl jge cwtl and (bad) ja xor push dec out xorb rcrl mov fs or inc (bad) imul movsb ss or sbb lock lahf mov aam push inc ljmp push mov icebp jp jo aam jb cmp jne fisttp call dec ss popf call mov push sbb nop pop mov stos int add push aas into push daa cmp lds std push jne or inc inc js nop mov clc jp ds sub or repz push test mov lea int rol push data16 cwtl (bad) cmp push pop jl inc das (bad) in xchg xor scas mov push adc sbb sub and loop xor pop push adc sbb je xor pop push cmp popa sbb cmpsb pop mov imul out dec and ljmp sbb lea (bad) pop dec movsb pop push add sub sub lock mov pop fistpll sbb push orl (bad) in aad jg add and pshufw cli lds add push inc cmp cmp dec jge mov sarb in push loopne push xor jne clc and add xchg pop inc add (bad) cmp addl test enter push es test js int (bad) shll call sub adc popa mov movsb mov and adc insb add inc loopne in (bad) loopne add dec repnz pop inc les add cmp scas push sbb push push and xor out cmp push mov jl xor les cmpsl ss es outsb hlt mov popa mov test mov movsb inc scas cmpsl mov inc inc mov mov call inc push pop mov popf sub sarb out in jo pusha push fisub mov orb mov add dec push xchg xor test mov adc cmp mov mov test cmp sub push inc je je gs out add rolb sahf flds adc ret dec pop roll es push or add sub outsb aam icebp cmp mov adc jno mov or aas adc stos or call pop mov mov aas fstpl add sbb loopne stos push jge mov loop pop das call ljmp dec (bad) xchg and and rdmsr and inc scas stos (bad) inc push js nop xor (bad) repz sub gs push aad mov loop xchg scas (bad) insl jle sub mov outsb aad mov fisub or data16 repz (bad) cld negb and xor jl jne aaa insb notb fmull sub cmp jno test cmpsb loope pop sub loop jns ljmp mov subl add cmp je in adc xor inc out inc mov push aam push cmp push pop out dec mov and cmp cmp pop inc push mov dec mov clc lret push push mov push jae pop or loopne xchg rcl rorb int andb push rcll aas pop les or (bad) cmove xorb or xor sub sub stos mov ljmp leave mov push icebp mov cmp mov pushf add mov mov jno je,pn mov add add push inc xchg loop sarb test mov mov adc cmp pop daa mov mov ss ret sbb insb dec dec (bad) (bad) jnp adc flds sbb push xor subb jmp jno repnz adc outsb sbb mov mov xchg cltd xchg mov aam bound (bad) popf scas (bad) inc test loopne mov shll push jecxz pop add push test (bad) add cs cmp inc lds rclb inc adc (bad) sbb into jae test push mov loopne loopne add loop adc imul inc hlt into or pop call xor addl test es ds or adc shrl pop faddl lds dec test or imul xor loop insb stos mov sbb mov int push ss adc mov mov movb and fisubrl lods (bad) les add es cmp call sarl fisub xchg pop sbb mov add dec movsb cmp or es je daa jmp sbb xchg push pop pop mov push push inc push pop sbb push pop out jge mov in test cmp lods (bad) fdivrp ret and ljmp xor (bad) ret lock jle pop lock or pusha lcall cli xchg pop push bound inc add scas insl repz mov adc fstps das je sbb xor xor xor add dec inc daa je out xorb out add cmp adcb dec lret dec push or nop lods cmp (bad) lcall mov push xor xor mov push push icebp hlt pusha pop add mov out fadds sub fucomip (bad) outsb jle pop ffreep add lea dec sub xor mov push lcall sahf add decb out push enter add push repnz call (bad) pop cmp xchg pop mov jbe outsb add adc imul stos ficom pushf rcl or inc add ret (bad) push sub push movsb or aas fnstcw xchg push inc sub ja scas loope hlt add sub ds push xchg and push icebp xor shlb gs aam sbb cs in xor sub sbb pop push pop mov push int inc mov hlt or cld add xor xor sbb movsl repnz mov cmp das je fsubl jg ss (bad) (bad) aaa adcb iret rclb test pop ret sub jg pop mov and dec rclb dec imul inc jne ret or je mov fistl mov xchg pinsrw andl push cmp push stos push ficompl mov cmc adc mov stc push or dec cmp icebp adc (bad) mov in ds stos sbb push inc mov mov mov or mov or test bound xor push cmp jge addr16 popf push call xchg jge ds push addr16 nop mov faddl sub movsb cltd inc add push stos push aas inc dec pusha xchg xor adc fcompl ss cmp cld lods stos xchg ss mov clc dec or push ret es cld roll lret adcl or sbb pop into in xchg xchg mov loopne mov movsb jecxz aas sbb push mov inc fisub pop lahf xchg or mov add aam mov cmp int dec bound mov aam ret ljmp pop repnz xor xorl cmp jo pusha in (bad) mov mov cli jnp xchg dec add outsl data16 add pop mov ss test loopne push add push push bound xor lret inc mov rol (bad) xor nop repz push and dec jmp add nop xor clc (bad) push add mov cs inc or pushf (bad) mov sub lds out aam in addb addb data16 dec jo lods pop jl lock ret pop push stos dec iret push jecxz stos fs xor pop loope enter ss je push dec ss sbbb mov imul or push mov ret jnp fisttp push fisubl js sbb js nop cmc stos aaa cmp fadds je mov lock or test sbb and dec push addr16 push ss nop (bad) mov sbb cmp inc xchg add popl push outsl mov pop (bad) jo mov xchg mov push add cmp call push adc and pop lahf jo subb loop add xor fsubrs lock inc (bad) add add mov xor push xchg mov add mov push mov fdivrl in hlt xor loop sbb (bad) dec test add loop sbb cld push aam out out cmp outsb outsb adc cmp mov inc aas ss cmp add lods add test dec add ret shlb cwtl ds mov jno pushl or rclb sbb insl sbb cmp add cwtl mov rorb stc cmpsl sub dec xor pop fisubrl call rolb rcr mov mov enter loopne fwait sbb aaa clc lret or dec out stos insl xor aam or sbb xor (bad) and adc je sbb push aam rorb dec (bad) in outsb add dec xor xor inc cs mov lock mov cmp mov cmp js or aam movsb stos ss adc sbb mov xor xchg orl add xor rcrb (bad) (bad) dec imul push jecxz ds daa je add sub sbb test jp pusha movsl mov test cmp or sub cmp mov pushf mov mov push jne cli adc cmpsb fdivs sbb pop jmp inc add sbb scas mov shlb add (bad) add jp dec and dec stos subb add push or xchg push jecxz push adc dec push xor cmp cmp pusha inc push add push ds rolb dec pop add pop insb push out je enter loopne push and xor nopl sbb stos xchg xor inc clc jb stos jns mov aam in ror push sti sub jle out insb aaa nop jp,pn pusha rol das call push and outsb popa sub push mov (bad) inc orl push orl lods enter sbb sbb push jge das enter sub add sbb sub je lsl das mov dec xlat push inc aaa jo inc lea sub push loopne sub pop dec das test and sti fcoml and or mov nop outsl mov aam inc lods ror xor dec xchg sub (bad) pop sub lods cmc add cmpsb sti xor loopne,pt add mov rcl loopne andb cmp cmp dec xor sub push cmp inc xor or das lcall xchg xchg cmp sub faddp xchg jnp adc test adc arpl push xchg lahf inc xor mov insb jecxz rorb ja dec in outsl fisttpl mov test sub insb mov cs cmp jae inc sub mov xchg mov sub mov mov xchg hlt push fwait iret push push push fldt sbb push pop rcll mov cs mov shlb fcmovnu (bad) pop sub js stos sbb mov push jge or or out mov pop andb push out adc call stos es add and push push xor pop push adc mov out dec mov add or je cs mov repz addr16 push add movsb push push and jp mov inc sbb xchg mov loopne call jb xor mov sbbl (bad) xor and cmp mov push mov lods pop adc mov cs sbb test inc por (bad) mov int3 dec mov inc xchg jns out mov inc push rcrb inc stos and subl test sbb fwait add push push inc pop xchg (bad) es ret inc pop rclb push push add scas and xor add mov dec outsb subb (bad) mul cmpsl push mov mov xor lcall jb xchg dec or pushf scas cmp and push sub adc lods hlt sub ss mov push or cli sbb inc cmpsl cwtl cli lock jle shrb and out xchg xchg xchg xchg in and lea test inc and fnop xchg es sti adc and ljmp adc sbb inc cmp mov hlt cmp aas sub cld lods lret push lock mov mov fcomi inc test mov inc xlat ret adc cli add (bad) (bad) shufps push enter inc add xchg push outsl test ret test daa (bad) ud2 loopne cmp fs cmpsl mov (bad) xchg dec call add mov push sub js call jne add pop pop jge pop cli xchg rorb and pop cmp lods out xor cmp insb sub pop sahf mov sub sbb shrb sub xor push outsb test add adc sub push test fdivl clc ss mov push adc sub jo xchg stos movsb or fiadd jo imul loopne lock fs mov (bad) mov (bad) sbb test lea stos sub out push mov xor pushf mov loopne mov clc push (bad) (bad) push mov hlt adc and xor popa and add addb jp dec pushf or jmp sub cwtl fsubrs pop loop sbb test inc mov ret or je sub lods mov stos loope (bad) jo push adc dec xchg mov jl jecxz orl dec cli lods je or (bad) hlt (bad) cmp mov cmp repnz insb inc pop test ds and adc js cmp test pop scas ret mov cld hlt push dec inc hlt pop xor sbb dec out loopne or shrl mov or jo mov fimul cmpsb pushf add ljmp cmpsl add jmp fisub (bad) jle enter mov mov std xchg mov stc repnz xchg xsavec xchg mov mov xchg xchg in test cld sbbb add cmp add inc mov lahf mov add cmp xchg push adc or inc xor mov xor and dec pusha pop jo les (bad) mov ss lcall sbb mov cwtl in add jb xor add sub dec outsl xor lahf dec mov xchg js pop push sbb test call sbb push pop mov testb pop or inc dec je push add xor push push (bad) mov les add xor sbb cmpsb mov (bad) sbb sbb aam push call mov push push sbb lods inc xor jmp jg dec cmp jge and leave add pop sbb push js push call int3 (bad) stc jno push xor in adc mov repz loopne stc sbb movsb jae test cltd sub add in lods decb push incb inc jne movb pop pop outsl ror mov sahf mov xchg xor test cmp fnstsw out and jl mov add sti bnd nop xchg add add or loopne sub sbb ljmp lods daa adcl call lret in sbb xchg mov xchg push in enter or and xchg cli movntps push ret and movsb ret jp leave or cmpsb adc lret rolb mov call insl mov xor push sub add adc xchg call or or sar push sub aas nop rclb pop or dec dec mov outsb or imul loopne mov negl jmp sub add add inc push test cmp push repz adc inc sub or sub adc push adc inc push inc rcl popf dec jns inc test cmpsb push pop pop rclb mov or adc aad aaa jg in lret mov pop and ret adc sub jb (bad) sbb push push ss mov push inc idivb hlt hlt pop cmp jae movsl dec add cwtl nop dec and out movsb lret lret dec pop mov gs lock sbb sbb mov fcoms inc mov mov in loop pop or mov aad ja and push out outsb or mov mov and xor mov push cwtl adc sbb adc xor xor pusha or sbb cmpsl adc xor sbb data16 xchg add movsb std pop in fmull and adc jne sbb inc push push mov int3 adc mov sbb je ss adc and fistpl push cmp inc shrl add sarl xor push mov call popf add int3 les xchg push cmp adc out adc push sub xchg movsb mov inc xor fwait jo add push add dec daa mov dec or pop dec xchg outsb lock call jbe loop (bad) (bad) sti into divps iret ffreep and mov dec out pop pop inc or lcall mov mov mov push sbb pop stos inc (bad) add sbb pusha xorl jb xor mov mov aaa lret adc mov das mov or pop and nop add cmpsb and push mov (bad) outsb ja adc ret mov cmp xor adc mov outsl push das orb fsubrl cmp push insb jo mov js add and sar adc pop jno out dec ret mov ljmp rcrb call sbb jae out mov adc in push and iret int mov inc sub sbb mov sbb xchg and fwait das movsb xor push cmpl lret pop imul inc mov inc movsb xor lods cmp sub stc and adc add or std mov fsubrp sbb push pop jecxz xor test lret movsb mov inc mov fwait ret xchg lea or sbb imul dec gs push sub dec add add push inc test xor pusha push push mov leave adc jae mull dec add (bad) adc lret and push sahf jge or in jbe pop dec inc loope popa sahf ja popf out scas mov (bad) inc and call sub add es popf sbb je mov insb xor pop data16 fnstcw add xchg daa push movd add sarb cld sbb repz pop adc in incl or mov sbb dec adc in push daa imul xchg add out sbb aas sbb cmpl jb sbb icebp lea adc jbe pop mov mov aad call insl add jo and cmp jp push inc incl rorl test jnp jno test sbb pop inc and test mov mov ret sub or mov popf sahf std push adc shr das and bound xor dec xchg lret repz xor and fwait sub test cmpsb (bad) (bad) jmp or add shrl sbb or stos ds adc xchg in push loopne xchg mov clc cmp jb repz (bad) iret cli fist sbb orl xchg call xchg inc sub add repz push jb or movsl or cmp aad repz dec in mov jecxz jmp ljmp cmp add jno sti call dec fcomip xchg push test div mov xchg inc pop pushf in shrl in jp stos push mov clc add pop and and push repz cmp inc xchg ret sub adc jge and call jge xor jg add and call xor icebp imul adc nop ret les push or fiaddl adcb outsb add xor testb jne sbb cmp add shrl add lcall lcall mov inc fnop mov sbb out xchg outsl (bad) or add loop cmp (bad) jl add js sbb mov push pop push sbb mov fisubl cltd fs cmp inc mov dec test cmpsl rcrb out push sub in les mov ret cmp mov roll adc xchg movsb jno cltd sti push int3 sbb outsb mov cmp (bad) add xchg jns mull lods sub mov inc push adc adc pushf mov ret mov shll in repnz mov adc push fmulp jge fistl mov push stos je jecxz adc loope adcl data16 sub adc pop push cmc and adc (bad) or fadds insl call and mov dec jmp das push mov sub xor loop sbb jmp nop out rcrb test (bad) dec sub mov imul add sub mov push cmp push xchg scas leave (bad) sbb cld xchg add lret mov jbe lea mov jmp fs xor push jecxz outsb sbb push adc aam adcl imul jmp rorb mov push and xor mov outsb mov mov add (bad) loopne or cmp cmp add push push repz add aam rcrl lret mov fadds jg xchg jnp add int3 sub je and into out cmp jnp adc cmp movb jne cmp ret push outsl hlt je xor gs push fsubr outsl loopne adc push xor inc or cltd mov jbe jbe (bad) je mov sbb insl mov (bad) sbb nop cmp adc outsb xor mov rclb pop scas das jle (bad) jbe in xchg jbe add (bad) cmp sub cmpb in dec xor out cmp rolb sub lods cmp xor adc mov push pop xchg inc push add push sub popa gs aaa xor repnz or out add jae pop add in lahf iret inc fdivl hlt cmc out loope add and out dec cmpl cld out mov loop nop dec sahf repz outsb inc adc cwtl repnz aas inc ljmp in sub rcll fst add enter cmp nop sbb push mov sbb inc add stos out in mov iret in xchg add and cmp out inc (bad) pop out xor loopne add xchg mov xchg and pushf neg ret xchg fistl mov xchg mov dec dec jb sbb sub xor push int3 pop sub sub xchg pop clc pop cltd mov icebp sub push cmp jo lods mov mov inc push mov push push lock push mov inc add cmp (bad) out pop cmpsb in mov push sub dec cmp jmp inc test inc adc mov sbb or push mov call iret xchg push mov leave test sahf or add dec cwtl (bad) push add pop leave cmp xor inc push int dec test or ret jmp data16 (bad) hlt data16 hlt add adc jns insl push lods or (bad) loop mov mov cmp dec sahf nop dec in add enter sti jp jg nop pop repnz out xor push jmp add inc std mov dec je sbb in hlt aam pusha pop iret lods push sub lret mov mov mov xor jl xchg mov jge jb add ds fmuls jo sbb psraw scas jmp push aam push movsl in popf nop add sub add add pop cmpsl fcoml rclb out shr popa and push in and inc xor add lock loop mov pop xchg sarb and data16 sahf lods ret cwtl loopne add ret push push xchg add add out and add cmc cmpsl sarb cmpb dec mov sub in or cmp and pop push add lods cmp sahf mov out mov pop call pusha xor call loopne push push mov jmp cmp out (bad) mov enter loopne jmp or inc jo or add insb mov in push in nop push cld add jmp call add or and inc clc mov pop out or adcl or scas inc inc or pop pop clc int3 out push aas out cld lock and shr mov test sub shrb pop xor or imull xchg dec movsl jp push push mov ss add cwtl xor mov add popl cmpsb (bad) in loope or (bad) clc test add mov cli jmp add adc xchg push sub (bad) movsl into flds sub (bad) rorb aas dec push jl push decb add and mov imul dec call pusha sub popf and add es xor mov mov or jmp pushl call faddl movsl push jle add jle xor pop insl in and cmp xor shlb inc (bad) int3 mov push (bad) addr16 call cmp mov aaa sbb out fs inc jl mov dec (bad) jne sub jae push outsb cmp popf addl push xor or push jmp xor pusha push inc jl dec leave push sti cmpsb stos add mov mov jp (bad) inc stos add rcll je ljmp and adc fldl pushf inc or cmp sbb jl rorl sbb cwtl xor adc xor pop push mov xchg divl div fidivrl pusha mov jl mov xchg sbb lods je mov out es addr16 dec mov out inc lods xor mov jb xchg pop dec lods cmp sub mov add das test (bad) das loop add hlt movsl mov and sub cmp xchg mov add sub mov push test cmp cmp jmp mov out pop dec mov jmp jle dec into jne and dec movsl lock lret lock sub addr16 dec cmc fidivrl or dec cmpxchg jl mov mov in idivl int3 or lcall xchg inc lea jns pop cmp subb mov and sub add xor jbe shrb xchg out xor int (bad) lds and sub jns rorl xchg sub in jns iret lret cmpsb xor out push adc dec in repnz iret out or dec inc or jg cmp and push mov call loopne jns icebp cs sarb addr16 call sbb add pop (bad) lret jbe push out add inc inc call xorl (bad) into xchg aas pop cs adc jne inc inc test inc push call add and into (bad) shrb mov xor sbb enter or sub add mov pop scas add sub fisttp and add out adcl in adc sub add pusha and inc lret jo mov outsl jg je loopne sbb sub sub dec insb adc inc and mov setl (bad) decl out jl cmp xchg sub ret dec mov dec int cmp dec nop lgs sub addr16 add xchg cwtl adc (bad) test insb mov mov xchg call xchg movb sub (bad) and outsl and cmp mov aas into ret mov outsl add or cmp xchg rol jne jp (bad) dec mov incl cmp or push ret test sbb jns sbb enter mulb ret pushl rorl je push or movlps sub sbb mov jl bound scas rorl cmp popa faddl fwait jo in sub sbb insl js in or add mov and adc mov fnsetpm(287 pop das mov mov or and add push adc mov test inc adc and das inc sub nop mov dec push das inc test sbb cs mov mov adc add test xchg dec sub mov push jo add add adc lods adc jle das movsl addr16 je mov mov push loop bound add or xchg adc inc sbb and popa arpl cmp rcl xor je (bad) jno adc mov mov dec adc xlat icebp movsb daa pop push adc sub pop and lcall insb pop jbe in dec inc add add mov pop xchg push mov pushf and and sbb xchg sbb lock jo daa inc adc or pushl sbb pop nop (bad) daa lcall cmp jg adc push dec or and fdivrl dec out push mov add jmp lcall std pop push cli jo jns divb push fstpt pop lods ror (bad) loop jl push mov add mov cwtl aaa jmp ret or or or adc sub adc mov pop inc fptan jbe cmp inc adc cmp sub adc push addr16 mov sbb cmp jne jle int pop aam add jb mov jae adc cmp xorb addb add and mov loope cmp test mov cmpsl push add push xor mov xor jl inc ss jne jne sbb add scas adc xchg mov adc and mov xor dec fldenv push fs add aam or inc xchg jge sbb add sbb int3 add mov dec fistl push inc push push cmp adc fiadd inc sub outsb jmp xchg xlat push cltd jge outsb out insl inc rorb sbb mov in vpsubd adc call dec adc sbb cmp push or cmp pop dec or pop gs cmp call push lahf and mov sbb mov and out (bad) xor sahf push out in popa add ret or shrl or push xor rolb in cmp inc lock inc inc inc cmp jne adc ljmp pop jp inc ljmp daa (bad) aam inc mov inc jne,pt imul adc dec movsl push and and in and sub add pop pop subl xchg popf xor add mov iret lock xor pusha xchg stc inc sub sahf jb dec jnp popa ret popa xor jle insb dec andb and or lock lret sub (bad) lock mov shll scas mov hlt shr (bad) fwait int3 mov mov ret sub and adc mov cwtl das gs lcall imul cmp in add cmp jo movsb popf push adc and fs add push dec cwtl insl scas fisttpll xchg xchg adc or in pop sahf hlt gs loope cvttps2pi dec outsl mov add pop add and mulb pop popa mov push jno (bad) ljmp xchg mov test or int3 shll mov shrb or and das leave cli not jmp inc insl fidivrl mov inc xchg adc stos lcall pop sub jb or xor adc or adc xchg lret inc rol mov sbb mull ret in jo sbb push mov int inc mov dec add pop pop sbb jae das add mov mov in inc mov mov push xor pop cmpsl xor sbb loopne sub push push ss push mov rorl hlt xor cs dec and imul loop pop xor add in jmp mov aam add rolb dec lcall and pop cmp push xor jge add mov fstpl adc and xor add mov cmpsb insl aaa cmp mov lea sbbl adc jb cmpsl repnz and or sbb dec mov push gs mov ja jmp (bad) call jle pop call or fcomp ja call fnop gs out cmpsl sbb fimul sbb pusha or rcrb or adc and fs xor xchg jns lahf xchg fdivrs mov fs fadds leave mov cmp repz cvtps2pi repz sbbl push mov xchg inc scas je adc out cmp repnz fisubr and aad and mov repz or insl adc mov push mov add add ds ret aad and pop push mov repnz fxch sub jns adc repz imul jno into mov xrelease test and daa xchg cmp xchg xlat fwait xchg je cmp in movsl push mov rcl repnz mov and sti adc xor lcall push mov test mov aas loopne xchg dec sbb mov (bad) orl popf jmp add out mov inc lea push push jmp mov (bad) je call sub push dec or xlat sbbl or mov jbe add ds adc movsb fildll add sub enter xor inc mov inc adc sbb lods or sarb xchg and push addb sbb clc scas jne cmp jbe sarb cmp (bad) push jae sub aam push dec ja shl (bad) ja sub add (bad) sbb add mov adc pop pop arpl mov lea pop add dec push xor push rcll push (bad) xor scas add jmp pop dec xchg sbb inc (bad) sub jmp ret js inc aas fisub add dec mov cltd inc sbb inc inc xor push jo imul jb push sub cld dec mov les cmpsb or cmp jb push movsb xor enter pop loopne cmovl push fcoml sub mov adc in std ret push cmp je dec jmp and dec dec add nop inc jo xchg jne nop mov xor jbe or and jae cmpsl sar inc mov cmp push (bad) mov ja jo (bad) pop fmuls fcmovne push dec cmp das push sbb xor scas dec out pop cmpl (bad) repz clc (bad) roll enter inc or or ljmp sub jecxz ret and and cltd in and or cmp and daa push add dec repnz in loop add lret cmovae in inc or dec xchg jo mov fs sub pop inc pushf pop xlat mov lods jbe xor leave lret inc or push test arpl (bad) dec mov jmp push cmp add dec adc nop imul jne mov jno (bad) fisttpl adc cmp jb es addb sub fs adc add ljmp aad sub xchg cmc iret hlt and and daa jmp and cs test add mov jae lea faddl and xchg movsl adc daa stos nop shll inc sub pusha adc lea cmp pop ret std (bad) mov push inc add dec add test push jge mov nop jb loop pusha jg or dec add sub mov clc xchg add mov push xlat ficoml xor xchg adc test out in fs and push push call nop dec xor pop mov in leave shrb push out add jmp sbb or mov dec dec adc or fsubs lock andl mov jo (bad) or add aas xor inc xor mov or iret arpl and data16 in mov xor inc mov or mov add clc stc fwait (bad) mov or push sub lea mov (bad) xchg mov or fnstsw inc loopne mov mov ret call mov inc arpl shlb pop ret add add subl (bad) rclb or lcall negb sti lahf ficom dec adc sbb or dec loopne outsl inc add add push add push icebp addr16 xchg sub (bad) push or mov bswap dec add adcb in inc mov pop (bad) xlat (bad) sti mov loopne (bad) into loopne sbb add dec mov fistl mov and push pushf xchg ss xchg push sbb add cmpsl popa ret cltd push aas or xlat pop lahf cmpb outsb mov xor mov lcall hlt cli fiaddl push in pop adc scas rolb sbb sub dec and mov cmp push rcll orb and jne xchg push mov pop (bad) cmp sbb pop sbb pop out cwtl and xlat mov adc xchg fistl dec xor mov and xlat and idiv add sub jbe (bad) xor (bad) and pop iret in inc lret ljmp push cmp dec adc push cmp faddp dec fcoml xchg xchg add inc cmp dec mov mov xor lea push jne xchg xor mov pop mov pop call xchg sti sub movsb int3 dec xchg sahf ffree inc xor inc jo push roll xor pusha and insb (bad) dec sub sub enter iret (bad) or mov dec bound adc mov lret xchg mov push es lret add ficomp cli pop xor sbb mov (bad) js je pop popa stc scas push or jb xchg pop lcall out lock arpl testb je ja jmp ss mov xchg xchg in push loope push test jns cmp scas cmp jne cmove fwait lds pop pop xor xor inc jb xchg rolb into cmpsb xchg daa cmp movsb lret jecxz mov scas xor (bad) repz mov or ret aaa out repnz std (bad) imul in enter in enter push (bad) jmp push repnz mov lretw (bad) loop adc dec mov xchg lahf inc enter dec in and and in ss fs push icebp pushf mov subl push xchg lret and or mov inc mov dec mov popa insb or lret jecxz jae and sbb sub push fdivrs in or cmp fistpl js cld sub adc loop rolb (bad) cmp jbe (bad) and mov cmp cmp ret add (bad) push adc mov push adc (bad) clflush cmc mov push add pop cmc scas push xchg or mov arpl fdivs cmp pop inc pop popa mov push xchg jl push inc or cli xchg sub daa sbb mov mov sbb push push add ret ds mov or mov hlt add add sbb stc and xor fistl sti ret push repz xor std cmp push push push fnstenv ja shrb cmp mov push adcl call call adc testb fwait adc push int in test jg (bad) jnp scas push cs inc push add push daa aaa ret data16 pusha lds aaa adc jns imul push inc in push inc aaa and std lretw aaa fisubl push clc pop push repz cmc jg fadds lds hlt jne pop (bad) mov sarl in das pop fnsave in int repnz in and mov adc mov int3 int3 lods cld sahf adc xor push lcall loop adc mov mov add fsts xchg push add out push pop out xor push pop cmp sub (bad) mov ret js loop xchg adc stc cmp jne hlt sub cwtl cmp cld and les mov addr16 int xor push loopne jmp mov arpl or loope push call in jge mov adc adc or icebp int3 xchg mov movsl aam ja push inc loope jb xchg loopne pop push mov xor jge stc jo mov (bad) testb inc inc adc push dec jp mov sti mov cmpsl sub mov faddl or jle pop imull pop fisubrl xchg shll dec push hlt xor or add enter or inc jle mov out shrb movsl pop dec fwait add fdivr out sub or and or add ret pop adc push inc cmp fwait mov into (bad) cmp adc add dec ret int3 ss inc sub sbb aaa fwait sub ja mov inc enter dec add mov fisubr mov mov push loopne insb xchg jae stos push dec out pop mulb sbb je sbbl lret sbb insl mov inc add (bad) sahf movb jno mov dec adc (bad) xor sbb cmp jl or aam cmp ret (bad) jle aad dec or mov mov mov fcomps push in shll addr16 push cmp ja in sbb mov and mov cmp xor fisubl mulb int stc dec jne insl fstps adcl inc mov fmul push push jmp mov mov jmp jle pop push add pop lahf xchg negb nop mov in jae leave gs inc sbb sbb std sbb or jge jle das (bad) inc pop xor jmp push leave xchg outsb mov enter inc leave js cmp or fildll fdivrs pop imul jl enter bound loope test ret (bad) sub sbbl jbe pop jo stos fstl mov loope icebp pop or adc pop add inc insb call and popl pop dec leave out js dec adc mov adc rcll mov adc adc jno mov push sub adc jb dec mov mov adc jae ljmp fs cmpsb xor fild mov sbb push sbb pop jae push js mov loope pop jae incl sbb cmp das lods imul inc mov push inc cmc cmp test lret xchg in add push lret pop cli push (bad) lock pop insl xchg xchg mov jnp jp jmp je and or pop leave les (bad) or or mov mov add ljmp sub inc adc scas out or ljmp orl leave or call or mov inc lahf jno imul mov lds dec mov jne inc es sbb sbbb adc in lock dec push mov mov inc dec push pop xor or in je popa cmp add and movsl or dec add add mov ljmp dec (bad) mov popa leave sub sbb inc mov add or notb aam mov jl adc pop cmp inc aaa shrl ret jmp aas inc dec inc xchg insb and in push push pop daa nop cmp xor je divl and scas mov mov and push mov or sub ret mov pop xor xor (bad) mov or decl adc loopne sub ja lret and add or adc and rcl sbb nop mov mov or cmp stc cmp jae shlb pushf cwtl sbb lret sbb inc adc cld sbb jne mov shr xchg mov push mov imul sbb lock adc jne (bad) aaa xor pop sub js outsb sarb movsb rcll outsl call inc rol inc and xor cld outsl jne movsl adc jb mov imul bound out cmp and and and rcr add xor arpl dec (bad) push mov and or fstl xorl xchg dec (bad) lret fisubrl jge push adc xchg dec movsbl mov sbb or sub dec aaa add aas cltd inc xor test pop (bad) mov push push movsl xchg cld sbb dec sub mov flds fnstenv (bad) outsl in dec push in push dec cmpsb pop push push add cmp leave fwait ljmp stos and scas or inc cs sub mov adc sbbl pop mov rorb inc mov and (bad) add out mov and leave xor mov cmp dec in in or and jecxz sub enter gs cmpsl nop push sti cli (bad) mov nop cmp popf mov into in in adc push jmp pop enter loop loop and push adc rolb (bad) lods sbb xor mov dec push adc inc jb outsb push or loope adc adc mov int xchg push lahf or pusha adc pushf cs rorl scas jnp push fisttpl cltd inc es xchg jno nop dec or dec mov insb add inc jle (bad) in jmp (bad) xor add in ja popa aaa inc sub jg xchg fstpt pop lea xchg xor bound xor add std in mov mov pop and or pop cwtl bound sub or pop mov leave pop jo daa pop loop cwtl add testb popfw pop jbe ss adc test pushf fwait mov negb in adc (bad) jne inc into sub arpl mov lods jno xorl adc subl or or dec shlb cld sahf push rcrl pop call call adc adc push add fmuls xor daa rorl ljmp jmp js scas and arpl mov daa dec jle call add clc mov jmp lret out rep push push aas mov or fcoml mov add mov call mov xor cmpsl lcall mov jne pop lock jb add aam mov mov or shl push or fisttpl or ret das inc xorb insb lock inc pop pop mov mov add or and and (bad) mov cmp and icebp mov pop mov in sub inc call push push pop cmp lcall cmp dec popf sti dec jae pop sub scas lods add repnz dec inc rol mov dec cmp pop dec adc jae ljmp pop sti push fmuls adc add cld fstps sbb dec je push mov jmp xchg addl jo sahf push push pop xorb loop out fadds jge subb mov xor (bad) test scas hlt pop xor or (bad) imul xchg and pop cmp gs rclb xchg inc pop jb and imul or or or repnz cmp cmp sbb sbb inc sbb scas call mov add jae mov pop mov sbb int3 out mov arpl sbb xor icebp pop push or imul dec inc cmp (bad) aas mov inc jmp loop fs loopne enter ljmp ljmp mov mov (bad) icebp clc xchg movsb add pop add add mov jne std stc insl lret mov cmpsl xrelease movb or dec cmp push mov in and pop inc pop aaa int3 jne sbb or imul jecxz jmp inc mov iret xchg add adc fbld pusha pop add cld gs enter inc sub add ficompl xchg push vpsrad mov or adc sub inc ror or xchg pop jl mov xor cmp push add call push scas cwtl pop xchg push and imul clc in aaa xchg fisttpll or push aaa ffreep fs iret dec rol clc outsl jle ja adc ret mov mov out ds int3 push loopne sub cmp (bad) movl add scas push nop cmp pop pusha popf daa fwait xchg dec add pusha dec mov mov test push mov xor jmp or sub add scas pop jl mov xor pop inc xchg mov shr and add out div aaa adc ret or xor and fs shlb data16 lock pusha idivb test fmull mov sbb adc js sbb mov sub mov xor sub and dec push or mov sub push loope cmpsl gs mov adc xchg dec inc sbb or xchg movsl and pusha enter cmpsw leave add mov lea sbb or mov mov dec inc fildl sbb xor adc mov dec mov fidivl std jmp sbbb pop mov add call xchg je cli mov mov aaa fcompl ds inc dec ja inc nop or xchg adc nop push add add sbb mov or inc dec fiadd dec ror (bad) or push mov in cmp cmp inc out cmp sbb inc or fwait stos jp adc cli dec adc mov fsubl xchg sub cmpsl mov lcall add pop int rcrb ret enter jmp movsb xor xchg imul aad and aam clc ds aas inc scas in incl mov inc pop inc xor or (bad) or je cmp insl leave push lret push cmp popa stc mov cltd inc mov mov inc cmp add inc push cmp adc fidivl inc xor pop pop cs and popf imul shrb fdivr bound sbb mov fldz lea pop sarb mov add (bad) add and fwait or inc sub xor xor fldl fucomp fstpl and add outsl fstp and cmp sbbb fimul imul add dec add xchg mov or pop jl jge mov mov and xchg push insl push sub int xchg outsl add lret (bad) aaa jg or ret mov mov push jmp cmp sbb fcompl sbb lret ret xchg sub cmp sbb sub sbb mov fldl sbb sbb inc xchg lret fnstenv inc push or leave imul jl push in daa cmp pop adc add lock fs (bad) rorb scas and cmp cmp or jo xor adc jae clc popa mov mov pop xchg inc push sbb lods pushw adc xor pop cld pop lea xor movsl les push cmp pusha mov js push xor sub enter add and pop jb je inc and nop out sub dec add add in loop,pt out and pop mov imul adc ret mov xor xor jle outsl out cmp cmpb sahf dec jne (bad) or clc andl or scas andb scas jl pop scas sar mov ret or inc sbb xchg push sbb and dec gs in (bad) call ss xchg imul cmp ljmp out es xor loope leave cwtl divl arpl pop nop push mov mov lds aad mov lods inc or lea xor rorl or or (bad) xor rcrl and xor faddl xor sbb fsub jns xchg cld xor add in xchg or and mov mov jmp cmp flds inc xchg pusha insb add mov mov push or adc ljmp mov inc scas les scas mov lea (bad) fwait clc lret mov dec jae push xchg clc adc mov mov sbb inc xchg mov or dec push pop sbb xchg or or add cmp call das in in lods imul pop ja stos mov and and xor push jnp dec adc pushf pusha xor fnop cltd das in xor jnp movsl lods inc icebp pop and inc stos fwait leave adc mov pop ss sti add add add inc sbb adc inc push cs lret sub pop add inc and (bad) cmp (bad) pop jne mov jmp sbb in cld pop xor adc inc add in (bad) mov xchg push add push adc mov push out call lahf jl cmpsb xchg cwtl mov xchg mov test jmp nop adcl mov dec and and and or enter or in xchg add in jl icebp test mov cmp adc mov addl add nop and sub cmpsl stos mov cmp and jmp sub jo lods cmpsl push ss popa dec (bad) xchg cwtl inc add std hlt aas inc outsl jmp push or mov pop rolb in jle and or pop pop ret mov je sbb mov jno push xor outsb call lea daa jle cld adc ret mov push mov test mov jmp dec mov dec cli push and sub adc push sbb inc push mov inc push mov dec mov inc call mov or push jbe add mov jb ret push pop mov push stc inc fs jo pop mov xchg popf inc add or lea and es xchg movsl insl sbb and in rcr scas in repz add leave add sti loopne test je push (bad) push nop and xchg pop cwtl cs leave dec pushf and xor add xchg sbb aad or xchg mov or (bad) mov cmpsb mov adc (bad) cmp out lock jno in ret stc sub dec sub xchg ret add and mov pop xor xchg and push imul and sub lock xor jnp hlt hlt lea in pushf lea cld sbb lock fisttpl mov adc or inc push enter or cmp pop push scas and and add and setbe or fbld push testb jne or dec dec cmpsb jg mov mov xchg lcall cli stos insb and mov lods repnz mov cmp add cmp cmp jmp cwtl lods (bad) xor mov insl and (bad) lret jbe xor cmp or cmp pop test add es mov mov lcall clc add pop push xor pop xchg aaa xchg dec adcb cmp je push (bad) xchg and or outsl dec mov or int push and insb lock lahf mov inc push sbb das es sar mov nop push movsl and add jbe dec pop flds fsts lock jg flds ret flds fldl fstp push sbb and imul and push inc sub sub pop addb clc movsl push mov jne xchg push add imul adc adc push cltd mov mov dec pop xor add push les sub imul js pop sub push (bad) sub icebp mov fisttp inc mov push mov sbb inc mov adc pop sub or inc in into sub mov incl stc ljmp imul pusha adc bswap sub int3 or (bad) lret xor xor rcrb mov and iret sahf push xor pop and ret and inc shrb inc ss pop mov dec add and adcl dec aaa sbb movsb lea push fisubr lret push sub xchg dec add sbb sti push adc pop and out sbb sarl dec jbe adc add add inc dec in fcmovb add ds cmp movl inc dec xchg pushf pop pop or push jne imul xchg mov or cld insl sub push addr16 adc push pop pop nop or rol loopne shr or movsbl add inc jle test (bad) mov cltd jb adc fstps fnsave adc pop push dec inc sbb orl in out sti or fsubrp fstps ret fstps sbb fcomp jmp lds push pop add sti mov cmpsl out mov enter cld adc popf xor clc flds rcr push sahf (bad) std adc fchs fcmovnbe sbb fcompp cld pop jmp sbb sbb stc fsts fmul fcomps pop or mov jne ret popa cltd mov out in lahf loop call dec add push jo push fsubrs fcoms push lret cwtl push jmp loopne adc mov and lock sbb and in dec or shrl and add es xchg jo add mov pop xchg inc mov push call cmpsb insl in fidivrl dec mov call in push lahf fldl or xchg cmp jle push lock clc es clc in lods sub into ljmp fdivl fldl fmull fcoml push fsubrl cmp pop sbbl adc stos cmp inc adc cmc icebp push negb nop dec movsl div lock cmpsl push push sbb mov loop push imul or push xchg mov jb fild fmull bound into xchg xor pop cmp push and fucom adc addl jns sbb loop push xchg ficomp nop pop xor packsswb in xlat pop or jo imul fsubs or jnp inc pop inc xor loopne (bad) or sub adc and ret cmp sbb cs adc sub and or cs xor test push push sbb or or xlat imulb fisttpl dec cmp sbb and xor mov jmp sbb loopne jnp fsubrs push add or xor inc mov pop faddl add sarb lds and cmpsl loopne xchg push sbb (bad) bound outsl xor fldl or adc mov icebp and pop add lock xchg fadds in mov and mov dec and push out dec (bad) loopne or cmp in fldenv or sahf and outsl arpl (bad) inc (bad) mov sbb and fdivp mov add jp inc flds sbb adc test aaa push int3 jne pop repz pop xlat inc push inc push popa pop mov test adc fcomps dec cmp sahf sub fwait inc push adc clc or push push push pop out xchg mov dec sbb rcll sub loopne and push add lret (bad) xchg push outsb cmp xor or and aad scas xchg lock add adc xor lock and inc arpl push mov inc jecxz fiaddl sub adcl sub sarb add mov repnz fmull (bad) sti jo fsubr lret inc gs sub fsubr add push call push mov fcoml lock dec clc dec xchg jbe scas ret lret outsb mov and sbb push insl mov sbb je inc loopne sub push or pop rorl xor outsb adc push ja dec lcall loope int fldl imul fldl fisttpll xor pusha mov nop mov push (bad) push into adc add push push xor adc inc je mov fcoml aaa and cmpb xor repnz fildl fcmovne or aas xchg lds je shlb pop cmpl jb pop jae inc scas and pop cwtl jo add and leave pop sbb out push (bad) xor fucom inc cmp mov cld (bad) in jb adc fnop mov add and cmp inc jg lods cwtl les adc inc cmp pop mov inc inc dec jne mov fcmovnbe cmp adc push cmp ljmp adc mov test inc add add mov xor into xor add add sub mov ja cli cmp adc xchg add inc pop pop push inc jbe pop inc enter loope loop xchg daa and dec in in add int pop aas pop jb cmp push call mov je aas adcl and out inc cmpsb nop sub push and pushf cld cmp cmp sub cmp sbb and fstl and fdivr sub pop gs (bad) jmp in jns and popf xchg xchg ljmp mov fstps dec cmp push or lea movsb sub adc or sub fiadd and inc popa (bad) jo xor cmp and and ds mov inc lcall inc jb pop ds es mov jg mov and sbb fldz fstps push pop add adc push rcll or pop inc fcomps sahf jno and test idivb cmp inc pop repnz cmp fldcw inc and and in cmp bound push cmp xor or xchg xchg or mov aaa add aaa add mov repz popf jae in add ret or repnz sbb js push jnp jl loop leave cmp mov (bad) jmp push add js inc mov add push cmp jle add lahf and add sbb cmp in add fcoms lret test adc sti add decb mov sub sti xorb nop pop adc add mov sub and push dec push sbb insl insl cs jbe pop mov or push jmp and and dec dec dec rorb nop and inc sub stos mov or xchg jmp sub xor mov xchg cli lods add and push and or inc loop lock js leave test jl mov push or std insb add cmp pop add add cmp outsl sbb ret pop hlt add push fcmove ja (bad) idivb inc int3 add cmp ret dec ret sbb hlt or and adc sub sbb mov mov fnstenv adc ss cltd nop gs add inc cmpsb nop (bad) mov shrl or aam mov stc scas xor dec (bad) jb mov jmp mov push pop outsb ljmp adc add xchg cli ja cld sahf add sbb pop jne xchg push dec push shl dec (bad) jmp insl push push mov jmp es subb add push xor push lock cld popa dec dec dec inc adc sub in add adc jb cltd cmp and lahf jp adc sbb or cmp push lahf and cmp jns mov inc jae scas xchg shr inc push and inc jo xorl lahf push add inc mov lea js mov inc out inc or or cmp iret adc sub jno cmp cmp pop xor test and rolb pop or data16 mul xchg cmp mov adc sbb add test test lret sbb outsl scas shl pop (bad) sar jno and sbb xorl cmp cmpsb pushl out mov jmp sub sbb or mov xor cwtl sbb and adc add in adc insb inc loopne add or or mov ljmp dec ds sarl in xchg test fldt jle push cmp push repz jae fs das push push jns aaa xor call test jbe add xchg in ds push inc add adc xchg push ficompl inc or test jmp xor mov cmc hlt test and adc add repnz mov inc lods jl and sub xchg pop (bad) fwait cmpsb imul pop pop pop cmpb sub push push pushl icebp dec orb sbb xor mov mov call aas cld ja pop cmp or enter (bad) cmovo in outsl cmp call test scas mov loopne enter pop pop mov push and (bad) jg in sub and popl in adc fcom stos xchg inc xchg mov xchg scas in xchg aad dec out insl and jns add sahf jecxz xchg movsb pushf push imul mov mov inc mov inc outsl inc push and xor js testb test dec cmp xchg adc or jnp dec in (bad) fdiv xor cmp pop adcb and xchg imul mov sub out push mov add xchg lock inc lock dec sbb jne adc mov ret add pushf sbb inc mov int in decb add pop add rclb cmp push push jle add add daa xor mov addb jmp out sbb cmp jecxz sbbl sub int3 mov mov mov xchg inc (bad) jge cmp clc inc fwait mov scas xchg push mov xor scas inc jmp mov add mov xchg jle hlt sbb pop or sbb or and shrb fsubrp out mov dec xor jl dec jo jnp (bad) jns sub sbb aas dec pop cwtl add imul sub fcomps sbb test repnz push adc arpl add mov mov mov cmpl (bad) jbe je mov cmp je daa xor adc pop into sbb add lods jnp ret xor xor in inc imul dec jne mov (bad) push aas sbb dec push or aaa dec and fimul pushf (bad) sbb mov jmp or int3 (bad) or adc pop sub movl add pop mov mov push and fsubl add outsl mov jo pop fdivrs repz xor das and push and sahf inc pop cmp mov sahf lret (bad) xor lock repnz fwait (bad) and pop pop or pop mov sub or dec repnz dec out sar mov rorl sar xchg add xchg pop outsl add push push mov sbb addl ss enter sub test push (bad) and test inc jo sbb push push out (bad) js or adc mov andl orl xor and dec daa push sbb leave aam add test cli lret adc xchg jnp add leave test xor (bad) fstpt enter fmul (bad) icebp sarb pop cmp jge and jp lcall lea sub xor jae je (bad) outsw data16 push xlat hlt inc pop inc adc jmp add jmp aas add call (bad) sub xchg dec cs sti (bad) enter cmp cmp test adc push push mov sub (bad) out in sub cmp lcall add mov data16 or nop jns jns or jmp data16 icebp cli add in insb incl repnz adc adc js push stos sbb cltd xchg gs bound mov xchg cmp js and add stc jne adc imul pushfw fs inc jne pop sub xchg dec add inc or xchg push push push dec mov jecxz icebp pushl loop out loop xchg add cmp js jnp pop mov imul cs and cmp lret and das mov mov sbb or int mov fwait mov or movsbl jge or jb mov test inc cs or bound test hlt push jns pop mov xor sub adcl les aas adc pop adc stc xchg ja test jl pushf dec dec enter jbe push fstps or ret jae cld bound push shll cwtl negl test mov xchg sahf xchg int3 mov add lret pushl xor jns aam pop sub jns lock stc jl and pop jb push leave or jb push push cmp cli cmc jb jo adc movsl sbb subb pop mov in iret js add insl cmp inc and inc pop and cmp sbb ja xchg out mov scas xchg xchg out dec mov in repnz leave or pop stc lods dec adc jp sub leave or dec push and repz xor dec pop enter mov loopne jb pop mov pop iret test add in add xchg rorb add dec (bad) xor sbb or push xchg or (bad) xor mov lcall cmp xlat pop inc scas in adc jae dec xchg push xchg add or js enter in and and adc enter pop lods dec test nop or nop xchg pop call xchg outsb sub cmp push call mov jl and pushf adc insl inc repnz (bad) jne add jns leave test insb int pop mov dec dec in out jb dec xchg xchg les mov mov sbb push les lea add xchg sub lahf xchg test fisub jns imul fiadd leave add pop gs shrb (bad) dec mov rol mov xchg adcl test jno cmc push (bad) mov repnz xchg pop ss das cmp jmp inc push enter testl fwait loope mov push inc clc aas xlat sbb adc movb roll mov add lret mov ja inc clc mov push (bad) mov pop stc xor adc inc psubsb add jmp inc mov inc adc cmp mov fisttpl push adc push pop push xchg les xor into dec mov pop mov outsl repz mov pop adc clc cmp xchg sbb ret pop jle ljmp add test mov in mov test imul je jecxz adc lock jle ret hlt aas insb or sub subl pop popf xor loopne xchg test add xor rcr (bad) stc pop lret mov jns add jmp dec jmp mov add fs push jmp push aam ss push add xchg xchg inc or push call fisttpll (bad) iret jge dec inc fsubrs add lea fmuls cmp add out sti jle mov clc xchg xor lret mov add push aas movsb jne xor and and jnp les mov cmc push jb dec mov mov sarb dec and jl call sub pop inc enter data16 ret add adc mov call scas mov adc mov xchg mov pop enter stc sbb jp lds test nop pmulhuw hlt pop rcl push lret push adc add inc and es or mov mov inc pop mov mov add js cmp (bad) outsl mov add lahf push sbb inc add dec xchg sbb and adc mov cmp jbe sub inc or and cmpsb into push or je fsubrl cmp cmp and xor imul jno add pop push pop loopne idivl jl mov lock call out or arpl cmp sub or ss xchg pop sbb pop pop push repnz mov ret notl pop ja in leave sbb (bad) fistl sbb enter call push push pop xor in and push loopne pop push lret jecxz inc push sbb sub fnstenv fisttpl adc flds xor adc pop enter test and fsubr loope pop pop fs mov xor iret (bad) adc sub pop outsl pop je imul push fnsave leave inc mov pusha pusha (bad) mov pop rolb jge fchs pop leave scas rcll call mov mov mov mov clc call sub lods fs popa test pop pmulhuw push mov add inc ret flds cli and add inc or mov inc jb cmp cltd cwtl add enter or pop cmp mov or ja xorl mov cmp dec and fs test test jnp jbe adc mov xchg or inc (bad) cmp jcxz les jnp cld sub ljmp bound push jae test rol rclb mov clc popa mov push (bad) mov jb invd add les lea daa and negl pop sbb mov lods jmp sti outsb pop inc in ss add imull mov fmuls fiadd lods ficom hlt inc jo jecxz push idiv addr16 std mov (bad) push pop fidivr inc pusha dec adc ljmp (bad) mov imul adc pop mov fmuls mov jo loope clc adc int3 mov jecxz popf xchg out xchg test dec loopne roll cs fcomps pop and cmp add xor dec add adcb lcall xor dec add ja (bad) sbb insb adc rcrl mov jne mov adc pop sub rcr call sbb inc rorb lock je pop std mov insl mov mov pop (bad) jge push (bad) dec jnp insb xor adc test (bad) and pop and rol roll popl and or popa cwtl xchg jmp dec xor add into or daa sub push cli adc sub add add push jo jbe jno pop std inc push fwait (bad) cmp inc push sti loope dec repnz dec push mov daa jbe fnsave movsl pmulhuw push mov and jnp in mov movsb dec rcrl test mov cltd mov adc shlb jb adc leave ds mov mov (bad) cmc xchg push xor pop rcrl pop pushf jno push mov sbb add sbb push dec rcl shl (bad) sahf fstp rolb jp cli shl xchg popf mov and pop lea push sub jb repnz leave inc pop mov enter lret adc cmp sbb pop je pop pop push popf or push and add insl orl les (bad) jb movsb pop push imul add push loopne fucom cltd mov add fcomp inc stos or inc fimul or and pop sub push and fs push movl aas scas mov jae mov xor jg mov in inc sbb sub arpl dec xor inc daa movsl je or andl loopne or push push inc jecxz add xor aam je into jecxz ja ss push ror jns (bad) das in jae enter int3 mov (bad) xchg outsb orl and add jb cs jl cmp lock or and int3 ss dec iret lods xor push call mov call or cwtl mov shl inc sbb sbbl sub jmp pop jge add xor inc enter jle dec sbb push scas xchg clc cmpl es popa or adcl js inc push and faddl and lds push adc aad pop push dec (bad) out cmc inc sub loopne call inc xor mov jmp fstp pop clc loopne mov loopne call pop push stc loopne pop loopne adc jp push test in and (bad) fldl xor (bad) repz adc pop dec xor pushf bound xor pop xchg lods push lods loopne push pop jl xchg scas jmp inc sub sub and rclb std bound mov insl add push sahf pop pop add sub add popf faddl int adc sbb dec hlt adc pop adc xor fstl loope sub inc hlt jb rorb add (bad) test and repnz or cli fcompl sub ss push hlt inc ficoml or jp adc fstpl and addr16 ret adc sbb ja jo xchg push rclb xchg dec clc sub push lock scas lcall (bad) dec lcall call xor mov add xchg jmp pop (bad) adc test iret ret adc inc sbb ds and test pop mov repnz iret mov add cltd or inc cltd jae incb fcoms repnz je mov mov incb inc fcomps pop sbb xor iret or lock xchg xchg mov test cmc mov inc jb cwtl xchg std add mov iret imul std add cmpsl mov and dec gs pop mov lock and jb imul std jns daa push mov and xchg in cmp movsl sti add add rcrb cmpsl lcall add jbe sbb xchg es dec xchg daa in push cmc jmp mov xchg dec xchg pushf push pushf mov stc dec aas cli add xchg fsubl adc push add leave stc add or dec xchg jp add ljmp sbb mov jle rorb (bad) lcall lds xor movsl dec xchg push fs inc inc xchg setb decl add (bad) pop jb inc pushf mov fmuls dec cmp cmp xor test dec xor jns cmp imul leave lods sbb sub push and mov aaa xor in inc cmp (bad) push iret ret das mov leave push add std cmp dec repnz in fdivl xor sbbl sub (bad) test idivb sbb xchg sbb dec inc aaa xor test dec inc in cmpb push test hlt pop cmp push mov inc mov sbb pop jb fwait dec xchg xor push inc call xlat push loopne (bad) dec gs mov test in xor nop lret dec dec push push cmp sbb sub imul (bad) inc push dec fs lret test dec dec in jns lea sarb enter dec les mov imul pop mov pop (bad) ja and rcrb inc addr16 push popa pop xchg (bad) or or mov push or pop enter jmp jae je dec sub das and call call nop xchg add mov testb and cld icebp mov cmp mov add nop dec push movsl and int sbb lock nop xchg test xor and sub nop rorl jns lock ret jp sbbb and inc mov adc das inc ss push push jo push psubw cld xchg nop pop cli out fs dec and cmp nop xchg pushf int in mov mov out addl xchg out in jo clc push cmpsl jb out cmp fildl add (bad) leave out out xor dec mov inc pop cld mov roll hlt push leave out pop and ds test adc nop xchg pop nop hlt in stc xchg pushf in xor imul stos movb push sub cs bound leave jmp (bad) jecxz xor in dec in adc and int sub xchg lret xlat mov mov and in adc in xchg cmp in jmp int3 cmp push jb int3 out sti in sbb inc push lea outsl jb in cmp (bad) into dec iret xchg xchg push btc leave and fs jb outsl movsb (bad) lock xchg sarb pop rcl mov cmc jmp lock test push scas rcl cmp imul (bad) mov cmp xchg mov repz cmpsb adc in cmp push mov xorb xchg xor mov rcl xchg xchg daa lahf add pop add or mov mov je pop dec pcmpeqw das cmp sbb jnp jnp lahf add dec push leave orb ss test ret mov leave pop mov sahf add mov loope ljmp mov aam inc or int3 addl xor dec pop inc es adc or lcall mov lea movl movsb xchg push aad lea mov mov lock jmp sub jno sub push sbb icebp or jb and jl inc mov insl flds adc cmc ror mov sub pushl sbb sub mov mov dec or cmp push mov loopne mov xchg mov sub call popa cmpl dec sarl push xchg dec or add inc dec jne push das push add pop jge int arpl sbb push insb pop call sti push dec jne push pop jnp daa xchg lods dec and repnz and daa cmpsl nop lret outsl cmp xor cmp dec into aas repnz and (bad) mov cmp lret xchg es xchg inc pop es mov sbb inc into or jl in ss mov insb push jns jge mov jb jg lret sbb push adc iret pop in jo sbb into xchg dec insb and or and inc or jnp dec mov and adc enter mov in jb fsubs mov data16 fdivrl iret sub mov addb stos fcoml call xchg leave inc sub cli daa ja decl xor add (bad) imul mov sub mov notb pop aam aam jecxz insb lcall jb insb (bad) call push stc (bad) (bad) mov push xor (bad) dec cmp popa insb fild mulb gs fs sub mov movsb pusha popa mov repnz inc mov fsubr pop movsb add add add dec subb je or sbb mov or adc xchg or loopne sbb lods scas addb sbb sbb and jle cmc in cmp arpl call sub pop dec xor pusha icebp xchg and mov es repnz cmpl ds stos jmp push pop and mov dec daa jns jl (bad) or sub sbb jp test sbbl xchg cmp nop call add mov mov cltd inc dec repnz push fsubrl xchg adc or and daa nop xchg sub out cmp fadds enter xor daa dec and adc cmpl cmp nop out cmp and or mov lods pop adc inc push movsl sbb add enter fs or in int dec cmp push mov jb pop enter dec adc add negb xchg and dec cmp (bad) pop cmp or fwait xchg iret stos in ds xor and nop sti addr16 and or fild das in cmpsl nop and and jecxz add cmp cmp jl and inc inc xor and jns ja xor dec push (bad) push sbb and pop jmp sub bnd pop test or repz inc and xchg add inc and fisubr sbb push and xchg push inc enter loop aaa in stos call inc or add leave or fldenv aad sbb jmp shlb add push or and fdivl (bad) or dec lods call nop cmp adc jmp or (bad) mov and call sbbl test adc insl or mov repz in (bad) pop mov inc jne sub arpl push xchg fisttpl dec sbb enter in mov repz inc and cmp cmpsl out add adc fadds arpl add outsl add flds fildll sbb or mov orb outsb xchg popl fdivrs xchg lret faddl and push loopne xor fcmovb mov inc loopne (bad) out (bad) das jns call aas dec lds in add ds cmp pop enter mov in inc pop pop movsl dec sbb jb daa push inc xor add lea imul add cmp inc push repnz push mov (bad) push and cli sbb aam sbb pop fdivrp pop xor adc movsb jmp fisttpl xor pop adc (bad) cmp add inc fnop call add and pushf or jb dec xor jp jl adc add test sbb lret adc sbb in cmpsl sbb xor aas cmp add xor sbb push cltd inc lock or jle xor (bad) mov sub add xlat or jge jl and jae daa jns inc inc sbb nop push enter adc cmp and mov mov jl cmp add or sbb pop cltd inc and adc push jb sbb jb daa enter inc xchg adc sarl cmp add leave or or pusha fisttpl sbb adc fcmovu inc or mov out repnz jne aaa jmp pop mov adc rcrl adc sub adc xlat ret sub xchg push and mov roll mov daa nop pop jb adc bswap and adc test (bad) (bad) aad scas jne ds or mov rorb lea push addr16 mov test xchg stos adc push dec sub push ret shrl inc addl jno daa mov inc jae aas jae in fist inc jb or inc gs inc push inc outsb or jmp adc sbbl xchg addl pop and lret mov xchg mov or imul outsb pushf and adc push fadd pop and leave lds cwtl ss in cmp sahf fbld jns cmp mov iret jae aam sub fwait push leave pop jb xor or enter cmp adc fistpll movsb adc inc sahf mov fisub repz adc enter or and rcr outsb or xchg inc enter or or xchg add cmp cmp adc loopne or and adc test mov out sahf outsl add pushf dec lds scas (bad) inc push jb cmp repnz cwtl or cmovb repnz or sar and dec and cs adc (bad) adcl test loopne pop fmuls pop jns or or iret adc cmpsl xchg inc and inc test and loop seto cmp ret push cmp test or leave mov in outsl dec and adc aaa fwait pop enter push loopne add add inc sahf or cmp in stos call sub adc cmp or or outsb loopne jmp sahf cmp push or dec and imul pop xor sbb (bad) add adc or addr16 stos nop xchg int3 pusha and lahf push leave inc insl cmp cmp outsb xor or loopne or repnz jns inc lret jb push inc cmovb mov pop and xor movsl pop enter scas scas (bad) loopne dec jbe cmp add jb cmp fs inc fcompl out add nop sbbl repz loope cltd in inc or sub fucomi imul and and sti push pop and push jge insb mov push sub mov hlt sbb inc in lret or and inc sub adc push pop fadds repz test andl dec loopne cmc xor push cmp cmpb push je cmp pop dec nop mov jae sti dec mov xor ret nop add and aas pop adc movsb push xor dec cmp nop push adc (bad) das jmp add lods imul or dec lret jg imulb sbb ficoml call jae push pop xchg test xchg and outsl sti inc pop cmp jae cmp and and pop push js ret lods mov clc sahf jp jmp movsl jmp mov sub es jne fdivs js mov cmp cmp sarb inc xor pop add adc adc jmp inc sub cmp push cwtl pop push jne in sub jns xchg ss cs add pushf dec add enter (bad) mov jne dec or add (bad) or push dec mov int3 inc dec push add mov pop inc leave ret aad gs rorb xchg and xchg pop je push push xchg push mov test (bad) mov (bad) jl cmp bts movsl (bad) mov test or sub push insb jmp xor adc lret sbb orl push jle and add cmp jne add mov mov lock jle add faddl in cmpsl jecxz mov je lds and pop (bad) xor mov push mov dec shlb add cld loopne jp jecxz sbb dec push and nop cmp cltd add jbe xchg add aas cmc push (bad) ljmp lock aas xchg out xor leave test test inc or jecxz jmp loope out mov mov sbb inc and push sbb (bad) pop stos push or xor mov aas jle cmp cltd lcall scas sub pop inc (bad) pop jnp push inc inc int adc ret jecxz sbb add xor pop pop pop xchg push stos inc out leave jnp (bad) and or push nop jecxz jo rorl inc rcll fistl ljmp loop test test dec jmp mov enter lea adc sti incb (bad) and rolb adc rcll and mov loopne clc and fs fldl pop repnz mov std mov push cmp nop or xor fmuls push cltd roll insb movsb repnz cmp cld cld push inc (bad) cld stc mov cld je and cmp mov pushf nop or (bad) cwtl add inc dec xor jo lods rclb adc xchg outsb dec daa jge xor pop xor data16 outsb and jb repnz clc add jns std push test mov or pop mov pop adc add (bad) mov sbb (bad) clc dec push or loope add sub or jnp leave and repnz decl std idiv arpl xor sub dec pusha mov adc jl pop adc sbb xor cmp shl test (bad) xor and add stc lret enter push call mov or sbb sbb enter pop push pop es mov pop or jb repnz mov lock daa jns or xchg push or adc lock xchg stos in xchg push push nop push repnz aad jno inc pop or sti pop sahf push sbbb js dec enter loop or adc sysret leave push jb xchg xchg xchg and xor mov mov or call nop pushf add mov bound test mov and gs push inc cmp and repz sub inc and (bad) ljmp cmp je cmp je cmp jne cmp xor mov pop and cmp or or add mov add pop xchg inc outsb jne jmp push jmp push flds cmpsl cmp adc push push mov push pop pop pop xor inc test cmpsl push ss or pop fcomps sbb js clc add or sub jmp movsl mov cmp or dec dec test sbb dec mov cmp pop pop mov aam nop or push pusha outsb or add push imul outsb outsb fs mov lock add pop add lock jmp cld inc pop sbb or add sysret pop pop push jl xor jge sub cmpb cmpsb sub pop ret and jo es pop and push jne adc push add push stc xchg icebp loopne cmp nop fsubl ja decb pusha test int3 outsl push out icebp xchg add add sub jbe and mov pop xchg dec push push addb xchg icebp scas pusha (bad) testb jne sub fucomi ret sub add mov (bad) stos push dec das sbb cmp mov mov and inc lods test stos dec and fadds in lock sbb adc add mov push cmp aaa shlb and enter lahf inc adc sub add jo add xchg pop mov leave movsb and fwait push repnz mov xor dec call cmp and lret aam call scas cs test in and test fstl stos mov pop sbb jle movsb adc add call inc scas rclb jne data16 push mov add mov sahf es test jo faddl enter and call push and or jns icebp and nop dec push and adc push shrl ret mov and pop mov add rcrl push pushf scas arpl enter add and ret and and adc push test xchg push and add mov test push fdivl jl mov mov pusha and jp pop jecxz pushf mov push cmp (bad) add and imul daa dec xchg (bad) mov cmpsb or jge xchg int3 es sub sbb out je jge int3 adc jb movsl jle cltd or fcom add sub sbb inc inc cmp pop mov in icebp add sub (bad) (bad) shrl loope dec leave rclw sarl cmp (bad) jo pop mov lods or popl in push lret pop push mov xchg andb add xor stos push shr andl fwait jb js push sub test sbb mov push cmp lret pop fcomip cmp lods (bad) lret mov sbb push and in das sbb add mov and pop ss pop and sub (bad) in inc aad outsb mov mov sbbl stos aas shrb mul (bad) mov decb fmull add je xchg sbb cs jle push jae (bad) loopne (bad) es or pop sti (bad) push dec adc mov pop enter shll push into jmp in cli lods out cli xchg daa adcl add jb shrb xchg dec pop sub adc (bad) stc inc dec push test and out xchg pop test icebp (bad) push in jb stc arpl and pushf test xchg ds loop xchg lret lret (bad) dec pmulhuw repnz nop xchg inc sub mov cmp cmp and fldcw mov push dec cmpsl mov jp and mov sbb and jecxz mov ficomp xchg (bad) mov sbb in push sbb mov in jmp enter out ds xor dec addr16 xchg cs lcall daa (bad) dec add sti cmp leave xor or lds and jbe mov pop in pop in push enter daa push add push add mov mov pop daa nop ret jb xchg mov cld enter mov or pusha push and arpl scas aaa pop add add cwtl pusha and xorb mov sti jns mov jne dec ja push add cltd pop repnz pop shrl addl push pop aam adc pop or push pop or inc push jns add test cmp cli (bad) jmp push and cltd fmuls and pop or pop imul jns nop insb add sbb add pop testl add push dec ror adc push js push sarb cld call push lea cltd push inc rorl xchg mov add push mov iret mov sub adc mov jge js sbb push push pop leave loope xchg add xchg and cmp add nop pop xchg mov add inc (bad) scas adc add adc push inc (bad) jbe push and fistp addl outsl outsl pop dec mov sbb add xlat dec inc sbb (bad) or imul xchg mov adc imul mov cmp push loopne and ja mov repz js dec scas mov add clc cmp ja ret pop add mov rcl adc pop lea cmp inc mov outsb les mov das push leave popa cwtl or push or jl inc jnp jmp jb das xlat inc or push push inc mov add mov imul cmc and mov sub jmp push sub scas xor ljmp adc scas adc ret mov test add and fxch and sub ret cmc es or fcomps cmp inc aaa aad jb dec xchg bound push push or sub xchg cmpsl sub adc cmc (bad) mov rorb ja jl out icebp loopne adc pop mov bound mov or pop inc mov adc push and outsl stc or ds mov sbb push (bad) push lcall xor add mov hlt mov lcall push iret sub sar seto and sbb cs repnz jle repnz add pop mov (bad) lret (bad) (bad) jmp in inc mov stc push popa dec add scas cmpsb repnz scas xor or adc xor push sahf repz dec ds bound push push stc pop leave push dec subl add xor insl xor lods sbb cmp xor rcrl sub call enter fcoms cmp mov jne,pn jmp dec dec add scas jmp push sub movsl or pop mov pop addr16 lock dec xor jb xchg or popf lods pushf or jb lods icebp or pop insb add push add or and fnstsw mov xor (bad) xor and push adc fstps adcb mov dec add rorb add jns stos adc lods xor adc push enter sub test push ret (bad) repz dec sbb int3 imul pop or cli out rorl push pusha mov (bad) pushf or cs add ficom sub xchg and sub mov dec push mov xchg add and mov rorb sub sub add mov clc jp xchg dec sbb lcall repnz add sub pop scas in roll addl scas cmp mov (bad) es repz jne pusha mov sub stos imul or loope lret xchg add push push ficoml test xchg and add cmpl call (bad) outsb stc push mov in (bad) out sbb jle push sub shrb inc jge ret nop sarb xor lret lcall add mov pop pushf stc (bad) (bad) mov sbb (bad) (bad) repz hlt rorb sbb outsl shrb or stos dec rorb loopne in xlat aad lahf lret inc inc fwait loopne out xor or lret movb in fadd enter sahf aam cmp add dec pop enterw movsb test push and call mov ret add dec les push or cmp (bad) cmovo xchg fcoms cs or lock push sbb add or and add jecxz adc sub (bad) xchg sbb dec push jb aam lcall fidivrl lods test and test jecxz (bad) mov push jb es call adc inc loope ret (bad) dec sub sbb and ss cmp cmp (bad) aad in test push jb jns pop jecxz dec cwtl in leave inc fsubr jl das nop iret and jmp add (bad) inc add sub ret nop cmp and cli ljmp (bad) xchg dec inc mov (bad) (bad) repnz jbe int adc pop rorl adc xor inc jns,pt das (bad) ds push es (bad) nop into int3 pop cmp shrb and jmp lret pop dec dec lret xchg std pop std stos pop and in lret sbb iret and inc (bad) xchg push call sbb aaa repnz add enter les cmp push jb adc in jb push and dec pusha xor daa jns jl dec mov cwtl sti test or add adc xchg xchg nop out xor lahf inc jae add cli sub enter clc inc leave pushf inc pop and mov inc repnz andl scas in jae jns xor xchg inc vpaddq nop push enter fs in daa ror aas xchg int3 in inc push nop (bad) xor stc lds clc repz shll nop addr16 (bad) sbb push fdivrl push test sbb test je test push xor addb mov adc jle xchg xor stos lret sub inc sbb inc leave push loop mov iret mov into nop mov stc or (bad) fsubr sub push add dec cmp sarl add or rcrl in fisub push and inc inc cld aad dec je shl adc pushl es adc popa push or sarb in addl call orl dec outsl in adc movsb sub inc loopne jge push aam insl femms pop outsl aaa adc inc jle insl adc pop je inc test push inc push and jmp cmp je out adc jno and mov aas in add call scas cld jno jle lret mov mov call mov jno movsb xchg rol pop (bad) imul pusha imul (bad) (bad) cli insl outsb xchg inc push imul in mov or xor int3 aas mov pop in jmp rcll push stc je std adc xor inc xor icebp sub cld xor mov into xor stc adc mov call nop sub std ljmp insb pop les xchg xchg mov xor sub or hlt and mov adc das mov add cmp lods mov dec bound add aas inc add (bad) cli mov imul jl jecxz jne or dec or add ret push xor (bad) hlt add loope mov xchg cld shrl pop push or push or fistp push xor xor decb js jge or pop sub daa call cmp cld jmp push mov int3 push mov sbb lea push das xchg ret movsl adcl dec sbb push repnz sub mov mov add repnz push pusha cs dec scas call pop push jmp nop push dec cmpsb inc loope (bad) push and pop dec repnz sub je mov lods dec movsl and out dec xor jl add adcl test jnp divl sbb adc ucomiss xor decb repnz push or dec xor inc xor and and push mov mov xchg cmp icebp mov push rolb inc jle stc inc loop xor enter iret add out pop test xchg pop or pop icebp mov xchg or mov ret and push dec pop enter dec pop pusha sbb xchg lock lock and add xchg pop jo orl dec in in mov pop sub push enter lahf cli in mov mov xchg cwtl pop add nop xchg push xchg insb adc out sbb loop jb out adc fcoml mov jge add xchg xchg mov xchg pop mov in mov fnstcw add repnz cwtl mov xchg int inc jae add dec lds test fistl dec and popl xchg add mov enter sub outsl or lahf loope pop mov add mov bound and nop push lods add in subl sbb (bad) loopne xor shr jl in mov mov cmp iret mov jl and es (bad) pop and jns fucomip out jmp xchg jle jmp add mov add out imul das nop iret leave fisubr sub enter mov jb pop pop or adc add sbb inc ds fisttpll and sub lret jns jl and and pop cmp and adc and cmp dec out scas nop xchg in mov (bad) jns inc dec inc mov cmp fcompl push out out mov cmp or popa std gs and pop (bad) xor jl inc (bad) fs jns and test sbb adc xor jg lahf in dec pop xorl add pop (bad) nop adc adc in leave out sub xor enter push out lret adc (bad) pop mov orl mov xchg aaa int shlb jecxz jae in jecxz (bad) gs (bad) xchg int out mov cli decb mov mov test sub mov out loop lods lret sub leave inc leave out out mov stc incb jns iret jae inc in xchg mov dec ss jle ljmp cmp and lret fwait push in (bad) addr16 loop pop outsl dec rcrb pop loop in lods cmp pop pop mov push mov mov pusha out mov orb clc (bad) push inc jecxz push mov ljmp cmpsb cmp pusha out mov fstps jns loope (bad) jns in fs cmpsl scas push clc (bad) mov cmp nop xchg cmp mov cmp loop inc push mov popa pop lds nop int imul jbe (bad) (bad) cmp push push loopne out scas in jns add imul xchg loope and push leave cs subl fildll cmovp xchg out lods pop cmpb idiv push inc dec and fidivr fisubr lods fwait cmc decb sbb mov add push fisubr leave lahf lods add push fstpl enter rorl pop addl sbb fstl mov outsb shr stos dec hlt (bad) (bad) add leave inc fnstcw std mov imul test fsubr jb imul and xor mov cmp sbb adc insl dec push jb hlt fildl fsub sub out stos cmp (bad) sbb leave add mov inc push nop out loopne push jb fsts or cmp add mov jns or repnz sbb and adc (bad) iret cmp adc jle pop ficoml ficoml jns sbb cmpsb test in repnz icebp (bad) adc pop dec push push lds adc subl fldcw sysenter fnstenv les push (bad) sub and and repz into insl jno fcomp cmp push sub dec out cmpsb jb jns pop out (bad) daa stos add jns jo ret rolb nop or int jb nop xchg out sahf inc ss movsl jl dec inc sahf sbb test int in jne and push in daa nop jae (bad) fs cmpsl nop int (bad) out movsb lcall arpl inc jb sarl aas lret xor repz aad out movsb leave add sub push nop sbb aaa outsb jp decl add mov jne inc push jb aam aam out jns fnstenv mov pop jns lahf cmpsb push insl cwtl mov pop or stc jne xchg pushf inc ss out mov jns mov pop enter movsb pop cltd inc dec and shlb fwait pop enter out mov adc (bad) inc aam orb nop int mov mov add and roll mov and stc mov scas push mov lds aad lahf js repnz adc rcrl rcll call jb daa movhps repz inc or repz or daa (bad) rorb call pop leave push rorl pop and nop xchg ss int les jp call xchg cmp out (bad) repnz mov or sbb push xchg into push call jb ret in iret out repnz sarl mov jnp int int insb push test and in into leave lret cmp hlt shl jl repnz pop mov out cmp ret js cmp fucom call adc into in rcll and jle out repnz lret mov nop adc xor inc enter rcr add nop adc lret nop adc out call or ljmp enter lret and push sbbb xchg leave mov cmp call out enter stos mov leave sbb jmp adc out shr jl push add cmpsl nop loopne and fwait mov and pop enter call inc dec jb jg cmp and and dec sub pop add add dec add popf add inc inc inc mov in xchg add mov cmc pushf jge dec aam lds out movsl jnp jns test pop rclb jnp and push add xchg repz roll insb jbe jnp lock adc in xchg push mov loopne and lea jb fsubl adc add cltd xor in xor loopne jg adc fs xchg cmpsb mov lods or jg xchg cmp movsb add and push cwtl mov xchg xchg add dec jb push enter adc push rclb push fisub and (bad) aam push push xchg loopne pusha xchg clc and (bad) push gs and mov nop xchg adc or rol ds subl test push fsts and test pushl pop enter jb push mov xchg loope or or sbb pop jge xchg pop test xor enter xchg rcll flds seto cld mov push enter fwait dec cmp lret add loop insb dec xor cli sub inc stos rcll loope loope testl xor push mov mov cmp xchg nop (bad) in jbe mov xlat in add mov mov test add pushf xchg test bound movsb outsl aad add fabs fcoms in sbb imul out xor sbb or dec repnz mov scas divb add call or dec dec adc dec in andl or das sub jns mov es lea push mov shl dec mov gs pusha or loope push sahf push dec xchg fincstp mov inc pop pop outsl adcl cmp add insl adc inc shrb je mov les movsl cmp mov mov add in (bad) jbe ret jle pop cmp jno xor pop sub push inc ret xor or jecxz xchg mov inc test add stos faddl cmpsl and mov leave add xorl xchg jmp sahf or jmp aaa and aad cmp aam jle add inc cmp cli insb imul sub xor mov fsubrs call push adc sub arpl mov (bad) incb movsb sbb (bad) cld jns sbb push sub or stc imul lea dec inc add pop and inc cld sub in push dec fcmovb sbb inc bsr test mov sub popf lcall mov in enter xor or cld add lret sti pop sub add cld or dec shrb mov call and add and jae,pn nop inc push in dec repnz rolb (bad) in add xchg mov adc dec pop shll and fwait mov leave adc dec loop add sub dec pop mov sub inc mov add dec leave mov sbb adc mov xor xorb lea insb push sub sub fstp jg fidivrl adc mov jmp call or fwait sub call fucomi pop outsl fcomp xchg addr16 mov mov call ljmp and movb pop sahf rcll xor dec mov adc cmp jl pop lea push repnz and add arpl dec dec fcomps add idivb insb push xlat andl adc ret aam lock daa push adcb jae mov fstpt pop test sbb cltd mov dec mov sbb mov or cmp add fsubr mov mov sbb sub mov rclb movsb mov ja iret inc int3 cmp in call mov out or jnp or or mov pop into int3 push mov incb ret mov aas nop add jne push call or adc (bad) ja imul lret push jne add jae or (bad) inc pop repz loopne mov out icebp xchg dec push xchg or fcmovb mov inc add xchg lret add pusha add cmp xor push movsb inc mov mov repz test mov cmp mov nop sbb test lods push jmp ds rorb pop adc lea jbe add adc sub shlb and aaa jl fwait mov movsb jp pop sbb sbb enter aas xor mov and sub enter and or push in mov test inc jno cmp pop mov adc mov loop cmp cmpsb aam js or jmp fcompl push divl dec push sub inc inc cmp add sbb out cs jmp fadds dec push in call test out popf sub pop mov adc jnp repnz ja call lret fmull push xor inc pop sub ja sub jns push add or das sub mov sub add mov sbb inc mov mov scas sbb xor (bad) fmuls cmp iret fs or xchg xchg and (bad) or pusha test leave ljmp xchg sbb and or call xchg and add enter test dec stos (bad) in fwait adc inc std inc fs jl jle cmp xor sub jmp push pop or jnp cmp jbe mov call push loopne pushf mov push add lea call jae inc (bad) push lcall cmp out enter jmp scas loope add lret jecxz pop push fldenv jle aam xchg (bad) fadd loopne xchg out nop cmpl int3 sub nop lcall lds and pop movsl mov lret or inc ja xchg fdiv xor xor push mov (bad) call in add mov nop (bad) or aam mov std push jge lds pop cmp push and jns cltd inc push mov sub mov stc sbb push mov xchg pushf aas lods dec lods xchg fstpt push add loopne jns lods push imul jl pop or popa mov and inc adc js das (bad) pop xor dec pop insl loop add loop popa fisubr add push xchg sub mov outsl scas adc mov push mov dec xor mov sbb sbb sub push cltd cmp bound push repnz mov out pop pop mov data16 xchg jl inc xor mov or xchg out fld adc push ss out in jb in imul sbb jg xchg adc es inc push ret mov dec in push add and xchg fwait ss push sbb repnz out xchg xchg dec arpl pop jb (bad) cmpsb cs cmc dec int or js jb adc push jle loopne rclb mov (bad) repz add (bad) and loope ret icebp sbb mov out dec pop leave mov nop adc ja add nop pop jb jl xchg inc xchg inc dec nop mov inc push pop xchg lods out loope leave lret mov enter popf push out bound (bad) xor jb nop adc jbe jns pmulhuw or xchg xchg leave jg lods mov push xchg xchg xchg push adc clc test enter sbb add mov js jns daa in or repnz pop mov jne fs nop xchg roll or push inc bnd imul out in xchg sbb xchg repnz mov incl and and xchg in xchg xor add add and jb xor in jl mov (bad) in inc leave add xor in out je test test jno test sbb fs adc leave push jb in dec jo dec jb dec mov xor xchg popf std push call mov sbb mov test (bad) cmpsl stc push xor and lods sbb mov mov das mov leave inc push sahf lods lea sbb and pop jb imul fiadd or leave pop add rcll mov sbbb cs xchg inc loope,pt xchg push fild leave test in pop popf cmp in mov add sub add jnp shrb lods push lods enter adc in pop jecxz sub das rorl leave nop imulb pushf fs sub loope xchg xchg sbb cwtl call nop jmp pop jg jns xchg dec lock test cs push or push xor (bad) jg cltd nop (bad) push fadds xchg jne fsubrs xchg (bad) pop fdivl xchg popa sbb dec mov stc cmc sub enter (bad) repz call dec push adc cmp xchg lea dec xchg cltd mov bound mov (bad) notb push (bad) roll cmc or test push sub enter mov pop mov les ljmp add hlt mov adc scas outsb pop stc dec mov xor add sub push out sub push adc vmulps push je es popf outsb inc sbb (bad) pop or mov add xor cmp rclb fdivs iret jl mov jmp call prefetcht2 inc add fdivs arpl xlat cld dec or push pop xor jmp cmp mov adc fisttpll push fildl inc stos call (bad) fbld xor cmp int3 jle out mov ss and or ja sbb andl rclb mov call xor repz sbb sbb and loopne call push sub int xchg and out aam adcl dec mov test pop cld xchg or sbb (bad) jno mov dec loopne push adc mov jge cmpb dec or mov pop mulb add jae lcall repnz aad pop rcrb xor je sub sub incb (bad) incb jmp inc (bad) cmp scas or cld cli jbe insb jne stos add xchg jno adc daa add imul dec and sbb dec jae jo xor push mov or stos push pop jbe mov cmp xor push mov cmp shrd jl lea into push out aaa cmpsb lds adc fsub insb jecxz xor sbb xchg cltd dec pop pop (bad) adc insb sbb insb insb stos (bad) push addb cmp mov dec push sbb (bad) mov mov fwait andb sarl ret pop xor and repz mov pop mov in xchg jne sbb call addr16 sub add fdivrs inc cmp clc (bad) xor add mov pop movsb sub cmp inc enter sbb mov or icebp test cmp jl adc cmp ds repnz clc faddl jl jo jmp dec adc rorl into jnp or ds inc movl dec xor into call dec ds xlat inc xor sub fs xchg fistpl inc mov (bad) adc and jne or cmp jne test or sbb das sbb mov mov xchg xor push ljmp jge jae jae ja and shr lods push (bad) or aaa cmp je notb jle sub jae or jnp bound int and fsubr jne pushf nop mov and enter subl dec test mov (bad) xor fisubr jb mov xor sbb fs enter and cld jb xchg popa das in mov cltd push adc das pop xor mov adc sbb inc xor jbe adcl and jge in cmp jb jb in (bad) or cld dec jb push jb sbb lret fcompl je cs in lock jb jno pop xor jb mov jge out add xchg out or pop and mov test add push in mov dec add das or dec pop rorl sarb mov aad mov push ret ret bound std sub or cltd jnp push mov and add roll xchg cmp lods add pop add or int ret imul adc aam push ljmp pop adc pop jle rcr adc out inc cwtl cmpsb or inc push cmp pop je inc add pop push add (bad) cmp es sub push and (bad) adc adc or cmp enter pushf fistpl mov addr16 xor xor or pop pop cmpsb leave clc sub pop and pop sbb xchg lret mov cmp mov mov shr jle fs and cwtl mov adc add xor aaa je pop test pop scas pushf iret adc inc movsb lods cld xchg mov mov add lods mov pop lods dec push pop cmp jo dec add gs add cmp icebp lea pushf pop mov fwait ljmp pushf push push orl and mov jmp sub out push fs imulb rcrb push inc push fnsave std xchg add mov sub jp jmp pop mov int push cmpsl xor adc dec and add pop sub push add adc pop sub add jae push sub cmp add fadds rcll aam outsb imul or add sub sub pop adc fs inc sub dec push cs sbb add mov jecxz imul inc adc fs shr fs adc aaa loopne jbe and test add cmp mov daa adc jns mov push inc cmp pop cmp adc mov je push push and je dec aaa mov js pop fidivl pop pushf es ljmp mov fadd add dec jns jmp pop push xchg imul or jb cmp (bad) and test mov jg pusha jns mov inc adc mov mov or push lret or sbb cmp lret sbb scas adc std ss bound jp push movsl or fs (bad) mov ss dec push out bound add bound lret pop jl inc mov push nop cmp sbb in mov pop inc dec insl sar adc pop mov dec add add js and xor adc inc add add cmp rolb or lods push (bad) jne fdivr mov test sbb bound enter pop add sbb jg dec and ds inc mov sub ret sub jg and (bad) lea push add inc jns jmp fcmovb pop sub fsubs add ljmp cmp rclb nop popa or dec cmpsl lea pop pusha (bad) je adc je and test or je fdivrs mov jne push push sub jp add pusha ja jns jnp bound xor jo dec sbb cmpsl or mov iret lock add xchg sbb sub sbb loope push mov xor add stc inc out lcall and jne gs arpl (bad) xor ficomp adc mov dec mov jne adc xchg xchg pop idiv sub mov and (bad) push repnz sub and sub imul cs xchg nop inc push syscall xchg or dec enter or sub inc std pusha push pandn and (bad) aad pop loop imul test sbb cmp add pop dec js pop es jne,pt cmp add call add mov movsl aas es call mov pop sbb in in and lods push sub lret sbb xor call jp mov repnz jg jo mov leave lods loope aaa push adc cmpb jb inc mov iret nop/reserved adc push inc dec (bad) or cs xor icebp mov and loop push jp stc (bad) xchg (bad) incl add inc sahf inc (bad) cmp nop xchg addr16 sbb dec inc movsb mov adc push push mov inc int pop pushf pop or cmp xorl jle adc bound and pushf call pushl movsb call xchg mov test cltd and and mov ret fsub cmpsb xchg add movsb inc stos jge sbb inc dec xor or jp call enter inc mov and in cmpb and lods lods ja adc xor adc imul lods jle fwait sub adc gs lods inc mov insl add sub mov sbb enter add cmp xor mov mov scas mov pop in sarb and test xor mov jge enter stc pushf pusha mov jb stos fwait mov lahf mov or call and cmpb xor add es sbb and scas dec xchg fs add inc inc and ja cmpl movsb leave shr es mov dec daa cmp mov dec push sbb push in xchg inc lock arpl rolb iret xchg arpl or push add inc and nop addr16 xchg dec arpl cmp xor push sbb jle jb jno xchg sbb repnz dec test dec pop jmp and inc (bad) push popf or or stc xor imul scas mov fidivrl mov adc lret xchg or pop sub and dec or add dec pop mov adc push jb push insb imul fcmovu negb in cmp loop cltd inc push nop (bad) sub add sub sub push pop xchg mov push push xor cmp sub inc xchg xor adc or cmp adc test decb push mov (bad) mulb lods xchg pop movsb dec aad mov sub push clc jp ficom xchg pop mov incb jl xor push jmp lea push loope push stc lret ret push call sarb fisttp ja pop int push ffree sbb xchg ds dec fistp and push fmul fsubrs push push mov xchg pop or pusha sub stos xchg dec sub (bad) iret popf add mov dec push sbb lret data16 cli jbe or inc movsl xchg shr test roll jb xor and xchg (bad) sub dec dec dec sbbl xor jns in dec js push push push xchg (bad) sub mov xchg push pop dec sub mov xor xor fadds cmp push xlat pop outsl and test jnp nop pusha add xor push flds imul sbb in test jp and and cmp pop jmp push std xchg push enter jecxz push mov jns add dec inc push cmp jns add imul out mov nop add xchg cmp cmpsl imul push repnz (bad) dec or pushf dec pop enter cmp add sbb cmpsb cs inc dec jb or or xchg sbb jb and popf pop mov (bad) cmp adc pop movsw bound repnz jb movsl inc pop dec hlt dec add push jnp mov inc xchg jl mov inc mov xchg dec push vmwrite dec stos dec leave inc push and jo add pop mov leave or std mov daa jns daa rcll mov cmp enter xchg add xchg xchg cli adc push xchg push jb push call push das in and enter lock xor enter dec pushf adc push dec push and leave push test jb push stos out das adc cmpsl in adc inc push inc jb dec push out adc enter adc push add adc push mov leave add leave lret adc adc dec push pop lahf pop push inc lahf inc push leave dec cmp push out jb pop repnz std sahf stc push pop jb push ficompl cmp xchg in ja mov leave add leave int push adc add cmp push push in repnz in lock sub add add pushf addb ja and nop pop call and loop lock jns repnz jb push sbb xchg cmp add inc dec inc and in in cmp leave mov xchg dec xor pushf adc and jge nop push enter (bad) sbb nop xchg mov nop adc xacquire leave add sbb add pop sbb sbb pop in sbb dec push and jb xchg cmp sbb inc add push repnz repnz sahf sbb inc out push inc pop repnz lahf inc cmc pop enter cwtl pop ret pop enter mov ja inc cmp mov shrb mov ret jle (bad) xchg mov fidiv inc scas dec dec dec or mov dec dec add mov scas in pop rorl leave mov stos mov cmp mov sahf sub xchg lea insb mov leave inc mov sub push inc dec ja pop cs ret jge or cmp and mov popa mov ret sub pusha insl adc push inc imul fidivl pop and push adc cmp jg adc lret push push push inc ja mov cmpsb mov xor es lods dec les mov jmp xor call xchg ds fisttp aas aaa pop movsl sub mov xchg add jmp aam dec leave enter sar xchg lret mov cmp insb jo xor loope sar test leave int3 jmp incl cmp inc mov ret cmp lcall add stc sar daa lods xchg jl pop in jmp incb adc lret loope pusha and xchg xor sarb add pushf dec mov sub push leave mov jne,pn and cmp aas clc sahf mov (bad) mov in xchg pop repnz add push lret enter adc inc add adc and dec sbb and or sbb adc jns inc movsl inc mov xor and (bad) or add push xor or push sbb das push mov orb jge or jne pop adc mov loopne adc jne sbb fisttp dec xor jns in mov fnstenv mov movsb push add pop daa or bound and mov push fs sub add jp js push cmp xchg add and fistpll jl ret sbb cmp test lock pop push jne lea or add inc inc sbb sub or loope pop and aam jnp jnp (bad) xor push pop rcrl mov jmp adc sbbl imul xor add mov sub inc fwait fwait xchg or or adc jnp (bad) popf ficomp jne sbb loop jg and push cmp imul imul daa ret sbb in cld add jo sbb xor or dec cmp and je movsb mov add test arpl jne and xor pushf cmp imul movntq out sub and push enter fnsave fstl das fnstsw and in fucomp fdivr fmull enter loop jp ror into fsubl jne add packssdw int3 xor scas sub or jae jne mov mov scas push ret sti sarb imul daa lret je daa push outsl or mov pop push pushf (bad) (bad) xor pushf mov adc gs cmp cmp mov or (bad) mov sbb push cld jl sub jmp andl cmp push push rolb testb or sbb mov xor xchg mov lahf adc call sbb xor out mov cld cmp mov cmp pushf cltd fildl cmp add add cmp imulb cmp fstpl and push orl and jecxz lds jmp push loopne adc cmp hlt mov (bad) push cmp data16 xor subl outsb inc outsb call call or add cmp fwait mov xor adc (bad) xchg xor addb or repnz call cmp fisubrl leave dec cltd fsubl push sbb and mov (bad) xor cmp lock fiadd jns imul call dec es in sub pop jnp dec lock xchg cmp push or cmpsb pushf add or roll and imul enterw push fcom mov cwtl dec xor sbb das sbb pop inc call jb jle mov sub nop inc roll rolb nop out inc test xor and jns faddl lods cmpb nop pop jb xchg xchg pop cli and add inc dec cmp lds rcrb in pop or mov outsl xchg flds sub or ror test cld mov jge sbb ret inc mov rorb add jno shlb jnp push and data16 pop in pop pop popa mov push xchg sub cltd mov lret sar je gs decl dec pusha es addr16 in inc (bad) jae addr16 and jns mov jmp push jb (bad) sub mov push leave and (bad) cmp and dec push pop mov jns imul dec and xor insl dec xor jns daa insb addr16 call sub add mov fwait aam and jbe cmp xchg inc xor jne jmp mov pop xor pusha outsl xorl inc loop sbb jp and adc add shlb mov sub pop dec cmpl jb or inc add imul (bad) rcrl popa mov (bad) mov mov mov mov mov lcall out pop nop insb jno pop inc subb or bnd jmp mov push (bad) xor xor mov roll adc in inc loop dec cmp pop pop jb decb loop lea ret iret mov dec subl sbb mov push repnz xor dec pop and cmp jge (bad) xchg pop jb std sbbl jb push and inc test leave out pop dec insl icebp xor add pop inc pop dec sub sub shlb dec (bad) imul daa stos loope cmpl mov sub and add sub jb add cmp lods pop adc push add xchg lea and jo imul sti idivb imul adc or (bad) jecxz inc xor push roll rol ffree arpl (bad) xor or jg mov sahf mov mov and sub js mov or push cmpsl mov int pop adc lea pop les dec pop xchg rorb lahf push (bad) (bad) lods pop sbb pusha and sbb ret mov inc cld add into dec xor xchg les xor lcall daa dec cmp repz andl lods leave add enter sub xor xchg dec nop inc pop leave dec inc sub mov dec inc (bad) sub lret dec dec mov dec mov leave push icebp pop push mov adc lds sarl push icebp xor sbb or jl das xchg call cmp lret repnz aaa inc jecxz jb push leave jae repz test xchg mov push xchg es lea and inc je in push loop mov adc aam fs push adc add call or xchg sub xor pushf loope lret enter dec and leave add ds nop jb xchg sbb cmp nop inc push jns and cmp push cmp mov cmp mov movsb cmp inc or fstpl inc add fldl mov fstpl addb sarb sub mov adc insb mov cwtl ds xchg add pop xchg sbb jno stc sbb cmpsl out leave sub in imul std and outsb mov andl mov add enter and mov inc push inc jae jb inc sarb and push push jb inc inc cmp sub xchg cmp sbb cwtl inc push sbb sub push rol mov int adc lods repnz sbb pushf or loop (bad) cld pop inc lds dec adc nop in lret sub cmpsb repnz mov xchg and mov sub cmp das addr16 enter out les adc inc push fdivrl cmpsl mov jb cmp cmp cmp adc inc cltd (bad) adc mov xor or mov pop add leave jne and jns add mov mov sub push and inc dec enter mov pop inc pop pop and xchg cmp jns leave mov xchg inc lcall add les enter mov and das fcmovnu or mov add and test aaa pop mov in repnz aaa xchg inc nop sbb aaa or pushf insb inc sbb and push mov loopne repnz push jge adc jb (bad) sub xchg cmp sbb sbb push and in into xor nop pop jge jge gs pop xor decb and push sbb or repnz push rol and push jmp jb xlat sub xor pop fnstcw adc movsb xor or xor cld mov mov cmp rclb cli insb sbb (bad) adc ljmp sbb es not jae cmp adc mov pushf aam popw push ret xor mov or jne xor dec add clc jmp add push cmp je (bad) cmp jne into pop push jecxz test pop mov pop mov call out mov jg sub fdivrs popf pop jmp and sarb iret mov mov mov mov jno pop lock and in loop jge aaa xor shr inc mov sbb sbb sbb pop mov and push push outsl clc sbb push push mov sbb cmp xchg cmp sub popf loop jae outsb add jo mov movsb and lcall (bad) xor cmp inc xchg cmp stos xchg fmull and jbe dec fisttpll cmp inc mov sbb xchg sbb mov cmpl sbb xor jl pop add repnz dec in jae cli mov mov sbb push ficomp push jno sbb mov cmpl cmp cmp fldenv mov push adc sub ja (bad) lret adc xchg inc adc les dec test pop add enter and add pop aad xchg mov (bad) mov jb mov lret ss or out jle mov pavgb xchg push sub mov pusha movsb push push xchg xor push fildl mov pop imul call call adc dec ret scas add call mov cwtl pop jmp call or xchg lods inc sub lahf jnp ja or movsl xchg test pushf mov jnp test movsb jp inc xchg pop mov pop test fldl xor inc je mov cmp jne cmp ja call dec add add sbb jge mov sub rolb and daa xlat mov jno xor pop and xor mov pop test push push push mov inc pop adc or jnp cmpsl cmp into sarl sbb stos shrb lea je rcrb dec add xor or cmp das or flds cmp ja lea neg xchg dec mov stos shll das inc push xlat adc add inc push pop cmpsb xor int and fstpl adc ja inc mov movswl jb clc adc in (bad) mov int3 mov adc es repnz or and xor int dec push pop push adc sidtl cmovle bound lods or int3 js ss pop rcll scas nop inc and inc jb js sub leave or sub wrmsr jle mov enter movsb sbbl inc scas cmpsb iret jns add xchg dec int3 je mov (bad) je add mov xchg push xchg or scas fs sbb jo or jae cwtl int mov or icebp in call divb (bad) xor sbb loopne pop mov and sub out pop dec scas fstps mov cmp nop lods flds mov sbb or stos xchg in int3 jge and adc enter movsb mov scas xchg xchg mov pop sub fadds (bad) mov inc test add inc push sbb add add les mov popf and sub sub in pop lret xchg xor xor loopne inc fwait push and test fcomp xor xor roll xchg (bad) xlat fwait cltd nop add int3 les push sbbl mov das cld sub add or (bad) push call arpl or test rorb fistl push sub fisubr leave sbb pop xor es popf and test leave and in (bad) iret fdivrs jb stos xor add xchg mov push hlt and in repz mov and or pop mov push fistpll test (bad) popl jne ds push pop cmp inc inc cltd call clc add adc lcall mov jne xchg or push cli psubusw jp incl pop jmp xchg cmc cmpl std andl hlt clc lcall out xor adc (bad) out adc andb xor cmp ljmp sub add cmp jge mov push sub insl or sbb push jne call sbb mov ret sbb push test loop inc pop inc inc scas loope ss (bad) pop test pop inc cvtdq2ps or xor pop sbb or in push nop insl xchg inc adc push adc cmpsb loope push jp out cmp jae inc sahf fs jecxz jmp jo ret insl adc test insl in andb dec aam mov mov fsubrl sub pop jnp iret adc arpl movsb lods inc test dec xor jp and adc adc inc dec leave cmpsl or sahf xor and aam xchg or push rclb (bad) push ret and cmpb (bad) and jb dec push push adc push jns add jmp xchg push xor notb mov and or jb xchg push leave (bad) and xchg mov or adc cmp or shlb rolb dec pop add inc xchg add (bad) vunpcklps in add nop pop leave fnstcw or enter cld shrl leave sub add add nop adc inc into add dec push xor pop add sub fiaddl movsb test add nop sbb in enter or (bad) xchg sub sbb mov xchg mov leave (bad) std cmp adc and in adc adc cmp sarb mov add das cmp and and and adc pop and aas mov rorb and jns sbb pushf dec mov std std incb xchg pop jb insb fistp in and in jb test lods pusha add mov pop leave cmp inc push inc mov leave mov pop test mov or je mov and popa dec cmpsl pop push leave or and inc or pushf sub inc mov sti std and enter adc mov leave add push add push add xchg push and dec push and push add inc repnz add sti std push leave and stos iret adc ret xorb pop andb std mov or mov or jns jl inc stc std movsl test add or adc ror sbb mov in repnz std les xor and cmc mov and jp pushf idiv or xchg cmpsb insb adc ror cmp sub pop repz in repnz idiv xor mov jb js pop mov xchg call popa movsl enter or and mov icebp das jns pop xor std jmp jns or fidivrl lret mov div and hlt std inc cmpsl in das in xchg dec or cmp or cmp shr add pop jb cmpsb (bad) xchg lea add pop mov sub out div std cmpsl xchg adc mov and add jg pmulhuw jge xchg scas sbb sbb das mov hlt inc mov or mov (bad) scas dec lods cmp pop and rorb in or or test mov into push sub das mulb sbbb das and and pusha inc jp sbb pop xor xchg pop jne sub fmuls sub and or jg push dec push stc dec mov push xor sar xor xor xchg dec inc por pop imul jns scas mov and mov add ds dec mov mov or mov cmc adc mov sbb jp mov or pusha cmp popa enter popa pop loopne mov add xchg jl aas (bad) call lods dec dec cltd std (bad) mov js pushf nop or daa add int (bad) jbe fcoms sbb jecxz dec push jecxz cmp adc or pop daa nop pop ss mov (bad) fimul xchg std mov (bad) mov and out mov rol add imul flds icebp and inc pop inc fildl ljmp add and out ja and outsl add pop pop mov outsb push and divps dec (bad) and add aas cmp ljmp or cmp call push int gs push add rcr or and push push orl pop push mov mov push cmp notb int xchg test sub add sub jg add movsl push adc mov xor jae js pop push out hlt mov mull or lea adc jb mov inc (bad) push cmp jnp xor sbb push (bad) xor cmp (bad) mov mov or or pushl and daa adc cmp mov sub aas iret (bad) stos mov mov jp in sub mov movsl xor or stos jo mov adcl repnz jl pop leave cmp mov enter outsl and sub adc sbb outsb push scas gs sub sbb lea inc loope es sub lock add xchg sub cmp push jne leave xchg push or dec and xchg pop or inc or imul and push mov out sbb sbb insl jne mov std jbe (bad) clc jl,pt pop jmp inc imul icebp push fistp jg inc cmp dec icebp jecxz ljmp iret dec jecxz nop pop lock xchg and push neg mov sub mov push jle call (bad) ret test dec out ret sub incl adc and cmp rorb xor add pop mov inc add sub pushf stos add add insb jbe or jbe cmp mov xor inc stos xor pop je adcb insb pusha int mov jo add or xchg dec (bad) fdivrl xor adc dec lret or call cld rcrb push (bad) jb pop or jle,pt adc (bad) jb push repnz add (bad) or sbb dec clc inc insb or or jns mov shll enter mov sbb rclb gs daa mov enter (bad) fld1 or xor out cltd push jg stc pusha pop jg xchg jmp ret jbe jle rolb inc call push mov xor dec lods popf sbb mov mov fisubrl mov or cwtl or movsb pop call adc lcall sub insb or xor das dec or cmp mov iret call xor leave lret jmp push cmp je mov cmp mov or or ds lock jmp fcmovnb adc pop repz call inc pop (bad) mov in push sti aad push jns fdivr add int pop jo jbe lahf aam xchg add iret addl mov adc adc mov xor push lock push jnp lds ret jmp cmpb sbb adc mov aam sub pop cmpsb push cmp call xchg add xchg test xor int3 (bad) push mov or mov add loop or mov sbb jno push jle add in xchg mov jecxz divl xor push js out out cmp push cltd cmp and ja or enter cs cmpsb fsubs sahf fadds jg pop and jle lods or jge mov jge cmp jne adc aam pop fs add test and jae xor ficom lods or xlat cwtl lcall aam jne ds or jp or push xlat lret shlb add mov insl lret jmp cmp push push scas sub (bad) sbb pusha call cmp push mov aad ja test pop je mov out rorb pushf or sbbl push arpl xor mov cmp je add and nop daa cmp jne lret fcomps cwtl cmp xchg inc mov inc jns xor (bad) xor outsl sub lock jmp add jmp or mov mov mov cmp sarl rol mov rolb xchg adc pop xchg adcl jne mov in lea pop xchg pop pop stc shl ret out rclb and mov mov inc nop jp xchg xchg (bad) pop push add jo add mov cmp xor add sub cmp jmp daa fsubl adcb loopne gs pop mov add inc xor xchg out lods lds sub test push imul xchg or sub jmp (bad) xor addr16 mov sti mov daa popf pop or xchg or scas xchg add (bad) push jb jmp bound pop dec pop push sahf mov sub inc inc ja mov or cmpsb fdecstp jo jmp jmp test sub ret cs ljmp movsb les notl sub sahf xchg adc jb push add inc cmp jbe add dec pop fs test jecxz xchg mov fs js pcmpeqw push push and mov aam sti fidivr out adc cmp (bad) lcall lcall mov xchg mov inc jns push enter addr16 (bad) in cld or idiv ljmp arpl dec pushf mov push arpl sub les sbb enter leave add inc mov add add daa into sub mov mov stos popa xor (bad) jae and mov lcall and add push lods add mov or (bad) sbb and std pop loopne push (bad) ja jge dec or (bad) xchg xor xchg lods mov push loop negl xchg mov jmp add sbb xchg dec cmp orl out scas jmp xor imul sbb dec lahf int jg and xchg cmp (bad) movsb cmp and jecxz cmpsb sub cmp mov clc adc and xor fucom mov loope jne mov ret xchg or dec into sbb daa jg cmp in in movb movsl dec adc inc cltd mov mov scas fbstp mov xor xchg cmp (bad) mov stos cltd jns daa loope fidivl xchg cld movb clc loopne fidiv test fucomp push pcmpgtd repnz cmc pop adc in mov notb inc enter loope loopne mov inc mov inc sahf xchg jecxz sbb push xchg out (bad) aas cld (bad) call lea dec loope pusha cmp xor jo xchg cld adc or lret inc sub xchg mov mov cld scas (bad) loopne sti les loopne pop adc adc mov sbb mov jb xchg outsl mov pop loopne repnz dec adcb fnstsw mov mov or call loop mov push and rolb aaa ds inc sub call xchg pop and jne inc scas shrb xchg inc jge enter cmp pop aaa push xor sub test leave push cmpsb xlat pop flds jl cwtl lock mov scas push mov out (bad) jl dec (bad) test test fwait cmpsl or jmp inc inc sub pop jg mov and movsb repnz stos imul repnz pop pushf call push sbb neg jmp fdivrl call enter push call call mov jb popf xchg and leave rolb dec enter nop clc cmpsb jmp cmp je sub jb cmp mov jle aam mov cmp out rcrb outsb push nop aam sbb lock dec pushf mov call cmp and fcmovnu mov sbb sub inc push movsb jns push es cli imul incb mov mov mov mov xchg jmp sbb push push or add idiv incb lods test jne fs pop dec push sbb add pop in call test pop iret call call daa push stos div pmuludq daa pop daa mov imul call das mov push cmp inc fisubl mov pop lea movsl imul fs push in idivb repz call add scas cld pop xor jne mov and pushf fs lcall repnz nop jne mov mov ss dec pop xchg fistpll nop lret or pop jp xor push (bad) and out jge js and xor dec daa out es fimull push leave enter or inc cmp push in fildl iret jmp cmp push lea sub push sub and and and jb sub ficompl js fnstenv pop mov cmp jbe add push add js sbb dec inc fidivl cmp push roll aam sub repnz (bad) mov mov and jns out adc sbbb mov (bad) pop pop and in call adc jb mov cmp es pop sbb push enter ficompl add push fidivrl fisubl jmp inc pop test fldlg2 fldcw mov pop inc sahf jb nop flds or in and or jns xchg lahf fcoms daa test fadds leave dec jmp add dec dec or inc into scas push and rorl inc mov pop push xchg xlat inc dec and aam inc pop enter shlb pop mov fwait rorb (bad) je scas (bad) pop and pop aam pop jb jl call pushf mov nop pop leave pop rcll or and into dec in dec push mov stos jo xchg dec pop and lret ljmp jecxz aad inc repnz jo xchg icebp dec repnz pop scas aam outsl push xchg test pop rorb jns add and in paddusb rcl repnz add xor mov xchg loop in cmp loope loop pop nop add and repnz pop in cmp in jb pop int3 sub cmp and ror dec enter stos int ljmp es repnz pop inc loope shrl add add int into and jns push imul sbb test add add sahf pushf in int3 cmp cs lds seto sbb dec subl std lahf xchg or aam movsl add add add cs push sarb ret add or shrb sub rol cmp scas sbb adc unpckhps mov in xchg add inc xlat jno lret add lahf add push bnd sar mov in out nop pop jp repz xor (bad) nop inc mov rclb mov and sbb adc sbb dec mov push xchg pop leave in lea test pop dec daa in mov aad push daa mov jl lret cli std rorb nop (bad) jbe mov xchg sarl pop das push (bad) cmpsl repnz xor ret into (bad) dec xchg inc or or pop adc aas xor and add push push incl (bad) cmp sahf push push cltd xchg leave pop or dec push xor cmp push rorl or mov in xchg adcl or enter mov lods push inc xchg popf mov mov inc imul mov pop adc aam jge add xor fwait mov es leave int or adc mov add mov mov adc rcll ja pop and fadds inc or fistpl push push xchg loope in xchg aaa mov jl insb mov jne sbb inc dec dec push dec adc subl sbb adc push test pop dec call and ret or in (bad) xchg stc mov dec outsb dec ds or pushf dec pop sbb icebp (bad) pop mov in sti mov stc pushf inc xor out mov cmp lea and movb cmp pop push loope icebp dec mov cmp in mov add and (bad) jae repnz mov loopne and leave pop cmp lcall test lret jb mov adc sub add inc inc dec lds in jb cs dec cmpsb xchg xchg fmuls repnz lods dec in push mov push cld (bad) fcoms gs pop outsb fdivs xchg lret or pusha pop push or sub addb or jb dec lods andb cmp add xlat insb leave int inc lret adc pop xchg sub nop mov xchg fdivs lret and push jg int3 mov xchg iret aas sub stos mov rorl jg loop or aad daa nop xchg test addr16 xchg pop ds mov mov cmp je push leave push push int3 jge mov lret xchg or adc sub sbbb in mov cmpb enter int3 or and dec and push andb loope enter mov cmp lahf pop repnz je push repz mov xchg dec and inc push mov fs out mov and add out pushf or cmpb leave push bnd repz mov fs dec dec cmpsb pushf outsb mov pop repz pushf test mov cmp mov push jb adc or push adc lret mov stc mov fisubl adc jecxz enter jle push mov dec and and and push (bad) fdivrs mov mov pop cltd sub mov mov gs pop mov ret mov cmp sbb outsl in hlt test or repz fdivs xchg inc (bad) scas aam mov cmp data16 xchg inc repnz push scas aam enter mov cmp nop (bad) and test mov daa nop xchg sub aam dec hlt pmulhuw push scas aam mov xchg sbb inc jb pop jnp add lock mov push mov and mov das nop and aad xchg sbb lods add pop inc push cmpsb in lods lock mov leave xchg lods lock pop sbb jge adc cmp dec cmpsb xchg xchg mov lock adc inc (bad) push mov (bad) enter mov jns and pop sub call jnp pushf push or fnsave push out cwtl hlt inc pop (bad) or pop pushf fnstsw xor cs popa fdivrl cmp sub and (bad) or aas jge and push inc cmp or rclb (bad) std mov push push xor dec fildl into imulb mov add dec (bad) cmp lods adc out pop cmp sbb push movsl pop pop sbb cltd mov sub insb ret xor jge sahf xlat add fldt fisttp lods and popf xchg adc aaa dec push sub cltd mov or jle push lret dec movsb sub xchg call daa push pop nop popa pushf inc sub mov stos jle inc in fldl push dec fwait ds js mov fmuls inc dec movsb shrb data16 sbb mov addl addr16 dec mov pop and adc or (bad) xor pop add popf addl xchg sti jle jo popa push clc xor loop jp out idivl push (bad) jne test inc out push aam push inc adc inc and call pusha mov adc sub ss mov movsb pop pop add shlb mov or pop stos std inc adc and pop push pop inc xor fsubs sub call inc mov jmp cmp jg inc mov adc jge push push loop pop ret stc inc add loopne outsb jl out (bad) shrl and (bad) pop cmpsl nop lret lods jge sub jae jp std add sub imul repz outsb loopne loope or mov test add add repnz mov sub cmp inc loopne jb sbb movsl rolb leave push sbb push mov jmp in sbb ret ret lods call cmp sub dec pop nop pop enter mov push pop xor jb mov incb in cmp and stos push push xor sbb xchg call mov scas pusha xor movsl ret movsb jp mov divb insb mov (bad) imul lahf aas stc mov mov ret cmp push jne jecxz rorl mov nop in inc imul loop les lret push call adc xchg test push adc arpl std call jo inc sub iret pusha stos inc aas fdivs pop adc and or (bad) in jg or sbb outsb xor jbe repz xchg leave jae clc inc jbe push inc fwait (bad) (bad) cs jb int3 (bad) aaa lcall stos loopne scas xlat rcrb mov add pop lret dec gs js mov xlat into jno and fst add xchg xchg inc dec cmpb and mov arpl mov aad jo lret jns adc orl mov repnz pop enter cld std rcrl cmp in and inc mov out sti std lret and shrb dec fcomi lods and dec repnz in push jb mov mov add (bad) mov enter hlt mov (bad) dec enter std sbb push xor pop add es cltd xor mov mov xor cmp test xor lahf pop jb xchg push aaa or (bad) nop mov lahf push (bad) fdivp sahf add adc enter cmp int add inc ds nop add inc pop add sub xchg lods negb pushf fs aaa leave pop call stos inc shlb fs loop jbe nop inc fisub (bad) jge lret enter pusha jo out mov int3 jle aad dec cs and in sub call cwtl out jno sbb inc jmp (bad) sti cld (bad) xor cmp mov repnz pop add sub mov aaa mov pop cwtl (bad) xchg cmpsb in cmp mov popl in in jmp mov cmp aas rcrl push push xor repnz sbb xchg pop enter movsl jb dec es loope sbb xchg lret add pushf leave xor pop ljmp cmp pop aaa or insl andb in dec mov leave push xor movsl mov shll dec adc call cmpsb popf add (bad) not and and mov jecxz insb add push jmp or adc inc or pop pop jg mov xor push and push mov es nop xor sbb xchg mov add or add jle dec mov fisubl cmp dec mov xchg popf mov mov sub out cmp jl loop dec mov sbb (bad) mov sbb add (bad) into outsb cmp jb ret adc sarl out incb ret (bad) or adc push js lock sbb loope dec loopne add inc subl cwtl adc pusha mov mov test icebp jmp or inc lea cmp xchg pop push pop (bad) add in (bad) mov push xchg xchg mov rcr mov das dec (bad) xor xchg add jge jb adc jle jb push js stos outsb sub mov or inc push mov push dec gs adc adc outsl imul in dec xor mov xchg pop loope sar dec inc arpl sarb insl push enterw cltd mov ss cli out xchg lcall js aas loopne jle,pt in rcl adc sbb push mov mov xor insl arpl xchg sub loopne push sbb (bad) je xor clc xchg inc cmp jle sub sbb dec out jo inc sbb jnp mov inc call jo adc lods cwtl popf push and pop mov in mov lea insb loopne jnp mov push cmpsb push loope jb xor lahf out inc mov add sub insb add shll incb cwtl sub outsl dec nop fcomp je aad xor cmp and fnsave push add les outsb pop or in jmp js cmp int je cmp test outsb push inc cmp xchg sbb dec pushl push push mov pop jmp sub in popa loope pop and aaa movl push es sbb sahf dec out add std (bad) outsb cwtl call mov sub les pusha inc mov je sub nop ret mov push ret xlat inc in push (bad) or dec adcb inc insb call or in dec push mov (bad) xchg inc lods adc arpl vmwrite mov inc push sti sbb mov pop (bad) jg fdivs push and test rcrb xor je stc cmp (bad) repz mov mov mov nop dec fdivrl lods stc or lock pop sub call adc or aaa stc pop pop pop dec pushf sti mov in mov addb jl xor loope xchg mov je sbb cmp sbb mov add arpl sbb call or add mov std stos sub xor into stc xchg push mov xchg int push orl push orl sbb les outsb xor adc lea sbb in mov loop cmp insb xchg lahf lahf (bad) es call aas mov push std aaa aaa loope sbb push lock and cmpsl (bad) nop and sbb pop add inc mov shlb or add or or ret (bad) inc mov pushf sub sbb nop scas adc aaa icebp stos movsl std dec scas vmwrite push mov xchg rol lea stos ds sbb cld xchg mov cmpsb adc jle out and scas repz call lret insb adc fldenv adc push ret dec mov mov jnp jmp sub dec and pop cltd and jae mov push xchg add jne jo jle insl dec and pop add sub push xor arpl orl test jo inc (bad) mov push das dec mov fmuls and xchg sub push cmp and dec inc fwait sti ja ret test aam xchg sub xchg or or and mov ficoml pop push pop jns enter or das push mov cwtl in push pop movsb and aas ss jo jo nop and dec repnz sbb insl flds cmovo imul lea lods adcb iret popa ret jo xor pop movsb push add aas xor call xorb adcl sbb cli jnp mov (bad) call xchg cmp or push pop cmp mov jge xor mov jp cmp and fisubr out divb ss js popl ljmp imul push rol mov mov (bad) cld das push test inc pop push imul imul mov add mov cmp pop pushf xchg add push inc jbe jo sahf lcall add cs call repnz xchg lret push sub cmp sbb arpl xchg cmp adc mov (bad) dec or ss orb push cmp mov push jbe call dec pop aam and mov call push dec out aad hlt xchg shll nop sbb adcb cmp loop push leave push and xchg in (bad) (bad) jge adc add sub push les xor xor orl push jo adc sbb push das call fs pushf jo dec mov cld cs lods pop adc sub dec lods out dec add clc mov xlat sub cmpsl and leave pop mov cmp dec aam mul xor inc fstpt test inc outsb cwtl imul dec movsb pop les sub and xor movsb jmp inc pop mov repz lahf push mov mov sub (bad) adc xchg fwait cli lock adc xorl shlb mov aas fidivrl mov xchg adc add xor enter xchg jns in in push movsb xor cmp movsb addb sub push add dec cwtl fistpll add push mov adc sub mov (bad) sbb (bad) dec dec loopne (bad) xor mov or adc pop and out imul push inc inc add out addb iret add cmp jae sbb inc add or mov test pop or mov stos pop add fist cmp jecxz or clc xchg jne add movl jmp fcomp and jge dec cmp in xorb adc lea test mov dec add test sbb aam push icebp lret pusha movsb addl je cmp or pushl jle or mov xchg jne pop pusha mov inc add add mov jmp loopne push add inc add add or aad addb mov mov sti (bad) movl push push sarl mov cmp add dec mov cmp ret xor inc inc inc inc push or dec addr16 (bad) xor push dec xchg and cmp dec (bad) lock pop inc daa add repz sub adc and adc cmp sbb test enter movl loope xchg jne or sar xchg test jbe sahf jmp arpl inc push mov pop das cmp inc push ljmp imul inc adc ret negl (bad) xor std inc add inc cmpb arpl std test decb std aam rorl dec push rolb adc bound mov mov jne xor jp jle or out sbb push stos sbbb icebp jmp jne ret gs xor movl sbb imul or mov inc mov xchg jbe or and rol jmp sub shl ss xor or add stc orl cmp dec negb fnstenv mov mov push or cmp mov test nop xchg test or xor xchg (bad) mov vmwrite ret out cmp inc cwtl in add inc nop (bad) and add or xchg sbb (bad) mov stc nop movsb movsb pop pop lods push jmp fldl mov test test or and fstl ds in nop (bad) jle mov addr16 adc mov movsb push add sub jmp lods and inc mov pop mov or stos mov pop fiadd pop out rcrl mov dec xlat cli movsb test mov inc mov jns jns mov stos push xchg fs add dec inc sahf out pusha stos or testl mov mov add out test pop push aam cwtl adc pop lods xlat push (bad) je data16 dec popa adc jl sti and jl aam (bad) adc test (bad) cld decl mov adc leave repz or (bad) in sbb sbb lahf inc mov adc dec insb aaa mov dec sub sbb dec mov add dec les mov aas xor movsb loopne add pop fsubrp dec lds or adc inc mov adc mov fs pop push mov fs fs fs les rclb aam or lds fstpt int3 jne lods in addl or xor dec imul adc sbb dec fcoml js pop enter adc hlt inc push in push roll push add inc or adc push xor xor data16 or pop and enter add push mov shrb sbb popf and sbb push or cmp (bad) mov inc mov xor data16 cmpsb mov mov jmp jge fsubrs xchg and aas faddl dec push test fwait adc (bad) xor cmc (bad) cmc test pop and xchg jb add adc adc jecxz adc xor or add push push rolb insl adc push movzbl loope outsl lds mov mov mov inc add and pop in and inc in out add xchg lret mov fisttpl addl int3 shlb xor mov (bad) popf divb es add fidivl and or or push mov pop jmp or jmp sbbl adc (bad) xchg xor sbb add and and ds xchg push mov call inc sbb jnp mov and movsb insb movsb push jne mov cmp into push test iret add fsubp adc ret js daa inc daa mov and adcl mov popa cwtl cmp ss cs out cmp and adc pop mov xor call add aas or mov fcoms fwait sbb js ja mov int pop stc pusha insl sub cmp mov jb fsubrs fs inc push rorb popf mov adc mov mov mov loopne jge pop insl sbb inc pusha jecxz dec mov ror lock xchg mov int3 cld rclb mov xor and sub jg adc adc dec adc pop leave xchg xchg adc and in dec rcll (bad) mov push add popf push xchg and mov jl (bad) pop mov push (bad) xor inc sub and repnz mov aad in cmp (bad) or add mov clc dec ds pop jl inc in xor cmp cmp mov popf xor push iret mov int cmp jmp fwait and xchg mov jmp arpl cmp sbb sbb std sets rol call repnz sbb cmp loopne jp adc jae nop movsb jb imul and add jp cmp fldenv lock lods jns or xchg pop lcall sbb cmp loopne je insl movsb icebp test push sub insb and mov loope cli mov loopne in cld jne dec and scas pop and xorps xchg push popa jl (bad) jmp sbb outsb dec mov push dec mov pop push imul sbb or cmp jg push jle push (bad) adc cmp mov faddl cmp enter (bad) out adc rorb js xor or call mov icebp addl xchg mov and xor dec inc xorb xchg movsb add sub mov push (bad) cmp push xor xor in add aam in sbb xor int3 add adc das xlat inc bound hlt dec sbb mov sarb or cmpsl pop and sbb fmuls das add je add inc (bad) jmp pop push adc ss lods or push mov mov or mov idivb jo and adc cwtl or outsl mov cmp cld arpl ss xor mov aad int pop xor (bad) mov push aaa mov jne movsb popa das add sub push les nop popl cmp pop leave or faddl pop fisttp cmc and xorl in cmp cmpsb or sbb pop dec add inc frstor push ja push mov mov push loope fistpl xchg movsbl add push pop add push subl imul mov jne (bad) and push sub sub pop jg lcall and fbstp cmpsb push sahf add xchg push es fmull or pop lret incb pop add clc sarl mov enter testb mov xchg punpckhdq mov inc push add lret pop loop or pop xchg gs lock sbb adc push cmpsl add repnz mov add (bad) mov mov or sub rorb or sub or inc push pushf xchg inc (bad) je or add add jl rorl pop stos clc cmp add xlat (bad) xor mov cltd xchg or jle icebp or jge mov xor test push inc enter lea stos mov push pushl dec mov add xchg cmp ret xor call pop shll std test sbb call add mov push inc or and mov xchg add dec idiv push test cmp je inc cmp inc cmp pop sub add dec ljmp pop add cmp je adc popf xchg hlt (bad) and test or rolb shlb inc jno orl (bad) aad mov mov enter inc dec sbb out test push clc les mov loopne push loope sti sahf ret mov add mov cmc scas push inc or pushf call adcl mov push es out add in int3 cs sub jb xor test pop mov and and or push jbe test sbb (bad) ljmp push push out pop push mov pop push lods jge xchg mov dec hlt jp ffree fdivrs or inc cmpsb lret or jge xchg stos push xchg rolb pop lcall pop pop xchg xchg loope sbb and jbe adc push mov cli cmpsl insl popa mov (bad) xor je mov xchg xchg push jmp cmp call add mov lret inc pop sub mov fild adc mov test dec pop setbe flds adc ja pop js pop push push jl dec mov aad imul fiaddl push pop jae and jp inc jb and push js ja mov test in sub add les sbb sub mov mov inc cmp arpl cmpsb imul pop add loopne ret pushl push call sub sub inc rorb jo pop dec dec les (bad) adc leave inc pop and (bad) aaa rorl ja ficom shl and adc ret and mov inc adc mov or int3 xor xchg cmp ret jle or xor xor popa jo mov adc lock xor add (bad) jno push test or cmp int3 sub insb push xor dec xor sub or pop dec mov inc sbb xchg std and jno mov jo jge (bad) mov mov jmp push gs std mov (bad) and sub fs (bad) mov xchg lods insl mov in shll les and mov mov fmull test mov sub (bad) add loopne jne or cmp and push movsb pushf std or jo inc push jmp in pop test je push mov (bad) push iret movsl push insb pop jne cwtl mov jmp aad mov add xor lahf fsubl notb or push add cmp in inc pop or or xor push xchg or push sbb or adc pop jmp fsubl out xor cmp mov iret cmp js push (bad) add or add in dec mov test dec outsl adc sub jp insl cwtl sbb js inc lea js sbb js outsl gs mov add pop or jg adc mov cmp aad mov adc pop cmpsl mov cmp lcall push push rol or pushl mov call cmpsb imul adc mov outsl jp sbb inc jmp (bad) hlt mov and insb loopne pop xchg fnstenv or inc mov (bad) into je xor ss push loopne dec jne pop (bad) mov in or test aaa xchg test add loop test in mov inc les cmp xchg pop cli sub push push imul (bad) rcl (bad) jmp jb cmp loopne inc andl fcoml mov dec lcall xor cltd inc stos clc add movsb push and jl rcl aam jmp push inc inc jle jmp movsl data16 jns sub and add xlat pop mov lahf jmp jge bound mov repnz or std imul sar dec lret mov add xchg les mov sbb scas push movsl add daa inc fldt out or adc jmp push jne sub adc in fcoml cmp push shrb in inc ds rolb cmp pop mov das cwtl or mov sbb and sub sbb out push pop mov dec add shrb jmp loope clc or in sub add cli rorb sub adc and pop add ret pop ret imul sub (bad) adc fstp fcompl test (bad) jb mov pop jae sbbl scas inc xchg xor xchg pop aas mov and add sbb dec or cltd push andb add mov mov mov and jnp or xor jle clc sbb and cmc add lods data16 repz test add or jmp or hlt pop xor push mov inc shl add add cs jo loopne xor fsubrp (bad) outsb pop pushf (bad) stos and jle sbb xor push jmp pop dec sahf sti xchg int mov sbb and sbb adc jge invd fmulp cmp stc mov fadd pushf sub add (bad) cwtl and adc or out xor pop push loope nop jmp fwait loope rcll add call cmpsb in or add and adc data16 (bad) sub mov add arpl mulb roll mov adc insl xor pop inc loopne insb mov mov mov (bad) xor mov jnp test mov or dec scas mov lods sbb std (bad) incl idivb insl mov nop cmpsl cmp cmp lret sub mov data16 jmp outsl hlt sbb roll xorb mov sbb popa cmpl inc dec push dec sbb das pop enter sbb aam sbb leave and frstor or and pop pusha sbb jmp inc adc xor add test rcll loop nop mov mov mov and or gs imulb pop xor dec movsb cmpsb pop movsl dec or inc and push test rorb push sub xchg xor lahf mov add cmp sbb sbb sbb cmp (bad) xchg dec (bad) or add jbe fnop sbb subl or fmuls or in cli mov je cmpsl repnz jae add ja out (bad) flds fcomps add dec out leave fnop out sbb push mov add or add xchg pop sbb add aas xchg pop flds or add flds and cmpsb lock std mov and adc mov faddl aam fstps dec pop sahf in call sbb out lcall mov xor addb leave adc stc xchg cwtl fisubr popf cltd mov mov add add inc or fstps push adcl inc xchg push fldcw and cmp sbb sub inc adc sets mov lret rcr pop jecxz jo mov sub fs (bad) mov insl jmp cmp out pop sbb and rcrl xor or mov xlat add mov ret pusha jle mov fmull fmull cld sub neg dec sbb adc inc mov mov mov pop std (bad) mov jno adc loopne jp and leave das (bad) ljmp fwait daa dec mov mov pop and std mov mov pop sbb seto dec fistpll jmp cs std sbb push adc and sub in pop mov sbb fs xchg mov inc in inc leave inc sti je sbb cltd in jno fisubr sbbl mov pop enter js call and and and outsl adcl pop push and pop enter ja out xchg dec xchg and xchg insl clts test outsb sub dec push in add and xchg incb leave lret (bad) pop out insb push inc cs jb pop and in xchg les enter cmc std loopne sub mov dec lds lret mov add in js or leave push jb cli cmp test cmp adc (bad) insb xor repnz test jne in enter sti xchg sbb mov add and xor add in movsb mov shl enter std icebp pop cmp repnz pop pop push imul sbb push mov orl dec jb cmp mov dec cmp xchg sbb dec mov xor test out inc cmpb subb jecxz in jb cmpsl push inc dec pop jb movsb pop adc or (bad) push std cmp imul xchg decl and adc or sbb mov push push mov xor xchg jbe push xor mov call jns addr16 les mov stos xchg pop (bad) fidivrl or push test je je and divl sbb (bad) je inc sbb (bad) (bad) in pop dec fistl shrb pop test jno cwtl enter into and adc pop cmpsl dec arpl out nop sti loopne push loopne sahf cmp inc mov call mov in dec icebp gs cmp add hlt jo (bad) enter pop add adc mov mov lods jo cmp inc sub dec in and pop invlpg lret inc test jae fs dec jl mov sub pusha xor push nop xchg mov outsl and dec pushf out push outsb cltd nop mov jne mov and hlt int xchg inc push push sbb loopne pop jbe push mov call in cs (bad) mov enter push xor and (bad) dec mov pop xchg xchg in arpl lods leave lret inc loope lods shrl push jp stos popa mov (bad) cmp out mov push xor ss sbb dec (bad) jmp and das jmp xchg inc dec enter jl sbb xchg xchg xchg outsb or outsb and enter mov xchg xchg xchg inc call sub enter sbb sub test loopne xchg inc mov sbb daa in das in mov in out inc push sbb lock gs imul mov xchg xchg xchg inc cwtl mov cmp xchg insb sub cmp int cmp mov add jge pushf or ljmp jmp js adc push pop int mov cs lods pushf insb subb imul sahf sbb jecxz sbbl pop jo lret dec adc adc das fnsave and push jns jb lock fdivrl jnp cmp inc xchg inc sub sbbb and imulb sbb scas loop lods dec gs out movsb mov cmp dec cmc das leave mov in lret pop loop jbe cmp cmp imul xchg xorl stc test jns enter popa inc int3 push inc mov imul rorb iret dec dec leave inc push cmp mov movsb repnz ds scas dec insl pusha dec inc sahf cmp mov push xchg cmp out dec and pop adc test enter or xor cmp nop xchg mov pop insl pop in and inc sahf cmp shrb repnz fsub or das mov enter inc push mov inc push cmp mov cwtl in ds and pop and test fstps cmpb mov push jns jl test xchg xchg pop push xchg dec add or jne imul mov xchg and jae mov push iret inc pop jecxz out int3 jmp inc daa (bad) push gs sti pushl sub jge frstor es lahf push sbb xor (bad) ret cmpsl loopne add imul jmp xchg mulb inc dec outsl test in test xchg xchg shrb jns enter add int (bad) bound add jl push in lds nop lret mov or pusha sub jb pop lret in arpl fbld aam cmp insl lock dec cs jge fcmovnb or adcl cmpsb (bad) mov inc sub or push and xchg xor sbb mov pop test lods test dec addr16 (bad) je push pushf adc leave xchg nop testb cltd stos add je subb and push idivb adc fldl and test add fstps rorb push mov aas nop fldl (bad) loop or ret sbb add inc add xor push sahf pop test (bad) add or pop cmpsb pop mov js pop fs jle mov adc mov inc ret pop jp sbb inc pop cmpb or lret xchg dec add add rolb and xchg rorw (bad) mov add and add (bad) lcall rep fstpt or push pop add push jmp data16 mov cwtl push add mov and shr adc pop inc add mov cwtl add stc popa sub jo jbe mov pushw add insb loopne andb inc roll cmp pop push int or loopne sbb iret shr and jge jecxz call pop mov das mov scas jb ret (bad) jae popa push and ss or mov or cmp in add pop sbb addr16 sarb pop sub and test push seto leave sub out add sbb jb in push sbb xchg add cld add and js jg movsb push or and jmp xor add xchg xorps or adc test push outsl sub or iret add pop xchg adc shr or lret popa or sub add mov push mov push sbb inc aas jle cli and sbb and sub out jno add push cmpsl jo pop push jb sub fidivl out adc cwtl ficomp and je mov fisttpl dec dec test shl pushf mov xor out ja out lsl or sub fidivr (bad) or push jg out imulb sbb add jns adc jmp stc lods jne inc out inc sbb shr (bad) fwait rcrb jecxz jnp into sahf cmp cli out sahf daa repz lock scas roll mov popa loopne rcrb into dec or cmp mov xchg push adc mov stos jne cmp and fisubrl push jns,pn mov xchg push jae inc imul xchg decl add jl (bad) cmp sti and dec pop std push jb (bad) or add imul jb loopne mov (bad) ljmp pop cmp imul lock or pop xor loopne cli jo or je xchg pop push dec aad stc xchg adc xchg add add add add add shrb stos aam sbb jl cmp push inc std pop (bad) sbb enter ja fldl fisttp or add inc std cs push dec in pop fsubs jge hlt pusha add js mov cmp ss aam xor xor add sbb xchg dec mov addr16 sub repnz or adc ret or mov push push cs lret in jo test in mov fcompl lret loopne hlt clc cld mov mov gs sub stc pop jns test dec js cmp outsb xchg cmp dec jle popa mov cmp lcall jae mov sbb xchg cwtl pusha jl cwtl push mov push lds jecxz adc push push jmp xor jmp jmp dec ss out and cmp ss lods enter jmp jle mov fwait popa test pop dec loop (bad) enter cmc std (bad) xor lock fldt and and mov inc xor jmp xchg aam and leave leave sti scas cmp mov pop adc xor fadd (bad) in xchg scas rorl dec push cmp jp data16 cmp stc movsl sub jmp lahf pop xchg sbb lret add std cld xchg sub cld cmpsl stos cld sub or fsubl addr16 jns jns lea pushf lret add cwtl movsl add xchg test inc adcl lret add popa mov cs aas xor inc sbb push std pushf push shrl or iret movsl adc (bad) sti cmp hlt mov pop test sti lods out fwait repnz lock push repnz ret sti xchg xchg lret inc and fdivl lahf in lret (bad) stc push test fsubr cmpsb mov movsl push mov adc or in jmp dec pushf lahf fnstsw data16 pop cmp repnz xor push pushf sub xor (bad) in cli cmp daa and rcrb push inc sahf incb mov cmp mov in jb test xchg xchg mov fsubrl cmp dec ds push jl movsb push cmp aaa bound ret dec in cld sbb and inc or jmp jl mov inc and int3 push xor fistp jb or xchg addr16 lock cwtl add pushf push sub xchg mov fs ja leave leave mov dec and mov daa xchg lret inc outsb push sahf pushf push sub sub jb bnd dec (bad) in movsl mov push ficom push inc and movsb stos mov xor fiaddl movsb ror leave jmp (bad) clc dec sahf xchg (bad) dec or popa mov test inc jb movsb push cmp int3 sub in sub adc daa and iret out mov mull pushf pushf push sub fisttp mov jns lods dec push (bad) cwtl invd mov lods stos mull jl add dec ds mov into pop nop lret or pop pop adc loopne cmp nop out xchg mov or push movsl fs pop mov add jmp lret and out sahf movsb mov lret mov and add mov mov out inc mov xchg je mov sub xchg push sub and bnd sub addr16 notb in or mov aad popf add mov div jae pop push movsb cmp and add lret repnz pushf pushf inc sahf pop push mov pusha movsl jb mov dec cmp bnd push (bad) fsubr or in push cmp jae data16 inc lret scas cwtl addr16 aad sub daa daa xchg clc aas mov sahf pushf cmp mov addr16 movsb or lret icebp hlt insl les push sub daa push stos fdivrs cmp movsl jb pop jbe mov xchg lret pop clc outsl jmp sahf xchg xchg gs pop pop push shl or dec sub dec sahf out mov and pop sub test cld add andl xchg dec loopne pop cmp lods push dec dec nop mov jmp pop stos daa mov cltd dec mov cmp add in sahf pop push xor insl jmp dec mov addr16 fs xchg dec gs mov dec sahf xchg or pop pop fwait repnz jb push jns xchg add movsl hlt jmp addr16 push pusha rorl mov dec dec sub push cmp jns sbb movsl xor movsb cmp push aam lret imul push sub daa lret and sub mov and and adcb jmp xor fs sub xchg lret fistl gs test insb mov xlat mov inc les pop test je icebp test std bound int3 addr16 insl cmp data16 addr16 lods rcrb mov addr16 xchg lret push in sbb in dec xor lock push test popa leave leave mov mov daa daa xchg lret mov test adc jns lods sub jge popa push in movsb push mov adcl sbb xchg ja lds das lock popa and cltd cmp jmp push nop stc out jne leave mov push out je aad daa xchg lret ret aas and addr16 mov sti fcomps fnop lahf out sbb lea cmp movsb shlb aam mull sub popa out ss push out fiadd push imul push xlat xchg daa cmp in jns jl or std out pop lcall cmp xchg out jl jmp cmpsb push mov je jmp nop das cltd inc sub sub or dec push jmp inc or pushf pop call add cwtl (bad) adc dec repnz out in dec cltd fwait addb test dec and jmp pop jns sahf in push sbb imul jne les test jmp fnstsw pop cmp test jmp (bad) fnsave shrd out add es jmp add or stos mov mov aam repnz cmp test inc sbb ja in movsl cmp in ljmp xchg divl cmp xor push pushf cmpsb aam sub in enter xor test xchg and cmp cmp cmp sub enter (bad) in ficomp push push cmp ds and inc sub jmp adc pop dec (bad) aam jmp repnz xor (bad) jmp dec mul movsb push dec aas (bad) pop cmp xchg dec dec cmp lods and lcall lods pop cmp dec int3 jmp cmp and push inc in repnz mov cmp leave dec dec es adc cwtl push sbb inc into push les inc xor xor inc push fisubr jae inc (bad) clc in ljmp cmp dec cmp lret ja xchg and dec shrl adc jne add add xor lods xor movsl and test mov adc dec fdivr sbb mov cmp std push imul pop lea push mov sub and or clc and pop pop sub lods sbb mov ljmp mov xchg jmp inc lret fidivl shrb jns (bad) adc mov test mov push repnz int cmp mov jne ss das data16 add inc loopne ss test sbb pop and adc dec ss pushf bound rorb ss sbb xchg iret out jge inc xchg js call pushl (bad) inc lret fwait shrl fisttpll movsl fbstp leave out insl xchg xor sub and push leave mov call aam add flds in repnz xor sub loopne mov test mov or stc pop and mov out outsl cltd xor out movsl jnp popf pop jmp push jb adc aaa ret repnz aam in xchg xchg test out cmp lahf xchg or out push fimul add outsb pop mov push enter pop gs jne mov andl test pusha jmp add xor sub fs dec repnz in repnz cmp dec adc mov nop cs movsb xor add mov xor repz xchg subl inc leave pop xchg pop mov aas pushf repnz test xor and jge repnz jmp jecxz sub pop cmp fild inc outsb mov cmp (bad) in fist add js (bad) jmp and dec sbb lret mov adc nop iret outsb sahf cltd and jecxz adcl and mov shl (bad) lret outsl cltd jecxz pop movsb jle add cmp jecxz sub stos sub enter sub xor jmp sub xor outsl pop cmp inc xor sub or xchg pop pusha aaa ds fistpl call dec movsl loopne cmpsb in or rcr stos sub addb jecxz repnz xchg adc loop call insl mov pop scas in inc loopne mov sbb sub pop mov test xchg ss push dec mov xchg cmp mov xor adcb cmp mov into xchg push fimul inc xor lods mov and push xor push fnstenv daa mov outsl out insb pop jmp in xor push cli daa jl and jo cmp sub div ret pop shll stos mov popa ret lock movsb (bad) pushw scas enter jno orl adc and inc loope push inc js dec push jns dec xor dec jo mov (bad) addl xchg xchg cld dec pop jmp sbbl inc ds lret pop or adc movsb push sahf (bad) in push mov push add shlb std in xor adc sub adc aas pushf jmp xchg rcrl xchg arpl add fldl jnp xchg aas (bad) push (bad) xchg sub es jns inc cmp das es mov fistpll pop jp in call mov loopne rcr jnp daa or shrb lcall mov mov fistl and xchg mov and mov repnz jbe loopne adc sti in bound call leave ror inc pop mov in sub call xchg out cmpsl or sahf dec std mov lahf jbe dec aas ja push xchg addr16 dec adc in jns sub dec sahf xchg lret sahf lds gs push repz test dec shrl adc add mov ljmp adc rclb addr16 xor enter leave lret pop pop dec mov mov fs adc add sbb clc pop jns push cld in cwtl clc sub dec add inc lahf test lret nop mov stos lcall adc xchg out mov cmp add sub iret xchg daa sub push dec push dec rclb push sahf mov test orl movsb call fnstenv mov test pop ja mov dec mov jb sub push sahf dec and dec and dec cmp pop aaa adc dec mov ror mov lods mov (bad) rep enter xor mov xchg mov lods cmp fs ret push ja push pop or cmp test push add push jns add mov outsl add jb cmp and pop mov insb stc push je add add pop and cs (bad) pushl add cmc loope sbb add sub mov pop mov sub js mov add popa pop cmp pop inc js pop add iret repz test mov iret aam out incb sahf out lcall jns out cs inc dec out sahf out pusha push sbbb mov lahf out lret add movb out sahf sub xchg jns mov cmp out or xor iret repz outsb xchg iret repz in add sbb sahf out xor jo jns out xchg lods ret repz cli push sub inc push cmp repz push cmp pause lcall mov (bad) or testb sahf out sahf inc pop je test (bad) jns call nop cs sbb enter cmp jo push daa xor imul add mov cmp dec cmp lea jns mov sbb jnp rclb les iret inc repz cld int3 jns repnz fstps (bad) ss cmpsl in pushf ja insb cmp pop fcomip cmp stos xchg fst add cmp or call cmp dec pop push inc fldenv dec push lds int cltd fcomps xor (bad) mov mov jns jl and popa lea bound insl (bad) outsb ds push sub cmp les out fistpll xchg xchg aas decb nop add sbb repz pusha int3 in or ss (bad) xor js add jp es cmp mov cmp dec icebp sahf outsl ds cs pusha mov and repz nop fs nop pop loopne test pop sahf ja cmp ror dec enter or cwtl inc sbb cmp daa add dec movsb and add fsubl lock mov inc sahf cld cmp mov lahf addr16 aas add and pop push add and addr16 iret aam and xchg mov mov mov movsb sub (bad) xor aad data16 or push je fsts (bad) sbb js dec ja or popf int imul stc dec in dec aaa cmp and repz enter test lahf xchg xchg out enter jns (bad) cli sahf fwait cmpsl ss aaa mov repz push ja movsb ss out ds aaa sbb xor cs sahf je sub popa fs mov mov pop lcall fwait iret les push jne pop fs out cld popa jns dec outsl outsb adc scas jnp fstl push gs outsb sbb pop jb cmp out inc jb pop adc xor mov cmp outsb pop jne jb bound jb dec out lods cld into or arpl inc jo imul in jne or cmp addr16 cltd ljmp je gs scas jnp dec arpl pop dec outsl jbe xor cmp daa adc rcr inc mul (bad) or fs sub ja jb add out add bound jns iret (bad) divb add adc sahf out and push xor push inc add adc or sub sbb in int push add xor mov sub fcmovne repz addb (bad) xor or (bad) je and or pop or in mov dec fiadd xor bound jg mov pavgb pusha or dec dec push adc push repnz xor cwtl push mull mov or or jl push stc xor int or dec or int mov pop cmpsl push les out out jo sbb into adc imul pop maskmovq (bad) push (bad) nop fcmovnb or enter int fs sbb push sbbb sbb mov pop pop push push mov add adc ss insl sahf cmp aad xchg push push sbb sahf data16 sbb xor sbb les sahf xor add es mov inc sub xchg enter es ds and xchg and jns in and cmp or int cmp sub sub out imul cmp aaa mov iret (bad) jo jmp mov xor mov and fdivrl pop inc fidiv daa cmp xor repz cmpb jmp aaa fs mov repz mov or fnstcw dec sub pop jmp sbb mov imul sub lret lcall jbe sub (bad) out mov add pop inc and out xchg jge sub and or pop xor divb jnp inc pop cwtl (bad) insb sarb sti inc lahf out nop xchg lock cmpsl cmp xchg aaa xlat jg (bad) sbb add aas push orb ds out (bad) jmp popf aas xor add cmp sahf mov sub aas je cmp iret aas lods add jl cmp pop push js (bad) loopne pushf or jns cmpl jge sahf out nop (bad) mov out dec fdivl or xor leave and ja dec aam push sub insb pop sbb or dec pusha clc cmp cmp mov ds jns mov cmp jg dec iret jae jl ja dec jns jbe ja sub cmp xorb and insl fadds loope call shrb loope xor sbb or sbb cmp dec jo outsb mov repnz adc lock test mov jnp add jns add inc hlt es cmp jne out push jl sub jmp xor lcall mov push out push negb cmp pop push ss int push (bad) in out pop leave pop sahf out insb xlat ljmp add or insl cmp lods adc mov inc jmp lds dec jae jl aam cs out nop iret hlt add xchg int cld (bad) mov incl clc shrl xor out out cmp incb out mov in adc push xchg stc inc iret mov xchg lods cmp cmp mov repz enter mov jne push enter mov sbb cmp add adc fmuls das sbb cmpsl cmp push enter sub cmp nop iret repz cmpb dec sahf out fdivrs xor xor mov enter mov test test loopne les outsl fistpll inc ss and xor das stos pop or loopne cmp pop call or inc jle jl ljmp jle mov mov inc in xor mov lahf aaa inc test insb push adc in fiadd jle xchg mov hlt in and lds xchg add popa bound mov inc push insb fs dec dec jne add add (bad) (bad) (bad) jp mov xchg stos cmp inc xor mov fstpt sahf jl adc out sbb out nop xlat sub ret into xor lahf inc (bad) xchg mov daa push out test or out xor cs mov leave enter jge mov fcoms enter add test (bad) pop push iret aaa and roll xorl out inc xor fldt jl aad pop ret mov fadds add pop insb dec leave aaa mov mov dec mov ds jns push rorb imul stos and jl outsl test pop je outsl jl pop fs sub inc pop xchg cmp pop loopne lea inc (bad) cmp mov sbb push sbb mov pop xchg xor add jb xor inc or js pop sub iret jae dec xchg or into fwait dec mov inc add add xlat outsl jne stc sub outsl ja sbb xor out pop inc orb js add lahf addr16 add cs pusha sbb repz push push adc push or ret add addb jmp jg push addb popl ja bsf sbb addr16 jo add lock sub movd mov xlat push push pop int pushf bound in sbb cmp jg nop adc sahf repnz xchg test insl mov dec sub add inc test pop mov pop insb sbb stos stos add popf mov push jae lods loope adc cmp bound adc imul movsl movsl test pop dec enter subl sahf lret iret (bad) divl mull faddl (bad) sub adc mov inc jne js sub jmp jp fisubl sti add inc das and roll repnz scas fdivrs add cmp mov cmp pusha xchg jg add aas enter ds xor in popa out popf (bad) (bad) (bad) ljmp lret sahf push out cmp inc adc cmp inc out mov jecxz repnz sbb add mov add enter outsl das add pushf push (bad) jg stc lahf mov nop clc inc ja inc jp push pop fldl mov xchg incl inc xchg cwtl xorb ds outsl psraw ret das icebp outsb fbstp jno iret aaa mov mov in mov or xor bnd pop adc push out mov mov cmp inc push mov inc sub insb (bad) or pop cmpb fs rolb cld fistp cmpb inc aas fisubrl or cmpsb mov inc dec enter inc fist xlat push fsubrs cmp aas pop jb cmpw in push pop rol das xor push (bad) adc mov sbb sahf cmpsl stc int3 flds push add adc out inc pop push mov jns out ret adc iret repz and bound test in push fdivl jns out inc dec pop arpl jns out pushf scas rcl sarl (bad) or adc cmp repz jp scas enter repz push faddp push inc push cmp repz mov out lock and pop out sahf out test xor in push loopne cmp iret repz mov jns out inc insl (bad) xchg lods sarl rcl add adc sub (bad) pushf ds repz rcr push jecxz sahf out sub jbe repz out (bad) fdivrp adc iret repz and dec pop insb jle iret repz mov sahf out cli adc cs (bad) out sahf out xchg mov in repz (bad) sbb sub pusha cmp repz test iret repz out out xor jns out push sarl ljmp iret repz data16 pushf repz repz rcl mul jns out jmp iret repz add xor popf scas lcall daa jmp jns out pop jge leave jmp cmp out paddsb dec jnp imul in das popa out jl xchg movsl mov in out iret repz and sub ds repz lods in xor jns out pop jae fsubr repz repz int3 out lcall mov sarl aad hlt cmp ds repz leave jecxz sbb jns out cs outsl (bad) sahf sahf out out or ss mov int jns cmc pop negl stc cmp repz jae lds clc out sahf cmpsl and mov (bad) stc sbb adc push repnz sbb inc in aad inc jo xchg addr16 xorl cld incb add fsubrs sbb das pop xor xchg pop enter or mov xchg vmwrite mov xchg das nop add (bad) enter sarl rolb mov fisubl in inc lock ja xor test sub pop and outsl add iret mov cmp jno xor xor fwait push insl js cmp adc fstps je dec and push (bad) sub xor and scas fisubl addr16 sarb lock int3 jg xor and stos ss jl and enter and pop repnz and movsb jns sbb lock leave out dec and sub hlt xchg sub aaa adc mov mov in push in les stos jmp push in aaa adc ja (bad) daa push cld es mov xchg mov nop push fwait nop iret push stos pop leave ror movsb mov repz loopne or dec enter or sahf add pop xor xlat push test (bad) (bad) iret push repnz les cmpsl test pop pop iret mov sub outsb cmpsl xchg sub sub cmp cli push push call repnz mov addr16 dec cmp mov sub sub mov dec and fmul dec sahf stos sbbb push mov cld cmp jo sub (bad) sub outsl nop out jnp cmp sub enter cmp sub loope xchg dec pop mov sub push cmpb pushfw sahf stos fs sub clc shlb cmp (bad) and sub cmp dec repnz test js jae jo cmp fwait int3 pop aas and dec add fdivrl dec cmpsb loopne cmp sub fistpll lock ds sahf test inc sahf stos fdivl push mov cs sub sub cs in sub cmp in mov mov scas xchg fcomps das lock addb testb mov mov lahf stos jbe jg fs je in addb cmpsl fiaddl sub xor addb das decl push dec and daa inc jl fnop jg fs push js lods cmpsl or pop sahf push push or xor out stos jbe mov sub clc xor iret push je xor xor enter dec mov add ja or xorb aad inc sbb out mov push jo addr16 push xor pop and xor xchg sub hlt int3 out aad sbb xor xor stos ss cmc dec xor xchg jg adc mov (bad) sarb inc cmc mov or or xor xor cli pop mov jg dec xor mov xchg pushf mov xor xor sub add test xor inc cmpsl xchg lahf pop xor orb inc jmp cmpsb xor aad nop shrb iret push mov inc sbb or ss aaa js dec negb outsl enter cs call jl,pn outsl or subl jg dec lahf stos pop xor xlat dec nop int mov je stos push ret sub dec fwait cmp outsb add into dec push add and xor sti add data16 inc jo insb inc out out out or pop leave in pop fdivs pusha arpl cmp mov push js jl or push pop aaa cli push cmp pop inc sbb sub and inc imull (bad) and int3 cmp nop out out jl xchg add mov sbb inc scas cmpsw sbb cmp leave jmp clc adc in lds pop push scas (bad) or cmp push leave stos and cwtl cmp nop popa addr16 mov or iret fs lock bound cwtl addr16 fadds (bad) out (bad) gs and mov in jb and mov and ror xchg pushf aam xchg xor adc (bad) xor pop dec cmp adc test mov xchg xchg pop sbb cmpsl xor cs aam mov shrb or pop fwait pushf and fistpl (bad) push pop inc insb leave add mov add add cld add aam notb sbb xor or loopne or add cmp cmp out lods fbld hlt jbe cs (bad) push out cmp cmc sbbl aas push dec sub divb in jl mov clc or lds int3 jg inc rsm pop (bad) jg enter or mov push dec out test inc dec in xchg xchg mov and jb dec enter clc in xchg pop (bad) (bad) jl test or cltd in (bad) aam repnz scas xchg fsubrl inc dec sub inc inc out and lahf je sub dec add lds cmp and rcrb es or pop (bad) das stos (bad) xchg dec pop inc jns and js sbb and rcrl sub xchg cmc mov daa fdivs ds pop enter (bad) dec es sbb push pop leave or daa pop jb js push jb pop and leave test and mov daa cmp inc sahf adc sub cmpsb or xor in xchg cli cwtl mov dec shrb leave and clc sbb scas xchg xchg rcr int3 inc inc dec repnz pop inc js stos in in hlt sub nop xchg dec dec add mov mov mov repnz or sbb inc scas xchg xchg or sub adc aaa call add add cmp xlat loop add dec xchg ds pop inc scas or ficompl sbb (bad) dec xlat pop in xchg scas dec add pop mov jl xchg daa imulb xor pop add js xchg pop jb nop inc add dec cmp xchg repnz scas xchg lcall dec jl lods pushf nop push leave mov dec pop add and xchg fdivr (bad) pop enter mov add cmp pop dec loopne mov dec pop jb leave out pushf mov daa add jo sahf dec repnz cld sbb enter adc sbb enter lret pop pop dec jl xchg pushf pop cs xor or and nop mov dec cmp stos in inc bound enter push or mov pop mov dec push test fist pushf in lock dec xlat scas or dec in inc mov dec mov fdivrl in dec mov stos cmp test cmp ret das in pushf jp daa adc sub dec fsub in pop and or cltd mov xchg (bad) pop dec adc and call pop xor push pop xor adc push daa xor test enter leave inc dec jl and jns adc push sub sub cltd pop data16 leave and sbb push pop js cmp jb leave or and pushf push pop enter add push lock cmp dec in or loope cmpb nop or add mov in ja fcoms enter cld mov and in or inc lret push loopne leave or xchg cmc mov loop into add and xchg sbb daa push push insb xchg sbb xor cmp out in mov push das dec loop cmp cmp outsl shl xchg xchg or xchg push and cmp enter cmp sub nop (bad) fisubr js cwtl mov outsl xchg dec push cmp fdiv jecxz xchg or and nop and push push je in sub cltd lret out and rcrl inc mov jb in mov enter inc adc xor dec and jecxz cmp je push leave enter and xchg pushf nop push xchg dec aam push jb and cmp dec pop enter xor dec dec es push dec push cltd in mov xchg xchg xchg or mov outsb dec repnz scas push fs sahf adc orb pop dec push cmp lcall pop add cs mov mov xchg or or repnz xor into repnz scas xchg (bad) call pushf dec je call lock pop cmpsl push jns daa xchg aam add pop xor jp in mov inc pop mov add insb pop xlat iret inc shrl daa or pop jns enter push rcrb bound add in scas and repnz push sbb pop pop enter in adc pushf sbb push sbbb dec enter inc pop leave inc jo push pop (bad) push xchg or cld adc fs lds pop scas xchg or insb jbe pop dec cmp lcall inc mov mov call (bad) push imull pop inc pop pop in sub pop jb daa shrl daa in push pop sub pop enter mov lods or xor fs mov rcr cs fsubrs nop in inc dec mov repnz mov pop lock in in or xchg or cmp jo cmp scas xchg es out in dec es cmp leave pop dec enter pusha xor pop jb pushf pop in cs xchg pop jo insb test or cltd in pusha (bad) lock scas xchg xchg xchg repnz popa xor popa in jb mov leave and push bound pop mov xchg pop xor adc and les push bound leave leave test mulb cs nop (bad) divl inc or adc orl fs gs add enter arpl (bad) in enter (bad) hlt bound addl cwtl pushfw arpl add arpl jo cmp hlt or enter inc enter pop jae ja push xchg test inc inc pop and xor adc fsubs pop and test leave dec push gs gs nop push leave jl add and xchg mov push pop aas insb sub mov mov cmp dec es data16 cmp nop test scas xchg or fs jbe outsl call xchg pushf dec (bad) fidivr pusha outsl dec addr16 lock sbb cmp test test out out xchg mov or pushf dec enter sub xchg pop jb push jb dec dec cs ds cltd in mov enter cmp pop pusha dec repnz scas pushf pop je imul jb xchg pop enter mov and test xchg and in pop imul leave call leave or xchg or cmp push ror out push ja nop xchg dec push fimull sbb cmp push jb leave cmpl and cld push dec cmp imul cmp call add idivl jp jp add fsubrs insb sub dec (bad) in pushf imul add insb insb les insb scas pop jb leave (bad) and cmp mov jge insl cmp in enter insb leave orl call adc divl cltd in pop fs scas mov test outsb (bad) mov insb jg outsb pop in jb xchg adc enter stos sbbb mov fs xor test add dec outsl pusha fcoml outsl aaa nop outsl add pushw out inc mov orl pop enter add or mov daa jmp in xchg sub xchg xchg pop jb or xchg xchg xchg xchg mov fadds xchg xchg loope add orl xor push pop enter push mov pop xchg inc lods lahf cmpsl cmp sbb loopne in cmpl mov mov inc inc pusha rcr dec dec enter cmp shr cmp sub jb outsb jb dec jmp out dec mov pushl pop bswap in (bad) popf movswl nopl pop mov insl addr16 or cmp mov in mov xchg xchg lahf hlt ja fcmovne add addr16 or sub pavgw jns cmp out insb je jns das test daa rcrl inc incl scas (bad) fsubl jns pop in cwtl jb cmp jne lock mov dec icebp testl and add out add sub outsb frstor cmovbe in in pop pusha imul mov test jb cwtl mov xorl fistp jb repnz mov sbb adc pop and (bad) lock push loop inc pushl dec dec dec cmp push dec and pop ja in dec cs dec jl jae dec dec dec jnp mov repnz pushf (bad) push add mov push add push rep daa iret or pmullw leave loopne out pop or (bad) fldl inc pop fwait bt jns in stos cmpsl mov add (bad) cmp out cmp pop (bad) (bad) mov mov stc add cmp add or mov daa out and sbb out arpl outsb out mov enter out adc pop out arpl cmp dec outsb xchg addr16 psrad in or xchg out (bad) out add jb lock jns cmp pop push and jns mov jp lahf add sub jns pop enter jp xchg push or mov repnz add sbb fbld inc pop les mov icebp or add icebp pop jb cmp es and push dec dec jnp int dec and je jge pop and inc pop and repnz pop enter lar leave xchg repnz sub cltd inc dec jb repnz jl jb cs jl jno xchg pop jo pop xchg mov and adc dec sahf add add fwait in xchg repz cmp xor inc sahf fildl nop sub mov dec dec dec cs stos mov dec cs mov dec cs or enter hlt and das hlt cmp hlt pusha sub shrl dec cs mov nop dec sarb scas rcr push adc pushf dec and cmc lcall cmc cmpsl pusha jg sbb sbbl or mov pop xor xchg (bad) leave leave add inc ds mov and iret cmp cltd fsub jmp add inc test cmp (bad) pop ret jecxz incl enter jg dec sub and inc jo mov es jg pop les inc mov lcall subb es push adc cs ret or scas add nop jae in jo cmp sarb and pusha movsb daa fdivl jb mov mov dec and (bad) js sub nop dec (bad) (bad) (bad) mov insb iret or mov inc inc (bad) adc mov lahf mov aaa xor jbe jecxz sete xchg dec scas sarb (bad) mov pushf pushf mov hlt enter in sub inc inc cs and es pop and jecxz repnz mull leave add pop push add xchg add in out mov add or in (bad) adc add clc daa in or mov clc jae cmp clc dec clc push xchg outsb daa pop enter push add test add aaa jb enter stos addb add mov stos out clc jbe pop inc daa loopne inc push dec jbe adc add loope xor fistp pop (bad) aad movsb cmc lcall sbb xchg stc or (bad) in xchg and pop das cmp mov or out add push or dec xchg add mov sub add outsb es int mov push dec sub sub sahf pushf nop fldcw lahf adc mov fimull jb jbe and add ss les ss es data16 insb push pop repz pop cli addr16 sti xor and push sbb add fistpll rol xchg imul pushf fnstcw iret aas fs add or inc xchg push aaa lcall pop sub push jnp out push inc ret (bad) mov ficom jno xchg pop addr16 sub mov pop push mov int xchg loope mov cltd pop cmpsl jge mov cmp mov roll xchg test aam pop rclb cli jl cmp stos push pop push and negl add out je jmp icebp leave add mov clc xchg cmp jle and push xchg fnstsw xchg xchg cltd xchg jle sahf data16 (bad) or jle lret (bad) std pushw inc ss xchg push fsts fldcw xchg bound pop sub lahf idivb fnsave pop push repnz cs outsl pop repz bound lods ss mov mov xor xchg xor scas cltd cs xchg xchg fldcw mov jle cmpsb xchg push rcll ja push stc lds dec lret push jno fs xchg sub cmp shr sbb (bad) push (bad) mul loope fidivrl cli fidivr fwait int lock (bad) mov xchg pop jns int xor pop fildl out adc inc sahf int cmp rorl into data16 fiadd and xchg aad pop das negl sbb lret fcompl icebp fistl push mov into mov pop inc iret push ss imul idivl lahf popf sar cs cmp insb fidiv roll jl mov cmpsl into add pop popf push pushf andl mov xor int3 and dec add push cmp repz data16 clc and jmp fwait scas or hlt xchg push push jecxz jp dec repz push ss outsb pop int pusha repnz sarl push in xor and mov js mov sahf test add sbb jo cmp push push inc xchg pop imul enter mov repz adc pusha insb ds gs nop fs arpl bound shll imul in sub roll xchg out cmp xchg lods dec jp enter push jp pushf dec sti xor and jns adc ss ds sarl dec clc push push test (bad) push (bad) mov mov ja inc insl mov mov in (bad) fsubp jmp push stos into es push in inc cmp or xchg (bad) repz scas push push and fwait int outsb mov mov fisttpll imul lea inc ss dec repz or mov xchg mov cmp push jbe mov repz pushf push mov sahf push sahf cmpsl fldcw inc push inc sbb inc (bad) int sti mov mov enter sbb repz mov loope sarl xchg mov and jge movsl mov imul push (bad) shl iret idivb and cmp lahf and cmp push cmp xchg adc cmpsl fnstcw in adcl out insb jmp mov stc cmp ds lock dec jns ds mov js or sahf repz inc mov inc jg fldcw test sub (bad) fisubl xor xor cltd lods and xlat push notb lea sub popf lods (bad) pop or xchg aad add xchg js je xchg add add insb clc lcall sub imul push inc addr16 push int mov imul pop pop xor cmpsl jge addl mov push es cmp outsl mov into imul pop bound fisub fsubrp (bad) hlt sub push jbe (bad) int mov and jnp push fnstenv mov sbb push pop sbb aas dec mov js xchg fnstcw push cmp sub pop jecxz lret enter ljmp cmpsl push sbb mov lcall cmp mov je data16 sbbl fnstcw cmp xchg mov fsubp xchg push xchg jbe mov pushf imul push jne add push fwait cmp jg jbe jp push pop insl enter sahf or and xchg inc lahf out mov or into dec data16 adc cmp ss int push mov xchg dec sub lret cld ss outsb push ss int fsubrs jo jno jb jae cmpsl fldcw adc (bad) js insb je test jne insl mov data16 pop pop pop push pop pop cmp push fldcw pop les bound mov mov pusha loop pop xchg dec mov xchg hlt jecxz testb push (bad) (bad) mov pop sti xchg rolb inc (bad) mov dec lcall lock adc push out push std and out xchg adc cmp or adc sbb add cmovge cmp xor and push dec lds push insb add add cmp (bad) inc pushf inc pop pop mov repz rolb jbe popf xor dec sahf stos lds mov (bad) repz lods (bad) sub (bad) pop in out cmp pop cs dec mov jmp cmp (bad) jnp arpl mov push xlat sbb fs data16 add clts lock add xor sahf ja in adc inc jns int and push pop or divl xor push fdivs sbb push xor jbe subb jns cwtl je insb adc mov cs push xor int3 ds repz rclb fcompl iret sarl jle push pushf adc les in jge add add or jns repz mov fcompl in adc push insb adc xchg sub mov or incb clc push add stc mov cmpsb mov repz cmpsl push enter out or into push les push dec pop jle push fisubrl push ds addps ja adc rclb dec jb xchg or mov fcoms cmp dec loopne and xchg sahf out push aaa mov fadd rcrl push out or test push pop xor dec adc cmp loopne ds jg xchg ss push stos (bad) mul scas xchg cli cmp inc mov ret mov out in inc sbb push leave int jnp push gs pop push ja and aaa ds in inc push or jmp int (bad) add sahf xor lcall rcrl ljmp out jns jl or cs sbb repz adc mov iret jle xchg xchg out fbstp cmpsb push insl push pop jnp push gs mov push mov xor ss cmp fwait (bad) mov add xchg jg mov push rclb into push inc jle,pn and in data16 sbb cmp jb iret imul add mov pop or fs insb int (bad) mov mov aad int3 lds pop fcmovnb push out mov incb sub mov inc cmpsb and cmpsl fnstcw mov mov (bad) mov add and fisubrl cmpsb adc fcoml cmpsl or test test inc test jl add mov (bad) into mov cmpsl mov mov jno xchg xor sbb push (bad) insb jbe xlat push xor ss iret push sbb push lods test mov mov mov xchg pop xchg mov mov (bad) jle push sarl nop fnstcw add pop mov or fstps sbb aas pop inc pop dec xchg in mov jle dec outsb jnp add jl es lock ja aas jae mov jge int mov lret pop jnp adc push xor mov aaa jo mov daa lea fs sbb sbb mov inc cmpsl mov xchg add push pop push mov push lods and push fist inc jle inc push push dec or push rclb mov es push fldenv mov inc push pop add sub lock sbb in scas pop mov mov lock sahf out ja jo clc jle cmp lods dec fsubs aas mov inc add add dec add cld sahf out in enter rorb int3 adc in out les and push and cmp mov pop pop mov data16 cmp jbe pop dec cmp push push mov mov sub repnz andb cmp push int3 pop adc xor push push jo in ret repz sahf hlt xor lock xchg int outsb cmp add mov leave out scas cmp mov fdivr dec or xchg aas add test movzbl mov push xchg mov data16 mov push push andnps ss cs xlat and dec aaa fildl ds mov mov jbe sahf mov jecxz cmpsl mov insl push (bad) push rcll jl sbb xchg aaa pop aaa cmp push mov cmp scas pcmpeqb lahf jo xchg int mov je jae cmp dec enter dec aas pop in sarb and push pcmpgtd mov fisubl setl adc aaa inc into shl punpcklbw lods lcall pop cs inc xor insb bound scas mov xchg cli lcall shrl pusha (bad) xor cmp push ds in mov (bad) and push in dec mov dec mov jle sbb pushf in mov inc fcompl jns xchg lds shr inc mov pop clc cmpsb mov aam sbb inc dec es ja push lods leave cli mov mov pop or or iret test int3 hlt in mov (bad) add push prefetcht0 pop adc inc or xlat xchg jo mov pop pusha jnp jae lock or fildl ja cmpsb mov (bad) mov out lods pop pop psubw cmp xor lcall ja cld fistpl mov pop adc sub sub add ja int mov push jae je outsb dec jo fldcw add dec or mov or or sbb jmp pop add shlb mov xchg and mov insb ss inc sub addr16 adc lea sbbb sbb pop pop lock adc pop orl loope out cmpsb push fucomip shrl sti outsb (bad) in mov mov cmp popw pop push xlat ljmp popa lds imul jb push dec cmp sti mov enter cld cmp add dec repz pop in mov nop push pop fbstp sti jo cwtl pop lahf pop and or push insb mov data16 jne jb loop lds sub pop jle les cwtl mov ror cmp jne or jle push sub sub push popf add sbb sbb divl push aad push xchg incb pop push frndint outsl les add inc xchg lea add cmp pop pop cmp insb imul cld xchg int es push jnp sbb inc jmp dec movsl inc xchg in decb out pushf jge mov sbb fst jle out cmp cmp cld jp cltd loopne dec lcall pushf nop mov testl and movsb jns push insl xchg jp jbe aas jp cmp pop xlat repnz loopne lahf push ret jnp push leave xor inc xor dec dec sti xor out mov out jp out pop out mov mov push int3 mov jne loopne enter jg mov mov orl shrb jge leave inc push test sub cmpsb (bad) mov mov das (bad) xor fprem1 movsb push cmp inc dec dec in sarl mov movsb pop cmpsl popf std mov das push dec xlat hlt inc push test xchg jge jno mov and jg jnp jnp loopne mov mov out mov pop movsl inc mov push adc pop inc jmp lret pop pop das into cmp jb roll mov (bad) (bad) mov adc int leave (bad) push jbe pop jge push (bad) push lcall fidivl push pop jo jnp out ds jp repnz xlat add int xor pop mov divb inc mov adc out lahf (bad) iret push pop sbb dec adc mov adcb dec jb roll sbb andl jle and cmpsl fstps fmull inc jge push jecxz fcmovnbe push sub dec cmpb add pop sahf and sahf jo add and adc pop xor mov (bad) dec push push push int3 dec cwtl jl out loopne xor or dec repz rol fcoms iret shrb cmp repz jl aam out iret repz mov jns lock adc lods push (bad) jle aaa fsubrs imul mov or (bad) loope sub (bad) lea dec orl dec xchg rclb jbe lahf movsl dec cmpsb inc stos add popl lods mov inc es data16 mulb or push ds shrl pop shr cs imul or lcall sahf push push in jge lods pop dec xlat sbb cmp jg adc dec cmpsl cmp mov imul xchg pop pop sar pop xchg pop xor xchg aam iret pmovmskb sub dec mov jne fldcw jno jae aas hlt xor dec sahf xor cmp xchg daa int je xor ja aaa adc push jno repnz in jge xchg fimull pop pop loopne jle in push enter roll popf jl sbb ja sahf pop (bad) (bad) leave mov push in idivl scas mov shrb pop pop sahf fwait xor lock out insl adc cmpsb pop cmp pop rcr pop cmp dec mov pop add and push xchg test pop mov or mov push jecxz mov out jl dec mov (bad) xchg sti pop xchg data16 lea inc stc (bad) xor xchg lret inc jle sbb jp sub add scas push cmp shll es lea mov jnp sbb push adc pop andl xchg and jae mov jns jnp fldcw jo push data16 imul pmaxsw add jne je ret jae mov and pop pusha cmpsl in jl loope fistpll out xchg pushf inc cmp popf cmp add ss and mov push mov jge jg in jnp sti push (bad) push inc or jg sub test cmpsb fldcw (bad) and adcl ja add pop in in dec movb mov das cltd xlat or or mov fildl cmpsl adc ds (bad) jg repz rcll fs fsubp ds push add test mov negb pop in shrl pop lds pop push int hlt idivb jbe cmp mov inc test lods xor xchg in ror clc inc push mov jl nop sahf pushf pop test addr16 insb es js mov dec jmp fdivl dec (bad) jg out mov fistl fbld push sub sbb dec push and xchg popw in cmp sbb mov mov sti cs push arpl add mov div xor push or xchg push (bad) jbe shufps add sbb pop push scas sbb lods mov jle xchg pushf in pusha mov lds cmp out aas or pop inc jns addr16 (bad) aaa in rcrl rorb fnop dec std pshufw adc icebp dec stc mov cmp mov and add jne movsb cmp fnstenv dec aas mov fs cmpsb or stos inc das cli out jae std movsl insb and icebp cmpsb bound jg repz push or xchg cltd and mov mov out (bad) fcmovnu dec fdivl mov out dec mov aad push add stos outsb in jmp mov and jb mov mov mov cwtl test pop sbb cmpsl dec pushf or jbe pop lods add xchg xchg out stos mov in (bad) orl inc pop mov push xor cmp insl mov xor cs jle push cmp out cmp add jg bound (bad) add pop sbb jne jnp mov ds mov idivb xchg jne mov jbe into scas inc add roll sbb pop mov out xor dec push enter fwait dec mov push sbb fisub es inc push inc (bad) std add pop xor (bad) adc add xor fldcw data16 inc dec push mov movsb and jp push push addb mov sub rcrb sti mov dec insl mov shrb mov xor push jnp imul push pusha push iret repz sbbb mov out dec fwait sahf mov es popa test add cmpsb addb scas scas sbb (bad) mov pop mov negl cwtl push xlat mov push mov sub lods pop lahf out mov cmc mov adc not mov lods orl test (bad) jnp add scas data16 push add lcall lcall (bad) jnp popf mov push loope mov stc cmp out js xor (bad) in ds stc xchg sti icebp dec cld mulb lcall stos push incl repnz add into xor xchg stc xor out add inc add frstor push (bad) push fimull imul or out xor mov inc or push or and lcall cmp repz sub fwait repz adc addr16 jl dec fistp rorl (bad) sahf out adc mov lahf (bad) and push iret sarl xchg sbb inc insb xchg sahf out cmp jmp sbb xor out xchg shr sbb cmp addr16 mov jl cmpsl aaa pop mov sbb add cli jbe repnz ja in jo mov push pop push mov fidivr and lea jecxz and loope out jl and outsb and sbb lahf out sahf inc jo (bad) out sbb inc outsb out es out sarl int3 inc sub inc sub frstor push xor stos and sarl sahf sbb popf push cmpsl stc xor xchg adc mov xor xor divb jbe out imull int xor pop xor dec xor jl dec ss clc and dec jl out jno mov cmp shrl push subb ljmp cmp in sarl (bad) sub (bad) test divb sahf repz cmp cwtl cmp cmp out ret aas inc jo ds repz jns out mov repz das pop xchg lcall cmp sarl aas mov fildl test fildl inc xor cmp out scas fiaddl lcall and out pushf mov sti cmp jl cld aaa dec (bad) push ja sahf out mov sar cmp repz dec popa popf aam dec sarl push mov or mov (bad) cld aas dec movb jl out stc cmp movsl pop push imul (bad) aaa push sahf imul jo and imul push (bad) sbb imul push xlat sub repz out loope pop popa cltd repz iret ficomp pop out ds jno daa pop jae lcall sub push or out xchg ficom pop mov in cmp sahf clc inc popa jns iret rcrl fisubrl dec repz fisubl fs cmp out xor xlat and xor cmpsl insb leave adc jb sarl adc fs imul sub lds imul aaa insb orl repz daa outsb mov outsl mov jl jns addr16 push inc jno out ds ret loope jb pop int jns ja mov cmp repz push (bad) bnd cmpsl stc adc lcall pop jne imul int3 cmc adc lahf out sahf pop andl out xor cld dec js push jns out xor mov cmp sarl push je enter repz sbb lahf repz out hlt sbb (bad) sahf out out and outsb push aad jg (bad) lcall in andl stos enter jns iret (bad) jno and dec repz repz out xchg pushf out cmp mov out sbb xor mov shr or iret xrelease mov out push push outsl mov iret rep sar mov xor out (bad) jnp ds mov mov sarl (bad) xor int imul add cmp stos jecxz nop cmpsb push out lcall (bad) out cmp or xchg iret sarl shlb xchg cmp repz scas lret jns cmpsl stc push xchg xor mov or xchg push out sahf out lcall int cwtl jno adc sahf cmpsl stc add int fucom (bad) dec fwait xchg ljmp cmp mov out in popf sbb dec out sahf out jg mov jns ja jmp pop popf fdivp cmp repz sahf ds mov out (bad) aam mov jo cpuid pop mov sahf cmpsl stc push mov repz out pop movsb inc push iret mov or jns xchg mov jae iret repz int sub cmp test sahf out sahf dec outsl xchg mov idivl iret sarl jne repz jno out cs outsb push iret sarl out das lods jl inc dec repz lods lods jmp scas imul movsb jecxz iret sarl movsb in mov int imul sti and outsb push cmpsb out mov jns iret repz stos in das mov mov ds repz jns xor out repz mov into push scas push mov jns sbb jl cmpsl stc adc push mov or inc (bad) mov out cmpsl mov mov iret repz mov das shrl out lods in sub push xor out clc insb ret ret xor jae lcall dec imul rcrb (bad) fs out lcall mov (bad) jmp pop stos stc cmp out inc leave cwtl in lret lahf cmpsl mov sub stc cmp cltd mov lahf out sahf push je mov iret repz push jns les iret repz adc inc jp ja out out iret pop push mov mulb rcrb sarl repz shll stc cmp repz push repz cmpsl pop nop (bad) aam imul aad mov repz rcrb (bad) gs dec repz mov fwait mov out ds out adc repz popa jl sbb insb mov or pop jnp mov (bad) sbb push stc add or stc cmp shll ds sub repz cmpsl jns sbb xor repz fs lods les dec repz loopne loope loope push int jns loop jb or push cmpsl stc cmp sub mov daa in iret repz xchg fildll out push out ds mov push out mov repz mov sbb ja ja nop add outsb jmp push iret repz ficomp in push mov (bad) lahf out ds in jb loop out sahf out xor mov cmp out mov mov sahf cmpsl stc add push mov ds (bad) je ficom repz repz out xlat es js repz out cmc push out ds lcall out sahf xchg mov jmp iret repz push jno test (bad) in stc out (bad) fucom jns cli adc idivl out pusha andl dec repz ljmp sahf out in incb cmp sarl ljmp push cmp nop lcall push add sahf out imul sbb stc cmp shrl (bad) sbb out sahf cmpsl inc mov repz adc xchg (bad) add jbe mov lahf cmpsl stc cmp pop pop inc loope or or iret sarl inc jne fnstcw cmpsl stc or inc jbe push or sarl push in push or repz push push (bad) int stc cmp pop adc xor lcall cmp push adc jecxz adc and dec jbe int3 lock cmpsl stc adc cmp (bad) pop movsl cmpsl fldcw sbb jns out es push sbb cmp mov or repz cmpsl pop scas add imul and iret repz fisubrl and out dec repz and pop ds repz cltd (bad) repz je sbb mov jmp daa ss mov sub lcall sub imul sahf out (bad) icebp sbb dec mov movsb (bad) ss push (bad) cmp cmpsl stc bound cmp cmpsl stc push cs das ja jl out roll xor xor iret rorl xchg sarl mov addr16 iret mov add inc jg pop ss repz cltd aaa mov int jns inc mov lcall cmp mov repz and jns cmpsl stc or aas jp imul cmp repz out rclb aas push xchg out lcall xlat out cmp sbb pushf fbstp int inc arpl inc or cmpsl lcall lcall dec xor dec cmp dec dec loopne dec hlt lcall cli sbb cmp out pop shlb mov shl push dec pushf repz out cmp (bad) repz out push aaa pop lods add repz push jae rclb push lahf out sahf push outsb mov out xor fisubrl pop sbb iret sarl xchg in inc pop xchg ds repz ds mov dec repz out jns and lahf cmpsl stc and fistpll popa mov repz bound lcall lods add shrl shr sarw inc insl mov imul push jge lcall and roll into stc cmp repz push hlt sub repz cmpsl dec jb in outsb cmpsl stc cmp push xchg int3 pop outsl bound jns mov in or (bad) sahf cmpsl stc cmp add aas jp cmp repz das jb test stc and gs imul xchg sub int fucom into and push int3 pop ja lahf cmpsl stc cmp sbb jns iret repz mov xor out inc insb mov ds xrelease sarl lods (bad) hlt adc out ds imul cmp out sub push ljmp cmpsl stc pop orl int in push (bad) inc push out ds mov dec repz nop mov push iret repz mov add cmp dec je shl sahf out lcall cmp repz ja ds repz ret out mov out sahf out ja shl sahf out or movsl (bad) repz out sbb jns iret mov arpl push lea sarb ja sti es push jp enter repz inc int lahf out aam xchg jle inc xchg and mov lcall xchg xor push outsl xchg push cwtl lods dec cltd jmp lahf idivb mov imul stos dec sahf call dec mov xor mov cmpsl fnstcw in movsb sub lcall popa test test lods push stos negb lahf imulb movsb lods sahf push scas scas push scas push mov fwait dec jnp mov mov mov mov repz sti pusha mov mov outsl (bad) xor xchg negb jle iret repz lret outsl xchg mov cmpsl stc cmp add int jns fildl mov iret repz (bad) repnz outsb lods adc out mov xchg out lcall out fldcw push sarb ret jl int scas xchg les ds flds (bad) popf cmp aam leave lahf out insb or movsb ds fdivs dec repz into fistpll stc xor iret pop sarb fnstcw mov aam aad xor cmpsl sar sub push jg stc cmp test push int jns (bad) movsl iret repnz dec ds repz xchg mov lahf out cmp sub xchg jl out negl mov cmp rcll mov repz adc mov aaa fidivr add push lahf jns iret repz jmp lcall loop mov cmp out adc push cwtl mov fdivr adc cs xchg aam sahf out sti and dec jo repz out in out pop out cmp subl dec jo mov iret repz mov lcall ret js sahf out lcall ds (bad) aaa push mov in ja ja out in out sahf push mov ds sarl bound int imul xor (bad) lods (bad) add iret sarl push mov sub jns cmc test inc mulb lcall mov adc cli jbe cmpsl stc cmp sub cld sahf out xor lock std movsl lcall (bad) mov sarl sub push add repz iret fidivl add imul add imul jmp add iret cmp dec inc push dec mov jns cmpsl stc or inc cmpb insb or push sbb pop cwtl fxch out ds or cmpsl stc cmp push or fbld or popa les push mov btr push test adc adc or fnstcw movsl inc adc jns adc cmpsl mov pop jmp sbb rol pop sbb xchg sbb sbb repz push push movsb inc pop dec mov xor jnp sbb mov lcall push loop and (bad) es leave imul xor cmpsl sahf inc sub xchg sub repz jbe push out cs insb lahf cmp in xor cmp push mov sarl iret push xor int imul adc cmp iret repz jge stc cmp ds imul out jae jecxz cmp repz repz jge leave lock sahf out cmp popa test iret cmc sbb cmp lcall or cmp out mov ds cmpsl stc dec jne,pt enter dec repz inc sahf cmc dec inc repz cmpsl cmpsb std push inc jnp repz iret les je daa inc out ds jg sbb repz fist inc push mov dec out ds inc mov sbb repz clc inc dec ss mov in pop dec push xchg aad repz pop dec aas addr16 mov sahf out ds dec das push jg cmp out iret mull dec dec jne sahf out lahf push dec insl fdivs dec jns iret rcll repnz dec repz push mov lcall fidiv push xchg cmp push fs repz and fdivs push cmp out mov dec pop mov stc add inc push out leave es pop push push out (bad) pop sub cmp repz mov mul jns out pop cmp xchg into repz pop push xchg rcrb pop dec mov or lcall or xor sahf out pop test repz dec je (bad) out lcall or jl stos rorb inc (bad) mov ret fs pushf out idivl adc push pop mov jns mov cld sbb pop ds repz cmpsb leave in packuswb out xor fwait mov loope push stc cmp xchg mov int jns bound and iret repz xchg in imul out jl ret insb repz shrl dec jno mov out mov mov outsb lcall adc jge out mov or push mov cmp pop test iret rep int3 out sbb repz out lret jb,pn clc out jns out jae outsb mov pop repz repz push mov adc push lcall jbe push fstps ja lahf out pop lcall iret repz fldcw out sbb push les xchg repz out or mov clc sub pusha xchg (bad) out cmp adc sbb sarl mov mov cli cmp jle adc xor mov cmp out mov cltd jns out rorl test shrl repz xchg or sahf out mov or iret dec lcall xor loop mov sarl (bad) sub jns lea mov push mov cmp out sbb stc xor cmp lock xchg ss data16 xchg inc xchg jecxz xchg adc test xchg fdivs or mov fwait cld out insb ds pushf sub repz xor (bad) jo sti xor pushw mov mov sub push je sbb jl mov pop test xlat add out jnp int and dec ja mov iret cli movsl stos push lods add repz push mov sahf out mov pop mov lahf out lret sahf pop mov cmp cmpsl stc sub cld lcall mov lcall int3 btc int jns fstps mov out lret ja,pt insb lahf repz mov rorb out push es das ret repz les ds jp dec (bad) movsb cli out ds (bad) test out ds leave pushf adc insl int3 cmpsl stc cmp es sbb stc cmp adc jnp pop into test repz testb mov mov clc dec (bad) mov jmp lcall (bad) int imul adc ds repz xchg mov sahf out inc imul repz xlat inc jno lret out sahf out fdivrs jns (bad) iret repz sbb mov ds fsubs push xchg fildll jnp repz lret push sub iret sarl mov fcmovne out ds loopne mov out cmp (bad) push loop adc xor scas aad push imul and jge out cmp out repz inc push mov or dec (bad) sahf out cmp cld cmp je out idivl sub mov sarl in sub movsw out out ds in imul xor mov sahf out imul repz out dec jnp (bad) jns out lock bound inc icebp cmpl enter push test cmp out pop hlt dec push out ds test and fs sarl jge or xchg sub mov dec stc aam cli in cmp lcall std lods xor out out ret push (bad) (bad) pop add repz int add add imul add lods out xor std push add int jns cmp sub ds repz lods int3 ljmp outsb mov or push jns jge nop fiaddl or push jns xor out lret xor xchg cli repz out or sub ds cmpsl roll push sub int jns test cmp repz andb stc sbb cmp add push lcall fs lahf out testl mov xor iret repz xchg rcll adc ds xchg xlat sub jnp iret repz hlt xor je aam lahf out lcall sbb iret repz xchg cld cmp xor out jo jecxz sbb repz repz imul iret in xor push mov lahf out sbbb iret repz jmp out sahf out dec push pop pop sahf out sahf imul jns out xchg cltd lahf movsl lods out sahf out mov out sahf fsub out sti add or repz sbb sub repz repz dec push iret repz pop pop insw jbe cmp repz mov iret repz iret repz lret aad call imul sbb jns out sub cmp dec adc push pop push and push push push andl test add sbb aas (bad) in cs sub push jb imul inc inc jae fs inc pop inc add subb imul bound pop xor adc inc in inc inc pop mov or push sub push push add outsb xchg movsb sub outsl jb xor gs mov xor ret loopne or sub mov arpl inc mov sbb inc (bad) add ret jmp ret dec std fs sub arpl js dec xlat bound mov mov fildl fisttp sbb mov lds fsubs and xor dec xlat (bad) lods mov xlat (bad) jbe bound shrb sub aam and add or ret ss outsl mov inc inc or popa in adc inc mov inc mov cmpsl outsl inc pop and push add out out adc add stos and mov sub xlat (bad) jb or xlat (bad) dec pusha pop test xlat push pop adc (bad) xlat adc stos sbb rorl nop inc inc and ds inc inc mov mov enter or and shrl stos mov and aam pop and test sub jle push daa cs js push mov jno jmp mov xor aaa mov js mov dec cltd movsl mov xor dec in add mov xor dec in xchg or dec dec dec xor ret outsb mov movsl mov icebp dec inc and add add adc sahf pop pusha push in mov sub add popa cmp leave add inc cmp sub push inc xchg cmp cmp mov sub cmp stos in in cmp cmp mov push hlt mov inc sbb inc adc enter xor sbb mov dec pop mov shrl jbe fcoms push dec mov roll inc std push inc and pop std push stc xchg dec (bad) xor inc pop rcll mov dec inc inc sub stos lods push mov cltd inc inc add mov jmp pop outsb mov mov testl or std mul mov adc xor adc push (bad) inc jecxz insb mov out add dec adc add dec dec add dec adc add dec dec add dec adc add dec dec and aas adc test push sbb xchg mov push jae push adc and pop inc and adc adc dec dec add insl dec (bad) xor sbb dec or sub fs xchg dec dec mov sub dec dec pop pop xchg or dec dec push xlat inc and xchg pop dec dec jb leave adc inc xchg sbb dec dec push leave inc and xor leave adc push jb dec dec adc jb leave dec dec and push jb leave add sbb push push inc leave adc jb push sti inc and popa bound push inc sub sbb push inc dec push dec dec xor xchg sbb dec dec push sub (bad) mov fisttpl dec jecxz stos in fnsave jb mov and inc mov push aad push daa es mov push in cmp pushl insb or jae push adc ljmp pop rcr and call in push mov push sti rolb (bad) aad (bad) loopne sbbl or pop inc add pop jns and xor and push xchg or stos xor add imul cs sub addl addb push aaa push (bad) mov inc cmp pusha sub (bad) sti movsl sbb outsb push insl out fisubr out and jo insb popa jb xor inc pusha and orl add xor and push ja jg push push insl pop xchg xor or loope mov pusha add xor and or dec or push pop pop pop stos test dec test lea sub outsb aad aad mov or add push pusha push cs test add or add pusha pop add je push sti testb call je ret or xor cwtl lret inc xor lods ljmp popa je adc sbb movq mov test pop jno mov insb jae push orl and cmp arpl subl push dec pop dec add cmp in mov inc lcall xchg push and pop jbe inc mov pop imul cs les dec push ss stc inc cmp lea stc cmp mov or std cmp or lea push (bad) jbe fwait pop inc pop cmp imul insl (bad) jbe call outsl push sub push xor loope inc or sub xchg lds inc add orl adc adc loop test or addl dec ja mov mov pop and subl dec adc repz (bad) or adc jne dec sub (bad) push imul outsl push sub adc (bad) push imul ja loop sbb push (bad) push insb dec rcll xor test push or or push insl cltd dec sub mov xchg mov push (bad) xor vcvtsi2sdl js inc shll add mov mov dec xor adc push pop pop imul lea lahf stos (bad) adc fnstenv mov sbb ja call pop inc adc adc pop mov sbb xor (bad) xor popf add or les lea and jno push mov xchg mov xchg or xchg or adcl test outsl int and adc outsl add iret adc push test outsl adc (bad) enter outsl outsl push add outsl outsl add add or add mov invd les or and xchg mov mov push push ret and cltd dec dec popf pop test sub inc insb push mov inc xchg sub sbb dec sub lods adc mov add push rclb push repnz gs push or dec adc mov jae xor popf ffree and ds insb push pop ret mov sbb cmp xchg dec xorb adc or inc dec xchg push mov dec adc adc push mov test mov adc adc xchg mov aas lret fmuls pop mov adc and adc fcmove xor adc dec mov arpl push push sarl (bad) adc inc xor lea (bad) setne inc repz mov pop fwait sbb sbb dec add sbb adc imul adcb adc arpl inc dec inc or push push in jbe cmp inc pop roll xchg pop adc dec insl xchg insb (bad) fldt push mov cmp mov aam daa push leave pop arpl mov sbb in xor dec sub push fistpll pop popa mull dec leave xchg pop repnz inc dec dec orl dec stc je jo bound mov dec push inc inc pop dec cmp xchg dec xor push xchg xchg lods dec insl mov (bad) jae push (bad) nop dec sbbl lods push push adc movsb cmp enter mov shrl shrl pusha inc sti push adc xchg mov enter mov insl inc mov bound lods imul aaa jo outsl insl push pop adc pop aaa outsl push fisubl in aaa outsl lds xchg add cmp or mov add mov pop les xchg pop test xchg inc out stos mov cmpsl mov adc arpl and mov xchg and mov push mov add and movsl and or mov lahf aaa mov and mov rorl xchg add mov adc inc inc insl mov xor xchg adcb push inc cmc mov mov sarb std ret inc les aam sarb add aam or fcoms ret cmpsl add sub sub push ror inc inc and xor movb dec add pusha stos in (bad) aaa xor rcl das adc or push sbb or and arpl int rcll pop xor push pop push sub dec lea inc or xor or cmp xor inc xor insl sbb push fisttpl or add xor pop mov mov mov xor push ret dec lea mulb mov inc xor push fs cmp mov xor adc mov dec push xor stos pop aaa lar push xlat stos lods insl popa lods mov inc stos insl dec insl sub dec (bad) or imul mov gs gs xor jb jb outsl push mov pusha push dec and pop dec or shrb fwait and stos sbb outsl pop and (bad) outsl outsl inc xor outsl inc xor outsl outsl sbbl push and outsl lds das mov xor popa mov xor pop inc dec in xor adc xor mov inc test lret (bad) imul adc or cmp and push pop push cmp xor lcall push inc xchg add mov aaa inc and pop shrl stos inc jg xchg pop stos dec jae nop pusha mov mov inc test imul fisubrl ljmp insl inc inc test iret shrb inc push or push mov inc stos pop dec popf fisubrl add inc xchg pop inc stos movsl push popf push mov pusha add nop and pop push add or push insl arpl aad add jno or push pop lahf jne push adc std xor adc jnp inc add sub add sbb xor pop add push fmull inc jmp dec dec xor add and cmp push add iret xor fisttpl inc fildl pop add xor push test jg adc xor mov jbe inc xor inc bound inc rorl dec mov dec or pusha cmp push inc inc pop xor pop cmp inc add dec insb push xchg push or inc cltd mov push pop rolb (bad) (bad) cltd ficompl movsl loope adc mov pop push fwait push or inc sbb mov xchg pop insl stos inc push xchg dec xchg stos mov dec inc xchg dec and xchg lock inc popa pop insb imul inc pop inc adc adc inc inc adc adc inc dec adc adc dec dec adc adc dec dec adc adc dec dec adc cmp pop dec adc push or xor xor lods dec stc pusha xchg js inc dec push nop push add dec arpl mov and push pop inc outsl push mov inc push inc push mov test adc inc or xor aam inc inc jge xchg dec xchg dec dec dec xchg dec xchg dec dec dec xchg dec xchg dec dec dec pop dec xchg dec dec fiaddl sbb adcl sub adcl push test std jno add fbstp jmp test adc adc leave inc leave inc dec xchg es es dec dec es es dec dec push and push and jg add cs dec adc inc mov xor test mov add and insl sub mov sbb sbb sub sub dec dec sub sub dec dec or nop stos or subl sub dec dec stos mov nop mov inc inc out lods add stos lods xchg adc push ss outsl mov jns mov dec mov dec mov dec add mov shlb mov test arpl add jge xchg sub push jnp and mov dec roll add add add add push add and mov add inc pop adc sbb sbb xor dec ss jge mov mov mov mov mov inc mov or out shrb mov fnsave or cmpl dec dec add test pushl inc inc xor lock jl cmp dec cmp inc leave sbb imulb push mov movsb inc adc inc xchg daa xchg fldcw xchg test mov test and xor jl lea xor add dec pop pop leave add push pop pop adc and pop add pop sbbl adc pop add push rolb inc xchg add add pop pop add pop mov add cmovo xor inc xchg and inc inc dec adc paddusw mov aaa stos ss inc dec and bound inc or jno imul push sub imul xchg aas insl and push int imul add inc imul inc outsl jae dec sub adc test jno jb jb outsl outsl xor sub push inc inc pop pop push and xchg mov stos pop push xchg mov leave add add xchg outsl popf push roll loopne mov push or or mov daa insl lods mov sbb insl push imul sub pop insl popl add xchg inc (bad) mov or inc fldt inc xor lods push sub inc mov push pop int3 das xor xchg push sbb lods popf pop ljmp sub and push pop popf fildll push push lfs cmp inc jge jbe sub lds mov push cltd xor jmp dec and dec sub jecxz and fildl inc enter subl push sbb push mov mov add fwait push xor cmp mov bound pop mov mov xor mov dec imul movsl repz push adc mov add xchg mov mov jnp nop pop aam mov pop leave jg push insl aam lds inc lods push addr16 lods or pop adc leave push sub mov adc mov outsl aad mov sub push xchg aad xchg push adc rcrl imul (bad) inc xchg test je insl popf outsl out pop and and outsl add add add outsl outsl sbbl or lret cmp mov and outsl or sub inc les jne outsl stos cmp and add repz inc out pop pop inc mov push xor call pusha mov sbb mov nop and and sub push push push inc add adc bound pop xor push popf (bad) enter out outsl mov (bad) in in outsl or mov outsl outsl inc add add fstl adc fcmovnu rcll (bad) inc inc addr16 and inc fisubrl mov add outsl shrb inc mov inc or and inc adc outsl add outsl mov dec sbb or and pusha icebp inc jb enter lods dec pop add mov inc pop push cmp icebp aaa stos or cmp push adc aaa dec dec pop leave adc mov xor cs adc add mov pop inc iret mov aad mov pop ret fisubl mov pop ret push cmpb outsl mov inc inc mov inc inc in push dec or or add push jge mov push and jne add push lahf insl mov stos add push adc adc mov cmp add and (bad) arpl fwait add mov cmp push aad fistpl test push loope inc and pop imul cmp xor cli xor mov or (bad) xor xchg xor repz jo jbe mov lcall sbbl dec popa push aaa test stos pop push dec pop inc jg sub fimull inc inc dec inc jbe fidiv inc and data16 jae out pop jl inc push xor outsb mov pop add addl cld jne test pop adcl outsb dec outsl jo inc mov push sub push cltd pusha mov pop adcb mov add sbbl dec dec dec dec dec lea or dec dec movsl data16 out dec mov test in jecxz (bad) out inc inc inc inc repz ret in sub dec ja stos sub lea or pop dec mov push sub push xchg nop or inc inc (bad) add stos and rcr stos xchg jnp sub fwait js ja push repnz add inc inc dec dec dec pusha jns add dec add (bad) xchg scas or inc jl inc add dec aad xor aam inc das mov jb adc outsl inc mov ss add in pop bound sbb dec cmp jne inc jge mov adc xor or sbb sub add add lds mov fsubs addl dec jp aam dec cmp lret je inc rorb add dec je aam adc xchg test insl adc fsubs xor imul and cmpsb bound (bad) or adc add aas push insl push mov rcll mov rcll push mov aad sub sbb test in (bad) mov mov adc add lods adc jne pop sbb fsts mov cmp inc add movsl push iret pop mov inc lods stc imul sub add icebp mov xchg mov add add xor xlat xor rol inc lds mov or cli and int3 or inc inc aas test inc xor push insb or arpl push pusha imul pop out push push jecxz xor add lods and rcrl movsl jbe dec inc jns cmp popa inc xlat aas and fild data16 movsl push pop push popf mov push mov imul push test mov xor lods fiaddl ljmp push cmp sbb imul in cmp outsb mov sarl lahf xor dec sbb (bad) adc jns orb adc insb sub faddl xor insl flds shlb and add mov (bad) xor sub add adc xchg lret scas orl adc push sbb xor pusha inc xor insb stc sbb inc repz mov mov sub imul pop mov pusha fstpt and jo mov dec xchg jo fimull xor inc movsl scas xchg test icebp movsl popa or gs jecxz push mov fs dec or (bad) jle repnz inc jnp cmpsb inc andl push repnz or inc or bound stos nop ficompl mov andl pushf (bad) or xor lea add adc inc pop sbb lods mov jl pop xchg dec js or adc dec xor mov adc insb xor insl imul pushf test test (bad) mov fisubl adc sbb sub rcll xor data16 jb push insl jne aas movsl mov test jno sbb test in mov xor xor sbb or sbb xchg xchg or sbb adc and sub or xchg adc dec fwait test xchg les dec mov les push dec stos and icebp jnp inc enter pop push pop pusha fwait test (bad) pop add scas inc dec mov inc add inc inc add pop or and adc jmp lods inc pop stos push lods adc lods xor and mov lret mov add and push adc and lahf fist pop rcll pop inc pop xor adc stos add ret and mov fisubrl mov adc xor adc jns inc inc movsb mov dec inc aaa or mov sarb icebp mov out test push dec inc pusha push pop daa in cmp sub cmp popa adc cmp mov push xchg dec outsl movsl lret sbb xchg sub mov dec dec aad imul outsl mov jo js daa adc add mov xchg xchg popa test ds arpl and push in inc add gs jae rcrl inc dec dec jl add lret outsb popa outsb outsb shrl inc lret inc push (bad) ror loopne es push call adc mov insl jns bound loopne jbe xor imul cmp ss sbb lock and xor or test rcrb cmc adc pop pop and inc inc subb rorb in lods push fdivl mov inc mov stos add dec popa outsb or xchg pop dec popa outsb dec outsl or pop fs outsl push lods pop add or (bad) adc imul js mov xor xor out mov push shll es push push sub mov inc pop arpl add (bad) mov sub inc jg push or imul adc call stos lods lcall push test add addb or or addb mov call aas (bad) push aaa push jo cmpsl mov or (bad) add stos add inc adc mov add rorb test mov and dec inc add test arpl stos sbb arpl stos pop add and inc icebp jo arpl test push jno dec push inc mov jg (bad) aad (bad) xor mov cltd stos addl inc xor cmp sub addl test push inc xor xchg sbb mov inc sub cmp push push push sbb (bad) and push jge mov mov nop sub adc adc inc push push mov lods rcrb push pop push xor stos add notb inc outsl outsl je aas fidivrl sub test jle xor inc jne scas lret jne push cmp xor adcl pop push imul jo hlt loopne add fs mov lds aad lods dec iret (bad) pop inc pop leave jns (bad) adc inc test jns shr iret push cmp inc xor adc rcrl (bad) cmp xchg push fwait gs push mov inc jne or sub adc mov aad incl cmp leave adc pop aad test push xor cmpsl loope mov shrl sub aas push outsb insb inc mov xor jl and loope subb dec (bad) pop insb cwtl cltd or dec inc aas jb sbb jbe outsb outsl test lret imul jo adc rcrb inc leave jbe sahf dec jmp lods test mov xor movsb movsb inc and and mov adc pop leave fist jne lret lods fisubl fsubs mov inc outsl inc mov add cmpsl stos and lods push and mov mov jbe sub adc ss mov or pop scas shrl std jae outsb or or xchg lods insl adc xchg lock inc in test xchg test cmpsl sbb mov mov dec xchg lods stos lods mov xchg jbe and movsl xchg test cmpsl or pop aad lret (bad) fsubrs test xlat xchg dec pop add lods xchg and bound or aam jno aaa es in and movsb into adcb fnsave push or mov push jnp jnp push pop mov cmp scas stos push je or cmp xor inc inc push mov test xchg mov xchg xlat adcl popf cmp popa outsb xor lds and add dec xchg jp xchg mov stc xchg add ljmp pusha push (bad) fidivrl fsubrs outsl mov test sbb (bad) add add or push rorl cmp jns dec fwait push or fwait sbb push rcr sbbl adc inc and jbe mov imul push pop or and pop add dec add (bad) add push inc dec push mov shr mov pop dec fdivs addb outsl adc fiaddl push pop mov out jne insl inc jmp test adc pop push mov xchg leave fwait push sbb inc lods fsubs sarb mov pop (bad) cmpsb aaa jns addr16 jo mov cwtl int inc test mov imul jne fidivrl adcl adc dec sub inc jne stos sub inc jne scas sub imul mov outsl outsl sbb (bad) in jb cmpsl mov inc adc mov roll and or test lods mov lods or or inc nop dec inc adc out mov movsl out adc push sub lods (bad) push xor pushf mov or lods dec aam in stos sbb test scas or mov push adc stos pop add (bad) push ret dec cmpsb fcomps xor inc aaa push xchg inc adc mov imul inc repnz add jmp insb push jo push lods cmp xor repnz push cmp fcmovnu push rclb mov push inc push mov mov test mov stos push insl xchg mov mov mov mov cmp mov adc or sbb popa jp jne xor insl bound inc inc add lods in popf roll inc xor mov jmp add scas mov add sbbb xchg push mov gs push fidiv push xor ss out lods test stos jecxz test pop shl shll ss dec pop jo fiaddl rcll add jbe push mov push mov fsubs dec das lods xchg repz xor xor aam pusha jns push inc or xchg or inc inc xchg or xchg inc inc xor or xchg or dec dec xchg or xchg dec dec xor or xchg or dec dec xchg or xchg dec dec inc int xor adc and and lret and dec push push fiaddl fildll sub xor dec inc dec inc push inc push inc inc inc push inc push inc inc inc push inc push dec dec inc push inc push dec dec inc push inc push dec dec (bad) dec enter dec dec (bad) add add ljmp mov inc inc xchg stos in inc inc sub scas xchg stos in dec dec in mov pop sbb push jo (bad) adc mov xor cmp ret pop push insl lds pop repz in or dec popa xchg dec mov inc cs xchg dec add lods add mov dec addl sbb dec (bad) mov dec iret inc leave push jo dec aad jne call fstpl out into inc addl xor push inc inc inc fwait lods arpl adc adc mov and push add or or inc pop or dec cli fisubrl rorb adc add jne jnp adc or flds jno or sub dec dec push or or push inc adc push lds or push insl lret dec mov jnp je add imul mov dec add inc lods (bad) adc fsubrs or incl pop rcll mov andl dec and shrb leave or push mov sub nop mov cltd dec dec mov cltd sub cltd sub inc mov or sbb aas mov cltd sub sbb shrl mov xor adc push and add xor adc or adc and inc orl mov inc jb and dec push and dec and jb dec push add or adc dec and add inc or dec adc and stos pusha push pop mov vcvtps2dq mov sbb push adc (bad) or push add inc adc sbb jno push or push add push jmp mov imul sbb add jno push into rclb adc jno cmpb push mov (bad) mov and and cltd mov inc dec inc mov pop push ret rcll inc insb mov dec pop jae add shlb sbb inc inc mov roll dec sbb mov or lea clc int3 out or mov xor or xor sahf movsl fadds pop push insl outsl loop xor or jae pop xor fsubl fisttpll (bad) nop fiaddl pop dec inc inc aas sbb mov sbb pop xchg push xchg and insb in jb pusha jmp sbb dec fadds mov popa js pop push dec or lods mov inc add (bad) jne rcrl mov inc inc mov enter rclb aam pop inc fwait inc inc jbe sub push rol push and lock (bad) xor push lret mov jnp ficom rcrl imul add inc and push or aad (bad) push lret (bad) and xor lods outsb jmp pop pop int3 and aad adc push inc adc shrb xlat jne mov xchg mov addl mov jno jae mov jnp adcl mov mov mov and add add aam std inc mov push xor cmp xor mov push inc inc ja ret adc add (bad) inc push pop inc inc movsl lds push aad lods xor xor add and nop and inc mov mov nop sub dec or cltd and and out jmp add and xor and add add add xor dec mov xchg and aas cs mov mov add inc sub push pop lock xchg mov jo pop les pusha daa and ljmp push add inc adc bound fiadd mov mov xchg mov mov notb mov stos push lods test push fs cwtl jo mov test and inc push push inc pop push pop dec adc push xchg mov add imul inc mov add jmp push sbb inc mov aaa add push mov shrb test mov or fildl or fistl or mov fistl and sub cmp mov hlt sub adc cmp sub jl sub dec and xchg sub xchg push push xchg sub xchg mov inc and cmp xchg push popa inc xor jnp xor push gs aad mov and inc lahf xchg or xchg mov xchg sbb jae dec popa shrl push out mov popa gs fdivs adc dec inc jge addl dec and leave inc jle jo jb adc outsl jge jge cwtl push adc test xchg rcrb leave xchg mov stos dec push popf imul loope inc cwtl cltd sub push inc fs lods mov mov dec lods test addr16 insl push adc add inc movsl loop pop in mov test stos dec push sub fs in xchg jae jo fs jae add loop aaa pop aas notb enter inc mov and ss leave xchg jo jb test orb dec push xchg inc mov inc push xchg inc inc inc mov or inc jge sbb orl dec sbbl dec dec dec and sbb dec dec sbb sbbl orl adc and dec mov dec dec dec and dec dec dec push test gs push inc pop add nop inc inc shrl pop fisttpll dec jno add ds dec pop inc mov jo xor (bad) push (bad) push xor mov mov fimull jge inc mov sbb xchg xor ret pusha sbb shrl sbb xchg jae mov or pop lea js push enter gs fsubs push enter mov ret xchg sub or xor or sub mov insl dec add adc add and pop pusha push int jne sub push inc out fadds push aas inc mov inc xchg imul pusha sbb sub (bad) adc (bad) dec imul xor fmuls dec xchg mov movsl inc mov das and add inc movb dec mov out jbe and pop sub adc ds ds and sarl pop lret or push or sbb xor add mov adc push adc fadds cmpl adc mov cltd xchg jno mov mov jns mov loop adc popa pop js pop adcl test mov inc scas bound mov in and and imul push jne fidivl les les mov xor push addb jno add mov scas add mov loopne adc cmp addr16 mov dec dec cmp sub test mov mov pop mov sbb dec and adc xchg inc test inc or mov clc shrb call arpl adc fidivrl iret es jo push jnp inc insl rolb inc adc sub ficompl or ja insl push mov ja jnp or gs data16 orl push xor mov inc mov push add sahf subl or rcll mov mov jne mov dec adcl nop or push or sub and jns loope ss pop adc xchg dec mov and mov push fist mov push pop adc mov test adc orl or and push xchg push and rcll or aam mov inc enter pop mov add inc test push aaa scas or (bad) dec dec or mov in inc scas dec dec mov or ror (bad) cmp or dec movsb mov mov adc adc sbbl enter pusha test sub and dec push xchg dec mov jnp xchg fs dec or dec fs xchg test xchg dec inc inc xor inc mov cmp sub es idivl push sbb pop leave push test fnsave leave mov inc aam cmp or das rorl add cmp (bad) push xor add stos dec mov ret aaa lods (bad) inc inc notl and push cmp sbb je add (bad) mov mov or adc mov add inc stc push and push push incl stc dec add dec or mov test bound fsubl mov fimull mov lods push (bad) lea nop outsb mov xchg ss outsl test inc mov xchg dec sub push xchg mov xchg (bad) xor push or cmp in outsl outsl fs push add shlb stos add xchg sub push mov inc pop push mov add inc cmp adcl jno push xor xchg imul neg inc imul jae aad adc pop and insb aad jns inc xchg jno imulb dec popa dec xchg inc jo mov xchg fsubrs and dec test addl in jne add cltd push imul push xor inc dec mov in pop push dec xchg dec mov stos inc inc and lds inc test inc insl sbb inc inc pop and stos sbb xchg xchg mov orl sbb inc mov nop push mov jb jo outsl push insl jno xor xchg pusha movsl inc inc scas dec lea mov rcll push push push shll mov push jne pop mov lods adc testl daa sbb mov push scas std push adc (bad) sub mov push scas sbb inc xor addr16 adc test pop test push je dec inc in cmovp mov or lods sbb inc pop insl test xorb adc inc add in pop add inc fisttpll (bad) rolb mov call add pop add stos and lea push pop je push xchg test stos sub (bad) and add bound aam mov inc lds mov insl test imul push or mov rcll rol or and andl popa or mov push mov dec stc jg push sbb push add push cltd bound push cltd dec inc inc cltd dec push cltd inc inc inc push cltd dec push inc dec dec dec push cltd dec dec dec cltd dec push cltd dec dec dec push cltd dec push dec dec dec dec push cltd dec dec dec nop dec push cltd dec dec mov push dec push mov dec bound mov movsl imul push inc add pop push lods sub test pop nop xchg (bad) push aad ror out scas mov aam push sarb sbb (bad) xor xor dec test or or outsb xor and add jnp mov mov sub sub pop add inc nop std sub sbb mov pop push lea sub ret sbb inc inc (bad) aad fsubrs ret add and pop ss test rcll jo jg pushf mov insb and les loope insl mov inc inc inc mov dec and inc in test inc add imul test and push cmpsl inc inc dec adc pop jle inc and push inc cmp adc sbb dec xchg shrl loope movsb gs cmp dec into jecxz jbe outsb inc gs add sarl lret inc movl arpl enter lret imul mov mov and dec pop fimull jne ja add (bad) and sub adc adc jo mov bound push sbb aad bound push insl jnp pusha mov sub imul xchg outsl outsl rclb inc adc cmp jb xor jb jb inc add jb dec add jb dec add add pop dec push dec push xor dec push es pop xlat mov stos (bad) fcmovu imul push inc mov add mov jae inc xor fs and dec lea mov mov inc (bad) pop movsb dec adc push movsl insl push xchg jne aaa push dec xchg mov popf aad in add cmp enter test jns pop inc mov cmp push push pop insl (bad) icebp outsl addr16 pop (bad) push outsl cmp jns and je insb je push repnz or mov or in inc inc inc in sbb inc inc inc sbb or inc inc inc or in dec dec in sbb dec dec dec sbb or dec dec dec adc or inc sbb inc and inc fwait or fs dec dec dec or fs dec push or xor push push inc pop add inc add push push dec bound mov adc inc dec push adc mov cmp xchg jae lods ljmp stos push xchg fwait inc inc mov xchg flds js inc pop imul imul dec imul sub imul outsb imul outsb imul outsb imul outsb imul dec dec insl inc xchg inc loope inc nop (bad) pusha dec inc adc and dec ss push insb call enter lods orl mov loope movb add or cs xorb push pop mov pusha insb out and sub push pop dec inc dec or add push outsb arpl mov rolb adc jne and inc dec ja sbb test push and add lds inc adc add fs in (bad) in xor inc push sub sbb rorb mov or inc (bad) int xor mov and xchg pop add popl or xchg jmp xchg loopne push or adcb pusha (bad) sub sbb test sub jge fildl sub sub stc jge mov add idivl xchg push std sti ret push fdivrs decl outsl dec xchg pop xchg outsl outsl dec xchg pop xchg outsl outsl dec nop sbb outsl add xor and pop iret inc pop and repnz ss sub test jne imul jns jo mov and dec adc sbb test push xchg or leave add and insl push sub or mov jge adc xor addl mov pop xor or popa es add imul test fsts mov or inc or mov inc imul mov push adc shrl push movsl movsl lods sub stos mov dec adc inc (bad) sbb mov sbb aam jo xchg adcl in inc js lcall (bad) jae push push pop (bad) push jne stos push dec jmp adc data16 jmp jp mov sub ja jne and and and popa subl mov inc inc pop ret add inc inc add bound lods test push pop xor (bad) dec sbb data16 (bad) in inc inc mov mov int3 mov dec dec xchg shrl add dec sub push cmpsl dec mov cmp push mov test dec rolb dec mov add pop mov ja dec je dec lods lods sbb push dec xchg and xchg inc sbb add cmp xchg cltd or xchg mov or insl adc mov pop cs ss xor add inc sbb aad mov push fildl inc xor and jns add add lods dec nop and inc nop add jecxz (bad) push sbbb insb pop add add or inc adc adc dec adc dec lock lods xor adc add mov pop dec and push sub dec or cltd and nop and inc adc js fs and dec xor pop cs cmc pusha adc adc sub nop addl or sub sarb or dec adc fstps (bad) and push aas adc xor add bound xchg cmpl adc inc push inc mov (bad) dec add mov xor adc pop pusha xchg adc int or test loope mov int inc sbb scas pop mov inc cs inc inc inc xchg inc cs inc inc inc cs inc cs inc dec inc cs inc dec dec xchg inc cs dec dec dec cs inc cs dec dec inc cs inc dec dec xchg inc cs dec dec dec aam and sbb dec dec dec push sub or insl jne rdpmc aam mov gs imul mov pop data16 jbe repz xor add insl push inc mov xor stos and mov mov push mov push adc lods call (bad) pusha push popa and push xor insl les test dec (bad) push dec cmpsb and xor push int inc aam dec and jne test xor imul dec adc add loope imul and or pop jbe and aad mov or add insb aad test or (bad) rolb fldl or and push add and and inc cmp mov and xchg daa xchg in inc and outsl and mov sub outsl outsl adc and outsl adc andb imul add or lea fs stos sub test push push push gs test rorl adc mov popf mov (bad) inc xor movsb sbb push test icebp mov sub jne dec add xchg icebp and push mov call or arpl test or bound dec inc les push jae inc les pop outsl nop (bad) mov mov addr16 adc imul adc or and push mov pop mov inc lods pusha adc (bad) jge (bad) lret mov ret push lds sub test push vpmulhw (bad) rol out stos rol iret (bad) dec adc inc mov mov mov pusha or push scas lods or push pop stos inc lret sub ret insb push insb dec add lds aad push jno and mov dec mov and mov mov or and add push rorl lods mov pop iret mov mov int mov dec mov fs or dec fwait pop test mov fwait and mov adc orl pop push insl popa outsb imul add cltd lods push fwait inc fwait (bad) mov push (bad) cltd inc fwait popa push or stos lahf popf inc inc sub or inc cltd fiaddl pop stos popf lahf mov adc adc inc cltd faddl lahf add test adc cmpsl int3 and dec outsl jne sbb and pop insl rcll inc leave inc inc inc inc leave and inc inc and and push push enter inc ficoml dec mov dec inc mov inc mov (bad) pusha mov xor dec sbb xchg sbb push push adc xchg icebp adc es dec les cmp lods test adc rorl jnp lods stos lods (bad) jnp add push iret (bad) dec ret insl dec pop and inc mov lea enter push outsl aad dec sub ss and pop sbb rorl dec dec dec adcl lods cltd xchg jmp push (bad) sbb inc mov stos pusha push pop xchg xor sbb scas fsubrs inc or pop cltd adc popf jne sub adc pop popf frstor cmpl mov bound pop lds arpl mov xorl mov xchg mov adc xorb and outsl jae adc fild test popf fist push or sub add mov add push add push add pop adc and gs (bad) bound or imul push jge sbb xchg xor fild test fistl imul inc fistl push pop add adc add add xlat push je lea fildl (bad) adc daa aaa dec push xchg xor sbb adcl add mov xchg fdivl test insl inc jg ret fimull mov sub bound cmp rclb jns add fmuls and jns test and jbe mov fstpt cld inc mov fistpll inc pop js mov pop add xor add ljmp cltd jae outsl ja jns insl cmp stos mov xchg adcl sbb sbb inc inc inc sbb sub inc inc inc sub in inc inc in sbb dec dec dec sbb sub dec dec dec sub in dec dec in sbb dec dec dec sbb sub dec dec dec pop pop shrb pop add push dec dec or sbb dec dec push dec or xchg push in in jae outsb jae outsb add or sub loopne xor pop or or jae gs xchg mov add mov jge mov and iret orl mov cmpl inc jo xchg and and jo adc mov test scas or clc jae push orb sub inc jmp jb add aaa shrb stos lret mov xor mov push mov les mov add or dec dec stos sub inc subb sbbb sbbb sbb xor or mov (bad) inc aad xchg adc pop inc rorl roll sarl add daa pop add inc dec add add pop cmp push add mov push movsl xchg or push sub subl popf jp mov dec mov mov stos aaa xchg inc lahf (bad) fisubl rclb xor movsl push or inc xchg pop jae jae or xor dec jae test inc scas jae mov inc movsl ja or cmp xor sub inc clc mov pop ja push inc pop add inc loopne jae inc test cmp xchg inc xor scas nop push push xchg popa inc sbbl (bad) lcall pop (bad) stos arpl push popl xchg std mov adc outsl fdivrs push add inc scas inc inc cmpsb inc and int out dec cmpsl ss imul out insb aad pusha outsl int inc enter mov adc arpl (bad) int nop or xor push repz mov movsb xchg aad rorb inc and push push push xor and fstpl dec mov je pop fildl inc xorps lds add push fisubrl test adcl inc aam dec and or test test sub mov lea cmp fiaddl pmaxsw push subl pcmpeqw aas mov sub or inc add inc shrl adc sub add push pop jo xchg loopne stc xor xorl add stos lods mov sub inc pop jne push xor js push insl aad aad repz add lods and insl cltd shrl fimul jge popa jne push sub add or pop push jns daa pop test lea subl test add mov push inc add jns push sub mov (bad) test lret mov xchg (bad) jg jg push inc pop jnp xorl lds enter inc or add pop push pop sub sub pop ja mov lods fisubrl (bad) and xchg stc test fdivs outsl jne test and and sbb aam inc fildll mov mov loop jne dec push mov mov or xchg arpl sbb dec es pop or push adcb sub rcr inc or xchg xchg sub xchg lea imul lods addl js movsl icebp and js bound inc dec andl adc (bad) inc mov dec js sbb bound rcll lds inc je sbb lcall add jbe or lcall jo or inc pop inc (bad) mov adc arpl inc xor mulb imul test ds xlat popf insb loopne loopne outsb sub bound or cmp loope add adc cmpsl ret adc ja fildll dec jne jbe (bad) leave add dec adc dec and dec gs add cmp and and inc dec dec dec dec gs cld and jb outsl ja jno repnz mov imul or pop (bad) out insb sbb adc aas outsl sub test notl push adc (bad) push arpl int3 adc adcl cmovnp dec pop insb imul inc push mov adc or jae and or ja cltd jnp mov adc push push aas add cli or pop outsl jmp mov daa es cld dec lods js add ja jecxz inc cld add js fbld add adc sub jne or inc add push rcl mov push mov outsl mov dec movsl or and sahf adc into data16 movsl fcoms popa add sbb push add cmpsb iret push (bad) cwtl add add paddusb inc fcmovnbe outsl dec jmp mov push xchg and jp add add cltd in and adc push sbb repnz test data16 mov or lret pop fwait std frstor jne or pop adc pop sub jo sub inc sub outsl sti mov inc or or addr16 jnp adc xor adc movsl cmpsb imul and movsl mov xor insl dec mov dec ret push mov sub and scas ja and xchg jb lahf push pop push pop arpl dec outsb pop add popa sub out mov mov mov setb pop push sub sbb jo xchg lods test pop inc (bad) rcrb dec lock dec adc mov push pop iret mov sbb xchg gs inc mov loopne mov pop sub aas int jo imul inc mov push enter or inc sub lea rclb es add and pop (bad) cwtl mov or inc sti or popl pusha mov push iret les adc adc and adc xor or (bad) dec add insl ja or nop and pusha jno aas or je and dec push add push xor push test sbb add and add inc sub popl mov arpl adc and mov mov mov sub mov icebp and and iret and sbb orl jno and fildl (bad) sbb mov adcb mov or dec adc mov (bad) push add ret adc test les ret loopne cs inc mov push dec dec push and out pop out xor dec dec stc push bound out jno push stos mov shll cli adc cmp sub cmp dec pop jno repz push cwtl mov leave lcall adc and jns repz cmp sahf out sahf popf xchg mov jl jns add cmpsb push sbb sub ret cmpsl inc mov push ds pushf add (bad) fsubrs and nop fstpt xchg sub mov inc in or push jnp bound lea (bad) mov pop adc (bad) inc or and sub inc scas sub adc aas push mov push mov jg pop loop sbb mov push add lds mov sub ja stos imul dec aas push insb add sub dec lahf cmpsb pusha and mov or jns xchg out push jns out push push dec iret push add pop push dec or mov dec add xchg jg xorb scas pop inc add popa pop lds mov sub enter scas outsl dec push add jne dec aaa push add stos xlat pop scas push xorl mov ja dec push push push add sub adc imull (bad) push jno xor cmpsb push dec scas icebp sbb mov scas inc cmpsl push aas xor inc xor inc pop mov sbb inc mov lea aad scas test adc xorl sbb and (bad) add lods jno dec mov lods inc out imul popa maxps mov popf scas outsl push inc and dec insb cmpsl xor jg pop push sbb ss lahf and pop aam lahf push mov test jnp sub pop aam scas inc sub inc enter push test xor sbb push std scas std and fsubs lahf or insb mov inc lahf sbb mov scas fiaddl inc sub lods xchg mov pop adc outsl outsl lods dec cs outsl imul adc add add dec lods or jne (bad) rclb adcl push jo stos cmp push (bad) or arpl jg add add mov xor imul outsl aas cmp pop in add jne jno or inc mov (bad) mov fild add sbb (bad) cmp add pop add and xor mov add cwtl in inc xchg add mov scas stos sub and cmp or push pusha push lahf cmp or or push add imul add adc pop xchg lods mov pop sbb sub push imul mov pop jae test mov cmc xor (bad) incl xor pusha xor xor xor xor sub pop xor xor xor (bad) (bad) mov dec ss ss ss jge xorl ss aam push aaa (bad) (bad) (bad) lcall push cmp cmp cmp cmp test hlt cmp cmp cmp clc (bad) (bad) mov cmp cmp cmp cmp cmp cmp cmp cmp add add cmp jno (bad) (bad) ljmp jle cmp cmp cmp cmp cmp cmp cmp cmp cmp ljmp cmp cmp inc sub or repz jg bnd push lea jecxz ds inc ds clc call push imul mov fisttp push xor xor xor xor xor xor xor or pushl jle nop xor xchg xor ljmp inc cmp mov lcall lock and cmp jle movsl add lret cmp cmp mov and paddd das cmp popa jae cmp and ja dec push cmp sub pop cmp pop adc cmp cmp cmp lret popf imulb cmp cmp push cmp call cmp in push ds ds fistpll lock xor cmp dec aas push aas cmpsl and jae jns mov xchg aas popf outsl std imul rcr aas in aas cld aas mov mov loope sbb xor pop idiv loop mov lcall xor xor xor into cli xor adc nop cmp and sub aas xor xor insb xor test (bad) (bad) xor xor xor xor xor xor xor xchg xor xor xor xor xor xor xor xor xor xor sub (bad) incl xor add and cmp jle cwtl cmp mov inc cmp insb cmp popf cmp cmp loop test push scas mov ds add mov push jg (bad) decl xor xor xor xor lods push sub cmp mov sbb xor xor add imull or lods inc or cmp cmp fs fcomi cmp jbe cmp cltd repnz call ljmp xor inc xor xor pop scas clc rorb or jb cmp cmp fucomp ds jecxz xor inc mov loopne inc fmulp xor xor xor adc jmp xor (bad) ss cmp cmp cmp ss (bad) pop out inc call cmp ret call fnstsw jne clc cmp cmp add inc ds push cmpsl ds mov mov xorl outsb lcall xlat lods push adc adc outsb inc xor xor add xor xor fidiv out xor xor xor (bad) (bad) (bad) pushl dec xor push jbe mov test mov aam jmp inc xor sub xor xchg mov cld pushl lcall aaa mov mov pushl fnstenv loopne out out aaa cmc aaa cld aaa add adc xor outsl cmp cltd cmp cmp and (bad) cmp cmp cmp cmp cmp xchg pop mov push push mov sarb fild aas std aas cli pushf sar mov dec mov mov ljmp dec jg xor xor xor xor xor xor (bad) (bad) incl int3 xor xor xor xor xor pop xor fidivl mov ss ss bound imul cli decl (bad) mov divl aaa xor dec aaa pop aaa mov mov ds cld scas loop das cmp cmp cmp cmp xchg cmp outsb inc cmp ljmp insl mov lahf mov jl xor pushl pushf jecxz adc sub push xor test lea lahf xor xor xor rdmsr test xor (bad) aas clc jle mov int3 adc sub xor inc ss mov cld ret ss xlat scas aaa pop aaa insl cmp inc adc cld cmp cmp cmp sub subl mov lods xchg mov mov lret ds in or push cli mov xor xor xor iret jg (bad) xor cwtl xor aaa inc aaa pop aaa xchg cli add (bad) pushl inc cmp cmp cmp sub sti push aas cmp cmp cmp cmp cmp or cmp mov fsubs inc inc push mov incb xor test out and sub nop xor sbb xor lret xor xor xor outsl pop cld pushl xor xor xor insl xor cmc push ss ss cld lock or push xchg adc jg iret aaa in xor call cmp mov push loopne fiadd cmp cmp mov adc pop cmp cmp add push xchg mov cmp add cwtl pop out mov jp movb cpuid pop cld aas shrb cmp ja xchg pop fdivrl repnz rcl mov mov rolb pop and xor xor xor lret pop cld stos pop xor xor test fwait ss cmp cmpb cmp shr cmpsl jecxz mov sahf hlt mov xor xor xor xor xor test popf mov stos aaa sti aaa stc push cld xlat push (bad) push jecxz sarl jbe add loope aas mov loopne xor sahf iret or adc loop ficomp scas xor stos sbb and push xor bound incl (bad) mov xor xor xor out add jmp loop xor es jg (bad) pushl inc xor xor xchg xor icebp xor cli aaa xor xor test (bad) pushl xor xor xor lret (bad) int xor outsl aaa mov loope sub jne mov cmp cmp insl test aas mov xchg aas int3 aas jmp lock sar ja xor xor xor inc lea stos std mov xor xor xor xor cmpsl ljmp ljmp jb aaa ret cmp cmp cmp (bad) lcall sub cmp cmp inc ds aas jnp xchg aas mov jg ret jg out lret jno pop xor xor negb sbb pop xor jb xor ljmp cmp cmp cmp mov cmp cmp enter imul ds ds fwait adc loope xor xor push xor inc jecxz cld pop and ss pop test popf (bad) adc repz pop call loopne mov aaa mov aaa sbb sub dec cmp or hlt cmp push cmpsl cmp cmp mov cmp call cmp pop add ds loope,pt aas movsbl rclb aas data16 lea movsl push and fist cmp xor cs xor mov xor cs loope (bad) lcall xor (bad) xor cli xor inc or stos mov cmp loope sbb dec cmp add aas xchg aas stc iret mov sbb xor in pushf lock sub xor xor pushl add fdivs xor ja xchg xor xor xor or aas bound pop lea jg decl lret cmp xor xor xor dec clc mov sarb adcb mov xor xor xor xor xor adc mov mov cmp cmp cmp cmp loopne add jne sbb cld cmp cmc imul pop sbb sbb test push xor loop pop and mov adc jb js xor mov lock mov aaa sub fisub cmp cld pop js insl ss cmp cmp cmp pop sbb lods ret aas les pusha scas add cmpsb repnz jl,pn jmp cmp sub lret xchg lock xor stos mov rcrb pop mov lcall cmp out sbb add pop loop inc cmp mov ljmp aas fnstenv mov xor mov dec xor hlt (bad) (bad) dec jl cmp mov jl and (bad) (bad) cmp lcall cmp cmp loopne lcall dec ds adc test ret aam fistp xchg push les add jb scas xor push xor xor xor add xor lock movl cmp xchg xor add incl mov pop mov or aaa push scas aaa (bad) aaa xlat pop hlt ret pushl divb sub dec cmp jb mov pop cmp fild pop cmp cmp cmp cmp inc inc call cmp test inc pop mov push xchg pusha pop lea nop out ficomp rolb mov fmull jae jp stos cmp cmp cmp ret out cmpsb inc mov shrb lock clc mov sub xor out sub adc aas dec or xor bound sbb ds std mov mov xchg (bad) mov (bad) (bad) jl repz xorl or aad test das push imul jb sbb pop (bad) lret into pop aaa adc adc aaa fidivl xor addb lea in cmp pusha cmp add xor sub (bad) fdivs cltd xor xor xor dec out ret lock xor loop cmpsl cmp cmp subl lcall jge int out mov lock int sbb (bad) cmp cmp cmp push loop shlb xor outsl xor jecxz push and pop mov aaa xor mov aas ss xor cmp mov push sub data16 scas inc adc (bad) add mov pop cmp ds cmp mov enter movsl push lods sub les pop xor jmp data16 jo ss stos cmc cmp cmp rcr lock sarl push jbe xchg push push and xchg scas (bad) pop pop mov xor into or xchg ret test mov push xchg incl negb cmp cmp call inc sub jg jb cmp cmp cmp (bad) pop adcl add cmp icebp pop cmp xchg lods ds es aas mov add push mov xor jbe push xor xor xchg xor push loopne xor sub ret dec add test mov loope xchg and mov ja aad push push and aaa xor inc icebp aaa (bad) sbb lock add inc lea (bad) xchg rcrb jmp hlt nop and sbb cmp arpl jecxz push mov into pop sbb jo mov (bad) repz pop ds ds push aas sub decb pop aas cltd aas faddl hlt pop and outsl xor insl inc mov stos call sar mov xor xor xor pop cmp or into jle xor xor clc mov push xor fidiv mov or (bad) ljmp std jg cmp cmp cmp fidivrl out cmp cs cmp aas push pop and cmp cmp cmp or sub cmp cmp push aas scas push inc cmpsl bound jecxz repnz mov push loop ds ljmp mov xor push dec xor test cmp inc push loop imul mov push ljmp xor push aaa pop cmp stos lods stos rclb jne in cmp cmpl push int cld sbb cmp cmp sarb jno test out ss cmp maxps push ds ds push ds ds pop aas push sub pop or push aas jo ja cmpsb aas repz ret rcl clc adc xor jns cmpsl jno dec adc add xor imul add data16 push xor jg (bad) decl xor xor xor xor xor xor xor inc pop ret push inc xor jb push pop and xor icebp scas incl in push ss push ss loope stos mov cmc ss aaa push aaa and mov leave sub (bad) clc sub cmp outsb cmp mov push cmp cmp push xchg cmp into pop ja mov popf cmp sbb mov add inc xchg mov loop and cmp jle push out fisubrl inc shr jo push dec xor xor xor sbb pop mov mov adc jae orl xor mov scas (bad) ss ljmp lds push cmp pop cmc cs cmp cmp mov lock outsb cmp cmp push cmp orl push cmp cmp mov lds xlat ds mov pop aas and mov xchg stos bound push js xchg xchg aas rolb xor inc cmpb movb inc mov xor mov xor xor xor mov das adc (bad) std xor xor push fdivl test inc not push pop and ret scas mov test into dec lcall or cmp cmp cmp bound xchg push cmp dec inc js xchg or inc cmc test mov cmp cmp mov pop test mov or aaa cmpb add loopne inc add xor xor inc xor andl xor or stos add aaa jb xor xor mov hlt add je xor es cmpsl cs (bad) roll xchg sbb and mov inc jnp adc (bad) push mov xor jb jge xchg mov mov pushf sbb ja aad (bad) in aaa hlt mov xchg sub push push push cmp sub fisttpll bound xchg scas inc dec std ljmp cmp cmp cmp cmp cmp (bad) fbld cmp cmp cmp cmp cmp fbld cmp sarl cmp roll test dec sub loope mov cmp cmp cmp or stos inc shrb cli adc cmp pop cmp or stos cli das shrb sub jbe jl mov test mov jg xor sub ds push aas sub push aas pop shlb imul or mov jp mov xor push lret mov or adc cli sub jg xchg mov clc xor dec xor fdivs ljmp mov mov inc mov cmpsb inc dec adc xor arpl xchg xor fcmovb mov mov ljmp aaa push cmp (bad) cmp cmp clc jmp into or sub cmp (bad) std das cmpsb pop ret cmp cmp cmp adc stos inc shlb rorl cmpsl sub dec or mov push rol add andl mov cmpsb icebp cmc dec imulb repnz pop test pop stos mov jmp sub xor push mov insb into jle xchg (bad) xor fild mov xchg ret inc xor and inc lods jno sbb push lock xor pop cmp xchg ds (bad) out movsl sbb pop loopne sbb xor xor sub sub or jns fidiv hlt sub imul xchg adc aas adc adc jbe cmp iret ja lock cmp (bad) cmp cmp dec data16 mov (bad) cmp inc stos iret add arpl mov mov xor pop movsb cmp inc jmp cmp cmp cmp push add aaa ljmp testl dec cmp iret cmp pop sahf icebp cmp inc push jle xchg or movd ds jmp ret push aas mov lcall xor xor arpl test mov int3 lar lcall pop loop mov cs mov lcall xor adc xor xchg xor add cs xchg mov push scas aam loope mov or pop ss push xchg ss lock shrb aaa fimul test cmp dec cmp aad sub cmp push rcrb dec cmp repz mov dec dec mov (bad) stc mov cmp cmp cmp cmp jbe nop cmp cmp cmp cmp (bad) xor ds shrb push ds add mov jg,pt mov mov (bad) fstpl test xchg inc mov or mov test mov mov mov xor xor xor xor out fs decb mov aaa sbb push test push movsl mov cmp std fnop xchg cmp jno ja jge dec pop test add cmp scas mov cmp xchg cmp idivl std cmp cmp out ret cmp adc cmp ljmp cmp jb add je (bad) cs outsl adc mov ret out or test frstor adc sub inc xchg imul pop decb cmp outsb adc mov fisubrl pop mov cmp jle cmp sarb popf cmp cmp cmp cmp cmp adc ret cli popa cmp leave pop std cmp sub inc out mov cmp in mov (bad) push sub xor scas or loopne sbb mov and mov ret inc stos test adc inc jbe xor push xor ja xor (bad) (bad) ret push testb (bad) lock test mov xor xor lret ja xchg xor fwait mov aaa xor push insl bnd or xor inc loope sti ds arpl das push xchg in pushl cmp decb popa ss test test ss inc xchg mov aaa dec ljmp inc add mov mov and rclb cmp mov and push push stos cmp fild xor cs mov lret add (bad) cmp xchg jle test or jbe scas inc xchg inc jb jl (bad) cmp cmp xor lcall leave lahf aaa and mov pop xor subb add in xor pop push clc je lods xor push es xor pop loop inc mov push inc (bad) xor xor xor sub lret cli data16 repz xor inc xor lahf xor mov mov out pop loope inc jp aaa sbb aaa je mov cli es inc or (bad) cmp cmp inc ret (bad) ljmp cmpb cmp scas (bad) mov mov or clc cmpsl loop idivb add or xor cmp cmp cmp cmp jo push mov jb xchg nop and sbb xchg adc mov jmp lock cmp push cmp cmp or adc scas addb cmp outsb push xor (bad) ljmp cmpsl fidivl adc lret ret push lock mov cmp lret and das add sub sub inc test and and lods sbb pushl ret (bad) pop or sbb mov repz xor adc mov xchg mov aaa mov ret xor pop insb mov ret inc dec or lahf xor adc (bad) aaa repnz ss pop or arpl lds dec lret ret and add or dec adc xchg test dec xor push add cmp call stos (bad) add inc ret mov test and stc (bad) adcb and add push cmp out mov xchg or ret stos sub inc jecxz popa lds test addr16 push adc adc and xor jg adc adc sub pop xchg push mov mov xchg adc dec negl ret daa push nop mov inc push arpl and pop enter rolb aad dec adcl adc adc rorl scas xor sbb fbstp inc push lds dec pop sbb sub add lock sbb xchg mov arpl mov or rolb pop sub or xchg add mov and mov movsb inc and sbb outsb pop xchg pop pusha dec and stos add fwait dec or iret fwait or scas sbb add inc mov leave scas scas daa ja insb jmp sbb pusha dec lock loopne sub pop xlat out dec inc pop mov mov dec jae adc lods xchg and andb xchg dec push and shlb loope ljmp test xor push data16 xlat xchg xchg adc jbe and sbb adc lcall je rcr mov and out sub adcl mov int3 inc inc out or sub lret daa and ret adc mov mov jae add inc adcl dec (bad) test pop daa or and and and and cmpsl iret or (bad) sbb xchg pop addb inc ret cmp test push and xorl clc mov jle and ss mov or xchg test fs rclb and ror add mov xchg cmpsl nop and adc popa nop and pop movsb cmp or test pop adc dec adc inc nop and or and inc sbbl adc and mov repz add and fcoml xrelease in push adc (bad) xor aaa fs sbbl xor or int3 lret dec cwtl add sub xchg das sbb push test xor nop out (bad) xor mov addb and jnp add add or pushf xchg test and jo adc xor or dec test and out pop inc sbb or and xor adc sti dec sbb jo pop xor ret scas je test dec mov xchg (bad) xor add int add je nop rolb es and lret mov push movsb sub ds and cmp and add push mov xlat test shlb (bad) arpl jbe loop sbb pop cmp push push mov add (bad) cmp cmp dec insb fidivl dec sub and and pop (bad) jl adc outsb mov add inc cs ret ds nop and xchg cmp xor inc inc inc lcall in aam adcb clc sbb cmp push gs test xchg push push mov loope dec cs push push test jecxz out mov push mov movsb call mov pop xchg inc fs cwtl loope add mov test adc sbb dec and test sbb push pop xchg outsl into and js,pn bnd adc fdivs mov cmp andb sbb add rorb or pop sbb add cmpsb mov mov xchg rolb push enter adc inc or lret aaa sub cmp and dec enter inc or or push mov ss push (bad) aaa or aaa dec xchg or jns lods cld ljmp sub shrb hlt test (bad) adc dec cmp mov int3 cmp call sahf pop test inc lret inc daa push xor fsub mov push loop aas cmp mov out ret mov push add add adc rolb movsl pop mov mov outsl (bad) inc aam sbb jg stos adc pusha mov repnz es cmpsb add inc in out xor dec js test fdiv hlt cli or dec cmp cmpsb inc xchg insb clc cmp mov mov mov icebp adc push data16 out hlt cmp or adc js add loope mov adc sub ret div xor loop cwtl out mul jg lcall test xchg cmp nop js mov push test pusha (bad) js mov loope pop cli loop sub add and cmp or out lods mov fnop cmp or push jp inc jmp sub cli faddl test pop xchg mov jp pop mov loopne sub xlat stos rol lea jecxz mov int3 cmp cmp pusha jo,pt adc or ds (bad) fsubp lahf out inc pop aas cmpb movsb mov sahf jg pushaw call xor imul and aam add sbb jp aad xor pusha sarb and mov in mov int3 ja movb addb hlt mov jp sahf sbb and insb (bad) mov and pop jmp loopne sbb fbld cmp push sbb sahf xchg fist cmp pop sbb loop into je jl jl arpl aas xlat and sub cmp daa sub jo or (bad) aam sub cmp popf dec or js mov popa push subl push mov je adc repnz xchg cli ret sub xor mov mov mov rcl fcomip add dec xchg or pop popa xor movsb lds stos cmp mov bound out jmp jecxz xor and sbbl enter inc pushf aam and and inc test mov mov push call or mov pop inc out mov test (bad) test out lock fcmovnbe test test je or int3 stos in inc xchg xor mov movsl sub rolb inc addl loop or (bad) lahf js mov mov or pop fimull sub mov loope enter or jae xor test pop mov inc sbb inc inc in sub fs mov xor cmpsb push test push add inc inc adc repnz cwtl lods cvtpi2ps push in push adc pop inc outsb sub xchg jo mov xchg pop sub push mov push aas push dec jnp xor or jbe xchg cli push fcmovnu jnp and call inc or sub mov fdivrs in cmp je cltd sbb push push push pop pushf xor add and mov pop fs stc dec and mov push unpcklps or sub dec adc pop pop ljmp lods dec cli cld ds cwtl fwait adc aas inc and cmp subb pop hlt xchg rcrl cmp (bad) iret jl les loopne xor cmp iret and lcall je ret jbe adc ret lock ds sbb push push andb mov lods arpl cli mov ret cmpl scas sarb cmpsl sbb push repz and xorb fnop push xor adc cmp shlb inc sti mov cwtl ljmp inc sub js lods push add clc mov gs push add xchg push cmp push ret push nop ss test sbb sbb js pop pop add out sub inc add sub arpl xor jmp scas bound inc sbb push sub ret mov mov lret inc inc sbb cmp jne lea ljmp add js xchg orb cmp fcomps push sub fmuls push (bad) add xchg jbe loope mov int3 jle mov push cmp (bad) dec loop pop stos ret dec into mov push mov jb dec sub or mov and mov (bad) std std mov ljmp call call xor push inc pop aam mov jmp mov mov call mov popl scas push mov inc xchg or lods push push call add add add in and jmp insb (bad) loopne jb xchg sub xchg cld dec (bad) and add add in in fwait add add add in in insb add cmp adc inc nopl push jb add repnz adc testl and nop dec cmpsb decb sub imulb ljmp cli lahf or jl fildl push pop inc sti rcll aad push aas fisttpll movl mov sti mov je nop add lds sbb or shrl (bad) push sar inc push push adc outsl fs into lods call push call pusha pop jno adc push pop mull adc xchg jne and test mov and mov lods add rcrl pushf adc mov lods daa or lret enter sbb dec sbb es pop aaa repz push call inc cld fs jg (bad) sub ret mov insl int outsb scas ret test mov mov add add in mov jno mov push sbb pop xchg imul mov xor enter pop sub je push popf out adc and dec imul testb (bad) jne jae cmpsb jge jge xor mov aaa scas mov sbbb dec sahf sbb sbb jns mov lock and incb icebp add dec xchg lcall test pop scas dec test out adc rorl in cli dec (bad) mov testl mov mov rorl lret or add rep test xchg and mov call inc jmp mov lcall (bad) testl pop lock jo ret idivb stos shr imul (bad) mov loopne jne data16 push or push pop insb dec and and ja movsb and mov adc mov lds nop jp sbb mov add jb hlt push aam out mov and jmp push ret push pop nop mov cmpsl dec adc pop lret test cs bound call sbb xor sub add fsub jmp jecxz add test add cmpsb lret xor fstpt sbb cmp sbb popa imul cmp insb xor insb xor push dec cmp pop mov pushl cmp jne or cmp loope rolb inc adc mov (bad) insl ret xor fnstcw mov cmp or mov out xchg add lock scas sbb in fcoms add xor popf xor xchg push mov and mov ds xchg add imul insb or jbe xlat add stos (bad) sub jb loopne insb mov shrb cmp mov sub insl mov push je push sbb out int3 (bad) jg clc xor adc test icebp or mov stos pop mov out cld loope ret out call mov mov loop mov icebp mov xor clc call out mov sahf out pop inc addr16 jbe (bad) ret addr16 sub (bad) push cmpsb inc push push je cmpsb sub loopne cmp mov push cmp cmp ja cld jp mov jne xchg std fstp pop xor pop mov and mov or sbb mov lock loopne push jo movb add fsubrl cwtl jmp jl mov aam mov dec leave std xor xlat data16 (bad) jmp (bad) adc es insb lock cmp push gs leave inc jmp mov gs mov iret jmp mov pusha inc mov loopne adc xchg mov outsl bound xor shrl cmc cmp lcall push mov into add call fbstp negl jmp cmp js pusha clc push call adc add jmp ds mov fstpt sbb pop add (bad) xor xchg push lods mov icebp sbb iret fcmovb push push stc jo jle xor mov (bad) (bad) (bad) jle add rolb mov test pop mov cld jmp imul je clc loop mov push data16 movb fidivl adc push inc ljmp or (bad) mov stc out sbb outsb xchg and and add movzbl push or je inc cld pop in or insb (bad) cmc clc in test dec fisubl xchg aas add inc mov cmp xchg add lock cmp (bad) inc jmp lss rorb hlt enter pop jno cmp xchg jle into aam test sbb push loope cmpsl cmp and cmpsl into adc mov lock adc out mov mov (bad) mov aad pop inc ret inc cmp jge inc ret cmpl cld jnp cmc or mov push in sbb (bad) jo imul sti addl jbe mov dec insb push push dec fildl fwait das imul out scas inc (bad) push push sbb mov adc out mov add fs dec fidivr frstor pop movl call mov jp mov sbb fiaddl fiaddl pop (bad) push loop pop xchg xor mov push push add dec imul orl out inc inc cmp dec push mov pop mov ret cld xchg call faddl sahf (bad) sub and mov mov mov and or movb add dec mov add adc add ret cmp jp push inc cmpsb popf popa mov lods push fs and lea cs stos ficomp movb inc mov jns cltd push cmp cmc jbe ret sarb jmp sbbb add (bad) mov xor push mov (bad) pop xchg push pop jmp cmp jno ret add add pop jno leave test add push je xor add mov mov ror or add cmp insb mov andl inc pop js mov add rep stos mov push adc insb push stos (bad) xchg mov (bad) cmpl adc pop pop call lods sti xorb xor addr16 mov or sar ss cmp (bad) cmpsb or and (bad) movsb adc das (bad) or add cmp scas fcoms dec cmp pop adc repnz hlt jae rcrl je adc pop lcall mov invd mov aam jle add (bad) mov inc stos movd adc xor movsb mov mov xor add lahf dec adc sbb out movsl xor loop push jmp orl xchg xorb inc add adc and loopne push jae dec jmp in push aam pop sbb sbb fldl mov adc mov fstpl adc je cmp pop mov inc jo mov std aas (bad) roll mov xchg out pop mov inc cmp roll ds mov call mov call xor call cmp or out (bad) insl xlat and (bad) dec push adc lds movsl mov mov xchg mov jnp mov iret dec jae mov xor fistp and push test sbb pop push push pop pop jge idivb iret mov push hlt push aad call (bad) call lods mov inc mov out mov orps mov and cmp add scas lods pop mov clc xlat inc push mov add pushf add mov xchg pop sbb repnz cli je sti subb adc js repnz or dec rcrl pop fbld jle pop jnp fs mov push incl xchg test lret jmp push movsb push je divb add mov mov icebp imull xlat sub push fs mov rolb call rcll sub (bad) stc add jmp lret jg push je jmp and push and stos in or imul ret mov icebp fisttpl dec and test loope pushf mov add mov daa sub sbb add lret (bad) movsb rolb loop mov mov lahf idivl sub adc inc sub fsubp repnz xor push inc add fcmovu push add rclb fwait inc mov das dec add inc sub enter pop add rcl in cmc adc mov or cld dec push lcall adc dec test fdivrl shrl ret jne jmp push and jo pop mov mov sub cld cmp push xor push and addl out push mov insb jmp (bad) cs xchg mov lret lret inc sub cmp mov pop jl bound pop lods xorb (bad) movsl dec adc pushf mov fsubl xchg lcall mov adc dec in repz inc cmc das mov push cmp gs hlt or fldl cmp dec sub arpl out xchg xor imul cmpsl xor or or add (bad) lods dec sub pop push int3 adc and movsl push inc add and fcmovb int3 adc pop ljmp js jo (bad) cld (bad) mov jne inc pushf inc xchg clc or lahf ss cmp xor pop ja fmuls les mov xchg ret test or xchg adc ljmp jno mov push xchg sub jne sub aam inc xchg push push out in jl (bad) loopne cs cmp cmp jne ds jl insb mov sub add pop mov (bad) xchg mov mov nop mov movl mov pop push lods inc add js int3 clc mov mov clc pop int jmp or popa add or (bad) rclb or bound ret stos mov mov pop mov inc jae pop call add (bad) je or rcrl lea sbb lea push push lea push leave mov lret out ja xor rcrb scas xor js ja add push sbb or (bad) out inc add (bad) (bad) or popl loop add jmp popa inc mov add addr16 lea movsb outsb pop sub lds push mov push push sbb dec dec or and push ds das push repnz mov inc daa movsl lock fld je mov mov ret jl push push push push mov cmp xor mov jo push cs adc scas sub nop or mov mov pop jl,pn or push imul inc mov ret inc mov inc inc (bad) ficoml add jns (bad) jne rclb cmc mov popa mov mov mov adc dec mov dec popa sbb pop mov jge popa sbb aaa pop pop pop add daa mov add mov data16 pop inc fistl cmp pop (bad) pusha ss jmp cmc cld leave leave sbb inc push sti adc xchg je mov in je in and iret lea and mov pop into xchg das std jmp clc cwtl addr16 rclb xchg or daa jbe mov sub (bad) fisttp or cli jg inc adc mov add mov mov notl sub je loopne push jne outsb dec (bad) sbb cld jne and insb dec inc aaa sub jne (bad) sub (bad) mov rcr imul ljmp insb mulb xchg cmp mov lahf stc push test fdivrl rclb loop je movaps fildl sbb adc add ja out stos adc push pop (bad) js xor ljmp pop imul pop cmp push idivl xchg cltd ljmp inc xor add fmuls mov add fist mov add cmp je test je sub or fcmovb sar outsb stos jecxz adc mov xor add add test fsub xor ret iret xor shl dec fldcw sbb or and int3 add xchg jp mov repz jecxz daa adc shr and fsubrl aam xchg pop push or outsb stos xchg xor or cld mov sbb mov repz outsl mov movsb js clc push scas divl adc pop lods cmp je mov mov aas sbb pop add jle mov fsubrl clc std mov les mov push mov shll mov ljmp jmp iret (bad) sbb sbb (bad) or adc jecxz sbb and repnz div dec ret cli flds lret mov inc repz mov adc xor cmp gs xchg dec leave jno inc fldl insb xchg roll (bad) cmp jbe cmp jb (bad) jno adc mov stc int xlat decl jb rep jmp mov out scas jb loopne add cs sub negl and rcr and rolb or es shr test scas mov int cmpsb stc (bad) push inc add add add add pop rcrl out jns out mov dec cmp repz mov mov call iret repz lock hlt add cmp clc clc cld cld lea (bad) lock jmp add xor leave push ss (bad) xor or sub jl cld jmp sub leave pop or lret jo fs sub adc sbb stc ret adc gs pop sub or mov push int3 aam jl sub add aaa adc dec add inc pop pop jnp jno add xchg push and push xor pop jl out dec push arpl sbb sahf out sbb sbb out sahf out adc or jns or fsts jns add cmpsl sub sub sbb je sbb mov inc push popa das adc jo and mov push mov or cmp and outsb fisubr pop mov sub add ljmp jne mov pop sub (bad) ljmp add rolb sbb out mov je (bad) add mov xor in ljmp push xchg push add or call icebp or mov repz (bad) mov adc add ds or push bound dec test pop sahf inc push es inc and and sbb jmp dec clc clc clc pop jmp or push add or push test pop jmp mov or loope fs dec xchg addb ret push dec pop pop add mov iret cs adc in enter mov adc enter mov pop xor pop jnp xchg pop enter das sbb mov das gs push push js pop sub insb inc lret fcom xorb jnp dec ret lock push loopne cmp loopne ror shrb mov xor repz cs xor add repnz clc sahf push mov cmp mov push cld xor nop adc (bad) inc enter push or jns out push pusha push add lock xor push jl jnp mov mov (bad) xlat xor and test addb and cli add out les inc sbb jecxz loop or repnz or xchg test clc (bad) je test xlat push cltd pop jo call mov and inc mov push add cmp push (bad) orl cld popa shll repz or xchg lock mov cmp mov jns std ljmp pop sarb push (bad) jb sti cmpsl push lret cmc jne adc fadd popf (bad) std sahf and enter movsl sub mov mov xchg in daa dec cmp je sub cmp sbb and push bound xchg sbb jg xchg clc sbb movsbl push leave or je clc mov inc mov mov mov es mov mov and mov ja add cmp adc (bad) loopne or pushf js rcll or adc and scas inc adc xchg cmpsb or adc sbb ret mov add jmp push pop push push dec pop (bad) cmp jmp push sub repz or (bad) cmpsb ja (bad) push jbe dec sub sbb xor or out or xchg mov sub and mov mov pop xchg xor jmp add xchg incb sub mov popa icebp sub cmpsb stos shrb mov inc xchg push mov imul add jne mov inc adc pop pop outsl ss jle shr ret or das flds fildl out sbb and pop out movsl jne je in popf adc push outsl mov cmpl push jl adc push jns or jno js shr (bad) lcall or (bad) lcall lret adc pusha or sbb test pop xor and loopne mov sub pop or jb bound sbb mov fist sbb inc sbb or notb jle imulb outsl push and xor or bound xchg or and sahf scas jmp sbb dec je pop xchg test jp jbe and scas ljmp sub dec sbb xor cmp mov and dec cmp pusha sbb (bad) push inc and adc or sarl push lcall mov mov (bad) orl mov bound aam mov sbb ljmp jmp data16 add add adc inc mov popa loopne push test mov push sbb cmp je std idivb add sbb pop decl cwtl cmpsl cmp andps push sub cmp xlat cmp loopne xchg jo jecxz repnz jne jo (bad) xlat pop fstpl mov mov rep mov pop pop push xchg sbb rclb mov inc mov jae adc mov mov sbb mulb in pop in push xor test lods inc (bad) push test jb pop cltd dec mov pop sbb push xor je lods fcmovnu add xor jne sbb adc jecxz add or aas inc inc push je arpl jne mov xor dec sub add out xchg cld pop and jmp or or aaa mov jl xor xor inc xchg add cwtl std sbb dec xor movl (bad) or test dec jb test inc dec push loopne out sbb clc aad sub and pop or call (bad) dec jo (bad) bnd fnstcw and jg stos cmp es mov fadd push loop leave fsqrt fldenv test cmp pop jns loop xchg mov push sti call ja inc enter data16 daa in push fstp pop vmovdqa jmp ret jmp call inc std (bad) and pusha jno repnz xor mov mov pop call xchg push inc dec leave and push sti sbb sub repnz pop pusha pop push cmp sarl es cmp clc push jmp call sbb lret xchg adc jno push adcb cmp fildl sbbb jne mov mov and in insl lock dec jge xor ret mov (bad) dec jb push sbb sti sbb push fldcw shll addr16 mov sbb and jbe cmpsb cmp mov mov sbb lcall and (bad) pusha pop jmp (bad) pop and dec push jle xor mov sub fnstcw cmpb scas loopne xor push stos cmc pop clc fstp ficoml adc insb jmp call test cmpl push mov and adc and and and insl sbb dec and lock enter cld daa add push sti (bad) and movsl pop nop dec fcoms int3 jo adc enter mov jmp push adc fwait jbe cltd jecxz inc jb es cmp sbbl sbb pop and jg pop xor mov fldln2 push icebp mov sbb loopne adc jmp jmp mov out sbb inc inc cmpsb jecxz jmp call mov sub add sbb ret mov xor (bad) inc aam xor cmp sbb and xchg lret lock sbb sbb xchg adc das pop jmp mov lods out pop and imul sbb xchg outsb mov fcomps or dec mov popf pop adc test aas dec lea and aaa cwtl cs stc lds add push push jle add sbb xchg arpl popa arpl aaa adc popf stc call push push add jns fwait loop faddp sbb push pop fstps leave jmp push pop adc fldl daa (bad) mov shlb cmp adc jne test jne inc je int3 cmpsb ret sbb idivb lcall (bad) lsl pop frstor fldl adc out sub test rorl push and call in hlt or jg cmp sbb in pop mull pop add and int inc jne bnd out mov cmp and push sub dec or popa notl shr sub adc into pushf cmp push shrb mov sahf test or clc (bad) inc sub fldenv add ret insb repnz dec test xchg fcoms enter adc pop adc scas adc or (bad) dec ss jae sub adc mov push ja adc inc lock mov fsqrt arpl add and dec push sub rcrl aaa and bound and or dec daa mov mov imul or in iret sbb push cmp repnz lret and add (bad) xor bnd or xlat icebp adc bound (bad) lods je incl sarb iret lea push test stc ret xor mov mov add inc cmpsb addr16 sbb sbb aas add repz je mov and nop pop fmuls cmp cmovb sub xor dec push xlat stos or jae jmp dec inc xor xor (bad) sub or jb leave ret pop xlat or (bad) fstpt scas fcom inc jmp and pop icebp xor fdiv mov push out dec sti int fdivr adc fsubrp push mov and adc call jae out jno or xorl adc pop pop jbe outsl scas insl dec iret es insl pusha fucomi cmp dec cmpl lahf push (bad) pop lret cmp std cmp lcall lods inc fidivl out adc das test mov push inc lret lret or dec cmp testb or and pop clc cld movsl das leave adc loopne lret sbb in (bad) cld lret int3 lret int or cmpsl cmp testb ss and pop push movsl das dec rol cmp int3 inc and pop jb int3 int add and mov jnp pop nop sti (bad) jge das out les push or test fcomps int lret cmpl enter or mov rclb and jbe arpl hlt cli push lret jae push into inc (bad) into sbb nop iret into mov lcall jb (bad) jge out pop mov lods push ret add cmpb ret stos sti sub out mov xor loopne cmp fnstenv aad adc iret aam mov cld fsubr outsl sub mov xchg mov nopl lock in imul push adc fmull rsqrtps fistp and rcll addr16 decb push mov (bad) (bad) decl jns daa lret (bad) pop leave add dec add inc jl incb cmp sub push jb std dec adc ret jecxz sub imull and xor mov mov js jo mov fnstsw dec or or pop inc outsb addr16 and sub lret stos test pop adc mov sarb xor scas mov xor js test sub mov add add or push pop mov es pushf out inc dec repnz adc jb loopne pop mov cmp aaa es imul out add ret in and jecxz mov fwait ja loope sub shll les loope fmull out add and fldt test xor je add scas pop insb or rorb push fnsave stc pop stos mov inc jg (bad) je xor cmp int sbb cltd xchg ja mov mov sbb (bad) fldenv push sbb pop test xor xor xor inc (bad) adc adc and (bad) xor (bad) jae pop mov jb jae loope jns out add and sub and add or dec add xchg arpl idiv sbb fsubrp and dec mov sbb adc sbb outsl inc add add cmc pop xchg pop and mov jno fisubl sti insb fisub mov inc (bad) fpatan add or inc repnz fstcw push adc fwait mov or push aam fldcw fistpll or add cmp (bad) cmpsl std pop add out push mov int3 pusha movq sub in out push enter (bad) xor jle xor das sbb das cli rcl lret pop dec cmp (bad) mov lret or jg bound inc push outsb adc cs jnp in clc aaa or inc sahf mov dec (bad) add adc push add and (bad) out mov add fadd roll add dec xorl enter mov sub ret adc dec sbb arpl cmp es jne add repnz enter repz xor mov loopne jmp push cmp in cmp and fadds dec lock out sti jl (bad) xor and shlb pusha fs jle imul and and pop pop movsb icebp jbe jp popf sub (bad) and pop mov je int jo sub cmp ret in pop push or add test (bad) sub mov mov pop adc lret in dec jnp sbb cmp xor sbb ljmp (bad) jp adc ret cmpb jne mov (bad) xor or and mov jmp mov mov sub lods or clc sti fxam mov mov sub mov sar rol mov and mov dec and in add int dec adcb cmp loopne jg and rol mov mov and in or pop add outsl pop push ret (bad) shl out sbb inc ret fstpt testb inc je jmp ret stgi add ficomp jmp pop faddp inc or test jnp aas cmpb ret clc addb add (bad) pop add rorl (bad) jle jg jmp sub or in es stos jmp lea loopne stc mov dec pop sbb add push and jge (bad) add insl or fcomp push mov js das push fscale fstp mov sahf fcmovne jg nop push push es test adc jge ds je lahf movb inc add xor and add add xor or cmp shld shl push jb popf mov test sbb test out mov imull jl push pop pop ret scas cmp stos push mov outsb xchg adc cwtl add sti xor pop out or scas or jb pop mov jne sbb sbb xchg ret ret add fldl sub sbb movsb jge divb fmull push je test lahf inc add test push and daa shrb xor dec repnz jns jl lcall sub adc std das adc xchg movsl sti je pop push or add cmp out fisub negb lret push fxch dec mov xchg jmp sub jb pusha repnz jmp faddl (bad) fildl sub and mov jbe scas std loopne fcomi adcl push inc pop xor leave and sbbb shll dec jle sbb repnz loopne repnz add shlb aas in add sub cli jle lea cs pop mov inc pop aad fstl (bad) xor out mov sub jmp mov and cmpsb ss push fadd jo adc push pop in pop je cmp lds (bad) sub ds mov cmp out mov in or mull pop add dec loope das xor and mov ret jp pop (bad) notb pop pop lret ret mov jmp xchg adc (bad) fxch pop repz lock scas fsubp or stos int3 fisubr or fildll iret (bad) adc (bad) mov call mov push cmp les or push fstcw test shrb (bad) adc (bad) stc loopne cmp add sahf fildl xchg jp ds mov push push (bad) jmp jnp sbb fdivrp pop in inc add pop andl push pusha jns pop push xchg out xchg cmpsb mov mov add jno sub pop nop call lahf mov test mov out mov pushl (bad) je push xor xor jb mov mov pop jg (bad) inc mov xchg inc jmp ret pop ss or insl sub fldl add inc jmp rcrb jmp addl test pusha daa push daa jae nop lret in rcrl jmp pop add sarl dec jbe push outsb popf mov or (bad) jne sub inc mov movsl movsl cmpb or jne lea fstpl (bad) rorl push push orl sub aas inc aaa fldl jmp or cld ret hlt add pop sbbl push fcoms adc push or pop bound jg push mov push neg (bad) xor loopne jbe xchg popf int (bad) mov je call enter push lcall inc or imul call lds pop dec call mov movsb inc imul inc aam es call divl psrld add call and cli push or jge jmp fmulp xor inc not adc sahf add test sbb (bad) icebp test punpckhwd xlat or stc jmp jge mov or adc mov xor sbb jge sub cltd add movlps sarb in (bad) push xor loopne sbb mov inc cmp sub ret xchg orl push mov pop into stc push addps jle lock add pop ret sub (bad) aas fadd clc xlat mov shrb ret inc xchg adc enter jns rorb mov outsl xor mov aam imull pusha lds add ja roll xor movsb ja xchg ret sbb add hlt and sbb or cli or (bad) mov or xor or mov (bad) sbb jae fcomip add repz repz and outsb pop orb push or inc jns or sub or xchg add enter mov and jae cmpl stos mov dec jmp cltd jmp or adc adcl lods mov jno mov mov gs push add sub rcl and sbb mov jmp ficoml jne xor add mov add dec nop inc jae sub add inc out loope in cli les mov and add in sbb sub cltd sahf ss hlt std or repnz rep loopne sub cli or ftst mov imul or inc xlat add lahf pop es add add xlat mov das ret cmp push dec pop arpl xor loope js inc sahf pop xor jg call add (bad) or mov mull pusha cltd mov pop loopne les ret repnz mov bswap imulb repz (bad) push les (bad) loopne ret mov xchg xchg (bad) jmp pop sub sub dec pop notl or sarl xor lcall push adc ljmp sub (bad) ds orb mov cld outsl repnz mov adc rorl push mov pop ds mov or roll dec stos pop mov cmp mov in insb push inc xchg adc es ret mov fdiv jmp je jne jl jo or xor or aam rcrb int3 loopne cmp add cmp jp mov push cmp out std xchg sub (bad) jae and rol adc push sub pop mov adc inc xor out xor push xor ss adcl scas in ss xor sar add jb or xor xchg lret jmp mov inc push xchg pop or and adc aad add pop fsubp mov cmp adc (bad) mov sub loopne sub push cli movsl jno or int3 outsb xchg jge push arpl test jno rol icebp adc bound or sbb adc lret stc mov sbb mov mov int xor shrb repz sub (bad) es ret xchg and pusha dec (bad) fdivs adc pop jo (bad) push and sub jp sahf rcl pop fneni(8087 enter lret loope xor ja in add sub adcb neg xchg xor outsb call idivl fdivrs rorb in sarb idivl repnz push (bad) cld sbb xchg (bad) aam out push cmpsb mov push movsl cmp ljmp pop add aas sbb mov ja mov movsl (bad) and jbe je ret mov rclb jp out (bad) jmp hlt push sbb push cmp outsb cmc loope sub mov loope popf in jo out adc (bad) jne or or or jp sub pop mov add dec push loope xchg dec pop loopne fdivr loope ret or add inc js mov cwtl shrb iret data16 sarl jo (bad) mov in std sub cli add fbld outsb leave dec fcomip xlat popf jl and sub cmp cmp in lds jecxz loope lock loopne (bad) push clc scas repnz ret fdiv (bad) adc repz jecxz fnsave imul mov lret loopne enter push lret ror add push pop sbb cli inc cli inc xor lea (bad) icebp lds xchg mov fisubl cli out fisttpl out repz mov xlat ret loop jmp int sbb xchg pop cmp fisttpll sbb hlt stos push or jns xor push ja or add mov jb mov stos sbb ja jne sbb fdivrs jl cli mov fildll and cmc or mov aad jge pop sub lock xor jns inc push les es jno add xorl ds jmp addr16 mov enter pushf insb push sbb (bad) shl and mov xchg add or pop inc or push mov out lcall out movsb and jns insb js or push fmul testl jns or jmp and mov jne push cmp push mov shrb je push pop popl sub pop ret or pop xor inc xchg stos sbb and rclb dec push in les or push test ror roll andb add popf cmp push sbb pop pop addr16 dec fs (bad) jo add insl jl lock ret pop loope (bad) clc mov roll inc and ret push and stc orl or lea lods mov add jo pop adc jae out imul nop add lahf xchg lret hlt cmp mov fstpt jnp inc dec (bad) mov mov dec ja stos lahf pusha loope add xchg jle add fwait (bad) incl add or jle add xor cmpl (bad) clc jne roll sub mov (bad) dec add decl mov add cmpsb adc (bad) pusha dec sbb mov cmp dec out jl cwtl cmp inc dec inc lret cli aaa lods neg sar cmp pop and add scas mov or lahf ja stc cmpsb imull mov cmp cmpb xchg stos push (bad) rep lss push mul loop jo icebp rcr xchg enter jl testl xor dec pop roll iret and and cmp sbb out mov lods adc jecxz add mov in pushf push std jo sub fwait clc ficomp add mov pop dec jmp mov add pop out add sarb (bad) cli pusha icebp mov repnz jb or sub shrl cmp aam mov clc add cmp add jp jle and mov mov jmp popf enter jp repnz push dec fisubl jle mov sbb dec mov or push into ja jmp jmp daa jmp lahf adc xchg sbb xchg xchg inc adc iret cmp adc cmp add xchg sbb cmp mov adc call jne pop pop pop and leave adc adc or jae adc ss xor lock sbb dec ret rorl push xchg dec movsl inc and sbb sahf lret leave adc sbb or ret adc adc imul sub lods xchg xchg lods pop ss addb mov cmp jae inc sbb stos adc xor adc adc xchg inc mov pop mov (bad) add mov in loope movsb ja jge je or adc mov fnsave sbb inc popf imull stos pop and add call cmp push or into das mov jmp sub inc inc sbb add sti or mov add pusha out decl add gs inc mov pushf daa (bad) fwait in test cmp jl andl movsl mov xor test out incb adc (bad) jle fwait sbb test xor insb call xor jmp xchg scas add jb pop add fs movsl repnz push jno ret adc add in jne push add test mov decl adc dec xor xor inc add lcall jo notl xchg inc out loopne cmp shr inc repz decl fildll dec cmpsl rorl std test paddd jne outsl push (bad) ds push mov xor xchg popf sbb fimul pop add pop dec pop clc test sbb ss add xchg xchg mull push add std xor or lock fdivr loop mov or mov xor cmp ja and cmpsl inc jmp scas jmp push adc nop test xor arpl jmp dec jne cmpsl adc cmp orb cs fldl jns gs jmp fmuls dec cmpsl add pop inc sbb push aaa adc repnz sub (bad) jne xchg (bad) insb jmp xor nop test into lock cmp cmpsb xor push xor fnstsw xor lock adc pusha frstpm(287 xor test fwait cmpsb test scas aaa inc inc shlb sub test andl aas and sbb or xor adc pop sbb popf add lea cmp nopl jl cmp jg sub mov inc cmp jne push test js stos xor lods inc scas add xchg adc or pushf aaa pop add mov stos add loopne mov arpl das (bad) and mov subl mov jo cmp jg pop hlt je mov out cli xor mov adc mov iret incb inc lea cmp add jmp fimull fisubl and push cltd mull jmp ret mov pop and faddl inc or popa xor jbe cmp out jne (bad) iret les popa mull pop cmp rorb add cmp inc add mov lcall orl cmpsl cmpb dec jmp inc std dec add push cmp lret cmp jb and int3 popa and int js jo lret outsl inc or mov push mov fidivr add es or jne push outsb loop add je adc lea stc mov mov add dec sub inc sub pop rolb inc or or fwait inc push push (bad) sti mov add inc cmp jl cmp xchg or mov jle cmp dec jnp add add or or insb ds cmc add lea push movzbl add les sub inc mov mov mov mov outsl shrb lock mov inc or pop pop jmp fistl aam jb or adc or es enter stc jmp and mov cmp adc push and and inc and and cld jle jmp ds daa mov cmpsb or stos push loopne rcr incl shr xchg add or pop lea push sub push add stos lea clc mov mov jmp mov es jle insl mov cmp and push in xchg loopne or sti fadd jbe inc inc clc add jbe or jb loopne add add sub call sub mov sub movsl movsl mov movb cmpsb and (bad) hlt inc adc mov test into cmp inc imul orb test mov movsb insb mov mov mov in cmp cld push fiadd imul mov ds (bad) push jl push or jg jae sbb mov out idivl jmp icebp jae add push add movsl add jne lods adc inc fcomps jns sub or or mov sub cmp pop ret push inc or rcrb js es add addr16 mov add push push pop and jl bound add cmp add cmc addb mov adc inc ret push inc ds jo mov jp (bad) stc icebp ret test mov mov mov adc jmp cs or (bad) mov lds add stc push dec pop lahf enter (bad) inc fimull inc cmp jne or sub in mov sub gs inc inc jne and mov mov push jbe and stos (bad) es mov pusha popf incb jmp push push mov xchg adc xchg mov shrb or in xchg (bad) aaa mov xor imull pop aad mov mov jmp rorl mov fisttpl push xchg mov and dec inc arpl outsl add adc jge (bad) pop aaa cmpl loopne aas cs xchg xchg inc loopne xchg int3 inc pop mov jmp mov add mov mov or xor mulb arpl imul outsb dec rcll inc mov mov (bad) mov dec and imul sbb sbb enter sti and jle jl cmp sub inc push push into ret lock test jmp or add mov out jne mov ret and mov sbb fsts jns jb les adc fs fadds dec add mov dec and movsl in (bad) shr insl dec test add les inc sahf fsubr sbb shrl (bad) push call jle data16 mov push (bad) sbb js cmp movsb fcmovu fsubr mov xor add int3 data16 lods js sar (bad) loopne (bad) pusha icebp push imul test (bad) push mov xor jne xor bound cmpb test and je rorl push mov in add pushf outsb mov sub or cmpsb jp popf divb cmp add sahf in pop mov mov icebp (bad) frndint sbb cmp sahf mov pop xchg lock xlat imul push mov add incl inc pop jge and mov mov adc pusha adc inc sbb sub and cmp test pusha sub adc fsub out nopl pop mov dec jge jecxz mov pop testb je mov or xor inc adc jle push inc mov test das jo in add adc jp pop je mulb or add sub ja lret sysenter pop mov add push lea mov out xchg loopne pushl enter mov pop push or cmpsb ss cltd popf jns lods repz faddl mov arpl push call mov mov (bad) xor cmp je adc insb and jo or call sub xor (bad) jnp inc push call mov inc jmp jge mov pop jmp mov icebp lahf mov mov sub mov sub or pop push je in or nop dec push inc push call je loopne xchg sbb daa jecxz test out sbb fdivr cltd dec repnz icebp popa push cwtl and or pop jge mov ret sub pop inc sub adc or loop sub push jo test cmp pop scas mov xor neg int3 dec sub ffreep lock xchg dec cld mov neg clc cmpb (bad) jmp mov push xor sub mov and xchg (bad) jae mov sbb mov or mov adc cmp (bad) and jnp andb cli or cmp sti mov inc jecxz pop inc test jl std imulb adc or add mov out into (bad) or jb mov lret and sbbb dec fs loopne add std call cli mov movl and xor int3 (bad) xor sbbb pop mov inc ljmp cmp cli mov dec mov ret into addr16 sub ffree adc addb leave and or sub (bad) mov mov movb xor outsw add and or inc add push cmpsb mov out aas sbb mov dec jmp xor int add incl repz sbb popa (bad) ja or inc bound pop and adc push jnp pop push add rolb pop mov test popa rorl pop mov rcll jne xchg je je je add sbb rcr pop ja xor (bad) xorl clc inc fs adc (bad) testb adc adc es int3 dec (bad) mov and push pop add inc xchg pop inc jne mov pop and icebp inc jle add popf or and add je dec mov fadds inc or imul and dec call add add loope add inc sbb adc fistpll lea push fs out std and pop aas jle dec pop mov in and push mov push xchg fbstp xlat xor ja jge div enter pop push dec adc (bad) aas xchg or ficoml add lock push pop pop sti push or mov mov xorb xor mov dec jne pop fistpl add push adc jge test inc lods jp xor jmp dec dec jmp aas mov daa movsl adc xor mov inc add mov cmc popf (bad) or and or xor xchg pop (bad) cmp cld cmp mov out pop xor movw mov (bad) sub lret mov push cs lret (bad) stc ljmp lea ja and pop pop sbb xchg push sbb xor cmp test cmp or (bad) in cmp popa hlt xchg dec pusha push aaa inc test push jp jge add shl push mov xchg adc adc xchg out ret popa lea push bound sbb das pop cmp dec pop xor shrb addl lock mov or jmp in addl adc insb call push mov lret sbb nop adc sbb xchg push push or ss push mov test mov pop cmp cmp and repnz mov adc inc loopne or fbld jne cmpl and jae (bad) pop cmpsl push ljmp xchg test sbbl repz ja jg call jge mov sbb in dec imul sbb sub push add push jle push call ret dec push xor xlat test mov sbb mov fs jp push or push or je test mov std and cwtl jns notb (bad) mov aaa les call pushl lea ss push pop push adc mov push sbb movsl mov faddl mov roll outsl cmp push repnz and push push inc mov into push ljmp push push jge test (bad) arpl push mov jp das cmp add std or das mov (bad) out or rcll push test xor sub xor adc fidivrl insb mov mov leave cli imul arpl movsl xor dec nop adc lods adc push loop pop cmpl lcall mov add jns pop adc mov into in repnz int3 or lock pop mov mov cmp sbb in mov add pop sub push ss or fcoms pop or or (bad) nop loopne in inc loopne scas push mov lock ss jle incb and jl mov add mov mov fcoml repz dec mov adcb xor out pop add cmp imul inc mov sbb (bad) outsl push and scas call aas adc or push call pop cmpsl add xchg xorb call xchg adc sbb outsb pop mov jmp dec or lea mov mov fimull pop inc clc push mov mov cmp or or push push inc mul inc mov mov push test or mov lock inc test pop inc inc test push or divb mov push loope mov inc sub xor xor sub out dec jmp xor xchg sbb out add inc inc inc push or inc adc test jne or addb test pop fildl ljmp sti pop pop incb push jp mov mov jmp dec cs jbe inc adc shll into inc fs jmp xor testb fcoms inc mov bound xchg dec and mov test pop jne call ret and adc bound dec xor mov push call mov iret push js repz xchg popa aaa mov push inc cmp sub cmp inc dec jp call mov mov loopne jne rcll cmc cmc mov sti negb pusha lcall or add pop push nop pop sub push (bad) loope push dec pop call or adc imul mov jmp mov cmp pop sub and xor mov pop jbe pop cld inc ret inc mov mov jo mov adcb mov dec fs ret sbb xor inc test neg lcall fcompl or add mov into dec stos cli es loop stc pushf xchg movsl or or es pop ret (bad) clc dec orl add rolb and xor call loope shrb mov int add lods adc adc sbb pop xchg jno sub jmp mov xchg xchg dec nop (bad) lock cmpsl dec mov or push cmp mov adc cmp inc or setns and xchg push cmp jnp push stc mov sbb dec or std lods mov push sub aad clc dec inc ret push (bad) push dec xor or xor dec xor and insb cmp movsb (bad) les inc push lock sbb insl mov push push lods jne sti mov cmp sub sarb or ret std fisubl sub cmp xchg xor add sbb mov inc xor pop or pop or sub (bad) jmp push jmp mov cmp je cmp je cmp je dec cmp jbe inc leave lock and mov cmpb jne out clc sub je push jmp add cwtl add mov fild mov xchg inc adc pushf sub mov sti inc pusha sbb cmp and je push sbb sub sbb mov test jbe push dec jmp out dec pop jmp sub bound mov sbb adc sub das mov add ss or fmul (bad) jne cmp sti cmp clc fs or cmc sub or outsl (bad) jo inc sub and aaa call xchg pop jnp pop mov push mov into jle fdivs or fldenv popf adc jg je cmp mov (bad) inc cmp loopne sbb scas sbb adc mov ja xchg push imul xor cwtl (bad) push je mov or fldpi rcll jne mov xlat mov dec jge cmp mov sbb in inc repz add je mov mov (bad) cmpsl or xlat jne mov mov popa das cld pop jl call inc add mov cs setns stos pop sub sub rolb cltd scas xchg xchg cli add xor pop pop adc cmpsb cmp xchg push adc pop mov (bad) push add add (bad) jne jae out mov (bad) movsb push mov lahf rcrl ret jmp sub ds sbb sbb adc push xchg lret inc xchg ret stos pop sbb mov add mov xchg adc dec aaa lods arpl pop mov jne test movsb fwait popf sub push pop pop cmp jg pop testb mov and dec cmpsb je in daa cltd rolb sbbl adc inc mov nop adc fsubl xchg adc es inc mov adc cs fiaddl and jns les rclb inc dec enter rclb int3 adc das inc repz adc adc jns enter js adc and int3 adc adc adc (bad) mov je xchg fcmovne sub sbb stos inc gs cmp nop push dec pop xchg icebp or dec push test test icebp add shl pop rclb lea or xchg popa sahf movsb movsb pop rep (bad) mov jne (bad) sub rcr repz or fadds (bad) je rclb sub or test aas mov push jl fild daa ret and xlat xor jo or (bad) in test mov test (bad) adc btc or cmp mov or sub daa mov and dec (bad) ja dec inc add jmp or rolb in mov pop pop lock in (bad) xchg jmp xorb sub movsl inc in cli sub addr16 or cmp pop adc xor repnz sub aaa nop lret jg les lock int les movsl (bad) jno inc mov add mov mov pop test adc push and mov lcall outsl pop faddl sub jb or pop call daa dec movl cmpsl mov outsb or cmp xchg lock push lret call xchg mov inc ljmp sub add dec pop jo flds add mov mov xlat outsb or add pop add push es sub rorl sbb cmp loopne add loope inc adc xlat (bad) loop ss adc xchg aad adc cmp or in xorl movq mov mov insl or or mov por mov mov sbb push mov call add mov mov mov popf pop pop ja lock or (bad) or mov xchg movl int3 cmp clc pusha cld and js push or test or dec push ret adc xlat push add adc sbb outsl mov out sub imul mov inc add push dec lcall xlat iret push mov sbb mov push push or adc cld cmc dec std (bad) mov jne sar dec cmp jbe push pop mov and and mov lock jg mov shr lea not and decb jne add sbb sbb lods mov xor pop add or or push dec pop adc add hlt mov push or rorl sbb or pop clc and shrl (bad) hlt jmp pusha aas and sti add dec dec pop cmp jbe fstpl hlt mov imul andb cmp je je or paddd fistpll cmp mov out not and add mov and xor sbb pop push lock stc xor dec cwtl cltd xchg cmp and dec xchg mov adc pusha cmp mov jle mov lock mov pop or fwait xchg dec or add loopne clc xchg inc mov xor or mov sbb mov iret (bad) push fucomip sub lods dec (bad) push mov ljmp dec mov xor lock arpl div fadds push sahf scas adc fmull jnp scas jg shl add mov (bad) aas add push or mov cmp sub dec inc adc dec adc mov push mov (bad) imul mov adc hlt shll adc lds inc fcomip sub adcb push lea or scas ss mov cmp or rcrb int pusha mov or cmpsb fcomps jmp mov mov push daa push adc stos push (bad) aas pop ret addl addl scas or jge dec mov pop (bad) ja inc push cmp insl dec daa in push cmp xor fildl xchg mov pop popa outsl xchg fdivr add mov push lcall aad clc adc shl inc mov mov imul repnz adc pop mov add xchg insb or jns cmp sti mov out or xchg and mov inc lea out cmp dec ja fsubrs iret shr cli dec loope lea inc orl orl xor push out mov lock push adc add iret dec jne xchg add sub dec or (bad) jb outsl or adc fs inc add idivl jno inc inc mov add pop mov and add jbe ss ljmp xor test movsl sub sub pop shr add imul xorb dec cmp lock mov or push add cltd add inc adc pshufw adc sar mov lock cmp xorb pop push cmp int3 pop inc cmp sub into add inc pop adcl dec nop dec or pop jbe xor sub add mov mov push jmp dec stos sar dec cmp mov cld jmp test cmpsb pop hlt lea jmp pop jg or cwtl pop cmpsl imul jns adc pop sbb iret subl jmp pop pop (bad) cmc aaa xchg imul fstl push inc mov jae insb xor push inc add jmp ret mov adc les movsb sub das outsb in mov inc dec insb pop xor push sar dec cmp fsub int3 scas xor movsl pop divb aaa imul cld xor stc rolb into jecxz xor fisttp scas roll xchg dec push (bad) push push out adc (bad) pusha (bad) push adc fimull (bad) jl or mov mov dec add out adc lods push paddd mov jns bswap mov dec cmp rdmsr cmp xchg arpl popa sub enter inc andl ret icebp pop add sbb loopne dec fldt adcb and xchg xchg adc repz aaa cmp ss cld pushf je leave lcall and mov inc idivl sub enter adc push jae xchg fwait or test cmpsb fsubp notb fild sbb add jbe mov inc dec enter jbe sbb push mov and pop lea dec imul jp adc mov scas push clc xor add lock adc adc push imul jle stc xchg sbb jmp mov dec in jmp mov sar dec cmp jle sub (bad) pop push test or popf add movswl aas mov mov add cmp mov enter inc xchg ret push push mov mov dec push arpl push (bad) xchg test notb shlb sbbb enter inc rolb jbe sbb mov je negl je cmp (bad) fs shr adcl xchg cs lock xchg pop cmp enter lea enter jecxz pop je mov lret jne xor or or cmpl xor xchg push aam or add sub (bad) lods pop mov or add jmp or fcompl sbb aad inc mov js lds mov and sbb loope pop inc mov adc enter add cmp xchg mov (bad) sarb push lds xor or loopne hlt imulb and subb ss mov loopne adc add subb dec add or out pop push push pop jmp push jmp push jmp (bad) (bad) (bad) out push jmp push jmp push jmp push jmp push jmp push jmp push jmp push jmp rcll cld into push jmp push (bad) push jmp fmul into push mov jne mov icebp (bad) jecxz push pop inc pop aad repz mov lock jnp hlt push aad lret cmp jne movsb imul mov cmpl and leave std inc (bad) xor mov add adc inc inc push add adc sbb mov mov pop mov mov and dec mov sbb ret fadds dec jg mov fs sbb pop fs clc lcall mov es adc js inc fsts decb fcoml sbb pop cltd adc xchg popa mov and cmp push ja adc int3 cmp loop pushf aam push fsubs cwtl orl adc push sbbl xchg mov inc push sti jl aas popl js xchg pop and pop orl push or aam negl lret jbe jbe decl je sub jg out or inc adc xor jns xor int mov cmc ds mov cli out cmovp rcrb ret dec je loopne xchg test cltd mov inc adc add or jne adc xor sarb add out add pop scas mov or add shrl push sub push enter sub fimull enter xchg mov adc adc add cmp sarb pop incl fsubs lret (bad) outsl iret movb mov lea add jb cli inc or ljmp adc sub or int3 mov and jmp inc add decl js jle jae mov stos cli or test jne in lea inc jmp inc repnz or pop stc mov sub or jo lock sub les scas ret jmp push add jle xchg mov or (bad) sbb jae sub mov loopne int (bad) jmp xor mov push pushf inc cs pop and pop insb clc add inc ret div jae sub or add movsb and mov pop (bad) inc cmpsl mov stos or xadd lock sbb sarb add ret cmp xchg add in ret sub xchg xchg pop cmc clc or dec push jl sbb loop pop inc mov sub add sahf icebp xchg out movl subl ja jo jmp cmpb addr16 rcr cli add insb sti fldl jge add (bad) ja inc jbe push jae roll pop fdivl cmp mov mov shl mov arpl sub iret adc insb out sbb sbb mov xor pop into (bad) aad add pop loopne cmp hlt adc lea xchg sti sbb fisttpll fwait loopne jbe push pop mov push clc out push js pop mov aaa jae sbb leave xchg ljmp push xor mov cld mov add adc add inc inc or cmp add jle dec adc pusha jl sbb movsl or fisub mov mov push adc and cmp inc aam xchg test jl lcall sub mov mov or loope jne andl mov jg ret stc add fiaddl mov and add push in pusha and mov jo mov mov out notb icebp push jmp xchg cmc jle roll xchg jmp cmp sub dec jge push ja mov mov sub orb cmc fimull mov cs adc jbe mov call push pop jb cmp jge pop rcrb mov shr add sub gs fstps sbb ds pushf std add push aad adc (bad) jmp (bad) xor (bad) push pushl rcll loope push aam or push push cwtl add pop clc jge or shr lods cmp hlt shr (bad) sub shr sbb dec lods mov out fucomip ret mov and or jne std div test cmp insb out jne mov jmp xorb inc or inc call mov inc sbb dec je mov mov jno mov in (bad) outsl repz inc mov and or mov mov mov fdivrl mov (bad) hlt xlat je fdivr dec inc pushl and jne lret ret pop jmp sbb gs cmp jnp cmp jb andl xor add dec lock call push lock and call adc push dec fist add loope test push lods sbb mov sub sbb cld dec pop sbb fwait iret push add dec add dec or pop js mov iret or push adc fisub pop loopne negl mov decb jne add and jmp int3 sbb xchg dec mov pop loop loopne and dec bound xchg adc clc into and mov adc mov out pop lock roll push or das pop sub enter jge inc or je mov out or popf push jne add xor xor inc or push mov sub out or or std mov inc mov mov jl mov add push xor fistpll pop fdivrl jns jne,pt cmp movsb jne adc jo adc pop lret and movsb xchg pop xchg add sub sub sar ljmp add jmp mov dec cmp jl cmp jbe sub push lds mov jnp adc daa fsubrl add jno xchg or pop negb cmp adc ret push fs xor adcl mov movl push xchg xchg icebp sub pushl movsl lods rcrb mov out movsl test (bad) lcall ss icebp sub mov pusha push mov jmp jae ljmp sbb nop mov add out adc push aam xor ja cmp or or scas je mov and push mov mov and dec and cld outsl mov add rorb pop nop lcall or dec pusha (bad) popf lock es movl dec jle js (bad) mov jae mov test ljmp pop or or mov ret xor mov add mov loop cmp xchg nop fisubrl lods mov les cwtl pop sub xchg ss mov lea orl daa pop loop mov lret or stos sub mov sbb add in pop test movsb jo adc adc adc shr or stos adc mov jno mov xlat ret es or enter inc push hlt sub ja,pn or and add pusha sbb push jne push (bad) divl mov mov mov stos ret inc pushf jg cmpsb or les sbb call leave sarl xchg aam (bad) jo movl jecxz rorl sbb movb pusha outsb fld inc arpl lods push cwtl data16 mov (bad) rolb inc xor mov pop cmp lea jge add popf ss in add mov jle mov xor mov or shl aaa jmp or movzwl ljmp mov pusha xor mov pop sbb repz dec es jmp imul push push ljmp rorl rorb pop add add lock test add push ret fcomi addb jmp lock xchg pushf mov sahf inc add or pop or imul inc add dec mov fwait rcrw fimull mov sti fwait mov je inc inc xor sub adc (bad) jne mov and push mov dec (bad) push push pop pop ret dec je inc jne xor dec or lods jmp and enter neg mov add bound mov lahf leave adc sub jle or aas mov or out mov mov mov cld psrlw sahf jne stos pop repnz leave push aad lcall out lods add test in (bad) test xchg movsb sub fisttpll cli cld push adcl lock cmpsl push cmpl lea push dec cmp (bad) imul push rolb sub and or (bad) dec ret lock jg sbb mov loope mov cmp out aad pop mov sub and adc add push stos dec pusha fistpl push cmp je mov mov mov adc add sbb pop mov push loop xor pop rorb xchg das cld inc mov jmp push or (bad) xorl xchg cs mov add inc daa imul push sub xor aas test inc xor imul dec add inc xor fnstenv cmc adc sti cmc lahf out xchg pop mov push (bad) jo sarb mov add dec push adc addr16 cld adc xor out inc xor xor adc pop push pop xor mov adc push sub lods mov pop pop sbb or xchg call inc ds fdivrs pop sub push mov cmp jae inc dec ljmp lock cmp jbe cmp jae push push (bad) sub push pop push pusha outsl adc jge pop sbb fist cmp inc pop shr popa loopne movsbl sub add push cli sub sub addr16 push sti jmp push jecxz outsb jne push dec xor lret test into stc push mov xor push daa push mov and xor lret and imul push mov pop lea dec sbb pop scas imul mov add movsl hlt jns aad pop test add lods add (bad) pop aaa jbe cmp mov sub push jbe loop jae sbb and add (bad) test popw jp mov imul pusha inc pop stc movsl mov adc push call pop dec and push call je (bad) add (bad) scas fs mov add hlt jbe jg jmp mov or mov push push dec add ja aaa fwait push lcall sub or add lods jmp pmullw nop call push aaa fcmove sub bound es lea mov cmpsb movsl hlt aaa mov ja mov data16 add mov add loope sbb adc add movntps aas popa iret sub jns andl inc aam add or xor bound loope (bad) imul in push lahf and push xchg sub cmp mov mov and in bt sub ja in fbld push push cmp out add and jb xor or lock popa stos jo sbb and lods clc (bad) and dec mov sub xor mov fild and jmp faddl fwait imul out not pusha jns adc call inc sub aam rcr rolb dec cs sbb pop movsb push add push push dec dec lcall pop pop and (bad) ss icebp ljmp adc loope adc and mov pop sbb mov aaa mov dec fnop mov add lods or call mov mov mov lcall sub jg sbb cmp jb push das inc cld mov add add leave dec adc or push insl sbb (bad) add and shr and in gs movsb jnp mov and pop mov mov xor mov cmp jge lret mov or jle andl cmp or aas inc hlt xchg cmp jl lcall stc mov push pop jnp or es push stc dec nop and cmpsb xor and lea xchg inc xchg xchg pop sbb pop or cmpsb js inc repnz andl cmp or loopne mov mov or xor dec outsl xchg sbb and mulb into add or pop or cmp add dec sbb clc pop and cmp or popf in mov sbb adc aaa and adc dec sbb adc sbb sub and jne pop push imul inc fmull push push (bad) cmpsl push jo imul sbb out shrb scas jne mov and or add add fnop in loope cmp add and inc das mov mov (bad) js sbb xchg mov rdmsr enter xor decl iret mov lcall (bad) push sub or dec in lret inc inc or dec mov mov push movsb adc jno pop rorb push daa sub fs aas test jle push loop adc xlat adc jne aad dec mov das inc sbb loopne jo or dec xor pop push loop mov test jne sbb dec push pop je push push dec test ja lods dec xchg xchg aaa and popf cltd xchg ja or cmp mov icebp fbld insb cmp je je loopne mov cmp ret push lods mov pop je push sbb xor loope add adc lret (bad) jne inc sub xor add pop jecxz call inc pop sbb clc pop push scas addr16 enter add (bad) lahf dec mul jno push ja and loop inc pop jp mov out push push (bad) in sahf sti test push xchg inc pop aas sbb lahf and lahf adc mov test mov fwait pop or mov add rcl mov adc lods lock pop adc mov push jle dec arpl pop xor sbb and push mov rcll jo and mov or push dec test pop mov fs pop je and rcr loopne jbe xchg push jl (bad) sbb cmp scas outsb mov cmp fdiv add pop and or pop pop inc xchg add or sbb (bad) push pop lock ds jne or adc mov lcall mov popa cmp and lret xor sahf mov ljmp pop adc je mov sbb repnz push in lods add and push call addr16 cs jne xor sub jbe fsubrs dec lahf sbb or movzwl fcmovne hlt push int test xor sbb ret in loope mov movb rclb fdivrl jge push int cmp adc and add hlt adc and rolb ljmp rcr enter push outsb push imul inc arpl js jno gs mov in mov cli jbe jecxz mov inc adc outsb (bad) leave mov or dec xor fildl mov sbb push and dec sti aam push sbb pop addl inc nop push push and mov mov push call xor inc mov call out enter orl call add (bad) dec jae fisttp mov xchg mov dec xchg je shlb pushf xchg adc imul sbb xchg mov xchg orb pop andb jge jl jmp mov mov ret mov imull push fwait mov outsl sub lea (bad) in dec cld or xorb jg loopne jmp test hlt dec inc icebp stos xor out sub movsb inc in cmp push jg repnz insl pop mov ljmp lret mov rorl mov ret loop add jo sarb push cs fcomip fst call cmc jo xor and push cmpl movsl add push pop pop repz shr jo test inc inc repz mov aad dec pop je pop mov xchg push and inc or push inc adc dec in cmp out stc data16 scas xor and pop stc aas dec jne adc add fucomp addr16 push pusha adc jnp xchg (bad) adc cmp inc movsl sbb mov es push push mov pop pop addr16 aam xor sub (bad) sbb push orb jle inc pop xor cmp std pop cmc insl in mov pop (bad) incb cld add jno hlt popf es movb or xchg outsb in add or inc or aam inc lret push inc das in pop and dec (bad) setno mov pop pop call lods pop xorl jb pusha (bad) aam pop xchg or cmp je mov fild pop cltd sbb out add ret or cmp mov push call bound push fimull clts cmp push enter pop jmp or insb fstl faddl adc cmp lret xor mov and push xchg dec add sbb leave pushf inc jb in sbb push aam ja sub outsl dec (bad) adc int3 mov jmp xchg lea sub mov pop lock mov rolb jg mov daa dec xchg ljmp ds pop movaps mov sbb mov sbb cmp push inc mov repnz bound mov push sub les mov lods inc cmc lcall pusha jno ret or adc push mov cmp out loope or shl cmp (bad) nop inc mov pop ds mov jmp insb inc or in fdivl js jb jecxz sbb inc push shll xchg xlat pop pop xor cld adc mov out rcr mov and cmp aam pop les das dec jmp fcmovbe pop pop cwtl mov jg push jge das ret jo xor fsubrl adc mov lea add cmp pop jae cmp clc add ret call adc add pop cli loopne push subl adc popa andl and arpl push aad mov or or je or mov jp xchg lds mov xchg cmp jne xor arpl push shrl leave adc mov cmp add das lret loope inc mov mov movsb or outsb jo ret fucomi ret fimul add adc cmp icebp dec inc jns iret xor jnp xor dec dec icebp outsl das add out or je dec jne mov loope cs dec int xchg aaa std or mov ja push call and iret call aam mov push add ret sbb mov push xor testl inc ret push mov (bad) lret and cld push aam test adc shlb inc sub pusha mov adc dec cmp push jb sub pop pop insb jo mov inc mov cmpl add call bound push xchg cmp or pop ds and mov xor ret stc jne push xchg hlt cmp subl je pop dec je cld (bad) aam cmc jg sub enter negl dec pop jne,pn sbb inc pop (bad) stos sbb and mov outsb adc fistp add cmp jge lea mov movsl getsec mov mov sbb pop pushl xlat sbb add adc repz shrb jo and sbb ret push push (bad) xchg push (bad) push push mov mov test pusha push jb je mov icebp add daa lock (bad) jb cmp jae lock jmp mov mov sbb js bound pop inc mov das std cld or xlat jbe test inc sub push clc inc xchg sub (bad) and sbb push sti and push xor cmpsl loope push cmp sbb clc (bad) push adc shrl pop clc and mov cmpl add inc hlt int3 je pop mov or pop es mov cmp push (bad) add mov sub sbb pusha ljmp fldenv push ficom add mov jbe mov movsbl add cmp jae testb jne push push pop push cli clc pop incl push xchg in jno leave mov jle aas push lcall dec push test jg cmpsb (bad) pop inc mov push pop cmp jg mov (bad) outsl shrb fstpt xchg lods mov inc cmp mov mov jle data16 es pop inc mov sarb pusha or mov sar lock or je mov or jl sub dec jns push jge ret jp xchg ss inc mov xor or negb lea inc cmp mov pop shr sbb jne lahf sbb (bad) (bad) aad cli dec push aam in pop rorl pop add jecxz in push jmp jns cmp sub stos out mov (bad) (bad) leave sar in pop fcoms mov mov or loopne add adc fdivr push xlat add sbb lret sub lcall push test sti adc jbe and out pop mov fmuls jecxz call lea or mov cmp out inc cltd inc mov movsl dec cmp imul or xor dec movsb fcoms orb sarb cmp leave xchg jle sub cmp fimul int add (bad) call pop jmp push push ja das nop (bad) adc js cmp sbb sbb (bad) iret divl aam (bad) sub add fadd sbb add call mov addl mov sbb movsl pcmpeqw test push lock gs and imul call mov jmp lcall push jl in adc pop push sub and sub and xchg dec (bad) inc mov mov cmp push nop add push push call cmp add push inc es mov push jg pop fsub ror add mov and jo sub movsb push push das andb and es dec cmp or cld push sbb cltd ds mov cmp ret xor movsl data16 cld sub lahf test sar dec aad inc sbb fwait test roll jl push call lea cli or rcrb adc (bad) mov or lret dec js pop call push jne aam test dec dec and jmp inc test inc mov in mov add popf or dec test push aaa dec xchg aam inc sbb mov inc jae jne adc loopne sbb jmp add adc mov inc movsb jne call sub in mov mov inc pop ds fiaddl dec add fwait lcall xchg jb mov call jnp imul xchg cmpsb test fldenv lea test outsb (bad) rol (bad) add jnp and ret cmp rcrb mov dec jo clc jne xchg outsl insb repnz out jmp lock inc movsl xchg mov mov jmp jno add jbe mov (bad) lock xor add jb push imull repnz jmp inc push les fcomp and loop div jmp add loopne stos inc fisubrl push jne popa dec enter push xor daa gs mov loopne inc jb hlt and or jg cmpsb imul xor pop lods inc dec adc imul and dec pushf xor xchg sub cmp dec fwait in sub and sub imul lcall xor jecxz cmp das iret sbb mov mov xor movsl cmp xchg dec inc mov out rcrb int xchg dec push push dec inc jae imul lcall push sbb xchg pusha dec dec cli adc xchg dec dec jmp in popf insb mov (bad) adc movsl cmp jb dec js xchg jl rclb fidivl dec imul cmp lret and in inc movsl sub xchg inc push xchg inc add jns pushf cwtl sub adc repz adc push pop mov ret movsb daa and test popf sbb (bad) and (bad) and popa mov lea lret nop lds add xchg mov fiadd jl repnz (bad) call adc sub sbb sbb and sbb das pop decb and or call inc jl repnz call sbb loop call mov and call out inc call mov call das pop mov pop call pusha call xchg push repnz call je pop js push or mov cmp ficompl adc mov cs dec in and mov inc pushf sub jmp lods pop test inc imull pop test leave push je push xchg lea sbb pop dec xor sub sarl rcll repz mov loope inc jmp andl push fstpl rcrb lods or jmp std je cmp inc add mov cmp das (bad) in jmp mov cmp ss xchg adc and pop pop subb jne js (bad) mov jo cmp mov adc sub cmp inc (bad) stos or push cld call cli xor arpl dec and setg lods (bad) mov add xor sti push rep call test and inc stos jp cmp add das mov les loope outsl dec push jne dec inc movzwl cli fnsave push fmuls add je inc add mov ret repz push push daa les es adc aas lcall fbld jmp jmp clc xor ljmp xor adc jmp jle lea push icebp sar mov mov mov jne scas mov or add sub or mov push jo pop mov mov movsb jmp lahf pusha mov or dec loop mov arpl or sbb shlb sbb adc adc jns inc std ds push sbb test orl mov sub and in and and enter pop insl ds jno dec sub sub repnz loope inc sbb std (bad) fsts in sub xor jb,pt (bad) push hlt add popa mov xchg jecxz lret lret push js xor roll fldenv jecxz test or mov leave push scas push adc mov rcrb push xchg dec repz inc sbb xchg test and and int data16 add push dec mov sbb sub push mov sub test adc pop imul or movsl push loopne lea jae add cmp mov or adc clc pop and ds xchg jl and cmc add mov mov jecxz cmp shlb das lods and jne and insl add cmp push mov xor lcall pushf push xchg mov clc xchg add bound outsl xor loopne or and sbb add iret add push cmp int3 je (bad) aaa stc mov vmptrld call jle insb aam and mov cs xor or pop xchg inc divl add lea ss add cmp das ss pop push into out mov (bad) inc loopne mov es cmp jl dec addb sub jle inc inc add push add fimull pop add jmp scas in mov sub xorl pop cmc cmp lret add int sub push loopne mov sbb add and inc inc inc cmp fisubr sbb arpl lods xorb imul lods xchg jne adc into xchg xor and das jbe stos aaa inc pop inc jmp (bad) jae movsb aaa jo push sbb mov fildll insl lods dec push pop pop stc arpl call cmp pop out and or es enter loopne rclb and inc inc inc sub add movsl dec sub lock pop add pusha or call ficom test iret aam cmp jge sub add cmp add inc pop mov pop inc add ss or in or inc cmp or xchg dec jo std xchg and repz dec xor add or rolb or push sub sbb push jbe adc cmp lea xchg jo ret pop sub sahf xor icebp and or or sub jmp cltd out cwtl mov lea xor lahf jnp leave sub mov pop ret add pusha sub mov pop sbb es ret dec or je dec addr16 ret dec mov jge sub sar mov imul add adc test es les sbb rorl push adc ficom xor inc add mov je je dec call cmpl fs loopne and sub imulb sub or data16 add jmp sbb jl inc xor mov movsbl and mov xor inc ret je (bad) dec add pop jp cltd ret xchg jl mov shrb xchg jl xor add out mov or add clc mov ss int add lahf adc xchg mov or and and or icebp push (bad) rcrl cwtl and (bad) mov je dec clc xor cmp sub and mov loope rcrb hlt inc push nop add call (bad) cmp xchg and ret jg out enter sbb jb adc adc jle ret add lahf fildll mov lcall insl div add mov mov mov sbb mov add xor mov and jne and cld or sbb sbb and cmp mov lret mov xchg es fnstcw adc or orb jne (bad) aaa aad push test push test pop aas mov jmp dec inc cmc cmp je sbbl cmpsb sbb push xchg cmp lods std adc push popf pop pop inc adc lcall cs lret add jl sub add das setp addl inc xchg aaa sub jb popf xlat sbb push xor xchg inc xor arpl sub pop add outsl pop mov movsb jmp idivb add mov jne imul mov push mov insb mov sub bound loope dec mov inc lods je (bad) insl dec sub xchg adc ds adc mov xor adc fdiv ja sub jbe or add pop or dec xchg or inc mov ret in xor roll sbb dec into jbe adc or sub or outsl call add xor nop lret mov mov mov ljmp fdivs stc sbb adc mov out adc dec xchg sbb (bad) je xor dec cmpb mov cmp jne push mov add add mov mov sbb loop adc push lods andl inc adc mov sub ret mov xchg ja,pn push hlt sub daa in mov addl mov xor push movhps in cmpsb xchg dec dec push js cltd shlb insl adc sbb movsb push push jmp cwtl adc dec sbb mov and push or push push ss roll mov insl repz add mov mov add jmp cmp jo enter sub rolb shlb fildll push or push xchg fsubs dec rolb lea xor push ljmp jp and pop inc scas sbb xchg das adc and insl push cmpl je inc adc inc mov aad js ret es inc mov in or add inc adcb adc lcall (bad) ret pop hlt or popl inc and xor sub call inc js adcl ret pop fldt les fisttp pop sub push mov push cmp sub push and notl rolb cs (bad) sbb sbb mov sarl int3 jmp mov push imul addb fiadd inc xor push dec jp je clts cli es dec cli push push je retw xor inc pop mov mov int3 pop mov adc inc pop roll sub jo push loop add pusha pusha lock add fcoml and mov sbb test add repz dec jp pop jge out or dec inc clc add daa into imul imul int pop (bad) out out and mov push pusha or rclb jae add pushf adc je dec or (bad) jmp sbb scas mov scas jae int fmul cli mov hlt daa dec les mov out sbb sub sub mov imul add sub inc inc cmp jl mov mov data16 cmp cmp add sbbl jno cmp jmp outsl push and stos xor es mov test or (bad) or lret js or dec adc int3 lds push sub adc inc int3 cmp pushf mov mov mov hlt jecxz inc add sub mov push cmp push int insl (bad) xor in cli jmp dec or aad inc (bad) out faddl (bad) dec mov (bad) sub pop add pop loopne sbb rcrb push cli push and sbb rol jle mov nop sbb push and loopne movsl loope mov mov fwait cmp inc cmpsl mov das cmp sbb js add cmp dec xchg xor insb adc stc xorb insb inc pop and pushf je cmc push or mov xchg and push xchg lret dec ds push push push push (bad) jno lea (bad) jp push jmp mov sbb dec sub lcall and sahf cmp sbb mov scas pop cmp lcall add mov jb (bad) fistp xor sbb movsl arpl and dec stos incb adc test xor mov sub add daa fdiv pop cli sbb punpckldq pop call divl dec or or pop cs inc lods std push adc outsb dec andl (bad) sar testb je popf jnp and inc les or inc push or mov jbe lea sar push das sub in pop mov cmpsl add xchg or jo nop shlb jo adc or jg popf mov rcrl push push stc repnz scas sub call pop mov and and add orl pop ja es cs cmp rcll and jp jg fcomps andw mov pop insl leave movsb out adc leave xchg xor adc cmp fsubl mov sub push xchg lods sub pop push stos in jle or or sarb sbb xchg loop cs push pushf pop cmp sub add sub mov or and sub ds pop insb imul push stos sub push test popa aas das jle les xchg jne push call push (bad) loopne jne outsb push repz or xchg rolb mov aas sbb pop cmpsb mov pop add insl adc push add jbe mov or or and push adc call scas sahf or pop xor jae nop inc pop nop sbbb and and add or mov lret cmp xchg in insl loopne and popf movl lret jmp daa rclb mov mov lcall jg pop pop lods inc push jmp mov mov jne popa inc jg movsb aam jmp mov decl jnp xor pop insb mov out clc mov sub xor ret test sub mov rolb mov pop dec mov push mov hlt nop inc add fldl mov cmp jl or sub jo lock xor fstl pop sbb pop inc xchg adc push pop rolb cli add mov xor je sub add test les or jb xor adc scas mov xchg pop mov inc inc bound pop les jmp cmp add xlat and jmp lds scas cmp jmp daa addl mov cld repnz lea sbb fsubrp nop push mov mov insl dec inc rolb jnp rolb jb xor dec and push mov jmp jmp xor xor or and sti ja mov or arpl cwtl adc jmp enter add pop mov lahf into lock cmp in cmp xor mov fs push lcall mov sbb mov mov push sbb mov jle clc iret clc or xorb fdivrl jne mov call mov sbb sub fcoml imul cmp xchg mov gs (bad) outsb jo pop ficom and call sbb pusha push pop and test insb or add cld xor cmpsb push xchg stc and cs ret sbb adc in stos mov mov pop add push push mov adc push fidivl xchg add mov cmp (bad) stc sbb rolb lods loopne mov fbstp in jnp add call clc je pusha jge (bad) pushf add or mov or push rol pushf xor cmp es mov ret movsl push jmp mov cmp fsubrp dec xor cmpsl fcomps jmp add xor testb fmull mov loopne ljmp xchg sbb fs push jmp push shlb inc mov loopne jbe aaa mov add mov mov dec mov push cmp mov stos sbb int3 push inc sbb cmpsb and jne aaa test loope pop adcb cmpb call or adc push push sti sbb sbb mov and sub addr16 pop rcrb cmp cmpsb (bad) fadds jg out adc inc dec dec add mov daa add sbb addr16 movsl push and dec ds (bad) sub sbb jmp dec testl jmp pop xchg pop dec cwtl out (bad) cs les test sub sub push movb jp (bad) lods add or lret in cs or std mov es adc mov stos je mov repz push or sbb mov in pop ret pop add sub sub sbb jmp and adc xor aaa adc mov jae neg xchg sbbl dec es xchg xchg add or push (bad) imull pop sbb mov or sub adc sub and ss jg xor inc inc cli dec mov (bad) xor xchg pop pusha cmp add push dec jmp lea jae movb pusha cwtl xchg jo adc subb jge mov add inc ficompl adc cmp notl sbb mov adc scas sub cld adc je and sbb test jne add xor cli pop mov mov push call fbstp sub mov or adc xor sbbl push sbb add enter mov mov enter cmc daa repz xlat int sub sub cmp jge add (bad) dec aaa js cmp ret es pop out je or mov adc adc dec push mov lods ret adc mov rcrb mov adc repz repz sti xor ds push pop cmpsl and cmp cs scas test sbb test je test je lea pop loop mov sti xor and mov ss xor jge loop pop add mov daa add in shrl pop jge dec sub fwait ss mov cmp data16 jecxz cwtl dec test pop rorb and out sub sub cmpsb stos mov inc mov and adc les mov xlat push enter sub (bad) xor mov test xor out ldmxcsr fdivl add lods and mov inc popa xor (bad) cmovo test jne,pn pop xor (bad) jns or mov push push lds mov mov or aaa mov sahf cmp inc gs sbb clc dec call lcall test mov shr sub mov jbe sbb fwait mov add mov cmp testb push cmp outsl dec shlb inc or dec and or push dec nop call cld add xor rorl popa inc and out adc cmpl icebp or dec jo inc sbb mov sbb add adc mov adc test cmpsb sti adc (bad) push (bad) insl or sbb mov testl inc adc clc pop add (bad) xor sbb data16 scas outsb icebp push or add lcall mov sub sar dec aad dec or adc add outsb test std es enter nop mov ds addb push inc jb or add push imul repz es jge lret jge adc orl jle and jl cld call jbe cmc inc inc ja outsl (bad) lret cld add sub pop or in sbb lods divl adc inc inc test out inc ret push cmpsl lods shr xor subl cwtl int icebp (bad) decl xchg mov (bad) push js fwait sub sti push pusha js ficom add sub je insb mov jge jle (bad) or mov je xor imul enter push shrb mov pop jne inc xchg xor lock cmp pop sbb addb fildl jecxz add xor je sbb mov pop inc call mov add lods aad je pop mov fwait mov and sbb push inc scas add adc push jno push dec sbb sub push fadd pop adc sub add jbe push or popa lock adc leave enter push push add jo rolb in xor scas cmp sub pop and shlb sbbb jmp nop pop lcall sbb or test pop shrb pop (bad) ret xlat call mov pop sbb aaa decl xchg nop push stos sbb mov push rol mov and add mov movsb jb xor pop add sbb sbb adc add pop adc rorl inc sbb (bad) mov pop out xchg movb out sub out pop cs sub or lock inc enter fcmove xor je test push ret rcll and (bad) or or (bad) jo out mov scas sub jo xor (bad) (bad) cli fs clc xchg jne adc inc rcll lret clc es lahf or pop sub ret push dec and scas xor add movl inc sbb pop jg xor movsl mov xor movsb cld lods ds push iret xchg xor push adc addl loope dec jl dec shlb cmp (bad) je pushl les scas cmp cmp popa jl xchg les imul fwait push xor ffreep out mov mov repz movsb sbb add outsb test int and push adc popf sbb test mov into das ljmp mov and ret xor mov addr16 sub fisttpll andl push call mov xchg (bad) xor jmp fidivrl out andl (bad) jl jl sbb inc push jne (bad) lock js out mov cmpsb scas in cmp cmp jb mov mov enter mov movsb mov fimull ss pushf mov inc mov jb daa movsb movsb sub or push jl or dec adc pop imul and push push mov jno push mov mov incl inc decl mov inc add xchg lret inc dec inc pop lock cmpl aaa jbe push movsl test and add xchg test jg or adc cmp ja fidivl incl sti dec mov mov xor or bnd cmp jae dec lea test pop jae pop jbe cmc adc mov fucomip test add sub mov xchg dec inc popa rorl jns jg sub xchg (bad) dec jg je sub je or je jge xor and add icebp xchg or or mov aam aaa push pop jmp push jbe mov push push adc push (bad) in sbb fadds (bad) aam popa (bad) pop decl jmp lret mov test gs add call popf cmpsb adc pop push or pop sbb xchg lcall mov sbb leave inc outsl loope mov and push pop jmp lea mov cmp jge (bad) in xor and xchg icebp invd add rorl mov push pushf mov pop push add xor cmpsb push lock cmc pop popa cmp add inc pop (bad) fucomip cmovno lahf sbb push jmp mov jmp add je arpl jns lock sbb mov jmp and cld sbb es jmp movsl cmp xchg add xchg jmp ror jmp jg inc pop je dec into add push cmp call or jmp bound push jmp inc arpl ror int3 adc xchg mov or sbb mov jle push xchg and mov int push push pushf sbb jbe cltd or mov ret mov fadds sbb movsb mov push dec adc jo test push movsb daa and jbe adc (bad) pop sub mov mov add xchg jb xor rorb xlat out fcoml and cmp repz mov rolb pop repz les jne mov inc call mov and insb aam ficom mov mov out sub and inc sub inc (bad) hlt movsl adc xchg add loopne or cmpsl arpl sahf sbb outsl call mov mov jmp pop or roll aam adc mov lcall push dec push add ret ret test or fiadd adc out ss add jge adc sub inc pushf es scas xor inc cmp je dec aad test cld cmp rclb xchg lods popf sbb daa adc or jl lcall aam push pop jl loopne adc out dec and and add dec je add out mov and dec push sub and rcrl adc sbb add popf or or std add dec out cmp jmp int3 int push (bad) stc mov jmp test loopne cmp dec lock cmp je cld and dec testb push add push (bad) add dec loopne push scas cmc xchg dec sar dec push push mov mov and and pop std or sub add mov dec add (bad) addr16 inc jmp cmp xchg lahf jmp ljmp mov sub test outsl add mov lods repz mov fs ljmp add inc push or dec cmp jno push nop add jbe call aas gs adc fadd add or or adc cmp jae outsl mov adc jne push sbbl dec rcll or std push jmp push jns arpl or (bad) mov pop and jo lea mov dec stc push add (bad) and nop push pop lds adc in mov mov fldenv push sarl pushf inc mov add popa mov pop (bad) or push mov cltd into leave cli push dec cmp mov adc add mov je cmp push push dec insb aas je test jge hlt adc (bad) jo mov leave int or dec pop pop sbb jmp inc jp mov mov inc inc and sbb sbb jle test push dec sbb add (bad) xor cmp repnz xchg cltd push add adc push mov imul inc mov mov andb pop (bad) xchg imul mov adc cli xchg aad push loopne pop call push sbb or pop icebp mov repnz pop imul dec pop add jo cmp sub les daa loop adc and rorl lahf xor sbb aad movb roll inc cmp push fs push rorl xchg mov and outsb call pop add mov dec fadds inc and lret clc cmp adc stos dec mov or xchg cmp sub cmp jae push inc jmp sub xor cmc xchg fs fdivrs and jl insb imul lret sarb mov adc mov ret pop mov int push jp sub into pushf pop or sub sbb lods sub test rcr xor mov cmp mov subl sub aam fs xchg xchg fildl psubsw dec cmp xchg or ds ds jmp out andl jge inc fist sahf sbb push negl das movsbl mov push pop xchg xchg mov cmp inc dec rorb movsl fdivl adc adc push sbb arpl mov xor mov lea push add jns and call mov jl pop out push sbb pop sub das fstpt mov inc enter adc cltd imul pop sbb sarb jo xor fisubl or imul xchg test ljmp cmc (bad) fwait roll push ret sbb push sbb in dec push mov sub sbb test cmp sbb enter or aas cmp jle sub jmp fs repz insb and mov pop adc loop std add imul dec and incb (bad) jne push and xor mov fs sbb ljmp data16 add dec mov lahf jns sahf pop es adc enter pushf je idivb imul xchg cmc or sahf test adc cmp ficom leave scas and in aaa add data16 add jbe or (bad) pusha movsl jnp jne adc outsb push push (bad) repz sub push push push push push mov (bad) pushf and iret or adc adc and pop dec push and lret push call cmp and fstp shr loopne add add je mov icebp lcall push or ja call mov sbb xor lret xchg jg push jle push fldt (bad) cs jp clc sub loopne ss jle dec in adc add or mov cmp jne sbb cmpl add push pushf sbb test jle mov xchg or xchg pop dec jge adc and xchg or add mov pop xchg xchg mov cmc popf inc sub cmpsl mov in xchg imul push and dec adc mov sub outsl lcall jecxz cmp dec ret stos push push mull adc jl into movsb test push cmpsb add arpl loope xor enter mov sub sub adc and adc loop adc rcll lret and mov mov and jns adc js stos (bad) or (bad) add mov jne ljmp dec mov adc mov jbe repnz das dec dec imul faddp inc mov mov test push mov push jl push pushf fcmovbe adc add es mov data16 add add imul fidiv lock lods cmp je adc mov xchg jecxz shll daa daa rol shll fstsw xor call add and mov outsb cmp out or add (bad) or and or push inc sbb or xchg push cmp idiv push cmp loopne inc jp loopne add loop ret xorl jbe add jmp sub inc test ja inc add (bad) and add sbb jb add test mov or add mov (bad) lock dec push pop dec mov pop adc mov dec pushf loop fimul xorb pushf xchg movsl inc add rcrb in and sub pop mov pop push je movb inc mull mov js decb push xor mov ret addl aas fwait lret push inc fdivs test ja or loope fmull jp ds adc adc adc cmp jg jl push add adc addr16 sbb rcll push icebp adc dec add jle js adc mov cmp int or jg loopne jle fisubrl xor dec or dec mov inc jmp dec inc add or or jne pop inc sub fstps subl xor movsb or inc or test fldenv xchg sub rorb pusha push push sbb xor add dec (bad) (bad) jbe,pt test (bad) out iret popf pusha or mov or push pusha into outsb jg xor enter mov cmp jl pushf leave mov mov and ret call loopne loopne test cmp push call add or push dec mov rcr daa bound repnz sahf lcall add cltd in and fs enter lret cmpsl push nop xchg inc add add nop or scas adc xchg xor addr16 add lcall sub jb nop xchg dec cs sub adc fnsave cmpsb dec leave inc push pop cmp pop enter sahf jge push and push pop and pop mov pop and cmpsb in shrb cmp addb ret pop shlb pop imul les jg cmp mov inc pop xchg push cmpsb mov decb xchg adc loope (bad) aaa pusha fisttpll jo jne add sub jmp inc in lea jo sub adc test add sbb (bad) lcall adc xor inc loopne sub cmp ret mov addb popl add xor xchg adc cmp xor sub jbe (bad) xor sbb mov ret popa in xor dec je ljmp jae movsb fcompl les data16 or ret mov pop push inc jb movsl push jle pop ja mov mov lock add inc pop fldt cmp dec mov inc fist push dec push (bad) cld sti jg xchg add fidiv sub cwtl or pop mov inc pop and cwtl jbe daa cmc jno push dec mov or jmp or imul adc or push cmc and mov (bad) xor fs sbbb (bad) adc pushf jmp sub and xchg inc hlt pop jle cmp sub sti inc fwait jb mov mov iret xchg mov and sub lds ds inc jmp xor cli xor iret push loop jb ja repz lods ja mov decb add jo std loopne adc jno add push imul mov out (bad) ds add cmp cmp (bad) leave je jb mov data16 cmp jae test cli inc sub mov cmp or sub add jg xchg pop add cmp mov pushf push xchg xor loope dec add push adc (bad) mov nop jno mov movsb dec pop dec jmp push push add mov loope mov push popa dec pop jmp loopne or jne ret and dec cli test add fwait movsl (bad) sub jno cmp roll jg movsb pop ret jge dec rcrb gs cld jmp pop lea push jmp sub dec (bad) xor jno cmp push (bad) into insb push movsb in mov rcll push cwtl dec mov pop loop je push ja and mov dec mov sub jp pop ret pop pop lcall (bad) cmpsb popf out jne add outsl dec and adc shlb in ret inc daa inc dec add ret inc ret inc insl iret xchg scas inc xor (bad) jbe xor sarl or mov imul pop mov fnop xchg hlt xchg mov jmp popa (bad) jae mov mov add inc test fcomps mov loope (bad) jo ljmp imul (bad) xor sub push inc xchg pop xchg pusha lock inc push xor xchg cmp data16 jmp mov pop push mov je movsb das pusha jecxz nopl je adc jbe push imul xchg adc lret in jne push aas sti (bad) (bad) mov dec cmpl sbb in push push and add je and mov inc out inc add mov sbb not and cmpsb (bad) and push mov adc scas icebp add xchg jbe arpl sahf pop js xchg aam test adc insb pop mov test loop inc in add mov cmpsl inc add jae cmp orl cmp jnp add cld or fimull sbb fcomps test push and cmp mov mov xor or mov mov push mov jle sti add popf js add and xor and orl mov (bad) scas mov call add addr16 push pop inc adcb test adc xchg out xchg mov cwtl fstpt lea daa mov decl adc cli or adc movb inc or mov or jne shl insb sub push adcb push mov ljmp sbb orb mov je mov sti loopne test jmp in push xchg sub mov dec das cld call cmp jne call xor mull call xor mov mov lods fneni(8087 sbb xor or outsb loop lods mov fidivl cld jl jmp inc addr16 cmp xor cmpb aad call xchg lret cmp add mov pushfw ljmp lock pop mov adc (bad) jb clc cmp push js add push imul mov jmp pop inc (bad) jbe orl pop xchg (bad) xor jno lock call adc add xor mulb or out sahf pop in fs jecxz sub cmpsl divl or push lea test pop add sbb push mov mov clc add sbb cli push mov lret push mov call sbb mov lret mov xchg mov dec pop (bad) (bad) xor leave add inc sub push mov adc inc loop or add jnp out sub mov movsb orb pop fwait sbb inc add inc pop xchg and ret jae call mov or test movb fadds pushf and icebp or loopne xchg pop xor push fwait dec cli add sbb cld les jno in das out pop add jno jno loope cmp cmc cmp push add push test pop push sub inc fsts or pusha iret daa jl push jo cs jno sbb cwtl cmp inc (bad) pop dec jl inc sbb nop pop and inc and jmp cmp and jo jo jle nop cmp cmp je pop jo out leave sbb pusha jno rcll xor and iret push mov push ja sbb sub pop add flds and aam cmp cwtl inc jo mov jmp lea push mov ret or push (bad) or cmc repz dec and sbb fwait les dec mov in xchg sbb outsl outsl push outsl cmpsl sub lock ja push mov xchg jge add insl pop sbb ljmp dec or roll xor push loope cmp and daa xor jne ret xchg jne push inc int pop xchg or cmc jmp (bad) or xchg and pop fadds jmp call outsb mov pop inc or daa and aaa fdivp dec ret add pushf movsb push sbb push orl cld and push adcb jae aas push cli sub ficom adc mov test insl xchg popa inc (bad) out or out pop inc negl iret add outsb fwait adc subb push inc pop and push sub mov out test sbb repz xchg pop in xchg inc or call jmp sub xor stos sub lock scas or push rcrb (bad) mov or push push pusha stos and jnp push call and mov lret cmp jge popf cmp in add mov lock lahf loope dec call test cltd add out adc sahf pushf pushf movsb sub out jmp push out push les mov gs adc and je push xchg orl push ljmp insb dec lret fcoms sub push les aaa cltd push inc dec loope adc inc int sub inc jmp clc dec loop pop in fild jecxz shrb add mov adc adc or test push adc out (bad) aas pusha jmp shl lock call jo inc add sub xchg movsb cld in (bad) aas imul out mov adc pop enter adc adcb in ds xchg push push imul flds inc cld sub pop or sub and jne and jno pop jmp out in std notb jo,pn mov mov add test inc mov nop jns orl ss or mov out jno add rorl xchg or and dec fsubr mov inc (bad) adc push mov in push push push push ljmp mov adc clc inc ss jle insl mov xchg je jne push fucomp add repz adc repz ss inc sbb rcrb adc and add xchg add jne daa pop mov or inc pusha out test fdivrs push push add fs daa dec xchg mov fsubl sub and xchg inc push andl loopne sbb std ret xor call mov xor cmp mov aam fucom lock iret fbld std fstpl xlat fwait js inc inc cmp push pushf cmp mov adc sub data16 loopne aaa inc lods adc push lret sub imul push jmp mov adc jmp push aam or add mov stos (bad) popl jbe or xor pusha popf sbb jmp mov gs in hlt pop cltd add push sbb aas add je call in enter or push call xlat aam and jbe mov subb rolb lcall pop test push lea pushf add hlt (bad) pusha or mov sbb mov ljmp shrb lods je sahf push adc jo jmp dec mov dec int fimul xor test xchg jl cmp enter cmp mov push (bad) inc and add xchg outsb push outsb sbb sub loopne mov inc mov sbb pop mov inc push add enter ret push pop popa fistpl out insl dec (bad) test cmp loopne (bad) faddp or sarl aam loopne jecxz rclb int imul test and aam sub dec sub sbb mov push pop aam jo xchg adc lock pop add addb adc pop push and jne pop jmp jno dec add add jp inc dec out jbe cmp pop (bad) fcoml ret pop jmp jmp pusha xor cmp inc adc xchg and nop adc and mov jbe lods ljmp sbb ja add push sbb xor sbb (bad) and add repz xor mov loop xlat movb jns sbb in xchg in mov mov sub sbb mov ret sub lahf int3 sar mov mov ja xor rcrb add mov loopne sti inc adc loopne jne jnp jge orl test call fs orw dec push xor daa or sbb jae fbstp cmpw int rorb sbb ja clc int3 mov into dec inc sub in rolb repnz inc fsubr mov ficompl xor addb lds cmp sbb std mov xchg xorb xchg mov je lock inc popf aaa inc xchg mov fwait ss jecxz sbb data16 adc dec push cmp sbb cmc mov (bad) shlb add and xor clc ljmp cmp outsl add clc sub adc iret fdiv hlt lahf in cmp (bad) iret push inc (bad) jmp dec or push dec ret pop push shll fmuls sahf aam pushf je push push popf cmp pop and fxtract je in ret add add shl add icebp dec out add xor lods je sbbl test call movsb out aas ret add repnz aas adc inc fimul sbb sbb cmpsb lods or push sub bndldx jge mov add cmp ss in xor pushl call cmp mov jo adcb pusha xchg push ss push mov lcall pop mov cmp lea movsb adc cmp or mov pop dec (bad) sbb push pop sub pop je jb fwait dec xor cmp pop mov xchg pop push sub cmpsb mov sbb shll enter ljmp loop fisubr cld call cmp out fiadd imul cmp dec or (bad) adc jo ret adc cmp into mul call cmp or test rcrb mov mov push pop jmp pushf adcl add inc mov sahf cmp mov es test es or ss dec sub xor repnz inc adc enter mov fwait cmp arpl (bad) mov inc imul sahf vmwrite cmc inc push rcr fs cmp sbb push push push push push xor xchg in xchg jge ja pop cmp in call jecxz or insl in and mov lret sarb mov fnstcw iret push xor es into jne sahf sub pusha jmp and cltd cmp (bad) jmp popf add mov sbb pop jmp adcb ficompl sub (bad) jb cmp jno xchg adc rorb xchg or pushf or or cmp add lret add add jmp pop sbb ds test cmp jnp cmp and ret jbe sbb cmp add push test pop pop pop loope sbb pop ror mov mov pop lret push lcall sbb jo fmul ja mov sbb les div pop out pop sub add sub mov aad ljmp mov cmp out int xor mov dec pop inc sub rcll adc xor stc push mov add sbb mov and jns call mov mov inc inc mov add lret arpl mov int lods push or dec ja jge mov stc push push sub cmpps push jl mov add enter sub mov or enter cmp xchg adc call inc outsl pop mov movsb add cs rcll and sub or dec or (bad) and (bad) xchg fwait js sar dec je mov mov stos bndldx into mov push roll in sahf or loopne aas sub inc mov inc add sub add dec xchg out jbe add add (bad) gs push lods and mov inc leave adcl daa jne push jl lea test pop je push cmpsb pop (bad) lcall lock lea adcb clc stos jl lcall adc push push std stos cmp inc dec sub out jmp nop pop mov or fisubrl mov and ret push pop jbe gs mov dec mov cli mov inc inc push mov xor jnp sbb mov cmpsb insl pop adc mov test or (bad) sub in outsb sbb roll cmp jne and pop stos (bad) aad inc push in outsl mov jo cltd push adc lods mov and loop in mov dec mov repz sarb sub push lahf outsb andl push cmp dec scas shll stos inc cmc lret push jmp dec and mov lcall adc or inc cmp xchg test pop dec repz add fimul jo inc daa shr cmpb std sbb mov lea inc or (bad) sub jle fisttp push call dec mov jmp roll cmp cld notb pusha sbb fidiv andb fstpt test xchg mov sti push lds push pop jne fs dec cmp or xor or and add push fnstsw inc add or (bad) mov ret cltd push jl pop and push fsubr push inc pop dec and push mov jne sti testb fmuls or mov jmp add fs xlat je jo lods add mov jb pop movsl (bad) jae cmpsb push hlt jb ja lret dec jecxz and sub adc mov ja pop call mov fmull sbb (bad) xor pushf adc cwtl inc clc xchg js stos mov or imul test sub mov pop sub mov add mov jne test push fs or data16 ja jb sti mov pusha push adc ds jb ja cmp mov pushl call incb add sub sub push sub popa stos scas sbb pop xor xor xchg out or aam (bad) mov sbb inc sbb mov cltd mov add sahf jo inc or push xor lcall es sub jle data16 adc and out pop adc sbb sbb dec and jns addl int cwtl xchg jno jne cwtl insb push push xchg push loop jne jbe iret inc or or jo jb add and cwtl jge jp inc mulb into inc loopne pop dec in jb jnp sbb sbb bound dec stos push jge xor clc mov inc add mov inc xchg mov ljmp sub insb sub stos or sub xor and mov mov and adc sub jnp repz in popa and xor sbb data16 push push push sub jne icebp cmp push bound sub test dec cmp dec aaa cld inc pop sub (bad) or or inc cld cld popa jb jp jo sub inc sub orl pop pop repnz cmp test lock adc pop popf dec push xor jns aam mov push ret push cmpsl cli pusha mov dec dec inc adc inc cmp in xchg sub clc cld jns fs repnz clc cld rcll cs cld clc cld jecxz rcll aaa clc faddl add jge cltd mov xchg or lcall jecxz add mov mov pop xchg mov sub test in pop or (bad) jbe loope xor or in mov addr16 mov pop mov clc loopne jmp add fcmovnb xor out push sahf out leave jmp mov push or cmp xor sbb inc xor mov icebp xchg fmul pop xor xor add cmp ret aam inc fadds stc aad loop mov push stos call or fnstenv or push and fidivr lock lea sbb lcall aas mov jmp repnz loopne or push cld xor add jecxz jmp fsubs andb mov faddl adc clc pop mov or dec imul addl adc or mov sbb add xor (bad) call push lcall jae xor popa xor inc cmp adc leave cmp jl sub leave sti cmp sbb xchg lret enter aad ljmp (bad) pop mov lret leave lret adc nop fldt enter andl pop sbb ror loopne or inc (bad) js pop push js jecxz mov mov shufps stos or (bad) idivb int3 inc inc test add cmp jl dec sbb mov loope ret ret cmp fisub roll insl sar lret dec lea mov inc add lock es ficom sahf sub popa dec stc push xchg (bad) mov pop test xor xor daa cwtl ret pop out test ljmp hlt mov call add mov cmpsl xchg push or mov xor jmp arpl add sbb cs inc lret mov hlt sahf sub xchg out (bad) mov scas inc popf xor jecxz add pushf pop mov and mov test inc aad jbe and adc mov sub aas adc jnp pop cmp sbb ss mov enter stos (bad) ret mov adc int3 add scas push rolb arpl cmp cmc inc pop icebp mov jl xor mov push mov sarl stos js fwait xor pop jb cmp je insb jmp (bad) xchg adc call jb clc (bad) mov addl rorb inc sbb lds aad ret pop mov jmp inc jmp xchg and rol loopne fcompl and leave ljmp adc mov ret je es je jo hlt mov test je (bad) fldl add popa jo jb call sub cmp stos (bad) out jmp out daa cmpsb aaa pop ffreep inc pop loope fisubr dec mov andb and mov jp adc adc adc (bad) cmp push inc pop adc cmc add dec out sub cmp sub fnsave outsb jl inc sbb push jne or add mov and push adc cmp sbb mov roll lods adc cli inc xorb or xor leave sbb fucomp add ror mov fbstp pop pop mov jb test dec or jge nop pop scas mov icebp das cmp test mov test orb and clc dec jmp pop jne adc or pushf cmp or clc cmpsb or jbe call adc sub fsubs mov scas cmp add popa jmp or loop sub mov dec arpl pop sub xchg add iret (bad) incl mov cmpsl in (bad) (bad) jl lcall push sbb dec or pop rolb push lret cmp rcr pop into or xchg xor aam and iret adc sub outsl and js adc lret int scas clc jl in inc ds xor inc or scas fistpll shr cmpsb sbb mov les add xorl shlb and jle pusha dec cmpb or xchg mov jge das insl inc pop movb mov in cmpsl inc push (bad) mov mov xor or aas lret stc mov lea mov push add push sub cmp xor or add push or inc pop test popa add mov dec push int3 call ljmp adc call adcl mov xor jo stc outsb sub out xor jecxz add dec pushf pushf int3 (bad) out arpl repnz mov add mov scas add jne fmuls jne push out inc mov inc xor mov pop je xor sbb dec dec pop push mov push (bad) dec push rolb sub mov pushf jecxz push clc dec dec js scas lahf sbb in jmp dec dec dec push inc push test inc jne inc push sbb adc push push idiv sbb cmpsb or aaa mov jecxz push mov or sbb jg sarl adc xor xchg xor call dec mov add add sub xchg les mov lods xorl xchg dec arpl sub jbe and repnz add in nop xchg adc sub pop adc jle push push aaa inc or lods ret add inc mov inc mov int dec xor out push (bad) xor mov push pop lcall adc aam push adc jne call adc push sar add cld movsl pushl pop popa jle jo pop dec push dec rcrl pushf bound jmp cmpsb mov dec adc mov jl rorl inc notb jl andl loop jb negb lcall lock adc popa lret pop enter pop add and in cmp insl sub std add add dec or in sub push dec movb mov jle mov fs push push sbb mov popf dec xor mov fcoml xor xchg and sub idiv mov push incl push jbe adc sbb mov mov mov push xor test (bad) or decl xor mov out ja cmp mov cmp adc das lock adc push or jo cli add push push repnz add loop pop xchg out movsb or add lret xor daa ret or or lcall jle fnstcw (bad) or jb or jb mov jae fwait pop pop push jb mov sbb fwait out add pop inc sub jb mov fwait xchg mov mov pop jb xor fidiv sbb jmp or mov rcrl add pop mov mov jl jo call xchg bound or dec push dec lea ret scas cmp mov and or or or ja xchg lock ljmp loopne jle (bad) lods stos push inc add adcl and mov inc push pop add and (bad) (bad) jbe or mov call addr16 jmp call call fcmovnu dec in mov sub sbbb push jns push pop sbb sti (bad) imul or fcoml orb adc (bad) insl inc pop xchg mov popa inc clc mov mov pusha adc mov inc add xchg adc nop add xor and dec (bad) repnz inc add leave xor mov pop cmp aas dec adc xchg add mov adc inc xchg sub movsl jb sbb call lods or call call xchg aas loop mov rcl cltd and inc test (bad) mov mov repz imul aaa leave cmp sahf adc pushf dec icebp and ljmp (bad) fsubl mov and sub jge test lock mov (bad) mov mov ljmp xor xor std pop repnz pop jbe arpl push cmpl push and in std in push inc call pop mov inc (bad) push pop pop std cli in mov add das pop sbb rcrl push mov (bad) aas sub sar testl out nop insb sahf lret adc popa mov cmp in mov leave stos js cmp pop cmp xchg xchg pushf (bad) stc jmp stc (bad) das (bad) push pushf jns fucomp imul mov adc test inc push jp jbe push pop pop ret insb xchg rolb mov cmp or mov or les or mov sbb mov ret cmp inc inc cmp push add add lods std js cmp leave add cmp out test enter mov std jle xchg jl in std fdivr stc lahf pushl mov add je cmp enter ret (bad) or (bad) mull gs fbstp imul dec mov (bad) and loop mov mov and sub sbb clc vmread and pop pop imul xor popa sbb add cmc sbb mov dec xor add pop repnz cmp push and and stc mul mul nop inc enter mov xchg xlat pop popf pop jns enter mov aaa repnz xchg add repnz (bad) ror hlt sub decl mov adc xchg cltd nop pushf mov lcall nop lret and adc loopne repz repz enter pop mov mov and jb mov js pop add aad adc xor push cmp push pop sbb add addl or loop push mov push dec je mov js addb (bad) aam xor test (bad) rorb push jo movsb dec mov rorb jle in ret inc add shrl mov mov sub lods rclb xor fucomip mov daa xchg mov sbb pop test mov push loope dec adc sbb call cmp jns pop in (bad) aas mov cwtl jne sbb test and popf out dec fidivrl mov jo mov into ret jo xor xchg lcall rcrl clc inc out icebp (bad) lea push sub and arpl andl lods dec bound push test jb lret xor mov aam stos xor push fmuls pushf popa or jg cmp es ret jne xor jmp mov mov ret inc out movsb enter leave mov sub jp or lcall add jg cmp ret inc mov add icebp in inc in out je dec push ret jmp or xor mov cli mov fcoml dec xlat cmp divl shr je int test (bad) jmp mov repnz popf xor aad mov gs or test pop xor pop dec movsb dec xor xor jo in pop dec (bad) jne adc pusha imul mov or imul sbb xor add popf and add aas mov or or push push sub ret pusha and adc aas jecxz or mov ret insl dec add aad jmp lock pop push js cmp jns and xor fimul popa (bad) pop call loope xor or sbb or and cs adc fidivrl inc cmp jno or and pop rclb jecxz xor rol jmp xchg dec jle call add fnsave jno jmp mov push adc prefetchwt1 insb lahf lock mov icebp mov mov inc sub mov mov pop dec test inc cmp xchg xchg mov mov or xor rcll imul cmpb adc push mov cmp dec add pop das add cmp notb test mov arpl inc pusha loopne not push xor cwtl lods push fiaddl or call and cmova dec dec (bad) mov cmp and leave in cs sub inc xlat push test inc mov pop adc pop dec fwait push pop or dec and push mov push add movsl sbb in adc mov call in adc clc push add shlb movsb jge cmp jne mov lret mov (bad) icebp xlat mov dec cmp call loopne test imull push shrl adc xchg es pushf and mov sub insl push xchg mov cmpsl outsb and cmp (bad) in loopne push das dec push and push inc inc and mov loop icebp adc dec movsl add dec mov push jl xchg cmp adc pop aad ret aam aam cmc pusha jmp inc jbe sbb sbb out jb (bad) fs arpl and push adc fwait pushf pushf je and sbb call cmp shrl add adc je or cmp push cwtl pop and test xor sbb xor or dec and mov push inc push push pushl clc add js mov rorb push mov push imul add adc dec push loopne pop rcrb dec or or adc push mov stos sbb sub fsubrs notl iret lds ret in movsb pop adc hlt add repz idiv outsl inc jo dec lea mov xor cmp je cmp (bad) data16 or pop and cmp je inc jge imul sbb sub cmp inc pop add sub sub add pop add jns inc or movsb mul and and inc movsl outsl or ljmp stos inc inc xor dec loop mov test jae mov mov or xor ret inc mov adc adc sbb and ja out shll imul fisubl test adc and pusha mov lahf nop pop and aaa dec movsb pop push int hlt mov or stos jne movsl push loop xchg (bad) jbe or xor dec dec and mov lcall mov aad jns cvtdq2ps das hlt push push aad call call push sub dec cmc in xchg dec mov stos leave and mov enter daa movsl daa nop arpl adc js nop aaa loope jnp rcrb repz add adc inc test inc jns das (bad) lahf or cmpsl and hlt cmp or es es test add scas fsubs dec inc sub mov enter imul xchg inc enter cmc cmp movsl and mov pop cwtl fs enter aam pushf aas and push jb sbb and leave data16 pop or xor jns std int3 std movsb roll fwait (bad) std gs jp sbb pop cwtl fwait cmp std xor lret fwait repz xchg add dec pop and pop das loopne cmp add adc push inc cmp adc fdivrs sbb pusha push sub out pop loop ds pop imul and addr16 enter int3 std mov sbb insl ds loope xor daa in test and xchg call popa jne push in push mov push inc and and push ror pop dec adc stc movsl dec xor adc and xor xor adc and stc add add push pop pop inc sbb mov add out sub scas and outsb outsb cmpsl popf sarb xor mov add je push cs mov mov pop (bad) or cs adc push xchg insl push dec andb cwtl ja scas daa push jmp cltd mov pop sbb adc jno and in std xor decl in push ds adc jmp pop movsl add sbb mov in movsb mov test xchg cs adc or enter in mov mov aad add in stc inc cmp xchg or pop adc fs mov enter add lods or mov inc leave lret jg jmp inc fnstcw cmp add insl jb cmpsb and pop pop lea adc dec mov push mov xlat adc das push push sub add xor insb push sub push fstl cmp adc fs mov jl mov add push push and adc mov sbb lahf xorb out push and inc push mov sarb jne jmp ljmp into mov sbb sbb hlt bound mov js (bad) fmuls push mov jg and push divl xor push loop (bad) decl mov push rclb leave popl push push push in pop rcr or mov fadds ljmp xor lea mov mov dec pop dec rorl push mov xor notl lcall xchg xchg pusha call jne cmp mov je fnsave sbb add cwtl add lods mov adc daa xchg dec enter lods test and je rcll push mov (bad) or insl pop call pop jb call jns inc ss sbb into scas xor pop leave inc loope add add out cld add stos mov sbb leave and push sbb out mov in sbb orb pusha addr16 imul clc jb jg cs push mov or and sbb add sbb inc enter add (bad) cmpl shll out cwtl cmpsb dec dec sbb push test sbb sub sub pop push test cwtl dec mov mov dec movsl test sbb cmp or lds lds (bad) cltd sbb xchg outsb jl mov adc mov xchg ss and jns mov fistl insb and in pop mov sbb test dec push cmpl hlt lahf jl clc dec add push test mov push int3 push sbb nop lods jge and jb sub dec push add stos xchg or mov cmp cwtl aaa mov sub sub int3 cmc mov add and les xor es gs ss test jb or arpl push sbb clc (bad) (bad) adc mov or inc daa test cs mov add jge sub fnstcw imul xchg fnstenv mov outsb adc leave or nop mov mov leave xchg and add add jno call fwait nop jmp push aam mov sti insb adc dec cmc test test mov sahf pop jmp aas adc sub and outsb leave in and fcmove xor cmpsl inc mov add sbb jno sahf mov mov sub xchg push cmp nop xchg in pop call out cmp stos xor sbbb or and out in leave sub arpl leave and in fst loope test and adc push movb push popf adc push inc push pop gs xchg jb cmp xchg jmp add jle push ficomp (bad) std fs ret push push mov rorl add in (bad) jbe dec pop jecxz xor test aaa mov dec push push add insb ret cmp and (bad) loopne dec repnz xchg sub enter or imul push pop inc rcll sbb dec cmpsb pusha in jne testb pusha and testb fistpl or test sbb add lret add mov andl call mov jo jmp push add inc add jb in push dec add shll add aad fs cmp add movsl mov and push pop or mov scas xchg fs popf push ds add or stos jo movsl daa sbb xchg fbstp pop mov mov jne jecxz in or cs call cmp cmp jb push push mov cmp pop jb xchg (bad) mov lahf jo mov xlat push sahf sub jge outsl jbe inc dec inc cmp mov pusha add jmp ret push add (bad) (bad) jl add dec ljmp popf add lret loopne fcoml push and adc sub int je mov or pop cmpl push rclb or push rcl dec xor sub sbb cmp push and mov out repnz fadds rorb push outsb inc movsb push or ja sub push sub scas cmp xchg sbb repz xor cmpl pop fadds add or js sub test jle push or mov push lret fidivl callw push movsl cmp pop mov sti jnp dec call rcll (bad) and adc and es or pop adc stos es and adc test dec cmpsl push push pop sbb je dec aas xchg cmp callw jmp int movsl mov pop inc pop pop fdivrs lods dec adc insl cmp cld and push nop sahf xchg fld movsb cmpsb test inc and mov ficom jle test push add inc shr add mov stc inc mov mov (bad) cmpsb cmpsl int pop and dec add add sub and adc jmp lods in out out mov adc sub fisttpl push fdivp and adc rcr adc and xchg or adc stos call scas inc adc ljmp or mov aas pop es xor not or mov cmp jg lea push push insb sbb inc outsl add adc push movl aad pop sbb xchg dec adc call ret setbe test cmp pop xchg or les in into test dec rcrb mov rorb inc daa (bad) jne add mov xchg inc cltd mov sub mov test push nop cmpsb cli and mov mov cld adc in dec cmpsb popf aas sub adc inc add push sub js scas ret andb jae ret sar xor and enter push rcll mov sbb add dec inc call movsb xchg xchg cmp adc lahf pop dec call cmpsb fstpl cwtl jae jge pop add xchg push outsb aas rcrb sahf jmp call xchg sbb cmp cli pop xchg adc pop inc sub testl push out clc push call mov or sbb inc jmp mov cmp or out mov rcll sbbl fisubr mov cmp cmp jnp arpl fwait cmc or cmp jne insb add mov jl call nop sti add bound int3 push and add add (bad) clc enter ror cld jle insl mov xor xor cmc or push movsl mov add popa imull cmp fucomip push call and dec ficoml test add push call pop inc sub stc and inc adc call dec pusha std call cmp mov (bad) repnz js and cld jnp push jne push jmp and test popa sbb ret fsubs hlt gs xlat inc cmp or addl movsb repz dec add inc rolb sbb rcl or cmpsb leave push fsts xlat pop add flds imul call pop lret adc inc in ret jae push cmp jl push jg mov jne adcl stc hlt mov lret out mov jle pop lock leave fisttpl pop push into fwait add lods je (bad) jb pop xor mov mov loop ss sbb inc lds sbb mov in adc and mov xchg xchg jns loop push test add jo subl sbb mov push adc adcb cmpsb pop test push fwait pop movsl enter out add push js fsubrl jnp iret push sub cwtl adc inc inc add mulb into adc inc sahf push in hlt mov jae dec loopne rclb push mov not popl or or adc icebp inc adc outsl sub lods adc sub sbb (bad) jge or cmc int3 (bad) xor add or push push sarb mov inc xchg in mov jo ja clc add dec or das sbb fisub lcall iret shlb or cmpb mov call mov das inc hlt adc push add push push or inc fbstp into (bad) jo js dec and push adc shrb push xchg outsl daa mov push ja lods xchg ss mov jmp stos inc sarl push subl jbe sub daa push or js,pt into and pop sbb fstl inc sar pop das adc mov cmp mov aas and call enter mov mov lret stos je mov iret lret pusha mov mov sbb jne push push sbb jmp inc or out dec (bad) xor push cmp inc xor xor sbb and and cmpl sub mov or imul push lea call lahf pusha adc mov xchg ds xchg sarl and rolb jmp lds add pop mov push aas xchg divl call mov mov mov and insl popf (bad) mov sbb jmp sbb push pop push imul ljmp imul xor push adc adc add mov lret lret pop pop xchg or push xor mov dec fwait xor and fldcw xorb adc inc add xchg push test fs push int mov add add push xor roll lea shlb fidivl fs stc jne sbb mov repnz add outsb adcb ret cld push test jo push gs push arpl xchg adc movsl cmc out pop mov mov rcll loopne ljmp pushf mov rolb mov or fmuls add scas sbb cmpsb jge call lock add add fild lds adc nop jo daa push pop fwait add mov add je popa jb sub fmuls inc sub mov lds add pop movsb sbb mov repz dec divps jl adc mov and loop push adc jne jge and insl leave pop inc (bad) popa dec adc add or loope push popa (bad) je cld sbb imul add xchg mov cmpsb in pop enter push shl jl aam call cld inc dec push adc imul mov cmp jno int3 lods popa xchg jge (bad) xchg inc mov fwait mov js cmp ja lock test adc cmp fbstp outsl mov xor mov mov mov sbb cmp sbb pop test sub cmc testl cmp in and pop test mull sub mov je roll test pop leave mov mov imul sub loope in mov pop (bad) xchg inc xchg test cmpsl sub inc jbe push test push xor aam rorb xchg sbb repz jo in adc push xchg cltd int3 mov aam test push jge call sub mov add add push call inc movsl mov pop fcoms and insl dec sub inc pop ja push lret xor push arpl sbb sarb xchg adcb mov xchg or jle sarb popa in (bad) incb testb and push push add add jb sub ds (bad) (bad) clc lock mov lcall aas or clc or or pop bound sarl je ss (bad) lcall cs addl jmp lret mov stc inc fsubr sti ljmp stc sbb jns mov and jmp push xchg jg xor xchg adc test inc adc jecxz jae push fcmovne dec mov mov clc push push lock sbb and sub es mov inc mov loope js fidiv mov xor (bad) fild add lea adc (bad) jmp mov mov push push mov mov cld inc dec push jns lret sbb sub sti push popa xlat outsb push add imul hlt jbe hlt dec pop push sbb in repz stos cmp in add sarl aad dec push sub cmp sarl fsubs je pop lcall lock inc mov cmpb ret add push inc xor orl clc les push pop lcall jne popf adc add clc xchg inc call mov sub or jp or push lods int adc incl icebp pop jmp jle add push call test sti or pop daa pop sbb xlat pop add pop add out ds lock (bad) out or xchg jl mov cld xor mov sbb jmp je lds lret inc adc (bad) mov out mov hlt xor pop movsb push xchg fdivrl mov add es fild pop mov js and xor jl or add add mov mov or push and mov (bad) icebp insl add jne je outsl cmpsl sbbb mov shlb mov and jle test cli inc jg imull pop adcl lea add add addr16 or xchg ja adc ss cmpsl xor repz jmp dec pop mov (bad) lods jne jle mov sarl aaa xchg ljmp inc or pusha mov test and jmp fnstcw rcrb jge dec aam mov mov mov cli jmp and and sarb cli out sbb mov pop nop dec mov outsl and nop test and in adc hlt and or jbe xor adc xor adc add (bad) cmp fcmovb ljmp sub xor push pop mov jb push in or stc add int or mov add ds inc jmp sbb (bad) adc pushf or pop nop ret popa insl jmp mov ret and xor ret sub push sbb outsb arpl cmp sbb xchg jbe popa push cmp out por divb xor sub inc je enter fidivrl inc xchg xchg adc (bad) or mov sbbb sub cmp adc cmp inc pop pushf cmp dec sarb lcall add mov leave ret mov (bad) pusha or out or adc cmp jae xchg das (bad) and test mov or (bad) dec bound jns in test and xor movsl jmp repz cmp out sti js iret pop dec rolb gs add pop movsb arpl inc cmp rclb jno cmpsl addl cld out xchg dec pop jecxz xor iret repz sbbl sub mov rcrb and rol xor lock inc dec movl and sbb push push call pop jmp and cmp sub inc cmp pop es jbe inc loope insb inc sub and pop inc fisubr mov fmull xorl dec or sub lods test add adc add mov push pop shl sar xor push cwtl rdtsc or jo negb sub (bad) sbb or and or leave mov xor or adc outsb scas mov and test cmp iret lds push fcmovnb loope stc sbb mov in jns or movups xor pop jg (bad) icebp cmp mov test sbb push mov and (bad) jb pop or xchg (bad) lea xor cwtl xchg rolb test scas imul outsb ret (bad) mov jp mov loopne sbb dec jns mov and dec sbb fcmovnb sbb xchg loopne and and rol fistpl decb push in add dec rclb std rorb mov fmull push and or sbb ret out imul mov xor mov xor pop je add inc cld add xchg lods push out add add sahf cmc dec ss mov jle mov and stc xor or fs sbb xor and cmp lret xor arpl nop cmp mov add sub adc add add or mov ficoml sar push aam outsl in sub cltd sub jne loope or or sub ficoml clc sbb mov rorl push jnp inc call out pop call and push xor add iret sub xchg dec sub rcll xlat (bad) and push dec test es mov xchg ficom in js insl pop mov decl push add clc pop xor (bad) stc cmpsl dec jb in insb pop pusha sub push call push js mov push mov xchg jp sub (bad) and das hlt xchg mov (bad) xlat inc and push jne ret loopne out or cmc sti mov add bswap dec pop jmp mov inc pop xchg mov sbb mov rorl push jb cmp mov jae lock mov xor push mov ret adc in sbb in dec lds lods xchg js cli xchg jmp inc push test jp mov jecxz dec enter fs pop mov pusha jecxz or xor sbb ret cmp es das frstor sub scas test call movsl je pop jg inc roll mov push or outsb cli jecxz mov or push mov xchg xchg mov xchg fwait dec mov push shll inc or test and scas mov mov (bad) lods nop mov mov jle push cmp and and adc les push call inc stos fdivrs jb les cmp add inc je sub push push (bad) stc mov dec xchg cmc je push mov fstpl or inc and mov loope rolb pusha popf adc je shr shrb cli enter inc cmp syscall xor mov add call add into mov sbb std cltd cmp pop outsb jg or or das cmc pop dec (bad) fcmovbe imul sahf out jne iret adc call popa aad das imul sub js adc ljmp and xchg add das rcrb (bad) je ss and adc cmp jno (bad) pop mov or mov cmpb dec bound mov faddl add mov int3 repnz je loopne ret cmp pop cmpsl add xlat push cmp clc dec inc xchg inc mov push cwtl shrl mov push movsb jno fcmovbe dec mov cmp mov add movsl sub (bad) xor inc rolb xor add push shr or (bad) outsl test andb pop (bad) loop push sub dec dec pop inc loopne push dec je adc test inc add shlb sbb je lret pop hlt mov dec aad xchg xor jl add pop mov mov repnz adc sub inc pop loopne stos dec and scas dec push mov ret mov cmp jne rcrb sbb (bad) push xor mov mov loope xchg adcl (bad) sbb inc mov cli pop je add int out popa jl jp daa inc pop jle xor aas fwait sub jle xorb or add lds xor mov lock test orb dec xor jp aam mov pop fimul and and and int3 jmp or cmp inc sbb fbld jmp pop addr16 xchg jo hlt (bad) fild jle clc add or stc add adc inc imul mov test test sbb sub push inc pushf fldenv or push push and mov mov fisttp stc mov mov add jg or pop mov and ficoml sar add fadd or or test call add push mov test sbb fsubrl jecxz pop je dec pop and inc lock push call add mov add (bad) loopne jae jb mov mov stc sahf insb mov cld call in (bad) add mov inc or test call call test cli lcall add or mov fmulp orb xchg pop sub adc inc cmpb inc push pop mov mov call xchg popf cld insl out dec add gs jp or shr push inc mov or cs push std dec add add es jmp push aad xor push push mov cmp (bad) aam mov (bad) (bad) pop push pushl hlt xor sahf sbb add call aaa (bad) pop int3 inc xor roll inc jbe adc fstpt pop loopne hlt sbb pop jb push xchg push xor call sub ret (bad) not andb sub xchg cs (bad) aam ret push and jge (bad) mov in test test mov push imul pop xchg clc sub push mov fsubrs pop pop mov hlt lret inc pop pop inc inc incb or cld cmc push jns iret fstl adc sub pop push add add aas inc xlat mov mov xor sub sbb jbe ret jne inc mov nop mov (bad) movsl lea pop mov adc xchg imul jle jmp push imul and inc loop jno jmp mov adc push cmpsb lods aaa call add cmp or aam adc loopne iret (bad) adc jle imul sbb inc loopne adc (bad) cld dec mov cmp or inc pop pushf adc inc ret arpl dec lods cs cmpsl rcrl (bad) xchg idiv xor and xor adc icebp jne jmp sub xchg arpl and bound add inc mov xchg int3 cmpsb nop dec jle es sbb add jecxz pushf mov jne lock ja stos rolb leave xchg mov add inc adc push inc cmp push push das rcl (bad) ds jne jp (bad) inc mov xor les mov lods cltd inc cmp pop push cmpsb or les cli mov hlt dec in lcall lock out xor pop data16 test inc cmp dec adc outsl aam inc push je (bad) faddp adc xorl add mov es cmp or or (bad) xchg xor jmp daa mov insb jmp push push push je sbb sub pop jge ror and push pop pop xlat test iret aad (bad) adc ja imul mov sar rcl pop add fs fdivr mov adc or push je adc jo cmp call int cmp add push xor push std mov out repnz push add cmpsl out and iret dec daa cmp ret cwtl cmp mov fdivr pop je pop test jne sbb add scas cmp loopne rorb int3 and mov inc add push std orl jns or rcrl stos or pop mov negl mov lods and inc fdivrs sbb jp xor mov sub pop cmp mov cmp sbb push cmc and (bad) or pop inc adc add or sub sub mov xchg xor sbb pop call inc inc pop jecxz mov loope movsb shlb add out jo xor adc (bad) stc movsb ja,pn xchg ss push test jnp test fsubrs push adc xchg fiadd pushf cmc rolb mov stos cmp jo ret mov in imul push andb cmp into orl popa adc ret sbb xor xor sub hlt andb sahf mov mov pop fadds dec push not sar push das cmp call sbb jecxz fchs lds stos push adc ret jo mov pusha xchg loop add enter mov sub adc pop outsl mov pop popf sbb leave xchg js mull xchg fninit fwait pop out add (bad) xor mov jmp jmp cmp jp mov xchg sbb leave jp jl sti ret mov add movsl cmp pop mov call sbb xor lret xchg out jne push mov pop test cmp xor das jmp jno adc and fldenv insb dec stc in adcb adc imul nop cmc scas loopne and pop mov test mov shlb enter push fiaddl out ret inc mov mov add pop push sbb pop loopne (bad) fsubr add lods or dec xlat div or cmp das cmp in jne rcrl sub add popf jge rclb (bad) push inc mov lea in add xor cmp in and pop and out adc add dec dec or test cltd hlt adc (bad) (bad) lods push nop cmc jmp mov mov mov push and std cmp and (bad) jbe lcall into adc mov std (bad) or jmp std cs rcll gs mov movsb call xor xor divl inc test xlat hlt cli dec mov lock divl ss loop xchg pop or std shrl jmp dec adc leave xchg xchg push add add ss insb inc pop sub std pushf cs push call in (bad) cmp push cmp popf push lcall push mov test sahf cmc std scas sbb in jmp push cmp fld cltd imul divb int lret out out (bad) dec jl or sbb fwait in sbb es aas push sbb adc mov inc je dec je add sbb dec push aam cmp inc lcall and in (bad) ret aad dec leave sbb negb sub inc sbb pushf sub jp test sbb pop (bad) mov cmpsl xchg enter gs cmpsb xor pop mov sbb test fistp jmp push push jmp cmp fldcw or lahf jecxz inc jl dec js pop jne inc addl jle add daa sub sbb dec outsl xchg das cmc sbbl push dec mov rorb arpl and push jl xchg negb or in adc cmp shr add subb xor lret iret cmp loope ret add inc sub call lret iret andl dec mov clc hlt call inc scas bound mov popa sub jmp inc add imul notb sub ljmp jg jne xchg enter flds call fsts pop repz es test push push xchg xchg mov mov and leave mov adc insb les push in sbb cltd push jns fildll push cltd in mov inc ds adc mov loopne (bad) push jae mov sbb rorb pop pushf call or loop push insb mov adc hlt push inc mov lcall repz xchg xor popf pop (bad) pop xor or pop add add dec int3 xor pusha movups jle cmp nop je inc imul xor mov adc dec xstore-rng cmpsl (bad) imul scas sbb lock adc inc daa addl cmpsl mov fucomip data16 mov cmp mov js aaa fcompl xor jecxz lods call jle repz jne push push call jmp stos gs pop lds mov js je repnz jmp in imul cs sbb pop xchg or stc push movsl add jl jg je test xor adc ss stc add push lock add cmp mov adc test ds lret cld push inc jl jge inc ret inc je adc daa dec mov loope jmp add bound (bad) outsl sbbb add jmp inc or xor push aam stos push add add movsl clc in clc subl lock inc jne out sub iret stc in rcll adc lea je jg je jle push push jle sarl sub je in mov call pushf push xor stc cld clc xor xor adc ret add mov pop in cli js xchg stos dec fsubrs pop pop mov lea call enter ds jae mov in popf in pop xchg jge push nop push inc inc lock ret pop fwait sub sub mov ss pop jbe gs movsb sbbb cltd in or adc xchg lahf lahf xchg push jecxz push push xchg dec and out xchg loopne or inc mov ret mov (bad) jmp ficoml fildl aas mov pop and ss mov cmpsl (bad) sbb add sbb test shr mov or mov cmpsl cli dec dec das imul add jl in aam aaa aas or and add push mov inc sbb lods addb sub nop jle out (bad) movsl pop in sbb (bad) push call out lock outsl push cld popa out in mov fcmovnb inc outsl add lret shl bound outsl nop jle inc xchg xor jmp insl pop jo pop jmp fbld mov call movb fiadd inc xchg clc jns pushf insl xchg addps bound out cmpsl sub call mov push pusha mov jo cwtl or inc std loope outsl mov call mov inc into (bad) mov xor add and ficom dec xor jo sahf (bad) aaa pusha pop ja dec xlat jne push lahf loopne add xor imull jp push pop add lods sbb ret lods mov notl or pop sbb (bad) jne inc inc dec jne movzbl add sub mov and dec mull add das mov (bad) xor ss sub mov or test repz dec fsubr scas loopne push mov dec je pop mov push adc mov in push ret sbb xchg test push sbb dec mov int3 jmp fidivr aam dec in add ja jmp dec mov loope aad loope in fcoml call mov jmp movsl sub inc ss imul mov xchg outsb loopne jne add rclb or ss push scas mov mov in stc int3 lret inc jmp call xchg add jp xchg pusha cmp popa lock sbb sti dec cmpsl fstl inc jns fidivr fs in rorb push neg cs loopne mov sbb leave ljmp loop add dec mov sbb hlt incl rdpmc fcomi roll lret push pusha pop inc xchg pop les push cmp imul mov pop add (bad) cmpsb movsb cmpsb add adc sbb push push mov jno fld1 mov sbbl mov (bad) aas pop xchg jmp push mov fnop and test mov jo test data16 cmp jnp aam xor stos adc add jge cmpsl push fiaddl xor inc or add rolb lcall mov xor inc jmp mov pop xor fldenv (bad) lret je or xor lods fildl sbb jne lahf push jmp jbe js in in sbb test add lock jns mov out flds pop rolb mov jmp movsl push loopne sub jecxz jo in in add or imul jne fistpl jmp jns mov jmp push dec cmp mov ds popf add outsb ficompl add mov hlt mov mov popa sbb fisubrl push dec aam mov sbb rorb or inc movsl fstpt sbb cmp mov (bad) pop je mov sahf icebp sub adc mov (bad) mov pop shrl push add loopne mov jns inc sub add ret sbb pop popa ljmp lock dec push addl sar fadds jge in test in loop xlat jp sub mov jl sbb mov inc sti push shrb int mov loopne add fcom lret loop cmp imul sarb fldt jns inc insb faddl hlt cmp fadds dec mov inc inc cmp imull sub sbb test xlat sbb addr16 inc lcall add insb add pusha cmp push inc fcoms int push mov and mov test mov mov cmpsl mov icebp ss es cld add fiaddl inc fstps or xor rcr rorl (bad) int3 or mov in popf mov shl sahf loopne aaa sbb sti int3 testl push je iret stc sahf xor jmp adc adc decb je fist je jmp es scas or xchg and and jno or fcoml push inc push stos stc dec incb addr16 and sub and fcomps adc cltd mov inc in fisttp push jnp dec sbb test mov sbb rolb mov lock loop fcompl es pop icebp lock movsl mov or mov jle dec fisttp mov sbb jns,pt fisttpl jno fstl psubsw dec add out outsb jl std pop push xchg jbe (bad) and add mov (bad) push push icebp adc test sarb outsb das loop jo loop pop pusha pop movsl mov sbbl aad cmp sti ss mov push add sahf pop push add pop sbb mov cs (bad) loope push ret jp cld cmp inc test adc fwait and dec (bad) fldl sbb dec jp xlat into inc pop push out adc test je push loopne mov dec orl das sbb and push fsubs mov mov subl cmp add or dec stos pop call and push adc cmp xor lahf xor (bad) adc xchg ret lret jmp popf sub je pop (bad) or cvtps2pi popf gs jne out jg shlb sbb popa pusha xchg or push cli cmp adc in dec jmp in push push js je je,pn rcl outsb gs iret and dec jo (bad) loopne cmpl sbb xchg in add loope out jne or add adc aad imul or mov nop or cmp movsb jne in or mov xor pop xlat add decl mov shrb and or sbb inc cmp enter cmp jnp sub and orb in xchg or pop xchg xor jne inc (bad) cmp jecxz int3 (bad) push inc rol push or push test adc push push adc or inc xchg xor dec bnd stc iret jmp lcall push xchg add enter movsl adc pop js and xor sbb mov xor xchg dec push add das cmp je cmpsb jle jecxz hlt ljmp shrb or add lock mov pop and cmp inc dec das jg jmp call scas pop scas lret mov (bad) or iret adc je dec push xchg das movsb dec mov mov jecxz sbb loopne aaa mov lock push adc adc adc frstor loope adc jne inc or dec daa arpl cmc add jne dec hlt test repz push mov (bad) imul sbb and sti aaa jmp mov pop test adc mov and push mov mov pop jae jmp call push sti mov loop sbb movsbl idivb (bad) mov fabs cmp xor out popa int cmp cmp clc xor fstpt mov inc inc push sti dec and mov movsbl sub fcomps and dec sbb jbe,pn fimull mov adc nop dec cmp lret mov ret xor outsb cmp scas fstpt fsub (bad) repz jmp xchg imul inc push add sbb orl loopne fadds xchg mov movsl fsubs sbb jge push sbb shll lods cmp sbb in ficoml mov dec fsubs nop jg add loopne inc or pop xor cmp dec xor out adc pop daa push push pusha pusha (bad) xor sarl xlat pop push arpl test add cmc je std pop mov out hlt dec (bad) insb push test (bad) push ds scas pop call dec pop xlat fmull pop dec lcall imul adc mov fsubrl jb fsts add cmp or sbb pop je data16 pop cld cmp frstor sub inc cmp insl jne in pop adc push sub fsubr jl adc jmp rcrl fwait pop fnstcw mov sub xor cmp add je test insb xor xchg sti and in jns jo mul push and icebp fwait lret and mov cld lods test outsl or mov sub sti jne fist sub lcall inc icebp rclb push call movl loopne cmpl clc decl test out loopne cwtl aad sbb leave sub (bad) lods or aas sbb push add sbb or add pop sub mov out inc aas (bad) jmp mov dec loop popa mov xchg aam int3 arpl movsb cld leave fmul cwtl sub ja pusha xlat call enter daa sbb and clc mov push js mov in and adc test mov add adc pop shl rclb rolb sbb rclb xor add cmp sbb ret arpl sub adcb test insb lret movsl or imul pop add arpl andb rolb xor (bad) stos aad aaa aam inc movsl push xchg xchg cmovne (bad) push orb dec js sbb fs rcrl jbe dec push lock rcll jne push mov xchg (bad) jno cmpsb add inc sbbb shll loope loopne sub xchg xchg aad sbb outsb repnz roll cwtl test (bad) xchg mov fiaddl cltd sub sbb mov cmc fcmovu roll xor cmp sub (bad) xor sbb add rol fmuls sub xor test in pop push test mov cmp dec or gs out daa ss sahf test cmp push test lds pop jmp sub lods rcrl pop fsubs cwtl addb jbe inc add stos pop (bad) pusha negl push call sub add lcall mov test sub dec hlt dec xchg add mov repnz dec jmp hlt ja out call jb int pop ja pushf pop stc mov xor (bad) fisub jne dec call insb testb xor loopne inc (bad) fimull loope add pusha addb mov xchg push xor add xchg cmpsl (bad) notb jne mov pop call dec je sbb negb pushf pushf add mov sub add call cmp mov lret movsb cmp jbe or push xor test orl dec loopne int3 sub imul xor add sub and dec push nop rorb les cmp xchg lret and or or movsb lret sub sbb in mov cmc fdivl test pop (bad) loop push cmp sar ret cmp push pop sub fnstsw mov sbb jo inc test mov mov adc in ret mov jl jo push xchg lds testb xor je sub mov in mov imul cmp insl push jmp outsl mov push xchg pop in stc les cmc or mov adc pop inc push push loope inc add test scas repnz loopne push sbb (bad) jo loop cmp jne popf ja add daa jg ret cmp dec iret add jnp push cmpsl cmp shlb mov dec pop adc dec mov and iret add cltd xor xchg xor hlt sarl and inc mov fnop mov mov je xchg les fistl add ret sub inc mov inc jmp inc ds jmp sbb (bad) mov adc mov mov push cld mov add jl cmp inc or pusha xchg jno ret dec cltd or lahf (bad) jp push push add divb imul xchg ja rorb daa push fisttpll or jmp (bad) aam xor or mov adc mov adc clc arpl dec arpl mov push fsts movsb sbb call mov insb test inc push repnz mov test lcall enter or cmc (bad) rolb les mov imul or mov cmp (bad) in xor add inc ret or sbb (bad) fs fidivrl adc icebp push cmp jae,pt (bad) cmp fbstp enter aas jo cmp and cmp push jo aas mov xchg cmp push aas sbb dec lahf lods inc in or sub add les clc dec inc imul mov dec sbb call push jno sub in adc cmp nop mov jmp sbb push and out add push dec adc adc adc mov sbbb adc xchg jns js sub (bad) mov adc or push inc jge mov je (bad) inc mov inc dec stos xchg movsl movsb roll lock in xchg sbb int3 jmp aaa mov test jo dec jle dec jg push jmp xor rclb adc pop xchg scas add adc je jle or jg in sub loope (bad) in fdivs cwtl pop dec fbstp jmp push fnstenv sbb (bad) push push sbbl or sbb (bad) cmp cmpsb or push in mov in xchg jno mov jne push xchg mov repnz leave dec lret mov inc inc lods lret inc rcr test push fsubl lahf mov ret movsb sbb adc sbb fimull je fstpt push xor fwait mov adc mov push fwait out adc or or jns not jmp sbb jmp ret pop pushf fcomi push lret out dec and push cmpl push (bad) mov lcall mov pop mov mov push add add stos sbb adc pop jl and lahf leave push mov cmp les scas push inc lret xor pop push imul dec pop pop sbb xor xchg mov adc movsb mov pop hlt clc je cmpsb je or js push cld out adc xchg cmp call add mov adc adc call (bad) jmp push push clc xchg scas stc and sbb or leave and imul inc mov fcomps je sub je cmp pop and mov cli push mov dec mov xchg inc or out movsb inc pop aaa sub dec inc fdivrs and dec pop roll lcall inc push pop gs or out sbb cmp mov push pusha mov inc icebp mov lea (bad) cmc gs xor add push xchg clc xchg push stos push into out (bad) mov xchg fwait cmp repnz ds adc mov mov mov mov loopne sub mov mov clc call lock or and ret pop aas or jo sbb xor inc push call (bad) pop dec add and push xor (bad) xor mov in (bad) xor jle pop jb sbb js mov add add popa mov mov jne das sub and xor or xchg (bad) fildl stc or mov and je (bad) aaa in and pushf mov or or sbb hlt je xlat sbb sahf dec fdivl cmp xor jns stos rolb test call iret fwait ret adc pushf sub push sahf fs mov mov inc mov adc xor clc jmp call adc cwtl ret mov mov insb imul pushl inc lock xchg fwait leave leave in jae adc add sbb add adc or xchg repz adc jecxz mov leave mov fnstcw jne add cwtl jo inc jae sbb call mov mov pop push out fldl das push pop lods adc inc in dec push xor cmp push dec aaa cmp mov cs and ja,pn cmp cmp xor fildll lea jmp insb sbb add sbb dec ret aam and lods xchg mov mov jle jmp call sbb call (bad) push mov outsb (bad) insb xchg repz js add mov cmp cs fnstenv xchg xchg jecxz rcrb fldt std sub cmp jmp inc xchg (bad) jmp sbb sti test lar mov pop dec add push or mov mov xchg cld stos je add fdivs add fwait dec cmp adc cs repnz add andl rolb ret idiv and sbb loope add push shrb popf mov scas adc adc cmp push push or pop and inc inc cmp cmp lea cmp rclb jne sbb pusha mov das adc sub or es (bad) mov cmp mov jbe dec test mov std adc out test lods rcr mov lock or out or jne and push call imul into jl icebp pop pusha shrb sbb pop jo nop push js pop jle jge loop sbb adc shlb adc push das or repz pop test mov dec or push xchg mov and or cmpsl adc dec jns mov test lret xorl into add push mov fwait dec adc call mov mov sub sub pop sbb inc jb pop popa dec and lret xchg inc sahf sub jge and das pop pop sub nop jb mov push test adc push cmp in cmpsl and jae cld pop andl cmp pop sahf jno push iret dec sbb aaa cld mov leave xchg lret stos sub or sbb jbe fisttpl ljmp pop xor add divl test ffree idivl aad and push fldt xor imul std rclb cli push divb jl dec pop leave fcoms xchg pop (bad) sub mov stc aaa pop int3 addl fwait push addr16 push cmc and call sahf pushf sbb inc push inc aaa add inc testl fdiv cmp aad loopne mov daa negl test add or mov push or jl push enter pop add mov add repnz inc dec (bad) or mov or inc or enter or mov incl xor dec scas dec pop add jg xor dec pop cld jmp sbb or push or sbb insb push mov in cmp add lea mov ror cmc pushf xchg push adc insb popa out xchg xchg (bad) in and add adc cld pushf dec mov or movl or andb dec sub sub mov lds jle push lods adc add mov (bad) jmp cmp and aas decb and addb (bad) jbe mov jle sbb lea inc fdivs sbb mov push mov pop ljmp ja dec push xor fsubs test mov pop mov pop mov cmp lods insl sbb add push sbb pop xor movsb or das in cltd add enter adc into pop ljmp and add jns xchg dec push cmp jo adc js push or and push push and sub pop sbb adc and fprem add push fs add cs mov adc lret lea adc adc mov cld xchg iret sbbl je nop or pop cmc hlt push ds cmp or and subl dec clc (bad) and and je push sub add aad aas loope rcl pusha adc jno xchg adc fs in cmp cmp rolb dec sbb hlt sahf jmp enter insb imul lods jno jo rclb or lock mov int pop into jp lods jmp cs test add movl and xor push das jl adc test mov pop push call imul pop sub add xchg je test jne adc lock inc push and (bad) lcall push mov pop jns popf lcall movsb jo or lea xchg add fidivl mov dec dec or jmp inc dec dec add cmpsb mov sub fmuls sbb jo je mov xchg cli outsb add push or sub hlt cwtl add test inc adc cwtl mov lea lea shll jl cmp add dec (bad) inc cmp push dec dec adc mov xchg add call movl and pop cmp mov jo pop clc call add cmp lock fnstenv inc sar cmp lea mov rcll xor test mov mov addl pop pop outsl pop test cmp sub rcrb xchg cmp jge push test add jo add or inc inc cs cmp and lods insb sti and call call add add shrb gs fs and xor int3 imul pop and lcall call out mov cmp in jo mov mov in mov mov cmpsb imul repz fsub and add outsb xorl jp rolb xchg test insb in cmp aam xor sti jne add daa leave imul jmp and mov mov iret fsubl add cwtl test (bad) mov xor out sbb push push jmp adc test pop roll decb and adc sbb mov ret add and lret push cmp lea lcall push xchg sbb jb out int or cmp add mov push (bad) jb pop add add movsl aam cmpsb pop lock jo adc adc pop iret mov je outsb sbb sbb call or mov adc repnz call into add cmp sbb ds push and jne outsb (bad) lock add inc decl cmp adcl test sub sti mov mull stos dec push xchg sti pushl xor pop loop sbbb push mov xor xor and gs mov call push jns cltd xchg inc cmp addb xor test dec inc pop add mov or pop add pop sbb stos push nop cwtl xchg hlt mov xchg shr and jns sbb cwtl xor ret dec stos add jmp andb or pop iret push mov or leave cmp add rorb ret adc add dec jns dec dec lret jbe adc mov popf rorb aad (bad) jg (bad) jne mov addr16 adc jmp sbb push push pop dec les es mov add xchg or xor push or es xlat xchg jne cmpsb jmp adc outsb pusha movsb mov push js out cld xor sub inc add inc inc mov jns stos into insb (bad) js call push jne mov js in cld sti fistp shr (bad) fidivrl xor sbb push push shl testb leave test xchg dec xchg ja roll lret xchg imul and icebp xorb inc out mov xor or hlt or sub shl push push cmp (bad) inc icebp push sub sub aas sti xlat icebp cmp pop lret (bad) or mov xor inc jp out repz jmp jmp cwtl push movsb push hlt enter or push fldt aas inc adc cmp jb lock lcall pop ja (bad) push mov push mov neg (bad) js push (bad) in add add push push fdivrs or mov sbb xlat cwtl loopne and mov push dec add pusha pop and cmp data16 sbb pusha imul insb call (bad) dec jp inc aas sti les inc mov test or call mov mov cmp nop xchg jne cli or inc loopne or cs (bad) lea add cmpsl fs call cmp sbb or pop pop je push dec orl push mov lret insb roll movsb xlat loopne push sbb hlt decl add fwait rolb call hlt or add lret sbb or outsl xchg or fild std loope push push lock loopne push add add pusha decl (bad) je cmp js pop add test (bad) sub sbb push dec loop fwait mov ret sub mov jb fwait cmp out pushf pop mov sbb enter add or (bad) inc jbe or add xlat nop add ss xchg push (bad) std xchg mov push repnz pop jne sbb cltd (bad) loopne and and sub mov inc add and enter dec adc std mov or mov pop xchg mov std out xor shr push push shlb sub sub out sbb pop dec or or adc cmp and push inc pop mov dec scas aas fadd call dec mov dec ss arpl mov xchg arpl mov pushf and dec cld insl cmpsb icebp loopne xor mov imul pop push call call daa pop push jmp mov adc mov enter (bad) mov iret xchg push rol xor mov adc clc jl loopne sbb mov adc lahf adc push nop xchg sub pop adc add or jmp jbe adc sbb push sbb mov pop push push call arpl adc enter inc test sub pop into mov loope fidivl dec push xor pop xchg ret adc gs push nop out xchg sti jmp adcl fistpl push or xchg sub jnp xchg (bad) into add in mov outsl sbb mov fildl push js or mov je cmp sub lea xor pop and cs dec add pop mov je xchg or nop jo sub mov sub and scas sbb mov mov lea std outsb pop add test push mov (bad) (bad) mov jle sub push sbb adc mov push dec lcall add xor push es push movsb outsb in clc repz add rorb cmp data16 and jmp js fwait sbb push xchg sub dec sub mov into or aas or orl push xor mov jmp jnp add push call adc inc xchg (bad) xor xor dec dec roll pop fdiv jmp jb adc add adc mov xor movsl imul adc fmull pop mov push test push adc aaa sub inc enter daa lret mov loop mov sahf movsb push xor ss jbe push xor dec das push jmp push mov cmp and das jo ss cmp test pop add (bad) sbb sub fnop mov imul and das inc mov dec push mov (bad) inc (bad) (bad) or cmpb xchg icebp jle and or movsb es movb out dec mov mov lea inc jae mov push cmp inc xchg or mov (bad) call cmp and rcl inc or rol enter test mov or jmp mov sbb mov push call insl mov mov jnp and push adc adc loop mov mov (bad) test or xor xor pop sbb sub subl xchg add subb push lea add add push test or call movsl and jnp mov popf dec sub jae sbb sub mov test jge sbb inc xchg push movsl call cmp xor push lret test pop mov cld bound push pop add dec add addb imul pop mov adc push popf jg jmp call nop mov add push cmp pop fwait jo ja mov lods pop repnz jge xchg xchg addl pop xchg int3 sbb fcoml jne inc or dec inc sbb xor adc clc dec lcall clc xor loope leave (bad) pop into sub loopne sahf loop push and inc sbb shrb push call lea nop call sub (bad) push and outsb ds dec mov sbb (bad) cli mov ret dec bound jge loopne cmpsb nop add daa inc add out pop dec push jb daa dec sbb mov mov sbb mov cmp jmp mov pop out sbb cmpsl add scas jo bound loope mov lret sbb faddp push leave in sbb mov dec je bound jmp jb dec dec das (bad) lahf push bound rolb js or je xor cmp push in sbb sub das dec mov jmp add inc dec lret out int3 push pop cmp or mov (bad) xor push (bad) fcoms pushf movb sbb push (bad) xchg xchg iret andl loopne or mov mov loopne dec dec mov push jg mov fildll test xchg les dec inc bound int fisubl mov sbb mov jge fistp mov xchg adc xor jl xchg fadds xor dec pop adc pop dec pop sub aas in sbb sbb xchg mov sbb movlps jecxz sbb xlat adc outsl in jecxz mov sub (bad) decb mov add insb addl cs stos jo inc ss push and movsb stc xchg rolb (bad) ds inc ds xchg jnp mov xchg test rcrl jle inc or or daa push stc mov clc add lods xchg sbb pop lea mov add xchg insb mov xchg aam or fwait dec push pushf add out mov jl hlt xchg jne mov jne in and push lds sub (bad) cld cltd push mov jge rolb mov add test and mov lret stc test mov fisubl add fsubr inc add leave out std sub add repz mov jge xor jne call imul sbb or adc mov enter ret mov sbb ss fnstcw fild push pop call cmc aaa shr arpl repz or xchg test or stos jmp (bad) (bad) jne int in insl jo aas pop or mov jo sub and nop xchg cld insb jo mov or and je mov mov rcll sub mov popa sub bound push adc or fmull inc data16 mov jmp hlt enter push jo clc ss lea dec add jmp jmp mov xorb mov and sub out and push incl addl push loopne movsl popf sbb stos jge adc pop test sti xor je cli sub push ss jns stos shl (bad) in nop xchg adc (bad) or cmpsl mov push mov jns adc notb pop sbb (bad) adc push inc xchg xchg add sub mov fcoms xorl and rcrl mov adc les fsub xor mov push lods fiaddl sbb lock sub sub mov jb cmp shl mov popa dec adc push xchg repz add sub int3 mov sub sbb inc jae lcall sub adc sub and addl stc lret rclb add fistl add (bad) sbb push int fiadd (bad) mov dec pop imul cmp decl adc test cmp push add leave addb adc sbb fimul repnz (bad) test add inc add and das add out jne addb inc (bad) mov jo testb or add outsb mov xor jo add pushf xor ja jle mov sbb aaa stc xor xor mov mov mov callw in es push imul xchg rorb je lds scas (bad) mov add mov mov inc ret mov in cs cmp sub out sti fsubrl imul scas icebp sub xor jmp mov idiv jle add sub loopne sbb jns xchg or fadds jecxz in jb movsl (bad) adc inc scas nop ret mov cmp xchg xchg int jle push arpl adc daa inc cmp mov sbb mov in inc call push push push sbb (bad) je mov adc mov sub sbb adcl incb shl jb rcrl out push xor in cli in jge jne adc jge push mov xor xor jl mov rorl and adc nop in mov add and xor sbb call pop xchg lds pop (bad) ds mov push jnp iret or ja push add add cmpsl adc lahf and add xor and das cltd dec xorl pop push cmpsb jge jo movsb in ret jp add iret or xchg dec and call sbb xchg add and inc ret xor orl sub xor cli call repnz mov or dec add and cmp pop (bad) mov ds mov loope dec jne dec ret cmp push scas and sbb pop or push je adc pop leave jg jmp pop xchg add cmp fs (bad) (bad) js out jmp test mov cmpsb repnz ds and push pop scas repnz add sahf push jbe enter lds lds sahf push adc js dec jns in loopne push ret sub or push or cwtl cmpsb dec push sub pusha mov rorb push add xor push and ljmp (bad) xchg jo (bad) mov mov sbb mov xor jne data16 lods adc push mov (bad) add add cs in (bad) sbb adc (bad) adc cmp pop fimul loope loopne inc nop or jno les mov jp or (bad) add add pop test inc jge std faddl mov lahf enter mov mov add inc bound mov mov arpl mull scas xchg xchg out inc mov jnp leave daa stc (bad) (bad) jl push outsl adc sub std pop testl pop fdivrl iret add and je or xor mov cmp cs (bad) aaa mov push cmp cmpb sbb arpl cmpl dec mov test repz mov push rcr mov cld aam push popf pop xchg push push push cli std daa mov repnz aam in pop enter push push sbb pusha adc call sub sub cmpl (bad) or pushf xchg (bad) out stc (bad) andb add (bad) jb mov cmp cmp stos add adc (bad) icebp jmp xor pop or adc lock outsb and adc repz inc ret pop faddl jo cmc and inc add jmp mov mov mov mov mov in cmpsl jne sub inc bound loopne mov into subb dec add adc dec fidivrl jmp mov cmp mulb mov jne fdivp ss fs pop dec clc mov mov and pop (bad) dec fmuls test jg (bad) ds add sbb scas (bad) jo lds jg xlat test xchg (bad) adcw call jb sub jecxz adc sub fldt data16 adc cmpl mov xchg cmc mov movsb pop pusha inc jmp mov rcll jno incl sub mov adc xor gs dec mov sbbb add or adc push add pop or add mov stos pop mov jle inc inc call aad push cltd repnz sub paddq and pop jmp push and push jo pop jb lahf and adcb push in and pop idiv out (bad) (bad) fldcw mov jno pop and mov add int3 sub pop pushf mov and out lret push repz cmpb out bound cli jmp test pop dec mov es xchg jo icebp dec fs pop sbb xor pop div sbbb push call mov dec jne inc jl push ss (bad) cmp aam jl call xorl add out push fcoml sub call call lret aas jl mov jbe mov jmp call xchg jb or adc sbb adcb rcrb mov call or clc cmp into in sbb mov pop sub adc (bad) dec cmp adc dec sub xchg pop mov rolb push jns pop in rol mov inc jmp fwait inc dec popa subb and add sbb cmc outsl vunpcklps out adc push xchg push and clc add push push jecxz mov movsl dec insb and mov mov and pop cs xchg jge dec or jne mov dec jo test adc fdivrs cmpsl mov push push inc cmpsb loopne pop call sub popf imul mov and pop in adc mov test js sbb scas mov repnz repnz je add or test sti cmpsl (bad) test or or jo mov clc adc cmp xor outsb add fstpt add (bad) insb push inc adc add mov repz rolb mov and and ja mov stos sub es call pop mov adc and rorb add add add push ficoml jg decl inc push add sub sub hlt add and xor mov mov inc cmc push xor lock call adc loop add daa pop xor and orb pop test xor cli fimull adc xchg (bad) sbb mov mov lock loope dec mov inc add imul sbb sti jge sbb push inc stos leave icebp adc and arpl in pop and popa loope in cld int and faddp in int3 outsb ret adc repz test push or nop je daa fs cmp (bad) lcall pusha bound lock add dec pop int3 add push adc (bad) rcl adc dec xor and inc dec cmp cmp out lds pop or dec aas adc or adc scas insb stc jmp jne inc test cmpsb add pop iret out cmpb movb call xor push jns hlt xorb scas repz mov stos bound mov sete lods or jg xor jbe xorb icebp call mov jle or lock dec adc aaa rorb imul lahf inc inc incb sbb (bad) xlat jo xchg sub (bad) cmp decb push pusha fdivl out and and xchg call clc or adc out adc cmp xchg dec clc popf push pop fs rcr aad adc sbb mov or lret (bad) mov or mov loope jmp push dec popa pushf das sub mov loope or push xor add pop shlb cmpsb cmp dec mov daa mov pusha fisttp adc js or mov push xor add fwait add sub xchg push push mov xor mov cmp repz call fldt add jmp mov mov push hlt mov add and or sub cmp scas jae fimul mov mov jmp pop and movl enter (bad) jo es or adc nop jae or test int rorl fldt (bad) jae inc lock jnp test push dec jmp js outsb inc xor push or push and mov sbbb mov cmp add movb jb insb add add add sub add out add test mov aam rcl add je jb hlt mov mov je push add mov imul out scas sbb (bad) or mov and cmp into std xor xor cmpsb cmp add add fs inc mov lcall nop rorb adc push pop stc test sbb int3 mov adc mov and adc outsl inc shrb or inc add addr16 movsl push mov add inc enter mov std js incb push inc jmp addr16 dec fst xchg popaw jmp pop test out pop inc call adc adc mov mov and cwtl jne dec movb xor mov sbb sbb aas incl pop inc add mov dec gs arpl fldl fs pop fs pop jle add push dec data16 sbbl xor call add pop cmp adc xchg into call dec cs data16 in test push jb gs gs cmp leave inc loopne pop idiv push jb xchg push fs fs jb loopne push fs leave sub hlt sub push enter arpl adc xchg imul outsl pop jecxz test jge or nop xlat mov xchg lock int cmp inc out repnz out cmc (bad) mov fs pop in out test lock jbe cmpsb mov jge push mov jle rcrb xchg cmp push mov je mov (bad) repz xchg xor add mov int jo pusha (bad) fbld inc (bad) or push jne loope or mov add scas add inc sbbl fisubl mov jbe and daa bound nop outsl fimull adc cmp in sub or cmpl popa adc or xchg cmp pushf pop add cmp repz inc push push or data16 dec xor jge stos xchg add cmc aaa pop adc add mov pop je sarb cld or push ss sub dec sbb out cmp std (bad) sbb jl sbb stos lods testw outsl xchg out add jne testb fimull sbb mov cmp enter rcll add or nop icebp std dec push ss push pop (bad) dec call jns pop xchg push cld lret shr mov pop or and sbb cmp xor push roll divb iret pusha mov dec ljmp in leave or jns rorb nop add pop add shl pop sarl sahf lret lahf (bad) adc icebp ja or loop dec sbb jae dec adc cmp and popl lods addl mov (bad) js jnp rcrb dec (bad) pusha mov nop stos mov adc or lahf mov test xchg jae (bad) ja nop sub fild cwtl out icebp push sbb or out pop enter xchg xor push rorb pushf test pop or bound xchg or cmc jbe (bad) add jge sar mov inc jg bound and test push add stos in jbe iret and pop enter nop pop repnz jne repnz xor mov and je and mulb adc fldl jne or cmpsl cltd push sub enter into or fildl sbb cs addr16 je pop leave or into add test adc loop xor pop mov jns inc dec sbb mov stos and pop or orl frstor test imul (bad) sub mov cli stos ret xchg je jmp add test sbb adc sub adcb outsb scas test clc and or or push bound ret push fcompl xor (bad) out sbb mov add mov rclb ss out pop mov or push and in ret mov xchg push sbb xor mov loopne (bad) mov pop jle mov cmp cmp mov js xchg xchg or xor test rcl sub push outsl mov jbe js cmp pop mov rcrb push and sub cmc add mov fcoms sub rorl add call mov jno rorl push in data16 sti xor inc xchg adc fwait inc adc cs rolb dec int3 sbb xchg inc stc and cmp cli and or xor mov pop ja ret or and add sbb int3 (bad) call lahf mov add arpl shlb add add fwait mov lahf lock push jnp push mov cli stc mov push pop cli adc adc sub (bad) xor cltd ss mov jb lea or mov jmp push pop xchg xchg and (bad) fwait mov or rolb sarl pusha cmp adc je push mov push sti mov mov testb add (bad) dec int3 or outsl popf je rcrl xchg (bad) push push jg test mov push push mov sub movb (bad) jo faddl inc inc mov out inc cwtl jo dec adc je cmp pop xor and cmp mov scas movsb je pop push cs std rol xchg mov lods je pop stc jmp add sbb rcl aaa push or xchg or dec adc leave xchg add inc and jg call ja (bad) xor std mov adc push push cmp cwtl and xchg push mul (bad) mov outsl dec push push rorl adc lcall test cmc loopne fimul adc jg mov mov mov repz std push mov cmp dec adc repnz cmp mov adc and xor mov pop or sub sub xor sub mov inc push in ja gs dec enter outsb add hlt std mov shl add push sub inc jo pop (bad) mov cmc insl ret sub xor std lea adc push push daa adc ja inc inc fucomp xlat dec ja imul add cmp fistl (bad) es test lea mov test lea rorb cmp stos push lds dec enter mov (bad) mov jle inc mov jmp push test mov shrl add (bad) ss push xchg dec adc mov adc jmp mov call mov jecxz subl or test scas js imul adc add or xor sbb and cmp mov je push push dec push cs dec sbb jl mov xor cmp inc jmp dec je (bad) add mov (bad) and addb sub push call adc and imul or mov std xor int3 pop cld or jmp lret dec xor sub and fdivl (bad) jne and or mov inc mov push inc xor or add les cmc into rcl aad inc push cmp sub stos loopne adc push xchg lahf loopne sbb outsl (bad) xor or add dec ljmp dec or jne jmp dec pop push add and imul test movsl inc call and jmp lds das testb pop lds push add sbb test outsb call add cmp add mov push imul pop pop sbbl comiss in xchg bnd push insb lret push push sti dec fmuls ret cmp or out idiv adc ja add jmp push push jb and ja sbb lods add mov outsb or add inc jne jnp pop or rolb call popa push cld xor push dec (bad) in cld jmp cld inc jmp cmpsl dec cld dec dec dec push xor dec dec cld cld pop test into cmp fcomp rorb ret aaa inc das dec out pusha aam ret loope or jl or mov mov data16 hlt push je enter mov loopne scas push push into dec jg hlt mov lea fimull in or adc add shll lds or sub lcall (bad) push inc push es jmp mov les jecxz fisttpll xor add je cld mov fcmovne dec mov jo fisubrl shrb push mov ret jne mov cld xchg add fs clc adc shrb fstl mov push inc fnstcw bound xor subl int3 ret inc pop xor push dec (bad) add mov mov fsub push and add xorl decb mov inc loopne jp push rol push push sub push pop cmp test shr nop enter dec sub xor sbb push adc ja jmp xchg mov sbb lret push dec adc lock inc ds test lret ret ret push subl xor jbe lret mov cmp add dec stos mov in xor or mov inc push nop cmpsl xchg cmp data16 cmpsl in jns aam inc cmp inc and adc ds adc es arpl orb inc int3 clc in je loopne icebp cmp out call jo jns pushaw imul mov push fs adc test jo xchg or cld xor sub adc or fadds xchg aas inc mov jecxz push (bad) add add push or jb jbe rorb and in es sbb addb and adc add mov int mov sub inc lods dec jecxz mov in les xchg lret rcr (bad) rcll test xorb push fcmovu mov mov enter sub in add cmpsb xorl sbb inc jmp mov ud1 jmp pcmpeqb popf sub dec mov gs (bad) adc or les ret int3 faddl xlat out mov arpl leave repnz das aam rclb mov mov xchg xlat and xchg and xor adc jo ds cmp mov sbb inc push add repnz scas outsb (bad) aam sub mov jb call cltd daa sbb or cmp cmovge push mov mov pop cli loope mov mov mov jmp pop stos les dec fs push mov xchg add push dec inc xorb ljmp fdivl lret mov mov pop and rcrb mov and ds inc sbb lea clc dec dec adc push stc loope cmp xchg xor lods in popa cmp add mov out inc mov sub pusha (bad) jb pop adc je test and push mov pop (bad) sub push pushf lods xor and ret sub and rcl mov leave ret insl aas sub adc push hlt sti int mov push sub call fadds mov rcrb inc sub lods (bad) inc sub je cmp mov out push sahf xor and push and je sarb adc jp mov decl or rorb xor mov or (bad) cmp imul mov mov lods push (bad) mov dec inc mov roll lods int and aaa push push and popl dec leave and push inc inc clc pop xchg hlt aam jge inc and lea xchg sub xor mov push jle mov push push sbb cs pop insb insl js xor mov mov pop pop pusha xchg popf dec movsl popa bound jle or sub push and test and int test mov mov cmp (bad) aaa sub push test addr16 inc pop js sbb jns add enter ja jge call jmp (bad) mov faddl xchg out xor sbb mov outsl sbb test adc mov cmp adc sub pop pusha jbe,pt dec clc out sub push sbb add inc cmp jb stos imul andl movsl mov push pop sub shr mov cs push jmp loop cmp ljmp fstl nop sbb push popa or add jge pop xchg das mov cmp cs (bad) data16 jmp mov mov lret mov popf or notb mov out sbb jne das into or jecxz cmpsl aad cwtl adc xchg xor xchg data16 sbb leave pop add inc pop cmpl dec mov addr16 shrb call enter das mov movsb inc or call std clc sub leave mov inc mov sub xchg dec add loopne push mov mov add std jge cmp movsl adc pop lea push out mov shll add (bad) push nop xchg fdivrl inc sbb ss push mov cld call jp jno dec jo xchg mov call push fidivrl (bad) push cmp aam push dec adc adc xchg xor push cmpsl pcmpeqw adc inc and adc push (bad) adc push xor fsubrp mov lret pushf fsts or and xchg test sbb adc push push jmp cmpb mov dec mov mov sbb dec xchg sbb ljmp je or add and push adc jge jb push aaa push mov mov jb or or jno mov or inc add mov xor or push add add std fcompl mov lahf dec cld jb cmpb add adc jl add inc rolb movsl and or sarb nop movsl mov inc cmpsb addb sub sbb or or inc js xor fs dec aad enter mov sub and sub cmp faddl sbb pop (bad) pop (bad) mov int3 push or pop add xor or add dec cmp jb jl cmp call inc push pop and cmp dec add roll sub fisttpl pop sub inc push ds scas push pop call (bad) mov fcmovb xchg inc cmp repnz add or pop xor jl in faddl daa popf (bad) std aam aas pop add mov lret cs in mov std mov sbb mov and sub stc jb sub pop push mov jae leave add imul out test outsl mov jo ret test cmp int xchg movsb (bad) cld hlt je ljmp xorl in aas jb aas aaa push call call pop lea cmpw es add (bad) call repnz cmc js jmp push adcb sbb sbb sbbb adc inc mov push push out adc mov or hlt push add cmp or inc je xlat mov sub sbb push or sbb dec inc aas add mov jp jo adc pop movsl fcomip mov gs xor mov insl ja sub icebp pop loopne adc inc jb and sbb shll xchg les leave je mov push pop adc daa clc das adc jmp (bad) mov sbb mov clc lods ja sbb sbb or ret mov mov les sbb push ljmp test mov sbb pop jbe mov nop inc outsl push cmp sbb in jg gs add out push (bad) mov sub and popa repz orl (bad) mov dec mov mov mov (bad) pop mov repnz je sub mov je mov icebp call or and cmp mov scas inc scas leave xchg inc jle push call mov fstps mov push sbb xchg mov pop xor mov push and sbb adc (bad) xchg mov fistl mov ret mov sbb cld sbb pushf mov in std call xor lret dec repz das add push ds (bad) enter in std loopne sub mov (bad) adc imul decb push xchg fmul adc cmp fsubr std icebp dec lret jae pop call test lods pop pop icebp mov in std test sub mov fimull adc test pop or into jp and jne pop addr16 mov ficoml rcrb xchg mov and imul loopne sub pop add scas jbe xor call push aas push mov adc fsubs mov xlat in rcrb cmp push sub pop mov lret sar aam or cmp pop jbe mov lods jno,pt jno mov imul pop and and pushf fnstcw mov arpl push inc loopne iret or jp mov outsb cld mov jno push or adc popf (bad) clc adc jne push lret inc cmp mov mov cmp (bad) insb dec mov data16 pusha jle adc dec popa cmp (bad) xor adc pop or inc lods ds xor add loope test xor or rcl call mov shl adc lds push cmp mov ljmp nop nop lret adc call movsb mov pop sbb dec pop shll loopne loope cmp push testl xor rcrb xchg jge jl loopne adc sub adc js or (bad) cmpsb scas mov jp outsb mov jmp push xor add adc inc cwtl or popa sub sub lea xchg dec ljmp jbe lcall and cmp shr mov or (bad) cltd div sub idivb jge test jle inc sub sbb fstpt sarb mov pop (bad) sahf enter add push and push pusha push pop scas test repz mov data16 pop shlb xchg sbb aaa sbb ss jbe pop pop or rcrb inc lcall push sub inc add ss fwait lods outsl lods nop stc jbe out pop ret sub fnstenv pushl and push jle add sub jmp loope xor fisttp push and lret push sti fcomi lea sbb add mov repnz sub pushf ja xor xchg test add xor enter rcr dec fmuls sti je daa decl jo imul add mov mov and pop adc cmc inc adc ss ja mov push push jo call dec (bad) negl dec mov js and add mov adc fadd lds sub call inc (bad) pop adc and sub push (bad) jb push mov into aas pop enter cmp sbb and and fstpl jae inc ljmp rclb fdivs or lea sub fisttpll outsb outsl jg ja out cs mov dec xorb dec push mov adc or idivl sub sub push or cmp imul jg push rorl ljmp pop adc jbe ljmp lret popa test sub jl bound mov mov mov xchg mov out das cmp ret sbb in sbb pop pop xchg (bad) mov xchg add or xchg daa icebp xchg mov sub outsb dec sti mov sbb imul sbb sahf add in or addr16 lret and inc and sub cmp and loope sbb cmc bound adc add mov cli mov adcb jmp cmp cmp (bad) lea inc xor and ret or pcmpeqb test xor mov sub ret subl lods sbbl pop fnstsw cmp iret addw pop jmp out add dec xor or add repz jl xchg xchg cs adc in in popf jne loop jne sahf add pop rcrl mov dec adc pop adc adc dec mov sub scas jo movsb xor cs mov push inc push cwtl push jmp sub lret rorl insl inc and xchg int3 jb mov repnz and mov add xor mov jmp insl stos inc enter or lahf cmp cmc sub out ret fcoml pushf xchg clc push cmpsb mov cmp mov imul jl or adc test pop sub scas bound push lods inc fild outsb sub clc out push mov and xchg pushf push and cmp push push jne push in inc and test jp add repnz divb or rolb sbb lock insb add push sarl cmp nop test and dec fdivs xor mov add xchg mov add or inc add mov add js loopne (bad) (bad) insl and jmp dec push and mov or xor das dec sahf add addb ret in popa pop adc inc sbb adc xor dec and je mov cmp loopne jmp mov mov in call data16 mov mov fadds mov lock or mov add je call mov push or xchg dec add and mov pop mov ja ss inc push mov add dec rorb std add push xchg sbb cmp sahf adc test add jnp sub dec add popl jmp jp sub mov pushf addb jg ficomp aas jl xchg mov pushf sub (bad) gs int pushf and aas mov mov mov pop adc sti orl call adc incb sbb fcomps rcr jge insl lret enter dec or fs mov rdtsc push jo push adc xchg xchg lret (bad) mov lods xor in (bad) xor cmp (bad) add mov ret adc leave les movsb adc push xor sbb hlt mov mov add mov gs adc (bad) ss (bad) loop mov popa shr ds (bad) aaa pop insb aad pop int3 inc push jg adc push call test dec movl inc dec ret sbb es out add sub sbb sub test test test jmp aaa sbb lret or adc test mov jmp (bad) push jmp call fstpt loope sbbl cmpsb mov dec leave mov enter loopne mov pushl inc daa enter sbb mov push push iret sub and jne out xorb push divb push sar pop cmp roll mov push call dec in jb mov pop sub cmpsl nop inc loope loope (bad) push jmp add fs add in bound icebp je pop (bad) or in jmp nop sbb pushf lret int or cmpsb loop sbb (bad) fcoms adc ficomp sbb dec add movzwl or je and inc daa repz call or repnz xchg icebp (bad) notl sbb ret in push inc repz mov (bad) or push push call mov repnz mov dec jae xchg inc jo movl add pop test out pop inc (bad) (bad) or movb test jge test aam pushf add or test hlt pushf add in xchg roll stc xchg dec movsl lea dec add int3 mov cmp mov lods aaa scas adc dec ret stos (bad) (bad) out add inc and sub call movsl push or push ljmp pop cli add adc jl or std cwtl xchg into call mov xchg scas push inc sub shr jno jl repz fs or jecxz pusha and mov sub xlat andl push pusha push sub nop mov lods inc cld jl adc and pop je test adc mov push cs pop mov fisubr in je pop pop sahf lret (bad) call punpcklbw cmp adc cmpsb movsl and rclb mov in jmp mov ds dec jnp xor xchg adc imul sbb imul in sbb jnp add ror mov shll cmp inc shr mov or jg cmp mov dec je dec jne (bad) scas pop sub cmpsl and or (bad) and push xor lock imul call dec xor xor out jbe xor and or dec outsl je add out je pop jne jmp (bad) movsl stc nop add push fisubrl push sub sbb sbb or lea push sbb js lcall sub sbb mov mov adc popf xlat mov dec fcomi ja popa push adc mov adc adc mov jbe ljmp or and test inc lods iret movsl mov popf lods aas and ret xorl pop adc call (bad) adc push mov inc adc adc das rcll mov addr16 or mov adc xor sbb jmp std add adc int3 in sub adc addl leave push lea fadds push mov or in mov and sbb inc dec xchg inc (bad) pop lods push adc lcall mov or (bad) dec loopne jb xchg fwait (bad) cmp test xor ret pop shrb or cmp inc pop lods adc stos mov (bad) dec push test pop or add gs inc jo neg jne sbbl mov cmp (bad) imull pop and jge or icebp sub cmp or inc test fwait hlt xor test dec ja dec and fnstenv lea jmp mov xchg jle shlb and out add out jecxz mov in pop ficom mov xor sbb dec pop push in aas xor xor xor push es aas ljmp imul fcmovnu jge popf xchg jmp pop repz test mov or cmp aas pop test pop sbbl ds fiaddl fildl pushf and cmpsb addb std jmp jmp imul and call mov xor and (bad) xchg sbb adc inc (bad) data16 inc sub sbb popf sub mov add pop ffree shrl sub inc outsb pop xchg stos add lcall jnp ja pop jne mov inc movb jmp inc cmp mov mov mov int3 cmp jae mov jmp ret cmp pop push sbb movsb mov inc or sub xabort sub and mov shl or cmpw xor jmp mov pop mov js dec mov add imul adc (bad) pop pop mov aad jge ljmp mov inc insb gs andb rclb test pushl dec or jae or setno xorb mov ljmp or xor movsl xor test mov es inc fist stc sub cmp or call and add popa adc xchg pop pop repnz add mov roll or inc push sub pop cmc or stos add adc cmpsb cmpsl xor mov mov ss (bad) dec rorb je pop jmp jno (bad) push xor xchg fild lock mov inc outsb inc sti cmc sub push subl push pop inc dec jns and push dec jmp or push call push mov leave jecxz or and (bad) jo rorl sti ljmp testb jo add xchg push scas dec cmpsb shl cmpl data16 jo pusha add sbb repnz inc movsb (bad) dec jmp nop sub cmp push lock mov sar movsb lods add inc cmp js adc scas xchg push rcrl jbe,pn mov add dec or scas popf push and sub jmp lock adc xlat lea into testl test xchg daa (bad) mov and adc sbb or cmp xor icebp or and or and neg pop push and lock pop pop mov int xor mov in dec pushf push jge shll add ds adc sarb jmp pop out sbb imull pushf cltd inc sbb xchg dec enter xor inc cmp add scas shrl add jns call fnsave aad lret add xor xchg insl loopne push cmp push or adc (bad) and push ret sbb inc sub xchg pop cmp mov push inc xchg jle or jmp and movsb ret push outsl jl test dec dec test mov cmpsl or test add repz pop stc ja mov jmp aas adc movl jo xchg pop fadd add push mov adc xlat pop or out nop push orb mov add rorb sub out lahf and add mov adc xor mov in add movsb sub add mov inc inc push mov cmp pushf push movsb sti and or inc insb loopne ja mov enter imul xchg pop fldl cmp lcall mov fsubl test jle adc mov pop pop mov cmpsb add popf push dec sbb add add out addb mov jb movzwl pop or insl call and sub nop int3 cmp add test je popf clc add mov clc insb xchg clc ja add ret testb out jmp inc jo nop jo sub pop addb in fucomp ret xor sarl divl fs adc lret jae outsl test aaa clc pop sahf js pop addr16 adcb jne or push jb jns xchg dec mov lods (bad) repz adc lret mov adc rolb jae adc iret mov cmp mov xor mov fadds mov jge jle mov sub xchg inc xchg inc les out add push les lcall outsl lcall jge adc sub aas and and jge jle sub cmp push mov push mov xor push adc sbb sbb lcall mov pop pushf jmp adc ret dec (bad) enter add sbbb es mov add (bad) jmp stc xlat inc jmp jl and mov movsl xchg popf std and push ror push repz dec int3 xor repnz cmpl xchg xchg out int3 xchg int3 fs push jns add int3 push add sbb shll daa iret aas enter mov mov cs push scas lahf cltd mov cmp push push loop dec add xchg out imul inc movsb or push sub cmp mov pop mov add or pop (bad) repnz add adc lret add rol andb inc iret add or shl add rol and cmp cmc int3 int3 shrb int jae int3 mov bnd dec int3 enter ficomp les in enter and loope call push mov sub or sub add pop arpl or mov mov pop mov repnz add push shr mov dec xchg push inc xchg lret (bad) adc xor sti inc pop mov inc lock push dec gs add scas mov dec mov nop (bad) mov or nop xor add mov sub add adc cmpsl aad and int3 or xchg sbb sub mov jns sbb nop aam rorb fadds flds push push mov jns and out xchg inc add in fs sub jl push fs and sbb or (bad) hlt cmpb lods xchg repz lea lahf xor mov inc stc bound sahf sbb add stc xor and pop jns imul fcoml std sbb or jge adcb test (bad) int xchg loopne push xlat int leave jge lea pop inc pop add popf test add adc fnsave aaa jmp cmpsl push testl lods and std hlt or lock out cmp sbb pop push lahf idiv mov pop movb inc cmp imul mov adcb push ljmp arpl das mov xchg mov inc sub shll dec jne std out jmp push subb outsl add js loopne bnd ds cld cld cld push cmp iret iret out add je js jl into je mov sub repnz je ja or ret lret ds std pop std sbb ljmp sbb inc cld or cmp lcall push mov daa push push lret ret sub inc pop adc xchg pop orb pop jns mov std mov in clc aas cwtl (bad) mov inc adc xchg add sub pop or in mov add enter out dec roll jl push sahf shl lcall fdivs lret out mov jbe push ljmp fs lea (bad) imul daa sub les rcll add mov or pop mov jae mov adc xor lods push and fmull in or xor pop dec subb (bad) (bad) (bad) cld int3 loopne fsubrl mov cmp pusha xchg adc imul jmp nop push and push lret cltd inc enter or inc cmp ret dec push gs or adc mov dec mov lahf jnp jnp aaa mov xorl pop ret fwait lcall adc xchg fstps fadds add cmp test mov adc and push lahf jp or aas movsb and dec in (bad) mov mov cmp std jmp rorb into xchg pop adcb lock and out jl pushf out aas pop std (bad) into (bad) cmpsl add pop xchg or (bad) xor scas pop stc adc xor sarl icebp pop cwtl (bad) repz jp adc fildll xchg jb or jbe lods xor xor mov xchg inc shl (bad) outsb mov xchg add push lea xor test inc notl cmc add pop xchg mov adc adc call fsts aaa and sti (bad) sbb cmc mov sbb adc add cmp mov sbb stos leave mov add ret pop ljmp jge icebp sub fadds sti adc add (bad) mov or cld bound mov popa ja sbb dec js les inc icebp sub dec int push xor scas dec jmp pop push mov outsl aad outsl add cmp popf data16 ja adc pop pop add mov dec adc add xchg mov sub data16 jecxz (bad) hlt gs sbb mov cmp lea adc xor imull jle ja xchg jno sbb test add loop cmp iret int3 mov shl or inc dec add stos insb movsl leave jmp adc shl (bad) pop xchg ret jp,pn arpl pop test xchg push mov loope xchg out jmp or and and jns subl push add int pusha stos aas roll inc (bad) mov cmpsb sub (bad) cwtl lcall outsl in jmp and (bad) not pop jmp pusha (bad) cld xchg adc xor and mov cmp call cmpsl jmp pop pop jmp call mov push xchg mov inc add fimull mov add mov and sbb or inc lret aaa or nop jae mov addb movsb sbb dec cmp pop popa xchg jo jne (bad) dec (bad) xor insb or xchg pop in add jge jne idivb jae imul clc cld cld cld arpl cld das call xchg inc data16 jno out loope je rcll les movsl inc gs hlt jmp cmp fstpl push test mov fnop mov sbb (bad) xchg test inc mov xchg lods add push std xor test cld ret lcall and repnz dec inc jecxz sbb xor xchg add jecxz (bad) inc shll cmp jmp sbbl rclb arpl (bad) aad stos xor rolb jecxz add in repz inc or adc sbb add add cmpsl xor pop fnstenv or sbb adc add inc mov sbb rolb (bad) imul dec xor pushf adc das xchg inc ds mov sub repnz fild cld inc xchg sub cld enter std xor mov sub movsb jnp adc sbb (bad) incb jo sub xor xorl adc ja or data16 mov in push (bad) xor or cmp jmp push mov sub cmp aaa push cmp or push mov mov test clc inc add mov inc or adc rolb adc jecxz es cvtdq2ps dec insl cmpsl call adc shrb mov lods insb sub mov pop xchg bound push dec fs cli pop add pop lcall pop outsb push jmp sbb orl add add fucomi test rcr mov mov fisttpl lods add daa ret jle (bad) jbe add xchg lcall jb or inc into insl mov test jne inc push adc fist stc andb sub pop mov (bad) xchg mov push loope cmp pop jle nop pusha (bad) arpl jl jle pop fimull mov lds pop or pop rcrl inc inc pop and push pop ret jmp mov or repz dec mov insl adc add sub (bad) dec shl mov and jge (bad) push push sahf xchg adc sub cmc nop ret inc xchg cwtl repz adc mov add xchg xchg test inc xchg dec ja adc (bad) popa ficomp mov or adc xor sbb add pusha out sbb add or out xchg and popa sbb jge into jge and pushf rorb lock push pop jne inc loope hlt in lea add out (bad) jl dec mov add xor push mov sub fcom (bad) shr cmpl cltd and mov xchg add jl pop adc fwait ret enter fistl jno aas or add and pop pop dec cs fcoml cmp into sbb or fsubl and and out sub adc addr16 mov jecxz punpckhdq sub xor movsb xor or mov ret fnstenv mov sbb xor shrb out (bad) testb stc pop xchg push cmp add and rorl (bad) pop pusha fwait inc xchg pop rorb ds push xor fsubr shll lea (bad) and mov and push adc add sarb inc xchg les clc xchg sbb jb stos jmp je mov jae cmp inc dec add popf or ret xchg jmp popf mov adc or lret js vxorps aam dec and inc push icebp std rolb mov lea or rcll leave and jl decb andl mov mov rclb mov fmuls add ficoml xor sahf mov mov pushl cs in cmpsb enter add cli or test push (bad) test inc loope push inc cmp mov or cmpsl xor or daa adc inc cld jne call or adc inc (bad) dec jmp mov xchg (bad) mov inc call les fnstenv adc imul mov xchg js dec xchg js xchg jl mov push sub xor (bad) xchg out sub mov pop mov mov mov les jbe mov (bad) roll loopne jno jmp ja mov adc movsl sbb inc or and pusha add pop jae push push inc (bad) in shr out jp mov jecxz xchg (bad) mov outsl in jecxz addr16 xchg mov jle inc imul aam lret xchg sbb rclb popa jle dec pop jbe and jo insb mov and (bad) mov ljmp in pusha sbb jbe and (bad) dec adc mov (bad) jns xchg mov ret or and pusha dec jg or into aam adc sahf mov rcrb dec nop jae dec push sbb jo push or loopne inc sbb jno add stos call jecxz ror mov pop add sbb rolb push adc es mov std fs mov std jge jb ds sub (bad) and nop bnd movsl pop push gs or lahf popf or insb pop fsubr and xor push add mov pop inc dec mov adc and add adc into in sbbl xchg vmread push or xchg mov int xchg adc shl push push aam ss fsubr or push je adc inc mov out jmp and push sub rcrb cs jp adc (bad) jmp rolb call nop loopne push pop and push push test push js mov add jnp jg lret adc popf daa push (bad) mov in je je xchg repz jb sbb lds aad pop xor ret movl sbb cmc sub pop push jp mov xchg cmc push sbb sarl and cmp cmpsl iret mov or mov popa pop push sbb jae and cmp sbbb mov pop aas jp mov and fwait pop sahf es push data16 in repnz dec xor in push add dec mov aam sbb mov in add sbb call nop inc dec dec pop das pop stos pusha les fild ds sarl push or jno push jo sub and ret inc inc mov add fwait sub test push sbb shr call pop mov and dec mov aas mov xchg mov (bad) (bad) (bad) push xor ret out jmp ds and cmpsb push add and jmp aas outsb stc mov movsb jb rol push jnp pop sbb pop mov rorb adc sbb jl mov inc (bad) push and cs or adc add fcmovnbe pop outsl xor fsubl movb roll mov sub jecxz add mov pop jl push or adc and ret ret (bad) out add sub jns je or lcall fdivs dec idivb and ss or sbb or adc cwtl adc paddusb es dec jo stos inc pop mov lret adc cmp xadd imulb test jnp je jg loopne or push mov add mov mov fs aad pop shll out cs xchg push (bad) pop xchg jne lods lods cltd mov cmp loop test xchg jg enter jge pop lock add pop cmp and dec push stos int cwtl mov dec inc stc push sub imul out js mov cs in pop cmp pop jl add mov cmp pop movzwl sub xlat movsb call stc stos shr std movsb cltd lock and pop mov push ja es repz mov push push inc fidiv dec in jl inc adc jns andb or loopne sub daa push rolb mov sbbb xchg inc lods mov mov test loop insb rorl (bad) jmp scas pop sub lahf push (bad) jb push pop jb push test push jo cmp push and enter insb into in add mov add pop ja sbb jb jo push push cwtl sbb add mov bound add test xor pop adc jg repnz aam lock mov sahf cld and push in jns adc push mov es leave gs sahf sbb je xchg das dec dec inc sbb push jg out push (bad) hlt add lea pop test lcall in iret push (bad) xchg push decb jle xchg mov mov repz ss or sub dec push enter (bad) rol rcrb je push or mov xor inc and jb (bad) out pop push (bad) test push (bad) aaa mov dec xchg or cmp jb in (bad) jno push and call jns jae std add cmpsb les lods push aas shlb ss loop add or add push xchg push or pop inc push loopne sub and mov and sbb cmpsl jb ret negb sbb loopne push xor cltd cmp mov pop hlt leave pop mov (bad) call push jae sbb push call jb icebp and mov push and sbb pop ljmp push and push popa inc cmp sbb lock lret xor ffree es xchg shrb adc or inc inc (bad) sub roll xchg (bad) in sbb enter aas lea adc outsl sbbl roll cmp xchg (bad) lods test adc shr in mov push sub aas sbb push jp add xor mov rorb fdivrs add inc add dec in jl xchg pop stc das cmp in scas sbb (bad) (bad) jns jae xor jo nop xchg push sbb add push ljmp shlb cmp jo dec jp fstps jb lret mov ss pop pop mov dec push jge dec clc mov sub leave mov std or fldl push adc fdivl (bad) inc (bad) (bad) inc stc loop idivl (bad) decb fsubs or push jge,pn std out (bad) call in pcmpeqw call sbb repnz dec imul in call xor xchg adcl out xor in push pop movsb push push into add push ljmp mov movsb lahf jne sub pop cmp mov or mov pop and pop push fldenv or jbe dec add fwait or xor int3 adc dec sahf in cmc call inc jmp pop or adc loope sbb jno or inc jmp insl imul mov mov jb push mov add rcrb cmp and pop repnz xchg pop and sbb cltd or cltd fdivrs jne repnz cmpl loopne test orl ret sbb cmp loope or ljmp mov or add fidivl insl mov cmp (bad) movd rolb jbe jmp xchg pop pop nop sbb popa jecxz inc or test leave mov sbb adc js mov int3 mov push repz insb add add push mov or scas je ds push test push jno xchg dec or js sub icebp vunpckhpd xor add stos sub fcoml or popa sub adc xchg pushf and mov mov sub mov pop mov cmpsb mov insb or aas push lods ret mov add fcoms ss or ja outsl cmp fdivl lods sbbl into push sub int3 ds movsl sbb (bad) jnp sbb nop shlb jge push and sub push xchg inc adc jae sbb call add dec inc lods popf adc or mov or push mov scas inc je add mov pop fadd adc leave icebp and lea fwait add dec fisubr cmp hlt scas add mov mov in dec lret jecxz int3 shll cwtl pop cmp add mov adc cmp add bound test mov cltd push lea jno add shl jns sahf mov cmp jns mov jae dec adc fadds cmp xor dec sahf xchg and loope jge mov cmp xor or push mov das dec pusha xchg popa iret orl stos push gs leave adc pop sbb test pop pushf sub and add sub add sub adcb and jne sub push dec adc scas ds fisttp pop inc adc dec and jb push cmc adc add cld adc add ret and jl mov or and rorl (bad) fsubr sbb (bad) orl je mov or clc dec mov or (bad) jbe adc loopne add (bad) cmpl jmp scas lods jl and push enter call mov imul or dec fidivrl jmp push cltd mov add add pushf mov arpl call and add daa pop dec pop sahf or cmp je xchg jge sub insl add test xor or and add xchg add cmp mov imul inc jmp repnz xor adc adc pop mov or or jb mov xchg rorl call inc inc xorl andl (bad) push push push sarl jbe popa cmp and ret xor call inc frstor push adc fldl mov add jb loopne cmp dec adc jne sar sub inc add pop mov sub fdivl sub clc add mov push into inc sub insb cmp jmp mov adc cmpb test cmp jb gs push push mov clc adc lods out mov jmp jmp in inc xchg popfw (bad) shrl xchg pop and xchg adc (bad) push mov movsl jae push adc aam push out push adc mov mov push dec inc popa add jmp cmpb or rcl cmpsl jno scas add cmp or add inc paddq add sbb (bad) inc add insb jbe add mov test xchg mov fstpl jb cmpsb cmp sbb cmp in aas mov or cmp jmp jbe pop mov jo or push stos rclb inc cmpsb out popa xor addb outsb and lods enter cmp mov adc mov xchg arpl movsl xchg lock movsl push or inc popf popa dec xchg hlt inc dec call repz dec insb ret sti (bad) xor icebp jmp jge and mov (bad) je shrb fcomps sbb xchg mov sbb sub inc and inc dec lea mov fucomi push test add sbb jl out and cld ss xor iret or cmc sbb and leave mov int3 and arpl stos ss outsb arpl pushf sbb in es mov xor test mov mov aaa or movsl cmp add xchg arpl faddl pop jo addr16 jb or push cmp or cmp sbb loopne (bad) bound pushf lret lret sbb jle mov push into aaa fcompl loope pop add push push iret xor sub xchg sub mov movb sub fbstp jmp mov (bad) loopne andl aaa inc xor stos ret rol rorl frstor mov and test mov lods push and sbbl (bad) cmpsb mov jno add out call leave mov popa (bad) xchg xor ret dec push push loopne dec sub icebp sub mov add popa into ret pop ret and push dec add mov lods or jg popf push loope call call sti notl leave addr16 imul pop mov in pop ret out mov pop inc lahf push std add add pop inc incl das mov pop flds mov int xor xchg out pop sbb std push leave mov out fstps jnp xor pop mov pop test xor nop pop jbe mov cmp or jb inc push xchg movsl data16 lret pop xchg shrb call sbb std shll push (bad) movsb paddusb mov enter cmpb out push pop jo pop jmp jge mov and or repz jne pop es jb jmp sbb orb inc test push jo sub sbb inc sub ja jge fimull jne mov je xor (bad) xchg je push pop jae inc push inc pop ror mov mov popa push add rolb or mov loope and sub ret pop sub and adcl cmp inc and out pushf mov pop call pop dec sub enter xor lock (bad) (bad) mov push dec sub jno scas pushf or dec popf dec cld push dec mov inc add enter inc lret mov mov xorl pop call mov push xorl push data16 pusha rorb push je les js insl cmp loope jle cmp jno sub inc jmp movsl (bad) pop adc dec and (bad) mov fdivrs in pushf jecxz push (bad) sarb push jae cmp cmp mov pop sbb push or cmp dec pop dec rolb cmc mov mov jns add incb and repnz jae movhps add mov push add lods test adc and xchg repnz scas enterw loopne cmpsb enter cmp in das int xchg les push inc pop test sbb pop jecxz fs cmp inc cmp icebp jo and lods xor pop iret xchg dec sub xchg dec pop jb xor or enter dec xchg and pop mov mov fsubrs xor repnz and or (bad) pop and sub and add mov fcomps and inc dec mov pop add sbb ret stos xchg imul jl sub adc mov and adc rclb fs inc cmp insb loopne lret add outsb mov mov cli mov lds cmp daa jne xor add ljmp cmpb loopne pop xchg mov push jo orl pop xor or fldt pop dec fwait mov pop fidiv rcrb mov xchg pcmpeqw cwtl ja dec cmpsb imul ja mov ss sub inc mov repnz sbb sysret push pop das mov mov jge jmp in pop test and push mov add sub dec pop mov xchg xor mov add xor (bad) int3 xchg and cmp push xorb in bound dec adcl cmpsl cmpl add push scas dec inc lea push or in in push dec push movsb inc xor nop popa mov imul push sbb mov or lods mov aam sbb jns sbb daa xchg cmp xchg mov ficoml dec (bad) push mov ljmp jo es jg xchg xor insb xor (bad) repz jae les subl mov out enter enter lsl nop lods add test mov xchg jne jge inc sub pusha jo inc push int sub inc outsb mov jns cmp imul mov pop sarb jmp push mov gs das sbb mov call stos nop mov mov jmp pop mov les popl les mov hlt mov movsl int3 add and int3 int3 sbb mov test stc pop movsl int3 mov test add push sub xchg push cmpsl cmp push sub call mov mov test cmpsb (bad) sbb cltd pushf cmp push mov mov add xor pusha mov push pushf mov and inc scas push std sub add ss vpcomw rcl push push movsl ret or flds inc mov xchg das jae enter pushf test mov incb xchg add add xchg and mov rclb mov insb xchg loopne rclb cmpl (bad) mov sbbl push adc mov mov rol inc enter call arpl sub repz psrld (bad) enter (bad) fisttpl iret imul lret push loope dec test cmc add mov call lahf cmpsl std adc ss lret ret or dec sub insb imul push push loopne sbb xor dec out cltd push pop adc das rolb mov fwait inc mov pop inc mov pop mov fildl jl or xchg pop in inc mov dec or addr16 (bad) push ret sub push add cmp pop inc push mov mov fild inc cmp xchg mov inc lret or mov add xchg sbb imul cmpsb mov or xchg in or dec adc repz std or cmpsl add sbb dec jp mov cmp mov cli shl sbb aas stos mov add test add or inc mov adc xchg mov jno bound jae repnz or je push cmp adc xchg cmpl jmp xchg leave and xchg das jne xchg hlt mov daa adc orl jno stc jne sbb jns push hlt add (bad) and add mov add in call push mov ror adc test or out mov loop or xchg das into js mov lret add or stos inc add outsb push stos xor hlt (bad) xor outsb mov lret mov cli push pop mov add xor fdivs decl test mov loope adc or ret push call int3 xchg add cmp dec and inc sub nop push sub dec xchg lret xchg xchg or or dec inc push pop xor mov cs pop pop push or ljmp rcrb or push inc sub pusha push sub jb xor add cmp and mov jb pop and push pop enter jb mov je cmpb adc push dec and inc xor xchg jp xchg jae cmp sahf loope data16 rorl js mov add sbb sar push aam je add jb rolb aam ret movsb rcrl add push xchg or mov mov jecxz sub adc or das insb adc cmp insb and je jmp es xlat call mov jns inc mov xchg je cmp test outsb add bnd mov nop sub inc pop cld inc (bad) bound push outsl call aad sub mov push aad add call test gs sbb cmpsl jns and add popf addr16 stos insb xor and pop sbb ret xor lods call add les and or jmp iret arpl jmp nop lret test jae add test je push xchg sbb mov or cmp or xor test dec jb and lret sbbl mov xor mov lock popf inc hlt leave and iret jmp in inc aas dec sbb inc (bad) in sub dec gs jnp inc sbb inc push and inc push push and jp or mov dec or sbb xor mov mov stos adcl scas add clc mov stos mov lods sbb and xlat xor andl xchg dec pop add push jo adc fcomi in leave xorl in in je fsubrl aam dec daa in or cld jbe mov call sub and pop cmp jns add dec dec mov repnz cmpl mov jmp sahf fimull add shll pusha dec repnz negb les cmpsb data16 mov test imul jecxz out adcl dec inc jb dec in push push add nop lret repz add imul sbb add pop pop dec aam addr16 dec roll shlb ret (bad) int lret dec in lret push pop sub cmpsl xor pop inc push pop int es lods inc popf add addl fstl sbb xchg and add add mov in xchg dec movsl jb insb imul and jmp repnz adc xor mov inc dec outsb fbld pusha (bad) lock jg pusha xor sub and cltd fbld and pusha sub repz push repnz das ljmp dec and lock incb test dec push fs push pusha cmp js cmp jmp cmp or cmp andb cmp xchg out mov je popa or push push enter aad daa addr16 aaa add sub sub test jmp cs mov outsb push inc jo (bad) repz pop mov dec jae movups inc add mov rcrb add pop cmp push outsb sbb and and dec clc push call cmpsl xchg xchg out in mov dec pop roll gs (bad) mov aam add popa sbb add sti pop and loopne or lea aaa stc cld loope sbb and mov std push imul or movsl or insb lods mov cmpw or test jb adc sbb fldln2 add std sbb ret test dec mov movsl sbb inc inc fidiv cmp add call rcrl sbb fbld iret sar ret adc inc mov daa xchg addr16 (bad) sbb in clc incl xchg lret inc clc jmp push dec push enter inc jnp xchg cmp std (bad) (bad) (bad) adc sbb push fsubr jl lea inc pushf out nop int outsb jge std int3 cld xor mov jno and ficompl and xor sbb sub adc or int add std (bad) outsb cmp arpl dec (bad) int sbb push aas dec je je jp mov stos dec daa rcrb mov or std dec or outsl cld add xchg (bad) test pop mov add imul or (bad) cmc iret out push and cmp pusha or mov add push sahf paddw subb lods or sbb or mov add jmp fstl aad sub xchg pushf sbb mov repnz aaa xor and and insl xchg mov into sbb je fsubrl negb jno popf fdivl addr16 cmp popf test mov lret cmp add pop xor add sti xchg cwtl mov inc xchg and gs or mov lds pop jmp pop mov pop mov and inc incl lcall mov iret push dec cli sub repnz or or frndint xchg lret lock lea das dec in pop or sbb sbb sbb mov jne xor call rcrl lea stc sbb cs sbb enter jo shll jp xchg add arpl jbe add sti or jmp jne mov aam ret add in cld rorb test sbb add add sbb dec in test aaa (bad) pop cld (bad) xchg pusha dec cs xor lret xor hlt sub stc sbb push jae imul (bad) lock and sti mov sbb inc adc scas or shl imul out out xchg xchg in cmp adc inc (bad) in or aas in hlt sub jns rcrb push sahf mov add or adc movb pop add lcall pusha inc inc in jg xchg dec in in in xor mov pop sub xchg in in (bad) in inc cmp addl in push in add in leave in pop push out pop fisttpll jae adc and (bad) mov daa std pop cmp jb or inc mov sub cmp idivb aam inc testb ret imul push fisttp xor sbb fldenv test add (bad) add dec stos mov js lret sbb mov sbb adcb out push add push lret mov cmp lcall in or pop es add or mov fildll lock imul fnop sub jb (bad) xchg daa inc add jg inc cmpsb jle test xlat push add outsl push dec jae sti test clc pop sahf lret clc push pop outsb imulb inc xchg inc mov cmp xor mov add repz pop mov mov mov or jg push jl cmp pop (bad) cmpsl adc or pop (bad) jb add rorb xor hlt clc pop jmp adc cmc add psubsw inc adc xor xor outsl repnz jp sbb test cld adc jmp andl xchg lret or setns cld gs in vpslld rolb adc and dec (bad) and cltd outsb (bad) je dec jae,pt pop xchg loopne loope and push imul inc and xchg std pop pop int3 sbb enter xor xor xorl push mov repnz out add in xor push sbb xor pop push sar sub xor xlat les push ljmp shrl icebp ja aad rcr adc jp das popa push and jo pcmpgtb dec dec and mov test mov enter adc pop adc cmp rorb imul lret pop xchg push inc and dec repz clc push inc adc inc scas jle adc mov in pop ret cmpsb ss or fisttpl push inc or pusha cli and cltd sub sbb rolb cmp repnz andl je loope mov fmuls cmp xchg mov mov in call mov aad leave in mov adc xchg cld jmp inc inc adc jecxz cmp orl mov sti mov add sbb push (bad) push adc lock roll adc xchg int inc movups and gs add push movsb adc das andb sbb enter int and in mov inc inc add dec jbe or dec stos jae in pushl or inc add sbb ljmp arpl cs stos cld push test pop add ret imul jo,pn xor or cmp push call xchg lret popf xchg inc gs loopne cld push add dec lock cmp test xchg int3 aam cmpsb es imul ljmp xchg jno push jbe sbb xor xchg xor je ret mov adc loopne shll fisttp inc stos mov ljmp vmread jns mov adc outsb jno (bad) adc ljmp bndldx xchg test push fxch add mov lods (bad) std add (bad) lahf inc inc sub call push and and mov lahf std fs shlb dec cmp pop inc insl add sbb dec xor clc (bad) cmp dec les sbb jl je inc call and rolb scas mov rcrb pop mov std pop jb mov and cs mov ret outsl icebp adc je cmp fwait lea jno mov xchg sub inc push sahf lahf lds lahf loopne movsl or iret iret and lahf mov gs cmpsb sarb sbb adc cs iret xchg shlb jl sub add xor mov std rorb addb std fsubs daa dec xor xchg and enter fdiv das (bad) xchg pop sbb in dec mov adc imul sbb jecxz sbb or adc sbb fimull pusha pop mov sub (bad) mov pop and mov or psubsb cmpsb add push and xchg mov into fcomps icebp mov test repz xor loop push sub mov inc adc mov inc adc and sub or fs or xchg mov xchg leave int jp jb cmp add sbb and adc sbb sub mov add and cmp ficomp es shrl stos fwait leave leave int3 and xor or daa ret insl and push pop pop insl and enter mov daa sbb and loopne std lcall push stc aaa add data16 inc jb push adc mov adcl cmp jne addl mov mov sub jae mov loopne push xor in pop std jns das sub leave scas push jne jl imul sbb and and cmp push push adcl pop (bad) nop pushf stos jg push call daa dec enter mov jns cld dec adc mov lods sub outsb cltd sub cmp sub pop loop and (bad) or jo and pop add or cs loope dec les add out inc or inc sub mov jmp mov (bad) push test test add (bad) and inc inc ja andw cmp int3 pop or add sub pusha clc and push and and dec rcrb push bound dec xchg inc xor cmp orb cmp fidivrl popaw add cmp neg cmp inc imul dec and add pop cmp aaa fstpt fs dec sub mov jmp and xor jp lcall cmp xorl dec leave adc jp nop pop leave lret cmp adc arpl sub in sbb add sub pop push and cmp xchg lock dec inc inc inc enter and mov jmp cltd in add lods inc pop push mov push mov mov nop (bad) xor push rep pop adcb and mov or stos lea or xor ret in enter adc mov sbb add inc mov or cmpsl push std cmovl add fldcw mov xor rolb push adc fcomps outsb add add push inc cltd dec mov ret fistl push gs cmp into sbb rolb test jb fimull cli xchg out (bad) call and mov sbb pop sarb push jmp push mov or fs addr16 fsubrp das cmp jg push xchg or fcmovnu push sbb adc and std insb icebp and fs (bad) (bad) jge (bad) imul dec pop pop in adc sub je xor xor into je inc inc mov pop jne cli lods xor push test rclb call cmp dec cwtl sub xchg test and dec adc fsubrl data16 xchg mov fiaddl and (bad) pop jmp mov add sub pop xchg rcrb mov xor out dec dec outsb add out cmc push loopne shll mov (bad) clc mov ja jl push insb or rorl cmp mov ror pop out push lock iret leave rcrl stos push add nop test and out push inc jb fistpl push sbb fidivl or pop in mov jae fidivrl jno icebp jo push leave pop cs and stc mov sbb jle std (bad) pop xchg hlt dec sbb adc lcall cmp je ds clc fnsave pop jne in xchg push push bound mov jo xchg fld mov pusha push xchg jge or mov jp test (bad) mov in (bad) lahf push push mov pop mov jmp dec jb call repnz add mov push and arpl sarb adc ja dec movsb xchg cltd sbb dec lcall enter cmovns (bad) ja dec adc mov jne push (bad) or (bad) std pop mov lret lods cli fiaddl and xchg rolb sbb call ret push sub sbb jne cmc push jbe (bad) mov inc pop pop mov (bad) and dec stos xor outsb jp dec lret and mov mov and xor pop pop in jge add lret dec inc push idivb adc orl mov xchg adc add or dec les lods xchg int3 and inc js push test sti (bad) punpcklwd shrl adcb (bad) (bad) push mov call push or std in sarb pop leave aaa adc or pop ret jnp inc loope cmp sbb xchg push add fsubl push push mov inc ds lods mov in cld or mov outsb pop test repnz pop outsb loopne lret adc je xor fcmovnb push xor adc cmpsb adc pop mov int movl mov jnp call mov insb fsts ds nop inc rorl sahf out scas sub rorb (bad) or loope loope add sbb gs lock pop mov adc mov sahf das ja and inc sub cltd jnp jge (bad) inc pusha add rcr loope scas js in test cmp inc jo (bad) es movsl push sub mov mov jns jae add mov ljmp sbb add inc ret xchg or imul cmp cmpsb or repnz cmp cmp fsubp mov sbb loop in push mov sbb leave and rcr add in xor call cltd inc dec and sub scas and add add mov mov cli pop or cmpsl jns clc or or dec push adc rcll jle sub xchg test sbb push inc dec iret and pop jno jbe adc adc xor pop ficoml pop inc iret repz push (bad) or add imul cld inc (bad) ds jo inc fs pop add push sar sub adc pop add add adc pop lock xchg ljmp jl or dec mov pop jns push (bad) fisubr jl aam jle mov cmpsl or cs sbb inc pop inc fiaddl test inc clc pop fmulp add lea sub inc pusha add ds cltd jle pop xchg xchg add push sti outsl mov dec in hlt cltd div test inc mov fdivs adc mov xchg into imul xchg inc ljmp orl xor pushl andb (bad) or pop rcrb add jae cld clc sbb sub mov (bad) popa jmp imul push in add add push sub popa mov sub pusha loopne pop pushf pop movsb mov push add mov je mov jge jecxz lods (bad) fmuls sbb jl leave orb add xchg jo jo sbb push mov inc push push fs inc ret xor (bad) cmp call pushl push in push dec or fcoms outsb push clc add iret xchg cmp or loop and jo movsl jns cmp es cmp in push fimul fldcw jl iret ror sub add push adc loop pop xchg clc ljmp cltd sub jbe lret lods test es sbb test inc jnp sbb xlat sbb (bad) insl sub sbb cmp sub add adc je xchg adc cmp mov cli or sbb icebp outsb inc adc lea push into cmp enter add bound call loop pusha cmp cmp pop fildl les ljmp fstps add push adc insl sub jns test push jp jge mov nop or fsubl popf mov sbb mov dec rolb lods jg add jb rclb dec inc pusha hlt xor mov ficompl xchg add nop pop call pusha add mov mov dec or or dec sbb andb stos sbb lcall lret jge cmc in and add rolb adc and mov scas ret inc add add clc rcll ret insb ret jle idivb dec push lret mov adc test lods rorl jmp cmp pop adcl mov and push popf or (bad) mov push sub lret cltd push out sahf push into sti imul jne cmp push scas lahf loop push das jne inc out sub push mov into jno clc add add cmc int3 in jne push in push pop add roll mov mov sarl imul mov mov adc push aad xor push cwtl inc call sub pop push sub mov clc add ret iret in aaa mov pop in dec adc sub fbld pop push sbb movl repnz ret jbe shll add enter and sub sub adc add xchg je call inc bound lds call dec cmc fist jg jge cmp jle sub pop lret jmp sbb fwait stc gs add pop or add mov imul dec clc and insl iret xchg shlb add jne outsl xchg inc pop adc pop shrb mov movb ds inc add add hlt cmp add mov add mov sbb mov add and inc movsl dec sub inc and clc or fnstcw sbb in fdivrs cmp (bad) lret ficomp push sbb (bad) in int xchg mov push sti int3 js pop xor jecxz rorb bound mov add les sbb inc mov lea lock add test push loope fldl push call add mov mov or clc sbb (bad) adc cmp fmuls jge test mov xchg sub add pop pmuludq inc push aam add stc add sbb jb cmp mov icebp dec sti sbb call sub dec les rcrb mov cmp pushf lret call out xor push lods or icebp or ja je int3 pusha xor or nop aas repz ficomp lahf xchg xor xor (bad) jno push dec xchg lock les repnz popa adc inc rcrl das or xchg icebp push cld nop vsqrtpd xchg and nop daa cmpsb ret xchg add (bad) inc or push ret lret and lock cmp out bound fwait push pop jmp in mov in jae insl enter repnz sbb jb jns daa pushf repz push loope (bad) cmp call mov nop loope cmp mov pop inc loopne inc or mov inc xor mov loope add cs inc mov mov (bad) out add lock loopne pop or jb push push insb stos movsb or lock jp mull mov cwtl pop push movb or inc lcall cmp mov sbb sub adc loope outsb je push adc xor cli pop lea ret sahf push push iret faddl adc add add xchg (bad) pop leave add sti or pop cwtl sbb add call (bad) xor jne jb,pt push add mov inc sahf xchg (bad) inc or cs outsl popa sub mov xor js inc dec pop push (bad) adc add inc inc mov and sahf mov xchg mov imul and repnz inc sub xor xchg adc sbb lock or mov fs sbb push into adc ljmp negb (bad) jb sbb inc mov loope or es mov popa fistpll fmuls sbb jl dec outsb inc xchg push inc (bad) hlt jae jmp mov cmp adc mov inc push sbb scas or mov ss xor push lret popa adc xor arpl push xchg stc pusha stc xor cld jg lret sub pop cmp jge push add cli outsb rol ret mov sbb lods stc add add icebp ss add pop (bad) (bad) movsl xlat push in sbb pop jp je and lock mov jno cli fidivr popf or jae nop add pop push xor shlb push addb loopne xchg aam sub sub lock lea sahf mov pop cmp insl xlat gs xchg and push inc inc ja pop and sbb or inc or lret enter or cmp (bad) mov push push or dec sbb sbb int cmp loope add pushf jge mov adc test jg sub jmp adc call stc inc jl mov imul and or pop mov enter scas stc push adc or dec arpl cmp and push pop mov jne push inc jo insl shr xor inc cmp leave in gs aad add lea inc aaa push ficompl or jl call test test dec aaa or icebp cwtl shl andb roll dec js sbb popf adc xor orl outsl pop ds push jl jmp adc mov enter in ja jle test (bad) jmp adc sub jg sarb adc or test cli mov and mov shrb enter dec inc xchg mov std jecxz xchg mov lock mov add in les mov push jecxz frstor sti lcall cld jmp mov xor and pop pop add sub ja and enter or or ljmp xor jnp lock ret addr16 test and inc pop popa imul add jnp stc cld sbb out xchg aam or mov loopne pop js in inc push dec sub sbb mov jns inc pop inc sbb adc cmpsl inc add xor loopne sbb sbb dec add jo inc pop pushf rclb or push or pusha cmp adc and lahf xor ja out mov or xor inc and adc fcoml add sub ror sarb loope adc mov loope xor out ss and mov jecxz sete (bad) stc loope sub mov and lea add add jae push sub cmp and mov hlt or lret xchg orl cmp or ljmp rclb fidiv iret add fisubrl inc cmpsb imul das mov add or je jmp add push push in sub lahf mov add sbb mov movsb fidivr outsl push jb or and lret loope sbb push add or lret dec sbb or add sub decb push inc mov psubsb insl call es push cli cmp inc cld sub ss or sub incb enter pop mov call jmp sub xor out or call mov add fs sbb lods cmp sub pushf sarb xor clc cs inc (bad) or mov xchg inc cmp pusha outsb out loopne fnop enter and fdivr sti rolb movsl (bad) out pop leave aam cmpsb dec pop pop xor sbb cltd les ror cmp and xchg in push in out cmp repz ljmp stc out sti out aas addr16 push movb jmp or sub push push loopne gs mov sbb xor adc lea ror jbe maskmovq sub pop pop dec xor xor ret jp pop lret adc out popf (bad) inc jne push jne and movsb jo pop add mov shlb xor adc out mov enter loope lock sub test sbb push lock pop loop adc lea add mov adc mov aaa mov ret imul les (bad) subw inc mov cmp jp add dec leave aam (bad) outsl (bad) adc or add or sub call jbe pop mov (bad) aas xchg nop push in or and aaa push jecxz sub pop neg lods stc jge fidivl or xor add add mov push or push out sbb dec movsl (bad) jae pop seta sub mov shrb mov addr16 incl and jg add mov dec cmp lea push shufps inc jne movb outsl cli push add data16 add ret sub mov (bad) push push aam jns add cli cld push sarl and mov into and or out push add add scas sbb mov push pop dec (bad) jne ror mov mov mov mov lahf xor test push aas and or fidivrl ja aaa ss (bad) std jl sti xor pusha push and rcll imul sahf rol fistpl sub test inc xchg push sub pop or jmp pop mov jo in pop jmp imulb push mov in jle mov mov es xor xor repnz orb aaa inc jle sbb gs push fiaddl push jmp or scas das movsw xlat dec or js nop dec insl push mov xchg xor lahf push pop pop faddl loopne sub sbb cmp sbb add ljmp popf xchg test push inc pop test and jne jo insb enter les adc or mov sub pop push mov adc dec loope xchg or frndint push cmp lock xlat ds add mov jbe movl push sub lcall nop fptan rcrl jno mov inc dec pusha out call (bad) fbstp push movsl sbb jl adc add inc out (bad) sti orl lcall or pop dec adc mov push jmp inc adc addl test mov pop jmp mov test jl push std push insb mov sti shll stc jmp lcall (bad) clc inc lret clc je rolb mov leave popa mov sti jmp mov sahf xor lds xor out mov sub lods dec push mov mov hlt (bad) enter push xchg or scas popa or das cmp add int adc scas ret cmp das and loop pop adc fwait in fisttpl dec nop (bad) mov pop out into repnz xchg andps shlb jns shrb inc and push (bad) mov sub (bad) loopne jo mov mov loop jmp xchg dec lcall push dec (bad) or cmp shr (bad) jl and push sub (bad) mov fdivp nop js dec (bad) dec add inc pop fdiv arpl sti (bad) lock (bad) pop (bad) jo enter inc add int (bad) (bad) and fadds lret loop (bad) jle adc test je and sub adcl gs out push arpl addr16 fisubr lret push jnp push cld push pop or js lea std inc cmp sub aaa call mov out mov pop dec cmp stos testl sub pushf mov test mov sbb sub cwtl je call sti push push push cmp adc mov and add jl ret pop inc cmp jge lret mov cwtl sub mov inc pop sub push mov adc and push aam fisttp lock push (bad) fiaddl (bad) hlt pop fcmove mov sub shl ds sub not add mov sysenter andl mov icebp xor mov out xor out es shl lods data16 jl addb pusha sbbl push js pop and sub dec out inc inc push or mov nop and or les faddl mov int add mov and mov (bad) aas or add loop hlt jl push hlt jne call fs lea stos je loope add jmp and lret loope pop sub popa incb add pop dec or stc jge sarb and jno clc jg sub mov dec jnp jae mov dec add xchg iret jnp mov sbb test ds or bnd jl mov popa lea add pop xor push push andb aaa add cmp push (bad) call jg nop xchg adc jecxz sbb imul stc or push sbb mov iret insl rcrl fsubrp or and mov scas add dec loope pusha rclb inc lcall add pop (bad) cmp xchg inc mov push inc mov or mov lock lret sbb or rorb cmp inc push pop add aam (bad) ds call (bad) mov jne out cmp jb int3 inc jecxz pop adc rorb xlat (bad) xchg cmpsl mov add inc or push sub in mov fimull jnp push mov mov jbe inc jns (bad) loop add lock inc push insb mov sbb inc cld pop dec cmp inc popa xor adc adc mov lods add cmp sub call and adc rolb mov inc jmp dec add sbb lret or enter loopne fist into mov jne jg or shl shr or add popa sub cmpsb rolb and mov je inc iret je ret xor xor or rcrl add lahf push and out ljmpw xchg add and pusha aaa add push and dec cli or push call xchg rclb ficompl add pop imull fildl mov jmp inc sbb test push mov inc push inc mov rorl xchg and les cltd mov repz inc jmp sub or or out and adc sbb fldl fcompl push divl scas xchg push jne push rcrb or xorl sbb lea lret or push enter mov push add adc std imul outsb inc cmp xor inc jno lahf rclb shrb sbb pushf clc pushf rol mov and push in mov rcll adc rcll outsb mov fcoms dec and js lahf push movsb mov push call push sbb dec inc or cs dec jns neg or mov hlt call addb pop add in dec in or add ret adc inc dec xchg push pop or (bad) fcoml add (bad) mov test (bad) lahf sub pushf movb xor sbb outsl pop rcl sub mov shlb inc push lock pusha ret xchg push aaa mov hlt and es cmp bound mov cwtl ja sub call add mov fimul or std test ror inc jo pop pop or divl test xchg pushf jl sahf push dec inc xor inc mov fs mov in or sub mov cwtl daa fsubr or inc fnop xor (bad) sub cli inc call pop in add sti rcll cs repnz push pop fmul xchg (bad) or dec mov push or popa enter dec sarb pushf rorl jl jl push or enter inc (bad) outsl adc lods fs xor sub pop std inc lock push xor mov xor or sub xor ss pop cmpsl jns mov sub jae and insb push xchg xor xlat xor insb test jo cltd stos or mov ds cs rclb and insb and mov inc loop lock shlb adc or call or in pop je add jmp add es (bad) mov or dec pushl fs add aaa scas xor mov pop test test xor mov daa add sub push cs or out or ljmp fs jb dec lds shll pop mov xchg or aas or mov shr shl or into pop js mov adc jmp shl or mov jmp pop inc pop adc sbb jns xlat ret int add push mov or adc aam dec mov test test push fucom pusha insb ret fistl cli (bad) pop push add data16 xor dec aas adc insb pop or mov (bad) sub aam ljmp decb lock pop or pusha and cmp (bad) dec jmp push dec mov fisttpll lcall lcall jae je gs pop xor fnstenv pop popf movsb cmp ljmp (bad) and push xchg and mov incl clc and pusha add cmp sbbl and (bad) movsl adc cli std mov aas cmpsl push ror cmpb add enter sbb (bad) or pop jmp outsb cmp mov cmp cmp cmp jne (bad) jno inc leave push jmp sub pop test or call inc js dec cmp lea (bad) and rcr outsb les or imul or inc adc (bad) xor mov cmp es jb fs cltd cwtl inc fdivs and scas sbb mov lods pushf sahf or dec ret rcrb pop sti orb pushl mov movq sub mov andl and pop (bad) inc lock faddp subl hlt orb sub mov add and push aad out inc repnz outsb repnz push (bad) xor mov push cmpb cld out push pop adc notb test dec jae (bad) outsb lcall add push or push push and test (bad) nop ljmp cmpsb int3 push bound push inc shl popa adc add mov pusha cmp (bad) cmp or mov jge mov inc and cmp rcll pop add enter dec and jb adc repnz lock into add imul dec roll or stc insl lret mov push push pushf mov sub mov hlt push push lock repnz fcomps add iret ds or xchg mov adc fnstcw or adc push scas daa adc fdivl iret jo inc (bad) sbb inc repz lock lock insb mov inc xor mov mov mov push push push mov dec sbb push faddp and adc rcll push jae out rcll inc cld jge fstpl out es call daa jnp fcomps pop or pop mov aas insb arpl js,pn out jp das pop sahf dec push or xor jp stos fcoms into loopne icebp inc sbb outsl cmp jo jl add lock adc sarl nopl pop jns outsb or mov shl mov or maskmovq imull inc xorl jmp sub jne adc (bad) (bad) xchg push fcoml and aaa inc mov insl pop je stc sub out ror pop dec add jmp insb adc adc sub adc jno and add jp push (bad) sbb cltd pop mov adc mov add and addb dec mov fmuls xor mov xor mull icebp add rclb xchg dec sbb mov outsb sbb jns movsl mov push pop mov xor jne cmpsl test jle sti xchg and mov hlt fist push call mov inc mov pop cwtl cmp inc fcompl int3 mov dec popa or sbb jo and push push mov out ds add push and sbb sub cmpsl mov and cwtl dec push mov jl adc adc pushf stc fs jb mov mov mov imul mov adc jne mov jns sbb lcall comiss xor pop sbb push lods mov mov mov addr16 lock or ret cmc mov push mov sar sub adc push into fwait push popf inc aam dec and fcomp or or push add sub dec loopne add pop mov das or aaa jns dec fidivrl sub add in (bad) aas add pusha or dec dec jmp cmp pusha mov sbb and xor pop sbb add add imul adc test inc or add test jne mov rclb pmulhuw add dec lcall scas add sub xchg and (bad) lock aad iret adc outsl cmpl scas ret nopl inc repnz jbe jne fsubl lahf sbbb call loop pop sub pop ds cmp popa call push mov jne ret repnz add push fldenv test mov jne (bad) mov or xor dec pop inc mov pusha mov or jne push jno push jnp xor dec das or cli dec push aam lods add or stc push sbb push push adc dec inc sub xchg enter or pop push or rcr add aad jno jp inc loopne mov and pop and add jo stos mul push sbb jg sub adc inc pop pop popa dec pusha shr jl or xchg jne and rclb fmull jge out test clc sbb pop aam in push jno xchg data16 (bad) lock icebp pop mov sub loopne and sbb or mov mov sahf add cmpsb mov push inc stos inc adc sub addb push mov pop sbb pop push popa add (bad) lods pop or add hlt bound imul es fdivrl or mov push push psubq loope les jmp enter or dec add mov xchg pop xor cwtl xor loop push mov (bad) mov xor mov or add arpl push sbb insl mov add lea and xchg and stc ss jmp sysexit add (bad) mov popf mov mov fiaddl add pop jmp sub rorb das add lret ds imul jmp xchg adc insl xchg es adc push push dec fwait insl aaa xchg jo loope push xor jae mov and dec sbb inc sbb sub xor pop lods and or punpcklbw adc mov adc jo outsl or cmp insl add add cmp shl lret xorb fstps sub scas fldz int es aaa sbb cmp (bad) jmp inc sub jae call gs je jmp jge adc push cmc or xor and femms and add fisub push andb jmp mov xlat fdivrl add mov sbb pop bound std scas popa cmp jbe push pop xor add and dec sbb js push pusha hlt call pop mov incb push lea mov mov js or dec or mov and mov aam jmp inc pusha ss cmp mov mov pop push push das or out adc inc scas jae js xchg lret int mov clc add dec out jns nop adc movsl das add xlat in test add adc dec fstpt fsubr lret and es add inc lret in (bad) mov sbb orb jmp adc mov pop and jl pusha add add lods in add popf call fwait jmp test fildl jmp out or xor dec sub jb sub mov or sbb dec outsl adc adc or aas imul cmc jle,pt push imul xchg in jge test fildl mov sbb cmp mov or mov stc fnsave cmp cmp test scas (bad) xchg xchg rcl cmp or push sbb adcl in nop jns sbb add push push adc test sub sbb or pop inc or pushf loope fcomps dec es cmp outsl or loop and sub mov arpl mov add mov lea test fs push add dec pop mov mov sub mov aas out arpl or cmp jae mov xor add decb add or xchg pop add in movsb pop fidiv add cmp lcall out push push jmp and fmul pop shl lock inc fstps jl out add (bad) or lea push sbb shrb mov out and insb pop sbb push mov xlat fucom add and or push and and pop cmpl push and mov sub nop pop rorl jb dec dec test sbbb aad inc pusha and fsubr mov xor mov sbb push jbe (bad) xor out push shrl or sarb xor xor xor je adc inc nop xchg sbb mov mov pop adc mov inc cmp test xchg out push (bad) out (bad) dec enter out mov mov shrb cwtl push pop push (bad) sbb nop mov or add xchg xchg test jb std dec or out lahf mov push push sub push sbb or sbb push push in push test (bad) out dec cmp push pop inc push sbb or (bad) and loope lock mov out or xor mov add mov mov aam out pop jnp fildl and pop neg pushf and fwait adc fstp fisttpll cmp fnclex xor or xchg xadd movsb dec addr16 and cmp les sar mov cltd adc stc sub sti addr16 jo popf cmpl aaa cmp sti imulb push inc repnz loopne into adc imul pop arpl xchg xor pop cmp or cs mov ficom xchg ds push and push cs sub pop addr16 mov fs sub subl sbb add jb inc pushf or adc xchg fdecstp repnz lret and lods aam lock (bad) xlat dec and add stos cli xorl jne or call inc addl push lock adc dec sbb jne sbb or clc mov pop sahf out or add and int3 repz push rcll dec dec enter cs iret pop incb leave mov push (bad) push leave and xchg sub test pop out adc sub add adc fsubrl pop push in or nopl dec cmpsl or cld pop aam dec pop in jne enter enter scas test pop jo jg ss rcr add sbb (bad) jmp (bad) dec fidivr nop jmp push adc fldenv mov mov lea or xor (bad) pop push or mov nop push hlt add push pop and rorb xchg cmp sub in lcall sbb loop dec adc andl add sti push (bad) xchg mov xor mov out mov xchg out addr16 and or or add adcl rol xor sbb hlt xor or sti hlt insl shl xchg jo xor pushf andl (bad) pusha sbb das xor not sbb fdivr or (bad) insb in ss jmp pop imul pop decl push jle xchg in es in mov jae adc hlt xchg push jb adc in ds fdivl insb js adc shll push and pushf xor or lods pop ret insl int3 pop or fiadd mov inc or jne ljmp imul negl sub stos (bad) ss mov and fcoms sahf pushf hlt (bad) jb or enter jmp shl pop pop fs push sti xor push dec sub test pop fsubrl cmp jmp mov cltd mov adc mov (bad) nop fsubl jl (bad) inc pusha add inc gs cmp fmul mov (bad) jp imul pop cld sub test in jg outsb add idiv out mov xor stc mov icebp aaa and pop ss dec lock or in fcmove (bad) cmc mov aam add sub or push cs xchg sbb pop mov (bad) bound scas ja dec add jp jno and xchg push fwait push popf dec dec gs sbb dec or mov mov pop mov xchg sbb xchg mov dec icebp repnz lock inc dec push sbb pop push inc and cmp and push daa test lock xchg shrb xchg push inc pop ret aam stc and jno add test pop jb fcomip jo scas scas cmp or fsubrp inc imul or add iret test pusha and lods scas dec popa ret mov enter in ja push and cmp (bad) push nop pop jb out dec mulb and or call xor les mov (bad) jge idivl sbb jae add jo cmp in gs loopne jmp or jmp stc sub (bad) (bad) call pop (bad) jb loop push mov cmpl call jle je incl movsl push mov pop and int3 add push (bad) shlb dec dec and and (bad) into test cld adc add adc frstor outsl mov (bad) dec pop lret dec loope mov and rclb push hlt jb jne lahf push or add cmpsb (bad) je inc shrb or in orb call loopne mov sbb sub inc or mov aas push pop inc fildll call jge clc call sarl or add or test daa sbb repnz call or enter stos push lods pop (bad) mov add and or mov ret pop dec xchg mov xchg or push push xchg lret es or roll cs loopne add push dec insb gs pop adcb add movsl or sub xlat mov lahf test insb popa mov xor stc push jg mov cmp add fdivrs arpl insb or out and into push and scas and sbb wrmsr cmpsl movups lods jmp cmp add jge je inc dec pop add push and mov lods xor mov jns or inc pop sub rcrb mov out and jne and clc scas lock add insl ss inc and or decl or add push push pop mov inc jo add fdivl popf out adc dec mov dec icebp fistl cwtl (bad) adc insb mov jnp xchg es imul js fadds daa sti or xor sub mov ss mulb or test jmp lret mov testb jl lods rolb add test push test xchg xchg call imull imul mov gs addr16 pop xor add jmp mov lcall pusha jmp add scas dec adc ljmp movsb add xchg adc add mov pop push push sbb shll cmp jbe sbb push push mov add test and jb xchg and xor adc mov add xor and xor in idiv sub loope pop and jmp and jmp adc lret call sti adc dec dec push or jnp jnp adc dec jl push stos or and jo add aaa ficoml add jecxz pop or fisub sub inc bound add sbb outsb mov std cs cmp and add jmp add aaa jecxz sbb addr16 push push or jmp jle and and sub shrb sub dec add (bad) mov loop mov mov jl pop fstpl cmp sbb dec dec sbb pop push sub shr ds rorb push mov sbb lea in mov adc sti add mov out test fistpll push jmp xor or str dec jne orb jl fldl stc push push std pop outsl adc mov add lcall js sbb jmp push out outsb push imul add inc push mov pop inc pop test out inc rolb add nop adc inc popa mov sub lea out jae adc cs pop xchg sub pushf xor add adc adc lods sti add cmp dec jp mov lds out sub xor stos cwtl jp push inc inc ret push cmpps mov add or or dec pusha add pop dec and push add dec jmp add rclb popa in xor mov add xchg and sbb and push andl sbb jns push add ret xchg cmp je scas insl xchg jmp (bad) push data16 push mov mov mov mov int inc lcall aas xor insl lock adcb dec jne (bad) loopne adc xchg pop jmp add je sub add in pop (bad) pop inc push adc and movb mov cltd in pop push js and jmp adc lock add jg call pusha mov scas repnz and add les bound lea or mov mov lds or fs jl stos test pop pop fs daa inc and xchg mov push xor and and inc push lock sub push mull jmp and ficoml fs mov add fs fwait jno mov push inc and xor cltd aaa int3 jo xchg addl fcoml pop dec aam xchg push mov xchg adc inc stos adc and mov inc or fcomps test or ret push lods adc fs out aam leave popa sbb sbbl fsubs inc les push movl fs (bad) das mov loope lea inc xlat sbb mov dec gs lea sub push sbb sbb or sbb std call gs add push cmp and push ret jb mov in int3 cmpl loopne out fisub lock and pushf or cmp cmp mov nop xchg and xchg lret enter cld sub jg push mov xchg and mov loopne ret add push or or je sarl rorb or frstor push sub push orl push and mov xchg sub sub pop pop inc cmp mov icebp add push je test roll xor or je jmp popf fidiv andb inc add fldt jle push pop in adc gs adc push lock pop fisttpl sbb dec nop push jmp cmp add or ljmp fisttp and loop shr loop ret add jb ljmp lea and ds gs sub xchg dec or out xor add cld (bad) mov inc pop das mov xlat jnp mov or sub sbb es mov and fcompl je push inc dec les mov fcomps je jmp call repz add push ljmp adc je cmpsl lock pop dec sbb jp or movsb adc pop jne popa insb dec push adc pop movl in push and rcr pop or sub fdivr jge adcb cli stos add int3 call dec clc sub repnz int3 (bad) scas xchg lock out mov pop or je dec je add sbb adc cmp mov movsl add and clc push xor jmp push test jmp cmovle pop pop sbb inc xchg xor insb lea sbb dec mov cmpsl es xchg dec movsl test sahf lcall mov mov adc cmp push fidiv sbb sub je push sub (bad) je rorb mov jmp mov or lahf xchg out xchg add cmp jmp shlb jb out inc add jmp push stos add jo dec adc mov push pusha test ror jns inc loop cmp or pop mov scas jno sbb add lret adc (bad) repz pop jae add imul (bad) cmp or cmp btcl xchg push sub lea outsb add fsubrl lods dec cmp cmp jbe or jbe notl inc and (bad) jo jmp fnsave lret test test lea mov or iret push push fidivrl daa aaa ret (bad) jbe nop ja pusha js aaa neg fistpll jbe xor fwait dec fstps xorb jns mov mov mov xlat fdivp mov inc pop test jbe and or arpl mov imul lret adc (bad) sub dec sbb outsl push enter pop sahf adc sub lret adc add not sub sub test pop movsb xchg or les repnz and pop popa pop and and push mov xor sbb add lea adc add popa add test cmp scas jge push push enter imul jle dec mov outsb sti lea js push sahf mov mov clc jno (bad) lahf insl ficompl push inc add dec mov jge lcall cmpl adc movsb jb pop sub test lods popf add movsl or cmpsl adc jno popa fwait push (bad) pusha jl iret shr loopne popa push movsl popa mov pop add add pop pop add add push lods ja fldt xchg imul dec mov inc push xor xor pop or add fistpl lods (bad) lods sbb inc enter and xchg test pop leave xchg sbb movsb stos push dec dec sbb push and mov out push add pop shl mov das and cmp ja mov test cmp lods xor mov and (bad) push mov roll inc jle ljmp inc add and inc add jmp es mov add and mov push cmp ja xchg and xchg sub pop ss lods cs lcall push mov cmpsb rclb push repz adc mov add add jns fildl xor arpl out sahf out pop bound sahf out sahf mov (bad) int3 aam data16 jns sub lds adc repnz movl xlat gs in push add and aas xor and cmp arpl xchg add repz push mov repz mov in cmc jl out std add or data16 andl jbe mov jmpw cmp jns add enter repz loopne lock sahf out sub cmp ljmp add xchg mov and mov mov (bad) mov cmp adc int3 in fidivl mov rcrb insb xor or jb and xor inc inc add adcb andl orl sub mov inc mov mov dec xchg push and pop jmp mov xor or and aam (bad) push mov popa lea cmpl cwtl push cmp add (bad) add lods sub test (bad) mov xor je lcall mov das and frstor sub es or jae je,pn ss je,pt arpl cmpb gs int mov jmp jmp and sbb xchg cltd scas in ret add test sub ss jmp sbb mov add (bad) incb les mov packssdw sbb jb fs enter jns imul cmp pop popa fmull sub mov mov or or pop adc insb test and data16 enter lahf js mov jb ja sub push pop push adc dec or xor fildl mov pop pushf loop xor pop mov test mov inc or sarb int3 pop cmp or pushf adc and shrl push or sub push mov pop mov pop mov jmp sbb andl xchg addr16 pushl pop mov lcall push jle mov test mov push sbb test mov shrl sbb sub sub sub iret out scas mov loop jne lea in mov popa or andl and jmp pop add cmc icebp and xor sbb loope in icebp test inc or mov mov push (bad) mov mov sbb and fucom mov (bad) and inc xor cmp int3 sub cld push movl jo outsb add xor mov lods jmp add dec (bad) mov and jmp pop inc jge cltd push aad pushf mov aas call jmp push inc arpl sub jbe int3 mov test sub inc adc rol inc pop iret jle mov dec xchg dec sub xor fs sbb jmp push scas ds loop lcall push inc or fiaddl cmpsl xor and pusha push jmp xorb lock add push mov movsb sbb test loopne jo sbb mov jmp imulb pop mov jb or adc jne outsl outsb pop jbe popa ja jmp and add movsb (bad) mov inc sti pusha subps mov test mov adc dec nop adc dec in xchg jmp ficomp and pop imul andl jo enter int3 outsl mov xor cli imul sar inc mov dec mov jno cmp lock mov test fstpt pop notb and xor mov (bad) sbb sbb sbb mov cmpl jo inc xchg fcmovu lea test adc adc add add or and test add les lods adc push insl out or js decb xor xchg cmp sbb and fistpl cs mulb mov cmpl jl mov adcl popa jns ret sub cmp lock stos sub test fiaddl xchg push xchg dec andl loopne loope (bad) incl addb push and push in (bad) hlt lret into addl dec lods nop fstps jbe jecxz pop in or xor subl dec pop mov mov mov and xchg sub mov ret xor adc adc mov jae sbb dec je mov movsl push sub xor cmp or fiadd (bad) and cmpsl push cltd or xor in insl sbb and test xor mov add add outsl iret (bad) imul sbb xchg inc push cmp mov xchg dec jbe aad loopne push fldl push or or adc dec jmp xor add lret mov xchg and push sbb dec or aaa cmpsb xor ret insb or (bad) mov pop pusha popa sub insl movsb xchg add pop or (bad) push sbb or icebp dec loopne loop out fucomip mov loopne and inc ss push (bad) jae dec ret repz jmp cs sub adc pop push hlt ja jo pusha or sbb add inc add and push pop popa test aaa dec mov cmpsl cltd sub pop fldenv add rcll mov push push out dec fadds dec outsl popa loop sub dec push or repz pushl and xchg adc mov sub push cs les sub and jne arpl inc jnp push test call xchg mov enter (bad) pop mov or and call or (bad) jo or nop mov push cltd xor or jp int3 (bad) inc mov mov mov push fwait mov adc cmp mov and inc out call sbb inc repnz testl xchg sbbl imull mov clc xor and lcall xor adc add js pop fsubl mov enter data16 or sti or out sub cmp test add int3 shlb movzwl xchg sbbl pop ror mov jp ficoml dec push pop push je mov loop push aaa push fisubl push rcl adc push fiadd loopne mov int inc out push int or push mov (bad) ds (bad) jmp mov cld shl movsb andl (bad) pusha or ds lea and adc mov ret jle xor push ds in pop add std lret sbb test fcmovbe sub cmpsl pusha mov sub frndint test push inc mov and mov xor outsl fnstsw xchg popa dec pcmpgtd or inc push orb arpl inc scas xor nop mov and push test lds pop (bad) xor gs pushf fldenv adc decl xlat jne shrb sbb adc ljmp pop push inc jmp add xrelease test mov dec sti clc mov or mov xchg in push add test aaa outsl dec ds xor and mov mov add insl cmp and and pop inc jmp es repz pusha jmp lahf pop add fimull jnp xchg je imul add or insb or pop mov jecxz or add add addl inc pop push sub ret shrl lahf outsb pop push jne,pt fnclex mov mov adcl cmp fstpt add pushf push aaa leave leave ss sbb test sbbb call aaa mov hlt push add adc xor (bad) jne jle mov imul jecxz pop orl or mov adc xor fbstp mov sub or into and jns inc xor sub jne jle out cmp add mov add ja imul or clc mov loope jmp test push add or es into sub lock enter std or shr adc sbb fistp pop and or fcompl int3 pop pop push daa xchg popl in or xor clc stc movsb repnz fisttpl or sub jecxz mov fmuls insl sbb fs neg popl jge fldz push adc frstor adc dec cmp mov (bad) mov and adc push adc push sbb xor rorb pop leave and push mov or (bad) lock push (bad) mov add les cmpl ficom add sbb mov nop jne in mov pop lock sub add adc pop js pop jl fucomp (bad) scas mov xchg sbb xchg dec aas insl pushl je and jnp xor daa xchg fcmovnbe insl add and mov adc add bnd je fwait mov adc (bad) xchg push cmp aam and loopne mov add cltd adc rcrb je or sub lock (bad) repnz adc sbb repz or or out push push mov inc jmp lock adc push cwtl repnz add loopne es or or (bad) sbb add push out mov push push dec mov data16 (bad) pusha and (bad) push ret popf cld mov xlat push out pushf arpl mov mov jecxz sbb mov pop or pop adc or jmp fs loopne das push sbb ja clc jle or fmul test inc add aaa or cwtl add lods out jle push pop movl mov ja js push (bad) push cmp roll jne mov roll addl andl test inc xchg ss add push (bad) jno fbld xor leave xchg clc add cmp es sbb shl nop sub jl movsb movsl mov imul mov xchg cmp and mov ffreep mov iret mov sub cmp test adc jbe or orl pop add inc and cmp jnp fs aas mov push sbb icebp jmp jnp add or jbe insb jne push push xchg shr sbb jo inc sbb imul or jno push pop je dec jne inc push jns cmp test js sti icebp sti call adc sub arpl add jmp loope loop xor adc enter add dec dec into push sub or cmp into cmc mov dec push enter mov inc (bad) xchg push push or test jmp and rcll (bad) ret jmp or mov pop fildl sbb in adc loop add mov das adc loop cmc pop xchg sbb or cli jne in fist pop fnclex fisttpl push dec ret bound xor loope jo fsub pop out cmp inc xorl jmp inc push repnz or adc orl push xchg mov dec mov or loop pop pop rclb hlt sub (bad) xchg fmuls fs mov (bad) icebp inc mov bound (bad) jns rorb fwait add clc adcl lcall xchg adc dec jmp mov movl push call lock fistpl cmp sbb push jne dec pop ret cmc push pop sbb xchg hlt mov push push inc pusha jo cltd or fs jmp je iret out dec mov pop adcb inc (bad) shl je lds or cli push (bad) push arpl or xor cli popa sub adc pop ret dec xor cltd xchg and or xchg rcrb and cld cmp and push mov add jg dec rcll sbb mov push add or fs cwtl xor push adc and sbb fldcw test mov popa mov in dec jle or scas insl negl mov icebp mov xadd das pop xchg push ret adc jne test pop repz dec gs push shl and add (bad) leave fcmovne and sub add dec or dec cld and (bad) xchg clc add clc les jnp add inc add sub adc call lea clc adc sub inc dec arpl dec inc dec popa in or pop hlt int sbb (bad) add push lcall and leave pop add bound icebp loopne xchg rcll pop xchg (bad) pop and lds or cmp or add cltd mov (bad) dec dec lret push divb add imul rclb mov iret sbb (bad) jo sub fbld enter sarl (bad) pusha shl inc push mov sub cltd loope inc (bad) or sub mov ret cmc in pop push cmp mov adc jb mov cli dec jb or adc pop mov pop add cmp mov and add xor insb cs xchg fdiv add imul and add movsl push and add daa xchg scas cmp push mov in or xor xchg sbb es xor repz orl cmp sub jle sub pusha add in ja jmp and loopne daa or jne enter cwtl dec test mov jecxz xchg adc addb ljmp add je cmp jb test adc or add fldl jb and ljmp dec push jle mov sahf push ret inc stos cmp or aaa push repnz jbe pusha jmp jb jmp mov es sub push mov (bad) jnp jns aaa jl mov incl xchg jge jg cmp test adcl ret add add je dec imul pop mov lret jle jle pop ja test pop int3 xor ret movsl pop daa movsl add mov rcrb andb aas xor movsl xorb mov pop pop or xor adc shl fistpll sbb xor in sbb add push mov add insl or into int cmp xchg out in or inc inc mov add or jl inc cmp ror pop rcrb in call mov cmp ja out add sbb ret or ret int or outsb push dec cmp add flds mul or fmul push inc cld mov inc adc xor add negl invd fwait cmp mov (bad) andl cmpsb xchg cmp sub sbb inc sub cli add mov inc or and sahf stc pop rclb and std (bad) decl inc sub pop inc fnstenv cld jbe or inc popa insb add das jne test mov add mov fistp (bad) inc push add and and mov jmp add icebp sub or test adc jnp fldz das adc jne and pop cmp cmp jno add fld jmp mov fisub sbb mov push cmp bound or pop adc fcoms xor sbb pop (bad) dec adc lcall pop jns dec (bad) je push pop clc sti add jge jo xorb xchg bnd (bad) sub add push mov test sbb cmp or rolb ljmp lods rorb pop cltd xchg in je decl call popf flds rcrl add add loopne add xchg sbb insb inc adc adc mov mov add or sub push scas inc mov add mov inc jbe cs and xchg mov dec or ljmp adc cmp icebp adc and movsl jg pop adc nop xchg in mov insb (bad) dec sahf pop fwait pop or fcomps (bad) leave sub mov or xor js sahf xchg mov lock cmp add mov ret into xchg popa sub push movsb jecxz adc mov dec xchg and pop (bad) jmp add dec test inc daa and pusha fdivs sub jnp add lock cmp add adc mov push xor in outsl popf xchg aas aaa rorl repz fldenv add in add mov out (bad) xor inc loop clc push add cmp jne or iret notb mov outsb std (bad) xchg (bad) (bad) mov jne insl cmpsb and (bad) sub mov lock clc arpl dec dec dec outsl negb jns mov pop loope pop dec dec mov jmp pop imul (bad) jle call test cmp pop cld or ja adc in andl in ds xchg pop fcoml in shrl push mov jns popa add and iret adc push stos mov xchg mov (bad) xchg pop inc jbe cmp adc cmp or jl mov adc mov mov adc mov pop xorl add out add mov adc fistpl call cmp push call adc aad or ret push cmc and sub ficom adc mov or dec xor mov repz dec iret push scas xor mov and jb sahf mov test sti or pop scas push dec cmc cld (bad) repnz inc mov sbb jbe xchg popa enter (bad) mov scas flds flds enter xor subl lods or sbb lods les in div xor aad rcr cmp push lods bound lods add inc jb repz cmpsl std pop loope fcomps ss xchg xor dec xchg sub movsb xchg xchg push pushf pushf je add push popa out test popf scas mov xchg push ret push jb insl pop and daa xchg dec mov pop lods push push and fwait add aaa (bad) mov cs (bad) jmp pop pop pop jns arpl pop rolb mov inc lret leave (bad) or inc inc inc movsl cmp out sahf push sbb push out sahf mov shl (bad) or sbb dec pusha outsb repz repz pushf lods mov enter add adc inc push pop jns out push xchg mov out int3 fsubr cld jns out push cwtl incb and inc push out sahf out (bad) lcall in cltd or cmp iret repz insb test repz aam add push out sahf out dec pusha jbe sahf out sahf cwtl stos mov iret sarl push sub repz repz jo sbbb (bad) (bad) add xor push jns out xchg mov cmp out adc repz push bound nop scas ds repz aam clc or sbb cmp out sahf out jp sahf scas fucom jns mov lahf out jns out xor pop jl sahf out sahf pushf stos mov dec repz or and inc in adc addr16 inc nop push mov mov iret xor pop fisttpll ret sbb pop ss pop mov out sub pop dec inc inc push pop push inc dec inc inc push pop leave sbb cmp adc pop sbb lret inc outsb adc push fwait std add andb pop enter jg addl or mov jns orl dec jb jg xchg push dec jae test mov hlt lcall (bad) cmp cmpsb jns dec push and pop mov inc aad xchg js add pop and dec add enter test pop and add and xor hlt add mov add andl dec add mov enter add adc cmp fucompp add aaa add sub insl adc mov push adc and call adc or mov mov push xor push call ds cmpsb in jl xchg sub mov and cli jns dec insb insb push fmuls test jae in or fbld adc rcrb sub addl repz inc jne lds mov gs dec outsl and enter add insl aas bound dec ja mov add pop mov and pusha outsl imul mov jnp mov jb push outsl insl sahf loop cmp dec pop inc jb imul jne jo jo push push adc popf fptan imul and xor and in imul push insl sbb data16 data16 adc pop sti outsb (bad) aas insb mulb jo add popa cmp dec and mov leave addr16 fsubs pop and out or add jae pop outsb pop add lret adc daa jb jmp inc je addr16 push push pop insl xor divl ja ss xor jae pop out xor xchg orl lret andb cmp imul xchg fdiv push test dec and sbbl loopne adc cltd jge cltd inc sbb jo add adc lea sbb test mov ret adc daa inc push sarl add pusha pop and xchg ret xchg shrb outsl push or and adc gs pusha in inc dec (bad) xchg or pop aaa mov push adc (bad) jo sbb xorpd addl test add mov (bad) movb lahf addr16 ds cli mov shrl mov pop mov inc mov imul repz imul jne out fsubp pop lea loopne push and test jge mov dec push push xor in repz and mov inc cli cs push insl push lcall stc outsb add fsubl jp outsl add adc mov push push cmp cmp out out les cmp data16 and outsl inc mov jae xchg imul inc dec into (bad) cli scas hlt imul push mov enter or test fnstcw nop add out gs ja mov jns lods mov int3 mov add insb (bad) mov and out stc cmp das push dec adc jl sub mov mov jle sahf aas pop fildl cld daa xor add push sub gs int xchg sahf push (bad) ja lods push push clc sbb dec and push lock xchg xchg push sbb int pop adc pop flds seto fist adc in iret jnp jmp divl or push sbb jns out and cmp repz aas push push (bad) (bad) std pop int jns nop arpl loope pusha data16 pop push fisttpl pop shrb movsl aad mov lcall push lods xchg push cmpsl pop loopne mov jbe call ss cmpsl jbe out mov imul push inc dec out dec add fidivr iret cli jmp dec push cli sahf data16 push push push fimul push pop inc sahf div lock sub shr out push stc fwait push xor jg mov mov ss add or pop xor data16 lea add cmp (bad) movd xchg jle divb cmpsb in jmp insb sahf adc mov popf int sub sub rcrb add pop insb mov stc jg in notb test add sub fimul (bad) fcomps mov rolb inc sti into xchg out lds hlt cs sbb xor loopne push or push in int stc cmp push repnz (bad) imul cmp jle into lret xchg fsub imul push inc push xor cmpsb push xor cmp in push or popa lret pusha imul add cmp add rcrl xchg adc cmp mov mov sbb cmp sbb dec insb push mov out push movsb pop outsb or out xor xor mov clc jmp (bad) sub outsb push push clc sbb inc cmc cltd push arpl popf divb mov rcrl imul lcall push and mov int stc push (bad) or pop cmp xor cs (bad) mov sahf cmpsl push mov call and iret imul push dec push pusha add repz daa cltd je shrl stos loop ds nop lcall push movsb out inc inc xchg mov repz push inc ljmp (bad) decl movb mov jge inc mov insb inc push pop inc push jb popa popf push lcall push pop or add imulb mov xor scas testb pop dec fsubrl cmp out push es inc pop out dec roll out test test or sarl rolb daa popf dec lods add (bad) cli push pusha lret ss cmpsl push pop ss mov clc into dec dec push lret add imul adc push data16 pushf (bad) mov fcmovbe mov aad xchg push fcomip imul jbe lahf in cmpsb test insl xchg push push push dec repz jle jl mov sahf loopne sub loope imulb cld sbb mov insb mov adc sbb xor fadds mov ja xor lea loopne insb fisttpl push push xor pop sbb fnstcw pushf fs cmp xchg or sti lcall out scas out push or push push mov and insl sahf movsl pop repz scas dec inc mov loopne fdivp mov cmpsb xchg rol sti jle,pn push rcrb out cmpsl mov jle push fdiv sahf data16 dec cmpsb push mov xchg stos push iret sarl in divb aam (bad) jmp pop (bad) outsl jae push std jbe sbb loop insb faddl pop add imul clc pop push mull insb idiv push and stc lock aaa (bad) addr16 pushf jmp stos dec cmp push jb fmuls sbb xor inc testl adc sub and dec push fnstcw or pop into mov lahf data16 sub jecxz jp push cmp mov sahf dec jg daa in test mov adc mov push adc cli mov pop inc or inc add jge jnp (bad) cli (bad) sti outsb inc cld push inc push es jmp (bad) dec dec sarb push out push test xchg popf push fsubs jnp cmp jb movsb mov cli inc sti pop adc int adc sbb fs pushw sbb stos xchg pop push repz mov cs cmp loopne in fsubrl lock and mov or dec jnp arpl lods fadds mov divb adc cld push lahf out mov and mov (bad) imulb xor inc data16 addl lea int xchg add or pop mov mov out psadbw (bad) (bad) stos insb ss out inc loope sub dec nop dec jl loop cmpsb insb push jle push fdivs jbe adc adc cmpsb push fidivrl sub lock push push cmpsb andb push and test ret pushf mov adc lahf idivb push sub ret dec data16 and mov push ds xor push addr16 mov mov fxtract imul mov inc idiv es mov mov mov pop push push je add mov mov push fistl xchg sti mov fisubl jl inc scas in ss xchg push inc mov shll adc sahf in (bad) ss mov and push (bad) jne push sub xchg sbb loopne repz repnz out mov xor lods jle push adc cmp add (bad) push addr16 sahf lds pop xchg sbb in add push xchg mov mov push xchg push mov cmp xor push mov data16 and data16 sbb bound xor rolb dec pushf cmp push scas mov sarb jo cmpsb imul mov and push jmp mov cmp xor negb movsb outsb jp fsubl pop pusha mov fist sub shrb fcomip xor mov insb push or aad xchg ds ret push inc push push negb mov push push cmp mov pop mov lcall in lock jge sahf adc outsb aam and shlb movb (bad) lock jp insl lret sbb add fiadd add cmc and test sbb jge imul inc fcoms or mov dec clc mov ficomp sarl add push push add hlt push mov out push pop pop pushw mov rcr or and ds jb movsb mov into jecxz add iret repz xchg lods cmpsl stc cmp (bad) loope pop rcrb sahf out sahf das inc push bound jns fcomps rcll jns jo mov out or out sahf ja push sub out sahf mov jns out mov out sahf out out cmc std iret repz or push sub cmp cmp pop fs repz repz mov fldlg2 out sahf out aam inc pop imul int int jns cmc sbb and repz repz or cmp xchg cmpsb mov iret repz icebp cld push (bad) vmwrite xor out sahf out push out sahf popf test cmp out in cli pop xlat adc repz inc push pop iret repz push test mov rcr in iret repz repz pop cmp repz jp xchg sahf repz repz leave jecxz out lcall cs out sahf ss push bound jns out mov jns out fucomp cmc add iret repz push push xor iret repz jns mov popf lods mov (bad) iret repz lret rcr loope repz cmpsl stc cmp add or sbb out and ss dec out sahf out pop arpl sahf out sahf jnp mov out lods mov (bad) (bad) repz out (bad) (bad) or iret repz movhps sub aaa cmp repz dec dec push popa repz rep jns mov repz xchg mov lcall add or adc out sahf out dec push popa imul cltd jns out mov repz out out cmc std add dec push sbb xor repz pop push js cmp repz mov lcall add push jns out or sbb cs sahf out inc push pop imul (bad) fwait cmpsl mov sahf out mov repz out decl loopne and repz sub inc push pop push je addl mov iret mov out iret repz hlt std add push jns out adc and aaa out sahf out dec push fs sahf out sahf ja mov out mov (bad) iret fdiv jns out jmp iret repz or sbb cmp repz dec push bound cmp repz mov cmpsl mov (bad) iret fdivrs iret repz ljmp out or sbb out aas inc dec pop sahf out sahf pop push js xchg jns out fwait mov jns out (bad) int ficomp in repz jecxz in jns out adc es sahf cmp imul test sahf out fucomi or sbb repz and ss dec push cmp repz outsb jns repz repz repz mov enter lcall pop out jns out sbb sub out push pop gs sahf out sahf jne mov out scas mov jns out loop hlt cld iret repz add or sbb sub repz cmp cmp repz push repz xchg lahf test iret repz rcr in jns out testb or out cmp sahf out sahf push pop outsl ja jns out mov jns out ror jmp hlt add movhps sub repz ds push pop repz rep js mov repz nop cltd mov iret repz int3 aam in jns iret repz std pop ljmp and sahf out sahf push pusha push jle jns out xchg lcall out mov out sahf xlat fndisi(8087 in repnz out idiv add or repz repz and sub repz xor push cmp repz pop pusha gs repz repz jg (bad) iret repz xchg lcall repz rol aam cmp repz out hlt out lcall sbb and jns out dec dec pop popa imul jns mov movsb lods mov (bad) jns out iret fsub ljmp add iret repz sub cmp inc dec cmp repz pop bound repz repz xchg iret pushf movsb stos mov mov ret (bad) fcomi cmp repz lock out sahf out out or sbb sahf out sahf and inc jns out dec push pop popa push outsl jbe test xchg lahf cmpsb scas mov jns out (bad) into aad jecxz jl out icebp stc add or repz adc sbb iret repz ds dec pop repz repz addr16 (bad) iret repz mov cmp repz ret (bad) cmp repz repnz add out sahf cmpsl or pop push and cs dec xor push adc pop inc cmpsl add sbb pop pop dec push adc sti mov xor pop dec push push push add push push test adc outsb pop jb je pop outsl xchg mov rcl sbb push sbbl movl lds xor xor dec sub rclb addr16 insb xor or pop std xor xor cmp insl imul sub sub lret popf lods mov adcl mov shrl cmp pop cmp pop inc outsb mov inc pusha adc lods movsl pusha xchg addr16 and or push cmp addl pop pusha mov push popf mov rcll sbb movsl adc pusha aaa pop inc pop jp lret cmp dec das adc movsw dec ja imul add xor outsl jge cld or adc inc inc push push dec dec dec pop in push mov push cmp mov gs pop xor and xor cmp mov cmp pop loopne inc mov push cmp jnp xor movsb icebp inc mov xchg mov inc dec popa or (bad) insl add js ret cwtl mov mov das pop push xor xor mulb and add jbe adc sub cvtdq2ps pop inc dec popa call fcmovnu and je xor aas or rorl or insb fs cmp xor adc outsb fs push or or xchg sub mov jno mov sub add pop aad dec cmp dec push gs inc les ret mov dec mov push dec dec imul mov dec push inc inc scas pop imul xchg mov test sub inc fwait data16 ss push out sub mov or or and inc movsl xchg pop sbb sbb push push jo and in insl arpl jp adc (bad) (bad) mov outsb jb test jne xor jbe outsl push dec pop iret jge sbb arpl pop mov push push push add push dec dec inc push pop pop inc lods imul sub adc rorl sbb jl icebp or addr16 subb fisubrl mov shll xchg adc push push fs mov fisubrl movsl pop and aaa lods fsts jnp data16 mov in sub stos (bad) mov mov jle adc outsb jbe adc jae arpl adc addr16 jae insl adc in imul and pop add and enter fcomps and adc jbe sbb or in ja ja insw lock mov ljmp jp popa xchg cmp sbb xchg inc popa sbb mov imul test ret sbb sub movsb andl xor rcrb test sbb popa or mov sub xchg mov xor hlt sbb xchg or stos sbb push sbb mov imul mov test xor xor push lods loope aam les sbb lcall out mov push jb and jl gs negl pop xchg mov xchg pop pop adc (bad) adc addb sub jae adc adc insb sarb insl test mov sub add imul ss pop das mov dec jb jb sbb cmp mov insl adc jne shr sbb in lock push das xor movsl sub sbb add pop outsl xor mov les das xchg ds and addr16 fsts clc (bad) lret ja je bound xor and and add mov adc sub xchg clc bound ss mov adc ror or or ds imul sub insb out cltd adc aas cmp out jmp mov test xchg cmpl adc pop data16 incl xchg (bad) adc jo jle xchg and (bad) pusha cmp repz mov outsl adc jmp fs or test imul adc cmpl mov and sub insb or inc outsb popa (bad) sbb or xchg rorl outsb icebp loopne xchg pop lds (bad) aad cmp andb rcl lock add int sahf mov outsb inc ror sub enter test pop mov sbb mov jbe pop adc inc push in xlat or and add mov cwtl in adc add fucomp in fimull jne push or cmp jae fstpt xlat adc nop fwait insl push and fldl dec and inc jne push cmpsl addr16 push dec sti outsl jo rorl push and lret or and sub imul negl sbb ljmp xchg adc mov xor int3 stos sbb adc push pop imul jge jo cwtl gs cvtps2pi xchg bound (bad) insl fld add nop sub adc int div adc add outsl xor pushf cvtdq2ps adc or into out or mulps sbb bound or xchg xchg jo popa in lods int scas pop imul inc mov jbe imul test loop adc addl mov push nop cmp nop outsl out mov je push sbb xor xor or data16 pop and pop cmp pop xchg mov addb jno jae imul jae outsb or call push push xor imul stos andl adc inc popf sahf ret inc (bad) in enter imul subl or call insb mov jb mov pop and adc or js and jecxz pop movsb add mov adc jns lret call jae insl ret xchg imul xchg sub sbb lea jmp in cwtl push adc punpckhbw imul jo adc xchg add sub ss ror pcmpeqw xor insb imul into fiaddl outsb (bad) fstl mov jns imul adcl adc cwtl mov xchg arpl pusha sub mov ret in xchg mov jb test inc xor push out lahf inc (bad) movaps jo pop mov pop imul inc cltd jmp movsb sbb or inc add add pop sbb mov mov sub out add or jo xor mov cmp cmp sbb and add or repnz inc mov inc dec mov insl mov or mov mov adc (bad) adc mov or jbe push inc adc jno outsl pop adc push inc xor jae test push cmp sub sbb add jnp and and and add xor test es (bad) jae pop xchg call gs outsb mov sub adc adc and ja insb bndstx fsubs jo jbe mov or inc jbe pop inc or fadds daa and cmp imul cltd dec fist mov dec hlt push sbb xlat adc xor xor outsb fstl pop sub sub adc fdivrs ret add xchg sahf fstpt pusha sbb xchg or outsb jnp ret cltd in addr16 (bad) adc ret imul jo mov adc repz ds sbb jae outsb ficom gs ja test mov dec adc and mov in or sub ja adc dec or ljmp fistpll scas stc add leave adc ja or pop aaa adc outsb fs notb adc mov jno pop pop adc rorl push push test and mov ja fsubr sbb pcmpgtw jo or ss lea ja in rclb pop clc sbb stos xchg dec rcll fisttpl out adc cmp adc ja aam (bad) mov dec lea inc aas aaa movsb call adc in push jne lret jo (bad) ss push xchg xor out call adc test lahf jbe and cmp xlat aad adc (bad) mov xlat jne (bad) dec jbe ja imul xor sub mov adc imul adc pop mov imul (bad) int adc int3 jns das jge push shll push pop loope or or jae popf imul daa and sbb scas arpl test and out test xchg and xchg cmp lcall or inc movsl mov jae cmp sbb or in mov mov xchg fs inc flds jae sbb mov xchg xchg jo loope fmull (bad) mov mov xchg data16 xchg push jmp aas movsl add mov dec dec lods cli test pop add out mov push push push nop pop sbb cmp push imul test jo pop (bad) push insl pop inc jge pop push ja lods fldt adc jbe popa int ja ja notb test rorl cmp in ja ja js adc movsl aaa sub sub adc adc adc and mov aad add lldt jle and jns push (bad) mov js mov adc xor outsl sbb sub adc test adc dec dec fwait adc mov xchg or sti push mov test push adc xorl push pop addr16 jae jae test xor out xor sarb out push jb xchg add mov jno test popl int3 fdivl (bad) or ljmp push cmp push jecxz aaa loopne and invlpg xor aaa bound jbe movsl mov xchg outsl pop mov jne or fildll fdivs jae xor and or mov clts or pop xchg push adc cmp maxps xchg stos jge iret loope addr16 or xchg insb adc or call add fwait add ljmp pusha sbb push jp ret outsl sarl jo rol and into mov jp inc cmp lods mov sbb mov dec scas leave jbe inc test jb aas push dec and push dec dec jg ja push push and inc add inc nop mov data16 push xor cmp sub (bad) mov sub mov enter xchg push add and adc outsb faddl sub cs inc push and or mov insl mov mov push shll add push xchg and sbb sub imul cmpl mov and dec dec aaa mov dec mov in lods sbb outsl ss in mov (bad) or sub roll in mov jg mov outsl das dec mov arpl stos test xchg or and sub xor inc aaa add or xchg jp dec pop sbb xchg bound imul pop add push clc jp jo arpl cli xor sbb sbb loopne lret xorl and adc cmp insl rcrb cmp xor mov jnp dec adc inc jne inc jo push loop (bad) lock push imul out (bad) sub inc add loope inc sarl and nop cmpb repz jae (bad) sub add pop xchg pop scas cmp adc pop imul in xchg sahf sub push adc add jne ja pop pop pop inc mov dec out pusha dec in inc inc iret cmp shrl add ret rol pop jne bound xchg pop and push (bad) xchg movsb jae lret sub into (bad) sub imul outsl stos and jbe andb js cmp int or sub adc fs int jb test sarb sub adc adc insb pusha js out aad fdivrs sub inc mov test mov cmpsl outsb or dec dec mov dec (bad) xchg (bad) push xor inc mov dec lahf bound scas inc ret imul ret and sbb or (bad) decl or or push movups adc adc push pop sbb sbb ret add sub sub cs loope mov ds inc aas mov pop pop pop scas imul incl cli imul jno jne ja jns jnp outsl jbe jecxz jle jle pop push dec dec inc cmovle dec inc add ja jbe dec dec adc pop pop js repnz add dec dec dec inc push inc inc adc xlat popa lahf (bad) cs scas xchg (bad) scas push mov or imul dec enter pop cli (bad) rcrl or and ret pop sub js jle movsb je ja arpl jp mov aam popf dec insl subb jae mov outsb mov mov and orl insb jns xchg cmp jne sbb xchg sbb or scas inc xor cmp push and aad jg or sbbb in daa mov or xchg pop and and pop pusha mov aas jae push mov push mov adc aad jl aad pop pop int pusha popa jg jge gs push push add mov pop jbe xor bound (bad) test add push sub arpl and mov push add data16 mov jge push inc insb xorps xor in mov push inc push sub xor push mov or dec dec add xchg cld push dec inc pop or out cld mov inc inc dec pop or out in xor xor inc inc sub inc push push cmpsl xor or and dec cs dec sbb inc enter sub scas adc clc pushl jl inc dec push sbb aam adc xor inc add scas gs dec scas push scas push add cltd xchg xchg loopne inc adc or jb scas gs add dec push add cltd xchg pop sbb out sbb data16 mov or sub or pop mov pop inc inc add aaa repz and inc add and xchg lahf jmp push inc dec pushf pop in and dec add push sub addr16 jle push add push sub aas pop add push add push inc sub dec xor xor push repnz inc push xor iret aam mov pusha (bad) dec push cmp xchg cld cmp pop add push pop repnz iret cmp pop add (bad) push data16 xchg jne inc push insb arpl fs push gs movsl adc mov and push cmp and gs sbb mov push cmp fldl and jb data16 fs adc xchg hlt dec add lahf insb inc push in inc add into insb jnp sub and push pop mov outsb fs and aad pop imul add sub rorb jb inc mov outsb insb inc daa and (bad) (bad) jbe outsb cs dec imul adc cs jae rcrl mull outsb comiss cmovle mov addr16 gs pushf mov (bad) dec or xor push bound or mov or adc add sub mov or adc sbb push je inc inc sub out add dec add xor jae das dec cmove xchg push jbe test dec dec inc add loop nopl pop iret in adc add es add into jne dec (bad) push aas loopne dec dec push add xchg xchg rol mov push xchg or push add dec js int3 pcmpeqw fs push mov ret insl push add fs ret loopne inc es movsl es mov dec outsb cmp aaa and xor jbe imul mov sub and xchg or push and add daa sub out dec stos in jle daa addr16 test ror andb das arpl push add inc dec adc outsb nop or punpckhbw pop (bad) stc jb inc add inc add in sbb push pop dec dec add (bad) gs or xchg and adc cmp in cld pop aas call pop pop pop mov mov pushf pop mov mov inc add insb dec add mov dec push add add lahf lock outsb adc or clc push out call setbe dec add jle (bad) ds mov xlat mov dec add mov ds push lcall push push (bad) jb js sahf cmp sub fiadd insb mov add daa ret fsubrl cmovg mov mov cwtl inc add add lret xchg das inc add cmp add pusha stc repnz add dec add outsb hlt add aaa jp daa in out andnps rcr jl pop add xchg add jle and or enter add dec ja pop inc sub aas outsl sub mov jbe rcr add cmpsl jnp fdivs and fistp and (bad) push dec cmp add mov lahf (bad) int3 call ss jae mov mull movsb cmp jbe daa ret subl jb add es arpl (bad) jbe in test xchg daa fucom fcoms pop inc bound inc sahf dec adc or sub push dec test popa push int dec outsb ljmp sbb push jns jae daa mov ss imul loopne lahf imul loopne addr16 cmp sub xchg daa (bad) in gs adc push outsb daa rcrb ret mov jbe pop (bad) daa push pop sbb arpl bound pop and sub and and pop lds (bad) xor xorb enter cmp imul fisubrl sub outsb pop dec pop add xor aaa cs nop jbe pop lahf pop js or xor es je daa pop mov lock daa insl movsb test add outsb in add out daa cmpxchg mov jmp (bad) mov inc into sub mov arpl (bad) repz jl imul add pop cld push lcall jl icebp int mov inc hlt push inc hlt addr16 imul xchg cmc pop test pop xchg pop jnp cmp inc pop insb bound pop outsb clc xchg or jb xchg add sub push push add add add push xor cmp pop or aaa xor push push pop push imul cld fldenv push add pusha push add fstps or add add adc sbb pop or xor punpckhwd xor dec pop (bad) lock push push sub or inc (bad) inc mov xchg and inc jo or dec add mov ljmp jbe loopne enter fist cmpsb xor and jmp dec and jns add das das adc pushf jbe push dec push inc (bad) into in adc daa xchg pop movl in xorl sub test outsl and add cmp out adc xchg (bad) cmp fdivl outsb jns jg add adc es adc mov inc sbb sbb js out fsubp and pop mov inc ds das jo loop sub inc bsf inc sahf mov pop pop fwait adc imulb sbb cltd adc pop mov in cmp pop inc sub pusha cs das flds enter xor cltd xor jecxz daa (bad) xor out daa cmp rcll fcomp xor cmp in insb ss cmp push sarl xchg cmpb repnz inc dec xchg xchg inc loopne inc xchg lahf loope fs xor push push cmpsl cmp pop cli push push adc push outsb add cltd popf adc bound cmp das pop add sub dec jnp bound mov jnp xor ja inc lea ja mov je arpl movsb mov (bad) js pop and aas and lcall adc pop mov add or (bad) das adc cmp mov sbb xor push jp xchg in and dec (bad) xor nop push loope inc dec insb jae xchg sbb test incl dec pop xchg pop xchg iret mov in xor outsb pop lods mov sqrtps push (bad) lret inc dec mov xchg add xchg insb int jmp push push push dec sub aaa inc cmp (bad) rorb cmp add inc inc je add je dec popa (bad) out popa jg dec push dec dec imul dec lahf ljmp mov cmp jmp pop xlat jo repz push mov push iret repz or (bad) in shlb mov mov fcompl (bad) lret fistl (bad) aaa je or loope data16 jb push popaw lahf mov imul jbe jo sub inc cmpsb jl bound sub adc adc push or cld adc jns out in call jns out aam int3 enter sahf (bad) sarb jns test mov out xchg nop mov test push pop push dec xor out iret adc adc mov jo lahf out dec xor adc repz repz xchg mov cmp pop push inc xor clc sub iret mov adcb loopne cmpb pop inc jae or dec jo jnp lods repz sub (bad) cs daa push dec sub adc cmpsb test inc fsubs dec dec push rclb pop lahf jo inc (bad) xchg sbb pop and test cmp insl outsb imul push orl dec dec decl pusha pusha and pop cs inc or mov pushf in testl dec insl cmp stos push and stos (bad) fucomip loope or pop sub insl inc lea push push jno loopne or mov test outsl dec popa jb mov enter jg enter push sbb jg push mov push push aas addr16 mov test cmc fdivrs and outsl xchg daa negb ret daa popw pop cmp sahf jl cmp cmp push das push fst cmp inc jl push (bad) jl addr16 jle sub sub jle add add add ds jmp addr16 sub sub sbb aaa push mov sbb push cmp cmp rcrl jo adc js dec iret cmp mov dec xchg and (bad) repz imul mov mov and dec lods cmpsl add daa daa or dec pop and pop xor in test add divl lcall and cmpsb cs push and aas and sub jo test or adc push nop jo jo rcll mov fcompl aam or adc and pusha mov cs ja xchg mov mov shll lds pop mull js (bad) aaa popa adc and cmp add ret push mov fstpl aaa outsb pop jne ss test push jne mov js sbb sub arpl loope mull and adc pop sub pop cmpsb mov pop cmp daa push ja sbb movsb mov mov in gs jno nop lret or rol jne cmp bound dec mov pop xlat popa aad insl push push test push xchg aaa xor push sahf mov and or daa mov dec movsb outsl imul mov pop mov jmp pop sti or fisttp jnp lods jo xchg inc or outsl addr16 loop (bad) add dec dec dec push dec out inc xor cmp mov xor femms aaa ss mov les and push push in add andl out push xchg arpl lock gs push push inc push dec das sbb push fwait daa push dec xor orl add sti das adc jecxz (bad) mov xchg pop insl fs arpl and popa add dec push push inc inc jb ret jle or jl ja sub in xchg dec fs je jmp adc test adc dec es push xchg pop or and and sub fs dec enter sbb adc das ret pop and and mov xor movsb inc add inc add xchg repz push dec add dec lea cwtl dec add dec xchg cltd dec add dec scas in cmp jae fwait dec add dec fs dec adc jne iret (bad) cld add xchg add jbe mov xor call loopne xchg faddl cmp add add lock xor and mov and xor dec adc adc sub pop sbb sbb ljmp cmp pop clc daa subl mov push cmpl int pushf or lldt lods adc push pop xor gs add adc mov adc xor sub add adc frndint and imul outsl shrd mov pop add pop aaa or add sbb lods mov sbb jae iret scas cmp add data16 lret mov ljmp sahf data16 push dec and inc xchg or dec (bad) clc mov cmp in daa daa push cmp inc arpl pusha sub xor clc outsb idivl (bad) sbb loop dec hlt arpl push lods sahf xchg add mov push add bound sbb or dec repz adc add lock xor movsb cmp or sub adc movsl add inc push mov pop cmp or loope push or and insb pushl jmp pop xor adc pop add lret inc test xchg aaa or cmp mov test adc ss je dec repz xor lcall cs add test xchg mov mov mov mov mov pop sub test pop es pop xchg sahf sub nop adc inc sbb fs jnp rclb scas dec add bound push xor cmp daa jbe ss (bad) aaa add inc dec dec dec dec insb push arpl (bad) and push insb pop roll pop cmp and adc shll in pushf cmp push dec mov leave out outsb push jge jge xchg pushf fmuls sub daa in mov stos lock test dec adc dec enter xchg pop cmp psadbw mov pop ret adc and pop clc scas push push pop enter dec sti mov test mov and in mov mov or xchg mov mov scas stc sarl mov repnz test in pop enter ret or and icebp les enter shrb inc pop pop enter adc inc xor psrlq out jg fidivl jl fcmovb jmp leave mov (bad) or ss pushf fs clc adc adc int dec ss (bad) sti cltd (bad) popf (bad) cld jns sti sbbb jl push pop jecxz xor push dec xor (bad) inc les push dec dec inc add loopne push das sub mov enter aas inc sbb or jmp das and push inc shlb xor flds inc or insl xor aas roll dec lahf push imul mov push xor lmsw pop popa in push pop lahf lock fnop cmpb nop xchg pusha lahf jg call cld std sarb inc mov inc inc das jg xor rorl ds inc jb fcmovnu adc rorb and jg mov xchg decl add dec xor stc aas movswl add in mov push push add aas add inc xchg and (bad) (bad) (bad) stc ret xchg cltd leave mov roll aas and sbb jno mov (bad) mov mov cltd cwtl cmp cmp das dec in aas push sbb (bad) (bad) (bad) (bad) mov mov xor push sbb mov xchg aas lret repnz into and dec in (bad) (bad) mov jl data16 mov outsb xchg dec adc stc lret xchg nop sbb cmovs cmp mov out les into (bad) jg lea jnp fwait scas aas (bad) js adc pop dec enter (bad) and test incl inc ds xor dec inc mov (bad) xlat mov push (bad) lock shrb sub add cmp xor test dec push inc inc xor xchg pushl sahf mov in (bad) mov adc push clc cmpl sub es shlb push push sahf jnp jg (bad) (bad) ljmp dec jne push mov xorb sub mulb push repz je adc enter mull enter inc xchg outsl (bad) jg jnp pop cmpsb lcall pop mov pushf das jo mov (bad) xor dec in jecxz arpl outsb push mov rolb pushl cmp es lds lcall push push test (bad) jmp cmp jb push adc mov outsl jmp mov idiv lcall stos mov (bad) ret cmpsb inc inc outsl mov mov cmp add xchg test jg ljmp cmp bound jp repnz cwtl sub cmp jl gs imul ljmp stos or testl or (bad) aaa mov (bad) (bad) mov test mov mov jne cmpl add dec clc rcrl fucom pushl decl mov cmp jge int3 mov mov aaa cmpsl jno (bad) decl shlb xor cmpsl insl dec sub and dec cmpsb (bad) (bad) lcall and sub mull or add adc cmp mov jg popa pusha or add cmp cmp mov xchg dec dec nop jbe daa sub aad mov int3 andl mov (bad) (bad) (bad) mov mov movsl cmp dec popf push sub sbb daa mov inc outsl jmp pushl or loope nop cmp push dec fldl stos xor xor dec and mov cltd test sahf test mov and clc testb jae xchg and push (bad) pushw inc cmpsb sar jno mov mov push xchg xchg sbb mov stos or insl mov pop pop push (bad) cmpsl pop mov popa sahf enter jmp push xchg mov cld xchg jmp adc push insb (bad) stos loope gs dec iret ss addr16 (bad) (bad) (bad) mov adc dec cltd mov enter xchg cmp xchg inc fldcw outsl (bad) jg ljmp (bad) inc pop repz xor cmp ja cltd adc int icebp cmp push pushf mov int std idivb or stos (bad) stc and call lahf (bad) jge aaa (bad) mov sub scas jno nop lock cs in aas adc data16 mov (bad) fldt pop and push mov jae test cmp std jns imul xor xchg ja mov call data16 cmp adc (bad) jmp add mov bnd int pop or pushl (bad) (bad) mov push int3 mov scas xor push test fwait sbb lods pop or (bad) loopne pushl incl icebp addr16 imul nop out fsubl mov les mov fbstp or jnp pop dec sub sbb sahf xchg lods xchg (bad) jg inc aad pop mov test jae cwtl cmp fwait jnp xchg cld insb loop fistp mov pusha add idivb mov cs ljmp xchg daa outsl xchg cmp nop movsb mov and cmp cmpsb (bad) daa pop popa out sbb out test xor outsb pop jbe lldt adc lcall mov fcoms movswl add add and clc jg mov cld aas ret adc xor xchg push repz inc lods push sub fistpll add sub setg cmp les push and idivb aad lds mov dec cvttps2pi xchg loopne xor or out push scas in es dec inc fsubr jb das in push lods jmp nop pop xor ljmp in jmp lcall lods bound and repnz shl mov pop jb add out mov enter push lret pop enter push out inc cs mov repnz cs adc jecxz jb adc jb and loop nop or mov enter clc loope test enter pop ss pop enter loopne inc cs cs bound (bad) mov inc add cmp pushl (bad) sahf dec jle daa leave fidivr js fwait jp aas xlat out daa fnstcw and ret cmpsw aas shll test pop inc adc xor out aaa (bad) aas inc inc mov shlb inc mov rclb roll inc cmp pusha add aas inc push push cmp ror insl xchg mov dec jns ds ljmp sub and (bad) aas inc cmp adc sahf xlat sarb dec loop cld stc js and mov (bad) jg pusha sahf subb dec les mov sub negb mov (bad) mov (bad) aas in (bad) xlat push (bad) push push push or roll mov sahf inc add lcall pop addr16 aas rclb push mov lret outsl (bad) (bad) cld sub jmp aaa lcall push mov inc out ds and xchg dec ljmp into aas sbb xchg and xor outsb fdivs and iret pop jmp or mov jmp or out xor lret scas sbb sar fisttpl call sbb sahf js sti subl test jge scas pop loope loop push ret adc and dec mov int cmpsl sarl addl pushf ret aam (bad) int orl (bad) incl xchg sbb pushf or push lock les outsl (bad) jg mov and test aas sbb mov das jb or add jl int cmp aas (bad) jbe neg and cwtl movsb aas mov mov inc addr16 fwait (bad) aas push sub mov push das push pop data16 pusha add fistpll sub fldcw mov out push push pop inc repnz (bad) jg adc fldt adc adc repz inc fstpt (bad) mov xor cmp daa sahf int push fwait xchg outsb mov (bad) std (bad) jg mov mov (bad) adc nop push fnstsw divl (bad) (bad) cmove sub push shl stos aam sbb sub cld aaa or js dec aas mov mov pushl sahf cs movups aas fdiv aaa popf ja sub pushf enter (bad) mov adc movsl (bad) and dec insb sub mov faddl push jb mov cmp dec fistpll out mov mov jmp loope out out mov ficoml aam (bad) xor (bad) mov sbb cmp movsb or movsb test sub outsl addr16 aas (bad) (bad) stos cmpl mov loop jnp dec outsb push cld cmp push outsl mov push jns xor sbb stc sub test std jle dec xor pop jecxz lock movsb xchg xchg test dec push mov mov sbb xchg mov mov fistl or out lcall (bad) sub sbb aas test push aaa jg repnz pop arpl lods lret aad sub xor aaa (bad) int mov test adc xor jg rol mov les aas leave mov push sbb xchg jg lcall shrl add pop push stos cli arpl jp aad sti int sbb (bad) out mov add pop fisttp xor fimul adc cli (bad) adc orb lahf push adc loop mov xor pop (bad) (bad) (bad) (bad) (bad) stc into xchg (bad) adc xor or xor rcl xchg faddl push xor (bad) (bad) aas negl push inc xor jp mov insb jp add cli call in test jl sbb push sub fidiv call aas add imul aas sbb cld cmp out cli movsl dec mov ficompl rcrl xor test mov lcall push sub ds idiv mov icebp bound or pop push pop mov sahf push iret mov movl ret mov push shlb push inc ret sub sbb jp mov (bad) mov jbe scas sub in pop pushf mov aam push push aas loopne std (bad) sti jmp sbb mov loop lds rep (bad) int les cld aas (bad) mov jae mov lahf jge and ret pop dec lea mov jp mov xchg sbb in or mov pop (bad) jg push add (bad) and mov mov xor icebp pop jg add xchg mov pop push sub ljmp lret lret cs sub jmp insb (bad) mov sbb dec (bad) repz and (bad) push add ja mov cmp fwait insl sarb lcall out lea or or mov push rol aas jg je aas mov sbb add (bad) push ret scas das sahf ja inc or negl inc arpl or xchg cld ret push jb jns push fcomip aas mov sub decb lds into pop (bad) (bad) idiv cli and push push push cs xor adc lds sub (bad) stc fistpl repnz adc sub push mov fild rcrb fiadd sub (bad) aas int inc bound lahf cmp (bad) aas lds xchg push data16 fldt and push lock or int3 fbld aas ret pop shl out fistp aas in (bad) jp and rolb jmp push adc insb push xor movsb outsb lret pop sub es jg lds stos or push mov fidiv jl mov jb js and xor mov jl fwait mov adc aam xchg jb out inc mov nop adc jl jmp adc aas or sbb std stos pop lahf jae xlat mov sarl pusha jle cmp xchg repnz dec aas xchg adcl push pop ljmp pop (bad) fistpl sbbb jge and or fistpll or and pop push call (bad) adc out push ds push xor fisubl mov cld stc fwait (bad) xor xor int incl (bad) dec clc mov mov and mov (bad) imul pop sub pop lods xor repz out outsl jle jmp iret cmp lock fisttp or cs daa outsl jg jg inc dec push sarb stc pop movsb sub jle adc sbb fwait mov adc inc (bad) jno jns sahf lods imul lock out rcl movsbl ljmp or shr rcr mov cltd xchg sahf pop inc sub fisttp push dec enter call pop enter mov add dec push add test enter call pusha scas inc dec enter rorb dec enter ret (bad) test (bad) xor add jo aad cmpsl adc dec sub and jb push enter cmpsb push adc sub cmc rcrl add in js jo shlb in cmp mov jle dec in cmp mov or and mov jo jb dec enter aas mov adc jmp nop adc cltd adc dec and in shlb add in cmp mov subb in cmp shl pusha lahf or and add sbb and in (bad) int xchg push pop and or sbb int3 dec enter movsb jo add enter xor add pmulhuw inc daa mov int3 out cmovo push dec shl outsl scas pmulhuw inc pop or fsubr inc jle insl movsb (bad) dec cmpb jb repnz (bad) pop movsb cmp dec push (bad) jnp add push dec lea ret jno jne mov stc dec daa addr16 xchg rol xchg andb fisttp cmovo fcmovne xchg xchg lods mov addr16 das mov xchg mov sldt loop scas rorl jb push mov pop orl jbe pop add and and mov push daa mov push cmp sbb sbbl imul aas xchg in data16 jnp dec inc subb inc cs pushf int3 ficomp mov aas cltd subl cmp test inc loopne das xchg fcmovne fstps divps daa mov dec xor or dec pavgw pop inc mov outsb daa xchg aas sbbl pushf dec xor sbb loopne loopne outsb mov das mov je jae bound nop sbb repz hlt std xchg div flds sahf cmp (bad) (bad) cld jg xor adc fs aas inc xchg xchg bound mov xlat pop xchg dec dec (bad) aas pop mov jo cmp cmp pop arpl (bad) (bad) (bad) (bad) stc lret orl aas in das xchg xchg pop dec pop test sub jg aas inc pop adc push clc dec push aas test xor xchg xor sbb pusha and inc cld (bad) stc inc xlat mov es call jb mov and inc push (bad) xlat mov aas push add cmp lcall cld dec je stos mov inc scas daa jp ret aas mov gs mov mov jbe (bad) fwait and ret dec push pusha nop fs rol push scas hlt dec lds js movsb pop (bad) aas clc out pop ljmp dec decl ja mov rcrl push mov aas adc push rorl (bad) cld jmp sub xor lret xchg mov scas adc or mov push (bad) jg (bad) (bad) stc dec int sub mov mov sbb jle jecxz mov data16 (bad) out stc mov push ss js aas add or icebp sahf nop mov out fild nopl ja lods aas (bad) (bad) mov xchg aas ds nop movsl inc sarb pop aam call lods call clc fistl push ds cmc xor (bad) xchg mov fdivp jecxz sti push inc rcll dec pop pop inc test aam insl cld sti dec mov sbb xchg movsl int3 add int adc pop sub mov cmpl out mov jecxz pop jge cmp xchg jle (bad) aas les outsl mov mov out xchg daa loop nop jle and xor lea pop sarl jno outsb (bad) xor imul jbe lret add pop cmp fbstp push call fnstcw addr16 mul pop stc in out ds pop test (bad) mov or xor std in out aaa lea jne dec jle mov mov nop xor mov (bad) mov gs fstpt pusha pop sahf or dec js jle push and or sbb mov outsb mov incb inc xor push aaa loop pop add and cltd fnstsw add call push dec fistpll or in sub loop lock aas loope in outsl mov push add (bad) mov cli adc sub jo lea jp xchg flds sahf insb std push popf clc fdivrp imul test dec out pop daa or int sub and into js (bad) aas jb fmulp push push shl movsl push adc push pop inc xorb or loope pop dec mov (bad) inc (bad) out mov fcmove pop dec je arpl pop push and mov mov ljmp mov stc (bad) in outsl jno add adc enter aas jp sub push mov jp cmpsb adc xor sahf xor jecxz (bad) fidivrl cmc add mov adc fistl fwait inc xor mov xlat outsb push and push cmp fild fidivrl aam ds jg in jmp test (bad) iret and outsb xor enter pushl nop jg cmp inc lahf div xor inc repz lahf hlt and cltd lret (bad) mov pop sub mov call dec mov (bad) incb xchg (bad) (bad) mov mov push aas sahf ja cltd imul out xor sbb pop lahf not sti mov (bad) mov insl repz pusha sbbl jns lcall imul adc sahf cmp adc pop push in popf sarl push jg jo clc adc sbb dec outsb or mov cmp xor imul outsl dec xchg mov or jle insb inc (bad) shlb out outsl mov xor xor push and aas cmp sti sarb or lods lods sub push mov movl hlt mov sbb enter jle jno stos pop iret mov xchg repz cmp into mov (bad) in cmpsb outsl ss inc insl (bad) push lods int or (bad) mov call lahf (bad) (bad) cmp xchg in cmc add pop cld lret mov nop test cmp (bad) std int es pop jmp mov mov outsb xchg inc (bad) jg (bad) jle loop jge mov arpl ds or pop repnz mov push add movsb and (bad) mov inc push jg mov iret ljmp out (bad) push insl cmpb ds mov pusha xor mov and push (bad) ljmp and and (bad) movsl xchg les xchg mov ljmp and pop and outsl (bad) jg shrb stc ret ss ret cmp add sub aas clc push ret xor cmp sarl inc adc mov mulb and pop or push movsl mov xor inc out xchg xchg or aas (bad) mov add mov roll cli mov jg (bad) in mov stos lret adc mov mov daa aaa push or sahf mov (bad) stos idivl cmp mov lret (bad) std ds add stos xor ljmp pop adc inc jmp jg lcall mov sbb cmp inc mov mov sbbl mov dec pop fdivr test mov int3 scas jmp (bad) hlt mov dec ljmp mov cmp cmp mov xlat jl data16 sti sbb std js sahf push scas repnz xor push and jg mov cld insl lds movsl dec (bad) mov pop or xor sbb sub jp jge xchg mov icebp add (bad) stc call or aas jecxz mov lock pop sub mov jbe mov (bad) js les ja int ja mov mov inc xchg xchg xchg fcos out paddd cld xchg xchg xchg xchg sti cli stc clc xchg xchg xchg xchg div cmc hlt xchg xchg xchg xchg repz lock xchg xchg xchg out out in in xchg xchg xchg xchg jmp jmp xchg out in xchg xchg xchg xchg jecxz loope xchg xchg xchg xchg (bad) fstp xchg xchg xchg xchg fcmovnu fnop xchg xchg xchg xchg xlat (bad) aad leave leave leave xchg roll leave leave leave iret into int leave leave leave leave lret lret leave leave leave leave mov leave leave ret ret adc fidiv repnz inc cmovle dec push push push push dec dec dec dec or dec dec dec or or dec dec dec dec or or dec dec dec dec or or dec dec dec dec or or dec dec dec dec or or dec dec dec dec pop pop pop pop dec dec dec dec push push push push dec dec dec dec add dec dec dec add add dec dec dec dec add add dec dec dec dec add add dec dec dec dec add add or add call pop jl push and push popa xor or cli mov xor sbb push or sub cmp mov mov xchg jg add dec aas (bad) sub xor sti jmp dec cwtl push aas sub lods sub jp adc push aas mov fisttp (bad) (bad) std mov aas in adc xchg mov inc sahf jo mov aam (bad) hlt inc es mov es aas jg fild loopne or fildll out fistp sahf clc jmp mulb sbb mov and cli lahf push jg (bad) stc nop pop dec pusha xor aas xor lock dec out lahf jmp xor dec cwtl mov inc divb sbb stc incl pushf xor pop mov dec mov mov imul mov call fist aas test sub xchg in int3 mov repz pop cmp jns stc insl aas ds jl cmp aad imul push (bad) (bad) cld adc mov aam clc outsb jo jp add or int ljmp jno adc cmc push incb inc pusha loope xchg jge pop add (bad) (bad) (bad) fistp pushf lcall data16 push fstp push jae mov mov mov es lock (bad) push in jg mov mov push enter pop in xor xor or and std int pushl out adc test xor inc pop dec ljmp sbb stos ja jno inc orb js xor or fistl pop push pop mov push jns lds mov cmp adc aas (bad) (bad) (bad) and sub int mov jp mov roll ss xchg decl aas rcrb xchg ret jl ja xor fwait jg repz dec mov pop sub loopne jge nop cld stc push sahf and jns jle jl les pop sbb cld inc fistpll pop inc fiadd pushf pop mov out aaa call lea lret cmp push cmp (bad) je aaa jg aad int3 lea dec push xor push and cld (bad) cld mov cmpl aaa ret and shll push jle lret lock call mov jg repnz fidivr sub and or fwait aas (bad) adc jmp inc push fadds sbb pop mov loope aam adc cmp cmp out mov hlt idiv sti incl pop mov jecxz test cli repnz clc aad dec push clc rcr std int mov xor cmp jle iret mov push aaa stc sti int decb mov and xor aam cld int mov in ret inc fsub (bad) repnz inc sbb (bad) incl fiadd aas daa stos xor imul mov push push fwait sbb int3 xchg lret jg sar dec mov pop clc push pushf inc iret push cld push aaa gs insb cli sbb mov cmc jne sarb aam cld dec repz decb mov xchg rcl cmp mov inc dec pop lock shl je push daa movsl jno and pop fidiv fcmovnbe test adc jg ja sub dec fistp stos fwait jbe and dec insb es addl inc int mov jno jle (bad) aaa test fdivs mov (bad) cld xchg ss lcall cs loope sub lea out mov jbe dec mov enter stc repz jo call mov xor jp lret mov out dec aam push jo add psubq repz push xchg or dec loopne inc xor std jg iret das xor sbb outsl mov mov or int outsl adc inc mov inc push or add jne or incl lcall push into mov (bad) mov mov mov fwait aas (bad) pop push push es sbb cltd dec (bad) jg (bad) call mov dec mov cmp test mov or xchg cmp mov stos push and dec popa cmp (bad) fldcw sbb repz dec push dec mov inc addr16 xchg in and insl mov stc push xor stos xor jnp push mov mov adc cmp pop loop gs (bad) (bad) dec movsb mov mov fs mov aas (bad) out xor push ret mov sbb inc push inc stos fnstenv mov fisttp lret clc (bad) jnp bound mov (bad) (bad) std int add repz jle pop mov popa mov sahf jb loopne (bad) jg xlat push xchg pusha mov movsl push jo into mov ja ja (bad) jbe ljmp inc pop mov mov pushl in clc (bad) pop mov mov pop mov imul repz ds and dec hlt pop or push mov (bad) std out sbbl xor dec inc sahf inc aaa adc sbb dec std mov call push push mov insb std nop inc imul mov stos jne dec jp cmp (bad) std push jl call inc push dec push mov mov mov dec mov fdiv and mov inc aaa inc sti mov (bad) dec mov mov dec pop das (bad) adc sarl cmc or push mov pusha enter mov lea aas inc fldenv mov out sub ret js cmp jne ljmp cld sar adc mov in lahf scas lea ds dec sub cmp pop adc adc mov xchg dec mov cmp adc pop rcll aas add addb xor inc subb xchg inc inc ds cmp popf fcompl cmp outsl aaa ss in jb xor xor xchg fcmovne in cs sub outsb daa mov pop daa outsl and mov and push outsl sbb sbb sbb outsl pop fcmovne leave in push pop adc adc daa mov adc pop or popf fmull pop pop push outsl add add add call jb sbb std adc pop cli stc popf pushf sbb add xor repz cmp out in leave in in in outsl jmp pop call out in pop loop pushf fmull outsl (bad) pop (bad) jb mov (bad) pop aad in in shrl rcrl iret daa mov fcmovne outsl int3 lret pop leave enter daa (bad) outsl (bad) ret mov mov in mov mov xchg fcmovne mov outsl mov pop scas fmull daa scas outsl lods stos pop stos jb mov movsl pop movsb in in jb mov mov fcmovne popf fwait outsl lcall daa xchg outsl xchg xchg pop xchg xor sahf pushf nop mov dec into dec fisubr mov lahf dec dec dec dec sahf popf popf pushf popf pushf pushf fsubrl fwait lcall cwtl cwtl xchg xchg outsl jbe jb xchg xchg xchg xchg aas in in xchg xchg xchg nop leave leave leave in nop outsl (bad) mov lea mov xchg mov dec dec outsb daa xchg xchg dec addl popf pushf addl jge jl in jbe jnp aas jns leave in in js jbe jbe fcmovne leave jne je jae xchg xchg xchg jb jno outsl outsl outsb daa daa daa outsl outsb insl aas insb fmull dec insb imul mov push cmp cmp fs jbe jb arpl popa aas in in pusha pop pop pop leave leave leave in pop outsl pop pop pop xchg xchg xchg fistpl pop pop pop daa daa mov push push outsl push push push dec dec outsb daa push aas push push push pushf pushf fmull outsl push push dec cmp mov dec dec jb cmp dec dec outsl dec dec jo insl jb (bad) pcmpeqb xchg mov push repnz outsl inc push pop enter mov push out pop sarl aas dec add push mov xlat ds inc mov dec dec sbb (bad) out ljmp fnstsw mov es jg add fstpl (bad) (bad) in (bad) sub sar inc fadds std es stc mov fistpll add cmp popf mov add ds sub scas cld jns mov or arpl push repnz incl ds test mov pop (bad) repnz or mov cld mov xchg mov lret sti inc pusha or cmc bound inc call add mov mov ds loope push (bad) out into fmuls int3 push add ds mov inc adc mov es adc cld loopne,pt or mov stc jg or pusha insb xchg jb inc pop or sar and xor (bad) jg mov cmp iret pop push (bad) or add mov and adc jae fist aas lea and pop xadd mov inc mov lcall xlat aaa stc xchg xor mov adc aas jno insb loope insl sub adc and scas inc das jg adc add and push aas jmp mov loop or pop and aas xor cltd or xchg sbb xchg (bad) fistpll hlt sti in cmp sub orb sub dec addr16 mov loopne inc or mov pop jb add aas fcomi jae shr jg int inc sub rclb mov out (bad) (bad) decb test pop and or out jo pusha jno pop dec and idiv ret outsl cld bnd not pop xor mov mov xchg pushl aam inc push aas iret jmp pop test aas daa push lock out cmc cmp sub data16 xor mov inc pop sti (bad) std out inc adc shrl cmp fist nop out addr16 and imul adc dec xchg mov push add sbb pop ljmp jg aaa sbb xor popa sbb adc or push (bad) out mov sbb push leave pop dec xchg push sar repnz ret push mov rcrb and aas aam adc repnz jmp jle and and pop and rcrb xchg lcall mov pop jo xor jl aaa pop and das ret outsl scas cld int nop pop mov dec sbb ds jmp ret daa xor inc adc sahf sub pop cmpsl sub pop stc fwait mov mov add aas mov xor sub xchg push xor mov cld sub in xchg mov adc dec cmp adc aas and (bad) (bad) add lcall sub pop jl ds xor lods sti out stos (bad) push stc clc sbb sbb inc int jg lahf jg sub push bound add clc cmpl fwait aaa clc lods cmpsl test data16 inc sbb (bad) jle dec pop fwait sub push cmp fnstcw inc pop mov mov (bad) loop mov daa cmp sbb int3 jnp and (bad) (bad) jle loope mov or iret rcrb movsl jmp add lret mov jnp scas and dec out rclb stos out cmc or inc and mov jne and cmp outsl scas cld int or es dec loopne cmc outsl mov std mov dec xor aaa mov jmp xchg mov pop test fmuls xor add dec fwait sub scas into dec push push aas or daa mov push mov pop stc xor inc scas inc jbe add aas sub inc jle pusha mov and loope mov inc rclb cmp dec or adc aas jmp rorl sub jle (bad) mov xchg aas mov xor fwait push jle shrb cwtl ds and xor lods mov jle stc cmpsb adc push nop and xor repnz jmp aas mov and lahf or push push repz adc out inc int mov pop mov jne inc cmp ss stos (bad) std mov push fldl xor sub cmpsb push mov std pushl or aas mov and and cmp mov pop js jns inc dec cmc fwait lahf cmp inc adc popf rcrb fistpll jne in jecxz add cmp (bad) fdivl adc xchg fildll add inc sub cmpl scas cld div pushf xchg loope fisttp push test js mov jge add dec adc test mov xchg loope xchg aaa pop inc fcomps mov jb add push lods popf lret aas rolb outsl mov sbb aas adc push push jg in cmp loope fsubrl dec fistp rolb ss call cmp fistpll dec sbb lret sahf dec fistp dec mov fstpt add cmpl inc sbb cs or cmp (bad) clc out shlb fs push add aas jle dec jl or pop pop jae xor push les test pop sti out pop mov mov push pop mov sbb dec lahf aaa push (bad) negb push add adc or mov adc mov movsb lret into rcr push stc fwait sub mov insl mov mov adc int fistp pop sbb push movsb (bad) xor ret aam mov or les (bad) jl das push mov fs xor jae call call adc sbb ljmp ficompl aas sahf xlat lahf jno sbb push test stc int mov and aas adc pop mov stos call pop push xor and es adc dec xchg pushf cmp jae imul stos xor inc test jg (bad) mov les inc lret adc fcompl mov scas cld int clc mov xchg mov (bad) adc aaa ja mov pop ret sbb mov int mov pop mov dec sub outsl scas cld adc pop cmp dec and push popl sub outsb loopne movsl nop xchg sub or out adc jl (bad) out pop sbb sbb inc inc loop mov and test pop cmp loop adc xor cld int inc je das loope cli mov paddb loope lock and ljmp fist mov loopne push (bad) (bad) mov scas push mov cltd out (bad) xchg in mov push adc je and dec adc mov ret test repnz mov ret mov mov adc stos cmp jl xor int3 out std int mov add adc call sbb xor lret pop mov outsl int ljmp aas in push (bad) es cli mov cs inc cld jae mov aam movswl push or add aad mov dec or dec vprotb mov xor sub xlat lahf std insl imull and cs inc sti mov jge xor (bad) xor (bad) lcall and adc stc aas sub lahf or jge mov lret push fstpt push inc and or cmp (bad) or xchg fildll mov xchg dec cld fdivrl or call fwait pop lahf fwait lods xor pop rcr mov rcr pop cld int add pop adc pop inc mov lret or add scas repnz mov fisttp lahf push push or mov bnd loop or (bad) mov inc clc mov std (bad) pop cld int inc mov aas push xor pop in sti repnz or mov out push test dec mov sti fwait sub out xlat shrb out fwait mov sbb pop cmp jg popf (bad) jbe sbb mov pop cltd push cwtl fisttpll jg mov add cmp jb pop out fucomp clc mull sub incl sbb dec pop loopne scas cld int lahf jno adc (bad) xor xchg push out mov lahf inc xchg add fmull cmp out in jg dec xchg fldl shll pop out aas adc bnd bound add fild mov lods jbe cmpsb out jg mulb dec jmp inc lock push inc clc pop push sub int call lock push inc fiaddl pop or (bad) pusha imul repnz mov or dec repnz cld out fistp or push repz adc (bad) cli add cmpsl or out jle fsubl push imul ficomp jle in mov test aas sub stc xchg pop pop fwait push push std ljmp push adc mov pusha fsubrp mov push push push test or inc call fnstsw inc loopne pop aaa push stc incl cld mov cmp in adc sahf out mov mov dec sti mov int inc push jg push mov mov test (bad) stc mov inc call pop repnz push sbb xchg xchg mov repz mov (bad) repz pop icebp das in repz or lods hlt push stc fwait sub mov xlat push dec push inc push lret sub push (bad) pop loopne mov mov iret test xchg idiv hlt mov sub xchg sbb aas inc xchg cmpb inc pop idivl mov sti jge ja jmp repnz shrl sbb mov icebp in incl push pop pop test aas idivb dec (bad) mov jg mov or sub cmc jg mov sti push push pop and aam ror lcall in mov cld test clc jmp insl fnstsw adc xor mov adc mov dec call (bad) mov cltd out pushf lock jmp mov xor cli in xchg xor sti jg mov shr pop sti jmp mov push jmp aas xor jmp mov xor inc sti outsl out (bad) cld jg mov stos sahf cmp pusha movsl cmp fist jle mov cmp mov aaa outsl lock mov call scas cmp mov (bad) (bad) fwait lock cmp ss (bad) call mov out mov jbe fistp lret mov push push cmp (bad) push mov fs lock icebp (bad) outsl (bad) adc shlb push mov pop push aas bound jmp mov add mov les out push fs cmpsb ret jns arpl (bad) jmp adc inc imul xor push int cli outsl push mov mov cmp outsl push pop aam stc decl pop push adcl call ja sbb nop mov (bad) push gs movsb loop lea neg sub es mov fist incl and outsl (bad) cmp repz lret xor dec xchg iret jg lcall or dec cmpsb cwtl cmp inc jb xchg int3 jno loop fcompl nop (bad) fist push out push push jnp daa pop cmp sbb (bad) scas data16 (bad) fwait sti jnp dec (bad) in fwait imul js lcall xchg mov mov insb mov dec aam pop mov ss lcall xchg pop mov stos out mov jnp ljmp dec push jne xlat mov ljmp jg mov and xchg mov dec jnp pop mov cmc outsl (bad) cmp pop add loopne pop imulb xor (bad) jle (bad) fstpt mov cmp frndint and mov jle adc (bad) xchg test jne mov xchg fdivrl dec pop push in movsl xchg xchg jle (bad) ss mov add cltd cmp cmpsb mov into push movsb hlt outsl cltd test push push rorl cltd aam stc int mov fild dec lcall push push adc cmp (bad) sarb mov sbb (bad) fmull inc mov fistl nop sub outsl (bad) cmp das ds aad bswap jno mov mov xor push jle fmuls and jl sbb sub pushf mov movsl pop test daa xchg cmp sub mov lds inc dec pop out pop mov aaa push loope inc mov data16 add jmp jge xchg sahf mov cmc popa (bad) ss mov in adc sub aaa clc lcall fidivr ficompl lods add cli repz pushl and xchg mov js xor repz mov sti test fprem1 xor cwtl jns jecxz (bad) pop (bad) push nop sub jp dec cmp add mov pushl das push lock cmp rcl in (bad) out sub (bad) lret cltd dec call loop in scas xchg inc jge or fdivl js mov das stos push cmpsl outsl push jecxz pop rorb mov mov push cmc sahf xchg mov mov jns push lods cmp sbb setb movsb push lcall out pushf push xchg sbb cmp (bad) jb jg xchg aam (bad) out lcall xor (bad) ds inc add mov pop mov leave imul cmp push pop out xor cmpsb push nop xor jg fdivl loope idivb inc ficom inc loop aaa mov xchg mov jle andl int3 xor inc xor mov js and mov xchg mov mov push andl cmp loop lret int3 adc jle fimull jne rorb addr16 mov das mov push stos mov cmp push stc jge (bad) push xchg push stos mov (bad) idivl cltd jp xchg subl aas cmp gs fldcw aaa inc scas push shrl push pop and pop fimul orb fildll add mov cli fwait (bad) fistp das cltd add ja test rcl push rorl (bad) call jns mov adc ds daa add aas fistp ljmp xchg insl bound nop xor fwait decl lods (bad) and inc sti int mov repz not fwait clc (bad) lahf mov (bad) mov xor cmp cltd dec push es xchg dec std fwait (bad) jmp mov xor stos jecxz xor jo cld (bad) push outsl fisubr mov (bad) call aas and lcall push mov pop addr16 jg enter cmp movsl xchg jl jbe push scas mov rolb mov mov mov pop ds push mov jl ljmp arpl push outsb dec out lret cmp mov cli pop aad pop dec pop mov fwait xor ss pop xor outsl (bad) jg nop inc (bad) fldt popf mov sahf jns arpl lret dec ljmp std (bad) push leave cli nop cmp repz mov sarl out xor jle (bad) pushl push or xchg cmp mov sub push sti aas and orb dec jne sti outsl push pop xlat test pop andb cmc (bad) cmp lea jecxz mov mov lcall jle pop jne dec push mov mov dec dec jne sar mov sub jp cmp xlat pop ret pushf imul std pop (bad) hlt dec iret cld aas fisttpll gs in in adc stos inc push or dec pop cmp inc fwait out push lods cmp decl xchg dec ljmp xchg insl popl dec mov repz fisttpl ror add cli ret pop push or jb (bad) push cmp div movsb lcall jp inc aaa ficoml (bad) mov xchg push ja popf jno dec pop aaa (bad) mov aaa pop xlat add (bad) cmp or jecxz call xchg loop rcrl outsl push xor int add pushf cmp mov repz ret js ficompl pop mov pop pop dec sbb movsl sub movsb add stos (bad) push adc andl jg scas push (bad) int3 test cmp dec (bad) sti push jp lea jnp movsb fisubl aad fcmove push xchg sub push push (bad) mov lods adc and mov cwtl cli lcall (bad) popf cmp mov (bad) aas inc mov (bad) call fsubrs adc pushf lods std jnp xor sbb das push push xchg movsl repz dec leave cli aaa incl sub shl jns xchg je bound push dec mov aas pop mov xor aaa cld jmp out fcoms mov imul mov push fwait dec lds aas shrb xor mov pop (bad) dec fildl enter test add outsb xor pop push cwtl push add aaa cmp jno mov jge js cmp xor test dec sub cmp adc sub inc jnp repz sub popa xor pop inc fidivr addr16 arpl out sub (bad) (bad) or sub add dec dec pushw pop vcomiss mov addr16 leave pushl pop fidivr popf ja and scas fdivr aas mov cmc scas aas sub ss out addr16 das mov sbb mov out mov aas push xchg pusha je pop add test cwtl mov enter popa add rorb xchg clc (bad) (bad) mov mov xor fdivs enter loop call nop lret aas and and add jne iret dec in pop (bad) sub or mov inc lret mov pop sub xor (bad) imul push aam lods xor aas jo mov aam adc (bad) pop inc sbb (bad) aas inc adc fadd and push cmp fdivrs jmp mov cld mov aas jge mov pop popa cs mov fdivr xchg inc (bad) aas fs clc sahf in fiadd lods fnstsw leave fisttp in sbb loopne fldl aas shlb mov (bad) pop cmp xchg jle loopne test test loop data16 and inc xchg lods das jecxz daa jg test loopne pop fwait lahf cmc idivl in mov lret xchg loop mov in or sbb inc jecxz pushf or push mov mov (bad) std in in adc out xchg sahf test and divl dec (bad) pop mov cmp aas imul jmp test rcr cmp mov into add and jmp outsb lcall cmpsl into pop xchg out arpl (bad) jge repnz and and fwait mov mov push lods mov lahf mov add cmp push mov pusha mov cmpsb adc add jl stc fwait mov cmp mov fcomps xor sbb out notb pop in cmp sub pop icebp das clc mov sbb pop icebp scas dec add aas xchg jb in daa sti fwait mov mov jb mov cmp sbb or out das in jo cmp and rol (bad) xchg repz fsubl stc (bad) imul lods daa pop sbb jl aaa jl or hlt pop loop push into jge (bad) test fs jg int3 push outsb xlat mov dec push cld int fstpt pop cmc sub lret sbb outsl sbb outsl clc fwait das inc frstor or das mov inc or pop jl xchg cmc js mov xor jl rcrb fstps cmp in xchg xchg adc jo and aas mov lea int das rorb jae js fnstenv xchg mov fs cs sub fucomp outsl xor mov inc pop stc das push mov mov stc and dec out leave fist pop mov les jno push dec (bad) daa pop loope rorl cli inc into xchg fwait lahf es sahf ret dec lahf mov es jb push cld int xchg inc sti sub rcr and movsb daa call pushf cld fsubs arpl (bad) aas in outsl jle cs or aam jge pop pop mov das clc gs dec sbb inc pop std lret pop aam dec test nop aas (bad) sub addr16 mov sub pop cmp fwait (bad) (bad) pop int xchg dec lcall cmc pushf out leave fbstp xchg nop loope repz dec dec push inc mov sub sarb push call inc cs icebp inc mov push scas cs das lods in into fistpll sarl das (bad) lock lds xchg mov repnz mov add and das push inc dec test stc jb clc mov mov mov sub xchg pop mov adc sarb add leave fistp jo push dec mov dec (bad) out into test sub xor jae in fiaddl add and fwait sub jg sub add rcll pop cmp or fsubl add mov xchg fdivrs scas repnz leave roll das push out ffreep sub xchg mov xchg stc mov push dec loope push jg js or fisubl add cld in (bad) ss push stc (bad) out (bad) sub ret mov fwait sub stos (bad) idivl dec fwait xlat fistp orb dec add rcll or or lock in sti cmpsb sbb (bad) dec das mov icebp lds mov push push loop pop push sub cld int push dec aaa pushf mov cmp push in outsl scas test push xchg cmovb sub jg xor mov ljmp jb lahf (bad) sbb es fcoms push clc inc pop lods add inc (bad) add insb add pushf sub movsb outsl adc xchg xchg out shrb mov sub dec dec (bad) pop cmp (bad) lds hlt aas sub lds add cld das push cmp rolb fcomip aaa jg mov in inc jecxz mov std int sub in stc xor out leave fbld mov or inc aaa push dec (bad) divl aaa or push or mov lret or iret add xchg dec or dec sbb cmp outsl scas pushf or sbb stc int pop add jnp out (bad) xor mov sbb (bad) loope das or mov (bad) jecxz nop (bad) (bad) jae jg loopne lcall ret xchg shlb pop push movsb mov cmp xor fwait jne or adc imul sbb movsl mov (bad) es int inc repnz push dec or adc cltd sarl jecxz dec xchg mov pop lret mov or pop addr16 js mov sbb mov fwait mov fdivl inc dec inc sbb inc xchg inc jle cmp mov addr16 fs pushf cld int in adc adc stc loope outsl ds es iret cld (bad) jmp scas mov cmp inc aas push dec pop cmc aas adc ljmp inc das pusha ja mov test clc test xchg mov mov comiss cmp sti push dec mov into outsl scas pushf cld scas mov pinsrw cmp and out inc sete iret jmp daa adc or ds xchg dec arpl jle xor shlb adc xchg in (bad) das dec cmpsb dec add dec pusha das and dec into push test or cmp stc xor mov out or (bad) cmpsl jno cmp xchg xchg mov test shrb push cld mov loopne outsl outsl xchg dec adc (bad) divb xor sbb push mov cs and outsl pop inc and lods jl lcall cld int inc das subb in and mov in mov sbb cmpb mov test xchg pop cmp or push inc adc pushf out leave fistp push stos js jg adc mov xchg movb mov xor test pop and mov lods in cmp mov int xchg inc adc jno mov or outsl scas pushf adc mov xlat (bad) xor jg in pop ja or mov adc inc xor lret jmp das pop comiss scas mov cli cmp loopne adc xchg or (bad) int xchg adc in test pushf adc (bad) icebp fbstp jg in push jne jl cmp cmp fwait sub cmp sbb adc leave fistp ljmp inc adc (bad) cld out jnp sub outsl das and hlt repz js xchg clc adc loopne jae int and aad insl test adc push incb fdivp add cmp add aas ret scas ficomp cmp inc or pop add cmp punpcklbw lock or pop push and jg (bad) out das mov stc xor inc mov mov dec and dec rclb sbb sbb mov int pop scas (bad) mov pop dec inc add xor aaa jmp inc and jecxz int xchg mov pop andl fistpll xchg adc xor jno rcll xor out popa repz sub adc lea mov inc in pop cmp movsb dec inc pushl cmp adc cli add negl int push sbb popa jo dec xor outsl scas cwtl addr16 movsb cltd cmp sub jg in arpl repnz push inc push stc or fwait push dec jns ficompl push int xchg mov xor pop push mov or mov adc pop shl shl pop lock jns loopne mov jle and jae in sbb pop sbb fs out movsl sahf (bad) repnz jg das adc push (bad) hlt dec xchg mov leave imul sbb jge mov int pusha pushf push mov lret leave outsl mov fwait clc add mov lcall xchg stc fwait mov jp (bad) inc daa cmp sbb pusha mov or in in dec jle in sbb lock aaa pop fsubl push loop adc inc das and je xchg stos in inc pusha js jl stc fwait mov push xor jmp mov lret enter sub inc lods xchg aaa jg mov ret dec das dec jmp enter stc xor add sub loopne and (bad) ljmp sbb fwait lret and mov outsl pop inc and pop out xchg repnz inc das pushf xchg mov (bad) xor gs mov mov das and cmpb xor mov stc fwait stos xchg or cmp mov lods call or push pop add loopne mov mov (bad) aaa pusha or sbb lods mov push dec decb idivl sbb mov cmp mov inc inc sbb mov testl jl xchg adc mov pushf sbb mov sti loop daa jg in and ret subl cmp fwait sub pop sub sbb leave fistp (bad) pop jae stos mov inc sbb (bad) out dec lret xchg xchg push sbb push dec mov lods movsb xor dec dec sbb iret int xchg mov inc enter pop rorb jl sbb jp sbb aam mov mov fwait dec aas sbb fwait xlat (bad) (bad) jmp fwait sub sbb fisubl mov cmp js fdivl outsl lods in stos inc (bad) out sbb cld push fbld test and outsl pop aam loope sti jp xchg inc add repz in inc add pusha aad xor mov mov push fisub lcall xchg xchg mov fs jmp fwait sub cld insb and hlt cmp out sbb aas xlat sbb and (bad) lock out leave sbb cmp repnz sahf dec cli test outsl incb lcall inc (bad) mulb push mov ret dec iret sub out in pop fs stc cmp idivb std subb inc (bad) out inc cld test jnp jg inc mov xor aaa cli inc pop lret xchg jg rolb ret push push xchg nop jg clc or jg call outsb sbb xor push inc add std add cmp pop pop decb pop lods cld int xchg das inc cmp or mov jne in mov or mov pusha xchg dec jle andb mov or outsl (bad) das aam adc (bad) sbb and das and in adc sub mov lods pop scas sbb fwait adc push dec rclb add sub push mulb outsl pop jnp mov inc and mov jecxz xor ror inc das mov xor dec (bad) out enter test sbb inc ficoml aaa pop inc andb mov stc xor xor sbb fistl push pusha inc xor lock cmp cmp lret inc and subb dec pop pop adc xchg cmp lcall push js nop push add cmp sub or push mov mov mov mull xchg push cmp leave mov fcomps or xchg hlt js ja aas nop pop push in fwait sub dec (bad) cmp cltd adc mov test push mov outsl push divb sub xor inc push loopne negl out aas push xchg leave aad xchg iret aaa shl (bad) daa mov bnd add (bad) outsb faddl pop mov mov daa mov gs popa adc sub lods dec push stos xchg loopne mov addr16 int sahf xor push jae push xchg dec call push sahf mov movsl dec (bad) mov out andl dec inc adc enter test jbe adc inc sub xlat mov out repz and xor mov mov cmpl ja iret dec enter xor or nop outsb loopne cmp inc into add sbbl lds test push dec fwait rorl lcall in add shr add jo jge es cmc pop add loop pop repz add push inc dec icebp sbb orl pop dec out xchg or push pop test or sbb (bad) or fisttpl sbb add inc xlat and add lret jo pushf popa rorb lret jp jo jmp sbb sarl inc dec pop dec push push inc add popa pop adc xor jg mov shl cmp mov aas das xor push dec xor pusha add inc (bad) dec xchg jne and scas push sbb out dec pop inc inc add sbb push sbb stos and and test lahf cvtps2pi outsl inc mov inc mov rclb pop mov push stos pop xlat add adc dec sbb outsl xor lods mov inc mov xor shll xor dec test push push and fwait gs xor sbb mov pop inc dec in jmp xchg nop nop cmpl push pop dec lret and inc popa je dec push fadd inc sub xchg outsb adc inc rolb sbb aaa add lret fistl add mov lea push xlat add rolb pop or xor add sbb and or mov pop push popa inc inc mov inc dec dec add xor dec inc pop xchg ja and xor jnp lret in das adc push mov es sbb inc fwait fwait jbe adc lahf repz and push js stc dec add movsb sbb push in lock imul dec es sbb rcll mov inc pop ds pop dec xor xor pop pusha call jl mov je sbb or cs shlb add dec call xchg shl jg mov out pop and scas xchg cmpsb push ljmpw cs lock imul push test mov pop add xchg xlat sar and push dec lcall fisubl add mov roll sbb jg aam jne mov mov dec lret push or adc daa xchg shrb (bad) sbb inc int3 test mov repnz daa add or inc pusha xchg mov mov (bad) ss add lea jecxz dec subl aas xchg pop sbb push out add cmc cld (bad) or add test pop rclb add push test subl pop ret jl data16 or ficompl imul push cmpsb inc mov cld pusha (bad) jns and addr16 movsl sbbl out test shll xor decb inc mov enter inc mov iret mov in call mov push add mov xor fcomp loopne jb jle or push in xor or pop out mov mov das add (bad) push and pop pop add aas add out incl orb mov fisubl outsb dec cmp sbb jb pop lea mov nop xchg xchg enter xchg add xorb xor mov add aas add test adc push xorb icebp add data16 movl push push push push fsts inc sbb push push out push xor or stos fdiv cmp repz repz push cmp and add out ds stos in les nop jl stos push dec push xor xor cmpsl push or test fucomi enter sets iret push cmp sub jg das sub lock xabort movsl add rcll jnp jmp negl dec push sub sub addr16 adc ds repz call sahf out sbb sahf sbb in icebp sbb cmp and jns sarb push jp lock push pushl fs faddl push cmp insl dec push (bad) sbb or xchg fcmovne leave or or or or daa adc fmull leave adc and popf pushf inc push addr16 das push sysret mov in push mov insl push and leave repz sbb push pop xchg fucomi (bad) andb (bad) aas orl (bad) test xchg sub dec movsb fbld enter xlat pop sbb adc xchg (bad) pop shr aam shlb dec icebp push mov xchg or mov fimull or push aas jg aas cmp and adc or sub insl sbb jl push jg,pn ret adc dec xchg and outsb call (bad) (bad) xchg adc sbb pop jo mov push mov inc cmpsl sub or sets sbb (bad) xor mov and movsb jns in out push inc loopne sbb pop sub pop jno pop sub pusha adc insl jno in jg les pop mov scas inc or jns cmpsl push inc cmp xor lahf out sahf sub sbb or or repz call cmp repz ror enter iret (bad) rcrb mov cmp in pushf xchg mov test iret repz pop push dec test cmp dec cmp sbb adc add iret in sbb pop push cmp repz xchg push mov repz repz jge xor add push pop iret repz ja mov repnz jns add dec insb xchg pusha inc loop inc pop leave push hlt or lds dec int imul je (bad) testl cmp xor inc sub dec sahf out pushf nop test push mov adc int3 pop incb ja (bad) (bad) decl push adcl adcl sbbl incl push (bad) push (bad) push (bad) push (bad) push (bad) push (bad) pop (bad) inc addl orl xchg andl arpl data16 addr16 push (bad) imul mov (bad) incl jno jb jae je jne jbe ja js ljmp popl andl test xchg (bad) (bad) incl mov lea nop (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) xchg (bad) xchg jne mov cltd (bad) lcall push or xchg add mov inc subl cld xorl mov inc subl incl mov dec xorl dec cmpl push cmpl push adc mov add mov push fildll or bound arpl gs or add lds imul inc es insb movsb insl or outsb or jno insl add or je int ja jp iret add mov incl roll addb mov aam hlt (bad) incl test aad xchg (bad) add lcall sbb mov fildl lea rol rcll xchg sbb xchg sahf xchg jle sub pusha add ficomp int mov (bad) mov (bad) movsl (bad) mov insb cmpsb (bad) cmpsl (bad) test test stos (bad) lods (bad) scas (bad) mov mov data16 insb mov mov mov ss int (bad) mov (bad) les movb (bad) lret fldcw (bad) int3 (bad) int rolb data16 (bad) flds fiadd fild loop ss int jecxz in in out out data16 insb call (bad) jmp outsb ss int (bad) out (bad) out (bad) lock icebp (bad) and (bad) ljmp cmpsb andl add movsb add movsl xorl add fild dec addl push and cld push xor popl add inc movsb mov sbb or arpl adc mov add cli or or ret cmovl xchg mov adc mov or pop pop std adc mov and jne (bad) (bad) call pop std and sbb addl xlat xchg inc push add inc stc mov adc (bad) inc mov pop shrl push push mov mov bound js xchg mov mov loope jno cmpsl sub ret gs pop cmpsb test or (bad) push pop inc pop bound pop les sub mov js std gs mov stos xchg imul leave insl negl int3 add sti aas jno or mov lock aas pop fs dec lea shrl sbb pop pop mov icebp aas rorb and cmpsl out aas inc cmpsb mov insb scas add (bad) inc push ds xchg mov std std into popa test (bad) (bad) (bad) pushl stos in das dec pop loope les aas xchg les jne int mov addr16 xchg cmp push mov xchg aas and (bad) loop mov jp popa push pop sarl jl mov (bad) aas xlat out das lea mov inc inc mov cmp sub jge mov inc rcr push arpl int3 and (bad) (bad) jg xchg cmpl xor lods cmp mov cmp std xlat cmp (bad) jg insb xchg mov jecxz cmpsb add movb (bad) (bad) pushl fldt cmp jno shlb (bad) out dec nop pop cmp fiaddl mov mov loop mov cmpsl push lahf inc pop mov sub dec in ss push scas into imul fdivrp pop dec mov inc push sahf out pop push xchg cmp mov and dec dec gs std orl pop ficomp insb imul add imul popa and xor sbb sub fsts add xor pushf push es inc out paddb xor pusha mov pop pop (bad) aas xchg adc push add mov push inc pusha dec sahf add imul addr16 or mov (bad) xorb aas mov pop jecxz rorb inc (bad) ret add test sub push add out sahf pop or sbb and sahf out inc inc pop pusha jl jns out mov sarl hlt adc sub cmp repz jns cwtl mov int3 in sbb out sahf out cmp jo lahf out sahf pushf mov dec out sahf ja push sub pusha gs out sahf jg movsb mov sarl or sub sbb popf sbb xchg test push add sahf cmpsl popf cmpsl and add adc push jl fnstcw push pop add sarb mov jle push dec fcom out lds or (bad) repz mov push push ror cmp push mov add ja mov xchg mov push aam inc mov inc cmp jae sbb sbb pop sbb pushf cmpsb shl sbb add jmp (bad) add add mov xlat mov ret ss push dec (bad) call iret repz push push adc add mov out ficom decb mov inc push dec aas cmp shlb dec push (bad) incl (bad) clc cmpsl inc insb push and stos jnp push loopne sbb repz (bad) (bad) incl or out mov (bad) ja (bad) dec cmp inc cmp mov shlb (bad) (bad) incl ss cmpsb jns sbb mov mov mov cmpl ret out fidivl inc (bad) (bad) clc leave popf or imul cmc inc push ret inc les and cwtl ss push xchg pop ficomp jmp lahf je lret ds inc push clc pop pop sub in xchg je jg lods aam (bad) (bad) (bad) lcall xor jne cmp stos mov in pop loopne aas mov dec xor mov xor mov (bad) std fldt aaa xchg mov and pusha add cli inc and jge gs pop std (bad) jmp aam fisttpll cwtl cmp repz jp (bad) mov pop mov (bad) dec push nop push movl inc push inc xchg inc mov das push add xchg imul jmp and sahf ljmp fnop adc icebp cld insb lock in (bad) (bad) (bad) (bad) sti imul push cmp (bad) enter stos jmp pop sub sbb mov (bad) clc insl push pop dec repz jbe scas pop (bad) cmp (bad) incl xor mov sbb mov inc cltd mov cltd (bad) (bad) (bad) (bad) incl clc inc adc movb movsb out inc popf negl inc jg fs jns inc stc (bad) (bad) call fs call sbb dec sbb pushf (bad) out mov sbb gs imul or imul movsl jle xchg int jne push xchg mov lret lahf jp clc (bad) incl movsb xchg inc daa int3 push inc or popf enter inc sti xor call aas xchg (bad) mov xchg or inc cmc xor sbb notb cli stc insl cs adc mov sub (bad) ret outsl adc nop xchg or jmp and pop gs mov push xchg outsb rclb jmp (bad) (bad) decl inc mov lret inc jns and jnp inc xor jo std pop dec (bad) (bad) (bad) mov or xorb inc cmc gs mov pop int (bad) std jge leave inc push inc testl aam xlat or dec inc daa clc or push inc roll push dec int cs cmp hlt pop rorl pop dec dec inc pop xor and adc (bad) (bad) (bad) (bad) fiaddl adc incb sbb scas into add movsl sbb xchg jne fdivr (bad) (bad) incl ret cld ss mov lcall movsl (bad) cmp and push cmp cmp mov mov mov mov inc loopne popf push add scas xchg (bad) (bad) mov mov iret ljmp xor ljmp add (bad) mov (bad) aas aaa or or add xor adc add pop adc jbe xor mov pop insl test xchg pop lahf mov popa sahf push xchg cltd or push push clc jle add cmp std pop add dec sti push or push add iret rcrl adc fwait add cmpsl or and bound sub clc sub inc add sbb add bound arpl jns sbb sbb sahf out pop sbb adc repz out push add cld ja repz pmuludq in add cmp loopne fsubl repz repz or iret repz adc mov iret repz test mov repz pop nop and mov and cmp jo inc rclb mov scas jg inc cmpsl xor inc incb xor sub dec lock outsb sub sahf xlat insb outsb inc jo push inc pop jns jg lock mov loopne add jp cs iret repz aaa push dec xor dec adc and jae daa and cmp daa adc iret repz and adc push cmp ljmp dec push (bad) gs mov lock data16 and push fldt adc push push jae push sar sbb daa sbb cmp in sbb push (bad) pusha loopne or pushl pop push cs sbb aaa repz fucomi pop push negb aas push xor lret and push push daa repz outsl push frstor jl bound std inc cmp out add aas iret repz lock jns fs adc iret repz or fwait jecxz mov jns gs ja insl or push xchg push pop inc mov cmp mov pop (bad) or incl cmp incb jae pop mov cmpb add dec rdpmc orl push and add mov inc movsb in or in dec add mov xchg bound sbb inc lcall xor stos inc cmpsb push push dec lcall xor sub push movsl add loopne imul xor jne push mov (bad) jg imul push xor mov insl jne xchg cmpsl pop (bad) pop ficoml mov xor xor subl fild jg xor pop mov (bad) xor pop insl pop cmpsb mov mov xor xor xor cmpsb push dec pop cmp pop xor fcmovnbe xchg mov scas xor pop shr xor and xor sbb push pop xchg jbe cltd mov popf and and dec pop adc cmp gs mov lret out sti fcoml cmp jg cmp xchg jno jns jg mov xor adc fnstcw fstpt loope (bad) int sahf cmc cmp push and adc imul aam fidivrl out push and sbb cmp jp mov xchg (bad) mov (bad) mov cmc cmp cmp cmp jb adcb push call pop in cmp cmp cmp sub movsb cmp cmpsb push sub cmc (bad) aaa xor mov xchg fisttpll pop aad mov sbb insl out aas dec aas push aas mov sbb popa mov xchg xchg lea hlt popl sbb push xor call fbstp xor xchg xor lret int3 fnstenv cli push stos (bad) mov and lcall xchg sarl jle xor lret (bad) xor xor xor pop cmpsb xor sbb fwait jb xor xor lods outsl movsb lods out (bad) cmp cmp lods mov push (bad) mov adc xor enter loop cmp or add inc mov data16 add inc rep lret (bad) popf repnz sbb mov fidivl popa mov loopne lods sti js subl fldl2e test mov pop mov xchg jae fstpt cmp lds add push cmp (bad) leave push outsb dec mov push add push fiaddl in sub inc cmp stos fnstenv cli sub mov mov (bad) loop fwait call cmp cmp data16 insl jmp mov mov lea cmpsl data16 pop fstpt or adc and inc inc pop mov add fwait (bad) xor jg xchg push xor xor xor pop out xchg insl adc (bad) inc mov dec xor push jnp stos or cmp pop cli xor mov xor divl push cmpsl ds aas push dec scas (bad) push mov ret add sub or imul dec jmp xor mov outsl (bad) adc sub xor xor lods or out mov dec cmp cmp mov outsl dec je test mov sar (bad) (bad) aas ljmp sbb cmp jg mov xchg cmp sub pop and bound imul cmp ret sbb cmp jp jne (bad) inc negb loop cmp ds add aas lds rolb sub push pusha aaa adc jl mov cmc xor insl pop call xor xor mov jp fisubl xor sub das xor pushf xor mov mov xor xor xor adc sarl ficoml xor imul fnstenv loope movsl insl pop (bad) push cmp mov (bad) push xor (bad) je (bad) xor dec xchg cmpsb lods mov cmp mov pop or cmp cmp dec inc fucomi and add and sarl (bad) jns cmpl aam and dec ds ds ds jno,pt jns sarl cmpsl fs inc push xor mov xor ja mov lret pop mov std lds outsb ss fdivrs mov jmp aaa es jmp fcomps aaa adc push imul pop cmp pushf push mov fimul jb mov mov lods fwait insb stos ss push mov mov fs mov cmp add gs jnp popa stos adc ds rcll ds lcall ret aas jne jnp cmpb aas fwait aas cmpsb xchg xchg adc fildll jp xor popf xor (bad) aad loop icebp xor xor sub scas clc bound pop dec dec xor pop xor les lods jmp aas inc mov cmpsb adc int fnstenv addr16 insl jge and xor or adc xor aaa and lods aaa ret aaa lret mov fidiv nop mov push pop sbbl dec xchg repz xor mov and mov iret pop lock out cmp push cmp cmp ret push pop popa pop push fdivrl lea shlb jp pop imul adc jl mov ds ja add sbb add lods stos js xchg (bad) aas sahf aas mov mov fidivrl sbb dec add mov pop xor cmp or mov cmpsb push mov pusha sahf push jb fwait xor xor cs (bad) xor xor xor aaa loopne fistl xor xor xor (bad) sahf sti xor (bad) lock xor xor xor xor xor lock and imul push mov mov (bad) test sahf shrl outsl ss xchg sahf mov fnstcw or adc push roll xchg ljmp add int (bad) pop aaa fs push aaa out aaa pushl pushf subl xor jp rcl jg cmp popa cmp xchg sbb (bad) roll xchg or push adc cmp and and sub ljmp sbb (bad) call (bad) std cmp cmc cmp push ds jbe,pt gs popf rolb dec mov and popa aas cmpl aas lcall sub cli jmp cs add sti mov adc jle pop insl pop aaa dec xor data16 jp pop adcl loopne hlt xor jne insb std xor xor xor stos inc xor rolb jbe xor mov ret mov inc fcomip xor rclb (bad) (bad) aaa sbb xor xor jb xorl js push dec lret mull sahf mov lcall inc ret adc scas inc cmp pop cmp jne cmpsb mov ficompl arpl lods cmp cmp jmp add loope lock jg nop mov mov mov (bad) jmp push mov sub ds (bad) in ds rol push xchg xor stc sub xor xor dec dec orb mov clc mov repnz aaa dec cmp icebp (bad) fwait cmpb bnd sarl lds mov fdivrl add inc dec cmp out cmpsb sub lahf cmp cmp mov lods into jnp out cmp sarb adcb lcall nop sub lock xor out add jbe add add test mov add fidivl sbb pop out xor sbb jle mov xchg xor (bad) mov into jecxz cmp push pop xlat push xor je mov xor or mov xchg pop mov loope fdivrs outsb std xor popa stos adc push lahf xor push xor lock pop mov mov aaa ficom add daa clc aaa and xor inc sbb cmp lret pushf inc mov jle push out xorb mov adc dec or mov xchg cmp cmp cmp cmp cmp je cmp imul stos lock push cs cmp mov (bad) ret ss rcll push hlt mov inc mov cmp and sbb xor jb aas mov int3 out imul js mov xacquire push xor xor jecxz add (bad) aaa jg popa xchg out push xor xor xor bound pop outsl cmc pop add mov sbb adc dec lret push loop inc sbb inc jp (bad) jmp outsl xorb jb xor or clc xor jb mov or or mov pop add pop cmp scas nop lods mov ja cmp push xor xchg rclb clc xchg cmp sbb sub cmp jae pop push xchg or push xor roll ds push xor fistpll xorl and pop add mulb or xor jne add aaa mov xor xchg lods das inc xchg xor xor lcall pop xor insb test cli push cld out popa (bad) fnsave xor xor xor xor pop sbb adc loop mov imul ss inc out ss pushl adc aaa jg xchg lods push sbb push loop divb lret pop jae cmp loope lock push xchg push or (bad) les fidivrl in pop mov sub cmp cmp dec adc pop (bad) mov fistpll jmp push inc add cmp imul jl cmp cmpsb ret leave (bad) and aaa xchg decl cmp mov aaa cmp cmpsb mov popa jmp je jne fwait cmp jp ss fs lret and arpl push movsl cmp mov or xchg (bad) psrld add into adc and push sbb test cld ja cmp ds ds loopne,pt jecxz xor lock add pop ret aas inc je insb adc subl xchg sbbb xor jp jbe adc xchg lods push dec (bad) negb xor lret push and inc mov cmp insl cmpsb mov sbbb jns cltd xor mov mov xchg lods movb and ss push jno insl bound aas add aas cmp movsl aaa pusha fcomip add scas idivb adc and add mov inc mov inc inc stos iret ds dec loope pop insb mov inc fs es rcr enter pusha xor jge xor test xchg (bad) cltd cmp sbb inc stos aas enter add aad push mov arpl xor dec adc dec xor xchg mov (bad) es dec push (bad) xor xor xor push sti xchg cmp test mov xor xor call xor xchg sti inc fld1 inc outsl and je out push sbb aaa jle clc cmpsb rclb mov sahf fdivl ljmp cmp mov cmp cli xor mov call or test mov arpl outsl clc add mov cmp adc aas jno cmpsb ljmp adc xor sbb jno pop out xor xor xor out outsb (bad) fistp sti xor cmp dec xlat ss aaa dec aaa test push rcl aaa mov fbstp in out aaa and mov cmp cmp cmp (bad) pop mov and pop lret add cmp cmp cmp xchg imul (bad) imul ret mov ret or (bad) fimul xor push adc pop sbb ss xor xor xor xor push xchg mov mov ror in (bad) pop ficompl xorb xor mov xor sub push pop pushl xor xor xor (bad) jmp push aaa test mov or or xchg pop loope jl (bad) jb popf aaa mov ljmp push pop mov movsb scas lcall sarl out dec ret test ljmp cmp mov sarl cmp cmp cmp cmp andl xchg mov push out lcall mov xchg into (bad) xor cmpsb jmp outsl inc add (bad) lods xor xor and jo jb xchg ljmp imul add bound fidivr or into adc je dec aas xchg push push loopne inc sbb cmp int mov cmp cmp js pop jg mov cmp push cmp je int pop es cmp cmp fs cmp (bad) or into loope imul pop aas das subb jmp sbb xor cmp sbb cmp pop xor sub div mov ds xor xchg dec fidivrl pop sbb (bad) stos and and sub shll popf cmp ljmp push test cmp test adc cmp aam push dec pop sbb ss mov mov fidivr call sbb ror mov jo (bad) stos subl mov insb pop xchg cwtl xor (bad) jg pop pop rcl push ljmp sub (bad) xor aam mov aaa adc aaa jmp cmpsb cmp std cmp (bad) dec fidivrl (bad) lret xor mov cmp cmp dec into cmp cmp xchg inc (bad) sarb mov divb scas xchg ds popa mov lea xor outsb leave test loopne mov dec add xor loopne dec pop jg out (bad) mov xor mov xchg std hlt push sub sahf in lcall cmp clc fs cmp fidivl pop aaa outsl ljmp nop cmp jb cmp loop cmp and fisub movsb xchg (bad) mov mov mov inc je lea push loopne call test mov add jno mov xor cmp or pop decb je sub cmp ds loopne jl aas sbb aas outsb mov test inc cmp xor xor push xor mov cld rcll xor xor sbb lods mov ss fildll aaa repz sub cmp cmpl sbb cmp add adc add outsb mov mov sbb dec push xor inc fidivl mov cltd pop inc sub mov enter push add sub in xor inc insl cmp xchg mov push adc lea test inc inc xchg mov (bad) ss sbb (bad) mov cmp arpl xchg mov pop fbstp mov cmp cmp add fadds std cmp enter pop stos (bad) pop loopne mov iret push in cmp cmp ret fcoms cltd cmp cmp jb decl dec mov ds outsb inc add mov fisttpll pop xchg push xor lock jne push aaa loop into xor add jmp cmp push ss clc dec xor insl out mov jge add jle inc inc (bad) jbe cwtl es xchg mov inc mov sbb cs (bad) clc cmp je ss sub ss inc lods (bad) cld int push aaa jne bound (bad) add test or inc es add mov sti lcall push or mov repnz pop clc loop cmp mov stos mov cmp cmp push add cwtl push out loopne flds rorl scas mov std cmp cmc pop pop inc test sahf add dec mov pop xor das push clc push jge adc xor pushf xor xor fidivrl adc xchg pop pop dec dec scas mov inc push cmpsb adc dec xor cmp cmp jb adc leave arpl pop scas incl cmp lock cmp add xchg or (bad) lock sti adc or adc ds push mov loopne,pn sbb mov out lods out sbb push xor xor inc imull push xor mov xchg (bad) sub adc xor xor outsb movsb xor xor scas sbb fnsave or and add imul aaa mov inc arpl push add adc (bad) xchg scas mov aad ja push cmp mov gs jge leave (bad) jae out std cmp test cmp mov xchg jecxz sbb cmp cmp cmp cmp cmp roll push cmpsb dec cmp pop cmp or ljmp push and (bad) fbstp lret lret (bad) ds aas ret dec test (bad) jecxz adc mov mov dec loopne mov repnz sbb cs jle jbe mov mov dec or cmp push inc aaa fidivl and stos jle cmp and hlt (bad) popf mov lahf xor push jb xchg loope inc rol inc mov mov sub (bad) ss or mov (bad) lahf cmp (bad) and mov add xchg insl sbb aad inc push call cmp test je es cmp aam dec loop (bad) cmp jns mov into mov mov test sbb xchg mov pop cmc loopne xor xor jg roll es inc mov aam loope test pushl pop add xchg (bad) ljmp cli mov xor xor xor xor xor pop xchg (bad) xor loopne cld add xor xor dec sbb std jp mov ss into add pop xor lret pop xor mov popf xor stc xor (bad) ss aaa sub cli scas aam jl mov pop cmp cmp add pop xchg scas xor push cmp add outsb pop pusha sbb xor sbb xchg sub jmp addr16 mov imul and or mov push add xor xor fsub in rol pop jmp xor sub xor xor dec jne fstpl (bad) jae and adc addr16 jne xchg data16 int (bad) inc push dec push xor call sub sub decl test mov mov mov lods jmp cmp cmp mov cmp jb mov cmp add inc xor cmp cmp cmp mov sbb (bad) stos cmp bound inc mov scas icebp jp ds push cmc subb cs push jge sahf xchg push cmp mov jecxz dec sub adc mov sub mov repz fwait out mov mov lods xor ror (bad) ss xchg outsb aaa adc popa pop dec incb sarl mov shlb bound cmp (bad) (bad) mov bound ret mov pop pop mov cmc xor inc (bad) notb test inc dec pop scas pop je (bad) repnz lret add xor push test divl push (bad) fisubrl rorb lcall xor std xor ss ss mov fidivr mov cmp jle fnstcw and sbb (bad) jp dec fs in mov pop fwait xor xor add movsb sub cmpsb lods xor pshufw and mov add sarl fadds cs lret (bad) sbb sbb scas sti and enter addl cli push sti jle mov iret je adc bnd cltd sub push sub jp or xor cmp mov mov mov cmpl jge lods cmp aad sub dec cmp mov sbb ficomp add mov cwtl repnz cmp pop das aaa insb xor lcall sbb lock xor xchg (bad) addr16 push jae ja jnp lods lcall cmp aas push ja cmp lcall or add mov cld aaa mov add (bad) cmp sbbb divb outsb mov xor xchg cmp (bad) xchg ds mov pop mov dec push sarl cmp add fcoms cli pushf cmp insl push push arpl mov and outsb enter push sbb lcall adc cmc outsb nop xor xor cmpsb sbb int3 ss ss es cmp sbb mov cmp cmp pop mov mov mov ss outsl adc cmp roll inc fidivl ljmp imul xchg das xlat xor xor xchg push or pop jge mov out mov jg push ss xor xor xor xor lds lret mov scas (bad) aaa imul cmp shrb loop pop cmp shrl lock (bad) mov jl sub (bad) jno test push fcomps mov and scas (bad) lock jecxz sub fsubr push lret push mov cmp ret scas outsb mov int or adc cmp mov xchg data16 inc xor fisubr loop inc stos dec cmp rolb cmpsl cmp add in in xor ret pop std (bad) xor (bad) push xor xchg into mov (bad) rclb mov xor push int mov jg test out add dec xor xor (bad) ss lock mov (bad) call mov and add loop aaa mov nop add xor cmp adc cmp imul hlt mov xor xor inc inc test es xchg es dec xor stos add push (bad) ret xor mov add xor loope cmp cmp jge lds mov ds adc lcall xor or cli lds pop inc push test dec xor xchg push out rorl rcrb data16 mov jnp inc daa out xchg cmp fcmovb and inc cmp mov test push sbb dec fldt add (bad) cli pop xor (bad) xor xor pop ljmp stos into les cmp adc inc xchg (bad) xor in mov cmp mov sbb sub xor (bad) push ljmp stos jae cmc cmp cmp cmp xchg and ss xchg test push loope iret cmpsb add ret es jno mov sub jb (bad) mov mov ret xchg inc outsb insl push test add hlt cmp mov cmp clc sbb pop cmp jle cmp inc sub sbb jo loopne xor test sub cmp mov clc hlt add add xchg (bad) stos sbb xor xchg add jb outsb or out fcoms pushl adc jno jle xchg add pop sbb ss ss mov scas fdivrl xor xchg cmp cmp lcall mov sub jle scas repz mov mov addl call test insl jne add mov sbb dec jo pop pop jne push inc xor dec ds push into pop xor pop or outsl xor mov push add xor push loope aaa scas jbe cmp cmp cmp lret mov inc add xlat add lea mov mov lcall out jno add (bad) scas movsl (bad) xlat add orb xor test cs push popf jle push dec push cmpsl push push xor cs and mov jg,pn shlb xorb sub push dec xor rcl mov push clc mov out fmuls aas pop aas jmp lea lock je bound xor xchg mov mov out (bad) loop lcall cltd ljmp sarb sub andb pop cmp inc or lret out and cmp loop cmp fsubl push aas cs pop aas jg (bad) repz aad nop push pop (bad) xor xor pop or popf push jae push xor xor or xor push repnz push call out fstpt (bad) or inc sahf (bad) mov (bad) push and add repnz mov or xchg inc mov ljmp jo mov fnstenv enter bound mov and add lock push sub lock sahf mov pop add cs pop add or stos je add shl icebp or pusha add mov cmp add adc and mov mov mov clc sub dec ret (bad) cmp push add jecxz ret add push ds pop xor push push mov add enter add add cmp inc ja sbb push pushl ss mov jle add aaa enter arpl xlat or subb sbb stos and out in mov aam nop ret or and fildl and push xchg add lock xchg decb adc push mov fsubrl lock xchg js xor out pushf xor hlt rorb enter add in hlt mov sbbb adc jp scas cmpb sub dec pop sub popa int add mov mov jl addb push or add add sbb push pop andl mov sahf mov inc aam ret (bad) xchg sub and in add push cwtl cmp fadd push nopl scas addr16 enter pop (bad) call daa mov shlb test or jbe mov and push sbb ret cmpsl mov lods cli movl (bad) into add sti (bad) stc push incb xor add adc inc xor pusha xor sbb scas rorb stos mov inc iret repz or inc and push andb daa dec mov pusha pop add dec cmp aaa jl mov (bad) testl dec dec mov mov pop aam inc ss mov push cs pop xor inc ss push rclb mov add (bad) and mov add sarl mov pop (bad) shll xchg fcmovnb mov push xchg cltd arpl cmp mov dec add jnp adc add push les ret or push andl ss add or mov aas cmpsb cmp test mov dec pop inc xor (bad) fidivr loop scas rclb ljmp cmp dec push cmp cmp push cli push cmp cmp pop push (bad) fsubrl sub cmp mov cmp pop add and inc cmp dec push cmp add repnz data16 outsb arpl push and jbe jle sbb xchg inc or push pop lret mov (bad) stos out xor pop add inc fimull xor xor xor mov xor pop sub and xchg sub push add pop add insl (bad) ljmp sub xchg out xchg xchg ret mov (bad) xor (bad) xlat xchg das inc xor mov mov lret push repnz jmp mov lfs das fistpl push mov das sub jb pushl mov lahf lods xchg lods cld xor add rolb dec xor call add jo adcb or js loopne (bad) hlt sbb mov add add push and dec xor or inc lods out inc nop lea adc jo mov ss out push fidivr pop dec jo add (bad) test ret in jl add jb jb sub add and jl in add dec push leave inc adc xchg add push and inc xchg xor and mov cmp inc mov mov sbb or or dec mov inc adc adc jno lea mov jbe cmp into mov dec (bad) lahf xchg and sub xchg (bad) push jp frstor inc (bad) xor nop pop jns sbb push call add or add test lock adc and add or ret cmpl inc sub add roll lahf push mov cmp dec repnz in push inc push jb rorl lret sub sbb loopne js xor into jb aas jge mov mov fcomps mov push lahf mov idivl push mov sub add mov jmp and add mov dec or add movl pusha adc fs mov push scas pop push push jl dec xchg sbb or orl rep (bad) mov outsl mov push or xchg pop mov cmpsb jae or dec add jne jb xchg add pop (bad) lods xor add mov (bad) xor jg add push cmp mov jp sbb mov out pop pop and mov jo or icebp push pusha lock or mov sub cltd idivl push dec popa clc mov popf ljmp out mov outsl add or jnp mov cmp fs mov aaa or lods cmc cmp add mov fbstp adcb cmp xor scas in dec or sub addr16 ret sti loopne add add xor cltd push push das add out fstps and push bound add cmpsb jmp push neg pop out xchg and and push nop out ret pushf insl xchg pop or push es sti cmp cs or push lea loopne fimull inc push push sbb jle dec mov pop js push mov push and addr16 or push fsubrs sub lea dec sbb sbb jmp jo pushf (bad) fistp sbb or push jo mov test add in loopne xor or adc jl (bad) and dec fstl lret inc sbb scas xor sbb cmpsb add jecxz sahf cld sub xor ja and or sbb mov or cs inc jo mov dec push popf or mov daa or inc sbb and dec mov cwtl daa sbb pop dec imul sbb pop push xchg cmpsl shrl jnp sbb push out sbb adc mov sub xor jg call add sub xchg mov cmpsl add mov jg mov je mov push fcomps call dec loopne push cmp movl repz mov jns push push sbb pop push mov pop (bad) sbb shl add mov add aas add inc cmp add jg dec mov push dec adc stos mov lods enter enter aas dec js lret aam push mov mov enter test sub add pop in mov les mov or add adc xchg push push rorb inc out cmpsl or (bad) mov mov xlat ret mov lahf lea cs push jg clc xchg mov inc inc lea mov std (bad) jne mov adc jne jg test movl mov sub jl fs push je outsb ja add or mov mov add mov mov jns inc lret push cmc xor addr16 adc pop adc cmp push or push (bad) mov inc cli loopne add inc sub push sbb inc xor imul or and cmpsb xor push adc and pop inc lcall mov push push push inc mov or push movsb stc mov xor mov (bad) mov xor push es cmp cwtl or adc (bad) or jle adc pop inc idivl add xchg mov pop pusha push loop push adc lock cmp and inc jb xorl loopne xchg xchg ret lcall push leave or pop movsb or sbb push ret add dec or insl xchg add pop je mov adc sbb adc or jg or mov add fbld push mov adc jl mov add cs ljmp or cmpsb pop mov setle jb push cmp movsb pop cmp rcll pop push aas lcall stc lret push mov add sub ss xor mov mov inc sub xor mov mov (bad) mov hlt jno and dec xor jecxz and pop and das dec (bad) jbe push cmp cld and idiv (bad) ss inc inc faddl pusha or leave adc cmpsb inc jmp in sti icebp fildl jge push cmp or mov dec mov cmp clc inc pop (bad) mov pusha (bad) mov add push das cmpl inc or jb jb pop cs push or inc xor and add add lcall lret inc cmp adc add repz js cmp push je push add pop and lea pop and sbb add xor sub dec sub cmp stos dec imul cwtl sub ss pop sbb inc sbb sbb inc fstps fadds enter pop inc cmpb push (bad) and push leave and (bad) cmp and jb and and aas cmpl push sub lds daa mov xor daa sub xor leave mov lea aad jns xor mov mov or sbb or in cltd jl js inc push out cmp cmp push mov and push cs push push adc pop clc jecxz daa cmpb push add sbb cmpl lea push xchg pop (bad) fldl sahf std cwtl fstpl adc dec mov add dec (bad) xor pop and and xchg adc or sub or push inc sbb loope in push sbb adc adc int cmpsb imul scas jl pop cmp add sub jnp xor mov push hlt push add add or sub call mov push (bad) ret add xchg and into ss in push push xor int3 sub mov clc decl gs sbb jmp mov (bad) call inc popf lods jns sub and pop xlat sbb (bad) jb fisttpll sub mov inc cmp jae adc inc add int3 or xor sbb add stos sbb mov mov cwtl cmp pop or add pop pop pop or aas enter mov mov cmp pushf (bad) cs dec or fnsave dec mov or sbb loope add ffreep add scas fs loop stos jae sbb aaa and xor cmp or and stc insb dec cmp dec adc sbb or sbb cmp cmpsl pop dec test pop data16 xchg lret ja or xchg mulb dec iret cmp (bad) in mov push out aas in pop mov adc or mov adc movsl lods cmpsb sahf fiadd pop add sbb dec lret push subl loop mov add xchg xchg subl mov or daa nop subb mov sahf test dec jl in sbb and xor jl test cmc xchg dec sbb lea pop add and add xchg sbb (bad) je cld sti pop call xor cmp push jmp mov pop aas stos mov imul aas sbb or xchg neg xchg (bad) mov inc cmp cmp xchg movsb aad loopne add ss push sub mov push inc pop mov cmp jo pop pop sbb mov nop lret cmpl add call ds or inc cmp arpl cmp push sub jecxz or (bad) mov pop adc pushf push js sbb adc xchg insb push sbb inc int fwait dec pop mov and jl xorb fs int and cld inc or ds sub pop dec sub dec into mov movsl mov push inc lcall sarb push dec push mov movsb mov test push and testl cmp inc stc mov test push dec aaa mov or ss mov inc loope repz sbb (bad) xor popa xor sub push adc inc inc pop xchg xchg xchg es push adc ss jo jne sbb mov xchg or sub out mov push add cmp or pop push add repnz (bad) call pop add push jne push (bad) enter into ss sub mov add cmp rorl fcoms mov add int and insb js push cmpl fisttpl push xchg dec pop icebp fist and inc pop xchg or push push dec sub cmp in add shrb xor or dec popf cltd inc xlat jbe arpl mov dec (bad) adc movsl pop dec inc imul pop push adc and pop (bad) pop pop mov add in (bad) aam xchg mov dec push lea add or cltd mov daa cmp stos push jl sbb lret push jp add add and enter in ja inc mov movb jns roll mov insl or (bad) add daa sub inc jg lahf adc add cmpsl (bad) scas insl loope mov cltd xor in call xchg adc enter push cld jo mov shlb lods mov or imul add andb pop dec mov fldenv dec ret je dec or adc mov and inc out jo mov push mov ds sbb add jbe adc fcmove push cmpsb push ljmp fs cmp fimul push (bad) jb fildll jno call mov xor push and xchg or (bad) jne xchg inc push sbb ss outsb pusha scas popf sbb xor incl mov mov jb mov jno sbb mov arpl stos xchg sbb mull bound lahf sbbl or xchg out xchg cli dec xchg int sub inc mov rol or repz lcall add and rcrl rclb pop dec sbb fdivrs repnz inc push and push ror add cmpb inc push into ss mov inc push xchg sbbl shr adc pop sbb mov arpl adc add roll inc cmp xchg (bad) aaa cs sbb pusha mov movsb and jle (bad) pop push or sbb inc xchg inc aaa add inc lock fidivr subl icebp sarb add pusha int les jg in push stos std and rcrl mov and cmpsl mov call push lock test stc cmp cmp ss pop enter lahf pop out push pop add sub (bad) xchg cmp add call sbb in add call in jp and add test sub lahf jl or nop push pop cs outsl mov test jb je xchg sub push adc dec jb dec mov add and and xor add xchg lds int3 inc mov or inc jb sarb sbbl mov sbb pop or xor cli pop mov fst add add pop pop scas jl in add add repnz mov sbb fsubs inc ss lock aaa adc and pslld mov add ret bnd in add pop mov or fmuls dec sahf inc inc in add and test add inc adc add test add sbb test movsb xor (bad) inc sbb jne add gs lret ss dec or xchg fldl dec clc xchg (bad) adc inc and adc add cmpsl dec jmp inc xor mov inc sbb stc add add int xchg sub adc repz in fadds add sbbl adc mov addr16 outsl mov push xchg lret scas (bad) push ds sbb ret sbb inc in out add push out gs sub or mov es js cli mov mov mov out cmp aas inc ret flds mov lcall and hlt push dec repz in push mov out out cmp add push xor mov dec add add les xchg or push or mov jns and iret cmp jnp (bad) mov push stc cmp repz push decb jnp cmpsl imul aam add jl notl inc push sbb out iret sahf add jb sbb pop dec dec mov xchg iret mov jo fsub jns xlat ljmp pop add lahf pushf mov loope jg test push adc add push sahf movsb pusha imul pusha fistl mov adc sub rol inc or sub inc das and jmp pop ret outsb bound mov or insb cmp dec pop fldt scas aaa cmpl xchg subb test lret sbb cmp imul fdivs jle outsb aaa cmpsb sub js inc mov pop popa imul imul push comiss dec dec dec les xchg test lods sbb das scas lds mov push push mov jg push je mov imul and jmp (bad) int or jo dec dec in loopne imul jns outsl daa sub stos fs cmp mov ret dec popa roll pop outsl bound sbb inc push dec insb and dec aas pop ret incl or pop sbb (bad) imul inc pop push mov das daa mov jecxz cmpsl or inc (bad) call pop pop push sub xorl (bad) rcl dec mov rorl pop arpl lock dec data16 bound xchg out dec xorl dec and dec imul dec mov insl jns jbe inc jb (bad) mov sbb push addr16 inc (bad) not (bad) scas inc rolb mov fild fcomps pusha and daa add scas inc loope test inc push orl sbb xor pop dec mov sub sub jmp fwait pop push or pop insb jecxz cmpsb or xchg xor movsb mov movsl add add ss and and daa pusha (bad) rorb das adc dec add push mov cmpsl xor out xor scas jne imul ss insb dec repnz push ss aaa xor jae dec adc ja (bad) pop stc aas sub add lock add push scas mov (bad) aas adc incl mov lds mov test mov lea nop jae push cltd cmp sahf imull in cmp cmp addr16 adc and add inc mov mov enter das fimul add sti es xchg mov inc lret or out adc ja dec inc cmp mov leave add or and add lahf add add xchg or and fs jg xchg cmp pusha enter sahf push test dec pushf or in xchg cmp es bound inc pop add xchg movsb pop out jb mov test or mov inc mov test push outsb arpl dec adc push adc mov or add sbb repnz push dec push gs gs cs mov cmp xor ja mov (bad) out jns dec int or fs xor jae insl lret jg and lods cmp or dec dec sbb ljmp insl dec add mov clts jnp add popa xchg cwtl push or adc inc adc nop push add inc sbb add xor push inc (bad) mov mov test int3 add lods daa iret pop fisub aas (bad) aaa pop test (bad) pusha and nop sbb xlat ss adc andb adc push loopne inc ss fidivr fsts pop data16 xor xchg outsl mov call and pop push mov push pop pusha push jo orb adc mov sbb sub sub out jns loopne pop (bad) sbb jnp push sbb xchg push daa push inc lahf mov data16 pusha push xor add js mov push call push push jns out ss jo cmpsb sarl (bad) jecxz pop push xor repz dec imul push daa aas pop jae lahf out pushf (bad) repnz out ds repz xchg push mov in cs jbe xchg fadds pop xor jns jge lods aam pop pop push pop jnp jl out (bad) repnz pop popa adc mov sbb dec xor cmp adc cmp mov mov aas adc movsb insl jne mov push inc or cmp lea sub mov test xor (bad) dec xor sbb (bad) aaa fnstenv mov add sub test xchg bound pop aaa sbb or pop xor das addl loopne outsb dec cmp fimull stos movsl bound insl stos mov push notl push or lds add or dec insb push inc jg pop insl add xchg jbe sbb jnp test movsb pop bound add inc adc pop mov stc inc rol mov xchg push pop test andb fs xor mov push fdivr cmpl dec pop cltd ficoml push mov and mov add sub and pop (bad) leave inc loope xor andl js dec pop push inc test xor loop or and lcall stos jmp push mov out inc dec imul (bad) out pop mov pop dec dec push dec and and dec dec xchg inc or cmpsl dec cmpsl inc add pop xor xor std pop addr16 or pop dec popa js sbb mov jp inc out movsl int pop nop inc inc pushf push mov outsl outsb push insl sub dec dec aas jo (bad) push mov xor or and dec or ficomp (bad) neg xlat add or push xor xor aaa add cmp push and pop xor xor push leave inc xchg xor inc xchg pop xor or jmp es dec es xor es mov test jmp stos in xor stos mov adc (bad) xor dec push enter dec push xor dec cs xor ss leave inc push pushl leave inc xchg dec xor push adc inc xchg sbb xor push xor pop inc enter test xorl test mov xor mov mov and add imul enter xchg inc add xchg sub cmp adc nop push push adc and add add inc xor stos lods xor push push xchg lahf inc cmpsb in lock addb add push xchg sbb xor fiadd sub jb outsb or out xorl pop or add xchg ret (bad) xor loope cltd nop and andl stos in add pop inc sbb ret ds and popa aad pop dec add mov mov inc jl lods mov add call mov lcall aad inc and std or in adc xchg ficompl xchg mov (bad) pushl add mov aaa and add fildl adc xor ret scas out out cmp xchg sub pop lcall sub push imul push lret push inc or loope icebp xor inc or mov push fiadd lcall cmp (bad) push mov lret cmp pusha or dec or ds cmp adc cmp adc xor inc mov test pop imul fidivrl jb test (bad) sarb xlat aas in aas std and xchg aas loope dec js inc or outsl inc loope inc rolb or cmp dec mov mov gs xchg mov lds fisubrl or push push test push push popf test dec push add loope push sub mov inc xchg dec adc push mov ss out adc and jnp lahf aaa leave push mov aaa add test xchg inc mov push xlat addr16 ret mov stos cmp fiaddl outsb inc or lcall cmp cmp cmp pop outsb cs out cmp fiaddl cmp adc (bad) adc inc cmp mov push xchg inc ds cmp add sub aaa and jbe jl mov lods inc scas lcall stos mov xchg shlb scas lret ret shl add xor xor jg sub lcall push aaa mov mov ja inc mov frstor (bad) mov or push xor aas xchg shrb (bad) ret repnz mov (bad) leave mov sub fnop push ss scas add ficomp mov pop aaa mov aaa stc aaa sub mov sub aaa mov mov inc popa or jle and mov and or sbb dec jecxz and or movsb sti sbb loope jle movsb test and jo mov fs sbb xor xlat adc and add inc loop add pop mov adc sub inc nop add dec rclb lahf adc incl cli movsb insb call repnz lret andb or (bad) pop cld and adc (bad) decl jnp nop jg and lahf jge dec jg int (bad) aas push enter sub or mov in (bad) (bad) (bad) call sar pop push push cmp mov cmp inc push out dec push cwtl adc aaa cmp (bad) (bad) lcall popf jbe sti xor ds sub xchg arpl cmpsl push or mov scas dec push cmp (bad) (bad) (bad) pushl nop jle push sub es (bad) jl cmp cmp jmp notl icebp (bad) (bad) (bad) call sti push mov xor fwait xchg cmp int shll or mov (bad) call jecxz pop jnp jne mov pop lds mov xchg rcr (bad) out (bad) (bad) (bad) jmp leave repnz pusha insl jl dec inc movsl (bad) and arpl lea jmp mov (bad) cmp mov or int3 or inc jnp push int dec cli xchg xlat inc push btl inc cmp mov cmp std stos out pop jl cmp lods call xor into adc pop ljmp stc decl inc cmp push pop je push push mov push adc adc add inc iret sbbb push popa adcb adc pushl in out push or xor pop xchg xor sbb in (bad) (bad) call push add fs jge call fstps addr16 lea fidivr mov stc adc or xchg ret pop push test (bad) (bad) lcall into sbb or fmull xor gs push hlt sub dec shll arpl (bad) decl xchg and cmp mov popf sub lret popa (bad) mov xchg sub cmp fmul mov lea pop cmp (bad) (bad) decl add mov xor xorl in int fisttp loopne jo push (bad) (bad) (bad) (bad) fild jle jg in pop test inc jno push sub hlt lcall lret daa push popa or mov mov hlt lahf test dec xchg pop (bad) daa roll fidivr pop push out mov sahf ficom pop fisubrl push js dec inc jl imul sarl rorl pop adc mov mov jns jge adc ret out cs cmpsb jo sahf jle and xchg nop add xor dec pop push mov adc mov dec push and pop jns add or or popa lahf inc cmpsl fs repnz add jl jle test flds nop in mov js inc adc jo rcrb sahf add add inc push xor add add and xchg xchg push rolb cwtl nop xchg nop and adcl xor in nop cmp nop rorb rcrb insb push inc popa pop adc cmp and xchg xchg insb xor adc cmp and cmp out xor and sub lock ja rorb add mov mov and inc and cltd or push push push test test movsb cmp cmp sbb xchg call dec in cmp push jl lds lcall repnz sahf xchg rcrb adc pop insl or push fs add mov pop iret xchg mov jbe mov lea or enter pop pop pop jl aaa sub jl xor push cwtl ret pop add add push stos add outsl and movl xchg ss xor jle,pt dec pop rorl push (bad) call jae dec popa in push jmp add stos mov and out data16 gs out xor arpl mov cmp xorb repz out stos mov dec (bad) jl jne or mov mov inc movsb push jle sbb out inc dec sbb xchg cmc and daa daa jo or das ja xchg mov and sub mov aad sbb sbb xchg nop jbe test mov add daa xor xor popa or sub sbb (bad) xor ret push inc pop mov or adc adc movsl bound sub fucomi push add in pop sbb adc inc nop pusha fistpll or add jbe push or dec and aaa pop pusha and mov jo lss mov ljmp adc pusha inc cwtl xor data16 cli push (bad) cmp jae push adc into enter into mov arpl and movsb jo cmpsb cmp dec mov outsb outsl sbb icebp pop mov add pop int3 xchg or int3 adc mov js mov pushf sub xchg cmp data16 add cmp adc push adc ds push sbb es pop outsb lea xor xchg cmp sbb nop inc mov sbb shr dec or adc add fs add decb sub dec add scas inc push push jbe cmp jb cld and cmp inc jl sbb shrb adc loopne xchg xor fsubr lret dec loopne push xor xchg add mov add shl cmp add lock mov add mov rclb fldt pop clc enter add sbb shlb or add inc dec ret or ret test stos pop mov cmp jbe xor jbe insb pop add test enter and mov dec rcll inc shll mov sbb jmp rcrl jecxz pop shrb jge scas scas mov mov and leave inc ss lret sub or inc mov push mov adc out loopne adc mov push pop inc mov adc mov pop ret jo or mov push test or jbe pushw pop xchg mov lea inc xchg mov es dec cld bound xor jl ljmp cmc xor mov ficomp pop push pop loopne mov lahf or or and leave adc adc pop fstps adc cmp xor seto mov add lock out inc push sub ret scas test imul mov lds fs add loope sbb inc in push fisub push mov mov push xchg mov lods lods or inc leave add add add mov (bad) test fist subl lock rclb xchg jl aas cmc add cmp or push push (bad) mov adc mov pop mov dec and xor push enter push test mov sbb (bad) xchg add xchg mov cltd ss jne int3 push sub adc cmp lahf xchg adc jb pop test dec xchg lods xchg and nop (bad) and lods (bad) push repnz daa pop push leave inc sbb mov ss xchg in inc add lock mov push push pop dec mov pusha rcrl scas add test (bad) (bad) imull adc push cld jne xor js pop aaa sbb in add fbld fisub loopne push std shll lret add or push jmp hlt loope push rcrl mov enter and test dec dec cmp lea mov push mov add cli (bad) fmuls add lea mov rol out ud2 xlat add mov not and loope cltd jle fimull sti ss out into mov shr mov or sub dec stc mov and shrd and scas (bad) push (bad) xchg daa (bad) fcmovnu cmpl sub xchg iret or sub iret stc sar mov fdivr dec cmp inc xor addl sub push add or dec xor sbb test fcomps daa (bad) js and cmp scas mul inc add inc mov mov (bad) lcall rcrl inc jle daa mov popa nop mov daa rsqrtps repz nop imul ret leave cwtl std or and or (bad) jg lret pushf sbb push adc inc jecxz rcr not mov iret cmp xor mov dec add push push and das decb mov mov shr repz flds inc and push negb and mov jae,pt fiaddl push inc mov ror pop lcall mov push pop pop es adc sub sub stos (bad) mov or je sbb adc cli pop loopne in and adc (bad) lret stc xor pusha adc pop cmp inc add mov out fdivrs (bad) orl shl dec (bad) pop and int and cli sub pop nop aas push enter xchg xsaveopt push in adc inc (bad) pop add add roll sbb sbb nop aas clc mov sub iret adcl flds outsl addr16 jle movsb inc aam push mov stc lds xor xor add cmp inc inc cmp push jle push add xor xor cmp or cmp sub adcb adc xor xor add xor and insl rorl aad ljmp fcmovnbe xor cmp add or in into shr loope repz std sub add xor add rcrb inc ljmp cmc ds shlb sbb add xor bound test or sub adc addl pusha dec mov scas adc out (bad) xor neg mov addr16 cmpsb cmp sbb mov lret test jns out stc fist (bad) jle sub jbe stc add sbb ds daa mov in sete test out aam push out loop add (bad) xor (bad) sub sbb mov ds jnp inc jp cmp aam ret ret fimull jle out sarb push in (bad) mov cmp sbb ljmp outsb sbb jl pop adc clc sbb inc mov push lods (bad) fsub sti xor xchg add xchg pop pop mov inc and hlt push or fcmovb lea clc and dec mov or fdivp sahf sub cli inc cli lds cmpsl and setge adc inc push out xchg (bad) push cli cmp add adc add ret pop pop lds pop outsl stc sbb xchg int3 or inc cmp lock pop (bad) stc pop jge out pushl adc in jo push lods clc pop xor (bad) mov test xacquire cli sub outsb add (bad) std loopne sub mull and add adc adc xchg pop std add add jle divl push inc roll push lahf or stc xor lfs mov fcom sub push out pushl cli push xor push xor (bad) cmpsl jmp push mov add mov adc push ja imul jl lcall negl pop add adc or sar inc xchg pop sbb jmp mov dec cmpsl or jecxz test add mov rep mov mov bound inc xchg cltd mov out stc cmp push (bad) jne into sub dec or add inc sub add lea aad cmp nop adc adc pop jg call ficomp (bad) test push in sbb loop mov jp jae add fisubr ret das clc inc insl rolb sbb and or xor xchg and sti dec or inc xor sbb push xchg sub pop add push ja push inc inc xchg xor add cmp mov adc adc (bad) mov js add and cmpsb or xchg call lods add sbb and insb clc jo (bad) clc mov call xorb int jb add je sub sbb push push addr16 mov (bad) aad out and sub sub add sub or loopne loop jl (bad) enter lea cmp popa and add sbb incb push or mov or clc jo pop push (bad) sub loopne mov sbb push dec or or push sub sub mov nop jl inc add call popf cmpsl inc insb sbb out and (bad) mov add and mov addb into sbb add pop std in aas cmp push jae scas pusha sbb and sbb jb mov jb hlt lahf inc pop xorb insb xor cmp or lods or inc cmc and sub pushf push and shr movsb xlat jmp ret test jae cmp sbb push cmp jbe add fbstp push ret mov mov std je push jb shr testl dec (bad) jb push add int aas jmp or stc push xchg les mov mov cmp sti imul push add or pop rolb jb mov adc sbb ljmp test ds dec outsb pop push mov test sbb xchg into shll or or rcll mov cmp adc push add push add into dec jne xchg lock push or and jle mov or in inc addr16 mov outsl mov cwtl adc push xor sub ja push test push xor sub sub or pushf add jmp adc push and (bad) jnp rol aad xlat repz fimull xor into lea movb pop adcb xor xchg xorl hlt inc adc dec xor imul adc inc cmp and orl mov pop iret ficompl mov xor aaa popa call jecxz xor inc nop (bad) adc sub jbe pop int3 (bad) shll mov sti sbb lcall mov inc add sbb lock pop xor (bad) (bad) sub sub add hlt inc aas sub and mov lcall dec add dec mov sub pop jbe xchg sub pop cld js add andl dec iret add outsb movsl imul push dec or add andl ja adc adc mov push adc js (bad) cmp dec adc or js dec or cmp mov iret mov xchg push push pop fisttp jbe je dec sub out push imul push pop xchg out movsl roll push jecxz bound das jae into jbe push test out add jmp movl sub jl push jbe fdivl in cmp xor sarb xor xor or ret adc pop andb inc je testl mov mov pop imul js inc jb cmp or push (bad) cmpsl test push mov pop lods (bad) cmp dec lret sub mov dec addr16 mov ljmp cmp jg sub mov sbb add adc enter mov popa jb fist pusha mov push mov mov loope jge stos iret ficom mov adc add inc pop inc subl (bad) xchg nop jne xorb add in push xchg fidivrl cs jne ret add pop (bad) lock call xchg add or cmp inc add xchg jp fldlg2 mov adc add shr sub mov cmp and ja and adc add mov mov push adcl test iret inc jp test mov outsl jl adc mov roll imul dec mov push fcomps shl push lock fimull inc jo adc stos test lahf push loop push and sarb sbb aas xor into adc lcall call cmp adc jnp shrb or jp adc or pop cmp aaa aas movl or push sub loopne push enter (bad) icebp add decl add add add push pop fdivr xor pop jns inc or jg inc mov sahf cmp xchg or (bad) lea push sbb or fisubr sbbb add or jg pop or push add pop fwait inc ficompl mov orb stos cltd mov adc cmp jb push sbb rcrb inc push add dec push imul add jge mov ret xchg inc nop mov in inc dec mov pusha sbbl insb lahf adc mov pusha xchg xor fmull bound or js and int and mov jb or mov lds push mov add loop or dec xor pop inc pop jg cwtl cld xor adc add and arpl add xchg jl ljmp jge mov (bad) push add icebp add mov aad adcl aas cmp decl dec outsl push mov mov or or push sarl mov dec and xor cmpl (bad) inc ja je adc or loopnew jae jg lcall scas pop cwtl sbb mov fmul push add dec and or adc lock das pop pop insl mov mov or movsl lods lods cld sbb add shr test pop sbb sbb or jnp mov or icebp push call fbstp bnd inc sub push mov cld adc (bad) xchg test call inc jno mov iret mov scas xor adc loope jno sarb stc mov push sbb scas adc jne cwtl outsl (bad) adc add sbb call incl and mov add push (bad) jno loopne je sub sbb sbb arpl sbb sbb and pop arpl andl or mov (bad) jmp pushl je mov ret sti push mov jae mov push or jo or or scas in ret or jmp xor sub pop ret push test sarb add bound mov dec and or clc test insl lret cmp pop xchg aaa dec loopne shrl or out cmpsl pop jno jne cmp inc sbb into inc pop jmp sbb and inc lret out cmp popa and cli pusha xchg imul (bad) mov mov mov add add push jo xor jle jo mov push fild dec push mov mov inc (bad) std cmp mov mov stos pusha stos test xchg lock clc xchg subl mov fcoms jge push pop mov adc xchg mov xchg adc sub scas xor xor pushf test inc inc enter imul sub mov mov dec and cmp imul add mov aas js mov lods push push xor insl add test clc test push mov rorb pop inc mov dec fcoml mov sub popf pushf xor ljmp add mov pusha movsb test inc adc push sub add and std (bad) sub add or mov fmull mov sti out pop xchg inc mov mov jmp cmp cltd dec jb fwait push hlt mov ficompl pop mul xchg out test push mov mov mov fstpt jp push adc add hlt mov shrb mov xor jmp add or loop imul dec push cmp sbb leave leave jns popa mov xchg lahf adc push loope adc sub scas add imul (bad) dec or mov push lahf cmp sarb dec jns jmp movsb inc xchg ds or push inc jge pop das mov mov push inc fist push mov insl addb pop xchg cwtl xchg cmpsb pop push repz push loopne iret or jnp ret clc sbb push sbb les in inc xchg push cmp pop ret xor xor jo xor mov push pop int3 call mov shr push mov inc push add pop andl adc nop mov inc lock div bound pop roll mov sub out or push push or push xchg push mov mov add mov jb imul pop jbe sub das es popa aas xor xor test sub mov pop cs push into and mov outsb lock push pop imul inc add add les pop andl or mov cmp jae data16 negb pop mov push lea sub out and fbld fwait cmp mov dec add gs cmp lods inc mov mov call out xchg xor and (bad) dec fild cmpsl push popf or xchg xchg call rcrb insb mov in pop push dec mov mov icebp xor pop xor out rcl ret fcoms cmp mov pop push out add and int daa xor out adc repnz jnp push jl addr16 cs js aaa sub inc pop inc sub mov push adc sti push mov pop push jae lods pop bound das mov aas sbbb mov sub ja adc lods lds adc jmp pusha push shr jmp out out clc clc fiaddl push mov dec add je mov pop jl or hlt lods cmp push jb push lcall mov pop pusha or sbb adc lea or mov cld daa icebp mov scas mov xchg popa jg xchg in pop lods (bad) lock sbb test test rcrl pop push test mov rcll xorb test jo add or mov mov adc nop jl inc mov push inc sub xchg add sub sub out stc jnp in cmp xchg add pop mov adc xchg jecxz test pop (bad) les jmp test inc adc pusha add sbb or lods and cmp fnop aam in mov mov mov lea inc add add enter nop push rorb pop fldcw negl jecxz nop and push test xchg fldenv or mov inc mov add add clc xchg pop test ds mov jp (bad) lcall and inc decb ret xorb xor in jne neg loop loop dec bnd nop sbb dec xchg and int int and and jl je cmpl rcr loop dec push repnz and and and and sbb and and test xchg fsub (bad) in leave sbb mov pop cmp sbb add sti adc or test pushf loop lret lret inc dec pop nop pop nop pusha nop das das jns fs push shrb fucom and xchg cld nop or lock leave adc nop testl enter xor and in in xchg sti cmpl nop and sub push (bad) xor stos dec xchg xor in jge xor mov out push inc jo or fisubrl imul sahf lea xchg loope dec sbb sbb mov jge push push aam push cmp pusha add out mov lea and or xchg mov out ljmp fucomi stos mov pop loop jmp push clc sahf inc mov add or add fwait imul add inc cmp inc addl inc daa xchg lret rclb push les (bad) adc push xor jb jae adc (bad) pop icebp pop xchg jp pop xor push and (bad) mov lret addr16 ds dec (bad) mov cltd xchg push adc inc inc lock pop ret adc stc jbe mov xor ss sub add push loopne adc jle sbb mov fwait add jb xchg dec add mov lahf add cmc ja cmp adc notl add fisttpl jl xor pop jmp pop jne sbb fidiv lcall fild push clc sub pop rolb or add jb repnz and loope add sar inc push adc pop cli (bad) fmuls enter adc sub (bad) and push pop (bad) repz js mov jno ret bound jbe sub aaa dec jecxz push pop movzwl adc push test push xor mov pop sub (bad) mov vpunpckhwd sbb pusha sbb (bad) lods stos rorl je adc adcl clc mov adc aam inc sbb cld out hlt jo gs test incb rorl mov adc test loopne lds mov jne push lret add (bad) cmpsl gs aaa sub (bad) push cmp dec std js mov daa push jmp add fwait xchg fistp mov fldcw mov and andl mov sub pop call inc aad in pop sahf add lods and dec mov push sbb shll in push je std sub ffree push mov jl mov adcl push test ds push mov enter or push push (bad) or adc ljmp (bad) leave mov je or sbb movsb popf loope lcall and or xor sbb mov das and std jmp ret loope add loopne cwtl jmp pop push xor mov push xchg ret push pop push sbb push inc and mov mov mov sbb push mov insb or loop push insb xor xlat jo add add push inc test or push xor js push pushf jno loope sub add decl rorb jo or push lock or jmp xorb pop add mov mov or mov mov mov or jb shrl cltd lcall call negb and add mov add imul sbb push cmp adc js mov xorb out cmpsb stos inc cmp dec sysenter daa daa daa daa sub sbb cwtl add daa or loopne pop push mov push cmp lea pop mov sbb and mov mov sub xor mov push mov int jl jno and cmp pop cmp pusha hlt or lods sub pusha jns pop adc ja pop add and dec (bad) movsl mov shl mov lods dec mov mov test test jne or (bad) clc into inc das clc (bad) xchg jmp add test data16 lcall pop mov push lea push push call sub sub add mov or cltd cmpsb jle fistpll xlat arpl dec sub jne mov xlat cmp or fxch mov lods imul or test pop insb add test adc sbb xchg push dec cld daa inc jl arpl sub mov inc sbb (bad) push xor adc int mov call xor add push nop or add insb push insb lods aaa roll jb les lea xchg push push xchg add repnz add inc dec sbb mov pop adc (bad) xor or (bad) and cld or add (bad) xor xor out (bad) cmc hlt movsb fnstenv push insb (bad) ja call add scas add push mov hlt rorb mov cltd or pushf aaa sub dec pop repnz dec loopne jl adc pop xor mov push add cmp add inc std addr16 test pop stc push cmp je mov es xchg shrl mov inc rol push push adcb sub test pop sbb scas (bad) iret mov movsb and flds cmp popf enter sub clc popf mov test push jne mov cmc insl sarb jmp pop addl sbb and jae test inc sbb in mov and xor pop jno fsubl mulb cs adc cmp add cs cmp inc out imul pop inc mov insb mov pop sbb jb mov mov xchg pop ja push adc mov lahf xor les cmpl jb or clc sarb std dec pop mov add xchg sub mov inc push inc scas dec nop mov incl sbb push pop mov add nop adc add popa outsb fwait or or fcomps jl pop pop lahf fadds fucom dec lcall fwait loop xlat inc xchg insb sub inc mov add dec cmp pop push aas fadds and inc add fdivl stc and shl xor pop sub jp test push ljmp fidivrl xor fbstp mov sbb jmp dec mov decb mov pushf andw mov cwtl add shlb add addb mov andl leave dec jae cmp push ret and not inc xchg cmpsl hlt adc arpl enter addl dec sbb sbb pop pushl rcl and cmp mov jae call fild xor sbb cmp pusha add lds sbb pop adc sbb push outsb pop je sbb jl movlps xchg ret sub cmp scas pop in movsb xchg push fprem jle cmp add roll je rcll inc push testl loop idivl xchg rol xor sti lea adc add pop dec or mov jo and enter rorl sbb xor aam (bad) cmp roll sbb push jo mov push movl test shrb pop xor rolb and pushf mov (bad) repz pusha mov jnp or jge lcall pop xchg add jne and cmp not pusha xor scas (bad) jmp loopne adc pusha add sbb cs cmp je xor push dec fs sub jo les shll loop int adcl cmpsl repnz push arpl test xor jmp mov adc push je mov cmp je cmp sahf shr and and dec push (bad) in push mov sub cmp call add mov sbb add sub sbb xor stos pop icebp imul cmc scas (bad) xchg dec mov cld fist xor inc add js jne xor jne dec xchg and adc (bad) stc dec lahf outsl dec and outsw pusha inc and jbe push sub and pop sbb flds sub inc adc ss xor fwait mov sbb push mov mov adc inc adc and cmp (bad) cs xlat ss dec or sub and sbb sbb or mov loopne jo mov std subb push and inc js add sub mov add mov add add pop push and push (bad) xor push inc inc fmuls sbbb pop div push pop and sbb lods imul sbb int mov mov mov cwtl push sahf lods add add dec movsl js pop pop les jp outsb mov push or cmp cmp cmp je add shrb jmp add xor mov mov pop adcl sbb sar add mov dec xchg sub cld jmp mov sub sbb cmp and inc push push add call xchg add clc pop inc mov push inc mov jno and add push lret mov or mov dec fwait rorb (bad) arpl sub inc adc mov aas lock enter or gs pop sbb int xor icebp sub lea sbb xor aas lock lcall add jle inc mov inc rolb push fldenv dec scas mov sub dec aas sarb iret pusha push or test or push xor outsb sbb or jg xor pop add cmovns xchg push fiaddl scas in and and inc inc xchg mov xorl or adc adc push in test adc mov popa add or or call fisubr add ret adc cmp pusha rcll push adc insl cmp dec les jl add cwtl pop jmp int3 pop sbb (bad) jp dec ljmp fsubl inc add mov in push add jae int push mov dec sbb jmp lret shr cmp add sub pop enter mov push sbbl or cmc add (bad) dec pop mov cwtl inc cmp push das dec dec rcrl mov mov cmp sbb mov std jne adc or rol mov add jmp movsb daa call pop push insl lea jae call dec sub jns push pushf movsb shl or add mov sbb push imul mov inc out add in pop cltd or or dec dec mov inc xor test repz sub movl clc adc (bad) je pop (bad) daa pop in xor add sub in mov xchg add (bad) (bad) xor add pop lods or push xor out test push jmp sbb sub pop shll das jle int adc adc or int fnstenv push lret sbb inc int stc cmp sbbb inc add pop mov cmp dec ss (bad) imull dec pop push push sarl loop add adc mov mov cli adc (bad) add mov outsb mov add sbb repz sbb add daa daa daa add daa pop or or daa daa daa or daa clts sbb cs or or mov cs inc sub into pop rolb stos adc mull div mov jmp ja dec pusha add xchg mov adc imull rorl and je rolb mov cmp mov orb mov pop add xor rclb add cmp jg sbb mov dec mov push adc cmp jb in fxam mov adc mov sbb inc and movsb pop imul aam mov add push insb loopne sbb std and (bad) mov loope jle test cmp mov cli jnp dec loopne mov les fcomp and ret rorb xor outsb mov (bad) test orl mov pop ss mov outsb xlat jge (bad) cmp enter dec rorb lods pop mov mov sub cmp mov add jb cmp jle cmp jmp rorb xchg sti outsl in dec pop add incw jl imul cs fimull clc test dec icebp jbe or cld fmuls scas testl call push dec dec lock add test in push pop movsb xlat pushf daa mov dec lret cwtl sarb dec lea dec push push mov ds push add in test scas sub xchg push xchg je mov negl daa fidiv pop and std sub inc (bad) loopne and jg push inc jno (bad) test lcall xor (bad) dec push inc (bad) cmpsb and mov adc fcomps imul add mov sbb jnp sbb dec add adc push mov push mov and push push lcall mov inc in js inc cld inc loopne add icebp (bad) (bad) jecxz cmp and or xchg (bad) fbld sbb das xchg loopne or and (bad) mov mov jns idiv or sbb and fidiv stos outsb pusha push mov push pop push jmp cmp xor adc dec jne push cmpsl and adc jo sub sub jl mov cmpsb cmp dec inc shll inc pop lcall or inc lcall sbb mov int xor repz (bad) mov pop cmp cli cmp pop loop jle sub nop je fwait sahf clc rcl loop or cwtl cmpsb jge ja mov cmp or out xchg mov test mov sub shr (bad) loopne xor dec cmp repnz mov jne scas add cmp loope js sub lahf add dec mov inc cmpb fucomp imul pop cmpl inc xchg pop mov mov outsb lock mov jle mov and push mov dec jb sub mov jmp push pusha popa int mov (bad) mov pop sbb (bad) std cmp daa jle in jl mov jmp add push iret testb cld inc sbb mov pop out adc jg and mov add insl repz add sub fs fcmovbe mov in mov or push jbe (bad) adc imul xlat dec in sub dec outsb sub push lock jp loopne fldcw sbb add mov dec mov (bad) or push jle scas jmp sbb dec mov test rolb and stos mov and inc jmp mov rclb ret or adc test sti push rclb dec icebp or lea and shr adc xchg and in add dec rcrl add add xchg int3 cltd les jbe inc xor call loopne pop enter mov (bad) push inc scas pop add mov mov or add imul call and mov out sub mov jp test adc in xor inc test lock (bad) add subl ss pusha push icebp rorl lahf clc (bad) push (bad) leave jmp xor sub add add lret rolb pop sub mov xor dec mov push test xlat out mov sub pmuludq sbb and or (bad) xchg add mov mov add adc pusha mov rcrb fsubs mov fidivrl inc mov daa sbb sub dec cmp add add xchg mov in loop lea xor dec add xchg xchg xor add loope sbb rcrb cmpl cltd pop mov insb mov adc jno lods ja hlt cmpsl or sub shl push sbbl call lock jb fs xchg add outsb stos (bad) add mov xor and js push fs push (bad) push icebp sbb data16 adc cmpsl test lods bound lret jne lea mov inc sbb rorb jns test out cwtl pop dec add push movb push cmp pop add pop mov cmp sbb scas adc cltd mov pop jne gs andw add subb mov push add data16 add orb adc (bad) push jle fs insl fild fsubl or mov mov xchg test jle push leave ret add inc xchg (bad) call mov movl jnp cmp (bad) add push stc daa mov negl sub xlat add int3 sbb push mov test dec jne pop pop addb test movsl mov icebp jmp orb add sbb jl cmp adc and sub into rcrl xor inc adc lcall push nop (bad) loop inc sub scas call je loopne (bad) loopne xchg shl mov fmull inc jmp jle cmp jl ss mov ja sub dec xchg push mov icebp inc dec xchg ficomp aas call out shl dec inc jg call cmp push xchg fisubrl pop rolb rorl push inc add or add adc fdivr mov loopne xchg pop imul clc insb jle movsl dec mov cmp push movb aam loop inc dec loope cmpsb push sbb notb data16 incl mov mov sidtl and mov decl aaa push push inc sbb sub rcr add fisubr push pop or jmp mov xchg dec in add cli into push fwait inc fisttpl add mov pop mov and imul pop cmp or test or loop adc cmp xchg push rcl loopne (bad) mov (bad) pushf push orl cmp jb mov or mov add cwtl inc imul pop pusha shll sbb sbb das add lahf inc inc testl or dec fucomip mov mov adc push adcb loopne adc insl push xchg push jns bswap and orb sub aaa mov xor call and mov and add inc inc jge mov fimul out mov add mov adc subb mov mov loope pop mov xor add sti sarb add popa sub sbb inc sub lods mov jo or adc mov and lret or mov pop cmp inc call lods movzbl or lea add imul orl mov in add dec dec adc cmpb rcrl sbb clc dec adc push xchg out inc sti pop sbb add or adc xchg sub inc push ret inc outsl cmpsb sbb ja cld stos mov add add fidivl add sub sbb jmp mov sahf popa add rcrl add dec mov mov imul sahf inc sbb sahf xchg data16 cmp inc call push je adc loopne xchg cmovle icebp push out sahf inc hlt enter mov pushf add enter shl mov jnp ljmp or (bad) sbb cmpsb add sahf xchg xlat sub cmp xchg add mov unpcklps xlat pop push test pop push (bad) jl (bad) sub jmp pop pop pop subb or sub int3 (bad) sbb and jb sti sbb jb dec sbb fmuls xor je sbbb push push mov add lahf mov or popa and (bad) push es ds push pop std mov orl cmp push xchg and inc ret pushf incb sbb cmp imul add add adc lds push sub bound addr16 aaa dec push dec push jne mov cmpsl dec sub sub dec pop push test or adc lcall dec dec adc xchg ljmp or jno add xchg imulb les add lcall and pop clc jae sub inc in inc add cmp lret dec pop out out cmp std and (bad) rorb sbb mov sub add shrl hlt insl pop inc movsb adc add push aas add add cld mov mov and push aam aam or add (bad) roll mov xchg xchg push fadds add and mov mov dec je push and dec add xchg rcr sbb mov pop (bad) dec daa dec pop shrl sub push jmp dec adc jecxz call cmp sub ds and jle sub mov (bad) int3 js mov push (bad) bound adcb (bad) je add sub add jmp jecxz add xor sub rcll stc and nop or roll push lea cmp (bad) or and mov mov cwtl test nop test pop push mov hlt and orb (bad) or lret push outsb jecxz add sub push dec pop call inc shrl mulb push xor jno cwtl add scas adc push sbb mov inc mov push ja mov add sbb or adc out cmp sub adc int3 pushf inc sub cwtl or pop mov ljmp shl adc test mov imul pop and popl lods adc imul sbb test pop dec loope les pop jmp push dec mov mov dec movsl push add push add cmp pushw test mov ljmp int popf popa add jb jmp pop add out outsb xchg test and add or jb shr or add orl jbe pusha cmp or adc enter pop and dec inc movsl inc add and jae adc or mov jb out call inc inc pusha adc dec add add fidivr jp cmp inc push adc ss fstps cmp inc adc das inc mov pop les xor sbb xchg push lea repnz icebp add lea push aam or in fstl and outsb enter cmc pop lods mov shr loop mov sub jbe nop test movsl loope lea stc add (bad) xchg pop inc ljmp jne xchg inc hlt lock mov movsb cltd rclb insl insl outsb (bad) decb ds sti ret icebp dec fcoms aam in push (bad) std xchg push add sbb dec or aaa loope and add les xor add push cmpsb (bad) pop cmp inc (bad) js push add rcll loopne lcall loope xor into push mov push push dec shrl xor enter pop push sbb rorl sub mov call add je push jbe daa sbb or or repz pop sti adc aaa mov in loop std jmp test mov shrb push jo fldl test xchg es fstl mov notl mov push cltd je imull mov cld jmp or pop in or and lock fs mov dec dec dec dec lret sub ja or dec push push jmp inc scas adc int3 fnstcw insl sarl jns lods sahf jp insl jnp int mov jl jge jle jg xor adc (bad) push mov loopne pop ja js mov and push mov movsb add jo push pop or fadd dec inc mov fcoms adc push or sbb and inc in cmp add push xor push inc lret pop int3 int inc or sub jmp call dec pop xchg xchg (bad) mov or xor hlt cmp add test or push data16 ret push mov push (bad) (bad) or (bad) mov mov jae nop push xchg sbb ficoml inc pop sbb jle adc add insb jl call lods je or jp and mov loope testl sahf das clc ds rorb or jb (bad) xor dec or clc mov xor in adc cmp aaa sub or xor gs push dec xchg mov stos pop and or sbb pop cld cmp or dec in add ss bound mov and enter dec dec cmp cmp cmp pop adc xor sbb das mov sbb mov and and mov xchg push imul iret lods ds xor dec push push mov add shlb dec sub cmp jae cld push lock inc sub jb lock pusha sahf pop mov nopl jne shr push (bad) mov inc in sub push cmpb pop arpl jne xor mov sbb and cmp test pop es xor adc test cwtl fldt push lock inc inc pusha mov or (bad) mov decl jmp and jge sub push or sub dec inc and arpl into sti xchg imul cld das xor push call mov add jmp and sbb faddl js sahf pushf movsl or jmp and xchg out (bad) fisubl fsubrl mov mov mov loopne push push xor dec jl add rorb sbb push mov add push jmp int jle cld or sub jae cltd mov je bnd push push pop loopne sub pop mov dec sub (bad) pop (bad) cwtl sub int3 pusha jle (bad) mov add fadds loopne ret iret lock rol and or adc xchg push test incl lock cmpsl repnz adc ss (bad) jo ds aad sbb add xchg push fdivr push adc push mov pop cmp add sbb mov push sub (bad) test dec sub jg xor push pop mov shl jmp sub fwait push add inc shl jg or (bad) out dec inc dec xor jecxz sti sub mov cmp clc rorb push add andl bound mov push dec xchg adc int push je jl cwtl sbb xor mov and push inc cmp xor dec js or or fstpt pop push lods xor aad inc inc adc inc push jbe fsubl or mov pop fiadd into inc cmp adc xchg call mov pop sbb mov pusha push jmp rorl jne inc dec xchg add cmp xchg sbb inc rorl jl ds cmp cli or cmp jbe in insl mov pushf sub dec cmp xor jae inc push jae sub mov in or jmp adc and call pop fs dec loopne add ja pop je ret lea lahf inc add orb add pushl je insl or mov mov push (bad) sub mov push mov fdivl test adc xorb inc mov push xor jmp sub cli add mov (bad) pop aas fmul bsf ret mov (bad) aaa push jp jb movb add inc fs test out call sar and fsubr sbb sub insb push pop cld bound mov add add dec add es mov inc shl cmpsb sub subl sub shr mov sub push xchg and jbe add mov jb sbb add push mov jmp xor mov (bad) jne push and cwtl rorb or xchg movb dec dec and cmp cld dec cmp adc mov and push lds and enter push insb xor xlat cli stc cld fisubrl add out add jmp popa mov add or sub aas inc repz push sub lods std adc das add sti std jno out jne (bad) je pop sbb je pop out mov int3 mov push ret or jno rcrb std sub xorl aad (bad) iret jne jmp loope adc jmp outsb push nop add or lods inc imul outsl jne int ss jg sub and push (bad) jbe leave cmp jae add jo jne fbstp xor clc mov dec in sbb add cld je bnd mov loopne push mov xchg or out pushf mov clc add (bad) pop add daa lock or or dec call add adc fs (bad) hlt pop add pop add rolb mov and sub adc inc sbb mov add incl incb pop adc ret mov scas rcl mov cmp shr fldt cld scas adc pop ret cld xor cmp into adc ja aad cwtl hlt int add outsl jge mov pop sub adc lret jo test (bad) sbb test andl xchg sub hlt add xchg jb imulb (bad) fsubrs fs test dec js mov nop sbb pop clc stos lock and push xchg xchg adc jmp mov mov arpl and sbb cmp mov adc jg shrl sbb jbe insb jae int3 les mov jo cmp dec gs xchg stos inc cs aas jmp test and lret xor fimul dec xchg out cltd sahf dec clc roll xor or out popf lods sbb cmpsb pop jp cltd pusha sub loopne mov cld jae cmp jae mov mov or lds add sbb and lock pop push xchg mov mov inc inc dec jne insb mov dec add cwtl add pop enter cmc jmp aaa or add or out or xchg icebp mov aaa dec adc pusha fnstcw icebp mov int3 inc loopne popa mov ret mov xor fsubrs inc clc iret (bad) idivl aaa mov dec je ja mov jmp sbb loop fnstcw sub pop xor pop fld jecxz fcomps je xchg pusha inc or cmpsl inc jge fcoml mov add pop inc (bad) imul aas mov push outsb (bad) mov pop lock and inc sahf test adc jmp xor aaa jmp movsb sub push and and pop stos fdivrs js jns jle mov xor fistl imul push cs sahf out dec pop jo out jns fstps mov mov idivb fidivr cmp cmp lahf out push xchg scas ljmp repz add mov out sahf out lret xchg repz jbe scas push and inc jae repz jo fs add and loope add nop shll lcall xchg negl out (bad) scas push (bad) mov out mov dec inc imul in mov lods mov idivl movb scas add out ds lods repnz iret repz fiadd mov lock (bad) mov jb sbb and cmp repnz mov or les out xchg loopne mov call adc inc int and inc lahf je jge aam fiaddl mov or inc push test jg mov add fisttpl add xlat cs stos ss addr16 pop out test jbe aaa adc or mov je (bad) dec or dec test pusha pop cmp jg push dec ret out mov xchg outsb jg pop jle add decl dec push dec sub lcall mul gs inc inc and inc inc loopne sbb into adc std push jo sub jo push imul je sub iret imul xchg dec mov cmp inc inc ja aam and arpl push fs and addb aas scas lock pop scas iret and or inc (bad) neg out and dec inc sub xchg in and inc push push inc gs adc cltd imul inc fisttpll xor add sub mov xchg clc sub sbb je mov bound adc push cmp xor sub dec gs dec arpl inc and xlat add notl adcl or arpl mov fildl and pop push push and fcomp loope add adc cs pushf repnz addb and add sub pop xor add add adc rcrl outsb gs imul push imul gs mov push aas cltd arpl xchg inc pop sbb push jg test ja and xchg mov fisubl insl jno push and shlb push in inc mov add pop jb add insl and add shrb in in or or push mov in or or notl adc pop or or or out push add (bad) sbb iret repz insb in sbb repz repz fdivrl jl repz cld add iret repz (bad) adc push (bad) xor iret repnz iret repz push sbb pop fidivrl mov iret cli push xchg es repz data16 xchg repz repz (bad) ss iret repz (bad) push mov cs repz outsb out push sahf repz repz fidivr mov iret incb addl cmp popa loope xchg repz repz (bad) xor iret icebp or iret repz imul iret repz fnstcw mov iret stc add cmp repz gs xchg repz repz aad mov iret repz cmc or cmp repz insl in sbb repz fnstsw int std adc or xchg push xchg sahf out sahf push push rcl xor jns out mov jae repz sahf out or mov dec dec lret lret sub jns out stos stos imul jns out sbb fwait fwait sahf out sahf pop pop fcmovnu cmp jns out mov out sahf out pop pop xchg inc inc mov out cmpsl cmpsl addr16 jns out pop pop xchg xchg sahf out sahf push push xlat xlat aaa aaa jns out mov ja mul jns out pfadd dec dec iret iret das das jns out scas scas outsl outsl out out sahf out pop pop lahf lahf sahf out sahf pop pop (bad) aas aas jns out mov repz inc push and repz adc jo dec cmp repz push cmp repz inc and fdivp cmp adc xor add repz inc ret and add jecxz push or out sbb or out sahf out adc sbb sahf out sahf push push push add or out sbb jns out adc sbb sub add daa daa outsl pop add or pop and jb or jb jb push unpcklps push sbb fs leave xor cs sbb dec cs mov sbb sub dec popa adc addl mov adc or sbb mov sbb sub pop (bad) sbb les inc addr16 dec or push and pop push sub cmpsb adc sbb sub cmpsb imul imul scas push fisttp sbb fucomi pusha lahf sarb aad test push xlat leave insl xor test (bad) xchg dec jae imul or xor adc sahf aaa int xchg loopne fs les out push add add add and pop dec push dec mov popa imul js add pop (bad) mov and mov adc mov popl jno outsl mov xor xor xor pop fcmove inc daa cltd and push insb inc (bad) in cmp inc mov imul and insb in imul xchg or or cmp repz sbb and repz repz inc push arpl js mov cwtl insb add lahf mov aad jo pop dec iret repz xor lret popa add jns out add add or adc and inc push add (bad) adc mov test movsb lods lcall and cmp pop dec xchg push ficompl sbb or add lret sub cmp lcall (bad) xor iret aas bnd push rolb adc add pop inc pop rclb fisubl dec mov sahf lods ret add lcall pushf (bad) in mov mov and test imul shl xchg cmp ja cmpsl adc ja daa pusha inc push and cmp pop jo mov adc inc xor jl cmpsl (bad) out insb push daa mov lahf xor sahf pop xor es adc inc or movaps cs cmp lds sub lock fstpl sti pop add out das sub leave leave add or (bad) mov bound mov clc push enter xor sbb pusha aaa aas cmp sbb fistp addr16 pushf xchg add and scas add add inc aas test inc pop push inc pop jns pop (bad) lock cmpsl add adc stos cmp and lods iret subb repz call loop lahf out mov push lods add add and and mov xlat rcl xchg pop insl dec sbb xlat jne les dec popa jg test and xchg xlat add sub les movsl lahf cmpsb xchg push add movl mov ret mov adc xchg dec shrl sub out mov mov jne xchg sbb pop daa cmpsl cmp stos rep mov mov mov mov pop push testl aam mov sub inc or aam cmp mov shlb xor add dec add mov adc loop xor mov mov xor xor inc inc sub push and xor xor sub jp pop leave add adc pop mov pop icebp sbb add adc adc add push popf jae add shll (bad) adc push ret fucompp (bad) aad ret push push mov js inc fwait (bad) stc push js subl mov dec adc flds push or inc jp test mov mov mov lea aas inc pop push fs nop adc pop mov sub xor and iret jnp mov cmp push pusha push outsb jo mov push and aaa ss sahf dec push adc (bad) xchg xor nop outsb loopne cmp sti xor cmpsl push insb nop mov es out jnp cwtl xchg push mov pop jo push loopne xlat fnsave push xchg ss push xor jge ss xor push cmp in cmp mov das mov push out mov adc pusha sbb sbb adc sub and jns sbb push aas inc pushl xlat sub lahf sub mov das mov pshufw pop ss fidivr xchg aaa pop cmp push adc cmp fistpll sub mulb jge mov xor push add out daa iret shrl es loop insb mov movsl aad cmpsl stc cmp adc sahf out je movsb mov out (bad) sbb cmp pop jne lahf ret out add jns out fwait mov loopne repz repz cmpsl stc cmp lahf ret repnz mov sahf jno mov ds repz xchg mov sahf out sub jg lret int jmp xchg cmpsl stc cmp scas lret rolb jns insb xchg mov ds repz xorb imul repz repz inc addr16 (bad) out lcall test jns scas int lds xor repz (bad) in and sbb out and outsl int mov dec js in pop xor add outsl subl pop sub add add pusha aad add repz pop adc lods xor ficoml fdivs mov sub fsts cmp nop and bt pop insb ret bound or mov mov jne mov xor adc sub mov arpl cmp sbb stc cmp cmc in or mov pop push and dec xchg lock pop pop pop dec cmpsl inc sub stc push ret bound mov pusha insl sub daa imul push in sbb jnp fimul inc insl adc addl dec adc aas pushl les dec dec cmc fidiv mov push dec (bad) and out pop push xchg inc lods or xchg aaa xor xchg inc cmp xor ret inc mov inc roll fldl aad dec pop bound nop xor push arpl push or add scas dec push dec inc sub pop dec adc jp jb pop (bad) test or sbb adcl pop mov pop sub mov push pop dec int fiadd mov stos add jmp insl inc add inc and inc push popa inc dec mov xor ljmp pop mov dec mov lret dec xor inc sub jne mov rcrl mov dec (bad) mov scas in movsl mov or popa in push dec sbb cmp push mov and and add fsubs inc icebp inc rorl push and imul pop cld and xchg stos ret ret mov pop dec pop jno les and lret adc cltd push or aas dec outsb mov sbb inc sbbb test lret (bad) or rorb and and in insl push sub lret fldcw dec cld dec dec dec dec icebp inc xchg add insl or xor xor js mov mov addr16 pop test mov mov add out stc mov nop push mov inc sti mov inc inc pop leave xchg cmpl inc bound mov data16 jae and push pushf test stos fdivs dec dec or adc insl gs aaa mov mov mov jb dec inc dec arpl es test pop insl and add xchg xchg sub sub scas lods push jecxz sbb adc push add jge push add pop dec lret push mov adc jb and sub ret xor xchg test cmp mov cmp pop push or add (bad) ret or push aas lret push pop fdivp test inc dec pminub mov add push and mov sub inc loope sub xor mov mov stos add or nop mov adc lahf adc sbb add daa pop push add pop or fbld aaa pop cmp int3 sti loopne,pn out cwtl (bad) push add sahf (bad) cltd add daa adc sarl sub push sub adc mov mov aaa or dec inc daa pusha imul xchg (bad) movups dec mov das jo xor jns push or xchg fisttpl jecxz add daa mov xchg inc loopne aas pop sbb in daa nop (bad) push cmp sahf out cmp push adc dec dec dec sub dec dec dec lock xchg fcomi fmull adc jecxz sub xor or fs add xchg xchg xchg test aas pop repnz daa sbb push push pop jno jb cmp aas pop daa daa daa pop ljmp or daa daa daa mov daa daa daa daa push adc daa jb les daa daa daa daa bound movsb add daa daa daa (bad) inc in daa daa daa daa pop sbb jp aam daa daa daa daa push mov daa daa daa daa mov add push push rolb jb jb jbe int3 jb jb pcmpgtd lods jb jb push xchg jb jb or pushf jb jb arpl fsubr in jbe aas outsb cs fisttpl aas mov ljmp call cmp dec dec jno,pn ret in popa and in inc loop in dec dec sbb in shrb dec dec dec dec mov mov in dec repnz adc push incb add xchg xchg or lret xchg xchg xchg xchg stos add mov lcall fidivrl cmp mov or cmp lea mov adc jae or cmp (bad) arpl cmpsb add inc out sbb jnp cmp mov mov cmp cmp mov cs xchg or ja inc dec dec aaa into addr16 in daa scas pop xchg in inc out pop pop in inc dec sahf jg popf fsubrl in outsl aas das mov pop (bad) (bad) dec (bad) es mov and es mov mov cltd sub mov cltd and mov cltd dec movsl in xchg mov mov sub mov in and mov cltd dec es ret mov and es mov lret stos cltd dec es jmp fistl sti dec es mov cmpsl mov out cltd dec es xlat mov and es mov lahf mov fistpll (bad) jmp push xor out fistp adc push jns lret pop add inc test inc jg push pop add push sahf cmpsl push and out sub or push orl incl sbbl sbb push xor pop fs jg incl orl mov push add insl iret repz push inc (bad) (bad) (bad) incl mov cmp jmp mov pop add les test adc xchg scas add rcl push js lcall sub inc test sub push mov aam out jecxz cwtl sbb pushl push sti mov repnz xor dec add sub mov add mov sub or rol inc dec mov xor popa pop insb xor scas push jmp inc pop push xor xlat xor mov push leave mov dec xor sbb mov fdivrl ja inc out data16 cltd add ss or dec fcomps in adc push sbb fldl aam es pop pop sbb or (bad) insl cmp cmp xchg and inc push and mov popf lcall lea dec push out imul lret insl cld xchg inc (bad) jne lds pand cmp fisubrl scas arpl inc mov xor test ret call fidivrl xor outsb (bad) lea stos dec push outsb xor ljmp push pop xor xor pusha ljmp into xor cs lea adc xor scas or test lea cwtl out incl push aaa dec inc bound ss loopne xor (bad) out xchg lea jp xorl add mov clc idivb cltd jecxz mov fsts push cli add sbb ret ss add loop inc xchg test xor (bad) mov cmp ss pop cltd mov xchg outsb add in aam aam inc pop test add sbb (bad) mov ret add mov dec or lea push push lods xchg (bad) xor xor pusha jecxz out imul outsb into xchg mov xor xor xchg loop out inc sbb hlt xor mov push xor inc sub sub inc bound xchg inc fsubrs mov add test lret lea fnsave xor add xor sbb adc pop scas insb xor and dec mov pop fnsave in in sub stos add pop aaa rsqrtps pop fidivl push cmp sub jne stos jg xchg movsl dec fstpt push mov subl xlat and adc xchg orb icebp cmp cmp sub ds mov xor mov xor cmp (bad) mov cmp and (bad) repz pop cmp cmp insb push scas ds mov push dec (bad) push gs (bad) mov pop xchg ds lods cmp cmp outsb aaa adc cmp cmp aas xlat xor and cmp sbb xchg mov popa out pop lcall sti cmp add aas xor inc jmp adc dec aas rclb subb sbb es outsl mov stc push add fucomi or xor test bound or push fidivr dec or cmp orb sbb adc ljmp push and xchg push push mov addr16 inc push add or enter and xchg mov iret movsb je mov inc xchg shlb shr and add jp ret xchg xchg in insl das and jbe mov test mov (bad) aaa int3 lock cld cmp push repnz jl or sahf inc or mov outsl or lret or and cmp or cmp shlb lcall mov (bad) adc ret cld aas or inc cmp fildl test push sar mov movsl aaa ds sbb push pop test sub and lahf add mov adc (bad) aas jb cmp xchg xor mov shll inc xchg fild push dec and in (bad) fbld aam mov addr16 dec and (bad) (bad) lcall daa push pop je xor in push test jbe fdivs popa jmp sub out (bad) (bad) ljmp aas cs pop sub fs clc xor test sarb mov (bad) (bad) (bad) call into push scas sbb lcall hlt push adc sbb jns pop test (bad) (bad) (bad) sti mov fcoml mov pop cltd xchg xor ret shrb dec cmp xchg jb xchg sbb fisubr iret addr16 mov adc jecxz test in cmpsl sbb sbb ret repnz std add aad xor (bad) (bad) (bad) jmp pop jb sbb dec movsb dec lea push dec sti (bad) pop sub mov add fwait (bad) (bad) (bad) (bad) cli icebp mov sarb rcrl sub xor sub fmuls push loope std pop xchg (bad) (bad) (bad) ljmp clc loop pushf mov lret lcall lock dec sbb mov jbe lcall loope ret repnz xor aaa call dec aas scas mov mov sub jmp cmp or push mov dec mov (bad) (bad) ljmp cltd jecxz lea lds int3 xor mov cmp cmpsb jns mov jmp mov notl and call cli cs lcall (bad) (bad) (bad) incl mov push in in lahf (bad) test inc inc out add or pop pop (bad) (bad) (bad) ljmp add out lahf xchg mov pop xor pop out push int mov sar (bad) (bad) pushl and jnp jle ss xchg xor jge int3 std push (bad) (bad) lcall jp jl sub aaa aad scas sbb xor cli xorl (bad) (bad) decl faddl mov (bad) lidtl rorl (bad) (bad) jmp fcompp and mov enter test or (bad) push and jp add test pop ss ds sub mov mov or dec mov scas push push ds mov imul adc mov mov imul mov nopl and mov out mov push push fisttp scas cld rolb add push sbb dec dec cmp jg cs sub xchg cmp call mov imul cs pop inc inc mov dec sbb (bad) dec cmp fbld insl add xchg add add rolb sbb pushf push xchg loopne loopne sbb aam movsb idivl mov jg inc lcall push and lahf repnz subb int3 rolb rcl add enter rolb loopne add xchg add enter loope enter enter loopne inc fdivr or or lahf push xchg add pop sub fadds adc movsl add rolb or js dec push iret xor into xchg imul or call add dec jne addb negl outsb fneni(8087 imul inc push fcoms in aad adcb add lret mov add in (bad) lods inc adc xchg dec sub xchg and iret stos popf push pop or jp in aas movsb sbb gs data16 dec lcall cmpb push adc imulb dec rclb push fimul pusha push mov jge mov lea cmpsb xchg imul xor push push jl add add mov lods orb mov aas leave xor inc enter lret repz repnz or sarl rclb aad and jmp ds rcll pop jns push mov sbb out push dec bound mov jl or jns and aas add inc outsb pop jb jmp xchg mov add pop cs jecxz sbb jns iret mov push jb push nop outsl roll mov pop pop jb inc jg shrl and mov inc inc mov aam mov inc lea lock dec or add dec xchg lret fucomi pop sub or pop je daa xchg dec jp,pn sub insb lahf movsb js mov pusha das notl xor xchg enter inc movb stos or pushf (bad) out or or sub or (bad) mov push xor jg shrl mov sub add nop add leave xchg insb mov cs test aas xchg xchg adc fs addb push or rcrl xchg xchg mov test xchg cltd in jle adc add test lret and mov add mov cmpsb imul test push and mov cmc sub sub or or fiaddl mov aad mov inc sub jg dec jnp sub test divl mov je mov and lret repz test add and jg test je xor leave xchg mov mov add xchg mov and cltd fs cs mov jb sub (bad) enter mov xchg lret add mov sub gs sub push inc enter pop inc insl sbb push call adcl cmp dec mov das jmp cwtl arpl jb (bad) lahf adc push push call in add add pop addl and pop pop mov unpcklps pop addr16 adcb adc xor aad mov pusha lods adc and jns shrb xchg xor test icebp out add inc imul int jno xchg add rcrb add adc add push jmp sarb in addl mov lock fmuls cmp (bad) pop sub sub sub mov add lods das mov cmpl push mov fidivr sbb xchg adc sti mov cli mov cli and sub sti loope push push jle rcr rolb fnstcw or inc pop add rcl lock adc rcl loope rorl and fndisi(8087 mov and jg sbbl cmp subb aad aas mov push mov or xchg das dec je jl pop push jmp mov jbe sub push sub sahf lret (bad) push jp mov pop jge lret push pop pusha and mov test jns cmpb fwait jle dec push sub add xchg test imul add movsb aad rclb jns out sbb xor push xor push push push xor lea pop xchg fildll sahf pop cmpsb mov test pop iret repz call loop mov (bad) jle mov xor cli sub iret pop push rcr sbb syscall xor add retw mov (bad) cmp loope sub js sub (bad) loopne test sub rclb rcrl ss enter push adc sbb jg or pop repz push cmp push fisttp dec test push xchg (bad) push cmp push pop lods dec stc jg mov add mov aam ffreep add mov jmp sbb jo pop ret jl stc test push mov stc nop pop aam add in rolb dec rolb fcom das nop xchg pusha out sub add or mov popf adc decl push enter add popa push pop mov shrb dec shr mov clc sub imul push xlat jnp mov fs push add jg jl cmp nop push call cmp jo add (bad) insl ficoml or cmp and mov mov mov mov cmp xor movsl jb mov mov mov addb stc call add enter fnstenv jnp loop or fildll cmpb mov sub jecxz push pop test leave (bad) push movsb or aaa std mov clc je rorb js aas push cmp push push mov orl sub jle rclb nop jecxz cmp xchg jne,pn lea lea mov and ltr mov je cmp pop mov sub xor loopne inc inc (bad) sti jge and jl dec adc push push add pop dec bswap jg in call jecxz adc insl sub xor push jb inc inc addr16 and jns xor add (bad) sbb pop inc fdivp lods adc call or adc push mov pop clc pop add pop rcrb jg popa bound cmp or pop add leave xor ljmp push incl and into imul pop sbb adc (bad) repz jne lods inc (bad) enter inc add hlt and sub sub add nop push mov mov jg pop push clc in test mov aad inc scas pop push push pop mov lods pusha arpl mov jne jae fsubp mov test out in add addb push jl,pt cmp mov jl mov push je or sub das and cmp push orl xchg pop xchg ds js insb or push loope pop mov mov mov sub inc push xor cmp pusha cmp inc push enter inc push dec dec dec dec cltd mov in inc clc das mov popf inc out push pop mov mov movsl or and and loope inc mov iret dec ljmp rcl and lea push mov ret insb add adc in xor inc dec mov and sbb xchg and popa or cs pop push fistl enter push ds inc pop dec mov (bad) sub or mov sbb je and dec test add in sub pop mov jb scas sub aaa or push xchg sar je jmp adc daa in fisttp (bad) jne adc and rorb je add and out jne cmpb and jae rcl push scas mov add in inc mov lock inc loope (bad) dec dec out pop cmp nop call mov pop and sub or out and mov or push push push test test nop es mov jo push lret and cmp lods mov sub or pop inc xor mov lahf or cmp jb push xor rcrl or repz cmp sub add dec lret and cmc push int3 movsl mov ja and outsl fisttpl jb ds pop xchg sbb xor inc call lea pop cmp mov ret call mov sbb push mov xchg je xchg repnz cwtl sbb cmp add xlat lret movsb sbb std lcall outsl je cmp gs loopne pop dec add lret dec mov xor xchg xchg nop or or rcr or xchg inc mov sahf jbe and jo or sub push movsb lahf aas xchg push jmp fisubrl (bad) push nop data16 adc pop scas loopne mov or adc pushf push mov je xchg bswap xor in jb jb adc adc adc into jae push adc pushf pop adc rcrl add data16 mov mov mov push stc sub repz lods jl movsb cli and xchg in push push mov jmp push pop cwtl add add jb add push push ljmp push mov push push pop ret test mov add out sahf nop add pop jle add jp sbb jno lahf or pop test test sub (bad) cli pop fimull xchg inc fildl xchg js pop cmp dec sub mov lea dec in in stos cwtl rcll lea or in inc sbb adc pusha and sarb or je ret xchg mov in inc hlt jno push adc jns test cmpb lea jne ret inc lret setnp ss inc call mov imul aam or ss mov test push jmp add and call adc pop push insl arpl and pop rcl xor inc and xorl adc jbe ret and jmp sub (bad) cli or fwait subl sbb or push cmp insl xor adc mov pop lahf (bad) xlat mov sarb fbstp fist lret cld ss cmp stos xchg aas and mov mov push subl push xchg call fdivrl jmp cs xchg popa scas aaa insb call push lods mov in outsl add jl sbb dec adc push inc mov push push cs mov sbb jmp out sbb cmp subl push shr jb shll jno enter enter fwait loopne or clc push ret xchg sbb mov jge mov jmp push adc mov or jg clc lcall mov test scas sarb inc pop dec dec repnz xor adcb call dec add cmc add or iret xchg outsb mov dec gs push jg push inc (bad) sbb dec push mov lret aad and ss push jbe mov mov or push fcomps insl ret mov pop sub mov adc sbb mov cmp int add or insl jo cmpsl mov pop adc loope jo mov sbb movl sti jmp nop push push pop or cmp add adc sub clc mov sub sbb fucom add imul mov jne mov add bnd mov add jl jns jl mov punpckhdq push loope pop sti add aas leave jae out imul imul cmp imul imul and xchg cmp (bad) push loope mov push or out call imul add hlt adc pop insb lods or js insb cmpsb rcr cmp adc or adc push clc or incb or xchg and push lock adc adc mov push push push data16 shrb jo add enter ss fildl push aad movb push sahf ds push in jo cmp add hlt rorb daa clc jg sub push add push stc push scas dec push jnp xchg add push jno push test mov roll pusha cmp aas sbb xor and mov mov and test pusha lcall fistpll sbb fisubrl mov cmp xchg cmp xlat mov movsb lods push pop mov mov fs adc xchg pushf mov jnp mov cmp mov cmpsl (bad) mov pop mov dec leave add mov pop mov mov sahf ljmp fcmovnb jb ljmp push push jbe lods sarb out pop test mov fstpl call xchg or jl pop lods addr16 fsubrp cwtl mov mov cs fstl outsb sbb ret and imul xor aas bound scas sbb add mov addl adc push push loope push out adc sbb push popa sbb repnz imul out cmp data16 popaw leave add aaa push jg orl add mov xchg cwtl mov xchg (bad) aaa sbb inc adc cmp jg jl cmp inc test ja sub leave rolb xchg iret or les icebp data16 sub popw push inc inc es ss add mov in in mov or gs add or gs lcall sub push cmpl jne lods or adc fs dec les cmc pop or jno inc mov lods loopne xchg lods or pop orl jne xchg push xchg add int3 cmpsb enter and mov loop (bad) cmp add rorl jp and or out xor nop or lahf xor mov mov add cs push mov or mov xor (bad) jnp fsubs loope ja pop push es push cmpl arpl ja aam inc leave cmp jb call adc jmp imul push pushw fdiv xchg (bad) out stc scas xor sub rolb inc xor add add xor cmp push and jle push add add jbe inc mov dec mov bound pop cmpsl adc cmp xor mov or push xchg push popa sub cwtl pop andb (bad) mov add xchg dec cmp cwtl jno fnsave sub xor fcomip adc movzwl jne mov add not ret push mov or mov xchg sub fiadd xlat ret ds fsubrs cmp push add push ds test mov (bad) push mov xchg xchg loop mov je sub add xlat or sub mov and dec stos roll leave insb jo xchg bound test adc pop pop push cmpsl sbb jne mov lock in pop cmp mov push mov push std adc jmp test xor in popf test cmpl xchg lret aam (bad) xlat shl hlt sbb test shrb jge sahf add jb js cmc and mov out (bad) ja sbb sahf sahf push lods pop cs sahf call dec xchg in scas sub je inc sbb pop ljmp and xor stos xchg aas xor sub in insl and mov mov ret or int rcrl jb (bad) mov mov cmp mov sti mov add push or lcall inc pop add adc sbb pusha add push pop sbbb mov ds pop arpl add and cmp rorl in add in (bad) (bad) or or (bad) dec xor inc popf pop bound lret leave cmp clc daa push and popa mov sub arpl push dec jb xchg scas scas pop mov or inc (bad) mov outsl test loop adc mov cltd aam sbb adc push orl xor push lret inc jb push jg push sub add inc fdiv (bad) hlt aad xchg add cmpsb add fnstenv clc addb or xchg pop inc push sbb lea xor pop xchg mov cltd pop xchg pop orb jge adc lock lret stos stos call test rolb mov cmp push movb and test imul add dec pop lret call rcl pusha pop sbbb or sbb cmpl push sbb std jo xchg mov push sbb jnp push push aad jns insb jo add clc mov sub scas (bad) int3 add repz push push cmp cmp mov pop sbb lahf popa mov sub and in sbb xchg je add xchg or mov push pushf or daa push cld xchg add into add mov adc jb inc outsl or into shrb call ret push add and out add cs mov or hlt psubb cld xor cld pop mov xchg orb aad push sub jmp mov and add mov push jmp insb lock inc add imul dec add pop lock or inc xchg insl lret push dec add int mov add inc jle roll xchg or je cmp out xor (bad) lret pop std xor mov cmp jns cmp ss mov or push push cs add add jne pop pusha jmp add repz jbe or jo or dec or int ljmp pop jb add mov out inc jae push (bad) data16 (bad) movsl shlb scas and xor jb add sbb scas push mov inc out je xchg push ret cmp pushf add les push sub jno stc jb pop pop lock adc mov (bad) jne test cmp enter test sbb iret and and daa xor aaa mov xor int3 pop xlat add cwtl in cmp test add pop jb add lods dec cld lcall (bad) imul fidivl js stos pavgb xchg add stc jl stos rdtsc pop add lods and xchg pop or fadds lods sti pop sub inc repnz scas psubsw ljmp inc and insl push pop sbb cmpsl xchg out movsl sbb push jne mov mov movsl rorb test cmp add sbb dec inc sub fdivs xor movsl in daa call mov xor jmp push ljmp daa inc fdivp mov or mov xchg add push xor (bad) fmul and sub jns mov or push sbb adc out adc mov mov fadds fs sub xor and aaa mov aam cmp aad cmc add in and leave shll xchg sti mov add call mov mov push rorb mov (bad) icebp and cmp or fs lea xor jbe cmpsl fwait cmp adc or subl shrl push ficoml mov pop jo imul jno insb dec leave ja and push popa mov sub add push insb sbb popf ljmp adc dec ds mov xor lock shlb daa mov push jmp cmp (bad) ror fwait xor push or stos push stos sub push cmpsl cmp mov mov jne mov out lret inc cmp cld cwtl hlt je mov leave inc call out cmp jo mov lock pusha and std jmp add or sub fdecstp insb cmp dec sub fisubl push push (bad) push push bound psubusw add and (bad) dec addl mov jmp xor sbb mov jl (bad) ffreep xor add sarl into push mov sarb inc cs imul shll mov cmp test xor sub ds sbb xlat push push mov cmpsb and push fnsave jmp mov cmc jbe or fadds fldl (bad) inc add add lret sub and and push test sbb fstpt or jae scas loope frstor repz enter fs add adc jne dec dec test cld call inc or jge and sub mov ret sub xor stc dec rclb call mov out or and pusha fsubr xor adc or sbb scas mov mov or int3 add sub enter dec lods bound xchg lret (bad) call test mov xor js adc push sbb lock aaa mov int3 pop mov mov leave leave inc push popf mov jle mov test shlb jns dec imul ds push mov ror sbbb add dec fs adc pop rcl in xchg add add pusha aaa add xchg (bad) or jbe mov call andl aad mov rolb xor and cmp fmul and loopne sub push sub and fcom inc mov jae push and push and push fs or pop movsl xchg xor (bad) push jns fiadd pop adc fs rcl adcb push xor push mov daa add (bad) pushf mov sub call hlt push scas pusha test cmp add add je mov dec insl pop xchg push adc inc push js mov sub xchg mov pusha data16 push adc dec movsb cmc mov ljmp shrl push daa adc sbb call or push mov and push cmp out test fidivrl cmp jle mov sub sub loop lret ljmp imul iret loopne cmc adc sub push push push push inc dec rolb push pop and push add (bad) and add les inc out jnp dec jb mov xchg sub test (bad) lcall cmp lock dec pop movsl push inc rcrl push or mov or gs stos (bad) movaps cvtps2pi leave test pushf dec jo push push mov mov dec lock repz jl pop dec inc add xchg xchg out add cmp sub outsb rclb call dec dec test in pushf add xchg cmp gs sub lock jbe xchg cmp push push fbstp popa pushf xchg jo xchg xor les xor add test mov daa dec xchg into mov ja adc call cmp pusha setp into ret outsl and hlt enter pop hlt pop pop dec jl in nop add xchg addl icebp inc in dec sub sbb cld sub ret aad ret pop push and fcmovu and mov or push daa loopne lds sahf and scas shll aaa dec xchg xor xchg mov cmp lahf pop lret xchg and add add add test loopne jae sub out frstor movsb inc mov lea add xchg add insb sub stc or add add out sbb push fadds cs mov xor aas sbb ret ficomp clc inc cmp movsb xor xlat sbb shll pop mov cmpsl (bad) addr16 dec sub mov add lret lret mov jmp divl test sti and add jmp clc mov out call (bad) mov cld ret loopne ret sbb sbb cwtl add outsb push call mov add mov pop push pusha (bad) and xor xor cmp je gs aaa mov mov mov les add mov (bad) aas shlb (bad) std in stos sbbb pushf cmp lds fadds add inc cmpl nop inc mov inc pop pop push mov aad in out sti jne testb jae lock test call add fistpl fistl push dec xlat jmp mov mov push lret lret fsts pop add daa call lods aam fiadd inc mov cmp inc test sub lods sub fsts or popf imul movsl and (bad) mov and (bad) lds adc and adc and inc lret push mov push dec pop mov sti inc sub cmp loopne imul push push in mov fsts fs cmp jae int3 outsb pop push push cmp pushf mov lret xorl lods push cmpsl loop lret dec push div push in sbb push mov scas inc sub clc push push mov sbb imul aaa mov xchg lret lret mov sbb push mov or inc sub mov ja loopne mov and mov add sarl repz sub sbb mov es mov test repnz mov adc dec dec push sti clc adc adcl cmpsl imul inc pop inc and inc jecxz dec xor xor sbb xchg lea pop addl push xor (bad) in aas (bad) movsl repnz add rcr mov (bad) xor out popa or pop push out mov or test mov add ljmp test jle and and adc pop inc (bad) push jne shrl enter jbe test pop pop or adc fnstsw sbb ret arpl leave lret in cmpsl ds aam pop mov jne or aas ds xchg lods mov cs or or repz jne mulb call or test loopne jbe pushf xor test add dec mov jl rcrb add pop and push les or xchg cmp mov out mov cs dec in adc orb mov je add pop mov xchg in mov (bad) loopne adc pushf jns or pop sbb cmp dec xor or jb mov arpl cmp add cmp adc sub push push leave cmp cmp add adc rclb push or add mov cmp repz fcompl je inc or stos pop stos cmp cmp dec dec sbb mov cmpsb jmp push dec mov jmp xor insb lcall xlat xor dec enter stos xchg cmp ja cmp push inc testl rcll in mov xchg jnp test sub sub push jge inc sub push add add and or (bad) mov dec inc dec mov aas and pusha add push lea leave inc xor add cmp je jmp cmp stos in sub dec dec or or cmp add cmp xchg xor sub cmpsl std cmp sbb in sarb fs xchg push xor nop pop jne pop ret dec and xor adc add out adc xchg les lods cmp jno push imul adc (bad) je xchg or xchg xorb xorl es or aaa jmp cmp outsl adc lods sub inc sbb xor xchg cmp sub lea or call dec inc push adc icebp mov push repnz or push mov jne push sbb push inc cs add and sarl popf jo fs dec orl dec xchg push or xor and sub sbb or xor inc xor push loopne out daa jl adc inc dec ljmp les jmp sub mov jmp and pop shll jmp adc push push mov lock xorl xor ss in bound push pop adc mov mov rclb add inc xor jg add or or and call pop add push pushw rolb xor (bad) mov pop jmp in iret leave push add int3 push jmp jb inc push les push enter das aas push lea (bad) dec add in out mov cmp insl addl pushf add ds fsts sbb add fcompl aam into mov and inc loope and test mov sbb aam push dec sbb adc mov or push and mov and and in xor int3 add imul pop call add dec push inc mov loope shlb lcall adc pop ret (bad) out popa enter xchg leave aaa js je pop sub repz mov push push push push push push adc repz add addl mov int3 xlat cmp xor sub sub mov inc movsb xor mov xchg sbb shll pop aas dec lret cmp jo pop jecxz lcall lock xchg sub dec lahf mov pop dec inc or add push and nop or pop unpcklps sub jo add xchg sub add push shrl cmp jle sbbl mov imul call test sub rorb movsb outsl and ss sub imul inc push cmpsl add and mov mov pop mov pop pop movsd jl add call add jns pop mov rolb inc mov outsl mov addb je sub fbstp add pop jg xor sarb mov or sbb aas cmp and add push xchg aaa jae (bad) xor mov lea enter cltd jbe dec push adc (bad) sbb je dec test xchg mov mov mov enter and mov call and push jl add pop cmp push jmp xchg push cwtl jge or call xlat call xchg add out (bad) jmp pop jg cmp jbe ds add clc (bad) mov mov xchg push outsb lds cmp inc sbb stos (bad) jmp xchg inc js pushf mov seto push nopl dec cmc xchg pop clc xor das mov mov cs and insl mov dec pushf xchg daa inc sbb sub pop (bad) cli fwait xchg xchg sub jbe jnp mov mov pop jg enter add mov nop adc sbb push sti sbbb xchg xchg cld je mov and ffree lahf mov nop push sub loop loopne push cwtl fnstsw dec sbb sbb add cmp jp mov movsl sbb pop add mov mov pop jns pusha sbb push mov sub repnz add outsl xor cltd pop and outsl addl iret cmpsl repnz ja sub mov inc jae add enter movsb push out orl sbb jmp xorb mov dec xchg pop jo mov fisubr clc ret mov popa mov lods or pop pushf inc mov adc adc (bad) push inc or push mov sub or cmp or push sub sbb add icebp sub repnz xchg sbb pushf mov mov js incb std dec sbb and jle push imul sub mov or pop cmp add pop adc jl xchg dec xor add pusha add icebp jmp cmp push test in addl mov (bad) jp cwtl nop pop repz inc mov mov jge pop inc movsb (bad) test nop add push aam add push push add jo lods or mov fs call icebp add push and pushf ja and push out aad push sub pop cmp inc dec jmp xchg push xchg ja mov rcrb sbb adc movsl adc inc sub dec test adc push add jnp mov lods mov xchg push pop (bad) or xchg jo,pt inc sbb (bad) pushf dec das imul pop lcall jbe sahf pop mov je pop cs xlat roll lret sbbb xor and push jbe and fcomps fwait into sarb dec dec push push jl xorb call sbb enter push and pop push xchg pushf dec pusha push mov inc pop inc lock dec jp xor add xor test xchg add pop cmp cmpsl loop in or add scas xor ret sub push imul lods push xchg arpl repnz adc lahf or jnp rorb leave jmp mov jae xchg push sub push je (bad) rcl push and sub jb test ret call jmp adc add xchg hlt adc cmpsb mov push in xor cmp hlt xchg bound mov jne jmp xchg push push ss imul mov cmp mov or xchg or mov lds xchg push and testl clc ret mov jecxz fsubr sub adc lods or cwtl dec jl push sarb cmp sub sarl sbb jge push push ljmp ret mov pop (bad) and jmp leave jo out cmp lds leave out sub or pop push pushf in cmp xchg sbb cld push jns repnz add imul push popa push push inc add cmp and jb in or fsubl xchg lods cmp nop or inc push and and cmpb inc and add leave or test and cmp (bad) in leave sub pop mov jb push andl js mov and jns and add leave sbb add push sub cld push (bad) jb push leave (bad) push cwtl and push add add and (bad) lock and and inc ja add add rorb test push and add add sub jns add sbb sbb xor xchg mov pusha cmp and stc and repnz out pop not pop jo fldl shrb push add mov inc xchg or lcall adc leave xor jae push jmp lds inc jle or test and adc mov jge adc mov or je mov mov in jmp dec lock ret push cmpsb or sbb push mov add adc push sub test stc push (bad) fldenv add and repnz leave xor mov cltd rcll (bad) jo repz hlt (bad) push ds xor lahf mov jo std inc mov jle add add pop xor cwtl orl or clc cli adc popa movb dec (bad) xchg call inc push adc addr16 or jmp aam fldenv and fdecstp sub loope sub call inc adc mov push test mov inc and push enter cmp pop inc add adc lret outsl scas xchg push roll (bad) aad jg nop sahf cmpsb pusha jbe or jns jae jnp mov push sbbl pop jne cmp and enter rclb aaa movb repnz push mov add and sub cmp adc sbb pusha xor add mov xlat adcl into clc pop pusha les mov jns imulb mov mov lcall push xchg push sbb std ljmp jae int3 add sub push aam sub and imul push addl fistpll mov push push test push push cmp inc mov inc lea fs or xchg lret xchg mov loopne in dec ds jb inc in push mov mov xor add push mov mov add cmp xchg (bad) jb dec imulb xchg (bad) rcrb pushl loopne inc mov and (bad) jnp inc push pop cs sbb dec cmp mov or lods mov push and bound mov orl incb cmpsb movsb jb push jg test sbb fs pop mov add inc sub adc fild sbb dec xorl xchg xor inc xor mov add pushf xor aad pop rcrb int3 mov enter jnp push (bad) data16 adc divl jb outsb data16 in add testb fldenv jae jp mov jle mov cwtl mov add inc xchg repnz add jns aam cld xchg (bad) dec sbb adc in rolb in pop inc out push in add xchg xchg mov xor dec mov sbb push movsb sahf pusha push mov in xor push jnp sbb add dec cwtl mov xchg push or xchg sahf and ret mov js inc push adc mov pop dec add loope push sbbb sub in ret cmp sub icebp out add inc pusha test sub divl mov xchg add lock loope adc push lock adc xchg addb or nop mov sbb clc dec or sub xchg lret or subps (bad) cs outsb pop pop mov je sbb scas push jmp xchg xchg daa orl shl mov inc sbb or je mov or popa and mov push lret pushf jle jo and mov xor fdivs movsb sub outsb inc add push inc or pop insb pop ficompl push adc jb (bad) fidivl pop test dec sub gs movsl push es insl les out movsl push call or mov add stos push into add lcall and sbb cltd mov daa mov dec pop popa (bad) jl pop mov loope aam cmp mov xchg and inc aad mov jae call cwtl cmp cmc nop ss jo cwtl daa lcall popa add insl ljmp test push inc and cmp sbb mov and test hlt cmp mov and push mov lahf mov add jns and out rcll data16 mov test test imul mov lahf pusha movsb xor add pop pop fisttp leave sub jb (bad) push xor leave je in and push std add or push ffreep push repz mov sub jae or push popf ja mov pop jae inc xor hlt xchg pop daa lock rclb sahf adc fdivl jo mov pop add sbb lcall ffree add mov lret jnp sbb insb add add add cmpsb dec cltd sub push push jg dec mov push call or sub rorb sarb mov es cwtl pushf mov (bad) fcomi mov xor test lods pop mov push and dec mov pop sbb fs jne adc or ss jnp ret jp fisttp dec jns adc cmpb mov sbb xlat push (bad) push rcrb pop ret adc mov mov ret add xchg add cmp pushf mov inc fimul mov lods sub (bad) out call div push pop and imul cmp push pop clc jns pusha mov pxor pop pop lea sub ret dec frstor jg addb jecxz (bad) fsubl cmpsb mov inc dec mov or or sub aam in inc mov sub push pop mov add inc add cmp cmp sub faddl in in inc pushw fimull cmp lcall outsl lods or cmp fisub out sub jg and jae enter dec (bad) movsb popa into cli sbb push mov add ret ja dec hlt (bad) pop cs cmp daa cmp inc xchg push stos add push push or aad or js les pop stos push push hlt push add jecxz jbe push push inc sub sbb push outsb sbb jo bound add mov lock add lock aas rcr adc push push imul add bound ret fldenv mov ja dec mov push mov (bad) mov sbb mov and jb and sub leave adc sub sub and and leave add add cmp jb adc and xchg sbb inc push adc add dec (bad) or leave pop dec pop test xchg dec out add pop adc js outsl add scas nop push add sbb mov scas push int sub cmp xchg into sub fisubrl lret pop loope mov int3 out add or cmp sbb dec pop in xor and xor xor popa pop fs xor aad pusha ret int3 add test mov or add add and out push mov loope pop pop push stos dec jne lcall and jno push nop loop mov sbb or and cmp rclb mov cmp mov rol adc adc rolb insb scas lea movsb int3 inc mov or add mov and ja pop mov inc rcrb jns mull or and into movsl push and orl cmpsb sub nop addb lahf dec stc push movl mov nop jbe cmpsl (bad) div adc mov adc mov or mov cmp call addl sbb enter std mov sbb push mov roll loop fsubr jle sub mov pop push adc cmp cli inc jge xor pop enter (bad) jmp dec mov push inc cmp push adc push mov push jl xchg or repz push mov sbb scas (bad) js popa inc xor adc movsl test cmp flds inc adc push (bad) cmp push push jg dec sub roll jmp or cmp and testl pop pop pop (bad) xchg mov push push lcall icebp add (bad) sub pusha pop enter rorl bnd push popa push vmovapd lahf adc imul inc adc mov push mov xchg add stc jne push leave cmpsl loop jb mov (bad) hlt mov int3 push cmp enter mov (bad) fsts and jb jmp arpl inc mov enter adc movsl (bad) std inc movb lods movsl jg lods jecxz jecxz nop add adc test or rcll jo mov out cmp clc (bad) sbb mov insb outsl into adc (bad) cld add enter in or push test push pop repnz int3 std (bad) clc mov test fdivrs dec pop orb mov fbstp xor loop add call and push or dec xor das cli xchg repnz fwait add jne mov jmp jmp jns inc push xor adc sub stos mov push xchg adc fldl2e cwtl and je add lock xchg call xchg add in rorb fsubrl ret inc ss push lea loope ret pop orb or leave push imul movsb test push icebp cmp punpckhbw cmp arpl mov lds incl xor mov push or inc enter add pop (bad) rclb add movsb stc or rolb popa mov dec push int3 add lds push adc add or adc add inc pushf stos inc lahf xchg add cmc add ret jmp das jns (bad) incb leave inc jae mov (bad) jbe std push jle jg jno clc cmp stos push test (bad) in add xor jnp adc mov addb adc icebp jge xchg xor out fs sub xlat decb adc or sbb lahf sbb stc and add sbb test mov (bad) mov mov cmp jne xor or addr16 pop pop dec push loop add sbb cmp pop adc mov push and add and xchg andl ret jmp rcl test in jo cmp cmp fs adc cmp ret xor es push out push add pop jg mov ror arpl mov nop sbb nop (bad) ja sti inc imul mov jmp sbb mov aas js ret cli in popa loopne add sbb enter lret mov dec sarl add sbb mov adc mov test cmpsl xchg inc mov (bad) movsb mov push test pop sbb pop add out sti push es test mov sti in and mov adc inc arpl push addl call loopne or jp mov and incl nop pop mov test aas add arpl push cmp sbb divl sub mov jo xor stos jecxz mov loopne dec enter imul jns sub add mov inc push ds cmp aas add push push call xchg pop sbb in lret inc or (bad) mov les insb inc and or mov aas test loop movsl mov add dec mov sub inc daa or xor aas pop sub pop adc fbld adc xchg (bad) dec sub aam xchg pusha jae data16 and int insb scas in adc sub mov lock lods pop movsl mov in adc xchg out sub aaa push sub call sbb push inc stos add jge cmp cwtl clc lahf cli clc mov pop add add xor shr adc jne negb push and cmc push lret or or push xchg pop and lret sbb in lods in jle jg mov mov lods lods lods lods mov mov mov mov push stos or rcrl or call push xlat pop and in cmp cmp mov pop add fdivrs xchg mov cmp push pop xlat adc xchg dec outsl or in cld mulb add repnz test call nop inc fdiv mov mov fs sub mov sub js push push mov push enter and mov (bad) cmpsb push pop andb mov in leave push faddl push jae mov sub mov or mov push add add or mov sbb mov xchg pop or icebp adc rol loopne jecxz dec add mov inc adc pop cli or jle or jl cmp scas in jbe add outsb fdivr outsb jl inc mov pop movsb or loopne jbe loopne push inc and call and les mov cmp xchg enter or fs cmp int lods xchg lock pop add mov and (bad) in xor in js or nop and add mov and mov xor adc aaa test cmp and js arpl add lret test popa push cwtl fbld push pop (bad) add cmp jp push mov add or clc scas add add scas xchg pop fcoms pop inc nop cmp lods pop fmuls bound loope mov dec mov sbb movsl mov pop bound std leave shlb and fsubr adc or das dec dec mov fisttpl addr16 and push mov dec cmp sbbl lock mov ja jge repz xchg hlt pushf add adc and shlb xorb xchg movsl mov mov loope add ret xchg nop lds enter adc add add into aas cwtl repnz lock pop or and inc mov cli add mov inc add cmp sub add fwait div aas lods push or inc or dec push push data16 adc or sub adc jg pop js mov and adc into dec mov call pop cli mov mov lcall jle pushf loopne mov gs add icebp leave sbbl add xchg push pop mov nop inc jb add jmp out jg inc push leave adc pop xchg loopne cwtl dec fmuls out sub jbe into aam cmp xor sub call xor push push inc and and into fstps movsb or into xchg cwtl cmp push lea movhps cmpsl jo inc cld and dec inc or and mov imul into pop rcll insl push xchg je fs in out rcrb add mov (bad) lock mov adc add test ds insb call test cmp cwtl iret pop adc call cmp daa aas je add dec adc mov add xor push icebp push jo sub add ja push cmp mov inc jl add push lds repnz push mov ds enter lock js jp inc lcall addl push adcl fcoms push mov adc xor push and cmpb adc add and adc or add pushf add inc fldl push pop cmp enter popl add ret sub pop xchg add in dec add sub add mov jge add fcomp mov xchg push push aas xchg and dec nop and push pop or add test or add (bad) cmp addr16 sbb dec lods movsb pop sbb jae pop xchg adc sub and jg bound js rolb or xchg lcall movsb in xchg or cwtl and xchg xchg jge jmp jno push in pop test in clc add xchg jne pusha or pop js jmp jb call jno and dec movsl (bad) rclb inc mov ds mov and icebp push or push mov cwtl xchg push mov jl dec scas xchg sbb lods add adc and or and sub rolb (bad) adc add inc add ds mov xchg dec add mov jmp or sbb inc push mov fisubl cmp lcall test std push cmp add pop or add mov pop mov adcl test push xor xor jmp imulb imul jmp stc sub cmp mov xor xor call movsb sub sub aaa push mov push push and js and jl test cmp and ljmp add add enter popa sub pop in or fist inc enter inc lea addb leave push sub sbbl dec jns pop push imul pop repz push jmp push and inc pop push mov jb adc push ja or inc sahf mov push add xor pop push aaa or adc and subb (bad) pop js or xchg ficoml js add (bad) (bad) gs mov repnz call mov loope movsb (bad) or bound push jecxz ftst adc or fcoml imul mov (bad) (bad) loopne test xchg or out add mov int inc and sub adc dec and push ficomp pusha andb add lods movsl or jecxz adc sbb arpl and mov leave or and cli loop leave and xchg in gs push or jae stc adc push cld push ret sahf and dec daa pop lret pop jl into es add loop int3 xchg dec stos adc int3 movsl add test ds jne inc push arpl pop (bad) push adc and lods pop fwait out bnd addb loop lret call (bad) inc dec (bad) xor movhps pop pop pop add nop adc loope push pop add add fwait xchg lret push push push mov push (bad) flds loope xor sub pop imul pop mov loope push push mov nop xor je cmp dec push fs adc ds sbb adc xchg dec mov cmpsb movsl add aaa push repnz push outsl xchg dec aad cmpsb add repz mov mov cmp mov pusha add cmp and add pushf pop jg mov in fs sahf mov mov xchg std add jl out dec imul (bad) fadd mov cmp lods xchg pushf sub jno int3 mov add adc mov inc dec add adc in aaa ficoml lea add mov pop mov movsl sahf fildll add push daa into or mov data16 test in and push or adc jno cmp pop jecxz je mov loope pop push dec adc xchg xchg arpl pop lds lret or insl in jmp fdivr add xchg xor or and mov cmpb icebp sbb ret and iret call adc jnp stos xchg dec sarl and jae mov dec scas cmp leave add lea xchg dec inc push xor aas fstl sbbl mov mov (bad) mov mov xchg aad add mov mov mov jns ficomp inc dec xor adc xor dec pop sbb cmp dec inc inc es dec and sub inc in mov rorb repz jmp addr16 push cmp jl xchg sti insb dec push jns push or jbe mov cmp sub xor int3 add and jl shll xchg outsb sbb dec mov inc or jnp mov dec and rolb ret xchg pop dec sarl lods es mov push mov pusha loop lods cmp dec loopne repnz ret pop and pop rcr adc pop cmp movb nop dec sbb es loope push lods dec pop cs xlat push lret push sub push cmp into sub (bad) and leave repz ret add mov (bad) cmp mov mov (bad) adc xlat mov mov call fcmove and jl push pop inc repnz jns punpckhbw jb and pop mov push insb push sbb xor loopne std push int3 aas int dec fstl sbb into (bad) xor or add xchg movsb xlat orb xchg insb scas dec inc add mov pop add and stc dec (bad) flds push mov mov mov and mov push fsts xor inc fnstcw (bad) movsb push cmpsb fmuls mov inc push dec neg rorb lcall push push and and dec enter aam xor fldl add or push pop or stos bound jmp lods cmp pop out mov imul pop add sub mov lcall push push or imul popa lcall stc pop adc add test nop add adc cltd xchg adc int3 fisttp xchg add sub out jl call sbb xchg xchg addr16 dec xchg out push enter xor pop cmp jb fs xor pop insl mov xchg fbld andb jg movsb imul jge add call xchg addr16 push and and dec dec lcall cmp sbb mov cmp push add add inc mov sbb adc mov push push lods jb rolb push js push jge inc pop cmp aam pop aam cwtl inc push nop push sbbl jl or mov and push fs push pop sub and cmp add pop repnz pop jne pop push push std jno sahf jno cld push incl cmp inc push sti je adc jno bound adc je ss js roll (bad) shlb xchg loope mov sti add outsl int3 in clc mov popl inc jmp jb and outsb mov add addb or sti mov je (bad) sti or test sub iret xchg xchg jge int gs test jb xchg (bad) xor mov sti shrb mov mov ja addr16 add cmp inc push cmp adc mov pop fcmove mov xor adc dec jmp sbb mov pop rcrb flds sahf xchg xchg loopne push cmpl orl cmp iret sahf (bad) test push xchg push rcr je push mov ss xlat ss sub sbbl xchg dec xchg adc add jae inc or rorl pop adc roll in sbb cmpb adc mov mov jne pop fbstp push clc jl pop lret in push loop push call out (bad) rclb sarl adc lock (bad) sub dec pop sub (bad) dec or or sub shrl sub test clc out add jmp mov xor sbb add add je mov pop aas cmp push mov imul xchg pushl add add cmp push jl lock add dec dec push mov dec sub loope and or push sub adc cmpb pop adc mov mov adc fsubl xchg popf push inc cmp test xor jmp aaa addb int push cmp mov xchg scas push xchg mov cmp divl push sbb pop pop sub dec add ror push xor mov je add and je sti add sbb push mov adc add sub push adc mov getsec jae cmpsb mov enter daa in test dec (bad) push hlt add xchg les cmc movsl cltd dec aam cmp add mov push lidtl cmp fldt cld pushf and xchg cs outsb data16 stc jne loope adc out mov jl xchg jmp mov inc xchg rcr or inc xchg push ds enter mov cli dec push inc aas pop push mov and dec xor je aaa add movsb push add (bad) stc xor fistp lcall xchg add jns bound gs or mov mov sbb xor jo mov (bad) repz xor and xchg sahf xor in jmp push mov dec or jnp add or adcb sub push push push sarb pop cvttps2pi mov push add (bad) nop out inc fwait sbb rclb sub mov je loopnew stos mov pushf pop xor or (bad) jae jae cmp xor dec hlt fnsave leave nopl sub sub xchg dec and (bad) addl inc icebp popa mov cmp mov call dec dec xlat aam fdivrl pushf mov xchg cmp movsb sbb mov mov push mov add bnd inc add xor push or xor cmp popf idiv dec sbb cmp mov cmpsb push loopne sbb push int xor jo adc add (bad) inc pusha aaa inc pop leave pop dec loopne xchg push xchg pop dec jae add in cmp sbb clc cli push decb int3 cmp or jge add push adc sub into out jl mov hlt and adc jae test test in je movsb sbb mov sbbb je les es push ror jnp xchg xchg pop cmp das dec add and test pop mov flds mov add add add jo cmp fldt (bad) rcll pop aam (bad) push iret dec jae push (bad) cmp mov add popa jne adc shr sub ret add add inc push xor insb push inc add cmc and and sub outsl mov lea mov dec lret fsubl jae inc jle bound data16 and add push pusha mov jle data16 (bad) push mov and jo pop adc adc lds adc loope xchg adc add cmp push mov jle lcall in enter push push or sbb rorl push pop fisttp push sbb mov pushw jne inc sub jno stos jg lret cli dec adc add imul ds pusha pusha adc xchg nop or xchg inc or sub aas std cmpsl jge and mov mov xor sub fs add test mov fldt call or ret (bad) icebp std (bad) (bad) faddp push add and dec popf add sub mov inc loope roll sbb sbb adc jg ret or cmp cmp ret push decb inc es divl leave xlat add or xchg mov cmp mov push sub mov fdivs pop push rolb outsb push adc jno lea add push sbb push sbb icebp mov sbb mov sub inc jns rorl fwait test sbb mov mov xchg or mov decb mov jmp mov add jae imul lea and jl lea out decb xor shlb xchg or sub adc or and xor xor pop (bad) cmpsl push mov (bad) jp pushl pop dec add gs add test addb xchg add mov or jmp loopne jne test mov and adc push mov inc jmp inc mov or xchg mov xor push mov dec ss sub pop or fisubr inc popa pusha mov adc pop sub lahf mov or add cltd inc mov jnp push jp loope mov cmp mov xor jle and cld ja daa push cmpsb mov inc cld mov test pusha std xor lea fild adc cmc in mov push add adc xchg cmp jno add in push xchg pop les xor jle lods cli add mov jo (bad) cmc jl sbb cmp adc cmp movsb dec imul andl in pop mov pop adc loope clc pop push or rcrb push addr16 scas mov adc inc cmp pop (bad) xor sti dec adc pop lds leave add adc imul call add jle xchg sbb cwtl inc cmp sahf sarl and sub adc mov rorl test test ljmp ja ss push aad push insb dec push loopne mov test mov rol add mov iret and fsin pusha test nop fucomi pop test mov dec shlb inc clc push xlat and rcrl xchg push add fcoms add repz mov sub fist pushf insl (bad) mov jne or loope lods push push sbb adc aad imul daa movsb aas xchg pop mov add ljmp mov sub mov adc add fcompl mov dec sub lahf add and dec xchg push mov pop push push jno call mov in ret stc loopne or mov jo das add push pop inc pop cmp pushf scas mov into pop cltd or cmpsb imul inc cmp push inc adc push outsl mov pushf cmp mov (bad) xor inc or xchg loop sbb repz add dec sub dec adc dec inc push add js mov stc and js mov gs push dec push scas push lret add sbb mov js mov add dec mov xchg (bad) mov add xor xchg ss call or mov push lret and and inc adc sub rolw das inc jbe cmp and stos daa (bad) xorl jl loop sbb lock test inc (bad) mov push sub pusha sbb aas sbb pusha cmp push rcrb adc enter adcl testl mov xchg popa mov loopne jbe add sub adc pop jmp cs push and mov push pushf jo add add push inc test jl mov insb loope stc mov cmp test jmp rol cli add and scas xchg int3 lea sub add (bad) (bad) xor add pop ror xchg jp call xor cmp xor sti or adc sub xchg loope mov subl fwait and lea or sub and aam push push pop loopne mov and add dec mov xchg loopne pushf and lea pusha xor xlat lea mov mov das fwait sti (bad) or imul ror (bad) std dec lea jge jmpw xchg inc movsb test xchg sbb cmpsl pop roll adc sub and mov movzwl add (bad) xor rcl fcmovu loop fs sbb out push int3 hlt movb fidiv ljmp lret push es push movsb adc test xchg outsl dec int3 dec cld decb xor or push test mov jmp (bad) adc je jecxz adc xchg cmpb inc clc push mov xchg addb (bad) push mov notl je cmp inc loope push pop jmp jecxz mov add je mov push negl or push add jmp es lea pushf jo and pop into out fucomp jo and (bad) inc or out daa sub popa jo push lods add stos fs inc xor sub mov or mov xlat (bad) or mov jo push subl jbe xor push in jne and subb movsl mov inc adc or pop push and mov sub cld push call pop insl mov add add fwait push adc xchg dec not movsb repz push call sbb imul mov cltd push int3 jg into mov sahf mov cmpl mov (bad) push (bad) xor sbb and and aas sub cs jmp jae or or sub push mov imul sub push out mov inc mov in gs add pop cs add sbb sbb cs adc and sub sti ljmp pop enter or cwtl (bad) je dec and mov test push push and inc and sub dec add mov sub mov dec and adc cwtl xchg xor sbb fbstp xor das movsb mov cmp jno,pt mov mov ss jo and cmp jnp addb xor jno sbb mov pop or add xor xchg mov pushl mov jbe int mov dec or jl mov mov add imul xor and sbb pop xor imul pop sbb sbb jbe outsl jb leave insb adc dec push dec xor movsl mov cltd xor pushf xlat mov incb mov fdivrs lret and jnp pop xor inc push or dec popa fidivrl dec or mov pop push mov sub lock push pop aam or insb xor push mov in or hlt pop mov in and xor sbb pop cmpsb jns lods cltd (bad) inc add test sbb add sarb mov (bad) int cmp inc cs scas xor xor ds add and add in mov mov or dec lea sub sahf cmp sbb test pop sub xor push pop add cmpsb dec push jl xor push sbb pop enter (bad) jge push inc frstor pop mov cmp or fbstp in and incl mov and jns cli push scas mov push lock mov jb xchg lods js mov pop (bad) lods das inc mov inc adc das mov xchg paddq add les inc pushf add dec outsl dec add xchg cmp lods imul jne or fs stc add mov xchg dec sub push pop pop popf jbe sub and call dec xor pop mov cmp jne enter or lahf add lea push xchg mov lret test es test sbb pop push adc lock xor add push or test sub sahf (bad) push inc cli sub movsb add or ljmp dec repnz cmp add mov ss sbb out sti mov jge cmpl jl outsb call cmp jge and jp sbb daa pop aam add xchg push movb loop mov push jo ljmp mov jle and pop fldcw scas pop pop notb movsl gs push jmp mov lds js cmp jecxz insb mov xor mov testl test sub (bad) je call adc inc ret add mov add leave adc mov push mov (bad) push push ljmp adc aas lret call pop push sarl pop imul dec and dec jbe pop sbb pop cmc inc inc mov dec mov test fs and (bad) (bad) mov mov xor iret adc xchg pop mov insb lret rcr rcr xor and xor cmp mov inc sahf cmp push fdivr adc push imul bound mov inc xorb scas dec leave icebp jne dec xor adc stos mov mov add xor xor inc cmp xchg and push repnz aam push xchg adc jle dec or sub add adc (bad) rclb les sbb into cmp fldcw in mov loopne nop mov adc mov xchg orl adc outsb add dec js js inc das and dec cmpsb inc cwtl push lahf into fistp insb call jo adc jne mov pop aaa mov pop mov ret cmp dec lcall add clc or adc push adc dec ja push aad lds dec cmc lock fs aaa xchg inc sub push or sub jl or sbb insb and inc or mov push sti cmpsb push lea mov int3 fs pushf clc xor aas push xchg xchg add sub fcoml jl stos push add adc aam (bad) outsl push (bad) out sub outsb je push add sbb imul loopne add mov mov cwtl negl jl pop xor pop cmp xchg lock into push stc xor and or sbb add sbb adc sbb imul cmp dec test dec ljmp cmp pop inc loop arpl and mov adc dec fwait pop rclb loopne add insl test je or sbb js sub cmp test push sub test adc add jns inc sub inc cmp adc and xor mov pop jecxz sbb dec scas xor mov jle cmpsb xchg dec sbb or xchg mov push add or xchg add xchg rolb movsb push push mov loop add aam mov add rclb insb push dec add add icebp add mov out add add cmp arpl pop out shrl and push mov xor and add shr inc add movzwl push dec popa sbb ficom xor jg ret mov cmp or arpl (bad) insb cmp jb cmp xchg scas sub pop add adc or imul test cmpsl lock fs xchg movsb mov arpl jne mov mov mov mov (bad) adc test dec pop xor pop in rorb lahf push jbe andl inc mov mov aad cmpsb xor sarl test lock cmp mov out push adc sbb xchg ret out movsl and in loop lret push rcr or or push loopne bound loope pop inc push (bad) pop xchg adc dec pop test and add sbb xor lods jmp adc xchg mov mov es out lcall jmp add mov cmp inc dec outsb push inc lea push jbe push lea or dec mov sbb mov adc out push pop jecxz inc add aas adc clc jb pop ds xchg (bad) mov push in mov and or lock data16 aaa and (bad) data16 out xor push adc dec test and and pop jae or jg push and mov xor add das pop inc in je mov (bad) xchg hlt pop ret fisttp push sbbl push sub jmp push pusha js fimull out push fs fdivrs mov xorl sub push cmp sahf (bad) rolb mov add mov iret cmp insl pop dec pop push mov cli call or sub jnp (bad) lcall sbb mov insb je jg inc inc lock addl sbbl test aas and scas mov mov test orl out (bad) stos xchg les adc push adcl inc ja adc push stc xchg mov adc mov or mov outsb mov add test ret stc (bad) inc dec pop mov mov loope and addb rcll or loope int3 jle cmp push movsb mov mov cld adc pop enter stc sti popf les xor adc sbb inc aam add sbb sbb mov add outsl and ficoml insb and sub shrb movsb xchg fwait imul jae add call cmp mov pop jp,pt mov ret adc addr16 and pop mov add leave adc arpl loope fs call scas mov jmp loopne xchg add cmp mov sti jge imul push mov mov push sub cltd adc loopne in sub loopne ret std out and rcrl ret lods fsubp sub push mov cmp jb rolb or mov mov cli xorl fidivl mov push jnp ret add (bad) mov in push xchg in adc (bad) cwtl pop mov ss fisubrl cmp lds cmp or decb add sub rcrb cli sub imul pop inc sahf test sub scas hlt lods sbb inc sub push js call push loope xchg cwtl fimull cmp lea daa fcoml push push cmc mov les faddl jl push mov popl mov sti mov fdivs lods jmp inc loop jmp inc rorb lahf add insl xchg or dec pusha sahf inc and xchg stos iret and mov cmp mov adc and fbld cmc dec dec inc push repnz rorb notb repnz fistp fistp and add adcb rolb out dec (bad) repz pushf dec sbb inc je mov leave inc add pop mov pop inc and mov out aas jnp test movl test popa int3 cmpb or popa or sub mov sub std sub loopne lock rcr add xor and leave and add movsb dec push cmp inc fdivl lret xchg inc and in add and loope pop hlt cmc pop inc sbb mov sub aas les mov bound add mov or xor cmp adc mov inc fadds dec mov pop sub arpl and mov push xor rclb sarb lods mov pushf dec and adc inc mov or (bad) fwait inc imul lods fcmovnb inc add push adc cmpsb int jb pop pmuludq xchg pop es sbb sub mov add xchg mov jb pop push stc (bad) sbb and in aam or xchg rolb inc mov mov test stos xor mov cmp lock cmc mov cmpsb dec and push xor or xchg mov sub xchg mov ret jne aam or mov rolb divb sbb aas cmp jle cmp mov jo mov or imul or or sbb mov dec mov push mov add mov pop rcrb add adc pop ret pop sbb rorb mov jo xor pop adc dec add ds mov shll sbb xchg xchg mov pop movsl movsb adc adc or jo lea sbbb fidivr or mov inc loopne je loopne adc imulb pop or enter push xchg aaa push pushf ret inc jne push cwtl add sub sbb mov fs push jb icebp nop addl (bad) mov inc xchg mov jle ret cmp stc mov push jmp push or dec in call scas dec add push sbb add pop in rdmsr (bad) jae call leave mov movsb add inc sbb jbe dec adc jo mov dec mov mov xchg push fsub nop push sbb dec sub and (bad) ret mov xor cs mov test pop and xor loopne lods add xchg xor push mov lods (bad) sti fdivrl push int3 ficompl lcall sarb mov xchg push add add (bad) in add or dec mov xlat or mov sbb lret mov std xchg sub mov aas adc outsb inc pop inc or cmp ss xor punpckhdq adc lret mov ds add xchg sbb adc pop loopne adc pop aam test lahf lea loopne leave ret jns insl dec xor push jo (bad) xor add (bad) xchg mov fmull adc push cli xor pop dec incb or loopne stc mov sub pop mov sbb pop xchg sub push cmp push and pop xor push leave mov push dec jns and push push daa js mov outsl push jae mov push imul lret je or pop add inc cltd clc jnp (bad) (bad) pop test adc mov push rorl jo push adc add or fisttp mov loope ds dec hlt aas dec outsl sbb int3 rcr pop sub xchg inc popf pop lret inc in mov push push je data16 loop mov mov dec mov and or add inc adc mov and fimul xchg inc add dec or inc sbb xor fstl pop jl push ret push loopne mov fwait loopne call cwtl push popf rorl and fcomps push adc cmp add outsb jne mov scas adc adc outsl xchg mov cmp jmp clc je inc push lea push push inc pcmpgtw test cld pop xor cmpb cmp or clc or or sub jmp pop xor push sub (bad) push xor loopne incb pop sub subb pop xor je out mov or pop pop cmp add push lcall test sub pusha jb cmpsl sub mov mov (bad) or out movl or pop mov adc cltd xchg cs add (bad) ljmp xchg andb outsl cli leave addl jo add sub aam mov aaa call push or mov jge ss test jns sbb add inc push or push call outsl ljmp xchg xchg xor inc xchg or fcomps out scas mov stc xchg cmp mov push mov and cmp pop aad and dec add or movsb and aam lahf and xor outsb aas xchg test add lret xchg fs jns and push mov mov cmp call loopne test (bad) rcll xor outsl or xor cmp pop pop mov scas inc lea cmpb or add fcomp adc stos push sbbl sub cld xchg cmp cmp jbe and jo cmp popa inc mov add mov and hlt stos push negl inc sbb sbb mov arpl js enter pop or bound xchg adc outsb ret and sbb movsb or mov and cltd pop test jg and es xchg inc pop add push and dec test mov mov cmp sahf push call mov imul test mov movb push adc adc mov push push mov and mull and pushl mov mov rolb mov pop pop sbb repz rolb jns test fisttpl cwtl call sbb push push icebp jo or mov loopne popa sahf dec loope fdivrs jne pop call in xor xor movsb push cli adc js add push or cmc add cwtl or lea mov add push fnstenv push aaa sahf and xchg mov or fisttpll push shr xchg out repnz imul clc mov mov pop push (bad) je movsb lods stc inc or test xchg dec cmp push cmp dec mov jp push add and mov dec jnp or and or push push sub imul cli or mov mov lods mov mov lahf cmpb sbb testb xchg sub jle pop xchg pop adc xchg les cmp je fdivrs or jl gs rorb adc je pop lea mov andl jl daa or out lcall inc js inc das inc loopne,pt cmpsb movsb orl gs mov ficomp jmp (bad) pop xchg add imul add or imul sbb sub call pushf leave (bad) ljmp jnp mov sub call or adc sbb dec imul dec les aad dec cs pop push cmc inc pushf add jge push rolb rcrb js int3 (bad) add sub dec movl xor jl push cmp fsubr lea fdivrs insb sub dec lock mov jnp jmp add mov dec sbb cmp push outsb adc jae push ja inc add outsl and adc or push jne nop sub add add and cmp jle mov jmp addr16 pop fisttpl test dec mov imul dec and pop mov jbe outsl dec adc jmp sti jno and push mov int sub dec push xor sbb sti pop ljmp push adc inc adc push add add adc adc add inc sub add jns loop adc ja fistpll pop adc add or cmp jne cmp xchg inc pusha adc add jo inc cmp xor pop adc pop ror mov je pcmpeqw mov inc pop cmp dec or adc int call dec clc js adc ja lret lds pop (bad) xor jbe fdivs int3 add add bound gs fsubrp xor mov xchg in fdiv adc repnz jns sar call push subb dec mov hlt inc ss pop pushf lret add mov cmp sbb xchg sbb jae call popa push movsl lock cmovge cmp xchg mov mov das adc movsl cmpsl hlt xchg bound insl je and je inc loop js push mov and jns cmpl inc xadd test cmp rcll mov shlb sub popa cmp xor in loopne shrb push add test rolb (bad) lock rcrb mov mov add adc cmpl add add rclb and sarb cmp je inc rcrb loopne lea adc pusha add push ffreep aas lret jbe or dec test inc or inc push call push test test test push movsl sbb push mov (bad) xor sub int3 add xchg add cmp jb xor jge aam sub imul adc jmp mov or adc mov inc cld sbb cmp je push (bad) xchg rcrl into jne mov (bad) std (bad) fcoml je jmp inc add outsb jne mov enter lods ss push push popa push pop cli dec shrb mov movsl aad xor hlt add sub and jno js or adc cmp sbbb sbb add test rclb inc roll mov cmpsb xor aam pop scas mov adc stos in sti xor inc lods jae inc inc je pusha sub xchg xchg mov in push popa aad xor push iret imul xor mov push imul loope sbb adc cmp push push cmc lea sub (bad) inc ret mov adc mov mov pop push or mov push pop mulb or rep pop imul loopne or fildl mov or lret xor dec ss xor mov push add mov sbb ret xchg inc pusha outsl push pop mov shrl sub push cld call or icebp sbbl sub adc aas jne adc lock add sar pop pop mov and push add push push fs or movsb mov insl sbb jb dec add adcl jg mov mov test sub inc adcl mov jb or in pop fisubrl inc adc or cli aam nop loop cmp push sub orb fs xor ljmp int3 dec pusha mov sub sub or cmp xor mov pop push scas or mov in and mov jmp mov pop enter cmp xchg pusha enter pop mov mov fcompl mov sub push sbb adc or fsubrs push push push pusha or and in xor call push cmpsb adc bound xor jl aas movsl repnz add dec mov leave jae xor jae mov mov xchg stos test arpl push adc idivb clc imul push sbb andb dec (bad) mov add fldenv fdivs dec and ja push add add call add inc test push popf popf cmp push push or inc jl test mov cmp dec pop call jmp sub js dec pushf sbb pop xor inc adc push insb xchg or std shrl add cltd mov lock push add cmc sbb xchg push (bad) popa scas and pop loope shrl mov jne je popf (bad) inc xchg pop add xor ret sub jo (bad) fild (bad) jg std jne cmpl jne mov sti jg pop pusha test setg cmp mov mov dec and outsb adc pop cmp cmp lcall and mov pop or cmpl jmp cli mov fcompl movb mov jbe or or mov fcmovnbe inc or scas imul xor call push lock daa pop sub adcl js ret add es or call push jns inc cld inc mov test cmp enter mov std or add iret fildll add push mov add stc cmp jg test sub (bad) mov outsl push cs sti or jl mull adc push popl jmp outsb rolb sarb mov int3 inc or jle add nop and inc addl add scas fstps mov add sbb or and pop or inc lods scas mov nop jno mov push add fisubl mov mov sub pop iret stos or and cmp push sub add test push lea ficom adc pop cmpsb push jmp lods into bound roll clc loopne sbb bound push (bad) and gs push dec fmull xor sbbb inc push push int pop movsl test sub leave mov add pop (bad) pop js pop push (bad) sbb lret xchg repnz xor and add jne and and mov jl mov insb adc dec mov lea lea in lods mov std jge push insb cmp idiv ret jne xor mov jb and add clc push cmp pop or jo lcall lea cltd imul idiv add adc pop xchg adc pop iret pop push xor mov sbb xlat shlb (bad) jns (bad) lret popa es and mov cmovo sub push movsl jcxz imul iret js or outsb test and cmp aam movsl pop out loopne and sahf inc mov cmpb adc mov inc pop addl roll jne in cltd dec fist inc pusha or (bad) leave and pop and pop adc push push pop add cli cmp jl das add or aaa ffreep lea add mov shufps add push pop loopne fst push push and daa inc adc and bound and pop enter adc je dec adc pushfw sbb in sbbb imul jo dec inc sub fs dec or adc push lods add mov or loope iret mov push jmp cmp add and jbe insl popa add clc mov jne mov mov adc jl and cld add call rolb dec or dec mov mov jns mov inc ja je push repnz push clc sub mov mov dec lcall mov jecxz sbb iret mov jae push jns test mov add add in sbb pushl daa jno sub test or fcomps addr16 je or xchg lret jl sub icebp push punpckhbw test ret or xchg or mov mov enter sub cmp aad push sarb lret push pop pop mov mov dec add mov mov rcrb hlt das mov ss cmovne ljmp inc imul mov sbb int adc fwait or call pushf or or int3 xchg adc leave call xchg cmpl mov leave enter add or cs rcr invlpg nop mov xor cmp sbbl sub adc inc add dec icebp pushf and and fisttpll call sarb hlt cmc inc in or add or ja or lods sub mov insb cmc jp sbbb sbb test sbb xchg xchg cwtl pushf dec and movsb add sahf push mov push push push pop pop fidivrl repz mov push mov repz jo test mov add push push xor cmp cmp ret icebp (bad) decl sbb add sbb pop inc fcoml cmpsb inc call cli aam insb push cmp jmp add inc les iret roll add test es adc inc packuswb fs repz and sub iret leave repz xor gs cmp aaa addr16 mov fstps pusha xchg (bad) repz dec lock and cmp mov sub ja lods int mov xchg xchg xchg mov fs xchg (bad) shlb inc adc popa mov xor sbb push dec xchg push lock cmp xchg cmp arpl addr16 add call in call cmp pop inc sub inc mov fcoms mov xor iret jbe in lds push outsb inc mov pop mov cmpsl mov int3 loope push add movb lods mov cli cmp insl jg mov pusha call insl mov push out push insb nop imul cmp lea mov call orl addl sbb in pop sbb in decb sbb int3 sub pusha repnz repz lret xchg in inc sub imul test iret fs or mov mov fldcw cwtl mov fdivrl test xchg sbb dec frstor jg dec pop pop call cmpb call fimul cmpsl xchg pop pop push pop jmp xor inc adc lcall fwait or cmp add inc or mov sub sti pop in push outsl adc pop test rolb aam mov dec dec dec pop mov add clc inc push ret cltd idivl in or rorb mov add adc sbb subb js and out ret mov mov imul mov mov mov cmp inc cmp sti sarb add push aam dec in sub push jecxz mov push mov insl xchg push jne (bad) xor cmp fsubs outsl xchg andl inc aas ljmp push pop enter or mov mov mov and push or add test sub cmp imul inc push gs inc or push jno add or inc cmp ds xchg cmc xchg push (bad) rcrb dec loope popa cmp pop and pusha add jbe ret cmp nop and mov mov mov mov jnp sub subl loope push jl jg fstpt pop dec add mov imul push add bndldx addl xor (bad) movsl jge adc push inc jp push das sbb mov das mov nop xchg and xor movsb out push popa add push fisttpll xor outsb jl pop bswap sbb or add xchg sub or movsb xor xor cmp add pop test dec cmpsb pusha aas inc mov mov clc or push add jo (bad) orps sub add cmp push loopne mov cmp push or cmc popa mov in push lcall xor sub add sbb call adc gs mov add clc dec loopne lret (bad) jle dec rol dec add xlat mov push lret pop push sub ljmp dec and pop call pop call sub pop (bad) or mov add ret call push add ficoml cs sub push fisubl xor das mov and jno lahf loopne movsb adcb lods push and hlt and add jmp adc xor lret dec xor mov pop leave push and pop and mov jl int cs aad push rorb jne add sub and jg or test jg ss xchg stos je jno cltd jns in jle sub sub push add fbld add sbb pusha and mov push enter enter cmp pop jecxz and sbb mov loope (bad) cmp sub or push or cmovs ss mov fnstenv xchg test lea sbb and aam mov adc push mov pop or mov cld xor cmp xor push xchg sub adc jns xchg dec sbb inc jl add mov xchg mov and push data16 push xchg push je mov shll push push aaa push leave or insb add fs pop js enter push inc popa jnp or push sbb mov push jg add xchg cmp pop or sub test xchg iret mov or int3 pushl aas sbb (bad) aaa jo jae jmp lods lret shll pop enter jp inc add test pop add sub mov mov rcll and jns insb adc pop add or dec push inc nopl xchg push and lahf test mov push dec or xor adc pop adc add jecxz sub cld pusha and mov inc add jb packuswb arpl or mov imul dec aad imul push xchg adc dec mov inc fiadd pop sub enter outsl sbbl mov push sub call rcll mov notb sti adc out inc push (bad) das jmp push inc or fist xlat push push ja mov add ret ret mov jmp pop lods cmp dec (bad) aas into add daa mov and insb adc jo into mov loope or in (bad) cmpsl mov mov xchg in inc push mov add pop xchg mov or scas sub call test andl rcrl (bad) mov (bad) push xchg pop scas inc mov adc ret rcrb ja adc dec lret inc push fldenv add mov add aam (bad) test add ret rol out mov pop add pusha cmp or mov pop and ret pop pop cli gs dec xchg mov imul fcomp jmp dec cmpb sbbl xor or sub adc add add dec push jb push mov adc fsubs add mov out popa addr16 inc mov sbb or inc and push jne or and cmp xor push cmp push xlat xor dec sysexit nop xor pop sahf fist outsl imul stc pop mov stc adc pop and sub pop push arpl pop cmp push fnop or inc scas add gs xor jmp mov cmc cmpsl out and xor out fnsave add cmp push sbb sub pop sbb pop xchg pop dec shll push push int3 sub push lea (bad) jg cmc pop inc push enter pop inc and or mov in xor xor push adc arpl jmp and and or xchg outsb push inc mov cmp icebp and mov int and lea and push mov xchg inc xchg popf dec pop and cmpsl leave int mov xchg xchg pop scas inc ret dec xor add cmp xor pop or stos inc iret sub or (bad) orb ret jg aam jae sbb and notb mov dec xor push negb out sbb push and addr16 mov nop shll cmp mov lods adc push (bad) cmp pop jecxz imul xchg push fcmovb lea mov add cmp or leave jae jg pop call or pop insb xchg addl jo daa int3 test test or enter cmp jne jae ret dec jl fistpl add or cmp sub inc or addr16 inc and pushf add xchg aas dec adc cmp sub sub or ret adc cmp sbb add ret pop adc cmpsb xor sub xor adc imul (bad) (bad) xor sub sub enter icebp sub jne mov xor orl (bad) push ja ret in pop and push insb daa inc cltd addr16 push js and js rorb sbb or insb push inc or bound (bad) imul dec (bad) and mov (bad) add jb xchg add mov lcall add mov cmc roll push xchg xchg xchg pop insl aad push ljmp push cmpsl and jg and enter cmp cmp jb push in push cmp mov leave jge inc push or and jnp and aaa push or call movsl push add cmp cwtl ds pop mov mov inc push mov out pop mov mov je xor push in mov mov sub enter icebp jg xor ja adc repnz or leave cli pop repnz or adc aam in and in stos push or push fisttp dec push and pop pusha adc mov lret ss sbb push lahf adcl rcr (bad) mov jbe imul xchg jg xchg or xorl pop inc jg loope mov xchg in ja jg adc push jne bound and jge inc ds or inc adc mov adc adc sbb jns or subl sbb fbld mov pop fidiv (bad) mov loop rorb fs loopne add or inc add inc and push add pop push pop aam or jmp ficomp sti insl popa sub test fsubrl scas lods mov (bad) (bad) movsl and add pop push test je cmp ret adc push or mov insl (bad) cwtl dec orl sbb pop imul cmp imul add and cs jns dec xchg call push or add sbb in enter add add sub add in jno sbb adc (bad) lock and mov xor add pop jb xchg cmp pop imul es pop inc dec add lret sub inc add sbb pop les dec lea pushf cmp add xor ss or adc inc (bad) xor sbb xor loopne mov or adc aas rolb loop inc pop cmp xor test adc rorb mov in mov push rol xor and cmp or sbb (bad) lock test dec dec dec (bad) insl sarb sub mov dec addl or insb mov sub sub dec and add push pop inc fsubs or jnp pop sbb and jl xor ret mov add jle ret adc and sarl or or call mov ret mov ret cwtl ret dec push push add or push lea pusha cmp sub jle outsl mov pop mov cmp inc pop nop in sidtl (bad) inc cmp jl push loope ss call sub adc add jno xor shrl pushf xchg nop mov out dec jo jo jb lcall fcomps subb cmp insb js in jb xor js add ss or push in inc inc adc les pop test cs add pop sbb fistp pop push add mov inc lcall or xchg and inc or jns cmp push subb mov sbb jl shld push mov cld fwait mov sub push push dec or mov bound popa arpl mov scas (bad) cmp adc fsubl or push sti xchg lock inc in mov fstps ret xor pop leave faddp (bad) mov aad mov bound (bad) mov aas loop jo rolb loopne mov mov inc cli xchg push adc sbb jae inc sub mov scas nop xchg xchg inc insb cmp inc add fst dec add pop mov sub cltd xchg inc adc and mov add rcrb mov or lcall sub mov push das stos sbb popa jge inc inc mov pop push ret push cmp aam or dec xchg mov xchg mov lea sbbb or sbb out xchg inc sbbl aam lods mov mov mov dec nop (bad) rorl pop push mov out or sbb push inc pop jo push inc paddq mov stc in cmp or stc xchg test xchg xor dec xchg sbb lret inc jae aam ficom loop aam (bad) fdivrl mov pushw int3 dec inc popa add fisub mov nop roll add xor push add iret mov add mov push mov push inc xchg or and fnstenv outsb adc xor pop adc sbb adc sahf repnz mov outsb mov mov inc adc push jb imul dec int3 adc repz xchg lods push lods xchg push jns loopne or cs xor in ret push or inc sub dec lds push jns out test test cmpsl scas and es gs xor lds dec xor xchg adc pop or das sub push stc push rorl rorb jg push xlat mov mov (bad) scas mov (bad) sub cmp fcompl out loopne inc cmpsl dec inc lods mov xor lds add ret adc sbb jge mov or sbb and (bad) jo in adc dec xor in std inc add or inc push aam clc cli cld cli test fimul nop or or arpl or xor sbb shrb sti xor in pusha sbb add icebp push jecxz cmp cmp jne cmp mov xchg in or pop mov js ss pusha and movsb push sbb loope test (bad) add aas fisubr adc fwait add push adc sbb (bad) fdiv nop ret lock or xchg xchg inc add or xor pcmpeqd cmpsb inc or sti mov sbb fs out loope and cmp iret addr16 in lock repnz repnz stos pop stos call loopne cmpsb test fisttpll (bad) mov mov xor mov cmpsl mov xchg xchg jmp add lods test and push scas and cmpsb adc test js inc fist shlb incl mov inc (bad) stc mov ret mov inc and lahf jo decl test sbb cmp cmp or sub arpl (bad) jno or pop mov xor inc dec pop daa xor jecxz add adc inc add cmpsb and call popa and mov sub cltd pop jnp popa sub (bad) dec cmp dec cmp rorl sbb test mov mov jne or mov inc pop and push out or mov dec enter push push push push dec movb xor dec and jb inc push push movb (bad) out dec mov and push movb jb push movb push mov dec push cltd fs mov test nop mov addr16 les hlt enter jecxz cmp out cmp aaa sub adc in clc xchg push mov pop or xor push out testb push pop call fcoms (bad) xor int or dec push lea push cmpl mov add push sbb adc or mov movsl in adc jmp and out xchg dec repz push xor adc add adc adc inc cmp jb xor mov lcall dec in cmp jbe inc inc dec jne cmp and add or cmpsl xchg and pusha add adc imul add mov mov (bad) bnd inc sarb sti mov movsl nop pusha mov fist push fucomp add cmp or xchg add cmpsb data16 and in sub cmp jae inc cli lahf inc roll jmp lea lea fisubl xor add mov adc push in sub ljmp js call xor lahf mov lds mov cltd stos les cmp cmpb inc inc inc add cmp cmp imul mov adc and push xchg fwait mov xor daa xor xchg cmpsb lds cmpl movups cmp andl adc mov nop jo xchg rorb loop add fsubr xchg insb mov cmp aaa push mov push dec or xchg xchg pop mov and and mov and dec or sbb nop imul add mov xchg rcrb mov xor xchg mov test ljmp jbe push or xor or jbe js or test dec inc scas mov pcmpeqb out push (bad) aam adc adc test (bad) test lea add adc add lock dec ljmp leave xor out outsb adc pusha (bad) cmp loopne mov loopne or xlat cmp nop jbe xor outsb test mov mov je mov les call rclb mov in sbb int3 add mov add or sbb sub push lret sar add repz xchg or jg or in int3 call pop test in or jb fs xchg lcall leave out cs xor dec loope inc rcrb push fsubp dec pop dec dec dec jle cmp mov cmp mov adc push lret ret sub xchg and inc pop daa or xor addr16 mov push jne data16 jns inc inc dec dec push xchg fistp pop addr16 or xchg xchg xchg pop jp jl jle bnd gs adc out xor xor xor mov xchg inc inc dec push sub imul mov dec fisttp inc add add je mov pop pop dec cltd ret mov dec adc cwtl pop js or jb or rclb repz js xchg lock mov jle add mov jnp aaa push movsb mov jmp add dec test ss lods or push push pop call and cld lods fist arpl push push lods ljmp and mov add lahf sbbb push pop mov inc push shld and inc pop jbe aad nop ds dec pop or mov (bad) fildl jle jb xor decl xchg xor xchg pop and je cs scas jl je jne or ja push jne inc int sti mulb inc (bad) mov adc inc and lcall out jl cmp jg cmp je or add cld mov sbb mov leave movsl jns push inc push push and jp push push ret sbb jae or repnz mov dec cmp pushf fnop push rorb and (bad) mov and iret sub xor lea xor ret pop xor sahf out xchg push pop enter mov out (bad) out pop mov movsb push cmpl call loopne dec inc mov or mov mov add cmpsb (bad) jmp lret mov add hlt rolb add inc dec jne bound int cmpsb xor inc lcall adc xor add shrb test inc add dec pop test sub adc imull push in outsl loope and out lret repz rorl dec dec mov push nop scas and sbb callw lock insb sub ror jle mov xor inc ror sub jb mov mov push adc sub ds adc daa inc inc and add xor cmp mov imul pop adcl out adc insb mov clc cmp es adc sbb das and and scas dec das (bad) sub ret sbb movswl add add push lock push test push and xor jecxz jns pavgb adc cmc add sub push add stos or inc jb push push adc dec sbb test fisttpl sbb movsb xchg std push sbbl (bad) or dec xchg insl jo test xchg or mov push sub mov add sub add dec pop jns pop gs pop cwtl dec jmp sbb xchg inc int3 add call fld out out out movsl fs clc cld mov call adc fisubrl cmpsb pop adc cmp les adc repnz mov inc sti or add popf es lahf pop add add (bad) lock or mov inc add push test test ret cmpl pop pop icebp and push lea xor push add jg (bad) cmp iret and sub add lahf and inc mov sub add ss fldenv add mov or add jle jg fstps cmpsb or push (bad) jne je jnp ljmp cmp push inc cmp jl push vmaxpd adc ret adc cld fstps adc or jge adc js dec add ret repnz loopne adc insb sbb add mov sub sbb jno sarl and mov or sub in xchg sbb test (bad) movsl pop pushl push xor cmp jnp jbe ja pop arpl cmp push ja push cltd std sbb daa dec dec xor dec insl je flds add xor or fs ljmp or pop pop xchg xor jmp and inc outsb jbe mov cmp xor cmp cmp adc push push repz cmp daa sbb push push clc add int pop mov aas fcomps sbb xchg mov rcr jbe imul fisubl pusha jmp mov inc mov xchg cmp jg inc inc movsl aam and andb mov insb jmp and fs jo and adc js push into sbb cmp xchg pusha push insb sbb xor neg sub pop and pop jl arpl andl insl clc in leave mov insl cld add mov cs out nop sbb and movl sbb test cltd mov jp stos dec xor ja fcoms add or sbb or loopne cltd je lcall mov sti adc jbe stc push or pop sti in scas xchg movsb push roll cmp shll popf mov out js cmp mov nop mov repz roll inc outsl mov adc add es cld add fsubrs jno stos daa pop sbb ljmp inc xchg cltd cmp pop lahf jl add cmpsb jae push jns rcl rorw mov rcrb adc pop inc inc rclb loope push insb aad pop ret cmpsl sti and xlat adc movsb sbb mov sbb push je mov jno notl rcrb fcomi mov pusha sub dec cmp repnz sbb mov push push inc push mov stos (bad) push imul or pop dec jnp dec add adc xchg scas sub mov add push xor xor push add and xor js cmp or mov cmp inc mov sbb je pop sbb pop jb inc xchg ds pop sbb je adc adc xchg pop add fs (bad) xchg test sub pop adc mov rolb setg je aas test pop or adc or rcrb mov push popf sahf out in (bad) cmp bound imul cmp repz sub nop jns iret repz add jns out mov repz adc lea add or fwait dec sub mov xchg dec and clc sbb je mov loop push or cmp ss pcmpeqw add frstor pop or pop dec jnp pop add hlt stos lret in xor or mov xchg adc adc xchg insb or clc add add sbb xchg fist inc mov out mov xor les leave inc sub push out mov or movsb mov fistl lods and adc mov sbb push push push push xlat xor imul loop push pop xor scas jbe mov sbb test dec pop call addr16 andb or lea pop and mov addb push adc shlb ret shrl ret or les adc and add xor popa repnz (bad) jbe inc and fcoml xchg daa popf test jbe aam sub pop nop inc lea imul push inc pusha xor movsb adc pusha or repnz sub ret arpl insl inc or pop aad lock push std pop push mov lock pop jb sbb add add mov xor lods in lret xlat call adc ret mov add je mov call push and rorl add mov dec push jae mov cmp adc dec mov mov dec push push dec cltd dec adc pushf call xchg mov mov jnp and fsubrl inc mov push (bad) and push sub addl decl popf sarl movsl andl ret inc add mov dec roll adc sbb jmp stos sbbl add add and out lock rolb loope cmc pop das mov lret inc insb mov test and in add ss cli clc mov mov jns jne call inc xchg test or inc sbb xor mov jb or jmp sbb (bad) scas or or xchg (bad) pop repnz dec fs xor xlat mov xchg ret pushf mov mov pop mov mov std jmp add cwtl push add inc and sub (bad) call or gs cmp adc mov shll push xor pop sub sub ljmp mov sub sbb shll jns fs mov add adc push lea mov test movsb pop and test icebp sbb and in inc xchg and lret (bad) punpcklwd test push je daa jno inc or sub or and mov sub mov add (bad) xor lcall cmp or cmp inc scas popa push cmp jo (bad) jo sbb sub push inc or outsl enter add mov inc jo mov mov mov ja fsubr xchg mov mov daa sub inc and jb mov adc sbb in pop mov sbb inc dec outsl (bad) call xor push mov je add ror adc or out lahf inc ret push rorl pusha (bad) dec mov dec insb jge mov mov fwait sbb add imul add sub aas and mov cmp lcall pop add add push cmp and (bad) call add nop mov sbb ret sbb pop adc mov aam cmp sarl lock ds es mov xchg scas lds push or int3 add aam orb mov push lods mov push mov mov inc int push sub adc sbb sub je imul push or (bad) fsubrs cmpb xor or iret repz inc dec inc out push jo call dec pop lods popf nop clc mov pushf outsb in lahf cltd sbbl pop and repz adc add sbb xchg cld xorb in pop and ds push ss adc and leave jnp adc xor push mov divb in push add rcll mov cmp in pop cltd call aam jns push add sub lahf js divb add cmp arpl mov into adc les jmp popa out add bound (bad) rol add jo and aad sbb fist dec cmp mov xchg ss dec (bad) jne fsubrl test fcmovne pop xor mov xor ja cltd push shrb jae pop sbb ljmp adc ret pop push xchg adc add push inc test fcompl sbb inc loope lea dec lcall loope sbbl sahf flds xor movsb inc js mov insb and daa mov mov in mov (bad) repnz movsb imul cli ja mov adc lock push sar push push adc es (bad) ja mov push imul inc add cmp cmp pop jl rclb inc daa testl sub sbb mov sar push add into push push mov test sub sub push push push inc dec xchg inc fs push lock and es rcr loopne add add das aaa xchg negl movsb mov nop add loope fsub push xchg fsubs inc inc pop pop sbb push add xor push mov pop add cmp cmp fisttpl mov or pop and test xor data16 sub lods pop dec pop cld push inc inc adc sbb movsb mov out fs mov icebp fs lds sbbl sub pop cmp popa mov mov dec aas pop mov cmpb cmp add out inc fimull dec mov add push jge js inc aam out add jle mov es test xor and movb dec mov sbb sahf mov mov push xchg add insb jg add or call pop sub gs (bad) add outsl cwtl and das rcrb add add leave inc (bad) pop pop xchg (bad) xor mov stc leave ret aas lods add adc inc push rclb fisttpl cltd or xchg mov cmp inc call pushf push or push mov xchg cmc rcrb and add adc mov sbb dec inc push stos repz sbb mov cmpsl fidivr call addl clc clc ljmp push stos sub ret adc popf cwtl push adc sbb adc (bad) jg push inc jne (bad) pop addr16 sbb xor in rorb dec adcl mov movsb cwtl nop mov mov and sbb loopne adc ror add pusha and xchg push test aas xor mov and repnz jmp mov or jmp inc push push push push fldenv push mov bound mov out add cwtl gs pop sahf sbb lret inc sub add fs mov xlat sub aad xlat iret jnp arpl pusha cmp push inc mov push out icebp push insl sub push or in xchg cmp cli xchg and scas or mov pusha pop sbb add fistpll in (bad) xlat sub fsts insb ss es dec add rorb push mov mov mov lods mov mov inc add adc add jns call sbb shrb ds lock sbb xchg fucomip push push xor add ficomp lock jl mov std rolb add inc inc adc jge adc jo cmp dec xlat in inc add addl and jae in xchg outsl test cmp mov push (bad) in rorl lock rcl add sub sbb cmp pop movsb ror cmp cmp mov xchg fldt and or pop orl arpl pop push sti in mov pop sub mov movsl xchg add aam aam les iret sbb mov jno call push xlat pop clc andl call retw ss pop test mov out jne clc pop cs and or push (bad) push call fstpt arpl jbe gs xor pop (bad) stc inc push aad lcall in adc pop jnp add adcl push ret adc test (bad) or divl inc lret lret jmp jl mov or scas or pop add cltd and push fsubr push js jl xor inc sbb inc xchg loop movsl cmpsb mov dec pop sarl sub push push xor sub ja inc sub xacquire daa lahf xor scas inc mov and jne mov mov or outsb add push inc rcr fsubl mov sub adc cmp mov or xor test push mov push sub movsb push and setnp or ja ret dec jecxz adc dec imul in scas popa adc call out lock dec lret mov mov inc iret inc add notl fstpt es jl xchg or pop insb mov enter mov inc repz mov cmpb (bad) push inc push xorl mov jo pop subb dec ret iret adcl xchg out xchg inc add add inc xchg (bad) pop in (bad) scas xor clc int3 adc mov pop mov pop mov dec aam jp ljmp ljmp pop sti cmpsl jge pop mov jp or leave in fiaddl sbb adcl cmp cmp adc push sub mov popa mov push fadd add mov sbb dec pop cwtl xchg loope (bad) push pusha hlt pop enter push fistl pop jecxz push (bad) outsb xchg cmp push push sub push jle fcompl mov aad mov or les mov cmp cmp popa push xor test test gs scas pop mov addl enter add mov inc (bad) mov pminub stc fisttpl sub cltd jecxz (bad) jecxz mov sub jno xchg stos xchg push ret in clc fistpll jns xlat push or cli xchg out leave or jge int roll cs jnp loop rep or or bound xchg mov push sub push lea push (bad) mov scas test add in cmpsb pop neg push pop mov cmp mov xchg fistpl fstpt jb or pop mov fdivs (bad) sub mov pop sub jmp add push mov cmp insb sub mov jmp incl and or lea or and ret inc sbb stc and adc inc sub ss enter stc push xchg es sub mov add imul push jbe xor scas mov jno test roll or fdivl xor jb push add nop sbb pop mov sbb hlt ret or xchg sbb test dec and xor xor in dec add pop inc rolb rclb add movsb mov pop cs insl stos or cmp xor jb mov sbbb nop xchg cwtl pushf mov movsb test mov pop cs mov mov in enter fdivs pop cs in cs lret in lock clc cld jb push pop add add or xchg lret in adc sbb in mov xor lret xor cmp inc lret in mov mov pop pusha fs insb jo js jb pop addb nop xchg cwtl pushf mov movsb test mov cs lret mov mov jb enter mov fsub in lret jb hlt cld add mov or adc lret in sbb sub mov cmp xchg lret in inc dec dec push in mov pusha pop cs lret fs in mov mov xchg cwtl pushf lods xchg lret in mov mov pop cs cs lret in fsub in in mov clc cs lret add add or in pop adc adc sbb pop cs and sub xchg lret in cmp inc dec in stc xchg rorl inc dec push pop cs lret pop pop pusha fs insb jo dec and lret and add out in add rolb lods loope adc or outsb gs lahf faddl daa inc push push maskmovq testl in and and inc addb (bad) ficoml ja cwtl (bad) sub sbb les xchg push push and sub dec ret xchg cmp stos add xchg sbb cli (bad) (bad) (bad) std stc xor sub push es sub xchg movl daa inc add sbb jne sub pop sahf or cmpb out sbb add and out pusha aam cwtl out inc in shlb data16 xchg rcrb add call push (bad) cmc inc lcall cwtl out xchg out mov out cwtl out xchg out xchg out shrl shll es add add call add and out aaa test nop out mov fnsave inc loopne test xor (bad) shlb push lods loope inc sahf xchg add insb rolb shlb xchg pop jo in lret push js add xchg dec test nop cwtl mov cs divb nop lahf das mov lock add daa add mov (bad) clc add pop les movsb repnz imul repnz adc rolb int3 es (bad) cld add call loop test movsb mov inc sbb dec sahf std sahf jl lret cmp rolb mov inc (bad) rolb inc rolb adc or or inc dec aam in enter pop or (bad) or inc pop xchg repnz (bad) movl pop dec or test scas add and mov cmp dec hlt push push fiadd es dec sbb enter push and movsl dec pop fs (bad) addb adc and enter cmp stos add or (bad) push push sub out lret sbb lcall jo out push scas push (bad) xor roll add pushf cld add and std mov or rorl repnz call dec sub (bad) cmp inc xor add pop push push call daa in add mov pop scas int3 movl xor orb fs bound (bad) popa cmp pusha jo or pushl sbb sbb dec mov or push and xchg inc or adc inc adc rcr pop cmpsl cltd out or xor or rdpmc repz sub rolb xor dec shrb add xchg insl mov scas cmpb and push adc loop pop xchg outsl add loop shr add mov jbe add add xor inc dec jne outsl arpl jno cmp add enter ss notb add movb ljmp adc add inc mov add (bad) adc shl add mov mov dec sbb push sbb adc out gs add (bad) and mov mov out stos clc xor inc sbb xor loope rcr sbb popa popl mov pop mov (bad) lahf push lea jb pop push mov cmp sbb jbe popa pop cmp shrl test test sub mov inc inc mov jbe sub (bad) pop mov cmp xor jmp xchg push mov repnz scas inc jno and or and outsb mov cmc stc inc mov pop ds jnp insb popf adc pop jns das sbb hlt push add jle in and out lcall cwtl or cmp mov test cmp pushf daa jbe pop je loopne dec add adc mov xor nop mov dec or adc dec loopne icebp repz test icebp mov nop mov adc mov sbb fs mov and pop inc xor add mov mov orb js xchg ds sbb sbb adc mov repnz pop testl lods loopne lds sub jae jne mov call sub fsubs add mov dec je xchg mov mov push or xor dec xchg sbb pop out pushf dec dec enter lock add dec movsl movsb fmull push xchg sbb dec jg xor je sbb pop push je cmovae (bad) mov sub lret xor or (bad) je (bad) fdivs push fwait stos push in add sbb fnstsw sub mov popa mov out jo insb gs cmp mov cmpb mov mov fs sub cmp add inc in mov inc in scas loop aam (bad) lahf xchg imul adc movsb cltd mov sub sub repnz dec inc dec xor and cs dec movsl repnz sbb add in pushf rorl ret xchg add sbb insb fadds pop mov mov scas sbbl ret ret mov xlat sub push add stc push sub mov add sbb insb jb sbb repnz push push push (bad) push jns jns les sbb iret add clc scas sbb sbb xchg in aas pushf outsl popl clc lock mov lcall in mov pushf outsb jmp jo ljmp jno sub sbb lret sbb push dec inc nop out or or ret clc push xchg (bad) and (bad) in xor fldenv ljmp lret dec imul mov repnz pop in and sbb movsb lahf push stc push and sub lret shr ds sub adc mov in sub imul in dec scas pop mov sarb mov mov outsb imul (bad) call lret movsb dec pop cmp xchg pop adc jg xchg fistl test push jb inc rcrl inc or divb sub and mov xchg outsl or and mov in dec (bad) in cmp shr add adc (bad) jmp testb mov dec and pushf sub out ds aas call rcrb add arpl adc dec push and sub mov push pop and push add sub xor movsb mov sub xchg push inc adc out jmp es incb mov das xor movsb aam or pop dec dec movsl mov push fidiv pop ja orl stc sbb (bad) pushf jmp movsl jnp leave xor in inc bound sbb outsb das cld out lret aas sbb push hlt aam std mov xchg out pop aam mov mov mov aas mov cmp shl adcb test pop movsl lods mov dec mov push dec int3 push je jbe dec clc cmp sub jns pushf and in ss mov mov fs movsb push sbb mov xchg xor mov loop fucomip and xchg pushf mov adc jp pop jns cmp fs jmp sbb sbb adc or push fdivl xor inc lock xor es lock add pop aaa ror in fsub repz in (bad) pop mov leave movsl in jle push rclb std cmp mov adc scas ds mov and jo xchg dec mov sub sbb nop out adc or stc sub adcl or pop out ficom arpl push dec mov in loope push lcall in jmp mov cmp aaa (bad) jg pop mov lds fild mov push mov loope push cs movsl pop lahf push adc daa fsts call sar sar pop idivl bound sar (bad) loop rclb jmp cmpsb sub xor fild mov (bad) jne cmp test fist jmp dec aas jb cld push mov pop and xchg orl xor mov mov mov test xlat xor add jae call cmpb hlt call enter fildl loope stc stc xchg clc add adc out add pop xchg mov out mov call fs jl push jb sub test lock mov addb push out lcall in push clc lods add xchg mov jl add sub call lods sarb mov pop into add push out enter (bad) xor (bad) pusha adc xchg jo fsubrl or adc sbb iret rclb push push out pop mov jnp fwait and add cs cmp mov pop push aam mov movsb lcall iret pop push cmp iret repz dec repnz in mov cmp repz mov dec stc cmp repz or push out sahf cmpsl fcmovb scas xchg sbbb dec inc sub mov fs pop ficomp or adc notb jns cmpsl stc loop mov (bad) push repz out or push fdivrl mov push ljmp jp add testb adc cwtl or jle fwait int xchg push dec adc test imulb adc femms dec pop clc mov out test cmp push sbb and push movl or (bad) test adc or scas idivl adc fcmovnu jle push push lcall jo ss sahf idivb dec lods or ss cmp fdivp push xor sahf push lcall test out jne imul push push jg or out mov xor repnz shrl stos pop push bound inc stc data16 sahf imulb es push ficoml fwait out imul adc divl jbe stc or push js negl out jns mov cmp inc xchg adc into push vmovsldup jnp repz cmc add push cli outsl xchg xor or out call scas (bad) push add (bad) pcmpgtd push lahf es das push pop adc fs stc sahf imulb sub or daa arpl push adc pushf or and fxch lahf fcomps pop jb jns out push add push xor sahf out sahf inc pop jbe mov mov jnp dec repz out addr16 (bad) scas ds repz push mov clc push fnstsw lret fisttp push push enter stc mov and pop push js pop dec adc jge jp dec pop addr16 pop add jbe bound sarl incb dec push push in lods mov push push sub dec ss repz roll (bad) mov push out sahf out dec ret cmp sarl push ljmp imul (bad) inc dec cmp push int3 inc into jo repz out out es ds xchg jns neg test mov (bad) out dec push pop mov xor out ljmp cmp mov (bad) jl pusha mov (bad) shr repz lock sahf mov jo (bad) ds repz mov out sub or repnz repz shl fcmove mov iret mov inc lcall cli pop in jns out fmul ret out sahf out jp push inc int jns xor or pop lock cmp cmp into pop or adc adc cmp or mov lcall ficompl movsl popa sbb lahf dec adc pop lock inc or loope adc shrb iret adc add insl pop pop adc xor inc imul repz imul mov ret test (bad) jmp mov das lahf dec mov jo int xor mov idiv (bad) (bad) lcall xchg data16 mov (bad) adc sub aaa or cli xchg xchg clc out fucompp adc (bad) jmp mov jg into cvttps2pi inc xchg and mov mov loopne push shlb js cmp jnp jb insb pushaw pop iret repz push dec dec inc cmp cmp repz sub sbb (bad) xor adc add sarl hlt out call repz ror (bad) iret repz mov mov lcall iret repz jo fs repz pop pop push dec inc inc cmp repz xor sub pop repz pop and sbb push cmpsl stc cmp adc add mov sahf repnz out fsubrs test and mov pop or test add mov rcrb and test xchg je and mov pop adc add lods fldenv or mov and add adc or xor xor xor pusha testb fcompl push and adc add loope and nop lahf jo ljmp pushl jns ror pusha pop adc sbb pop test dec mov shrb lcall mov sahf dec jle fild pop pop inc pushf lods lods mov xlat dec lock scas scas inc xor (bad) popf scas inc mov cmp incb jmp call dec ficom (bad) mov add (bad) cmp es cmp aam ja enter test (bad) dec sti add pop jnp nop ja in mov xchg xchg out das in in shl xchg out in shr push xor cmp and sbb fcomip out and nop mov xor add dec sahf dec jle and stc mov or push das add enter das scas nop xor daa nop adc fwait inc dec (bad) xor das out sbb jb out loopne dec lock xorl add xor add sbb es in sub lock dec pop jg and out mov dec jnp mov xchg cmpsl out and movsl xchg sub push fldcw mov dec arpl addr16 xchg ss insl mov dec xchg (bad) stc pop dec or imul popl outsb (bad) bound fist leave and xor in push add xor mov test cmpsb push test pop jg add std aas adc and dec inc mov (bad) push xor nop ja pushf or adc push cli dec mov sub bound lds or pop mov loopne pusha lea nop ds mov sub aaa push mov (bad) idiv pop test outsb js pop orl ljmp mov mov aas iret jns jnp push adc rcrb jo cmp enter dec out pop je enter adc out mov (bad) lds es sbb mov adc cmp fnstsw in push rorl dec loope sbb sub push ljmp push or in pop addr16 daa pop cltd push push clc out jb daa adc add dec test add outsl pop xor xor mov aas pop aas aaa dec xorb mov sbb inc mov das mov dec das (bad) push lahf add and add lock push pop jb loope out dec cmp pop add pop paddb sti out pop inc bound jbe aaa push dec lahf push inc dec hlt xorl in mov fisttpll xchg fsubl cs or dec jp push dec and and int3 test pop push cmpsl dec fisubl adcl data16 das jo mov mov xchg adc pusha xchg pop negl rdmsr lret xchg xor nop jns adc or mov add xor addr16 sub sbb push sub push mov mov insl cmp xchg adc outsb adc jno jnp mov fisttpll jnp jnp imul pop (bad) pusha fwait cmp cltd mov add pop mov (bad) jae push cmp inc pushw sub daa add add jbe gs jbe dec popf cwtl or xor fsts (bad) (bad) push cli (bad) sub mov dec pop addr16 in pop out fs xlat pop pop gs into dec mov (bad) lea hlt xchg sarl jbe pop mov sub and fisttpl and mov xchg mov (bad) test add mov and xchg and ja aaa orl lock dec arpl negb daa pushf std add mulb cmpsl sub push enter xchg ret or jo xchg aad outsl scas test movl adc packsswb jbe ficoml mov jle addr16 rcll xchg lcall mov fsubrs dec (bad) mov (bad) addr16 dec arpl pop lods gs adc repz dec sti lret pop pop pusha pop mov mov test imul inc xchg pop repz sub mov ss push sahf push scas push and pusha inc and cmp and jge or in sti jg xchg rorl sub cmp jns xlat (bad) pop xlat pop mov adc push sub push insl xlat call inc fadds xor push sub ds mov test xchg inc jl adc push jae les cmova addb mov xorb jge inc push inc inc push jo add rcrb mov mov xor sub pusha or mull add out push in stos or addb cmp mull dec mov and and das popw arpl pop or das xor or sub aas dec sub xchg push test aaa xchg aas fwait mov out stc pop mov push decb (bad) mov add xchg test mov aas test add xchg in or cmp xchg data16 popa addr16 push loopne ss pop addr16 test jo fwait pop xchg outsb js mov sbb out cs add jae shrb xor pop cld xchg dec or das dec or in loopne or dec (bad) add insb add dec add scas add adc and inc push add jnp pusha fiadd and mov and xorl test dec cltd sbb xchg inc and fldt icebp sbb movsb mov cmpsb adc test xlat daa jg inc imul or inc cmpsl sub incl inc outsl shrb or add sbb mov fstps dec test jo pop nop icebp es stc cmp mov in loopne sahf dec mov adc push add and in cmp pusha icebp jo inc divl pop shr dec cmpsb mov jne add jo pusha mov fildll push aas nop adc mov dec cmp rcr push icebp fstl jmp (bad) adc out push divl push rclb inc rorb or jns (bad) je pusha mov dec (bad) (bad) arpl addr16 add ja and addr16 or cmpsb push or data16 pop push jae daa loopne adcl add mov jbe inc adc js into lods (bad) (bad) (bad) jmp push addr16 (bad) dec dec or cmp dec arpl pop jg sub push std subb xchg bound dec jge xor cmp (bad) dec add mov cmp out add inc adc in pop push das inc inc jae mov adc popl sbb addb enter mov in mov lock inc jb nop add add ljmp xchg loopne addr16 std pop gs push jle pop dec sub sarb push es sbb (bad) dec imull popw pop (bad) push mov inc clc add (bad) jmp hlt loop dec ds cmp jns ja push mov xchg out xor nop loop adc xor iret mov jl inc pop push push out mov ljmp xor xor xor ss xor add jb pop xor and xor xor cmp and mov jecxz and dec mov inc or or adc sbb or inc inc or dec mov adc dec push mov ds add (bad) stc ss mov adc add adc push push inc or and inc adc inc and fiadd add jle pop add push add and xchg popa jo jae or lea in pop loopne add add and cmpsb or jo popl add sbb xchg test loopne xchg testb test pop mov stos mov out data16 lahf enter or das sub pushf test jo pop add add fildll add and push add and and pusha daa add xor or mov leave and add push inc mov sbb cmp or sahf pop and jge jl and cmp mov add jle mov add outsb test push adc push dec mov inc pop push adc adc sub inc daa dec sbb mov push mull nop mov dec mov inc and (bad) lcall sub outsb xchg aad sbb xchg stc dec xorl (bad) fmulp inc sub lock je jp cli push pop cmpsl addr16 scas inc push nop jl push outsb add fimull rolb sub inc push dec mov cmpsl lock mov push pushf (bad) jmp outsb inc out adc loopne cmp (bad) nop pop imul dec cmp pop daa and mov out push imul test sbb inc rolb (bad) gs mov adc shrd jle sbbb dec jnp ds mov rcll pop xchg push and daa pop adc cwtl (bad) cmpsl dec (bad) push inc aas sarb sbbb daa lods mov (bad) (bad) lcall fdivrl (bad) shl in inc sarl cmpsb (bad) pop adc dec (bad) cmpsl lahf jbe inc xor push push inc add lahf push imul inc arpl pusha pop or (bad) mov mov jb pop pop jmp and aas push sbb push scas arpl fcmovnb mov add lahf mov outsb mov bound addr16 push dec or inc addr16 (bad) inc pop inc ljmp push push add les negl lods lahf adc mov ds movsb aad mov push push pusha or push or xlat jg sbb push push pop fild bound adc push mov aaa sbb cmova jg adc sbb lds cwtl daa pop pop sti fsubl in or pop inc or adc mov or scas jle gs pop aas xchg movsb or add rcll xor adc and pop push bound imul arpl out jbe pusha cs inc outsl push add popl int dec imul psubq jg std test xor pop ja pop rcrl push aas lods mov test sub adc iret xor push pop pop inc ja into mov xchg pop pop mov pop adc or cmpsb dec daa pusha jle add fisub cmpsl jle push pop ret adc xor aaa outsb data16 xchg pop (bad) pop mov es mov pop lret fs jle test je and pusha test xor mov ret sti cmp mov jle pushw data16 jg addb pop xor popw ss adc jne shrb add popa inc or shll ds or xchg test int3 pop inc subb mov push jo ja ret scas mov pusha (bad) mov jle popf and lock push pop test cmpsl movsb fild int3 add mov (bad) cmp push or and nop fs sub leave rorl loopne xchg popa and fcoms test or pop rcrb pop das inc js add push nop pusha adc cmp cs push push adc xchg scas add push lahf mov inc xor test xor jecxz ss bound cmp xchg addr16 xor and pop imul or pop rolb shlb pop enter xor cs add (bad) das gs mov fwait pop cmp aam xchg push roll add lcall mov add dec mov (bad) push movsb dec or inc clc jg insb or push repnz dec subb out xlat das clc xchg fisttp or sub rcrl xchg (bad) jo lahf sbb sub sub push mov sub cmpsb mov rorl cmpsl pop fisubrl inc stos jo dec ss stos test push cs adc inc pop enter add pop xor repz (bad) push inc lods (bad) (bad) fdivs test xchg movhps pop sub push cmp out mov or push xchg jo nop pop ja sbb jl dec cs ja es test xlat sub es jg mov scas cmp insb inc inc pop dec push or jae dec pop add sub mov xchg push add add cmp repz fild out or iret repz or or enter or sub insl pop push inc (bad) fmuls mov jo js test xchg and mov sbb jb mov mov mov and cwtl mov and mov push add inc jns daa fisttpll dec push add in add jns push cmp xchg or mov enter ja cld loopne daa daa daa in testl daa daa daa sbb xor mov daa daa dec push bound addr16 sub daa mov xchg mov pand jae cmp icebp incl loop xchg pop adc adc xor xlat add push ja mov jbe lods fisttpl orb daa daa pop mov add loopne movsb (bad) xchg pushf xor fnstsw mov lcall mov sub jb push dec (bad) leave leave lods push (bad) bound inc sahf fildl jb jb stos movzbl int3 add cmpsl lock repnz lock in aaa inc dec mov and sub pushf mov mov pop fwait pushf pushf mov mov arpl xchg xchg pop enter mov mov xchg xchg xchg xchg mov mov mov mov xchg xchg xchg xchg mov mov mov mov add daa insl out cs aad jbe rclb sbb call outsl cwtl mov in mov mov sbb lahf sahf out dec jo push add jns popf test cmp int in cmp cmp std or cmpl pushf faddl ss pushf pushf pushf pushf gs mov mov (bad) or xchg xchg xchg or lret (bad) mov daa mov paddsw add leave insl adc sbb leave leave inc dec pop mov daa pop adc mov daa daa mov repnz mov shl leave leave leave loopne testb rolb xor out mov pop in popf pushf arpl pop push cmpb push mov xchg loopne xor outsb lods mov in scas sub xchg mov xor mov mov or inc lock add imul add xor push ljmp rcl daa rcrb ja push cwtl push mov dec mov xor sbb mov push fdivs inc nop dec cs dec cwtl mov adc nop mov mov call mov adc inc xor out insb orl enter jp mov repnz call dec add enter xor mov enter nop enter call insl and adc cmpsl fcompl ss mov movsl sbb ret jne or cmpsb dec xor pop dec ja iret pusha and loopne or jnp push fwait iret inc aaa adc shrd push push inc inc pop addr16 xor push or cmp and pop xor pusha pop jb pop pop addb mov lret lret lret out out mov mov mov jns cmp test lsl sbb repnz mov outsb and push mov push in fs xchg sub nop pushf push pushf pop and add int3 pushf pop and sbb pop popa loop in pop add mov cmp es xlat popf and rcrb es mov outsl add adc cmp fs push ret les daa scas push sub push pop mov jns aas cmpsb add loopne leave call pop out pushf fisubl cmp cmp pop cmp fs pushf mov data16 stos pop jb fdivr push rclb and dec cs push nop je pop ja mov mov adc ja cmp mov mov jg sbb outsl (bad) setg inc and mov pushf lcall out dec repnz pop xor pop pop es mov jb add mov rorl pop and cmp rcl rcrl push pop mov sub adcb jae mov pusha mov pop mov xchg lret mov lock dec push ljmp xchg and jns pop inc ret data16 nop loope mov out addr16 push add movsb popa (bad) mov ds mov daa xor sbb cmp int ds push sbb inc jb in fstpt pusha daa jle roll dec scas push pusha aam bound cmp (bad) jbe pop inc dec inc pop xor fisubl pop sub inc daa sahf dec fisubl add dec xor adc jns,pn les mov daa fldcw pop sbb hlt inc cmpsl mov jbe test es sahf out cmp pop adc lock mov lret sbb pop jb and pusha push rolb mov dec add les movl imul push mov rclw das xor ficompl stos inc iret cmpl imul mov inc mov bound sbb pushf inc inc sub dec add ds dec dec or inc dec ret insb aaa dec dec (bad) mov insb leave sti push sub push pop fistl cmp imul mov adc inc addr16 mov enter dec das pop into insl mov aaa push iret mov jb xor iret addr16 mov daa iret das jae dec imul push push pop addl inc (bad) or sub rcll mov lods pop icebp fistl ret gs and js jns push pop scas add shrl dec dec iret and jmp mov mov inc je cs imul (bad) or outsb add divl dec sbb ret push pop or xlat push lods jbe nop fdecstp sub adc lret mov xor sbb xchg ja xor mov adc pop das xor pop add and cmp pusha gs add push ds or inc popa inc jmp adc mov scas sub push lret rcrl sbb dec and cmpl bound inc pop cs sub push test aas loop or rclb aaa lods mov sub xor les in and ret dec and push mov add push lahf loopne les ret pop push roll sub outsl push jo mov push xor fbstp jb push jne arpl lock pop push fisttpll pop and push add mov xor ret push pop xor aaa pop add jns rclb fisttpl insb xor mov lret dec sub mov inc dec push js xor ja and iret fld subl iret je and sub dec xchg lods leave jnp cmp ret nopl dec add pop aas js stos (bad) or stos push cwtl mov push xchg xor mov loop aas push inc push dec inc in push push inc jnp shr push popa cmp das out movsb inc lret sub push pop mov push (bad) pusha mov cmp fidiv push mov movsb dec ss adc or test and cmp pop bound push cmp push jae adcl ja or leave and jg jb mov dec mov mov mov lcall xor sarl xor push xlat jl fwait pop sbb out pop push sbb xchg add pop push mov xor add test push and or stos dec sbb pop adc inc push es rclb cmpb imul test add push sbb push or fwait ret addl aam lds jnp push pop mov cwtl imul fidivl ja xchg mov xor push and adc add lock add test jno add cmp sbbb pushf pop push mov jg push rorb xor dec popa and pushl pusha mov mov cmpsl add mov lret add pusha ret adc ja inc mov and inc roll loopne xchg cmp arpl mov adc pop mov xchg addl pop adc mov jg add xlat sbb mov and add arpl lods or adc mov add xorb add add inc bound push add rcrb mov lods sbb (bad) loop insb mov pop sub mov sbb mov addr16 mov lret (bad) pop mov adcb imul lods push xchg gs fstps inc xchg xchg dec fstps xor dec mov stos xor and xor sbb lds mov or mov lret xchg lods aam imul pop dec aas iret and inc fnstcw mov lods lret mov inc (bad) stos cmpsb insb lret mov inc lret out insb movsl xchg pop mov sub movl lcall add mov xchg add xchg arpl rcl lcall daa mov sub add lret sbb and inc insb (bad) pop mov imul push insb (bad) pop adc mov mov imul push push jmp insl lods cmp pop daa inc jmp add adc mov pop pop xor ja push and adc add fwait xlat xorb add stos je dec divl cmpsb sub pop mov push push inc (bad) mov add add fs or add pusha and (bad) or xchg mov es sub add cmp jo mov push and cmp push adc and (bad) add push or add or pop ss or addr16 cmp mov mov or or daa inc rorb cmp add push wrmsr ss xlat add add adc outsb lret push test xchg sub xor in or sti or add ret inc pop push cmpsb adc jno rorl (bad) pop cmpsl jle mov fisttpl adc xorb add push mul ds stos cli push mov pusha sti rolb push or xor (bad) fildl and push push push rclb imulb push sub addr16 push xchg insb out (bad) mov adc shrb fucomi fldl loopne out lock jo jle jbe nop (bad) mov mov cmp inc mov cmpsl or cmpsl (bad) add (bad) jae jb fild adcb mov shrl pop testl fsub jl iret mov std cwtl clc (bad) ds cltd xchg cmp inc loopne mov lock or push imul (bad) or fdivrp mov push nop pusha adc adc push addr16 lcall push adc push and cmp sbb out scas in push and mov adc in cs out cmpsl mov ss adc pop and mov adc jnp pop add jle sub sbb jmp jo adcb jecxz out jecxz and mov loopne xor out push push pusha imul add pop sbb aam mov daa xchg push mov idivl adc nop and push imulb in jge inc mov fsubp ds or loopne pop lock mull shrb push sub sub ss push insb and scas rolb adc xor insb lahf rcll andb adc pushf mov jle push xchg fistpll and sub jle lea shrl outsl out daa icebp jecxz pop push nop mov mov xlat dec xchg pop dec push arpl idivb dec mov push addr16 insb sahf sub mov jnp imul push add mov add es sarl jmp fisub sbb cwtl xchg es lds ds jnp dec ds mov mov pop iret fwait and inc jl cmovg push jbe sahf jle mov xchg push rcrb push out outsb xchg sahf (bad) mov pop int xchg ja xor ds rolb jo cmp xor (bad) or ja hlt (bad) and jo mov push loopne rclb push push sub sbb push mov add cs sub loopne repz and hlt fsubrp out out xchg push iret inc inc out sub ds adcb xchg xchg mov imul cmp loopne lahf out imull push loopne mov test inc and jbe inc fiadd outsb lock ss mov pop mov push pop xchg cmp out subl cmp sub push sbb push fadds and xor adc data16 xor jb data16 cmpsl scas ss lcall pop and fstp ficomp push push rclb sbb dec popf jo cmpsb and iret adc or add cmc fsubrp fnstcw inc addr16 push push nop push xor xor inc (bad) mov push dec loopne sti fdivl xchg push rclb mov nop cmp push sbb icebp mov fucomip inc jbe std add mov adc push adc mov ja sbb xchg inc loope,pt jbe fdivl add pop xlat mov idiv push add add mov insb loopne mov push sbb xor mov aam xchg (bad) loope sub and mov push push mov jge sti push pusha sbb adc negl push push daa rclb sbb push fidivr fwait iret loopne sbb sbb mov sbb outsb es mov push pusha jae mov xor cs jnp loop pop add cmp enter cmpsl jns and or les jnp push addb sbb in pop mov cmpsl jo push js push je iret repz pop test nop repz rep pusha mov mov mov mov inc push lods stc pop xor and fcompp ds es sbb push jns lcall sbb into mov rcrl push pop jle push jns and push dec imul pushf mov cmp sbb push imul vmread jns out dec sbbl jns push iret repz outsb test imul push outsl jns out mov cmp repz push cmp iret repz mov sahf out lcall cmp out iret lock pop stc cmp repz mov jns cmpsl es push mov leave sti sbb popa js lcall or jns xchg test out (bad) or daa dec iret repz bound (bad) icebp pop sahf out lcall ds sarl test stc cmp movb xlat push test sarl jmp xchg aam out sbb ds sarl push test adc inc jnp out mov cmp rcll mov lcall negl mov lahf out outsb mov sbb repz loopne mov jl out stos call repz outsl lea out sahf xor int xchg cmp mov ja out jns fstl xchg into push jns jns subb jo xor out fistl xchg dec and ds mov pushf iret repz rorb xchg aas push leave sahf cmpsl stc cmp xor iret sarl daa inc insb out sahf cmpsl stc add repz repz fwait pop mov out sub xchg push nop mov sahf out push jg fist sahf stc cmp roll icebp and (bad) scas fildl mov iret pop subl jns gs mov lcall sbb cmp popa xchg dec rep pop xorl and hlt and imul cmp rcll ret test lcall jmp sahf out mov iret (bad) xor out sahf out stos push mov iret repz repz iret repz (bad) icebp and pop xor out lea repz repz jbe (bad) out sahf out scas cmp andb and repz ds mov push insb cltd les cmp repz mov jnp enter repz and cmp out sub pusha xchg int3 out lcall fwait iret repz add mov out cmp hlt adc out mov cmp repz imul cmpsl sub out cmp and mov xor push mov cmp mov push cmpsl stc cmp (bad) mov and sahf jo icebp pop mov repz (bad) cli inc sarb stc cmp xchg ret rorl jns jp shl ret iret repz nop fadds ret inc xor out insb mov jns iret repz add cmp xor out in (bad) push mov fdivrp sub pop iret sarl in enter sahf out ds xor sarl xchg mov stc add and cmp out sbb jnp mov lock int mov iret repz bswap cmp jmp out ds dec jbe int dec repz and out mov push cmpsb ficoml ror out sahf pop xchg (bad) mull rcrl out cmp movb out sahf (bad) or ds out ds repz into repz push push pop ds repz pushf enter jns out cmp mov out adc xor add andb mov and push inc sub std insb addr16 rcrl adc sub xchg xor pusha stos andb mov push stc bound mov lcall xorl inc testb fs pusha test mov push pop insl pop shlb arpl imul mov sbb movsl inc dec imul das add popa daa xor pop mov xchg popa or aaa les add cmp test insl cmp ret popa je add inc aas jne (bad) jo out ja outsb mov inc jns insl (bad) jb dec jns rcll stos jmp bound sub sub cmp sahf pop aad push pop ret xor push dec push imul stos gs push stos sub imul cmp inc lahf xor xor inc stos and sub xor mov cmp aaa imul aaa out test aaa sub sbb (bad) push (bad) out out and adc aad stos or and dec aaa inc mov push xor inc pop sbb test inc movsl mov push cmpsl inc sub insb jne dec pop arpl fimull aaa pop or or pop and mov pop inc mov test pop int test push jnp (bad) ljmp pop (bad) subb das repnz mov or movsl pop inc push dec ja xor lahf sub cmpsl aad jecxz mov mov cmp sub les rolb pop xor inc add (bad) aad add push adc int (bad) mov bound xor lcall mov jmp add add push sub xchg xor dec xor xor or movsb sub inc inc xchg sbb push sub pop xchg pop or stos and rolb roll adc inc dec mov in les insl mov add subl mov push mov sbb mov popa dec pop mov fdivs bound dec xor fildl push inc mov pop push inc mov inc inc cmc int3 movsb push xlat xchg mov (bad) daa inc insb dec sbbl rolb push mov dec xchg addr16 xchg test push aam xor inc js xor scas mov iret xor or jo push outsl push pop push push push icebp sbb jo mov fs pop lcall (bad) mov (bad) rorb andl movsl mov lea sub push push inc outsl fldenv push inc add jl fnstenv cltd cwtl test xlat ja sub fiaddl fdivp mov jno pop jmp movsb gs xor mov dec dec ret lea adc loop pop stos rcll or mov test sbb sbb dec and push mov jae or fimul inc adc mov mov xchg or mov push sti push inc enter push stos mov inc xchg mov mov insl mov xchg (bad) xchg mov adc mov push popa ja xchg sub jnp in arpl or mov cmp jno popa inc imul mov dec sub xchg lods ljmp add push adc mov icebp mov lods add push or aad adc addr16 fimull inc pop dec xchg push cmp inc stos dec roll insl mov xchg inc rorb sahf mov les jae pusha movl sti xchg fsubs xchg imul outsl (bad) in jecxz out outsl dec sbb dec sub imul cmp mov sbb fcom imul dec in pop mov cwtl insl insl test xor adc push mov jae or pop inc pop jnp daa and push push push inc or push inc add push call push mov pop inc add xchg jbe fistpl dec cltd dec rcl mov sbb inc mov pop mov or in and pop aas fistl push cmp mov nop jge lea (bad) shll imul cmp mov sub outsl mov rcrb push sbb sti push pop and mov mov push iret mov inc push inc mov dec dec popa rcrb jne cwtl cs inc dec pop sbb or or jmp dec pop and test and inc cmp pop mov add sti inc (bad) push and inc insb sub ffreep mov repz jecxz sbb and inc ret jbe xor xchg xchg inc xor sti (bad) sarl inc mov lea add push shrb mov or sub mov push mov pop mov push or mov aaa inc stc popa pop mov (bad) pop pop inc outsl aam push pop arpl imul jge aad movsl push arpl push (bad) imul (bad) lock bound xor xchg inc jne outsl nop (bad) sub add inc bound rcrb popa rcr cmp or inc fsubrs jg shrd rolb mov insb jmp dec dec sub push mov mov subl scas mov stos adc insl mov jne pusha stos push imul movsl int push or test roll lds fdivs flds imul pop icebp inc es aad inc dec jnp test movb orl aad push dec push push aad mov pop insl jge (bad) in popa push imul loopne adc adc dec cld push lea addr16 popf push popa pop addr16 je fcom pop add test int pop pop and inc and imul sub sub inc xor dec inc por jecxz loopne and mov in outsb cmp add xchg mov cmp add rorb pop cmp jmp mov imul jnp and xor xor fstpl lcall in lahf sub inc mov mov cmovs add cmc idivl sub mov jns daa cmp dec inc lcall adcl fisubl xchg gs scas or push andl addr16 insb adc mov xor dec mov or roll dec jns inc jno jecxz and xchg pop (bad) mov inc cmpsl arpl xchg stos lods xor push sub icebp pop lds fistpl arpl mov fadds pop push add adc mov pop pop pop (bad) lods sub popa adc int3 or adc mov arpl ret call sbb mov cmpsb mov pop fiaddl loop shrl xor jbe outsb arpl popf psubusb dec popa outsl imul push cmp outsl aas xchg mov adc dec push or test sbb xor das and addl mov jae push aaa dec and cmp push ljmp mov dec mov lods or push lods push push jbe fsubrs daa push mov push and push dec pop sbb dec fnstenv adc mov and or pusha cmp and movsb xchg push mov add arpl int jbe imul insl xchg xchg imul or xchg js (bad) js dec shlb push gs sub test out adc sbb fist adc push fstps push movsb adc inc aad adc inc imul inc mov sbb push mov ret jo push rolb push stos cmp dec popa sbb in mov in dec dec roll inc mov dec or dec fidivl inc inc push inc sub inc and jae insl mov or mov pop sbb mov pop inc dec pop inc mov dec xor xchg inc pop ja jns add cltd mov (bad) lods aam push fxch lds push xor inc mov jae and insl dec jne push insl lods mov cmpsb paddsb gs xorl (bad) mov mov fs nop imul rolb dec mov lcall pusha ds dec mov scas dec dec dec inc push dec dec mov jns lds or mov pusha add sbb sbb mov dec les pop fist bound and pop mov sti inc pop fldcw sbb push inc adc dec mov add sub mov shrl push nop push push jnp popf dec dec scas mov mov mov push rol das adc push push inc xchg dec xchg pop test mov or mov scas dec mov inc jne cmpl popa pop push mov ret mov bound addr16 adc adc gs jo test mov rclb add dec add pop test mov arpl mov orl jg pop or dec dec push rcr sub and cmp push jmp dec (bad) xor ret movups push pop divl adc pop je pop addr16 js or push add mov aam or xor nop or fisttpl push insb push mov scas jno outsl and mov xchg mov jne mov adc cmp mov inc inc add inc dec inc push arpl insb and outsl movsl add lods aas push mov dec inc lcall insb adc aas fsubrs inc pop jae inc movsb adc push dec sbb sub inc dec movsb test jb mov mov mov in (bad) xor lret outsl dec add (bad) push mov push lds xchg dec in jno cmp xor mov movsb mov gs pop fcom jbe ja pop push (bad) mov mov adc pop inc leave push rorb pop dec pop push test jge push or sub add or mov pushw imul jo jne xchg jp jns ja push lods jbe inc (bad) mov pushl inc push xchg push push sub jnp add push scas push mov leave std push faddl popa lods fisubrl stos lods sub jae inc cmp mov dec mov and pop imul push test stos lea push lods fisubrl int js mov pop mov or fsubrs inc sbb (bad) (bad) push loopne or push sbb aam and dec mov test dec test lea sub mov subb jns or stos leave arpl cmp test mov (bad) inc imul jge lods rorb push sbb or jo rcrl loopne pop adc jno iret xchg in or or add push mov and fimul pop fldl add dec (bad) cmp arpl mov dec lcall or ret imul scas push je ret daa xor jg dec sbb insb add sub mov movsl push dec adc sub or mov int les and pop lds dec movsl aam dec pop xchg bound pop rol shrl lret outsb xor fsubl push push movsl bound arpl adc jmp test mov inc psrlq or std push stos add jecxz inc aam mov push cmp xor sbb in sbb mov (bad) xchg jne inc xorl loope inc jge bound push loope movsl mov pop push or mov mov std push mov cmp push inc cmp push adc fadds bound icebp jbe or push xchg fsubs jb mov (bad) add es inc mov push dec add push (bad) dec loope jmp xor and shll sub mov arpl (bad) dec loopne adc xchg fmull push push pop shll pop sub push adcl or test inc or pop xor push xchg (bad) dec les pop dec dec pop ljmp popf adc adc imul sbb push movsl cmp push mov mov ret icebp pop rorl xor ss pusha nop jne dec push mov inc and pop inc ret cs and sbb gs dec jecxz sbb push lcall dec iret pop add dec add add push xor icebp add arpl xor or adc dec daa test pop inc movsb leave lds inc xchg mov ret fs imul shrb jns push mov sub je pop sub mov (bad) pop xchg mov xor mov push mov jg fidivl xor test mov xlat pusha mov xor mov stos push mov add mov sub movsb das jne bound xchg cmp adc adc jne fistl loope lods arpl mov xor jo push xchg jb adcb inc xor xor push sbb xor rcll xor nop and scas inc aam push insl rorl sbb test ljmp fwait scas pop add push insl mov sbb jge push add push jne inc mov pop mov or adc shrl divb dec iret push hlt (bad) xor dec mov add insb add add add add push sub (bad) add jae push and sub dec je pop mov xor insb xchg lods adc mov roll andl xchg push push sub adc xchg cmpsb lods sbb movsb inc imul jo cmpsl movsl or fcomi sarl insl and iret sbb mov icebp and xchg insl pop pop stos ret push xchg add add xor and inc imul xchg adc dec dec push popa mov dec inc imul push and lods xor dec push dec xchg lcall fadds sbb lret in sub dec mov movsl lea arpl imul (bad) adcl push pop inc pop shll lds or (bad) jbe pop test addr16 push in adc pop and push test les test inc jae sub inc xor xor aam adc or test inc push imul adc test std addr16 sub cmp jo or dec imul fwait popa dec cmp (bad) lea adc mov ja push and jge (bad) bound pop popa jecxz adc or fmuls pusha inc movsb loopne ljmp leave dec xor pop ret iret roll dec push add rcll outsl add push rcll das add dec inc je add add add adc push roll inc dec add push movl xor iret out xor fildl inc inc ss mov inc js push insb add pop lahf cmpsl stc pop nop test stos shll iret repz mov repz out and sbb mov add cmp inc inc or xchg add pop add fwait jnp fdivrl add fisubrl decl push and fisubrl xor (bad) pop jno ja popa sub inc aaa add push data16 inc mov aas xchg pusha mov mov rol js jns cmp xor sub and cli xor out add loope dec push jb sub pop data16 jbe adc out pop shlb dec inc insb fistp pop mov out fs (bad) bound aaa jae js and mov test lea orb sbb cmpsl push add iret pause add mov pushf out fdivrs sahf idivb cs mov sbb enter jbe popa pop push sahf xchg pop subb push cwtl sahf out sahf (bad) mov enter lahf out fnop fistl add repz repz inc ficomp repz out out lds sahf out sahf mov lret cmp out call sbb cmp repz xor dec rolb mov outsl or xor js add mov outsb rcr ret dec repz or cmp repz push (bad) push enter add pop lahf mov pop mov cmpb loopne and or add mov and nop or add add cs or adcb mov inc cs or loopne repnz and enter enter inc push sbbl add jb pop and add sbbl adc xor add cs or sub insl (bad) dec push mov pop sbb test js fistpl call stc xchg insb dec fdivs add xor ss fldcw (bad) push movsb add (bad) lcall cmp out xor xchg insb dec mov adc (bad) mov add aad fdivrs push mov test add addb insl mov sahf fisubrl call xchg int mov ss jne les (bad) dec sahf xor push pop or leave out pop inc add mov andb mov sub xchg cmp mov push mov sub fwait pop jb inc pop std in add xchg out dec call es inc fimull push dec and ds fcmovb pop push je add pushf dec jae int add adc xchg fs stc (bad) loopne cmp add add pop mov push mov or adc xor mov inc (bad) ds and aas sbb aam dec aam (bad) add inc add stos push stos add sbb (bad) or add or xor jle ficomp add xchg fldt add mov push or jmp push adc (bad) mov cmpl ljmp adc xchg push js pushf cmp outsl inc or adc (bad) insl test push jne jl or inc test push insb dec or loopne cmp add push inc mov repnz jl pop add push sti push loopne aam das shl hlt and push push dec ds imull sbb test ljmp fidivr scas dec nop xchg inc dec dec push arpl xor sbbl daa jmp ret outsl lds out mov nop pop lahf dec and es repnz push cli (bad) and cltd or int3 push jb aas es mov mov pop into inc pop dec (bad) inc or push imul xor dec push lods push test imul add inc adc xlat xchg mov push insb dec xlat mov push lds push xlat inc inc xlat or cmp das push insb add mov or add loope xor stos aas or shll ja sbb inc cs rolb aas inc add sbbl push mov jl add pop fbstp push repnz pop insl mov fnstsw xchg scas add iret iret push enter orl outsl aas jae and mov pxor stos mul cmpsb (bad) dec dec outsl pop pop es dec add movl dec adc xchg xchg inc ror push pop cli push jecxz pop push push call push cmpsl sarb scas mov push in sbb push or sub add lahf aas out add jne call or push mov into sarl (bad) sbb push lahf xchg test addr16 mov pop mov add pop inc xor rcl in in push push or lock jbe push out pop test fwait popa cmp out add in stos out orb add pushl sub adc ja push loop push data16 imul frstor imull stc or or inc sbb add pop and ja add add enter jae (bad) aad jnp out mov popl add popl in addb add mov xchg dec in adc in outsl jns cs lods cmpsb adc mov sub adc push push or fild cld rcll pop pop decb lcall mov cmp pop aaa ja sti push fistl cmp fcmovu rolb mov clc add lock jg rolb adc pop push aas xchg imul sbb add lret movsl adc mov push or push mov pop (bad) add add add outsb add cmp add jno inc (bad) pusha cli add mov dec push mov mov dec push inc inc das (bad) (bad) decl cli jp testl add int lock stos add insb outsl sti add cmp les in (bad) int mov sbbb imul pop or add mov add inc or addl mov add stos cmp add add add js sub stc pop orb stos iret (bad) jmp stc push xchg add scas mov sar call add add xchg (bad) cli cmp testl mov ret fisub adc hlt das and (bad) xor insb dec jo cltd push and sub adc push lods jnp (bad) add dec mov sub add cmp add add ja jbe or push push add imul mov cmpsb mov add int imul add lds push fcompl or aas insb insb push test add jbe push jo dec or mov lahf aam pop insl or push adc xor lods std or inc pshufw cmp sub mov add mov loopne inc dec pop adc mov popa adc stos or xchg add add pop lcall test pop pop incl add xor sbb lcall mov adc neg sbb (bad) cmp push je dec add enter mov inc pop sub add push es push xchg xor decb sbb pop mov push lea sub fcoml rcl add loop out and xorl dec lds add std mov js imul jle insl push dec pop dec inc stos push fsubrl push push inc cmp das mov add jl sbb outsl outsl jge inc jmp xchg das das dec inc inc bound cmp adc jp and add sub pop fistpl or cmp mov dec add add pop add sub (bad) lods pop leave in pop push push rclb call popf add roll sub testl adc inc mov pop sub shlb or jo push sub lock rcl mov nop icebp jb hlt xchg pop dec call jnp or xor jle mov add or or out pop sub sub shrb sub dec jecxz jns xor sub or cmp mov pcmpeqw mov xlat add lret and ljmp int das xor mov lret rorl adc and pop add (bad) mov and mov cmp inc sub pop (bad) incl imul popf add inc gs xor aam les mov pop pop mov add popa iret loope xor mov sub shrb testl divl adc les pusha frstor jnp sbb adc (bad) adc test xor sub faddl push sub sub pinsrw sub fbstp fwait push mov daa rclb pop mov or inc and add jp imul jecxz add imul add fnstsw cmp xor (bad) in ds lods lea cmpsb jge mov movsl repnz mov (bad) dec jnp xchg add or imul add cmpsb imul mov pop fwait and add pop sub add cmp cs orb cmpsl das gs jge inc sbbb pop add jo cs iret pop into cmpsb pusha pushl mov pop mov pop add push jno pop sub add xor mov ljmp cli sub cli sub in lock mov sub push cltd push adc sbb cli and fstp adc or stc add jo jae and or jecxz pop inc sbb cmpsb dec mov ja push add shlb adc or loop pusha dec pushf ljmp mov push sub decb outsl or add xor jae ja push push push lods add xchg fstpl ja push dec pop fcmove pop cwtl lods add loopne (bad) cmp cmp (bad) xor cs dec inc rolb or lcallw imul add lret cwtl cmpsb in cltd addb push inc add inc mov xchg cmp das dec adc nop ficompl in and (bad) sub repnz lods stos xchg (bad) jge fldenv mov nop add sbb loop pop add dec call pop std (bad) jg das or divb lods sti push ret sti test sti dec mov or or fcmovnu testl fistpl je rorl cld adc das out adc add pop jbe aam xor mov pop adc (bad) pop xor xor xor jp adc aaa (bad) rorl jp fcoms add push lret jp lock pushf mov add jbe fild pop sub add pop add das jbe addb in or mov add out and ja movsb loop add cmp sahf dec add in cs dec inc roll cltd sbb xor lret das jae das adc stos add or pop fcmovu ss push push or xor loope popl pusha inc pop lret nop (bad) mov push add lods in mov xor inc mov adcl add xchg clc and pop sub and int outsl jecxz (bad) sti cmpsb jecxz mov (bad) jg xor (bad) or cmp push and add push inc mov inc or xor xor cmpsb jae jae adc pop sbb push lods sub nop mov jmp das sub sarb das stos push and sub mov pushf add add cmpl subl (bad) pop cmpsb imul jno and cwtl jnp add or mov les and cmp inc in add add stos stos popa add mov push add mov cs (bad) or das cmp (bad) bound sbb aas or and push and rdtsc adc mov mov sub cli pop sti aam stc or adc cmp sub fdivrl adc int3 test add adc orl imul sbb adc sub shrl mov push fs das cmp inc xchg ja das stos add ja mov clc (bad) rcrb dec enter xlat xlat decl xchg sbbb arpl arpl imul loop arpl and (bad) xor mov jnp adc inc add test pusha aam gs dec pop xlat and rolb add dec inc iret insl sbb pusha add add jbe add mov adc xor inc jg add push adc dec mov lcall pop pop xor push sbb add outsb pop xor into outsl push push add mov xchg push xchg popf pop jne jl lcall lods add sbb add insb adc fisttp subl add fildll pop clc (bad) or inc or insb jae push insb pop clc gs jae pop clc inc or shlb aaa nop testb xor das out xlat in or pop sub faddl inc loopne std incl pop dec dec pusha push push addr16 pop gs pop and dec (bad) mov cltd add ret incl dec (bad) xor sbbb pop bound xchg aad cmp mov (bad) fild mov xchg cmp lods push lods xor mov and loope (bad) cmp imul or jge adc mov push xor push cmpsl adc fwait jae mov aam fwait dec mov add xor js sub or (bad) push pop pop (bad) cmp das pop mov pop sbb (bad) add or nop test mov fmulp test add cld add mov ret xchg fild cmp inc inc sbb fwait push mov dec dec dec and adc jg pop pop pop adc sbb out mov rcrb pushf adc rolb scas arpl inc orb and addl push addb pop inc add iret sbb roll dec or fwait cmpsl sub or pop gs mov addr16 (bad) xor add add mov cmp sbb and xorl nop inc sub pop and nop push insl push (bad) pop and adc aad in scas (bad) stos bound jmp xorl push add xor dec outsl pop repz push js inc adc out add mov aam inc mov (bad) lea pusha dec adc in add mov mov sbb or adc or lcall xlat or and lahf xchg xor adc or notb add add add movsl lea or sub repnz pop cs or das (bad) xor or add push roll das mov incl sub add add test adc xor or inc adc push arpl adcl and pop sub iret mov mov adc sub pop fidivrl adc bound xor outsl in nop xchg or and add mov jbe cmp add add (bad) int3 sar stc add scas mov andl adc addb and cs pop aad pop loopne xor add inc das dec adc push sbb lcall test sbb xor push pop push shrb or add add add and test add das js inc add push inc push dec push pop sbb xchg test add pop shrl add int3 faddl inc insb adc add inc and rcrb push add add push xchg add add xchg xchg or xor fcmovnu jne dec addr16 imul dec sub jbe mov xchg add imul adc pusha iret xchg aas movsl pusha insl or movzbl mov xchg push stc movsl lods and inc nop (bad) stc xchg pand shrd xchg adc adc adc sbbl push lods bound xor add mov stos add (bad) fimull int lahf outsb into add xchg push and xchg imul mov (bad) (bad) loope test aaa add out fbstp (bad) outsl add adc push pop push bound mov add add add push push xchg add sbb int sbb ss outsb add sub mov xor xchg insl mov mov pop pop xchg sbb mov sti sbb dec ss (bad) fisttpl mov pop ja xchg mov nop (bad) or insl les mov daa aas fldcw test xchg or push mov push xor xchg out push (bad) je add push pop pop stos stos push outsl jle xor enter push or add add outsl xchg add sbbl roll add jge jle adcb outsl adc fnop scas fiaddl add mov movsb dec add jbe add xor add int push add in mov sub pop insl xchg pop subl mov mov addl punpckhwd movsl xchg adc xchg bound sub pop pop imul movl add adc add xchg pop pop mov mov xchg fwait adc sbb mov and push xchg jg inc or pop stos stos outsl jg stos inc orb call mov dec dec jl out (bad) add stc in push push (bad) (bad) fild sub and imul sbb add add dec call mov add jns inc add enter shrl jmp pushl loope lea mov mov mov mov fdivs add mov aad pop rol ljmp add fistp enter data16 (bad) stc fild icebp add faddl flds stos add sysret mov jnp jbe pop sbb or add in add inc push adc push add movlps cld and add or mov in mov add add add adc sbb push add (bad) xchg test jns gs ret test sbb mov pop or lea frstor mov fisttpl xor fcoms or add add add push sub adc rcrl adc or and in add push sbb xor (bad) sbb sub sbb adc ret adc pop sbb or add pusha add (bad) test jl xor fwait and push cmpsl add (bad) mov dec cmpsl xor jg lds loopne mov xor dec push inc lcall loope add mov inc dec cmpsl out push in (bad) mov cs out in add add push jo (bad) loope add cmpsl jbe add adc adc (bad) mov out dec insl pop mov add and mov dec pushf add fnstenv add cmp and adc mov sub outsb adc cmpsl ret add fs (bad) mov and sbb cmp mov and not push jmp adc sub and and outsb adc cmpsl sbb dec lods mov and mov adc add push roll push nop or inc mov mov push lods add push (bad) mov cmpsl lods adc (bad) inc mov pop sub ljmp and shrl mov mov push lods and in sub inc mov or push in inc jmp mov in imul mov mov and idivl inc add out divl or adc out test in insl add stos imul sbb inc sbb or and test xor mov mov push xchg mov xor push xchg sbb add mov imul aas (bad) pop mov imul rolb fbstp xchg push mov imul cwtl out mov push enter ret sahf je outsl and xor push pushf add ja movsb gs dec dec aam mov or incl in (bad) (bad) inc cmpsl mov ja mov (bad) mov bound pusha sbb pusha (bad) cmp sbbl mov jmp fnstcw lods je scas jb jbe mov scas jne lods jae lods jae mov sbb sbb mov fadd ret mov mov popf mov lahf mov sahf mov shlb mov out iret popf or mov jg mov std incl mov movsb insl mov push cmpsb outsl mov outsb mov insb mov jg sti movsl insb mov outsb sbb mov fistpll mov jg mov loopne mov mov loop mov cmpsb fstpt mov or mov lods notb mov mov xchg cmpsl popa xchg sub xor (bad) lcall mov lcall in mov jecxz call out mov ljmp mov in jmp (bad) int3 mov mov mov (bad) incb rorl arpl ljmp dec mov loope fcmovnbe xlat or xor mov lods jnp pop mov mov loop xor mov mov xchg (bad) std sbb in in or pop call cmpsb fsubp mov fwait or mov mov sarb test mov pop pushf hlt in (bad) or xor mov fadds test pusha xor adc lret cmpsb insb mov inc in inc popa add sub shrb mov push mov lods pop mov mov (bad) adc adc aam cld cmc in aam adc jno fild xlat mov push mov mov adc cmp (bad) jmp mov push pop lret testb mov stos or or lahf mov cld loopne add pop loop (bad) fnop (bad) fcmovu rcrb sahf mov dec orl cmp push aad cmpsb in roll sti in or or cld std add pop (bad) clc cmc idiv hlt cmc sti fildll aam mov (bad) cmpsl mov nop add insl repz in stos mov lea pextrw jns enter aam (bad) into iret jnp or pop (bad) std aaa jg xor (bad) div clc clc repz not stos fcomp push lds mov xchg mov mov sahf or (bad) test popf sti (bad) test rorb arpl mov mov sbb xchg mov lods jle add jnp pushf adc (bad) pop mov stos jl push adc mov pop add mov inc aad (bad) mov ja add cwtl mov and (bad) sbb iret test loope std sbb pop mov jmp mov mov les sbb in ret pop and mov mov add int mov int3 mov sti adc mov mov (bad) aad push lods loopne mov add leave mov xor test mov or mov lahf popf fs or jne add fwait out lcall xlat pushf adc loop repz (bad) fwait push aad mov add ljmp insb jbe push add and add sti int mov and out mov add add xchg cli lock (bad) mov inc rorb lds (bad) lret fs shrb jno adc sti aad mulb or add (bad) cmp dec or or pop mov and add or or adc or push adc push mov fistl push or fildl adc pop inc add and in dec lahf push or or adc int int3 add add and or add or cmp lods mov and or fwait sub pop pop or addr16 in mov inc mov in insl iret mov adc add inc cmp inc cmp out in adc or or push push inc pop or in rolb (bad) add or mov pop test rorb inc push xor sub jg mul out mov (bad) mov jo add test into jnp inc mov jge pushf dec addl xchg sarb jns xchg cmp fidivr fucomip outsb adc mov movsl loopne inc (bad) push out (bad) jae (bad) jnp imul inc adc rcll add fs mov out (bad) (bad) add sarb sub add pop movb jo nop movb adc add (bad) into into add (bad) imul dec push pop (bad) div cltd out add inc inc xor pusha adc add add (bad) (bad) pop popl mov mov movb (bad) xor (bad) or pop out add sub (bad) iret test (bad) mov out lods add (bad) into sub jo mov add or sahf sbb (bad) dec pop push in inc pusha jo (bad) add (bad) mov and (bad) (bad) (bad) cmp cltd or testl mov push insb mov or arpl (bad) mov (bad) add addl push arpl fbstp xchg out pushf xchg (bad) sbb jle sbb out andl movsl test pop (bad) mov movb test movsl rolb test jo mov fs fisttp add jnp fiadd xor add imul cmp lods pushf mov inc scas fs outsb and (bad) repnz outsb inc jo mov inc jo lods pushf push movsl pushf and add js out ror movsb movsb (bad) sub mov mov mov clc (bad) (bad) incl aam mov (bad) std repnz icebp stc fnsave lret iret jp (bad) fldt int3 ja sarl (bad) (bad) inc popf cli out idiv hlt stc in ror aam nop leave xchg mov mov test lds xchg les pop add or mov in int repnz sbb xor in ss (bad) ljmp sarb gs jns (bad) xchg inc fidivr jmp jp (bad) jl insl inc pop fiaddl lds mov fmuls (bad) lcall ficomp xlat scas mov les (bad) adc call push pop stc (bad) or (bad) aas jecxz inc mov ret mov add jmp es cld out rcl out aad push add fisttp jmp lret std (bad) jmp jle lods popa adc movsl pop out sarl loop clc loopne mov cld pop push fisttp fisttpl adc (bad) incl jbe mov dec std leave add aam out fsubr out (bad) fstpl loope cmpsl sub icebp (bad) (bad) call daa jmp inc ret pop addr16 pop lret popa (bad) xchg add data16 imul scas aam out lret dec mov movsb ret incl int3 out leave leave mul in rcrb xorl xor iret in into fistl pusha into popf rcll dec mov lods sbb rcl (bad) stc stc icebp rcl out lret lret inc adc loop cli sti int mov sarw adc imul cmp data16 jp jae mov xor out add out in (bad) lods dec rcrl repnz jmp (bad) incl adc jle fstpt shrl cmp fdivrp repnz sub cwtl out popf mov in ljmp je pop imul jae mov cmpsb jb cmp pop adc jmp js ret out (bad) xchg mov ret fcmovu (bad) icebp repnz xchg cmpsb imul mov fsub (bad) pusha ljmp (bad) (bad) popf leave xchg (bad) jmp and scas cld mov cmp cmpsb outsb repnz popf (bad) jmp sbb lcall scas (bad) ljmp lcall push test imul andb lods add xor repz scas loop sbb push lock lcall mov pusha std shrb not xchg out into loopne push jne add pop rorb sbb dec cld call dec jmp arpl stos mov push sub jo (bad) fisubl fucomi in stos dec aas fmuls jnp xor addr16 loope out fcmovne ss pop imul and and imul out lods fnstsw lcall out inc in lods mov add movsb imul test mov out out fsubp sbb loopne jmp (bad) jmp jo or in and je lcall movsb imul mov (bad) clc neg or or fdivl add mov faddl scas sarl add xor sarl lcall imul mov cld clc ljmp and add dec cmp xchg cld hlt hlt addr16 xor lock je (bad) movsl (bad) in mov jmp push cld in imul clc adc (bad) ljmp imul hlt clc out (bad) in call or scas mov push cltd loope push std data16 test dec enter mov jb pop adc insb loopew int3 std add or fwait pop icebp sti insb fsubl mov (bad) incl mov data16 sbb dec cmpsl mov cwtl pop int3 mov jle stos jno (bad) fnop xchg (bad) or loop xchg clc (bad) (bad) (bad) mov int cmp js ret aad jle shlb loop icebp ljmp sub jmp repz hlt fnop test bnd scas data16 mov in lret mov add loop ffreep sarl (bad) lods fwait roll daa mov sub add fwait (bad) pushl sub mov lds leave mov mov fidivr out push sbb shlb jg aas stos mov movl push fnstsw and add data16 add jg (bad) (bad) aam stos (bad) (bad) pop mov (bad) decl lcall (bad) icebp cmc cld repnz fdivs leave js sarb fstpl add mov outsl add mov (bad) incb cwtl leave xchg (bad) les inc mov mov popf (bad) out mov lea xor pop inc lock faddp ror sahf lds xor (bad) pop add lea (bad) adc push jle lret xchg rcl stc (bad) fist mov mov (bad) out fcmove rcrl lds mov sarb jp adc jl int3 lods cli (bad) mov ja iret jnp (bad) mov loopne cld repz call adc push push in out mov nop pop mov mov or ret mov ljmp lcall fidiv pop outsl push push mov aam scas fdivs adc iret aam cld pop (bad) (bad) jg inc cmc repz call ret fidivrl lret cltd jns jg cld (bad) (bad) (bad) mov adc inc shrb not jge int3 jg lds jnp or or add (bad) (bad) (bad) incl shrb pop fcomps fistl fstps fdivs clc inc enter in (bad) ds movl fildll std (bad) cmc (bad) adc dec jecxz lcall (bad) movsl xchg out cmpb mov repz cmc jecxz in ror (bad) iret add xlat xlat add lods fcomp in (bad) in lret lret repz cli adc pop (bad) pop out loope (bad) mov jb (bad) (bad) fisttp imul push adc push loop outsl sti in (bad) ljmp loop neg mov ljmp clc loop mul (bad) out aad fildll (bad) jae add (bad) (bad) mov jle lods and lret add xlat dec repz in fcos in xlat icebp mov sarl fdivr pop or aam into test (bad) hlt in fdiv cmc fidivl pop add ficompl dec sbb xor rcll xor mov mov addl fimul push movsb dec test (bad) xor push sub xchg rcrb mov div cmc (bad) cmc fstp in mov vsqrtpd rolb or (bad) repz (bad) (bad) stc clc dec xor xchg mov mov xchg sub (bad) int jns and mov mov add aas int lods test ljmp (bad) xor mov dec pushf inc mov imul out (bad) cli cli xchg lds movl or (bad) in ret aad (bad) cmc hlt (bad) (bad) jl fnop lea sbb xor ret jns (bad) sti loope cmp js add neg lcall jle lcall imul jo jecxz scas call push mov lods dec jecxz pop lcall jae xor lcall dec incl aas dec (bad) repnz je push es outsl (bad) imul xor cmpsb jecxz xor shlb call lcall lcall and jb jae fisubr mov jne add cmpsb jbe inc sub incl mov stc out (bad) icebp icebp mov mov jo jle mov push lods enter mov in fstps jmp clc cld fmull ret cmp xor jae aas jo mov insb jne (bad) outsl decb dec iret inc in leave mov (bad) (bad) inc xorl lds mov vpinsrw jecxz lret test shrb stc mov or sbb mov into and (bad) scas push mov in dec cmp roll imul mov add mov ficomp subl jb stos xchg cmpsb test loop loopne (bad) dec (bad) xor rorl pop jb int3 jns xor repnz cmc out lods add (bad) out lods sub pop add lods lock hlt aas xchg cmpsb imul mov (bad) jno sahf out inc call and rol in int add adcb into inc (bad) fistpll shr int add cmc aam (bad) fsts lds fisubl cmpb sarl jae icebp push add repz dec cmpsb imul jno mov mov cmp jl fcmove in aad jmp sub cmp lods aad in les adc cmc ffree jmp jno int3 inc fisubl testb pop cmc jmp imul dec (bad) add lods loopne in push aad repz (bad) std cld pop push fnstenv cmp xor shrl mov sbb cmpsl (bad) xor lds mov xor cmpsl imul fisttpll aaa mov (bad) in repz in (bad) add cmp out (bad) (bad) (bad) out sub mov loopne fdivp in fcomip cmc in jmp jae lret add push icebp aas fisubl lcall repnz cmpsb out test lcall or cmpsb fwait mov loop add and xor jno xor cmc cli not (bad) xor xlat cmc scas mov sub lods (bad) xor push dec cmc cmc cli (bad) decb and out cmp jbe (bad) xor lret ret mov pushf addl mov rol jo imul pusha lcall test dec cmc div xchg xor cli cmc fnstenv xchg pusha mov loop add call sub add jg (bad) loope cli out in (bad) rcr (bad) fild fistpll jb sarl xchg push adc xchg imul push jbe (bad) test cmpsb mov jno push lcall dec stc or fcomi ljmp jmp add bnd add fucomi cld (bad) (bad) call lahf pop (bad) aas add jno movsl pop adc push lock (bad) aad mov fisubr lahf add icebp mov sbb aaa shrl adc das (bad) jmp stc out cmc add xor dec in les jg es cmc cmp (bad) (bad) fcmovb mov (bad) (bad) jg (bad) jb test pop xchg arpl adcl pop int3 test ffreep add incb leave test add enter mov shrb into (bad) (bad) (bad) (bad) jge int3 jbe ret lds icebp aam hlt in lock idiv out add add out cli ljmp (bad) fcomi jmp cmc jecxz jmp jo outsb stos push or pop ficompl or icebp std out pop xor adc aam ret push (bad) fnstsw mov mov ja (bad) jno mov and bound xchg pusha sub sub add inc mov add xchg ljmp sub jae enter mov test das clc lcall faddp leave fdivrs rorl cwtl test sti cli (bad) (bad) out enter add mov fstpt fdivs lock loopne mov shl leave leave shll or sbb mov pop mov pop iret mov out fnop sti out out (bad) (bad) mov (bad) in xlat into leave xchg pop mov adc outsb adc jle sarb sub (bad) sub sub leave xchg pop push call or out out mov xchg out cmp mov mov mov insl ds dec mov mov arpl (bad) fmul cwtl mov mov mov cmp add imul add scas add add adc lods add pop icebp xlat aam test adc add push or pop push sub inc xor fiaddl add pop subl mov adc nop push add add nop test test add xchg add mov xor sub or aas and sub repnz es fildl add and dec cli add inc push and orb orb pop add inc inc inc orb inc orb add lea test cmpl add dec add outsl pop out mov pusha and mov mov test and dec add aad ffreep popf mov negl mov xchg dec add (bad) fcmovnb fdivrl cmpsl arpl fnstsw (bad) (bad) sti mov pop sbb push adc les (bad) test imul dec insb sti xchg dec push fwait dec in mov and stos sbb mov (bad) dec loop test jne enter xor lds popf push add outsl test je mov mov (bad) call iret mov mov cmp leave lods cltd dec pop and push add add outsl sahf loopne mov push or mov outsl sub icebp div fistpll lock loopne add cmc out mov cmpsl pop nop call outsb out mov es cmpsl (bad) std stc call ljmp fcomi out sti clc icebp rorl adc xlat shlb xadd add out loop div enter mov vpsubd cmpsb fisubr lds test xor lock cli stc mov daa out in out mov cmp (bad) movsl rcr mov (bad) jo ljmp (bad) jae iret jne leave stos loop lods repz (bad) jns pop les add cmpsb inc dec (bad) ljmp adc pop adc push jno inc add incb cld cwtl sti test std or imul adc mov pop js dec scas imul lcall add out shrb loop push sti fistpl add add outsl sti div out and mov imul (bad) call enter jg stc pop outsb cmp push pusha incl sbb idivb mov roll pushf fwait (bad) fadds jno insl decl outsb outsb pushl incb push insb lcall imul ret outsl (bad) jmp xchg pusha enter stos imul js or add loope aas lret pop outsb (bad) (bad) (bad) decl mov push lret nop pusha push lret mov push mov dec iret xchg push add nop mov decl xchg testl aam popf aad (bad) (bad) mov imul fadd cltd jmp mov scas pushl mov xor ljmp lods outsb js mov jmp call mov (bad) fistpll (bad) sti out cld in add jbe ljmp call mov nop xlat lahf outsb out negb and pop shr jecxz mov adc (bad) jle jmp cli pushl divl outsb xlat rcrb fcmove test mov cmc loope std loope (bad) in ret lcall push pop lods mov bound notl cmpsl xchg jne push int3 call push mov inc lret incl shrl (bad) mov iret (bad) out xchg pop lock sbb pop lcall push unpckhps push fnop add jnp or fldenv in pop jnp outsb add (bad) mov aas leave lret in xor or add inc jae and rcr (bad) (bad) (bad) mov pushf add mov add scas popl ret add scas xchg lods xchg outsl mov incl shrb cs jle mov jp mov outsl (bad) fistl lods xchg push add popa add push lea lods mov pushf mov stos xchg mov test out mov pop out pop test inc int mov adc out or sbb in or adc adc pop push idiv inc mov adc sbb sbb push sbb movlps (bad) or adc adc sbb sbb push pop fiaddl (bad) dec sbb ss shrl adc pop or xlat or pusha adc add add sub pop inc jno inc add out adc addr16 push pop jmp or add adc push add adc xor nop add sbb adc or data16 fsub sbb add or nopw add pop shl sbb adc or xchg or adc adc stc lea sbb add adc dec jno inc add mov adc int test and popf sbb mov pop push jecxz push add add inc dec aaa jg loop inc jg data16 scas jg (bad) mov dec pop sbb mov and mov mov outsl rorl and pushl dec inc mov push ret push pushl xchg dec add jmp add mov es insl add roll cmp xchg add mov add mov add xor cwtl pop add les mov outsl mov inc iret fwait add mov addl sahf pop add movsl imul jg add mov add add xchg add ss mov leave xchg lds push sbb sbb push add mov or ds sarl adc (bad) sub inc rolb add in adc add adc lahf or push push add imulb add insl sbbl pushf or sbb lahf pop mov jnp adc add insl insl pop or add xchg fsubs dec push xor fmuls lret adc mov pop and insb adc push pop rcll insl sub and rcll sbb lahf sbb add lahf insb rorb mov add mov add std test lahf pop jb push insb jns pop mov bound jno insl mov mov or add add and bound pusha push add push mov add dec add adc repnz sbb pop add sbb sbb add push sbb push add and cs ljmp sbb sbb add push pop dec xor xor out inc pop pop mov pop jae std dec call add imul and or dec sbb das clc xchg movsl jo fdivrl popf push (bad) (bad) (bad) pushl xchg notl ds orps lock insb addl enter adc (bad) (bad) call adc test adc or mov mov mov (bad) (bad) lcall pop fsubl in in sti xlat sti mov into jns jo out push (bad) (bad) incl cmp cmp fcomps (bad) dec dec (bad) leave mov loopne and out ret (bad) (bad) jg add jle mov cld add jo cs (bad) loope cmpl xchg pop fdivs incl loopne adc or nop enter adc mov incb int3 insb jns inc and stos in hlt dec xor incb fcoml or (bad) incl clc cltd sub add add adcl mov add jecxz (bad) scas add add pop nop cmovo sbbb xchg int and xor mov jg pop jo mov xchg int dec (bad) xor xchg rcrb ja lock and ret push call pop sub or and out dec into mov sbb rol (bad) cmp nop out in out out out hlt lds and and (bad) mov aam add iret out ficompl in add add dec std mov mov add stc pop xor (bad) (bad) (bad) decl mov stc mov cld inc push sahf mov sbb or in and jecxz ds (bad) jg pushl loope loopne jle cmp fstpt add inc cltd lods shlb jbe push (bad) (bad) (bad) decl xor out inc test mov shl xor pop sub mov pop mov clc (bad) inc jns push xchg inc and xchg loop jmp xchg std or dec rclb pop mov insb sarb add add repz adc jle cmc addr16 jns xchg mov and lock sbb pop test pop dec (bad) (bad) (bad) inc push mov pop or adc rorb rcrl push inc sbb or sarb push in xchg push rclb (bad) (bad) (bad) pushl adc xor or sub sbb or (bad) (bad) incl or popa and mov bound pop cltd mov popa dec xor andb (bad) (bad) (bad) inc enter test dec and sub pop inc cli nop fcmovne and mov mov call add mov (bad) mov minps sbb sub mov cmpsl rorl mov adc (bad) (bad) (bad) decl mov popa pop mov sbb (bad) push arpl pop xor sbb sbb sahf sub popa out or pop sbb (bad) nop (bad) (bad) (bad) call inc test in and addl dec mov jp stc les (bad) (bad) jmp mov pop inc lods es and and adc dec and leave xchg in or and (bad) decl dec imul sub rclb imul mov lods and incl nop dec xchg sti leave ret in adc (bad) or (bad) (bad) (bad) call dec xor movsl lahf xor mov sahf aam stos mov lahf pop dec insl mov rcl (bad) incl lcall movsb sub (bad) (bad) pushl imull jmp sbbl xchg rclb jmp ja or decl sub imul sbb cltd dec cmpsb add push xor xor cltd addr16 (bad) (bad) (bad) decl cwtl outsl push pop sub sub lret cmp out push push jae aas aad stos or (bad) ljmp push jge inc push mov jecxz or push stos aad sbb scas into push ja (bad) push std (bad) (bad) dec push pop mov cli arpl mov arpl push (bad) xor (bad) call push inc (bad) jb add sub cwtl dec bound stc in dec jbe sti sbb jnp push inc jae (bad) (bad) ljmp popfw out int push (bad) mov lock pushf dec into and or sub (bad) (bad) call push lods jle aaa fidivrl mov in push in jmp out jne popf inc popf sub cmc cmp (bad) (bad) (bad) cmp jne mov test shll jns or lret jmp insl jle (bad) push mov (bad) out rcrl aaa xor ss sbb lock nop arpl (bad) or imul mov rorl daa mov jg jcxz js ds sbb lods xor fsubrl popa bound (bad) movsb (bad) sub xchg imul je int3 enter fsubrs pushf imul pushl mov lea dec (bad) (bad) lcall xchg ficoml dec xchg imull push cmc push xlat lods dec (bad) (bad) jg (bad) pop adc insl (bad) push insb push sbb or cmp fwait lods les insl (bad) (bad) (bad) (bad) fist adc sub sub push outsb fidivl in cld in or lcall mulb sbb int3 sbb sbb (bad) (bad) (bad) pushl jbe jo jmp loope ret test push sbb jae repz lret adc jbe pop push insl cmpsl mov in out mov mov (bad) lcall aam int3 cmp dec cs sbb pop ret cmp negl jno jecxz (bad) incl ret das pop jbe pop pop sti mov es (bad) xor sti (bad) dec fcmovnb pop loopne lret jnp cmp cmp add (bad) add mov (bad) (bad) cmp jle jle cld sahf sti cmp lret std (bad) clc mov icebp dec add in (bad) mov sbb pop add stos pop xor push das or adc pushl or outsl mov sbb arpl fsubl lcall pop sbb xor (bad) (bad) dec es push (bad) adc adc cmpsb stc dec jmp loopne insb mov pop (bad) (bad) (bad) (bad) stc jge sub xor push je je sub lods in sti addr16 mov (bad) ljmp jb lods push push insb arpl fwait mov cmpl adc or mov (bad) (bad) jmp (bad) fadd cmp out lcall je scas in mov into lret sahf ja stos xchg cmp xor test and ljmp hlt sbb movsb dec sbb test mov mov mov (bad) jg out push jge cli push (bad) xor dec push sub sbb jmp repz push inc (bad) fisubr cmp imul (bad) (bad) decl sub xchg or lret xchg mul and jae fistl mov (bad) (bad) (bad) decl push dec das test js sbb mov aam fbld ljmp mov (bad) (bad) (bad) mov js icebp loopne mov mov ja xor mov sarb (bad) call mov mov std push loop push push repnz fdiv mov shlb push xor test xchg leave lret outsb scas hlt pop mov fs out push aad push jg pop xchg pop lods jo test clc mov sar incl out push dec pop aad cmc jns fcmovu fimul lret in fcomip jg outsb lods negl scas dec mov lock in pop insl dec fdivrp mov pushl push mov mov lret xor pop lods fcomi mov (bad) jmp lret push std lods stos mov es mov push sbbl (bad) (bad) mov mov jge outsb shr (bad) fisttpll mov inc xor lds pop testb push (bad) (bad) (bad) jg scas mov push lea dec cmp fwait subb in lcall ret das clc (bad) inc daa fbld call ret int cltd jg cmc or sub cmp (bad) (bad) (bad) mov insl mov call pop sbb jle xor arpl xor (bad) lcall icebp stc in xchg jecxz cmpsl sahf popf dec aas cmp (bad) dec cld cltd imul mov addr16 iret sahf aas pop je dec mov (bad) leave repz (bad) pop lock (bad) (bad) scas sbb (bad) (bad) cmp loope scas pop outsl jmp (bad) lret in push cmp je dec jmp (bad) mov incl push aad xlat clc xlat cs lahf jns (bad) in vunpckhps data16 and imul pop incl fcompl (bad) js cld (bad) std ljmp (bad) (bad) (bad) (bad) pushl clc pusha shlb pop pxor or roll inc aad inc and (bad) (bad) decl sbb into xchg loope mov adc lret (bad) jns jae out std loop lock (bad) decl pop cld fdiv or mov mov jb stos test (bad) pop mov lcall cmpsb cld lods into fstpt mov mov inc (bad) push repz arpl cmpsl rorb movsb pusha std (bad) ds (bad) cld das testl idivl push dec push jp add addb mov push jne ljmp mov inc push clc dec inc inc push js or (bad) fcmovbe xchg jns sbb adc mov ret sub mov fmuls das and push and les (bad) (bad) ljmp rcrb movsb or push movsl stos add and lret xorl mov (bad) (bad) (bad) ljmp inc mov ja out in fstpl pop andl frstor std hlt fwait cltd fucomip mov fcomip add inc xor jmp fdivl mov jg lods push fstps (bad) leave in lcall mov insl call adc add stos (bad) (bad) jmp nop je popa dec xchg xor jl pop in je adc in (bad) (bad) incl mov repnz sti mov lret cmpb inc cld push lock add mov incl es mov addl mov add in into in jg gs out mov jo ret cmpsb adc cli scas mov loop pop jns adc (bad) ja jnp fistpl and (bad) (bad) (bad) (bad) aas stos cs aas fyl2x lret cmp (bad) lret in cmpsb jmp pop cltd push pop jno idiv aas in imul lcall out mov jmp ficom sub and mov adc sbb (bad) mov ffree mov cmc or pop jmp and loopne push or (bad) (bad) ljmp inc add gs mov movsl das mov pop mov hlt aam jo mov inc jp mov mov call shlb xchg cmp mov clc data16 push mov je iret xchg inc sbb cmc icebp (bad) (bad) call jb dec or xchg arpl (bad) sbb push pop inc add cmp negl and fwait dec loop sbb adc lods fbstp jg xlat aas repnz rolb adc ss (bad) (bad) out mov orb pushf xchg negb adc xchg mov inc js (bad) (bad) mov lret cmp mov inc xchg add mov dec mov mov clc mov aam push fidivr jecxz or adcb sub cld cmp (bad) (bad) cld ficompl dec mov outsb cmp inc rorb inc adc sbb (bad) (bad) pushl bound sub outsb repnz ret imul dec mov mov (bad) ljmp fcomps lahf and mov aam movsb stos icebp push ja addr16 rcrb mov mov inc adc decl push loopne add mov incl ret xchg push inc push daa xchg inc loope (bad) (bad) call and sbb push inc xor mov add mov jg mov (bad) call nop jge and sti pop in fsubrs int lods mov cmp ret decl xor xchg or or push repnz insl inc repz (bad) fcomip in sahf cmpsb ljmp rep outsl lock iret inc es (bad) (bad) (bad) inc jb cli dec inc ret les mov cmp add inc jl mov mov das add jg mov (bad) (bad) call adc mov rcrb xchg dec xlat lods add cwtl cltd (bad) jmp (bad) jae sub pop lcall rorb and push and push ljmp and pop sbb and adc mov add (bad) (bad) jmp push sub mov clc adc and out bound mov pop xchg ja frstor (bad) mov loope loopne push adc mov inc add pop cmpsb mov lret dec push rol mov ljmp in add add jae and add aam (bad) adc scas hlt adc (bad) (bad) decl mov les push sbb jmp xchg or mov shrl call aaa cld incl mov fwait add sarl or add sbb aad fs mov pop adc scas sub push addr16 pop adc call (bad) (bad) incl loopne dec xchg pop push sbb sub outsl dec dec sahf adc int cmp icebp add ret andb push push cmp mov mov rcr lahf mov sbb pop (bad) (bad) (bad) push cmpl das insl loope inc pusha push shll pop jmp and mov loop ret call cld popa in jle lahf clc ffree push mov push pop xor outsb (bad) (bad) (bad) jg add dec mov out das xchg sub push iret push cwtl jne xchg inc ss pusha aaa rclb call movsb stos rcrl jmp pop scas enter sbb pop scas out mov mov call loopne cltd in or fstps jge xchg push and dec call aaa sub pop test inc movsb xchg popl adc cli mov cwtl lahf imul (bad) (bad) (bad) call ss pop inc jg jle lcall push (bad) pusha pop mov (bad) mov pop mov (bad) (bad) (bad) ljmp or test xor imulb mov nop cmp jno push andl (bad) (bad) in pop in mov mov fcoms rcrb idiv int stc cmovbe and (bad) decl jle lcall mov aas jmp (bad) jg pushl inc push sub or or mov stos add pop adc pop (bad) (bad) (bad) jmp fstpt (bad) jo cmp adc mov outsl imul mov (bad) (bad) out js cmp incb or mov hlt sub xchg or xchg outsb lahf jbe loopne (bad) ljmp mov movsb out push in push xchg out mov mov inc pop dec outsl jp (bad) push mov mov call std push roll rcll inc pop outsb mov (bad) (bad) pushl adc sub iret inc imul mov hlt outsl enter push insb (bad) pushf arpl (bad) (bad) call out jl ret loope cmp adc sbb bound mov xchg xchg (bad) (bad) (bad) dec lret stos out jge xor push adc fimul mov hlt xchg popa (bad) incl cld jne xor jne add out popa push or push sbb test (bad) cld jecxz xchg in cmp jmp js mov jecxz insb push or leave lea (bad) (bad) (bad) (bad) cmp in stc (bad) aaa xchg jbe fstpl xor mov push mov pop and pop cmp mov xor dec aad movsb nop sub pop inc inc adc mov (bad) mov xor popa mov push (bad) (bad) call mov imul into stc hlt push mov mov pop lahf ja sub je into and xor bound push add jns xchg sub jae or ljmp lret push sti popf xchg sbb inc dec xor pop or cmpsl sub xchg orl (bad) xchg cmc jo ret mov dec outsb test mov pop pop idiv ljmp stc (bad) repz mov movsb inc dec test (bad) (bad) (bad) call test push out gs int inc adc mov push incl insb pop dec stc (bad) pop lock test sbb push add xchg jb or push mov pushl inc scas inc pusha (bad) lahf and loopne les jns adc push in cwtl mov (bad) pushl adc decl mov das and xchg mov rol mov out mov (bad) (bad) cld call aam pop adc pop xchg and xchg xor sbb push mov xchg ret sub (bad) (bad) (bad) pushl sub push jb bound xchg mov rorb add std push aad cmpsl rcrl (bad) (bad) (bad) stc cmp xchg mov jge dec cld mov aam mov mov int3 stos lods sbb call clc mov int adc jg xchg push aam (bad) (bad) call mov in es mov lahf pushf (bad) xor repnz ret mov or cmpsl xor (bad) (bad) (bad) push push aas fnstenv cwtl mov shll sbb stc test mov sti fsubp decl (bad) (bad) (bad) push and mov dec (bad) insl jnp or fs or xlat xchg pop xchg fdivr fbld loopne pop fidiv lea xchg andb test pop xchg inc lea jmp dec xor outsb mov das add jno xor pmulhuw (bad) (bad) lcall dec insl imul sub mov fs xlat mov jo inc or (bad) (bad) push imul jecxz xor add cwtl jge inc das shrb sub jne xchg pop arpl adc or pop xlat and dec add xchg (bad) (bad) (bad) lcall add sub (bad) (bad) sub addb lea aaa and (bad) (bad) (bad) jmp sbb lret cmc push insb loope in or push shlb imul mov (bad) std or or imul and popa ljmp or in add jecxz fs mov (bad) decl and mov inc push mov lcall (bad) (bad) (bad) ljmp inc dec adc xchg jns and mov or inc cmp loopne shr fcompl in fiadd cmp (bad) (bad) decl test sbb add cmpsl sysexit into sahf popf inc cmp fcomps popa insb and (bad) (bad) lcall cld (bad) mov faddp lcall stc mulb dec mov jl nop (bad) (bad) in (bad) cmp popa dec bound jbe jp cld sti (bad) cld cltd jbe jmp mov sub (bad) decl mov pop add not sahf out dec fstpl add incb pop daa scas mov dec ret or out push aaa lahf or pop add xor sub je xchg cmpsb sbbb nop xchg shlb jo scas and pusha xorl (bad) incl sti cmp cwtl jo push push js in sbb sbb mov mov nop (bad) (bad) call popf dec dec addr16 add lods nop inc adc xlat rcrb mov (bad) mov push int3 or adcl test leave inc rolb sub (bad) (bad) (bad) incl lds adc adc and xchg test push adc aad fucomp mov jp mov insb jbe fs jnp ljmp mov mov loope (bad) jmp rorb jbe imul mov cmp jl out dec jbe leave dec addr16 dec sub xchg mov (bad) (bad) decl loope jns jle push insb mov and stos sub push push inc push aad (bad) (bad) (bad) lcall clc lea xchg dec mov xchg and mov popa mov data16 data16 pop cmp (bad) (bad) pushl jmp dec push dec je fs adc sbb cmc test stos addr16 (bad) mov (bad) (bad) cmp push xor push (bad) lds pop mov cmc sub dec (bad) and sbb aaa loop push jne ss fcomip or cmc xchg push sbb cmp jbe (bad) fcomip ljmp push or push fcoml mov dec sbb sub (bad) (bad) lcall scas sbb sub (bad) (bad) (bad) incl push loop imul mov ret dec loop pop jle,pt and (bad) (bad) lcall cmp sbb or dec mov mov mov jne cwtl test arpl (bad) (bad) decl cli sub mov inc aam pushf lods (bad) es xchg inc xchg push add sahf jae mov (bad) call into xorl and lock das jg mov rorb mov (bad) in (bad) ljmp mov fbstp stos outsb add sbb int3 hlt int3 lret repz (bad) (bad) (bad) incl push jg nop adc in adc inc ljmp sar mov fnstsw (bad) jmp push daa aas mov sub sub (bad) lret sti (bad) call sarl xchg les lods fist lret jns pop lods (bad) (bad) (bad) decl pop add inc adc mov jp jle xor jg js aam (bad) (bad) ljmp out sub sub mov data16 imul xor jmp (bad) ljmp mov outsl sbb pop push rolb pop push bound mov movsb loopne (bad) inc pushl lcall popa fisubl xor incb xchg loop dec add jbe mov aas inc xchg xchg xor loope push pop sbb jmp (bad) (bad) (bad) (bad) cmp cmp in or (bad) out lods out jmp xor fs es stc aad dec xor cmp mov inc sub ss pop mov xor sbb inc (bad) (bad) (bad) mov es out and xchg in mov sbb lahf call pop (bad) (bad) (bad) incl lret cmp dec insb popa adc (bad) mov mov aas cld (bad) (bad) (bad) incl ds ret addb fs jl jmp add (bad) (bad) (bad) call mov cld outsl pop into (bad) cmpsb ret xorl (bad) std out jno out mov dec fiaddl inc sar in dec aaa cmpsl jo pop mov test (bad) (bad) (bad) lcall (bad) das pop test mov dec bnd cmp pop bound pop in (bad) (bad) (bad) incl push fmuls sub gs stos hlt pop in lret hlt inc or pushf cmp push lret bnd mov jnp testl pushf push mov pop sbb lock fnstcw je jnp sub hlt out fcom (bad) (bad) jmp mov pop sbb lods cmp adc mov sub (bad) jns pop adc sbb jg mov pushf jg mov pop rolb bnd xchg xor lret jb cmp (bad) call jbe xorl js add xchg push int3 pop pop test popf mov (bad) (bad) (bad) (bad) ds xor outsb insb enter das mov xchg or clc push out (bad) or adc icebp mov mov xor mov (bad) (bad) ljmp mov cltd add leave pop xor dec ror push inc leave clc lods add hlt idivb (bad) cld addr16 pop adc sbb test idivl sbb ffreep iret (bad) out or push mov xor push das ljmp (bad) das sbb sub inc std mov mov mov xchg (bad) xor add (bad) call add pop dec ret je inc cs fwait js mov (bad) (bad) mov sub incb cmp cld fdivr iret sti or in mov (bad) test ljmp ljmp pop idivb sti clc pushf iret (bad) (bad) (bad) lcall mov orl cmpsl iret into jg pusha add mov xlat in or (bad) dec call (bad) (bad) (bad) call mov repz aad sub gs lahf mov and fnstsw cwtl arpl (bad) (bad) (bad) decl lahf std mov (bad) add inc mov test or dec inc popa push (bad) (bad) (bad) (bad) fsubrl ret sub inc test shrb mov gs mov stc sti (bad) (bad) (bad) jmp sub mov cmpsl inc std mov jnp repnz jnp scas inc out (bad) (bad) lcall incb mov std (bad) js shrb out daa dec jnp imul (bad) (bad) push fnstcw lahf mov xchg (bad) (bad) ja clc sub ret fcmovnbe mov mov (bad) (bad) (bad) (bad) fistpll (bad) hlt sti and cmpsb xchg cs (bad) jge gs xchg pop sub push pop mov outsl (bad) lcall test mov jne mul scas fwait and mov shrl lods sti add dec jmp sub (bad) call mov sub push loop out aas scas pop or lahf cltd outsb popf push in ret cmpsl pop mov out fsts outsl pop sub (bad) mov dec mov (bad) push std jmp lds push mov stc pusha outsb jbe leave (bad) fistl pop shr mov movsl cli fs js out sbb nop and lods jmp rcrb jno jg ljmp insl push int out jg loop cltd xor fldcw (bad) (bad) (bad) (bad) fldt mov jnp jmp fisubl repz pop cmp test lods jne mov mov cmc ljmp mov iret mov imul jnp inc in jmp (bad) (bad) decl inc outsl ficomp js pop or pop rolb push je (bad) cmp mov (bad) sbb les out loop pop add cmc sti or stos sub pop sbb loop cmc push fidiv push out mov repz pop cs xor in mov cld sti (bad) lcall xchg pop mov outsb stos pop cli cmc jbe iret xor fdivrs sub mov (bad) idiv jg scas mulb jg cmc pop out jae mov pop in in inc in jae (bad) (bad) fild in sbb cmp mov fiaddl cli in jg mov (bad) out clc lahf push (bad) and repnz das jge cli cmp mov dec out xchg sahf iret pushl clc subl lea clc pop jp stc xchg movsl mov jg xchg push mov popa sbb and add xor mov insl imul fmulp das dec mov sub mov push push dec insb and push into pop cmp in cltd sahf outsb mov (bad) lds add xor stc jo push jb pop (bad) (bad) (bad) pushl push sahf jbe and pop cltd fstp jbe cmp fiaddl int pop aaa cld (bad) (bad) in mov xchg adc sahf mov test cltd or mov (bad) (bad) in call call mov xchg fistpll lds pop cmpsb aaa push ss inc in ja (bad) (bad) out shr dec sbb insl out mov xor jecxz cmc and loop outsl (bad) (bad) lcall sbb mov lods xor cs xchg pop (bad) fdivs (bad) cli ss ficomp (bad) incl out lods scas lahf mov fdivrs sbb aaa xchg andl sub scas pushl jmp xlat ss pusha ljmp mov push xor jne fstl jno (bad) (bad) (bad) pushl mov daa sub mov fwait lods mov xchg cmp insb in mov pusha mov outsb (bad) call fwait cli rcrl lods out sub push mov leave das mov (bad) (bad) (bad) in cmpsb in outsb (bad) insl aaa imul pop jnp in mov ds flds xlat arpl fisubl divb jnp mov sbb mov jecxz pop pop push adc ljmp shlb fwait jnp insb mov sti xchg nop div and add (bad) lcall in or pop sbb in mov imul inc test mov xor call mov add push dec clc jge cmp sub dec inc pop sti in andl xor push jnp data16 cmpsb (bad) mov jno jmp lods (bad) (bad) pushl test cmp jne xor push rorb push in decl mov pop (bad) ficomp (bad) cmpsb popf inc jge (bad) (bad) (bad) fisubrl xor sub push push imul sbbl push cmpsb fmulp push out push data16 (bad) (bad) lcall and mov pop dec les (bad) ljmp pop push and or test xor fisttpll fdivs pop popl sar (bad) (bad) ljmp mov insl or sub mulb ljmp stc add outsl (bad) (bad) (bad) (bad) mov or xlat cmp cld pusha and shrl mov sbb (bad) (bad) (bad) jmp adc pop das pop negl pop out pop iret data16 ja sbb xor adc dec (bad) call loopne jne xchg xor sbb lcall cmp (bad) (bad) lcall repz jne inc mov ljmp scas add shrl popa in leave lock (bad) (bad) call int3 pop jge add roll fsubp add and sub f2xm1 aam ds (bad) (bad) (bad) jp add inc orl iret mov lahf inc mov inc and aam add (bad) jmp cmp stos data16 stc mov xor push xor lea (bad) (bad) incl shrl sub test adc mov push imul xchg pusha fucomip loop add (bad) fcomip test or movsb pop xchg sbb dec push cs cmp popa cli jo das add cld incl and stos xchg loopnew xor imul shrl ret ljmp testb xor das adc cmpsl mov adc jge (bad) (bad) mov xchg or mov xchg mov mov dec ret gs (bad) pushl mov adc imul mov iret mov add dec test jbe xor enter mov xchg mov mov incl jbe mov fstl into xchg (bad) (bad) (bad) (bad) mov sbb loopne dec lds cmp pop cmp lock stos addr16 cmp (bad) (bad) inc adc arpl push (bad) jo leave nop mov sidtl inc xchg cmp (bad) (bad) (bad) cmp dec pop add jmp xor (bad) push ja and mov xchg mov decl jmp stos mov mov adc pop insl scas mov test cld (bad) (bad) ljmp pop aas mov gs lcall add xor jmp and (bad) pushl mov sarb and (bad) lods mov ss cmp cmpsl inc add sbb adc and pushf jp jnp pop sbb or out and (bad) (bad) (bad) call xchg xchg scas jne sub scas ret lret shl inc mov xchg pop (bad) cmp call push inc xor and xor and push inc push adc sub sti jg cmp in (bad) insb dec pop sub (bad) mov add cmp or lods sbb sub mov xor jge fs in inc (bad) ljmp xlat addr16 cltd cmc js shl arpl (bad) (bad) (bad) (bad) cmp mov sub lods jno push insl inc loop loopne xchg push push jnp cmp es dec out adc es sbb xchg xchg call dec ss aaa ret mov mov sub push aaa (bad) (bad) (bad) jmp (bad) cld dec jbe cld cmpl loopne mov jg jg push addl xchg jno inc sub out (bad) in sbb xchg sar lcall mov addl repnz push jl imul cld call xchg mov (bad) lods enter clc lea pop mov mov in inc aaa mov pop adc cmp js aaa into jno (bad) (bad) (bad) lcall pop adc or sti mov and xor cmp (bad) pop or xor loopne pushf out into xchg int mov xlat das ds push sbb xchg lds cmpsb (bad) (bad) fisttp (bad) cltd aam inc sub sbbl sub ret push inc dec fwait and (bad) (bad) pushl push sbb sub test lahf dec xchg test mov mov pushf xchg add jg (bad) ljmp sub fsubs mov ja push push (bad) lret push adc enter (bad) (bad) jp jmp inc and adc mov dec jle js mov sub in jmp in mov test inc test sub loopne call mov pop mov outsb cmc ret xchg scas xchg sub stos lcall xchg pop xchg and fisttpl dec mov das bound sar (bad) (bad) mov sub xlat outsl sti jnp push subl ss mov add fmull cmp (bad) ljmp cli cltd add dec dec ss aad rorl dec (bad) mov or pandn and dec stc or (bad) (bad) ljmp (bad) (bad) dec jne or test in add cmp adc lret (bad) (bad) pushl sti and xchg cmpsb test test fwait outsb jle adc jnp test pushl stos imul mov and scas daa xor cmpsl xlat and jecxz cltd cmp out clc mov and push inc fwait mov test loop lret out mov or mov sar jb xchg dec jmp fmull sbb movsl (bad) dec arpl sub incl cmp mov es (bad) out cli stos cwtl or push ror mov pop lea cmp cmp sti push adc (bad) jg aam add sub pop in (bad) repnz data16 xchg enter jp pop sbb nop xchg and xchg mov sub sbb xor adc (bad) ljmp loope ss data16 imul jecxz leave xchg loopne (bad) (bad) (bad) dec cmpsb fisubr mov mov movsl xor jge (bad) rclb pop xor aam (bad) (bad) (bad) aas mov rorl cwtl jg repnz sbbl or adc call imul notb psrad xchg inc xchg dec dec jns sarl test push and push ret and int3 je les xchg push adc ret out cmp test ds (bad) jmp jnp and sub or pusha outsb push fildll jmp or jne dec jmp xchg jae std (bad) decl ljmp loope dec jmp xor (bad) insb add sub mov (bad) mov mov movsl push and lret repnz push sbb or ret and mov mov xchg jmp mov out in imul fs mov cmp push (bad) push call xlat cmp jb imul push or insl mov inc dec scas call (bad) (bad) call mov (bad) mov sub cli push repz bound int pop adc in dec cli (bad) (bad) incl cmp pop push inc das or imul sub repnz (bad) (bad) out inc mov or push inc add inc (bad) jge push icebp inc fs je adc (bad) (bad) jmp sub xor push adc scas jns xchg sti pushf das cmp inc inc test popa (bad) (bad) (bad) incl jbe mov and cmp mov fcom and gs sahf int xor (bad) (bad) (bad) (bad) mov std pop test shrl cwtl rcrb cltd fcoms mov xchg imul and or test ljmp mov pop add add cli ficompl repz pop mov (bad) (bad) (bad) cmp inc jno sbb lcall (bad) (bad) lahf push mov inc adc ret nop sbb inc (bad) (bad) (bad) call es xchg pop cmp dec and sbb into jl sbb push push (bad) sbb cmp lcall adc daa insb mov pop push mov cmc pusha lcall mov jmp mov cwtl test int3 mov idiv (bad) (bad) mov scas orb mov popf mov (bad) movsb sbb lret ss call out mov call and lea rcrb ss fucomi cs fs mov sub jne les fsubs add mov lds jl sbb ret push push fnstcw sti insl sub sar (bad) (bad) call adc (bad) lret scas fwait dec aam lret pop jmp in lods es mov lcall scas cmp mov std cmp dec mov cld icebp leave insl ficom out rep mov (bad) decl bound push jb and xchg dec mov ljmp (bad) (bad) call arpl pop push dec bound xchg cwtl sbb rcrb adc dec (bad) lock insb (bad) (bad) adc xchg into mov movsb int3 xchg inc mov jb jne sbb out push and and je xor (bad) (bad) (bad) lcall mov es mov sub cwtl (bad) adc dec adc xor mov xor xchg fsubp and dec push mov jge or ljmp jmp mov mov test sub (bad) fsubrp dec (bad) or mov or and xor mov orl push mov add aad pop adc dec (bad) fstpt (bad) lcall pop mov pop mov xor pop pushaw stos aas nop les cwtl lcall decl jl push in fisttp in data16 pusha sub jbe cmp (bad) (bad) (bad) mov scas adc xor lods and push and mov leave (bad) (bad) (bad) (bad) (bad) in cwtl std lds ror and pop lret ds mov rclb (bad) pushl daa mov int push sbb insl in push sub test test lcall pushl cltd or ret xchg adc mov movsl mov movsl xor pop mov out dec pop andl push cmpsl sbb (bad) (bad) decl movsb pop sbb popf or lods lods jnp push pop ja push std cmp jo (bad) (bad) (bad) (bad) call pop dec pop cmpsb and out fdivrl xchg les (bad) or pop aam cmp mov inc aam sub arpl push hlt adc cld inc (bad) decl icebp adc in out aam mov test gs mov (bad) (bad) (bad) cmp outsl or jns into cli pop inc dec mov and jle pop (bad) (bad) incl in adcl cmp dec daa push stos outsb pop jno aas je cmp nop sbb lret push aam jge int3 add xchg or cmp jecxz sbb push stos stos aaa lods std (bad) (bad) lcall cmp stos dec cmpsl (bad) adc in and es dec push (bad) (bad) pushl mov out loopne xor rclb push arpl imul dec dec or push lret mov sub xor loop ja or (bad) (bad) lcall push or sarl nop inc (bad) icebp mov (bad) and inc jbe push lahf push and sbb push and mov lds sbb (bad) (bad) (bad) pushl jne or mov sub (bad) int3 adc sar jmp pop outsb inc ja sub adc sbb mov jecxz or pop subl (bad) popa mov and (bad) pushl and xchg lcall (bad) loopne (bad) jns ds ret out scas or fldenv mov mov cli jno in (bad) mov mov sub push mov xchg cmp fs (bad) (bad) (bad) decl and xchg insl xchg fs lret in (bad) jmp lock cmpsb xor fisttpl mov lret cmp int dec add out (bad) (bad) decl pop pop (bad) pop bswap bound pop jp sbb rcrb int3 aaa sub jl mov (bad) pushl cs pop into js cmp mov cld int mov jle (bad) mov mov sbb adc repnz sub mov add dec push jle int (bad) (bad) call (bad) popa call cmc jge lds sahf ret adc xor ljmp (bad) (bad) dec fcom pop push jno jmp rcrb mov fwait in and xor fdivl call mov xchg mov lret push insl push shl mov (bad) loop,pt cmp (bad) (bad) jg aam pop or je or pop jecxz stos repz shl sub lret (bad) (bad) (bad) jmp xor sbb dec scas jo fidivr xor or add inc dec mov (bad) (bad) incl mov xchg jle daa dec mov sbb xor pop (bad) mov out js test pop mov (bad) (bad) (bad) cmp lret jmp out js je stos inc inc leave cmp cli ds fisub mov sbb sbb mov hlt mov cmp (bad) decl lods sub cli enter in pusha and divl (bad) (bad) ljmp mov (bad) jno cmpsb iret stc mov scas mov jb daa repnz xchg ja push (bad) (bad) (bad) dec xlat cld sbb into fiaddl inc js jp pop in mov jae (bad) (bad) push dec mov punpcklwd icebp fwait in loope and inc fbstp cld addr16 push xchg pop rorl (bad) (bad) decl cmp mov (bad) xchg outsl jo outsb mov jbe ss mov (bad) fildll lea mov call leave enter and add (bad) outsl add fs in mov out and sti (bad) lcall je (bad) mov sar pop rcl xchg movsl xchg lret push mov out das rcr pop mov mov add mov lahf idiv (bad) jg lods xor xchg cmp xchg xchg dec inc cs lret sbb sahf cltd push incl push (bad) in adc cmp mov adc jo ds jne mov pop int3 push jnp test sbb push inc and in xchg mov lret mov or mov add jmp adc or jae cltd xchg scas pop es and hlt (bad) decl movsl or mov stc ljmp je (bad) (bad) (bad) pushl adc inc mov xchg lods mov lahf pop xchg fbstp pop cmp jns and jnp lcall (bad) jmp fs xor jp push int fmull lcall add loopne pushl iret lods imul xchg shrl cli add cli and (bad) (bad) ljmp mov outsl jp movsl inc std das in lret mov in pop xchg bnd (bad) (bad) incl fs sub pop ljmp pop jg lds sbb sbb cmpsb clc call ret add xor mov inc scas jle (bad) decl stc xchg (bad) pushf or pop nop ret add sti jmp jnp pop insb fdivp xchg repnz (bad) (bad) jmp popa das ret rcl jmp cmp fwait adcl cmc js mul xor (bad) (bad) decl cwtl shlb pushf fwait stos stos rorb sbb out push sar (bad) ljmp mov jbe jmp das mov dec mov into gs lcall pushl out cs and mov cs pop data16 nop dec xlat out rorl (bad) fcomip adc xor out cmpsb xor sbb dec xlat scas adc sbb mov lods es sub mov jb jae inc loopne enter inc cmp test (bad) (bad) (bad) (bad) mov inc xchg xor cli or cmp into inc pop (bad) or mulb arpl pop ficomp cmpsl pop cld (bad) call stos xlat adc (bad) jb cmp dec mov fs jge (bad) pop icebp (bad) (bad) in lahf jge adc popa loope and cmp in sbb outsl add mov pop hlt jmp inc pop dec sar jg push nop rclb shr shlb jg (bad) je mov xchg push pop jb (bad) (bad) jg test leave mov mov fnop jne sub aad (bad) mov in (bad) (bad) (bad) jmp jno mov ds xor pushf pop fdiv or cmc push mov or pop imul (bad) decl int aam in test out (bad) mov pop adc xor lret (bad) nop data16 (bad) (bad) jmp sbb fdivp popf xchg scas xor inc popa jg sub fwait (bad) repz das iret jns jmp mov rorb fnstsw xchg mov push loop scas xchg fs adc ljmp fs cli jl cli repnz cmp jg mov (bad) incl aaa push jae xacquire lret sub jp cltd mov cltd aad mov nop cmc (bad) pushl cld (bad) lods mov jns (bad) cwtl stos xor and sarb das push (bad) (bad) (bad) inc shl ds and in in jnp jle or pushf jne jecxz jl pusha outsb repz (bad) loopne lcall outsl xchg dec jle das incl dec es sbb out sti arpl mov pop (bad) (bad) (bad) (bad) decl out dec or dec dec mov insl repnz sub pop add into or cli inc fwait (bad) (bad) ljmp aaa inc push scas sub mov jns adc lcall sub (bad) jg decb incl lret inc lret cmp cmp jnp sahf cmp (bad) (bad) push in js fstpt ret clc ds icebp ss out mov sub xor jmp (bad) jmp jmp or lock push mov sti hlt dec test lds jb xchg data16 test (bad) ljmp sbb jns stos push cmp mov idivb lods sarb fistpll dec test aam std xchg rcl jb dec mov push inc btr (bad) (bad) (bad) incl leave cmpsl into aas sti popf xlat mov mov cmp dec insl inc (bad) lcall (bad) cld inc jmp jns iret or xchg out stc lahf xor mov incl push dec mov cli push (bad) lock and out pushf and pop mov scas in (bad) (bad) stc loop xor cli sub das mov mov inc xchg push fdivs (bad) lcall inc mov cltd lock test iret arpl lret fnstsw (bad) lcall mov arpl mov mov inc insl sub aad sbb (bad) (bad) fnstenv imul jb push insb (bad) pop add xor int3 push pop fdivr mov mov mov (bad) (bad) (bad) ljmp addl test adc pop cmp in xor cld jg (bad) repnz (bad) (bad) jmp (bad) xor cmc cmp or sbb mov into and out push ret (bad) incl mov (bad) mov xchg rclb xchg (bad) mov idiv mov ret xchg dec push mov out sub dec and jg add lcall push mov jno mov decl mov aas aad (bad) stos imul adc fdivrp stos pushl xchg lea lock and mov sbb add clc mov clc xlat imul fstpt movsb (bad) pushl push aad adc add mov and (bad) incl (bad) or clc scas jg scas call lock mov test lcall inc cs sbb pop add add in iret mov and sbb cmp (bad) (bad) (bad) frstor cmp xor mov dec (bad) mov loopne test addr16 jg (bad) js mov ja incl adc push test lock loope lods cmp imul inc icebp (bad) decl clc push popa push xor pop pop xchg shrl ss stc pop bnd (bad) push (bad) (bad) lcall inc sahf cltd dec (bad) dec fcmovbe mov and and sbb (bad) (bad) mov outsl jle (bad) mov int3 add in push notb into test pushl mull lods outsl pop negl add movsl js mov aaa push mov (bad) jg incl push in out jo jmp loopne out inc repz (bad) call in sahf scas ds clc je pop or iret cwtl call scas (bad) jg (bad) pop (bad) jne ret aas std les daa push test (bad) jmp mov mov xor sub jmp xchg aas scas add jnp ds or (bad) (bad) decl outsl xor imul xor lods popf vprotb (bad) (bad) decl (bad) jae inc xor pop inc repnz aad pop int3 push ja cmp repz iret fwait ss lcall daa add mov lock (bad) (bad) call repnz xchg mov ret xchg dec lret push nop lret in push lahf xchg xchg sbb iret (bad) (bad) (bad) (bad) lcall add sbb and imulb sub and (bad) (bad) (bad) (bad) cmp mov sub and ret xor cmc sub lea ss pushl cs sub pop scas cs mov aaa lock (bad) (bad) (bad) call sarb mov jg dec xchg cmc lahf push negb dec mov jp adc stos stos mov popa push insb add insl xchg hlt imul mov lcall mov adc xchg loop jge sbb push push div repnz cltd jmp mov jne pop out xchg mulb lea sub inc pop aaa daa jmp out lahf sbb inc push mov sbb lock out or mov jbe mov lret fmulp adc mov ljmp jl xor or sti mov out imul faddp push pushf hlt divl enter (bad) fldcw imul fisub test outsl fs js (bad) sbb loop,pn (bad) (bad) (bad) fprem imul lds mov sti in es sbb inc loope pop dec push fist ss (bad) (bad) mov repz (bad) hlt and mov fsubrp add (bad) cmp (bad) (bad) (bad) ljmp ja mov sub (bad) jecxz (bad) jecxz fwait mov icebp insb repnz or (bad) (bad) jmp (bad) (bad) je pop adcl pop sub test je ljmp mov inc mov mov jmp out dec gs fcomip call outsb in jmp stos ljmp xchg or loopne cli imul push int push inc or ds inc (bad) lret cmp pop pop pop cmpsl (bad) (bad) (bad) dec jbe popa stos or inc lods push pop xchg ret xchg (bad) jne bound scas (bad) adc popa sbb stos fdivs lods inc fnsave (bad) in scas sub xchg mov scas or insb scas mov sti (bad) jp sbb push outsb xchg pop in or rorl jbe (bad) jg sarb movsb das std adc pop cmp lods call mov adc cmp test lods mov sarl cmp pop inc mov ret loop cmp inc (bad) jb insl div jb call inc das mov outsl sbb ljmp mov mov add pop ljmp mov (bad) (bad) (bad) (bad) incb pop fs cmpsl nop dec mov data16 dec jp je shll (bad) sti pop mov lcall cs orl repz mov gs or mov (bad) push insl mov lea outsl cs fstps cmpsl out (bad) sub ret fwait sub ljmp incb jle icebp leave jmp out jne lret jo jo mov (bad) testl lock jmp mov sbb (bad) sarb xchg mov je (bad) (bad) lcall loop fcomp push jnp pop rcr mov sub popa pusha mov inc cmp sbb push scas jmp lods popa inc adc sub (bad) and jo sarb add push cmp stc push int dec lods adc aaa adc sub lcall pop add insl cwtl mov rorb fsubrs mov pop (bad) xchg inc xor add stos pop sbb repz (bad) (bad) jmp dec jae jmp iret lcall dec (bad) mov fldt sub hlt ret xchg sub loop es pop jl fcomip push or popf mov jbe je daa push hlt pusha lret test (bad) (bad) (bad) mov stos hlt add jp inc mov pop imul cmpsl cmc sub mov adc jmp xchg xchg incl mov out lcall or lret or (bad) (bad) mov inc fisubl mov or pop enter outsl mov incl xor in int3 xor xor adc jecxz divps push (bad) mov push pushf cmp ja add pop jp mov adc push (bad) (bad) jmp popf out popf lock repnz loope pop movl outsl mov sbb (bad) (bad) ljmp xchg xchg (bad) xchg fldl aaa aaa or icebp bound ljmp pop adc (bad) (bad) (bad) cli sbb add dec xchg jns jmp cmpsb sub push add jl cltd stos pop es mov cli and cmp cli into jle xchg lea (bad) dec ret mov aaa push sub inc loope call ficom mov (bad) mov icebp cmp cmc push mov sbb (bad) fisub inc in xchg sbb stc sbb ljmp mov cmp push leave (bad) out shrb push fstp into mov data16 incl (bad) push icebp pusha xchg (bad) dec pop cwtl sahf call jns cmp call xor test inc sarl or (bad) fistpll inc push add (bad) push mov repnz cmp jg cmc xlat or lcall movsb pushl es (bad) std (bad) call incb ror hlt and jbe loope jb mov or add sbb add xchg or or (bad) (bad) lcall or push dec sbb sub inc push dec outsb nop fwait ja out or pop sub ljmp sahf aad xchg lcall sti stc jae xchg js mov out (bad) (bad) pop push mov daa push mov loope stc lock outsl mov stos neg mov stos or sti cmpl (bad) mov outsl daa jg inc push or fcom aad (bad) out ljmp hlt (bad) (bad) in (bad) jmp mov lret sbb repnz das into in out dec std pop ljmp sar fcmove mov outsl stc xchg jbe sbb pop aad popa iret dec into popf (bad) das cmp (bad) (bad) (bad) stc jg cld stc xlat ss dec ljmp cmp bound out dec adc xlat (bad) insb pop hlt imul (bad) (bad) jmp add sbb in in xor clc scas call inc jg or jae adc (bad) (bad) inc xor xchg add arpl ljmp or jns pop jg sub call fidivl leave fistpll call ret (bad) jae stc and xchg push pop jmp dec pop negl sarb xchg (bad) jbe and mov mov pop insl les call loop jae pop pop int pushf insl cld (bad) (bad) lcall cmpsl pop addr16 sub fisubr psubd pop xlat jns xchg mov insl fisubl jp xor ljmp inc sbb fist push outsl das out pop repnz push pop ljmp lods scas js lret call out dec popf jle mov (bad) (bad) push popf cld iret fdiv (bad) jl jns divl les mov (bad) repz pop (bad) hlt mov icebp (bad) fildll cmpsb mov std ja fcmovnb pop in jmp and into pop stc (bad) (bad) (bad) incl dec out movsb mov enter das in (bad) movsl xchg repnz loop fildl fistpll pop jae (bad) (bad) (bad) aas sub into sub and insb mov or addr16 and in jbe out out setae pushl mov fimull inc sahf cltd push repnz dec cltd pop push subl mov mov pop mov jle,pn jge jbe decl jmp (bad) (bad) (bad) fnstsw int3 addr16 imul hlt pop pop xchg fidiv jmp sub inc xchg cld push cld (bad) (bad) mov ds (bad) sti pop lahf ror cwtl repnz sub add mov call fwait mov mov pop out fsubrp push hlt mov or inc xchg mov iret jmp dec pushf lret push (bad) pushf xlat stc ret (bad) jbe pop dec aas pop inc jge aas sub jg in in aam rcl xchg std jge inc enter test mov js dec (bad) (bad) (bad) jp cmpsb push push push inc xor fwait cld cmp mov sbbb mov pop mov icebp mov mov jg cld ret addr16 ljmp movl inc pop jmp imul inc aas pushf mov xchg fst jbe (bad) (bad) pushl jl fmuls cmp push (bad) out (bad) jae mov das (bad) push dec (bad) mov je fdivrl xlat jnp repnz outsb pop cmpsl jge mov pop out btcl sbb xchg repz push repz out jg call lock movsl cmpsl jg (bad) decl sbb in and mov xor sbb jbe loopne fadd or pop repnz jl loopne (bad) (bad) lcall das iret add jo or mov das ror jmp pop (bad) call cld loope jae cld pop jo cmp cmp xor (bad) (bad) (bad) in pop mov flds sbb out les fnop lahf addr16 mov lret lret jnp aas or out pop loopne xor (bad) jg xchg jecxz add pop clc jp sbb popf cld (bad) mov (bad) (bad) cld pop push (bad) jecxz jl scas sub bound (bad) aaa bound outsb cs je xchg jg aas insb (bad) negl jecxz fist jbe lods lods fdivrs (bad) in nop/reserved nop out jo xor pop xlat pop fistpl mov ret lods fs (bad) (bad) (bad) (bad) stc arpl es dec sub and cli cmp jecxz sahf pusha fwait shr sub jp pushl lock cmpsb insb fldt ss out fwait cmp (bad) (bad) (bad) incl xchg ljmp insb shll pop pusha std dec (bad) stc shrb mov (bad) call std test insb jmp mov lcall mov xor jg incl insl (bad) jb xor arpl pop mov decb in aas cli mov (bad) call js mov es and test jp (bad) test rcll aam (bad) (bad) inc and scas shr movsb jg or adc repz icebp inc xlat (bad) in jnp rorb (bad) (bad) (bad) jg push insb sti ja add cmp in fiaddl test pop cli sub cmc popf clc xor stos jg jp sbb js scas jecxz in add int (bad) gs inc pop std (bad) call jmp iret jno cmpsl cltd imul push cs (bad) (bad) fnstsw scas int repnz scas jle popa in arpl mov ljmp lock clc push jbe lods ret out in out lods imulb aas fiadd (bad) decl in sbb out in lds aas (bad) mov test (bad) (bad) mov pop fistl xchg sub cmp lret int3 jle mov (bad) and (bad) out incl mov inc imul (bad) jno sbb add mov cmp les sub mov lods cmpsl outsb int pop cmp add pop loopne mov (bad) sub aaa mov sub sbb imulb ret scas ret fcomip lahf dec in cmp mov out cld (bad) mov jg (bad) outsb (bad) xor adc pop sub ja (bad) jmp je arpl ret inc ds movsb jmp mov dec xchg clc adc or aas (bad) call out cmp mov inc ds repnz stc jecxz incl jae imul (bad) fcompl loopne lret mov clc incl cld mov sti ljmp xlat mov fnstsw adc out rorl cmpsb mov mov or xchg sub xlat data16 mov cmp lahf cmpsb lret add pop add pextrw outsb out sbb scas mov pop sahf push (bad) iret jle pop cmp aas (bad) (bad) call outsb mov xchg ss jb (bad) std mov jle stc cmpsl (bad) (bad) (bad) (bad) fildll notl dec aaa dec sub jl sub push iret jmp jl fsubs pop mov rcrb mov aas (bad) jb notl iret xor outsl lds xchg fstps decl out call jle mov out xchg out (bad) xchg ljmp dec mov imul insl rcrb fisttpll test nop jle (bad) jg loop adc add sar nop insl xorl dec fsubr out adc lods ja (bad) jmp repnz das out flds cwtl inc bound enter out push (bad) jg push in mov xchg jle add (bad) sub into (bad) mov pushl inc inc pop loop mov lock fbstp in cwtl mov xor mov fbld mov (bad) push mov daa loop,pt (bad) (bad) call mov sti push std sbb loopne jno mov or (bad) imull xchg loop cmpsb (bad) mov lret xchg (bad) jbe pop and fdivl out aad (bad) (bad) (bad) mov gs gs cli xor repz inc mov (bad) (bad) ljmp mov pop scas xlat inc mov adc dec aas in cmp cmp (bad) (bad) (bad) out fcmovnu (bad) mov icebp mov inc ficomp (bad) jmp decb dec std (bad) (bad) (bad) fnclex pop (bad) xchg jae daa jmp pop jle out jge ss jge mov mov out (bad) (bad) (bad) ljmp mov dec mov pop sbb divl and out loop xor (bad) (bad) (bad) cmp ss sbb das shrb sbb jp jbe cmp sub (bad) jmp ficom push std (bad) (bad) (bad) decl scas pop imull pusha and shlb adc xchg in sahf mov std scas mov jbe and push jp call out std adc aaa std (bad) stc jae out fs mov inc popf out sub pop out sbb dec cld aaa sbb jns cmp clc cmp jge xchg jl mov sub xchg fiadd adc sarb inc (bad) sahf and jmp nop jecxz lods jae pop mov ljmp push in fwait cld das aad mov ljmp aad (bad) (bad) jg dec daa pusha mov dec lods repnz in pop mov fsubrl popfw cltd repnz cwtl jmp clc (bad) incl popf das scas sub mov fistp inc hlt dec into xlat jno jg mov mov dec mov sbb arpl cmpsl ficomp mov and shr ja test lods adc jae (bad) (bad) (bad) jp mov pushf repz repz xchg xor add mov fadds in insl loop (bad) jmp fisttpl aam adc pusha (bad) in add outsl loopne cmp and add outsl cli (bad) incl ficompl les daa sbb push cmp scas test (bad) (bad) (bad) cli cmpsb jbe lret jecxz pop push cltd sahf inc lret mov xor lret (bad) mov fwait (bad) das fidivr stc mov lcall lahf aas scas outsl out pop fisub fdivrp lods jbe int pop push jmp std (bad) (bad) ljmp mov fdivr cmp fstl lahf mov iret mov (bad) (bad) call jo push (bad) mov xor test jmp cld (bad) cmc out int (bad) (bad) (bad) ljmp divl leave (bad) (bad) iret xchg mov in pop popf sarl (bad) fbld (bad) sarl adc sbb mov jne (bad) mov out jg decl outsl dec lods (bad) push cmp mov mov jge mov mov in (bad) pop (bad) pop (bad) (bad) aas clc lods pop jge fwait or (bad) sub repz dec not jmp fdiv (bad) (bad) (bad) jmp ss xor mov (bad) jmp xor ror cld stc repz sar shrl jle decl es mov fwait pop stc adc pop mov ficompl xchg sbb cmpsb mov and (bad) push nop icebp push mov mov aaa decl lods loope dec inc mull aas mov stc pop adc int3 lahf sbb xchg push in aas decl xchg and out cld jecxz mov mov dec mov push out (bad) daa clc outsl dec mov loopne xchg fwait jg lret push mov clc lahf mov dec jg jg in mov and leave and xlat movsb loopne (bad) jb (bad) lcall add inc push dec xor inc push cmp fs mov (bad) pushl push adc xor pop ret cwtl mov jo subl ret ror sti int mov arpl pop xchg jmp mov outsl sarl dec cmc (bad) xor mov jg jge fstpt jae divl (bad) fcmovnbe xor ljmp (bad) incl stos (bad) ds jae stc in ret dec mov add mov cmc jge mov or idivl insl neg cmpsb add fdivs cmpsl int jmp adc pushl cmp stc fbld cmp or ret push adc rorl fisub inc jo lock sub jb pop jo lock out addr16 out inc movsl pushl mov ja xlat dec out shlb fstpl ljmp addr16 jg jle sub (bad) std mov decb fiaddl mov outsl push arpl adc and or and enter cld or xchg cmp sub and les inc sbb pop jmp addr16 inc iret iret ret (bad) (bad) (bad) (bad) pop scas push addr16 rolb pusha xor or orl aas cld cli cmc jmp sub imull lods add test push leave clc stc mov xor shll (bad) pushl jl repnz iret cs out mov gs sti inc inc aam mov xchg sahf dec cmc mov add sar scas negb push cli jbe cmpsb xchg xlat in jbe pop push repnz in pop sbb (bad) (bad) (bad) mov addr16 mov out jp in pop in fbstp mov jnp lcall mov gs mov aad jnp jb clc icebp jecxz mov incl inc cmp (bad) sahf repnz dec pop xlat cmc jns mov cli ljmp dec inc sbb iret stos inc fist out or sti sar add (bad) repnz iret xor and jg mov or mov mov jae inc sbb inc ds (bad) (bad) jmp push out clc mov sbb addr16 (bad) cli int3 adc fwait imul popf mov outsl test push (bad) (bad) (bad) pushl sbb push jge loop,pn das sarb test cmpl ds notl (bad) (bad) (bad) call (bad) out xor mov cli and out in (bad) xchg std jge loop mov cmp inc pop and jle lods hlt push fimull cltd cs sub xchg mov incl mov inc lds mov notb xchg int cld (bad) cli sub std (bad) ss jno and and mov inc shrl test repnz cld in int scas and xor dec pop push jge call cld rcrb fs sbb push cltd jmp movsl pcmpeqb enter (bad) (bad) (bad) clc dec sar (bad) out and jge add movb stc leave pop movl mov cmp sbb xchg fnstsw repnz (bad) call add sub sub fistpl movsl pop iret fs (bad) fcomip cmpl lahf (bad) jno pop test loop mov (bad) pushl stos repnz push pop jp cld pop stc mov inc in cmp jb icebp cld jnp jmp decl decb out movsl aas sub push lods rclb cld mov add jl add lods rolb imul cld aaa es fcompl out cli rcll shrl cmp mov repz (bad) jg and mov xchg mov pop movsl add addr16 dec pushl fildll xchg sub stc aam sub (bad) fstps out pop stc and adc dec inc enter stos add stos xchg jg loopne sbb pop jg stos loopne hlt jle add xchg jle into dec rolb decl sahf fnsave notb idivb xchg ja jl popw (bad) (bad) ljmp lahf xchg jg cli jmp cmp pop mov mov in (bad) (bad) call mov cmp js sti jmp leave (bad) mul sub mov into or jmp xchg std (bad) ljmp xor into gs sub xor ja xchg out addr16 addr16 mov push xor les jne imul (bad) (bad) call jae sbb xchg xor out sub push out pop ja or add (bad) mov fstl push xlat xchg cmp jg (bad) jmp xlat pop or (bad) mov imulb lret sahf out mov imul inc cmpsb xor sbb ja mov fs (bad) jne ja hlt mov mul push out xchg xor (bad) (bad) (bad) cmp dec mov xchg mov xchg pshufw loope enter (bad) (bad) (bad) (bad) pop xchg stos cld popf repnz (bad) stos int3 ljmp (bad) adc cld pop cmc outsl sahf stc das clc cmp (bad) call cmp stos cmp cmp push push outsl add jl push jle xchg out ficomp stos xor (bad) fcomip (bad) jp inc (bad) (bad) xchg fisttp in out adc cli cmpsl lret pop jns std mov cli jg scas rolb (bad) cmp push cltd aad sbb ljmp cmpsb and call in sti mov push std pop lret out in out sbb jmp fbld imul ljmp mov fisubr orb pushl jmp (bad) stos fsubrl sahf loope into lahf addr16 jmp clc (bad) cmp xor lds cli xchg divl (bad) (bad) mov (bad) ds lcall jge lahf int mov stc sahf add psrlq (bad) cld ds in jns lods lret scas shlb jns call lcall cmp inc mov add loop pop mov cmp (bad) (bad) incl stos mulb addr16 or divb sub aad jmp jmp mov mov mov pushl fcomps call mov hlt into cs push hlt pop mov outsb in (bad) sbb sti out aad push in (bad) cwtl adc xchg push aas xor scas jmp jns out (bad) (bad) (bad) (bad) jnp push stc ret sub popf jno sbb jbe mov adc xlat xor enter stos inc add stc jg or outsb and fiadd push cmpsl out sub mov jae jl jge addr16 jmp xchg sub in std test ret jg (bad) call lods mov mov jecxz or lret sub inc into push (bad) decl lock sarl xor (bad) xchg jb aaa push cmp (bad) ljmp jnp rcrl jbe fsub add adc lods cli js jmp sub out mov cli stos fild mov addr16 sub outsb (bad) (bad) jg sarb mov xlat xchg (bad) scas iret fbld idiv enter cli (bad) dec push (bad) mov (bad) jmp pop fstps into (bad) lcall cmpsb cld aas loope jbe into dec pop push jg mov adc ficomp sub cmp into (bad) jg pushl mov mov jo pop xchg inc mov ds pop pop pop mov negl (bad) (bad) jg pop mov (bad) push mov jecxz out mov (bad) (bad) ljmp jg pop adc pop cmp (bad) xchg (bad) add add pop bound scas mov pop pop add loope sbb jo mov and push lock mov jp decl outsl lods icebp rcrl or stos jecxz adc (bad) pop pop mov (bad) (bad) (bad) decl fsubp mov mov mov xchg stos jmp (bad) je cmc in sbb jno cmc (bad) (bad) decl mov or fbstp sub icebp aad add lcall scas lret inc std sub sub dec pop psubq push rcll daa lock (bad) jmp mov in scas icebp jno cmp jl repz jbe stos (bad) jg fisttp fistpl jb mov pop cmp push ljmp (bad) (bad) (bad) sti sti add cmp js (bad) adc cmp ds fwait xchg enter push pop aam (bad) mov push inc mov push cmp jl mov dec mov push ljmp pop lock stc xchg adc cltd xchg mov lahf (bad) mov loop std (bad) decl jno incb cmc jg jecxz jbe sub test mov mov pop inc in icebp stc sbb out (bad) mov jecxz sub mov fs call loopne sahf out into xlat or clc xor aam cmp es ja std (bad) (bad) (bad) (bad) ja xchg aam mov xlat lods mov push decb jecxz jae in (bad) (bad) push test fucomp mov pop jle scas fs icebp mov popf pushf (bad) (bad) decl int3 ja fcos aaa leave clc mov iret fsubrl fldln2 dec mov nop mov pop stos adc (bad) (bad) out add pop (bad) out out push (bad) incl mov pushf add jbe mov (bad) cmp push hlt jns mov outsl push (bad) and (bad) (bad) decl xor out mov out push jecxz add mov and stos cld mov (bad) decl jns inc test stc xor mov imul nop pop lret push aam (bad) (bad) mov jno inc mov ds mov nop inc clc (bad) out pop push push (bad) lahf jb xor outsl (bad) fmuls das (bad) jl insl mov fwait mov daa loop (bad) in lods in mov (bad) mov sub ljmp call test jp lahf jae ficomp lcall mov stos sbb mov in mov sub push jge out lods push scas and add mov dec fistpl or and (bad) (bad) (bad) push xlat jle imul jns iret and ljmp pop jle jns in shrb xor jmp pop in sti imul cmp leave inc (bad) push mov (bad) (bad) (bad) jg fxch pop jg cld lahf lret jmp aas rorl iret in inc mov repz cmp outsb incl jnp (bad) jne ret cmp jb mov divl push mov ds bound sar sub sbb test loop cmc xor (bad) mov (bad) (bad) jg out test mov mov scas stc mov test cmp std add sub lret dec and xchg mov (bad) (bad) (bad) call clc xlat out jle pop mov imul sti push stc imul (bad) sub or (bad) (bad) (bad) decl ja mov jno jge pavgw jne ja push mov lods outsb sbb fcomip loope sub mov xor push mov or imul lods xchg (bad) mov rcrl aad pop xchg daa mov ljmp (bad) (bad) jmp mov jl mov (bad) (bad) iret mov stc push cli (bad) add loopne loop adc inc fistl int pop sbb mov jno ret out lcall pop cmp hlt insb popl gs out clc (bad) (bad) jge div mov repnz std sub loope or gs mov lcall sbb jmp xor sti pop out popa jg mov xchg cmp (bad) (bad) (bad) lcall iret out clc inc cmc xchg mov jno scas push cld jg incl mov jmp ljmp out clc jg pop es cmp pop jl push pmaddwd jae jp push out sbb push std (bad) call stos jge pop xlat test xor push pop (bad) jg mov in imul mov stc fistp mov xlat cmp insb aas mov cld lock adc fsincos hlt xchg sarl lods idivb imul mov dec idivb jne,pt test mov sub jg scas inc out add je sahf leave push jbe cmp inc imul icebp test dec mov neg jmp adc lods bnd cmc aad ljmp sar push adc xchg cmp ljmp std idiv movsb (bad) lea in lahf pop sahf aas mov fmulp inc (bad) (bad) (bad) (bad) cli clc (bad) mov idivb mov pop aam hlt ret push in and lret push xlat cmc mov stos cli inc cmp in dec (bad) jae cld jns fwait out (bad) (bad) (bad) jmp ficompl jle mov mov jl dec xchg xchg daa cmp inc push pop (bad) scas mov lods outsl sub (bad) int3 (bad) mov cltd in out out push cltd cmc std jb (bad) mov out pop out daa out je push pop mov int3 jp (bad) (bad) ljmp inc rep cmp ror jle cmp jns mov out flds int idiv (bad) (bad) call imul je out bound xor sti jl (bad) mov jns dec ficompl dec scas out gs (bad) (bad) call stc xchg out mov std lock loopne push ss jno inc (bad) in int3 push data16 mov xchg (bad) (bad) fnop and jmp xor (bad) jmp (bad) pop negl decl (bad) push pop and push lret int3 ficomp rep lret lret daa inc mov je xlat add inc sbb cld cmp fnsave cmp (bad) (bad) (bad) ljmp call push push popf pop push out xor push scas mov jp iret movsl jp sar (bad) (bad) pushl popf std xchg leave fcmovnbe xor lds out xchg out stos (bad) js rcrb xchg fidivrl jmp mov push jmp mov test jns mov dec lcall pop mov ss arpl dec aad (bad) (bad) fnstenv or nop loop lret inc and push dec sub std mov add xorl xchg jl jmp ffree xor jae cld (bad) (bad) cli add lret jne push push (bad) sub jns fcomp aaa (bad) jg scas lods hlt (bad) sti add dec jne jp mov loopne cltd jle,pt add (bad) incl sub xchg clc adc jne cmp (bad) (bad) (bad) decl sarb movsb push push ds jae mov push jmp cld xchg std pop jne lock pop decl (bad) decl stc mov lcall mov cltd int pop push repnz sub sub (bad) stos cmpsb jo pop sbb push mov stc sar (bad) (bad) mov jge cmpsb test fwait and cld sahf push sbb xchg pop (bad) ljmp xchg imul clc call (bad) in cmp dec dec clc mov (bad) (bad) (bad) in pop in es push lret xor push fisub scas hlt fildll lock pop pop (bad) stc insb push and (bad) (bad) (bad) jmp std daa out cmp test cwtl outsl jmp in mov imul in fwait hlt mov jg (bad) call aas (bad) nop hlt push xchg and adc icebp insl divb sahf dec jg call fincstp repz (bad) cmp jnp icebp cmp fs jmp (bad) (bad) out js cmp scas fcmove jmp xchg insl sti jnp divl das (bad) (bad) mov js adc addr16 and and pop mov scas push sahf pop cmc (bad) call (bad) int out gs stc (bad) xchg jmp xchg mov jge int cli not pop mov (bad) lcall mov lods cmp lcall (bad) jge and dec imul ljmp add lret cmp and xor jp xlat sub loope or out push cld out mov mov sti and cmp (bad) (bad) (bad) mov into sahf insl and pop cmp xchg jnp es mov mov jmp jne cmc (bad) out cli jmp lcall (bad) mov hlt sbb cmpsl les sar ljmp lahf mov mov mov aas ss (bad) (bad) jg notb fadd sub lods or push das in xchg arpl mov mull adc mov mov mov cmpsb fpatan sbb mov adc roll inc jge jg (bad) (bad) aas (bad) jg (bad) nop jbe mov dec pop adc mov decl and clc jp cmpsl hlt inc mov pop iret repnz ds mov (bad) jg xor lret mov jg inc sub xor xor xchg sar (bad) (bad) lcall das ret clc popl sbb mov jg jae (bad) repnz (bad) stc jg repz pop sub cmc sti (bad) mov stos arpl sbb jne cmc icebp sub cmpl clc pop sbb out (bad) jo (bad) call cld (bad) out xor sub icebp and insl lret enter outsl mov xor enter jo into mov inc fmull xlat fcomip (bad) (bad) std fsincos rcrl popa aam mov repnz out jns (bad) (bad) push xor inc fisttp repz xchg mov imul in fisttp pop dec cmp add cli insl add xchg mov cmp pop add iret movsl (bad) (bad) call lds inc push xchg fs push scas inc adc or vcmpss (bad) (bad) fimull xchg or or outsl in shlb xchg lock bound loope pop ljmp decl daa popf fistpll (bad) imul addr16 jns ret sbb push mov data16 sti mov ljmp mov mov shr int sar lcall icebp jae fnstcw js jae std mov mov jbe (bad) (bad) in xlat movsl mov xor fidivrl popa (bad) jg (bad) sahf in (bad) (bad) std (bad) fisttpll xlat dec stos cmp mov jns (bad) fidivrl sbb (bad) stos (bad) (bad) (bad) push repz xlat imul dec repz pop jnp mov xchg jno std mov fsub sahf mov insb jmp stos mov cmp popa pop xor sbb push cmp (bad) mov fidiv imul imull fisttp std arpl pop adc (bad) loopne ds mov and mov adc out (bad) (bad) xchg ror fildl and int das mov xor fstps addr16 and pop sahf jnp jle repz (bad) fbld out incl idiv inc outsl xchg mov shll ret sti cld mov jg inc mov sar rcrl pop ret stc cmc xlat mov decl inc cs loope andl push (bad) fistp add pop adc cmpsb and mov out inc lcall lcall insb into push xchg and add out out dec out lret (bad) ljmp mov xlat jae (bad) jae cmpsb (bad) iret in sbb sub aam jne (bad) (bad) (bad) dec mov pop (bad) xor mov arpl lods int cmp mov mov std pushl jmp in popf jge (bad) (bad) stos mov call out jle aas xlat in (bad) jge fstpt xlat out (bad) mov sbb imull ja pushf inc aad adc inc lock cli testl jae or mov mov push push leave add mov and sbb mov xchg enter and or insl adc (bad) (bad) push mov mov icebp je popf dec pusha mov mov mov mov (bad) repnz inc ljmp (bad) mov or out lods cltd fstp jne inc sub daa jl adc (bad) fadds lret or bound lcall pop jne fsubrp inc sbb pop mov cmc push pop bound popf cmc xchg sub imul clc es jmp repnz lret fs lahf repnz dec cmp mov (bad) (bad) jmp test jae sbb xorb (bad) mov add jne mov (bad) (bad) in incl (bad) lock add and dec inc addr16 aas sub (bad) (bad) (bad) (bad) (bad) lock mov lahf jge mov (bad) ss add inc jmp (bad) (bad) cmp jne jae cmc adc rcr sbb (bad) adc movsb lahf es jmp (bad) (bad) (bad) aas adc je test jle inc xchg jbe popl call dec add (bad) xor (bad) call or stc mov mov xor lds lods sahf xor mov rolb (bad) push xchg mov test cmc fwait push add jecxz daa xor mov das clc iret mov push or fist cmp push repz imul divb mov or dec addb cmpsb inc add test cmp decl mov add cld and or test fwait (bad) (bad) (bad) incl enter scas xor xchg loope (bad) ss insl mov ret dec into push sbb (bad) (bad) cmp out stos aad add dec lds or daa jmp mov imul (bad) incl xor or pop les xchg sbb or ss adc adc push xor lret mov std inc ficompl inc jecxz push add clc outsl mov (bad) jmp add push js test nop idiv pushl icebp mov mov lods imul xor js sahf bound insb jge ss push int es sbbb add sbb and jge repnz test std es scas out mov (bad) leave stos pushf (bad) aas clc incl lds test jno (bad) sbbb iret push mov test jb pop mov fwait rcrl roll lahf shrb push (bad) movsb adc fs pop or xchg sub push je mov (bad) (bad) lcall xchg xchg pusha dec pusha call jbe loope das lock movq jnp stc ljmp pop cmpb into or pop xor (bad) (bad) pushl mov fnstsw xchg repz jns mov xlat push (bad) sahf jo cld (bad) (bad) decl das loope bound mov scas pop jecxz scas mov lahf lretw push pusha (bad) icebp decb jge les cmpsb sub pop nop and lcall pop xor xor xlat add fwait xchg cmp push xor (bad) jecxz out test adcl cltd sub adc adcl fildl mov sub xor dec divl dec sbb enter je jge (bad) (bad) (bad) (bad) ljmp mov jg adc sbb out into rcrb jecxz push imulb (bad) jle nop nop (bad) call std aas adc pop shrl (bad) je out (bad) (bad) (bad) mov fwait sahf cmp add cmp sti in das mov stos ja jmp xchg bound adc cld push mov sub cmp (bad) (bad) (bad) fnstsw and inc push cld (bad) jbe fdivr xor xchg adc dec fidiv jg pushl and xlat loopne arpl repz cld jno sarl aad pop cld (bad) lcall pop sti dec in je insb movsb xor adc loop cmpsl push fwait lds stos or lods hlt sub adc jg (bad) xor sub (bad) fwait fwait enter popf mov push pop jl jmp (bad) (bad) (bad) ljmp popf cli cli cld ja js sti ljmp xor je adc fdivrl out (bad) (bad) (bad) ds pop pop ds lock or cmpb cmc (bad) ljmp (bad) ss sub int push fidivl (bad) jl clc xchg ret pop (bad) xor jl xchg ret test repz sbb out stos cli push xchg (bad) lcall fidivrl pop cmc xchg out cwtl pop gs ds cmp xlat (bad) (bad) pushl popf dec outsb cmp cld ret (bad) jbe mov push push out mov in ja lcall lcall jecxz mov pop int push cmp pop repz cmpsb lcall and mov or add je stos sbb (bad) mov xchg mov ljmp pop pop push lret xlat sti xchg jecxz icebp mov pop (bad) mov (bad) pusha inc (bad) dec adc std inc fcoms and fnstcw ret call (bad) (bad) decl (bad) xchg push sarb dec cli xchg loop stc cmp imul ljmp pop pop cmp lods xchg ljmp lcall (bad) (bad) (bad) jg lahf call lcall mov (bad) cmpsl push jo pushf xor mov or cwtl rcrb (bad) jns inc add mov sbb lea pop push or and (bad) (bad) (bad) jmp mov or or xchg mov fistpl in cld xchg sub xor (bad) call lds inc fstpt sub lahf xor mov sub sub lcall cmp adc or fdiv pop je loopnew and adc sub pop pop (bad) push das shr ljmp or ss and or (bad) (bad) (bad) jmp cmp enter inc popl call jge dec xchg ds jb fbstp (bad) (bad) incl loope sub pop mov lret inc hlt inc iret dec rcll pushf mov sti (bad) decl cld dec mov mov and cmpsb in test push jecxz les outsl hlt (bad) (bad) cli dec stos sub cld test fdivrs jnp int mov jecxz (bad) (bad) (bad) ljmp lods in or aaa lcall pop sbb adc sbb out std (bad) ljmp repnz add jae iret outsl ljmp sbb clc (bad) jg (bad) andl mov pusha out inc int3 or jns mov loop pop (bad) ja cli dec clc out cmp jns pusha adc xor (bad) imul unpcklps ds push neg add (bad) ljmp icebp rorb in cmp adc aas jb jp (bad) (bad) call cmp or mov cld or (bad) loop (bad) ljmp in loopne mov sub mov fbstp mov icebp xchg pushl inc xor (bad) lahf loopne mov sahf adc in rorb pop jno ss out (bad) inc rcll mov and fwait mov add loopne dec aam movsb (bad) hlt lock cmpsb mov mov incl clc ljmp pop inc stos daa mov mov push (bad) fsubr lods mov ljmp ss ss add movsl adc pop inc dec lods cmp pop inc inc int3 jo into jae call adc in in addr16 cmp popa pop ret cmpb push aam jl clc inc lcall add sub scas cmc inc sbb xchg mov jg ljmp pushf jb adcb ljmp and sub sarb ss data16 lcall ljmp and adc jecxz jo dec mov fcoms aaa std (bad) cli pop cmp xlat jo testl mov icebp out icebp call pushf js inc pop mov inc xor repz (bad) (bad) (bad) ljmp (bad) scas es push stos aaa pushf in mov cmp (bad) sbb pop (bad) out loop add mov fcomp pop in aad mov pop int loopne cmova adc xchg jl clc jg dec inc mov in push hlt lret jb leave mov mov (bad) js mov jmp orb adc mov insb mov jp movsb add (bad) sbb (bad) (bad) (bad) (bad) sti js ja add scas icebp add jle mov push incb loop (bad) icebp testl (bad) (bad) (bad) jle jg out mov jo ja aaa test pusha mov mov mov fsubs imul (bad) (bad) dec mov hlt movsl dec stc cld add mov xor test pop aam outsl cmp sub xlat (bad) jg jns loop js (bad) lock sbb shlb into lds mov jg xchg fisubr xchg xor xchg mov fdivs pop lock xchg shrb xchg fwait rcrl push loop ljmp call xor ret inc daa enter test ret call arpl dec cmp call inc (bad) xor xchg enter fdivrp (bad) (bad) out pop scas cmpsl movsl aaa jecxz xchg pop cmp push fwait loopne test mov mov adc cli (bad) pop ljmp mov add (bad) mov mov les or rcrl add iret pop pop mov jp mov fisttp stc rcrb (bad) nop iret (bad) (bad) call add xor (bad) jg faddl adc and out fldenv dec (bad) (bad) call test in dec jg (bad) mov pop pop aas pop dec test add hlt or dec ret mov es jmp dec fs add cmp mov arpl add dec mov rcl and (bad) (bad) incl pop jae hlt enter fdivs pushw push sbb and (bad) mov (bad) (bad) (bad) push add and jg aad push fsubrs out jge jp mov es xchg mov (bad) incl call push lret cltd inc les push inc cwtl jle jmp mov sbb jnp insl add xor mov xor mov or jg decl cltd and clc or jmp test xchg mov daa mov std jmp adc ljmp (bad) aaa std jg dec sbb incb decl fild popa mov addr16 fs imul xor (bad) lcall jns add daa jg mov pop jae std ret bswap cmp jno (bad) (bad) (bad) (bad) sti (bad) test out ss decl sbb cmp fcmovbe icebp cmpsl mov or and (bad) call mov mov in sbb out jmp pop popf test push xchg addl shlb (bad) (bad) (bad) out cmpsb add mov add mov and jmp (bad) (bad) (bad) mov (bad) or mov push outsl and cmpsl xor dec jecxz sub ljmp (bad) decl push cmc sbb dec or sbb mov (bad) (bad) (bad) incl sti pop pop and test push (bad) jle add lcall roll outsb cli ja adc jp fstpt hlt loope pushf pushf into mov sub stos fidiv iret push mov pop iret lcall jg (bad) lcall add test add loopne scas out incb loop push (bad) call loopne mov enter add adc adc xlat out dec out sbb or aas adc or cmp push sub outsl fistp cld pushf fnstcw xor and loopne (bad) (bad) pushl xlat outsl push mov (bad) mov push jl paddq in add aad jne mov xor decl or push arpl daa cmp pusha or sbb jmp popa bound push iret mov lds imul dec add in mov shlb leave push test ret push std push adc (bad) (bad) fist or xchg dec clc cmpsl ljmp aam sbb (bad) pushl fsubl dec (bad) pcmpeqw test or dec or inc (bad) das out pop pop (bad) (bad) (bad) (bad) inc sub mov lods lret push adc pop xchg add jmp call jbe sbbl sar pushl jl incb movsl jecxz xor loope adc or cmp jmp imul and push and in mov xlat xlat mov mov (bad) mov mov pop test lock repz jmp loopne add mov pop loopne outsl or mov jbe adc (bad) (bad) jg jns loop es jb cmc int3 out iret fcmovu mov mov jp pop aaa fiadd cli inc out mov aad fsubrp ljmp (bad) (bad) out sbbl cld adc stos sahf push cmc (bad) dec xor xor dec js (bad) (bad) call xchg bound cvttps2pi lahf popf adc outsb cmpsb pop jb (bad) popf (bad) loop jmp (bad) (bad) (bad) (bad) aas fcompp mov push movsb sbb cmp push inc sbb cmp pop cmpsl loope sub (bad) (bad) (bad) clc xchg add lahf pop call outsl mov pop aad (bad) add out fs clc cli xor test rolb loopne mov (bad) aas clc (bad) fcompl push pop (bad) jecxz fs push repnz cmc data16 ds cmp rclb std decl sbb jno ficoml cmp cmp push pop dec jb jae call iret or es (bad) cmp sarl out mov (bad) (bad) (bad) call mov jno std cmp xchg cltd ljmp jne mov test (bad) (bad) (bad) (bad) call fucompp jbe push movsb push inc dec ljmp daa repnz push sbb (bad) (bad) (bad) call and adc jp xchg sub (bad) and cwtl (bad) jo call (bad) dec push (bad) incl daa cmpsl adc aam (bad) (bad) loopne (bad) ljmp shr (bad) add pop sarl cltd (bad) mov scas lahf inc mov sti shrl fs pop clc in das mov js clc stos push cmp and (bad) decl (bad) pushf jmp mov clc inc mov out pop sbb popa cmp (bad) cmp popa clc (bad) call lods (bad) mov cmp push popf mov (bad) cmp xchg aad push or test pop fistl fcomip (bad) (bad) sti jmp mov fdivrl xchg jle cmc and fwait call jle insb std pop icebp incl push test sarb insl xor (bad) sbb xor rcrl push cld push std cld and mov (bad) push (bad) in sub cli (bad) (bad) (bad) mov iret or cmpsb xchg xlat xor lock fisttp add addl movsb or pop xor push rorb xor aam sub (bad) decl inc and add add push into movsl mov mov adc ss (bad) adc xor jl lods mov loope sub mov insl mov mov stos mov addr16 lret outsl cld jp loope or fwait jl add push mov or mov add push clc (bad) jg rorb adc sub faddl or sbb dec pop outsl xorb jno jno or stos dec pop aad cli (bad) (bad) cmp dec fdivrp outsb pop pop mov repz fistl sbb outsl mov push mov cmp call sbb (bad) decl lock idiv mov mov inc fist (bad) (bad) pushl out pop jecxz test inc out pop jae negl inc scas mov neg (bad) (bad) (bad) jle in jns out loop jb (bad) pop je insl push fidivr jb scas jns sti (bad) ljmp stc mov enter cmp das aam mov ljmp xlat pop out movsb (bad) (bad) (bad) jg mov pop inc jle in dec cmpsl pop pop mov jmp call jnp fildll pop (bad) ja cmp ret (bad) (bad) out popf sub (bad) enter movsl mov out mov mov inc fidivr int3 sarl mov push aas mov call and mov out (bad) push fldcw xlat fbstp das mov lahf add jg das idiv lcall jp push sarl (bad) sti pop lret sti xor mov push mov jbe (bad) (bad) cli mov (bad) (bad) pushl mov xor mov xlat out sub push mov mov out cmp (bad) ljmp negb sar leave xor loope imul (bad) lcall adc ret popf pop jg das jg pop pushf (bad) cltd lds push fstp ljmp inc sbb outsb in xor (bad) aas std sbb andl lds adc hlt cmp push pop les pop inc popf inc cs mov jge adc (bad) incl inc aaa andl push mov data16 iret cltd in negb jmp jmp cmp fstpl push ret sti in jle lahf mov test pushl jg es ljmp and jns xchg icebp in xor push flds aaa incl add adc cmpsb rorb in push loopne jmp jge add fdivrp jl repz fwait incb pushl push out pusha popa scas iret rclb and push hlt outsl jnp fist cmpb les es mov mov xchg into fldenv (bad) incl cmp push push das sub js pop inc rolb (bad) (bad) (bad) incl xor dec xchg cmp (bad) sub xor ja icebp sbb mov sarb inc (bad) (bad) (bad) (bad) ljmp mov pop leave jb in hlt and xchg pop rclb mov (bad) movsl mov stos out aas stos adc mov and pop mov pop out fldcw pushf mov mov (bad) xlat lahf mov arpl jae xor outsl (bad) ljmp cmp fdivrl out mov sub out lods int mov (bad) lcall icebp iret popf scas pop jg cld lock xchg stos dec dec fstp into dec lods xchg pop mov in std (bad) (bad) (bad) lcall pop adc out mov mov aas cmc mov hlt pushf pop inc cld pop idivb jg sti (bad) ljmp mov fcmovne xchg jg pop (bad) jg mov std fucom scas mov int3 int xchg ljmp pop mov inc jle sub cmpsw repnz mov aad cltd cmc add not in int3 mov test repz clc (bad) mov repnz jle sub ss and xor test push ficompl mov jmp adc push sti daa pop mov mov lods inc jo movsl das or sti jg (bad) cmpsl sbb cmp clc sub fucomip jg imull dec mov sti out (bad) xchg rcrl into cwtl test jge mov sub clc out mov mov lahf data16 fwait mov test stc cli xor mov loope xchg sti out dec add inc inc inc bound out mov (bad) xor or inc jecxz pop pop addb dec pop cmp ret imul mov in into iret aad mov aas cli mov idivl or mov test ds inc add lods mov mov std pop repz incw fs jg inc (bad) mov xchg jecxz (bad) xor rol push jo cs lods (bad) (bad) (bad) (bad) ffree stos (bad) sbb lock xchg test pop jp in cmp shrl sub lret ds sar jg pusha add repz test xor add fs inc dec shlb mov outsl (bad) addl cs repnz lea dec stos jle or mov (bad) (bad) fist dec push add into inc pop jl add stos dec dec sub leave addr16 xlat mov aas jl cmc mov jmp std fwait inc or lods mov fwait push dec sti adc lret dec sti pop push insl push mov add test (bad) call ret idiv mov out arpl rcl cmp jecxz je stc shl and jg,pt mul (bad) mov xor xchg mov jae fwait in out (bad) lock jns in (bad) (bad) (bad) push icebp sti jbe lcall lods mov movsl (bad) ljmp imul pop jnp,pt pop lods stc out mov jmp inc add (bad) cmp dec lahf repz push mov mov mov pop (bad) out mov push out sub lahf push mov iret sub add rcrl outsb insl mov inc aad and stos hlt loop mov (bad) (bad) (bad) (bad) mov idivb sbb mov repnz jne fwait divb sbb (bad) (bad) fildll jns outsl pop fistpl fst inc (bad) arpl xlat fs imul mov sti fisubrl sarl aas mov cmp lcall push cmc (bad) (bad) (bad) jmp push imul jg jp stos scas fwait inc lods xchg pop cmp push cli mov or fcmovu stc mov jae adc cmc hlt pop xchg jae cmp (bad) aam insb xor ds clc sbb or in push push xor xchg inc imul (bad) (bad) (bad) (bad) mov jp push pusha fistp imul imul push push sub sarl jnp (bad) (bad) (bad) call nop orb dec rdtsc jae mov jmp not cmpsl pop jle into mov cmp mov pop xor xor sbb push pop int mov dec push fstpt in in mov dec (bad) xor jns aaa xchg cmp lcall icebp clc pop cli hlt lret out or (bad) (bad) fucomip push jmp jae lea jbe fninit je sarb cld mov std sbb jle jne arpl dec dec fdivr aaa cld mov inc rcll jl mov insl mov (bad) call mov ss cmpsb scas test mov (bad) push imul (bad) (bad) pushl lods xor fcompl in xor fsub xlat jns jns fnstsw in (bad) (bad) (bad) incl mov sbb repz dec push pop jnp scas lock push push in cli fdivl fcmovu (bad) ljmp or divb xchg test cmp leave popa cmp into (bad) (bad) (bad) call cwtl fcmovbe popa jae push cmp stos testb dec xchg mov xor (bad) (bad) mov out fdivr clc dec ja sahf push sub je mov aad mov lea cs sub jl jno jecxz mov mov mov sbb sub repnz (bad) (bad) (bad) pushl inc xor into jbe stc mov mov (bad) (bad) mov dec mov mov sbb (bad) std lcall xor popw fidivl out ds pop cmp gs icebp cmp mov scas (bad) lcall (bad) push sti je inc sti cmp mov addr16 ds jne ss mov fnsave mov xchg jo dec sbb imul (bad) lcall loop aad or test mov push stos mov push mov (bad) jmp cltd mov (bad) mov jbe out decl jnp xchg pop insl std ficompl hlt lcall aam test popf scas mov mov or pop mov fistpl jle (bad) jl or aaa mov push in sub jg fwait ret mov lahf jl lcall jmp cli out mov ror aas std cwtl jle fildll popa (bad) (bad) ljmp push lahf jg icebp mov iret xchg pop int3 mov dec hlt jnp xor or mov fadds add jecxz xlat add lcall repz aas dec jmp (bad) mov mov cli sbb inc mov (bad) cli cld pop pop and inc mov add jne pusha xchg dec push lock sahf std inc (bad) lcall mov jb imull xor add out mov inc (bad) sbb cmp es mov das js cmp jecxz mov ljmp (bad) mov cmp mov cli cmp in xor jnp mov movsl mov out sub out jecxz call mov sub lret inc lods std jbe or out ret lcall mov or adc adc jg sbb jle fwait adc cmp lock ret jecxz movsl xchg cs cmpsl inc mov fcmovnu push sbb adc outsl xlat pop mov jmp (bad) cld (bad) or (bad) dec mov adc leave sti aaa xchg pushl dec mov mov insb add or add push and decl pusha sbb std mov lock out jg adc js push lds pop add push frstor and pop add imul sbb dec pop lock jg push push jmp hlt inc dec mov adc adcb sub or dec mov mov adc add enter mov mov (bad) decl or pop in mov mov sti loope mov out (bad) xchg (bad) (bad) (bad) (bad) ds repz mov pop rorb xchg dec xor orb push adc add (bad) loope cs addl and push or pop pop icebp pop inc clc jle cmp and pop mov or dec fwait pop lock inc xor decl ljmp add je cmp push add mov add mov or popf cwtl es outsb (bad) pop mov jecxz push sub roll cs cltd jnp sar fbld add mov jmp mov cmpsb xor adc dec les add pop xor dec add or and push mov in outsl xchg enter add cmp (bad) (bad) jmp adc sub mov mov pop or cs sub dec pop sub in (bad) call popa add inc cs sbb xorl hlt adc (bad) std js push scas into into mov mov pop (bad) in call ljmp jle (bad) sub mov cmpb subb and idiv push (bad) mov cmovo repz inc mov (bad) mov in dec les popa lret (bad) addr16 push std insb stc cmp (bad) lcall cmc loopne loop xorl clc loopne int3 hlt dec movsl sbb xchg or cld (bad) (bad) (bad) pushl shll les mov push adc inc lcall inc xchg sub and sar fs sub add fbstp jnp sub (bad) dec daa adc je loop repnz aam or clc incl subb iret ja out aas std inc mov cmpsb dec xchg jno pop inc and push lret (bad) (bad) (bad) jg and hlt rcrl rolb roll test (bad) (bad) (bad) call inc or jb sub mov sub aam sbb xchg dec (bad) inc push mov cli popa or fimull and test and dec add mov leave dec xchg xor push and sbb (bad) cmp pop inc mov xor or inc mov (bad) (bad) incl je lcall mov cmp shrb ds (bad) xor (bad) (bad) inc call insb xor mov mov sub xchg arpl mov lods or (bad) sbb mov (bad) (bad) push arpl mov add addl inc and inc dec pop dec pop dec fmuls and xor (bad) call fimull aaa or test mov mov bound xor (bad) adc adc adc inc les and mov daa mov movsb push rclb rolb outsb push and sub (bad) (bad) (bad) lcall xchg leave fisubl pop cmp in in in in in repnz or (bad) (bad) lcall clc push loop push lret sbb adc xor push gs xor mov mov call xor mov xchg dec dec movsl lods mov pop push (bad) (bad) ljmp imul xchg rclb lret jmp add (bad) decl sbb sbb ja scas cwtl dec cmpsb sbb mov (bad) push xor xor cwtl out setns lcall mov xchg dec xchg es sbb das push test stos or push lret scas jmp call pop push jge inc push xor stos push stos popf push jmp sbb test addr16 push aas movsb jle std mov pop ret dec ret dec inc movsb push mov (bad) and (bad) (bad) (bad) jmp mov sub imul les mov fnstcw mov mov (bad) (bad) (bad) incl dec xor push repz data16 pop jecxz jno pushf je or sub ficom sub (bad) (bad) (bad) ljmp sbb gs imul dec stos push stos inc jmp ss in cmpsl popf cmpsb mov (bad) lcall orl pop daa inc addr16 into add push frstor cmp stos (bad) (bad) (bad) ljmp sbb outsb cmpsl out cwtl sahf mov outsl cmpsl fidivr out sbb das std push std insl (bad) (bad) (bad) (bad) cli cmpsl cmc inc or push mov and fisttpl sbb sbb push inc pop ret inc inc (bad) (bad) jmp loope xchg mov inc lea mov pop jecxz jecxz movb es (bad) incl and dec dec ljmp cmpsb sub int3 int int cltd xor fwait cmp fwait xlat fbstp sub test mov pop cmpsb pop (bad) (bad) (bad) (bad) out mov outsb test pop movsl pop push pop pop mov lods popf lods and cmpsl adc stos sahf loopne or (bad) addr16 mov fcomps std mov mov popa bound addr16 jp mov (bad) (bad) (bad) jge std cmp push stos sbb mov adc push cmp lcall hlt xchg jmp das addr16 iret repnz mov lret sub imul cmpb dec (bad) lret cs ds jmp es fnop mov jno loope (bad) cmc popf fwait (bad) (bad) (bad) pushl fldt out xchg lahf int3 xor sub ret enter in aas (bad) call xor lods jle dec andl das xchg push lods xlat mov movsl ja (bad) (bad) ljmp idivb jb jecxz jecxz aaa fidiv ficomp int3 aaa (bad) mov mov dec ret outsl sahf pop (bad) incl jg push (bad) jp roll cmpsl andb inc sbbl sti clc jp and divb mov popl lods and (bad) (bad) (bad) fucomi nop or out into xchg into imul (bad) rolb popa out mov jle daa test call aas mov pop sbb xor inc jae inc cli inc xchg inc ficomp scas sub pushl push fidivl mov cs int3 aad popf pop dec insb dec sbb sub (bad) ljmp cld in repz popf loop jecxz pop cwtl das enter mov mov (bad) (bad) ljmp xchg inc dec mov xchg lock adc test mov mov jns sbb jmp rorl call jp in xchg mov xor jmp mov mov fwait cmp insl xor mov (bad) (bad) (bad) call dec xchg mov ljmp test mov push xchg pop leave imul lods add inc cmpsb call sub mov jmp int lret sahf sub in int3 mov fistl (bad) in adc (bad) (bad) inc adc xchg mov xchg sub lods push mov jno fisttpl jecxz add lods cmp (bad) jg mov dec stos in push xchg scas jle es imul stos adc mov in jge (bad) in (bad) (bad) (bad) lcall pop das pop fbstp sbb adc fistl xchg adc js sbb (bad) (bad) mov test iret data16 out sub stos xchg out push outsb or sti (bad) decl cmc testb xchg int fstpt mov cmpsl leave into int pushl movsb push hlt push cli push mov clc outsb shr sbb divb (bad) (bad) (bad) call fistpl idiv ds mov dec aad aad sti dec sti mov aas scas mov insl (bad) (bad) (bad) lcall dec insl jno movl and mov mov cmp sub inc push (bad) pop (bad) (bad) (bad) (bad) mov sub lea jns jmp push or jnp (bad) ljmp pop jbe addr16 push lcall sti pop bound dec int3 ds (bad) (bad) call ljmp setl pop jns repz leave imul addr16 mov (bad) (bad) (bad) jle stc fsubl mov into fildll outsl out mov inc decl into pop repnz (bad) (bad) (bad) mov in push mov pop insl ljmp dec (bad) mov mov xchg mov jmp (bad) mov (bad) aad (bad) (bad) lcall repz test fnstsw daa std into lret mov lods mov sar jmp fldl fnop out fdivrl (bad) ja repz inc testl xchg cmc (bad) cmovae xchg cmp loop jb jmp cld cmpsl inc iret xor sahf pop (bad) mov push das jle aad xlat into rcrl (bad) call insl jl std ljmp ret mov pop hlt push sti in (bad) ja xchg (bad) (bad) pushl out mov jl jg ljmp mov push shlb loopne cwtl sub cwtl repz arpl sub xor imul pop push dec dec cs outsl bound js sbb inc or ret push and jg sbb cmp and imul decl dec jo gs jp push outsb (bad) jmp imul and or cmp push insb outsb jae mov scas cmp sub mov xor cld push stos (bad) mov push adc xor xor aaa jp xor push cmp in xor xor sub cmp xor add popa mov lahf fimull cmp data16 inc fstpl scas in xor cs cld fbstp imul xor xor sub outsb je js inc inc pop (bad) and push inc (bad) mov je popa lcall inc add test testb das js jo lods mov in xor imul mov add popa lods outsb xor push jecxz stc in add pop dec dec pop leave pop mov insl insl jae je jbe jne push adc das cmp xchg and lods data16 sbb mov xor mov xor jne mov xchg (bad) cmp mov rcrb xchg jecxz ds jg or ja add in sub pop xchg gs push ds hlt mov add jnp fldt sub or xor movsb inc testl aaa xor xor mov pop push xchg mov inc push cmp imul outsb addr16 sub push jne mov (bad) push sub xor imul and jae inc adc push std inc and inc ss ss rorb (bad) pop cmp sti inc cwtl inc dec inc and imul cmp xor push or xor enter add cmp fs xor xor gs and mov mov add insb lds aad imul jns lea loopne fisub sub insb imul (bad) (bad) adc imul stc cmp and arpl fs bound imul (bad) push test pushf ja cmp dec and mov (bad) jne inc rcrb xchg popa push aad xlat xor xor rclb and rcr cmpsl xchg jo pop xlat hlt mov pop popf insb jne fdivl add xor jne jne fimull cltd dec pop xor push add popf sbb sub xlat outsb test test lcall xchg or pop jbe adc or ss cmp jno cmp roll pop cmp das jno xor int3 mov and sbb mov leave adc test pop shl (bad) imul ja and int3 dec icebp push lcall jns pop ret jl in (bad) mov (bad) (bad) (bad) incl and push and add mov push xor mov pop mov mov (bad) (bad) pushl pop das pusha fs cmc and adc mov mov add push adc ljmp add scas out (bad) xor adc mov xchg cltd cmp idivl (bad) (bad) (bad) (bad) repnz cmp lock and idiv adc sti roll lcall call inc jo inc lock stos movsl mov bound adc (bad) xor (bad) mov (bad) cmp outsl fild or mov and sbb (bad) (bad) (bad) ljmp es pop push out jo fstpt dec adc out call je mov pop add sahf push sub cmp sub decb sub and incl movsl clc push and test (bad) jne xor int3 or sbb popa mov and adc dec js jle frstor int (bad) (bad) incl dec ret push mov pop or xor mov lahf xchg dec bound pop add (bad) (bad) incl dec int3 out xchg sahf push inc aam inc add inc cmp lock mov and repz clc (bad) jmp movsl or aam movsl call sbbl sub jnp adc mov (bad) (bad) inc jl aaa mov hlt andb pop loope (bad) and cmp mov (bad) (bad) inc inc mov (bad) call fsubr cs xchg roll xor (bad) (bad) incl xorb xchg jecxz adc clc sub outsb sbb pop sahf nop mov ds sar (bad) (bad) (bad) cmp mov enter cs push out adc jl jecxz jl arpl and (bad) (bad) lcall mov out adc xor repnz lods movsl lret shl in jle sub xchg and test pop adc (bad) (bad) (bad) ds out fild popa add int std sbb mov test imul je add (bad) (bad) (bad) push iret rclb es pop dec lods cmpsl pop jecxz xlat popa inc insb and xchg pusha jecxz add (bad) (bad) (bad) (bad) call fdivrs mov pop xchg sub aad js lahf push (bad) push cmp (bad) (bad) (bad) lcall sarb or or mov lret jl jg and jae scas (bad) decl jmp ret dec sub addr16 jg sarl lock inc xor fiadd cmp lods dec and (bad) mul pop add out and jle (bad) (bad) (bad) ljmp pop adc sbb mov ret js push adc into push sar das clc decl jae mov data16 aad xor and (bad) (bad) (bad) mov lods rclb push scas push popa sub (bad) jns push pushf or (bad) (bad) (bad) ljmp ja xor test mov loop arpl mov push cld (bad) jmp push xchg mov cmp shlb les jl push mov les inc loopne mov sub (bad) inc xlat xchg jg bnd pop (bad) in ja test loope clc roll call stc sarb hlt adc jp cmp add xor (bad) (bad) decl aad mov mov lret (bad) add push outsl js jmp fcoms in (bad) ljmp sti mov inc fwait cmp add insl jnp imul stos dec xor mov icebp insb fildl (bad) mov loope scas dec mov push (bad) decl jmp in lods push or imul out add jge stos iret mov rcll ss mov cwtl lahf hlt (bad) outsl insl ret fwait (bad) (bad) call adc and fdivrl fidiv or dec (bad) outsl clc outsl mov pop sbb (bad) (bad) fdivrp add movsb pop ret pop mov xchg add jle sbb cmc pop pop push xor (bad) aaa les (bad) (bad) lcall adc ljmp mov je lahf jns ret xchg imul (bad) (bad) (bad) cmp cld mov fisttp push flds jne or or pop daa push ja sbb jle shl push mov sbb sub pop sar cmp xchg dec pushl lcall das (bad) mov in add inc outsl fldcw sti push in fbstp imulb cli mov sahf repnz cmpsl xor jmp jge jmp nopl cs push or add addb xor hlt (bad) (bad) (bad) pop fwait xchg mov sbb in jle (bad) xor mov fild loopne das cli iret lea xor jbe ret lods cld sub jecxz mov pop pop int3 popf int sbb sahf fs xchg pop vpaddsb (bad) movsb xor (bad) (bad) dec pop jmp or push test adc adc mov push (bad) mov xchg fstpl jns mov pop xchg out flds lcall test (bad) in js fcmovnbe bound ret test loop insl out sarb daa inc lahf lcall jp into xchg std add inc push mov inc jecxz jno (bad) jnp fildll adc sar ljmp push aad fcomip xchg cld mov sbb push fdivr jg ljmp imul jecxz pushf outsl (bad) repz repnz pop cs (bad) (bad) (bad) cli sahf jns mov cli fdiv fisttp cmp out repz add jo jecxz push arpl mov (bad) mov adc mov mov fwait addr16 pop (bad) (bad) lcall xor dec mov int sbb or in mov out (bad) (bad) (bad) (bad) mov xchg dec and insl pop iret add add aas (bad) adc lahf idiv outsl cli mov mov repnz mov mov push ljmp ljmp mov dec jne xor std fnop adc jg scas ret cmpsl sarb popf push push push and aaa std mov lcall cwtl dec push jecxz pop push sbb (bad) call incl dec mov cmpsb sbb mov (bad) mov sbb dec hlt mov incl adc jno insl movsb outsl repz jle xchg out pop inc ja mov call xorl daa push sub lret scas imulb ficom mov inc cmp aam scas clc (bad) (bad) into adc jb scas xchg mov cmc stc loopne adcl mov movd and ja (bad) mov hlt cmp ljmp xor out mov push fiadd and mov or cmp (bad) (bad) out rclb mov pop scas adc (bad) (bad) sub (bad) jge jb push pop jmp sbb inc and mov add lods std xor sub (bad) (bad) jmp lods outsl push test out xchg dec aas adc xchg mov jo sahf push movsb mov (bad) (bad) decl push mov dec push fcompl push xchg ret mov daa dec adc cli (bad) decl mov sub cmp dec adc add incl cld pop clc (bad) jmp shl pusha mov xor incl mov js add or js pop jnp ret mov xlat cld or test std jge dec lock inc mov lcall mov aaa mov adc stos scas dec rcrb add lcall in jns mov idivb (bad) jge adc scas cli jg (bad) (bad) and aam cmpsl mov leave fdivrs mov mov adc incl lods jle dec jb mov pusha adc sub push xchg xchg fucom mov loop or shr pop repz lock scas inc jecxz stos ss clc pop hlt xor fiadd push (bad) ss (bad) mov js dec and (bad) (bad) (bad) (bad) in add clc jl jb inc xchg lock fldenv adc pop push cmp dec inc xor mov into aaa push inc lds dec fdivrl (bad) (bad) out cmp sbb add fstpt push idivb aam (bad) jle inc and jae push adc sub hlt popf scas test push nop das arpl pop (bad) (bad) mov push xor cmpsl mov pop aaa popf loopne incb sbb (bad) (bad) call and and push pop sub push push call push adc aaa and jmp inc mov xchg cmp cmp (bad) dec dec test push push mov outsl cli jmp mov lret scas jmp mov cmpsb or int3 aaa jle add or icebp (bad) ljmp xchg cmp cmp lcall xchg xor out xchg loop out fdivrl (bad) mov and ficom fimul add pop lahf aas jl lcall popa mov pop pop sub jmp xchg mull mov test shr inc je cltd repnz cli jecxz cmp fstps cmp jg or (bad) push or sti mov sbb dec or mov push movsl lea sbb and ljmp sbb sub test icebp and enter cwtl sub (bad) push pop or adc push test inc mov jecxz in push and dec orl inc xchg aam adc xlat dec call outsl ljmp lds xchg data16 mov xchg arpl test (bad) (bad) push dec adc sub jp (bad) push pop out insl fcomi es or clc jno pop (bad) int3 loope stos and ljmp out jbe int daa mov ret lock cmp and jb rcrl xchg jl into mov or cmp (bad) (bad) inc cmp jo add ja (bad) inc aad jge mul fidiv shl dec (bad) aas (bad) (bad) mov sbb (bad) push mov rcrl jno fwait add cld cmpb (bad) inc xlat mov cmp call out fsubl adc movsb lcall in and decl fdivp out or xor push jp movsb xor mov cmp push std out movsl ja sub in in inc lret push (bad) out mov clc push cmp ljmp out cli or cwtl popw bound enter shlb lret iret shr cmc icebp (bad) inc repz push (bad) das pop mov mov scas test mov stos mov (bad) mov sub inc out movsb fs loope xchg nop push divl pop icebp out lods ret (bad) (bad) (bad) (bad) mov mov (bad) aaa test sti into sbb lea dec sub (bad) pop or insb mov sbb or popf cmp xchg sbb push icebp cmp (bad) (bad) (bad) aas push sbb dec xor int and and outsl in (bad) icebp in (bad) (bad) jg lods lds dec int xchg jl (bad) adc ret fidivl int mov (bad) (bad) decl dec jg shr xchg int3 cmpsb xchg or xchg push test or mov pop pop dec pop mov xchg nop loop mov sbbl cmc (bad) dec xchg fbld dec push inc arpl dec pop aas jle cmp add push adc add dec lret lret int ljmp (bad) (bad) incl dec scas and fisttpl enter mov arpl stos sbb cmp cmp incl nop mov mov out fldt mov test cmp (bad) (bad) (bad) call push cmp test test pusha insl push gs pushf dec xor or push pop push ja es and add mov fcomp mov jge cmp stos pusha pop test inc (bad) mov inc add dec movsl into push sbb and push scas mov pop inc hlt sahf leave (bad) je fnop popf fcoms push mov imull inc jecxz mov call rcrb sahf (bad) mov inc add pop aad fsubrs jb pop dec inc mov insl jb pop push repz sub or mov sbb das (bad) dec cmp ds out sub loop pusha inc lcall (bad) (bad) jmp insb ret movsl xchg push and test jb test xchg ret (bad) in (bad) decl inc dec xchg push lods jnp pop je pop sub repz xor pusha mov in cmp cmp outsl iret ds (bad) (bad) (bad) mov jecxz cmp lds cmpsl cmpsl adc js je bound push stos mov pop lock mov sub adc adc lds sub movsb movsb mov bound (bad) sbb dec mov push cmp sbb push hlt je mov cmp jl (bad) mov sar and mov mov mov push jno fldenv adc test jmp je outsl cli icebp jecxz pop xor sahf lcall (bad) pop mov mov (bad) pop jmp jge mov and or inc testl nop dec cmpl pop pop push es test jmp (bad) fdivp xor pop fwait lret push xchg daa fadds pop lock push jle out push fs icebp sbb mov lock sbb jo mov mov movsb or outsb (bad) (bad) (bad) pushl inc jl lods push frstor xchg stos cs repnz xchg push jb cs mov (bad) lret (bad) (bad) jnp divb js mov mov push repnz push xor popa dec cltd in xor sbb mov mov int3 and or cmp jecxz roll add dec sub outsl clc mov pop mov and fcoms call in adc adc mov xor mov stc (bad) imul cmp movsb lcall mov fiaddl adc loopne mov cmc (bad) ljmp clc cmc adc mov pop lds xchg repnz ret gs push xchg mov test cli ss (bad) incl push mov (bad) fsubs pop xor mov (bad) ljmp inc popa std push aad or xor jmp or aas adc cli call mov test cld and cmp popw (bad) call dec nop jg fcompl cmp jae fdivp jg mov pushf loopne shrb pop mov movsl xor (bad) (bad) mov movsl shl (bad) ss or aaa loopne pop aaa insb int3 push test mov (bad) ljmp icebp imul xchg nop sub mov add jne mov test aaa cmp inc fwait sarb dec xchg cmpsl sub clc ja and (bad) (bad) jg jb int3 iret ret push pop sbb dec cmp sbb inc (bad) (bad) (bad) incl mov sub jno and jnp pop mov sbb adc std fistpll jle mov movsl imulb mov aas scas and movsb pop push std scas ret sub arpl cmp pop cld hlt jae xchg aad (bad) (bad) mov fisub lods loop cs push adc xchg bound or mov (bad) dec push sub ret xchg pop hlt aaa sub jb (bad) (bad) jg fisttpll cmp pop sahf dec mov addr16 sbb arpl enter xor sti ljmp mov aas jg sahf ds test nop pusha jo jo decl adc dec sbb sti xchg lcall add loopne pop imul mov jle (bad) (bad) (bad) inc inc lods and jnp (bad) or iret pop sbb xchg xchg adc mov lret stos pop scas (bad) mov or fs int xor (bad) jg cmp repz dec xchg fimul jg nop inc aam popf clc (bad) cld sar sbbl sar push pop sub je inc in iret adc pop (bad) (bad) fbld add stc (bad) nop mov or popf mov (bad) pushl jecxz mov lods pushf cs lea xchg cmp sub hlt (bad) (bad) (bad) decl mov aas adc std xchg popf dec sbbl bnd mov in test mov stos jmp fistl dec lea cmpsl cmp xor lea repz fildll clc lret push pop (bad) push (bad) sbb lods lock xor pushl sub movsb sbb mov hlt incl dec (bad) mov mov loopne pop xchg mov fucomp cli aaa loope imul add scas mov mov add mov (bad) jmp in mov dec cmp fldt jl or out (bad) adc fwait mov push stos aam (bad) (bad) (bad) out stos push jo std and jne fcoms xchg ret ss inc dec xchg std push in push sti push mov iret ret je iret dec clc lock js mov cmp cmpsb dec arpl jne insb or (bad) (bad) aas outsb xorl daa gs test add in dec dec mov int clc (bad) div mov clc ljmp ss rcrb inc or mov addr16 (bad) cmc fdivr (bad) (bad) (bad) ljmp fimull test push loopne stos mov xchg insl sbb push sub das ret shr jno out add dec and mov pusha rol xor sub (bad) not xlat roll into jnp sahf pop sbbl stos lcall jno jge,pt mov add fs loope jg cmp mov lock or jb sub mov (bad) (bad) pushl jae xchg mov ret fisubrl ja cmp cmc sar push std add dec rorb sahf (bad) cmpsb cli xor add push repnz (bad) (bad) lcall inc ds pop xor sti mov jae lds stos stos inc or leave addl push push (bad) decl cmp (bad) repnz es int3 xchg cmp andb (bad) incl clc push sbbb lret iret or mov ds push (bad) (bad) (bad) pushl jle imul int push cwtl outsl cwtl cmp stc add mov xchg mov dec and pop (bad) (bad) (bad) rorb js xchg mov (bad) out or ficoml cmpsl jecxz push add sbb jmp stc roll sub pop add sbb (bad) out clc addr16 fistpl in dec jp hlt sub mov jmp mov lret int3 cld (bad) jg (bad) jmp dec mov data16 fistpll loop cld xchg (bad) lcall xlat loopne inc or jae divl and push xor lods (bad) es xor ret aam mov sub xchg out (bad) fbld push add in out push pop push mov (bad) xlat xchg push fldl ja (bad) xor pop mov and mov pushl call sub push mov cmpsb outsl bound mov (bad) (bad) push icebp push adc ret cmp or inc xor mov jecxz dec pushf (bad) icebp sarb (bad) std pop out mov jmp or (bad) fnstsw (bad) (bad) fcomip sbb add clc adc xchg test sub cli leave xchg xor jge (bad) jg jmp je,pt push jns lods adc int call stos jnp jmp mov jl sar pop adc in (bad) incl les cmp fcomip das aas push xchg ret cmp pop mov mov sub lcall push pop clc dec ret faddp lahf adc (bad) push jecxz jmp jl or cmc std sub (bad) (bad) sti push adc fisttpll cmpsl xchg and sub add ljmp mov ret cmovae les std mov insl cld out rcrb loopne (bad) (bad) push push insb jp or fcmovbe mov insb lods fistpll clc popa xchg nop dec inc or fbld scas dec lock mov mov stc lock or cwtl rolb int dec push adc mov adc lcall cmp (bad) (bad) (bad) std pop cld leave loope cwtl loopne xchg in fldl popf cs xor (bad) lock out lcall incb (bad) cmp fnop fistpll and adc (bad) (bad) (bad) call add mov mov repz cmc loopne call dec jp jecxz sarl mov das faddl insb andb das push std mov lock cmc es enter (bad) fnop sti pop adc cli cmpsb mov (bad) (bad) (bad) incl (bad) jbe addr16 in jg pop inc or jns aas das clc jns iret or lock or (bad) lahf pop cld mov ljmp hlt pushl (bad) push mov outsl test stos pop out cli push (bad) mov (bad) jnp movsb lods mov sahf adc or add mov fcomps lods (bad) decl (bad) xor xor xor xor xor xor xor xor xor (bad) push pushl xor (bad) xor ss ss test aaa dec aaa jns ret adc (bad) pushl out push cmp cmp xchg mov cmp cmp inc or cmp (bad) (bad) (bad) lcall arpl xchg (bad) cmp cmp mov cmp cmp cmp cmp idivb (bad) call or xor mov aas ljmp mov (bad) (bad) jmp jg sahf xor xor push xor popa xor xor pop xor sub xor xor fcoms (bad) jmp loop sbb xor xor xor xor loopne lcall cmp xor xor xor xor xor push ss inc aaa rcl lock cmp cmp ja dec jl jno mov (bad) (bad) cmp cmp cmp cmpl cmp cmp sub popl dec inc in pop adc push push sti push cmp cmp cmp cmp mov data16 and inc jp,pt jecxz adc clc sub ss dec aas scas aas out nop sahf sub or (bad) (bad) lcall xor xor xor xor mov (bad) xor xor xor xor xor xor xor pop (bad) push xor ret (bad) std xor dec ss ss ss out (bad) ss mov gs lea lcall jmp mov jg push add and push cmp mov cmp jg mov cmp mov (bad) push cmp push aas push aas nop aas mov pushf or jae ret lcall (bad) fidiv out xor xor pop xor xor imul adc ss xchg dec sbb bound cmp cmp inc mov add fs and (bad) call cmp cmp movsb and outsl inc mov iret cmp cmp add jg lret cmp test sbb mov jo,pt jne xchg xchg ds leave cmpsl inc jmp aas pop aas insl aas ja mov mov loope and xor das outsb fs and scas not xor mov (bad) xlat xor xor xor incb cld mov fmulp xor xor cld (bad) (bad) cmp push xor xor xor xor xor xor inc xor (bad) pushl lcall xor xor xor sar jg mov xor xor xor xor xor xor mov ja xor jmp cmp xorl aaa add ret jecxz inc and and mov pop cmc mov mov in aaa repz sub push cmp jmp mov adc lea sbb cmp (bad) incl cmp cmp (bad) cmp xor cmp cmp cmp cmp cmp jp mov (bad) call cmp sbb outsl orl ds push stos out lcall ret xor movsb push scas (bad) (bad) jmp xor xor xor xor xor push jbe sub jg mov jecxz adc aaa ss ss ss and into mov inc das addr16 fwait js aaa xchg aaa stos aaa mov mov or leave xor into jo (bad) cmp pusha push cli push ss cmp cmp das mov mov mov int stc cmp cmp cmp cmp (bad) cmpsb arpl cmp cmp cmp jg cmp test lds cmp inc ds arpl push scas sub imul pop dec adc xor xor add jmp mov xor xor xor xor mov xor clc mov xor xor lret cmpsb push pop xchg add (bad) xchg and cmp cmp cmp pop (bad) jmp mov stos cmp cmp cmp pop adc (bad) xor jg cmp insl cmpsb test mov (bad) aas enter xchg add cmpsb dec insl or ljmp or rolb sub or xor pusha (bad) mov (bad) jmp ss out aaa mov ljmp imul cmp cmp cmp xchg cmp cmp cmp icebp cwtl cmp cmp cmp bound xchg loop (bad) cmp mov jle mov mov pop mov jo mov xor xor (bad) decl xor xor xor xor sar imul int in out cmp add or ds adc ret pop and mov xchg (bad) addr16 inc jle cmp jne (bad) imul jbe jmp loop push xor cmp cmp cmp mov mov aas sbb sub aas dec dec xor xchg (bad) aas jo mov mov xor xor cwtl xor dec xor and call xor xor adc mov push (bad) sub jmp jb jae cltd aaa mov mov (bad) in jecxz (bad) cmp cmp icebp ljmp cmp das cmp cmp cmp push cmp cmp cmp hlt fisttp dec xlat cmp cmp cmp lock jmp cmp jns xchg ds ds aaa mov (bad) xor inc test cli mov or jb scas push mov xor aad sysenter fimull jl or push es mov cs add adc or mov fimull mov jns test fisttpll stos ss mov aaa pop aaa mov aaa add xor mov cmp xchg cmp inc lcall inc cmp push mov cmp (bad) cmp jle loop sub (bad) jmp cmp cmp cmp cmp cmp fdivrs cmp mov sub lret fdivrl xchg sub dec iret (bad) dec ljmp bound jbe cmp push mov jmp aas dec aas dec aas pop js data16 scas ret aas xlat aas repnz xor xor xor jb xor xchg xor (bad) rol xor cs or xor ljmp xor xor xor xor xor push stos cwtl and ret pushl outsl xor xor xor xor cmp cld mov clc mov jb jl xchg xor std lods dec (bad) pop xor cmp ja adc fidiv divb dec aaa xchg pushf aaa mov aaa or clc cs cmp cmp cmp push cli (bad) arpl inc jmp int3 mov dec cmp cmp cmp add rclb mov clc int mov sarl fdivrs loop aad or jb cmp cmp push mov jo xchg mov dec ss out test push call je,pt mov xchg pop add mov aas aaa or push xor decl out (bad) xor out repz xor xor xor xor (bad) (bad) clc xor xor or xor fs aaa inc push sub stos xchg (bad) jmp or push push inc cmp xchg cmp or addb insl cmp push sbb or pop dec cmp outsb jbe mov add or aas addr16 mov rcll dec decl adc xor jmp repnz dec xor cli mov jecxz sub cs sub mov mov fnstenv add int lock inc loope cmp cmp lea dec sub int xlat cmp jle sbb cmp pop cmp int push and inc aaa loop cmp (bad) into cmp cmp (bad) xlat sar and cmp dec in es pushw mov andb lcall add (bad) xor xor ret ljmp jbe push xor ror test cltd xor cmp mov ss push imul (bad) scas (bad) mov cmp cmp pop xchg mov mov outsl pop add fwait idivl cld cmp sub jo sbbb inc push pop pushl cmp cmp jl,pt adc (bad) cmp add adc xchg cmp cmp mov add cmp cmp cmp cmp or xchg add sar lods sarl fstpt or adc xor cmp bnd imul cmpsl add and pushl add sbb inc xor xor xor pop loope pop push xor pop pop xor xchg out sbb pushl lahf xor pop xor aaa loope je aaa ficoml ss adc pusha rcrb push cmpsb aaa mov aaa add test and cmp mov test arpl cmp cmp cmp push inc daa fisubr (bad) xchg or xor decl cmp sti cmp or and sub cmpsl ds push dec sub push sti ret xor (bad) (bad) cmp xchg xor xor xor xor mov push or out xor lcall xor xor inc jmp xchg jl mov lret daa jmp push mov push cmpsb cmp cmp loopne mov cmp cmp icebp mov pop into mov jmp cmp insl pop push mov sti ds add xor add cs xor xor orl xor xor xor decl cld inc test xor dec sub inc xor xorl xchg xor xor lock (bad) call and mov aaa inc aaa outsb aaa (bad) lcall ret cmp ljmp adc std (bad) cmp add cmp cmp mov ret cmp sbb push stc pop sub pop push inc ja inc shll mov inc dec mov push xor xor ret sbb xor outsl add pushl mov xor xor xor and pop xor xor jge sbb addb jae sbb xor pop (bad) aaa mov pop xor xor and jnp adc (bad) (bad) in aaa cs incb pop cmp cmp fisttp cmp cmp inc popa dec push cli cmp in adc pusha ds or mov in xchg (bad) cmpl or incl add pop xor xor (bad) call jp adc push (bad) or xor mov jl ljmp (bad) addr16 xor outsb push test ds jbe or xor int xor sub lret adcl ret lods ss fild push aaa push aaa jle inc aaa arpl sub mov das cmp cmp outsl cmp es adc jp cmp cmp ljmp (bad) mov cmp adc mov sahf cmp pop mov push push cmp jp cmp cmp add push ret mov jle pop mov les inc (bad) sbb pop into movsb pop mov lock aas fistl sbb pop fildll xchg cld das (bad) fdivl adc pop xor xor daa pop add imulb outsl iret ja imul dec xor int (bad) xor and mov cld mov pop xor enter fmull mov xchg decl aaa into aaa fldl cmp cmp test jmp lret add adc pop cmp cmp add inc cmp cmp push mov cmp jle and fmuls das (bad) push ds mov sbb sub xlat rolb scas pusha add stos and xchg jbe stos ret xor xchg loopne icebp xor xor mov and rolb lret push clc das or sti xor xor push mov fwait dec std xor dec cld ss ss ss aaa inc jo mov je or dec cmp sbb push inc loop ljmp push cmp ja mov loope aas ficoml pop mov dec mov jae xchg (bad) inc xchg xor push js das dec jo push xor imulb or jg jp je lret iret and push loop push cld xor xor decb (bad) es sub loop,pn xor dec aas je mov out xor mov or xor push loop push jb jl or pop add out xchg aaa sarl pop clc sub xor aaa ds jl add lcall repnz cmp cmp (bad) repz cmp cmp cmp cmp pop lock inc jp lcall gs mov addb scas mov or aas or imul hlt dec adc mov (bad) (bad) int3 (bad) xor daa xor xor test push fisub sbb xor xchg cmp sbbl xor xor xor xor xor pop sarb ret int3 lods lock in es fild movsl sub aaa and xor (bad) cli mov push (bad) fdivrs cmp xchg sarb fistpll push mov xor loopne push movsb push xchg mov pop xchg inc push jmp cmp adc test enter adc sbb cmp and xchg popl outsb inc sbbl scas outsl jp das lods insb insl jbe aas jo pop faddl add sbb dec mov xor data16 lock xor lcall lcall xor movsl xor ret bound mov ror adc or aaa sub adc jp lcall cmovb dec rorb jbe orb sub mov fistpll (bad) cmp cmp or cmp ds cmpl mov fnstenv mov ss add pop jmp xor xor jne adc sarb dec cmpsb add lret cs sar xor xor adc sbb push lret xor pop cmp inc add inc adc (bad) pop xor les mov xchg add ljmp ljmp xor xor xor xor xor xor xor jnp mov not add or fisubrl xor add in pusha push les inc sbb dec adc xor je jp xorb add add faddl xor inc roll fidivl loopne out in adc sarl jge mov push jbe xor xor pop adc jp cmp inc push dec dec push and xor jbe jl (bad) adc hlt xor xchg dec rolb pop push ret and xor xor push adc pusha repnz dec (bad) dec jl sahf pop xor xor (bad) cli pop je js mov xor xor (bad) test scas xor cmpsl push outsl int3 jne push xor in mov xor pop xor xchg pop sbb and sub inc or mov push or nop xchg (bad) loop incb mov aaa movsl aaa scas aaa mov aaa jecxz xor and aam (bad) or sbb add mov cmp je lcall jp cmp (bad) cmp or pop cmp cmp loop cmp roll or jbe pop test stos test mov cmp cmp cmpsb bound jo test scas dec das (bad) int3 adc daa sub adc push stc push lea scas add mov cmp inc xor mov lahf xor xor mov shll pop imul int3 pop sub pop (bad) lods into lret or aam out xor (bad) xor cwtl jo pop fidiv mov movsl scas aad pop pop pop push mov (bad) jp,pn jb adc adc outsl xor xchg xor xor inc (bad) arpl cmp loope xor stos movsl fcmovb into cmp or (bad) xor stos pop stos jo ss xor push out or xor add test lds lret decb push cltd cmp loopne inc and add add dec push cli push adc jns test popf xlat jmp testb sbb and dec cmp popa cmp cltd cmp or ljmp (bad) pop push or push cmp cmp mov fidivr jecxz je cmp ljmp lcall or cmp adc popf cmp jmp jp adc and mov push push sbb mov incb bound outsb aas jge (bad) lcall xadd dec pop and inc scas sbb cltd push daa push add shll pop mov lods pop xchg xor aas adc xor inc ret popa xor push fist cli imul add loope lock js adc imul adc popa xor xorl dec xchg sahf mov lds loope icebp dec (bad) ljmp cmpsb add xor xor rcrb jo sub sbb cmp add (bad) es cmp cmp xchg mov loopne test out cmp popa sub inc push push jle pop icebp push inc adc aam in add lcall pop and add jg lds lcall adc mov push adc and and mov add fs mov add adc fwait mov mov dec or addr16 es cld add cmp mov scas mov adc lods cmpsl mov adc popl push nop add lahf add push adc dec repz add lcall mov xor cmp nop test pusha jae scas xlat sub push or (bad) (bad) xor data16 dec add xchg mov pop mov mov cmp mov push dec mov adc add data16 adc add (bad) xchg mov inc mov or (bad) test and jecxz imul mov pop inc mov add xchg sub daa out inc or outsb push add add jo mov inc pop out test or push test sbb push stos aam push mov xchg andb pop lcall xor add mov push push xor (bad) jl sub dec mov nop dec adc clc fs push or add mov xchg and pushf adc inc mov xchg cs push sbb cmp mov dec push mov out into pop adc mov (bad) and cmp jg loop mov add shlb xor ja inc push add and js pop pop insl jmp int3 jbe pop add arpl adc mov mov mov and push cmpsb out ficomp add andb ss xchg push jmp dec push add add movsb jl lods cmpsl fcomps fldt inc push mov jo add mov xor hlt dec or pop pop xor add xor insl adc (bad) mov add add mov and sbb push cmpsw cmpsl cmpsl cmpsl je test dec test lcall push movsl push shrl push adcl mov (bad) adc sub push xor mov loop xor dec add mov xchg dec arpl inc push pop sahf cmpsb sub mov sbb inc out jo mov push stos test jp,pt out hlt sti cmp pusha inc inc lcall dec lahf in int3 sub sbb cmp test mov test or xor (bad) dec mov test mov cmp xor push sbb pop (bad) shlb test jp jecxz (bad) or mov push cmp (bad) inc test xor push mov jl and or inc loopne hlt cmp rolb xor fs (bad) stc arpl mov lahf movl and mov orl dec add sbb lret push inc xlat mov xor mov inc insb add and rclb (bad) (bad) call pop outsb mov mov push add inc test stos stos inc push test (bad) (bad) mov (bad) jg mov mov sub (bad) (bad) incl and sti add (bad) add inc (bad) lock jmp (bad) (bad) (bad) inc pop int ljmp push cmc dec cli out outsb clc or mov and push mov inc xchg mov mov les pop xor inc out dec and or mov inc (bad) (bad) (bad) (bad) cmp mov (bad) xor or mov sub add into mov xlat mov mov inc stc rolb pop negl adc test jmp pushfw fwait and pop (bad) (bad) (bad) ljmp xchg movsl mov xchg push sub mov mov xchg xor cltd call (bad) (bad) lcall imul adc mov aam (bad) pop scas call out mov jg dec pop (bad) (bad) (bad) inc (bad) neg adc jl pusha sahf int3 xor addr16 (bad) aas lret int int3 imul repz inc xlat add scas (bad) xor (bad) incl cmp xor mul std mov popa jb and leave inc pop xchg jle test add jns repnz mov mov rcrb scas cmc (bad) pusha push add out (bad) cld pop push xor fstps (bad) (bad) (bad) dec and lods rorb push and fldenv ljmp test xor inc push (bad) (bad) (bad) jmp pop xchg addr16 lret xor sub push movsb iret out adc dec (bad) (bad) (bad) lcall and xchg repz int3 fwait jnp ds inc test fmuls (bad) ret sub jecxz sbb pushl cld popl ret add sub dec jae mov sarb mov (bad) (bad) mov bound ljmp adc out jp inc jecxz sub addr16 out pop ja (bad) lock pop inc sbb xor sbb (bad) (bad) ljmp mov pop lods or (bad) (bad) loopne fimull dec mov jae pop or test fwait mov lahf (bad) std mov lcall add clc data16 fmull push push enter das aas ljmp pop dec testl int cmc minps fisttpl xstore-rng cmpsl add pop cmc lret pop inc pop xchg test add lods movsl mov dec (bad) nop xchg add xor out jb pop adc xor dec cs insb lock ss test add outsb scas (bad) lock fsubrl pop cmp add prefetch mov push xor sub lahf fs repnz add sub sub add fiadd dec adc mov imul add mov inc xchg xor lahf inc leave dec repz adc (bad) andb xchg and pop call out fdiv xlat nop dec add push (bad) movsb inc add push xchg ret pop pop enter inc fs pushf inc mov mov lar call subb inc add inc loop xchg pop (bad) jl jns pop insb inc add add dec pop mov cmpl (bad) addl les rcrl inc inc or or xor or adc adc sti sbb mov push push xor (bad) xor push push push push adc outsb roll adc call mov (bad) rcll fisubrl lea push mov pop enter pop nop mov add js ficompl push xchg and add pop aam fidivl pusha add xchg rclb repnz inc call insl sub inc push add flds scas add data16 push lahf cs push (bad) insl or mov jmp sarb loope jne mov rcll xchg xor push lahf pop cmp xchg test lcall jbe dec daa sbb test rolb insl cmc cld mov inc dec bound push sbb add pushf loopne (bad) mov adc (bad) faddl sub sub sbb pop fwait pop or in adc mov adc mov add add lods test loopne sub mov notb lcall push in add dec mov push push mov daa (bad) cli inc jecxz sub mov rolb push loopne inc add jl pop or mov or popa movsb mov or add call inc add add pushf call add push jmp pop or cmp fmuls dec adc mov loopne ja push dec push lret sbb cmp lea ret leave enter nop mov and mov in inc xlat sbb inc (bad) les aas add inc jb loop andl xchg lods or out das mov call out ds add push and int insl or lea ret and mov sub mov call jle shr adc push push enter xor lea add mov call test inc or sbb adc pushf inc call adc adc ss loop and add sarb mov mov push push jg andl and leave popa movsl fs add andl pop push fisubr push add mov adc mov jbe cmpl mov sub dec cmp cs andl add inc xchg fadds ret dec push pop adcl mov idivl push inc rolb dec jo subb (bad) and popl insb pop jmp sub lahf pop inc inc pusha xchg and into add lea testl notb push repnz jns sbb je sub and cmp (bad) cmp adc push call or enter dec int aam icebp call sub xor and ficoml or push xlat mov adcb or outsl shlb scas jnp int3 xorb sbb lret and and adc dec pop lahf int3 (bad) sbb loopne repz cmc test (bad) stc adc mov fidiv fwait std sub mov scas inc add add cmp xchg or dec push adc or out adc add or cmp mov loopne mov sbb nop ficompl pop mov leave inc jo in clc lahf or inc sbb push pusha or in and scas adc cmp adc orl inc pusha data16 sub les push insl sbb mov inc pop inc and mov sub pop jb sti mov ds xchg inc sahf outsl cwtl push push push add xchg imul push pop mov mov rcrl in ljmp pop in mov and cmp add sub mov adc xchg inc sub inc sbb mov push gs cltd mov loop dec int adc repz (bad) sarl stc cmpb out or lock or call iret dec nop inc pusha scas fisubrl sti sub mov je lea loopne or add insl and or call inc in xchg push push into mov mov xchg mov pop sbb repz fcmovnb cwtl mov add xor add adc add into ficom and dec mov cld rcr incl repnz mov cmp add sbb hlt dec adc jmp mov push or fildll push inc add inc push xor xor cmpw out out add jbe mov data16 lock xor xor sub sub insl mov and inc mov fiaddl es imul loopne or enter std mov xor jne aas out pop imul inc mov call movb clc xchg aad popa push rcll mov stc add add and cwtl pusha jnp mov mov lds push sbb shrl sarl push jne ret (bad) cwtl add xchg xor push push add jecxz out cs bound push (bad) lret inc and pushf lods dec pop mov jp ret sbb push jecxz xchg push jle sub sub xlat fst mov adc push sub push stos idivl shlb xor fisubrl arpl lret loopne sub add push xchg and cmpsb outsb addr16 jle inc test push push rcll push mov lds pmaxub push jl cmp ss push jne hlt sub loopne sub stc test and dec hlt jecxz push ja cli push pop sub ret push (bad) in add mov xor inc inc sub cmp pop je loopne dec push add inc push push and fistpll jmp mov leave out sub pop jno dec push mov in dec sub dec ret push aas jbe sub sbb jne adc jmp loope mov (bad) or jecxz push push sbb jmp repnz or push lret jae out dec push push jmp cmp push mov mov dec cwtl inc push test push fwait push test (bad) pop movsl inc loopne stos cwtl pop adc call cwtl je movsb dec push sahf cmp inc add lds inc add lds (bad) mov (bad) or scas mov jo inc (bad) mov mov mov jp jle or test or aam test mov aam mov mov addr16 (bad) les cmp or inc in ret inc add jg lahf push inc (bad) notb and ret xorl leave jno rorl frstor xor in sarb jg int (bad) rcrb sbb leave and sub pop and mov jns lahf sub nop outsl nop mov push push imulb xchg cmp int sub or es test pop push adc sub add dec ds sub mov ret fiaddl nop (bad) push jg sbb jmp inc or sbb cmc pop es adc test nop std mov adc lret (bad) mov ret (bad) xor xor sub or jle stc in push loop sub push push pop adc xchg shrb adc push clc nop inc adc negl jne sub insb scas push test cwtl sub sbb je jne call dec or pop iret insb enter push add push inc loope xlat pusha cli roll push and cmp sub add or movsl or mov aad pusha mov sarw sarb sub repnz lahf add shll out repnz incl adc sbb or or push jg,pn testl or arpl cmpsl push and mov or aas and (bad) jb pop mov and leave aas mov enter inc jns mov pusha ja or adcl push sub push leave (bad) push inc shrb xor inc mov nop and dec dec je and xlat and call (bad) aad xorl push movl push outsl fcoml xchg int3 or mov add js push and xchg inc mov insb add mov push aaa insl mov aas dec mov pop add cwtl pop sub call das cmpsb inc call push or add pushf dec sbb or mov add mov sbb pop dec pop mov cwtl mov or xorb jo js bound call inc cmpsl inc jo add mov or push jmp push jmp dec inc stos inc xchg loopne mov push ljmp mov sbb jb or rcr and adc sbb push inc adc or xor pop pop and clc mov sbb and cmp je mov insb sub push pop cmp (bad) hlt test je (bad) lock sbb xchg flds add test inc push sub push lods push call inc notl adc test call addr16 and mov or shr test and aas in mov test add push inc loopne mov xchg and mov inc sbb and dec aam adc mov xor cs jnp jne xor push iret mov das push call int3 xor aad and lds mov cmp je sub lods pop sub add inc das loopne jmp push inc add lds js mov out inc dec jo add dec mov pop in mov sub and mov cmp cltd pop adc jo clc push cli rcll mov data16 jge sub add cmc clc mov mov fnsave je sbb or loopne es daa sbb or mov scas (bad) mov mov pop mov ss rclb pushf cwtl jno mov iret out jo inc mov inc ret js xor bound loopne dec jmp or xor xor rclb sub xor adc mov rcrb xor lcall aas push fistp inc or sub pop add ja pusha inc inc or movsb pop push mov mov mov mov mov call imul pop sahf xor adcl sbb cmp dec xor inc enter leave xor or fs sub xchg add inc adc test mov sbb sbb cli shr in inc add sub mov (bad) (bad) sbb clc mov sub sub add add mov mov in faddl mov popa xor je xor das push xchg test or xlat push lea pop jae xchg push mov jecxz fsubl dec in dec aad pop std jo scas xor das pop or push jl out xchg add lock jo xchg sub fisub sub icebp xor mov pop pop jno or push (bad) cmpsb fs (bad) jne push mov data16 sahf stos xchg push addr16 mov sbb rorl lods push test shr loope loopne jne,pn ljmp pop fs loope mov sbb das aam mov cmc sbb push pushf sbb rclb cmp repz std scas inc jmp dec or (bad) xor xchg repnz adc test push cmp loope or ficom cmp mov push inc xlat and mov js pushf cmp cmp xlat rolb and nop or mov js test movsl add fildl push repz inc push (bad) dec and fwait cmp sbb pop mov pushl ret push lcall add pushf sub test mov add ss repz pushl sub sbb repnz int (bad) mov adc nop imul mov push inc pusha (bad) cmp sbb xor jle leave sbb jo or insb mov pop jno mov xchg (bad) push bound sub or pop or les dec jge push mov sub xor inc shrb pop mov mov incl loopne nop nop mov add mov mov mov popa aam and xor je mov inc push ror call flds or inc mov cmc (bad) xlat imul cmpsb add pop or ja jge or mov pop leave leave or fist jne loopne and iret int3 ss mov dec adc sbb sahf sbb movsl xchg imul sbb aaa (bad) mov xor xor cmp cmp add jg (bad) cmpsl in repnz mov mov and test mov in or and inc sbb frndint pop xchg add mov mov pop xchg xchg add leave in push std sub cmp (bad) mov or (bad) jmp xchg dec xorb cmp aaa fs dec movsl push xor push jo mov inc loopne pop aaa xchg out push mov sbb test add xor nop loop loop loop jns cmpps loop inc push enter loop loop inc mov repnz test cmp xchg lods inc adc aam jle xor addl push andl pop scas mov aad adc push jb push out mov divl inc shrb xor sub test adc mov or adc and lret add push in ret sub pusha push lock jle or mov mov scas fmulp dec and dec pop xchg or dec xor adc pop or cmp push dec cld popf dec fs pop xor pop add pop dec push or jl pop sub cmp dec xchg (bad) and loop test add addb pop mov xchg jo inc jno xchg fildll adc push and push and in xchg in int3 sub xor test insb call xor cmp sbb leave cltd and xor hlt add dec or scas inc dec push and jle inc mov xchg push je inc sub add pop lret pop movsl jo push sbb je add sub cli fldlg2 test xchg push nop add mov in iret mov cmp or and xor sub pop xor movsl scas jo pop shrl ret inc mov movl test sbb inc adc inc cmpsl pop div test enter sub call mov sub cmp jmp fadds sub pop or (bad) fs loop xorl fldt and fwait pop shlb insb adc add dec sbb imul and push stos pusha rcrb jle adc pusha cmp adc push es enter add mov adc fsubs mov xchg (bad) xor inc sti pop xor mov leave in stos add cmp and sbb loop daa in push lods push push jp push pusha jg or data16 adc jl lock mov xchg (bad) adc xor aas fsubrs mov mov phaddd sub jle jno xor adc fwait dec pushf rclb mov adcl ret (bad) pmulhuw push xor repnz xor dec ss jo mov dec add add add std stc ret cltd xor and mov (bad) and xlat aaa and and clc js sbb cmpsl push cmp sub adc call sbb addb inc jns lahf add xor popa roll mov mov dec jbe pop decb add mov xchg andps push and adc xor and in sbb test dec xor fist cld fs out mov test loopne and add mov pushf imul add xchg idivb jle clc jl jbe cwtl jb shll jne mov inc or rorb xor sub adc insl ret dec mov adcl xor pop enter mov into sub push pop mov cmpsb aam xor push push in xchg pop clc add push push les push js jno lret and inc add push test pop jns mov fcoms fisubl es imul jb in sbb pop pop jnp pusha in jo push pop xor mov xor jne pop pop arpl push push xor daa sub add cld sub out mov pushf dec rcrb testb sbb xchg jle adc sbb push mov push pop add (bad) lock pop fs out bound inc mov push js (bad) movsb push or popf mov inc int3 cmp movlps ss inc das (bad) mov jmp jne push or push xor mov sub inc push jbe adc push or inc inc inc add stos pop dec (bad) jb mov add adc jp xor or fild or mov sub aad mov mov test aam test or fcmovnu jo cmp je cmp or inc xor (bad) or cli in test in lret stos xor mov andb lods jne outsb movsl push dec mov and sbb jnp loopne sbb test and popa push pop out test push mov (bad) jne sahf into push or adc fnstenv sahf cmpsl rcr pushf jne jmp sub ja sbb imul jne js sub rcrb cltd dec arpl repz inc xor cmp cmp in xor arpl and inc clc inc mov lcall cmp jbe insb add sbb pop mov jge fild lds popa lahf and jmp dec or mov sahf xchg jne scas rcr lea (bad) jmp cmp sbb xor jne lret movsb pop insl adc push mov or or cli add inc xchg or fildll and (bad) or inc fcoms js add mov add subl test sub push push jne (bad) clc pusha (bad) add (bad) popa xor (bad) jnp je xchg test sub cmp ljmp rolb pcmpeqb ja mov call adc xchg push js mov test pop test (bad) or lahf add cmp nop push mov pop fnstenv and inc add add and push loope add lods or lock jb iret test (bad) movsb jo pop mov nop cmc jns xchg mov cltd pop inc pop mov js inc negb sahf rol inc and add enter int3 add mov jo mov mov push or push iret ss std cwtl lea push dec dec mov adc pop xchg push or loopne cs out in adc mov sbb push jbe cmp and insl and cmp fs fildl push adc insb mov outsb lcall jno push add pop push mov push push cmp push push cmp jbe push pop mov inc add call sub pop mov test rcll mov sbb push add bound push dec ret push xor mov movsl lock sbb adc aad mov mov mov ds in out push push xchg cmp dec lods popa out sbb adc (bad) sahf lock or xchg jle push push sub pop and and add mov mov fist jns push mov add add push push flds test or fs out dec or xchg imul bound clc mov hlt mov lcall and add mov dec jp inc jns mov pop (bad) mov fldl mov pusha adc add xchg cmp test mov push lahf fnstenv mov and mov pop je (bad) scas inc fmuls jl push xor pop int3 sti mov adcl inc test sub adc mov add imull insb mov sub js lods push pop push out mov jmp xor cmp mov adc pop xor lock add cmp add stos decb sub or pusha push inc inc sub (bad) pmulhuw imul fild ud2 (bad) in (bad) andps shr and push add jne lds push popf call sbb pop fcoms int3 clc fbld mov push push call icebp jmp test adc push pop loopne add gs sarl shrb and push xor das xchg sarb sbb neg sti pop push roll add lock mov movb mov jne sbbl lcall aam mov imulb js mov movb es xor add adc mov xchg dec and out lahf sbb inc dec and cwtl test ljmp mov mov fmul jo and iret mov adc push cwtl dec lret dec mov int jl sub in mov adc push cmp jns adc rolb inc dec gs jo mov call cltd push pop mov xchg outsb sbb mov pusha gs push lret divl mov out cmp (bad) sahf inc cmp jo push scas lret (bad) cld inc stc dec insb dec push inc pop cwtl xor adc js sub jbe add lahf jne inc jmp loopne (bad) jp bound test dec jp std xchg jl push adc and cmp push inc arpl dec lock lea sub dec lods sbb sub les pusha jmp std adc lods out out add ret or inc stos and (bad) push jo xchg mov (bad) loopne leave dec jecxz add or inc mov pop jne into jmp adc cld xchg mov mov cmp xor xchg or jg inc cmpw mov inc cmc ss les and sub add bound nopl mov mov (bad) mov adc jecxz out jl add lret and in push pop outsb mov or xor outsb xor call mov add pop (bad) shll mov mov out aaa loope or push jnp mov jne test xor cld inc test (bad) fisubl inc pusha (bad) adc xchg je and insb xchg lret inc xchg inc xor add xor fstpt int3 jl or inc mov push in or (bad) or shlb js lods mov mov (bad) xor ret add je incl inc add cmp cmp inc movsb lret jo jb cmp cltd and mov cmpsb jg sub lods (bad) jno sbb xor xor lea jp push mov pop lea jae lcall push mov adc cld insb mov add cmp jg sbb (bad) mov add jle (bad) or sbb rcll dec or js aam push cli lret cmc pop inc xchg test cld imul pop pop (bad) xor cmp lahf adc sub mov xchg fisttp inc imul pop pop adc push push nop adc pushf les jb mov pop or sbb push js icebp imul sub mov xor cmpl iret add (bad) jne pusha out inc push inc int adc inc jbe adc lret pop inc pop imul push lods xchg dec or sbb dec and pop sbb mov pop add pop push clc je (bad) pop dec mov xchg adc inc sahf stos dec adc mov pop je or adc xchg pop cmp push lock sub cmp lock jo mov pop sbb sbb push test in ret or pop cmp mov inc orb add dec cld aad cmpsl jp push scas ljmp nop mov inc inc lahf mov cmp pop nop in cmpl popa mov popa jg sbb push pop or cmp push jne pop test jg push movsb cmpsl xor data16 xor (bad) mov or pop je cmpsb dec push inc out fsubrp add nop cmp leave adc mov and adc mov lcall dec or cmp xor cld insb add xchg daa cld xchg jnp call xor dec in les sub jbe add data16 (bad) mov push mov xchg sbb in cmp xor lea xor mulb jmp and push xchg push cmp inc push cltd mov movsb jnp adc sub cmovle or inc pop data16 pop sbb xchg mov dec das add ret inc dec xor ss punpckhwd addl inc cmp push pop faddl or mov add pushw dec divb mov push nop sub outsb hlt adc push or or lds pop jmp sbb inc xchg inc jmp inc lret inc mov push in adc sbb add dec pop aam cmp in sbb fcomps clc mov mov sbb push and aam push ret sub in cmpl xor cmp jge inc or or sbb mov sahf pusha test push jp sub jl in fmull imul push inc mov fiadd or test cmpsb mov inc (bad) jnp add sbb adc rorb pop lods push dec lea pop push jecxz or jmp mov mov push mov ss mov inc int adc jl sub mov hlt jo and rcr repnz sbb xor cwtl call (bad) jmp lea push dec or inc inc xor push adc push rclb or (bad) rcr adc clc push push or cmp insb push loope loop lea (bad) and push push pop outsb icebp sub (bad) js loop sub push adc pusha nop js lods mov mov cmp lret cmpsl adc xchg adc xchg stos pop mov fimull push push add call outsb xchg mov (bad) xor insl xor push push and ljmp pop adc add les jo jb (bad) dec js cmpsb xchg es and and (bad) xor jbe jl aam jg push call mov movsl call push jbe (bad) repz inc (bad) dec adc jb cmp jge test push push push (bad) mov push jnp mov inc scas xor dec mov pop call icebp and adc mov push sbb pmulhuw xchg inc dec push in mov cmp jne std inc push push cmpsb inc and push sbb or xchg jo in clc nop inc jl push push stc mov or push jle jmp adc lcall outsb popf mov dec movsl xchg rorb inc and dec push bound rclb cmp push movl adc push sub push cs adc add inc iret incl lret add push xor jle loopne insb jge add mov mov push and dec and or popa adc and sbb (bad) mov mov repnz ror push nop shrb or or xchg arpl xor or adc pop aam push cmp or mov movsb lods test std loope mov std pop or movsb jle es push mov jecxz sbb call mov push cmp (bad) fldl das jmp into xchg pop scas pop add mov xor adc mov sarb mov loopne inc call lods pop dec roll leave xchg dec xchg repnz jo sbbl out or cmp inc mov flds dec fadd sarl adc mov inc mov (bad) jns les push push jne repnz scas and fstl push lea mov mov (bad) rolb inc sarb dec jg xchg push mov jl jne sbb cmp sbb hlt push xlat ret sti ds push push das dec gs add fdivr adc adc sub dec dec and xchg scas cmp ret mov add or jne xor ret pusha cmp pop xchg jbe cmp insb popf cs imul js push ret ds xor ret (bad) jmp adc push mov mov sbb subl ja mov pop fwait rclb insb inc push push je xchg arpl call xchg and push pop popa push imul jb call cmp xchg pop xchg test int3 dec jle jmp push push sbb sbb inc pop in xchg incl jns xchg push dec inc bndldx and jae jo sub loopne cmp inc nop mov pop xor lods add nop fs and inc insb call dec or sbb mov ret pushl mov push jb xchg xorl dec mov and dec adc test cmp add bound sbb mov xchg xchg cld add or pushf inc loop stc lahf fcoms mov lods cmpsb xchg or jns mov mov pop (bad) cld mov ret add rol mov sldt dec xchg scas rolb adc add mov mov outsb aas js subl pop movsl test clc aaa adc push je call or stos pop loop (bad) stc push mov sub in (bad) push pop ret push pushf push mov lea lds fstpl jbe push jecxz shlb sub pop sbb cmp ror mov xchg push pop add ds push mov in and jle add add xor pop pop dec outsb and xchg and add push push sbb xlat inc popa (bad) (bad) cltd xor popa or loope cmp inc nop test loope xor pop mov mov sub daa (bad) sub mov mov push mov or sbb xlat mov jo dec jb add push loopne dec xchg jo sbb or fwait add and mov (bad) cmp adc pusha add adc xor popf xlat add ds mov mov dec call xchg push pop sub and dec std mov adc and sub lret cmp bound dec sbb in inc lock sbb mov js mov push sbb dec xchg push pop lret xchg xchg popf pop lock cmp loope fs enter test ret loopne xor lfs jne pop cmpsl into push dec fcomps aam dec mov lods lods or fild (bad) lock in and dec or jae pop ds sub pop xor sahf pop out add mov sbb push dec mov mov fs mov push mov (bad) add adc adc push (bad) es cmp pop jge popf jo push add je lods or mov jmp sbb loopne rolb idivb push test push fs movsb push push push jp inc or (bad) fldt ror adc sahf ret sbb ss pusha adc inc inc pop pand sti sub or fidivrl lret out rcl sub cs mov or mov aaa sbb js mov inc loop or sub add aad xlat or fdecstp fisttpll pop xchg mov sub push les pop xor pop mov imul loope pop xor enter and les jae sub in imulb fisttp xchg mov and fs nop in pop jb pop or test add inc loope jo push dec in push sub push cmp jo sub rol orb arpl pop inc or and cmp dec lret lcall cmp and xchg sti mov enter adc out call leave inc aad sub addl dec dec dec dec enter dec dec dec add test loopne dec sbbb mov lret inc or mov adc jns pop popa push stos add push dec lods add sub mov xchg lar mov pusha sub or and inc pop pop jmp enter push dec xor xchg out ljmp lret and cmp push or cmp xlat loope rclb add mov test cltd popf inc sub add cmp scas rcrl or not (bad) out adc hlt aas test xlat pusha gs sub sub jnp imull in and inc mov add push push push sub pop jp inc mov or stc inc xor mov jno imul jle cltd xor (bad) hlt mov inc and inc dec lea add imul xor add jns mov push enter lds or mov aad (bad) pop arpl (bad) mov rolb sub mov adc pop sub gs mov mov lds or sbb xchg int sub push and add and xor enter inc sub sub and or jo pop popa sbb push sbb cmp arpl or loope insl cmpsl (bad) dec and jb pop sub pop stc pop xor xor int3 xchg in xchg and add rorb pop add push jns push xor or and push daa mov data16 and inc xor add mov dec stos xor sti xchg xor jge mov dec scas sub jg rep jne and pop out fmuls sbb push sub loope notl inc xor add cmp adc adc push and adc ljmp aam add dec cmp sbb inc movsb jnp xchg mov das and movsl rolb inc adc cmp add and adc and push or fdivs ret es in inc or icebp in nop sbb adc fs adc xchg mov push or add or push xorl fs push shrl push mov inc mov xor adc push je in pop inc aas dec pop adc addr16 subl xchg push push pop xchg sbb aad int3 inc (bad) clc xchg xor inc cmp xchg or mov or dec cmp jg leave dec (bad) in add call dec add add fadds dec adc adc fild mov push ja lock in sbb aas sahf aas (bad) aas add and cmpb aas jb push enter aas inc aas add hlt adc test loopne add adc cmp add addb fistp (bad) out fild fistp nop inc add jb nop ror add adc add in fild inc js lods ja aam test or jb ss dec mov sahf push icebp inc sbb push aaa sub dec jbe test sub or and or xlat jno or pop inc fildl lcall sub rol into cs pop jle flds fimull adc enter adc sbb sbb cwtl test and pop inc gs or popa mull xchg pushf add cltd aas fwait xor push xchg je adc dec add jo inc dec das enter jo xor add add mov adc into aad push push fldt push cmp ss adc fdivp repnz or push xor xor loopne push or ja cs sbb mov lret pusha sbb xor fildll sbb rorb scas int3 das mov or mov jne std insb call fiaddl jge sbb sbb and sub cmp aad ljmp ds mov rcrb cmp outsl mov iret hlt dec inc push push test pushf dec xchg lahf push jp and mov ror push xchg push ljmp jmp sbb nop xchg lret xor sub adc ljmp push sub mov sbb iret dec and and mov xchg insb int or je pop and int repz sbb pop push lea sbb dec jge cmc add pusha mov mov sub pop jb dec movsb mov jae in push or idivb (bad) adc insl and (bad) stc lock imulb dec ds add rorb adc mov hlt mov push jno insl (bad) push cmpsl mov mov and and data16 lock inc aam xchg lods imul and inc or add fisub lods test push push and fmuls leave push mov inc arpl adc outsb lea inc pushf imul lock lahf xchg sub mov adc cmp sbb incl test push and call mov cld jmp dec daa xchg gs inc sbb (bad) aam lea add mov mov inc xchg (bad) push nop pop lods dec mov or lea orb mov ljmp xchg test jp or mov les test lds and push jb push sbb cmp js xchg insb rorl enter pop sbb dec xor mov push in (bad) mov call imul sbb imul pusha mov aam dec xor scas sbb xchg test cmp mov (bad) rclb sub je add xor inc cmp jne cld jl bound cld clc adc scas es xchg and push ds jmp jbe adc pop push clc xchg xor call sbb call adc mov insl sti popf out xor jb fwait pop mov pushf (bad) jle or insb mov dec dec pop mov sub or divl add aaa jmp test scas lock test popf xchg push pop inc add inc sub mov jns sub xor or shl inc push sbb pushf inc mov xchg inc (bad) cmp xor loope pop int shrb xor jbe imul movb rorb pop or lret jo mov push mov daa sbb push out pop jo sbb arpl addr16 or loopne cli incb imull jmp fimul sbb jnp nop jno mov xchg jle push cmpl jo loopne pop jb sbb push or mov pop or pop negb std pop xchg enter sarb fld1 mov jo lods int sub fadds aam jnp icebp mov inc sbb cmp jge adc lock ret rcrl jle ds push icebp call push je mov leave push jo xor dec or imul lahf push push call or xchg pop mov xchg ja dec lret movsb sti es adc cld or (bad) inc xor mov sbb jecxz fnstcw and in mov mov adc or call xchg dec mov inc call dec ja push test loop fistpll or sub incb fcmovnb push fnop pop add stos mov push pop in (bad) inc call push test ds push add sbb fidivrl xor imul add add or or and add cli cli mov in popa add mov or or (bad) jmp mov loop icebp movl ss mov leave (bad) xor push sbb sbb push mov push call push or (bad) and inc adc (bad) fildl call or enter jl iret push xor jge pop sub sub push orb mull call pop xchg add add addb inc into mov (bad) push and in (bad) sbb pusha xor sub adc adc pop popw sub push lea cmp add pop call add mov das pop or inc and xorb inc lahf cmp push int add inc aam daa add es rorb mov cmp cli push movsb and xchg std call add cmpsb imul push adc mov mov sub jno cwtl add pop aas xorb add xor xchg push aam enter inc add xor (bad) outsb add mov lahf cli enter enter fimull or mov sbb add or je inc push mov pop sub mov popa andb scas sarb rorl sbb xor xor pop cmp mov add mov dec test jle pop aaa test add and sarb enter xchg call mov pop insl pop dec rcr dec xor jb mov mov mov pop in xorl in std std xchg pop dec dec add lcall xor sbb pop dec bound sbb out fwait pop loopne cmpb mov cmpsb pop lret pop push and add test cmp xlat stos add pop xor adc or repnz pop sbb rcl sbb cmp pop pop add cmp outsb inc add pop adc pop adc orl cmp dec fiaddl push xor xchg lahf dec dec cmpsl (bad) xor movsl das mov into push movsl push in iret xor dec jl push lods add mov add jo rcll and in ficom scas into mov inc xor and mov inc jle mov or mov or roll pop jo mov sbb or push insb xor xchg in jg dec mov add sbb sbb or pop mov and ds pop or (bad) and popa daa dec movl add xor (bad) js int pusha cmp daa in es (bad) pop xchg add into xchg inc xchg inc cmpsb mov push jns cmp or movsb aas or fiadd cmp ss mov or inc push add add cmp lods cmp mov push adc mov sbbl xor cmc sbbl je add pusha or push ret jb iret repz lret cmp push inc and jmp dec jecxz in push push call lods das jb and xor inc sub aas pop inc sbb push mov mov add decl stc rcrb lahf inc pop repnz and cmp pop pop xchg add stc pop fild add das out push sub cmp or mov push fisttpl std push adc inc sub leave and add es shl mov push inc xorb mov push pop jge call jl adc sbb push (bad) cmp dec xor dec stc mov push lret xor inc inc dec inc das fs or xchg add daa fistl xchg push enter rcll repz add xchg pop imul bnd pop pop inc push adc push test mov mov push int3 ficom insb add mov je icebp or jl dec outsl inc and mov xorps in test inc cmp jl fs lods dec xchg inc sub xor stc bound jne inc mov xchg out pop jne pop inc jno rcrl fstpt fisub arpl lahf jl insb cmpl inc faddl or add mov mov and jno pop or xorl push or inc fs mov sbb cmpl test out fstps outsl push inc inc or push dec cmp add sub lock xchg push ror inc sbb scas cmp add fadds inc lahf lcall push (bad) je data16 mov fsts (bad) stos inc stos bound jg add add ror inc or dec add inc xor incl cmpl rcll lret pop sbb stos jo or call fdiv repz add mov xchg mov ds addr16 call dec ds pop push and adc add xor mov mov cmpsb adc and popf xlat ror clc xor in push out in dec rcrb cmp jle sbb push or xor sbb add jne mov rcr nop push push cmpsb inc loop mov shrb cmp push imul test dec rcll arpl add sbb sbb cmp xor fildll push add leave xchg add push pop int mov add (bad) xor add pop mov sub and push fmull scas test push or or adc out (bad) sbb fmull sub in jb or notb mov and pop xor repz loop pop xchg push jb push jae sub orl mov lret call adc inc cmp xlat push and push jno inc xor push push push xchg rcrl jle or enter add push cld add add push stc sbb and adc sbb repnz push and sbb leave gs push cli stc (bad) mov or insl call xlat mov out pop add xor aaa sbb movsl sbb je arpl mov adc into mov mov notb mov mull and (bad) dec es jg inc adc dec mov xchg and fnstcw inc adc lods mov mov das rclb push sbb and subb fs dec mov loopne pop adc mov inc nop fild repnz dec dec cmpb or nop in flds mov mov dec xchg dec fist loopne rclb repnz cmpsb lds (bad) dec orb xchg aas mov xchg push test lahf or add sbb imul add or in lods fwait sbb inc and mov in dec loopne cli pop lea outsb imul pop movsb sbb pop pop inc pop pop outsl lea (bad) not imul data16 inc pop pop cmp or stc cmpsb mov in sbb cmp into negb sahf divb push push fist shll xlat sbb push leave inc mov ss sub xor fwait pushf insb test mov pop dec mov inc cmpsl add adc lods push ss add sub lahf dec out les sbb and pop add or sbb push imul imul pusha dec cmp inc pushf adc leave dec insl jne cmp cmp addr16 mov pop adc data16 insb jl clc cmpsl cmp push push sub and mov push push push mov jae icebp or mov sub rolb nop ja into nop cmp dec push test test inc or rcl cltd dec sub pusha daa cmp dec fucomp xor ss pop adc cmpl aas lret jmp sub pop js dec mov dec loopne mov add adc sub inc adc adc imul pop add icebp (bad) or jge mov pop mov adc lret sub dec xchg cwtl mov test call sub test int mov test loope dec adc or (bad) xchg inc dec dec or das das xchg jl loope cmp pusha inc pushf icebp dec loop mov jle cmpsl jmp in gs lds pop cltd pop xor or (bad) mov and mov (bad) xor push xchg dec std call cmp adc add and xor cli pop gs (bad) and es cmp mov add dec adc stc mov test and jp les add lods roll jg inc outsl ret add js lahf lea shrb test pop nop test mov jg xchg xor sbb mov adc inc add sar or loopne add insl rclb lock xchg cmpsl add push aam jbe mov lods jl inc pushf sbb pushf xchg ss out popa addr16 or xchg mov aam jbe add jb push lahf (bad) jmp andl fcomps pusha cmp mov jp out in daa jne leave xchg inc xchg sbb pusha je je and shr mov and out test jbe sub add or shl mov push test sbb push idivl insb lcall lods inc push or mul push push push sbb push add mov loope push push jb xor inc loope pop push inc pusha cmpl jns or lea and movsl movsb sbb pop add cmp rolb add addr16 add add pop gs cmp das sub enter add movsl or and les xchg sarl mov or mov xchg jno out sarl and (bad) ret xor inc mov leave pushf add mov jp inc jne sub inc sbb jl inc add (bad) je lret pop xor mov jmp dec mov or sub js dec pop mov clc or xor and push lds fstpl inc sub popa nop sbb or test jo jmp and xchg mov mov mov mov adc daa std add add push loopne inc out xor daa dec add (bad) sub sbb push jo mov add loope mov inc or add loopne stos (bad) repz jle addl and sub cmp jo test lcall mov dec or dec dec lods jmp or jae adc ss out nop out test call jp ss aam pop adc mov xor inc sbb inc sub push or (bad) xor push sbb and pop pop inc sub mov mov popf sub sbb mov clc mov jmp cmp add lret out pop cmp lret inc sub push mov dec testl mov out dec jg cmp or insb or mov out pusha mov or push popf sub adc (bad) orl je add pop mov push mov lods mov inc mov add inc in sbb or mov ljmp scas sbb outsb aam push mov lcall push enter inc xchg pop cld aas cmp sarl cmp inc aas add mov add xor sub inc push jb ret lahf dec aas push nop daa xlat jg cli inc or cmp dec and enter leave sub xchg adcl sub movsl inc mov test adc repnz idiv mov test add shlb cmp push aas loopne pop lcall mov ret ljmp in das inc idiv cmp or pop fildl sbb repnz add pop inc daa (bad) (bad) pushl add mov xchg ret repnz add pushf pop cmp xchg aas into call and mov mov mov mov or cmp in xorl jge add cwtl inc pop mov gs sbb xchg dec in test mov arpl push inc or adc test xchg adc inc cmp aas ljmp rolb mov jl lea cmp jg xchg andl in jp lea sbb fldt cltd ljmp sub test jge push add in or cmc jnp adc call (bad) call sbb test pop sub cmp pushf cmpsl mov test jmp add mov test lods xchg jbe xchg notl fnstsw mov (bad) xchg les mov pop cmp test xchg xchg (bad) cmp cmp outsb movsl or or loope aam adc xor std call ret call sbb pop and cmpsl adc push cmp jge loopne pop sarl test sbb mov insb enter leave sub push push mov xor lcall pop push sbb and shll je xor add fstpt data16 xor jns and enter or (bad) (bad) mov push xchg int shrb jo sub adc (bad) mov pop loopne leave nop dec pop mov push inc or sub cmpsb ret xchg push jne sti xchg mov lds jns (bad) in mov mov or adc push xor insb hlt xchg pop shrl xchg pop ds sub pusha fwait loopne inc dec sbb push mov or jmp and das cld xor adc out lds xlat and inc mov cmp pop jle cmp pop mov cmp fs popa gs pop add cmp pop out shrb mov pop ret cmp xor int3 les jl call mov fstpl in shr inc loope data16 lret add sbb jne mov jle push ds and inc push sahf pop sbb jb int3 imul xchg xchg jne mov inc ret xchg fist and inc xor mov sbb dec add adc (bad) push (bad) or and pusha dec add or pop shl lods or mov add or and push sbb bound call cmp cwtl (bad) push shrb push sub inc inc add xchg fistpl or in cwtl pop add jmp fldcw and fstp sub or lret fcomip lret push sub push sbb mov xchg adcl sub test jnp xchg sbb mov ret mov or push dec sub push cld rclb pusha push and fsub fdivrp fxch call xor pop push sub loopne jl pop jmp aam rorl movsb push jmp push nop aaa xor pop cmc and stc mov rclb cmp or adc (bad) xor lret add sub ja mov sbb andb mov (bad) or xor mov mov (bad) cmp push or sbb sub adc sbb mov push dec outsb das lds pop sbb sbb or das pop or xor dec add stc outsb lret jle add shll pusha push and push adcl out xor jnp orb jmp mov in loop dec sbb mov and and aas test dec in loope and xchg lea and jge cmpsl xor jmp pop sub and inc out sti into dec push es xor and and jmp and sub faddl sti (bad) js jge lock stc nop fldcw call call ret mov jle mov push lock mov jns mov (bad) das cmpsb sub pop mov or jp imul outsb adc jne dec inc aas mov int3 push aam cmp inc inc fucom mov and sbb inc jne mov cmp sbb sbb aam add xor sbb movsl (bad) or sahf pop sub and call add mov fild xor pop je nop int3 inc sub sub sbb or xlat rclb shl or or js and jle mov rcrl cli loope pop movzbl xchg mov push or inc mov adc mov mov or pushf lret mov in and rolb loope xlat test test nop adc sarb xchg mov adc hlt lcall mov sub jae es leave add push and lahf imul mov push je or lcall sub fs (bad) jo add and add test inc imul lcall push or mov in clc mov and inc or push add mov push cmp or inc enter popf sub sbb inc cld scas dec out cmp fisttp ljmp shl outsl dec ficompl and out add jg xlat mov shr and out add or jg mov lret or mov jecxz jo cmpsb daa mov clc inc push dec dec cld jne data16 jnp orl les or add cmp push pop clc adc add sub pop pushf je sbb and addb pop or mov daa and sbb outsl (bad) sbb inc adc mov adc sti cmpsb rol adc cli or adc leave decb ret fs jbe jo push cmp cmp cmp and and adc or std pop mov pmulhuw mov neg xchg cmp xor dec dec in push and bound push mov (bad) jo mov ss es insb es aam inc push xor test andb dec in test add jmp movl adc sbb add xor cld sub rorl les mov push nop mov cmp xchg faddl data16 incl mov nop ret mov sub xor pop cmpsb fldt add push ss adc test loope cs sbb or push add and bound out sub mov push insb mov jl lahf dec cs add push add xor push stc lods cwtl add fidiv lret iret (bad) dec (bad) jb xchg push test push jne js test lahf mov sbb pop aam xchg add mov jmp ljmp fcomps jbe or inc (bad) and sahf imul adc movsb or sub test jl pop add testl add test mov mov jg add test mov adc cmp movsl dec xchg adc imul inc or mov add mov fcom or (bad) push inc pop gs enter rcll dec lahf insl xor xor jno or dec xor xor or push mov xchg mov rclb xor nop push arpl lahf movsb inc inc cwtl xchg loopne add outsl out dec sub inc sub add or add sbb pop or xor adc and dec pop aaa sub mov divb rolb (bad) adc std jge push push fs call cmpsb xorl repz in in mov dec pop mov fiaddl sbb sbb imul mov ljmp push (bad) call xchg mov mov sub (bad) fistpl sub imul cwtl insl adc insl imul or dec adc sub cmp sub rclb sub mov push jnp add or insl sub pop adc fs adc push ss xor pop (bad) sub xchg jl pusha ds mov mov xchg shl xor (bad) dec dec inc sub int3 (bad) aad daa pop mov ret lahf inc add nop push ret cwtl cld inc and pop or dec ficomp es scas jne dec fcoml mov cwtl adc out ret pop or and push ret sbb cmpsl out insb and in dec and jo (bad) xor cmp push test and faddp jge rep (bad) and inc lahf scas cmp and jge (bad) out js inc pop inc cmp popa cmp jl repnz js icebp loope out roll add fist or test cmpsl mov pop fildl push add adc cmp jo insb sbb push push sbb pop and js jne js (bad) sar call sub sar (bad) add gs subb mov mov aas inc xor scas push (bad) cmp cmp dec sub inc lcall ss xor lcall imul push jp jbe inc dec add pop or push pushf cmpsl dec or pop pushf fwait aas movsb scas mov add xor cs dec test ret or or (bad) adc and cmpsb xor fcmovb mov dec lret add movsb repnz push nop ljmp push sbb pusha out ja test jmp xchg push int push sub xlat cwtl add inc push xchg jo out neg imul inc push adc arpl adc sub mov inc cld pop das xor mov loop out stos adc xlat es lcall dec push mov ds lods cs fwait dec fistp xchg mov call add stos ljmp xor pop push and and and pop xor repnz loope or shll enter movsb jb jb aad (bad) cmpsl mov cmc mov and cltd push rolb pop xchg or movsb daa and adc and popa xor sbb lods xchg add add and mov nop inc (bad) cmp mov (bad) mov pop addb ret or xchg sub adc or dec or test in xor or int jo lds ret add pop xchg not add cs xchg mov push push add sbb inc add dec mov inc xor roll jl lods outsb push cli fdivl dec loope push push push dec call inc rol inc add popa xchg mov out push dec xchg xchg sub dec jp mov jecxz scas aam mov sub in bound push adc and das xor sbb mul (bad) dec sbb sub xor jge ss lret adc jmp psrld mov in lret push out push and push cmp push and stos mov or nop cs loopew or add push cwtl adc xchg jle pusha dec (bad) xor mov mov or icebp push je lock ret xor ret loope add push mov insl jmp movsb lods rolb xor in movsb xchg inc pop or xor cmp pop add jecxz jb cmp in jl lret add movsl adc sbb fstps lea inc icebp cmp xor pusha je cmp adc sbb add or sbb cmp sbb xchg cmpsb mov xor faddl repz shrb push xor test cmp push fmuls outsl cmp sub dec addb add pop ret or xor mov or ret xchg or mov or loopne mov mov adc sahf (bad) dec add cmpsb movsb daa mov scas lahf (bad) fidivr cmpsb jns xor icebp push mov xchg jle sub lea fisubrl loopne sbb (bad) xchg clc dec ss dec push jp sbb xchg and mov imul sbb or adc and xor mov pop and loope add dec shr cmp popf push (bad) test jl jb jb popa add inc and data16 imul orb dec mov or je pop push mov dec push call andl sbb dec and rorb cmpl push pushf fdivs enter add sub sbb jmp sub in (bad) aam (bad) push repnz mov adc xlat pop jmp mov jnp push push or out and ss and cmp pop fcomps push popa je lret mov and notb xchg imul adc adc xchg pop pop ss or inc sbbb sbb sbb insl sub sub dec pop xor sbb push pop jle test mov test lahf dec push push inc mov cwtl push dec in xor adc lret sbb push dec add jbe jne push sub sub leave out sbb jo cmp sbb dec xchg rcrb enter pop add inc shlb dec add pop lret (bad) rol mov jnp aad rcrb cmpsb sbb or cmp fs mov push call lcall (bad) fist js mov mov xchg pusha out adc js popa xchg fstps fiadd sbb (bad) lock inc or push add mov leave sub sbb test imul jp popa insb push dec pop and sbb das in addr16 jl and test in enter and add inc ret repnz pop sbb call inc ds or les aaa and push enter outsb inc dec popf pop push xor xor ret imul nop push add std pop std lret popf call pushf cmp setne add push addr16 mov push loopne subb pop push push and sub or and movsl dec mov mov jno xchg cli dec mov orl sub fisttpl jge push stos sub aad mov xchg push lock call sub push mov or repnz add and jecxz je test call sub cmp sahf nop nop ja out in mov insl jmp or fcmove movsb push (bad) lret pop ret std mov stos dec in test inc push dec test ret jne cvtpi2ps xor mov test into mov dec aam inc mov jns out ficom push mov xor jno loopne ljmp sbb dec mov test adc cmpb jne adc adc xchg push pop add inc pushf cmp pop pop adcb sub and xor daa lret push cmpsb sbb cwtl mov sbb jle loope add arpl fnstsw sbb pop or add push (bad) es test loope nop mov lock dec mov bound xlat pushl sbb add lahf inc (bad) mov mov inc jns sub mov xchg ror dec je adc pop jb pop xchg inc xchg fist lret inc and imul inc jg lahf mov adc xor mov dec (bad) xor xchg (bad) mov xchg cmp fwait arpl mov push and jl cmp sahf insb fstpl and (bad) jo insb (bad) cmp sub loopne or or cli add scas adc lock gs sub nop mov popa add fcoms add shl ja or xor sub cmpsl push push (bad) outsl popw fstpl movl and push pop mov add mov mov xchg and dec idivl nop push jb xor cs xchg cmp sbbl adc hlt inc sar and xchg fldl adc test jae sub mov pop sbb dec out sbb loope pop cltd dec je adc dec add rcrl sub add decl push loopne adc push (bad) cmovo xchg push js push fistpl mov es pop adc adc dec clc ret icebp inc movsl add lahf mov iret (bad) add cmp cwtl dec imul lock push and push adc inc push pop push xor adc cmp xchg or or mov and call inc lock stos adc xchg adc rorl xchg lods and dec dec out test dec call mov sub mov push mov or dec mov sub cmp jg push cmp xchg pop jl inc push rcl add jmp cmp lods push stc movb add sbb popa jg jle mov aad fsubrs jns pop push push addr16 dec cmpsb adc add and jns and dec pop push popf (bad) jmp pop loopne push rcrb lea sub nop pop adc data16 sbb push xchg dec cmp into push xchg int xchg or aam and lds test pop lods sub sbb sar adc aam int3 xlat lds push adcl loope pop stos (bad) mov push movsl inc mov orb imull push enter jecxz cli push or rolb push xlat xor cmp inc inc into push scas sub imul and pusha push roll ret lcall or fs dec dec pop (bad) adc pop test in xor sbb push jle or inc pushf pop enter movsl cmp push and out adc push pop lea faddp or mov lahf xor pop inc adcl aaa outsb mov mov add arpl and xor mov aad lods cmp es push roll mov sbb sub push mov jno js bound jo test or cwtl dec xchg pop push cmp adc cs cmovs rcll addr16 inc inc loop fidiv push adc out push jmp jb adc sbb je cmp or inc add xor jns mov mov mov mov jecxz adc movb dec and (bad) inc scas pop ss mov mov or bound out mov adc or or jmp sbb and loope mov or or jp and add lret and mov cmovns fcompl push cwtl dec jae jno,pt push pop dec mov push sbb xchg or sub aas or mov pop sub add adcl fs mov xchg incl push mov sbb cltd or add leave push sbb adc cli decl push mov movl or xor pop dec sub xchg jmp inc lcall pop push xor adc push mov in add jns and sbb pusha stos jbe cltd adc adc jg lcall insb jo pop jo sbb pop in add add push add xor adc push or xlat lea sbb sbb xchg lret push loopne iret jnp cld cs and xchg dec icebp mov test pop add cmp mov or negb adc push dec mov call dec xchg push add push jle pop (bad) sub pop fldenv nop hlt cmpsl dec mov xchg xchg stc imul inc cmp jl jae or je call ss dec in mov push inc in ss out add mov dec xchg sub push pusha push sarl xchg outsl xor call push cmp aaa sarb push or xchg jle mov push push insb jo ret jl adc (bad) bound lret loopne or add xchg or or push mov cmpsl rcrl imul jg loop push mov push add lahf or (bad) dec mov xchg shrb lret orl arpl pop dec push xchg cmp push pop or cmp xchg or fidivrl dec add hlt daa xchg xchg add and xchg cmpsb addl cmp inc negl int3 pop nop dec fs mov daa imul cwtl (bad) fcomps mov sbb add cltd (bad) call icebp ret (bad) fdivrs dec cmp dec add in sar iret idivl test xor push push pop cmp or xor dec ficompl cmp sub sbb add xchg pop mov pop mov xor dec loope mov inc insb mov xchg push mov jo cmp inc cmc and out add or sub movsl jl dec movsl js,pn int and fstl xor nop lods call mov (bad) les movsb sub cmp push es das dec inc dec mov jno xchg aas bound inc dec addb mov mov icebp sbb push dec add xor lods add and and sub test and add aas mov push push and cli jp pop testl out pop adcl sbb sbb std xor lcall mov dec push jne pop inc inc es cli push adc dec decb arpl loopne fwait adc push imul dec xchg scas push fcoms xor imul add lahf loope jl add sbb mov and arpl sahf cmc popf xchg loope bound lret fwait xor xor jl push inc push (bad) je jmp or sahf cmpsl mov add call shrb mov adc mov mov dec mov add dec adc xchg lret inc call and enter mov adc sbb es test dec in jb add inc clc mov lock call jb fnop aam jb pop cs enter xchg lret in mov jb pop test mov lret cwtl xchg nop mov test cs je insb push jb pop pop push push jb pop cs dec inc inc cs lret in cmp sub jb pop sub sbb cs lret sbb or mov jb add cld inc js xchg lret movsl mov inc pusha fs jo,pn js cs lret in test mov mov cs lret mov lret in mov mov loopne call jb hlt clc cld add cs inc add pop or cs lret in sbb and jb pop sub xor cs lret cmp inc dec lret in mov mov pusha fs jb je inc jl mov test lret in cwtl pushf mov pop test mov pop cs lret mov lret in mov mov loopne call jb hlt clc cld add add or xchg lret in adc sbb and mov xor xchg lret in cmp inc dec in mov pop pop cs lret pop pusha fs lret in mov ucomiss xchg cwtl in mov lods pop cs lret mov (bad) enter jb rcl fcomp mov in in lock pusha in hlt clc inc fs mov add call leave lret inc clc add sbb cmp xor or dec add call ds push inc mov xor mov mov mov push mov imull pushf mov adc sbb dec jb xchg xchg mov xchg push js jbe inc sbb pop pop pop insl inc or or lret and jl inc dec mov leave mov mov test es xchg out stc repnz call add nop js xchg xchg iret mov test test pop inc mov in nop punpcklbw adc loopne daa dec push leave or orb dec cmpsb xchg pop and pcmpeqb and pop push jo jp adc xbegin mov les pop pop repnz inc mov add movsl add inc or lds jo push rolb movl enter xchg decb loopne or sbb xor inc mov push jb in add stc nop scas in add (bad) add add add and cld (bad) call add xchg jl shlb test shlb pop dec push add test or fwait les mov ficoml ja jl hlt lcall add scas push mov (bad) adc or add xor (bad) fildl (bad) and jmp repz pop add or push inc pop lods xchg mov jns addb loopne out cmp push dec outsb inc ret aas sub add in cmp lock cmp or dec decl lods fiaddl sub mov movsl inc je cmp je mov out jne and and mov sbb inc int jno and xor inc adc popf dec add subb pop jp (bad) in mov cmpsb test mov je push mov jnp je dec cs sbb divl cmp and cmp jle lock push mov addr16 adc cmp sub push xor pop and roll adc inc nop xor jmp cmpsb add xlat and dec lea out mov inc inc jno sub loopne sahf ret mov aas cmp lret (bad) hlt or add lret mov adc pop dec mov cmc push inc insl pop jl jle pop (bad) push push inc sub xor js mov jl dec pop sub sbb and test je xor dec add adc cmp aas jnp push add or outsb fwait adc in adc pop jo pop loopne iret mov test lret jmp dec jl adc or add dec clc add adc sub je and notb (bad) add sub rcrl pop sbb int3 leave (bad) mov lock sahf sub dec dec insb addl ret sub negb (bad) jb adcl push pop adc push adc add push push outsl pop adc fwait mov pop (bad) lock bound or jg mov and cmc xchg cmpsl or add jo sahf clc mov or push nop inc add mov mov jo push adcl ljmp and dec out fxch outsl adc lret sub adc clc push push push dec push jbe adc iret es push bound arpl or test adc gs push das mov push sub mov push xor cmp insb push test add sti adc lock sbb adc ret andb sub loop push or std mov mov push push mov in cwtl movsl add xchg adc sbb mov pop pop out or loope fist add jmp sbb pop push push sbb push xorb xor ret inc iret pop or adc add fiaddl push ret lock sub repnz sub xchg je add pop xor adc push mov add add xchg adc mov push lret lock lahf sub cwtl clc or notb lock cs adc stc add ja fstps nop lods mov bnd push insl and xchg adc xlat add mov jo sti add pop out add pop or pop cmp jae xor and pop jmp dec xor push add in inc fnstsw movsb shlb mov movsb out cmp xlat cwtl sbb adc sar sbb adc cmp jecxz cmp aam aas adc fistpll shll inc hlt push xor adc adc pop cmp adc or and xor xor push and add or push lock mov out push syscall aam push add mov xor fildll push add add mov incb ja jmp test fs pop or mov add ror clc mov (bad) cmc pop jne and add sub sbb push inc pop xor cmpsl mov call add jnp es or in ljmp jae ljmp dec add push outsl ljmp in js or dec shr ds dec loopne mov pop adc loop loop ret inc je jge inc pop or add adc push xor xchg std ret xor and mov push ds fildll sub test mov push pop fiaddl adc je lods push pop pusha adc frstor addb jp and adc pop jl dec fs jle fisub cmp xor and pop insb fidivl adc push or mov adcb jo dec pop and pop add inc lahf dec push mov es push shr or adc inc ret fisubrl mov in outsb adc clc repz bound call rcrb xor xor xor add mov mov pop xlat mov fiaddl push mov adc popa adc push int3 clc and ljmp test cwtl push push testb or pop sub adc scas clc dec pop cmp sahf jne pop push dec pop or fadds insl push call push (bad) push (bad) or jno pusha out sub in jbe enter cmp xor ss pop cwtl pusha dec leave cmp jg ss and cmp (bad) and fstpt mov push dec daa add popa inc negb pop sbb xor shl mov fsubrs jp mov fwait jae mov push xor sbb dec push push addr16 sbb jmp roll cs mov gs adc jo add (bad) hlt (bad) in loope je add adc sbb sarl sbb je or sub xor hlt pop ss dec test fwait dec test jmp adc mov sbb lcall sbb aaa xchg test xchg movsl and pop adc push std mov xchg dec cmc je and (bad) lock pop enter pushf and or sub sub jb movsl (bad) test scas sub mov cmp sub cmp mov mov cmp call push inc jb adc and shrl testb je out inc loop mov (bad) or and xor popa xchg or jns jno fdivl (bad) neg push jp and clc push jmp inc loopne js lret cmp sub mov sub cmpxchg loope fbstp inc add add nop or xlat push call femms push dec cmp jne rolb insl sub stc lods xor adc (bad) push jo add lods ret add pop rorb mov xchg pusha les out adc imul les sahf hlt sbb leave xor or push ret push shl mov je cmp out add push imul pop mov cmp std inc push push sub notb xor cmp and aaa or and pop add in push mov js pop cwtl mov push jne xchg js push jg je inc cmp push call sbb xor cmp jge sub mov and mov stc and add cwtl jns mov and or cmp mov sub inc jbe bound dec xchg mov je movsb push mov sub das xor dec ret andl mov mov or mov jo sarb fcoms insl adc lret mov mov push daa jecxz add jo ja add push or adc add in xor fld xchg xchg test repz aam mov fimull pushf sub push mov cmp fsubrl xchg mov sahf push dec stos or test or cmpsl jmp int3 dec cltd or adc dec mov inc or sbb aaa and les pop mov subb arpl xchg add call test add cmp and inc gs daa clc and push inc fistp movsl cltd cmp loop ficompl dec mov lret push ficompl gs rcrb cmpsl ret loopne addb or sbb mov mov adc pop imul sub push sar pop jmp fiaddl sbb or push push pusha and and pop dec int and push push push jl (bad) jno pop sti sbb push ss popl push pop push pop stc ljmp xor cmc dec bound call mov rcrl rorl mov inc sub roll fldenv pop hlt insb ret adc lea xchg icebp rolb decl test cltd push rcrb call loope push cmp xchg cmp jbe dec xor sbb inc push adc xchg cmp cmp (bad) mov cwtl jo pop cli sub jbe fneni(8087 or insb test (bad) cmp adc add jl ja pop cmp jg jle cmp jle ss jge and jle cmp jge push xor sub add ss rdtsc mov add enter adc ja and or pop inc insb rcrb ficomp cwtl test data16 mov je mov mov imul ljmp in repz xor jecxz add js xchg roll cli add add inc sti ret sbb outsb jle push push das xchg ret shr lret cs rolb jns ret stos add aam loopne mov push cli icebp insb movsl out popa aas lret xchg adc push imul mov adc add pop in and jo insb push movl push and mov inc jno xor or out adc sbb out leave push fs push jmp in (bad) imul sbb cltd sbbl or xor lea stos inc mov lea pop sbb jle push push mov or rclb xor xchg pop add adc sarb pop fistp test (bad) sbb cs push daa idiv inc inc sbb sbb stc adc dec pusha sbb jp,pt testb inc fmul sti lret rclb cwtl cld or leave jnp xchg cmp subl mov jb sub and pop and mov xchg lret inc push add push in dec fiadd ja inc negb jle mov in push das adc sub xchg (bad) in in (bad) int pop mov xor testb sub dec dec push sub test mov sub ret mov jmp push jo sub jmp nop mov insb call push and out gs ret nop call and push sbb inc mov pop jne sti (bad) bnd ds ret insb mov sti and arpl gs clc mov je jne sti cltd adc and sbb and movsl add or mov add add mov or call pop addl fldln2 ret pop sbb or jnp push inc xor roll pop mov jmp mov adcl cmp and add in test dec (bad) xchg adc mov mov inc xor das inc add xor sbbl jne or inc hlt fstps jns inc jmp hlt sbb fidivl cmc push insb sub xor mov adc mov mov push sbb test sbb pop icebp adc jge pop cld push and or mov cmp cmp cmpsb nop (bad) aaa inc sbb lret movsl loope mov add out aad roll mov xor xor or and sbb rorb push add rclb test or ffree jbe pop push pusha or (bad) fcmovbe test aas stos std (bad) adc mov fisttpl fimull inc or xchg rclb pop aas or in sbb into daa mov lahf mov jne aaa push stc mov fnstenv mov mov jmp out sub leave jmp and movsb pop in insb jecxz cld stos les push hlt jb cmpsb ret xchg jns push mov int3 test lret addr16 je push cmc jb jmp sarl xor push pop leave dec push pop jnp (bad) jmp cmp je rorl insl pop jb inc leave leave cltd push js and icebp xor mov (bad) mov dec lcall fnstsw pop jb popa add inc or sbb pop rolb mov add jecxz pop lea dec sbb and push pop add call lods adc out mov mov sub jmp or test adc or push loope inc jg (bad) cmp and push xor ret sub cmp mov cmp sbb push adc pop cmpsb bound pop dec shll mov js (bad) push sbb cmp and call push add mov push or repz aas push pop xor subb sub lods inc sbb out cld stc add push mov and test or mov test movlps add push inc lret add outsl push push push dec dec clc sti shrl leave push adc or in mov sub add add adc push push or mov jmp push mov add mov sub or (bad) scas pop je cs mov or js inc movsb (bad) lret popa add fcom and pop adc bound (bad) pop sarb inc sbb enter es cmp test push loop fwait sub push mov call ret dec jg and rorl push insl push pminsw cmp outsb push stc clc adc xchg mov sarb xchg pushf test loopne add movsb sbb add arpl je fisttpll mov xor sbb inc aaa mov pusha leave ret mov adc add ret fwait inc dec jp push in xchg fs adc xchg push rol ret mov lcall fs pop push xchg push movsb push mov out xchg dec test nop sbb mov add sahf adc in into sbb jge pop mov adc xorb hlt add adc mov jmp out push mov jae inc ret lret test pop mov adc fistpl push dec sbb xchg and dec (bad) cmp sub or and sub push test inc rolb pop movsl or adc fwait (bad) sub pop out push and ss cs push cmpl sbb jae lds xchg and add add pop jle sbb and sub jge xchg and insl jne and jb xor call (bad) dec add mov fidivl mov cmp dec and jnp or push pop push and (bad) mov sub add add add add dec dec cmp or sub popf lods xlat mov lds or add pop fdivl xor test xchg fsubl push nop push xor cwtl xchg push cmp clc lock cmp in enter mov mov mov inc or cmpsl into xchg or push sub and das add data16 loop push cwtl sub sub push cmpsl test fiadd add cmpsb and sub push loopne mov or daa jne cmp int cwtl xor and push adc xchg push stos push add pop jno inc rorl pop xchg jo or adc rcr jae imul (bad) pop or xchg cmp (bad) int3 jb sub xor pop roll jb repnz jne pop push arpl sbb or jne adc pop out mov pop call mov aaa add add fisttpll add dec mov xchg or addps mov mov xor lods and adc cmp or call pop xchg leave add xchg jle pop push fs ret test pop lcall inc sti pop and sub and sbb ss iret ficompl mov sti add daa (bad) push call arpl cmp xor insb mov and jp mov out lds sbb xor cmpsl or xor test sub loopne addl (bad) aas xchg jo sub (bad) pop scas jmp or std rol or dec sahf insb lea imul loopne pop divl push jg lods inc xchg xchg inc repz lea mov sbbl mov and scas mov add adc aam sbb xlat mov test lahf rolb push les ret or movsl sub sbb xchg push inc pushf sub and mov (bad) sub push fnsave and lock sbb popf test sbb inc (bad) (bad) or and imull push mov sbb cmc dec sbb sahf jne roll xchg imul nop and dec ss or xor xor xchg mov sbb les push rep add (bad) icebp mov adc (bad) testb jne add jns dec test popf pop push out (bad) sbb cmp push xchg orl mov std icebp and pop frstor vaddsubps xchg push xchg dec stos adc cmp icebp insb pop push fiaddl dec jne pop pop pop icebp xchg push dec pushf sub jp adc pop (bad) mov cmp lcall (bad) ja xor aaa inc dec dec negb and das xor and aad xchg push loop and mov fimull es out cmp sub xchg xchg push mov inc cli (bad) (bad) imul sarl add sub sub inc adc mov jnp pop fidivl or jecxz jno add nop decl sub sub lahf test ljmp xchg hlt insl andl adc pop inc call adc lock sub clc movzbl jmp push or jl cmpsl jmp jmp or dec hlt dec adc in notb in stos add pop ljmp rcll loopne sub insl imul add sahf jb cmp outsb push push adc add sub fild cwtl push addl push push sub aam aaa dec sub (bad) hlt jge jbe icebp mov or jmp imul aam (bad) xor stos je sub mov ret lahf ret sti shr adc int3 add sub std jno xor push mov leave nop push loop imul test pop pop sub sub or push js fdivrl lods mov add pop push ja js jl inc pop cmpsb cmp sub mov mov fcmovb mov or clc daa mov loope dec or jp inc pop ret or mov cltd adc fsub loopne pop lea insb lock push icebp or fist push adc rolb call mov add push push sub xchg inc outsb push rclb dec sarl pop and pop pop push cli in loopne xchg ret ret xor bnd (bad) sbb mov and adcl and cmp je repnz je,pt fs gs out mov sub in movsl inc or mov stc add addr16 fwait test mov sbb int3 and sbb jo in fs push jb dec add clc or push fwait insl dec ja imul push das daa sbbl and hlt mov mov ret dec xchg rclb (bad) sarb lret mov sahf add xchg cltd mov push ds or fs cmpsb (bad) leave push scas sbb enter mov cmpsl push inc xor rcl push and push sbb mov mov push sub mov push lds jns fs jb dec inc mov sbb lods add (bad) in xor lods fistpll mov xor cmc or xor sarl add cmc pop mov andl adc dec (bad) idiv jg adc add jl inc push mov sbbb adc enter dec jae outsb daa xchg or adc add inc pop loop loopne ret mov adc jle movb faddl sar sbb pushf add dec jle popf mov xchg adc int3 jns xchg jo lods inc mov xor ret add jnp pop jb in inc dec fadds lret sbb dec je push add rcll sub movl add mov add gs cltd scas rcll sbb roll sbb jle pop cmp sub scas ret out inc pop sbb dec lea xor or xor cld adc cmp or adc (bad) das pusha cmpsl sub dec adc nop mov dec adc pop xsaveopt invd mov mov mov (bad) mov add pop push icebp jl and push adc fs lea cmc mov je xchg add test pop add xchg push pop or daa aad or call or sbb ret (bad) shl add cmp rcll clc lahf out sub hlt ds adc into in push hlt hlt push dec xchg cmpsl or imul stos fs add aas lods jbe sbb inc add and push aas sbbl sbb or js aam sbb aad or arpl mov flds mov pop int sbb push adc add stc xchg cmpsb stos into das mov pop dec dec lods pop push in pop or cmp clc mov and call pop or in pusha add dec adc fs ljmp (bad) xchg test ret mov mov jle mov or negb fisubrl lock test mov cmc and mov dec push mull add int loopne,pt xor xor inc movsb xorl loope sub cltd in insb or jl repnz loopne ret or call push sbb outsl sbb sbb sbb leave das repz lock mov sbb incl or ss sub fsts mov xlat or mov inc loop add test addl call sub add mov dec and mov lea int add ja outsl adc stos stos or or test shrb push dec in hlt cmp xor mov pop add xor inc popf (bad) mov hlt lods call outsb arpl mov add (bad) lock in sbb sbb fxtract jge (bad) scas mov cs sub movsl ljmp loopne adc ljmp jbe mov mov mov xor js sbb sub ret sbb adc lahf add pop in cld adc sub negl cmp or pop sub or cmp cmp js scas dec lock shlb push adc xchg push xor push outsb sbb jmp inc clc notb fmuls mov mull lea rorb lock adc (bad) pop xor mov hlt adc pop hlt add dec les push sbb cmp sub pop (bad) sbb sbb and jb cwtl push sub dec incl enter xchg pop xchg push or adc add or (bad) inc repnz clc add add adc das jecxz add aas in data16 add call and mov inc cmpsb add repz cs lahf or inc clc hlt lock in mov mov fcom ror xchg lret in enter inc or (bad) push jb inc mov js leave or adc sub mov ljmp xchg mov push fistl add add mov enter outsb (bad) pop pop aam or (bad) or ret sar repnz mov daa sbb pop mov jmp std xor das inc sarb cwtl pop fnstsw push mov cmp xor outsb pop pushf jmp mov xor into lea loop cmp jmp inc add cld fwait les adc out sti es iret inc lock cltd mov test sub repnz xor js,pt or dec rclb xchg pop movsb mov mov movsb jmp cmp movsl clc xchg je adc jmp jl xchg add mov xchg lods dec repz loop ficom xchg add mov mov mov add test cmp adc lods push mov (bad) rolb jg movsl repnz test jns jmp inc push xor push inc add push repnz push enter or or nop pop push or cmpsl mov xor mov pushl imulb daa sar ja xchg pushf mov sar mov (bad) dec dec lahf add nop pop repnz pmulhuw or dec or sahf add xlat mov jnp gs sub mov mov dec mov dec pop inc pop nop cltd les sarb adc (bad) nop stos inc dec or dec jl jl in jmp xor (bad) mov stos iret inc sbb mov stc push outsl sar adc enter xor cmpsl cmpsb repz jmp adc mov out movsl je outsb pop mov or (bad) mov jnp sarl das bound cmp xchg lret in lcall and cld adc mov fistpll in jbe sub enter fisubr jg mov push ret decl leave jmp pop mov add sub cmc mov outsl fnop sbb push repnz mov scas je dec xor loopne inc inc jle dec add fimul mov jg (bad) out mov (bad) push mov push stc insb adc std lret mov in mov test test enter mov and aaa and xchg scas xor mov (bad) xor push fimul inc dec stc dec push stc lahf push ss add pop rorb jo push lret outsl push mov leave jae out cmp push dec in sahf lret sahf adc mov mov adc add cmp sub divl pop mov and je dec push sub cs xchg movl mov aaa (bad) pop push data16 pop jo pop pop (bad) es ds pop mov push mov pusha push and ja (bad) (bad) xor cmp nop xchg out pop pushf cwtl and jns cmpsb fs mov sub dec push cmp mov (bad) aaa in add lahf jmp cmpsb popf cld adc repz addr16 cmp fwait ret aam pushf adc mov stc sub mov mov rcr add mov cmp push inc sbb out add xchg out shl sahf out sahf xchg jp lahf out sahf sbb cmp out fwait sahf out addr16 lods lcall int jns inc bound (bad) cmp (bad) xchg movb xchg mov out jo dec inc xor jl out adc ljmp mov mov push outsb mov shr sbb ds repz shr push mov out mov int3 notb (bad) ds repz push mov dec adc mov popa nop enter or scas push or dec data16 mov lods pop push inc add or repz lods jle add cmpsb cmp dec inc js out pop dec inc daa ds add int sbb push ds jns xchg and adc pop dec ds push adc dec or out imulb adc aaa push (bad) cmpsb inc sbb jnp cs lds cmc ds add cmp insb scas xor and jl daa jle lcall es outsb test and das sbb xchg adc fidivr push (bad) fisubl dec push dec and lcall iret or jne jbe add insb mov or jnp jnp es ss push test or cmp fidivr pop cs repz (bad) mov in or fidivl push (bad) and pop add fldcw add pop push test das dec or jge sbb sub lahf idivb (bad) jne fistl outsb xorb sahf divl or push cmp add xchg or into imul imulb xchg push neg jnp out jle outsb sub xchg int or in jnp cs adc outsb push outsl cmpsl pop lock dec add int push test xor jnp jae jns pop or iret repz pop imul repz pop push fs jns cmpsl stc mov cwtl stc push jl insl out push inc pop cmpsb aaa mov test dec loop ja outsl add (bad) add inc loopne or fdivrs or dec pop (bad) mov push mov xchg mov push mov aam add adc jl out inc push xor out popl or dec xchg repz lret out xchg sahf out sahf jle pop dec ds out sbb (bad) xchg out in cmp repz mov jnp mov push inc out cmp mov jb iret repz dec cmp out jnp push or rcrb fwait test pop jns out dec cmp sbb repz repz lcall sahf out xchg mov xchg test pusha adc inc sarl push xor or xchg out (bad) cmp loop les fcmovbe add mov cltd push call jns lods xchg jle inc sub repz clc cwtl fmulp mov mov repz inc push es in jns iret push in xchg aam dec aas mov xor inc js pop add dec pop xor adc pop inc mov dec cmp lahf push sbb and sbbb add rclb lret (bad) add pop adc pop shrb pop add mov adc inc sahf out stos pop mov adc out pop dec cmp fdivl pop outsb add sbb adc adc fwait in aad jo cs sbbb repz push int3 mov repz idivl lock test mov pushf xchg nop mov cmpsb loopne push insb push pushaw sahf out sahf pop push dec dec inc cmp sahf out xor and out sahf out adc add repz cli call fdivrl repz ror les mov es cmp lcall jns out push lock call jns out fs pop push lcall inc cmp push subb outsl lea mov mov add fld dec add sub enter xor adc insl loopne jb xor xor shrb xsaveopt inc je xor add and movsb rol pop mov xor push sub inc push push add adc mov fidivr fnstcw mov sbbl and inc js mov add push ljmp xor inc push cmp ljmp aas scas inc xor and inc xor add sub fnstcw jns movsb mov call nop pop xchg test test pop daa mov lret ror mov repnz dec push mov adc mov xor mov in add jb insl inc mov push dec adc repnz sub addb push adc mov add daa mov add dec pop pop repz pop add push inc xor dec xor dec dec pop cs add pop cs or out push push push jl pop push dec (bad) and repnz cmp nop jmp dec sbb jl adc adc inc jbe xor push in fild pop pop out sti cmp dec jo ds push cmp dec shrb or mov adc cmp push xor xchg add jno mov pop sarb push pop ss movsb add sbb arpl mov or cmpl add les add in fs pop and jg gs add push pusha xchg fnstcw in push pusha ja jg nop addr16 add pop adc dec and icebp add rorb or js repnz mov scas out inc dec cmpl and and add push xor add pop add lock dec enter mov push outsb xchg (bad) mov jo or (bad) sbb iret jo jl sub rcrb cmp and nop (bad) loopne adcb ret out dec sub (bad) sbb shlb and xchg adc insb out repz or rclb cwtl out ds cltd push nop xchg mov xchg mov mov sbb cmp out xchg dec fistpll fcomi mov add mov in aas ja pusha mov dec mov mov es add testl push xor outsl int3 mov daa sub xor mov cld ljmp dec mov or stos pop icebp (bad) negl mov rol add sbb and (bad) pushf mov ss inc les in int leave add xor and mov and inc rclb rol repz cmpsl sub push mov inc mov mov loopne mov (bad) pop mov pop lock test movb (bad) mov cmpsl cmp in push pushf or fisttpll pop loope outsl pusha jg (bad) push incl pop push pop out push fldl add inc push inc lret and push fisubr or cs or (bad) pushl inc fcomip sbb mov aam iret les adcl loopne ja xlat fidivr pop sub lds inc xlat mov repnz add loopne xlat (bad) mov pop and outsl mov and pushf mov inc shrl (bad) sti add cmp jp fidivrl or out aas incb sbbb jb mov push in stos mov icebp dec fs loopne cli mov scas mov (bad) cpuid in loopne es hlt cmp sbb adc fdivrs push jge pop sbb addr16 cmovl mov (bad) ss dec pop out das cs push aas icebp iret and rcrl push repnz repnz popf test or push push fwait adc jae jnp xlat sub out lock or mov mov pop inc ja shr dec rorl add add invd shr or movlps stos mov and lar xchg and add add daa mov pop or or daa daa daa daa or push (bad) cmp add adc adc cmp cmp adc push in jbe pop nop/reserved sbb in in sbb push in in pop and and in in and es daa daa int sub sub sub daa daa daa sub daa das xor xor daa daa daa xor daa aaa cmp cmp daa daa daa cmp daa aas inc cmovno dec dec dec inc inc inc inc dec dec dec dec inc dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec push push push dec dec dec dec push push push push dec dec dec dec push pop pop pop dec dec dec dec pop pop pop pop dec dec dec dec pop pusha popa bound or pop gs xor push sub push jb imul jl jb insl movd adc cmp cmp cmp cmp jne ja cmp cmp jns jnp cmp cmp jge jg pop daa daa daa adc (bad) addl test daa daa mov daa daa lea xchg xchg or daa daa daa daa xchg xchg xchg cwtl xchg lret daa daa cltd lcall mov setge xchg lret sbb fimul mov dec movsl (bad) cmpsl das test outsb daa and sbb pushf pushf pushf fdivrl scas scas mov cmp mov jb cmp mov mov mov mov repnz in mov sbb xor ret or push inc fimul vmaxss enterw daa and lret bswap or int pop into iret (bad) sahf pushf fsubrl rorl rcl aam dec sti dec inc aad into loopne (bad) daa daa mov fmuls pminub fsubl daa daa daa fstp fnstsw cmpsb xchg xchg lret adc loop aas xchg xchg fucomi in in out jbe leave in sbb jmp in ss or pmaxsw (bad) mov scas repnz repz jbe pmuludq psadbw cmp clc out divl (bad) jb jb sti cld std pop into sbb push (bad) jle cmpps in fs or mov fcmovne or pop or femms daa daa daa daa movups adc daa daa daa adc daa pop sbb sbb daa daa daa sbb daa pop setl es sub sub pushf pushf pushf sub inc mov adc outsl aaa (bad) daa daa daa cmp cmp daa daa daa cmp xchg cs push push push xchg xchg xchg xchg push push push push xchg xchg xchg xchg push push push push xchg xchg xchg xchg push push push push xchg fildl push sqrtps push xchg xchg xchg xchg push push push push xchg xchg xchg xchg push pop pop pop xchg xchg xchg xchg pop pop pop pop jns pop xchg pop push push loopne dec dec outsb sub gs dec dec dec push loope fsubrl push sbb mov jno jb cmp jns jae push jne jg cmp jns adc (bad) jb jb jl jle in repnz jg sbbb in addl xchg in mov in push push bswap leave leave leave xchg xchg xchg xchg leave leave leave leave xchg xchg cwtl cltd leave leave leave leave lcall leave sahf lahf mov out in mov mov sub sub and and adc push and and push push push push and and push push push push or and push push setno push pop push xchg xchg xchg xchg push push push push fsubrl xchg push push pop pinsrw (bad) pop enter cmp int3 cmp cmp int iret rcrb (bad) xchg xchg inc rorb push loopne das or lds mov loop jecxz leave in jbe pmulhw out daa mov leave call jmp fmull outsb aas in out out pop lock popf pushf icebp repnz aas hlt or in cmc pop div (bad) fs push push push push loopne fcoms xor push push aas dec mov pop or push outsb pop sub adc sahf outsl cmpsl cld push enter lea and popf mov inc cmp mov pop adc push mov sub ja es pop mov xchg adc xchg daa (bad) lock (bad) push pop pop cs mov test push and mov idivb addr16 addps fs cs out test mov mov daa in (bad) mov scas rcrb in fcoms cmp or jp and xchg inc inc jb pop enter out outsb das fsubs cmp mov fdivl dec dec mov dec and dec inc cs insb xchg xor xchg push jb daa pop xor xor xor in dec sarb mov xchg pushf and jl mov mov rcrb in add idiv pushf xor jl enter xor in out daa pop push pop push add out sahf add xchg cmpsb add jge in xchg or insb inc loopne dec dec outsb out in clc add addr16 or nop ja xor xor inc mov xor push xor xor xchg xor dec and and or mov inc or xchg xchg rcr jo in xchg lock pushf cmp (bad) jle xor xchg sbb xor fsubs pushl jg repnz ja nop setl leave add lret push js mov add jbe,pn movsb rcrb and inc shr add fdivrs aad cmp pop or xor dec jb hlt xchg xor divl int aaa pop push xchg pop jae cs nop rcr mov bsf repnz loopne addl xor in push or mov out and out mov in mov jl out loopne add push iret fldenv lock (bad) or test xchg xchg or lahf xor jns add add xlat dec sahf fcomi push add mov rep xchg lea repz jmp rolb ss test lahf imul mov sbb popf enter pushf imulb lock addb xchg rcrl xchg xchg or out int3 daa mov fmuls int cwtl or xor cwtl push mov lcall pusha orb mov sbb xchg mov mov mov (bad) rorl lea test dec mov adc add mov xor ret xor add or lahf or sbb adc inc sub insb and iret sbb and add mov push add jae mov sti adc cmpsl lds les cmp xor ja or dec pop test and xor xor mov mov pop and add push or push mov (bad) sub push dec sub jne push push punpcklbw xor sbb sbb jmp pop rolb lods push aam mov leave add sbb mov ret or fadd push add xchg inc lret shrb sub mov fwait inc sbb jg lcall fdivs xchg orl mov pop dec sbb stc dec rolb cmp mov insb (bad) in jg aas pop push or or mov sbb roll mov xor pusha add arpl xchg mov mov push xor sub push les lret inc testl ljmp push mov lahf xor orl out rorb mov xchg xor push push daa ja xchg gs mov lret shlb add lcall sbb inc xchg adcl pop jmp push push or or orl (bad) lcall add addr16 (bad) xor pop mov adc push add pop mov mov adc xchg add lret xchg add mov pop cmp sub lret (bad) aaa pop test jl push shrl stos inc mov dec add or and add xchg jmp inc push adc xor mov or sbb push jb cwtl insb stos call mov clc aaa adc mov mov ss out test or jecxz and adc add or dec jl adc fsubl or adc jne xor pusha add pop dec and mov inc xchg xorps andl pusha sub inc mov xor xor adc mov adc sub adc dec and call pusha cmp ds and push aaa sub push out sub insb das and adc and outsl add push and aaa movsl pop test dec sbb cmpsl stos inc xchg sbb scas adc xor cli add add das fld mov add arpl xorl mov je add out lret mov mov sar or sbb push cmp fmull or inc and inc inc mov test dec aas mov xor sbb or pop push fidivr sbb add es cmove or xchg iret push repz pop lods add fstpl cmpsb shr inc mov and movl imul add push add mov sbb cmpb int sarl test nop and mov push and push insb mov mov inc ds cmp out fnstenv popa es push lock jge adc xchg cmpsb (bad) mov stos js idivl adc pusha mov popf neg adc inc jo push lea and inc ficom dec pop mov mov jnp xchg adc sub push pusha inc out sbb pop mov jge fidivr mov xchg inc push xchg xchg xorb mov (bad) mov ds out out xorb scas pop into push mov and dec xchg push (bad) cmpsb mov out push mov lea mov lret (bad) jbe push enter stc xchg data16 push adcb fldcw cmp js ds pop rcrb imul inc pop lock push imulb int pop add dec test pusha ss sahf in call fs cmp scas push scas mov insb es inc xor mov fwait mov xchg inc push inc inc cmpsl int movsb mov push mov nop loope inc mov push cmpb push sub push pusha push xchg jnp es jl sahf push mov jns xchg testl aaa jns test dec into inc push xor in mov shrb out leave mov xchg mov (bad) lock mov cmp mov idivl and rcrb mov addb (bad) popf test jo inc xchg neg jnp push test dec cmpsb aad xor mov aas mov mov fwait push outsb repz xchg ret ss neg sti push push leave push rolb scas jle imulb testb mov movsb neg sti jo out jb,pn into pop sarl mov pop inc jmp push xchg mov roll lods test xchg sbb xor or inc out xchg mov push jp es movsb mov push inc xor adc imul mull dec (bad) mov fld xor pusha inc push inc mov negb pop aam outsl fidiv pop cs inc pop jmp fnstenv adc es push mull push pop imul es (bad) ja (bad) jbe ret pop aad loop xchg mov into dec jmp lods push scas xor xchg (bad) jnp adc xor out sahf imull push loopne push xor in call jle pop push mov out ss ds push jo idivl lods shl push mov push mov sarb (bad) sahf rorb dec out jo push push and out adc das cs sti out nop (bad) ss into xor mov ds dec pop shr sbb es push and mov (bad) xchg push mov pop mov push lock fidivl xrelease xor jge pop inc jle push inc dec test popf mov int push js cmp mov rorb enter into jo repz test loopne push imul pusha or (bad) insb push mov sub fucom sahf out (bad) jo scas hlt push mov jns out adc lahf out sahf xchg stos enter lods cmp repz inc insb mov int3 in add sahf out imul lahf out scas xor xchg (bad) add jns push jl mov shr call mov iret repz inc pop jbe mov sahf cmpsl stc cmp add sahf out imul int notb das dec insl iret repz xchg sahf out lcall cmp repz adc cmp stc cmp repz (bad) or push xor out sahf mov mov cmp repz dec data16 mov ljmp out pop outsl test (bad) sub repz out or imul mov jl mov jl sahf out cmp fisttp out xchg out mov out aad mov cmp out adc cmp out ds mov nop jns jge ret ret lods jecxz cmp repz ret pop mov out les jl loopne repz pop lds test adc inc jbe fmull (bad) ds repz jl loop enter imul stc cmp rcrl leave (bad) xor fidivr cmpsl push aad lret es pop cmp repz pop int3 push cltd enter repz xor stc cmp repz jae (bad) daa iret repz cmpsl pusha mov repz inc imul push sarb repz jl (bad) (bad) jns cmpsl stc cmp js (bad) hlt repz repz inc popa xchg mov fstl aad jnp iret repz in (bad) dec push les sbb dec je cmp out ret fmuls jns iret repz (bad) add cs sarl subb repz pop jg shl sahf out ds inc pop jge cmp out (bad) repz fmull imul sti and sahf out mov cmp push ficomp ret in pop sahf out lcall cmp sarl push js (bad) jns out out push loope push jge xor out fimul loop popa cmpsl stc cmp mov iret sarl lret dec jo sahf out cmp loopne in pop jge out xchg int jns pushw (bad) (bad) mull out lcall adc cmp jns (bad) mov and repz rcll sar repz out ljmp repz cmp fstl in int jns dec test sahf cmpsl stc cmp or inc jg cmp repz sub jns cmpsl stc or mov loopne icebp cs bound loop repnz push sarb test or ffreep aaa stos dec add andl push dec push addr16 bound inc push and imul add and mov fisttpll rol xchg or mov inc mov lret sub movsb (bad) mov and popf xor xchg loop mov mov pop xor dec xchg inc push sbbl cmp stos pusha aam movsl dec inc cmp mov push add xchg outsl lahf mov or mov inc cmpsl add adc addl mov pop jmp mov xor fisubrl xchg add add stos xor (bad) (bad) pop pop int test xlat fwait das popa or imul sub popa xor or imul adc movsb pop (bad) in adc push lret sub mov pushl pushl fstl mov scas das scas adc les movsl dec mov mov popa push sub push pop push sbb fidivrl aad (bad) xor cmpsb aad xchg push mov les pop inc mov inc das push xor dec adc imul inc aaa inc inc sub mov push jne fidivrl push push add push in dec inc mov pop mov pop inc jmp add sub inc out movsb mov adc or jg adc sub mov dec push sub sub push add push shlb sub gs pop inc arpl mov push and inc int sub sbb cltd mov add push imul push aaa sub subl adc add or sub and inc arpl inc stc adc push mov lds push fs add mov mov cwtl pop adc nop call lods xchg jns and pop add test add push inc push jne inc loopne adc popa push xchg mov sbb test inc inc and inc addr16 jae xor dec add mov dec inc pop rorb cmc dec adc test sub or and fwait pusha push inc dec dec lods fadd lcall cmpsl cli inc inc dec and mov push aad and pop jnp inc sbb xchg mov add mov and pop jecxz in xor jo push inc gs pusha adc lret add and enter dec inc push pop dec push lock gs push dec adcl push int3 lock movsl dec lods add inc gs pop inc aad pop mov mov add add inc bound xor mov mov ret inc js and es repz add cs test test push shrl lods (bad) gs dec inc pop pop dec and icebp push inc jmp mov (bad) mov inc xchg dec jne push push dec ja jns push shll outsl fwait xor mov or jae or lods cmp imul stos lods xchg outsl mov stos jecxz fwait in pop push inc int add fwait jecxz xor cmp dec or push push loop or andl outsb mov and adc add dec movsb sbb imul xchg dec or orl sarl dec test inc sub xor adc bound bound les pop and out pop push cmp mov stos mov pop and push cld or inc dec push dec dec jge pop and inc test cli test jne inc jmp adc pop lds aaa inc fisttpl jne add cmpsb add xor fsubs dec xchg cmpsb (bad) jmp xor dec and push inc mov push lcall pop mov lds adc pusha add push dec rcll popa or adc inc (bad) add or lods pusha cmp arpl movsb fmuls lods outsl gs gs jbe out arpl dec (bad) xor mov imul mov push push test mov and xor dec dec shrl push xor sbb in and dec lods push xor push or push dec imul sbb jae aad testb (bad) test sub pop outsl jno inc adc add adc fwait bound or rcll imul loopne dec mov adc or mov popa addr16 push push xchg mov pop push xor mov mov cs mov mov insl cmpsl push inc leave dec lea in inc outsl test push icebp inc adc dec shr shl xchg (bad) nop push in inc aaa (bad) inc jno inc xlat stos and fidivl jp dec stos arpl roll push push jecxz sub test dec jmp mov xor mov add lret les (bad) cmp xchg or and stc pop inc sub push inc cmp mov pusha push sub fstps cwtl addb and stos dec (bad) jo xor push mov push pop or lock (bad) ss push lods stos ret iret xor xchg insb outsl and push xchg xchg jae rolb inc jns pop cwtl popa lret in add cmp (bad) push fs xor push test mov push push inc push and dec inc inc rcr dec es das ja push sbb ja ja xchg aad dec lods call dec fs sbb flds aad adc jge mov inc push push push inc adc fisubrl xchg and int mov dec test rclb cmp lcall lahf outsb dec outsl pop xchg lods (bad) xor dec jnp popf test and lods popf (bad) push mov sbb xchg adc push mov mov adc rol daa and sarb insl fadds das jo push testl cmpsb arpl sub sbb sbb sub pop inc or imul test adc mov inc dec inc pop inc popa inc mov les sub jg rclb outsl push insl dec stos mov push dec pop mov sub push push test push rcll adc push sbb mov mov es xchg cwtl imul push pop mov pop mov fwait xor (bad) jne or adc sbb sbb dec xor adc inc pop das aad mov pop or mov mov or aam push pop sub imul ss dec lods push mov sarl inc xlat mov cmp sbb aas jbe aad adc adc mov push ret fwait jl inc sub inc add xor sub aam inc mov push insl insl sti pop jg add (bad) jne arpl push je inc dec cli call fisubl sarl movsl imul cmp pop adc sbb cmp cmp aas mov inc inc mov mov cmc or dec push or imul sub cmp or and sub rclb dec dec sub notl pop cmp cmp cli movsl inc test push add loopne dec sub imul imul push movsb add pop pop pop inc jmp pop inc pop mov mov sub inc popf inc les and lds cmp pusha inc ficompl dec pop xchg cltd or jae test add and shrl dec andl sbb or orb sarb fstpt imul (bad) repz rolb mov push mov lods pop orl test stos mov fldl ja jns push mov ja adc test sub xchg ret mov dec jg aaa inc or icebp ljmp inc push (bad) xchg sbb lods (bad) xor or outsb fisttpll pop add imul cmp or mov mov ret ljmp sub push dec inc mov mov mov add inc stos test push (bad) cmc inc fsubrs ss xchg and insb push dec movsl push and popf xor and loope dec pop or sub insl sub or pop fisubr inc mov jmp push add sahf bound dec inc adc ret stos (bad) es mov mov (bad) or inc bound mov pop mov call xor xor aas ljmp jbe jno dec sub adc mov shrl pop cmc dec rclb dec int mov adc movsl ja imul sub mov mov sub mov jae jno (bad) mov mov in lahf outsl sbb jae test les insl pop rep add hlt adc sub dec push and xor push or adc insl xchg pop popf outsl aad sub xchg push or inc push xor divl push pop addl or mov or ret jnp js dec inc jns test lods jbe lods mov fcoms jno lds inc js popf aad inc sbb imul lcall jno push ret stos in pop xor or inc imul stos rcrl dec (bad) sti push fisubl or fiaddl lods pop push pop lods fiaddl aas push and mov push mov adc pop mov incl add (bad) add out add jns notl push xor andb sahf nop mov jbe adc (bad) xchg (bad) int cmp push add incl pop insl push and and sub mov fcmovu sbbl dec subl dec or rol cmp mov sub and clc pop outsl test imul lcall test das or sub fstps vaddps insb jae inc insb in rol mov xchg gs rorb pop inc sub push and inc loopne adc dec dec add push lahf sub inc inc lcall add add add push aas cltd nop sub or iret jnp enter loopne call repz negb push sbb insb cmp repz push pusha push mov nop out sar push add pop rcrb fcom lock or cmp repz and cmp repz repz fisubrl or cmp loop jecxz in cmp repz loopne clc jmp sahf cmpsl stc adc sub inc out sahf out pop lock and mov pop in mov sub shr add ficompl das or add cs dec pop push js add cs or mov mov pop leave or push incl enter push push sbbl add jb pop and push and enter add push pop and enter roll or cld in add xor pusha aad out sub and leave push sub adc xor xchg jg jnp (bad) push inc push sbb add fcomps pop cmp rcrl sbb outsl add add es add add push inc add jns mov mov xor push sbb push xor mov xor or cmp outsb pop add dec and nop pop push fs int daa sub sub mov and fstps inc in cmp xor dec adc test nop dec jmp (bad) ds cmp dec sbb jo ds aas nop cmpsl das lock xchg loopne xor jnp shrb or (bad) fadds inc fiadd inc mov mov dec push dec arpl shlb add incl dec or xchg cmpsl arpl inc cwtl add push fbld les mov jbe push adc xor adc push inc pushf xchg lahf int or mov dec pop push or pop add jne add fnstsw push push sbb xchg aad add push ja jno sarb cmp xor cmp fwait push (bad) call dec outsl pop inc adc into ret out cli rorl (bad) (bad) decl (bad) (bad) dec lcall lea jne cmpsl stos adc fdivs shlb push cs or insb sub in nop and arpl aas and ret dec shlb push addr16 dec out cltd cmp addr16 repz aas decb mov jo shr pop sbb (bad) (bad) (bad) cld xlat aaa jp inc scas lahf jmp jmp jp mov iret sbb and (bad) (bad) (bad) jmp rcll dec add jle in cmpsl and adc adc (bad) std xchg loopw adc mov ljmp clc movups adc ret aas inc sub nop mov or test xchg jb (bad) (bad) (bad) (bad) cld adc cmp mov movsl dec aam loopne and mov cmpsl xchg push in jno (bad) (bad) (bad) decl mov cmpsl jne enter inc lcall mov fstl bound (bad) (bad) jmp xchg mov add pop jns inc sbb fcoml fisubl es insl inc aam addr16 lock adc (bad) (bad) dec mov push movswl dec roll test frstor lods shl jl ds (bad) (bad) (bad) decl insl sub push (bad) mov adc fimull or (bad) mov (bad) (bad) (bad) decl mov pushf ficom out sahf sub aad dec cmp cmpsl je outsb shll cli lcall div push sbb popf adc lock push lock inc jg (bad) pushl loope pushf icebp pop push test adc jg hlt xchg and xlat es out (bad) (bad) (bad) (bad) cmpsb push (bad) mov ja jg ss adc fist adc sarl stc mov inc imul mov pop xor hlt (bad) (bad) jg call jmp adc inc jl clc movsl je sbb mov ljmp (bad) fucomip mov stc lock jge addr16 iret rcr arpl mov (bad) cwtl aas das sbb add push hlt js fstpl xor cmp loop (bad) sbb dec add (bad) jno clc leave inc jo mov (bad) (bad) incl xchg lahf icebp adc sub dec xchg loop cmp jle outsl xchg (bad) (bad) call sbb movb clc mov push sub push aas sbb adc (bad) loop mov push add jg outsl xor pop and push cmp pop push mov xlat jnp xchg or ret sub fild cld outsl pop movsl incl lret jmp sub adc pop adc (bad) loope add (bad) (bad) ljmp inc pop movsl es (bad) out outsl pop jno sub or inc push popf loope fs (bad) (bad) call stos xchg xchg mov mov imul lock mov popa (bad) (bad) (bad) incl fprem jns jg jno es ficom cmpsb sub js cmpsb cs faddp fdivrl ja,pt sahf je or xor mov or cld jmp adc (bad) decl xor icebp popf mov jle mov push es xchg mov fildl (bad) dec call dec (bad) pop lds add (bad) fildl in add or lahf mov out dec (bad) ja mov ds adc stos (bad) or jg out (bad) (bad) (bad) call mov and add insb inc push dec sar jp xchg mov in pop mov gs push (bad) mov or in add mov incl inc cli mov aas sub icebp pop xchg jae loope or fild (bad) (bad) decl popf outsb dec (bad) pop push jg mov cmpsb loope iret sbb in mov jbe mov (bad) (bad) clc mov inc pop pop ss lret cli dec sahf testl fcmovnu rcrb neg lock mov in lahf and sti add icebp in xlat wrmsr (bad) mov cmpsl out loope inc fnstenv push incl pop push cli add or xchg mov mov sub (bad) (bad) pushl (bad) lcall mov test or cmp xor sar in lds pusha cmp push jmp sub into (bad) (bad) (bad) call je cmc jne leave xor icebp xor adc sbb xor mov (bad) (bad) ljmp sub mov shr movsl jns push je mov pop mov dec out out mov cli pop test or sub scas mov lods mov xchg fwait adc xor sarl push roll scas pop in out dec jno sub in shlb popa mov outsl (bad) (bad) (bad) lcall inc insb push test int rcrl jb repz or (bad) dec cmp (bad) (bad) (bad) jmp mov cwtl popa mov int inc sbb jmp xor fsubrs jae add mov (bad) lcall adc imul adc shl mov push out cs fisttpl cmp push fisubrl ret jns rcl xor (bad) incl jno push lds jp add pop stos mov (bad) (bad) (bad) pushl lcall cmc scas cmp popa out pop jae jp lods dec scas repz xchg out stc mov push leave (bad) popf jbe jle cmc jmp call lds (bad) (bad) (bad) (bad) jmp sub push (bad) int mov sub rcll inc mov sub (bad) lcall add mov adc in js adc out sbb daa int3 out sub lcall (bad) fidivrl test lods mov jg or inc mov cld pushl rol outsl popa mov mov (bad) sub mov into xor pop movsl jnp xchg cli (bad) (bad) incl movsb mov mov add pop repnz and fisttpll scas mov enter mov (bad) ljmp roll popa lahf pushf lds jb fisub jno in loop loopne (bad) (bad) (bad) decl jecxz stc call inc push ja pop jmp fsubr inc cmp outsb push sahf cmpsl decl sub cmc icebp outsl inc popf into sub mov mov mov clc (bad) lcall mov pop in int3 add (bad) mov jmp outsb or decl lea push cli cmp (bad) ds mov ds fistpl shlb xor insb loopne mull pop test cwtl pop imul mov divb cmpl out jle iret jle fistpl (bad) loope (bad) (bad) (bad) inc stc cmp (bad) cmp mov int3 cmp pop mov in cld (bad) (bad) push jmp mov sbb pop int sahf or push fist scas xor incb add or sahf sbb jmp adc fisttpl dec mov inc jp (bad) push iret mov iret fisttpl pushf add push mov xchg xchg ret add mov (bad) lcall mov je std mov adc add pusha jbe sbb or insb jb notb and adc inc into mov in ror push xchg and xor incl movsb aam lea insl ja sub pop cld (bad) (bad) decl in lods xchg mov mov out in (bad) mov pop xor jnp sub inc sbb lea sbb stos jecxz dec cli mov and (bad) jmp mov fbstp outsl clc mov jb js sub sbb movsl cmpsl sbb cmpsl mov (bad) (bad) (bad) (bad) fiadd sbbb jns push lret (bad) (bad) mov fucomi loopne xchg mov lret jg (bad) (bad) (bad) push lret insl add pop fstp (bad) cmp xchg ret stos mov daa cmp jae test ljmp push cld add fldenv outsl push (bad) ljmp clc mov push cmp sub outsl cmp es in jp fcomps pop or (bad) ljmp scas aam insl inc jmp lret js fimull ljmp sbb enter mov sbb xor ret cmpsl jge fcmovne xor je adc insl dec int3 lcall pushl insb dec cmp pop addb rorb (bad) fs adc jmp sbb mov hlt jp cmp (bad) cmpsl int imul xor je pop ret pop cmp loope arpl push mov jo (bad) (bad) (bad) (bad) jg pop loopne push loopne jb lret xor iret or or es sub int or (bad) (bad) pushl (bad) mov insb inc daa inc push inc xchg aad lods or jp (bad) (bad) pushl sub fcoms push call pusha jp mov adc popf ret les lds hlt pop icebp repz (bad) fistpl in and movsb clc adc (bad) lcall int sbb cmp and insb jae int test lcall pop rolb mov push jp sarb jecxz (bad) (bad) incl test or cmp xor push insb push push sbb addl mov mov decl jmp cltd sub jge dec xor or add stos loop iret sbb mov (bad) (bad) jmp (bad) call xchg sub nop lds mov sbb push mov xor aad push sub (bad) jg aam mov dec push subl in js add add (bad) (bad) ljmp loopne jae xchg loope pop mov loop sarl (bad) mov cmp leave lock mov xchg inc mov or call sbb inc enter sub inc test or push loopne push or mov incl or push stos push push movsl fimul sahf inc sub (bad) (bad) (bad) mov sub sarb cmpsl adc mov fnop sub lret mov mov in int call and xlat jae pop jp or (bad) (bad) (bad) mov add clc or lcall mov in xor sub (bad) (bad) pushl (bad) dec mov jns inc mov rcl and mov add (bad) (bad) (bad) aas xchg inc mov ljmp mov rolb dec sbb mov loop decb mov adc data16 scas arpl inc (bad) mov (bad) (bad) (bad) push ss out xor (bad) adc add and lcall xlat sub mov mov loopne (bad) (bad) (bad) mov mov mov lea and ret push rolb aam mov (bad) jne sbb pusha xchg cmp aaa push and add sarb clc push sbb cld xchg mov fisttp mov in lea dec mov aaa sti fdivs (bad) lcall jle int xchg lcall jle cltd mov jbe sbb insb pushf dec sahf inc (bad) (bad) jg adc cltd cmp mov sbb repnz (bad) and out push sbb push add lret sbb xchg repz xor inc pushf movl (bad) cmc (bad) (bad) (bad) pushl loope push jl mov or aam imul stc and mov (bad) (bad) (bad) ljmp and insb jle movsl aam fadd mov xchg inc lret pushw sub int3 mov mov cmpsb mov andl or (bad) (bad) (bad) adc or cmpsb bound jno adc adc js pop pop xchg (bad) (bad) (bad) jg test and loop pop rep xor int3 pusha data16 pop rcll mov rol scas repnz (bad) (bad) ljmp dec movsl xchg jmp shlb mov es xor add mov jecxz js out cli push hlt sbb mov push sbb dec cltd aaa push addr16 (bad) (bad) cmp push cmpsl cmp sub aad sub fs test (bad) (bad) (bad) fistpll aam mov mov sub test mov pcmpeqb mov call movsb lock sub dec pushf cld sahf and loop xor xor aad aaa xor (bad) lea dec sbb mov adc stc (bad) int mov (bad) call inc cmp fst adc mov xlat ds cmp mov fmull (bad) cmp jae mov push xchg cmpsb call inc cs push dec push mov xor ljmp mov shrb jno mov xchg (bad) (bad) (bad) mov jnp out add or xchg cmp xchg sbb ljmp mov movsb aas mov cmp pop jl mov in cmpsl fxtract sbb jb cmp xchg mov pop mov jge jle int xchg jb sbb jp ja mov in (bad) (bad) (bad) decl xlat imul (bad) (bad) jecxz clc and xchg sarl fisttpl jmp jbe jg jnp jns imul dec out rcr or stc cmp lcall (bad) ja cld adcb push add js into shrl or (bad) (bad) (bad) pushl sti inc or cmp rolb lds inc (bad) divb (bad) jne mov jmp xor inc and xchg push enter and mov mov sarb add inc cs push cmp jg dec imul popf sti jecxz (bad) (bad) out sbb mov loopne or cs (bad) (bad) incl sub (bad) or or add fisubl outsl je nop cwtl movsb enter call jle add inc push adc xchg into mov int3 adc (bad) (bad) (bad) mov sbb pushf xor (bad) int3 lahf or add sub movsb push lds (bad) (bad) (bad) incl mov and rcrb movsb stos mov outsl inc jno das xor (bad) jmp sub test fs div push mov (bad) call dec inc movb test cmp decl cmp or testb pop or (bad) (bad) (bad) aas nop pop push int3 pop and (bad) hlt xor sbb push repz fimul testl (bad) fldl lods adc dec jmp jno mov inc mov ret out (bad) (bad) (bad) pushl (bad) rcrl adc lea loop and dec insl lret xchg nop test (bad) call xchg push js mov (bad) repnz xchg sub loopne (bad) (bad) call call jecxz icebp jo push aaa or loopne sub cmpsl sbb (bad) (bad) (bad) (bad) fcoms push gs rol jns inc stc push cmp repz out pushf dec orl insl into test (bad) incl insl in jle mov cltd adc fcomps push xor (bad) (bad) pushl mov jmp js sbb dec mov cwtl adc pop jns sub (bad) (bad) decl or sbb pop fdiv int jae or lods xchg sub sbb adc mov sbb iret sub pop adc cmpsl pop add pushl imul sarl test nop jns cs inc pop aas dec sbb jbe dec outsb test (bad) mov inc fs sub or push (bad) (bad) lcall out rcll jae je mov sub jne push sub push rclb push dec int3 mov add cmp cltd and bound into push (bad) (bad) (bad) (bad) jmp cld cmp cmp sbb jecxz mov dec stos or lods daa or movsb fcompl jnp movsb fmuls xchg int3 stc shlb jmp lock (bad) (bad) lcall xor dec mov nop dec push pop sbb das loopne inc rcl leave call adc das jne (bad) (bad) (bad) (bad) mov (bad) dec mov clc dec iret imul (bad) push push mov pop cli (bad) (bad) (bad) dec movsb and xor in lret adc out jne jmp dec stos insl cmp test es clc (bad) (bad) in mov jmp push es inc (bad) sub (bad) repz sub movl decl mov or out mov sbb in mov sub aam inc frstor popa scas aam push inc xor push gs or inc xor (bad) (bad) (bad) push or add pop xchg imul mov std adc nop cmp stos test out (bad) (bad) (bad) ljmp in pop xor sub icebp das dec push out arpl ss sahf and sub ja or lods outsl (bad) (bad) incl fs xchg aam sub dec dec aad mov rorl (bad) sub mov adc ret fstp sbb popf inc push andps cli stos aaa imul ljmp add push mov hlt ljmp inc call call into cs aam jle lret dec cld aaa inc aam ds fstpl (bad) (bad) (bad) (bad) sti scas insl shl push mov push sarb stos clc sub out or test (bad) (bad) dec jns mov mov enter call or test add and cmp (bad) pushl fildl xlat in cwtl lret inc cmp mov dec xchg data16 mov pop xchg je and dec je lret lods or mov lock push jnp nop testl cmp lahf inc fisttpl inc mov (bad) dec mov test and das inc mov pushf xor movsb pop inc jp mov (bad) fucomi cli (bad) cli xchg fdivp adc mov addr16 mov push bound inc xchg jns lods (bad) sub sbb idivl push ds (bad) mov jb movsb arpl movsb test inc aam (bad) js xchg (bad) std out test jl aam popl pop scas jmp fwait sbb (bad) ljmp das cli (bad) call add lods sti idiv je jg aaa out mov pop lds ja (bad) cmp pop xorl imul mov mov cmp test iret daa pushl cld ljmp nop push push imul nop pop or scas hlt push (bad) cmp cmpsl sub pop or xor fcmovu sub movsb fisubrl push leave lods lret fs sub pop rcrl (bad) adc (bad) inc imul pop cmpsl add cmp (bad) sub jmp lds aam mov imul adc arpl (bad) ljmp adc lods mov dec fwait incb dec inc shrl jg pop xchg push cld sbb lret cld jne push (bad) (bad) (bad) pushl xchg sbb xchg insb push or rcl fcmovbe (bad) xor lret scas adc mov cmpsb (bad) (bad) push xor cli and jecxz mov cmp xchg jmp into push popa cld (bad) fldt cmp push aad mov mov xchg stos dec inc sarb (bad) (bad) pushl add (bad) aas push pop icebp pop mov fisttpll aad lret xor mov sbb call mov jmp and push lea sbb cld (bad) (bad) cmp stos pop imul dec dec dec or mov insb int (bad) cmp (bad) out (bad) gs fldt sub mov je mov mov pop std (bad) (bad) pushl push sub cmp jmp jbe out pop sbb jecxz (bad) les movsl push mov mov add movsl or sbb (bad) mov adc sub pop fldt sbb mov cld popf sub cli decl cmpsb jmp push fistl (bad) cwtl xchg movsb stos aas lds cld daa add mov mov subl push outsb inc add (bad) pushl int pop dec ja mov (bad) mov jg fsqrt (bad) (bad) call cmc cmp sti xchg adc clc xchg inc stos xor int (bad) ljmp sub outsl mov mov push cmp mov aas (bad) (bad) decl xchg xchg insb cmp jmp sti gs xchg sarb lret (bad) (bad) call jb js rorb inc divb pop cmp lods (bad) inc sub add push lods inc inc psubd call mov jle test jg bnd loope or ljmp sub mov cmp or cmpb dec jno push (bad) pushl add sbb fidivrl and sbb pop mov jmp incl ds (bad) (bad) lcall aaa adc push jp adc outsl jne stc insl adc jb mov ljmp (bad) out mov xor fisubrl inc jnp hlt arpl (bad) out clc test (bad) (bad) jmp pop inc in leave add or xor push into out or sarl std (bad) lcall mov aam fnstcw aad mov aas stos mov and (bad) out add cmp sbb cmp cld incl xor lds loop imul mov jmp in cmp push xchg ss ret (bad) call xlat movsl push push rorb pop sub ss mov hlt pop or mov adcl lcall jmp xor mov mov mov cs aaa or shrb (bad) ljmp clc call pusha xlat mov mov jns scas mov test (bad) (bad) jg lods test insl xor xchg cs imul cmp sbb mov push test out outsl (bad) xor or mov (bad) (bad) push or and int3 adc cltd (bad) mov out shrl add daa fs sub (bad) (bad) decl sti jge (bad) call dec mov adc (bad) into pop cmp insl jecxz in jg mov (bad) cmp pop into ror xchg data16 xlat jl (bad) cmp push push add ja mov xor insl call das fdivrs or sahf cmp push iret pushf outsl outsb shlb ret sub (bad) in lea inc adc ret jmp inc adc sbb fldt or mov call add stos pop jo rcl inc pop sbb ja lods outsl outsb jg mov ss rcll leave add (bad) (bad) (bad) mov sub (bad) push sahf xchg vpunpckhqdq adc leave jnp xor adc add (bad) xchg or addr16 sub jb and cmp fs and sbb insb cmp pop jnp in insb jl xchg dec cltd lods sub inc dec inc (bad) mov sbb and xchg jo cmp jnp push adc and orb mov add fstpt push enter sbb dec scas cmp inc dec (bad) cmp (bad) (bad) call pop mov lret pop (bad) cmp lea adc (bad) (bad) (bad) incl cmc or scas imul outsb fucom mov ror pop fbstp pop imul or pushl pop mov dec sarb rol (bad) xchg call xchg aas pop xchg ret movsl es cmp xchg bound add test xor fdivrs push cmc pop push cld call loop xor pop mov fdivs inc cli (bad) jl sbb (bad) (bad) lcall test mov repnz ds xor mov lret fcomps fimull inc fs sti xchg xchg cs (bad) (bad) pushl push mov imul enter xor jl pop or test or out dec cltd sbb mov loope pop data16 xchg push mov cmp and push dec cmpsl imul jmp movsb mov xchg popa inc cmpsb (bad) (bad) (bad) (bad) fbstp call mov cmp test call or xor movsw iret fs (bad) (bad) in cmp call adc xor mov (bad) es mov loopne inc data16 inc out cmpsl inc pop xchg dec push jno cmp (bad) (bad) (bad) inc inc js push jb pop into (bad) loope push inc shll mov (bad) (bad) xlat std std (bad) (bad) lcall lahf add rclb rcrl stos xlat xchg mov inc xlat loopne xchg jo (bad) (bad) cmp adc stc call (bad) cmc adc sbb stos cli pushl clc mov sahf ret sub outsl sub jb jb gs inc (bad) (bad) (bad) call add adc mov ds xchg mov dec sbb mov (bad) (bad) and sbb (bad) lcall test jecxz in jne fisubl pusha mov inc cmp mov (bad) (bad) call xor (bad) jmp in into inc scas push mov in faddl cld jg sbbl or (bad) (bad) (bad) jg stc lock lahf mov cld (bad) (bad) xchg jmp ss jnp lock xchg lds out faddl (bad) (bad) (bad) pushl jae jmp lahf jmp mov pushf xor sti out inc adc cld ret pop mov (bad) lcall inc lahf adc nop mov imul andl dec lahf mov and jmp js (bad) add (bad) sbb cltd push add ljmp mov xchg lds mov into hlt lcall popf in jo lret jbe (bad) out add stos ljmp stos fisttp scas stos int3 mov or (bad) pushl cmp lds fcoml lock push push sarl sub jae cli (bad) in std int3 dec mov clc std jno (bad) ljmp icebp add negl xchg add xor lahf pop mov call ljmp rorb mov pushf mov (bad) (bad) push cltd inc jnp insl repz pop mov stos aaa dec test mov fldl fs pop (bad) (bad) (bad) pushl adcb mov stc xor push popf fs insb ja (bad) icebp out enter clc pushl (bad) xchg lea push movsl fnsave dec mov dec jp (bad) jg sub and mov fdivrs xchg cli (bad) in loop (bad) (bad) (bad) call rol and (bad) and mov push cmp xchg mov cs (bad) mov jecxz or dec call xor jp (bad) fiadd xor movsl decl (bad) notb sbb mov mov cmpsl pop rorl (bad) call fimul and and add repz movsl mov mov (bad) (bad) (bad) ljmp pop pop loopne add push mov add cld sbb adcl (bad) ljmp fs adc arpl lahf in pop out leave pushf jmp (bad) and mov inc jns sar mov xor cli (bad) mov jmp mov (bad) (bad) (bad) (bad) (bad) stc dec jg in mov lret jo dec jno and scas xchg out cmpsb cwtl roll mov (bad) (bad) inc mov cs ljmp jge mov pop adc jb sub jge mov jmp aam (bad) jmp cltd les cmp jge jnp (bad) (bad) incl lret cmp (bad) xchg cld xor (bad) call sub outsb loope (bad) jno fwait out dec sbbl add js dec fwait (bad) in test cld adc fs jg jle rclb (bad) jmp adc pop inc xchg (bad) lods sbb mov inc das lds (bad) (bad) ljmp (bad) shlb jl push mov pusha mov inc inc xchg fdivs pop insb push incl xorl arpl js (bad) or imul (bad) (bad) lcall add sub in inc (bad) out test repz scas jle negl (bad) (bad) jg sub mov jp ja or sbb inc (bad) aad push dec lods dec fiadd fwait (bad) lock iret sbb in xor mov (bad) lea imul ljmp insb mov out out (bad) imul sub fsubp (bad) (bad) (bad) fistl fisttp in and sbb cmp enter xchg fisttpl fcomip (bad) lcall cmp frstor popf inc push (bad) dec imul mov cmp (bad) (bad) (bad) (bad) fdivr jbe cmp push leave fnstsw imul mov xor xor mov fs push ret sub arpl shrb dec scas std lock fsubr mov pop ror push (bad) jne repnz jo aas cmpsb pop cwtl daa (bad) mov enter lea stc lods repz cld in cmp std jmp (bad) call jge aaa movsl je mov gs jp sub mov (bad) (bad) (bad) (bad) fsubrs cmp rcrb scas xchg cld mov xlat loope inc test mov jno es sbb imul jo int3 inc jo push mov adc insl (bad) out mov (bad) (bad) (bad) mov jmp cmpsb inc and je in xchg add aad jecxz sub lcall mov jge aad jns jnp pop idiv js (bad) (bad) (bad) call pop mov mov adc jo lods test xchg jp mov adc repnz adc add scas cmp daa iret and lcall jle les out sub and or inc ficomp out movsb test in jnp and push mov dec push dec mov call jo mov outsl mov xchg jp and mov into (bad) ljmp xchg stos or sarb (bad) jg jg adc jo jns out mov inc mov (bad) sbb (bad) (bad) (bad) mov mov movsb adc lods insl lret adc loop negb jle arpl mov (bad) pushl pop (bad) jno repnz jbe int jl sub xchg dec js adc and out ljmp dec gs mov mov xor ds adc call fnop insl lcall dec jmp pushf gs add (bad) mov aad stos call in int insb (bad) xor divb call pop repnz (bad) jg sbb outsl arpl cmp inc jl fcoms sbb fisubl es (bad) lcall jmp int mov icebp inc xchg pop repnz enter xchg (bad) mov imulb lret sbb ljmp int3 dec jbe jo ret cmp mov divb loop aas mov js fcmovnb ret (bad) inc bnd add push (bad) mov pop addr16 data16 jns arpl int3 popa popf jge fstps inc decl aaa imul arpl je ljmp push mov lods push loope cmc pop cmp fisubl lods shrl int stos xchg lds jle fistpl push mov cmc insb rclb or insl gs loope (bad) (bad) (bad) jmp jno ljmp repz nop add lea push repnz (bad) out mov fisubrl ljmp ds lods ja (bad) call pop stos scas ret clc (bad) xor xchg fwait dec inc (bad) es pop arpl (bad) imul fild sbb test (bad) mov (bad) (bad) (bad) lcall adc addr16 mov sbb sbb aas mov je xlat sbb pop jge (bad) (bad) (bad) decl sbb push divb push and bnd int les into cs (bad) das cli xor push or cmp xor dec sbb mov scas cmc (bad) (bad) (bad) (bad) call pop fs and inc cmc sti pushf dec pop push cmp stos push pop divl pop push pop bound pushl xlat mul add jo lret cmp shrb (bad) lcall push mov orl sub stos fldt pop mov aaa jmp add (bad) je fisubr subl ljmp mov add jle stc or mov xchg dec stos adc (bad) (bad) (bad) call or lods insb loop pop vmovntps mov jne or imul pop int shrl lods mov jno push mov xor into sahf out imul cmp (bad) (bad) (bad) fiaddl push cmp popf (bad) ljmp dec imul (bad) call ds imul cmp aad popf daa push cmp int mov sbb (bad) mov adc fcom push mov fiaddl push push cld pop mov ds ss (bad) in cmp into xor mov add aam mov or dec push xchg adc mov inc inc test inc idivl mov mov push jno (bad) (bad) call loope shl rcl adc push adc add (bad) pop and adc pop pop (bad) (bad) (bad) lcall and adc push nop inc fcomps push mov inc push arpl fcmovbe dec pop adc (bad) jmp inc repz iret lock ja (bad) ja mov (bad) (bad) (bad) fbstp xor jbe inc daa mov je cmpsb mov lret das bound push fldl (bad) (bad) (bad) push inc push lahf loop cld push pop fimul aaa xchg mov jecxz lret cmc mov (bad) (bad) (bad) push ss in jp adc outsl jge inc mov mov cmp ljmp push ja (bad) (bad) (bad) pushl cmp in sbb arpl scas out and xchg xor jge push lods insb (bad) pop and out (bad) (bad) (bad) jg loope mov stos mov hlt xlat push jne mov pandn shrb testl xor (bad) sti daa pop pop and (bad) int gs fcomps mov std ja jnp sub lret sub (bad) jnp ljmp scas and aaa fidiv xor jl mov adc pop or sub add pop nop icebp (bad) adc jb sbb (bad) sub es xchg lods into mov sbb icebp decl cmp push or lods fwait mov lock les rcll rolb dec xchg xchg jnp sbb (bad) (bad) lcall mov jl int3 mov aaa pop jl mov imul mov (bad) (bad) incl dec mov pop (bad) jae cmp data16 addl (bad) (bad) (bad) jmp scas dec jo test jl jp cmp or jle mov adc cmp scas jns add sarb fbstp push scas add lock nop push push lahf gs xchg sub call or ja mov push rorb jle dec adc or cltd scas stos dec ds jge (bad) (bad) dec or insb sbb adc xlat imul lea dec rcll mov pop xor shr into ds fcoms fwait fs leave (bad) dec insb fnstenv or incl loop imul push push rcrb sub adc stos mov (bad) (bad) call sbb mov fcompl mov push jnp jge mov (bad) push call (bad) pop (bad) jmp cmp mov loop mov jns dec mov data16 (bad) (bad) (bad) (bad) cmp into int dec xchg data16 les js int stc xchg xchg (bad) (bad) (bad) mov (bad) xchg pop fstpl sti mov jp fistl int3 cmc dec loopne (bad) test std pushl jle,pn mov aad (bad) ret mov (bad) stc ljmp mov pop mov std decl insl jl fldz xchg cmp jg jle repnz add (bad) pop cmp hlt sub inc addr16 daa icebp (bad) (bad) faddl pop lahf cwtl jg outsl inc mov xchg scas int3 mov das cli (bad) jg test push cli ret xchg out mov pop push mov mov dec inc (bad) lcall ja outsb mov sar loop pushl pop fs jle pop lock cmp int3 pop push out fildll mov das (bad) in ja data16 ficompl int aam pop es subl pop sar jg outsl xlat cmp mov imul mov inc or ss jge mov cmpsl int inc xor nop sahf and inc enter sbb imul xor xchg dec dec mov inc sar ret push es xor mov push sub test sub dec dec loop (bad) push imul jle and scas jo ljmp sbb pop out repnz in pop adc js in push (bad) (bad) jg lods cmp jae xchg jo loope push pop dec mov adc push rcr fmul jae cld adc (bad) (bad) (bad) lcall sub test outsl int mov jne xchg bound add mov jg jne mov call jno cmpsb addr16 pop mov (bad) (bad) incl cwtl dec sbb neg test pand es mov (bad) (bad) jg jmp (bad) iret insb ret jg es arpl loope idivb push mov cmp shrl iret push gs popa (bad) ds push push mov dec clc xchg jnp addr16 out ret repnz dec (bad) incl mov stos lock stc and push clc int fldt jg decb jg and out rcl sub fidivr cmp notb push dec xchg scas xchg add lods add push (bad) jg (bad) ljmp jp fs lcall pop fwait aaa pop mov loope scas rorl icebp popf adc xchg stos fsubrs jo (bad) (bad) (bad) inc cmp pop (bad) fs mov sbb sub mov outsl cs (bad) (bad) call add fsubl mov out cld mov jg push insb std xlat js mov pop sbb stos loope loop shlb or (bad) in ljmp test push jnp pop outsl (bad) in push lret push add call and xor push jg mov add loopne stc mov iret scas testb sbb (bad) repnz scas and outsl jns imul fldpi pop pop jbe ret sti mov add xor cmp add adc lret in jo cmp cmpsb sbb test and (bad) ljmp aad lsl cs cmp int cmp mov inc push cmp and outsb mov or adc inc jo adc (bad) outsl clc pushl dec sbb lret in mov cltd sub or call stos sub lock mov and sub sub (bad) decl sbb lcall push adc cltd jle rorl ret push jg (bad) decl mov sub push test push cmp in repz jb inc out clc (bad) call out dec rclb (bad) mov inc cmp mov cli (bad) (bad) (bad) (bad) fsub xor je mov ss xchg nop aad je enter std out xchg sub mull sbb ret aaa or mov push mov xor (bad) (bad) decl lods in (bad) mov insl fdivrs out mov sti and jg jg fild dec jg push mov push (bad) sub push sbb (bad) (bad) sti das jmp addr16 aas mov les lcall cli popa pop mov (bad) (bad) fdivrs mov mov push mov dec dec lcall (bad) (bad) (bad) (bad) aas push mov add ljmp bound fnstenv (bad) jp fidivr idiv decl gs and jg xor inc lret push popa stos imul (bad) call movsb mov fsubrs data16 sub mov pusha jmp outsl (bad) lcall and dec xchg sub pop lea jge cmp mov sub ss mov ljmp push cmp stc add (bad) fcomip lcall cwtl pop jg loop jecxz cli pop xchg cmp (bad) pushl add rclb mov jbe nop push nop sbb mov (bad) fisubl lcall push mov loopne (bad) (bad) (bad) jmp and and popf sbb cmp fs arpl mov addl push mov incb jge sub xchg xchg call loope data16 jle (bad) (bad) jmp rcr pop ja shrb jno cs mov fstpt push arpl push nop cltd sbb nop xchg loop les pushf (bad) jg decl sbb or or int3 (bad) cmp xor (bad) (bad) (bad) call dec pop mov sti inc jae leave sub hlt mov ret sbb push (bad) xor nop das mov (bad) (bad) ljmp movsb xor xor push out ret call adc sub sar test dec push adc sub (bad) (bad) ljmp or push mov addl (bad) mulb push and adc mov inc sbb add incl cld aam dec push push xchg or add or movsl xchg inc rcrl xchg push lret ret pop lea out imul in push (bad) (bad) (bad) (bad) cmp aam jl aaa test inc jnp cs shlb jg popa cmp add nop jl rorb shlb pop lcall test fstpl (bad) pushl std adc shll popa push and xor pop cmpl mov dec mov (bad) cmp inc stos mov and and incl mov and pop out iret adc lds or push xor or (bad) (bad) jg pop (bad) std out xorb cmp imul push pop xor inc push lcall sti mov push mov push ret mov pushf mov scas cli adc movsb paddusb pop nop xor ret flds (bad) (bad) jmp jmp sarb loop cltd inc js lds dec cmpl cli stos popa dec push pop lock icebp jnp fmuls mov loop jno into scas pop divl ss pop idiv dec psrlq stos inc push cmpsl in (bad) (bad) (bad) (bad) std icebp fldt inc aas fsubr sub dec jns,pn psubusb sti lods andl pop rcrl mov mov and jg mov js (bad) (bad) fbstp scas mov mov test push push sbb and lcall mov inc leave outsb mov jp jb loope int3 js mov into push pop xchg sbb jmp mov xchg xchg out fisubrl xor andb aas hlt ss xchg dec je in mov push in pop daa dec outsl div push andl xchg inc add pop inc sarb stc ljmp xor or and ja hlt inc and cmp inc xchg xor jmp iret ljmp xchg in bound lock (bad) (bad) fsub cwtl in sub push and and sbbb (bad) ljmp or sbb add sub clc std push xorb loop stos sbb (bad) mov inc imul fistl xchg test loop (bad) jmp cmp test add scas outsl mov subl sub ret xchg (bad) push (bad) mov sbb jg out fldenv lret in jecxz mov je inc jns (bad) (bad) ljmp orb jg mov add add notb xchg (bad) incl mov outsl rcll jo ret (bad) fild outsb mov pop (bad) cmp lcall call test ficompl hlt mov xor (bad) (bad) (bad) jg int mov lods mov scas fidiv cmc pop mov mov ret cli mov (bad) (bad) call pop push mov sbb aam rcrb pusha xor scas lret nop push xchg xchg cmp (bad) (bad) incl (bad) xchg push jbe arpl ficoml sub add jl cmp (bad) (bad) stc xchg or test insb sbb (bad) lea fcomps jp je xchg add inc shll je cmp push dec test push sbb (bad) scas outsl ret frstor add aas movsb add add pushf add cmp (bad) (bad) lcall inc mov jmp test adc daa add mov mov xchg and (bad) push sub and (bad) sbb hlt xchg sbb jnp push sbb hlt inc (bad) (bad) (bad) call xchg xchg push jl test mov cltd mov mov xchg jae jbe mov dec sbb (bad) jmp push mov xor nop jp or push inc push mov out fwait rorl lret lea cmp cmpsl hlt cmp ret addr16 (bad) (bad) jl rcrb pop sbb and mov shrb (bad) (bad) (bad) jg lcall dec inc rcll imul mov inc sar (bad) (bad) lcall adc dec lahf cmp movsl cmp into mov movsl adc es or mov fs (bad) jmp mov stos xchg sub push xchg aam xor (bad) (bad) (bad) lcall or pop pop pushf xchg jae fucom cmp jne shr les mov mov dec es mov loop xor in sbb jbe test outsl (bad) jp jp cmp or mov shld mov lock pop cmp pop xor jecxz ss pushf mov das sbb push cmp aaa sub mov add pop jae adc lahf push xor (bad) je (bad) (bad) inc stos push dec pop out xor push adc adc stos dec cld scas out mov dec sbb repz or (bad) (bad) decl sub adc xor movsl xor imul pushf dec fdivr (bad) (bad) ljmp (bad) add lcall lea fild sub mov (bad) (bad) (bad) call stos addr16 jns inc iret push inc add and sub mov lcall (bad) call dec fs adc das sub mov fistpl (bad) pusha or lcall movsb (bad) (bad) (bad) ljmp fwait inc inc shrl pop mov mov sbb fisttp lock push mov shlb (bad) (bad) cmp and fwait call loope adc xlat xor add popf fisttpll or pop clc jle lret or gs ret cltd cmp addr16 inc cs cmp xor push fadds push and sahf xor pop and repnz lcall mov nop cmp xor mov aas lea adc xchg adc (bad) jmp sbb cmpsb xchg insb xor xchg cwtl (bad) jp outsl add (bad) (bad) ljmp (bad) scas xor or jb inc sub adc mov les inc les rcl pop pop jo pop push adc (bad) (bad) jg mov lcall out xor sub xor sbb lcall pushl cltd cs stos and cltd sbb dec sbb ds lods xor xor lea lahf and mov add pop out nop adc jp scas (bad) (bad) (bad) (bad) mov or in xchg (bad) cmpsb fsubrl inc mov or cmp add jp fldenv lahf pop in loop pop pop icebp (bad) jmp cmpsb leave pop leave jge repz movsl scas loop in fs (bad) sub arpl icebp fcomip sbb pop daa fisubl xchg cltd loop (bad) (bad) ljmp dec fcmovu scas jae fsubs outsl push adc sub in sahf sahf cmp (bad) call rorl idivb mov aaa (bad) out iret sbb leave inc dec lcall and xor icebp pop or les adc ljmp cmc mov add fcoms push sbb dec (bad) (bad) (bad) lcall inc lret pushl mov lock enter popf push lret ja in icebp call (bad) (bad) (bad) jmp outsb cmp push xor push into mov loope xchg xlat adc outsb les jmp pop xor (bad) mov sbb lds mov cltd and fnsave cld cmp jae jecxz (bad) jmp imul mov push (bad) dec dec pop leave iret cltd add and popf mov (bad) (bad) mov cmpsl xchg and shll dec lret sub jno pop (bad) (bad) lcall xchg push arpl dec or push sbb mov push and pop arpl mov sub inc (bad) jo xchg aam call sbbl idiv pop add dec lret add in jecxz mov xor lahf (bad) out mov cmp (bad) (bad) (bad) in fcompl push push dec push shrl rcl (bad) cmc pop jg jo loopne das jo or jne push std (bad) mov push repnz push sub adc rorl bound stos arpl clc jns hlt cmpsl mov dec cmp push jge xorl adc jno (bad) (bad) pushl mov inc lcall or jg in add movsb cmp nop pop adc (bad) decl adc fisttpll xchg dec xchg gs scas loop rcrb (bad) (bad) mov and fsubrs xchg std faddl shl mov mov xor out clc inc sub pop inc xchg mov pop jecxz fnstenv jmp nop add and xchg jge fadds out cmpl gs adc call fnstenv jge xchg push repnz (bad) repnz int3 mov enter jg je movsl loopne dec (bad) jl std mov lret inc out adc jb in mov ds jg,pt mov icebp (bad) (bad) (bad) fidivr outsl in gs out adc push inc pop push outsb mov and inc fdivl repnz jo or jecxz sbb jle cs (bad) (bad) pushl sti ss adc daa insb jno nop or int js mov lahf xchg xchg ss sbb (bad) (bad) ljmp mov sahf jne mov sarl xchg (bad) fistl out shl les (bad) incl cld add jmp sub and fiadd mov inc inc dec xchg sbb (bad) (bad) jmp push dec (bad) or pop cli inc push cmpsb int3 or scas xchg sub xchg lods daa (bad) (bad) jg add les out sti out cmp inc push dec mov das dec mov mov call test (bad) sbb xlat cltd leave into (bad) roll sbb cmp (bad) (bad) (bad) call lahf lea jnp and aam cli nop lcall mov (bad) push fmull cmpsl test ret sti mov fsubl sbb cwtl push sub jl daa push dec (bad) (bad) (bad) (bad) jns inc cwtl test sub xor mov cmpsb mov mov cwtl adc (bad) (bad) (bad) ljmp (bad) sbb pop push sbb inc mov icebp les pop aam cmpsl push push sbb xchg push rcrb add mov lds (bad) dec push imul cld hlt pop (bad) mov dec clc mov sbb les pop lock mov hlt jg (bad) jmp and xchg cmp fbld pop cmp push cld cmpsl out adc clc (bad) decl addr16 fdivl movsl mov fs adc movsl xor jo daa push test adc or scas dec mov or insb insb (bad) iret push (bad) (bad) incl cmc call inc shll aam and je imul or push repnz sbb cmp es adc enter stc xchg cmp stos dec cwtl aad sahf inc sub push test lahf pop or fisubrl rclb cmp mov inc and lahf in hlt add xchg push movsl shll pop inc jle dec dec dec (bad) fs sub (bad) (bad) pushl or ja mov xchg xchg lret movsb in rcrb and (bad) jno jmp (bad) jmp jecxz lock cmp stos push shrb cmc add incb lret scas in pop pop mov stos inc imul mov inc rcrl sub decb add lcall decl mov dec ss push cmpsb adc mov sarb imulb mov and nop pushl scas xlat jne sar add in aad mov jnp push fs sahf sahf stos or fwait inc in xchg jecxz and sub aad (bad) mov push mov stos mov mov daa sarb xor (bad) (bad) fcomip sub (bad) mov mov jne push aad (bad) xor xlat push ljmp pushl lods mov or mov test and mov and mov mov pop aaa mov (bad) and (bad) call clc outsb shlb inc and mov das dec push jg jmp push dec fbld mov (bad) (bad) lcall sar xlat mov shrb out xor adc and ret xchg add fmuls (bad) pushl lods or lahf test lea push dec (bad) (bad) pushl cmc lret leave mov loope xor and mov lods (bad) call arpl pop scas push das fistl push es adc (bad) (bad) (bad) ljmp movsb mov stos (bad) cli fldenv adc loope dec sbb cld mov ljmp es (bad) xchg xchg decb loope sarl sbb push push icebp xlat inc repnz push adc sbb add xchg xchg idiv lahf loop scas jl addr16 push dec aaa xor test (bad) incl adc mov (bad) adc mov loope das addr16 (bad) (bad) incl add adc mov mov push ljmp cltd push push jb jae adc dec jae enter incl inc mov and push inc sbb (bad) (bad) (bad) lcall xchg out nop hlt sti or pushf mov or icebp jg hlt add cmpsl jg out mov pop ret fisttpl stos sbb fnstsw (bad) fldl decb or fwait (bad) (bad) (bad) in adc lea mov arpl pop roll cld lock test loop mov insb pop (bad) repz enter xchg add data16 clc stc mov cmp movsl cmpb cmp or inc cwtl sub mov or mov loopne out xchg (bad) (bad) out adc or inc sbb enter mov pop or in test pop add and cmpb sbb mov int3 push adc jns adc test fsubs dec and cs clc (bad) and dec mov test adc (bad) mov mov or inc enter popf sub dec xchg push mov stos (bad) jno clc decl scas push cltd or lahf and jb fucomp or or movd lahf push or sbb scas fsubs insb or and (bad) (bad) (bad) aas jle or xchg jg pop lahf dec sbb pop inc push dec movsb gs scas cmp xchg (bad) (bad) jmp mov mov sbb loop fs xor cwtl jo iret das push jl pushl std repz cmpsl inc mov push add sub pop xchg mov lds mov sti xchg cmp (bad) movsl (bad) mov mov add pop repz mov cmp outsl add push fnstenv decl jle sub push xor div push stos push inc pushw (bad) (bad) (bad) jg and rclb ficomp jmp sbb out and (bad) (bad) jmp (bad) dec xlat lahf add jmp push fisttp or enter adc jmp (bad) (bad) clc cmp jmp inc pusha mov cmp cltd loopne mov cli xchg aas (bad) cli or hlt fwait dec call jl add loope ret nop push sbb (bad) pop sbb mov (bad) ja pop or inc mov flds decl jmp imul (bad) imul jno repnz (bad) (bad) (bad) (bad) jp insl (bad) aaa jle dec xor ret cmpsl test and inc (bad) dec xlat cltd scas enter jbe (bad) (bad) jmp mov push cmp movd mov iret test jge repz mov scas (bad) into jle daa or test fnop jg jne fwait mov lock (bad) incl js (bad) leave loop xchg cmpsl movsb ja mov xlat xchg hlt cmp ret xchg xchg es sub mov mull scas pop cld add (bad) incl lea and mov enter outsb dec and repz (bad) jg jb pop mov in cmp scas xor sti insb mov mov (bad) jmp ljmp gs clc inc int3 sbb jp mov incl pop in (bad) jg mov mov push iret leave stos jp mul aas in ljmp jae je (bad) (bad) (bad) incl popf (bad) mov pusha (bad) and jl aam mov jnp mov hlt stc pushf (bad) (bad) mov scas data16 xor sbb sub push jecxz pop ret insb and (bad) (bad) jg fs push fstl dec lret call inc mov mov imul sub nop cwtl shll aam xor ds push jae push insl cmc es (bad) (bad) (bad) (bad) (bad) (bad) int (bad) dec jbe sti xor sbb out punpckldq sub insb rorb (bad) (bad) incl leave jbe adc arpl mov hlt jl ficompl mov popf movsb mov movsb mov mov pop xchg cmc cmc push test jne mov (bad) decl or test sahf jnp jl sbb dec mov (bad) (bad) (bad) (bad) push sti pop pushf dec in xchg xchg xchg ret mov popa stos inc xchg or xchg (bad) (bad) incl push out or xchg inc insb pop add mov lcall (bad) fild clc cmpsl pop pop in mov loop,pn xor fild mov fndisi(8087 sub mov add jo orl lock (bad) decl mov cmp icebp mov (bad) (bad) (bad) ljmp insb (bad) cmp dec out (bad) push cs jnp add (bad) out push loop mov (bad) (bad) decl (bad) (bad) mov std dec (bad) lret outsl jle aad dec inc cld ds pop cli mov pop pop icebp lcall xor mov cmp xlat or cmp push lds int test (bad) (bad) ljmp jmp cli or in cmp in aas mov shrl (bad) (bad) (bad) lcall mov add ror out (bad) or imul lods aas (bad) out clc ficom mov aad gs aaa mov lahf adc int or cmp js mov mov add inc mov call lret (bad) (bad) (bad) jg clc xchg dec test std xchg sti jae scas xor adc adc mov cmp lods dec int3 cmp hlt outsl (bad) xchg outsl sub fcoml ljmp mov cmp pop dec sbb xchg push scas repnz sbb sbb cmp loop cld (bad) (bad) inc ret pop mov fs sbb ds pop js mov popa pop adc and lcall ret sbb pop inc sbb cmc sti out ja shlb (bad) mov pop xchg aam jns leave fdivr xor ret clc mov pop push fistp mov (bad) mov and ss pusha rorb rorl mov (bad) ljmp aam sbb fdivrs scas cmpsb test mov mov push lret sub (bad) jg (bad) mov cmp jmp jnp jne xchg xchg (bad) sahf and jno dec (bad) mov nop into loopne mov push xor ja mov shrb cmp std fistl lahf dec xchg cmp repnz xchg in jmp rol jbe push mov push jl leave add push jno adc (bad) (bad) (bad) mov std outsb pop fbld jne in inc (bad) cmp jge mov dec cli mov cmp mov sar mov jns push (bad) pushl mov cmp adc in or fcoml lock xor cmp loopne pusha cli adc (bad) (bad) (bad) mov (bad) cmc loop push leave sti xor testl jo pushf mov insb imul pop loopne cs and lods inc movsb fisub cmp out sarl bound ljmp mov mov pop js lahf dec cs decl or frstor adc scas mov inc shrb in das jmp in cli (bad) (bad) (bad) sti mov cli xor sar mov and lods loopne (bad) (bad) (bad) incl arpl test dec xor lret and aaa or adc gs cmpsb cmp fcompl push cld incl shrb lahf inc or hlt movsl iret aas loope push int mov into lock (bad) mov leave sub pop jg les (bad) fisubrl (bad) decl cmpl xor clc scas test lea repz loop in dec mov (bad) mov sub in push xchg xor and (bad) push mov ficompl (bad) test ja in loope outsl lds jg push fnop (bad) (bad) (bad) push lock xchg xchg or mov push mov int (bad) repz jo popa subl xchg mov int scas outsl rorb rcl mov sbb (bad) (bad) aas fisubl aam mov fisubl je (bad) out lfs decl lock push pop sub cmp flds adc lret das (bad) xor mov jecxz aam test das fcomi (bad) jo (bad) (bad) (bad) call mov ljmp sbb jl scas xor inc xchg arpl cli insb (bad) (bad) (bad) decl push mov test loopne iret in lcall lock fwait hlt je gs (bad) (bad) incl jle sbb cmpsl dec push jo data16 jg je loope jae adc inc adc jmp fdivs pop into lods arpl mov (bad) (bad) (bad) out push pusha popa imul push push fbstp stos in imul negl (bad) call ss insl in jbe mov ss pop sub lods fdivs lcall lcall mov popa mov fdivr insl shll push jp dec subl (bad) (bad) push cmp xlat mov (bad) fldt bound in roll clc call and xor pop outsl js jmp iret pop xchg mov push sbbb in lcall out push test fiaddl (bad) or out adc adc xlat lock call pop or cmpsb sub jo loopne lods adc add les call cld mov cmc ljmp jo cmpsl inc mov jecxz push (bad) jg (bad) call push mov add aam push stc loopne (bad) mov (bad) (bad) (bad) mov imul jp jecxz dec push xlat sbb mov fsubr mov ficompl out xor sub fcmove push divb out mov dec push ds lcall adc jne fcom ljmp aad fadd add divb leave popf scas dec int add leave jne jp add add nop mov decb fisubrl xchg xchg cmp enter dec or cwtl dec es inc jle xor push or mov je fistpll jge mov xor (bad) (bad) dec pusha std or jae test (bad) hlt (bad) (bad) (bad) in dec xor mov (bad) pop jl mov ljmp stc faddl (bad) stos (bad) lcall movsb outsl lods mov stos mov cmp (bad) ljmp jg enter sub cld out and cld fcoms ret roll mov iret mov rorl in mov fistpl popa inc shr getsec stos xchg sbb inc (bad) mov imul out out pop mov mov clc (bad) mov adc repnz fstpt mov (bad) mov out test mov incl orl pop add iret sub pop (bad) (bad) (bad) incl addl lahf into scas sbb faddl or adc push inc xor idivl mov fsubs add int3 jo cmp lea stc int3 push add (bad) (bad) call orl leave sub mov or and in adc fldl jnp and sti (bad) out imul sub lods cmp or adc (bad) std (bad) (bad) jmp or and loop cmp sub (bad) testl cmp jae adc pushf mov aas or or outsl mov (bad) jg or push push (bad) sbb adc and sub (bad) mov (bad) (bad) ljmp pop xor and adc mov push ss nop pop adc (bad) mov push (bad) (bad) cmp dec mov mov push sub inc xchg daa mov add jmp pop clc ljmp cmp sti fistpll decl stos int3 popf jo fsts sub mov decb mov add mov mov lds and (bad) imul out adc cmp stc mov jge (bad) movl (bad) (bad) (bad) jmp data16 into sbb pop loop aaa dec push pop xchg fild lods fsubp pop frstor jnp in (bad) (bad) (bad) jmp (bad) out aas pop mov cmp test mov jns mov lahf sbb dec push jl iret cmp mov (bad) fisubr ljmp jne je mov cld mov jbe sbb (bad) (bad) data16 push (bad) hlt jle mov test movsb scas ja int pop jae and fstp imull out (bad) ljmp mov mov cs lods sub in scas scas mov cmp (bad) (bad) (bad) decl gs (bad) jl sub add andb xchg mov outsb xor (bad) (bad) ljmp mov xor xor data16 imul in adc scas je,pt push (bad) mov xor mov (bad) (bad) lcall inc (bad) lds sub sbb sub push or ss (bad) (bad) ljmp scas fmuls mov bound loopne jb mov pop cmp mov or (bad) (bad) (bad) incl fwait aas ja sbb xstore-rng cmpsl add imul in and pop insb mov (bad) (bad) call out sbb mov cltd ss shrl sbb jne ret jge cmp lods enter (bad) decl lea loope sbb call xor out mov push cmc cmp push and dec xchg lret ja insb jne cwtl adc cwtl dec test out pop fistl inc mov jne jg (bad) (bad) (bad) push push out xchg lea ja jl repz insb fist mov lods push (bad) (bad) (bad) jmp stos lea xor in or jno pop popf pop dec stos cmp imul (bad) (bad) cmp push repz jle mov mov leave call in mov pop sub je pop hlt incl fwait mov cwtl iret ds nop lods cmp rol mov (bad) (bad) call dec lret sub mov fdivr or out xchg call js pop loope (bad) pushl push jp in push mov testl push pop gs jo (bad) (bad) mov fdivrs add push pop jg ljmp leave cs xchg push (bad) (bad) dec mov jae mov into outsl pop pop movsb cwtl dec fcomip imul daa lahf cld (bad) outsb pop (bad) ljmp lcall xchg (bad) outsb sub scas or jbe mov leave aad mov jne (bad) decl xor xchg sbb (bad) xor lcall push mov xchg (bad) (bad) (bad) (bad) mov lahf xor cld packssdw xchg fimul les arpl (bad) ja icebp pop adc insl cmc outsb cmpsl popf push lods inc push mov movsb icebp cmc pushf data16 lods mov insb int pop or (bad) (bad) (bad) cli add mov repz cmp ror push sbb pop dec sbb sti fwait test out (bad) (bad) (bad) pushl ret xchg ficoml fisub dec cmp sub lods sahf les daa fwait mov jecxz fcomip (bad) dec out mov mov ss cmp add or mov sti pop jg mov and xlat pop in jns test mov xchg xchg dec jecxz xor (bad) clc call pop in pop int mov xchg adc mov cmp xchg dec add adc dec daa lea (bad) mov cwtl fwait xchg lahf out xchg push int3 sbb sub jg mov cld inc mov xor mov pushl ljmp xchg mov cmpsl push scas or outsb mov inc out xchg call jge ja xchg jae xor xchg mov clc or xchg std ds inc sbb mov sti loop lret lcall push mov sti mov cs mov mull xchg in mov inc push clc (bad) fbstp std xor jb notl (bad) mov xchg mov jmp (bad) mov clc xchg das lods pop push mov fsub push inc clc xchg xchg stos (bad) lock mov shlb pop xchg cld adc aaa pop adc (bad) (bad) mov je (bad) xchg xor lods pop inc sbb out jb stc imul ljmp mov gs fldenv lcall outsl xchg jnp imul ficomp ja repz test mov jge out xchg jmp jecxz inc out addr16 cmpsb sbb push push pusha dec sbb inc or xor mov jne sub inc xor jno rorl cld (bad) (bad) aas cmc and shl imul into lock into jp (bad) (bad) decl pop xchg pop fstpl movsb icebp insl stos jg fld mov jbe iret (bad) add (bad) mov pop push mov fdecstp int imul jne loopne popf ljmp jmp imul enter push lods lcall mov mov std aaa cld (bad) call jecxz imul push cli movsb xchg dec sbb xchg lock out loop std call mov pop psubsw sub in push jno es inc jno scas (bad) decl data16 in jl xchg inc int data16 into stos test insl ljmp ljmp mov inc popf dec int3 fdivs cmpsl enter lods ss cltd fwait cltd (bad) (bad) jmp dec dec sbb fidivl (bad) adc mov data16 (bad) (bad) (bad) xchg popa pop push mov call (bad) (bad) mov mov ss jmp xchg in (bad) dec lahf cmpsb scas dec xor or (bad) (bad) (bad) (bad) jmp xor push aad fnstsw aas in push or inc shrl push and out lcall outsb fwait jae push fnstsw idiv imul mov out adc cwtl ss dec xchg mov push stos and jg mov cmp pop out out mov shll aam jbe out std enter mov inc ja pop daa mov cltd xchg mov aad sbb inc fsubrl movsl (bad) (bad) call xchg jmp into out pop loope jmp add jg adc xor sbb cmpsb add or (bad) cli jecxz addr16 dec mov sbb adc into hlt aaa popa lcall (bad) fisttp add sbb rcrb std (bad) (bad) jle je psrlw cltd inc pop add lea and mov arpl xor (bad) (bad) jg xor pushl cwtl inc or mov test mov (bad) fcompl (bad) (bad) (bad) cli mov xchg test jb cmpb xchg rclb leave inc adc mov ret and adc aas lock (bad) jg sub push mov outsl jmp pop rcrb addr16 mov repnz gs add dec adc add or (bad) (bad) decl and mov pusha out add movsb add in jnp loopne and pop (bad) (bad) (bad) fistp and (bad) roll mov jo dec sbb or out mov and cmpsb subl repz mov insb xchg push inc or sar add mov (bad) xor pop xlat arpl cwtl rcrl pushl jg jecxz jns dec sbb adc fucom cmp and jge jo jbe int3 inc mov lock fwait sti cmp and or dec xor cld roll nop andl (bad) mov (bad) and mov mov pop int3 add mov add mov inc sti (bad) (bad) (bad) jmp push out xlat test ljmp rcll jp fdivrs jl dec sarl xor cmp (bad) ljmp imul loop test rclb stc outsl add inc pop cwtl fcomip (bad) sti xor cwtl std xor sub cltd sub xchg es and in fwait (bad) call adc (bad) (bad) ja mov mov insb (bad) (bad) (bad) pushl in xor icebp stos jnp push and mov sbb addl pop cmpsb or pushl cld add loopne and call into inc lea repnz mov (bad) (bad) incl cmp (bad) sbb push out push ja nopl mov mov outsl (bad) pushl inc movsl mov test fsubs or fwait int (bad) (bad) jmp inc rorb push add in jge lret xchg cmpsb sbb (bad) (bad) (bad) jge jg shlw dec sub sahf cmpsb sub fldl lahf pop xchg or (bad) (bad) (bad) (bad) mov jecxz sbb lds mov sub mov loope pop inc aad lds fdivr (bad) (bad) decl pop dec sub lret sub js dec push inc stc push and sub vandpd idiv pushl adc fdivrl or inc push sarb dec xor (bad) (bad) (bad) (bad) jmp push fcompl mov sub jle or cwtl mov jl cs add (bad) ret adc (bad) (bad) (bad) decl test int push in in call add push adc data16 mov (bad) call rcrb inc shlb loope insl sbb outsb iret or (bad) jns add jmp inc push test add xchg cmp and mov and push push mov in ret jg mov xchg inc ljmp stos insl xor faddl (bad) rolb in shrb hlt (bad) (bad) mov shrb (bad) (bad) (bad) pushl or cli arpl adc int add add sub (bad) lcall push std jmp cmpb dec mov mov adc (bad) pushl jp pop and xor push or mov xchg sti cli (bad) adc sub scas clc cli addr16 inc add xor shrl push mov adc (bad) lcall or adc push jb das in aad push js lods gs xchg std cmp aam (bad) out fcomps enter sbb stos das scas sbbl xchg sub (bad) (bad) jg sub repnz les sarl popa xor xchg cmp xchg sbb (bad) lcall sub mov lods add sbb scas out inc stos nop adc sub and jg ja (bad) fiaddl (bad) (bad) out inc sub stos sbb repnz insl jnp call lcall or inc xor mov test xor cmp sbb (bad) (bad) fistpll lret std sbb (bad) mov fldenv scas ror movsb inc jge mov (bad) fsubr psubd cld mov pop pop (bad) outsl cmpsb sbbb loopne push stos call sub and call loopne cmp std adc es jl inc sub mov outsl mov pop pop cli (bad) ljmp out cmpsl push push pop sahf repnz mov cmp jmp sub mov mov xor add mov outsb jno (bad) (bad) (bad) (bad) ffreep xchg ds inc mov rorb xor inc add add push sti dec adc add call pop mov rclb push pushf pop fldcw (bad) mov pop in data16 ss mov mov sbb jecxz in push sbb ficompl mov lcall xor push sahf sub push push loopne adc rolb and sbb (bad) icebp (bad) (bad) jmp in cmp fsubrs lret (bad) mov mov (bad) jg pop add (bad) mov loopne push lock mov scas rorb sub jne push je (bad) (bad) pushl insl jle aad jge mov movsb inc lea mov jbe aas test xchg mov push stos mov jbe sub sub das mov push ljmp cli mov ljmp loopne push test or mov fs xchg adc (bad) jl,pt xchg cmp pushl out and shll int3 push int3 (bad) xchg and in in aam lahf sub popf sub (bad) dec rolb jecxz adc jg aam insb pushf or (bad) xor push andl sub shrb (bad) (bad) (bad) jle ja push insl fwait xchg int inc int rolb and sub sub and or xor pop cwtl rcl lods and cmp rclb sub cmp ljmp mov popf add test pop (bad) int xor (bad) jge xchg xchg and mov pop mov fcomip jmp shrl sbb dec sbb push sub iret inc mov mov jne dec ret (bad) (bad) (bad) decl mov mov repz call push jnp pop int3 ss fmuls sbb les push pop movsl xlat or or cmp jae (bad) xorb push ret xchg ret sbb lcall xchg jne xchg rcr or xchg add jle leave pop fwait mov add xchg mov (bad) xchg nop cmp scas sub int3 jno sub mov jbe cs test xor (bad) jmp leave bound imul cmp int xor xor incl test mov clc mov (bad) mov decb lods jnp jle and sbb fwait add mov std push rcll ds aas adc mov or aam (bad) xor dec lret jl aad les sbb (bad) mov xlat mov enter add adc aam dec cli (bad) (bad) inc mov cmpsb lock cwtl jp sbb sub jns movsb sbb push (bad) (bad) ljmp push (bad) popa pop jno xchg out mov pop dec loop cmp rolb pop mov cmp sar ljmp add scas lahf (bad) xor in mov sar (bad) pushl loope loop sub xlat mov iret xor pop outsl movsb insb pop xor cmp xlat (bad) pushl out cmp xor insl enter enter or mov dec sub int popf push sarb cmp pusha and mov dec imul jmp fdivrs aad mov lcall xor lcall sub dec mov push adc jb sbb ss rolb (bad) pushl mov dec rcrl xchg cmp mov add adc les pop mov xchg jmp (bad) int3 adc es add outsb hlt push adc fld cmpsb leave repz sbb (bad) (bad) cmp push repz pushf adc jcxz repnz andb xchg iret int3 mov inc xchg enter ds loopne cwtl xor call lods stc adc mov push mov adc cmpsb sbb iret scas scas cmpl pop add (bad) ljmp in or push in in int mov mov (bad) (bad) (bad) ljmp push scas jo popl mov stos (bad) shrb xor je inc sub inc mov xor js lock cmp mov icebp jg mov jnp inc push popf push inc xchg mov (bad) decl into or mov mov iret loop dec lret push mov adc (bad) (bad) call mov xor out jmp dec fldenv xchg gs ror je xchg (bad) ljmp jmp pop rcrb testb push fldenv cs rol test (bad) movsl int3 sbb mov adc data16 (bad) (bad) (bad) ljmp inc imul aaa dec decb add adc mov xor jae mov cmp mov sub int3 (bad) pushl mov jg jbe jae cs xor nop into xchg (bad) (bad) (bad) jmp hlt test lock dec iret ret in sti ret push stos mov js dec (bad) (bad) (bad) (bad) inc pusha rclb sub (bad) adc (bad) notl xor scas pushf push inc (bad) mov push (bad) test (bad) mov mov xchg or or mov adc decl xchg push inc mov inc cmp sub ss fsubr mov (bad) (bad) (bad) (bad) mov (bad) xor sub jns mov stc xchg jb adc (bad) mov nop fucom jp jbe scas xchg sub xchg sub test out sub xor int jns in mov (bad) (bad) ljmp mov sahf imul pop repz mov jb dec jle and or (bad) push popf and mov cmp insl jo sbb cltd and cmp (bad) call inc mov sbb pop inc push call movsl loop and test xor sbb mov sbb lcall xchg xchg nop aam xchg nop fs pop dec or add xchg cs or (bad) (bad) jmp cmp mov aam aas mull (bad) mov inc lea cli mov or roll or push inc sti sbb inc xchg cmpsl aaa push scas dec push sbb (bad) xlat ljmp xchg adc arpl iret imul enter fdivr (bad) (bad) jg call mov pop push inc scas xor rcrb cs nop stc push popa pop std call loopne or cld xchg stos cwtl outsb pop mov or push cmp push icebp jg and or xchg sub sub je ja outsl lcall sbb lea dec repnz mov inc ret pop gs mov out pop pushf push setne (bad) jle lds (bad) mov or mov push (bad) (bad) (bad) fild jo nop inc inc add scas in add xor fdivrl sub pop repnz dec sub (bad) (bad) pushl enter mov adc xchg aaa push fidivr shrl mov (bad) ljmp add jecxz dec pop pop cmp pop hlt icebp lock mov (bad) (bad) decl loope test das mov inc mov xchg or push fwait jb int xor push outsl clc xchg in jnp (bad) movsl push sahf and ja pusha stc add enter (bad) (bad) pushl jo inc hlt jge fdivl popa mov push (bad) mov (bad) outsl adc cld xchg movsb mov lret movsl test lods xor js out into pushl pop rorb lods insb fcoml daa push mov call mov pop xchg fs mov mov int3 sbb jb int3 (bad) (bad) (bad) mov push outsl lock jbe sarb mov outsb pusha lret jge and pop addr16 cmp fldcw loopne inc xchg jl fbstp mov mov mov lcall imul push cmp and dec pop jmp adc dec jbe pushf push add clc lcall dec jmp mov xchg in mov cld xor mov mov (bad) (bad) (bad) incl (bad) enter jge fmull adc cmp cmpsl lods xchg out jmp mov sbb out cmp pop lret ret and cltd cltd adc push mov (bad) jg pushl pushf xchg inc or js lods js sbb ja lock stc (bad) loop and jb (bad) daa out ret outsb cmp xor mov xor ficomp (bad) incl es out dec pop xor dec xchg push je jmp cmpsl out fdivl inc fs (bad) (bad) lcall rcll es popa jno mov push lahf daa mov inc and mov sar lea in inc mov jbe aas cmp fwait (bad) (bad) (bad) jmp mov in jns jmp shrl gs scas loopne popf xchg ss dec (bad) cmc (bad) (bad) (bad) push movsb inc pop insl fildl aaa imul dec lahf test mov cmp or push jns sahf (bad) (bad) (bad) jmp mov push fadds pop ja pop aad insl in inc lock cmc ror jp mov insb popa pop pop (bad) (bad) (bad) lcall or xchg xchg jmp xchg (bad) ja inc dec xchg push jb mov xchg pop sbbb test or dec bound cli decl xchg lcall (bad) (bad) jg pop push out clc cmc sub in dec inc mov arpl daa fwait cmp mov mov (bad) push mov inc test pop out (bad) (bad) jo sbb rcrl dec (bad) push sbb rcrl add ljmp mov dec lock (bad) call mov jb clc movsb push neg push pop subb and cmc call cmp (bad) or jg add scas xor push adc lcall pop jns jne mov popf (bad) cmp push clc das and adc outsb cwtl sbb scas sub ficomp jno xlat jmp (bad) mov leave and push xchg lret and and paddsw xchg fldenv xchg out lea es les mov (bad) jmp mov ret xor mov test gs mov inc movb lcall push adc cmp lds stc and popa adc adc int push inc int3 daa (bad) jg jmp inc push stc js adc test and and cmp jl (bad) (bad) pushl (bad) cmpsl hlt mov test sbb test ret mov jecxz xor (bad) (bad) jmp mov jbe ljmp and sbb mov pushf xor jle les ss inc ja aam jmp (bad) jge sub pop or inc pop (bad) jl and int3 (bad) ljmp clc enter lock xchg shrb (bad) cmpsl jnp jecxz xor repz incl push pop mov fisub aas sbb dec stos int3 movsb cmpb xchg mov pop dec gs (bad) call sub push xchg push lea mov xor jo clc inc (bad) (bad) (bad) pushl inc repz leave popa jb or gs roll mov icebp and aad xor xchg ljmp test mov and (bad) sub decl mov mov es aas jb dec dec (bad) test xchg (bad) ljmp (bad) aam daa pop imul xlat ljmp (bad) (bad) (bad) ljmp dec hlt das pop pop push lcall push icebp addr16 sub xlat std sbb push push xor add pushl int (bad) mov scas adc xor (bad) (bad) pushl push cmp loop mov in je mov jno les jo (bad) (bad) call ss mov popa and inc fidivl xor das mov push xor add adc (bad) fbstp jne stos ljmp test push push lds inc sar outsl inc cmc fstl mov jmp lea pop dec (bad) stos push rclb (bad) (bad) mov cmpsl sbb (bad) mov sub imulb xchg lods (bad) (bad) jg mov pop movsl in mov adc fs aad aam (bad) (bad) lcall scas jne lods sbb imul mov popa dec in push sub jnp sub (bad) xchg (bad) pop mov jno mov xor xchg (bad) out (bad) (bad) push mov dec mov imul ja ds sbb jmp arpl (bad) (bad) call out inc cli lds test mov lcall (bad) fcmovnbe in pushl mov xchg rcrb (bad) outsb sbb jg pop ficompl mov pop inc pusha insb cmp and add and push or mov test lret loopne (bad) (bad) (bad) ljmp jecxz inc xorps jp rorl adc popa sbb inc mov and sti jle xchg and pop and pushf xor stos je and jne xchg jge insl aam std (bad) (bad) incl stos (bad) rorb seta mov xlat loopne sbb mov push and fwait neg mov push xchg (bad) mov js rcll rolb fcomps mov iret call (bad) (bad) incl in cmp sub xor (bad) es pop daa cld das or sub (bad) (bad) jmp mov shl xchg jo stos sbb outsl sub inc gs xchg sub movsl in out jae adc lahf mov jle fisubrl test repnz pop ret dec adcl (bad) pushl xor (bad) adc (bad) jl fwait adc clc xchg repnz add sub ljmp incb mov aam pop push xor push adc arpl icebp adc jmp cli jg lcall mov pop je sbb (bad) jmp fild adc sti add fdivrs fist in movsb (bad) (bad) inc fisttp sub or jbe inc dec xchg adc aaa mov mov (bad) ljmp push movsl add sbb xor sub mov jno cmp ret call mov dec sbb inc cmovae sbb mov xchg pop call fisttp test gs adc mov imul (bad) (bad) (bad) call test (bad) lock jne pcmpgtd or mov fcomip (bad) aas mov hlt test enter clc inc cmp adc hlt (bad) popf test loop fcomip pushl or push and xchg push loop out inc out mul ds std pop das loope (bad) (bad) (bad) jle movsb fild sub cmp cld insl mov lret xchg jmp mov addr16 adcl cld int sbb sbb sbb js sbb push addr16 fcmovnbe pop mov inc ja sub add mov add test sub nop pop scas or (bad) inc lea sbb fistpl mov add mov add (bad) decl pop jo fdivl (bad) pop jo mov dec push dec add jg pushf cmp pushf insb into adc dec clc lods aas or (bad) aas pop jns push xlat mov int mov enter pop or sahf sbb mov mov pop pusha lock clc and xchg lea icebp mov call mov scas popa or jecxz mov sahf sbb jle in mov pop lods sbb jb enter mov inc dec es pop cltd jmp dec sub mov (bad) jg pop jle mov pop repz (bad) sub icebp iret bound pop idivb (bad) (bad) (bad) dec xchg lea hlt sbb xor pusha push ret sub or pop xorb (bad) lock push rorl cli mov pop inc (bad) (bad) (bad) call mov sub cmpsb fucom lcall xlat xor adc ja (bad) call add jecxz stc cmc sub out mov sub lock jmp gs pop (bad) jle enter mov jo ds pop clc pop or adc jp push pusha xor std scas or mov mull jb inc arpl imul in push (bad) (bad) (bad) lcall les loop loope pop and repz xor adc fnstenv in lahf scas aas adc (bad) decl jmp lea push aad pop in loopne int3 mov sub scas (bad) (bad) jg sub lods seto lcall sub enter (bad) decl adc jecxz in bound cmpsl leave sub sarl sar (bad) lcall lods mov cmp add mov fisttp xchg xor movsl or jae cld (bad) jmp aaa jp jns,pn es mov repnz dec prefetcht0 loope (bad) mov test fild mov sarb cmp clc jle out add adc into testl cli (bad) (bad) cmp push cmp adc cmp cmp add inc sbb out (bad) mov ljmp xor inc dec mov loopne push js cmpsl and movsl aad scas or fidivl xchg rorl cmp lock dec cmp jb cli mov aam xor (bad) (bad) lcall test inc jbe pop arpl scas mov stos xchg cmpsl xlat and mov icebp push (bad) (bad) (bad) (bad) ds inc xor mov scas push mov pop mov sar xchg jnp (bad) (bad) pushl into frstor faddl add jge (bad) dec in lahf jl fcmovbe incl cli pop scas sbb mov cmp call (bad) pop mov mov scas movsb iret imul je add jae mov mov cmc (bad) lcall add adc mov and or (bad) (bad) (bad) mov add rclb (bad) icebp jo or cmpl dec (bad) (bad) (bad) lcall sbb shrl (bad) (bad) add aam jmp std aas je lret jmp and sbb push aad mov push mov inc lahf jnp fwait push call inc jne jge add sub and cmp sbb xor gs (bad) (bad) (bad) dec aaa sti cltd cltd fs sti jecxz add aas and or sahf jmp popa movsl push (bad) (bad) (bad) mov jmp mov rorb jl jnp mov cld sbb (bad) (bad) (bad) incl pop test mov mov clc ja in sbb leave (bad) cmp out shr jl jecxz (bad) (bad) pushl mov mov jcxz xchg lods scas mov pop xor rorb cmp jge fmull pop xchg jb call xchg cmp jg add or lods adc sti sub mov test pushf add (bad) mov scas call dec mov lds aaa adcl enter (bad) fistl aam pushf ret push fmuls pop dec or pushl cld imul sbb std or mov lret xlat loope mov cli decl aad fcomi addr16 (bad) jns addr16 jb add (bad) jg inc les jle ljmp dec lret cltd repz or cmc in jg pop jle mov idivl rcr inc mov stc (bad) (bad) (bad) call pop leave cmpl je xor jbe insb mov lcall rcrb (bad) mov mov inc add test fimul xchg cltd adc fcomip call jno hlt (bad) (bad) lcall clc pop jle xor pop sti fisubr icebp aas dec (bad) idivl sub fisttp cld pop xchg cwtl insb lret scas adc fdivrl pushf fidivr jns shll cmc sbb clc (bad) push sahf lahf sbb (bad) (bad) (bad) inc mov mov (bad) ljmp rcrl mov fs idiv (bad) (bad) jg movsb jg inc (bad) cmc outsl (bad) jnp jns cmpsb sbb xchg (bad) adc loop lcall (bad) (bad) fcmovb sub sub (bad) shll xchg sub out inc jmp cmp in pushl lock fsubrp (bad) ret push jmp mov and pop lret iret mov in sub xchg cwtl stc sbb sar cli stos fbstp adcl jge movsb out pop dec out (bad) (bad) (bad) call (bad) scas (bad) cli movb push enter ss push xchg inc lods inc mov lock pop (bad) ret and iret call idivb xchg (bad) (bad) pushl dec mov out sub daa leave std popf (bad) lock mov fnstsw mov frstor ljmp add je fisubrl rcrb fs mov inc sahf lods dec insb out (bad) (bad) (bad) call mov outsl mov mov push pop dec jne imul mov (bad) (bad) jg frstor test pop scas xchg arpl push mov in xchg in notl (bad) ljmp rcrb lods jmp (bad) mov push dec adc xor scas cli (bad) inc cmp mov imul cmc mov outsl popf mov jle dec ljmp out sti mov push imul xlat mov int3 push stc lret sbb xchg (bad) data16 stos in xchg (bad) in scas (bad) jge in std gs sub (bad) lcall sub (bad) sti xor dec mov mov (bad) xor mov (bad) (bad) jle lds mov (bad) ds cltd sbb shl mov push dec push and (bad) pushl outsl (bad) call stos scas repz inc test lock sbb jns mov or (bad) (bad) incl jo mov inc fisubr and cs ss aam jg into adc jp hlt (bad) jg push das push pop inc mov push insb mov imul jecxz (bad) fist call in lcall scas adc push pop (bad) (bad) (bad) mov int3 mov lret aad dec mov xchg aad stc fiadd add jg (bad) lcall and repnz mov mov mov cmp (bad) and mov (bad) jp data16 cmp mov das jge or ja into jo movsl fwait mov dec sbb cmpsb (bad) (bad) (bad) decl xor clc mov out push mov xor stc outsl cli pop cmpsl (bad) (bad) (bad) mov inc call or fwait shrl ja xor data16 mov (bad) lcall les sbbb mov adc xchg cmpb adc iret test mov stc lcall mov cmp xlat (bad) pop (bad) pop sub cmp addr16 into stc mov clc (bad) (bad) (bad) ljmp (bad) xchg and movzwl popa jae jge test insb testb push push mov (bad) decl sbb pop mov fsubrs jl xchg cbtw sahf mov sbb (bad) fdivr mov aaa test cli dec ja inc in sub push jg ret mov call or shrb mov xor aad push in (bad) outsl sti incl cld ret push xchg loope sahf or movsb push xlat jns mov ret sbb lock add lret fcmovnbe lock jnp jmp jg pop imul shlb mov fwait cmp mov fistpll xlat aam (bad) (bad) ljmp test imul lock cmp (bad) sbb cld cmp (bad) jg lcall in adc xchg mov lods loope aad ja (bad) call loopne cli add fwait jge popa inc adc scas xor (bad) out mov fcomip pop fstpt (bad) xor sub jbe clc scas clc mov bound lds mov ljmp (bad) (bad) fldt mov outsl pushf (bad) fldt insb jne push push mov mov mov pushl outsl mov fildll in and mov mov add lcall cld add rcrb mov adc ds xor mov (bad) (bad) (bad) jnp xchg outsb xlat jl aaa (bad) mov (bad) ss fisubrl dec loopne aaa xchg lahf rorb incl cmp inc stc movsb push shrl lods nop mov sbb lret xchg push insb mov repnz ret mov (bad) add or call or (bad) jg test mov adc xlat sub rorb adc (bad) sti push (bad) jg add hlt pop in mov ja stos inc aas ds movsb (bad) push mov stos leave call mov aas push in insb push xlat jbe push popa ret aaa mov add adc shrb sarl push lods dec aaa pop stos aas les push (bad) movsb (bad) (bad) (bad) cmp pop std and arpl xchg clc (bad) pop or (bad) arpl test cmpsl jmp arpl mov nop push sbb mov inc add adcl xor (bad) (bad) (bad) jmp dec push adc adc push and lcall (bad) (bad) (bad) (bad) mov int3 or loope xchg xor dec lcall mov ret (bad) jmp xchg sarl sbb push lcall out fs bound jg lock (bad) lds ffreep jnp pusha jae mov in sbb fcmove mov stos inc adc jb loope mov mov (bad) (bad) incl std xchg sub pushf xchg iret mov mov inc setbe or cld mov scas (bad) (bad) (bad) (bad) mov (bad) mov sbb jmp mov ret xorl leave mov inc cli push das std aaa aas push jmp movsb jg (bad) ja pop xchg cmp icebp stc fdivrp add and stos xchg data16 (bad) fisubl enter pop pop adc hlt jg push hlt pop jl mov je dec (bad) ljmp jg (bad) fsubr inc fimul mov scas pop jbe jle (bad) lret pop and fcomps xchg in std lock sub enter or mov adc mov stos sub push push adc dec mov push adc cmpsb adc or mov idiv dec ror or and fmuls scas lcall sti fidiv adc repz pop fxch test mov add mov xor pop pusha mov and (bad) (bad) jmp clc fsub sbb (bad) cltd mov xchg jmp jno push mov mov outsl (bad) jg sub mov pop add inc pop shrl (bad) (bad) pushl pop fnstcw cmp jo mov mov adc sarl pop in push (bad) fild fldt lcall sarl sarl or idiv (bad) (bad) jmp jmp add (bad) jbe fbld repz movsb std pop mov mov cmpsl xlat dec mov add insb gs pop or (bad) ljmp das in lcall inc sub mov (bad) (bad) (bad) pushl and lret test mov lock mov push outsb loopne (bad) (bad) (bad) ljmp mov cmpsl loopne pop xor dec dec lret sti out adc mov pushf mov xlat leave lods (bad) (bad) decl cmpsb repnz das mov add adc adc (bad) push (bad) (bad) (bad) ljmp fs mov jns out inc roll aad cltd jmp adcl pusha popa and (bad) decl xchg lahf sbb mov test push push push (bad) (bad) (bad) dec sbb std sub stos daa out stos xor movsl divb nopl aas sub or ljmp lcall stos out (bad) pop and cltd sbb sti insb and push lret shr fistl (bad) mov push sets (bad) (bad) jmp je rorb fld pop push dec imul mov popa jns cli sbb jmp stc cli lods loope cmpsb pop fnop rcr stos (bad) xchg (bad) push and int and push int push sbb loope (bad) (bad) incl insl aad or cwtl adc scas xor jmp xlat cmp (bad) (bad) call sub insb outsl movsb js jno gs mov (bad) dec mov xchg sbb (bad) mov (bad) (bad) (bad) lcall lret push ljmp dec mov iret mov sub ret fcoms (bad) (bad) (bad) jmp mov or mov xchg cs add in lea cwtl pushf aaa insb ds outsb adc xchg cmp inc mov mov pop sarb inc xchg xchg push mov imul dec jb cmp fs scas and add cltd inc mov mov ljmp inc lret out in push cmp or fimul mov push js (bad) (bad) jmp ret popa fidivl mov mov sbb ja insb dec testb ljmp repz divl jnp setne sahf les mov xchg inc sbb (bad) (bad) lcall aad inc icebp ffree mov xchg jae xlat push dec mov clc (bad) mov out nop orl jle (bad) decl dec ss push mov jle add cmpsl arpl iret mov lret test lock jge cmpsb cmpsl outsb test and (bad) fsts cld icebp daa push xchg in mov insb out jge inc (bad) sbb sahf fdivrs mov lcall fs (bad) jo repnz stc hlt sti add (bad) (bad) mov pop out cmp aaa cmp mov rolw pop out adc outsl xchg dec lcall jmp out iret pop jne lods je dec cld notl inc es imul (bad) (bad) mov lahf jl mov ja push imul jnp into lahf icebp scas (bad) push mov inc add stos cmc iret sbb mov or pushf scas scas push mov mov insl pusha std push (bad) incl jecxz hlt pop mov inc scas movsb stc std les xor outsb cli outsl mov and lcall (bad) jg decl fimul arpl lahf pop pop fs and or jle add (bad) (bad) (bad) (bad) cli push cltd sahf stc loopne mov fistp cld dec and test out (bad) (bad) decl fbld int adc out push cld into pop push pop mov lret jbe outsl pop lock pop xchg jecxz sti repz int jbe adc sub or int jo push dec imul mov call ret adc repz jge mov and mov lret pop jl mov fidivl (bad) (bad) call sub outsl mov adc neg pop imul cmpsb dec les push cmp dec shrl xchg roll mov mov in addr16 imul (bad) dec fcoms sub cld jmp jle loopne pop jbe loope xor insl int shll mov repnz push sub popf jb (bad) (bad) in jmp push cltd adc and clc ljmp pop incl jle mov or (bad) decl sub jae pop aas mov sub insb lcall dec xchg cmpsb fs (bad) jmp pushf add test push cmp cmpsb jg push xor xchg xchg jne ds push lock and hlt daa add lret jg mov pop in in int3 dec dec andb sub ljmp insb std and sahf fisubl ret jl jns lock fildll shlb dec inc jmp ret dec (bad) std sbb jg lea sub xor lds stc sub shrl mov push pop push arpl (bad) (bad) (bad) (bad) pushl xor arpl cld dec dec pop adc mov in jg jb or jne xchg lret (bad) ljmp test mov rol pop dec negl pushf gs out mov sti (bad) out cltd call mov fbstp sbb je insl jnp sub and xor hlt fmulp cld sti aas dec outsb mov pushf hlt (bad) inc loope iret fldl icebp add jg xchg sbb cld jecxz mov jmp fnop wrmsr push dec mov shll out in xor adc jge test (bad) incl mov enter jg pop fisubl insb push pop lock decl xor insl stos mov push out std jg push inc jl jae (bad) in (bad) (bad) (bad) call lock cmpsl jb cmpsl andl outsl and xchg inc cmc das sbb das xchg mov or andb (bad) jecxz xchg sbb and cmp cmc (bad) in movsb mov inc or jb ficoml pop jg dec decl (bad) call mov sbb imul mov pop xchg bound (bad) ljmp rcrb xchg sbb cmc xor xchg test fdivrp js ljmp cmpsl fistpl add lret shrl cmp xor rorb lods imulb xor push jp jns mov lcall or mov iret jne push dec mov insl mov pop dec neg lock lcall fdivr pop in loop mov dec stc pop inc lock movd das test std (bad) incl cltd mov pop lea sahf sarb test jae sar pop adc ljmp mov (bad) (bad) scas and mov sub sbb dec mov test xchg and iret icebp add lcall outsb push ja popa xchg push sub and jno mov (bad) (bad) jmp mov mov push pop rolb push xchg adc add scas mov add mov mov or jmp pop mov iret test cmpsl inc (bad) lcall dec sbb orb pop pop cmc out cli push pop add and inc and add mov ficompl mov push addr16 sbb (bad) pushl or sub or and or (bad) test add lcall mov (bad) fisttp cmp or mov sbb sbb mov (bad) fimul ret cmp sub shrb pop adc (bad) sbb adc call loopne jne adc (bad) or mov inc jp cmp mov mov sar cmc icebp call sub ljmp adc sarb fcomp sbb xlat mov idivl mov clc or decl (bad) push negb jp dec call outsl in int das inc popa shlb mov sbb mov loopne icebp fstpl loope in cmpsl lcall dec pop and (bad) ret scas out sbb out adc and (bad) (bad) jg xor scas aaa and cld into mov jae es (bad) (bad) call scas mov push mov testl add sbb lahf (bad) les jb or mov outsb sbb or dec incl or divl or mov and or (bad) (bad) pushl outsl shl inc (bad) xchg (bad) or mov and ss and adc (bad) sbb push mov push jnp (bad) pushl jne (bad) repz cld dec sbb cs lds movsb dec pushf loop (bad) (bad) (bad) jmp sub xchg or xor insb popf adc pop mov and mov movsb cmp cltd or loop xchg push mov ss xchg xchg xor ret dec cmp es inc and (bad) mov push std gs jno nop ss (bad) incl add sahf mov test pop je (bad) mov (bad) mov popf cmp xchg xor sub (bad) (bad) (bad) cmp and sbb xor enter xor clc jmp push (bad) pushl sbb and (bad) (bad) (bad) mov cmp aas imul int mov dec inc mov pop add adc test (bad) (bad) call push lea push cs sbb (bad) lret cmp pop hlt xor adc sbb (bad) (bad) decl cwtl pop pop jg aam pop pop xchg into dec das sahf sahf lahf sbb aam fiaddl pop icebp call cli outsl push cli mov xor out mov test outsb sahf test je add test (bad) (bad) (bad) jmp jl dec (bad) adc fadd fdivr sbb sub imul sbb pusha (bad) lcall insb adc mov xchg pop push cmp adc add pop (bad) (bad) (bad) jmp pop mov cmp xchg sbb pushf xlat (bad) xor cs mov jmp inc pmulhuw popa cmc imul pop repz cld popa aam and (bad) (bad) (bad) fild sahf jbe sub je daa mov fdivrs inc or dec and sbb mov xchg fisubl aad dec xor test fnop sbb push ret sub dec jmp jb les in (bad) std add and push (bad) (bad) (bad) (bad) jns jmp or jae xor mov sub scas inc divl (bad) (bad) ds xor sub (bad) jmp xor inc int xor xlat call jae push xchg dec flds (bad) (bad) decl dec test jb subl fidivr (bad) nop xchg sub and jo sti and lock (bad) mov add mov les outsl adc mov mov cmpsb push (bad) out mov and xchg (bad) lret sar add popa jmp push call mov xchg notb or leave push in or inc jmp lcall adc inc add or sub daa xchg or shrb decl nop push push mov addr16 data16 xor inc in icebp (bad) (bad) incl andl jmp aad ds pop jno ljmp fsubl inc add cmpsl scas pop out adc pop mov roll call or mov cmp sub dec dec mov cmpsl dec dec jno add (bad) mov inc sbb test or out inc in inc stc add loopne (bad) (bad) fcomps mov cmp pop jns sbb ss cmc lods sub pop pop jo cmp movsb cmp mov pushl pop shrb pop pusha mov fistpll outsl int adc (bad) pushl push mov ljmp (bad) adc insl in xchg cmp mov xchg fdivs test ret or jmp cld mov pop xchg clc mov gs cmp cmpsb dec (bad) (bad) decl pop cwtl fucom cwtl lods sub lret cmpsl lret cmp inc insb dec xchg idiv lea (bad) inc fsubrs push mov sbb push gs cli (bad) ljmp aad aad sbb rcrb pop push das pop cmp clc xchg loopne (bad) (bad) (bad) out out mov test sub int3 and das and cmpsb mov (bad) ljmp lcall lret or lcall push and js sub pop hlt push pop aam xor lds loope jg (bad) (bad) jmp test bound lods popa out mov lods jecxz adc jo mov insl dec cld decl and or in sarl (bad) call bound push popa mov push je jns jns fisub je sarl jl fs lcall or pop ret or inc push mov pushf add mov inc jae xchg scas or pop adc (bad) (bad) (bad) jmp je mov sub inc mov (bad) jmp (bad) xor je dec shlb sub sub lock mov pop bound xchg sbb and ret mov ljmp jns jo into add jecxz or jg (bad) mov pop mov dec mov std ljmp cli fcmovb jle loopne or stos lahf mov dec mov adc add sbb dec mov lods leave add xchg push loop (bad) mov incl mov orb and mov push ljmp (bad) incl dec mov sbb adc sarl or movsl iret mov clc sbb cwtl cld scas es mov imul es inc mov sahf adc (bad) repz cwtl sahf xchg (bad) xor fs sub out lahf iret and jg cmp ss loopne xchg sbb sbb sbb jb rcrb push mov fdivrs mov inc stos pop adc dec mov std imul mov jnp inc lods inc dec call scas lahf into int inc cs jbe (bad) (bad) (bad) (bad) inc xchg ret xchg xor inc out stc sbb cmp jp mov in arpl in (bad) (bad) (bad) stc in xlat xor mov test fldenv or xchg insb xchg mov xor dec inc (bad) xor call inc iret xchg jb leave (bad) fwait cmp jns push jge aad pop into sti aas stc (bad) call into or push pop pop dec mov adc mov xlat push fistpll shll xchg dec repnz push ja ret sub pushl inc stos int3 shrb xor pop xlat ret div mov xchg mov sahf lds call scas js scas jns xor dec jg add xchg fs ficomp aas inc rol mov xchg push mov mov mov cmp (bad) jmp xor pop out pop cmc call rcll call jb mov cltd push lock daa cltd (bad) (bad) (bad) (bad) mov jno stc aas imul push sub fistpll push mov (bad) (bad) (bad) jnp inc inc aaa mov clc (bad) cmpsb addr16 push xor mov adc and add fwait xchg imul (bad) (bad) lcall in fistl sbb adc push jbe and inc mov jae (bad) (bad) push daa fcoms pusha dec xchg add mov jl xchg int mov mov out inc je dec (bad) pop hlt jmp mov in mov nop pop rcll movaps fistl xchg enter sub cmp adc mov xchg fmull lock push mov call cmp aas adc je (bad) (bad) (bad) jp xchg pop push adc inc pop dec sub fwait sbb es fwait xchg cltd mov es xchg dec jecxz das (bad) (bad) (bad) inc shrb (bad) lock lahf adc add inc mov jge dec int3 ds mov dec xchg jae aam popa sub add add incl or jge dec enter (bad) (bad) imul imul (bad) (bad) (bad) jmp inc or dec add sbb imul fbld add out (bad) (bad) (bad) pushl test mov xor movsb push movsl test add xchg loope xor (bad) (bad) ljmp xor sub cltd or lret aad or adc jmp lret (bad) incl test xchg loop inc jp dec mov inc cwtl xchg jge je mov xor mov dec xchg cmp dec mov cmp daa jns (bad) (bad) (bad) (bad) cmp das sub divb insl dec mov fldenv fs cwtl jno (bad) ljmp xchg dec xchg inc aad addr16 into and pop sub nop lock (bad) (bad) incl int3 push add stc dec clc cmp and arpl mov cli test lock jmp stos in pop out push cltd ja aam fisttpl fidivrl (bad) decl xchg xchg or popa and pop xchg or xchg cld repnz xchg mov subb in stos lret repz push mov mov das jecxz pop jnp pop sahf pushl xchg pop lods (bad) icebp sub icebp enter sub xor fs cmp mov stc mov and lahf lret in movsl dec jns fs xor or cmp adc aaa stc icebp es jmp pop cwtl or xor adc scas mov push mov insb pop lock inc jmp dec ds enter (bad) adc and cmp and inc xchg xor mov and pop mov dec (bad) out fstpt (bad) jmp pop push dec repnz stos mov push jle xor in pop fcoml adc push aas sahf popa outsb sti or mov cld or dec xchg push cltd or inc (bad) (bad) stos loope popf sub push mov ds aas jb mov mov and js,pt mov mov mov and sti cmp or xchg pop jbe in call ds dec jp aad sbb leave push neg int fisttpl ficom ss test (bad) ljmp cs xor dec push iret and jl pop xchg fs jnp jge (bad) (bad) (bad) mov or xor push or jle adc popf adc mov jae pop jb lods (bad) ljmp cltd outsl xchg in xchg sub xor xchg dec mov fs les xchg xor aaa sbb dec push xchg mov and test cli imul pop mov shrl or lods leave mov scas adc xor (bad) jmp inc sub test repz add jl cmpsl and je js das addr16 dec push mov insl in clc ficomp and outsb scas sar xlat ss pop or jns outsl xor or movsl jns cld xchg daa pop testl je push test add mov scas cmpsb in leave add lret in push adc pop mov (bad) (bad) lcall mov and rcrb jmp imul (bad) (bad) (bad) decl push inc sbb pop in and sbb scas dec cmp xchg pop sub and ret jmp push fs js dec cmpl mov mov dec mov sarl gs (bad) (bad) fildll in xchg mov inc imul sub mov ret inc mov dec out clc or cmp xor sahf xchg dec cwtl xor (bad) (bad) (bad) (bad) cmp push imul push mov lahf in cmp aam fstpt (bad) (bad) (bad) pushl adc sub ljmp mov mov (bad) mov add rcrb (bad) pushl and int jge hlt add gs xor imul mov and xchg (bad) xchg fadd xchg mov xchg mov (bad) jg sbb jmp or icebp jl stos xor or xchg push xchg lock (bad) call jmp sbb fisttp push lods push lods sub mov leave (bad) incl sbb rcrl sarl cltd pushf in inc dec pop in loopne xor incl call mov jno cwtl push sbb lcall sub adc cmpsb xor (bad) or movsb in shr icebp sub cmp mov push sub imul push fldt cmc mov sbb (bad) call lods clc dec sti push decb test clc adc aas pop adc (bad) imul (bad) (bad) call mov xlat xchg insl fst lret jno jle out inc inc jns pop mov xlat sub (bad) mov int dec push or nop imulb lea fs mov es xchg mov (bad) jg mov ja push loop (bad) popf call idiv jge stos ret xchg xor scas clc and xor inc sub or adc xchg xchg mov sbb scas clc incl mov xor pop inc pop dec push sbb das fcoml stc adc pop sar mov pop dec push or (bad) (bad) imul (bad) (bad) mov mov xchg bound ja pop aad push lea adc dec sub jmp jno pusha xchg into stos dec fs insl add adc (bad) (bad) ljmp mov f2xm1 loop lods inc pop bnd in lock dec in xchg push jg jg (bad) mov jae and (bad) (bad) pop add addb pop cmpl insb int mov inc mov arpl dec jmp and aaa mov jg sub clc das and and mov jb mov (bad) (bad) aas or adcl jmp adc lahf repnz clc push ljmp bound xchg lea lods ja cld inc shrl inc adc call shlb jl xor sub enter movsl sbb in jecxz jb pop sub cmp push push js aas push pop mov stos (bad) dec loope in mov jns fidivl stos cmc nop cmp push lds out cli incl gs (bad) cmpsl cmp sub pop outsl icebp icebp in inc mov (bad) (bad) (bad) incl push sub push pusha inc cltd sub adc xchg std mov pop fstl sbb (bad) (bad) incl sub or cs aaa lcall dec sti add or adc (bad) lcall fistpll sbb loopw les rcrb jo jmp xchg xor call and jb mov fdivl dec mov lahf std cmp push test add in lcall (bad) (bad) (bad) (bad) jg scas or sub jp mov sbbl ss jne cmp ficompl mov shr incl adc sti mov lahf (bad) data16 cmp push (bad) ljmp jmp sub sub xor sbb test dec xchg (bad) pop cmp (bad) (bad) jmp and loop mov (bad) mov pop pop es into fwait (bad) call shlb outsb in xor adc jne mov aas (bad) (bad) call lea inc sbb xchg jno mov push inc std (bad) decl in scas ret jge imul sti pop lock mov cmpsb das add test mov loop lcall aaa out inc sub xor pop rclb lds inc js jp (bad) mov sub push idivl and ds arpl sarl or outsl mov pop sahf cld pop std sar cmp in mov xor (bad) jo addr16 push sbb (bad) enter aaa cmp pushl clc aaa flds arpl int3 stc data16 cld jg sti sub sub pop mov xchg lods push aam push xor (bad) (bad) cmp repnz sub insl sub outsl decl out mov xlat or xchg enter pop clc pop jg jge jo mov sub mov sbbl cmpsb push jl push sbb lcall pop pop fbstp aaa sub sahf mov ljmp jecxz outsb dec ss lock insb xlat repz mulb push fcoml add dec subb cld xchg mov jo mov or (bad) aas jb and aaa loopne clc adc cltd or scas mov gs mov test pop push dec clc (bad) (bad) (bad) (bad) jmp popa xchg fs stc mov les mov loope fldpi cmp cmpsb lcall call dec (bad) dec or movsb push jne pushl lods test jnp mov das idivb cmp fisttpl std inc push mov xor jb lcall imul adc fwait pop xlat xor pop jmp lods push cwtl shrb daa mov mov adc mov push pop or cmp in (bad) fcomip rorl adc inc movsb pop or outsl or mov cld xor das jmp cmp fucomip ljmp or popa mov inc jbe mov jns adc adc lcall gs clc add add es out icebp mov lahf lock xchg popa (bad) (bad) fcomip (bad) cmp test shll dec pop sub pop les pop sti ror std enter decl xor xorb cli pop add inc notb fild pop jne sbb (bad) ds out cltd out imul cmc outsl (bad) ss fnstsw jns loope (bad) daa mov lret fs xchg (bad) (bad) (bad) lcall enter call cltd in jp (bad) lods adc (bad) addr16 pop mul (bad) (bad) (bad) (bad) cld mov jg out push pop adc ret cli push inc repz add iret loope mov add fcomip ljmp fnstsw jg scas jp jmp out pop adc mov js loop cmp cld das or ds push pop cli (bad) and (bad) (bad) (bad) lcall and mov jmp jp jle sub adc (bad) jmp sbb add add test mov jecxz decl sbb sti jo xchg xor jo cmp ds pop hlt lea rclb jnp xchg (bad) jg or pop (bad) clc push jns ds mov call out jl push cli jno out out shrl lahf jp jmp jo mov mov cmc sarl das xchg movq pop cmpsb call sar (bad) (bad) pushl mov adc jp jp sti jp dec movsl ja dec lahf rorl push dec sub (bad) (bad) jmp fstpt lcall jg aam add mov (bad) fcompl (bad) inc adc aas scas sarl lcall rorb pop imul (bad) jmp push (bad) clc scas sahf mov xor cmpsb xchg dec in sub mov (bad) (bad) incl fsubs sbb std mov push stc lods mov data16 jae stos out (bad) jge dec (bad) (bad) (bad) (bad) mov stos lret faddl (bad) dec imul sbb pop stos cli ds (bad) incl jge pop movsl (bad) jo jl xor jl lahf cltd dec ss aas mov mov decl inc stos icebp ds loope push ss mov (bad) (bad) incl gs jns dec xor dec pop add dec adcl es xchg dec pop sub repz mov or mov push std (bad) jmp and pop iret mov shll xchg mov pusha dec and into movsb (bad) leave ret xor lret popa push outsb test call test arpl xor inc (bad) (bad) ljmp (bad) push (bad) adc testl dec and into push sub out (bad) imul (bad) lret (bad) (bad) stc pushf jb aas (bad) jmp push lods or aas pop cwtl dec into mov (bad) xchg inc iret and call pop pusha int shlb add cs (bad) jns cld (bad) lahf cld outsl sti addr16 xlat les shl sbb pushl sub fistpl in rcrb pop dec jns icebp jge mov cwtl roll in mov (bad) aaa adcl addps lock (bad) jg cmpl inc xlat xor dec fistpll lock push fwait ret and sti (bad) jle (bad) (bad) jns (bad) (bad) lcall jae (bad) add lea pop jle pop xor ret and (bad) (bad) (bad) push cs sahf cli mov out add call repz push jmp (bad) (bad) (bad) (bad) cld sbb sub clc adc xor and adc aaa lcall or adc test cmp (bad) (bad) (bad) jl dec test mov mov cmovp sbb jbe iret call sbb shrl push dec cmp (bad) (bad) (bad) push cs dec int mov int3 popf das add xor dec or (bad) call xchg sbb imul adc xor (bad) (bad) out call lret std fwait jg ljmp mov popf nop cmp mov sbb in sub inc (bad) (bad) (bad) ljmp sbb jmp dec addr16 rcrl jns,pt es dec in outsb iret xor mov mov (bad) push sub sbb adc popl fwait lods and pop (bad) out adc push jns adc fcmovb (bad) (bad) decl out pop out movsl ret mov mov leave pop xlat daa pop insl out sarl lahf ret cmc jg cld arpl test jb cld mov aaa pushl in outsl cltd fistpll jg mov ficomp repz dec inc (bad) test dec out cld ljmp ret inc sub push pop mov not enter in lods push sbb leave enter cmp orl (bad) fistp cmp rcrl sub fcmovne or adc cmp xlat aam (bad) in (bad) (bad) (bad) decl repnz (bad) mov push push or add in push push lahf xchg out ret mov (bad) inc push xchg push xorl std (bad) test outsl pop and iret dec and pop mov cmpb adc fidivl cmpsl or movsb pop push xchg jp and nop xor aad out ret xchg ljmp lret mov xchg addr16 sub (bad) cmp ljmp inc repz push jl and arpl cmp movsl jb mov (bad) adc call xor fimul out add lods sub (bad) (bad) (bad) pushl mov inc jne in or popf jno fwait mov sub (bad) adc mov orl mov divb xchg pop sub pop push (bad) nop sub mov pop and bound movsl push rcll (bad) (bad) ljmp ja xchg xchg int (bad) jne push jo push xchg jge xchg jnp in mov test icebp mov and outsb in hlt xchg test (bad) (bad) (bad) fldcw push popa insl or or fisubrl in mov repnz std insb enter inc ljmp (bad) jg inc ret loopne cmp (bad) (bad) mov jbe jge pop fdiv (bad) (bad) mov and mov add sub fldcw (bad) sub leave pop push cltd jp ss (bad) (bad) (bad) jg jecxz mov jmp cld out ds mov decl call sub (bad) (bad) incl jns test loopne push pushf fld push imul hlt fst mov (bad) jg (bad) mov in xlat lcall push scas mov sbb cmp (bad) fldenv xchg mov jae xchg (bad) shll test insb jne ret (bad) (bad) (bad) (bad) jle loope dec mov and popf push or stos (bad) push (bad) repnz pop xchg mov pushl jmp mov mov fistpl fsts jle sub push mov call pop mov cmp push stos xor xchg addr16 cmp outsb rcr inc data16 xchg cld (bad) pushl dec dec lock pop push or push (bad) ss inc jg (bad) (bad) cmp out mov in out jae rcrl hlt xchg cmp mov lcall pop mov cmpsb fcmovnu ret scas scas in cmp ret inc sbb daa lods movsb push cmpsb jg mov subl ljmp js push stos mov ret mov push mov inc js sbb pop es std aas sub cli xchg test cmc popf cmp add jb add aas (bad) xor xorb lock (bad) jmp scas add mov divl cmp int fwait add das cmpsb xor (bad) mov outsl repz loopne add jg (bad) lock icebp xor adc loop adc mov inc add mov cltd arpl clc mov xlat fisttpll xchg inc adc loopne mov mov mov (bad) decl push adc sbb mov pmulhuw sbb dec arpl mov rolb xor (bad) (bad) inc or push dec cmp popa inc loop (bad) and lods mov mov (bad) js dec adc (bad) (bad) (bad) (bad) mov movb pop cmp adc icebp fisubr mov mov stos iret cmp rorl addr16 repnz (bad) (bad) call and xor insb cmpsl and lret ds call push call (bad) ljmp xchg loopne dec or ds mov mov jne gs pop std ret jno sub (bad) (bad) (bad) incl xor in xor pushf jmp mov aas jns lods rcll jb (bad) (bad) (bad) pushl (bad) cmp popf sbb pop stos icebp sub (bad) mov (bad) ds xor pop imul jae fs sti sbb out (bad) fildl ja lahf (bad) mov (bad) mov mov cmp mov jbe cmp inc jae sti fidivl sti push aaa pop lcall mov cmc orl xchg ficoml inc (bad) (bad) ljmp mov fstpl leave adc test shrb addr16 (bad) (bad) (bad) decl xlat jbe mov sub push mov cmp jp je mul shlb (bad) (bad) (bad) call shll push or jge mov or xlat cltd push aam sbb div (bad) (bad) jmp mov xchg add add inc outsb insl add add movsb mov adc out cld (bad) (bad) (bad) xchg mov fstl or push jmp dec push movsb clc (bad) pushl mov je ljmp xchg sub mov mov inc pop xor cmp lock in jno mov push insb jecxz aad imul (bad) (bad) jmp fldcw adc jae sub shll fstpl (bad) sbb sub insl (bad) (bad) (bad) dec icebp shll pop pop xor rcr lock lret cli hlt test push testb inc sub jae (bad) (bad) jmp aas jl pop mov jle in out mov fisttpll pop jno xor push cmp (bad) (bad) incl cmp loopne mov cltd out push and mov (bad) test movsb mov ss (bad) (bad) (bad) (bad) jg xor imul jne adc mov out sbb mov mov (bad) (bad) (bad) pushl add insl cmc cltd lods xor xchg mov popf fs (bad) inc (bad) div mov xchg (bad) (bad) ljmp cmp cmp adc ss dec fistpl mull test mov pop (bad) (bad) decl lcall cmpsb hlt jo mov jge data16 (bad) jae add pushl cmpsb xchg jecxz mov lods clc add adc mov jb jno inc ret (bad) (bad) (bad) pushl dec mov mov or scas push jg js imul sub (bad) sar decl stos pop push jg scas rcrb sar mov pushf xchg jo cmp sub ljmp add imul test (bad) (bad) (bad) call int sbb pop cmp fiaddl ljmp xchg sub in (bad) (bad) (bad) jg in shrb das bswap and pop enter cltd xchg cld lock icebp dec mov sti jg cmp (bad) mov imul or and cmpsl aas cli cld (bad) (bad) (bad) call imul push mov mov hlt stos fist into fst mov aad (bad) (bad) incl dec out mov icebp mov popf outsb jl lcall xchg jg (bad) call stos push js ljmp paddusw cmpsl cmp add (bad) fildl xchg xchg lods jl shlb (bad) repnz call push add cmp pop daa scas or (bad) pushl ficom (bad) mov cmpsl cwtl push aaa jbe push or push dec mov decl sahf pop hlt mov clc sbb rcll arpl jg xor (bad) mulb lods mov pop mov (bad) jne pop mov jns mov jo in mov push test ljmp cmp (bad) jg std mov sub xlat lret and mov push stc insl (bad) into xchg ja stos mov fcomip (bad) pushl dec xrelease inc dec mov mov push (bad) loopne cs cli sbb outsl cli idiv jb adc ss ret adc or (bad) jbe decb jle js xchg xchg xchg add not ds mov xlat mov cmpsl (bad) (bad) ljmp push push or sub je dec xor aad repnz (bad) lcall pop rclb test xchg clc cld aas enter sarb xchg out aad sub (bad) decl pop pop or out (bad) jae and addr16 test fdivs mov loop or jnp sbb int3 jbe or mov (bad) ja inc or xchg out mov cmp xchg outsl push push add ljmp pushl lret mov jo aam mov and cmp mov icebp aam mov pushl in aam loop loopne int ja mov shrl or loop (bad) (bad) jg mov ja leave mov js mov mov arpl sbb clc mov xlat pop sub cmpsl jns xchg inc fcomps popf into add (bad) or test call out sbb (bad) cli test in orl cltd inc inc sbb jg ds sub jp xor imul decb popa and pop lock fbstp mov in mov sbb mov sub insb push je call xchg movsl cltd jmp xchg jbe sub fdivl icebp pop out inc into (bad) jmp movsl xchg pop lret adc sbb dec lret negl (bad) call data16 scas cltd lock fucomp ljmp push add insb dec and ja pop or jo xchg pop push fwait into cld xchg jb mov mov imul push pop ss (bad) mov xlat sub dec scas (bad) jbe cmp jo mov sar icebp jle test sbb scas mov jg call out hlt scas sub mov or jnp adc out cmp pop cld mov add mov (bad) ljmp ret movsl dec outsl xchg inc insl mov ja fwait (bad) incl and fildll scas sub pop fiadd movsb inc mov stc insb outsb mov xchg (bad) decl mov (bad) std mov (bad) (bad) incl les movaps cmc and pop and loop mov ret stos movsl int addl inc push and mov (bad) call mov pushf dec mov push xorb test in outsb push mov (bad) incl ljmp jno push push les inc popf sbb call inc nop adc push push push imul cmp (bad) (bad) (bad) inc or push and mov out stc std sar jp cmp jg push sub aam rorl repz iret mov rcl arpl pop test add fsubp jg (bad) std mov inc lea adc addl sti fbld cwtl jbe cmp inc pop and call mov jns xor xor sbb lea scas (bad) jg push add scas jge cmc out mov pusha (bad) or adc pop fsubp sti (bad) fistp push inc mov push aas mov and jge or (bad) (bad) lcall std xor and addr16 sub sub mov dec in xor push xor (bad) out pop iret jnp push cld in adc mov inc lret jg add scas addr16 fsubr jp mov ljmp dec dec clc adc ljmp or push ljmp fcomip incl adc scas (bad) add dec ret rorb fcos out and mov push je mov push out jecxz (bad) (bad) (bad) jmp or sbb mov dec sub jl inc inc movsb rcl inc loope je nop lea outsl add xor push xor push xchg sbb (bad) lcall xchg inc sub mov add addr16 xlat push push iret push imul stc (bad) out movsb test push flds lcall (bad) adc adc adc sbb and testl nop jo bound sar incl xchg adc mov jp sub das ret adc imul (bad) ljmp cmp mov and imul dec (bad) popa push cltd fs orb sahf jmp ficomp jne pop cmpsl call cld ds test pop loopne mov bound or pop lock or jne jno lcall push xchg pop xor (bad) xor imul push mov jbe pop sub sbb cmpsb (bad) (bad) (bad) lcall mov insl sbb dec iret push ret add xor and push (bad) or sub lock lcall push mov movsl icebp sar arpl out movsl xchg dec and insb add jg (bad) jmp or arpl add pusha or inc xchg loopne repnz or ficom in imul std adc pop lret psraw lock dec stos les fisub out sub sub ds or mov aas outsb pusha pushf xor adc fcomps cs jb idivl aad jp (bad) (bad) (bad) (bad) cmp sbb mov jle push jecxz fimul dec (bad) je mov and hlt lds (bad) (bad) (bad) jmp (bad) jb pop (bad) jae jge sub fabs jb cmpsl push push lock jle jae jae lods (bad) (bad) (bad) (bad) mov icebp cmp jbe jmp daa fmull rorb lcall (bad) (bad) fistpll pop cmp (bad) fs test cmp in xor test (bad) (bad) ljmp sub pop and out lods jo,pt push adc (bad) lcall xchg inc mov pusha fcmovne and pop mov push mov xorl (bad) (bad) mov rcrb aas sbb mov sub sbb sbb hlt test into out hlt (bad) pushl and jle rcrl (bad) loopne fdivrl mov pcmpgtb aam xchg loopne pop xor pop mov push mov rorb mov adc (bad) stc adc xchg xchg (bad) mov jo repz outsl add (bad) jns in fstl pop fiaddl int push jp adc (bad) (bad) (bad) call pop cmc jmp rorb mov pop pop lods jns outsl inc jecxz inc jmp push stos sub add xor loopne lea test sub and inc flds (bad) (bad) (bad) aas insl sub out insl scas js jne test inc pop (bad) (bad) mov push push sbb dec addr16 mov xor xchg int jbe add add jmp imul cmc xchg std loope (bad) (bad) (bad) push push aam inc int aam lret fistl xorb xchg fimull das mov jbe add stos jmp sbb (bad) ljmp sbb push popf (bad) (bad) (bad) pushl push push pop push mov int mov cmpsl out int popf push scas (bad) mov xchg mov shrb ss jmp mov push mov fldenv cmp sahf (bad) xor jb jnp push imul hlt ljmp lret aam or ljmp cmp xor push xchg loope or ds inc fsts mov fs (bad) ljmp bound cmp lret repnz xchg pop addr16 add sub xchg xchg jne int aas enter push dec fwait rcll xchg sbb (bad) (bad) (bad) (bad) cmp das sbb sbbb cmp pop jo push xchg inc push scas inc adcb or or xor mov mov scas push cmpsb mov cmp or xchg inc call (bad) lcall gs fwait sbb sub inc out jno sbb pop push lcall (bad) (bad) jmp mov xchg lcall into jno into cmp popa mov (bad) vpmadcsswd dec frstor and (bad) (bad) incl inc ljmp dec test cmp data16 dec insb inc and ss lret and (bad) (bad) call imul add cmp js lods xchg enter adc mov (bad) xlat (bad) (bad) (bad) ljmp push xor dec mov pop sub inc ja dec dec push push push adc fstl cmp dec aam lcall pop xchg lods pushf sub outsb mov imul inc repnz test pop or sbb decl aad les mov inc or hlt mov adc (bad) (bad) mov dec xor push mov call push insl ljmp sbbl (bad) (bad) cmp push lock or out push out sub movsl addl jmp mov gs xchg pop push outsl xchg (bad) lcall adc inc pop (bad) dec pusha cltd rorl lret (bad) out clc cmpsb xchg lcall jo mov add (bad) xor dec repz (bad) sbb jge or push adc dec stos (bad) (bad) (bad) dec push iret sbb pushf (bad) sahf sub ret cmp adc adc aad push xchg movsl (bad) (bad) (bad) pushl cwtl enter pop push sbb mov jbe rcll dec xor cmp (bad) pushl lea push jle xchg test xor mov sbb pop xor sbb jae (bad) (bad) call test adc roll je ret test xor arpl sbb mov cltd (bad) inc (bad) call mov test fsubrp roll in insl xlat cmc and cltd inc (bad) test cltd in jg xchg push cmc push push arpl mov (bad) (bad) fildll leave adc adc repz movsl pop out push add je lcall rcrb dec sub sbb (bad) (bad) pushl fimul cmp mov bound pop data16 mov fiadd shll cmpsb (bad) (bad) call (bad) mov mov loopne mov inc test leave adc pushl push xor cwtl sahf jbe scas xchg sub pop pop inc jno lods dec pop jns aad (bad) pushl into int3 lea pop enter sbb nop jne mov ljmp sub push cmp lret add or in mov imull inc shrl adc mov (bad) mov sahf jb data16 roll ljmp jge (bad) (bad) lcall mov sahf cmp inc lahf adc mov test nop insl (bad) (bad) (bad) decl mov push or aam inc jbe and jmp das nop cmp adc and ret mov add aam in mov xchg dec xor loopne nop lea (bad) (bad) (bad) pushl nop cmp shll fnsave shr push hlt xor movsb xchg jae dec sub ret mov and pop fwait popf mov lret ss fnsave jl cltd xchg es mov (bad) (bad) incl and subb outsb sub sub mov xor (bad) (bad) ljmp xchg and or sub in mov push add mov in add (bad) inc add adc jno fdivs (bad) dec in cli jae pop mov aas fsub jmp sub rcl push jns xchg add inc (bad) (bad) mov repz leave mov mov int3 push arpl sub jecxz call iret mov cmc inc in test push fadds or mov sub inc pop jge,pt adc (bad) add and popf sub es (bad) lcall xor and popf (bad) mov fnstenv mov inc in mov ljmp xor mov cs mov sub mov xchg add push pop popf cmpsb nop xchg sub mov fnsave push les xchg lahf jno mov aas (bad) mov sbb sbb mov dec push cmpsl data16 ljmp in or (bad) xchg shlb push into mov lret rcrl (bad) (bad) fbld cli mov imul or pslld sarb xchg (bad) (bad) (bad) ljmp pop inc xchg ror cwtl xor fs mov and movsl inc cmp out jmp js jg popa dec (bad) (bad) (bad) (bad) fadd xchg sbb cli jp movsb mov jp pop shr or sub loopne outsl jle and (bad) (bad) (bad) pushl xor icebp shl cwtl mov js dec sub cs ror xchg test popf cltd in (bad) (bad) (bad) ljmp cmp (bad) inc gs sub (bad) xor clc imul jb insl test (bad) push rolb xor and hlt or (bad) fndisi(8087 mov loop js mov mov movsb arpl cmp cmp (bad) cmp jmp mov scas pop sub sbb lret push into adc hlt loope dec push mov (bad) (bad) jmp jbe lock push loope mov dec in pop dec faddl pop gs popa cmp (bad) (bad) (bad) cmp and (bad) mov daa lds repnz xchg fs xchg es dec iret xor (bad) lcall dec xor loopne ret jge pushl inc pop ljmp decl jle sub cmc jge mov push fiaddl jg dec dec xchg jo movsl aaa mov push test and repz dec es sub in push xor or in in pop leave outsl cs jge jbe test dec repnz incl or cmp cli mov dec cmp xor outsb cs push sub orb lahf or push dec inc movb adc popa ret es (bad) nop inc cmp imul inc fwait (bad) jl ds fisub sub movsb sbb jb dec xchg cltd mov xchg gs or jb or mov test jo lcall mov es imul sub pop mov and cmpsl sub lods inc cmp pop push movl lods imul je adc push (bad) (bad) (bad) ljmp or lds pop out sti xor xchg mov (bad) lcall sub mov mov cmp (bad) pop jmp sbb xchg mov add pop mov repz les sub rorl adc sbb mov (bad) nop dec out (bad) mov jmp mov mov push mov cmp jecxz mov (bad) (bad) call test push fsub dec shrl (bad) test push push icebp (bad) fsubrs inc repz (bad) fbld pop xchg mov mov mov mov nop and test enter mov fwait add outsl daa mov ficompl pop loope and jp jge outsl jmp aad push mov cmp sub insb push pop pop stos bswap arpl cmp xlat or jmp mov add or jg mov push pop jle enter and pop or cmp sub push clc mov (bad) ljmp inc lret sbb inc lock out pop hlt and (bad) sbb stc mov rcrb sub mov or adc xchg sub inc enter xchg xchg cmp (bad) (bad) jmp (bad) arpl adc sbb sti mov dec mov je ret insb xchg cmpsb test call push pop lcall (bad) cwtl xor out jg xor mov sbb rcrb fdivl or es arpl mov (bad) jg insb mov sub xor xor ficomp fnstcw insb inc (bad) lahf dec pop or (bad) jle add mov inc ss jge cmc mov sahf lods jl dec xor unpckhps pushf and lock mov xchg cmp scas outsl fwait fwait xchg jo faddp mov ret clc test (bad) cmp cltd add jnp xchg xchg add pop and mov inc inc and mov cmp or shrl adc pushl imul xor fistpl imul (bad) sub cld dec jp cltd xor out cld imul sub daa fs sub cld pop pop cld xchg test repnz (bad) cmp loope jge mov (bad) push pop shlb shrb (bad) stos ror inc jne or push mov in inc pop (bad) (bad) mov mov je mov lds and call rorl (bad) ss fdivrs pop jg les inc jo xor xor (bad) inc bound sub imul stc mov pop cmp mov (bad) mov pop and stos xchg (bad) xchg inc scas xor aam pushf add incl inc (bad) rcr inc pop sub aaa mov movsl add jae cmp fcomip dec repnz jle or in xchg push xor ret xor push loop or (bad) pushl add std sub mov (bad) (bad) incl pop dec jno out mov mov mov jae (bad) (bad) (bad) decl pop test lcall repz (bad) nop test fcmovnb cmpsl pop lock dec jle mov push pushl (bad) push mov pushl ja lods jo enter xchg or jne mov or (bad) (bad) (bad) mov inc and and dec rclb jge pop lock cmp ret pusha (bad) fcomip (bad) jl cmp lahf je stc mov adc jp or cmp ss (bad) (bad) (bad) (bad) mov dec mov pop sub in xchg lret stc lods cmc out hlt mov aaa mov or (bad) imul cwtl xchg out (bad) adc dec sbb (bad) (bad) (bad) (bad) jg jle mov inc push cmp sbb add divb push lock pop (bad) (bad) (bad) (bad) cmp dec mov jbe aas mov in push ja xlat mov shr sub jnp jl (bad) decl mov sbb std jbe push gs jge (bad) outsb pop mov rcrl xlat (bad) imull push in (bad) scas and xchg lret test shll (bad) push imul ljmp fcomip xchg int out (bad) arpl iret dec (bad) ljmp clc clc std xchg (bad) les xchg and xor mov out xchg les scas (bad) mov movl dec imul je inc clc mov and mov stos inc sbb mov (bad) jmp pushw xchg out or (bad) (bad) (bad) (bad) std cwtl mov movl lret dec ss test fs inc insb ljmp insb fcoml inc fisttpl mov aaa outsb dec dec (bad) mov rcrb pop out cs cli jp adc jecxz and (bad) call cs add adc aad add loope xchg in sub mov (bad) aas leave lcall add rcll add sbb cmp lcall in jle sarl adc sbb xor cld fild sub in lock mov pop pusha or int add add push cmc jg out rorb or and ljmp dec ds lds dec add arpl stc test leave jmp dec and jecxz (bad) stos idivl (bad) aam in add jmp mov mov xor pop cmp (bad) add test push xchg cmp mov out mov inc pop fbld xchg mov xor scas mov (bad) ljmp hlt dec imul addr16 repnz (bad) sti cmp (bad) (bad) pushl iret jb out fwait aas dec sub es test xchg in dec pusha pop icebp in lods mov jmp lcall jnp fsubrl lcall dec cmp or mov dec (bad) and adc fstp cmp divb dec enter nop out sbb (bad) (bad) (bad) ljmp dec pop jge xchg xor test or scas inc add pop pop loope fidiv jl mov mov lods mov (bad) (bad) (bad) pushl lahf (bad) (bad) int3 xchg mov dec add clc pop sahf test and ljmp xchg inc inc xchg rcrb pop call in cmp adc ret and jl sbb cmp pop and (bad) fsubrl sbb outsb jo clc xchg adc jge mov (bad) call sbb cmpsl mov ljmp push dec ljmp cmp push and jg dec push cmp out ljmp xchg ljmp icebp pop mov scas loopne leave movsl xor pop lea add xchg aaa imul mov and push push data16 frstor out pop mov add (bad) fcomip call int stos add or inc push xor cmp mov push pop xchg insb sub lods dec push ljmp movsb loopne sbb adc (bad) outsl rcrl repz sub adc decl inc cltd pushf adc lock sub rcrl dec jge (bad) aaa (bad) xchg dec push lods outsb (bad) (bad) aaa xor rcr int mov fsubrs jl mov pop into sar (bad) fsubs mov test push jle fimul mov (bad) (bad) cld pop js aaa jge ret fbld push mov xchg xchg mov fdivrl sbb sti add sub sbb in pop leave out sbb (bad) (bad) mov dec inc out mov sbb sbb ficompl (bad) jg mov pop push or aas shl pop or imul divb aam mov mov stos add aaa fisubrl lret lock lcall sub iret push inc push outsl stos ret jne mov (bad) loope sub daa push jg test xchg xlat out je jl (bad) pop in push negl addr16 ja call hlt fstps outsb lods inc popa ljmp (bad) mov fnstenv jne xchg push add fldcw xor aas fwait orl sub test loopne cmp cmp mov inc std addl imul popf sub into jmp mov mov shll test loopne dec xchg enter or popf outsl xor fidivrl js ljmp jne sbb jb fstpl mov mov cmpsb fwait arpl jmp imul insb insl xlat call lock lret dec pusha test aaa sub insl xor mov push ret (bad) (bad) decl enter inc mov add adc jns aad fwait pop mov (bad) (bad) incl push inc je xor mov (bad) xchg mov enter orl loope aaa ret xchg or sbb hlt out (bad) (bad) ljmp rol ror (bad) push mov push icebp jg mov or or jecxz or cmp dec and incl mov ljmp adc adc sub sbb repnz test mov popf repz mov inc cmp xor (bad) sub lcall cmp lahf shrl es sub inc or jno add push xchg dec insl loopne inc mov or sarl inc add (bad) (bad) (bad) call push push inc xchg or loopne inc ss cs xor add inc and push and (bad) (bad) (bad) ljmp imul add push adc aad mov notb loope pushl stc add fidivr ret cmp jns fdivr cld dec jl (bad) mov jae stc jae cmc mov test ljmp inc dec inc xor dec inc inc mov inc push sbb aam outsl mov push jo lret jmp test push scas outsl xlat jp das clc (bad) cli add fs aam out popf push cmpsl inc xlat ljmp mov (bad) jmp mov (bad) incl jl aad cmp in leave pop mov imul cmp dec cld (bad) std mov mov (bad) jl in xor push (bad) (bad) ljmp loopne sub jmp data16 rcrb mov sbb test mov cmc repz incl stc adc push inc pushf into insb das fnop mov (bad) in mov pop test jg movsl ljmp lret leave mov pop jae xor mov out cmp (bad) (bad) (bad) jmp cmp fbld movsb sub sti push sbb xor (bad) (bad) (bad) jmp (bad) lods sbb sbb in (bad) outsl addr16 xor xor sub jle scas cmc das inc jae push int3 ja (bad) (bad) dec test insb in (bad) lret push xchg sbb push fcmovnbe je aas in xor jno (bad) (bad) pushl cmp jg aad push outsl loopne pop loopne mov das inc das sti ror lods (bad) (bad) (bad) (bad) (bad) mov inc xor int3 inc inc loopne mov mov ss add (bad) jmp or mov inc je aas aad in dec jno scas bound imul roll fsts cmp cmp fldl mov add add jmp sub insl mov mov pop stos das out mov (bad) (bad) mov cmp pop xor (bad) frstor fdivl jb int jne adc (bad) decl out gs pop outsb and mov push fsubrl jo insl sarl jp insb jg movsl xor or (bad) (bad) dec push dec jno stos pop fbstp insl std cli out add arpl xchg pop in adc xchg dec dec and test (bad) decl (bad) jl add pop mov push pushf fidivl jecxz fsubp (bad) mov ret out shrb xchg lods sub (bad) (bad) ljmp adc cmp fisubr bound repnz cmc lsl jg (bad) mov mov mov lods fldcw sti repnz (bad) lcall call test ljmp dec pop ljmp stos pop test gs testb pop lret mov lret cmp movsl pop mov out inc pushl decl jns int3 mov (bad) arpl std dec fdiv or (bad) (bad) (bad) (bad) jle jg xchg mov into jne cmp das jnp lock enter sbb cmpsb mov or (bad) (bad) incl push jecxz mov jecxz dec dec mov fdivl push sbb movsl imul inc (bad) call push pop pop outsl mov cli mov cmp and hlt add in loope push incl jmp xor loop lahf addr16 (bad) sub aaa mov sbb (bad) (bad) in dec into pop or sbb mov test aam mov (bad) (bad) xchg mov mov (bad) cmp jmp jl xchg mov xor push jmp repz and (bad) (bad) jg xor jecxz stc (bad) mov push popa pop xchg (bad) std push das scas lds (bad) inc dec in dec jecxz jg mov js aad aad sbb lret adc (bad) (bad) (bad) lcall mov cmp push mov lret (bad) popa dec (bad) stc fnop insl popa out ret stos sbb outsl jo dec mov push lds out gs jae (bad) (bad) lcall loopne std dec push out push fdivrl cwtl jg xor mov mov inc inc imul test int3 imul inc (bad) test mov stc push sahf jg hlt dec (bad) (bad) ljmp mov fcompl ficomp popa mov lret out hlt xor (bad) (bad) dec (bad) popf lret push icebp ret or lods lock enter mov loopne iret ljmp incl cwtl mov sbb mov mov lods fistp xchg add (bad) (bad) (bad) mov icebp push pop out (bad) dec dec or cli mov jp lret jge (bad) (bad) (bad) xor lahf mov sub mov push outsb mov cmp (bad) xor or decl push addl xchg fwait in sarb loope int sub gs fcomps add push jecxz fiaddl out sahf jne mov push cmc dec enter sbb (bad) or cmp (bad) (bad) (bad) jmp push inc in fstps ret pop (bad) (bad) mov mov hlt mov addr16 pushl vpackssdw aad pop sbb outsl imul cwtl aas mov mov sbb (bad) mov cmp (bad) inc std xchg mov mov jg es mov clc arpl mov leave mov aas xchg or dec mov pop pop mov xor in mov add push jmp ds stc mov call mov outsl ljmp mov xchg fldl arpl cld in movsl xor call (bad) lcall icebp xchg loope xor rcr lea ja inc std popa scas lea lahf (bad) mov jo out cld out clc (bad) (bad) mov sbb js push lds or (bad) repz out mov pop mov in add je pop addr16 (bad) dec clc xor pushl fistpll fistpll jle push push mov icebp lret mov ficom ljmp std cmpsl lea inc scas testl dec jg das xchg (bad) iret repz sbb xchg sub ficomp adc mov sbb hlt mov inc jns or inc fbld (bad) out push jo int3 (bad) rcrb push dec xchg dec (bad) decl jle inc cwtl push xor dec cwtl lds mov sub sub call out cmp insl (bad) out (bad) in pop and aaa cmp and ljmp div sahf lcall push push cmp cmp out adc aaa cld (bad) dec sub jecxz lret add sub (bad) jmp std (bad) aam xchg jp out mov lcall dec pop pushf mov sti pop pop hlt jne or fistpl rolb cli mov std (bad) mov bound xor dec sub inc mov mov (bad) (bad) (bad) decl dec adc mov pop sub inc jno icebp xor sub inc inc and sar notb mov pop jge (bad) jmp daa xchg xchg in idiv decl test dec add sti cmp add add jp call jg fist shl daa inc xor and psubd popf mov push movsb jg aas pop leave bound clc pushl (bad) cmpsb push inc mov dec sarb sbb add std incl cld xchg sub push dec in test (bad) jg push jno cmp jnp mov (bad) jg popf fsubrp lcall jmp xchg arpl sbb popl test cmpsl (bad) xor cmp xor bound fs jg add and pop fstpt (bad) mov xchg incb or (bad) call jg out sti push mov aaa cli scas jp cmc out enter (bad) arpl (bad) (bad) (bad) out sbb adc out fcos decb negb add fdivr or clc in cmp jmp jnp popa (bad) hlt data16 or pop sub clc (bad) (bad) call push push cwtl xor inc ficomp fisubr mov cmp mov sub lock cmp mov (bad) mov mov int xchg cmp add lret or mov lahf je push (bad) into js lcall fwait push push repnz xchg and dec push jb loop movsl stos dec rolb (bad) (bad) inc jo dec (bad) xor mov daa gs xor push sub xchg cmp push mov cmp (bad) (bad) (bad) js or xchg xor clc adc stc shrb ret or imul sub (bad) fs (bad) (bad) (bad) decl enter push loopne inc imul dec aaa int3 inc lcall cmp pop data16 (bad) (bad) (bad) (bad) and cmp adc ds in loope pop and mov loop addr16 xor rorb mov add cld (bad) ret adc into or inc pop push cmp add loop push push (bad) (bad) decl xor test sahf xor push adc and das sahf inc xor or xor or (bad) incl or jb mov push pushf mov jae (bad) (bad) (bad) lcall cmp out es (bad) or mov push and push icebp inc mov repz push xchg sbb test mov push es sti (bad) mov pusha icebp icebp mov pop xchg add add push shr and in (bad) (bad) dec addl adc push mov mov add cld xchg daa or pop in mov inc dec loopne imull mov cwtl cmpsb (bad) (bad) (bad) cli and stc mov into pushf pop cwtl push out mov mul inc mov (bad) mov scas in dec mov mov and ljmp pop mov shll or pop loopne xor dec nop repz (bad) sahf scas add (bad) (bad) mov and gs les and ss mov imulb and pushf jle std (bad) (bad) call pop lahf add inc mov sbb dec or sub mov (bad) ljmp inc (bad) cmp scas adc cmp (bad) pushf adc mov (bad) (bad) cli bnd cmp jle jne dec add rorb and (bad) ljmp fsubrl xchg andl xor (bad) xor mov nop (bad) (bad) (bad) (bad) fistpll rclb dec (bad) jge je neg mull (bad) popf (bad) jne outsl or sti (bad) (bad) (bad) in das jmp adc dec add inc inc ds cmp scas sbb repnz jle call add cmp movsl mov in push bound popf (bad) (bad) aas or dec pop aam repz iret xchg dec sbb xchg pop loop (bad) (bad) jmp shll mov xlat lahf cld fcoml mov dec xor icebp jns add loopne (bad) (bad) lcall je or jnp loop mov jp mov cmp mov mov jo mov (bad) (bad) call sti aam mov sbb add sbbb or inc (bad) mov lcall jecxz ret add ja or or inc or (bad) (bad) jmp lcall jecxz incl sub mov call incl mov stos aad out popf jle inc mov decl clc (bad) xor nop sub cmp pop inc ss (bad) jmp lgdtl clc xchg pop in push fwait sbb cmp cmpsl faddl add (bad) add mov cs mov lret push movsb enter sub lcall (bad) cmc inc arpl pop adc push mov push adc insb fsubrs movsl (bad) mov jnp je scas in cmp jl test sahf inc icebp ljmp inc fstpl insl sbb pop stos mov sub imul push int iret mov xchg outsb imul push (bad) pushl cmpsl dec push jmp mov mov adc inc push fiadd add (bad) lcall mov mov sbb lret inc push test xor (bad) (bad) ljmp mov aad ss sub xchg mov fcmovnu sub (bad) push ret or (bad) (bad) cmp mov cmpl sub inc test xor xchg mov inc hlt (bad) push enter pop lret (bad) ljmp mov les xor mov pop push mov xchg dec xchg out (bad) (bad) call mov sbb std add push sub mov ret rol xor xor lcall jmp sahf or mov out jo out enter faddl aam xchg pop sbb xor or lock int gs push (bad) stc mov data16 aad lods or mov or repnz fidiv leave cmp (bad) mov test xor mov les ret and jg decb repnz mov jno lock loopne aam lahf adc cli pushl sbb cwtl cmp std (bad) jmp lea push mov cwtl hlt sub fcmove adc push je std (bad) call mov push jno addr16 pop sub mov arpl pop dec and call and mov into xchg push jae or popa aaa mov dec cs roll arpl daa lds jl es push ljmp mov or (bad) jmp sub pop bound imul pop sub sahf or dec dec push ss (bad) sub leave lods cmp sbb dec daa push xchg sub gs cmp lahf into data16 decl adc pop pop push push dec (bad) int3 sbb mov in loopne dec push push fsubr mov push jbe (bad) dec xchg out (bad) (bad) call sahf cmp and mov sub dec into (bad) leave in (bad) (bad) (bad) incl dec xlat dec inc jb cltd inc add aas outsb idivb and shll mov push jl out inc sub les cmp rorb int3 dec pop pop jge mov xchg pushf flds dec dec lea mov enter aas and mov (bad) ljmp int inc enter mov js xchg movsb inc lret shlb or orl mov mov daa (bad) (bad) jmp stos push xlat cmp mov rcrl in xchg js insb (bad) hlt mov mov pushl mov gs xor shr je outsb lods mov or inc mov lods leave js pop cmp cmp add insb inc dec push push xchg adc (bad) inc insb daa in push out aam sub nop ret imul push popf bound sub mov jge test (bad) (bad) jmp cmp mov mov cmpsl cwtl in (bad) pop sahf xchg fbstp pop pushf inc inc xchg (bad) mov cmc (bad) lcall loop data16 fsubrl lahf mov pop out mov das clc mov and movsb (bad) and mov in jae mov test sub xor ds xchg dec xchg call daa test pop popa mov ret xor sub lret int mov lods xchg out (bad) sbb xor enter ljmp jb xchg clc sbb mov inc sbb pop xor and (bad) stc ja out lret nop stc (bad) (bad) call fmull ds xchg lahf xor push inc jo cmp mov or in dec push in pop inc lahf cmp cmp out inc pop dec in jp aas (bad) (bad) (bad) call xchg mov (bad) sub or shrb mov addb popa cld jecxz cwtl aam iret daa movsb in in cltd pop and and inc rclb xchg jb iret psllq test pop setg lret fadds pop push push ds (bad) aaa repnz xor (bad) (bad) ljmp ds cmpsb xchg dec inc out mov in loop lds jg (bad) inc push mov mov lea (bad) pop dec and push sub lods dec shlb loopne sahf popf xchg xchg mov loope xchg lret and arpl pop lret (bad) (bad) incl xor enter or dec mov rorl enter subl xor hlt nop dec jno test sbb sbb push repnz push ljmp enter loop leave xor popa aaa xor cmp lods mov cmp fstps jp (bad) (bad) jmp jae lods or pop xchg daa jmp lock xchg cmp push jmp maxps ljmp inc xchg and sbb xchg lahf and jmp (bad) (bad) ljmp adc xlat mov xor xor and sbb ljmp cli xchg or lock mov push cli test inc dec enter mov rorl mov add cmc cmc cmp cli daa sub pop pop push sub add push mov mov push lock fwait xchg adc (bad) (bad) (bad) (bad) jp jmp loopne or (bad) dec fidivrl or movsl dec ret push popf sbb jns cmp (bad) (bad) (bad) dec jae mov and lods cmp and iret jp insb mov xor (bad) (bad) (bad) ljmp jbe test leave mov aas sbb fs loop sbb add lcall rol dec inc and sti or ja push or (bad) (bad) call and rcrl mov mov xchg scas fadd adc add dec cmp pop adc cld (bad) (bad) lcall push fsubrs xchg das test xchg pushf stos and mov sarl testb xlat push jnp push pop (bad) (bad) incl mov hlt xlat push mov popa pop mov out loope decl jecxz repz loopne push (bad) mov pop cld mov pop loopne js mov jge mov fildl (bad) (bad) (bad) jmp dec cmpl inc xchg out icebp push sahf pusha fstl lods push cmpsl mov pop adc (bad) (bad) ljmp xchg sbb pop shrb or js mov addr16 cltd test mov out es (bad) (bad) (bad) lcall mov movsl xchg xchg mov lods leave daa xor push mov (bad) (bad) (bad) decl pusha int insb dec mov jp inc pop xchg call nop jno imul out (bad) (bad) (bad) (bad) mov (bad) dec mov inc cmp adc or inc push pop (bad) inc in call add adc mov push pop jmp (bad) fisttp sub out jo leave into fcomps push cltd xor pop int lret add rcrl out stc push loope jae in push (bad) (bad) (bad) inc outsb repz xchg cmp mov or or stc cmp (bad) (bad) dec mov xlat inc fisttp fstl aam add pop imul repnz test lret push bound push inc repnz adc sbb jecxz dec gs js cmp pushf (bad) pop (bad) pop (bad) (bad) mov cmp cli dec pop std inc pop adc jbe pushf push cmp mov pushf out jl xor xchg fs mov push aas push pop lods (bad) (bad) (bad) ljmp sub mov push xlat call stos mov pop mov cmc icebp inc mov lds test ret fwait call or scas loope mov pop imul pop sbb leave pushl jnp cmpsl pop adc xchg xor add lahf pop test push add cmp fcom dec push dec push repz sbb push jmp dec xlat sub mov stos lds jb popf scas add inc or stos fisubrl mov pop (bad) je pop in cltd movsl sbb pop add (bad) test scas pop pop adc pop sbb addl (bad) call pusha gs lret (bad) sbb mov push ljmp (bad) call or lret mov mov push inc in push gs aas sbb cli push inc (bad) fwait push pop mov iret outsl and lahf or nop dec pop push aas sbb das add leave cmp stos je in pop mov pop (bad) pushl adc call repz xor imul lret loope sub rcll mul xor adc loope push std and inc or je lds (bad) jg and movsl and pop test (bad) (bad) (bad) ljmp fs or ja das adc and jg jmp sub hlt (bad) repnz (bad) pushl into pop out xor cltd pop cmp (bad) stos adc xchg ffreep sar in inc cmp test fdivrp pushf dec xor gs pop leave push sar adc adc orl scas mov or inc mov inc rclb xor xor enter (bad) xchg adc sub pop dec test gs jecxz fistpl incl mov sub ss into adc cli out lods nop mov mov setg pop mov decl aam mov lods outsl fwait scas jne outsb add and dec xlat dec mov xchg repnz (bad) (bad) ljmp hlt sub mov lods inc mov popa dec mov popf cld dec xor clc (bad) call mov stos mov and sub xor and lock jae adcl gs sbb movsl jns (bad) jg and (bad) and or fimull jbe out inc data16 pop repz scas or das and sub imul xchg ljmp mov cs nop xchg xchg jl incl or je xchg jo xor stc jb gs xor mov cs (bad) push and sbb jmp or fisubrl lock jmp inc fs mov (bad) (bad) (bad) (bad) cmp xlat cmp mov inc jp dec push out cmp cmp (bad) fdivr jnp test push pmulhuw call (bad) and sbb addr16 insb in mul xor loope mov jp les fiadd scas cmp or mov outsl (bad) call pcmpgtb mov ds inc sub aam and push leave clc pop dec and xchg movsl (bad) cmp xor adc mov addr16 (bad) (bad) call in push mov ret and adc in mov xchg sbb int3 (bad) (bad) (bad) (bad) jl mov mov sbb mov add fisttpll (bad) mov std pop ret decl out or in es push out sbb (bad) mov icebp cmp ja inc loop test outsl outsl xor add das (bad) (bad) scas inc je in test cmpl mov rcrl cmp sub sub arpl test (bad) pushl ret (bad) mov mov mov sub mov cmpl dec mov dec daa aas pusha jno fwait in (bad) repnz je in or (bad) (bad) stc shll push and xchg xor sub jge fcos je cld out pop std movb (bad) (bad) out repz movsl mov jb fcmovnb gs xchg add jo leave jae push int3 call cmp pop repnz shlb cmpsl mov ret jb lret lahf jg or scas mov pop js cmpb jno std lods nop xchg inc ss jg fs push aas stos sub gs push sub test and xchg mov sbb xor mov lahf inc fsts inc int3 mov cmp (bad) daa adc (bad) jg outsl shll js into addr16 lea jb sbb mov dec pop dec and repnz (bad) mov adc jns sti aaa (bad) (bad) pop dec mov int and pop (bad) (bad) pushl mov jne (bad) mov aaa repnz push in adc xor mov (bad) (bad) call das xchg into and repnz bound fcomp cltd sahf jg push popf dec fidivr cli inc test push inc mov test (bad) (bad) aas mov popf fstps loope cmp mov lods cld sbb aad fcmovbe imul outsl mov cli ljmp lahf cmc call jl mov push mov (bad) pop out lret out es jecxz clc push nop (bad) mov gs cld cmpsb jg xlat idiv (bad) jmp jne (bad) dec sub cltd outsl mov popf lret push lods lods sub dec scas sbb lahf mov div xchg das sar pop notl pushf jns mov push push out lret in fsubrs (bad) idiv (bad) (bad) (bad) mov cmp iret jl shrl xchg loop int fstl movsb xlat daa cmp cmp mov lret (bad) ljmp lcall sbb insb test jp jge (bad) push mov push mov mov cmp inc xor test jmp (bad) lcall dec pop sub inc push (bad) stos add cmpl pop add jecxz cs mov mov jl dec xor jo mov fdivr (bad) (bad) (bad) fildll jp sub sub sti xorb daa cmp dec inc jnp xor aam adc (bad) (bad) incl xchg leave pop stos xchg aam repnz stos and xchg sbb int3 xchg aam mov (bad) mov push mov push pop shll add xchg push jge cs mov add (bad) (bad) call add scas xchg hlt sub dec sti dec mov cmp inc xor (bad) data16 push inc sar aas and jnp mov sbb sub xor xchg (bad) stos xchg stc movsb pusha inc pop push out rcrb xor dec cltd pushf xor mov mov (bad) cld lret test jns lcall loopne mov cld ds jno lret xor aaa jmp push icebp push (bad) (bad) pop or sbb scas out les mov and (bad) (bad) incl repnz scas inc insb (bad) mov push aaa fcmovnbe ret mov dec out (bad) leave lret ret mov sub (bad) (bad) (bad) (bad) aas dec pop leave ret mov aam outsb lahf or mov (bad) aaa inc or (bad) ljmp (bad) sbb fbld inc clc mov inc aad mov pop sbb or clc (bad) push or push inc or mov mov insl sti ficompl cmc (bad) mov jbe cmp addb fnstenv jecxz das jp cmp loope xor inc shr xchg xchg int scas cld dec (bad) mov insb test cmp inc pop inc or andl mov mov pop (bad) (bad) incl enter add (bad) sbb push mov pop cmpsl mov ret outsl cs adcl jne lds mov dec or (bad) (bad) (bad) decl push fcompl adc aaa or stos fdivrs and outsb outsb addl (bad) (bad) pushl into movsb jbe cmpsb jne push mov movsl sub inc jnp movsb xchg (bad) cmp arpl sbb jge (bad) (bad) pushl push lahf and pop lods mov addr16 mov cmp adc insb clc pop loop inc or jecxz mov inc mov clc imul (bad) pushl test (bad) push mov jbe loop sbb loopne adc sbb js xchg add and pop cmpb mov mov lahf imul dec popa cmpl std (bad) incl sbb dec pop dec in imul jmp shr int xor lahf loopne or add cmp adc decl push (bad) mov icebp dec mov push loopne pop mov sub (bad) (bad) (bad) aas pop or inc adc inc inc adc inc inc mov and bound sbb mov (bad) (bad) (bad) incl xor adc nop dec gs (bad) (bad) adc les inc in (bad) pop sahf mov (bad) (bad) (bad) decl lods bound rolb fs xchg fnstsw sti xor scas (bad) (bad) (bad) lcall jle mov ljmp loop pop jnp jnp jbe push gs in sbb lcall lcall push push mov dec lcall mov ja (bad) (bad) pushl jno rol adc (bad) notb jg xchg fxch (bad) mov lret jno (bad) (bad) (bad) incl jno mov fs addr16 movsl shrl sub jne dec clc push (bad) (bad) (bad) incl mov int3 cs es fisttp sbb in dec das lcall or clc decl popf leave pop sahf ja push repz call cld (bad) jmp aaa sub int outsl mov dec lahf cmp sar pop cld (bad) fsub mov int lcall and pop pop fcompl daa int xchg cmc (bad) incl stos mov xchg (bad) loope scas pop pop jb mov fisttp add ret scas (bad) lahf mov mov (bad) (bad) (bad) (bad) mov cltd cmpsb jo lods imull and xor mov push sti cmc lret subl (bad) (bad) call sub cmpsb iret jbe ss popf xchg jmp rcr shr movsb jmp popa mov adc (bad) (bad) inc xchg notl and stos (bad) jl xor push xchg sub xchg outsl add (bad) (bad) (bad) jmp fldcw ja lock jns cmp sub cmc mov (bad) (bad) incl icebp mov test ljmp mov add shrl incl decl cmpsl (bad) mov nop test sbb ret repnz (bad) jo mov (bad) (bad) (bad) call dec cmpsb or xor sub (bad) notb pop stos mov mov xor push imul push (bad) jae outsb jge leave fildll jecxz inc cmp into stc cmpsb (bad) lcall ret (bad) jb xchg fdivrl sbb loope cmc int3 movsbl notb xor mov (bad) mov das pop out cld mov decl movsl lds dec jmp ljmp lods lcall iret clc (bad) pop dec imul (bad) lcall pushf mov (bad) mov in das scas call xor stos inc pop jg (bad) fildll add popf push add xchg sbb pop mov (bad) les pushw mov call cld (bad) stos scas jb icebp and add sub push pop lock fmul lret (bad) (bad) (bad) pushl xchg inc es jb mov xor repz cmp sbb lcall loope (bad) dec iret jno fs outsl sbb jne jl lods jp cltd iret cmp xor call idivl cmp mov loopne jl or mov jo incl (bad) sbb test pop ret or repz dec jno clc mov pop cmp jae ftst xchg mov lcall je in push into or add stos mov and xchg and pop stos cmp mov dec out jne mov dec inc (bad) jg imul ljmp mov popa ret cld jmp rolb (bad) scas mov sbb imul loope mov in (bad) decl addr16 lds test lods je arpl xchg jae outsl fnsave pop lahf jmp jbe (bad) (bad) jmp sub add clc aaa movsb ss push dec out stos (bad) mov jb and jg sbb (bad) (bad) cmp out (bad) lahf mov sbb aad jo xor jb xlat loopne xchg iret mov je mov decl imul pop push fidivl dec mov test aas lahf push pop cld outsl (bad) cmp mov add lret stc xchg lods jl js (bad) mov adc push fwait ss jp mov outsl inc (bad) mov pop mov dec mov int3 mov jne stos push pop lcall decl cmpsb test addr16 ja sbb in and sub mov lcall test pop jb outsl mov (bad) mov mov cmpl ret (bad) pop jno clc cs out jmp dec shl iret fbld lea push sbb xor incl fimull jle (bad) mov push and xchg aas or cs cld js test push sub out mov (bad) dec inc (bad) push lret aad or or jecxz insb fnstenv (bad) sub jl decl xchg mov out mov jl in cs dec sbb mulb push clc pushl cmp out mov pop push aad arpl xchg (bad) das sub dec mov clc loope ret adc leave out and (bad) (bad) (bad) fcomip mov popf jae pop (bad) xchg jle or (bad) sysenter aaa pop xchg sti lret xchg (bad) decl (bad) adc sub jbe sub fsubrl and fnstcw sar faddp imulb (bad) insl mov stos stos adc nop scas push hlt ljmpw scas sbb mov lcall mov sar cmp std ss (bad) (bad) (bad) aas cmpl ja in push jp in xchg imul sbb cmpsl mov cltd mov call or imulb (bad) das push dec imul xchg leave fstpt shlb (bad) xlat jnp xor std jmp push adc jg sbb sbb movsl pop mov inc hlt lods add ljmp pusha xchg inc fisubrl outsl add jg mov (bad) iret mov loope and dec mov push sub les js pop std dec lcall ss aam xchg pop lahf mov pop push loop mov jns jle dec cld in adc cmpsb mov test scas pop push jns mov inc mov pop into clc (bad) testl in sbb bound icebp repz incl push add movsb scas loopne or cmp or frstor xchg (bad) incl cmpsl pop fs sub mov xchg lods (bad) push (bad) add stos pop push dec lock out imul (bad) or xor lods leave jl,pn outsb cmp stc sarl cli iret dec out pop adc (bad) (bad) sti cld ds cli cmp xor loop sub mov mov roll and (bad) (bad) (bad) aas adc mov fs mov adc out xchg xor push or cli (bad) mov outsb xor mov pop sub inc push clc xchg (bad) mov (bad) decl psubsb sub call xor aas adc mov sbb cmp loopne rcl sti (bad) (bad) (bad) xor mov mov pop cld cs sub push (bad) out test inc and les out push cmc lock mov mov imul fs fs mov dec ret mov sar (bad) lcall add popf cmp clc jl sbb test stos add arpl inc sbb fisttpl jecxz jae jecxz jno dec sbb adc fistpll pushf notl ja ljmp mov (bad) or (bad) mov orb mov mov sar (bad) cld aad (bad) cmc inc les add jle arpl out dec push sbb or push cmpl decl clc jg xchg cld ljmp rep out xlat inc sar lds xor pop pop fldt mov mov cs xor inc popa shlb imul push (bad) mov jg fdivr scas dec aad add fistp sti cmp xor inc int3 pop mov aas pop jne aas add inc lods mov (bad) fild jo or and xor jbe push xchg nop fcomip lcall sub pop dec cld push jmp sub pop mov cs mov cmpsb ret xchg push cmp in int3 or aaa cvtps2pi test xor (bad) jg pushl lods mov and enter sbb adc xchg (bad) (bad) (bad) dec out cmp (bad) bound inc or aaa dec xlat cli clc pop test outsb cwtl dec jne aas sbb inc cmc test outsl int3 jl mov sub int dec cmp daa adc dec (bad) (bad) jmp sbb or dec sub adc sbb jno bound (bad) (bad) mov in pushf and sbb xchg leave test sbb es and pop ret (bad) lcall lcall test xchg pop push dec insb or (bad) (bad) jmp mov movb (bad) int3 fs xchg bound sbb sub or lret mov cs mov (bad) sqrtss or (bad) jg insl into mov sarb pop sahf lods loope or addl mov (bad) sbb sub sbb cs jmp lret lock scas das dec pop mov dec vldmxcsr mov mov push cli (bad) (bad) decl inc cld inc aad mov int3 sbb cltd je pop xor test xchg fisub dec inc add (bad) pusha outsl nop cmp pop push xchg (bad) (bad) (bad) mov call mov cmp das je (bad) mov inc pop mov call pop mov cli leave sub test mov adc loopne mov fcomip das (bad) bnd cmp pop jecxz and sub pop (bad) decl inc dec lret xlat mov (bad) fsubs mov rcr push fsubr sar (bad) (bad) ljmp daa add das inc stos or (bad) outsl mov adc movsl xchg out push lahf add (bad) (bad) (bad) pushl jns lds xchg out ja lods mov icebp mov (bad) (bad) (bad) (bad) cmp imul ret cmp add jge fdivrp iret inc out dec sbb sbb (bad) (bad) (bad) ljmp aad pop fsub test movsl dec (bad) sub mov and (bad) adc cmp inc jmp call jecxz in imul jmp add das cli mov fldl push adc leave std sub jp aam loop mov ss adc xor (bad) xchg mov sbb int rcll pushf scas std (bad) (bad) (bad) jnp (bad) cmp push jbe inc mov or (bad) fistpll repnz es clc cmp or inc fld dec subl (bad) decl or in js lret (bad) mov mov (bad) mov scas sbb add add cmp sbb cmpsb cmp jge inc (bad) (bad) stc (bad) jle test push dec push leave xor cmp aam or inc push dec jg add inc enter mov mov mov push pop add mov arpl popf out push stos mov clc mov ja mov cmp (bad) mov out add lcall mov mov lahf push or (bad) mov or mov in test sub jbe push pop lock (bad) jge mov das fildl push or out add sbb (bad) pushl popf fs test pop cmpsl mov pop pop (bad) pop pop insl (bad) notl dec (bad) (bad) (bad) ljmp call cmp pop ret stos xor fwait pop mov mov mov arpl push mov cmc sbb mov push adc (bad) popf xchg or xor mov hlt add mov (bad) (bad) (bad) (bad) call mov xor into or in jo push jns jne dec aas adc xchg popa roll sub ret xor mov add js adc inc fbld mov jmp jbe adc xchg and fs add xlat in popa pushf jbe std (bad) in inc mov mov daa in stc sar xor sar call push bound xchg sbb test sbb xchg into nop push jbe dec or imul test roll xor xchg inc xlat loopne cmp nop and mov test mov dec in jns stos xor jnp lret mov mov pop cmp add aas pushf adc cmp add (bad) (bad) (bad) push add cmp mov adc inc insl pop jle xchg addl mov stc (bad) (bad) pushl mov clc xchg xor dec into xchg jb rorl mov push aas or aaa xchg hlt outsl (bad) (bad) (bad) (bad) stc js daa xchg add clc imul sub dec hlt (bad) xor loope mov (bad) ljmp sbb inc shrb lcall stos movsl idiv lock and and int in cmpsb lcall xchg xchg repz (bad) dec cmp cltd or std aam call (bad) (bad) mov sub sub inc repnz rorb xor test inc dec dec mov (bad) (bad) decl mov pop push push dec ss icebp inc xlat adc imul scas mov lcall mov and imul movsb xor pushf and test loopne (bad) (bad) decl jno mov cmp std cltd cmp dec push sahf pop mov ss (bad) lret (bad) (bad) ljmp cmp in dec sbbl dec ja (bad) lcall sub lcall (bad) call arpl push sub ss add gs shrb fiadd int lahf cmpsb lock pushf push fs push mov rcl (bad) (bad) dec and cli imul cmp arpl stos js repnz (bad) (bad) cmp mov repz cmp cmp fs imul cmp cs jg jne jns (bad) dec pop inc jno nop decl mov lods rorb loope mov push xor dec sub (bad) stc call xchg sbb cmpsl and ds pop int je sar setle fldcw shrl mov hlt call push push out xchg mov andb pushf sub lock out fdivs and pop and fcoms iret jno in lahf cmpsb shl sub loop repnz mov xchg mov mov sbb jg aaa sbb movsb int3 test xor je xchg jge xchg dec sub test hlt loope aam aaa cli ror std jno sub (bad) fiadd pushf orb out sti inc inc incb enter sbb popf in das stc cli add fistpll movsb iret stc enter je cmp mov not loop (bad) decl push push cmp xchg iret xchg inc push or push sti sarb jmp test enter out xchg jmp dec lahf or jmp mov stc xor lret mov inc in dec xlat push or cmpsl je (bad) adc (bad) fstps push add (bad) leave mov sub dec ds jns jl (bad) pop int3 mov pushl in mov sbb es fstpt push pop pushf mov dec inc xor mov (bad) rorl xchg leave pusha jle xchg push push cltd add fwait mulb roll sbb cltd xchg mov div cltd sbb repz dec jae pushf jbe ret inc (bad) jae cmpl (bad) int3 push outsb test push xchg stc push jb add je and add xor outsb lcall fdivr js mov jo in pushl in xchg mov std cli xchg push ficomp lcall leave mov add jns fisttpll lods inc xchg push imul shrb mov push cli and mov nop mov inc lock movsb imul (bad) (bad) (bad) inc mov test imul xchg (bad) (bad) sub shl sub (bad) (bad) decl mov mov xchg (bad) mov push fcomip add inc pop mov (bad) jg pusha sub adc add daa pusha (bad) (bad) (bad) pushl faddl pop and lret roll xlat mov xchg jecxz cltd add pushl (bad) mov fnstenv stc xchg lcall cmp push and mov xchg bound sbb jno mov imul sbb sbbl push popf dec xchg cld (bad) (bad) lcall jbe mov cmp cmp jp or in lret fabs xchg (bad) (bad) pushl fisubrl jns mov (bad) fiaddl lods fldt je mov clc mov xor xlat (bad) (bad) fcomps push cli aaa or adc cmp push loope xchg dec cld mov mov jnp add adcl jb xchg pushf pop dec cs outsb jb flds dec data16 sub imul jl push cltd (bad) aam xchg js clc push jnp lock in insb repz adc in pop dec xchg inc call sbb sahf push shll add mov fstl in push (bad) (bad) call xor inc sbb lahf nop pop jns loope dec push jle outsb mov xor lcall jo (bad) (bad) call lahf sarb mov pop xchg in mov mov adc or mov lcall sbb (bad) dec adc lret daa cmp in ss sbb jmp jne (bad) (bad) pushl mov adc fcomip pop scas fistp sbb xor sbb hlt int jge lock pushl inc (bad) pop roll dec sbb ljmp lahf out icebp aad lcall aaa divl mov jno fwait in cmp jg pusha sarl lret in pop jns aad inc jp aas cmp (bad) repz test push dec sub mov mov xchg mov push jp lahf pushf sbb daa cmpsl nop push push cmp clc adc cmp aas pusha (bad) (bad) cmp jae fs arpl jmp xor ret test ret test das movsb xor dec add (bad) jmp shrl fs imul arpl or call scas push jbe mov test lret jle pop pop add cld mov fwait lods imul (bad) ja adc (bad) jmp (bad) clc mov mov and push push pop dec pop cs sbb add jne addr16 ljmp push xlat adc mov jge hlt push push arpl pop jmp mov and add adc push ljmp cmp jno mov cmp ror mov repz pop push fildll sar or ret fistpl inc nop movsl lods stos inc add push cld decl lock jbe jno lret insl lods movsb cmpsb in cmpsb lcall jmp xchg xchg pop sar add (bad) inc pop push add cmpsb mov arpl mov outsb sbb pop fbstp or push cmpsl out test sbb rorl imul sub xchg out adc (bad) (bad) (bad) gs cmp stc stos xor cmp adc xlat dec sbb mov dec decb sbb xor (bad) ftst nop dec scas stos popf push xor nop or dec ja vshufps jg jne mov or ja lret (bad) sar or push stc xchg das pop (bad) aaa push mov (bad) pushl inc sub mov fsubl xchg loopne mov (bad) loopne mov xchg (bad) (bad) (bad) decl mov dec loop (bad) mov cltd cmp inc into mov sub sub popf pop fs repz (bad) call cmc mov push mov mov sub imul mov (bad) jmp sbb mov jl add and mov inc std xchg fs or mov (bad) (bad) incl (bad) arpl repnz aaa xchg fild sarl push mov out sub arpl adc das sar sbbl xchg test aas js inc adc add sbb test test call xchg call mov ja or (bad) cwtl testb dec mov ljmp (bad) lcall sti test mov mov sub inc fwait push mov jg (bad) dec or add and jno incb loope xchg movsb and push test mov ret (bad) decl mov dec das sbb out jl push jecxz leave movsl repz lods or pop (bad) (bad) (bad) (bad) stc cmp sahf jl dec sub ffree (bad) xchg mov or pushf lret and pop push (bad) incl push jmp push das push dec insb mov mov jns jmp pop int3 sbb jecxz push (bad) (bad) (bad) (bad) cmp sub lcall sub sub mov es jmp (bad) cmp lds push mov pop lock inc and fild mov jle mov call push adc cs decb jb dec leave fcoms add (bad) fistl fs or xchg enter lahf mov push scas jp add inc and mov sar rorl leave xor jmp daa or loopne xchg sub (bad) jns test mov cmp js xchg pusha push (bad) pop and add xchg xchg mov xor adc mov mov test (bad) (bad) decl pop mov lods push xchg adc idiv lds mov sahf jg or (bad) push mov cmpsb mov adc bound cld scas std pusha out jle loop je mov (bad) xor inc pop imul push (bad) (bad) out cli daa std lods sbbb and ret (bad) cmp xchg mov cli dec cmp jmp (bad) (bad) (bad) sahf jb jp bound in cld mov or push (bad) jmp jo pop add jns enter xchg sti inc (bad) (bad) pushl out adc ds push out pop and sub (bad) jmp jnp cmp (bad) imul add inc aas loope out mov (bad) (bad) jmp enter sub adcb adc push sbb (bad) jno cmc cmp xorb sbb ljmp movsb sub or sub cmc std push inc sbb dec adc jl stos add enter adc pop and pop push enter cmp add (bad) (bad) jmp aam dec repz and cmpsl inc test push push test cmp push sub cmp xor mov cwtl je jno (bad) out (bad) fmul movsb cwtl cmp mov mov mov daa sbb js shlb fcmovnu inc je cmp mov fs xor outsb (bad) repz pushl (bad) jbe out ficom lret scas mov ja (bad) xlat pop and jnp je repnz call or pop cmp and clc cmp clc lcall loopne sbb test mov cwtl jl sbb fidivl xchg cmc add mov push xor (bad) sub pop out (bad) (bad) call out shrb pop mov jg inc xor (bad) (bad) incl es idivl scas inc popf dec pushf outsb cli incb pop int3 adc xlat mov (bad) (bad) jg iret adc mov push lret push and fcomi imul rcll ja adc (bad) jmp aam gs lock sbbb inc jge (bad) (bad) call out pop imul xchg call pop xchg cwtl jne jmp std fwait (bad) ficom (bad) (bad) lcall push mov out les jno dec inc mov xchg fdiv out je sbb jg je mov adc (bad) enter cmp mov jge mov jecxz jno adc cltd add lcall mov adc repnz sub jne (bad) (bad) mov fsubr xchg (bad) hlt mov sbb addr16 lahf movsl xchg (bad) (bad) (bad) (bad) jnp pop cmp cld dec jb (bad) mov js (bad) push imull jmp and lea dec push jecxz out pushl out pop and dec pop shll ja fstpl sti sub frstor inc push (bad) (bad) lret cmp idivb mov pop lods (bad) (bad) ljmp repnz cmc leave inc inc xor (bad) out movsl or cwtl jbe sahf movsb pop and (bad) fcomip ljmp xor sti pop out into cmpsb icebp xchg jg mov pop idivl or call xchg stc xchg imul lock (bad) (bad) jmp (bad) cmp std push repnz adc jns pusha pop das stc jno pop xor ret cltd ljmp incl loope dec and dec push ljmp cmpsl adc bound scas fisttpl jge add mov lock sar jge jmp movsb stos xchg mov frstor inc (bad) aas xor idiv aas in std int fisubl sbb push mov in pop lock scas frstor outsl or push pushl fwait push adc cltd fs ret lods sub iret and cmp and stc shlb sub (bad) call sbb inc js pushf mull push mov (bad) ffreep (bad) (bad) (bad) jmp mov lea fistpll lods dec fwait leave out arpl xlat scas dec jp add mov outsb adc adc mov cmp (bad) aaa jge adc jle imul push ss sbb (bad) (bad) fisttp pop mov jmp dec pushf mov cmp iret ret hlt add mov (bad) (bad) cmp fidivl in into cmp mov (bad) (bad) lcall jge aam (bad) push xlat jo push mov lcall iret fsubrs mov arpl (bad) jg pop cmc ret xor stos or push xchg or xor pop jne movsl aad jne lods fadd (bad) aam stos popf or inc mov sub mov add outsb inc mov lret repnz or outsb pop sbb xchg stos stos lock add test int ds jae sahf scas mov jecxz xor (bad) (bad) ljmp repz orb ret xchg xchg push call sbb roll sub jmp das stos mov xchg mov fxch jl mov arpl js pop lea mov fwait jns mov push jne insb fidivrl pslld ljmp imul cmpsb rcll imul das sub push pop cmpsb mov imulb and mov xchg adcl jmp in jg cmpsl xchg cltd fucompp dec jmp and add aas stc mov icebp out mov inc iret lds pop cmpsl rcrl jmp xchg (bad) lcall inc imul btc out adc dec pop leave dec ret mov repz outsb mov jg fwait pop and dec (bad) je ret test ret dec repz pop mov xor add or xor call mov popf and jg cwtl stos lret jmp (bad) jo add adc les push adc and and aas ret or in addl int mov push cmp cwtl or out out dec cmp je pop add and xchg mov gs (bad) (bad) jg sub push pop or xchg inc add push xchg test dec orb (bad) (bad) call inc (bad) push sub sub test xor add mov add fidivr aaa subb xor (bad) lcall out lahf jg cmp leave aas divb fstp pop cmp pop push aam adc enter cmp int cltd test (bad) (bad) jmp cmp push sbb mov gs mov test (bad) (bad) (bad) cmp (bad) cli and sbb ss cmp sahf pop (bad) sti push adc stos packsswb imul lcall mov jg into inc andl (bad) in cvtpi2ps and cmp sbb idiv (bad) (bad) (bad) cmp arpl out pop lea jne mov jnp cmpsl adc xor fsubrs rcll lret (bad) (bad) decl mov push fnstenv out pop sbb mov mov jo push jno push jmp pop mov (bad) (bad) dec int3 lret sbb repz (bad) mov and out scas mov cmp (bad) (bad) ljmp cmp repnz stc shr sahf ds sahf iret (bad) (bad) (bad) mov pop into out xchg push movsb mov adc fdivl mov imul xchg ljmp scas cwtl jbe imul and jb sub mov (bad) (bad) lcall fsub xor sub jge or (bad) into and call add scas (bad) (bad) (bad) dec add test pop fldcw (bad) (bad) (bad) lcall aad cmp rol ja icebp xor add mov (bad) pushf push fldt idivl (bad) (bad) (bad) call push cld pop cmp mov repnz mov lock inc cmp rcll test pushl fs mov test nop xadd xchg in loopne lea scas (bad) (bad) (bad) pushl adc xor push lods iret xlat fisubr mov xor outsb push movsl cwtl scas jae mov (bad) (bad) pushl adc lret cmp mov gs inc lahf push lods stos lods fdivs mov call fcmovnb sarl dec jg gs xchg mov pop xchg cli mov fwait aad call ret inc cmpsl jae mov fldenv mov push sbb out stc dec lcall pusha jl frstor iret (bad) xchg xchg dec fwait sbb xchg mov insb jmp (bad) jmp xchg sub cmp xlat push adc lret gs xchg daa aas sahf stc mov movl xchg mov dec out push into fsubl dec cmp call addr16 jae repnz lods inc sbb dec in pop popf cmc das xchg leave pop pop mov push xor lcall shll cmpsb (bad) sub add mov lahf sbb imul je in cmp mov scas mov pop repz mov fcomip sbb movsl sbb cmpsb fist xlat (bad) jmp ret ret popa js bound inc popf out sbb sub stos sub mov (bad) (bad) (bad) lcall mov stc out sar mov sub xchg jmp movsl (bad) xor rolb (bad) (bad) dec ret data16 or dec repz lods repz popa pusha push repz jne ljmp mov dec data16 fmulp int fdivrl into into jb fcompl ds ljmp icebp inc out (bad) cld cld mov aas push mov lea jge push lods scas in fidiv jge push leave (bad) jb int3 dec out aad mov outsl enter pop fnstsw add pop inc and stos or fnsave push bound sti ljmp cmp icebp mov int mov mov jnp xchg out dec mov roll scas das pushl ret push jle push les xchg outsl (bad) (bad) decl jno xor neg fmull sub jae (bad) (bad) jle push lea aaa jae enter lock xchg jb adc or ljmp mov dec cld adc pop lock jae pop xor mov int jecxz jns out fisttp imul jmp pop aas mov sub int ss jne dec xor in lcall add pop inc rolb pop push test and ret mov add push bswap mov cmp test lcall (bad) sbb rorb adc outsl push jge pop int3 pop test mov in mov js mov (bad) mov out in fnstsw fdivrl lcall adc or jns call addr16 push fwait jecxz or dec das sar mov dec mov sbb cld divl popf xlat mulb mov mov test inc mov ljmp add (bad) dec popf inc lcall jl call pop pop (bad) (bad) (bad) jmp dec jl mov stos jmp rcl fwait adc xchg out cs and pop mov jecxz mov repz ja mov and or sbb (bad) cwtl movmskps outsl mov nop mov ja xchg int mov aaa adc inc mov xchg ret (bad) jmp push call pop cmp jecxz cmpsb aas mov push jns xor stos lods (bad) incl dec cmc stc (bad) xor outsl push scas pop call jmp data16 xor (bad) insl aaa (bad) fbld mov sarb jg fcomi mov push dec xchg adc stos pop dec mul mov mov inc (bad) pushl outsl sbb out adc in (bad) sub (bad) (bad) incl aas sub fcomp psrlq addr16 mov jo jp (bad) mov inc push fs lds into clc ficompl pop sbb mov mov (bad) std (bad) mov xor push mov adc int jg mov loope int in outsl in imul xor (bad) (bad) (bad) call imulb imul loop lcall pop xchg mov loopne and jmp sub imulb icebp dec (bad) (bad) sub add dec mov rcrl and pop inc lods in jg popa adc (bad) (bad) (bad) cmp and jl hlt jb adc mov and hlt (bad) fistpll (bad) sub add xlat xlat rcl movl or ds xor sbb xor sub scas in inc les add mov ljmp add push or dec pushf iret loope aam dec pusha mov or imul sub (bad) incl mov pop lods daa mov inc and adc pushf mov mov test or (bad) (bad) (bad) (bad) call and add mov push repnz mov inc pushf outsl mov shr adc lods inc les fiadd pop cmp scas jo and pop sub mov jns out bound fcmovnb mov shll test loop incl inc jbe push jmp push jno (bad) (bad) (bad) incl stc fidivr nop cmp jecxz or cmp add into jnp push mov into out (bad) (bad) lcall xor xor hlt and sub jp push add mov mov aas les mov loope inc or imulb jg fbstp mov jae das cld (bad) div jg cmp shrl mov mov negb mov fdivr (bad) (bad) (bad) aas adc xlat cmp cli mull lea loopne pop lock jl leave adc mov and imul add das nop lcall cli ljmp mov mov js mov add adc pop jns hlt (bad) (bad) jnp add or (bad) mov pop test mov mov test mov push rcrl mov add neg add lea and arpl mov adc repnz cwtl inc movsl out gs mov inc enter out int mov add incl ret (bad) jmp xchg nop (bad) aas cld incl adc mov stos sbb loop cmp cli (bad) (bad) ljmp xchg mov xchg xchg inc ss es daa lock cltd dec xor out ljmp out lret test mov mov clc add (bad) ljmp rcll jecxz movsl add or add pop sub cmp sbb mov sub daa adc dec cld xor movb test jg adcl lcall mov push inc gs sub sub mov jecxz test stc popa pop mov (bad) call outsb dec or stos push mov adc jle,pt pextrw or mov loop sub xlat or in (bad) arpl enter and (bad) lcall rorl ret add dec int hlt lds push sar inc xlat (bad) mov sub (bad) (bad) (bad) dec adc sub cli push push loopne lock xcrypt-cfb cmpsl out loop cmp adc inc cwtl cwtl scas (bad) (bad) (bad) incl adc push adc cwtl push in cmpsb icebp ret lret xchg dec addr16 xchg rcrl dec decl jmp movd push enter mov inc cmc inc icebp pop lret inc je mov inc sbb (bad) into pushf pop cwtl cmp addr16 mov jae outsl adc notb (bad) inc outsb stos int3 fstl je dec jae mov nop (bad) sub lret les hlt decl sbb out sbb aaa or mov mov inc push pop iret mov mov mov in jle mov cmc (bad) call nop or adc and repz ret mov xchg icebp xchg add dec popa cld idiv imul pop gs push xchg sub int3 sbb rcll (bad) cmp ljmp cli dec push xchg add outsl jnp popf push (bad) (bad) (bad) lcall pop mov jmp mov insb dec mov cmpsl mov out inc mov loop (bad) (bad) (bad) jmp andl pop cli mov xchg jg jne mov repz (bad) (bad) (bad) (bad) jge or and lds and xchg inc test xor (bad) jae test xchg fdivrp (bad) incl test out std or faddp push mov icebp icebp insb mov fstpt daa jle cmc out xor or jg push fwait inc fnstsw leave adc cld lods push mov xor (bad) (bad) (bad) fimul icebp add fiaddl xchg pop leave fs fs or and stos (bad) (bad) (bad) call loopne push push iret push cli (bad) repnz pop mov mov lock cmp cld ljmp call or inc jle ror or and mov cmc (bad) fisttp pop scas xlat adc jle inc cli cmp hlt mov inc fdivl lock xorb adc xor mov aas add repz imul xchg stos gs lcall mov popa sbb ja mov jns test pop dec incl popa lods or data16 fcmovnb inc sub std (bad) icebp in add push inc lods cli dec pop mov dec dec test test ds inc incl mov (bad) (bad) in ljmp je dec jge mov adc sbb push and jmp fs and sar add div loope ds mov jns cld (bad) jmp mov cmpsb sbb cs sub mov bound insb cli lret mov test cmpsb xchg scas nop xchg (bad) addr16 test and jno je lcall xor push jp add repnz in cmp movsb jne enter call ljmp push add xchg loope cmc adc incl lea add sub clc push test adc pop rolb sbb rolb sbb sbb lock loopne mov stos sbb mov push (bad) lcall data16 cmpl mov sub push sub push sbb lahf std aad pusha stc insl andb out ss xchg rorb sahf add scas (bad) inc pop movsl jg,pt lds mov leave cwtl jns (bad) (bad) jmp jae jl sbb leave add inc lret add lret mov repnz jb jmp (bad) xor (bad) (bad) lea insb adc fnstcw cltd cmp and dec xor dec cmp inc test idivb xor int3 xchg repz sahf das outsl incl or xchg popl mov add mov stos out push pop pop lcall ret add pop mov jg ljmp pop jmp jo loope jp lds xor mov pop cmc (bad) decl sub test out adc add addr16 lcall insb mov sub pop leave xchg push sub lret iret cmpsb lock mov sub jecxz and lret rcrl test aam lcall gs imul mov xchg in adc roll inc mov rcl gs xchg dec xchg movsb sarl dec lret pop orl aaa addl loopne xlat ja mov jb repnz call xchg shr int3 rolb lock stc and cmpsl xor mov or inc jnp (bad) push mov std jl daa mov lret push jb (bad) sub jno lea mov pop dec popa cmp sbb dec jle stos mov pop pop jbe jg (bad) cmp iret (bad) xchg call leave (bad) insl mov push jnp lahf (bad) (bad) (bad) incl dec cmpsb inc sub add mov sub loop push aas fdivrp ljmp std and push out mov rcl inc and jne pop lret in add (bad) (bad) (bad) jmp leave pop idivl sbb inc test cmpsl pop mov fnop mov ret adc (bad) jmp je mov inc (bad) jmp fs iret jge mov sub cld (bad) fild dec mov rol dec xchg (bad) mov dec jge lods lahf clc aas mov std addr16 pop jle sub roll ljmp sub nop inc cmpsb jnp sub clc fnop dec aad sahf lret and mov jecxz cmp sub call lds sarb (bad) jg adc cs mov cmpsb push jbe imul mov (bad) (bad) (bad) call xor ja lret pop lcall cmp ds mov pop sub sbb inc clc (bad) decl mov add cli cmp jge scas aas add or push incl (bad) imull in pop imul (bad) jge jmp fsts pop sub mov popf inc sub push add pop std and ljmp sahf xor mov cmp or pop push frstors pop (bad) (bad) (bad) fisttp (bad) dec arpl xchg fstl test jno lcall dec movb es loopne (bad) (bad) lcall sub adcb das shl fcompl lret cltd push data16 loope mov (bad) (bad) incl mov push jns out inc push fwait xor decl pusha add jmp mov jno (bad) (bad) lcall (bad) push mov fmuls dec ss (bad) jbe in sbb jg (bad) (bad) decl mov fimull fadds testb mov cmpsl mov lods jbe sub push cmp lds adc mov inc add popf (bad) test scas mov sub in mov mov arpl and in mov lock jl imul dec sbb (bad) (bad) (bad) sbb mov pusha popf cmp jne pushf xchg lock lock inc outsb mov loopne cmp fldl shrb (bad) (bad) (bad) jmp inc jb mov adc ror and dec sub dec mov inc (bad) (bad) (bad) decl mov fs pop imul bnd addr16 rorb and mov add and decl jns cmc sub sub dec mov and aam (bad) fisubrl and inc mov cmpl adc aas (bad) (bad) (bad) call inc lcall stc outsb lods dec jmp jge or (bad) out les (bad) pushl repnz fs (bad) fildll push mov loop iret cmpsl or (bad) (bad) mov xchg jbe ja aaa hlt jne cmp mov (bad) call clc or out dec test dec (bad) sti sbb mov mov data16 cmp in scas loopne mov icebp mov js mov sbb mov xchg cmp outsb xchg mov lock pop outsl xor xchg push cltd dec stos pop dec sub iret mov ljmp and (bad) or outsb jnp fsub xor mov pop cmp dec (bad) out xchg ret in pop lret add and inc test add (bad) decl fmul jp mov jns lock jo jb jns pop cltd mov mov (bad) call loopne jp dec push lea std inc scas js cmpsb mov loope (bad) jg clc (bad) repnz push lret push pop mov fbstp (bad) pop sub adc cltd mov cmpsb push add sub mov xchg mov and (bad) (bad) clc jno pop sarl sub leave sar pop dec mov pop adc xchg xchg lcall and fstps rcll jle jmp push dec xchg xchg inc push or pop mov (bad) mov jno push (bad) xor push test inc jb and stos add and jb cwtl aaa (bad) out decl sbb in dec inc inc loopne adc xor cld test cmpsl jl or dec nop clc mov mov gs and (bad) jmp xor (bad) ljmp jg fistpll insl inc mov jmp int3 and mov push sbb (bad) incl imul hlt mov das fcmovnbe out inc jle repz xchg ljmp lea insl adc mov sub jmp lods in sbb (bad) (bad) ljmp sti inc cmp mov ficom notb mov (bad) cmp icebp sbb idiv aaa xchg ret je mov hlt bound jle (bad) (bad) lcall movsb xor mov jnp rcr inc outsl or pop (bad) jo xchg mov (bad) call pop push or mov jne imul sub dec incl int inc addr16 loope decl clc insl adc bound icebp (bad) mov jne (bad) sbb daa je add push sbb int lock fwait mov repz jp jmp sbb hlt jle out ret fdivrp cmc adc cld (bad) (bad) out ja cli jge movl cmp aas cli inc incl es jg xor jl push inc mov int add inc das sub ret inc mov mov cld jae cmp outsl pop sti jg or mov ret outsl sub xor or int sbb pop loopne pop arpl lahf jle mov inc jnp dec cmp (bad) rcll repz adc (bad) lcall inc dec push adc adc lret addr16 sbb cwtl or (bad) push roll sub lcall push inc lods add ljmp test mov jno insl dec and imul pop xor sbb jl dec mov vunpcklps push or rorb decl cmp add mov aad popa in inc cmp xchg ret adc orl repnz or pusha nop or pop (bad) lcall popa and lods hlt cltd dec repz inc sbb (bad) out push cmp les pop clc adc ss std jg gs mov mov shrb leave enter loopne sbb push or jmp add cmp imulb xchg jg (bad) (bad) (bad) call inc ds mov lods stos sti jg push lods jle mov pushl xchg testl jmp sti adc test adc adc (bad) call (bad) ljmp clc xor cs lahf inc xchg (bad) xchg outsl divb xor cmpsb out test xor cld jmp bound cmp pop enter pop mov test dec bound or test xlat add dec lret std ljmp (bad) pop lret pop js je imull (bad) xor lret push incl and sub push enter fmuls int push add jnp cld or cld xchg movsw adc push add (bad) (bad) pushl mull jl mov jmp mov int3 inc fmull lahf add and or push pop push jg inc dec inc cmp mov pop pusha mov sar cli xor mov and xor imul mov jle sub mov call ret push jns stos out stc lock lock adc sub incl add mov jne stc pop sar (bad) lcall movsl leave test stc scas or stc push popf push (bad) sbb (bad) jl mov xchg fwait dec loope xchg jge and (bad) (bad) jmp inc out scas inc imul nop mov or mov mov mov (bad) (bad) mov (bad) ja push mov sbb cmp lods stos outsl sub pop test adc sti je fwait xor mov lds movsb xor cmp inc xor pop and jmp icebp in push dec ret dec ja imul mov xor xor (bad) (bad) (bad) jg xchg pop stc xor js jle adc add (bad) mov pop cld (bad) jnp (bad) sar cld cmpsl adc pop shrl int3 xchg data16 dec mov popa jg icebp (bad) mov cmpsb (bad) repnz in idiv hlt daa inc jmp (bad) fwait push cmp inc mov or test dec in (bad) incl ret push fs or jmp daa test cmpsl inc lods jne sbb jnp jbe mov push into daa scas cli (bad) pop sbb call push fisubr sar call cmp notb mov in push lds sub pop std (bad) (bad) (bad) lcall sub push jo mov mov (bad) or (bad) ret sub (bad) fistpl pop mov into cmp sarl pop add (bad) or mov xchg fstpl fistpl xchg xor lret (bad) call xchg push jns repz (bad) fmulp adc sbb mov add ljmp and mov mov neg lds int mull imul stos sub decl ja mov dec sub xor clc enter sahf loopne bound cmp jnp cld (bad) (bad) jg bound fldcw jne daa dec pop push into (bad) mov xor mov mov ljmp (bad) mov lods lods insb push xchg fistp pushl out test hlt stc cli es cmp insb aaa ret pop repnz add pusha test mov pusha test sbb cmp rolb xor (bad) nop orl (bad) jg loope cmp pop ret mov or sti mov pop imul (bad) (bad) lcall iret jmp mov jb mov add xchg push faddp into lods fstps (bad) (bad) fnop mov movsb mov outsl popa mov adc mov (bad) ret (bad) decl fsubr inc movsl test lahf push dec lret arpl or cmc mov dec sub call std (bad) ljmp inc sbb cltd addr16 mov inc arpl cmp ss sub and jg sbb mov sar (bad) lcall aas (bad) testl call pop lahf xor ja mov (bad) hlt loope cs jns jecxz xlat ljmp dec mov push movsl lea daa mov adc addb mov movsb adcl stos push jmp pop xorb cmp addr16 pop (bad) mov jmp rolb dec xchg (bad) loopne fcmove dec test test cld in mov popf int jge cmp cmp xor popa scas stos sub addl jns subl test add push scas inc xor imul add lahf sbb aas lds inc enter sbb lcall xchg jnp frstor (bad) mov pop iret jmp mov mov (bad) (bad) sub xor sub mov (bad) incb test out mov orl cltd loopne mov pushl (bad) mov imul stc pop fcomip jge mov dec repnz aaa mov push leave repz mov adc sahf out fmull dec mov addl mov (bad) (bad) (bad) call stos imul repnz inc out int3 and loop imulb out loop xchg xor lcall call cwtl mov inc sub and outsl jae or jo mov jo dec cmp ljmp add push inc repz or (bad) iret jecxz movsl mov aas sbb das jl clc or outsb fstpl rcl push ljmp sub sarb pop (bad) and add into insb out xchg cld (bad) incl test fdivrp inc push fcmovnbe sahf jg cmp jg fcomip sub imul (bad) sub xchg call cld (bad) clc popf cmpsl insl sti mov loope testl inc push and sub popa xchg adc test (bad) call or pop cmp mov jb xchg adc and push add (bad) (bad) call adc scas mov popl (bad) leave sbb dec (bad) mov inc pop add sub das clc incl cmpsb add out in loope hlt mov mov movsl mov pop and (bad) (bad) (bad) cmp jbe imul xchg ja insb and scas cmp xchg or out pop xor cmpsb mov push clc loop fdivs movsb test rorb mov mov andb sbb (bad) (bad) incl dec stos pop loopne dec nop ss sub lods and frstor push sub pusha adc decl xlat pop adc (bad) (bad) ljmp fisttpll dec and push or testl and and (bad) (bad) (bad) decl (bad) xchg icebp cmp xor scas mov bound push dec addr16 mov adc (bad) (bad) decl mov (bad) xor pop cmp addr16 stos stc cmpsb mov imul sbb ljmp repz jne shr or dec roll xor incb inc ljmp in outsl pop fdivl call inc (bad) lock out clc or mov pusha push das inc mov mov pop push add aad mov rclb scas mov xlat jbe ds repnz (bad) aam fisub jp jae xor lret shrb (bad) ja (bad) (bad) (bad) jg pop mov mov cli jne out adc and jle cltd lahf inc xchg xor sub lcall add cmp inc aaa pop pop or lcall xchg dec stc stos pop mov das cli (bad) call repz push call scas push insl call or scas mov add (bad) pop lds (bad) clc inc inc adc (bad) pushl and or and lock (bad) push imul (bad) (bad) call pop jp add sub push add das jg dec push mov adc (bad) adc (bad) add xor outsl inc inc aaa mov insb pop stc xor in (bad) call fisubrl adc mov xor ficom inc fwait nop mov (bad) (bad) (bad) lcall dec dec in mov sbb data16 fsubrs jp push mov hlt jns dec (bad) call std les fiaddl mov sub add cmpsl fdivrs (bad) (bad) fmul or inc (bad) xor jmp mov inc sbb push neg movsl lret rolb (bad) out mov ds ljmp loop adc pusha lea sub dec push fldl sub dec insb faddl ret sar (bad) (bad) out stos add mov xchg dec and add xorl fdivrl jge sub pushl (bad) outsb mov xor mov push inc cmp icebp pusha xchg (bad) cli shr adc (bad) (bad) decl sbb test xor cmp xor jecxz mov frstor mov leave test inc and mov (bad) (bad) (bad) push in jecxz out xlat push pop stos mov cld aas shr xchg adc mov or dec (bad) lcall pop add mov or jo roll addl xchg and sub (bad) ljmp mov ds lahf fistpl fistl cmpl pusha (bad) cmp sub xlat or mov push cmpsb and inc inc mov stc stc pop pop lret push into push or push pop cmp sbb subl cmp sbb das and data16 or push mov sbb into sub (bad) (bad) (bad) lcall mov xor add add xor and movsl and ret xchg add xor jecxz or (bad) (bad) (bad) in fdiv out sub cs loope out cmc nop inc xchg and icebp decl mov cmp mov (bad) (bad) push jnp inc rclb cmp inc add or rclb iret push iret mov cli (bad) (bad) jle jnp fmul loope and mov movb dec xor stos pushl clc add stc adc xor (bad) (bad) call or ss (bad) mov dec movsl add lahf pop (bad) and and (bad) (bad) (bad) push incb xchg jnp jg leave mov (bad) pop xchg mov int and insb fidivrl movsb (bad) (bad) (bad) call pop ss mov xor lds add scas mov ds arpl jl xor mov clc lahf ljmp jns je fidivr xchg xchg outsl xor and mov test (bad) (bad) (bad) cli (bad) ficomp fldenv xchg popa sbb and xchg rcrl dec cmpsb int3 mov pop lock jmp adc scas inc adc lods sbb (bad) mov pushl adc mov mov lods sub xor pop cmp xor mov aas call scas adcl stc inc loopne shll lret cmp nop cwtl cmc adc scas cmp stos and test push lods jmp imul frstor popf pop cltd lcall out xchg pop fcmovb fidivrl inc movsb loopne push das cmp arpl pop loopne cmp sub dec fs mov popa cmpsl push (bad) (bad) (bad) (bad) incl inc jb arpl push xchg or (bad) jne xchg rclb dec lea pop pop (bad) (bad) (bad) ljmp or call cmpsl addr16 movsb sbb xchg cli test loope pushf or out (bad) decl out icebp inc in pop jo adc movsb (bad) in dec scas jecxz dec pop sbb xchg decl sub push ss fiadd add jno mov push cwtl jge push xor push je pushf popf pop mov out lcall fsubrs fwait sub lret mov mov xchg and push mov pop fneni(8087 cmp mov scas test loop ret iret jecxz out cmp jl (bad) (bad) (bad) (bad) ljmp movsl pop repz cli daa jns es mov and aas cli enter mov (bad) (bad) inc call mov fcmovne mov repnz int3 fidiv pop ret cs les cld call and xchg int3 fwait push jl clc pusha push aad add cld push out add (bad) lcall imul fs xor call pop cmc xor test ja lcall (bad) xor mov adc aam push mov (bad) jmp push or pushf mov into xchg frstor xlat enter (bad) lcall mov cmc sbb (bad) lret in mov pop (bad) imul mov xor in pop cltd xor aas (bad) std lea int mov (bad) (bad) (bad) fistpl imul or scas das xchg inc sub es inc jae xchg ds mov push cld (bad) incl ficom sti and mov clc aam test jp (bad) (bad) mov mov adc push xor into inc inc out add sbb xor clc out add pop movsl shl inc lcall lcall xchg inc nop sub adc inc cmp addb paddd out jmp xorb mov and add mov sub fisubl mov (bad) lcall jne shr mov inc inc rcr fisub jbe inc shlb fnstcw inc js loopne mov les loopne int and mov in mov lock push loopne mov loopne mov pop sbb into pusha xorb out fld cmpsb and (bad) loopne mov loopne scas divps insl dec insb mov add pusha adc rclb lahf scas push mov cs clc fmul fcomi jo cmpsb mov xorb pop rclb mov nop enter scas or enter sarb pop lock sub mov inc mov xor (bad) fdivs push es jbe push shlb (bad) or cwtl dec inc enter or neg xlat mov (bad) mov inc mov test lock jle and cs jnp data16 js mov push dec jle mov mov cmp push mov xor flds enter xchg push push cmp dec das sbb outsb fisub sbb push nop loopne dec fwait add pusha scas enter fisttpl mov rclb fwait dec adc xchg out add imul sub push push sub popf ret sbb incl push pop mov push jo (bad) jo mov mov push pusha push mov ds xchg and push (bad) cmp jo fiadd cmp sbb sarb adc and cwtl pusha mov push shr ret push mov (bad) out data16 sbb enter cmpsb fnstcw pop fsubs sbb out xchg cmp pop push push cwtl cmp out push test inc push inc pop iret cmpsb scas push popf fwait push dec shl mov sbbl mov xchg sarl push dec data16 rolb pop xor push sarb (bad) push js dec sahf push mov pop or push push in imul push enter push push add xchg inc icebp add out push push add mov inc mov xlat push push add out cltd mov push jp jae and notb pop scas or aad push cltd pop popa std sti cmp fsts push sub aad push ljmp jbe sbb add mov jo add (bad) insl mov or sbb out hlt pop jl pop push pop repz add test mov adc jle ficomp stos (bad) test xchg pop addr16 in insb add std std sti push pushl sti pop cwtl (bad) enter leave enter fstps pushf xor aas push mov pop (bad) (bad) ja mov jge xlat pop mov aam add cmpsl test leave pop dec mov aas push jl pop jge stc aas rcr fistl movsb outsb (bad) outsb jns adc dec inc adc xchg cmp (bad) out mov add cli mov arpl dec imul pop nop pusha jbe fdivr pop pop jae mov add pusha pop pop mov out jae jbe (bad) pop fstpl addr16 mov xchg popf std out pop pop pusha bound sbb divl mov (bad) out mov pop push pusha ljmp (bad) out fwait bound add pop bound pop push outsl jle fimul sbb cltd (bad) pushf pop pop push pop mov fildll xor pop neg ficom cwtl sbbl pop push cwtl xor push pop mov add (bad) idiv aas (bad) js bound lcall bound addr16 in stc xchg add jbe push test mov outsb jg (bad) mov mov jbe dec in xchg ja fbld clc mov mov leave aam (bad) ror int (bad) into aam xchg inc lods mov stc xchg fsincos inc fucomip xchg pop add in lret pop sbb out movaps mov mov imul aas lcall in bound lret fs fs bound stc dec sub push lahf ret in inc pop enter in mov lret aam pop jno mov (bad) (bad) cmovs mov fs enter int xor mov pop and pop pop enter incl dec sti sbbl dec fdivrs sbb outsl jo cmp pusha bound add roll movsb and arpl fsubr aaa mov int rcrb jbe iret mov jle aas decl cmp js xorl imul fsubrs or sbb ja stos icebp push lret (bad) mov mov add mov out mov stos cld insl mov pop jns insl cld stos dec int3 jg arpl jmp cwtl sbbl loope les cld xchg xor lcall imul mov mov mov pop iret jb mov dec add jbe fwait dec pushf push mov pop iret rcl test lahf jbe dec add pop mov pusha arpl loopne loope insl mov mov imul pop jle adc mov mov aam jo fs cmpsl inc mov outsl popa pushl faddl lret cmpsb cmpsb pusha jno pop pop aam sbb enter inc add pop add jg incl (bad) js mov test fs fsubr fwait outsb andl int aam (bad) fwait test leave popf sub loope popa dec cmp (bad) popf cmp outsb aam pop sahf into pop fistpl cmp pop outsl fisttpl dec dec cld and ja enter js pop mov shl cmc (bad) (bad) dec mov test bound pop xor pop cmpsb movsb int3 cmp int mov je popa dec loope (bad) jno int3 mov out stos (bad) sub test add test jo (bad) cmp loope aaa jmp adc popa mov mov repnz in dec (bad) jne jne sub and cmp mov fistpl dec add clc cld cmp cmc dec mov mov add icebp outsl and ret push sub mov mov popl sub dec lahf add xor or scas loop scas dec leave and or and mov not lahf mov mov cld add cmc enter popf aas jge fiaddl push sahf add fsubs test daa inc xlat mov pop mov mov stc loope ds out add fisubrl aas stc fldt pop cli jecxz aas fsubrl pop mov sarl mov cli out aas fbstp clc in lods ja loopne,pt add jecxz out movsb mov mov mov repnz (bad) enter mov inc dec add lret mov movsl insb lock inc shl sar mov sub xchg cmp dec dec fidiv pop inc cmp (bad) outsl sub cmpsb add enter lock push gs jno push les and mov mov add pop or and jp cwtl sub hlt loope cmc sub aas jmp ret cmc jecxz cmc in in leave (bad) fcompl fistl enter mul lret in (bad) lea fistpl int3 cmc loopne mul (bad) negb out int div out imul iret das (bad) jbe data16 into mov negl negb clc call mov mov iret clc jmp jmp das pop sub ljmp movsb pop clc cs stc ljmp sub stc jmp movsl cmp pop cs xchg popf mov cs aad (bad) cmp push int3 pop iret cli jmp cli in aam (bad) sbb in das pop das rcl cli pop inc (bad) and cli das sti in xlat fsubrl movsb sub mov (bad) das ljmp cmp sti in sar in cs fcom pop mov aam and pop nop lret xlat push cld out xlat add das rcl out xchg (bad) aam cld out fisubl aam das fistpl sub das out (bad) lock das (bad) mov xlat mov add xorb and ret push dec repnz test add or push cs test fcom (bad) adc aas and daa push sbb daa movsb adc or aas inc mov test cmp movsb fstpt icebp push pushf jo fstpt js dec cmp pushf movsb fstpt fadds ds jo dec cwtl cli out fstpt add or mov mov mov fcmovb lcall mov enter enter out test ljmp (bad) notl aas add rcll nop subl or and add fild add add incl ja push (bad) fsubs adc push or push add iret add inc add mov sahf aaa add adc pop add add aas xchg xchg lock out rcl aam test cltd cltd xor bound inc (bad) jg jmp xor subb subl jmp jg iret jnp fcompl fstpl aad or mov sub popf inc and jmp aad enter cwtl jle jge xor cmp jg jle xchg add push adc outsl test lret lret std div cld clc clc add sar mov jne fidivl jmp sub lret test fsubrs gs jmp dec fcoml jmp cmp ret (bad) sti sar cld (bad) xor sbb ret mov popf (bad) into roll test ffreep xor xchg add aaa nop hlt (bad) in rcl in aam add jle xchg into jp mov js out add (bad) xchg clc loopne stc loopne add enter (bad) ret inc repnz test mov (bad) in cmpsl mov mov mov or loope mov mov (bad) xchg xchg std sti mov adc out aad add jle mov outsl xor enter (bad) jp loop stc fimul ljmp incl (bad) std enter cld in inc shll jecxz mov pop test mov mov idiv pop div jmp iret in rcl add jle pop mov jl loopne stc std or fiadd (bad) (bad) jg xor cld mov jecxz add std loop mov mov jecxz mov jge xchg xchg std hlt hlt ljmp pushf add inc jle xchg pop jno incb fidivr fstpt cld fnstsw (bad) insb adc sub xchg mov fimul sub mov popf jge in push and mov dec in cld lock or leave mov negb jg fidivr fildl std fnsave (bad) addr16 xor sub std fdivrl (bad) (bad) rorl dec roll in ret dec xor in out out call cwtl mov out (bad) incl call jno fnstenv xor fldt les movsb loopne (bad) jnp fnstsw (bad) (bad) (bad) rorl dec roll out lds dec xor out ljmp ss loope or int3 mov loop inc mov test leave in out clc movsl jno xchg in pushf sti fdivs fidivl sbb push fsubrs xor and popf jge call ror leave call pop jmp call or push adc jle adc pop cs jmp mov in mov popf (bad) cmc inc out mov aam push cs mov cld fidivrl fdivrl cs add nop mov dec roll jmp add jge clc clc jmp shr aad push (bad) adc ss jle xchg pop cmp mov and add shr rcll in (bad) out shl lds shrl (bad) (bad) popf jge jmp push and rcl fdivrs dec jmp cld cld in fcomp out fcmovu add jle pop inc mov jns cmp in mov sarb xlat aas out mov aam rolb movsl add or add jbe adc jge in (bad) lcall jbe ret gs sti sti out pushf lock add jle pop (bad) xor pop cmp mov sbb lcall cmpsl lods add movsb mov adc out fisubrl pop data16 out pop or sti pushf icebp (bad) add (bad) mov pushf push mov (bad) hlt jmp lock aad pop xor shll bound lods add rorl dec roll icebp (bad) jge dec xor icebp pop icebp fstp bnd mov inc mov cmpsl pop jne ljmp out mov and (bad) sahf pop orl or subl dec mov loope xor inc loop pop (bad) cmpsb sub repnz repz repnz or jmp popf and pop mov xchg mov push les push mov lahf fcos in mov shll scas mov inc jge hlt in pusha cmpsb sub cmpsl mov cmp cmc in add repz mov dec lcall std in mov add fwait sub pop add cmpsl pop pop push in jg fdivrp ljmp roll mov push sahf out add call jmp setbe les sti hlt loop cmc add sti sahf mov (bad) jnp cwtl push (bad) mov out xlat mov fisubl push sub sub mov inc and or arpl mov mov mov ror lret ljmp lret pop dec data16 scas lods in int3 (bad) cli cli fisub add inc mov outsl daa sbb popf imul jno movsl jne mov in add add gs mov xor jg fstpl (bad) cli fdivr cld fbld js (bad) std fisttpll mov inc lcall gs adc (bad) out aad xlat mov (bad) xchg xchg leave cwtl cwtl add rcll mov jns mov push xchg and ja or (bad) dec jb mov mov sahf pop aam aaa aad cmp xor sub pusha xchg popf stc das mov (bad) ror mov jg shl or stc push cmc add enter test stos (bad) mov stos lret sbb dec push pop (bad) dec pop dec scas lret imul out fs and lods and xchg ljmp test mov and push add mov push jo iret and add stos push push fbld rorl and dec test mov stos mov add xchg loope pop and (bad) aam das mov (bad) xchg pop aas push adc and add stos cs xlat pop push inc inc lods out fs outsl and push adc and inc push pop and sub pop sbb push stos aaa push pop sub push inc stos add iret push inc shrl movsl and mov push mov stos ja mov pop xor rorb and sub pop lds cmpsl adc imul dec mov inc imul or add mov xchg push jg xor and mov add lahf push adc leave movaps push aaa sub aad lods iret mov sbb sbb addr16 mov pop jb sar and mov add push xor mov sub or aad lods dec mov sub mov and dec call pop mov inc jb pop int3 ret sub and into (bad) mov std lret leave (bad) mov stos lds enter ret fstp (bad) adc lds movsl mov lcall pushf ret mov lods mov add mov enter pushl leave mov int3 mov iret ret rcl mov aas sbb mov mov mov (bad) mov sahf (bad) mov ret mov (bad) lds mov mov push mov mov add push rorl stos fcmovnb (bad) fildll loopne iret loope rolb (bad) fnop int aad fcmovbe (bad) ficompl inc inc mov (bad) mov in jo xchg lret sbb mov push mov ja add adc dec or mov js mov mov iret lds aad mov (bad) lret outsl fcomps fst in (bad) or push mov (bad) leave (bad) lds test and (bad) cltd jnp scas mov push xlat into shr fcom les push and cmp aam les add mov adc enter push out ja loope mov (bad) out (bad) push loopne shrb inc cmp mov mov push jbe call pushf cmp jbe lds outsb mov stos fldt cs loope out push and cmp mov fisubrl pop mov pop adc nop inc push lret ja sarb je ret mov (bad) mov and mov aad mov out push lods mov loope mov repnz mov mov mov popa add in and (bad) push (bad) lds aaa pop add lret les rcr stos or xlat jecxz sbb lret xchg rol mov rorb shrl rorl mov iret data16 loopne add sbb popl mov mov xchg push push mov sahf in (bad) (bad) mov fisub add mov lods scas xchg test test mov push push mov add mov mov fimul add insl add gs les pop mov jno mov or mov int mov lock iret les iret mov mov loope in jg fcomp xlat mov out ljmp jmp aad mov mov mov mov mov mov aam jno mov sub (bad) lds mov sbb jbe,pt pop and es mov cmc in xor fcmovnbe enter stos sbb mov js adc (bad) mov aad adc loope pop mov mov hlt icebp div repz fadds ds add mov ret bound mov mov pop push sbb out (bad) loop jecxz ss and xor sbb or inc inc je loope inc push je xor mov mov mov add (bad) out xchg loop (bad) jne test in clc test stc push stc stc idivl hlt repz in sub sub out mov es in loope loop dec ret sbb inc push lea fucomi in pop sbb mov sbb imul nop loope mov xor roll and mov pushf (bad) jo (bad) lock fsubr (bad) lock xor or sub xchg jecxz in lods push aaa rclb mov mov mov popa adc mov scas imul jno push add and sbb and das or xor cli lret cmp sub push out rol mov cs push aad cmp mov mov pop inc in sub cli clc div loopne jle push shrl popf (bad) mov (bad) mov insl insl or add pop in xchg mov mov xlat iret ret lods rcr mov call pop mov aam sar out in out repnz mov lds mov pop add push gs pusha cmpl add jo add lds add xlat les loopne arpl push mov (bad) mov mov clc sub cmc mov (bad) xor mov pop add cltd or fmuls mov call add pop in add pop gs mov bound mov and mov push fninit leave mov hlt insb mov rol loopne je mov push mov pop add pop xchg clc and jecxz sbb (bad) or fs push add arpl push mov jb ret loope lea push (bad) (bad) pushf lock clc mov inc (bad) testb inc push dec adc adc loope adc test xchg stos in sti mov (bad) lds push (bad) testl jmp add in sbb pop fsts les cmpb pop push mov rcrl (bad) or pop in push adc add or daa loope fcmovu mov (bad) mov clc lret inc leave mov mov ljmp add mov out es add jmp jmp and (bad) dec pop push xlat push and scas mov and test and add outsb xchg (bad) mov lods inc aaa imul pusha movsb jecxz aam outsl sub (bad) mov rol mov enter jmp (bad) xchg mov mov out in add cmp pop and iret (bad) mov out push push or test or push add scas (bad) sbb dec mov rcll mov jns outsl xchg fs adc jp test fdiv nop sub fidiv mov mov adcl out call sbb pop dec inc sbb lar leave mov out cmpl (bad) cli jecxz inc dec insb and mov inc add scas shlb lods ss add mov out jbe nop stos mov in das add insl sub add mov jmp add sbbb and add jmp shl fcoms (bad) adc adc xorb add jo push or cmp mov mov mov les add add fild fist lret add or and repnz fisttp and jbe int push push xlat push mov mov and (bad) fisttp add fild fild ss xor or (bad) xchg pop pop (bad) mov dec fbld out out dec mov in jmp ret (bad) loopne jecxz aad inc lods push dec fisttp add test dec (bad) lret arpl fist (bad) fisttp call fucomp call es jbe stos xchg mov push xchg jo add and mov mov push add mov or adc fnop jb mov fist mov mov push add mov or xchg xor mov dec pop mov mov fisubrl mov fisttp fistp repnz in dec ret fbld loope mov test adc lods xor mov or es test in cli fist fnop add push sub dec fild fild lods fbld stos loope cld and cmp add inc repnz sub stos lods push fisttp mov add fild fildll subl clc sbb push lock call (bad) stos mov test fisttp add mov fist push fbstp sub dec repz testb call aad xchg fisttp adc stos and sub push mov sub adc mov dec pop adc xchg adc mov es fisttp fisttp lds sbb (bad) and stos mov lods lcall xchg nop mov stos fisubrl fisttp lds mov xchg push lds mov sub pop mov mov rol mov mov adc push and push mov and mov loope (bad) enter loop (bad) (bad) test cwtl fisttp mov fbld popa cmp fst fist mov sahf push (bad) mov shlb ja pop dec xor pop mov ja sub mov jg fbld enter xor push dec fisttp mov xor movsl adc imul cwtl test push es test push adc jno hlt inc dec ret sub xor (bad) ficoml adc mov fisttp fbld movsb dec mov bound fild adc sub (bad) lock mov test test fisttp fbld mov pusha sbb lcall dec or mov popa aam cmp sub mov and mov ret pusha adc mov xchg adc xchg inc sbb xchg jo or mov mov stos dec fcoms or push mov es mov in sbb add fbstp fist fisttp fisttp mov dec imul mov imul fisttp fisttp fisttp mov mov fbld add nop xchg sbb into adc pavgb sub or sarl mov mov fisttp fdivrl insl aam pop mov mov call pop sub mov fist cmc fcmovnu mov inc cmp cmpsb pop mov dec lret adcb mov rcl (bad) sbb in fisubrl add loope mov pop stc stc or pusha decl pusha aam adc loope add test pop div fcomps int repz cli repnz arpl adc fild cld std in mov das fiadd mov sbb repz (bad) test imul lea fldl (bad) std in mov jo adc fisubr loope icebp icebp arpl stc push pop add jbe cmp sti fdivrl insl sub add jmp fcomp add or cltd inc add sub mov pop insb rcrl fist dec rcrl fcomp sub xor fisub mov add (bad) dec add xor pop jmp test jmp adcb (bad) aam mov nop ss in sti mov add sti sub sub sar cli ljmp inc (bad) fcomps pop push adc repz jb (bad) fmull push pop xor add sbb pop dec inc or mov pop push cltd or (bad) sbb hlt mov adc loop mov pop mov in dec sbb pop cmp pop inc dec sub or inc incb mov out mov call in into push add jl or outsl jno jl add insl fldt jge push mov sub push add ja add push adc push mov insl add xchg iret add push adc xorl (bad) push mov dec jle (bad) imul (bad) insb or subl outsb fildll dec (bad) push mov mov xorl mov push jle mov or jle or sub inc push mov pop aaa stc (bad) push push add sub or mov add into mov jecxz mov int add int out in jecxz sbb xchg or das cmp sti ja ds mov into cmpsb add int pop out mov out movsl in cmpsb in out iret das pop nop fcmovnu and add aam ficomp out out aad in sbb das sbb les bound jbe cmpsl hlt aam repnz or adc das pop mov shlb pop sub cmpsb out shrl outsl outsl mov shll cmpsl out shrb bound stc fisubrl cmc or pop (bad) mov cli fnsave fdivl push dec (bad) scas or hlt fidivl or and mov sub mov add pop jnp fild stc fistpll sti push mov pop mov mov repnz loopne loope sti or (bad) outsb xorl loop stc sti or sub or outsl push and in add jecxz stc jecxz or in mov lds (bad) (bad) cld jecxz cli add in (bad) or addl outsb in (bad) out adc adc jg sti in cld in cld push or stc sti push mov int (bad) out std or (bad) sbb push enter mov sub out call sar iret or cmpsl inc sub jbe aam clc out push dec (bad) aad in cli out pop test jle add fist adc jno xchg push jae add inc push pop gs pop mov jg stos pop sbb jne out cmp cmp (bad) (bad) inc push pop add pop push ljmp lret xor iret cmpsb imul into leave or xor test jle stos bound test iret sbb jne (bad) jo (bad) out roll ljmp sar sub nop sub xchg xchg xchg xchg xchg push cs mov lock repnz jbe pop lret aas scas mov orl mov cmp mov pop add push jg divl fnstcw fidivrl cmp jl fistpll adc jnp out outsl fsubrs (bad) sub jb out xor aaa pop adc cmpb fstp out mov cli rolb sbb sub mulb push int jge mov imul mov sub js push lds mov gs or jl mov cs and jbe push int insb mov fldl inc push pop lret push stos bound incl js mov sub dec pop (bad) mull inc push int push lahf pop es or pop mov push pop lret std push stos bound (bad) jbe lods bound aaa xchg mov add or mov and fisttpll fsubrs sub into jae stos pusha sub pop xor mov mov and gs push pop lret gs pusha push (bad) out mov jbe add cmp in andb inc mov aaa add inc mov aaa sarl lret gs lcall lahf pop mov addr16 push int (bad) dec (bad) out mov ja add ret (bad) jbe out dec lods mov pop in pop ljmp dec and bound push int pop fimull and xchg mov pop movsb mov mov in xchg push pop pop divb add (bad) jbe int fs pushf push cmp sahf push add gs bound gs out adc mov repz push cmp out shrb inc push int outsl pushl cmp mov fucomp push mov mov lods stos mov in ss outsl pop lret gs call inc or cmpsl pop (bad) mov clc mov add cmp pop rorl call iret imul add lret dec sarl ret rol ljmp push out adc jmp sarb les loopne add (bad) out pop andb pop (bad) incl shrb mov lret mov fcoml mov addr16 (bad) jbe inc push pop gs xor es adc dec fbstp icebp xlat add sar lock outsl fidivr int std in lret in (bad) jmp out xchg xchg out ljmp ljmp mov jmp ret std jmp imul (bad) fcomp jl out leave incl rcll fadds add xchg addr16 ja enter (bad) adc ljmp in sub call in add lret test int3 pop pushf push mov adc ljmp ret in jmp jmp and mov repnz add dec int lret cmpsl inc repz mov mov cwtl in (bad) and (bad) hlt or aad fcmovnb sbb test cmp adc lret mov cmpsb or pop lock fcompl mov popf add xor adc dec ret xor adc repnz pop and cld out xchg popf add lcall fldt adc lret inc lcall adc push xor loopne sub fucomi add mov inc push (bad) dec xor adc sar aam sub out leave (bad) aam adc in hlt adc and xchg inc test out (bad) lock mov sub mov fild dec iret stos lret mov push aad pop xor int dec je shl repz add jmp lea add or add dec adc push lret dec imul adc jge mov dec pop fild popa mov push and (bad) mov out into repz and rcll cmpsb lods jmp cmp add add pop or or mov pop (bad) aad (bad) repnz jbe mov mov add adc xchg add inc imul adc mov icebp mov pop add repz mov (bad) aaa push cmp (bad) mul incb push rcrb mov (bad) aad repz js leave and loope push inc adc in dec cmp adc inc out aam lret test push fmul sarl xchg mov mov pushl je mul add cmc repz or xor inc fcomi repz cmpsl pop push loopne lods mov push out mov mov mov dec add cs mov (bad) repnz or mov sbb rolb mov in add insb stos ss lods add jg add push add sub rclb in stc hlt sti stc repz div stc div div out div in hlt icebp ljmp sbb jmp out in jecxz ljmp std cli add sti clc sti cli idiv jb clc cmc stc js mull idivl cmc icebp add dec jg inc (bad) (bad) ljmp icebp shll arpl clc jg push (bad) clc (bad) sti (bad) std dec lock lods add div hlt repnz xor (bad) icebp out in jmp adc xor out jg test add call test add pop push add repnz les pop mov and push add das repz lcall repnz cmc in clc repz (bad) (bad) jmp lock jmp (bad) jmp shr in fcomp std outsl mov (bad) cli icebp std cmc jmp ljmp sti repnz (bad) and cli lock out loopne out loopne out fdivrp icebp loope ljmp int fnstcw xlat and mov ffree cmc loopne imull cld jmp enter cli out sti call add imul imul cmpsb imul add inc jg adc cmp in int sbb cmp mov add fadds cmp jmp or adcl mov sbb add pop sbb cmp lds xchg pop in in into (bad) imul clc imul ret in aad sbb nop call cwtl cmp jl hlt hlt (bad) fldenv inc stos and mov inc insl inc add sbb outsb aam das jg jecxz add loopne push add les or neg test (bad) (bad) incl and pop sbb adc jg loope popf jg xchg mov call frstor or lcall movsb and pop ljmp inc or sub loopne add dec jg mov add cmpl pop push adc or add fsubs add inc xor jmp mov lcall mov incl adc and sbb test imul xchg add ljmp sbb dec add dec jg fisttpll rcr add xor adc inc insb push add push ljmp and pop pushl call sub adc (bad) sub pop add (bad) and roll or mov cmpsb (bad) cli clc hlt push add xchg dec dec push add mov mov add stc loop jg push and inc test mov jg pop shll mov sub adc or dec or test test ljmp pop fisttpll negb dec mov hlt xlat pop in je push dec pop enter addl test push add stos mov push repz jo imul repz loop dec jg test out dec sbb shl add mov mov add sti in pop jnp mov clc cmc out add add dec jg cli clc out add jg into cmpl pop push adc or add fsubs add mov call or add dec jg jo cmpsb fisubrl (bad) in int3 or add insb xor punpckldq rcrb shlb insb adc test jb dec incl dec mov cli jb dec jg inc insl lock cmp or stc and dec push add or or add and js mov add addl add js jo push dec pop push add push add push add sub (bad) cmp sarl hlt inc ja mov add mov pusha jle add mov test sbb dec pop add add adc sub ljmp incl mov add mov adc sbb addl push add rolb mov call test (bad) mov sub xor loop outsb or out andb js jmp leave pop push add test movsl inc or add push push or fidivrl lahf int call nop lahf test sar (bad) decl (bad) sbb jg inc add stos in cmc repnz out sub xor into jg hlt clc xchg adc lcall call movsb stos mov jg dec sahf cmp icebp ljmp xor call inc rorl adc or mov pop jg inc or test or cwtl jb jg cld mov cli idiv stc (bad) or dec cmp clc outsl or add stc add incl push pushl sub inc sub jg jmp or test adc adc lods mov cld xchg add adc clc cli pop add enter repnz cmp cli mov adc pop adc test push lcall popa mov rorb jg push aaa xor sub xchg pop (bad) ss stc jg clc cmc dec push nop daa (bad) std cli std sti test add inc sti add cs incl pop inc push push pop decl push and sub add inc add jg bound jmp andl jg inc add mov idivl (bad) mov stc add test add (bad) call inc stos add movsb and decl add fwait dec rcll mov add fiaddl jg add jg jg adc mov and xor mov push mov adc add incl adc ret stos stos mov mov mov and xor mov notb fsub fild inc loopne add mov add xor mov push shlb add inc fs inc in add daa out dec add and inc les loope add ljmp cmp sti or inc xchg in out xor and fadds and jbe out ljmp hlt icebp in add out cmc repnz add and sub div out add mov add pop and pop add sub and push (bad) fistp xor mov xor ret xor xor (bad) rcll xor xor jnp xor xor xor xor xor (bad) (bad) push xor xor jno mov cli xor xor inc ss ss ss ss (bad) jmp pushl sbb inc aaa jle mov fwait aaa loopne sbb xor pop cmp (bad) cmp sti jmp (bad) jg cmp icebp cmp cmp cmp (bad) (bad) (bad) (bad) cmp mov cmp jae mov test fidivr or pop aas cmp and aas mov cmpsl pop les lret xor iret mov xor xor mov incl xor mov xor xor xor test xor xor xor mov or cld jg push aaa jb mov aaa or (bad) decl repz xchg cmp cmp jb test cmp cmp cmp cmp mov (bad) (bad) cmp cmp arpl mov cmp sub (bad) test shrl outsl cmp cmp cmp dec clc or inc cmp sbb adc sub inc ds and jg outsl (bad) mov aas je (bad) and mov iret outsl inc adc add inc decl add (bad) xor xor xor xchg decl xor xor jl mov mov test mov pop cld rorl pop xor xchg push xor adc sub inc pushl pop ss mov stos popa aaa xchg aaa (bad) aaa add cmp cmp inc lret inc and jmp cmp cmp (bad) mov enter mov cmp cmp cmp cmp xor push das (bad) push jg jecxz push pop movsb clc cmp cmp cmp cmp cmp and and cli or pop adc lock call cmp imul cmp pop adc push mov cmp cmp lea adc outsl clc stos les repz pop aas jb mov testb call aam xor xor mov xor xor xor ja mov xor jg xlat xor aas ss xor xor xor test (bad) jmp je xchg xor xor xor adc jno adc mov (bad) lcall mov mov ss ss cld ss jg inc iret mov cmp cmp mov mov inc cmp ret (bad) aas clc and jns (bad) negb jbe mov mov cmp inc dec test lods dec mov std sub cmp lods jmp ds ds ds ds test cli outsl mov xlat ds ljmp and add push jg jg sahf inc xor mov (bad) xor xchg sbb daa xor loopne lahf cmp in pop xor pushl and xor cmp lock (bad) pushl xor xor lea movsl xor adc cmp jp xchg jns nop jo cmp dec or cmp cmp dec aad inc ret and out (bad) ljmp mov dec cmp cmp cmp cmp sbb cmp (bad) pop and sub mov movsb (bad) inc mov add pop cmp mov cmp je jns sub (bad) ds sarb or adc mov pop jmp xor xor cmp jbe xor inc out clc sarl fmul out xor xor inc xor test xor xor xor xor (bad) xor xor xor xor xor xor xor xor xor hlt lock xor movsb ficom aaa dec push aaa mov cmp adc sbb mov incl pusha cmp pop cmp cmp cmp push clc aad daa daa add jo (bad) jg dec push xor xor mov inc ret dec xor aam cld outsl pop lret jp add and pop aaa sub imul fnstenv (bad) cmp cmp cmp cmp pop mov mov scas ds aas xor mov xor (bad) (bad) incl outsl xor jo xchg into ss xorl sbb xor decl cmp test xchg cmp cmp cmp stc (bad) out mov inc cmp js mov (bad) cmp cmp cmp cmp mov test ljmp jl cmpl loop cmp mov cmp cmp cmp cmp cmc jg (bad) cmp cmp out add and mov aas sub aas pop fistp mov rcl dec aas dec sarl ss mov mov push popw aas (bad) mov repz xor xor xor adc xor xor xor pop xor xorl aad push xor xchg xchg lahf xor xlat aas mov sbb cmp xor cmp cmp or inc mov xor xchg cmp cmp clc xchg inc leave cmp cmp popa dec push jae (bad) sarl sbb daa ds call lds out idivb aas xor inc aas test mov pop scas or xor adc add dec xor lea sti xchg xor xor cmpsl incl cld xor push xor stos xor xor xor xor mov sbb call dec xor xor xor rcll xor jns (bad) xor and addl int pop imul sarl ss out and inc cmp jp (bad) (bad) call ljmp cmp cmp cmp cmp cmp cmp cmp loopne cmp aaa cmp cmp cmp cmp mov push sub lret jbe nop xor fwait cmp add (bad) mov aas push jb or mov (bad) das pop ret adc xor xor insl xor test xchg and (bad) sahf xlat int3 xor xor xor stos inc ret pop sub cmp push loopne xchg sahf loopne adc jnp pop mov test enter in inc sbb push mov lcall push xor ss push test fist xlat das add mov call (bad) pushf aaa in aaa pushl add push cmp scas insl loopne nop mov test cmp cmp cmp lret ffreep xchg fildll cmp mov cmp rol mov jo jo mov aas scas pop iret rcll aas loopne std out movsb add lock push loop lret aas (bad) fnstenv es cmp adc js xor xor xor xchg cmp add lcall add xor (bad) ss or test aaa ret aaa faddl pop dec ret mov cmp cmp cmp call loope sub inc cmp je int3 cmp cmp loopne cmp xchg push decl mov or cmp fwait inc push inc ds ds aas hlt aas decl xor xor mov mov (bad) xor ret (bad) test xor mov mov in xor xor jp,pt fwait je cmp aas (bad) lcall pop adc adc cld rorl mov aad pop ds add aaa icebp aaa add jge xchg mov pusha dec dec es cmp pop cmp out fsubl xchg adc cs cmp cmp jl loopne cmp lret fdivrp xchg dec jle push cmp fimul cmp sahf (bad) adc sub pop loope xor stos out loopne decl pop xor mov and lret xor cli pop push popf incl add sahf xor xor push inc ret lret mov mov jecxz daa roll adc sbb push push sub jnp xchg repz inc cmp dec cmp es push data16 xor xlat jle loop hlt call push scas ja or int3 cmp sahf push push adc pop inc or (bad) adc sbb and push adc xchg pop dec jl cmp push jp push cmp cmpb lock cmp jmp mov mov stos fisubl inc andb jg add push cmp and sub outsl dec inc mov xlat dec cmp scas jp (bad) pop cmp cmp jbe jl push cmp xchg lods cmp fstpl adc jno pop mov jg or adc sbb push test add adc mov dec cmp push cmp pusha cmp jb notl mov or xchg icebp (bad) pop xchg (bad) mov mov xchg xchg fdivrs fidiv sbb test or and push lea or scas push cld (bad) cmp cmp cmp cmp cmp cmp cmp push cwtl mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp ficoml cmp cmp cmp (bad) stos jnp and ds cmp push fisttp mov pop ds push jne insb pop sbb aas rcrl dec nop lock fidivr out lock inc nop incl xor xor pop xor xor push jl aaa xor xor pop cmp mov mov dec push sub stos xor xor pushl inc (bad) mov xor xor adc sbb push lock (bad) xor xor xor xor jnp (bad) xor cli jnp adc dec xor mov lret add sti adc xor xor xor xor lock flds mov rol (bad) push aaa or (bad) clc fs and cmp xchg add dec inc bound scas pop push jp stos cmp mov aas adc adc fs cmp inc or xor (bad) cmp cmp adcb add ds add and cmp sub fsubs mov clc dec pop or imul sub mov cld jg (bad) pop xor xor xor popa xor insl loopne lods inc (bad) xor xchg das clc aad cld xor ss ss ss ja and dec aaa stos cmp cmp (bad) cmp pop jl (bad) cmp cmp cmp cmp icebp cmp adc cmp cmp adc (bad) push enter call xor pop xor mov xor test ds mov mov (bad) xor movsb (bad) lock xor mov pop nop add mov xor test or or mov repz pop aaa sbb add aaa mov test (bad) aaa aam lods sub inc adc push stos pop sbb cmp jl adcl cmp lcall ret data16 inc dec jo cmp cld (bad) or icebp lods pop out ds aas jo loope and inc xor cmpsl xchg sahf jg aad fs adc and cmp ds push cld sub rorl pop cmp outsb adc push push dec (bad) ss cmpsb cmp dec (bad) mov cmp aad (bad) clc pop adc sub pop dec mov rolb pusha mov ds data16 push or clc scas dec aas xchg aas xchg aas ret fbstp mov xor mov dec call xor xor xor stos and roll aam mov add mov and xor or lea test pushf xor loopw clc xor xor sub push xor cld fild sbb xor xor xor repnz clc mov or sub add ja rclb sbb push ss imul nop ror and mov loope shll rolb aaa adc sbb sbb popa aaa jno jns jge mov movsb mov aaa mov and mov push insb dec clc femms das cmp cmp cmp add pushf pop into and or fisubr sub adc sbb pop dec add and test and mov add inc pop dec add incl scas jl xchg aas lods aas enter lret push pop cmpsb and dec ret pop test dec jg pop sbb pushl test xor adc lcall popa (bad) dec dec ret test mov les shll lods or mov das js cltd xorb inc dec dec inc outsl push add adc xchg inc dec mov orb dec dec (bad) add sub or sub xlat xchg adc fisttpll inc mov rclb rolb repnz je and or mov sbb push xorb mov pushf or jp mov mov or sub xor xor adc sbb pusha add mov movsb mov dec outsl addb and cwtl push sbb mov loopne add (bad) xchg aas and mov jg dec adc (bad) fnop jmp hlt mov call adc loope push mov inc xchg dec clc cmp fistpll dec or scas and xchg and jno dec sbb jmp sbb bound sbb and jge sub cmp and push ret js adc das pushf adc sbb dec jmp xlat inc inc daa or sbb xor (bad) test pop add push (bad) test sub cmp scas cmpsb (bad) das insb push jl or push xchg add cmp and push inc inc and lds adc arpl inc pop shrb stos sub stos xchg fwait jo xchg add rclb mov stos clc jp cmp pop cmpb mov or loope adc cmp pop and xchg lods cmp or mov pop pop and fsubs mov xchg xor mov pop loopne cmp mov inc cmp mov test test and sub cmp and inc sub dec mov jp hlt push xorb cmpsl dec add mov test mov xchg xor xchg push mov push or inc add add pop sub stos outsl xchg or mov cli in push inc push and mov ret sub rorb pop idivb xor jae ds stc cmp mov jp mov orl bound scas mov mov pop dec cmpl add out bnd mov inc mov popf dec iret cmpsl xchg cld sub incl repnz pminub xchg add add orl mov adc sub xor test push mov call dec out pusha data16 pop and (bad) out push fisubr out add pusha push add nop nop jg fiadd jo andl inc inc inc mov ret jge dec or xchg xchg mov sub (bad) je mov pusha dec pop movl clc mov test pop push out add cmp aas lods arpl pop ret aas cmp mov cs jecxz stc test inc add hlt dec adc ret ss push pusha nop xchg std sti pop mov or and loop fbld jecxz pusha inc add or sub or adc xor or and fistl mov push mov xchg and ffreep push inc add cmp cmp add pop xchg add inc add inc add mov add nop add adc and mov push lcall add sbb add test and inc ds gs add inc dec push pop aaa jmp adcb mov jb add adc push inc cmpl addr16 cmp in dec call or pusha cmpb add dec int3 int3 into mov clc pop in xor shl loop das mov fwait and mov ds inc out movb xchg mov xchg xlat sub popf ja inc lods test mov mov mov popf or icebp pop xor mov in mov mov xor fistp fs add add push push and mov push add lods add repnz dec pop fsubs (bad) sbb leave jg pusha mov add sub pusha inc add pop test or inc inc add in das xchg gs add add pusha inc add das sub add pop and (bad) je or xor test xor add pop jo mov fbstp cwtl shrb add or push or rcrb jg mov cmp cmp pop cmp rcll sahf inc add xchg pop push js add mov add pop pop cmp pop cmp adc pop mov shll xchg fidivl mov out mov cmpsb push xor sbb mov fucompp mov mov pop adc sahf xchg dec adc adc enter xor xor pop xor adc and jecxz adc xor (bad) fstl insb mov lock pop mov push or bsf adc mov addr16 mov and push pop mov lcall add mov subb xor sbb sub and or dec adcl xor call mov and xor pop (bad) and daa or adc imul mov or jbe,pn orl xchg enter cmpsl or push sbb pop push push icebp or (bad) push mov icebp and icebp mov sbb and mov mov data16 mov loopne inc out popa add mov push push mov aas fadd cmp xchg jl in and js mov fs scas mov lea xor mov icebp or mull xor xchg add cmp sub mov xlat jge push mov movb fwait movsb cmp push pop inc xchg fcoml popf imull xor adc gs mov (bad) mov lea xchg sub and scas sub jo ret (bad) sbb mov add sahf jo push adc jge das mov xchg mov nop push lahf inc pop shrb cmp xlat or sarl addr16 or adc push mov pop mov lea add (bad) imul and add out shrb jo xchg je sbb imulb test sub out out out jbe sbb xchg jmp push pop fisubr xchg ds or jns xchg inc sahf push ret enter add pusha je ret ret mov jnp push lret inc xchg sub dec rclb adc pop sbb out mov push stos push push rolb pop (bad) dec dec add xchg rorl adc ja iret push mov insl mov mov rol mov push leave adc call dec push nop movsb adc fsts pop inc loopne (bad) jmp add iret test or inc dec std mov test jecxz push adc cmp fisttp cmpb sbb mov push jns in inc sub xchg pop xchg and sahf jp xchg sarb push call mov mov cmp or dec add mov imul mov arpl daa sub mov pop lahf pop insb inc add add add pusha inc add pusha inc add xchg push push sub inc ficompl sbb sub dec or and pop lret add push and cmp inc add repnz and adc ret fdivrl or xor pop addr16 mov dec stos pop pop ds mov jl inc add xchg dec jo inc add adc test in and sub jl stc aas mov add push inc add add mov insl clc xchg test pop xchg fnsave insl add mov (bad) mov nop sub mov or dec adc or sbb push loopne push cmp hlt daa cmp cmp mov xchg dec pusha xor lret daa dec aaa inc xor ljmp nop add ss (bad) cmp cmp sub leave data16 xor inc daa mov std test cmc xorl repnz (bad) jbe inc xor enter lret xor push mov mov or sub pusha xchg xor adc pop outsb sub dec jg out call sbbl add in mov sub cmp (bad) sub call call ret dec adc add push lahf test inc add arpl leave adcl lahf nop pop mov mov inc add pcmpgtb ds ss mov nop (bad) pop pop jge xchg and sub sbb inc inc ret cli and fsub mov and mov pop jmp xchg fs pop andb pop js je sub mov shll pop inc xor enter push adc push push or sti out mov and push sbb add fs mov xor dec inc clc sub xchg or or shrl add movl cmpsl dec jmp inc and cld into fwait sbb sbb ss pop call fs subl in loopne pop sbb sub or cwtl mov pop lea sub and jp xorb inc popf mov shrb aam xchg insl loop push jne das sub sti mov adc movsl push sbb push cmp or inc and scas and test (bad) xchg add loop push mov mov enter push stc call sbb sbb stc dec add aam cmp cmp pop popf or push pop add addr16 sbb das in inc add adc loopne inc lds jle ljmp adc dec mov mov or push adc es or fistp enter push dec lret rorb cmp or adc clc or dec faddl into std jne data16 add adc je push inc cmp sbb (bad) fadds sub mov fadd inc pop cwtl mov (bad) pusha lods pusha pop jecxz adc lods inc sbb popa xor into cmp mov int3 sbbl lods sub (bad) pop push adc push push mov cmpb (bad) adc (bad) sub sahf add jb sbb outsl sub add pop mov scas dec sub int sbb cmp adc roll outsb jns xchg dec or (bad) cmpsl push test push xor test sub or test pop add mov add sbb add movb push fnstenv push in mov add mov mov or jno aas mov lods push pusha cmp cmpsb dec xchg or dec lock xor pop roll and sbb xchg sti mov and lea call clc push fldl (bad) addr16 or mov or les mov lcall pop enter push mov mov xor cwtl xchg lea pushf adc outsb pop xchg pop mov add adc adc pop and mov mov out xorl or (bad) mov adc adc je lahf pop lock jl dec sahf cmp aam add test jl cmp mov int jb sbb in dec adc sbb adc add inc sbb and daa dec dec xchg rorb sbb push lahf sbb cmpsb mov incl mov cmp pop jae push js fistpl andb and scas ss lahf add xor scas repz jle and push add loop lret xor mov fcoms pop pop add test arpl negl movsb loopne pop daa add rolb or ds push push mov cld or inc add insl mov jmp mov add setl dec and adc gs or pop imul pop lods cltd add cmpsl jecxz jl ds lahf push pusha inc add arpl inc enter sbb add insb or push mov cmp push je test scas xor sub jnp pop and inc pop sbb mov or enter movl fimull lret js movl push jle sbb pop xor add popf add pop mov enter and xchg cmp lea adc or add cmp loopne mov jl fnop xor push jmp rclb and mov (bad) int3 lods rcrl xor sbb test aam inc mov dec cs mov fmull mov outsb out mov fcoml add cmp pusha rolb mov inc dec jg and out inc push inc dec mov xlat inc sbb push fsubrs sbb push push lea and lret rcr xor (bad) xor cmc movsb cltd inc or and cli loopne push add outsl cmc xchg mov shlb and cmp mov ret ja dec aaa inc push cmpsb scas push mov jmp (bad) cli cwtl xchg test add push push push pop lahf cmpsb repnz cmpsb (bad) pop xchg icebp pop pushf add dec sub jns adc fstps sub jae or xor and dec pop bound inc inc adc (bad) daa lret pop sub gs sti jns cmp pop test ljmp push sbb xchg sbb sbb mov test adc lock mov mov out int3 ss pop adc xor jne xor daa push or or js sbb push pusha xorl adc daa add je les mov js xor ds xor jmp lock and and dec das push clc adc add jno jge mov xor pusha and jmp and and mov sbb jb callw in sub adc lock and and aas cwtl add test in dec rol add insb fistpll call notb cmp mov jg inc leave ret cwtl inc push dec mov push test and sahf test loope inc xlat cmp pop xchg add push sub sub add cmp xchg imul add sub ds add lock or and pop loope jge test and sub js xor add adc je lret call shlb adc outsb ss lds mov dec pushl add inc pusha cmp sub cmp xchg fs jl pop fstp test popf pop sbb daa popa pop xchg pop movsb roll cmpl sbb fidivr jae push arpl xchg mov add rep iret pop xchg push pop dec (bad) repz pusha fs push (bad) cmp ror enter notb loope xchg add sbb test jecxz pop sahf mov leave push rolb mov clc cmp lea inc inc iret and cmp fnop push sub push dec push add cmp or cmp xor mov push push xor in pusha jmp mov movsb bnd inc jl cmp jae repz adc stc leave lret pop or clc call inc ds test mov sub add push les pop flds or xor sub pop movsb std inc sbb mov push add sub fsts and sbb mov idivl pushf or pop or pop sub or cmpsb (bad) loopne jle pop fsubrs movsb sahf mov es call in hlt sbb dec pop inc sbb xchg imul xchg enter push sti add xor and notl sbb addr16 pop roll movl or push sbb sbb xor fmull or nop or push cs icebp mov adc mov movsb mov lods inc dec xchg sbb movl rcll pop mov jle ret add sbb pop sbb xchg and mov (bad) hlt push dec aaa fnop and dec add add cmp or push mov aam cmp jns out adc movsl xor dec xchg lret push ljmp pusha and dec jmp push add icebp push (bad) or pusha pop clc pop add std inc iret xor sbb mov jo call lock in xchg les mov rcr stc mov jge xor xchg xor add add mov mov test jg push stc pop pop sbb push cltd xchg xchg imulb cmpl and aas popa ljmp gs insb movsl jae xchg inc mov xor int3 daa rcrb dec inc or hlt ljmp xchg push repz (bad) push mov and mov sahf lcall push push and push mov push (bad) repz push and test jae jne cli pop pusha in sbb clc xchg mov mov mov dec push ss and xlat into psubusb mov arpl (bad) (bad) add insl cmp repnz jbe push push cmp adc mov add mov inc test xchg add push xor inc dec mov inc adc mov jg xchg add aad lret xchg cmpsl adc jae pop or cmp mov jae les xchg push push scas call mov push and lcall push rorl hlt out ja out push and data16 (bad) sbb sub and (bad) xor xchg and movl iret cmc popa push add sub ret pop or test mov gs or out dec fmull mov or stos mov mov adc loopne add jle shrb jne pop jle lret in lea and push sbb push mov mov pop xor loope push cltd mov push fsubrl and push jae mov addl jl mov popf popa xchg pop les rol adc test jl or and mov or loopne xor in movsl mov add imul push and test or sub jp xorl mov jbe out ds or cmpl sub xor in fcomps xchg mov rcll add dec iret inc repnz inc sbb sub insb xor es stc (bad) bnd aaa repz adc sub mov or mov icebp and or dec out xor sbb pushf lods dec and in push jl xchg sub push xchg push call or cwtl push inc dec adcl movsl mov in lret inc mov cmpl push mov mov rcll adc adc cmp scas adc xchg in lock add fadds pusha shlb scas jns daa mov fsub xchg cmp adc inc addr16 sbb data16 imul push js loope fsubl mov pop and call inc jmp xor mov xchg popf call or jl mov push (bad) les div sub test outsb je dec (bad) divb inc ja int3 push lock xor roll lret adc dec jmp popa push orb mov push inc cmpsb inc inc mov clc jmp (bad) add push pop add jp ljmp aad push in ja call or sahf or pop fisttpll pop inc test adc insb hlt adc or mov or mov nop xor mov les or mov xchg xor and imul loop add fdivs call icebp js lret dec (bad) mov dec and sub add jb xchg das jns clc (bad) aaa add and ljmp clc push add jne cmc loope xchg push ret adc add xor push inc mov fmull hlt cmp (bad) sub push pop inc mov sqrtps mov sbb jnp add repz mov xor sbbl insb pop in or in mov push push repnz cmp add add jo lcall jmp jb negl in inc cmpsl cmp ljmp or into add loopne in jg lcall mov pop xor rcr scas or cltd fildll push adc pop dec lods in jg call or or aaa cmpl push push xchg scas push fcomip cmp fstl dec rclb push pop ds repnz je mov fcoms cs jmp or inc fldl mov sub push sub jns mov mov add jo and mov jle rclb add sbbl or mov psubsb decl sub or int3 push in daa adc or push pop loopne stos adc lock add movsb clc jns or imul and push jmp and pop popa and push mov addb hlt sbb push push es xor inc mov popf les jo xor pop js pop outsb add sub xchg mov fmull enter js and inc xchg dec iret cmp xchg and sub jo push dec in imul or cs dec in (bad) clc hlt lock in stc das fcom ror mov (bad) sarb mov test jb pop mov xchg lret in mov mov ja (bad) in mov test pop cs lret mov mov jb (bad) enter pop cs aam fsub in lret in call mov add or cs lret in adc sbb jb pop and sub cs lret xor cmp lret in mov mov pop pop pusha fs lret in push test adcb mov xchg lret ja or jb pop mov cs lret mov mov jb (bad) enter pop cs aam fsub in lret in call mov add or adc sbb jb and sub cs xor cmp inc xchg lret in inc dec dec push pop xchg je je outsb lods ret mov mov loopne cmp pop rcll loopne or pop push cmp enter (bad) cmpl dec push inc sbb add pop jp cmp cmpl sti xorb xor dec pushf dec loop (bad) sbb in (bad) and or dec cs and outsb in jge mov sbb xchg mov jae add or cmp dec ljmp dec cmpsl call jl push mov jno xor pop fwait and xor add push aaa push stos push imul les or loopne movsl sti push add pop mov ficomp test mov ret mov pop jg add pushw or clc (bad) sahf cmp pop and inc inc dec jmp mov test and popa fs inc test adc jmp push pop mov add pop and fcomps bound js mov cmp or inc mov in popa cmp lret mov xor inc nop es sbb (bad) and test lea and insb gs dec lcall dec pusha in lods arpl push inc dec mov icebp add inc add xchg aaa mov inc add and inc add and push cli adc xor cwtl inc mov push mov stos pop add add inc add sahf add add sbb jne inc adc sub pushf clc jge inc jl js mov lret adc (bad) fs movsb pop mov or subb jns and stos nop jge sub sbb fbld xchg inc mov jae es nop sub pop xchg cld es jge nop inc add pusha inc add add pop dec loopne insl dec lock enter mov nop inc add jl (bad) xor or dec adc jae mov ret cld and add stc dec pusha inc add xchg mov dec pop and std test add dec test int xchg inc add inc loopne xor pop call movsl dec and nop inc mov inc add push repnz fptan fstps pop push (bad) ja sbb add cmc push jl or push fimul in xor das pop inc or mov mov cmp loopne cmc repnz jge outsb xor ss (bad) ljmp jmp cli pop imul pop add xchg int3 hlt push scas mov xor dec xchg cwtl push sbb mov idivl pop push int xor (bad) leave data16 call ret loopne cmp int push fs add cmp rcrb aas cmp inc repnz inc add loopne and inc leave inc add ja add ds adc pop inc fwait add dec rclb leave xor stos jmp xor xchg fwait add iret add sub mov xor mov arpl adc sbb std mov pop or mov sbb and pop cwtl hlt mov lcall clc jg das and pop je fnstcw mov pop push sub and xlat (bad) je sub insb jnp xor add dec pop (bad) je sti mov lret jmp popa sbb xchg sub push lret add js sbb insb test cmp notl pop dec sub int3 js jl add push xor je icebp xor movsb repnz xchg jg into jle test xor xchg into sbb dec mov repnz rorb int3 jno jge sub movsl lock fsubrp mov sbb cmp xchg outsb ss push mov mov xchg mov cmp mov add and adcl addl out sbb push (bad) push add enter test push inc mov inc in jmp sbb mov bswap jmp jg jns mov xlat loopne jg fisttpll test dec pop test lret xchg fistpl jmp adc rclb xor ja push mov (bad) sbb mov fsubrl or cli lret pop shl lret xchg das cwtl jmp mov ficoml xchg out mov push add mov sbb rorl repnz lret jae stc jb enter aam aad dec xchg xchg xchg das mov int3 fucomi in jmp sbb leave adcl pop lods ret hlt mov push push cmp insb cmc jne add sub mov push cmc (bad) mov push cli loop mov mov jmp sub (bad) test xor add inc adc mov xor jns out push push jns out mov imul adc jns pop push xor out enter mov idivl mov mov add pop sub stos lahf test outsb inc scas push push mov mov pop outsb rorb sahf push imul repz push or flds pop fsubr add call adc adc mov fs mov xchg (bad) mov int jnp push pop push mov adc or fnstcw pop fstpt pop sahf sbb out mov jle,pt push cmp mov adc fist jbe adc and stc push pop or pusha es mov mov push pop sbb test (bad) pop inc inc popa adc or or xchg mov mov inc xor pushf xchg cmpsl popw fdiv mov sub pop push sahf xor cltd ds bound daa cmp push repnz add mov mov jbe out sahf push push cmp repz incb jns repz int3 fdivl mov push test repz push inc pop cs out jns out add ljmp lcall add jns xorl xchg or mov out addr16 jg xchg mov push inc push sahf out sahf pop (bad) out loop insb jns out (bad) cmpsb xchg xchg push rcl scas mov pushw js movl ja push imul push adcb xor pop or lds pusha and jo ss mov cmpsl push and sbb inc adc xor inc push (bad) push pop add push push lahf jb xchg or dec push (bad) mov test pop xor lahf push sub mov mov lods inc add nop add notl cmp loop int dec pop aaa insl pop leave subb dec inc xchg es aaa adc inc pop xor (bad) rclb insb ss int push adc mov pusha pop jns iret rcll test out jns out insb pushaw add jns out push push dec dec inc cmp iret jnp ss push sub push sbb sub repz push cli dec iret repz hlt out call iret repz lret mov mov lods cmpsb mov sahf xchg mov sahf out jo fs pop out sahf out dec inc inc cmp cmp subb sub sbb adc adc push add dec clc repnz daa inc push inc xlat dec aam push inc adc cmp push push xor dec mov cmp cmp inc pop es xor das out into add add jne jns jne cwtl inc push xor xor add inc cmpsb add fstp rorb inc cs incl inc jp mov out jge cmp inc xchg inc out dec fistpl pop (bad) mov inc leave or jnp aas (bad) hlt xchg das inc inc sub fbstp dec inc inc outsl cli xchg outsb jg push cmp es pusha xchg add push rcll fiadd into cmp mov fwait outsl inc mov pop add mov pop ja xor fisttpll pop pop leave inc jb xor mov bnd arpl and insb push pop scas add cmp dec and jne pusha mov push cmp mov andl outsb and mov outsl sub sub pop or xor push pop movl out gs xchg mov adc js das imul pusha or jbe push jbe add jbe or ss dec inc sbbb pushf dec cmp cmpsl add enter push or jo pop inc adc repz push jl jo and (bad) jg inc mov add nop sbb movsb ljmp jne call mov fwait cmpsb jns dec flds mov and (bad) daa inc shl push shrb sbb xor push sbb and popf inc dec enter dec loopne iret repz push dec inc cmp repz sub and stc cmp repz or cld dec out sahf cmpsl div ljmp fcom int3 (bad) xchg pop sub jp pop sbb pop icebp adc xchg test xor add out call outsb jmp mulb scas sub cs fbld inc adc jecxz mov inc rcrl lock (bad) icebp push adc cmp xor sub mov mov lock lea mov dec inc rclb xchg movsb fidivr sar fsin call ss mov cwtl ds clc lahf daa jns cmp fcomip dec pusha and in dec (bad) pushf out loopne andb out aam into pop push enter or repz sbb mov xlat and or movsb cmp or dec insl (bad) scas and and add mov push cmp inc mov push nop push and dec push data16 dec ret jo outsl dec jno and xor cmpsb xchg xchg daa xor adc mov pop jo cmpsl add mov mov movsl xchg mov xchg push pop add scas fidivr add dec out mov xor xor loop sbb xor sub adc inc mov bound sub (bad) add aas daa popa cltd aam es pop add jnp sub jbe fbstp xor lahf jnp icebp fidivr push das fbld push xchg popf mov inc dec sub sub (bad) mov outsl fs jb lcallw fbld push sbb (bad) lret push imul data16 lods mov adc and or out aas sahf cmp mov aaa mov lods bound xor cmpl mov push push loopne or xor push push mov fisttp mov shlb stos cmp push aas pop enter aas cmp cmp sbb iret jbe,pn fidivrl insb js aas pop xor bound rcl fstpl cmp jae (bad) sbb int jge pop push push mov mov call push push sub movsb jge jns int3 js fwait sub lods dec mov dec push cpuid pop mov sahf imul shlb inc cmp fdiv xor push scas fiaddl xchg xchg xor dec dec jp (bad) outsb out xor std push xchg mov out jecxz pop iret pop push cmp jg pop orl mov out call push or mov call xor in movsl in mov sub aad scas mov or mov push or push jbe jae cmp cs push ja es in clc ja daa out insb daa notb rclb pop sahf out sahf daa push jp rcr dec repz sbb pop mov iret repz call jl out fyl2xp1 mov test xchg aam pop scas or xor push lcall aam dec add jns pop push and push cmp in das aam das rclb aaa mov jp inc lock clc push xchg pop enter adc add push inc fildl jo imul fsubrs lahf aaa and fstl add jnp das or shlb ja jnp cmp add push rclb es sbb push test add enter add fsubs and nop loopne pop add or xchg or sub icebp xchg push dec jl jo adc loope add jl bound nop jl add jo mov dec out or pop sbb clc fs sub xor jo or ficomp xlat inc and mov xchg jge mov enter mov jge repz pop das or add fdivs cmpsl and (bad) ja dec dec dec dec dec push pop dec dec cs cld jo mov fsubl cmp movsb pop mov aaa insb mov roll xrelease pop ds leave push roll fistpll adc loopne or push mov pop clc (bad) pop sub or nop jg push sbb cmp in pop sub pop inc cmp ja mov push push inc cmovnp leave leave leave push pop data16 leave leave leave leave jbe xchg xchg sahf test ret in addl jg (bad) cmp push dec daa addb cmp cmp leave rcr mov add jmp repz sbb sti add cmp cmp sbb sub in cmp dec pop fild mov dec aas adc or lea xor in xchg out mov adc push idivb enter push add and ja push loopne mov in arpl (bad) daa ret jge cwtl pusha incb repnz sub jae imul imul pusha je movsb jge mov out clc xchg jbe or pop lea jl ja xor addb or add rcll adcb aad or jmp sbb mov mov inc add add push mov das mov mov dec addb or jae cs rolb mov inc shlb cli add dec sbb dec pop out int and xchg add sub es (bad) xchg insl ret and mov sub out pusha xor mov pop inc pop sub mov push xchg dec pop mov sbb jg xchg and xor mov xchg (bad) fistpl mov dec shrb sub inc jmp arpl cmc stos xchg (bad) add ret dec inc imul (bad) testl pop inc test ja mov dec or mov add pop das or or nop push mov xor (bad) mov push lcall pop inc mov add add xchg pop and push jo repz inc pop shrb test mov or out add pop shlb add adc sub lods stos call add adcb shrb adc dec xchg or lret add les xor roll add mov add inc sub xor call jbe push pushf push mov cmp nop add adc leave (bad) fnstcw pop ja out inc mov ljmp mov and xchg das mov adcb ja add add or xor dec pop adc sub rcrb and test add inc push loop and out das push addb repz push fcoms lock imul dec add or cs cmp repz push add or cmp add enter cmp clc leave cmpsl stc ficompl data16 iret aad or inc das sbbb jae add sub push repnz mov out add sbbl add mov sbb nop or add dec add cs or js cwtl adc mov adc orl stos outsl adc fidivrl scas outsb push pop cmpsb push js loopne or lds or pop lock leave jae sbb cwtl out inc hlt notb clc fidivr stc ds mov dec xchg insl pusha push loop neg pop cld jle fisub sahf mov mov dec rcrb pusha add mov or ja movsl cmp mov sbb xchg sbb mov adc pop std push jmp subl sbb insl mov clc outsb shrb add or pop aad pop fisubr imul inc mov lcall fs push push jno fnstsw add fdivrs jle jge push jg add (bad) pusha (bad) mov fmull pop xor negl pop icebp adc mov add pop push add aam repnz das pop add mov ficompl pop inc and sub pop lahf pop mov mov add mov or das adc mov (bad) jne xor push mov mov pop popa lea mov loopne loope pop xor mov add dec movsl lock clc aas mov adc decl clc aas ds imul inc and pop into and in rorb sub inc lahf mov nop aas adc testb xchg push jg pusha insl nop adc (bad) aas lea lods add xor add dec (bad) sbbb fsubrl sarb ds sbb dec out cmp addl aas sbb clc icebp lcall jg inc xlat loop add repz push pop or fisttpl inc mov iret add ror add push xchg push cmp pop sbbb ds mov adc sub jns inc in xchg adcl orl insb mov xlat sbb (bad) addl sbb dec xlat xlat insb sahf inc mov popl sahf clc clc sbb addb cwtl xor clts clc adc xchg pop fbstp int insb pop sbb lea sbb mov out incl ja imul dec pop add add xor ljmp (bad) add mov add lret lret inc sub xchg inc in mov mov (bad) cmp add push add nop je gs insb outsb (bad) cmp add jb insb lea (bad) in (bad) (bad) mov xchg bound rcrl xor (bad) xchg pop add mov (bad) xchg ljmp lret mov fldenv push in nop fistpll incl in cltd add fadd sbbl mov icebp outsl jg fcmovu mov lods mov fidiv add cwtl add std aad add repz mov add xchg lods add jnp out shrb add out faddl adc out daa out out iret mov push loopne insb mov insl fisub fcoms fisubrl test fcmovnu mov push insl or ss mov int ss lock repnz xlat or in les enter addl mov mov insb mov cltd outsb dec xchg cmp adc jp add sbb jbe add insb push pop pop inc aam mov inc sahf cs addb (bad) cmpl popa test bound test push xchg fcmovu push mov push mov pop cltd push add ds and arpl imulb loop pop jno mov cs scas push (bad) add push mov scas ss jbe mov ds ret mov add sbb fist lret popf add push int3 sahf sahf int3 cmpsb mov aad mov fdivrl shrb mov jo xchg out (bad) loop lret in xchg ffreep pusha inc lds in fild aam fsubrs outsl cmp loope fs add push cld out out add out iret cmpsl ds or fsubrs fsubrp push (bad) ds mov sti clc outsl mov mov jae xor add scas imul decl cli push mov insb divl testl push sub loopne fnstcw sar add outsl mov mov std mov xchg lret push pushf into push lret in jmp ss jbe repnz vorpd fwait lods xor js cmpsb xor jae cmp lret call jnp out (bad) mov xchg mov mov push mov mov cmpsb mov sub push aaa shl (bad) (bad) cs mov mov movsb lods jmp insb jbe stos push insl xchg xlat out scas mov fbstp push xchg mov (bad) jbe dec lcall push bound pop jno testb lcall add repz and insb push mov ds cmp (bad) lods jecxz (bad) xchg pop push imul mov pop xor sti iret sub mov add test daa jge sti ss pop pop pusha pop add popa or outsl imul pusha clc and push adc pop dec mov outsb add popa das add das enter adc sbb pop pop cwtl add fs xor pop inc inc cmp xor (bad) jg sub mov xchg nop xchg xchg xchg xchg xchg lcall push push inc inc dec dec inc inc dec dec dec cmp sub sti in test andb push movsb fucomp add sbb sbb push xor xor mov out (bad) pusha jae arpl mov dec fwait (bad) out notl pop adc and pusha sub pop andl and pop popa mov mov incl (bad) sub adc adc pop pop jle addl popa pop push dec inc push dec dec sub sub out or xchg jg pusha pop jae popa or dec xor push call dec sub sbb js pop jo fistl jg dec pop pop push adc jne xor pusha jo add mov push push jo call or ja pop imul loopne aaa lods (bad) mov dec pusha push pop shll jbe ffreep out pusha pop jb test das pop push packssdw inc push sub loopne shrl xchg fistpll pop pop xlat add notl xor jne lock pop cmp mov lods push pop push sub outsl pusha pop bound jae pop inc insb cmp pop or add sbb pop pop add data16 imul xor add fildl pusha cmp add dec push xchg or negl popa jmp scas fnstcw xchg push push dec sti add imul jnp jns xor pop aas dec add inc push clc xor xor pop jg ds mov sub sbb pop insb aas enter fwait movsb add and decl and push pop pop or out mov lahf sahf sahf shrl (bad) or or or or push pop cs pop popaw lcall add jmp mov adc pusha lcall ljmp iret sarb mov add or (bad) pop popa mov (bad) ficom (bad) sarb or imul outsb dec mov cmc add ret cmc add roll pop scas add mov dec sti les (bad) repz mov inc icebp jmp shrb and stc faddl cmc into mov repnz fiadd fs call mov leave fidiv push push pusha insb call ret xor int leave add add mov rcrb out fsubs lock pop rcl lret mov scas repnz cmp push fucomip (bad) pusha mov xchg aaa ds into mov scas out aad fdiv add xlat (bad) pop int mov loope aad xor stos or mull adc lods in shll (bad) cmp les out inc mov mov mov xchg fcmovnu and lret arpl mov jmp in mov call pop cmpsb ja ds add add push ret dec push add (bad) push add sub scas scas mov mov jmp test mov mov mov mov mov pop testl mov pop fiaddl push mov testl mov aad (bad) out add stos movsl jmp pop rorb adc maxps aas out and jg push cld add dec dec lret enter ljmp (bad) fstpl outsl dec cwtl (bad) dec dec outsb sbb test testb lret mov mov mov cmpsb mov add lahf xchg add xchg xchg mov movsl jne add popf jbe pushf xchg dec xor cmpsl popa inc add dec inc add sti in ret dec fs push mov mov ds mov sub jb ss mov lea mov xchg enter mulb lods clc les les (bad) dec mov ds aam inc rcrb mov incl repz es dec push pop clc decl pop movb in add call fiaddl sti repnz cmp xchg inc loope jno push repnz push fstpt dec and (bad) hlt add scas pop dec icebp (bad) test add fldenv ret lock add out int3 test fsubs sbb ss mov push dec dec mov pop mov xchg ds jbe aaa inc mov add inc (bad) aaa insl push add sbb (bad) and add je mov (bad) ja,pt add xor xorl inc (bad) cmp dec push push test pop dec test push mov pushl pop add pusha pushf pop cs jb inc (bad) outsl movsb xor je mov pusha jne (bad) jno test lods (bad) mov pop mov and mov cwtl enter lret xor insl push xchg lret lret mov mov (bad) xchg pop adcl sbb mov inc xlat aaa cld jg ljmp aam add in add jmp insb clc in add xchg lret xchg mov aas outsl inc faddp add jecxz in dec aaa lods push test test pop fwait mov jae mov cmp jne add sti add enter cs xor mov lcall inc insb or stc mov push stos dec add push bound std data16 mov loopne (bad) in xchg xchg (bad) pop lods jle,pt fnstenv shrb (bad) scas fwait int jcxz cmpsb sti std out in (bad) icebp mov ds push mov icebp add ss mov xchg outsl push jo push outsl (bad) out sahf repz rcrb das xor add mov add add fmuls (bad) pushf ret cli mov mov add into (bad) mov mov fisubl pusha cltd fs push aas shlb insb mov test push jb mov xchg jns fadds xlat add push mov mov (bad) js jbe roll shrl dec jbe add outsb adc sbb aad ss (bad) jmp cmp push ficompl outsl mov cld cld std mov add mov add jbe std adc adc push inc pop pop add mov sub aas pop addr16 cltd lcall and lcall cs dec inc inc xor sub xchg xchg or scas inc loopne ds cmp sbb and xor lahf sti outsl jg test xor adc and adc and fistp pop addl pop (bad) lret sti inc dec daa sbb mov js xchg mov push mov cmp dec add xor jge popf or jecxz arpl inc aas inc sti (bad) fnstcw inc jg,pt fs jb push mov sti cmp inc dec dec inc dec dec das jg bound stc jmp aaa push xchg inc or push push and dec das sub pop bound arpl jae (bad) xchg dec inc adc es xor addr16 lcall je push aas push inc pop pop sbb inc pop pusha jbe dec dec insl inc les addb ss push push push push add dec cmp pop push pop mov orl add mov out sub aas cwtl sahf xchg xchg cltd xchg mov mov leave leave loop sbb call sbb cld sti sahf sahf popf lahf mov mov cmpsb cmpsb mov cmpsl test (bad) mov prefetchw push cmp (bad) rcl (bad) xlat fcomp lret (bad) fildll mov ud2 or inc sti mov cmc clc repnz clc neg add faddp stos jle add jecxz,pt add clc outsl push clc lret mov divb mov icebp add stc clc lret in out loope fiaddl push (bad) lock clc fidivrl out int dec (bad) (bad) out add fdivr fnstenv add fucomip add fcomip cli clc xlat mov jmp (bad) fstp out add jecxz clc clc (bad) mov fucomp clc in shl subl aad inc loopne int3 aam jg shrl into into iret aas repz mov mov scas scas mov orb mov xchg fcmovbe ljmp mov xor ret add fstpt (bad) je sbb or adc cmp pop cmpsb jmp pop cvtpi2ps mov dec sar sbb jne push add test push sub cmp fidivrl out lret push jae add pop inc mov iret fwait jle fiadd (bad) mov aad jo ret push mov jmp push pop push jbe int cltd pop add lahf gs sahf int3 (bad) push pushf pop es aaa in rcrl loop add mov neg test into mov add xchg cmp and pop clc aas add ret xchg pusha rcrl add xlat cmpsb cmovae and and cmp rcr (bad) fwait incl inc lea add and xor dec xchg mov cmp scas (bad) push (bad) dec xchg aas cmp jl jo push mov push add pop ss push (bad) nop add pop add mov push sbb jnp js xchg push lret cltd lret pushf add in jl call add xchg mov (bad) mov mov add mov out popf jo sub mov jp out ret sti adc out imul mov mov add fild cs testl jo out out les lcall push xor fldt cmp xchg cmp mov cld adc sbbl test push jle clc (bad) or push xchg (bad) into xchg negb cmp cmpsb in mov mov jle add jecxz ss mov dec cld je add fcompl fstl imul cmpsl mov push test pop add or and push and cmovbe (bad) (bad) cmp cmp sbb sbb add dec push push sbb or inc (bad) jg decl dec dec push cs and xor dec push cs or sub ljmp cmp dec dec push sub adc cmp xor push cs (bad) push pop pop sub das xor aaa cmp and daa and dec push push push jnp mov add or mov jno je jle add xchg dec add orl pop add imul repnz repnz push xchg sbbb imul popa push add jae bound xchg jp jne jl (bad) jge arpl insb ss popa orb dec fsin or add packsswb mov aaa or dec inc das xor pop ds and outsl sbb and out add pop and mov adc push arpl pop in dec inc (bad) jno push add and dec and roll inc cmp pop xor ds sahf sub sti add adc mov add add xchg fcomps mov dec push or sahf dec addr16 adc add pop and xchg insb and (bad) (bad) fcompl popa mov mov push mov mov dec rcll ret jb xchg jae cwtl push xchg xchg mov inc dec outsb mov jg into lahf out shlb cmpsl out shrb out aad out (bad) cmp (bad) mov xlat mov fnstcw repz repz in nop and roll in incl sar mov test xlat mov fidivrl (bad) ffree rcr enter shl aad inc test sub loopne jecxz bnd out sarb aas pop lock fldt clc fdivl es jo jp out clc ljmp (bad) (bad) out (bad) repnz es bound repnz fld and movsl xchg int3 (bad) (bad) jl jp test test mov ret leave mov shl aam frstor (bad) (bad) aam pop test push lock test scas imul xor sub nop je mov cli xchg out xchg test push adc pop add cmc adc and jbe add mov loopne jecxz out pop js xlat mov lret add lret out iret (bad) and (bad) std pop mov imul and add cmp fisubrl add jmp dec (bad) jo add in xchg aas add test jo popfw bound pusha sbb jo clc iret xchg mov out aad fcomps or in ljmp nop decl or mov xchg jmp mov xchg inc sub stos addr16 jno sub or mov mov mov (bad) xchg xchg les (bad) cli jecxz xor mov mov pop rcr and push xor mov cmc xchg inc loope inc push sbb xlat cmpsb adc mov sbb mov mov cmpsb or hlt sbb pop test pop dec dec mov lds or imul scas inc and sbb xchg pop push stc xor mov aas mov repnz repz mov mov hlt fnstsw inc loope push jle iret icebp ret push and fwait pop jg xchg push aaa or pop lea loop lods call mov ja ja cmp leave jle rclb repz cmc loope and push pusha or cmpl (bad) fistpll jns rolb cltd push pop push sbb push clc dec gs push and lea lahf mov lds pop and dec sub scas dec dec and loope orl cmp push cmp xor ja je mov push or or jg gs popa imul aaa mov mov jg les loopne sbb out int and roll in rcrb mov and mov dec loopne mov push pop pop jae outsb and mov int3 xor pop xchg leave cwtl clc stc loopne add test mov mov aam push stc xchg and lret jmp (bad) in ret imul and aas push and ds lret add insl mov jb aas roll xchg dec pop pop lcall (bad) mov xchg incb scas ficoml pusha fimul mov out dec (bad) fbstp push ret pop scas sub negb cmp jge fildll arpl dec mov lahf cltd std sub cmc push mov mov xchg enter mov shrl fucomip mov pop sub in (bad) jne and and test gs mov mov dec aas mov mov mov push xchg inc xchg xor cld flds mov test and mov mov push xchg or sbb jg rcrl push mov (bad) ljmp push pop pusha mov bound imul subl inc xorb xorl aaa inc cmpl stos insl dec inc jo loope into cmpsb fidivr pop mov ds fs add jo sub adc mov test sub pushf cltd and lahf fistp pop scas dec and pop cmpb insl jne jb mov mov or lea or or mov adc call hlt and outsb or xor jo ret cmpsl cmp lcall pop inc cmp sti pushl inc test cmp aas add dec xchg dec dec mov mov inc cwtl dec insb push mov cmp mov mov (bad) jg outsl and sub mov mov (bad) in outsl push fldt add fldt scas push dec push lock mov and mov movsb or dec sub lods movsl dec and add ret addl xchg fadds jmp es lea push pop xchg cld outsl (bad) jg cmpsb push popa movsl push pusha movsl push pop movsb dec pop movsb dec add inc xchg ja cmp fadds cmp imul (bad) jmp mov jne ja jb mov dec (bad) (bad) mov push (bad) xchg pop leave xchg pop lret xchg arpl lcall outsb nop aas stos loope arpl lahf stos stos scas out lcall fcomi call jmp mov lret iret out inc mov add and push or adc add xor test push scas and cwtl mov test (bad) cmpsl mov mov mov mov imul mov ds jae mov mov inc scas sti lret dec inc test lods add add pop aas sbb mov ja insb mov insl and nop xchg mov fdivr incl push in out ffreep jmp jle cltd sar (bad) (bad) cli stos and (bad) dec sti scas iret sti mov std mov inc (bad) enter jae (bad) jg out fucomi jmp in (bad) out dec ljmp (bad) jb pusha fwait dec and mov sbbb xlat lock lock notl repnz mov subl xchg cltd mov mov (bad) ljmp jle ljmp pop xchg pop aas popf imul mov and and lds jns jle push jl (bad) mov inc cwtl cltd lcall scas into dec std sub dec ljmp push dec pop push and mov repnz sti and mov cmp lahf xchg test and push push pop or icebp pop shl (bad) xlat call pop pop push add add shrl dec js xchg nop mov push (bad) out mov (bad) lret loopne mov addr16 loopne jo inc popw int incl dec js xorl pop jle fdiv lret lods stc movsb jnp xlat imul adc repnz mov pop inc jne pop cmp mov pop xor cmpsb push adc sbb movd fscale and fstpt jo inc je xchg add xorl sbb pop mov std cld lods add inc or add inc jno jbe mull aas (bad) cmp or add fdiv push pop inc ja sar mov sbb bound notb (bad) aas pop bnd mull pop jecxz (bad) or sub (bad) jle sar mov (bad) movsl aam xor sbb aas outsl icebp xorb aaa js inc jne jno mull (bad) pop dec jno pop stos int and rcrb jg mov lahf mov outsb repnz je addr16 imull movsb (bad) mov mov imul xchg stos int3 sti popf iret pop ds cld or lahf cmp arpl mov sbb jg decl cmpsl out xchg (bad) cli test sti mov int3 cld xor loopne jecxz sbb mull pop jo repz cmp mov xor mov (bad) sti xchg lret push jo jg,pt cmp sbb cmp pop xchg mulb daa jl jnp and test lret mov and lahf and clc xor (bad) (bad) push inc jg dec add xor xchg push xchg pop mov pop (bad) cmc pop (bad) cmc popa xchg cmc gs idiv xchg jecxz xchg cmc fisubrl jno divb adc cs clc pop pop (bad) pushf ret pop add jg and mov add fstp and fbstp ja inc add fldt (bad) mov pop push push add pop xchg jne mov (bad) (bad) jmp lock lock fisttpll loop mov jmp imul (bad) std xchg cld jl std jbe cld imul push repnz sahf lret call fsin cmpsl aad pop sar mov cld sbb lret and nop in in in (bad) (bad) mov inc sbb popf fnstenv aaa scas jl je jno fldcw xchg fcomp imul add in mov xor mov iret inc enter add insl aad or and cwtl xchg xchg push mov inc bound outsb dec mov inc dec inc sub ja push jbe ja push adc imul sub sub push mov daa and xor push push pop add in outsb pusha fistl sbb mov inc dec nop xor shrb fdivrs ffreep (bad) jg pushl rol jmp push mov (bad) icebp aad sub (bad) push fnstenv fidivr jecxz mul sar call inc inc nop cwtl pop add xor shrb shr pushf mov fldpi fucomi int3 rol ljmp fnsave jns jmp cwtl inc (bad) outsb scas sbb inc jae stc out (bad) ret clc repz lret xor add sub es add mov dec mov in jg xor sub lcall (bad) mov xchg dec cmpsb movsb imul (bad) std cmpsl bound into mov mov and ss mov test mov test decb out jnp mov fldt push dec pushl cmp lea (bad) aad int call aas dec nop xor outsb es mov fidiv dec aaa jo xchg loopne insb inc lret (bad) mov repz loop push ret loop and lds std add (bad) cs jns je xor xor (bad) ss push xchg ret xchg lds aam iret fistpll loopne bound jg rol fwait mov cmc loope out fwait es (bad) mov mov push (bad) fucomip js mov mov mov call sbb cmp rcll fildll xor das push lods (bad) out xchg jle add xor out sub mov cmp int3 dec cld mov mov fisubr push bound int3 xchg js mov enter rclb xchg lret pop (bad) fbld rcrl fwait push popa fwait aaa mov mov enter aas xchg xor (bad) cmp stos dec and xchg loope add pusha sbb jecxz sbb mov inc lea popa mov addr16 addr16 mov mov inc (bad) cmp mov movsb pop jg aaa mov mov push mov adc int3 or icebp lock push aas in jbe rcrl push adc inc mov scas dec bound cmp mov mov mov xchg fdiv out xor inc jmp dec loopne mov in ret insb in (bad) je add out rcll mov nop mov lcall das inc push adc scas xchg (bad) in sar add lds je arpl xchg and stos xchg leave mov enter mov mov adc or pusha ror pop (bad) or imul push cs mov in mov mov mov nop add jmp aas pusha xchg (bad) and push scas sti push mov pop pop mov pop mov xor aaa fwait pop arpl cld pop or fldl push jne mov jp (bad) cmpsb mov lods mov fs enter push jo sahf (bad) cli movsl ret adc fwait add cld mov sti outsl xchg cmp ljmp (bad) mov addr16 test and je cmpsb mov addr16 and push pop popa sub xchg mov in pop inc gs arpl stos insl negl jl les dec enter ljmp cs div stos mulb (bad) lods movsb jmp push and clc dec js pop push (bad) fldl cltd cmc push daa sahf pushf push mov mov push jg push jne fimul adc (bad) stc dec jbe (bad) jp cmpsl rorl movsb mov (bad) clc pop jp jle lods aas jb clc js mov cmc inc pop nop sbb loop sbb xor clc and mov cmp sub push push xchg sbb scas iret cld mov loope adc pop hlt fs pusha xchg mov xchg jg out push xchg mov sti pushf into cld push call mulb testb pusha clc push and mov aam lret cld jle mov mov dec cmp aam popf ss fadd mov sti (bad) xor sub std in pop mov das jg xor xor xor cmp repz cmc cmp idivb pop jnp mov fnstcw push stos sbb jg add cli push add cmpsl cli dec movsl cli inc mov cmp std pop bound popf clc sub mov jmp (bad) fucomi (bad) (bad) test pushf iret (bad) mov mov sub mov mov mov lds mov fadds sub test outsl inc lods cwtl adc pop dec xchg (bad) test ds xchg pop or add xor or xor insb out add jl data16 jle mov test cmpsl xor inc pop aam fs cmp push in ss or incl stos sbbl xchg pop lcall test enter push pop xchg jno (bad) jbe mov es or pop mov xchg into pop pop dec ret pop lahf leave lahf lods ffree mov daa outsb xor (bad) movsl in and orl dec xchg aas jnp jns fisttpl pop cwtl cltd lret xor rcrb mov adc (bad) pop dec sbb xor outsb mov mov sub sub cmp push loop in aad lahf out rcrl inc mov jg sbb dec mov pop dec nop aaa dec xchg ds movl rclb mov pop mov lods aad (bad) movsb mov mov push add sbb das jo cmp jg mov shll jo sahf inc out xor fnop andl (bad) leave icebp ret push adc paddsw add xchg cmp sbb pop lods aaa imul sub loope sub cmp lret xlat and or je inc xchg push add movsb fmuls sti cmp sti fbld xchg cmc sbb loop mov mov and outsb xor xor push (bad) pusha inc jae inc mov mov add push inc les mov cmp mov nop imull mov out out lods scas xor cs fdiv in sub rcr dec xor push in je shl out test into xorl int pusha push push dec (bad) mov fildll pop data16 ret rolb mov insb ss dec pop jae inc pop loopne xor pcmpgtb mov cli inc clc aas xchg lock sub out mov push pop and sbb add add adc add push sbb push add sbb push push sbb dec jae pop sbb sbb inc add rorl xor xchg das enter xchg and jmp aaa jae mov add sub inc xchg mov dec adc xlat dec loope add push or adc push mov push daa (bad) cltd outsl push movsb dec addb and and pop test and pop or push push adc fidivl sbb adcb divl mov ret adc push mov scas popa and add sub push nop adc enter ss jle add add add pop fcoml push jmp cmpl in push jmp in and fisubr mov adc xchg test add out repnz add cmp adc lcall imul mov outsl cmpsl xor bound in xor pop and and das mov out in je xchg lock xchg stos xor icebp push arpl jno or out push or data16 addr16 mov or sub out mov xor inc push adc inc pop xor add inc ss (bad) mov repz pop and out push mov pxor cmp adcb add lahf push cs push cmp cmp push clc push or mov mov scas jg xor mov subw xchg sbb insl sbb jno sti adc push dec xlat sbb test (bad) insl mov add adc mov aas stos sub cmp ds xchg pop cmpsl dec rcll mov orb adc call sti jg mov aas or idivl push dec dec ds push fist sub lods es jecxz cmp and and inc dec dec push inc add jg leave sub das push and mov addr16 (bad) fnsave inc dec inc pop and cmp jbe loopne dec push inc inc fnstsw dec dec inc mov push inc pop dec dec mov inc dec inc and push dec cmp jne push or (bad) jae inc pop dec cmp out stc int3 fdivrp and pop fs cmp int pop add clc enter insl divb ds es jl iret sti divb rcrl das adc popa add cmp jo popa inc cmp dec push sbb outsl out adc cmp aam mov mov (bad) ret mov fdivrs and pop mov sub add push cld push andl add xchg ss rcrb xor loop scas imul pop (bad) cwtl xor xorb add add or sbb push sbb push or pop cmpsl and ss add incb xchg das dec gs add insb ds add mov ret adc xor addb adc incb cld out xchg das jg clc aas push pop jmp rcll xchg rol add pop or push adc clts aas cmc mov push (bad) mov addr16 fxch prefetch push mov mov fmuls roll mov mov jg lcall sbb fwait neg out mov lock out ja add loopne mov pop fidivr pop cs andb pop xchg das pop lock xor pop std ss cmp mov push mov dec xchg pop rolb add jl xor aas pushl add dec push push add add pusha xor fildll cmp add psubd pop mov ds pop outsl add dec incl fmuls pop push jnp mov clc dec add push inc mov jne pop outsl clc popl mov les je add pop dec add xlat pop xor lods sub addb mov pop cs pop jle sub outsl inc mov mov pop in les test or lret inc aas punpcklbw add mov push xchg int pop cmp fsubrl mov pop lock aaa inc (bad) cmp add add std data16 adc or push iret negb add inc addl mov insb push pusha xor sbb push push sbb mov cmc incl jne insb js (bad) jbe lock clc dec sbb cmp sbb or int ss xchg shl es jge and loope add loope inc jmp sub inc xchg push ret stos xor push call jae inc mov inc jae repnz inc sbb jbe inc adc push sub jnp sbb das push shlb pop les sbb ja and and clc or adc push sub pop aaa pushf ss fcompl repz mov je xor push push and or sub stos sbb lahf sbb fidivr mov jae add push sub mov bound xchg xchg sbb sub pusha push mov adc rolb lcall addr16 mov push inc pushf ret stos xchg jbe inc lock and xchg xor loope aaa mov mov mov inc lcall insl mov out in mov and fnsave arpl imul stos pop dec outsl sbb lret cmp bound stos xlat xchg jle xchg sub add outsl lret ss sub inc ds and sbb inc iret xchg inc or mov mov bound push outsl loopne jbe adc and (bad) jb mov jo in pop fwait add push sti rolb add push pop jge das inc pop bound js shlb ret jae mov lret imul daa das xlat xor movl inc popa scas mov xor mov insb push arpl xchg mov push and xor (bad) cs jp data16 out test (bad) arpl adc add dec pop add dec xchg push outsb cmpsl add add das pop sbb xor (bad) push adc faddl adc add inc addr16 sub ret add incl shll sbb xor jns es outsl add inc adcl dec imul enter dec adc jbe add pop inc sub mov pop sub xchg adc clc dec popa mov sub rep pop mov and dec cwtl insl push pop lahf ret push fisubl xchg mov fwait inc push mov arpl pop push fldenv bnd ret fwait jbe imul and shl shrb pop pop xchg push cmpsl sub inc xor jecxz pop mov repz push rcll or mov (bad) daa stos jo pop dec out and sbb sbb and (bad) ret arpl sub inc jo (bad) adc mov jae pop ja or mov rcrl push push mov ret insb cmp ja dec adc and sub sbb push movb pop mov adc push add jno aaa stos mov add pop loope sbb cs nop inc cmpsl mov inc push loope or inc fisubrl addr16 leave lds adc xchg outsl push inc (bad) arpl push sbb mov sbb sub push and cmpsl mov mov in lcall add push shr jmp jne pop lea outsl pop and jbe push xchg mov loope jae js call pop xor dec gs shrb and jb jae xor pop jle insb mov ja sub daa mov xlat push lret push sbb imul sub stos add jne dec mov xor adc push jae push adc add inc insl and sbb mov and or inc sbb dec adc scas inc and fisubl pop imul adc and stos mov mov jo jo push out sub test mov jne bt mov and mov xor aas sbb arpl or insl push xchg push xchg sub rclb loope (bad) lret pop inc sbb push sti in test inc cli push push push faddp push bt pop sbb mov outsl pop sbb mov xchg outsb daa or ds aas iret inc (bad) xor push xchg push jne mov scas lds jmp stos push popa out mov sbb pop xor jne frstor sub daa cmp add pop add sub inc or stos and push pop (bad) mov jg arpl sub mov and scas inc push stos js sub pop pop pop sbb xchg (bad) mov dec xlat jne arpl mov bound and push adc push inc adc scas mov (bad) cmp insb push lret adc incl adc jns mov (bad) out jb mov sahf pop or xor (bad) mov inc or add inc scas pop dec rep getsec adc lahf mov sub adc icebp rorb push xor dec jl and mov jno adc mov mov mov (bad) movsb xor daa lret xorl or sbb dec pop or xor or aam addr16 (bad) es and ljmp outsl movsb push rolb mov mov sti add push pop cmp cmpsl ror (bad) push sub leave add idivb adc mov sub je adc pop jnp sbb push je les mov pop mov jbe scas xchg mov sbb fcom mov and inc xchg and sub push (bad) push push je ss push shll sub mov aad arpl cmp movl jmp notl shrl mov inc inc push dec adc pop loope inc mov stos mov sub xchg fisubl pop lods push pop mov js inc jne jne xor pop add pop cmp (bad) adc dec sbb dec jg push pop pushf xor dec xor pusha pop dec stos das inc pop aam push mov fldt pop sub lea loopne inc xor ficoml sbb ret roll add mov or popl push inc jbe inc mov pusha push pop jo sub das cmpl in dec jo pop adc test (bad) (bad) pop out arpl xchg or sbb fisubl das and xchg or popa inc mov rolb xor jae add sbb fwait add aaa repz adc jbe and sbb sub sti sub or pop xchg cmp mov inc adc test adc adc sub push cmpsl sbb test adc inc pusha or xchg pop iret mov jns lret movzwl test mov outsb pop loope in jb arpl xor adc arpl push (bad) push pop arpl push icebp mov xchg dec sub push stos ret and dec out pop add (bad) pop lods push mov jg clc incl mov (bad) aaa mov pop fwait cmp js outsl adc je es data16 ss mov inc rolb xorl xchg in adc pop sub jae sbbl (bad) popf insl mov adc js clc (bad) xor sbb (bad) outsl mov push and dec cmp or add les dec adc push movsb add ret pushf loopne aad adc xor or dec popa loopne ss sub fimul xchg jge (bad) mov or fstl adc xchg cmp lcall add adc (bad) push outsl or insb pop adc push mov (bad) aas bnd je mov mov jb sub add pop and push rorb leave (bad) push jb int (bad) add xor mov call js or adc stos iret adc stos fwait lcall insb insl xchg jo shll mov fldt bound jae jbe js adc mov push push jp cmp popa add stos popl sbb dec and add fisubl xor push sbb daa add add xchg pop leave add adc push add mov xor inc ret fs xor cs and mov and mov or (bad) jge test xor imul repnz sub sbb inc inc aas add mov ret sbb sbb movsb sbb push invlpg popa pushf pusha out in mov sbb inc push and pop fdivl mov sbb adc or and movsb mov add mov icebp add sub add add cmp repz insb or dec mov fildl enter dec adc aaa out fwait ret stos add inc insb xlat push stc add xor xchg (bad) lods pop leave sbb add and rcrb mov lcall lock xchg fcomps and aad sbb add ret mov les (bad) (bad) push lcall xor sbb pop add inc dec inc mov out movl push (bad) mov xchg mov dec imul mov add jne xchg fs push xor sub jno movsb and addb lods inc popf mov inc add adc fsubs sbb and nop sub rolb add sub inc rcrl dec (bad) sbb xchg mov dec inc pop andl jne out cs in stc sbb sub add dec mov in jnp and lea cld fcompl xchg (bad) insl leave adc push add pusha nop adc bound dec arpl inc add and pop fwait pop inc shlb push outsl in add lods inc xor daa mov mov sub andl (bad) and dec sub sub rorb push dec (bad) (bad) jbe sbb cmpsl xor dec sub arpl pop mov or popa sub add add mov adc dec addl fstps jge test out shrl pop sbb or sbb sbb inc add sbb insl arpl pop mov or sbb rcr lret jnp fwait inc or jecxz rolb movsb imul add (bad) xor popa and jno push push xchg loopne dec cmp insb mov adc xor add sub cmp adc ror push gs jge mov lock push add or pop xor sub add rorb sub leave inc icebp mov add xchg sbb or add jecxz fisttpl aas sbb dec data16 sub imul pop sub mov fbld fimull iret daa jnp sub sbb cmp je gs mov test mov mov dec data16 push sub mov movd cmp mov add imul and aas out inc mov sbb call push fdiv push sbb arpl dec cmpsl and and (bad) into mov mov enter lds rcrb add adc stc stos mov push xor call dec loope (bad) loop dec loope jecxz add add mov int and mov imul sbb inc inc push add or xchg mov rcrb movsl and cltd sahf (bad) mov sbb jg cmp add fwait xor ss lods xchg cmp mov aam aaa sub int cmp mov movsb loopne push mov shrb dec adc jbe jno push xchg addl sbb ss mov cmpsb xor xor outsb rcrl xor (bad) ficoml pushf adc andl imul dec loope rolb js dec mov add cmp add sub dec mov mov mov sub mov xchg adc pop pop mov adc jno mov push xchg leave push movb and cmp add push cmp adc insl or and cmpsl gs add ret push pop sbb adc in pop sbb jae push loop lret xor inc pop jno pusha subl addb andl nop sub or xor push jne push incl stos or inc inc in inc lods pop shll ret test mov es in mov in fisubl pop inc add daa and xchg insl ret xchg daa push mov sbb mov and dec test and rclb inc test fcmovnb xor lods imul ss rcrl sbb arpl iret mov push notb sub sbb sub xchg push pop roll andl adc bound adc leave adc mov xor jns sbbl hlt pop sbb and jge xor mov and nop or jno xor mov jmp lods enter dec fidivr mov add sub sub sbb jnp pop jmp stc add pop push lods add xor and mov add jmp pop or dec push mov rorb sbb add mov xor imul jmp ret sbb sub fildl mov lds xor repz xchg adc adc sbb fldt push cld push or (bad) sbb add (bad) jg leave sbb sub lock push adc sbb sysret or jg (bad) pushl and nopl push or sub or adc decl sbb sbb cmp dec sbb push adc push sti outsl and sbb or lock add dec or xchg adc (bad) pushl cwtl adc outsb or inc and lea lea xor adc test push out push push and rolb add adc adc sub or add pop sahf sbb sbb test movsl stos or xor (bad) in incl outsb lock lock sbb sbb or dec add adc push push sbb pop add or pop lock add adc and fdivr in (bad) fisttpl lods xor pop and wbinvd sub and jno outsb or (bad) jg add pop sbb xor or or aas push pop xor or mov popa sbb cld sbb or adc pop inc adc sbb add add push add jle lock or (bad) pushl fadds add pop push lock add push sbb lock add movups push adc (bad) incl adc or lock add je push pushf movlps mov sub push add add adc sub insl add or adc (bad) mov imul pop or adc cmp adc inc mov sub adc mov sbb insl (bad) scas inc leave adc (bad) sbb std or pop das or pop lock lock mov add pop or adc inc lea mov outsl icebp pop lea out sub jg outsb inc gs sbb cmp or (bad) adc or push data16 movsb xor out push xor movq outsl pop cmp (bad) jmp adc aas adc cmp and pop xor xor jg adc lret lock lahf mov and aas add sbb push xlat idiv or dec sbb sbb adc adc xor sub dec inc and repnz stos (bad) in pop adc lods bndldx cmp sub mov fdivrl cmp inc add mov dec sbb xchg das (bad) cmp and faddl (bad) jg add sub adc pop lahf xor bsf dec adc insl pop call sub sbb add push add or sbb cmc or mov push jge mov dec sbb push adc add and mov sbb bound inc xor and pushf add in push or (bad) fucomip push sub ljmp push pop sbb adc adc and push and (bad) jg or xor cmp or pop push xor pop fmul add add aas inc sbb adc add aad push nop jmp (bad) or sbb or fiadd fnstcw push adc sub call add xor inc pop ss push add aam lock or xor fiaddl sbb cmp in and imulb (bad) push movhps cmp sub sub aaa popf mulb adc adc xor add sbb push lahf cmp sbb cmp pop push xor sbb or lock xor fcoml add cmp sbb test test pop scas cli outsl pop adc jle add bound loopne or or push out cmp push adc or inc pop (bad) sbb adc sti ja jb or sub arpl inc inc or push icebp push lock mov nop adc sbb inc inc stos push pop sbbb and stos add shlb or loop add or add outsb adc push sub andl push sbb adc movsb pusha aaa xor mov or or inc or dec sbbl sub das in bt dec adc pop cmp and addl adc dec pop adc jo sbb aad sbb repz xor pop and jo rcll negb aam mov call add pop pop lock pop pop les adc mov mov xor adc add sbb and dec sarb or into aam fstl adc nop adc cmpsb lcall mov cmp adc or js or and push gs adc sbb and adc or clc (bad) js cmp cmp pop push test push (bad) (bad) (bad) lcall pop (bad) sub sub or push push push ja ds lock std (bad) (bad) cmp das push inc sbb gs aas and arpl cmp sub lcall push sub sbb incl sbb rclb push js push pop xor sbbl or push add pop pop and add pop mov iret inc rol pop addl xchg rcrl dec cmp xlat aaa inc adc add add mov pop mov adc mov add push pop add dec xor lcall aaa sub xor sbb mov dec and and mov lock add add push lock dec (bad) (bad) mov or and add cs sub (bad) incl f2xm1 lahf add push sbb adc jg add mov inc and mov imul cmp mov pop loope std das xchg dec adc pop cs inc adc sub add xor adc adc push adc sbb es adc decl add mov cli add lock push cwtl (bad) fbstp pop ja sbb lock add jle das cmp add add mov pushf adc or cmp or add push or or push cmp mov dec pop adc push add inc mov cmpsb push sub mov dec push adc adc jecxz aad inc add and pusha push jb push push cmc lcall push xor sbb adc aaa adc sbb movsl sbb subb push cli adc mov push or or pop sbb dec imul add push adc sbb sbb pop aas sbb xchg mov or sbb popa jae or pop icebp pop adc push add adc mov scas mov adc and push sbb sbb cmovl rcrl cmp cmc stos mov mov lock lods lock ss add add adc sbb pop cmp outsl jle jne jbe and ss sbb fnstsw add adc cwtl add mov imul or or dec ss scas add adc adc inc je call pop push pop dec xor add mov push enter (bad) (bad) out loop and dec mov push and dec lahf inc lock cli inc xchg xchg adc popa sbb push and mov in aaa sbb add lahf push adc sahf adc dec add lock (bad) lock add lock (bad) (bad) incl enter in xchg int pop pop jl or mov outsb jne pop lock das lock push jmp movsb adc sub scas push lea pop sbb jg cmp and xlat fistpll jb mov pop lret pop adc jg (bad) (bad) jnp test (bad) cmp push or push add adc inc add jg add xor push dec sbb inc lods pop stos sbb adc sub daa xor or scas pop scas mov or or or mov or add das dec add or adc adc or cmc mov cmp or lret push or or dec movups or or add sbb jle test std pusha (bad) daa or (bad) lock out and sbb mov stos icebp sbb push enter (bad) sbb (bad) (bad) jg and xchg enter adc pop aas inc aaa dec adc adc fwait sbb sbb xor pop cmp das cmp insl and cmp dec push xor cld cmp dec xor in pop push lock or orb sub inc or sbb jp cwtl mov pop insl into pop pushl push sti adc or cs std aad clc pop and adc sbb or and push push push sub inc aad dec out xchg inc pop sbb cld adc add lods jbe pop lock mov es jl and nop sbb or (bad) add push loopne push pop sbb sbb sub jle mov sub sbb loopne outsl outsl sub and pop dec adc push and aaa sbb adc fist lcall cmp pop sbb fidivrl aad or push in enter adc xor mov or sahf sbb adc adc loopne mov add mov sub fcmovne sub sub adc or sbb push push insb addr16 ss add add adc sahf push jne or adc push sbb imul xor xlat adc sbb dec cmc (bad) cmp cwtl add jp,pn out std mov and and sub push mov std insl dec daa daa push sbb sub sbb xor and dec fistp jo xchg adc mov jl or pop (bad) les notl adc xor inc jne cmp in outsb js adc or or sbb inc dec pop pop jg or dec pop push or add adc pop sub or jp (bad) mov mov and xor push cmp pop cmp jg hlt decl pusha or mov xor testl and push lock (bad) (bad) (bad) add and mov loop push push mov insl add sbb sub pmaddwd lock paddq inc ss (bad) jg pop or sbb adc inc jb inc jl mov or xchg decl dec push das lock dec xor dec rcrb and add lock incl and pop pop lock add adc mov pop lods adc movsb sbb sub sbb icebp lock add dec push xor into testb lock push ss rcrb or adc or ficom inc lcall lock sub sub testb outsb or outsl out push scas push pop sahf adc adc push das add sbb cld lcall sbb pop adc sbb unpckhps pushl (bad) mov adc popa fisubl cmp xor fdivr (bad) call pop and adc aaa pop faddl cmp or unpcklps push adc ret inc das mov or and adc sbb dec and add and hlt add mov sbb dec push lock xor add adc lock pop andb add push inc hlt sbb push or ror mov pop sbb push push adc add pop xor into incl and sub and or inc adc test lods sti jg pushl cmp push jp ucomiss or push sub adc jg mov add lcall push mov mov lock add sub jbe std xor verw mov mov in inc xor sub adc xchg sbb and mov mov adc ja jbe jmp ret add inc dec das xchg or and and add hlt lods mov adc push or or lcall or add push adc sbbl add or or adc push adc push and pop pop pop imul and sahf add or push insb sub adc or and or (bad) jmp pop or or cmp push and pop cwtl cmp xchg roll add cld pop bnd nop aaa (bad) arpl push pop and lock aaa push jbe adc dec adc dec lcall test xor fwait sbb cmp xor pop push (bad) lock or (bad) ljmp cmpsb and jg adc lcall lret dec mov or lock add pop add pop or in adc daa dec or ljmp repnz add and sbb xchg call loop fadds mov adc pop sbb and fldl jbe sub add sbb sbb shrb add and cmpsb andb in xchg ficom adc lock sub dec ja and inc and outsl push mov jns adc mov and (bad) out movsl or sbb pop cs sbb stos adc sbb cmp xlat scas clc pushl fadds adc jbe dec adc or or pushl hlt or inc pop jbe sub inc jo arpl fwait pop scas cli decl and sbb xor xor lock and je test das adc in dec lock cmc push std push add (bad) lock lock add outsb es pop addl adc cmp push mov dec sbb pop mulb dec imul jno pop jae cli fildll and xchg adc push es fs sbbl adc and xor add ds stos outsl xor inc imul pop inc push pop jnp push (bad) mov in or add sarl cmovnp and lcall adc or cmp (bad) sahf sub push ljmp jb bound xor stos dec or pop mov das jo sub xchg sub dec sub or cs sub sbb js xor pop mov sbb pop inc cmc fldt sbb pop sub sbb sbb adc shlb sbb inc cmpl and xor sbb sarb and sbb add mov mov add adc mov push push cmp cltd pop aas jne scas (bad) dec and fisubr adc pop lahf inc add jbe pop jg (bad) xlat das jp jb push add pop fistl movsb add inc sbb lret cmp and jge and adc push add push push scas or or call cmp in in sub push adc fstpt mov dec inc or and cmp adc or lock adc inc sahf or pop adc adc roll imul sbb and aas or lock (bad) cmp push adc sbb or lahf adc cmp pop mov adc dec pushf insl cmp and push or fwait inc xchg and or push ljmp or sbb or or or sub daa pop and jle add incl or xchg lock cld (bad) jg and adc and sbb push (bad) cmpsl sbb or or or pop or sbb or (bad) ret sbb adc push adc (bad) cltd cltd (bad) adcb aam mov out add pop adc and (bad) add jg call inc sub xor aaa cmp push rorb adc adc adc dec jecxz or xor in lock add dec add sub push add or call or and dec pop cmp je lock add lock add scas dec movsb ds lock add sbb or mov sbb or pop lock add xlat loopne add lds or lock in adc xor lcall jo pop loopne (bad) (bad) adc add outsl into sub push dec (bad) jg decb xchg fnsave mov lock add adc cli mov call mov sbb int or or adc dec pop lock or decl in pop jbe popa adc jno xlat xor add or xor cmp and aas lret sub adc es stos and jg or ljmp mov adc test xor sub sub inc add push pop aas jbe std and adc or fidivl cmp pop and mov push sbb push in push icebp jg jg sub and dec daa je pop add lds or push and sbb pop pop stos add lock add lock add lock add mov push or mov or ljmp mov sbb sti add jg mov sahf test (bad) mov or push dec arpl inc and sbb fild inc add sbb pop (bad) cmp (bad) jg punpckhdq adc pop pop adc dec inc lock add pop cmp pop push icebp imul sub sub add orl pushf stos mov mov sbb adc sbb and sarl add ret loopne dec xor xor adc inc inc cmp aaa jbe add mov aas sbb xor add inc outsb xor xor add pop sub xor xchg mov add add daa call pop fmull adc xor mov add and jnp int3 adc or push ljmp mov mov call cmp pushf jg dec xor jmp or add jmp inc and outsl pop insl push mov lret xchg push add mov ljmp push add (bad) loopne and lock add sub sub fistl jmp lock add push push sub lds sub pop test ret adc sbb das mov or jbe sbb movsb or pop (bad) (bad) xchg sbb add push inc xor sbb mov or ret dec push out push push dec push pop or adc and push or xchg leave cmp unpcklps sahf cwtl jle add pushl push xor fs pop pop bound cld cli fbld pushf or cmp pop adc sbb jp adc mov sub sbb xor adc arpl mov ss and inc jbe mov lock add pop adc sbb cmp add sbb and adc add add adc jns or pop or xchg xchg lret pop fs or xchg pushf adcw sbbb cmovo cmp mov add cmp jmp jne hlt sbb add or or out adc in mov call or add jbe pop add inc and push test lea add fadds jle adc and adc aam mov lods stc or adc rcrb add stos adc sbb pusha inc roll lret cmp jo add adc push inc cmp add adc mov jns add sahf inc and and test adc pop cs pop outsl mov imul sbb xchg mov sub cmp subl dec add jbe imul aam gs add inc lock xchg je cmp add ja mov nop je repnz dec imul lahf je cmp cltd lahf lcall popa jns dec jns xchg out dec pop pushf sub andb jmp data16 lahf xchg in cs inc cmp and xchg incl add add add add add data16 call int jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jb dec add jne mov sub adc adc jmp add jne mov sub adc adc jmp xor sub jb shl mov inc xor je sar mov jmp add jne mov sub adc jb inc add jne mov sub adc jb add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov push dec repnz push call or je mov add jmp call add lea xor mov inc or je cmp ja add mov xchg rol xchg add mov jmp and shl mov add jmp mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp add add jns mov add movsb jns add add add add or add add add pop add addb add mov add add push add test add push movsb jns add add or add adc add and add xor add inc or sbbb add inc add andb push or adcb add cmpsb or and add or add xor add push movsb jns add add add add add add mov cltd push add ja add movsb jns add add add add add add loopne add call jmp add movsb jns add add add add add add or add mov imul add movsb jns add add add add add add xor add mov add cld sldt add add movsb jns add add add add add add pop add add mov add push movsb jns add add add add add add addb add push add add movsb jns add add add add add add test add mov add sub add push movsb jns add add add add add add rolb add pop andb shrb add push movsb jns add add add add add add clc add add scas sub sar pop add movsb jns add add add add add add and add clc stos xor add add movsb jns add add add add add add dec add add sti aaa add adc add movsb jns add add add pop add add add add add add addb add lock addb add add addb add push add add add add movsb jns add add add add or add or add add push movsb jns add add add add or add add add add push movsb jns add add add add or add add add cmp xor add push movsb jns add add add add or add add add add push movsb jns add add add add or add add enter xor add push movsb jns add add add add or add adc add add push movsb jns add add add add or add adc add add push movsb jns add add add or add add xor add pop add xor add addb (bad) sldt test add rolb cmp add clc add cmp add and add dec add add jo add cwtl add add rolb add add add adc add push movsb jns add add add add add add dec add add add add push movsb jns add add add add add add jo add int3 adc add add push movsb jns add add add add add add cwtl add add cmp mov add add movsb jns add add add add add add rolb aam cmp or add push movsb jns add add add add add add call sbb add add add movsb jns add add add add add add adc cmp push add add movsb jns add add add add add add cmp cmp int3 add add movsb jns add add add add add add pusha add cmp adc add push movsb jns add add add add add add mov cmp int3 add add movsb jns add add add add add add mov add mov cmp xchg add add movsb jns add add add add add add fadds cmp les add push movsb jns add add add add add add add add or cmp cmp add push movsb jns add add add add add add sub add inc xor add add push movsb jns add add add add repnz sbbb addb add add add push movsb jns add add add add add add jo add fdivs cmp adc add push movsb jns add add add add add add cwtl push add call add add movsb jns add add add pop add jg add push add sbb add inc pop add push jg add jg add jg add pop add push movsb jns add add add add or add pop add sbb cmp adc add push movsb jns add add add add or add pop add sub cmp adc add push movsb jns add add add add or add add inc cmp adc add push movsb jns add add add add or add cmp adc add push movsb jns add add add add or add cmp adc add push movsb jns add add add add or add pop add jl cmp adc add push movsb jns add add add add or add pop add nop cmp adc add add inc add dec add or inc add push add dec add inc add add dec add dec add inc add or dec add add inc add inc add add inc add aaa add add pop add push add inc add aaa add add add push add inc add aaa add add push add add add push add inc add push add or push add push add dec add inc add dec add inc add push add inc add inc add dec add push add dec add add dec add dec add dec add push add dec add add dec add push add add dec add add dec add add add dec add dec add add inc add dec add inc add dec add inc add add cmp mov add add stos cmp aam cmp push stos cmp fsubrl add sub cmp xor test add inc stos cmp hlt test add dec stos cmp cld test add pop stos cmp data16 cmp jbe cmp xchg cmp mov add add add add add add stos cmp add add (bad) stos cmp add add in cmp add add in stos cmp add add dec inc push dec inc dec xor cs dec dec add jbe jo xor cs insb add insl arpl xor fs insb add imul insb add gs jne xor cs insb add gs xor fs insb add jb imul add dec outsl popa fs imul add inc gs jb arpl fs jae add push imul jb je arpl push imul insb insb outsl arpl add jb jne insb inc jb add add imul jae add push gs insb jne push add dec insl popa addr16 imul add add jbe inc inc add push popa jb popa outsb je outsl jo add add je inc add add jb jne jb push popa insb jne inc add add add add ret cmp jbe sti call in push push xor call repnz mov test je mov mov push push or aas add add (bad) outsl outsl add add cmp pop pop ret mov push int3 pop xor sbb in out subb cli push or dec and or fldln2 mov xchg pop add dec cmpb (bad) xchg and add (bad) fisttpll fs dec jle in adc push mov push (bad) (bad) (bad) (bad) pushl mov inc test jne sub mov xor xor mov mov mov test jle (bad) add or adc sub jmp cmp mov push add nop mov cmp jne movb lea jmp movzbl (bad) fucomi fisttpll mov jl push je dec dec jns mov mov (bad) cld mov add mov sar push or pop clc mov mov neg fdivrp rorl push add shlb shl or mov out (bad) in mov or js adcl out add (bad) int (bad) cmp jl hlt pop pop movb (bad) jnp inc pop mov pop ret or jmp mov or pop dec mov (bad) mov add cs jge (bad) std jne push push mov clc nop mov push lea add or movsb popa mov lods xchg mov push push add movsb call lds jg insl fisttp jbe,pn les xchg mov inc or cmp or mov popa sti fidiv hlt sbb (bad) push xor xlat int push ss movl mov or sub inc add mov pop add push inc add rcrl fistl xor imul or ret movb jne adc loope arpl xchg mov jl add dec cld push push push (bad) lret stc stc out pusha ljmp push rcl int3 pop divb or add fnstcw sub inc push cmp (bad) out jo mov inc add orl and shll js mov jl sub rol inc sbb wbinvd push mov fs push inc add jmp mov sub mov cmp lds mov mov cmp mov jbe iret jbe clc in std mov jne (bad) mov popa (bad) pop movsb xor shrl (bad) pop push ja lea movb fldenv std sbb xchg cmc cmc push jp sti nop cmc lea sbb dec outsl movl jbe push lea out fstpt and push inc rsqrtps push push lea sahf cmp push push ja ret popf jmp sub mov pusha rorb test xor mulb xchg mov mov jge mov push push movl je neg sbb popa pop sbb add dec popl cld ljmp icebp push cmp cltd mov jne mov mov movb mov cmpl xor push jl decl xor inc cwtl push xchg vmwrite adc xor fcoms imul push decl enter std (bad) mov push jne cmp je jnp mov mov insb fcmovnbe mov nop and adcb inc mov inc add into sub add mov push insb test or in (bad) or cmpl cmp nop inc mov sbb mov cmp inc test xor pop insb arpl fldenv cld xor push nop in stos cmc sub jmp and lods jle push pop sub mov mov mov sub fsubrs mov and repnz fldl loope pop cs mov in icebp cmc cmp mov sti mov push faddl dec adc (bad) mov (bad) lea dec fcoml lock sub and sub adc iret insl xlat flds lea adc into add mov cmp mov in xchg inc cmp je inc or cmc jle sub int ret adc cs pop inc adc (bad) pop sti std jle xor push jae cmp add or push push adc ret adcb cmovge or pusha or pop add lods and adc (bad) jne or pmaxsw add pop fwait cld mov movsb clc adcl mov sbb xchg mov xor (bad) jl test mov int3 nop mov into dec xorb add insb jne addr16 pop cld cmp cmpsl xchg add pop stc cld clc cld sar or xchg adc shrb dec add clc mov xor bound inc sbb scas jne movsb dec mov mov xor sub adc sbb xor or adc gs adc icebp fsts dec lea in inc dec dec push fldt lret cwtl inc push adc and cmp mov mov mov shr mov and rep je pop (bad) lret pop push pop add xor test xchg insb outsb xchg adc stc jo inc imul mov jno adc inc std jbe movb or sbb out test js je inc dec cld sub dec push push adc int3 xor xor push mov cli push nop push outsb inc and xor xor daa or inc pusha ret pop push add cmp ljmp sti jmp les daa icebp sbb jns push jae lcall call push add iret outsb addr16 in (bad) lcall xlat pop add dec test (bad) fiadd popf push sub insb js cli sub ret push push aam and les push inc je xor add xchg loopne fwait in (bad) pop mov insb outsb addl jb mov in aam leave fcmovbe test ja jno stc jmp (bad) push (bad) pop fimull mov insb data16 in sub pop cli clc adc jp xchg mov xchg mov sbb xchg pushf fidiv fmuls lea sbb rorb pop idiv pop mov dec cmp into pop ret push push repz inc adc xor rcrb mov inc rorb clc pop ror sbb sbb (bad) cmp pop lret push push push push mov adc and inc xor xor push test loope fs mov fdivl xlat inc loope jo loopne sbb aaa sbb fistp dec in push call or push xor je push add jl cmp push jnp in sbb jmp loopne mov test fildll outsl mov xor mov mov icebp popa sbb hlt push test sahf xor push mov and lock fwait adc adc enter imul (bad) xchg pop push (bad) insb jo sbb sub xor or pop push jl ss or fistl es jp jae or push push xor adc leave cmp insb dec (bad) mov lods mov pusha sbb fist aam fsubrp and mov rcrb into jo int push outsb adc add test js roll sbb xlat mov add pop cmc call xor neg sbb and cmp cmp adc nop sub cmc stos inc cmp push xchg add pop jne imul hlt push mov push jae hlt fadds add pop jne loopne fisubr pop pop setne cmp sbb das push and sbb push mov mov dec push lock pop popf fcomps in in xlat mov and leave push push int mov (bad) in (bad) in cmp pop or test or adc repz inc and mov adc and lcall add (bad) (bad) fldl clc cmp repz cwtl in lea jo xor in lahf add mov in jb inc jne lea push pop push (bad) push popa sti out lock adc or xlat jae in add push lea add mov push push push sub mov mov cmp lods pop push cmp adc jne stos mov addr16 cmp adc and sbb or push data16 ss or into insb lret aam mov inc cmp jl and rclb notb bound rorb adc push or push dec fwait mov int3 test or jl insl int sahf roll (bad) xor shlb pop loopne mov in push mov subl decb push iret loop dec add lahf fsubs jbe adc fmull cwtl dec mov add push push dec pop inc jg dec clc mov aam mov fstl popf enter add gs adc fstpl in cwtl inc xchg jp xchg int3 or pop xor cmc ja int push mov and hlt add pop fsubrl jnp and std or xchg inc fistl sub xor or and or sub int3 das or pop test faddl je xor insb clc cli adc inc cli sbb mov adc int3 push or insl ljmp orl sbb inc and ret push cmp loope mov out mov rol rorl fcmovnb mov mov xchg xchg or test and xor (bad) insb (bad) enter add std roll jb out cmp sbb jbe mov scas xlat inc jbe hlt and or cmp pop mov xor pop test mov cmp mov mov pop inc inc mov inc mov iret xchg or push out push mov insb xchg nop mov xorl in add pop fwait and xchg dec mov pop xor add insb dec incl add inc sbb mov xchg push sbb lahf mov add inc jmp popf xor push cli je in mov or rcll pop enter fadds daa mov push daa dec mov push fisubrl inc push sub push std pop insb add add cmp je pop mov and aas pop lds arpl inc sti or cmp sbb sbb into in or xor (bad) xchg inc or fsub bnd and mov mov scas push call push inc cltd cmp sbb mov es sbb popa cmpb pop test add xor sub add mov mov ss add in mov (bad) sbb addr16 inc and and inc push dec jg ret enter pushl jne dec in add sbb add mov mov dec lcall (bad) faddl adc insb or or aam fdivl cmp test jne pop mov std sub jle or mov sub jecxz incl inc call cmp push xchg xchg adc movsl fmull sub xchg rolb push and push movzwl int3 sbb (bad) in sub lea mov pop sbb repz fsubrp (bad) (bad) lahf pusha add mov xor add out addr16 andnps add or dec jbe adc push cmp pop pusha mov fildll mov add push push xor mov push and xchg test cmp je inc mov fstps push pop add outsb test add sub push fdiv lahf nop and js nop cmpb inc cld imulb dec jns ret movb push lea sub decl (bad) jle lahf or mov xor shr xor and inc (bad) fcmovnu not add shl rorl (bad) jl stc add in flds dec mov sub mov and sbb and sti fs or cltd cmp scas cmp das add mov lds xchg lea mov nop or (bad) nop (bad) xchg cmp incb iret inc adc test mov pop not mov mov int3 lea in push or xlat outsb clc push push data16 cmp jmp lea lock fsubrl sub rorb lods std (bad) imul dec cld jne lea (bad) sarb enter jecxz adc (bad) loop sbb arpl jnp fiadd push test or icebp pop mulb mov push jbe xor adc xchg mov std rsm xchg adc mov stc lods ja daa inc adc incl jbe ret fldl pop stos adc rcll popa lds cmp sub sbb in sahf xor mov mov lea pop sbb or jb push scas cwtl adc std in std sti mull test pushf lea hlt ljmp aam sbb sahf push call sahf rclb pop add dec mov add mov addr16 sbb jae ret xor lea (bad) sbb add add sbb pop hlt pop pop lock and adc xchg mov xor jecxz lock out jne jbe mov adc lods push ret jg cli or add sub je and adc sbb fidivr adc mov mov call add sub pusha jg sahf mov std aaa inc mov hlt nop popf in add lea mov or pop arpl xor mov push mov xor movsb je int push lods pop pop cmpsb adc shlb (bad) mov mov dec (bad) (bad) cmp jb lea nop pop push lret data16 mov sbb jne cmp xchg xchg lcall or pop cmp push (bad) sti decb push lea mov cmp jo sti push bound aad out inc mov push insl incl xchg sbbl mov pop ja sarb pop push test test mov loope je test sub pop divl jl mov addr16 mov iret subps mov mov jne xor dec jne pop movsb mov xor push xchg or adcl (bad) mov jns iret sbb push mov cmpl xor call jns xchg lea inc lods jmp or mov pop lea mov adc ror repz movb sbb aad mov hlt add inc jg popf mov cmp (bad) test sub in xchg inc icebp (bad) lock cld xchg cmp (bad) pop in sub mov les lock rclb lret lea fsubrs sbb and sub in sbb scas sbbl mov test stc lds xchg movl in sbb loope subl or pop mov inc xchg adc add mov shlb cmpl cmpsl add bound dec pop lods jbe xchg xor mov push xchg add ret movb or icebp imul (bad) stos pop insl jne in mov add or or mov push test sub xchg gs jl insl push gs xor rol sub and push mov xchg adc push mov add fisubl mov test es mov clc (bad) lea aam jg xchg sbb pop lods (bad) mov das xchg hlt jmp movb xor bound (bad) (bad) sbb mov push dec dec push pop movb sub (bad) fldt or pop jne xchg pop push cmp dec jbe sub loopne out cmpb aaa xor xor push (bad) mov sbb jb popf dec dec pop cmp push pop lock stos add std loop mov inc pop cli fstl in jns ja cli pop or inc inc outsb push jo jb inc jbe prefetch or inc sahf fsubr push mov xchg lods adc jo lcall jo xchg push popf sahf cmpsb out in xchg add cli add enter cli into push add mov or std lcall (bad) js push jns push dec push lods mov xor cs push mov xor ljmp stc decb add pop xchg gs (bad) rcl shlb inc fstpt ret aam leave popa sbb mov jmp xchg movsb add mov mov inc ss repz and adc in lahf sbb push push adc adc pop and inc into pop push adc xchg outsb dec push enter clc (bad) popa push mov mov add stos push pop adc mov pop push add test pop jo sti inc push add xchg jo es jl inc mov js jp inc mov inc cmp inc sbb daa push inc adc xor cmp jne pushf insl pusha mov xchg mov movsb xchg dec and sbb xor push sbb mov stc jb lds inc push std imul dec mov je mov cmp push mov push cs cmp and and mov bound dec incl (bad) mov fiadd mov ljmp sbb or loopne xchg ret push aaa xchg punpckhdq push mov sub jge mov rep (bad) sti cmp jne xor push jo pop adc scas sbb jmp cmc fs into call push pop or mov mov xor or xchg dec in js push aaa js jnp sbb daa fisttpll mov pop pop leave movsl fucomip das (bad) push mov and fnstenv jno out mov add mov add cmp in push fadd pop test mov or aas fistl xchg dec repz (bad) jne (bad) fdivr lahf (bad) jle mov test je add les mov xor xlat fisubr fucomip stos xor mov jmp mov sti dec rorb movl jne dec mov push arpl sub insl and popf in nop mov xorl subl enter ficompl pop xor jne dec mov and pop cmp jae mov sti ret ret add jae and push xchg push mov dec dec je,pt sar sub inc lock out sbb inc mov mov add pop pop or jmp bnd push add rclb push inc and lock sub stos incl add ret andl push push and mov xchg addb andl sub (bad) xchg add cmp lock push xor sub sub dec fiadd neg pop dec cmpsb into inc ja push test ja pop jecxz mov (bad) xor mov ret or mov lock mov mov movl sub das sub in daa jne and je lea shr aaa sub jne adc pop bound test jbe jne xchg out adc ss insb mov xor or mov jae lahf mov loope cmpl rolb mov push je add test test bound sub cmp sbb testl xor push fsts test or pop arpl int jne icebp ja mov or dec (bad) xchg movb cmp adc rcl fldt jbe dec insb mov add mov push rorl sub pop push loopne dec jo pop daa pop jg mov adcl sti (bad) cli sub pop or incb testb jne addl add or mov popf enter das mov push aaa push fs jge inc cmp or push push or call (bad) das loopne fdivrl (bad) je pop sub cmp pop adc cs outsb das repnz or mov cmp je clc andl std (bad) mov xchg and push jge sub arpl and lret in add jmp sub lods addr16 in std mov clc mov rcrb je sub lcall push xchg rcrl ss lea sub daa cmp jne lea je jns push cmp or xor dec rol pusha sbb jge sti out (bad) xchg adc sti mov and je or cmp or inc mov and jns (bad) add cmp jne dec push cld insl jbe or in mov jmp and imul adc arpl enter daa xor mov jo inc adc xor js pop in mov xcrypt-ctr cmpsl sbb pop mov add xchg dec push das pop jb leave je dec maskmovq cmp scas sbb imul testl jge mov je inc sbb subl ljmp mov loope aaa das lock mov pop sti push jb lds push call mov mov sub add jmp cmp jb fildl lahf call (bad) clc mov xchg jo xor aas mov imul es sbb cmp ja pop mov mov xor mov les out idivb sub call mov sbb fidivr mov loopne (bad) in xchg cmp xchg add js gs pusha adc jmp in leave sbb idivb push je shll sbb or test mov sbb repnz loope mov sub adc or aas xchg xchg ret (bad) jmp test loope imulb sub daa insb cmc jbe xor sub mov vmwrite sbb sbb andl pop add jo insb xor sbb add sbb jl xor push fldl inc rolb out movsb mov mov push insb ret xchg sbb (bad) mov les fucomi imul push icebp movl add (bad) pop add int dec imul sbb dec push jns test (bad) js out testb mull mov mov jne orl pop or test jne cmp stos or fstps hlt cs fistl jns int3 jg fldl fnstsw adc mov cmp lock enter jo loopne (bad) pop add pop mov imul mov cwtl mov push lock mov adc pop insl mov add mov jne rolb lcall je jbe xor cmp (bad) sti jo xchg push mov pop adc dec xor mov sbb mov out scas pop sahf aad mov loope and and adc or lock pop popf push cli xchg test and xlat les movzwl jmp in fimul push push inc outsb sbb push das jne mov sbb (bad) aam or call outsb fsubrl xor add mov insl or dec jo mov arpl psubq mov ret or fwait fwait fwait adc mov data16 fnstcw or xor mov add fld fidivl pushf (bad) mov add insb cmc cld mov inc or scas mov sbb xor adc movsb scas push mov xor mov or (bad) lods xor mov lock test push mov mov fmull movsb jnp dec les int3 shlb push dec or dec push sarl out enter dec das xor and (bad) in push cmpsb sbb cmp test loop add mov fs xchg loopne push stos dec or inc adc insl cmp or push test dec gs popa subl inc jne push xchg add xchg xchg stos jmp xor in add dec sbb dec mov mov sbb xor and cmc gs jns stc call (bad) mov sbb jb xchg pop mov sar (bad) cmc push jo loopne add fsub jmp icebp pop call je and add fldl push (bad) pop test and xor and aam sbb mov push int shlb outsb cmp test daa jmp pop and call sbb ljmp xchg or js mov mov jmp aaa fsubs rclb or push daa push xchg testb or pop pop jnp cs inc jne aas push jmp mov cmpsl push xor movsl sahf stos adc add push cmpl push cmpl jne adc (bad) jle jg adc add fcomp pop clc dec addb add lcall std andl fs mov enter fs push and sub xchg add mov (bad) pop or lods or dec cld loopne addr16 pop dec jne out iret ret mov enter lret and sar or sahf out or lret jg fwait daa sbb dec mov out and ret xor adc jp jno fsts mov mov fwait add out rclb dec and fstpt adc mov jl loopne pop ja jbe test (bad) fwait shl outsl lfs fimul xor das in pop sar pop decl add ds jno (bad) fidivrl and sub mov add and lock pop arpl repnz sub dec add je or dec dec je or das sbb or push in adc addl inc cmp sub in negb mov or insb pop add popf negb mov mov or lret or mov and nop call mul or add push mov inc dec je add je mov pop pop insb je ja (bad) or sar add cmp inc adc shlb adc incl and push cmpb mov test add cmp arpl xor insl pop sarb fs cmp pop sahf in sahf outsl ss js cwtl in es push fisttpl cmc movsb std or mov jne push (bad) mov mov xchg bound andl xchg (bad) mov mov dec cltd and clc xchg (bad) mov int xchg add pop loop push mov imul adc icebp lods sub xor ret test je dec inc add and mov sahf add pop push jne sbb outsl insl mov js sub sti or inc cli push ljmp dec leave push sbb dec mov push mov and mov out jnp jg rorl mov shrb pop inc cld mov pusha sub push push fsubrs inc je mov pop push outsl jnp mov mov jg loopne int cmp xchg push xchg sarl cmp (bad) xor add cltd mov pop imulb ret lret or sti fwait jl inc xchg xchg pop push lods xchg out mov outsl mov lcall or mov add je sub test add jle adc into or push aam inc jmp andl call cld jae sub lods pop sub pop fsubrl or or or arpl dec (bad) fmuls pushf adc cld mov mov add or sub pop lea mov popa mov xor mov call aas push adc addr16 adc push mov mov or daa adcl jle mov (bad) pop sub dec loopne roll ja adc mov fsubr or pop loope ds inc mov xchg mov fiadd test add mov jge adc icebp (bad) push jg sbb (bad) lock out test sub dec push sub dec mov add cmpsl call sbb and cmp or fldl sbb insb ret push pop inc sbb or fs ss xor outsb cmp push lret es out loop ret push adc daa cltd adc adc rcrb xor cmp dec out aad or movsb pop or adc adc addb jno sarl adc dec movsl inc leave (bad) or mov sub mov cltd and ljmp test jg jl jae neg adc neg mov push nop mov test or insl jne push add andl dec pop mov or adc lea fs push xchg ja (bad) (bad) push je mov cltd push push push cmpsb mov mov mov (bad) xor jne cmp inc fmuls mov dec jmp cli repz inc sub dec fsubr aad scas sbb mov cmpb je outsl pop out decl inc jmp dec popw cmp mov insb lods add jmp lock jb std inc jmp dec cmpb fwait je in sub imul mov ret inc xor insl test stos sub sub add int3 bound adc sub adc adcl fwait sbb pusha mov dec dec mov lds pop add imulb xchg add (bad) sbb adcl jne lods lods or mov fistl pop jecxz (bad) jmp pop jne jno pop sti je or or jp ret xchg hlt jb or (bad) bound fdivl cmp sbb nop xor popf cwtl cmpsb jne jmp push mov sbb loopne sub es add je mov mov insl adc (bad) movsl adc fwait shr jp ficompl jle and das add dec mov shr cmp mov push xor dec movsl out or cmp cmp cs rcrl sbb ja or pushf and pop push outsb inc dec push sub jne pushl dec stos loopne movsb mov in jo xor add sbb and mov push inc push test pop in aas add xchg clc push (bad) in mov jb enter shrb pushf (bad) jno push cmp lods xor in sbb sbb or and jae loopne adc mov inc lea lea sbb or or pop pop mov fcoml add loopne jle inc pushf rcrb jo sbb adc ds jmp pop sbb mov ret (bad) push add int mov sbb add mov inc mov div lea pop adc push pop mov push insl jmp mov push pop cmp sbb and or outsl inc xlat inc xchg das lret adc jae adc xor add mov add ret insl bound out mov fnclex lea and shl push or decl jne ret mov add cmp je test add sbb jne or push jo jecxz push or incl mov lret add add xor aaa aam or cmp loope jne and push je add and adc fwait pop mov cmp lcall (bad) je cmp je out call out pop mov xchg sub mov pushf je std cld and inc jb mov hlt mov loope pop aam adc out cmc dec int in xchg adc outsb out sbb add jg repz push mov push lea cmpl test ljmp push mov enter xchg push mov roll orl lock loope pop inc jmp cmp stos orl jmp or jne aaa mov add adc mov add push or or sub fs and mov mov jge or (bad) adc and adc xor jo xor adc adc pop lods movl mov mov fwait lret or mov and loopne insb out std lret sub mov cmpsl add lea cmp adc insl jmp adc sbb lods cmp clc jbe mov test ret sbb or decl sub cs mov imul subl cld decb icebp mov jo test cmp jge fisttpl mov jmp jbe lahf notb mov je das inc dec add adc pop sbb mov lock cmp and ret negl (bad) adc jmp and loop je sbb hlt test mov sub add (bad) cmp dec mov sub fs imul xor iret daa and jbe push lret xchg cmp jno lret dec aam add addl mov das mov pop orl out rclb mov mov push or popa add fxam mov sub mov mov loopne lcall leave and push pop mov sbb sub sti pop std and pop ret or sti mov xchg mov clc pushf pop js add inc lea inc adc pop sbb loopne jecxz push mov adc mov jno es cmp push cmp pop xor mov (bad) adc xor and testl mov pop jbe test pop jo (bad) mov add pop imul or dec addr16 dec repnz sbb or inc lds insb pop imul nop or sbb cld mov xchg clc mov mov fwait sub out push adc inc mov xor pop add clc mov adc add pop movsb or sti jb pop cmp je or stos fdivrs adc rcll in int adc cmp lea push inc pop mov push jmp or stos push shrl pop push mov adc mov or add out loopne loopne into and xor dec pusha inc sub cmc push addr16 les xor mov or clc dec push jb inc add in mov je add sub aam leave aaa push add mov jne iret pop (bad) je or ror add sub xor sub adc ficompl cld mov dec clc xchg dec add adcb ret mov jne xchg rcr or mov pop insb in and xchg dec hlt mov jnp or add cmp adc (bad) ss push sahf lods push sbb push call mov loopne or dec (bad) sti inc pop lods std lods add add dec xchg fadd in mov loopne scas add (bad) je mov inc jg sbb jne into dec inc cs cmpsb and (bad) push cmp mov ret mov test cmp insl loopne sub or and add inc add push loope mov push add push sub push jne lods pop fist push ljmp sti (bad) fstl pusha xchg out or push rorb fwait cmp insb dec or loopne mov push jmp cmp call and add (bad) dec imul mov stos mov test cmp or adc dec mov add lcall enter mov add or loope or inc mov stos add (bad) (bad) into mov mov inc dec jne mov sub pop lret push insb adc dec es push dec rcrl (bad) out call mov loop or mov xchg out sub test and out adc sbb adc add outsb ja sub inc push lea pop cmpsb push mov push push mov je xlat cltd insl jbe jo outsl push jnp push scas add push xchg sbb pop aaa fstps jp push push xor rcll inc and popa rorb and aaa mov xor inc data16 push orb stc lcall adc adc ret fisttpll mov xor pop mov lock in divl mov sub mov push mov rorb ja fs lea jmp mov cmp cmp or loopne jmp lods jle ja inc cmp jb cmp mov (bad) dec roll mov push ss mov aam dec int add mov ret add cmp inc ss sbb jno daa mov (bad) and sub mov mov ss push push or mov mov pusha xor adc leave and fistl ds sub jp add xor int3 and dec mov jne enter push mov push cld dec gs add js les sub xor fnop push test xchg push test movsl mov mov inc loopne aam or js fnstsw jns adc fstpl xor and xlat (bad) je or js mov movl adc mov sbb inc fdivrs jae roll xchg pop call out mov (bad) or imul (bad) aam sub mov dec test imul mov jno rolb add sub push pop sub and loopne adc movsl out mov sbb dec ljmp cmpb shrb jmp add fcoml cmpsl fwait movl mov push mov js mov sub std hlt pop mov in arpl lock repz outsb mov clc pop jp sbb negb addr16 jg mov and push mov inc dec jne mov mov push and jmp imul stos jnp cmpsl cmp adc push enter fs (bad) hlt loopne or fsubl and jle mov repz sahf test jno push and sub roll pop insb decl mov call cwtl push push nop cmp mov dec pop and imul push jl shrb daa push mov push inc pop les sbb xlat testb ljmp popf add xchg xchg mov adc push cmp add test jae or lcall mov call or in sbb mov adc jmp jne sbb adc out lea dec push int insl outsl enter cmc xlat sar aam cli pop push and sbb push mov push test jns ja adc std adc pop xor dec test push push xchg scas or mov xchg xchg add nop mov push icebp lea or cmpl arpl je mov sbb pop rcr movnti or aam push adc rorl lret lcall xchg sub loop loopne sahf xchg sub push mov cmp jne or cmp mov (bad) cltd cmp mov cwtl rorl iret or cmp rolb xor sub test adc mov rclb dec (bad) aaa call call cmp sahf mov pop jne shlb lods inc jg loop xor pop test mov pop cld adc fldenv add and add (bad) mov cs cmp movsl mov xor divl mov and in pop sbb pop dec cmpl add push add cmpb out dec ja and lock repz and insb ds fwait sbb inc cld addb adc in jmp sub and cmp mov push aam (bad) mov sub mov adc mov (bad) ret stos sbb sbb add sub repz sub push jnp lea outsb mov push sti mov (bad) adc pop out mov fbld mov je add xchg inc adc add push add dec dec pop adc and ds mov inc rclb mov insb scas xor pop adc mov inc sbb or mov or cs push add add ret pop pop cmp pop and mov fs jnp dec std dec das adc addr16 insb pop imul (bad) js or icebp addr16 adc inc rcll enter clc mov sbbl sub xor adc inc and xor inc dec xor cmp adc jle pop or dec dec pusha push push movsl je aaa in fcoml fdivrl insb mov inc pop cmp (bad) hlt aas inc or inc test sbb pop out ss into mov xor push insb clc ja andl and adc sbb dec inc mov inc mov add fcoml sub (bad) push inc and or pop cmp and pop inc or bound outsb out jnp jl mov xchg nop mov xchg test jbe js pop dec inc adc mov mov and lods lcall mov arpl insl xchg cwtl in int (bad) dec mov mov aad iret xor arpl sbb push lea rcrl or stos jle and push or in shll jae mov popf pushf inc (bad) lcall mov jmp jge insl or dec (bad) add lock lods jge ret adc push mov xor pop and inc adc out mov adc mov pop std movb in mov mov push sub leave push test xchg cld stos inc push mov jo clc push push push inc sbb (bad) (bad) jo cld stos mov cmpsb outsl cwtl adc pop je rorl add or mov push dec (bad) jo mov ljmp add jmp cmp jge (bad) mov pop mov adc push test and adc push out xor sbb mov pop mov jmp mov mov incb ror stc mov (bad) pop and mov rcrl popf fldt push nop pusha out shl push pop mov or ds icebp push xchg cmp mov into pop int3 in jb sbbb xlat (bad) push pushf jl xchg lods cwtl in test fist jmp ds jb add mov sub add je push push adc orl mov or cli movsl mov dec rclb sub orl and adc ljmp jo addl call es cmp ljmp jo xor xchg dec sub push cwtl call xchg insl hlt add lock inc cmpb je mov cmp je cmp lods sub and out push ret ja gs mov sub outsb je or mov outsl inc inc sbb pop ret jg data16 mov prefetcht0 inc xchg jg aaa mov mov (bad) or or je pop jae repnz je add je lods test cmp fiadd or lds fild test inc (bad) mov push lods pop inc es pop mov lcall jecxz jge lret add (bad) repnz leave ss sbb je and outsb jne mov pop mov je xor push inc add add ss or jmp cmp cmp mov inc and xor and pop xor or cli jmp mov andl jmp fsubrs daa jnp adc add or andl add sarb fiadd add jne sub jbe add cmpsl xor add mov add push in or and mov push pop les jle sub adc jmp push or push sub movsl adc add shll sub insl mov pop imul add mov pushf mov adc xor inc (bad) pusha sub pop mov cmc in dec shlb fstpt (bad) xor pop xor (bad) lret add inc stos (bad) mov sub xorl mov cmc punpcklwd lea xchg ja pop lock daa xor pop rcll mov pop bound aas loopne mov sbbl jmp lods xchg loopne aas in arpl and jne mov sub xchg hlt cmp adc imul sbb jmp mov in cmp popa mov cmp mov (bad) and or mov sbb dec mov mov push push jne push (bad) jb add add pop sbb sbb push push push dec push lds call mov pop sub mov sbb or idivb lea lea or cmpl int3 js pop ret fcompl test xor out popl push les inc add into loopne mov xor pusha imul subl je adc or pop and mov add adc pushl imul mov sbb sub js mov popa sub push xor aad add ljmp and pusha or out ljmp inc sbb outsb adc sub insb or mov sub movsb push mov pop sbb push mov pop push push or movsb in (bad) sub mov test lods cmp cmp push outsl xchg (bad) jne inc mov sub pop pop sbb pop lahf pushf sarl (bad) push lea push ja jmp leave sar mov aas add add mov daa mov rcl inc push push and push sub testb aaa mov test mov jecxz and add or out pop and outsl and popa test push and pop mov sbb sub mov icebp imul (bad) adc mov jg movl push inc in andl xlat mov fwait pushf or or add test sbb movl xor push hlt mov push push int3 mov dec jnp test xor sub add lods mov enter sub out insb mov stos dec stos push mov mov mov xor ss and outsb pop test and pop hlt push pop (bad) mov cli lea push cmc push sbb not cmp or insb xor sti mov mov cmp ret sbb jno add inc mov shr imul divb mov in add add or mov out insb data16 sub inc mov xor sub jmp jne test push fdivrs sarl mov orl lds idivb push call jg pop data16 xchg and test add je ja (bad) sub mull sbb sub dec add mov (bad) push sti fstps xchg add push mov and ds in push (bad) cmp movsb lcall push mov cwtl sub (bad) imul std leave lret sub mov mov xor cmp pop inc inc imul dec inc and test movb inc inc adc lods pop mov jb xor lock sub (bad) xor jge inc add add sub sub cmp loop jbe in (bad) mov rclb dec leave movsl btc idivl pop mov pushf std adc fiadd into mov jo imul pop mov mov add adc enter push adc cmpl add jbe sbb inc sub sub pusha out push sbb orl sbb mov stc pushf xchg pop jnp sbb mov mov loopne push rcrb push rolb mov sub pop (bad) lock push push test fiaddl push rcll sbb lret cmp inc xchg pop adc (bad) jp mov add add fstpt jg jmp adc es mov adc or push push dec aas mov fs rcll and mov jo adc shlb popa pop dec cmp push adc sub into mov dec xor sahf dec popl loopne popa lret int3 inc xchg sbb mov sbb and sbb mov or lods mov pop frstor jb add add loop adcl (bad) jo test js cmp mov sbb fadds lcall lock ljmp pop lret inc xor inc mov push mov xor pop notb test mov gs mov sbb inc push andl cs cli dec aam mov add shl and jl jne test leave cmp sub or pop mov sub push jg outsb loopne repz fdivrl sar notl jne outsl jmp add push jo pusha andl pop or das or lcallw inc jno enter scas pop mov xchg jbe leave stos or jae mov je loopne pop stos sbb mov fwait adc mov outsl jb jge testb cmp dec xor push dec lret aad insb adc push fisttp push daa push das cmp clc xchg add push incl sbb adc pop mov fdivl dec insl insl test loopne scas hlt adc jb dec push ss add inc sub and sub cmp jmp cmp shll scas pop fidivrl (bad) jbe clc xchg mov mov aam adc lods push sub cmp cmp out jne stos mov call adc and jne pop jo or rep jmp mov sbb jmp add imull popf jb push lea adc ja les lock and mov mov cmpsb mov add mov or sub add add nop and xlat or add xor insb fs push mov sar mov mov call xor (bad) lock hlt clc lcall adc add clc or dec roll mov insb pusha scas add or dec or fcoms mov pushw sub cmp sbbl xor jne inc jo mov in dec xchg jmp xchg xchg stc sub nop or lcall add outsl add mov out add add fwait and flds and xchg sub mov scas pop cwtl arpl pop xor xor idivl add sbb xor rcl xor sbb sbb xor dec rcll adc dec rorl or dec xlat sbb add mov xor (bad) mov mov inc cwtl sub push inc sbb push cmp lods sahf push mov lea test addb (bad) adc push ljmp sbb xor sbb rol or cmp sub and lcall mov stc push pop (bad) data16 sbb add push fildl pop add add pop orb fcompl cmp sub bswap and push jmp inc jmp dec test je (bad) mov add xor idiv or lods fmuls add roll (bad) enter push cli add inc pop faddl mov add sbb ret push sub inc adc add mov inc test repz (bad) movb push and cmpb add jge inc aad mov lret addb je fisttpl or iret cmovs cmp sbb inc add enter rcrb enter fistp and pop in fwait fs call out push push jle sub loopne outsl push push push pop test push mov loopne or dec push xor or es pop pop sub cmp hlt je push dec jne pusha cs push and xchg jmp and or cmp add es and lds add (bad) mov aam and and sbb push or pop jecxz loopne jle mov sbb mov pop leave testb pop mov psubusb inc cltd cmp add and jecxz loopne adc ds dec std inc faddl cmpl jno incb xchg pop adc and mov push push cmp mov loopne mov nop jns push test inc xor pop fdivrp in mov fist push jb movaps (bad) mov cld add jns sbb outsb insb rcr stos mov pop int shrl mov add pop jbe mov cmp out pusha (bad) cld roll scas ss loopne push sarb xor cmp mov push xchg jb sbb sti mov lcall xchg lds jo xchg pop sub sub inc nop hlt out jbe aaa sub mov sub push jo lahf or mov inc mov stos loop sbb or adc movl mov test add mov in push mov je cmpl sti sbb je (bad) or mov sbb je pop or inc cmp pusha push mov push or pop shrl dec or jbe xchg sbb jne push stos dec add xor inc dec pop pop rcll cmp mov pop push add sbb lds xchg cmp rol push hlt daa dec jge cmp (bad) pusha mov xchg or hlt fcoms push mov fstpl mov push add lcall sbb cmp add sbb in ljmp cmp movl adc jle nop jno sbb jae pop cmp (bad) iret and xchg cs stc jae cmp mov lea pushf jns push cmp imul leave call repz inc enter loopne or pop lret jb or jmp xchg mov das mov and mov mov pop and cmp and leave mov pusha mov cmc jmp jge addb xchg rcrl scas jne fadds int3 (bad) adc add ret sbb notb cmp add (bad) les add ljmp dec in clc pop mov jg pop mov inc push jmp xor xor cmp sbb fs push idivl jne adc add repz (bad) pop xor jae gs xchg add jle xor jne pop and and push mov adc les stc push push jne repnz pop cmpl daa ss pop mov push mov aas ja jno mov adc cmp add sub rolb add xchg jo jp mov xchg push inc dec adc push out out or jge pusha pusha outsb call inc xor cld lret test and or dec mov mov jmp lds push cltd repz jmp dec ja mov ror mov lock add imul call je lods es data16 movsl in add adc jmp add pushf xor mov shr lock push mov add leave jne lret shll mov inc xchg jne aad cmp in xchg mov imul fdivrl (bad) and sbb push inc fbld jbe jg imul xor adc cmc pusha pop sub int3 fmuls add (bad) xchg or cltd mov sbb and sub repnz in rcll pop mov das inc mov xchg js clc push push sub fstpl jge call fsubrs cmp xor add jl inc mov movlhps test xchg ss cmovg sbb xorl jg mov ret ds jno inc pop mov inc add subl cmp inc icebp add imul je dec stos push mov xor lock ja adc clc inc stos xor mov insb add cmp (bad) pop xor decl adc cld sbbl push jae mov or ja dec jmp push push pop push sub jmp push movsl dec roll in dec xchg push (bad) loopne cmp jae mov inc aad add cmpsb inc movsl fldt push rcl frstor or mov jbe loopne mov sti add int push in out mov pop loopne inc call sub roll ret mov (bad) in jne xchg in outsb jge mov xor test sbb lea (bad) jne xor mov addb add int3 cmc outsb mov setb into xchg cmp jb inc (bad) fstl nop or fstpt add add pop imul mov sbb out mov push (bad) xor sub stos inc scas or fimull cwtl push lea xor mov aam push cmp or inc jo in sbb sub dec sti jl in repz lea xor push orb jmp incl mov inc sbbl cmp pop adc mov insl sbb das inc push ds fwait jae adc mov inc add lcall jne or je (bad) pop es scas les xchg inc add jl mov repz and outsb enter imulb cld nop mov add movsl sub sbb jp cwtl cwtl xor add jle dec fst sbb jg xchg shll add add and dec mov lock mov or sub call sbb mov xor or push sbb pop adc lock xor pop loop or cmp insl mov test dec mov or loopne or fistpll push mov xor pop inc jmp dec adc mov dec dec lock adc inc or add outsl sub outsb jmp mov jmp push push mov xchg mov cmp adc cmp iret js cmpsb and lea and cmp sbb outsb push mov loopne movl push or fcomps add mov test add rorl lock mov loope sbb out adc loopne (bad) (bad) sbb sbb dec mov (bad) sbb and push mov cmp dec or negl dec sbb jmp or lea sbb je popf adc (bad) or sbb add mov xchg and (bad) push inc test sub inc push xchg mov sbb fidiv mov mov (bad) xor test jb icebp lret enter in or sub add mov (bad) (bad) adc add add cmp in dec push mov rorb das into add jmp cmp rcrb add add test jl jmp adc sub leave and or std cld or mov dec sub adc stos mov or shrl loopne (bad) fisubl adc orl mov add outsb cmp hlt outsb add stos data16 mov fildl ss je or xchg inc add adc imul bound aad es jne sub jb sub in xchg mov test out jo xchg cmp and mov or add gs mov mov adc movzbl dec aaa fiadd dec jmp mov data16 inc jp push mov add incl sti jbe daa cmp ja or add jno pop push lea mov pop les inc push sbb loop push add sub push sub and je stos sub or or cmpsb icebp mov aaa push ret mull mov inc aaa jp jmp pop sub rcr xlat mov cli shr rcr or hlt div das and mov inc mul sub push jb jne or sub sbb adc sbbl neg mov ficoml push mov lret addr16 mov push and cmp movsl push xchg add outsl les add xor fldenv fsubrl jmp sub push adc out inc sbbl stos pop cmp mov daa ljmp add sbb pop rcll inc add push inc mov push mov daa inc sub movb or clc movb inc loope adc and das call or adc ss test mov push adc sub inc add faddp push fs fimull enter ja or or mul arpl mov mov or mov cld mov pusha fcmovnu adc cmp pop xchg mov scas or hlt pop test cmp ja and or in push in xor movb rcrb push dec dec mov adc add cmp es mov jl sub inc xor jg cmp dec popa mov jmp xor sbb gs jle push fcompl lret push push adc or int orl jmp aad push ficomp cmpl xchg pop or or xor push inc or or and roll andl icebp dec push mov out int mov and add mov push test adc mov sbb lret test in sub push xchg inc or call sub xor sub notl xchg lret or or or push or sbb fildl lea cmp je std insl push insb cmp (bad) jne outsb inc and push push mov and or pop rcr inc cwtl rolb mov jmp (bad) lock addr16 or rcrl flds xchg adc xchg bound xchg hlt or pop inc hlt sub inc jnp jge ja fucomp gs std ja pop je mov sub xor sarb das or sar dec inc lret inc pop loope push cmp sbb jle push icebp imul add (bad) out jb imul fs mov add sub push stos and pop rcrb fadds addr16 pop xchg or adc inc sub sub jnp jo test mov clc jmp pushl push xchg pop lea outsl rcr fsts sub insb call or and mov iret (bad) int3 jmp or enter (bad) xor add mov and jge pop (bad) lahf mov cmp dec mov jecxz insl or push xor int3 or lcall sbb pusha mov mov int3 pop fnstenv jne or mov sub pusha dec fmull xchg add cmp mov mov mov rorb pop pop mov nop aas inc pop add sbb dec mov add in add pop pop insb sbb ds push or fmuls arpl add pop push or dec dec fsubl and imul lret jg cmp test lock out pusha bound adcl mov inc push pusha fwait mov xor icebp bound add push push push rcrl mov lds stc jb lds fstps popa sub dec push call out or push add push or xor dec nop pushf and xlat lea push xchg sub decl inc and call add pusha jnp movsb js sbbl sar mov xor dec stos pop sub aas fstp mov loop icebp adc sbb test hlt scas jns dec cmp into fwait mov leave xchg ret pop xorb ret pop sbb push stos mov in or pop inc and mov xchg rorl sub sbb ss cmp add jmp xor call icebp xor fnstsw xor xor jb mov adc bound dec pushf mov and mov xlat adc lret lea mov push gs mov push sarl adc sbb cs cwtl dec xchg and mov es and mov fisttp mov or fstpl add (bad) mov mov inc (bad) sbb mov shr push mov pop mov leave jmp mov cwtl sub (bad) clc lock or (bad) and push idivl cmp sti add test call test gs test add or sub stos pusha push (bad) xchg push fxch xchg or sbb xchg popa cltd sub add sbb and sbb test push aas mov lock sti notb shrb mov aad xor pop add cmp jge ret mov mov push test in and in jo xchg xor push push xchg arpl flds or sbb adc insb mov sbb push and and nop inc push sub nop inc push sbb cmp xor inc inc push sbb dec dec push sbb push pop (bad) pop sbb pusha fs insb jo aad push sbb mov xchg pop ss sbb or and leave and mov mov cs enter leave fs mov and leave and aam xchg pop jb hlt clc dec es cld add add mov or adc adc sbb xchg dec and xchg dec cs cs mov es inc dec dec inc cs pop pop adc xchg dec pusha sbb pop push test fsubs in sbb nop mov adc cld xchg xchg add cwtl jbe cmp pushf enter adc sahf dec or fadds js orb or sbbb or enter mov enter fsts movsb inc add sbb sbb mov test out add shrb sub or lea dec ret add jmp sbb test pop insl mov sbb mov jl mov fwait adc cmp mov add push jne cmp lret clc sub add loop repnz mov je dec jne inc mov rep pop mov aaa (bad) mov jmp xchg adc test add sti pop loop lds cmp jne xchg cmp aaa inc sub and inc add insb push mov adc xchg mov js or or rcl add inc xlat mov out jmp out lahf sti fnstcw xor pop add fcomps xor lds ljmp (bad) adc add lea and jmp stos enter add inc xchg xchg out jg cmp jne mov or data16 es jne call incl shll push xchg add fcmovnbe outsl (bad) jb jmp vmread add jmp or lcall std jmp cld mov xor cld jmp insl fsubr or scas dec std adc inc lcall or or pop stos push dec adc or cld nop or lea stc test adc push decl xor adc insl add jge test cmp inc push inc and nop/reserved add dec add call sub mov adc pushf and inc jmp push popf lmsw xor xchg test mov cmp mov add mov in shrb int (bad) lods call call jmp fadds and fcompl inc insb out fldl push test mov inc jne testl mov int dec incl outsb mov mov add add sbb push rorl sbb dec push add push fwait sbb hlt mov xlat add sub insb call sbb imul jmp xor or adc shrb pop mov add ret cwtl aad mov mov or and mov pop fstps subb or jmp imul sub mov push cmp popa loope jnp,pt jl test pop or lea cmc ja test and add xor scas adc orl add or sbb xor or or pop mov pop test (bad) test jo adc lods int push movsl (bad) push fmuls push xchg pushf inc and jl pop xor pop sbb jnp lock or sti rclb add loopne clc cmovnp add enter xor outsl mov je andl cmc xchg cmp cmp mov mov decb pop cltd pusha adc cmp push (bad) shrb inc inc push lds mov ss sbb lods (bad) or enter decl or sahf stos or mov mov mov cmc fsubl pop mov mov mov pop push addl jg mov andb push dec jle roll fldcw and je ljmp push in addl cmp shrl les enter pushl (bad) sarl aam (bad) sbb (bad) mov mov dec mov adc adc aam jle mov movsl dec ja jge fsubl (bad) mov dec in lret aas cltd push adc inc cmp sub daa pop and adc test lock xchg incb popa add or inc mov lea adc add add push je inc lods cmp into hlt pop and cmp inc cli cmp xchg xchg cmpb jbe lret (bad) add jbe add pop jnp bound push or mov inc cmp jo pusha mov push push or fldenv int3 push adc rorl push xor add sbb fcomps je push pop addr16 (bad) sub cmc pop insb xchg cmpl mov sbb ja mov sbb fcoms add add imul pop and jne cmp gs add inc sti jne push (bad) jmp fldcw ds lcall out test push mov test mov aad cli int add cmp jg sub enter pop stos loopne xchg mov dec incb and arpl jmp and or cmpsb lea cmp or sbb test xor enter and js icebp push dec dec rorb lock and movsl mov aad xor addr16 add and shll inc into and mov cmp sub or dec add jae aam and jne cmp (bad) aam sbb rcrl and and sbb jo cmp mov lret add push lret cmp popf sbb scas pop pop adc movsb loop inc add cs add jg outsb ret jmp pusha pop mov mov icebp loopne mov add nop loope dec pop pop mov cli pusha aam push (bad) fistpll pop arpl cmpsl sbb loope push mov mov data16 dec loop sub inc sub inc in adc pusha pop sbb adc mov dec test lods and mov idivb add or mov (bad) rclb cmp aaa cmpsb repz adc sar sbb mov loope shlb lret and inc cmp fnstsw jo jb add add jmp adc jb sbb fcmovne ja sbb pop sub clc lea testb xor sbb jmp ret jle inc xchg cld je fmulp popf inc jb pop mov mov fstps je jnp inc and dec sbb sbb dec dec dec dec in cmp dec cld cld jae sub into jb repz or (bad) arpl inc shrl icebp mov add lock jmp adc enter movsl xor inc adc xor push daa lock sbb cmpl push fwait je test popa cmp psubb adc xchg in mov inc cmp outsl arpl leave adc push fldt and and enter rolb cmp pop (bad) and jmp mov fs repz ret test adc popf sub adc stos jo xchg fs sbb push push add cmpsl dec cwtl mov mov push mov js fsubs outsb pop jo add repz xor clc adc dec cld aas xchg call sub and subb ds loopne insl add loopne pop or or arpl sub mov add xchg cmp xchg mov cld sub push cmp push outsl mov inc insb add or jl pop pop popa xor mov or mov mov fbld data16 mov cmpl subb push or push xor adc fiadd mov lods rorl mov or push or push push pop pop pop pop pop ret mov pop push lock cmc rol fadds mov pop leave and adc rcrb mov push lcall (bad) mov leave mov inc adc mov inc mov add sub cmp jmp adc cmp and into xor sub loope inc push add cmpl lods mov jle in mov and (bad) jae ret xchg mov divb mov faddp dec dec test and xor pop add jb cmp std orb push stc cltd pushw mov mov rcrl rclb jecxz pop pop insl lds mov add cs rol std and and or and mov xlat movsl add shr push xor loop pop jae dec fwait sbb xor mov mov insl xor jo pop sub adc add xor push push test xchg mov cmc jmp (bad) enter roll movsb or adcb mov lret jl cmp insl mov sbbl icebp addl lcall xor fwait inc enter sub test addl lods jmp push ljmp adc pushf mov dec mov sbb sbb ret sub mov fisubr int add iret int3 xlat push popf enter mull add sub es pop jne popf jo adc nop jne push add lods popf inc bound mov test scas or data16 and lods mov das pusha xchg cmp adc inc xchg orb shrl push xor cmc push jb lea lea jb ja mov mov adcl pop or pop cmpl push arpl adc adc pop or int3 fdivr push repz mov pop or notl or mov xor movb mov mov mov xchg out (bad) cmpsl sar dec add mov pushf add test pop (bad) inc fisubr icebp mov popa pop xor push loop adc pop (bad) call pusha push add xchg int3 xor fldl mov or and test jecxz loope cmp or stos enter pop dec or add adc xor jne and sbb inc fiaddl into shrb pop fisubrl gs mull addr16 shrb (bad) mov and daa push fcoms add add outsb hlt test daa jg ljmp jge shlb outsl push add add and gs xor add jg jg outsb mov (bad) inc add push jbe jle sbb ss jg jg jo (bad) mov mov inc dec jb jg cmp lea xchg xorb out nop (bad) rol sub push mov sbb xchg repz das push mov sub maskmovq negl ret mov ja sub sub push and mov ret xor shr dec pop mov popf inc rorl cmp test or dec adc add shr pusha cmp add das not push xchg mov cmp movsl add rorl ret es xorl and pop mov bound inc push ret adc sub jl clc es inc mov jo and ljmp xor mov pop mov outsl mov and loopne ds or add xchg fldl jo repz adc sub add pop nop in dec xor je and mov mov cwtl dec sub jecxz add sub xchg fdivrl or dec xchg bound jae (bad) and ja xor sub mov in cmp sbb xor leave invd insl sbb mov pop xor push mov xchg push sub addr16 mov lea sbb fisttpll test ret jne aad sub push enter add add adc mov test ret push pop push (bad) stos and lods mov ficoml (bad) add push out movsb arpl and add outsb fldpi rclb pushf sub icebp mov mov jmp jnp repnz test xor dec adc pop fs cmpsl dec jne push fistpll lea xorl mov push push inc dec (bad) pop sbb fs adc leave pop aam rorl push push ret sar dec pop pop lods push push or popa out push test dec es popf inc fistl lcall add popf dec (bad) sbb cwtl push push ja gs dec push lods inc or dec sub cld push jbe pusha adc push mov (bad) jbe lods dec in push sbb adc inc in pusha add mov push or xor out rclb (bad) jo data16 mov (bad) call aaa movsb icebp jg inc repz add xor inc arpl sub inc inc mov lods aaa inc inc push mov out inc in push adc negb adc sub lret insl stos push jmp inc outsl das mov clc popf (bad) mov inc and pop pop adc adc fldt ja imul push mov xor add shr lret int dec pop push std adc lret push or pop negb push push loopne adc test movsb add mov lock ret sbb or outsl stos insb dec xor pop inc add add stos jns daa adc push dec pop dec mov dec and fcomi je mov and pusha adc add outsb rcrl push push xlat rorl add in cmp fisubr mov cmp inc jb sub pop mov or or or lea adc add test gs push sbb mov nop subl mov mov shll and sbb and sbb fcomip stc or sbb js mov iret dec xor dec xchg jb push mov (bad) xor or push sub mov adc mov add leave cld and std pop add lcall rcrl jno add mov dec outsb das pop (bad) sar in adc mov adc out neg std lods sbb mov jl jae push inc xchg push cltd or pmulhw es dec cltd mov lock mov gs pop lahf stos and decb (bad) and je in call test sub adc sub adc (bad) imul add add xor enter data16 test pop xor in dec xor scas lods mov push push xor cmp mov in mov add push (bad) mov mov add sar mov mov insb insl out hlt pop xchg push push sub not mov adc mov les mov pop jp imul pop ss or dec add mov push gs push pop jl or mov hlt in (bad) sbb sub add testb fildll fildll mov or (bad) (bad) je aad fwait sar add push leave pushf pop push add push and sub aas mov adc sub xor xchg add sbb xchg outsb enter es clc out jg push (bad) pop pop pushl cs sub xchg push je pop mov cmp xchg xor xchg ret inc stos jns je outsb adc cmpb int3 mov hlt andb gs insb ret mov outsl lods sub pop cmp jae mov sbb scas or xor add inc mov ja dec cmp jae lea dec or inc ja sub movb mov loopne incl mov rol add dec orl sbb insb in dec sti movsb incl mov outsl fsubrl jmp cmp outsb sbb xor inc nop cmp adc push out inc in enter push sub test xor ret inc mov add xchg dec mov xor inc fidivrl xor dec adc out jg jl push dec and pop scas lock call movsbl mov cs test inc mov fsubr inc ret (bad) xor inc mov ljmp mov xor mulb inc sub xchg rcll pusha pop fstps jnp jo stos aam push jae add xor sarb pop fadds jbe lods adc ljmp ljmp push jge std add dec xor jne mov jmp adc xchg adc xchg add pop out jno mov fnstcw adc sbb sub ret outsb stc arpl fiaddl mov sti in decb push lea push cmp adc pop hlt inc mov pusha adc and mov sub clc mov and divb imul mov lret push jmp cmp sub cmp inc or inc sbb (bad) je insb and or add cwtl jge loop adc mov (bad) sbb test gs pop and xchg insl pop lods jno and dec push loopne add cmpsl sub push xchg adc arpl test mov inc sbb test mov xchg adc pop or sub outsl loopne bound fmul mov push movzbl sbb cwtl add mov add sti clc push pop addb pop add add or orb xchg xor jmp adc jbe jmp adc mov pop jmp sbb and imul out jp and loop xor pop xor jne xor or add call mov mov fadd fidivr push add fs sub dec fist sbb sbb (bad) mov xchg clc inc mov mov xlat pop in push sub daa leave and ljmp cmp jb cmp ja add cmp or (bad) cmp sub shrl cmp inc push pop jb neg fisttpll and and pop add dec mov inc out or ret push lret or xchg mov pop xchg ss cmp and rcl aas cmpsb iret dec mov xchg loopne pop sub and cmp mov out and mov push jmp push mov mov and push jne dec inc pop pavgb aam cmp dec mov or xchg jle,pn rorl cmp add adc push jns (bad) jb and dec inc cmp push add imul sbb (bad) sub lds pop inc adc adc or mov addr16 sub or add call jb jo add xchg or leave sub cmp xchg mov lea mov sub or rorl cmpb pop jnp ret inc lcall add push push das or negb push icebp sahf pop or movsb ljmp pop add mov in sub sarl xchg push push inc xchg gs int3 clc push hlt dec insl fnstsw cmp sub inc mov lret lock add mov scas scas jne sub add push mov stc aad and outsb outsb leave or adcl cmovg inc or or dec leave adc pop ret mov fs mov sbb pop aad mov loop lcall ljmp cmp les cmp add xchg fldt or mov jne pop inc shr cmp pushl xor bound and insb outsl arpl je outsl outsb mov in clc sub or add xor outsb jne xchg mov jnp add add adc add add fcomps add sub cmp lods call xor push push push int out fisubl and add pusha push jo or mov pop add add mov inc outsl jb js je jb jae (bad) add mov outsl add add add imul jae fs pop sub and dec and jns xchg mov add pop das das adc iret je push pop inc inc insl fstpl insl ja pop bound jbe jb adc je outsl push imul xlat pop jo and and pop add jns fucomp into fsubrl jnp das imul inc jae pop xchg inc pop bound jne aaa popa adc xchg scas mov fdivs xchg ja pop xlat jge addr16 popa dec jne fs jnp,pn and mov or inc fs pop aaa popa frstor jne dec mov xor jne jnp sbb insb fsubs dec inc jecxz xchg insl insl cmp xor sub dec and jns in shrl or dec add inc gs bound dec outsl jbe imul xchg or je or jo adc jne inc (bad) dec fnsave cwtl dec sbb outsb enter ds jo imul bound jnp cmp outsb or push xlat mov inc inc aaa jns pop push mov lahf jne fisttpl pop or jae mov mov push gs push jne jae arpl jne inc cmp mov daa and add inc add mov xchg add xor or mov out jae gs stos je pop add mov jne inc inc inc decl mov add add or (bad) (bad) (bad) call adc sbb sbb push pop and and and es sub sub sub cs xor (bad) (bad) (bad) pushl xor cmp cmp ds inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push or push jno (bad) (bad) lcall pop pop pop pop pop pop pusha popa bound gs imul jo add sbb ja jns jnp jge jg arpl lahf sti test push push inc sub ss fisubrl sbb or inc dec pop add and addl and sti jo add aaa pop xor inc popa fs fs setne daa push shr imul imul sbb out xchg push add sbb adc inc sbb das cmpl repz xor sbb imul dec aaa test mov arpl arpl push insl sub jae mov rorb popa pop leave scas scas imul addr16 mov dec pop imul pop insb jp popf lahf lea push pop daa fs arpl divb jae insl stos pop stc fcoml jnp outsl jne jo push arpl sbb push insl fwait mov movaps mov fistp outsl mov mov push sbb and imul das add inc mov cmpl adc pop popa sub ret idivl xchg inc insb inc xchg xchg xchg fnsave dec or xor int jmp out or cmp mov pop dec outsl in mov mov test adc push xor test mov push xchg mull and jb popa insl lahf and (bad) cs (bad) fadds rcll xor cmp popa adc hlt push add mov loope and or leave adc inc movsl outsl xor jo push jbe jb jne movsb xchg je mov sbb sbb and arpl adc das mov arpl cmp outsb and out outsl insl jg inc mov iret outsl pop add mov push cmp dec add push mov adc inc aaa jge or insl in push push fldenv pop das jo popa add and gs arpl xor jo fidiv stc sub sub ret jmp and push add lahf and mov mov mov mov in aam xor and lret xor iret dec push xchg jno ud2 dec js js popf rcrl xchg adc xchg test or sahf cmp fadds pop fbstp or fmuls orb leave and adc loopne adcb sahf cmp cmp fsub sbb and jns leave and mov inc sbb lock xchg daa (bad) cmp pop fld1 and in nop js jns jp cld xchg sahf sub or sbb xor push sti adc lahf sub sub dec add or pop sarl jecxz add xor sbb pop addr16 jl cmp add in ss inc adc pop inc test insb push dec cmp movsb jmp cmp sbb sbb sbb nop add xchg xchg xchg add add cwtl je or push addb xchg mov or add add mov adcb sub cmp and mov push push mov sub mov or pop js pusha add fidivl add add sub dec add dec enter adc add adc orb (bad) add mov and sub add insb ret add add sbb add push fldcw incl adc test adc add mov das out flds insb notl add (bad) (bad) mov test mov nop xchg xchg xchg xchg xchg xchg (bad) (bad) (bad) call pushf popf sahf lahf mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov (bad) (bad) pushl mov rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) (bad) (bad) (bad) call fcomp fcmovu (bad) (bad) loopne loop in out call in out out lock repnz cmc (bad) mov push clc stc cli sti cld std (bad) ljmp mov dec push (bad) jg sbb mov pop jg outsl lds push jae jb bound arpl dec push cld outsb outsw jb popa ds sbb ss imul icebp notb addr16 outsl js push add jno pop imul dec inc adc lahf and inc outsl insl jo int iret outsb dec and dec stos imul and subl jge jns inc pusha arpl jo add inc gs fsubr pusha and jb jns adc fstps fsubrs and mov inc ja inc or leave fldenv je adcl xor fs pusha out outsb iret psraw arpl mov add sub jne imul pusha and jg mov fldcw fs insl sub gs and add imul imul pusha gs fwait lea xchg bswap push notb es mov push fmuls popa lea fimull add sub (bad) or pop arpl hlt pminub pop leave fsubrl cmovno outsb gs mov jo (bad) fsubl xchg dec xchg dec and push push push mov jnp dec add jns rorb push cwtl push fs sbb mov hlt arpl and daa ds aas test xchg mov imul je xchg adc or mov and add sbb push mov test popa jne je jg aaa popa mov mov push push add mov inc mov pop pop je outsl inc sbb mov or outsl lcall cmp cmp jl (bad) jne das add xlat cmp add sub idivb rcrb add add sub or fdivl fnsave sub div es dec cmpsl cmpsl and cmp mov jg lret daa pop pop jne loope push outsb pop jns or imul jnp outsl jmp fisubrl push out sbb data16 imul and push arpl int push ds jg sub lock clc in loopne xor rcl enter jmp xchg (bad) or adc xor (bad) xor insb pusha pop pop (bad) xor rcll dec inc dec (bad) xor inc cmp xor sub dec (bad) xor and sbb (bad) xor rcll or add imul cmpsb imul cmpsb imul inc and in loopne dec (bad) xor mov or in cld in enter cmpsb imul jmp les dec pusha xor ljmp cmpsb jmp insb pop add mov push add dec outsb push loop dec push push outsl imul inc or pop mov mov enter push dec push sub sbb daa mov fwait ss inc mov or (bad) push out scas je inc js movhps mov sbb icebp xorl fwait divl lahf mov sub mov inc push jb push imul je (bad) adc fs inc mov (bad) fucomi imulb jae sub movsl das mov insb push push or jo push fdivl push das mov jnp stos dec cmp je mov xchg push jns je imul shrb jnp inc ret jo aaa mov push rolb pusha ret pop add add mov adc loope mov push int push dec inc std fs dec xorb and das push push je jae adc ret mov ret or xchg iret mov aaa mov shrl and psubsw in mov xor dec add push shll push and push inc inc lods sbb (bad) clc inc xchg stc insb push ret ljmp push sub cmp stc add jg lcall aaa cmpsb imul xchg lcall push pop or cmpsb imul cmpsb imul imul and sbb sbb lcall and and lcall imul inc lcall or jp add aad jg xor xor sub sahf lods (bad) imulb cmp dec push dec inc and adc push jmp jae dec jge aam mov jg and sub sbb cmp int fs sbb jecxz scas inc inc push jae and dec loopne outsb and pop cmp and xor sar sbb and and mov jbe dec cs sbb add and ret insb or push inc mov fwait push inc mov fnstcw add ja,pn bound arpl cmpsl adc pop jle add jnp loop mov bound lret pop and rclb pop fs inc fisttp dec push pop mov out fwait fs inc push inc jo dec dec pop dec (bad) pusha (bad) push push mov int mov fs push inc add imul jae sub fmull negl xor pop mov dec inc push push inc push inc pop or fimull or inc and shll push sbb dec adc lods pusha push xchg pop and push mov mov jae dec inc xchg push dec cld aaa shll pop jbe pop inc cmp cli fidivl push das push cmp jp (bad) (bad) popa jns imul (bad) xor pop cmpsl xchg fsts inc addr16 movsl jle data16 je and jbe jl sub jo cmp das loope std or push dec dec inc adc xor and jae insl out (bad) mov xchg ret jle cmc or dec popa xor push sbb xor xorl rclb mov add mov sti (bad) mull roll shr and add daa inc mov sbb jbe in add or sbb mulb adc mov dec mov add in (bad) adc jae push and inc cs mov mov testb pop je,pn leave mov xor stc fs pop sbb sub cmp addr16 sub or dec ret pop leave pusha sbb adc (bad) popf nop mov inc add (bad) mulb cmp aas and and cmp pop fcomps or mov sub pop fisttpll in sbb jmp inc jb push (bad) jo pop popa das jecxz adc jno inc jbe pop and adc xchg inc mov push mov (bad) or cmp into pop leave mov inc popf adc test lods pushf inc enter jb popa scas popf mov cmc and addr16 or push or mov loop (bad) call fldl sahf or inc inc fsts stos test dec sbb lock mov mov (bad) (bad) jl ss mov xor rcrl add xorl add fmuls sbb push cmp sarl out fsubs fistp pop and xor push xor pop push pop push pop pop dec aaa fsubs insb pop insl stos and or xor jb das orb pusha mov pop (bad) pop xorl sub mov pusha orl test xor mov adc and inc xor sub add aam sbb xchg test add add or (bad) and stc leave mov cld inc jle test into push and cmp mov mov inc sub ljmp pop iret mov in call fucom jle (bad) push add pop pop fisubrl xor in push rcr fsubp stc cmp jle cmpsb sti je inc aad add enter cmpsb imul cmpsb jmp mov xorb lcall imul imul cmpsb sbb add or cld hlt (bad) xor shr fnop aam mov test add add mov cwtl nop mov (bad) jo push inc sub imul hlt in in cmpsb imul cmpsb imul jo pop dec add xchg cmpsb imul in xor rcr aam cwtl test dec adc mov xchg cmpxchg push jecxz out jmp push ret jmp in jbe fucom adc pop add ret or pop xor adc test pop imul sbb nop inc mov rcrl lods movsb sti pop pop xchg popf (bad) das dec dec push sub cs sub sub popa dec pop das fs (bad) leave mov stos jecxz in and pop bswap push add xchg addl inc inc adc test inc pop (bad) fdivr loopne adc dec inc sbb pusha jae adc es enter add push add or (bad) sti pop push pop pop add or or or or or sbb prefetchw or jbe fidiv or pop add xor pop adc arpl xchg adc add inc pop push pop or (bad) insl cs mov je lods add mov add add push adc pop and xor std decl and rcll bound cmp int bound fcoml push sbb xor cld mov xor inc or ret mov xor dec pusha dec fmul add xlat adc addl or lcall and and push adc pop popa jno and adc sti insl stc lret xchg mov lock loope icebp fidivl fadds or xlat fiaddl or mov cmpsl and mov addb add adc add orl orb push add nop inc add add xorl adc add nop push add inc inc add add add fs adc nop push add add orl orb adc adc nop push add add orl orb push add nop inc add add xorl adc add nop push add inc inc add add add fs adc nop push add add orl orb adc adc nop push add add orl orb push add nop inc add add xorl adc add nop push add inc inc add add add fs adc nop push add add orl orb adc adc nop push add add orl orb push add nop inc add add xorl adc add nop push add inc inc add add add fs adc nop push add add orl orb adc adc adcb ljmp add push add nop add pushf add add (bad) (bad) mov ja call push add dec std (bad) (bad) jg push jb addr16 insl and outsb outsb outsl je bound jb outsb and pusha (bad) mov and fs and sbb pusha ja,pt out (bad) mov add jo inc popa pop jnp faddl mov outsb fldl inc in sub inc cmp fadds in aaa ljmp imul in aas in fisttpl inc mov push adc add and add or scas jmp nop lock sbb add pop add add sub inc or cmp push clc add movsb and mov dec loopne or pushf add jae repnz xchg cmp xor pusha add inc cmp mulb xor popa mov inc jb,pn jb add dec fxch add rcrb push test xor xor jmp or or and jecxz push add jp es enter mov addb add icebp jl mov sti call dec push push jne add or mov insb add adc cmp incl push push cmp mov pop push call jmp lea sti sti decl xchg or mov cmp je add adc jecxz adc and xor push sbb push jno sti (bad) movsb mov add daa inc add (bad) (bad) (bad) (bad) call adc add cmp mov xor or adc or inc add in js lea adc mov jge jne adc jo (bad) (bad) mov addr16 data16 (bad) (bad) mov jle push add inc mov idiv jg test ds sub and orl (bad) mov sbb mov imul popl sbb (bad) (bad) (bad) (bad) add mov mov mov sbb fs and push inc sub pop loope fcmovnbe fidivl mov (bad) cmp (bad) sti cmp idiv incl pop out pop and sub xor xor add sbb js mov inc pusha and or sahf and fadds ret sbb xchg (bad) (bad) pushl xchg mov add push xchg jno xlat jo test jmp sbb adc loope ret push pop je and decl fidiv push std push add cltd push mov (bad) sbb (bad) lock push push or xor push sti (bad) (bad) call xor arpl jae mov push push jnp sub xchg je or adc add hlt (bad) (bad) (bad) jg adc out mov and cwtl or and aaa jbe or push and sbb test call sub outsb add mov int3 add push cld jg (bad) pop scas sub in (bad) roll pop push cli and add mov aad pop aas insb mov push sub pop xor test cli fwait out jg jg lcall sbb push mov rorl sarb decb (bad) push pop test jg and pusha sub fsubr xchg push push loopne pop mov fwait mov xchg (bad) mov in cld inc test clc lcall out popf (bad) in push mov adc push mov les dec ja (bad) ret aas jecxz rep fildl add xor sti incl int shrd sub ja adc movl (bad) fistpll mov or add pop jbe sbb outsl or or loop (bad) mov push ja (bad) jg or add push lock add add call or push lea cmpsb in fcomi xor ljmp xor arpl push sbb sbb decl adc (bad) xor pop in push adc push push lahf (bad) mov movsl in add js adc jb sbb fs xor test cmp clc cmp pop jle or test divl push push inc push (bad) (bad) outsb mov push adc rolb jg push (bad) out inc pop mov add insb push push inc mov pushl mov fild in outsl pop adc dec pop daa out js insl test ljmp dec xchg xor lock sub push js sbb (bad) (bad) cmp fldl2t add push loop xor clc fnsave adc and lods ret insb push push daa push cld mov fdivl pop pop mov ret dec sti pushl cld sbb push sub fwait cmp nop and (bad) xor mov dec int3 inc sub outsl iret mov push lods sti inc outsl sub fucomip xchg mov js (bad) push sar (bad) (bad) jg mov jmp pop cmp ret in call push pop xor int sub jg loope jge lea pop test es (bad) inc rolb pop insb addr16 cmp pop push inc adc in das fcompl cld icebp mov mov hlt push out lret or add xor aam xchg out or fbstp adc inc neg xorl out hlt pop cmp ljmp and xchg adc sbb andl pusha sbb std sbb aaa sub lea jp dec (bad) aas add or ljmp fucomi shr push adc xchg fdivr std and pop pop bound neg outsl insl and loope sbb les mov in (bad) or (bad) sbb daa xchg xor aaa (bad) lcall stos or xchg ljmp jl pusha sar (bad) (bad) enter sbb fxch or (bad) into repz pop notb pop rcrb mov (bad) fucomip adc rcr mov out mov ss push das icebp outsl lods mov aaa cmp or mov (bad) in fdivrs scas fwait push (bad) mov xor push xor lods push outsb notb push (bad) clc ret adc cmp pop shll mov jge out sub jg mov jnp push mov add cwtl mov outsl std call mov (bad) ds mov test add sar addl pop jnp outsl cmp cmpb jno push xchg adc ret sti sti ds aad push adc jae sbb push fnop in pushl imul stc in sbb sbb push imul sbb push out mov test or jg mov push jno adc inc adc mov into ds xchg jle mov dec (bad) dec in lea sbb fimull pop pop cmp in jmp cmp in xchg in cmc cmp mov loopne outsl pop dec mov popf sbb jmp idiv mov pop add arpl jge push inc inc movsl scas mov jbe sub push xchg sarb dec adc pop push pop jge dec xorl aaa clc ret push adc mov je sbb cmc mov ljmp xchg jnp out shrb jne mov cmp je xchg test jp imul popf sahf push adc fsubr or or (bad) (bad) (bad) jp push and mov mov lea mov (bad) fwait cmp cld outsb out mov incl mov add rcr test test (bad) (bad) loope ret fistp ja or idiv jo addr16 and push push les mov popf fsub xchg cwtl and (bad) sarl xlat xor sbb js or leave in xor fisttpl in or mov mov adc jecxz xor jg les cli jg mov pop fdivrs pop cmp jg hlt or pop out fs arpl or sbb mov in mov jle addl fwait in imul fiadd orl lret adcb xor xor ljmp std xchg ja bound xor enter add out data16 in in push push ds cmpsb neg jnp lock mov testb mov ret jo (bad) dec mov fildll pop mov loopne lret cmp mov cmp or (bad) (bad) pushl cmpsl test fstl std mov jnp jnp mov aad lea push xchg adc (bad) call (bad) adc daa or sub das pop jnp lret cmp call das das pop dec fdivl lahf fwait dec jb adc cmp jg mov out mov std jne repz xchg in aaa lock jl or cmp in outsb cli mov add pop (bad) (bad) inc push imul decb and jmp push and (bad) mov decb mov fwait and pop or pop (bad) fistpll sti aam out or extrq sbb or push fsub (bad) lcall ds dec or adc jge insl sub std mov jns pop bound (bad) iret shr jle ljmp pushf jne add testb sub lods insl sbb push jne shr (bad) cld jl jbe (bad) xchg push in dec cmp push fcmovnu add inc nop cmpsl je push ret jmp lods add mov pushl adc adcl clc rclb add jmp mov add (bad) (bad) aam inc je push fstl sbb adc cmpb je incb mov jmp adc xor jne push push es decb pop in jle nop pop std inc hlt sbbl mov mov mov sbb mov jbe mov (bad) mov mov mov lock cmp or add mov subb in sub pushf sti call dec push adc (bad) incl inc out insl test cs (bad) ljmp imul and push call das sti jmp popa dec mov lods lds aad mov dec xchg fimul push call sub aas or jg mov sbb pushl or and dec mov sti insl pop mov loope fildll or add mov jne add mov mov vmread and out xor xchg (bad) pushl pushf inc mov pushf cmp jo dec ss cmp push mov std mov sub mov pushf pop add dec add pusha fidivr sub inc pushf and and sub out fistpll and insl roll dec ficompl jle pushf push mov (bad) incl add setl fwait inc adc sub add iret rcr push fisubrl xor ret jge nop add fmull (bad) (bad) pop push xor mov jecxz inc mov popa pushl mov test nop sar (bad) jg mov jne and sub add pusha mov loope lock aaa pushf ret pop mov arpl or movsb in aaa mov jp sbb adc lods mov fwait or mov stos xor add dec mov pop pusha lods sbbl cli pop or mov (bad) add popa mov (bad) pusha inc add cmp push outsl pop push leave bound or inc incl xchg shrb into jle cmp jbe mov xor lcall adc in cmp push or clc pop pusha insb mov pop xor adc in arpl mov xchg fnstenv inc cwtl in (bad) popf aad push mov or mov aas nop push sbb cs ffreep aad clc outsl jl dec lcall (bad) add lahf xchg je (bad) std cmpsb mov fcompl fldt in mov imul xchg aas adc cmp or cmp loopne loopne inc enter insl popa sub (bad) cmp inc mov pop jl fist xor inc sub push mov lret push or std das icebp or sub sbb and cmpsb pop and fs loop insb lea in and in out (bad) xchg clc je xchg jae pop loope jnp cmp faddl and (bad) mov cmp shll je cmp adc add mov xchg loopne dec adc jp sub inc mov adc cmp (bad) jg mov or and je mov lods adc jne jne mov mov fiadd rorb xchg bound mov (bad) decl out sbb add jae jae popa push nop cli mov mov test xchg sbb and pop clc lcall arpl add sti enter sbb popa mov fdivl not and test push fimul sub jg aaa test dec push adc je or jo cld call pusha movsb and lods jmp cmp dec loopne das cld outsl das sbb iret hlt cwtl cmp fs popf jnp aad dec loope fistpll mov rorl xchg jbe adc pusha jae fcoms (bad) (bad) mov lods imul lods push push dec pop rclb test (bad) gs pop or and clc (bad) mov lcall inc sbb fsubrp clc popa lock (bad) mov or mov mov adc or dec pop daa cmp cs mov aad push ljmp in sub stos jg aam pop mov js sahf insb jbe or xchg sbb addr16 inc and or sbb in mov pop inc jns jmp add xor cmp ret mov or dec hlt xchg xchg (bad) aaa clc jg cltd or dec test push test or mov aam cmovl pop or scas mov ja or das hlt or je push roll (bad) mov or (bad) inc fildll and push or inc and jmp call jo pop mov xchg xor mov jge mov aam (bad) hlt sbb lret (bad) or or cmp into push mov pop sbb push push cld add repnz and adc add popa push mov jmp pop (bad) std pop cmp addr16 pop cmpsb (bad) fsubrp pop je inc test sar add or jg xchg (bad) cmp sbb and adc aaa fsubrs cmc push rol jo and out inc adc aaa (bad) faddp lcall icebp add clc dec lods sbb enter mov jnp frstor add fldt jg cmp jb push jb mov pushl and mov loop aaa divb mov or sub and cld or inc pop mov subl shrb loope (bad) in aaa loopne add fnstenv loop sbb and mov mov icebp (bad) inc pop jb neg and push js loopne cmpsl inc sub sbb aas sbb andl andl mov pop mov addr16 (bad) (bad) decl push add cmpsb aad push add stos aas fcmovne js pop das cmp and add ljmp mov pop inc and adc cld mov lahf jp xor push test xor inc out ret sarl imul or cmpsl sar mov jp idivl jle add or push int jp xchg mov and add or js add or add pusha jp adc cld fs sti jg ljmp les push js mov les (bad) fdiv (bad) lahf jns xorl push add mov xor adc add mov add pushf mov ja bound add xchg mov add xchg pop pop push add inc mov nop je cmpl stos mov push push pop xor mov pusha fs add subb sarb xor xor mov and mov cld inc (bad) stc faddp sbb push jnp adc (bad) mov repz adcb mov dec xor sbb je clc add xor xor mov add mov inc clc out add or icebp lcall sub cltd inc orl add xchg cmp jmp pop pop leave dec jmp push xor xchg outsb mov (bad) and mov jle (bad) jp clc add jecxz or inc pop lea enter (bad) loop jle jns daa add pop xchg ljmp pop pop ret inc cmp (bad) ljmp fwait cmp incl les sbb jg fs shrb (bad) cld fisttp push gs pop xor ljmp sahf sbbb push or fldpi xor mov pop cli adc ds mov aas push lods cmp pop jg gs clc inc xchg insl sti iret test adc mov mov incb mov out cmp mov mov outsl decl sti out xor cs addb xchg call movsb fstpl push add in aaa inc jae add outsl dec rorl out or add addr16 aaa push or adc (bad) mov sbbb xor aas mov sub mov pop cmp into sbb jno and pusha outsb jl (bad) decl hlt test xor out push jbe add add enter xor mov push sbb lods add dec sbb cmp jge test mov popf jae ret pop std (bad) call jmp mov fnstsw leave jne lret (bad) je cmp clc test mov sub (bad) fildll sub cltd jnp and or or loope pusha jmp testb inc or mov inc mov fist stc xor cmp adc mov mov push add inc adc add or jecxz int3 andl sahf test lock stos jmp fcoml or adc loopne or pop fnclex xchg loop scas (bad) jg stos add mov int3 or sub inc loop or push mov outsl sbb pop sub jno inc sysexit inc in pop jno aas add fnop bound xor aas sub inc cld or (bad) pusha outsl add ds adc jne test mov push inc in jo dec mov mov mov (bad) push add in dec test mov mov inc jmp sbb in test pushf mov (bad) call push dec and pop das jl push push fadds and and outsb cld push mov inc pusha in mov xchg rorl mov ret jns cli imul add in ffree movsb mov mov inc mov add mov cli mov movl fsubrs lds jecxz (bad) in movsb mov pop jo xchg (bad) mov mov pop iret sbbb sub cmpsb mov dec push push sub outsl jae lea mov loop adc adc sbb ja (bad) or sub adc sub pop (bad) xor incl inc jl test incb cmpsl dec daa jmp out je fisttpll adc xchg hlt testb dec ds push cmp sub mov (bad) ffree mov aas divl xchg cmpsl mov mov insb inc mov aaa jge or ljmp (bad) jg dec incl sbbb adc or icebp (bad) mov loope adc call mov aaa std add ja jle outsl arpl xchg xchg dec or add sub rorb aaa std ljmp aaa aam inc rorb popl push movq dec dec add loop std out cmc pop nop addb sub sub hlt ja or add rcrb add inc inc cld addr16 inc and (bad) lods push push mov inc lahf adc cltd out or and sub add pusha mov subb fs fwait loop decb jmp ret ficomp or cld outsl in jle nop mov xchg dec and pop inc pushf fcomps ret and ja das cs add call jb fbstp outsl cmp ret orl insl mov jle push or mov mov add jl cli test push lods decb test sub ljmp and inc pop and decl cmp lds push test (bad) jg add xor outsl add jg push insb addb xor js stc push sbbb mov testb outsl pushf push add (bad) pop sub jge add fsubl or cmpsl pop push mov mov mov cmp lahf mov mov nop push or cmp adc jge add inc add outsl hlt inc les cli or (bad) aas mov xchg andl std (bad) aaa clc mov pop pusha fcoms movb ds and and test enter inc mov jl sub (bad) xlat icebp pop pop push or fnstsw inc adc pop fdivrl out cld ljmp jb pushl (bad) repz add ja add mov mov cld and out clc mov ficompl push push pop lret sti aas dec mov mov inc mov subl mov cmpsl sti js movl pop call push inc ljmp inc adc ss sub sub add fisttpl pop int3 rclb xor decl push addr16 jmp es lret incl xchg push mov dec js addl out jnp loopne mov cmpsb imul mov pop std jnp add daa stc sbb sbb push idivl orb xor or ss cmp fs leave sbb or loopne,pn inc cmpl mov (bad) lds cmpl std fild adc pop mov inc cld push std lahf jmp int3 rcrb mov rcll decl test mov and das mov and clc stos xchg mov jl push inc cld out lcall adc jg out xor xor pushl lock jg jnp xor lds adc sub add cmp movsl xchg inc xor aas sub fucomp pop cmp add xor addb in (bad) mov adc and push dec xor sbb decl andl (bad) mov movsl (bad) mov aas dec sbb lahf dec ret fstpt in subl fnstcw enter jg pop push faddl (bad) sbb popa push adc or cmp icebp lahf clc fbld aas movsl es mov xor je pop jne fstpl gs push sub pop aaa xchg xorl test mov sbb iret (bad) mov mov aaa incb push add add adc mov pop rcl fistpll xchg (bad) (bad) insb sub xchg cmp mov js shrb sti outsl cmp ret mov test pop bound or push inc insb lret icebp pop cmpb add cld scas jle adc push test mov or sub dec and cmp stos stos mov into mov std add sub mov and adc adc cmp xor or in sbb idivb cld or dec fcom cmp jbe cmc or hlt test fwait push adc adc hlt mov cld add adc mov movb xor add cmc outsb xor sub (bad) or mov sub mov cli daa xor push jnp sbb idivb push ffreep push jecxz inc fimull and push push mov cmp mov adc xchg and cmp and (bad) sti jo aaa mov sti add push (bad) cmp (bad) add push (bad) jmp inc add and bound mov fucomip mov mov adc test lods lahf xlat fsubr mov js mov or add inc add add insl cld icebp lcall push in mov in push call push add add mov decl test (bad) xchg mov add sub incb push dec and xchg mov pop add xchg sub lcall (bad) push pop adc or gs cltd pop sub jmp sbb pop in sub xor lds cld out arpl mov imul ja icebp outsl or dec loop cmpl jo mov (bad) aaa mov (bad) push xor pushf push lods inc fcompl pop (bad) ja lret inc sub cmp adc data16 jg out fs add insb add in push lock inc lds (bad) push jmp dec (bad) mov in mov xchg add mov add adc incb sub lret jmp sti mov add adc lahf add test loop lock cmp xor xchg pop cld jg xor and stos or mov orl dec (bad) sub sbb loopne jo dec sbb icebp call sarl outsl jmp lock jg push push inc (bad) or or dec addr16 mov push int cltd sub int add sbb aaa sub jp add decl jg rolb mov ja dec incl xor push ret mov rcrb lea fwait cli ja roll adc pushl cmp inc fucom stc incl add jmp mov jmp js pop xor pushl orl or lods or adcb mov mov out jge add jb cmp movl lods fcomip sub sbb jns test incl and mov mov test and cmpb test (bad) fisttpl movsl lds push push clts push inc mov mov push add xor cmpsl out stos stos cmpsb cmp fistpll mov (bad) adc jge jnp out ja mov (bad) (bad) jbe fmull int3 xchg inc mov into or push inc adc xchg mov pop and and mov adc lcall lds cltd fpatan pop push add jl add (bad) out (bad) outsl cmc sub aas xor test ss cmpsl lods or push (bad) jg andps subb sub xchg fsubr call add fistl or or rorb ficompl lea lock mov pop or cmp (bad) fdivrp jg movsl xchg cli (bad) or jmp sbb add loopne (bad) ljmp jmp pop or sbb sbb out sahf clc xchg call (bad) outsl inc inc add adc addr16 cmp mov jmp lods push jmp jmp (bad) push xor mov out ds cmc pop push push daa adc cmp test push mov adc mov punpckhbw ja pop xchg mov adc inc adc hlt xchg mov sbb or add add aas or sbb mov mov (bad) call lods lcall std fwait call movb ljmp ret jmp inc sbb or imul fist jg movl jp aaa aaa clc outsl icebp mov test mov dec mov das hlt rcrb ret push loope xchg push add dec mov and popa mov add scas cli mov cli push ljmp push addr16 rcr push loope or ret ljmp das cld add ficom sbb fimul scas or fcmovnb dec (bad) mov leave lret es dec push imul lock inc mov out repz xchg decl sti inc push lds adc cwtl mov push add xor loop dec and jle aas jge cmp pop mov push int3 push call stos stc cmp outsb dec push cli outsl cld inc rorl jbe xor and test add xor mov pop mov mov bound dec test fisub adc adc mov mov data16 call jg push out test lret and cmp xchg js fistpl mov fdivs add (bad) fucomip (bad) cmp jnp ljmp sub or es inc mov push mov push inc adc repz rcr clc cwtl jmp xor mov aad mov xor sbb mov (bad) dec and jge outsl cli or push stos stos mov fstpt mov or pop jb leave sahf dec add inc mov cli or pop in fist and adc nop push add xchg (bad) ljmp xchg add (bad) fistp inc and mov sbb and mov or dec (bad) jnp pop in xchg sub cmp sub ds xor add (bad) clc ljmp ret mov xchg test xor add repz icebp or mov cmpsl andl inc dec or test pop or and es xor outsb lock ljmp jge stc cld out outsb pop mov aam mov mov mov andb push cld add popf enter mov lods mov aas adc jmp sbb aaa (bad) outsl loope adc cwtl add std mov push push xchg inc mov scas adc scas pop int inc jl rcrb fdivrl xchg (bad) (bad) jne sbb adc push (bad) popf or jne add clc movsl lcall adc xchg (bad) testb pushl inc outsb jne fbstp movb add and data16 inc int3 fdivrs add cli imul dec cltd push jbe mov (bad) call nop loope mov xlat movsb adc push dec or out adc jg xor push cld ja ficoml les add jg aas and mov dec sbb pop orb cmpsb cli scas pop or or fisttp in outsb mov daa push pop push decl jmp inc add (bad) (bad) (bad) mov inc pop call or xchg dec add xchg jl and jb jg inc daa rcr push push fsubrs aas jp aas sub les add jle pop or mov adc aad push aaa fild cld push jbe adc mov pop out or mov pop popa aaa mov cmp iret jo inc inc cld or pushf mov loop std cmp push mov add mov and sahf push pop sahf mov test fwait movsb sub inc fistl inc sub repnz push add (bad) je loop dec push add mov (bad) mov out addr16 add (bad) roll bound (bad) outsl mov add mov cld xchg stos inc or std fs clc inc or (bad) movsl cld mov mov (bad) (bad) ljmp insl mov and fsts jl ficomp test push mov lahf push add fcoml sbb mul add mov les movsb fwait (bad) mov sbb mov jo dec mov sbb mov mov cld and nop pop jge lcall cmp aaa cmc inc inc xor or (bad) push or enter jle and fiadd adc dec mov nop fwait dec out add jg mov and jle and outsl lods icebp (bad) (bad) mov subl and (bad) negb mov xchg jbe mov inc inc cld xchg mov lods sbb jg pop mov jl pop aaa out fsubs dec les sbb in cmp sub xor add inc into cmc add je add (bad) (bad) fnstenv dec xlat add mov push xchg dec bound icebp cmp mov repnz lcall adc push out out imul pop push add hlt jae hlt mov jg enter enter lock jno adc mov add in cmp add cmpsb jg lahf cs mov adc push pop mov loope daa inc jp (bad) jg jg sbb pop mov aam jno jno enter scas cmp sub pop out push add jle add push pop mov std dec push ljmp push and les mov xor movb xor pop cmc add addl add pop pop cld or inc scas and xor icebp js ss in movsb out adcb add jbe adc dec cmpsl inc inc cld and sbb cmp movsl or cld lods and add movsl or cld pop adc fwait mov test push push push sbb test mov (bad) xor add or loop push cld daa add outsl icebp xor add sub in clc sub cmpb adc and mov in clc frstor xchg loopne dec das ds ror or call and fistpll sbb sub mov push mov dec or subl outsl cmpb add jmp fs loop decl and scas sbb in inc add push jge test add fimull outsb fmull add add emms mov and outsb mov add pop (bad) lock fcos mov bound pushl pop xor (bad) xor (bad) pop xchg lea incb icebp insl popl pop das xor push push and xchg aas fisttp mov jne fcoms test jmp push pop adc ret (bad) mov cmc imul arpl jbe jo inc mov jg pop outsl pop (bad) std push out cmp adc mov cs ss mov (bad) ds movb pop addl sahf add pop pop push add idivb (bad) (bad) jg jae inc sub pop dec es addr16 push setg mov clc mov inc sbb (bad) and xor or pop sar pop jge fdivs pop jl jae xor mov cmp (bad) ljmp jg mov lret push mov mov rorl (bad) lcall mov adc dec push mov sub sub fbstp or mov inc mov movl ss pushl fmull call (bad) jb inc mov fldenv dec hlt and or js sbb lds mov adcb imul fild pop or daa adc adc mov sbb call inc aas mov adc dec (bad) (bad) jg xor pop or dec inc adc or jno cmp pushl mov or subl std movsb and jbe std cs test lcall mov sbb push das and enter mov out aam mov popl cmovnp out mov add xchg mov int (bad) fadds adc sbbb sbb mov outsl jmp cmp mov adc and push inc adc inc dec inc push fs dec rcr sbb dec mov jbe std aam leave cmp inc cmc pop pop cli add imul cmc hlt sbb adc push sbb mov pop lcall cld arpl cmpb pop cmc and into mov ljmp fiadd mov adc inc pop cli add dec ds rcr cli aaa adc add push insb cmp jle mov cmp xorb scas call (bad) std pushl pop mov adc popa xor ja or stos add and jne jmp sti (bad) adc and inc fwait jle int3 negl mov mov es cmc aas sbb int3 fs jno adc addb lret add ret in aad jnp in call rorl insl jbe gs cli ja jnp andl add sub and jle or mov icebp pop adc call (bad) lcall mov fcomps test pop or test ja add (bad) mov (bad) stc jg add ja mov js xchg clc lds aas sub adc pop or sahf mov cmp and pop inc in popf sti and adc pop aaa jne outsl (bad) lcall adc call shl rcrl xor int loop call pop or test pop icebp inc (bad) std lea sub mov cld mov add adc sbb sbb outsl and pop adc out add or (bad) aas and pop ret push cltd ja push pop adc scas mov inc adc push adc les push add enter sub enter icebp decl jno loope push and jg popa decl add rolb pusha js cmp std xor mov fcomps pop in add mov in adc inc jg sbb or test cld ret xchg test inc fcomps xor cmp and incb sbb test decl and ja xlat or (bad) jne outsl add rclb (bad) mov aaa push dec pop (bad) mov or lds dec fisttp or nop pop push das stc decl (bad) out ss dec (bad) dec push sbb mov or push test icebp ret int int3 out aam addr16 les and mov cmpsb nop and jmp mov adc div outsl lock pushl inc dec pusha dec sub pop xor dec lret dec mov mov jle add pop call mov hlt hlt clc ret lcall or hlt sbb mov xor add out dec or and add icebp or xor fcoms mov adc pop push sbb jle xchg mov movsl jmp sub add test dec pushf cmp decl imul cmp stc sub and dec mov pop dec leave or mov daa imul decl fadd adc pop dec mov cltd jle adc adc mov test cwtl jae int add pop mov and mov mov adc ret (bad) xlat pop pusha add js xor fidivr jo sbb pop sbb rcll rcll adc (bad) (bad) (bad) out or or fwait insl rcrb mov xchg fsubs jae pop hlt fnop dec add aaa jae cwtl adc mov mov clc dec mov adc and andl push dec mov mov dec icebp adc dec imul jbe test dec decl pop mov cmpsl js xadd inc aaa adc push rcll mov or sar cli add xor (bad) jmp cmpsl test nopl add stos scas mov (bad) (bad) adc xor nop lcall call mov std (bad) xchg je mov or add sbb icebp push dec sub sub sti push push call pop pop mov pop and hlt mov dec stc daa iret xlat or sbb push pop aam (bad) in lcall test ja in loopne push (bad) xor (bad) mov add or pop rclb decb lret push ljmp cmp add add ret aad push aad pop mov pop push je (bad) lret call add dec add je xchg sbb pop outsb mov add adc sbb mov pop fnsave loopne in mov mov rcrl and xchg mov mov daa jmp cmpb (bad) movsl sub ljmp ja add jmp add push (bad) in pop inc cwtl int inc or or pushl cmpb adc int3 inc cmp jge jg sar movsl xor xchg add (bad) rolb or sub aas pusha add es test dec aam mov and cli out sub or fildll dec sbb rolb das lock pusha and mov sti mov inc jg clc push (bad) or int3 stos sub xor push cli fisttpll inc xor pop negb sbb add pushl cld popf pop roll mov jmp xchg dec popf sbb rorl popa xor adc inc jl push push or lds mov sub outsl adc mov push in incb push jae jl jo clc std decl or mov push sbbb orl mov enter adc aaa cs dec mov nop cld addb (bad) sti or dec adc xchg fwait or es xor add add outsl dec je incl mov xorl (bad) mov dec icebp and cld (bad) ljmp adc repz and inc push pusha jo cmp rorb sar xchg or sahf aas out ljmp roll sbb inc xchg sub xor xchg out lret mov arpl cmp dec pop mov add push sub add sti push xchg adc add cld sub xor adc mov rclb (bad) ds sbb sub fstps (bad) (bad) (bad) (bad) outsl push add outsl push outsl pop fsubrs pop fisttpl jg jg outsl data16 mov push (bad) ljmp outsl jbe jle and cmp fwait int outsl jecxz out sub mov in add and inc mov mov incl dec pop inc lods lds add or icebp push mov lods scas pop faddl or sbb lods inc ds fistpll add scas and jg push mov inc xchg ds inc dec xor add cli jmp outsl sbb mov and test sub xlat ljmp popa sub incl scas xor add in mov es mov push add mov sbbl scas daa sub push fsubrs fcom dec fnstsw adc push jne sub testb daa mov inc jb add outsb das hlt pop ja fldl or inc lock pop push or mov shlb sbb lcallw pop pop enter sti mov mov mov add leave pop or pushl sti jg (bad) xor int add (bad) mov pop push enter dec clc xor or cmp ret adc mov (bad) fmulp ret testl fildl movsl xlat sbbb mov in sarl pushl je mov or cld jo inc icebp and loop lods loopne sub adc arpl mov insl sub imul xchg popf sub lock adc xchg lea data16 loopne pop sbb sbb arpl or and jae inc push cmp sub insl mov test bound and fistp sub add cmp hlt sahf sub add cmp mov mov mov jle lcall and mov mov adc sar leave jno popa sti pop push mov pop iret lea xchg sahf add (bad) jmp inc loopne push jae bound in pushl mov fistp add pusha jl pop mov mov adc ja and sub mulb ror pop decl les stos lods test aaa cld ljmp daa pop pop in or mov sbb les pop loopne push ljmp or ret les add and and adc daa add xchg adc ficom cmp mov or or or cmp out pop out (bad) jg sti out xor adc lahf int jge movsb mov pop into adc jbe (bad) mov sub mov add mov cmp add mov and flds adc mov add inc mov (bad) ja add jb movsb adc inc or sub bound lret add mov push das lahf mov add popf and aas and les loop out out pop addb or ret mov add cmp push clc ja les sub bound or add jg mov add repnz pop hlt mov in adc out pop push mov loop or ret dec repnz adc (bad) out mov daa cld add jmp cmpsb mov inc inc in sbb insl mov or in mov bound cmp lahf (bad) out add add rorb push ds mul fild cmpsb pop cli (bad) fistpll add sbb rcrl int3 add incl mov cmp xor fwait cmp adc inc pushf sub dec (bad) out (bad) mov push xor daa pop inc pop ljmp inc add inc add sub pop and fildl add loop inc add sub jl xchg pop test rorl xchg lcall decl add mov add pop pop nop and add xchg or int cwtl add sub pushf lret xchg or invd cmp jmp decl cmp shrl (bad) sbb jmp add add unpckhps and lea sbb push fnstsw das pop das cld out mov cmp pop inc inc loope ljmp add (bad) sbb mov cwtl jbe adc je out push xor push pop jo and loop fstpl add mov dec or jae mov sub mov mov dec ud2 arpl pop xlat insl mov or call jns add outsb inc and fnstenv scas lods sbb (bad) cmp jge out add jne subl mov (bad) jg dec sub pop mov popa add push outsl je aaa push mov sbb andps jmp push jae mov (bad) dec jge mov imul rcrb dec aas outsb xor punpcklwd push (bad) or sahf addr16 pop pcmpeqw aas addb (bad) out repz and fiadd jmp inc add add add pmullw or or ja mov dec adc add sbb std sti fs lock xchg or mov fnstenv (bad) insl clc xchg arpl insb inc cmpb jle sbb gs add add or mov bound jnp jb or (bad) adc pop xlat jne add aas scas add out (bad) sbb outsb testl mov jecxz inc in jle dec or mov add (bad) scas dec pop sbb push (bad) jno add aaa cld pop add xor mov outsb sbb call adc jb pop inc sar decl popf pop cvtps2pd xchg push and and mov push inc xor sbb mov pop (bad) ljmp inc and pop push push pusha fbstp add fstl imul das mov dec dec lock aam lahf mov dec add pushl (bad) adc adc imul (bad) (bad) (bad) jmp jno gs idivl test pop jb outsb xchg and push sub xchg xlat dec imul std scas jmp imul dec jecxz sbb (bad) in lcall mov mov jae xor and outsb jae dec popf test (bad) ja sbb push xor xor pop mov in mov out insl adc imul cmp dec lods ret adc pop sahf stos cld movsl dec hlt leave xor push loope leave jge addr16 dec xor clc movsl sub gs jl or loop xor lcall das popw js ret pop outsb pmulhw add inc lods jnp incl outsb loope outsb sti (bad) or pop and roll int hlt shrl sbb ljmp xor jecxz cmpxchg out xor out outsb cmp mov jns mov pop cli jmp and (bad) cmp ja (bad) arpl in cmc out callw (bad) mov xchg lret mov and xor icebp push ret inc pop (bad) call or mov push add or mov (bad) jg fisttp cltd rorl inc jl xor sbb mov aaa jno in dec mov fs mov pop cli lods fisubrl ja lods inc and pop or mov dec mov sti test aaa adc pop loopne add mov dec pop fnstenv sbb dec cwtl in ljmp jo aad loopne sti jbe jb mov adc (bad) mov in insb cmp jo test das pop (bad) pusha ljmp lea or add cmc idiv lds and daa mov cmp imul mov pop ljmp scas icebp fs out push inc sub idivl jo arpl pop add xlat cmpsl popa pop jmp sub lahf inc cmc loope scas insl cmc push xchg push ja loope mov imul sub out loope and jmp inc and cmp or jge (bad) clc xchg (bad) (bad) call je push sub xchg enter popa push xorb addr16 xor xchg mov fwait inc clc pop setge jmp rolb (bad) aaa (bad) pushl out xchg insl leave pop inc mov inc jae dec xor clc sub jge jbe outsl jmp pushf test dec (bad) (bad) (bad) pushl cmp cmp iret lds jmp sbb push iret call pop or sahf aam pop cld decl add out insl mov push mov and sti (bad) incl insb sarb mov pop pusha adc adc sbb sub push mov das xchg push jns enter rcrb nop pop push dec pusha cld lcall adc js hlt cmp push jns xor sbb hlt fmul outsb pop stos (bad) enter dec mov popf jo (bad) movsb adcl adc fnstsw cmp in pop cli pop cmp lcall and mov subl lahf orl push cs or call decl addr16 popa fist dec imul push ja ds out (bad) faddl aas in and (bad) decl shll loopne in jae repz push add mov lcall mov add in test in add orl pusha inc (bad) loopne in fisttp ret push aas pop push and push adc fwait (bad) push fbstp rorl xchg std pop (bad) add add add adc add fsubrp inc rcll nop and sti push ss and das in xchg mov or fwait int3 or pop add sub add std scas add push and push add add inc mov and and fcoml inc popa and or inc pop insb push fstps add and loopne xchg xor dec or or stos or test jg pusha rolb cmpxchg or jno (bad) mov nopl add push fiadd add push lcall sbb push lahf (bad) add les mov mov sarl jle pop sbb adc sub (bad) xchg lock jp xchg shll or inc cltd pop adc xchg xchg push (bad) adc jmp inc and in inc (bad) out stos jo std aas inc push xor loope dec insl sarl je mov push mov inc mov arpl arpl mov jb outsl popa fs insb popa dec pop xchg push jns pop loop xor insl repz ljmp or cmpsb gs xor inc stos push and arpl pop xor outsl adc aaa enter xor sub pop (bad) (bad) jge add (bad) sub es mov (bad) notb clc and add mov cmpsl jns (bad) dec outsl xchg (bad) mov adc ret fldz xorb pop add insl adc test das aas fsubs (bad) (bad) test pop pop fucomp sbb xchg mov push clc das loope loopne xchg outsb push mov iret pop insl mov cli ja fnsave aas stc xor pop xor cld decl jne xlat jmp xor xor js push mov aaa add outsl aaa imulb (bad) jmp add push js mov or test call repz cmp ret stc popa xor fstpl xchg sub test outsb and mov das aaa mov lock push into jne gs pop push dec inc out clc and (bad) lea icebp dec hlt loop insl push popa dec push xchg out (bad) stos lock aas push jns cmpl add cmp add arpl or add pcmpeqd pop stos jp pop or sub mov dec testl jle xchg adc std inc ljmp xor js add mov mov (bad) jl or xchg dec add cmc fstpt mov adc sti adc aam outsl adc add insb cmp adc imul push stos and mov leave inc daa ret jle sub sbb mov jnp xchg mov outsl inc sbb pop std push (bad) (bad) jnp test add or repz push jbe scas sub push ljmp int3 jg adcb mov pop (bad) xor cwtl add pop mov outsl pop fdivs inc xchg lahf pop cmp cmp and rorl pop les adc dec mov cli adc ret fiadd (bad) in mov pop fidiv out (bad) fild in or xchg push fild mull cmp call mov in fnop aam xor les sti scas notl sbb jo push add inc cmpsb jmp sarl xor sub and lcall or lock mov call or inc fwait into jne xchg fs lods add subl xchg or mov mov dec into in mov daa pop or std add lods jle mov add sti pop arpl arpl outsl dec sub push arpl add cwtl jmp push arpl arpl ljmp fldt xlat arpl iret arpl pop sub adc jmp lcall add lahf bound ret mov pusha xchg xchg imul ljmp pop add cmp lock out jo mov popa push mov xchg add in mov adc pop jno xchg push clc incl push movsl adc cmc fwait adc or cltd loopne test push rcr add add ret loopne sub or stos sti pop push cmpsb fild in mov ret or loopne adc jg inc jle pop std pop andl test cmp or mov or mov das subl pop pop jle xor xchg xchg (bad) mov sub fs push xchg push pop (bad) aaa cmc das enter scas jnp ja pop rcr push lret pop fcmovb clc cli or or pop add xchg add lea jg fisub sti or inc cld outsl lock push cmp push adc mov mov or notb xor sti fsub mov pop jp push pop push xchg daa clc jg pushl data16 pop scas insl setae mov test xlat les enter (bad) lcall add rolb js stos rcrb sbb dec xlat mov add std inc outsl ja pop (bad) fmuls cmpsl lahf push (bad) std push rolb push mov mov adc add mov pop insb icebp add or lock test out cmpsl xlat add ret dec std (bad) (bad) inc cmpsl outsl add xor cmp shll push mov lods loop add mov (bad) jnp adc push adc (bad) mov inc stos add add sbb xchg inc imul sub and (bad) and cmp insb sbb outsb sbb sub decl nop dec imul jb push push lock stos sub add arpl insl cmp gs jo push popa lret inc push clc lcall fldlg2 int ljmp mov add pop or push aas in (bad) outsl cmpsb push (bad) cmp jg sbb aas or pusha outsb xor out sbb push dec loop stos sub pop xchg mov aas mov in scas arpl dec pop xor leave (bad) aas cmp mov jne hlt js sbb mov lea or sbb xor lock incl sub inc adc cwtl push jmp fadds outsl (bad) outsl push ss dec jae fistpl gs nop inc bound jl rol cwtl adc ds gs out loop rorb adc dec dec iret sbb (bad) ljmp inc cmp push adc inc icebp push ss insb cmp cwtl mov dec mov ja test add (bad) stos push adc cmovno cld or or push mov mov arpl ja,pt cmp cmp mov lock sbb inc popa (bad) or bound addr16 test xlat inc outsb jnp mov cmp add fiadd push pop jbe mov addr16 dec scas add mov test inc jo ja out stos or (bad) fldenv and inc sbb push loope jo push jne outsb inc sub outsl jg xor iret adc dec fbld pop jae sbb in push jo xor cmp push imul in aaa sbb mov icebp mov sbb inc sub jmp ljmp mov jbe xor shr aaa cs jae dec cltd inc push call or fiadd je jecxz xor cmp (bad) adc outsl (bad) push jne push cld sarb add (bad) fnclex scas gs stc push jg setns push sub push in dec leave fdivrp addr16 adc sub sub jbe mov fldl repz push fs add fcmovnb incl dec inc dec jae insl clc or out fwait push jbe decb (bad) ffreep or or adc (bad) or mov test jg mov int3 xchg jecxz jl jne mov outsl fisttpl es cmp jmp sub das push sti call add xchg pushf fs mov (bad) mov adc sbb popa lahf out incl addr16 adc mov ffreep pop (bad) jo inc data16 (bad) or inc mov sbb fdivrl xchg adc sbb sbb and inc and popa xor add jmp push adc pop and adc stos push or adc adc pop fistp or adc or or pop xor (bad) (bad) decl push push xor or dec push pop pop push sub or daa or sub lods add ss jg inc lods fistpl inc push pop or or pop clc dec shrl insl ja adc or inc loope cmp or cmp mov sub outsb push sti movsl jl or or cmpsb pop mov mov std out jle or outsl mov (bad) push or and not (bad) (bad) fcmovnu cmp jp or or push femms sbb add ficomp or or add mov iret add push push ja or and lcall sub adc push aaa add sbb (bad) call inc jne adc add or or or or mov es sbb sub outsl inc pop adc and ljmp int3 adc or cmp inc or adc lock sbb dec or and sub push xchg or sbb lods or or sub jge,pn mov push and sbb adc push fstpt das out dec dec push ret js,pn jae cmp cmp in mulb jne (bad) xchg dec or or jae lock xor outsl pop jne adc mov xchg clc insl sbb loopne sub sbb das push jge inc sub dec fidivrl imull and mov cmp add popa dec mov das insb out jg loopne or cmp add fisttpl and pop pop mov or xchg jb (bad) mov or jae xor adc lock add or mov add hlt cmp sti lods ret xchg sbb add sub push inc or pop add ja sahf add or add or aas push scas mov push aad mov in mov (bad) cmp sbb add pop push xor cli or add mov mov add sub lock inc out cld dec and in cmp add popf and testb sbb mov pop pop mov pop or (bad) mov add and mov ja adc xor push clc pop jnp sbb ret sub std fwait jp add fnstenv roll call mov xlat pop or rolb mov icebp dec cld decl loopne test les and andl aaa adc (bad) ja (bad) out push out jae (bad) xor xor mov shlb (bad) fldt mov lret cmp rorb sar jg ljmp pop clc mov cmp int3 inc orl inc xchg or (bad) (bad) ljmp cmpsl je and jae mov mov add jbe cs jb,pn popa je bound push push (bad) (bad) in repnz pop nop ja cs andb fsubrl cwtl add mov shr test sbb shrb mov add dec mov fs add pop outsb add int3 cmp cld test add add inc add shlb add test jg fcomp add fstpt mov add outsb inc fmull pusha mov jo jg pop loope or jmp nop nop nop inc mov inc add jne mov sub adc fmuls loop jb xchg adc shlb jne push jae xor subl push jo or sarb das leave or and adc mov sbb pop or ficompl andl lea inc mov cld jbe mov inc xchg shr arpl adc xor push lahf inc out add icebp cld jmp (bad) mov mov sub cmp ja cmpb jne mov mov sbb lcall shr rol xchg sub sub jp add inc xor adc daa jge fdivr lea push or xchg sbb fsin pop mov xchg dec or dec repnz push adc inc add ja mov testl push mov popf imul sbb cmp ja add mov jo push js pop jo loop mov inc mov scas and stos fimull pushf jle mov mov call lea (bad) pushl sub adc lea push cmp jne sub push push add xor inc cli inc mov add add (bad) add add sbb add mov xchg pop or inc mov add cmp sub data16 jns js insb outsb jae nop jb add mov cmp push insl mov arpl cmp and mov xor and outsb imul aaa xor xor and push xor jne adc dec xor cmp (bad) push or jns adc or gs and push mov mov fcomps pop xchg insb add rcll scas jne inc arpl test jb das cmp pop popa xchg jl jge stos push hlt prefetch inc test mov adc sbb adc xor cmp fldenv xorl mov lcall enter in dec inc push xorb dec inc dec xor cs dec dec add push inc push dec or fiaddl pop sbb jb pusha in push push or inc or loop mov nop mov pop add or test or les scas pop mov sbb inc fisttp push scas xor xchg add add and xor lcall add adc nop push push cwtl cmpsb jmp jb jns xchg aad std add les xchg jo mov stos or sub cwtl sbb dec rorl (bad) mov imul insb xchg insl divl inc frstor cwtl aad mov xor xor xor push inc xor mov mov xorb mov dec pop add or les enter insb or adc add push orb out pop imul bound xor inc out or push or and adc adc int (bad) xor sub fdivrl push les add fs xlat fidivl mov jge sbb xchg cwtl andl movsb inc mov fidiv push adc je and sti test pusha fisttpll cmp dec inc inc dec data16 and loopne cmp xor lea jg sub and cmp out insl pop test nop jne mov mov or inc jnp fs dec fsubs push jb push iret or or or push inc mov jo push adc inc addl test push lods and popa sbb inc ja (bad) dec ss adcb and movsl lret jo js lea repnz dec adc lods dec ss aaa pop sbb adc imul inc pop popa mov inc mov in add push push (bad) jnp es sub and icebp inc test imul outsb daa mov push dec sbb or jns inc sub sbb mov and mov adc outsl fs mov cwtl nop xchg adc sbb jnp or mov adc push popa imul push es popa push les fwait jno (bad) pop push (bad) fs dec push inc test xchg xor icebp cmp jmp sub lcall push sub lret jp adc inc jae movsl mov pop movl and push mov int mov push or inc pop adc movsl sbb xchg mov inc sub mov cltd out imul dec add inc adc and in add ss mov ficoml call or inc cmp orl adc jno jmp movsl jae add and add xchg and or pop jne cmp out in xchg (bad) and imul dec fmuls and clts add sbb or add sbb adc and fisttp add sub sub sub or or sub pop ljmp fldenv or adc daa dec sbb adc (bad) testb adc pop adc and push adc pop sub and push das pop femms test or sbb pop (bad) jbe jmp and sub push pop push and inc lea push sbbl (bad) jbe pop xor cs aad or in in or mov or in add adc and mov push push dec sub or (bad) (bad) pushl and push adc lock add xor ds or push ss mov add push and cmp aaa gs outsl mov mov or sub and mov sbb adc dec pop adc push adc add lock add lock add lock das xor or sti fcomi mov pop sbb bound mov or push add (bad) mov in pop lock add sbb adc lock ljmp lock pop add or jb sbb adc inc add sub and or adc cmpl mov or xor adc adc or or adc xor lds addr16 mov dec push mov sbb cmp cmp push das add sbb or adc and push adc mov das (bad) cmpsl add pop pop pop sub or adc adc in push (bad) call and and lock pop lock add (bad) xor inc pop popf xor lock add or dec je push adc xor dec push add cmp test mov cmp movsb sbb push adc pop in inc push sub dec mov add and jno or iret sbb push mov push sbb mov and icebp jg ret dec or mov push pop clc int cmp pop lret xchg add sbb icebp mov insb inc loope inc push mov dec mov enter lock adc es push add mov mulb or or subb adc inc cs sub daa push cmp lods pop add xchg mov test push and push sub sbb sub inc adc cmp and aam ss push add or push mov lock add mov jl pop sub jns lock mov mov ja aad mov leave sbb adc lock loope insl and add add shrb outsl push adc lock sbb lahf lock add add xchg sub mov adc adc (bad) xlat or orb add in popf sub add add and cwtl clts inc mov fnstcw and add and jbe or pop mov xchg pop or xchg addr16 incb add rorb addb and and jne add movsb mov (bad) add cld and dec insb adc add and mov cmp ret dec pop mov out mov cmpsl test das je,pn js push mov fcomps nop jmp jp mov sub push xchg adc sti and sub dec lret out fiadd cmp xchg js es rclb add sub imul repz bound xchg or xchg inc fiadd mov imul daa and inc add add repz adc and dec dec adc add add and add pusha mov lea push jmp nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov push dec repnz push call or je mov add jmp call add lea xor mov inc or je cmp ja add mov xchg rol xchg add mov jmp and shl mov add jmp mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp add add add cmp inc add 