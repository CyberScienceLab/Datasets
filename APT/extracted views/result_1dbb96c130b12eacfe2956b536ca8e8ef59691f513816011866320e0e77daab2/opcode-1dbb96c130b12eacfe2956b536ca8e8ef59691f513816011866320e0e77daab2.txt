call add push mov sub fnclex fwait smsw test jne smsw test je cltd xor xor xor mov jmp or or or or add add cmpl push mov jle mov movzbl mov inc test jl mov movsbl (bad) jle adc mov sarb rol loop in in decl ret shr mov mov and daa ljmp pop or mov inc jmp mov sti outsl sti fistpl ja cmp jle push jne push ljmp push call (bad) pop ret push mov sub test jmp (bad) call inc clc or push push js outsb (bad) mov cmpb je lea push adc jne add clc push adc cmp imul mov xorb cmpl jl jle in xchg pop inc add (bad) pushl or jae inc jne cmp add rcrb std fucomi ret movsb cmpl and and adc sbb adc call add neg sbb inc fdivrp fistpll pop xor leave or cmp ja xor mov das adc sub xor and ja (bad) call xor jb ret in scas insl mov movl adc sbb mov das ret cmpl loope mov or pushl sbb inc sub push push mov or lea mov pop or je jge std cmp jae push push jmp gs sub push xchg and jle mov cli sub sahf lock inc push cmp in out fildl test cmp push fnsave mov lea xorl add sub movsb stc call idivb ret imul add add mov xor sub cmpl rorb insb fbstp and add push sub idiv ja mov push pop add incb pushf int3 jno incl incl mov add in sbb mov sub xor mov (bad) jecxz cltd nop or mov test movsb and lcall mov mov iret add lods and mov cmp mov flds cmpl icebp xchg pop jne pushl mov or xchg pop mov push mov xor decb push daa bound pop (bad) cmp sti icebp pop pop leave ret mov fdivr out pop add mov push push mov sub jmp js lcall pop mov imul lea push pushl add out push mov orl dec hlt mov mov or dec pop lret inc sbb mov popa jp out mov lea mov add cli adc sbb lea sbb je shrb movsl fistpll mov and cmp push add repz mov mov adc push add shufps adc mov pop sbb movsl push push mov test cmp fmull mov lcall cmp mov test enter mov jnp or xchg pop mov out dec test mov mov sbb aad jbe leave pusha repnz je jae in ss push adc lods je imul pop rorl hlt xor pop push js mov push inc in jne insb mov sbb popf or shrl pusha dec or jle ficompl fisub jnp fisttpll fildl cmpsl and sub fisubl dec pop jmp lea xchg or ja decl mov cmp jle cmp pop mov inc add insb das mov cmp test je mov adc int3 inc icebp js xchg add cmpl mov (bad) pop aaa xchg mov lret (bad) clc mov adc lock mov push or mov out mov jnp jo imul push jnp fsubrs mov mov add fnop xchg adc sub pop and push add sbb leave (bad) adc insl adc paddw dec adc xchg (bad) rcl add or pop test addr16 sub inc xchg push mov sbb fnstenv and and pushf in lods and and nop and and dec mov adc test movsl add ret inc dec push nop mov mov mov mov (bad) enter cmpsb inc push add sbb inc lret and and and xchg mov fstpl call push jle mov loopne pop decl jne mov cwtl lods (bad) pop test mov lret mov std (bad) adc cld add mov or or jne mov std outsl xchg or adc cmp je popa inc inc cmp jl xchg clc ljmp pop ret add sub mov jmp or pop xchg xchg in ret js sbb leave (bad) sub lock test dec xor adc lcall sbb sbb lret (bad) sbb outsl test in push xor cwtl adc inc or jge mov xor inc add add rcrb lods scas mov loopne push das xor xchg (bad) (bad) icebp pop jbe push xlat jge pop pop jmp lsl push or sub push xor push popa pop decb push mov mov jle push cmpl jne stc sbb pop cmpsb mov test pop sbb subl je mov push pop fiadd adc leave loopne jle push mov fucom mov xor or mov sub mov mov rcll cmp or dec movl icebp jle roll loop sbb pop ret clc mov cltd xchg pop push inc mov mov inc or inc adc push fcoms mov jae,pn das ljmp pop and pop aam cmp and add mov loope push in test mov cmp divb mov xchg mov inc sub clc mov in adc sub iret andl xor or jg loope rolb insb leave sbb add jmp mov data16 pop or mov hlt sbb pusha adc pop mov adc pop xlat inc push repz jmp fs push sbb (bad) sbb cmpsl push iret jmp inc or inc adc pop or stc mov mov add sti cmp push sbb inc or push jbe mov orb jmp xor sbb cltd out xor nopl mov movsb or cltd in arpl sub push fs xchg or mov aad in scas addl rcl enter or pop stc pop aam int dec add repz (bad) jne lock lods pusha js push push push mov adc or add stos insl mov sub and cmp push xchg sbb mov push jle cmc lret jmp mov xchg out jne and pop mov roll in inc pop sub dec lcall mov mov cmp jne das or push inc ret aaa aad jl jmp imul mov sbb mov jne adc clc mov divb sbb ficomp in inc int bnd es mov test sbb xor jns in inc scas inc cmp in and add add lret push sbb add ljmp xchg (bad) in (bad) lock movsb and push je add jbe push add test sti repz data16 addb mov pusha push in add outsl pop mov call mov pop push cltd pop ds mov xchg dec test and lds aam test adc ja scas push adc adc xlat push mov (bad) (bad) imul adc push ja movsb (bad) jnp movsl pusha mov push popa mov pop cmp ds add dec pusha dec rolb sbb int3 pop std jmp inc jnp add jne inc push and jle push fwait in pushf xor loopne je insb fadds dec xchg add mov push or jecxz push add push push test inc clc push cmp int3 fidivl mov insb fnstenv or aaa xchg sbb cmp ror mov fisttpll push push cmp mov in jmp mov bnd (bad) jae push in pop inc add xlat repz xor shrl xchg in sub test pusha or pavgw sbb xchg or std inc js pop cld sub sbb adc ret and adc aaa ss sbb sub mov inc (bad) jecxz pop lods sub adc icebp xchg scas pusha aaa rcrb xor outsl mov xor inc loopne xor xor pop mov shrb sbb add notl push mov push adc scas cmp xor pop ret mov jmp pop popf mov push xchg push pop pop std outsl ud2 adc jle jmp pop pop mov subb and test movsb inc jmp or mov cwtl mov (bad) push push insb fisubr and jne sub mov sarl repz push jl imulb sub xor test fcmovnbe pop gs pop pop stos in or cmp fdivrs jge mov lea dec or roll in jl adc sub (bad) out jmp mov pop (bad) loope or ret daa or mov push cmp sbb test mov sbb mov dec cwtl inc test fcomi mov xorb push xor js outsl xchg pop pop je adc aas gs loopne aam sub pop push cld test jle jae cld pop mov aaa inc jmp or or dec aaa add inc cmp fcoms jmp mov int3 rclb nop sbb (bad) xchg xor mov flds jl fst clc mov xchg add pop clc add cmp dec push mov push int3 cltd cmove add hlt addr16 mov lcall ret cmp scas mov insl add imul sti pop sbb push pop lea test or test (bad) sub sbb loopne adcl orl jmp scas and mov sbb adc cmp pop mov lret rol lock push mov (bad) push mov dec fldenv (bad) leave jle cmp ja add dec cmpsl xchg outsb and sar and mov mov jle mov add push jecxz out and aaa frstor outsl pusha mov pop adc cmp stos les pop push (bad) outsl sahf jo shl xor lods sti sti out sahf sub imul add lea add mov mov arpl push jo inc or je or add jl or add mov js sbb jg add popa adc adc mov add xchg fidivr adc sub and sbbl mov lcall xchg and jge push xchg mov sbb xchg sbb sbb fucomp sbb add cltd out inc push jge jmp push fwait adc push fwait dec pop out ss jne pop popf sub fldln2 jne cwtl xor push push fsubrs xor mov cmp add adc mov ficom es lock cmp mov dec mov js cltd pop mov rclb and cli push adc ret test xor nop clc push inc push out inc mov add cmp scas (bad) add pop hlt pop mov arpl dec cwtl add dec add leave cmp add shrl add sbb daa out aad sahf loopne or bound jl hlt cli jbe mov outsb in (bad) data16 roll pop jne repnz mov je push push xchg sub outsl mov (bad) mov popa jl imul shrb adc or imul daa xor sbb adc fdivrs mov aaa sub push xlat pop js fmulp mov ficompl or leave xchg loopne inc add mov lahf scas fstl mov ljmp pop orl fisub inc or sbb mov cltd (bad) fildll iret push movl jp lods inc loop add sbb inc xchg imul (bad) or cmp xor jmp adc pop pop sub je push push or add divb je push ds je dec je add mov jne mov pop jmp or jmp jne add or loope or push sbb or in test xchg fst pushw sbb jne or outsl xchg xor out or pop andl cld inc adc sbb shlb aaa or test mov push mov jbe sbb insl mov mov adc repz add fimull out jl pop sub lcall je dec push cmp es push pop out mov sbb jne push repz sbb fdivs push (bad) faddl pusha les xchg sbb loop (bad) pop enter ljmp pop sbb mov push je (bad) jle rcrl enter add inc lcall adc loope xor push lea sub lods lret ret xchg adc sub dec push rcll mov jnp jl int test clc dec les cmpl cmpsb and sub xor cmpsl xor std loopne dec add add cmp not add push or imul lea xor dec jns push push push mov mov rol insl dec push mov mov mov dec xor and xchg pop pop sub sbb and lea jmp dec dec dec roll es cmp or and sbb pusha daa mov pop lods pusha add push pop xchg sbb push inc dec js push push push cmp or or adc arpl lahf fs sub jno pop les (bad) and sub sbb std andl leave sbb and add add test pop call sub push cmp orl ja push dec aas pop xorl adc sbb das xor insl stc add rolb lods jne fadds inc or loopne pop imul sbb call bndstx inc push or insl dec mov sbb xchg adcb nop inc cmp test add mov fcmovnb push sbb fnstsw push push sti xor cmp jo push add or dec jo push fisttpll movb and mov test adc (bad) cmp and pusha sbb leave and push clc mov loopne in sbb stos xor fmuls iret clc popa push inc test (bad) adc pop sub and enter scas lock and mov icebp (bad) sub stos add jne push mov mov xchg scas xor or cmp cld lret mov and xor and sbb fcomps cmp loopne sbb test add clc jecxz fcmove or repz loopne mov stos ret or stos mov std cmp je push outsb push pushf sbbb pusha sti jmp and mov sti push mov dec jo inc push loope inc sub add outsb inc in call ljmp xchg test sub push push out insb and daa push out out push fsub in pop push xchg or push pop cmp or xor or xchg dec sub mov mov mov in mov sarb mov jo or xchg mov lods xchg loopne mov mov test cld lods push add adc sti lcall push cmp mov inc mov sbb mov push cmp sbb bound ds jmp jp add or push mov in sbb mov ret mov mov je cmp in test inc push push push ss add mov loop loop and push jae fadd pop shrb sbb ud2 pop mov call std fsubs mov xor pop push mov or or mov adc mov imul or lods cmp into and or and decb or cli lods mov mov out jmp aad and jl shrb subb or lock cs sbb in outsb mov icebp mov mov jo inc cmc inc jbe or in inc and sbb or sbb mov mov jno add adc mov cmp (bad) pushf inc jns in dec cs rolb rcl (bad) pop rcl pop aad adc cmp mov jg and mov jae movsb cmp adc inc mov sahf and dec dec in or push in je add or mov in sub mov rcrb fcoms sbb adc add cmp sbb add lahf push pop mov mov push push mov (bad) sbb and or push mov adc incb les xchg lea push push cli inc lods inc aaa adc xor mov sub push mov push lock dec pop cmp add loopne sbb pop frstor test es mov ret push mov push out pushl mov out push fldcw mov stos xchg and rclb dec pop mov inc push jg add inc lods sub and in xchg scas enter mov mov call movl inc adc and repnz or enter in cmp or sbb bound jle and push mov cli mov out jo or mov add pop adc lret shrb or inc scas mov add fisub mov adc jo test push lock mov sbbl lock inc add cmpl je mov les repnz sbb mov cmpsb in je xor out popa outsl insl add add adc push or clc xchg pop ror or dec mov or add xchg js lret push jmp sub outsb dec mov test push cltd and add divl pop or shl stos or jae loop mov enter push jne ret or jl (bad) cmc fisubr inc adc ret add jmp mov xchg je jo ss and add icebp mov sti addl xchg icebp sbb aaa rorb or clc sub clc jl (bad) adc jge push repnz xor dec cmc add mov push movsl mov add pop ja inc cmpl mov pop sub sub (bad) pop jmp xor mov push jmp fstpt pushl es add mov add add pop ja dec mov add add add add add sub sub add test cmp jnp push mov cmpsb sub loopne insb xchg push mov add stos push mov push xor or push pushf push mov loopne and (bad) mov jl mov add loop sarl jle add pop add push mov adc push sub inc or outsl into or iret adc jge sti or inc daa or cmp sub int fistl cmp sbb inc cmp arpl mov sbb or stc imul out add push cmp sbb adc rolb (bad) stc mov inc insb js or inc pop mov xlat mov lea or movsl and pop cld insb in cld add andl or mov fiadd sub adc test inc call mov mov or bound xor adc push cmpsb mov aas jne inc and aaa dec push (bad) pop adc ficompl bound mov data16 sub movb mov mov aam subb les inc inc sub ret outsb fistp je cmpb cmp or xlat mov add adc nop mov sar pushl into jmp jge js mov sub pop pop add lret je fist jbe mov cmp je lret inc sub or xor push adc cwtl aaa ljmp das je xchg (bad) cmp jne out outsb mov jnp outsl or test fs inc xchg pop or cmpb ja inc or push pop lds or insl jo frstor sub sahf lods fistl aad bound mov aad jne mov imul jle jle or xor jbe mov push outsb add cltd mov insb movb movb out sub jmp mov mov jge mov ret mov aas jb push add sub and lret adc dec add ret ficompl movsl adc mov lret gs pusha stos pop pushf sbb inc inc add pop mov push sbb cmp sub and push mov push pop push das adc call mov inc outsb mov sbb mov bound shr sbbb push xor sub cmp in fnstenv sbb clc add popa rorl and adc ja pop notl and decl jb cmp jae nop or cmpb insb cmpsl lret or pop mov push xchg cmp sub sub outsl mov out jne movl and roll das fisttpll cmp addb add inc jae fdivrs jne sbb jne (bad) sub mov out xlat sbb bound adc mov jp add aas cs mov mov je sub adc push andl fadd inc mov add xchg push mov mov xlat jnp inc loopne pop adc pop or fstps jbe jnp xchg or sbb or roll cmp add jbe dec xchg jae adc mov and dec inc sub push lock jmp inc mov gs xor loope in or les or mov add jp or or in out adc sub in adc or das jecxz shr mov in xor mov mov mov je fistl roll adc loop or xlat insb or mov xchg push xchg scas frstor adc add sbb sbb mov movlps cmp adc jp fwait pop lock add add adc in push cmp sub add mov jmp adc jmp inc jb mov jge sub push (bad) (bad) hlt or add or xor push push pavgb fistpl loopne sbb aas (bad) clc push stos hlt push push push jl push mov sub add out ja cmp sub add push push je pop cmp mov and mov pop pop mov adc and jo adc mov dec insb xor movsb push push add vphaddudq repnz cmp jne je add xchg sbb add adc daa mov mov jmp pop (bad) insl sbb stos xchg clc sbb xor xchg push clc pop call sub xor fdivs test out ja bound rorl xchg inc (bad) dec lds dec xor dec pusha popa add sbb dec or xchg jge adc js xorl and xor nop cwtl rol cmp loop adc in push and (bad) mov mov push in (bad) cmp mov mov cmp fcoms lock movsl mov xchg jb pop or faddl dec xchg les shrl sub daa aad xlat push adc mov push dec in mov movsl clc or mov fildl test or xlat pop (bad) aad adc jg push mov hlt jmp cmp hlt cmp pop je mov mov and std mov ret mov cli add add mov sub dec aaa adc and sahf mov sub sbbb adc cld jmp and fstl xor (bad) push in sbb repnz push push icebp xor sbb pop mov dec push nop cmp out insl jge out or sahf fs mov lcall push jmp xchg mov sbbl mov mov (bad) add xor jp mov pop fisub push insb push (bad) push xorl push pop lods push hlt mov sub adc mov pop test (bad) mov outsb or fs xor cmp mov mov pop (bad) mov cmp ljmp inc lea or out stos add jno pop setne leave ret nop push jb cld mov or es and js popa fsub sbb aad xchg fistpl push add or leave enter or enter cmp fmuls in adc add outsb jnp ret mov jg or fstps sbb or addl or sbb in cmp jns mov fcoml and sahf and negl xchg cli lods stos xchg inc fdivs sbb mov jnp jmp or adc inc mov icebp ret (bad) and push mov adc dec xor dec out (bad) mov cmp push or fistpl or add xor jle leave ss jne je xor mov nop addl jmp orl or mov mov jle pop mov cli add pop int pop adc mov sbb andb add fistl and gs jo movsb test ss rcrb xor fs add mov add sbb inc loope jne and add add out pushf mov push or inc push xor mov push xor push jb pop push adc andb mulb dec insl sub cli out mov ja pushl pop and mov mov aad xchg adc pop call dec mov sub sbb mov pop movzbl rorb mov shl or mov shr repnz adc rorl mov push or add psubw push and adc mov adcl stos mov cld jmp add add mov movsl or adc inc pop std test mov pop movsb sub (bad) int xchg jmp test loopne ret pop add lcall out and cli pusha cmpsl shll jle test mov xchg jecxz inc mov cwtl inc dec adc js aas mov inc mov inc pop dec push lret sub insl (bad) xor and mov daa arpl add mov sbb ret je mov cmp scas jno or shr or cmp jle jl call ret jle adc push jne mov dec add add jmp xor (bad) (bad) stc add jo adc add inc lock fadd sti add jg xor mov pop test mov mov jae add leave add sbb add dec push test das ret test push popa sbb jne insb (bad) xor popl scas fs into or adc and or add call sbb mov das jo jbe add je pop or jb addb push push push mov push sbb je adc mov push push test inc jnp movsb and sub (bad) cs fild jle ret jbe loopne in js out fs or mov rolb mov (bad) mov jbe push cs pop fs gs inc xor (bad) adc and es jl push push sbb stc frstor adc scas (bad) mov adc pop add lret dec mov (bad) movsb mov sub inc call and mov ltr xor adc inc lock inc js js xor (bad) mov push scas cs adc or test inc (bad) pop in je push pop mov xor cmp add test clc adc or sub fsubl add push push push (bad) ja pop inc mov adc cmp stos add dec cmp xor popa dec js jecxz push pop jmp pop add and sbb pop inc (bad) inc cmp xchg je ljmp pop shll leave mull cwtl adc pop test cs inc adc mov mov mov sub test ljmp orl notb push jb lea push or and mov pop or incb jmp adc add mulb pop cltd sub push jo fstps mov add push adc and sbb pop inc mov dec adc jecxz dec pop or ret ss popa aas enter loop add cmp add pop ret (bad) push dec fcoms (bad) je ret enter and in add inc dec mov int3 add or popa je mov fldl clc mov cmp lds push add jnp or and push lret test inc adc push movsl add xchg pop inc add and (bad) dec sbb add mov mov and fbld (bad) je push push inc mov nop adc sbb dec inc xor out in sbb in adc stos sbb or add push pop mov inc mov sbb popa adc xor enter add xor pop inc add mov adc add mov test dec sbb mov mov push fsts sbb enter pop je shll in jle enter mov and dec std test fsubrl xchg push inc sub adc pop sbb sbb or cltd mov add xchg mov push dec out das add sub pop mov push xchg cmp cs shlb mov mov jne or pcmpeqb sub sub jo add ljmp sbb sbb lods bound sub pop inc mov dec cld mov (bad) (bad) xchg inc bound test mov (bad) fprem1 sbb or add push push jbe xchg nop adc loopne mov mulb xchg sbb pop push push aam xor insb mov or inc add xlat jg xor popf movsl inc push xchg sbb shll pop in inc inc push sub push cs bound adc inc outsl pusha mov (bad) jo mov arpl add add inc clc xchg or push popa fnsave loopne push inc jno pop cmp push push or test sbb lods add jnp gs xor dec xor mov fwait xchg or add jge or (bad) push push sub fs pop mov or add pop push xchg pop sub add mov mov add inc cmp mov cmp (bad) out pop push push push cmpsb xor adc nop xor gs push pop mov ds add add pop inc pop inc fisttpll add jne push sub or xlat jno,pt and pop adc test cmp add ds mov (bad) mov push mov fcoms ficomp inc ret jl and sub fbstp jge add add push inc jmp push add dec jmp inc shrb add push or fcmovb push fsubr lret xchg jae mov or and and mov (bad) lahf xchg cmp icebp enter sbb cli add lock loopne decl push clc push mov add cmp push sbb sbb sub inc lcall fs pop jmp push insb add outsl insb mov rcr jle adc sub or popa bound mov enter scas cmp fstps mov enter fstpl or mov in push add push push or pop adc adc jmp push xor test push mov mov popw add or mov sarb rolb pop mov cs add or adc sbb mov and jae sbb adc or xor pop insl rcl push xchg push mov out ss aaa call and push xor adc sub shll (bad) (bad) daa xchg or pop clc cmp mov mov jb das (bad) subl lock lea subb pop add jle adc or dec mov xorb inc push sbb incb add or les out aaa mov and sarb mov es scas nop push push leave rolb push xor adc daa mov bound jmp lock xchg cmp imul lret and push fidiv fcmovnb ss ja,pn in push add (bad) stos test jl and inc loopne popa adc rclb push int3 jmp test add add jbe dec xchg push dec mov push adc popf loop sti (bad) popa or or hlt pop push lea fst mov dec nop adc je jo mov mov (bad) bnd lea mov mov adc adc je push dec jl lds fcoml add cmp mov (bad) jg aaa push mov (bad) mov and nop add (bad) mov ret mov cmp je push mov add pop (bad) fildll mov ficomp notb out mov mov and inc pusha mov mov scas pop xchg loope je inc sbb add or cld je cmp jne push movsl outsb mov push mov mov or add (bad) cmp popa jmp sbb sub cmp lret sbb push aad fimull (bad) lahf cmp mov sub dec jle cmp shrb outsl pop and orb sub jle fdivrs lahf push jg sbb sub (bad) and loope mov cld bound jg push adc mov jge mov fld inc or mov stc test push pop mov fildll mov push shrl neg sbb push not and jge arpl popa or pop fwait xor cmp lods outsb cmpsb sarb cvttps2pi test fld push sbb or out adc fwait aas push mov adc pop cmp fstl mov push push adcl push pop sub mov aam mov add lods adc ja cmp std inc add sub xchg ret dec mov nop push cli (bad) ret sbb xchg push nop cmc sub (bad) ss mov xlat inc mov add sub lock mov add loope inc sbbb push jo sbb or pop fdivrl mov push adc jmp in outsb outsb jbe and repz lahf insl push ds add mov mov mov inc jbe pop sbb in jno adc adc std decl cs add loopne add div test je movl push xchg rcr pop xor test xor pop sub mov mov sbb popa mov popa lods movsb (bad) fisttpll idivb std jne mov add xor xchg and dec fcoml jae inc (bad) call push cmp popa pop rorl or fmuls or pop int3 popf lret jecxz arpl in pop jecxz mov loope pop or mul jp or aaa orl push cmp or fistpll loop add mov or or je xor fstpl sti xor imul sbb mov mov inc rol mov in loopne pop sahf adc loope fstl add push dec inc xor or xchg sbb pop adc cmp add or leave push rclb sub mov push sbb xor nop xor push mov sub or and bound ss pop and ljmp mov or sbb push pusha movsb into add (bad) clc xor jmp dec add and xor mov in fdivr arpl xchg adc jl imul bswap push mov scas js pop cli movsl or add movsl mov fiaddl rep push fisubr je sub cli mov jno repnz pop adc mov fsts or jno pop sub push fcomi pop sbb ss jne clc pusha test fs das scas pusha sti movsl idivl sar ret jae fdivs cmp (bad) ja mov clc ds push or les in repnz mov adc dec fs loope insb sub push push lret mov sbb rclb pop fiadd push insb jl push xor cmp xchg shrb shll in push mov fs and or xchg out (bad) gs adc and mov shrl (bad) arpl adc popa leave dec inc sarl push push push lea dec jbe xchg addr16 dec clc addr16 enter out cmp xchg ret out mov outsb pusha push push xchg cli xor das xchg call dec stc and adc leave or inc pop mov pop and cmp mov sbb xchg and inc (bad) push or mov adc cmovle xchg adc fisttpll popa enter sarb jmp and mov cli or (bad) jb cmp pushl jnp mov mov lea or jae out out (bad) lods es inc push sub sub mov inc mov dec cmp (bad) out mov adc or sub mov cmp jb adc (bad) add xor cmc pop push les fs lcall stos push dec inc inc imul out push cmp dec jmp in mov jb pop xchg inc mov mov sub mov xor adc btc adc mov inc add out fnsave inc std test stos lcall cmp adc cmp push sub mov mov mov xor out cld sbb lret mov or sbb sub or fxch (bad) sub mov jle pop xchg dec nop push psllw cwtl or daa call sub ret mov jge mov clc or mov jecxz pop dec push mov xor pop insb mov fadd jle or and push push inc sub jae es dec cmp ret mov xor adc push sbb ja xchg add cmpb insl sbb xor pop mov sbbl dec notb pushf lock xchg insl mov dec inc sub jmp mov (bad) push inc push and jmp sub push xor inc sub cmp mov imul or and cmp mov adc mov pop xor ret andb mov add push lcall mov js dec lea pop enter lock cmp sar mov sbb ret inc aaa or (bad) mov xchg push shl ds dec inc (bad) pop xchg add (bad) jo ss dec inc push inc add dec jecxz mov jne pop pop sub enter lret inc jp push (bad) sbb mov mov dec dec adc outsb push mov pusha test xchg push mov or xchg data16 pop adc leave aad add adc pop insb or cmp (bad) std mov xchg mov xor xor mov mov sti lcall ja addl nop inc lcall repnz cli xchg sub out (bad) ficoml dec and ficom scas movsl fwait cmc loopne sahf loope push subb push jns mov pop adc xchg imul jno cmpsb cs push mov mov outsl or mov dec ret lods xlat cs mov inc add rorl (bad) add sbb sbb push sub lea jmp adc push nop xchg test ljmp insb cltd mov jbe add or add cmp and int sub inc sub or (bad) pop inc sbb mov fidiv add or adc jne cmp nop ret or xor in inc push pop push or in jb mov mov in xchg sub fcmovnb cmp jle cmp (bad) jbe ljmp or fcom or fistl inc mov mov xor add lock mov dec outsl pop lock jmp sbb insb test cmpsb jno lcall mov lret and ja add pop jmp xor mov fs movsl std test mov pop push inc pop mov je mov fmuls js loop jae mov pop pusha sbb and lahf sbb aad scas cwtl subb loop cmp sub out (bad) in fnstenv xchg std out out arpl jo sahf pushf lea lcall mov or push sbb adc leave sbb mov insb mov fs sti fistpl (bad) fsubs mov enter stos cltd sar or (bad) stos loopne pop cwtl xor test and cwtl cmp sbb bound jne nopl in (bad) shll add bound mov sub ret stos jo push sbb cmp push cltd sbb inc (bad) mov mov lock mov add inc add leave inc enter adc xor xchg xchg adc lahf (bad) jne adc push inc dec mov push pusha pop push inc dec out mov pop ret inc dec sbb data16 je dec shld adc sbb add cwtl popf sbb (bad) jbe mov xchg insb adc inc fidivrl or jge sahf loop fiadd adc shrb pop and add lcall sub pop aam dec mov orb mov fistl stc or push aad or sarb outsb push insl out (bad) fdivrs insb sub movl mov jae cmc std mov or add lcall inc xor adcb std sbb adc push arpl adc subb stc jnp faddp into sub push push sbb mov cmp jmp lcall sub inc test insb stos jo sub into mov sub push les or xchg out bound sub cmp rcll nop inc das ret jp adc mov ficom mov inc mov push lods and dec out mov ljmp jo adc xlat fdivrl pop push addl inc or pop mov (bad) je ja jae jg js into std addl cmovnp xchg aad xlat jne lock lds out or inc xor and jmp aaa mov xor add outsl sbb fildll xchg arpl add inc int pop shr arpl sti add out sub aas lret popa out (bad) sub xchg or xor cmp cld xchg mov outsb xlat xor sahf cmp or push or test sub mov add (bad) outsb push inc pop adc ljmp in xchg pop icebp and (bad) cli je pop negl mov dec repz daa popa mov push cld jb mov mov mov push ljmp add cmp divl mov int3 dec aaa sti add sub mov add sbb hlt sub jge xchg xchg test inc cmp jne (bad) ss mov bound imul dec push mov inc stos jg xchg xor loope push dec pop push push push mov and jae xchg (bad) mov mov mov lret insl ret push movsb jne push fs jbe fwait lock (bad) repnz cs xchg adc int3 mov sub pushf push and xor pusha push cmp loope pop imull jns inc popf jb pop adc fstpl mov dec sbb or sub lock mov dec xchg inc push sub add clc mov xchg push jae mov add lahf dec popa mov or faddl insl movsb push shlb movsl mov insl mov cmc ja add loopne cmp inc adc push into pop fistl sbb add inc cmp subl or dec hlt sbb (bad) in push movl enter test test push (bad) add xchg (bad) jmp mov (bad) shll mov or mov mov out xor sub (bad) or mov mov dec or sbb inc cwtl sub clc mov mov jb xor cmp test fnstenv xor xor mov or push lea jmp sub inc adc or push movl test nop adc cmc pushf or imul call inc popa shrb clc sbb orl sbb jae divb (bad) adc sbb sub incb sub lds jb mov clc mov aad fsubrl inc inc jbe mov lahf xor or sub mov mov mov mov cmp and sbb ja mov dec bnd into cs and or rorb jb lods (bad) jae sahf adc inc jb,pt fidivr jl mov rorl xlat cmp adc lret cltd pop mov and mov popa lea inc std and pop aam add adc ret shrl mov cld xchg js outsb add dec (bad) cld ja and (bad) sbb lcall and (bad) jne pop ss fwait and push inc lea push mov jl sub clc sbb mov push add push sbb adc inc or inc push out nop in sbb jns or xchg hlt push xchg sub in cs mov jno test mov rolb and xor mov xor sub mov dec pop je adc push roll je lock push shrl loopne push les adc cltd jo or and aad pop jns jp sbb fsubrs push mov add iret mov mov mov push hlt dec push push dec loopne add pop mov mov add ret ds data16 inc es mov inc push push cmp sbb lea xor (bad) fcoml dec dec mov xlat push xchg cmp ljmp dec leave xor imul add in mov insl aaa push mov fnstcw inc test pop jnp mov mov ret (bad) dec dec or inc inc out push inc sbb dec dec and cmp sub add sbb jnp cmp inc inc das mov addl dec fmulp int icebp mov inc clc fisttpl push push push adc int shrl lds aad add push mov into fdivrs jg mov push mov pop xor pop ja jbe (bad) shll push xchg mov ret xor mov std xor cmc push xor cmpsl ja dec xor sub push and mov dec pop sbb stos mov and inc and xor mov dec movl pop xchg scas sbb lea scas jl xchg sbb lret mov adc stos adcl push nop mov push cmp xchg rcll dec push adc and stos xchg test lds jmp aas int3 pusha dec xor scas sbb and pushf imul (bad) je mov xor in cmc mov ljmp or push jb aas out push push data16 pop movsb adc or push xorl mov xchg sbb mov mov xor or pop popa xor lea aam mov add sbb add pushf je jb insl jnp add jbe js jge scas imul add sahf jns add sub or inc inc fs push ds sub push and and addr16 push jle xor in nop sub mov xchg into sub loopne out fsubrs add daa imul cmp jb mov or fmuls call mov jg neg shl aam push add in add push icebp add repnz inc push cmp hlt cmc inc push cmp div clc push cmp nop stc cli sti cld cmp nop inc std (bad) jmp sub add xchg mov push sbb hlt (bad) outsb sub les div icebp cmp mov (bad) mov add mov pop pop pop push rolb sub rorl jmp adcb pop lods and push (bad) pop inc ja mov add push mov rolb (bad) push jp ds out adc mov or pop in or pop ret add test aad paddusw jecxz shl div out outsl dec push or adc cwtl or jbe jno js and push mov mov adc inc out or pop clc fstpt pop shr (bad) xrelease pop pop pop mov inc jmp popa and mov (bad) push add jl insb push into push sbb les test xchg jb adc sbb dec jl jne lods stos push cmpb jne push daa xchg add xchg rclb or sbb push sbb jns mov lea insl dec sti or ja inc ffreep jmp ja jmp dec js pop mov adc je lods jmp out loop push push push inc jo mov dec aas cs scas sbb (bad) aaa xor pop add xchg test push sahf jl push mov jg pop xchg cmp aas aaa mov sub xchg xor rclb push lret lahf xor ret inc xor xchg push xor xchg (bad) cmp xorps push shl cmp orb ss sbb push lret push sahf (bad) sbb fcmovnb test lret ret sahf sub and xchg loop (bad) add pop jl fbld inc push jge mov jl lea push push stos sbb in add pop imul les or sub pop ret adc push icebp int cmp ljmp dec xor push sbb sbb dec add cmp mov cmpw xor sbb inc aam iret mov mov mov test push movsb mov or pop or sarl add add idivb cmp add inc and lods dec and push mov or push test push adc push push and pop jl mov dec or in push mov das push sbb sti cmp jl push cmp jne int3 dec adc pop and test imul fimul outsb pop xchg mov and inc mov adc mov mov scas lds (bad) or mov or scas add jg pop xor jmp loop mov push cmp jb push mov sarl inc xchg mov dec scas add add pop mov push pop stos fsubs sub fnop int3 add and in push cmp cmp mov ffree xor push sub pop or add movsl mov insl sub mov adcl jge mov xorl add add inc clc das or (bad) jb jne mov sbb adc add mov scas leave leave repnz mov jne sub jl cmp jbe lods lret mov jns test fnsave mov push cmovns insb nop nop mov pop pop sbb loop adc jb add arpl cli ds mov adc push and xchg dec pop xor sbb mov in adc into cli mov pop pop mov (bad) push lock add push push clc xlat add mov lock push jb mov in in fcmovb or inc cmp push mov jle insl lds push jl push notl cmp jg xchg and jnp inc mov jl stc sub adc mov mov and push imul add clc int3 je jp inc lea scas imul daa jmp insb lods sub mov aam add add cmc test mov aam test test mov push jmp add (bad) mulb (bad) or adc out add jg xchg std aas push les lods pop mov push je sbb and (bad) xchg dec cld dec sub sbb movsl (bad) repz cmp std xor cmp fsubr sub or iret call mov add fimul xchg call pop adc push dec cli mov nop jge orb das ljmp and push add cmp pusha push mov das das jno fildl clc roll mov arpl jne in jmp push and add dec bound je pop push dec or adc fs imul js mov jne push inc mov mulb ret scas pop and cltd or jmp sbbl and bound cmp adc sub jbe mov nop xchg aaa adc sbb mov jbe jne dec outsl adc jg inc adc push jae adc sbb jo mov mov add loopne in decl jbe mov idivl mov xlat mov add sbb es push mov mov adc lea mov loope mov add inc sbb shl push pushl (bad) jge add jmp imul je cmp add adc std out push pop xorl or fldl or xchg insl fisttpl jmp cmp clts (bad) mov or stc sbb ljmp pop cld sbb rol outsl xor pop add jo xchg adc xor mov jle (bad) lds cmp xchg cmp sbb inc in ret xchg pop pop ret xchg adcb fsubrs adcb sbbb add or adcb adc xchg cmp add xor push dec clc in jle insb pop and pop and xchg mov mov sub movsb cmp and xchg xchg xchg shlb lds sbbb (bad) nop jmp sub mov lods cmp (bad) lods pop push cmp arpl popa mov aaa js xor pop jle loopne dec gs stc jmp inc jmp cmp ja jge cmp fild mov cmp xchg or es fstpt cmp xchg mov dec jp cli inc dec cmpl js cmp push imul stos mov push roll mov iret mov ror test or mov pop xchg mov addr16 out add mov gs pushf pop add enter add mov mov in mov lahf inc sahf and ja sbb popf rorb pop ret add xchg xchg mov xchg repnz loopne add pop xchg outsb je ja adc cli or add cmp mov dec and nop mov xor mov xchg mov loopne jle ds and pop adc pop roll jp std adc sbb sti sarl pop jmp jecxz or mov sub out (bad) subl or jmp fisttp ja or fstl (bad) jg sbb test cs or jp pushf mov sbb or es sarl loope dec cmp and xor notl leave enter (bad) shl das nop push leave push push aaa adc mov push movsb popa enter lret pop pop out cwtl cmp sub inc popf test cmp data16 iret ss mov lcall lar popf push sbb push mov int jno inc add add cwtl test adc push int3 loopne and or or cmp pop mov push xor shlb (bad) sbb mov (bad) jmp jo lods sub test sahf xor popf pop clc inc adc xor popf mov or mov cmp mov jae mov loope xchg or jmp push mov adcl mov lahf int or pop push cltd push jmp mov lock clc popf add ss lahf push push popf (bad) fidivl inc mov sbbw fs xchg les rolb ds scas stc pop repnz push xchg out mov mov loopne outsb insb add push stos shr fs mov mov pop push movsl adc add aam js nop pop add (bad) and test (bad) sbb add push inc mov jmp pop cmp pop sbb icebp (bad) xchg gs scas mov std inc jae lea push jp cmp repz sbb jns sbbb std arpl sbb (bad) cld std inc sub inc xor out add xlat pop jno rorb dec inc push test ljmp out or shr shl dec in lock pop ret mov push dec jg jle cmp mov jo xor inc pop xor inc insl jnp sarl idivb xor sub add mov adc loopne pop jl mov push mov dec je inc push xchg cmp aam jle push inc adc aad jp sbb enter inc mov and jb mov (bad) into or push test lea push dec fistl push cmp add clc ljmp push push dec sub call and mov sub mov or dec adc movl xchg outsl dec sbb je cmp (bad) mov sub sti sti dec add jne imul adc or mov add adc lret loope push cli lret clc sub add leave inc adc jbe rclb mov pop loopne lds jl xchg mov add xor xor xchg adc fisubl push xor inc mov sti jge cwtl cld cltd push and gs lahf test mov dec xor and add push sub jb dec xorl sbb dec or cmp or fsubrs jge jo push xchg mov mov add sbb push cmp mov aaa adc or push les ficompl lea xor push mov and sub insb stos sbb adc flds push insb orl lods test stos (bad) mov insl loope movsb lods lea dec add mov and stos into push inc jne cmp sub or dec repz loopne test repnz mov mov pop xor out ret je jl je (bad) pop add flds jb,pt adc popa jbe lahf pop and sub dec push pop add out (bad) mov add inc sub mov out and iret jmp sub cmp pop (bad) jb mov decl loop clc (bad) mov test cli mov sbb and xor fiaddl rcll cmp dec popf add mov cmp add xor out cmp nop xor adc mov into mov adc sub adc inc mov add inc sub sti decb adc mov ja or pop jne pop sbb pop pop and push insb ficomp adc mov in mov dec mov ljmp mov ret popl in scas dec adc add aaa inc mov sub cmp cli das mov mov and int3 addl jo mov fildl int add push push dec push or decl mov dec mov mov cmp sti fistp cmp jbe cmp mov jnp push mov lret mov xlat lahf xor int cmp add add lahf pop adc mov add (bad) mov enter and adc xor add lcall int push xchg popf daa lahf pop add out push fs mov (bad) lock cmp (bad) and push (bad) push add loop call (bad) jb adc jb cmp jns sbb or and mov call adc push mov jge add pop ret std jne in mov inc sub outsl outsb cmp scas mov lret pop dec push sti je inc shrl or or sub sub pop sub add mov aas rorl pop pop xor (bad) xor fs dec (bad) je jl mov daa fildl test add outsb ljmp dec mov jne cmp pop call sub mov mov ja push add add cmp int3 lea pop mov add int cmp ds inc aaa xchg jbe mov out push insb fcomi sub shlb mov jne dec sub add cmp scas pop jge out sub push add pushf sub repz lea sub js push ret add adc lret and push subl add fnstenv or or jns mov add jecxz sub xchg ja pushl fildl dec sbb dec in sbb jne fstpl or pop pop out iret insl xchg xchg mov mov mov mov jl adc and fnstenv inc (bad) outsb jg mov testl xchg jmp mov nop cmp (bad) or aam mov xchg ljmp add lea (bad) sub add jmp pop outsb subl daa fnstsw (bad) jmp adc xor scas inc sbb cld add inc pop dec add inc add mov popa push dec dec cmp cltd xchg mov xor add mov aaa mov pop sub sub xor sub push add jle jg test into lds pop sub xor jb mov sbb (bad) add sti add jae fidivl hlt push add (bad) dec fmull mov mov je sbb je mov lret push xchg dec push and mov rol sti mov xor jl sub sarl mov je jmp push rol cmpsb pop add push (bad) adc jo xlat rcrb sub mov xor pop ss insl pop movb dec mov ja sbb sti cmp jae scas (bad) inc mov mov xor and push sub mov add xor lea inc xor and ret and lock test mov lret mov xorl cmp and insb mov sub add and fstpt push inc mov clc shr pop jne fcmovb xchg cmp pop decb lea test aas fadd je repnz sub sub adc jne std or push rcll dec fisttp sub mov adc push inc fildl mov mov andb add clc mov js xchg pop adc adc jb out pop (bad) and inc sub inc sub cmp push jo mov loope push scas into xchg rcr mov jbe,pt jecxz shlb je xor mov pop or push push push ds dec or push sbbb push lahf add cmp add lcall inc jne add mov mov pusha pop rclb test push dec jne daa jle dec shll cmp add test testb pop movl sbb sti jne pop fsts cmp fs sbb adc and jmp outsl push pop push sub das leave pop inc push sub ret pop or mov sbb jnp jne mov aaa add add adc add (bad) inc clc or or bound mov jl fistpl in jbe jbe adc outsb adc sub dec stos in je inc sbb test or aad and add cmpb cmp in daa push ja pop ja mov testl mov outsl sarl pop dec sub std mov in push add pop roll enter mov int mov jl mov lods add push mov push push inc xor (bad) rorl sarl xchg mov cmp sub mov fbstp or xor pop mov nop/reserved pop cs jnp inc jge and xor lock dec jns push inc sbb (bad) xchg add or (bad) dec arpl or push test mov insb sbb clc shrb sub and jne dec fistp das jbe or inc push jb mov add lods mov sbb lea cmpsl mov in xor shr sub out pop sub sti test jne add dec jnp add pop add add cmp call movl xor lods mull mov shld and movsl popf xor add pusha mov std cmc xor aad inc cmp jg fimull into push dec mov jmp cmp lcall cmc xor mov jg out or jb mov out cmp mov sti pushl sub mov mov inc inc dec jne dec jbe,pn divps fistpl push mov adc dec push aaa add xchg pop sbb push add nop adcl inc pop jb andl in je jb push pop mov movl adc push icebp int3 (bad) fcoml mov pop pushf orb fisttpl mov fcmovnu jae or add lea (bad) mov sbb push test ficomp pop sub rorl add movsb mov je push pop mulb outsb pop fnsetpm(287 mov sub out xorl add insl sub inc mov xchg inc inc inc mov inc data16 aam sti push aas mov push mov cmpl lea (bad) jbe cmp (bad) movsb xchg cmp pushl cmpl sub mov (bad) pop pop xchg pop gs lods ss jne pusha jmp inc and mov push scas jle and inc scas lret sbb testl enter push aam lods mov push pop pop fsubrs push fistl mov add mov pop mov int3 lret fdivs and imulb cmpsb andl sbb sbb (bad) xor xlat push sub and adc mov jo add (bad) pop mov (bad) lcall call lcall clc lahf pusha mov lea mov insb mov hlt pop add pusha scas (bad) lock leave xchg mov insb std adc dec push sub cmp fistpl or ja mov mov scas neg imul sub scas sub mov pop or insl add and outsl push out cmp cmp lea stos sbb test dec jo and fldenv (bad) xlat sub pop (bad) xor ja push pushf add dec mov sbb imul lcall or or or and add sbb sbb mov inc add fld xchg lds fnstcw int3 add push imul std mov test push scas test inc mov mov jb mov adc shll mov xchg lcall out ja mov rep pop or ljmp out ret push jb gs mov (bad) or mov test jg ret pop pop subb fimul imul jle push sbb imul pop jae mov mov jb push mov add or or push inc je mov ds push sarl mov mov pop jmp xchg pop sti mov push fsubl dec jae shlb pusha inc das inc sub std jne push pop mov jg push push mov lcall scas mov mov in rolb jecxz cld (bad) arpl mov sub mov pop sahf cmp pop dec cmp andl pusha cmc movl ja push inc lcall add je push xor fcompl std inc mov adc xor mov insl mov movl adc cmp fsubrs push dec inc or outsl inc psrlq and clc inc push inc sbb mov (bad) jae pop or pop add ljmp jns add xor inc outsl jno pusha pop pop sub inc fisttp or cmp cs and mov inc arpl mov scas jne (bad) (bad) dec insb mov add enter mov orb test pop daa (bad) mov mov add mov mov ss pop or (bad) testb jne adcl mov pop movsb test imul push push adc dec aaa packsswb in lahf fimul pop or push mov cmpl add jp push and sbbb lret scas pop adc mov add out pop loope mov adc sbb movsb outsl sti inc add cmpb jno fidiv mov adc imul idivb cmpl inc and or or jae js adc adc ljmp add adc sub lret jbe push cld std add pop aad xchg add push clc push dec dec inc in (bad) (bad) push (bad) jo das lret push cmp in (bad) inc clc jmp add pop push jnp clc or cmpsb dec popa push aad inc xchg and das lock adc sbb (bad) mov cmpsl (bad) and push pusha mov and jne and mov mov xor popa mov mov add add fbld mov mov sbb or scas jmp lock loopne add cmpsb fcomp insb insb mov cmp dec pop mov jns dec ffreep mov mov adc les xchg and nop inc and mov je pusha pop je jl test pushf movsb mov fistp ret rolb add cld mov push and sbb jo inc jb fs pop aas adc in adc orl or int3 fsubl add loopne add or adc adc mov shlb pop add mov push test inc push icebp sti pop or xor xor jecxz cmpl or inc fsubrl inc pop loopne or jbe (bad) pop mov or xchg pop rol dec jl movsl push push mov movsb nop imul inc mov inc das add sahf jae sbb pop mov sbb sti jne push divl xor sbb sub je sub popa es decl inc fmuls (bad) jg add xchg cmp or fcomps sub hlt mov sar out ss or mov adc adc stc cmp and (bad) mov in sub pushf add adcb dec fdivrs (bad) aad insl add pop jg mov loopne aad mov mov pop aam and mov or popa je push and test lret ljmp push jno pop je sbb cmp pop sarb fdivs mov cs aad add aam sarb loope gs push push mov rcrl sub mov adc fnstenv test sbb jmp mov cs pop lret icebp cmp sbb pop mov or add out or test adc stos inc loope or icebp mov inc rclb add sub (bad) loopne imul jne (bad) or ja cwtl sub push fistl (bad) jge xchg jecxz call incl fbstp push shr jne (bad) adc ja stc adc les cmp sbb jnp aas fstpt mov xchg add mov sbb addl daa cltd add test mov daa (bad) pop xchg jecxz jmp aaa stos (bad) ficomp ret adc test and or je or (bad) clc pop cmp jne outsl fsubs adc pop mov and std inc or fcoml mov lods ja in jg adc or adc push daa adc jle xchg sub or enter xor mov push or add and pop movdqa add adc and jg add mov push jg outsl inc add push insb jbe data16 jle sbb jg jg fdivrl jo mov lea mov addl add (bad) (bad) push inc mov add adc mov cltd mov sbb lret cmp mov clc xor sub (bad) push lods and pop lods or jne dec into pop loope mov icebp je sub push push push sbb xor clc scas add in mov ja and sub mov add sub mov cmp lock movsb mov jmp jecxz xor cmp push popa in in or inc sbb add mov cmp popa adc xchg lock ss cs lds leave loop ja out andl mov in xor testb lods add movsb and loope push loope push inc inc jge sahf out inc push inc inc inc in sbb dec adc adc pop or cmp mov xor pop adc into inc inc mov mov fmull add dec das push sub jge hlt rep scas jnp jg cs add lock mov push loope ljmp rclb add add test jmp rolb push or xor andl pop jle push shll xor rorb jo xchg cmp inc push clc das or jbe push push mov sbb inc mov cmp jb add push outsb clc mov in cld je outsb push push add (bad) cmp mov loopne pop pop push sbb int adc rcrb sahf cmp or es (bad) and push pop inc adc aam and adc add call push dec sub jg jbe hlt push and adc cmp or pop adc xchg std sbb mov and xchg push cld cmp xchg sub or pop push add xor or mov ficoml sbb lock inc pop enter inc loope scas inc lds dec mov sbb out xchg adc (bad) add jo xchg add fnstsw push sub or dec adc sbb mov into add pushl push lds jmp pop mov loop out sub inc sbb xor dec pop push mov stc aaa dec push mov dec adc insb mov data16 add shrb sbb mov and clc mov add push jmp loopne and imul sti adc fwait gs cmc add push sub push les push dec enter mov xor enter inc dec cmp loope pop cmp inc andl cmp mov jno pop ret push mov test jmp fstl add vmulss cmp lock mov pop pop or jb aas add les les and inc sbb cmp adc loopne clc mov mov push dec push imul or xchg xchg xchg or add js mov or hlt std push adc je or mov xchg inc lea fbld cmp push dec mov or test movsb dec push cmpsl mov inc fucomi push add mov xorl mov xor hlt cld clc push bound or cs push add xchg dec les sbb test pop push cmp loope push (bad) jne cmp jne aam push ljmp cmp push popl mov test jnp aas jns repz pusha dec push scas test repnz mov or ret dec jne or cltd stos cmp mov subl (bad) push mov fistp pusha mov lods sbb or sub cmpsb adc xor cmp sbb daa cs sub jae sub aam dec cmp mov cmp test scas xlat sbb cmp xor add (bad) (bad) push push mov xor movsb scas mov sbb inc ret push fs int push push or sti add rol inc mov in mov push int3 push mov ret or pop ja (bad) add movb or jo out pop cmp xor inc jno seta dec pop js cli rorl jmp add aaa or push add pusha sbbl jle inc das inc sbb pusha sub fildl cmp inc sbbb je mov or jnp push mov rorb jbe jmp adc or push sarl fisubr sbb (bad) xor mov adcb push (bad) mov mov adc mov jae call cmp pop divl push add sbb insl jnp and xor push sbbb add test lock sbb sti pop mov and pop push mov pop adc jno xor sub mov cmp or or jb nop xor and cmp je push int3 jmp pop bnd pop ret mov push loop dec mov mov add mov lahf jnp (bad) mov je sbb sub and ret add sub jl adc in fiadd and add cmp lds gs insb in out or push in inc shr and lahf sbb out ljmp fcoms fcmovb dec add leave push adc test (bad) fcomi ret add loopne loopne fsubrs lods cltd jp lds call aaa jb adc scas mov aaa ret cmp pop mov (bad) sub ret int3 add push add jae xor add clc decb int jnp push fstpt xor iret xor lods out inc or and fwait or xchg xchg call add test add popf mov push icebp (bad) sti fild cld je lea sbb scas lea xor adc xlat inc lock jp adc inc jg adc daa add xchg je xchg xor dec fist cld pop mov cmpl rcrl pop mov inc pop and mov mov imul call sbb aad sub adc cmp jl rcr push aad enter int3 add or fwait ja mov push cmp dec or jmp mov rorl push lret mov or ja inc and bound cmc adc sti ja inc xor rcl mov xor inc pop xor or testl mov fild add cmp je dec jne sub ss les adc sarb or mov shrl pop xchg cmp inc adc mov pop push inc mov loopne xchg lcall cmp mov jne jo lds repz mov jp cld push cmp pushf mov dec inc aas inc pop push jmp xor push orl incl pop sbb and mov push imul inc xchg pop pop aam xchg pop (bad) xor mov cltd cmp (bad) (bad) and test (bad) inc pop jns sarl mov fld movsl inc add or cs add add (bad) (bad) jle push lock ret in out ljmp je mov cmp test inc test fwait dec adc lea and insb jg sub ret or std adc cmp add push in je add or rolb inc aad mov or ljmp jl sbb (bad) push pop pop sbb (bad) push sub (bad) lea lea stos add loopne mov (bad) mov mov inc aam mov adc adc mov inc dec adc incl and push adc cld ja inc sbb add sbb lock mov mov and push test popa sbbl jb adc test (bad) and pop mov mov add cmp ja out jl loop lea jmp mov inc (bad) mov push fcoms fs lods push and push scas add inc je pop sbb xchg push push xorl xor push inc and jbe pusha and add movzwl ljmp decb adc adc add sti ret cmpsb mov jmp movb shr mov push sbbb push sbb sbb lea and dec push pop jns pop mov imul or ljmp cmp sub pop fmulp pop hlt adc mov add push sbb clc mov incl je cmpl ja and push andb xchg mov mov stos cwtl ss sbb stos enter mov jmp inc push movsl cmp (bad) mov rorl add adc sbb xchg pusha fldl adc or pop or or jmp adc and je push xchg or jg push stos divl sahf popa pushf std push mov and mov outsl test icebp movsl sbb mov add mov loope xchg ret aam out push add mov jbe or xor and std shll (bad) jmp inc aas jecxz movl test loop adc sti mov dec mov stos jle xchg ja jnp jae jbe sbb jge push iret dec pop mov test outsl sti add mov mov adc inc imul pop aas loope xor sub dec inc insb xor pop jmp loopne push lods sbb inc cmp jbe mov or (bad) inc inc cmpb (bad) mov loopne movsl or scas mov inc jb aas pushf sbb (bad) xchg movl xchg sub (bad) in lea mov pop faddl out push pop pusha inc inc inc dec push mov and lahf mov ret add negb sbb pushl inc jo (bad) out push mov inc dec jne mov push push mov shrb or mov mov xlat or aaa bound arpl aaa cs pop cld notb loopne sarl dec loopne cli lret fcoml or add pop push sbb cmp push push adc jge and (bad) mov pop inc cmp mov add push (bad) cmp fidivl cld pop xchg movsb dec adc das or andb (bad) push repz ss inc xor jo mov pop fisttp or mov lret mov adc xchg push push inc jmp sbb (bad) jge mov mov jmp jne sbb cmpsl out mov mov mov outsl sbb ret int xor add dec mov cmp xor mov test add mov int3 cmp jecxz mov insb addl mov pop inc cmp enter pop push jae js notl or sub or lcall or outsl and xchg mov mov or mov imul or push (bad) pop (bad) fiadd nop push sub adc or dec (bad) mov jg xlat mov call xchg fadds pop xorl jae mov push pop cmpl (bad) jmp or mov mov or outsl jno jne ja or push call xor cmpsl add mov add cmpl mov pop jg push or movnti add cmp mov test ss insl jg mov scas push (bad) pop mov aaa and imul push clc jo mov lds sbb (bad) repnz push pop loopne xchg mov pop fldenv adc or es sub ds adc add js mov jl stos sub jbe (bad) push jmp pop sbb push (bad) nop and cmp or mov or mov mov movsl jne fcoml cmp call sub mov in adc mov lret jmp jmp mov addb sbb pop adc and pop push dec cmp sub lret jne or xorb jge inc mov das test dec ret pop mov and lret add mov bound or loopne fldl adc cmpsl rclb push aaa adc push adc add rorb mov mov jle push mov pop div pop jb lea mov inc fsubr ret stc clc lods mov cltd push test int3 jge fiaddl and push adc or mov lds add insb hlt push cmp adc add sahf stos adc xor movaps xor enter mov in and jnp sub xchg dec or add sbbb mov icebp cmp push hlt adc lods or movl add shrb mov sub arpl and mov push jo push or push jg sar adc (bad) sub sub jmp or aad sbb push sub pushf adc cmp and imulb (bad) in add stc and fstpt sbb fs fwait adc dec mov pop inc insb sarl enter dec in insb push push outsl aas fnsave sbb inc divb ja loope pop ret adc movl sbb test mov inc call push fdiv rclb ret and sbb or push and in mov in and lock fiaddl cmp sub inc xor inc lcall je dec inc mov sub loopne rcll sbb or (bad) jge (bad) sbb (bad) xchg mov int3 or pop ret add inc pop test adc and (bad) mov int and jb lea imul pop adc jns and sub add pop cmp loop .byte .byte out call add push mov sub fnclex fwait smsw test jne smsw test je cltd xor xor xor mov jmp or or or or add add cmpl push mov jle mov movzbl mov inc test jl mov movsbl (bad) jle adc mov sarb rol loop in in decl ret shr mov mov and daa ljmp pop or mov inc jmp mov sti outsl sti fistpl ja cmp jle push jne push ljmp push call (bad) pop ret push mov sub test jmp (bad) call inc clc or push push js outsb (bad) mov cmpb je lea push adc jne add clc push adc cmp imul mov xorb cmpl jl jle in xchg pop inc add (bad) pushl or jae inc jne cmp add rcrb std fucomi ret movsb cmpl and and adc sbb adc call add neg sbb inc fdivrp fistpll pop xor leave or cmp ja xor mov das adc sub xor and ja (bad) call xor jb ret in scas insl mov movl adc sbb mov das ret cmpl loope mov or pushl sbb inc sub push push mov or lea mov pop or je jge std cmp jae push push jmp gs sub push xchg and jle mov cli sub sahf lock inc push cmp in out fildl test cmp push fnsave mov lea xorl add sub movsb stc call idivb ret imul add add mov xor sub cmpl rorb insb fbstp and add push sub idiv ja mov push pop add incb pushf int3 jno incl incl mov add in sbb mov sub xor mov (bad) jecxz cltd nop or mov test movsb and lcall mov mov iret add lods and mov cmp mov flds cmpl icebp xchg pop jne pushl mov or xchg pop mov push mov xor decb push daa bound pop (bad) cmp sti icebp pop pop leave ret mov fdivr out pop add mov push push mov sub jmp js lcall pop mov imul lea push pushl add out push mov orl dec hlt mov mov or dec pop lret inc sbb mov popa jp out mov lea mov add cli adc sbb lea sbb je shrb movsl fistpll mov and cmp push add repz mov mov adc push add shufps adc mov pop sbb movsl push push mov test cmp fmull mov lcall cmp mov test enter mov jnp or xchg pop mov out dec test mov mov sbb aad jbe leave pusha repnz je jae in ss push adc lods je imul pop rorl hlt xor pop push js mov push inc in jne insb mov sbb popf or shrl pusha dec or jle ficompl fisub jnp fisttpll fildl cmpsl and sub fisubl dec pop jmp lea xchg or ja decl mov cmp jle cmp pop mov inc add insb das mov cmp test je mov adc int3 inc icebp js xchg add cmpl mov (bad) pop aaa xchg mov lret (bad) clc mov adc lock mov push or mov out mov jnp jo imul push jnp fsubrs mov mov add fnop xchg adc sub pop and push add sbb leave (bad) adc insl adc paddw dec adc xchg (bad) rcl add or pop test addr16 sub inc xchg push mov sbb fnstenv and and pushf in lods and and nop and and dec mov adc test movsl add ret inc dec push nop mov mov mov mov (bad) enter cmpsb inc push add sbb inc lret and and and xchg mov fstpl call push jle mov loopne pop decl jne mov cwtl lods (bad) pop test mov lret mov std (bad) adc cld add mov or or jne mov std outsl xchg or adc cmp je popa inc inc cmp jl xchg clc ljmp pop ret add sub mov jmp or pop xchg xchg in ret js sbb leave (bad) sub lock test dec xor adc lcall sbb sbb lret (bad) sbb outsl test in push xor cwtl adc inc or jge mov xor inc add add rcrb lods scas mov loopne push das xor xchg (bad) (bad) icebp pop jbe push xlat jge pop pop jmp lsl push or sub push xor push popa pop decb push mov mov jle push cmpl jne stc sbb pop cmpsb mov test pop sbb subl je mov push pop fiadd adc leave loopne jle push mov fucom mov xor or mov sub mov mov rcll cmp or dec movl icebp jle roll loop sbb pop ret clc mov cltd xchg pop push inc mov mov inc or inc adc push fcoms mov jae,pn das ljmp pop and pop aam cmp and add mov loope push in test mov cmp divb mov xchg mov inc sub clc mov in adc sub iret andl xor or jg loope rolb insb leave sbb add jmp mov data16 pop or mov hlt sbb pusha adc pop mov adc pop xlat inc push repz jmp fs push sbb (bad) sbb cmpsl push iret jmp inc or inc adc pop or stc mov mov add sti cmp push sbb inc or push jbe mov orb jmp xor sbb cltd out xor nopl mov movsb or cltd in arpl sub push fs xchg or mov aad in scas addl rcl enter or pop stc pop aam int dec add repz (bad) jne lock lods pusha js push push push mov adc or add stos insl mov sub and cmp push xchg sbb mov push jle cmc lret jmp mov xchg out jne and pop mov roll in inc pop sub dec lcall mov mov cmp jne das or push inc ret aaa aad jl jmp imul mov sbb mov jne adc clc mov divb sbb ficomp in inc int bnd es mov test sbb xor jns in inc scas inc cmp in and add add lret push sbb add ljmp xchg (bad) in (bad) lock movsb and push je add jbe push add test sti repz data16 addb mov pusha push in add outsl pop mov call mov pop push cltd pop ds mov xchg dec test and lds aam test adc ja scas push adc adc xlat push mov (bad) (bad) imul adc push ja movsb (bad) jnp movsl pusha mov push popa mov pop cmp ds add dec pusha dec rolb sbb int3 pop std jmp inc jnp add jne inc push and jle push fwait in pushf xor loopne je insb fadds dec xchg add mov push or jecxz push add push push test inc clc push cmp int3 fidivl mov insb fnstenv or aaa xchg sbb cmp ror mov fisttpll push push cmp mov in jmp mov bnd (bad) jae push in pop inc add xlat repz xor shrl xchg in sub test pusha or pavgw sbb xchg or std inc js pop cld sub sbb adc ret and adc aaa ss sbb sub mov inc (bad) jecxz pop lods sub adc icebp xchg scas pusha aaa rcrb xor outsl mov xor inc loopne xor xor pop mov shrb sbb add notl push mov push adc scas cmp xor pop ret mov jmp pop popf mov push xchg push pop pop std outsl ud2 adc jle jmp pop pop mov subb and test movsb inc jmp or mov cwtl mov (bad) push push insb fisubr and jne sub mov sarl repz push jl imulb sub xor test fcmovnbe pop gs pop pop stos in or cmp fdivrs jge mov lea dec or roll in jl adc sub (bad) out jmp mov pop (bad) loope or ret daa or mov push cmp sbb test mov sbb mov dec cwtl inc test fcomi mov xorb push xor js outsl xchg pop pop je adc aas gs loopne aam sub pop push cld test jle jae cld pop mov aaa inc jmp or or dec aaa add inc cmp fcoms jmp mov int3 rclb nop sbb (bad) xchg xor mov flds jl fst clc mov xchg add pop clc add cmp dec push mov push int3 cltd cmove add hlt addr16 mov lcall ret cmp scas mov insl add imul sti pop sbb push pop lea test or test (bad) sub sbb loopne adcl orl jmp scas and mov sbb adc cmp pop mov lret rol lock push mov (bad) push mov dec fldenv (bad) leave jle cmp ja add dec cmpsl xchg outsb and sar and mov mov jle mov add push jecxz out and aaa frstor outsl pusha mov pop adc cmp stos les pop push (bad) outsl sahf jo shl xor lods sti sti out sahf sub imul add lea add mov mov arpl push jo inc or je or add jl or add mov js sbb jg add popa adc adc mov add xchg fidivr adc sub and sbbl mov lcall xchg and jge push xchg mov sbb xchg sbb sbb fucomp sbb add cltd out inc push jge jmp push fwait adc push fwait dec pop out ss jne pop popf sub fldln2 jne cwtl xor push push fsubrs xor mov cmp add adc mov ficom es lock cmp mov dec mov js cltd pop mov rclb and cli push adc ret test xor nop clc push inc push out inc mov add cmp scas (bad) add pop hlt pop mov arpl dec cwtl add dec add leave cmp add shrl add sbb daa out aad sahf loopne or bound jl hlt cli jbe mov outsb in (bad) data16 roll pop jne repnz mov je push push xchg sub outsl mov (bad) mov popa jl imul shrb adc or imul daa xor sbb adc fdivrs mov aaa sub push xlat pop js fmulp mov ficompl or leave xchg loopne inc add mov lahf scas fstl mov ljmp pop orl fisub inc or sbb mov cltd (bad) fildll iret push movl jp lods inc loop add sbb inc xchg imul (bad) or cmp xor jmp adc pop pop sub je push push or add divb je push ds je dec je add mov jne mov pop jmp or jmp jne add or loope or push sbb or in test xchg fst pushw sbb jne or outsl xchg xor out or pop andl cld inc adc sbb shlb aaa or test mov push mov jbe sbb insl mov mov adc repz add fimull out jl pop sub lcall je dec push cmp es push pop out mov sbb jne push repz sbb fdivs push (bad) faddl pusha les xchg sbb loop (bad) pop enter ljmp pop sbb mov push je (bad) jle rcrl enter add inc lcall adc loope xor push lea sub lods lret ret xchg adc sub dec push rcll mov jnp jl int test clc dec les cmpl cmpsb and sub xor cmpsl xor std loopne dec add add cmp not add push or imul lea xor dec jns push push push mov mov rol insl dec push mov mov mov dec xor and xchg pop pop sub sbb and lea jmp dec dec dec roll es cmp or and sbb pusha daa mov pop lods pusha add push pop xchg sbb push inc dec js push push push cmp or or adc arpl lahf fs sub jno pop les (bad) and sub sbb std andl leave sbb and add add test pop call sub push cmp orl ja push dec aas pop xorl adc sbb das xor insl stc add rolb lods jne fadds inc or loopne pop imul sbb call bndstx inc push or insl dec mov sbb xchg adcb nop inc cmp test add mov fcmovnb push sbb fnstsw push push sti xor cmp jo push add or dec jo push fisttpll movb and mov test adc (bad) cmp and pusha sbb leave and push clc mov loopne in sbb stos xor fmuls iret clc popa push inc test (bad) adc pop sub and enter scas lock and mov icebp (bad) sub stos add jne push mov mov xchg scas xor or cmp cld lret mov and xor and sbb fcomps cmp loopne sbb test add clc jecxz fcmove or repz loopne mov stos ret or stos mov std cmp je push outsb push pushf sbbb pusha sti jmp and mov sti push mov dec jo inc push loope inc sub add outsb inc in call ljmp xchg test sub push push out insb and daa push out out push fsub in pop push xchg or push pop cmp or xor or xchg dec sub mov mov mov in mov sarb mov jo or xchg mov lods xchg loopne mov mov test cld lods push add adc sti lcall push cmp mov inc mov sbb mov push cmp sbb bound ds jmp jp add or push mov in sbb mov ret mov mov je cmp in test inc push push push ss add mov loop loop and push jae fadd pop shrb sbb ud2 pop mov call std fsubs mov xor pop push mov or or mov adc mov imul or lods cmp into and or and decb or cli lods mov mov out jmp aad and jl shrb subb or lock cs sbb in outsb mov icebp mov mov jo inc cmc inc jbe or in inc and sbb or sbb mov mov jno add adc mov cmp (bad) pushf inc jns in dec cs rolb rcl (bad) pop rcl pop aad adc cmp mov jg and mov jae movsb cmp adc inc mov sahf and dec dec in or push in je add or mov in sub mov rcrb fcoms sbb adc add cmp sbb add lahf push pop mov mov push push mov (bad) sbb and or push mov adc incb les xchg lea push push cli inc lods inc aaa adc xor mov sub push mov push lock dec pop cmp add loopne sbb pop frstor test es mov ret push mov push out pushl mov out push fldcw mov stos xchg and rclb dec pop mov inc push jg add inc lods sub and in xchg scas enter mov mov call movl inc adc and repnz or enter in cmp or sbb bound jle and push mov cli mov out jo or mov add pop adc lret shrb or inc scas mov add fisub mov adc jo test push lock mov sbbl lock inc add cmpl je mov les repnz sbb mov cmpsb in je xor out popa outsl insl add add adc push or clc xchg pop ror or dec mov or add xchg js lret push jmp sub outsb dec mov test push cltd and add divl pop or shl stos or jae loop mov enter push jne ret or jl (bad) cmc fisubr inc adc ret add jmp mov xchg je jo ss and add icebp mov sti addl xchg icebp sbb aaa rorb or clc sub clc jl (bad) adc jge push repnz xor dec cmc add mov push movsl mov add pop ja inc cmpl mov pop sub sub (bad) pop jmp xor mov push jmp fstpt pushl es add mov add add pop ja dec mov add add add add add sub sub add test cmp jnp push mov cmpsb sub loopne insb xchg push mov add stos push mov push xor or push pushf push mov loopne and (bad) mov jl mov add loop sarl jle add pop add push mov adc push sub inc or outsl into or iret adc jge sti or inc daa or cmp sub int fistl cmp sbb inc cmp arpl mov sbb or stc imul out add push cmp sbb adc rolb (bad) stc mov inc insb js or inc pop mov xlat mov lea or movsl and pop cld insb in cld add andl or mov fiadd sub adc test inc call mov mov or bound xor adc push cmpsb mov aas jne inc and aaa dec push (bad) pop adc ficompl bound mov data16 sub movb mov mov aam subb les inc inc sub ret outsb fistp je cmpb cmp or xlat mov add adc nop mov sar pushl into jmp jge js mov sub pop pop add lret je fist jbe mov cmp je lret inc sub or xor push adc cwtl aaa ljmp das je xchg (bad) cmp jne out outsb mov jnp outsl or test fs inc xchg pop or cmpb ja inc or push pop lds or insl jo frstor sub sahf lods fistl aad bound mov aad jne mov imul jle jle or xor jbe mov push outsb add cltd mov insb movb movb out sub jmp mov mov jge mov ret mov aas jb push add sub and lret adc dec add ret ficompl movsl adc mov lret gs pusha stos pop pushf sbb inc inc add pop mov push sbb cmp sub and push mov push pop push das adc call mov inc outsb mov sbb mov bound shr sbbb push xor sub cmp in fnstenv sbb clc add popa rorl and adc ja pop notl and decl jb cmp jae nop or cmpb insb cmpsl lret or pop mov push xchg cmp sub sub outsl mov out jne movl and roll das fisttpll cmp addb add inc jae fdivrs jne sbb jne (bad) sub mov out xlat sbb bound adc mov jp add aas cs mov mov je sub adc push andl fadd inc mov add xchg push mov mov xlat jnp inc loopne pop adc pop or fstps jbe jnp xchg or sbb or roll cmp add jbe dec xchg jae adc mov and dec inc sub push lock jmp inc mov gs xor loope in or les or mov add jp or or in out adc sub in adc or das jecxz shr mov in xor mov mov mov je fistl roll adc loop or xlat insb or mov xchg push xchg scas frstor adc add sbb sbb mov movlps cmp adc jp fwait pop lock add add adc in push cmp sub add mov jmp adc jmp inc jb mov jge sub push (bad) (bad) hlt or add or xor push push pavgb fistpl loopne sbb aas (bad) clc push stos hlt push push push jl push mov sub add out ja cmp sub add push push je pop cmp mov and mov pop pop mov adc and jo adc mov dec insb xor movsb push push add vphaddudq repnz cmp jne je add xchg sbb add adc daa mov mov jmp pop (bad) insl sbb stos xchg clc sbb xor xchg push clc pop call sub xor fdivs test out ja bound rorl xchg inc (bad) dec lds dec xor dec pusha popa add sbb dec or xchg jge adc js xorl and xor nop cwtl rol cmp loop adc in push and (bad) mov mov push in (bad) cmp mov mov cmp fcoms lock movsl mov xchg jb pop or faddl dec xchg les shrl sub daa aad xlat push adc mov push dec in mov movsl clc or mov fildl test or xlat pop (bad) aad adc jg push mov hlt jmp cmp hlt cmp pop je mov mov and std mov ret mov cli add add mov sub dec aaa adc and sahf mov sub sbbb adc cld jmp and fstl xor (bad) push in sbb repnz push push icebp xor sbb pop mov dec push nop cmp out insl jge out or sahf fs mov lcall push jmp xchg mov sbbl mov mov (bad) add xor jp mov pop fisub push insb push (bad) push xorl push pop lods push hlt mov sub adc mov pop test (bad) mov outsb or fs xor cmp mov mov pop (bad) mov cmp ljmp inc lea or out stos add jno pop setne leave ret nop push jb cld mov or es and js popa fsub sbb aad xchg fistpl push add or leave enter or enter cmp fmuls in adc add outsb jnp ret mov jg or fstps sbb or addl or sbb in cmp jns mov fcoml and sahf and negl xchg cli lods stos xchg inc fdivs sbb mov jnp jmp or adc inc mov icebp ret (bad) and push mov adc dec xor dec out (bad) mov cmp push or fistpl or add xor jle leave ss jne je xor mov nop addl jmp orl or mov mov jle pop mov cli add pop int pop adc mov sbb andb add fistl and gs jo movsb test ss rcrb xor fs add mov add sbb inc loope jne and add add out pushf mov push or inc push xor mov push xor push jb pop push adc andb mulb dec insl sub cli out mov ja pushl pop and mov mov aad xchg adc pop call dec mov sub sbb mov pop movzbl rorb mov shl or mov shr repnz adc rorl mov push or add psubw push and adc mov adcl stos mov cld jmp add add mov movsl or adc inc pop std test mov pop movsb sub (bad) int xchg jmp test loopne ret pop add lcall out and cli pusha cmpsl shll jle test mov xchg jecxz inc mov cwtl inc dec adc js aas mov inc mov inc pop dec push lret sub insl (bad) xor and mov daa arpl add mov sbb ret je mov cmp scas jno or shr or cmp jle jl call ret jle adc push jne mov dec add add jmp xor (bad) (bad) stc add jo adc add inc lock fadd sti add jg xor mov pop test mov mov jae add leave add sbb add dec push test das ret test push popa sbb jne insb (bad) xor popl scas fs into or adc and or add call sbb mov das jo jbe add je pop or jb addb push push push mov push sbb je adc mov push push test inc jnp movsb and sub (bad) cs fild jle ret jbe loopne in js out fs or mov rolb mov (bad) mov jbe push cs pop fs gs inc xor (bad) adc and es jl push push sbb stc frstor adc scas (bad) mov adc pop add lret dec mov (bad) movsb mov sub inc call and mov ltr xor adc inc lock inc js js xor (bad) mov push scas cs adc or test inc (bad) pop in je push pop mov xor cmp add test clc adc or sub fsubl add push push push (bad) ja pop inc mov adc cmp stos add dec cmp xor popa dec js jecxz push pop jmp pop add and sbb pop inc (bad) inc cmp xchg je ljmp pop shll leave mull cwtl adc pop test cs inc adc mov mov mov sub test ljmp orl notb push jb lea push or and mov pop or incb jmp adc add mulb pop cltd sub push jo fstps mov add push adc and sbb pop inc mov dec adc jecxz dec pop or ret ss popa aas enter loop add cmp add pop ret (bad) push dec fcoms (bad) je ret enter and in add inc dec mov int3 add or popa je mov fldl clc mov cmp lds push add jnp or and push lret test inc adc push movsl add xchg pop inc add and (bad) dec sbb add mov mov and fbld (bad) je push push inc mov nop adc sbb dec inc xor out in sbb in adc stos sbb or add push pop mov inc mov sbb popa adc xor enter add xor pop inc add mov adc add mov test dec sbb mov mov push fsts sbb enter pop je shll in jle enter mov and dec std test fsubrl xchg push inc sub adc pop sbb sbb or cltd mov add xchg mov push dec out das add sub pop mov push xchg cmp cs shlb mov mov jne or pcmpeqb sub sub jo add ljmp sbb sbb lods bound sub pop inc mov dec cld mov (bad) (bad) xchg inc bound test mov (bad) fprem1 sbb or add push push jbe xchg nop adc loopne mov mulb xchg sbb pop push push aam xor insb mov or inc add xlat jg xor popf movsl inc push xchg sbb shll pop in inc inc push sub push cs bound adc inc outsl pusha mov (bad) jo mov arpl add add inc clc xchg or push popa fnsave loopne push inc jno pop cmp push push or test sbb lods add jnp gs xor dec xor mov fwait xchg or add jge or (bad) push push sub fs pop mov or add pop push xchg pop sub add mov mov add inc cmp mov cmp (bad) out pop push push push cmpsb xor adc nop xor gs push pop mov ds add add pop inc pop inc fisttpll add jne push sub or xlat jno,pt and pop adc test cmp add ds mov (bad) mov push mov fcoms ficomp inc ret jl and sub fbstp jge add add push inc jmp push add dec jmp inc shrb add push or fcmovb push fsubr lret xchg jae mov or and and mov (bad) lahf xchg cmp icebp enter sbb cli add lock loopne decl push clc push mov add cmp push sbb sbb sub inc lcall fs pop jmp push insb add outsl insb mov rcr jle adc sub or popa bound mov enter scas cmp fstps mov enter fstpl or mov in push add push push or pop adc adc jmp push xor test push mov mov popw add or mov sarb rolb pop mov cs add or adc sbb mov and jae sbb adc or xor pop insl rcl push xchg push mov out ss aaa call and push xor adc sub shll (bad) (bad) daa xchg or pop clc cmp mov mov jb das (bad) subl lock lea subb pop add jle adc or dec mov xorb inc push sbb incb add or les out aaa mov and sarb mov es scas nop push push leave rolb push xor adc daa mov bound jmp lock xchg cmp imul lret and push fidiv fcmovnb ss ja,pn in push add (bad) stos test jl and inc loopne popa adc rclb push int3 jmp test add add jbe dec xchg push dec mov push adc popf loop sti (bad) popa or or hlt pop push lea fst mov dec nop adc je jo mov mov (bad) bnd lea mov mov adc adc je push dec jl lds fcoml add cmp mov (bad) jg aaa push mov (bad) mov and nop add (bad) mov ret mov cmp je push mov add pop (bad) fildll mov ficomp notb out mov mov and inc pusha mov mov scas pop xchg loope je inc sbb add or cld je cmp jne push movsl outsb mov push mov mov or add (bad) cmp popa jmp sbb sub cmp lret sbb push aad fimull (bad) lahf cmp mov sub dec jle cmp shrb outsl pop and orb sub jle fdivrs lahf push jg sbb sub (bad) and loope mov cld bound jg push adc mov jge mov fld inc or mov stc test push pop mov fildll mov push shrl neg sbb push not and jge arpl popa or pop fwait xor cmp lods outsb cmpsb sarb cvttps2pi test fld push sbb or out adc fwait aas push mov adc pop cmp fstl mov push push adcl push pop sub mov aam mov add lods adc ja cmp std inc add sub xchg ret dec mov nop push cli (bad) ret sbb xchg push nop cmc sub (bad) ss mov xlat inc mov add sub lock mov add loope inc sbbb push jo sbb or pop fdivrl mov push adc jmp in outsb outsb jbe and repz lahf insl push ds add mov mov mov inc jbe pop sbb in jno adc adc std decl cs add loopne add div test je movl push xchg rcr pop xor test xor pop sub mov mov sbb popa mov popa lods movsb (bad) fisttpll idivb std jne mov add xor xchg and dec fcoml jae inc (bad) call push cmp popa pop rorl or fmuls or pop int3 popf lret jecxz arpl in pop jecxz mov loope pop or mul jp or aaa orl push cmp or fistpll loop add mov or or je xor fstpl sti xor imul sbb mov mov inc rol mov in loopne pop sahf adc loope fstl add push dec inc xor or xchg sbb pop adc cmp add or leave push rclb sub mov push sbb xor nop xor push mov sub or and bound ss pop and ljmp mov or sbb push pusha movsb into add (bad) clc xor jmp dec add and xor mov in fdivr arpl xchg adc jl imul bswap push mov scas js pop cli movsl or add movsl mov fiaddl rep push fisubr je sub cli mov jno repnz pop adc mov fsts or jno pop sub push fcomi pop sbb ss jne clc pusha test fs das scas pusha sti movsl idivl sar ret jae fdivs cmp (bad) ja mov clc ds push or les in repnz mov adc dec fs loope insb sub push push lret mov sbb rclb pop fiadd push insb jl push xor cmp xchg shrb shll in push mov fs and or xchg out (bad) gs adc and mov shrl (bad) arpl adc popa leave dec inc sarl push push push lea dec jbe xchg addr16 dec clc addr16 enter out cmp xchg ret out mov outsb pusha push push xchg cli xor das xchg call dec stc and adc leave or inc pop mov pop and cmp mov sbb xchg and inc (bad) push or mov adc cmovle xchg adc fisttpll popa enter sarb jmp and mov cli or (bad) jb cmp pushl jnp mov mov lea or jae out out (bad) lods es inc push sub sub mov inc mov dec cmp (bad) out mov adc or sub mov cmp jb adc (bad) add xor cmc pop push les fs lcall stos push dec inc inc imul out push cmp dec jmp in mov jb pop xchg inc mov mov sub mov xor adc btc adc mov inc add out fnsave inc std test stos lcall cmp adc cmp push sub mov mov mov xor out cld sbb lret mov or sbb sub or fxch (bad) sub mov jle pop xchg dec nop push psllw cwtl or daa call sub ret mov jge mov clc or mov jecxz pop dec push mov xor pop insb mov fadd jle or and push push inc sub jae es dec cmp ret mov xor adc push sbb ja xchg add cmpb insl sbb xor pop mov sbbl dec notb pushf lock xchg insl mov dec inc sub jmp mov (bad) push inc push and jmp sub push xor inc sub cmp mov imul or and cmp mov adc mov pop xor ret andb mov add push lcall mov js dec lea pop enter lock cmp sar mov sbb ret inc aaa or (bad) mov xchg push shl ds dec inc (bad) pop xchg add (bad) jo ss dec inc push inc add dec jecxz mov jne pop pop sub enter lret inc jp push (bad) sbb mov mov dec dec adc outsb push mov pusha test xchg push mov or xchg data16 pop adc leave aad add adc pop insb or cmp (bad) std mov xchg mov xor xor mov mov sti lcall ja addl nop inc lcall repnz cli xchg sub out (bad) ficoml dec and ficom scas movsl fwait cmc loopne sahf loope push subb push jns mov pop adc xchg imul jno cmpsb cs push mov mov outsl or mov dec ret lods xlat cs mov inc add rorl (bad) add sbb sbb push sub lea jmp adc push nop xchg test ljmp insb cltd mov jbe add or add cmp and int sub inc sub or (bad) pop inc sbb mov fidiv add or adc jne cmp nop ret or xor in inc push pop push or in jb mov mov in xchg sub fcmovnb cmp jle cmp (bad) jbe ljmp or fcom or fistl inc mov mov xor add lock mov dec outsl pop lock jmp sbb insb test cmpsb jno lcall mov lret and ja add pop jmp xor mov fs movsl std test mov pop push inc pop mov je mov fmuls js loop jae mov pop pusha sbb and lahf sbb aad scas cwtl subb loop cmp sub out (bad) in fnstenv xchg std out out arpl jo sahf pushf lea lcall mov or push sbb adc leave sbb mov insb mov fs sti fistpl (bad) fsubs mov enter stos cltd sar or (bad) stos loopne pop cwtl xor test and cwtl cmp sbb bound jne nopl in (bad) shll add bound mov sub ret stos jo push sbb cmp push cltd sbb inc (bad) mov mov lock mov add inc add leave inc enter adc xor xchg xchg adc lahf (bad) jne adc push inc dec mov push pusha pop push inc dec out mov pop ret inc dec sbb data16 je dec shld adc sbb add cwtl popf sbb (bad) jbe mov xchg insb adc inc fidivrl or jge sahf loop fiadd adc shrb pop and add lcall sub pop aam dec mov orb mov fistl stc or push aad or sarb outsb push insl out (bad) fdivrs insb sub movl mov jae cmc std mov or add lcall inc xor adcb std sbb adc push arpl adc subb stc jnp faddp into sub push push sbb mov cmp jmp lcall sub inc test insb stos jo sub into mov sub push les or xchg out bound sub cmp rcll nop inc das ret jp adc mov ficom mov inc mov push lods and dec out mov ljmp jo adc xlat fdivrl pop push addl inc or pop mov (bad) je ja jae jg js into std addl cmovnp xchg aad xlat jne lock lds out or inc xor and jmp aaa mov xor add outsl sbb fildll xchg arpl add inc int pop shr arpl sti add out sub aas lret popa out (bad) sub xchg or xor cmp cld xchg mov outsb xlat xor sahf cmp or push or test sub mov add (bad) outsb push inc pop adc ljmp in xchg pop icebp and (bad) cli je pop negl mov dec repz daa popa mov push cld jb mov mov mov push ljmp add cmp divl mov int3 dec aaa sti add sub mov add sbb hlt sub jge xchg xchg test inc cmp jne (bad) ss mov bound imul dec push mov inc stos jg xchg xor loope push dec pop push push push mov and jae xchg (bad) mov mov mov lret insl ret push movsb jne push fs jbe fwait lock (bad) repnz cs xchg adc int3 mov sub pushf push and xor pusha push cmp loope pop imull jns inc popf jb pop adc fstpl mov dec sbb or sub lock mov dec xchg inc push sub add clc mov xchg push jae mov add lahf dec popa mov or faddl insl movsb push shlb movsl mov insl mov cmc ja add loopne cmp inc adc push into pop fistl sbb add inc cmp subl or dec hlt sbb (bad) in push movl enter test test push (bad) add xchg (bad) jmp mov (bad) shll mov or mov mov out xor sub (bad) or mov mov dec or sbb inc cwtl sub clc mov mov jb xor cmp test fnstenv xor xor mov or push lea jmp sub inc adc or push movl test nop adc cmc pushf or imul call inc popa shrb clc sbb orl sbb jae divb (bad) adc sbb sub incb sub lds jb mov clc mov aad fsubrl inc inc jbe mov lahf xor or sub mov mov mov mov cmp and sbb ja mov dec bnd into cs and or rorb jb lods (bad) jae sahf adc inc jb,pt fidivr jl mov rorl xlat cmp adc lret cltd pop mov and mov popa lea inc std and pop aam add adc ret shrl mov cld xchg js outsb add dec (bad) cld ja and (bad) sbb lcall and (bad) jne pop ss fwait and push inc lea push mov jl sub clc sbb mov push add push sbb adc inc or inc push out nop in sbb jns or xchg hlt push xchg sub in cs mov jno test mov rolb and xor mov xor sub mov dec pop je adc push roll je lock push shrl loopne push les adc cltd jo or and aad pop jns jp sbb fsubrs push mov add iret mov mov mov push hlt dec push push dec loopne add pop mov mov add ret ds data16 inc es mov inc push push cmp sbb lea xor (bad) fcoml dec dec mov xlat push xchg cmp ljmp dec leave xor imul add in mov insl aaa push mov fnstcw inc test pop jnp mov mov ret (bad) dec dec or inc inc out push inc sbb dec dec and cmp sub add sbb jnp cmp inc inc das mov addl dec fmulp int icebp mov inc clc fisttpl push push push adc int shrl lds aad add push mov into fdivrs jg mov push mov pop xor pop ja jbe (bad) shll push xchg mov ret xor mov std xor cmc push xor cmpsl ja dec xor sub push and mov dec pop sbb stos mov and inc and xor mov dec movl pop xchg scas sbb lea scas jl xchg sbb lret mov adc stos adcl push nop mov push cmp xchg rcll dec push adc and stos xchg test lds jmp aas int3 pusha dec xor scas sbb and pushf imul (bad) je mov xor in cmc mov ljmp or push jb aas out push push data16 pop movsb adc or push xorl mov xchg sbb mov mov xor or pop popa xor lea aam mov add sbb add pushf je jb insl jnp add jbe js jge scas imul add sahf jns add sub or inc inc fs push ds sub push and and addr16 push jle xor in nop sub mov xchg into sub loopne out fsubrs add daa imul cmp jb mov or fmuls call mov jg neg shl aam push add in add push icebp add repnz inc push cmp hlt cmc inc push cmp div clc push cmp nop stc cli sti cld cmp nop inc std (bad) jmp sub add xchg mov push sbb hlt (bad) outsb sub les div icebp cmp mov (bad) mov add mov pop pop pop push rolb sub rorl jmp adcb pop lods and push (bad) pop inc ja mov add push mov rolb (bad) push jp ds out adc mov or pop in or pop ret add test aad paddusw jecxz shl div out outsl dec push or adc cwtl or jbe jno js and push mov mov adc inc out or pop clc fstpt pop shr (bad) xrelease pop pop pop mov inc jmp popa and mov (bad) push add jl insb push into push sbb les test xchg jb adc sbb dec jl jne lods stos push cmpb jne push daa xchg add xchg rclb or sbb push sbb jns mov lea insl dec sti or ja inc ffreep jmp ja jmp dec js pop mov adc je lods jmp out loop push push push inc jo mov dec aas cs scas sbb (bad) aaa xor pop add xchg test push sahf jl push mov jg pop xchg cmp aas aaa mov sub xchg xor rclb push lret lahf xor ret inc xor xchg push xor xchg (bad) cmp xorps push shl cmp orb ss sbb push lret push sahf (bad) sbb fcmovnb test lret ret sahf sub and xchg loop (bad) add pop jl fbld inc push jge mov jl lea push push stos sbb in add pop imul les or sub pop ret adc push icebp int cmp ljmp dec xor push sbb sbb dec add cmp mov cmpw xor sbb inc aam iret mov mov mov test push movsb mov or pop or sarl add add idivb cmp add inc and lods dec and push mov or push test push adc push push and pop jl mov dec or in push mov das push sbb sti cmp jl push cmp jne int3 dec adc pop and test imul fimul outsb pop xchg mov and inc mov adc mov mov scas lds (bad) or mov or scas add jg pop xor jmp loop mov push cmp jb push mov sarl inc xchg mov dec scas add add pop mov push pop stos fsubs sub fnop int3 add and in push cmp cmp mov ffree xor push sub pop or add movsl mov insl sub mov adcl jge mov xorl add add inc clc das or (bad) jb jne mov sbb adc add mov scas leave leave repnz mov jne sub jl cmp jbe lods lret mov jns test fnsave mov push cmovns insb nop nop mov pop pop sbb loop adc jb add arpl cli ds mov adc push and xchg dec pop xor sbb mov in adc into cli mov pop pop mov (bad) push lock add push push clc xlat add mov lock push jb mov in in fcmovb or inc cmp push mov jle insl lds push jl push notl cmp jg xchg and jnp inc mov jl stc sub adc mov mov and push imul add clc int3 je jp inc lea scas imul daa jmp insb lods sub mov aam add add cmc test mov aam test test mov push jmp add (bad) mulb (bad) or adc out add jg xchg std aas push les lods pop mov push je sbb and (bad) xchg dec cld dec sub sbb movsl (bad) repz cmp std xor cmp fsubr sub or iret call mov add fimul xchg call pop adc push dec cli mov nop jge orb das ljmp and push add cmp pusha push mov das das jno fildl clc roll mov arpl jne in jmp push and add dec bound je pop push dec or adc fs imul js mov jne push inc mov mulb ret scas pop and cltd or jmp sbbl and bound cmp adc sub jbe mov nop xchg aaa adc sbb mov jbe jne dec outsl adc jg inc adc push jae adc sbb jo mov mov add loopne in decl jbe mov idivl mov xlat mov add sbb es push mov mov adc lea mov loope mov add inc sbb shl push pushl (bad) jge add jmp imul je cmp add adc std out push pop xorl or fldl or xchg insl fisttpl jmp cmp clts (bad) mov or stc sbb ljmp pop cld sbb rol outsl xor pop add jo xchg adc xor mov jle (bad) lds cmp xchg cmp sbb inc in ret xchg pop pop ret xchg adcb fsubrs adcb sbbb add or adcb adc xchg cmp add xor push dec clc in jle insb pop and pop and xchg mov mov sub movsb cmp and xchg xchg xchg shlb lds sbbb (bad) nop jmp sub mov lods cmp (bad) lods pop push cmp arpl popa mov aaa js xor pop jle loopne dec gs stc jmp inc jmp cmp ja jge cmp fild mov cmp xchg or es fstpt cmp xchg mov dec jp cli inc dec cmpl js cmp push imul stos mov push roll mov iret mov ror test or mov pop xchg mov addr16 out add mov gs pushf pop add enter add mov mov in mov lahf inc sahf and ja sbb popf rorb pop ret add xchg xchg mov xchg repnz loopne add pop xchg outsb je ja adc cli or add cmp mov dec and nop mov xor mov xchg mov loopne jle ds and pop adc pop roll jp std adc sbb sti sarl pop jmp jecxz or mov sub out (bad) subl or jmp fisttp ja or fstl (bad) jg sbb test cs or jp pushf mov sbb or es sarl loope dec cmp and xor notl leave enter (bad) shl das nop push leave push push aaa adc mov push movsb popa enter lret pop pop out cwtl cmp sub inc popf test cmp data16 iret ss mov lcall lar popf push sbb push mov int jno inc add add cwtl test adc push int3 loopne and or or cmp pop mov push xor shlb (bad) sbb mov (bad) jmp jo lods sub test sahf xor popf pop clc inc adc xor popf mov or mov cmp mov jae mov loope xchg or jmp push mov adcl mov lahf int or pop push cltd push jmp mov lock clc popf add ss lahf push push popf (bad) fidivl inc mov sbbw fs xchg les rolb ds scas stc pop repnz push xchg out mov mov loopne outsb insb add push stos shr fs mov mov pop push movsl adc add aam js nop pop add (bad) and test (bad) sbb add push inc mov jmp pop cmp pop sbb icebp (bad) xchg gs scas mov std inc jae lea push jp cmp repz sbb jns sbbb std arpl sbb (bad) cld std inc sub inc xor out add xlat pop jno rorb dec inc push test ljmp out or shr shl dec in lock pop ret mov push dec jg jle cmp mov jo xor inc pop xor inc insl jnp sarl idivb xor sub add mov adc loopne pop jl mov push mov dec je inc push xchg cmp aam jle push inc adc aad jp sbb enter inc mov and jb mov (bad) into or push test lea push dec fistl push cmp add clc ljmp push push dec sub call and mov sub mov or dec adc movl xchg outsl dec sbb je cmp (bad) mov sub sti sti dec add jne imul adc or mov add adc lret loope push cli lret clc sub add leave inc adc jbe rclb mov pop loopne lds jl xchg mov add xor xor xchg adc fisubl push xor inc mov sti jge cwtl cld cltd push and gs lahf test mov dec xor and add push sub jb dec xorl sbb dec or cmp or fsubrs jge jo push xchg mov mov add sbb push cmp mov aaa adc or push les ficompl lea xor push mov and sub insb stos sbb adc flds push insb orl lods test stos (bad) mov insl loope movsb lods lea dec add mov and stos into push inc jne cmp sub or dec repz loopne test repnz mov mov pop xor out ret je jl je (bad) pop add flds jb,pt adc popa jbe lahf pop and sub dec push pop add out (bad) mov add inc sub mov out and iret jmp sub cmp pop (bad) jb mov decl loop clc (bad) mov test cli mov sbb and xor fiaddl rcll cmp dec popf add mov cmp add xor out cmp nop xor adc mov into mov adc sub adc inc mov add inc sub sti decb adc mov ja or pop jne pop sbb pop pop and push insb ficomp adc mov in mov dec mov ljmp mov ret popl in scas dec adc add aaa inc mov sub cmp cli das mov mov and int3 addl jo mov fildl int add push push dec push or decl mov dec mov mov cmp sti fistp cmp jbe cmp mov jnp push mov lret mov xlat lahf xor int cmp add add lahf pop adc mov add (bad) mov enter and adc xor add lcall int push xchg popf daa lahf pop add out push fs mov (bad) lock cmp (bad) and push (bad) push add loop call (bad) jb adc jb cmp jns sbb or and mov call adc push mov jge add pop ret std jne in mov inc sub outsl outsb cmp scas mov lret pop dec push sti je inc shrl or or sub sub pop sub add mov aas rorl pop pop xor (bad) xor fs dec (bad) je jl mov daa fildl test add outsb ljmp dec mov jne cmp pop call sub mov mov ja push add add cmp int3 lea pop mov add int cmp ds inc aaa xchg jbe mov out push insb fcomi sub shlb mov jne dec sub add cmp scas pop jge out sub push add pushf sub repz lea sub js push ret add adc lret and push subl add fnstenv or or jns mov add jecxz sub xchg ja pushl fildl dec sbb dec in sbb jne fstpl or pop pop out iret insl xchg xchg mov mov mov mov jl adc and fnstenv inc (bad) outsb jg mov testl xchg jmp mov nop cmp (bad) or aam mov xchg ljmp add lea (bad) sub add jmp pop outsb subl daa fnstsw (bad) jmp adc xor scas inc sbb cld add inc pop dec add inc add mov popa push dec dec cmp cltd xchg mov xor add mov aaa mov pop sub sub xor sub push add jle jg test into lds pop sub xor jb mov sbb (bad) add sti add jae fidivl hlt push add (bad) dec fmull mov mov je sbb je mov lret push xchg dec push and mov rol sti mov xor jl sub sarl mov je jmp push rol cmpsb pop add push (bad) adc jo xlat rcrb sub mov xor pop ss insl pop movb dec mov ja sbb sti cmp jae scas (bad) inc mov mov xor and push sub mov add xor lea inc xor and ret and lock test mov lret mov xorl cmp and insb mov sub add and fstpt push inc mov clc shr pop jne fcmovb xchg cmp pop decb lea test aas fadd je repnz sub sub adc jne std or push rcll dec fisttp sub mov adc push inc fildl mov mov andb add clc mov js xchg pop adc adc jb out pop (bad) and inc sub inc sub cmp push jo mov loope push scas into xchg rcr mov jbe,pt jecxz shlb je xor mov pop or push push push ds dec or push sbbb push lahf add cmp add lcall inc jne add mov mov pusha pop rclb test push dec jne daa jle dec shll cmp add test testb pop movl sbb sti jne pop fsts cmp fs sbb adc and jmp outsl push pop push sub das leave pop inc push sub ret pop or mov sbb jnp jne mov aaa add add adc add (bad) inc clc or or bound mov jl fistpl in jbe jbe adc outsb adc sub dec stos in je inc sbb test or aad and add cmpb cmp in daa push ja pop ja mov testl mov outsl sarl pop dec sub std mov in push add pop roll enter mov int mov jl mov lods add push mov push push inc xor (bad) rorl sarl xchg mov cmp sub mov fbstp or xor pop mov nop/reserved pop cs jnp inc jge and xor lock dec jns push inc sbb (bad) xchg add or (bad) dec arpl or push test mov insb sbb clc shrb sub and jne dec fistp das jbe or inc push jb mov add lods mov sbb lea cmpsl mov in xor shr sub out pop sub sti test jne add dec jnp add pop add add cmp call movl xor lods mull mov shld and movsl popf xor add pusha mov std cmc xor aad inc cmp jg fimull into push dec mov jmp cmp lcall cmc xor mov jg out or jb mov out cmp mov sti pushl sub mov mov inc inc dec jne dec jbe,pn divps fistpl push mov adc dec push aaa add xchg pop sbb push add nop adcl inc pop jb andl in je jb push pop mov movl adc push icebp int3 (bad) fcoml mov pop pushf orb fisttpl mov fcmovnu jae or add lea (bad) mov sbb push test ficomp pop sub rorl add movsb mov je push pop mulb outsb pop fnsetpm(287 mov sub out xorl add insl sub inc mov xchg inc inc inc mov inc data16 aam sti push aas mov push mov cmpl lea (bad) jbe cmp (bad) movsb xchg cmp pushl cmpl sub mov (bad) pop pop xchg pop gs lods ss jne pusha jmp inc and mov push scas jle and inc scas lret sbb testl enter push aam lods mov push pop pop fsubrs push fistl mov add mov pop mov int3 lret fdivs and imulb cmpsb andl sbb sbb (bad) xor xlat push sub and adc mov jo add (bad) pop mov (bad) lcall call lcall clc lahf pusha mov lea mov insb mov hlt pop add pusha scas (bad) lock leave xchg mov insb std adc dec push sub cmp fistpl or ja mov mov scas neg imul sub scas sub mov pop or insl add and outsl push out cmp cmp lea stos sbb test dec jo and fldenv (bad) xlat sub pop (bad) xor ja push pushf add dec mov sbb imul lcall or or or and add sbb sbb mov inc add fld xchg lds fnstcw int3 add push imul std mov test push scas test inc mov mov jb mov adc shll mov xchg lcall out ja mov rep pop or ljmp out ret push jb gs mov (bad) or mov test jg ret pop pop subb fimul imul jle push sbb imul pop jae mov mov jb push mov add or or push inc je mov ds push sarl mov mov pop jmp xchg pop sti mov push fsubl dec jae shlb pusha inc das inc sub std jne push pop mov jg push push mov lcall scas mov mov in rolb jecxz cld (bad) arpl mov sub mov pop sahf cmp pop dec cmp andl pusha cmc movl ja push inc lcall add je push xor fcompl std inc mov adc xor mov insl mov movl adc cmp fsubrs push dec inc or outsl inc psrlq and clc inc push inc sbb mov (bad) jae pop or pop add ljmp jns add xor inc outsl jno pusha pop pop sub inc fisttp or cmp cs and mov inc arpl mov scas jne (bad) (bad) dec insb mov add enter mov orb test pop daa (bad) mov mov add mov mov ss pop or (bad) testb jne adcl mov pop movsb test imul push push adc dec aaa packsswb in lahf fimul pop or push mov cmpl add jp push and sbbb lret scas pop adc mov add out pop loope mov adc sbb movsb outsl sti inc add cmpb jno fidiv mov adc imul idivb cmpl inc and or or jae js adc adc ljmp add adc sub lret jbe push cld std add pop aad xchg add push clc push dec dec inc in (bad) (bad) push (bad) jo das lret push cmp in (bad) inc clc jmp add pop push jnp clc or cmpsb dec popa push aad inc xchg and das lock adc sbb (bad) mov cmpsl (bad) and push pusha mov and jne and mov mov xor popa mov mov add add fbld mov mov sbb or scas jmp lock loopne add cmpsb fcomp insb insb mov cmp dec pop mov jns dec ffreep mov mov adc les xchg and nop inc and mov je pusha pop je jl test pushf movsb mov fistp ret rolb add cld mov push and sbb jo inc jb fs pop aas adc in adc orl or int3 fsubl add loopne add or adc adc mov shlb pop add mov push test inc push icebp sti pop or xor xor jecxz cmpl or inc fsubrl inc pop loopne or jbe (bad) pop mov or xchg pop rol dec jl movsl push push mov movsb nop imul inc mov inc das add sahf jae sbb pop mov sbb sti jne push divl xor sbb sub je sub popa es decl inc fmuls (bad) jg add xchg cmp or fcomps sub hlt mov sar out ss or mov adc adc stc cmp and (bad) mov in sub pushf add adcb dec fdivrs (bad) aad insl add pop jg mov loopne aad mov mov pop aam and mov or popa je push and test lret ljmp push jno pop je sbb cmp pop sarb fdivs mov cs aad add aam sarb loope gs push push mov rcrl sub mov adc fnstenv test sbb jmp mov cs pop lret icebp cmp sbb pop mov or add out or test adc stos inc loope or icebp mov inc rclb add sub (bad) loopne imul jne (bad) or ja cwtl sub push fistl (bad) jge xchg jecxz call incl fbstp push shr jne (bad) adc ja stc adc les cmp sbb jnp aas fstpt mov xchg add mov sbb addl daa cltd add test mov daa (bad) pop xchg jecxz jmp aaa stos (bad) ficomp ret adc test and or je or (bad) clc pop cmp jne outsl fsubs adc pop mov and std inc or fcoml mov lods ja in jg adc or adc push daa adc jle xchg sub or enter xor mov push or add and pop movdqa add adc and jg add mov push jg outsl inc add push insb jbe data16 jle sbb jg jg fdivrl jo mov lea mov addl add (bad) (bad) push inc mov add adc mov cltd mov sbb lret cmp mov clc xor sub (bad) push lods and pop lods or jne dec into pop loope mov icebp je sub push push push sbb xor clc scas add in mov ja and sub mov add sub mov cmp lock movsb mov jmp jecxz xor cmp push popa in in or inc sbb add mov cmp popa adc xchg lock ss cs lds leave loop ja out andl mov in xor testb lods add movsb and loope push loope push inc inc jge sahf out inc push inc inc inc in sbb dec adc adc pop or cmp mov xor pop adc into inc inc mov mov fmull add dec das push sub jge hlt rep scas jnp jg cs add lock mov push loope ljmp rclb add add test jmp rolb push or xor andl pop jle push shll xor rorb jo xchg cmp inc push clc das or jbe push push mov sbb inc mov cmp jb add push outsb clc mov in cld je outsb push push add (bad) cmp mov loopne pop pop push sbb int adc rcrb sahf cmp or es (bad) and push pop inc adc aam and adc add call push dec sub jg jbe hlt push and adc cmp or pop adc xchg std sbb mov and xchg push cld cmp xchg sub or pop push add xor or mov ficoml sbb lock inc pop enter inc loope scas inc lds dec mov sbb out xchg adc (bad) add jo xchg add fnstsw push sub or dec adc sbb mov into add pushl push lds jmp pop mov loop out sub inc sbb xor dec pop push mov stc aaa dec push mov dec adc insb mov data16 add shrb sbb mov and clc mov add push jmp loopne and imul sti adc fwait gs cmc add push sub push les push dec enter mov xor enter inc dec cmp loope pop cmp inc andl cmp mov jno pop ret push mov test jmp fstl add vmulss cmp lock mov pop pop or jb aas add les les and inc sbb cmp adc loopne clc mov mov push dec push imul or xchg xchg xchg or add js mov or hlt std push adc je or mov xchg inc lea fbld cmp push dec mov or test movsb dec push cmpsl mov inc fucomi push add mov xorl mov xor hlt cld clc push bound or cs push add xchg dec les sbb test pop push cmp loope push (bad) jne cmp jne aam push ljmp cmp push popl mov test jnp aas jns repz pusha dec push scas test repnz mov or ret dec jne or cltd stos cmp mov subl (bad) push mov fistp pusha mov lods sbb or sub cmpsb adc xor cmp sbb daa cs sub jae sub aam dec cmp mov cmp test scas xlat sbb cmp xor add (bad) (bad) push push mov xor movsb scas mov sbb inc ret push fs int push push or sti add rol inc mov in mov push int3 push mov ret or pop ja (bad) add movb or jo out pop cmp xor inc jno seta dec pop js cli rorl jmp add aaa or push add pusha sbbl jle inc das inc sbb pusha sub fildl cmp inc sbbb je mov or jnp push mov rorb jbe jmp adc or push sarl fisubr sbb (bad) xor mov adcb push (bad) mov mov adc mov jae call cmp pop divl push add sbb insl jnp and xor push sbbb add test lock sbb sti pop mov and pop push mov pop adc jno xor sub mov cmp or or jb nop xor and cmp je push int3 jmp pop bnd pop ret mov push loop dec mov mov add mov lahf jnp (bad) mov je sbb sub and ret add sub jl adc in fiadd and add cmp lds gs insb in out or push in inc shr and lahf sbb out ljmp fcoms fcmovb dec add leave push adc test (bad) fcomi ret add loopne loopne fsubrs lods cltd jp lds call aaa jb adc scas mov aaa ret cmp pop mov (bad) sub ret int3 add push add jae xor add clc decb int jnp push fstpt xor iret xor lods out inc or and fwait or xchg xchg call add test add popf mov push icebp (bad) sti fild cld je lea sbb scas lea xor adc xlat inc lock jp adc inc jg adc daa add xchg je xchg xor dec fist cld pop mov cmpl rcrl pop mov inc pop and mov mov imul call sbb aad sub adc cmp jl rcr push aad enter int3 add or fwait ja mov push cmp dec or jmp mov rorl push lret mov or ja inc and bound cmc adc sti ja inc xor rcl mov xor inc pop xor or testl mov fild add cmp je dec jne sub ss les adc sarb or mov shrl pop xchg cmp inc adc mov pop push inc mov loopne xchg lcall cmp mov jne jo lds repz mov jp cld push cmp pushf mov dec inc aas inc pop push jmp xor push orl incl pop sbb and mov push imul inc xchg pop pop aam xchg pop (bad) xor mov cltd cmp (bad) (bad) and test (bad) inc pop jns sarl mov fld movsl inc add or cs add add (bad) (bad) jle push lock ret in out ljmp je mov cmp test inc test fwait dec adc lea and insb jg sub ret or std adc cmp add push in je add or rolb inc aad mov or ljmp jl sbb (bad) push pop pop sbb (bad) push sub (bad) lea lea stos add loopne mov (bad) mov mov inc aam mov adc adc mov inc dec adc incl and push adc cld ja inc sbb add sbb lock mov mov and push test popa sbbl jb adc test (bad) and pop mov mov add cmp ja out jl loop lea jmp mov inc (bad) mov push fcoms fs lods push and push scas add inc je pop sbb xchg push push xorl xor push inc and jbe pusha and add movzwl ljmp decb adc adc add sti ret cmpsb mov jmp movb shr mov push sbbb push sbb sbb lea and dec push pop jns pop mov imul or ljmp cmp sub pop fmulp pop hlt adc mov add push sbb clc mov incl je cmpl ja and push andb xchg mov mov stos cwtl ss sbb stos enter mov jmp inc push movsl cmp (bad) mov rorl add adc sbb xchg pusha fldl adc or pop or or jmp adc and je push xchg or jg push stos divl sahf popa pushf std push mov and mov outsl test icebp movsl sbb mov add mov loope xchg ret aam out push add mov jbe or xor and std shll (bad) jmp inc aas jecxz movl test loop adc sti mov dec mov stos jle xchg ja jnp jae jbe sbb jge push iret dec pop mov test outsl sti add mov mov adc inc imul pop aas loope xor sub dec inc insb xor pop jmp loopne push lods sbb inc cmp jbe mov or (bad) inc inc cmpb (bad) mov loopne movsl or scas mov inc jb aas pushf sbb (bad) xchg movl xchg sub (bad) in lea mov pop faddl out push pop pusha inc inc inc dec push mov and lahf mov ret add negb sbb pushl inc jo (bad) out push mov inc dec jne mov push push mov shrb or mov mov xlat or aaa bound arpl aaa cs pop cld notb loopne sarl dec loopne cli lret fcoml or add pop push sbb cmp push push adc jge and (bad) mov pop inc cmp mov add push (bad) cmp fidivl cld pop xchg movsb dec adc das or andb (bad) push repz ss inc xor jo mov pop fisttp or mov lret mov adc xchg push push inc jmp sbb (bad) jge mov mov jmp jne sbb cmpsl out mov mov mov outsl sbb ret int xor add dec mov cmp xor mov test add mov int3 cmp jecxz mov insb addl mov pop inc cmp enter pop push jae js notl or sub or lcall or outsl and xchg mov mov or mov imul or push (bad) pop (bad) fiadd nop push sub adc or dec (bad) mov jg xlat mov call xchg fadds pop xorl jae mov push pop cmpl (bad) jmp or mov mov or outsl jno jne ja or push call xor cmpsl add mov add cmpl mov pop jg push or movnti add cmp mov test ss insl jg mov scas push (bad) pop mov aaa and imul push clc jo mov lds sbb (bad) repnz push pop loopne xchg mov pop fldenv adc or es sub ds adc add js mov jl stos sub jbe (bad) push jmp pop sbb push (bad) nop and cmp or mov or mov mov movsl jne fcoml cmp call sub mov in adc mov lret jmp jmp mov addb sbb pop adc and pop push dec cmp sub lret jne or xorb jge inc mov das test dec ret pop mov and lret add mov bound or loopne fldl adc cmpsl rclb push aaa adc push adc add rorb mov mov jle push mov pop div pop jb lea mov inc fsubr ret stc clc lods mov cltd push test int3 jge fiaddl and push adc or mov lds add insb hlt push cmp adc add sahf stos adc xor movaps xor enter mov in and jnp sub xchg dec or add sbbb mov icebp cmp push hlt adc lods or movl add shrb mov sub arpl and mov push jo push or push jg sar adc (bad) sub sub jmp or aad sbb push sub pushf adc cmp and imulb (bad) in add stc and fstpt sbb fs fwait adc dec mov pop inc insb sarl enter dec in insb push push outsl aas fnsave sbb inc divb ja loope pop ret adc movl sbb test mov inc call push fdiv rclb ret and sbb or push and in mov in and lock fiaddl cmp sub inc xor inc lcall je dec inc mov sub loopne rcll sbb or (bad) jge (bad) sbb (bad) xchg mov int3 or pop ret add inc pop test adc and (bad) mov int and jb lea imul pop adc jns and sub add pop cmp loop xchg mov push jnp insl lret lahf and nop or sub inc sub mov and addl push in dec call pop mov dec ja nop mov jmp cmpb jmp xrelease or mov movb call clc or call (bad) jo push jo and mov pop mov cmp jae fiaddl or and adc in out inc test xor scas pop dec ja cmp ljmp shrb xor das add and cmp aam jbe add add movsb int3 lret rcrl (bad) jle shr lds test ret lahf daa mov test push jo jne or ljmp loop popa or shr cmp jne adc push xchg mov je,pn lods bound jne mov push ret mov add inc jno mov call inc out xor jmp divl mov pop into adc mov lds pop sbb inc scas inc (bad) pusha xor pop adc push add xchg sub out mov fs pusha sub test dec ss mov push mov mov dec js sti and jg pop (bad) cmp je cmp and adc adc inc jg aam and cld fldl or and sbb pop aam fistpll pop jb add xorl rclb add sti mov (bad) int3 adc fsubs insb movsb jno popf push sub or sti addb add mov mov sbbl out dec inc xchg cmp mov mov mov mov incb sti add add fidiv pusha inc bsf inc fistpll lock cmp jbe or out outsb sti imul cmp (bad) stos mov fs sub push das fmuls jecxz xor xchg mov testb hlt clc pushl jle imulb and push lret add adc sbb add pop (bad) inc mov sub push inc mov jnp ss push or adc and pop jp sbb push je jbe jne mov adc push or inc sarb or sub or mov loop adcl aam pop aam imul ljmp add out cmpsb ret xorl pop rclb dec pop cld (bad) (bad) jbe sti int3 roll lea adc fidivr add xor popa mov jle or daa push mov ljmp add xlat jge imul mov sti jnp (bad) andl sbb nop or adc add pop daa fs inc orl loopne jno dec cmp xchg bnd iret test cmp (bad) lcall sysret mov jbe call mov dec sub dec nop in sar mov sbb add cmp in enter cmc xor mov cmp ja add outsb ljmp imul stc sbb cld pop fild inc inc jmp sub inc rcll mov xor and out sbbl leave repz pop jp not cltd cmp cmp mov inc add inc jg ret jne push mov push pop push cmp (bad) adc inc push jmp xor pusha sub das adc sub and pop je push push push cmpsb and sbb add cmp jne decl sbb hlt mov clc (bad) jae ljmp sub xlat in dec adc rcrb adc or mov out (bad) rcrb or adcl adc and ss out pop sarl pop das or loope push mov mov dec ret push inc dec sbb adc jl adc lret mov divb jno pop jo xor sti and and jl or dec add inc incl js push loope push mov (bad) in or cmp push xchg repz jmp sbb (bad) mov pop sti add cmpsb push jl and lods es adc sbb adc orl (bad) xor dec jl pop inc lea ja leave jne lret std je mov rolb cmp inc mov or sub fdivrl aaa pop and sbb push inc cmp pop add xor mov leave sub mov or lock daa mov mov mov (bad) and cmp sub pop pop loope rorl scas push cld outsl push cld mov fnsave mov int3 aas jae fucomp push cmc push adc jae add add jbe jb jo iret in subl mov push push inc psllw popa xor xorl xchg push push out mov add aaa mov lock pop jne call push roll mov lods sbb lds jae pop jp add (bad) pop mov xor push xchg sub lds sbb push mov lock pop sub push sar inc push and movb fnstsw in outsl push (bad) push jo cmpsb push mov sbb jo movsl pop or scas push pop adc enter add rcr mov mov jmp xchg add jne push inc stos add aaa popa mov jo jge inc insb xor (bad) sti add js imul or push jl xchg aad push push mov adc ret mov push pushf mov pop js cmp cmp and comiss push jo mov inc mov lea shr mov jbe lods inc sub add and add adc mov sbb scas sarb xor adc into dec mov mov cmp adc inc cmp clc jl adc adcb mov (bad) fimul add nop xorl andb test add inc mov pusha mov jl jmp or inc test inc dec pop cli mov xchg push add je mov test subl or adc (bad) lea clc add idivb add fidivr ret xor sub mov jg in fildl fndisi(8087 leave dec inc pushf inc loopne subl add (bad) add jl or add xor stos push sub xorb (bad) dec orl ret aas (bad) cmc mov add ljmp inc (bad) ljmp xor and push fist sub inc mov lret mov or xchg je xchg (bad) jbe xor in lcall xchg sub rol call lea mov mov or add sahf jl (bad) xchg iret inc mov int nop mov push out push cmp (bad) mov out adc sbb mov pop test cltd jb scas cmpsb sbb pop mov pop add and fs cmc mov fidivrl (bad) xor stos xor pop (bad) or test in daa mov or inc inc ds pusha adc xor push unpcklps idivb push mov out loopne ret mov ret sub shlb jbe jmp fnop scas call jecxz cs pop cmpl xor xor inc jmp (bad) lods adc mov test jle adc lock pusha pop call pop mov mov xchg lods (bad) fcomps pop push push cmc nop or cmp (bad) adc add sbb cmp jl inc test and lock ja,pn lock adc push add call mov pop mov dec push jb jge fsubrl pop add or pop add xor out vmovsd push xor adc pop cmc orl mov inc test jl push mov sbbb das lods nop enter lahf (bad) jmp push pop add call shrl icebp jmp push cmp and sub push push hlt push adc xor cmp jmp or gs ja or aad and data16 push (bad) test (bad) mov mov mov pop mov push or loop (bad) rorb inc or add push arpl cmp push addr16 mov and push jo fwait movsb add sbb add test and add xchg pop je,pn ljmp mov adc xor push add inc jo mov (bad) (bad) sub lret cld shr push inc das mov lea sub dec icebp mov sbb lds cs (bad) fildll inc or ret or je cli add cmp jbe mov aas pop icebp cmp inc mov and inc lcall jmp dec add shll pop mov andb fcoml lea sbb insl dec push loope cli mov cmpsb pop mov jle push mov out in ficompl pop xchg mov jne inc mov pop xor insl ja dec sub adc sti add mov dec pop cmp cmp fiadd xor cli into inc adc cmp je popa mov jno (bad) cs and fbstp ss scas dec add in push adc mov mov push jno inc scas dec add dec data16 or mov or call loope xor pop mov mov pop sub outsl dec xlat sub adc mov sarb lock paddd inc mov jae cmpb and add push xor or cmpsl or stos push xor pop and push and mov test sub cmc jae xor add lock dec insb rcr (bad) call mov push jne int3 shl add push mov push xor pop xor addr16 cmp mov sbb movsb mov add aas mov inc or cmpb mov (bad) adc push mov jo pop adc adc (bad) xchg xor sbb insb cld fsub mov adc sahf lcall les cmp inc sub add or jmp inc sbb and pop jnp sub dec push ljmp lock xor imul jg push xchg cmp imul xor adc les add add test mov xchg pop xor icebp cmp jbe push in jmp xor push mov pushl mov push lds mov push jbe bound mov fsubp (bad) (bad) (bad) xor jge dec add cmp imul cltd (bad) pop fdivrs mov inc pop rorb jne push sub iret or jbe stc push cli arpl xchg add cli adc cld ja push aaa clc lods dec (bad) icebp inc adc dec fildl sub fwait cld push mov pop (bad) sti push adc movl movl addr16 jne icebp mov cmpsb lea push mov mov (bad) jecxz hlt fs inc out sahf sub enter aaa testb or fstpt or dec not and ret mov inc adc or cmc mov scas push lret push xlat sub inc mov int shr mov cld jbe outsl push and icebp loopne pop add xor stos and stos ret sbb (bad) or mov pusha loope mov push dec pop push pop xchg mov inc adc or add nop das xor rcrl fucomi push pop fisttp dec mov add aaa inc or jns sub add inc insb push and inc aaa inc (bad) incl adc inc xor lods adc mov mov mov or inc mov cltd or pop mov dec or inc pop adc dec sar pop sbb adc fstpl and mov jmp insb enter lret test dec aas cmp mov pop cld xor or push xchg mov mov add cmp icebp push jecxz lea mov or (bad) sub and or cld test pushf push inc sarb sbb rcrb inc cld les push sbb (bad) sbb dec dec dec out or mov dec pushf inc sbb or out or ja ja push imul xchg adc pop pop mov jns mov push add push push jns pop adc mov mov into mov push into xor cmp cltd sbb mov and add adc fidiv cli xor add sbb loope lcall pushf and jge into mov orl or sub mov jne add cmp adc (bad) aam aam in mov mov jb push jne push pop xchg jle andb fnstenv jmp lret push push adc add or mov lock fbld jae adc fs mov fst push adc icebp pop mov cmp in call movsb or outsl je ret fmull dec (bad) or mov nop ss pop cmp adc popa cmpsl push inc xchg jmp sbb out divl inc pusha and jne pop inc aam pop push push pop xor mov xor push dec mov sub icebp pushf and js dec adc js decl pop cmp jge iret jb add out aaa and mov decb jne pop sahf cltd faddp in repnz jmp cmp mov mov (bad) data16 pop shrb out mov clc adc mov jo push fsts and push add arpl leave or mov cmp out or mov lret sbb or stos pop (bad) insb xchg mov aaa (bad) adc or out adcl lock mov adc aam loope outsl xchg into lea jne,pt cmp push fwait dec cmp add in leave adc lea loop adc sub pop std int xchg insb sub movsb adc sub test pop mov mov dec je mov add lea insb mov push test aam mov shrb add mov push mov push pop mov cmpb pop ret rorb add xlat (bad) jb adc add (bad) adc pop inc adc mov pop aad dec mov sub dec icebp into add mov and (bad) (bad) xor and test call clc and add loopne rolb sbb insl mov xchg add movapd xchg in data16 out and lock stos cmpsl or push xor fsubrs push xchg add cmpsb sbb add and lea (bad) ja push pushf pop mov add lods popf pushf pop ljmp pop push popf lods mov or jb and xor pop idivl push add loopne scas out call orl mov fmul loopne add push mov jo mov mov cmp movsb call sbb or mov add ja adc sbb aad push push dec mov xorb loope jecxz repz pop pop daa inc shlb mov sti pusha subb dec sbb xor dec cmp lea insl jns daa testl dec fs push add sbb ficom daa add jnp jne dec adc ljmp xor or ds push push push imul test or insl push cmp mov add scas mov scas call lret gs insb lock push jmp cmp insb and push gs mov xchg in or je push add add mov sbb enter push inc sbb fcmovbe mov aad bound aaa jo pop xchg (bad) (bad) sub and aas adc shrb jecxz dec pop fdivp cmp roll jno sbb ret sbb sbb add aaa sub dec and js sbb or adc jbe xor sarb stc jb cli mov sti jb ret sub (bad) jb rol and jg das aad sar xor add sub mov mov cmp popa inc adc inc sarb inc in add inc push mov das sbb or or sbb negl rcll pop add add add add repz dec hlt mov ret xor xchg add lds roll xor addr16 das out cwtl inc cmpl mov mov sbb add jnp adc and inc ret fiaddl fdivs scas movzbl and outsb in fmul xchg test hlt sti or mov pop sub lcall fs mov stos push aaa clc sub mov sahf mov ja mov mov sub jo pop fildll insb mov adcl push sub sbb adc out xchg mov mov sti (bad) mov jmp mov add (bad) cmp sub push insl or popl stc cmp scas adc xchg xchg orl or out pop add jge add sbb aam inc pusha jle mov (bad) dec jbe rol inc mov jl dec adc adc cmp adc push add mov fsubl push sbb pop notb cmp shr fcmovnbe mov es adc inc pop push fs push movsl jmp sbb or das ss or push or push adc cwtl xchg call xchg push mov lcall cmp mov add and mov sub pop dec sti dec mov push rorb push jne inc je out mov cld les mov adc inc add pop pop inc add add std pop fcoms sub scas mov push popa xor mov out pop repnz cmpl (bad) jne and mov dec push in loopne addl add ret push dec stos call cmp call push push adc pop jg and inc xor or movsl xor or mov cmc pop push jg jbe lea fdivl push and add push dec mov pop loopne inc hlt orl mov (bad) fidiv mov inc add adc adc xchg bound fmull enter sbb inc sbb icebp adc bound mov mov rorl pushl add enter sub fsubrl push (bad) push test sar (bad) call push mov sbb jmp push (bad) push push aam test add pop jns push sub ss mov pop push pusha mov ret cmp mov jne inc push ret mov sbb pop (bad) push add mov push les add add add pop lea aaa and xchg xchg sub mov cmp xor add inc xor insb pop aas push adc mov outsl push imul fsts les pop lods inc insb jne and xchg mov adc sbb leave pushl adc bound insb inc cmp rolb ds dec adc fild and jne xor inc mov loop cwtl pop and arpl lea ja adc and lock adc (bad) bound inc mov pop fs inc push or adc push cmp sbb push and push sbb sub sbb xor cmp into addb cmp inc adc push inc pop dec dec nop inc push sbb pop inc push sbb fs sbb insb jo popf insb nop inc js (bad) mov leave gs add test mov nop xchg xchg pop jb cwtl pushf mov and xchg stos push add add mov (bad) dec fsubrs lds mov insb push test mov adc mov adc sbb fs and or mov push scas add fwait aas lret and and aaa mov inc dec jne je mov mov push fs test rcll add (bad) fwait loopne jb add hlt pop bts jmp mov leave call les mov (bad) mov hlt push mov mov ljmp or or or addr16 mov aas jge iret aad in adc popf int3 push jmp or rorl jg stos push jne mov mov xchg mov fldl rcrl adc or mov out cmp and in mov call inc (bad) mov pop add lcall (bad) fbld fdivr mov clc or mov inc (bad) stc xchg push mov gs or add sub mov xlat adc or jnp sub inc sbb lds push jl andb dec sbb mov push leave inc loop orl das loopne aam pop jno add sbbl push inc icebp orl sbb or jecxz,pn jne sub jnp and sub adc dec (bad) cmp (bad) pop inc fwait jle cmp xor ss lret cmp sub cmp and rorl xchg inc (bad) mov in mov fmuls push push or and cs push test lods jg jge lods (bad) int3 cmpsb sbb push rolb clc (bad) adc sub fidivl out adc and mov xor and sbb or fmuls stos scas loope add push jmp test add add inc push inc rolb lea pop and add sbb or lret adc pop icebp adc lock push loope (bad) mov das push or (bad) pop and adc and cs icebp and xchg adc and dec sbb dec pop jne push stos aaa push mov test sub or push test in subb das mov jg jns je,pt adc add sub movl sbb pop cwtl and xchg cmp addb hlt add inc data16 mov add pop cmp insb adc xorb or dec inc push dec or dec inc cmp fistl aam push mov or push mov lods push testb mov pop mov or orl and or mov imul xor es push mov xor pushf sbb dec cmp call add xchg rclb adc sub and add rcrb jl (bad) shrb stc add pusha jbe push es ret push mov sub mov lcall adc push add inc jmp (bad) addr16 inc orb jg movsb addb dec add mov push and je ret inc mov pop xor mov add stc add cmp in mov push or xchg inc leave sbb and int3 arpl scas call mov add mov mov test xchg (bad) in cmp dec mov ret xchg add xor rorb add sub mov or push imul xchg mov lahf and cmpl pop and add aad mov stos dec adc inc movsb aam inc adc sbbb xor dec cld add testb push sub and adc lods pop mov scas (bad) pop loopne mov push loop push push mov dec lcall roll mov jno push mov icebp push pop imul mov insb rorb dec pop pop push add jl mov rolb arpl and cmpl loopne imulb push or push or fisubl push sub loopne mov icebp push sbb inc jl or aaa pop pop pop dec add mov out sub test inc out fisubrl mov mov and rclb mov lods fstpt sbbb sub das adc js push push or scas mov xor outsl mov pop bnd mull or loop enter fildl aaa xchg test add and (bad) ljmp idiv and jo jbe out jb cmp ja jb sub sarb sbb mov push insb inc jge fadds flds mov pop ret pop into mull enter xor and add loope rorl test adc push shrl repnz jne jne test jmp add or ret adc adc dec rcll clc adc mov jmp pop add mov leave add push push mov mov jle (bad) pop mov sbb fcomps dec scas and les sar mov add movl mov or jne adc sahf inc jne jmp sti push (bad) (bad) or (bad) aaa mov sub mov push pop pop and xor js cmp scas sarb jg and adc (bad) lret inc and cmc mov stc call enter or test jge mov dec jmp rclb mov lret sub cmp push inc xchg mov ja sbb cmp adc mov or daa pop inc testl push add mov fsubl and push and add jmp lods sub mov mov add inc jg sbb xchg test mov fisttpll sub jecxz daa dec pop mov and jp push mov and (bad) mov jge fwait add xchg cmp inc add popa mov push jmp and mov adc data16 add ds fs push enter push xchg cmp pop rclb je jns aas cmc mov mov mov mov xchg es insb je adc and jmp jb cmp ja add cmp or (bad) cmp sub push xor rorb incl jb idiv rcrl push inc sub (bad) inc shrb inc aas jb xor test mov push or jne cmpsl je jo add mov xchg push mov dec fdivr ret shl push or xor cmpsl add xor arpl xor lock jo jp xor mov fmul mov and loop (bad) jne ljmp cld push test out shl (bad) imul out pop mov mov (bad) aaa push std jbe cld pushf cld jmp movsb inc inc movb negb push out push nop sbb nop or rcl pop xor jmp adcb xorb enter adc inc in dec pop or add and push inc call push inc sahf sbb addl xlat mov insl pop arpl mov or xor inc out xor stos sub xchg inc push jge cmp movsl test adc loopne xchg sbb das cmp stos mov sbb add push or mov jmp sbb pusha adc int3 xchg pop xchg xor inc clc sbb add loop dec xor or outsb dec sbb jbe sbb mov cmp pop sbb and adc mov push hlt lcall fadds fmull test mov cwtl in sub mov jne sbb add jo add fimul mov jnp mov inc call add mov or sahf dec inc lea (bad) mov out sub mov loope push (bad) pop (bad) lods mov mov inc inc or popa pop mov mov imul ja je sbb aas push je inc and inc jmp jmp push adc fadds add or imul insb jne popa jg inc jae add push add inc pop add aam stos adc addr16 arpl and insl pushf (bad) insl movsb stos pop inc pusha ja mov cmc mov jmp sbb mov and adc aad in mov dec add add and decl push stos jo pop pop cld shr pusha jge pop inc rorb add jbe inc mov pop pop mov cld sub push data16 add addps pop ret sbb xchg adc cmp je xor inc icebp add dec cmp mov adc insl popa inc cmp cwtl push insb js icebp pop jmp pop sub jns ret jne or adc hlt fiaddl push xchg dec test inc fimul jbe lea in repz incl add stos xor outsl sub push repz and or xchg call push xchg pop mov mov jge rep dec jle pop insl adcl add sbb mov xor mov add jp add xor inc xor mov negb scas mov ret mov push test pusha mov ljmp add jle daa and lea mov mov push push lea ja cs sbb fsts (bad) push sahf adc mov cld xor jo call in (bad) xlat and sbb aaa std cmp mov (bad) or xchg lods es sbb adc pop mov dec lds xchg (bad) mov dec push out inc sbb pusha fadd push pushf lock mov mov adc or cmp jnp adc lock cmpb outsb (bad) je sub adc adc mov in testb repnz mov add test movsb sub mov ficompl mov dec dec inc arpl cmp mov mov mov xchg jae adc or outsl add xor cmc push sbb mov push ficom lds or mov xchg enter movsl mov cs or mov inc rcll or and push mov add (bad) aas add mov xor cld add stos mov or imul jne mov fisubr adc stc xchg addr16 stos lret adc and and mov insl jne and adc in or jle push dec ret mov (bad) jo mov les cmp sbbl xchg xor mov hlt push jne add test mov in pusha or jo add add and popa cmpb (bad) mov popf rcll lds arpl idivb (bad) or push aad add jle push push or inc xlat (bad) mov lea jle cmp mov ret jno push push jg arpl mov jnp inc add push fistp mov fstpt jmp (bad) sub into clc cmp jl decb pmaxub and mov add push inc jg int mov dec add cmp js adc sub sarb pop adc fistpl mov int3 add sub cwtl adc jne cmp adc insb or inc add insb push xchg jnp pause adc xor inc loopne sbb add adc je fsub jb outsl mov movl adc cmpl dec dec pop pop adc cmp jae mov push inc rorl jbe jle enter mov rol pop insb or bound sub in daa fsubl dec add adc adc insl or test inc mov add mov aam shr js daa cmpl into cmp inc lahf xchg xchg add rclb adc aam imulb push pop test es jmp push or add test inc adc mov out pop lods lods cltd pusha mov dec (bad) call push and ret cmp dec inc and scas mov xchg ja xlat test fimull pushl sbb mov push or test adc add loope jecxz mov pop std stc or (bad) rolb stos cmovb or push in pop mov ss inc mov in jmp push push iret mov (bad) arpl out jl dec jg test jmp cmp (bad) cmp popa dec je inc and pusha mov jmp sub add sbb dec dec push (bad) xor dec push (bad) mov movsb dec les push adc mov or push sbb es sbb notb or mov pop adc adc ds (bad) xor or dec jne push and mov ja in push lea sbb cwtl mov js dec sbb adc mov jge mov add xchg fcmovbe adcl aaa mov adc popa in ja hlt sarl mov scas dec or dec xor sbb sbb mov les cmpl push fiaddl aas xor repnz lea aas sub cs add pusha and sub (bad) rorl sbb or push cmp sub push jge and and cwtl push and jae push cmp (bad) loopne jl iret jg inc mov jbe pusha adc hlt out mov cmpb sub inc hlt jl add add mov add pop jb test mov mov popf inc add stc cmp loop pop (bad) outsl dec jne test add and ret cs jl or xchg imul repnz mov orl ret je std or add int push add or aas push mov add adc jge xor adc nop inc int3 push adc fstps add outsb and imulb lods imul sub add xor outsl subb pop mov or adc shlb (bad) icebp push xchg pop jle inc dec add inc add inc movsb ljmp pop mov scas ret adc sub pop mov out repnz adc aam iret andb in int pop aam movl loopne aas mov or mov cmp cmp xchg jp push and psadbw sub call fsub jae les jg add lds dec jg mov call xlat push xchg adc (bad) jbe adc xchg mov push ret add dec lods push mov cmove icebp lods push jg jmp je hlt cmpl and mov andb jp lock mov and cmpb or hlt jmp ljmp pop and lods pop (bad) aad jg xchg and pushf adc xor and add test lret aam push push mov and fcoms nop sbb movsl or jbe xchg pop incb add mov inc jp sar push aam add add test jp aam xchg in mov (bad) inc mov push dec addr16 xchg loope dec or clc mov xlat je cmp push jl adc (bad) jmp stos adc or inc and adc adc add inc add jmp sub rolb push (bad) mov and dec add jb push je cli aaa or xor je sub pop adc daa mov sub inc (bad) je lock mov mov push nop (bad) fstl in jmp or sbb push sbb test (bad) loopne push push ljmp repnz add es aaa xorb (bad) xor fstpl cs and adc negb push and inc mov fs inc sbb roll cltd push sbb fisttpll jmp pop mov lret mov xor dec lea ret or testl sub push std icebp push cli rcll (bad) mov push mov inc and and mov cltd dec dec scas lock iret and inc es cmp adc add cmp pop jo push movsl nop and mov inc test dec xor ret add sbb fisubl cmp jb cmpb xlat add mov inc mov xor cmp nop mov (bad) rolb add lock das add ds add cmc mov mov sub mov cmc add push test mulb xor inc mov mov jl pop loopne phaddudq or imul sub stos jbe push icebp hlt insl lea xlat push pop sbb add pop and jp push add mov js add add test or jl mov cmp push aam or mov adc mov (bad) mov outsl xlat mov bound (bad) outsb add or aas adc mov scas and or dec push (bad) jle adc outsb and adc cmp and shrb inc mov mov push and fstl es add (bad) int loop dec sbb stos insl xchg inc push or pop push push or sub pop mov jl fisttpl mov mov je or sub add push xor data16 add jge test fcomi iret int3 and or mov std mov cmpb mov push into pusha push clc mov add inc sbb add adc push je dec jle add jns jle jl cmp push test sub call and repnz mov jle mov jle push (bad) fistp mov mov push hlt das mov aaa (bad) mov jbe jmp jne repz xor add push mov adc addl xor and sbb pop adc mov pop sbb mov addr16 adc or sbb push sbb lea psraw (bad) mov hlt outsb jns xor and and and dec outsl adc notb sub cmp mov (bad) mov pop ret mov mov daa jnp jb add mov adc enter shrb push loopne (bad) and mov jbe lret push pop std fcoml call flds adc jb dec lea jo inc fimull pop mov add mov inc lds (bad) (bad) adc fisttp pop adc repz iret pusha inc jne es fdivrs es sub mov aam pop add xor loopne xor les add ds inc outsb out mov (bad) les and xor jnp add sbb shlb dec mov rcl jg pop cmp ja push dec cmp xor cmp loopne mov out inc sbb mov add fmull xor adc sbb inc lods mov lock stos xor push add cld and lea push or clc cwtl and add sub mov call inc aas pop arpl inc das orb fs insl lea mov sub mov sub mov cmp movb mov inc add cmp sysenter push cmp xor xor inc cmp (bad) cmp in es jne cmp xor sbb and and cmp pusha jns fstl cmp cmp cmp xorb and mov pop xor nop xchg mov in (bad) jp popf call xchg inc xor sub pop cltd sbb adc or or lds sub pushw clc push push inc out add imul mov cmpsb call xorb imul int3 add pop sbb popf or mov xchg add adc popf pop rolb les fs ljmp je and and jo jb addr16 aaa clc cmp xor and popa outsb sub and imul and xchg or rolb lock push out int repnz add add add inc sbb adc or out insl inc mov or add int or adc jae add sbb pop dec xlat arpl add jecxz jmp push into push xchg add rolb pusha push cmp das add add mov or add arpl mov or fs inc push pop or nop inc push sbb or push push fs repnz jnp adc pop or or or (bad) xor out lea (bad) xor lods insb in sbb pop xor (bad) xor cmp jl (bad) xor roll (bad) inc ret (bad) xor mov push xor (bad) xor xor dec rorl mov sub xor stos push sbb xor cmp dec roll xchg es (bad) xor cmpsb data16 xchg push xor (bad) xor ss not xor rorl mov cs (bad) xor scas outsb out push sahf pop xor (bad) xor ds dec roll addl dec mov push xor (bad) xor xor dec rorl mov sub xor test pop xor (bad) xor cmp dec roll dec (bad) xor movsl gs xchg push xor (bad) xor xor xor rorl dec (bad) xor lods insl in sbb (bad) xor cmp int3 insl xlat adc adc add imul imul cmpsb imul cmpsb imul imul cmpsb imul cmpsb imul imul cmpsb imul cmpsb imul imul cmpsb imul cmpsb imul imul cmpsb imul cmpsb imul imul cmpsb imul cmpsb imul imul mull inc add pusha adc xor rcll jo dec dec (bad) xor sub pop cmp dec (bad) xor inc and adc xor je inc addl (bad) xor inc ret and and or add inc add sbb xor (bad) xor or push push (bad) xor rorl push add or add push or pop pop std push add leave add add dec roll pop or or push leave push xor leave prefetchwt1 adc adc or je adc inc xor sbb or sbb and lcall ret std pop icebp fnsave pop adc adc sbb adc push pop adc xchg sbb push sub xchg jg add sub push cmpsl or cmp mov adc (bad) sahf jmp sub inc inc or in adc add test mov mov aaa fadds or fsubs or pusha dec seto inc and lock sub jb and insb gs xor je wbinvd stos or mov adc pop sbb jb gs jecxz pusha stos push cmp xor lds arpl addr16 xchg add mov add into add fadds popa mov jo xchg add bt jmp add (bad) out mov dec add jae sarl or add add dec (bad) xor or sbb dec shll xor fstpl add ror test jg outsb imul outsb and arpl je outsl outsb dec pop and aaa insl imul arpl gs outsl dec dec jb dec inc mov dec inc dec xor cs dec dec mov gs inc insb jae inc (bad) (bad) out jb gs push gs popa insb jne inc neg js inc insb insb outsl push and inc js je jb ss and jae cmp xchg insb push sub adc subl pop inc or sbb and and es (bad) (bad) (bad) ljmp sub sub xor xor ss cmp cmp cmp ds inc inc inc inc inc inc inc inc loopne inc decl dec dec dec dec dec dec dec push push push cld jg pop pop pop pop pop pop pop pop pop pusha popa bound lcall movsl adc push insb insl or jb je jbe js jp shr and jl jle add imul loopne sub push push add int push jmp dec inc push (bad) or dec dec inc adc or inc lret mov mov aas cld jo insb imul jae insl popa mov je insl mov je and mov mov adc push xor das sbb jns daa sub insb pop imul mov popa jbe mov arpl daa pop jae push xchg int sbb insl and insl add fistpl push insl and lahf jne mov xor dec lods fstpt mov dec pusha mov imul sbb pusha fs dec addr16 push dec jbe and (bad) mov imul fs xorl and cmp and sub insl in mov ret outsl pop (bad) (bad) jle push insb insb popa outsb xchg sub pop fisubrl daa sub arpl sahf sub pop test cmpsl popa xchg outsb push jbe imul sbb dec jecxz mov ljmp divl add imul add push int popa gs jbe test inc dec das xor loope xchg sti gs or paddsb arpl pusha inc cmp mov cli into lods test insb gs orl daa aaa jecxz imul aaa ss fdivrs mov aaa xor imul and mov daa xor pop sub xor sub fsub pop dec or leave test test outsl jbe imul gs push push test and test jbe push pop xchg mov mov fs cs imul jo cli js sub enter sbb mov jno out sbb inc ja enter bnd xor imul push adc or pop sub push mov addr16 jae dec data16 in aam je lea xchg (bad) pop inc faddp add (bad) fstl pop push imul fwait xor daa or add cmp addr16 and ret popa lahf inc jne add xor rolb (bad) sub dec adc fsub dec inc jb jg gs mov push jo inc outsl cmp jne xor jb insb xor test xor add add and orb adc sub dec test sbbl aas adc sbbb jecxz cmp add add insb ret add add xchg adc mov (bad) lret add mov cltd adc sbb add xchg or add pop cmp add addb xchg lea xchg xchg xchg xchg xchg cwtl cltd lcall (bad) (bad) jmp movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov mov mov mov (bad) inc rol (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) (bad) (bad) (bad) jmp loope jecxz in out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) incl push push adc lret mov decl or add pop pop jl inc jg dec cmp pop xor fs pop mov jmp and jns add das das or dec sub dec push adcb daa sbb lock jbe dec lea push push mov inc push mov dec ja pop bound inc out imul arpl gs jne dec sbb negl push push dec jnp jne inc inc aaa jns aas cmp in push test and insl lea inc pop or inc adcl pushf jl push in pop mov sub jnp mov das daa and mov pop repz fwait inc xchg test ret dec bound movl andb sti mov loopne insb and cmc sarl mov jae inc jo pop inc ficomp in fldenv jb jns adc faddp adc and pop sbb mov sbb test sub cmpsb fcompl addr16 cwtl pop push pop lret jo and push pop sbb je jb pusha and jb sub dec pop cmp fs xchg (bad) jbe pop sub dec inc sub xor sbb pusha gs adc pop mov sub test aaa dec mov sbb addb pop sub fisttpll daa add sbb xor imul inc pop xchg ja pop fisttpl add jbe mov push push push dec jnp ss imul and push or call loope ret xlat gs and movsb es je xchg and mov adc sbb xor jb (bad) mov mov xchg sbb andl fsubrs add adc dec pusha or lods pop je outsl inc pop test adc jmp fsts je xor or jl es jbe cmp add add iret xor and xor adc jle sub sub xor ds cmp pop and or sub out add outsl ret or sbb outsl jo cmpsl mov and cmp ds and iret lret daa pop pop inc mov mov loope push or or mov je jo ss (bad) or jle or int3 adc or or jge int into ds ja sub je dec int push inc add (bad) xor insb pusha push dec inc xor data16 sbbb pop dec sub sub and rolb (bad) xor xlat pop sbb sbb or imul cmpsb imul cmpsb imul cmpsb imul imul cmpsb imul insb fs inc je imul arpl mov sbbb push xchg dec (bad) xor add xor (bad) xor pusha push inc sub je rorl loopne das add dec dec and aam test addl mov gs clc jle adc lock outsb pop push dec mov dec lods lds dec cld inc arpl push imul subb jnp lahf inc outsl js adc push inc push movsl xor xor dec cwtl sahf movsl lods mov loop or cs push sbb ret cmp cs mov jbe push outsl arpl test scas add adc push ja jbe add add adc adc mov incl mov test sti rcr dec add jmp add push shrl add xlat sub or adc mov rcpps adc push lods jmp push lahf jbe insb adc pop lea add inc xchg je loop lea aas push jns insl ja pop xor outsb jns cmp pop push mov pop inc jb gs ja jae xchg sbb or sarw or dec das or test xchg outsl xor inc add add fadds add cmp inc test pop adc imul popa mov negb fistl outsl add ja cltd daa mov ja dec and outsl add adc mov outsl daa jae jg in and rclb add ret sub sbb imul jb add leave jae gs fstl shlb cmpsl inc lret aaa bound sub movsl cmp aaa jmp add mov fcmovnu jae loope or jmp inc inc mov das inc and sub jg inc dec ja add je es aam inc aad pop lock sub paddsw add mov push inc pop push add call inc adc push mov dec gs adc dec push fs fcomp dec ljmp pop ret sbb pop add lret mov or aaa (bad) lock jno add jnp fsub mov add bound and lcall inc fmul inc addl iret adc cmp dec je jmp dec dec outsl scas inc inc call inc aaa insl sbb pusha jg jae pop outsl jnp xor rcrl (bad) (bad) sub rdtsc sbb cmp jo xlat jge xor gs fnstcw pop push test jb outsb cmpsl fldenv popa add cmp and inc and imul iret lea push pop cmp insb xor fstpl dec dec dec jbe add xor add inc or orl movsb inc fimull or dec add in movsb xchg adc inc adc loope outsb je jae dec add bound and add mov cmp dec js inc adc mov mov pop in popa sub outsb or movsb cs add jb push jmp mov pop arpl loope adc jnp cmp je fwait add cmp cli mov pop inc add popa pop xor pop jmp xor das inc pop inc adc fimul inc xlat add jne bound sbb xchg out xchg and inc leave inc cli adc movsl daa sbb jne adc mov push or rcrb jne insb inc je fisttp add popa daa jns xchg xor arpl fs gs imulb jns mov idivb andl dec inc jbe push xor mov xor adc insl fcomps jecxz cmp fnsave mov add jbe ja std xchg les outsl add js (bad) (bad) xlat sub popa fwait xor xor or (bad) into sti insl cmp mov ja cmp pop push xor in pop inc sub and shufps push xor cmp (bad) pusha in lret dec fwait inc or insl xor jecxz jmp inc sub mov jo pop and push push and imul pop pavgw jo add xor and (bad) mov dec jo je push out xchg mov (bad) repz les push arpl jae sbb ret jmp or add push inc imul sub push pop fidivr imul in int cmpsl addl bound push subl inc pop insb or adc cmp fadds xchg leave mov xchg rcr push imulb data16 jecxz outsl imul fimul dec xor add out mov xor pop insb inc imul mov std aas insb pop and mov mov xchg ficoml add mov addl push adc daa je jne add or jb incl sub jmp fs rorl push test loopne or xor add mov lds movsb xchg or fmul xchg lahf adc orl adc cmp and cmpsl xchg int inc je inc adc cmp jl or add pusha mov or dec mov pop insb mov mov fstpl push test loopne flds outsb xor add add lcall pop nop jne lds jge lea adc (bad) dec not sub xor or insl adc add test int3 inc pusha inc cli movups mov imul xchg xlat add (bad) incl push push inc push lret and imul mov in (bad) pop add mov (bad) cmp inc push pop inc outsl fs bound outsl xor imul fisttp jo,pn bound add ret cld push adc xorl adc cmove push test sbb rolb inc cmp mov jecxz sete adc testb add (bad) or les add sti xor dec iret fwait pop rolb push add nop or movsb daa inc push lods mov punpcklbw adcl ret (bad) or pop (bad) pusha pop repnz movsl mov outsb test jg inc inc jns or mov and repnz cmp ret jnp or daa (bad) insb popa xchg movb enter xchg int3 pop rclb rcl aas test and xlat pop iret faddl ret jo sbb mov mov out push cmpsl jo test sbb (bad) or pop add sbb cs sub adc mov or and inc push or and sti push sub ja sbbl sbb sbb sbb sbb stos add dec testl mov js xchg jae nop roll add push sarb rorb pop test leave or xchg sbb das sub sbb and or addl add out popa imulb adc popa push jl add and and and scas daa pop dec jo sbb cmp and (bad) or inc or shrb add pop sub nop mov fstps sub cmp xchg sub pushf inc add nop inc lret sub push add ret test pop mov mov pop jbe inc push push mov mov pop add xor in movsb adc iret je sbb adc xchg and adc fsubrl sbb aaa push pop aaa test lea pop inc pop jmp daa cmp pop out pop sbb fwait push sbb andl test fsubrl imul sbb mov xchg mov push add outsb add (bad) or imul scas lret fdivp inc adc arpl imul insl fcomps add sbb adc inc ja mov loopne jae add (bad) ljmp fs or je outsl fs nop inc xor push shlb outsb sbb (bad) je je outsl inc outsb jns insl stos xchg mov sti pop stos lea bound jae fldenv jb (bad) out das push xor add sub xlat sub mov or xor push inc xor sbb sbb or mov push lods jbe fdivrl bound data16 push popf popf push arpl aaa imul gs adc push shll inc jbe out das sub outsb addb or std in or add push add add lahf imul pop add add jne daa dec xor out int3 add mov mov das scas jmp (bad) push sbb pusha inc jge and pop adc push pop jae pop pop pop jo jmp pusha pop xor push push pop push sbb pop pusha pop and mov sldt addb mov push loopne push pop pop pop inc in push sbb pop nop push push pop roll and pop roll mov adc push mov pop mov or mov insb mov dec pop lock pop jmp roll pop adc push pop jecxz insb mov push sub je xor mov push sbb jg pop fs xchg test pop test fsubs inc pop call rorl pop sbb cwtl xchg fsubs pop push pop jl cmp fsubs or lahf pop pop insb pop fsubs or or pusha orl jg or push pop adc mov and jb xor fsubs aas (bad) decl pop bound fsubs or add pusha orl jg or pop pop sbb xchg or inc pop jp cmp fsubs pop aam adc push mov or lahf mov push cmp jg push sbb push pop push push shlb (bad) mov xor jbe orl decl pop data16 fsubs es lods bndstx fild jg mov push or pop pop push pop mov push sbb roll insb ds fdivr sbb push sbb pop cs mov nop roll dec pop cld inc sbb push pop adc mov xchg aas insb mov imul pop nop roll mov insb dec sbb loop pop pop sbb xchg (bad) jns xchg ljmp insb mov pop sub mov xor pusha xchg pop dec pop repnz aaa fcoms pop mov shrl add jne xor imul pop fsubs sbb ss ss pop ljmp or jge shlb pop cmp or fsubs sub imul or adc ret orl xor (bad) mov or cmpsl and sbbl addl pusha inc shlb out pop pop fcoms xchg (bad) jnp ss cmp (bad) ljmp mov orl xchg push sbb mov dec pop idiv xchg pop pushl imul insb mov pop daa pop scas sysenter fsubs fild or pop pop pop pop sahf orl aas pop fisub or das pop push cmp mov dec sbb mov pop (bad) inc xchg mov sub dec xchg fs sbb xchg leave test sub xchg sbb movsl sbb xchg in aad mov dec xchg sub in popf sbb xchg fnstsw sub mov jecxz mov mov xchg mov sub dec jmp dec xchg sbb sbb movl sbb mov mov sub dec xchg fs fistpll (bad) jg lahf push pop fnsave (bad) out add fild pop pop movaps mov pop cmovo fistp popf aam mov add loopne in or fistp arpl pop rorb aas add in nop inc sbb pop orl add enter add xor or cmp mov fcoms xchg jae mov mov test sub xchg fs mov and jb sub pop adc adc sbb pop je fbstp sub add (bad) rclb xor outsl push jbe stc ds incl add and cmova jmp and inc loopne mov adc sti bswap inc adc aas inc push jne roll lds (bad) add enter xchg sub sub and add adc les or incl or arpl or push inc les or pusha (bad) jns and cmpsb fild mov aas sbbl mov test inc or das inc pop mov sti lods fisubr iret mov mov outsl jmp idivb or push ficompl pop pop fisubrl sbbb xor rcr fsubp nop xor (bad) mov stos inc mov pop test paddsb adc stos test and inc mov imul sub fnstenv mov das pop jmp jg adcb pop cmp mov sbb mov push adc ret or or fsubs pop or or fadds sbb push adc sti pusha orl pop and enter xor fsubs push pop push pop pop (bad) test pop fwait pop insb mov loopne add jb push das mov push sbb pop push pop sbb inc xchg add pusha orl movsb outsl orl lahf into pop xlat es or and and inc inc adc inc inc fwait out jae jnp pop mov pop adc inc imul adc xor pop sbb pop pop sbb dec mov aam sbb jne fistl lock inc das clc rorl inc inc cmp pop js pop jns inc jp lds jg cld call rorb or or aam or (bad) into add or sbb inc add js add fildl adc cmp pop ret or das pop test mov jae sub testb or add pop outsl and sbb push insb lcall cld push imul cmpsb imul imul cmpsb imul jl push lcall xor cmpsb imul in fsubr dec xchg or sbb xlat cmp add sbb imul or nop mov dec pop jo lock fsts push cmpsl push inc aas sbb sbb mov mov adc inc add call (bad) aam scas dec or ret or repz fldenv fdivs add add push and lahf ja pop ja mov (bad) daa das add sub fild je (bad) xor or cmpsb jmp addr16 ja mov mov xor hlt fwait cmpsb pop mov cwtl js (bad) (bad) (bad) (bad) in push pop insb push push sbb fidivl mov test adc fwait mov mov push xchg (bad) (bad) ljmp mov and fstp push out popf mov ret mov loop bndldx dec jl (bad) (bad) incl dec pop sbb and les lods jno adc fadd loopne cmp (bad) (bad) jmp jl popa pop idiv (bad) lahf out jl (bad) jae mov cmp inc add sub test (bad) (bad) (bad) (bad) (bad) fwait scas add lret mov pop sub sub into ds out push test (bad) (bad) decl ljmp mov loopne sub test fdivs out (bad) (bad) (bad) pushl push cmpsl decl jp add pushl scas sbb cli (bad) lods insb (bad) (bad) (bad) dec dec lahf and mov int and sub fcoml cmpsl dec (bad) int3 (bad) (bad) (bad) (bad) ljmp sbb outsb into movsb adc dec repnz sbb insb stos xchg sti inc data16 icebp xor xchg (bad) (bad) (bad) decl sub ret push xchg xor stc call scas inc mov pop icebp mov (bad) decl and lds and lds xor inc jns adc jg xchg xlat pop out push xchg push neg push lcall (bad) (bad) (bad) jmp jl jp lds dec xchg jg and std into inc in and push (bad) in (bad) call in movsb xor insb dec dec or mov cmpsl ror sub (bad) (bad) lcall rorl mov test jbe mov lcall in lods xor and mov jmp or or inc mov jne loop leave jns popa aad (bad) cmp push jecxz scas xchg (bad) lcall pop out pop mov inc (bad) nop sbb push mov outsl pushl insb pop mov rcr loop sbbl pop jne sar (bad) (bad) decl mov mov cs pop or jo cmpsb mov call (bad) (bad) (bad) out sub push pop (bad) dec adc sub xor aam sub or xchg les xchg cwtl imul mov dec hlt jne js loope cmp (bad) (bad) (bad) incl (bad) notb push inc lock inc dec popf add and dec lods lods (bad) (bad) fcmovnbe ljmp xchg (bad) pusha les stc mov out xchg adc ljmp in cmpsl stos cmp push xchg pop imul pop mov in push lods outsb test (bad) in (bad) cmp or push call or mov jl rcll gs clc pop add js rcr negl mov and adc test (bad) (bad) stc dec sbb sbb push sub inc ja fmuls hlt (bad) ljmp std in pop cmp (bad) pop xchg ja,pt unpcklps xor sbb repnz jl lcall xchg jp pop mov outsl add gs scas mov (bad) (bad) (bad) call loopne add push cmp jmp and movsb sub or (bad) (bad) (bad) decl (bad) jp pop push sbb in mov xor push mov insl and cmp nop sbb pop add mov xchg mulb mov mov cmp jmp jbe and (bad) (bad) (bad) fsubl xor or xchg nop adc and jp and (bad) (bad) ljmp xchg inc adc pop int3 pop (bad) shrl lds push repz jmp cli dec incl lcall ret (bad) mov inc adc jecxz pushl (bad) pushl fidiv in fsubrs dec loope dec arpl push and (bad) (bad) (bad) jmp pop out cwtl mov inc xchg adc pop jbe cmp mov test (bad) jmp cwtl and mov (bad) jb inc mov loop aaa aaa mov jge pop out lahf (bad) (bad) (bad) pushl out push mov jnp xchg jl cmp and sub or dec hlt mov (bad) (bad) (bad) pushl out mov sub dec jb xchg dec and mov xor outsl into push das cld (bad) (bad) std daa in loope xchg adc xchg mov adc popf cs (bad) (bad) incl imul fadd std cmc or push int adc push fiadd mov (bad) (bad) (bad) (bad) fldcw jl adc jae nop out jl adc (bad) xor fidivrl jge movsb cli in (bad) (bad) call sahf sbb mov pushf adc aas arpl mov dec add test icebp (bad) (bad) push inc les aaa arpl jge xor cmp jae inc (bad) dec (bad) int3 jmp (bad) (bad) (bad) mov sti movsb sti mov mov mull shrl jno (bad) (bad) (bad) pushl sti cmp cmp pop loopne jo mov sub sub pop lock (bad) (bad) jg pop xchg lret xchg repz aaa icebp in mov aas lock sar leave dec cs or jmp (bad) lcall xchg fisubr (bad) ss divb pop pop loop mov (bad) call sbb in lcall push xlat pop dec outsl fwait mov (bad) mov or (bad) incl mov popa mov dec jmp sbb (bad) (bad) (bad) (bad) fcoms xor les (bad) ss jne fistpll add mov jle sti jge iret ja (bad) (bad) dec stc cmp daa cmp jnp mov sarl push and cmp shlb sahf mov pop jno adc lods (bad) push mov lret mov dec mov (bad) (bad) incl cmpsl fwait or loope mov stc inc xchg xor pop test loop mov into lods (bad) (bad) (bad) push fnstcw xorl nop loop scas int and fisttpl push notl fs inc inc insb ljmp (bad) fstps pop push fprem xchg sbb or insl pop icebp frstor lds sub mov push fidiv mov (bad) lock and (bad) (bad) inc pop dec mov push gs dec xchg inc and xor in jp xor lock sarb inc mov or fdivl push push les (bad) ljmp addl out jmp mov mov xor pop fdivrs cmpl ret (bad) repnz pop enter pop imul cmp sarb mov in hlt popa xchg jne push push stos xchg jbe sar (bad) (bad) call pop lcall gs cltd inc dec lcall in xor in repnz (bad) (bad) (bad) cmp fmull xor mov mov mov nop dec cltd (bad) scas push ror in (bad) (bad) pushl xor scas push ret out dec xchg fs dec addr16 xor fucomi std mov (bad) (bad) (bad) (bad) mov pop into lret mov addr16 mov xor js xor dec mov (bad) (bad) pushl pop xchg aad pop enter push repnz mov popf adc pop and mov xor xorl insl mov (bad) fnstsw or adc lcall push inc call pushl (bad) incl sub into pusha (bad) adc mov lret pop je mov insl test pop pop (bad) ljmp mov pop cmc out adc push clc sahf adc (bad) (bad) (bad) ljmp cwtd lret jae and out mov fdiv jb mov jne push (bad) pop pop and push (bad) (bad) (bad) fistp sub data16 adc daa subl jge leave pusha lahf (bad) (bad) (bad) (bad) in cmp push ss insl in mov cmpsl lea (bad) inc faddp nop lea std ljmp (bad) repnz push pop rcll gs cmp pop add gs jg aad sbb aaa mov sar sbb mov outsl and call lcall aas push pop add add push in xchg (bad) mov sbb mov push push daa nop pop cmpsb jp jbe loopne push cld (bad) inc cmc pop lea arpl xor or adc mov (bad) cmp push jne push cmc or hlt push sub aad js sahf mov int inc icebp cld (bad) (bad) decl add cwtl pop mov sahf mov dec mov (bad) jno sarl mov push test jg outsl aas rcll sbb divb lods cmc add sti jmp mov mov xchg bound adc jg (bad) push movsb mov inc icebp xchg cmp sub stos scas enter xchg cmc mov call jmp or shrb dec sub cmp sub pop in dec push lcall ljmp dec dec sbb rcr push inc ror notb rol jae jmp (bad) mov (bad) (bad) pushl sub pop xchg (bad) sahf in push sub addr16 cmp push bound in jg push xchg dec inc aas sbb mov mov stos pusha mov outsl lock das add xor xchg rorl lcall mov mov xlat xchg insl shl and jg test std (bad) ljmp jae add jg mov insb push sahf pop jbe (bad) ljmp push test scas xor or or ret addr16 xor mov or rorb fsubl lods mov outsl call inc or or daa fwait incb (bad) mov (bad) jg jg sbb jg outsl jecxz (bad) cmc cmpsb mov decl xchg outsl lods xor pop pop scas pop dec pop cltd movsl dec mov (bad) call cmpsb insb (bad) enter fs sbb pop jne xor fidivl incl lods mov lods cmp pop ljmp sbb mov psadbw out jnp idivl adc jg decl cmc add and jo sub add xor mov (bad) cs (bad) lcall cmp jge pop inc sbb cmpsl mov xchg popa xor stos mov (bad) (bad) (bad) ljmp (bad) xchg (bad) out fwait (bad) jne xor jne arpl jno pop jecxz xlat fldenv (bad) (bad) call jl cmpsl sbb inc std jmp adc in test in insb xor push jne insl lret cld (bad) (bad) pushl int in sti add ss push xchg dec sbb das mov mov mov cld idiv outsl push rcrl out popf in jo (bad) jl push push arpl dec dec in (bad) ljmp inc (bad) mov ljmp pop dec lods movsl cli sti in ljmp gs jge and repnz pop or call cmc (bad) (bad) mov mov jb dec cmpsb nop stos jle scas icebp sub (bad) jmp adc push out mov inc ljmp jp xor cmpsl jmp gs pop push idiv (bad) call iret hlt push add divl into mov aas imul call fdivp jb or pushf pop sbb jae or push jmp cltd out incl (bad) pushl ds xchg frstor leave sub adcl loop adc xchg cli (bad) call mov movsl pop fildl pop sarl das stos lods inc stos jno leave imul add int scas dec (bad) dec xorl test mov cmp ljmp lock pop add mov clc sbb sbb adc repnz cltd mov (bad) (bad) sub sub mov mov ficom lds (bad) (bad) (bad) fcomip (bad) and outsb pop lret mov pop and in pop addr16 jp mov outsl (bad) incl fld dec adc dec mov test ret xor rcrb fcomp sbb hlt or popf fadd jl fild sahf neg addl out pop jno mov int3 xchg inc pop or pop aas cmp sub push sahf mov hlt loopne out and lods test in in push in (bad) cmp xor gs (bad) (bad) ljmp fisttpl popa sbb sbb mov sub sbb jmp jmp lret mov pop lret (bad) mov jg inc ficoml scas (bad) aas sbb push adc cmp cli (bad) (bad) mov mov and push cmc sub (bad) cli dec aam in sahf loope fcmovnu stos inc subl (bad) xchg fnsave (bad) pushl cmp push adc dec mov ret mov adc inc negb adc (bad) (bad) decl lock aad and dec (bad) mov push shlb js pop outsl std (bad) pushl cmp lcall lods xor jp in stos subb ret dec mov jp gs andl jns (bad) mov inc (bad) (bad) (bad) in clc int inc mov inc push jo imulb mov inc xchg (bad) (bad) (bad) incl enter (bad) sub gs xchg push mov int mov cld jmp js xchg push xchg ficompl fisubrl (bad) (bad) call cmp cmp fwait xchg cmp inc mov aam pop mov ret lock std sbb sbb sub push xor sub (bad) ljmp dec out call mov jmp les mov popa xor mov andl xchg popa adc aam or push inc ficoml in jecxz sbbb sub xchg push mov (bad) (bad) fstpt add jno dec sub std mov sahf stos icebp add mov mov aaa fiadd lock jno xchg sahf imul mov ds cld sbb and outsl fidivrl addr16 ds jge in das out std scas or dec pop stos into dec or cmpsb shlb mov cli dec stos ja xor pop out insl out cmp pmaxsw dec pop icebp (bad) jmp xchg adc dec sbb leave cmp in and xchg and xor and (bad) (bad) (bad) out xchg imul xchg xor add mov mov jecxz dec inc imul jmp repz pop jb sub outsl jbe outsl jno inc or jne negb incl lret mov stos push repz orb xor mov push lods fimull dec rcrb push (bad) (bad) (bad) std out xor sbb jecxz mull lahf dec cli xor sbb outsl cld aaa decb pop jl hlt jns inc es aam mov adc (bad) (bad) dec jmp fsubrp inc push mov iret (bad) jecxz and dec pop mov ljmp (bad) (bad) ljmp mov aas pop pop subl (bad) hlt jnp sbb inc mov lea dec adc cmpsl mov xlat mov lret push sbb sbb in inc xchg mov push xor test (bad) pop icebp add loope (bad) jg fucomip and pop ljmp add inc xchg ja (bad) (bad) (bad) ljmp mov cmpsb fsubrs vpunpcklwd in push mov (bad) (bad) pushl push pop xor loope add in je arpl (bad) (bad) (bad) pushl fidiv mov lods mov in or inc sbb xchg test out jecxz stos mov hlt sub fwait dec xchg shlb jb sbb inc psrlw (bad) (bad) (bad) inc inc inc mov inc or lea ret dec je leave inc aaa dec mov bound mov or (bad) jmp adc (bad) push jmp xchg imul insl add (bad) (bad) (bad) lcall push lret mov cmp push bound mov enter insb int and mov jmp sub inc cmpsl mov bswap mov lret mov dec mov sub pop mov call push push push push xchg roll into hlt fcomi out jno iret push mov dec out pop loop testw ljmp cmp in add (bad) (bad) (bad) decl iret sub sub dec int3 dec lods test dec xchg jns repnz push mov andl test push cli cli dec pop in test mov jg add les mov xor mov lahf les gs shrl or mov jg ljmp jbe sub sub dec mov loope jmp sub inc inc leave mov pop mov jmp shr (bad) dec or sbb mov cmpsl fnstenv mov lea cmc jg das repnz add test rorl pop xchg mov mov pop adc jo sbb (bad) (bad) ljmp movsl mov (bad) lea pop loop adc outsl je mov test cwtl clc (bad) (bad) decl xchg sub int inc push mov test dec push lret pop jno aaa inc dec jno or mov lods pop outsb iret subl sti push dec sbb mov lcall (bad) mov dec imul in int pop (bad) fsubrl cmc into pop cmp dec push xchg popf jno outsb lahf and and cli mov and ljmp ja loop push clc flds inc dec mov inc xchg int3 inc dec xor jg dec mov je test push loope inc dec cltd jmp inc ja nop mov ret cwtl loope (bad) (bad) (bad) pushl pop adc xchg sbb jl lea mov mov mov inc loop adc jbe notl (bad) ljmp dec pop fsubrl pop add mov rcl outsb fildl popf or mov (bad) pushl xor cmp mov xchg inc sub pop fidivl cld xchg sbb jns call int3 mov pop loopne jg (bad) (bad) loope lock jecxz jl gs bound (bad) sub (bad) (bad) (bad) jns leave sub int3 mov dec adc (bad) dec mov xor jp (bad) lcall pop addr16 cmp (bad) and cmc push cs push push add mov dec idiv pop push (bad) decl (bad) mov jo mul or dec loop rol push bound pusha cwtl add dec inc sbb rolb pop and xchg mov into aam mov imulb adc and xchg (bad) (bad) lcall addr16 inc inc jle dec xor bound jae outsb divps or inc add enter mov mov sub jns mov and push pop mov mov gs (bad) (bad) (bad) lcall push fisttpl dec or ja (bad) mov fcompl pop (bad) mov jne cmpsb mov ljmp pop fidivrl sbb lds pop js jno cld (bad) decl sub xor sbb addl cmpsb fs lock adc mov inc aam (bad) (bad) popf in out stc into cmp std repz and add (bad) (bad) cmp mov add mov sub lahf aaa mov (bad) jno sbb pushl jnp adc enter lds data16 xlat adc (bad) (bad) (bad) in xchg in stc lret mov adc fs mov insb aam in and mov rcl repnz dec mov jl (bad) lcall imul dec loopne pop push and (bad) incl bound adc push push add (bad) bound mov leave int3 subl ljmp leave clc rolb push or fistpl bound inc xlat fidivl gs pop fcmovb inc mov in and (bad) (bad) (bad) jmp jns sti mov sub repz xor cmpsl loope in icebp cltd inc mov sbb cmp sbb push roll or (bad) call pop mov inc mov sub inc lret test ss pushf fwait jle pop (bad) (bad) call mov insl and sahf cld lods cmp fistp pop pop js test clc or pop push mov mov sub out dec hlt fiadd and xchg jae fildll icebp dec jecxz cli or lcall jno (bad) mov lcall push lods or sub leave cmpsb ljmp pop cmp mov cltd aaa rcrb ja push mov iret or lahf outsw (bad) (bad) jmp mov fiadd push loop pop xor lahf push mov and mov inc test jmp dec repnz es xor mov imul fs sbb ret clc xor in push rol push xor arpl push stos clc (bad) (bad) call xchg sub outsl mov adc adc push cld pop adc mov pop push lds push dec add inc mov outsl pop cmc inc dec jmp xor pop ljmp sbb sbb popa gs add lock mov pop incl loope movsl rcrb (bad) fisttp iret jmp xchg jge loop ja sbb cli push cmpsb add cltd and pop xor popa mov call clc fsts mov xchg pop es add outsl call jg loope in push out pushf enter (bad) aam sar (bad) jmp adc jae movsl int3 imulb push repnz sarl (bad) pop fbstp fdiv (bad) (bad) mov mov repnz jle lea add inc je and lret decl jmpw out xchg jbe mov sbb xor into (bad) (bad) pushl cli js test and daa dec dec fimul and xchg jmp (bad) (bad) fnstsw fcmovne aad push cmp cltd fwait dec leave cmp xchg decb (bad) ja sti das hlt (bad) (bad) mov xchg fwait std dec fildl pusha fcmovnb xchg stc imul stos dec xor shrb scas cmpsb imul ret ss insl (bad) lods xor dec pop or mov inc in and sarb loopne add add dec jmp je push shrb adc inc aaa add (bad) (bad) inc sbbb inc or cmp or inc in dec or adc push (bad) jecxz (bad) jmp loopne dec mov sub xchg lret (bad) (bad) (bad) inc xchg bound orb cli enter mov je xchg jmp (bad) (bad) (bad) jmp lea cmpl scas push mov adc (bad) (bad) (bad) (bad) clc mov mov mull push sbb and mov or jmp jmp (bad) (bad) incl dec mov sbb xchg pop jo fwait pop mov sub addr16 shlb (bad) decl dec pop sbb out lret mov les sub mov dec mov (bad) (bad) inc mov and in hlt xchg inc or in xchg leave dec xchg xchg jle ljmp and jnp movsb pop mov dec sbb fldcw xchg rcrl mov (bad) out mov or lods (bad) (bad) lcall (bad) leave (bad) push mov jbe daa cmp je fstps xchg xchg call dec std clc (bad) mov hlt fsts mov repnz jmp mov xor mov adc out div scas mov imulb mov pop pop adc jbe jecxz sub (bad) incl ljmp and hlt adc jp cmpsl (bad) dec or mov or inc call ja dec shrl aaa sub lea rorl cmpsb lcall (bad) fcmove test mov (bad) jne imul xlat movsb fimul (bad) (bad) jg xor jg push mov cmp xor (bad) jg inc fdivr lcall sbb fsqrt inc in stc pop popf nop cmp call sbb out repz in decl jge mov repnz and dec loopne mov cli lods (bad) lcall call mov lcall xchg xor out outsb push loope sub gs je getsec pushf dec sub jmp rorl fidivr lock lock repz xchg fistpll (bad) ljmp jp push push pop mov jle fstps adc mov mov xor dec sbb mov cmp push push push lcall cld dec fwait notl (bad) pushf arpl pushf push inc je xchg je jo loope call fdivrs adc inc popl mov clc xor (bad) ljmp push sub gs out jae or sub (bad) fstl and std (bad) ljmp mov test mov cmp pop ja mov add scas cmpsb jp mov xchg loop mov les pop mov xor ret scas pop (bad) (bad) pop cmp (bad) (bad) incl je inc cmp cmp xor sahf (bad) mov mov push imul stc ret mov xchg cmc push push sahf jl outsb or or cmc and jne (bad) mov mov imul cs jl mov dec push int3 mov xchg (bad) sbb out mov rorl (bad) and lcall movsl fcmovu movsb movnti call pop mov mov and jg mov std add or xchg dec mov sbb sub idivb pop adc mov stc sahf and scas fstpt sbb xor xchg in pop add call inc jle mov pop cwtd stos (bad) xor cld (bad) jmp pop out dec mov pop pusha jge xor sbb pop mov jno add xchg jp in jmp in daa ss or mov sbb (bad) (bad) lcall stos in push imul dec (bad) out or adc add (bad) ret fimul lcall (bad) in leave mov push into subl xchg dec leave movsb lret and xchg gs test pushl xchg adc sahf mov and pop orb ljmp add sbb ficom jb stos cmp (bad) (bad) decl sbb xchg pushf jle push xlat shrl dec (bad) (bad) jg faddp sti jmp gs (bad) (bad) (bad) mov xorb mov aad add out in popf movsb push mov dec xchg cmpsl mov mov inc ret mov cmpsl inc cmp clc adc xchg addb or fild push and mov nop popa in add pop std mov lock cli imul (bad) (bad) lcall xchg add push les adc cwtl mov sahf cs je sar dec jg cmpb jae pusha adc std hlt or adc das lock rcrb ljmp arpl (bad) (bad) ljmp sub (bad) push js sbb or in add ror nop and (bad) decl push into mov in xor xor (bad) mul cmp mov mov pop loop cmc pop lret mov xchg or xor xchg push mov mov (bad) (bad) pushl aam add push and xchg push or pop mov push cmp insb pop push push xor dec cmp fidivr mov test out push icebp mov (bad) (bad) jns pop arpl dec leave push mov pop cmp xchg lcall (bad) (bad) lcall inc pop dec lret les lahf sbb push fsubs in add test stos cmp idivl and push jns cmc test or insb and lret mov jg (bad) jecxz daa dec das xor add lcall daa vcvtsd2si dec pop das leave push (bad) fist out and cmp cmp xor push (bad) mov xlat or test test fsubrs pop rorl loopne sbb adc push sub lahf or (bad) (bad) mov ret xchg jo test xchg mov inc mov lahf adc les ljmp arpl dec mov (bad) ja outsl call (bad) testl cmpb inc (bad) cmp sbb jbe mov mov (bad) loop add aas pop loope push mov pop or sbb sub or fwait aad (bad) and or test sub test or xchg pop or mov push sbb mov mov sti mov add lcall (bad) addr16 jae inc repz pop shll xchg movsb sub (bad) (bad) decl negl push (bad) jnp mulb aas mov mov cmp jp jge lcall jl pushf out out pop in jmp xchg jno aas lock (bad) (bad) jmp sbb ret jmp ljmp aas js adc xor or insb pop xchg mov cmp aas cmc outsl shr xchg ss sub cmp (bad) incl mov sahf ljmp dec iret or mov jmp (bad) (bad) cmp jmp lret and std jp daa ja imul xchg movsb je and loop (bad) mov ja mov lock in dec mov adc sar ljmp ds ljmp call inc mov xchg inc daa std jg (bad) (bad) mov lock mov out imul jne or cmpsb cmp (bad) (bad) (bad) (bad) out ja das dec jge push jne push mov xorb loop rorb and test lock decl cld cld repnz iret das aas or ljmp outsl imul scas in push aaa push out clc or mov jg int movsl mov pop (bad) ljmp pushl mov dec out cmpl call lods loopne enter (bad) idivl stos mov adc mov (bad) (bad) (bad) call lretw stos dec push push (bad) mov dec push xor aad fidivr (bad) (bad) jg cmp fincstp cli sbb fcoms xchg mov or insl dec mov dec adc (bad) mov fist lock and jp jne jecxz sbb mov out add (bad) lcall dec mov call xchg sti inc aad cmpl (bad) (bad) jmp push adc fimul std pushf jnp inc jns imul mov fucomip outsl loop lret dec push gs push aas or and cltd mov add sbb inc add pop xor jl push mov inc fisub test xlat xlat mov dec (bad) (bad) (bad) ljmp cmp xlat sub push mov adc ja pop adc jle cmp mov sar xchg addr16 sub xlat dec cmc mov sbb adc movsb dec adc clc (bad) in jnp add mov mov das push repz dec rcr test (bad) pushl daa imul pusha (bad) js or sub sbb add out cs pop loop pop and fisub leave mov int3 jle int3 lods adc mov pop pusha mov xor fisttp cltd test pusha jp je mov adc stc (bad) jle add add push mov das push (bad) mov cld lods enter ljmp test outsb scas jo mov lods cmp lods jle dec incl dec (bad) (bad) in lcall ss repnz push pop push dec pop xchg jle iret std jmp cmp sbb ljmp cld nop or in mov sub and addr16 std aaa clc mov ret (bad) scas dec movsb cs mov lock (bad) ljmp add cwtl add jns out cmp fdivrl out xor jge xchg add (bad) lcall mov adc orl jle,pt pop (bad) nop data16 push daa cmp jp push adc jmp add sbb sbb repz stc add cmp xor jbe push lcall sub mov jne insb jae test popf pusha xor cmp adc lock add inc (bad) test jno xor dec pop aas leave cltd outsb mov insl jne je loop (bad) in mov ror pop call shll jge xchg and clc addr16 (bad) inc ljmp lahf and out inc xchg or dec lret in fsubs pop pop mov (bad) pushl cli shrb pop sbb aas movsw decb enter cmp mov dec std outsl icebp mov mov nop ljmp and call clc pop inc fucom sbb imul adc mov fistpll and (bad) (bad) mov inc pop xchg aas outsl mov ficoml mov jl cmc outsl mov mov cmp dec add jnp adc mov ljmp pop mov mov jo or mov loopne (bad) (bad) call loop inc and int out dec push cmpsl xchg and and adc xchg popf fisub xor call pop dec js test js xor jge add call pop dec insl andl adc test xchg (bad) (bad) lcall dec mov push mov lret (bad) (bad) (bad) (bad) hlt in mov outsl aaa and xchg std sbb stos sarl push mov aad loope roll imul sbb adc sub sbbl xchg leave loop push (bad) (bad) inc jmp lock push arpl sbb arpl ljmp jno or rcrb movsb ja nop and (bad) (bad) cmp insl adc inc test or mov in jno push negb (bad) mov pop pop cmpsl imul fcomps sbb jle sarb add mov cmp aad stos pop mov jge inc pop xchg stos insl cmp idiv (bad) (bad) lcall in sbb lcall enter xchg xchg je cmpsl das lock decl jb fnop xor jb clc mov (bad) push mov cmp inc and leave je dec (bad) in (bad) jmp mov push add push and shl or popa aam (bad) mov hlt push push hlt push push and adc push add and add (bad) (bad) fadds inc es dec mov and orl (bad) fild stos lods repz mov popf or (bad) (bad) lcall and jo int3 pop iret je add mov imul stos jg or popa sub hlt (bad) outsl xor fs sbb cmpsb stos adc pop jl mov cli cmp mov mov xchg cld decl std lock mov sbb ss push push andb sub cltd lock in mov loopne jg test aaa mov decl outsb shlb fimul cltd dec or (bad) int3 test popa pop pop (bad) fucomip jg mov pop jl fldenv adcl ds fisub pushl pop test data16 and and mov jae jge mov sti (bad) (bad) lcall test mov xchg popf or jg (bad) mov mov outsb or inc lea push into mov bnd into xchg insl pop loopne aad lcall test vaddpd int3 repnz jno sti add ds pop mov xchg mov sub flds add js call outsl hlt cmp adcb add sbb cmc cld fucomp (bad) jmp test loop xor fstps push inc lds ffree mov rcrb repnz pop call clc pop lds jbe push fidiv aam rcl mov (bad) (bad) cmp lret push add ficoml cmc pop xchg pop das xorl inc mov push add cmp decb pop push enter cmp test into cmc lcall ss add shl and pop or push lret mov lods xor push jno pop in int3 pop mov push stos mov (bad) jl xor pushf and std inc ret ljmp jbe jg gs jl repz mov (bad) decl push push ss aad push cmc add pop add int3 (bad) (bad) pushl inc pavgb iret fisttpl mov xchg dec mov (bad) (bad) (bad) (bad) decl andb sbb adc mov pop movsb scas repz hlt test outsl cld pushl push push scas adc arpl test ret cmp icebp xor dec out ret (bad) lcall (bad) (bad) fs sub aaa mov mov sbb (bad) (bad) (bad) lcall nop aaa lds pop (bad) adc mov jle or xchg or mov in ret popf fisttp movsl jg jge xchg cli dec xchg fs xchg (bad) (bad) (bad) (bad) mov xchg push aaa jbe and push (bad) mov imul xchg scas adc pop fsubs pop (bad) (bad) jmp fiadd xchg xor sbb fs aam and inc into in (bad) (bad) ljmp mov xchg push nop jp dec mov mov inc push stos daa add das lock adc jle fcomi loope std xor push test popf adc icebp aas sbb iret push ss sbb movsb or and inc imul jg (bad) lcall adc add sbb and sub cs (bad) (bad) (bad) (bad) daa cmc mov dec mov add pop jge push scas cld cmc adc call pushl add orb clc xlat inc add lea (bad) incl and push js ss gs mov iret flds cmp in cli (bad) pushl scas xchg xlat fnsave cmp lahf arpl dec dec stc jns sti test (bad) jle ficomp imul sbb leave ljmp call adc out cmp nop inc add ret imul lds scas aaa insl and cmp test shrb (bad) (bad) decl sbb loop stos (bad) fs xchg jl or sub dec sub push popa add cmpb jb into pop mov icebp (bad) push cmp scas and adc sub (bad) dec in fcompl into push (bad) incl (bad) jmp fdivr push lock xchg dec ljmp (bad) in push call repnz out mov xchg shr sbb mov popa lahf fidivrl jl sub mov ds push clc (bad) lcall push les xor sti mull pop fwait test pop clc outsl sub adc inc sub add nop and or push (bad) lcall fisubrl fnstcw fldcw call mov or jmp jmp stos ret cltd jno data16 mov fsincos sub incl test mov pop ret pop cld mov clc test outsb cmpsb and inc xchg stos mov rclb arpl mov cmp lcall sub sub cmp sub pop sbb cmp jge in aad daa insb out out mov pop in add ja push push mov ljmp push sahf (bad) (bad) (bad) dec pop add hlt rolb mov pushf popa mov (bad) fcoml inc ljmp call cli pushl ret push sbb push call mov jae jg (bad) call xor (bad) mov xchg cmpsb repnz lret lods push mov dec rol aas mov (bad) incl push lods jnp adc (bad) mov lods sub cli push jmp idiv lea ror dec xchg jge cli and jns push jl (bad) lcall addr16 push ret popa jp inc xorl hlt mov push jmp std pushl mov fiaddl lcall xchg repnz mov xor xor rol push and lea movsb xor notb (bad) (bad) (bad) jmp addr16 out loope subl mov or lock sbb jp decb outsl cmp fldt loopne (bad) jae mov daa imul outsl mov adc int mov mov mov xlat cmp (bad) (bad) fstps adc in stc push jp,pt inc paddb jo pop loope daa jl (bad) fildl decl (bad) and clc dec jns cmp clc push stos push mov insl in jne je in out push or (bad) (bad) jmp xchg sub mov push pop aam out mov out push mov xchg xchg xor lods ljmp (bad) mov cmp mov rorb ret leave std adc xor sahf les (bad) (bad) decl frstor cmp add addr16 scas push add scas imul cs xor ja inc xor (bad) (bad) decl sub mov cmp dec pop xor mov sub and repz insb mov cmp mov ret movsb jmp cmpsb rcrb pushf inc mov push jmp dec fisttp mov lea ret cmp fmull mov jle jne xchg mov or sbbl add daa lea pop clc lods pop mov pop and rcl inc in xchg pop pop leave inc inc or jno lds mov iret add femms lods push aad outsl lock xchg adc cmc incl js dec (bad) mov out and mov adc (bad) (bad) jmp popf cli ljmp repnz mov repz or push or add fisttpll (bad) (bad) inc test sbbl pminub push (bad) (bad) lcall and mov leave push cmp cmp (bad) (bad) (bad) jmp inc lcall popa adc (bad) mov inc insb orl pop jmp (bad) xor cmp mov pop or mov test mov scas out test mov mov adc fisubr and cmp insb xor cmp sti add xchg fisubl sbb add pop icebp pop xchg fs pop std or push dec (bad) jbe es jne (bad) (bad) ljmp sti push pop pop mull dec (bad) in and jne jp dec adcl pop fstps mov stc mov adc xor imul (bad) call shrl pop and std add test punpckhbw in lock jle dec pop sar jmp nop iret adc ja icebp leave and into jb push mov adc inc das and lods gs lds fidivr cld xor inc jecxz test (bad) (bad) incl sub and or icebp xor jo dec mov orb aaa mov mov mov jmp mov cwtl pop and add sub (bad) (bad) (bad) mov jp pop push iret jg imul push xorl mov (bad) (bad) pushl arpl ret sahf pop cmp lahf pop mov push fidivl movd jnp popa push sbb (bad) (bad) jmp call mul pop rcrb mull imulb mov int or (bad) (bad) ljmp adc mov loopne jns mov dec out out nop lods fs sub lock (bad) (bad) (bad) decl sbb jnp jl aam dec ror cld repz sbb in fwait or enter loop xor lret outsl sub mov add int shrb in add jg call lahf test pop test hlt ret jecxz mov adc sarb push andl ret inc out decl adc fdivs add adc (bad) (bad) ljmp outsl mov sti fadds scas (bad) clc sti xchg ljmp ljmp test push rcl fwait ljmp sti aam push mov fist shr and fs outsl jb inc dec mov movsl std or aad cmp jg mov xchg mov popf clc xor insb mov loop in in movsl gs ljmp aaa mov (bad) pushl stc add hlt or jmp push imul lcall (bad) pushl into stos ss push cmp aam cmpsb mov push (bad) sbb ljmp sti and fdivrs push pop popf xchg (bad) pushl cmc in or lret roll mov mov insb ljmp cld jmp adc dec lret aas les (bad) addr16 (bad) incb cwtl subb in sbb inc and cmpsl ret and inc sbb in mov mov pop cltd pop das cld pop mov cwtl sub fs inc rclb iret icebp (bad) (bad) ljmp push movsb cwtl decb lret mov int negl xor (bad) pushl push mov in mov lea mov hlt push call daa out dec nop daa sbb pop popf mov (bad) (bad) ljmp xchg mov loope arpl push mov cmp (bad) icebp out je (bad) (bad) (bad) cli push pushl imul bound out lret cld (bad) (bad) fnop pop mov inc cmc pop inc cmc std icebp imul dec enter mov ljmp inc xchg ja loope sti or into or mov or into xchg (bad) mov mov xor mov rcrl call mov jl dec jo and fstpl pop fdivrl cwtl pushf sti push (bad) jg ljmp add push push insb inc insb push shrl cs xchg std lcall lcall (bad) test adc aaa cmp scas (bad) fwait sahf rolb icebp sbb arpl dec xchg jne (bad) ret mov mov call test sahf popf stos inc mov ljmp mov gs mov sub shlb (bad) (bad) (bad) jge std jae mov cmp cmp out inc out and mov cmp pop push sbb mov ss inc push les (bad) push mov mov aad test test decl out push xlat cmp inc xchg (bad) cltd icebp into (bad) fsubr sbb lods mov popa sub movsl xchg aam push (bad) jno inc sar loopne je pushf movsl pop (bad) pop std loopne insb imul push push movsl roll cld das icebp decl and cwtl jbe xchg bound mov (bad) decl ljmp cmp fcomps cmp mov ljmp jns pop loope pop add mov xchg incl mov xchg aad outsb push pop aad aad cs mov fsubrl icebp mov into ss jae or mov jbe jne les fsts ljmp fcmovnbe push nop sbb sbb mov insb test fildl pop aas es sbb (bad) sbb sbb sub xor icebp out in and mov insb fucomip out push out pushf sub lcall push mov sub sbb jg out xor mov imul lds xor xchg (bad) (bad) incl pushf jmp (bad) insl xchg pop jae pop hlt xor lods mov rorl dec in loopne call dec movsl int3 (bad) and mov in xchg insl sbb dec mov pop loop push cmp es nop or (bad) imul push jmp dec clc cmp ror test (bad) (bad) jg clc in pop (bad) gs arpl adc into push (bad) push xlat adc push pop push incl inc adc popa push xlat test scas jae movsl (bad) (bad) (bad) (bad) jns inc sahf dec (bad) fdivrl mov cmp pushf hlt jg popa stos test sub adc movsl (bad) pushl push fsts lcall (bad) cld mov mov (bad) (bad) incl sub or push add xor pop mov jmp xchg (bad) mov imul sarl inc add orl ljmp jno fs leave xchg xor cmp sub mov mov fild pop xchg repz cmpl xchg push test fimul pop pop call inc (bad) insb mov icebp push enter jg cltd ret sub rcl mov loopne inc adc ret cmc (bad) (bad) ljmp movsl mov fstp pop ret jge (bad) (bad) push insb adc xlat shll hlt (bad) ljmp dec inc les out cs sbb dec push scas push push popa inc pop jp (bad) mov and push cmc pop das mov outsl aaa xchg loopne jae (bad) pushl cmpsl cmpsb addr16 mov rcl das jmp jae pushf mov decl and dec cltd inc sub clc loope popf test mov push ret (bad) (bad) jmp sub rclb cwtl mov xor mov (bad) mov add pop cmp (bad) xchg mov jg (bad) or jmp sub adc movsl loop lds add pop xor push mov sub push (bad) js push daa adc aam jae sahf mov aam or pop outsl and sbb lds imul lret add lret cmp repnz (bad) (bad) incl mov xor cmp es sbb lea ret mov icebp (bad) (bad) (bad) (bad) lcall es negl pop repnz xor ret das inc pop and ljmp fadds cmp jbe mov adc dec out mov scas dec orl (bad) jg and inc and cltd inc sbb sub sti (bad) jg lcall into add jae fdivr add mov mov dec outsl das aad std sub mov mov xchg jg mov add mov loope bnd in add dec dec xlat lret jae arpl movsb repnz (bad) lret or (bad) (bad) fistp xor xchg pop ficom (bad) cs mov lret imul add rcr iret sub lods mov (bad) cmp sahf mov push jbe mov mov push inc and lock push call int3 inc (bad) lret inc inc inc ret xlat cwtl pop cmp cwtl fcompl outsl cmc imul add mov add cli (bad) jg movb aas sbb adc add cmp (bad) ja cmp pop push (bad) adc push sti clc pushf add lods cld add mov inc inc outsl daa test popl add aam das in into lds lods not or dec xor out (bad) (bad) (bad) (bad) mov outsl sbb je or sti mov jae or mov outsl (bad) (bad) jmp jecxz fsts hlt inc addr16 repnz ja dec inc cmp ljmp pop dec adc dec push cmp or cmp inc sbb jg call push fwait pop das fldenv dec cmp pop icebp and push out xor cld (bad) lcall push int adc cmp int3 or add jnp test (bad) decl iret sbb in push jg xchg and cmp mov loop fdivrp pop cld jmp les lret movl aaa pop mov mov pop push mov (bad) decl loop jmp cmp or or push xor popa sbb (bad) (bad) jg cmp loop scas dec push or test mov dec (bad) jb push xchg je and lcall sbb jo ljmp or sub pop pushf mov sub (bad) lcall pop cmp lret xor jge or push outsb (bad) dec adc dec adc sub leave decb sbb mov dec iret sbb sbbb das lock xchg int3 mov js xchg jb jmp (bad) ljmp cmpsl jo or inc scas add cmpl lods mov insb jmp jl mov inc sub mov popa ljmp (bad) sti xchg fmul (bad) jns mov jno mov mov cwtl testl mov or setno addr16 and mov lock (bad) incl test adc js fptan movsb sub xchg sub adc sbb decl aas dec cmp pop pushf roll pusha out test iret (bad) loopne jp subl mov xor movl jp popa (bad) (bad) incl pop adc popa (bad) adc jns jl adc nop dec cmpsl sub lods ss push dec cltd inc xchg adc (bad) pushl test (bad) cmp popa in movsl mov movsb (bad) outsl xchg push fidivl push xorl adc and pop (bad) push addr16 (bad) mov xorb test jl pop push sub fidiv cmp lret (bad) pop push cmp mov rorl sbb (bad) fimull mov lcall mov mov dec mov mov pop cmp pop jmp pop jecxz mov (bad) call fisttpl cmp push adc les mov (bad) jmp lock inc jge mov loop mov ljmp dec push fdivrs aam daa or stos inc or (bad) (bad) lcall inc aas or pop mov lods sti mov (bad) xchg fsubs jae (bad) (bad) ljmp cld pop scas xor cmpsl pop adc mov icebp rcll imul jno mov adc push mov mov es or es push rorl outsl icebp (bad) fldl2e cmp mov aam je in test jl sarb out and (bad) and rcl int3 cmp mov cmp out ja cmpsl fsubrs xchg mov ljmp into addl lock lahf sub jmp mov fstpl pop cli (bad) (bad) cli jae outsl (bad) loope and mov frstor sarb in dec shrb (bad) int3 popf popa mov dec pop inc adc cmpl lret fistpll mov jge popf fldl ss and lcall out or (bad) pushl push sbb sti adc and add mov sub pusha (bad) pushl mov mov mov xchg or (bad) call cli dec into push nop das int3 mov out mov lock cld mov insb ljmp jae notl cld lret mov lcall cld dec pop cwtl sbb adc jl jbe push sub sbb (bad) call js shrl pop xchg sub loopne ret loopne lds cld ljmp push (bad) push xor out outsl lock inc hlt popf jns cmp out out mov push notb mov outsl cld (bad) stc or adc pushf es mov arpl idiv pop test pop jno addr16 mov adc (bad) repnz and (bad) (bad) mov mov daa ret sub push cmc lret jnp imul out (bad) idiv incl push mov sbb lods into jns call push push test shl pop call jo cs scas add pop pop aad fldenv xchg lock popl add adc (bad) xlat loopne,pn fdivrs jl cmpl xorl mov mov jecxz xrelease and (bad) in das cmp dec sub (bad) (bad) jmp sbb push adc in (bad) in sahf mov lods das jl adc lcall (bad) iret lret jg sub mov mov fnsave pushl push mov loop inc mov (bad) imul fcoms push inc mov adc test (bad) (bad) lcall xchg shll lcall mov mov pop jl sbb int push fistpll insb cli lcall add or (bad) lcall icebp inc ffreep mov jp negb mov lods ja (bad) jg notb or xchg daa adc dec pop leave cmp popf sahf stos dec out mov push addl out div sub int (bad) (bad) (bad) ljmp jle sub sti std fdivrs (bad) adc and mov in nop add (bad) inc mov outsb stos ret movsl fcmovu sbb inc aad mov pop in pushl jne mov jno or dec mov aam sbb pop cli leave outsl rcl addr16 ja int lahf out cli mov (bad) pop ljmp dec pop fstps push std xchg (bad) (bad) inc cmpsb imul inc adc jmp lock cli pop push dec sub xchg fidivrl ss cmp mov jns insl test daa add (bad) mov pop dec dec je out mov data16 push pop pop adc (bad) lcall (bad) mov inc test pusha in xchg jno hlt xchg inc or inc and (bad) aad (bad) (bad) call stos aam aaa sbb imul add pop or stos call xchg (bad) mov arpl gs mov push loop popf jg (bad) ljmp cli pop xor adcl test fistl (bad) dec jo (bad) push scas aam (bad) ljmp out or (bad) (bad) (bad) (bad) adc push movsb ret clc lahf push jmp loope sub iret shr cmp (bad) (bad) (bad) lcall mov test push mov mov cmpsb mov dec sti jns outsl cmc (bad) lcall (bad) roll (bad) cmp xchg rcll idiv inc (bad) cmp stos sub and cmp aaa mov in popf fistpll mov (bad) (bad) decl dec cs leave loop push cmpsl xor inc daa push pop cmpsl aad stos icebp mov lods jle sub lock mov repz add add add lods or cld mov (bad) ds mov add stc mov xchg jmp sub das icebp jg test clc xchg mov xlat arpl fldl test (bad) (bad) inc jmp in cwtl jge neg inc dec gs xor (bad) divl or daa adc push or daa es mov das arpl imul loop push addr16 (bad) mov sbb icebp pop add or add and push inc mov cmpsl inc out inc enter sbb dec nop fbld fs push mov pushl inc inc push lods inc es test jae inc jle pop aaa (bad) jmp enter sbbl addr16 cs pop jg inc (bad) das add jnp and mov mov jecxz cs (bad) or xor aaa mov sbb ja jp lahf nop scas das cmc pushl leave incl sub fdivrs mov add pop adc shrb dec movsb int cmp mov decl xor icebp sub mov cmp pushl xchg xlat into dec or imul into aas xchg hlt mov aaa stc fildll lds mov add pop dec sbb js cmc add (bad) mov (bad) gs test js,pn xlat div pop mov pop in jg sub mov dec push in loope (bad) (bad) (bad) pushl popl insb out cmp xchg sti stos pop mov cli sub xor loopne lcall (bad) std dec jb aaa mov icebp clc fs test popf push or (bad) jg jmp push mov cmp mov (bad) push (bad) loope inc pop cmc fidivl jae fsubr and mov lods mov int3 lods call cli pop and icebp lock jae push or push pop lea call mov movsl mov xlat mov insl enter arpl push sbb lds stc popf mov add imul or pop shlb inc push pop ljmp cld pushl fwait shlb (bad) (bad) mov in dec mull pop loopne xor fsts cld aas js mov jl or test push jg sbb aas mov ljmp push fcom sahf (bad) cmp xchg pop sub ja pop clc (bad) pushl repz mov das ja dec inc xor call (bad) jmp add and (bad) xor lock inc outsb pusha jg cmc ljmp (bad) pop mov stos js test ja cwtl pop insl sub add rorb sub insl dec lods call pop ss pushf mov loope push sub outsl icebp (bad) fsubs and and out aas lods pop lea adc (bad) (bad) (bad) ljmp je mov dec addr16 sbb jbe add dec out arpl loope,pt adc mov sub mov std enter mov (bad) (bad) mov sbb dec test cltd jae xchg mov push jo adc push pushf or cmp pop xchg aas (bad) (bad) (bad) incl popf or jl push pop fnstsw in enter lods pop loop pop xor (bad) push inc cmc (bad) lcall dec mov xchg mov xor (bad) adc das mov dec mov stos xchg clc and (bad) mov pop jecxz mov (bad) jae adc push lret arpl cmpsl cltd clc (bad) (bad) decl xlat stc in push cltd pop cmpsl sbb js ds and sub inc push cmp fnstenv ffreep mov mov (bad) (bad) dec jge jae and ja outsb iret ds leave mov fs mov std jg cs jl jp test push ret mov jg pop adc ficoml pop cmp in fs cmc (bad) (bad) jg (bad) mov or (bad) es pop cmpb (bad) (bad) (bad) call and lods lret cmc push or xchg mov js jmp add (bad) jbe (bad) fnstsw (bad) faddl jno lret testb mov movsl pop sarb sub dec inc pop clc xchg lea push sub cmp decl xor std pop ljmp les (bad) in mov mov push insl push sub xor push loope (bad) ljmp stos push fdivs lds mov je jae lret sub mov jmp mov push les das rolb sub inc fwait pop or aaa push fwait subl loopne (bad) lods (bad) (bad) lods cmp (bad) mov (bad) imul and ljmp popf jne mov mov jg out xor ror cli in (bad) lcall std les push out mov mov popl inc cmp sbb test (bad) incl iret mov in dec (bad) mov push sub sarb push mov (bad) ljmp fs (bad) cmpsb push rcrb mov out cli pop loop vminsd sbb and sbb int3 push ret mov jecxz xchg jl cmp outsb nop roll cmp or and (bad) jge lret pop lds jle push idivb cmc sub push sbb fcomi arpl stos dec icebp jne mov cwtl inc sbb push mov (bad) rorb mov std sbb push rcll (bad) mov ret and mov mov adc (bad) fucomip (bad) adc xorb or adc xchg ljmp push dec movhps jbe push pop inc jmp insb in (bad) (bad) decl mov push movsl and xor xchg stos adcl pop cmp (bad) jmp fistl insb jae ficomp or lods sti xor psubw insb fsubl rorb inc int jmp mov fbld xor adc inc cmpsb insl clc cmp mov in data16 das std rolb xacquire mov mov mov push and decl jnp or mov xor (bad) popa pop xor iret jo sbb fsubp lcall in adc cwtl mov (bad) lea incl (bad) push mov or xor fmul ljmp incl dec xchg mov lret push aas cmc push push and and pop (bad) (bad) mov imul inc jo and pop add ljmp cmp add or mov mov test mov fld (bad) (bad) (bad) sti lahf inc or xor arpl out decl in mov xor cld jg mov add or je ss cwtl loope sbb out jmp mov jno clc test repnz xor scas push sahf push sti (bad) (bad) ljmp xchg stos imul add or push (bad) xchg je or xchg inc out jg mov xchg stc ret pop mov xchg dec inc ljmp in add lcall aad lea add cmp (bad) jmp pop xchg fisub sarb leave bound in jle dec inc negb dec (bad) (bad) (bad) (bad) cld scas inc roll clc jbe mov (bad) add or popf lret push sbb (bad) lcall mov adc into imulb sbb dec pop loop decl adc nop push ss sbb je (bad) call stos out push jl insl sub lret (bad) (bad) jmp mov sub loop jp aad cmpsl rcl add movsl das xchg mov pop fcmovnu (bad) lcall popa mov mov rcll cmpsb das adc push fdiv mov fsubrs aam jmp ret test jno (bad) xor sub outsb mov scas push outsb lods jb loope fiaddl jbe inc jmp inc push inc inc sbb test std test test into and mov pop cs or fisubrl outsl cmc decl add mov cmp outsl inc das mov pop cmp mov scas pop push add ljmp loop sahf (bad) and push bound adc js lods or jg xor inc lret cs ret enter pop cli data16 (bad) ljmp pop inc push (bad) inc mov pusha je fsubp call mov pop xchg inc mov xor or aaa lcall xor push (bad) mov and cld call (bad) and lea bound cmpb cli (bad) jg add and loopne pop lcall push cli call (bad) inc (bad) iret jl mov maxps push mov (bad) ljmp jae mov xor lea push dec data16 cli (bad) inc and pop cmp mov push xchg addr16 pop xor cmp mov push add in test mov (bad) (bad) (bad) (bad) stc push popf dec es mov jno imul pop nop lahf xlat test inc movsb arpl call enter (bad) sarl dec xorl stos xor cli (bad) jmp jbe negb add xor push dec dec divl mov add jne sub mov (bad) incl std ljmp mov dec loope ds enter inc xor (bad) decl fnstsw bnd dec mov xor shlb push lret sti nop or jno sbb mov repnz in ret mov sbb fiadd das mov scas push stos xchg cmp (bad) (bad) in cmp nop test cltd test fs out sbb divl cmp fbstp (bad) mov jne (bad) sub inc cmp xchg call incl mov movsb jo sti jb or or std mov (bad) aaa popf mov cmp imul dec sti jae and gs jno orl cwtl sub aad (bad) dec gs loope bound mov stc pop lds cmp mov xchg mov pop jle enter jg ret jae pop int3 inc out movsl pushf jno mov (bad) push pop mov sbb mov xchg insl fs out dec pop dec mov (bad) or mov lods cld sub inc push sub bound pushl clc inc mov and or jb sub mov pop adc push mov leave aad jg je cmp enter dec (bad) incl and loop ficomp rorl dec ret xor in (bad) jg decb add or mov ja adc fnstsw (bad) ljmp cmp add imul ds pop cmp loop cmp pop mov repz pop pop fwait cld mov jmp ljmp std das push or das scas pop sbb xlat sub mov push cld dec xchg mov (bad) adc mov xchg pop data16 mov cmpl xchg clc xchg mov (bad) (bad) out outsb ret mov ljmp dec or xor and lods outsl push je add cli aaa jle hlt mov pop daa xlat ljmp fildll loope push (bad) ss test ror mov je sub mov out or mov push jmp outsb loop mov cmp sub jno cmp dec or push aaa sub cmpsl (bad) xor ret sbb clc out arpl pop cmp sub mov test notl jno (bad) ljmp sub inc aam jb inc fidivrl xchg jecxz adc in (bad) out ds (bad) or negl fcomp sub loopne sbb outsl mov (bad) in cmp jns xchg jo mov out or loopne ljmp mov (bad) rcll lahf insb jecxz outsl lock xor push iret mov xchg xor push sbb (bad) (bad) dec xchg push out xlat enter lock dec out inc mov (bad) fcoml stos mov (bad) jg jmp lods pushf add xor mov inc je xchg lea jmp hlt cs ja repz xchg movsb mov (bad) lcall incl dec cmp (bad) sub inc icebp fcomi cmpsl loope sar fucomip add sbb icebp xchg ss ret call cli mov fiadd std push jle sbb iret jbe les mov adc sub repz or mov das and pop (bad) sub rclb push mov xor stc lcall mov dec ja ficompl jmp je jecxz pop ss adc inc dec es lcall (bad) hlt mov (bad) (bad) (bad) (bad) mov movsb or loope jno arpl mov outsb loopne insl in push icebp push (bad) aad inc idivl (bad) (bad) call cs mov imul cwtl jl sbb jmp jbe outsb (bad) push jmp or jmp daa mov test test popf push (bad) (bad) (bad) (bad) out rcrb faddl fild dec xchg scas xchg (bad) sti test cmp inc (bad) (bad) (bad) jmp in clc fstpl push lret shl sbb mov insl cmc add fiaddl in mov sub out cltd jecxz mov iret sub int3 hlt lcall dec inc cmp adc fbld ss jp or sbb (bad) (bad) (bad) push insl jle iret jnp jae sbb outsb or gs stos sub lea lret lret push sbb lea (bad) mov out jbe das push pushf movsb mov mov and aad movsl idiv in pop push push test add pop dec mov add or in jmp hlt pop cmpsb cmpsb xor outsb add daa cli adc loopne movsl fisubl xor (bad) mov pusha mov (bad) (bad) (bad) (bad) xor push push jne adc jns and cmp sub sbb (bad) jg jmp icebp ficomp imul inc inc adc xor sub aaa cmp xlat iret int inc or dec (bad) cli push cmp call (bad) push xchg xchg inc cwtl xchg gs mov sti or and inc add jl hlt jae std add mov xchg and lds lcall movsl or xchg (bad) int xchg cmp sbb adc cmc jmp adc lds adc sub clc (bad) lcall (bad) cmp push pop and jl sti stc movsl xchg (bad) insl push mov call fs jb out xchg jge and pop ja xchg fmull dec jecxz dec and pop bound or std (bad) jg rolb iret pop jg mov add or dec popf mov sti fwait sbb pop jbe mov cmp push inc sbb mov pop mov (bad) dec mov shrb mov stos fmulp or (bad) pushl push mov sahf stos andl pusha (bad) (bad) (bad) mov and bound xlat shlb sarb or shrl inc or inc rcl (bad) (bad) incl dec mov ret lret xlat mov fld out pushl mov bound (bad) stc adc fisub das not es push das loopne fmull (bad) (bad) (bad) call fnop stc cmp lea xor sti mov cwtl mov add incl mov or jl add into or cmp je insb incl (bad) (bad) jp dec sahf jmp mov fnsave lods sub cmp jmp insl sbb (bad) (bad) sar fdivrl jecxz repnz (bad) (bad) ficompl cmp adc ficom push lea (bad) (bad) pushl and lea mov xor in sub pop fs and lahf fimull es sbb adc inc rcl adc (bad) ja outsl cltd cmc movups jg (bad) ljmp adc (bad) cmc insb add push mov fildl xor dec gs call dec enter push mov cltd mov (bad) (bad) (bad) incl test ficompl dec daa xchg fiadd xchg inc cmp jno jb sub sub lcall std mov and pop jmp lahf outsl cmc or jmp daa (bad) push add repnz icebp decl (bad) aad enter sbb lahf mov lods xchg js xchg (bad) pushl xchg sarl jle scas pop iret pop sbb mov mov mov (bad) (bad) (bad) call inc jae das test iret pushl repnz imull rcl popf pop jb jb inc outsl (bad) jmp popf mov in sub mov gs cmp cmp push out das lock dec popf adc das sbb fldl in int mov mov inc inc and (bad) jge jge cld xchg jae stc mov fisubl (bad) outsl add idivl dec pop pop pop inc lods xor loopne sti icebp sbb lret (bad) jg cmp jno testl dec mov add popa inc mov adc lock xchg mov pop cmp xor out mov mov push fdivrp (bad) pushl (bad) lret dec cmp cmpsb jbe inc and dec cmp lock pop call (bad) (bad) cwtl iret sbb out push enter or ss sub mov lods sahf popf (bad) incl cmp lds mov jmp fldenv outsb in mov jbe (bad) ljmp or popf lods ficomp add in mov inc and sbb cmp mov cli js repz cmc xor xchg aam scas loop or fsubs sbb push and and mov sub lcall (bad) ljmp sbb orl out sbb movb xchg or dec jmp sbbl cmp (bad) (bad) push cli testl sbb xor xchg (bad) (bad) repz jne sti (bad) (bad) (bad) call adc cmp in jno jmp imul dec mov mov cmpsl lods mov push pop jp mov fnop adc js ret (bad) fild xchg inc cmp xlat mov lods jbe xchg clc lcall sti xchg lcall incl fstl xchg sbb jle fldt (bad) (bad) lcall negl jnp clc icebp call mov push fcompl mov addr16 lods inc mov jnp outsb lock dec mov adc sbb fdivr (bad) (bad) in insb cli or call dec mov and jne adcl pop (bad) (bad) jg aaa scas add cmp adc jmp mov cwtl fdivs adc loop jmp popf out jnp arpl sbb adc jmp in call jg jl nop ja push aam repnz jle xchg mov jae jle adc dec cld lods sahf push repnz dec out movsb ljmp mov pushl mov or icebp ret flds das (bad) push or (bad) xchg (bad) push movsl decb cmp cmc pop cmc (bad) (bad) (bad) fiaddl stc cwtl sbb cltd mov out js push dec adc aas xchg repz jp ljmp and jnp mov (bad) cli cmp (bad) mov movhps pop cmp sub lea inc xchg ficom xchg fbstp inc mov jge test aad add ficompl jl inc mov sahf pop dec push push icebp scas or fnop subl mov (bad) pop ds mov (bad) (bad) fildll cmpb rorb and pop mov jl add ss insl cmp or xchg jbe test cli jmp cmp ljmp int outsl (bad) (bad) (bad) (bad) incl lods mov xor (bad) cmpsb cmpsl cs mov ss sar pop jl (bad) call std loope fcom dec outsb pop sti stos jecxz,pn aaa clc call mov ja aam je inc add orl (bad) (bad) ljmp xor sub adc cmp cmp xor in orb loope lcall lods es out mov sahf ret and adc pop lcall incl cmp xlat loope sahf repz outsb cltd push into sbb inc pop scas in fnstenv or mov das inc rcr cmc xor std add mov clc decl mov push pop inc jbe xor ret mov fild (bad) mov push xchg dec outsl cmc movsl pop mov test test jns (bad) mov insb xchg xchg cli ja rcrb out dec clc aaa and std jb pop pop cli lea inc loope pushf or inc (bad) jl fisttpl cld (bad) (bad) jmp cmc aas (bad) cmp push and sti loop,pn push lea aad insb jle test pop loopne (bad) jge push enter and in sbb fstl add fcmovne jno sub (bad) (bad) (bad) inc jge add xchg lret stos xchg jg mov in xchg mov push xor mov test (bad) call ror push add nop cmc ret lret lds cmpb inc rcl or and lahf out pop inc fdivrs (bad) cld jg (bad) decl xor add cmp push scas test inc dec mov cmc inc push call xor sbb (bad) (bad) mov cld add xchg lock pop arpl sti mov fnstsw (bad) (bad) (bad) (bad) mov jno sbb jg out xor (bad) sahf mov gs push je push adc or pop xchg adc (bad) fnop jg in out out (bad) and les (bad) sahf add dec (bad) (bad) (bad) jmp daa (bad) addr16 and cmp xchg xor clc pop sarl sahf icebp xorl inc addl std push xchg and inc subl mov les gs out sbb mov (bad) mov dec pause rcr call cmpsb out mov stos push pop cmpsb xor call push cltd sahf sti pop pop in mov fidivl fmuls (bad) (bad) cmp outsb bound (bad) jg (bad) cmp fist mov (bad) repnz test (bad) (bad) pushl push aaa aaa hlt lea pop dec fadds into pop dec into xor pop icebp aaa clc jg sbb ja je ss aam mov ja insb in mov ljmp mov stc psrad (bad) xchg mov mov stc stos xor adc outsl addr16 adc outsb js cli jnp cmc ljmp inc or jg cmpl (bad) (bad) (bad) lcall and repz push mov jo sbb push jno xstore-rng cmpsl test (bad) (bad) (bad) cld sbb aas push ret (bad) sub imull dec clc adc mov (bad) pop les aaa cli fstpt (bad) into push xor ret and cs xor (bad) mov push pop mov jecxz jno jp cmp cmp mov pushl mov icebp pop or (bad) lock ret fwait gs cmp cmp pop xchg cltd es aad push aad adc into hlt test enter clc xchg insb jns lret adc mov xor sub sbb pushl cmp mov dec sub push mov repnz (bad) (bad) decl or cmp sbb out fiaddl jo or sbb cwtl iret inc pop (bad) (bad) (bad) pushl ljmp jb xor icebp imull or js aad mov (bad) mov inc mov sub adc in mov mov lcall xchg jbe ljmp ds mov push in mov dec decl add popa andb imul js ret push out in call mov jbe loopne,pt adc mov inc adc (bad) call push jle cmc arpl in (bad) es dec cmpsb into (bad) idiv clc or (bad) (bad) (bad) mov test sbb rcr movsl mov fnstsw mov shl (bad) jns shlb mov das inc mov xchg push mov insl mov mov or lcall and out dec mov scas (bad) gs mov lock lret sbb fisubr std int pop fstl jg or test xlat ret (bad) push mov enter inc pop (bad) fildl cmp inc dec cmp pop jecxz cmp push pop (bad) (bad) jg sub and pop fldcw or test ljmp (bad) jl mov push outsb repz mov das stos inc or repz ss leave and stc cmp add mov shrb cld or roll xor push jno das (bad) dec popa inc pop clc add ret sahf jnp in sub xor jo pop sahf call pop mov roll dec (bad) lcall inc loop loop int3 sbb xor pop (bad) arpl sbb out xor dec pop pop or test inc scas mov sub insl std gs xchg cmpsb imul push dec fsubr jg mov cmc xchg and fdivr mov rolb xchg pop jg and and rcl in mov (bad) fnstenv lds ja fyl2x cmp add sbb lcall mov fwait jae push test movsl xor out dec outsb ret xchg pop in (bad) mov in (bad) frstor ss int sub outsb jmp pop push clc ds in inc mov jmp dec ret sbb adc (bad) (bad) (bad) decl mov das jae je adc xor pop clc cmpxchg outsb fistpll rcll mov (bad) (bad) inc push mov stos mov mov pop mov add jg decl xor insb outsb pop sbb lcall cmp add lea sub jp sub add inc lea inc hlt mov sub test loop in cmp mov incl xor nop cbtw xor mov xor ds mov cmp std or jbe xchg sbb sub mov adc ljmp adc loope je addr16 xchg cld sub repz (bad) in xlat bound mov clc or mov xchg arpl cmc pop adc (bad) jmp (bad) or in jg (bad) push dec cs jl cli or push imul mov jg int das mov sahf jp pop mov jl stos cmpsl mov es clc mov (bad) lcall in imulb daa mov faddl in divl inc mov cmp in mov dec mov ljmp test cmc inc sti xor dec (bad) dec or (bad) lcall repnz dec cmc in faddp icebp (bad) aas mov (bad) (bad) pushl scas bnd das std ret dec fnstsw mov adc lahf arpl (bad) mov cli (bad) (bad) (bad) mov in xor std mov mov add adc or (bad) xor out pop das adc (bad) decl jae rcl xchg adc sub cmp mov adc (bad) (bad) push fnstcw xlat jp ret cld jb or pop repz inc ds sarb scas pusha movsl fsts lods mov fdivs shr jo les jecxz clc (bad) (bad) jmp jnp push lcall and lcall adcl mov mov jno jg jg add inc fucom jbe pop cmc and sbb xor (bad) (bad) (bad) ljmp or pop cmpsl xchg adc sbb pop mov jmp push out test mov js mov cmp sbb add or adc or lods mov xor mov inc push arpl in push stos jmp imul xchg adc dec mov adc ljmp icebp cmpsb xor cmp pop movsl shl insl sub jbe (bad) ljmp mov fnop mov je xor ror (bad) (bad) (bad) (bad) fisubl out out sbb idivl in push add mov sbb xchg pop xlat jnp add sub add in lret out cltd cmp pop dec pop imul (bad) (bad) lcall pop aam aaa addr16 sbb mov aas xchg test jbe mov and push call dec mov cmp hlt unpckhps xlat mov cmpsb test stos enter (bad) jg fwait movl hlt jne test fwait (bad) and nop stc hlt sbb (bad) (bad) ljmp mov sbb xor or cmpsl or pusha lcall mov enter (bad) ljmp rorl ss mov into pop mov (bad) (bad) (bad) jg pusha scas adc out test arpl aaa aas mov andl loop cmc test (bad) and dec mov fcompl outsl insl pushl outsb sub add out cmp cmp test sub imul sti pop lret scas fistl push xor cwtl (bad) daa or (bad) push or sub outsb scas xor xor push out add cli jge jp xor call pushl repnz aam sarb rclb jp pop mov or (bad) call inc inc inc mov pop int xor cmpsb bound and xor jle bound lds cltd push out adc js inc js jp jg ret shll mov (bad) jge aad repz (bad) (bad) ljmp push and fstpt jno ja fs (bad) and ficom (bad) (bad) (bad) jp add fucom fstpl cmpsl je jle push out icebp out or jnp mov loopne jecxz sbb iret pop pop leave rorl push insb fstps ja (bad) (bad) lcall push push popf push rcr js xor mov lcall cmp (bad) (bad) call push inc leave jge test push mov mov pop leave push jmp jmp (bad) (bad) lcall mov nop push mov inc outsb mov or (bad) jl daa mov xor cli jg lods mov imul fldcw sarb hlt add das xor lods cli inc loop ficomp fsubr xchg call clc jmp jp inc push xchg jnp dec sub andl sub (bad) call lcall inc mov pop push mov xchg mov je or in int3 int3 (bad) lcall xchg mov push (bad) ret aam fdivl int cltd push stos aam (bad) mov aam andb mov cmp fcoms (bad) (bad) (bad) cmp inc sub and pushf pop je mov aaa jp push mov (bad) (bad) decl mov xchg xchg mov jns outsb mov mov pop push scas enter inc aad adc xchg push ds pop imulb sarb outsb lock sub int pusha (bad) daa sahf into adc (bad) fbld mov push cmp pop cmp lds hlt inc (bad) (bad) mov sti dec shll daa mov ljmp outsl jo mov push js push fsubs sub (bad) mov adc (bad) rorl mov outsl push push cli lret lahf xor push (bad) mov mov sub cmp xchg pushf xchg mov (bad) (bad) (bad) (bad) push pop xor sub mov push push push lahf dec lods js pop dec xchg inc dec xchg das adc (bad) (bad) jmp xchg xlat push movsl adc xchg mov sbb lea testl lods lretw std pop xor pop lea rclb or (bad) ljmp cmc sbb pushl lcall or push fld fs push lods das std (bad) pushl (bad) sub mov pop or les mov pop jbe sub lock pop loop mov test repz (bad) mov mov (bad) repz lods (bad) out incl and jb jns mov mov cmp or ud2 dec imul and pop clc outsl cmc icebp pusha dec stc int xchg inc loopne mov ljmp cmp inc inc xchg dec inc mov (bad) mov mov repz cmp or (bad) dec mov (bad) (bad) call cmp lret or cmp cmc adc jp push fstpl pushf lods (bad) cmp (bad) incl test daa jl mov insl in cmc push cmc aaa or mov xchg lock fsts mov fdivr mov push jae inc dec ret (bad) xor (bad) loopne jg jne mov push mov lock (bad) arpl fwait jp sub or cmp dec fsubr lahf pushf call (bad) (bad) mov aam and push mov sub or xor push bound (bad) push or (bad) nop xor (bad) xorb lret (bad) (bad) incl hlt pop sub scas and jae adc adc push push sbb dec sub jge push mov stos clc mov fldl add mov push sbb test loop xchg xchg (bad) js cmp (bad) (bad) pushl inc sbb ljmp shrb dec push mov and lea pop call xchg mov ljmp fadds jmp lcall imul hlt ss into and mov push dec out in push mov add inc repz jg adc test xor ja loopne (bad) (bad) call adc push adc adc (bad) lcall inc mov clc jmp or incb in mov (bad) (bad) call xchg inc jnp jns dec xor inc and inc bound mov daa dec cli sbb jnp (bad) (bad) decl pop push (bad) jae lret xor (bad) fadds jae dec mov xchg cli mov (bad) jne xor sti xchg bound push mov sub cmpl pop jbe pop ljmp inc push leave cmp sub ljmp je stos mov icebp mov fild notl inc add (bad) mul xchg inc iret out (bad) (bad) call mov sub push loop test lock and mov fucomip call adc push popa xor mull gs and xor cld (bad) (bad) in and rclb popf jne adc (bad) scas jecxz mov pop sub inc inc (bad) lcall xor ljmp push push (bad) in pop inc xchg jae incl addl push jle push xchg fldenv push into fcos (bad) (bad) lcall fldt pop push push test dec push add cs xchg decb pop xor jns mov (bad) inc (bad) dec mov xchg scas mov fwait mov movsl or and xchg out js jbe jnp inc cmp mov xor mov push push mov jecxz jg dec popa mov cmc ljmp cmp js dec mov lods (bad) mov (bad) (bad) mov push inc leave add lret jb jbe pop add je push mov pop clc lret rcll mov or daa xchg scas pushf fdivrl rsqrtps (bad) (bad) (bad) call stos dec lds in cmp mov mov and xchg mov pop inc (bad) (bad) (bad) (bad) (bad) call (bad) test push mov movsb fcmovb xor daa or sbb add inc in jnp mov js (bad) (bad) incl dec sbb lds jno movsl cmp xchg mov inc lret (bad) (bad) (bad) (bad) cld and popa xchg mov mov push insb sbb cmc addl mov adc (bad) (bad) (bad) fildl xor inc lods dec in pop sbb jnp pop sahf xor cmp pop sbb push pusha sbb mov fstl lret sub (bad) (bad) (bad) decl push daa and loop mov dec mov adc dec and cmp and clc ljmp jg scas (bad) loop std fldl2e cld mov pop pop jbe (bad) xor pop mov (bad) jmp jmp and dec xchg (bad) sub clc mov in sub ja push and pushl mov and mov (bad) (bad) mov push mov pop xchg ret push push mov mov les lds outsl cld outsl std mov fyl2x inc mov (bad) in jb (bad) lods adc jg rolb mov mov cmpsl (bad) clc test mov (bad) decl cltd icebp aas xchg dec jae pop cli std iret in adc xchg add mov jne imul mov and add scas dec ljmp fistpll xor mov and push sub lods outsb in push mov outsb push outsl hlt (bad) (bad) cmp sti bound add sbb sub dec push lcall daa inc jmp and rcr ja mov mov movsb das js and les jmp insb cld add sub lret jmp incb call xor and xchg and jg aas lcall fild outsl test cmp sti inc hlt adc dec mov sbb mov out mov lock outsl mov outsl inc int3 dec (bad) cmp (bad) (bad) in add ficom adc add cli frstor add jno mov (bad) jmp test xchg mov sbb out or std xchg repz pop bnd idiv lea orb or fsubs inc jmp (bad) mov and xchg mov inc pop mov (bad) (bad) jg or lcall incb icebp nop xchg sub inc adc cmp push add outsl mov ret mov or (bad) (bad) call mov push xchg cli add addr16 std popf lret adc ljmp test scas decl stos in sti ljmp lock dec add push adc lahf mov pop inc xchg andl add in inc cmc mov push mov adc adc inc or das adc add push pop sar loope push and jp push mov xchg inc sbb (bad) (bad) push (bad) sbb roll inc mov jmp and jp sar (bad) lcall add sbb add out lock mov jmp dec and shrl mov push loopne test imul mov sbb add or addl mov cli sbb call int3 mov insb fildll icebp xchg and jp test outsl push sbb cli (bad) (bad) sbb lahf (bad) ja movsl int3 jg add sar (bad) ljmp xchg dec add lock addr16 aam fcomps sbb xchg xchg inc lcall cli movsl dec and pusha jge arpl and nop dec aas inc pushl ret dec dec inc sub scas test mov xchg aaa add push (bad) (bad) (bad) js stos mov aas adc hlt add int push stos inc sub mov outsl cld idiv adc nop and dec inc stos xor push imul (bad) (bad) (bad) jmp cmc out pushf fisubrl fnstenv push mov sub or fcomps imul push movsb pop scas loop fiaddl cmp test (bad) in and call outsl jmp sbb or adc das test mov (bad) (bad) ljmp xchg add imul mov das sub or dec ffreep mov pop in sub or rorb dec repnz push loope and pop mov pop xchg sub add outsl std call imul add inc lods sub jbe test jbe push (bad) lock (bad) (bad) jnp es bound sub mov pop lret or aam in sbb jg popa sub jnp cltd inc jp addr16 icebp clc mov (bad) decl jecxz pusha add test ljmp test xchg add add lret insl mov inc push sbb or add xchg pop sbb ss (bad) (bad) test mov sbb (bad) (bad) (bad) call add jb inc mov sub cs stc push loopne (bad) pushl stc dec add ja ljmp movsb inc arpl xor insl lret rclb xor inc sub repnz mov cmpl xor nop inc (bad) push and lea inc icebp mov (bad) std jns pop imul adcl xor lret (bad) (bad) (bad) ljmp sub mov pop mov cmpsl hlt pop sub nop or sbb dec (bad) (bad) (bad) jmp ficoml aas daa mov mov in (bad) sub dec mov push test jb cmp loop dec mov or (bad) (bad) jg stos sub das mov pop or lods inc adc adc and stos push lcall (bad) call rol in sbb inc lock paddsb xorl mov fist push lret ds dec sub cli orl sbb and inc push in aam decl hlt xor lock test int3 and (bad) (bad) (bad) (bad) cmp aaa aas (bad) xchg cmovnp inc jae les insl outsb aam dec test push xor jg outsl cld push int aad xchg icebp icebp xchg xor mov mov cs jnp stos mov adc cltd test pop xchg sbb lods (bad) (bad) jge mov sti aam sarl inc sub push push js (bad) pushl mov adc rorb loopne push insl xchg shll pop mov (bad) jmp les cld xchg jns loopne dec lret dec pop test enter inc jl push xlat jle dec clc incl (bad) jg sub scas pushf std mov std mov mov (bad) (bad) (bad) call mov (bad) push xor out pusha cmp sti sbb xchg stc rorl cmp (bad) fnstsw (bad) mov push fbstp fldl jne fldl dec mov (bad) inc dec (bad) pop mov ret out push lods sbb bound enter jnp (bad) (bad) jg push sbb pop or inc and and mov dec iret add arpl push aam cli jg clc hlt inc popl xchg jg (bad) (bad) (bad) pusha mov loopne cmp push pop jns ss das sar add aad fwait and sbb fs dec (bad) cmc xchg call arpl mov cmp into jecxz sub popa mov mov sbb jno push inc adc movsl rorb push pop int lret shl aad aaa loopne neg cmpsb adc dec jno vphaddubw (bad) push lods outsb pop push aad jle fdivrl aam hlt aaa push add lock insb repz xchg data16 (bad) imull outsb add jp or lahf clc xchg (bad) call add pop or mov in addr16 mov decl shll fwait ja jae cltd jae test sar jmp push xchg sbb mov hlt fstp jg or sar (bad) (bad) mov xchg setle icebp xchg int add add jae mov mov loopne jge sub push push enter dec (bad) jg clc sub lods add jg mov std movsl jae cld test loopne mov jle inc cmc jmp jnp xor test (bad) sub (bad) ljmp cmpsl jl lret inc mov xchg dec xchg ds ljmp and mov (bad) dec push movsb xchg clc mull sub (bad) (bad) (bad) mov jle mov insl incb pop std mov outsb jl and out in movsl jmp cwtl pop pop inc mov push add mov daa clc inc (bad) jmp xor rclb mov fwait mov mov adc pop push push out fmuls stos sbb stc xor out out js xchg (bad) pop std int cld push fdivrl dec insl pop adcb mov (bad) (bad) mov add in push jno inc mov out sub outsb cmpsl ss jge incl fldlg2 jne cmp dec clc ja lods push xchg (bad) les (bad) (bad) decl pop mov pusha and cs sahf cmc cmp cmc insb mov or sbb negl mov gs ret leave jae call (bad) enter lahf fst ror xchg add cmp (bad) adc (bad) std push ret dec mov lock mov movsb lds data16 add xchg and (bad) fisttpll push sbb or lcall (bad) in ret cld test pop push lods push cli dec jmp test dec xor pop (bad) lcall push lock loop not insl jno push adc clc (bad) (bad) (bad) mov test cmpl inc xlat add cmpsb mov and js scas (bad) (bad) call mov sbb sub (bad) xchg test lcall inc mov add push sub jge cmp ljmp decl xchg cmpsl sbb lea int3 popa out cmp insl imul cld adc lret or (bad) dec (bad) jg pop cli insb sub subl (bad) mov cli hlt mov inc lods adc cli addr16 push jbe add mov fbld pushl fcmovu mov jp xchg mov jg (bad) jp pop (bad) ret (bad) sub loop push std inc jbe jge sbb and mov cmpb cmp inc adc xor sbb loop arpl data16 xchg es push inc (bad) cmp cmp mov mov push in push mov arpl push scas int3 lods ljmp pop test jg enter jmp inc cmp (bad) pushl or pusha movsl jle mov and xchg pop lods aad call lea in xchg pop mov pop add insb inc push and cmp pop test jp (bad) xchg (bad) adc (bad) push adcl mulb (bad) (bad) jg fwait sbb mov inc dec jns push pop into and xchg cmp push repnz jb icebp and movsb aaa mov (bad) incl mov into scas shll sti jno fcompl cli incl fstpt out pop pop jl mov sbb lock aas test xorl pusha or xor pushf (bad) call clc and adc xchg inc add jecxz xchg pop out mov or dec fwait leave popa pop cli (bad) call pop fldt test movsl mov rcrb adc (bad) mov adc and add pushf mov fisubl (bad) (bad) (bad) pop std idiv mov lcall in mov sub aaa clc (bad) call movsb inc in and je (bad) inc insl js push add cmp mov int3 sub push outsl jmp push pop cltd cmp cs jne addr16 ljmp inc pop inc jno (bad) mov aaa icebp xor and pmuludq ljmp decl fdivrs mov pop dec pop scas imul call call xchg mov sub jle and push enter lock jle dec mov xchg xchg pop loope (bad) clc xor gs ljmp sbb aam daa (bad) fxch cmp daa or mov add lea test or push (bad) (bad) call push stc dec adc xchg outsl push das scas push mov pop cli sarb rcr mov jmp push cld mov lahf (bad) (bad) (bad) fisttp dec push (bad) lods pop ss (bad) ds lret imul pop sbb pushf mov mov scas sub add pusha push inc sarl rcl scas fs push mov ljmp std (bad) mov dec addl add outsl sbb loopne andl das icebp jnp xchg push out outsl and je mov and inc jle sbb mulb mov (bad) std xor repz push sbb dec sbb or jmp out cli aad fcmovbe cmp lret xchg mov repz or lock xchg ret or cli mov mov xor repnz fs divl mov jge cltd cmp sahf jl outsl cmp lock imul insb pop push faddl mov and cmp or std sbb (bad) fildl add push jl xor gs mov dec dec lock loope adc inc push dec std and in rcrl sahf mov and out dec mov js dec movsl push out fisttp (bad) (bad) pushl movsb or in or sarb push gs divb lahf push test dec stos decl (bad) (bad) mov mov lcall inc inc or mov xorl loop adc sti (bad) xor aad fwait inc jno fiaddl adc ret sarb ljmp xorl push test hlt mov imul out jecxz dec add jmp mov mov icebp adc cmp mov (bad) mov sbb (bad) ljmp jge adc (bad) mov cmp nop push sub es (bad) decl adc adc in push adc push ja test (bad) (bad) (bad) fistp jnp cltd pop mov data16 fsts push call mov add lods movsl cs add mov jne jnp or and and pop loop rorl jg sbb outsl xchg pop hlt out xchg cmpsb lcall pop lret jbe bnd lods ljmp or xchg movsl sub daa les (bad) movsb pop dec pushl test stos imul loope add sbb adc (bad) call xor pushf insb jl pop sbb dec dec (bad) pop (bad) dec mov mov dec ljmp int adc in iret mov jl fiaddl (bad) mov fs mov mov mov fstpt stos cld ds je mov or popa pop iret arpl or mov lods (bad) decl loope jp sub xchg outsb xchg jecxz int3 scas movsl std (bad) fildll add add mov mov (bad) jnp xchg ror test cmp adc adc jae (bad) (bad) push aas fiaddl dec aaa fs cmpsl fcmovnu lock xorl xor stos (bad) (bad) decl lds xor inc jae add sahf or sti cwtl adc jg das icebp sub lods gs or idiv stc test pop clc decl pop mov push push icebp fcmovbe decb mov dec in jmp dec mov in sub mov outsb (bad) jmp cmp fdivr cltd push inc leave xchg cwtl sbb je lcall (bad) (bad) (bad) jp outsb cmp jge xor mov cmp (bad) mov das push mov ss xchg clc or in mov mov adc mov icebp lcall fidivl pop sar mov jecxz lods mov (bad) jg ljmp and cmc or pop jmp dec pop pop push stos insl negl xchg out cmp (bad) (bad) pushl lret sub mov repz xor xchg data16 jbe imul dec lds fstpt push inc mov (bad) mov arpl movsl sub leave (bad) (bad) incl add imul mov xchg dec out jmp add jl call popf (bad) mov inc out pop add in cmp xchg (bad) fnop pop adc jl ja or dec mov adcl push pop cld (bad) jg test inc fcoms cs push mov std aaa mov (bad) (bad) ljmp dec insl gs inc sub lcall push lret xchg cmp jns in cs push lock das ja dec jl or out bound popa pop or rcl (bad) or enter (bad) in fnstsw in sub mov jns mov (bad) fdivp ljmp mov pop sbb or rcl aas xor xchg stos jge (bad) nop outsl push std ss adc cmp out mov lea cli jo hlt pop psrld divb lds (bad) (bad) (bad) call pop dec inc aad es pop fistpll popf inc or adc inc pop push push lret gs scas cmpsb or cmp (bad) ljmp icebp adc (bad) invd adc loopne popa adc ljmp cld insb adc test pop sub cmp call mov lods lock cmp (bad) (bad) (bad) (bad) call notl xchg hlt mov push mov mov cmp mov cld (bad) (bad) (bad) pushl fwait xchg in mov in inc stos xor and lret incl rcl push xor mov add in mov mov sbb pop dec arpl push outsl fild call inc rorb enter mov (bad) jg decl out mov call mov (bad) sbb adc aad adc outsl lock loop jns outsb in ret inc pusha repnz fs ljmp (bad) mov pop (bad) rclb jg push jl dec cltd loopne out or clc std jg decl not inc scas sub cmpsb ds sbb pop lds into pushl decb ss pop (bad) mov test jne (bad) (bad) call sbb dec stos daa adc pushl (bad) mov and (bad) call mov arpl mov mov cmc (bad) outsb fisubl pop cli push sbb cmpsl xchg enter pop idiv aam aam mov push pop sub cld test sti dec sub xor je lock fild pop sti mov das pop (bad) sbb sub xchg hlt ret (bad) (bad) fucomip jg shlb cmp or push mov xchg xor (bad) inc shrb leave shll cmp sub lds adc (bad) (bad) pushl mov cltd sbb mov loopne mov pop shrb pop fdivs (bad) call jnp and (bad) and ret int3 or arpl test jnp fildl idiv mov push inc movsb movsl dec mov rcll inc jl ret mov das hlt pop cli add pop lock cmp push (bad) fldt push push pop movsb stos sbb (bad) (bad) jmp fisttp add adc iret and pushl push push mov adc mov and fimul iret (bad) dec aad (bad) call cwtl (bad) in idiv mov adc sbb push jb pushf xchg or arpl pop ljmp inc insb and outsl loop sahf fwait adc adcl pusha lcall testl test jno aaa cli (bad) call decb out test inc rorl pusha mov mov call leave pop and add fdivl aaa imul pop clc pop loopne cwtl inc es jbe push ficoml push nop ret cmpsl (bad) ljmp repnz sub aaa sti push and sbb push adc sbb and incl and jmp xchg xor mov stc (bad) (bad) jg mov xor push ja shrb cmp push jl fdivr pushl cs (bad) mov cmp icebp (bad) jl dec pop pop cld test int mov aam cld (bad) (bad) call push push scas adc mov add sbb sub (bad) incl cmp dec loopne mov mov mov mov (bad) scas ret pop lods or scas and and les ljmp repnz je mov dec adc xchg in dec loope das jle shlb fpatan xlat es mov lods or loopne jg pop cmp in icebp dec arpl push sbb jp fimull pop or push or jg push jne je lea mov or stos daa ljmp hlt (bad) decl jle pop pop in jmp jae gs rolb in (bad) pop decb and inc scas push cmpsb xchg mov adc arpl jmp xor leave cmpsl pop insb push in rcll ret (bad) mov sti stos ficomp cli mov outsl xchg das ljmp mov outsb sbb add aam ljmp test xor fdiv gs lret ljmp ljmp incl and and fistl push jmp (bad) lret scas rol hlt (bad) inc sub mov mov out out lea xchg and int3 jmp push jmp pop add ret daa cwtl sub stc dec movsl push stos imul js,pt test push std xor ljmp mov (bad) lcall jmp pop jno ret dec push pop pop fisub stos push rol jb loopne (bad) (bad) jg pop dec push cmp cmp fsubl clc mov jbe adc (bad) (bad) fidivr sub cmpsb pop push sti dec loop int or jg scas sbb incl ret sub aas pop imul mov sub dec int xor jg fbld dec ficomp outsl clc mov push (bad) pushl (bad) sub inc and dec mov lcall (bad) (bad) (bad) mov mov xchg dec fwait pop inc pop inc sbb jbe mov ja rcr ficom dec adc adc or daa loope xor push cli cmp jbe or (bad) ljmp std subb push xlat gs (bad) xchg scas rcl jg push sti mov xor (bad) jg test (bad) int3 loope sub or call xchg push pop cli lods fdivrp addr16 loopne in mov hlt out sub cmp (bad) je push mov inc mov jmp test xlat sar ret xor sbb pop push cwtl mov int3 loop dec mov (bad) (bad) decl xor xor sub inc or pop jl int3 or cwtl push test inc cmpsl inc jg (bad) (bad) ljmp rcr scas mov imul jg out adc je pop ss sbb (bad) pushl lea xor jl fs push test (bad) (bad) (bad) jmp sti test insl mov adc pushf mov mov or rol jmp dec cmpsl bound mov jns lahf inc mov cmp lcall xchg xor stos ja mov mov sbb out or sub mov (bad) (bad) (bad) (bad) clc pop ror sbb orb add gs dec xor jp call idiv fisub xor mov dec sub jp mov stc rorl ljmp jp xor xor fnsave stos mov (bad) mov insb insl inc dec cmp cld add xchg push dec xchg les lret mov testb test mov loope sarl pop xchg fldt jno enter push mov addr16 add (bad) loop push xchg data16 orl fistpll (bad) incl jge,pt (bad) mul adc inc into test imul cli lock ja sub call mov jmp cmp inc imul (bad) (bad) fildll jg lods aas push xchg insb fisubr sub jmp in add (bad) push fdivp adc push repnz inc ljmp imul mov inc jnp and dec dec mov lea (bad) (bad) (bad) (bad) call mov mov loope fwait jne adc test sbb mov sti sti ljmp bound jo push mov xchg push or insl mov xor mov sub mov jmp insl sbb jns dec out xor push sub push out out sbb jo fwait add push test loope les out icebp mov aam xchg push outsb mov push adc hlt (bad) ljmp jge pop xlat push xchg jne int or clc sar adc test rcll in dec jle icebp and pop loopne pop xchg mov je popf outsl push jo push dec jmp mov push xchg gs test ficompl xchg sub dec push dec (bad) (bad) (bad) (bad) (bad) call stos lods mov aad xor repnz dec decl lods fidiv (bad) dec pop dec jno mov roll leave push pop ret mov push jecxz mov (bad) (bad) pushl rorb adc xchg notb add fdivrs inc pop adc lret push jmp add imul cs (bad) ljmp repnz in out xchg in jl xchg fnop cs add jmp mov out mov ljmp xorb stos mov lret mov in mov lret push jns cmpb aas or adc inc (bad) (bad) mov dec cmp int cmp insl jg cmp vrsqrtss sbb aam mov and sahf sbb and divb lcall lahf stc adc (bad) (bad) jmp mov repnz jl mov cwtl push push push movsb and xor decl and lods sub mov push xchg push decl dec push cwtl sub (bad) int les decl jle (bad) incl fsubs cmp cld dec or clc jb and inc inc sbb clc (bad) incl jl into xchg test cmp nop inc aam sub xor inc sbb test push push inc into push dec imul (bad) popa fidivrl mov (bad) (bad) (bad) decl outsb outsl mov xchg divl add jb repz leave and xchg rorl cli pop clc mov xor les nopl xchg push xchg clc (bad) stc push jmp div aad mov outsb scas inc hlt movsl sbb aam clc lods in cmc jns jmp outsl std mov (bad) (bad) mov repnz sbb lods push movsb rcrb clc or (bad) dec xchg inc mov test lea hlt (bad) jmp dec lock out stos ljmp cmp add mov (bad) jmp mov insb or jns pop push fisub jl (bad) aaa mov lods call cli mov es jne sbb mov gs jge pop stos (bad) stc or (bad) lods and adc push pop add pop popf mov sub js adc cmp fdivrs xchg lret add sar (bad) stc es (bad) cld std es fdivrs xchg xor inc jl les cmpsl xor mov int add jmp push mov in out loop int mov aaa fsts pop cli xchg cli cmp imul push jg fwait call daa icebp aaa jne mov (bad) fs dec xor mov (bad) ljmp repz push stos jb stos popa mov ret mov sub test jmp movsb test insb add loop call enter test vorpd and jg mov xor aad jb mov mov jmp fiaddl pop cltd gs stc and pop scas icebp fnop inc inc pop pop out int fisttp cmpsl (bad) (bad) decl fs js jecxz mov mov xlat dec and (bad) mov mov cmpsb xchg xor clc dec mov fdivrp and outsl cld push lock adc push movsl pop mov shlb daa (bad) mov imul cmpsb (bad) xchg jmp pop or (bad) incl leave stos mov cmp mov out (bad) les imul (bad) ljmp lods cmpsl mov imul jne cmp xor (bad) (bad) pushl xchg adc (bad) lret mov cli push gs incl push push cld call das mov jae mov fwait jae fistl test movsl int3 test call (bad) fcomip xchg cmp dec daa dec push in fnsave sti sti cs test lret clc incl xlat adc add cmc mov lcall mov adc push in inc and idivl test testb in inc add test outsl icebp call sti iret adc push dec push ljmp in cmpsb or divl sub decl (bad) pushl (bad) mov mov pop mov cmp (bad) ljmp lock pop adc lahf sub sbbl xchg add test adc mov push cmp push cli mov test (bad) decl stos mov mov std or imulb shr mov ljmp in sbb lods (bad) imul sbb sbb rcrl fsts push mov cmp add into dec imul xchg bound adc (bad) (bad) jle add fidiv push fbld aas dec sbb adc lcall icebp ljmp lock mov pop jne or lahf mov mov lods xchg scas (bad) das std jg pop cmp fwait lret and ss enter (bad) (bad) incl fs jnp stos jne sub mov lea test mov (bad) gs xchg pop jp lods dec insb dec orl jmp aas mov mov pop mov mov cwtl imul pushl (bad) hlt pop mov xor xor stos stos sbb or and mov (bad) mov arpl sti xchg xchg and (bad) (bad) (bad) mov leave jae dec das sub cmp and or and outsl cmc jg sbb call mov jecxz push lea sar pop ljmp inc sub add (bad) cmp repnz std (bad) ljmp movsl cld push dec lret divl push push icebp mov jp jmp push aam cmc (bad) (bad) out bound in push mov fisttp inc enter cmp lret aaa clc (bad) pushl popa sub pop (bad) int ffreep or lea std push and dec idivb (bad) pushl or dec cli sbb imul shlb or hlt insb pushf into in fdivr xchg cli incl cs rcrl rcl enter lcall mov (bad) (bad) jmp sbb ljmp out (bad) mov shll test mov and cmp test notl mov mov mov inc das shl (bad) lcall ljmp or pop lock cld jle pop add xor in idivb sbb ja fcmovbe mov (bad) (bad) jg adc jae cmp mov mov add xchg clc push es ljmp aam aas mov dec mov roll or jb imul dec add lods (bad) incl shll mov outsb sarb jns test sub sar lcall insl push and cwtl xchg push jne movsl ror sarl hlt jg ljmp inc sub movsb or dec cmp push mov popl (bad) ljmp jbe cmp push cmp and insb aaa mov std sbb adc jb lret (bad) (bad) (bad) (bad) fiaddl mov mov mov (bad) mov (bad) mov cmp jmp adc mov jecxz out aad movsl or xor (bad) (bad) decl jne sbb push scas mov rcl and lock imul push outsl std psrad pop pushl out dec add lods jle push xchg jg (bad) cwtl (bad) call hlt and xchg jecxz lcall sub mov std pop jmp inc add push out jmp ljmp sti clc or call out jmp les int3 lcall (bad) stos push lcall lock mov gs mov dec std jg or lods add mov and add pop or cmp sahf pushf and jp or mov cmp outsl (bad) jg ljmp xchg cmp in jg fnsave lea (bad) mov lds mov movsl leave pushf jle sub std (bad) call cmp xor mov jae leave cmp (bad) incl pop je sub lret xchg sbb cmp mov sub add add loop in cmp ljmp sbb rol mov jbe out jae rcll or cmp pop cli (bad) (bad) call ret push (bad) lcall pushw add dec mov xchg fist pushl adc gs fisub mov adcl push mov sar add call dec or jae rdtsc xchg xchg ret xlat or ss jne (bad) (bad) pushl cs push lods jbe lds jne shrl (bad) pop std ret out ret xchg sub mov push add (bad) (bad) (bad) fild adc jg sbbl add cmp icebp cmp movsb inc adc lods aam lcall mov int cmpsb push inc loope push lds js ljmp lock ret cltd mov ret jmp ja and mov mov ret arpl and push loopne (bad) (bad) (bad) incl mov notb pop sbb xorl add data16 pushl push jge lods lock jae bound xor in fs push (bad) (bad) (bad) lcall dec mov clc add jp pop cwtl sub xchg pushw inc and lea std mov (bad) (bad) pushl test adc push jbe or xchg test xchg push push sub sub adc sbb mov sub mov pop clc incl pop int3 push sbb js ss enter stc insl xchg mov mov (bad) divl loop push ret and out mov (bad) incl addr16 out fs cli xchg mov out sbb mov (bad) std (bad) call adc xchg jo push push (bad) hlt inc dec iret ds sbb pop nop std mov das hlt (bad) (bad) cld out xor addl xor jne pop push gs dec (bad) (bad) pushl (bad) loopne sub xlat adc ljmp push pop fcos (bad) (bad) in pop push add imul sub mov adc ret cmp ljmp ljmp or lret cltd push loope inc (bad) (bad) fdivs jbe xor pop (bad) fmuls arpl mov pop xor jle das adc cmpsb mov ljmp leave repnz cli jb std xlat add ja loopne repnz incl (bad) mov jne (bad) (bad) sbb (bad) (bad) adc out adc das cmc lcall jns pop addl ret inc xchg sbb (bad) call cli cmp pop fsubl cld jne and enter dec or out stos xchg test pop (bad) (bad) (bad) (bad) fldl xor add cmpsl cmp adc test jmp movsb das std push call in cltd sbb xchg in ret (bad) mov stos outsb adc xchg daa hlt scas arpl insl enter pop xlat mov sbb dec call fcoms (bad) mov or sbb loopne aad sbb pop lds mov rcll (bad) pop and sahf je sti adc mov adc in pop or xor mov push addr16 test call ror lret pop push push xchg insl mov mov scas sahf or (bad) (bad) jmp insl lcall sbb loop insl pop cwtl les icebp (bad) fldt out add idivb xor jmp lcall addr16 push mov pop fwait cmp into mov mov (bad) (bad) incl mov scas dec lods shlb push xchg mov add adc fsubrs mov adc inc ja call push sbb call dec fwait in stos sti mov push pushf fcomp cmp jge sbb lods loopne pop sti push outsl icebp pop cld push jge mov mul mov jl in fild loopne push stos and add (bad) fisttpl lock cli ljmp (bad) push (bad) jns xor data16 cmp arpl push cwtl mov (bad) mov jg iret cmpsl (bad) jg (bad) fldenv in pusha aas cmpsl cmpsl xchg xchg mov (bad) in jg mov aad jge sbb jmp popa out adc loopne dec test xchg orb mov (bad) (bad) fucomip pushf in repz (bad) mov ss and lds mov ret mov repnz mov mov (bad) mov arpl push ss decl call hlt or test (bad) pop cmp xchg push pusha mov aad addr16 in insl fsubrl popf cmp or (bad) pushl mov movsl mov lcall mov in jnp mov decl (bad) cmp or cmp jne inc fnop repz cmpsb dec sarb (bad) aaa (bad) das push mov lods and hlt cmpsl icebp jb ljmp or leave repz cld (bad) cmp data16 idiv or ret int mov adc fsqrt jns pop cli lcall loope out clc outsb popf dec adc negb insb lods hlt insb (bad) (bad) call jo pushf cs cmp outsl mov xor outsb or (bad) lcall fidivrl fstps orl lods adc rorb (bad) xor (bad) pushl mov jmp mov fstp mov dec pop (bad) ja mov jg (bad) decl pop sbb (bad) (bad) icebp in (bad) std ret cmp and lcall in inc gs (bad) popa adc cmp aas aaa (bad) mov mov call dec sbb pop sahf inc test dec ficoml jmp (bad) (bad) push loopne sbbl stc int3 out or ljmp cmpsl mov aas addr16 sub xchg enter in loopne shl dec push insb or lea mov gs mov ret jle fnstenv ja (bad) pop arpl jg jmp in pop or jmp std push push inc push inc imul adc test pop push adc mov xor xchg pop test (bad) (bad) dec lret dec call insl add xor add ret shll mov pop push (bad) decl pushf inc loopne out outsb xchg lods sti jmp jbe xchg loope out lret fcomip (bad) jne (bad) decl std dec sarl test movl cmp sbb (bad) push cmc scas adc and cmp sar sbb (bad) loopne mov dec jne xor outsl pop popf jp test outsl (bad) or clc push cs (bad) and loopne adc sbb in mov (bad) (bad) ljmp jmp out and outsb push addr16 dec push addr16 les icebp cli cld (bad) (bad) ljmp and or inc mov imul sar clc or es or lcall add loope divl addr16 dec icebp mov mov cli jae jg sti fadd imul mov cmp or jmp xchg lret pop test clc (bad) jg and ds call xchg movsb fbstp push rcll lcall push add fisubl ret inc mov test leave andl (bad) (bad) (bad) dec sbb movsb inc pop cmp fwait adc or xchg stos cwtl lahf push pop push pop jno mov or or inc lcall mov mov daa mov push inc rclb nop inc insb stos movsl xchg lcall daa cld (bad) push movsl xor paddsw mov mov pop sbb sar das sbb movsl sub sarl dec xor mov (bad) call xor inc cs (bad) gs sarb aam (bad) push inc (bad) (bad) dec jb and shrl cmp lods rcr xlat adc stc movb (bad) ljmp add jge mov mov out repz mov fcmovnb (bad) sbb pop call mov scas std mov sub das out push (bad) (bad) call int add lock bound xchg fstpl cmc dec mov pop mov outsl hlt pop insl jle fist arpl jmp mov pop mov mov dec test sub into jae ljmp (bad) jae add pop push cmovbe mov lock jl test cli (bad) decl cmpsl dec mov and jmp and (bad) jl std jge icebp (bad) (bad) jmp (bad) stc (bad) cs pop (bad) jne add mov xor mov das negb sbb jl lea adc or call dec repz call imull dec mov and pop sub lret aam out insl daa (bad) incl or stc aad insb sub or mov call mov xchg mov incl decl rcrb cli cmp fsubs cld xlat pop clc leave pop lret in xchg hlt sbb test test sbb in decl (bad) mov ljmp stos mov hlt pop (bad) jmp jmp cwtl jle outsl xor adc test push cli or (bad) test inc fs loopne pushl mov mov dec jns outsb fldt in push lock (bad) cmp outsl pop mov aad sub dec lods icebp jae xchg ljmp lock ljmp add sub cmc pop in inc imul cli mov sub stos mov loope cli gs (bad) pop (bad) (bad) call dec pop mov lods stc sti push mov add lock inc ss (bad) (bad) push pop cmp xchg jbe cli fisubrl into pop subl jg xchg xchg sbb mov xchg xor mov fwait jo mov incl mov jns dec sbb mov sbb cmp (bad) call sahf xlat mov add cli sbbb rcl jp and sbb inc xchg push dec cmp mov or and lcall adc movsl pop push (bad) (bad) jg push or outsb mov push jnp fwait negl mov clc idiv sbb pop mov mov inc dec and push mov inc sahf pop sbb push ret insb aaa shrb std aam mov ss pushl adc jbe in xchg lds je push sahf (bad) (bad) (bad) (bad) in push push imul es sub ss and mov data16 inc outsl xchg lret loop cli cmp aam add loope mov push jae clc jg stos pop cmp fiadd push stc std shrb (bad) jle outsb call lea lea xor (bad) (bad) call andb in add call mov pop jl inc mov xor loopne (bad) (bad) mov je sti inc sub lcall roll or cmp sahf mov fmul nop repz (bad) (bad) mov sti mov push fwait or cmpsl jo out ljmp xchg call or mov adc mov aad adc dec cld decl pop faddl loopnew cmpsb aam jmp cmc sub sub (bad) (bad) push mov fist inc ret dec jge scas into fcoml pop xlat fcmovb or cs mov mov push or data16 and stos mov mov fldl add das mov and ficom (bad) negb jo je lea (bad) fldt jb out push movsl push dec nop mov pop insl out mov (bad) jg inc pop mov adc out cwtl in push jb and aam xor (bad) mov add push insl bound cltd gs mov movsb mov jecxz pop sarl jmp jge andl (bad) (bad) pushl adc jp pop stos cli insl xor xor sbb mov (bad) (bad) (bad) push subl sbb xlat imul xor pop push cmp (bad) pushl (bad) cs mov test das sbb mov sub dec cld mov inc repnz or rcrl xchg xchg sbb (bad) (bad) ljmp push jmp imul lds rcl cmp push fisttpll outsb mov lock pop add sbb sub (bad) (bad) ljmp and cmp jo das int sbb xchg cmc js mov sbb jb jge (bad) (bad) (bad) inc add push mov aas sahf outsl imul jg (bad) mov sub rcr (bad) mov jns inc cltd lret mov mov mov and cmp sub iret cld cltd dec pop cld adc lret les pmulhuw xor call call cli push cmp xor decl aad inc dec sbb insl lock push xchg xor inc lds push mov loope incb (bad) ljmp inc bound pop sahf xchg icebp dec jmp add dec loopne mov sub xchg push mov mov insb test test and clc and notl cld mov add ffreep pop int3 and in mov inc hlt ljmp aas pop in lods xor fmul outsl sbb inc lods pop popl (bad) ljmp jbe (bad) stc test jb and mov movsb cmp (bad) mov fstps or (bad) mov test lcall cwtl cmc push inc test mov xchg cmp test push (bad) (bad) (bad) aas and and cld mov push (bad) xor cmpsl xchg jo mov movsl (bad) add jo mov (bad) mov cmc push fist xlat xchg negb adc pushf sar mov inc mov imul cmc push arpl sbb imulb ret leave fldcw xchg jecxz jl mov xor cmp insb xor cld sbb ds in adc (bad) decl add push ss aad sbb pop loope sbb outsl lock lods int3 fidivl movsl pop adc adc cmp decl cmp adc repz pop out and (bad) jmp adc cmp sub (bad) adc shrb cmc clc (bad) (bad) inc xchg mov leave aam adc cltd jge lds push dec iret ret push fildll cmp push and (bad) cmp pop out (bad) (bad) lcall rolb rcpps pop push or nop sbb out mov jno sub movsb lds incl cmp out mov jb repnz xor pop push cmpsl jae jg mov decl cmpsb rcrb int3 scas sbb mov add sarb pop fisubl aam and in and cli mov dec enter rcrl test (bad) adc fucomip (bad) mov lock xchg and push push aad add push incl xchg adc mov jo jb and jne cld push sti fwait (bad) (bad) (bad) ljmp cmp sbb xor inc lods lds mov arpl cltd daa ret mov hlt (bad) (bad) (bad) inc xor or out push mov loope push test rcl push icebp movsb (bad) (bad) (bad) ljmp fs lds hlt add xlat sbb xchg inc ret push pop (bad) (bad) (bad) (bad) pushl xor sub dec addr16 xorl adc out mulw sarl inc sti sti add (bad) add pop xchg (bad) (bad) mov rclb leave cmp push or repz aad cli incl sarl idivb mov push jmp sbb (bad) (bad) (bad) mov fcomps push mov scas out dec sub je lods out mov ror lods movsl out lods sar xchg (bad) call dec mov dec jnp rclb aad xor pushf pusha fisub clc (bad) call arpl sti inc test jle aaa rolb lea ds (bad) ljmp add stos push call jecxz inc sub std (bad) (bad) (bad) fcoms mov imul push imul inc jl push arpl push scas (bad) incl ljmp nop dec inc and jp (bad) (bad) lcall (bad) popa xor rcll push mov mov cmpsl pop mov or mov jno and cmpb pop ds int3 imul push jecxz icebp add sbb mov sarb mov (bad) aaa xchg adc add mov push mov incl adc out jle in jnp insb ljmp push fs js into or mov insb pop loop icebp repnz cmpsl insl jmp mov mov dec adc dec inc pop push and test xchg incb es xchg insl xor lods inc mov add sbb (bad) lret cli sbb sarb jnp add (bad) (bad) (bad) inc push mov inc push inc xchg icebp mov es pop pop pop adc mov (bad) (bad) cmp in mov cmpsb mov loopne outsb aas add xor inc mov jne ljmp add jle rcrl sbb out sbb adc lods fisttp add addr16 ja add mov in jno shl aad call (bad) ljmp imul cwtl (bad) daa fbstp ja,pt pop add (bad) jg and ds (bad) je jg ljmp test jns or jo mov adc sarl decl (bad) call adc cmp cmp xor or (bad) push xchg imul jno movsl jmp (bad) ljmp dec sub aas mov push daa lret lods or in fnstsw mov add jle (bad) shlb lods xchg ret xchg mov (bad) incl pop sub lret push scas fild jecxz outsl rorl lret add (bad) lcall pop clc pop roll imul clc push aaa loop sub pop mov sub call lock repz (bad) xchg adc shl pop (bad) (bad) (bad) ljmp jmp aam pushf daa ljmp mov jno (bad) xchg and call incl (bad) mov fidivrl ljmp arpl imul adc push mov insb aas dec incb icebp (bad) scas testb repz lock loope push fisttp sahf js cli xor mov pop pop (bad) (bad) (bad) decl pop loopne sub test adc mov outsl cwtl rol sub add dec fstpt add mov add testl popf mov (bad) (bad) (bad) cmp dec rolb lret das mov cmpsb jne int inc or pop sbb pop cmp jmp xchg ljmp lret adc jl stc movsb and (bad) fisubrl pop aaa add cmpl mov stos mov and fisttpl aas xor addr16 (bad) (bad) (bad) stc pushf pushf dec or add fcoml data16 lock sub cmp enter lods (bad) mov lret (bad) xchg pop loopne das shll (bad) in adc test cmpsb sbb mov sub sub and push mov cmp aam lock shrb mov mov (bad) roll jno inc jmp test jnp jmp mov sti sbb (bad) mov ljmp inc std push lret ss ja pop mov sti ljmp pushl (bad) ljmp or addl push and js jnp (bad) (bad) ljmp or stc xor mov push jmp (bad) (bad) cld xor mov adcl adc or push das imul inc inc movsl aam push or stos jmp pop loopne cld shrb inc mov les push fs test jl stos xor jns mov sarl icebp cmp cmp insl adc inc fbld arpl (bad) (bad) (bad) ljmp push gs add mov mov decl clc data16 jb push pop or incl insl clc adc adc mov push inc mov (bad) and jecxz sub pop mov jo push xchg outsl lock xor int (bad) adc sub adc enter pusha inc jge inc xchg sbb lea in pop pop mov push (bad) jmp ss pop sahf gs mov xor ret orl (bad) jg jae (bad) jg sub sbb sbb jg dec les sub xor xchg mov mov jg (bad) (bad) jp orps jbe mov jecxz and shufps addl cmc xor mov aad adc bound in mov xchg add mov ret fnop (bad) (bad) fisttp xchg sbb in fldenv sbb mov push cmp sub data16 idiv imulb jo pop fs stc std ficomp and sahf push add mov movsl dec mov call ret aaa shlb test (bad) sub add push imul cs mov push iret push movl pushf dec pop sub add add insl pop frstor pop pop or bound or xor insl xor (bad) cmp xor xor std pop loopne repnz pop aad aad adc andl lret (bad) (bad) in pop aas pop (bad) xchg cmp test sbb inc mov lret inc push push ja or cwtl or or sub (bad) xor lods into clc call cmpsl mov push leave pop xor ljmp shrb orl (bad) xchg and adc sub movsl decb xchg or loopne push adc ret in inc inc stc pop fdivr (bad) jmp in (bad) pushf mov aam mov scas cld leave cmpsl aam sarb pop push lcall fsubrl jae push cmc jmp mov dec lret stos (bad) ljmp negb mov push ret pop mov mov aad inc and xlat decl cld inc (bad) pop shll nop jmp push ljmp int cmp mov pop (bad) fcomip pop int (bad) dec inc (bad) ds xor das loopne xchg lret insl (bad) mov pop (bad) nop push jne pop scas and out outsb out das mov ds jp (bad) mov imul sbb ja popf or dec outsl jmp pushl (bad) mov out sub (bad) movsl nop add and test les fwait je cli arpl jmp ret sub pop jns,pn repz (bad) (bad) jg aaa or in mov pop mov adc scas mov (bad) ljmp jbe inc iret add sbb push std cmp or decl jae xlat movsl mov cmc lret inc cwtl and dec pushl pushl enter pop lret icebp imull cmp icebp mov arpl jmp sbb xor pop and (bad) lock (bad) call push dec (bad) mov cltd (bad) adc cld sti (bad) hlt xor xor mov sbbb mov cwtl pusha popf stos or insl sbb fldt movsb popa cmpsl imulb mov sbb inc xor jp mov call sbb aad mov aaa dec mov icebp add dec or rol xchg mov call and jge pop (bad) insb leave stos dec xchg xor push push mov insb jle test loop (bad) cmp jbe ss imul insl mov jns pop push into movsl push in inc das hlt movsl cli imul xchg fisubrl push (bad) (bad) (bad) decl pop jle (bad) xchg iret jo sub or (bad) pop dec dec lods mov xor movsl ret icebp dec std dec cmp inc sub mov fimul cmp mov aaa (bad) jmp xor add jmp es test ret repnz (bad) (bad) cli cmp dec fsubl pop ljmp xchg (bad) repnz mov clc push cmp movsl (bad) (bad) pushl ret jg xchg or dec ror cmp insl rcrl dec sti ljmp add push push xchg dec xor notl cmpsl dec lds adc adc jecxz pop shll (bad) (bad) mov popa loop cwtl js cmp push mov scas sbb xchg iret lret leave (bad) lcall test cmp test aaa add out dec mov enter call imul test (bad) pop cli (bad) aaa xchg add out push mov (bad) cmp jno mov jo call arpl mov test mov lods divb sbb or shlb cmp insb int3 (bad) (bad) lcall add jo out cmp jnp call sbb jns scas pusha xor test sbb lods push aad xchg ret sbb add bnd cli dec dec add sub mov mov fs sbb loop mov movsl (bad) jg insl add loopne xchg jl cs pop fldl inc add dec stos js xor inc or push icebp jae mov (bad) (bad) (bad) decl push inc dec dec cmp inc mov add jae rcl cmp int3 sbb movsl inc sbb lcall mov xchg pusha aas adc lcall dec lahf fwait mov mov icebp jl jns adc cmp mov jg push jae (bad) jno ja jne add in jecxz mov push add sbb lock (bad) incl popl imul les or cld fldt out pop dec test ja rorb das cld incl enter sbb mov mov cmp mov out adcl push cld sbb inc sub lcall pop sub (bad) mov out ss mov rcrl call clc incl xchg insb imul and jne mov incl inc std aaa xor push mov scas mov inc mov stos inc into jo das lret cmp xchg std push or mov adc notb or (bad) call dec bound test or rolb idivl ret mov and into loope sahf mov jge adc in (bad) (bad) jmp dec (bad) sti pop mov hlt cld pop mov xor (bad) lcall fwait psubw fstl movsl or dec add ja push rcrl mov push (bad) (bad) jmp mov (bad) jmp stc ficompl shlb push (bad) ljmp add sub ficom cmp (bad) das hlt (bad) out leave xchg pop movsb je push pop (bad) inc sahf xchg mov icebp mov bts (bad) (bad) clc sti ss int outsl ret and sub pop xor add cwtl jge (bad) (bad) (bad) jg pop xchg sbb hlt in out push dec mov inc xchg jnp dec pop test adc sub stos dec adc clc mov pop xchg mov mov pop arpl or cld aaa xchg imull leave repnz xor pop sub outsl rcrl pop mov pop repz lcall movsl jb pushf xlat xor jg aam cmp sti pusha mov stos clc (bad) push std add jecxz jne sti and testl test popa std push or sub dec cmpsl pop mov loope or or lret xchg dec or (bad) lcall loope popf lods in inc ds pop cmpsb push push fdivrl and xor sbb jbe rcr mov mov jp or or inc xchg inc cmp push les xchg fistl notl add push mov movsb imul (bad) (bad) jmp or jnp push mov pushf adc or jl sbb (bad) (bad) mov dec (bad) cmp ror (bad) (bad) (bad) mov mov ss lahf imul pushf mov lcall incl mov fdivs mov xchg iret pushf adc pop xor or (bad) (bad) (bad) ljmp sbb xchg fsubrl xor (bad) push xchg adc jmp hlt (bad) (bad) ret add pushf dec push xlat scas rcrb gs mov xchg (bad) decl cld lcall call mov xor push lahf in (bad) jbe das lock outsb add xor daa adc fldt sarl scas (bad) mov xor pushf je add (bad) (bad) pushl mov stos lret jmp adc out sbb ds add (bad) lcall add push lods mov jne push sub push imul (bad) idiv (bad) out cmp mov xlat xchg jmp rcl cmc xorl xor sar ljmp mov sub cltd mov (bad) ljmp adc pop inc aaa movsl out mov imul outsl mov xchg xor add mov les dec outsb int3 or stos incl jno ret pop sub jp jp (bad) fcmovne dec push jbe add or call (bad) (bad) (bad) jmp xchg scas rclb mov xchg bound lret std adc aam iret ss xlat mov push call mov xchg push loopne out out xor and (bad) ljmp cld fs fsubs or (bad) fcompl popa out or (bad) jg dec push jnp and fldt cmp mov imul mov aam es (bad) (bad) inc cwtl pop and push outsb pushf (bad) sbb fs je js fwait cmp mov sbb adc cmc repz or test pop push (bad) xchg rorb (bad) mov bnd loop icebp fisttpll pushf add dec pop sub mov xor and mov inc ret sub mov mov push pop mov mov cwtl in xchg test std add (bad) jg sub jo dec stos sbb insl push lcall jge rclb test or (bad) adc push mov sub jmp push (bad) (bad) in ljmp out mov shrw mov mov pushf sbb int3 lods xchg out pushf push xchg repnz loope (bad) (bad) (bad) jmp fwait andb imul mov stos push xchg in mov ss mov adc sbb xlat test (bad) push xchg stos addl adc stc xchg adc mov adc xor fdivp adc cmp (bad) (bad) incl push stos dec fsubr arpl sti mov std xchg pop add dec negb mov sbb (bad) xor lahf lock sahf data16 cs incl fwait jecxz lods cmpsl pop xchg sub mov (bad) leave lds lods push cli (bad) jnp adc and or ret aas push (bad) lcall adc mov in cltd icebp out cwtl es inc sbb pop mov pushl add xchg mov lret push arpl daa dec dec loope insl cmpsb push daa adc (bad) (bad) (bad) pushl sbb inc (bad) (bad) (bad) mov andl add add cmp stos fisttpll sub pop inc and in dec inc insb out xor pop fnop sar (bad) jg lret es lock push push sbb dec pop insb cmp lret xchg sub test int3 jle pop aaa popf incl out pop adc mov mov lcall xlat lcall stos cld shr cld loope (bad) mov inc into hlt aaa cli pop ret scas popf test popf mov pop popf push cmp cmp (bad) ljmp sbb cld jbe dec xchg and cmpps push int dec sub push inc cmp (bad) jg shrb (bad) std sti lock test (bad) shlb sbb add lcall add cmp cmc in ret into jmp bound (bad) (bad) (bad) pushl shrb cltd sbb sub adc jae sbb addr16 and lds (bad) (bad) (bad) decl dec in pop push incb addr16 mov lret sbb lea adc jb cltd shrb dec std jg movsb jnp add nop (bad) cmp pop shl insl cld call jo dec sub xor hlt int pop inc xlat test flds (bad) (bad) pushl jno lcall mov jg add dec mov outsl mov jge icebp lcall mov (bad) sbb fwait imul movsl sub fild sub aad or (bad) call (bad) js dec (bad) pop or cmpsb cmp and push imul les stos pop mov mov inc imul inc jne outsb mov rcll mov icebp jg decl faddl incb ret inc pop out inc je mov mov sbb clc sbb xorl mov in aam add xor adc cltd fistp dec fmull std jne (bad) jg rcrl push add sub dec mov insb pop pop pop js xor std decl ret sub lock xchg or lcall add push push out mov aad insl sbb jo push sub xor jne icebp fnstsw cmp xchg cli lcall jno aad out jmp xchg (bad) xor sbb mov aad lcall imul mov (bad) mov xor xchg sub push jne leave lods das adc mov (bad) cmp shlb mov adc data16 int loopne jno mov jl pushl aas sar loope cli dec pop dec scas sub inc jne (bad) decl dec xchg pop mov mov ret rcr pop stos dec cmpsb cmpsb adc (bad) (bad) incl jns cmp xor jmp popf inc inc arpl das adc mov push inc mov pop (bad) (bad) call out sbb scas jmp subl repnz mov push (bad) pushl stos adc loop add mov dec inc push and (bad) lcall push pop xor mov jmp adc xlat loope,pt popf rcrb lcall dec xor sbb xor or in sbb jg lcall or xchg into add inc xor dec inc popf cmp and movsl test or roll flds test (bad) ljmp dec mov jne,pn (bad) lods jb mov xor scas adc mov mov stc xorb pop mov mov (bad) jbe mov gs or sub int3 and inc mov stos scas jg (bad) out hlt addr16 jle fcmovbe mov fmull inc sti dec (bad) pop cli pushl inc js xlat enter ja in clc push mov in xlat fist mov sbb mov xchg mov xor adc or pop mov or lock mov pop cmp xor xchg adc mov jg mov outsl loopne imulb add je cmp fldt lret lods pop sbb test sub int daa imul mov add stos push ja pusha and or inc les call dec loopne (bad) sbb inc mov in add xchg (bad) push (bad) (bad) jmp jecxz push mov mov sbb std push xor jle bound and mov dec add sbb push add xchg mov leave mov push lcall pushl addl fsubrl xchg mov das xor push test decl (bad) push jl adc repz icebp rcll add mov mul xchg (bad) mov js das xchg js xchg les add xchg aad decl je sub (bad) aaa sub jg mov das hlt (bad) mov add icebp mov mov mov sub pop pushf out mov dec sbb mov jb (bad) jo outsl pop (bad) (bad) (bad) call push dec (bad) add lods in jns mov rcl int repnz xor leave mov (bad) jmp or gs cltd nop sub sub mov into lret imul mov mov add dec jae xchg xchg fcoml xor std (bad) call cmp adc jno insl jo add push mov jg movsl pop jecxz cmp jno jo sbb loop inc frstor mov stc imul (bad) int ss cmpl cmp cld ljmp rcl jl xchg sti inc jg movsl aad mov (bad) ljmp leave stc sti cmpb ret mov jg repnz mov das fdivp (bad) (bad) mov (bad) (bad) loop jl push xor clc mov insb pop sub jns (bad) push mov push push in sbb cmp mov pop inc and and add xor mov jg or inc lcall (bad) mov lcall xchg inc inc pusha movsb das fs dec in stos lock (bad) (bad) jmp lea stc rcrb push mov out adc insb into imul inc cmp or (bad) xor int mov adc (bad) xchg mov sub jle lahf jae std cli dec push sbb push (bad) (bad) (bad) jmp lcall cltd or cmp or xchg sub lock mov mov pop pusha fisttpl fimul insb mov add or (bad) (bad) movsl es adc mov mov mov add outsl (bad) pushl sbb sub fldl pushf jne mov pop push mov push (bad) ss sub push (bad) mov out fbstp movsb adc mov int3 (bad) ds inc or (bad) (bad) jg out pop push xchg dec ret or pop jb xlat pop dec fcomps (bad) (bad) (bad) ljmp stos add push sub sbb xchg scas mov pop sahf (bad) and movsl iret mov xchg clc inc movsl lods fidivr (bad) inc mov sub pop dec pop arpl pop mov xor add mov mul (bad) (bad) jg sbb ret xchg inc adc and add fsubr shl jp ss outsl cld jg inc repz adc pop jb stc test mov jl mov ds pushl lcall sub inc mov out mov scas aaa xlat movsb dec push outsl jne jg mov daa (bad) or out sub pop (bad) (bad) (bad) lcall cmpsl jns scas into les into mov rcll popf pop pop adc inc scas push imul fdivl insb or (bad) (bad) jmp cld xchg lret jp lods xor push push inc outsl mov mov xbegin ljmp sbb loop decb adc movsl int3 inc xchg inc fcompp call clc div jle cmp pop fistpll mov idiv push in fldl mov cmc jns xchg fisubl jmp test inc std imul call and sbb cmp mov push lret movsl xchg cld arpl mov aas xchg push int3 or movsb xchg roll outsb dec (bad) aam fimul imul (bad) (bad) decl mov cmp dec push out adc jl jae loope xchg movsl dec or cmp or les cmc (bad) call out test sub imul rorb (bad) mov lahf cmp aas and cmp sub inc lret scas lahf imul mov mov sub (bad) jb or loopne imul push cs add mov ret sar in add xor ret mov sbb jg pushl mov aas roll cmpsl cltd dec gs dec xchg xchg cmp mov call fldcw das sbbb push inc cmp jns movsl loope shl (bad) (bad) (bad) call xchg mov in cmp ror pop out adc adc mov adc (bad) lcall inc pop inc mov push mov inc fidivl dec pop cmp jg fisubr jg int test jno daa imul fildll lock jns lahf loope lods adc dec shrd sbb decl in fldcw fs xchg sbb aam push je test fnop mov and pop inc mov mov (bad) mov das stc rclb (bad) (bad) (bad) jg into cmpsl imul jae push dec lods mov jl cwtl lahf cmp pop je (bad) jg xchg jp ficompl mov imul add mov loope cmp int3 jns jbe xchg mov in ljmp inc (bad) cmpsb lahf pop inc (bad) (bad) cmp iret mov ja mov cmp jecxz clc lcall sbb out mov mov jecxz cli arpl xchg pop cld (bad) (bad) fidiv daa shrl push mov xchg dec loope add out ret sbb cmp test push lret lret test jle mov cli test cli cmp jl and xor mov mov inc ja shrb ret fistp pop stos add mov sbb xchg mov xlat adc cmp and jno or les sub mov add dec xor aaa and dec adc sti addb addl clc jmp (bad) ds jp and out fisttp (bad) decl push mov xchg dec add dec loop in cli fnstcw std test (bad) mov sbb stos adcl jnp sub jo xlat mov (bad) ja and adcl jg std in or movq mov and inc fwait pusha xchg repz (bad) and incl push dec call pop mov (bad) jg xchg scas ss rcrb call (bad) lahf fwait sbb (bad) jg fwait cmp fadd sbb lcall cmpsb in add inc inc sub mov push and xor shl pop push call push jbe pop fisubl dec clc jle in (bad) out cmpsb clc mov xchg das jge imul push gs mov ret xchg aam (bad) lcall std inc cld pop add stc loop into mov jae scas int or mov (bad) (bad) fcomip xchg xor xor (bad) iret leave outsl mov insb cmp lcall std jge pop sbb repz xor jbe dec test lea lods test sbb (bad) (bad) (bad) mov mov cmpl jge dec repz mov cltd and test pushf pop xlat pop mov mov jno cli xchg add (bad) xchg cli jg add add repnz add mov outsl incl incl xor movsb push (bad) data16 lock (bad) jmp aam out add movsb flds jmp test into fisubrl (bad) (bad) (bad) mov mov dec test jmp dec adc adc adcl lcall mov mov ja or and aas mov cmpb pop and aad ja fistl stos std pusha fimul push stos pop xchg inc cltd idiv (bad) (bad) (bad) mov lea sub out sbb adc addr16 adc pop in lret adc sub mov fidivrl xchg push push bound loopne fistpll stos sti cmp mov pop rcr aas (bad) mov (bad) lcall int xchg aaa out cmp push leave fdivs xor cmpsl push inc test jo (bad) mov or cli mov (bad) stos repz je lock cs sar (bad) cmp stc jae mov (bad) icebp sbb into add (bad) or cmpsb sub sbb mov adc sbb in lea repnz test repnz mov lods push push fistl (bad) (bad) pushl fwait mov adc push push out xchg aas or sub or mov mov stos insl jno add mov or cltd mov pop add test (bad) (bad) mov inc fildll clc (bad) notl mov loopne xchg loopne add sbb jnp mov ljmp add or loope pusha jno pop or sub cld mov pop in sbb lcall std (bad) jmp inc push pop repnz pop test push mov out stos pop cmp rep mov inc or xchg movsl sbb hlt repnz in aad pop pop dec hlt pop mov (bad) jnp enter and nop jbe jnp add out stc mov adc bound decl inc mov nop es sbb (bad) lahf lret (bad) push cmp add (bad) fucomip pop mov push es dec scas sarl add test lods mov mov pop std call (bad) jbe lea mov xchg (bad) jg inc jbe sbb loopne stos jp adc push popa mov xchg adc (bad) (bad) (bad) (bad) cmp and les mov sti dec (bad) addr16 int3 adc mov test (bad) (bad) decl shrb cld jae dec loop psubd adc lock (bad) (bad) ljmp pusha jae sbb pop aas adc mov (bad) or les loope push (bad) mov (bad) subl pop sub clc jbe mov cmpsb mov mov fbld lcall test orb outsl hlt jg sbb sahf cmp or hlt imul lds cmp mov je,pn or lds lds (bad) push fild mov stc dec mov dec jl add (bad) pushf push add mov arpl cmc push jg mov inc lods loopne or cs ljmp cs addr16 (bad) adc jge cld fs call pop pop decl rorb xchg or stos jecxz push into (bad) xorb sbbb xorb xchg adc testb pop popa into in out ffreep add pop pop (bad) decl loopne or je mov xlat sbb cli xor lret idiv incl cwtl push aaa sti jne out movsl je les mov (bad) lcall inc sbb aad jb or clc adc movl mov (bad) incl sbb adc and dec sub mov stos clc pusha insb lock pushl xchg jg lcall mov push lods sbb sbb or jmp movsl jge dec push mov push pop pop (bad) (bad) lcall adc cmc and in lods imull mov push or sbb mov inc cmp stos cmp mov (bad) (bad) (bad) cmc ja dec shll aad imul incl ds mov (bad) (bad) jmp xlat jb inc clc cmp xlat mov and cmp cld sbbl cli sahf movsl (bad) decl ss sub jo mov out mov loope (bad) (bad) jmp dec inc mov and xor dec aas aad fisubl pop sbb cmpsb cmc (bad) mov (bad) mov jbe cld aaa enter stos in es stc cmp sub cld addr16 fild shl aas scas adc xchg icebp in in inc bnd fcomi leave pushf dec jbe xor mov or jl xchg incb (bad) nop mov push pop and sbb jmp pop sti add cld in and add decb lea and xchg mov mov (bad) (bad) (bad) (bad) aas inc ds int ds (bad) popa repnz xchg ljmp stc sbb cmp dec cmp cli fisttpll psubw (bad) (bad) mov and mov and es push add (bad) (bad) push dec or push leave lahf inc ds lret (bad) insb repnz lahf dec jle mov jg and jb jg shll es cltd in enter mov mov nop cmp push pop enter dec bnd out (bad) out aas (bad) push repnz iret and add sbb fild jl stc jmp sub mov mov dec imul imul sbb sub pushl stc inc leave aas inc incb stc adc jnp in es pop mov jle dec ficom repnz and (bad) (bad) (bad) (bad) outsl or jmp add lock ljmp test lock (bad) call divb or lret jle push adc repz test dec mov sub es repz pop test or inc shrl mov jge je inc call (bad) jg lcall or cs loope pushf inc test ljmp add (bad) push jg adc push popf jo sar (bad) (bad) faddl jo shr xlat or cmp mov fldl jo (bad) jg mov jno jg mov loopne add fiadd pop fldcw mov mov rorb jae xor mov decl loopne or dec jo jo and xor fdivl cli lcall sbb jnp insl add scas or push insl sbb das cld adc sbb loopne lea cmp mov (bad) sbb (bad) call movsl or sbb xor add pop ljmp clc outsb imul jl cmp sarb or std outsl pop (bad) iret rcr fldt fnstsw inc faddl loopne (bad) push fcoml mov fisttpl add add test aaa push pop adc ja fdivrl mov fild decl out loopnew (bad) stos add mov sbb xchg (bad) (bad) cmp add add ret pop xorl pop (bad) decl dec imul pop lds xor or das sar pop mov jmp sbb ror addr16 cli lods (bad) (bad) cmp adc (bad) xor sub in je decl mov clc je sub cs es int mov mov (bad) pushl movb or std inc dec mov pop jle push (bad) fist mov iret or cmp in fldl (bad) dec or loope mov leave sar fs mov (bad) lret push jle (bad) xor pop mov or adc incl mov lock push mov outsl movsb mov push add ljmp mov mov sti xor sub cs lret (bad) (bad) inc push (bad) sub jae sbb cltd mov nop lret add scas lds pop dec iret in jne cmpsl lcall (bad) jmp sarb mov xchg dec pop mov adc out pushl lret mov test add jnp (bad) (bad) jmp movsl notl jae iret jecxz les ss outsl (bad) in in call das sbb js ret pop sbb or push cwtl icebp cli push jmp cli xchg loope in pop push sub clc pop in cmp (bad) pushl lock jge fildl scas je (bad) xlat fisttp mov cmc jg mov dec xchg scas mov insb and ja jle xchg mov (bad) pushl jle mov pop mov or cli outsb adc clc xchg pop outsb (bad) (bad) mov nop push dec fdivrs jl (bad) (bad) fnstsw fiaddl popf fwait sbb sub (bad) loope mov fisubr mov out outsb out sub (bad) clc sahf in test movsl out pop push push mov dec (bad) outsl pop sti pop fs imul add mov mov (bad) mov inc out out out sti jnp jmp mov lahf cltd mov pushl out xchg lret das xor (bad) (bad) out add jl insb push push push jae ljmp insl aaa aam xor out xchg dec popa lods pop dec mov dec and mov inc sbb and test mov movsb shll outsl jae cltd cmp or xor inc decl push xor push lods std inc sub push movsb push sbb mov outsb (bad) scas in into nop nop dec test xchg mov mov dec xchg (bad) sar in (bad) lcall hlt repz cmpsl adc dec mov and inc cmp inc jne jl cmp (bad) (bad) ljmp lock bound movsl xor js cs or (bad) jmp and mov shrl scas rcll inc lds lea std in adc mov (bad) (bad) (bad) jg test test mov xor sbb inc leave pop adc cwtl mov cli ljmp repz icebp sub dec sub mov cmp mov call xchg movsb inc (bad) cmp sub dec cld inc and fwait clc inc mov sub jmp push in jg inc mov pop or lcall or inc cld incl mov loopne jle shrl das cmc xchg sub add push inc lret shll (bad) (bad) (bad) jmp or jge insb push lret stc adcb xchg adc and push (bad) (bad) decl jmp scas adc mov xchg inc adc pop xchg push pusha push nop call cli decl mov fs mov fstpt mov adcl incl call insb mov adc push gs cltd sub (bad) (bad) ss jge dec cmpsb inc adcl push inc call adc mov inc mov jbe jb arpl in and mov pop (bad) (bad) (bad) ljmp iret stc xor pusha hlt mov or xchg mov or or pop bound adc out push cld add shlb or insb xor push fsubrs (bad) (bad) (bad) (bad) cmpsl repz scas jnp push jbe out std (bad) or dec (bad) (bad) xor jmp je test xchg adc jns (bad) mov mov jbe adc (bad) call mov xor nop (bad) mov jl cmp push fwait or pop sti js in (bad) xchg nop (bad) lock call or imul push lock mov sar cld mov popf jmp sub push jo call or lcall (bad) ljmp jle cltd jmp lret stos xchg push test test repnz (bad) ljmp popa xor inc xchg and bound push (bad) pushf scas dec xor loop pusha dec sub lret cwtl jg xchg leave add sbb fistp shrl xor inc cwtl and jge push cmp mov decl fwait cmp and bound in test jl (bad) mov push jae jo sbb ss sbb cmpsb fucomi sub lock lcall call iret or repz cwtl dec add outsl pop ds mov ljmp cmpsb mov into mov mov call cli pushl fwait (bad) lret fdivr sbb sbb pop iret xlat inc imul add or movsl xor outsl je (bad) das fs jp push sub sbb inc aaa sar mov sbb and pop xchg sub rcrb mov fidiv std js pop sub jb subb pop mov cmpsb repnz jb push jne int3 js xchg stos rcrb or or xchg xor sbb add adc pop and (bad) (bad) decl sbb add fildl (bad) jae bound jno loopne (bad) decl js mov lea xor movsl lea adc add push popf mov lcall adc cmp hlt loope out (bad) pop divb xchg push jo xor xchg clc incl addb mov in xchg clc call daa mov inc push dec loop and lods mov cld inc adc lods xchg jmp cli and or push shrb mov lcall std add cld sbb mov out inc outsl scas insb jb js fmul dec pop or decb iret repnz (bad) ds test fstl call mov adc inc cmp mov lret dec xor clc (bad) call ss xchg lcall enter scas mov mov and adc jmp (bad) (bad) (bad) pushl push xchg pop push lret aad mov jae xor sub or dec mov (bad) (bad) decl mov (bad) jmp test mov rorb (bad) dec in ret sub out dec pop fwait inc jae insl cli mov mov fdivr outsl std inc stc ret pusha pop xor mov and xor pusha cwtl pop push or loop pushl mov mov lcall mov hlt fstpt lcall adc dec mov sar xor and xlat mov les cld mov inc dec mov (bad) int mov loopne (bad) mov xchg mov pop sub popa inc addr16 fimul pop incb push xor mov inc test xchg cli das icebp dec xchg (bad) add fs aad ss cmp add fdivr or bound mov xchg jbe cmp mov add fidiv (bad) call and add xchg mov enter jns jno xchg outsl daa ja (bad) (bad) (bad) call inc mov lds jno imul popf inc adc add (bad) (bad) jmp push dec inc mov dec loop cld inc jp cwtl adc punpcklwd xor aam ds aad das push call cmpsb in mov sbb add sub (bad) jg cmp push pop sbb (bad) mov and fs push push and pop sbb das cmc stos rcrl mov xor cmp scas jmp (bad) (bad) call lods jns xchg decb lock repnz cmp push inc out movsb dec mov sub cmp movsb mov inc pushf ret jb movsl xor stc xchg push jle (bad) (bad) (bad) ljmp jl sub aad les jecxz add or in ret jp int3 stc push call clc ret inc lods mov sbb adc dec push push (bad) in adc (bad) jg inc or mov xor cwtl mov jne imul cltd cli out mov xchg mov pop fsubr loop jae and pop scas jmp inc repz adc dec push xor and shlb dec and mov and add enter sub dec clc call pop inc and push pop mov in cmp lret push xlat cmp add pshufw push data16 repz decl jl dec xchg js imul push es mov jecxz outsl mov dec mov mov movsl dec and out outsl xchg das sbb ljmp icebp aaa loope sub sbb sbb dec outsl jo fbld jae cmpsb cmp sbb jno and and nop outsl std fbld xor inc sbb lock ret inc sub jge idiv (bad) incl bound lods adc ret stc je inc cmp jnp sbb or icebp (bad) jnp adc sbb mov sbb (bad) call (bad) cmp mov sub push (bad) aaa push push push cmp jmp sbb mov mov pop pop sub repz clc clc push insb sbb push sub (bad) (bad) (bad) mov xchg popa repnz mov ss loopne push (bad) push dec xor inc sti dec (bad) (bad) in inc loopne cmp cwtl data16 sub out test cltd fildll jne add or aad ljmp call fldenv dec stc sbb lret pop int xor xor sahf (bad) lcall jge mov jmp loope inc mov mov in icebp in xchg mov rorl in shll jae fidiv bound ljmp dec sub adc mov out (bad) mov cmp mul ficomp icebp test hlt jmp dec ds (bad) (bad) jp (bad) jnp jmp cli fimul mov (bad) mulb clc jg jle out xchg enter push pop sbb cltd pop (bad) call movsb and sub rol shrb cld inc pop popa mov je sub adc and cmp (bad) (bad) (bad) mov xchg and add out mov stos aad out xor cmp (bad) jle cld fbld dec push push or dec lds sub movsb mov pushl push xor jle add insb sub ret lods pop dec fs add sub (bad) (bad) decl adc lods mov clc lcall jne (bad) pop push pushf sub out mov les pushl outsb lock mov lea inc xor mov jno pop loop std dec mov push sbb xor jl call call inc dec mov push xor imul int clc call pushl mov xor adc ret or leave pusha or shl jg push popf cmp lcall (bad) (bad) (bad) mov mov fcoml sub imul test movsl inc adc (bad) (bad) ljmp clc fistl jg xchg inc clc lds adc loop lcall ljmp jg xchg aaa and sbb lds jle les clc (bad) jmp add imul jg mov lahf jno xor decl lock (bad) mov pop xor stc sahf or (bad) aad dec inc in xor push xor clc pop cli or and psraw pop add jg cmc incl push loop inc js cmp ja (bad) (bad) pushl pop outsl test scas cmp les js ret ds ds test int int3 pop cmp sub adc adc cmp fstp jmp ds decb iret inc cld (bad) (bad) jmp sti loopne ljmp pop inc in (bad) ficomp in xor test test xlat inc js in lcall jle ss mov or mov (bad) jo test out sub lret js xlat mov (bad) (bad) lcall loope pop xchg pop loope test out decl pop adc test (bad) lcall aas xorl iret inc cmp popa and lods push (bad) sbb scas adc push mov ret pop icebp pop and (bad) (bad) (bad) lcall and aas sub lahf and mov adc sub std push adc (bad) (bad) (bad) pushl adc jecxz and cmpps pop sub or aas push jle add rcrb test mov (bad) dec cld jmp jl mov xor ja aad inc in clc lea ret and mov inc repnz inc jnp lahf sub nop jl movsb pop jo adc ss adcb (bad) (bad) push jge aas sbb aad or mov mov (bad) (bad) in cli lods or fild icebp add xchg pop sbb icebp or jg mov sarb or jnp ds out clc outsl push incl in inc jmp movsb lcall jo lock call fmuls leave mov lahf (bad) out popl ljmp clc fldl push fbld jle sub jbe (bad) (bad) jg mov cmp adc scas (bad) pop jg popa cmpsl mov and and inc lcall ljmp icebp in (bad) cmp repnz into addr16 (bad) outsb cmpsl mov cs mov lahf popf pop mov add dec sub shrb pop mov pop xchg pop xchg fild rcrb icebp cmp pop mov addr16 loope ds insb das or outsb ljmp scas lret movb outsl pop jno fiadd popa ja sub pop (bad) lcall mov cmc psrld mov sahf das std aaa outsb mov or mov cmp (bad) decl (bad) ljmp cmp (bad) xchg clc cmc mov pop (bad) mul pop ret cmp jg loop rcr xchg mov ret jmp mov adc (bad) in jnp loope inc lea popf or sarl loop ret icebp xor cmpsl mov adc arpl das cld fild mov cmp lock cld jae pop mov bound or or pop or clc aaa dec pop inc inc push fimul out pop lea mov rclb mov mov les cld in jg jnp ret cld mov js mov pop mov jp ds out movsl call pop nop cld sbb sbb lcall (bad) (bad) (bad) ljmp outsl (bad) (bad) (bad) clc mov cmp ljmp cs inc repz inc les std decl aas inc jl dec out mov out fwait and jecxz in xor popf sbb fwait mov add scas sub mov jg movsl mov loope leave mov mov test inc jae and xor jne leave not pushl ficomp movsl xchg cmp std adc xchg jmp (bad) sub lea mov dec fiadd leave fistpll in mov pop inc repnz frstor loop popf sbb inc arpl test mov clc inc cli fstl jo dec dec jg jmp inc cli ret or dec aas push (bad) ficomp outsl mov jmp mov push cli outsl xchg in (bad) lock cld jnp (bad) pop ljmp pushf jno push sbb ficom lock or inc (bad) in or cld (bad) (bad) call call mov out sar adc xchg lcall repz (bad) (bad) cmp outsl icebp adc xor outsl es stc leave fiadd mov test push outsb lock icebp inc hlt mov (bad) mov faddp sbb pop cli js sub jmp lock jg loop adc xchg (bad) lcall decl testb pop fbld cld add addr16 jl insb and incl jmp and insb outsl add push push jnp insl loope pop mov fildll das cld or icebp fisttp adc adc xchg xor (bad) lcall ljmp inc cli xor int3 mov xchg xlat inc not sbb push push movsl sar (bad) negb lret dec pop mov pop mov mov stos shrl movsl lods adcl and decl mov and pop in fcomip cld mov pop mov pop loopne nop mov std mov and iret pop insb add pop xlat jo clc notl jl outsl insl and inc jmp enter push jnp sbb add and adc fistpll shr les xor fild adc notl ljmp xor rorb outsl jbe or jg mov fistp je test mov xor arpl mov sbb ljmp or sahf (bad) lock cs adc mov (bad) pushf pop call dec push int3 jge (bad) ljmp push int3 add (bad) jmp or mov push xor (bad) jg mul cli dec fcmovnu cmpb aaa fstp fucom dec js into pop pop xor rcr loope xchg sub pop adc and cwtl insb pop in mov fstpl lock (bad) (bad) (bad) lcall cli loope lret ret ja jecxz imul pop (bad) clc (bad) pushl xor mov (bad) iret jne cmp hlt das std (bad) mov add inc out sub sub mov cs rolb movsl mov les (bad) jg dec or repnz je pop push in inc fcomps pop (bad) (bad) mov dec sub hlt stc xor mov stc arpl inc cmp sti das cld mov pop test and jo fistp roll jnp ljmp xchg divb cs push xchg push outsl (bad) fistp pop ljmp sbb or call jg add leave or mov inc inc dec pop fsubp test test sti andl dec test lods add lods jge test push push lcall (bad) jge jg mov aas (bad) fmulp and mov xchg inc sbb (bad) ljmp or pop add mov mov cld cmpsl jmp ds (bad) in add mov (bad) leave sbb sub xor cld push mov pop call clc insl out or pop out (bad) mov mov xor push and push mov jmp cmp nop stos push xor or jo inc psubusw xlat mov lea ja mov lcall (bad) (bad) mov test push jbe loop fs fwait std fnstsw jmp insl pushf xchg pop lret mov push cmpsl inc xor insl pop jg pop loopne fcos (bad) decl inc sahf or leave out or pop pop imul inc add dec (bad) (bad) (bad) call mov roll cmpsb mov mov sbb imul pop or push and (bad) (bad) ljmp sbb ds lret inc daa ja dec mov push adc jne (bad) jg xor cltd xchg ja out mov xchg (bad) sub int dec mov dec inc dec je xlat test mov dec (bad) (bad) lcall adc push jae adc das push stos dec nop add sbb es lcall loop or fs xor push iret in xor mov mov enter (bad) in xor out stos xor or xchg xchg jns add push incl adc fcomps pop fwait popa int3 push or pop loopne ret xchg and pusha sub xor push aam (bad) push sbb sar pushl iret and leave insl sub cmpsl pop aad (bad) imul mov jecxz lahf out add (bad) enter mov (bad) (bad) decl std jmp xlat mov push out int3 (bad) dec mov and decl icebp xor hlt cmp inc in inc pop (bad) enter fdivrl test cwtl test mov das cld fmull push mov sbb (bad) in add push outsl or not jle (bad) (bad) jmp push lahf inc call cwtl xor xor insb pusha and popa outsl int mov xlat cmp call testl push jle lods push mov (bad) call lea in push mov jle (bad) mov dec dec in inc dec adc (bad) (bad) (bad) (bad) fnstenv jno rorb or mov rcl fcompl cmc sbb in ret (bad) xor add inc cmp sub lret loopne loope sbb les sti (bad) (bad) (bad) lcall addb movsl test pop sti repnz cmpsb rorl sbb push jo sub mov add ljmp cmc mov push fdivrs cli xchg or mov sub ljmp adc adc and sbb inc imul jno decl das gs cltd or movsl shlb fsubr add inc xor push stos lds imulb ljmp lcall jb lret in popf mov (bad) (bad) cli stc mov jb das fwait dec push xor imul inc jmp fs flds js rcrl adc mov adc mov (bad) decl xchg data16 (bad) push and lcall fimul pop sbb ljmp cmc xchg mov sbb pop aam push aaa clc incl lds and lods cmp or (bad) (bad) (bad) decl dec sahf adc outsb fcmovnbe jo mov inc jns (bad) fdivr inc es lcall (bad) xchg sub add cmpsb adcl stc jae inc (bad) cld test call (bad) ljmp les inc int sub cmc jg (bad) stc popa lock (bad) inc test stos out push sbb sub and sbb rorb mov cmpsl lea lret add adc or ljmp jne stos fld test mov lods jl dec jle pop sahf adc (bad) (bad) (bad) incl xchg dec sbb mov mov jb movsb inc adc mov xor dec out cmp incl inc (bad) xchg sbb push repz sub test xchg (bad) outsl hlt ds (bad) sbb cmp mov push xor sbb pop mov or lods sub loopne (bad) xchg adc push inc cmp push aam inc push inc mov and decl xor sbb inc and or aaa xor adc xchg or jns mov repnz (bad) (bad) (bad) lcall pusha fs imul adc (bad) dec mov dec cmp xor pop call fs xor fstpt and sbb mov (bad) lahf jecxz out lods fucomip lcall push addr16 dec push shr (bad) push jmp mov (bad) (bad) (bad) lcall mov xor mov sub stos xor rclb dec sbb fidivr (bad) fnstsw jmp insl jmp call movsl push (bad) pop or mov mov stos test insl out lcall pop lret dec sub aas outsl movsl std mov repnz mov (bad) (bad) lcall xchg mov xchg pop imulb icebp lods ljmp push repnz mov (bad) (bad) dec scas in bound add faddl sbb cmc insb sub loope cmp incl into divb rcr dec sbb dec jo xor repz loope or inc cmp pop mov (bad) (bad) (bad) decl cmpsl sbb lea mov sub enter mov arpl (bad) clc sbb (bad) in sub adc pushf or jmp cmpsl push decb pop (bad) push arpl clc (bad) decl cmp fimull sub test leave shr xlat rcl and enter call loope inc xchg aas lods pop fimull adc jnp add aaa cli sahf ljmp jno sahf pop pop (bad) (bad) rcrl (bad) jo adc adc ja (bad) out mov aam (bad) (bad) fldt ljmp fildll pop jo sub outsb push in and xchg (bad) decl dec jmp mov fwait lds push pop dec cmp int jne sbb (bad) (bad) push mov sbb mov (bad) mov cli xor rep loop or (bad) (bad) jg mov push push sbb sub or mov adc fsubp das lock mov outsb pop sub addr16 adc and mov mov xchg adc inc out loopne decl jle jl lods sbb jbe xchg dec lahf scas in outsb xor fldcw (bad) fild shrl mov in push mov (bad) call mov fistpll sbb xchg call push mov mov sti daa mov push stos push mov cmc in cmp inc data16 (bad) stos (bad) call jp dec out cltd mov xor (bad) lea je shrl mov jo cmp dec xchg pop movq or shlb (bad) jmp gs pop jae mov mov sbb scas add (bad) jle push jns (bad) rcl and (bad) mov mov aad or (bad) (bad) dec lahf lcall data16 jp addr16 xchg das pop clc icebp sahf leave xor (bad) fidivr in mov (bad) std jnp adc lods mov fwait mov repz add jno leave (bad) (bad) (bad) call lret push mov (bad) xlat scas dec fsubr fidivr mov xchg int (bad) jb lock decl sub hlt movsb and (bad) cmc ljmp push lods push mov out pop sub hlt dec mov das pop mov in (bad) jg sub into popf cmpsl sahf ds adc mov cmpsb iret cli cmc or (bad) (bad) lcall jae xchg sub mov addb adc test push jne jle (bad) mov pop je cmp jmp jae inc stos push shrb fidivl fistp jno push aaa out fisubr (bad) jnp addl fildll xchg cld (bad) mov cmp int jmp stos fwait mov (bad) jg lcall lods fucomi push daa dec add ss in pop xor cmp out enter (bad) ljmp adc or inc outsb outsb cli mov add sub (bad) decl dec xchg dec das movsl clc cli (bad) mov mov pop in cmp push sti rol (bad) fldt scas mov mov mov bound mov jns (bad) pop jge mov pop je cwtl loope (bad) (bad) pop in imul (bad) call dec arpl xchg mov mov out int (bad) pop mov fdivrp jne shl lret or jo jecxz xor pushf cmp ljmp pop mov andl outsl or lret icebp dec inc aad (bad) adc push mov (bad) int int3 sti out imul mov fildll inc std aad aaa jns ss (bad) ljmp dec popf sbb jmp (bad) fildll or (bad) fisubr jg push push rolb and (bad) pop jns mov sbb outsl hlt call aam leave int fnstcw mov test lret mov pushl or mov jl fcomps (bad) scas (bad) jg ljmp fwait mov jg pop adc adcl jns cmp (bad) mov mov pop js lcall jl shlb shll adc (bad) lcall inc lea mov int3 test jae push in (bad) push scas mov int3 neg mov jno into mov fsubp in push pop mov ljmp outsl mov push sub cwtl pop (bad) stos push ljmp lock loop out sbb mov ljmp (bad) (bad) jmp mov fstpt inc fsubl in mov shl nopl mov std (bad) ljmp (bad) dec fwait push sahf dec dec pop ds jb daa cmpsl mov push (bad) mov mov test or pop mov dec stos jecxz aas imul lods cmp aaa jle lock aam fnsave (bad) scas fdivrl pop (bad) pop cli adc ror lds xchg sub loop inc (bad) call decl repz cmp out aad xlat test nop icebp (bad) push aas cmpsb xchg sbb dec mov lret (bad) fcomip cmp loop jns dec push sbb mov cltd xor cmp lock loopne (bad) incl mov mov std inc mov pop fcmovnbe (bad) xor cmp loope cmp cmpsb (bad) add mov cmpsb mov xchg (bad) (bad) incl mov cs pop lods dec aas push ja in lret sub out cmp jno push gs xor incl jnp std dec fisttp jns mov cmpsb in arpl jmp lcall sbb mov fldcw jge lret ljmp lcall (bad) push push movsb cmp rol lret dec fisubl (bad) (bad) xchg js ret sahf or xlat repz jns (bad) mov (bad) por outsb je (bad) lcall clc mov mov or hlt out inc push push cmp (bad) decl cmp ljmp sti dec jmp fiadd dec cmp (bad) pushl pop std out cli pop mov pop ret imul adc xchg jp fidivl ret sahf sub icebp into fnstsw mov test mov cmpsb std loop cmc cwtl jle inc mov mov push iret stos hlt test push aas push stos leave xchg in (bad) jecxz push jg sub addr16 jnp (bad) (bad) (bad) jg jmp pop mul loop ret std add pop repz into sub ret lods movsl push cmp lcall ljmp cmc in cs adc movsl sbb xchg outsl adc jae insl outsl hlt (bad) call aad pop mov insl ljmp sbb (bad) ljmp lock pop sti mov scas jge mov inc (bad) (bad) (bad) pop push out movsb sti call cmp clc rol cmp mov (bad) push sbb repz cs xchg fimull jg sub fwait aad jmp mov outsl call mov or pop call movsl popf push xlat dec mov outsb jecxz out (bad) (bad) ljmp sbb mov int3 jne jle int3 or or fnstsw pop (bad) sti lods call aaa xchg (bad) sub mov fimul mov jae shrb ljmp mov cmpsb fstp mov (bad) jg mov sbb push lcall aam imul icebp adc inc lea dec aam jl aaa outsl imul std mov push jp lds outsb in pop push jbe pop test jne inc fwait dec fsubrl ljmp imul (bad) cmc or lcall xchg out mov adc imul ljmp sub sub fcoml push push fxch ja das std fbld mov mov adc aad jg (bad) jl sti jle push in insb add call pop fdivs (bad) mov (bad) push gs call push vpacksswb outsl jge lock fsubs out cmc (bad) (bad) mov mov mov out adc push (bad) (bad) ljmp imul mov and cmp inc hlt hlt fucomip ret mov fxam aas pop hlt jbe cmpsb les push insb jg sar cmp dec mov jae pop push fimul fdivp push and mov pushf push (bad) int mov (bad) lcall pop sub mov cmp cld mov mov (bad) (bad) (bad) lcall sti pushf mov pop jne pop scas or pop mov sahf pop cs fcompl mov out inc (bad) (bad) (bad) pushl pop jae sarl jge jne push les mov pop xchg pop dec mov push imul jp ja in pushf in sarb pop fstpl adc cmpl daa icebp jo dec sub clc (bad) (bad) pop pop cwtl loop xlat mov pop jmp out and (bad) je stc dec mov jge jmp push sbb sub mov (bad) xlat mov pusha fistl pop sarb test mov cmpsb popf ja dec aaa push ss cltd dec and movsl push fisttpll faddp incl jo repnz jnp aad je cmp nop mov jg (bad) mov movb jp idivb outsb cmp insl repnz mov std (bad) cmc cli xchg sbb dec test imul in bound decl in ds hlt aad jne lret ficom mov mov (bad) (bad) call jnp imul lcall (bad) ljmp xchg lahf movsl sahf rcr (bad) (bad) incl mov js ret xchg lret mov dec ds mov mov cld jmp xchg aad std into int insl outsb jnp jg jg push call stos push pop dec lea cli mov xlat fnstsw push or movsl scas in add xchg and dec divl sbb xchg cli (bad) ljmp ss fstl ss dec out (bad) pop mov je (bad) (bad) inc push aaa (bad) xlat mov (bad) mov push inc popf ds gs in fistpl add aaa jb cmp arpl fstl lar (bad) lcall inc sarl push in test sub in mov jnp das cwtl fucomp in movsl lcall ljmp lahf loope jae (bad) icebp rcrl hlt pop mov lcall pop xchg xchg dec add inc xor enter xor int rorl call push hlt inc cmp or xchg daa cmp (bad) imul xor lahf outsl mov cld xchg push mov jae (bad) or (bad) (bad) jg mov inc mov nop adc insl pop addr16 icebp jbe sbb lods mov (bad) (bad) (bad) call js sarb push je cmc daa push ficomp repz push mov stos lcall mov pop cli nop xlat xor push xor jbe jg rcl lahf stc lock mov mov test js stos push ds fbld pop cmp push sbb js cmc cmp sbb stc jb pop sub incl imull xor jl push mov xchg (bad) xor push pop push lcall decl jmp mov lock cmp dec int fist mov aam repnz (bad) (bad) dec cli (bad) ljmp lahf xor div ficompl shl insl or ss aas push xor cmc sbb mov in cli adc fwait jo hlt in xlat jbe iret cmp lock add fdivr fcoml inc repnz idivl push fldl mov pusha shl addl push mov fisub mov push and jns lods jns cld lcall mov (bad) pushl mov mov movsl aam les dec imul xor imul stos pop ret sahf pop push stos jmp xor xchg ljmp (bad) ss fidivl loopne mov (bad) mov (bad) (bad) (bad) jmp pop aas fs sti cli mov xchg into pushf push scas rcrl inc (bad) mov push mov (bad) std (bad) mov in xor dec cmp iret lods or xchg sbb mov add xor inc aad test stos sbb sbb pop ljmp fildll icebp pop clc fcomps ds insb xchg je jno rep cli pop jp test cmp or fisttp scas inc lcall xchg pushf push fnsave xor rcrb dec jmp mov iret cmpsb insl cmp repnz ljmp pop xchg test sub andb fildll adc shrl xchg popa xlat xor mov loop incb or push adc movsb xlat sbb fistp jns lahf repz jne lods add sbb push sbb adc subl imul sub repz xchg cltd pop pop out mov mov outsl in insl icebp test push (bad) ja out or mov sahf mov std dec add call xor pop jb cld mov cmp xchg imul pop (bad) (bad) sarl dec lcall mov pushf xor (bad) mov fimull adc out sub je mov jnp je mov popf jle (bad) jmp mov inc ret jnp sbb decb outsl outsl jne push (bad) add inc nop cmp jg clc pop sbb adc (bad) (bad) pushl das das cmp xor cs das push insl insb popa das insl outsl fs mov das js jg imul jo jae addr16 inc ja add jb mov dec push push inc xlat incb pop and push push das xor or lret push mov bound js sub and imul ja or mov sub aas dec outsl jp insb xchg xor pop in push push sbb and dec imul cmp or sub jbe jbe and adc and sub inc out das jbe mov xor xor bound mov mov jne push xor push or and mov xor inc arpl sub jp outsl or cmp pop xor push push je and or sub insl test sub (bad) pop in adc pshufw fcmovne imul adc pop loope in sub sub inc push dec jbe std call sub sub je or aaa sub and lods mov mov test and mov mov jbe jb and pop inc add fs dec adc dec add (bad) mov push push inc add push insb ja and and and push xchg arpl and and das jns push pop push and sub (bad) mov pop jo lea popf insl xchg pop push and inc jae ds sub xchg pop cmp popf clc lret xor inc (bad) leave and cmp insl pop or mov movsl sub imul add sub je xchg rolb mov and dec nop test das arpl and pop xor sub data16 add pop sub add popa adc das or xor push jo outsl mov pop add in add or stos mov arpl insl inc (bad) mov frstor inc pop jno dec repnz pop push jbe mov pusha xchg cmp add orb add cmpl popw insl mov incb bound jae mov adc pop jns notb inc push outsl add fs or out mov push inc jbe outsb cmp cmp insl (bad) out xor stos incl fcmovu add clc and or push cltd dec mov inc icebp or jb push push inc push push test dec pop xor xchg (bad) (bad) push xor ja push out mov les (bad) hlt incl push mov jmp fisttpl movsb mov (bad) jns jmp rclb mov sub mov sbb lcall push jno fiadd test ficompl jmp (bad) mov hlt movl insb adc test fs (bad) std in leave mov add insb push mov icebp cli cmc or jecxz adc in pusha aad jno cli mov jmp inc aam dec std test cli test xor or inc stc mov xor fild and dec or shrl ficom push xlat enter call popa sarb and mov cltd xchg mov mov (bad) pop clc decl or and or dec push sarl mov inc fdivl jno add aad mov mov movsl or mov call xor pop mov or mov cmp fs add out push imul test bound sbb xor dec cmpsl repnz xchg push insb jnp add (bad) hlt or movsl add jmp mov cld (bad) pop cli lcall ficoml gs xor into sub (bad) jg cmp mov aam movsl fisttp xchg fsubs shll hlt (bad) shrl imul mov sarb add sarb pop dec or jno push stos inc add mov mov and test or mov (bad) (bad) jmp popa into push stc ficomp leave fldcw and xlat (bad) pop cmp mov cmp lods cli pop std ljmp and mov inc (bad) mov cmp call ja popf adc push fdivl or test fs ds (bad) (bad) fistp pop push or push in decl xchg daa scas mov sahf pop jge stos (bad) (bad) xchg (bad) fimull xchg add inc push imul mov ss sbb push imul aam loopne rorl (bad) (bad) jg int3 dec fnop fistpll mov mov aad mov call xchg shll (bad) push repnz addr16 cmpsb fnstsw pop std jg dec ss fisubrl or cmp ss jp inc ret out (bad) lcall pusha fist test mov jns imul andl shrb (bad) jg and ja int3 add mov das es (bad) (bad) ljmp or sub mov cmpsl call ret (bad) mov sahf fldcw ret (bad) ljmp std es pushf mov add ss jmp addr16 jb push add (bad) (bad) incl adc mov jnp sbb xchg or out fdivrl (bad) (bad) (bad) decl aam roll clc mov push int mov mul ja outsl ja mov (bad) jg sbb pop jge push dec cmp pop or adc sahf gs scas (bad) clc sar (bad) (bad) inc imul push js or push addl mov cmp cmpsl divl pusha rorb imul pop xor or inc (bad) (bad) lcall aas aaa push scas mov fidivr mov jmp repnz lret (bad) pushl xchg mov cmpsb mov sarb sub push mov jp mov dec popa les pop ljmp dec or mov fild sub add add and bound sbb pop insb mov add bound hlt pop ret add bound pop inc inc bound push add pop sub sub push push push xchg mov xchg push push and stos stos fs sbb xor dec inc push push push and xchg inc jne add stos inc push or rclb testl js inc (bad) outsl inc lods je push outsl outsl insb push push outsb popa jo push mov jae outsl je xor or inc add mov mov push or in lds push imul xchg imul push aam jbe and or xor adc jo pushf mov or lret add push jnp fwait add mov mov data16 push jle or pop mov mov inc in dec and test jbe adc jnp adc push push mov xor inc js mov rcr inc imul push jg pop (bad) xor adc inc aam out aaa inc jne xor inc js ds jne gs cmp test dec inc or xorb inc sub inc nop leave and push adc lods mov xor or or (bad) fdivrp mov push imul inc push adc and adc push and sbb or inc or aam push xor movsb cmp sub lea dec outsl fs push xorl inc inc lds aaa test dec mov and test mov dec inc fs movsb mov imul in pop or arpl enter mov or out and mov mov test mov push or push or push mov xchg pop sub outsl and stc adc pop push jecxz shlb movl inc or push mov adc push gs cmp sub dec inc rolb es cld out inc (bad) adc je mov ja jnp dec mov mov addr16 pop and bound loope mov push inc push adcl and fmull sbb pusha adc pop adc mov das sub jns popa ret push jns jp cld and push and jne sbb inc xchg xchg add push dec or dec lods xor xor sub (bad) and fucom xchg incb cmp xchg jno out xor outsb sub mov out stos outsb pusha icebp adc js (bad) fwait push dec js and or dec add je mov arpl insl outsb je dec lea gs cld cmc fcomps test push xchg or dec mov pop jecxz dec jo loop inc test add cli cmp add shlb jno jl cmpsb add dec insb outsb in icebp (bad) sbb cmp pusha mov addr16 cmp add add jne andl cwtl jae cld dec gs push fs pusha (bad) fbld xorl xor gs sbb push (bad) int inc inc dec push sbb mov in adc mov add dec or and popa pop addl push call push inc outsb fs or mov xor sub inc aam xchg xor mov fist mov push aam xor (bad) xor jae jmp push xchg or cmp and push lods mov popa xchg fisubr sub cmp (bad) call pop dec push sbb sbbb cmp inc mulb shlb add inc insl ret xor (bad) mov adc imul add push jne pop out pusha icebp xchg mov and or pushf push test dec lahf out or add inc push dec mov imul sbb jb je sub sbb add pop dec mov loopne jo je adc call add adc xchg in inc pop add incl add xchg push xchg gs or adc or ja mov push inc scas inc sbb jb mov fldt jns mov (bad) push jae dec push jmp add add add cltd add add xlat jne adc xor inc or add pop xor (bad) push add add pop lods popa inc inc mov enter aam or daa sbb mov test in into inc shrb pop inc pop add and cwtl adc mov and push sti pusha add sti lock ret or in nop add mov cmp in lret flds add adc mov dec add pop sbb aas push sbb add add add add add add cmp add call int jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call popa lea push cmp jne sub jmp 